an attack expensive. By charging a one-time sign-up fee,
647
the system can further increase the cost of such an attack,
although it is impossible to eliminate it completely.
3.8 Herd prototype
Our prototype implementation consists of a core Herd
module written in ClojureScript (3, 289 lines) and a network
module written in C (3, 159 lines). The core executes on the
node.js JavaScript runtime. In addition, the implementation
relies on the OpenSSL and curve25519 libraries for TLS and
cryptography support.
We implemented the core in a language compatible with
JavaScript to enable future distribution of the Herd client
via standard, encrypted web channels, and execution within
a browser. The network component ensures consistently
timed packet transmissions, despite garbage collection or
other events in the managed JavaScript runtime. The mix,
SP and client software currently run as standalone programs
on Linux. Porting the software to MacOS or Windows is a
matter of preparing appropriate installers. Finally, our Herd
client supports the Jitsi VoIP client [6] and should support
other SIP-compliant clients with minimal effort.
3.9 Summary of contributions
In summary, the key contributions of Herd’s design are as
follows. 1) Herd introduces zone anonymity, which guaran-
tees that a user’s anonymity depends only on the their own
choice of a zone provider, independent of the choice of their
communication partners and other users. 2) Herd employs
a novel hybrid architecture, which shifts resource require-
ments from its trusted infrastructure to untrusted superpeers
without affecting anonymity. Thus, Herd can take advan-
tage of untrusted peers willing to contribute resources (for
free or in exchange for free calls) to increase scalability and
reduce operational cost. 3) Herd exploits the speciﬁc work-
load characteristics of VoIP trafﬁc to provide trafﬁc-analysis
resistant anonymity with low bandwidth cost.
4. EVALUATION OF HERD
To begin our evaluation, we show that when a trafﬁc-
analysis resistant anonymity network is not used, a powerful
adversary could trace 98.3% of voice calls performed among
millions of users in our mobile phone call trace.
We then conduct
trace-driven simulations and exper-
iments with our Herd implementation to compare the
anonymity, scalability, and call quality of Herd and Drac.
We ﬁnd that, in the median case, Herd supports anonymity
sets comparable to Drac and has comparable call quality, but
reduces client bandwidth by up to two orders of magnitude.
Herd requires some dedicated infrastructure. However, we
show that untrusted superpeers that contribute resources for
free or in exchange for free calls can reduce Herd’s opera-
tional costs from $10-100 to $0.1-1.14 per user and month.
4.1 Anonymity and scalability
We rely on a real trace of phone calls among millions of
mobile subscribers to compare the anonymity provided by
Tor, Drac, and Herd, and the scalability of Drac and Herd.
648
Here, we use trace-driven simulations instead of testbed ex-
periments because we are interested in comparing these sys-
tems under a large, real voice workload.
4.1.1 System models
We use simulation models of Drac, Herd and Tor, where
the ﬁrst two use a chafﬁng strategy as described below, and
the latter uses none.
Drac. Drac maintains one chafﬁng connection for each link
within a social network, thus hiding the call patterns within
the social network. As a result, Drac’s bandwidth require-
ments are proportional to the degree of nodes in the social
network, i.e., the size of users’ contact lists.
Herd. Herd relies on a small, constant number of connec-
tions at the clients (3 in our simulations), and it also em-
ploys SPs and carefully orchestrates rate changes on the
links among mixes to reduce the load on its trusted infras-
tructure. By doing so, Herd achieves zone anonymity while
minimizing bandwidth requirements.
Tor. Tor does not employ chafﬁng and so does not offer any
resistance to trafﬁc analysis.
4.1.2 Datasets and methodology
Mobile dataset. To determine the anonymity and scalability
of the different system models, we use a month of data from
August 2010, comprising 370 million calls among 10.8 mil-
lion users of a large cellular provider (IRB approved). The
dataset contains call times, durations, and salted hashes of
caller/callee telephone numbers, and indicates which hashes
are subscribers of the cell provider.
We use only the calls between subscribers of the carrier.
This gives us bidirectional information for each subscriber
call, and consists of subscribers who would reasonably use a
single zone in Herd.
Social network datasets. The call partners recorded over
a one month period may signiﬁcantly underestimate the ac-
tual size of contact lists (which determines Drac’s bandwidth
overhead). Thus, we complement the mobile dataset with so-
cial network data to explore Drac’s properties under a range
of workloads. We use Twitter and Facebook datasets with
54 million, and 1, 165 users, respectively [23, 41].
Methodology. We evaluate our system models using trace-
based simulations. When evaluating anonymity for Tor (Sec-
tion 4.1.4), we conduct an intersection attack using 1-second
intervals for call start/end times. For the cost analysis in
Section 4.1.6, we aggregate the call start and end times into
one-minute bins to improve the runtime of our simulations.
We determine the peak number of calls and statically provi-
sion the Herd topology of mixes and SPs accordingly so the
network has enough capacity to handle the peak call rate.
4.1.3 Goals
Anonymity. We characterize the anonymity provided by
each system as the number of clients who could be the corre-
sponding party, given one known party in a call (anonymity
set), under the threat model described in Section 3. In Drac,
the size of the anonymity sets corresponds to the number of
clients reachable via H hops over the social network. Al-
)
g
o
l
(
t
e
s
y
t
i
m
y
n
o
n
a
f
o
e
z
S
i
1015
1010
105
100
Anonymity: Groups size of anonymous clients
H=3H=3
H=2H=2
H=1H=1
MobileMobile
Drac
Herd
Tor
Drac
Herd
MobileMobile
Tor
Figure 4: Size of anonymity sets for Drac, Herd, and Tor:
median, 10th, and 90th percentiles (left to right). For
Drac, we show the results for the Mobile, Twitter, and
Facebook datasets and H = 1, 2, 3, and for Tor, the re-
sults for the Mobile dataset. The size of anonymity sets in
Herd is independent of the node degree and workload.
though this size can be as large as the entire social network
for a sufﬁciently large H, only clients relatively nearby in
the social graph can expect latencies low enough for VoIP
(unlike in Herd, all hops in Drac typically involve last-mile
links). H = 0 means that the caller and callee communicate
directly and so have an anonymity set of 1. Therefore, we
show results only for H = 1, 2, 3. In Herd, the size of the
anonymity set corresponds to the number of subscribers in
the mobile dataset, who are assumed to be in a single zone.
In Tor, the anonymity set is the set of potential communica-
tion partners identiﬁed by an intersection attack [22].
Client bandwidth requirement. The bandwidth require-
ment is the number of chafﬁng connections multiplied by the
rate of a VoIP call using the G.711 codec (8KB/s). As chaff
is substituted with payload during a call, the bandwidth re-
quirement accounts for both chaff and payload trafﬁc.
Operational Costs. We evaluate Herd’s operational costs in
dollars per user/month using EC2 pricing [2].
4.1.4 Results: Tor’s Anonymity
In the absence of chafﬁng, a passive attacker can corre-
late call start and end times to identify which partners are
communicating via an intersection attack [22]. That is, the
attacker sees that sets of users start and end calls simulta-
neously, and attempts to identify pairs of communicating
clients from this set. To conﬁrm whether a single pair of
users, (u, v), is communicating, the attacker takes the inter-
section of the sets of users with the same call start/end times
as (u, v). When the intersection set is size 2, the attacker has
conﬁrmed these communication partners.
We ﬁnd that, despite the large number of subscribers in
our dataset, an intersection attack is highly successful for
real call patterns. In particular, after one month, an attacker
can trace 98.3% of all calls when using 1-second granularity
for tracking call start and end times.
Summary. Real voice communication patterns are highly
649
susceptible to trafﬁc analysis. Anonymity systems that do
not defend against such analysis cannot provide practical
anonymity. For this reason, we focus the rest of our eval-
uation on Drac and Herd.
4.1.5 Results: Anonymity/Scalability of Drac
and Herd
Drac. The effective size of the anonymity sets in Drac corre-
spond to the number of clients that can be reached within H
hops in the social network, where H is the maximal number
of hops that still yield latencies tolerable for VoIP. We obtain
the size of the anonymity sets for H = 1 empirically from
the different social network data sets, and estimate the sizes
for H = 2, 3 using the median node degrees.
The median anonymity set sizes for the Mobile, Twitter,
and Facebook datasets shown in Figure 4 are 12, 8, and 343
for H = 1, and 1728, 512, and 40 million for H = 3, respec-
tively.
Drac’s bandwidth demand for its clients is proportional to
the median node degree. As shown in Figure 5, the median
bandwidth required with the Mobile, Twitter and Facebook
datasets are 96KB/s, 64KB/s, and 2.6MB/s, respectively, and
the maxima are 12MB/s, 39MB/s, and 6.2GB/s.
Herd. Herd’s anonymity set sizes depend only on the num-
ber of clients in a zone. Consequently, the size of Herd’s
anonymity set with the mobile workload corresponds to 10.8
millions (the number of subscribers), as we see in Figure 4.
Based on our trace-based simulations, we ﬁnd that 1,000
mixes is sufﬁcient to handle the load from these users. Thus,
we expect to be able to support on the order of 10M users in
a large cloud provider like EC2.
Herd clients keep a small, constant number of chafﬁng
connections k to the SPs (or only one connection if a client
connects directly to a mix). As we have seen in Section 3
(and will conﬁrm below) three connections are sufﬁcient to
achieve a very low probability for a call to block due to all
its channels being busy. Even with three channels, a client’s
bandwidth requirement is only 24KB/s (3*8KB/s).
Summary. We showed that Herd has signiﬁcantly lower
bandwidth requirements than Drac. To achieve this, Herd
relays VoIP trafﬁc through a dedicated infrastructure, incur-
ring additional costs and delays. In the rest of this section,
we evaluate Herd’s operational costs and call quality.
4.1.6 Results: Herd’s operational costs
We now evaluate the trafﬁc volume on the Herd mixes
with and without SPs, with interzone trafﬁc ranging from
10-100%, and the resulting monetary cost per user. We use
one week of the phone call data to drive these simulations;
results for other weeks were similar.
Impact of using SPs instead of direct connections. We ran
SP simulations with 100 SPs per mix and 100 clients per SP,
and varied the number of clients per channel (between 5 and
50) and the number of channels each client attaches to (2
and 3). A call is blocked if there are no available channels
at the caller or callee’s end. In our simulations, the blocking
rate for 2 channels varied between 5% and 0.1% with 50
and 5 clients per channel, respectively. We observed that the
s
t
n
e
i
l
c
f
o
F
D
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Scalability: Bandwidth requirements of clients
Herd,k=3
Drac,Mobile
Drac,Twitter
Drac,Facebook
101
102
Bandwidth requirements (KB/s, log)
103
104
105
106
n
o
i
t
a
z
i
l
i
t
u
U
P
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
CPU utilization @ mix
no SP
SP
10
20
30
40
50
# of clients
60
70
80
90
100
CPU utilization @ SP
n
o
i
t
a
z
i
l
i
t