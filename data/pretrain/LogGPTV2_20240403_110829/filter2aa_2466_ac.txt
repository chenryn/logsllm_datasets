0      0        0 eth0
OE: How it works: The routing hack
_
To see which connections are plaintext or crypted, cat
/proc/net/eroutes:
5
193.110.157.17/32  -> 0.0.0.0/0
=> %trap
3
193.110.157.17/32  -> 131.174.124.204/32 => %pass
2
193.110.157.17/32  -> 193.110.157.10/32
=> PI:EMAIL
6
193.110.157.17/32  -> 193.110.157.2/32
=> %pass
0
193.110.157.17/32  -> 193.110.157.250/32 => %hold
12 193.110.157.17/32  -> 193.110.157.77/32
=> PI:EMAIL
2
193.110.157.17/32  -> 193.110.157.9/32
=>
PI:EMAIL
_
%trap : catch these packets and process
_
%pass : Other side doesn't support IPsec/OE, send out in clear
_
%hold : Other side advertises OE, but failed to setup a tunnel
with, attack or misconfiguration, do not send anything
t
W
h
IP
t
l
ith th
th
id
OE: Look at the internal state: eroute
_
FreeS/WAN 2.x allows you to set more elaborate policies, see
/etc/ipsec.d/policies/block (never talk to these CIDR's)
/etc/ipsec.d/policies/clear (no OE, eg if they block IPsec)
/etc/ipsec.d/policies/clear-or-private (Passive OE CIDR's)
/etc/ipsec.d/policies/private (encrypt to them or dont talk)
/etc/ipsec.d/policies/private-or-clear (try OE, else allow clear)
OE: FreeS/WAN 2.x Policies
_
Most distributions already have FreeS/WAN support
–
Debian, SuSe, Mandrake, Connectiva, etc. have binaries.
–
RedHat binaries on ftp://ftp.xs4all.nl/pub/crypto/freeswan/binaries
_
Install from source
Configuring OE: Installing FreeS/WAN
_
Download latest FreeS/WAN (or superfreeswan if you also want
NAT-T or X.509 support)
_
Install kernel-source and gmp with header files (gmp-devel)
_
Build a standard kernel in /usr/src/linux
_
untar and go into the freeswan directory
_
issue a 'make oldmod' (this builds and installs freeswan)
_
cd /usr/src/linux ; make modules_install (if building ipsec
support as module)
_
If you added NAT-T support, you must use 'make oldgo' and
also install the new kernel itself, since the ESPinUDP patch
changes some fundamental network structures.
Installing FreeS/WAN kernel plus userland
_
Download latest FreeS/WAN (do not use superfreeswan, since
2.5 kernel doesn't yet support NAT-T or X.509)
_
Install kernel-source and gmp with header files (gmp-devel)
_
untar and go into the freeswan directory
_
issue a 'make programs' (this builds and installs freeswan)
Installing FreeS/WAN userland on native 2.5
_
If you have a file /etc/ipsec.secrets, your keys have already
been generated by starting FreeS/WAN. If not, issue:
# ipsec newhostkey --output /etc/ipsec.secrets
_
To display a proper reverse dns record for your host, issue:
# ipsec showhostkey --txt 1.2.3.4
where 1.2.3.4 is the IP address of your OE gateway, or your
own IP address if there is no OE gateway
_
To display a proper forward dns record for your host, issue:
# ipsec showhostkey --txt 127.0.0.1
_
To displau an old style KEY record for the forward, issue:
# ipsec showhostkey
_
Alternatives:
# ipsec mailkey --me PI:EMAIL --forward
hostname.domain.tld
Configuring OE: Putting keys in the DNS
_
Add or enable the following connection(s) in /etc/ipsec.conf
conn client-to-anyone
# for our client subnet
leftsubnet=10.0.2.0/24
# any single client in our subnet
     also=me-to-anyone
# rest is same as for SG
conn me-to-anyone
# for ourself
left=%defaultroute
# outside interface
right=%opportunistic # use DNS records to find keys
authby=rsasig
# almost always the right choice
keyingtries=2
# don't be persistent -- peer might
disappear
auto=route      # enable at ipsec startup
#leftid=@vaio.xtdnet.nl
# only needed for iOE
Configuring OE: FreeS/WAN 1.9x
_
OE is enabled per default for 2.x in /etc/ipsec.conf.
_
You can disable it by creating a connection called OEself:
conn OEself
auto=ignore
_
iOE also needs specific OEself definition:
conn OEself
left=%defaultroute
leftrsasigkey=%dnsondemand
leftid=@vaio.xtdnet.nl
right=%opportunistic
rightrsasigkey=%dnsondemand
auto
route
Configuring OE: FreeS/WAN 2.x
_
ISC 3.0.1rc9 or higher
_
http://www.wavesec.org/patches/dhcp-3.0.1rc9-oe-
key.patch
(might be integrated by now)
_
in /etc/dhcpd.conf
option oe-key     code 159 = string;
option oe-gateway code 160 = ip-address;
on commit {
  if (not static and ((config-option server.ddns-updates = null) or
(config-option server.ddns-updates != 0))) { if exists oe-key {
        set ddns-rev-name = concat (binary-to-ascii (10, 8, ".", reverse (1, leased-address)), 
".", pick (config-option server.ddns-rev-domainname, "in-addr.arpa."));
        set full-oe-key = option oe-key;
        switch (ns-update (delete (IN, 25, ddns-rev-name, null), add (IN, 25,
ddns-rev-name, full-oe-key, lease-time / 2)))  {
default:
          unset ddns-rev-name;
          break;
        case NOERROR:
          on release or expiry {
            switch (ns-update (delete (IN, 25, ddns-rev-name, null))) {
Configuring WaveSEC: DHCPD
Configuring WaveSEC: Bind
_
See: www.wavesec.org/dyndns.phtml
_
And: http://ops.ietf.org/dns/dynupd/secure-ddns-
howto.html
Configuring WaveSEC: FreeS/WAN
_
See http://www.wavesec.org/
_
Add both interfaces to the IPsec machinery in
ipsec.conf:
interfaces=”ipsec0=eth0 ipsec1=wlan0”
_
To enable your WAVEsec clients to connect, create a connection
description for each IP address that will be served. A future version of
FreeS/WAN may reduce this to a single definition, but this is not yet
implemented. For each, you will need a conn like:
conn host66-to-world
        left=192.139.46.254   # IP of WAVEsec gateway
        leftsubnet=0.0.0.0/0
        right=192.139.46.66   # IP of potential client.
        keylife=1h            # IP may be reused after 1 hour idle
        rekey=no
        auto=add
Configuring WaveSEC: FreeS/WAN server
_
Exempt DHCP and DNS packets from IPsec
#!/bin/sh
iptables -A PREROUTING -t mangle -p udp -s 0.0.0.0/0 -d 192.139.46.64/29 --sport 53 -j
MARK --set-mark 1
iptables -A PREROUTING -t mangle -p udp -s 0.0.0.0/0 -d 192.139.46.64/29 --sport 67:68
-j MARK --set-mark 1
iptables -A PREROUTING -t mangle -p icmp -s 0.0.0.0/0 -d 192.139.46.64/29 -j MARK --
set-mark 1
iptables -A OUTPUT -t mangle -p udp -s 0.0.0.0/0 -d 192.139.46.64/29 --sport 67:68 -j
MARK --set-mark 1
iptables -A OUTPUT -t mangle -p udp -s 0.0.0.0/0 -d 192.139.46.64/29 --sport 53 -j MARK
--set-mark 1
iptables -A OUTPUT -t mangle -p icmp -s 0.0.0.0/0 -d 192.139.46.64/29 -j MARK --set-
mark 1
ip rule add fwmark 1 table dhcpd
ip route add 192.139.46.64/29 dev wlan0 table dhcpd
Configuring WaveSEC: FreeS/WAN Client
_
Install and configure FreeS/WAN
_
Patch for dhclient:
www.wavesec.org/download/dhcp-
3.0.1rc9.freeswan.tar.gz
_
Patch for RedHat ifup script
www.wavesec.org/download/sbin-
ifup.dhclient.rhl7.3.patch
_
Run: ipsec showhostkey –-dhclient > /etc/dhclient.conf
Configuring WaveSEC: FreeBSD/KAME Client
_
Though it requires some manual settings it should work
with wavesec.
_
See http://www.wavesec.org/kame.phtml
_
Also see: http://www.wavesec.org/KAME-WAVEsec.txt
_
The same probably applies to Linux 2.5 native IPsec
with ipsec-tools
Configuring WaveSEC: Other Clients
_
We will try to get something running using X.509
certificates for Windows machines. If we succeed, we
will publish the information on www.wavesec.org
_
OpenBSD should be able to work with WaveSEC
_
SSH IPsec Express should work
_
SSH Sentinel should work
_
# ipsec verify
Checking your system to see if IPsec got installed and started correctly
Version check and ipsec on-path       
[OK]
Checking for KLIPS support in kernel                                   [OK]
Checking for RSA private key (/etc/ipsec.secrets)  
      [OK]
Checking that pluto is running          
                         [OK]
DNS checks.
Looking for forward key for bofh.xtdnet.nl                
[NO KEY]
Does the machine have at least one non-private address 
[OK]
Two or more interfaces found, checking IP forwarding           [OK]
Checking NAT and MASQUERADING                                     [N/A]
_
Note: verify doesn't catch all problems.
Testing OE
_
http://untappable.xtdnet.nl/
Once you are connected, telnet to the gopher port, you will see
something like:
Trying 193.110.157.74...
Connected to untappable.xtdnet.nl (193.110.157.74).
Escape character is '^]'.
Results of query on 193.110.157.74 -> 192.139.46.38 with seq 2
Received reply of 33124 bytes.
Strength:   32
Bandwidth:  32
authdetail: 0
esp_detail: 3
comp_detail: 0
credentials: 1
        DNSSEC identity: 192.139.46.38 (SIG KEY 1 6 7200
20030613025618 20030514025618 28815 46.139.192.in-addr.arpa.
Lv8xM9ihADevmp8Zf7X7
vStJeCRghbMnXeTIECHJd1/nG+yW6BkEj3w+GUxpr35Rn0Kez3mD89ig
Testing OE
_
http://oetest.freeswan.org/
_
http://oetest.freeswan.nl/
_
http://www.xtdnet.nl/paul/
_
ipsec verify –host mail.xtdnet.nl
_
irc.sandelman.ca (only allows OE connections)
Testing OE: other sites
_
When OE is started, the first connections will fail because it
will trigger lots of other OE's to the various dns servers, and all
will fail until %pass routes to the dns servers are created.
_
Starting FreeS/WAN before the internet connection doesn't
work properly yet. Restart FreeS/WAN after inserting a pcmcia
card.
_
People often make mistakes pasting in the OE dns records.
_
Do not change the IP address in an OE record. If a digit gets
added, it can break the record.
_
2.00 and 2.01 cannot talk OE to 2.02
_
KEY versus TXT issues as a result of RFC3445.
_
NAT'ing IPsec packets to hell
_
MTU/fragmentation  problems with tunnels within tunnels.
Seems to mostly happen to people who do ADSL/PPTP/IPsec
Known caveats
_
Check your logfiles (/var/log/secure, /var/log/messages)
_
Check your logfiles AGAIN (check startup errors)
_
Run “ipsec verify”
_
Disable any firewall rules to test if you are dropping packets
_
Use “ikeping” to test if your ISP filters udp 500. Turn off
FreeS/WAN before trying ikeping.
_
Post the output of “ipsec barf” on a website and post a URL to
the mailinglist with an explanation of what you are trying to
do.
_
Try the people at FreeNode (formerly OpenProjects) on the irc
channel #freeswan
DO NOT ENABLE KLIPSDEBUG or PLUTODEBUG !!!
Debugging OE
_
Grab me during the conference  if you need help.
_
We should be running WaveSEC
_
We recommend setting up DNSSEC on your local laptop,
trusted keys for the reverse will published on:
http://www.xtdnet.nl/paul/conference
_
If your connection is NAT'ed, talk to us to get a real IP.
_ Enjoy your privacy :)
Try out OE at the conference!