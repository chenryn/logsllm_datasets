---
author: ''
category: 观点
comments_data:
- date: '2016-06-13 10:13:56'
  message: 呃……我以为现在儿童学Python了，我小学时是QBasic……
  postip: 61.172.240.228
  username: 来自上海的 Chrome 50.0|Windows 7 用户
count:
  commentnum: 1
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5389
date: '2016-06-05 09:00:00'
editorchoice: false
excerpt: 行业普遍认为，可视化编程是教授儿童计算机科学和计算思维的最佳方式，它能够绕过复杂的编程语法，使孩子们从小就能灵活掌握软件编程的核心。
fromurl: http://blog.makewonder.com/evolution-programming-for-kids/
id: 7427
islctt: true
largepic: /data/attachment/album/201606/04/231646dvnj52wx84vo8omm.jpg
permalink: /article-7427-1.html
pic: /data/attachment/album/201606/04/231646dvnj52wx84vo8omm.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 行业普遍认为，可视化编程是教授儿童计算机科学和计算思维的最佳方式，它能够绕过复杂的编程语法，使孩子们从小就能灵活掌握软件编程的核心。
tags:
- Logo
- Scratch
thumb: false
title: 儿童编程语言进化史
titlepic: true
translator: wxy
updated: '2016-06-05 09:00:00'
---

随着美国总统奥巴马发起全民学习计算机（#CSforall）倡议以及社会对STEM教育（科学、技术、工程和数学）日益增长的关注，建立儿童计算机教育的标准和最佳实践显得尤为重要。业内普遍认为，可视化编程是向儿童传授计算机科学与计算思维的理想途径，因为它避免了复杂的编程语法，让孩子们能够在早期阶段就轻松掌握软件编程的基本原理。

![](/data/attachment/album/201606/04/231646dvnj52wx84vo8omm.jpg)

### 改进中的Logo语言

在过去五十年间，设计师们不断改进由Seymour Papert创建的Logo编程语言（即“小乌龟”），催生了一系列界面略有差异但核心思想一致的新编程语言。当前的教学标准倾向于基于模块的编程方法，这主要归功于MIT开发的Scratch编程语言的流行。根据[CSTA K-12计算机科学教学标准](https://csta.acm.org/Curriculum/sub/K12Standards.html)，对于K-5年级的学生来说，要求他们能够“使用基于模块的可视编程语言来构建并测试解决方案”。

![](/data/attachment/album/201606/04/231729trtcni2txr3lrnwl.png)

### 受众趋向年轻化

计算机科学教育的另一趋势是受众年龄越来越小。研究显示，[甚至五岁的孩子](http://www.wired.com/2013/09/ap_code/)也能理解编程概念。因此，针对尚未识字的小朋友进行编程教学时，应尽量减少文字使用。最近推出的Scratch Jr和Code.org初级课程正是通过在基于模块的编程环境中以图标代替文本，从而实现这一目标。

![](/data/attachment/album/201606/04/231730ufotplutomrzmmom.png)

### 机器人编程

看到自己编写的代码在现实世界中运行是一件令人兴奋的事情。早在本世纪初，乐高公司与麻省理工学院合作推出了一项计划，将基于模块的编程带入现实生活。学生们可以在电脑上编写程序，并将其下载到自行组装的机器人中执行。早期的RIS（机器人发明系统）界面看起来非常类似于Scratch。

![](/data/attachment/album/201606/04/231731duvzp6fp6ip6ngii.png)

尽管2013版Lego Mindstorms变得更加复杂，但它大部分功能仍与旧版本保持一致。现在可以为模块添加输入参数，用于指定距离、时间或其他输出。

![](/data/attachment/album/201606/04/231732imbd9dgprt69t3rg.png)

Martin Exner制作了一张[简洁的信息图表](http://constructingkids.com/2013/05/15/vpl/)，概述了从Logo及更近期的Scratch演变而来的各种编程语言。许多Logo衍生语言专注于特定应用场景，如游戏创作、3D故事叙述、绘图、机器人控制乃至虚拟水族箱管理等。这种方式吸引了不同兴趣的孩子们，但在实际编程过程中，一些孩子仍然感到困惑。

### 超越Logo的编程理念

在现实生活中，编程往往需要处理多种类型的输入，并同时做出逻辑判断。例如，在决定起床后做什么时：如果是周末，则外出玩耍；如果星期一，则穿运动服；如果是星期四，则倒垃圾；非周末的日子则去上学。下图展示了用Scratch实现上述逻辑的方法。

![](/data/attachment/album/201606/04/231733g41znh8pf8iclk5q.png)

除了这些基于模块的语言外，还有一种新语言采取了不同的教学方法。2015年，Wonder Workshop设计了一种名为Wonder的新编程语言，采用[基于流的编程界面](http://www.jpaulmorrison.com/fbp/fbp2.htm)。Wonder允许学生专注于连接预定义的功能单元（或语句），从而构建一个状态机。任何时候，机器人都处于单一给定状态；它会执行某些操作，而外部输入会导致其切换至不同的操作模式。

下图展示了如何利用基于流的方法来决定起床后的活动安排。

![](/data/attachment/album/201606/04/231733a0czhojc62a35c2o.png)

这种语言不仅突破了传统的线性编程范式，还提供了一种新的计算思维方式，帮助学生更容易地模拟应对现实生活中的变化。通过分解问题，学生可以更有效地解决复杂问题。每次只关注一个问题的过程被称为分解，这是计算机科学的基础知识之一，也是Wonder的设计初衷。

![](/data/attachment/album/201606/04/231735x80os59obfwmgn0f.png)

在日常生活中，有许多机器人和状态机的例子，并且它们正变得越来越普遍。当投入正确的硬币组合后，自动售货机会为你提供相应的食品。自动驾驶汽车会根据周围障碍物调整行驶路径。此外，状态机还可以应用于更多领域，包括自然语言处理、人工智能、通信协议、游戏角色行为以及神经网络等。

随着机器人应用范围不断扩大，教师们正在接受[培训](http://www.fastcompany.com/3056644/most-creative-people/as-schools-emphasize-computer-science-how-do-we-teach-teachers-to-code)，以便将基于模块的编程作为教授儿童计算机科学的标准方法。然而，随着这种方法逐渐普及至更多课堂，我们或许应该思考这是否是正确的方向？是否存在其他更好的方式来教导孩子们编程呢？
---