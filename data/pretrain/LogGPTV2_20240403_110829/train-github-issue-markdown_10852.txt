**Deepak Kalra** opened **SPR-586** and commented:

---

Hello,

I am currently in the process of designing an architecture using the Spring Framework. Our proposed solution is as follows:

1. The client initiates a call to the EJB layer.
2. The EJB layer, specifically a Stateless Session Bean with Container-Managed Transactions (CMT), manages the transaction.
3. This Stateless Session Bean then invokes the Spring Service Layer.
4. The Spring Service Layer, in turn, calls a Plain Old Java Object (POJO) that uses Hibernate for data persistence.

My specific question is: If I set the transaction attribute of the Stateless Session Bean to `REQUIRES_NEW`, will this work seamlessly? In this scenario, the JTA Application Server and the Spring Framework's service layer would both use JTA transactions, with the method in the Spring service layer having a propagation behavior set to `REQUIRED`.

Here are the relevant configurations:
- Data source: `jdbc/jpetstore`
- Hibernate mapping file: `org/springframework/samples/petclinic/hibernate/petclinic.hbm.xml`
- Dialect: `${hibernate.dialect}`

Will this architecture function as intended, with the POJO method operating within the same transaction initiated by the EJB layer? Your assistance on this matter would be greatly appreciated.

Kind regards,  
Deepak

---

**Issue Links:**
  * #5318 Integration of EJB CMT with Spring Framework ( _ **"duplicates"**_ )