title:Optimal Average-Complexity Ideal-Security Order-Preserving Encryption
author:Florian Kerschbaum and
Axel Schr&quot;opfer
Optimal Average-Complexity Ideal-Security
Order-Preserving Encryption
Florian Kerschbaum
SAP
Karlsruhe, Germany
ﬂPI:EMAIL
Axel Schröpfer
SAP
Karlsruhe, Germany
PI:EMAIL
ABSTRACT
Order-preserving encryption enables performing many classes
of queries – including range queries – on encrypted databases.
Popa et al. recently presented an ideal-secure order-preserving
encryption (or encoding) scheme, but their cost of inser-
tions (encryption) is very high.
In this paper we present
an also ideal-secure, but signiﬁcantly more eﬃcient order-
preserving encryption scheme. Our scheme is inspired by
Reed’s referenced work on the average height of random bi-
nary search trees. We show that our scheme improves the
average communication complexity from O(n log n) to O(n)
under uniform distribution. Our scheme also integrates ef-
ﬁciently with adjustable encryption as used in CryptDB. In
our experiments for database inserts we achieve a perfor-
mance increase of up to 81% in LANs and 95% in WANs.
Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection—
Cryptographic controls; C.2.4 [Computer-Communication
Networks]: Distributed Systems—Distributed databases
Keywords
Order-Preserving Encryption; Indistinguishability; Ideal Se-
curity; Eﬃciency; Adjustable Encryption; In-Memory Col-
umn Database
1.
INTRODUCTION
Order-preserving encryption [6, 8, 9, 32] enables perform-
ing many classes of queries – including range queries – on
encrypted data without modiﬁcation of the database en-
gine. Recent results in database implementation suggest
that these queries are quite practical in terms of perfor-
mance [17, 33]. Hence, researchers have suggested a number
of order-preserving encryption schemes. Nevertheless, the
security of these schemes is still under discussion.
Boldyreva et al. provide the ﬁrst formal treatment of secu-
rity in order-preserving encryption [8]. Intuitively an ideal-
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2957-6/14/11 ...$15.00.
http://dx.doi.org/10.1145/2660267.2660277.
security order-preserving encryption (indistinguishability un-
der ordered chosen plaintext attack – IND-OCPA) scheme
leaks nothing but the order: The ideal encryption of plain-
texts {7, 12, 19} is {1, 2, 3}, i.e. exactly their order.
This type of encryption is quite hard to achieve. Simply
imagine encrypting the value of 13 in the ideal-secure cipher-
texts above. Clearly, the ciphertexts of 13 and 19 conﬂict,
because both are supposed to be 3. Boldyreva et al. prove
that it is impossible to design such an encryption scheme
with linear-length ciphertexts, if the encryption scheme is
static and stateless. They therefore settle for a weaker secu-
rity notion (random order-preserving function). It has later
been shown that this security deﬁnition leaks at least half
of the bits [9, 37].
Popa et al. modify the construction of the encryption
scheme (calling it now an encoding scheme) [32]. They ﬁrst
prove that it is still not possible to construct a linear-length
encryption scheme, even if the encryption function can be
stateful. They then settle for an interactive protocol which
updates the encryption on inserts. This achieves the goal of
ideal-security.
The main idea of Popa et al. is to update the ciphertexts
when inserting new values. These updates are also clearly
necessary, yet the cost of updates in Popa et al.’s scheme is
quite high. Let there be n elements in the database. Even
in the best case their scheme incurs a communication cost
of Ω(n log n).
As Popa et al. point out any immutable1 encryption scheme
must have exponential ciphertext size, yet this is not a prob-
lem in most cases. On average, such updates can be kept to
a minimum. Reed proves that the height of a random binary
search is tightly centered around O(log n) [34]. We use this
result to construct an order-preserving encryption scheme
that has Ω(n) lower bound communication cost and even
O(n) in the average case under uniform distribution which
is also the theoretical lower bound. Table 1 shows the com-
parison between ours and the other formally analyzed order-
preserving encryption schemes by Popa et al. and Boldyreva
et al.
We apply our order-preserving encryption scheme to en-
cryption of an outsourced database. The client retains the
key and queries are performed on encrypted data as in [6,
15, 16, 33]. Our subject of investigation is a column-store,
in-memory database [12, 36, 43]. Column-store databases
store data in columns for faster sequential access, e.g. for
aggregations. In order to ﬁt all data in main memory they
compress it using a dictionary [44, 4, 7]. We ﬁrst argue that
1In a mutable encryption scheme ciphertexts can change.
Ideal-Secure Compat. with AE2 Best Case Avg. Case Worst Case
Boldyreva et al. [8, 9]
Popa et al. [32]
This paper
no
yes
yes
yes
no
yes
O(n)
O(n)
O(n log n) O(n log n)
O(n)
O(n)
O(n)
O(n log n)
O(n2/ log n)
Table 1: Comparison between OPE schemes
our order-preserving encryption scheme is better suited for
this kind of database architecture (Section 4). We also ar-
gue that our scheme is eﬃciently compatible with adjustable
encryption as introduced by CryptDB [33] which further in-
creases the security of an outsourced database. Then, we
show that our scheme results in improved performance for a
number of synthetic and real-world benchmarks (Section 5).
In our experiments for database inserts we achieve a perfor-
mance increase of up to 81% (factor 5) in LANs and 95%
(factor 18) in WANs.
In summary, our contribution is a novel order-preserving
encryption scheme with updates that
• is ideally secure under the IND-OCPA deﬁnition by
Boldyreva et al. Yet, we point out a new weakness in
this deﬁnition (Section 3.4.1) that fortunately has no
relevance in the database setting.
• is more eﬃcient in the average case and in our exper-
imental benchmarks.
The remainder of the paper is structured as follows: In the
next Section we review related work – other order-preserving
encryption schemes, their applications and related crypto-
graphic schemes. In Section 3 we present our order-preserving
encryption scheme, including its algorithms, security proof
and complexity analysis. Then, in Section 4 we show how we
apply it to an outsourced, encrypted database. We summa-
rize our ﬁndings from the experiments in Section 5. This in-
cludes a validation of our assumptions and database bench-
marks. Finally, we present our conclusions in Section 6.
2. RELATED WORK
2.1 Order-Preserving Encryption
A number of order-preserving encryption schemes have
been proposed in the literature [6, 8, 9, 32, 5, 17, 19, 20,
23, 25, 26, 28, 38, 39, 42]. Yet, most of them use ad-hoc or
speculative security models. The work by Popa et al. [32] is
the ﬁrst to achieve ideal-security. We improve on their result
by lowering cost in the best and average case and enabling
compatibility with adjustable encryption.
The notion of ideal-security (IND-OCPA) of order-preserv-
ing encryption has been put forward by Boldyreva et al. [8].
On the one hand they settle for a weaker notion of ran-
dom order-preserving functions in their construction. Yum
et al. [42] further improved their construction, but remained
in the same security model of random order-preserving func-
tions. On the other hand they achieve immutable cipher-
texts as in regular encryption. As Popa et al. already point
out in [32] immutable ciphertexts are not a necessity for en-
crypted databases. We improve on Popa et al.’s result by
reducing the probability of updates to be negligible in the
size of the plaintext. This results in optimal average cost,
equal to that of immutable ciphertexts.
2Adjustable Encryption
The idea of a random order-preserving function is to uni-
formly select among all order-preserving functions for a do-
main. Clearly, the ciphertext image needs to be larger than
the domain, such that there are several to choose from. The
security of random order-preserving functions has been chal-
lenged. Boldyreva et al. have shown that it inherently leaks
at least half of the plaintext bits [9, 37]. This signiﬁcantly
eases an inference attack on an encrypted database. Our
scheme – similar to Popa et al. – provides ideal-security.
Nevertheless, we also use a large ciphertext image, but em-
ploy an encoding technique similar to Popa et al. [32]. Still,
Popa et al. usually encode in a smaller ciphertext image at
higher update costs than ours.
There is a large number of other order-preserving encryp-
tion schemes [5, 17, 19, 20, 23, 25, 26, 28, 39] which provide
no formal, but rather ad-hoc security analysis, including the
original proposal by Agrawal et al. [6]. Xiao et al. [38] deﬁne
a notion based on nearby values, but it remains unclear how
to enforce this in an encrypted database or similar setting.
2.2 Applications
Order-preserving encryption has a number of applications.
Most notably database-as-a-service (DAS) [6, 15, 16, 33]. In
DAS the database is outsourced to the cloud and values
stored are encrypted before sent to the cloud. The database
then performs its queries over encrypted data. Order-pre-
serving encryption enables to perform range queries over an
encrypted database without any changes to the database
engine. We also work on databases, but speciﬁcally on an
in-memory, column-store database. Furthermore, we eﬃ-
ciently support the notion of adjustable encryption as put
forth in CryptDB [33]. We emphasize that the proposal for
ideal-secure order-preserving encryption by Popa et al. [32]
is ineﬃcient in combination with adjustable encryption.
Besides databases order-preserving encryption has many
applications in general software-as-a-service, e.g., business
software and e-mail [1, 2]. We do not speciﬁcally address
them in this paper, but expect a high degree of compatibility
with our scheme.
2.3 Other Cryptographic Schemes
Searchable encryption achieves a stronger notion of secu-
rity than order-preserving encryption. Searchable encryp-
tion for range queries has been presented in [10, 27, 35].
It uses a token of range boundaries generated by the se-
cret key to match ciphertexts which are within the range
of this token. Without the token ciphertexts are indistin-
guishable under chosen plaintext attack. Yet, searchable
encryption schemes require a linear scan of the data, un-
less additional indexing information is provided. Applying
these schemes also requires a change of the database engine.
These two drawbacks make most schemes quite impracti-
cal in many cases. Lu [27] presents a searchable encryp-
tion scheme for ranges with logarithmic time-complexity,
but its indexing information makes it (almost) as vulnera-
ble as order-preserving encryption, since the proposed sorted
tree reveals the order of all elements except of those between
the leafs of the same bottom node.
Searchable encryption is a special case of functional en-
cryption. Functional encryption allows the evaluation of any
function on a set of ciphertexts, such that the result of the
function is revealed. In searchable encryption the function is
the order relation. Recently, functional encryption has been
designed for general functions [14]. Speciﬁc functions, such
as the inner product, have been proposed before [21].
One can also construct schemes that maintain the result
of the function as a ciphertext. Fully homomorphic encryp-
tion [13] enables this for arbitrary functions. Previously,
interactive techniques such as secure computation [40, 41]
have been used. Since in many cases searchable encryption
is already too ineﬃcient, we did not consider any of its gen-
eralizations as an alternative.
3. OUR SCHEME
3.1 Example
Before we describe our order-preserving encryption scheme
in detail we would like to introduce a motivating example.
Consider a salary table in a database consisting of ﬁrst name,
last name and salary amount. Table 2 is an example.
First Name Last Name
John
Jack
Jack
John
Smith