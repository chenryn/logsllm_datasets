==== FTP 数据输出
FtpOutput 可以将接收到的 syslog 日志落地成本地文件(默认路径为basedir/FtpOutput)；同时定期扫描本地文件，读取需要上传的文件(不带tmp后缀)，压缩上传到指定的 FTP 目录。
image::images/agent-ftpoutput-principle.jpg[]
该插件通常配合 UdpInput 和 RagelDecoder 插件，共同完成高性能的 Syslog Server 数据接收和原文备份存储。
版本::
heka版本: linux64位3.6.0.5以上(包含)
配置说明::
首先在高级配置###Other下增加以下内容
  [FtpOutput]
      message_matcher = "TRUE"
      # 落地成本地文件的文件名格式,最后生成文件时${appName}会被替换成appname的值
      # %Y%m%d%H%M%S会被替换成文件最后修改日期20200602181432， ${SN}会被替换成同秒内的文件序号
      # 文件名如：FWLOG_firewall1_20200602181432_0002.DAT
      file_name_format = "FWLOG_${appName}_%Y%m%d%H%M%S_${SN}.DAT"
      # 上传ftp/ftps的目录结构
      ftp_dir_pattern = "ftp/%Y/%m/%d/"
      # ftp/ftps相关信息
      ip = "192.168.1.148"
      port = "21"
      # 如果为 true，表示是 ftps 协议
      use_ssh = false
      # 如果一段时间内没有新数据到达，也生成一个空文件(前提是该类文件至少曾经生成过一次)
      rotate_on_startup=true
      username = "ftp_user"
      password = "123456"
      # 间隔多长时间扫描本地文件目录(单位：秒)
      ticker_interval = 30
      # 文件上传ftp的压缩方式，默认为gzip,如果不需要压缩，配置成""
      # 目前仅支持gzip和""
      compressor_name = "gzip"
      # encoder固定为此
      encoder = 'PayloadEncoder'
  [PayloadEncoder]
然后在高级配置###Other下中找到hekad，并在下面新增maxprocs = 4
  [hekad]
      maxprocs = 4
最后，将 Rzy_http_output 配置段里的 message_matcher 改为 FALSE。
注意事项::
* `file_name_format` 和 `ftp_dir_pattern` 配置中时间使用linux的strtime，主要有(更多参考linux下date --h)：
** %Y 年份
** %m 月份(01-12)
** %d 按月计的日期(例如：01)
** %H 小时(00-23)
** %M 分(00-59)
** %S 秒(00-60)
* ftp_dir_pattern的目录是相对于ftp用户主目录的相对目录，最好不要使用绝对路径(即不要以/开头)
* 本地落地文件目录默认为hekad cache目录下的FtpOutput/ftpoutput名
* 本地记录保存文件和上传文件情况的文件为：hekad cache目录下的FtpOutput_filelog/ftpoutput名/ftpfilelog.log(该文件会自动滚动，可通过配置max_log_size_in_mb、max_log_backups、max_log_age_in_day控制)
** 已上传文件后缀为.uploaded
** .tmp后缀的为当前正在写的文件
** 其余为未上传文件
举例::
我们配合 syslog 中的 appname 映射配置，可以实现不同类型数据分目录上传。
  [hekad]
    max_message_size = 65536
    maxprocs = 4
  [2055_udp_input]
    type = "UdpInput"
    address = "10.211.55.2:2055"
    ip_maps = "10.211.55.2:firewall1:sangfor:utf-8;10.211.55.19:firewall2:sangfor:utf-8"
    disabled = false
    [ragel_decoder]
      type="RagelDecoder"
      # 支持为不同的 appname 指定不同的 ragels 模板
      ragels=["firewall1->huawei","firewall2->huawei","default->huawei"]
      # 默认为 string，可设置为 binary 格式输出。binary 时，需要配置对应的 location 时区以供转换。
      format="string"
      location="UTC"
  [FtpOutput]
    message_matcher = "TRUE"
    file_name_format = "FWLOG_${appName}_%Y%m%d%H%M%S_${SN}.DAT"
    ftp_dir_pattern = "ftp/%Y/%m/%d/"
    ftp_addr = "192.168.1.148:21"
    username = "ftp_user"
    password = "123456"
    ticker_interval = 30
    compressor_name = "gzip"
    encoder = 'PayloadEncoder'
最终ftp上的目录文件结构如下(该目录是相对ftp用户主目录的相对路径)
    ftp
    └── 2020
         └── 06
            ├── 01
            │   └── FWLOG_firewall1_20200601190235_0000.DAT.gz
            └── 02
                ├── FWLOG_firewall1_20200602181430_0000.DAT.gz
                ├── FWLOG_firewall1_20200602181430_0001.DAT.gz
                └── FWLOG_firewall1_20200602181433_0000.DAT.gz
===== RagelDecoder 解析说明
RagelDecoder 采用 Ragel 生成 FSM 代码的方式快速提取网络日志中的五元组(srcip, srcport, dstip, dstport, time)字段，比采用正则表达式方式性能提高一个数量级。针对不同类型的网络日志，可以快速开发针对性的 Ragel 代码扩展。
日志易内置 ragels 目前支持的解析格式及日志样例如下：
ciscoasa::
  Mar 08 10:50:54 10.119.1.133 %ASA-6-302016: Teardown UDP connection 517906 for outside:108.106.227.147/55563 to inside:10.122.23.61/53 duration 0:02:07 bytes 228
hillstone::
  Sep 8 12:09:25 2812706182002847(root) 44243624 Traffic@FLOW: SESSION: 10.96.43.32:35366->106.15.42.197:443(TCP), application HTTPS, interface ethernet0/0, vr trust-vr, policy 18, user -@-, host -, send packets 9,send bytes 1306,receive packets 10,receive bytes 5584,start time 2019-09-05 12:07:19,close time 2019-09-05 12:09:25,session end,TCP RST
huawei::
  Jan 2 2020 09:29:58 M-138-USG6650 %%01POLICY/6/POLICYPERMIT(l):vsys=public, protocol=6, source-ip=120.199.93.8, source-port=35782, destination-ip=10.19.4.4, destination-port=443, time=2020/1/2 17:29:58, source-zone=untrust, destination-zone=trust, rule-name=aaaa
huaweieudemon9000e::
  2020-10-12 23:02:10 HUANFV-CMNET-FW02-HWE9000EX8-CDBL %%01SECLOG/6/SESSION_TEARDOWN(l):IPVer=4,Protocol=udp,SourceIP=10.9.1.88,DestinationIP=112.4.1.36,SourcePort=20101,DestinationPort=53,SourceNatIP=39.144.151.139,SourceNatPort=45425,BeginTime=1602514920,EndTime=1602514920,SendPkts=1,SendBytes=64,RcvPkts=1,RcvBytes=128,SourceVpnID=0,DestinationVpnID=0,SourceZone=trust,DestinationZone=untrust,PolicyName=ipv4_source,CloseReason=aged-out.
h3cm9016v::
   1 192.168.202.251 2020 Nov 30 06:58:14 DEZFW01BHS-DXL4-M9016-V - NAT444:SessionW 1606719489|1606719495|10.1.71.63|58038|39.144.108.135|7280|119.29.29.29|80|6