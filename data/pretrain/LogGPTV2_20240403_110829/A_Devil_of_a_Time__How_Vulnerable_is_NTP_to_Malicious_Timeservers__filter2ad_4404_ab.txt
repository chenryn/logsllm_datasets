### Time Shifting Attacks on NTP and Their Impact

#### Introduction
Time shifting attacks on NTP (Network Time Protocol) can significantly impact various applications and services. For example, to shift time by a certain amount (seconds, minutes, hours, days, months, or years), an attacker must have sufficient presence in the set of timeservers that the client syncs with. These attacks can be launched by a man-in-the-middle (MITM) attacker capable of intercepting and tampering with NTP messages between the client and a significant subset of timeservers, or by an attacker who has direct control over a subset of the NTP timeservers.

#### Impact on Different Applications
The following table, taken from [24], shows the extent to which time at an NTP client should be shifted to harm different applications and services:

| Application/Service | Time Shift Required |
|---------------------|---------------------|
| TLS Certificates     | Years                |
| HSTS (HTTP Strict Transport Security) | A year  |
| DNSSEC (DNS Security Extensions) | Months  |
| DNS Caches          | Days                 |
| Routing (RPKI)      | Days                 |
| Bitcoin             | Hours                |
| API Authentication  | Minutes              |
| Kerberos            | Minutes              |

As shown in [24], time shifting attacks on NTP can serve as building blocks for compromising many applications and services of interest.

### NTP Security

To combat time-shifting and other attacks, NTP practitioners and researchers have investigated two main approaches:

1. **Authenticating NTP Communications:**
   - While NTP supports cryptographic authentication [7, 36], in practice, NTP traffic is rarely authenticated due to various reasons [11, 34, 40].
   - Even if NTP traffic is encrypted, an attacker capable of delaying or dropping traffic can still influence the time at the NTP client.
   - Encryption does not defend against an attacker in control of the NTP timeservers themselves.

2. **Client-Side Solutions: The Chronos NTP Client:**
   - The recently introduced Chronos NTP client [6] reflects a different approach to NTP security. Chronos distributes time queries across a large number of NTP timeservers and employs an approximate agreement algorithm to discard outlying responses and update the local clock.
   - Specifically, a set of hundreds of timeservers is assigned to a client, and the IP addresses of these timeservers are stored at the client. The client periodically queries a small subset (e.g., 10-15) of these servers, chosen uniformly at random.
   - By removing the lowest and highest time samples gathered from the queried servers and setting the local time to the average of the remaining samples, Chronos achieves high time accuracy as long as the attacker cannot influence "too many" of the servers assigned to the client.
   - This approach sets a higher bar for the attacker, requiring them to compromise a large fraction of the timeservers to successfully shift time at the client. However, unless these servers are carefully chosen, the attacker can gain control of a significant fraction, nullifying the security benefits.

### Attack Strategies

We present a high-level overview of two attack strategies: (1) taking control of existing timeservers and (2) injecting new timeservers into the pool.

#### Attack I: Utilizing Existing Timeservers

**Goals of the Attack:**
- An opportunistic attacker aims to shift time at many clients in a specific geographical region (e.g., country or continent) to harm the performance or security of a certain Internet application/service.

**Threat Model:**
- The attacker controls a subset \( A \) of the pool's timeservers in the region. This can include:
  1. Legitimate hosting of NTP timeservers.
  2. Compromising a subset of the servers (e.g., via software vulnerabilities).
  3. Attracting traffic from NTP clients destined for subset \( A \) via off-path attacks on DNS or BGP.

**The Attack:**
- By controlling timeserver subset \( A \), the attacker can respond with inaccurate times to all queries issued to its servers by higher strata timeservers, shifting time at these servers and, indirectly, at all clients in the region that sync with them.
- The attacker-controlled servers must be highly influential, meaning many higher strata servers rely on them for time synchronization.
- Our empirical analyses show that control of just tens of timeservers in Europe or the US is sufficient for shifting time at a continent/country scale.

**Pool Monitor Limitations:**
- The pool monitor periodically queries timeservers and removes those with significant time discrepancies.
- Attacker-controlled servers can evade detection by responding with correct times when queried by the monitor while reporting false times to others.
- Higher-strata timeservers influenced by the attacker will eventually be removed from the pool, but many clients continue to sync with them for extended periods, enabling the attacker to shift time at these clients.

#### Attack II: Injecting New Timeservers

**Entering the Pool:**
- Registering a new timeserver in the NTP pool is straightforward, requiring only an IP address and email address.
- The legitimacy of a registered timeserver depends on its availability and time accuracy, which are monitored by the pool.

**Netspeed Parameter:**
- The "netspeed" parameter of a timeserver is correlated with the volume of NTP clients directed to it by the pool.
- By setting the netspeed to the maximum value, the attacker can increase the chances that their injected server is assigned to any client by orders of magnitude.

**Goals of the Attack:**
- Both opportunistic and strategic attackers aim to shift time at many or specific clients, respectively.

**Threat Model:**
- The attacker injects new timeservers into the pool and controls them directly.
- The attacker can report accurate times to the monitor and some clients while reporting inaccurate times to others, facilitating targeted attacks.

**The Attack:**
- The attacker creates and registers new timeservers, geolocated to specific regions.
- By increasing the number of injected servers, the attacker can arbitrarily increase the probability of being assigned to clients in a certain region.
- The attacker can employ the technique from [6, 24] to repeatedly increase/decrease time by 16 minutes, undetected by the monitor.

### Empirical Analysis of Attacks Exploiting Inter-Server Dependencies

We empirically quantify the extent to which an attacker that gains control of existing NTP timeservers can influence time in their region. Our results demonstrate that even a small subset of highly influential timeservers can enable the attacker to shift time at a large scale.

### Conclusion

Time shifting attacks on NTP can have severe implications for various applications and services. While solutions like the Chronos NTP client offer enhanced security, they are not foolproof. Understanding and mitigating these attacks requires careful consideration of both the network infrastructure and the security measures in place.