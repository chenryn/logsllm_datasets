### Overall Architecture and Integration

**Figure 5: Overall Architecture of OpenPilot Integrated with CARLA, the Driver Reaction Simulator, and the Fault Injection Engine.**
- **Online Availability:** [GitHub Repository](https://github.com/UVA-DSA/openpilot-CARLA)

OpenPilot is integrated with the CARLA driving simulator and a fault injection engine. When using CARLA, the Panda software and hardware, which are typically used for safety checks, are not utilized. This means that the safety limits normally enforced by Panda are not active. In our experiments, we consider these safety limits as constraints to generate faulty values for Context-Aware attacks, allowing them to evade detection by Panda during actual driving (Equation 1).

### Experimental Setup

Our experiments were conducted on Ubuntu 20.04 LTS, using OpenPilot v0.8.9 and CARLA v9.11. Each simulation of OpenPilot consists of 5000 time-steps, with each step lasting approximately 10 ms, totaling 50 seconds.

### Driving Scenarios

Using the CARLA simulator, we created various driving scenarios where the Ego vehicle, traveling at 60 mph, approaches a lead vehicle from different distances (50, 70, or 100 meters) with the following behaviors:
- **S1:** Lead vehicle cruises at 35 mph.
- **S2:** Lead vehicle cruises at 50 mph.
- **S3:** Lead vehicle slows down from an initial speed of 50 mph.
- **S4:** Lead vehicle accelerates from an initial speed of 35 mph to 50 mph.

**Figure 6(a-b):** Different views of a simulated scenario.

### Driver Reaction Simulator

To simulate a human driver taking control in an emergency, we developed a driver reaction simulator. This setup allows us to evaluate how the system behaves when the driver intervenes.

**Figure 6:**
- **(a):** Initial position of the Ego Vehicle (EV) and other reference vehicles.
- **(b):** User interface of OpenPilot during the simulation.
- **(c):** EV collides with the lead vehicle.
- **(d):** EV collides with the guardrail.

### Attack Strategy Comparisons

**Table IV: Attack strategy comparisons with an alert driver.**

| TTH(s) | Attack Strategy | Alerts | Hazards | Accidents | Hazards & No Alerts | Lane Invasions (No. Event/s) |
|--------|-----------------|--------|---------|-----------|---------------------|------------------------------|
| 0.46   | No Attacks      | 2 (0.1%) | 3248 (22.6%) | 346 (24.0%) | 210 (14.6%) | 4 (0.3%) |
| 1.03   | Random-ST+DUR   | 0 | 0 | 5727 (39.8%) | 771 (53.5%) | 388 (26.9%) |
| 0.68   | Random-ST       | 0 | 0 | 1201 (83.4%) | 3293 (22.9%) | 35.8% |
| 0.46   | Random-DUR      | 0 | 0 | 3083 (21.4%) | 474 (32.9%) | 229 (15.9%) |
| 0.66   | Context-Aware   | 0 | 0 | 1197 (83.1%) | 0.46 | 0.66 |

- **Random-ST+DUR:** We ran 14,400 simulations to maximize coverage of critical attack parameters. The attack duration was uniformly distributed within [0.5, 2.5] seconds.
- **Random-ST:** The start time was randomly chosen, but the attack duration was fixed at 2.5 seconds (average driver reaction time).
- **Random-DUR:** The attack duration was randomly chosen from [0.5, 2.5] seconds, with the start time inferred based on context.

### Results

#### System Resilience Evaluation

We evaluated the resilience of OpenPilot in the presence of an alert driver by running simulations with and without attacks. Under normal operation, no hazards or accidents occurred, but 2 steer saturated alerts were raised due to the steering angle exceeding predefined safety limits.

**Figure 7:** Trajectory of the Ego Vehicle during an attack-free simulation.

**Observation 1:** Lane invasions can occur even without any attacks.

#### Comparison to Random Attack Strategies

The Context-Aware strategy outperformed the three random strategies, achieving the highest hazard coverage of 83.4%, with 99.7% (1197/1201) of hazards occurring without any alerts. Additionally, 53.4% (641/1201) of hazards resulted in accidents, including collisions with the lead vehicle and roadside objects.

**Observation 2:** The Context-Aware attack strategy is efficient in exploiting safety-critical states of ADAS. During attacks, the forward collision warning does not get activated at all.

#### Evaluation of Attack Duration and Start Time

To further evaluate the importance of attack duration and start time, we assessed the coverage of the fault parameter space by different attack strategies. **Figure 8** illustrates a sample parameter space for durations between 0.5 to 2.5 seconds and start times between 5 to 35 seconds for the Acceleration attack type. Each dot represents an attack simulation, with solid dots indicating hazardous simulations.

**Observation 3:** Context-Aware selection of start time and duration does not waste resources on non-hazardous random injections.

#### Evaluation of Strategic Value Corruption

In this set of experiments, we further evaluated the performance of the Context-Aware strategy with and without strategic value corruption.

**Table V: Context-aware attack with or without strategic value corruption and with an alert driver.**

| TTH(s) (Avg. ± Std.) | Prevented Hazards | With Strategic Value Corruption | Alerts | Hazards | Accidents | TTH(s) (Avg. ± Std.) | Attack Type | New Hazards | Prevented Accidents | Reduced Accidents |
|----------------------|-------------------|---------------------------------|--------|---------|-----------|----------------------|-------------|-------------|---------------------|-------------------|
| 3.33±0.23            | 122 (50.8%)       | 4                               | 1      | 2       | 3         | 1.7%                 | Acceleration | 160 (66.7%) | 200 (83.3%)         | 120 (50.0%)       |
| 2.62±0.04            | 142 (9.9%)        | 200 (83.3%)                     | 41.2%  | 77.9%   | 99        | 1.11±0.86            | Deceleration | 0           | 0                   | 0                 |
| 1.11±0.86            | 187 (76.6%)       | 120 (50.0%)                     | 0.8%   | 100.0%  | 100.0%    | 1.63±0.08            | Steering-Left | 0           | 0                   | 0                 |
| 1.63±0.08            | 240 (100.0%)      | 17 (7.1%)                       | 55.0%  | 0.8%    | 100.0%    | 1.51±0.15            | Steering-Right | 0           | 0                   | -1 (0.4%)         |
| 1.51±0.15            | 240 (100.0%)      | 170                             | 70.8%  | 36.8%   | 1         | 2.63±0.02            | Acceleration-Steering | 68 (28.3%) | 0                   | -17 (7.1%)        |
| 2.63±0.02            | 511 (70.8%)       | 1                               | 66.7%  | 0.0%    | 96.2%     | 2.04±1.10            | Deceleration-Steering | 0           | 0                   | 0                 |
| 2.04±1.10            | 141 (58.8%)       | 0                               | 0.4%   | 0.0%    | 37.5%     | Total                | 228 (16.4%) | 200 (22.4%) | 102 (11.4%)         | 0.4%              |

**Figure 8:** State space of "Attack start time" and "Duration" for Acceleration attacks (solid shapes correspond to hazardous results and empty ones to non-hazardous).

### Conclusion

The Context-Aware attack strategy is highly effective in exploiting safety-critical states of ADAS, outperforming random attack strategies. It also ensures that the number of lane invasions and alerts remains low, making it a more strategic and efficient approach.