14,400
1,440
1,440
1,440
No. Attacks
Fig. 5: Overall architecture of OpenPilot, integrated with CARLA,
the driver reaction simulator, and the fault injection engine. [Online
Available: https://github.com/UVA-DSA/openpilot-CARLA ].
through the CAN bus. When integrated with the CARLA
driving simulator, the Panda software and hardware are not
utilized by OpenPilot. Therefore, Panda safety checks are not
enforced. Here, we consider all safety limits checked by Panda
as constraints for generating faulty values for the Context-
Aware attacks so that they evade detection by Panda when it
is engaged in actual driving (Eq. 1).
Our experiments are done on Ubuntu 20.04 LTS, with
OpenPilot v0.8.9 and CARLA v9.11. A single simulation of
OpenPilot contains 5000 time-steps, each step lasts about 10
ms, which in total equals 50 seconds.
A. Driving Scenarios
Using the CARLA simulator, we create different driving
scenarios where the Ego vehicle, cruising at 60mph from
50, 70, or 100 meters away, approaches a lead vehicle with
different behaviors as follows.
• S1: Lead vehicle cruises at the speed of 35 mph;
• S2: Lead vehicle cruises at the speed of 50 mph;
• S3: Lead vehicle slows down from an initial speed of 50
• S4: Lead vehicle accelerates from an initial speed of 35
mph to 35 mph;
mph to 50 mph.
Fig. 6(a-b) show different views of a simulated scenario.
B. Driver Reaction Simulator
To mimic the situation where the human driver takes
over the control of the vehicle in an emergency situation,
(a) An example initial position of Ego
Vehicle (EV) and other reference vehicles.
(b) The user interface of OpenPilot
during the simulation.
(c) EV collides with the lead vehicle.
(d) EV collides with the guardrail.
Fig. 6: Driving scenarios in OpenPilot.
583
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:45 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IV: Attack strategy comparisons with an alert driver.
TTH(s)
Attack Strategy
Alerts
Hazards
Accident
Hazards&
no Alerts
LaneInvasion
(No. Event/s)
(Avg. ± Std.)
No Attacks
Random-ST+DUR
Random-ST
Random_DUR
Context-Aware
2
(0.1%)
3248
(22.6%)
346
(24.0%)
210
(14.6%)
4
(0.3%)
0
0
0
5727
(39.8%)
(53.5%)
771
388
(26.9%)
1201
(83.4%)
3293
(22.9%)
(35.8%)
516
332
641
(23.1%)
(44.5%)
3083
(21.4%)
(32.9%)
474
229
(15.9%)
1197
(83.1%)
0.46
1.03
0.68
0.46
0.66
1.61±1.96
1.49±0.73
1.92±1.17
2.43±1.29
till 10 seconds before the end), with attack duration uni-
formly distributed within [0.5, 2.5] seconds. We run Random-
ST+DUR strategy for 14,400 simulations to maximize cover-
age of the critical attack parameters. For the second baseline
(referred to as Random-ST), we randomly choose a start time
but ﬁx the attack duration to be equal to the average driver
reaction time (2.5 seconds). To test the relationship between
hazards and attack duration, we also design a third baseline
(referred to as Random-DUR) by randomly choosing the attack
duration from a range of [0.5, 2.5] seconds with the start time
inferred based on context. All the attack values are within
the range of OpenPilot safety checks. Note that aggressive
random attacks (e.g., bombarding the CAN-bus with out-
of-the-range values) may get detected by existing intrusion
detection mechanisms for in-vehicular networks [11], [19] and
the OpenPilot safety checks, so they are not considered here.
E. Results
1) System Resilience Evaluation: We evaluate the resilience
of OpenPilot in presence of an alert driver by running the
simulations with and without the attacks. Table IV shows that
under normal system operation, when no attacks are engaged,
no hazards or accidents occur. However, 2 steer saturated
alerts were raised due to the steering angle exceeding the pre-
deﬁned safety limits in OpenPilot. Fig. 7 shows an example
of the performance of the ALC system. We observe that the
ALC system does not keep the Ego vehicle in the center of
the lane at all times, and lane invasions occur with an average
frequency of 0.46 times per second, which can lead to out-of-
lane hazards or collision with road-side objects. This indicates
that the ALC and ACC systems do not cooperate well, which
is a defect in the control software and needs to be ﬁxed.
Observation 1: Lane invasions can happen even without
any attacks.
2) Comparison to Random Attack Strategies: Table IV also
shows that the Context-Aware strategy outperforms the three
random strategies and achieves the highest hazard coverage of
83.4%, with 99.7% (1197/1201) of hazards occurring without
any alerts. Note that 53.4% (641/1201) of hazards result in
accidents, including collision with the lead vehicle and road-
side objects (see Fig. 6(c-d)). In these cases, the alert raised by
ADAS is the steer saturated warning, while the more relevant
forward collision warning (FCW) is not activated as the brake
output is kept less than the safety threshold of OpenPilot. We
also observe an increased number of lane invasions per second
for almost all attacks due to the occurrence of out-of-lane
hazards. Despite achieving the highest hazard coverage, the
Context-Aware attacks keep the number of lane invasions and
alerts low because of the strategic value corruption.
Observation 2: The Context-Aware attack strategy is
efﬁcient in exploiting safety critical states of ADAS.
During attacks, the forward collision warning does not
get activated at all.
From Table IV we also see that the average TTH of Context-
Aware attack is larger than the Random attacks due to a higher
hazard rate in Acceleration attack that has a longer TTH.
3) Evaluation of Attack Duration and Start Time: To further
evaluate the importance of attack duration and start time, we
assess the coverage of the fault parameter space by different
attack strategies. Fig. 8 illustrates a sample parameter space
for durations between 0.5 to 2.5 seconds and start
times
between 5 to 35 seconds for the Acceleration attack type. Each
dot in this ﬁgure represents an attack simulation. The solid
dots represent simulations with hazards. This ﬁgure illustrates
that an attack does not result in any hazard if not activated
within a critical time window (after dashed line at about 24-25
seconds), regardless of how long the attack lasts. After ﬁnding
the critical launch moment, the attack needs to last for a time
period (at least 1.5 seconds) to cause a hazard. Therefore, it
is important to ﬁnd both the opportune time to start an attack
and the required duration to increase the hazard success rate.
We also observe that the Context-Aware strategy (marked
by orange diamonds) are all solid (hazardous) and located
within the critical time window. The dots that correspond to
Random-ST and Random-DUR strategies result in a signiﬁcant
number of non-hazardous cases. This ﬁgure further attests the
efﬁciency of the proposed Context-Aware strategy.
Observation 3: Context-Aware selection of start time
and duration does not waste resources on non-
hazardous random injections.
4) Evaluation of the Strategic Value Corruption: In this
set of experiments, we further evaluate the performance of
the Context-Aware strategy with and without
the strategic
Fig. 7: Trajectory of the Ego Vehicle during an attack-free simulation.
Fig. 8: State space of “Attack start time" and “Duration" for Acceler-
ation attacks (solid shapes correspond to hazardous results and empty
ones to non-hazardous).
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:45 UTC from IEEE Xplore.  Restrictions apply. 
684
5101520253035Attack Start Time(s)0.51.01.52.02.5Attack Duration (s)Random-ST+DURRandom-STRandom-DURContext-AwareCritical TimeTABLE V: Context-aware attack with or without strategic value corruption and with an alert driver.
No Strategic Value Corruption
TTH(s)
(Avg. ± Std.)
Prevented
Hazards
With Strategic Value Corruption
Alerts
Hazards
Accident
TTH(s)
(Avg. ± Std.)
Attack Type
Acceleration
Deceleration
Steering-Left
Steering-Right
Acceleration-Steering
Deceleration-Steering
Total
Alerts
Hazards
Accident
(1.7%)
(0.4%)
122
(50.8%)
4
1
2
2
3
(1.2%)
142
(9.9%)
200
(83.3%)
(41.2%)
(77.9%)
99
187
240
240
138
(57.5%)
1104
(76.6%)
120
(50.0%)
0
(0.0%)
175
(72.9%)
240
240
17
(7.1%)
792
(55.0%)
(0.8%)
(100.0%)
(100.0%)
(0.8%)
(100.0%)
(100.0%)
3.33±0.23
2.62±0.04
1.11±0.86
1.63±0.08
1.51±0.15
2.63±0.02
2.04±1.10
New
Hazards
160
(66.7%)
0
0
0
0
68
(28.3%)
228
(16.4%)
Prevented
Accidents
200
(83.3%)
0
0
0
0
0
200
(22.4%)
Reduced
Accidents
120
(50%)
0
0
0
-1
(0.4%)
-17
(7.1%)
102
(11.4%)
(83.3%)
200
141
(58.8%)
0
0
0
170
511
(70.8%)
(36.8%)
1
0
1
0
2
0
4
(0.4%)
(66.7%)
(0.0%)
(96.2%)
(0.0%)
(0.4%)
(37.5%)
(0.0%)
(100.0%)
(100.0%)
(0.8%)
(100.0%)
(100.0%)
160
231
90
240
240
240
160