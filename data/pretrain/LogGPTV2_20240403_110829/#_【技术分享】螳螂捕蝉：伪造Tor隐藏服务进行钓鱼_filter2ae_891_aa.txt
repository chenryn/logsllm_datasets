# 【技术分享】螳螂捕蝉：伪造Tor隐藏服务进行钓鱼
|
##### 译文声明
本文是翻译文章，文章来源：incoherency.co.uk
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**一、前言**
****
[****](https://smsprivacy.org/)**[**SMS Privacy**](https://smsprivacy.org/)**
是我创建的一个隐私短信服务，可以作为Tor隐藏服务来使用，事实上的确有约10%的用户以这种方式来使用该服务。然而，我发现有些人伪造了我的Tor隐藏服务来创建一个钓鱼网站，在本文中，我会与读者分享我发现的一些细节。
**二、概述**
某一天，[Charlie](https://charlie.ht/)正在网上随便逛逛，突然，他发现使用谷歌搜索“site:*.onion.to
smsprivacy”会得到一些意想不到的结果。
**smspriv6fynj23u6.onion** 是合法的隐藏服务名，然而，搜索页面中出现了另一个结果：
**smsprivyevs6xn6z.onion** ，对应的站点看起来一模一样。
经过简单调研后，我们发现这个网站是一个简单的代理网站，即：所有发往该钓鱼站点的页面请求都会被转发到真实的隐藏服务上，并会返回收到的响应数据，只有几个特殊之处除外：
**1、头部中缺失Content-Length字段。**
HTTP客户端可以根据Content-Length头了解待传输内容的字节数。如果代理服务器不对响应数据进行修改，那么它可以保持Content-Length头不变，直接传递这个字段，因为代理服务器知道如果内容不发生改变的话，其数据长度也不会发生变化。
然而，这个代理服务器认为响应内容会发生改变，这意味着 **服务器准备在某些情况下修改响应内容** 。
既然如此，它为什么不修改Content-Length字段，使其对应修改后的内容长度呢？
可能是代理服务器想减少页面加载时间：如果代理服务器不需要预先了解长度值，那么它就可以在收到响应内容后以数据流方式直接发送给客户端，在发送过程中修改数据。如果代理服务器需要读取所有内容，再进行修改，然后再发送所有数据，那么有可能会增加页面加载时间，引起用户怀疑。
可能代理服务器作者无法接受存储所有内容所需的高内存负载。如果同一个服务器正在代理数十个至数百个其他隐藏服务，那么采用这种方案也是可以理解的。
**2、头部中Connection字段错误。**
合法站点与钓鱼站点的响应头对比如下所示。
合法站点：
    $ torsocks curl -I http://smspriv6fynj23u6.onion/
    HTTP/1.1 200 OK
    Server: nginx/1.10.2
    Date: Fri, 13 Oct 2017 05:37:49 GMT
    Content-Type: text/html;charset=UTF-8
    Content-Length: 7387
    Connection: keep-alive
    Set-Cookie: [...]
    X-Frame-Options: DENY
钓鱼站点：
    $ torsocks curl -I http://smsprivyevs6xn6z.onion/
    HTTP/1.1 200 OK
    Server: nginx/1.10.2
    Date: Fri, 13 Oct 2017 05:37:57 GMT
    Content-Type: text/html;charset=UTF-8
    Connection: [object Object]
    Set-Cookie: [...]
    X-Frame-Options: DENY
头部中Connection字段由keep-alive变成了[object Object]。
**当你使用javascript语言，将某个对象转化为字符串时，如果该对象没有实现toString()方法，就会得到这个结果。这个线索非常重要，可以告诉我们代理服务器正在运行的软件类型。**
代理服务器很有可能使用的是NodeJS。我无法在node-http-proxy或者Harmon上复现这个bug（Harmon是node-http-proxy的中间件，用来修改响应数据）。很有可能代理服务器使用了自定义的解决方案。如果有人知道什么软件会有bug导致Connection头变为[object
Object]，请及时告诉我。
**3、代理服务器会缓存某些非预期的javascript文件（可能会有其他文件被缓存下来）。**
我添加了一些Javascript，以检测页面是否运行在某个流氓域名上，如果的确如此，脚本会把 **document.referrer**