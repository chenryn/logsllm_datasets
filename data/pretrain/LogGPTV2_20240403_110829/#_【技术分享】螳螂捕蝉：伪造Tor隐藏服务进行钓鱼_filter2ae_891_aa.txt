# 【技术分享】螳螂捕蝉：伪造Tor隐藏服务进行钓鱼

#### 译文声明
本文为翻译文章，原文来源：incoherency.co.uk
原文地址：[此处插入原始链接]
译文仅供参考，具体内容及含义请以原文为准。
译者：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
预估稿费：200 RMB
投稿方式：发送邮件至linwei#360.cn 或登录网页版在线投稿

## 一、前言
我创建了一个名为**SMS Privacy**的隐私短信服务，该服务可以作为Tor隐藏服务使用。实际上，大约有10%的用户是通过这种方式来访问该服务的。然而，我发现有些人伪造了我的Tor隐藏服务并创建了一个钓鱼网站。在本文中，我将与读者分享这一发现的一些细节。

## 二、概述
有一天，Charlie在网上闲逛时，他注意到使用谷歌搜索“site:*.onion.to smsprivacy”会返回一些意外的结果。
合法的隐藏服务名称是 **smspriv6fynj23u6.onion**，但搜索结果中出现了另一个域名：**smsprivyevs6xn6z.onion**。这个站点看起来与原站点几乎完全相同。

经过初步调查后，我们发现这是一个简单的代理网站。所有发往该钓鱼站点的页面请求都会被转发到真实的隐藏服务上，并返回响应数据。只有少数地方有所不同：

1. **缺失Content-Length字段**
   HTTP客户端通常依赖于Content-Length头来了解待传输内容的字节数。如果代理服务器不对响应数据进行修改，则可以保持Content-Length头不变，直接传递这个字段，因为代理服务器知道如果内容不发生变化，其长度也不会改变。
   
   然而，在这种情况下，代理服务器认为响应内容可能会发生改变。这意味着它准备在某些情况下修改响应内容。那么，为什么它不相应地更新Content-Length字段呢？可能的原因有两个：
   - 减少页面加载时间：如果代理服务器不需要预先知道长度值，就可以在收到响应内容后立即以流的形式发送给客户端，同时进行必要的修改。这比先读取全部内容再发送要快得多。
   - 减轻内存负担：如果同一台服务器正在代理数十甚至数百个其他隐藏服务，采用这种方法可以有效降低对内存的需求。

2. **错误的Connection字段**
   正规站点与假冒站点之间的HTTP响应头对比如下所示：

   合法站点：
   ```plaintext
   $ torsocks curl -I http://smspriv6fynj23u6.onion/
   HTTP/1.1 200 OK
   Server: nginx/1.10.2
   Date: Fri, 13 Oct 2017 05:37:49 GMT
   Content-Type: text/html;charset=UTF-8
   Content-Length: 7387
   Connection: keep-alive
   Set-Cookie: [...]
   X-Frame-Options: DENY
   ```

   钓鱼站点：
   ```plaintext
   $ torsocks curl -I http://smsprivyevs6xn6z.onion/
   HTTP/1.1 200 OK
   Server: nginx/1.10.2
   Date: Fri, 13 Oct 2017 05:37:57 GMT
   Content-Type: text/html;charset=UTF-8
   Connection: [object Object]
   Set-Cookie: [...]
   X-Frame-Options: DENY
   ```
   在这里，`Connection`字段由`keep-alive`变成了`[object Object]`。当使用JavaScript将一个未实现`toString()`方法的对象转换成字符串时，就会出现这种情况。这个线索表明，代理服务器很可能运行的是NodeJS环境。尽管我在`node-http-proxy`或`Harmon`（`node-http-proxy`的一个中间件）中无法复现此问题，但仍有可能是自定义代码导致了这一现象。如果有谁知道什么软件会出现类似的bug，请及时告知。

3. **缓存非预期的JavaScript文件**
   我添加了一些JavaScript代码来检测当前页面是否运行在一个可疑的域名上。如果是这样，脚本会尝试记录`document.referrer`的值。