# 三、配置 Jenkins
我们已经看到了如何配置和使用 Docker。在本章中，我们将介绍 Jenkins，它可以单独使用或与 Docker 一起使用。我们将展示这两种工具的组合会产生令人惊讶的好结果:自动化配置和灵活的可伸缩性。
本章涵盖以下主题:
*   介绍 Jenkins 及其优势
*   安装和启动 Jenkins
*   创建第一个管道
*   用代理扩展 Jenkins
*   配置基于 Docker 的代理
*   构建自定义主和从 Docker 映像
*   配置安全和备份策略
# Jenkins 是什么？
Jenkins 是一个用 Java 编写的开源自动化服务器。凭借非常活跃的基于社区的支持和大量插件，它是实现持续集成和持续交付流程的最流行工具。原名哈德逊，在甲骨文收购哈德逊并决定将其开发为专有软件后更名。Jenkins 仍在麻省理工学院的许可下工作，因其简单性、灵活性和多功能性而受到高度评价。
Jenkins 超越了其他的持续集成工具，是同类软件中使用最广泛的。这一切都是可能的，因为它的特点和能力。
让我们来看看 Jenkins 性格中最有趣的部分。
*   **语言不可知** : Jenkins 有很多插件，支持大部分的编程语言和框架。此外，由于它可以使用任何 shell 命令和安装的任何软件，因此它适用于所有可以想象的自动化过程。
*   **通过插件扩展** : Jenkins 有一个很棒的社区，有很多可用的插件(1000 加)。它还允许您编写自己的插件，以便根据您的需要定制 Jenkins。
*   **便携** : Jenkins 是用 Java 写的，所以可以在任何操作系统上运行。为了方便起见，它还提供了许多版本:网络应用存档(WAR)、Docker 映像、Windows 二进制、Mac 二进制和 Linux 二进制。
*   **支持大多数 SCM** : Jenkins 几乎与现有的每一个源代码管理或构建工具集成在一起。同样，由于其广泛的社区和插件，没有其他持续集成工具支持如此多的外部系统。
*   **分布式** : Jenkins 有一个内置的主/从模式的机制，它将它的执行分布在位于多台机器上的多个节点上。它也可以使用异构环境，例如，不同的节点可以安装不同的操作系统。
*   **简单性**:安装配置过程简单。不需要配置任何额外的软件，也不需要配置数据库。它可以完全通过图形用户界面、XML 或 Groovy 脚本进行配置。
*   **面向代码** : Jenkins 管道定义为代码。此外，Jenkins 本身可以使用 XML 文件或 Groovy 脚本进行配置。这允许将配置保存在源代码库中，并有助于 Jenkins 配置的自动化。
# Jenkins 装置
Jenkins 安装过程快速简单。有不同的方法可以做到这一点，但是由于我们已经熟悉了 Docker 工具及其带来的好处，我们将从基于 Docker 的解决方案开始。这也是最容易、最可预测、最聪明的方法。不过，我们先提一下安装要求。
# 安装要求
最低系统要求相对较低:
*   Java 8
*   256 兆可用内存
*   1 GB+可用磁盘空间
然而，理解需求严格取决于您计划如何处理 Jenkins 是至关重要的。如果使用 Jenkins 作为 Continuous Integration 服务器为整个团队服务，那么即使是小团队的情况，也建议有 1 GB 加空闲内存和 50 GB 加空闲磁盘空间。不用说，Jenkins 还会执行一些计算，并通过网络传输大量数据，因此 CPU 和带宽至关重要。
To get a feeling what could be the requirements in case of a big company, the Netflix example is presented in the *Jenkins architecture* section.
# 安装在 Docker 上
让我们看看使用 Docker 安装 Jenkins 的分步过程。
Jenkins 映像可在正式的 Docker Hub 注册表中找到，因此为了安装它，我们应该执行以下命令:
```
$ docker run -p :8080 -v :/var/jenkins_home jenkins:2.60.1
```
我们需要指定第一个`host_port`参数——Jenkins 在容器外部可见的端口。第二个参数`host_volume`指定了 Jenkins 家映射到的目录。它需要被指定为卷，因此需要永久保存，因为它包含配置、管道构建和日志。
例如，让我们看看在 Linux/Ubuntu 上安装 Docker 主机的情况下，安装步骤会是什么样子。
1.  **准备卷目录**:我们需要一个单独的目录，拥有管理员的所有权，以保持 Jenkins 家。让我们用以下命令准备一个:
```
 $ mkdir $HOME/jenkins_home
 $ chown 1000 $HOME/jenkins_home
```
2.  **运行 Jenkins 容器**:让我们将容器作为一个守护进程运行，并赋予它一个合适的名称:
```
 $ docker run -d -p 49001:8080 
        -v $HOME/jenkins_home:/var/jenkins_home --name 
        jenkins jenkins:2.60.1
```
3.  **检查 Jenkins 是否在运行**:过一会儿，我们可以通过打印日志来检查 Jenkins 是否已经正确启动:
```
 $ docker logs jenkins
 Running from: /usr/share/jenkins/jenkins.war
 webroot: EnvVars.masterEnvVars.get("JENKINS_HOME")
 Feb 04, 2017 9:01:32 AM Main deleteWinstoneTempContents
 WARNING: Failed to delete the temporary Winstone file 
        /tmp/winstone/jenkins.war
 Feb 04, 2017 9:01:32 AM org.eclipse.jetty.util.log.JavaUtilLog info
 INFO: Logging initialized @888ms
 Feb 04, 2017 9:01:32 AM winstone.Logger logInternal
 ...
```
In the production environment, you may also want to set up the reverse proxy in order to hide the Jenkins infrastructure behind the proxy server. The short description how to do it using the Nginx server can be found at [https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+with+Docker](https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+with+Docker).
完成这几个步骤后，Jenkins 就可以使用了。基于 Docker 的安装有两个主要优势:
*   **故障恢复**:如果 Jenkins 崩溃了，那么运行一个相同指定体积的新容器就足够了。
*   **自定义映像**:可以根据需要配置 Jenkins，存储为 Jenkins 映像。然后它可以在您的组织或团队中共享，并且不需要一直重复相同的配置步骤，很多次。
Everywhere in this book, we use Jenkins in version 2.60.1.
# 不带 Docker 安装
出于前面提到的原因，建议安装 Docker。但是，如果这不是一个选项，或者有其他原因需要继续，那么安装过程也很简单。例如，在 Ubuntu 的情况下，运行以下内容就足够了:
```
$ wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
$ sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
$ sudo apt-get update
$ sudo apt-get install jenkins
```
All installation guides (Ubuntu, Mac, Windows, and others) can be found on the official Jenkins page [https://jenkins.io/doc/book/getting-started/installing/](https://jenkins.io/doc/book/getting-started/installing/).
# 初始配置
无论您选择哪种安装，Jenkins 的第一次启动都需要几个配置步骤。让我们一步一步来了解它们:
1.  在浏览器中打开 Jenkins:`http://localhost:49001`(对于二进制安装，默认端口为`8080`)。
2.  Jenkins 应该询问管理员密码。这可以在 Jenkins 日志中找到:
```
 $ docker logs jenkins
 ...
 Jenkins initial setup is required. An admin user has been created 
        and a password generated.
 Please use the following password to proceed to installation:
 c50508effc6843a1a7b06f6491ed0ca6
 ...
```
3.  接受初始密码后，Jenkins 询问是否安装建议的插件，这些插件被调整为最常见的用例。你的答案当然取决于你的需求。但是，作为第一次 Jenkins 安装，让 Jenkins 安装所有推荐的插件是合理的。
4.  插件安装后，Jenkins 要求设置用户名、密码和其他基本信息。如果您跳过它，步骤 2 中的令牌将用作管理员密码。
安装完成，您应该会看到 Jenkins 仪表板:
![](img/5823b433-89cb-43d1-a878-8f7995171901.png)
我们准备使用 Jenkins 并创建第一个管道。
# Jenkins 你好世界
整个 IT 世界的一切都是从 Hello World 的例子开始的。
让我们遵循这条规则，看看创建第一个 Jenkins 管道的步骤:
1.  点击新项目。
2.  输入`hello world`作为项目名称，选择管道，点击确定。
3.  有很多选择。我们将暂时跳过它们，直接转到管道部分。
4.  在脚本文本框中，我们可以输入管道脚本:
```
      pipeline {
           agent any
           stages {