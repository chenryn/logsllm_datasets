# Disruption of Network State

## Wired Denial of Service (DoS) Attacks
Wired DoS attacks are analogous to jamming, where the communication channel is flooded with spurious traffic, leading to an overload and denial of service.

### Recent Example
In 2014, researcher Logan Lamb discovered that wireless home security system sensors could be disrupted by using a wideband jammer to block signals traveling from the sensors to the control panel. [4]

### Limitations and Defensive Mitigations
From the attacker's perspective, jamming is self-defeating as it denies both the target network and the attacker’s ability to monitor attempted transmissions. Jamming can also be easily detected. Defenders can mitigate jamming by implementing jam detection mechanisms, such as polling the clear-channel assessment (CCA) mechanism available on many hardware radios or taking power measurements of the channel. Devices can also use network health diagnostics and statistics to detect potential attacks. Examples of evading these jam detection mechanisms are outlined below.

### DEF CON Demo
Live demonstration of Logan Lamb’s alarm system jammer.

## Evasive Jamming
Device manufacturers can defend against jamming by implementing jam detection countermeasures. Here are two ways attackers may circumvent these mechanisms:

- **Duty-Cycled Jamming**: By pulsing the jammer on and off at an appropriate rate, the channel appears open to the device under attack, preventing detection while still denying the channel.
- **Reflexive Jamming**: This involves waiting for a transmission to begin and then briefly jamming. The jamming signal collides with part of the packet, causing it to fail the receiver’s expected CRC check. This method is more difficult to detect and allows the jammer to remain active for the shortest possible time.

## Data Link Layer Channel Reservation Abuse
The 802.11 data link layer uses carrier-sense multiple access with collision avoidance (CSMA/CA) to prevent simultaneous transmissions. CSMA/CA employs carrier-sensing and virtual carrier-sensing to determine if a channel is in use.

### Method of Attack
Virtual carrier-sensing can be abused by transmitting frames with empty payloads and a frame duration value of 32,767 or greater, causing other nodes to remain inactive for 32ms. Transmitting 30 such frames per second effectively jams the 802.11 channel.

### Potential Impact
Denial of service: legitimate 802.11 nodes are denied access to the RF channel.

### Wired Analogue
Denial of service, but this CSMA/CA virtual carrier-sensing is unique to wireless networking protocols.

### Recent Example
There are no known recent examples of this attack. Bastian Bloessl is credited with suggesting the attack vector.

### Limitations and Defensive Mitigations
The network allocation vector (NAV) counter has a maximum value of 32,767, limiting the effect of a single malicious packet to 32ms. The attacker must continually transmit, albeit with a low duty cycle.

### DEF CON Demo
Live demonstration of a virtual carrier-sense abuse attack.

## Evil Twin Attacks
An Evil Twin attack involves setting up a decoy device or rogue access point that mimics trusted infrastructure, tricking victims into connecting to it. This automates the establishment of trust for eavesdropping or interacting with clients.

### Method of Attack
The attacker captures the defining metadata of the infrastructure to be mimicked, such as RF channel information and addressing information (e.g., MAC addresses and SSIDs for 802.11). A decoy device is then set up using this extracted configuration. If done convincingly, clients may connect to the mimic instead of the legitimate AP. This technique can be combined with other methods like jamming to further deny the legitimate infrastructure.

### Potential Impact
Eavesdropping and tampering with network traffic, data loss, tracking devices.

### Wired Analogue
Evil Twin attacks are analogous to ARP cache poisoning or ARP spoofing, where an attacker injects fraudulent ARP responses to get targeted clients to associate the attacker’s MAC address with a target IP address, routing messages to the attacker instead of the intended recipient.

### Recent Example
The Wi-Fi Pineapple is a well-known device capable of executing Evil Twin attacks. IMSI Catchers, such as the Stingray, are also Evil Twins, exploiting the lack of mutual authentication in the GSM cellular protocol to masquerade as legitimate cellular infrastructure.

### Limitations and Defensive Mitigations
Evil Twin attacks can be difficult to execute due to the complexity of convincingly mimicking an existing device or protocol. Additionally, if the attacker’s rogue device competes with a legitimate device, the attacker may need to use other offensive techniques like jamming. Defenders can mitigate these attacks through the proper use of cryptographic mutual authentication, allowing devices to verify the identity of recipients before associating with or routing traffic to them.

### DEF CON Demo
Live demonstration of a rogue GSM basestation.

## Firmware Update Mechanisms
Attacks on wireless firmware update mechanisms enable attackers to execute arbitrary software and gain persistence on a device.

### Method of Attack
The attacker identifies a wireless firmware update mechanism within a target device, prepares a modified binary, overcomes firmware encryption or secure boot, and delivers the modified binary to the target device. The modified binary can implement various malicious features, including self-propagation, exfiltration of network data, or bricking the device.

### Potential Impact
Attacker gaining persistence on the device, self-propagation (i.e., worm), denial of service, data loss.

### Wired Analogue
Attacking wireless firmware update mechanisms is similar to how malware operates on traditional endpoints, including the ability to have infected devices infect other devices, comparable to traditional worms.

### Recent Example
Eyal Ronen, Colin O’Flynn, Adi Shamir, and Achi-Or Weingarten’s “ZigBee Chain Reaction” from 2016 demonstrated deploying malicious firmware to a set of Philips Hue lightbulbs from a radio mounted on a drone. They had to figure out ZigBee’s wireless firmware update mechanics and obtain the firmware signing key used by Philips. [6]

### Limitations and Defensive Mitigations
Defenders can mitigate such attacks by implementing modern best practices, such as secure boot, firmware encryption, image signing, and network encryption.

### DEF CON Demo
No demo, but a discussion of the aforementioned ZigBee firmware OTA attack.

## Physical Layer Protocol Abuse
Physical Layer Protocol Abuse attacks involve sending wireless transmissions that exploit irregularities and corner cases in the receiver’s physical layer state machine. These attacks can range from transmitting without direct control of the radio to sending hidden or difficult-to-detect messages within the radio spectrum.

### Method of Attack
Techniques vary, but one example involves embedding the symbols that comprise an entire PHY frame within the payload of another packet, sending two well-formed packets with a single call to the radio. Other examples include using illegal preamble and header values or exploiting symbol mapping tables to create transmissions that certain radio state machines cannot receive.

### Potential Impact
Wireless IDS evasion, device fingerprinting, privilege escalation.

### Wired Analogue
Covert messaging has been demonstrated on the 802.3 Ethernet physical layer.

### Recent Example
The packet-in-packet 802.15.4 attack from 2011 is a well-known example. The same group from Dartmouth also developed 802.15.4 selective evasion techniques by wirelessly fingerprinting common chipsets. [8]

### Limitations and Defensive Mitigations
Since defenders must trust their hardware, there are few practical options for protecting against creative wireless physical layer attacks.

### DEF CON Demo
Live demonstration of 802.15.4 evasion techniques.

## Conclusions
As embedded systems become more prevalent, wireless communication systems will become even more ubiquitous and diverse. It is crucial for device manufacturers and integrators to consider the novel challenges that accompany these interfaces. Rather than dismissing RF as voodoo, remember that radios are deterministic state machines with behavior that can be rationally understood. Grasping wireless today is an essential step to securing communications for years to come.

## Further Reading
For further reading, consider the following materials:

### A. RF Physical Layer Fundamentals and Reverse Engineering Techniques
- **Shmoocon**: [Link](https://www.youtube.com/watch?v=L3udJnRe4vc)
- **Troopers17**: [Link](https://www.youtube.com/watch?v=OFRwqpH9zAQ)
- **Hack in the Box Amsterdam 2017**: [Link](https://www.youtube.com/watch?v=QeoGQwT0Z1Y)

### B. Protocol Deep Dives
- **LoRa**: Matt’s presentation on the LoRa physical layer from 33c3: [Link](https://media.ccc.de/v/33c3-7945-decoding-the-lora-phy)
- **Mousejack**: Marc’s presentation on vulnerabilities in the nRF24 wireless keyboard and mouse protocol from DEF CON 24: [Link](https://www.youtube.com/watch?v=00A36VABIA4)

### C. Applying Open Source Intelligence (OSINT) to the Reverse Engineering Process
- **Hack in the Box Amsterdam 2017**: [Link](https://www.youtube.com/watch?v=JUAiav674D8)

## References
[1] A. Joch, “Network sniffers,” Article, 2001, [Link](http://www.computerworld.com/article/2583125/lan-wan/network-sniffers.html).
[2] “Network general analyzer sniffs out network trouble,” Magazine Article, 1996, [Link](https://books.google.com/books?id=Ij0EAAAAMBAJ&lpg=PA47-IA6&ots=CKwhmoptiu&dq=dolch%20sniffer%20history&pg=PA47-IA6#v=onepage&q=dolch%20sniffer%20history&f=false).
[3] B. Seeber, “Dallas siren attack,” Online Case Study, 2017, [Link](https://www.bastille.net/blogs/2017/4/17/dallas-siren-attack).
[4] L. Lamb, “Home insecurity: No alarms, false alarms, and SIGINT,” Paper, 2017, [Link](https://media.defcon.org/DEF%20CON%2022/DEF%20CON%2022%20presentations/Logan%20Lamb/DEFCON-22-Logan-Lamb-HOME-INSECURITY-NO-ALARMS-FALSE-ALARMS-AND-SIGINT-WP.pdf).
[5] S. Helme, “The WiFi pineapple - using karma and dnsspoof to snag unsuspecting victims,” Blog Post, 2013, [Link](https://scotthelme.co.uk/wifi-pineapple-karma-dnsspoof/).
[6] E. Ronen, C. O’Flynn, A. Shamir, and A.-O. Weingarten, “IoT goes nuclear: Creating a zigbee chain reaction,” Paper, 2016, [Link](http://iotworm.eyalro.net/iotworm.pdf).
[7] T. Goodspeed, S. Bratus, R. Melgares, R. Shapiro, and R. Speers, “Packets in packets: Orson welles? in-band signaling attacks for modern radios,” Paper, 2011, [Link](https://www.usenix.org/legacy/event/woot11/tech/final_files/Goodspeed.pdf).
[8] I. R. Jenkins, R. Shapiro, S. Bratus, T. Goodspeed, R. Speers, and D. Dowd, “Speaking the local dialect: Exploiting differences between IEEE 802.15.4 receivers with commodity radios for fingerprinting, targeted attacks, and WIDS evasion,” Paper, 2014, [Link](http://www.cs.dartmouth.edu/reports/TR2014-749.pdf).