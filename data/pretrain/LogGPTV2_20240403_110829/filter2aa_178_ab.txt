rupts network state
• Wired analogue: Wired Denial of Service attacks are
analogous to jamming – that is, ﬁlling a communications
channel with spurious trafﬁc intended to overload a
communications channel.
• Recent example: In 2014, researcher Logan Lamb dis-
covered that wireless home security system sensors could
be thwarted by using a wideband jammer to block signals
traveling from the sensors to the control panel. [4]
• Limitations and defensive mitigations: From the at-
tacker’s perspective, jamming is self-defeating – jamming
denies the target network, but also the attacker’s ability to
monitor attempted transmissions on the jammed network.
It can also be fairly easy to detect. Defenders can mitigate
jamming with the implementation of jam detection mech-
anisms. These can be practically implemented on em-
bedded devices by polling the clear-channel assessment
(CCA) mechanism available on many hardware radios or
by taking a power measurement of the channel. Short
of this, devices can use network health diagnostics and
statistics to determine when their network may be under
attack. Examples on how to evade these jam detection
mechanisms are outlined below.
• DEF CON demo: Live demonstration of Logan Lamb’s
alarm system jammer.
Evasive Jamming: As mentioned, device manufacturers can
take a defense posture against jamming by implementing jam
detection countermeasures on their devices. Here are two ways
that that clever attackers may be able to circumvent such jam
detection mechanisms:
• Duty Cycled Jamming: Duty-cycling a jammer, or puls-
ing it on and off, is one way of defeating CCA-based
jam detection mechanisms. If done at an appropriate rate,
cycling the jammer and allowing the channel to appear
open from the perspective of the device under attack will
keep the detection functions from triggering while still
denying the channel.
• Reﬂexive Jamming: Reﬂexive jamming is one way of
denying wireless communications that is more difﬁcult to
detect. Reﬂexive jamming involves having the radio doing
the jamming to wait for a transmission to begin, jamming
brieﬂy only once a transmission is detected. The jamming
signal collides with part of the packet, corrupting some of
its symbols and causing it to fail the receiver’s expected
CRC check. Thus, the jammer denies the channel, or even
a speciﬁc device/set of devices, while remaining active for
the shortest possible time.
E. Data Link Layer Channel Reservation Abuse
The 802.11 data link layer employs carrier-sense multiple
access with collision avoidance (CSMA/CA), an algorithm
which prevents two nodes from transmitting simultaneously.
CSMA/CA uses two methods to determine if a channel is
currently in use by another node: carrier-sensing, and virtual
carrier-sensing. Carrier-sensing detects a busy channel by
measuring RF energy. The CSMA/CA state machine assumes
that another node is currently transmitting when it detects RF
energy above a predeﬁned threshold, and waits for the channel
to return to idle before transmitting. Virtual carrier-sensing
acts on the frame duration ﬁeld in the 802.11 MAC header,
which deﬁnes the expected time, in microseconds, required
to transmit the packet and receive an ACK. In order to save
power, when an 802.11 node receives a packet, it will assume
the channel is occupied for the duration speciﬁed in the MAC
header.
• Method of attack: Virtual carrier-sensing can be abused
to effectively jam an 802.11 channel without needing to
transmit at a high duty cycle. By transmitting a frame
with an empty payload, and a frame duration value
of 32,767 or greater, other nodes in range will remain
inactive for 32ms. Therefore, an 802.11 channel can be
effectively jammed by transmitting 30 such frames per
second.
• Potential impact: Denial of service: legitimate 802.11
nodes are denied access to the RF channel.
• Wired
analogue:
Denial
of
service,
however
this
CSMA/CA virtual carrier-sensing is unique to wireless
networking protocols.
• Recent example: There are no known recent examples
of this attack. Bastian Bloessl is credited with suggesting
the attack vector.
• Limitations and defensive mitigations: The network
allocation vector (NAV) counter, which stores the remain-
ing duration for which an 802.11 channel is expected
to be occupied, has a maximum value of 32,767. This
limits the the effect of a single malicious packet to 32ms,
requiring the attacker to continually transmit, albeit with
a low duty cycle.
• DEF CON demo: Live demonstration of a virtual carrier-
sense abuse attack.
F. Evil Twin
An Evil Twin attack involves standing up a decoy device or
rogue access point that mimics trusted infrastructure, such that
it tricks victims into connecting to it. It is a way of automating
the establishment of trust to eavesdrop on or interact with
clients. The classic example of an 802.11 Evil Twin is the Wi-
Fi Pineapple Karma attack [5], however examples exist on
other protocols as well.
• Method of attack: The attacker must ﬁrst capture the
deﬁning metadata of the infrastructure to be mimicked.
This may include RF channel information and addressing
information, for example MAC addresses and SSIDs for
802.11. These metadata will differ for other protocols.
Then a decoy device can be set up using this extracted
conﬁguration. If done convincingly, clients may elect
to trust the mimic and connect to it instead of the
legitimate AP. This technique can be combined with other
techniques such as jamming to further deny the legitimate
infrastructure and make the mimic appear even more
desirable.
• Potential impact: Eavesdropping and tampering with
network trafﬁc, data loss, tracking devices
• Wired analogue: Wireless Evil Twin attacks are analo-
gous to ARP cache poisoning, or ARP spooﬁng. With
ARP poisoning, an attacker injects fraudulent ARP re-
sponses into a local area network to get targeted clients
to associate the attacker’s MAC address with a target IP
address. This results in the targeted clients routing mes-
sages to the attacker rather than the intended recipient.
Evil Twin attacks have similar characteristics – the rogue
device hijacks routing as a means of intercepting trafﬁc.
• Recent example: The Wi-Fi Pineapple is a well-known
device capable of executing Evil Twin attacks. Addition-
ally, IMSI Catchers such as the Stingray are Evil Twins
– rogue cell towers such as these exploit the lack of
mutual authentication in the GSM cellular protocol to
masquerade as legitimate cellular infrastructure.
• Limitations and defensive mitigations: Because of the
complexity associated with convincingly mimicking an
existing device or communications protocol, Evil Twin
attacks can be difﬁcult to execute. In addition, if the
attacker’s rogue device has to compete side-by-side with
legitimate device, it may also be necessary for the at-
tacker to deny the legitimate device with other offensive
techniques such as jamming.
From the defender’s perspective, Evil Twin attacks can be
mitigated through the proper use of cryptographic mutual
authentication. Authentication allows the devices to trust
the identity of a recipient before electing to associate with
or route trafﬁc to them. GSM IMSI catchers present an
example of mutual authentication not being used properly.
Within the GSM protocol, basestations can authenticate
the identity of handsets, however handsets do not au-
thenticate basestations. Thus, it is trivial for an attacker
to stand up a rogue basestation, because handsets have
no robust way of verifying their identity.
• DEF CON demo: Live demonstration of a rogue GSM
basestation.
G. Firmware Update Mechanisms
Attacks on wireless ﬁrmware update mechanisms enable at-
tackers to execute arbitrary software and gain persistence on
a device.
• Method of attack: A highly generalized case of this
attack involves the attacker identifying the presence of
a wireless ﬁrmware update mechanism within a target
device, preparing a modiﬁed binary, overcoming ﬁrmware
encryption or secure boot (if present), and delivering the
modiﬁed binary to the target device. Such a modiﬁed
binary could implement arbitrary malicious features, in-
cluding but not limited to self-propagating to other similar
devices as a worm, or exﬁltrating network data back to
the attacker, or bricking the device.
• Potential impact: Attacker gaining persistence on the
device, self-propagation (i.e. worm), denial of service,
data loss
• Wired analogue: Attacking wireless ﬁrmware update
mechanisms presents opportunities to exploit embedded
devices in manners similar to how malware operates on
traditional endpoints. Additionally, the ability to have in-
fected devices infect other devices is directly comparable
to traditional worms.
• Recent example: Eyal Ronen, Colin O’Flynn, Adi
Shamir, and Achi-Or Weingarten’s “ZigBee Chain Re-
action” from 2016 is a highly publicized recent example
of an attack on a wireless ﬁrmware update mechanism.
Their attack showcased deploying malicious ﬁrmware to
a set of Philips Hue lightbulbs from a radio mounted
on a drone. In addition to having to ﬁgure out ZigBee’s
wireless ﬁrmware update mechanics, they also had to
obtain the ﬁrmware signing key used by Philips to craft
their secure boot images. [6]
• Limitations and defensive mitigations: Defenders can
mitigate attacks like this by implementing modern best
practices such as secure boot/ﬁrmware encryption/image
signing and network encryption.
• DEF CON demo: No demo, but a discussion of the
aforementioned ZigBee ﬁrmware OTA attack.
H. Physical Layer Protocol Abuse
Physical Layer Protocol Abuse attacks, as we style them, in-
volve sending wireless transmissions that exploit irregularities
and corner cases in the receiver’s physical layer state machine.
Effects of these attacks can vary, from being able to transmit
from a device without direct control of the radio to being able
to send hidden or difﬁcult-to-detect messages within the radio
spectrum.
• Method of attack: The techniques used to implement
these attacks, and even their desired outcomes, are varied
in nature, so generalizing them is difﬁcult. One example
involves exploiting the structure of the physical layer
frame by embedding the symbols that comprise an entire
PHY frame within the payload of another packet, such
that two well-formed packets are sent with a single call to
the radio. Other examples include using illegal preamble
and header values to create transmissions that certain
radio state machines may not be able to receive, or
exploiting symbol mapping tables to exploit corner cases
in a receiver’s state machine.
• Potential impact: Wireless IDS evasion, device ﬁnger-
printing, privilege escalation
• Wired analogue: Covert messaging has been demon-
strated on the 802.3 Ethernet physical layer.
• Recent example: Perhaps the best-known example of
physical layer abuse is the packet-in-packet 802.15.4 at-
tack from 2011. [7] The same group from Dartmouth also
developed series of 802.15.4 selective evasion techniques
by wirelessly ﬁngerprinting common chipsets. [8]
• Limitations and defensive mitigations: Since defenders
have to assign signiﬁcant trust to their hardware, there
are few practical options for protecting against creative
wireless physical layer attacks.
• DEF CON demo: Live demonstration of 802.15.4
evasion techniques.
V. CONCLUSIONS
As embedded systems continue to permeate our digital lives,
wireless communication systems are slated to become even
more ubiquitous and diverse. As these systems continue to
assume critical functions within society, it is paramount that
device manufacturers and integrators consider the novel chal-
lenges that accompany such interfaces. Rather than dismissing
RF as voodoo that magically makes bits appear on far-
away devices, remember that radios are deterministic state
machines with behavior that can be rationally understood.
Finally, remember that radios are hardware and hardware
makes vulnerabilities last: thus, grasping wireless today is
an essential step to securing communications for years to
come.
VI. FURTHER READING
For further reading, consider consulting the following materi-
als:
A. RF Physical Layer Fundamentals and Reverse Engineering
Techniques: “So You Want to Hack Radios” Series
• Shmoocon:
https://www.youtube.com/watch?v=
L3udJnRe4vc
• Troopers17:
https://www.youtube.com/watch?v=
OFRwqpH9zAQ
• Hack in the Box Amsterdam 2017: https://www.
youtube.com/watch?v=QeoGQwT0Z1Y
B. Protocol Deep Dives
• LoRa: Matt’s presentation on the LoRa physical layer
from 33c3: https://media.ccc.de/v/33c3-7945-decoding
the lora phy
• Mousejack: Marc’s presentation on vulnerabilities in
the
nRF24
wireless
keyboard
and
mouse
protocol
from DEF CON 24: https://www.youtube.com/watch?v=
00A36VABIA4
C. Applying Open Source Intelligence (OSINT) to the Reverse
Engineering Process
• Hack in the Box Amsterdam 2017: https://www.
youtube.com/watch?v=JUAiav674D8
REFERENCES
[1] A.
Joch,
“Network
sniffers,”
Article,
2001,
http://www.computerworld.com/article/2583125/lan-
wan/network-sniffers.html.
[2] “Network
general
analyzer
sniffs
out
net-
work
trouble,”
Magazine
Article,
1996,
https://books.google.com/books?id=Ij0EAAAAMBAJ&lpg
=PA47-IA6&ots=CKwhmoptiu&dq=dolch%20sniffer%20
history&pg=PA47-IA6#v=onepage&q=dolch%20sniffer%20
history&f=false.
[3] B. Seeber, “Dallas siren attack,” Online Case Study,
2017,
https://www.bastille.net/blogs/2017/4/17/dallas-
siren-attack.
[4] L.
Lamb,
“Home
insecurity:
No
alarms,
false
alarms,
and
sigint,”
Paper,
2017,
https://media.defcon.org/DEF%20CON%2022/DEF%20
CON%2022%20presentations/Logan%20Lamb/DEFCON-
22-Logan-Lamb-HOME-INSECURITY-NO-ALARMS-
FALSE-ALARMS-AND-SIGINT-WP.pdf.
[5] S. Helme, “The wiﬁ pineapple - using karma and
dnsspoof to snag unsuspecting victims,” Blog Post, 2013,
https://scotthelme.co.uk/wiﬁ-pineapple-karma-dnsspoof/.
[6] E. Ronen, C. O’Flynn, A. Shamir, and A.-O. Weingarten,
“Iot goes nuclear: Creating a zigbee chain reaction,” Paper,
2016, http://iotworm.eyalro.net/iotworm.pdf.
[7] T. Goodspeed, S. Bratus, R. Melgares, R. Shapiro,
and R. Speers, “Packets in packets: Orson welles? in-
band signaling attacks for modern radios,” Paper, 2011,
https://www.usenix.org/legacy/event/woot11/tech/ﬁnal ﬁles/
Goodspeed.pdf.
[8] I. R. Jenkins, R. Shapiro, S. Bratus, T. Goodspeed,
R. Speers, and D. Dowd, “Speaking the local di-
alect:
Exploiting
differences
between
ieee
802.15.4
receivers
with
commodity
radios
for
ﬁngerprinting,
targeted
attacks,
and
wids
evasion,”
Paper,
2014,
http://www.cs.dartmouth.edu/reports/TR2014-749.pdf.