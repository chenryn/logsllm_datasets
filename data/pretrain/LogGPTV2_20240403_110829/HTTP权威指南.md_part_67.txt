18.2.2 设法让虚拟主机托管正常工作
缺失的主机信息是原始HTTP规范的疏忽，它错误地假设了每个Web服务器上只
托管了一个网站。HTTP的设计者没有为进行虚拟主机托管的共享服务器提供支持。
正因为如此，URL中的主机名信息被当作冗余信息剥离了，只要求发送路径部分。
因为早期的规范没有考虑到虚拟主机托管，Web托管者需要开发变通的方案和约定
来支持共享的虚拟主机托管。这个问题本可以通过要求所有HTTP请求报文发送完 414
整的URL而不只是路径部分来简单地解决。而HTTP/1.1的确要求服务器能够处理
HTTP报文请求行上的完整URL，但将现存的应用程序都升级到这个规范还需要很
长时间。在此期间，涌现了以下4种技术。
• 通过URL路径进行虚拟主机托管
在URL中增添专门的路径部分，以便服务器判断是哪个网站。
• 通过端口号进行主机托管
为每个站点分配不同的端口号，这样请求就由Web服务器的单独实例来处理。
Web主机托管 ｜ 433
• 通过IP地址进行主机托管
为不同的虚拟站点分配专门的IP地址，把这些地址都绑定到一台单独的机器上。
这样，Web服务器就可以通过IP地址来识别网站名了。
• 通过Host首部进行主机托管
很多Web托管者向HTTP的设计者施压，要求解决这个问题。HTTP/1.0的增强
版和HTTP/1.1的正式版定义了Host请求首部来携带网站名称。Web服务器可
以通过Host首部识别虚拟站点。
接下来详细介绍每种技术。
1. 通过URL路径进行虚拟主机托管
可以通过分配不同的URL路径，用这种笨方法把共享服务器上的虚拟站点隔离开。
例如，可以给每个逻辑网站一个专门的路径前缀。
• Joe的五金商店可以是：http://www.joes-hardware.com/joe/index.html。
• Mary的古董拍卖店可以是：http://www.marys-antiques.com/mary/index.html。
当请求到达服务器时，其中并没有主机名信息，但服务器可以通过路径来区分它们。
• 请求Joe的五金商店的网址是GET /joe/index.html。
• 请求Mary的古董拍卖店的网址是GET /mary/index.html。
这不是一个好办法。/joe和/mary这样的前缀是多余的（主机名中已经提到joe了）。
更糟的是，描述主页链接的常见约定：http://www.joes-hardware.com或http://www.
joes-hardware.com/index.html都不能用了。
总之，按URL来进行虚拟主机托管是一个糟糕的解决方案，很少会用到。
2. 通过端口号进行虚拟主机托管
除了修改路径名，还可以在Web服务器上为Joe和Mary的网站分配不同的端口号。
415 不再使用端口80，而是采用其他端口号，例如，Joe用82 Mary，用83。但这个解
决方案也有同样的问题：终端用户不会乐意在URL中指定非标准的端口号。
3. 通过IP地址进行虚拟主机托管
一个更常用的、更好的方法是通过IP地址进行虚拟化。每个虚拟网站都分配一个或
多个唯一的IP地址。所有虚拟网站的IP地址都绑定到同一个共享的服务器上。服
务器可以查询HTTP连接的目的IP地址，并以此来判断客户端的目标网站。
434 ｜ 第18章
比方说，托管者把IP地址209.172.34.3分配给www.joes-hardware.com，把IP地址
209.172.34.4分配给www.marys-antiques.com，把这两个IP地址都绑定到同一个物
理服务器上。Web服务器就能使用目的IP地址来识别用户请求的是哪个虚拟站点
了，参见图18-4。
• 客户端A获取http://www.joes-hardware.com/index.html。
• 客户端A查询www.joes-hardware.com的IP地址，得到209.172.34.3。
• 客户端A打开到共享服务器的TCP连接，目的地址是209.172.34.3。
• 客户端A发送请求，内容为GET /index.html HTTP/1.0。
• 在Web服务器提供响应之前，它注意到实际的目的IP地址（209.172.34.3），判
断出这是Joe的五金网站的虚拟IP地址，就根据子目录/joe来完成请求。返回
的是文件/joe/index.html。
目的IP地址 目录
www.voting-info.gov= 209.172.34.2
209.172.34.2 /voting
www.joes-hardware.com= 209.172.34.3
209.172.34.3 /joe
www.marys-antiques.com= 209.172.34.4
209.172.34.4 /mary
209.172.34.3
客户端A 因特网
/voting /mary /joe
209.172.34.4
客户端B
图18-4 虚拟IP的主机托管
类似地，如果客户端B请求http://www.marys-antiques.com/index.html。
• 客户端B查询www.marys-antiques.com的IP地址， 得到209.172.34.4。
• 客户端B打开到Web服务器的TCP连接，目的地址是209.172.34.4。
• 客户端B发送请求，内容是GET /index.html HTTP/1.0。
• Web服务器判断出209.172.34.4是Mary的网站，根据/mary目录来完成请求，
返回的是文件/mary/index.html。 416
对大的托管者来说，虚拟IP的主机托管能够工作，但它会带来一些麻烦。
• 在计算机系统上能绑定的虚拟IP地址通常是有限制的。想在共享的服务器上托
管成百上千的虚拟站点的服务商不一定能实现愿望。
• IP地址是稀缺资源。有很多虚拟站点的托管者不一定能为被托管的网站获取足够
多的IP地址。
Web主机托管 ｜ 435
• 托管者通过复制服务器来增加容量时，IP地址短缺的问题就更严重了。随负载均
衡体系的不同，可能会要求每个复制的服务器上有不同的虚拟IP地址，因此IP
地址的需求量可能会随复制服务器的数量而倍增。
尽管虚拟IP的主机托管存在消耗地址的问题，但它仍然得到了广泛的运用。
4. 通过Host首部进行虚拟主机托管
为了避免过度的地址消耗和虚拟IP地址的限制，我们希望在虚拟站点间共享同一个
IP地址，且仍能区分站点。但正如我们看到的那样，因为大多数浏览器只是把URL
的路径发给服务器，关键的虚拟主机名信息被其丢掉了。
为了解决这个问题，浏览器和服务器的实现者扩展了HTTP，把原始的主机名提供
给服务器。不过，浏览器不能只发送完整的URL，因为这会使许多只能接收路径的
服务器无法工作。替代的方法是，把主机名（和端口号）放在所有请求的Host扩
展首部中传送。
在图18-5中，客户端A和客户端B都发送了携带有要访问的原始主机名的Host首
部。当服务器收到对/index.html的请求时，可以通过Host首部来判断要使用哪个
资源。
(A获取 http://www.joes-hardware.com/index.html)
GET /index.html HTTP/1.1 www.voting-info.gov
User-agent: SuperBrowser v1.3 www.joes-hardware.com
Host: www.joes-hardware.com www.marys-antiques.com
客户端A 因特网
/voting /mary/ joe
客户端B
GET /index.html HTTP/1.1
HTTP的Host首部携带了在通常的请求中丢失的
User-agent: WebSurfer 2000
Host: marys-antiques.com 主机名信息，允许通过主机名进行虚拟主机托管。
(B获取http://www.marys-antiques.com/index.html)
417 图18-5 用Host首部区分请求的虚拟主机
Host首部最早是在HTTP/1.0+中引入的，它是开发商实现的HTTP/1.0的扩展超
集。遵循HTTP/1.1标准则必须支持Host首部。绝大多数现代浏览器和服务器都支
持Host首部，但仍有一些客户端和服务器（以及网络机器人）不支持它。
436 ｜ 第18章
18.2.3 HTTP/1.1的Host首部
Host首部是HTTP/1.1的请求首部，定义在RFC 2068中。由于虚拟服务器的流行，
绝大多数HTTP客户端（即使是不遵循HTTP/1.1的客户端），都实现了Host首部。
1. 语法与用法
Host首部描述了所请求的资源所在的因特网主机和端口号，和原始的URL中得到
的一样：
Host = "Host" ":" host [ ":" port ]
但要注意以下问题。
• 如果Host首部不包含端口，就使用地址方案中默认的端口。
• 如果URL中包含IP地址，Host首部就应当包含同样的地址。
• 如果URL中包含主机名，Host首部就必须包含同样的名字。
• 如果URL中包含主机名，Host首部就不应当包含URL中这个主机名对应的IP
地址，因为这样会扰乱虚拟主机托管服务器的工作，它在同一个IP地址上堆叠
了很多虚拟站点。
• 如果URL中包含主机名，Host首部就不应当包含这个主机名的其他别名，因为
这样也会扰乱虚拟主机托管服务器的工作。
• 如果客户端显式地使用代理服务器，客户端就必须把原始服务器，而不是代理服
务器的名字和端口放在Host首部中。以往，若干个Web客户端在启用客户端代
理设置时，错误地把发出的Host首部设置成代理的主机名。这种错误行为会使
代理和原始服务器都无法正常处理请求。
• Web客户端必须在所有请求报文中包含Host首部。
• Web代理必须在转发请求报文之前，添加Host首部。
• HTTP/1.1的Web服务器必须用400状态码来响应所有缺少Host首部字段的
HTTP/1.1请求报文。
下面是一段简单的HTTP请求报文，用于获取www.joes-hardware.com的主页，其
中带有必需的Host首部字段： 418
GET http://www.joes-hardware.com/index.html HTTP/1.0
Connection: Keep-Alive
User-Agent: Mozilla/4.51 [en] (X11; U; IRIX 6.2 IP22)
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/
png, */*
Accept-Encoding: gzip
Accept-Language: en
Host: www.joes-hardware.com
Web主机托管 ｜ 437
2. 缺失Host首部
有少量在用的老式浏览器不会发送Host首部。如果某个虚拟主机托管服务器使用
Host首部来判断所服务的是哪个网站，而报文中没有出现Host首部的话，那它可
能会把用户导向某个默认的Web页面（例如网络服务提供商的Web页面），也可能
返回一个错误页面建议用户升级浏览器。
3. 解释Host首部
对于没有进行虚拟主机托管，而且不允许资源随请求主机的不同而变化的原始服务
器来说，可以忽略Host首部字段的值。但资源会随主机名的不同而变化的原始服
务器，都必须在一条HTTP/1.1请求判断其所请求的资源时使用下列规则。
（1） 如果HTTP请求报文中的URL是绝对的（也就是说，包含方案和主机部分），
就忽略Host首部的值。
（2） 如果HTTP请求报文中的URL没有主机部分，而该请求带有Host首部，则主
机/端口的值就从Host首部中取。
（3） 如果通过第（1）步或第（2）步都无法获得有效的主机，就向客户端返回400
Bad Request响应。
4. Host首部与代理
某些版本的浏览器发送的Host首部不正确，尤其是配置使用代理的时候。例如，
配置使用代理时，一些老版本的Apple和PointCast客户端会错误地把代理的名字，
而不是原始服务器的名字放在Host首部里发送。
18.3 使网站更可靠
在下面列出的这些时间段内，网站通常是无法运作的。
• 服务器宕机的时候。
• 交通拥堵：突然间很多人都要看某个特别的新闻广播或涌向某个大甩卖网店。突
然的拥堵可以使Web服务器过载，降低其响应速度，甚至使它彻底停机。
• 网络中断或掉线。
419 本节会展示一些预判和处理这些常见问题的方法。
18.3.1 镜像的服务器集群
服务器集群是一排配置相同的Web服务器，互相可以替换。每个服务器上的内容可
以通过镜像复制，这样当某个服务器出问题的时候，其他的可以顶上。
438 ｜ 第18章
镜像的服务器常常组成层次化的关系。某个服务器可能充当“内容权威”——它含
有原始内容（可能就是内容作者上传的那个服务器）。这个服务器称为主原始服务器
（master origin server）。从主原始服务器接收内容的镜像服务器称为复制原始服务器
（replica origin server）。一种简单的部署服务器集群的方法是用网络交换机把请求分
发给服务器。托管在服务器上的每个网站的IP地址就设置为交换机的IP地址。
在图18-6显示的镜像服务器集群中，主原始服务器负责把内容发送给复制原始服务
器。对集群外部来说，内容所在的IP地址就是交换机的IP地址。交换机负责把请
求发送到服务器上去。
客户端
客户端
复制原始服务器
客户端
因特网
交换机
客户端 主原始服务器
客户端
复制原始服务器
图18-6 镜像的服务器集群
镜像Web服务器可以在不同的地点包含同样内容的副本。图18-7展示了4个镜像
服务器，其中主服务器在芝加哥，复制服务器在纽约、迈阿密和小石城。主服务器
为芝加哥地区的客户端服务，并肩负把内容传播给复制服务器的任务。
芝加哥（总部） 纽约
主原始服务器 复制原始服务器
因特网
小石城 迈阿密
复制原始服务器 复制原始服务器
图18-7 分散的镜像服务器
Web主机托管 ｜ 439