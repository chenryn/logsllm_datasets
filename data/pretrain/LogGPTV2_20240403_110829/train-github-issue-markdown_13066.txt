**Andy Piper** opened **SPR-5345** and provided the following comments:

In `AbstractApplicationContext`, the `isActive` flag is set in the `prepareRefresh()` method. However, the `ApplicationEventMulticaster` is not initialized until later in the `refresh()` method. As a result, if you have error handling code that checks the `isActive` status and then attempts to close the context, such as:

```java
if (context.isActive()) {
    context.close();
}
```

You may encounter the following error:

```
Exception thrown from ApplicationListener handling ContextClosedEvent
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context:
org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext@9d4d84: display name [OsgiBundleXmlApplicationContext(bundle=helloworld, config=osgibundle:/META-INF/spring/*.xml)]; startup date [Tue Dec 09 11:00:31 GMT 2008]; root of context hierarchy
    at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:287)
    at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:274)
    at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:819)
    at org.springframework.osgi.context.support.AbstractOsgiBundleApplicationContext.doClose(AbstractOsgiBundleApplicationContext.java:206)
    at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$501(AbstractDelegatedExecutionApplicationContext.java:68)
    at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$2.run(AbstractDelegatedExecutionApplicationContext.java:217)
    at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
    at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.normalClose(AbstractDelegatedExecutionApplicationContext.java:213)
    at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.close(DependencyWaiterApplicationContextExecutor.java:345)
    at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.doClose(AbstractDelegatedExecutionApplicationContext.java:228)
    at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:794)
    at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$3.run(ContextLoaderListener.java:832)
    at org.springframework.osgi.extender.internal.util.concurrent.RunnableTimedExecution$MonitoredRunnable.run(RunnableTimedExecution.java:60)
    at org.springframework.scheduling.timer.DelegatingTimerTask.run(DelegatingTimerTask.java:66)
    at java.util.TimerThread.mainLoop(Timer.java:512)
    at java.util.TimerThread.run(Timer.java:462)
```

Spring-DM contains exactly this type of code and fails in the same manner.

To resolve this issue, either the event should be silently dropped, or the `isActive` flag should be set at the end of the `refresh()` method.

* * *
**Affects:** 2.5.6
**Issue Links:**
  * #10021 AbstractApplicationContext.isActive() out of sync with multicaster ( _ **"is duplicated by"**_ )