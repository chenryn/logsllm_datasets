---
author: David Gilbertson
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 7207
date: '2017-10-10 17:08:00'
editorchoice: true
excerpt: 我希望这里至少有三件事是你此前并不知道的……
fromurl: https://hackernoon.com/12-cool-things-you-can-do-with-github-f3e0424cf2f0
id: 8946
islctt: true
largepic: /data/attachment/album/201710/10/170748tur07mwv03qd23ow.jpg
permalink: /article-8946-1.html
pic: /data/attachment/album/201710/10/170748tur07mwv03qd23ow.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我希望这里至少有三件事是你此前并不知道的……
tags:
- GitHub
thumb: false
title: 12 件可以用 GitHub 完成的很酷的事情
titlepic: true
translator: softpaopao
updated: '2017-10-10 17:08:00'
---
![](/data/attachment/album/201710/10/170748tur07mwv03qd23ow.jpg)
我不能为我的人生想出一个引子来，所以……
### #1 在 GitHub.com 上编辑代码
我想我要开始介绍的第一件事是多数人都已经知道的（尽管我一周之前还不知道）。
当你登录到 GitHub ，查看一个文件时（任何文本文件，任何版本库），右上方会有一只小铅笔。点击它，你就可以编辑文件了。 当你编辑完成后，GitHub 会给出文件变更的建议，然后为你 复刻   fork 该仓库并创建一个 拉取请求   pull request （PR）。
是不是很疯狂？它为你创建了一个复刻！
你不需要自己去复刻、拉取，然后本地修改，再推送，然后创建一个 PR。
![](/data/attachment/album/201710/10/170816t5s777ae77bzccsv.png)
*不是一个真正的 PR*
这对于修改错误拼写以及编辑代码时的一些糟糕的想法是很有用的。
### #2 粘贴图像
在评论和 工单   issue 的描述中并不仅限于使用文字。你知道你可以直接从剪切板粘贴图像吗？ 在你粘贴的时候，你会看到图片被上传 (到云端，这毫无疑问)，并转换成 markdown 显示的图片格式。
棒极了。
### #3 格式化代码
如果你想写一个代码块的话，你可以用三个反引号（```）作为开始 —— 就像你在浏览 [精通 Markdown](https://guides.github.com/features/mastering-markdown/) 时所学到的一样 —— 而且 GitHub 会尝试去推测你所写下的编程语言。
但如果你粘贴的像是 Vue、Typescript 或 JSX 这样的代码，你就需要明确指出才能获得高亮显示。
在首行注明 ````jsx`：
![](/data/attachment/album/201710/10/170816uwk5nuck1ur3wu3w.png)
…这意味着代码段已经正确的呈现：
![](/data/attachment/album/201710/10/170816wkmduoz66lu6pmdx.png)
（顺便说一下，这些用法也可以用到 gist。 如果你给一个 gist 用上 `.jsx` 扩展名，你的 JSX 语法就会高亮显示。）
这里是[所有被支持的语法](https://github.com/github/linguist/blob/fc1404985abb95d5bc33a0eba518724f1c3c252e/vendor/README.md)的清单。
### #4 用 PR 中的魔法词来关闭工单
比方说你已经创建了一个用来修复 `#234` 工单的拉取请求。那么你就可以把 `fixes #234` 这段文字放在你的 PR 的描述中（或者是在 PR 的评论的任何位置）。
接下来，在合并 PR 时会自动关闭与之对应的工单。这是不是很酷？
这里是[更详细的学习帮助](https://help.github.com/articles/closing-issues-using-keywords/)。
### #5 链接到评论
是否你曾经想要链接到一个特定的评论但却无从着手？这是因为你不知道如何去做到这些。不过那都过去了，我的朋友，我告诉你啊，点击紧挨着名字的日期或时间，这就是如何链接到一个评论的方法。
![](/data/attachment/album/201710/10/170816p9zzs4rlbr4zza9e.png)
*嘿，这里有 gaearon 的照片！*
### #6 链接到代码
那么你想要链接到代码的特定行么。我了解了。
试试这个：在查看文件的时候，点击挨着代码的行号。
哇哦，你看到了么？URL 更新了，加上了行号！如果你按下 `Shift` 键并点击其他的行号，格里格里巴巴变！URL 再一次更新并且现在出现了行范围的高亮。
分享这个 URL 将会链接到这个文件的那些行。但等一下，链接所指向的是当前分支。如果文件发生变更了怎么办？也许一个文件当前状态的 永久链接   permalink 就是你以后需要的。
我比较懒，所以我已经在一张截图中做完了上面所有的步骤：
![](/data/attachment/album/201710/10/170817f4tdfu34hezwfpwu.png)
*说起 URL…*
### #7 像命令行一样使用 GitHub URL
使用 UI 来浏览 GitHub 有着很好的体验。但有些时候最快到达你想去的地方的方法就是在地址栏输入。举个例子，如果我想要跳转到一个我正在工作的分支，然后查看与 master 分支的差异，我就可以在我的仓库名称的后边输入 `/compare/branch-name` 。
这样就会访问到指定分支的 diff 页面。
![](/data/attachment/album/201710/10/170817tudqm6l63d6lgh41.png)
然而这就是与 master 分支的 diff，如果我要与 develoment 分支比较，我可以输入 `/compare/development...my-branch`。
![](/data/attachment/album/201710/10/170817k99duuzq4ryx549x.png)
对于你这种键盘快枪手来说，`ctrl`+`L` 或 `cmd`+`L` 将会向上跳转光标进入 URL 那里（至少在 Chrome 中是这样）。这（再加上你的浏览器会自动补全）能够成为一种在分支间跳转的便捷方式。
专家技巧：使用方向键在 Chrome 的自动完成建议中移动同时按 `shift`+`delete` 来删除历史条目（例如，一旦分支被合并后）。
（我真的好奇如果我把快捷键写成 `shift + delete` 这样的话，是不是读起来会更加容易。但严格来说 ‘+’ 并不是快捷键的一部分，所以我并不觉得这很舒服。这一点纠结让 *我* 整晚难以入睡，Rhonda。）
### #8 在工单中创建列表
你想要在你的 工单   issue 中看到一个复选框列表吗？
![](/data/attachment/album/201710/10/170818su4kvue47ji6wbo8.png)
你想要在工单列表中显示为一个漂亮的 “2 of 5” 进度条吗?
![](/data/attachment/album/201710/10/170818bx2hcwhqh8em5mjo.png)
很好！你可以使用这些的语法创建交互式的复选框：
```
 - [ ] Screen width (integer)
 - [x] Service worker support
 - [x] Fetch support
 - [ ] CSS flexbox support
 - [ ] Custom elements
```
它的表示方法是空格、破折号、再空格、左括号、填入空格（或者一个 `x` ），然后封闭括号，接着空格，最后是一些话。
然后你可以实际选中或取消选中这些框！出于一些原因这些对我来说看上去就像是技术魔法。你可以*选中*这些框! 同时底层的文本会进行更新。
他们接下来会想到什么魔法？
噢，如果你在一个 项目面板   project board 上有这些工单的话，它也会在这里显示进度：
![](/data/attachment/album/201710/10/170818edbbr5d214gd1b1k.png)
如果在我提到“在一个项目面板上”时你不知道我在说些什么，那么你会在本页下面进一步了解。
比如，在本页面下 2 厘米的地方。
### #9 GitHub 上的项目面板
我常常在大项目中使用 Jira 。而对于个人项目我总是会使用 Trello 。我很喜欢它们两个。
当我学会 GitHub 的几周后，它也有了自己的项目产品，就在我的仓库上的 Project 标签，我想我会照搬一套我已经在 Trello 上进行的任务。
![](/data/attachment/album/201710/10/170818ir6199o9rr56p88o.png)
*没有一个是有趣的任务*
这里是在 GitHub 项目上相同的内容：
![](/data/attachment/album/201710/10/170819zfsbf7jswvaiasi9.png)