x = e(x(cid:48), k), y = e(y(cid:48), k),
p(e(e(x(cid:48), k), k), e(e(y(cid:48), k), k)) = e(e(w, k), k).
Parsing then solves the problem as:
w = p(x(cid:48), y(cid:48)), x = e(x(cid:48), k), y = e(y(cid:48), k)
5. ACTIVE DEDUCTION MODULO HE
We turn our attention now to active deduction modulo our
theory HE, and present an inference system to solve a set
of cap constraints modulo HE. The idea is to formulate its
rules as ‘calling’ the Eh-Unifn rule of the previous section.
Such an inference system will be shown to be sound and
complete for HE.
For the rest of the section, SYM will stand for either
sig(HE) or {p, π1, π2}. The inference system for active de-
duction modulo HE, denoted as ID, consists of the rules
given below, where Γ stands for any set of cap constraints.
The inferences will be applied starting with an initial set of
cap constraints modeling the protocol clauses, so containing
no equality constraints. Equality constraints that may have
to be considered during the inferences will all be over Eh, so
‘=’ will stand for equality modulo Eh. A SYM that appears
in the premise and the conclusion of any rule, stands for the
same given symbol set.
Projection:
Γ (cid:116) {S (cid:116) p(t1, t2)} (cid:46)(SYM,HE) t}
Γ ∪ {S ∪ {t1, t2} (cid:46)(SYM,HE) t}
Decryption:
Γ (cid:116) {S (cid:116) {e(t, k)} (cid:46)(SYM,HE) t(cid:48)}
Γ ∪ {S ∪ {t} (cid:46)(SYM,HE) t(cid:48)} ∪ {S (cid:46)(SYM,HE) k}
if d ∈ SYM.
Degeneracy:
Γ (cid:116) {S (cid:46)(SYM,HE) t}
Γτ
if S = {s1,··· , sn}, and τ = nf (si = t) (cid:54)= ⊥
for some i in {1, . . . , n}.
Homomorphic Deduction:
Γ (cid:116) {S (cid:116) {e(s1, t1), e(s2, t2), . . . , e(sn, tn)} (cid:46)(SY M,HE) e(s, t)}
Γ ∪ {S ∪ {s1, s2, . . . , sn} (cid:46)({p,π1,π2},HE) s}τ
where τ is some nf ({t1 = t}∪{t2 = t}∪···∪{tn = t}).
Cap Decomposition:
Γ (cid:116) {S (cid:46)(SY M,HE) f (t1, . . . , tm)}
Γ ∪ {S (cid:46)(SY M,HE) t1} ∪ ··· ∪ {S (cid:46)(SY M,HE) tm}
if f ∈ SY M .
Variable Substitution:
Γ
Γσ
where (i) x ∈ V ars(Γ), σ : x (cid:55)→ Pv(t1, . . . , tn) for a
legal bit string sequence v of length n;
(ii) and the ti’s are distinct, non-variable terms
in the LHS of the constraints in Γ, such that
x (cid:54)∈ V ars(ti), 1 ≤ i ≤ n.
The Degeneracy rule corresponds to the case where one of
the terms to the left of a cap constraint in Γ is Eh-uniﬁable
with the term to the right of that constraint; this rule is to
be applied eagerly. The inference rules of ID are don’t-know
nondeterministic: i.e., for completeness, they may all have
to be tried, in turn. As usual, we write an inference as a
transformation Γ ⇒ID Γ(cid:48) on sets of cap constraints. We
shall show below that ID-derivations – which are, by deﬁni-
tion, sequences of such transformations – terminate and are
sound; and also that ID is complete for satisﬁability; i.e., if
Γ is solvable, then there is an ID-derivation from Γ to an
empty set of cap constraints Γ(cid:48).
5.1 Termination
For termination and for completeness, there are certain
typical protocol properties that will be required. The prop-
erties that we formulate now, are true for all usual protocols;
they will be shown to be preserved under the inferences ID.
Definition 7. A set of cap constraints Γ = {S1 (cid:46)(SYM,HE)
t1, . . . , Sm (cid:46)(SYM,HE) tm} is said to satisfy the Standard Pro-
tocol Property, iﬀ the following two conditions are satisﬁed:
1. The Variable Introduction property: Let 1 ≤ j ≤ m,
and x any variable that appears in Sj; then there exists
i, 1 ≤ i ≤ n, i (cid:54)= j, such that ti = x.
2. The Constructor property: None of the symbols d, π1, π2
appears in Γ.
We shall assume that the initial set of cap constraints
modeling the protocol rules have the Standard Protocol Prop-
erty: Variable introduction means that a principal’s actions
are determined by the messages (s)he receives or deduces.
The constructor property says that the protocol clauses do
not contain functions that destruct data.
Our purpose in this subsection is to show the termina-
tion of any ID-derivation. For that, we ﬁrst need to show
that ID-derivation sequences preserve the Standard Proto-
col Property.
Lemma 7. Let Γ0, Γ1, . . . , Γn be an ID-derivation, where
Γ0 has the Variable Introduction property. Then Γn also has
the Variable Introduction property.
Proof. We will show that if Γ ⇒ID Γ(cid:48), and Γ has the
Variable Introduction property, then so does Γ(cid:48). By inspec-
tion of all the inference rules, if some occurrence of a vari-
able disappears, then that variable has to be instantiated.
We consider two cases:
Case 1: If no variable in Γ is instantiated, then all occur-
rences of all variables in Γ still remain in Γ(cid:48). The statement
is trivially true.
Case 2: If some variable is instantiated, that variable will
be instantiated everywhere, according to our inference rules.
So there will be no occurrence of that variable in Γ(cid:48). The
statement is also true in this case.
Lemma 8. Suppose Γ has the Constructor property, and
Γ ⇒ID Γ(cid:48). Then Γ(cid:48) also has the Constructor property.
Proof. By inspection of the inference rules, any symbol
appearing in the conclusion of an inference has to appear
already in its premise.
Proving Termination:.
For any set Γ of cap constraints, we deﬁne: nvars(Γ) =
|{x | x appears in Γ}|. For any cap constraint S appearing
in Γ, let T erms(S) be the multiset {s| s appears S}, and
Constraints(Γ) be the multiset {T erms(S)| S ∈ Γ}. We
then deﬁne the measure of Γ as the lexicographically ordered
pair: M (Γ) = (nvars(Γ), Constraints(Γ)). This measure is
well-founded. We show now that it is reduced by every ID-
inference.
Lemma 9. If Γ has the Standard Protocol property, and
if Γ ⇒ID Γ(cid:48), then M (Γ(cid:48)) < M (Γ).
Proof. Projection and Decryption do not increase the
ﬁrst component, but reduces the second component. By
Lemma 6, Homomorphic Deduction, Degeneracy and Cap
Decomposition do not increase the ﬁrst component. Actu-
ally, Homomorphic Deduction either reduces the ﬁrst com-
ponent, or does not increase the ﬁrst component, but reduce
the second component. Degeneracy and Cap Decomposition
do not increase the ﬁrst component, but reduce the second
component. The Variable Substitution rule reduces the ﬁrst
component: indeed, it replaces any variable x by a term not
containing x, and also not containing any fresh variables.
Theorem 1. Suppose Γ is a constraint set satisfying the
Standard Protocol property. Then every ID-derivation from
Γ is ﬁnite.
Proof. The well-founded measure M (Γ) decreases at each
inference.
5.2 ID is Sound and Complete
ID is Sound: We only prove the soundness of the Homo-
morphic Deduction rule. The soundness of the other rules
of ID should be straightforward.
Lemma 10. Let Γ be a constraint set, and Γ(cid:48) the con-
straint set derived from Γ by Homomorphic Deduction. If a
substitution σ satisﬁes Γ(cid:48), it also satisﬁes Γ.
Proof. We consider all the ground instances of the Ho-
momorphic Deduction rule. We show that if there exists u
such that
u ∈ Cap({s1, s2, . . . , sn},{p, π1, π2}), then
e(u, t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM).
The proof is by induction on the structure of u. Base case:
suppose u is si, for some 1 ≤ i ≤ n, then the above statement
is trivially true. In the general case, u can be made up from
elements in {s1, s2, . . . , sn} by using some caps in {p, π1, π2},
so we consider three cases for the inductive argument:
Case i): Suppose u is p(u1, u2), where:
e(u1, t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM), and
e(u2, t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM).
We have to show that
e(p(u1, u2), t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM).
Because e(u1, t) and e(u2, t) are both in the cap closure, we
get that p(e(u1, t), e(u2, t)) is in the cap closure. Because of
HE, e(p(u1, u2), t) is also in the cap closure.
Case ii): Suppose u is π1(u1), where u1 = p(w, w(cid:48)) for some
ground terms w, w(cid:48), and suppose
e(u1, t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM).
e(π1(u1), t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM).
In other words, we want to show that e(w, t) is in the cap
closure; this follows because e(u1, t) = e(p(w, w(cid:48)), t) is in the
cap closure, and because of HE.
Case iii): Suppose u is π2(u1), where u1 = p(w, w(cid:48)) for some
ground terms w, w(cid:48), and suppose
e(u1, t) ∈ Cap({e(s1, t), e(s2, t), . . . , e(sn, t)}, SYM). We
We want to show that:
conclude here exactly as in Case ii).
Proposition 1. Let Γ0 be a set of cap constraints satis-
fying the Standard Protocol property. Suppose Γ0, Γ1, . . . , Γn
is an ID-derivation, and σ a substitution that satisﬁes Γn;
then σ satisﬁes also Γ0.
Proof. Suppose σ satisﬁes Γi+1; observe then that no
inference rule, from step i to step i + 1, adds any constraint
that can be inconsistent with Γi; it follows that σ also sat-
isﬁes Γi.
ID is Complete:.
We turn our attention now to showing that ID is ‘satisﬁa-
bility-complete’ for active deduction modulo HE; and for
that, we need our theory to be convergent. So we extend HE
by adding a single ‘meta’-reduction rule, to get the following
theory, that we denote as HE+:
π1(p(x, y)) → x
π2(p(x, y)) → y
d(e(x, y), y) → x
e(p(x, y), z) → p(e(x, z), e(y, z))
d(Pv(e(x1, z),··· , e(xn, z)), z) → Pv(x1,··· , xn)
where v is any legal bit string sequence of length n.
The following lemma is immediate:
Lemma 11. HE+ is convergent, and is equivalent to HE.
We observe next that the Eh-Unifn algorithm of Section 4
is complete for solving cap constraints modulo HE+ (or,
equivalently: modulo HE):
Lemma 12. Let Γ be a set of cap constraints, s and t any
two terms appearing in Γ, and let σ be a HE+-normalized
substitution. Then σ is a uniﬁer of s and t modulo HE+ if
and only if σ is a uniﬁer of s and t modulo Eh.
Proof. HE+ being convergent, we can solve s = t mod-
ulo HE+ by using narrowing. By Lemma 8, d, π1, π2 do not
occur in s or t, so the narrowing process will only use the
single rule of Eh.
In the sequel, we shall be needing the following notion of
a minimal solution for a set of cap constraints Γ:
Definition 8. Given two solutions σ, τ for a set of cap
constraints Γ, σ is said to be smaller than τ iﬀ |xσ| ≤ |xτ|
for every variable x appearing in Γ. (For any term t, its size
is denoted |t|.) A solution σ is minimal iﬀ no solution is
strictly smaller than σ.
Lemma 13. Let S (cid:46)(SYM,HE) t be a cap constraint with
the constructor property, that admits as minimal solution a
ground substitution σ in HE+-normal form. Then for any
variable x, xσ cannot contain the symbols d, π1, π2.
HE+ w ←−∗
Proof. By assumption, there is a term u ∈ Cap(S, SYM)
such that uσ ↔HE+ tσ. Since HE+ is convergent, there
exists then a ground term w, and a HE+-rewrite proof:
uσ −→∗
HE+ tσ. Now, by the constructor prop-
erty, the only function symbols that can appear in t, and in
the terms of S, are ‘p’ and ‘e’. Suppose some of these terms
contained a variable x such that xσ contains one of the sym-
bols d, π1, π2. Since σ is assumed to be in HE+-normal form,
it follows that none of the innermost subterms of uσ or tσ
with d, π1, or π2 as top symbols can be reducible. So, such
terms will remain as they are all along the rewrite proof;
they can then be replaced by arbitrarily chosen constants,
and we will get a solution for the constraint that is strictly
smaller than σ – contradicting the minimality assumption
on σ (cf. Deﬁnition 8).
A similar reasoning works also when the rewrite proof
between uσ and tσ is trivial, i.e., uσ and tσ are identi-
cal: suppose, for instance, that a term with root symbol
in {d, π1, π2} appears at certain positions in the term uσ;
then all these positions will have to be in the substitution σ;
one can then construct (as above) a σ(cid:48) strictly smaller than
σ, such that uσ(cid:48) and tσ(cid:48) are identical.
Theorem 2. Let Γ be a satisﬁable set of cap constraints
over HE, with the Standard Protocol Property. Then there
is an ID-derivation Γ0, Γ1, . . . , Γn, such that: (i) Γ0 is Γ,
(ii) each Γi is satisﬁable, and (iii) Γn is empty.
Proof. We actually show the following: Let Γ be any
satisﬁable, non-empty set of cap constraints over HE (with
the Standard Protocol Property), and σ any given mini-
mal ground solution for Γ; then there is an ID-inference
Γ ⇒ID Γ(cid:48) such that σ induces a solution for the set of cap
constraints Γ(cid:48). For this, we may assume that σ is a HE+-
normalized substitution.
Case 1: Consider ﬁrst the case, where for some constraint
S (cid:46)(SYM,HE) u in Γ, the set S contains a term with ‘p’ on top.