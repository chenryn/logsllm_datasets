# 检测攻击的基础日志服务器 Part 2：日志聚合
##### 译文声明
本文为翻译文章，原文来源：thevivi.net
译文仅供参考，具体内容及含义以原文为准。

## 引言
在之前的文章中，我介绍了如何设置Graylog2日志记录服务器。本篇文章将重点介绍如何从已安装的Graylog中获取日志数据。由于每个渗透测试人员所使用的基础设施资产的数量和类型各不相同，因此无法涵盖所有可能的日志来源。但本文提供的方法具有通用性，希望可以帮助您更好地理解和应用。

本文将探讨以下两种日志聚合方式：
1. Apache有效载荷/蜜罐/C2重定向器服务器
2. Postfix/Sendmail邮件服务器

## Graylog消息输入与Rsyslog简介
在开始配置日志聚合之前，先来了解一下Graylog的消息输入机制以及Rsyslog的基本概念：
- **消息输入**：这是Graylog用来接收传入日志消息的功能。
- **Rsyslog**（<http://www.rsyslog.com/>）是一种高效、快速的日志处理系统。它通常预装于*nix系统中，支持通过TCP或UDP协议转发日志信息至远程主机。我们将使用Rsyslog作为向Graylog发送日志的主要工具。

## 服务器端 - 设置Graylog消息输入
Graylog中的消息输入配置相对简单。首先，从Web界面进入“System → Inputs”菜单开始设置。
Graylog支持多种类型的输入源。如前所述，我们将采用Rsyslog方式，并选择“Syslog TCP”选项后点击“启动新输入”。

大部分设置项都是可选的，但你需要指定一个名称并选择用于监听的端口号（推荐使用高于1024的端口，例如5140）。完成配置后，点击“启动输入”按钮激活该设置。

现在可以开始准备客户端以向Graylog发送日志了。

## 客户端 - Apache Web服务器日志聚合
登录到您的Apache Web服务器，并创建文件`/etc/rsyslog.d/apache.conf`。将以下内容添加到此文件中：

```bash
$ModLoad imfile
# 默认Apache错误日志
$InputFileName /var/log/apache2/error.log
$InputFileTag apache-error-default:
$InputFileStateFile stat-apache-error
$InputFileSeverity info
$InputFileFacility local3
$InputRunFileMonitor
# 默认Apache访问日志
$InputFileName /var/log/apache2/access.log
$InputFileTag apache-access-default:
$InputFileStateFile stat-apache-access
$InputFileSeverity info
$InputFileFacility local4
$InputRunFileMonitor
$InputFilePollInterval 1
```

接着，在`/etc/rsyslog.conf`文件末尾追加以下配置：

```bash
$ActionDirectory /var/spool/rsyslog
$ActionQueueFileName fwdRule1
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionQueueType LinkedList
$ActionResumeRetryCount -1
*.* @@graylog.example.org:5140;RSYSLOG_SyslogProtocol23Format
local3.* @@graylog.example.org:5000;RSYSLOG_SyslogProtocol23Format
local4.* @@graylog.example.org:5140;RSYSLOG_SyslogProtocol23Format
```
请确保将所有的`graylog.example.org:5140`替换为您实际的Graylog服务器地址及其对应的端口号。

最后重启Rsyslog服务以使更改生效：

```bash
sudo service syslog stop
sudo service rsyslog restart
sudo service rsyslog status
```

回到Graylog Web管理界面打开“Sources”菜单，确认是否能看到你的Apache Web服务器IP地址/主机名。要验证Apache日志是否正在被实时处理，请在Graylog搜索菜单中查看是否有新的日志条目出现。

对于其他基于Apache的基础设施资产，只需重复上述步骤即可实现日志聚合功能。

## 服务器端 - Apache日志解析
默认情况下，Graylog不会自动解析Apache日志中的关键信息，如IP地址、用户代理等。为此，我们需要利用Grok模式来进行更精细的数据提取。

### 步骤一：选择示例日志
首先从Graylog搜索结果中选取一条Apache日志作为样本。记录下该日志的消息ID和所在索引位置。

### 步骤二：创建提取规则
进入“System → Inputs”，找到正在运行的Rsyslog输入项，点击其旁边的“管理提取器”。选择“Add extractor”下的“开始”，切换到“Message ID”标签页，填入刚才保存的信息后点击“加载消息”。

在下一个窗口中加载完整的示例日志。滚动至“消息”字段处，从下拉列表中选择“Grok模式”。

如果一切顺利，你应该能在示例消息框内看到Apache日志文本。接下来复制粘贴下面的Grok表达式至相应区域并尝试执行：

```grok
%{IPORHOST:clientip} %{HTTPDUSER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})" %{NUMBER:response} (?:%{NUMBER:bytes}|-)
```

检查“Extractor Preview”部分以确认日志已被正确拆分成了多个字段。给这个提取器命名，然后点击“创建提取器”。记得勾选“Apply to all messages”选项。

### 测试
现在所有新收到的Apache日志都将按照定义好的规则进行自动解析。你可以再次检查Graylog搜索结果来验证这一点——之前不存在的新字段现在应该已经出现了。

注意：Grok模式非常强大且灵活，适用于各种不同来源的日志分析。建议访问“System → Grok patterns”查看内置模式库，或者自行编写定制化的解析规则。

## 客户端 - 邮件服务器日志聚合
Postfix和Sendmail都默认将日志写入系统的syslog守护进程中。通常这些邮件日志会被存储在`/var/log/maillog`路径下。幸运的是，它们无需额外配置即可被Rsyslog正常处理。

为了将邮件服务器的日志转发给Graylog，只需编辑`/etc/rsyslog.conf`并在文件末尾添加如下行：

```bash
*.* @@graylog.example.org:5140;RSYSLOG_SyslogProtocol23Format
```
同样地，请用正确的Graylog服务器地址及端口号替换示例中的值。

重新启动Rsyslog服务让修改生效：

```bash
sudo service syslog stop
sudo service rsyslog restart
sudo service rsyslog status
```

小贴士：默认情况下，Postfix只会记录电子邮件的发件人和收件人信息。若想获取更多详情，比如邮件主题，则需参照特定指南进一步配置。

## 其他C2日志聚合
如果您还希望通过Graylog收集Cobalt Strike C2的日志数据，请参考相关文档关于如何设置团队服务器日志客户端的部分。至于Empire C2框架，虽然目前尚无直接支持，但如果在其前端部署了重定向器的话，那么将后者产生的日志传递给Graylog也是可行的办法之一。

## 结论
至此我们已经成功搭建了一个能够从多种攻击基础设施资源集中采集日志信息的Graylog服务器平台。在后续章节中，我将进一步讨论如何对这些数据进行可视化展示。

## 参考资料
- [Graylog官方文档](https://docs.graylog.org/)
- [Rsyslog官方网站](http://www.rsyslog.com/)