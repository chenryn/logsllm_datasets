| dubbo | 1758天 | 414 | 370 | 44 | 0.24 |
| freeline | 252天 | 377 | 227 | 150 | 1.50 |
| anyproxy | 975天 | 369 | 352 | 17 | 0.38 |
我们可从上表中看到，阿里旗下开源的项目提交数最多的是 [ant-design](https://github.com/ant-design/ant-design) 项目，这是蚂蚁金服旗下推出的一种 UI 设计语言，在开源两年来，得到了快速的发展。我们可以看到，其提交数约计比第二名高过 1/3，其中社区提交数是成员提交数的两倍，并且日均提交数也达到了很高的水平。
第二名是 [weex](https://github.com/alibaba/weex) 项目，这是一个用于构建跨平台移动应用 UI 的框架，前些时间刚刚捐献给 Apache 基金会孵化管理。项目开源于 2016 年底，目前已有近 6 千提交，其中社区提交数量是阿里员工的提交数的 6 倍！而且，日均提交数竟然达到了 14.52 个，其发展速度还要超过了第一名 ant-design。**这代表了社区强烈的参与意愿，并且该项目得到了社区的广泛应用。**
第三名是 [druid](https://github.com/alibaba/druid) 项目，这是一个是“为监控而生的数据库连接池”，自称“是 Java 语言中最好的数据库连接池”。采用 Java 开发，也是阿里重点发展的项目之一，2011 年底开源发布，目前已经有 4 千余个提交，代码迭代很快。而且，非阿里员工的提交数量是阿里员工的提交数量的三倍左右**。**
应该说，这些排名较高的项目的活跃度都不错，其中只有一个项目是更新于半年前的，其它的项目都在近期有不同程度的更新维护。
从上面的项目的提交来源看，提交数最高前三名来自社区的提交要超过了阿里员工的提交，甚至远远超过，这说明这三个项目得到了社区的普遍支持，我们在后面分析复刻情况时也可以看到，这两个项目的复刻数都很高。而之后排名的项目，却呈现了另外一种趋势，即来自阿里员工的提交数要超过或远超来自社区的提交数，相应的表示出这些项目在社区的受欢迎程度要差一些。
从整体的这些项目来看，各个项目的提交数明显呈长尾样分布：
 ![](/data/attachment/album/201704/23/231922qntykbaz6pma0aal.png)
*项目提交数分布* 
而且，我们可以看到，从提交数排名第 8 位的项目开始，提交数呈断崖式下降，但是整体的以正态分布呈现：
 ![](/data/attachment/album/201704/23/231946ffxfpixssi6p6x4j.png)
*项目提交数分布（去除前 7 名）*
从上述分布上来看，阿里旗下的开源项目的发展情况正常，既有活跃项目，也有消亡项目。
我们判断，阿里对其开源项目的管理处于自由生长状况，并没有从统一管理的层面来督导、辅导各个开源项目的发展，也没有对陷入消亡的项目进行进一步处置和收尾，也就是说，一些烂尾的项目并没有进行妥善处置。
为了验证这个结论，我们来看一下阿里旗下开源的项目的最近更新时间。
### 项目的最近更新时间
抛开一些项目内的无关紧要的更新（如修订一些 README，pom.xml 等），我们发现这 133 个项目当中有 60 个项目更新于一年前，其中更新于 4 年前及以上的有 30 个。可见有不少遗留项目缺乏处置。
当然，根据上图也可以反映出近年来阿里的开源项目整体的发展趋势要超过过去几年。
### 项目的拉取请求数和问题数
GitHub 开创性的使用了 拉取请求   （    pull request    ） （经常简称为 PR）的方式来为开源项目提供社区协作支持。无论是项目成员还是外部合作者，以及偶尔的关注该项目的贡献者，都可以通过发起拉取请求来给某个项目提交补丁，项目维护人员可以对该拉取请求进行审核，如果审核通过，就会“拉取”该合并请求到项目中，从而将贡献者提交的代码融合到项目代码之中。
作为社区贡献者，对一个项目发起贡献的主要方式就是给该项目发起拉取请求。虽然也有不少项目要求几乎所有成员都必须以拉取请求的方式来提交其代码，而不允许直接提交到仓库中，但是通常而言，一个项目的拉取请求数可以从侧面反映出一个项目的社区（外部）参与程度。
而对一个项目作出贡献的方式不仅仅是贡献代码，还有对项目中发现的问题、缺失功能所提交的报告也是一种重要的方式，这些信息在 GitHub 中统一被称之为 问题   （    issue    ） 。
每个拉取请求和问题，都会被项目维护者进行审核，并进行处置。比如对于拉取请求，可以接受、可以拒绝；对于问题，可以回复、也可以忽略/关闭。
一般来说，活跃的项目其拉取请求数量和问题数量也会越大，但是我们这里不去做这些数量的排名，我们感兴趣的是，这些拉取请求和问题中，开放和关闭的比例情况。
如下表，我们列出了拉取请求未接纳比例最高的前十名（这里略去了拉取请求数低于10的项目）。
|  |  |  |  |  |
| --- | --- | --- | --- | --- |
| **项目** | **开放** **PR** **数** | **关闭** **PR** **数** | **PR** **数** | **PR** **开放比** |
| LuaViewSDK | 8 | 3 | 11 | 72.73% |
| DataX | 15 | 16 | 31 | 48.39% |
| dubbo | 57 | 71 | 128 | 44.53% |
| RocketMQ | 18 | 32 | 50 | 36.00% |
| nginx-http-concat | 6 | 12 | 18 | 33.33% |
| jstorm | 17 | 53 | 70 | 24.29% |
| anyproxy | 9 | 30 | 39 | 23.08% |
| atlas | 4 | 17 | 21 | 19.05% |
| otter | 1 | 11 | 12 | 8.33% |
| nginx-tfs | 1 | 13 | 14 | 7.14% |
我们可以看到，这些项目中拉取请求未接纳的比例最高的有的高达 70% 以上，当然，另外一方面，我们也看到了这些项目的拉取请求数都不高。这可以反映出该项目的社区参与积极性不高。 
但是几个提交数比较高的项目，除个别情况外，其拉取请求未接纳的比例都很低： 
|  |  |  |
| --- | --- | --- |
| **项目** | **PR** **开放比** | **提交数** |
| ant-design | 0.10% | 8467 |
| weex | 1.03% | 5779 |
| druid | 0.50% | 4056 |
| fastjson | 0.00% | 1883 |
| LuaViewSDK | 72.73% | 1195 |
| rax | 3.82% | 1001 |
| tengine | 6.83% | 907 |
| dubbo | 44.53% | 414 |
| freeline | 0.00% | 377 |
| anyproxy | 23.08% | 369 |
| terraform-provider | 0.00% | 355 |
这说明这些项目的活跃不是没有道理的。
究竟是由于社区参与积极性不高导致的未接纳比例高，还是反之，我们认为或许是彼此互相影响导致的。 
再让我们来看看问题数。
|  |  |  |  |  |
| --- | --- | --- | --- | --- |
| **项目** | **全部问题** | **开放问题** | **关闭问题** | **问题开放比** |
| oceanbase | 12 | 12 | 0 | 100.00% |
| mirrors | 46 | 45 | 1 | 97.83% |
| ons | 12 | 11 | 1 | 91.67% |
| simpleimage | 15 | 13 | 2 | 86.67% |
| LVS | 25 | 21 | 4 | 84.00% |
| tfs | 23 | 19 | 4 | 82.61% |
| taokeeper | 31 | 23 | 8 | 74.19% |
| nginx-http-concat | 44 | 29 | 15 | 65.91% |
| dubbo | 423 | 273 | 150 | 64.54% |
| AndFix | 341 | 219 | 122 | 64.22% |
| DataX | 183 | 113 | 70 | 61.75% |