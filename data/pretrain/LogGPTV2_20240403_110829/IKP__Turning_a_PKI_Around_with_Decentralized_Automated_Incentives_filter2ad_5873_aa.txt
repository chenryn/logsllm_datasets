title:IKP: Turning a PKI Around with Decentralized Automated Incentives
author:Stephanos Matsumoto and
Raphael M. Reischuk
2017 IEEE Symposium on Security and Privacy
IKP: Turning a PKI Around with
Decentralized Automated Incentives
Stephanos Matsumoto
Carnegie Mellon University/ETH Zurich
Raphael M. Reischuk
ETH Zurich
Abstract—Despite a great deal of work to improve the TLS
PKI, CA misbehavior continues to occur, resulting in unau-
thorized certiﬁcates that can be used to mount man-in-the-
middle attacks against HTTPS sites. CAs lack the incentives
to invest in higher security, and the manual effort required
to report a rogue certiﬁcate deters many from contributing to
the security of the TLS PKI. In this paper, we present IKP, a
platform that automates responses to unauthorized certiﬁcates
and provides incentives for CAs to behave correctly and for
others to report potentially unauthorized certiﬁcates. Domains
in IKP specify criteria for their certiﬁcates, and CAs specify
reactions such as ﬁnancial penalties that execute in case of
unauthorized certiﬁcate issuance. By leveraging smart contracts
and blockchain-based consensus, we can decentralize IKP while
still providing automated incentives. We describe a theoretical
model for payment ﬂows and implement IKP in Ethereum to
show that decentralizing and automating PKIs with ﬁnancial
incentives is both economically sound and technically viable.
I. INTRODUCTION
Transport Layer Security (TLS) [30] secures much of the en-
crypted client-server communication in the World Wide Web:
HTTPS [77], which runs over TLS, is now estimated to be used
in more than half of all page loads in web browsing [39]. The
security of the TLS public-key infrastructure (PKI) heavily
relies on certiﬁcate authorities (CAs), who make a business
out of certifying the authenticity of sites’ public keys. Without
the correct operation of CAs, the use of encryption provides
no beneﬁt, as clients may use a key that does not actually
belong to the legitimate server.
Unfortunately, CAs have shown to be prone to compromises
and operational errors. These failures have occurred all around
the world, including the US [26, 64], France [51], the Nether-
lands [42], Turkey [50], and China [52]. Even Symantec,
which has almost a quarter of the TLS-certiﬁcate market
share [10], issued unauthorized certiﬁcates for Google and
almost 2,500 unauthorized certiﬁcates for both real and unreg-
istered domains as part of a test in 2015 [80, 81]. Thus, while
CAs play a critical role to the security of the TLS ecosystem,
they have failed in this role by issuing unauthorized certiﬁcates
in error, maliciously issuing certiﬁcates to avoid changing
browser requirements [56], or even selling CA authority as
a service [74]. Some of these failures have led to man-
in-the-middle (MitM) attacks, allowing the interception of
communication with popular sites such as Google, Microsoft
Live, Skype, and Yahoo [65, 66].
We observe that despite the need for CAs to invest more in
security, there are insufﬁcient incentives for them to do so.
CAs that issue unauthorized certiﬁcates enable MitM attacks
between clients and domains, who suffer the consequences
of a rogue CA’s misbehavior [59]. These MitM attacks are
often only visible to those being attacked, since an adversary
could present an unauthorized certiﬁcate for a domain only to
some clients, so that the other clients do not even know that
the unauthorized certiﬁcate exists. Moreover, while CAs may
face the consequence of being distrusted by browsers [52, 72],
some CAs are “too big to fail,” meaning that their removal
would block access to too many HTTPS sites and is thus
unlikely. While proposed solutions to the above problems
exist [54, 83], CAs generally gain little reward for a reputation
of security and face few consequences for misbehaving [14].
We also observe that due to a lack of automation,
reporting unauthorized certiﬁcates is time and labor-
intensive. When a CA issues an unauthorized certiﬁcate for a
domain, a detector (the entity who discovers the certiﬁcate) has
several options. First, a detector can contact the misbehaving
CA directly, because only the CA can revoke the certiﬁ-
cate. However, if the CA is malicious, it may never revoke
the certiﬁcate, leaving the domain open to potential MitM
attacks. Even revocation may not help since some widely-
used browsers do not check revocation information at all [55].
The detector could instead contact browser vendors, who can
update client browsers to reject the certiﬁcate [49]. However,
such a response is unlikely except for relatively popular sites.
A detector could also pursue legal action against the CA, but
this process may be long, costly and ultimately unfruitful, due
in part to the fact that CAs are located in approximately 52
countries [33], each with its own legal system. Thus due to the
unlikely recourse and the effort required, there are insufﬁcient
incentives for detectors to report unauthorized certiﬁcates.
Therefore, in this paper we ask two fundamental questions:
how can we better incentivize correct CA behavior and
the reporting of misbehavior, and how can we automate
the processing of an unauthorized certiﬁcate report? In
particular, how can we formally deﬁne what it means for a
CA to behave correctly? What incentives can we offer CAs
and detectors? What mechanisms are necessary for automating
the handling reports of misbehavior, and what beneﬁts does
automation provide?
As a ﬁrst step towards answering these questions, we
propose Instant Karma PKI (IKP), an automated platform
for deﬁning and reporting CA misbehavior that incentivizes
CAs to correctly issue certiﬁcates and detectors to quickly
© 2017, Stephanos Matsumoto. Under license to IEEE.
DOI 10.1109/SP.2017.57
410
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:11 UTC from IEEE Xplore.  Restrictions apply. 
report unauthorized certiﬁcates. IKP allows domains to specify
policies that deﬁne CA misbehavior, and CAs to sell insurance
against misbehavior. We also propose a formal model for
incentive analysis to show that IKP provides incentives for
CAs and detectors and punishes misbehaving CAs. We further
show that with our incentive structure, even CAs that collude
with other domains or detectors cannot proﬁt ﬁnancially.
More concretely, for the TLS Web PKI, IKP allows partici-
pating HTTPS domains to publish domain certiﬁcate policies
(DCPs), policies that specify criteria that the domains’ TLS
certiﬁcates must meet. Any violation of these policies consti-
tutes CA misbehavior. IKP allows participating CAs to sell
reaction policies (RPs) to domains, which specify ﬁnancial
transactions that execute automatically when an unauthorized
certiﬁcate is reported. Domains affected by the certiﬁcate, the
detector, and the CA receive payments via these transactions.
The payment amounts are set such that CAs expect to lose
money by issuing unauthorized certiﬁcates, and detectors
expect to gain money by reporting unauthorized certiﬁcates.
Information about CA misbehavior and RP offerings are pub-
lic, allowing domains to use this information as an indicator of
how likely a CA is to maintain high security and thus protect
against unauthorized certiﬁcate issuance.
We have implemented a prototype of IKP in Ethereum [87],
a blockchain-based smart contract platform that provides
important properties for achieving incentivization and au-
tomation. Ether, the cryptocurrency underlying Ethereum, is
a natural basis for implementing ﬁnancial transactions and
incentives. The smart contract ecosystem provides a public,
automated mechanism for handling detector reports and exe-
cuting ﬁnancial transactions, ensuring quick responses to CA
misbehavior. Furthermore, Ethereum provides decentralization
so that no trusted third party is needed to register DCPs, RPs,
and ﬁnancial assets. While incentivization and automation are
possible with a centralized third party, we protect IKP itself
against compromise by building it on top of Ethereum.
To provide realistic incentive amounts, we also analyze
certiﬁcate offers from the most widely-used CAs, quantifying
and bound the risks of CA misbehavior. These insights allow
us to predict realistic payment amounts for RP.
In summary, we make the following contributions:
• We present the design of IKP, including a framework for
domain policies and reactions to CA misbehavior.
• We demonstrate through an economic analysis that IKP
incentivizes good CA behavior and punishes misbehavior.
• We implement an IKP prototype in Ethereum and discuss
the present and future technical feasibility of IKP.
• We analyze real-world data from existing CAs to deter-
mine realistic values for RP offerings.
II. PROBLEM DEFINITION AND ADVERSARY MODEL
In a nutshell, the goal of this paper is to provide incentives
for correct CA behavior (i.e., due diligence when issuing
certiﬁcates) and automation in processing reports of unautho-
rized certiﬁcates from detectors. To achieve this goal, we must
design a system that can 1) deﬁne CA misbehavior, 2) evaluate
411
whether a given certiﬁcate constitutes misbehavior according
to the above deﬁnition, 3) specify reactions and payments
that will occur in response to CA misbehavior, 4) process
reports from detectors regarding unauthorized certiﬁcates, and
5) execute these reactions and payments automatically after a
CA has misbehaved. Achieving these goals allows us to deter
CA misbehavior by choosing payments that provide the ap-
propriate incentives for correct CA behavior and for reporting
unauthorized certiﬁcates. These incentives also increase the
number of entities monitoring CAs and thus the probability
that an unauthorized certiﬁcate is quickly detected. Automatic
execution of reactions and payments ensures ”instant karma”
in IKP: detectors quickly receive rewards and CAs quickly
receive punishment.
A. Desired Properties
A system achieving the above goals should have at least the
following properties:
• Public auditability: all information required to detect an
unauthorized certiﬁcate is publicly accessible.
• Automation: once CA misbehavior has been reported
and conﬁrmed, reactions should automatically proceed
without requiring additional information or authorization.
• Incentivization: entities that expose CA misbehavior
have a positive expected return on investment (ROI).
• Deterrence: CAs have a negative expected ROI for issu-
ing an unauthorized certiﬁcate for a domain, regardless
of the entities they collude with.
As secondary goals, the system should achieve decentraliza-
tion (i.e., the absence of a central trusted entity in the system)
and MitM prevention (i.e., the rejection of all unauthorized
certiﬁcates by clients).
B. Adversary Model
Our adversary’s goal is to issue a rogue certiﬁcate while
maintaining a positive expected ROI. The adversary may
access the long-term private keys of one or more CAs (and
can thus issue arbitrary certiﬁcates from these CAs), as well as
those of colluding domains. The adversary may take any action
within the PKI (e.g., issuing/revoking certiﬁcates) or within
IKP (e.g., issuing RPs or reporting certiﬁcates) to obtain a net
positive ROI among all entities it controls. We assume that
the adversary cannot break standard cryptographic primitives,
such as ﬁnding hash collisions or forging digital signatures.
The adversary also cannot compromise the private keys of
arbitrary domains. In our blockchain-based instantiation, we
further assume that the adversary cannot control a majority of
hashing power in the blockchain network.
III. IKP OVERVIEW
In this section, we provide an overview of the key features
of IKP. We begin by introducing its main components, and
then describe the main functions of the system. An extended
version [60] of this paper provides additional material.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:11 UTC from IEEE Xplore.  Restrictions apply. 
CA
issue cert, RP
register RP
Domain
register DCP
TLS handshake
Client
CACA
CA
IKP Authority
• Global fund balance
• CA Registry
• DCP Registry
• RP Registry
• Misbehavior checker
• Payout enforcer
report rogue cert
Detector
can act as
Domain
Domain
Domain
Client
Client
Client
Fig. 1. Overview of the entities and functions in IKP.
A. Architecture
IKP is an extension of the standard TLS architecture, and
thus as in TLS, CAs issue certiﬁcates to domains, whose
servers carry out TLS handshakes with clients. As shown in
Figure 1, IKP introduces two new entities: the IKP authority
and detectors.
The IKP authority is responsible for the core functionality
of IKP. Speciﬁcally, the IKP authority maintains information
on CAs such as identiﬁers (e.g., DNS names), public keys
to authenticate to the IKP authority, and ﬁnancial account
information at which to receive payments. The IKP authority
also stores domain certiﬁcate policies (DCPs), which are
provided by domains and can be used to computationally
determine whether a given certiﬁcate is authorized for a
domain, and reaction policies (RPs), which specify automatic
reactions that occur if an unauthorized certiﬁcate is reported.
The IKP authority is responsible for executing these reactions.
The IKP authority also maintains a balance called the global
fund, which can send and receive payments in IKP.
Detectors are responsible for reporting suspicious certiﬁ-
cates to the IKP authority. They monitor certiﬁcates issued by
CAs, and report any certiﬁcates they deem to be unauthorized.
Any entity, be it a CA, domain, or client, can detect and report
CA misbehavior. Each detector must have a ﬁnancial account
at which it can receive rewards for successfully reporting an
unauthorized certiﬁcate.
Entities in the standard TLS architecture have additional re-
sponsibilities. CAs who have registered with the IKP authority
can issue RPs, thus acting as a sort of “insurer” against CA
misbehavior. Domains register DCP with the IKP authority,
providing a public policy that deﬁnes CA misbehavior (i.e.,
issuing an unauthorized certiﬁcate). While Figure 2 shows
intuitive examples of a DCP and an RP, the logic of both DCPs
and RPs is determined by machine-understandable policies
speciﬁed by the domain and by the CA, respectively, providing
ﬂexibility in addition to automation and ﬁnancial incentives.
B. Operation
We now summarize the actions that occur in IKP, some of
which are shown in Figure 2.
CA A
cert {a.com, K}
a.com
Reaction Policy (RP)
"If anyone issues an 
unauthorized cert for a.com,
I’ll pay them $X and whoever 
ﬁnds such a cert will get $Y“
Domain Certiﬁcate
Policy (DCP)
"Only CAs A and B can
issue certiﬁcates for a.com"
IKP Authority
• Collect registration fees
• Store DCPs/RPs
• Process detector reports
• Execute payouts
cert {a.com, K’}
"Unauthorized 
certiﬁcate!"
Detector
Fig. 2. Sample interactions between entities in IKP. As in Figure 1, yellow
denotes a CA and purple denotes a domain.
EXPLANATION OF FIELDS IN A CA REGISTRATION.
TABLE I
Field
Use
CA name
Valid from
Payment account
Public keys
Update keys
Update threshold
identify CA
specify start period of information validity
receive payments for CA
list of CA’s public keys
authorize updates to this information (default: empty)
threshold of signatures required for updates (default: 1)