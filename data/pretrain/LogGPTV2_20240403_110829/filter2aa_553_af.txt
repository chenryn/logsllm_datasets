getchar();
例如，程序在最后提示用户输入体重。用户键入体重后，按下Enter键
以输入数据。程序将读取体重，第1个getchar()读取Enter键，第2个getchar()
会导致程序暂停，直至用户再次按下Enter键。如果你现在不知所云，没关
系，在学完C输出后就会明白。到时，我们会提醒读者使用这种方法。
虽然许多IDE在使用上大体一致，但是细节上有所不同。就一个产品的
系列而言，不同版本也是如此。要经过一段时间的实践，才会熟悉编译器的
工作方式。必要时，还需阅读使用手册或网上教程。
56
Microsoft Visual Studio和C标准
在Windows软件开发中，Microsoft Visual Studio及其免费版本Microsoft
Visual Studio Express都久负盛名，它们与C标准的关系也很重要。然而，微
软鼓励程序员从C转向C++和C#。虽然Visual Studio支持C89/90，但是到目前
为止，它只选择性地支持那些在C++新特性中能找到的C标准（如，long
long类型）。而且，自2012版本起，Visual Studio不再把C作为项目类型的选
项。尽管如此，本书中的绝大多数程序仍可用Visual Studio来编译。在新建
项目时，选择C++选项，然后选择【Win32控制台应用程序】，在应用设置
中选择【空项目】。几乎所有的C程序都能与C++程序兼容。所以，本书中
的绝大多数C程序都可作为C++程序运行。或者，在选择C++选项后，将默
认的源文件扩展名.cpp替换成.c，编译器便会使用C语言的规则代替C++。
1.8.7 Windows/Linux
许多Linux发行版都可以安装在Windows系统中，以创建双系统。一些存
储器会为Linux系统预留空间，以便可以启动Windows或Linux。可以在
Windows系统中运行Linux程序，或在Linux系统中运行Windows程序。不能通
过Windows系统访问Linux文件，但是可以通过Linux系统访问Windows文档。
1.8.8 Macintosh中的C
目前，苹果免费提供Xcode开发系统下载（过去，它有时免费，有时付
费）。它允许用户选择不同的编程语言，包括C语言。
Xcode 凭借可处理多种编程语言的能力，可用于多平台，开发超大型的
项目。但是，首先要学会如何编写简单的C程序。在Xcode 
4.6中，通过
【File】菜单选择【New Project】，然后选择【OS X Application Command
Line Tool】，接着输入产品名并选择C类型。Xcode使用Clang或GCC C编译
器来编译C代码，它以前默认使用GCC，但是现在默认使用Clang。可以设置
选择使用哪一个编译器和哪一套C标准（因为许可方面的事宜，Xcode中
Clang的版本比GCC的版本要新）。
57
UNIX系统内置Mac OS X，终端工具打开的窗口是让用户在UNIX命令行
环境中运行程序。苹果在标准软件包中不提供命令行编译器，但是，如果下
载了 Xcode，还可以下载可选的命令行工具，这样就可以使用clang和gcc命
令在命令行模式中编译。
58
1.9 本书的组织结构
本书采用多种方式编排内容，其中最直接的方法是介绍A主题的所有内
容、介绍B主题的所有内容，等等。这对参考类书籍来说尤为重要，读者可
以在同一处找到与主题相关的所有内容。但是，这通常不是学习的最佳顺
序。例如，如果在开始学习英语时，先学完所有的名词，那你的表达能力一
定很有限。虽然可以指着物品说出名称，但是，如果稍微学习一些名词、动
词、形容词等，再学习一些造句规则，那么你的表达能力一定会大幅提高。
为了让读者更好地吸收知识，本书采用螺旋式方法，先在前几个章节中
介绍一些主题，在后面章节再详细讨论相关内容。例如，对学习C语言而
言，理解函数至关重要。因此，我们在前几个章节中安排一些与函数相关的
内容，等读者学到第 9 章时，已对函数有所了解，学习使用函数会更加容
易。与此类似，前几章还概述了一些字符串和循环的内容。这样，读者在完
全弄懂这些内容之前，就可以在自己的程序中使用这些有用的工具。
59
1.10 本书的约定
在学习C语言之前，先介绍一下本书的格式。
1.10.1 字体
本书用类似在屏幕上或打印输出时的字体（一种等宽字体），表示文本
程序和计算机输入、输出。前面已经出现了多次，如果读者没有注意到，字
体如下所示：
#include 
int main(void)
{
printf("Concrete contains gravel and cement.\n");
return 0;
}
在涉及与代码相关的术语时，也使用相同的等宽字体，如stdio.h。本书
用等宽斜体表示占位符，可以用具体的项替换这些占位符。例如，下面是一
个声明的模型：
type_name variable_name;
这里，可用int替换type_name，用zebra_count替换variable_name。
1.10.2 程序输出
本书用相同的字体表示计算机的输出，粗体表示用户输入。例如，下面
是第14章中一个程序的输出：
60
Please enter the book title.
Press [enter] at the start of a line to stop.
My Life as a Budgie
Now enter the author.
Mack Zackles
如上所示，以标准计算机字体显示的行表示程序的输出，粗体行表示用
户的输入。
可以通过多种方式与计算机交互。在这里，我们假设读者使用键盘键入
内容，在屏幕上阅读计算机的响应。
1.特殊的击键
通常，通过按下标有 Enter、c/r、Return 或一些其他文字的键来发送指
令。本书将这些按键统一称为Enter键。一般情况下，我们默认你在每行输
入的末尾都会按下Enter键。尽管如此，为了标示一些特定的位置，本书使
用[enter]显式标出Enter键。方括号表示按下一次Enter键，而不是输入enter。
除此之外，书中还会提到控制字符（如，Ctrl+D）。这种写法的意思
是，在按下Ctrl键（也可能是Control键）的同时按下D键。
2.本书使用的系统
C 语言的某些方面（如，储存数字的空间大小）因系统而异。本书在示
例中提到“我们的系统”时，通常是指在iMac上运行OS X 10.8.4，使用Xcode
4.6.2开发系统的Clang 
3.2编译器。本书的大部分程序都能使用Windows7系
统的Microsoft Visual Studio Express 2012和Pelles C 7.0，以及Ubuntu13.04
Linux系统的GCC 4.7.3进行编译。
3.读者的系统
61
你需要一个C编译器或访问一个C编译器。C程序可以在多种计算机系统
中运行，因此你的选择面很广。确保你使用的C编译器与当前使用的计算机
系统匹配。本书中，除了某些示例要求编译器支持C99或C11标准，其余大
部分示例都可在C90编译器中运行。如果你使用的编译器是早于ANSI/ISO的
老式编译器，在编译时肯定要经常调整，很不方便。与其如此，不如换个新
的编译器。
大部分编译器供应商都为学生和教学人员提供特惠版本，详情请查看供
应商的网站。
1.10.3 特殊元素
本书包含一些强调特定知识点的特殊元素，提示、注意、警告，将以如
下形式出现在本书中：
边栏
边栏提供更深入的讨论或额外的背景，有助于解释当前的主题。
提示
提示一般都短小精悍，帮助读者理解一些特殊的编程情况。
警告
用于警告读者注意一些潜在的陷阱。
注意
提供一些评论，提醒读者不要误入歧途。
62
1.11 本章小结
C是强大而简洁的编程语言。它之所以流行，在于自身提供大量的实用
编程工具，能很好地控制硬件。而且，与大多数其他程序相比，C程序更容
易从一个系统移植到另一个系统。
C是编译型语言。C编译器和链接器是把C语言源代码转换成可执行代码
的程序。
用C语言编程可能费力、困难，让你感到沮丧，但是它也可以激发你的
兴趣，让你兴奋、满意。我们希望你在愉快的学习过程中爱上C。
63
1.12 复习题
复习题的参考答案在附录A中。
1.对编程而言，可移植性意味着什么？
2.解释源代码文件、目标代码文件和可执行文件有什么区别？
3.编程的7个主要步骤是什么？
4.编译器的任务是什么？
5.链接器的任务是什么？
64
1.13 编程练习
我们尚未要求你编写C代码，该练习侧重于编程过程的早期步骤。
1.你刚被MacroMuscle有限公司聘用。该公司准备进入欧洲市场，需要
一个把英寸单位转换为厘米单位（1 英寸=2.54 厘米）的程序。该程序要提
示用户输入英寸值。你的任务是定义程序目标和设计程序（编程过程的第1
步和第2步）。
[1].国际C语言混乱代码大赛（IOCCC，The International Obfuscated C Code
Contest）。这是一项国际编程赛事，从1984年开始，每年举办一次（1997、
1999、2002、2003和2006年除外），目的是写出最有创意且最让人难以理解
的C语言代码。——译者注
[2].VAX（Virtual Address eXtension）是一种可支持机器语言和虚拟地址的32
位小型计算机。VMS（Virtual Memory System）是旧名，现在叫OpenVMS，
是一种用于服务器的操作系统，可在VAX、Alpha或Itanium处理器系列平台
上运行。——译者注
[3].GCC最基本的用法是：gcc [options] [filenames]，其中options是所需的参
数，filenames是文件名。——译者注
65
第2章 C语言概述
本章介绍以下内容：
运算符：=
函数：main()、printf()
编写一个简单的C程序
创建整型变量，为其赋值并在屏幕上显示其值
换行字符
如何在程序中写注释，创建包含多个函数的程序，发现程序的错误
什么是关键字
C程序是什么样子的？浏览本书，能看到许多示例。初见 C 程序会觉得
有些古怪，程序中有许多｛、cp->tort和*ptr++这样的符号。然而，在学习C
的过程中，对这些符号和C语言特有的其他符号会越来越熟悉，甚至会喜欢
上它们。如果熟悉与C相关的其他语言，会对C语言有似曾相识的感觉。本
章，我们从演示一个简单的程序示例开始，解释该程序的功能。同时，强调
一些C语言的基本特性。
66
2.1 简单的C程序示例
我们来看一个简单的C程序，如程序清单2.1所示。该程序演示了用C语
言编程的一些基本特性。请先通读程序清单2.1，看看自己是否能明白该程
序的用途，再认真阅读后面的解释。
程序清单2.1 first.c程序
#include 
int main(void)         /* 一个简单的C程序 */
{
int num;          /* 定义一个名为num的变量 */
num = 1;          /* 为num赋一个值 */
printf("I am a simple "); /* 使用printf()函数 */
printf("computer.\n");
printf("My favorite number is %d because it is first.\n",num);
return 0;
}
如果你认为该程序会在屏幕上打印一些内容，那就对了！光看程序也许
并不知道打印的具体内容，所以，运行该程序，并查看结果。首先，用你熟
悉的编辑器（或者编译器提供的编辑器）创建一个包含程序清单2.1 中所有
内容的文件。给该文件命名，并以.c作为扩展名，以满足当前系统对文件名
的要求。例如，可以使用first.c。现在，编译并运行该程序（查看第1章，复
习该步骤的具体内容）。如果一切运行正常，该程序的输出应该是：
67
I am a simple computer.
My favorite number is 1 because it is first.
总而言之，结果在意料之中，但是程序中的\n 和%d 是什么？程序中有
几行代码看起来有点奇怪。接下来，我们逐行解释这个程序。
程序调整
程序的输出是否在屏幕上一闪而过？某些窗口环境会在单独的窗口运行
程序，然后在程序运行结束后自动关闭窗口。如果遇到这种情况，可以在程
序中添加额外的代码，让窗口等待用户按下一个键后才关闭。一种方法是，
在程序的return语句前添加一行代码：
getchar()；
这行代码会让程序等待击键，窗口会在用户按下一个键后才关闭。在第
8 章中会详细介绍 getchar()的内容。
68
2.2 示例解释
我们会把程序清单2.1的程序分析两遍。第1遍（快速概要）概述程序中
每行代码的作用，帮助读者初步了解程序。第2遍（程序细节）详细分析代
码的具体含义，帮助读者深入理解程序。
图2.1总结了组成C程序的几个部分[1]，图中包含的元素比第1个程序
多。
图2.1 C程序解剖
69
2.2.1 第1遍：快速概要
本节简述程序中的每行代码的作用。下一节详细讨论代码的含义。
#include   ←包含另一个文件
该行告诉编译器把stdio.h中的内容包含在当前程序中。stdio.h是C编译器
软件包的标准部分，它提供键盘输入和屏幕输出的支持。
int main(void)     ←函数名
C程序包含一个或多个函数，它们是C程序的基本模块。程序清单2.1的
程序中有一个名为main()的函数。圆括号表明main()是一个函数名。int表明
main()函数返回一个整数，void表明main()不带任何参数。这些内容我们稍后
详述。现在，只需记住int和void是标准ANSI C定义main()的一部分（如果使
用ANSI C之前的编译器，请省略void；考虑到兼容的问题，请尽量使用较新
的C编译器）。
/* 一个简单的C程序 */    ←注释
注释在/*和*/两个符号之间，这些注释能提高程序的可读性。注意，注
释只是为了帮助读者理解程序，编译器会忽略它们。
{    ←函数体开始
左花括号表示函数定义开始，右花括号（}）表示函数定义结束。
int num;   ←声明
该声明表明，将使用一个名为num的变量，而且num是int（整数）类
型。
num = 1;   ←赋值表达式语句
语句num = 1;把值1赋给名为num的变量。
70
printf("I am a simple "); ←调用一个函数
该语句使用 printf()函数，在屏幕上显示 I am a simple，光标停在同一
行。printf()是标准的C库函数。在程序中使用函数叫作调用函数。
printf("computer.\n");   ←调用另一个函数
接下来调用的这个printf()函数在上条语句打印出来的内容后面加
上“computer”。代码\n告诉计算机另起一行，即把光标移至下一行。
printf("My favorite number is %d because it is first.\n", num);
最后调用的printf()把num的值（1）内嵌在用双引号括起来的内容中一并
打印。%d告诉计算机以何种形式输出num的值，打印在何处。
return 0;   ←return语句
C函数可以给调用方提供（或返回）一个数。目前，可暂时把该行看作
是结束main()函数的要求。
}    ←结束
必须以右花括号表示程序结束。
2.2.2 第2遍：程序细节
浏览完程序清单2.1后，我们来仔细分析这个程序。再次强调，本节将
逐行分析程序中的代码，以每行代码为出发点，深入分析代码背后的细节，