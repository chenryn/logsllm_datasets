}
],
"count": 1
}
}
]
}
数据字段描述:
字段名 类型 描述
app string 应用名
line number 线路
line_name string 线路名
up number 上行流量(单位: bytes)
down number 下行流量(单位: bytes)
total number 总流量(单位: bytes)
rate number 流量占比(%)
session number 会话数
user_data object 用户详细数据
失败返回:
{
"code": 1,
"message": "Unknow error, fail to acquire data!"
}
1.13 获取带宽使用率
请求地址: http://acip:9999/v1/status/bandwidth-usage
功能: 获取带宽使用率
方法: GET
结果参数同上
成功返回:
{
"code": 0,
"message": "Successfully",
"data": 30
}
数据字段描述:
字段名 类型 描述
data number 带宽使用率(%)
失败返回:
{
"code": 1,
"message": "Unknow error, fail to acquire data!"
}
2. 用户/组相关接口
2.1 添加用户
请求地址: http://acip:9999/v1/user
功能: 添加新用户,可同时设置多个用户属性
方法: POST
请求时携带的数据:
{
"name": "hello",
"father_path": "/",
"desc": "",
"show_name": "",
"expire_time": "2018-01-10 00:00:00"
}
操作字段描述:
字段名 类型 必填 描述
name string true 用户名
father_path string false 父组,即用户添加后所在组(以"/"开头,且不支持向域用户组添加用户)
desc string false 用户描述
show_name string false 用户显示名
账号过期时间，格式为“YY-MM-dd hh:mm:ss”, 为空或无此字段表示不过
expire_time string false
期
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Add user success!"
}
扩展支持的用户属性:
{
"enable": true,
"self_pass": {
"enable": true,
"password": "xxx",
"modify_once": false
},
"bind_cfg": [
"192.168.1.1",
"ee-ee-ee-ee-ee-ee"
],
"custom_cfg": {
"attr1": "value1",
"attr2": "value2"
},
"logout": true,
"common_user": {
"allow_change": true,
"enable": true
},
"limit_ipmac": [
"192.168.1.1-192.168.1.3",
"192.168.1.2"
]
}
注: 基本属性和扩展属性字段都是相对独立的,使用时多个字段是平级关系,例如:添加用户的同时想要修改用户绑
定属性,格式如下:
{
"name": "hello",
"father_path": "/",
"desc": "",
"show_name": "",
"expire_time": "2018-01-10 00:00:00",
"extend": {
"bind_cfg": [
"192.168.1.1",
"ee-ee-ee-ee-ee-ee"
],
...
}
}
扩展字段描述:
字段名 类型 必填 描述
enable boolean false 是否启用该用户(true为启用)
本地密码(self_pass字段不为空时,表示要设置用户本地密码,此时
self_pass object false password字段不能为空 password:表示本地密码 modify_once:初
次认证是否修改密码)
string
bind_cfg false 用户绑定,支持IP和MAC
array
custom_cfg object false 自定义属性的键值对
logout boolean false 密码认证成功后是否弹出注销窗口
enable:是否允许多人使用该账号登录 allow_change:是否允许修改
common_user object false
本地密码
限制登录地址(IP或MAC,IP支持单个或IP段(192.168.1.1-
limit_ipmac object false
192.168.1.2),MAC格式ee-ee-ee-ee-ee-ee)
2.2 删除用户
请求地址: http://acip:9999/v1/user?_method=DELETE
功能: 删除已存在的某个用户
方法: POST
请求时携带的数据:
{
"name": "hello"
}
操作字段描述:
字段名 类型 必填 描述
name string true 用户名
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Delete user success!"
}
2.3 搜索用户
请求地址: http://acip:9999/v1/user?_method=GET
功能: 搜索用户,并返回用户详细信息
方法: POST
请求时携带的数据:
{
"search_type": "user",
"search_value": "张三",
"extend": {
"custom_cfg": {
"attr1": "value1"
},
"expire": {
"start": "2018-05-01",
"end": "2018-05-16"
},
"user_status": "all",
"public": true,
"father_path": "/"
}
}
操作字段描述:
字段名 类型 必选 描述
search_type string true 搜索类型(支持user, ip, mac 3种类型)
search_value string或object true 搜索的值(搜索类型及值类型见下表)
extend object false 搜索用户扩展属性,可选
search_type和search_value的对应关系:
search_value
search_type 示例 描述
类型
user string 张三 用户名(支持模糊搜索)
{"start":"1.1.1.1", "end": 搜索用户绑定IP段(start:起始IP end:
ip object
"2.2.2.2"} 结束IP)
mac string ee-ee-ee-ee-ee-ee 用户绑定mac地址
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "多个用户的详细信息"
}
注:返回结果格式与单个用户数据格式一致,见用户详细信息
扩展支持的搜索用户属性:
{
"custom_cfg": {
"attr1": "value1"
},
"expire": {
"start": "2018-05-01",
"end": "2018-05-16"
},
"user_status": "all",
"public": true,
"father_path":"/"
}
扩展字段描述:
字段名 类型 必填 描述
custom_cfg object false 自定义属性的键值对(不支持同时搜索多个自定义属性)
账号过期时间(start:起始时间 end:结束时间 start和end成对出现,组成
expire object false
时间段)
用户状态(共有3种,all:启用和禁用 enabled:启用 disabled:禁用,默认
user_status string false
为"all")
public boolean false true:搜索过滤出允许多人同时使用的帐号,默认为false
father_path boolean false 指定搜索father_path组中的用户,默认为"/"
2.4 修改用户信息
请求地址: http://acip:9999/v1/user?_method=PUT
功能: 修改已存在的某个用户信息,可同时修改多个用户属性
方法: POST
请求时携带的数据:
{
"name": "hello",
"data": {
"desc": "",
"expire_time": "2018-01-10 00:00:00",
"extend": {
"father_path": "/hello/world",
...
}
}
}
操作字段描述:
字段名 类型 必填 描述
name string true 要修改的用户名
data object false 需要修改的用户相关信息
支持修改的用户属性:
注: 本接口亦支持2.1的所有扩展用户属性
字段名 类型 必填 描述
desc string false 用户描述
账号过期时间(永不过期:不定义expire_time字段或expire_time为空
expire_time string false
字符串 有过期时间:expire_time为具体日期("年-月-日 时:分:秒")
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Modify user success!"
}
扩展支持的用户属性:
{
"father_path": "/hello/world",
"show_name": "show_name"
}
扩展字段描述:
字段名 类型 必填 描述
father_path string false 父组
show_name string false 显示名
2.5 获取用户详细信息
请求地址: http://acip:9999/v1/user?name=NAME
功能: 获取某个用户详细信息
方法: GET
操作字段描述:
字段名 类型 必填 描述
name string true 用户名
成功返回:
{
"code": 0,
"message": "Successfully",
"data": [
{
"enable": true,
"bind_cfg": [
"8.8.8.8",
"200.200.0.1"
],
"policy": [
{
"founder": "admin",
"type": "用户限额",
"status": true,
"name": "policy1",
"expire": "永不过期"
}
],
"self_pass": {
"enable": true,
"modify_once": false
},
"custom_cfg": [
{
"name": "attr1",
"value": "value1"
}
],
"create": "管理员创建",
"create_flag": false,
"desc": "",
"logout": false,
"limit_ipmac": {
"enable": true,
"ipmac": [
"3.3.3.3",
"9.9.9.9"
]
},
"common_user": {
"enable": true,
"allow_change": true
},
"father_path": "/",
"expire_time": {
"enable": false
},
"name": "22",
"show_name": ""
}
]
}
返回字段描述:
字段名 类型 必填 描述
enable boolean true 用户是否启用
string
bind_cfg true 用户IP,MAC绑定信息
array
object 用户关联的策略(具体到单条策略,name:策略名 status:策略是否启用
policy true
array type:策略类型 founder:策略创建者 expire:策略过期时间)
self_pass object true enable:用户是否启用密码 modify_once:初次认证是否修改秘密
object
custom_cfg true 用户自定义属性(具体到单条属性,name:属性名 value:属性值)
array
create string true 用户创建者
create_flag boolean true 用户是否由认证或者自动同步添加的
desc string true 用户描述信息
name string true 用户名
show_name string true 用户显示名
logout boolean true 密码认证成功后是否弹出注销窗口
用户限制登录信息(enable:是否开启限制登录 ipmac:具体的IP,MAC登
limit_ipmac object true
录限制)
enable:是否允许多人同时使用该账号登录 allow_change:是否允许修
common_user object true
改本地密码
father_path string true 用户所在组
enable:是否设置了用户过期时间 date:用户过期时间,只有在enable
expire_time object true
为true时才有值
2.6 用户关联上网策略
请求地址: http://acip:9999/v1/user/netpolicy
功能: 可对指定的用户,修改,添加或删除策略信息
方法: POST
请求时携带的数据:
{
"opr": "add",
"user": "hello",
"policy": [
"policy1",
"policy2"
]
}
操作字段描述:
字段
类型 必填 描述
名
操作字段(add:在原有策略上增加 del:在原有策略上删除 modify:将策略设置为
opr string true
policy字段所指定的,会清除原有策略)
user string true 需要修改策略的用户
string
policy true 策略名(可通过3.1接口获取)
array
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Modify user policy success!"
}
2.7 获取用户上网策略
请求地址: http://acip:9999/v1/user/netpolicy?user=NAME
字段名 类型 必填 描述
user string true 用户名
功能: 获取某个用户关联的策略
方法: GET
成功返回:
{
"code": 0,
"message": "Successfully",
"data": [
"policy1",
"policy2"
]
}
返回字段说明：
字段名 类型 描述
data string array 策略名数组
2.8 用户关联流控策略
请求地址: http://acip:9999/v1/user/fluxpolicy
功能: 可对指定的用户,修改,添加或删除策略信息
方法: POST
请求时携带的数据:
{
"opr": "add",
"user": "hello",
"policy": [
"policy1",
"policy2"
]
}
操作字段描述:
字段
类型 必填 描述
名
操作字段(add:在原有策略上增加 del:在原有策略上删除 modify:将策略设置为
opr string true
policy字段所指定的,会清除原有策略)
user string true 需要修改策略的用户
string
policy true 策略名(可通过5.1接口获取)
array
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Modify user fluxpolicy success!"
}
2.9 获取用户流控策略
请求地址: http://acip:9999/v1/user/netpolicy?user=NAME
字段名 类型 必填 描述
user string true 用户名
功能: 获取某个用户关联的策略
方法: GET
成功返回:
{
"code": 0,
"message": "Successfully",
"data": [
"policy1",
"policy2"
]
}
返回字段说明：
字段名 类型 描述
data string array 策略名数组
2.10 验证用户密码
请求地址: http://acip:9999/v1/user?_method=verify&name=NAME&password=PASSWORD
参数 必选 描述
_method true 固定为verify
name true 用户名
password true 密码
功能: 验证本地用户名密码
方法: GET
成功返回:
{
"code": 0,
"message": "Success",
"data": []
}
2.11 添加组
请求地址: http://acip:9999/v1/group
功能: 添加组,可同时设置组描述信息
方法: POST 请求时携带的数据:
{
"path": "/hello/world",
"desc": "description"
}
操作字段描述:
字段
类型 必填 描述
名
要添加的组路径,最多支持15层级目录创建(以"/"开头,且不支持向域用户组添加
path string true
组)
desc string false 组描述
成功返回:
{
"code": 0,
"message": "Successfully",
"data": "Add group success!"
}
2.12 删除组
请求地址: http://acip:9999/v1/group?_method=DELETE