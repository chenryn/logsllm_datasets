no. of false pos.
no. of false pos. + no. of true neg.
3. Eﬃciency: is the proportion of the reported scanners
by the detector that are true positive:
Eﬃciency =
no. of true pos.
no. of true pos. + no. of false pos.
For any intrusion detector, if the number of true negative
samples is signiﬁcantly larger than the number of true posi-
tive samples, the FP rate is expected to be small, regardless
of the detector performance, and therefore calculating the
eﬃciency (or the false discovery rate which is 1−eﬃciency)
is a more meaningful performance metric than the FP rate.
Similarly, if the number of true positive samples is signiﬁ-
cantly larger than the number of true negative samples, the
TP rate is expected to be large, regardless of the detector
performance, and thus calculating the false omission rate
(i.e., no. of false negatives/(no. of false negatives + no. of
true negatives)) is a more meaningful performance metric
than TP rate. Based on the datasets studied in the litera-
ture (e.g., [3]) and our datasets, network scanning activity
is often of the former case.
Table 3 shows the distribution of TRW and LQS detected
scanners among the categories of our reference baseline. TRW
detected 416 and 105 scanners, whereas LQS detected 480
and 583 scanners in the ﬁrst and second datasets respec-
tively. None of the remotes in the benign or likely benign
111
Performance
Metrics
Dataset I
Dataset II
TRW LQS
TRW LQS
RB1
RB2
TP rate
FP rate
Eﬃciency
TP rate
FP rate
Eﬃciency
0.7143
0.0002
0.9976
0.9227
0.0002
0.9971
0.8227
0.0003
0.9958
0.9787
0.0003
0.9946
0.1302
0.0002
0.9524
0.3092
0.0002
0.9495
0.7552
0.0001
0.9949
0.8947
0.0001
0.9891
Table 4: Performance evaluation.
categories were marked by any of the algorithms as a scan-
ner. Also, remotes that made only one failed connection
attempt were not ﬂagged as a scanner since both algorithms
require more than one connection attempt for any given re-
mote host. False positives in both algorithms appeared only
in the unknown (others) category of the reference baseline.
Table 4 shows the performance of both algorithms accord-
ing to the metrics discussed above as follows:
i) RB1: remote hosts in both the scanner and the likely
scanner categories are true positives and the remainder
are true negatives (i.e., the benign, likely benign, and
unknown categories); and
ii) RB2: true positives are only those in the scanner cat-
egory and true negatives are those in the benign, likely
benign, and unknown categories (this is a more relaxed
reference baseline where detected scanners from the likely
scanner category are ignored; note that the likely scan-
ner category is not added, neither to the true positives
nor to the true negatives).
Dataset I and RB1. LQS demonstrated a better TP rate
than TRW by more than 15%. As expected, the FP rate in
both algorithms is very low because of the signiﬁcantly large
number of samples relative to the number of true positives.
The detection eﬃciency is high in both algorithms (less than
1% of detected scanners are false positives).
Dataset 1 and RB2. TP rate is improved in both algo-
rithms where LQS is better by only 6%. The eﬃciency is
also high in both algorithms. Therefore, both algorithms
achieved good performance in detecting the entries in the
scanner category which represents remotes that signiﬁcantly
exhibit scanning rather than normal behaviour (as discussed
in Section 2.2).
Dataset 2 and RB1. TRW detected 13% of scanners in
the second dataset. In contrast, LQS has a detection rate of
76% while maintaining a slightly smaller (better) FP rate,
and eﬃciency better than TRW by approximately 5%.
Dataset 2 and RB2. Even with RB2, the TRW detection
rate (TP rate) is only 31%. LQS performed better both in
detection rate (90%) and eﬃciency (0.99 vs. 0.95).
In the second dataset, many scanners initiated few con-
nection attempts and had a low scanning rate, which con-
tributed to the poor performance of TRW. This reﬂects the
current trend of stealthy probing by scanners (e.g., as noted
by Allman et al. [3]), perhaps due to the large number of
IP addresses (e.g., infected hosts) involved in some coordi-
nated scanning campaigns. For example, rather than the
conventional aggressive scanning behaviour of many typical
worms, stealthy scanning activity is now more common (e.g.,
by stealthy worms and bots [14, 15]).
6. RELATED WORK
Network Security Monitor (NSM) IDS [7] examines the
destination IP addresses contacted by a remote host, where
the remote is considered anomalous once it contacts more
than 15 local hosts within an unspeciﬁed time window, or
when the remote attempts a connection to a non-existing
host. The scan detection scheme in GrIDS [23] is another
early approach that graphically shows remotes’ activities
and connectivity over time where a graph of one remote
contacting many local hosts could indicate a possible scan
activity. Kato et al. [11] proposed a real-time IDS for de-
tecting network attacks. They set a threshold of the num-
ber of TCP ACK/RST packets returned to the same remote
within a speciﬁed time window after which the remote host
is labeled as a scanner.
A probabilistic model used by Leckie and Kotagiri [13]
considers both the number of local hosts or ports accessed
by a remote, and how unusual these accesses are. The model
gives a connectivity probability for each local host and each
port to rate the likelihood of a given remote being benign or
scanner. This approach requires suﬃcient knowledge of the
monitored network and dynamic updates of the hosts/ports
probabilities according to the network changes. Spice [22]
is a port scan detector designed for stealthy scans using a
statistical model such that packets sent to rarely accessed IP
address/port combinations are considered more anomalous,
and thus have a higher probability to exceed an adjustable
anomaly score threshold where an alert is generated.
The system introduced by Robertson et al. [18] gives each
remote host a score based on the number of unique destina-
tion IP/port pairs of failed connection attempts such that a
remote host is classiﬁed as a scanner if its score is greater
than an empirically derived alert threshold. Using a statis-
tical model, Kim et al. [12] calculate a normal distribution
of destination IP addresses/port pair in a network and then
use various statistical tests to analyze traﬃc rates to detect
port scans.
A scan detection preprocessor plug-in called sfPortscan [19]
in Snort [20] generates an alert when a remote host attempts
to connect to more than a predeﬁned threshold of local hosts
(four IP addresses is the default threshold) or to more than
a predeﬁned threshold of ports (19 is the default) within a
predeﬁned time window (one minute is the default). This
method is similar to the tools developed by Fullmer et al. [5]
and Navarro et al. [17]. However, by not exceeding the prob-
ing threshold within the speciﬁed time window, an adversary
can easily evade detection.
TRW [9] is implemented as a Bro policy such that scan-
ners’ traﬃc can be dropped by setting the appropriate inter-
face between Bro and the corresponding network router. A
simpliﬁed variant of TRW that required less memory foot-
print and can detect vertical scanning is proposed by Weaver
et al. [24]. The authors also proposed a suppression algo-
rithm for worm containment with dynamically adjustable
thresholds (see Section 4 for additional related work on us-
ing TRW for worm detection). A similar modiﬁcation [16]
considered vertical scanning and extended TRW to detect
UDP and ICMP scans. A Bloom ﬁlter is used to ﬁlter the
input to TRW so that only unique source and destination
IP addresses, destination port, and protocol are processed
by TRW. The TRW time window of keeping the state of re-
mote hosts’ connection attempts is also increased to detect
stealthy scanners.
112
7. CONCLUDING REMARKS
Network scanning remains a useful reconnaissance activ-
ity by attackers. Given the high ability of compromised
machines in today’s Internet, scanning which is highly dis-
tributed speciﬁcally in order to achieve stealthiness [6] is
now recognized as a feasible and practical strategy to avoid
triggering IDSs. Also, post-detection responses to network
scanning often require fast and accurate detection.
LQS speciﬁcally addresses these issues, as a real-time net-
work scanning detector that detects stealthy scanners quickly,
while achieving high detection rates and very low false pos-
itive rates in comparison to the TRW algorithm. Moreover,
LQS requires a smaller memory footprint and has a higher
immunity to evasion. We also presented a novel method-
ology to obtain an estimated ground truth for evaluating
network scanning detectors.
8. ACKNOWLEDGMENT
We thank J. Jung, anonymous reviewers, and members
of the Carleton Computer Security Lab (CCSL) for helpful
comments. The second author is Canada Research Chair in
Authentication and Computer Security and acknowledges
NSERC for funding the chair, and a Discovery Grant. Par-
tial funding from NSERC ISSNet is also acknowledged.
9. REFERENCES
[1] Bro intrusion detection system. Accessed: May 2010.
http://bro-ids.org/.
[2] Ethereal display ﬁlter reference. Accessed: Aug 2010.
http://www.ethereal.com/docs/dfref/.
[3] M. Allman, V. Paxson, and J. Terrell. A brief history
of scanning. In Proceedings of the 7th ACM
SIGCOMM Conference on Internet Measurement,
pages 77–82, 2007.
[4] CERT. Advanced scanning. CERT Incident Note
IN-98.04 (Sept. 29 1998). http:
//www.cert.org/incident_notes/IN-98.04.html.
[5] M. Fullmer and S. Romig. The OSU Flow-tools
package and Cisco Netﬂow logs. In Proceedings of the
14th Systems Administration Conference (LISA’00),
pages 291–303, New Orleans, LA, USA, 2000.
USENIX Association.
[6] C. Gates. Coordinated scan detection. In Proceedings
of the 16th Annual Network and Distributed System
Security Symposium (NDSS’09), February 2009.
[7] L. T. Heberlein, G. V. Dias, K. N. Levitt,
B. Mukherjee, J. Wood, and D. Wolber. A network
security monitor. IEEE Symposium on Security and
Privacy, pages 296 – 304, 1990.
[8] J. Jung, R. A. Milito, and V. Paxson. On the adaptive
real-time detection of fast-propagating network
worms. In Proceedings of the 4th International
Conference on Detection of Intrusions and Malware,
and Vulnerability Assessment (DIMVA’07), pages
175–192, Lucerne, Switzerland, 2007. Springer-Verlag.
[9] J. Jung, V. Paxson, A. W. Berger, and
H. Balakrishnan. Fast portscan detection using
sequential hypothesis testing. In IEEE Symposium on
Security and Privacy, May 2004.
Proceedings of the Fourth GI International Conference
on Detection of Intrusions and Malware, and
Vulnerability Assessment (DIMVA’07), Lucerne,
Switzerland, July 2007.
[11] N. Kato, H. Nitou, K. Ohta, G. Mansﬁeld, and
Y. Nemoto. A real-time intrusion detection system
(IDS) for large scale networks and its evaluations.
IEICE Transactions on Communications,
E82-B(11):1817–1825, 1999.
[12] H. Kim, S. Kim, M. A. Kouritzin, and W. Sun.
Detecting network portscans through anomaly
detection. In Proceedings of Signal Processing, Sensor
Fusion, and Target Recognition XIII, pages 254 – 263,
2004.
[13] C. Leckie and R. Kotagiri. A probabilistic approach to
detecting network scans. In Proceedings of the Eighth
IEEE Network Operations and Management
Symposium (NOMS’02), pages 359–372, 2002.
[14] Z. Li, A. Goyal, and Y. Chen. Honeynet-based botnet
scan traﬃc analysis. In Botnet Detection, pages 25–44.
Springer US, 2008.
[15] Z. Li, A. Goyal, Y. Chen, and V. Paxson. Automating
analysis of large-scale botnet probing events. In
ASIACCS, pages 11–22, 2009.
[16] V. Nagaonkar. Detecting stealthy scans and scanning
patterns using threshold random walk. Master’s
thesis, Dalhousie University, Canada, 2008.
[17] J.-P. Navarro, B. Nickless, and L. Winkler. Combining
Cisco netﬂow exports with relational database
technology for usage statistics, intrusion detection,
and network forensics. In the 14th Systems
Administration Conference (LISA’00), pages 285–290.
USENIX Association, 2000.
[18] S. Robertson, E. V. Siegel, M. Miller, and S. J. Stolfo.
Surveillance detection in high bandwidth
environments. In Proceedings of the DARPA DISCEX
III Conference, pages 130–139. IEEE, April 2003.
[19] D. Roelker, M. Norton, and J. Hewlett. sfPortscan.
Sept. 2004.
[20] M. Roesch. Snort: lightweight intrusion detection for
networks. In Proceedings of the 13th Systems
Administration Conference (LISA’99), pages 229 –
238, Seattle, WA, USA, 1999. Usenix Association.
[21] S. E. Schechter, J. Jung, and A. W. Berger. Fast
detection of scanning worm infections. In Proceedings
of the 7th International Symposium on Recent
Advances in Intrusion Detection, pages 59–81, 2004.
[22] S. Staniford, J. A. Hoagland, and J. M. McAlerney.
Practical automated detection of stealthy portscans.
Journal of Computer Security, 10(1/2):105–136, 2002.
[23] S. Staniford-Chen, S. Cheung, R. Crawford, M. Dilger,
J. Frank, J. Hoagl, K. Levitt, C. Wee, R. Yip, and
D. Zerkle. GrIDS - a graph based intrusion detection
system for large networks. In Proceedings of the 19th
NISSC, pages 361–370, 1996.
[24] N. Weaver, S. Staniford, and V. Paxson. Very fast
containment of scanning worms, revisited. Malware
Detection (Advances in Information Security),
27:113–145, 2007.
[25] D. Whyte, P. C. van Oorschot, and E. Kranakis.
[10] M. G. Kang, J. Caballero, and D. Song. Distributed
evasive scan techniques and countermeasures. In
Tracking darkports for network defense. In Proceedings
of ACSAC, pages 161–171, 2007.
113