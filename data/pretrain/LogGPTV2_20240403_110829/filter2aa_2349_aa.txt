!
!
 Taie-Bugbounty-killer是什什么意思? 
主要⽬目标是分享⼀一些更更快速的刷SRC赏⾦金金的⾃自动化挖洞洞技巧命令和⼯工具协同。使⽤用⾥里里⾯面的⽅方法，我们能
够快速批量量找到可以被利利⽤用的⼦子域、api令牌和其它敏敏感漏漏洞洞。
摘要
之前许诺给⼤大家的⾃自动化赏⾦金金挖洞洞技巧，现在来了了，我不不知道你们现在的挖洞洞⽅方式是什什么？我现在的挖
洞洞⽅方式是能⽤用⽼老老外的⼀一条命令⾃自动化或者整合⾃自动化我就不不⼿手动挨个去信息收集可以挖掘。希望这个系
列列可以给你们提供⼀一些不不⼀一样的挖洞洞思路路技巧。
1. ⼼心脏滴⾎血漏漏洞洞
By: @imranparray101
Source: link
下⾯面是⼀一个有⽤用的⼀一⾏行行命令来检查主机名列列表中是否存在OpenSSL Heartbleed漏漏洞洞:
请注意， Heartbleed （CVE-2014-0160）会导致服务器器内存内容泄漏漏和敏敏感信息泄漏漏。
2. 使⽤用grep提取urls
By: @imranparray101
Source: link
grep '-Eo' 参数将只打印匹配的⾏行行。这将使每个URL在⼀一⾏行行中逐⼀一打印出来：
cat list.txt | while read line ; do echo "QUIT" | openssl s_client -connect 
$line:443 2>&1 | grep 'server extension "heartbeat" (id=15)' || echo $line: 
safe; done
cat file | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"*
curl http://host.xx/file.js | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"*
验室制作翻译出品
3. 从APK中提取敏敏感信息
By: @MrR0Y4L3
Source: link
以下是从未打包的APK⽂文件（Android应⽤用程序）中提取有趣（潜在敏敏感）信息的提示：:
通过这⼀一⾏行行程序，我们可以识别url、API密钥、身份验证令牌、凭证、证书锁定代码等等。
请确保⾸首先使⽤用如下apktool解压缩APK⽂文件:
4. 远程解压缩zip⽂文件
By @el_vampinio
Source: link
你是否发现⼀一个可以在远程web服务器器上访问的⾮非常⼤大的zip⽂文件，并希望检查其内容，但您不不想等待下
载它？⽤用它没⽑毛病..
grep -EHirn 
"accesskey|admin|aes|api_key|apikey|checkClientTrusted|crypt|http:|https:|passw
ord|pinning|secret|SHA256|SharedPreferences|superuser|token|X509TrustManager|in
sert into" APKfolder/
apktool d app_name.apk
验室制作翻译出品
Note that for this to work, the remote web server hosting the zip file has to support the range 
HTTP header.
5. Top 25 开放重定向的dorks
By @lutfumertceylan
Source: link
下⾯面是25个最容易易发现开放重定向漏漏洞洞（"未验证的重定向和转发"）：
当URL参数（payload）在服务器器端没有得到正确的验证，导致⽤用户被重定向到⼀一个任意⽹网站时，⽹网站就
会受到Open Redirect的攻击。
虽然这对⽤用户没有任何重⼤大的威胁，但这个漏漏洞洞让⽹网络钓⻥鱼变得更更加容易易。
6. JWT token 绕过
pip install remotezip
# 列列出远程zip⽂文件的内容
remotezip -l "http://site/bigfile.zip"
# 从远程zip⽂文件解压出file.txt
remotezip "http://site/bigfile.zip" "file.txt"
/{payload}
?next={payload}
?url={payload}
?target={payload}
?rurl={payload}
?dest={payload}
?destination={payload}
?redir={payload}
?redirect_uri={payload}
?redirect_url={payload}
?redirect={payload}
/redirect/{payload}
/cgi-bin/redirect.cgi?{payload}
/out/{payload}
/out?{payload}
?view={payload}
/login?to={payload}
?image_url={payload}
?go={payload}
?return={payload}
?returnTo={payload}
?return_to={payload}
?checkout_url={payload}
?continue={payload}
?return_path={payload}
验室制作翻译出品
6. JWT token 绕过
By @HackerHumble
Source: link1, link2, link3
这⾥里里有3个绕过JWT令牌身份验证的技巧。
Tip #1:
1. 捕获 JWT.
2. 修改algorithm为None.
3. 在正⽂文中⽤用任何你想要的内容改变原本的内容，如.: email: PI:EMAIL
4. 使⽤用修改后的令牌发送请求并检查结果。
Tip #2:
1. 捕获 JWT token.
2. 如果算法是RS256，就改成HS256，然后⽤用公钥签名（你可以通过访问jwks Uri来获得，⼤大多数情
况下是⽹网站https证书的公钥）。
3. 使⽤用修改后的令牌发送请求并检查响应。
4. 如果后端没有算法检查，你可以奥⼒力力给交洞洞了了
Tip #3:  检查服务器器端会话终⽌止是否正确 (OTG-SESS-006):
1. 检查应⽤用程序是否使⽤用JWT令牌进⾏行行认证。
2. 如果是，登录到应⽤用程序并捕获令牌。(⼤大多数⽹网络应⽤用都会将令牌存储在浏览器器的本地存储中)
3. 现在注销应⽤用程序。
4. 现在⽤用之前捕获的令牌向权限接⼝口发出请求。
5. 有时，请求会成功，因为Web应⽤用程序只是从浏览器器中删除令牌，⽽而不不会在后端将令牌列列⼊入⿊黑名
单。
7. ⼦子域名发现
By @TobiunddasMoe
Source: link
下⾯面是⼀一个快速和基本的侦察程序:
为了了实现这⼀一点，我们必须安装⼀一些额外的⼯工具:
#!/bin/bash
# $1 => example.domain
amass enum --passive -d $1 -o domains_$1
assetfinder --subs-only $1 | tee -a domains_$1
subfinder -d $1 -o domains_subfinder_$1
cat domains_subfinder_$1 | tee -a domains_$1
sort -u domains_$1 -o domains_$1
cat domains_$1 | filter-resolved | tee -a domains_$1.txt
验室制作翻译出品
https://github.com/OWASP/Amass
https://github.com/tomnomnom/assetfinder
https://github.com/projectdiscovery/subfinder
https://github.com/tomnomnom/hacks/tree/master/filter-resolved
8. Curl + parallel one-liner
By @akita_zen
Source: link
这⾥里里有⼀一个超级有⽤用的信息收集⼀一⾏行行命令，可以快速验证主机名和⼦子域的列列表:
这⼀一⾏行行程序将并⾏行行⽣生成50个curl实例例，并以漂亮的⽅方式显示每个主机的HTTP状态代码和响应⼤大⼩小（以字
节为单位）:
请先安装下⾯面的⼯工具:
9. 简易易xss漏漏洞洞检测
By @TobiunddasMoe
Source: link
查看这个shell脚本，使⽤用多个开源⼯工具串串联起来识别XSS（跨站脚本）漏漏洞洞。:
cat alive-subdomains.txt | parallel -j50 -q curl -w 'Status:%{http_code}\t  
Size:%{size_download}\t %{url_effective}\n' -o /dev/null -sk
apt-get -y install parallel
验室制作翻译出品
这是另⼀一个需要安装多个附加⼯工具的组合:
https://github.com/projectdiscovery/subfinder
https://github.com/OWASP/Amass
https://github.com/tomnomnom/hacks/tree/master/filter-resolved
https://github.com/tomnomnom/httprobe
https://github.com/tomnomnom/waybackurls
https://github.com/tomnomnom/hacks/tree/master/kxss
10. 在Burp Suite过滤垃圾的包
By @sw33tLie
Source: link
在使⽤用Burp Suite进⾏行行测试时，您可能希望将这些模式添加到Burp Suite>Proxy>Options>TLS Pass 
Through settings中:
#!/bin/bash
# $1 => example.domain
subfinder -d $1 -o domains_subfinder_$1
amass enum --passive -d $1 -o domains_$1
cat domains_subfinder_$1 | tee -a domain_$1
cat domains_$1 | filter-resolved | tee -a domains_$1.txt
cat domains_$1.txt | ~/go/bin/httprobe -p http:81 -p http:8080 -p https:8443 | 
waybackurls | kxss | tee xss.txt
.*\.google\.com
.*\.gstatic\.com
.*\.googleapis\.com
.*\.pki\.goog
.*\.mozilla\..*
验室制作翻译出品
注册 URI
CMS 平台
/register
Laravel
/user/register
Drupal
/wp-login.php?action=register
WordPress
/register
eZ Publish
现在，所有连接到这些主机的底层连接将直接绕过他们，⽽而不不通过代理理。
在我们的代理理⽇日志中没有更更多的垃圾包!
11.使⽤用 SecurityTrails API发现⼦子域名
By @IfrahIman_
Source: link
请注意，要使其正常⼯工作，我们需要⼀一个SecurityTrails API密钥。我们可以得到⼀一个免费帐户，每⽉月提
供50个API查询。
12. 访问隐藏的注册⻚页
By @thibeault_chenu
Source: link
有时候，开发者认为隐藏⼀一个按钮就够了了。试着访问以下注册URI。
我们很有可能注册⼀一个新⽤用户并访问web应⽤用程序的特权区域，或者⾄至少在其中找到⼀一个⽴立⾜足点。
13. Top 5 Google dorks语法
curl -s --request GET --url 
https://api.securitytrails.com/v1/domain/target.com/subdomains?apikey=API_KEY | 
jq '.subdomains[]' | sed 's/\"//g' >test.txt 2>/dev/null && sed 
"s/$/.target.com/" test.txt | sed 's/ //g' && rm test.txt
验室制作翻译出品
13. Top 5 Google dorks语法
By @JacksonHHax
Source: link
通过Google dorks在寻找开放⽬目录列列表、⽇日志⽂文件、私钥、电⼦子表格、数据库⽂文件和其他有趣的数据。
⼩小贴⼠士：当你在这⾥里里的时候，也可以看看⾕谷歌⿊黑客数据库(在exploit-db.com)，找到更更多的dorks!
14. 在Drupal上查找隐藏⻚页⾯面
By @adrien_jeanneau
Source: link
如果你在Drupal⽹网站上搜索，⽤用Burp Suite Intruder（或任何其他类似的⼯工具）对'/node/$'进⾏行行模糊处
理理，其中'$'是⼀一个数字（从1到500）。⽐比如说："/node/$"。
https://target.com/node/1
https://target.com/node/2
https://target.com/node/3
…
https://target.com/node/499
https://target.com/node/500
我们有可能会发现隐藏的⻚页⾯面（测试、开发），这些⻚页⾯面不不被搜索引擎引⽤用。
15. ⽤用gf查找敏敏感信息
By @dwisiswant0
Source: link