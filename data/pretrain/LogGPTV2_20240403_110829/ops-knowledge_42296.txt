User: How to setup SSH key authentication on Linux server?
Assistant: Through SSH key authentication, you can avoid the trouble of entering a password every time you log in, improving security and efficiency. Here are the steps to set up SSH key authentication on a Linux server: 1. Generate an SSH key Use the following command to generate an SSH key on your local machine: $ ssh-keygen -t rsa -b 4096 The -t parameter specifies the key type , you can use dsa, ecdsa, ed25519 or rsa, choose to use RSA key type here; -b parameter specifies the key length, choose 4092 bits here. The system will prompt you to enter key storage path, password and other information, you can choose according to your needs. 2. Upload the public key file to the server After generating the SSH key, you need to upload the public key file to the server. Use the following command to upload the public key file to the server: $ ssh-copy-id user@server_ip where user is the server username and server_ip is the server IP address. If you cannot use the ssh-copy-id command, you can manually copy the content of the public key file to the authorized_keys file on the server. Use the following command to open the authorized_keys file: $ nano ~/.ssh/authorized_keys Then copy the contents of the public key file to the end of the file, save and exit. 3. Configure SSH Modify the /etc/ssh/sshd_config configuration file and enable the PubkeyAuthentication and AuthorizedKeysFile options. Change the following two lines to: PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys Save and exit. 4. Restart the SSH service Use the following command to restart the SSH service to make the configuration file take effect: $ sudo service ssh restart or $ sudo systemctl restart sshd 5. Test connection Reopen a new SSH session window and enter the following command to connect to the server: $ ssh user @server_ip At this point, it should be possible to log in directly to the server without entering a password. That concludes the steps to setup SSH key authentication on a Linux server. Note that when generating the SSH key and uploading the public key file to the server, care should be taken to protect the security of the key file to avoid key leakage.