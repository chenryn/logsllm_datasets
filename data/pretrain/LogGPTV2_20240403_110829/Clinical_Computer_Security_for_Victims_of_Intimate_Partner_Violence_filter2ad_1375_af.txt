### References

1. **Mobile Devices, pages 3–14. ACM, 2015.**

2. **Jing Tian, Nolen Scaife, Deepak Kumar, Michael Bailey, Adam Bates, and Kevin Butler. SoK: “Plug & Pray” Today – Understanding USB Insecurity in Versions 1 through C. In 2018 IEEE Symposium on Security and Privacy (SP), pages 1032–1047. IEEE, 2018.**

3. **X. Ugarte-Pedrero, D. Balzarotti, I. Santos, and P. G. Bringas. SoK: Deep Packer Inspection: A Longitudinal Study of the Complexity of Run-Time Packers. In 2015 IEEE Symposium on Security and Privacy, pages 659–673, May 2015.**

4. **Zhaohui Wang and Angelos Stavrou. Exploiting Smartphone USB Connectivity for Fun and Profit. In Proceedings of the 26th Annual Computer Security Applications Conference, pages 357–366. ACM, 2010.**

5. **Thomas G. Weiser, Alex B. Haynes, Angela Lashoher, Gerald Dziekan, Daniel J. Boorman, William R. Berry, and Atul A. Gawande. Perspectives in Quality: Designing the WHO Surgical Safety Checklist. International Journal for Quality in Health Care, 22(5):365–370, 2010.**

6. **Delanie Woodlock. The Abuse of Technology in Domestic Violence and Stalking. Violence Against Women, 23(5):584–602, 2017.**

7. **Stevens Le Blond, Adina Uritesc, Cédric Gilbert, Zheng Leong Chua, Prateek Saxena, and Engin Kirda. A Look at Targeted Attacks Through the Lens of an NGO. In USENIX Security Symposium, pages 543–558, 2014.**

8. **William R. Marczak, John Scott-Railton, Morgan Marquis-Boire, and Vern Paxson. When Governments Hack Opponents: A Look at Actors and Technology. In USENIX Security Symposium, pages 511–525, 2014.**

9. **Tara Matthews, Kathleen O’Leary, Anna Turner, Manya Sleeper, Jill Palzkill Woelfer, Martin Shelton, Cori Manthorne, Elizabeth F. Churchill, and Sunny Consolvo. Stories from Survivors: Privacy & Security Practices When Coping with Intimate Partner Abuse. In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems, pages 2189–2201. ACM, 2017.**

10. **APA Work Group on Psychiatric Evaluation. Practice Guidelines for the Psychiatric Evaluation of Adults. The American Psychiatric Association, Third Edition, 2016.**

11. **Daniela Retelny, Sébastien Robaszkiewicz, Alexandra To, Walter S. Lasecki, Jay Patel, Negar Rahmati, Tulsee Doshi, Melissa Valentine, and Michael S. Bernstein. Expert Crowdsourcing with Flash Teams. In Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST ’14, pages 75–85, New York, NY, USA, 2014. ACM.**

12. **Deborah L. Rhode. Cultures of Commitment: Pro Bono for Lawyers and Law Students. Fordham L. Rev., 67:2415, 1998.**

13. **Carl R. Rogers. Significant Aspects of Client-Centered Therapy. American Psychologist, 1(10):415–422, 1946.**

14. **Sharon G. Smith, Kathleen C. Basile, Leah K. Gilbert, Melissa T. Merrick, Nimesh Patel, Margie Walling, and Anurag Jain. The National Intimate Partner and Sexual Violence Survey (NISVS): 2010-2012 State Report. 2017.**

15. **Peter Snyder, Periwinkle Doerfler, Chris Kanich, and Damon McCoy. Fifteen Minutes of Unwanted Fame: Detecting and Characterizing Doxing. In Proceedings of the 2017 Internet Measurement Conference, IMC ’17, pages 432–444, New York, NY, USA, 2017. ACM.**

16. **Cindy Southworth, Shawndell Dawson, Cynthia Fraser, and Sarah Tucker. A High-Tech Twist on Abuse: Technology, Intimate Partner Stalking, and Advocacy. Violence Against Women, 2005.**

17. **Cynthia Southworth, Jerry Finn, Shawndell Dawson, Cynthia Fraser, and Sarah Tucker. Intimate Partner Violence, Technology, and Stalking. Violence Against Women, 13(8):842–856, 2007.**

---

### ISDi: Detailed Overview

#### How ISDi Works

ISDi utilizes the `libimobiledevice` tool for iOS and the Android Debug Bridge (ADB) for Android to programmatically access connected devices. For Android, the device must be configured to allow USB debugging, which is done by enabling developer mode and revoking it after the scan.

When a scan is initiated, ISDi pairs with the connected device and queries it for a list of all installed apps, including those hidden from the app drawer on Android. ISDi also retrieves the OS version, hardware model, and manufacturer. It performs heuristic checks to infer if the device is jailbroken (iOS) or rooted (Android).

ISDi displays the results of these checks via its user interface (UI), along with a list of all installed apps, prioritizing potentially dangerous ones. Each app's threat score is computed using several heuristics.

#### Heuristics and Blacklists

1. **Blacklist Creation:**
   - We created a blacklist of potential IPV spyware and dual-use apps based on techniques from Chatterjee et al. [8]. We re-ran their measurements and added the results to the blacklist.
   - We used a machine learning classifier to remove obviously irrelevant apps but did not manually prune the list further to reduce false positives, as consultants can handle these during consultations.
   - Our current blacklist contains over 500 iOS and 5,000 Android apps.

2. **Regular Expressions:**
   - App names are checked against regular expressions for substrings such as "spy" or "track."

3. **Off-Store Apps:**
   - On Android, ISDi checks whether any apps were installed outside of the Play Store.

#### Threat Score Calculation

Each app is assigned a threat score based on the following heuristics:

- **Overt Spyware Blacklist:** Weight = 1.0
- **Dual-Use Blacklist:** Weight = 0.8
- **Off-Store App:** Weight = 0.8
- **Regex Match:** Weight = 0.3
- **System App:** Weight = -0.1

The score is the sum of the weights for the heuristics that apply to the app. A higher score indicates a higher potential risk.

#### App Information and Actions

Clicking on an app name in ISDi’s UI provides more information, including:
- Installation date (Android only)
- Developer description
- Requested permissions
- Last time permissions were invoked (Android only)

ISDi can also uninstall apps via its interface, which is particularly useful for hidden apps on Android.

#### Data Collection and Storage

ISDi collects the following information for each app:
- App ID
- Permissions
- Installation date (Android only)
- Package files (Android only)

It generates and stores a keyed cryptographic hash of the device’s serial number to identify repeat scans without storing the device identifier. Collected data is linked to a random client identifier. This allows for follow-up examinations of suspicious apps and ensures that newly discovered spyware is retroactively scanned.

#### Detection Accuracy

While ISDi lists all apps, a dangerous app not flagged by one of the four heuristics (excluding the system app heuristic) is considered a false negative. The accuracy of ISDi depends on labor-intensive web crawling and manual pruning. Our blacklist includes 2,474 seed apps from Chatterjee et al. [8] and 3,263 new apps from our periodic crawls since May 2018, filtered using the ML classifier from [8].

Most overt spyware and dual-use apps do not try to hide their presence, but some may use innocuous-looking app IDs. ISDi is designed to detect these, but frequent changes in app IDs can evade detection. We have added all known changed app IDs to our blacklist.

#### Jailbroken/Rooted Device Detection

ISDi uses heuristics to determine if a device is jailbroken (iOS) or rooted (Android). If any heuristic returns positive, ISDi considers the device to be jailbroken or rooted. Common heuristics include checking for the presence of jailbreak/rooting applications and the installation of the `su` tool on Android. On iOS, ISDi attempts to mount the filesystem at the root directory.

#### Security Considerations

We have considered that spyware might attempt to use the USB connection to ISDi as an attack vector. However, we are not aware of any overt spyware that misuses USB connections. All commands used by ISDi to communicate with devices are run with least privilege (without `sudo`).

---

### Figure 5: The Current Version of the Technology Assessment Questionnaire (TAQ)

[Insert Figure 5 here]

---

This revised text aims to provide a clear, coherent, and professional overview of ISDi and its functionalities, along with the relevant references.