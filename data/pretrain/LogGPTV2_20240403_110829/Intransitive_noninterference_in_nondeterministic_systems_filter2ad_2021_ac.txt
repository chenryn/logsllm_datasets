### 优化后的文本

#### 3.6 不可传递非干扰

在讨论不可传递策略的语义之前，我们需要一些背景知识。这个问题主要在确定性系统中得到了研究。

**不可传递策略的主要动机** 是为了表示系统架构设计中的可信组件的作用。一个典型的例子是降级器（downgrader），这是一种可信组件，用于管理从高安全级别到低安全级别的信息降密。对于这样的系统，其策略可以表示为 HDL = {H, D, L}^2 \ {(H, L)}，如图5所示。其中，D 表示一个可信的降级器组件。

即使在确定性系统中，传统的非干扰（NI）定义也不足以确保这类不可传递策略的安全性，因为它意味着低级别域 L 无法获取任何关于高级别 H 的活动信息（即使降级器允许）。为了提供更合适的语义，Haigh 和 Young [10] 将清除函数的定义推广到了不可传递策略；我们采用了 Rushby [21] 的公式化方法。直观上，相对于某个域 u 的不可传递清除是指该序列中能够形成影响链（由策略允许）并最终影响到域 u 的最大子序列。更形式化地，这个定义使用了一个函数 src : U × A* → P(U)，通过归纳法定义如下：
- srcu(ε) = {u}
- srcu(aα) = srcu(α) ∪ { dom(a) | ∃v ∈ srcu(α) (dom(a) → v) }

其中 a ∈ A 和 α ∈ A*。直观上，srcu(α) 是所有可以通过许可的干扰从 v 到 u 的域 v 的集合。然后，每个域 u ∈ U 的不可传递清除函数 ipu : A* → A* 通过归纳法定义如下：
- ipu(ε) = ε
- ipu(aα) =
  - a · ipu(α) 如果 dom(a) ∈ srcu(aα)
  - ipu(α) 否则

Haigh 和 Young 定义的安全性使用了不可传递清除函数来代替 Goguen 和 Meseguer 的清除函数。使用我们的相对信息公式，等价的定义如下：

**定义7**：如果一个确定性机器 M 对于某个（可能是不可传递的）策略 → 满足以下条件，则称其为 IP-安全的：对于所有 u ∈ U，在 R(M) 中，函数 obsu ◦ last 包含的信息不超过 ipu ◦ Act 关于 Act 的信息。

与 NI 类似，等价的表述是对于所有 u ∈ U，在 R(M) 中，函数 viewu 包含的信息不超过 ipu ◦ Act 关于 Act 的信息。可以看到，当 → 是可传递的时候，ipu = purgeu，因此 IP-安全性实际上是可传递策略安全性的推广。

van der Meyden [24] 认为 IP-安全性忽略了一些与事件顺序相关的微妙信息流。一个简单的例子（来自 [25]）说明了这个问题：存在一个针对策略 H → D → L 的 IP-安全系统，其中 H、D、L 分别对应动作 h、d、l。在这个系统中，L 在执行动作序列 hld 和 lhd 后会做出不同的观察。由于 ipL(hld) = hld 和 ipL(lhd) = lhd 也是不同的，这并不违反 IP-安全性。然而，可以认为这样的系统并不安全。直观上，L 可以知道 h 动作是否在 l 动作之前发生。但是，系统模型是异步的，并且根据策略，L 只能通过 D 来了解 h 动作。由于 D 不能知道 l 动作，D 不能安全地告诉 L 动作 h 和 l 的顺序。

为了应对这种问题，van der Meyden 提出了另一种基于每个域 u 的 tau 函数的语义，该函数旨在捕获域 u 根据策略可能拥有的最大信息量。（tau 函数及其相关安全概念的名称缩写为“传输动作信息”。）该函数通过归纳法定义如下：
- tau(ε) = ε
- tau(αa) =
  - (tau(α), tadom(a)(α), a) 如果 dom(a) → u
  - tau(α) 否则

这个定义类似于全信息协议，即在执行动作 a 之后，域 dom(a) 会将其所知的所有信息（由 tadom(a)(α) 表示）以及它已经执行的动作 a 传送给所有允许接收信息的域 u。接收域 u 将这些新信息添加到其现有的信息 tau(α) 中。不允许发送信息的域在 a 发生时不会获得任何信息。基于此函数，我们可以定义一种安全性，用相对信息表述如下：

**定义8**：如果一个确定性机器 M 对于某个策略 → 满足以下条件，则称其为 TA-安全的：对于所有 u ∈ U，在 R(M) 中，函数 obsu ◦ last 包含的信息不超过 tau ◦ Act 关于 Act 的信息。

同样，等价的表述是对于所有 u ∈ U，在 R(M) 中，函数 viewu 包含的信息不超过 tau ◦ Act 关于 Act 的信息。这个定义在可传递策略的情况下等同于 NI。

### 4. 主要定义

我们现在可以给出新的定义，这些定义赋予了不可传递非干扰策略在非确定性机器中的意义。正如上面所述，本文的重点是定义对已执行动作的信息流进行约束。此外，我们进一步关注将 van der Meyden [24] 提出的 TA-安全性概念进行推广。

我们在确定性机器中将 TA-安全性描述为对于每个域 u，函数 obsu ◦ last 包含的信息不超过 tau ◦ Act 关于 Act 的信息，并指出在这种定义中使用 viewu 代替 obsu ◦ last 是等价的。然而，在非确定性系统中，基于观察的安全性定义可能过于弱，如第 3.3 节所示。这表明以下定义是适合非确定性系统的适当推广。

**定义9**：如果一个非确定性机器 M 对于某个策略 → 满足以下条件，则称其为 nTA-安全的：对于所有 u ∈ U，函数 viewu 包含的信息不超过 tau ◦ Act 关于 Act 的信息。

直观上，与确定性情况类似，这个定义在每个运行 r 中，对 action 序列 Act(r) 的信息量设定了一个上限，viewu(r) 中包含的信息不得超过 tau(Act(r)) 中的信息。根据命题 1，等价的表述是对于所有 α, β ∈ A*，如果 tau(α) = tau(β)，则 poss(viewu | Act = α) = poss(viewu | Act = β)。

如第 3.5 节所述，一个非确定性系统可能在约束单个域的信息流方面是安全的，但允许组之间的信息流。如果系统需要防止共谋攻击，那么我们需要一个更强的定义来考虑组的推断能力。一种方法是关注组在系统运行结束后共享其观察结果时所能知道的信息。我们称之为事后共谋。组 X ⊆ U 的信息状态可以用函数 <viewu>u∈X 表示。我们希望他们能够推断的信息不超过他们在运行结束后共享其最大允许信息（由 tau(Act(r)) 表示）所能推断的信息。这导致了以下定义。

**定义10**：如果一个非确定性机器 M 对于某个策略 → 满足以下条件，则称其为事后共谋 nTA-安全（PCnTA）：对于所有非空集 X ⊆ U，<viewu>u∈X 包含的信息不超过 <tau>u∈X ◦ Act 关于 Act 的信息。

根据命题 1，等价的表述是对于所有 X ⊆ U 和 α, β ∈ A*，如果 ∀u ∈ X (tau(α) = tau(β))，则 poss(<viewu>u∈X | Act = α) = poss(<viewu>u∈X | Act = β)。

在这种攻击模型适用的一种情况是多个代理提交计算任务给云服务器，并在计算完成后才接收输出。在更交互式的设置中，共谋组 X 可能在每一步都能共享信息，而不仅仅是在运行结束时。我们称之为运行时共谋。由于我们的系统模型是异步的，X 中的代理通常无法从 viewu(r) 推断出 X 中成员执行动作的线性顺序。然而，如果他们在每次执行动作时都能通信，那么在运行结束时他们的信息就是联合视图 viewX(r)，其中包含了 X 域内动作的顺序。这意味着基于 viewX 的推理代表了一种更强的攻击模型。以下定义试图说明系统在这种更强的攻击下具有韧性。

为了表述这一点，我们需要刻画组 X 在每一步共享信息时的最大允许信息。在之前的定义中，组在运行 r 中的最大允许信息由 X 中每个 u 的 tau(Act(r)) 表示。一般来说，这不足以推断 X 域内动作的顺序，而组可以从其联合视图 viewX(r) 中推断出这一顺序。这表明我们需要一个更强的最大允许信息的定义。这里我们采用的方法是，如果组无法被阻止通过系统外部的通道共享信息，那么在这种共谋情况下，其最大允许信息是由每一步计算中共享的最大允许信息表示的。这导致了以下定义。