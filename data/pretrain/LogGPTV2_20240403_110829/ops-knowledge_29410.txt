User: I need to be able to execute a .exe file in Python that has been renamed without the file extension (for example, let's say .joe - it doesn't represent anything that I know of).
Let's say I have "HelloWorld.exe", I then rename it to "HelloWorld.joe" and need to execute it.
Looking around, os.system is often used to execute .exe files, but I haven't been able to get it working without the .exe extension.
The file cannot be renamed to have the .exe extension (or for that matter anything), in this "scenario", I do not have access to the source code of the executable.
Assistant: I cannot imagine a valid reason to break Windows philosophy. Microsoft always said that on its system the file extension determined the type of file and its usage. There are already many cross platfomr programs, for example firefox in named firefox on Unix-like systems and firefox.exe on Windows system.
EDIT
That being said, Windows accepts what you give it as command, provided it is in a correct executable format. So if you create a program HelloWorld.exe and rename it HelloWorld.joe :

cmd.exe will start the program when you type HelloWorld.joe at the prompt (tested on Windows XP and Windows 7)
Python 2.7 and 3.4 should start it either using os.system or with the subprocess module (confirmed by  eryksun)

You cannot use os.system call with a badly named file (in Microsoft's sense) because under the hood, os.system uses cmd.exe. It is a Microsoft program that looks at the file extension to know what to do with it, and will never execute (as an exe) a file that do not have the exe extension.
You will not be able to use the subprocess module with shell=True for exactly the same reason. But when shell=False, it directly calls CreateProcess that accept any name as the name of a valid executable (provided it is ...) as said by zeller.