Not sure if this is intentional, but it's different behaviour from v0.6.2:
    julia> AbstractArray(randn(10,10))
    ERROR: MethodError: no method matching AbstractArray(::Array{Float64,2})
    Closest candidates are:
      AbstractArray(::Any) where T<:AbstractArray at abstractarray.jl:22
      AbstractArray(::Union{QR, LinearAlgebra.QRCompactWY}) at /Users/solver/Projects/julia7/usr/share/julia/site/v0.7/LinearAlgebra/src/qr.jl:427
      AbstractArray(::QRPivoted) at /Users/solver/Projects/julia7/usr/share/julia/site/v0.7/LinearAlgebra/src/qr.jl:434
      ...
    Stacktrace:
     [1] AbstractArray(::Array{Float64,2}) at ./abstractarray.jl:22
     [2] top-level scope
`AbstractArray{Float64}(randn(10,10))` works as expected, without error.