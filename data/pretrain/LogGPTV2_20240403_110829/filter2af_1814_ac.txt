    2016-10-15 03:52:20
    2020-11-26 03:04:23
    2020-06-05 16:15:22
    2017-10-14 07:22:03
    2017-03-30 19:53:59
    2013-09-04 05:49:27
    2012-07-26 00:01:13
如果KdcSponge无法确定Kerberos模块的版本，并且域控制器运行的是Windows Server 2016或Server
2019（主版本10），则负载将接触到Microsoft的符号服务器（`msdl.Microsoft.com`），试图找到几个未记录的API函数的位置。该样本将向如下结构的URL发出HTTPS
GET请求，URL的GUID部分是PE的`IMAGE_DEBUG_TYPE_CODEVIEW`部分中RSDS结构的GUID值：
`/download/symbols/[library name].pdb/[GUID]/[library name].pdb`
样本将结果保存到以下位置的文件中，同样，文件名的GUID是`IMAGE_DEBUG_TYPE_CODEVIEW`部分中RSDS结构的GUID值：
`ALLUSERPROFILE\Microsoft\Windows\Caches\[GUID].db:`
如上所述，我们认为代码访问symbol服务器的原因是查找三个未记录的Kerberos相关函数的位置：`KdcVerifyEncryptedTimeStamp`、`KerbHashPasswordEx3`和`KerbFreeKey`。此样本主要在以下库中查找这些函数：
`kdcsvc.KdcVerifyEncryptedTimeStamp kdcsvc.KerbHashPasswordEx3
kdcpw.KerbHashPasswordEx3 kdcsvc.KerbFreeKey kdcpw.KerbFreeKey`
如果找到这些函数，样本将搜索特定的字节序列，如表1所示，以确认函数是否正确，并验证它们是否未被修改。
Function | Hex bytes  
---|---  
kdcsvc.KdcVerifyEncryptedTimeStamp | 48 89 5c 24 20 55 56 57 41 54 41 55 41 56
41 57 48 8d 6c 24 f0 48 81 ec 10 01 00 00 48 8b 05 a5  
kdcsvc.KerbHashPasswordEx3 | 48 89 5c 24 08 48 89 74 24 10 48 89 7c 24 18 55
41 56 41 57 48 8b ec 48 83 ec 50 48 8b da 48 8b  
kdcpw.KerbHashPasswordEx3 | 48 89 5c 24 08 48 89 74 24 10 48 89 7c 24 18 55 41
56 41 57 48 8b ec 48 83 ec 50 48 8b da 48 8b  
kdcpw.KerbFreeKey | 48 89 5c 24 08 57 48 83 ec 20 48 8b d9 33 c0 8b 49 10 48
8b 7b 18 f3 aa 48 8b 4b 18 ff 15 72 19  
kdcsvc.KerbFreeKey | 48 89 5c 24 08 57 48 83 ec 20 48 8b 79 18 48 8b d9 48 85
ff 0f 85 00 c5 01 00 33 c0 48 89 03 48  
如果域控制器运行的是Windows Server 2008或Server
2012（主要版本6），KdcSponge不会接触到符号服务器，而是会在整个`kdcsvc.dll`模块中搜索表2中列出的字节序列以查找API函数。
Function | Hex bytes  
---|---  
kdcsvc.KdcVerifyEncryptedTimeStamp | 48 89 5C 24 20 55 56 57 41 54 41 55 41 56
41 57 48 8D 6C 24 F9 48 81 EC C0 00 00 00 48 8B  
kdcsvc.KerbHashPasswordEx3 | 48 89 5C 24 08 48 89 74 24 10 48 89 7C 24 18 55
41 56 41 57 48 8B EC 48 83 EC 40 48 8B F1  
kdcsvc.KerbFreeKey | 40 53 48 83 EC 20 48 8B D9 48 8B 49 10 48 85 C9 0F 85 B4
B9 01 00 33 C0 48 89 03 48 89 43  
一旦找到`KdcVerifyEncryptedTimeStamp`、`KerbHashPasswordEx3`和`KerbFreeKey`函数，该样本将尝试钩住这些函数，以监视对它们的所有调用，意图窃取凭据。当向域控制器发出身份验证请求时，将调用Kerberos服务（KDC服务）中的这些函数，示例将捕获入站凭据。然后将凭据写入以下位置的磁盘：
`%ALLUSERPROFILE%\Microsoft\Windows\Caches\system.dat`
被盗凭证使用单字节异或算法加密，使用0x55作为密钥，并按以下结构每行写入system.dat文件：
`[]`
## 归因
虽然归因仍在进行中，我们无法确认攻击行为背后的参与者，但我们确实观察到了我们分析的案例中使用的战术和工具与威胁组织3390（TG-3390，Emissary
Panda，APT27）之间的一些相关性。
具体而言，正如SecureWorks在一篇关于先前[TG-3390](https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage)操作的文章中所记录的，我们可以看到TG-3390在利用合法被盗凭证进行横向移动和攻击域控制器之前，同样使用了web攻击和另一种流行的称为ChinaChopper的中文webshell作为其初始立足点。虽然WebShell和漏洞利用有所不同，但一旦攻击者实现了对环境的访问，我们注意到他们的一些过滤工具中存在重复。
SecureWorks表示，攻击者正在使用WinRar伪装为不同的应用程序，将数据拆分为Recycler目录中的RAR归档文件。他们从部署用于执行此工作的批处理文件中提供了以下代码段：
    @echo off
    c:\windows\temp\svchost.exe a -k -r -s -m5 -v1024000 -padmin-windows2014 “e:\recycler\REDACTED.rar” “e:\ProgramData\REDACTED\”
    Exit
从我们对最近针对ManageEngine ADSelfService
Plus的攻击的分析中，我们发现到了相同的技术——将相同的参数顺序和位置传递给重命名的WinRar应用程序。
    @echo off
    dir %~dp0>>%~dp0\log.txt
    %~dp0\vmtools.exe a -k -r -s -m5 -v4096000 -pREDACTED "e:\$RECYCLE.BIN\REDACTED.rar" "E:\Programs\REDACTED\REDACTED"
一旦文件被暂存，在这两种情况下，它们都可以在面向外部的web服务器上访问。然后，攻击者将通过直接HTTP GET请求下载它们。
## 结论
2021年9月，Unit42 观察到一次攻击活动，攻击者利用Zoho的ManageEngine产品ADSelfService
Plus中最近修补的漏洞（在CVE-2021-40539中跟踪）初步访问目标组织。技术、国防、医疗保健、能源和教育行业中至少有九家实体在这次攻击活动中受到了损害。
攻击后，攻击者迅速在网络中横向移动，并部署多个工具来运行命令，以执行攻击后活动。参与者非常依赖Godzilla
webshell，在操作过程中将开放源代码webshell的几个变体上传到受损服务器。
其他一些工具具有新颖的特性，或者在以前的攻击中没有公开讨论，特别是NGLite后门和KdcSponge stealer。
例如，NGLite后门使用一种新的C2通道，该通道使用称为NKN的分散网络，而KdcSponge窃取器钩住未记录的函数，从入站Kerberos身份验证尝试中获取凭据到域控制器。
Unit
42认为，攻击者的主要目的是获得对网络的持久访问，以及从受损组织收集和过滤敏感文档。攻击者将敏感文件收集到暂存目录，并在Recycler文件夹中创建了受密码保护的多卷RAR存档。攻击者通过直接从面向外部的web服务器下载单个RAR档案来过滤文件。
## IoCs
### Dropper SHA256
    b2a29d99a1657140f4e254221d8666a736160ce960d06557778318e0d1b7423b
    5fcc9f3b514b853e8e9077ed4940538aba7b3044edbba28ca92ed37199292058
### NGLite SHA256
    805b92787ca7833eef5e61e2df1310e4b6544955e812e60b5f834f904623fd9f
    3da8d1bfb8192f43cf5d9247035aa4445381d2d26bed981662e3db34824c71fd
    5b8c307c424e777972c0fa1322844d4d04e9eb200fe9532644888c4b6386d755
    3f868ac52916ebb6f6186ac20b20903f63bc8e9c460e2418f2b032a207d8f21d
### Godzilla Webshell SHA256
    a44a5e8e65266611d5845d88b43c9e4a9d84fe074fd18f48b50fb837fa6e429d
    ce310ab611895db1767877bd1f635ee3c4350d6e17ea28f8d100313f62b87382
    75574959bbdad4b4ac7b16906cd8f1fd855d2a7df8e63905ab18540e2d6f1600
    5475aec3b9837b514367c89d8362a9d524bfa02e75b85b401025588839a40bcb
### KdcSponge SHA256
    3c90df0e02cc9b1cf1a86f9d7e6f777366c5748bd3cf4070b49460b48b4d4090
    b4162f039172dcb85ca4b85c99dd77beb70743ffd2e6f9e0ba78531945577665
### 攻击者IP地址
24.64.36 [.]238
([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=24.64.36%5B.%5D238))  
45.63.62[.]109([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=45.63.62%5B.%5D109))  
45.76.173[.]103([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=45.76.173%5B.%5D103))  
45.77.121[.]232([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=45.77.121%5B.%5D232))  
66.42.98[.]156([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=66.42.98%5B.%5D156))  
140.82.17[.]161([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=140.82.17%5B.%5D161))  
149.28.93[.]184([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=149.28.93%5B.%5D184))  
149.248.11[.]205([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=149.248.11%5B.%5D205))  
199.188.59[.]192([ZoomEye搜索结果](https://www.zoomeye.org/searchResult?q=199.188.59%5B.%5D192))
### 注册表项
`Software\Microsoft\Windows\CurrentVersion\Run\ME_ADManager.exe
Software\Microsoft\Windows\CurrentVersion\Run\ME_ADAudit.exe
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce\KDC
Service`
### Additional Resources
[KdcSponge ATOM](https://unit42.paloaltonetworks.com/atoms/kdcsponge/) [Threat
actor DEV-0322 exploiting ZOHO ManageEngine ADSelfService
Plus](https://www.microsoft.com/security/blog/2021/11/08/threat-actor-dev-0322-exploiting-zoho-manageengine-adselfservice-plus/)
* * *