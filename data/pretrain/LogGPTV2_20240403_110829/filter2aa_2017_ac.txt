# 实验室会话指南：ModbusPal、MBTGET 和 Metasploit

## ModbusPal 配置
1. 启动 ModbusPal：
   ```bash
   $ java -jar ModbusPal.jar
   ```
2. 添加一个 Modbus 从站。
3. 设置一些寄存器值。
4. 使用以下工具查询该从站：
   - MBTGET Perl 脚本
   - Metasploit 模块
5. 使用 Wireshark 分析流量。

### 实验会话 #2: ModbusPal + MBTGET
- **MBTGET** 是一个用于执行 Modbus/TCP 查询的 Perl 脚本。

#### 基本操作
```bash
$ cd toolz
$ ./mbtget -h
```

#### 读取请求
- 读取线圈（1位）
  ```bash
  $ ./mbtget –r1 –a 0 –n 8 127.0.0.1
  ```
- 读取寄存器（8位）
  ```bash
  $ ./mbtget –r3 –a 0 –n 8 127.0.0.1
  ```

#### 写入请求
- 写入线圈（1位）
  ```bash
  $ ./mbtget –w3 #{VALUE} –a 0 –n 8 127.0.0.1
  ```
- 写入寄存器（8位）
  ```bash
  $ ./mbtget –w6 #{VALUE} –a 0 –n 8 127.0.0.1
  ```

### 实验会话 #2: ModbusPal + Metasploit
- **Metasploit** 中包含一个简单的 Modbus 客户端，可以进行读写操作。
- 启动 Metasploit 控制台：
  ```bash
  $ msfconsole
  ```
- 使用 Modbus 客户端模块：
  ```bash
  msf > use auxiliary/scanner/scada/modbusclient
  msf auxiliary(modbusclient) > info
  msf auxiliary(modbusclient) > set ACTION
  ```

## 实验会话 #3: S7 使用 Snap7
- **Snap7** 是一个开源库，实现了西门子 S7 协议。
- 启动演示服务器：
  ```bash
  $ cd toolz/siemens/Snap7demos
  $ ./serverdemo
  ```
- 使用演示客户端查询服务器：
  ```bash
  $ ./clientdemo
  ```
- 也可以使用基于 Snap7 Python 封装的脚本：
  ```bash
  $ cd toolz/siemens/scan7
  $ python XXXX.py
  ```

## 攻击标准服务
- 大多数 PLC 具有标准接口，如 HTTP 和 FTP。
- 例如，在 Schneider M340 上，FTP 凭据是硬编码的：
  ```bash
  sysdiag /factorycast@schneider
  ```
- 这允许你检索 Web UI 的密码文件。

### 实验会话 #4: 攻击 PLC
- 无身份验证的操作：
  - Schneider “STOP/RUN”
    ```bash
    msf > use auxiliary/admin/scada/modicon_command
    ```
  - Schneider “Logic download/upload”
    ```bash
    msf > use auxiliary/admin/scada/modicon_stux_transfer
    ```
- 注意：Metasploit 模块在处理大型程序时可能无法正常工作。我对其进行了部分修改，并将其发布在我的 GitHub 上：
  - [GitHub 地址](https://github.com/arnaudsoullie/metasploit-framework/blob/modicon_stux_transfer/modules/auxiliary/admin/scada/modicon_stux_transfer.rb)
  - 在你的虚拟机中也包含为 `modicon_stux_transfer_ASO`。

## 捕获旗帜任务
你的任务是停止火车并用机械臂捕获旗帜。

## ICS 安全
### ICS 安全标准
- **比较**
- **ANSSI**
- **ISA99**
- **62443**

### 系统强化
- 补丁管理
- 服务
- 攻击面
- 用户账户及权限
- 文件权限
- 网络配置
- 远程管理

### 网络分割
- **理论**
- **必要的数据交换**
- **技术解决方案**：防火墙、DMZ、数据二极管

### 安全监控
- **为什么？**
- **如何？**
- **与过程监督的集成？**

### 参考资料
- [CLUSIF 文档](https://www.clusif.asso.fr/fr/production/ouvrages/pdf/CLUSIF-2014-Cyber-Security-of-Industrial-Control-Systems.pdf)
- [ISA 99 / IEC 62443](http://en.wikipedia.org/wiki/Cyber_security_standards#/media/File:ISA-62443_Standard_Series_2012.png)
- [NIST SP800-82](https://csrc.nist.gov/publications/detail/sp/800-82/final)
- [ANSSI 标准](http://www.ssi.gouv.fr/administration/guide/la-cybersecurite-des-systemes-industriels/)
- [RIPE](https://www.langnersecurity.com/ripe/)
- [系统加固资源](http://iase.disa.mil/stigs/Pages/index.aspx, https://benchmarks.cisecurity.org/downloads/)

### 数据导入
- **网络方式**：将 USB 密钥或文件放在企业网络的共享文件夹中，经过分析后在 ICS 网络的共享文件夹中可用。
- **USB 密钥方式**：大多数解决方案基于防病毒软件。插入密钥，扫描后拔出，然后前往 ICS 网络。

### 数据导入要求
- 使用不同颜色编码的 USB 密钥，并通过 AV/GPO 过滤授权的制造商/序列号。
- 能够使用多个防病毒软件。
- 如果检测到异常，应触发警报并处理。

### 安全监控
- SCADA 和 DCS 主要关注过程监控，但不包括安全监控。
- 安全事件应被视为过程事件，例如病毒检测应在控制室中触发警报。
- 由于 ICS 网络变化不大，可以建立基准并针对任何修改采取行动。
- 应实现网络流量和应用程序白名单。

希望这些优化后的说明能帮助你更好地理解和执行实验。如有任何问题，请随时提问。感谢参与！