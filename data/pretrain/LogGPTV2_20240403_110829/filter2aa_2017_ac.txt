$ > java –jar ModbusPal.jar 
▪ Add a modbus slave 
▪ Set some register values 
▪ Query it with: 
▪ MBTGET Perl script 
▪ Metasploit module 
▪ Analyze traffic with Wireshark 
Lab session #2: ModbusPal + MBTGET 
▪ Mbtget is a perl script to perform Modbus/tcp queries 
$ > cd toolz 
$ > ./mbtget -h 
▪ Read requests 
▪ Coils (1 bit) 
$ > ./mbtget –r1 –a 0 –n 8 127.0.0.1 
▪ Words (8 bits) 
$ > ./mbtget –r3 –a 0 –n 8 127.0.0.1 
▪ Write requests 
▪ Coils (1 bit) 
$ > ./mbtget –w3 #{VALUE} –a 0 –n 8 127.0.0.1 
▪ Words (8 bits) 
$ > ./mbtget –w6 #{VALUE} –a 0 –n 8 127.0.0.1 
Lab session #2: ModbusPal + METASPLOIT 
▪ A simple modbus client that I developed 
▪ Can perform read and write operations on coils and 
registers 
▪ Included in msf’s trunk so you already have it ☺ 
▪ Launch msf console 
$ > msfconsole 
msf > use auxiliary/scanner/scada/modbusclient 
msf auxiliary(modbusclient) > info 
▪ Play! 
msf auxiliary(modbusclient) > set ACTION  
Lab session #3 : S7 using Snap7 
▪ Snap7 is an open-source library implementing Siemens S7 
protocol 
▪ Launch the demo server 
$ > cd toolz/siemens/Snap7demos 
$ > ./serverdemo 
▪ Query it using the demo client 
$ > ./clientdemo 
▪ You can also use the scripts that rely on the Snap7 python 
wrappers 
$ > cd toolz/siemens/scan7 
$ > python XXXX.py 
Attacking standard services 
▪ Most PLCs have standard interfaces, such as HTTP and 
FTP 
▪ Lets’ say security was not the first thing in mind when 
introducing these features … 
▪ On  Schneider M340 
▪ FTP credentials are hardcoded 
sysdiag /factorycast@schneider 
▪ Allows you to retrieve the password file for the web 
UI 
Lab session #4 : Attacking PLCs 
▪ Unauthenticated actions on PLCs 
▪ Schneider “STOP/RUN” 
msf > use auxiliary/admin/scada/modicon_command 
▪ Schneider “Logic download/upload” 
msf > use 
auxiliary/admin/scada/modicon_stux_transfer 
▪
MSF’s module is not working properly on large programs. 
▪
I made some **unfinished** modifications on my Github :  
▪
https://github.com/arnaudsoullie/metasploit-
framework/blob/modicon_stux_transfer/modules/auxiliary/admin/
scada/modicon_stux_transfer.rb 
▪
Also included in your VM as « modicon_stux_transfer_ASO » 
Capture The Flag ! 
Your mission, should you choose to 
accept it, is to stop the train and 
capture the flag with the robot arm. 
Hacking ICS ?  
No crazy « hanging from the 
ceiling without sweating » stuff 
required ! 
Securing ICS 
● ICS security standards 
o Comparison 
o ANSSI 
o ISA99 
o 62443 
● System hardening 
● Network segmentation 
o Theory 
o Necessary evil : data exchange 
o Technical solutions : FW, DMZ, Data diodes 
● Security monitoring 
o Why ? 
o How ? 
o Integration with process supervision ? 
ICS security standards 
There are 
quite a few ! 
Let’s use a 
document 
published by 
the CLUSIF, 
a French 
information 
security 
association. 
https://www.clusif.asso.fr/fr/production/ouvrages/pdf/CLUSIF-2014-Cyber-Security-of-
Industrial-Control-Systems.pdf 
ISA 99 / IEC 62443 
ISA 99 is the old name, the document was initally created by the ISA (International 
Society for Automation) 
http://en.wikipedia.org/wiki/Cyber_security_standards#/media/File:ISA-
62443_Standard_Series_2012.png 
ISA 99 / ISO 62443 
A few concepts :  
•
Security lifecycle : security must be integrated during 
each phase of a product development, use and end of 
life 
•
Zones and conduits : Instead of applying the same 
security level and security measures to all parts of the 
ICS, the ICS is segmented in zones, which have a 
homogeneous security level, and « conduits » are 
defined to exchange information between zones. 
•
Securiy levels : Define security levels in the same way 
as SIL (Safety Integrity Levels) [ Note that there is no 
correlation whatsoever between security levels and 
safety levels] 
•
Target Security Levels 
•
Achieved Security Levels 
•
Capability Security Levels 
NIST SP800-82 
NIST = National Institute for Standards and Technology 
Much more technical than the IEC 62443 
Old-school icon set  
French specific standards : The ANSSI 
Really well done, but only in French at the moment now in English ! 
http://www.ssi.gouv.fr/administration/guide/la-cybersecurite-des-systemes-industriels/ 
RIPE 
Created by Langner Security 
RIPE : Robust Ics Planning and Evaluation. 
Rejects the idea of risk management (I am exagerating a bit), and 
focuses on security capabilities 
Based on concepts from quality management, with 3 attributes: 
•
Verifiability 
•
Completeness 
•
Accuracy 
Composed of 8 domains :  
•
System population Characteristics 
•
Network architecture 
•
Component Interaction 
•
Workforce Roles and Responsibilities 
•
Workforce Skills and Competence Development 
•
Procedural Guidance 
•
Deliberate Design and Configuration Change 
•
System acquisition 
System hardenning 
We won’t cover all the possible ways to harden a server 
configuration. 
There are numerous quality resources on the topic, here are a 
few :  
• DISA : http://iase.disa.mil/stigs/Pages/index.aspx 
• CIS : https://benchmarks.cisecurity.org/downloads/ 
• … 
However, here are the biggest topics 
• Patching process 
• Services 
• Attack surface 
• User accounts & permissions 
• File permissions 
• Network configuration 
• Remote administration 
System hardenning : whitelisting 
 Since configuration and software do not change much in 
ICS, it is possible to go one step further in hardenning. 
 You can use whitelisting technologies to prevent any 
unauthorized program from being executed. 
 AppLocker from Microsoft allows you to do that, as well as 
some 3rd party tools, most of the time by AV companies 
(McAfee, Symantec, …) 
 It is also possible to perform regular, automated 
configuration review to detect unauthorized changes 
 Not to be forgotten : in case of vulnerability exploitation or 
if you have admin access, this could be bypassed 
Network segmentation : why & how ? 
 First question : why do we need to have network 
segmentation ? 
 Impacts of a compromise are higher on an ICS 
 We cannot afford to have attackers from the 
corporate network pivot to the ICS 
 Second question : how to segregate the networks ? 
 Real question is  : how to segregate while allowing 
some communications 
 Let’s take a look at NIST SP800-82 
Network segmentation : Dual home 
1st solution : Dual-homed workstations or servers 
(two network cards, one of the corporate network, 
one on the ICS network) 
Network segmentation : Firewall 
A firewall filters flows between corporate and ICS networks 
For example, Data historian is 
allowed to query information from 
the control server in the ICS 
network. 
If the Data Historian is 
compromised, attackers may then 
take control of the control server 
and thus modify the integrity of the 
process control 
Network segmentation : Firewall + router 
Same story 
Network segmentation : DMZ 
There is no direct network flow between corporate 
and ICS networks. 
Corporate -> DMZ : ALLOW 
ICS -> DMZ : ALLOW 
ANY -> ANY : DENY 
However, beware of client-
side vulnerabilities 
Network segmentation : DMZ with 2 firewalls 
Quite the same as the previous one 
Using 2 firewalls from 
different brands might 
prevent some attacks. 
Also, easier to manage if you 
have one firewall team for 
corporate and one for ICS 
Network segmentation : DPI and IPS 
In order to provide a more context-specific filtering, it is possible 
to use DPI (Deep Packet Analysis) technology to allow or deny 
packets based on some protocol fields. 
Example: only authorize Modbus read requests, or deny Modbus 
0x5a (90) function 
These features are available on most firewalls, but most of the 
time only « industrial » firewall will include the ability to inspect 
ICS specific protocols. 
You can also perform those operations with an IPS, but at the 
moment there are only a few ICS signatures 
Network segmentation : One-way gateways 
Not mentionned clearly in NIST SP800-82 
Offers the highest security level, but is also the most difficult to implement 
A data-diode is a network device based on a real diode, that transmits data 
only one-way. 
The fact that data cannot be transmitted in the other way is guaranteed by 
the laws of physics : hack that ! 
Problem : since packets can only go one way, it is not possible to TCP 
protocol, as even the initial handshake (SYN/SYN-ACK/ACK) would fail. Only 
UDP-based protocols can be used. 
Consequence : you have to adapt the infrastructure to use a compliant 
protocol. That usually means that we need a gateway on each side of the 
diode 
Check my project DYODE : Do Your Own DiodE 
https://github.com/arnaudsoullie/dyode 
Network segmentation : One-way gateways 
Network segmentation : One-way gateways without diodes 
FPGAs 
FPGA are Integrated Circuits that can be programmed. Once programmed, 
they are « burned » which means they cannot be reprogrammed. 
Some gateways use this technology to perform network filtering. 
It is « less » secure than a data diode since it is not physics-based and errors in 
FPGA code could allow data to go the other way around. However, it is 
probably an acceptable risk. 
Software data-diode 
PolyXene is a highly secure multi-security level operating system 
It is based on several instances of Xen segregated by a micro-kernel 
It is software-based but with a high security level. 
Advantages of these solutions is that it can integrate all other security 
controls (protocol specific controls like read-only, etc..) 
Network segmentation : Air gaps 
Airgap is the notion of having 
no network connection 
between two networks. 
While this notion is 
important, it lacks the reality 
check that some form of data 
exchange is always 
necessary. 
For example : update the 
servers, update the AV 
signatures, … 
That is why it is necessary to also include laptops and 
USB drives into the picture, as they are often used to 
« brake » the airgap 
Network segmentation : laptops 
From what I’ve seen, most of the time people 
consider that there is an airgap if machines are not 
SIMULTANEOUSLY connected to the corporate 
network and the ICS networks. 
That is a narrow view, as malware and pentesters 
can perform actions asynchroneously. 
Example : Compromise of the coporate Active 
Directory, installation of a RAT on the PC from an 
operational, then program it to perform network 
reconnaissance on the ICS when it is connected, 
and send back the result to the C&C when the 
laptop is connected back to the corporate network. 
Network segmentation : USB drives 
When network segmentation is 
performed correctly, people tend to 
use USB keys to exchange data 
between corporate and ICS networks. 
The use of USB blocking « caps » is 
not really a solution, as :  
• You do not really need the key to 
unlock it, I’ve seen a lot of people 
able to do it with a simple 
screwdriver 
• You usually have to let at least 1 or 
2 USB ports available for mouse 
and keyboard, so what is the point 
? 
What we need is a solution and process to exchange data 
between corporate and ICS 
Importing data from corporate to ICS 
Network-based  
Plug a USB key or drop a file on a share on the corporate 
network and it will be analyzed and then available on a 
network share on the ICS network. 
USB key based  
Most solutions are based on AV : You plug the key, it is 
scanned, you unplug the key and go to the ICS. This can be 
flawed on several layers :  
• If this workstation is connected, it can be comprised 
• If you use the same AV as on the computer from which you 
took the files, what’s the point ? 
• If you use the same USB key for corporate and ICS network 
you could be vulnerable to BadUSB (reprogramming the 
USB firmware). 
Importing data from corporate to ICS 
What should be the requirements ? 
•
Use different USB keys for corporate and ICS 
You could have a color code, and use AV / GPOs to filter the USB 
key authorized by manufacturer / serial number 
•
Be able to use several AV 
•
If something is detected an alert should be raised and treated 
Wait a minute…what about how the file were retrieved in the first 
place ? 
If you use a standard corporate laptop to connect to the ICS vendor, 
download the patch and then use your super-secure USB-checking 
solution, you are still vulnerable… 
A dedicated PC, not managed by the Active Directory, should be 
used to download updates. It should have a dedicated proxy 
configuration that only allows it to connect to a whitelist of websites. 
Binaries signatures should be checked when provided. 
Security monitoring 
SCADA and DCS are ALL about monitoring; however, this 
doesn’t include security monitoring… 
I strongly believe that security events should be treated as 
process events. 
Example : an virus detection of one of the workstation should 
raise an alert not only locally, but also in the control room. 
Moreover, we have to use the fact that ICS networks do not 
change that much over time, and consequently we can build a 
standard basis and act on any modification to it. 
Network flows and application whitelisting should be 
achievable on an ICS network. 
Do you have any question ? 
Thanks for attending 
https://github.com/arnaudsoullie/ics-default-passwords