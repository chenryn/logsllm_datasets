***
以大数据为主要燃料，构建集中的深度学习平台、AI在线服务平台，不断沉淀AI通用模型，为业务提供包括异常检测、故障根因分析等的服务能力。
数据准备
数据准备模块提供对结构化数据特征处理、衍生、筛选等标准处理流程为AI模型训练提供高质量训练数据。
包括数据源管理（对数据源（kafka，hbase，clickhouse，mysql，redis，文本文件）进行配置，配置信息包括基本的名称，描述等信息，还包括具体具体类型的数据的连接信息）、指标集管理（通过数据源里的连接配置自动获取相关的指标，然后根据需要建立具体的指标集合。一个数据源可以建立多个指标集，指标集的内容主要包含数据源全部或者部分指标）等。数据预处理
支持对原始数据进行基础处理的功能，包含数据清洗、数据回填和数据探索等
	数据特征分析
周期型、阶梯型等数据特征分析
学件管理
学件＝模型＋规约
针对运维场景智能化解决方案，将模型训练、推理和数据获取、处理、存放等进行规约后形成的能力单元，可重用、可演进、可了解、可共享。
算法库管理
训练算法（如机器学习分类、回归算法，深度学习神经网络算法等）可沉淀在平台的算法库中进行统一管理，算法库管理应包含算法新增、删除、上传、下载、版本控制等功能。
学件制作
配置数据源、配置指标、配置对象、选择训练集、选择算法，制作学件，进行训练。
训练集管理
可根据需要选择指标和时间范围，选择后形成训练集，以用于数据训练。
学件制作
在学件制作模块，包括对数据源设置、训练集设置、算法模型选择、算法参数设置、模型训练模块。
学件训练学件训练
训练服务自动将训练流程进行拆接，通过容器化的方式进行基础资源的申请、服务镜像的拉取和执行，在执行完成后将所占资源释放并将模型训练结果存放到指定位置；
训练流程控制：支持对正在执行训练的任务进行中止、恢复等操作 
任务启动机制：训练任务按排队方式启动执行，在基础资源不足的情况下，可将要执行的训练任务暂时挂起；当可用基础资源满足任务要求时，可自动执行挂起的训练任务；
训练框架支持：支持对不同学习训练框架（如深度学习：TensorFLow、PyTorch、MXNet，机器学习：SKLearn SparkML等）的容器化调度；
训练资源调度：支持学习训练过程中对不同基础资源（如CPU、GPU等）的调度；支持不同训练场景下的基础资源调度方式
可视化学件训练过程
模型评估优化
模型评估：训练后的模型可在平台上进行验证评估，可输入验证集对模型效果进行评估模型评估：训练后的模型可在平台上进行验证评估，可输入验证集对模型效果进行评估
超参调优：提供多类超参调优的策略，可根据选择的策略对模型的超参进行自动化调整进而使模型进行自动化迭代优化，也可手工触发优化。
模型发布
算法模型经过评估后合格的，可以发布，从而支持对实时流数据的异常检测、容量预测和根因分析等。
提供对学件训练后AI模型文件的统一管理能力，对训练后AI模型的基础信息、生命周期、使用申请等内容进行集中管控，以提升模型的复用效率
支持模型版本管理
运维学件
针对特定场景沉淀的运维学件。
要求具备的学件包括：
指标异常检测、日志异常检测、告警根因分析、智能告警收敛、调用链故障诊断、运维知识图谱、多指标问题定位、系统故障预测、业务风险预测、故障自愈、资源优化、容量预测等，区分质量保障类学件、成本管理类学件、效率提升类学件
支持学件与具体AIOps场景关联，学件复用。
实时诊断推理支持学件与具体AIOps场景关联，学件复用。
实时诊断推理
平台依托计算引擎，通过自动化流程，实现高并发数据接入、解析、处理、计算和诊断的全流程实时响应，支持现场各类实时异常检测、根因分析、影响分析、实时预测等场景。
提供统一规范的对外服务接口，支持生产环境下的海量服务请求。
离线分析挖掘
支持针对历史数据进行挖掘和批量计算的分析场景，用于大数据量的离线计算。如挖掘告警关联关系、容量预测、错误词频分析等。
	AI能力切换
不仅可以使用平台自带的AI学件能力，还可以支持第三方AI学件的注入。
可以选择不同的AI能力为同一个运维场景使用，在A能力不满足需要的使用，可以切换为B能力。
AIOps场景
总体描述
AIOps围绕质量保障、成本管理和效率提升的日常运维，逐步构建智能化运维场景。运行三者之间不是孤立的，是相互影响相互结合的。场景的划分侧重于住影响维度，在实际运维工作中需要贯通应用。质量保障方向
质量保障是运维的基本场景之一，指通过对系统规模、调用关系、变更频率等多种数据指标的监控、检测，及时发现问题并处理，为业务质量提供精准感知，全面提升质量保障效率。
事前保障
每个场景都需要描述清楚场景、功能、使用范围及预期效果。
建议算法在技术要求中统一描述，各个场景中不明确使用的算法，方便在落地时根据效果挑选合适的算法。
性能预测
分布式存储性能预测
随着业务发展，业务系统越来越频繁使用分布式存储，对分布式存储的性能产生越来越大的依赖，经常会因为存储性能或者故障导致业务受阻或瘫痪，对存储性能的把控需求日益提高。对分布式存储进行实时的性能数据采集分析，结合auto_arima、xgboost、holt-winter
LinearRegression等智能算法进行性能综合性预测，提前预警性能不足问题，提前处理避免影响业务系统，同时可灵活检测出低效能的分布式存储，下线低效低能分布式存储，降本增效。｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
容器性能预测
容器化微服务化趋势发展，从而需要对容器的性能进行评估预测，因此通过采集容器各个维度的相关性能指标进行关联分析，包括CPU，MEM，DISK，NET等不同维度指标，通过prophet时间序列预测算法，实现容器性能的预测，及时了解容器性能短板和相关建议
｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
微服务性能预测
性能能直接体现用户感知，而且容器化微服务化趋势发展，从而需要对微服务的性能进行评估预测，因此通过采集微服务各个维度的相关性能指标进行关联分析，包括调用时长性能指标、调用耗时指标、调用次数指标、调用成功率指标等不同维度，通过prophet时间序列预测算法，实现微服务性能的预测，及时了解容器性能短板和相关建议。
｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
系统性能预测｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
系统性能预测
在性能预测上，只有不同单个对象的性能指标管理监控，缺少针对整体系统统一全方位的性能指标预测，因此可通过采集系统各个维度对象的相关性能指标进行关联分析，如接口调用耗时、应用响应时长、吞吐量、并发量、CPU内存使用率等覆盖业务、应用、进程、主机、数据库等覆盖多个维度对象的指标、通过prophet时间序列预测算法，实现系统性能的预测。
｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
应用性能预测
在运维工作中，后端web服务的应用性能是重点关注的。由于实际的规模业务系统多，具体的应用模块也比较多，实例化的进程数以千计，容器化、微服务化之后更以几何增长，如果能预测应用集群的性能走势，预测在未来至少3天内的性能走势，在运维工作安排中对其进行重点关注，针对其中的性能瓶颈提前做调整，很大程度上能避免突发情况。实时采集web服务性能，形式性能历史数据库，同时读取历史工单报告，引入auto_arima、xgboost、holt-winter、LinearRegression等智能算法，测算未来至少3天的性能走势，给出明确的整改建议。｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
中间件性能预测
随着业务中各种中间件的使用，中间件对业务性能的影响已经越来越重要，但是对中间件的性能预测部分比较缺乏，无法实现业务中间件的性能预测分析。因此，基于Redis性能指标、Redis的配置数据、业务拓扑数据，通过LSTM长短期记忆模型算法及Prophet时间序列预测算法，实现未来周期内Redis性能指标的预测分析，并实现指标的可视化展示及性能分析报告，保障业务环境稳定运行。
｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
数据库性能预测
数据库容量随着业务的发展，用户的增长，写入的数据越来越多。开发商对数据入库没有估算，存储使用和表空间规划不准确，导致存储使用紧张，没有趋势可寻，处理没有计划都是紧急需求，没有长远规划和参考。因此通过数据库实例、表空间、运行SQL通过Prophet算法，分析指标序列的周期、趋势等特征，估算数据库运行效率、存储容量、运行慢SQL进行及时预警，结合预测数据，对数据库进行合理优化。｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
容量预测
ES集群容量预测
Elasticsearch运行效率与使用的空间资源具有正相关性。接入的日志数据规模与业务相关性大，依赖资源容易变化。基于es接入的历史日志使用情况及响应效果，通过词向量、余弦相似度、Apriori 挖掘算法进行合理预测业务增长，合理分配可用资源，进行集群扩缩容以实现负载均衡，保证集群稳定性。
｛场景描述｝
｛功能描述｝
｛使用范围｝
｛预期效果｝
Web中间件容量预测
目前各省公司、集团的业务系统大部分采用的是商用中间件，商用中间件一般采用license来控制部署数量，在系统规划初期，如果web中间件需求量评估不准确，会导致两种情况：评估量远超实际用量，造成采购浪费；评估量远小于实际用量，需要重新采购，耽误工期、上线，二次浪费。引入auto_arima、xgboost、holt-winter、LinearRegression等智能算法，对输入的信息数据（bomc告警、第三方告警、性能指标数据、中间件配置数据、paas平台的接口能力、paas平台的告警数据）做评估，结合规模数据、业务量数据、现网web中间件规模综合评估所需的web中间件容量。｛场景描述｝
｛功能描述｝
｛使用范围｝