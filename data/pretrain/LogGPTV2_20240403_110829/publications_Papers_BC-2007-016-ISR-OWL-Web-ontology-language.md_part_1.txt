Gouveia, A. and Cardoso, J. OWL: Web Ontology Language. In Encyclopedia of Information
Science and Technology, Information Science Reference, Pennsylvania, USA, 2007.
OWL – Web Ontology Language
Adélia Gouveia and Jorge Cardoso
Department of Mathematics and Engineering
University of Madeira
9050-390 Funchal, Portugal
Tef: +351 291 705 151
Fax: +351 291 705 199
PI:EMAIL
INTRODUCTION
The World Wide Web (WWW) emerged in 1989, developed by Tim Berners-Lee
who proposed to build a system for sharing information among physicists of the CERN
(Conseil Européen pour la Recherche Nucléaire), the world’s largest particle physics
laboratory.
Currently, the WWW is primarily composed of documents written in HTML (Hyper
Text Markup Language), a language that is useful for visual presentation (Cardoso and
Sheth 2005). HTML is a set of “markup” symbols contained in a Web page intended for
display on a Web browser. Most of the information on the Web is designed only for
human consumption. Humans can read Web pages and understand them, but their
inherent meaning is not shown in a way that allows their interpretation by computers
(Cardoso and Sheth 2006).
Since the visual Web does not allow computers to understand the meaning of Web
pages (Cardoso 2007), the W3C (World Wide Web Consortium) started to work on a
concept of the Semantic Web with the objective of developing approaches and solutions
for data integration and interoperability purpose. The goal was to develop ways to allow
computers to understand Web information.
The aim of this chapter is to present the Web Ontology Language (OWL) which can
be used to develop Semantic Web applications that understand information and data on
the Web. This language was proposed by the W3C and was designed for publishing,
sharing data and automating data understood by computers using ontologies. To fully
comprehend OWL we need first to study its origin and the basic blocks of the language.
Therefore, we will start by briefly introducing XML (eXtensible Markup Language),
RDF (Resource Description Framework), and RDF Schema (RDFS). These concepts
are important since OWL is written in XML and is an extension of RDF and RDFS.
BACKGROUND
Everyday, the Web becomes more attractive as an information sharing infrastructure.
However, the vast quantity of data made available (for example, Google indexes more
than 13 billion pages) makes it difficult to find and access the information required by
the wide diversity of users. This limitation arises because most documents on the Web
are written in HTML (HTML 2007), a language that is useful for visual presentation but
which is semantically limited. As a result, humans can read and understand HTML Web
2 OWL - Web Ontology Language
pages, but the contents of Web pages are not defined in a way that computers can
understand them. If computers are not able to understand the content of Web pages it
becomes impossible to develop sophisticated solutions to enable the interoperability and
integration between systems and applications.
The aim of the Semantic Web is to make the information on the Web understandable
and useful to computer applications and in addition to humans. “The Semantic Web is
an extension of the current web in which information is given well-defined meaning,
better enabling computers and people to work in cooperation" (Berners-Lee, Hendler et
al. 2001). The Semantic Web is a vision for the future of the Web, in which information
is given explicit meaning, making it easier for machines to automatically process and
integrate the information available on the Web.
One of the corner stones of the Semantic Web is the OWL. OWL provides a
language that can be used by/on applications that need to understand the meaning of
information instead of just parsing data for display purposes. Nowadays, several
projects already rely on semantics to implement their applications. Example include
semantic wikis (Campanini, Castagna et al. 2004), social networks (Ding, Finin et al.
2005), semantic Blogs (Cayzer and Shabajee 2003), and semantic web services
(McIlraith, Son et al. 2001),
THE SEMANTIC WEB STACK
The Semantic Web identifies a set of technologies and standards which form the
basic building blocks of an infrastructure that supports the vision of the Web associated
with meaning. Figure 1 illustrates the different parts of the Semantic Web architecture.
It starts with the foundation of URI (Universal Resource Identifier) and Unicode. URI is
a formatted string that serves as a means of identifying abstract or physical resources.
For example, http://dme.uma.pt/jcardoso/index.htm identifies the location from where a
Web page can be retrieved and urn:isbn:3-540-24328-3 identifies a book using its
ISBN. Unicode provides a unique number for every character, independent of the
underlying platform, program, or language.
Directly above URI and Unicode we find the syntactic interoperability layer in the
form of XML, which in turn underlies RDF and RDFS. Web ontology languages are
built on top of RDF and RDFS. The last three layers are logic, proof, and trust, which
have not been significantly explored. Some of the layers rely on the digital signature
component to ensure security.
88 TTrruusstt
77 PPrrooooff 99
eerruuttaannggiiSS
66 LLooggiicc llaattiiggiiDD
OWL
55 OOnnttoollooggyyvvooccaabbuullaarryy
44 RRDDFF ++ RRDDFF SScchheemmaa
33 XXMMLL ++ NNSS++ XXMMLL SScchheemmaa
22 UUnniiccooddee 11 UURRII
FIGURE 1. Semantic Web layered architecture (Berners-Lee, Hendler et al. 2001)
OWL 3
In the following sections we briefly describe the most relevant layers (XML, RDF,
and RDFS). While the notions presented have been simplified, they give a reasonable
conceptualization of the various components of the Semantic Web.
XML
The eXtensible Markup Language (XML) (Decker, Melnik et al. 2000; XML 2007)
was originally pictured as a language for defining new document formats for the
WWW. An important feature of this language is the separation of content from
presentation, which makes it easier to select and/or reformat the data. SGML (Standard
Generalized Markup Language) and XML are text-based formats that provide
mechanisms for describing document structures using markup tags (words surrounded
by ’’). Both HTML and XML representations use tags such as  or
, and information between those tags, referred to as the content of the tag.
However, there are significant differences between HTML and XML. XML is case
sensitive while HTML is not. This means that in XML the start tags  and
 are different, while in HTML they are the same. Another difference is that
HTML has predefined elements and attributes whose behavior is well specified, while
XML does not. Instead, users can create their own XML vocabularies that are specific
to their application or business’ needs.
The following structure shows an example of an XML document identifying a
‘Contact’ resource. The document includes various metadata markup tags, such as
, , and , which provides various details about a
contact.
 Jorge 
 Cardoso 
 University of Madeira 
 PI:EMAIL 
 +51 291 705 156 
While XML has gained much of the world’s awareness, it is significant to identify
that XML is simply a way of standardizing data formats. But from the point of view of
semantic interoperability, XML has restrictions. One important characteristic is that
there is no way to recognize the semantics of a particular domain because XML aims at
a document structure and enforces no common interpretation of the data. Although
XML is simply a data-format standard, it is part of a set of technologies that constitute
the foundations of the Semantic Web.
RDF
Resource Description Framework (RDF) (RDF 2002), was developed by the W3C to
provide a common way to describe information so it could be read and understood by
computer applications. RDF was designed using XML as the underlying syntax
language. RDF provides a model for describing resources on the Web. A resource is an
element (document, Web page, printer, user, etc) on the Web that is uniquely
identifiable by a URI. The RDF model is based upon the idea of making statements
4 OWL - Web Ontology Language
about resources in the form of a subject-predicate-object expression, a ‘triple’ in RDF
terminology.
• Subject is the resource, i.e. the thing that is being described;
• Predicates are aspects about a resource, and expresses the relationship
between the subject and the object;
• Object is the value that is assigned to the predicate.
RDF has a very limited set of syntactic constructs, no other constructs except for
triples is allowed. Every RDF document is equivalent to an unordered set of triples. Let
us write a RDF triple that describes the following statement:
“The creator of the page named ComputersToday is John.”
In this example, ‘http://www.semanticweb.pt/ComputersToday’ is a resource, and it
has a property, ‘Creator’, with the value ‘John’. The resulting RDF statement is:
st = (http://www.semanticweb.pt/ComputersToday, Creator, John)
The statement can also be graphically represented as illustrated in Figure 2.
http://www.semanticweb.pt/ Creator
Jonh
ComputersToday
Resource Property type Property value
FIGURE 2 - RDF GRAPH
One way to represent the statement in Figure 2 using RDF language is the following:
John
The first lines of this example use namespaces to explicitly define the meaning of the
notions that are used. The first namespace xmlns:rdf=”http://w3.org/TR/1999/PR-rdf-
syntax-19990105#” refers to the document describing the syntax of RDF. The second
namespace http://dublincore.org/2003/03/24/dces# refers to the description of the
Dublin Core (DC) (DC 2005), a basic ontology about authors and publications.
OWL 5
RDF Schema
RDF Schema (RDFS) (XMLSchema 2005) is technologically more advanced when
compared to RDF. RDFS describes the resources with classes, properties, and values.
RDFS associates the resources in classes and states the relations between these classes,
or declares properties and specifies the domain and range of these properties. RDFS’
specification consists of some basic classes and properties that can be extended to any
given domain.
Classes in RDFS are much like classes in object oriented programming languages.
These allows resources to be defined as instances of classes, and subclasses of classes.
Properties can be seen as attributes that are used to describe the resources by assigning
values to them. RDF is used to declare a property and RDFS can extend this capability
by defining the domain and the range of that property. (However, RDFS has some
limitations but these have been resolved with the introduction of OWL.)
THE WEB ONTOLOGY LANGUAGE
The Web Ontology Language (OWL) (OWL 2004) is one of the most important
ontology languages. It enables the interoperability of applications and allows computers
to understand the Web’s content. In this respect it is more expressive than XML, RDF
or RDF Schema due to providing additional vocabulary along with formal semantics.
OWL Flavors
There are three OWL sublanguages: OWL Lite, OWL DL, and OWL Full. An
important feature of each sublanguage is its expressiveness. OWL Lite is the least
expressive and the OWL Full is the most expressive sublanguage. OWL DL is more
expressive that OWL Lite but less expressive than OWL Full. In other words, this
entails that every legal OWL Lite ontology is a legal OWL DL ontology; every legal
OWL DL ontology is a legal OWL Full ontology; every valid OWL Lite conclusion is a
valid OWL DL conclusion; and every valid OWL DL conclusion is a valid OWL Full
conclusion.
OWL Full is the most expressive of the OWL sublanguages and it uses the entire OWL
language primitives. It is intended to be used in situations where very high
expressiveness is more important than being able to guarantee the decidability or
computational completeness of the language. This sublanguage is meant for users who
want maximum expressiveness and the syntactic freedom of RDF, but with no
computational guarantees.
OWL DL is a sublanguage of OWL Full that restricts the application of OWL and RDF
constructors. OWL DL (DL stands for Description Logics) is not compatible with RDF,