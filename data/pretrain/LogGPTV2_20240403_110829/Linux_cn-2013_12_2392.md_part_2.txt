控制器局域网络(Controller Area Network (CAN))总线需要这个驱动(CAN bus subsystem support)。CAN总线是一种用于不同目的的串行协议。
使用这个特性(Raw CAN Protocol (raw access with CAN-ID filtering))，CAN总线可以通过BSD套接字API访问
内核中有用于CAN协议的广播管理(Broadcast Manager CAN Protocol (with content filtering))。这个管理提供了很多控制，包括内容过滤。
为了让Linux盒子成为一个CAN路由器和/或者网关，需要这个特性(CAN Gateway/Router (with netlink configuration))。
注意：网关是两个或者更多网络的接口设备，它提供不同的协议。一个简单的定义可以是"网关是一个协议转换器。"
注意：路由器转发网络流量和连接使用相同协议网络。
如果启用了(一些选项)，Linux内核可以支持很多CAN设备(主要是控制器)和接口。所有的CAN驱动都是对于这些设备的不同品牌和型号。在配置工具中，它们有以下这些标题。
* Virtual Local CAN Interface (vcan)
* Serial / USB serial CAN Adaptors (slcan)
* Platform CAN drivers with Netlink support
* Enable LED triggers for Netlink based drivers
* Microchip MCP251x SPI CAN controllers
* Janz VMOD-ICAN3 Intelligent CAN controller
* Intel EG20T PCH CAN controller
* Philips/NXP SJA1000 devices
* Bosch C*CAN/D*CAN devices
* Bosch CC770 and Intel AN82527 devices
* CAN USB interfaces
* Softing Gmbh CAN generic support
* Softing Gmbh CAN pcmcia cards
像Linux中的其他许多特性，CAN设备同样可以启用调试能力(CAN devices debugging messages)。再说一次，记住你内核的目的，你需要调试还是需要性能?
Linux内核同样支持红外线信号协议IrDA (infrared) subsystem support)。IrDa代表的是 "Infrared Data Associations"(红外数据协会)；这是红外信号的标准。
许多人如今想要蓝牙特性(Bluetooth subsystem support)。
RxRPC会话套接字可以启用(RxRPC session sockets)。这些套接字使用RxRPC协议运载网络连接。RxRPC运行于UDP的顶部。
如果启用的话，Linux内核可以支持"RxRPC dynamic debugging"(RxRPC 动态调试)。
RxRPC拥有kerberos 4和AFS kaserver安全特性可以启用(RxRPC Kerberos security)。Kerberos是一种每个网络设备在传输任何数据前都被需要证明彼此的身份的验证协议。
对于电脑的无线网络设备像Wifi，配置工具需要启用无线局域网(802.11)设备(cfg80211 - wireless configuration API)。cfg80211代表"Configuration 802.11"(配置 802.11)。802.11是一种无线规范。
"nl80211 testmode command"是用于校准并且/或验证的实用工具，它无线设备芯片上执行这些任务。
下一个设置允许用户"enable developer warnings"(启用开发者警告)对于cfg80211设备。
下面，"cfg80211 regulatory debugging"(cfg80211调控调试)可以启用。
下面的设定是"cfg80211 certification onus"(cfg80211证书义务)。
应该为cfg80211兼容设备启用省电特性(enable powersave by default)。
cfg80211支持debugfs入口(cfg80211 DebugFS entries)。
无线设备有它们遵守的调整规则；这些被存储在数据库中(use statically compiled regulatory rules database)(使用静态编译的调整规则数据库)
一些使用基于cfg80211的驱动扩展可能需要使用一个老的用户空间。这个特性允许这个行为(cfg80211 wireless extensions compatibility)(cfg80211 无线扩展兼容)。
lib80211可以提供调试特性(lib80211 debugging messages)。
独立于硬件的IEEE 802.11标准可以启用(Generic IEEE 802.11 Networking Stack (mac80211))。mac80211是一种用于编写softMAC无线设备驱动的框架。SoftMac允许很好地控制和配置设备。
下一个特性允许mac80211使用PID控制器管理TX(发送)速率(PID controller based rate control algorithm)(PID控制器基于速率控制算法)。TX单位是BFS(Bits per minute)(位/秒)。特别地，这个特性是用于控制数据流速率的算法。
另外一个相同特性的算法叫做"Minstrel"。这是一个比TX速率管理算法更精确和有效的算法。
Minstrel同样支持802.11n(Minstrel 802.11n support)。
由于有两种TX速率控制算法，但只能使用一种。所哟必须设备一个默认的(Default rate control algorithm (Minstrel))。通常地，最好选择Minstrel作为默认。
802.11s网状网络草案可以在内核中启用(Enable mac80211 mesh networking (pre-802.11s) support)。802.11s草案是网状网络的无线标准。
对于支持这个特性的设备，对于不同包流量时间的LED除法器特性可以启用(Enable LED triggers)。在我的以太网设备商上，当端口是活跃时LED灯会点亮。这些驱动可以是这些LED在包流量时间下工作。
mac80211同样支持debugfs特性(Export mac80211 internals in DebugFS)。
这是一个独立于典型日志系统收集mac80211调试信息的特性(Trace all mac80211 debug messages)。
这是另外一组mac80211调试特性，但是这些使用的是典型日志系统(Select mac80211 debugging features --->)。在这个菜单，选择你需要的调试特性。
在下一篇文章中，我们还有更多的需要配置。
---
via: 
译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出