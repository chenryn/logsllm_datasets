怎样用 Cobalt Strike 生成具有代码签名的 payload
——— By Digg3r
转换证书格式和转换过程中遇到的坑
可以看 CS 官方文档或者作者的 youtube 视频，profile 中配置签名是 jks 格式，而
windows 是 pfx 结尾的默认是 pkcs12 格式，所以需要转换成 JAVA 的 jks 格式,
一个 profile 代码签名的配置示例如下：
code-signer {
set keystore "codesign.jks";
set password "123456";
set alias "server";
}
不想配置 porfile 也可以不转换，因为有点小麻烦，完全可以在生成 payload 后直接用
微软的 signtool 签名，命令如下：
signtool.exe sign /f C:\codesign.pfx /p password C:\Payload.exe
#其中：/f 指定 pfx 签名证书 /p 证书密码 /t 签名用的时间戳服务器 最后是要签名的 paylaod.exe
好吧，开始搞起，pfx 转 jks 转换命令如下，具体看图片中的注释吧
命令如下：
keytool -importkeystore -srckeystore codesign.pfx -destkeystore codesign.jks
-srcstoretype PKCS12 -deststoretype JKS
图 2
上面配置示例可以看出有三个配置项一个是 keystore 设置证书文件位置，一个证书
passowrd 密钥，一个别名 alias，转换的时候好想无法直接指定 alias 证书别名，所以用如
下命令查看 alias，可以看出是随机生成的一个字符串：
图表 3
复制字符串到配置稳重，那么代码签名相关配置如下：
图表 4
完成后用 c2lint 测试下 profile，会提示找到代码签名配置，如下图：
./c2lint mycs.profile
#c2lint 在 cboaltstrike.jar 同一目录，
图表 5
Ok，接下来运行 CS 连接 teamserver，生成 pyaload，如下图，sign 就可以打勾了：
图表 6
结果发现生成的 exe 或 dll 并没有被签名，而且本地 CS 在终端中报错了如下图：
尼玛～又看遍作者的视频发现没有错误啊
（注意：作者演示的是自签名证书）
图表 7
百度下 keytool 发现是 alias 也有个密码，怀疑 profile 配置文件那个 password 指的是
证书 alias 密码。具体 jks 证书的证书密码和 alias 密码有啥区别我也不知道，然后修改 alias
密码，修改 alias 密码需要原 alias 密码，其实和原证书 pfx 格式的证书密码一样，如下命令
修改，修改为 123456
图表 8
这样再重新加载 profile 生成 exe 或 dll，右键属性发现就会是签名的了，就不截图了
最后补充：
查看官方文档中说是 password 位置说的是 keystore，What the fuck ？
不懂～
一、
文章中涉及的命令总结
Signtool 签名 exe、dll、msi：
signtool.exe sign /f C:\codesign.pfx /p password /t
http://timestamp.globalsign.com/scripts/timestamp.dll C:\Payload.exe
PFX 转换 JKS：
keytool -importkeystore \
-srckeystore codesign.pfx \
-destkeystore codesign.jks \
-srcstoretype PKCS12 \
-deststoretype JKS
查看别名：需要证书密码
keytool -list -keystore codesign.jks
修改别名密码：需要原别名密码
keytool -keypasswd -keystore codesign.jks -alias thealiasname