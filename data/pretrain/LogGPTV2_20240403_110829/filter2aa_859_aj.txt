二进制格式类型
详细
纯二进制格式
C/C++ 编译后的二进制文件
Java 编译后的二进制文件 .class
.NET 编译后的二进制文件
Go 语言编译后的二进制文件
压缩包
Gzip（.gz）、bzip2（.bz2）、ZAP（.zaip,.jar,.apk 和其他衍形式）、7-Zip（.7z）、TAR（.tar）、RAR（.rar）、
ARJ（.arj）、XZ（.xz）、LZMA（.lz）、LZ4（.lz4）、Compress（.Z）、Pack200（.jar）
安装包
Red Hat RPM（.rpm）
Debian package（.deb）
Mac instance（.dmg,.pkg）
Windows installers（.exe,.msi,.cab）
固件格式
Intel HEX、SREC、U-Boot、Android sparse file system、Cisio firmware
软件供应链安全技术白皮书
041
二进制格式类型
详细
文件系统 / 电子盘
ISO 9660/UDF（.iso）、QEMU Copy-On-Write（.qcow2,.img）、VMware VMDK（.vmdk,.ova）、
VirtualBox VDI（.vdi）、Windows Imaging、ext2/3/4、JFFS2、UBIFS、RomFS、FessBSD UFS
容器
Docker Image
（2）特征提取与识别
组件识别通常采用包管理解析、指纹识别两种技术。
● 
包管理解析
通过分析源代码中包含的包管理配置文件，如 Python 项目中的 requirements.txt、NPM
项目中的 package.json 等，直接得到对应的软件组成。包管理解析的执行效率和准确率都很
高，但是单纯的包管理解析，不适用于很多场景，例如： 对没有包管理的一些源码或者一些
二进制文件等 ,  就会产生漏报，如 C 语言本身是没有包管理器的 , 直接在代码中使用了开源
组件的源码 , 因此也就无法判断出来使用了哪些组件。包管理文件也可能存在未定义组件版
本的情况，此时无法定位实际使用的版本，也就无法确定该组件是否存在漏洞。商业软件中
一般会使用包管理解析和指纹识别结合使用的方式，来提高组件识别的覆盖率。
● 
指纹识别
将目标文件进行特征值计算，将计算得到的特征值与组件特征数据库进行比较，匹配组
件信息。特征值计算常用的算法有多种，算法的不同会直接影响分析的准确性和分析效率。
1. 结构化的指纹识别，通过分析一个目录下的结构，来生成指纹做相似度对比，识别开
源组件
2. 特征码的指纹识别，通过识别本地的文件的哈希值，文件的大小信息等，来识别开源
组件
3. 代码片段的指纹识别，通过精细化将代码进行片段化切片，形成代码指纹，比较相似度，
来识别组件
4. 二进制的反编译化的代码指纹，来进行相似度比较，识别组件
5. 字符串搜索和定制化指纹，用来识别非开源组件和第三方商业组件
（3）漏洞检测
将识别出的组件与组件漏洞库进行比对，发现组件中存在的漏洞、许可证授权风险，并
提供解决方案，帮助用户修复问题。
042
软件供应链安全关键技术
（4）SBOM 生成
SBOM 包含软件的所有组件构成以及依赖关系，漏洞、许可证等关键信息，对于供应链
过程中的透明程度至关重要。当前实现 SBOM 的格式有三种：
1、  SPDIX：Linux 基金会的根本投入。该计划是沟通 SBOM 信息的开放标准，包括组件、
许可证、版权和安全引用。
2、  CycloneDX：专为安全上下文和供应链组件分析而构建。
3、 SWID 标记：由记录关于软件组件唯一信息且协助存储管理计划的文件组成。
CycloneDX
SPDX
SPDX Lite
SWID
定义
（Definition）
一种轻量级 SBOM 标
准，设计用于应用程序
安全上下文和供应链组
件分析
一种标准语言，用于以
多种文件格式传达与软
件组件相关的组件、许
可证、版权和安全信息
是 SPDX 的轻量级子
集，适用于不需要完
整 SPDX 的情况。 它旨
在让那些没有开源许可
知识或经验的人易于使
用，并成为“某些行业
中 SPDX 标准和实际工
作流程之间的平衡”。
SWID 标准定义了一个
生命周期，其中 SWID 
标签作为软件产品安
装过程的一部分添加
到端点，并在产品卸
载过程中删除。
历史
（History）
CycloneDX 最初旨在解
决开源组件的漏洞识
别、许可证书合规性和
过时组件分析
核心工作组于 2017 年
起源于 OWASP 社区，
在内部广泛使用后，变
成 OWASP 的开源项目
除了开源信息之外，
CycloneDX 更关注漏洞
和安全性。
Linux 基金会自 2010 
年以来一直在开发和完
善 SPDX。据 Linux 基金
会称，“SPDX 的创建
是为了提供一种通用的
数据交换格式，以便可
以收集和共享有关软件
包和相关内容的信息。”
SPDX 的核心重点一直
是开源许可合规性。
2021 年 SPDX 规范成
为了一个国际的开放标
准： ISO/IEC 5962：
2021
贡献主要由 OpenChain 
日本工作组的行业参与
者领导，包括日立、富
士通、索尼、瑞萨和东
芝。
SPDX Lite 包含在 SPDX  
2.2 版本中
SWID 标签旨在通过在
整个软件生命周期中
更轻松地发现、识别和
关联软件，帮助企业
创建准确的软件清单。 
该标准是更广泛的 ISO 
IT 资产管理标准的一
部分，并得到 NIST 的
支持。
SWID 的第一个版本于 
2009 年发布，然后在 
2015 年进行了修订。
维护者
（Working Group）
核心团队由来自 
OWASP、Sonatype 和 
ServiceNow 的人领导
由 Linux 基金会维护
由 Linux 基金会维护
由 NIST 维护
支持格式
（Format）
XML，JSON，Protocol 
BUffers
RDFa， xlsx， spdx， 
xml，json，yaml
RDFa， xlsx， spdx， 
xml，json，yaml