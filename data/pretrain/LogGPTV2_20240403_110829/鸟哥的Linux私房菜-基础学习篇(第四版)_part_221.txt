另外，如果有特殊需求，你当然可以自订 X client 的参数！这就得要修改你主文件夹下的 ~/.xinitrc 这个文件啰。 不过要注意的是，如果
你的 .xinitrc 配置文件里面有启动的 x client 很多的时候，千万注意将除了最后一个 window manager 或 X Client 之外，都放到背景里面去执行
啊！举例来说，像下面这样：
xclock -geometry 100x100-5+5 &
xterm -geometry 80x50-50+150 &
exec /usr/bin/twm
意思就是说，我启动了 X ，并且同时启动 xclock / xterm / twm 这三个 X clients 喔！ 如此一来，你的 X 就有这三个咚咚可以使用了！如
果忘记加上 & 的符号，那就..... 会让系统等待啊，而无法一次就登陆 X 呢！
X 启启动动的的端端口口
好了，根据上面的说明，我们知道要在文本界面下面启动 X 时，直接使用 startx 来找到 X server 与 X client 的参数或配置文件， 然后再
调用 xinit 来启动 X 窗口系统。xinit 先载入 X server 到默认的 :0 这个显示接口，然后再载入 X client 到这个 X 显示接口上。而 X client 通常就是
GNOME 或 KDE ，这两个设置也能够在 /etc/sysconfig/desktop 里面作好设置。最后我们想要了解的是，既然 X 是可以跨网络的，那 X 启动的
端口是几号？
其实，CentOS 由于考虑 X 窗口是在本机上面运行，因此将端口改为插槽档 （socket） 了，因此你无法观察到 X 启动的端口的。事实
上， X server 应该是要启动一个 port 6000 来与 X client 进行沟通的！ 由于系统上面也可能有多个 X 存在，因此我们就会有 port 6001, port
6002... 等等。这也就是说：（假设为 multi-user.target 模式， 且用户仅曾经切换到 tty1 而已）
X 窗口系统 显示接口号码 默认终端机 网络监听端口
第一个 X hostname:0 tty2 port 6000
第二个 X hostname:1 tty3 port 6001
在 X Window System 的环境下，我们称 port 6000 为第 0 个显示接口，亦即为 hostname:0 ， 那个主机名称通常可以不写，所以就成了
:0 即可。在默认的情况下，第一个启动的 X （不论是启动在第几个 port number） 是在 tty2 ，亦即按下 [ctrl]+[Alt]+[F2] 那个画面。 而起动的第
二个 X （注意到了吧！可以有多个 X 同时启动在您的系统上呢） 则默认在 tty3 亦即 [ctrl]+[Alt]+[F3] 那个画面呢！很神奇吧！ ^_^
如前所述，因为主机上的 X 可能有多个同时存在，因此，当我们在启动 X Server / Client 时， 应该都要注明该 X Server / Client 主要是
提供或接受来自哪个 display 的 port number 才行。
好了，我们可以针对 X Server 与 X client 的架构来做个简单的测试喔！ 这里鸟哥假设你的 tty1 是 multi-user.target 的，而且你也曾经在
tty2 测试过相关的指令，所以你的 X :1 将会启用在 tty3 喔！ 而且，下面的指令都是在 tty1 的地方执行的，至于下面的画面则是在 tty3 的地方展
现。 因此，请自行切换 tty1 下达指令与 tty3 查阅结果啰！
1. 先来启动第一个 X 在 :1 画面中：
[dmtsai@study ~]$ X :1 &
图23.1.3、单纯启动 X server的情况
上述的 X 是大写，那个 :1 是写在一起的，至于 & 则是放到背景去执行。此时系统会主动的跳到第二个图形接口终端机，亦即 tty8 上
喔！所以如果一切顺利的话，你应该可以看到一个 X 的鼠标光标可以让你移动了（如上图所示）。 该画面就是 X Server 启动的画面啰！丑丑
的，而且没有什么 client 可以用啊！ 接下来，请按下 [ctrl]+[alt]+[F1] 回到刚刚下达指令的终端机： （若没有 xterm 请自行 yum 安装它！）
2. 输入数个可以在 X 当中执行的虚拟终端机
[dmtsai@study ~]$ xterm -display :1 &
[dmtsai@study ~]$ xterm -display :1 &
图23.1.4、在 X 上面启动 xterm 终端机显示的结果
那个 xterm 是必须要在 X 下面才能够执行的终端机接口。加入的参数 -display 则是指出这个 xterm 要在那个 display 使用的。这两个指
令请不要一次下完！先执行一次，然后按下 [ctrl]+[alt]+[F3] 去到 X 画面中，你会发现多了一个终端机啰～ 不过，可惜的是，你无法看到终端机
的标题、也无法移动终端机，当然也无法调整终端机的大小啊！我们回到刚刚的 tty1 然后再次下达 xterm 指令，理论上应该多一个终端机，去
到 tty3 查阅一下。唉～没有多出一个终端机啊？ 这是因为两个终端机重叠了～我们又无法移动终端机，所以只看到一个。 接下来，请再次回
到 tty1 去下达指令吧！（可能需要 yum install xorg-x11-apps 喔！）
3. 在输入不同的 X client 观察观察，分别去到 tty3 观察喔！
[dmtsai@study ~]$ xclock -display :1 &
[dmtsai@study ~]$ xeyes -display :1 &
图23.1.5、分别启动 xclock 时钟与 xeyes 眼睛的结果
跟前面一样的，我们又多执行了两个 X client ，其中 xclock 会显示时钟，而 xeyes 则是会出现一双大眼睛来盯着光标！ 你可以移动一下
光标就可以发现眼睛的焦聚会跑啊 ^_^！不过，目前的四个 X client 通通不能够移动与放大缩小！ 如此一来，你怎么在 xterm 下面下达指令
啊？当然就很困扰～所以让我们来载入最阳春的窗口管理员吧！
4. 输入可以管理的 window manager，我们这边先以 root 来安装 twm 喔！
[root@study ~]# yum install http://ftp.ksu.edu.tw/FTP/CentOS/6/os/x86_64/\
> Packages/xorg-x11-twm-1.0.3-5.1.el6.x86_64.rpm
# 真要命！CentOS 7 说 twm 已经没有在维护，所以没有提供这玩意儿了！鸟哥只好拿旧版的 twm 来安装！
# 请您自行到相关的网站上找寻这个 twm 啰！因为版本可能会不一样！
[root@study ~]# yum install xorg-x11-fonts-{100dpi,75dpi,Type1}
5. 接下来就可以开始用 dmtsai 的身份来玩一下这玩意儿了！
[dmtsai@study ~]$ twm -display :1 &
图23.1.6、窗口管理员 twm 的功能显示
回到 tty1 后，用最简单的 twm 这个窗口管理员来管理我们的 X 吧！输入之后，去到 tty3 看看，用鼠标移动一下终端机看看？可以移动
了吧？也可以缩小放大窗口啰～同时也出现了标题提示啰～也看到两个终端机啦！ 现在终于知道窗口管理员的重要性了吧？ ^_^！在黑屏幕地
方按下鼠标右键，就会出现类似上面画面最右边的菜单， 你就可以进行额外的管理啰～玩玩看先！
6. 将所有刚刚创建的 X 相关工作全部杀掉！
[dmtsai@study ~]# kill %6 %5 %4 %3 %2 %1
很有趣的一个小实验吧～通过这个实验，你应该会对 X server 与 Window manager 及 tty3 以后的终端接口使用方式有比较清楚的了解～
加油！
谈了这么多 X 窗口系统方面的信息后，再来聊聊，那么你的 Linux 主机是否需要默认就启动 X 窗口呢？ 一般来说，如果你的 Linux 主机
定位为网络服务器的话，那么由于 Linux 里面的主要服务的配置文件都是纯文本的格式文件， 相当的容易设置的，所以啊，根本就是不需要 X
Window 存在呢！因为 X Window 仅是 Linux 系统内的一个软件而已啊！
但是万一你的 Linux 主机是用来作为你的桌上计算机用的，那么 X Window 对你而言，就是相当重要的一个咚咚了！因为我们日常使用
的办公室软件，都需要使用到 X Window 图形的功能呢！此外，以鸟哥的例子来说，俺之前接触到的数值分析模式，需要利用图形处理软件来
将数据读取出来， 所以在那部 Linux 主机上面，我一定需要 X Window 的。
由于目前的主机系统配备已经很不错，除非你使用的是单版计算机，否则桌面电脑、笔记本电脑的系统配备要拿来跑 X window 大概都
不是问题！ 所以，是否默认要启用你的 X window 系统，完全掌握在你的服务器用途考虑上啰！！
从前面的说明来看，我们知道一个 X 窗口系统能不能成功启动，其实与 X Server 有很大的关系的。因为 X Server 负责的是整个画面的
描绘，所以没有成功启动 X Server 的话，即使有启动 X Client 也无法将图样显示出来啊。所以，下面我们就针对 X Server 的配置文件来做个
简单的说明，好让大家可以成功的启动 X Window System 啊。
基本上， X Server 管理的是显卡、屏幕分辨率、鼠标按键对应等等，尤其是显卡芯片的认识，真是重要啊。 此外，还有显示的字体也
是 X Server 管理的一环。基本上，X server 的配置文件都是默认放置在 /etc/X11 目录下，而相关的显示模块或上面提到的总总模块，则主要放
置在 /usr/lib64/xorg/modules 下面。比较重要的是字体文件与芯片组，她们主要放置在:
提供的屏幕字体: /usr/share/X11/fonts/
显卡的芯片组: /usr/lib64/xorg/modules/drivers/
在 CentOS 下面，这些都要通过一个统一的配置文件来规范，那就是 X server 的配置文件啦。这个配置文件的文件名就是
/etc/X11/xorg.conf 喔！
如同前几个小节谈到的，在 Xorg 基金会里面的 X11 版本为 X11R7.N ，那如果你想要知道到底你用的 X Server 版本是第几版，可以使
用 X 指令来检查喔！（你必须以 root 的身分执行下列指令）
[root@study ~]# X -version
X.Org X Server 1.15.0
Release Date: 2013-12-27
X Protocol Version 11, Revision 0
Build Operating System: 2.6.32-220.17.1.el6.x86_64
Current Operating System: Linux study.centos.vbird 3.10.0-229.el7.x86_64 #1 SMP Fri Mar
6 11:36:42 UTC 2015 x86_64
Kernel command line: BOOT_IMAGE=/vmlinuz-3.10.0-229.el7.x86_64 root=/dev/mapper/centos-
root ro rd.lvm.lv=centos/root rd.lvm.lv=centos/swap crashkernel=auto rhgb quiet
Build Date: 10 April 2015 11:44:42AM
Build ID: xorg-x11-server 1.15.0-33.el7_1
Current version of pixman: 0.32.4
Before reporting problems, check http://wiki.x.org
to make sure that you have the latest version.
由上面的几个关键字我们可以知道，目前鸟哥的这部测试机使用的 X server 是 Xorg 计划所提供的 X11 版， 不过看起来 Xorg 已经将所
谓的 X11R7 那个 R7 的版次移除，使用的是 Xorg 自己的版次了！所以是 Xorg 1.15.0 版本！ 此外，若有问题则可以到 http://wiki.x.org 去查询
～因为是 Xorg 这个 X server ，因此我们的配置文件文件名为 /etc/X11/xorg.conf 这一个哩。所以，理解这个文件的内容对于 X server 的功能来
说，是很重要的。
比较需要留意的是，从 CentOS 6 以后 （当然包含 CentOS 7），X server 在每次启动的时候都会自行侦测系统上面的显示芯片、屏幕
类型等等， 然后自行搭配最优化的驱动程序载入。因此，这个 /etc/X11/xorg.conf 已经不再被需要了。不过，如果你不喜欢 X 系统自行侦测的
设置值， 那也可以自行创建 xorg.conf 就是了。
此外，如果你只想要加入或者是修改部份的设置，并不是每个元件都要自行设置的话，那么可以在 /etc/X11/xorg.conf.d/ 这个目录下创
建文件名为 .conf 的文件， 将你需要的额外项目加进去即可喔！那就不会每个设置都以你的 xorg.conf 为主了！了解乎？
Tips
那我怎么知道系统用的是哪一个设置呢？可以参考 /var/log/Xorg.0.log 的内容，该文件前几行会告诉你使用的设置文件是来自于哪里的喔！
注意一下，在修改这个文件之前，务必将这个文件给它备份下来，免的改错了什么东西导致连 X server 都无法启动的问题啊。这个文件
的内容是分成数个段落的，每个段落以 Section 开始，以 EndSection 结束， 里面含有该 Section （段落） 的相关设置值，例如:
Section "section name"
…… <<==== 与与这这个个 sseeccttiioonn nnaammee 有有关关的的设设置置项项目目
……
EndSection
至于常见的 section name 主要有:
1. Module: 被载入到 X Server 当中的模块 （某些功能的驱动程序）；
2. InputDevice: 包括输入的 1. 键盘的格式 2. 鼠标的格式，以及其他相关输入设备；
3. Files: 设置字体所在的目录位置等；
4. Monitor: 监视器的格式， 主要是设置水平、垂直的更新频率，与硬件有关；
5. Device: 这个重要，就是显卡芯片组的相关设置了；
6. Screen: 这个是在屏幕上显示的相关分辨率与色彩深度的设置项目，与显示的行为有关；
7. ServerLayout: 上述的每个项目都可以重复设置，这里则是此一 X server 要取用的哪个项目值的设置啰。
前面说了，xorg.conf 这个文件已经不存在，那我们怎么学习呢？没关系，Xorg 有提供一个简单的方式可以让我们来重建这个 xorg.conf
文件！ 同时，这可能也是 X 自行侦测 GPU 所产生的最优化设置喔！怎么处理呢？假设你是在 multi-user.target 的环境下，那就可以这样作来
产生 xorg.conf 喔！
[root@study ~]# Xorg -configure
.....（前面省略）.....