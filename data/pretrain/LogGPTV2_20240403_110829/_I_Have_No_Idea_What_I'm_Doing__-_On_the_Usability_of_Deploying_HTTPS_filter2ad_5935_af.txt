# References

[32] B. Möller, T. Duong, and K. Kotowicz. "This POODLE Bites: Exploiting The SSL 3.0 Fallback." Google, September 2014.

[33] M. Oltrogge, Y. Acar, S. Dechand, M. Smith, and S. Fahl. "To Pin or Not to Pin—Helping App Developers Bullet Proof Their TLS Connections." In *USENIX Security Symposium*, pages 239–254. USENIX Association, August 2015.

[34] J. Payne, G. Jenkinson, F. Stajano, M. A. Sasse, and M. Spencer. "Responsibility and Tangible Security: Towards a Theory of User Acceptance of Security Tokens." *arXiv preprint arXiv:1605.03478*, 2016.

[35] E. M. Redmiles, A. R. Malone, and M. L. Mazurek. "I Think They’re Trying to Tell Me Something: Advice Sources and Selection for Digital Security." In *2016 IEEE Symposium on Security and Privacy (SP)*, pages 272–288, May 2016.

[36] I. Ristic. "Internet SSL Survey 2010." *Black Hat USA*, 2010.

[37] Y. Sheffer, R. Holz, and P. Saint-Andre. "Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)." *RFC 7457 (Proposed Standard)*, 2015.

[38] Y. Sheffer, R. Holz, and P. Saint-Andre. "Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)." *RFC 7525 (Proposed Standard)*, 2015.

[39] E. Stobert and R. Biddle. "The Password Life Cycle: User Behaviour in Managing Passwords." In *Symposium On Usable Privacy and Security (SOUPS)*, pages 243–255. USENIX Association, July 2014.

[40] S. C. Sundaramurthy, A. G. Bardas, J. Case, X. Ou, M. Wesch, J. McHugh, and S. R. Rajagopalan. "A Human Capital Model for Mitigating Security Analyst Burnout." In *Symposium On Usable Privacy and Security (SOUPS)*, pages 347–359. USENIX Association, 2015.

[41] J. Sunshine, S. Egelman, H. Almuhimedi, N. Atri, and L. F. Cranor. "Crying Wolf: An Empirical Study of SSL Warning Effectiveness." In *USENIX Security Symposium*, pages 399–416. USENIX Association, 2009.

[42] B. VanderSloot, J. Amann, M. Bernhard, Z. Durumeric, M. Bailey, and J. A. Halderman. "Towards a Complete View of the Certificate Ecosystem." In *Internet Measurement Conference*, pages 543–549. ACM, 2016.

[43] S. Weber, M. Harbach, and M. Smith. "Participatory Design for Security-Related User Interfaces." In *USEC*. Internet Society, February 2015.

[44] K. Yakdan, S. Dechand, E. Gerhards-Padilla, and M. Smith. "Helping Johnny to Analyze Malware: A Usability-Optimized Decompiler and Malware Analysis User Study." In *2016 IEEE Symposium on Security and Privacy (SP)*, pages 158–177, May 2016.

---

## Appendix

### Recruitment Questionnaire

- **Which of the following directives is used to host two different websites (www.website1.com and www.website2.com) within the same Apache web server?**
  - NamedHost
  - WebRoot
  - VirtualHost
  - ServerRoot

- **Certificate files are usually located at?**
  - /root/ssl/certs
  - /etc/ssl/certs
  - /tmp/certs
  - /var/www/static/certs

- **CSR means...**
  - Common-name signing request
  - Comodo signing request
  - Certificate signing request
  - Cross-site request

- **Which is the best file permission for your private keys on a Linux system?**
  - 0777
  - 0300
  - 0664
  - 0600

- **Which command is used to find out the currently used IPs?**
  - ifconfig
  - netstat
  - ipconfig
  - iptables

- **Which files can the user `www-data` read?**
  - -rw------- root root filename
  - -rw------- www www-data filename
  - -rwxrwxrwx root root filename
  - -rw-rw---- root www-data filename

- **Which command is used to switch the user in Linux?**
  - sudo
  - su
  - root
  - switchuser

- **A symlink is created with which command?**
  - ls -s TARGET LINK_NAME
  - symlink TARGET LINK_NAME
  - ln -s TARGET LINK_NAME
  - ln TARGET LINK_NAME

- **TLS uses...**
  - Symmetric cryptography
  - Asymmetric cryptography
  - PEM/DER certificates
  - X.509

- **TLS is...**
  - Computationally very expensive
  - Complex to configure correctly
  - Originally invented by Facebook
  - Easy to buy using cloud services

- **Which of the following commands is used to save a file in vim (Vi Improved)?**
  - Ctrl + S
  - Ctrl + X
  - Esc; :s
  - Esc; :w

- **Which command restarts the web server?**
  - sudo service apache2 restart
  - sudo /etc/init.d/apache2 restart
  - sudo service webserver restart
  - sudo service IIS restart

- **The web server has to have access to?**
  - The private key used for TLS
  - The certificate used for TLS
  - The certificate authority private key for TLS
  - The certificate signing request used for TLS

- **Where are HTML files served by the Apache Web server located after default installation?**
  - /usr/share/nginx/www
  - /etc/www
  - /var/www
  - /home/www

### Lab Study Assignment

**Scenario:**
You are the system administrator at a small and medium-sized enterprise (SME). Your company runs a web portal, and your boss has instructed you to secure the communication by using TLS. Unfortunately, you only have a very limited amount of time because your company will soon be under a security audit. This is why you should start right away deploying TLS. Make your configuration as secure as possible.

### Reflections on the Study Task

- **Did you finish the TLS installation in the given time?** (Yes, No, I’m not sure)
- **If you didn’t finish the TLS installation in the given time, which steps are still missing to secure the communication?** (Open text)
- **How difficult did you find TLS deployment?** (Likert scale: very easy to very difficult)
- **What did you find particularly difficult?** (Open text)
- **What do you think are the key usability pitfalls of TLS deployment?** (Open text)
- **What would you recommend a system administrator who has to deploy TLS?** (Open text)
- **Is there anything else you would like to let us know?** (Open text)

### Interview Questions - Expert Interviews

- **As an auditor, how do you usually proceed to evaluate the security of a TLS configuration?**
- **What are the main vulnerabilities/configuration mistakes that you encounter as an auditor?**
- **What bothers admins/CSOs the most regarding TLS?**
- **What are the most critical steps in TLS deployment?**
- **How should the deployment process be improved?**
- **What piece of advice would you generally give to anyone in charge of securing communication over HTTPS?**

### Detailed Evaluation Criteria

- **Grade:** The overall grade for the configuration with a valid certificate. The grade is calculated based on the grading scheme from [2]. The score is based on individual ratings for protocol support (30%), key exchange (30%), and cipher strength (40%). The grade is issued based on the following cumulative scores:
  - A: score >= 80
  - B: score >= 65
  - C: score >= 50
  - D: score >= 35
  - E: score >= 20
  - F: score < 20

- **Key Exchange Score:** As described in [2], the key exchange phase serves two functions: (1) authentication to verify the identity of the other party and (2) safe generation and exchange of secret keys to be used for the remaining session. Exportable key exchanges where only a part of the key is exchanged can make the session keys easier to compromise. Key exchange without authentication is vulnerable to MITM attacks and allows an attacker to gain access to the communication channel. Furthermore, the strength of the server’s private key is crucial. The stronger it is, the more difficult it is to break the key exchange phase. Some servers use the private key just for authentication and not for the key exchange mechanism. Popular algorithms are the Diffie-Hellman key exchange (DHE) and its elliptic curve version (ECDHE). The rating is calculated as follows:
  - Weak key or anonymous key exchange (e.g., Anonymous Diffie-Hellman): 0
  - Key or DH parameter strength = 4096 bits: 100

- **Protocol Support Score [2]:** Several (older) versions of TLS have known weaknesses or are vulnerable to well-known attacks. The configuration is graded as follows with respect to the activated TLS versions. If multiple versions are supported, the average between the best and worst protocol score is considered.
  - SSL 2.0: 0
  - SSL 3.0: 80
  - TLS 1.0: 90
  - TLS 1.1: 95
  - TLS 1.2: 100

- **Common Name:** This refers to the common name field specified in the CSR, which specifies a Fully Qualified Domain Name (FQDN) (and respective subdomains if applicable) the certificate is issued for.

- **Key Size:** This refers to the size of the server’s key pair.

- **Certificate Chain Length:** This refers to the length of the certificate chain, including the server’s certificate and certificates of intermediate CAs, and the certificate of a root CA trusted by all parties in the chain. Every intermediate CA in the chain holds a certificate issued by the CA one level above it in the trust hierarchy. In our example, the ideal length is 3.

- **Used Provided CA to Sign:** To remove the bias from different CAs with varying usability, we implemented our own CA and provided the link to this CA in the assignment. Two participants did not use this CA and generated self-signed certificates instead.

- **Encrypted Private Key:** Indicates whether the server’s private key was encrypted by the study participant.

- **SSL 2 – TLS 1.2 Supported:** Indicates which protocol versions are supported.

- **RC4 Support:** RC4 is considered weak and should therefore not be supported, unless required for compatibility reasons as found in [10].

- **Vulnerable to POODLE:** Indicates whether the configuration is vulnerable to POODLE [32].

- **Forward Secrecy:** Indicates whether the configuration supports ciphers with forward secrecy (e.g., ECDHE).

- **HSTS (HTTP Strict Transport Security):** Indicates whether HTTP Strict Transport Security is configured. The security benefit of HSTS is that it forces secure communication with websites that use it by automatically converting all plain text and disabling click-through certificate warnings. If a client does not support HSTS, it simply ignores the header. Hence, activating HSTS enhances security with minimal effort without impact on compatibility.

- **HPKP (Public Key Pinning):** Indicates whether Public Key Pinning is used, which is a useful feature to prevent attacks and making the public aware of them.