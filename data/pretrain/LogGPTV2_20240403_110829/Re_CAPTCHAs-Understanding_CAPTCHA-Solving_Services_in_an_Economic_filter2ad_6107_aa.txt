title:Re: CAPTCHAs-Understanding CAPTCHA-Solving Services in an Economic
Context
author:Marti Motoyama and
Kirill Levchenko and
Chris Kanich and
Damon McCoy and
Geoffrey M. Voelker and
Stefan Savage
Re: CAPTCHAs – Understanding CAPTCHA-Solving Services in an
Economic Context
Marti Motoyama, Kirill Levchenko, Chris Kanich, Damon McCoy,
Geoffrey M. Voelker and Stefan Savage
{mmotoyam, klevchen, ckanich, dlmccoy, voelker, savage}@cs.ucsd.edu
University of California, San Diego
Abstract
Reverse Turing tests, or CAPTCHAs, have become an
ubiquitous defense used to protect open Web resources
from being exploited at scale. An effective CAPTCHA
resists existing mechanistic software solving, yet can
be solved with high probability by a human being. In
response, a robust solving ecosystem has emerged, re-
selling both automated solving technology and real-
time human labor to bypass these protections. Thus,
CAPTCHAs can increasingly be understood and evaluated
in purely economic terms; the market price of a solution
vs the monetizable value of the asset being protected. We
examine the market-side of this question in depth, ana-
lyzing the behavior and dynamics of CAPTCHA-solving
service providers, their price performance, and the un-
derlying labor markets driving this economy.
1
Introduction
Questions of Internet security frequently reﬂect under-
lying economic forces that create both opportunities and
incentives for exploitation. For example, much of today’s
Internet economy revolves around advertising revenue,
and consequently, a vast array of services—including e-
mail, social networking, blogging—are now available to
new users on a basis that is both free and largely anony-
mous. The implicit compact underlying this model is that
the users of these services are individuals and thus are
effectively “paying” for services indirectly through their
unique exposure to ad content. Unsurprisingly, attack-
ers have sought to exploit this same freedom and acquire
large numbers of resources under singular control, which
can in turn be monetized (e.g., via thousands of free Web
mail accounts for sourcing spam e-mail messages).
CAPTCHAs were developed as a means to limit the
ability of attackers to scale their activities using auto-
mated means. In its most common implementation, a
CAPTCHA consists of a visual challenge in the form of
alphanumeric characters that are distorted in such a way
that available computer vision algorithms have difﬁculty
segmenting and recognizing the text. At the same time,
humans, with some effort, have the ability to decipher
the text and thus respond to the challenge correctly. To-
day, CAPTCHAs of various kinds are ubiquitously de-
ployed for guarding account registration, comment post-
ing, and so on.
This innovation has, in turn, attached value to the
problem of solving CAPTCHAs and created an indus-
trial market. Such commercial CAPTCHA solving comes
in two varieties: automated solving and human labor.
The ﬁrst approach deﬁnes a technical arms race between
those developing solving algorithms and those who de-
velop ever more obfuscated CAPTCHA challenges in re-
sponse. However, unlike similar arms races that revolve
around spam or malware, we will argue that the underly-
ing cost structure favors the defender, and consequently,
the conscientious defender has largely won the war.
The second approach has been transformative, since
the use of human labor to solve CAPTCHAs effectively
side-steps their design point. Moreover, the combination
of cheap Internet access and the commodity nature of
today’s CAPTCHAs has globalized the solving market;
in fact, wholesale cost has dropped rapidly as providers
have recruited workers from the lowest cost labor mar-
kets. Today, there are many service providers that can
solve large numbers of CAPTCHAs via on-demand ser-
vices with retail prices as low as $1 per thousand.
In either case, we argue that the security of CAPTCHAs
can now be considered in an economic light. This prop-
erty pits the underlying cost of CAPTCHA solving, ei-
ther in amortized development time for software solvers
or piece-meal in the global labor market, against the
value of the asset it protects. While the very existence of
CAPTCHA-solving services tells us that the value of the
associated assets (e.g., an e-mail account) is worth more
to some attackers than the cost of solving the CAPTCHA,
the overall shape of the market is poorly understood. Ab-
(a) Aol.
(b) mail.ru
(c) phpBB 3.0
(d) Simple Machines Forum
(e) Yahoo!
(f) youku
Figure 1: Examples of CAPTCHAs from various Internet properties.
sent this understanding, it is difﬁcult to reason about the
security value that CAPTCHAs offer us.
This paper investigates this issue in depth and, where
possible, on a empirical basis. We document the commer-
cial evolution of automated solving tools (particularly via
the successful Xrumer forum spamming package) and
how they have been largely eclipsed by the emergence
of the human-based CAPTCHA-solving market. To char-
acterize this latter development, our approach is to en-
gage the retail CAPTCHA-solving market on both the sup-
ply side and the demand side, as both a client and as
“workers for hire.” In addition to these empirical mea-
surements, we also interviewed the owner and operator
of a successful CAPTCHA-solving service (MR. E), who
has provided us both validation and insight into the less
visible aspects of the underlying business processes.1 In
the course of our analysis, we attempt to address key
questions such as which CAPTCHAs are most heavily tar-
geted, the rough solving capacity of the market leaders,
the relationship of service quality to price, the impact
of market transparency and arbitrage, the demographics
of the underlying workforce and the adaptability of ser-
vice offerings to changes in CAPTCHA content. We be-
lieve our ﬁndings, or at least our methodology, provide
a context for reasoning about the net value provided by
CAPTCHAs under existing threats and offer some direc-
tions for future development.
The remainder of this paper is organized as fol-
lows: Section 2 reviews CAPTCHA design and provides
a qualitative history and overview of the CAPTCHA-
solving ecosystem. Next, in Section 3 we empirically
characterize two automated solver systems, the popular
Xrumer package and a specialized reCaptcha solver. In
Sections 4 and 5 we then characterize today’s human-
powered CAPTCHA-solving services, ﬁrst describing our
1By agreement, we do not identify MR. E or the particular service
he runs. While we cannot validate all of his statements, when we tested
his service empirically our results for measures such as response time,
accuracy, capacity and labor makeup were consistent with his reports,
supporting his veracity.
2
data collection approach and then presenting our experi-
ments to measure key qualities such as response time, ac-
curacy, and capacity. Section 6 describes the demograph-
ics of the CAPTCHA-solving labor pool. Finally, we dis-
cuss the implications of our results in Section 7 along
with potential directions for future research.
2 Background
The term “CAPTCHA” was ﬁrst introduced in 2000 by
von Ahn et al. [21], describing a test that can differentiate
humans from computers. Under common deﬁnitions [4],
the test must be:
• Easily solved by humans,
• Easily generated and evaluated, but
• Not easily solved by computer.
Over the past decade, a number of different techniques
for generating CAPTCHAs have been developed, each
satisfying the properties described above to varying de-
grees. The most commonly found CAPTCHAs are visual
challenges that require the user to identify alphanumeric
characters present in an image obfuscated by some com-
bination of noise and distortion.2 Figure 1 shows ex-
amples of such visual CAPTCHAs. The basic challenge
in designing these obfuscations is to make them easy
enough that users are not dissuaded from attempting a so-
lution, yet still too difﬁcult to solve using available com-
puter vision algorithms.
The issue of usability has been studied on a functional
level—focusing on differences in expected accuracy and
response time [3, 19, 22, 26]—but the ultimate effect of
CAPTCHA difﬁculty on legitimate goal-oriented users is
not well documented in the literature. That said, Elson et
al. provide anecdotal evidence that “even relatively sim-
ple challenges can drive away a substantial number of po-
2There exists a range of non-textual and even non-visual CAPTCHAs
that have been created but, excepting Microsoft’s Asirra [9], we do not
consider them here as they play a small role in the current CAPTCHA-
solving ecosystem.
tential customers” [9], suggesting CAPTCHA design re-
ﬂects a real trade-off between protection and usability.
The second challenge, defeating automation, has re-
ceived far more attention and has kicked off a competi-
tion of sorts between those building ever more sophisti-
cated algorithms for breaking CAPTCHAs and those cre-
ating new, more obfuscated CAPTCHAs in response [7,
11, 16, 17, 18, 25]. In the next section we examine this
issue in more depth and explain why, for economic rea-
sons, automated solving has been relegated to a niche
status in the open market.
Finally, an alternative regime for solving CAPTCHAs
is to outsource the problem to human workers. Indeed,
this labor-based approach has been commoditized and
today a broad range of providers operate to buy and sell
CAPTCHA-solving service in bulk. We are by no means
the ﬁrst to identify the growth of this activity. In particu-
lar, Danchev provides an excellent overview of several
CAPTCHA-solving services in his 2008 blog post “In-
side India’s CAPTCHA solving economy” [5]. We are,
however, unaware of signiﬁcant quantitative analysis of
the solving ecosystem and its underlying economics. The
closest work to our own is the complementary study of
Bursztein et al. [3] which also uses active CAPTCHA-
solving experiments, but is focused primarily on the issue
of CAPTCHA difﬁculty rather than the underlying busi-
ness models.
3 Automated Software Solvers
From the standpoint of an adversary, automated solv-
ing offers a number of clear advantages, including both
near-zero marginal cost and near-inﬁnite capacity. At
a high level, automated CAPTCHA solving combines
segmentation algorithms, designed to extract individ-
ual symbols from a distorted image, with basic op-
tical character recognition (OCR) to identify the text
present in CAPTCHAs. However, building such algo-
rithms is complex (by deﬁnition, since CAPTCHAs are
designed to evade existing vision techniques), and auto-
mated CAPTCHA solving often fails to replicate human
accuracy. These constraints have in turn inﬂuenced the
evolution of automated CAPTCHA solving as it transi-
tioned from a mere academic contest to an issue of com-
mercial viability.
3.1 Empirical Case Studies
We explore these issues empirically through two rep-
resentative examples: Xrumer, a mature forum spam-
ming tool with integrated support for solving a range
of CAPTCHAs and reCaptchaOCR, a modern specialized
solver that targets the popular reCaptcha service.
Xrumer
Xrumer [24] is a well-known forum spamming tool,
widely described on “blackhat” SEO forums as being one
of the most advanced tools for bypassing many differ-
ent anti-spam mechanisms, including CAPTCHAs. It has
been commercially available since 2006 and currently re-
tails for $540, and we purchased a copy from the au-
thor at this price for experimentation. While we would
have liked to include several other well known spamming
tools (SEnuke, AutoPligg, ScrapeBox, etc), the cost of
these packages range from $97 to $297, which would
render this study prohibitively expensive.
Xrumer’s market success in turn led to a surge of
spam postings causing most service providers targeted
by Xrumer to update their CAPTCHAs. This development
kicked off an “arms race” period in Xrumer’s evolution
as the author updated solvers to overcome these obsta-
cles. Version 5.0 of Xrumer was released in October of
2008 with signiﬁcantly improved support for CAPTCHA
solving. We empirically veriﬁed that 5.0 was capable
of solving the default CAPTCHAs for then current ver-
sions of a number of major message boards, including:
Invision Power Board (IPB) version 2.3.0, phpBB ver-
sion 3.0.2, Simple Machine Forums (SMF) version 1.1.6,
and vBulletin version 3.6. These systems responded in
kind, and when we installed versions of these packages
released shortly after Xrumer 5.0 (in particular, phpBB
and vBulletin) we veriﬁed that their CAPTCHAs had been
modiﬁed to defeat Xrumer’s contemporaneous solver.
Today, we have found that the only major message fo-
rum software whose default CAPTCHA Xrumer can solve
is Simple Machines Forum (SMF).
With version 5.0.9 (released August 2009), Xrumer
added integration for human-based CAPTCHA-solving
services: Anti-Captcha (an alias for Antigate) and
CaptchaBot. We take this as an indication that the author
of Xrumer found the ongoing investment in CAPTCHA-
solving software to be insufﬁcient to support customer
requirements.3 That said, Xrumer can be conﬁgured
to use a hybrid software/human based approach where
Xrumer detects instances of CAPTCHAs vulnerable to its
automated solvers and uses human-based solvers oth-
erwise. In the current version of Xrumer (5.0.12), the
CAPTCHA-related development seems to focus on sup-
porting automatic navigation and CAPTCHA “extraction”
(detecting the CAPTCHA and identifying the image ﬁle
to send to the human-based CAPTCHA-solving service)
of more Web sites, as well as evading other anti-spam
techniques.
3The developers of Xrumer have recently been advertising en-
hanced CAPTCHA-solving functionality in their forthcoming “7.0 Elite”
version (including support for reCaptcha), but the release date has been
steadily postponed and, as of this writing (June 2010), version 5.0.12 is
the latest.
3
When compared with developers targeting “high-
value” CAPTCHAs (e.g., reCaptcha, Microsoft, Yahoo,
Google, etc.), Xrumer has mostly targeted “weaker”
CAPTCHAs and seems to have a policy of only includ-
ing highly efﬁcient and accurate software-based solvers.
In our tests, all but one included solver required a second
or less per CAPTCHA (on a netbook class computer with
only a 1.6-GHz Intel Atom CPU) and had an accuracy of
100%. The one more difﬁcult case was the solver for the
phpBB version 3 forum software with the GD CAPTCHA
generator and foreground noise. In this case, Xrumer had
an accuracy of only 35% and required 6–7 seconds per
CAPTCHA to execute.
reCaptchaOCR
At the other end of the spectrum, we obtained a spe-
cialized solver focused singularly on the popular re-
Captcha service. Wilkins developed the solver as a proof
of concept [23]. The existence of this OCR-based re-
Captcha solver was reported in a blog posting on De-
cember 15, 2009 [6]. Although developed to defeat an
earlier version of reCaptcha CAPTCHAs (Figure 2a), re-
CaptchaOCR was also able to defeat the CAPTCHA vari-
ant in use at the time of release (Figure 2b). Subse-
quently, reCaptcha changed their CAPTCHA-generation
code again to the version as of this writing (Figure 2c).
The tool has not been updated to solve this new variant.
We tested reCaptchaOCR on 100 randomly selected
CAPTCHAs of the early 2008 variant and 100 randomly