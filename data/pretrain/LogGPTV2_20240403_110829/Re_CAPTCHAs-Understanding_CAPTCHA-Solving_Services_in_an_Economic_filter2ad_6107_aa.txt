# Title: Understanding CAPTCHA-Solving Services in an Economic Context

## Authors:
- Marti Motoyama
- Kirill Levchenko
- Chris Kanich
- Damon McCoy
- Geoffrey M. Voelker
- Stefan Savage

**Affiliation:**
University of California, San Diego

**Contact:**
{mmotoyam, klevchen, ckanich, dlmccoy, voelker, savage}@cs.ucsd.edu

## Abstract
Reverse Turing tests, or CAPTCHAs, have become a ubiquitous defense mechanism for protecting open web resources from large-scale exploitation. An effective CAPTCHA is designed to resist automated software solving while being solvable by humans with high probability. In response to this, a robust ecosystem has emerged, offering both automated solving technology and real-time human labor to bypass these protections. Consequently, the security and effectiveness of CAPTCHAs can increasingly be evaluated in economic terms, considering the market price of a solution versus the monetizable value of the asset being protected. This paper examines the market dynamics of CAPTCHA-solving services, including the behavior and pricing of service providers, and the underlying labor markets driving this economy.

## 1. Introduction
Internet security often reflects underlying economic forces that create opportunities and incentives for exploitation. For instance, much of today's internet economy revolves around advertising revenue, leading to the availability of numerous free and largely anonymous services such as email, social networking, and blogging. The implicit agreement is that users "pay" for these services through their exposure to advertisements. Attackers exploit this model by acquiring large numbers of resources under singular control, which can then be monetized, for example, by using thousands of free webmail accounts to send spam emails.

CAPTCHAs were developed to limit attackers' ability to scale their activities using automated means. A typical CAPTCHA consists of a visual challenge, usually distorted alphanumeric characters, which are difficult for computer vision algorithms to segment and recognize but can be deciphered by humans with some effort. Today, various types of CAPTCHAs are widely deployed to protect account registration, comment posting, and other web functionalities.

This innovation has created a market for CAPTCHA-solving services, which come in two forms: automated solving and human labor. Automated solving involves a technical arms race between those developing solving algorithms and those creating more obfuscated CAPTCHA challenges. However, the cost structure generally favors the defender, making it challenging for attackers to sustain long-term success. Human-based CAPTCHA solving, on the other hand, effectively sidesteps the design point of CAPTCHAs. The globalization of the solving market, driven by cheap internet access and the commoditization of CAPTCHAs, has led to a significant drop in wholesale costs. Today, many service providers can solve large numbers of CAPTCHAs at retail prices as low as $1 per thousand.

In either case, the security of CAPTCHAs can now be considered in an economic context, comparing the cost of solving (either through software development or human labor) against the value of the protected asset. While the existence of CAPTCHA-solving services indicates that the value of the assets (e.g., an email account) is worth more to some attackers than the cost of solving the CAPTCHA, the overall market dynamics are poorly understood. This paper aims to provide a deeper understanding of this issue through empirical analysis.

## 2. Background
The term "CAPTCHA" was introduced in 2000 by von Ahn et al. [21], describing a test that differentiates humans from computers. Commonly, a CAPTCHA must be:
- Easily solved by humans,
- Easily generated and evaluated, but
- Not easily solved by computers.

Over the past decade, various techniques for generating CAPTCHAs have been developed, with the most common being visual challenges requiring users to identify alphanumeric characters in an image obfuscated by noise and distortion. Figure 1 shows examples of such CAPTCHAs. The challenge in designing these obfuscations is to make them easy enough for users to attempt but too difficult for available computer vision algorithms.

Usability studies have focused on differences in expected accuracy and response time, but the impact of CAPTCHA difficulty on legitimate goal-oriented users is not well documented. Elson et al. [9] suggest that even relatively simple challenges can drive away potential customers, indicating a trade-off between protection and usability.

The second challenge, defeating automation, has received more attention, leading to a competition between those building sophisticated algorithms to break CAPTCHAs and those creating more obfuscated CAPTCHAs in response. In the next section, we examine why, for economic reasons, automated solving has been relegated to a niche status in the open market.

Finally, an alternative approach to solving CAPTCHAs is to outsource the problem to human workers. This labor-based approach has been commoditized, and today, a broad range of providers offer bulk CAPTCHA-solving services. While the growth of this activity has been noted, there is limited quantitative analysis of the solving ecosystem and its underlying economics. The closest work to our own is the study by Bursztein et al. [3], which focuses on CAPTCHA difficulty rather than business models.

## 3. Automated Software Solvers
From an adversary's perspective, automated solving offers advantages such as near-zero marginal cost and near-infinite capacity. Automated CAPTCHA solving combines segmentation algorithms to extract individual symbols from a distorted image with basic optical character recognition (OCR) to identify the text. However, building such algorithms is complex, and automated solutions often fail to match human accuracy. These constraints have influenced the evolution of automated CAPTCHA solving as it transitioned from an academic contest to a commercial issue.

### 3.1 Empirical Case Studies
We explore these issues through two representative examples: Xrumer, a mature forum spamming tool with integrated CAPTCHA-solving capabilities, and reCaptchaOCR, a specialized solver targeting the popular reCaptcha service.

#### Xrumer
Xrumer [24] is a well-known forum spamming tool, widely regarded as one of the most advanced tools for bypassing anti-spam mechanisms, including CAPTCHAs. It has been commercially available since 2006 and currently retails for $540. We purchased a copy for experimentation. While we would have liked to include other well-known spamming tools, their costs made this study prohibitively expensive.

Xrumer's market success led to a surge in spam postings, causing targeted service providers to update their CAPTCHAs. This initiated an "arms race" period, with Xrumer's author updating solvers to overcome these obstacles. Version 5.0, released in October 2008, significantly improved CAPTCHA-solving support. We verified that version 5.0 could solve the default CAPTCHAs for several major message boards, including Invision Power Board (IPB) version 2.3.0, phpBB version 3.0.2, Simple Machines Forum (SMF) version 1.1.6, and vBulletin version 3.6. These systems responded by modifying their CAPTCHAs to defeat Xrumer's solver. Currently, Xrumer can only solve the default CAPTCHA for SMF.

With version 5.0.9 (released August 2009), Xrumer added integration for human-based CAPTCHA-solving services: Anti-Captcha (an alias for Antigate) and CaptchaBot. This suggests that the author found the ongoing investment in software-based solvers insufficient to meet customer requirements. Xrumer can be configured to use a hybrid approach, where it detects vulnerable CAPTCHAs and uses human-based solvers otherwise. In the current version (5.0.12), development focuses on supporting automatic navigation and CAPTCHA extraction, as well as evading other anti-spam techniques.

Compared to developers targeting high-value CAPTCHAs (e.g., reCaptcha, Microsoft, Yahoo, Google), Xrumer targets weaker CAPTCHAs and includes highly efficient and accurate software-based solvers. In our tests, all but one included solver required less than a second per CAPTCHA (on a netbook class computer with a 1.6-GHz Intel Atom CPU) and had 100% accuracy. The more difficult case was the solver for phpBB version 3 with the GD CAPTCHA generator and foreground noise, achieving only 35% accuracy and requiring 6-7 seconds per CAPTCHA.

#### reCaptchaOCR
At the other end of the spectrum, we obtained a specialized solver focused on the popular reCaptcha service. Wilkins developed the solver as a proof of concept [23]. The existence of this OCR-based reCaptcha solver was reported in a blog post on December 15, 2009 [6]. Although developed to defeat an earlier version of reCaptcha (Figure 2a), reCaptchaOCR could also defeat the variant in use at the time of release (Figure 2b). Subsequently, reCaptcha updated their CAPTCHA generation code to the current version (Figure 2c), and the tool has not been updated to solve this new variant.

We tested reCaptchaOCR on 100 randomly selected CAPTCHAs of the early 2008 variant and 100 randomly selected CAPTCHAs of the 2009 variant.