# OCR Output
## Page 1
马哥教育
SHELL脚本编程
讲师：王晓春
shell脚本编程
内容概述
1 编程基础
1.1程序组成
1.2程序编程风格
马哥教育
1.3编程语言
1.4编程逻辑处理方式
2 shell脚本语言的基本结构
IT人的高薪职业学院
2.1 shell脚本的用途
2.2 shell脚本基本结构
2.3创建shel脚本过程
2.4脚本注释规范
2.5第一个脚本
2.6脚本调试
2.7变量
2.7.1变量
2.7.2变量类型
2.7.3编程语言分类
2.7.4 Shell中变量命名法则
2.7.5变量定义和引用
2.7.6环境变量
2.7.7只读变量
2.7.8位置变量
2.7.9退出状态码变量
2.7.10展开命令行
2.7.11脚本安全和set
2.8格式化输出printf
2.9算术运算
2.10逻辑运算
2.11条件测试命令
2.11.1变量测试
2.11.2数值测试
2.11.3字符串测试
2.11.4文件测试
---
## Page 2
2.12关于0和
2.13组合测试条件
2.13使用read命令来接受输入
3 bash的配置文件
3.1按生效范围划分两类
3.2shell登录两种方式分类
3.2.1交互式登录
3.2.2非交互式登录
3.3按功能划分分类
3.3.1 proflle类
3.3.2 Bashrc类
3.4编辑配置文件生效
3.5 Bash退出任务
4流程控制
4.1条件选择
4.1.1选择执行if语句
4.1.2条件判断case语句
4.2循环
4.2.1循环执行介绍
4.2.2 for循环
4.2.3 whlle循环
4.2.4 until循环
4.2.4循环控制语句continue
4.2.5循环控制语句break
4.2.6循环控制shlift命令
4.2.7 whlle read 特殊用法
4.2.8 select 循环与菜单
5函数介绍
5.1管理函数
马哥教育
5.1.1定义函数
5.1.2查看函数
5.13盘除函数
5.2函数调用
5.2.1交互式环境调用函数
5.2.2在脚本中定义及使用函数
5.2.3使用函数文件
5.4环境函数
5.3函数返回值
5.5函数参数
5.6函数变量
5.7函数递归
6其它脚本相关工具
6.1信号捕捉 trap
6.2创建临时文件mktemp
6.3安装复制文件Install
6.4交互式转化批处理工具expect
7数组
7.1数组介绍
7.2声明数组
7.3数组赋值
7.4显示所有数组
7.5引用数组
7.6删除数组
7.7数组数据处理
7.8关联数组
7.9范例
8字符串处理
8.1字符串切片
---
## Page 3
8.2查找替换
8.3查找并删除
8.4字符大小写转换
9高级变量
9.1高级变量赋值
9.2高级变量用法-有类型变量
9.3变量间接引用
9.3.1 eval命令
9.3.2间接变量引用
shell脚本编程
内容概述
·编程基础
·脚本基本格式
·变量
·运算
·条件测试
配置用户环境
马哥教育
·循环
IT人的高薪职业学院
·信号捕捉
·函数
·数组
·高级字符串操作
·高级变量
·expect
1编程基础
Linus : Talk is cheap, show me the code
1.1程序组成
程序：算法+数据结构
数据：是程序的核心
算法：处理数据的方式
数据结构：数据在计算机中的类型和组织方式
1.2程序编程风格
---
## Page 4
A
Ctvon0
这就是面向对象编程
·过程式：以指令为中心，数据服务于指令，shell脚本程序提供了编程能力，解释执行
·对象式：以数据为中心，指令服务于数据，java，C#，python等
1.3编程语言
计算机：运行二进制指令
院
编程语言：人与计算机之间交互的语言。分为两种：低级语言和高级语言
·低级编程语言：
机器：二进制的0和1的序列，称为机器指令.与自然语言差异太大，难懂、难写
汇编：用一些助记符号替代机器指令，称为汇编语言
如：ADDA,B将寄存器A的数与寄存器B的数相加得到的数故到寄存器A中
汇编语言写好的程序需要汇编程序转换成机器指令
汇编语言稍微好理解，即机器指令对应的助记符，助记符更接近自然语言
·高级编程语言：
编译：高级语言->编译器->机器代码文件-->执行，如：C，C++
解释：高级语言>执行-->解释器-->机器代码，如： shell，python，php，JavaScript，perl
编译和解释型语言
---
## Page 5
Compiler
Input
Target program
Output
Interpreter
Output
Input
Source program
Translator
Virtual machine
ndno
Input-
1.4编程逻辑处理方式
→
马哥教育
不成立
条件成立？
语句i
成立
条件成立？
成立
程序段1
程序段2
程序段1
语句i+1
（a）分支结构流程1
（b）分支结构流程2
→
顺序结构流程
分支结构流程
---
## Page 6
条件成立？
不成立
程序段2
成立
条件成立？
成立
程序段1
不成立
（a）循环结构流程1
（b）循环结构流程2
循环结构流程
三种处理逻辑
·顺序执行
·选择执行
·循环执行
2.1shell脚本的用途
·自动化常用命令
·执行系统管理和故障排除
·创建简单的应用程序
·处理文本或文件
2.2shell脚本基本结构
shell脚本编程：是基于过程式、解释执行的语言
编程语言的基本结构：
·各种系统命令的组合
·数据存储：变量、数组
·表达式：a+b
·控制语句：if
shell脚本：包含一些命令或声明，并符合一定格式的文本文件
格式要求：首行shebang机制
#!/bin/bash
#!/usr/bin/python
#!/usr/bin/per1
2.3创建shell脚本过程
---
## Page 7
第一步：使用文本编辑器来创建文本文件
第一行必须包括shell声明序列：#！
示例：
#!/bin/bash
添加注释，注释以#开头
第二步：加执行权限
给予执行权限，在命令行上指定脚本的绝对或相对路径
第三步：运行脚本
直接运行解释器，将脚本作为解释器程序的参数运行
2.4脚本注释规范
1、第一行一般为调用使用的语言
2、程序名，避免更改文件名为无法找到正确的文件
3、版本号
4、更改后的时间
5、作者相关信息
6、该程序的作用，及注意事项
7、最后是各版本的更新简要说明
2.5第一个脚本
马哥教育
#1SHEBANG
CONFIGURATION_VARIABLES
FUNCTION_DEFINITIONS
MAIN_CODE
shell脚本范例：
#!/bin/bash
# Fi1ename:
he11o.sh
 version:
1.1
 Date:
2017/06/01
 Author:
wang
 Email:
wang8gma11. com
#website:
ww.magedu con
# Description:
This is the first script
#
Copyright:
2017 wang
 License:
GPL
echo “he1lo wor1d"
范例：
#!/bin/bash
---
## Page 8
#Author:
wangxiaochun
#QQ：
29308620
#Date:
20191220
#Fi1eName:
backup.sh
#URL:
http: //ww-magedu. com
#Description:
The test script
#Copyright (C):
2019 All rights reserved
echo -e "\033[1;32mStarting backup..-\033[0m”
sleep 2
cp -av /etc/
/data/etc*date +%F*/
echo -e "\033[1;32mBackup is finished\033[0m”
2.6脚本调试
检测脚本中的语法错误
bash -n /path/to/some_script
调试执行
bash -x /path/to/some_script
高教育
2.7变量
2.7.1变量
变量表示命名的内存空间，将数据放在内存空间中，通过变量名引用，获取数据
2.7.2变量类型
变量类型：
·内置变量，如：PS1，PATH，HISTSIZE
·用户自定义变量
不同的变量存放的数据不同，决定了以下
1.数据存储方式
2.参与的运算
3.表示的数据范围
变量数据类型：
·字符
·数值：整型、浮点型，bash不支持浮点数
2.7.3编程语言分类
---
## Page 9
Strong
Erlang
Groovy
1
C#
Scala
Clojure
Ruby
Java
Python
Magik
F#
Haskel
Dynamic
→Static
Perl
PHP
C
VB
JavaScript
C++
Shell
Weak
静态和动态语言
·静态编译语言：使用变量前，先声明变量类型，之后类型不能改变，在编译时检查，如：java，c
·动态编译语言：不用事先声明，可随时改变类型，如：bash，Python
强类型和弱类型语言
·强类型语言：不同类型数据操作
，必须经过强制转换才同一类型才能运算，如java，C#
python
如：以下python代码
print（magedu'+10)提示出错，不会自动转换类型
print（magedu'+str(10)）结果为magedu10，需要显示转换类型
·弱类型语言：语言的运行时会隐式做数据类型转换。无须指定类型，默认均为字符型：参与运算会
自动进行隐式类型转换；变量无须事先定义可直接调用
如 : bash , php , javascript
2.7.4Shell中变量命名法则
·不能使程序中的保留字：如：iffor
·只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线”“
·见名知义，用英文名字，并体现出实际作用
·统一命名规则：驼峰命名法，studentname,大驼峰StudentName 小驼峰studentName
·变量名大写
·局部变量小写
·函数名小写
2.7.5变量定义和引用
变量的生效范围等标准划分变量类型
·普通变量：生效范围为当前shell进程；对当前shell之外的其它shell进程，包括当前shell的子shell
进程均无效
·环境变量：生效范围为当前shell进程及其子进程
·本地变量：生效范围为当前shell进程中某代码片断，通常指函数
---
## Page 10
变量赋值：
nafe=′va1ue′
value可以是以下多种形式
直接字串：name=root'
变量引用：name=”$uSER"
命令引用：name=“COMMAND
或者
name=$(COMMAND)
变量引用：
$name
${name}
弱引用和强引用
"$name "
弱引用，其中的变量引用会被替换为变量值
‘$name'
强引用，其中的变量引用不会被替换为变量值，而保持原字符串
显示已定义的所有变量：
set
删除变量：
unset name
范例：
[root@centos8 script40]#cat systeminfo.sh
#!/bin/bash
#Author:
wangxiaochun
#QQ:
29308620
#Date:
2019-12-23
#Fi1eName:
systeminfo.sh
#URL: