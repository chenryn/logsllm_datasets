title:IntruDetector: A Software Platform for Testing Network Intrusion
Detection Algorithms
author:Tao Wan and
Xue Dong Yang
IntruDetector: 
A  Software 
Platform 
for  Testing 
N  etwork 
Intrusion
Detection 
Algorithms
Tao  Wan 
Xue  Dong  Yang
Email: 
{taowan,  yang}@cs.uregina.ca
Department  of  Computer  Science
University  of  Regina
Regina,  Saskatchewan  S4S OA2
CANADA
Abstract
An 
passively 
lous  or  intrusive 
Detection 
Intrusion 
specific  computing 
activities, 
(IDS), 
System 
that  monitors
resources,  and  reports  anoma-
is  becoming  an  important 
com-
in 
ponent 
ture.  Algorithms 
development, 
and  difficult 
sion  detection 
the  security 
system  of 
information 
infrastruc-
for  detecting 
intrusions 
from  being  mature. 
to  study  and 
interesting
intru-
against  a  variety  of  (perhaps  sim-
test  a  new 
are  under 
One 
rapid
is  how 
but  far 
issue 
algorithm 
An  Intrusion  Detection  System  (IDS) 
is  a  sys-
tem  that  monitors  passively  specific  computing 
re-
sources,  such  as  operating  systems,  applications,  or
networks,  and  reports  any  anomalous  events  or  any
IDSs
known  patterns  indicating  potential 
intrusions. 
have  been  receiving  more  and  more  attention 
from
both  research  institutes  and  industrial  sectors.  Al-
though  certain  progress  has  been  made  in  this  area,
it  is  still  a  comparatively  young  and  far  from  being
mature.  Many  technologies  from  other  fields  are  be-
ing  applied  and  various  detection  systems  are  under
development  [5,  7,  11,  12,  14,  15,  16,  17].  Naturally,
researchers  strongly  need  an  environment 
for  testing
and  evaluating  their  detection  systems.
Researchers at  University  of  California  at  Davis,
IBM,  and  MIT  Lincoln  Labs  have made  significant  ef-
forts  on  testing  and  evaluating  IDSs.  Their  works  are
briefly  summarized  as follows.
realistic 
background 
platform 
for 
is  clearly  desirable. 
platform, 
called 
testing 
traf-
in-
This  pa-
IntruDetec-
intrusive 
activities 
detection 
algorithms 
this  platform, 
such  a  software 
ulated) 
under 
fic.  A  flexible  and  general-purpose 
trusion 
per  presents 
tor.  With 
directly 
activities. 
collected 
trusive 
The  main  properties 
ground 
of 
is  realistic; 
in  a  real  environment 
from 
activities 
The  data  of  normal 
the  live  environment, 
detection 
traffic 
that  are  simulated 
algorithms 
can  be  tested
with  wide 
system  activities 
range  of  intrusive
are  directly
in-
and  are  mixed  with 
by  hybrid 
simulation.
this  approach 
it  allows 
(2) 
(1) 
are: 
flexible 
the  back-
simulation
( 1)  Testing  at  U C  Davis
of  various 
ation  will  not  be disrupted 
types  of  intrusions; 
and  (3)  normal 
system  oper-
by  virtually 
simulated 
destructive
intrusions 
during 
testing.
1
Introd 
uction
As  the  usage of the  Internet  is proliferating,  more  and
more of our  daily  lives and business operations  depend
on  the  availability  of  networks  and  the  integrity  of
data.  Unfortunately, 
infrastructure  on
which  we depend  is  very  vulnerable  to  attacks.  com-
from  day  to  day,  and
puter  intrusions  are  occurring 
to  our  society  [1,  2,  3].
have  become  a  major  threat 
How  to  detect  intrusions 
is  a  big  challenge  faced  by
every  organization.
the  information 
The  researchers at  the  University  of  California  at
to  address  the
Davis  have  been  the  first  in  literature 
issues of  testing  intrusion  detection  systems  [22,  23].
They  have developed  a methodology  and software  plat-
form  for  testing  IDSs.  UNIX  package, Expect,  was em-
ployed  to  develop  the  scripts  for  simulating 
intruders
as well  as normal  users.  Intruders  can be individual  or
cooperative.  Three  testing  objectives  are identified  as
follows:
.Broad  Detection  Range:  the  ability  to  distinguish
intrusions  from  normal  activities.
.Economy 
in  Resource Usage:  the  efficiency  of  us-
ing  system  resources.
.Resilience 
to  Stress:  the  ability 
to  function  cor-
rectly  under  high  load.
Network  Security  Monitor 
(NSM) 
[13,  21]  was
evaluated  in  the  environment  as an example.
( 2)  Testing 
at  MIT 
Lincoln 
Labs
MIT  Lincoln  Labs  conducted  two  IDS  tests  in
[4,  19].  The  tests  were
1998  and  1999  respectively 
performed  in  a simulated  network.  The  test  data  were
sampled  from  a real environment.  The  pseudonymized
data  were replayed  in  the  simulated  network  by scripts
or  manually  duplicated 
Several  well-
known  attacks  were simulated  and  inserted  into  back-
ground  traffic.  Several  major  IDSs  were  tested,  and
the  test  results  were also published.
transactions. 
This  test  is  sophisticated  and  advanced,  and  the
results  can  be  used  as  a  basis  to  compare  different
IDSs.  The  test  data  are  comprehensive  and  are  be-
ing  used by  many  researchers for  experimenting 
their
IDSs.
(3)  Testing  at  IBM  Zurich  Research  Lab
IBM  Zurich  Research  Laboratory  has  developed
an experimentation  workbench  for  testing  intrusion  de-
tection  systems  [8].  An  experimentation  network  was
constructed,  which  was disconnected  from  the  rest  of
the  world.  Both  normal  user behaviors  and  intrusions
are  obtained  by  simulation.  Normal  user  behaviors
are simulated  by  scripts  written 
in  Expect.  Intrusions
are simulated  by  the  exploit  scripts  from  a vulnerabil-
ity  database  maintained  by  the  lab  internally.  After
examining  the  analysis  results  of  various  IDSs,  the  op-
erator  can  therefore  evaluate  their  performance.
All  these efforts  focus on  testing  the  performance
of  an  IDS  consisting  of  several  discrete  components,
for  example,  sensors, analyzers,  among  others.  Their
results  can be used by end users as guildlines  to  select
IDSs,  or  by  vendors  to  improve  their  products.
Our  work  is enlightened  by  the  above  efforts  but
different  from  them.  Instead  of focusing  on  testing  an
IDS,  we try  to  build  a software  platform  for  testing  in-
trusion  detection  algorithms  incorporated  by  an  IDS.
We first  describe the  components  of which  an IDS  may
consist,  then  give the  rational  why  a platform  for  test-
ing  detection  algorithms  is of  interest.
According 
to  the  Intrusion  Detection  Exchange
Format  (IDWG) 
[10],  an  under  developing  standard
for  IDS,  an  IDS  consists  of  a  set  of  discrete  compo-
nents:  sensors,  analyzers,  managers,  among  oth-
ers.  Sensors process data  sources  (for  example,  raw
network  packets,  operating  system  audit  logs, applica-
tion  logs,  etc. ) ,  and  generate  events  representing  oc-
2
intrusion  detection  algorithms 
currences  of  activities.  Normally,  sensors collect  data
and  reduce  them  to  a certain  degree since the  volume
of  the  data  are  normally 
tremendous.  Analyzers  ana-
lyze events produced  by the  sensors and report  security
alerts  for  unauthorized  or  undesired  activity.  Analyz-
ers  utilize 
to  perform
analysis.  For  example,  analyzers  of  a misuse IDS  may
implement  a pattern-matching  algorithm,  but  analyz-
ers of  an  anomaly  IDS  may  utilize  neural  networks  to
build  profiles.  In  this  paper,  intrusion  detection  algo-
rithms  and  analyzers  are  used interchangeably.  Man-
agers can  be  used to  perform  configuration,  presenta-
tion,  or  reporting.
We see a platform  for  experimenting 
intrusion  de-
tection  algorithms  is of  interest  in  that:
(1)  Among  the  components  of  which  an  IDS  may
consist,  analyzer  is deemed to  be very  important  since
the  efficiency  of  an  IDS  is  mainly  determined  by  how
efficient  its  detection  algorithm 
is.  Therefore,  a  de-