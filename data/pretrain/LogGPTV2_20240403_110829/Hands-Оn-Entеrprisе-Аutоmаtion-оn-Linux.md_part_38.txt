### System and Vulnerable Versions
For both security policies, all checks are conducted in OVAL format. However, tests will only report a failure if a package is installed and its version is older than the one containing the fix for the specific vulnerability. Therefore, these scans should not produce any false positives.

### Regular Updates and Auditing
Unlike SSG policies, these policies are updated regularly. For example, the Ubuntu package vulnerability scanning profile we downloaded using the preceding commands was only one hour old at the time of writing. As a result, your auditing process must include downloading the latest package vulnerability OVAL policies and scanning against them. This can be efficiently managed using Ansible, though the implementation details are left as an exercise for you.

### Understanding Security Policies
By now, you should have a good understanding of the types of policies available, the formats they come in, and their intended purposes. In the next section, we will demonstrate how to use these policies to scan your Linux hosts and audit your compliance against chosen security policies.

### Scanning with OpenSCAP
In this chapter, we have covered the various tools available from the OpenSCAP project and the security policies you might use to scan your Enterprise Linux environment. Now that we have laid the groundwork, let's explore how to use these tools to scan your infrastructure. The three key tools you might use are:

1. **oscap**: A command-line utility for scanning the local machine.
2. **OpenSCAP Daemon**: For scheduled and automated scans.
3. **SCAP Workbench**: An interactive, GUI-based tool for running SCAP scans.

We will start by exploring the `oscap` command-line tool in the next section.

### Scanning with OSCAP
The `oscap` tool is a command-line utility designed for scanning the local machine. The security policies you wish to audit the host against must also be present on the filesystem of the host. If you have completed the steps in the "Evaluating and Selecting Policies" section, you should already have everything you need.

If you plan to use `oscap` to scan your infrastructure, consider using Ansible to both install it and gather the results when the scan is complete.

#### Scanning a Single Host
1. **Query Available Policies**:
   Assuming you are working on an Ubuntu 18.04 server and have unpacked the latest upstream SSG into your current working directory, use the `oscap info` command to query the XCCDF policy file:
   ```sh
   $ oscap info scap-security-guide-0.1.47/ssg-ubuntu1804-ds.xml
   ```

2. **Choose a Profile**:
   From the output, choose the profile (or profiles) you wish to audit against. For a general-purpose server, you might choose the profile with ID: `xccdf_org.ssgproject.content_profile_standard`.

3. **Run the Scan**:
   To run the scan and save the output in a human-readable HTML report, use the following command:
   ```sh
   $ sudo oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard --report /var/www/html/report.html ./scap-security-guide-0.1.47/ssg-ubuntu1804-ds.xml
   ```

   This command requires `sudo` because it needs access to core system files. The scan produces a readable output on the screen and an HTML report in the web root of the server.

#### Patch Status Check
You can also check the patch status of your test system using the `com.ubuntu.bionic.cve.oval.xml` policy:
```sh
$ sudo oscap oval eval --report /var/www/html/report-patching.html com.ubuntu.bionic.cve.oval.xml
```

The output is less readable than the XCCDF output but still valuable. The HTML report provides a summary, showing the number of detected package vulnerabilities and test passes.

### Running OSCAP on CentOS or RHEL
The process for running OSCAP-based scans on CentOS or RHEL is similar:

1. **Query Available Profiles**:
   ```sh
   $ oscap info /usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml
   ```

2. **Run the Scan**:
   ```sh
   $ sudo oscap xccdf eval --fetch-remote-resources --report /var/www/html/report.html --profile standard /usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml
   ```

   The `--fetch-remote-resources` flag ensures the most up-to-date content is used. The scan produces a human-readable report, but some tests may return `notapplicable` due to incomplete support for the operating system.

### Automating with Ansible
To automate the process using Ansible, consider the following steps:

1. **Install OpenSCAP Packages**:
   Use the `yum` or `apt` modules to install the required OpenSCAP packages on the server.

2. **Download SSG and OVAL Files**:
   Use the `get_url` module to download the SSG and/or package vulnerability OVAL definition files. Use the `unarchive` module to unzip the downloaded file.

3. **Run the Scan**:
   Use the `shell` module to run the OSCAP scan.

4. **Fetch the Report**:
   Use the `fetch` module to copy the HTML report(s) for distribution and analysis.

### Regular Scans with the OpenSCAP Daemon
Setting up regular scans with the OpenSCAP Daemon is straightforward. The daemon can scan remote hosts over SSH, and you must ensure passwordless SSH access and sudo access without a password. On CentOS 7, you may need to disable SELinux temporarily for the remote scan to run.

#### Setting Up a Scheduled Scan
1. **Create a Task**:
   ```sh
   $ sudo oscapd-cli task-create -i
   ```

   Follow the guided configuration to set up the scan. You can enable online remediation if desired, but test this in an isolated environment first.

2. **View Results**:
   The scan results are stored in XML format in `/var/lib/oscapd/results`. Use the `oscap` tool to convert the XML results into a human-readable HTML report:
   ```sh
   $ sudo oscap xccdf generate report --output /var/www/html/report-oscapd.html /var/lib/oscapd/results/1/1/results.xml
   ```

### Scanning with SCAP Workbench
The SCAP Workbench tool is an interactive, GUI-based tool for running SCAP scans. It has almost the same capabilities as the `oscap` command-line tool, including the ability to scan remote hosts over SSH. The high-level process is the same: select your policy file, choose the profile, and run the scan. The results are displayed in the GUI and can be saved as HTML or XML reports.

This comprehensive guide should help you effectively use OpenSCAP tools to audit and secure your Linux infrastructure.