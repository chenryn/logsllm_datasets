knowledge of the residual signal r into the anomaly energy.
resent the signal y.
• ρ, the weight of the residual signal in the ﬁnal anomaly
energy output.
Main Body
1. Construct Λ = {λ1, λ2, ..., λM }, the vector of penalty
terms for each dictionary signal component using
Equation 7.
2. Set bΦ = [], matrix of chosen dictionary signal compo-
nents
3. Set r = y, current residual signal given chosen dictio-
nary
4. For ℓ = {1, 2, ..., Ncoef }.
(a) Find the most dominant dictionary component
not yet considered,
k = arg max
i={1,2,...}
(|hφi, ri| − λi)
(b) Remove φk from Φ, λk from Λ.
(c) Add φk to bΦ
(d) Find the dictionary coeﬃcient for the current cho-
sen dictionary signal components. Solve the least
Return:
squares problem, setting bx = arg minx kbΦx − yk2
(e) Recalculate the residual signal : r = y − bΦbx
• Return the estimated anomaly energy, byenergy =
bΦanomalybxanomaly + ρr
byenergy = bΦanomalybxanomaly + ρr
Where ρ ∈ [0, 1].
(8)
6. NETWORK-WIDE DATA FUSION
While the penalized basis pursuit methodology will ex-
tract anomaly energy for a single time-series signal, we must
add to our framework to detect network-wide anomalies.
Given a network with known topology, containing N routers
and M links, consider multiple observed time-series char-
acteristics for each link (represented here by {c1, c2, ..., cC }
for packet count, byte count, etc.). We observe time-series
signal y(ℓ,c) for the data at link ℓ and for characteristic c.
457After performing the Penalized Basis Pursuit Algorithm on
the observed time-series network signal, y(ℓ,c), we obtain the
estimated signal energy relating to the anomaly energy from
energy. Therefore, for each link ℓ,
we would have an estimated anomaly energy vector for each
observed characteristic of the link. For example,
Equation 8, denoted by by(ℓ,c)
has been found [11] to be a more accurate metric than stan-
dard multiple hypothesis testing techniques (e.g., Bonferroni
Correction [12]). By thresholding based on these FDR pr,t
values, we classify which entries are anomalous, and there-
fore where anomalies occur in the network, localized by both
the speciﬁc router and the speciﬁc time of the anomaly.
energy =
bY(ℓ)
|
|
|
|
energy
by(ℓ,c1)
|
energy
by(ℓ,c2)
|
energy
... by(ℓ,cC )
|
|
(9)
One could imagine aggregating the anomaly energy across
all characteristics on this link and performing a simple en-
ergy thresholding mechanism for determining anomalies.
One problem with this methodology is that it would ignore
the spatial correlation between links. Given a router with
links ℓA and ℓB, the appearance of anomaly energy on both
links (at the same time) will strengthen our conﬁdence that
an anomaly has actually occurred. Meanwhile, the lack of
anomaly energy on one of the links should weaken our belief
in an abnormal event occurring at that time period.
Motivated by the work on distributed anomaly detection
in [2], consider the multidimensional space where each di-
mension represents a link connected to the router. For a
router r, with m links {ℓ1, ℓ2, ..., ℓm}, and time-series ob-
servations at T time steps, we can form the T × Cm sized
estimated router anomaly energy matrix,
energy =h bY(ℓ1)
bY(r)
bY(ℓ2)
energy i
bY(ℓm)
energy
energy
...
(10)
estimated anomaly energy vector, bY(r)
Where row t′ represents a speciﬁc time bin with the esti-
mated anomaly energy on each of the m links connected to
the router with respect to each observed link characteris-
tic (e.g., packet count, byte count, etc.). This Cm-length
energy (t′) could be con-
sidered a point in some RCm estimated anomaly energy
feature space. The anomaly energy vector’s placement in
this Cm-dimensional space will inform us whether or not an
anomaly actually has occurred at router r at time t′. Intu-
itively, if every link and observed characteristic has very lit-
tle anomaly energy estimated, there is likely not an anomaly
at this router. Conversely, if several observed characteristics
of this router have very large estimated anomaly energy val-
ues, then it is likely some anomaly is occurring at this time
step. This reduces to a hypothesis testing problem of de-
tecting whether or not the estimated anomaly energy vector
energy (t′) is anomalous compared with the other estimated
bY(r)
r, bY(r)
anomaly energy vectors.
each vector, pr,t, for each vector bY(r)
Using the matrix of estimated anomaly energy for router
energy, we can use the minimum volume level set
methodology of [15] to assess which rows of the matrix are
anomalous3. This methodology uses a nonparametric statis-
tical technique to output the False Discovery Rate (FDR) of
energy (t). This False Dis-
covery Rate value is the probability of observing a vector of
estimated anomaly energy more extreme given the remain-
ing matrix of estimated energy vectors. If the probability
is very low that a more extreme vector would be observed,
this vector is likely anomalous. The False Discovery Rate
3We
making
http://www.eecs.umich.edu/∼cscott/code/mnscann.zip
code
available
program
authors
readily
thank
for
at
this
the
the
of
7. BASISDETECT ALGORITHM
Combining the novel basis pursuit methodology from Sec-
tion 5 and the nonparametric statistical methodology de-
scribed in Section 6, we can summarize our full BasisDe-
tect framework in Algorithm 3. The non-anomalous sig-
nal dictionary, Φnon−anomaly, will be taken as the collec-
tion of waveforms from a combination of the Discrete Cosine
Transform (DCT) and a Discrete Wavelet Transform using
the discrete Meyer wavelet (as motivated in Section 8.2).
Additionally, the BasisDetect methodology requires the de-
tection parameter, ν, which determines the detection/false
alarm rate of the anomaly detection. Throughout the exper-
iments, this parameter is adjusted to present the spectrum
of detection/false alarm rate for our BasisDetect method-
ology. Finally, the use of Algorithm 1 requires the tuning
parameter w to adjust the time-series window for extracting
the learned anomaly characteristics. While examination of
our labeled anomalies resulted in setting this parameter to
w = 5 (for consideration of 10 time bins around the labeled
anomalies), this value will depend on link sampling rates
and requires careful consideration through inspection of the
training data.
The reliance on the Penalized Basis Pursuit Methodology
of Algorithm 2 requires the additional input of three tuning
parameters (Ncoef , γ, ρ) into the BasisDetect algorithm. In
order to ﬁnd the optimal parameter values with respect to
the number of false alarms declared, consider some initial
estimate of these three parameters and running the Basis-
Detect algorithm using the training data as the test data.
By using the training data as test, we are given a priori
knowledge of where the anomalies are located and the per-
formance of the BasisDetect methodology (in terms of the
number of false alarms declared) with respect to the given
input tuning parameters. Using a grid search of parame-
ter values over feasible possible values, we can optimize the
choice of tuning parameter values by choosing the set of pa-
rameter values (Ncoef , γ, ρ) that minimize the total number
of false alarms declared to detect all the anomalies in the
training data.
8. RESULTS
We perform an extensive set of tests using three diﬀerent
data sources, which were described in Section 3. The in-
tent of our experiments is to assess the capabilities of our
model-based detection methods in both a single node and
network-wide setting. We also compare and contrast our
method with standard detection methods that have been de-
scribed in prior studies. Finally, we assess the sensitivity of
our detection method using synthetic traﬃc traces in which
ground truth is intrinsic. For all experiments described, the
tuning parameters required by the BasisDetect methodol-
ogy and the training anomalies are discovered by hold out
cross validation [24], where 20% of the data is held out as
training data while the remaining 80% is used as test data.
The results of our experiments are described below.
458Algorithm 3 - BasisDetect Algorithm
Given:
• y(ℓ,c) = the observed link data from link ℓ and link
characteristic c. Known for all network links ℓ =
{1, 2, ..., M } and link characteristics c = {1, 2, ..., C}.
niques. Due to the availability of only single link data, the
network-wide approaches of PCA and the Distributed Spa-
tial methodology are not applicable here.
Instead we will
focus on two basic time-series anomaly detection methodolo-
gies, the Exponentially Weighted Moving Average (EWMA)
Filter and Fourier thresholding.
• Set of routers r = {1, 2, ..., N }.
8.1.1 EWMA Filter
• Router-level topology of the network.
• Training set of network data with labeled anomalies
• Test set of network data with unknown anomalies
• ν = detection threshold for anomaly FDR values
• Φnon−anomaly = dictionary of non-anomalous signal
components
• γ = penalty for representing the signal using an
anomalous signal component.
• Ncoef = the speciﬁed number of coeﬃcients used to
represent the signal y.
The EWMA ﬁlter is a simple smoothing methodology that
uses the previous observed values ({yt−1, yt−2, ...}) to fore-
cast what the next observed value (yt) should be.
byt+1 = αewmayt + (1 − αewma)byt
An anomaly is detected if the forecasted value deviates
signiﬁcantly compared with the observed value,
rewma
t
= |yt −byt|
Where the threshold value αewma is found by the value that
minimizes the false alarms declared to ﬁnd all the anomalies
in the training set.
(11)
(12)
• ρ = the weight of the residual signal
in the ﬁnal
8.1.2 Fourier Thresholding
anomaly energy output.
Main Body
1. Using the training set with labeled anomalies, ap-
ply the Dictionary Construction approach in Algo-
rithm 1 to learn the anomalous dictionary compo-
bΦanomaly (cid:3).
2. Perform Penalized Basis Pursuit Method from Al-
gorithm 2 to estimate the anomalous signal energy
energy for each link l = {1, 2, ..., M } and link char-
acteristic c = {1, 2, ..., C} using the learned dictionary
nents, bΦanomaly. Construct the full dictionary array
bΦ =(cid:2) Φnon−anomaly
by(l,c)
bΦ.
the router anomaly energy matrix, bY(r)
3. Using knowledge of the network topology, construct
energy for each
router r = {1, 2, .., N } using Equation 10
4. Apply the nonparametric technique from [15], ﬁnding
the False Discovery Rate value, pr,t for each router
r = {1, 2, .., N } at time index t = {1, 2, ..., T }.
5. For each element of pr,t < ν, label the router r as
having an anomaly at time t.
8.1 GEANT Time-series Network Data
The ﬁrst experiment will be on a collection of time-
series data obtained from a Juniper J-Flow records from
a GEANT router as described in Section 3.2. The dataset
contains packet counts, byte counts, and IP entropy mea-
sured along the single link, sampled in aggregation bins of 1
minute evaluated for 42 days, resulting in a time-series sig-
nal of length 60,480. This dataset contains labeled anomalies
(DoS, dDoS, portscan) found by network engineers.
In addition to our new BasisDetect methodology, we
will compare against two time-series based forecasting tech-
The second time-series anomaly detection methodology
consists of resolving the residual energy from Fourier analy-
sis on the time-series signal. Given a Discrete Cosine Trans-
formation of the time-series signal, we determine the vector
of discrete cosine coeﬃcients, αdct, such that our observed
time-series signal y = Φdctαdct. In order to generate a resid-
ual signal, we threshold the small components of the discrete
cosine coeﬃcients, such that,
dct (i) =(cid:26) αdct (i)
0
α′
: if |αdct (i)| ≥ αf ourier
: if |αdct (i)| < αf ourier
(13)
Finally, the energy in the residual Fourier signal indicates
whether or not an anomaly has occurred at each time step,
(14)
rf ourier =(cid:12)(cid:12)y − Φdctα′
dct(cid:12)(cid:12)
Where the threshold value αf ourier is found by the value that
minimizes the false alarms declared to ﬁnd all the anomalies
in the training set.
8.1.3 GEANT Results
After performing anomaly detection using both the new
BasisDetect algorithm and the two comparison time-series
anomaly detection methodologies (EWMA and Fourier) on
the GEANT dataset, the false alarm results for detecting
the labeled true anomalies can be found in Figure 4. As
seen in the ﬁgure, our BasisDetect framework consistently
performs better than the two comparison methodologies
with respect to the number of false alarms declared. The
number of false alarms declared for speciﬁc percentages
of true anomalies found can be seen in Table 1. The
table shows that to ﬁnd all of the labeled anomalies in
our time-series signal, the BasisDetect method declares
almost 50% fewer false alarms than the best competing
methodology (the exponentially weighted moving average
ﬁlter methodology (EWMA)), and over 75% fewer false
alarms than the Fourier methodology.
4594
x 10
BasisDetect
Fourier
EWMA
5
4
3
2
1
l
s
m
r
a
A
e
s
a
F
d
e
i
f
i
s
s
a
C
l
l
f
o
r
e
b
m
u
N
Table 2: GEANT Network Data - Number of false
alarms declared in order to detect every anomaly in
the GEANT dataset (with respect to various wavelet
types).
Wavelet Type
Discrete Meyer
Haar
Daubechies
Number of False Alarms
10,474
12,096
14,210
0
0
50
100
150
200
250
300
350
Number of Detected Anomalies
Figure 4: GEANT Network Data - False Alarm
anomalies
true
anomaly detection for the three time-series detec-
tion methodologies (Fourier, EWMA, BasisDetect).
found for a speciﬁed level of
Table 1: GEANT Network Data - Number of false
alarms declared for a percentage of the true anoma-
lies detected.
Methodology
BasisDetect
EWMA
Fourier
Percentage of True Anomalies Found
70%
550
2,825
23,978
80%
1,428
4,558
33,048
90%
2,363
7,138
37,568
100%
10,474
20,275
43,919
8.2 Wavelet Performance Analysis
To represent localized non-anomalous components of the
observed data we use wavelets in the non-anomalous dic-
tionary (Φnon−anomaly). The choice of which type of dis-
crete wavelet signals to use is non-straightforward. The de-