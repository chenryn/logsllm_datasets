在上篇博客中，我提到过很快会再出篇新的可视化蜜罐文章。但由于一些原因推迟到今日，所以我想对期待这篇文章的读者说声抱歉。我自认为我已经选择了关于可视化蜜罐的最佳方案，但正如你所见的，并不是这样的，可能因为我太年轻了。先提醒各位读者：本文非常长。
# 问题
在上篇博客中，我已经讨论了可视化蜜罐数据。这次，我发现对于我的Cowrie蜜罐和Dionaea数据来说，最好的选择就是使用 Kippo-Graph和DionaeaFR。
我的上篇博客详细介绍了一些你需要了解的曲折和技巧，这样便于你正常运行 Kippo-Graph和DionaeaFR。但问题是随着底层软件的依赖新版本的发布，
关于曲折和技巧的清单可能会增加或者变动。但最本质的问题却是当大多数底层依赖的软件要更新了，而用来视觉化的包却没有及时更新。
即使你在蜜罐服务器上成功的运行了Kippo-Graph和DionaeaFR，再次重新配置所有东西只是时间问题
。我的习惯是是定期重构我的蜜罐——频率也许是每一个月或二个月 。
你需要了解的是构建新的网络环境或重新安装蜜罐从来都不是问题，这是一个很快的过程（参见上篇博客）。我完成这些大概需要5-10分钟。
每次都得重装前端软件又是一个单独的故事，这也是我开始写本文的原因。
# 寻找解决方案
在这次案例中，我总结出了最佳实践方案，那就是在虚拟机里安装视觉化软件。在虚拟机中我可以做出任何有助于软件正常工作的调整，并且再也不担心什么时候重构蜜罐服务器了。我使用scp命令将蜜罐服务器的数据拷贝到本地虚拟机，然后在那儿开始演示视觉化操作。
在我决定用那个方法后，突然我就意识到可能存在其他可以使用的视觉化方案。
自从我初步试验了下现代蜜罐网络（MHN）技术后，我就对使用ELK技术栈来可视化我的蜜罐数据非常感兴趣。对于不熟悉ELK技术栈的朋友，这里简单介绍下：ELK技术栈是指同一家公司Elastic开发的开源软件组合。这个缩写代表着：
  * E - Elasticsearch
  * L - Logstash
  * K - Kibana
简而言之，Logstash以不同的形式处理日志文件，然后将数据发送给Elasticsearch索引去分类、组织和检索。最后Kibana提出了一种方法，在浏览器中对存储在Elasticsearch索引中的数据进行可视化展示。这样就可以使用Kibana可以创建一个高度定制的可视化主控界面。
现在，我打算使用本地虚拟机作为可视化服务器成为了可能，同时可搭载ELK。
如果你刚开始使用ELK技术栈组件，我认为最好的入门视频是Minsuk
Heo的[这个](https://youtu.be/69OoC7haeeA)。尽管有时他的口音很糟糕，但在我看来，这依然是互联网上最好的“从头开始了解ELK”的视频。
# 尝试ELK
通常情况，ELKstack环境会包含额外用来发送服务器数据到ELK电脑上的组件。Elastic公司提供了Filebeats工具来完成这个操作。这个过程的数据流看起来是这样的：
> Data source(s) —> Filebeats –> Logstash –>Elasticsearch –> Kibana
当我意识到这种数据流方式并不是我想要的方案时，我就知道如果不按照这个流程来，如何去实现这么个效果，这必然是我的第一个难题，因为我的ELK
stack在我的家庭电脑上的一台虚拟机上运行，而我的蜜罐部署在云中。接着这个问题的第二部分出现了，因为我找遍了所有的文档和指导手册，但它们都是以上面那种用法（数据流）来讲的。我需要找到一种将本地存储的数据放入Elasticsearch索引的方法。这时我发现了源自MirkoNasato的一篇[博客](https://labs.encoded.io/2015/01/02/analytics-with-elasticsearch-and-kibana/)和一个[伴侣视频](https://www.youtube.com/watch?v=wHWb1d_VGp8)。Mirko的背景比较有意思，他运营着一个Wordismic的社交媒体游戏。在他的博客和视频中，他详细介绍了如何将本地游戏数据导入到Elasticsearch中，就像我们想要做的那样。
在Mirko的教程帮助下，我可以给我的Cowrie蜜罐数据构造索引了，然后使用Kibana进行可视化展示。这真的很容易，因为Cowrie可以以JSON格式本地记录其数据。很快的，我就有了下面这样的主控界面了。
但对于Dionaea来说，使用ELK又是另一个故事了。
Dionaea有个选项是支持数据记录到JSON格式文件的。该文件后缀是yaml，你一定会启用的文件（与Dionaea中其他的服务和handler一样）。在测试过程中，我曾经使用过这个特性，但因为某些原因，JSON记录不再正常工作了。当时那个情况持续了好几个星期。
为了解决这个问题，我决定在本地虚拟机上安装DionaeaFR去观察我的Dionaea数据。 但直到我在推特上向Ignacio
Sanmilan发送了关于Dionaea和MHN的消息，这个问题才感觉快被解决了。第二天，他向我发送了一条链接展示了他完成的最基本可视化效果。那效果太难忘了。在那之后，他还添加了一些其他的特性，那效果特别棒，就像是赋予了生命般
。
在得知Ignacio能够快速的重组前端界面后，这促使我开始思考是否要制作自己的Dionaea主控界面。但事实证明这比我想象的要困难的多了（很明显我的php很烂）。所以目前来说，我还是坚持用本地版本的DionaeaFR。
# 安装配置
以下是我的honeypot可视化解决方案的运行安装过程的详细信息
### VM配置
  1. VirturalBox配64位Linux Mint （GuestAdditions）
  2. 1处理器／3GB RAM／50GB固态
  3. 1个共享文件夹
##### 可选项
如果你通过共享文件夹在VM和主机之间传输数据，下面的命令会有助于你可能遇上的问题。
`sudo adduser username vboxsf`
### 安装步骤
    sudo apt-get update
    sudo apt-get upgrade
    sudo apt-get install curl
    sudo apt-get install software-properties-common
    sudo apt-get install ubuntu-restricted-extras
### ELK的安装
ELK stack的安装需要较新的JDK版本。
你可以从[这](\[here\]\(http://www.oracle.com/technetwork/java/javase/downloads/index.html))下载最新的JDK
在写这篇文章前我已经下载了jdk1.8.0_131-linux-x64.tar.gz，现在将这个压缩文件拷贝到/opt文件夹下：
    sudo cp jdk1.8.0_131-linux-x64.tar.gz /opt
    cd /opt
    tar -zxvf jdk1.8.0_131-linux-x64.tar.gz
    chown -R root jdk1.8.0_131
解压后可以删除原始的tar.gz文件了。
下一步，需要安装一些java组件的可选项了。
    sudo update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_60/bin/java 1
    sudo update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_60/bin/javac 1
    sudo update-alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_60/bin/jar 1
java的版本是必须手动设置的，命令如下：
    sudo update-alternatives --config java
所以选择你刚才安装的版本。
如果有需要的话，你可以通过命令行运行它们来进行测试（比如，输入java命令，确保运行了正确的版本）
### ELK Stack
有很多方法安装和运行ELK组件。其中一种方式是下载DEB后缀文件的组件，然后通过GDebi安装他们。安装完成后，你可以将组件作为服务运行，并配置成自启动。这过程非常容易，我初次安装用的就是这种方式。
在我的初次试用ELK和Cowrie中，我没有使用Logstash。毕竟我们只需要将本地数据存储到索引中然后将其可视化。这也是Mirko  
Nasato在他博客中提到的如何导入数据的方式。我们将继续使用这个，而不用Logstash处理数据。
#### 选项一：将ELK组件以服务运行
访问Elastic网站，下载最新的组件 —— Elasticsearch, Logstash 和 Kibana（Linux用户应该下载.DEB文件）
下载完成后，使用GDebi安装每个组件。这种安装方式默认安装在/usr/share/elasticsearch目录下（其他组件也是安装类似的目录下）。
接着通过下面的命令启动服务：
    sudo service elasticsearch start
    sudo service kibana start
##### 将ELK设置成开机启动
先判断你的系统使用的是SysV还是systemd
`ps -p 1`
假设你使用systemd来运行ElasticSearch（比如，Elementary OS）。