### 文本优化

#### Process Doppelganging (2017)
- **资源链接**:
  - [GitHub](https://github.com/hasherezade/process_doppelganging)
  - [YouTube](https://www.youtube.com/watch?v=Cch8dvp836w)

**技术细节**:
- 进程创建过程中不支持NTFS事务文件。因此，为了实现进程的分割和创建，需要寻找替代方法。
- 在Windows XP中，可以通过以下系统调用来跟踪和创建进程：
  - `CreateProcessW`
  - `NtOpenFile`
  - `NtCreateSection`
  - `NtCreateProcessEx`
  - `NtCreateThreadEx`

- 在Windows 10中，可以直接使用`NtCreateUserProcess`来创建进程，这看起来不再支持NTFS事务。然而，微软为了兼容性，仍然允许使用Windows XP时代的进程创建方法。

#### Transacted Hollowing (2018)
- **资源链接**:
  - [GitHub](https://github.com/hasherezade/transacted_hollowing)

**技术细节**:
- 该技术利用了NTFS事务和文件删除挂起状态来进行进程替换。
- 具体来说，它通过NTFS事务处理机制和文件删除挂起状态来实现对目标进程内存空间的修改。

#### Process Ghosting (2021)
- **资源链接**:
  - [GitHub](https://github.com/hasherezade/process_ghosting)

**技术细节**:
- 该技术结合了“删除挂起文件”和“Process Doppelganging”的手法。
- **关键步骤**:
  - 使用`DeleteFileW`函数删除文件，并通过逆向工程观察到其内部调用过程：
    - `NtOpenFile`
    - `NtQueryInformationFile`
    - `NtClose`
  - 通过`NtOpenFile`打开文件并设置删除标志。
  - 使用`NtSetInformationFile(FileDispositionInformation)`将文件设置为删除挂起状态。
  - 在此状态下，可以继续写入文件内容，但外部读取会失败。
  - 当关闭文件句柄时，文件会被删除。

通过这些技术，攻击者可以在操作系统中隐蔽地执行恶意代码，同时避免被常规的安全检测手段发现。