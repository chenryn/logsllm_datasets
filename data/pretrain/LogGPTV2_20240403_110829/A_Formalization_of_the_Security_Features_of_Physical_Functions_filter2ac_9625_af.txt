### Entropy and Min-Entropy in SRAM PUFs

Entropy, a concept from information theory, measures the uncertainty that an adversary has about a particular value. Specifically, min-entropy provides a strict lower bound for the unpredictability against any adversary. It is important to note that estimating the min-entropy of a physical function's response is generally very difficult and relies on statistical tests that offer only limited assurance. For SRAM PUFs, however, min-entropy can be estimated due to their simple structure. It has been shown that the relative min-entropy content of SRAM PUFs is relatively high, up to 95%. This can be attributed to two main reasons:

1. **Low Bias**: The bits in the response of a typical SRAM PUF are nearly balanced, meaning the number of ones and zeros is almost equal.
2. **Spatial Separation**: Each bit in the SRAM PUF response is generated by a spatially separate piece of physical material (i.e., an individual silicon SRAM cell), making it reasonable to assume that the produced bits are independent.

These factors significantly increase the unpredictability of SRAM PUF responses.

### Estimating Min-Entropy in SRAM PUFs

Given the experimental observations, we assume the SRAM PUF discussed in the previous sections to have a min-entropy of 80%, which is a conservative estimate. This means that every 255-bit response of the SRAM PUF contains, on average, 204 bits of min-entropy. Consequently, any adversary can guess the correct SRAM PUF response with a probability of at most \(2^{-204}\), which is negligible.

However, to assess the unpredictability of the PF system output, we must consider the extractor algorithm and the helper data. The fuzzy extractor construction, as described in Section IV-C and illustrated in Figure 2, outputs the SRAM PUF response \(z = y\) along with some helper data \(h\), which is the offset between \(y\) and a random codeword \(c\) from the BCH[255, 13, 59] error-correcting code. Since there are only \(2^{13}\) possible codewords \(c\) and the helper data \(h\) is stored or transferred publicly, the adversary knows that the 255-bit output of the PF system has the form \(z = c \oplus h\), which can only take one of \(2^{13}\) possible values. Therefore, the effective uncertainty of the adversary about \(z\) is at most 13 bits. Given the 80% relative min-entropy, we estimate this to be 10.4 bits per 255-bit response.

This significant reduction in min-entropy illustrates the cost of achieving high robustness. The extent of this min-entropy loss is directly related to the required error-correction capability of the underlying error-correcting code. Despite this, the remaining min-entropy still provides a strong lower bound for the predictability. No matter how strong the adversary is, its best guess of \(z\) will be correct only with a probability of at most \(2^{-10.4}\).

Thus, the example PF system based on an SRAM PUF and a fuzzy extractor is \((2^{-10.4}, 2^8 - 1)\)-unpredictable for \(P_L = P_C = \{P_{FS}\}\), both in the weak and strong sense. This means that even if all but one of the PF system outputs are known, an adversary cannot predict the last output with a probability greater than \(2^{-10.4}\). These assumptions can be generalized to many SRAM PUFs, leading to equivalent unpredictability bounds for \(P_L = P_C = P\).

### Generating Secret Keys with PF Systems

If the PF system is used to generate a secret key, it must be evaluated on different challenges multiple times to collect enough min-entropy. For instance, to generate a 128-bit key using the PF system in our example, at least 13 challenge-response pairs are required, leading to \(13 \times 255 = 3315\) response bits containing \(13 \times 10.4 = 135.2\) bits of min-entropy. To obtain the 128-bit key from these 3315 bits, they need to be compressed using an appropriate strong extractor, such as a universal hash function [40]. Typically, the strong extractor is integrated into the PF system as part of the Extract algorithm to ensure full entropy outputs. This process, known as privacy amplification, is a common part of fuzzy extractor constructions [34].

### Challenges and Future Work

It is more difficult to obtain strong quantitative unpredictability bounds for other PUF types because there are no known methods to estimate the min-entropy content of their responses. Additionally, statistical dependencies between responses on different challenges and of different PUF instantiations need to be considered, which can be challenging to detect. Min-entropy provides a strict information-theoretical lower bound on unpredictability, even against computationally unlimited adversaries. However, in practice, the computational power of the adversary is often limited. This means that even PUFs with low min-entropy content can still produce unpredictable responses if their simulation is computationally complex. Alternatively, the unpredictability of a particular type of PUF can be assessed with respect to the effort of the best-known modeling attack, similar to the approach used for symmetric cryptographic primitives (see Section V-C).

### Conclusion

Physically Unclonable Functions (PUFs) have been proposed to exploit physical characteristics for security purposes. Various practical instantiations of PUFs exist, ranging from real-life products to theoretical PUF-based primitives and protocols. Due to the diverse physical features they are based on, PUFs have been developed in independent models and under different assumptions, making their integration into secure information systems challenging. In this paper, we formalized the security features of physical functions, proposing a new general security model for PUFs that modularly captures the most important properties required for their integration into cryptographic primitives and security applications. Our model focuses on the minimum requirements for PUFs and can be extended to include additional security-relevant properties for future use cases, such as tamper-evidence. Another challenge is to develop new cryptographic mechanisms based on PUFs where the security can be reduced to the (alleged) properties of the deployed PUFs. Further research could also analyze other PUF types with respect to the properties formalized in our model.

### Acknowledgements

We thank Pim Tuyls for several useful discussions and the anonymous reviewers for their helpful comments. This work has been supported in part by the European Commission under grant agreements ICT-2007-238811 UNIQUE and ICT-2007-216676 ECRYPT NoE phase II, and in part by the IAP Programme P6/26 BCRYPT of the Belgian State. Fran√ßois-Xavier Standaert is an associate researcher of the Belgian Fund for Scientific Research (FNRS-F.R.S.). Roel Maes is funded by a specialization grant (nr. 073369) of the Flemish Agency for Innovation by Science and Technology (IWT).

### References

[References listed as in the original text]

---

This version of the text is more structured and coherent, with clear headings and a logical flow. The language is also more precise and professional, making it easier to understand and follow.