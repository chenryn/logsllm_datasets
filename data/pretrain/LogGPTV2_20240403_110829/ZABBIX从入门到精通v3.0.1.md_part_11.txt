grpmax 最大值
grpmin 最小值
grpsum 总和
支持按 item 的 function
ITEM FUNCTION 描述
avg 平均值
count value个数
last 最新值
max 最大值
min 最小值
sum 总值
参数 timeperiod 为指定的采集时间，可以使用时间单位，例如可以使用 1d 代替 86400（单位默认为秒）,5m 代替
300.
备注：
 如果第三个参数为last，那么timeperiod参数值将会被server忽略掉
 只有被监控的HOST上启用的item才会被计入aggregate check
使用范例
示例1
组MySQL Servers剩余硬盘空间大小
grpsum["MySQL Servers","vfs.fs.size[/,total]",last,0]
示例2
组MySQL Servers的平均CPU负载
grpavg["MySQL Servers","system.cpu.load[,avg1]",last,0]
示例3
组MySQL Servers 5分钟内的平均查询速度（次/秒）
grpavg["MySQL Servers",mysql.qps,avg,5m]
示例4
多个组的cpu负载平均值
grpavg[["Servers A","Servers B","Servers C"],system.cpu.load,last,0]
示例（带图）
获取linux servers组内所有HOST平均运行天数
首先在zabbix server上配置item,名字就叫做：zabbix aggregate(平均运行天数)，
key为：grpavg[“Linux servers”,”system.uptime”,last,0]
具体请看图：
获取到的结果如下：
最后
如果如要对某个监控项有一个整体的了解，zabbix aggregate是你的不二选择.
zabbix Queue 队列
概述
queue（队列）显示监控项等待刷新的时间,可以看到每种agent类型刷新时间，通过queue可以更好的体现出监控
的一个指标.正常情况下，是一片绿色。如果出现过多红色，那么需要留意一下。我们也可以在右上角的下拉条选
detail，可以找出到底是哪个item的问题。
读取队列
点击Administration（管理） → Queue（队列）. 下拉框三个选项，分别为overview、overview by proxy、detail，
如下为overview
上图大部分为绿色，表示服务器整体OK，上图可以看到10秒和5分钟处有两个item还未刷新.为了找出是哪个item，
我们可以再下拉框选到detail。
如上图，可以轻易的找出刷新存在延迟 item 的详细信息（因为延迟很快就恢复了，所以第一张图抓到 7 个延迟，
detail 只出现一个）。偶尔出现几个延迟，那是很正常的，一般都会快速恢复的。但是如果比较多的超过 10 分钟的
延迟，那么你要好好的留意一下了。有可能出现比较严重的问题。
远程节点延迟
来自子节点（child node）的信息部都不是最新的。master 节点接受到的数据都存在一定得延迟（通常情况下，多
则需要10秒）
决定子节点信息延迟因素
 子节点性能
 子节点与主节点之间的通行质量
 子节点与主节点之间的时间差
Queue item
既然queue也是一项性能指标，那么我们也有很必要把他加入监控项，zabbix提供了内建item zabbix[queue,,] ，from
默认为6秒，表示超过多少秒便报警，to默认为infinity，也就是无限制.
zabbix 正则表达式应用
概述
在前面的《zabbix low-level discovery》一文中有filter一项，用于从结果中筛选出你想要的结果，比如我们在filter
中填入^ext|^reiserfs则表示{#FSTYPE}要符合ext与reiserfs才能加入到item中。这个需求比较简单，假如我们过滤
方法更严格怎么办？或者说多个 low-level 的 filter 都有用到同一个正则表达式，并且希望修改一处，所有的 filter
都跟着修改，请使用zabbix正则表达式。
配置
点击Administration >>General>>右侧下拉表选择“ Regular expressions”>>New regular expression.
所有匹配完全匹配btrfs|ext2|ext3|ext4|jfs|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|ntfs|fat32|zfs文件类型返回true，正则表达式
为^(btrfs|ext2|ext3|ext4|jfs|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|ntfs|fat32|zfs)$
说明：如果符合如上表达式，那么返回TRUE，否则返回FLASE，可以Add多个表达式，所有的表达式之间是逻辑
与的关系，必须所有的表达式都返回TRUE，最终的结果才是TRUE。
正则表达式参数说明
Expression：正则表达式名称
Expression type：正则表达式类型
1. Character string included - 字符串包含，例如表达是处写abc，你返回的内容是abcd，那么就算匹配了，将会返回
TRUE
2. Any character string included - 任意字符串包含在内（以逗号','，点号'.'，斜杠'/'分隔），这边使用上有点问题
3. Result is TRUE - 符合正则表达式返回TRUE、否则返回FALSE
4. Result is FALSE - 符合正则表达式返回FALSE、否则返回TRUE
Case sensitive：是否区分大小写
点击Test标签测试正则表达式是否符合预期，例如输入ext2点击test，可以发现最后结果是TRUE，如下图
输入不符合预期的值d:，我们可以发现最后结果是FLASE，如下图
常用示例
1. 排除lo网卡与Software Loopback interface开头的内容
不符合表达式的eth1:1返回TRUE
符合表达式的 Software Loopback Interface 123返回FLASE
如何引用正则表达式
例如 low-level filter 需要引用表达式，在表达式名称前加@即可，例如@你的正则表达式名称、@File systems for
discovery
正则表达式名称规范
名称可以包含逗号与空格，例如@network, ttlsa，个人不推荐你使用逗号，让人觉得很奇怪，并且使用逗号的时
候，你需要用双引号将整个名称括起来，例如“@network, ttlsa”。
zabbix 导入/导出配置文件
通过导入/导出 zabbix 配置文件，我们可以将自己写好的模板等配置在网络上分享，我们也可以导入网络上分享的
配置文件，配置文件有两种格式，分为为xml与json，通过zabbix管理界面可以导出xml，通过zabbix api可以导
出json与xml格式配置。
可导出的项目
 host groups (只能通过zabbix api导出)
 templates (包含所有预其直接关联的items, triggers, graphs, screens, discovery rules和link的template)
 hosts (包含所有与它直接相关的items, triggers, graphs, discovery rules 和link的template)
 network maps (包含所有相关图片; map export/import 从Zabbix 1.8.2开始被支持)
 images
 screens
导出详细说明
 导出为单个文件
a) Host and template从模板中link过来的实体 (items, triggers, graphs, discovery rules)不会导出，通过low-level创
建的实体不会导出。但是导如之后，会重新创建link的实体。
b) 与low-level实体相关联的实体不会被导出，例如触发器。
c) web items相关的Triggers and graphs不支持导出
 导入详细说明
a) 导如过程中遇到任何错误，都会停止导入
b) 支持导如xml与json格式文件，并且文件名后缀必须为.xml或者.json
XML文件基本格式
2.0
2015-02-09T05:58:54Z
xml默认头
zabbix xml root 元素
导出版本
2.0
导出日期
2015-02-09T05:58:54Z
导出模板
configuration>>templates>>勾选需要导出的模板>>左下角下拉列表选择"Export selected",点击Go，保存xml即可。
如下是我的一个测试模板内容
2.0
2015-02-09T07:34:25Z
Templates
A_Template_For_Discovery
A_Template_For_Discovery
Templates
Network
PING
0
net.if.icmpping
30
0
0
0
0
0
{#LOC}:^cn|^jp
30
PING IP $1
3
1
icmpping[{#IPADD},4,,,]
30
90
365
0
3
0
0
0
0
1000
0
0
0
Network