### Tomcat 和 Resin 的配置与安全

#### 1. 关注目录
主要关注 `conf` 和 `webapps` 目录。`conf` 目录包含重要的 Tomcat 配置文件，例如：
- `tomcat-users.xml`：用于配置登录账号。
- `server.xml`：用于域名绑定、端口设置、数据源（部分情况）及 SSL 配置。
- `context.xml`：用于数据源配置。
- `web.xml`：用于容器初始化调用。

#### 2. 源码下载
- **Tomcat 6**：[http://svn.apache.org/repos/asf/tomcat/tc6.0.x/tags/TOMCAT_6_0_18/](http://svn.apache.org/repos/asf/tomcat/tc6.0.x/tags/TOMCAT_6_0_18/)
- **Tomcat 7**：[http://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/](http://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/)

#### 3. Tomcat 默认配置
1. **`tomcat-users.xml`**
   - Tomcat 5 默认配置了两个角色：`tomcat` 和 `role1`。默认密码均为 `tomcat`，但这些账号没有直接部署应用的权限。需要具备 `manager` 权限才能部署 WAR 包。更多详细信息请参阅 [Tomcat Manager How-To](http://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#Introduction)。
   - Tomcat 6 默认未配置任何用户或角色，因此无法使用默认账号登录。

2. **`context.xml`**
   - 此文件用于配置 Tomcat 的上下文，通常包括数据源配置。找到对应的数据源后，可以使用相应的账号和密码连接数据库。

3. **`server.xml`**
   - 这个配置文件非常重要，包含了访问端口、域名绑定、数据源等配置。如果需要查找域名对应的目录或 HTTPS 配置，也在此文件中进行。

4. **`web.xml`**
   - 项目初始化时会调用此配置文件。尽管较少修改，但其重要性不容忽视。通过修改 `web.xml` 可以实现某些特定功能。

#### 4. Tomcat 获取 WebShell
- **后台部署 WAR 文件获取 WebShell**
  - 登录地址：`http://xxx.com/manager/html`
  - **Deploy directory or WAR file located on server**：适用于发布位于 `/webapps` 目录下的 Web 应用。
  - **WAR file to deploy**：适用于发布任意目录下的 Web 应用。

#### 5. Tomcat 口令爆破
- Tomcat 认证较弱，采用 Base64 编码的用户名和密码。请求 `/manager/html/` 时，若响应码不是 401，则表示登录成功。

#### 6. Tomcat 漏洞
- Tomcat 5、6、7 存在多种安全漏洞。可以通过以下途径查看历史版本和漏洞信息：
  - **Apache Tomcat 安全公告**：
    - [Tomcat 5 漏洞](http://tomcat.apache.org/security-5.html)
    - [Tomcat 6 漏洞](http://tomcat.apache.org/security-6.html)
    - [Tomcat 7 漏洞](http://tomcat.apache.org/security-7.html)
  - **CVE 通用漏洞与披露**：
    - [CVE 列表](http://cve.scap.org.cn/cve_list.php?keyword=tomcat&action=search&p=1)
    - [Cvedetails](http://www.cvedetails.com/product/887/Apache-Tomcat.html?vendor_id=45)
    - [Sebug](http://sebug.net/appdir/Apache+Tomcat)

#### 7. Resin
- **Resin 版本**：
  - 主流版本为 Resin 3 和 Resin 4，具体更新详情请参阅官方文档。
- **Resin 默认配置**：
  - 核心配置文件为 `resin.conf` 或 `resin.xml`，类似 Tomcat 的 `server.xml`。
  - **数据源**：搜索 `database` 标签。
  - **域名绑定**：搜索 `host` 标签。
- **Resin 默认安全策略**：
  - **管理后台访问权限**：默认仅允许本机访问，需手动修改配置以允许外部 IP 访问。
  - **管理后台密码**：密码默认加密，无法反解。
- **Resin 获取 WebShell**：
  - 支持远程部署 Web 应用，但需通过 HTTPS 方式访问后台。
- **Resin 漏洞**：
  - 相对较少，但仍需关注相关安全公告和 CVE 列表。

希望这些信息能帮助您更好地理解和配置 Tomcat 和 Resin。