323.30
504.96
1024.92
Sign
(mJ)
546.50
313.60
134.20
166.75
191.37
298.86
611.40
Verify
(mJ)
15.97
338.02
196.23
243.84
279.82
437.00
895.98
gram code and most of their time executing the library code.
Different phones’ MIDP implementations vary signiﬁcantly
in their performance characteristics, so the best-performing
approach on one phone may not be the best on another.
Our analysis about the execution speed focuses on the eval-
uation of the cryptographic library adopted in the Trusted-
SMS framework:
the Bouncycastle. The performance
analysis try to evaluate all the supported elliptic curves
which agree NIST recommendations [27] searching for the
best candidate curve to adopted as elliptic curve of the
Trusted SMS framework. Concerning the binary ﬁelds the
EC163(1), EC233(2), EC283(3), EC409(4), and EC571(5)
are rated; EC192(1), EC224(2), EC239(3), EC256(4),
EC384(5), and EC521(6) are evaluated as elliptic curves
over prime ﬁelds. The execution time for generating keys,
generating a signature, verifying a signature, encrypting a
plaintext, and decrypting a plaintext are evaluated in our
performance analysis. All results are obtained replicating
each operation 50 times over a Nokia N70 device (Sym-
bian OS v. 8.1a, Series 60 2nd edition, CPU ARM-926
220 MHz); the Nokia N70 behaves as a large portion of
the Nokia device actually on market, the E Series and N Se-
ries are all equipped with the same processor. As expected,
the smallest curves performs better than other curves [15].
The results obtained for the key generation operation are
analyzed and depicted in ﬁgure 1. We can note that the
curves over prime ﬁelds perform considerably better than
the curves over binary ﬁelds. If the midlet has to generate
its own key pair at each power-on the choice of a curves that
belong to the prime curves seems to be granted. In partic-
ular we can restrict the candidate curves to the ﬁrst four
curves ((1)EC192, (2)EC224, (3)EC239, and (4)EC256)
which keep the average key generation time below the 5
sec. threshold.
Similar properties can be observed over the signature gen-
eration and veriﬁcation operations. Figures 2 and 3 show
the execution time average value. Causing the about 15 sec.
required for a signature veriﬁcation also the (4)EC256 is ex-
cluded from the candidates curves. The candidate curves set
is reduced to three curves (EC192, EC224, and EC239).
Observing results obtained for the encryption and de-
Figure 1. ECC key generation time
Figure 2. ECC signature generation time
Figure 3. ECC signature veriﬁcation time
cryption operations we can note that the performance of
the binary curves and the prime curves are slight different.
Clearly the (2)EC224 performs better than the (3)EC239 for
both the cryptographic operation with a thick margin(25%).
For this reason we further restrict the candidate curve set
excluding the (3)EC239.
Our analysis detect that the candidate curves set is
composed by two curves belonging to the prime curves:
(1)EC192 and (2)EC224. However the choice of a spe-
ciﬁc curve must be the result of a careful tuning between
security, SMS plaintext length, and usability. For example,
a 160 bit elliptic curve cryptosystem is comparable with a
1024 bit RSA cryptosystem as shown in the table 2; this
curve requires 40 bytes for the signature around 28% of the
492492
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:56:46 UTC from IEEE Xplore.  Restrictions apply. 
Figure 4. ECC plaintext encryption time
is about 1 Kbit/s (while its nominal speed should be 9.6
Kbit/s); many WAP gateways are typically conﬁgured for
small WAP pages and may not support large ﬁles (in par-
ticular, JAR ﬁles over 100 kB may hit this problem); mass-
market MIDP phones may have a very limited amount of
storage space for MIDlet JAR ﬁles (this varies widely be-
tween phone models); generally, users will prefer small MI-
Dlets because they can have more of them in their phone at
once.
Usability through perceived performance The user ac-
tually cares less about how fast MIDlet is,
than about
how fast MIDlet feels. There are many well-known tricks
to make the MIDlet feels faster, even though the tricks
may actually slow it down a little (e.g. splashscreen, an-
imated progress indicator,...). Trusted-SMS MIDlet was
designed and realized in order to ensure a pleasant user
experience. For this reason,
in order to achieve quick
responsiveness, the event call-backs (e.g. CommandLis-
tener.commandAction) return quickly, as they may be called
from the same thread that redraws the screen; whenever they
need to do some long action, they are started in a separate
thread ensuring a way for the user to abort them.
Figure 5. ECC plaintext decryption time
8 Conclusions
SMS available space. On the other hand the a 210 bit elliptic
curve cryptosystem grant a security level comparable with
a 2048 bit RSA cryptosystem, but in this case the signature
is 54 bytes around 38% of the SMS available space.
Table 2. Performance comparison between
RSA and ECC based on key size
Time to break RSA/DSA
[MIPS-year]
104
108
1011
1020
1078
RSA/ECC
key size ratio
5:1
6:1
7:1
10:1
35:1
key size
512
768
1024
2048
21000
ECC
key size
106
132
160
210
600
For these reason we select the EC192 over prime ﬁeld as
the best candidate curves for the Trusted-SMS frameworks.
It fulﬁlls the performance needs for all the cryptographic
operations analyzed. Moreover it allow to realize a cryp-
tosystem that can be compared to a 1024bit key RSA cryp-
tosystem.
In order to provide some current use (and misuse) of
SMS, the reader could consider that SMS are currently used
• to pay (e.g. Paypal and the Google patent for the SMS
based system Gpay);
• to alert citizens about possible dangers in the hosting
country (e.g. Italian Foreign Minister [24] ), or to in-
form citizens about the current activities in the nuclear
power plant close to their home [Nuclear and Indus-
trial Safety Agency (NISA), [26] ], thus avoiding the
dissemination of false alarms by the media;
• to perform phone phishing (SMiShing), such as ([32]
and [37] );
• to authenticate to Wireless Hotspots [8] ;
• to inform the company to be off [30] , or, viceversa, to
inform the employees of their ﬁring [25]
• for interactive shopping as www.Shoptext.com, an in-
stant commerce service that lets you purchase online
items via text messaging.
Jar ﬁle size There are several reasons to keep the JAR ﬁle
size as small as possible: the MIDlet suite downloads faster,
for example, GSM circuit-switched data real throughput
Supposing that new forms (commercial, administrative,
bizarre, as for example the previous third item) of SMS-
usage will start to spread, a more important role played by
493493
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:56:46 UTC from IEEE Xplore.  Restrictions apply. 
digitally signed text messages could be requested. This con-
cept is strengthened by a well established CA market, own-
ing a PKI, ready to provide new services to mobile devices.
In this paper we shown how to extend to smartphone the
digital signature based on ECDSA. Some of the choices in
charge of the designer are debated, depicting the strengths
and weaknesses of every choice. Future work includes, but
is not limited to, understanding the cost of reverse engi-
neering a Java Midlet, to benchmark and improve the dif-
ferent performance using crypto APIs in native language
with RMI (versus Bouncycastle) and to store the keying ma-
terial on the SIM card or on a tamper proof external card
(SD/MMC).
References
[1] Cellular online,
latest mobile,
gsm,
global,
hand-
statistics.
base
set,
cellular
www.cellular.co.za/stats/stats-main.htm, 2007.
regional
station
and
[2] Cryptosms - protecting your conﬁdential sms messages.
http://www.cryptosms.com/, May 2008.
[3] Fortresssms - phone based application to send and read
encrypted sms text messages. http://www.cryptosms.com/,
May 2008.
[4] Kryptex -
send and receive
encrypted text
sms.
http://kryptext.com/aboutkryptext.html, May 2008.
[5] Multitasker
made
http://multitasker.softonic.de/symbian, May 2008.
messaging
-
easy.
[6] ANSI. Ansi x9.62-1998, public key cryptography for the ﬁ-
nancial services industry: The elliptic curve digital signature
algorithm (ecdsa). 1998.
[7] T. I. Association. Tia/eia-637-a, short message service. De-
cember 1999.
[8] Assoprovider.
Association of
indipendent provider.
http://www.assoprovider.it/, January 2008.
[9] Bouncycastle.
The
legion
of
the
bouncycastle.
http://www.bouncycastle.org/, May 2008.
[10] C.Collberg. Watermarking, tamper-prooﬁng, and obfusca-
IEEE Transactions on
tion tools for software protection.
Software Engineering, 8, August 2002.
[11] C.Linn. Obfuscation of executable code to improve resis-
tance to static disassembly. In Proc. 10th. ACM Conference
on Computer and Communications Security (CCS 2003),
pages 290–299, October 2003.
[12] C.Wang. Protection of software-based survivability mech-
anisms. In Proc. International Conference of Dependable.
Systems and Networks, July 2001.
[13] D.Hugo.
Fexplorer
web
site.
http://users.skynet.be/domi/fexplorer.htm, May 2008.
[14] D.Jonson. The elliptic curve digital signature algorithm.
Communication Research Group University of Sussex, 2001.
[15] J. Higgins. Performance of ﬁnite ﬁeld arithmetic in an ellip-
tic curve cryptosystem. Security Technology, CCST ’05 39th
Annual 2005 International Carnahan Conference on, pages
249 – 256, 2001.
[16] I.Arce.
Interface illusions.
IEEE Security and Privacy,
pages 66 – 99, 2004.
494494
edition.
May
sicuri.
sms.
[17] J.Brown.
Sms:
The
short message
http://www.computer.org/portal/site/computer,
2008.
service.
May
[18] J.Saltzer. The protection of information in computer sys-
tems. Proceedings of the IEEE, 63:1278–1308, 1975.
[19] K. Kalba. The adoption of mobile phones in emerging mar-
kets: Global diffusion and the rural challenge. 6th Annual
Global Mobility Roundtable 2007 Center for Telecom Man-
agement Marshall School of Business, University of South-
ern California Los Angeles, June 2007.
[20] K.Y.Lai. Efﬁcient soap binding for mobile web services. Lo-
cal Computer Networks 30th Anniversary, The IEEE Con-
ference on, pages 218 – 225, 2005.
[21] L.Barbi. Spidersms - sending and reception of encrypted
sms. http://www.lucabarbi.it/lec/spidersms.htm, May 2008.
[22] A. D. Merwe. Phishing in the system of systems settings:
mobile technology. I Systems Man and Cybernetics, IEEE
International Conference on, pages 228–232, 2005.
[23] S. Microsystem.
Java
2 micro
http://developers.sun.com/techtopics/mobility/,
2008.
[24] I.
F.
Minister.
Viaggiare
http://www.viaggiaresicuri.mae.aci.it/, January 2008.
[25] News24.
Employee
ﬁred
via
http://www.news24.com/News24/World/News/0,,2-10-
1462 1978414,00.html, August 2006.
[26] Nuclear and I. S. A. (NISA). Nisa’s mission and code of con-
duct. http://www.nisa.meti.go.jp/english/index.htm,, January
2008.
[27] N. I. of Standard Technology (NIST). Digital signature stan-
dard. http://csrc.nist.gov/cryptval/dss.htm, September 2007.
[28] OMA. Implementation best practices for oma drm v1.0 pro-
tected midlets. May 2004.
[29] A. Raghunathan. A study of the energy consumption
charachteristics and cryptographic algorithms and security
protocol. Transaction on Mobile Computing, 5:128–143,
February 2006.
[30] T. Register.
Employee sacked for
texting in sick.
http://www.theregister.co.uk/2007/11/23/, January 2008.
[31] C. Research.
Sms spooﬁng, q&a with ccrc staff.
http://www.crime-research.org/interviews/sms-spooﬁng-
intro, May 2008.
[32] SearchMobileComputing.
Smishing
http://searchmobilecomputing.techtarget.com/,
2008.
deﬁnition.
January
[33] T.Ogiso. Software obfuscation on a theoretical basis and
its implementation. IEEE Trans. Fundamentals, E86-A(1),
January 2003.
[34] TTI.
Mobile commerce has taken off,
says tele-
telecom trends international.
com trends international,
http://www.telecomtrends.net/pr MIIS-1.htm, 2004.
a
- messages
Miabo
in
[35] U.Chirico.
bottle.
http://www.ugosweb.com/miabo/index.aspx, May 2008.
[36] W.Cho. Against intelligent tampering: Software tamper
In Proc.
resistance by extended control ﬂow obfuscation.
World Multiconference on Systems, Cybernetics, and Infor-
matics, 2001.
[37] ZDNet.
attack
http://news.zdnet.co.uk/security, January 2008.
phishing
Phone
hits
us.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:56:46 UTC from IEEE Xplore.  Restrictions apply.