    ``` literallayout
    # virt-install --name rhel8sb --memory 4096 --vcpus 4 --os-variant rhel8.0 --boot uefi,nvram_template=/usr/share/OVMF/OVMF_VARS.secboot.fd --disk boot_order=2,size=10 --disk boot_order=1,device=cdrom,bus=scsi,path=/images/RHEL-8.0-installation.iso
    ```
2.  根据屏幕上的说明，按照操作系统安装过程进行操作。
:::
::: orderedlist
**验证**
1.  安装客户机操作系统后，通过在 [图形 guest 控制台中打开终端 或使用 SSH
    连接到
    guest](#getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization.html#proc_opening-a-virtual-machine-graphical-console-using-virt-viewer_assembly_connecting-to-virtual-machines "使用 Virt Viewer 打开虚拟机图形控制台"){.link}
    OS，以访问虚拟机的命令行。
2.  要确认虚拟机中启用了 SecureBoot，请使用它们ok
    `util --sb-state`{.literal} 命令：
    ``` literallayout
    # mokutil --sb-state
    SecureBoot enabled
    ```
:::
::: itemizedlist
**其它资源**
-   有关创建使用 RHEL 8
    作为客户机操作系统的虚拟机时安装过程的详情，[请参阅引导 RHEL 8
    安装](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_installation/getting-started_installing-rhel#booting-the-installer_getting-started){.link}。
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#automatic-features-for-virtual-machine-security_securing-virtual-machines-in-rhel-8}虚拟机安全性的自动功能 {.title}
:::
除了提高
["保护虚拟机的最佳实践"一节](#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#best-practices-for-securing-virtual-machines_securing-virtual-machines-in-rhel-8 "保护虚拟机的最佳实践"){.xref}
中所列虚拟机安全性的手动方法外，libvirt [**软件**]{.strong}
套件还提供了许多安全功能，并在 RHEL 8 中使用虚拟化时自动启用。它们是：
::: variablelist
[]{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#system-and-session-connections_securing-virtual-machines-in-rhel-8}
[系统和会话连接]{.term}
:   要访问 RHEL 8 中所有可用虚拟机管理的实用程序，您需要使用 libvirt
    [*的系统连接*]{.emphasis}
    (q`emu:///system`{.literal})。为此，您必须在系统中具有 root
    权限，或者是 [*libvirt*]{.emphasis} 用户组的成员。
    不属于 libvirt 组中的非 root 用户只能访问 [*libvirt*]{.emphasis} 的
    [*会话连接*]{.emphasis}
    (`qemu:///session`{.literal})，后者必须在访问资源时遵守本地用户的访问权限。例如，使用会话连接时，您无法检测或访问系统连接或其他用户中创建的虚拟机。另外，可用的
    VM 网络配置选项也有很大限制。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    RHEL 8 文档假设您有系统连接权限。
    :::
[虚拟机分离]{.term}
:   单个虚拟机作为隔离进程在主机上运行，并依赖于主机内核强制的安全性。因此，虚拟机无法读取或访问同一主机上其他虚拟机的内存或存储。
[QEMU 沙盒]{.term}
:   此功能可以防止 QEMU 代码执行可能会破坏主机安全性的系统调用。
[内核地址空间随机化(KASLR)]{.term}
:   启用随机化内核映像解压缩的物理和虚拟地址。因此，KASLR
    会根据内核对象的位置防止客户机安全性漏洞。
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#virtualization-booleans-in-rhel-8_securing-virtual-machines-in-rhel-8}虚拟化布尔值 {.title}
:::
要在 RHEL 8 系统上对虚拟机安全性进行精细配置，您可以在主机上配置 SELinux
布尔值，以确保管理程序以特定的方式工作。
要列出所有与虚拟化相关的布尔值及其状态，请使用
`getsebool -a | grep virt`{.literal} 命令：
``` literallayout
$ getsebool -a | grep virt
[...]
virt_sandbox_use_netlink --> off
virt_sandbox_use_sys_admin --> off
virt_transition_userdomain --> off
virt_use_comm --> off
virt_use_execmem --> off
virt_use_fusefs --> off
[...]
```
要启用特定的布尔值，请以 root 用户身份在
`命令中使用 setsebool -P boolean_name `{.literal}。要禁用布尔值，请使用
`setsebool -P boolean_name off`{.literal}。
下表列出了 RHEL 8 中提供的虚拟化相关布尔值，以及它们在启用时执行的操作：
::: table
[]{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#idm140399931671600}
**表 15.1. SELinux 虚拟化布尔值**
::: table-contents
  SELinux 布尔值               描述
  ---------------------------- -------------------------------------------------
  staff_use_svirt              启用非 root 用户创建并转换虚拟机至 sVirt。
  unprivuser_use_svirt         启用非特权用户创建虚拟机并将其转换至 sVirt。
  virt_sandbox_use_audit       启用沙盒容器来发送审核信息。
  virt_sandbox_use_netlink     启用沙盒容器使用 netlink 系统调用。
  virt_sandbox_use_sys_admin   启用沙盒容器使用 sys_admin 系统调用，如 mount。
  virt_transition_userdomain   启用虚拟进程作为用户域运行。
  virt_use_comm                启用 virt 使用串行/并行通信端口。
  virt_use_execmem             支持受限虚拟客户机使用可执行内存和可执行堆栈.
  virt_use_fusefs              启用 virt 读取 FUSE 挂载的文件。
  virt_use_nfs                 启用 virt 管理 NFS 挂载的文件。
  virt_use_rawip               启用 virt 与 rawip 套接字交互。
  virt_use_samba               启用 virt 管理 CIFS 挂载的文件。
  virt_use_sanlock             启用受限制的虚拟客户机与 sanlock 交互。
  virt_use_usb                 启用 virt 使用 USB 设备。
  virt_use_xserver             启用虚拟机与 X 窗口系统交互。
:::
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#setting-up-secure-execution-on-ibm-z_securing-virtual-machines-in-rhel-8}在 IBM Z 上设置 IBM Secure Execution {.title}
:::
当使用 IBM Z 硬件来运行 RHEL 8 主机时，您可以通过为虚拟机配置 IBM Secure
Execution 来提高虚拟机(VM)的安全性。
IBM Secure Execution（也称 Protected
Virtualization）可防止主机系统访问虚拟机的状态和内存内容。因此，即使主机被攻击，也无法用作攻击客户端操作系统的向量。另外，安全执行也可以用来防止不可信主机从虚拟机获取敏感信息。
以下流程描述了如何将 IBM Z 主机上的现有虚拟机转换为安全虚拟机。
::: itemizedlist
**先决条件**
-   系统硬件是以下之一：
    ::: itemizedlist
    -   IBM z15 或更高版本
    -   IBM LinuxONE III 或更高版本
    :::
-   为您的系统启用安全执行功能。要验证，请使用：
    ``` literallayout
    # grep facilities /proc/cpuinfo | grep 158
    ```
    如果这个命令显示任何输出，代表您的 CPU 与安全执行兼容。
-   内核包含对安全执行的支持。要确认，请使用：
    ``` literallayout
    # ls /sys/firmware | grep uv
    ```
    如果命令生成任何输出，您的内核支持安全执行。
-   主机 CPU 模型包含 `解包`{.literal} 功能。要确认，请使用：
    ``` literallayout
    # virsh domcapabilities | grep unpack
    ```
    如果 命令生成上述输出，则您的 CPU 主机模型与安全执行兼容。
:::
::: itemizedlist
-   虚拟机的 CPU 模式设置为
    `host-model`{.literal}。若要对此进行确认，请使用以下内容并将
    `vm-name`{.literal} 替换为虚拟机的名称：
    ``` literallayout
    # virsh dumpxml vm-name | grep ""
    ```
    如果命令生成任何输出，虚拟机的 CPU 模式会被正确设置。
:::
::: itemizedlist
-   您已获取并验证了 IBM Z 主机密钥文档。有关具体步骤，请参阅 IBM
    文档中的
    [验证主机密钥文档](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lxse/lxse_t_verify.html#lxse_verify){.link}。
:::
::: orderedlist
**流程**
1.  将 `prot_virt=1`{.literal} 内核参数添加到主机的
    [引导配置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-command-line-parameters_managing-monitoring-and-updating-the-kernel#changing-kernel-command-line-parameters-for-all-boot-entries_setting-kernel-command-line-parameters){.link}。
    ``` literallayout
    # # grubby --update-kernel=ALL --args="prot_virt=1"
    ```
2.  为您要保护的虚拟机创建参数文件。例如：
    ``` literallayout
    # touch ~/secure-parameters
    ```
3.  在主机的 `/boot/loader/entries`{.literal}
    目录中，使用最新版本识别引导装载程序条目：
    ``` literallayout
    # ls /boot/loader/entries -l
    [...]
    -rw-r--r--. 1 root root  281 Oct  9 15:51 3ab27a195c2849429927b00679db15c1-4.18.0-240.el8.s390x.conf
    ```
4.  检索引导装载程序条目的内核选项行：
    ``` literallayout
    # cat /boot/loader/entries/3ab27a195c2849429927b00679db15c1-4.18.0-240.el8.s390x.conf | grep options
    options root=/dev/mapper/rhel-root crashkernel=auto rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap
    ```
5.  将 options 行和 `swiotlb=262144 的内容`{.literal}
    添加到创建的参数文件中。
    ``` literallayout
    # echo "root=/dev/mapper/rhel-root crashkernel=auto rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap swiotlb=262144" > ~/secure-parameters
    ```
6.  为所选虚拟机生成 IBM Secure Execution 镜像。
    例如，以下命令会基于
    ` /boot/vmlinuz-4.18.0-240.el8.s390x 映像`{.literal} （使用
    `secure-`{.literal} parameters 文件）、/ `boot/initramfs-`{.literal}
    4.18.0-240.el8.s390x.img 初始 RAM 磁盘文件和
    `HKD-8651-000201C048.crt 主机密钥文档，创建 /boot/initramfs`{.literal}
    -``{=html} 4.1 安全映像。
    ``` literallayout
    # genprotimg -i /boot/vmlinuz-4.18.0-240.el8.s390x -r /boot/initramfs-4.18.0-240.el8.s390x.img -p ~/secure-parameters -k HKD-8651-00020089A8.crt -o /boot/secure-image
    ```
    使用 `genprotimg`{.literal}
    实用程序创建安全映像，其中包含内核参数、初始 RAM 磁盘和引导映像。
7.  在虚拟机的客户机操作系统中，更新虚拟机的引导菜单，以从安全镜像引导。此外，删除以
    `initrd`{.literal} 和 `选项`{.literal} 开头的行，因为不需要它们。
    例如，在 RHEL 8.3 虚拟机中，可以在 `/boot/loader/entries/`{.literal}
    目录中编辑引导菜单：
    ``` literallayout
    # cat /boot/loader/entries/3ab27a195c2849429927b00679db15c1-4.18.0-240.el8.s390x.conf
    title Red Hat Enterprise Linux 8.3
    version 4.18.0-240.el8.s390x
    linux /boot/secure-image
    [...]
    ```
8.  启用 virtio 设备以使用共享缓冲区。为此，请使用
    `virsh edit`{.literal} 修改虚拟机的 XML 配置，并将 add
    `iommu='on'`{.literal} 改为所有具有一个设备的
    ` 行`{.literal}。例如：
    ``` programlisting
    ```
    如果设备配置不包含任何 ``{.literal} 行，请改为添加
    ``{.literal}。
9.  禁用虚拟机上的内存
    Ballooning，因为此功能与安全执行不兼容。要做到这一点，请在虚拟机 XML
    配置中添加以下行。
    ``` programlisting
    ```
10. 创建可引导磁盘镜像
    ``` literallayout
    # zipl -V
    ```
11. 安全地删除原始的未保护的文件。例如：
    ``` literallayout
    # shred /boot/vmlinuz-4.18.0-240.el8.s390x
    # shred /boot/initramfs-4.18.0-240.el8.s390x.img
    # shred secure-parameters
    ```
    原始引导镜像、初始 RAM
    映像和内核参数文件未受保护，如果未移除，启用了安全执行的虚拟机仍会受到黑客攻击或敏感数据检索的影响。
:::
::: itemizedlist
**验证**