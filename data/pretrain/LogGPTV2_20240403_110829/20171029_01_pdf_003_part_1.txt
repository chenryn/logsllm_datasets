May 22, 2017
PostgreSQL 10 New Features
With Examples
Hewlett-Packard Enterprise Japan Co, Ltd.
Noriyoshi Shinoda
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 1
Index
Index ........................................................................................................................................ 2
1. About This Document ............................................................................................................ 6
1.1 Purpose ........................................................................................................................... 6
1.2 Audience ......................................................................................................................... 6
1.3 Scope .............................................................................................................................. 6
1.4 Software Version .............................................................................................................. 6
1.5 Question, Comment, and Responsibility ............................................................................ 6
1.6 Notation .......................................................................................................................... 7
2. Version notation .................................................................................................................... 8
3. New Features ........................................................................................................................ 9
3.1 Overview ........................................................................................................................ 9
3.1.1 For large amount data ................................................................................................ 9
3.1.2 For reliability improvement ........................................................................................ 9
3.1.3 For maintenance task ............................................................................................... 10
3.1.4 Incompatibility ........................................................................................................ 10
3.2 Native Partition Table ..................................................................................................... 12
3.2.1 Overview ................................................................................................................ 12
3.2.2 List Partition Table .................................................................................................. 13
3.2.3 Range Partition Table ............................................................................................... 15
3.2.4 Existing tables and partitions .................................................................................... 18
3.2.5 Operation on partition table ...................................................................................... 19
3.2.6 Execution Plan ........................................................................................................ 22
3.2.7 Catalog ................................................................................................................... 23
3.2.8 Restriction .............................................................................................................. 24
3.3 Logical Replication ........................................................................................................ 29
3.3.1 Overview ................................................................................................................ 29
3.3.2 Related resources ..................................................................................................... 33
3.3.3 Examples ................................................................................................................ 35
3.3.4 Collision and inconsistency ...................................................................................... 36
3.3.5 Restriction .............................................................................................................. 37
3.4 Enhancement of Parallel Query ....................................................................................... 40
3.4.1 PREPARE / EXECUTE statement ............................................................................ 40
3.4.2 Parallel Index Scan .................................................................................................. 41
3.4.3 SubPlan .................................................................................................................. 42
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 2
3.4.4 Parallel Merge Join / Gather Merge ........................................................................... 42
3.4.5 Parallel bitmap heap scan ......................................................................................... 43
3.5 Architecture ................................................................................................................... 44
3.5.1 Added Catalogs ....................................................................................................... 44
3.5.2 Modified catalogs .................................................................................................... 51
3.5.3 Enhancement of libpq library .................................................................................... 52
3.5.4 Change from XLOG to WAL .................................................................................... 53
3.5.5 Temporary replication slot ........................................................................................ 54
3.5.6 Change instance startup log ...................................................................................... 54
3.5.7 WAL of hash index .................................................................................................. 55
3.5.8 Added roles ............................................................................................................. 55
3.5.9 Custom Scan Callback ............................................................................................. 56
3.5.10 Size of WAL file .................................................................................................... 56
3.5.11 ICU....................................................................................................................... 56
3.5.12 EUI-64 data type .................................................................................................... 56
3.5.13 Unique Join ........................................................................................................... 56
3.5.14 Shared Memory Address ........................................................................................ 57
3.6 Monitoring .................................................................................................................... 58
3.6.1 Monitor wait events ................................................................................................. 58
3.6.2 EXPLAIN SUMMARY statement ............................................................................. 58
3.6.3 VACUUM VERBOSE statement .............................................................................. 58
3.7 Quorum-based synchronous replication ........................................................................... 60
3.8 Enhancement of Row Level Security ............................................................................... 62
3.8.1 Overview ................................................................................................................ 62
3.8.2 Validation of multiple POLICY setting ...................................................................... 62
3.9 Enhancement of SQL statement....................................................................................... 66
3.9.1 UPDATE statement and ROW keyword .................................................................... 66
3.9.2 CREATE STATISTICS statement ............................................................................. 66
3.9.3 GENERATED AS IDENTITY column ...................................................................... 68
3.9.4 ALTER TYPE statement .......................................................................................... 70
3.9.5 CREATE SEQUENCE statement .............................................................................. 70
3.9.6 COPY statement ...................................................................................................... 71
3.9.7 CREATE INDEX statement ...................................................................................... 71
3.9.8 CREATE TRIGGER statement ................................................................................. 72
3.9.9 DROP FUNCTION statement ................................................................................... 72
3.9.10 ALTER DEFAULT PRIVILEGE statement .............................................................. 73
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 3
3.9.11 CREATE SERVER statement.................................................................................. 73
3.9.12 CREATE USER statement ...................................................................................... 73
3.9.13 Functions .............................................................................................................. 73
3.9.14 Procedural language ............................................................................................... 79
3.10 Change of configuration parameters .............................................................................. 81
3.10.1 Added parameters .................................................................................................. 81
3.10.2 Changed parameters ............................................................................................... 82
3.10.3 Parameters with default values changed ................................................................... 83
3.10.4 Deprecated parameters ........................................................................................... 84
3.10.5 New function of authentication method ................................................................... 84
3.10.6 Default value of authentication setting ..................................................................... 85
3.10.7 Other parameter change .......................................................................................... 85
3.11 Change of utility .......................................................................................................... 86
3.11.1 psql ....................................................................................................................... 86
3.11.2 pg_ctl .................................................................................................................... 88
3.11.3 pg_basebackup ...................................................................................................... 88
3.11.4 pg_dump ............................................................................................................... 91
3.11.5 pg_dumpall ........................................................................................................... 91
3.11.6 pg_recvlogical ....................................................................................................... 92
3.11.7 pgbench ................................................................................................................ 92
3.11.8 initdb .................................................................................................................... 92
3.11.9 pg_receivexlog ...................................................................................................... 92
3.11.10 pg_restore ............................................................................................................ 92
3.11.11 pg_upgrade .......................................................................................................... 92
3.11.12 createuser ............................................................................................................ 93
3.11.13 createlang / droplang ............................................................................................ 93
3.12 Contrib modules ........................................................................................................... 94
3.12.1 postgres_fdw ......................................................................................................... 94
3.12.2 file_fdw ................................................................................................................ 95
3.12.3 amcheck ................................................................................................................ 96
3.12.4 pageinspect ........................................................................................................... 96
3.12.5 pgstattuple ............................................................................................................. 97
3.12.6 btree_gist / btree_gin .............................................................................................. 97
3.12.7 pg_stat_statements ................................................................................................. 98
3.12.8 tsearch2................................................................................................................. 98
URL list ................................................................................................................................. 99
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 4
Change history ...................................................................................................................... 100
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 5
1. About This Document
1.1 Purpose
The purpose of this document is to provide information of the major new features of PostgreSQL 10,
the Beta 1 version being published.
1.2 Audience
This document is written for engineers who already have knowledge of PostgreSQL, such as
installation, basic management, etc.
1.3 Scope
This document describes the major difference between PostgreSQL 9.6 and PostgreSQL 10 Beta 1.
As a general rule, this document examines the functions that users can see when they see changes. It
does not describe and verify all new features. In particular, the following new functions are not
included.
• Bug fix
• Performance improvement by changing internal behavior
• Improvement of regression test
• Operability improvement by psql command tab input
• Improvement of pgbench command (partly described)
• Improve documentation, modify typo in the sources
1.4 Software Version
This document is being verified for the following versions and platforms.
Table 1 Version
Software Versions
PostgreSQL PostgreSQL 9.6.3 (for comparison)
PostgreSQL 10 Beta 1 (May 15, 2017 21:27:43)
Operating System Red Hat Enterprise Linux 7 Update 1 (x86-64)
1.5 Question, Comment, and Responsibility
The contents of this document are not an official opinion of the Hewlett-Packard Enterprise Japan
Co, Ltd. The author and affiliation company do not take any responsibility about the problem caused
by the mistake of contents. If you have any comments for this document, please contact to Noriyoshi
Shinoda (PI:EMAIL) Hewlett-Packard Enterprise Japan Co, Ltd.
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 6
1.6 Notation
This document contains examples of the execution of the command or SQL statement. Execution
examples are described according to the following rules:
Table 2 Examples notation
Notation Description
# Shell prompt for Linux root user
$ Shell prompt for Linux general user
bold User input string
postgres=# psql command prompt for PostgreSQL administrator
postgres=> psql command prompt for PostgreSQL general user
underline Important output items
The syntax is described in the following rules:
Table 3 Syntax rules
Notation Description
Italic Replaced by the name of the object which users use, or the other syntax
[ ABC ] Indicate that it can be omitted
{ A | B } Indicate that it is possible to select A or B
… General syntax, it is the same as the previous version
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 7
2. Version notation
The notation of major version and minor version is changed from PostgreSQL 10. In the past, the
first two numbers indicated major versions, but only the first number will indicate the major version
in the future.
Figure 1 Version notation
Old Version (9.6 is major version, 1 is minor version)
9 6 1
． .
From now on (10 is major version, 0 is minor version)
10 0
．
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 8
3. New Features
3.1 Overview
More than 100 new features have been added to PostgreSQL 10. Here are some typical new features
and benefits.
3.1.1 For large amount data
□ Native Partition Table
Native Partition Table is provided as a method of physically partitioning a large scale table. Unlike
table partitioning using conventional inheritance table, performance during data insertion has been
greatly improved. Providing the Native Partition Table makes building a large database easier.
□ Logical Replication
With the Logical Replication feature, it is possible to replicate only some tables between multiple
instances. In traditional streaming replication, slave side instances were read-only, but tables
synchronized by Logical Replication are updatable. Therefore, it is possible to create an index for
analysis query to the slave side instance. Details are described in "3.3 Logical Replication".
□ Enhancement of Parallel Query
In PostgreSQL 9.6, a parallel query feature was provided to improve the query performance for large
tables. Parallel query was used only in "Seq Scan" in PostgreSQL 9.6, but parallel queries are now
available in many situations such as "Index Scan", "Merge Join", "Bitmap Join" and so on. It is
expected to improve query performance for large amount tables. Details are described in "3.4 Extended
Parallel Query".
3.1.2 For reliability improvement
Quorum-based synchronous replication for arbitrarily selecting instances for synchronous replication
is now available (3.7 Quorum-base synchronous replication). Hash index that did not output WAL
before PostgreSQL 9.6 now output WAL. For this reason, hash index is also available in replication
environments (3.5.7 Hash index WAL).
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 9
3.1.3 For maintenance task
Wait events that are output in the pg_stat_activity catalog has been increased significantly.
Information of all backend processes can now be referred (3.5.2 catalog change). A dedicated role to
check the system load has been added (3.5.8 Addition of role).
3.1.4 Incompatibility
Unfortunately, some features of PostgreSQL 10 are incompatible with previous versions.
□ Change name
All the name XLOG was unified to WAL. For this reason, directory names in the database cluster,
utility command names, function names, parameter names, and error messages named XLOG have
been changed. For example, the pg_xlog directory in the database cluster has been changed to the
pg_wal directory. The pg_receivexlog command has been changed to the pg_receivewal command.
The default value of the directory where the log file is output has been changed from pg_log to log.
Details are described in "3.5.4 Change from XLOG to WALL".
□ Default behavior of pg_basebackup utility
By default WAL streaming is used in PostgreSQL 10. Also, the -x parameter has been deprecated.
Details are described in "3.11.3 pg_basebackup".
□ Wait mode of pg_ctl utility
By default, the behavior has been changed to wait for processing to complete on all operations. In
the previous version, pg_ctl command did not wait for the completion of processing in instance startup
processing etc. Details are described in "3.11.2 pg_ctl".
□ Deprecated of plain password store
It is no longer possible to save the password without encrypting it. This will improve security. Details
are described in "3.9.12 CREATE USER statement" and "3.10.2 Changed parameters".
□ Deprecated parameters
The parameter min_parallel_relation_size has been changed to min_parallel_table_scan_size. The
parameter sql_inheritance has been deprecated. Details are described in "3.10.4 Obsolete parameters".
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 10
□ Functions behavior changed
The to_date and to_timestamp functions have changed behavior. As a result of strict checking of the
numerics of each element part of the date/time, errors will occur with values that were not problematic
in the previous version. Also, the make_date function can now specify a date in BC. Details are
described in "3.9.13 Function".
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 11
3.2 Native Partition Table
3.2.1 Overview
Traditional PostgreSQL used the function of the inheritance table as a method of physically
partitioning a large table. The inheritance table creates multiple child tables for the parent table and
maintains the consistency of data by CHECK constraints and triggers. The application can access the
parent table and transparently use the data of the child table. However, this method had the following
disadvantages.
• Data consistency depends on the CHECK constraint specified individually in the child table
• INSERT statements for the parent table need to redirect to child tables by triggers so that it is
slower
Figure 2 Structure of table partition using inheritance table
Client Parant Table
(INSERT trigger)
Inherit Table Inherit Table Inherit Table
(CHECK constraint) (CHECK constraint) (CHECK constraint)
In PostgreSQL 10, partition table feature uses a more sophisticated table distribution method. It is
the same as the conventional inheritance table that the partition table consists of child tables having
the same structure as the parent table accessed by the application. However, INHERIT specification,
CHECK constraint, trigger are unnecessary, so that addition or deletion of the child table can be done
easily.
In PostgreSQL 10, the column (or calculated value) to be specified for partitioning table. RANGE
partitions that specify the range of values to be stored and LIST partitions that specify only specific
values are available. The type of the partition is determined when creating the parent table.
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 12
Figure 3 Partitioning table structure
Client Parent Table
(PARTITION BY clause)
Partition Partition Partition
(FOR VALUES clause) (FOR VALUES clause) (FOR VALUES clause)
3.2.2 List Partition Table
The LSIT partition table is a way to group multiple partitions that can only store certain values. To
create a list partition table, first create a parent table accessed by the application, specifying the
PARTITION BY LIST clause in the CREATE TABLE statement. In the LIST clause, specify the
column name (or calculated value) to be partitioned. Only one column name can be specified. At this
point the INSERT statement for the table fails. For tables created with PARTITION BY clause, the
value of the "relkind" column in the pg_class catalog is 'p'.
Example 1 Create LIST partition table
postgres=> CREATE TABLE plist1(c1 NUMERIC, c2 VARCHAR(10)) PARTITION BY
LIST (c1) ;
CREATE TABLE
Next, create a child table (partition) where data is actually stored. In doing so, specify the parent table
using the PARTITION OF clause and specify the value to include in the partition column using the
FOR VALUES IN clause. Multiple values can be specified, separated by commas (,).
Example 2 Create child table
postgres=> CREATE TABLE plist1_v100 PARTITION OF plist1 FOR VALUES IN (100) ;
CREATE TABLE
postgres=> CREATE TABLE plist1_v200 PARTITION OF plist1 FOR VALUES IN (200) ;
CREATE TABLE
In the following example, refer to the definition of the partition table which has been created.
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 13
Example 3 Reference table definition
postgres=> \d+ plist1
Table "public.plist1"
Column | Type | Collation | Nullable | Default | Storage | …
--------+-----------------------+-----------+----------+---------+----------+…
c1 | numeric | | | | main |…
c2 | character varying(10) | | | | extended |…
Partition key: LIST (c1)
Partitions: plist1_v100 FOR VALUES IN ('100'),
plist1_v200 FOR VALUES IN ('200')
postgres=> \d+ plist1_v100
Table "public.plist1_v100"
Column | Type | Collation | Nullable | Default | …
--------+-----------------------+-----------+----------+---------+ …
c1 | numeric | | | | …
c2 | character varying(10) | | | | …
Partition of: plist1 FOR VALUES IN ('100')
Partition constraint: ((c1 IS NOT NULL) AND (c1 = ANY (ARRAY['100'::numeric])))
The INSERT statement for the parent table is automatically distributed to the partitioned child table.
An INSERT statement of data not included in the partition will result in an error.
Example 4 Execution of INSERT statement on parent table
postgres=> INSERT INTO plist1 VALUES (100, 'data1') ;
INSERT 0 1
postgres=> INSERT INTO plist1 VALUES (200, 'data2') ;
INSERT 0 1
postgres=> INSERT INTO plist1 VALUES (300, 'data3') ;
ERROR: no partition of relation "plist1" found for row
DETAIL: Partition key of the failing row contains (c1) = (300).
Partitioned child tables are also directly accessible. However, values other than the values specified
in the partition target column cannot be stored.
© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd. 14