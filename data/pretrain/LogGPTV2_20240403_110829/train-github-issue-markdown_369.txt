  * Electron version: 1.4.4
  * Operating system: Windows 10 Pro (x64)
I created a new BrowserWindow and set set **fullscreen** to _true_ and
**show** to _false_ , then I used  
`win.once('ready-to-show', () => { win.show(); });`  
to show the window and window showed as expected  
however when I tried to set **fullscreen** to _false_ the window turned black
and completly unresponsive and I had to end process using task manager.
setting set **fullscreen** to _false_ and adding `win.setFullScreen(true)`
after `win.show();` solves the issue.  
but I would like to avoid the full screen flashing at the start of my
application.
# main.js
    const {app, BrowserWindow} = require('electron');
    let win
    function createWindow () {
      win = new BrowserWindow({fullscreen: true, fullscreenable: true, show: false, width: 1024, height: 768, title: "My Window", minWidth: 1024, minHeight: 768})
      global.mainWin = win;
      win.setMenuBarVisibility(false);
      win.once('ready-to-show', () => {
        win.show();
      });
      win.loadURL(`file://${__dirname}/index.html`)
      win.on('closed', () => {
        win = null
      })
    }
    app.on('ready', createWindow)
    app.on('window-all-closed', () => {
      if (process.platform !== 'darwin') {
        app.quit()
      }
    })
    app.on('activate', () => {
      if (win === null) {
        createWindow()
      }
    })
# index.html
# main_script.js
    const remote = require('electron').remote;
    const win = remote.getGlobal('mainWin');
    function FSToggle(){
    win.setFullScreen(!win.isFullScreen());
    }