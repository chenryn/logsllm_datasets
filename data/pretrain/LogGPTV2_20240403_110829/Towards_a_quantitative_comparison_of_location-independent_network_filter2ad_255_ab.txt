Individual WiFi and cellular measurements include data
from a single type of network, and more importantly charac-
terize physical user/content mobility among access points or
base stations, rather than changing points of attachment to
the Internet (i.e., as characterized by changing IP addresses
and AS numbers). Our NomadLog measurements charac-
terize this latter aspect of mobility across networks, rather
than physical mobility in space|a critical distinction. For
example, a physically mobile user might maintain the same
IP address as they move among base stations in a provider
network; for our purposes, this user is considered stationary
as their IP address does not change despite physical mobility.
Conversely, a user may \move" from one network (cellular)
to another (WiFi) while hardly moving physically.
In-network name resolution. A number of studies
have considered the performance of in-network name res-
olution.
[55] compares the performance of an instantiated
NDN forwarding plane [28] with traditional IP forwarding,
with an emphasis on security and congestion mitigation. [10]
compares the performance of network-based name resolution
in an instantiated NDN context versus a logically central-
ized approach as in MobilityFirst’s GNS approach [49], con-
sidering forwarding table size as a function of an abstract,
parameterized model of name aggregation. Neither of these
works consider either content or device mobility|the key
consideration in our present paper.
Several recent eﬀorts have considered name-based content
retrieval in a mobile environment.
[50] considers informa-
tion dissemination in a linear V2V network using NDN, fo-
cusing primarily on the impact of protocol timer values on
performance; our present paper focuses on mobility among
multiple networks with general topologies and is aimed at
a broad comparison between diﬀerent location-independent
network architectures. Proxies and/or indirection points
(such as the HLR in cellular networks and home agent in
Mobile IP) have been a common feature of many archi-
tectures supporting mobility, including recent proposals for
NDN-like architectures.
[33, 24] both adopt a proxy-based
approach and rely on underlying tunneling or the existence
of IP addresses to deliver content. Most recently, Kim [30]
proposes the use of an indirection point where mobile con-
tent publishers and subscribers can register (content pub-
lishers) mobility-related name changes or query (content
subscribers) for new names associated with a mobile pub-
lisher.
[30] presents a protocol for NDN-like architectures
for real-time, single-sender-single-receiver scenarios, conjec-
turing that \... content providers, and their locations are
relatively stable. Hence, the mobility problem for the ‘stored
contents’ is limited to the scope of user-side mobility". Our
measurement results (x7) suggest otherwise. Further, our fo-
cus here is on pure name-based routing (or in-network name
resolution), rather than proxies or indirection points.
Mobile IP and indirection. Much of the analysis of
Mobile IP [40] has focused on analyzing proposed enhance-
ments that improve handoﬀ performance (e.g., [17]) or min-
imize signaling overhead (e.g., [58, 52]). Our goal, instead,
is to empirically characterize location update rates as nodes
change their point of attachment to the Internet, and the
261average \distance" from their home network|two key per-
formance considerations for any architecture with a home-
agent-like component. As noted above, there are many mea-
surement studies of mobility among individual access points
and base stations, but none of these characterize the rate at
which users change their IP address or AS-aﬃliation, and
it is this latter aspect of mobility (not intra-network mobil-
ity that is \invisible" outside that network) that determines
update rates at home agents.
The triangle routing problem in Mobile IP [41], which
results in longer paths between a sender and receiver when
routed through an indirection point (the home agent) is well
known, and enhancements to allow direct routing have been
proposed [41]. The tradeoﬀ between providing shortest-path
routes versus the overhead entailed (e.g., in forwarding table
size) is characterized by compact routing results [32, 47]. For
example, with N (cid:13)at identi(cid:12)ers, to be within 3x stretch of
shortest-path, each router needs to maintain Ω(N ) forward-
(N )). These lines
ing entries.; for up to 5x stretch, it is Ω(
of work, that seek to either develop new protocols to mini-
mize path stretch due to indirection or theoretically charac-
terize path stretch versus table-size tradeoﬀs, address diﬀer-
ent challenges than our work that empirically characterizes
a mobile device’s distance from \home."
√
3. EVALUATION METHODOLOGY
In this section, we explain our methodology to evalu-
ate the cost-bene(cid:12)t tradeoﬀs struck by diﬀerent location-
independent approaches to handle mobility. The metrics of
interest are routing update cost, forwarding table size, and
path stretch for mobility of devices as well as content.
3.1 Intradomain device or content mobility
Consider a simple shortest-path routing network as shown
in Figure 1(a) and a singly-homed endpoint A that changes
its address from 22.33.44.55 belonging to the 22.33.44.0/24
subnet to 22.33.88.55 belonging to the 22.33.0.0/16 subnet.
With name-to-address resolution (indirection routing), A
simply needs to update DNS (its home agent) and data traf-
(cid:12)c can subsequently (cid:13)ow directly (indirectly) to A’s new lo-
cation. With a purely network-layer approach, some routers
such as R may need to update their forwarding behavior in
order to continue routing packets correctly to A. Whether
R needs to update its forwarding table depends on whether
R’s shortest-path forwarding entries for 22.33.44.0/24 and
22.33.0.0/16 point to diﬀerent output ports. If they do, say
to ports 5 and 3 respectively, then R must introduce an-
other entry [22.33.44.55/32, 3] in its forwarding table so
that longest-pre(cid:12)x matching continues to route correctly to
A. More generally, a router needs to update its forwarding
table if an endpoint moves from one longest-matching pre(cid:12)x
to another in its forwarding table, each pointing to diﬀer-
ent output ports. We refer to such mobility events as an
endpoint A being displaced with respect to router R.
Displaced content names induce an update at name-based
routers by moving across hierarchical name spaces in a man-
ner analogous to endpoints moving across IP address spaces.
An example is shown in Figure 2(b), wherein say /20thCent
uryFox/StarWars-EpisodeIV moves to /Disney/StarWars-
EpisodeIV because of a distribution rights transfer. Router
Q must update its forwarding table if Q maintained diﬀerent
output ports for the corresponding longest-matching pre-
Figure 2: Example of a device or content displaced
w.r.t. a router’s forwarding table.
(cid:12)xes /20thCenturyFox/* and /Disney/*, i.e., if StarWars-
EpisodeIV is displaced with respect to Q.
3.2 Interdomain mobility
From the example above, it is clear that the update cost
of mobility depends on at least three factors: (1) the nature
of network mobility patterns of endpoints; (2) the physi-
cal topology of the network; and (3) route selection pol-
icy. The policy used to select routes, e.g., shortest-path
routing or BGP-style policy-driven route selection, matters
because that is what determines the forwarding table at a
router. Unlike shortest-path intradomain routing for which
it is straightforward to answer whether or not a mobility
event causes an update at any given router, it is much harder
to answer this question in an interdomain network like the
Internet driven primarily by policy routing.
One strawman is to use publicly available intradomain
[35] and interdomain [2] topologies and combine them with
a simple model of Internet routing, namely, prefer customers
over peers over providers, then use AS path length to break
ties, then use early-exit routing to further break ties, and
so on. Unfortunately, given that even our knowledge of the
Internet’s physical AS-level as well as intradomain topology
is incomplete [38], these models serve as a poor substitute
for real Internet routing that is messier, e.g., prior studies
[34] have found that interdomain routes predicted by such a
model had barely 30% predictive accuracy.
Consequently, in this work, we work with a small set of
real Internet routers whose RIBs (route information bases)
and some route preference metrics are available to us. These
RIBs already incorporate the global impact of the Internet’s
physical topology and import and export policy decisions
made by other routers. We use these RIBs to derive the
corresponding FIBs and ask, in a manner analogous to in-
tradomain routing above, whether or not the router would
update its forwarding table in response to a mobility event
without having to simulate global Internet routing.
3.3 Multihomed device or content mobility
The methodology above implicitly assumed a singly-homed
device or content principal. We next extend it to model the
impact of mobility of multihomed principals on the update
cost and forwarding table size at routers. For ease of exposi-
tion, we explain the model in the context of content mobility,
but note that it applies to both device and content mobility.
Prefix!Port!22.33.44.0/24!5!22.33.0.0/16!3!...!Prefix!Port!/20thCenturyFox/*!5!/Disney/*!3!...!Mobility	
  event:	
  22.33.44.55	
  à	
  22.33.88.55	
  Mobility	
  event:	
  /20thCenturyFox/StarWarsIV à /Disney/StarWarsIV!Prefix!Port!22.33.44.0/24!5!22.33.0.0/16!3!22.33.44.55!3!...!Prefix!Port!/20thCenturyFox/*!5!/Disney/*!3!/20thCenturyFox/StarWarsIV!3!...!Router	
  Q	
  Router	
  R	
  2623.3.1 Update cost
In order to assess the update cost of a mobility event, we
begin with a mobility workload consisting of domain names
and the set of all IP addresses to which they resolve (as
measured for content in x7 from distributed vantage points).
Consider a domain d, e.g., graphics.nytimes.com, and let
Addrs(d; t1) denote the set of all IP addresses to which it
resolves at time t1. A mobility event refers to a change in
the set to Addrs(d; t2) at a future time t2. Does this mobil-
ity event cause a content router R to update its forwarding
behavior? That is, is there a diﬀerence between the sets
FIB(R; d; t1) and FIB(R; d; t2), where FIB(R; d; t) denotes
the set of all eligible output ports to which router R could
choose to forward packets destined to d at time t?
To answer the above question, we distinguish between two
forwarding strategies| best-port forwarding and controlled
(cid:13)ooding |that respectively forward packets on at most a
single best output port (like today) and forward packets to
more than one eligible output port. The set of all eligible
ports, F (R; d; t), is determined as the set of output ports
at R corresponding to the set of IP addresses Addrs(d; t) at
that time, each of which in turn is computed using R’s FIB
as for interdomain mobility above (x3.2). Best-port forward-
ing picks a single output port denoted as best(FIB(R; d; t).
The update cost depends on which of the two forwarding
strategies is in use and is de(cid:12)ned as follows.
The update cost of a mobility event at a router is 1 for
best-port forwarding if there is a change in its best for-
warding port, i.e., best(FIB(R; d; t1)) ̸= best(FIB(R; d; t2))
for the mobility event Addrs(d; t1) to Addrs(d; t2); other-
wise it is 0. The update cost is 1 for controlled (cid:13)ood-
ing if there is a change in the set of all eligible output
i.e., FIB(R; d; t1) ̸= FIB(R; d; t2) for the mobility
ports,
event Addrs(d; t1) to Addrs(d; t2); otherwise it is 0.
3.3.2 Forwarding table size and aggregateability
The forwarding table size at a content router depends on
two factors: (1) forwarding strategy (as de(cid:12)ned above) and
(2) aggregateability, a metric that captures the extent to
which forwarding tables can be compacted by relying on
longest-pre(cid:12)x matching and inherent network locality in the
content name space. To formally de(cid:12)ne this metric, we intro-
duce some notation. Consider a set S of hierarchically orga-
nized domain names such as yahoo.com, cnn.com, mit.edu,
travel.yahoo.com, etc. and a router R employing some
forwarding strategy to route to these domains. For each
domain d 2 S, let FIB(R; d) denote the (set of) forward-
ing output port(s). We refer to the set of forwarding en-
tries f[d; FIB(R; d)]gd2S as the complete forwarding table.
Let d1 ≺ d2 mean that d1 is a strict subdomain of d2, e.g.,
travel.yahoo.com ≺ yahoo.com. If d1 ≺ d2 and FIB(R; d2) =
FIB(R; d1), then we say that the forwarding entry for d1
is subsumed by d2 with longest-pre(cid:12)x matching. For exam-
ple, as shown in Figure 3, the entry [travel.yahoo.com, 2]
is subsumed by the entry [yahoo.com, 2] as longest-pre(cid:12)x
matching obviates storing an entry explicitly for the former,
but a separate entry is needed for [sports.yahoo.com, 5].
We refer to the forwarding table consisting of the subset of
entries in the complete forwarding table that excludes all
subsumed entries as the LPM forwarding table.
We de(cid:12)ne aggregateability at a router as the ratio of the
size of the complete forwarding table to the size of the cor-
responding LPM forwarding table.
Figure 3: Example of a content forwarding entry
subsumed because of longest-pre(cid:12)x matching.
3.3.3 Limitations and extensions
Our simple model of controlled (cid:13)ooding implicitly focuses
on control plane costs, not on forwarding traﬃc. In partic-
ular, it implies that the update cost of controlled (cid:13)ooding
increases with the rate of mobility events and is at least as
high as that of best-port forwarding. However, there exist
forwarding strategies that trade oﬀ update cost against in-
creased traﬃc in the forwarding plane for which neither im-
plication is true. For example, consider a hypothetical strat-
egy wherein a router R computes FIB(R; d; t) based on the
union of all past addresses observed for destination d, i.e.,
∪fAddrs(d; ti)gti<t instead of just Addrs(d; t). In this case,
the update cost at R attributable to d will soon approach 0
if d rarely visits completely new network locations no matter
how frequently it (cid:13)its across previously visited locations. R’s
controlled (cid:13)ooding strategy could simply forward across all
of the corresponding output ports in FIB(R; d; t), ensuring
that at least one copy reaches d.
The strategy above reduces update cost (and, potentially,
path stretch) but increases the costs of forwarding traﬃc and
forwarding table size. Recognizing the fungibility of these
costs|update cost, forwarding table size, and forwarding
traﬃc|allows for other intriguing architectural combina-
tions that have not been considered in this paper. Extending
our evaluation to incorporate more general trade-oﬀs includ-
ing forwarding traﬃc is an interesting line of future research.
4. NETWORK MOBILITY MEASUREMENT
In this section, we describe an Android app, NomadLog
[5], a development eﬀort we undertook motivated both by
the intractable or simplistic nature of purely theoretical anal-
yses (refer x5) as well as the lack of public data on network
mobility (unlike geographic mobility) of mobile devices.