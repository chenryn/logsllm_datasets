title:Classifying internet one-way traffic
author:Eduard Glatz and
Xenofontas A. Dimitropoulos
Classifying Internet One-way Trafﬁc
TIK Report Number 336. May 2012.
Eduard Glatz
Xenofontas Dimitropoulos
Computer Engineering and Networks Laboratory
ETH Zurich
{eglatz,fontas}@tik.ee.ethz.ch
ABSTRACT
Internet background radiation (IBR) is a very interesting piece
of Internet trafﬁc as it is the result of attacks and misconﬁgu-
rations. Previous work has primarily analyzed IBR trafﬁc to
large unused IP address blocks called network telescopes. In
this work, we build new techniques for monitoring one-way
trafﬁc in live networks with the main goals of 1) expanding
our understanding of this interesting type of trafﬁc towards
live networks as well as of 2) making it useful for detecting
network service reachability problems. Our ﬁrst contribu-
tion is a comprehensive classiﬁcation scheme for dissecting
one-way trafﬁc into useful classes, including one-way trafﬁc
due to unreachable services, scanning, peer-to-peer applica-
tions, and backscatter. Our classiﬁcation scheme is help-
ful for monitoring IBR trafﬁc in live networks solely based
on ﬂow-level data. After validating our classiﬁer, we use it
to analyze a massive data-set that covers 7.41 petabytes of
trafﬁc from a large backbone network to shed light into the
composition of one-way trafﬁc. We report a number of in-
teresting observations including that one-way trafﬁc makes
a very large fraction, i.e., between 34% and 67%, of the total
number of ﬂows to the monitored network, although it only
accounts for only 3.4% of the number of packets, which sug-
gests a conceptual model for Internet trafﬁc in which IBR is
dominant in terms of ﬂows. In addition, we ﬁnd that the vast
majority of one-way trafﬁc is due to scanning. Finally, we
demonstrate the utility of one-way trafﬁc of the particularly
interesting class of unreachable services for monitoring net-
work services by describing interesting outages we detected
in the network of our university.
1.
INTRODUCTION
Studying the background radiation of the Internet
has been instrumental for understanding Internet threats,
like the prevalence of Denial of Service (DoS) attacks [23]
and the propagation of Slammer [21] and Blaster [3]
worms.
IBR traﬃc has been primarily studied with
the help of network telescopes [22], which are large un-
populated IP address blocks (e.g. /8) that seamlessly
ﬁltering out all benign traﬃc.
In live networks, IBR
traﬃc can be extracted by dissecting two-way from one-
way traﬃc, i.e., traﬃc connections that do not receive
a network reply. In this work, we build techniques for
monitoring one-way traﬃc in live networks.
We make three main contributions. First, we design
and validate a comprehensive classiﬁcation scheme for
dissecting one-way traﬃc that relies solely on ﬂow-level
data, e.g., NetFlow. Our scheme uses 17 carefully-
designed rules, which encode novel heuristics as well
as leverage and combine existing techniques that have
been proven eﬀective for certain types of traﬃc. We as-
sociate each one-way ﬂow with up to 18 diﬀerent signs,
which help dig into the causes of one-way ﬂows. The
key features of our scheme are that: 1) it relies on ﬂow
data; 2) it is very easy to conﬁgure; 3) it provides trans-
parency into the classiﬁcation process; and 4) it is easily
extensible.
Our second contribution is that we use our classi-
ﬁcation scheme to shed light into IBR traﬃc towards
a large live network by analyzing a massive dataset of
unsampled ﬂow records summarizing 7.41 petabytes of
traﬃc recorded over eight years (from 2004 to 2011).
We ﬁnd that in the studied years one-way traﬃc makes
between 34% and 67% of the total number of ﬂows, but
it only accounts on average for 3.4% of the packets. This
suggests a conceptual model of Internet traﬃc in which
IBR traﬃc is a needle in a haystack in terms of packets
(and bytes), but it is very dominant in terms of ﬂows.
Besides, we ﬁnd that scanning is the largest component
of one-way traﬃc corresponding to 83.5% and 62.6% of
the one-way ﬂows and packets, respectively. The second
major contributor is traﬃc caused by P2P applications.
Finally, we ﬁnd that in 2011 the volume of IBR traf-
ﬁc in terms of ﬂows is almost equal to 2004 with small
ﬂuctuations in the years between. The fraction of IBR
traﬃc in the total number of ﬂows has been consistently
decreasing from 67% in 2004 to 34% in 2011.
Third, we show how one-way ﬂows assigned to the
class of unreachable services provide new possibilities
for service availability monitoring enabling in particu-
lar to passively assess the impact of outages, which is
not possible with traditional approaches based on ac-
tive probing. To demonstrate the utility of our scheme,
we describe and measure the impact of interesting out-
ages and misconﬁguration we discovered in the network
of our university.
In the next section we provide preliminary insights
into the one-way traﬃc classiﬁcation problem. Next, in
Section 3 we describe our datasets and their sanitiza-
tion steps. Our classiﬁcation scheme is introduced in
1
Section 4 and validated in Section 5. In Section 6 we
use our scheme to characterize the composition of IBR
traﬃc in a live network, while in Section 7 we outline
how our work is useful for service reachability monitor-
ing. Finally, we present related work and conclude our
paper in Section 8 and 9.
2. PRELIMINARIES
Network communication inherently reﬂects dialogs tak-
ing place between applications running on distributed
systems including any accompanied control and error
messages. Regular communication involves two-way traf-
ﬁc consisting of packets in opposite direction. In con-
trast, one-way traﬃc results from communication errors
or other unusual situations that result in packets in one
direction. In this work, we look at one-way communica-
tion at the network level. We deﬁne a two-way ﬂow (or
equivalently a bi-ﬂow) as the aggregate of two standard
5-tuple ﬂows that have reverse values in the source and
destination IP address and port number ﬁelds. A 5-
tuple traﬃc ﬂow is a ﬂow of packets that have common
values in the IP address, port number, and protocol
ﬁelds. We deﬁne an one-way ﬂow as a ﬂow that does
not have a matching reverse ﬂow. A two-way ﬂow may
still indicate a failed communication at the transport
or application level, e.g., a TCP reset packet produces
a two-way ﬂow, therefore one-way ﬂows provide a con-
servative view of failed communication attempts in the
Internet.
One-way traﬃc is important as it is associated with
interesting events, such as unreachable services, scan-
ning, and misconﬁgurations. To draw useful informa-
tion from one-way traﬃc we need to infer what is caus-
ing it. The goal of one-way traﬃc classiﬁcation is to
classify one-way traﬃc into classes of malicious and be-
nign causes. We identify three main causes of one-way
traﬃc:
• Failures & Policies: this group comprises at-
tempts to access a service that do not succeed due
to failures or policies. Possible reasons are ﬁrewall
blocking, temporary or permanent outages of net-
work elements, stopped service processes on end-
hosts, and routing misconﬁgurations. For exam-
ple, the use of laptops outside of enterprise net-
works they are conﬁgured for produces one-way
traﬃc. Similarly, one-way traﬃc is the result of
attempts to use services that are blocked by se-
curity policies, like when testing connectivity with
the ping tool to non-responding destinations. Fur-
thermore, one-way traﬃc can result from network
congestion.
• Attacks: vulnerability scanning is a very com-
mon attack vector. However, unsolicited probes
typically do no receive a reply resulting in many
one-way ﬂows. Another attack case is backscat-
ter traﬃc from DoS attacks using spoofed source
IP addresses, which also results in one-way ﬂows
towards the spoofed IP addresses. Third, preﬁx
2
hijacking results in traﬃc towards a “black hole”.
• Special application behavior: P2P applications
try to reconnect to systems they have been in con-
tact before as such systems are often preferred
peers by application design. However, the dy-
namic nature of P2P networks and in particular
nodes unexpectedly leaving a network result in
one-way reconnection attempts. A second, but
rare scenario is applications using sessions that
run the two communication directions over diﬀer-
ent connections. For example, an interesting case
we have identiﬁed is the application layer protocol
of LANsource [12] that runs over UDP and uses
diﬀerent destination ports for each communication
direction.
Properly identifying Internet one-way traﬃc from mea-
surement data imposes speciﬁc requirements on moni-
toring. In particular, traﬃc sampling and poor spatial
network coverage, i.e., missing one direction of a com-
munication that may take a diﬀerent path due to asym-
metric routing, may result in artiﬁcial one-way ﬂows. In
principle, dealing with asymmetric routing requires to
either know how ﬂows are routed or to monitor every
link along a network cut between a monitored network
and the Internet. For these reasons, one-way traﬃc can
in practice be measured near the edge, e.g., in enter-
prise, university, or small ISP networks, where it is pos-
sible to monitor the entire border traﬃc activity with-
out sampling. Edge networks are the vast majority of
Internet domains.
3. DATASETS AND SANITIZATION
We use data from a regional academic backbone net-
work that serves 46 single-homed universities and re-
search institutes. The monitored address range con-
tains 2.2 million IP addresses, which correspond to a
continuous block slightly larger than a /11. We have
been archiving unsampled ﬂow records since 2003 from
hardware-based NetFlow meters on the border routers
of the monitored network. The meters capture all the
traﬃc that crosses the border destined to or coming
from the Internet.
In a single peering link, we ob-
serve in 2011 on average 108.1 million ﬂows per hour,
which corresponds to 3,064 million packets. The stored
ﬂow records are not anonymized. From each record
we extract for our classiﬁcation scheme the following
ﬁelds: IP addresses, port numbers, protocol number,
byte/packet counts, and timestamps. We do not use
TCP ﬂags because they are not supported by the fast
hardware-based NetFlow, although they can be easily
integrated in our classiﬁcation. Over time we have accu-
mulated a massive archive with more than 100 TBytes
of compressed NetFlow records.
A major challenge in analyzing our data is computa-
tional overhead especially for tasks that cannot be par-
allelized. For example, using a optimized C++ program
to parse one day of data and compute the average num-
ber of one-way ﬂows per host takes 10 hours and 10-20
Gbytes of main memory in a dedicated high-end cluster.
The computational overhead is dominated by the time
for decompression and for disk I/O. To make the compu-
tational overhead more tractable, we use two 400-hour
samples per year, which correspond to approximately
one month per year. In particular, we analyze the ﬁrst
400 hours of each February and August between 2004
and 2011. The studied traﬃc data correspond to 457 gi-
gaﬂows and 7.41 petabytes and cover approximately 9%
of the total number of ﬂows observed during the eight
year period. This is one of the largest traﬃc traces that
has been analyzed in the literature.
For each 400-hour sample, in the top rows of Table 1
we report the time the monitoring and collection infras-
tructure was functioning properly and the traﬃc volume
it corresponds to. Overall the availability of the infras-
tructure was higher than 99.5% with only short inter-
ruptions due to router restarts and corrupted data. To
eliminate the impact of interruptions in our analysis,
we use daily averages and discard the days in which the
short interruptions occurred.
3.1 Data Sanitization
In this section we describe how we addressed a num-
ber of data sanitization challenges for extracting one-
way ﬂows. In particular, we outline our methodology
for eliminating double-counting, defragmentating ﬂows,
and pairing bi-ﬂows. To speed up searching for match-
ing ﬂows, we split time into intervals and limit our
search within an interval. In Section 3.1.4 we analyze
the impact of the interval size. In the future, the stan-
dardization of bidirectional ﬂow monitoring [27] will
likely make one-way ﬂow extraction much easier.
3.1.1 Double-Counting Elimination
Although we collect ﬂows from border routers only, if
a ﬂow is routed through multiple border routers, it will
be reported multiple times in our NetFlow data. To
address this problem we use a map provided to us by
SWITCH network operators that speciﬁes which ports
of the border routers are connected to the internal back-
bone and which to the Internet. Our NetFlow data
carry information about the input and output port of
a ﬂow. We use this information to ﬁlter out ﬂows. We
only keep ﬂows that are routed between the Internet
and the intranet. Double-counting elimination has a
signiﬁcant impact on our data reducing the total traﬃc
volume by 32.3%.
3.1.2 Defragmentation
We call the standard 5-tuple NetFlow records raw
ﬂows. NetFlow may fragment a traﬃc ﬂow when the
active timeout expires or when the ﬂow cache is ﬁlled
up and ﬂushed. In addition, the optional NetFlow fast
aging feature, with which our hardware based meters
are conﬁgured, leads to additional fragmentation. Fast
ﬂow aging reduces the utilization of the ﬂow table by
exporting a ﬂow if no more than a few packets are ob-
served within the ﬁrst few seconds of the creation of a
ﬂow table entry. It realizes an eﬃcient process to age
out entries for short ﬂows. To address ﬂow fragmen-
tation due to fast aging, we split time into intervals
and for each raw ﬂow we search within its time interval
for other raw ﬂows with the same 5-tuple. We merge
matching ﬂows updating their byte/packet counts and
start/end timestamps. We call the merged ﬂows de-
fragmented ﬂows. Note that if a ﬂow spans multiple
intervals it will yield one defragmented ﬂow for each
interval. In the bi-ﬂow pairing process we account for
these cases. In the third and fourth row of Table 1 we
show the numbers of raw and defragmented ﬂows. We
observe that defragmentation has a signiﬁcant impact
reducing the number of ﬂows by a fraction ranging be-
tween 20.6% and 39.6% for diﬀerent years.
3.1.3 Bi-ﬂow Pairing
For TCP and UDP a two-way ﬂow is the aggregate
of two defragmented ﬂows that have the same 5-tuple
with reverse values in the source and destination IP
address and port ﬁelds. For each defragmented ﬂow
in an observation interval, we search for ﬂows in the
same or in the adjacent intervals and group matched
ﬂows into a bi-ﬂow. An one-way ﬂow is a ﬂow that does
not have a matching reverse ﬂow in the same or in an
adjacent interval.
A special situation exists for other protocols,
like
ICMP, Encapsulated IPv6, and Encapsulated Secure
Payloads (ESP). The port ﬁelds in our NetFlow data
do not carry interesting semantics for protocols other
than TCP and UDP. For these protocols we deﬁne a
ﬂow and match bi-ﬂows based on a 3-tuple consisting
of the IP addresses and protocol ﬁelds. This deﬁnition
may underestimate the number of one-way ﬂows involv-
ing protocols other than TCP and UDP.
Interestingly, it is not oﬃcially documented how Net-
Flow deﬁnes a ﬂow for these protocols. According to
certain sources NetFlow aggregates packets with com-
mon values in the source/destination IP address, proto-
col, and ICMP type/code ﬁelds into an ICMP ﬂow [29].
For protocols other than TCP, UDP, and ICMP, Net-
Flow sets port ﬁelds to zero [29]. We ﬁnd that this be-
havior is not met by our NetFlow data. Only 5% of all
ICMP ﬂows carry the ICMP type and code information,
while all remaining ICMP ﬂows have this information
set to zero.