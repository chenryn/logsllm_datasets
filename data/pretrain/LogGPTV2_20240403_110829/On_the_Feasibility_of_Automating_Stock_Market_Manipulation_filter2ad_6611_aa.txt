title:On the Feasibility of Automating Stock Market Manipulation
author:Carter Yagemann and
Simon P. Chung and
Erkam Uzun and
Sai Ragam and
Brendan Saltaformaggio and
Wenke Lee
On the Feasibility of Automating Stock
Market Manipulation
Carter Yagemann
PI:EMAIL
Georgia Institute of Technology
Atlanta, Georgia
Sai Ragam
PI:EMAIL
Georgia Institute of Technology
Atlanta, Georgia
Simon P. Chung
PI:EMAIL
Georgia Institute of Technology
Atlanta, Georgia
Brendan Saltaformaggio
PI:EMAIL
Georgia Institute of Technology
Atlanta, Georgia
Georgia Institute of Technology
Erkam Uzun
PI:EMAIL
Atlanta, Georgia
Wenke Lee
PI:EMAIL
Georgia Institute of Technology
Atlanta, Georgia
ABSTRACT
This work presents the first findings on the feasibility of using
botnets to automate stock market manipulation. Our analysis incor-
porates data gathered from SEC case files, security surveys of online
brokerages, and dark web marketplace data. We address several
technical challenges, including how to adapt existing techniques
for automation, the cost of hijacking brokerage accounts, avoiding
detection, and more. We consolidate our findings into a working
proof-of-concept, man-in-the-browser malware, Bot2Stock, capable
of controlling victim email and brokerage accounts to commit fraud.
We evaluate our bots and protocol using agent-based market simu-
lations, where we find that a 1.5% ratio of bots to benign traders
yields a 2.8% return on investment (ROI) per attack. Given the short
duration of each attack (< 1 minute), achieving this ratio is trivial,
requiring only 4 bots to target stocks like IBM. 1,000 bots, cumu-
latively gathered over 1 year, can turn $100,000 into $1,022,000,
placing Bot2Stock on par with existing botnet scams.
CCS CONCEPTS
• Security and privacy → Economics of security and privacy;
Distributed systems security.
KEYWORDS
fraud, stock markets, economics, botnets, malware
ACM Reference Format:
Carter Yagemann, Simon P. Chung, Erkam Uzun, Sai Ragam, Brendan
Saltaformaggio, and Wenke Lee. 2020. On the Feasibility of Automating
Stock Market Manipulation. In Annual Computer Security Applications Con-
ference (ACSAC 2020), December 7–11, 2020, Austin, USA. ACM, New York,
NY, USA, 14 pages. https://doi.org/10.1145/3427228.3427241
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC 2020, December 7–11, 2020, Austin, USA
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-8858-0/20/12...$15.00
https://doi.org/10.1145/3427228.3427241
1 INTRODUCTION
Open markets are susceptible to manipulation, generating thou-
sands of dollars of illicit profits per perpetrator per month [41].
Uncovered cases reveal manually executed scams performed by one
or two coordinating people, which makes it easier to distinguish
their activity from other benign traders. Most investigative break-
throughs come from uncovering links based on real life bonds (e.g.,
coworkers, family). This raises a serious security question: What
will happen when fraudsters start leveraging distributed au-
tomation (i.e., botnets) to conduct attacks?
To answer this, we consider the feasibility of carrying out a
market manipulation campaign using botnets. This is a radical
departure from the current mindset centered around using spam [6,
17, 22, 31, 36] and social media [18, 29, 37, 50] to misinform human
traders, and raises an orthogonal set of novel technical challenges,
such as determining which market manipulations a hypothetical
botnet would likely utilize, how bots would coordinate, whether
accounts can be hijacked at the necessary scale, how they would
evade detection, the impact of latency and size on effectiveness, and
ultimately, how profitable this would be for the cyber criminal. By
eliminating the human victim from the loop, the resulting attack
achieves interesting properties, such as completely eliminating the
human-readable trail left by spam and blog posts.
We present the first findings and analysis on this problem, start-
ing with real-world U.S. Securities and Exchange Commission (SEC)
case files and then gathering our own data to consider how these
schemes can be fully automated by a botnet. We are the first to study
the SEC’s public releases from this cyber-focused perspective. From
our survey of the security and default settings of online brokerages,
we make the startling discovery that strong protections like two-
factor authentication (2FA) are discretionary for users across the
industry, making phishing straightforward. Trade notifications are
by default delivered via email only, where malware with access can
silently delete them before the user receives notification on any
device. Dark web marketplaces sell stolen brokerage accounts con-
taining thousands in cash for mere tens of dollars, demonstrating a
low difficulty for the hackers.
From these findings, we design and implement the first proof-of-
concept trading malware, Bot2Stock, and evaluate it using agent-
based market simulations similar to those used to study human-
driven market fraud [51] and in industry [5, 34]. Bot2Stock acts
277ACSAC 2020, December 7–11, 2020, Austin, USA
Carter Yagemann, et al.
as a man-in-the-browser, hijacking session cookies to gain access
to brokerage and email accounts. Once inside, market manipula-
tions are completed in minutes, achieving the adversary’s objective
before the victim can react.
From our simulations, we discover a novel and surprisingly effi-
cient manipulation, based on layering, that does not require bots to
keep each other informed about their current holdings. This dramat-
ically simplifies the command and control (C2) protocol, reducing
it to pointing the bots at a stock symbol and sending a global “go”
signal, followed eventually by a “stop.” In short, contrary to initial
expectations, manipulating stocks is not a delicate tightrope act if
the protocol is cleverly designed.
What we find most fascinating about Bot2Stock is unlike other
malware-driven scams, our modeled criminal profits indirectly by
provoking market movements predictable to the botmaster, but
unexpected and hardly noticeable by everyone else. Distributing
the orders across many accounts with no obvious correlation, in
an environment where 85% of trade volume is already generated
by benign bots [19], obscures the criminal’s activities, hiding the
paper trail that would otherwise be obvious — and subsequently
“frozen” by regulators — in a “smash and grab” approach.
The results of our simulator evaluation shows that Bot2Stock is
robust and profitable for the botmaster across varying botnet sizes
and network latency. A 1.5% ratio of bots to background traders
yields an average ROI of 2.8% for the botmaster over 2.5 seconds.
Given the attack’s short duration, satisfying this ratio is trivial,
requiring only 4 bots per attack to target stocks like IBM. A mod-
est network of 1,000 bots, cumulatively gathered over a 1-year
campaign, can achieve a non-compounding annual return on in-
vestment (ROI) of 1,022% if 1 attack is performed per day over 252
trading days without reusing a bot. In other words, a botmaster can
turn $100,000 into $1,022,000 in a year, which is consistent with
the uncovered human-driven campaigns described in SEC reports
and comparable to other botnet-based scams (e.g., click fraud). Our
dark web scraper observed 1,005 stolen Charles Schwab accounts
sold in 3 months on 1 marketplace, demonstrating the feasibility of
gathering 1,000 bots over a yearlong campaign.
To promote future work, we have made our PoC malware and
simulations publicly available.1 This work has been disclosed to
the SEC and Financial Services Information Sharing and Analysis
Center (FS-ISAC).
2 RELATED WORK
Attacks & Measurements. Research on stock market manipu-
lation can be divided into two camps. The first studies how rumors
in spam [6, 17, 22, 31, 36] and social media [18, 29, 37, 50] lead to
unusual market returns and volatility. Our work distinguishes itself
from these by focusing entirely on trade-based manipulation, as
opposed to social engineering.
The other group investigates trade-based manipulation with-
out spreading rumors or spam [1, 2, 25, 35]. Khwaja et al. [24]
investigated situations where brokers colluded and discovered that
intermediaries can earn annual rates of return that are 50 to 90
percentage points higher than regular traders. This group of work
most closely relates to ours, but does not consider the potential
to distribute and automate manipulations to obfuscate the crimi-
nal’s participation. There is recent work by Xu et al. [53] analyzing
pump-and-dump in the context of crypto-currency trading, but
these scams are also conducted manually by humans coordinat-
ing over services like Telegram and Discord and without layering.
While there is a past work on simulating spoofing (layering), also
using agent-based simulation [51], it was based on Nash equilib-
rium, unlike ours, and we are the first to incorporate a model for
computation delay and network latency in order to simulate a C2
protocol. Prior work did not consider colluding parties (bots).
Defenses. Automatically detecting manipulation has also been
explored using complex time series [20], hidden Markov chains [7,
10, 47], and other techniques [11, 20, 27, 47]. Unfortunately, ac-
curacy remains unsatisfactory. The most accurate system we are
aware of, proposed by Cao et al. [11] to detect wash trading, only
achieves 45% precision and 55% recall on a dataset from the NAS-
DAQ and London Stock Exchange.
3 BACKGROUND & OVERVIEW
3.1 Market Mechanics
Basic trading consists of creating asks (offers to sell a quantity of
shares in a stock at a particular price) and bids (offers to buy).2
A limit order will only match offers at a certain price (or better)
whereas market orders immediately match the best available offers.
These orders can be set to expire automatically after a certain time
(e.g., when the market closes at the end of the day) or remain active
until they are filled or explicitly canceled by the trader. Active
orders are considered open whereas completed or canceled ones
are closed. A trader’s positions in a stock is the aggregate of all the
shares they currently own [45].
Canceling is important to this work because it allows traders to
create orders purely with the intent of canceling them later. These
are referred to as non-bona fide orders and they form the corner-
stone for some of the fraud we consider in Subsection 3.2. Making
non-bona fide orders is illegal in the U.S., but since canceling is
not inherently illegal, the distinction from bona fide orders is a
matter of determining the trader’s intent. As evident by the activi-
ties of day traders (professionals that watch the markets and make
multiple trades daily) and high-frequency trading, even canceling
high volumes of orders is not inherently illegal, which creates an
opportunity for abuse.
Another important mechanism is margin trading, which consists
of margin buying and short selling (shorting). These are analogous
to loans a trader can use to borrow stock shares or cash. In short, if
a trader believes a stock’s price will decline, but does not currently
own any shares to sell, he can borrow shares from a lender with the
promise of returning them (with interest) later. This lets him sell,
and then if the price does decline, he can buy back the shares he
owes at the lower price, yielding a net profit. Margin buying is the
same concept, except with cash. The trader borrows money from a
lender, enabling him to buy more shares to reap greater gains.
1https://github.com/carter-yagemann/Bot2Stock
2Readers may already be familiar with bidding for items on eBay or seeing an asking
price on Craigslist.
278On the Feasibility of Automating Stock Market Manipulation
ACSAC 2020, December 7–11, 2020, Austin, USA
Table 1: Cases of Market Manipulation Selected for Further Analysis
Case Title
SEC v.s. Joseph P. Willner
SEC v.s. Unknown traders and JSC PAREX Bank
SEC v.s. Taub et al.
SEC v.s. Milrud
SEC v.s. Briargate Trading, LLC
SEC v.s. Visionary Trading LLC et al.
SEC v.s. Hold Brothers On-Line Investment Services LLC et al.
Fraud
PnD
PnD
Start Date
Sep 2014
Dec 2005
Jan 2014
Layering
Jan 2013
Layering
Layering
Oct 2011
Layering May 2008
Layering
Jan 2009
Duration
2 Ys
1 Y
1 Y, 11 Ms
2 Ys
1 Y
2 Ys, 6 Ms
1 Y, 9 Ms
Instances
110
16
23,000
≥1
242
≥1
325,000
Revenue Annual Rev.
$350,000
$700,000
$732,941
$732,941
$13,565,217
$26,000,000
$12,000,000
$24,000,000
$525,000
$525,000
$393,759
$984,398
$1,800,000
$1,028,571
3.2 Case Studies
From our initial study of the SEC case files dating from 2005 to
2018, Table 1 lists several exemplar instances of pump-and-dump
(PnD) and layering frauds, including when they occurred and how
long the campaigns ran before being caught. We summarize these
cases here to establish a preliminary understanding of the current
state of market fraud. The attacks are generalized and automated
in Section 4.
Pump-and-Dump. Willner (Row 1, Table 1) prepared his scam
by placing asks to short shares of the target stock at prices sig-
nificantly higher than the current market value. He then used a
hijacked victim account to place a matching bid at the same high
price, causing his ask to execute. The victim now owns the over-
priced shares. Willner then forced the hijacked account to sell the
shares back to him at below market value, resulting in a significant
profit for Willner and loss for the victim.
In the Unknown Traders case (Row 2, Table 1), the criminals
prepared by purchasing shares in the target stock using their own
accounts. Meanwhile, they liquidated existing stock shares in hi-
jacked victim accounts into cash. They then used the resulting cash
to purchase large volumes of shares in the target stock, causing a
surge in the market and pumping up the price. The culprits could
then sell their shares at the peak of the price surge, yielding a profit.
Layering. All the listed cases (rows 3 through 7) start with open-
ing multiple asks to sell the target stock at progressively lower
prices. A few of these orders are allowed to fill, deflating the price
and applying downward pressure (i.e., expectation among back-
ground traders that the price will continue to decline). Some back-
ground traders sell their shares to avoid the anticipated decline,
further deflating the price. The criminals respond by executing bona
fide buys at the deflated price and then cancel all their remaining
sell orders. With the pressure suddenly gone, the price reverts back
to its original value, allowing the criminals to cash out for a profit.
The scam is then repeated in the opposite direction, starting
with a series of non-bona fide buy orders at increasing prices to
artificially inflate the price, followed by bona fide sells and cancels.
In summary, by creating the illusion of pressure, these criminals
deceive background traders into moving the stock price in their
favor.
3.3 Technical Challenges
Going from manual market manipulation to automated botnet cam-
paigns is not a one-to-one translation. There are several technical
challenges an adversary has to overcome to successfully adapt the
current techniques. The ones addressed in this work are:
(1) Which types of manipulation are suitable for botnet automa-
tion? (Section 4)
(2) How can a botnet bootstrap these attacks (e.g., acquire the
necessary shares to begin the manipulation), and evade de-
tection by brokerages? (Subsections 4.1, 4.2)
(3) How much trading leverage, vital for conducting fraud, does
a hijacked account offer verses the difficulty of compromising
it? (Subsection 4.3)
(4) How would a botnet optimize profitability (e.g., avoiding
accumulating commission fees)? (Subsections 4.4–4.6)
(5) How will the botmaster compromise enough accounts, with-
out depleting them of cash, to conduct the campaign while