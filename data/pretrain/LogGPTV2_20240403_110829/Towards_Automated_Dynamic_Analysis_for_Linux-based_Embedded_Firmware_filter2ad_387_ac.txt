### 优化后的文本

#### 网络服务监听端口及厂商分布
- **53/domain**
- **443/https**
- **5000/upnp**
- **1900/upnp**
- **49152/unknown**
- **2602/ripd**
- **5555/freeciv**

**厂商数量：**
- 9
- 7
- 6
- 1
- 7
- 2
- 1
- 4
- 2
- 3

**表 IV：按固件镜像和厂商数量划分的监听网络服务**

在 §IV-B 的最后一段中提到的问题也可能影响初始仿真。由于我们仅从包含多个文件系统的固件镜像中提取第一个类 UNIX 文件系统，因此很可能只提取了部分文件系统，导致启动失败。重新组装这些系统为一个单一文件系统并不容易，因为每个文件系统都可能在任意位置挂载到另一个文件系统上。

在进入“学习”阶段的 8,591 个固件镜像中，只有 32.3%（2,797 个）成功推断出网络配置。我们认为这种减少是由于在网络配置推断过程中启动过程失败所致。如 §IV-C1 最后一段所述，NVRAM 仿真问题是一个重要的原因。例如，如果我们的 NVRAM 实现无法覆盖内置实现、加载的默认 NVRAM 值不足或内置 NVRAM 实现期望不同的语义，路由器可能无法正确初始化。这些问题会在启动过程中表现为各种崩溃或挂起，特别是在调用内存或字符串操作函数（如 `memcpy()` 和 `strcpy()`）时，返回 NULL 值。此外，某些镜像可能不使用 NVRAM 硬件外设，而是直接将配置值写入 MTD 分区，而我们可能无法成功模拟这种情况。

其他可能导致网络故障的原因包括不同的网络设备命名约定。例如，使用 Atheros 或 Ralink 芯片组的设备可能期望平台网络设备命名为 `ath0` 或 `ra0`，而不是通用的 `eth0`。同样，其他设备可能期望存在无线网络接口（如 `wlan0`），否则会失败。此外，由于我们的 ARM 小端仿真平台目前仅支持最多一个仿真以太网设备，这可能会阻止某些固件镜像正确配置网络。

在具有推断网络配置的 2,797 个镜像中，只有 70.8%（1,971 个）实际上可以通过 ping 从网络访问。这可能是由于仿真客户机上的防火墙规则过滤了 ICMP 回显请求，导致假阴性结果，或其他网络配置问题。例如，我们的系统可能错误地将 QEMU 中的主机 TAP 接口分配给仿真的 WAN 接口而不是 LAN 接口，或者识别了 WAN 接口的默认 IP 地址而不是 LAN 接口。类似地，固件可能在启动后更改仿真的网络设备的 MAC 地址，导致陈旧的 ARP 缓存条目和看似不可达的机器。

令人惊讶的是，结果显示，在 1,971 个可从网络访问的固件镜像中，有 45%（887 个）至少对一种漏洞攻击易受攻击。我们在 §V-B 中进一步讨论这一点，并按漏洞进行细分。

**图 2：按厂商颜色标记的固件镜像仿真进度分解**

#### 远程管理接口
- **HTTP 或 HTTPS 接口**：其中只有 9.5% 支持 HTTPS 配置接口，占支持 HTTP 设备的 19.8%。
- **远程 shell 访问**：37.4% 的设备支持通过 Telnet 或 SSH 协议进行远程 shell 访问。需要注意的是，SSH 不在前十名之列；实际上它排名第 13 位，占比 2.2%，即支持 Telnet 的设备中的 1.9%。这比支持 HTTPS 的设备比例还要低。

根据 DNS 服务的存在，至少 27.2% 的固件镜像是路由器，通常充当本地 DNS 代理。另有 16.4% 的固件默认启用 Universal Plug and Play (UPnP)，允许 LAN 设备自动配置从 WAN 接口的端口转发。

端口 2602 用于 Routing Information Protocol (RIP) 协议，通常在企业级路由器上启用以进行自动网络路由。根据各种客户服务论坛，端口 3333 和 5555 在某些 Netgear 设备上是开放的，尽管我们尚未检查我们的 Netgear 固件镜像来确定负责的服务。端口 49152 是动态端口地址范围的第一个端口，通过 UPnP 由各种应用程序转发，但我们没有 UPnP 客户端，不确定默认的转发状态。

#### 仿真进度
如图 2 所示，在我们识别出架构的 8,617 个提取固件镜像中，系统最初成功仿真了 96.6%（8,591 个）。失败的原因包括标准位置（如 `/bin/init`、`/etc/init` 或 `/sbin/init`）缺少 init 二进制文件，或者文件系统不可启动。例如，某些包含 Ralink 芯片组的镜像将其 init 二进制文件命名为 `ralink_init`，而我们目前不支持这种情况。同样，前面讨论的提取失败也可能是原因之一。

#### 漏洞分析
**表 V：按受影响固件镜像数量、受影响产品数量和受影响厂商划分的漏洞**

**表 VI：按成功漏洞数量、受影响厂商数量和受影响产品数量划分的成功漏洞**

**B. 结果**
在表 V 中，我们提供了所有成功漏洞的详细信息。编号 #0 - #100 的漏洞来源于 Metasploit Framework，而编号大于或等于 #200 的大多数漏洞是我们开发的未知漏洞的概念验证 (POC)。除了 #202，这是一个已知漏洞但不是来自 Metasploit Framework。这些未知漏洞均已按照负责任披露政策报告给相应厂商。下面我们将详细介绍几个特定的漏洞作为案例研究。

**1. 命令注入 (#200, #201, #204 – #206, #208)**
在分析我们自动化可访问网页分析的结果时，我们发现了六个之前未公开的命令注入漏洞，这些漏洞影响了 24 个 Netgear 制造的无线路由器和接入点的固件镜像。所有六个漏洞都在提供调试功能的 PHP 服务器端脚本中，但似乎意外包含在生产固件版本中。特别是，其中有五个用于更改系统参数，如 WLAN 适配器的 MAC 地址和固件镜像的区域（如全球 [WW]、美国 [US] 或日本 [JP]）。剩余的一个用于将制造数据（如 MAC 地址、序列号或硬件版本）写入闪存。我们的手动分析显示，所有这些都是通过 `$_REQUEST` 超全局变量和 `exec()` 函数的不安全使用造成的命令注入漏洞。发现这些潜在漏洞后，我们利用 FIRMADYNE 自动验证了整个数据集中的漏洞可利用性。

**2. 缓冲区溢出 (#203)**
另一个我们手动发现的新漏洞是某些 D-Link 路由器固件镜像中的缓冲区溢出漏洞。为了实现用户认证，Web 服务器设置了一个名为 `dlink_uid` 的客户端 cookie，该 cookie 的值与每个经过认证的用户关联。这个认证功能实际上是硬编码在 Web 服务器中的，使用标准库函数 `strstr()`、`strlen()` 和 `memcpy()` 来复制 cookie 的值。因此，我们能够将 cookie 的值设置为过长的值，导致 Web 服务器在 0x41414141 处崩溃，这是我们监控的另一个中毒参数。

**3. 信息泄露 (#207, #209 – #214)**
通过自动化网页分析，我们还发现了七个新的信息泄露漏洞，这些漏洞影响了 51 个由 D-Link 和 Netgear 制造的各种路由器的固件镜像。其中一个 (#207) 存在于一个未受保护的网页中，该网页提供了路由器的诊断信息，包括 WPS PIN 和所有本地广播无线网络的密码短语。

其余六个漏洞 (#209 – #214) 存在于两家制造商的 Simple Network Management Protocol (SNMP) 守护程序中。此功能默认启用，可能是因为这些路由器针对小型企业而非家庭用户。要解释从 SNMP 查询获得的结果，需要访问描述每个单独对象 (OID) 字段语义的管理信息库 (MIB) 文件。如 §III-B 所述，我们的爬虫记录了收集到的元数据中的 MIB 文件链接，从而可以手动验证获得的结果。

我们的自动化漏洞验证表明，这些固件镜像会对未经身份验证的 SNMP v2c 查询做出响应，并返回包含所有用户在设备上的基于 Web 的访问凭据以及所有本地广播无线网络凭据的 OID 值。

**4. Sercomm 配置转储 (#47)**
此漏洞被报告为 CVE-2014-06595 并来源于 Metasploit Framework，攻击了 scfgmgr 服务中未记录且设计不良的功能，以远程转储 NVRAM 中的系统配置变量并获取 shell。公共文档表明，截至 2015-01-28，此漏洞已知影响 Cisco、Linksys、Netgear 和一些较小厂商生产的网络设备固件。我们的自动化分析也确认了 On Networks 和 TRENDnet 生产的设备中存在此漏洞。更准确地说，我们的结果显示，单个漏洞影响了我们数据集中 14.3% 的网络可达固件镜像。这是因为 Sercomm Corporation 可能是这些设备的原始设备制造商 (OEM)，然后由各种厂商重新品牌和销售。

**5. MiniUPnPd 拒绝服务 (#56)**
报告为 CVE-2013-02296 的此漏洞利用了 MiniUPnP 中 Simple Service Discovery Protocol (SSDP) 解析缺陷，触发对该服务的拒绝服务攻击。MiniUPnP 是一个开源的 UPnP 守护程序实现。

根据我们的结果，8.5% 的网络可达固件镜像受到此攻击的影响，该漏洞已在 2009-10-30 发布的 MiniUPnP 1.4 中修复。受影响的厂商包括华为、Netgear 和 Tomato by Shibby，后者是一种社区开发的第三方固件，适用于各种无线路由器。Metasploit Framework 的开发者 Rapid7 发布的统计数据表明，截至 2013-01-29，332 种产品使用了 MiniUPnP 1.0，超过 69% 的 MiniUPnP 指纹对应于 1.0 或更早版本。这些结果再次强调了由于共享软件组件（无论是开源还是专有）而导致的跨厂商漏洞的普遍性。

**6. OpenSSL ChangeCipherSpec (#64)**
此漏洞被报告为 CVE-2014-02248，利用了 OpenSSL 版本 0.9.8za、1.0.0m 和 1.0.1h 之前的 SSL/TLS 握手过程中的状态机实现缺陷。利用此漏洞，攻击者可以降级客户端和服务器之间的密码规范，从而可能允许中间人 (MITM) 攻击。我们的结果显示，8.5% 的网络可达固件镜像受到此攻击的影响，这是接受 HTTPS 连接的所有固件镜像的 89.9%。此漏洞还影响了我们数据集中 8.4% 的产品，是所有漏洞中影响最大的。受影响的厂商包括 D-Link、Netgear 和 TRENDnet。

#### 讨论与限制
虽然 FIRMADYNE 在我们的实验中表现良好，但仍有许多改进空间。如 §IV-B、§IV-C1 和 §IV-C2 所述，额外的手动工作可以改善系统，例如修复提取失败、增加对更多硬件架构的支持或纠正仿真失败。这些更改需要分析师手动分类根本原因并执行必要的更改以提高兼容性。实施新的分析步骤也需要手动劳动，尽管我们可以从中获得巨大收益，因为每个新实现的分析都可以自动执行在我们数据集中支持的所有固件镜像上。

此外，如 §V 所述，由于缺乏量化实际影响的机制（以唯一产品而非唯一固件镜像为单位），我们的结果难以评估。同样，我们的结果也受到数据集中厂商组成差异以及网络可达固件镜像的影响。

FIRMADYNE 的其他限制包括使用自定义预构建内核，当前这些内核不会从文件系统加载外部内核模块。因此，我们的系统无法用于确认固件镜像中供应商提供的内核或内核模块中的漏洞。例如，由于这一限制，我们无法评估 KCodes NetUSB 内核模块缓冲区溢出在我们数据集中的普遍程度。

同样，我们没有确定哪个网络端口用作上行链路（或 WAN）端口，哪些网络端口用于下行链路（或 LAN）端口。这使得我们无法确定检测到的漏洞是否可以从 Internet 利用，还是只能由本地连接的客户端利用。尽管如此，远程攻击者可以使用多种技术通过 Web 浏览器从 WAN 接口跳转到 LAN 接口，包括跨站请求伪造 (CSRF)、跨站脚本 (XSS) 甚至 DNS 重绑定攻击。随着 IPv6 的日益部署，本地机器现在被分配了全局可路由的 IP 地址。这使攻击者即使路由器仍充当防火墙，也可以访问消费者设备的 LAN 接口。越来越多的无线路由器和接入点现在支持网络隔离或客户端隔离功能，可以在各种无线或物理接口之间分隔流量。然而，网关路由器中存在这些漏洞显然破坏了这种保护。

#### 相关工作
随着嵌入式设备的普及，已有几项相关工作对固件镜像进行了大规模分析，使用了各种分析技术。例如，Heffner 对嵌入式固件镜像进行了大规模提取，收集了超过 2,000 个硬编码的 SSL 私钥数据库。同样，Rapid7 也使用类似的分析方法对硬编码的 SSH 私钥进行了分析，尽管规模较小。

Costin 等人最近使用静态分析对大约 32,000 个固件镜像的数据集进行了分析。他们发现了总共 38 个先前未知的漏洞，包括硬编码的后门、嵌入的私钥对和 XSS 漏洞，所有这些都没有进行复杂的静态分析。

另一种有效的嵌入式设备安全性大规模测量技术是网络扫描，这种方法避免了直接分析固件镜像。使用 Nmap 等工具，Cui 和 Stolfo 识别了约 540,000 个具有默认访问凭证的公开可访问嵌入式设备。在为期四个月的纵向研究中，他们发现不到 3% 的访问凭证发生了变化，这表明用户意识不足。同样，Heninger 等人使用 ZMap 网络扫描器发现，嵌入式设备也可能遭受熵问题。他们的结果显示，2.45% 的 TLS 证书可能因 RSA 密钥生成缺陷而容易受到暴力攻击，1.03% 的 DSA 私钥因非平凡的共同因子而可被分解。

此外，以前的工作还发现了影响各种嵌入式设备的具体漏洞。以 HP LaserJet 打印机为案例研究，Cui 等人展示了远程固件更新功能如何被攻击者利用来插入恶意软件。Weinmann 展示了部署的蜂窝基带实现存在可远程利用的内存损坏漏洞，可用于在基带处理器上执行任意代码。类似地，Bonkoski 等人展示了服务器主板上的远程管理功能充满了安全漏洞，允许远程攻击者控制系统。最后，Maskiewicz 等人和 Nohl 等人展示了恶意功能可以插入 USB 外围设备的固件中，从而使攻击者能够控制主机系统并泄露数据。

为了防御这种攻击向量，已经开发了几种不同的技术来查找嵌入式设备中的漏洞。例如，Davidson 等人开发了一个符号执行引擎 KLEE，用于检测嵌入式设备中的漏洞。他们的工作在 MSP430 系列 8 位嵌入式微控制器的 99 个开源固件程序中发现了 21 个内存安全漏洞。在较低级别，Li 等人将 QEMU 仿真器移植到 BIOS 中，以在开发过程中验证嵌入式 SoC 的硬件外围设备。

最近，Zaddach 等人还开发了一个框架，通过将 I/O 访问从仿真器转发到实际硬件进行执行来进行嵌入式固件的动态分析。然而，这种方法在分析成本和时间方面不具备扩展性，因此我们设计了 FIRMADYNE 以自动方式进行稳健的硬件仿真和漏洞验证。

#### 结论与未来工作
通过开发 FIRMADYNE，我们的自动化动态分析框架，我们希望降低发现嵌入式系统中新漏洞的门槛。同时，FIRMADYNE 实现了一种自动方法来评估大量嵌入式设备固件镜像中新发现的安全漏洞的普遍性。鉴于这些设备的安全态势较弱，我们认为更多的安全研究人员、爱好者和其他感兴趣的各方的关注可以激励设备制造商更快地解决其产品中的安全问题。这对于 OEM 来说尤为重要，因为他们负责现有部署设备中相当大比例的漏洞。

如图 V-A 所示，继 Linux 之后，我们数据集中第二大类嵌入式固件来自各种专有的实时操作系统（RTOS），如 VxWorks。这为未来的工作提供了一个潜在的方向，特别是考虑到已发布的漏洞会影响这些平台。特别地，我们有兴趣使用现有的实时 Linux 开发框架（如 Xenomai）在我们的仿真平台上为这些应用程序开发兼容层。

许多基于 Linux 的嵌入式固件源代码发布是可用的，这得益于常见的开源软件许可条款。由于我们的数据集包括每个固件镜像的相关源代码链接，这可以提供一种机制来实现有效的静态分析，结合我们现有的动态分析框架。

最后，统计分析技术可以用来改进我们框架中的固件提取组件。看起来被混淆或加密的固件镜像可以通过单独的提取路径处理。例如，众所周知，Buffalo LinkStation 设备的固件是加密的，但密码和解密工具是公开可用的。同样的情况也适用于 QNAP 设备分发的各种固件。

**致谢**
这项工作得到了国防部通过国家国防科学与工程研究生奖学金计划的部分资助，并在合同号 N66001-13-2-4040 下以及海军研究办公室的拨款 N00014-15-1-2948 下进行。本文所表达的观点、发现和结论或建议仅代表作者观点，不一定反映赞助方的意见。

**参考文献**
[1] “Binwalk.” [Online]. Available: http://binwalk.org/
[2] “Metasploit.” [Online]. Available: http://www.metasploit.com/
[3] “Nmap security scanner.” [Online]. Available: https://nmap.org/
[4] F. Bellard, “QEMU, a fast and portable dynamic translator,” in Proceedings of the USENIX 2005 Annual Technical Conference. USENIX, 2005, pp. 41–46.