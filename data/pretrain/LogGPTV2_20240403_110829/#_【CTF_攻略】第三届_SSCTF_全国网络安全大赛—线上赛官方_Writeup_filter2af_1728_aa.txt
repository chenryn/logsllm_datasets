# 【CTF 攻略】第三届 SSCTF 全国网络安全大赛—线上赛官方 Writeup
##### 译文声明
本文是翻译文章，文章来源：四叶草安全实验室
译文仅供参考，具体内容表达以及含义原文为准。
****
**  
**
传送门
[](http://bobao.360.cn/ctf/activity/421.html)
[第三届 SSCTF 全国网络安全大赛—线上赛圆满结束！](http://bobao.360.cn/ctf/activity/421.html)
2017年5月6日-7日，在陕西省互联网信息办公室、陕西省通信管理局指导下，由陕西省网络安全信息协会、西安四叶草信息技术有限公司与北京兰云科技有限公司联合主办，17家大型互联网行业的SRC和14家专业媒体以及新华网、新浪网、搜狐网、凤凰网、陕西网等20多家媒体的大力支持下，第三届SSCTF全国网络安全大赛—线上初赛圆满结束。
**  
**
**杂项**
**杂项一（签到题）**
此次SSCTF签到题不再是简单的个二维码类似的送分题，老司机们都玩腻了，搞了密码大杂烩。
    Z2dRQGdRMWZxaDBvaHRqcHRfc3d7Z2ZoZ3MjfQ==
**考察知识点：**
Base64
栅栏密码
凯撒密码
**解题步骤：**
首先base64解码
然后栅栏密码解密
然后rot13解密获得flag
答案：ssctf{ssCtf_seC10ver#@rabit}
**杂项二（flag在哪里）**
Flag在哪里主要考察的pcap的数据包分析和git的使用技巧。
1.在网站下载经过处理的流量包
2.用wireshark 进行分析。发现一个与.git相似目录。
3.然后用githack工具跑
4.查看源码，发现有flag,和pass.php,但是没用。
5．联想到可能flag和 pass.php 是以前commit的，用git还原回去
6．得到flag，flag{xsL3HOvFlV+H40s0mhszc5t1x38EU0ZIFJHZ/h2sC3U=}但是里边不是最终提交的flag，需要用pass.php进行解密。
7.解密完提交flag。 Flag{f6daf9bf00e45f52f23d844f20952503}
**杂项三（互相伤害！！！）**
用Wireshark打开流量包，发现存在多个jpg文件，导出http对象将jpg文件提取出来，如图01所示。
图01
提取出共21个jpg文件，可以看出全部为斗图素材，如图02所示。
图02
发现有两张图片经过修改，分别为图03和图04。
图03
图04
图03文字内容可以简单理解为“扔下内衣，交出内裤”，观察斗图素材发现图05符合上述描述。
图05
使用binwalk对文件进行分析，发现里面隐藏了一个zip文件，如图06所示。
图06
使用binwalk对文件进行提取，获取到里面的zip文件，发现需要密码才能解压，如图07所示。
图07
图04可以看到一个二维码，扫描二维码，得到一个字符串“U2FsdGVkX1+VpmdLwwhbyNU80MDlK+8t61sewce2qCVztitDMKpQ4fUl5nsAZOI7
bE9uL8lW/KLfbs33aC1XXw==“
在图04下方可以看到一段小字“本发布会由AES独家赞助”，AES算法属于对称密码，加解密需要提供密码，小字上面的CTF即为密码。通过解密得到明文：668b13e0b0fc0944daf4c223b9831e49。
解压图07的压缩包得到一个二维码，如图08所示。
图08
扫描图08得到字符串：“扔下内衣真有一线生机？？？？交出内裤才有活路！！！！“。
发现图08的二维码中心还有一个二维码，将小二维码截取出来，进行反转颜色，得到一个新的二维码，扫码得到flag：flag{97d1-0867-2dc1-8926-144c-bc8a-4d4a-3758}
**杂项四（我们的秘密是绿色的）**
由我们的秘密是green想到：OurSecret这个工具，然后解密还缺一个密码
又由绿色的猜测密码0405111218192526
生日格式 xxxx年 xx月 xx日
又因为文件名字是try，猜测是暴力破解8位纯数字密码
得到密码解压获得两个文件
很明显的明文攻击，构建明文攻击条件（将有flag的压缩文件删除掉里边的flag压缩包，然后压缩readme.txt。注意压缩的算法为Deflate，用rar可以轻松实现），然后进行明文攻击。
得到密码：Y29mZmVl
用winhex打开发现是伪密码，将01改为00
解压得到flag.txt
栅栏密码
已经出来flag的格式
Rot13
答案：flag{ssctf_@seclover%coffee_*}
**杂项五（你知道我在等你么）**
**0x1.题目：你知道我在等你么**
**0x2.考察知识点：**
隐写
文件标识头
**0x3.解题步骤：**
拿到题目后用winhex打开文件，发现有pk，也就是压缩包的标识头
然后将文件后缀修改为zip，然后解压发现有三个文件
有提示先看提示
扫码获得：
说是不是让看内容。
压缩包打开发现是加了密码的。
Winhex打开MP3会发现有压缩包的密码
解压之后发现一张coffee的图片，没有无缘无故的文件名字跟内容，winhex打开搜索coffee，还记得提示里边的神龙摆尾么，看一看文件的结尾
再看看提示的文件结尾
Coffee.jpg里边藏了一张png图片，并且标识头还改掉了，就在coffee的地方，还原。
将coffee到文件结尾复制出来，然后新建一个文件，之后按照提示的格式修改文件标识头，修改好后会得到一张图片
是一个二维码，扫描二维码后得到：http://qr07.cn/CuzwSv
访问得到：
下载后打开发现：
又是一个压缩包
修改后缀后打开，发现有以下提示。。。
压缩包伪密码，修改为0
修改完解压得到
Base64码
解码获得keyis%7Bsec1over%25_6ugscan_@coffee%7D
然后url解码获得：
答案：keyis{sec1over%_6ugscan_@coffee}
**Web渗透**
**Web一（弹幕）**
打开chrome F12,过滤ws类型，可以看到bot会尝试攻击每一个刚进入的玩家
    Welcome, 61.1**32){a=new Image();a.src='/xssHentai/request/1/?body='+c;}">
1\. 只有当cookie长度大于32的时候才会攻击，这应该也是一开始没人发现的原因
2\. Bot使用的XSS平台是弹幕这个服务器自带的登录xss平台，发现需要输入密码，这时注册一个进去
可以看到登录cookie里有一个flag，但只有uid=1的“人”才会有，它就是bot
所以思路就很清晰了，反打bot的xss平台的xss
    /xssHentai/request/1/?body={{payload}}
没有做任何限制,而且也不算盲打，因为有注册功能，可以自己先测试成功，再打bot。
所以到最后限制弹幕只能发8个字符，也有提示的意思，弹幕这里没flag。
**Web二（捡吗？来自FFF的思路）**
给了个页面，查看源码发现ssrf，根据自身的phpinfo找到本机内网IP：10.23.140.139，根据hint给出的 10.23.173.x
地址段进行扫描，找到 10.23.173.190，查看源码发现新IP：172.17.0.1
以下是当时记录的fuzz过程
一次跳板扫描内网
    /news.php?url=10.23.173.190
    host1   http://120.132.21.19/ （公）->10.23.140.139 (内)
    host2   10.23.173.190 （内） -> 172.17.0.1（内）
以上地址端口扫描结果只有22和80
C段使用端口探测（无结果：22/80/443/23/6379-redis/8080/11211）
两次跳板扫描内网
    /news.php?url=172.17.0.1/news.php%3Furl%3D127.0.0.1
    公网120.132.21.19->172.17.0.1 ->172.17.0.0/24  未发现其他主机
    公网120.132.21.19->10.23.173.190-> 10.23.173.0/24 未发现其他主机
    公网120.132.21.19->10.23.173.190-> 172.17.0.0/24 未发现其他主机（和公网访问的一样）
    公网120.132.21.19->172.17.0.1-> 10.23.173.0/24 未发现其他主机
    公网120.132.21.19->172.17.0.1-> 127.0.0.1 未发现内容
    公网120.132.21.19->10.23.173.190-> 127.0.0.1 未发现内容
这段fuzz用了好长时间最终也没有找到结果，后来hint告知了ftp协议才做出来。
最终payload是在大小写绕过的基础上用ftp协议fuzz 21端口得到的结果