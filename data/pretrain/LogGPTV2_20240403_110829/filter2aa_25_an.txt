话进行拦截。
14.2.4.1 SSL证书欺骗攻击
SSL证书欺骗攻击较为简单，首先通过DNS劫持和局域网ARP欺骗甚至网关劫持等技
术，将用户的访问重定向到攻击者的设备上，让用户机器与攻击者机器建立HTTPS连接
（使用伪造的CA证书），而攻击者机器再跟Web服务端连接。这样攻击者的机器分别与
用户和真正的服务器建立  SSL  连接，通过这两个连接之间转发数据，就能得到被攻击者
和服务器之间交互的数据内容。但用户的浏览器会提示证书不可信，只要用户不单击继续
就能避免被劫持。所以这是最简单的攻击方式，也是最容易识别的攻击方式。如图14-18
所示，为SSL证书欺骗攻击流程。
图14-18 证书欺骗过程
14.2.4.2 SSL劫持
SSL劫持，是指将页面中的HTTPS超链接全都替换成HTTP版本，让用户始终以明文
的形式进行通信。在现实生活中，用户在浏览器上输入域名，大部分采用直接输入网址的
方式，从而会忽略该网站采用的协议类型。例如打开百度，一般会直接输入
www.baidu.com，用户向百度发送一个  HTTP  请求，而不是  HTTPS。HTTP是以明文传输
数据的，因此如果利用  SSL  劫持攻击，使  HTTPS  协议的网站降级到HTTP，就能获取敏
感数据。
有部分网站并非全部采用HTTPS协议，只是在需要进行敏感数据传输时才使用
HTTPS  协议，如登录认证、传输敏感身份数据等时候。中间人攻击者在劫持了用户与服
务端的会话后，将HTTP页面里所有的HTTPS超链接都换成HTTP，用户在单击相应的链
接时，使用HTTP协议来进行访问。这样即使服务器对相应的URL只支持HTTPS链接，但
中间人攻击者一样可以和服务建立HTTPS连接之后，将数据使用HTTP协议转发给客户
端，实现会话劫持。
SSL劫持攻击手段更让人防不胜防，因为用户无法提前知道网站是否使用HTTPS 
或
者  HTTP，而在用户的浏览器上更不会弹框告警或者网页错误显示。如图11-19所示为SSL
劫持攻击流程。
图14-19 SSLStrip攻击示例
如图14-20所示，可利用SSLStrip工具成功劫持Gmail账号。
图14-20 劫持Gmail账号
14.1.5 撞库攻击
撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量
登录其他网站后，得到一系列可以登录的用户名和密码组合。由于很多用户在不同网站使
用的是相同的账号和密码，因此黑客可以通过获取用户在 A 网站的账户从而尝试登录B网
站，这就可以理解为撞库攻击。
14.2.5.1 某知名公司子站存在撞库风险
步骤一：某知名公司官方网站用户登录有验证码校验机制，但有个子站没有限制登录
次数，因此可利用该子站进行撞库攻击，在该子站验证成功后再返回主站进行登录，如图
14-21和图14-22所示。
图14-21 子站登录界面
图14-22 登录数据包
步骤二：如图14-23所示，利用捕获到的数据包通过Burp  Suite的intruder模块进行撞库
攻击。
图14-23 Burp Suite暴力破解
步骤三：利用该子站撞库攻击的结果，返回主站登录尝试，如图14-24所示，成功登
录主站。
图14-24 利用撞库成功登录
14.3 防范账号泄露的相关手段
随着互联网和各类网络应用的快速发展，关于保护账号安全的措施也迫在眉睫。总结
本章的账号安全相关案例，建议企业在防护账号和密码方面使用如下措施：
（1）核查数据库中的账号和密码存储方式，自行加密用户敏感数据，严格限制数据
库的访问条件，禁止外部连接数据库。
（2）采用  HTTPS  协议对账户认证过程实现加密封装，确保身份认证过程无法被窃
取。
（3）加强网络信息安全意识，网络管理人员对内部员工进行安全意识培训，禁止使
用弱口令，禁止公开个人账号密码，定期修改密码。
（4）使用数字证书认证。数字证书是通过运用对称和非对称密码体制等密码技术建
立起一个严密的身份认证系统，从而保证信息除发送方和接收方外不被其他人窃取。
（5）了解互联网账号泄露事件，存在账号泄露事件时第一时间通知客户修改个人账
号和密码，避免撞库攻击。
（6）加强对网站的安全防护能力，定期进行安全评估和升级更新，避免攻击者利用
漏洞获取账户信息。
第15章 密码找回安全案例总结
密码找回功能中潜在的逻辑漏洞，将使互联网用户的账户面临严重的安全风险。本章
将全面剖析常见密码找回逻辑漏洞案例，使读者了解和掌握该功能中存在的问题，规避密
码找回安全风险。
15.1 密码找回凭证可被暴力破解
密码找回凭证是指在密码找回过程中，服务端向用户的注册手机或者邮箱中发送的验
证码或特殊构造的URL等用于用户自证身份的信息。当用户凭证的验证次数未做限制或限
制不严可被绕过时，攻击者可以通过暴力枚举用户凭证的方式，冒充该用户重置其密码。
其业务流程如图15-1所示。
图15-1 业务流程图
15.1.1 某社交软件任意密码修改案例
2012年，某社交软件的官网上新增了一个忘记账号或密码的链接。
步骤一：单击忘记密码链接后，进入重设密码选择页，如图15-2和图15-3所示。
图15-2 忘记密码链接
图15-3 重设密码选择页
步骤二：选择使用手机号重设密码，并输入一个真实注册用户的手机号码，如图15-4
所示。
图15-4 重设密码页面
步骤三：单击“下一步”按钮后，系统提示将发送验证码到注册手机，如图15-5所示。
图15-5 发送验证码页面
步骤四：单击“我已收到验证短信”后，系统弹出重置密码确认页，需要输入手机上收
到的验证码作为密码找回凭证。核对成功则可以成功进行密码重置，如图15-6所示。
图15-6 发送验证码页面
步骤五：单击“OK”并对该请求进行抓包，获取到包文：
check=false&phone=186XXXXXXXX&……&verifycode=1234。
步骤六：根据以上包文信息可以发现该密码找回功能的验证码比较简单，只有4位数
字，可以尝试枚举修改包文中的verifycode进行暴力破解。几次尝试后收到系统提示“您的
提交请求过于频繁，请稍后再试。”说明该网站的密码找回功能是对用户凭证的验证频率
做了限制的，只能想办法绕过其限制。
步骤七：经过一系列尝试后发现，在phone=186XXXXXXXX的号码后面随机添加不
为数字的字符时，可以绕过此限制。于是推测其漏洞点在于判断  phone=186XXXXXXXX
的尝试次数时未对phone的值进行提纯，所以可以利用在号码后添加随机字符的方式绕过
限制。但在下一步操作的时候，只取了phone中的数字部分，然后再取出此号码的
verifycode进行比对，比对成功则修改密码，如图15-7所示。
图15-7 暴力破解示例
15.2 密码找回凭证直接返回给客户端
有些信息系统在密码找回功能的设计上存在逻辑漏洞，可能会将用于用户自证身份的
信息的密码找回凭证以各种各样的方式返回到客户端。这样攻击者只要通过在本地抓取数
据包并对其内容加以分析就能获取到其他用户的密码找回凭证，从而冒充该用户重置密
码，如图15-8所示。
图15-8 测试流程图
15.2.1 密码找回凭证暴露在请求链接中
步骤一：进入某直播网站登录处，单击忘记密码，选择通过注册手机找回密码，如图
15-9所示。
图15-9 通过注册手机找回密码
步骤二：输入手机号码，单击获取验证码，然后使用Firebug查看请求链接，发现验
证码直接出现在请求链接中，如图15-10所示。
图15-10 验证码出现在请求链接中
步骤三：直接输入请求链接中暴露出来的验证码即可修改密码。
15.2.2 加密验证字符串返回给客户端
步骤一：进入某电商官网按正常流程执行找回密码功能，填写好邮箱和图片验证码，
进入下一步，然后使用抓包工具抓取请求包。
步骤二：分析返回的数据包，发现其中包含了一个加密字符串，将其记录下来，如图
15-11所示。
图15-11 抓包返回数据结果
步骤三：之后，邮箱中会收到一个找回密码用的验证码。将该验证码在页面上填好，
单击下一步按钮即可进入密码重置页面，如图15-12所示。
步骤四：仔细观察发现，密码重置页面URL中的加密验证字符串和之前返回数据包中
的加密字符串是同一个，如图15-10和图15-11所示。既然如此，则可以绕过邮箱验证码校
验，直接利用抓包工具获取到的加密字符串构造到URL中进行任意密码重置，如图15-12
所示。成功重置并登录了官方客服的账号，如图15-13所示。
图15-12 密码重置页面
图15-13 密码重置并登录成功
15.2.3 网页源代码中隐藏着密保答案
步骤一：进入某邮箱网站官网，单击“找回密码”按钮，再单击“网上申诉”链接，如图
15-14所示。
步骤二：在网上申诉页面直接查看源代码，发现源代码中不但有密码提示问题，还在
Hide表单里隐藏着问题答案。通过该方式，可获得任意用户修改密码问题答案，从而可以
修改其他用户邮箱密码，如图15-15所示。
图15-14 网上申诉链接
图15-15 密保答案泄露
15.2.4 短信验证码返回给客户端
步骤一：进入某商城网站首页，单击忘记密码。
步骤二：使用一个已注册的手机号码，通过短信验证方式找回密码，如图15-16所
示。
图15-16 通过短信验证方式找回密码
步骤三：输入图片验证码，单击获取短信验证码，如图15-17所示。
图15-17 获取验证码
步骤四：此时抓取数据包，发现服务端直接将短信验证码646868返回给了客户端，将
短信验证码填写到验证码处即可成功重置其密码。同理，通过该方式，可以重置其他用户
的密码，如图15-18所示。
图15-18 返回短信验证码
15.3 密码重置链接存在弱Token
有些信息系统的密码找回功能会在服务端生成一个随机  Token  并发送到用户邮箱作
为密码找回凭证。但一旦这个  Token  的生成方式被破解，攻击者就可以伪造该Token作为
凭证重置其他用户的密码。测试流程如图15-19所示。
图15-19 测试流程图
15.3.1 使用时间戳的md5作为密码重置Token 步骤一：进入某网站先按正常流程取回一次密码，查看邮箱，邮件内容如图15-20所
示。
图15-20 邮件内容
步骤二：从邮件内容中可以看出参数vc为一串md5值，u为用户邮箱。将参数vc解密
后为1496732066。于是猜测参数vc应该为id值，尝试遍历id值并修改变量u，查看是否可以
修改其他用户密码，结果发现不可行。
步骤三：再仔细观察vc参数，发现和UNIX时间戳格式相符，于是使用UNIX时间戳转
换工具验证，转换成功，如图15-21所示。
图15-21 UNIX时间戳转换
步骤四：大致推测出该系统找回密码的流程。用户取回密码时，先产生一个精确的时
间戳并与账号绑定记录在数据库内，同时将该时间戳作为密码找回凭证发送到用户的注册
邮箱。只要用户能够向系统提供该时间戳即可通过认证，进入密码重置流程。但对攻击者
来说，只要编写一段程序在一定时间段内对时间戳进行暴力猜解，很快就可以获得找回密
码的有效链接，如图15-22所示。
图15-22 测试exp
步骤五：最终成功重置密码并登录到个人中心，如图15-23所示。
图15-23 重置密码成功
15.3.2 使用服务器时间作为密码重置Token
步骤一：进入某积分兑换商城，首先用 2 个账号在两个浏览器窗口中同时找回密码来
进行对比，如图15-24所示。
步骤二：对比邮箱中收到的找回密码链接，我们可以看出，找回密码使用的随机
Token只相差4，那么攻击者通过遍历Token的方式即可重置其他用户的密码，如图15-25所
示。
图15-24 开始找回密码
图15-25 重置密码链接