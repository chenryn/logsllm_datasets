# 逆向Windows 8：内核安全特性分析

## 摘要
本文旨在通过逆向工程研究Windows 8 Release Preview版本，揭示其中新引入的用于防御或缓解内核漏洞攻击的安全特性。重点将放在`ntoskrnl`模块上，并使用IDA Pro、Hex-Rays和WinDbg等工具进行分析。

## 目标
- **主要目标**：深入探究`ntoskrnl`中的安全机制。
- **工具**：IDA Pro, Hex-Rays, WinDbg。

## 议程
1. 禁止零页内存分配
2. 禁止Win32k系统调用
3. 安全性故障中断
4. 不可执行的非分页池
5. 使用Intel® Secure Key技术
6. 使用Intel® SMEP技术

### 1. 禁止零页内存分配
- **背景**：在Windows中，零页内存主要用于支持16位虚拟机NTVDM，确保16位代码正常运行。
- **问题**：攻击者可以通过如`ZwAllocateVirtualMemory`等系统调用，在进程中分配零页内存，进而利用未初始化对象指针/数据指针引用漏洞或辅助漏洞攻击。
- **案例**：CVE-2010-4398 (N-Protect TKRgAc2k.sys kernel 0day)。
- **改进**：Windows 8禁止进程申请低地址内存（0x0~0x10000），并默认禁用16位虚拟机，开启需管理员权限。
- **实现**：
  - `MiCreatePebOrTeb`：线程启动时创建PEB或TEB。
  - `MiMapViewOfImageSection->MiIsVaRangeAvailable`：映射镜像内存区时。
  - `MiMapViewOfDataSection/MiMapViewOfPhysicalSection`：映射数据内存区时。
  - `MmMapLockedPagesSpecifyCache/MmMapLockedPages->MiMapLockedPagesInUserSpace`：映射用户地址时。
  - `NtAllocateVirtualMemory`：分配进程内存。

### 2. 禁止Win32k系统调用
- **背景**：`win32k.sys`是内核漏洞高发区域，且不受进程权限限制。
- **问题**：现有沙箱策略对`win32k.sys`相关漏洞防御效果不佳。
- **改进**：通过设置`EPROCESS->Flags2.DisallowWin32kSystemCalls`标志，禁止GUI线程切换状态，从而阻止所有与`USER32/GDI32`相关的调用。
- **实现**：
  - 注册表配置：`HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ImageFileExecutionOptions\MitigationOptions`。
  - API调用：`SetProcessMitigationPolicy`。
  - 继承自父进程。

### 3. 安全性故障中断
- **新增中断**：Int 0x29。
- **作用**：在双向链表链接/脱链前检查安全性，防止任意地址写入。
- **触发示例**：`IoRegisterFsRegistrationChangeMountAware` 和 `IoUnregisterFileSystem`。
- **处理流程**：`KiRaiseSecurityCheckFailure` -> `KiFastFailDispatch` -> `KiBugCheck`，引发BSOD。
- **错误ID**：
  - 0x2：内核驱动报告Security Cookie异常。
  - 0x3：Safe unlinking / Safe linking异常。
  - 0x6：内核驱动Security Cookie未被初始化为高质量Cookie。
  - 0x9：注册表非可信(CVE-2010-4398)。

### 4. 不可执行的非分页池
- **背景**：之前内核和驱动程序使用的`ExAllocatePoolXXX`只能分配可执行的内核非分页内存。
- **问题**：这种内存可以用于内核溢出漏洞ROP攻击。
- **改进**：引入新的内存池类型`NonPagedPoolNx`、`NonPagedPoolNxCacheAligned`和`NonPagedPoolSessionNx`，分配的内存不可执行。
- **实现**：`IoAllocateDriverObjectExtension`等函数已更新以使用这些新的内存池类型。

### 5. 使用Intel® Secure Key技术
- **背景**：提供硬件实现的随机数生成器，增强内核安全性。
- **改进**：使用`RDRAND`指令生成高质量随机数，应用于Security Cookie和ASLR。
- **实现**：
  - `ExGenRandom`：生成随机数。
  - `MiProcessLoadConfigForDriver`：加载驱动时替换Security Cookie。
  - `OslpGatherRdrandEntropy`：启动过程中初始化SecureKey。

### 6. 使用Intel® SMEP技术
- **背景**：SMEP禁止从Ring0执行标记为Ring3的代码。
- **问题**：多数内核漏洞攻击通过跳转到用户地址空间的ShellCode实现。
- **改进**：SMEP开启后，禁止从内核模式执行用户模式代码。
- **实现**：
  - `KiTrap0E`：处理不可执行页面异常。
  - `ObCreateObjectType`：指定对象内存的PoolType为`NonPagedPoolNx`。

## 参考文献
- Intel. Intel® Digital Random Number Generator Software Implementation Guide.
- Intel. Intel® 64 and IA-32 Architectures Developer's Manual: Vol. 3A.
- J00ru. Exploiting the otherwise non-exploitable: Windows Kernel-mode GS Cookies subverted.
- H. Shacham, M. Page, B. Pfaff, E.-J. Goh, N. Modadugu, and D. Boneh. On the Effectiveness of Address-Space Randomization.
- Guillaume. Bypassing ASLR and DEP on Adobe Reader X.

## Q&A
感谢CHROOT Security Group和360Safe MDT/HIPS Team的支持。