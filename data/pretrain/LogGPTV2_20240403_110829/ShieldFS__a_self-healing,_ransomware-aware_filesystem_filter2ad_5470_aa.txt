# ShieldFS: A Self-Healing, Ransomware-Aware Filesystem

**Authors:**
- Andrea Continella
- Alessandro Guagnelli
- Giovanni Zingaro
- Giulio De Pasquale
- Alessandro Barenghi
- Stefano Zanero
- Federico Maggi

**Affiliation:**
DEIB, Politecnico di Milano, Milan, Italy

## Abstract
Preventive and reactive security measures are only partially effective against modern ransomware attacks. The significant illicit profits and increasing interest of cybercriminals in ransomware suggest that many users are paying ransoms. Pure-detection approaches, such as analysis sandboxes, are insufficient because they often cannot isolate and analyze samples before damage occurs. We propose ShieldFS, an add-on driver that makes the Windows native filesystem immune to ransomware attacks. ShieldFS dynamically toggles a copy-on-write protection layer based on its detection logic, which monitors low-level filesystem activity and updates adaptive models. When processes violate these models, their operations are deemed malicious, and the filesystem side effects are transparently rolled back.

We designed ShieldFS after analyzing billions of low-level I/O filesystem requests from thousands of benign applications, collected from clean machines used by real users over a month. This is the first large-scale measurement of filesystem activity under real working conditions. Our evaluation shows that ShieldFS can detect and recover from ransomware attacks in real-world settings, with high accuracy even on unseen samples.

## 1. Introduction
Ransomware is a class of malware that encrypts valuable files on a victim's machine and demands a ransom for the decryption keys. The requested ransom is typically in the range of a few hundred US dollars, often paid in untraceable currency. According to a 2015 survey, about 50% of ransomware victims paid the ransom, resulting in millions of dollars in illicit revenue. Modern ransomware families use advanced encryption techniques, making recovery without paying the ransom nearly impossible.

### Problem Statement and Vision
Kharraz et al. [7] were the first to analyze a large corpus of ransomware samples, suggesting that the filesystem is a strategic point for monitoring ransomware activity. Our goal is to create a forward-looking filesystem that prevents the effects of ransomware attacks. We propose, implement, and evaluate ShieldFS, a Windows driver that combines automatic detection and transparent file-recovery capabilities at the filesystem level.

### Preliminary Feasibility Assessment
To understand how ransomware compares to benign software from the filesystem's perspective, we analyzed the I/O request packets (IRPs) generated by benign applications on real-world, ransomware-free machines. We developed IRPLogger, a data-collection agent installed on 11 machines used by volunteers for typical day-to-day tasks. Over a month, we collected about 1.7 billion IRPs from 2,245 distinct applications. Using this data, we created a realistic environment to trigger ransomware attacks and monitored the filesystem activity.

### Proposed Approach
Our detection system is based on the combined analysis of write operation entropy, read, write, and folder-listing frequencies, dispersion of per-file writes, fraction of renamed files, and file-type usage statistics. ShieldFS automatically creates detection models that distinguish ransomware from benign processes and adapts these models to the observed filesystem usage habits. Additionally, ShieldFS scans the memory of potentially malicious processes for traces of cryptographic primitives.

A distinctive feature of ShieldFS is its ability to handle code injection, a common technique used by modern ransomware. Our detection mechanism considers both the long- and short-term history of each process and the entire system, focusing on runtime effects rather than the availability of executable binaries.

### Experimental Results Summary
We evaluated ShieldFS on 688 samples from 11 distinct ransomware families, demonstrating its effectiveness in protecting user data from real-world attacks. The system showed high accuracy and generalization capabilities, even when evaluated via cross-validation on our large dataset. We also installed ShieldFS on personal machines used by 3 volunteers, where it correctly identified ransomware processes and successfully reverted their effects.

### Summary of Original Contributions
- **Data Collection:** We performed the first large-scale collection of I/O request packets generated by benign applications in real-world conditions, collecting about 1.7 billion IRPs from 2,245 different applications.
- **Detection Approach:** We propose a ransomware-detection approach that enables a modern operating system to recognize typical ransomware behaviors.
- **Resilient Filesystem:** We propose an approach that makes a modern filesystem resilient to malicious encryption by dynamically reverting the effects of ransomware attacks.
- **Implementation:** We implemented these approaches as a drop-in Windows kernel module, capable of successfully protecting against current ransomware attacks.

In the spirit of open science, we release our datasets and the source code of ShieldFS at http://shieldfs.necst.it.

## 2. Low-Level I/O Data Collection
To understand how ransomware interacts with the filesystem compared to benign applications, we collected I/O request packets (IRPs) from real, operational desktop computers over several weeks. This provided a real-world reference of how files and folders are organized and a large dataset of filesystem access patterns from benign applications.

### 2.1 Filesystem Sniffer Details
We developed IRPLogger, a low-level I/O filesystem sniffer, installed on 11 real-world machines used by volunteers. At the first boot, IRPLogger traverses the directory tree of each mounted drive to collect metadata, including the total number of files, number of files per extension, and directory depth. IRPLogger intercepts I/O requests generated for each filesystem primitive, enriching the raw IRPs with timestamps, write entropy, and process IDs. Privacy-sensitive data, such as file names and paths, are minimized and hashed, while file extensions are kept in clear text for computing per-type file statistics.

### 2.2 Ransomware Activity Data Collection
We used IRPLogger to collect ransomware activity data. In December 2015, we obtained recent Windows executables labeled as ransomware from VirusTotal Intelligence API. We manually ran each sample to ensure it was fully functional, resulting in 383 active ransomware samples. We prepared virtual machines running Windows 7 (64-bit) with common utilities and typical user data to trigger the samples. During the experiments, we emulated basic user activity, allowed the samples to communicate with control servers, and denied harmful traffic. After each execution, we saved the IRP logs and rolled back the virtual machine to a clean snapshot.

### Table 1: Statistics of Collected Low-Level I/O Data
| User | Usage (hrs) | #IRPs (Mln) | #Procs (Mln) | #Apps | Data (GB) | Data Rate (MB/min) |
|------|-------------|-------------|--------------|-------|-----------|--------------------|
| 1    | 3.4         | 230.8       | 16.60        | 34    | 28.2      | 107.00             |
| 2    | 2.4         | 132.1       | 9.67         | 87    |           |                    |
| 3    | 0.9         | 54.2        | 5.56         | 17    |           |                    |
| 4    | 4.7         | 279.9       | 18.70        | 122   |           |                    |
| 5    | 2.2         | 138.1       | 5.04         | 47    |           |                    |
| 6    | 1.8         | 100.4       | 10.30        | 35    |           |                    |
| 7    | 0.8         | 49.0        | 3.28         | 8     |           |                    |
| 8    | 0.8         | 43.9        | 6.33         | 32    |           |                    |
| 9    | 7.7         | 501.8       | 24.20        | 215   |           |                    |
| 10   | 0.9         | 57.6        | 2.63         | 18    |           |                    |
| 11   | 2.6         | 175.2       | 4.69         | 28    |           |                    |
| Total| 1,763.0     | 1,07.00     | 2,245        | 643   | 28.2      | 34                 |

This comprehensive dataset and the detailed analysis provide a robust foundation for understanding and mitigating ransomware threats.