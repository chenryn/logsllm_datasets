User: When researching Google App Engine (GAE), it's clear that using Django is wildly popular for developing in Python on GAE.  I've been scouring the web to find information on the costs and benefits of using Django, to find out why it's so popular.  While I've been able to find a wide variety of sources on how to run Django on GAE and the various methods of doing so, I haven't found any comparative analysis on why Django is preferable to using the webapp framework provided by Google.
To be clear, it's immediately apparent why using Django on GAE is useful for developers with an existing skillset in Django (a majority of Python web developers, no doubt) or existing code in Django (where using GAE is more of a porting exercise).  My team, however, is evaluating GAE for use on an all-new project and our existing experience is with TurboGears, not Django.
It's been quite difficult to determine why Django is beneficial to a development team when the BigTable libraries have replaced Django's ORM, sessions and authentication are necessarily changed, and Django's templating (if desirable) is available without using the entire Django stack.
Finally, it's clear that using Django does have the advantage of providing an "exit strategy" if we later wanted to move away from GAE and need a platform to target for the exodus.
I'd be extremely appreciative for help in pointing out why using Django is better than using webapp on GAE.  I'm also completely inexperienced with Django, so elaboration on smaller features and/or conveniences that work on GAE are also valuable to me.
Assistant: I have experience using Django and not GAE.  From my experiences with Django it was a very simplistic setup and the deployment process was incredibly easy in terms of web projects.  Granted I had to learn Python to really get a good hold on things, but at the end of the day I would use it again on a project.  This was almost 2 years ago before it reached 1.0 so I my knowledge is a bit outdated.  
If you are worried about changing platforms, then this would be a better choice I suppose.