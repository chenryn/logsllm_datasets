    `成功`{.literal}。在其他情况下，命令返回一个带有更多详情的错误，如下所示：
    ``` literallayout
    # firewall-cmd --check-config
    Error: INVALID_PROTOCOL: 'public.xml': 'tcpx' not from {'tcp'|'udp'|'sctp'|'dccp'}
    ```
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_firewall-packet-filters.html#viewing-the-current-status-and-settings-of-firewalld_using-and-configuring-firewalld}查看 `firewalld`{.literal}的当前状态和设置 {.title}
:::
本节涵盖了有关查看 `firewalld`{.literal}
的当前状态、允许的服务以及当前设置的信息。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#viewing-the-current-status-of-firewalld_viewing-the-current-status-and-settings-of-firewalld}查看 `firewalld`{.literal} 的当前状态 {.title}
:::
默认情况下，防火墙服务 `firewalld`{.literal} 会在系统上安装。使用
`firewalld`{.literal} CLI 接口来检查该服务是否正在运行。
::: orderedlist
**步骤**
1.  查看服务的状态：
    ``` literallayout
    # firewall-cmd --state
    ```
2.  如需有关服务状态的更多信息，请使用 `systemctl status`{.literal}
    子命令：
    ``` literallayout
    # systemctl status firewalld
    firewalld.service - firewalld - dynamic firewall daemon
       Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor pr
       Active: active (running) since Mon 2017-12-18 16:05:15 CET; 50min ago
         Docs: man:firewalld(1)
     Main PID: 705 (firewalld)
        Tasks: 2 (limit: 4915)
       CGroup: /system.slice/firewalld.service
               └─705 /usr/bin/python3 -Es /usr/sbin/firewalld --nofork --nopid
    ```
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#proc_viewing-allowed-services-using-gui_viewing-the-current-status-and-settings-of-firewalld}使用 GUI 查看允许的服务 {.title}
:::
要使用图形化的 [**[firewall-config]{.application}**]{.strong}
工具来查看服务列表，请按 [**Super**]{.keycap} 键进入\"活动概览\"，输入
`firewall`{.literal}，然后按 [**Enter**]{.keycap}
键。[**[firewall-config]{.application}**]{.strong}
工具会出现。现在，您可以在 `Services`{.literal} 选项卡下查看服务列表。
您可以使用命令行启动图形防火墙配置工具。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包。
:::
::: itemizedlist
**步骤**
-   使用命令行启动图形防火墙配置工具：
    ``` literallayout
    $ firewall-config
    ```
:::
`防火墙配置`{.literal}
窗口打开。请注意，这个命令可以以普通用户身份运行，但偶尔会提示您输入管理员密码。
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#proc_viewing-firewalld-settings-using-cli_viewing-the-current-status-and-settings-of-firewalld}使用 CLI 查看 firewalld 设置 {.title}
:::
使用 CLI
客户端可能会对当前防火墙设置有不同的视图。`--list-all`{.literal}
选项显示 `firewalld`{.literal} 设置的完整概述。
`Firewalld`{.literal} 使用区来管理流量。如果没有用 `--zone`{.literal}
选项来指定区，该命令将在分配给活跃网络接口和连接的默认区中有效。
::: itemizedlist
**步骤**
-   要列出默认区的所有相关信息：
    ``` literallayout
    # firewall-cmd --list-all
    public
      target: default
      icmp-block-inversion: no
      interfaces:
      sources:
      services: ssh dhcpv6-client
      ports:
      protocols:
      masquerade: no
      forward-ports:
      source-ports:
      icmp-blocks:
      rich rules:
    ```
-   要指定显示设置的区，请在 `firewall-cmd--list-all`{.literal}
    命令中添加 `--zone=zone-name`{.literal} 参数，例如：
    ``` literallayout
    # firewall-cmd --list-all --zone=home
    home
      target: default
      icmp-block-inversion: no
      interfaces:
      sources:
      services: ssh mdns samba-client dhcpv6-client
    ... [trimmed for clarity]
    ```
-   要查看特定信息（如服务或端口）的设置，请使用特定选项。使用命令帮助来查看
    `firewalld`{.literal} 手册页或获取选项列表：
    ``` literallayout
    # firewall-cmd --help
    ```
-   查看当前区中允许哪些服务：
    ``` literallayout
    # firewall-cmd --list-services
    ssh dhcpv6-client
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
使用 CLI 工具列出某个子部分的设置有时会比较困难。例如，您允许
`SSH`{.literal} 服务，`firewalld`{.literal}
为该服务开放必要的端口(22)。之后，如果您列出允许的服务，列表将显示
`SSH`{.literal}
服务，但如果列出开放的端口，则不会显示任何内容。因此，建议您使用
`--list-all`{.literal} 选项来确保您收到完整的信息。
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_firewall-packet-filters.html#controlling-network-traffic-using-firewalld_using-and-configuring-firewalld}使用 `firewalld`{.literal} 控制网络流量 {.title}
:::
本节涵盖了使用 `firewalld`{.literal} 来控制网络流量的信息。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#disabling-all-traffic-in-case-of-emergency-using-cli_controlling-network-traffic-using-firewalld}使用 CLI 禁用紧急事件的所有流量 {.title}
:::
在紧急情况下，如系统攻击，可以禁用所有网络流量并关闭攻击者。
::: orderedlist
**流程**
1.  要立即禁用网络流量，请切换 panic 模式：
    ``` literallayout
    # firewall-cmd --panic-on
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    启用 panic
    模式可停止所有网络流量。因此，只有当您具有对机器的物理访问权限或使用串行控制台登录时，才应使用它。
    :::
2.  关闭 panic 模式会使防火墙恢复到其永久设置。要关闭 panic
    模式，请输入：
    ``` literallayout
    # firewall-cmd --panic-off
    ```
:::
::: itemizedlist
**验证**
-   要查看是否打开或关闭 panic 模式，请使用：
    ``` literallayout
    # firewall-cmd --query-panic
    ```
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#controlling-traffic-with-predefined-services-using-cli_controlling-network-traffic-using-firewalld}使用 CLI 控制预定义服务的流量 {.title}
:::
控制流量的最简单的方法是向 `firewalld`{.literal}
添加预定义的服务。这会打开所有必需的端口并根据
[*服务定义文件*]{.emphasis} 修改其他设置。
::: orderedlist
**流程**
1.  检查该服务是否还未被允许：
    ``` literallayout
    # firewall-cmd --list-services
    ssh dhcpv6-client
    ```
2.  列出所有预定义的服务：
    ``` literallayout
    # firewall-cmd --get-services
    RH-Satellite-6 amanda-client amanda-k5-client bacula bacula-client bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc ceph ceph-mon cfengine condor-collector ctdb dhcp dhcpv6 dhcpv6-client dns docker-registry ...
    [trimmed for clarity]
    ```
3.  在允许的服务中添加服务：
    ``` literallayout
    # firewall-cmd --add-service=
    ```
4.  使新设置持久：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#controlling-traffic-with-predefined-services-using-gui_controlling-network-traffic-using-firewalld}通过 GUI，使用预定义服务控制流量 {.title}
:::
这个步骤描述了如何使用图形用户界面控制预定义服务的网络流量。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  启用或禁用预定义或自定义服务：
    ::: orderedlist
    1.  启动 [**[firewall-config]{.application}**]{.strong}
        工具并选择要配置的服务的网络区。
    2.  选择\" `区域`{.literal} \"选项卡，然后在下面选择\"
        `服务`{.literal} \"选项卡。
    3.  选择您要信任的每种服务类型的复选框，或者清除要阻断所选区域中服务的复选框。
    :::
2.  编辑服务：
    ::: orderedlist
    1.  启动 [**[firewall-config]{.application}**]{.strong} 工具。
    2.  从标为 `Configuration`{.literal} 的菜单中选择
        `Permanent`{.literal}
        。其它图标和菜单按钮会出现在[服务]{.guibutton}窗口底部。
    3.  选择您要配置的服务。
    :::
:::
`Ports`{.literal} 、`Protocols`{.literal} 和 `Source Port`{.literal}
选项卡可为所选的服务启用、更改和删除端口、协议和源端口。模块标签是用来配置
[**[Netfilter]{.application}**]{.strong} helper
模块。`Destination`{.literal}
选项卡允许将流量限制到特定的目标地址和Internet协议(`IPv4`{.literal} 或
`IPv6`{.literal})。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在`Runtime`{.literal} 模式下无法更改服务设置。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_firewall-packet-filters.html#adding-new-services_controlling-network-traffic-using-firewalld}添加新服务 {.title}
:::
可以使用图形化的 [**[firewall-config]{.application}**]{.strong}
工具、`firewall-cmd`{.literal} 和 `firewall-offline-cmd`{.literal}
来添加和删除服务。或者，您可以编辑 `/etc/firewalld/services/`{.literal}
中的 XML 文件。如果用户未添加或更改服务，则在
`/etc/firewalld/services/`{.literal} 中没有相应的 XML
文件。如果要添加或更改服务，则文件
`/usr/lib/firewalld/services/`{.literal} 可用作模板。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
服务名称必须是字母数字，此外只能包含 `_`{.literal} （下划线）和
`-`{.literal} （短划线）字符。
:::
::: title
**步骤**
:::
要在终端中添加新服务，请使用 `firewall-cmd`{.literal} 或在
`firewalld`{.literal}
未激活的情况下，使用`firewall-offline-cmd`{.literal} 。
::: orderedlist
1.  运行以下命令以添加新和空服务：
    ``` screen
    $ firewall-cmd --new-service=service-name --permanent
    ```
2.  要使用本地文件添加新服务，请使用以下命令：
    ``` screen