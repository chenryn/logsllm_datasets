### Ansible Playbook Configuration

#### Playbook (`playbook.yml`)

```yaml
- hosts: all
  remote_user: user
  strategy: free
  roles:
    - role-using-with_nested-to-include
```

#### Role: `role-using-with_nested-to-include`

##### `tasks/main.yml`

```yaml
- include_tasks: first-include.yml

- include_tasks: second-include.yml
  with_nested:
    - ['foo']
    - ['bar']

- include_tasks: third-include.yml
  with_nested:
    - ['foo']
    - ['bar']

# If `fourth-include.yml` is commented out, `third-include.yml` will still be executed.
- include_tasks: fourth-include.yml
  with_nested:
    - ['foo']
    - ['bar']
```

##### `tasks/first-include.yml`

```yaml
- debug:
    msg: "hello world"
```

##### `tasks/second-include.yml`

```yaml
- debug:
    msg: "dlrow olleh"
```

##### `tasks/third-include.yml`

```yaml
- debug:
    msg: "world hello"
```

##### `tasks/fourth-include.yml`

```yaml
- debug:
    msg: "dlrow olleh"
```

### Expected Results

The expected results should match those obtained when using the `linear` strategy. All tasks in the playbook and included files will be executed, as shown in the output below:

1. **First Include**:
   - Message: "hello world"

2. **Second Include** (with nested loops):
   - Messages: "dlrow olleh" for each combination of `['foo']` and `['bar']`

3. **Third Include** (with nested loops):
   - Messages: "world hello" for each combination of `['foo']` and `['bar']`

4. **Fourth Include** (with nested loops):
   - Messages: "dlrow olleh" for each combination of `['foo']` and `['bar']`

If `fourth-include.yml` is commented out, the `third-include.yml` will still be executed, ensuring that all tasks up to that point are completed.