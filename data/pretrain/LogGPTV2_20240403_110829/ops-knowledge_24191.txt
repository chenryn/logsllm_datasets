I understand that you have installed MacPython 2.7 from python.org and would like to set it as the default Python version in MacPorts. However, it appears that MacPorts does not recognize the MacPython installation. Here is a more detailed and professional way to address your query:

---

**Setting Python 2.7 as the Default Version in MacPorts**

1. **Install Python 2.7 via MacPorts:**
   To ensure that MacPorts is aware of your Python 2.7 installation, it is recommended to install Python 2.7 directly through MacPorts. This can be done by running the following command in your terminal:
   ```sh
   sudo port install python27
   ```

2. **Set Python 2.7 as the Default Version:**
   Once Python 2.7 is installed via MacPorts, you can set it as the default version using the `port select` command. Run the following commands to see the available variants and select Python 2.7:
   ```sh
   port select --list python
   sudo port select --set python python27
   ```

3. **Verify the Default Python Version:**
   After setting Python 2.7 as the default, you can verify the change by checking the Python version in your terminal:
   ```sh
   python --version
   ```

**Advantages of Using Python from MacPorts:**

- **Integration with MacPorts:**
  By installing Python 2.7 through MacPorts, you ensure that it is fully integrated with the MacPorts system. This means that when you install other ports that depend on Python, MacPorts will use the version you have set as the default, avoiding the need for redundant installations.

- **Simplified Dependency Management:**
  Using Python from MacPorts simplifies dependency management. When you install ports that require Python, MacPorts will automatically use the version you have selected, ensuring consistency and reducing the risk of conflicts.

If you have any further questions or need additional assistance, feel free to ask.

---

This revised text provides a clear, step-by-step guide and explains the advantages of using Python from MacPorts, making it more professional and user-friendly.