```  
select t1.c1,t1.today,t1.k,t2.v_map from t1 join t2 on t1.c1=t2.c1 order by t1.c1 limit 10;  
D select t1.c1,t1.today,t1.k,t2.v_map from t1 join t2 on t1.c1=t2.c1 order by t1.c1 limit 10;  
┌────────────┬────────┬─────────────────────┬────────────────────────────────────────────────────────────────────────────────────┐  
│     c1     │ today  │          k          │                                       v_map                                        │  
├────────────┼────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────────────┤  
│ 2001-09-18 │ 36.250 │ 0.5477248881771232  │ {0.5477248881771232=36.19781407035174, 0.4294103279226137=36.178874345549715, 0... │  
│ 2001-09-19 │ 36.920 │ 0.9611386034911508  │ {0.9611386034911508=35.894709576138155, 0.6535704666379193=35.83907085691977, 0... │  
│ 2001-09-20 │ 36.610 │ 0.1591385938539098  │ {0.0015117174275450366=36.40301674515962, 0.0029461146679347697=36.413695779601... │  
│ 2001-09-21 │ 36.060 │ 0.17268457359219136 │ {0.17268457359219136=36.66319165638668, 0.07695242873659218=36.486907090977795,... │  
│ 2001-09-24 │ 36.050 │ 0.1566366042721039  │ {0.1566366042721039=36.80417729024607, 0.006366482125359778=36.437406610299774,... │  
│ 2001-09-25 │ 36.230 │ 0.6165713402856844  │ {0.6165713402856844=35.962677912493405, 0.02412225708179192=36.338516659059785,... │  
│ 2001-09-26 │ 36.080 │ 0.4374969015310316  │ {0.22128507496296002=36.11481824083091, 0.4374969015310316=36.16487413980442, 0... │  
│ 2001-09-27 │ 36.700 │ 0.46260944204892124 │ {0.16394346958076422=36.132866449511404, 0.20907984305230073=36.12818712738776,... │  
│ 2001-09-28 │ 37.090 │ 0.3201373973630739  │ {0.3201373973630739=35.23591397849454, 0.08695757663985203=35.639272300469486, ... │  
│ 2001-10-08 │ 36.580 │ 0.5522311441310693  │ {0.39780897600847426=37.37150684931507, 0.49709615562506027=37.4154761904762, 0... │  
└────────────┴────────┴─────────────────────┴────────────────────────────────────────────────────────────────────────────────────┘  
Run Time (s): real 0.017 user 0.016902 sys 0.000992  
select t1.c1,t1.today,t1.k,t2.v_map[t1.k] from t1 join t2 on t1.c1=t2.c1 order by t1.c1 limit 10;  
D select t1.c1,t1.today,t1.k,t2.v_map[t1.k] from t1 join t2 on t1.c1=t2.c1 order by t1.c1 limit 10;  
┌────────────┬────────┬─────────────────────┬─────────────────────┐  
│     c1     │ today  │          k          │   t2.v_map[t1.k]    │  
├────────────┼────────┼─────────────────────┼─────────────────────┤  
│ 2001-09-18 │ 36.250 │ 0.5477248881771232  │ [36.19781407035174] │  
│ 2001-09-19 │ 36.920 │ 0.9611386034911508  │ []                  │  
│ 2001-09-20 │ 36.610 │ 0.1591385938539098  │ []                  │  
│ 2001-09-21 │ 36.060 │ 0.17268457359219136 │ []                  │  
│ 2001-09-24 │ 36.050 │ 0.1566366042721039  │ []                  │  
│ 2001-09-25 │ 36.230 │ 0.6165713402856844  │ []                  │  
│ 2001-09-26 │ 36.080 │ 0.4374969015310316  │ []                  │  
│ 2001-09-27 │ 36.700 │ 0.46260944204892124 │ []                  │  
│ 2001-09-28 │ 37.090 │ 0.3201373973630739  │ [35.23591397849454] │  
│ 2001-10-08 │ 36.580 │ 0.5522311441310693  │ [37.4830664652568]  │  
└────────────┴────────┴─────────────────────┴─────────────────────┘  
Run Time (s): real 0.015 user 0.014920 sys 0.000168  
D select v_map[0.9611386034911508] from t2 where c1='2001-09-19';  
┌───────────────────────────┐  
│ v_map[0.9611386034911508] │  
├───────────────────────────┤  
│ [35.894709576138155]      │  
└───────────────────────────┘  
Run Time (s): real 0.001 user 0.000808 sys 0.000075  
D select v_map[0.5477248881771232] from t2 where c1='2001-09-28';  
┌───────────────────────────┐  
│ v_map[0.5477248881771232] │  
├───────────────────────────┤  
│ []                        │  
└───────────────────────────┘  
Run Time (s): real 0.000 user 0.000415 sys 0.000035  
D select v_map[0.3201373973630739] from t2 where c1='2001-09-28';  
┌───────────────────────────┐  
│ v_map[0.3201373973630739] │  
├───────────────────────────┤  
│ [35.23591397849454]       │  
└───────────────────────────┘  
Run Time (s): real 0.001 user 0.000901 sys 0.000072  
D pragma worker_threads=1;  
D select t1.c1,t1.today,t1.k,t2.v_map[t1.k] from t1 join t2 on t1.c1=t2.c1 order by t1.c1 limit 10;  
┌────────────┬────────┬─────────────────────┬─────────────────────┐  
│     c1     │ today  │          k          │   t2.v_map[t1.k]    │  
├────────────┼────────┼─────────────────────┼─────────────────────┤  
│ 2001-09-18 │ 36.250 │ 0.5477248881771232  │ [36.19781407035174] │  
│ 2001-09-19 │ 36.920 │ 0.9611386034911508  │ []                  │  
│ 2001-09-20 │ 36.610 │ 0.1591385938539098  │ []                  │  
│ 2001-09-21 │ 36.060 │ 0.17268457359219136 │ []                  │  
│ 2001-09-24 │ 36.050 │ 0.1566366042721039  │ []                  │  
│ 2001-09-25 │ 36.230 │ 0.6165713402856844  │ []                  │  
│ 2001-09-26 │ 36.080 │ 0.4374969015310316  │ []                  │  
│ 2001-09-27 │ 36.700 │ 0.46260944204892124 │ []                  │  
│ 2001-09-28 │ 37.090 │ 0.3201373973630739  │ [35.23591397849454] │  
│ 2001-10-08 │ 36.580 │ 0.5522311441310693  │ [37.4830664652568]  │  
└────────────┴────────┴─────────────────────┴─────────────────────┘  
Run Time (s): real 0.015 user 0.014968 sys 0.000158  
```  
## 补充,BUG2修复后的补充
把r2和map分开存储, 避免bug1的影响, 用一个表得到预测结果.   
```
drop table predict_result;
create table predict_result as   
with t1 as (  
select c1,   
array_agg(c5) OVER w10 as yester10day,   
array_agg(c5) OVER w9 as yester9day,   
array_agg(c5) OVER w8 as yester8day,   
array_agg(c5) OVER w7 as yester7day,   
array_agg(c5) OVER w6 as yester6day,   
array_agg(c5) OVER w5 as yester5day,   
array_agg(c5) OVER w4 as yester4day,   
c5 as today from his   
window   
w10 as ( order by c1 ROWS BETWEEN 10 PRECEDING AND -1 FOLLOWING ),  
w9 as ( order by c1 ROWS BETWEEN 9 PRECEDING AND -1 FOLLOWING ),  
w8 as ( order by c1 ROWS BETWEEN 8 PRECEDING AND -1 FOLLOWING ),  
w7 as ( order by c1 ROWS BETWEEN 7 PRECEDING AND -1 FOLLOWING ),  
w6 as ( order by c1 ROWS BETWEEN 6 PRECEDING AND -1 FOLLOWING ),  
w5 as ( order by c1 ROWS BETWEEN 5 PRECEDING AND -1 FOLLOWING ),  
w4 as ( order by c1 ROWS BETWEEN 4 PRECEDING AND -1 FOLLOWING )   
order by c1   
), 
t2 as (
select c1,  
[regr_r2_d4(yester4day), regr_r2_d5(yester5day), regr_r2_d6(yester6day), regr_r2_d7(yester7day), regr_r2_d8(yester8day), regr_r2_d9(yester9day), regr_r2_d10(yester10day)] as v_r2,   
[predict_d4(yester4day), predict_d5(yester5day), predict_d6(yester6day), predict_d7(yester7day), predict_d8(yester8day), predict_d9(yester9day), predict_d10(yester10day)] as v_predict,   
today   
from t1   
where   
c1 > '2001-09-17'::date   
)
select c1, today, v_r2, map(v_r2,v_predict) as v_map from t2;
select c1,today,v_map[(array_sort(v_r2,'DESC','NULLS LAST')[1])][1] as predict from predict_result limit 10;
┌────────────┬────────┬────────────────────┐
│     c1     │ today  │      predict       │
├────────────┼────────┼────────────────────┤
│ 2001-09-18 │ 36.250 │ 36.19781407035174  │
│ 2001-09-19 │ 36.920 │ 35.894709576138155 │
│ 2001-09-20 │ 36.610 │ 35.87527833001987  │
│ 2001-09-21 │ 36.060 │ 36.66319165638668  │
│ 2001-09-24 │ 36.050 │ 36.80417729024607  │
│ 2001-09-25 │ 36.230 │ 35.962677912493405 │
│ 2001-09-26 │ 36.080 │ 36.16487413980442  │
│ 2001-09-27 │ 36.700 │ 36.081162388431466 │
│ 2001-09-28 │ 37.090 │ 35.23591397849454  │
│ 2001-10-08 │ 36.580 │ 37.4830664652568   │
└────────────┴────────┴────────────────────┘
Run Time (s): real 0.004 user 0.003137 sys 0.000061
```
## 参考  
https://duckdb.org/docs/sql/statements/create_macro  
- [《在PostgreSQL中用线性回归分析(linear regression) - 实现数据预测 - 股票预测例子》](../201503/20150303_01.md)    
- [《PostgreSQL 线性回归 - 股价预测 1》](../201503/20150304_01.md)    
- [《在PostgreSQL中用线性回归分析linear regression做预测 - 例子2, 预测未来数日某股收盘价》](../201503/20150305_01.md)    
- [《PostgreSQL 多元线性回归 - 2 股票预测》](../201512/20151214_01.md)    
- [《PostgreSQL KPI 预测例子 - 线性回归, 斜率, 截距, 相关性, regr_slope, regr_intercept, regr_r2》](../201904/20190426_01.md)    
还有一个比较复杂的, 使用分形和长相关性分析H值, 了解当前适合回归预测模型还是线性相关预测模型.   
- https://baijiahao.baidu.com/s?id=1698975972599231718  
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB for PostgreSQL云原生分布式开源数据库](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")