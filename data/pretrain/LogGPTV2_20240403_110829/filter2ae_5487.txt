本项目源码及训练完成的模型均开源当前识别率98%。
转载请附：博文网址：
[urlteam](https://www.urlteam.org/2017/03/tensorflow%E8%AF%86%E5%88%AB%E5%AD%97%E6%AF%8D%E6%89%AD%E6%9B%B2%E5%B9%B2%E6%89%B0%E5%9E%8B%E9%AA%8C%E8%AF%81%E7%A0%81-%E5%BC%80%E6%94%BE%E6%BA%90%E7%A0%81%E4%B8%8E98%E6%A8%A1%E5%9E%8B/)
，github 网址：[tensorflow_cnn](https://github.com/luyishisi/Anti-Anti-Spider/tree/master/1.%E9%AA%8C%E8%AF%81%E7%A0%81/tensorflow_cnn)
新开一个专门存储TensorFlow项目的仓库逐步更新欢迎star
：[tensorflow](https://github.com/luyishisi/tensorflow)
主流验证码偏向于用扭曲，倾斜，干扰例如下图：
因为字符距离近，没法采用先切割为单个字符然后进行局部识别的方式，so。
使用TensorFlow+cnn。进行卷积识别，该方法无需切割验证码，最终结果为训练4天(单台i5机器)达到98准确率
## 项目综述：
**相关论文** ：
  * [Multi-digit Number Recognition from Street View Imagery using Deep CNN](https://arxiv.org/pdf/1312.6082.pdf)
  * [CAPTCHA Recognition with Active Deep Learning](https://vision.in.tum.de/_media/spezial/bib/stark-gcpr15.pdf)
  * 
使用深度学习+训练数据+大量计算力，我们可以在几天内训练一个可以破解验证码的模型，不需要分割验证码，而是把验证码做为一个整体进行识别。
自己做一个验证码生成器，然后训练CNN模型破解自己做的验证码生成器。感觉的字符验证码机制可以废了，单纯的增加验证码难度只会让人更难识别，使用[CNN](http://blog.topspeedsnail.com/archives/10833)+[RNN](http://blog.topspeedsnail.com/archives/10542)，机器的识别准确率不比人差。Google已经意识到了这一点，他们现在使用机器学习技术检测异常流量。
CNN需要大量的样本进行训练。如果使用数字+大小写字母CNN网络有4 _62个输出，只使用数字CNN网络有4_ 10个输出。因此需要一个脚本自动生成训练集。
最初cnn学习自: 
### 成功率（可能波动，均亲身实践）：
  1. 达到50%成功率需要2000个批次，总计20w张图片。
  2. 达到70%成功率需要4000个批次，总计40w张图片。
  3. 达到94%成功率需要40000个批次，总计400w张图片。
  4. 达到98%成功率需要100000个批次，总计1000w张图片。
### loss曲线为：
### 成功率曲线为：
## 实践流程：
  1. TensorFlow环境搭建：[官网下查看安装教程](https://www.tensorflow.org/versions/r0.12/get_started/index.html)
  2. 测试批量验证码生成训练集： [github](https://github.com/luyishisi/Anti-Anti-Spider/blob/master/1.%E9%AA%8C%E8%AF%81%E7%A0%81/tensorflow_cnn/gen_captcha.py)
  3. TensorFlow—cnn 批量生成验证码并用cnn训练： [github](https://github.com/luyishisi/Anti-Anti-Spider/blob/master/1.%E9%AA%8C%E8%AF%81%E7%A0%81/tensorflow_cnn/tensorflow_cnn_train.py)
  4. 将训练模型存放于同一目录下，测试结果：[github](https://github.com/luyishisi/Anti-Anti-Spider/blob/master/1.%E9%AA%8C%E8%AF%81%E7%A0%81/tensorflow_cnn/tensorflow_cnn_test_model.py)
  5. 98%准确率模型下载：链接:  密码: sngx
### 运行截图：
#### 测试训练图片生成：
#### 模型训练中：
#### 测试模型：
本项目由urlteam维护，欢迎star
相关的验证码破解系列可以在这里找到：[github](https://github.com/luyishisi/Anti-Anti-Spider/tree/master/1.%E9%AA%8C%E8%AF%81%E7%A0%81)
逐步更新TensorFlow系列项目：[github](https://github.com/luyishisi/tensorflow)