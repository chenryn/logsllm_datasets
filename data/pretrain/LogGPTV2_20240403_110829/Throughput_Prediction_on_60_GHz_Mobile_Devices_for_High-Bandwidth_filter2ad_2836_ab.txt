input features are the most useful for a high prediction accuracy, we also run a
feature pruning algorithm which ranks the importance of the features.
3 Results and Analysis
In this section, we present the results using our neural network models. We
consider three scenarios: (i) static scenarios, where the phone is ﬁxed at a given
azimuth and pitch at a distance of 4 m in front of the AP, (ii) random mobility
scenarios, where the phone simultaneously moves along all three dimensions
(azimuth, pitch, slide) at diﬀerent speeds, and (iii) real application scenarios,
where we use real application traces – VR and ABR video streaming – instead
of backlogged TCP traﬃc generate by nuttcp, under random mobility.
Throughput Prediction on 60 GHz Mobile Devices
519
3.1 Impact of the Phased Array Field of View
Practical phased arrays used by COTS devices have a limited angular coverage
area on the receiving end, called ﬁeld-of-view (FoV) in [44], outside of which
throughput drops sharply. Previous studies using 802.11ad APs and laptops [35,
44] showed that the FoV is around 170◦. We begin our study by measuring the
throughput when the AP stays within/outside the phone’s FoV. We place the
phone facing the AP from a distance of 4 m, and rotate it to change its azimuth
with respect to the AP. Our results in Fig. 2 show that, when the azimuth
is within (−60◦, 60◦), the average throughput is always ∼1.5 Gbps. Once the
azimuth moves outside this region, the throughput drops below 1 Gbps and
becomes 0 for angles greater than ±90◦. Hence, the FoV is even smaller in the
case of these ﬁrst generation 802.11ad smartphones. In the rest of the paper we
focus on predicting throughput when the AP is within the phone’s FoV.
Interestingly, Fig. 3 shows that throughput can vary signiﬁcantly over time
even within the FoV, especially at ﬁne timescales. At the 10 ms timescale, the
throughput varies between 1 Gbps and 1.8 Gbps and sometimes drops even
below 500 Mbps. Such large variations are caused by the 802.11ad MAC layer
mechanisms, including the periodic beaconing by the AP every 100 ms, beam-
forming between the phone and the AP (triggered periodically, every 3 s, as well
as in case of missing ACKs), and the interplay between beamforming and rate
adaptation [35], all of which make make throughput prediction quite challenging
at ﬁne timescales. At the coarser timescales of 100 ms and 2000 ms though, the
variations are averaged out and throughput appears much smoother.
3.2 Static Scenarios
We ﬁrst explore the throughput predictability when the phone is stationary. In
this section, we aim to understand how well we can predict throughput changes
caused by channel variations and MAC layer mechanisms only.
We collected 5 static traces, listed in Table 1, by placing the phone at various
azimuth and pitch angles with respect to the AP. We trained and evaluated
a separate model on each trace. Since the phone is static for the duration of
each trace, we do not use the azimuth, pitch, and link status data in training
and testing our models as these features remain constant. The results shown in
Figs. 4a–4c are averaged over the 5 traces.
Table 1. Static traces collected
Trace # Azimuth Pitch Length Average Throughput
Static 1
Static 2
Static 3
Static 4
Static 5
◦
0
◦
30
◦
60
◦
0
◦
0
◦
0
◦
0
◦
0
◦
40
−40
◦
10 hr
10 hr
10 hr
10 hr
10 hr
1588 Mbps
1575 Mbps
1568 Mbps
1566 Mbps
1585 Mbps
520
S. Aggarwal et al.
Fig. 4. Model performance for static traces. The input for timescales above 100 ms
does not include throughput, see Feature Selection in this section.
Figures 4a, 4b, 4c show that the accuracy with all three models and for all
three metrics generally improves as we move from ﬁner to coarser timescales.
Overall, the accuracy is very high at timescales coarser than 40 ms, where there
are no signiﬁcant throughput variations, as we saw in Fig. 3. The RMSE remains
below 100 Mbps, the ARE95 metric remains below 12%, and the PARE10 metric
above 92% at those timescales. For the ﬁne timescales (10–20 ms) required for
VR applications, the 95th percentile of the error is higher, 14–16% at 20 ms
and 23–27% at 10 ms, due to the the large throughput variations at such short
timescales, which we observed in Fig. 3. Nonetheless, the RMSE remains at
satisfactory levels (122–175 Mbps) and 78–88% of the prediction errors are still
lower than 10%. Overall, DNN models can make accurate throughput predictions
at all timescales in static conditions.
When we compare the three DNN models, we observe that there are no
signiﬁcant diﬀerences among them. The RNN models perform slightly better in
terms of the RMSE and ARE95 metrics at 10 ms, but the BP model becomes
slightly more accurate at coarser timescales. All three models perform similarly in
terms of the PARE10 metric. Between the two RNN models, RNN8 outperforms
RNN20 at all timescales except for 10 ms.
To study the impact of the diﬀerent angles that the phone is kept at within
the FoV, we picked the best model for each angle at each timescale and plotted
the RMSE in Fig. 4d. For timescales up to 100 ms, the prediction is most accurate
when the phone is facing exactly towards the AP (0◦ azimuth, 0◦ pitch). At
coarser timescales, there is no clear trend. In most cases, the 60◦ azimuth trace
has the worst RMSE, which is most likely due to the fact that at 60◦ azimuth the
AP is very close to the edge of the phone’s FoV (Sect. 3.1) and hence experiences
higher throughput variations. In terms of the pitch, +40◦ has lower RMSE for
some timescales but −40◦ for other timescales. Overall, in static conditions, the
model performance is not aﬀected signiﬁcantly by the azimuth or pitch angles.
Throughput Prediction on 60 GHz Mobile Devices
521
Feature Selection. To understand which of these features are more useful in
the prediction, we perform the following iterative feature removal exercise.
We start with all N features. For each feature, we temporarily remove it from
the input, and train a model using the remaining N−1 features. We then compare
the resulting models and identify the least useful feature among the N features
as the one removing which results in the model with the least prediction accuracy
reduction. We permanently remove this feature from the input, and iteratively
perform the same procedure on the remaining N − 1, N − 2, N − 3... features,
until all but one features have been removed. Eﬀectively, this algorithm ranks
the features by their importance to the model’s accuracy. We run this algorithm
for all the timescales. The results, averaged over all 5 datasets in Table 1, are
shown in Table 2 only for the BP8 model and 3 representative timescales (10 ms,
100 ms, and 2000 ms) due to the page limit.
At the 10 ms timescale, we observe that removing SQI, MCS, and Tx Sector
marginally improves the RMSE. However, when we remove RSSI (and hence
we only use the past throughput), the RMSE increases by ∼5 Mbps. Thus,
at the 10 ms timescale, the past throughput is the most important feature that
contributes to the model’s accuracy followed by RSSI.
Surprisingly, at the coarser timescales of 100 ms and 2000 ms, we observe
that throughput actually is the least important feature. In particular, at 2000 ms,
excluding throughput from the input features improves the RMSE by 6 Mbps. On
the other hand, MCS, which was not very important at the 10 ms timescale, now
becomes the most important feature. In fact, we observed that for all timescales
less than 100 ms, throughput is the most important feature while for all coarser
timescales MCS becomes the most important feature.
Table 2. Features selection for static traces
Removal step
10 ms
100 ms
2000 ms
Removed RMSE Removed RMSE Removed RMSE
–
SQI
MCS
Tx Sector 173.79
178.17
RSSI
–
71.75
–
175.01
57.38
174.33 Throughput 70.26 Throughput 51.56
174.34 Tx Sector
51.85
52.80
52.28
69.47
70.46
70.17
SQI
RSSI
Tx Sector
RSSI
SQI
1
2
3
4
Last feature
Throughput
MCS
MCS
3.3 Mobile Scenarios
In this section, we explore the impact of realistic smartphone motion patterns
(typical with applications like VR and 360◦ video streaming) on throughput
prediction. We collected a 10 h long trace, where the phone simultaneously moved
in the azimuth, pitch, and slide dimensions at diﬀerent speeds. In the azimuth
522
S. Aggarwal et al.
dimension, the phone moved in the [−60◦, 60◦] range at various speeds between
10◦/s and 40◦/s. In the pitch dimension, the phone moved in [−40◦, 40◦] range
at speeds between 6◦/s and 20◦/s. These speeds were picked as they represent
typical VR motion speeds [26,48]. In the slide dimension, the phone moved at
a speed of 0.05 m/s (the maximum speed supported by the Cinetics slider). We
found that, at such low speeds, translational motion along the 1 m slider has
no impact on throughput. Hence, we do not include the y-coordinate or the
acceleration along the y-axis in our feature set.
Fig. 5. Model performance for random motion traces. The input for timescales above
100 ms does not include throughput.
As expected, the prediction accuracy under mobility worsens (Fig. 5) with all
three models and for all three metrics compared to the static scenarios (Figs. 4a,
4b, 4c). The RMSE ranges from 92–258 Mbps (vs. 50–175 Mbps in Fig. 4a), the
ARE95 metric ranges from 12–40% (vs. 5–27% in Fig. 4b), and the PARE10 met-
ric from 59–94% (vs. 78–98% in Fig. 4c). Nonetheless, prediction at timescales of
100 ms or higher retains high accuracy. Interestingly, we observe a “sweet spot”
at 400 ms with respect to all three metrics, which was not present in the static
scenarios. This suggests that motion introduces an interesting trade-oﬀ between
the length of history as input, and the prediction window in the future.
We now look at the results at the two ends of the spectrum. At timescales of
1 and 2 s, corresponding to video streaming applications, the accuracy remains
at satisfactory levels; the 95th percentile of the error is below 20% and about
89% of the errors are lower than 10%. On the other hand, the accuracy drops
signiﬁcantly at VR timescales, 10 and 20 ms. In particular, the ARE95 metric
ranages between 38–40% and 26–29%, and the PARE10 metric is below 60% and
70%, respectively.
Finally, when we compare the accuracy of the three models, we observe that
the RNN models perform slightly better for up to 40 ms and the BP model
performs better at coarser timescales. However, the diﬀerence in the performance
among the three models is even smaller compared to the results in Fig. 4.
Throughput Prediction on 60 GHz Mobile Devices
523
Feature Selection. Table 3 shows the feature selection results in random mobil-
ity scenarios. Similar to the results in Table 2, we observe that throughput is the
most important feature for only the 10 ms and 20 ms timescales, while for all
coarser timescales, MCS becomes the most important feature. At 10 ms, RSSI
remains the second most important feature, same as in Table 2, while the phone’s
pitch and azimuth interestingly do not contribute much to the accuracy. In con-
trast, at 2000 ms, azimuth and pitch are the most important features after MCS.
At 100 ms, the contribution of all features other than throughput and MCS is
marginal.
Table 3. Features selection for random motion traces
Removal step
10 ms
100 ms
2000 ms
–
Azimuth
SQI
–
117.30
–
MCS
Pitch
250.98
258.18 Throughput 110.34 Throughput
252.39
254.36
255.01
Removed RMSE Removed RMSE Removed RMSE
110.39
98.56
97.57
97.87
99.69
101.69
105.32
112.81
108.50
107.62 Link Status
108.01 Tx Sector
SQI
Pitch
Link Status 256.10 Link Status 109.12
109.95
Tx Sector
112.67