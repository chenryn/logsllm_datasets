    def egcd(a, b):
        if a == 0:
            return (b, 0, 1)
        else:
            g, y, x = egcd(b % a, a)
            return (g, x - (b // a) * y, y)
    def modinv(a, m):
        g, x, y = egcd(a, m)
        if g != 1:
            raise Exception('modular inverse does not exist')
        else:
            return x % m
    s = egcd(e1, e2)
    s1 = s[1]
    s2 = s[2]
    print s
    n=n1
    if s1
    #include
    int change(int a1)
    {
      int v1; // r3@3
      if ( a1 > 9 || a1  15 )
      v1 = 255;
    else
      v1 = (unsigned __int8)(a1 + 'W');
      }
      else
      {
    v1 = (unsigned __int8)(a1 + '0');
      }
      return v1;
    }
    int main(){
        char flag[]={"9838e888496bfda98afdbb98a9b9a9d9cdfa29"};
        for(int j=0;j>4)^0xe)==flag[j+1]){
                    printf("%c",i);
                }
            }
        }
        return 0;
    }
flag : flag{Y0uG0Tfutur3@}
**取证密码 200**
这一道android也是比较简单的。虽然是有加载库的，但是完全没难度呀
简单分析一下他的流程就是
    #include
    int main(){
        char arr[]={"yInS567!bcNOUV8vwCDefXYZadoPQRGx13ghTpqrsHklm2EFtuJKLzMijAB094W"};
        char index[]={0x39,0x20,7,0xA,0x20,0x29,0x13,2,0x3A,0xC,0x11,0x31,0x3B,0xB,7};
        for(int i=0;i>1)+15) 之后的字符串，这里解密出来为 "JsnatterrtJuaththovacke"
写个一个java脚本跑了一下
    java
    public class test {
        //static String arr1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";    
        //static String arr2 = "ZYXWVUTSRQPONMLKJIHGFEDCBA";
        public static void main(String args[]){
            String arr1 = "JsnatterrtJuaththovacke";
          for(int i=0;i2){
                return te(i-1)+te(i-2);
            }
            return 1;
        }
    }
最后得到flag : flag{sssn-trtk-tcea-akJr}
**  
**
**MISC**
* * *
**一维码 100**
给了一个条形码文件，用扫码工具扫一下得到 keyword:hydan
一看这个条形码文件巨大，有500多K，肯定有诈，用stegslove打开
选中最低位，在lsb下有ELF文件头，果断保存了这个bin文件，逆向分析了一波，，什么都没有。
这个文件是就是一个tar工具。
然后想到是使用hydan，百度了一下hydan，第一条就是。
**乾坤 125**
一个流量包文件，直接丢进wireshark分析一波，发现大多是http协议的流量，在 "文件 -> 导出对象"
选择HTTP，查看其传输内容，发现有两个通过邮箱传输的压缩文件。
点进去查看下，发现是文件名都为flag.zip，但是大小不同的文件。把他们都解压一遍，得到“encode.py”、“flag.exe”两个文件，用winhex查看flag.exe，在其末尾发现编码字符，接下来就是写出对应的解码脚本。脚本如下：
    python
    from base64 import b64decode
    def decode(a):
        a = list(a)