E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
0.67
0.51
0.38
1.00
0.78
0.47
0.99
0.90
0.87
0.66
0.99
0.99
0.98
0.79
0.72
0.22
0.18
0.10
0.37
0.83
0.97
0.07
0.99
0.14
0.12
0.18
0.95
0.86
0.60
1.00
1.00
0.99
0.98
0.99
1.00
1.00
0.99
1.00
0.99
1.00
1.00
0.68
0.59
0.02
0.20
1.00
1.00
0.06
1.00
0.10
0.49
0.50
0.00
0.01
0.01
0.02
0.04
0.00
0.00
0.00
0.00
0.01
0.00
0.03
0.00
0.00
0.08
0.01
0.00
0.00
0.03
0.02
0.06
0.01
0.01
0.01
0.01
0.01
0.00
0.00
0.00
0.01
0.02
0.00
0.00
0.00
0.01
0.00
0.00
0.02
0.00
0.01
0.10
0.01
0.02
0.00
0.00
0.00
0.01
0.01
0.01
0.00
0.00
0.00
Table 3: True and false positive rates for 10 and 40
minute probes of both wired and wireless traces. The
true positive rate of a movie M is the rate at which an
n-minute query of that movie is correctly identiﬁed as
movie M . The false positive rate of a movie M is the
rate at which an n-minute query of some other movie
M 0 6= M is incorrectly identiﬁed as M .
USENIX Association
16th USENIX Security Symposium
61
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Figure 6: Accuracy per movie for 40 minute query
traces; k = 1 through k = 5.
2.4 Limitations, Implications, and Chal-
lenges
While our experiments were conducted in a laboratory
setting, they do reﬂect some possible conﬁgurations that
one might encounter in a future home equipped with
many wireless multimedia devices. The implications of
our results are, therefore, that an adversary in close prox-
imity to a users’ home might be able to infer informa-
tion about what videos a user is watching. This adver-
sary might be a nosy neighbor. Or the adversary might
be someone sitting outside in a van, looking to collect
forensics evidence about those viewing “illegal” (e.g.,
censored or pirated) content. Moreover, a content pro-
ducer (such as the creator of a movie) could intention-
ally construct its movies to have stronger, more distinc-
tive ﬁngerprints. This situation would seem to violate
the user’s perception of privacy within their own home,
especially given the Slingbox Pro’s use of encryption.
More broadly, our Slingbox results provide further ev-
idence that encryption alone cannot fully conceal the
contents of encrypted data. Other results show that one
can infer the origins of encrypted web trafﬁc or infer
application protocol behaviors from encrypted data [30,
45]. Concurrent with this work, Wright et al. show how
variable bitrate encodings can reveal the language spo-
ken through an encrypted VoIP connection [46]. Pro-
tecting against such information leakage vectors for all
possible applications seems to be a fundamental chal-
lenge. Indeed, it may be difﬁcult to simultaneously pre-
serve desirable properties like low-latency and low band-
width consumption while also allowing for applications
with bursty or otherwise data-dependent communication
properties. As a concrete example, while it may be possi-
ble to signiﬁcantly raise the bar against information leak-
age through the Slingbox by having the Slingbox push
data at a constant rate while a user is watching a movie,
a passive eavesdropper may still be able to learn when a
user watches movies, and for how long. The challenge,
therefore, is to ﬁrst determine the possible information
leakage vectors, understand their implications, and de-
velop technical means for mitigating them.
3 The Nike+iPod Sport Kit: Devices that
Reveal Your Presence
The Nike+iPod Sport Kit foreshadows the types of
application-speciﬁc UbiComp devices that we might
soon ﬁnd ourselves wearing as part of our daily routine.
Indeed, based on publicly available information about
the intended usage of the Nike+iPod Sport Kit, as well
as our own personal observations, we expect that many
Nike+iPod users will always leave their Nike+iPod sen-
sors turned on and in their shoes.
We describe here the steps we took to discover the
Nike+iPod protocol; our goal was to assess whether the
Nike+iPod Sport Kit provides protection mechanisms
against an adversary who wishes to track users’ loca-
tions. Having uncovered no such protection mechanisms,
we then describe our subsequent steps to gauge how easy
and cheap it might be for an adversary to implement our
attacks. Finally we consider ﬁxes to the Nike+iPod pro-
tocol as well as some broader research challenges that
our results raise.
3.1 Nike+iPod Description
The Nike+iPod Sport Kit allows runners and walkers to
hear real time workout progress reports on their iPod
Nanos. A typical user would purchase an iPod Nano,
a Nike+iPod Sport Kit, and either a pair of Nike+ shoes
or a special pouch to attach to non-Nike+ shoes. The
kit consists of a receiver and a sensor. Users place the
sensor in their left Nike+ shoe and attach the receiver
to their iPod Nano as shown in Figure 2. The sensor is
a 3.5cm x 2.5cm x 0.75cm plastic encased device, and
the receiver is a 2.5cm x 2cm x 0.5cm plastic encased
device. When a person runs or walks the sensor begins
to broadcasts sensor data via a radio transmitter whether
or not an iPod Nano is present. When the person stops
running or walking for ten seconds, the sensor goes to
sleep. When the iPod Nano is in workout mode and the
receiver’s radio receives sensor data from the sensor, the
receiver will relay (a function of) that data to the iPod
Nano, which will then give audio feedback (via the iPod
headphones) to the person about his or her workout. As
of September 2006, Apple has sold more than 450,000
of the $29 (USD) Nike+iPod Sport Kits [1].
62
16th USENIX Security Symposium
USENIX Association
3.2 Discovering the Nike+iPod Protocol
Initial Analysis. The ﬁrst step was to learn how the
Nike+iPod sensor communicates with the receiver. Ac-
cording to the Nike+iPod documentation, a sensor and
receiver need to be linked together before use; this link-
ing process involves user participation. Once linked, the
receiver will only report data from that speciﬁc sensor,
eliminating the readings from other nearby sensors. The
receiver can also remember the last sensor to which it
was linked so that users do not need to perform the link-
ing step every time they turn on their iPods. The receiver
can also later be linked to a different sensor (for a re-
placement sensor or different user), but under the stan-
dard user interface the receiver can only be linked to one
sensor at any given time.
We observed, however, that a single sensor could be
linked to two receivers simultaneously, meaning that two
people could use their iPod Nanos and the standard user
interface to read the data from a single Nike+iPod sen-
sor at the same time. Further investigation revealed that
the sensor was a transmitter only, meaning that it was
incapable of knowing what iPod or receiver it was as-
sociated with. This observation provides the underlying
foundation for our results since it concretely shows that
a Nike+iPod Sport Kit does not enforce a strong, exclu-
sive, one-to-one binding between a sensor and a receiver.
Having made this observation, we then commenced to
uncover more details about the Nike+iPod protocol.
The Hardware, Serial Communications, and Unique
Identiﬁers. The Nike+iPod Sport Kit receiver commu-
nicates with the iPod Nano through the standard iPod
connector. Examining which pins are present on the re-
ceiver’s connector and comparing those pins with online
third-party pin documentation [24], we determined that
communication was most likely being done over a serial
connection.
Opening the white plastic case of the receiver reveals
a component board and the pin connections to the iPod
connector. There are ten pins in use; three of these pins
are used in serial communication: ground, iPod transmit,
and iPod receive. We veriﬁed that digital data was being
sent across this serial connection using an oscilloscope
and soldered wires connecting them to the serial port of
our computer. With the receiver connected to the iPod
we turned on the iPod and observed data sent in both
directions over the serial connection.
As noted above, before the receiver can be used with a
new sensor, the sensor must be linked with the receiver.
This is initiated by the user through menus in the iPod
interface. The user is asked to walk around so that the
sensor can be detected by the receiver. When the link
process is started, the iPod sends some data to the re-
ceiver. Then, the receiver begins sending data back to
the iPod until the new sensor is discovered and linked by
the receiver. Finally, the iPod sends some more data back
to the receiver.
After collecting and comparing several traces of the
link process with several different sensors we noticed
that linking seemed to complete when the third occur-
rence of a certain packet came from the receiver. These
packets’ payload started with the same four bytes; how-
ever, the next four bytes were different depending on
which sensor we used. In all our experiments these four
bytes appear to be consistent and unique for a single sen-
sor, and therefore we refer to these four bytes as the sen-
sor’s unique identiﬁer or UID. As further corroboration
for the uniqueness of these UIDs, we ﬁnd that we can
use the iPod Nano as an oracle for translating between
the UIDs and the Nike+iPod sensor’s serial number as it
appears on the back of the sensor; we omit details but
instead refer the reader to Figure 7 for a sketch of how
one might use an iPod Nano as a UID to serial number
oracle. As suggested above, the Nike+iPod Sport Kit ap-
pears to use these UIDs for addressing purposes — after
linking, a receiver will only report packets containing the
speciﬁed UID.
Automatically Discovering UIDs. Our next step was
to use the Nike+iPod receiver to listen for sensor UIDs
in an automated fashion without the iPod Nano. To do
this we modiﬁed an iPod female connector by soldering
wires from the serial pins on the iPod connector to our
adapter, adjusted the voltage accordingly, and attached
3.3V power to the power pin. We then plugged an un-
modiﬁed Nike+iPod receiver into our female connector
and replayed the data that we saw coming from the iPod
when the iPod is turned on and then when the iPod en-
ters link mode. This process caused the receiver to start
sending packets over the serial connection to our com-
puter with the identiﬁers of the broadcasting sensors in
range. However, because our computer never responds
to the receiver’s packets, the link process never ends and
the receiver continues to send to our computer the iden-
tiﬁers of transmitting sensors until power is removed.
Implications. Our observations here immediately imply
that the Nike+iPod Sport Kit may leak private informa-
tion about a user’s location. Namely, as is well known
in the context of other devices (like RFIDs and discover-
able bluetooth devices [26, 27, 44]), if a wireless devices
broadcasts a persistent globally unique identiﬁer, an at-
tacker with multiple wireless sniffers can correlate the