EventID to define the low-level. This situation can be important when the EventID
doesn't match any value in the QID map. When the EventID doesn't match any
value in the QID map, QRadar can use the category and other keys to further
determine the general nature of the event. This "fallback" prevents events from
being identified as unknown and QRadar can categorize the events based on the
known information from the key attribute fields of the event payload, for example,
LEEF:1.0|Microsoft|Endpoint|2015|
Conficker_worm|cat=Detected
devTime Date Yes The raw event date and time that is generated by your appliance or application that
provides the LEEF event.
QRadar uses the devTime key, along with devTimeFormat to identify and
properly format the event time from your appliance or application.
If the devTime value is an epoch value of 10 or 13 digits, a devTimeFormat string
is not required. Otherwise, the devTime and devTimeFormat keys must be used
together to ensure that the time of the event is accurately parsed by QRadar.
When present in the event payload, devTime is used to identify the event time,
even when the syslog header contains a date and time stamp. The syslog header
date and time stamp is a fallback identifier, but devTime is the preferred method
for event time identification.
4 IBM QRadar : Log Event Extended Format (LEEF)
Table 3. Pre-defined event attributes (continued)
Key Value type Normalized event Description
field? Yes or No
devTimeFormat String No Applies formatting to the raw date and time of the devTime key.
The devTimeFormat key is required if your event log contains devTime. For more
information, see “Custom event date format” on page 9.
proto Integer or Yes Identifies the transport protocol of the event.
Keyword
For a list of keywords or integer values, see the Internet Assigned Numbers
Authority website,
http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xml
sev Integer Yes Indicates the severity of the event.
1 is the lowest event severity.
10 is the highest event severity.
Attribute Limits: 1-10
src IPv4 or Yes The IP address of the event source.
IPv6
Address
dst IPv4 or Yes The IP address of the event destination.
IPv6
Address
srcPort Integer Yes The source port of the event.
Attribute Limits: 0 - 65535
dstPort Integer Yes The destination port of the event.
Attribute Limits: 0 - 65535
srcPreNAT IPv4 or Yes The source IP address of the event message before Network Address Translation
IPv6 (NAT).
Address
dstPreNAT IPv4 or Yes The destination address for the event message before Network Address
IPv6 Translation (NAT).
Address
srcPostNAT IPv4 or Yes The source IP address of the message after Network Address Translation (NAT)
IPv6 occurred.
Address
dstPostNAT IPv4 or Yes The destination IP address of the message after Network Address Translation
IPv6 (NAT) occurred.
Address
usrName String Yes The user name that is associated with the event.
Attribute Limits: 255
srcMAC MAC Yes The MAC address of the event source in hexadecimal. The MAC address is made up
Address of six groups of two hexadecimal digits, which are colon-separated, for example,
11:2D:1a:2b:3c:4d
dstMAC MAC Yes The MAC address of the event destination in hexadecimal. The MAC address is
Address composed of six groups of two hexadecimal digits, which are colon-separated, for
example,
11:2D:1a:2b:3c:4d
srcPreNATPort Integer Yes The port number of the event source before Network Address Translation (NAT).
Attribute Limits: 0 - 65535
dstPreNATPort Integer Yes The port number of the event destination before Network Address Translation
(NAT).
Attribute Limits: 0 - 65535
srcPostNATPort Integer Yes The port number of the event source after Network Address Translation (NAT).
Attribute Limits: 0 - 65535
dstPostNATPort Integer Yes The port number of the event destination after Network Address Translation (NAT).
Attribute Limits: 0 - 65535
Chapter 1. LEEF overview 5
Table 3. Pre-defined event attributes (continued)
Key Value type Normalized event Description
field? Yes or No
identSrc IPv4 or Yes Identity source represents an extra IPv4 or IPv6 address that can connect an event
IPv6 with a true user identify or true computer identity.
Address
Example 1: Connecting a person to a network identity.
User X logs in from their notebook and then connects to a shared system on the
network. When their activity generates an event, then the identSrc in the payload
can be used to include more IP address information. QRadar uses the identSrc
information in the event along with the payload information, such as username, to
identify that user X is bob.smith.
The following identity keys depend on identSrcs presence in the event payload:
identHostName
identNetBios
identGrpName
identMAC
identHostName String Key Host name information that is associated with the identSrc to further identify the
true host name that is tied to an event.
The identHostName parameter is usable by QRadar only when your device
provides both the identSrc key and identHostName together in an event
payload.
Attribute Limits: 255
identNetBios String Yes NetBIOS name that is associated with the identSrc to further identify the identity
event with NetBIOS name resolution.
The identNetBios parameter is usable by QRadar only when your device
provides both the identSrc key and identNetBios together in an event
payload.
Attribute Limits: 255
identGrpName String Yes Group name that is associated with the identSrc to further identify the identity
event with Group name resolution.
The identGrpName parameter is usable by QRadar only when your device
provides both the identSrc key and identGrpName together in an event
payload.
Attribute Limits: 255
identMAC MAC Yes Reserved for future use in the LEEF format.
Address
vSrc IPv4 or No The IP address of the virtual event source.
IPv6
Address
vSrcName String No The name of the virtual event source.
Attribute Limits: 255
accountName String No The account name that is associated with the event.
Attribute Limits: 255
srcBytes Integer No Indicates the byte count from the event source.
dstBytes Integer No Indicates the byte count to the event destination.
srcPackets Integer No Indicates the packet count from the event source.
dstPackets Integer No Indicates the packet count to the event destination.
totalPackets Integer No Indicates the total number of packets that are transmitted between the source and
destination.
role String No The type of role that is associated with the user account that created the event,
for example, Administrator, User, Domain Admin.
realm String No The realm that is associated with the user account. Depending on your device, can
be a general grouping or based on region, for example, accounting, remote offices.
policy String No A policy that is associated with the user account. This policy is typically the
security policy or group policy that is tied to the user account.
6 IBM QRadar : Log Event Extended Format (LEEF)
Table 3. Pre-defined event attributes (continued)
Key Value type Normalized event Description
field? Yes or No
resource String No A resource that is associated with the user account. This resource is typically
the computer name.
url String No URL information that is included with the event.
groupID String No The groupID that is associated with the user account.
domain String No The domain that is associated with the user account.
isLoginEvent Boolean No Identifies if the event is related to a user login, for example,
string
isLoginEvent=true
isLoginEvent=false
This key is reserved in the LEEF specification, but not implemented in QRadar.
Attribute Limits: true or false
isLogoutEvent Boolean No Identifies if the event is related to a user logout, for example,
string
isLogoutEvent=true
isLogoutEvent=false
This key is reserved in the LEEF specification, but not implemented in QRadar.
Attribute Limits: true or false
identSecondlp IPv4 or No Identity second IP address represents an IPv4 or IPv6 address that is used to
IPv6 associate a device event that includes a secondary IP address. Secondary IP
Address addresses can be in events by routers, switches, or virtual LAN (VLAN) device
events.
This key is reserved in the LEEF specification, but not implemented in QRadar.
calLanguage String No Identifies the language of the device time (devTime) key to allow translation
Attribute Limits: 2 and to ensure that QRadar correctly parses the date and time of events that are
generated in translated languages.
The calLanaguage field can include two alphanumeric characters to represent
the event language for the device time of your event. All calLanguage
alphanumeric characters follow the ISO 639-1 format, for example,
calLanguage=fr devTime=avril 09 2014 12:30:55
calLanguage=de devTime=Di 30 Jun 09 14:56:11
This key is reserved in the LEEF specification, but not implemented currently in
QRadar.
Attribute Limits: 2
calCountryOrRegion String No Extends the calLanguage key to provide more translation information that can
include the country or region for the event device time (devTime). The key
calCountryOrRegion must be used with the calLanguage key.
The calCountryOrRegion field can include two alphanumeric characters to
represent the event country or region for the device time of your event. All
calCountryOrRegion alphanumeric characters follow the ISO 3166 format, for
example,
calLanguage=de calCountryOrRegion=DE devTime=Di 09 Jun 2014
12:30:55
calLanguage=en calCountryOrRegion=US devTime=Tue 30 Jun 09
This key is reserved in the LEEF specification, but not implemented in QRadar.
Attribute Limits: 2
Note: Non-normalized predefined LEEF event attributes are not automatically parsed for all log source
types. However, QRadar provides custom properties (either built-in or from the IBM Security App
Exchange) for some of these keys. You can configure custom properties for non-normalized keys to parse
by using Regex. To configure a key to parse, the input is key=([^\t]+).
The following examples show Regex inputs for non-normalized predefined keys, where the delimiter that
follows the caret (^) is a horizontal tab in LEEF V1.0:
• The input for vSrc is vSrc=([^\t]+).
• The input for vSrcName is vSrcName=([^\t]+).
Chapter 1. LEEF overview 7
• The input for accountName is accountName=([^\t]+).
The following examples show Regex inputs for non-normalized predefined keys, where the delimiter that
follows the caret (^) is a customized separator character in LEEF V2.0:
• If you use # as the delimiter, the input for vSrc is vSrc=([^#]+).
• If you use | as the delimiter, the input for vSrc is vSrc=([^|]+).
QRadar V7.3.2 or later includes property auto-detection for custom properties of both predefined and
custom LEEF event attributes. Property auto-detection makes it easier to configure custom properties,
without the use of Regex.
Custom event keys
Vendors and partners can define their own custom event keys and include them in the payload of the
LEEF format.
Use custom key value-pair attributes in an event payload when there is no default key to represent
information about an event for your appliance. Create custom event attributes only when there is no
acceptable mapping to a predefined event attribute. For example, if your appliance monitors access, you
can require the file name that is accessed by a user where no file name attribute exists in LEEF by default.
Note: Event attribute keys and values can appear one time only in each payload. Using a key-value pair
twice in the same payload can cause IBM Security QRadar to ignore the value of the duplicate key.
Custom event keys are non-normalized, which means that any specialized key value pairs you include in
your LEEF event are not displayed by default on the Log Activity tab of QRadar. To view custom attributes
and non-normalized events on the Log Activity tab of QRadar, you must create a custom event property.
Non-normalized event data is still part of your LEEF event, is searchable in QRadar, and is viewable in
the event payload. For more information about creating a custom event property, see the IBM QRadar
Administration Guide.
Best practices Guidelines for LEEF events
LEEF is flexible and can create custom key value pairs for events, but you must follow some best practices
to avoid potential parsing issues.
Items that are marked Allowed can be included in a key or value, and is not in violation of LEEF but these
items are not good practice when you create custom event keys.
The following list contains custom key and value general guidelines:
• Use alphanumeric (A-Z, a-z, and 0-9) characters, but avoid tab, pipe, or caret delimiters in your event
payload keys and values (key=value).
– Correct - usrName=Joe.Smith
– Incorrect - usrName=JoeSmith
• Contain a single word for the key attribute (key=value).
– Correct - file name=pic07720.gif
– Allowed - file name=pic07720.gif
– Allowed - file name =pic07720.gif
• A user-defined key cannot use the same name as a LEEF predefined key. For more information, see
“Predefined LEEF event attributes” on page 4.
• Key values must be human readable, if possible, to help you to investigate event payloads.
– Correct - deviceProcessHash=value
– Correct - malwarename=value
– Allowed - EBFDFBE14D4=value
8 IBM QRadar : Log Event Extended Format (LEEF)
Custom event date format
To create a customized event format, your device must supply the raw date format by using the devTime
event attribute in the payload of the event.
Use the devTimeformat to format the devTime event attribute to display the event in IBM Security
QRadar. The suggested devTimeFormat patterns are listed in the following table:
Table 4. devTimeFormat suggested patterns
devTimeFormat Pattern Result
devTimeFormat=MMM dd yyyy HH:mm:ss Jun 06 2015 16:07:36
devTimeFormat=MMM dd yyyy HH:mm:ss.SSS Jun 06 2015 16:07:36.300
devTimeFormat=MMM dd yyyy HH:mm:ss.SSS z Jun 06 2015 02:07:36.300 GMT
For more information about specifying a date format, see the SimpleDateFormat information on the Java
Web Page (http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html).
Chapter 1. LEEF overview 9
10 IBM QRadar : Log Event Extended Format (LEEF)
Notices
This information was developed for products and services offered in the U.S.A.
IBM may not offer the products, services, or features discussed in this document in other countries.
Consult your local IBM representative for information on the products and services currently available in
your area. Any reference to an IBM product, program, or service is not intended to state or imply that
only that IBM product, program, or service may be used. Any functionally equivalent product, program, or
service that does not infringe any IBM intellectual property right may be used instead. However, it is the
user's responsibility to evaluate and verify the operation of any non-IBM product, program, or service.
IBM may have patents or pending patent applications covering subject matter described in this
document. The furnishing of this document does not grant you any license to these patents. You can