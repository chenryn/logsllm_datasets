1、如果开启了autovacuum，当垃圾记录数大于 ```autovacuum_vacuum_threshold + autovacuum_vacuum_scale_factor*reltuples``` ，autovacuum launcher触发普通的vacuum。      
当表的年龄大于vacuum_freeze_table_age，则自动转换成vacuum freeze。      
2、如果开启了autovacuum，当新增记录数大于```autovacuum_analyze_threshold + autovacuum_analyze_scale_factor*reltuples```，autovacuum launcher触发analyze。      
3、即使没有开启autovacuum，当表的年龄大于autovacuum_freeze_max_age，也会强制触发vacuum freeze。      
### 手功执行vacuum      
```      
vacuum       
vacuum analyze      
analyze    
vacuum freeze      
```      
1、其中，手工执行VACUUM时，并且表的年龄大于vacuum_freeze_table_age，则普通vacuum即使没有带freeze选项，也会自动转换成vacuum freeze。      
2、手工执行vacuum freeze时，或者自动触发vacuum freeze时，哪些tuple需要freeze，取决于如下：当tuple的年龄大于vacuum_freeze_min_age，则该TUPLE设置为frozen。      
3、一旦VACUUM带了freeze选项，就需要扫描全表（当然会跳过VM中已经标记为FROZEN的BLOCK，内核的优化手段）。      
其他:  
哪些参数可能导致膨胀？除了关闭垃圾回收，delay大（解决办法不要DELAY，或者LIMIT设大，DELAY设小），还有standby feedback(解决办法关闭), 长事务(解决方法，快照过旧，idle in transaction session timeout), 主动延迟垃圾回收(解决办法关闭)，大表（vacuum目前单表不能并行，解决办法分区），autovacuum work mem太小（如果HOLD不下所有DEAD TUPLE的CTID则会导致INDEX需要多次扫描，解决办法设大），唤醒频率太低（解决办法设小naptime，但是不建议太小），autovacuum worker太少（解决办法加大）.  
## 参考      
[《PostgreSQL物理"备库"的哪些操作或配置，可能影响"主库"的性能、垃圾回收、IO波动》](../201704/20170410_03.md)        
[《PostgreSQL垃圾回收代码分析 - why postgresql cann't reclaim tuple is HEAPTUPLE_RECENTLY_DEAD》](../201505/20150503_01.md)        
src/include/access/htup_details.h      
https://www.postgresql.org/docs/devel/sql-createtable.html#SQL-CREATETABLE-STORAGE-PARAMETERS      
https://www.postgresql.org/docs/devel/runtime-config-client.html#RUNTIME-CONFIG-CLIENT-STATEMENT      
https://www.postgresql.org/docs/devel/runtime-config-autovacuum.html      
https://www.postgresql.org/docs/devel/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-VACUUM-COST      
[《PostgreSQL 12 preview - vacuum 新增开关: index_cleanup , 是否同时回收索引》](../201905/20190503_01.md)    
[《PostgreSQL 12 preview - heap table末端垃圾page是否在vacuum时被回收可控 - vacuum_truncate》](../201904/20190409_05.md)    
[《PostgreSQL 12 preview - Add progress reporting for CLUSTER and VACUUM FULL》](../201904/20190405_07.md)    
[《PostgreSQL 12 preview - 调大默认autovacuum sleep间隔, 加速vacuum》](../201904/20190405_01.md)    
[《PostgreSQL 12 preview - vacuum analyze skip_locked》](../201903/20190331_10.md)    
[《PostgreSQL 12 preview - Delete empty pages during GiST VACUUM - 降低GiST索引膨胀概率》](../201903/20190330_08.md)    
[《PostgreSQL 12 preview - 支持列出 vacuum full, cluster 过程详情  pg_stat_progress_cluster》](../201903/20190330_06.md)    
[《PostgreSQL 10 CLogControlLock 等待事件分析与优化 - hint bit, freeze, autovacuum, 风暴》](../201903/20190319_02.md)    
[《PostgreSQL 垃圾回收参数优化之 - maintenance_work_mem , autovacuum_work_mem》](../201902/20190226_01.md)    
[《PostgreSQL 11 内核优化 - 降低vacuum cleanup阶段index scan概率 ( vacuum_cleanup_index_scale_factor , skip index vacuum cleanup stage)》](../201902/20190201_03.md)    
[《Greenplum 垃圾回收、收集统计信息调度 - vacuum analyze 所有表 - 注意锁问题》](../201811/20181112_01.md)    
[《PostgreSQL vacuum 的页内tuple move收缩空间》](../201806/20180629_01.md)    
[《PostgreSQL 并行vacuum patch - 暨为什么需要并行vacuum或分区表》](../201803/20180301_01.md)    
[《Greenplum vacuum ao表和heap表的区别》](../201709/20170913_03.md)    
[《影响或控制PostgreSQL垃圾回收的参数或因素》](../201707/20170709_03.md)    
[《PostgreSQL 10.0 preview 功能增强 - SQL执行剩余时间 - 垃圾回收过程可视pg_stat_progress_vacuum》](../201704/20170421_06.md)    
[《PostgreSQL物理"备库"的哪些操作或配置，可能影响"主库"的性能、垃圾回收、IO波动》](../201704/20170410_03.md)    
[《PostgreSQL 10.0 preview 性能增强 - GIN索引vacuum锁降低》](../201703/20170329_02.md)    
[《PostgreSQL 10.0 preview 多核并行增强 - 索引扫描、子查询、VACUUM、fdw/csp钩子》](../201703/20170313_08.md)    
[《PostgreSQL 9.6 vacuum freeze大幅性能提升 代码浅析》](../201610/20161002_03.md)    
[《PostgreSQL 老湿机图解平安科技遇到的垃圾回收"坑"》](../201607/20160715_01.md)    
[《PostgreSQL 垃圾回收代码分析 - why postgresql cann't reclaim tuple is HEAPTUPLE_RECENTLY_DEAD》](../201505/20150503_01.md)    
[《PostgreSQL 垃圾回收原理以及如何预防膨胀 - How to prevent object bloat in PostgreSQL》](../201504/20150429_02.md)    
[《PostgreSQL nagios monitor script (archive, vacuum, age, conn, rollback, standby, lock, xact, seq, index...)》](../201402/20140227_01.md)    
[《PostgreSQL Systemtap example : autovacuum_naptime & databases in cluster》](../201310/20131010_02.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")