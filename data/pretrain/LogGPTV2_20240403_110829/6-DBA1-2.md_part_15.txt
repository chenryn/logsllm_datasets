+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
2 rows in set (0.00 sec)
列出stu_info表中年龄超过21岁的学员记录：
mysql\> SELECT \* FROM stu_info WHERE age\>21;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
2 rows in set (0.00 sec)
列出stu_info表中年龄大于或等于21岁的学员记录：
mysql\> SELECT \* FROM stu_info WHERE age\>=21;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
\| Jerry \| boy \| 27 \|
\| Mike \| boy \| 21 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
4 rows in set (0.00 sec)
列出stu_info表中年龄在20岁和24岁之间的学员记录：
mysql\> SELECT \* FROM stu_info WHERE age BETWEEN 20 and 24;
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
\| Lily \| girl \| 20 \|
\| Mike \| boy \| 21 \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
4 rows in set (0.00 sec)
3）多个条件的组合
列出stu_info表中年龄小于23岁的女学员记录：
mysql\> SELECT \* FROM stu_info WHERE age \ SELECT \* FROM stu_info WHERE age \ SELECT \* FROM stu_info WHERE name IN
-\> (\'Jim\',\'Tom\',\'Mickey\',\'Minnie\');
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
2 rows in set (0.00 sec)
4）使用SELECT做数学计算
计算1234与5678的和：
mysql\> SELECT 1234+5678;
+\-\-\-\-\-\-\-\-\-\--+
\| 1234+5678 \|
+\-\-\-\-\-\-\-\-\-\--+
\| 6912 \|
+\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
计算1234与5678的乘积：
mysql\> SELECT 1234\*5678;
+\-\-\-\-\-\-\-\-\-\--+
\| 1234\*5678 \|
+\-\-\-\-\-\-\-\-\-\--+
\| 7006652 \|
+\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
计算1.23456789除以3的结果：
mysql\> SELECT 1.23456789/3;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 1.23456789/3 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 0.411522630000 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
输出stu_info表各学员的姓名、15年后的年龄：
mysql\> SELECT name,age+15 FROM stu_info;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| name \| age+15 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| Jim \| 39 \|
\| Tom \| 36 \|
\| Lily \| 35 \|
\| Jerry \| 42 \|
\| Mike \| 36 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+
5 rows in set (0.00 sec)
5）使用模糊查询，LIKE引领
以下划线 \_ 匹配单个字符，% 可匹配任意多个字符。
列出stu_info表中姓名以"J"开头的学员记录：
mysql\> SELECT \* FROM stu_info WHERE name LIKE \'J%\';
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
2 rows in set (0.00 sec)
列出stu_info表中姓名以"J"开头且只有3个字母的学员记录：
mysql\> SELECT \* FROM stu_info WHERE name LIKE \'J\_\_\';
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
1 row in set (0.00 sec)
6）使用正则表达式，REGEXP引领
列出stu_info表中姓名以"J"开头且以"y"结尾的学员记录：
mysql\> SELECT \* FROM stu_info WHERE name REGEXP \'\^J.\*y\$\';
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
1 row in set (0.00 sec)
效果等同于：
mysql\> SELECT \* FROM stu_info WHERE name Like \'J%y\';
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
1 row in set (0.00 sec)
列出stu_info表中姓名以"J"开头或者以"y"结尾的学员记录：
mysql\> SELECT \* FROM stu_info WHERE name REGEXP \'\^J\|y\$\';
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Lily \| girl \| 20 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
3 rows in set (0.00 sec)
效果等同于：
mysql\> SELECT \* FROM stu_info WHERE name Like \'J%\' OR name Like
\'%y\';
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Lily \| girl \| 20 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
3 rows in set (0.00 sec)
7）按指定的字段排序，ORDER BY
列出stu_info表的所有记录，按年龄排序：
mysql\> SELECT \* FROM stu_info GROUP BY age;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Lily \| girl \| 20 \|
\| Tom \| boy \| 21 \|
\| Jim \| girl \| 24 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
4 rows in set (0.00 sec)
因默认为升序（Ascend）排列，所以上述操作等效于：
mysql\> SELECT \* FROM stu_info GROUP BY age ASC;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Lily \| girl \| 20 \|
\| Tom \| boy \| 21 \|
\| Jim \| girl \| 24 \|
\| Jerry \| boy \| 27 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
4 rows in set (0.00 sec)
若要按降序（Descend）排列，则将ASC改为DESC即可：
mysql\> SELECT \* FROM stu_info GROUP BY age DESC;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jerry \| boy \| 27 \|
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
\| Lily \| girl \| 20 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
4 rows in set (0.00 sec)
8）限制查询结果的输出条数，LIMIT
查询stu_info表的所有记录，只列出前3条：
mysql\> SELECT \* FROM stu_info LIMIT 3;
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
\| Lily \| girl \| 20 \|
+\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
3 rows in set (0.00 sec)
列出stu_info表中年龄最大的3条学员记录：
mysql\> SELECT \* FROM stu_info GROUP BY age DESC LIMIT 3;
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| name \| gender \| age \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
\| Jerry \| boy \| 27 \|
\| Jim \| girl \| 24 \|
\| Tom \| boy \| 21 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\--+\-\-\-\--+
3 rows in set (0.00 sec)
9）分组查询结果，GROUP BY
针对stu_info表，按性别分组，分别统计出男、女学员的人数：
mysql\> SELECT gender,count(gender) FROM stu_info GROUP BY gender;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| gender \| count(gender) \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| boy \| 3 \|
\| girl \| 2 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
2 rows in set (0.00 sec)
列出查询字段时，可以通过AS关键字来指定显示别名，比如上述操作可改为：
mysql\> SELECT gender AS \'性别\',count(gender) AS \'人数\'
-\> FROM stu_info GROUP BY gender;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| 性别 \| 人数 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| boy \| 3 \|
\| girl \| 2 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
2 rows in set (0.00 sec)
# NSD DBA1 DAY04
![](media/image27.png){width="5.261111111111111in"
height="2.9868055555555557in"}
## 一 复制表
复制表作用:备份表与快速建表
## 1.1:将源表xxx复制为新表yyy
命令格式:crate tabe yyy select \* from xxx
例如:将db3库的user表,复制到db4库userbak表
mysql\> create table userbak select \* from db3.user;
## 1.2:将指定查询结果复制为新表zzz
例如:
mysql\> create table user3 select name,uid,shell from db3.user order by
uid desc limit 5;
mysql\> select \* from user3;
## 1.3:复制源表xxx的结构到新表vvv
例如:将db3库的user表结构,复制到db4库的user1表,主键/索引等无法复制过来