laying it after-the-fact. To this end, we extend a prior generative
model [29], using attribute-augmented models for link generation
and addition , which are key building blocks for such generative
models. As we will show, this provides more realistic synthetic
SAN that closely matches the Google+ SAN.
5.1 Building Block 1:
Attribute-Augmented Preferential Attach-
ment
Leskovec et al. showed that the Preferential Attachment (PA) [5]
is a suitable choice for creating edges [29]. The key idea in PA is
that a new node u is likely to connect to an existing node v with
a probability proportional to v’s degree. As we saw earlier, users
who share attributes are also more likely to be connected. Thus, we
consider two ways to augment the PA model:
• Power Attribute Preferential Attachment (PAPA):
f (u, v) ∝ di(v)α(1 + a(u, v)β)
• Linear Attribute Preferential Attachment (LAPA):
f (u, v) ∝ di(v)α(1 + β · a(u, v))
lP A
Here, f (u, v) is the probability with which social node u adds
a link to social node v, di(v) is the indegree of v and a(u, v) is
the number of common attributes that social nodes u and v share.3
Notice that when α = β = 0, both reduce to a uniform distribution
(i.e., v is sampled uniformly at random) and when α=1,β=0 both
reduce to the PA model.
The relative improvement of a model with parameter α, β over
the PA model is deﬁned as lP A−l(α,β)
, where l denote the log-
likelihood of the model with respect to the empirically observed
Google+ SAN. Figure 15 shows the relative improvements of these
models over the PA model for varying values of α, β. First, LAPA
models perform better than PAPA models, which indicates that at-
tribute likely inﬂuence friend requests in a linear way. Second, the
PA model (α =1, β = 0) is 7.9% better than a uniform random
model (α =0, β = 0). A LAPA model with α =1 and β = 200
achieves a further 6.1% improvement over the PA model. Third,
α = 1 achieves the best loglikelihood for any given β, which in-
dicates that social degree has a linear effect on friend requests. In
3In a more general setting, we can also weight attribute types dif-
ferently; e.g., Employer is stronger than City.
0.00.51.01.52.0α−10−505Percentrelativeimprovementβ=0β=2β=4β=6β=80.00.51.01.52.0α−10−505Percentrelativeimprovementβ=0β=10β=100β=200β=500138Our stochastic process models several key aspects of SAN evo-
lution: node joining, how nodes issue outgoing links and receive
incoming links, and how they link to attribute nodes. The key dif-
ferences from prior work [29] are the two building blocks we de-
scribed earlier: Linear Attribute Preferential Attachment (LAPA)
and Random-Random-SAN (RR-SAN) triangle-closing.
Here, nodes arrive at some pre-determined rate. On arrival, each
node picks an initial set of attributes and social neighbors (using the
LAPA model). After joining the network, each node subsequently
“sleeps” for some time, wakes up, and adds new links based on the
RR-SAN model. We describe the model formally in Algorithm 1
and discuss each step next. From the analysis below, we ﬁnd that
the key step for generating lognormal social outdegree distribution
is to make the lifetime of nodes follow a truncated normal distri-
bution.
Initialization: The SAN is initialized with a few social and at-
tribute nodes and links. We observed that the starting point has
no detectable inﬂuence when the number of initialization nodes is
small compared to the overall network. We currently use a com-
plete social-attribute network with 5 social nodes and 5 attribute
nodes.
Social node arrival: Social nodes arrive as predicted by a node
arrival function N (t), which could be estimated from real social
networks. In our simulations, we simply let N (t) = 1 modeling
each node arrival as a discrete time step.
Attribute degree: Each node picks some number of attributes sam-
pled from a lognormal distribution with mean µa and variance σ2
a.
Attribute linking: Each new social node vnew with na(vnew ) at-
tributes, we connect it to na(vnew ) attribute nodes with the stochas-
tic process deﬁned as follows: for each attribute, with probability p,
a new attribute node a is generated; otherwise an existing attribute
node a is chosen with probability proportional to its social degree.
First outgoing links: Each new node issues an outgoing link to a
social node according to the LAPA model.
Lifetime sampling: The lifetime l of vnew is sampled from a trun-
) for l ≥ 0.
cated normal distribution, i.e., p(l) ∝ exp(− (l−µl)2
(Prior models use an exponentially distributed lifetime value [29,
61].)
Sleep time sampling: Sleep time s of any node v with outdegree
do can be sampled from any distribution with mean ms/do. Our
model only depends on mean sleep time. The intuition of making
mean sleep time reversely proportional to outdegree is that a node
with larger outdegree has higher tendency to issue outgoing links.
(Prior models assume a power-law with cutoff distributed lifetime
value [29, 61].)
Outgoing linking. Each woken social node vwoken issues a new
outgoing link according to our RR-SAN triangle-closing model.
5.4 Theoretical Analysis
2σ2
l
By design, the attribute degree distribution of social nodes fol-
lows a lognormal distribution. Next, we show via analysis that the
outdegree of social nodes and the social degree of attribute nodes
follow a lognormal and power-law distribution respectively. For
brevity, we provide a high-level sketch of the proofs.
Let φ(x) and Φ(x) denote the probability density function and
cumulative density function of standard normal distribution. Let
γl = − µl
1−Φ(γ) and δ(γ) = g(γ)(g(γ) − γ).
, g(γ) = φ(γ)
σl
THEOREM 1. If the sleep time is sampled from some distribu-
tion with mean ms/do, then the social out degrees of SANs gen-
erated by our model follow a lognormal distribution with mean
(µl + σlg(γl))/ms and variance σ2
l (1 − δ(γl))/m2
s.
PROOF. For any social node v, assume its ﬁnal outdegree is Do,
then we have
where s(do) is the random sleep time whose mean is ms/do. Thus,
with mean-ﬁeld approximation, we obtain
D(cid:88)
do=1
ms
D(cid:88)
do=1
s(do) ≤ l,
D(cid:88)
do=1
≤ l.
1
do
≈ lnDo.
1
do
Moreover, according to Euler’s asymptotic analysis on harmonic
series, we have
That is, lnDo ≈ l/ms. Lifetime l is also a normal distribution
truncated for l ≥ 0, thus having mean µl + σlg(γl) and variance
l (1 − δ(γl)). Thus, lnDo follows a truncated normal distribution
σ2
l (1 −
with mean µo = (µl + σlg(γl))/ms and variance σ2
s. So Do follows a lognormal distribution with mean µo
δ(γl))/m2
and variance σ2
o.
o = σ2
Next, we derive the distribution of social degree of attribute nodes
using mean-ﬁeld rate equations [6].
THEOREM 2. The social degrees of attribute nodes in the SANs
generated by our model follow a power-law distribution with expo-
nent 2−p
1−p .
PROOF. Without loss of generality, we assume one attribute link
joins the SAN at each discrete time step. Let Di denote the social
degree of the attribute node i that joins the network at time ti. Ac-
cording to the stochastic process in our algorithm, we have
(1 − p)Di(cid:80)
i Di
dDi
dt
=
(1 − p)Di
t + m0
=
,where m0 is the initial number of attribute links. Solving this or-
dinary differential equation with initial condition Di = 1 at t = ti
gives us
Di = (
t + m0
ti + m0
)(1−p).
So the probability of Di < D is
P r(Di < D) = 1 − P r(ti + m0 ≤ (t + m0)D
− 1
1−p ).
According to our model, P r(ti) has a uniform distribution over the
set {1, 2,··· , t}. Thus we obtain
P r(Di < D) = 1 − (t + m0)D
t
1−p − m0
− 1
.
Then the distribution of Di can be calculated as
t + m0
t(1 − p)
dP r(Di ≤ D)
P r(D) =
dD
=
− 2−p
1−p .
D
As t → ∞, we obtain P r(D) ∝ D
1−p . So the social degrees
of attribute nodes follow a power-law distribution with exponent
2−p
1−p .
− 2−p
139(a) Social outdegree
(b) Social indegree
(c) Attribute degree of social nodes
(d) Social degree of attribute nodes
(e) Social outdegree
(f) Social indegree
(g) Attribute degree of social nodes
(h) Social degree of attribute nodes
Figure 16: Degree distributions of synthetically generated SAN using our model in (a)-(d) vs. Zhel shown in (e)-(h).
Mitzenmacher [40] did a comprehensive study on generative mod-
els (e.g., PA, multiplicative models, random monkey) for power-
law and lognormal distributions. In this work, we have proposed
two new generative models.
6. EVALUATION
In this section, we validate our SAN generative model. Because
the SAN area is still very nascent there are few standard models
of comparison. We pick the closest generative model by Zheleva
et al [61]. Note that their model is actually orthogonal to ours since
it’s modeling dynamic node attributes while ours is modeling static
node attributes. Furthermore, their original model generates undi-
rected social networks. In order to compare with our model and di-
rected Google+ SANs, we extend their model to generate directed
social networks5. We refer to the extended model as the Zhel model
throughout this section. We start with network metrics, including
single-node degree distribution, joint degree distribution and clus-
tering coefﬁcient. Then, following the spirit of [43], we also evalu-
ate our model using real application contexts.
For comparison, we use the Google+ snapshot crawled on July
15, 2011, which has roughly 10 million nodes and we believe it is
representative of Google+ SAN. Using this Google+ snapshot, we
run a guided greedy search to estimate appropriate parameters for
our model and Zhel to generate synthetic SAN that best match the
Google+.
6.1 Network Metrics
In this section, we qualitatively compare our model to the Zhel
model, and demonstrate that our model can generate synthetic SAN
that better reproduces various network metrics closer to Google+
SAN.
Degree distributions: We ﬁrst examine the degree distributions of
the synthetic SAN generated by our model and the Zhel model in
5Extending their model is straightfoward. For instance, when the
original model issues an undirected link, we change it to be a di-
rected outgoing link.
(a) JDD of attribute nodes
(b) Clustering coefﬁcient
(c) JDD of attribute nodes
(d) Clustering coefﬁcient
Figure 17: Joint degree and clustering coefﬁcient distributions of
our model (a)–(b) vs. Zhel in (c)–(d).
Figure 16. The most visually evident result looking at Figure 16a
and Figure 16b is that our model can generate synthetic networks
with social indegree and outdegree following lognormal distribu-
tions similar to the Google+ SAN that we saw in Figure 5. In con-
trast, Figure 16f and Figure 16e conﬁrm that the Zhel model gen-
erates indegree and outdegree following power-law distributions.
Similarly, comparing Figure 16c and 16g to Figure 10a, the at-
tribute degree of social nodes in our model follows the lognor-
mal distribution that matches that of the Google+ SAN, whereas
the Zhel model generates attribute degrees that follow a power-
law distribution. Finally, Figure 16d and 16h conﬁrm that both our
100101102103104Degree10−810−710−610−510−410−310−210−1100Probability100101102103104Degree10−810−710−610−510−410−310−210−1100Probability100101102103Degree10−810−710−610−510−410−310−210−1100Probability100101102103104Degree10−810−710−610−510−410−310−210−1100Probability100101102103104Degree10−810−710−610−510−410−310−210−1100Probability100101102103104Degree10−810−710−610−510−410−310−210−1100Probability100101102103104Degree10−710−610−510−410−310−210−1100Probability100101102103104Degree10−910−810−710−610−510−410−310−210−1100Probability100101102103104Degree100101knn100101102103104Degree10−510−410−310−210−1100Averageclusteringcoefﬁcientsocialattribute100101102103104Degree100101102103104105106knn100101102103104Degree10−210−1100Averageclusteringcoefﬁcientsocialattribute140(a) Social indegree w/o LAPA
(b) Clustering coefﬁcient w/o focal closure
(a) Sybil defense
(b) Anonymous communication
Figure 18: The effect of LAPA and focal closure.
model and Zhel generate social degrees of attribute nodes that fol-
low power-law distribution, which is again consistent with Google+
SAN from Figure 10b.
Joint degree distributions: The ability to mirror more ﬁne-grained