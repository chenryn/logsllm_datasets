scanners. Companies routinely scan and audit their applications, and
other bug bounty hunters often do the same, so this approach won't give
you good results.
初学者经常犯的另一个错误是依赖漏洞扫描器。公司定期扫描和审计他们的应用程序，其他漏洞赏金猎人通常也会这样做，因此这种方法不会给你带来好结果。
Also, avoid looking for only the obvious bug types. Simplistic bugs on
big targets have probably already been found. Many bug bounty programs
were private before companies opened them to the public. This means a
few experienced hackers will have already reported the easiest-to-find
bugs. For example, many hackers will likely have already tested for a
stored-XSS vulnerability on a forum's comment field.
此外，避免只寻找显而易见的漏洞类型。大型目标上的简单漏洞可能已经被发现了。许多赏金计划在公司向公众开放之前是私人的。这意味着一些经验丰富的黑客已经报告了最容易发现的漏洞。例如，许多黑客可能已经测试了论坛评论字段的存储XSS漏洞。
This isn't to say that you shouldn't look for low-hanging fruit at all.
Just don't get discouraged if you don't find anything that way. Instead,
strive to gain a deeper understanding of the application's underlying
architecture and logic. From there, you can develop a unique testing
methodology that will result in more unique and valuable bugs.
这并不是说你不应该寻找低 hanging
fruit。只是不要因此而感到沮丧。相反，努力获得对应用程序底层架构与逻辑的深入理解。从那里开始，你可以开发出独特的测试方法，从而得到更多独特且有价值的漏洞。
#### [ ]{#c02.xhtml#Page_26 .pagebreak title="26"} You Don't Get into Private Programs {#c02.xhtml#h3-123456c01-0015}
It becomes much easier to find bugs after you start hacking on private
programs. Many successful hackers say that most of their findings come
from private programs. Private programs are a lot less crowded than
public ones, so you'll have less competition, and less competition
usually means more easy finds and fewer duplicates.
开始黑客攻击私人计划后，发现漏洞变得更容易。许多成功的黑客表示，他们找到的大部分漏洞都来自私人计划。私人计划不像公共计划那样拥挤，因此您将有较少的竞争，而较少的竞争通常意味着更容易找到漏洞，减少了重复。
### Why Your Reports Get Dismissed {#c02.xhtml#h2-123456c01-0014}
As mentioned, three types of reports won't result in a bounty: N/As,
informatives, and duplicates. In this section, I'll talk about what you
can do to reduce these disappointments.
如上所述，三种类型的报告不会产生赏金：N/A、信息报告和重复报告。在本节中，我将谈论降低这些失望的方法。
Reducing the number of invalid reports benefits everyone. It will not
only save you time and effort, but also save the security team the staff
hours dedicated to processing these reports. Here are some reasons your
reports keep getting dismissed.
减少无效报告数量对所有人都有益，这不仅可以节省你的时间和精力，还可以为安全团队节省处理这些报告所需要的人力资源。以下是你的报告被驳回的原因：
#### You Don't Read the Bounty Policy {#c02.xhtml#h3-123456c01-0016}
One of the most common reasons reports get marked as N/A is that they're
out of scope. A program's policy page often has a section labeled
*Scope* that tells you which of the company's assets you're allowed to
hack. Most of the time, the policy page also lists vulnerabilities and
assets that are *out of scope* , meaning you're not allowed to report
about them.
报告被标记为 N/A
的最常见原因之一是超出了范围。一个程序的政策页面通常有一个标记"范围"的部分，告诉你可以黑掉公司资产的哪些部分。大多数情况下，这个政策页面也列出了漏洞和资产，这些漏洞和资产是超出范围的，也就是说，你不可以报告它们。
The best way to prevent submitting N/As is to read the bounty policy
carefully and repeatedly. Which vulnerability types are out of scope?
And which of the organization's assets? Respect these boundaries, and
don't submit bugs that are out of scope.
预防提交 N/As
的最佳方法是认真而重复地阅读赏金政策。哪些漏洞类型不在范围内？哪些是组织的资产？尊重这些边界，不要提交超出范围的漏洞。
If you do accidentally find a critical issue that is out of scope,
report it if you think it's something that the organization has to know
about! You might not get rewarded, but you can still contribute to the
company's security.
如果您无意中发现了一个超出范围的关键问题，如果您认为这是组织必须知道的事情，请报告它！您可能不会得到奖励，但仍然可以为公司的安全做出贡献。
#### You Don't Put Yourself in the Organization's Shoes {#c02.xhtml#h3-123456c01-0017}
Informative reports are much harder to prevent than N/As. Most of the
time, you'll get informative ratings because the company doesn't care
about the issue you're reporting.
信息性报告比无法适用（N/As）更难以预防。大多数情况下，你会收到信息性评级，因为公司并不关心你正在报告的问题。
Imagine yourself as a security engineer. If you're busy safeguarding
millions of users' data every day, would you care about an open redirect
that can be used only for phishing? Although it's a valid security flaw,
you probably wouldn't. You have other responsibilities to tend to, so
fixing a low-severity bug is at the bottom of your to-do list. If the
security team does not have the extra staff to deal with these reports,
they will sometimes ignore it and mark it as informative.
想象自己是一名安全工程师。如果你每天都忙于保护数百万用户的数据，你会在意一个只能用于钓鱼的开放式重定向吗？虽然这是一个有效的安全漏洞，但你可能不会太在意。你有其他的责任要处理，因此修复一个低严重性的错误将会被放在你的待办事项清单的最底部。如果安全团队没有额外的人手来处理这些报告，他们有时会忽视它并将其标记为信息性内容。
I've found that the most helpful way to reduce informatives is to put
myself in the organization's shoes. Learn about the organization so you
can identify its product, the data it's protecting, and the parts of its
application that are the most important. Once you know the business's
priorities, you can go after the vulnerabilities that the security team
cares about.
我发现最有效地减少信息泄露的方法是将自己置于组织的立场。了解组织，以便确定其产品、所保护的数据以及最重要的应用程序部分。一旦你了解了企业的优先事项，你就可以攻击安全团队关心的漏洞。
[ ]{#c02.xhtml#Page_27 .pagebreak title="27"} And remember, different
companies have different priorities. An informative report to one
organization could be a critical one to another. Like the dating site
versus job search site example mentioned earlier in this chapter,
everything is relative. Sometimes, it's difficult to figure out how
important a bug will be to an organization. Some issues I've reported as
critical ended up being informative. And some vulnerabilities I
classified as low impact were rewarded as critical issues.
请记住，不同的公司有不同的优先事项。对于一家组织而言，一份信息性的报告可能是至关重要的，而对于另一家公司则可能不那么重要。就像本章早些时候提到的相亲网站和求职网站的例子一样，一切都是相对的。有时候，很难确定一个漏洞对一个组织的重要性。我报告过的一些问题被认为很重要，最终却只是信息性的。有些我认为影响不大的漏洞却被认为是严重问题，并得到了奖励。
This is where trial and error can pay off. Every time the security team
classifies your report as informative, take note for future reference.
The next time you find a bug, ask yourself: did this company care about
issues like this in the past? Learn what each company cares about, and
tailor your hacking efforts to suit their business priorities. You'll
eventually develop an intuition about what kinds of bugs deliver the
most impact.
这就是试错法能够得到回报的地方。每当安全团队将您的报告分类为信息性时，请记下以备将来参考。下一次发现缺陷时，请问自己：这家公司过去是否关心过这样的问题？了解每家公司所关心的事项，并根据它们的业务重点调整您的黑客攻击策略。最终，您会对哪些类型的漏洞产生最大影响产生直觉。
#### You Don't Chain Bugs {#c02.xhtml#h3-123456c01-0018}
You might also be getting informatives because you always report the
first minor bug you find.
因为你总是报告第一个小错误，所以你可能也会收到一些信息。
But minor bugs classified as informative can become big issues if you
learn to chain them. When you find a low-severity bug that might get
dismissed, don't report it immediately. Try to use it in future bug
chains instead. For example, instead of reporting an open redirect, use
it in a server-side request forgery (SSRF) attack!
但是被分类为信息性的小型错误，在你学会如何链接它们后可能会变成大问题。当您发现一个可能会被忽略的低严重性错误时，请不要立即报告它。尝试将其用于将来的错误链中。例如，不要报告一个开放重定向漏洞，而是在服务器端请求伪造(SSRF)攻击中使用它！
#### You Write Bad Reports {#c02.xhtml#h3-123456c01-0019}
Another mistake beginners often make is that they fail to communicate
the bug's impact in their report. Even when a vulnerability is
impactful, if you can't communicate its implications to the security
team, they'll dismiss the report.
初学者经常犯的另一个错误是未能在报告中表达漏洞的影响。即使漏洞很严重，如果您不能向安全团队清晰地传达其影响，他们将忽略报告。
#### What About Duplicates? {#c02.xhtml#h3-123456c01-0020}
Unfortunately, sometimes you can't avoid duplicates. But you could lower
your chances of getting duplicates by hunting on programs with large
scopes, hacking on private programs, performing recon extensively, and
developing your unique hunting methodology.
不幸的是，有时候你无法避免重复。但是，通过在范围较大的程序上进行寻找、在私有程序上进行黑客攻击、广泛地进行侦察和开发自己独特的寻找方法，你可以降低重复的几率。
## What to Do When You're Stuck {#c02.xhtml#h1-123456c01-0004}
When I got started in bug bounties, I often went days or weeks without
finding a single vulnerability. My first-ever target was a social media
site with a big scope. But after reporting my first CSRFs and IDORs, I
soon ran out of ideas (and luck). I started checking for the same
vulnerabilities over and over again, and trying out different automatic
tools, to no avail.
当我刚开始接触漏洞赏金时，我经常连续数天甚至数周都无法找到一个漏洞。我第一个攻击目标是一个覆盖面广泛的社交媒体网站。但在报告了我的第一个CSRF和IDOR之后，我很快就没有了新的想法(运气也不怎么好了)。我开始反复检查同样的漏洞，尝试不同的自动化工具，但都无功而返。
I later found out I wasn't alone; this type of *bug slump* is
surprisingly common among new hackers. Let's talk about how you can
bounce back from frustration and improve your results when you get
stuck.
我后来发现我不是唯一遇到这种挫折的人；新手黑客中出现这种情况是非常普遍的。让我们谈谈当你被卡住时如何从挫折中反弹，并改善你的成果。
### [ ]{#c02.xhtml#Page_28 .pagebreak title="28"} Step 1: Take a Break! {#c02.xhtml#h2-123456c01-0015}
First, take a break. Hacking is hard work. Unlike what they show in the
movies, hunting for vulnerabilities is tedious and difficult. It
requires patience, persistence, and an eye for detail, so it can be very
mentally draining.
首先，休息一下。黑客工作很辛苦。与电影中所展示的不同，寻找漏洞是单调和困难的。它需要耐心，毅力和注重细节，因此可能非常消耗精力。
Before you keep hacking away, ask yourself: am I tired? A lack of
inspiration could be your brain's way of telling you it has reached its
limits. In this case, your best course of action would be to rest it
out. Go outside. Meet up with friends. Have some ice cream. Or stay
inside. Make some tea. And read a good book.
在继续努力之前，请问一下自己：我累了吗？
缺乏灵感可能是大脑告诉你已达到极限的方式。
在这种情况下，您的最佳选择是休息一下。 出去走走。 跟朋友聚会。
吃些冰淇淋。 或者呆在家里。 泡些茶。 然后读一本好书。
There is more to life than SQL injections and XSS payloads. If you take
a break from hacking, you'll often find that you're much more creative
when you come back.
生活中还有比SQL注入和XSS负载更多。如果你从黑客攻击中休息一下，往往会发现当你回来时更有创造力。
### Step 2: Build Your Skill Set {#c02.xhtml#h2-123456c01-0016}
Use your hacking slump as an opportunity to improve your skills. Hackers
often get stuck because they get too comfortable with certain familiar
techniques, and when those techniques don't work anymore, they
mistakenly assume there's nothing left to try. Learning new skills will
get you out of your comfort zone and strengthen your hacker skills for
the future.
利用你的黑客低谷作为提高技能的机会。黑客经常会陷入困境，因为他们对某些熟悉的技术过于舒适，当这些技术不再起作用时，他们错误地认为没有其他方法可尝试了。学习新的技能将使你走出舒适区，并为未来增强你的黑客技能。
First, if you're not already familiar with the basic hacking techniques,
refer to testing guides and best practices to solidify your skills. For
example, the *Open Web Application Security Project* *(* *OWASP* *)* has
published testing guides for various asset types. You can find OWASP's
web and mobile testing guides at
[https://owasp.org/www-project-web-security-testing-guide/](https://owasp.org/www-project-web-security-testing-guide/){.LinkURL}
and
[https://owasp.org/www-project-mobile-security-testing-guide/](https://owasp.org/www-project-mobile-security-testing-guide/){.LinkURL}
.
首先，如果你还不熟悉基本的黑客攻击技术，请参考测试指南和最佳实践来巩固你的技能。例如，开放式网络应用程序安全计划（OWASP）已经针对各种资产类型发布了测试指南。你可以在
https://owasp.org/www-project-web-security-testing-guide/ 和
https://owasp.org/www-project-mobile-security-testing-guide/ 找到 OWASP
的网络和移动测试指南。
Learn a new hacking technique, whether it's a new web exploitation
technique, a new recon angle, or a different platform, such as Android.
Focus on a specific skill you want to build, read about it, and apply it
to the targets you're hacking. Who knows? You might uncover a whole new
way to approach the target application! You can also take this
opportunity to catch up with what other hackers are doing by reading the
many hacker blogs and write-up sites out there. Understanding other
hackers' approaches can provide you with a refreshing new perspective on
engaging with your target.
学习一种新的黑客技术，无论是一种新的网络利用技术，一种新的侦查角度，还是不同的平台，比如Android。着重于想要提高的特定技能，阅读相关资料并将其应用于你正在攻击的目标上。谁知道呢？你可能会发现一种全新的方法来接近目标应用程序！你也可以通过阅读众多黑客博客和写作网站来看看其他黑客在做什么。理解其他黑客的方法可以为你提供一个新鲜的与目标交互的视角。
Next, play *Capture the Flags* *(* *CTFs* *)* . In these security
competitions, players search for flags that prove that they've hacked
into a system. CTFs are a great way to learn about new vulnerabilities.
They're also fun and often feature interesting new classes of
vulnerabilities. Researchers are constantly discovering new kinds of
exploit techniques, and staying on top of these techniques will ensure
that you're constantly finding bugs.
接下来，玩捉旗比赛（CTFs）。在这些安全竞赛中，玩家搜索能证明他们入侵系统的标记。CTFs是学习新漏洞的好方法。它们也很有趣，通常涉及有趣的新漏洞类型。研究人员不断发现新的攻击技术，并了解这些技术将确保您不断发现漏洞。
### Step 3: Gain a Fresh Perspective {#c02.xhtml#h2-123456c01-0017}
When you're ready to hack live targets again, here are some tips to help
you keep your momentum.
当你准备好重新攻击实时目标时，以下提示可帮助你保持动力。
[ ]{#c02.xhtml#Page_29 .pagebreak title="29"} First, hacking on a single
target can get boring, so diversify your targets instead of focusing on
only one. I've always found it helpful to have a few targets to
alternate between. When you're getting tired of one application, switch
to another, and come back to the first one later.
首先，只针对一个目标进行攻击会变得乏味，因此应该多样化攻击目标，而不是只关注一个目标。我一直发现在几个目标之间轮流攻击很有帮助。当你厌倦了一个应用程序时，请切换到另一个，稍后再回到第一个。
Second, make sure you're looking for specific things in a target instead
of wandering aimlessly, searching for anything. Make a list of the new