4. However, there is
a third party who implements the group, so that the adversary can
only access to the group via handles. Internally, this third party
keeps track of both, a symbolic representation of group elements
3Note that, by Schwartz-Zippel, the probability that two di(cid:130)erent polynomials over
Zp, evaluated uniformly at random, give the same output is bounded by the maximum
degree of the two, divided by p.
4 In this experiment, A is given the public parameters and access to a key generation
oracle that returns valid keys for values y of its choice. Eventually, A will choose two
messages m0 and m1 and a target value x. A(cid:137)er a random sampling b ←R {0, 1},
message mb will be encrypted under a(cid:139)ribute x and sent to A. Now, the adversary
is allowed to keep asking for secret keys and we say A wins the experiment if it can
guess b correctly.
Session C4:  From Verification to ABECCS’17, October 30-November 3, 2017, Dallas, TX, USA651GGM SM
ABE
(1λ, A):
eq
1 = L
T
eq
p , α ←r Zp,
1 , (cid:174)b), β ←r {0, 1}. β(cid:48) ← AOadd, Opair, Oeq , O∼ , Ochal, Osk(1λ, p). If β(cid:48) = β, and for all x ∈ Qchal, y ∈ Qsk, P(x, y) = 0,
eq
eq
2 = L
T
1 , (cid:174)B), append(L∼
T , A), (cid:174)b ←r Zn
1 = L∼
= L∼
2 = L∼
:= ∅, Qchal = Qsk := ∅, append(L∼
Exp
cnt = gen := 0, L
append(L
output 1. Otherwise, output 0.
Oadd(s ∈ {1, 2,T}, i, j ∈ N):
s , L∼
append(L∼
Opair(i, j ∈ N):
append(L∼
s , L∼
Ochal(x ∈ X):
(cid:174)c((cid:174)S, (cid:174)B) ← sE(x), (cid:174)S := (S0, . . . , Sw1), f (cid:63)0 := AS0, f (cid:63)1 := U , where U is a fresh formal variable, (cid:174)s ←r Zw1
s [j]), append(L
s [j]), append(L
s [i] +rf L∼
s [i] ·rf L∼
s [i] + L
s [i] · L
s [j]).
p , v(cid:63)0 := αs0, v(cid:63)1 := u ←r Zp,
s [j]).
eq
s , L
eq
s , L
eq
eq
eq
eq
append(cid:0)L∼
1 , (cid:174)c((cid:174)B, (cid:174)S)(cid:1), append(L∼
β ), append(cid:0)L
1 , (cid:174)c((cid:174)b,(cid:174)s)(cid:1), append(L
eq
T , f (cid:63)
eq
s , v(cid:63)), Qchal := Qchal ∪ {x}.
Osk(y ∈ Y):
(cid:174)Rcnt := (Rcnt,1, . . . , Rcnt,m1), (cid:174)k((cid:174)Rcnt, (cid:174)B, A) ← rE(y)((cid:174)R → (cid:174)Rcnt), (cid:174)rcnt ←r Zm1
cnt := cnt + 1, Qsk := Qsk ∪ {y}.
Oeq(s ∈ {1, 2,T}, i, j ∈ N):
Output 1 if L
O∼(s ∈ {1, 2,T}, i, j ∈ N):
Output 1 if L∼
s [i] ∼rf L∼
s [j], 0 otherwise.
s [j], 0 otherwise
s [i] = L
eq
eq
2 , (cid:174)k), append(cid:0)L
2 , (cid:174)k((cid:174)rcnt, (cid:174)b, α)(cid:1),
eq
p , append(L∼
(1λ, A). We require that A queries Ochal at most once, and that for x ∈ Qchal and all
Figure 3: Experiments Exp
y ∈ Qsk, P(x, y) = 0. In each procedure, the components inside a light gray (dark gray) frame are only present in the games
marked by a light gray (dark gray) frame. Wlog. we assume no query contains indices i, j ∈ N that exceed the size of the
involved lists.
GGM SM
ABE
and a real one (by sampling random values when required). (cid:145)e
di(cid:130)erence between ExpGGM and ExpSM is in equality checks that
are answered by using the generic representation and the symbolic
representation of group elements respectively. Our next theorem
bounds the probability of any distinguisher between ExpGGM and
ExpSM. Approximately, the only chance of distinguishing is that
an bad event5 occurs. (cid:145)eorem 3.3 bounds the probability of a bad
event happening.
Security proof of the generic construction. Our next result es-
tablishes that symbolically secure RFI ABE are also secure in the
GGM.
Theorem 3.3 (From symbolic to generic security). Let ABE
be a symbolically secure (p, n, sE, rE, Pair)-RFI ABE for P : X × Y →
{0, 1}. Let λ ∈ N be the security parameter, and A be an adversary
that on input (1λ, p), makes Qsk, Qadd, Qpair calls to the oracles Osk,
5Equality checks in the symbolic representation and the generic representation di(cid:130)er.
Oadd, Opair, respectively, and 1 call to Ochal. We have:
ABE,A(λ) ≤ 2d(n + |ct| + Qsk|sk| + Qadd + Qpair)4
AdvGGM
p
,
where d is the degree of ABE, |ct| := max{|ctx | : x ∈ Qchal}, and
|sk| := max{|sky| : y ∈ Qsk}
4 PAIR ENCODINGS
In this section, we recall the de(cid:128)nition of pair encodings, which
have been originally introduced in [12, 63] as a useful abstraction to
build ABE whose security proof rely on the Dual System Encryption
techniques [61] (roughly speaking, a pair encoding is a private-key,
one-time secure variant of ABE). We show in (cid:145)eorem 4.1 that any
pair encoding that is symbolically secure, as de(cid:128)ned in [6] (this is
the weakest possible notion of security for pair encoding), yields
a symbolically secure RFI-ABE via the construction presented in
Figure 2. (cid:145)e RFI-ABE obtained are roughly twice more e(cid:129)cient
that those obtained via previous dual system frameworks, albeit
relying on the generic group model.
Session C4:  From Verification to ABECCS’17, October 30-November 3, 2017, Dallas, TX, USA6521, . . . , S(cid:48)
i , Sj B(cid:96)|i ∈ [w2], j ∈ [0, w1], (cid:96) ∈ [n]}.
• sE(x) → (cid:0)(cid:174)S, (cid:174)c((cid:174)S, (cid:174)S(cid:48), (cid:174)B)(cid:1). On input x ∈ X, the sender encoding
Pair encodings. Let p be a prime, n ∈ N. A (p, n) pair encoding for
predicate P : X×Y → {0, 1} consists of the following deterministic
poly-time algorithms (polynomials are considered over Zp):
algorithm sE outputs ((cid:174)S, (cid:174)c), where (cid:174)c = (c1, . . . , cw3) is a vector
of polynomials in the non-lone variables (cid:174)S = (S0, . . . , Sw1), the
lone variables (cid:174)S(cid:48) = (S(cid:48)
w2), and the common variables
(cid:174)B = (B1, . . . , Bn) where for all i ∈ [w3], ci is a linear combination
of the monomials {S(cid:48)
• rE(y) → ((cid:174)R, (cid:174)k((cid:174)R, (cid:174)R(cid:48), (cid:174)B, A)). On input y ∈ Y, the receiver
encoding algorithm rE outputs ((cid:174)R, (cid:174)k((cid:174)R, (cid:174)R(cid:48), (cid:174)B, A)), where (cid:174)k =
(k1, . . . , km3) is a vector of polynomials in the non-lone vari-
ables (cid:174)R = (R1, . . . , Rm1), the lone variables (cid:174)R(cid:48) = (R(cid:48)
m2),
A, and the common variables (cid:174)B, where for all i ∈ [m3], ki is a
linear combination of the monomials {A, R(cid:48)
i , Rj B(cid:96)|i ∈ [m2], j ∈
[m1], (cid:96) ∈ [n]}.
• Pair(x, y) → E, E(cid:48). On input x ∈ X, y ∈ Y, the Pair algorithm
outputs matrices E ∈ Z(w1+1)×m3
Correctness. For all x ∈ X, y ∈ Y such that P(x, y) = 1,
(cid:174)S(cid:62)E(cid:174)k + (cid:174)c(cid:62)E(cid:48)(cid:174)R = AS0, where ((cid:174)S, (cid:174)c) = sE(x), ((cid:174)R, (cid:174)k) = rE(y),
(E, E(cid:48)) ← Pair(x, y).
, and E(cid:48) ∈ Zw3×m1
1, . . . , R(cid:48)
p
p
.
p
Symbolic security [6]. For all x ∈ X and y ∈ Y such that P(x, y) =
such that (cid:174)c(cid:62)E∗(cid:174)k =
0, there is no matrix E∗ ∈ Z(1+w1+w3)×(m1+m3)
AS0, where (cid:174)c = sE(x), (cid:174)k = rE(y).
Our next theorem shows that any symbolically secure (p, n)
pair encoding (sE, rE, Pair) [6] yields a symbolically secure
(p, n, sE, rE, Pair)-RFI ABE.
Theorem 4.1. [Symbolically secure pair encoding ⇒ symbolically
secure RFI-ABE] Let (sE, rE, Pair) be a (p, n) pair encoding for predi-
cate P : X × Y → {0, 1}. (cid:140)e construction described in Figure 2 is a
symbolically secure, (p, n, sE, rE, Pair)-RFI ABE.
5 CONCRETE RFI-ABE
Focusing on the generic group model allowed us to build schemes
that are o(cid:137)en simpler and more e(cid:129)cient compared to existing
schemes from the literature (see table in Figure 4 for a comparison
amongst the most e(cid:129)cient ABE). In this section, we show a selection
of schemes that illustrate the versatility of our framework. Our
contribution here is threefold:
(1) we design new pair encodings, which give new, more ef-
(cid:128)cient RFI-ABE via our framework (cf. Figure 2). (cid:145)is is
the case of IPE 2, compact KP-ABE, unbounded KP-ABE,
CP-ABE, and unbounded CP-ABE.
(2) we use our framework on existing pair encodings, to obtain
new, more e(cid:129)cient RFI-ABE, albeit relying on a stronger
assumption. (cid:145)is is the case of IBE 1 and IPE 1, whose
underlying pair encoding are implicit in the work of [64]
and [46] respectively.
(3) we use our framework on existing pair encodings, to prove
new security guarantees on existing RFI-ABE. (cid:145)is is the
case of IBE 2 from [27] and KP-ABE from [41]. Here, our
framework, when input on the pair encodings implicitly
given in [27, 41], outputs exactly the same RFI-ABE present
in those papers: there is no e(cid:129)ciency gain. However, we
can prove these RFI-ABE adaptively secure, under GGM,
while they were proved only selectively secure, based on
standard assumptions.
Overall, our new framework captures previous schemes (contribu-
tion (3)), and improves upon many others (contribution (1) and (2)),
at the price of a strong assumption, namely GGM.
5.1 Identity-Based Encryption (IBE)
IBE is the simplest example of ABE, introduced by [59], where Al-
ice can send a message to Bob only using some public parameters
and Bob’s identity (a pre-existing identi(cid:128)er, e.g. an email address),
unlike traditional public-key encryption, where Bob would need to
communicate his public key to Alice. In general, IBE simpli(cid:128)es the
key management of certi(cid:128)cate-based public-key infrastructure. A
major use case for IBE is email encryption, where it allows pairwise
email encryption, that is, Alice can send an encrypted email di-
rectly to Bob without Bob’s involvement. (cid:145)is technology is being
adopted in real-life applications. In fact, early IBE schemes are
being standardized in IEEE P1363.3 and RFC 5091.
For IBE, we have X = Y = Zp, and the predicate P is de(cid:128)ned as:
P(x, y) = 1 i(cid:130) x = y.
IBE 1 [64]
• n = 1, (cid:174)B := B; w1 = 0, (cid:174)S := S; m1 = 0; w2 = m2 = 1.
• sE(x) → S(B + x).
• rE(y) → A/(B + y).
• Pair(x, y) → 1
IBE 1 is the prime-order version of the IBE from [64], which uses
the D´ej`a Q framework, introduced in [34]. It is an open problem
to translate this framework, which uses composite-order bilinear
groups, to the more e(cid:129)cient [42] prime order se(cid:139)ing. (cid:145)is yields
one of the most e(cid:129)cient IBE, as illustrated in the benchmark Fig-
ure 7. Note that an unpublished manuscript from Eike Kiltz and
Gregory Neven, cited in [31, citation 35], already proves adaptive
security of IBE 1 in the GGM.
IBE 2 [27]
• n = 2, (cid:174)B := (B1, B2); w1 = 0, (cid:174)S := S; m1 = 1, (cid:174)R := R; w2 = m2 = 2.
• sE(x) →(cid:0)S, S(B1 + xB2)(cid:1)
• rE(y) →(cid:0)R, A + R(B1 + yB2)(cid:1)
(cid:19)
(cid:18) 0
• Pair(x, y) →
1
0
−1
IBE 2 is [27], which we prove adaptively secure in the GGM ([27]
proved it selectively secure based on DBDH).
5.2 Inner Product Encryption (IPE)
IPE generalizes IBE, and captures useful classes of predicates, such
as CNF and DNF formulas, or predicates that can expressed as
polynomials (see [46] for more details).
Pz is de(cid:128)ned as: Pz((cid:174)x, (cid:174)y) = 1 i(cid:130) (cid:174)x(cid:62)(cid:174)y = z.
For IPE, we have X = Y = Zd
p and for any z ∈ Z∗
p, the predicate
Session C4:  From Verification to ABECCS’17, October 30-November 3, 2017, Dallas, TX, USA653KP-ABE:
GPSW06 [41]
RW13 [57]
Our unbounded KP-ABE
ALP11 [14]
Our compact KP-ABE
CP-ABE:
W11 [62]
Our CP-ABE
RW13 [57]
Our unbounded CP-ABE
|mpk|
U |G| + |GT |
3|G| + |GT |
2|G| + |GT |
d |G| + |GT |
U |G| + |GT |
|mpk|
U |G| + |GT |
4|G| + |GT |
4|G| + |GT |
(U + 1)|G| + |GT |
|sk|