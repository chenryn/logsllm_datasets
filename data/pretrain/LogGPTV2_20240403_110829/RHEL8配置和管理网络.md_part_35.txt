        以太网设备添加到 `red`{.literal} VRF 设备中：
        ``` literallayout
        # ip link set dev enp7s0 master red
        ```
    4.  启用 `enp7s0`{.literal} 设备：
        ``` literallayout
        # ip link set dev enp7s0 up
        ```
    5.  为 `enp7s0`{.literal} 设备分配与 `blue`{.literal} VRF 域中的
        `enp1s0`{.literal} 使用相同的 IP 地址和子网：
        ``` literallayout
        # ip addr add dev enp7s0 192.0.2.1/24
        ```
    :::
3.  另外，还可按照上述步骤创建更多 VRF 设备。
:::
:::
::: section
::: titlepage
# []{#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking.html#additional_resources_4}其它资源 {.title}
:::
::: itemizedlist
-   `kernel-doc`{.literal} 软件包中的
    /usr/share/doc/kernel-doc-\/Documentation/networking/vrf.txt
:::
:::
:::
[]{#setting-your-routing-protocols_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#setting-your-routing-protocols_configuring-and-managing-networking.html#setting-your-routing-protocols_configuring-and-managing-networking}第 39 章 为您的系统设置路由协议 {.title}
:::
本节论述了如何使用 `Free Range Routing`{.literal}
（`FRRouting`{.literal} 或
`FRR`{.literal}）功能为您的系统启用和设置所需的路由协议。
::: section
::: titlepage
# []{#setting-your-routing-protocols_configuring-and-managing-networking.html#intro-to-frr_setting-your-routing-protocols}FRRouting 介绍 {.title}
:::
`Free Range Routing`{.literal} （`FRRouting`{.literal} 或
`FRR`{.literal}）是一个路由协议堆栈，由 `AppStream`{.literal}
存储库中提供的 `frr`{.literal} 软件包提供。
`FRR`{.literal} 替换之前 RHEL 版本中使用的
`Quagga`{.literal}。因此，`FRR`{.literal} 提供基于 TCP/IP
的路由服务，并支持多个 IPv4 和 IPv6 路由协议。
支持的协议包括：
::: itemizedlist
-   边框网关协议(`BGP`{.literal})
-   中间系统到中间系统(`IS-IS`{.literal})
-   Open Shortest Path 优先(`OSPF`{.literal})
-   协议独立多播(`PIM`{.literal})
-   路由信息协议(`RIP`{.literal})
-   下一代路由信息协议(`RIPng`{.literal})
-   增强的内向网关路由协议(`EIGRP`{.literal})
-   下一个循环解析协议(`NHRP`{.literal})
-   双向转发检测(`BFD`{.literal})
-   基于策略的路由(`PBR`{.literal})
:::
FRR 是下列服务的集合：
::: itemizedlist
-   `zebra`{.literal}
-   `bgpd`{.literal}
-   `isisd`{.literal}
-   `ospfd`{.literal}
-   `ospf6d`{.literal}
-   `pimd`{.literal}
-   `ripd`{.literal}
-   `ripngd`{.literal}
-   `eigrpd`{.literal}
-   `nhrpd`{.literal}
-   `bfdd`{.literal}
-   `pbrd`{.literal}
-   `staticd`{.literal}
-   `fabricd`{.literal}
:::
如果安装了
`frr`{.literal}，系统可充当专用路由器，该路由器可使用路由协议与其它路由器在内部或外部网络中交换路由信息。
:::
::: section
::: titlepage
# []{#setting-your-routing-protocols_configuring-and-managing-networking.html#setting-up-frrouting_setting-your-routing-protocols}设置 FRRouting {.title}
:::
::: itemizedlist
**先决条件**
-   请确定在您的系统中安装了 `frr`{.literal} 软件包：
:::
``` literallayout
# yum install frr
```
::: orderedlist
**流程**
1.  编辑 `/etc/frr/daemons`{.literal}
    配置文件，并为您的系统启用所需的守护进程。
    例如，要启用 `ripd`{.literal} 守护进程，请包含以下行：
    ``` literallayout
    ripd=yes
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    `zebra`{.literal} 守护进程必须一直启用，因此您必须设置
    `zebra=yes`{.literal} 才能使用 `FRR`{.literal}。
    :::
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    默认情况下，`/etc/frr/daemons`{.literal} 包含所有守护进程的
    `[daemon_name]=no`{.literal}
    条目。因此，所有守护进程都被禁用，在新的系统安装后启动
    `FRR`{.literal} 将无效。
    :::
2.  启动 `frr`{.literal} 服务：
    ``` literallayout
    # systemctl start frr
    ```
3.  另外，您还可以在引导时自动启动 `FRR`{.literal}:
    ``` literallayout
    # systemctl enable frr
    ```
:::
:::
::: section
::: titlepage
# []{#setting-your-routing-protocols_configuring-and-managing-networking.html#changing-frrs-configuration_setting-your-routing-protocols}修改 FRR 的配置 {.title}
:::
本节描述：
::: itemizedlist
-   设置后如何启用附加守护进程 `FRR`{.literal}
-   设置后如何禁用守护进程 `FRR`{.literal}
:::
### []{#setting-your-routing-protocols_configuring-and-managing-networking.html#enabling_an_additional_daemon}启用附加守护进程
::: itemizedlist
**先决条件**
-   `FRR`{.literal} 设置如设置 [FRRouting
    中所述](#setting-your-routing-protocols_configuring-and-managing-networking.html#setting-up-frrouting_setting-your-routing-protocols "设置 FRRouting"){.link}。
:::
::: title
**流程**
:::
启用一个或多个附加守护进程：
::: orderedlist
1.  编辑 `/etc/frr/daemons`{.literal}
    配置文件，并将所需守护进程的行改为状态为 `yes`{.literal}，而不是
    `no`{.literal}。
    例如，要启用 `ripd`{.literal} 守护进程：
    ``` literallayout
    ripd=yes
    ```
2.  重新载入 `frr`{.literal} 服务：
    ``` literallayout
    # systemctl reload frr
    ```
:::
### []{#setting-your-routing-protocols_configuring-and-managing-networking.html#disabling_a_daemon}禁用守护进程
::: itemizedlist
**先决条件**
-   `FRR`{.literal} 设置如设置 [FRRouting
    中所述](#setting-your-routing-protocols_configuring-and-managing-networking.html#setting-up-frrouting_setting-your-routing-protocols "设置 FRRouting"){.link}。
:::
::: title
**流程**
:::
禁用一个或多个守护进程：
::: orderedlist
1.  编辑 `/etc/frr/daemons`{.literal}
    配置文件，并将所需守护进程的行改为状态为 `no`{.literal}，而不是
    `yes`{.literal}。
    例如：要禁用 `ripd`{.literal} 守护进程：
    ``` literallayout
    ripd=no
    ```
2.  重新载入 `frr`{.literal} 服务：
    ``` literallayout
    # systemctl reload frr
    ```
:::
:::
::: section
::: titlepage
# []{#setting-your-routing-protocols_configuring-and-managing-networking.html#modifying-a-configuration-of-a-particular-daemon_setting-your-routing-protocols}修改特定守护进程的配置 {.title}
:::
使用默认配置，`FRR`{.literal} 中的每个路由守护进程只能充当普通路由器。
要进行守护进程的额外配置，请使用以下步骤。
::: orderedlist
**流程**
1.  在 `/etc/frr/`{.literal}
    目录中，为所需守护进程创建一个配置文件，如下：
    ``` literallayout
    [daemon_name].conf
    ```
    例如，要进一步配置 `eigrpd`{.literal} 守护进程，请在上述目录中创建
    `eigrpd.conf`{.literal} 文件。
2.  使用所需内容填充新文件。
    有关特定 `FRR`{.literal} 守护进程的配置示例，请查看
    `/usr/share/doc/frr/`{.literal} 目录。
3.  重新载入 `frr`{.literal} 服务：
    ``` literallayout
    # systemctl reload frr
    ```
:::
:::
:::
[]{#monitoring-and-tuning-the-rx-ring-buffer_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#monitoring-and-tuning-the-rx-ring-buffer_configuring-and-managing-networking.html#monitoring-and-tuning-the-rx-ring-buffer_configuring-and-managing-networking}第 40 章 监控并调整 RX 环缓冲 {.title}
:::
接收(RX)环缓冲是设备驱动程序和网络接口卡(NIC)之间的共享缓冲区，并存储传入的数据包，直到设备驱动程序可以处理它们。
如果数据包丢失率导致应用程序报告，您可以增大以太网设备 RX 环缓冲的大小：
::: itemizedlist
-   数据丢失，
-   集群隔离，
-   性能较慢,
-   超时，以及
-   备份失败。
:::
这部分论述了如何识别丢弃的数据包数量，增加 RX
环缓冲来降低高数据包的降低率。
::: section
::: titlepage
# []{#monitoring-and-tuning-the-rx-ring-buffer_configuring-and-managing-networking.html#displaying-the-number-of-dropped-packets_monitoring-and-tuning-the-rx-ring-buffer}显示丢弃的数据包数量 {.title}
:::
`ethtool`{.literal} 工具可让管理员查询、配置和控制网络驱动程序设置。
RX 环缓冲的耗尽会导致计数器递增，如
`ethtool -S interface_name`{.literal} 输出中的 \"discard\" 或
\"drop\"。丢弃的数据包表示可用缓冲区的填满速度要快于内核可以处理数据包的速度。
这个步骤描述了如何使用 `ethtool`{.literal} 显示丢弃计数器。
::: itemizedlist
**流程**
-   要查看 `enp1s0`{.literal} 接口的丢弃计数器，请输入：
    ``` literallayout
    $ ethtool -S enp1s0
    ```
:::
:::
::: section
::: titlepage
# []{#monitoring-and-tuning-the-rx-ring-buffer_configuring-and-managing-networking.html#increasing-the-rx-ring-buffer-to-reduce-a-high-packet-drop-rate_monitoring-and-tuning-the-rx-ring-buffer}增加 RX 环缓冲以降低数据包丢弃的比率 {.title}
:::
`ethtool`{.literal} 工具有助于增加 RX 缓冲，以减少数据包的高丢弃率。
::: orderedlist
**流程**
1.  查看 RX 环缓冲的最大值：
    ``` literallayout
    # ethtool -g enp1s0