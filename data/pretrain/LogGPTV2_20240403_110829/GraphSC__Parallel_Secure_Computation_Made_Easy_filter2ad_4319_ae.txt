### Computation Time Analysis

**Figure 7: Computation Time vs. Number of Processors**
- **Description**: This figure illustrates the computation time for an increasing number of processors, showing an almost linear decrease in computation time as the number of processors increases.
- **Details**:
  - The lines represent different input lengths.
  - For PageRank, gradient descent, and ALS (Alternating Least Squares), the computation time refers to the time required for one iteration.

**Input Lengths (in elements)**
- 215
- 212
- 29
- 26
- 23
- 212
- 214
- 216

### Computation Time vs. Input Size

**Figure 8: Computation Time vs. Input Size**
- **Description**: This figure shows the computation time for increasing input sizes, demonstrating an almost-linear increase with a small log2 factor due to the bitonic sort.
- **Details**:
  - The lines correspond to different input lengths.
  - For PageRank, gradient descent, and ALS, the computation time refers to the time required for one iteration.
  - **Baseline**: A sequential ORAM-based baseline using Circuit ORAM [53], which is not amenable to parallelization as explained in Section V-G.
  - **Comparison**: Performance comparison with Nikolaenko et al. [3], who implemented the circuit using FastGC [5] and parallelized at the circuit level using 32 processors.

**Subfigures**:
- **(a) Histogram**
- **(b) PageRank**
- **(c) Gradient Descent**
- **(d) ALS**

**Processors**:
- 4
- 8
- 16
- 32

### Total Work in Terms of AND Gates

**Figure 9: Total Work in Terms of AND Gates**
- **Description**: This figure shows the total work in terms of the number of AND gates, normalized such that the 4-processor case is 1Ã—.
- **Details**:
  - The different curves correspond to different input lengths.
  - Plots are in a log-log scale, showing the expected small increase with the number of processors \( P \).
  - Theoretical analysis suggests that the total amount of work is \( O(P \log P + M) \), where \( M := |V| + |E| \) is the graph size.
  - In practice, with bitonic sort, the actual total work is \( O(P \log^2 P + M) \).

**Subfigures**:
- **(a) Histogram**
- **(b) PageRank**
- **(c) Gradient Descent**
- **(d) ALS**

### Communication Analysis

**Figure 10: Communication of Garbler-Evaluator (GE) and Garbler-Garbler (GG)**
- **Description**: This figure shows the communication between garblers and evaluators for gradient descent with an input length of 2048.
- **Details**:
  - **(a) Total Communication**: Shows the total communication.
  - **(b) Communication per Processor**: Divides the results by the number of processors \( P \) to understand overheads better.
  - As the number of processors increases, the "outgoing" communication decreases, while the GG or EE communication remains roughly the same, following \( \log_2 P / P \).

**Practical Optimizations**

**Figure 11: Number of Aggregate Operations with and without Optimization**
- **Description**: This figure shows the number of aggregate operations (additions) on an input length of 2048, with and without the optimization discussed in Section III-E.
- **Details**:
  - **(a) One processor simulating multiple processors**
  - **(b) Using the optimization**
  - The optimized version performs worse than the single-processor version only when the number of processors approaches the input size, which is unlikely in real-world scenarios.

### Comparison with Cleartext Baseline

**Figure 12: Comparison with GraphLab**
- **Description**: This figure compares the execution time of GraphSC with GraphLab [9], [12], [72], a state-of-the-art framework for running graph-parallel algorithms on clear text.
- **Details**:
  - Matrix Factorization using gradient descent with an input length of 32K.
  - Cleartext experiments: 1000 iterations of gradient descent run 3 times, average time for a single iteration.
  - GraphSC is about 200K - 500K times slower than GraphLab when run on 2 to 16 processors.
  - Increasing parallelism decreases this slowdown.

### Accuracy Analysis

**Figure 13: Relative Error of Secure PageRank**
- **Description**: This figure shows the relative error of running the secure version of PageRank compared to the cleartext implementation.
- **Details**:
  - **(a) and (b)**: Relative errors for different input lengths and processor configurations.

This structured and detailed presentation should make the text more clear, coherent, and professional.