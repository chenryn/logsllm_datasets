# Configuring the Listener and Retrieving Required Credentials

The available options for setting up the listener are shown in the following screenshot:

![](media/image673.jpeg)

To start the listener, we need to configure the `AuthCode` and `ClientID`.

## Retrieving the ClientID

1. **Register and Log In:**
   - Register for a Microsoft developer account and log in.
   - Visit the application dashboard at [https://apps.dev.microsoft.com/#/appList](https://apps.dev.microsoft.com/#/appList).

2. **Add an Application:**
   - Click the **Add an app** button to create a new application.

   ![](media/image674.jpeg)

3. **Set Application Name:**
   - Enter the application name and click the **Create** button to proceed.

   ![](media/image675.jpeg)

4. **Retrieve ClientID:**
   - Upon successful creation, the application ID (ClientID) will be displayed. This is required by the Empire C2.

   ![](media/image676.jpeg)

5. **Set ClientID:**
   - Set the ClientID in the listener configuration.

   ![](media/image677.jpeg)

## Adding a Redirect URL

1. **Navigate to Platforms Section:**
   - Click on the **Add Platform** button under the **Platforms** section.

   ![](media/image678.jpeg)

2. **Select Web Platform:**
   - Choose **Web** as the platform type.

   ![](media/image679.jpeg)

3. **Set Redirect URL:**
   - Enter the redirect URL in the provided field. Use `https://login.live.com/oauth20_desktop.srf`.

   ![](media/image680.jpeg)
   ![](media/image681.jpeg)

## Retrieving the AuthCode

1. **Execute the Listener:**
   - Run the listener so that it requests the `AuthCode` using the `ClientID`.

   ![](media/image682.jpeg)

2. **Open the Provided URL:**
   - Open the URL given by the Empire C2 to get the `AuthCode`.

   ![](media/image683.jpeg)

3. **Confirm and Retrieve AuthCode:**
   - Click **Yes** to continue. The page will be redirected, and the `code` parameter in the URL is the `AuthCode`.

   ![](media/image684.jpeg)

4. **Set AuthCode:**
   - Set the `AuthCode` in the listener configuration.

   ![](media/image685.jpeg)

## Starting the Listener

- Now that all configurations are complete, start the listener.

  ![](media/image686.jpeg)
  ![](media/image687.jpeg)

## Generating a One-Liner Stager

- Generate a one-liner stager using the OneDrive listener.

  ![](media/image688.jpeg)

- When the stager is executed on the target server, it will connect back to the OneDrive server, and the Empire C2 will update the agent entry with the newly connected agent.

  ![](media/image689.jpeg)

- Similar to Dropbox, the SSL certificate used in OneDrive is valid.

  ![](media/image690.jpeg)

## Cloud-Based File-Sharing C2s

Cloud-based file-sharing C2s can be useful in situations where it's difficult to establish reverse connections to our C2. However, it is important to monitor covert channels to ensure security.

# C2 Covert Channels

A covert channel is used to communicate secretly. While encryption protects communication from being decoded, covert channels aim to hide the existence of the communication. Initially, covert channels were identified as a security threat on monolithic systems like mainframes. More recently, the focus has shifted to covert channels in computer network protocols. The internet's vast amount of data and numerous protocols make it an ideal vehicle for covert communication. Common protocols used for covert channels include:

- **TCP (Transmission Control Protocol):**
  - TCP is connection-oriented and can blend in with other TCP communications. However, the persistent connection can reveal the communication via netstat.

- **UDP (User Datagram Protocol):**
  - UDP is connection-less and does not show an ESTABLISHED state, making it a stealthier C2 channel.

- **HTTP(S) (Hyper Text Transfer Protocol):**
  - HTTP is well-known and commonly allowed through firewalls. It uses methods like GET and POST, making it a viable C2 channel.

- **DNS (Domain Name Server):**
  - DNS is widely used and powerful for C2 communication. It uses methods like QUERY and RESPONSE and does not require IP addresses.

- **ICMP (Internet Control Message Protocol):**
  - ICMP, also known as PING, is often allowed through firewalls. C2 payloads can be added as padding to ICMP headers.

If the blue team detects our access, they can blacklist our C2 IPs, but this does not necessarily mean we have to reconfigure everything.

# Summary

In this chapter, we introduced command and control (C2) servers and their use in red team operations. We covered how cloud-based file-sharing services can be used as C2s to make communication stealthier. We also discussed C2 covert channels and their importance, along with commonly used protocols. In the next chapter, we will cover hiding C2s behind a redirector to protect them from detection.

# Questions

1. What other C2 servers can we use if not cloud-based?
2. Can we use our personal account for Dropbox?
3. Is it necessary to use a C2 server? Why not just use our own system?
4. Are there any automation scripts or tools to configure the red team infrastructure?
5. Is there a way to manage multiple C2s from a dashboard?

# Further Reading

- [Building a Better Moat: Designing an Effective Covert Red Team Attack Infrastructure](https://speakerdeck.com/bluscreenofjeff/building-a-better-moat-designing-an-effective-covert-red-team-attack-infrastructure?slide=10)
- [Part 3: How to Red Team - Setting Up Environment](https://holdmybeersecurity.com/2017/10/15/part-3-how-to-red-team-setting-up-environment/)

# Obfuscating C2s - Introducing Redirectors

In the previous chapter, we learned about using file-sharing services like Dropbox and OneDrive as C2 servers. To protect our C2 servers from being detected, we will hide them behind a redirector. A redirector is a server that forwards all communication to our C2 server.

## Technical Requirements

- Linux
- Armitage
- Socat

## Introduction to Redirectors

Let's explore the basics of redirectors using a simple example. Assume we have configured our team server and are waiting for an incoming Meterpreter connection on port 8080/tcp. The payload is delivered and executed successfully.

- **Connection Process:**
  - The target server connects to our C2 on port 8080/tcp.
  - Upon successful connection, our C2 sends the second stage, and a Meterpreter session opens.

  ![](media/image692.jpeg)

- **Current Situation:**
  - The target server's connection table will have our C2's IP, making it easy for the monitoring team to block it.

  ![](media/image693.jpeg)

- **Adding a Redirector:**
  - To protect our C2, add a redirector in front of it.

  ![](media/image695.jpeg)

- **IP Information:**
  - Redirector IP: 35.153.183.204
  - C2 IP: 54.166.109.171

- **Forwarding Communication:**
  - Use socat to forward all communication on port 8080/tcp to our C2.

  ![](media/image696.jpeg)

- **Generate Payload:**
  - Generate a one-liner payload with the lhost set to the redirector IP.

  ![](media/image697.jpeg)

- **Connection Initiation:**
  - The target server will now connect to the redirector instead of the C2.

  ![](media/image698.jpeg)

- **Connection Table:**
  - The connection table no longer shows our C2 IP.

  ![](media/image700.jpeg)

- **Port Scan:**
  - Perform a port scan on the C2 to check open ports.

  ![](media/image701.jpeg)

- **Configure UFW:**
  - Set UFW rules to allow only the redirector to connect to the C2.

  ![](media/image704.jpeg)

- **Redirector UFW:**
  - Set UFW rules for the redirector.

  ![](media/image705.jpeg)

- **Filtered Ports:**
  - The C2 ports will now appear filtered.

  ![](media/image707.jpeg)

- **Confirm Access:**
  - Confirm that the C2 is only accessible from the redirector.

  ![](media/image708.jpeg)

## Short-Term and Long-Term Redirectors

- **Short-Term (ST) C2:**
  - ST-C2 servers handle periodic polling from the target server.
  - The redirector in front of the ST-C2 is called the ST-redirector.

- **Long-Term (LT) C2:**
  - LT-C2 servers handle callbacks after hours or days.
  - The redirector in front of the LT-C2 is called the LT-redirector.

  ![](media/image709.png)

## Redirection Methods

- **Dumb Pipe Redirection:**
  - Dumb pipe redirectors blindly forward network traffic.
  - Useful for quick setup but lack control over incoming traffic.
  - Can be performed using socat or iptables.

- **Filtration/Smart Redirection:**
  - Smart redirectors filter and control incoming traffic, providing better security.

By properly configuring and using redirectors, we can enhance the security and stealth of our C2 infrastructure.