title:Fast Actively Secure Five-Party Computation with Security Beyond Abort
author:Megha Byali and
Carmit Hazay and
Arpita Patra and
Swati Singla
Fast Actively Secure Five-Party Computation
with Security Beyond Abort
Megha Byali
Indian Institute of Science
Bangalore, India
PI:EMAIL
Arpita Patra†
Indian Institute of Science
Bangalore, India
PI:EMAIL
Carmit Hazay∗
Ba-Ilan University
Ramat Gan, Israel
PI:EMAIL
Swati Singla
Indian Institute of Science
Bangalore, India
PI:EMAIL
ABSTRACT
Secure Multi-party Computation (MPC) with small population and
honest majority has drawn focus specifically due to customization
in techniques and resulting efficiency that the constructions can
offer. In this work, we investigate a wide range of security notions
in the five-party setting, tolerating two active corruptions. Being
constant-round, our protocols are best suited for real-time, high
latency networks such as the Internet.
In a minimal setting of pairwise-private channels, we present ef-
ficient instantiations with unanimous abort (where either all honest
parties obtain the output or none of them do) and fairness (where the
adversary obtains its output only if all honest parties also receive
it). With the presence of an additional broadcast channel (known to
be necessary), we present a construction with guaranteed output de-
livery (where any adversarial behaviour cannot prevent the honest
parties from receiving the output). The broadcast communication
is minimal and independent of circuit size. In terms of performance
(communication and run time), our protocols incur minimal over-
head over the best known protocol of Chandran et al. (ACM CCS
2016) that achieves the least security of selective abort. Further,
our protocols for fairness and unanimous abort can be extended to
n-parties with at most √
n corruptions, similar to Chandran et al.
Going beyond the most popular honest-majority setting of three
parties with one corruption, our results demonstrate feasibility of
attaining stronger security notions for more than one active cor-
ruption at an expense not too far from the least desired security of
selective abort.
∗This author was supported by European Research Council under the ERC consolida-
tors grant agreement n. 615172 (HIPS), by the BIU Center for Research in Applied
Cryptography and Cyber Security in conjunction with the Israel National Cyber Bureau
in the Prime Minister’s Office and by ISF grant 1316/18.
†This author is supported by SERB Women Excellence Award 2017 (DSTO 1706).
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6747-9/19/11...$15.00
https://doi.org/10.1145/3319535.3345657
CCS CONCEPTS
• Security and privacy Cryptography ;
KEYWORDS
Secure Multiparty Computation; Guaranteed Output Delivery; Fair-
ness; Unanimous Abort; Garbled Circuits
ACM Reference Format:
Megha Byali, Carmit Hazay, Arpita Patra, and Swati Singla. 2019. Fast
Actively Secure Five-Party Computation with Security Beyond Abort . In
2019 ACM SIGSAC Conference on Computer and Communications Security
(CCS ’19), November 11–15, 2019, London, United Kingdom. ACM, New York,
NY, USA, 18 pages. https://doi.org/10.1145/3319535.3345657
1 INTRODUCTION
Secure Multiparty Computation (MPC) [27, 46, 65] is an area of
cryptography that has evolved breathtakingly over the years in
its attempt to secure data while computing on it. MPC focuses on
the problem of enabling a set of n mutually distrusting parties to
perform joint computation on their private inputs in a way that no
coalition of t parties can affect the output of computation or learn
any additional information beyond what is revealed by the output.
In other words, MPC guarantees correctness of computation and
privacy of inputs. The literature of MPC has witnessed plethora of
works from a theoretical standpoint, however, the focus on building
practice-oriented MPC [9, 39, 64] constructs has gained momentum
only in the recent years owing to the rising demand for efficiency
in real-time networks such as the Internet. The vast literature of
MPC can be broadly categorized into dishonest majority [7, 16, 37,
40, 46, 52, 57, 64] and honest majority [10, 11, 14, 15, 55, 61]. While
both have received attention in the efficiency studies, designing
practical MPC with honest majority is a captivating area of research
[6, 24, 25, 43, 55, 60] for the various reasons illustrated below.
The paramount benefit of having honest majority enables the
computation to achieve stronger security goals such as fairness
(adversary obtains output if and only if all honest parties do) and
guaranteed output delivery (GOD) (any adversarial behaviour can-
not prevent the honest parties from receiving the output) [31].
These properties are desirable in real-life owing to limited time
and resource availability, as they bind the parties to participate in
the computation and thus keep the adversarial behaviour in check.
Furthermore, lack of such strong guarantees can be detrimental in
Session 7C: Secure Computing VCCS ’19, November 11–15, 2019, London, United Kingdom1573practice. For instance, in real-time applications such as e-commerce
and e-auction, an adversary can always cause an abort if the out-
come is not in its favour unless a stronger security notion is ensured.
In e-voting, the adversary can abort the computation repeatedly,
yet learn the outputs each time and use them to rig the election.
Apart from enabling stronger security goals, honest-majority allows
design of efficient protocols solely using symmetric-key functions.
For instance, the necessity of a public-key primitive for realizing
oblivious transfer can be replaced with symmetric-key primitives,
as exhibited by our protocols and [25]. Further, this setting enables
design of information-theoretic protocols [14, 15, 49, 61], besides
the computational ones. Thus, achieving stronger security goals
is crucial and has driven a lot of research. To elaborate, [35, 36]
show constant-round protocols with GOD. The round-optimality
of these notions have been studied in [45, 47, 60] and 3 rounds is
proven to be necessary. Lately, round-optimal MPC protocols with
GOD appeared in [1, 8, 47] relying on either Common Reference
String (CRS) or public-key operations, in [2, 4] under super-honest-
majority t < n/4 and in [60] for the special case of 3-party solely
from symmetric-key primitives. The work of [38] shows how to
compile honest majority MPC protocol for arithmetic circuits with
abort (and several other constraints) into a protocol with fairness
while preserving its efficiency. Interestingly, while [31] rules out
fairness in dishonest majority, [3, 17, 30, 59] demonstrate its fea-
sibility relying on non-standard techniques such public bulletin
boards, secure processors or penalties (via Bitcoin).
Since inception, the primary focus of MPC has been on generic
constructions with n parties. Yet, the regime of practical MPC has
seen major breakthroughs in the small-party domain: 3-5. Real-time
applications such as Danish Sugar-Beet Auction [22], statistical and
financial data analysis [21], email filtering [51], distributed cre-
dential encryption [55], Kerberos [6], privacy-preserving machine
learning [53], efficient MPC-frameworks such as VIFF [44], Share-
mind [20] and ABY-Arithmetic Boolean Yao [54] are crafted for 3
parties with one corruption. The setting of 4, 5 parties with minor-
ity corruption has been explored in [24, 25, 49]. The most popular
setting of 3/4 parties with 1 active corruption brings to the table
some eloquent custom-made tools such as the use of Yao’s garbled
circuits [65] to achieve malicious security [24, 55, 60], spending just
2-3 elements per party in arithmetic circuits [5] and sure-election
of one honest party as a trusted party in case the adversary strikes
[24, 60]. These techniques rely on the adversary not having an
accomplice to cause damage. However, the moment adversary has
a collaborator (2 corruptions), these custom-made tools fall apart,
thus elevating the challenge of achieving desired security with
real-time efficiency. In this paper, we consider MPC for 5 parties
(5PC) with 2 corruptions and treat it with securities of unanimous
abort, fairness and GOD, at an expense that is not too far from the
result of [25] achieving least desired security of selective abort. We
present the related work below.
1.1 Related Work
The notable works on MPC for small parties come in two flavours–
low-latency and high-throughput protocols. Relying on garbled
circuits, the former offers constant-round protocols that serve better
in high-latency networks such as the Internet. The latter, built
on secret sharing tools, aim for low communication (bandwidth),
but at the cost of rounds proportional to the depth of the circuit
representing the desired function. These primarily cater to low-
latency networks. We focus on the former category in our work.
The work most relevant to ours is [25] that proposes a 5PC
protocol achieving the weak notion of selective abort against two
malicious corruptions. Their customization for 5PC resulted in
an efficient protocol for actively-secure distributed garbling of 4
parties, relying solely on the passively-secure scheme of [13], saving
60% communication than [13] with four corruptions. In the 3-party
(3PC), 4-party (4PC) domain, [49, 55] gave a 3PC with selective abort.
[49] also gave a 2-round 4PC with GOD. Recently, [24] improved the
state-of-the-art with efficient 3PC and 4PC achieving fairness and
GOD with minimal overhead over [55]. In the dishonest-majority,
the protocol of [29] studies 3PC with two corruptions.
Orthogonally, recent works [5, 6, 26, 42, 43] in the high-
throughput setting with non-constant rounds, show abort security
in 3PC with one corruption. The works of [26, 28, 38, 58] addition-
ally include constructs attaining fairness.
1.2 Our Contribution
In the regime of low-latency protocols which is of interest to us,
the known works [25, 49, 55], despite being in honest majority,
trade efficiency for security and settle for weaker guarantees such
as selective abort. With 3, 4 parties, [24, 49, 60] demonstrate that
fairness, GOD are feasible goals and present protocols with minimal
overhead over those achieving weaker notions. Our paper is yet
another attempt in this direction, focused on the 5-party setting.
We present efficient, constant-round 5PC protocols with honest
majority that achieve security notions ranging from unanimous
abort to GOD, solely relying on symmetric-key primitives. Being
efficient and constant-round, our protocols are best suited for high
latency networks such as the Internet. Designed in the Boolean
world, our protocols are built on the semi-honest variant of the
distributed garbling scheme of [64] while leveraging the techniques
of seed distribution and Attested Oblivious Transfer of [25]. The
generality of our protocols is such that they can accommodate any
passively secure distributed garbling scheme as a building block.
Our theoretical findings are backed with implementation results
with the choice of benchmark circuits AES-128 and SHA-256.
5PC with Fairness and Unanimous Abort. In a minimal network
of pairwise-secure channels, we achieve fairness and unanimous
abort in 5PC with performance almost on par with [25], all con-
suming 8 rounds. On a technical note, building on [25], we achieve
fairness by ensuring a robust output computation phase even when
the adversary chooses not to participate in the rest of the output
computation on learning the output herself. This is realized using
techniques which enforce that, in order to learn the output herself,
the adversary must first aid at least one honest party compute the
correct output. Further, we employ techniques to allow this honest
party to release the output and convince about the correctness of
the same to remaining honest parties. Our 5PC with unanimous
abort is obtained by simplifying the fair construct such that the
adversary can learn the output herself without any aid from honest
parties, but if she helps at least one honest party get the output,
Session 7C: Secure Computing VCCS ’19, November 11–15, 2019, London, United Kingdom1574then that honest party aids fellow honest parties to get the output
(as in fair construct).
Both our 5PC protocols with fairness and unanimous abort can
√
n corruptions
be extended to n parties under the constraint of t =
which was established in [25].
5PC with GOD. Our protocol uses point-to-point channels and a
broadcast channel. The latter is inevitable as we use optimal thresh-
old [32]. As broadcast is expensive in real-time, we limit broadcast
communication to be minimal and primarily, independent of cir-
cuit, input and output size. Our implementation uses a software
broadcast based on Dolev-Strong protocol [41]. On the technical
side, our protocol relies on 2-robust techniques– 4-party 2-private
replicated secret sharing (RSS) scheme for input distribution and
seed-distribution of [25] to ensure each party’s role is emulated
by two other parties. These strategies ensure that each piece of
intermediate data is with a 3-party committee and any wrong-doing
by at most 2 parties will ensue conflict. When a conflict occurs, we
determine a smaller instance of a 3PC with at most 1 corruption
to compute the output robustly. Our technical innovations come
from maintaining– (A) input privacy, while making two 3-party
committees, one formed by RSS and one by seed-distribution, in-
teract; (B) input consistency across the 3PC and outer 5PC. Due to
the use of customized tools for small parties such as RSS, conflict
identification and running a smaller 3PC instance, this protocol
cannot be scaled to n-parties while retaining the goal of efficiency.
Empirical Comparison. A consolidated view of our results is pre-
sented below outlining the security achieved, rounds, use of broad-
cast (BC) and empirical values. The values indicate overhead in
maximum runtime latency in LAN , WAN and total communication
(CC) over [25] that offers selective abort in 8 rounds. The range is
composed over the choice of circuits: AES-128, SHA-256 and the
left value in the range corresponds to AES, while the right value
indicates SHA. AES is a smaller circuit, with 33616 gates, compared
to 236112 gates of SHA. (*: The total rounds is computed plugging
in the state of the art robust 3PC [24]. The rounds for GOD is stated
assuming broadcast channel availability in ours and [24]).
✗
✗
✓ [32]
✓ [32]
0.2-0.01
0.28-0.03
1.16-0.82
2.26-2.33
Rounds BC
8
8
6
12*
LAN ( ms) WAN ( s) CC ( MB)