User: How to write a TCP server using Python?
Assistant: The following is a simple code example of using Python to write a TCP server: ```python import socket # create socket object server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # bind IP address and port number server_socket.bind( ('0.0.0.0', 8888)) # Start listening server_socket.listen() # Socket object and client address for communication (client_socket, client_address) = server_socket.accept() # Receive the data sent by the client and send it Response data = client_socket.recv(1024) client_socket.send(b'Hello, world!') # Close the socket connection client_socket.close() server_socket.close() ``` In this example, we first create a socket object, And use the bind() method to bind it to the IP address and port number. Then call the listen() method to start listening for connection requests from clients. When a client connects to the server, the accept() method will return a socket object for communication and the client address. We can use the recv() method to receive the data sent by the client, and use the send() method to send the response. Finally close the socket connection. Of course, the above is just a simple example, and an actual TCP server needs to consider more issues such as security, performance, and robustness.