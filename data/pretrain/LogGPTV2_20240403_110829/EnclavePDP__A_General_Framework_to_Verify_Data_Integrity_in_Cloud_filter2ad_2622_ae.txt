throughput of EnclavePDP is still in the same order of magni-
tude as the native PDP, which indicates the overhead caused
by EncalvePDP is still acceptable for practical deployment.
7 Related Works
Provable Data Possession Schemes. Many data integrity ver-
iﬁcation schemes [7–16], [30, 45, 46] have been proposed.
Among them, SEPDP [10], DPDP [7], and FlexDPDP [8]) pro-
vided support to verify dynamic data. Mirror [16], CPOR [12]
and Iris [31] extended PDP schemes to provide data integrity
veriﬁcation with data recovery if any data corruption is iden-
tiﬁed, i.e., proof of retrievability (POR) schemes. [11, 30]
designed the integrity check of static data for multiple copies.
PPPAS [19], DHTPA [18] and Qruta [14] proposed privacy-
preserving auditing schemes using third parties. Many liter-
ature surveys (e.g., [25–29]) presented comprehensive sum-
maries and comparison of the existing PDP scheme by deﬁn-
ing a taxonomy of existing PDP schemes. However, these
surveys primarily focus on a summary of the existing PDP
schemes, without any practical implementation or evaluation
of them on real-world cloud storage servers.
Securing Cloud Storage Systems. DEPSKY [47] proposed
a cloud-of-clouds storage system, storing data on several
cloud services to improve the data integrity and retrievability.
Depot [48] designed a cloud storage system to guarantee the
consistency of operations on data. It also protects the integrity
of data by preventing unauthorized nodes from accessing the
data objects. DEPSKY [47] still trusts the cloud storage plat-
forms, while Depot [48] mainly focuses on the consistency
and availability of the data. CloudProof [49] used crypto-
graphic keys to create access control policies, which allow
users to detect violations of integrity and also prove those
violations to a third party. CloudProof mainly aims to provide
security guarantees for the SLA (Service Level Agreement)
to ensure that users will receive a certain compensation in
case of cloud misbehavior.
Intel SGX-based Approaches. LibSEAL [37] presented a
secure audit library to detect service integrity violations (e.g.,
committing operations of Git) by creating non-repudiable au-
dit logs protected by Intel SGX. LibSEAL is implemented
as a TLS library, which is not applicable to verify data in-
tegrity. EnclaveDB [50] is a secure database that guarantees
the conﬁdentiality and integrity of data and queries by placing
sensitive data (tables, indexes and other metadata) in Intel
SGX enclave. DelegaTEE [51] designed a brokered delega-
tion scheme, which utilizes SGX for users to securely delegate
their credentials of service providers to others. Ohrimenko et
al [52] rely on SGX to perform privacy-preserving machine
learning on collaborative data owned by multi-parties.
8 Conclusion
In order to enable users to independently and conﬁdentially
verify the integrity of their outsourced data on cloud stor-
age servers, we present EnclavePDP, a general framework
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    205
that utilizes Intel SGX to perform data integrity veriﬁcation.
We tailored Intel SGX SSL library and ported PBC libraries
into Intel SGX. Then 10 representative PDP schemes are im-
plemented based on EnclavePDP framework. We deployed
EnclavePDP on a real-world cloud application (FastDFS) to
evaluate its practicality. The experimental results show that
EnclavePDP introduced a reasonable runtime overhead for dif-
ferent sizes of ﬁles, thus feasible to be deployed with existing
cloud storage services via its convenient interfaces.
Acknowledgments
We would like to thank the anonymous reviewers for their
constructive comments. This work is supported in part by
Strategic Priority Research Program of Chinese Academy
of Sciences (No.XDC02010900), National Key Research
and Development Program of China (No.2016QY04W0903),
Beijing Municipal Science and Technology Commission
(No.Z191100007119010) and National Natural Science Foun-
dation of China (No.61772078). Peng Liu is supported by
NSF CNS-1814679.
References
[1] Dropbox bug wipes some users’ ﬁles from the
https://www.engadget.com/2014/10/13/
cloud.
dropbox-selective-sync-bug/, 2014.
[2] Amazon’s
cloud
crash
destroyed many customers’
//www.businessinsider.com/amazon-lost-data
-2011-4, 2011.
disaster
data.
permanently
https:
[3] Tencent
data
cloud says
‘improper operations’
led
https://www.scmp.com/
loss.
to
tech/article/2158785/tencent-cloud-sa
ys-improper-operations-led-data
-loss-client-it-seeks-implement, 2018.
[4] Christian Priebe, Divya Muthukumaran, Dan O’ Keeffe,
David Eyers, Brian Shand, Ruediger Kapitza, and Pe-
ter Pietzuch. Cloudsafetynet: Detecting data leakage
between cloud tenants. In Proc. of ACM CCSW, 2014.
[5] A look back: U.s. healthcare data breach trends.
https://infosec.uthscsa.edu/sites/default/
files/HITRUST_Report-US_Healthcare_Data
_Breach_Trends.pdf, 2012.
[7] Chris Erway, Alptekin Küpçü, Charalampos Papaman-
thou, and Roberto Tamassia. Dynamic provable data
possession. In Proc. of ACM CCS, 2009.
[8] Ertem Esiner, Adilet Kachkeev, Samuel Braunfeld,
Alptekin Kupcu, and Oznur Ozkasap. Flexdpdp: Flexlist-
based optimized dynamic provable data possession.
ACM Transactions on Storage, 12(4):23, 2016.
[9] Giuseppe Ateniese, Randal Burns, Reza Curtmola,
Joseph Herring, Lea Kissner, Zachary Peterson, and
Dawn Song. Provable data possession at untrusted stores.
In Proc. of ACM CCS, 2007.
[10] Giuseppe Ateniese, Roberto Di Pietro, Luigi V Mancini,
and Gene Tsudik. Scalable and efﬁcient provable data
possession. In Proc. of ACM SecureComm, 2008.
[11] Reza Curtmola, Osama Khan, Randal Burns, and
Giuseppe Ateniese. Mr-pdp: Multiple-replica provable
data possession. In Proc. of IEEE ICDCS, 2008.
[12] Hovav Shacham and Brent Waters. Compact proofs of
retrievability. In Proc. of ASIACRYPT, 2008.
[13] Łukasz Krzywiecki and Mirosław Kutyłowski. Proof of
possession for cloud storage via lagrangian interpolation
techniques. In Proc. of NSS, 2012.
[14] B. Wang, B. Li, and H. Li. Oruta: privacy-preserving
public auditing for shared data in the cloud. IEEE Trans-
actions on Cloud Computing, 2(1):43–56, Jan 2014.
[15] Boyang Wang, Baochun Li, and Hui Li. Knox: privacy-
preserving auditing for shared data with large groups in
the cloud. In Proc. of ACNS, 2012.
[16] Frederik Armknecht, Ludovic Barman, Jens-Matthias
Bohli, and Ghassan O. Karame. Mirror: Enabling proofs
of data replication and retrievability in the cloud. In
Proc. of USENIX Security, 2016.
[17] J. Shen, J. Shen, X. Chen, X. Huang, and W. Susilo. An
efﬁcient public auditing protocol with novel dynamic
structure for cloud data. IEEE Transactions on Infor-
mation Forensics and Security, 12(10):2402–2415, Oct
2017.
[18] H. Tian, Y. Chen, C. Chang, H. Jiang, Y. Huang, Y. Chen,
and J. Liu. Dynamic-hash-table based public auditing
for secure cloud storage. IEEE Transactions on Services
Computing, 10(5):701–714, Sep. 2017.
[6] Q. Wang, C. Wang, K. Ren, W. Lou, and J. Li. Enabling
public auditability and data dynamics for storage secu-
rity in cloud computing. IEEE Transactions on Parallel
and Distributed Systems, 22(5):847–859, May 2011.
[19] C. Wang, S. S. M. Chow, Q. Wang, K. Ren, and W. Lou.
Privacy-preserving public auditing for secure cloud stor-
age. IEEE Transactions on Computers, 62(2):362–375,
Feb 2013.
206    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
[20] Intel R(cid:13) software guard extensions programming
reference.
https://software.intel.com/sites/
default/files/managed/48/88/329298-002.pdf,
2014.
[21] Intel R(cid:13) software guard extensions ssl.
github.com/intel/intel-sgx-ssl, 2019.
https://
[22] Gnu multiple precision arithmetic trusted library for
intel R(cid:13) software guard extensions. https://github
.com/intel/sgx-gmp, 2019.
[23] Pbc library. https://crypto.stanford.edu/pbc/,
2019.
[24] Fastdfs.
https://github.com/happyfish100/fa
stdfs, 2013.
[25] Faheem Zafar, Abid Khan, Saif Ur Rehman Malik, Man-
soor Ahmed, Adeel Anjum, Majid Iqbal Khan, Nadeem
Javed, Masoom Alam, and Fuzel Jamil. A survey of
cloud computing data integrity schemes: Design chal-
lenges, taxonomy and future trends. Computers & Secu-
rity, 65:29 – 49, 2017.
[26] S. G. Worku, Z. Ting, and Q. Zhi-Guang. Survey on
cloud data integrity proof techniques. In Proc. of IEEE
AsiaJCIS, 2012.
[27] Nouha Oualha, Jean Leneutre, and Yves Roudier. Veri-
fying remote data integrity in peer-to-peer data storage:
A comprehensive survey of protocols. Peer-to-Peer Net-
working and Applications, 5(3):231–243, Sep 2012.
[28] Mehdi Sookhak, Hamid Talebian, Ejaz Ahmed, Abdul-
lah Gani, and Muhammad Khurram Khan. A review on
remote data auditing in single cloud server: Taxonomy
and open issues. Journal of Network and Computer
Applications, 43:121 – 141, 2014.
[29] Lei Zhou, Anmin Fu, Shui Yu, Mang Su, and Boyu
Kuang. Data integrity veriﬁcation of the outsourced
big data in the cloud environment: A survey. Journal of
Network and Computer Applications, 122:1 – 15, 2018.
[30] Ayad F Barsoum and M Anwar Hasan. Integrity ver-
iﬁcation of multiple data copies over untrusted cloud
servers. In Proc. of IEEE Computer Society CCGRID,
2012.
[31] Emil Stefanov, Marten van Dijk, Ari Juels, and Alina
Oprea. Iris: A scalable cloud ﬁle system with efﬁcient
integrity checks. In Proc. of ACM ACSAC, 2012.
[32] Giuseppe Ateniese, Seny Kamara, and Jonathan Katz.
Proofs of storage from homomorphic identiﬁcation pro-
tocols. In Proc. of ASIACRYPT, 2009.
[33] Boneh–lynn–shacham. Accessed on April 10, 2019.
[34] Ming-Wei Shih, Sangho Lee, Taesoo Kim, and Marcus
Peinado. T-sgx: Eradicating controlled-channel attacks
against enclave programs. In Proc. of NDSS, 2017.
[35] S. Gueron. Memory encryption for general-purpose
processors. IEEE Security Privacy, 14(6):54–62, Nov
2016.
[36] Innovative technology for cpu based attestation and
https://software.intel.com/en-us/
sealing.
articles/innovative-technology-for-cpu-b
ased-attestation-and-sealing, 2013.
[37] Pierre-Louis Aublin, Florian Kelbert, Dan O’Keeffe,
Divya Muthukumaran, Christian Priebe, Joshua Lind,
Robert Krahn, Christof Fetzer, David Eyers, and Peter
Pietzuch. Libseal: Revealing service integrity violations
using trusted execution. In Proc. of ACM EuroSys, 2018.
[38] Elliptic-curve
difﬁe–hellman.
https:
//en.wikipedia.org/wiki/Elliptic-curve_
Diffie%E2%80%93Hellman, 2019.
[39] epoll.
2019.
https://en.wikipedia.org/wiki/Epoll,
[40] Chris Erway, Alptekin Küpçü, Charalampos Papaman-
thou, and Roberto Tamassia. Dynamic provable data
possession. In Proceedings of the 16th ACM confer-
ence on Computer and communications security, pages
213–222. ACM, 2009.
[41] Intel R(cid:13) digital
software
random
implementation
number
(drng)
https://software.intel.com/en-us/articles/
intel-digital-random-number-genera
tor-drng-software-implementation-guide,
2014.
guide.
generator
[42] Intel(r) software guard extensions (sgx) protected code
https://github.com/
loader (pcl) for linux* os.
intel/linux-sgx-pcl, 2017.
[43] Azure
conﬁdential
computing.
https:
//azure.microsoft.com/en-us/solutions/
confidential-compute/, 2019.
[44] Bls
signatures: better than schnorr.
https:
//medium.com/cryptoadvance/bls-signa
tures-better-than-schnorr-5a7fe30ea716,
2018.
[45] Yevgeniy Dodis, Salil Vadhan, and Daniel Wichs. Proofs
of retrievability via hardness ampliﬁcation. In Proc. of
Theory of Cryptography Conference, 2009.
[46] Kevin D. Bowers, Ari Juels, and Alina Oprea. Proofs of
retrievability: Theory and implementation. In Proc. of
ACM CCSW, 2009.
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    207
[47] Alysson Neves Bessani, Miguel Correia, Bruno
Quaresma, Fernando André, and Paulo Sousa. Depsky:
Dependable and secure storage in a cloud-of-clouds.
TOS, 9(4):12:1–12:33, 2013.
[48] Prince Mahajan, Srinath Setty, Sangmin Lee, Allen
Clement, Lorenzo Alvisi, Mike Dahlin, and Michael
Walﬁsh. Depot: Cloud storage with minimal trust. In
Proc. of UNSENIX OSDI, 2010.
[49] David Molnar, Jay Lorch, , and Raluca Ada and Popa.
Enabling security in cloud storage slas with cloudproof.
Technical report, May 2010.
[50] C. Priebe, K. Vaswani, and M. Costa. Enclavedb: A
secure database using sgx. In Proc. of IEEE SP, 2018.
[51] Sinisa Matetic, Moritz Schneider, Andrew Miller, Ari
Juels, and Srdjan Capkun. Delegatee: Brokered delega-
tion using trusted execution environments. In Proc. of
USENIX Security, 2018.
[52] Olga Ohrimenko, Felix Schuster, Cedric Fournet, Aastha
Mehta, Sebastian Nowozin, Kapil Vaswani, and Manuel
Costa. Oblivious multi-party machine learning on
trusted processors. In Proc. of USENIX Security, 2016.
208    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association