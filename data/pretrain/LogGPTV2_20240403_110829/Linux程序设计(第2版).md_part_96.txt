### 第16章 X窗口系统的程序设计

#### 6. 按钮
按钮共享同一个全局变量 `lang`，该变量保存当前选中的值，从而确保用户每次只能选择一个单选按钮。此外，我们定义了两个下压按钮：一个用于退出应用程序，另一个调用 `showVars` 过程来输出当前的选择。

选择框通过 `changeState` 命令改变三个单选按钮的整体状态，根据选择框是否被选中在活跃和不活跃状态之间切换。下压按钮 `showValue` 通过 `showVars` 命令输出当前的选择。

按钮还支持其他选项，如鼠标掠过方法等。详细信息请使用 `man` 命令查阅 `button`、`checkbutton` 和 `option` 的手册页。标题签和按钮还支持位图（bitmap）和图像（image）作为它们的图案。我们将在后续章节学习图像的用法。

以 `grid` 开头的语句用于管理创建素材的几何尺寸。我们将在稍后介绍几何尺寸管理。

#### 5. 消息
消息（Message）类似于标签，可以用来显示多行文本。与标签不同的是，消息能够自动对文本进行换行，并根据纵横比显示在窗口中。消息素材可以按指定的段落对齐方式显示文本，并处理非打印字符。例如：

```tcl
#!/usr/bin/wish -f
message .m -aspect 400 -justify center \
*This is a message widget with aspect ratio 400 and\
\256\257\258 and tabs\tetc...
pack .m
```

此示例创建了一个包含控制字符的简单消息素材。

#### 6. 输入框
输入框（Entry）是一个单行文本素材，用于输入和显示单行文本。输入框还支持许多编辑文本的键盘按键绑定。以下是一个简单的登录程序 `login.tk`，它处理用户的登录操作，但未提供密码验证代码。

**动手试试：创建输入框**

1. 设置登录窗口的外观并定义全局变量 `loginName`：
   ```tcl
   set loginName "timB"
   label .name -text "Login:"
   entry .nameEntry -textvariable loginName
   label .passwd -text "Password:"
   entry .passwdEntry -textvariable passwd -show "*"
   ```

2. 从 `.nameEntry` 选取全部文字：
   ```tcl
   .nameEntry selection from 0
   .nameEntry selection to end
   ```

3. 在屏幕上排列这些素材：
   ```tcl
   grid .name -row 0 -column 0 -sticky w
   grid .nameEntry -row 0 -column 1 -columnspan 2 -sticky w
   ```

运行此程序时，将看到如下窗口：
```
login.tk
Login: timB
Password:
```

**操作注释：**
前五行代码创建了两个标签和两个输入框素材，接下来的两行代码选取输入框中的文字。最后四行代码将素材排列整齐。

X 定义了一个标准机制来提供和检索“选取物”，而 `selection` 命令是 Tk 用来管理客户间通信的方法。我们在本节介绍 `selection` 是为了让读者了解如何在程序中设置选取物，以便其他非 Tk 的 X 客户端可以使用 X 窗口约定符号检索选取物。

输入框素材通过键盘按键绑定实现内部文本编辑操作。常见的绑定包括：
- `Ctrl-a`：将插入光标移动到输入框文字的开始处
- `Ctrl-e`：将插入光标移动到输入框文字的结尾处
- `Ctrl-l`：选取输入框中的全部文字

#### 7. 列表框
列表框（ListBox）用于显示一组字符串，并允许用户选择一个或多个项目。以下是一个示例程序，通过列表框设计出一个 Motif 风格的提示对话框。

**动手试试：列表框**

1. 创建用户界面元素：
   ```tcl
   #!/usr/bin/wish -f
   scrollbar .h -orient horizontal -command ".list xview"
   scrollbar .v -command ".list yview"
   listbox .list -setgrid 1 -xscrollcommand ".h set" -yscrollcommand ".v set" -width 20 -height 10
   label .label -text "File Selected:" -justify left
   entry .e -textvariable fileSelected
   ```

2. 使用 `grid` 几何尺寸管理器：
   ```tcl
   grid .list -row 0 -column 0 -columnspan 2 -sticky nwe
   grid .h -row 1 -column 0 -columnspan 2 -sticky we
   grid .v -row 0 -column 2 -sticky ns
   grid .label -row 2 -column 0
   grid .e -row 3 -column 0 -columnspan 3 -sticky we
   grid columnconfigure . 0 -weight 1
   grid rowconfigure . 0 -weight 1
   ```

3. 初始化列表框：
   ```tcl
   foreach file [glob *] {
       .list insert end $file
   }
   ```

4. 绑定事件处理器：
   ```tcl
   bind .list <ButtonRelease-1> {global fileSelected; set fileSelected [.list get [.list curselection]]}
   ```

运行此程序时，将看到如下窗口：
```
list.tk
File Selected:
```

**操作注释：**
程序先创建两个滚动条，再将它们与列表框关联起来。通过滚动条的 `-command` 选项和列表框的 `-xview` 和 `-yview` 命令建立内连接。接着，通过 `foreach` 循环初始化列表框内容。Tcl 命令 `glob` 用于模板匹配并返回文件名。

列表框还提供了其他配置方法，如 `delete`、`get`、`index`、`insert` 和 `scan`。

#### 8. 滚动条
滚动条（Scrollbar）通常与其他素材关联，使显示区可滚动。例如，在上例中，列表框的显示区由两个滚动条 `.h` 和 `.v` 控制：
```tcl
scrollbar .v -command ".list yview"
```

列表框则通过以下命令获知这一内连接情况：
```tcl
-listbox .list -yscrollcommand ".v set"
```

我们将这两种素材绑定在一起，并通知对方行为，从而实现通信。下一小节将介绍隐含内连接的建立方法。

#### 9. 滑块
滑块（Scale）显示一个整数值，用户通过移动滑块来设定这个值。以下是一个简单示例：
```tcl
#!/usr/bin/wish -f
set foo 100
label .l -text "Choose a Value:" -justify left
scale .s -from 0 -to 2000 -resolution 1 -showvalue true -length 300 -variable foo
entry .e -width 6 -justify left -textvariable foo
pack .l -side top -anchor nw
pack .s .e -side left -padx 4 -fill x
```

运行此程序时，将看到如下窗口：
```
scale.tk
Choose a Value:
627
627
D
500
1000 1500 2000
```

这里，滑块和输入框通过全局变量 `foo` 共享一个隐含的内连接。如果刷新滑块中的数值，输入框里的值也会自动改变。

Tk 素材的事件处理器中明确使用的所有变量都是全局范围的。如果变量不存在，Tk 将自动创建一个。因此，在上面的示例中，变量 `foo` 是一个全局变量，滑块和列表框共享这个变量，从而建立了隐含的联系。

#### 10. 文本
Tk 的文本（Text）素材用于创建多行可编辑文本，支持多种属性，如标签（tag）、书签（mark）和嵌入窗口（embedded window）。

- 标签允许文本的不同部分显示为不同的字体、颜色和凹凸效果。标签还可以与 Tcl 命令关联，以响应用户动作。
- 书签记录文本中的有趣位置。
- 嵌入窗口必须以文本素材作为其父素材。

以下是一个演示文本素材部分特性的示例程序。

**动手试试：文本操作**

1. 创建一个垂直滚动条并将其连接到文本素材：
   ```tcl
   #!/usr/bin/wish -f
   scrollbar .y -command ".t yview"
   text .t -height 25 -yscrollcommand ".y set"
   pack .y -side left -fill y
   pack .t -side left -fill both -expand 1
   ```

2. 创建嵌入窗口：
   ```tcl
   set image [image create photo -file mickey.gif -width 200 -height 200]
   label .t.1 -image $image
   button .t.b -text "Hello World" -command "puts Hi"
   ```

3. 配置文本窗口的标签：
   ```tcl
   .t tag configure bold -font "-*-Courier-Bold-R-Normal--*-120-*-*-*-*-*-*"
   .t tag configure blueFg -foreground blue
   .t tag configure yellowBg -background yellow
   .t tag configure yellowBgBlueFg -background yellow -foreground red
   .t tag configure underline -underline 1
   .t tag configure raised -relief raised -borderwidth 2
   .t tag configure left -justify left
   .t tag configure center -justify center
   .t tag configure right -justify right
   .t tag configure super -offset 4p
   ```

4. 插入文本并应用标签：
   ```tcl
   .t insert end "Tk text widget is so versatile that it can support many display styles:\n"
   .t insert end "You can change the background" "bold"
   .t insert end " or foreground" "blueFg"
   .t insert end " or both" "yellowBgBlueFg"
   .t insert end "\nUnderlining" "underline"
   .t insert end " and raised text" "raised"
   .t insert end "\nLeft, center, and right justified text\n" "left center right"
   .t insert end "Superscript" "super"
   ```

运行此程序时，将看到一个多行可编辑文本窗口，其中包含各种样式和嵌入窗口。

加入Java编程群：524621833