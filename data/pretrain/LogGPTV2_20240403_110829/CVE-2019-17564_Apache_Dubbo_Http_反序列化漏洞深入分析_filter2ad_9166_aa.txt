# CVE-2019-17564 Apache Dubbo Http 反序列化漏洞深入分析
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
上一篇文章勉强算是把Shiro反序列化漏洞分析了一遍。
由于本人是一个初学者，也没啥学习方法，只能多看几个漏洞的分析过程了。
今天周末，来分析一下Dubbo框架的RCE漏洞。
也许看多了，量变引发质变，也就会自己分析了吧。
## Dubbo简介
官网: 
Apache Dubbo
是一个基于Java的高性能，轻量级的RPC框架。Dubbo提供了三个关键功能，包括基于接口的远程呼叫，容错和负载平衡以及自动服务注册和发现。
功能列表：【基于透明接口的RPC、智能负载均衡、自动服务注册和发现、高扩展性、运行时流量路由、可视化服务治理】  
GitHub： 
Dubbo支持Dubbo、RMI、Hessian、HTTP、WebService、Thrift、Native
Thrift、Memcached、Redis、Rest、JsonRPC、XmlRPC、JmsRpc等协议，官方推荐使用Dubbo协议。
## 漏洞描述
在启用HTTP远程处理的Dubbo应用程序中发生不安全的反序列化。如果此实例启用了HTTP，则攻击者可能会提交其中包含Java对象的POST请求，以完全破坏Apache
Dubbo的Provider实例。
Dubbo HTTP实例尝试对Java ObjectStream中的数据进行反序列化，该Java
ObjectStream包含一组恶意类，通常称为小工具链，其调用会导致执行恶意代码。在这种情况下，有问题的恶意代码允许使用任意OS命令。
## 影响范围
2.7.0 
解压：windows系统利用安装的解压软件直接解压。
配置：[官方配置文档](https://dubbo.apache.org/zh-cn/docs/admin/install/zookeeper.html)
在根目录新建文件夹`data`
重命名文件`zookeeper-3.3.3\conf\zoo_sample.cfg`为`zookeeper-3.3.3\conf\zoo.cfg`
修改文件`zookeeper-3.3.3\conf\zoo.cfg`中`dataDir=/export/crawlspace/mahadev/zookeeper/server1/data`为`dataDir=刚新建的data目录的绝对路径`
运行： Windows系统双击 `zookeeper-3.3.3\bin\zkServer.cmd`
看到如下内容，启动成功。绑定本地端口2181
    ·
    2020-09-04 16:16:47,110 - INFO  [main:ZooKeeperServerMain@94] - Starting server
    ·
    ·
    2020-09-04 16:16:51,675 - INFO  [main:ZooKeeperServer@663] - tickTime set to 2000
    2020-09-04 16:16:51,686 - INFO  [main:ZooKeeperServer@672] - minSessionTimeout set to -1
    2020-09-04 16:16:51,687 - INFO  [main:ZooKeeperServer@681] - maxSessionTimeout set to -1
    2020-09-04 16:16:51,988 - INFO  [main:NIOServerCnxn$Factory@143] - binding to port 0.0.0.0/0.0.0.0:2181
    2020-09-04 16:16:52,004 - INFO  [main:FileTxnSnapLog@208] - Snapshotting: 0
###  Dubbo环境搭建
####  下载和配置
下载：
由于只有http协议受影响，所以提取出http协议部分。`dubbo-samples-master\java\dubbo-samples-http`
配置：
修改`dubbo-samples-http\poc.xml`配置
  1. 改为受影响版本，这里使用2.7.3 
        2.7.7
    改为
    2.7.3
  2. 加入一个恶意的GadGets，比如：commons-collections-4 
     org.apache.commons
     commons-collections4
     4.0
修改`dubbo-samples-http\src\main\resources\spring\http-provider.xml`配置
    // 确认zookeeper的IP和端口
    // 配置dubbo的端口和ip，添加host字段，值为本机IP
####  导入idea
英文版IDEA: File->New->Project from existing resources ->选择目录”dubbo-samples-http”里面的pom.xml
中文版IDEA: 文件->New->项目从现有源->选择目录”dubbo-samples-http”里面的pom.xml
这时候就开始下载`Maven`项目的依赖了，一般会很慢。更换国内`Maven`源下载依赖会快很多，参考下面文章。
####  启动
找到路径`\dubbo-samples-http\src\main\java\org\apache\dubbo\samples\http\HttpProvider.java`，右键->运行(U)
‘HttpProvider.main()’
看到如下内容，表示启动成功：
    [04/09/20 05:45:14:014 CST] main  INFO zookeeper.ZookeeperRegistry:  [DUBBO] Load registry cache file ···
    [04/09/20 05:45:14:014 CST] main  INFO zookeeper.ZookeeperTransporter:  [DUBBO] find valid zookeeper ····
    [04/09/20 05:45:14:014 CST] main  INFO zookeeper.ZookeeperRegistry:  [DUBBO]  Register: http://192.168.186.1:8080/org.apache.dubbo.samples.http.api.DemoService?······
    [04/09/20 05:45:14:014 CST] main  INFO zookeeper.ZookeeperRegistry:  [DUBBO] Subscribe:····
    [04/09/20 05:45:14:014 CST] main  INFO zookeeper.ZookeeperRegistry:  [DUBBO] Notify urls for ····
    dubbo service started
## 漏洞分析
根据网上的资料，在`org.apache.dubbo.remoting.http.servlet.DispatcherServlet#service:43`处设置断点。