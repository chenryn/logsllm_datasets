    ``` literallayout
    # systemctl daemon-reload
    ```
7.  启用 `ipa-activate-all.timer`{.literal}:
    ``` literallayout
    # systemctl enable ipa-activate-all.timer
    ```
8.  启动 `ipa-activate-all.timer`{.literal}:
    ``` literallayout
    # systemctl start ipa-activate-all.timer
    ```
9.  （可选）验证 `ipa-activate-all.timer`{.literal} 守护进程正在运行：
    ``` literallayout
    # systemctl status ipa-activate-all.timer
    ● ipa-activate-all.timer - Scan IdM every minute for any stage users that must be activated
       Loaded: loaded (/etc/systemd/system/ipa-activate-all.timer; enabled; vendor preset: disabled)
       Active: active (waiting) since Wed 2020-06-10 16:34:55 CEST; 15s ago
      Trigger: Wed 2020-06-10 16:35:55 CEST; 44s left
    Jun 10 16:34:55 server.idm.example.com systemd[1]: Started Scan IdM every minute for any stage users that must be activated.
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-IdM-for-external-provisioning-of-users_managing-users-groups-hosts.html#adding-an-IdM-stage-user-defined-in-an-LDIF-file_configuring-IdM-for-external-provisioning-of-users}添加 LDIF 文件中定义的 IdM 阶段用户 {.title}
:::
本节论述了外部置备系统的管理员如何访问 IdM LDAP，并使用 LDIF
文件添加暂存用户。下例中演示了添加一个用户，但可以将多个用户以批量模式添加到一个文件中。
::: itemizedlist
**先决条件**
-   IdM
    [**管理员已为其创建了调配器帐户及其密码**]{.strong}。[详情请参阅为自动激活暂存用户帐户准备
    IdM
    帐户](#configuring-IdM-for-external-provisioning-of-users_managing-users-groups-hosts.html#preparing-IdM-accounts-for-automatic-activation-of-stage-user-accounts_configuring-IdM-for-external-provisioning-of-users "准备 IdM 帐户以自动激活暂存用户帐户"){.link}。
-   [**作为外部管理员，您知道调配器帐户的密码**]{.strong}。
-   您可以从 LDAP 服务器通过 SSH 连接到 IdM 服务器。
-   您可以提供 IdM
    阶段用户必须允许正确处理用户生命周期的最小属性集，即：
    ::: itemizedlist
    -   可 `分辨名称`{.literal} (dn)
    -   `通用名称`{.literal} (cn)
    -   `姓氏`{.literal} (sn)
    -   The `uid`{.literal}
    :::
:::
::: orderedlist
**流程**
1.  在外部服务器上，创建一个 LDIF 文件，其中包含有关新用户的信息：
    ``` literallayout
    dn: uid=stageidmuser,cn=staged users,cn=accounts,cn=provisioning,dc=idm,dc=example,dc=com
    changetype: add
    objectClass: top
    objectClass: inetorgperson
    uid: stageidmuser
    sn: surname
    givenName: first_name
    cn: full_name
    ```
2.  将 LDIF 文件从外部服务器传输到 IdM 服务器：
    ``` literallayout
    $ scp add-stageidmuser.ldif PI:EMAIL:/provisionator/
    Password:
    add-stageidmuser.ldif                                                                                          100%  364   217.6KB/s   00:00
    ```
3.  使用 `SSH`{.literal} 协议连接到 IdM 服务器作为
    [**置备程序**]{.strong} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [provisionator@server ~]$
    ```
4.  在 IdM 服务器上，获取置备程序帐户的 Kerberos ticket-granting
    ticket(TGT)：
    ``` literallayout
    [provisionator@server ~]$ kinit provisionator
    ```
5.  使用 -f 选项和 LDIF 文件的名称输入 `ldapadd`{.literal} 命令。指定
    IdM 服务器的名称和端口号：
    ``` literallayout
    ~]$ ldapadd -h server.idm.example.com -p 389 -f  add-stageidmuser.ldif
    SASL/GSSAPI authentication started
    SASL username: PI:EMAIL
    SASL SSF: 256
    SASL data security layer installed.
    adding the entry "uid=stageidmuser,cn=staged users,cn=accounts,cn=provisioning,dc=idm,dc=example,dc=com"
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-IdM-for-external-provisioning-of-users_managing-users-groups-hosts.html#adding-an-IdM-stage-user-directly-from-the-CLI-using-ldapmodify_configuring-IdM-for-external-provisioning-of-users}使用 ldapmodify 直接从 CLI 添加 IdM 暂存用户 {.title}
:::
本节论述了外部调配系统的管理员如何访问身份管理(IdM)LDAP，并使用
`ldapmodify`{.literal} 实用程序添加暂存用户。
::: itemizedlist
**先决条件**
-   IdM
    [**管理员已为其创建了调配器帐户及其密码**]{.strong}。[详情请参阅为自动激活暂存用户帐户准备
    IdM
    帐户](#configuring-IdM-for-external-provisioning-of-users_managing-users-groups-hosts.html#preparing-IdM-accounts-for-automatic-activation-of-stage-user-accounts_configuring-IdM-for-external-provisioning-of-users "准备 IdM 帐户以自动激活暂存用户帐户"){.link}。
-   [**作为外部管理员，您知道调配器帐户的密码**]{.strong}。
-   您可以从 LDAP 服务器通过 SSH 连接到 IdM 服务器。
-   您可以提供 IdM
    阶段用户必须允许正确处理用户生命周期的最小属性集，即：
    ::: itemizedlist
    -   可 `分辨名称`{.literal} (dn)
    -   `通用名称`{.literal} (cn)
    -   `姓氏`{.literal} (sn)
    -   The `uid`{.literal}
    :::
:::
::: orderedlist
**流程**
1.  使用 `SSH`{.literal} 协议使用您的 IdM 身份和凭证连接到 IdM 服务器：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [provisionator@server ~]$
    ```
2.  [**获取置备程序帐户的**]{.strong} TGT，这是具有角色的 IdM
    用户来添加新阶段用户：
    ``` literallayout
    $ kinit provisionator
    ```
3.  输入 `ldapmodify`{.literal} 命令，并将 Generic Security Services
    API(GSSAPI)指定为用于身份验证的简单身份验证和安全层(SASL)机制。指定
    IdM 服务器的名称和端口：
    ``` literallayout
    # ldapmodify -h server.idm.example.com -p 389 -Y GSSAPI
    SASL/GSSAPI authentication started
    SASL username: PI:EMAIL
    SASL SSF: 56
    SASL data security layer installed.
    ```
4.  输入您要添加的用户的 The `dn`{.literal} ：
    ``` literallayout
    dn: uid=stageuser,cn=staged users,cn=accounts,cn=provisioning,dc=idm,dc=example,dc=com
    ```
5.  输入 [**add**]{.strong} 作为您要执行的更改类型：
    ``` literallayout
    changetype: add
    ```
6.  指定允许正确处理用户生命周期所需的 LDAP 对象类类别：
    ``` literallayout
    objectClass: top
    objectClass: inetorgperson
    ```
    您可以指定其他对象类。
7.  输入用户的 `uid`{.literal} ：
    ``` literallayout
    uid: stageuser
    ```
8.  输入用户的 `cn`{.literal}:
    ``` literallayout
    cn: Babs Jensen
    ```
9.  输入用户的姓氏：
    ``` literallayout
    sn: Jensen
    ```
10. 再次按 `Enter`{.literal} 键确认这是条目的末尾：
    ``` literallayout
    [Enter]
    adding new entry "uid=stageuser,cn=staged users,cn=accounts,cn=provisioning,dc=idm,dc=example,dc=com"
    ```
11. 使用 [**Ctrl**]{.strong} + [**C**]{.strong} 退出连接。
:::
::: title
**验证步骤**
:::
验证暂存条目的内容，以确保您的调配系统添加了所有必需的 POSIX
属性，并且暂存条目已就绪，可激活。
::: itemizedlist
-   要显示新阶段用户的 LDAP 属性，请输入
    `ipa stageuser-show --all --raw`{.literal} 命令：
    ``` literallayout
    $ ipa stageuser-show stageuser --all --raw
      dn: uid=stageuser,cn=staged users,cn=accounts,cn=provisioning,dc=idm,dc=example,dc=com
      uid: stageuser
      sn: Jensen
      cn: Babs Jensen
      has_password: FALSE
      has_keytab: FALSE
      nsaccountlock: TRUE
      objectClass: top
      objectClass: inetorgperson
      objectClass: organizationalPerson
      objectClass: person
    ```
    ::: orderedlist
    1.  请注意，通过 then `saccountlock`{.literal} 属性明确禁用该用户。
    :::
:::
:::
:::
[]{#managing-self-service-rules-in-idm-using-the-cli_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#managing-self-service-rules-in-idm-using-the-cli_managing-users-groups-hosts.html#managing-self-service-rules-in-idm-using-the-cli_managing-users-groups-hosts}第 7 章 使用 CLI 管理 IdM 中的自助服务规则 {.title}
:::
本章介绍了身份管理(IdM)中的自助服务规则，并描述了如何在命令行界面(CLI)中创建和编辑自助服务访问规则。
::: section
::: titlepage
# []{#managing-self-service-rules-in-idm-using-the-cli_managing-users-groups-hosts.html#self-service-access-control-in-idm_managing-self-service-rules-in-idm-using-the-cli}IdM 中的自助服务访问控制 {.title}
:::
自助服务访问控制规则定义 Identity Management(IdM)实体可以在其 IdM
目录服务器条目上执行的操作：例如，IdM 用户能够更新自己的密码。\
这种控制方法允许经过身份验证的 IdM 实体编辑其 LDAP
条目中的特定属性，但不允许对整个条目 `添加`{.literal} `或删除`{.literal}
操作。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
使用自助服务访问控制规则时要小心：
不当配置访问控制规则可能会意外地提升实体的特权。
:::
:::
::: section
::: titlepage
# []{#managing-self-service-rules-in-idm-using-the-cli_managing-users-groups-hosts.html#creating-self-service-rules-using-the-cli_managing-self-service-rules-in-idm-using-the-cli}使用 CLI 创建自助服务规则 {.title}
:::
这个步骤描述了使用命令行界面(CLI)在 IdM 中创建自助服务访问规则。
::: itemizedlist
**先决条件**
-   管理 IdM 或 [**User Administrator**]{.strong} 角色的管理员特权。
-   一个活跃的 Kerberos 票据。[详情请参阅使用 kinit 手动登录到
    IdM。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-kinit-to-log-in-to-ipa_logging-in-to-ipa-from-the-command-line){.link}
:::
::: itemizedlist
**流程**
-   要添加自助服务规则，请使用 `ipa selfservice-add`{.literal}
    命令并指定以下两个选项：
    ::: variablelist
    [`--permissions`{.literal}]{.term}
    :   设置 Access Control 指令(ACI) [**授权的读取和写入 []{.strong}
        权限**]{.strong}。
    [`--attrs`{.literal}]{.term}
    :   设置此 ACI 授予权限的属性的完整列表。
    :::
:::
例如，要创建一个自助服务规则，允许用户修改其自己的名称详情：\
``` literallayout
$ ipa selfservice-add "Users can manage their own name details" --permissions=write --attrs=givenname --attrs=displayname --attrs=title --attrs=initials
-----------------------------------------------------------
Added selfservice "Users can manage their own name details"
-----------------------------------------------------------
    Self-service name: Users can manage their own name details
    Permissions: write
    Attributes: givenname, displayname, title, initials
```
:::
::: section
::: titlepage