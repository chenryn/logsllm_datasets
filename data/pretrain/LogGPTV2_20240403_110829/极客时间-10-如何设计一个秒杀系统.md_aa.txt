# 10-如何设计一个秒杀系统
# 开篇词 | 秒杀系统架构设计的关键点

大家好，我是许令波，花名"君山"。我的职业生涯始于2009年，那时我刚刚从大学毕业并加入了淘宝，在那里工作了七年多。这期间，我有幸见证了淘宝业务的快速增长，并以开发者的身份参与其中。这段经历不仅锻炼了我的技术能力，还让我积累了一些大流量高并发网站架构设计和优化的经验，特别是在“秒杀”场景方面。

回想起来，当时我们确实对系统进行了极致优化，才得以应对如洪峰般的流量请求。例如，早期淘宝商品详情系统的页面浏览量（PV）大约为1亿，而到了2016年，这一数字已经飙升至50亿。尤其在2012年至2014年间，“秒杀”活动变得非常流行，用户热情高涨，导致系统需处理的流量成倍增长。每一次的秒杀活动都是对我们技术团队的一次重大考验。尽管过程中充满了挑战，但整个团队齐心协力、逐步迭代创新，最终成功解决了诸多难题，这种经历既充满挑战也富有成就感。

记得有一年的“双十一”，为了应对预期中的巨大流量，我们整个商品详情团队做了大量系统优化，甚至自认为已经达到了业界顶级水平。然而，当晚我们的系统还是遇到了瓶颈。事后复盘发现，实际的秒杀流量远超出了我们的预估。面对如此巨大的流量压力，我们意识到必须采取更加特殊的手段来进一步优化系统。经过一番调研与分析，我们决定将整个系统进行动静分离改造，从而使得秒杀系统成为了一个独立的产品模块。

在我看来，秒杀系统主要解决的是两个核心问题：一个是并发读，另一个是并发写。对于并发读，关键在于尽量减少用户到服务端获取数据的需求或让其访问更少的数据；而对于并发写，则需要在数据库层面单独设置一个库来进行特殊处理。此外，还需针对秒杀系统实施保护措施及制定兜底方案，以防意外情况的发生。

从架构师的角度出发，构建并维护一个能够处理超高并发读写的高性能、高可用系统时，应遵循以下原则：确保用户请求的数据量尽可能小、请求数量尽可能少、路径尽可能短、依赖尽可能少，并避免出现单点故障。这些要点将在后续文章中详细讨论。

实际上，可以将秒杀的整体架构归纳为“稳、准、快”三个关键词。“稳”意味着即使在超出预期流量的情况下，系统仍需保持稳定运行，确保秒杀活动顺利完成。“准”则强调数据一致性的重要性，比如当秒杀限量版iPhone时，必须精确控制成交数量。“快”则是指系统性能要足够强大，才能支撑起庞大的流量需求。因此，不仅要在服务端做极致优化，还需在整个请求链路上协同优化。

本专栏将围绕这三个方面展开探讨：
- **高性能**：介绍如何通过数据动静分离、热点识别与隔离、请求削峰与分层过滤以及服务端优化等手段支持高并发访问。
- **一致性**：专门讲解秒杀减库存的设计方案，包括不同类型的减库存策略及其在高并发环境下的实现方式。
- **高可用**：虽然我们会介绍许多先进的优化思路，但在实际应用中总可能存在未考虑到的情况，因此还需要设计Plan B作为备选方案，确保即便在最坏情况下也能正常运作。

最后，很高兴能在极客时间与你相遇。希望通过这门课程的学习，你能全面掌握大并发、高性能、高可用秒杀系统的设计精髓，并在未来遇到类似问题时能够做出更加准确的决策。