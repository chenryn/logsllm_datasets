title:Distilling the Internet's Application Mix from Packet-Sampled Traffic
author:Philipp Richter and
Nikolaos Chatzis and
Georgios Smaragdakis and
Anja Feldmann and
Walter Willinger
Distilling the Internet’s Application Mix
from Packet-Sampled Traﬃc
Philipp Richter1(B), Nikolaos Chatzis1, Georgios Smaragdakis1,2,
Anja Feldmann1, and Walter Willinger3
1 TU Berlin, Berlin, Germany
PI:EMAIL
2 MIT, Cambridge, USA
3 NIKSUN, Inc., Princeton, USA
Abstract. As the Internet continues to grow both in size and in terms
of the volume of traﬃc it carries, more and more networks in the dif-
ferent parts of the world are relying on an increasing number of distinct
ways to exchange traﬃc with one another. As a result, simple ques-
tions such as “What is the application mix in today’s Internet?” may
produce non-informative simple answers unless they are reﬁned by spec-
ifying the vantage point where the traﬃc is observed, the networks that
are involved, or even the type of interconnection used.
In this paper, we revisit the question of the application mix in today’s
Internet and make two main contributions. First, we develop a methodol-
ogy for classifying the application mix in packet-sampled traces collected
at one of the largest IXPs in Europe and worldwide. We show that our
method can classify close to 95 % of the traﬃc by relying on a state-
ful classiﬁcation approach that uses payload signatures, communication
patterns, and port-based classiﬁcation only as a fallback. Second, our
results show that when viewed from this vantage point and aggregated
over all the IXP’s public peering links, the Internet’s application mix is
very similar to that reported in other recent studies that relied on diﬀer-
ent vantage points, peering links or classiﬁcation methods. However, the
observed aggregate application mix is by no means representative of the
application mix seen on individual peering links. In fact, we show that
the business type of the ASes that are responsible for much of the IXP’s
total traﬃc has a strong inﬂuence on the application mix of their overall
traﬃc and of the traﬃc seen on their major peering links.
1 Introduction
Knowing the Internet’s application mix is important for tasks such as identifying
the emergence of new trends in Internet usage, optimizing application perfor-
mance, and provisioning network resources. As a result, there exists a growing
body of literature on inferring the Internet’s application mix, with the diﬀerent
papers typically relying on diﬀerent data sources and deploying diﬀerent traﬃc
classiﬁcation techniques (e.g., see [13,25,29] and references therein).
c(cid:2) Springer International Publishing Switzerland 2015
J. Mirkovic and Y. Liu (Eds.): PAM 2015, LNCS 8995, pp. 179–192, 2015.
DOI: 10.1007/978-3-319-15509-8 14
180
P. Richter et al.
However, due to the heterogeneity of the Internet and its complex topology
and global scope, there are no simple answers to questions like “What are the
most popular applications in today’s Internet?” or “What is the application mix
in today’s Internet?” In fact, as more and more networks consider factors such
as cost, performance, security, ease-of-use, and ﬂexibility when deciding about
which kind of traﬃc to send over which type of peering links, the application
mix can be expected to diﬀer from link to link.
In this paper, we are primarily interested in how representative commonly-
reported aggregate statistics concerning the Internet’s application mix are in
view of the network’s enormous heterogeneity. To this end, we ﬁrst develop
a new methodology to classify traﬃc from packet-sampled traﬃc traces. Packet
sampling is a widely employed technique when monitoring high-bandwidth
infrastructures and is commonly used by large ISPs and IXPs. We then rely
on traﬃc traces collected at such a large IXP and apply our traﬃc classiﬁca-
tion methodology to infer the application mix on tens of thousands of public
peering links at this IXP.1 Our results show that the heterogeneity of the Inter-
net extends directly to the application mix of its traﬃc, and we illustrate the
observed heterogeneity by providing insight into how and why the application
mix can diﬀer from interconnection to interconnection and among diﬀerent types
of networks.
Our contributions can be summarized as follows:
– We develop a traﬃc characterization methodology that is able to classify up to
95 % of the traﬃc in our dataset (i.e., peering traﬃc exchanged at a large
IXP, see Sect. 2). The novelty of our methodology is that it uses a stateful
classiﬁcation technique (i.e., it keeps track of classiﬁed connection endpoints)
that is by and large able to overcome the challenges posed by random packet
sampling (see Sect. 3).
– We apply our new methodology to a set of traﬃc traces collected at a large
European IXP over a period of 2.5 years and provide details about the aggre-
gate application mix seen at this IXP, including pronounced diurnal cycles as
well as trends that become visible when monitoring the application mix over
time (see Sect. 4).
– We compare the aggregate application mix observed at our IXP to that
reported in other recent studies, which use diﬀerent techniques and vantage
points. We ﬁnd that when aggregated over all of the IXP’s peering links, the
observed application mix is comparable to the application mix reported in
these studies. However, we also show that the aggregate application mix is by
no means representative of the application mix seen on an individual peering
link and that the business type of the networks on either side of these peering
links has a strong inﬂuence on the application mix of the traﬃc that traverses
those links (see Sect. 5).
1 Traﬃc traversing the IXP’s private peering links is not collected and not considered
here.
Distilling the Internet’s Application Mix from Packet-Sampled Traﬃc
181
2 Dataset Characteristics
In this paper, we rely on packet-sampled traﬃc traces captured from the public
switching fabric of a large European IXP. We use ﬁve snapshots (selected from
a period that spans 2.5 years), each covering a full week (168 consecutive hours).
Table 1 lists the pertinent properties of these traces. Unless mentioned otherwise,
we use the most recent snapshot (i.e., 09-2013) as default dataset.
During the most recently monitored period in September 2013, the IXP had
close to 500 members and a peak traﬃc rate close to 2.5 Tbps. Our traces con-
sist of sFlow [28] records, captured using a random packet sampling rate of 1-
out-of-16K (214) packets. For more details on the sampling process and the IXP’s
peering link characteristics, see [7,27]. sFlow captures the ﬁrst 128 bytes for each
Ethernet frame. Thus, each packet includes the full link layer (Ethernet), net-
work layer (IP), and transport layer (TCP/UDP) protocol headers, as well as
a limited number of payload bytes. In the most common case, where the IPv4
and TCP protocols are used, this leaves 74 bytes worth of payload information (if
TCP option ﬁelds are set, the available payload is further reduced by a few bytes).
Table 1. Overview of dataset characteristics. The number of packets/bytes refer to
the number of packets collected i.e., after sampling.
Name
Timerange
Sampling Packets Bytes
IPv4/IPv6 TCP/UDP
09-2013 2013-09-02 to 2013-09-08 1/16 K
12-2012 2012-12-01 to 2012-12-07 1/16 K
06-2012 2012-06-04 to 2012-06-10 1/16 K
11-2011 2011-11-28 to 2011-12-04 1/16 K
04-2011 2011-04-25 to 2011-05-01 1/16 K
9.3 B
8.5 B
7.3 B
6.4 B
5.3 B
5.9 TB 99.36/0.63 83.7/16.3
5.5 TB 99.64/0.36 83.1/16.9
4.6 TB 99.80/0.20 80.7/19.3
4.2 TB 99.93/0.07 79.8/20.2
3.5 TB 99.94/0.06 79.2/20.3
6
8
0
0
1
2
−
0
1
4
−
0
1
6
−
0
1
s
w
o
l
f
l
d
e
p
m
a
s
f
o
%
UDP
TCP
s
e
t
y
b
f
o
n
o
i
t
c
a
r
f
e
v
i
t
a
u
m
u
c
l
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
TCP
UDP
1
100
10K
1M
1
10
100
1000
10000
packets sampled per flow
packets sampled per flow
(a) Samples per ﬂow (1200s timeout).
(b) Fraction of total bytes related to number
of packets sampled per ﬂow.
Fig. 1. IXP data sampling characteristics relevant for traﬃc classiﬁcation.
182
P. Richter et al.
In the following, we consider only IPv4 traﬃc, as the fraction of IPv6 is still below
1 % in all our snapshots.
The sampled nature of our datasets poses signiﬁcant challenges when trying
to apply traditional traﬃc-classiﬁcation approaches (see Sect. 3 for details). To
assess the impact of sampling on the visibility of “full” ﬂows, we aggregate the
packets sampled at our IXP using the typical 5-tuple aggregation consisting of
source and destination IP addresses, source and destination port numbers, and
the transport protocol. Figure 1(a) shows the number of packets that are sampled
for each ﬂow, using a 1200 s timeout. It shows that we see only a single packet
for some 86 % of the sampled TCP ﬂows (76 % for sampled UDP ﬂows). We also
observe ﬂows for which we sample several hundreds of thousands of packets over
the course of one week. Surprisingly, UDP ﬂows dominate the heavy-hitter ﬂows
and closer inspection reveals that most of the large UDP ﬂows are related to
recursive DNS interactions between name servers. Accordingly, Fig. 1(b) shows
the cumulative total number of bytes related to ﬂows for which we sample less or
equal than x packets. It shows that in case of TCP, more than 45 % of the bytes
are sampled from ﬂows for which we sample only a single packet (27.5 % for
UDP). Since we only observe packets, we cannot rely on any per-ﬂow properties
nor can we expect to sample packets at any speciﬁc position of a ﬂow e.g.,
the ﬁrst packet(s). Moreover, we cannot expect to have any visibility into the
bidirectional nature of any of the ﬂows–all that sampling gives us is a “random
set of packets.”
3 Classiﬁcation Approach
3.1 Related Work
Application classiﬁcation has attracted the attention of researchers for many
years and has resulted in a large number of diﬀerent methods and studies. How-
ever, the characteristics of our datasets (i.e., sampling, no bidirectional visibility)
pose new challenges for application classiﬁcation. In particular, since most of the
existing classiﬁcation approaches require information that is not available in our
datasets(e.g., unsampled packet traces, ﬂow statistics), these methods are not
directly applicable in our context.
Before presenting our new application characterization method, we ﬁrst pro-
vide a condensed taxonomy of existing classiﬁcation approaches. To this end,
we follow closely the description presented in [20] and focus on those aspects of
the diﬀerent approaches that prevent them from being directly applicable to the
types of datasets we are considering. For a more detailed discussion of the var-
ious existing application classiﬁcation approaches, we refer to extensive surveys
such as [10,13,20,25,29].
Port-based approach: Many applications typically run on ﬁxed port numbers
which can be leveraged to classify packets to their corresponding applications.
The drawbacks of port-based classiﬁcation are that (i) applications can rely on
Distilling the Internet’s Application Mix from Packet-Sampled Traﬃc
183
random port numbers (e.g., as Peer-to-Peer (P2P) applications) and (ii) appli-
cations might use well-known port numbers to obfuscate traﬃc (e.g., see [24]).
On the positive side, port-based classiﬁcation has been shown to be still eﬀective
[23], is robust to sampling and can be applied to our dataset in a straight-forward
manner. Note that port-based classiﬁcation was already performed for the sFlow
data captured at this IXP in [7].
Payload-based approach: Also referred to as Deep Packet Inspection (DPI),
payload-based classiﬁcation produces very accurate results by relying on applica-
tion-speciﬁc signatures (i.e., known byte patterns of known protocols). Applica-
tion signatures are typically based on protocol handshakes and can often be
assembled using only the ﬁrst few payload-carrying packets that are exchanged
between the communicating hosts (i.e., an HTTP GET request followed by an
HTTP/1.{0,1} reply). The payload-based approach is often used to establish
ground truth for the application mix of traﬃc traces (see e.g., [11] for a com-
parative study). While we have access to the initial bytes of the payload of
each sampled packet, we do not necessarily sample the ﬁrst packet(s) of ﬂows
that contain application signatures. In addition, we cannot inspect bidirectional
payload patterns of ﬂows using our datasets.
Flow features-based approach: By utilizing ﬂow properties (e.g., the total
number of packets, average packet size), several approaches focus on classifying
ﬂows as belonging to speciﬁc applications without inspecting the payload of
packets. Since we do not have per-ﬂow information, these approaches are not