预测输入项值
大量的HTML表单包含文本输入项。此外，有些包含选择菜单的表
单必须有文本输入项值才能够返回检索结果。
我们注意到文本输入项通常用于两种方式。第一，通用的输入项实
际上可以接受任何合理的值，在输入项输入的查询词可以返回在后
台数据库中包含该词的所有文档。这种情况的通常例子是通过标题
或者作者搜索书籍。第二，存在一些键入的输入项(tpedinput)。这
种输入项的值只能是一个定义良好的有限集或者数据类型（如邮政
编码），或者属于一些连续的但定义良好的数据类型（如日期或价
格）。在固定格式的文本框中输入无效的值通常会导致错误页面，
因此识别正确的数据类型很重要。在通用的文本输入框中输入不好
的关键字仍然可以返回一些结果，因此挑战在于可以识别关键字的
一个有限集合，从该集合中可以抽取很多不同的结果页面。
文本输入项的两种类型可以分别对待。在接下来的部分，我们首先
描述一个算法为通用的输入项生成关键字，然后考虑键入的输入
项。
通用的文本输入项
在我们描述如何为通用的输入项识别好的候选关键字前，先来考虑
（并驳回）一个司能的备选方案。可以想象，我们本司以在各种领
域把涉及的查询词列表作为文本输入项值，并把每个文本输入项值
和最适合的查询词列表进行匹配。但是，我们很快发现这种处理方
式会有太多的概念和领域。而且，对于通用的输入项，即使我们在
相同领域符合相同概念的两个分离的表单中识别输入项，相同集合
的关键字也不一定在两个站点上都能正常工作。最佳的关键字通常
是属于特定站点的(ste-specific)。由于我们的目标是扩展到几百万的
表单和多种语言，我们需要一种简单、高效和完全自动化的技术。
我们采用选代式探测的方法：从高层上，我们指定候选关键字的初
始种子集合作为文本框的输入值，构建查询模板，把该文本框作为
单一绑定输入框。生成相应的表单提交，下载相应的Web页面内
容，从结果文档中抽取额外的关键字。然后，我们用这些抽取的关
键字更新文本框的候选值；重复该过程直到无法进一步抽取关键字
或者达到了某个候选的停止条件，如有足够多的候选关键字。在终
正时，选择候选关键字子集作为文本框的输人值集合。
1484
---
## Page 1486
选代式探测在过去作为从文本数据库中检索文档的方法而提出
(Brbosa 2004，Callan 2001，Ipeirotis 2002，Ntoulas 2005）。但是，
这些方法的目标是实现特定站点的最大覆盖。因此，它们采用了和
站点相关的(ste-aware)技术，这些方法无法应用于所有的领域。
在高层上，我们定制了如下选代式的探测方式：
为了确定文本输入框实际上是否是一个通用输入框，在第一次选代
时，使用初始候·选集合在模板上执行富信息量测试。结果表示，通
用的文本输入框很可能会被认为是富信息量模板，而其他的输入框
则是非富信息量。
为了选择候选值的种子集合，我们分析了包含该表单的Web页面的
内容。我们通过识别与页面内容最相关的单词来选择页面的单词。
任何合理的查询词打分方法，如流行的TF-IDF方法(Slton1983），
都可用于选择表单页面的儿个最佳查询词。
为了在每次选代结束时选择新的候选值，我们考虑为模板分析的所
有表单提交页面·上找到的所有选择词集合。排除在很多页面上都包
含的选择词，因为这些选择词出现在每个页面上，很可能是HTML
样本模板的一部分。我们还排除只出现在一个页面上的选择词，因
为这些选择词很可能是没有意义的或者是具有特殊含义，不能代表
该表单所表示的站点的内容。
为了对文本输人框选择最终输入值集合，考虑从表单贞面或提交页
面抽取的所有候·选值，根据这些值检索到最丰富的内容的能力来选
择这些值（通过分析从表单提交得到的页面内容）。
我们注意到，为每个文本输人框设置单一的关键字个数的最大值的
方式是不合理的，因为表单站点的结果内容的区别可能是儿个、儿
十个到几百万个。我们采用back-of的策略来解决该问题。从每个表
单一个小的最大值开始，在这过程中，我们评估了这些生成的URL
对搜索引擎流量会带来的影响。如果受到影响的查询个数很高，那
么我们就为该表单提高关键字个数限制，然后重启探测进程。
实验分析表明，这里概述的选代式探测方法对于通用输入框选择输
入项值是有效的。相应的表单提交可以展现底层数据库大量的记录
个数。有趣的是，我们发现相同表单的文本输入项和选择菜单通常
1485
---
## Page 1487
能够展现底层数据的不同部分。我们还可以构建Web爬虫，通过系
统生成的URL，能够随时间展现更多的deep-web内容。
键入的文本输入项
实践表明，存在相对较少的类型，如果能够识别出来，可以用于索
引很多领域，因此出现在很多表单中。例如，邮政编码在很多领域
被作为输入项，包括店铺定位、二手车、公共记录和房地产。类似
的，日期通常在很多领域作为输入项，如事件和文档档案。我们基
于两个想法来利用以上的观察。首先，只有键入适当值，键入的文
本输入框才可以生成合理的结果页面。通过这个想法，我们使用已
知值为流行类型构建富信息量测试。我们考虑有限的和连续的类
型。对于有限的类型（如美国的邮政编码和州的缩写），使用已知
值的部分样本进行富信息量测试。对于连续的类型，可以根据不同
规模次序，测试使用均匀分布值的集合。我们可以使用这样的输入
项名称列表，通过手工提供或者随时间进行学习（参见[Doan
2001]），来选择候选输入项，应用于富信息量测试。
山1即决定提交查询表单时，需要填写哪些输入框，并找到合适的
值填写这些输入框。
结论
我们描述了探寻DeepWeb内容的方法，使得搜索引擎可以访问这些
内容。该系统最重要的要求是它必须是完全自动化的（因此可以扩
展到整个Web)，而且可以从任何语言、任何领域来检索内容。有意
思的是，这些严格的要求激发我们探索出一个相对简单优雅的解决
方案，从而表明简单性通常是解决复杂问题的关键。
今后探寻DeepWeb的工作有很多方向。特别地，可以识别表单中存
在的特定类型来扩展爬虫的覆盖度。例如，各个域的组合之间通常
是相互关联的（如MinPrice和MaxPrice），输入有效的精心选择的值
的组合可以探寻到更多的页面。
参考文献
[1]Barbosa,L. and J.Freire."Siphoning Hidden- Web Data through
Keyword-Based Interfaces."SBBD 2004:309-321.
1486
---
## Page 1488
[2]Bergman,M. K."The Deep Web:Surfacing Hidden Value."Journal of
Electronic Publishing, 2001.
[3]Callan,J. P.and M.E.Connell."Query-based sampling of text
databases."ACM Transactions on Information Systems,19(2):97-
130，2001.
[4]Doan,A., P. Domingos,and A.Y.Halevy."Reconciling Schemas of
Disparate Data Sources:A Machine-Learning Approach."SIGMOD
Conference2001:509-520.
[5]"Forms in HTML documents."http: //www.
w3.org/TR/html401/interact/forms.html.
[6]He,B., M. Patel,Z.Zhang,and K.C.-C.Chang."Accessing the Deep
Web:A survey."Communications ofthe ACM， 50(5）:95-101，2007.
[7]Ipeirotis,P.G.and L.Gravano."Distributed Search over theHidden
Web:Hierarchical Database Sampling and Selection."VLDB 2002: 394-
405.
[8]Madhavan,J., L. Afanasiev,L.Antova,and A. Y.Halevy."Harnessing the
Deep Web:Present and Future."CIDR 2009.
[9]Madhavan,J.,S. Jeffery,S.Cohen,X.Dong,D.KO'C.Yu,and
You Go."CIDR 2007
[10]Madhavan,J., D. KO'L.Kot,VGanapathy,A.Rasmussen,and
A.Y.Halevy."Google's Deep-Web Craw1."PVLDB1(2):1241-
1252(2008).
[11]Ntoulas,A.，P. Zerfos,and J.Cho."Downloading textual hidden web
content through keyword queries."JCDL 2005:100-109
[12]Raghavan,S. and H.Garcia-Molina."Crawling the Hidden
Web."VLDB 2001:129-138
[13]Salton,G. and M.J.McGill.Introduction to Modern Information
Retrieval.NewYork:McGraw-Hill,1983.
1487
---
## Page 1489
[14]SpiderMonkey(JavaScript-C) Engine,http:/www.
mozilla.org/js/spidermonkey/
[15]V8 JavaScript Engine,http://code.google.com/p/v8/
第10章构建Radiohead的“HouseofCards”
Aaron Koblin和iValdeanKlump
这是一个关于获格莱美(Gammy)奖提名的乐队Radioheadll-的音乐视
频"HouseofCards”是如何完全根据数据创建出来的故事。在你阅读
本章之前，你应该先观看这个视频。该视频权威资料在Gcode项目
页面(htp：//code.google.com/radiohead)上可以找到。在该网站上你
还可以找到一些其他的资源，包括我们用于构建该视频的数据样
本，一个允许你通过3D模式查看数据的Flash应用，一些你可以用来
创建自己的可视化，以及一个"Makingof"的代码视频。当然首先需
要找出这些代码。
这一切是如何开始的
2007年9月，我收到一封来自JamesFrost的电子邮件，询问我是否对
基于数据来创造一个音乐视频感兴趣。James是一个天才视赖导
演，他为Coldplay、NorahJones、PearlJam以及很多其他流行的艺
术家做了很多工作。他看过我的"飞行模式"(FightPatterns)项目（见
图10-1）一使用空中交通的GPS数据对商业飞行模式和密度进行
可视化一—而且希望碰面并讨论制作一个可视化音乐视频。
1488
---
## Page 1490
图10-1：来自“飞行模式”的静态图片（2005）（见彩图22）
两个月后，James、他的制片人JustinGlorieux和我在洛杉矶的咖啡
厅会面，我们讨论了一些想法。我向他们展示了自己做过的一些项
自以及我认为有助于可视化制作的一些技术。我们讨论了使用
Proccessing编程语言的一些可能性，该语言已经广泛应用于数据可
视化。最终通过这种方式为Interpol乐队制作了“RestMyChemistry”
视频，该视频在2008年3月发行。如果你从来没有用过Processing语
言，我强烈建议你访问它的网站：http：/processing.org，并找出相
关代码。就我所知，Processing对于艺术家、设计人员或者任何对动
态数据可视化感兴趣的人而言，都是最佳的编程语言。
我们讨论的另一种可能是对激光传感器收集的数据进行可视化。我
在加州大学洛杉矶分校（ULA)的嵌入式网络传感(CNS)中心做一个项
目时，第一次接触了这种技术。CENS使用激光来检测光线是如何
穿透森林的覆盖的，我被渲染后的图片所蕴含的内在美深深地震撼
了。James看完一些例子后，同意了我的建议，而且使用激光来制
作影片的想法给他留下了深刻的印象。他问：“你的意思是不用摄
像机来拍摄视频？不用视频就可以拍摄视频？”他马上意识到可以
做一件从来没有做过的事情。在那之后不久，他以这种想法并始制
作Radiohead的音乐视频。
1489
---
## Page 1491
希望你能够了解该影片是如何制作的并从中找到自已的工作灵感。
在这一章，我将首先讨论我们捕捉数据所使用的工具。然后，我将
谈到数据本身即视频拍摄，以及后期的数据处理。最后，我们一起
来看我在GCode网站上提供的数据可视化代码，并讨论你可以自己
如何发挥它。