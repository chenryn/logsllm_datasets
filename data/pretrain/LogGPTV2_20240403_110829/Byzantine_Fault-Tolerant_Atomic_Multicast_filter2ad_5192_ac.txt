(R3) and Tokyo (R4). Table I summarizes the latency between
pairs of regions in milliseconds.
EU
165
88
239
CA
−
70
112
VA
70
−
175
JP
112
175
−
CA
VA
JP
TABLE I: Latencies within Amazon EC2 infrastructure.
3) Conﬁguration: In all experiments, groups contain four
processes, each process running in a different node. The
number of groups depends on the tree layout. In the 2-level
tree we have from 2 to 8 target groups and 1 auxiliary for
global messages. In the 3-level tree we ﬁx the number of
target groups to 4 and the number of auxiliary groups to 3,
as depicted in Fig. 1. In the WAN setup, we distribute clients
along all the regions and deploy each process of a group in
a different region. Consequently, the system can tolerate the
failure of a whole region.
C. Overlay tree versus workload
We start by assessing how the workload and the perfor-
mance of groups affect the overlay tree. We consider a system
with four target groups and up to three auxiliary groups
subject to two workloads. In both workloads we assume global
messages only since local messages are multicast directly to
target groups and do not affect the tree layout. In the uniform
workload, clients multicast messages to two groups and all
combinations of destinations have an equal probability of be-
ing chosen. In the skewed workload, clients multicast messages
to either groups {g1, g2} or to {g3, g4}. Moreover, we inject
higher load in the skewed workload. Table II details the two
workloads. Based on the experiments reported in §V-D, an
auxiliary group can sustain approximately 9500 messages/sec
(i.e., K(hi
) = 9500 m/s).
Table III shows outcomes for the two workloads with two-
level (T2) and three-level (T3) trees (for the three-level tree
depicted in Fig. 1). For the uniform workload, a two-level
Du = {{gi, gj }|1 ≤ i, j ≤ 4 ∧ i (cid:5)= j}
∀d ∈ Du : Fu(d) = 1200 m/s
Uniform workload
Ds = {{g1, g2}, {g3, g4}}
∀d ∈ Ds : Fs(d) = 9000 m/s
Skewed workload
TABLE II: Uniform and skewed workloads.
45
 21000
 18000
 15000
 12000
]
c
e
s
/
s
e
g
a
s
s
e
m
[
t
u
p
h
g
u
o
r
h
T
 9000
 6000
 3000
 0
 100
 80
 60
]
%
[
 40
 20
 0
 100
 80
]
%
[
 60
 40
2-level tree
3-level tree
Uniform workload
Skewed workload
Uniform workload
2-level tree
3-level tree
Skewed workload
 20
 0
 0
 20
 40
 60
 80
Latency [msec]
2-level tree
3-level tree
 100
 120
Fig. 3: ByzCast global messages throughput and latency CDF with
2-level and 3-level trees. Whiskers show 95% conﬁdence interval.
tree is the best option since the root can sustain the load
(T2, h1)  K(h1)) and therefore it is not a
the root (i.e., Ls
viable solution. In this case, in a three-level tree the trafﬁc is
divided among the two branches of the tree (h2 and h3).
Fig. 3 exhibits the experimental results in terms of through-
put and latency Cumulative Distribution Function (CDF) for
each scenario. For the uniform workload, the average latency
with a two-level tree is lower than with a three-level tree,
although about 55% of messages have lower latency. This
happens because the three-level tree distributes the load more
uniformly among inner groups. In the skewed workload, the
high load on the root of the two-level tree leads to much higher
latencies than the three-level tree. The experiments presented
next (both LAN and WAN) use the 2-level tree.
D. Scalability of ByzCast in LAN
This experiment assesses the performance of ByzCast and
compares it to BFT-SMaRt (using a single group) and to Base-
line, a non-genuine atomic multicast approach. Fig. 4(a) shows
the throughput in messages per second versus the number of
groups, when 200 clients per group multicast local messages
only (except for the 8-group setup where there are 100 clients
per group since we do not have enough client nodes to deploy
Tu(T2, h1) = Du
Tu(T3, h1) = Du \ {{g1, g2}, {g3, g4}}
Tu(T3, h2) = Du \ {{g3, g4}}
Tu(T3, h3) = Du \ {{g1, g2}}
Lu(T2, h1) = 7200 m/s
Lu(T3, h1) = 4800 m/s
Lu(T3, h2) = 6000 m/s
Lu(T3, h3) = 6000 m/s
Uniform workload
(cid:2)
d∈Du
H(T2, d) = 12
Best choice (lowest heights)
(cid:2)
d∈Du
H(T3, d) = 16
Poor choice
Ts(T2, h1) = Ds
Ts(T3, h1) = ∅
Ts(T3, h2) = {{g1, g2}}
Ts(T3, h3) = {{g3, g4}}
Ls(T2, h1) = 18000 m/s
Skewed workload
(cid:2)
Ls(T3, h1) = 0 m/s
Ls(T3, h2) = 9000 m/s
Ls(T3, h3) = 9000 m/s
(cid:2)
d∈Ds
H(T2, d) = 4
Not viable (load exceeds capacity)
d∈Ds
H(T3, d) = 4
Best choice
TABLE III: Optimization model outcomes for uniform and skewed workloads.
Baseline
BFT-SMaRt
ByzCast
 90000
 75000
 60000
 45000
 30000
 15000
]
c
e
s
/
s
e
g
a
s
s
e
m
[
t
u
p
h
g
u
o
r
h
T
 0
1 Group
2 Groups
4 Groups
8 Groups*
 21000
 18000
 15000
 12000
]
c
e
s
/
s
e
g
a
s
s
e
m
[
t
u
p
h
g
u
o
r
h
T
Baseline
BFT-SMaRt
ByzCast
 9000
 6000
 3000
 0
1 Group
2 Groups
4 Groups
8 Groups
(a) Local messages.
(b) Global messages.
Fig. 4: Throughput in a LAN. Whiskers show 95% conﬁdence interval.
200 clients per group without saturating the nodes). The results
show that the genuineness of ByzCast with respect to local
messages pays off. The throughput scales linearly with the
number of groups with respect to BFT-SMaRt (single group),
delivering more than 83000 messages/sec with 4 groups and
200 clients per group and the same with 8 groups and 100
clients per group. This happens because, for single-group
messages, ByzCast only involves the sender of a message and
the destination target group. Since a single group must order
all the messages with the Baseline protocol, it becomes nearly
saturated with 400 clients. Thus, the performance with four
groups is only slightly higher than with two groups, from
11000 to 12000 messages/sec), and even smaller with eight
groups. Fig. 4(b) shows that ByzCast’s throughput when all
the clients multicast global messages only is at most half
the throughput of BFT-SMaRt: 9700 messages/sec against
19500 messages/sec in the best case. Differently from BFT-
SMaRt, a global message in ByzCast has to be ordered by
both the auxiliary group and the target groups, impacting
the message latency and the overall throughput. The same
observation holds for the Baseline protocol, which behaves
similarly to ByzCast.
E. Throughput versus latency in LAN
In Fig. 5(a) we can observe how the mean latency behaves
as the number of clients increase. ByzCast (top) is at least
twice as fast and has half the Baseline’s latency even with
only 2 groups. In executions where all request are global
messages, even for small number of clients, BFT-SMaRt has
always the best performance, as depicted in Fig. 5(b). This
results reinforces the observation that an atomic broadcast
(BFT-SMaRt) is preferable over an atomic multicast when
most messages are global [36]. ByzCast and Baseline for 2,
4 and 8 groups perform very alike and the latency saturates
with less than half BFT-SMaRt’s throughput.
F. Latency without contention in LAN
The next experiments assess latency with a single client.
This setup aims to check how the protocols perform in the
absence of contention or queuing effects. We consider conﬁg-
urations with an increasing number of groups with both local
and global messages. We can see in Fig. 6 that regarding local
messages ByzCast performs as well as BFT-SMaRt no matter
the number of groups, with latency around 4 msec. The fact
that groups do not interact with each other when ordering local
messages guarantees this expected latency. Global messages
have twice the latency of local messages in ByzCast because
they go through the auxiliary group before reaching the target
groups. Besides, global messages latency increases slightly
as we add more target groups as replicas in the auxiliary
group need to perform multiple broadcasts to all the groups
in message destination.
G. Performance with mixed workload in LAN
The last experiment in LAN assesses the performance of
ByzCast with both local and global messages. In a 2-level
overlay tree with 4 target groups, 160 equally distributed
clients multicast local and global messages in a proportion of
10:1. Fig. 7 shows the latency CDF for both Baseline and Byz-
Cast. Since in the Baseline protocol (Fig. 7(a)) all messages
are ordered in the same auxiliary group before reaching the
target group(s), the latency for both local and global messages
46
 20
 15
]
c
e
s
m
BFT-SMaRt
ByzCast 2G
ByzCast 4G
ByzCast 8G
 10
[
y
c
n
e
a
L
t
 5
 0
 0
 10
 20
 30