强并发性。
级，而非表级，
当有许多更新操作时，InnoDB 表可以提供更好的性能。因为完成锁定操作的级别是行
他客户端同时读取表的数据。
表
取数据期间修改它。
为从表里读取数据，客户端必须锁定它，以防止其他客户端把数据写入表，或者在读
取的那个位置进行更改，而此时的读取结果也会不准确。
许客户端从一个不断变化的表中读取数据，也不是件好事，因为表有可能就在正被读
然是件很糟的事情，因为该表很快就会变得混乱不堪，最终导致无法使用。另外，允
其他客户端访问它，则会引发许多问题。允许两个客户端同时对一个表进行写入，
中，表处于一种不一致的状态，因为其中的数据行可能正在被删除、添加或更改，并
第5章查询优化
，所以一个读取者没有理由禁止其他读取者访问这个表。因此，读取锁定可以让其
，所以表被锁定的范围相对较小。这种做法可以减少锁定竞争，从而增
但是，这个锁定操作不需要互斥访问。因为读取数据并不会更改
，使用表级锁定可能会引发问题。在这些情况下
它
显
所
个
---
## Page 241
服务器的便捷接口进行对比。
的好处，下面把你自己编写程序所能完成的任务，与mysql客户端程序的能力和其访问MySQL
则远远超出这些程序的能力范围。为解决此类问题，MySQL提供了一个客户端应用程序编程接
的定义和内容；mysqldamin可用于管理操作；mysql可用于执行任意的SQL语句。
6.1
讨论。
Perl和PHP）的编程接口做了概念性的介绍，并对选择程序设计语言时需要考虑的因素进行了
MySQL程序设计入门
第6章
户端API提供了对MySQL服务器进行访问的能力，其开放程度完全超出你的想象。
口（ApplicationProgrammingInterface，API），用于满足应用程序可能会有的任何特殊要求。客
本章将讨论，如何编写基于MySQL的可对数据库进行访问的程序。为让大家明白这样做
这些标准客户端程序足以处理MySQL用户日常遇到的绝大多数问题，但有些应用的需求
口定制输入处理。使用mysql，只能输入原始的SQL语句。使用自己的程序，可以为用户
MySQL发行版中有一组与服务器进行通信的客户端程序。例如，mysqldump可用于导出表
口定制输出。mysq1的输出基本上是无格式的，只能选择制表符分隔或表格样式。如果想
口用户输入验证。可以要求某些字段必须以某种方式进行填充。这样可以增强应用程序的
为何要自己编写MySQL程序
获得更美观的输出，则只能自己动手格式化。有简单一点的，比如可以把NULL输出为
“缺失”。也有复杂一点的，比如票据输出，每个票据的表头都需要与客户的信息以
安全性。
通过填写表单的方式来指定搜索参数，比通过执行SELECT语句来指定，容易得多。
接口（提示用户、读取值），到更复杂的屏幕录入表单，都能实现。例如，大部分人发现：
甚至不用关心完成任务所需的数据库角色。输入形式可以丰富多样，从简单的命令行
提供更直观、更容易使用的输入方法。使用编写程序的用户，不需要掌握SQL语言，
---
## Page 242
的价值。
提供对数据库的访问功能。与此同时，把名录内容发布到联盟的网站上，也会提升网站对成员
把所有成员名录都发布到网上，让成员能够方便地访问到成员名录的内容。这就是利用web 来
以很容易地通过Web访问数据库。
代表客户端用户从你的Web服务器上执行查询，并把结果发送给用户浏览器。这样一来，便可
MySQL不直接支持Web应用程序，但是，将MySQL与某些合适的工具结合在一起，你便可以
MySQL服务器进行交互的要求。下面列出的是其中几个目标。
222
这两个观点并不矛盾。例如，在“美史联盟”示例里，
下面从彼此互补的观点来看待MySQL和Web的结合。
还有一个需要我们深入思考的问题，即如何把MySQL的各项功能集成到Web环境中。
在第1章，我们列举了几个与样本数据库 sampdlb 有关的目标，
口
口
口
口
口格式化输出美史联盟的成员名录。
口
口
本不会从网站提供的服务里察觉到数据库的存在。
以用一个数据库来跟踪这些消息。此时，MySQL 便是一个“配角”，网站用户甚至根
Web开发人员常采用的视角。例如，如果网站上有一个留言板或讨论列表，那么你可
利用MySQL增强Web服务器的功能。从这个角度来看，你的主要兴趣是Web站点，并
能够检查每个表的结构或内容。
注的重点。例如，你可以编写几个 Web 页面，让你能够看到数据库里的所有表，并且
并且想要把Web兰
利用Web服务器提供对MySQL的增强访问。从此角度来看，你的主要兴趣是数据库，
使用Web浏览器简便地把学生成绩输入成绩册。
发送电子邮件提醒成员更新成员资格。
提供在线查看和搜索成员名录的功能。
回该客户的浏览器
情况的应用程序，
客户端编程接口为你提供了具体的实现方式。对于必须核对顾客编号，或者检查库
把MySQL集成到任何应用程序里。许多程序都享受到了利用数据库来提供信息的好处。
一个查询的输出用作另一个查询的输入。
杂输出格式要求的任务。程序像“粘合剂”一样，把多个查询连接在一起，让你能够把
MySQL支持存储程序-
查询的结果，决定下一步该怎么做。
做相应的处理。你可以根据某个查询的成败转去执行另一个查询，也可以根据上一
写程序，那么可以在语句执行操作的前后进行流程控制，有选择地对成功或失败情况
现了多少错误，不间断地执行完所有的查询（如果指定了--force 选项）。
行一个 SQL 查询文件，那么在遇到第一个错误时，mysql 要么选择退出，要么不管比
到尾一次性执行完成，并具有少量的出错检查功能。如果使用 mysql以批处理模式执
可以克服SQL语言的先天不足。多数情况下，SQL脚本都是由一组语句构成，
及每个定单项的信息关联起来。这类报告很容易超出 mysql的格式化能力。
，而这就是使用数据库来增强网站的服务水平。
来
总
第6章MySQL程序设计入门
所
更多的灵活性。但是，这些机制所提供的灵活性，远远无法与各种通用程序设计语言
更
统管
查询所有书籍的
提供的灵活性相提并论。
管理员常采用的视角。在此场景里，数据库的地位是显而易见的，因为它是你关
售的Web应用程序，可以在数据库里把书籍查找出来，然后把结果发送
当作一种工具，以便更容易地访问数据库里的数据。这应该是MySQL
器
，可以通过执行一条简单的查询来实现。对于能让客户通过特定作者
一它所提供的流程控制和出错处理机制，在SQL这一层提供了
，我们把Web当作是这样一种方式：
其中即包含了编写程序与
，如果自己
它们从头
存
编
E
---
## Page 243
下来的三章会详细讨论它们。
对
了多种API。我们这里主要介绍3种最为流行的API。
API
此
包含一组数据结构和函数。
们可以在任何的C语言程序里访问MySQL数据库。这个客户端开发库实现了一个API，其中
6.2
合。
据的方式相比，把数据发布到网上通常会有以下几点好处。
以供用户查看。
并把它以查询形式发送到MySQL服务器，然后再把检索出来的结果返回给客户端的浏览器，
把前端的Web站点与后端的MySQL连接在一起。Web服务器负责从客户端用户那里收集信息，
“在某些特定的应用程序里，为何要选这个，
当然，把自己锁定在某个API里是毫无理由的。对多个API有所了解，并用这些知识把你
之上。Perl、PHP、Python、Ruby、C++、Tcl以及其他语言，都有这种类型的接口。
其他编程语言的MySQL 接口，可以把这个C语言客户端开发库链接到语言处理器里。
为支持应用程序的开发，MySQL提供了一个用C语言编写的客户端开发库。通过它，我
当然，你完全可以不把数据发布到网上。但是，与通过标准MySQL 客户端程序来访问数
本章后面对这3种API做了概要性的对比：
口Perl语言DBI API。数据库接口（Database Interface，DBI）是一个Perl模块，用于在数
口C语言客户端开发库API。这是最基础的 MySQL 编程接口。在MySQL发行版里，许多
每一种编程语言绑定都定义了其自己的接口，用于指定访问MySQL的规则。MySQL提供
这个客户端开发库提供了一种MySQL绑定方式，让其他编程语言可以构建在这个C语言
在6.3节会讨论到这个问题。
任何一种编程语言都可用于编写基于Web的应用程序，但是相比之下，有些语言则更为适
口 Web 应用程序的操作界面，可以根据具体的应用要求进行定制。MySQL 客户端程序都
口那些通过Web 访问数据的人们，可以在他们喜欢的任何一种平台上，使用他们喜欢的
无论如何看待MySQL与Web的结合，具体的实现都是相似的。你要以Web服务器为桥梁，
口
标准客户端程序都是用它来实现的，如 mysql、mysqladmin 和 mysqldump。
MySQL提供的API
口
PHP数据对象（PHPData Object，PDO）
PHP语言API。PHP是一种脚本语言，它提供了一种简便的把编程结构嵌人 Web页面的
提供了通过Web访问MySQL的功能）进行调用的脚本。
和DBI，创建多个可以从命令行直接调用的独立脚本，以及多个可以从Web服务器（它
据库驱动程序（Darabase Driver，DBD）层与其他模块（其中的每一个都能提供对特定
方
数
车功能的应用程序一
程序难以完成或不可能完成的任务。例如，想要这些客户端程序集成为一个具备购物
动
是一些通用的工具，操作界面比较固定。
Web应用程序的操作界面，可以比单独的命令行MySQL客户端程序的更简单。
论MySQL客户端的传播范围有多大，始终无法与Web浏览器的传播范围相提并论。
任何一种浏览器来访问数据。他们不必局限于运行标准MySQL客户端程序的系统。
相
接口，也有许多独立于服务器的接口。本书将使用后者中的一种，即众所周知的
目类似，PHP还支持访问除MySQL以外的其他几种数据库服务器。它既有服务器特定
来，便可以让脚本生成动态的内容，如把MySQL的查询结果包含在页面里。与 DBI
法。在把这种页面发送给客户端之前，PHP 会在服务器主机上对它进行处理。如此
（据服务器的访问）进行交互。这里所用的DBD模块支持MySQL。我们将使用MySQL
态Web页面扩展了MySQL的能力，让我们可以完成许多只使用标准MySQL客户端
一这一点真的无法做到。
，而不选另一个”这一做法的原因有所了解。接
：首先，描述了它们的一般特点；然后，想让你
6.2MySQL提供的API
223
无
---
## Page 244
能处理很多种不同的服务器（与用于它们的驱动程序的种类相当）。DBI提供的统一客户端接口
数据的形式都是统一的。
会处理，与你所用的特定数据库服务器进行通信时所产生的问题。DBD层会把服务器返回的数
准的数据库访问调用。DBI层会在 DBD 层调用正确的驱动程序来处理你的请求，并且驱动程户
目标，DBI使用了多个Perl模块。这些模块分属在两层架构里，协同工作（见图6-1)。
数据库服务器，一边又要把服务器有关的细节隐藏起来，不让脚本的编写者看到。为实现这一
6.2.2
了对 MySQL 的访问。
的那个MySQL驱动程序，便是通过链接适用于MySQL的C语言客户端开发库的代码，才实现
言客户端开发库也是其他编程语言实现大部分MySQL 绑定的基础。例如，Perl的 DBI模块里
MySQL服务器进行对话的接口，让你能够与服务器建立连接，并进行通信。
6.2.1
选用多种API，并根据工作的具体要求选择最合适的语言，编写各个部分。
自己武装起来，可以让你在它们之间做出明智的选择。对于包含多个组成部分的大项目，可以
224
从应用程序开发人员的角度来看，DBI接口不仅掩盖了数据库服务器之间的差异，而且还
在 MySQL 发行版里提供了多个C语言客户端程序，它们都是基于这个 API开发的。C语
C语言 API主要用在编译过的C语言程序的上下文里。它是一个客户端开发库，提供了与
DBI架构可以让你以相对通用的方式编写应用程序。在编写 DBI脚本时，可以使用一套标
如果你还缺少使用某个API所必需的软件，则可以参考附录A。
在Perl脚本语言里，DBIAPI用于编写数据库应用程序。这套API一边要尽可能多地处理
口
1C语言API
的数据库服务器无关。
器提供支持。对MySQL来说，DBD 层的模块名字为 DBD：:mysql。
数据库驱动程序（DBD）层。
Perl 语言 DBI API
第6章MySQL程序设计入门
驱
DBD（数据尽
DBI（数据库
RDBMS层
区动程序）层
接口）层
！
应用层
库
Perl解释器
驱动程序
perl脚本
：它负责为客户端脚本提供通用接口。这是一个抽象层，与具体
服务器
MySQL
MySQL
$dbh =DBI->connect("DBI:Pg:...");
。它以驱动程序（特定于服务器）的形式为各种数据库服务
图6-1DBI架构
PostgreSQL
PostgreSQL
驱动程序
服务器
DBI
其他DBD
服务器
其他
序
---
## Page 245
这个脚本调用一个查询，
提供给访问者。下面这个示例显示了一个简单的脚本，可以用在“美史联盟”的Web站点上。
段简短的PHP脚本嵌入某个Web 页面时，它便会显示请求该页面的那台客户端主机的IP地址：
际上显示在浏览器里的页面，会根据页面请求所发生的具体环境产生变化。例如，当把下面这
的所有脚本，并把它们替换为该脚本的输出内容。最终的结果被发送到浏览器。如此一来，实