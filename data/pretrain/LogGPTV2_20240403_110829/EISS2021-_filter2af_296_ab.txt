第三点是用户和设备和应用程序都在同一个网络中，这是不合理的，应该是我们不同的部门在不同的一个网络隔离区域中，比如开发部门有一个开发网络，行政部门有一个行政的网络，网络之间需要有一个隔离。
####  4.2.2 身份认证
身份认证主要是账号验证这方面，账号我们主要由两部分组成
一部分是公司的统一账号，另一部分就自建账号，目前正式员工都有这样一个统一账号，但是一些外包人员他就想访问某一个业务，会在业务系统上给他开了一个自建的账号，还有一部分系统因为使用开源系统，改造起来比较麻烦，还停留在自建账号上。
###  4.3 调整后的方案
在熟悉现有结构后，结合之前理想中的目标，我们需要设计一套可落地的架构，主要是这个图，在图中可以看到，所有的请求都通过通过终端去访问办公网应用，都要经过一个安全网关
这个安全网关他主要是一个代理的作用，在代理之前的他会调取安全策略中心的评估数据，通过这个数据判断请求是否合法，如果不合法会抛弃掉这个人请求；判断请求是否合法主要依赖于安全策略中心，安全策略中心的决策主要是依据设备管理中心和身份证的重心的数据
设备管理中心主要存储终端的安全基线数据，同时对设备签发证书，终端则会上报安全数据，比如进程是否安全、网络是否安全以及是否有锁屏，证书管理来主要是验证这个设备是否公司的合法设备。
比如有人使用私人设备去访问公司的办公网络，我们是不允许的，设备管理中心就会给此设备评分比较低；另外一个依据是身份证在中心，主要是验证一下用户的一个身份信息是否合法，综合这些信息就得到了一个安全评分，安全评分比较低的时候我们可能会通过人脸识别或者其它的多因子认证来提升他的一个安全评分，最终决策此请求是否可以访问我们办公网的应用
###  4.4 建设模块
刚才我们通过架构图简单降到了5个模块的作用，现在我们仔细来看一下这五大模块
####  4.4.1 身份认证中心
身份认证中心主要的作用是提供身份认证，除了平时的常规认证外，里面应该有一些加强的二次认证方法，多维度来确保身份的可信；这里我们主要是使用第三方的身份认证服务，阿里云的Idaas服务和谷歌的google身份认证器。
####  4.4.2 安全策略中心
安全策略中心刚才已经讲到，他主要是判断下这个请求是否可以访问，主要是依据这个身份认证和设备风险动态生成的安全策略，并且需要实时更新策略；
另外有些应用安全等级需要比较高，比如财务系统可能要求二次多因子认证来增加安全评分。
####  4.4.3 安全网关
安全网关的主要作用是代理外网的流量到内部，安全网关在进行转发前会先判断一下已经登录，如果没有登录会让请求跳转到idaas系统，让用户先进行登录；
再次请求时候会调用安全策略中心的安全评分，如果它的评分比较低会阻止此请求的访问；如果是合法的可以对这个请求进行一些流量钩子，比如访问一个wiki系统，可以在这加一些水印。
当流量都经过安全网关的时候，可以将日志存储起来，放到日志分析平台中进行统计分析，将来可以追溯和审计。
####  4.4.4 设备agent
设备agent主要就是收集终端的一些安全信息，比如系统信息，网络连接信息、是否安装杀毒软件，将这些信息上报到我们的设备管理中心的服务器。
####  4.4.5 设备管理中心
设备管理中心主要是存储设备上报一些的安全信息，以及这些设备进行认证，判断设备了是不是我们公司的内部设备等等，给安全决策中心提供数据支持。
## 五、建设经验
零信任建设不是一个短期能够完成的事情，谷歌建设的零信任建设花了近十年时间，前面何艺老师在完美世界建设零信任也花了四年的时间，因此零信任不是短时间内能完成的，不过现在零信任相对来说已经有一个基本的架构了，所以我们建设起来会快很多，但是呢也是一个周期的。
###  5.1 分阶段实施
零信任建设拆解下来大致需要去做6个事情
我们趣加在建设零信任的时候是分阶段去实施的，主要分成了四个阶段，其中Q1为第一阶段，首先是要有一个安全网关，并且支持身份验证，这是最基础的功能点，然后就是去接入一些业务去验证这个模式的可行性，在这个过程中会收集到很多需求，将其改进之后继续推进业务的接入，我们第一阶段的事情已经落地了；目前正在建设第二阶段，第二阶段主要是业务的全量接入，和终端软件的第三方购买评估，业务已经接入完成，终端还在评估中。
####  5.1.1 第一阶段
第一阶段的主要是搭建一个安全网关，实现最基本的需求，比如流量转发和登陆，以及身份认证，接入部分办公应用验证这个模式是否可行。
####  5.1.2 第二阶段
第二阶段了主要是接入全量应用进来，同时我们需要去调研这个终端的的产品，他需要支持这个基线检测、证书签发、TLS双向认证。
####  5.1.3 第三阶段
第三和第四阶段目前来说了我们只是一个规划阶段，还没有去落地实施，这部分我不去过多讲解了
###  5.1.4 长期实施
有些事情可以在各阶段都去做，并没有依赖关系
比如说整合业务的需求，支持更加细致一些权限控制访问，还可以去丰富代理网关的能力，包括流量拦截和行为分析统计，内容注入，比如说水印等;第三个是丰富用户行为审计能力,结合业务访问行为和终端安全日志，全面监控安全风险。
###  5.2 细节性建设
这里我讲一些我们建设细节，主要推荐几个开源工具
####  5.2.1 openresty
前面我们讲到安全网关，安全网关主要是转发的一个作用，这里很多同学会想到Nginx服务器，我这里也是用的Nginx服务器，不过对Nginx进行了一个封装的服务，叫做openresty，它更方便我们去执行一些lua脚本
####  5.2.2 NginxWebUi
如果使用Nginx形式进行转发，肯定会涉及到Nginx配置文件，配置文件如果使用vim编辑器去转发编辑，很难免会出错；所以最好是有一个界面，可以在界面上操作并生成配置文件。
这里我推荐一个开源工具叫NginxWebUi的开源项目，可以在图形界面当中就完成了一个反向代理的配置
###  5.2.3 配置分发
我们趣加在全球有二十多个节点，每个节点都有服务器，如果我们将代理网关放在一个节点，代理速度会非常慢，所以我们不可能把节点都部署一个节点；当多个节点的时候，配置文件同步就需要一个方案了
我们的方案是首先由NginxWebUi生成配置，有一个程序会监听文件夹的修改，如果有修改会将这些配置提交到gitlab仓库；同时会通知到各个节点并把版本号传递过去，节点会从gitlab服务器拉去最新配置，检测配置文件是否会报错，如果不报错则会重启Nginx，并将节点所使用的版本传递到中心去。
* * *
作者：汤青松
日期：2021-5-14