title:Pi: A Path Identification Mechanism to Defend against DDoS Attack
author:Abraham Yaar and
Adrian Perrig and
Dawn Xiaodong Song
Pi: A Path Identiﬁcation Mechanism to Defend against DDoS Attacks
Abraham Yaar Adrian Perrig Dawn Song
Carnegie Mellon University
{ayaar, perrig, dawnsong}@cmu.edu
Abstract
Distributed Denial of Service (DDoS) attacks con-
tinue to plague the Internet. Defense against these at-
tacks is complicated by spoofed source IP addresses,
which make it difﬁcult to determine a packet’s true ori-
gin. We propose Pi (short for Path Identiﬁer), a new
packet marking approach in which a path ﬁngerprint is
embedded in each packet, enabling a victim to identify
packets traversing the same paths through the Internet
on a per packet basis, regardless of source IP address
spooﬁng.
Pi features many unique properties. It is a per-packet
deterministic mechanism: each packet traveling along
the same path carries the same identiﬁer. This allows
the victim to take a proactive role in defending against
a DDoS attack by using the Pi mark to ﬁlter out packets
matching the attackers’ identiﬁers on a per packet basis.
The Pi scheme performs well under large-scale DDoS
attacks consisting of thousands of attackers, and is ef-
fective even when only half the routers in the Internet
participate in packet marking. Pi marking and ﬁltering
are both extremely light-weight and require negligible
state.
We use traceroute maps of real Internet topologies
(e.g. CAIDA’s Skitter [5] and Burch and Cheswick’s In-
ternet Map [3, 14]) to simulate DDoS attacks and vali-
date our design.
1 Introduction
Distributed denial of service (DDoS) attacks continue
to plague the Internet.
In a typical DDoS attack, at-
tackers compromise multiple machines and use them to
send large numbers of packets to a single victim server
to overwhelm its capacity. For example, on October 21,
2002, an attacker ﬂooded the root DNS servers with traf-
ﬁc in an effort to deprive the Internet of the DNS name
lookup service (which would have paralyzed the major-
ity of Internet applications). Only ﬁve out of thirteen
root servers were able to withstand the attack [22]. Pre-
viously, DDoS attacks had shut down several large In-
ternet sites, such as Yahoo! and eBay.
As an increasing number of businesses and services
depend on the Internet, safeguarding them against at-
tacks is a priority. Some critical infrastructures - for
example, emergency telephone response (911) - increas-
ingly rely on the Internet for communication and coor-
dination [25]. Clearly, critical services demand effective
countermeasures against DDoS attacks.
One challenge in defending against DDoS attacks
is that attackers often use spoofed source IP addresses
(hereafter referred to as spoofed IP addresses) which
make it difﬁcult to identify and block their packets un-
der the current Internet infrastructure. Because of the
importance and urgency of the DDoS problem, many re-
searchers have studied countermeasures (we review their
efforts in Section 7). A common solution in proposed
systems is a traceback mechanism that has routers mark
information on packets en-route to the victim, who can
then use that information to reconstruct the path that the
packets take from the attacker through the Internet, de-
spite IP address spooﬁng. The path information obtained
by the traceback mechanism can then be used to install
network ﬁlters upstream from the victim to block attack
trafﬁc. The common assumption in these mechanisms
is the need to reconstruct the exact path (or a path pre-
ﬁx) to the attacker in order to defend the victim. Most
of these mechanisms (with the exception of [34]) also
assume that the victim only initiates the traceback or
passively receives traceback information, but does not
otherwise actively participate in packet ﬁltering. These
assumptions cause the following problems:
• The victim must receive large numbers of packets
before it is able to reconstruct the path that they are
taking.
• Routers and/or victims need to perform non-trivial
operations in marking packets or in reconstructing
paths.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
1
• Network ﬁltering is done on a per-ﬂow or per-
network basis using coarse identiﬁcation criteria,
rather than on a per-packet basis.
• The victim has to rely on upstream routers to per-
form packet ﬁltering, even once the attack paths
have been identiﬁed.
In this paper, we present a new approach for defend-
ing against DDoS attacks that does not rely on these
assumptions. We observe that reconstructing the exact
path to the attacker is not necessary in defending against
a DDoS attack - we only need to get an indication of the
particular path that attack packets take. In addition, be-
cause our approach transmits path information in each
packet, the victim can ﬁlter packets itself, based on its
knowledge of the path information carried by a single
prior attack packet.
Our approach embeds in each packet an identiﬁer
based on the router path that a packet traverses. The
victim need only classify a single packet as malicious
to be able to ﬁlter out all subsequent packets with the
same marking. What makes this possible is that our
packet marking is deterministic - all packets traversing
the same path carry the same marking. All previous
marking schemes that we are aware of are probabilis-
tic in nature, in which the victim needs to collect a large
number of packets to reconstruct the path. In our ap-
proach, a path identiﬁer ﬁts within a single packet so
the victim can immediately ﬁlter trafﬁc after receiving
just one attack packet. Our scheme is extremely light-
weight, both on the routers for marking, and on the vic-
tims for decoding. The router marking in our scheme is
also robust to the presence of legacy routers and shows
strong incremental deployment properties. Finally, our
scheme can also be used to enhance the effectiveness
of other DDoS countermeasures, for example, the Push-
back framework [15, 20], as we discuss in Section 8.2.
The remainder of the paper is organized as follows:
in Section 2 we classify different DDoS attacks and pro-
vide some assumptions that we use to help explain the Pi
scheme. In Section 3 we provide a high-level overview
of the Pi scheme and what makes it unique from previ-
ously proposed DDoS defense schemes. In Section 4 we
present the packet marking algorithm that we propose
to deploy on Internet routers. In Section 5 we discuss
packet ﬁlters that use Pi marks to effectively ﬁlter attack
trafﬁc in DDoS attacks. In Section 6 we present a DDoS
model and experiments showing the Pi scheme’s perfor-
mance under a DDoS attack. In Section 7 we cover re-
lated work that has been done in the ﬁeld of DDoS de-
fense and monitoring. We discuss further applications
and improvements to Pi in Section 8 and Section 9 con-
cludes the paper.
2 Problem Statement and Assumptions
Our proposal seeks to prevent DDoS attacks which
use packet ﬂoods to consume network and server re-
sources. We classify these attacks as follows:
• Network Resource Attack.
In this attack, the at-
tacker sends many useless packets to the victim
server with the intention of depleting the network
bandwidth connecting the server to the rest of the
Internet. If this attack succeeds and network band-
width is sufﬁciently depleted, legitimate users ex-
perience severe or complete service degradation be-
cause their packets are unable to reach the server.
• Server Resource Attacks.
– Server Processing Attack. In this attack, sim-
ilar to the Network Resource Attack, the at-
tacker sends many useless packets with the
intention of overwhelming the victim server’s
ability to process the increased load of pack-
ets. The server is then forced to drop incom-
ing packets indiscriminately, and thus legiti-
mate users experience service degradation or
failure.
– Server Memory Attack: In this attack, the at-
tacker takes advantage of ambiguities in pro-
tocols to deplete the victim server’s memory.
Ambiguities can range from the reservation
of resources for half-open connections (TCP
SYN ﬂooding attacks [6, 29]) to the buffer-
ing of packet fragments for a packet which the
attacker will never completely send (IP frag-
mentation attacks). Researchers often pro-
pose computational solutions for this class of
attacks [10, 12, 17]. We do not discuss these
attacks further in this paper.
In dealing with the above attacks, we assume that the
Pi ﬁlter, which uses Pi markings to make per-packet ac-
cept/drop decisions, can be deployed either on the vic-
tim’s machine or, preferably, on a dedicated machine
such as a modiﬁed ﬁrewall, and placed in the path to the
victim server. In the case of a network resource attack,
we assume that a Pi ﬁlter is deployed on the ISP’s side of
the last-hop link, and can thus ﬁlter packets before they
consume the victim’s network bandwidth.
We assume that routers are capable of marking the IP
Identiﬁcation ﬁeld of all packets that they forward, pro-
vided that the marking algorithm is reasonably small in
both processor and memory usage. Using the IP Iden-
tiﬁcation ﬁeld for packet marking is widespread in the
literature, ﬁrst proposed by Savage et al. [27, 28] and
later in several other works on IP traceback [1, 30, 31].
Lastly, even though different routers may decrement the
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
2
TTL ﬁeld differently, we assume that each router has
a stable policy and decrements the TTL ﬁeld in a con-
sistent manner. This assumption is consistent with the
implementations of most routers.
3 Design Motivation
IP traceback methods provide the victim of a DDoS
attack with a way to reconstruct the path of attack pack-
ets through the Internet to its attackers. Presumably,
with this information, the victim can request that up-
stream ISPs deploy packet ﬁlters to drop packets orig-
inating from the attacking networks and destined for the
victim. Typically, this path reconstruction is accom-
plished by having routers mark each packet that they
forward in transit to the victim with some fragment of
their IP address. These fragments can be used by the
victim to reconstruct the IP addresses of the routers in
the path that the packet traverses. Because there is no
space deﬁned in the IPv4 header to record these mark-
ings, some header information must be overwritten to
mark packets in this fashion. Savage et al. [27, 28] ar-
gue that the IP Identiﬁcation ﬁeld is a good candidate for
this use, however, this ﬁeld is only 16 bits long. As we
show in Figure 1, the average path length in our sample
Internet data sets (taken from Burch and Cheswick’s In-
ternet Mapping Project [3, 14] and from CAIDA’s Skit-
ter Map [5]) is approximately 15 hops. The combined IP
addresses of every router on an average hop-length path
requires:
path ) · 32( bits
15( hops
hop )
16(
bits
packet )
= 30 packets
path
Of course, this represents the ideal lower bound on
the number of packets required to reconstruct a single
path. The problem is made more difﬁcult by the limited
resources and strict performance requirements of mod-
ern Internet routers. Internet routers are assumed to be
incapable of tracking speciﬁc packet ﬂows or keeping
statistics based on the content of the packets they for-
ward, because such features would cripple router perfor-
mance. Therefore, it is impossible for routers to coor-
dinate the piecewise delivery of traceback fragments to
the victim. Probabilistic solutions deal with these per-
formance constraints by lowering the efﬁciency of the
traceback data transmission so that routers need not per-
form steps more computationally expensive than a coin
toss per packet forwarded. This results in redundant in-
formation being sent to the victim, or new information
being overwritten by different routers along the path be-
fore arriving at the victim. In general, probabilistic solu-
tions perform signiﬁcantly worse than the lower bound
presented, requiring anywhere from thousands to mil-
lions of packets to reconstruct a single attack path, of
which there can be thousands in a large DDoS attack.
s
h
t
a
P
l
l
a
f
o
n
o
i
t
c
a
r
F
0.125
0.1
0.075
0.05
0.025
0
0
Skitter Map
Internet Map
10
20
Length of Path (# of Hops)
30
40
Figure 1. Distribution of
internet path
lengths using the Skitter Map and the In-
ternet Map.
We propose dealing with the DDoS attack problem in
a different way. We concede that reconstructing the path
to the attackers in a DDoS attack is hard given the space
restrictions of the IPv4 header and the resource limita-
tions of Internet routers. Furthermore, since DDoS at-
tackers are often compromised machines, co-opted by
a group of hackers exploiting other security vulnerabil-
ities, there is little incentive for the victim to identify
speciﬁc attacker machines other than the need to drop
incoming packets from those machines without consum-
ing signiﬁcant server resources. If each packet from the
attackers could be identiﬁed by some distinctive mark-
ing, then the victim could drop such packets by only
looking at their marking value.
To illustrate what we mean by the term distinctive
marking we take the case of the Internet modeled as a
complete-binary tree, rooted at the victim server, with
n nodes at the leaves.
In this case, each path from a
leaf node to the root can be uniquely represented by
(cid:5)log2(n)(cid:6) bits. Using the estimated current size of the
Internet [7] as n, we get (cid:5)log2(162, 128, 493)(cid:6) = 28 bits
to uniquely represent each possible path from Internet
end-hosts to our victim. Although this model is an ex-
ceedingly simple representation of the Internet, we use it
to illustrate that path information need not be exclusively
constructed of router IP addresses and that using the no-
tion of a path identiﬁer, we have reduced the necessary
information for a perfect identiﬁer to less than twice the
available space agreed upon for packet marking in the
IPv4 header.
Unfortunately, 28 bits is still 12 bits more than are
deemed available for marking in the IPv4 header. The Pi
scheme attempts to construct a unique path identiﬁer that
ﬁts entirely in the 16-bit space of the IP Identiﬁcation
ﬁeld of a single packet. The Pi mark is deterministic,
so that a marking for a particular path remains the same
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
3
TTL: 254
Last Bit: 1
R2
TTL: 253
Last Bit: 0
R3
A
R1
TTL: 255
Last Bit: 1
R5
V
TTL: 251
Last Bit: 0
R4
TTL: 252
Last Bit: 1
X X X
X
1
X
X
X
1 1
X X
1 1 0
X
1 1 0 1
0 1 0 1
0 1 0 1
3 2 1 0
3 2 1 0
3 2 1 0
3 2 1 0
3 2 1 0
Figure 3. Example of our initial marking scheme. The packet travels from the attacker A to the