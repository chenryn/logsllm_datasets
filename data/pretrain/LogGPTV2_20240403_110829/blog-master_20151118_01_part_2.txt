progress: 4.0 s, 31.0 tps, lat 311.467 ms stddev 40.406  
progress: 5.0 s, 29.0 tps, lat 347.463 ms stddev 34.026  
progress: 6.0 s, 27.0 tps, lat 373.772 ms stddev 37.217  
progress: 7.0 s, 21.0 tps, lat 447.816 ms stddev 125.024  
progress: 8.0 s, 29.0 tps, lat 351.473 ms stddev 60.039  
progress: 9.0 s, 25.0 tps, lat 423.574 ms stddev 45.458  
progress: 10.0 s, 37.0 tps, lat 275.829 ms stddev 27.409  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 10  
number of threads: 10  
duration: 10 s  
number of transactions actually processed: 292  
latency average: 346.487 ms  
latency stddev: 77.228 ms  
tps = 28.440704 (including connections establishing)  
tps = 28.486822 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.005226        \setrandom id 1 50000000  
        346.480860      update test set info=info where id=:id;  
$./pgsql9.5/bin/pgbench -M simple -n -r -f ./test.sql -P 1 -c 10 -j 10 -T 10  
progress: 1.0 s, 4.0 tps, lat 598.394 ms stddev 256.699  
progress: 2.0 s, 4.0 tps, lat 1497.661 ms stddev 247.360  
progress: 3.0 s, 21.0 tps, lat 927.265 ms stddev 707.750  
progress: 4.0 s, 29.0 tps, lat 359.723 ms stddev 42.065  
progress: 5.0 s, 29.0 tps, lat 351.328 ms stddev 23.978  
progress: 6.0 s, 33.0 tps, lat 302.434 ms stddev 14.584  
progress: 7.0 s, 29.0 tps, lat 340.723 ms stddev 11.129  
progress: 8.0 s, 30.0 tps, lat 328.687 ms stddev 23.626  
progress: 9.0 s, 29.0 tps, lat 349.512 ms stddev 30.368  
progress: 10.0 s, 30.0 tps, lat 339.405 ms stddev 40.958  
transaction type: Custom query  
scaling factor: 1  
query mode: simple  
number of clients: 10  
number of threads: 10  
duration: 10 s  
number of transactions actually processed: 248  
latency average: 409.842 ms  
latency stddev: 304.170 ms  
tps = 23.951046 (including connections establishing)  
tps = 23.987521 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.005238        \setrandom id 1 50000000  
        409.835895      update test set info=info where id=:id;  
```  
update 并发性能分析  
使用1个连接或多个连接，最终的TPS几乎一致。和GP在处理update SQL的锁有关。  
例如：  
会话A  
```  
digoal=# begin;  
BEGIN  
digoal=# update test set info=info where id=100000;  
UPDATE 1  
digoal=# select pg_backend_pid();  
 pg_backend_pid   
----------------  
          32357  
(1 row)  
```  
会话B  
```  
digoal=# update test set info=info where id=100001;  
```  
等待。  
原因是会话A持有表锁。  
```  
digoal=# select * from pg_locks where pid=32357;  
-[ RECORD 1 ]-+-----------------  
locktype      | relation  
database      | 17144  
relation      | 17530  
page          |   
tuple         |   
transactionid |   
classid       |   
objid         |   
objsubid      |   
transaction   | 163903  
pid           | 32357  
mode          | RowExclusiveLock  
granted       | t  
mppsessionid  | 603  
mppiswriter   | t  
gp_segment_id | -1  
-[ RECORD 2 ]-+-----------------  
locktype      | relation  
database      | 17144  
relation      | 17501  
page          |   
tuple         |   
transactionid |   
classid       |   
objid         |   
objsubid      |   
transaction   | 163903  
pid           | 32357  
mode          | ExclusiveLock  
granted       | t  
mppsessionid  | 603  
mppiswriter   | t  
gp_segment_id | -1  
-[ RECORD 3 ]-+-----------------  
locktype      | transactionid  
database      |   
relation      |   
page          |   
tuple         |   
transactionid | 163903  
classid       |   
objid         |   
objsubid      |   
transaction   | 163903  
pid           | 32357  
mode          | ExclusiveLock  
granted       | t  
mppsessionid  | 603  
mppiswriter   | t  
gp_segment_id | -1  
```  
## 并发删除测试  
delete，单进程基准性能  
```  
digoal=# \timing  
Timing is on.  
digoal=# delete from test where id=1;  
DELETE 1  
Time: 240.666 ms  
digoal=# delete from test where id=2;  
DELETE 1  
Time: 36.234 ms  
digoal=# delete from test where id=3;  
DELETE 1  
Time: 28.856 ms  
```  
delete 并发性能测试  
```  
$vi test.sql  
\setrandom id 1 50000000  
delete from test where id=:id;  
$./pgsql9.5/bin/pgbench -M simple -n -r -f ./test.sql -P 1 -c 10 -j 10 -T 10  
progress: 1.0 s, 4.0 tps, lat 601.661 ms stddev 263.427  
progress: 2.0 s, 4.0 tps, lat 1511.570 ms stddev 247.955  
progress: 3.0 s, 25.0 tps, lat 800.810 ms stddev 691.464  
progress: 4.0 s, 35.0 tps, lat 286.888 ms stddev 11.161  
progress: 5.0 s, 37.0 tps, lat 264.560 ms stddev 13.016  
progress: 6.0 s, 34.0 tps, lat 296.716 ms stddev 11.332  
progress: 7.0 s, 32.0 tps, lat 275.880 ms stddev 26.188  
progress: 8.0 s, 26.0 tps, lat 412.082 ms stddev 147.997  
progress: 9.0 s, 17.0 tps, lat 461.175 ms stddev 171.816  
progress: 10.0 s, 34.0 tps, lat 379.339 ms stddev 190.013  
transaction type: Custom query  
scaling factor: 1  
query mode: simple  
number of clients: 10  
number of threads: 10  
duration: 10 s  
number of transactions actually processed: 258  
latency average: 392.610 ms  
latency stddev: 318.515 ms  
tps = 25.113468 (including connections establishing)  
tps = 25.147542 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.005252        \setrandom id 1 50000000  
        392.604167      delete from test where id=:id;  
$./pgsql9.5/bin/pgbench -M prepared -n -r -f ./test.sql -P 1 -c 10 -j 10 -T 10  
progress: 1.0 s, 26.0 tps, lat 332.305 ms stddev 115.346  
progress: 2.0 s, 31.0 tps, lat 315.662 ms stddev 99.036  
progress: 3.0 s, 40.0 tps, lat 255.953 ms stddev 13.549  
progress: 4.0 s, 43.0 tps, lat 232.854 ms stddev 6.878  
progress: 5.0 s, 41.0 tps, lat 243.544 ms stddev 11.044  
progress: 6.0 s, 35.0 tps, lat 263.554 ms stddev 23.382  
progress: 7.0 s, 29.0 tps, lat 375.702 ms stddev 183.176  
progress: 8.0 s, 37.0 tps, lat 259.230 ms stddev 16.053  
progress: 9.0 s, 37.0 tps, lat 271.520 ms stddev 13.303  
progress: 10.0 s, 26.0 tps, lat 320.553 ms stddev 148.474  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 10  
number of threads: 10  