术专长，以及他的洞察力。你真行，Valentin。
Head First审阅团队有两位新人，Barney Marispini和IkeVan Atta担任专挑本书毛病的工作，你们两位给我们真正
严酷的反馈，谢谢你们的加入。
我们还从Javaranch的主考人/大师——Mark Spritzler、JasonMenard、Dirk Schreckmann、Thomas Paul与
MargaritaIsaeva等人那里得到杰出的技术帮助。一如平常，要特别感谢javaranch.comTrail的老板PaulWheaton。
感谢参加“挑选HFDP封面”竞赛的最后决赛入围者。赢家是SiBrewster，他提交了获胜的文字，说服我们
选用本书封面的女人。其他入围最后决赛的有：AndrewEsse、GianFrancoCasula、HelenCrosbie、PhoTek、
Helen Thomas、Sateesh Kommineni及Jeff Fisher。
你现在的位置》xxxvii
---
## Page 21
还有更多人要感谢
还有更多人要感谢
来目Eric和Elisabeth的感谢
与两位令人惊讶的“导游”—KathySierra和BertBates—共同写一本HeadFirst书，是一次放肆的旅
行。你们把所有写书的惯例一股脑儿地抛弃，而带我们进入充满说故事、学习理论、认知科学及流行
文化的世界，这是读者成为主宰的世界。谢谢两位让我们进入你们的神奇世界，我们希望作这本Head
First是正确的。老实说，我们还震惊不已。谢谢你们细心地指导、推动我们向前走，而最主要的就是信
任我们（还有你的宝贝）。我们知道，两位都是相当地“鬼灵精”，也都是最时尚的29岁，所以…接
下来呢？
要大大地感谢MikeLoukides和MikeHendrickson。MikeL.从头到尾都伴随着我们。Mike，你有深刻见解
的反馈帮助了本书的形成，你的鼓励让我们继续往前走下去。MikeH.，感谢你持续五年来游说我们写一
本关于模式的书：我们终于做到了，并且很高兴等到了HeadFirst系列。
特别感谢ErichGamma，他所做的已经远超过审校本书的责任（甚至在他度假时，都带着本书的草
稿）。Erich，你对本书的关注激励了我们，而你彻底的技术审校，无可估量地改善了这本书。同样感谢
整个四人组的支持和关注，并且还特别出现在对象村。我们也从WardCunningham和模式社群处受惠不
少，他们创建了波特兰模式库（PortlandPatternRepository）—一我们写本书时不可或缺的资源。
写本技术书需要集结一些人的智慧与力量：BillPugh和KenArnold在单件模式上，给了我们专业的建议：
JoshuaMarinacci提供了Swing的技巧和建议：JohnBrewer的“为什么是鸭子”产生了模拟鸭子的设想
（我们很高兴，他也喜欢鸭子）；DanFriedman激发了小单件的例子，DanielSteinberg担任我们的技术
联络和感情网络：再感谢Apple的JamesDempsey，允许我们使用他的MVC歌曲。
最后，私下感谢Javaranch审校团队，为我们做最高级别的校对，以及温馨的支持。还有更多人，没有写
在这里
来自Kathy和Bert的感谢
我们很想感谢MikeHendrickson找到Eric和Elisabeth.……但是不能。因为这两人，我们发现（令我们恐
怖的是），已经不只有我们可以写HeadFirst的书了。不过，如果读者想要相信，在书里所有的“酷
事”都是Kathy和Bert的作为，那么，“我们”是谁，可以让他们循规蹈矩？
*之所以要感谢这么多人，是因为我发现了这样一条定律，书中致谢部分里提到的每个人都至少会买一
本书，可能还会买好几本书，给亲戚和周围的所有人都送上一本，如果你希望我们在下一本书的致谢里提
到你，而且你们家族的人很多的话，可以写信给我们。
xxxvili引子
---
## Page 22
目录 （概览）
引子
Xxvii
1
欢迎来到设计模式世界：设计模式人门
1
2
让你的对象知悉现况：观察者模式
37
3
装饰对象：装饰者模式
79
4
烘烤OO的精华：工厂模式
109
5
独一无二的对象：单件模式
169
6
封装调用：命令模式
191
7
随遇而安：适配器与外观模式
235
8
封装算法：模板方法模式
275
9
管理良好的集合：选代器与组合模式
315
10
事物的状态：状态模式
385
11
控制对象访问：代理模式
429
12
模式中的模式：复合模式
499
13
真实世界中的模式：与设计模式相处
577
14
附录A：剩下的模式
611
目录 (真正的目录）
引子
让你的大脑来学设计模式。你想学些东西，但是你的大脑却在帮倒忙，不让你
记住这些东西。你的大脑在想，“还是把空间留给更重要的事情吧，比方说要躲避的野
兽，还有，光着身子滑雪不太好吧。”那么你该如何骗过大脑，让它认为要是不知道设
计模式你就活不下去了？
谁适合读这本书？
xxvii
我们知道你的大脑在想什么
xxix
元认知
xxxi
让你的大脑就范
xxxiii
技术审校
xxxvi
xxxvii
xii
---
## Page 23
设计模式入门
欢迎来到设计模式世界
有些人已经解决你的问题了。在本章，你将学到为何（以及如何）利用其
他开发人员的智慧与经验。他们遭遇过相同的问题，也顺利地解决过这些问题。本
章结束前，我们会先看看设计模式的用途与优点，再看一些关键的00设计原则，
并通过一个实例来了解模式是如何运作的。使用模式最好的方式是：“把模式装进
脑子里，然后在你的设计和已有的应用中，寻找何处可以使用它们。”以往是代码
复用，现在是经验复用。
模拟鸭子应用
2
Joe想到继承
5
利用接口如何？
6
记住，知运抽象、继承、
多态这些概念，并不会马
软件开发的不变真理
8
上社你变威好的面向对象设计
者。设计大师美心的是建立弹性的
分开变化和不变部分
10
设计，可以维护，可以险付改变。
设计鸭子的行为
11
测试鸭子的代码
18
动态地设置行为
20
封装行为的大局观
22
“有一个”比“是一个”更好
23
策略模式
24
共享模式词汇的威力
28
我如何使用设计模式？
29
设计箱内的工具
32
习题解答
34
你的大脑
许
多
模
式
PDG
你的代码经过设
计模式改善之后
焕然一新
!!!X!
---
## Page 24
2
观察者模式
让你的对象知悉现况
有趣的事情发生时，可千万别错过了！有一个模式可以帮你的对象
知悉现况，不会错过该对象感兴趣的事。对象甚至在运行时可决定是否要继续被
通知。观察者模式是JIDK中使用最多的模式之一，非常有用。我们也会一并介绍
一对多关系，以及松耦合（对，没错。我们说耦合）。有了观察者，你将会消息
灵通。
气象观测站
39
认识观察者模式
44
出版者+订阅者=观察者模式
45
00基础
五分钟短剧：观察主题
48
抽象
定义观察者模式
51
松耦合的威力
53
00原则
设计气象站
56
封装变化
实现气象站
57
使用Java内建的观察者模式
64
多用组合，少用继承
java.util.Observable的黑暗面
71
针对接口编程，不针对实
设计箱内的工具
74
现编程
习题解答
78
为交互对象之间的松耦合
设计币努力
一对多美系
具有状态
的对象
依鞍
对
自动更新/通知
许多观察者
AIX
---
## Page 25
3
装饰者模式
装饰对象
们即将再度探讨典型的继承滥用问题。你将在本章学到如何使用对象组合的方
式，做到在运行时装饰类。为什么呢？一旦你熟悉了装饰的技巧，你将能够在不
修改任何底层类代码的情况下，给你的（或别人的）对象赋予新的职责。
欢迎来到星巴兹咖啡
80
开放一关闭原则
86
认识装饰者模式
88
我曾经以为男子汉应该用继
以装饰者构造饮料订单
89
承处理一切。后来我领教到运行时
扩展，运比编滑时期的魅承威力大。
定义装饰者模式
16
看我现在光采的样子！
装饰饮料
92
写下星巴兹的代码
95
D
真实世界的装饰者：JavaI/O
100
编写自己的JavaIO装饰者
102
设计箱内的工具
105
习题解答
106
PDG
XV
---
## Page 26
工厂模式
4
烘烤00的精华
准备好开始烘烤某些松耦合的OO设计。除了使用new操作符之外，
还有更多制造对象的方法。你将了解到实例化这个活动不应该总是公开地进行，
也会认识到初始化经常造成“耦合”问题。你不希望这样，对吧？读下去，你将
了解工厂模式如何从复杂的依赖中帮你脱困。
当看到“new”，就会想到“具体”
110
对象村比萨
112
封装创建对象的代码
114
建立一个简单比萨工厂
115
定义简单工厂
117
给比萨店使用的框架
120
允许子类做决定
121
让我们开一家比萨店吧
123
声明一个工厂方法
125
认识工厂方法模式
131
平行的类层级
132
定义工厂方法模式
134
一个很依赖的比萨店
137
看看对象依赖
138
依赖倒置原则
139
再回到比萨店
144
原料家族
145
建造原料工厂
146
看看抽象工厂
153
幕后花絮
154
定义抽象工厂模式
156
比较工厂方法和抽象工厂
160
设计箱内的工具
162
习题解答
164
xvi
---
## Page 27
5
单件模式
独一无二的对象
单件模式：用来创建独一无二的，只能有一个实例的对象的
入场券。告诉你一个好消息，单件模式的类图可以说是所有模式的类图中最简
单的，事实上，它的类图上只有一个类！但是，可不要兴奋过头，尽管从类设计
的视角来说很简单，但是实现上还是会遇到相当多的波折。所以，系好安全带，
出发了！
独一无二
170
小小单件
171
剖析经典的单件模式实现
173
单件的告白
174
巧克力工厂
175
定义单件模式
177
178
化身为JVM
179
处理多线程
180
单件Q&A
184
设计箱内的工具
186
习题解答
188
00模式
确保一个类只
单件模式一
有一个实例，并提供全届访问点。
PDG
xvii
---
## Page 28
6
命令模式
封装调用
在本章，我们将把封装带到一个全新的境界：把方法调用封
装起来。没错，通过封装方法调用，我们可以把运算块包装成形。所以调用
此运算的对象不需要关心事情是如何进行的，只要知道如何使用包装成形的方法
来完成它就可以。通过封装方法调用，也可以做一些很聪明的事情，例如记录日
志，或者重复使用这些封装来实现撤销。
巴斯特家电自动化公司
192