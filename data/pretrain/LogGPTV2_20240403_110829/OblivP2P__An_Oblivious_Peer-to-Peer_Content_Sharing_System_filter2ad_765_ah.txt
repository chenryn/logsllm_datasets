multiple trackers in the system. Moreover, it would be
interesting to ﬁnd out the relation between the number
of trackers, number of peers for an ideal throughput of
OBLIVP2P.
8 Related Work
Long-term trafﬁc analysis. Anonymous systems like
mix networks and onion routing are susceptible to long-
term trafﬁc analysis as shown in Section 2. Statis-
tical disclosure attacks proposed by Danezis and en-
hanced by other researchers improve the likelihood of
de-anonymizing users on these systems [66–73]. More-
over, existing trafﬁc analysis attacks on onion routing
based approaches [27–30, 45] can reveal users’ iden-
tities with observing multiple communication rounds.
Other P2P systems like Crowds [19], Tarzan [18], Mor-
phMix [20], AP3 [21], Salsa [22], ShadowWalker [23],
Freenet [3] offer anonymity for users. However, these
systems show limits against global adversary with long-
term trafﬁc analysis capabilities.
Side-Channels. Previous work has shown possible at-
tacks by leveraging side channels such as packet sizes,
number of packets and timing. These side channels leak
users’ private information, e.g., illnesses/medications/-
surgeries, income and investment secrets [74]. An at-
tacker can employ machine learning techniques (e.g.,
Support Vector Machines) on network trafﬁc to identify
the user’s browsing websites [28–30, 45]. However, our
focus in this paper is to only prevent long-term pattern
trafﬁc analysis. The aforementioned side-channels of
trafﬁc analysis are out of scope.
960  25th USENIX Security Symposium 
USENIX Association
16
Multi-servers and parallel ORAM. There have been
works on how to optimize ORAM constructions while
leveraging multiple servers [75–77], multiple CPUs [56,
78], computational servers [53, 54], or distributed under
a weaker threat model [55] . However, none of these re-
cent constructions ﬁt to a P2P setting as is. This is mainly
due to the inherent client / server setting that results on a
single entity bottleneck. The client has to either perform
non-trivial computation or/and transmit several amount
of bits. We brieﬂy discuss these works below.
OblivStore [76], Lu and Ostrovsky [75], and Stefanov
and Shi [77] demonstrate how to decrease the communi-
cation overhead while leveraging multiple ORAM nodes
and servers. However, all these constructions are central-
ized and route the block through the tracker. This leads
to a single entity bottleneck.
Recently, researchers have proposed oblivious parallel
RAM (OPRAM) [56, 78]. This was motivated by cur-
rent multi-cpu architectures that can access the same or
multiple resources in parallel. However, OPRAM does
not decrease the communication overhead making it as
well a single-entity bottleneck. Dachman-Soled et al. in-
troduced oblivious network RAM (ONRAM) [55]. ON-
RAM can reduce the communication overhead between
the client and multiple banks of memory to be constant in
the number of blocks. However, it assumes a weak threat
model, and cannot achieve obliviousness in the case of a
global adversary.
9 Conclusion
We advocate hiding data access patterns as a necessary
step in defenses against long-term trafﬁc pattern analysis
in P2P content sharing systems. To this end, we propose
OBLIVP2P— an oblivious peer-to-peer protocol. Our
evaluation demonstrates that OBLIVP2P is parallelizable
and linearly scalable with increase in number of peers,
without bottleneck on a single entity.
Acknowledgement. We thank the anonymous reviewers of
this paper for their helpful feedback. We also thank Erik-Oliver
Blass, Travis Mayberry, Shweta Shinde and Hung Dang for
useful discussions and feedback on an early version of the pa-
per. This work is supported by the Ministry of Education, Sin-
gapore under under Grant No. R-252-000-560-112. All opin-
ions expressed in this work are solely those of the authors. A
note of thanks to the DeterLab team [64] for enabling access to
the infrastructure.
References
[1] “Bittorrent,” http://www.bittorrent.com/.
[2] “Storj.io,” http://storj.io/.
[3] “Freenet: The free network,” https://freenetproject.org.
[4] “Akamai,” http://www.akamai.com/.
[5] S. Iyer, A. Rowstron, and P. Druschel, “Squirrel: A decentralized
peer-to-peer web cache,” in PODC, 2002.
surge
bittorrent
[6] “Utorrent
&
lion
bittorrent-surges-to-150-million-monthly-users-120109/.
monthly
users,”
to
mil-
https://torrentfreak.com/
150
alto
[7] “Palo
port,”
app-usage-risk-report-visualization/.
networks
application
re-
http://researchcenter.paloaltonetworks.com/
usage & threat
[8] M. Piatek, T. Kohno, and A. Krishnamurthy, “Challenges and di-
rections for monitoring p2p ﬁle sharing networks, or, why my
printer received a dmca takedown notice,” in HotSec, 2008.
[9] G. Siganos, J. M. Pujol, and P. Rodriguez, “Monitoring the bit-
torrent monitors: A bird’s eye view,” in PAM, 2009.
[10] S. Le Blond, C. Zhang, A. Legout, K. Ross, and W. Dabbous, “I
know where you are and what you are sharing: exploiting p2p
communications to invade users’ privacy,” in IMC, 2011.
[11] D. L. Chaum, “Untraceable electronic mail, return addresses, and
digital pseudonyms,” Communications of the ACM, 1981.
[12] G. Danezis, R. Dingledine, and N. Mathewson, “Mixminion: De-
sign of a type iii anonymous remailer protocol,” in IEEE S&P,
2003.
[13] U. M¨oller, L. Cottrell, P. Palfrader, and L. Sassaman, “Mixmaster
protocol-version 2,” 2003.
[14] M. G. Reed, P. F. Syverson, and D. M. Goldschlag, “Anonymous
connections and onion routing,” J-SAC, 1998.
[15] R. Dingledine, N. Mathewson, and P. F. Syverson, “Tor: The
second-generation onion router,” in USENIX Security, 2004.
[16] T. Wang, K. Bauer, C. Forero, and I. Goldberg, “Congestion-
aware path selection for tor,” in FC, 2012.
[17] M. Akhoondi, C. Yu, and H. V. Madhyastha, “Lastor: A low-
latency as-aware tor client,” in IEEE S&P, 2012.
[18] M. J. Freedman and R. Morris, “Tarzan: A peer-to-peer
anonymizing network layer,” in CCS, 2002.
[19] M. K. Reiter and A. D. Rubin, “Crowds: Anonymity for web
transactions,” TISSEC, 1998.
[20] M. Rennhard and B. Plattner, “Introducing morphmix: peer-to-
peer based anonymous internet usage with collusion detection,”
in WPES, 2002.
[21] A. Mislove, G. Oberoi, A. Post, C. Reis, P. Druschel, and D. S.
Wallach, “Ap3: Cooperative, decentralized anonymous commu-
nication,” in SIGOPS European Workshop, 2004.
[22] A. Nambiar and M. Wright, “Salsa: a structured approach to
large-scale anonymity,” in CCS, 2006.
[23] P. Mittal and N. Borisov, “Shadowwalker: peer-to-peer anony-
mous communication using redundant structured topologies,” in
CCS, 2009.
[24] A. Pﬁtzmann and M. Hansen, “Anonymity, unlinkability,
undetectability, unobservability, pseudonymity, and identity
management-a consolidated proposal for terminology,” Version
v0, 2008.
[25] D. Agrawal and D. Kesdogan, “Measuring anonymity: The dis-
closure attack,” IEEE S&P, 2003.
[26] D. Kesdogan and L. Pimenidis, “The hitting set attack on
anonymity protocols.” in IH, 2004.
[27] M. Edman and P. Syverson, “As-awareness in tor path selection,”
in CCS, 2009.
[28] K. P. Dyer, S. E. Coull, T. Ristenpart, and T. Shrimpton, “Peek-a-
boo, i still see you: Why efﬁcient trafﬁc analysis countermeasures
fail,” in IEEE S&P, 2012.
USENIX Association  
25th USENIX Security Symposium  961
17
[29] T. Wang and I. Goldberg, “Improved website ﬁngerprinting on
tor,” in WPES, 2013.
[54] T. Moataz, T. Mayberry, and E.-O. Blass, “Constant Communi-
cation ORAM with Small Blocksize,” in CCS, 2015.
[30] T. Wang, X. Cai, R. Nithyanand, R. Johnson, and I. Goldberg,
“Effective attacks and provable defenses for website ﬁngerprint-
ing,” in USENIX Security, 2014.
[31] “Bittorrent over tor isn’t a good idea,” https://blog.torproject.org/
blog/bittorrent-over-tor-isnt-good-idea.
[32] S. L. Blond, P. Manils, C. Abdelberi, M. A. D. Kaafar, C. Castel-
luccia, A. Legout, and W. Dabbous, “One bad apple spoils the
bunch: exploiting p2p applications to trace and proﬁle tor users,”
arXiv, 2011.
[33] O. Goldreich and R. Ostrovsky, “Software protection and simu-
lation on oblivious rams,” J. ACM, 1996.
[34] “Oblivious peer-to-peer protocol,” https://github.com/jiayaoqijia/
OblivP2P-Code.
[35] “Gnutella,” https://en.wikipedia.org/wiki/Gnutella.
[36] Y. Jia, G. Bai, P. Saxena, and Z. Liang, “Anonymity in peer-
assisted cdns: Inference attacks and mitigation,” in PETS, 2016.
[37] “Scaneye’s global bittorrent monitor,” http://www.cogipas.com/
anonymous-torrenting/torrent-monitoring/.
[38] K. Bauer, D. McCoy, D. Grunwald, and D. Sicker, “Bitstalker:
Accurately and efﬁciently monitoring bittorrent trafﬁc,” in WIFS,
2009.
[39] T. Chothia, M. Cova, C. Novakovic, and C. G. Toro, “The unbear-
able lightness of monitoring: Direct monitoring in bittorrent,” in
SECURECOMM, 2012.
[40] G. Danezis and C. Diaz, “A survey of anonymous communication
channels,” Tech. Rep., 2008.
[41] H. Corrigan-Gibbs, D. Boneh, and D. Mazi`eres, “Riposte: An
anonymous messaging system handling millions of users,” in
IEEE S&P, 2015.
[42] M. Backes, A. Kate, S. Meiser, and E. Mohammadi, “(nothing
else) mator(s): Monitoring the anonymity of tor’s path selection,”
in CCS, 2014.
[43] “Tor
suffers
trafﬁc
//www.techtimes.com/articles/11711/20140802/
tor-suffers-trafﬁc-conﬁrmation-attacks-say-goodbye-to-
anonymity-on-the-web.htm .
conﬁrmation
attack,”
http:
[44] “Trafﬁc conﬁrmation attack,” https://blog.torproject.org/blog/
tor-security-advisory-relay-early-trafﬁc-conﬁrmation-attack.
[45] A. Panchenko, L. Niessen, A. Zinnen, and T. Engel, “Website
ﬁngerprinting in onion routing based anonymization networks,”
in WPES, 2011.
[46] J. Kong, W. Cai, and L. Wang, “The evaluation of index poisoning
in bittorrent,” in ICCSN, 2010.
[47] K. El Defrawy, M. Gjoka, and A. Markopoulou, “Bottorrent:
Misusing bittorrent to launch ddos attacks.” SRUTI, 2007.
[48] “Software Guard Extensions Programming Reference.” software.
intel.com/sites/default/ﬁles/329298-001.pdf, 2013.
[49] B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio:
Nearly practical veriﬁable computation,” in IEEE S&P, 2013.
[50] E. Shi, T.-H. Chan, E. Stefanov, and M. Li, “Oblivious RAM with
O(log3(N)) Worst-Case Cost,” in ASIACRYPT, 2011.
[51] E. Stefanov, M. van Dijk, E. Shi, C. Fletcher, L. Ren, X. Yu, and
S. Devadas, “Path ORAM: an extremely simple oblivious RAM
protocol,” in CCS, 2013.
[52] L. Ren, C. Fletcher, A. Kwon, E. Stefanov, E. Shi, M. van Dijk,
and S. Devadas, “Constants Count: Practical Improvements to
Oblivious RAM ,” in USENIX Security, 2014.
[53] S. Devadas, M. van Dijk, C. Fletcher, L. Ren, E. Shi, and
D. Wichs, “Onion ORAM: A Constant Bandwidth Blowup Obliv-
ious RAM,” IACR, 2015.
[55] D. Dachman-Soled, C. Liu, C. Papamanthou, E. Shi, and
U. Vishkin, “Oblivious network RAM and leveraging parallelism
to achieve obliviousness,” in ASIACRYPT, 2015.
[56] E. Boyle, K. Chung, and R. Pass, “Oblivious parallel RAM and
applications,” in TCC, 2016.
[57] D. S. Roche, A. J. Aviv, and S. G. Choi, “A practical oblivi-
ous map data structure with secure deletion and history indepen-
dence,” IACR, 2015.
[58] B. Chor, O. Goldreich, E. Kushilevitz, and M. Sudan, “Private
information retrieval,” in FOCS, 1995.
[59] D. Boneh, K. Lewi, H. W. Montgomery, and A. Raghunathan,
“Key homomorphic prfs and their applications,” in CRYPTO,
2013.
[60] M. Naor and O. Reingold, “Number-theoretic constructions of
efﬁcient pseudo-random functions,” in FOCS, 1997.
[61] “Cloc,” http://cloc.sourceforge.net/.
[62] “Python cryptography toolkit,” https://pypi.python.org/pypi/
pycrypto.
[63] “Python ecc,” https://github.com/johndoe31415/joeecc.
[64] “Deterlab,” https://www.isi.deterlab.net/index.php3.
[65] A. R. Bharambe, C. Herley, and V. N. Padmanabhan, “Analyz-
ing and improving bittorrent performance,” Microsoft Research,
2005.
[66] G. Danezis, “Statistical disclosure attacks,” in Security and Pri-
vacy in the Age of Uncertainty, 2003.
[67] G. Danezis, C. Diaz, and C. Troncoso, “Two-sided statistical dis-
closure attack,” in PETS, 2007.
[68] G. Danezis and A. Serjantov, “Statistical disclosure or intersec-
tion attacks on anonymity systems,” in IH, 2005.
[69] N. Mathewson and R. Dingledine, “Practical trafﬁc analysis: Ex-
tending and resisting statistical disclosure,” in PETS, 2005.
[70] N. Mallesh and M. Wright, “The reverse statistical disclosure at-
tack,” in IH, 2010.
[71] C. Troncoso, B. Gierlichs, B. Preneel, and I. Verbauwhede, “Per-
fect matching disclosure attacks,” LNCS, 2008.
[72] G. Danezis and C. Troncoso, “Vida: How to use bayesian in-
ference to de-anonymize persistent communications,” in PETS,
2009.
[73] F. P´erez-Gonz´alez and C. Troncoso, “Understanding statistical
disclosure: A least squares approach,” in PETS, 2012.
[74] S. Chen, R. Wang, X. Wang, and K. Zhang, “Side-channel leaks
in web applications: A reality today, a challenge tomorrow,” in
IEEE S&P, 2010.
[75] S. Lu and R. Ostrovsky, “Distributed oblivious RAM for secure
two-party computation,” in TCC, 2013.
[76] E. Stefanov and E. Shi, “Oblivistore: High performance oblivious
distributed cloud data store,” in NDSS, 2013.
[77] ——, “Multi-cloud oblivious storage,” in CCS, 2013.
[78] B. Chen, H. Lin, and S. Tessaro, “Oblivious parallel RAM: im-
proved efﬁciency and generic constructions,” in TCC, 2016.
18
962  25th USENIX Security Symposium 
USENIX Association