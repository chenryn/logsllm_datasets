113 # Redis uses default hardened security confi
1l4#attack surface oninnocent users.Therefor
春风阁讲堂出品
30
---
## Page 31
3.2.6.配置文件参考
bind 0.0.0.0
#主机IP
protected-mode no
#保护模式设成no
port 6379
#Redis 端口
pidfile "/home/xiangsl/redis/run/redis_6379.pid"
#进程文件
logfile "/home/xiangsl/redis/log/redis_6379.1og"
#日志文件
daemonize yes
#守护模式
save 3600 1
#rdb配置
save 300 100
save 60 10000
dbfilename "dump_6379.rdb"
#rdb文件
appendonly no
#aof配置
joe6le9 set a test
OK
127. 0. 0. 1:6379> get a
"test"
127. 0. 0. 1:6379>
[xiangsl@crml67redis]$./bin/redis-cli -h 127.0.0.1-p 6379
127.0.0.1:6379>setatest
OK
127.0.0.1:6379>get a
"test"
127.0.0.1:6379>
春风阁讲堂出品
---
## Page 34
3.3.Redis生产建议
3.3.1.生产级安装参考
[xiangsl@crm167
~]$pwd
/home/xiangsl
[xiangsl@crml67~]$ tree redis
redis
bin
redis-benchmark
redis-check-aof
->
redis-server
redis-check-rdb
->
redis-server
redis-cli
redis-sentinel
redis-server
redis-server
conf
redis_6379.conf
data
dump_6379.rdb
log
redis_6379.log
run
redis_6379.pid
tls
directories,10 files
[xiangsl@crm167~]$
春风阁讲堂出品
34
---
## Page 35
3.3.2.环境变量配置
配置PATH环境变量
PATH=/home/xiangsl/redis/bin:SPATH
Getthealiases
andfunctions
if[-f~/.bashrc];then
~/.bashrc
fi
#User specificenvironment andstartup programs
PATH=$PATH:$HOME/.local/bin:$HOME/bin
PATH=/home/xiangsL/redis/bin:SPATH
export PATH
春风阁讲堂出品
---
## Page 36
3.3.3.启动脚本书写
书写文件start_6379.sh
#!/bin/sh
cd °dirname $0
pmd,=qed1
portstr":6379"
 d), xe,do a dnsod deds daa- sd pi
if [ -n "Spid" ]; then
echo “redis Spid is already running”
exit
fi
${rpath/bin/redis-server $S {rpath)/conf/redis_6379.conf
sleep 3
if [ -n "Spid" ]; then
echo "start redis Spid successful"
else
echo “redis not running”
fi
春风阁讲堂出品
---
## Page 37
3.3.4.停止脚本书写
书写文件 stop_6379.sh
#!/bin/sh
cd °dirname $0*
pmd,=qed1
portstr=":6379"
pid=ps -ef|grep Srpath|grep -v 'grep′awk ′{print $2}
if [ -n "Spid" ]; then
echo "kill redis Spid"
kill Spid
else
echo“redis not running”
fi
春风阁讲堂出品
---
## Page 38
3.4.安装单机多实例
3.4.1.复制配置文件
cp redis_6379. conf redis_6380. conf
3.4.2.修改配置文件
两种方式：
1.进入viredis_6380.conf命令模式
执行：%s/6379/6380/g将6379进行批量替换为6380
2.或者直接用命令sed-i’s/6379/6380/g'redis_6380.conf进行替换处理
3.4.3.安装确认检查
操作同单机模式
春风阁讲堂出品
---
## Page 39
3.4.4.生产级安装参考
[xiangsl@crml67redis]$ tree/home/xiangsl/redis
/home/xiangsl/redis
bin
redis-benchmark
redis-check-aof
-> redis-server
redis-check-rdb
->redis-server
redis-cli
redis-sentinel
->redis-server
redis-server
conf
redis_6379.conf
redis_6380.conf
data
dump_6379.rdb
dump_6380.rdb
log
redis_6379.log
redis_6380.log
un.
redis_6379.pid
redis_6380.pid
5 directories,14 files
[xiangsl@crml67redis]$
春风阁讲堂出品
39
---
## Page 40
3.5.本次环境准备
序号
端口号
说明
1
6378
6379
主从环境，Sentinel环境搭建（1主1从）
3
6380
4
6381
5
6382
6
6383
RedisCluster集群环境(3主3从）
7
6384
8
6385
9
6386
10
6387
11
6388
扩缩容、故障测试用
12
6389
13
6390
春风阁讲堂出品
---
## Page 41
4.Redis中数据类型
4.1.Redis数据类型讲解
数据类型
类型名称
特征说明
场景使用
String是redis 最基本的类型，一个 key 对应一个value
String
字符串
String是二进制安全的，redis的 String可以包含任何数据。如jpg图片或者序列化对象
非常多，万物皆可String
String类型是Redis最基本的数据类型，String类型的值最大能存储512MB
Hash
哈希
Redis Hash 是一个键值（key=>value)对集合。
存储带有属性的对象
Redis Hash 特别适合用于存储对象
列表
Redis列表是简单的字符串列表，按照插入顺序排序
1、最新消息排行等功能
List
我们可以添加一个元素到列表的头部（左边）或者尾部（右边）
2、消息队列
Redis 的 Set是 string 类型的无序集合
1、共同好友
Set
集合
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是0（1）
2、分布式统计&计数
为集合提供了求交集、并集、差集等操作
1、排行榜
sored Set
有序集合
Redis 的 Set 是 string 类型的有序集合
2、带权重的消息
基数
1.登陆用户总
HyperLogLogs
用来做基数统计的，即计算在一批数据中，不重复元素有多少个
2.
销售产品数
Bitmaps
位图
Bitmap即位图数据结构，都是操作二进制位来进行记录
1、存储状态（只有0、1)
地理
1、两地之间的距离
Geospatial
RedisGE0主要用于存储地理位置信息，并对存储的信息进行操作
2、方圆几里的人
春风阁讲堂出品
41
---
## Page 42
4.2.Redis内部结构类型
4.2.1.RedisObject对象
Redis内部所有存储的数据都使用redisObject来封装。
struct redisObject 
unsigned type:4;//对象类型如 zset/set/hash等等
unsigned encoding:4;//对象编码如ziplist/intset/skiplist 等等
unsigned Iru:24;//对象的“热度”
int refcount;/引用计数
void*ptr;//数据指针
春风阁讲堂出品
---
## Page 43
4.2.2.SDS对象结构
Redis的字符串叫着SDS，也就是SimpleDynamicString。它的结构是一个带长度信息的字节数组
struct SDS{
Tcapacity;/数组容量
Tlen;//数组长度
byteflags://特殊标识位，不理睬它
byte[]content;//数组内容
春风阁讲堂出品
---
## Page 44
4.2.3.embstr编码方式
embstr编码方式，当String类型（非int）长度小于或等于44时，默认采用embstr编码方式，如下图所示字符串的SDS对象就紧挨着ptr指针存放
RedisObject对象
(void*)ptr指针
SDS对象紧挨着ptr
SDS对象
春风阁讲堂出品
---
## Page 45
4.2.4.raw编码方式
当String类型长度大于44时，会使用raw编码方式，如下图所示SDS与redisObject内存不连续
RedisObject对象
(void*)ptr指针
SDS与ptr不连续
SDS对象
春风阁讲堂出品
---
## Page 46
4.2.5.压缩列表ziplist
Redis为了节约内存的使用，当元素个数与元素大小比较小时，对于hash、zset、list，会使用ziplist编码方式节约内存。ziplist通过将每个值紧
挨着存储同时避免使用redisObject与SDS，节约大量内存空间
struct ziplist{
int32zlbytes;/整个压缩列表占用字节数
int32zltailoffset;/最后一个元素距离压缩列表起始位置的偏移量，用于快速定位到最后一个节点
int16zllength;/元素个数
Tentries;//元素内容列表，挨个挨个紧凑存储
int8zlend;/标志压缩列表的结束，值恒为0xFF
总长度zbytes字节数
zpbytes
zltail_offset
zllength
entry
entry
......
entry
zlend
尾部偏移
元素存储
注意，从Redis7开始，ziplist统一由listpack进行替换，listpack与ziplist极为类似，可以理解为ziplist的升级版
春风阁讲堂出品
6
---
## Page 47
4.2.6.跳跃列表skiplist
skiplist采用了多级索引，末端采用原始单链表进行存储
原始单链表
10
null
优化路径后的跃表
0
10
null
6
10