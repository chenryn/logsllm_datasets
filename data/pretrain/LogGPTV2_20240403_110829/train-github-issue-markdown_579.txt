When using `requests` version 2.13.0, I encountered an issue when attempting to pass a non-ASCII value as the `data` parameter in a `PUT` request. This problem might be related to the known issue [reported here](https://github.com/kennethreitz/requests/issues/2638).

### Problem Description
I am unable to send a Unicode string in the request body. Encoding the string with `.encode('utf-8')` works as a workaround for one example, but it fails in another.

### Example Code and Error

#### Example 1: Basic Authentication
```python
import requests
from requests.auth import HTTPBasicAuth

AUTH = HTTPBasicAuth("john", "password")
response = requests.put(
    'http://localhost:8084/',
    headers={'Content-type': 'text/plain; charset=utf-8'},
    data=u'\u24B6\u24B7\u24B8\u24B9',
    auth=AUTH
)
```

**Error:**
```plaintext
Traceback (most recent call last):
  File "", line 1, in 
  File "/usr/lib/python2.7/site-packages/requests/api.py", line 124, in put
    return request('put', url, data=data, **kwargs)
  ...
UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)
```

#### Example 2: AWS S3 Authentication
```python
from requests_aws4auth import AWS4Auth
import requests

AUTH = AWS4Auth('john', 'password', 'eu-west-1', 's3')
response = requests.put(
    'http://localhost:8084/',
    headers={'Content-type': 'text/plain'},
    data=u'\u24B6\u24B7\u24B8\u24B9',
    auth=AUTH
)
```

**Debugging Output:**
```plaintext
!!!1 u'PUT / HTTP/1.1\r\nHost: localhost:8084\r\nConnection: keep-alive\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nUser-Agent: python-requests/2.13.0\r\ncontent-type: text/plain; charset=utf-8\r\nContent-Length: 12\r\nx-amz-date: 20170215T023125Z\r\nx-amz-content-sha256: 7ec37a06579472c0743b58bd45af589cca817f65bbd8c6e528bc5e3092166396\r\nAuthorization: AWS4-HMAC-SHA256 Credential=john/20170215/eu-west-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=e83f7e17d7c6e25a940965962df32e9c690681b158f6d9ad9f484bf9c09bb963\r\n\r\n'
!!!2 '\xe2\x92\xb6\xe2\x92\xb7\xe2\x92\xb8\xe2\x92\xb9'
!!!3 u'PUT / HTTP/1.1\r\nHost: localhost:8084\r\nConnection: keep-alive\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nUser-Agent: python-requests/2.13.0\r\ncontent-type: text/plain; charset=utf-8\r\nContent-Length: 12\r\nx-amz-date: 20170215T023125Z\r\nx-amz-content-sha256: 7ec37a06579472c0743b58bd45af589cca817f65bbd8c6e528bc5e3092166396\r\nAuthorization: AWS4-HMAC-SHA256 Credential=john/20170215/eu-west-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=e83f7e17d7c6e25a940965962df32e9c690681b158f6d9ad9f484bf9c09bb963\r\n\r\n\u24b6\u24b7\u24b8\u24b9'
```

**Error:**
```plaintext
Traceback (most recent call last):
  File "", line 1, in 
  File "/usr/lib/python2.7/site-packages/requests/api.py", line 124, in put
    return request('put', url, data=data, **kwargs)
  ...
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 0: ordinal not in range(128)
```

### Solution
To resolve this issue, you should encode the Unicode string to UTF-8 before passing it to the `data` parameter. Here is the corrected code:

#### Corrected Example 1: Basic Authentication
```python
import requests
from requests.auth import HTTPBasicAuth

AUTH = HTTPBasicAuth("john", "password")
response = requests.put(
    'http://localhost:8084/',
    headers={'Content-type': 'text/plain; charset=utf-8'},
    data=u'\u24B6\u24B7\u24B8\u24B9'.encode('utf-8'),
    auth=AUTH
)
```

#### Corrected Example 2: AWS S3 Authentication
```python
from requests_aws4auth import AWS4Auth
import requests

AUTH = AWS4Auth('john', 'password', 'eu-west-1', 's3')
response = requests.put(
    'http://localhost:8084/',
    headers={'Content-type': 'text/plain'},
    data=u'\u24B6\u24B7\u24B8\u24B9'.encode('utf-8'),
    auth=AUTH
)
```

By encoding the Unicode string to UTF-8, you ensure that the `data` parameter contains a byte string, which is compatible with the `requests` library.