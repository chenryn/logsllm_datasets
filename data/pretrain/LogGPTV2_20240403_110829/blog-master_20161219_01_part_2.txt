        for (;;)  
        {  
                if (XLogBackgroundFlush())  
```
src/backend/access/transam/xlog.c  
```
bool  
XLogBackgroundFlush(void)  
{  
/*   
we only flush WAL every wal_writer_delay ms,   
or if there's more than wal_writer_flush_after unflushed blocks.  
*/  
#ifdef WAL_DEBUG  
        if (XLOG_DEBUG)  
                elog(LOG, "xlog bg flush request write %X/%X; flush: %X/%X, current is write %X/%X; flush %X/%X",  
                         (uint32) (WriteRqst.Write >> 32), (uint32) WriteRqst.Write,  
                         (uint32) (WriteRqst.Flush >> 32), (uint32) WriteRqst.Flush,  
                         (uint32) (LogwrtResult.Write >> 32), (uint32) LogwrtResult.Write,  
                   (uint32) (LogwrtResult.Flush >> 32), (uint32) LogwrtResult.Flush);  
#endif  
        START_CRIT_SECTION();  
        /* now wait for any in-progress insertions to finish and get write lock */  
        WaitXLogInsertionsToFinish(WriteRqst.Write);  
        LWLockAcquire(WALWriteLock, LW_EXCLUSIVE);  
        LogwrtResult = XLogCtl->LogwrtResult;  
        if (WriteRqst.Write > LogwrtResult.Write ||  
                WriteRqst.Flush > LogwrtResult.Flush)  
        {  
                XLogWrite(WriteRqst, flexible);  
        }  
        LWLockRelease(WALWriteLock);  
        END_CRIT_SECTION();  
```
src/backend/access/transam/xact.c  
```
static TransactionId  
RecordTransactionCommit(void)  
{  
...  
        if ((wrote_xlog && markXidCommitted &&  
                 synchronous_commit > SYNCHRONOUS_COMMIT_OFF) ||  
                forceSyncCommit || nrels > 0)  
        {  
                XLogFlush(XactLastRecEnd);  
                /*  
                 * Now we may update the CLOG, if we wrote a COMMIT record above  
                 */  
                if (markXidCommitted)  
                        TransactionIdCommitTree(xid, nchildren, children);  
        }  
...  
```
### PostgreSQL支持的WAL 块大小  
源码configure，编译时指定，大小为1KiB到64KiB    
```  
case ${wal_blocksize} in  
  1) XLOG_BLCKSZ=1024;;  
  2) XLOG_BLCKSZ=2048;;  
  4) XLOG_BLCKSZ=4096;;  
  8) XLOG_BLCKSZ=8192;;  
 16) XLOG_BLCKSZ=16384;;  
 32) XLOG_BLCKSZ=32768;;  
 64) XLOG_BLCKSZ=65536;;  
  *) as_fn_error $? "Invalid WAL block size. Allowed values are 1,2,4,8,16,32,64." "$LINENO" 5  
esac  
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: ${wal_blocksize}kB" >&5  
$as_echo "${wal_blocksize}kB" >&6; }  
```  
对于SSD来说，建议将wal block size设置为4KiB  
## 参考  
[《PostgreSQL 源码性能诊断(perf profiling)指南》](../201611/20161129_01.md)  
[《Linux 性能诊断 perf使用指南》](../201611/20161127_01.md)  
[《PostgreSQL 可靠性分析 - 关于redo block原子写》](../201610/20161011_01.md)  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")