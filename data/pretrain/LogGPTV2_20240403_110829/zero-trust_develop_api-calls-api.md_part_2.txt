In the animation below, the Original API needs to go back to Microsoft Entra ID. It needs an access token to call the Downstream API on behalf of the user.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-05-to-06-inline.gif" alt-text="Animated diagram shows Client App giving access token to Original API that needs validation from Microsoft Entra ID to call Downstream API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-05-to-06-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: The Original API can't use the token to call the Downstream API. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right. Second diagram title: Original API goes back to Microsoft Entra ID. Second diagram subtitle: Needs an access token to call the Downstream API on behalf of the user. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. Above the Original API shapes, an arrow connects them to the Microsoft Entra cloud shape. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right.
:::image-end:::
The next animation shows the Original API providing the token that the Original API received from the Client App and the Original API's client credentials.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-06-to-07-inline.gif" alt-text="Animated diagram shows Client App giving access token to Original API that receives validation from Microsoft Entra ID to call Downstream API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-06-to-07-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: Original API goes back to Microsoft Entra ID. First diagram subtitle: Needs an access token to call the Downstream API on behalf of the user. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. Above the Original API shapes, an arrow connects them to the Microsoft Entra cloud shape. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right. Second diagram title: Original API goes back to Microsoft Entra ID. Second diagram subtitle: Provides the token from the Client App and the credentials for the Original API. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the Original API shapes, an arrow connects them to the Microsoft Entra cloud shape. To the left of that arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. Below the access token is a key shape. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right.
:::image-end:::
Microsoft Entra ID will check for things like consent or conditional access enforcement. You may have to go back to your calling client and provide a reason for not being able to get the token. You would typically use a [claims challenge](/azure/active-directory/develop/claims-challenge) process to go back to the calling application with information regarding consent not being received (such as being related to conditional access policies).
## Microsoft Entra ID performs checks
In the following animation, Microsoft Entra ID performs its checks. If everything is okay, Microsoft Entra ID will issue an access token to the Original API to call the Downstream API on behalf of the user.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-07-to-08-inline.gif" alt-text="Animated diagram shows Original API giving access token to Downstream API after validating with Microsoft Entra ID." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-07-to-08-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: Original API goes back to Microsoft Entra ID. First diagram subtitle: Provides the token from the Client App and the credentials for the Original API. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the Original API shapes, an arrow connects them to the Microsoft Entra cloud shape. To the left of that arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. Below the access token is a key shape. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right. Second diagram title: Microsoft Entra ID checks conditional access, consent, etc. Second diagram subtitle: The Original API receives its own access token to call the Downstream API on behalf of the user who signed into the Client App. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the Original API shapes, an arrow connects them to the Microsoft Entra cloud shape. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right. Above that arrow, to the right of the Original API shapes, is a hexagon shape labeled 'A' that represents an access token.
:::image-end:::
## Original API has user context with On-Behalf-Of flow
The animation below illustrates the [On-Behalf-Of flow](/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow) (OBO) process that allows an API to continue to have the user context as it calls Downstream API.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-09-to-10-inline.gif" alt-text="Animated diagram shows Original API giving access token to Downstream API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-09-to-10-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: On-Behalf-Of flow process allows the Original API to continue to have user context as it calls the Downstream API. First diagram components: On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right. Above that arrow, to the right of the Original API shapes, is a hexagon shape labeled 'A' that represents an access token. Second diagram title: On-Behalf-Of flow process allows the Original API to continue to have user context as it calls the Downstream API. Second diagram components: On the lower left, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right. Above that arrow, to the right of the Original API shapes, is a hexagon shape labeled 'A' that represents an access token.
:::image-end:::
## Original API calls Downstream API
In the next animation, we call the Downstream API. The token that the Downstream API receives will have the proper audience (aud) claim that indicates the Downstream API.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-10-to-11-inline.gif" alt-text="Animated diagram shows Downstream API validating access token from Original API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-10-to-11-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: On-Behalf-Of flow process allows the Original API to continue to have user context as it calls the Downstream API. First diagram components: On the lower left, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right. Above that arrow, to the right of the Original API shapes, is a hexagon shape labeled 'A' that represents an access token. Second diagram title: The Downstream API is called. Second diagram subtitle: The token that the Downstream API receives has proper claims to identify the user of the Client App. Second diagram components: On the lower left, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right. Above that arrow, to the left of the Authorization Required shape, is a hexagon shape labeled 'A' that represents an access token.
:::image-end:::
The token will include the scopes for granted consent and the original app user identity. The Downstream API can properly implement effective permissions to ensure that the identified user has permission to accomplish the requested task. You'll want to use the on behalf of flow to acquire tokens for an API to call another API to make sure that user context passes to all Downstream APIs.
## Best option: Original API performs On-Behalf-Of flow
This last animation shows that the best option is for the Original API to perform On-Behalf-Of flow (OBO). If the Downstream API receives the correct token, it will be able to correctly respond.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-11-to-12-inline.gif" alt-text="Animated diagram shows Downstream API receiving access token from Original API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-11-to-12-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: The Downstream API is called. First diagram subtitle: The token that the Downstream API receives has proper claims to identify the user of the Client App. First diagram components: On the lower left, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right. Above that arrow, to the left of the Authorization Required shape, is a hexagon shape labeled 'A' that represents an access token. Second diagram title: The best option is for the Original API to perform "on behalf of flow." If the Downstream API receives the correct token, it will be able to correctly respond. Second diagram components: On the lower left, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. An arrow connects the shapes on the left to the shapes on the right. Above that arrow, to the left of the Downstream API shapes, is a hexagon shape labeled 'A' that represents an access token.
:::image-end:::
When an API is acting on behalf of a user and needs to call another API, the API must use OBO to acquire a delegated permission access token to call the Downstream API on behalf of the user. APIs should never use application permissions to call Downstream APIs when the API is acting on behalf of a user.
## Next steps
- [Microsoft identity platform authentication flows & app scenarios](/azure/active-directory/develop/authentication-flows-app-scenarios) describes authentication flows and the application scenarios in which they\'re used.
- [API Protection](protect-api.md) describes best practices for protecting your API through registration, defining permissions and consent, and enforcing access to achieve your Zero Trust goals.
- [Example of API protected by Microsoft identity consent framework](protected-api-example.md) helps you to design least privilege application permissions strategies for the best user experience.
- [Customizing tokens](zero-trust-token-customization.md) describes the information that you can receive in Microsoft Entra tokens and how to customize tokens to improve flexibility and control while increasing application zero trust security with least privilege.
- The [Secure custom APIs with Microsoft Identity](/training/modules/identity-secure-custom-api/) Learn module explains how to secure a web API with Microsoft identity and how to call it from another application.
- [Security best practices for application properties](/azure/active-directory/develop/security-best-practices-for-app-registration) describes redirect URI, access tokens (used for implicit flows), certificates and secrets, application ID URI, and application ownership.
- [Microsoft identity platform authentication libraries](/azure/active-directory/develop/reference-v2-libraries) describes Microsoft Authentication Library support for various application types.