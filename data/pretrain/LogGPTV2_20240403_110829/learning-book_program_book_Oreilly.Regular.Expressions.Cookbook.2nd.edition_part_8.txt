following Perl statement reads a single line from the terminal (standard input):
$1ine = <>;
Perl leaves the newline on the content of the variable $line. Therefore, an expression
such as (end*of*input.\z) will not match the variable. But  and
xend*of=1nput.$) will both match, because they ignore the trailing newline.
42 |  Chapter 2: Basic Regular Expresion Skills
---
## Page 59
To make processing easier, Perl programmers often strip newlines with
chomp $line;
After that operation is performed, all three anchors will match. (Technically, chomp
strips a string of the current record separator.)
Unless you're using JavaScript, we recommend that you always use . The meaning of \Z) never changes, avoiding any confusion or mistakes in setting
regex options.
Start of aline
By default, ^) matches only at the start of the subject text, just like \A., Only in Ruby
does ^> always match at the start of a line. All the other flavors require you to turn on
the option to make the caret and dollar sign match at line breaks. This option is typically
referred to as *multiline” mode.
Do not confuse this mode with *single line” mode, which would be better known as
“dot matches line breaks” mode. *Multiline” mode affects only the caret and dollar
sod kpoaad st a 'suedxa t7 adoa se op aq aquo siae apo ou aaus, u8is
sible to turm on both *single line" and *multiline” mode at the same time. By default,
both options are off.
With the correct option set, ^ wil match at the start of each line in the subject text.
Strictly speaking, it matches before the very first character in the file, as it always does
and also after each line break character in the subject text. The caret in \n^ is redun-
dant because (^) always matches after  always matches
before  or 
to prepend or append something to the whole subject. Replace (^> or $), in *^ and $
match a line breaks* mode, to prepend or append something in each line in the subject
text.
Combine two anchors to test for blank lines or missing input. \A\Z matches the empty
string, as well as the string that consists of a single newline.  exclusively
for lines is a good one. Unless you're using JavaScript, we recommend that you copy
this choice in your own regular expressions.
Jan Goyvaerts followed the same idea in his designs of EditPad Pro and PowerGREP
You won’t find a checkbox labeled *^ and $ match at line breaks," even though there
is one labeled “dot matches line breaks.* Unless you prefix your regular expression
with  to anchor your regex to the beginning or
end of your file.
See Also
Recipe 3.4 explains how to set options such as "^ and $ match at line breaks” in your
source code.
44 | Chapter 2: Basic Regular Expresion Skills
---
## Page 61
Recipe 3.21 shows how to use procedural code to really make a regex process some
text line by line.
2.6MatchWholeWords
Problem
Create a regex that matches cat in My cat is broun, but not in category or bobcat.
subject strings.
Create another regex that matches cat in staccato, but not in any of the three previous
Solution
Word boundaries
q′↓e3q\
Regex options: None
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Nonboundaries
\Bcat\B
Regex options: None
Regexflavers: NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Discussion
Word boundaries
The regular expression token  is called a word bouondary. It matches at the start or
the end of a word. By itself it results in a zero-length match. . The first  to occur at the very start of the string, or after a nonword character. The second
b) requires the  is unaffected by *multiline′
mode or  can match. The b in \bx and  \b> could match
only at the start of a word. The b) in  and \b!> could match only at the end of a
word. (x\bx) and ! \b!) can never match anywhere.
If you really want to match only the position before a word or only after a word, you
can do so with lookahead and lookbehind. Recipe 2.16 explains lookahead and look-
behind. This method does not work with JavaScript and Ruby 1.8 because these flavors
do not support lookbehind. The regex (? to check
for the absence of a word character. (? does not match.  matches cat in staccato, but not in My cat is brown, category, or bobcat.
46 |Chapter2: Basic RegularExpresinSkills
---
## Page 63
To do the opposite of a “whole words onlya search (i.e., excluding My cat is broun
and including staccato, category, and bobcat), you need to use alternation to combine
\Bcat) and  into .  matches cat in staccato and bobcat.
.  always matches between
rwo characters where both are matched by ,
Java behaves inconsistently.  g o1 + eae[ u 1duos Aue guroddns *eae
or underscore that does not occur as part of a word in any language. bxouxab always
correctly matches the Russian word for cat in Java, because b> supports Unicode. But
w+) will not match any Russian word in Java 4 to 6, because \P{M}\p{M}*)
Regexoptions: None
Regexflavers: .NET, Java, Ruby 1.9
(?:\P{M}\p{M}*)
Regexflavors: XRegExp
Regex options: None
NET, Java, XRegExp, and Ruby 1.9 do not have a token for matching graphemes. But
they do support Unicode categories, which we can use to emulate matching graphemes.
JavaScript (without XRegExp) and Python do not support Unicode properties. Ruby
1.8 does not support Unicode regular expressions.
Discussion
Unicode code point
A code point is one entry in the Unicode character database. A code point is not the
seadde  aee, 0a8 nouueu quo upuadapare se ues
as a character on screen is called a grapheme in Unicode.
The Unicode code point U+2122 represents the *trademark sign* character, You can
match this with , <\u{2122}), or <\x{2122}, depending on the regex flavor
you're working with.
The <u) syntax requires exactly four hexadecimal digits. This means you can only use
it for Unicode code points U+0000 through U+FFFF.
\uf --# and ^<x ]) allow berween one and six hexadecimal digits berween the braces,
supporting all code points U+000000 through U+10FFFF. You can match U+00E0