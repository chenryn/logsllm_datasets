很简单。我没有与会话绑定。我只是有到期时间。
所以我可以设置为有一个很长很充实的人生，远远
超出一些喜欢点击的Web游客的想象，要知道，他
们可能会随意打开和关闭浏览器，并认为这样很有
意思。
哇鸣，经历永恒是一种什么感觉！我真希望一些
粗心的脚本编写人员关闭会话时能偶尔忘记将我撤
销不过浏览器关闭时还是会把我删除的。
问题在于，这些脚本编写人员通常会把我的到期日
期设置得太短，以至于我并不真正体验本应有的长
寿。我的意思是，我……...
喂？你还在吗？噢，到期也太匆忙了。
你现在的位置
401
---
## Page 438
测试支持会话的mismatch
运行测试
修改Mismatch，使用会话而不是cookie。
修改Mismatch脚本，使用会话而不是cookie来支持登录的持久性（或者从HeadFirstLabs
网站（www.headfirstlabs.com/books/hfphp）下载脚本）。为支持会话而需要
的修改包括修改index.php、login.php、logout.php、editprofile.php和
viewprofile.php脚本，主要是需要用一个session_start（）函数调用开始会话，并把
$_COOKIE超级全局变量引I用改为使用S_SESSION。
将脚本上传到你的Web服务器，然后在一个Web浏览器中打开Mismatch主页（index.php）。
尝试登录和注销，确保一切都像从前一样正常。除非你之前禁用了cookie，否则不会注意到任
何差别，这一点很棒！
Mismatch - Where opposites attract!
太好了。即使没有
启用cookie也能够暨
000
录，真不错。
Mismatch -Log In
归功于金话，禁用了cookie
的用户也可以登录并访问算
个人情况阅表。
0
Mism
atch-EditProfile
Ciyi
PDG
402
---
## Page 439
构建个性化Web应用
如果服务器上php.ini中的PHP设置配置不当，没有cookie的情况
下会话有可能无法正常工作。
Watchit!
禁用cookie的情况下要让会话正常工作，还需要利用另外一个机
制在不同页面之间传递会话ID。这个机制需要将会话ID追加到每个页面的URL
后面，如果服务器上php.ini文件中的session.use_trans_id被设置为
1（true），这就会自动发生。如果你无法修改Web服务器上的这个文件，禁用
cookie时就必须利用类似下面的代码手动地向会话页面的URL追加会话ID：
">view your profile
S加超级全晶查量色含了金活D
它通过URL传递，使ViewProfile页
面能够知道舍话。
PDG
你现在的位置
403
---
## Page 440
为什么自动注销？
用户感觉不受欢迎
尽管相对于cookie来说这是一个不错的小改进，但这个支持会话的新
KEEP
Mismatch应用并不完美。很多用户报告称尽管他们从未点击“Log
Out”链接却被注销了。应用不再给人一种个性化的感觉这可是
个严重的问题。
OUT
嘿，上次检查时我们已经登录，可
是突然之问我们都被注锁了！到底怎
么回事？
总信用户绝对
不是好事。
这可不是我们希
望Mismatch发送
给用户的消息。
Mismatch - Where opposites attract!
Log
尽管这些注册用户并来
注销，但从向他们显示
的主页来看，好像他们
只是游客。
用户从未点击“LogOt”
链接却从Mismatch注销。
404
第7章
---
## Page 441
构建个性化Web应用
BRAIN
LPOWER
你认为是什么原因导致用户自动从Mismatch
注销？是不是他们无意中做了什么？
PDG
你现在的位置
405
---
## Page 442
cookie和会话的生命期
会话寿命很短······
不论使用金活还是cookie，实现
Mismatch中的自动注销问题与会话有限的生命期有关。如果还记得，
持久性都要以警录作为开始。
会话只能在当前浏览器实例期间保持，也就是说，用户关闭浏览器应
用时就会将所有会话变量删除。换句话说，关闭浏览器会导致用户注
销而不论他们是否愿意。这不仅很不方便，而且有点让人困惑，因为
我们已经提供了一个注销特性。用户认为除非他们点击注销链接，否
则不应注销。
用会话管录会创建两个
®
金活变量。
user_id =
usernam
sidneyk
一旦销设了会话变量，
用户就被注销….而
不论他们是否愿象！
金活变量用于记住
用户的身份。
浏览器关闭时会活变
量随金话一同被销毁。
用户关闭了浏览器，但
是可能没有意识到已经
将自己注销。
用户关闭浏览器结
尽管可以在使用完会话时将它撤销，但是不能把它的寿命延长到超
出一个浏览器实例。所以与cookie相比，会话更应算是一个短期存储
束一个会话时会销
方案，因为cookie有一个到期日期，可以设置为将来的几小时、几天、
毁会话变量。
几个月甚至几年。这是不是说会话要比cookie差呢？不，完全不是。
不过这确实说明，如果想要跨浏览器实例记住某些信息，会话确实存
在问题如登录数据！
406
第7章
---
## Page 443
构建个性化Web应用
"....而cookie可以永存！
也许不是永远，不过足
以超超金活。
不同于会话变量，cookie的生命期并不与浏览器实例绑定，所以
cookie可以永存，至少在它的到期日期到来之前。问题在于，用户能
够利用一个简单的浏览器设置撤销存储在其机器上的所有cookie，所
以不要对cookie的永久性太痴迷，它们最终也只是用来存储临时数据。
time() + 2 hours
user_id =1
username
= sidneyk
time() + 2 hours
类似于金话，创建
cookie来完成登录。
cookie的寿命由其到期日
期/时间来确定。
只在到期时才搬
cookie.
cookie在到期时才撤
销，远使得与会话变
量相比它们有更长的
寿命。
PDG
你现在的位置
407
---
## Page 444
交替使用cookie和会话
那么可不可以同时使用会话和cookle，
让cookie帮助围户保持更长时间的登录？
这对于启用了cookle的用户是可行的。
只要不是在处理高度机密的数据，这是可以的。
在确实需要高度安全的情况下.cookie安全性较弱
这一限制会要求使用金活。
对，完全可以充分利用会话和cookie的优势让Mismatch
登录更为灵活。
事实上，这样做会相当方便。会话更适合短期持久性，因
为它们得到更广泛的支持，而且不受浏览器的限制，而
cookie允许将登录数据记住更长时间。当然，并不是所有
人都能受益于这种利用cookie的改进，不过确实相当多的
人都认为这是有意义的。只要能让用户群体中很大一部分
用户的体验改善，而不影响其他用户，这就是成功。
PDG
408
第7章
---
## Page 445
构建个性化Web应用
会话+cookie=更优秀的登录持久性
为了实现最终的登录持久性，必须更有创造性，将本章学到的所有内容结合起来，
充分利用会话和cookie二者的优点。为此，可以重构Mismatch应用，同时提供短期
和长期的用户登录持久性。
用户警录时，金活变量和
cookie都得到设置来存储用
从这里开始！
户30和用户名。
1
time() + 30 days
user_id = 1
sidneyk
username = sidneyk
time() + 30 days
关闭浏览器会导政会活变
量被搬销，但cookie不含
删除。
下一次用户打开Mismatch时
使用cookie重新创建会活变
量.……太棒了！
用户关闭Web
浏览器，撒
销当前的会
话。
cookie的到朝日期设
置为最初登录的30
天后。
time () + 30 days
user_id = 1
usernane = sidneyk
time() + 30 days
存储在cookie中的登录数据
用于重置金活变量
并非永远保持用户警录，cookie
金在30天后撤销。
你现在的位置
409
---
## Page 446
关于cookie和会话的“没有傻问题
thereareno
DumbQuestions
原因吗？
是不同的，而且通常还必须街量会话和cookie的很多其他方面。例如，
存储在会话中的数据就比存储在cookie中的数据更为安全。所以即使
启用了cookie而且使用了一个cookie来跟踪会话ID，会话中存储的具体
数据也比直接存储在cookie中更加安全。原因在于，会话数据存储在
服务器上，所以未授权的用户很难访问这些数据。因此要处理必须保
证安全的数据，会话则比cookie更胜一筹。
大的数据，所以如果所需存储的数据不只是一些简单的文本串，则倾
向于使用会话，这也是选择会话的另一个原因。当然，MySQL数据库
对于存储大数据更为擅长，所以不要无节制地使用会话。
据库最适合存储永久性的数据。登录数据其实并不是永久性的。正因
如此才引入了cookic和会话，它们更适合存储需要记住一段时间然后
丢掉的数据。
PDC
410
第7章
---
## Page 447
构建个性化Web应用
Mismatch应用已经得到重新设计，同时使用会话和cookie
来实现最终的用户登录持久性。问题在于，这里缺少一些
$_COOKIE
COOKIE
代码。请使用会话和cookie磁贴填入所缺少的代码。
$_COOK1
$_COOKIE
if (mysqli_num_rows ($data) == 1) {
  sr       ts os  s   
// and redirect to the home page
$row = mysqli_fetch_array($data) ;
['user_id']=$row['user_id'];
f[,aweuxasn,]xoxs = [, aweuxasn,]
setcookie('user_id',$row[*user_id'], time () +(60 *60 *24 *30));
// expires in 30 days
setcookie(*username′, $row[*username′], time() +(60*60 *24 *30));//expires in 30 days
header('Location:'. $home_url) ;
411
---
## Page 448
php磁贴答案
PHP磁贴
Mismatch应用已经得到重新设计，同时使用会话和cookie来实现最
答案
终的用户登录持久性。问题在于，这里缺少一些代码。请使用会话
和cookie磁贴填入所缺少的代码。
if (mysqli_num_rows ($data) == 1) {
// The log-in is OK so set the user ID and username session vars (and cookies) ,
// and redirect to the home page
$row = mysqli_fetch_array (Sdata) ;
除了会话变量还设置
$_SESSION
[,p xasn,]moxs =[,pT Iasn,]
了新的cookie。
$_SESSION
['username′]= $row['username′];
setcookie(*user_id',$row['user_id'], time() +(60*60 *24 *30));
setcookie(*username′, $row[*username*], time() +(60*60*24 *30));// expires in 30 days
// expires in 30 days
$home_url ='http://'. $_SERVER['HTTP_HOST'].dirname (S_SERVER['PHP_SELF']).'/index.php′;
header ('Location: ', $home_ur1);
<?php
// If the user is logged in, delete the session vars to log them out
session_start () ;
login.php
if (isset (
$_SESSION
'user_id'])){
// Delete the session vars by clearing the $_SESSION array
$_SESSION
array();
// Delete the session cookie by setting its expiration to an hour ago (3600)
if (isset(
$_COOKIE
[session_name ()]))(
setcookie(session_name (),*, time()-3600);
注销时现在需要同时删
除全话cookie和新的警录
logout.php
// Destroy the session
session_destroy();
cookie.
// Delete the user ID and username cookies by settingJtheir expirations to an hour ago (3600)
setcookie('user_id'，,time()-3600）;
setcookie('username′,'',time()-3600);
<?php
session_start();
如累用户没有通过金话
来餐录，金看是否设置了
// If the session vars aren't set, try to set them with a cookie
cookie,
if (!isset(
$ SESSION
['user_id'])){
if (isset(
SCOOKIE
['user_id']) &6 isset(
$ COOKIE
['username'])）(
'user
S SESSION
$_COOKIE
'username