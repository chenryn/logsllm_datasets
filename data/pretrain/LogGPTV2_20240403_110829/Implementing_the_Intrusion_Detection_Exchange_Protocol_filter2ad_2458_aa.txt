# Implementing the Intrusion Detection Exchange Protocol

## Authors
- Tim Buchheim, Harvey Mudd College
- Michael Erlinger, Harvey Mudd College
- Benjamin S. Feinstein, Guardent, Inc.
- Gregory A. Matthews, CSC/NASA Ames (formerly at Harvey Mudd College)
- Roy Pollock, Harvey Mudd College
- Joseph Betser, The Aerospace Corporation
- Andy Walther, supported by the Aerospace Institute, The Aerospace IRAD Corporate Research Initiative, and UC Davis Subcontract K971414-01 to US Air Force DARPA Cyber Panel GlobalGuard contract F30602-98-I-0201

## Abstract
This paper outlines the goals of the IETFâ€™s Intrusion Detection Working Group (IDWG) and the requirements for a transport protocol to facilitate communication among intrusion detection systems. We describe the design and implementation of IAP, the first attempt at such a protocol, and discuss its limitations. We then introduce BEEP, a new IETF general framework for application protocols, and present the Intrusion Detection Exchange Protocol (IDXP), a transport protocol designed and implemented within the BEEP framework that meets the IDWG's requirements. We conclude with a discussion of potential future directions for this ongoing effort.

## 1. Introduction

Intrusion detection is an area of increasing concern in the Internet community. In response, many automated intrusion detection systems have been developed, but there is no standardized way for these systems to communicate. To address this, the Intrusion Detection Working Group (IDWG) was chartered under the auspices of the Internet Engineering Task Force (IETF).

This paper provides an overview of the working group and the challenges it faces. It describes the attempts to define and implement a transport protocol for intrusion detection alerts, focusing on the Intrusion Detection Exchange Protocol (IDXP) and the implementation experience of the Aerospace Corporation/Harvey Mudd College 2000-2001 clinic team.

## 2. The IETF-IDWG

### 2.1 The IETF
The IETF is the engineering, development, and standardization arm of the Internet Architecture Board (IAB). It is responsible for developing Internet protocol specifications. The IETF's mission includes:

- Identifying and proposing solutions to operational and technical problems in the Internet.
- Specifying protocols and architecture to solve such technical problems.
- Making recommendations to the Internet Engineering Steering Group (IESG) regarding the standardization of protocols and their usage in the Internet.
- Providing a forum for the exchange of information within the Internet community.

To achieve its mission, the IETF is divided into various areas of interest, each with an Area Director. Each area has multiple Working Groups (WGs), dedicated to specific issues such as creating particular Internet protocol specifications. WGs are composed of a chair and all interested parties, with a charter setting the agenda and timetable for achieving specific goals. Anyone can join a WG, and participants act individually while making their affiliations known.

The IETF meets three times a year in various worldwide locations, where WGs meet to accomplish specific tasks as established in their charters.

### 2.2 The IDWG
The Intrusion Detection Working Group (IDWG) is part of the IETF Security Area. Its charter is to define data formats and exchange procedures for sharing information of interest to intrusion detection and response systems, and to management systems that may need to interact with them.

The IDWG aims to develop a protocol that allows different intrusion detection systems to communicate in a standard way. This work builds on the DARPA Common Intrusion Detection Framework (CIDF) that produced CISL, with enhancements including the limitation of the type of information communicated and integration into the TCP/IP suite of protocols.

IDWG was chartered as a working group after the August 1998 IETF meeting and met for the first time at the December 1998 IETF meeting. Since then, IDWG has met at each IETF meeting and held interim meetings. The IDWG has committed to producing several specifications, including a requirements specification, a data definition, a message format (IDMEF), and two transport protocols (IAP and IDXP) that fulfill the IDWG transport protocol (IDP) requirements for communicating IDMEF messages.

Participation in IDWG activities is encouraged via idwg-public-request@zurich.ibm.com.

## 3. System Description of IDS and IDWG

The IDWG's activities are closely integrated with Intrusion Detection Systems (IDSs). The following definitions clarify the description of the IDWG system.

### 3.1 Activity
IDSs monitor network usage and other types of activity by analyzing data sources such as network packets and system logs. Any activity that is of security concern is relevant for IDS monitoring.

**Event:** Any activity that is potentially worthy of some type of action or response, such as multiple failed logins or a ping flood. The degree to which an event is worthy of a response is dictated by the security policy in place, typically manifested in the configuration of the IDS.

### 3.2 Communication
Once an event has been detected and deemed worthy of further action, it is necessary to communicate the existence of the event, and possibly its details, to a party capable of further action.

**Alert:** IDS alerts contain, at a minimum, information stating that an event occurred. Alerts may contain richer information about the event to facilitate an informed action or response by the receiving party.

**Notification:** Once an alert has been received, it may be deemed necessary (as defined in the security policy) to notify an external actor of the alert. This can involve sending pager or e-mail messages, creating database entries, or publishing web-accessible HTML reports.

### 3.3 Actors
Intrusion Detection (ID) actors are entities that create, consume, act upon, or respond to ID alerts. These actors can be programs or humans.

- **Administrator:** Human responsible for establishing the overall security policy, specifying how other ID actors behave in response to various types of activities.
- **Operator:** Human responsible for initiating responses to alerts and/or notifications. The operator may choose to manually respond or configure the IDS for some automated response.
- **Sensor:** Collects data about activity from data sources, to be used in detecting events.
- **Analyzer:** Detects events based on activity data and, according to the security policy, generates alerts. Alerts are formatted and transferred to managers using the format and transfer protocols standardized by the IDWG.
- **Manager:** Consumes alerts and facilitates control over the IDS by the operator. Managers inform the operator through different types of notification that alerts have occurred, as per the security policy.

### 3.4 System Assumptions
The IDWG has made two key assumptions about the deployment configuration of an IDS:
1. Only analyzers create and communicate ID alerts. The same program or computer may act as both an analyzer and a manager, but these will be separate ID entities.
2. Analyzers and managers can be separate components that communicate pairwise across a TCP/IP network. This allows for the differentiation between creation and consumption of ID alerts and enables these acts to occur at different IDS components on the network.

These assumptions affect the transfer protocol, as alerts must be transferred from one component over TCP/IP to another in a standard and secure fashion.

## 4. Transport Requirements

### 4.1 Allow Communication Between Different IDS Elements
IDS elements may be either passive or active. Passive elements wait to be contacted by active elements, while active elements initiate communication with passive elements. This distinction allows for flexible deployment, with some elements only actively connecting to a known set of peers, while others passively listen for connections from a set of known peers.

### 4.2 Reliable Transmission
Messages sent between IDS elements must get through and be acknowledged, especially under difficult network conditions. The severity of an attack, and therefore the importance of a prompt response, may be revealed in the number and frequency of messages generated by IDS analyzers. Achieving reliable transmission efficiently is crucial to avoid unnecessary duplication of messages. For these reasons, the IDWG has specified that the IDP be based on the Transmission Control Protocol (TCP).

### 4.3 Mutual Authentication / Assurance of Message Origin
Each party at each end of the IDP must be able to verify the identity of its peer. This is important because an attacker masquerading as an analyzer could inject false data to mask a real attack, or an attacker masquerading as a manager could intercept traffic and lull the analyzer(s) into thinking that a response was being mounted. Assurance of message origin involves having a way to prove post facto which messages came from which IDS element.

### 4.4 Integrity and Confidentiality
A diagram outlining the core architectural elements of IDP is shown in Figure 1. The working group has specified requirements for how these elements should interact. The design of IDP must meet these requirements to successfully take its place in a system utilizing IDS to maintain and enhance security. The most important of these requirements include:

- **Integrity of Data:** If a message has been tampered with by someone "on the wire" between the two elements, this tampering must be detected.
- **Confidentiality:** A third-party intercepting the traffic between the two elements should be unable to make sense of it.

### 4.5 Resist DoS Attacks
IDP should resist Denial-of-Service (DoS) attacks by rejecting illegitimate connections as early as possible and potentially modifying its behavior if it believes it is being attacked.

### 4.6 Further Network-Specific Issues
Since IDP is designed to increase network security, it should be able to operate through firewalls without compromising their security. Managers and analyzers can both be active, allowing them to connect outward through the firewall to the appropriate passive element. Additionally, a proxying capability allows connections between IDS elements separated by a firewall, facilitating the initiation of IDS message exchanges regardless of the location of the initiating IDS element. A proxy can be configured to only accept connections and transfer messages to known IDS elements, reducing the potential security risk that additional transfers across a firewall might pose.

## Conclusion
We have described the goals of the IETFâ€™s Intrusion Detection Working Group (IDWG) and the requirements for a transport protocol to facilitate communication among intrusion detection systems. We discussed the design and implementation of IAP, the first attempt at such a protocol, and its limitations. We then introduced BEEP, a new IETF general framework for application protocols, and presented the Intrusion Detection Exchange Protocol (IDXP), a transport protocol designed and implemented within the BEEP framework that meets the IDWG's requirements. We concluded with a discussion of potential future directions for this ongoing effort.