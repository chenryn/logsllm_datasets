### System Scalability
The system demonstrates excellent scalability, meaning that even highly popular files can be downloaded at the same speed as less popular ones.

### Experiment 2

**Parameters:**
- \(\lambda = 0.04\)
- \(\lambda = 0.4\)
- \(\lambda = 4\)
- \(\lambda = 40\)
- Simple fluid model

**Figure 3: Evolution of the Number of Seeds Over Time**

| Time (min) | 0   | 1000 | 2000 | 3000 | 4000 | 5000 |
|------------|-----|------|------|------|------|------|
| Number of Seeds | 250 | 200  | 150  | 100  | 50   | 0    |

**Figure 4: Evolution of the Number of Downloaders Over Time**

| Time (min) | 0   | 1000 | 2000 | 3000 | 4000 | 5000 |
|------------|-----|------|------|------|------|------|
| Number of Downloaders | 500 | 450  | 400  | 350  | 300  | 250  |

In Figures 3 and 4, we maintain the same experimental setup as in the first experiment, with the exception that \(\gamma\) is now set to 0.005. This change makes the uploading bandwidth the primary bottleneck. The results are consistent with the previous experiment, showing that the simple fluid model is accurate for large \(\lambda\) values and still performs well for smaller \(\lambda\) values.

We also plot the histograms of \(\hat{x}\) and \(\hat{y}\) in Figures 5 and 6, where:
\[ \hat{x}(t) = \frac{x_{\text{sim}}(t) - x(t)}{\sqrt{\lambda}} \]
\[ \hat{y}(t) = \frac{y_{\text{sim}}(t) - y(t)}{\sqrt{\lambda}} \]

Here, \(x_{\text{sim}}(t)\) and \(y_{\text{sim}}(t)\) represent the number of downloaders and seeds in the actual simulation, while \(x(t)\) and \(y(t)\) represent the number of downloaders and seeds in the deterministic fluid model. According to the theory presented in Section 3.4, the histograms should appear roughly Gaussian, which is confirmed by the figures for sufficiently large \(\lambda\). The variance of \(\hat{x}\) and \(\hat{y}\) remains relatively constant as \(\lambda\) changes from 0.04 to 40.

### Experiment 3

In this experiment, we introduced a file into the BitTorrent network and collected log files from the BitTorrent tracker over a period of approximately three days. Peers report events such as joining, leaving, or completing downloads to the tracker. Additionally, peers regularly report information such as the total amount of data uploaded/downloaded and the number of bytes remaining to be downloaded. The tracker logs all this information, allowing us to analyze and extract useful data.

The parameters \(\lambda\), \(\theta\), and \(\gamma\) were measured by counting peer arrivals, downloader departures, and seed departures, respectively. However, the tracker logs do not provide information on whether the uploading or downloading bandwidth is the bottleneck. We assume the uploading bandwidth is the bottleneck and estimate \(\mu\) by dividing the measured total uploading rate by the number of peers (i.e., \(\eta = 1\)).

The file size was approximately 530 MB, and the average uploading bandwidth was estimated to be 90 kb/s. Using 1 minute as the time unit, the normalized uploading bandwidth (normalized by the file size in bytes) was estimated to be \(\mu = 0.0013\). The downloader leaving rate was estimated to be \(\theta = 0.001\).

An interesting observation is that \(\lambda\) and \(\gamma\) are time-varying in the real BitTorrent system. This is attributed to the initial seeds staying in the system long enough to ensure a sufficient population of peers. If the initial seeds leave too quickly, the system will fail.

From the tracker logs, we estimate:
- For \(t \leq 800\) minutes, \(\lambda = 0.06\) and \(\gamma = 0.001\).
- For \(t \geq 1300\) minutes, \(\lambda = 0.03\) and \(\gamma = 0.0044\).
- Between 800 and 1300 minutes, the arrival rate increases linearly.

In our fluid model simulation, we let \(\lambda\) and \(\gamma\) change linearly between 800 and 1300 minutes. We set the downloading bandwidth \(c = 1\) for the fluid model simulation, noting that the actual value of \(c\) does not affect the fluid model results if it is above a certain threshold.

**Figure 7: Evolution of the Number of Seeds Over Time**

| Time (min) | 0   | 1000 | 2000 | 3000 | 4000 | 5000 |
|------------|-----|------|------|------|------|------|
| Number of Seeds | 20 | 18   | 16   | 14   | 12   | 10   |

**Figure 8: Evolution of the Number of Downloaders Over Time**

| Time (min) | 0   | 1000 | 2000 | 3000 | 4000 | 5000 |
|------------|-----|------|------|------|------|------|
| Number of Downloaders | 25 | 20   | 15   | 10   | 5    | 0    |

The simulation results show that the fluid model captures the evolution of the number of seeds well. In Figure 8, the oscillation of the number of downloaders is more significant due to the low popularity of the file and the small arrival rate \(\lambda\). Despite this, the oscillation is within the 95% confidence interval.

### Conclusions

In this paper, we presented a simple fluid model for BitTorrent-like networks and studied the steady-state network performance. We derived expressions for the average number of seeds, the average number of downloaders, and the average downloading time as functions of various parameters, providing insights into how different factors affect network performance. We also characterized the variability of the system using limit theorems for large arrival rates. We abstracted the built-in incentive mechanism of BitTorrent and studied its effect on network performance, proving the existence of a Nash equilibrium under certain conditions. Our experimental results show that the simple fluid model can capture the behavior of the system even when the arrival rate is small.

### References

[1] Entropia. http://www.entropia.com.
[2] Top applications (bytes) for subinterface: SD-NAP traffic, 2002. www.caida.org/analysis/workload/byapplication/sdnap.
[3] L. Arnold. Stochastic Differential Equations: Theory and Applications. John Wiley, New York, NY, 1974.
[4] D. Bertsekas and R. Gallager. Data Networks. Prentice Hall, Englewood Cliffs, NJ, 1987.
[5] P. Billingsley. Convergence of Probability Measures. Wiley, 1968.
[6] F. Clevenot and P. Nain. A Simple Fluid Model for the Analysis of the Squirrel Peer-to-Peer Caching System. In Proceedings of IEEE INFOCOM, 2004.
[7] F. Clevenot, P. Nain, and K. Ross. Stochastic Fluid Models for Cache Clusters. Technical Report 4815, INRIA, Sophia Antipolis, 2003. To appear in Performance Evaluation.
[8] B. Cohen. Incentives build robustness in BitTorrent, May 2003. http://bitconjurer.org/BitTorrent/bittorrentecon.pdf.
[9] F. Dabek, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica. Wide-area cooperative storage with CFS. In Proceedings of the 18th ACM Symposium on Operating Systems Principles (SOSP '01), Chateau Lake Louise, Banff, Canada, October 2001.
[10] A. Das and R. Srikant. Diffusion approximations for a single node accessed by congestion-controlled sources. IEEE Transactions on Automatic Control, 45(10):1783–1799, October 1998.
[11] G. de Veciana and X. Yang. Fairness, incentives and performance in peer-to-peer networks. In the Forty-first Annual Allerton Conference on Communication, Control and Computing, Monticello, IL, Oct. 2003.
[12] S. N. Ethier and T. G. Kurtz. Markov Processes: Characterization and Convergence. Wiley, 1994.
[13] Z. Ge, D. R. Figueiredo, S. Jaiswal, J. Kurose, and D. Towsley. Modeling peer-peer file sharing systems. In Proceedings of IEEE INFOCOM, 2003.
[14] P. W. Glynn. On the Markov property of the GI/G/∞ Gaussian limit. Advances in Applied Probability, 14:191–194, 1982.
[15] S. Iyer, A. Rowstron, and P. Druschel. Squirrel: A decentralized peer-to-peer web cache. In Proceedings of ACM Symposium on Principles of Distributed Computing (PODC '02), Monterey, California, 2002.
[16] D. Liberzon and A. Morse. Basic problems in stability and design of switched systems. IEEE Control Systems Magazine, pages 59–70, 1999.
[17] T. S. Eugene Ng, Y.-H. Chu, S. G. Rao, K. Sripanidkulchai, and Hui Zhang. Measurement-Based Optimization Techniques for Bandwidth-Demanding Peer-To-Peer Systems. In Proceedings of IEEE INFOCOM, 2003.
[18] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker. A scalable content addressable network. In Proceedings of ACM SIGCOMM, 2001.
[19] M. Ripeanu. Peer-to-peer architecture case study: Gnutella network. Technical report, University of Chicago, 2001.
[20] M. Ripeanu, I. Foster, and A. Iamnitchi. Mapping the Gnutella network: Properties of large-scale peer-to-peer systems and implications for system design. IEEE Internet Computing Journal, 6(1), 2002.
[21] I. Stoica, R. Morris, D. Karger, M. Kaashoek, and H. Balakrishman. Chord: A scalable peer-to-peer lookup protocol for internet applications. In Proceedings of ACM SIGCOMM, 2001.
[22] W. Whitt. On the heavy-traffic limit theorems for GI/G/∞ queues. Advances in Applied Probability, 14:171–190, 1982.
[23] W. Whitt. Stochastic Process Limits. Springer, 2002.
[24] X. Yang and G. de Veciana. Service Capacity of Peer to Peer Networks. In Proceedings of IEEE INFOCOM, 2004.