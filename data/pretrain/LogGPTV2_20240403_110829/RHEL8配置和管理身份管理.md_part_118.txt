          records:
            - name: host1
              zone_name: idm.example.com
              a_rec: 192.168.122.112
              a_rec: 192.168.122.122
            - name: host1
              zone_name: idm.example.com
              aaaa_rec: ::1
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-presence-multiple-records-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 DNS 中的 A 记录的更多信息，请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsrecord 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#ensuring-the-presence-of-multiple-cname-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}确保使用 Ansible 在 IdM 中存在多个 CNAME 记录 {.title}
:::
Canonical Name 记录（CNAME
记录）是在域名系统(DNS)中一种资源记录类型，用于将一个域名、别名映射到另一个名称，即规范名称。
从单个 IP 地址运行多个服务时，您可能会发现 CNAME 记录很有用：例如，FTP
服务和 Web 服务，每个服务在不同端口上运行。
本节介绍身份管理(IdM)管理员如何使用 Ansible playbook 确保 IdM DNS
中存在多个 CNAME 记录。在以下步骤中使用的示例中，[**host03**]{.strong}
同时是 HTTP 服务器和 FTP 服务器。IdM 管理员确保在
[**idm.example.com**]{.strong} 区域中存在 [**host03**]{.strong} A 记录的
[**www**]{.strong} 和 [**ftp**]{.strong} CNAME 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm.html "第 74 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
-   [**host03**]{.strong} A 记录存在于 [**idm.example.com**]{.strong}
    区域中。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-CNAME-record-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-CNAME-record-is-present.yml ensure-CNAME-record-is-present-copy.yml
    ```
4.  打开 [**ensure-CNAME-record-is-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   （可选）调整 play `名称`{.literal} 提供的描述。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   在 Record `变量`{.literal} 部分中，设置以下变量和值：
        ::: itemizedlist
        -   将 `name`{.literal} 变量设置为 [**www**]{.strong}。
        -   将 `cname_hostname`{.literal} 变量设置为
            [**host03**]{.strong}。
        -   将 `name`{.literal} 变量设置为 [**ftp**]{.strong}。
        -   将 `cname_hostname`{.literal} 变量设置为
            [**host03**]{.strong}。
        :::
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure that 'www.idm.example.com' and 'ftp.idm.example.com' CNAME records point to 'host03.idm.example.com'.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipadnsrecord:
          ipaadmin_password: Secret123
          zone_name: idm.example.com
          records:
          - name: www
            cname_hostname: host03
          - name: ftp
            cname_hostname: host03
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-CNAME-record-is-present.yml
    ```
:::
::: itemizedlist
**其它资源**
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsrecord 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#ensuring-the-presence-of-an-srv-record-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}使用 Ansible 在 IdM 中存在 SRV 记录 {.title}
:::
DNS 服务 (SRV)
记录定义域中可用服务的主机名、端口号、传输协议、优先级和权重。在
Identity Management(IdM)中，您可以使用 SRV 记录来定位 IdM 服务器和副本。
本节介绍 Identity Management(IdM)管理员如何使用 Ansible playbook 来确保
IdM DNS 中存在 SRV 记录。在以下示例中，IdM 管理员可确保存在
[**\_kerberos.\_udp.idm.example.com**]{.strong} SRV 记录，其值为 [**10
50 88 idm.example.com**]{.strong}。这会设置以下值：
::: itemizedlist
-   它将服务的优先级设置为 10。
-   它将服务的权重设置为 50。
-   它将服务要使用的端口设置为 88。
:::
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm){.link}。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-SRV-record-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-SRV-record-is-present.yml ensure-SRV-record-is-present-copy.yml
    ```
4.  打开 [**ensure-SRV-record-is-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为
        [**\_kerberos.\_udp.idm.example.com**]{.strong}。
    -   将 `srv_rec`{.literal} 变量设置为 [**\'10 50 88
        idm.example.com\'**]{.strong}。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Test multiple DNS Records are present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure a SRV record is present
      - ipadnsrecord:
          ipaadmin_password: Secret123
          name: _kerberos._udp.idm.example.com
          srv_rec: ’10 50 88 idm.example.com’
          zone_name: idm.example.com
          state: present
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-SRV-record-is-present.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 SRV 记录的更多信息，请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsrecord 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
:::
[]{#collecting-idm-healthcheck-information_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#collecting-idm-healthcheck-information_configuring-and-managing-idm.html#collecting-idm-healthcheck-information_configuring-and-managing-idm}第 80 章 收集 IdM 健康检查信息 {.title}
:::
健康检查已设计为手动命令行工具，可帮助您识别身份管理(IdM)中可能存在的问题。
本章论述了如何根据带有 30 天轮转的 Healthcheck 输出创建日志集合。
::: itemizedlist
**先决条件**
-   Healthcheck 工具仅适用于 RHEL 8.1 或更新版本
:::
::: section
::: titlepage
# []{#collecting-idm-healthcheck-information_configuring-and-managing-idm.html#healthcheck-in-idm_collecting-idm-healthcheck-information}IdM 中的 Healthcheck {.title}
:::
身份管理(IdM)中的 Healthcheck 工具可帮助发现可能影响 IdM
环境健康的问题。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
Healthcheck 工具是一个命令行工具，可在无需 Kerberos
身份验证的情况下使用。
:::
::: section
::: titlepage
## []{#collecting-idm-healthcheck-information_configuring-and-managing-idm.html#_modules_are_independent}模块是独立的 {.title}
:::
Healthcheck由独立模块组成，用于测试：
::: itemizedlist
-   复制问题
-   证书有效期
-   证书颁发机构基础设施问题
-   IdM 和 Active Directory 信任问题
-   正确的文件权限和所有权设置
:::
:::
::: section