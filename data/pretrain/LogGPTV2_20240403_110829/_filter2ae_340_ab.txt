      cmd webshell 
      Path:   Param:
拦截：
把白名单的内容做为参数进行执行呢：
成功绕过，直接封装到webshell参数上更方便：
    StartInfo.Arguments=@"/'C:/Windows/Microsoft.NET/Framework/v1.1.4322/vbc.exe' " + argm.Value;
满足这个白名单并使用路径跳转的方式执行程序也可以绕过：
回首这个白名单，这个基于白名单识别有个缺陷就是并不是完全的匹配，而是前面匹配到了则放过。打个比方：可以利用windows的一个特性将可执行的文件改为`.exee`，比如我们使用白名单中的`vsjitdebugger.exe`这个文件名，上传一个名为`vsjitdebugger.exee`的cmd即可：
**0x04 Bypass CDN查找原IP**
由于cdn不可能覆盖的非常完全，那么可以采用[国外多地ping](https://asm.ca.com/en/ping.php)的方式，或者多收集一些小国家的冷门dns然后nslookup
domain.com dnsserver。
> 写了个简单的脚本，首先收集好偏门的dns字典，然后轮训一个目标的方式，输出这些dns查询出的不同结果。
    #!/usr/bin/env python
    # -*- encoding: utf-8 -*-    #__author__ == Tr3jer_CongRong
    import re
    import sys
    import time
    import threading
    import dns.resolver
    class Bypass_CDN:
        def __init__(self,domain,dns_dict):
            self.domain = domain
            self.myResolver = dns.resolver.Resolver()
            self.dns_list = set([d.strip() for d in open(dns_dict)])
            self.good_dns_list,self.result_ip = set(),set()
        def test_dns_server(self,server):
            self.myResolver.lifetime = self.myResolver.timeout = 2.0
            try:
                self.myResolver.nameservers = [server]
                sys.stdout.write('[+] Check Dns Server %s \r' % server)
                sys.stdout.flush()
                answer = self.myResolver.query('google-public-dns-a.google.com')
                if answer[0].address == '8.8.8.8':
                    self.good_dns_list.add(server)
            except:
                pass
        def load_dns_server(self):
            print '[+] Load Dns Servers ...'
            threads = []
            for i in self.dns_list:
                threads.append(threading.Thread(target=self.test_dns_server,args=(i,)))
            for t in threads:
                t.start()
                while True:
                    if len(threading.enumerate()) 
> 通过dns历史解析记录查找目标源ip，我推荐使用[Rapid7的DNS解析记录库](https://scans.io/study/sonar.fdns)进行检索，毕竟做渗透的聪明人都讲究：“事前早有准备，而不是临阵磨枪”。这里有一份2014.03—2015.10的解析记录放在了[百度云](https://pan.baidu.com/s/1qXAAXuG)。
NS/TXT/MX的dns类型都可以进行检索，基于dns解析hitory还可以使用[netcraft.com](http://toolbar.netcraft.com/site_report?url=http://acfun.tv)
> 让服务器主动连接：
  * 在可上传图片的地方利用目标获取存放在自己服务器的图片，或者任何可pull自己资源的点，review log即可拿到。
  * 通过注册等方式让目标主动发邮件过来，此方法对于大公司几率小，因为出口可能是统一的邮件服务器。可以尝试扫其MailServer网段。
**0x05 End.**
为完成这个系列，将前两篇也适当的增添了一些。有什么这方面的问题可以在本帖问，嗯，那就这样吧。
[wafbypass_misc.pdf](https://xianzhi.aliyun.com/forum/p_w_upload/big_size/wafbypass_misc.pdf)