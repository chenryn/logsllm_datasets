title:Direct chosen ciphertext security from identity-based techniques
author:Xavier Boyen and
Qixiang Mei and
Brent Waters
Direct Chosen Ciphertext Security from Identity-Based
Techniques
Xavier Boyen
Voltage Inc., Palo Alto
PI:EMAIL
Qixiang Mei
Southwest Jiaotong University
Brent Waters
Stanford University
PI:EMAIL
PI:EMAIL
ABSTRACT
We describe a new encryption technique that is secure in the
standard model against chosen ciphertext attacks. We base
our method on two very eﬃcient Identity-Based Encryption
(IBE) schemes without random oracles due to Boneh and
Boyen, and Waters.
Unlike previous CCA2-secure cryptosystems that use IBE
as a black box, our approach is very simple and compact.
It makes direct use of the underlying IBE structure, and re-
quires no cryptographic primitive other than the IBE scheme
itself. This conveys several advantages. We achieve shorter
ciphertext size than the best known instantiations of the
other methods, and our technique is as eﬃcient as the Boneh
and Katz method (and more so than that of Canetti, Halevi,
and Katz). Further, our method operates nicely on hierar-
chical IBE, and since it allows the validity of ciphertexts to
be checked publicly, it can be used to construct systems with
non-interactive threshold decryption.
In this paper we describe two main constructions: a full
encryption system based on the Waters adaptive-ID secure
IBE, and a KEM based on the Boneh-Boyen selective-ID
secure IBE. Both systems are shown CCA2-secure in the
standard model, the latter with a tight reduction. We dis-
cuss several uses and extensions of our approach, and draw
comparisons with other schemes that are provably secure in
the standard model.
Categories and Subject Descriptors
E.3 [Data]: [Data Encryption]
General Terms
Security
Keywords
Identity-Based Encryption, Chosen Ciphertext Security
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’05, November 7–11, 2005, Alexandria, Virginia, USA.
Copyright 2005 ACM 1-59593-226-7/05/0011 ...$5.00.
1.
INTRODUCTION
The design of a secure encryption scheme is central to any
system that strives to provide secure communication using
an untrusted network. In order for a cryptographic scheme
to be considered secure in an adversarial setting, it must
be secure against chosen ciphertext attacks. While, there
have been several eﬃcient encryption schemes shown to be
heuristically secure in the random oracle model [2], it wasn’t
until fairly recently that Cramer and Shoup [13] designed an
encryption scheme that was both eﬃcient and provably se-
cure in the standard model (without random oracles) against
chosen ciphertext attacks.
Somewhat surprisingly, Canetti Halevi and Katz [11] were
able to show how to elegantly construct a CCA2-secure cryp-
tosystem from any identity-based encryption (IBE) scheme
secure in the selective-ID model [10]. A user’s public en-
cryption key is simply a set of IBE public parameters and
the user’s secret key is the corresponding IBE master key.
To encrypt a message, M , for such a user, one ﬁrst generates
the parameters, VK, to a one-time signature scheme; next
one hashes the signature parameters to obtain an “iden-
tity”; then one encrypts the message to the identity calcu-
lated from the previous step; one ﬁnally signs the partial
ciphertext with the one-time signature private key to get a
signature σ and attaches σ as part of the ciphertext. To
decrypt a message, a user ﬁrst checks the validity of the
signature on a ciphertext, and rejects the ciphertext if the
signature is invalid. If the signature is valid, it decrypts the
ciphertext from the identity determined by the one-time sig-
nature parameters, VK. Intuitively, to attack a ciphertext,
C, in the chosen ciphertext model, an adversary will need
to generate its own set of signature parameters to obtain a
valid signature, σ0, before it can construct a valid ciphertext
C0. However, this will cause the receiver to attempt decryp-
tion with a diﬀerent identity than the one associated with
C, and by the semantic security of the IBE system this will
provide no useful information for decrypting C. Boneh and
Katz [8] further improve the eﬃciency of this scheme by us-
ing a MAC instead of a one-time signature. One interesting
aspect of these schemes is that they seemingly do not fall in
the characterization of previous CCA2-secure schemes given
by Elkind and Sahai [16].
Both the CHK and BK techniques are generic. The ef-
ﬁcient constructions of both methods come from instiant-
ing them with either one of the Boneh-Boyen [3] identity-
based encryption schemes. A natural question is whether we
can construct improved CCA2-secure encryption schemes by
taking advantage of speciﬁc properties of the most eﬃcient
IBE schemes secure without random oracles [27, 3]. We an-
swer this question in the aﬃrmative.
In this paper we ﬁrst show how to build a direct CCA2-
secure public key cryptosystem from the Waters identity-
based encryption cryptosystem [27]. We construct a CCA2-
secure cryptosystem in which ciphertexts consist of just three
group elements with no attached signatures or MACs. The
basic idea behind our scheme is as follows. As in the CHK
method, the public key of a user will correspond to the pub-
lic parameters of an IBE scheme. To encrypt a message, M ,
the encryption algorithm ﬁrst creates the ﬁrst two elements
of the ciphertext, which in the Waters scheme are indepen-
dent of the identity; next these two elements are hashed
to determine a “one-time identity”; ﬁnally the ciphertext is
completed by constructing the third element to form an en-
cryption to the identity determined from the previous step.
That is, the identity that we encrypt to is actually deter-
mined by the ﬁrst two elements of the ciphertext itself. In
this manner a “well formed” ciphertext is self-contained in
that we do not need any auxiliary signatures or MACs.
We get our leverage from two properties of the Waters
scheme [27]. The ﬁrst is that since we work in groups with
eﬃciently computable bilinear maps, we can use the bilin-
ear map to check that the third element is formed correctly,
and thus that the ciphertext is well formed (this is only nec-
essary for the simulation, as the decryption algorithm can
do the check more eﬃciently). Secondly, we take advan-
tage of the semantic security of the IBE system in the full
adaptive-identity security model (as opposed to the weaker
selective-ID model). When proving security of our scheme,
the simulator will not know until the challenge phase which
“identity” the challenge ciphertext will be for, since the chal-
lenge identity depends partially on the adversary’s input.
Since the identity is not determined until well after setup,
we need to base our scheme on an adaptive-ID secure IBE
scheme.
Perhaps more surprisingly, we also show that our tech-
nique can be used to build a Key Encapsulation Mechanism
(KEM) with full CCA2 security based only on the scheme of
Boneh and Boyen,1 which is only selective-ID secure (in its
basic conﬁguration). Since in a KEM there is no message to
encrypt, in a chosen ciphertext attack the challenge cipher-
text can be at once properly distributed and independent of
any adversarial input. Therefore, the challenge ciphertext
and the associated identity can be chosen before setup when
running a security simulation, as in the selective-ID model.
Besides simplicity, the main beneﬁt of this construction is
that we get a tight security reduction from an already very
reasonable underlying complexity assumption. The fact that
we get a KEM (as opposed to a complete cryptosystem) is
practically irrelevant since public-key encryption is almost
exclusively used to encrypt random session keys in practical
applications.
The two CCA2-secure systems we describe have advan-
tages over both the CHK [11] and BK [8] generic construc-
tions.
First, our ciphertexts are short, consisting of just three
group elements (or two for the KEM), with no attached sig-
nature or MAC. For comparison, a ciphertext in the CHK
1Although two distinct eﬃcient IBE constructions are given
in [3]; in this paper “the Boneh-Boyen scheme” refers by
default to their ﬁrst scheme, i.e., the (H)IBE scheme based
on the Bilinear Diﬃe-Hellman assumption [3, §4].
scheme will need to have attached a one time signature and
public key. Typically, fast one time signatures schemes [21]
will have long signatures lengths and thus blow up the ci-
phertext size. Alternatively, as pointed out by Boneh et
al. [6], we could base one-signature schemes oﬀ “full-blown”
signature schemes that use number-theoretic constructions.
However, such signatures take longer to both create and
verify, making the CHK method less eﬃcient in both the
encryption and decryption stage than ours.
By contrast, the construction of BK avoids to a large ex-
tent the previous drawbacks by replacing the signature with
a MAC, and is much faster since the time to compute a
MAC is insigniﬁcant compared to the IBE operations; and
indeed, the performance of the BK scheme is roughly the
same as ours (though BK still requires three to ﬁve times
as many random bits, most of which are used in the MAC
construction).
The main drawback of using a MAC in the BK system is
that its veriﬁcation requires knowledge of the private key,
whereas in our construction the ciphertext validity test may
be done with the public key. This distinction is crucial for
the construction of threshold systems (where the private
key is shared amongst decryption servers, each of which
can only perform a partial decryption of a given cipher-
text). Public key-only ciphertext veriﬁcation allows the
threshold decryption servers to operate without interaction,
which greatly simpliﬁes the system. Boneh, Boyen, and
Halevi [5] recently described a generic and eﬃcient non-
interactive CCA2 threshold system without random oracles,
based on the CHK transformation. Using our technique we
are able to construct an even more eﬃcient (albeit non-
generic) fully non-interactive threshold KEM with CCA2
security in the standard model, by specializing the method
of [5].
Finally, if we apply our technique to the last level of the
depth-(‘ + 1) hierarchical version of the Waters or Boneh-
Boyen IBE scheme, we immediately obtain a depth-‘ HIBE
with intrinsic CCA2 security.
In summary, our schemes enjoy the eﬃciency of the BK
scheme, can be used in threshold CCA2-secure systems like
CHK, and have shorter ciphertexts than both.
1.1 Related Work
We restrict our comparisons to encryption systems that
are CCA2-secure [24] in the standard model. There are sev-
eral eﬃcient schemes that can be shown to be secure in the
random oracle [2] model, however, we can only make heuris-
tic arguments for the security of these schemes.
Naor and Yung [23] described a scheme provably secure
against lunch-time attacks. These techniques were later ex-
tended by Dolev, Dwork, and Naor [15] and Sahai [25] to
protect against an adaptive adversary in a chosen cipher-
text attack. None of the above methods, however, yields a
scheme to be eﬃcient enough to be of practical use.
Cramer and Shoup [13] developed the ﬁrst practical CCA2-
secure scheme that was provably secure in the standard
model. Later, Cramer and Shoup [14] generalized their tech-
niques by constructing CCA2-secure schemes from “projec-
tive hash functions”. Shoup [26] showed how to make an eﬃ-
cient hybrid scheme by using the original Cramer-Shoup sys-
tem as a KEM. Kurosawa and Desmedt [20] further demon-
strated an even more eﬃcient CCA2-secure hybrid system;
Abe et al. [1] recently generalized their construction.
Canetti, Halevi, and Katz [11] describe a new paradigm
for constructing CCA2-secure schemes from selective-ID se-
cure identity-based encryption systems. Boneh and Katz [8]
later improved upon the eﬃciency of this result. Both of
these methods are generic in that they can be applied to
any selective-ID secure cryptosystem, whereas our method
is particular to the Waters [27] adaptive-ID secure identity-
based encryption scheme. For concreteness when comparing
the performance of the schemes we consider their construc-
tion applied to the Boneh and Boyen [3] IBE scheme.
1.2 Organization
In Section 2 we give a few preliminaries necessary for our
constructions. We describe our fully secure encryption sys-
tem in Section 3, and reason about its security. In Section 4
we describe an alternative key encapsulation scheme with
tight security. In Section 5 we mention a few extensions of
practical interest to both constructions. Then, in Section 6,
we focus on the qualitative properties of our schemes, and
draw detailed comparisons with related work in the litera-
ture. Finally, we state our conclusions in Section 7.
2. PRELIMINARIES
We brieﬂy review the notions of chosen ciphertext secu-
rity for encryption and key encapsulation. We also deﬁne
bilinear groups and pairings, and state our complexity as-
sumption.
2.1 Secure Encryption
A public key encryption system consists of three (random-
ized) algorithms that are modeled as follows.
Setup(λ): Takes as input a security parameter λ ∈ Z+. It
outputs a public key and a private key.
Encrypt(PK, M ): Takes as input a public key PK and a
message M . It outputs a ciphertext.
Decrypt(SK, C): Takes as input a private key SK and a
It outputs a plaintext message or the
ciphertext C.
special symbol ⊥.
The strongest and commonly accepted notion of security
for a public key encryption system is that of indistinguisha-
bility against an adaptive chosen ciphertext attack. This
notion, denoted IND-CCA2, is deﬁned using the following
game between a challenger and an adversary A. Both are
given the security parameter λ ∈ Z+ as input.
Setup. The challenger runs Setup(λ) to obtain a random
It
instance of public and private key pair (PK, SK).
gives the public key to the adversary.
Query phase 1. The adversary adaptively issues decryp-
tion queries C where C ∈ {0, 1}∗. The challenger re-
sponds with Decrypt(SK, C).
Challenge. The adversary outputs two (equal
length) messages M0, M1. The challenger picks a ran-
dom b ∈ {0, 1} and sets C∗ = Encrypt(PK,Mb).
It
gives C∗ to the adversary.
Query phase 2. The adversary continues to issue decryp-
tion queries C as in phase 1, with the added con-
straint that C 6= C∗. The challenger responds with
Decrypt(SK, C).
Guess. Algorithm A outputs its guess b0 ∈ {0, 1} for b and
wins the game if b = b0.
The above is commonly known as the IND-CCA2 game.