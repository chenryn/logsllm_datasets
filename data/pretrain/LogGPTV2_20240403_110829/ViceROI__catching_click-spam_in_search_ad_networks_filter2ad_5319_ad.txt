capitalized Caucasian female ﬁrst names for computer eigen
name; in contrast, most other non-empty submissions on the
bluﬀ form (which we assume were curious users) ﬁlled in a
random assortment of characters. Given the small number
of users, clicking ads on a single publisher, ﬁlling forms in
a standardized but human-like manner, and presenting mal-
formed user-agent strings, we suspect this publisher is using
a click-farm with custom software that assists human click-
ers in performing click-spam and conversion-spam.
Type 3: Massively crowd-sourced. We ﬂagged some do-
mains associated with an unnamed publisher. We did not
receive Bluﬀ form submissions from this publisher; the ad
network informed us that they had terminated their rela-
tionship with the unnamed publisher before we conducted
our Bluﬀ form experiment. The publisher is a large online
gambling site that oﬀers users free virtual chips if they click
on ads and “ﬁll any forms” on the landing page.
Remedy. Bluﬀ forms are relatively easy to avoid (once
click-spammers wise up to them) and thus are of use only
in the short-term and at small scales to smoke out some in-
stances of conversion-spam. The fundamental problem stok-
ing conversion-spam, however, is its connection to smart-
pricing that creates an economic incentive for conversion-
spam. We believe the best way to root out conversion-spam
is for the smart-pricing algorithm to consider only conver-
sion signals that require the user to actually make a non-
trivial purchase on the advertiser site (similar to the pro-
posal in [13]) since it would create an economic burden for
Figure 6: Buzzdock injecting ads into a search result page. The
original search results are pushed down and an (irrelevant) ad
occupies prime on-screen real-estate even when the search engine
chose to not show any ads for the query.
the click-spammer. Coordinating such a scheme across ad-
vertisers is, however, likely to be challenging.
6.2 Ad Injection
What: Normally the publisher website controls where,
how many, and what ads are shown on that website by
inserting iframes or using JavaScript. An ad injector is a
party unaﬃliated with the publisher website that modiﬁes
the website as seen by the user by either inserting ads where
there were none, or by replacing the ads added by the pub-
lisher with ads the ad injector wants to instead show. These
modiﬁcations can be done from within the user’s browser (if
the ad injector is a browser plugin), or can be done through
in-network elements that perform deep-packet-inspection.
To the ad network, an ad injector appears as simply an-
other publisher. Any clicks on ads injected by the ad injec-
tor are accounted towards the ad injector’s payout, and the
legitimate publisher whose website was modiﬁed makes no
money from the ad click. Phorm and NebuAd (now defunct)
were two for-proﬁt companies that created in-network ad in-
jection middleboxes, deployed by some ISPs, that injected
ads into websites belonging to non-proﬁt organizations [12].
While these in-network ad injectors lost the battle (due to
the ISPs suﬀering a PR backlash), the battle seems to now
have moved into the users’ browsers.
Why click-spam: By showing ads on a publisher site
where a user expects some other content he is highly likely to
click, ad injectors confuse users (and advertisers end up pay-
ing for it). Consider, for instance, a user searching for acm
membership with the expectation that either the ﬁrst search
result or the ﬁrst ad result (chosen by his preferred search
engine) will take him to his intended destination. Because of
the ad injector Buzzdock, he is presented the search-results
page in Figure 6 instead where prime on-screen real-estate
— the position of the ﬁrst search result — now shows an
entirely irrelevant ad (even when the original search engine
chose to not show any ads for this query). If the user clicks
the ﬁrst blue link, perhaps reﬂexively, the advertiser must
pay for a spam click. Other sites where we’ve found Buz-
zdock injecting ads include Amazon and eBay search results
(where the ads are formatted to match the site content, but
take users away from the site after the users intentionally
searched on the shopping site), as well as in search results
on Yelp, YouTube, Wikipedia and other high-traﬃc sites.
Why high ROI: Ad injectors have an anomalously high
ROI per user because for the traﬃc acquisition cost of in-
stalling a single browser plugin (25¢ per install [15]) they can
inject ads into prime on-screen real-estate across the entire
web, and collect money from all clicks intentional or not.
Some that we catch: Viceroi ﬂagged traﬃc from the
following ad injectors:
Buzzdock. Browser plugin typically bundled with freeware
or adware software found online (e.g., PDF readers);
in-
stalled by default with the host software8; and not removed
when the host software is uninstalled. Ads are formatted
to match the look-and-feel of the site into which ads are
injected.Wajam and B00kmarks are two others that follow
identical business model as Buzzdock.
Remedy. In the short-term, ad networks for whom these
ad injectors are publishers can ﬁlter their clicks (and cut oﬀ
their revenue) if the ad injectors are in violation of ad net-
work policy. For ad networks where ad injectors are compli-
ant with policy, PR pressure or advertiser outrage may help
convince these ad networks to change policy (as happened
with ISPs and in-network ad injection). In the long-term,
legal precedent may create a strong disincentive for busi-
ness models that deprive legitimate publishers of advertising
revenue. Towards this end Facebook is currently litigating
against Sambreel Holdings, the company behind Buzzdock
and PageRage, the latter being an ad injector that injected
ads into the Facebook site.
6.3 Search Hijacking
What: Search hijacking refers to some party unexpect-
edly redirecting the user’s search queries away from their
preferred search engine to a page full of ads formatted to
look like search results. The search hijacker earns revenue
from each ad click. The hijacking may be performed through
in-network elements (e.g., ISP DNS servers), in-browser ele-
ments (e.g., plugins and toolbars), or deceiving or confusing
the user into changing their browser search settings.
Why click-spam: Search hijacking hijacks search queries
regardless of whether the search query is navigational (i.e.,
queries for a speciﬁc site, e.g., youtube), informational (i.e.,
broad queries with multiple potential intents, e.g., bay area),
or transactional (i.e., queries with commercial intent, e.g.,
san francisco hotel). Navigational and informational queries
(estimated to be 75% [26] of search queries) are hard to
monetize. Advertisers rely on the search engine to not show
their ads for such queries, and reputed search engine use the
opportunity to present a more pleasing user experience by
not showing ads for these queries. Search hijackers, on the
other hand, bombard the user with ads for these queries and
make advertisers pay for the resulting clicks. That said, this
is a gray-area since the user (presumably) read the ad before
deciding to click on it (or so search hijackers argue).
In practice, search hijackers make the situation signiﬁ-
cantly less gray by explicitly increasing the likelihood that
the user will unintentionally click on ads. Not only are the
ads typically shown on a white background mimicking or-
ganic search results (while the convention is to use shaded
backgrounds for ads), accidental clicks anywhere in vast ar-
eas of white-space (see Figure 7) result in an ad click.
8Ad injectors typically argue that users consented to in-
stalling it, however, an overwhelming fraction of users with
ad injectors are either entirely unaware of them or unaware
of what they do. [7]
Figure 7: Search hijacking by the Scour toolbar. Ads (indis-
tinguishable from search results) are shown for queries includ-
ing navigational and informational queries. Accidental clicks on
white-space results in an ad click. For query yutoube, the ﬁrst
link (an ad) goes to a spyware download.
Why high ROI: Search hijackers get as much traﬃc as
a legitimate search engine would, but where a legitimate
search engine have far more organic search clicks than ad
clicks, search hijackers extract predominantly ad clicks from
that traﬃc. Thus for the cost of acquiring a single user,
search hijackers reap orders of magnitude more ad clicks
than a legitimate search engine.
Some that we catch: Viceroi ﬂagged traﬃc from three
diﬀerent classes of search hijacking, and multiple publishers
in each class:
Type 1: In-network hijacking (of DNS NX records). Viceroi
ﬂagged traﬃc from at least two large US ISPs (RoadRunner
by Time Warner Cable, and Cox Communication) where the
DNS servers operated by the ISPs appear to hijack DNS NX
responses (i.e., for non-existent domain names) and redirects
the browser to a search hijack page with the non-existent do-
main as the search query. These queries are, by deﬁnition,
navigational queries. The results page is full of (irrelevant)
ads even when the query is an obvious typo for a speciﬁc
site.
Type 2: In-browser hijacking (via toolbars). Viceroi ﬂagged
traﬃc from a number of toolbars that hijack search queries
entered in the browser’s search box or address bar. These in-
clude SmartAddressbar, BeneﬁtBar, CertiﬁedToolbar, Search-
Nut and many others. They are installed stealthily (bundled
with freeware) and hard to remove. The hijacked search re-
sults could easily be mistaken for a Google search results
page at ﬁrst glance, with upwards of ten ads and few, if any,
actual search results.
SearchNut is unique in that it combines the DNS NX be-
havior above with in-browser hijacking. If the domain does
not exist, the toolbar intercepts the NX (in the browser) and
redirects the browser to a page laden with ads.
Type 3: Default search hijacking. Viceroi ﬂagged traf-
ﬁc from some sites that present a popup, which if the user
clicks, sets the site as the default search engine for the user.
This includes Scour, Efacts, and ClickShield. These sites
also oﬀer to change the user’s homepage to their search en-
gines.
Remedy. Legitimate competition in web search is good.
However, these “search engines” appear to exist for the sole
purpose of showing ads and not for innovating in web search
(indeed some don’t even show organic results). Any action
a large search ad network might take against them would
likely be construed an act of stiﬂing competition. Adver-
tisers (the parties hurt most by having their ads be shown
for navigational and informational queries) are in a better
position to ﬁx the problem. One approach may be for ad-
vertisers to demand the ability to opt-out from having their
ads being shown by search hijackers.
6.4 Malware, Arbitrage, and Parked Domains
Lastly, Viceroi caught three additional classes of click-
spam driven by malware, arbitrage, and parked domains.
These three classes of click-spam were previously mentioned
in [4] where the authors used ad-hoc techniques to ﬁnd an ex-
ample of each. Viceroi not only detected these three classes
in a general manner, it ﬂagged traﬃc from at least three
separate instances of each of these three classes.
Malware.
It is well-known that some click-spammers
use infected hosts to click on ads on their site. These click-
spammers have a high ROI because botnets are practically
a commodity. The authors discuss the super stealthy TDL4
botnet in [4]. We ﬂagged traﬃc coming not only from a
TDL4 botnet, but also from a second botnet called ZeroAc-
cess. We infected a VM with a ZeroAccess malware binary
and found it to be far more aggressive than TDL4 in that
ZeroAccess performed many clicks a day as compared to
TDL4’s stealthy one-click-per-day. ZeroAccess very deliber-
ately striped its clicks across a large number of big and small
ad network, and across many publisher websites. We sus-
pect where TDL4 achieves stealthiness in the time domain,
ZeroAccess does the same by spreading the load. ZeroAc-
cess, which is newer than TDL4, apparently reuses many
TDL4 components [30].
Viceroi ﬂagged clicks from many of the publisher websites
that we noticed our ZeroAccess bot clicking on. This in-
cludes, as mentioned, AﬀectSearch and Reeturn which have
a 36.11% overlap in users (strongly suggesting that they use
the same botnet). Recall that Viceroi is based purely on ROI
distributions and is entirely oblivious to user overlap; this
overlap thus represents additional validation that Viceroi
is eﬀective. Other websites that Viceroi ﬂagged that have
high overlap with AﬀectSearch include BuscarLatam9 and
FreeSearchBuddy (78.87% and 40% overlap respectively).
Observe that botnets are becoming a commodity service
as we ﬁnd large “service providers” catering to a broad cus-
tomer base. This is bound to drive (bot) traﬃc acquisition
cost down still further, increasing click-spammer proﬁts. In
the next section we simulate some straw-man scenarios in-
volving massive botnets and whether our approach can still
catch them.
Arbitrage. Some click-spammers acquire (cheap) traf-
ﬁc by running ads for low popularity keywords on one ad
network, and then showing clicking users (more expensive)
ads from a diﬀerent ad network [4]. These click-spammers
manage a high ROI by buying low-cost traﬃc and selling
high-payout ads. Ad networks penalize publisher websites
that show too many ads on the landing page. This penalty
is manifested as a higher cost-per-click for the advertiser
9A Spanish language search engine that initially frustrated
our investigation attempts due to the language-barrier.
Figure 8: Arbitrage by starprices.co.uk. Original page has no
ads. User sees ads in prime screen real estate when coming in
from ads, along with attractive green buttons.
(in this case, higher traﬃc acquisition cost for the click-
spammer). The click-spammers get around this penalty
by cloaking their landing page — when the ad network’s
crawler or review teams visit the page the click-spammer
shows a page without ads, but when a user clicks their ads
the page now show (almost exclusively) just ads. Viceroi
ﬂagged clicks from the starprices.co.uk family of websites
(Figure 8), and savingcentral.co.uk family of websites, which
we conﬁrmed to be arbitrage.
Parked Domains. Lastly, parked domain hosting ser-
vices have high ROI because they have minimal traﬃc acqui-
sition costs — domains are registered by someone else before
they are parked with the provider, the domains receive traf-
ﬁc from users mis-typing (or clicking on links elsewhere on
the web to now-defunct domains), and the provider can serve
dynamically generated ad laden pages for an arbitrary num-
ber of domains from a single server. Viceroi ﬂagged clicks
coming from a large number of parked domains hosted on
Sedo (also called out by [4]), Skenzo, and Parked.com.
7. DISCUSSION
While Viceroi catches a diverse range of existing attacks,