root@digoal-> cd bin/    
root@digoal-> ll    
total 1.2M    
-rwxr-xr-x 1 root root 1.2M Sep 26 13:43 extundelete    
```    
查看数据文件所在的文件系统的块设备的inode信息。    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01    
./extundelete: unrecognized option '--ls'    
NOTICE: Extended attributes are not restored.    
Loading filesystem metadata ... 80 groups loaded.    
Group: 0    
Contents of inode 2:    
0000 | ed 41 00 00 00 10 00 00 6d 08 fa 55 bc 08 fa 55 | .A......m..U...U    
0010 | bc 08 fa 55 00 00 00 00 00 00 05 00 08 00 00 00 | ...U............    
0020 | 00 00 00 00 02 00 00 00 a1 22 00 00 00 00 00 00 | ........."......    
0030 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
0040 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
0050 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
0060 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
0070 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
0080 | 1c 00 00 00 88 90 cc 84 88 90 cc 84 00 00 00 00 | ................    
0090 | 6d 08 fa 55 00 00 00 00 00 00 00 00 00 00 00 00 | m..U............    
00a0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
00b0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
00c0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
00d0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
00e0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
00f0 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................    
Inode is Allocated    
File mode: 16877    
Low 16 bits of Owner Uid: 0    
Size in bytes: 4096    
Access time: 1442449517    
Creation time: 1442449596    
Modification time: 1442449596    
Deletion Time: 0    
Low 16 bits of Group Id: 0    
Links count: 5    
Blocks count: 8    
File flags: 0    
File version (for NFS): 0    
File ACL: 0    
Directory ACL: 0    
Fragment address: 0    
Direct blocks: 8865, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0    
Indirect block: 0    
Double indirect block: 0    
Triple indirect block: 0    
File name                                       | Inode number | Deleted status    
.                                                 2    
..                                                2    
lost+found                                        11    
pg_root_1921                                      131073    
pg_root_1922                                      393217    
```    
我们的数据文件在pg_root_1921目录下，对应的inode=131073，根据这个inode继续查询下一级目录的inode    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01 --inode 131073    
```    
找到了base的inode    
```    
base                                              131077    
```    
继续找，找到了unlogged table所在的database的inode    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01 --inode 131077    
151898        131078    
```    
继续找，找对应的_init文件，找到了它的前缀，根据前缀过滤    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01 --inode 131078|grep _init    
33822_init                                        131152    
```    
找到了被删除的文件    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01 --inode 131078|grep 33822    
./extundelete: unrecognized option '--ls'    
33822                                             131116         Deleted    
33822_fsm                                         131147         Deleted    
33822_init                                        131152    
```    
使用inode恢复，恢复删除的datafile    
```    
root@digoal-> ./extundelete --ls --inode 2 /dev/mapper/vgdata01-lv01 --restore-inode 131116    
```    
恢复后放在这里    
```    
root@digoal->  ll RECOVERED_FILES/     
total 40K    
-rw-r--r-- 1 root root 40K Sep 26 13:50 file.131116    
```    
将文件拷贝到原来的位置    
```    
root@digoal-> mount /data01    
root@digoal-> cp file.131116 /data01/pg_root_1921/base/151898/33822    
root@digoal-> chown -R postgres:postgres /data01/    
root@digoal-> su - postgres    
```    
启动数据库前，切记，删除_init后缀的文件，否则数据文件可能又会被清理掉。    
```    
cd $PGDATA    
postgres@digoal-> rm -f base/151898/33822_init     
```    
启动数据库，数据已经回来了。    
```    
postgres@digoal-> pg_ctl start    
postgres=# select count(*) from utbl1 ;    
 count     
-------    
  1000    
(1 row)    
```    
大家千万要切记，不要滥用unlogged table，除非你可以为你的行为负责。    
hash index也是这样，因为不写XLOG，所以如果你使用流复制来实施HA的话，在切换到备库后，如果走hash index scan，你会发现数据凭空"消失"，实际上是因为hash index的变更没有复制过去的原因。所以就不要使用hash index了吧。    
## 参考    
1\. http://sourceforge.net/projects/extundelete/files/extundelete/    
2\. http://blog.163.com/digoal@126/blog/static/16387704020142124032866/    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")