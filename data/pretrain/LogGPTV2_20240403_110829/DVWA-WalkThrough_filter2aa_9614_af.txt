```php
${target_file} succesfully uploaded!";
		}
		else {
			// No
			$html .= 'Your image was not uploaded.';
		}
		// Delete any temp files
		if( file_exists( $temp_file ) )
			unlink( $temp_file );
	}
	else {
		// Invalid file
		$html .= 'Your image was not uploaded. We can only accept JPEG or PNG images.';
	}
}
// Generate Anti-CSRF token
generateSessionToken();
?>
```
- **in_get(varname)**
    函数返回相应选项的值
- **imagecreatefromjpeg ( filename )**
    函数返回图片文件的图像标识,失败返回false
- **imagejpeg ( image , filename , quality)**
    从image图像以filename为文件名创建一个JPEG图像,可选参数quality,范围从 0(最差质量,文件更小)到 100(最佳质量,文件最大).
- **imagedestroy( img )**
    函数销毁图像资源
可以看到,Impossible 级别的代码对上传文件进行了重命名(为 md5 值,导致 %00 截断无法绕过过滤规则),加入 Anti-CSRF token 防护 CSRF 攻击,同时对文件的内容作了严格的检查,导致攻击者无法上传含有恶意脚本的文件.
---
## Insecure_CAPTCHA
Insecure CAPTCHA,意思是不安全的验证码,CAPTCHA 是 Completely Automated Public Turing Test to Tell Computers and Humans Apart (全自动区分计算机和人类的图灵测试)的简称.但个人觉得,这一模块的内容叫做不安全的验证流程更妥当些,因为这块主要是验证流程出现了逻辑漏洞,谷歌的验证码表示不背这个锅.
这一步服务器可以不需要翻墙,主要在于绕过验证码
去 https://www.google.com/recaptcha/admin/create 申请下 key,信息随便填
在`dvwa\config\config.inc.php`中加入如下API key
```
$_DVWA[ 'recaptcha_public_key' ]  = '你的公钥';
$_DVWA[ 'recaptcha_private_key' ] = '你的私钥';
```
**reCAPTCHA 验证流程**
这一模块的验证码使用的是 Google 提供 reCAPTCHA 服务,下图是验证的具体流程.
服务器通过调用 recaptcha_check_answer 函数检查用户输入的正确性.
recaptcha_check_answer($privkey,$remoteip, $challenge,$response)
数 $privkey 是服务器申请的 private key ,$remoteip 是用户的 ip,$challenge 是recaptcha_challenge_field 字段的值,来自前端页面 ,$response是 recaptcha_response_field 字段的值.函数返回 ReCaptchaResponse class 的实例,ReCaptchaResponse 类有2个属性 :
1. $is_valid 是布尔型的,表示校验是否有效,
2. $error 是返回的错误代码.
### Low
**服务器端核心代码**
```php
The CAPTCHA was incorrect. Please try again.";
		$hide_form = false;
		return;
	}
	else {
		// CAPTCHA was correct. Do both new passwords match?
		if( $pass_new == $pass_conf ) {
			// Show next stage for the user
			$html .= "
				You passed the CAPTCHA! Click the button to confirm your changes.
				";
		}
		else {
			// Both new passwords do not match.
			$html     .= "Both passwords must match.";
			$hide_form = false;
		}
	}
}
if( isset( $_POST[ 'Change' ] ) && ( $_POST[ 'step' ] == '2' ) ) {
	// Hide the CAPTCHA form
	$hide_form = true;
	// Get input
	$pass_new  = $_POST[ 'password_new' ];
	$pass_conf = $_POST[ 'password_conf' ];
	// Check to see if both password match
	if( $pass_new == $pass_conf ) {
		// They do!
		$pass_new = ((isset($GLOBALS["___mysqli_ston"]) && is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"],  $pass_new ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : ""));
		$pass_new = md5( $pass_new );
		// Update database
		$insert = "UPDATE `users` SET password = '$pass_new' WHERE user = '" . dvwaCurrentUser() . "';";
		$result = mysqli_query($GLOBALS["___mysqli_ston"],  $insert ) or die( '' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '' );
		// Feedback for the end user
		$html .= "Password Changed.";
	}
	else {
		// Issue with the passwords matching
		$html .= "Passwords did not match.";
		$hide_form = false;
	}
	((is_null($___mysqli_res = mysqli_close($GLOBALS["___mysqli_ston"]))) ? false : $___mysqli_res);
}
?>
```
可以看到,服务器将改密操作分成了两步,第一步检查用户输入的验证码,验证通过后,服务器返回表单,第二步客户端提交 post 请求,服务器完成更改密码的操作.但是,这其中存在明显的逻辑漏洞,服务器仅仅通过检查 Change、step 参数来判断用户是否已经输入了正确的验证码.
**通过构造参数绕过验证过程的第一步**
首先输入密码,点击 Change 按钮,抓包,更改 step 参数绕过验证码:
ps:因为没有翻墙,所以没能成功显示验证码,发送的请求包中也就没有 recaptcha_challenge_field、recaptcha_response_field 两个参数
**CSRF**
由于没有任何的防 CSRF 机制,我们可以轻易地构造攻击页面,页面代码如下
```
    /dvwa/vulnerabilities/captcha/">
```
当受害者访问这个页面时,攻击脚本会伪造改密请求发送给服务器.
美中不足的是,受害者会看到更改密码成功的界面(这是因为修改密码成功后,服务器会返回 302,实现自动跳转),从而意识到自己遭到了攻击
### Medium
**服务器端核心代码**
```php
The CAPTCHA was incorrect. Please try again.";
		$hide_form = false;
		return;
	}
	else {
		// CAPTCHA was correct. Do both new passwords match?
		if( $pass_new == $pass_conf ) {
			// Show next stage for the user
			$html .= "
				You passed the CAPTCHA! Click the button to confirm your changes.