# Windows内网协议学习Kerberos篇之TGSREQ& TGSREP
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
author: daiker@360RedTeam
## 0x00前言
这篇文章是kerberos篇的第二篇TGSREQ& TGSREP。在TGSREQ &
TGSREP阶段，用户通过AS_REP拿到的TGT票据，去向KDC申请特定服务的访问权限，KDC校验TGT票据，如果校验通过的话，会向用户发送一个TGS票据，之后用户再拿着TGS去访问特定的服务。这一阶段，微软引进了两个扩展S4U2SELF和S4U2PROXY。考虑到这两个扩展是TGS的子协议，把S4U归纳到这篇文章里面一起讲。
TGSREQ这个阶段不需要账号密码，需要ASREP获取到的TGT凭据。这里面工具需要指定域控的地址。连接配置里面的其他信息都在凭据里面，这里可以不用指定。
## 0x01 TGS_REQ
这里面标注的字段是跟ASREQ里面不一样的，在ASREQ文档有标注，一样的内容就不再标注了。
###  1\. msg-type
类型，TGSREQ对应的就是KRBTGS_REQ(0x0c)
###  2\. PA-DATA
正常的TGS_REQ的请求需要用到有
  * AP_REQ
这个是TGSREQ必须携带的部分，这部分会携带ASREP里面获取到的TGT票据，就放在这个结构体里面。
KDC校验TGT票据，如果票据正确，就返回TGS票据。
  * PAFORUSER
类型是S4U2SELF
值是一个唯一的标识符，该标识符指示用户的身份。该唯一标识符由用户名和域名组成。
S4U2proxy
必须扩展PAFORUSER结构，指定服务代表某个用户(图片里面是administrator)去请求针对服务自身的kerberos服务票据。
  * PAPACOPTIONS
类型是 PAPACOPTIONS
值是以下flag的组合
— Claims(0)
— Branch Aware(1)
— Forward to Full DC(2)
— Resource-based Constrained Delegation (3)
微软的[MS-SFU 2.2.5](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/aeecfd82-a5e4-474c-92ab-8df9022cf955)，
S4U2proxy 必须扩展PA-PAC-OPTIONS结构。
如果是基于资源的约束委派，就需要指定Resource-based Constrained Delegation位。
###  3\. REQ_BODY
  * sname
这个是要请求的服务，TGS_REP获得的ticket是用该服务用户的hash进行加密的。有个比较有意思的特性是，如果指定的服务是krbtgt，那么拿到的TGS票据是可以当做TGT票据用的。
  * AddtionTicket
附加票据，在S4U2proxy请求里面，既需要正常的TGT，也需要S4U2self阶段获取到的TGS，那么这个TGS就添加到AddtionTicket里面。
## 0x02 TGS_REP
###  1\. msg-type
ASREQ的响应body对应的就是KRBTGS_REQ(0x0d)
###  2\. ticket
这个ticket用于APREQ的认证。其中里面的encpart是加密的，用户不可读取里面的内容。在ASREQ请求里面是，是使用krbtgt的hash进行加密的，而在TGSREQ里面是使用要请求的服务的hash加密的。因此如果我们拥有服务的hash就可以自己制作一个ticket，既白银票据。详情见相关的安全问题>白银票据.正因为是使用要请求的服务的hash加密的，所以我们可以通过爆破enc_part获得该服务的hash,详情见相关的安全问题>kerberoasting。
###  3\. enc_part
注意，这个encpart不是ticket里面的encpart，
这部分是可以解密的，key是上一轮ASREP里面返回的sessionkey,也就是导入凭据里面的
sessionkey，解密后得到encryptionkey，encryptionkey这个结构里面最重要的字段也是sessionkey(但是这个sessionkey
不同于上一轮里面的sessionkey)，用来作为作为下阶段的认证密钥。
## 0x03 S4U2SELF
S4U2self 使得服务可以代表用户获得针对服务自身的kerberos服务票据。这使得服务可以获得用户的授权( 可转发
的用户TGS票据)，然后将其用于后期的认证(主要是后期的s4u2proxy)，这是为了在用户以不使用 Kerberos
的方式对服务进行身份验证的情况下使用。这里面很重要的一点是服务代表用户获得针对服务自身的kerberos票据这个过程，服务是不需要用户的凭据的
s4u2self的过程如下图所示
前提条件是服务已经有通过KDC验证的TGT，如图，需要有TGT。
在步骤1中, 服务(JACKSON-PC$)使用S4U2self扩展名代表用户(administrator)获得针对服务本身(JACKSON-PC$)的服务票证。该服务将填写[PAFORUSER](https://docs.microsoft.com/en-us/openspecs/windows_protocols/MS-SFU/aceb70de-40f0-4409-87fa-df00ca145f5a)
数据结构,类型为S4U2SELF，并将KRBTGSREQ消息发送到TGS。 如下图，由于服务JACKSON-PC$代表用户向服务本身(也是JACKSON-PC$)发起请求，因此这里面cname是JACKSON-PC$,sname也是JACKSON-PC$
假定TGS支持PAFORUSER扩展，则TGS在步骤2中通过KRBTGSREP消息返回用户的服务票证。如果服务请求了可转发选项，并且TGS的本地策略允许，则TGS检验通过后必须将票证标志
字段设置为可转发，既只要满足
(1) TGT是可以转发的
(2) 服务配置了约束委派
(3) 服务请求了可转发选项
则TGS必须将票证标志 字段设置为可转发
需要注意的是，如果用户的UserAccountControl字段中设置了USERNOTDELEGATED位,那么返回的TGS是永远也没法转发的。如图，当Administrator配置了敏感账户，不能被委派，返回的TGS的flag字段没有forwardable。
## 0x04 S4U2PROXY
s4u2proxy 使得服务1可以使用来自用户的授权(
在S4U2SELF阶段获得)，然后用该TGS(放在AddtionTicket里面)向KDC请求访问服务2的TGS，并且代表用户访问服务2，而且只能访问服务2。
s4u2proxy的过程如下图所示:
在步骤1中，服务1试图代表用户获取服务2的服务票证。服务1发送KRBTGSREQ消息，并将用户的服务1服务票证作为
请求中的AddtionTicket。只要满足以下条件
  1. 拥有来自用户的授权( 在S4U2SELF阶段获得的TGS票据)，放在AddtionTicket里面。
  2. 在请求的kdc-options中设置了CNAME-IN-ADDL-TKT标志。
  3. 服务请求了可转发选项
服务1 有到服务2的非约束委派，将服务2的SPN放在sname里面。
如果满足这些条件，则在步骤2中TGS会制作KRBTGSREP消息以返回服务票证。可转发标志将在服务票证中设置。
有个点需要注意的是，前面在S4U2SELF里面提到，在满足一定的条件之后，S4U2SELF返回的票据是可以转发的，这个票据作为S4U2PROXY的AddtionTicket，有些文章里面会说，S4U2PROXY要求AddtionTicket里面的票据一定要是可转发的，否则S4U2PROXY生成的票据是不可以转发的。这个说法在引入可资源约束委派的情况下，是不成立的，下面分情况具体说下。
**AddtionTicket里面的票据是可转发的**
如果AddtionTicket里面的票据是可转发的，只要KDC Options里面置forwarable位，那么返回的票据必须置为可转发的
**AddtionTicket里面的票据是不可转发的**
如果AddtionTicket中的服务票据未设置为可转发的，则KDC必须返回状态为STATUSNOMATCH的KRB-ERR-BADOPTION选项。除了一种情况之外，就是配置了服务1到服务2 的基于资源的约束委派，且PA-PAC-OPTION设置了Resource-Based
Constrained
Delegation标志位(这一例外的前提是S4U2SELF阶段模拟的用户没被设置为对委派敏感，对委派敏感的判断在S4U2SELF阶段，而不是S4U2PROXY阶段)。
AddtionTicket里面的票据是不可转发的
配置了服务1到服务2 的基于资源的约束委派
PA-PAC-OPTION设置了Resource-Based Constrained Delegation标志位
返回的TGS票据是可转发的
## 0x05 委派
在Windows 2000 Server首次发布Active
Directory时，Microsoft必须提供一种简单的机制来支持用户通过Kerberos向Web
Server进行身份验证并需要代表该用户更新后端数据库服务器上的记录的方案。这通常称为“ Kerberos双跳问题”，并且要求进行委派，以便Web
Server在修改数据库记录时模拟用户。需要注意的一点是接受委派的用户只能是服务账户或者计算机用户。