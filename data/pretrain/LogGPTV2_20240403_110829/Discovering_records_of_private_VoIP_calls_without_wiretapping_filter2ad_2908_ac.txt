of  valid  event  parameters  [9].)  The  events  are  sent  via  NOTIFY 
requests. Thus, the adversary simply sends NOTIFY requests with 
specific  event  identifiers  (e.g.  with  the  header  “Event:refer”)  to 
occupy the protocol buffer slots.  
4) UPDATE-ordinary request. The UPDATE method changes 
the  media  parameters  during  a  call.  The  UPDATE  method  is 
seldom  implemented,  and  thus  it  is  possible  that  unsupported 
UPDATE  requests  (and  other  unsupported  methods)  can  still 
occupy  the  SIP  protocol-buffer  slots  and  allow  busy-status 
detection.  
2.3  Call Correlation 
Busy-status detection can detect the busy status of a phone at a 
specific  time.  However,  depending  on  the  phone  type,  the  busy-
status detection can determine whether the  phone is busy either 1) 
at any time during the call, or 2) only at the beginning and/or the 
end of the call.  
Hence, we define three tests for correlating busy status to infer 
a  call.  When  both  of  the  two  targeted  phones  belong  to  the  first 
type,  we  use  the  continuity  test:  the  busy  period  of  one  phone 
(from time i to time j) should be close to the busy status of another 
phone  (from  time  x  to  y)  such  that  |x-i|+|y-j|<ε,  where  ε  is  a 
constant  indicating  the  upper-bound  of  measurement  error. 
Otherwise,  we use the weak or strong tests. The weak test is that 
the two phones are busy at the beginning or at the end of the call 
such  that  |x-i|<ε  or  |y-j|<ε.  The  strong  test  is  that  two  targeted 
05101520456789101112nth responseresponse time (ms)tag=dc04b3268dd3f7d3tag=68e38cf396b94e79tag=1af5035556df94b5tag=00b116c5e211ec71tag=f14b2922080204d8tag=b258d89e43744e64tag=6d53b875ca23e523tag=1b531273c9395323tag=d4955be4f47f6155tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=F4C9F4D5-F3666964tag=6aa595b50d6abe75tag=4b42559a54e22fd2tag=f7e281fc43de7dbetag=13feb42edbc5c5f7tag=94bce8ee64c20e56tag=b8a721b6e195ef75tag=8f922bb2fff8a6d80123456780200400600nth responserespons time (ms)Cisco 7940G (Not Busy)  420 Bad Extension486 Busy Here0123456780200400600nth responserespons time (ms)Cisco 7940G (Busy)  420 Bad Extension486 Busy HereDifferent responseDifferent response051015202530050100nth responserespons time (ms)Linksys PAP2 (Not Busy)  420 Bad Extension051015202530050100nth responserespons time (ms)Linksys PAP2 (Busy)  420 Bad Extension33th responseNo 33th responsephones are both busy at the beginning and the end of the call such 
that |x-i|<ε and |y-j|<ε. 
3.  THE ATTACK EXPERIMENTS 
We set up a simple VoIP network including  three (hardware) 
SIP  phones  to  perform  the  busy-status  detection  and  call-
correlation  steps.  For  busy-status  detection,  we  show  how  the 
phones  respond  to  the  probe  requests.  For  call  correlations,  we 
derive the detection rate. 
3.1  Environment 
We  implemented  a  program  named  Voice  Pulser  to  perform 
busy-status  detection.  Since  the  proposed  attack  does  not  require 
eavesdropping, we experimented on an ordinary LAN [14]. Voice 
Pulser  sent  attack  messages  to  the  three  phones,  which  were  a 
Linksys  PAP2,  a  Cisco  7940G,  and  a  Grandstream  BT-100.  The 
PAP2 is a consumer-level product which was bundled by Vonage, 
a  major  VoIP  service  provider.  The  7490G  is  a  medium-level 
product  that  provides  business  phone  features.  Although  Linksys 
is a division of Cisco, the PAP2 and 7940G use different protocol 
stacks  and  operating  systems.  The  Grandstream  BT-100  is  an 
entry-level  VoIP  phone.  Communication  between  the  testing 
phones was relayed by a SIP proxy server. 
3.2  Busy-status Detection  
3.2.1  Attacks based on INVITE 
We  examined  the  phone  responses  under  INVITE-require 
(PAP2  and 7940G)  and  INVITE-SDP  (BT-100)  attacks  with  two 
conditions, namely  1)  when  the phone  did not  receive  or  make  a 
call  (Not  Busy),  and  2)  when  the  phone  made  or  received  a  call 
and was still active on the line (Busy). Voice Pulser sent 33 and 7 
attack  SIP  messages  to  the  PAP2  and  7940G,  respectively, 
according their protocol buffer sizes. We sent 23 attack SIP attack 
messages to the BT-100. Figure 8 shows how the PAP2 received 
all  33  responses  when  it  was  not  busy  and  missed  the  33rd 
response  when  it  was  busy.  Figure  7  shows  how  the  7940G 
responded with an error ‘486 Busy Here’ when the protocol buffer 
was full. Figure 9 shows the BT-100 response, which was slightly 
different.  In the middle of the 23 probes, we made a call from the 
BT-100. According to RFC 3261, a SIP phone should add a tag to 
the  To  field  when  responding 
to  a  request.  E.g.,  “To: 
PI:EMAIL” 
becomes 
“To:PI:EMAIL;tag=aa69981” in the response. The tag must be 
cryptographically  random  and  globally  unique  (i.e.,  a  nonce). 
When  the  BT-100  was  not  busy,  the  To  tag  was  a  nonce 
consisting  of  digits  and  letters.  However,  when  the  BT-100  was 
busy, the To tag was fixed.  
request 
in 
a 
Based  on  the  above  observations,  the  adversary  is  able  to 
determine the busy status of the PAP2 by finding out whether the 
33rd  response  is  received,  while  the  busy  status  of  the  7940G  is 
shown when the 6th response is a “486 Busy Here”, and the busy 
status  of  the  BT-100  is  found  by  checking  whether  two 
consecutive responses have the same value for the To tag.  
3.2.2  Attacks 
We  evaluated  all  types  of  attack  messages  listed  in  previous 
section  and  show  the  results  in  Table  1  and  Table  2.  Table  1 
indicates whether the busy-status detection  was successful. Table 
2  provides  details  for  the  phones  responses  to  the  probe  requests 
and how the busy status can be identified. 
The  PAP2  phone  had  different  responses  to  different  request 
probes.  It  responded  with  “200  OK”  to  OPTIONS-ordinary, 
NOTIFY-refer  and  NOTIFY-check-sync  attacks.  Even  though 
Type 
S1 
S2 
S3 
S4 
S5 
S6 
F1 
F2 
F3 
Table 1. Phones against the attacks 
Linksys PAP2  
Cisco 7940G  
Fail(F2) 
Success(S4) * 
Success(S5) * 
Fail(F1) 
Success(S1) 
Success(S1) 
Success(S2)  
OPTIONS-
ordinary 
INVITE-
require 
INVITE-
SDP 
NOTIFY-
refer 
NOTIFY-
check-sync 
UPDATE-
ordinary 
*: Disabled period shortening is supported 
#: No disabled period 
Success(S1) 
Success(S3) 
Fail(F3) 
Fail(F2) 
Fail(F2) 
Grandstream 
BT-100 
Fail(F2) 
Fail(F1) 
Success(S6)# 
Fail(F3) 
Fail(F3) 
Fail(F3) 
Table 2. Explanation of Table 1 
How the SIP phone responds 
“200 OK” response for first h requests 
No response for other requests  
h=32 if not busy; h=31 if busy 
“420 Bad Extension” response for first h requests 
No response for other requests  
h=33 if not busy;  h=32 if busy 
“501 Not Implemented” response for first h requests 
No response for other requests  
h=32 if not busy; h=31 if busy 
 “420 Bad Extension” response for first h requests 
“486 Busy here” response for other requests 
h=6 if not busy; h=5 if busy 
 “500 Internal Server Error” response for first h requests 
 “486 Busy here” response for other requests 
h=6 if not busy; h=5 if busy 
The To tag in the response is a nonce if not busy;  
The To tag in the response is a fixed value if busy 
h=1; no disabled period 
When  the  phone  is  busy  as  the  caller,  To  tag  consists  of 
digits and upper-case letters; 
When  the  phone  is  busy  as  the  callee,  To  tag  consists  of 
digits and lower-case letters. 
The phone rings 
 “200 OK” response for all requests 
 Other responses (415, 401, 501, etc.) 
refer  and  check-sync  events  are  not  supported  by  PAP2,  for 
NOTIFY-refer  and  NOTIFY-check-sync,  it  responded  “200  OK” 
as well. For the INVITE-require probe, PAP2 rejected the request 
with  message  “420  Bad  Extension”  because  the  requested 
extension  “xx”  is  not  supported.  Since  the  UPDATE  method  is 
not  supported  by  the  PAP2,  for  UPDATE-ordinary,  it  responded 
with  “501  Not  Implemented.”  It  is  noteworthy  that  the  protocol 
buffer size N of PAP2 has a different value (N=33 instead of 32) 
in  the  INVITE-require  request  probe.  This  due  to  the  fact  that 
INVITE  and  non-INVITE 
transactions  use  different  state 
machines.  
The  7940G  phone  allows  busy-status  detection  for  only 
INVITE-based  attack  messages.  We  believe  that  the designers  of 
the  7940G  tried  to  avoid  any  unnecessary  resource  usage  so  that 
all requests, except those of the INVITE method, avoid filling the 
protocol  buffer. 
resource-
management design enables disabled-period shortening.  
conservative 
Ironically, 
their 
Table 3. Timing behavior of busy-status detection 
LinkSys  
PAP2 
Cisco  
7940G 
Grand-
stream  
BT-100 
3s 
Probing 
34s 
2s 
delay 
under 
Minimum 
Interval  
Ring 
attack* (mean/stddev) 
Regular 
(mean/stddev) 
*:17 samples 
#:  The  phone  rings  immediately  such  that  the  investigator  cannot 
differentiate the ring delay between different tests 
12.3s/ 
0.47s 
12.4s/ 
0.50s 
4.8s/ 
6.3s 
1.41s/ 
0.51s 
ring  delay* 
0.1s/# 
0.1s/# 
Figure  10.  A  call  correlation  experiment:  7940G  calls  PAP2  
at  360sec  and  terminates  at  700sec  (7940G  as  call  setup 
initiator and call termination initiator) 
The  BT-100  phone  is  only  vulnerable  to  INVITE-SDP.  In 
contrast  with  the  other  phones,  the  adversary  can  easily  identity 
whether  a  BT-100  phone  is  the  caller  or  callee.  The  To  tag 
consists  of  upper-case  letters  characters  when  the  phone  is  the 
caller; the To tag consists of lower-case letters when the phone is 
the  callee.  Another  difference  is  that  the  BT-100  phone  does  not 
have  a  disabled  period:  attack  messages  do  not  occupy  the 
protocol buffer slots yet the busy status is still revealed.  
3.2.3  Response-Time Behavior 
It  is  also  important  to  know  how  often  the  busy-status 
detection  can  be  performed.  We  used  several  different  probing 
intervals and found the minimum values as shown in Table 3. The 
adversary  can  probe  the  PAP2 phone  with  a 34  seconds  interval, 
the  7940G  phone  with  a  2  seconds  interval  (when  the  disabled 
period  is  shortened),  the  BT-100  with  a  3  seconds  interval    (no 
disabled period).  
The  disabled  period  also  affects  the  ring  delay,  which  is  the 
time between the call setup and ring. Table 3 also shows the ring 
delay. While the PAP2 phone has a longer ring delay under attack, 
the  7940G  and  the  BT-100  have  no  significant  ring  delay  under 
this  attack.  For  all  three  phones,  the  ring  delay  is  essentially 
negligible for end-users unless they analyze the network traffic or 
phone logs.  
3.3  Call Correlation 
1.  Use Voice Pulser to probe the PAP2 and the 7940G 
(or BT-100) concurrently for their busy status with a 
34 second interval.  
2.  Use one of the phones to call the other. 