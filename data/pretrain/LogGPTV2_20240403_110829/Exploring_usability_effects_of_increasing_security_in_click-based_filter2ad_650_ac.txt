### J-Statistics for Click-Point Distributions

**Figure 5: J-Statistics for Distributions of 5, 6, or 7 Click-Points**
- **Description**: This figure shows the J-statistics for distributions of 5, 6, or 7 click-points. The data from the larger image (800 × 600) is scaled to allow for aggregation with the smaller image (451 × 331).
- **Data Points**: Each point on the lines represents the J-statistic for a specific image, with different lines indicating the number of click-points used (5, 6, or 7). The connecting lines are included for readability.

**Figure 6: J-Statistic for Small and Large Images**
- **Description**: This figure presents the J-statistic for distributions of small (451 × 331) and large (800 × 600) images. The data from the larger images is scaled to generate comparable J-statistics.
- **Data Points**: The J-statistic is calculated for each image size, allowing for a comparison of clustering patterns between the two image sizes.

### Click-Point Clustering in PCCP Passwords

During the PCCP password creation process, users had the option to press the shuffle button if they were unable or unwilling to select a click-point within the highlighted viewport. We hypothesized that fewer shuffles would result in more randomly distributed passwords, thereby enhancing security. However, our study revealed significant variability in the number of shuffles, with no clear pattern emerging. The median number of shuffles per password was less than five, suggesting that most participants used the shuffle button less than once per image, even though passwords consisted of 5 to 7 images.

**Randomness and Memorability**
- **Objective**: Passwords should be as random as possible while remaining memorable.
- **Hotspots**: Clustering of click-points on an image across multiple users creates hotspots, which can be exploited by attackers to launch dictionary guessing attacks. PCCP aims to minimize hotspots through the use of a randomly positioned viewport, but users may still shuffle the viewport to find a memorable location.

**Analysis Methodology**
- **Point Pattern Analysis**: To analyze the randomness and clustering of the two-dimensional spatial data, we employed point pattern analysis, a technique commonly used in biology and earth sciences.
- **Spatstat Package**: Our analysis utilized the spatstat package [2], a spatial statistics tool for the R programming language.

**J-Statistic for Clustering**
- **Definition**: The J-statistic [28] measures the clustering of click-points. It combines nearest-neighbor calculations and empty-space measures for a given radius \( r \).
- **Interpretation**:
  - \( J(r) = 0 \): All points cluster at the same location.
  - \( J(r) = 1 \): Points are randomly dispersed.
  - \( J(r) > 1 \): Points are uniformly distributed.
- **Desired Outcome**: For optimal security, we aim for \( J(r) \) values closer to 1, as this indicates the least predictable distribution for attackers.
- **Radius Selection**: We chose a radius of 9, which approximates the size of the 19 × 19 tolerance squares used during password re-entry.

**Results and Discussion**
- **Figure 5**: This figure illustrates the clustering levels for 30 images, with image names on the x-axis. The J-statistic for each image is distinct, and the connecting lines are included for readability. Data from both small and large images are grouped based on the number of click-points per password (5, 6, or 7).

By analyzing the J-statistics, we can better understand the clustering behavior of click-points and make informed decisions to enhance the security and memorability of PCCP passwords.