最近在做一些apk的安全检测，对AndroidManifest.xml文件进行了研究和探讨，介绍AndroidManifest.xml文件的作用和架构，并研究了AndroidManifest.xml配置文件存在的一些漏洞，在进行安全检测时，可以对症下药。
## **0X00 AndroidManifest.xml文件作用**
​
AndroidManifest.xml文件的作用非常重要，应该说是缺一不可。在android官方介绍文档中（
System，这些信息就存在AndroidManifest中。AndroidManifest.xml 存放在 app/src/main/
目录下。在反编译APK文件后，其文件是以乱码格式存在，需要进行转换才能正常查看。
## **0X01主要功能**
  1. 命名应用程序Java包，软件包名称作为应用程序的唯一标识符
  2. 描述了应用程序的组件，其中包括构成应用程序的活动，服务，广播接收器和内容提供者；它还命名实现每个组件并发布其功能的类，例如Intent可以处理的消息。这些声明通知Android系统的组件及其可以启动的条件。
  3. 决定哪些processes主持application
  4. 宣告这个App有哪些权限，它声明应用程序必须拥有的权限才能访问API的受保护部分并与其他应用程序交互。它还声明其他人为了与应用程序的组件交互而需要的权限
  5. 它列出了Instrumentation在应用程序运行时提供概要分析和其他信息的类。这些声明仅在应用程序正在开发中才会存在，并在应用程序发布之前被删除。
  6. 它声明了应用程序需要的最低级别的Android API。
  7. 它列出了应用程序必须链接的库。
## 0X02 Manifest架构
允许的元素，蓝字是预设常见的元素，其中的与是必要且只能出现一次。每个元素有各自的属性，属性数量不一定，每个属性有其默认值，可视需求进行设定。
1.预设的AndroidManifest.xml
      供使用者看的版本号
    ​     目标版本，若没设定预设为最低minSdkVersion
    ​     App风格
    ​         APP开启后，显示在画面上方的名称
    ​             activity操作方式
    ​                 .MAIN表示activity是APP进入点
    ​                 显示在应用程序行表
    ​            
    ​        
    ​    
2.标准的AndroidManifest.xml文件样例。
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​      
    ​            
    ​      
    ​                
    ​          
    ​          
    ​              
    ​                  
    ​                  
    ​                  
    ​              
    ​              
    ​                    
    ​          
    ​             . . .   
    ​              
    ​          
    ​             
    ​          
    ​             . . .   
    ​              
    ​          
    ​          
    ​          
    ​             . . .   
    ​              
    ​                    
    ​          
    ​          
    ​              
    ​              
    ​                    
    ​          
    ​            
    ​      
## **0x03 文件约定及语法**
​
从上面的代码中，我们可以看出Android配置文件采用XML作为描述语言，每个XML标签都不同的含义，大部分的配置参数都放在标签的属性中，下面我们便按照以上配置文件样例中的先后顺序来学习Android配置文件中主要元素与标签的用法。
1.元素（Elements）
在所有的元素中只有和是必需的，它们各自必须存在，且只能出现一次。如果一个元素包含有其他子元素，必须通过子元素的属性来设置其值。处于同一层次的元素，这些元素的说明是没有顺序的。例如，和元素可以以任何顺序混合。这个规则有两个关键的例外：
1、一个 元素必须遵循 它是一个别名。
2、 元素必须是里面的最后一个元素 
的元素。换句话说结束标签必须在结束标签之前立即出现。
2.属性
​
正常来讲，所有的属性都是可选的，但是有些属性是必须设置的。以便元素可以实现其目的，除了根元素的属性之外，所有其他元素属性的名字都是以android:前缀的；
定义类名：所有的元素名都对应其在SDK中的类名，如果你自己定义类名，必须包含类的数据包名，如果类与application处于同一数据包中，可以直接简写为“.”；
3.声明类名
许多元素对应于Java对象，包括应用程序本身（元素）的元素及其主要组件：活动（），服务），广播接收器（）和内容提供者（））。
如果你定义一个子类，如同你总是会为组件类（Activity，Service，
BroadcastReceiver和ContentProvider）子类是通过name属性来声明，该名称必须包括完整的包装名称。例如，一个Service子类可能被声明如下：
    ​    
    ​        
    ​            . . .
    ​        
    ​        . . .
    ​    
4.多个值
如果某个元素有超过一个数值，这个元素必须通过重复的方式来说明其某个属性具有多个数值项，且不能将多个数值项一次性说明在一个属性中；例如一个intent-filter 可以保护多个action：
    ​    
    ​    
    ​    
    ​    . . .
5.资源值
​ 某些属性具有可显示给用户的值，例如一个活动的标签和图标。这些属性的值应该从资源或主题进行本地化和设置。资源值以下列格式表示：
@[package:]type/name
如果资源与应用程序在同一个软件包中，则可以省略软件包名称。该类型是一种资源，例如字符串或可画的对象，名称是特定资源的标识名称。例如：
主题的值使用类似地表达，但以初始值“? ”代替“@”：
?[package:]type/name
注意：资源或主题包的值必须是“android”或应用程序包的名称。
6.字符串值
在属性值为字符串的地方，必须使用双反斜杠（\）来转义字符，例如\n换行符或\uxxxx 表示Unicode字符。
7.意图过滤器
应用程序的核心组件，如活动，服务和广播接收器由意图（Intent）激活。意图是Intent描述所需动作的一组信息（对象），包括要执行的数据，应该执行该操作的组件的类别以及其他相关指令。Android系统找到一个可以响应意图的适当组件，如果需要，则启动组件的新实例，并将其传递给
Intent对象。
组件通过意图过滤器通知他们可以响应的意图类型。由于Android系统必须了解组件在启动组件之前可以处理的意图，因此在清单中将intent过滤器指定为