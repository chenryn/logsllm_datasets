### Redundant Data and Error Rate Inference
While inferring error rates is sufficient for studying aggregate distributions, we will defer error localization to future work.

### 6. Experimental Setup
We experimentally characterize 232 LPDDR4 [44] DRAM devices with on-die ECC from a single major DRAM manufacturer, which we cannot disclose due to confidentiality. For comparison, we test 82 LPDDR4 DRAM devices from the previous technology generation without on-die ECC, sourced from three major DRAM manufacturers. Since DRAM manufacturers do not provide non-ECC counterparts for devices with on-die ECC or a mechanism to disable on-die ECC, the older-generation devices serve as our closest point of comparison.

All testing is conducted using a custom-built infrastructure that offers precise control over DRAM timing parameters, bus commands, and bus addresses. Our setup maintains an ambient temperature within ±1°C, ranging from 40°C to 70°C. To enhance local temperature stability during testing, each DRAM device is kept at 15°C above the ambient temperature, providing an effective testing range of 55°C to 70°C.

### 7. Experimentally Inferring On-Die ECC and Pre-Correction Error Rates Using EIN
In this section, we apply EIN to infer the on-die ECC scheme and pre-correction error rates of real devices with on-die ECC. Before doing so, we validate our uniform-random statistical model for pre-correction errors and determine the layout of true-/anti-cells to accurately model the pre-correction error distribution of the tested devices.

#### 7.1. Validating Uniform-Random Retention Errors
Our model for data-retention errors (Section 4.3) treats errors as independent, uniformly distributed events, based on observations from several prior works [5, 30, 57, 80, 112, 124]. For such errors, the total number of errors \(X\) in each fixed-length \(n\)-bit region of DRAM follows a binomial distribution [5, 98, 124] parameterized by the Raw Bit Error Rate (RBER) \(R\):

\[ P[X = x | R] = \binom{n}{x} R^x (1 - R)^{n-x} \]

To validate the independent, uniform-random data-retention error model for the devices we test, we compare experimentally measured error distributions to the expected distributions. Figure 5 shows both the expected and experimental probabilities of observing an \(X\)-bit error in a single 256-bit word throughout DRAM at fixed operating conditions of \(t_{REFW} = 20s\) and 60°C for a representative DRAM device without on-die ECC.

**Figure 5:**
Expected and experimental probabilities of observing an \(X\)-bit error in a 256-bit word for a representative DRAM device without on-die ECC at \(t_{REFW} = 20s\) and 60°C.

The experimental data closely matches the binomial distribution, diverging only at extreme error counts with few experimental samples. This validates the use of a uniform-random distribution for modeling retention errors in devices without on-die ECC. We repeat this experiment across all devices without on-die ECC for various word sizes, refresh windows, and temperatures, and find that the uniform-random model holds across all experiments.

#### 7.2. Determining the True-/Anti-Cell Layout
To ensure accurate modeling of the pre-correction error distribution in simulation, we reverse-engineer the true-/anti-cell layout in devices with on-die ECC. We do this by studying the locations of data-retention errors after disabling refresh for an extended period (e.g., >30 minutes), causing most cells to leak to their discharged state. Figure 6 illustrates the resulting pattern, showing how individual rows are entirely composed of true- or anti-cells, with contiguous groups of either 824 or 400 rows alternating throughout a bank. In simulation, we model each DRAM burst to be entirely composed of either true- or anti-cells with a 50% probability, accurately representing an arbitrary burst from the entire memory address space.

**Figure 6:**
A DRAM bank comprises groups of 824 or 400 rows with alternating true- and anti-cells per group.

Despite the observed true-/anti-cell pattern, a small number of uniquely randomly-distributed rows in each bank do not follow the pattern shown in Figure 6. Instead, these rows alternate true- and anti-cells every byte and are often found in clusters of two or more. A histogram of the number of such outlier rows per bank across all 232 devices with on-die ECC is shown in Figure 7, alongside a best-fit negative-binomial distribution curve. Both the shape of the frequency distribution and the observed clustering are consistent with post-manufacturing repair row remapping techniques [38]. Since these rows have a different true- and anti-cell composition, they add unwanted noise to our reverse-engineering analysis. To avoid unnecessary complexity, we exclude these rows from our experimental analysis.

**Figure 7:**
Histogram of the number of rows with outlier true-/anti-cell layouts per bank across all banks of all DRAM devices with on-die ECC (NB: negative-binomial).

#### 7.3. Applying EIN to DRAM with On-Die ECC
We demonstrate the application of EIN to DRAM devices with on-die ECC using the experimental configuration shown in Table 1. The error distribution from a single experiment provides the Probability Mass Function (PMF) given by Equation 3, forming the observations \(O\) in the overall optimization problem (Equation 9).

**Table 1:**
Experimental and simulation setup for reverse-engineering the ECC scheme used in the tested devices.

| Model Parameter | Experiment | Simulation |
|-----------------|------------|------------|
| Word Size       | 256-bits   | 256-bits   |
| True-/Anti-Cell Layout | 50%/50% at word-granularity | 50%/50% at word-granularity |
| Data Pattern    | RANDOM and 0xFF | RANDOM and 0xFF |
| Outlier Rows    | Ignored    | Skipped    |
| Temperature     | 70°C       | Encompassed in the RBER |
| tREFW           | 5 minutes  | Encompassed in the RBER |

Using a representative device, we perform a single experiment at the conditions shown in Table 1, measuring a post-correction BER of 0.041578. Configuring EINSim with the parameters listed under "Simulation" in Table 1, we evaluate the full optimization problem of Equation 9 using the grid-search approach described in Section 5.4.

**Figure 8:**
Negative log-likelihoods of the eight highest-likelihood ECC schemes for each of the 0xFF and RANDOM data patterns. Models are sorted in order of increasing likelihood (i.e., decreasing negative log-likelihood) from left to right for each data pattern. Bars show black confidence intervals spanning the min/max values when bootstrapping the observed data 105 times (described in Section 5.5). The confidence intervals are tight enough to appear as a single line atop each bar. Note that the 0xFF models have low likelihoods (i.e., higher bars), which aligns with the fact that our experimental data is obtained using a RANDOM data pattern.

**Figure 8:**
Negative log-likelihoods of the eight highest-likelihood ECC schemes for each of the 0xFF and RANDOM data patterns.