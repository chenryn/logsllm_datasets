less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar (deleted)
$ cat /proc/4775/fd/4 >bar
$ ls -li bar
2228302 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:05 bar
$ cat bar
foo
9.8.11 查找所有硬链接
有硬链接的文件，能够使用”ls -li”确认。
Debian参考手册 168/233
$ ls -li
total 0
2738405 -rw-r--r-- 1 root root 0 2008-09-15 20:21 bar
2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 baz
2738404 -rw-r--r-- 2 root root 0 2008-09-15 20:21 foo
”baz”和”foo”的链接数为”2”(>1)，表示他们有硬链接。它们的inode号都是”2738404”.这表示它们是同样的硬链接
文件。如果你不想偶然碰巧发现硬链接文件，你可以通过inode号来查找它。比如说,按下面的方式查找”2738404”。
# find /path/to/mount/point -xdev -inum 2738404
9.8.12 不可见磁盘空间消耗
所有打开的文件被删除后，仍然消耗磁盘空间，尽管他们不能够被普通的du(1)所看见。这些被删除的文件和他们的
大小，可以通过下面的方式列出。
# lsof -s -X / |grep deleted
9.9 数据加密提示
在可以物理访问您的PC的情况下，任何人都可以轻易获得root权限，访问您的PC上的所有文件(见第 4.6.4 节)。这
意味着登录密码系统在您的PC被偷盗时并不能保证您私人和敏感数据的安全。您必须部署数据加密技术来实现。尽
管GNU隐私守护(见第 10.3 节)可以对文件进行加密，但它需要一些用户端的工作。
Dm-crypt通过原生的Linux内核模块，使用device-mapper，用很少的用户操作实现本地自动数据加密。
软件包 流行度 大小 说明
cryptsetup V:27,I:79 409 可用于加密的块设备的实用程序（dm-crypt/3LUKS）
可用于加密的块设备着重于正常用户挂载/卸载的实用程序
cryptmount V:2,I:3 231
（dm-crypt/LUKS）
fscrypt V:0,I:1 4596 Linux文件系统加密工具(fscrypt)
libpam-fscrypt V:0,I:0 4181 Linux文件系统加密PAM模块(fscrypt)
Table9.25: 数据加密工具列表
小心
数据加密会消耗CPU时间等资源，如果它的密码丢失，加密的数据会变成无法访问。请权衡其利弊。
注意
通过 debian-installer (lenny 或更新版)，整个 Debian 系统能够被安装到一个加密的磁盘上，使用 dm-crypt/LUKS
和initramfs.
提示
请参阅第 10.3 节用户空间加密实用程序：GNUPrivacyGuard。
Debian参考手册 169/233
9.9.1 使用 dm-crypt/LUKS 加密移动磁盘
您可以用dm-crypt/LUKS加密大容量可移动设备上数据，例如挂载在“/dev/sdx”上的USB记忆棒。你只需按如下
步骤简单地把它格式化。
# fdisk /dev/sdx
... ”n” ”p” ”1” ”return” ”return” ”w”
# cryptsetup luksFormat /dev/sdx1
...
# cryptsetup open /dev/sdx1 secret
...
# ls -l /dev/mapper/
total 0
crw-rw---- 1 root root 10, 60 2021-10-04 18:44 control
lrwxrwxrwx 1 root root 7 2021-10-04 23:55 secret -> ../dm-0
# mkfs.vfat /dev/mapper/secret
...
# cryptsetup close secret
然后，它就可以正常的在现代桌面环境下使用udisks2软件包，挂载到”/media/username/disk_label”，只不
过它会要求输入密码(参见第 10.1.7 节)。不同的是写入的数据都是加密的。密码条目可以自动使用钥匙环（参见第
10.3.6 节）。
你可以把它格式化成其他格式的文件系统，例如用”mkfs.ext4 /dev/mapper/sdx1”把它格式化为ext4。如果使
用btrfs，则需要安装udisks2-btrfs软件包。对于这些文件系统，可能需要配置文件的所有者和权限。
9.9.2 使用 dm-crypt/LUKS 挂载加密的磁盘
举个列子，用dm-crypt/LUKS在”/dev/sdc5”上创建的加密磁盘可以用如下步骤挂载到”/mnt”：
$ sudo cryptsetup open /dev/sdc5 ninja --type luks
Enter passphrase for /dev/sdc5: ****
$ sudo lvm
lvm> lvscan
inactive ’/dev/ninja-vg/root’ [13.52 GiB] inherit
inactive ’/dev/ninja-vg/swap_1’ [640.00 MiB] inherit
ACTIVE ’/dev/goofy/root’ [180.00 GiB] inherit
ACTIVE ’/dev/goofy/swap’ [9.70 GiB] inherit
lvm> lvchange -a y /dev/ninja-vg/root
lvm> exit
Exiting.
$ sudo mount /dev/ninja-vg/root /mnt
9.10 内核
对于支持的架构，Debian使用软件包来分发模块化的Linux内核.
如果你正在阅读本文档，你可能不需要亲自编译内核。
9.10.1 内核参数
许多Linux特性可以按下面的方式，通过内核参数来配置。
• 内核参数通过bootloader初始化(参见第 3.1.2 节)
• 对通过sysfs访问的内核参数，在运行时通过sysctl(8)修改(参见第 1.2.12 节)
Debian参考手册 170/233
• 当一个模块被激活时，通过modprobe(8)参数来设置模块参数。(参见第 9.7.3 节)
细节参见”TheLinuxkerneluser’sandadministrator’sguide»Thekernel’scommand-lineparameters”。
9.10.2 内核头文件
大部分普通程序编译时不需要内核头文件，如果你直接使用它们来编译，甚至会导致编译中断。在 Debian 系
统上，普通程序编译依赖 libc6-dev 软件包 (由 glibc 源代码包创建) 提供的，在”/usr/include/linux”
和”/usr/include/asm”里的头文件。
注意
对于编译一些内核相关的程序，比如说从外部源代码编译的内核模块和 automounter 后台守护（daemon）程序
(amd),你必须包含相应的内核头文件到路径里，比如”-I/usr/src/linux-particular-version/include/”,
到你的命令行。
9.10.3 编译内核和相关模块
Debian有它自己的方式来编译内核和相关模块。
软件包 流行度 大小 说明
build-essential
I:481 17 创建Debian软件包所必须的软件包: make,gcc,…
bzip2 V:169,I:970 121 bz2文件压缩和解压缩工具
libncurses5-dev
I:73 6 ncurses开发者库和文档
git V:345,I:542 46734 git：Linux内核使用的分布式版本控制系统
fakeroot V:30,I:489 224 为非root用户创建软件包提供一个伪造的root环境
initramfs-tools
V:382,I:988 113 创建initramfs的工具（Debian规范）
dkms V:56,I:163 190 动态内核模块支持dynamickernelmodulesupport(DKMS)(通用)
module-assistant
V:1,I:20 406 制作模块软件包的帮助工具（Debian规范）
devscripts V:6,I:41 2658 Debian软件包维护者的帮助脚本（Debian规范）
Table9.26: Debian系统内核编译需要安装的主要软件包列表
如果你在第 3.1.2 节使用initrd,请一定阅读initramfs-tools(8),update-initramfs(8),mkinitramfs(8)
和 initramfs.conf(5)里的相关信息。
警告
在编译Linux内核源代码时，请不要放置从”/usr/include/linux”和”/usr/include/asm”到源代码树
(比如：”/usr/src/linux*”)里目录的符号链接。(一些过期的文档建议这样做.)
注意
当在 Debian stable 版里编译最新的 Linux 内核时, 可能需要使用一些从 Debian unstable 版里向后移植
（backported）的工具的最新版本。
module-assistant(8)(或者它的短形式m-a)帮助用户，从一个或多个定制的内核，容易的构建和安装模块软件
包。
dynamickernelmodulesupport(DKMS)动态内核模块支持是一个新的分布式独立框架，被设计用来允许单个的内
核模块在不改变整个内核的情况下升级。这可以用于维护内核代码树外部的模块。这也使你升级内核时，重新编译
模块变得非常简单。
Debian参考手册 171/233
9.10.4 编译内核源代码：Debian 内核团队推荐
从上游内核源代码编译个性化的内核二进制包，你应当使用由它提供的”deb-pkg”对象。
$ sudo apt-get build-dep linux
$ cd /usr/src
$ wget https://mirrors.edge.kernel.org/pub/linux/kernel/v6.x/linux-version.tar.xz
$ tar --xz -xvf linux-version.tar.xz
$ cd linux-version
$ cp /boot/config-version .config
$ make menuconfig
...
$ make deb-pkg
提示
linux-source-version软件包使用”/usr/src/linux-version.tar.bz2”提供有Debian补丁的Linux内核源代
码。
从Debian内核源代码软件包编译特定的二进制包，你应当使用”debian/rules.gen”里的”binary-arch_architecture_featureset_flavour”
对象。
$ sudo apt-get build-dep linux
$ apt-get source linux
$ cd linux-3.*
$ fakeroot make -f debian/rules.gen binary-arch_i386_none_686
进阶信息参见：
• DebianWiki: KernelFAQ
• DebianWiki: DebianKernel
• DebianLinux内核手册：https://kernel-handbook.debian.net
9.10.5 硬件驱动和固件
硬件驱动是运行在目标系统上主CPU上的代码。大部分硬件驱动现在是自由软件，已经包含在普通的Debian内核软
件包里，放在main区域。
• GPU驱动
– IntelGPU驱动(main)
– AMD/ATIGPU驱动(main)和/
– NVIDIAGPU驱动(nouveau驱动放在main,由厂家支持的二进制驱动，放在non-free.)
固件是加载在连接在目标系统设备上的代码或数据(比如说，CPUmicrocode、GPU运行的渲染代码或FPGA/CPLD数
据……）部分固件包是作为自由软件存在，但是很多固件包由于包含有没有源代码的数据，二进制不是作为自由软件
存在。安装这些固件数据是必需的，这样设备才能按期望运行。
• 固件数据软件包，含有加载到目标设备易失性存储器上的数据。
– firmware-linux-free(main)
– firmware-linux-nonfree(non-free-firmware)
– firmware-linux-*(non-free-firmware)
Debian参考手册 172/233
– *-firmware(non-free-firmware)
– intel-microcode(non-free-firmware)
– amd64-microcode(non-free-firmware)
• 固件更新程序软件包，更新在目标设备非易失性存储器上的数据。
– fwupd(main)：从LinuxVendorFirmwareService下载固件数据的固件更新后台守护进程（daemon）。
– gnome-firmware(main): fwupd的GTK前端
– plasma-discover-backend-fwupd(main): fwupd的Qt前端
请注意，从Debian12Bookworm开始，用户使用由官方安装介质里面提供的non-free-firmware软件包来提供完