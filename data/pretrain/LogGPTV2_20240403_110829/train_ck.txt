.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\" %%%license_end
.\"
.\" references consulted:
.\"   gnu glibc-2 source code and manual
.\"   dinkumware c library reference http://www.dinkumware.com/
.\"   opengroup's single unix specification http://www.unix-systems.org/online.html
.\"   iso/iec 9899:1999
.\"
.th iswxdigit 3  2021-03-22 "gnu" "linux programmer's manual"
.sh name
iswxdigit \- test for hexadecimal digit wide character
.sh synopsis
.nf
.b #include 
.pp
.bi "int iswxdigit(wint_t " wc );
.fi
.sh description
the
.br iswxdigit ()
function is the wide-character equivalent of the
.br isxdigit (3)
function.
it tests whether
.i wc
is a wide character
belonging to the wide-character class "xdigit".
.pp
the wide-character class "xdigit" is a subclass of the wide-character class
"alnum", and therefore also a subclass of the wide-character class "graph" and
of the wide-character class "print".
.pp
being a subclass of the wide-character class "print", the wide-character class
"xdigit" is disjoint from the wide-character class "cntrl".
.pp
being a subclass of the wide-character class "graph", the wide-character class
"xdigit" is disjoint from the wide-character class "space" and its subclass
"blank".
.pp
being a subclass of the wide-character class "alnum", the wide-character class
"xdigit" is disjoint from the wide-character class "punct".
.pp
the wide-character class "xdigit" always contains at least the
letters \(aqa\(aq to \(aqf\(aq, \(aqa\(aq to \(aqf\(aq
and the digits \(aq0\(aq to \(aq9\(aq.
.sh return value
the
.br iswxdigit ()
function returns nonzero if
.i wc
is a wide character
belonging to the wide-character class "xdigit".
otherwise, it returns zero.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br iswxdigit ()
t}	thread safety	mt-safe locale
.te
.hy
.ad
.sp 1
.sh conforming to
posix.1-2001, posix.1-2008, c99.
.sh notes
the behavior of
.br iswxdigit ()
depends on the
.b lc_ctype
category of the
current locale.
.sh see also
.br iswctype (3),
.br isxdigit (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man2/inotify_init.2
.\" copyright (c) 1998 andries brouwer (PI:EMAIL), 24 september 1998
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" modified, 27 may 2004, michael kerrisk 
.\"     added notes on capability requirements
.\"
.th reboot 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
reboot \- reboot or enable/disable ctrl-alt-del
.sh synopsis
.nf
.rb "/* since kernel version 2.1.30 there are symbolic names " linux_reboot_*
   for the constants and a fourth argument to the call: */
.pp
.br "#include   " \
"/* definition of " linux_reboot_* " constants */"
.br "#include    " "/* definition of " sys_* " constants */"
.b #include 
.pp
.bi "int syscall(sys_reboot, int " magic ", int " magic2 ", int " cmd ", void *" arg );
.pp
/* under glibc and most alternative libc's (including uclibc, dietlibc,
   musl and a few others), some of the constants involved have gotten
.rb "   symbolic names " rb_* ", and the library call is a 1-argument"
   wrapper around the system call: */
.pp
.br "#include     " "/* definition of " rb_* " constants */"
.b #include 
.pp
.bi "int reboot(int " cmd );
.fi
.sh description
the
.br reboot ()
call reboots the system, or enables/disables the reboot keystroke
(abbreviated cad, since the default is ctrl-alt-delete;
it can be changed using
.br loadkeys (1)).
.pp
this system call fails (with the error
.br einval )
unless
.i magic
equals
.b linux_reboot_magic1
(that is, 0xfee1dead) and
.i magic2
equals
.b linux_reboot_magic2
(that is, 672274793).
however, since 2.1.17 also
.b linux_reboot_magic2a
(that is, 85072278)
and since 2.1.97 also
.b linux_reboot_magic2b
(that is, 369367448)
and since 2.5.71 also
.b linux_reboot_magic2c
(that is, 537993216)
are permitted as values for
.ir magic2 .
(the hexadecimal values of these constants are meaningful.)
.pp
the
.i cmd
argument can have the following values:
.tp
.b linux_reboot_cmd_cad_off
.rb ( rb_disable_cad ,
0).
cad is disabled.
this means that the cad keystroke will cause a
.b sigint
signal to be
sent to init (process 1), whereupon this process may decide upon a
proper action (maybe: kill all processes, sync, reboot).
.tp
.b linux_reboot_cmd_cad_on
.rb ( rb_enable_cad ,
0x89abcdef).
cad is enabled.
this means that the cad keystroke will immediately cause
the action associated with
.br linux_reboot_cmd_restart .
.tp
.b linux_reboot_cmd_halt
.rb ( rb_halt_system ,
0xcdef0123; since linux 1.1.76).
the message "system halted." is printed, and the system is halted.
control is given to the rom monitor, if there is one.
if not preceded by a
.br sync (2),
data will be lost.
.tp
.br linux_reboot_cmd_kexec
.rb ( rb_kexec ,
0x45584543, since linux 2.6.13).
execute a kernel that has been loaded earlier with
.br kexec_load (2).
this option is available only if the kernel was configured with
.br config_kexec .
.tp
.b linux_reboot_cmd_power_off
.rb ( rb_power_off ,
0x4321fedc; since linux 2.1.30).
the message "power down." is printed, the system is stopped,
and all power is removed from the system, if possible.
if not preceded by a
.br sync (2),
data will be lost.
.tp
.b linux_reboot_cmd_restart
.rb ( rb_autoboot ,
0x1234567).
the message "restarting system." is printed, and a default
restart is performed immediately.
if not preceded by a
.br sync (2),
data will be lost.
.tp
.b linux_reboot_cmd_restart2
(0xa1b2c3d4; since linux 2.1.30).
the message "restarting system with command \(aq%s\(aq" is printed,
and a restart (using the command string given in
.ir arg )
is performed immediately.
if not preceded by a
.br sync (2),
data will be lost.
.tp
.br linux_reboot_cmd_sw_suspend
.rb ( rb_sw_suspend ,
0xd000fce1; since linux 2.5.18).
the system is suspended (hibernated) to disk.
this option is available only if the kernel was configured with
.br config_hibernation .
.pp
only the superuser may call
.br reboot ().
.pp
the precise effect of the above actions depends on the architecture.
for the i386 architecture, the additional argument does not do
anything at present (2.1.122), but the type of reboot can be
determined by kernel command-line arguments ("reboot=...") to be
either warm or cold, and either hard or through the bios.
.\"
.ss behavior inside pid namespaces
.\" commit cf3f89214ef6a33fad60856bc5ffd7bb2fc4709b
.\" see also commit 923c7538236564c46ee80c253a416705321f13e3
since linux 3.4,
if
.br reboot ()
is called
from a pid namespace other than the initial pid namespace
with one of the
.i cmd
values listed below,
it performs a "reboot" of that namespace:
the "init" process of the pid namespace is immediately terminated,
with the effects described in
.br pid_namespaces (7).
.pp
the values that can be supplied in
.i cmd
when calling
.br reboot ()
in this case are as follows:
.tp
.br linux_reboot_cmd_restart ", " linux_reboot_cmd_restart2
the "init" process is terminated,
and
.br wait (2)
in the parent process reports that the child was killed with a
.b sighup
signal.
.tp
.br linux_reboot_cmd_power_off ", " linux_reboot_cmd_halt
the "init" process is terminated,
and
.br wait (2)
in the parent process reports that the child was killed with a
.b sigint
signal.
.pp
for the other
.i cmd
values,
.br reboot ()
returns \-1 and
.i errno
is set to
.br einval .
.sh return value
for the values of
.i cmd
that stop or restart the system,
a successful call to
.br reboot ()
does not return.
for the other
.i cmd
values, zero is returned on success.
in all cases, \-1 is returned on failure, and
.i errno
is set to indicate the error.
.sh errors
.tp
.b efault
problem with getting user-space data under
.br linux_reboot_cmd_restart2 .
.tp
.b einval
bad magic numbers or \ficmd\fp.
.tp
.b eperm
the calling process has insufficient privilege to call
.br reboot ();
the caller must have the
.b cap_sys_boot
inside its user namespace.
.sh conforming to
.br reboot ()
is linux-specific,
and should not be used in programs intended to be portable.
.sh see also
.br systemctl (1),
.br systemd (1),
.br kexec_load (2),
.br sync (2),
.br bootparam (7),
.br capabilities (7),
.br ctrlaltdel (8),
.br halt (8),
.br shutdown (8)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/ccosh.3
.so man3/xdr.3
.so man3/rpc.3
.\" copyright 1993 rickard e. faith (PI:EMAIL)
.\" portions extracted from linux/kernel/ioport.c (no copyright notice).
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" modified tue aug  1 16:47    1995 by jochen karrer
.\"                              
.\" modified tue oct 22 08:11:14 edt 1996 by eric s. raymond 
.\" modified fri nov 27 14:50:36 cet 1998 by andries brouwer 
.\" modified, 27 may 2004, michael kerrisk 
.\"     added notes on capability requirements
.\"
.th iopl 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
iopl \- change i/o privilege level
.sh synopsis
.nf
.b #include 
.pp
.bi "int iopl(int " level );
.fi
.sh description
.br iopl ()
changes the i/o privilege level of the calling thread,
as specified by the two least significant bits in
.ir level .
.pp
the i/o privilege level for a normal thread is 0.
permissions are inherited from parents to children.
.pp
this call is deprecated, is significantly slower than
.br ioperm (2),
and is only provided for older x servers which require
access to all 65536 i/o ports.
it is mostly for the i386 architecture.
on many other architectures it does not exist or will always
return an error.
.sh return value
on success, zero is returned.
on error, \-1 is returned, and
.i errno
is set to indicate the error.
.sh errors
.tp
.b einval
.i level
is greater than 3.
.tp
.b enosys
this call is unimplemented.
.tp
.b eperm
the calling thread has insufficient privilege to call
.br iopl ();
the
.b cap_sys_rawio
capability is required to raise the i/o privilege level
above its current value.
.sh conforming to
.br iopl ()
is linux-specific and should not be used in programs that are
intended to be portable.
.sh notes
.\" libc5 treats it as a system call and has a prototype in
.\" .ir  .
.\" glibc1 does not have a prototype.
glibc2 has a prototype both in
.i 
and in
.ir  .
avoid the latter, it is available on i386 only.
.pp
prior to linux 5.5
.br iopl ()
allowed the thread to disable interrupts while running
at a higher i/o privilege level.
this will probably crash the system, and is not recommended.
.pp
prior to linux 3.7,
on some architectures (such as i386), permissions
.i were
inherited by the child produced by
.br fork (2)
and were preserved across
.br execve (2).
this behavior was inadvertently changed in linux 3.7,
and won't be reinstated.
.sh see also
.br ioperm (2),
.br outb (2),
.br capabilities (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright 2003 abhijit menon-sen 
.\" and copyright (c) 2010, 2015, 2017 michael kerrisk 
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" 2005-04-08 mtk, noted kernel version and added bugs
.\" 2010-10-09, mtk, document arm_fadvise64_64()
.\"
.th posix_fadvise 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
posix_fadvise \- predeclare an access pattern for file data
.sh synopsis
.nf
.b #include 
.pp
.bi "int posix_fadvise(int " fd ", off_t " offset ", off_t " len \
", int " advice ");"
.fi
.pp
.ad l
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br posix_fadvise ():
.nf
    _posix_c_source >= 200112l
.fi
.sh description
programs can use
.br posix_fadvise ()
to announce an intention to access
file data in a specific pattern in the future, thus allowing the kernel
to perform appropriate optimizations.
.pp
the \fiadvice\fp applies to a (not necessarily existent) region starting
at \fioffset\fp and extending for \filen\fp bytes (or until the end of
the file if \filen\fp is 0) within the file referred to by \fifd\fp.
the \fiadvice\fp is not binding;
it merely constitutes an expectation on behalf of
the application.
.pp
permissible values for \fiadvice\fp include:
.tp
.b posix_fadv_normal