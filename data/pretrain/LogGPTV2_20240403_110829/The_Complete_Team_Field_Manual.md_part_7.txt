conn_uids Connection UID over which file transferred
source ID of file data source
depth Value to represent depth of file in relation to its source
analyzers set of analysis types done during file analysis
mime_type file type, as determined by signatures
filename Filename, if available from source for file
duration duration file was analyzed for
local_orig indicates if data was originated for local network
is_orig indicates if file sent by originator or responder
seen_bytes number of bytes provided to file analysis engine
total number of bytes that should comprise full
total_bytes file
missing_bytes number of bytes in file stream missed
overflow_bytes number of bytes in file stream not delivered to stream file analyzers
timedout if file analysis timed out at least once
parent_fuid container file ID was extracted from
md5 MD5 digest of file contents
sha1 SHA1 digest of file contents
sha256 SHA256 digest of file contents
extracted local filename of extracted file
set to true if file being extracted was cut off so whole file was not
extracted_cutoff
logged
extracted_size number of bytes extracted to disk
entropy information density of file contents
kerberos.log
Field Description
ts timestamp for when event happened
uid and id underlying connection info
request_type authentication service (AS) or ticket granting service (TGS)
client client
service service
success request result
error_msg error message
from ticket valid from
till ticket valid until
cipher ticket encryption type
forwardable forwardable ticket requested
renewable renewable ticket requested
client_cert_subject subject of x.509 cert offered by client for PKINIT
client_cert_fuid file UID for x.509 client cert for PKINIT auth
server_cert_subject subject of x.509 cert offered by server for PKINIT
server_cert_fuid file UID for x.509 server cert for PKINIT auth
auth_ticket ticket hash authorizing request/transaction
new_ticket hash of ticket returned by the KDC
irc.log
Field Description
ts timestamp when command seen
uid and id underlying connection info
nick nickname given for connection
user username given for connection
command command given by client
value value for command given by client
addl any additional data for command
dcc_file_name DCC filename requested
dcc_mime-type sniffed mime type of file
fuid file unique ID
ssh.log
Field Description
ts time when SSH connection began
uid and id underlying connection info
version SSH major version
auth_success authentication result
auth_attempts number of authentication attempts seen
direction direction of connection
client client’s version string
server server’s version string
cipher_alg encryption algorithm in use
mac_alg signed (MAC) algorithm used
compression_alg compression algorithm used
kex_alg key exchange algorithm used
host_key_alg server host key algorithm
host_key servers key fingerprint
remote_location add geographic data related to remote host of connection
tunnel.log
Field Description
ts timestamp when tunnel activity detected
uid and id underlying connection info
tunnel_type type of tunnel
action type of activity that occurred
syslog.log
Field Description
ts timestamp when syslog message was seen
uid and id underlying connection info
proto protocol over which message was seen
facility syslog facility for message
severity syslog severity for message
message plain text message
ftp.log
Field Description
ts timestamp when command sent
uid and id underlying connection info
user username for current FTP session
password password for current FTP session
command command given by client
arg argument for command, if given
mime_type sniffed mime type of file
file_size size of file
reply_code reply code from server in response to command
reply_msg reply message from server in response to command
data_channel expected FTP data channel
fuid file unique ID
smtp.log
Field Description
ts timestamp when msg first seen
uid and id underlying connection info
trans_depth transaction depth if there are multiple msgs
helo contents of helo header
mailfrom email addresses found in from header
rcptto email addresses found in the rcpt header
date contents of date header
from contents of from header
to contents of to header
cc contents of CC header
reply_to contents of ReplyTo header
msg_id contents of MsgID header
in_reply_to contents of In-Reply-To header
subject contents of Subject header
x_originating_ip contents of X-Originating-IP header
first_recieved contents of first Received header
second_received contents of second Received header
last_reply last messge server sent to client
path message transmission path, from headers
user_agent value of User-Agent header from client
tls indicates connection switched to using TLS
fuids file unique IDs seen attached to message
is_webmail if the mssage was sent via webmail
http.log
Field Description
ts timestamp for when request happened
uid and id underlying connection info
trans_depth pipelined depth into connection
method verb used in HTTP request
host value of HOST header
uri URI used in request
referrer value of “referrer” header
version value of version portion of request
user_agent value of User-Agent header from client
request_body_len uncompresses data size from client
response_body_len uncompressed data size from server
status_code status code returned by server
status_msg status message returned by server
info_code last seen 1xx info reply code from server
info_msg last seen 1xx infor reply message from server
tags indicators of various attributes discovered
username username if basic-auth is performed
password password if basic-auth is performed
proxied header indicative of a proxied request
orig_fuids ordered vector of file unique IDs
orig_filenames ordered vector of filenames from client
orig_mime_types ordered vector of mime types
resp_fuids ordered vector of file unique IDs
resp_filenames ordered vector of filenames from server
resp_mime_types ordered vector of mime types
client_header_names vector of HTTP header names sent by client
server_header_names vector of HTTP header names sent by server
cookie_vars variable names extracted from all cookies
uri_vars variable names extracted from URI
mysql.log
Field Description
ts timestamp for when event happened
uid and id underlying connection info
cmd command that was issued
arg argument issued to the command
success server replies command succeeded
rows number of affected rows, if any
response server message, if any
radius.log
Field Description
ts timestamp for when event happened
uid and id underlying connection info
username username if present
mac MAC address if present
framed_addr address given to network access server
remote_ip remote IP address if present
connect_info connect info if present
reply_msg reply message from server challenge
result successful or failed authentication
duration between first request and either the “Access-Accept” message or
ttl
an error
ssl.log
Field Description
ts time when SSL connection first detected
uid and id underlying connection info
version SSL/TLS version server chose
cipher SSL/TLS cipher suite that server chose
curve Elliptic curver server chose using ECDH/ECDHE
server_name server name indicator SSL/TLS extension value
resumed flag that indicates session was resumed
last_alert last alert seen during the connection
next protocol server chose using application layer next
next_protocol
protocol extension, if present
flags if SSL session successfully established
established
ordered vector of all certificate file unique IDs for certificates
cert_chain_fuids
offered by server
ordered vector of all certificate file unique IDs for certificates
client_cert_chain_fuids
offered by client
subject subject of x.509 cert offered by the server
issuer subject of signer of server cert
client_subject subject of x.509 cert offered by client
client_issuer subject of signer of client cert
validation_status certificate validation results for this connection
ocsp_status OCSP validation result for connections
valid_ct_logs number of different logs for which valid SCTs encountered in
connection
number of different log operators for which valid SCTs
valid_ct_operators
encountered in connection
notary response from the ICSCI certificate notary
sip.log
Field Description
ts timestamp when request happened
uid and id underlying connection info
trans_depth pipelined depth into request/response transaction
method verb used in SIP request
uri URI used in request
date contents of date header
request_from contents of request from header
request_to contents of to header
response_from contents of response from header
response_to contents of response to header
reply_to contents of reply-to header
call_id contents of call-id header
seq contents of CSeq header
subject contents of subject header
request_path client msg transmission path
server message transmission path, extracted from
response_path
headers
user_agent contents of user-agent
status_code status code returned by server
status_msg status message returned by server
warning contents of warning header
request_body_len content-length header from client contents
response_body_len content-length header from server contents
content_type content-type header from server contents
7.3.4 NetworkMiner
Install network miner and click file and select Receive Pcap over IP
Set the port number to receive on and start receiving.
Replay pcap
Capture and forward
7.3.5 Moloch
Moloch
Operator Description
== Equals
!= Not Equals
> Greater than
= Greater than or equal to
 Filter by hostname
host.dns ==  Filter by DNS hostname
7.3.6 Suricata
Suricata Rule Header Format
Operator Description
action pass,drop,reject,alert
Basic (tcp,udp,ip,icmp)
Application (http,ftp,tls,smb,dns,dcerpc,
protocols
ssh,smtp,imap,msn,Modbus,dnp3, enip,nfs,ikev2,krb5,ntp,dhcp)
Source IP address any or x.x.x.x or x.x.x.x/x or $var
Source Port any or XX or [XX:XX]
Destination IP any or x.x.x.x or x.x.x.x/x or $var
Destination Port any or XX or [XX:XX]
Suricata Rule Options Format
Message msg:”message”
Rule ID sid:1000001
Content conent:”string”
Example Suricata Rule
alert tcp 192.168.x.x any -> $HOME_NET 21 (msg:”FTP connection attempt”;
sid:1000002; rev:1;)
Suricata Mode Options
-c  Define configuration file
-T -c Check configuration file
-v Sets verbosity
-M  Send SMB alert to PC
-F  BPF from file
-k  Set checksum checking
-D Run in background
-i Specify interface
-r  Replay on PCAP
--runmode
Set runmode manually
7.3.7 Snort
Snort Rule Header Format
Operator Description
alert,log,pass,activate,
action
dynamic,drop,reject,sdrop
protocols tcp,udp,ip,icmp
Source IP address any or x.x.x.x or x.x.x.x/x or $var
Source Port any or XX
Destination IP any or x.x.x.x or x.x.x.x/x or $var
Destination Port any or XX
Snort Rule Options Format
Message msg:”message”
Snort Rule ID sid:1000001
Rule Revision rev:X
Catagory classtype: 
Example Snort Rule
alert tcp 192.168.x.x any -> $HOME_NET 21 (msg:”FTP connection attempt”;
sid:1000002; rev:1;)
Snort Mode Options
-c  Define configuration file
-T -c Check configuration file
-A  Alternate alert modes
-s Alert to syslog
-v Print alert information
-M  Send SMB alert to PC
-K ASCII log mode
-N No logging
-D Run in background
-i Specify interface
-e Display link layer header
-x Display headers in hex
-d Show packet layer payload
7.3.8 Nmap
NMAP
Target Specification
Option Description
-iL  Scan target from file
-iR  Scan  random hosts
--exclude  exclude  from search
Scan Techniques
-sS TCP SYN port scan
-sT TCP connect port scan
-sU UDP port scan
-sA TCP ACK port scan
-sW TCP Window port scan
-sM TCP Maimon port scan
Host Discovery
-sL No Scan. List targets only
-sn No port scan,Host disc only
-Pn Port scan only, no host scan
-PS TCP SYN discovery on port 
-PA TCP ACK discovery on port 
-PU UDP discovery on port 
-PR ARP discovery on local network
-n Never do DNS resolution
-6 Enable IPv6 scanning
Specify Port Scanning
-p  Scan port 
-p  Scan range -
-p- Scan all ports
-F Fast port scan (100 ports)
--top-ports  Scan top  ports
Service and OS Detection
-sV Attempts to determine the version of the service running on port
-A Enables OS detection, version detection, script scanning, and traceroute
-O Remote OS detection using TCP/IPstack fingerprinting
Timing
-T0 Paranoid (0) Intrusion Detection System evasion
-T1 Sneaky (1) Intrusion Detection System evasion
Polite (2) slows down the scan to useless bandwidth and use
-T2
less targetmachine resources
-T3 Normal (3) which is default speed
Aggressive (4) speeds scans; assumesyou are on a reasonably fast
-T4
andreliable network
Insane (5) speeds scan; assumes youare on an extraordinarily fast
-T5
network
Scripts and Evasion
-sC Scan with default NSE scripts