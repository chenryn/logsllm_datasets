### 图6：PathMiner发现的(λ, ν)-事件的基本统计（λ = 0.8，ν = 100）

**时间序列：**
- **(a) 每年样本中的下一跳更改总数**
- **(b) PathMiner捕获的这些更改的百分比**
- **(c) 每天找到的事件数量**

**互补累积分布函数 (CCDF)：**
- **(d) 事件的体积** - 体积定义为前缀数、自治系统 (AS) 数和天数的乘积
- **(e) 事件的密度** - 密度是事件捕获的变化数与体积的比率
- **(f) 体积 × 密度的乘积**

**散点图（仅2013年）：**
- **(g) 前缀数量 vs. 体积**
- **(h) 自治系统 (AS) 数量 vs. 体积**
- **(i) 天数 vs. 体积**

#### 分析
图6(a)、(b) 和 (c) 展示了9年数据中每天的统计数据。请注意，每年的样本是独立的，因此不应跨年份推断趋势。从图6(b) 和 (c) 可以看出，PathMiner在张量密度较高的情况下表现更好，并且总体上，与总变化数相关的时间序列形状（2008年及最后三年2011、2012和2013年的值较高）与每天变化分数和事件数量的时间序列形状相似。

接下来，我们分析事件的密度和体积。作为算法约束，每个块的密度必须高于0.8，体积必须大于100。但一般来说，事件的大小和密度如何？图6(d)、(e) 和 (f) 分别展示了所有9个数据集中体积、密度及其乘积的对数-对数互补累积分布函数 (CCDF)。总体来看，分布呈现长尾特性，许多小事件和少数非常大的事件。就体积而言，2005年超过10%的所有块体积大于500，到2013年这个数字上升到1000。在曲线的尾部，我们可以看到一些体积大于10^4的巨大事件。类似的情况也适用于图6(f)。就密度而言，尽管0.8可以被视为一个高阈值，但仍有许多块的密度更高。例如，大约30%的所有事件（所有数据集）的密度高于0.9，10%的事件密度高于0.95。

我们还探讨了事件体积与前缀数、自治系统 (AS) 数和天数之间的关系。图6(g)、(h) 和 (i) 展示了2013年的结果（其他年份的趋势相同）。可以看出，提取的事件包括大量的天数和自治系统（通过二维分解算法获得），并且由于二维事件聚合步骤，形成了包含大量前缀的事件。

最后，表4列出了每年按体积计算的5个最大事件。第2至4列表示每个事件中的前缀数、自治系统 (AS) 数和天数（因此可以通过它们的乘积得到事件的体积）。表格显示，PathMiner能够找到范围显著的事件，其中一些涉及数十个自治系统、前缀和天数。最大的事件（2007年和2008年）涉及超过100,000次单独的路由更改。在这方面，重要的是要记住，我们的数据集中每个前缀都起源于不同的自治系统，因此由于共同起源前缀的相似路由行为，实际每次事件中的路由更改次数要大得多。

### 表4：9年内排名前5的事件描述

| 数据集 | 前缀数 | AS数 | 天数 | 密度 |
| --- | --- | --- | --- | --- |
| 2005 | 2 | 2 | 1 | 0.90 |
| 2006 | 2 | 2 | 1 | 0.88 |
| 2007 | 1 | 1 | 1 | 0.83 |
| 2008 | 1 | 1 | 1 | 0.87 |
| 2009 | 2 | 3 | 1 | 0.91 |
| 2010 | 3 | 82 | 1 | 0.86 |
| 2011 | 1 | 140 | 13 | 0.83 |
| 2012 | 75 | 77 | 45 | 0.86 |
| 2013 | 156 | 79 | 15 | 0.91 |

### 单一参与者分析
在本节中，我们将介绍PathMiner的第二个组件，即一种算法，用于在已知事件涉及的自治系统、前缀和天数的情况下，识别最有可能导致大规模事件的网络元素。我们首先解释我们的识别方法，然后展示结果。

#### 7.1 算法
我们从一些基本观察开始。考虑某个网络元素a（例如，一个自治系统）采取的行动，导致从自治系统b到前缀p的路径发生变化。我们观察到，a通常要么在变化之前就在从b到p的路径上，要么在变化之后 [10]。例如，如果一条链路失败或恢复，或者一个自治系统宣布新路由并/或撤销现有路由，这些事件可能会导致许多路径的变化，但涉及的路径都将经过该链路或自治系统，无论是在变化之前还是之后。

因此，如果我们对某一天k发生的事件感兴趣，那么我们可能希望比较网络中在第k天和第k+1天看到的路径集合。通过计数路径来识别或缩小路由变化的根本原因已被探索过，例如 [16]。然而，PathMiner在目标（因为它特别关注可能随时间重复出现的大规模事件）和方法（因为它仔细选择要分析的路径集）方面与先前的工作有所不同。

PathMiner利用其第一部分发现的(λ, ν)-事件集合，这是一种有效隔离研究路径集的方法，从而避免了无关路径的干扰。具体来说，当分析一个在第k天具有自治系统集J和前缀集I的事件时，我们只考虑在第k天和第k+1天通过J中的自治系统向I中的前缀传递的路径。如果这样的路径从不在J中的自治系统开始并通过a ∈ J，则PathMiner会考虑这条路径，但忽略a之前的部分。相应地，我们定义Pk为在第k天从J中的元素开始并结束于I中的元素的所有路径的多重集。

根据上述观察，一个好的候选单一网络元素应具备以下属性：在第k天或第k+1天，(a) 大多数变化的路径经过该网络元素，(b) 经过该网络元素的大多数路径发生了变化。