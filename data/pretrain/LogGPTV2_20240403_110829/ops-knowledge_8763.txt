User: 请解答这个和日志有关的问题Identify malicious hosts in our network by sending valid domain credentials We are currently whitelisting the hosts owned by our company on our Cisco switches to prevent private hosts in our network. This works pretty well but someone can still spoof the MAC address of his host.

Now we had the idea to create a domain user with literally no rights but to logon to a host over the network. The Idea behind this is to identify hosts that aren't able to verify this credentials because they aren't a part of the domain. 

Every host that isn't able to verify the credentials or isn't running the needed services is definitely an unwanted device. This is because it only concerns the workstation network which is heavily regulated using Group Policies. 

Is this a good idea or am I missing something?

// I'm not searching for a way to prevent a specific type of attack my primary intend is the identification of malicious devices.

Assistant: AFAIK Cisco switches base their forwarding decisions based on MAC; regardless of what authentication occurred first.

You can use port-security to enforce MAC auth, but as discussed that is easy to spoof.

A better option is 802.1X  (Cisco just refers to it as dot1x);
whereby as a port comes up it asks the client to authenticate, back-hauls that auth to a radius/TACACS server, and based on the response enables traffic forwarding on that port (on server defined VLAN)

This can also be used for NAC -- if a legitimate host doesn't pass health checks (up2date AV/Windows updates) it can be quarantined to a remediation VLAN to update itself before being allowed to join the main network.

Ultimately, however, if a host has passed dot1X authentication, any frames sourced on that port, with the expected MAC address will be forwarded without further authentication.

A much more resilient option ( which also covers remote Layer3 traffic ) is IPSEC; My main experience with this is Windows, though Linux is capable (Racoon? - though more complex to administer) you can enforce IPSEC traffic policies whereby the individual IP packets have an authentication header to prove the identity of the sender (computer, user, or both); and if the receiver cannot validate that info the packet is dropped even before passing up the stack to (possibly vulnerable) application.
It does by definition cause inter-operability problems with external or non-domain devices (eg. printers)- which can be addressed with domain trusts (given similar IPSEC policy) or device certificates (from trusted chain)

You can configure IPSEC policy not only to authenticate connections, but to encrypt the data; which renders most MitM attacks useless.

You could identify attempts at non-IPSEC secured connections (or those that fail authentication) in event logs.