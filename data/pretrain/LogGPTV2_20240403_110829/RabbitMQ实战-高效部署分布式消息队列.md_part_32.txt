它可以从http://nagios.org上免费获取。同时它拥有一个灵活的API，用任何语言来
编写自已的健康检测程序都十分简单。此外，许多其他开源监控框架（像Zenoss 和
Zabbix）也支持Nagios健康检测API，这使得针对Rabbit的健康检测程序可以被除
了Nagios的其他监控系统使用。那么什么是Nagios健康检测程序，它又是如何运
作的呢？
Nagios健康检测是一个独立的程序，它在运行时监控服务并在程序终止运行时
退出代码来指示服务的健康状况。从技术上来讲，你甚至不需要Nagios来运行健康
检测一一你可以在任何时候通过命令行执行并手工观测输出。Nagios健康检测可以
用任何语言编写，可以是Python程序，甚至是BASH脚本。检测程序需要将可读
状态打印到STDOUT上，并且返回下列四种整型退出代码之一：
---
## Page 211
10.1监控RabbitMQ：密切关注你的warren
189
·0一OK一接收检测的服务工作正常，并且各项指标都处于通过命令行参数
设定的国值之内。
·1一WARNING一服务运行处于退化状态（或者说是遇到了问题），但是这
个问题并不紧急。举个例子，假设你正在监控内存使用情况。如果你将健康
检测配置了2GB的warning国值，以及4GB的critical国值的话，任何内存
使用处于2～4GB之间的情况都会返回一个WARNING退出代码。
2一CRITICAL一—服务关闭了、无响应，并且/或者超过了受监控的临界
度量国值。还是拿内存使用情况这个例子来说明，当内存使用超过4GB时，
健康检测会返回一个CRITICAL退出代码。
·3一UNKNOWN一从技术上来讲，这意味着服务的状态或者监控的度量值
无法确定。举例来说，如果健康检测程序正监控队列上的消息总数，但是它
无法连接上服务器，则它会返回unknown状态码而非critical状态码。仅当
你无法取样度量值的当前状态时，返回unknown状态码才是有意义的。如果
需要监控的度量值就是目标是否可连接，而你又无法连接上的话，那么当然
应该返回critical而不是unknown了。
现在你理解了Nagios期望从健康检测程序中获得什么之后，让我们这就来编写
一个吧，如下列清单所示。虽然你可以使用任何语言来编写健康检测程序，但是你
将再次使用自己在第4章安装的Python和PikaAMQP库来编写示例程序。第一个
健康检测程序会非常简单，因为它不会检测任何东西。它会接收warning、critical、
unknown或者ok作为参数，并且以Nagios状态码退出。
清单10.1nagios_check.py：返回Nagios状态代码的健康检测程序
import sys,json,httplib,base64
status = sys.argv[1]
 python nagios_check.py critical
Status is CRITICAL
>echo$?
2
棒极了！你的健康检测程序返回了正确的状态消息，而且echoS？告诉你退
出码是正确的critical状态（2）。如果Nagios 运行这段健康检测程序的话，你会得
到一个告警，并显示为StatusisCRITICAL。虽然Nagios不理解这段消息的真
正含义，但它理解退出码2表明处于critical状态。接下来我们所有的健康检测都会
基于该示例之上，并逐步添加逻辑代码来检测在线服务，并且也能接收命令行参数，
从而健康检测就能知道该去监控哪个服务以及critical或者warming阈值的组成了。
在继续构建健康检测来查看RabbitMQ是否运作以及是否能够构造信道之前，
我们需要先来了解Nagios。虽然你构造的健康检测可以被Nagios使用，但是我们不
会讨论如何配置Nagios来使用它们。这样做可以让我们专注于监控Rabbit的方方
面面。如果你想要学习更多关于Nagios的知识以及如何安装的话，请参阅文档站点
http://www.nagios.org/documentation
话不多说。让我们这就来检测你的RabbitMQ服务器是否运作正常、足够健康！
10.1.2使用AMQP模拟检测来确认RabbitMQ是否运行
不用编写一行代码，你就能使用大多数监控系统附带的TCP健康检测程序，通
过TCP连接测试Rabbit是否能在端口5762上响应。虽然这会告诉你RabbitMQ守
护进程是否在运行，但你却不知道它是否正常运作。例如，RabbitMQ内存不足怎
么办呢？守护进程仍然可能完成TCP握手，但却没有足够的内存来响应AMQP命令。
为了能够真正地判断Rabbit是否有能力来服务请求，你需要真实地发送AMQP命令。
因此，让我们来构造一个AMQPping健康检测。当下列任何条件之一为真时，该检
测程序会返回一个critical状态。
·RabbitMQ没有响应TCP连接。
■当发送AMQP命令时，Pika在接收到响应之前超时了。
■当构造AMQP信道时，遇到了协议错误。
---
## Page 213
10.1监控RabbitMQ：密切关注你的warren
191
仅当这些状态检测都为false时，健康检测程序才会返回OK状态。健康检测代
码看起来很像首个HelloWorld消费者程序的简化版本。
清单10.2amqp_ping_check.py
import sys, pika
EXIT_OK = 0
1Nagios状态码
EXIT_WARNING = 1
EXIT_CRITICAL =2
EXIT_UNKNOWN =3
2解析命令
server,port = sys.argv[1].split(":")
的格式来发送API请求。其中指的是
虚拟机名称，同时也是API用来创建队列的地方。下列清单展示了这段代码。
清单10.3api_ping_check.py：针对RabbitMQ的基于RESTAPI的健康检测程序
import sys，json,httplib，urllib,base64, socket
EXIT_OK =0
except socket.error:
无法建立
print "CRITIcAL: Could not connect to %s:&s"  (server, port)
连接，返
exit(EXIT_CRITICAL)
7RabbitMQ无响
回critical
应/无心跳，返
状态6