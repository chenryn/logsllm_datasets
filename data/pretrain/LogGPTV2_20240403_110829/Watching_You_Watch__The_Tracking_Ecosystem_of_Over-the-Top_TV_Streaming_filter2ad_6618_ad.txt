MAC
Serial No
Device name
AD ID
Zip
City
Wifi SSID
Channel name
State
Leak
Count
3856
138
377
64
953
190
285
204
5248
67
and device serial number. We removed known trackers from this
list using the five adblocking lists that we used throughout the
study. We then eliminated domains that were contacted only in
one channel. Finally, we manually removed false positives using a
WHOIS service, marketing materials, and other publicly available
information. We provide a list of these domains in Appendix C.
5.3.2 Title Leak Detection. To determine whether trackers collect
information about users’ viewing habits, we checked whether chan-
nels shared video titles with the trackers. To this end, we randomly
selected 100 channels on each platform from the subset of channels
for which we detected video playback. The screenshots from each of
these channels’ menus were then manually reviewed to determine
the title of the video. If a channel had a generic title such as "Live
News" displayed in the menu, the screenshots of the video playback
itself would be viewed to try to determine the most accurate title.
Finally, we searched for different encodings of each video title in
the network traffic, following a similar approach to the ID leak
detection method explained in Section 5.3.
9
Makedatareadyforplottingroku1k_uniq%filter(adblocked=="True")%>%distinct(channel_id,domain,category,rank,playback)%>%group_by(channel_id,category,rank,playback)%>%count()%>%arrange(rank)Plot#roku1k_uniq%group_by(category)%>%mutate(med=median(n))ggplot(roku1k_uniq,aes(x=rank,y=n,color=playback))+geom_point(size=0.67,alpha=0.6)+coord_cartesian(xlim=c(min(roku1k_uniq$rank),quantile(roku1k_uniq$rank,0.99)),ylim=c(min(roku1k_uniq$n),quantile(roku1k_uniq$n,0.997)))+facet_wrap(~category,nrow=2,ncol=5)+ylab("NumberofTrackingDomains")+xlab("ChannelRank")+labs(color="VideoPlayed?")+scale_colour_Publication()+theme_Publication()MusicNews & WeatherReligiousSpecial InterestSportsGamesInternationalKids & FamilyLifestyleMovies & TV0500100005001000050010000500100005001000010203040010203040Channel RankNumber of Tracking DomainsVideo Played?FalseTrue#+geom_hline(aes(yintercept=med,group=category),colour="black",linetype=2)4Music & audioNewsNoveltySportsUtilitiesGamesHealth & fitnessKidsLifestyleMovies & TV0500100005001000050010000500100005001000010203040010203040Channel RankNumber of Tracking DomainsVideo Played?FalseTrue#+geom_hline(aes(yintercept=med,group=category),colour="black",linetype=2)5Requests and
Identifier leaks
No. of HTTP requests
No. of contacted tracker domains
No. of contacted domains
AD ID (# instances/ # channels)
Serial No. (# instances/ # channels)
Limit Ad
Tracking?
No (default)
4120
96
266
390/30
135/14
Yes
3880
128
294
0/0
118/13
Table 7: Choosing to “Limit Ad Tracking” on the Roku
Express (Roku-CategoriesTop100-LimitAdTracking crawl)
seemingly makes no difference to the number and types of
leaks to trackers except the AD ID is not leaked at all.
We found 9 channels on Roku and 14 channels on the Fire TV,
among the 100 channels we randomly selected on each device, that
leaked the title of the video to a tracking domain. The majority
of these channels were news channels with 8 channels on Roku
and 7 channels on Fire TV being news related. We list the channel
name, video title, and tracking domain the title was leaked to in
the Appendix G (Table 13 for Roku and Table 14 for Fire TV). On
Roku, all video titles are leaked over unencrypted connections,
exposing users’ viewership preferences to eavesdroppers. On Fire
TV, only two channels (NBC News and WRAL) used an unencrypted
connection when sending the title to tracking domains.
The study by Malkin et al. [41] shows only 29% of Smart TV users
surveyed believed it was acceptable for the advertiser to collect
their viewing behavior, and our findings show the gap between user
expectation and current tracking practices. Furthermore, as we will
discuss in Section 6, this type of tracking may be subject to certain
legislation such as the Video Privacy Protection Act (“VPPA") in
the United States which prohibits collecting the viewing history of
clients for video rental services.
5.4 Effect of countermeasures
Both Roku and Amazon Fire TV provide privacy options to users
that purport to limit tracking on their devices. On Roku, this option
is called “Limit Ad Tracking” and on Amazon Fire TV it is called
“Disable Interest based Ads”. Both options are off by default.
“Limit Ad Tracking” on Roku: To find out the effect of this
option, we ran a crawl with “Limit Ad Tracking” on and compared
the results to a crawl with the same parameters, except with “Limit
Ad Tracking” turned off. For comparison, we measured the AD
ID and serial number leaks; number of tracker domains contacted;
and the number of HTTP requests. Turning on “Limit ad tracking”
reduced the number of AD ID leaks from 390 to zero, but did not
affect the number of trackers contacted by the channels (Table 7).
Moreover, the number of serial number leaks stayed the same. The
increase in the number of contacted domains (96 to 128) also points
to the limited efficacy of the “Limit Ad Tracking” option.
“Disable Interest based ads” on Amazon: Next, we evaluated
the effect of the “Disable Interest based ads” option that is avail-
able on the Fire TV. Comparing the domains contacted in FireTV-
CategoriesTop100-DisableInterestAds and FireTV-CategoriesTop100-
MITM crawls, we found that the number of requests to amazon--
adsystem.com decreased from 65 to just 10 channels, meaning
Amazon seemingly reduced access to its own advertising system.
10
Requests and
Identifier leaks
No. of HTTP requests
No. of contacted tracker domains
No. of domains
AD ID (# instances/ # channels)
Android ID (# instances/ # channels)
Serial No. (# instances/ # channels)
MAC Addr. (# instances/ # channels)
Disable Interest
Based Ads?
No (default)
8895
119
268
198/35
607/69
151/33
22/3
Yes
8269
115
262
144/16
638/65
127/24
26/3
Table 8: Choosing to “Disable Interest Ads” on the Amazon
Fire TV Stick (FireTV-CategoriesTop100-DisableInterestAds
crawl) seemingly makes no difference to the number and
types of leaks to trackers except nearly 50% fewer channels
leak the AD ID when the option is enabled.
We also observed that the trackers collecting the AD ID reduced
by nearly half. However, as Table 8 shows, the remaining traffic,
including the other identifiers communicated to trackers, remained
largely the same.
Both Roku and Amazon state in their developer documentation
that if the privacy option is enabled, the AD ID “should not be
used for targeted advertising” [64] or to “collect information about
the user’s behavior to build user profiles for advertising purposes”.
Nevertheless, developers can use the AD ID for activities such as
frequency capping, contextual advertising, conversion tracking,
reporting, and security and fraud detection [4, 66]. Our data, how-
ever, reveals that even when the privacy option is enabled, there
are a number of other identifiers that can be used to track users,
bypassing the privacy protections built into these platforms5.
Pi-hole’s network-level blocking. Pi-hole uses a modified ver-
sion of dnsmasq to block DNS queries containing unwanted hosts.
Pi-hole blocks DNS queries based on hostnames, although a wild-
card blocking feature was recently added6. Pi-hole comes with a
default list of blocked hostnames, but does not come with wildcard
patterns at the install time.
Reading through the Pi-hole’s source code, we compiled a list of
hostnames that it blocks by default. Pi-hole’s installation wizard
offers seven different lists that are turned on by default7. In our
simulations we assumed the user would select all lists offered to
them, the most conservative approach. We then simulated Pi-hole
blocking on the data we collected.
Pi-hole blocked 4,226 of the 18,075 HTTP requests made in
the Roku-Top1K-MITM crawl. This corresponds to 71% of the 5,983
requests blocked by four other blocking lists (EasyList, EasyPri-
vacy, Disconnect and Ghostery). Inspecting the hostnames of these
missed requests, we found that Pi-hole’s blocklist actually contained
hostnames from 38 of the 70 domains that were missed. The missed
requests were commonly due to a different subdomain of the same
tracker.
Simulating Pi-hole’s blocking of the information leaks we find
that 26.7% of the AD ID leaks and 44.6% of the serial number leaks
5In fact, to comply with the European Union’s General Data Protection Regulation
(“GDPR”), Roku sets the Limit Ad Tracking value to “true” on all devices in the EU [68],
which seems inadequate given our result.
6https://docs.pi-hole.net/ftldns/regex/overview/
7https://git.io/fjNsi
Channel
Count
266
175
145
145
90
79
74
74
73
66
Domain
doubleclick.net
google-analytics.com
scorecardresearch.com
roku.com
ifood.tv
tremorhub.com
stickyadstv.com
irchan.com
monarchads.com
1rx.io
Channel
Count
678
108
50
45
32
29
27
24
24
22
Table 9: Most prevalent domains contacted over unen-
crypted connections in the Roku-Top1K-NoMITM (left) and
the FireTV-Top1K-NoMITM (right) crawls.
Domain
amazon-adsystem.com
scorecardresearch.com
ifood.tv
images-amazon.com
cloudinary.com
titantv.com
wsi.com
cdn01.net
lightcast.com
demdex.net
Rank Hostname
api.cld.dtvce.com
apicache.vudu.com
vudu.d1.sc.omtrdc.net
Channel Name
DIRECTV NOW
VUDU
VUDU
NBC
Fox News Channel
fuboTV Watch Live Sports & TV
fuboTV Watch Live Sports & TV
fuboTV Watch Live Sports & TV
Newsy
MTV
Table 10: Top channels where TLS Connections were in-
tercepted and decrypted by our smart mitmproxy (Roku-
Top1K-MITM crawl).
7
15
15
19 ws-cloudpath.media.nbcuni.com
35
43
43
43
45
54
api.segment.io
api.fubo.tv
api.segment.io
app.launchdarkly.com
cloudapi.imrworldwide.com
auth.mtvnservices.com
are missed by Pi-hole. Finally, we list the domains that received
these IDs and were missed by Pi-hole in Table12 in Appendix E.
5.5 Network Connection Security
5.5.1 Unencrypted Connections. Analyzing the requests sent over
port 80 we found that 794 of the 1000 Roku channels sent at least
one request in cleartext. Those channels contacted 191 distinct
hosts from 123 distinct domains without encryption.
Similarly, 762 of the 1000 Fire TV channels sent at least one
unencrypted request. The top 10 domains contacted over insecure
connections by Roku and Amazon are shown in Table 9. Notably,
Google and Amazon own the domains that are contacted by most
channels without encryption.
5.5.2 Certificate validation. On Amazon Fire TV, we were able to
install our own cert on the device which allowed us to intercept
HTTPS requests on 957 of the 1000 channels in the FireTV-Top1K-
MITM crawl. On Roku, a total of 43 channels failed to properly
verify the server’s certificate and allowed the smart proxy to decrypt
the TLS traffic. Table 10 shows the top ten TLS connections (by
channel rank) that our smart proxy was able to decrypt in the
Roku-Top1K-MITM crawl. Finally, we performed an analysis of the
TLS cipher suites used by different channels which can be found in
Appendix D.
5.6 Remote Control API Vulnerabilities
To investigate other ways OTT devices may compromise user pri-
vacy and security, we analyzed local API endpoints of Roku and
Fire TV. OTT devices expose such interfaces to enable debugging,
remote control, and home automation by mobile apps and other
automation software [65, 78]. In the past, security researchers iden-
tified several vulnerabilities of these interfaces, including Cross-Site
Request Forgery [75] and DNS Rebinding [1, 14]. Recently, Roku’s
External Control API, which we used in this study to automate
our crawls, was found to be vulnerable to a DNS Rebinding at-
tack [50, 65]. Moreover, similar attacks were found to be exploited
in the wild by exploit kits for malicious advertising purposes [34].
We limited our analysis of local interfaces to attacks by mali-
cious web scripts considering the large attack surface and limited
resources needed by an attacker. To perform this attack, the attacker
may run a malicious script (e.g. by running ads) on websites visited
by a user browsing from the same network that the OTT device is
connected to (e.g. a home network).
To discover available API endpoints, we installed mobile remote
control apps and reverse engineered the HTTP traffic while sending
available remote control commands to OTT devices. We also made
use of the API documentation available for the devices to discover
endpoints that were missing in the captured traffic [65, 78].
Roku: Roku has an extensive external control API that enables
automation by third-party software [65]. The API allows sending
commands to install/uninstall/change channels and retrieve device
information. The device information returned by the API includes
the complete list of installed channels, unique device identifiers (e.g.
MAC address, Ad ID, serial no), and SSID of the wireless network
that the device is connected to.
Analyzing the headers sent by Roku to remote control requests,
we discovered that Roku sends “*” in the “Access-Control-Allow-
Origin:” header. The “*” value relaxes cross-origin restrictions in
the browser and allows scripts from an arbitrary domains to read
cross-origin resources without being limited by the Same Origin
Policy [47]. This exposes Roku devices to attacks from all web pages
visited by Roku users.
We set up a page to demonstrate the attack and verified that a
malicious web page visited by Roku users (or third-party scripts
embedded on them) can abuse the External Control API to:
• Send commands to install/uninstall/launch channels and
collect unique identifiers from Roku devices - even when the
connected display is turned off.
• Geolocate Roku users via the SSID of the wireless network
and WiFi SSID & Geolocation databases (such as WiGLE [80]).
• Extract MAC address, serial number, and other unique iden-
tifiers to track users or respawn tracking identifiers (similar
to evercookies [35]).
• Get the list of installed channels and use it for profiling pur-
poses. For instance, the existence of health/religion/children
focused channels can be used to infer victims’ sensitive per-
sonal attributes and their lifestyles.
We reported the vulnerability to Roku in December 2018. Roku
addressed the issue by changing the value in the “Access-Control-
Allow-Origin” header. They finalized rolling out their security fix