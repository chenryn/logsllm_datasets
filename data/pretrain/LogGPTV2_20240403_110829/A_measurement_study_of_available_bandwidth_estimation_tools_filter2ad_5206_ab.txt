### Receiver Operation
The receiver averages individual samples using a sliding window over 100 packets.

### Spruce Characteristics
Spruce distinguishes itself from other available bandwidth tools through the following properties:

1. **Poisson Process of Packet Pairs**: Unlike traditional methods that use packet trains or chirps, Spruce employs a Poisson process for packet pairs. This approach ensures that Spruce is both non-intrusive and robust, as detailed in §3.1.

2. **Bottleneck Queue Management**: By carefully selecting the value of \(\Delta_{in}\), Spruce ensures that the bottleneck queue does not empty between the two probes in a pair. This is essential for the correctness of the gap model.

3. **Separation of Capacity and Available Bandwidth Measurement**: Spruce separates capacity measurement from available bandwidth measurement. It assumes that capacity can be easily measured using existing capacity measurement tools and that this capacity remains stable during the available bandwidth measurement. For the environments where Spruce is designed to operate, such as selecting paths in overlay networks, this assumption holds true.

4. **Low Probe Rate**: Spruce avoids overwhelming narrow links on a path by maintaining a probe rate that does not exceed the minimum of 240 Kb/s and 5% of the capacity of the narrow link.

5. **Minimal Tunable Parameters**: Apart from the number of pairs \(K\) over which to average the measurements, Spruce does not have any tunable parameters.

### Absolute Accuracy Evaluation
We evaluate the ability of Pathload, IGI, and Spruce to compute available bandwidth in real network settings. These three tools are chosen because they cover the spectrum of underlying models: Pathload is a pure PRM (Packet Reception Model) tool, Spruce is a pure PGM (Packet Gap Model) tool, and IGI borrows from both models. IGI first identifies the turning point where the sending rate of probes matches their receiving rate. It then sends a train of packets at this rate and computes the available bandwidth using probe gap information.

#### Methodology: The MRTG Test
The Multi-Router Traffic Grapher (MRTG) [19] reports the amount of traffic forwarded by a router interface. It collects its measurements from the router's Management Information Base (MIB) using SNMP, generating a reading every 5 minutes. Given the capacity of the link, MRTG data allows us to compute the average available bandwidth every 5 minutes. Despite its low resolution, MRTG data is the most accurate way to verify the output of available bandwidth estimation tools.

This method requires access to MRTG logs from all links along the path and knowledge of the capacity of all traversed links. Due to these requirements, we apply the MRTG test only to a pair of paths for which we have such data. One path, traversing MIT’s campus network, consists of 5 hops with an RTT of 4 ms. Its tight and narrow link is a 100 Mb/s Ethernet connecting the Lab of Computer Science (LCS) to the rest of the MIT network. The other path is from UC Berkeley to MIT over the Abilene network, with 17 hops and an RTT of 76 ms. This path also has a tight and narrow link of 100 Mb/s, while the remainder of the path is 1 Gb/s or faster. Although these paths may not be representative of most Internet paths, they are typical of many university networks.

We monitor these paths over a period of one week, totaling 130 hours. We repeatedly run Pathload, followed by IGI, and then Spruce. All three tools use the same sender and receiver machines. Since MRTG data provides an average over a 5-minute period, we smooth the measurements by taking the average output of each tool over similar 5-minute periods.

Occasionally, we actively increase the cross-traffic traversing the monitored path to discover the responsiveness of the measurement tools to changing network conditions. The cross-traffic sender is different from the machine running the tools, and the cross-traffic uses UDP (though similar results were obtained with TCP cross-traffic). We generate cross-traffic by playing NLANR [1] traces at an adjustable rate while maintaining the same packet size. This ensures that the packet size distribution of our cross-traffic follows the size distribution in the Internet.

#### MRTG Test Results
Figures 3 and 4 illustrate typical segments of our results, plotting the available bandwidth over a period of a day as measured by MRTG, Pathload, IGI, and Spruce. In Figure 3, from hour 5 to 10, we inject cross-traffic at a rate of 20 Mb/s. From hour 10 to 12, we increase the generated cross-traffic rate to 40 Mb/s. The rest of the time, we only monitor the path using the various tools. In Figure 4, we inject cross-traffic at 20 Mb/s from hour 10 to 14.

The main observation from Figures 3 and 4 is that Pathload was consistently inaccurate, either over- or under-estimating the available bandwidth. IGI, on the other hand, did not respond well to changes in network conditions.

[Insert Figures 3 and 4 here]

**Figure 3:** MRTG available bandwidth estimate vs. Pathload, IGI, and Spruce. Data is for a 100 Mb/s path connecting LCS to the MIT network.

**Figure 4:** MRTG available bandwidth estimate vs. Pathload, IGI, and Spruce. Data is for a 100 Mb/s path connecting LCS to the MIT network.