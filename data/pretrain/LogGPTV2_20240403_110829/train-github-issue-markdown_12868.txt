In continuous deployment scenarios, it is common to update Elasticsearch's client and index independently. This can lead to a situation where the `fieldValueFactorFunction` is added to the client, but the index has not yet been rebuilt. To handle this, I have used the `missing` property. However, the `FieldValueFactorFunctionParser` requires that the field be present in the mapping; otherwise, it throws an exception. As a result, we cannot deploy the updated client until the index is updated, even though the `missing` property is set.

To address this issue, I suggest modifying the behavior of the `FieldValueFactorFunctionParser` to check for the `missing` property when the field is missing from either the document or the mapping. This would allow for more flexible and independent updates of the client and index.