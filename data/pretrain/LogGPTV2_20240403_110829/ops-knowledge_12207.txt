User: 请使用Python自动化脚本扩展已有的虚拟机资源。
Assistant: 下面是示例Python脚本，用于扩展已有虚拟机资源：

```python
#!/usr/bin/env python
import sys
import requests

#定义vCenter信息
vcenter_host = "vcenter.example.com"
vcenter_user = "admin"
vcenter_passwd = "password"
vcenter_port = 443

vm_name = sys.argv[1]
vm_memory = sys.argv[2]
vm_cpu = sys.argv[3]

#获取vCenter的session id
session_url = "https://" + vcenter_host + ":" + str(vcenter_port) + "/rest/com/vmware/cis/session"
response = requests.post(session_url,auth=(vcenter_user,vcenter_passwd),verify=False)
session_id = response.json()['value']

#定义API路径、请求头和请求体
vm_url = "https://" + vcenter_host + ":" + str(vcenter_port) + "/rest/vcenter/vm/" + vm_name
headers = {'Content-Type': 'application/json','vmware-api-session-id': session_id}
body = {"spec": {"memory": int(vm_memory)*1024**2,"cpu": {"count": int(vm_cpu)}}}

#执行修改虚拟机配置的请求
response = requests.patch(vm_url,headers=headers,json=body,verify=False)

if response.status_code == 200:
    print("虚拟机 %s 扩展成功" % vm_name)
else:
    print("虚拟机 %s 扩展失败，错误代码：%d" % (vm_name,response.status_code))

#注销session
session_logout_url = "https://" + vcenter_host + ":" + str(vcenter_port) + "/rest/com/vmware/cis/session"
response = requests.delete(session_logout_url,auth=(vcenter_user,vcenter_passwd),verify=False)
```

该脚本指定了要扩展的虚拟机名称、内存大小和CPU数量，会自动连接到vCenter服务器并使用REST API来修改虚拟机配置。请注意使用该脚本需要安装Requests库。