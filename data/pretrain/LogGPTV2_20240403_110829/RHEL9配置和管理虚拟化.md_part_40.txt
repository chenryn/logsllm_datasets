    ```
:::
::: itemizedlist
**其它资源**
-   [使用 Web 控制台管理虚拟
    CPU](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance "使用 Web 控制台管理虚拟 CPU"){.link}
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance}使用 Web 控制台管理虚拟 CPU {.title}
:::
使用 RHEL 9 web 控制台，您可以查看并配置 web
控制台连接的虚拟机使用的虚拟 CPU。
::: itemizedlist
**先决条件**
-   Web 控制台 VM 插件
    [已安装在您的系统上](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html#setting-up-the-rhel-web-console-to-manage-vms_managing-virtual-machines-in-the-web-console "设置 web 控制台以管理虚拟机"){.link}。
:::
::: orderedlist
**步骤**
1.  在 [Virtual Machines]{.guimenu} 界面中，点您要查看信息的虚拟机。
    这时将打开一个新页面，其中包含有关所选虚拟机的基本信息，以及访问虚拟机的图形界面的
    Console 部分。
2.  点 Overview 窗格中的 vCPU 数量旁边的[编辑]{.guibutton}。
    此时会出现 vCPU 详情对话框。
    ::: informalfigure
    ::: mediaobject
    ![显示 VM CPU
    详情对话框的镜像。](images/virt-cockpit-configure-vCPUs.png){width="540"}
    :::
    :::
:::
::: orderedlist
1.  为所选虚拟机配置虚拟 CPU。
    ::: itemizedlist
    -   [**vCPU 数量**]{.strong} - 当前正在使用的 vCPU 数量。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        vCPU 数量不能超过 vCPU 的最大值。
        :::
    -   [**vCPU 最大**]{.strong} - 可为虚拟机配置的最大虚拟 CPU
        数。如果这个值大于 [**vCPU
        Count**]{.strong}，可以为虚拟机附加额外的 vCPU。
    -   [**插槽**]{.strong} - 向虚拟机公开的插槽数量。
    -   [**每个插槽的内核数**]{.strong} -
        向虚拟机公开的每个插槽的内核数。
    -   [**每个内核的线程数**]{.strong} -
        向虚拟机公开的每个内核的线程数。
        请注意，
        [**插槽**]{.strong}、[**每个插槽的内核数**]{.strong}和[**每个内核的线程数**]{.strong}选项调整了虚拟机的
        CPU 拓扑。这对 vCPU
        性能可能有用，并可能会影响客户机操作系统中特定软件的功能。如果您的部署不需要不同的设置，请保留默认值。
    :::
2.  点[应用]{.guibutton}。
    配置了虚拟机的虚拟 CPU。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    对虚拟 CPU 设置的更改仅在重启虚拟机后生效。
    :::
:::
::: itemizedlist
**其他资源**
-   [使用命令行界面添加和删除虚拟
    CPU](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance "使用命令行界面添加和删除虚拟 CPU"){.link}
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#configuring-numa-in-a-virtual-machine_optimizing-virtual-machine-cpu-performance}在虚拟机中配置 NUMA {.title}
:::
以下方法可用于在 RHEL 9
主机上配置虚拟机(VM)的非一致性内存访问(NUMA)设置。
::: itemizedlist
**先决条件**
-   主机是一个与 NUMA 兼容的机器。要检测是否是这种情况，请使用
    `virsh nodeinfo`{.literal} 命令并查看 `NUMA cell(s)`{.literal} 行：
    ``` literallayout
    # virsh nodeinfo
    CPU model:           x86_64
    CPU(s):              48
    CPU frequency:       1200 MHz
    CPU socket(s):       1
    Core(s) per socket:  12
    Thread(s) per core:  2
    NUMA cell(s):        2
    Memory size:         67012964 KiB
    ```
    如果行的值为 2 或更高，则主机与 NUMA 兼容。
:::
::: title
**流程**
:::
为了便于使用，您可以使用自动化实用程序和服务设置虚拟机的 NUMA
配置。但是，手动 NUMA 设置可能会显著提高性能。
[**自动方法**]{.strong}
::: itemizedlist
-   将虚拟机的 NUMA 策略设置为 `Preferred`{.literal}。例如，对于
    [*testguest5*]{.emphasis} 虚拟机要这样做：
    ``` literallayout
    # virt-xml testguest5 --edit --vcpus placement=auto
    # virt-xml testguest5 --edit --numatune mode=preferred
    ```
-   在主机上启用自动 NUMA 均衡：
    ``` literallayout
    # echo 1 > /proc/sys/kernel/numa_balancing
    ```
-   使用 `numad`{.literal} 命令自动将 VM CPU 与内存资源匹配。
    ``` literallayout
    # numad
    ```
:::
[**手动方法**]{.strong}
::: orderedlist
1.  将特定 vCPU 线程固定到特定主机 CPU 或者 CPU 范围。在非 NUMA
    主机和虚拟机上也可以这样做，我们推荐您使用一种安全的方法来提高 vCPU
    性能。
    例如，以下命令将 [*testguest6*]{.emphasis} 虚拟机的 vCPU 线程 0 到 5
    分别固定到主机 CPU 1、3、5、7、9 和 11：
    ``` literallayout
    # virsh vcpupin testguest6 0 1
    # virsh vcpupin testguest6 1 3
    # virsh vcpupin testguest6 2 5
    # virsh vcpupin testguest6 3 7
    # virsh vcpupin testguest6 4 9
    # virsh vcpupin testguest6 5 11
    ```
    之后，您可以验证操作是否成功：
    ``` literallayout
    # virsh vcpupin testguest6
    VCPU   CPU Affinity
    ----------------------
    0      1
    1      3
    2      5
    3      7
    4      9
    5      11
    ```
2.  固定 vCPU 线程后，您还可以将与指定虚拟机关联的 QEMU
    进程线程固定到特定的主机 CPU 或 CPU 范围。例如：以下命令将
    [*testguest6*]{.emphasis} 的 QEMU 进程线程 固定到 CPU 13 和
    15，确认成功：
    ``` literallayout
    # virsh emulatorpin testguest6 13,15
    # virsh emulatorpin testguest6
    emulator: CPU Affinity
    ----------------------------------
           *: 13,15
    ```
3.  最后，您还可以指定将具体分配给特定虚拟机的主机 NUMA
    节点。这可提高虚拟机 vCPU 的主机内存用量。例如，以下命令将
    [*testguest6*]{.emphasis} 设置为使用主机 NUMA 节点 3 到
    5，确认成功：
    ``` literallayout
    # virsh numatune testguest6 --nodeset 3-5
    # virsh numatune testguest6
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
为了获得最佳性能，建议使用以上列出的所有手动调优方法
:::
::: itemizedlist
**其它资源**
-   [vCPU
    性能调整场景示例](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#sample-vcpu-performance-tuning-scenario_optimizing-virtual-machine-cpu-performance "vCPU 性能调整场景示例"){.link}
-   使用 `numastat`{.literal} 程序 [查看系统的当前 NUMA
    配置](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#virtual-machine-performance-monitoring-tools_optimizing-virtual-machine-performance-in-rhel "虚拟机性能监控工具"){.link}
-   目前无法在 IBM Z 主机上执行 NUMA 调整
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#sample-vcpu-performance-tuning-scenario_optimizing-virtual-machine-cpu-performance}vCPU 性能调整场景示例 {.title}
:::
为了获得最佳 vCPU 性能，红帽建议一起使用手动
`vcpupin`{.literal}、`emulatorpin`{.literal} 和 `numatune`{.literal}
设置，例如在以下场景中。
::: itemizedlist
**起始场景**
-   您的主机有以下与硬件相关的信息：
    ::: itemizedlist
    -   2 个 NUMA 节点
    -   每个节点上的 3 个 CPU 内核
    -   每个内核有 2 个线程
    :::
    此类机器的 `virsh nodeinfo`{.literal} 的输出类似如下：
    ``` literallayout
    # virsh nodeinfo
    CPU model:           x86_64
    CPU(s):              12
    CPU frequency:       3661 MHz
    CPU socket(s):       2
    Core(s) per socket:  3
    Thread(s) per core:  2
    NUMA cell(s):        2
    Memory size:         31248692 KiB
    ```
-   您要修改一个现有的、带有 8 个 vCPU
    的虚拟机，这意味着它并不适用于一个 NUMA 节点。
    因此，您应该在每个 NUMA 节点上分发 4 个 vCPU，并使 vCPU
    拓扑尽可能地与主机拓扑类似。这意味着，作为给定物理 CPU
    的同级线程运行的 vCPU
    应该固定到同一内核上的主机线程。详情请查看以下[*解决方案*]{.emphasis}:
:::
::: orderedlist
**解决方案**
1.  获取主机拓扑的信息：
    ``` literallayout
    # virsh capabilities
    ```
    输出应包含类似如下的部分：
    ``` programlisting
          15624346
          3906086
          0
          0
          15624346
          3906086
          0
          0