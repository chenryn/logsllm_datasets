and Suricata both allow users to compare the new query
with the previous trafﬁc. Therefore, we implemented our
detection mechanism in Bro and Suricata. All
in all, we
notice slight differences when implementing this solution
using Bro and Suricata. Suricata has a few problems in its
earlier version, such as before version 2.1, users are not able
to use the Suricata library to extract ﬂow information; only a
few examples show how to create a Suricata script and few
documents explain the functions in each library. In contrast,
Bro gives more sample scripts and libraries for extracting
packet
its online documentation is
well organised and maintained. We tested Bro and Suricata
solutions in our test environment (Fig. 7).
information. Generally,
We launched DNS reverse reconnaissance attacks from an
attacker (2001:0df:0000:2005:0a00:27ff:fe0e:662d) by send-
ing sequential reverse lookup queries to the DNS server
(2001:0df:0000:2003::0:35) for probing for live IPv6 records.
We implemented the DNSG solution in both Bro and Suricata
Attacker
2001:0df:0000:
2005:0a00:27ff:
fe0e:662d
Router
IDS Monitor
with the 
DNSG solution
Local DNS Server
2001:0df:0000:
2003::0:35
Fig. 7: Logical network diagram for simulating a DNS recon-
naissance attack: An attacker installed the THC-IPv6 package,
an IDS monitor has DNSG implemented and a local DNS
server has the reverse zone conﬁgured.
and tested each IDS individually against the reconnaissance
attack. The results show that both IDSs detected the attack
and generated the correct alarms. The following output shows
an example of a log ﬁle after detecting an IPv6 reverse
reconnaissance attack.
SourceIP:2001:0df:0000:2005:0a00:27ff:fe0e
:662d SrcPort:49290 DestinationIP
:2001:0df:0000:2003::0:35 DstPort:53
Protocol:UDP Query:PTR
0.5.0.0.2.0.0.0.0.0.f.d.0.1.0.0.2.ip6.
arpa
SourceIP:2001:0df:1000:2005:0a00:27ff:fe0e
:662d SrcPort:47291 DestinationIP
:2001:0df:0000:2003::0:35 DstPort:53
Protocol:UDP Query:PTR
1.5.0.0.2.0.0.0.0.0.f.d.0.1.0.0.2.ip6.
arpa
Detection the DNS reverse searching from
2001:0df:0000:2005:0a00:27ff:fe0e:662d
to 2001:0df:0000:2003::0:35;
Frequency 2
I. Related Work
There have been several recent studies on IPv6 recon-
naissance attacks. We can divide state-of-art approaches into
two categories: IPv6 address allocation strategies and DNS
enumeration techniques.
1) IPv6 Address Allocation Strategies: It is less feasible
to scan the entire 2128 address space, but some previous
studies [2], [4], [18], [19], [20] have shown the possibility of
reducing the address search space. Existing studies discovered
that manually conﬁgured IPv6 addresses contain common
patterns. If an attacker discovers these patterns from the
IID ﬁeld, the attacker can easily reduce the address search
space. For instance, some network administrators sequen-
tially increased the IID ﬁeld when generating a new IPv6
address (e.g., 2001:1218:100c:1::1, 2001:1218:100c:1::2 and
2001:1218:100c:1::d). Or, they encode each byte of an IPv4
address into each 16-bit ﬁeld of the IID. For instance, if
a host had an IPv4 address ‘194.109.20.106’ in the cur-
rent network, a network administrator will move this host
into an IPv6 network (2001:888:0::/48) with a subnet ID
0x24. The new IPv6 address for this host would look like
358
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:20 UTC from IEEE Xplore.  Restrictions apply. 
2001:888:0:24:194:109:20:106. In 2008, Malone [19] con-
ducted a experiment
to study the IPv6 address usage on
different servers. He collected IPv6 trafﬁc from a mirror server
located in HEAnet10. As a result, he found that 70% of routers
used the small integer allocation mechanism, and 5% of routers
used the Embedded IPv4 scheme. One year later, Karpilovsky
et al. [20] obtained IPv6 trafﬁc from an IPv6 Internet gateway
router in a US tier-1 Internet Service Provider (ISP) and ex-
amined the ratios of various IID allocation mechanisms. They
observed the changes of embedding the existing IPv4 address
into a new IPv6 address from April to September in 2009.
They found that in April 2009 49.5% of IPv6 addresses had the
existing IPv4 address embedded into a new IPv6 address (the
Embedded-IPv4 scheme); but ﬁve months later, the data had
been updated and only 6.1% of users were using addresses that
were generated using the Embedded-IPv4 scheme. Again, in
2013, Gont and Chown [2] analyzed IPv6 addresses obtained
from web servers, name servers, mail servers and clients.
Some interesting trends emerged in their results. Network
administrators have put increasing emphasis on security and
privacy in IPv6 address allocation strategy. They observed
69.7% of clients use random IPv6 addresses. However, some
legacy methods are still used by network administrators, such
as a signiﬁcant amount of exposure to EUI-64 based addresses
(14.31%). Hu et al. provide an assessment of active IPv6
addresses by monitoring incoming and outgoing trafﬁc from
the University of Auckland (UoA) in 2014 [4]. They found
that network administrators still prefer to manually conﬁgure
IPv6 addresses. The EUI-64 address allocation strategy is
widely used in UoA, because this mechanism can help their
network administrators to manage the network more easily.
Plonka and Berger [18] have shown the trend of address
allocation mechanisms usage around the world during the last
seven years (2008-2015). They used a large Content Delivery
Network (CDN) access statistics as their dataset and observed
IPv6 transition mechanisms are still used by large mobile
carriers to provide native end-to-end IPv6 transport, i.e., 6to4
[24], 646-XLAT [25] and DS-Lite [26]. The major difference
between our study and previous works is that the previous
studies focus more on how to reduce the address search space
and address allocation strategies. Our work investigates the
feasibilities of launching IPv6 address scanning and presents
a novel methodology to collect IPv6 addresses from public
DSN servers. Moreover, existing studies used no publicly
accessible environment to collect their dataset, e.g., CDN,
IXP or larger Internet Service Providers (ISPs). This study
focuses on reproducibility of our experiment so as to allow
other researchers to generate similar results; we used public
data sources in this work.
2) DNS Enumeration Techniques: Several groups have
done global scanning by using DNS reverse lookup techniques.
In early 2014, Hu et al. [7] mentioned the potential issues of
deploying DNS servers in in IPv6 networks. They collected
IPv6 reverse records by utilising the public DNS servers. In
10Ireland’s National Research & Education Network
2016, Fiebig et al. [3] use the same technique. Basically, they
enumerated IPv6 reverse records by sending reverse lookup
queries to public DNS servers. We repeat their experiments
to provide new insights of DNS server deployment in 2017.
Furthermore, we extended their research by measuring the
security impact of putting the IPv6 addresses into an NSEC
enabled domain. To the best of our knowledge, none of the
existing studies has used this methodology to globally collect
IPv6 addresses.
VI. DISCUSSION
Network reconnaissance is one of the most important in-
dicators of an impending network attack. In this section, we
discuss possible design choices to deploy DNSG and make
recommendations for both vendors and network administra-
tors.
Network administrators should reconsider IPv6 address
allocation strategies. Many previous studies [2], [4], [18],
[19], [20] already suggested that common patterns could be
leveraged by attackers to cut down the search space for the
IID ﬁeld. However, we found that some network administrators
still do not allocate non-predictable values to IPv6 interface
ID ﬁelds, but are using predictable patterns in their IIDs. Our
results show that a high percentage of server addresses do not
use a random IID allocation mechanism; we presume that this
is because network administrators want to identify the servers
as soon as possible if any security issues occur. In contrast,
large numbers of IPv6 client addresses are generated by using
a random IID allocation mechanism, which indicates that
network administrators have started to consider privacy and
security when they allocate an IID ﬁeld for IPv6 clients. Again,
we described a few techniques to use against IPv6 address
scanning attacks, such as the replacement of EUI-64 IID
with privacy-based or randomised IID allocation mechanisms.
Overall, we believe that network administrators should avoid
having predictable values in their IID ﬁelds.
DNS servers need secure IPv6 conﬁguration. The DNS
reconnaissance and DNSSEC surveys in Section III show that
IPv6 DNS servers are often deployed with minimal protection.
Network administrators need to prioritise making their IPv6
DNS conﬁguration more secure by default. For instance, in
[7], Hu et al. suggested removing the reverse DNS domain in
the IPv6 network, because it is not a compulsory requirement
to set it up. Again, Laurie et al. [27] proposed the NSEC3 RR
to ﬁx the DNSSEC zone walk issue that was introduced by
NSEC RR. We strongly encourage network administrators to
consider and apply these suggestions.
three IDSs cannot detect
Security vendors should implement DNS reconnaissance
detection. By default,
the DNS
reconnaissance attack. By carefully investigating the detection
mechanisms in the default rules, we ﬁnd that all three IDSs
have good support for detecting the most common attacks,
but there is no support for new IPv6 attacks. We implemented
our solution using Bro and Suricata. As a result, we can
detect DNS reconnaissance attack in our experiment network.
However, Snort does not allow us to implement this new
359
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:20 UTC from IEEE Xplore.  Restrictions apply. 
mechanism. After analysing the Snort design structure, we
comment that it does not provide a global data structure for
storing the ﬂow information and cannot be modiﬁed. We urge
security companies to consider new IPv6 security challenges
and update their products.
DNS Guard Deployment scenarios. From the deployment
point of view, it is possible to deploy DNSG at the ISP level,
where it would protect the communication channel between
the client and local DNS resolver; any DNS attacks will trigger
the system to drop or log the malicious packets. The only
concern is the local DNS resolver security. If the local DNS
resolver is compromised, then DNS attacks would become
invisible to DNSG. Therefore, we suggest that network ad-
ministrators should frequently patch the system and restrict
the security level on their public DNS servers.
VII. CONCLUSIONS AND FUTURE WORK
In this paper, we demonstrated the possibilities of launching
an address scanning attack on the existing IPv6 network. We
highlighted some potential issues in the current IPv6 DNS
deployment. For example, network administrators prefer to
reuse IPv4 deployment strategies and put predictable values in
their IPv6 address space; they save the IPv6 client addresses
in the DNS reverse zone without any protection, or they still
use the vulnerable NSEC records in their DNSSEC enabled
zones. These poor implementations lead to a security issue
in that attackers can easily probe the DNS server to obtain
the IPv6 addresses information. Building on this observation,
we proposed a solution that helps network administrators to
detect the DNS attacks mentioned in this work. Furthermore,
we implemented our solution on Bro and Suricata; both
open-source NIDSs detected DNS attacks in the experiment
network.
There are a number of areas of future research related to
our study. In this study, we showed that the current IPv6
network is still vulnerable to reconnaissance attacks. However,
there are still more attacks that can be used to cause serious
security issues in IPv6 networks. We plan to evaluate these
new IPv6 vulnerabilities in the real IPv6 network and demon-
strate the feasibility of various responses. In addition, we
only demonstrated the possibility of implementing the DNSG
solution in IDS, but not the performance of our solution.
We will investigate the performance of DNSG in different
network environments. Subsequently, some new challenges of
using DHCPv6 in the Android operating system have been
discovered by [28], [29], they claimed that mobile devices
can either obtain the IPv6 addresses through Stateless Address
Autoconﬁguration (SLAAC) [30] or DHCP-Preﬁx delegation
(DP) [31]. If the mobile device is conﬁgured to use the
former, that will certainly raise privacy issues [2]. Through a
comprehensive study of IPv6 address allocation mechanisms
for the IPv6 mobile devices based on the privacy and security,
we may contribute more to the knowledge base of IPv6
deployment.
REFERENCES
[1] S. Deering and R. Hinden, “Internet Protocol, version 6 (IPv6) speciﬁ-
cation,” IETF RFC 2460, 2008.
[2] T. Chown and F. Gont, “Network reconnaissance in IPv6 networks,”
IETF RFC 7707, 2016.
[3] T. Fiebig, K. Borgolte, S. Hao, C. Kruegel, and G. Vigna, Something
from Nothing (There): Collecting Global IPv6 Datasets from DNS.
Cham: Springer International Publishing, 2017, pp. 30–43. [Online].
Available: https://doi.org/10.1007/978-3-319-54328-4 3
[4] N. Brownlee and H. Qinwen, “How interface ID allocation mechanisms
are performed in IPv6,” in Proceedings of the 2014 CoNEXT on Student
Workshop. ACM, 2014, pp. 26–27.
[5] C. A. Shue and A. J. Kalafut, “Resolvers revealed: Characterizing
Internet Technol.,
[Online]. Available:
DNS resolvers and their clients,” ACM Trans.
vol. 12, no. 4, pp. 14:1–14:17, July 2013.
http://doi.acm.org/10.1145/2499926.2499928
[6] J. Weber. (2016) How to walk DNSSEC zones: dnsrecon. webernetz.
[Online]. Available: https:
Last accessed: November 13, 2017.
//blog.webernetz.net/how-to-walk-dnssec-zones-dnsrecon/
[7] Q. Hu and N. Brownlee, “IPv6 host address usage survey,” International
Journal of Future Computer and Communication, vol. 3, no. 5, p. 341,
2014.
[8] J. H. Jafarian, E. Al-Shaer, and Q. Duan, “An effective address mutation
approach for disrupting reconnaissance attacks,” IEEE Transactions on
Information Forensics and Security, vol. 10, no. 12, pp. 2562–2577,
December 2015.
[9] M. Shema and B. Johnson, Anti-hacker Tool Kit, ser. Anti-Hacker
Tool Kit Series. McGraw-Hill/Osborne, 2004. [Online]. Available:
https://books.google.co.nz/books?id=jPdSAAAAMAAJ
[10] A. Klein, H. Shulman, and M. Waidner, “Internet-wide study of DNS
cache injections,” in IEEE INFOCOM 2017 - IEEE Conference on
Computer Communications, May 2017, pp. 1–9.
[11] A. A. Maksutov, I. A. Cherepanov, and M. S. Alekseev, “Detection and
prevention of DNS spooﬁng attacks,” in 2017 Siberian Symposium on
Data Science and Engineering (SSDSE), April 2017, pp. 84–87.
[12] P. van Dijk. (2016) Finding IPv6 hosts by effciently mapping ip6.arpa.
[Online]. Available: http://7bits.nl/blog/posts/ﬁnding-v6-hosts-
7bits.
by-efﬁciently-mapping-ip6-arpa
[13] S. Thomson, C. Huitema, V. Ksinant, and M. Souissi, “DNS extensions
to support IP version 6,” IETF RFC 1886, 1995.
[14] M. L. D. M. R. Arends, R. Austein and S. Rose, “DNS security
introduction and requirements,” IETF RFC 4033, 2005.
[15] J. Schlyter, “DNS Security (DNSSEC) NextSECure (NSEC) RDATA
Format,” IETF RFC 3845, 2005.
[16] P. van Dijk. (2016) THC-IPv6. GitHub. [Online]. Available: https:
//github.com/vanhauser-thc/thc-ipv6
[17] (2016) Regional internet registries statistics. Last accessed: November
http://www-public.it-sudparis.eu/
[Online]. Available:
2017.
13,
maigron/RIR\ Stats
[18] D. Plonka and A. Berger, “Temporal and spatial classiﬁcation of active
the 2015 Internet Measurement
IPv6 addresses,” in Proceedings of
Conference. ACM, 2015, pp. 509–522.
[19] D. Malone, “Observations of IPv6 addresses,” in Passive and Active
Network Measurement. Springer, 2008, pp. 21–30.
[20] E. Karpilovsky, A. Gerber, D. Pei, J. Rexford, and A. Shaikh, “Quan-
tifying the extent of IPv6 deployment,” in Passive and Active Network
Measurement. Springer, 2009, pp. 13–22.
[21] S. R.M.Hinden and E. Nordmark, “IPv6 global unicast address format,”
IETF RFC 3587, 2003.
[22] S. E. Deering and R. M. Hinden, “IP version 6 addressing architecture,”
IETF RFC 4291, 2006.
[23] F. Gont, “A method for generating semantically opaque interface identi-
ﬁers with ipv6 stateless address autoconﬁguration (SLAAC),” IETF RFC
7217, 2014.
[24] B. Carpenter, “Advisory guidelines for 6to4 deployment,” IETF RFC
6343, 2011.
[25] M. K. Masataka Mawatari and C. Byrne, “464XLAT: Combination of
stateful and stateless translation,” IETF RFC 6877, 2013.
[26] J. W. Alain Durand, Ralph Droms and Y. L. Lee, “Dual-stack lite
broadband deployments following IPv4 exhaustion,” IETF RFC 6333,
2011.
360
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:20 UTC from IEEE Xplore.  Restrictions apply. 
[27] R. A. Ben Laurie, Geoffrey Sisson and D. Blacka, “DNS security
(DNSSEC) hashed authenticated denial of existence,” IETF RFC 5155,
2008.
[28] J. Sanders. (2016) Android’s lack of DHCPv6 support poses security
and IPv6 deployment
issues. Last accessed: November 13, 2017.
[Online]. Available: http://www.techrepublic.com/article/androids-lack-
of-dhcpv6-support-poses-security-and-ipv6-deployment-issues/
[29] Soulskill.
(2016)
IT Pros Blast Google Over Android’s Refusal
To Play Nice With IPv6. Last accessed: November 13, 2017.
[Online]. Available: https://tech.slashdot.org/story/15/06/23/2047259/it-
pros-blast-google-over-androids-refusal-to-play-nice-with-ipv6
[30] T. N. Susan Thomson and T. Jinmei, “IPv6 stateless address autocon-
ﬁguration,” IETF RFC 4862, 2007.
[31] O. Troan and R. Droms, “IPv6 Preﬁx Options for Dynamic Host
Conﬁguration Protocol (DHCP) version 6,” IETF RFC 3633, 2007.
361
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:20 UTC from IEEE Xplore.  Restrictions apply.