title:A control flow obfuscation method to discourage malicious tampering
of software codes
author:Yu-Lun Huang and
F. S. Ho and
Hsin-Yi Tsai and
H. M. Kao
Y. L. Huang 
Assistant Professor
National Chiao-Tung 
University, Taiwan 
+886-3-5131476
F. S. Ho 
Manager
Alpha Networks, Inc., 
Hsinchu, Taiwan 
+886-3-5636666
H. Y. Tsai 
National Chiao-Tung 
University, Taiwan 
+886-3-5712121
H. M. Kao 
Manager
Institute for Information 
Industry, Taiwan 
+886-2-2739-9616
PI:EMAIL
A Control Flow Obfuscation Method to Discourage 
Malicious Tampering of Software Codes 
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
The paper presents  a  control  flow  obfuscaton  method  to 
dscourage  reverse  engneerng  and  malcous  tamperng  of 
software  codes.  Gven  the  orgnal source  codes  and  desred 
obfuscaton crtera, the proposed method works by decomposng 
the  source  codes  nto  fragments  and then applyng varous
transforms  to  the  code  fragments.  As  the  output  of  our  method,
the transformed fragments are re-assembled and obfuscated wth 
the desgnated obfuscaton crtera. Moreover, snce only control 
flows  are  obfuscated  wth  a  sequence  of  transformatons  that 
produce  equvalent  results  of  the  orgnal  fragments,  the  fnal 
output can stll preserve the same executon results as the orgnal 
codes. The proposed method can be combned wth other securty
technologes  lke  watermarkng  or  fngerprntng  and  thus  help
dscouragng software pracy by makng watermarked nformaton 
embedded n software codes dffcult to be reverse engneered or 
tampered.
Keywords Software Obfuscaton, Intellectual Property Protecton, 
Control  Flow  Obfuscaton,  Reverse  Engneerng,  Tamper-
Resstance
Recently, protecton of ntellectual property rghts has been one of
the  major  challenges  wth  the  rapd  growth  of  moble servces,
where  moble  codes  are  dstrbuted  n  the  forms of executables.
Here the dlemma s between dstrbutng executable codes whle
mantanng  ther  secrecy  and  ntegrty.  The  ablty  to  reverse 
engneer and alter these  executables  can  mperl  the  ntellectual 
property  rghts  thus  encourage  the software  pracy,  whch  has 
always been one  of  the  sgnfcant  economc  problems  n  the 
software ndustres and results n massve proft loss. 
In  ths  paper,  we  propose  a  control  flow  obfuscaton  method, 
whch  s  focused  on  the  source-code  level obfuscaton of hgh-
level  programmng  languages  lke C or  Pascal.  Before  applyng
the proposed obfuscaton method, a  source  program  must  frstly
be decomposed to a drected graph of control flows and ts entry
pont.  For  any  gven  source  program,  we  can  parse  the  source
program and derve two sets of code blocks and branches together 
wth ther relatonshp. To obscure a program, a set of transforms 
Permsson to make dgtal or hard copes of all or part of ths work for
personal or classroom use s granted wthout fee provded that copes are
not  made  or  dstrbuted  for  proft or  commercal  advantage  and  that 
copes  bear  ths  notce  and  the  full  ctaton  on  the  frst  page. To copy
otherwse, or republsh, to  post  on  servers  or  to  redstrbute  to  lsts,
requres pror specfc permsson and/or a fee.
ASIACCS’06, March –, 00, Tape, Tawan.
Copyrght 00 ACM ---0/0/000…$.00.
.

mplement 
the  equvalent  codes, 
should  be  appled  to  the  source  program.  We  present  four 
fundamental sets  of  transformatons  whch  nclude  branch,  splt, 
reorder and arbtrary transforms. 
Three  types  of  branch  transforms  are  proposed to nsert three
types of opaque predcates (always true, always false and random)
nsde  a  gven  code  block.  Splt  transform tres  to  obfuscate  a 
code block n further  by  dvdng  t  nto  many  small  peces.
Reorder transform tres to obfuscate a code block by shftng t to
another  locaton  n  the  program  whle  preservng the same
executon result. Arbtrary transform s any type of transformaton
to be nserted to a place that wll never be reached. Therefore, an 
arbtrary transform  can  be 
mplemented  arbtrarly.  These
transforms  are  the  basc  buldng  blocks  of  other  advanced or
composte  transforms,  whch  offer  more  complex  obfuscaton
results.
The  mplementaton  of  equvalent  codes  s  one  of  the  crtcal 
ponts n mplementng  the  opaque  predcates.  In  ths  paper,  we 
present four possble methods n creatng equvalent codes durng 
the  obfuscaton.  To 
the
dependency of the statements n the orgnal blocks should frst be 
analyzed. If dependency exsts n  the  statements  of  the  orgnal 
blocks,  then  nsertng  dummy  code,  nlne-outlne method or
creatng parallel tasks can be appled to the creaton of equvalent 
codes. Otherwse,  the  fourth  method,  reorderng  statements,  can 
also be used to create the equvalent codes. The above transforms
manpulate the control flow of a program  to make t dffcult to
observe ts orgnal structure. 
If we consder the sde effects of obfuscatng a software code that 
code  sze  can  be  ncreased  and  executon  tme  can  be  slowed
down, we  need  to  carefully  determne  the  crtera  for  dfferent 
applcatons  and  make  a  proper  judgment  and  compromse 
between the securty and overhead. Practcally, we only need to 
manpulate  the  codes  that  must be protected aganst tamperng.
For example,  codes  wth  embedded  watermarks,  codes  that 
mplement  access  control  functons  and  confdental  algorthms
are some of the good targets for obfuscaton. On the other hand, 
not all portons n a software  code  need  to  be  obfuscated.  For 
example, 
for
obfuscaton,  and  obfuscatng  a publcly  avalable  functon  may
not be necessary. Provdng the expected effort of de-obfuscaton, 
potency and reslence of obfuscaton transformatons can be used 
to assess the strength and robustness of obfuscated codes and then 
suggest a better composton of the transformaton sequence that 
should be appled to the orgnal codes. 
The work s supported n part  by Alpha Networks, Inc. and Insttute for 
Informaton Industry, Tawan.
tmng-crtcal  codes  are  not  good 
targets