---
**作者**: Sam Bocetta  
**类别**: 观点  
**评论数据**: 无  
**统计信息**:
- 评论数: 0
- 收藏次数: 0
- 点赞数: 0
- 分享次数: 0
- 浏览量: 3250  
**日期**: 2020-07-24 22:53:52  
**编辑推荐**: 否  
**摘要**: 您更关注安全性还是软件交付？或者两者可以兼得吗？  
**来源链接**: <https://opensource.com/article/20/7/devsecops-vs-agile>  
**ID**: 12449  
**是否精选**: 是  
**大图**: /data/attachment/album/202007/24/225337mb44xoe2byvz4x4o.jpg  
**永久链接**: /article-12449-1.html  
**图片**: /data/attachment/album/202007/24/225337mb44xoe2byvz4x4o.jpg.thumb.jpg  
**相关文章**: 无  
**审阅者**: wxy  
**选择人**: lujun9972  
**标签**:
- DevSecOps
- 敏捷  
**缩略图**: 否  
**标题**: DevSecOps 和敏捷软件开发有什么不同？  
**标题图片**: 是  
**翻译者**: windgeek  
**更新时间**: 2020-07-24 22:53:52  
---

您是更注重安全性还是软件交付，抑或是希望二者兼顾？

![](/data/attachment/album/202007/24/225337mb44xoe2byvz4x4o.jpg)

在技术社区中，DevSecOps 和敏捷软件开发这两个术语经常被交替使用。虽然它们都旨在尽早识别风险，但两者在改变团队工作方式方面存在显著差异。

DevSecOps 基于一些敏捷开发的原则，但它特别强调集成安全功能，而敏捷开发则侧重于软件交付。了解如何保护网站或应用程序免受勒索软件和其他威胁的侵害，实际上取决于所采用的软件和系统开发方法。这可能会影响您选择使用 DevSecOps、敏捷开发，还是两者的结合。

### DevSecOps 与敏捷软件开发的区别

主要区别在于对安全性的重视程度。这取决于您的软件开发实践，以及何时、何地、由谁实施安全措施，可能会有很大不同。

每个企业都需要 IT 安全来保护其重要数据。如果一家公司真正重视 IT 安全，通常会采取虚拟专用网络（VPN）、数字证书、防火墙保护、多因素身份验证、安全的云存储等措施，并向员工介绍基本的网络安全知识。

当您信任 DevSecOps 时，就相当于将公司的安全问题视为持续集成和交付的一部分。DevSecOps 方法论从一开始就强调安全性，并将其作为整体软件质量不可或缺的组成部分。

基于 DevSecOps 的三大安全原则：
* 平衡用户访问便利性和数据安全性。
* 使用 VPN 和 SSL 加密数据，防止传输过程中的攻击。
* 使用能够扫描新代码的安全漏洞并通知开发人员的工具，以预测和防范未来的风险。

尽管 DevOps 一直意图包含安全性，但并非所有组织都能始终如一地做到这一点。DevSecOps 在 DevOps 的演进中提供了更加明确的方向。尽管名称相似，但不应混淆这两者。在 DevSecOps 模型中，安全性是团队的主要驱动力。

另一方面，敏捷开发专注于迭代开发周期，这意味着反馈不断融入到持续的软件开发过程中。敏捷的关键原则包括拥抱变化、为客户和用户提供竞争优势、紧密合作以及在整个过程中保持技术卓越和效率。除非敏捷团队在其定义中包含安全性，否则安全性在敏捷软件开发中往往会被忽视。

### 国防机构面临的挑战

美国国防部（DoD）是一个致力于最大化安全性的组织之一。2018 年，美国国防部发布了针对软件开发中“假敏捷”或“名义上的敏捷”的指南，以警告高管注意不良编程问题，并说明如何发现和避免这些风险。

不仅美国国防部可以从这些方法中受益，医疗保健和金融部门也保存着大量必须保证安全的敏感数据。通过采用 DevSecOps，美国国防部正在改变其防御形式。特别是在 2020 年 2 月发生的大规模数据泄露事件中，这一点尤为重要。

将网络安全最佳实践转化为现实中的开发仍然存在固有风险。事情不可能 100% 完美进行。最好的情况是稍微有些不便，最坏的情况则是带来新的风险。

特别是那些为军用软件编写代码的开发人员，可能对所有应采用 DevSecOps 的情境没有透彻的理解。学习曲线很陡峭，但为了更大的安全性，这是必要的痛苦。

### 自动化时代的新模式

为解决对先前安全措施日益增长的担忧，美国国防部承包商开始评估 DevSecOps 模型。关键是将其部署到持续的服务交付环境中。

应对这一问题出现了三个方向。首先是自动化，它已在大多数隐私和安全工具中广泛使用，包括 VPN 和增强隐私的移动操作系统。大型云基础设施中的自动化无需依赖人为检查和平衡，可以自动处理持续维护和安全评估。

第二个方向专注于过渡到 DevSecOps 所需的安全检查点。传统上，在系统设计初期并不期望数据在各个组件之间移动时仍可访问。

第三个也是最后一个方向涉及将企业的做法应用于军事软件开发。许多国防部的承包商和雇员来自商业领域而非军事领域。他们的背景为他们提供了为大型企业提供网络安全的知识和经验，可以将其带入政府部门职位。

### 值得克服的挑战

转向基于 DevSecOps 的方法论也提出了一些挑战。在过去十年中，许多组织已经完全重新设计了其开发生命周期，以适应敏捷开发实践。不久之后再次转换看起来令人生畏。

企业应该放心，因为即使美国国防部也在这种过渡中遇到了麻烦。展望未来，切换到 DevSecOps 不会比切换到敏捷软件开发更痛苦。通过将创建安全性的价值添加到开发工作流程中，并利用现有敏捷开发的优势，企业可以获得很多收益。

---
**作者**: [Sam Bocetta](https://opensource.com/users/sambocetta)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**译者**: [windgeek](https://github.com/windgeek)  
**校对**: [wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。