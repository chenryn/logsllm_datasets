1 
软件安全漏洞挖掘 
技术探讨 
文伟平 博士 
北京大学软件与微电子学院 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
漏洞挖掘技术难点 
漏洞挖掘本身的难度 
函数模型（Windows 7之前系统） 
逻辑模型 
安全开发平台 
云计算 
虚拟化 
系统安全对抗 
Windows 7，8系统安全防护机制  
IE 的Use after Free 
GS，SafeSEH，DEP和ASLR 
ROP，Heap Spray，JIT Spray 
SharedUserData 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
漏洞挖掘和利用的技术难点 
Windows8内存保护
传统内存保护
堆内存保护
GS
SEHProtect
ASLR
DEP
Randomized LFH
PageGuard
VTGuard
FreeEntryOffset
Removed
Anti-ROP
其他内存保护
NullPage 
Protection
VirtualAlloc
Randomization
GS↑
SEH 
Protect
ASLR↑
DEP↑
ForceASLR
HeASLR
Anti-ROP
Windows 8
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
软件漏洞挖掘相关技术 
基于Crash信息的漏洞挖掘技术 
参考安全补丁的漏洞挖掘技术 
系统内核函数无序调用挖掘技术 
基于协议握手的测试漏洞挖掘技术 
基于浏览器对象UAF漏洞挖掘技术 
基于FLASH对象UAF漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 系统转储文件 
基于Crash信息的漏洞挖掘技术 
完全内存转
储 
核心内存转
储 
小内存转储 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 KTRAP_FRAME陷阱帧 
基于Crash信息的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 定位函数 
基于Crash信息的漏洞挖掘技术 
最后执行的函数为win32k!SfnINSTRING，接
下来应该利用IDA工具分析该函数的反汇编代码，判
断是否存在逻辑缺陷，判断是否可以进一步利用。 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 静态分析相关代码，确定原因 
基于Crash信息的漏洞挖掘技术 
win32k!SfnINSTRIN
G函数执行过程中，对用户
态空间传递过来的wParam、
lParam没有做任何判断，
复制[esi+8]处的数据时，
也没有限制[esi+8]是内核
地址还是用户态地址。如
果esi、[esi+8]是一个不可
访问的内存地址，那么将
会导致无法访问内存而蓝
屏崩溃。 
MS11-054发现过程 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
  由补丁引发的思考 
通常安全补丁对漏洞代码的修
改及代码运行流程基本不会有太大
的变化。而这种漏洞修补方式可能
存在如下安全隐患: 
1) 软件厂商修补漏洞缺乏全局
考虑, 通常只注重对漏洞点的修补； 
2) 往往只考虑当前漏洞的上下
文环境, 而未必考虑到整个系统或者
第三方代码对全局变量或逻辑条件
带来的影响。 
参考安全补丁的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
  参考安全补丁比对的漏洞挖掘思路 
软件安全补丁面临安全隐患 
分析补丁，找出补丁所
修补的代码位置以及实
际出现问题的代码位置 
路径查找、条件执行、符
号执行，判断代码内部是
否存在新的安全漏洞 
1、路径查找会找到所有可
能的执行路径 
2、条件执行会尝试执行这
些路径，以判断当前路径是
否是实际可执行的 
3、符号执行通过代码变量
的逻辑抽象与控制流相结合
得到条件约束，最后通过约
束求解的方法，来判断代码
内部是否存在安全漏洞。 
参考安全补丁的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
       以某漏洞为例验证参考安 
全补丁漏洞挖掘技术的有效性： 
专门为针对这个补丁而增设的标
志位VdmSafe。漏洞点B及补丁点
P已经定位。 
    通过分析可知，该补丁可能存
在新的安全隐患，补丁后攻击代码
实现攻击流程如右图所示： 
   参考安全补丁技术应用 
参考安全补丁的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
  北 京 大 学 软 件 安 全 研 究 小 组 发 现 的
MS11-010进一步证明了参考安全补丁技术
的有效性。 
  该漏洞是在分析MS10-011安全补丁的基
础上，采用本方法发现的一个安全漏洞。 
  MS10-011补丁为以下情况：B点和P点
位于不同的函数中，补丁增加了运行至B点
的逻辑条件，而这个逻辑条件是普通用户构
造某些函数进行特定序列调用可以进行修改
的，从而逻辑条件被恶意利用导致新的安全
隐患。 
   参考安全补丁技术应用 
P点： 补丁所修补的代码位置       
B点： 实际出现问题的代码位置 
B点和P点位于不同的基本块中，
且B点和P点分布在不同函数中。
这种安全漏洞修补方式，最有可
能存在安全隐患。 
参考安全补丁的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 系统内核漏洞 
      随着Windows 7 / 8 操作系统发布，多种对抗内存攻击
的安全防护机制使得传统的基于内存的攻击越来越困难，在这
种情况下，内核漏洞往往可以作为突破安全防线的切入点。 
 Windows内核模块，如win32k.sys等 
 第三方驱动程序 
 安全软件对SSDT、ShadowSSDT的处理 
系统内核函数无序调用挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 API序列的乱序组合 
 一个正常功能的实现依赖一组API调用序列 
 任意改变这组序列，会有意想不到的结果 
  序列中的函数多次调用 
  调用顺序改变 
  特定的条件或参数 
 序列中的API一般情况下是Undocumented API 
系统内核函数无序调用挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
 API乱序组合绕过MS10-011 
 关闭ApiPort时，系统将会向Csrss发送一个类型为
LPC_PORT_CLOSED（0x5）的消息。在CsrApiRequestThread函数
中处理该类型消息有代码如下 
若走过这段流程，足以让我们绕过补丁了！ 
系统内核函数无序调用挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
连接ApiPort，置标识为1
调用BaseSrvExitProcess函数
标识为1,引用计数为1
关闭ApiPort，置标识为0
连接ApiPort，置标识为1
关闭ApiPort，置标识为0
调用BaseSrvExitProcess函数
标识为0，引用计数为0
成功脱链！
系统内核函数无序调用挖掘技术 
 API乱序组合绕过MS10-011补丁 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
   非开源网络软件漏洞挖掘 
非开源网络软件漏洞挖掘的“公理”——协议Fuzzing测试 
测试空间极大 
基于协议握手的漏洞挖掘技术 
小组主页：www.pku-exploit.com 
联 系 Q Q：513357938 
   共识：对测试用例进行裁剪 
 网络应用程序的潜在漏洞往往存在于对发送 / 接收的网
络数据包进行处理的过程，进行Fuzzing测试时, 如果不考