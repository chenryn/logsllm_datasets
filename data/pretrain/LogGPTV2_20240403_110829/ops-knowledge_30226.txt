User: How to use Docker to build a static website based on Nginx? Please include steps such as writing the Dockerfile, building the container, and mapping the local directory.
Assistant: The following are the steps to build a Nginx-based static website using Docker: 1. Create a new directory for storing project files and Dockerfile. 2. Create a new file in this directory and name it Dockerfile. This file is used to describe the build steps of the container. 3. Write the following code in the Dockerfile: ``` FROM nginx:latest COPY ./site-content /usr/share/nginx/html ``` This code means to build a new image based on the latest version of the Nginx image , and copy the files in the site-content folder under the current directory to the main directory of the container. 4. Then use the following command to build the Docker image: ``` docker build -t my-nginx-site . ``` -t specifies the name of the image, and '.' indicates the current directory where the Dockerfile is located. Once the build is complete, you should see a new mirror named "my-nginx-site" in your list of local mirrors. 5. Bind the local directory and start the container: ``` docker run -p 8080:80 -v /path/to/local/folder:/usr/share/nginx/html my-nginx-site ``` This command will Start a new container and map port 8080 to port 80 inside the container. The -v parameter specifies that the local specific folder (/path/to/local/folder) is mapped to the /usr/share/nginx/html folder in the container. 6. After the startup is complete, you can visit your static website by visiting http://localhost:8080. Note: In this case, we copy the files in the site-content folder under the current directory where the Dockerfile is located to the container's home directory. If you want to modify the location of this folder, modify the COPY instruction in the Dockerfile accordingly and modify the directory mapped in the -v parameter when running the container.