> 
> 要在类 Unix 系统中设置内核参数，请首先编辑文件 `/etc/sysctl.conf`。进行更改后，保存文件并运行 `sysctl -p` 命令。此命令使更改永久生效，而无需重新启动计算机
> 
> 
> 
**13、解释一下 `/proc` 文件系统。**
> 
> `/proc` 文件系统是虚拟的，并提供有关内核、硬件和正在运行的进程的详细信息。由于 `/proc` 包含虚拟文件，因此称为“虚拟文件系统”。这些虚拟文件具有独特性。其中大多数显示为零字节。
> 
> 
> 虚拟文件，例如 `/proc/interrupts`、`/proc/meminfo`、`/proc/mounts` 和 `/proc/partitions`，提供了系统硬件的最新信息。其他诸如 `/proc/filesystems` 和 `/proc/sys` 目录提供系统配置信息和接口。
> 
> 
> 
**14、如何在没有密码的情况下以其他用户身份运行脚本？**
> 
> 例如，如果你可以编辑 sudoers 文件（例如 `/private/etc/sudoers`），则可以使用 `visudo` 添加以下[内容](https://github.com/trimstray/test-your-sysadmin-skills)：
> 
> 
> `user1 ALL =（user2）NOPASSWD：/opt/scripts/bin/generate.sh`
> 
> 
> 
**15、什么是 UID 0 toor 帐户？是被入侵了么？**
> 
> `toor` 用户是备用的超级用户帐户，其中 `toor` 是 `root` 反向拼写。它预期与非标准 shell 一起使用，因此 `root` 的默认 shell 不需要更改。
> 
> 
> 此用途很重要。这些 shell 不是基本发行版的一部分，而是从 ports 或软件包安装的，它们安装在 `/usr/local/bin` 中，默认情况下，位于其他文件系统上。如果 root 的 shell 位于 `/usr/local/bin` 中，并且未挂载包含 `/usr/local/bin` 的文件系统，则 root 无法登录以解决问题，并且系统管理员必须重新启动进入单用户模式来输入 shell 程序的路径。
> 
> 
> 
### 更难的问题
这是你可能会遇到的甚至更困难的问题：
**16、`tracert` 如何工作，使用什么协议？**
> 
> 命令 `tracert`（或 `traceroute`，具体取决于操作系统）使你可以准确地看到在连接到最终目的地的连接链条中所触及的路由器。如果你遇到无法连接或无法 `ping` 通最终目的地的问题，则可以使用 `tracert` 来帮助你确定连接链在何处停止。（[引文](https://www.wisdomjobs.com/e-university/network-administrator-interview-questions.html)）
> 
> 
> 通过此信息，你可以联系正确的人；无论是你自己的防火墙、ISP、目的地的 ISP 还是中间的某个位置。 `tracert` 命令像 `ping` 一样使用 ICMP 协议，但也可以使用 TCP 三步握手的第一步来发送 SYN 请求以进行响应。
> 
> 
> 
**17、使用 `chroot` 的主要优点是什么？我们何时以及为什么使用它？在 chroot 环境中，`mount /dev`、`mount /proc` 和 `mount /sys` 命令的作用是什么？**
> 
> chroot 环境的优点是文件系统与物理主机是隔离的，因为 chroot 在文件系统内部有一个单独的文件系统。区别在于 `chroot` 使用新创建的根目录（`/`）作为其根目录。
> 
> 
> chroot 监狱可让你将进程及其子进程与系统其余部分隔离。它仅应用于不以 root 身份运行的进程，因为 root 用户可以轻松地脱离监狱。
> 
> 
> 该思路是创建一个目录树，在其中复制或链接运行该进程所需的所有系统文件。然后，你可以使用 `chroot()` 系统调用来告诉它根目录现在位于此新树的基点上，然后启动在该 chroot 环境中运行的进程。由于该命令因此而无法引用修改后的根目录之外的路径，因此它无法在这些位置上执行恶意操作（读取、写入等）。（[引文](https://unix.stackexchange.com/questions/105/chroot-jail-what-is-it-and-how-do-i-use-it)）
> 
> 
> 
**18、如何保护你的系统免遭黑客攻击？**
> 
> 遵循最低特权原则和这些做法：
> 
> 
> * 使用公钥加密，它可提供出色的安全性。
> * 增强密码复杂性。
> * 了解为什么要对上述规则设置例外。
> * 定期检查你的例外情况。
> * 让具体的人对失败负责。（它使你保持警惕。）（[引文](https://serverfault.com/questions/391370/how-to-prevent-zero-day-attacks)）
> 
> 
> 
**19、什么是 LVM，使用 LVM 有什么好处？**
> 
> LVM（逻辑卷管理）是一种存储设备管理技术，该技术使用户能够合并和抽象化组件存储设备的物理布局，从而可以更轻松、灵活地进行管理。使用设备映射器的 Linux 内核框架，当前迭代（LVM2）可用于将现有存储设备收集到组中，并根据需要从组合的空间分配逻辑单元。
> 
> 
> 
**20、什么是粘性端口？**
> 
> 粘性端口是网络管理员最好的朋友，也是最头痛的事情之一。它们允许你设置网络，以便通过将交换机上的每个端口锁定到特定的 MAC 地址，仅允许一台（或你指定的数字）计算机在该端口上进行连接。
> 
> 
> 
**21、解释一下端口转发？**
> 
> 尝试与安全的网络内部的系统进行通信时，从外部进行通信可能非常困难，这是很显然的。因此，在路由器本身或其他连接管理设备中使用端口转发表可以使特定流量自动转发到特定目的地。例如，如果你的网络上运行着一台 Web 服务器，并且想从外部授予对该服务器的访问权限，则可以将端口转发设置为该服务器上的端口 80。这意味着在 Web 浏览器中输入你的（外网）IP 地址的任何人都将立即连接到该服务器的网站。
> 
> 
> 请注意，通常不建议允许从你的网络外部直接访问服务器。
> 
> 
> 
**22、对于 IDS，误报和漏报是什么？**
> 
> 当入侵检测系统（IDS）设备为实际上没有发生的入侵生成警报时，这是 误报（假阳性）   false positive 。如果设备未生成任何警报，而入侵实际上已发生，则为 漏报（假阴性）。
> 
> 
> 
**23、解释一下 `:(){ :|:& };:`，如果已经登录系统，如何停止此代码？**
> 
> 这是一枚复刻炸弹。它分解如下：
> 
> 
> * `:()` 定义了函数，以 `:` 作为函数名，并且空括号表示它不接受任何参数。
> * `{}` 是函数定义的开始和结束。
> * `:|:` 将函数 `:` 的副本加载到内存中，并将其输出通过管道传递给函数 `:` 的另一个副本，该副本也必须加载到内存中。
> * `＆` 使前一个命令行成为后台进程，因此即使父进程被自动杀死，子进程也不会被杀死。
> * `:` 执行该函数，因此连锁反应开始。
> 
> 
> 保护多用户系统的最佳方法是使用特权访问管理（PAM）来限制用户可以使用的进程数。
> 
> 
> 复刻炸弹的最大问题是它发起了太多进程。因此，如果你已经登录系统，我们有两种尝试解决此问题的方法。一种选择是执行一个 `SIGSTOP` 命令来停止进程，例如：
> 
> 
> `killall -STOP -u user1`
> 
> 
> 如果由于占用了所有进程而无法使用命令行，则必须使用 `exec` 强制其运行：
> 
> 
> `exec killall -STOP -u user1`
> 
> 
> 对于复刻炸弹，最好的选择是防患于未然。
> 
> 
> 
**24、什么是 OOM 杀手，它如何决定首先杀死哪个进程？**
> 
> 如果内存被进程彻底耗尽，可能会威胁到系统的稳定性，那么 内存不足   out of memory （OOM）杀手就登场了。
> 
> 
> OOM 杀手首先必须选择要杀死的最佳进程。*最佳*在这里指的是在被杀死时将释放最大内存的进程，并且对系统来说最不重要。主要目标是杀死最少数量的进程，以最大程度地减少造成的损害，同时最大化释放的内存量。
> 
> 
> 为了实现此目标，内核为每个进程维护一个 `oom_score`。你可以在 `/proc` 文件系统中的 `pid` 目录下的看到每个进程的 `oom_score`：
> 
> 
> `$ cat /proc/10292/oom_score`
> 
> 
> 任何进程的 `oom_score` 值越高，在内存不足的情况下被 OOM 杀手杀死的可能性就越高。（[引文](https://unix.stackexchange.com/a/153586/8369)）
> 
> 
> 
### 总结
系统管理人员的薪水[差别很大](https://blog.netwrix.com/2018/07/23/systems-administrator-salary-in-2018-how-much-can-you-earn/)，有些网站上说年薪在 70,000 到 100,000 美元之间，具体取决于地点、组织的规模以及你的教育水平以及多年的工作经验。系统管理的职业道路最终归结为你对使用服务器和解决那些酷问题的兴趣。现在，我要说，继续前进，实现你的梦想之路吧！
---
via: 
作者：[DirectedSoul](https://opensource.com/users/directedsoul) 选题：[lujun9972](https://github.com/lujun9972) 译者：[wxy](https://github.com/wxy) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出