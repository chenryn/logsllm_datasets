e
m
i
t
e
g
a
r
e
v
A
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
Brute Force
Hybrid
)
c
e
s
(
e
m
i
t
e
g
a
r
e
v
A
 80
 70
 60
 50
 40
 30
 20
 10
 0
1
2
3
4
1
2
3
4
Low
Medium
High
Company/VO Level
Company/VO Level
(a) Varied database complexity
(b) Varied rule complexity
Policy Complexity
(c) Capability query
Figure 5: Performance results from evaluation within the VO scenario.
are much more expensive. This is an artifact of the “bushy
tree” dataset that we generated, as queries at level n can be
deﬁned using up to 3 CTM credentials, each of which may
intersect up to 3 roles at level n − 1. In practice, we would
expect to see far less bushy role structures.
Figure 5(c) describes the average time required to exe-
cute capability queries over medium sized databases of low,
medium, and high complexity. The brute force approach of
carrying out one proof of compliance query for each possi-
ble role in the database is compared against the algorithm
presented in Section 4.3. As expected, our algorithm out-
performs the brute force approach in all cases. In particular,
it does exceedingly well in the event that a higher percent-
age of the roles in the system are deﬁned using intersection
containment, as it can rely more on forward chaining.
5.4 Future Optimizations
While the use of dynamic views described in this paper has
the advantage of seamlessly adapting to changes in underly-
ing policy, the previous experiments show that this comes at
a signiﬁcant cost as the policies become increasingly nested.
One solution to this problem is to compile logical policies
into materialized, rather than dynamic, views. At a high
level, a materialized view is generated by issuing the query
that deﬁnes the view and saving the result set as a table
within the database. Further, a materialized view can be
indexed, while a dynamic view cannot. The result is that
queries to any role managed within the database could be
executed at the same speed as queries to the base tables.
The data shown in Figures 5(a)–(b) suggest that this would
imply large performance gains. Although MySQL currently
does not support materialized views, we plan to explore this
in the future using a DBMS like PostgreSQL or Oracle.
The eﬃciency gains that can be realized by materialized
views do not come without cost, however.
In particular,
materialized views (i) require much more space within the
database (1000s of rows) when compared to dynamic views
(stored as a single query), and (ii) must be regenerated on-
the-ﬂy to remain consistent with changes made to the tables
and views over which they are deﬁned (e.g., when logical
policies are edited). Fortunately, we do not see either of
these issues causing a problem in practice. With respect to
(i), disk and memory space are abundant in even low-end
enterprise servers. Similarly, Figures 5(a)-(b) imply that (ii)
can be addressed, as the cost of carrying out even complete
updates to a materialized view would be very low. Often
times, complete updates are not even needed to keep mate-
rialized views consistent, so Figures 5(a)-(b) could be viewed
as a conservative estimate of update cost within such a sys-
tem.
6. RELATED WORK
Digital credentials are one of the main techniques for ac-
cess control in cross-domain collaboration and resource shar-
ing. Due the decentralized nature of such applications, digi-
tal credentials are largely extended from simple bindings be-
tween public keys and identities to signed statements with
rich semantics, including roles, properties, logical inference
rules and even arbitrary programs. Extensive work has been
done in the areas of trust management [2, 3, 5, 20], trust ne-
gotiation [19, 27, 29, 30], and distributed proofs [1, 12, 15,
24]. These systems consider both centralized credentials
(where credentials are maintained in a well-known repos-
itory) and decentralized credentials (where credentials are
distributed among multiple entities). In terms of trust eval-
uation, a majority of work in the above areas focuses on com-
pliance checking, i.e., determining through logical inferences
Parameter Description
c
u
r
rpu
nm
pi
pl
pa
mi
mc
Number of companies or VOs at each level
Number of users in each base company
The number of roles in each company and VO
The number of roles assigned to each user
The number of companies or VOs making up each VO
Probability of generating an intersection containment credential
Probability of generating a linking containment credential
Probability of generating an aggregate containment credential
Maximum number of roles comprising an intersection containment
Maximum number of credentials deﬁning each role
Table 1: System parameters for the virtual organization scenario.
Values
3
100, 500, 1000
30
10
3
1.0, 0.9, 0.7
0.0, 0.05, 0.15
0.0, 0.05, 0.15
3
3
whether a principal belongs to a particular role or possesses
certain privileges. Except for [11], no previous work consid-
ered to build trust management systems on top of commod-
ity DBMSs. As mentioned before, the work in [11] focuses on
using databases as credential stores for trust management,
while the focus of this paper is to utilize the data process-
ing capability of DBMSs to improve trust policy evaluation
performance.
Though reputation-based trust has been studied exten-
sively in in the context of agent systems [13], online auc-
tions, pervasive computing and P2P systems [14, 28], its in-
tegration with credential-based trust is only considered re-
cently [4, 7]. As mentioned above, Lee and Yu [18] proposed
CTM, a formal framework to represent and interpret the
combination of vertical and horizontal trust. They do not
consider how to evaluate trust policies in CTM.
Traditional access control is often identity-based. Most
is implemented through access control lists (ACL), capabil-
ity lists or access control trips. Due to the simplicity of
such access control policies, the checking for a particular
privilege of a principal is straightforward and quite eﬃcient.
The eﬃciency of policy evaluation becomes important when
access control policies become complicated. One major ef-
fort is CPOL [8], which achieves high-perform policy evalu-
ation through indexing and caching techniques. Though the
policy language in CPOL is relatively expressive, it focuses
on simple delegation and location and temporal constraints.
CTM on the other hands supports more types of delegations
as well as the combination of credentials with reputations.
Therefore, the techniques in CPOL cannot be directly ap-
plied to our problem.
Li et al. [22] designed credential chain discovery algo-
rithms to answer the three types of queries for RT . Their
algorithms do not take advantage of supports from any ex-
isting software systems or tools.
In this paper, we try to
utilize as much functionality as possible for DBMSs to make
the trust evaluation engine eﬃcient, lightweight, and easy
to deploy.
As CTM is based on RT , which is based on logical infer-
ences, it is also possible to build a trust policy evaluation en-
gine using logic programming languages such as Prolog and
Datalog. However, such languages are often not well sup-
ported in commercial information systems.
In this paper,
we emphasize on utilizing the data processing capabilities in
existing IT infrastructures to make trust evaluation engines
not only eﬃcient but also lightweight and easy to deploy.
7. CONCLUSION
Despite much promising research into trust management
approaches to authorization, relatively little attention has
been given to exactly how these technologies can be eﬀec-
tively deployed. In this paper, we addressed one potential
avenue for supporting the deployment of logical trust man-
agement approaches by means of leveraging a key ﬁxture
of the IT landscape: the relational database. To this end,
we developed a two-tiered framework comprised of a logical
front end and a relational back end. We showed that simple
role membership credentials and reputation feedback reports
can be eﬃciently managed in the DBMSs base tables, and we
presented a correct and complete method for compiling col-
lections of logical CTM credentials into dynamic views stored
in the database. This relational representation can be used
to quickly perform proof of compliance checks or enumer-
ate all members of a given role. We also developed a novel
algorithm for answering capability queries that takes advan-
tage of forward chaining across the system’s logical ruleset
whenever possible, while also leveraging the database’s abil-
ity to quickly perform complex joins and aggregations in
situations where forward chaining would be ineﬃcient. An
initial evaluation of an unoptimized prototype implementa-
tion shows that our proposed approach is a viable solution
in even when making pessimistic assumptions regarding cre-
dential complexity.
In the future, we plan to move beyond the research pro-
totype phase and optimize the relational side of our frame-
work.
In Section 5.4 we discussed how the use of mate-
rialized, rather than dynamic, views would likely lead to
immense performance gains for our system. We plan to ex-
amine the relative costs involved with using materialized
views—including increased disk and memory utilization, as
well as overheads associated with keeping these views con-
sistent with changes to the underlying ruleset—and carry
out a detailed cost/beneﬁt analysis. We also plan to in-
vestigate eﬀective means applying our proposed framework
within decentralized organizations. In particular, we hope
to leverage information gleaned from centralized query plans
to develop eﬃcient algorithms for processing decentralized
trust queries across multiple domains. Another interesting
problem is to investigate how to support circular dependent
roles in DBMSs through, for example, recursive queries.
Acknowledgments. The research described in this paper
was supported by the National Science Foundation under
awards CCF-0916015 and CCF-0914946.
8. REFERENCES
[1] L. Bauer, S. Garriss, and M. K. Reiter. Distributed proving in
access-control systems. In Proceedings of the 2005 IEEE
Symposium on Security and Privacy, pages 81–95, May 2005.
[2] M. Y. Becker, C. Fournet, and A. D. Gordon. SecPAL: Design
and semantics of a decentralized authorization language.
Journal of Computer Security, 2009.
[3] M. Y. Becker and P. Sewell. Cassandra: Distributed access
control policies with tunable expressiveness. In Proceedings of
the Fifth IEEE International Workshop on Policies for
Distributed Systems and Networks, pages 159–168, June 2004.
[4] B. K. Bhargava and Y. Zhong. Authorization based on evidence
and trust. In International Conference on Data Warehousing
and Knowledge Discovery, pages 94–103, Aix-en-Provence,
France, Sept. 2002.
[5] M. Blaze, J. Feigenbaum, and J. Lacy. Decentralized trust
management. In Proceedings of the IEEE Conference on
Security and Privacy, pages 164–173, May 1996.
[6] M. Blaze, J. Feigenbaum, and M. Strauss. Compliance checking
in the PolicyMaker trust management system. In Proceedings
of the Second International Conference on Financial
Cryptography, number 1465 in Lecture Notes in Computer
Science, pages 254–274. Springer, Feb. 1998.
[7] P. Bonatti, C. Duma, D. Olmedilla, and N. Shahmehri. An
integration of reputation-based and policy-based trust
management. In Sematic Web and Policy Workshop, Galway,
Ireland, Nov. 2005.
[8] K. Borders, X. Zhao, and A. Prakash. CPOL:
High-performance policy evaluation. In Proceedings of the 12th
ACM Conference on Computer and Communications Security
(CCS), pages 147–157, Nov. 2005.
[9] B. Carminati, E. Ferrari, and A. Perego. Enforcing access
control in web-based social networks. ACM Transactions in
Information and System Security. to appear.
[10] B. Carminati, E. Ferrari, and A. Perego. A decentralized
security framework for web-based social networks.
International Journal of Information Security and Privacy,
2(4):22–53, 2008.
[11] S. D. C. di Vimercati, S. Jajodia, S. Paraboschi, and
P. Samarati. Trust management services in relational
databases. In Proceedings of the 2nd ACM Symposium on
Information, Computer and Communications Security
(ASIACCS), pages 149–160, Mar. 2007.
[12] T. Jim. SD3: A trust management system with certiﬁed
evaluation. In Proceedings of the IEEE Symposium on
Security and Privacy, pages 106–115, May 2001.
[13] A. Josang, R. Ismail, and C. Boyd. A survey of trust and
reputation systems for online service provision. Decis. Support
Syst., 43(2):618–644, 2007.
[14] S. Kamvar, M. Schlosser, and H. Garcia-Molina. EigenRep:
Reputation Management in P2P Networks. In Twelfth
International World Wide Web Conference, 2003.
[15] A. J. Lee, K. Minami, and N. Borisov.
Conﬁdentiality-preserving distributed proofs of conjunctive
queries. In ACM Symposium on Information, Computer, and
Communication Security (ASIACCS), Mar. 2009.
[16] A. J. Lee and M. Winslett. Enforcing safety and consistency
constraints in policy-based authorization systems. ACM
Transactions on Information and System Security, 12(2),
Dec. 2008.
[17] A. J. Lee and M. Winslett. Towards an eﬃcient and
language-agnostic compliance checker for trust negotiation
systems. In Proceedings of the 3rd ACM Symposium on
Information, Computer and Communications Security
(ASIACCS 2008), pages 228–239, Mar. 2008.
[18] A. J. Lee and T. Yu. Towards a dynamic and composite model
of trust. In Proceedings of the 14th ACM Symposium on
Access Control Models and Technologies (SACMAT), pages
217–226, June 2009.
[19] J. Li, N. Li, and W. H. Winsborough. Automated trust
negotiation using cryptographic credentials. In Proceedings of
the ACM Conference on Computer and Communications
Security, pages 46–57, Nov. 2005.
[20] N. Li and J. C. Mitchell. RT: A role-based trust-management
framework. In Proceedings of the Third DARPA Information
Survivability Conference and Exposition (DISCEX III), pages
201–212, Apr. 2003.
[21] N. Li, J. C. Mitchell, and W. H. Winsborough. Beyond
proof-of-compliance: security analysis in trust management.
Journal of the ACM, 52(3):474–514, 2005.
[22] N. Li, W. Winsborough, and J. Mitchell. Distributed Credential
Chain Discovery in Trust Management. Journal of Computer
Security, 11(1), Feb. 2003.
[23] N. Li, W. H. Winsborough, and J. C. Mitchell. Distributed
credential chain discovery in trust management. Journal of
Computer Security, 11(1):35–86, 2003.
[24] K. Minami and D. Kotz. Secure context-sensitive authorization.
Journal of Pervasive and Mobile Computing (PMC),
1(1):123–156, Mar. 2005.
[25] I. Molloy, N. Li, T. Li, Z. Mao, Q. Wang, and J. Lobo.
Evaluating role mining algorithms. In Proceedings of the 14th
ACM Symposium on Access Control Models and Technologies
(SACMAT), pages 95–104, 2009.
[26] J. Vaidya, V. Atluri, and J. Warner. Roleminer: mining roles
using subset enumeration. In Proceedings of the 13th ACM
Conference on Computer and Communications Security
(CCS), pages 144–153, 2006.
[27] W. H. Winsborough, K. E. Seamons, and V. E. Jones.
Automated trust negotiation. In DARPA Information
Survivability Conference and Exposition, Jan. 2000.
[28] L. Xiong and L. Liu. A reputation based trust model for
peer-to-peer ecommerce communities. In IEEE International
Conference on E-Commerce (CEC), 2003.
[29] T. Yu, M. Winslett, and K. E. Seamons. Supporting structured
credentials and sensitive policies through interoperable
strategies in automated trust negotiation. ACM Transaction
on Information and System Security (TISSEC), 6(1):1–42,
Feb. 2003.
[30] C. C. Zhang and M. Winslett. Distributed authorization by
multiparty trust negotiation. In ESORICS 2008, pages
282–299, Oct. 2008.