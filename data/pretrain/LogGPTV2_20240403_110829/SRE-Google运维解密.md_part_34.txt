优先级将一些任务分配给团队成员。未分配的职责仍由事故总控人负责。如果有必
事故总控负责人掌握这次事故的概要信息。他们负责组建事故处理团队，按需求和
第14章紧急事故管理
—甚至Mary。严格地讲，
---
## Page 185
确回复之前不得离开岗位。交接结果应该宣布给其他正在处理事故的人，明确目前的事
明确公开的职责交接
附录C提供了一篇示范性事故状态文档。这篇实时的文档可能比较混乱，但是必须得能
Google发现IRC对紧急事故处理非常有帮助。IRC系统非常可靠，同时可以为整个沟通
规划负责人（planning）
故总控负责人。
必须明确地声明：“从现在开始由你负责事故总控，请确认。”当前事故负责人在得到明
的情况交接给他。当新的事故总控负责人了解了目前事故情况时，当前事故总控负责人
果你将事故总控职责交接给另外一个地区的人时，可以通过电话或一次视频会议将目前
超出工作时间以后，事故总控负责人的职责能够明确、公开地进行交接是很重要的。如
有助于提高可用性。在事后总结时还要使用这篇文档。
够解决问题。使用模板来填写这个文档能容易一些，同时将最新信息发布在文档顶部也
不是什么好主意。
GoogleDocs团队使用Google Sites做这件事：利用你正要修复的服务来修复该服务恐怕
式存在，但是最好能够被多人同时编辑。大部分Google团队使用GoogleDocs，但是
事故总控负责人最重要的职责就是要维护一个实时事故文档。该文档可以以wiki的形
实时事故状态文档
发出的所有报警。IRC同时也是一个分布全球的团队协调工作的良好媒介。
的可以将事故处理的通信过程记录下来帮助事后总结分析，有的可以记录在事故过程中
过程提供记录，对处理过程中的细节记录非常有帮助。我们开发了一些IRC机器人，有
可能更希望在自已的办公位处理问题，通过IRC或者E-mail关注事态进展。
可以设立一个“作战室”（warroom），将处理问题的全部成员挪到该地办公。其他团队
受到事故影响的部门或者人需要知道他们可以与事故总控负责人联系。在很多情况下，
控制中心
处理过程中对系统进行的特殊操作，以便未来事故结束后能够复原。
Bug报告记录系统，给事务处理团队订晚餐，安排职责交接记录。同时负责记录在
规划负责人负责为事务处理团队提供支持，
负责处理一些持续性工作，例如填写
紧急事故的流程管理要素
143
一次流程管理良好的事故
166
续几个小时之后才想起流程管理更好。应当针对事故设立一个明确的宣布条件。Google
先宣布事故发生，随后找到一个简单解决方案，然后宣布事故结束，要比在问题已经持
什么时候对外宣布事故
开始规划一些结构性改变，使得这类问题在未来不会再重现。
解了问题，同时将事故做了了结，已经开始写事后总结了。问题解决了！她冲了点咖啡，
Mary第二天早上回到公司时，发现她身处大西洋另一端的同事已经定位了具体问题，缓
队的人）进行了职责交接。
让所有人都清楚目前的情况。在6点时，他们与他们的姐妹团队（另外一个办公室同团
要到下班时间了。她更新了事故状况文档。在5点45分时，她召开了一个简短的电话会议，
到下午5点时，Sabrina开始寻找接下来负责处理事故的替代人，因为她和她的同事们快
作。Robin和Josephine 通过阅读实时事故状况文档，很快熟悉了目前的情况。
Josephine上线之后，发现Robin也自愿加入进来。Sabrina 提醒Robin和Josephine，他
Sabrina 联系了Josephine。
询Mary现在是否需要联系研发团队负责人（目前是Josephine），得到Mary的首肯后
还要过问细节。Sabrina同时请了一个外部通信代表开始起草一篇用户通知。她随后又咨
状态更新邮件。这个电子邮件列表可以让VP们粗略了解到事故的目前进度，免得他们
当第三个警报来临时，Sabrina从IRC频道中看到了这条警报信息，立即又发送了一封
数据中心。”Sabrina将这条状态信息记录在了一个实时事故状况文档里。
问她的目前评估。“用户暂时还没有受到影响，我们现在只能抱希望不要再失去第三个
一个邮件列表。Sabrina意识到她还没有评估这次事故的影响范围，于是她转向Mary询
Mary描述的目前问题情况。她将这些细节写成了一封电子邮件，发送给了预先设立好的
Mary戳了一下Sabrina，“你可以当事故总控负责人吗？”，Sabrina点了点头，开始记录
正在迅速变得严重起来，她意识到通过事故处理流程管理框架来操作会更好。
查原因。不久之后，第二个报警来了，五个数据中心的第二个也出现了问题。因为问题
于是赶紧放下咖啡处理问题。事故：一个数据中心停止服务用户请求了。她立即开始调
现在是下午两点，Mary正在喝她今天的第三杯咖啡。手机报警的刺耳声音吓了她一跳
下面我们来看一下如何利用流程管理的理念，
144
第14章紧急事故管理
上面那起事故的处理结果是什么样的。
---
## Page 187
何对服务可靠性关注的组织团队都会从类似策略上获得帮助。
们能够降低事故的平均恢复时间（MTTR），同时减轻处理紧急事故的人的工作压力。
我们发现，通过事前准备一个事故流程管理策略，并确保平稳实施，以及经常测试，
小结
外一个地区的团队处理过的问题，以更好地熟悉事故流程管理体系。
理应该包含在其中。Google经常针对之前发生的灾难进行角色扮演式演习，比如演习另
如果你的组织经常进行灾难恢复演习（你应该这样做！参见文献[Kir12]），事故流程管
框架处理生产变更请求，那么在事故来临时，就可以很好地利用流程管理框架管理它
也适用于其他的跨时区、或者跨团队的常规运维变更实施。如果我们经常使用流程管理
们的流程管理技能呢？难道一定要制造更多事故吗？幸运的是，事故流程管理框架常常
如果平时不经常使用，事故流程管理的可靠性萎缩得很快。所以怎么使工程师不忘记他
团队依靠下面几个宽松的标准一
队成员熟悉流程中的其他角色。
换位思考：上次你是事故总控负责人吗？下次可以换一个职责试试。鼓励每个团
练习：平时不断地使用这项流程，直到习惯成自然。
续执行，还是需要执行其他更重要或者更紧急的事情。
考虑替代方案：周期性地重新审视目前的情况，重新评估目前的工作是否应该继
措或者感到压力难以承受，
反思：在事故处理过程中注意自己的情绪和精神状态。如果发现自己开始惊慌失
信任：充分相信每个事故处理参与者，分配职责后让他们自主行动。
事前准备：事先和所有事故处理参与者一起准备一套流程。
划分优先级：控制影响范围，恢复服务，同时为根源调查保存现场。
?
在集中分析一小时后，这个问题是否依然没有得到解决？
这次事故是否正在影响最终用户？
是否需要引入第二个团队来帮助处理问题？
事故流程管理最佳实践
，应该寻求更多的帮助。
一如果下面任何一条满足条件，这次事故应该被及时宣布。
小结
145
我
167
---
## Page 188
第15章
146
最关键的是，确保实施有效的措施使得未来重现的几率和影响得到降低，甚至避免重现。
书写事后总结的主要目的是为了保证该事故被记录下来，理清所有的根源性问题，同时
Google的事后总结哲学
些经验。
标准，一些事后总结的最佳实践，以及我们在如何培育一种良好的事后总结风气上的一
一次事故的书面记录，包括该事故造成的影响，为缓解该事故采取的措施，事故的根
事后总结的概念已经是科技行业中众所周知的了（参见文献[A1112]）。
从而影响最终用户。因此，事后总结是SRE的一个必要工具。
故中学习经验，那么事故就可能循环反复地发生。如果不能解决这个问题，那么随着系
我们要修复根源性问题，同时将服务恢复到正常状态。如果没有一种方法从已发生的事
作为SRE，我们负责运维大型的、复杂分布式系统。同时我们还在不断地增加新功能，
编辑：Gary O'Connor
本原因，以及防止未来问题重现的后续任务。本章描述了决定是否需要书写事后总结的
统规模和复杂度的增加，事故可能成倍增加，最终导致我们没有足够的资源处理事故，
和增加新系统。以我们的改动速率和部署规模，发生事故是难以避免的。在事故发生后
作者:JohnLunney、SueLueder
事后总结：从失败中学习
学习是避免失败的最好办法。
DevinCarraway
一篇事后总结是
---
## Page 189
应该简单地指责或者抱怨某个团队，而应该确实提出服务如何能够获得进步。
当一次事故发生时，我们不能把事后总结当成例行公事。我们的工程师将事后总结看作
确”的判断。
以通过改善系统和流程从而更好地协助他在设计和维护大型复杂系统时，做出更多“正
时，我们才能建立更好的预防措施，防止问题再现。我们不能“修好”某个人，但是可
总结系统性、逻辑性地讨论为什么某些团队或个人会在事故过程中获得“错误”的信息
伤亡。这些行业认为每个“错误”都是一次学习机会，从而使系统变得更可靠。当事后
对事不对人的文化起源于医疗和航空行业，在这些领域中，错误的举动可能会造成人身
动。一篇对事不对人的事后总结假设所有参与事件处理的人都是善意的，他们在自己当
如何定位造成这次事件的根本问题，而不是指责某个人或某团队的错误或者不恰当的举
在SRE的文化中，最重要的就是事后总结“对事不对人”。
事后总结的要求。
否应该书写书面报告。在这些客观条件之外，任何受影响的相关部门都可以提出写一篇
在事故发生前定义好事后总结的标准是很重要的，这样每个参与事故处理的人都知道是
些内部灵活性，但是基本的事后总结条件为：
过程确实需要消耗团队的一定时间和精力，所以我们在选择上很严格。每个团队都有一
书写事后总结不是一种惩罚措施，而是整个公司的一次学习机会。但是书写事后总结的
同的方法和工具。在任何一个重要事故发生后，团队必须书写一份事后总结。要注意的是，
非常多的文章、最佳实践和工具可供选用。Google的每个团队在根源分析上都采用了不
指责
下面是两个例子。
一个修复问题，一个使Google变得更可靠的机会。一篇“对事不对人”的事后总结不
个人或团队，那么人们就会自然地逃避事后总结。
详细的问题根源分析技巧请参看文献[Roo04]，这里不再详述。在系统质量分析领域有
“我们需要重写整个复杂后端系统。在过去三个季度中，它每周都在出问题。我们对
·用户可见的岩机时间或者服务质量降级程度达到一定标准。
监控问题（预示着问题是由人工发现的，而非报警系统）。
问题解决耗时超过一定限制。
on-call工程师需要人工介入的事故（包括回滚、切换用户流量等）。
任何类型的数据丢失。
Google的事后总结哲学
一篇事后总结必须重点关注
147
<170
171
---
## Page 190
时有目的地找一些资深工程师来评估文档的完整程度。评审的条件包括如下几项。
书写事后总结的过程还包括正式的评审和发布过程。
3.邮件通知
2.开放的评论系统
148
1.实时协作
不管具体采用哪些工具，请确保优先选择下列功能。
我们的事后总结文档都是用GoogleDocs写的，使用一个公司的内部模板（参见附录D）。
团队协作和知识共享。
我们非常看重协作，书写事后总结的过程也不例外。事后总结工作流程的每一步都包括
协作和知识共享