Maelstrom: Are you 
playing with a full deck?
Using an Attack Life Cycle Game to 
Educate, Demonstrate and Evangelize
DEF CON 24   #cybermaelstrom
Shane Steiger, Esq. CISSP
© 2016
$ whoami
~messing with computers since 1989 - TIN, PINE, yTalk, Lynx, MUDs, 
etc. 
~8 years in a large food manufacturer helping to build and secure 
SCADA/ICS systems across 90+ food manufacturing plants in the 
US. 
~6 years building out a security function in one of the largest 
pharmaceutical drug distributors in the US. 
~currently Chief Endpoint Security Architect in a large tech company 
building out the roadmaps for desirable Cyber Resiliency techniques 
in the endpoint space. 
~much better than family law! I am more of a geek. 
$ disclaimer
~the views and opinions are purely my own based on time in the 
industry and experience. They don’t necessarily reflect the 
views, positions or policies of my employer. 
~oh yeah....this presentation and discussion is not intended to 
give legal advice nor form any kind of attorney/client 
relationship. I am not your attorney and some of the things you 
might find interesting may require consultation with your own 
attorney (not me ). 
$ agenda
~journey picking strategies - who wins?
~attack life cycle primer
~why study attack lifecycles?
~what do effective defensive strategies look like?
~exercises in building out your defensive strategies 
~...maybe there is something more here... 
$ strategy journey
~from a past life, I was asked by a CIO ‘do they win?’ 
~later, asked to look at a solution for over 300k endpoints 
~like most folks – look at requirements, functions, capabilities 
and operationalization 
~hmmmm....wow I got a pretty heat map that doesn’t seem very 
useful in terms of selecting things at large scale 
~‘do they win’ stuck with me to develop better strategic choices
$ Lockheed Martin Kill Chain Phases ™
Reconnaissance
• Research, 
ID/selection of 
targets
• Email addresses
• Social 
relationships
• Target technology 
& topology
Weaponization
• Combining an 
exploit with a 
payload to 
establish/maintain 
access by attacker 
Delivery
• Transmission of 
weapon to target 
environment
Exploitation
• Exploit is triggered 
on target
Installation
• Payload is executed
Command and 
Control
• Communication 
and control is 
established 
between attacker 
and target
Act on Objectives
http://www.lockheedmartin.com/content/dam/lockheed/data/corporate/documents/LM-White-Paper-Intel-Driven-Defense.pdf
Recon/Pivot
Destruction
Exfiltration
$ Lockheed Martin Kill Chain Phases ™ *misnomer
Reconnaissance
• Research, 
ID/selection of 
targets
• Email addresses
• Social 
relationships
• Target technology 
& topology
Weaponization
• Combining an 
exploit with a 
payload to 
establish/maintain 
access by attacker 
Delivery
• Transmission of 
weapon to target 
environment
Exploitation
• Exploit is triggered 
on target
Installation
• Payload is executed
Command and 
Control
• Communication 
and control is 
established 
between attacker 
and target
Act on Objectives
http://www.lockheedmartin.com/content/dam/lockheed/data/corporate/documents/LM-White-Paper-Intel-Driven-Defense.pdf
Recon/Pivot
Destruction
Humiliate
PlantInfo
DoS
Ransom/Deface
Exfiltration
*defender is the actor in a kill chain! 
$ tortuosa concept–charting attacker’s progression
Recon
Weaponization
Delivery
Exploit
Install
C&C
Act on Objective
Attack Execution Over Time
What does this 
look like?
$ tortuosa concept – attacking the attacker’s plan
~what does this look like? 
Looks like a Gantt Chart! A project plan!
Attackers are organized indicating plan progression for campaigns 
~what other evidence have we seen to indicate the attackers 
seem to follow a plan if not a traditional project plan? 
Different time schedules indicating 'shift work’ 
Different skill levels from the same attackers indicating different 
’resources or teams’ 
Different teams using different tool sets 
Follow scripts and make mistakes redoing work or retrying task 
$ tortuosa concept – attacking the attacker’s plan
Attack the Attackers’ Project Plan!
IT organizations are experts at messing up project plans.  Mapping 
these plans can reveal weakness in the attackers’ plan.
https://en.wikipedia.org/wiki/Project_management_triangle
$ tortuosa concept – attacking attacker’s plan
What can we do to disrupt the attacker’s project plan?
~ Time: Strategies to attack – ‘assumed linear time’
Replays
Snapshots
Predecessors and Successors – feigning completion
~ Resources and Tools: Attack the ‘shift work’
Create resource unavailability – maybe APT Team F uses Cloudflare (during Team F 
stage block Cloudflare)
Create resource contention – flood targets?
Different teams using different tool sets
~ Scope: Create scope creep utilizing deception with fake targets or tarpits
~ Cost:  Increase setting the attacker back in progression increases cost to them thereby 
decreasing cost to defender to remediate
~ Quality: Create noise and anomalies – attackers, automation and scripts are disrupted
$ tortuosa concept – charting attacker progression
Recon
Weaponization
Delivery
Exploit
Install
C&C
Act on Objective
Attack Execution Over Time
Persistence Disruption
$ tortuosa concept – charting attacker progression
Recon
Weaponization
Delivery
Exploit
Install
C&C
Act on Objective
Attack Execution Over Time
Tool Unavailability
$ tortuosa concept – charting attacker progression
Recon
Weaponization
Delivery
Exploit
Install
C&C
Act on Objective
Attack Execution Over Time
Orchestrated False Targets
$ tortuosa concept – attacking attacker’s plan
***https://www.mitre.org/publications/technical-papers/cyber-resiliency-engineering-framework
$ tortuosa concept – attacking attacker’s plan
Mapped: Axiom, Cleaver, Dark 
Hotel, FIN4, 02Hero, 
SAPU4ALL, StuckOnUrDC
$ got the plans, let’s build catalog of attack patterns 
Recon
Exploratory 
Phishing Attacks
Port Scans
Google/Shodan 
Search
Weaponize
Custom Toolset/0-
day exploit
Criminal 
Commodity 
Framework
Metasploit 
Module/PoC 
toolset
Delivery
RCE on internet 
facing host
Malicious email 
attachment
Malicious URL
Exploit
Buffer Overflow
Privilege 
Escalation
Malicious leverage 
of user’s rights
Install
Executed dropper 
pulls rootkit code
Installation of new 
backdoor via 
inline-code
Initial exploit 
modifies existing 
service/code
C&C
SSL connection 
over arbitrary port
HTTP/HTTPS posts 
back to attacker 
C&C host
Data xfer via DNS 
query
A/O
(Pivot & Recon) 
controlled host 
used to scan for 
open fileshares
(Destruction) drive 
of controlled host 
is wiped
(Exfiltration) 
documents found 
on controlled host 
are sent back to 
attacker
$ build catalog of attack patterns – light ‘em up 
Recon
Exploratory 
Phishing Attacks
Port Scans
Google/Shodan 
Search
Weaponize
Custom Toolset/0-
day exploit
Criminal 
Commodity 
Framework
Metasploit 
Module/PoC 
toolset
Delivery
RCE on internet 
facing host
Malicious email 
attachment
Malicious URL
Exploit
Buffer Overflow
Privilege 
Escalation
Malicious leverage 
of user’s rights
Install
Executed dropper 
pulls rootkit code
Installation of new 
backdoor via 
inline-code
Initial exploit 
modifies existing 
service/code
C&C
SSL connection 
over arbitrary port
HTTP/HTTPS posts 
back to attacker 
C&C host
Data xfer via DNS 
query
A/O
(Pivot & Recon) 
controlled host 
used to scan for 
open fileshares
(Destruction) drive 
of controlled host 
is wiped
(Exfiltration) 
documents found 
on controlled host 
are sent back to 
attacker
$ building the attacker deck
Build catalog of attack patterns  – 8/2015***
Persistence
Privilege Escalation
Credential Access
Host Enumeration
Defense Evasion
Lateral Movement
Command and Control
Exfiltration
New service
Exploitation of vulnerability
OS/Software 
Weakness
Process enumeration
Software 
packing
RDP
Common protocol, follows standard
Normal C&C channel
Modify existing service
Service file permissions 
weakness
User interaction
Service enumeration
Masquerading
Windows admin shares (C$, ADMIN$)
Common protocol, non-standard
Alternate data channel
DLL Proxying
Service registry permissions 
weakness
Network sniffing
Local network config
DLL Injection
Windows shared webroot
Commonly used protocol on non-
standard port
Exfiltration over other network 
medium
Hypervisor Rookit
DLL path hijacking
Stored file
Local network 
connections
DLL loading
Remote vulnerability
Communications encrypted
Exfiltration over physical 
medium
Winlogon Helper DLL
Path interception
Window enumeration
Standard 
protocols
Logon scripts
Communications are obfuscated
Encrypted separately
Path Interception
Modification of shortcuts
Account enumeration
Obfuscated 
payload
Application deployment software
Distributed communications
Compressed separately
Registry run keys / 
Startup folder addition
Editing of default handlers
Group enumeration
Indicator 
removal
Taint shared content
Multiple protocols combined
Data staged
Modification of shortcuts
AT / Schtasks / Cron
Owner/user enumeration
Indicator 
blocking
Access to remote services with valid 
credentials
Automated or scripted data 
exfiltration
MBR / BIOS rootkit
Operating system 
enumeration
Pass the hash
Size limits
Editing of default 
handlers
Security software 
enumeration
Scheduled transfer
AT / Schtasks / Cron
File system enumeration
***https://attack.mitre.org/wiki/Main_Page
$ building the attacker deck
Build catalog of attack patterns – 8/2015***
Persistence
Privilege Escalation
Credential Access
Host Enumeration
Defense Evasion
Lateral Movement
Command and Control
Exfiltration
New service
Exploitation of vulnerability
OS/Software 
Weakness
Process enumeration
Software 
packing
RDP
Common protocol, follows standard
Normal C&C channel
Modify existing service
Service file permissions 
weakness
User interaction
Service enumeration
Masquerading
Windows admin shares (C$, ADMIN$)
Common protocol, non-standard
Alternate data channel
DLL Proxying
Service registry permissions 
weakness