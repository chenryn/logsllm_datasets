Computed with EINSim
40
60
80
100
120
Temperature ( C)
10. Conclusion
Figure 11: Data-retention error rates of a single representative
device with tREFW = 10s across different temperatures, show-
ing error rates: i) measured (post-correction), ii) inferred (pre-
correction), and iii) hypothetical post-correction assuming a
(144, 128, 5) ECC scheme.
While all three curves appear to fit an exponential curve
within the measurable temperature range, this is a misleading
artifact of sampling only a small fraction of the overall error dis-
tribution. Across the full range, only the pre-correction curve
follows the exponential relationship: both post-correction
curves diverge from the exponential fit on both sides of the mea-
surable region and follow an ECC-specific shape. This means
that post-correction error rates cannot be directly fitted to
an exponential curve, and extrapolating along the known ex-
ponential relationship of the data-retention error mechanism
requires knowing the pre-correction error rates.
This example demonstrates how EIN recovers the statisti-
cal characteristics of the pre-correction error rates that on-die
ECC obfuscates. In general, EIN enables this for any error
mechanism that EIN is applicable to (discussed in Section 4.3),
We develop EIN, the first statistical inference methodology
capable of determining the ECC scheme and pre-correction
error rates of a DRAM device with on-die ECC. We provide
EINSim [1], a flexible open-source simulator that can apply
EIN across different DRAM devices and error models. We eval-
uate EIN with the first experimental study of 232 (82) LPDDR4
DRAM devices with (without) on-die ECC. Using EIN, we: i)
find that the ECC scheme employed in the devices we test is a
single-error correction Hamming code with (n = 136, k = 128,
d = 3), ii) infer pre-correction error rates from post-correction
errors, and iii) recover well-known pre-correction error distri-
butions that on-die ECC obfuscates. With this, we demonstrate
that EIN enables DRAM error characterization studies for de-
vices with on-die ECC. We believe and hope that future work
will use EIN to develop new understanding and mechanisms
to tackle the DRAM scaling challenges that lie ahead.
Acknowledgements
We thank our shepherd Vilas Sridharan, anonymous reviewers,
and SAFARI group members for their valuable feedback.
23
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:57:59 UTC from IEEE Xplore.  Restrictions apply. 
References
[1] “EINSim Source Code,” https://github.com/CMU-SAFARI/EINSim.
[2] “Terminology and Notations,” http://sites.ieee.org/tcrts/education/
terminology-and-notation/, 2018.
[3] R. D. Adams, High Performance Memory Testing: Design Principles,
Fault Modeling and Self-Test. Springer SBM, 2002.
[4] A. Bacchini et al., “Characterization of Data Retention Faults in DRAM
Devices,” in DFT, 2014.
[5] S. Baek et al., “Refresh Now and Then,” in TC, 2014.
[6] R. C. Bose and D. K. Ray-Chaudhuri, “On a Class of Error Correcting
Binary Group Codes,” Information and control, 1960.
[7] Y. Cai et al., “Error Characterization, Mitigation, and Recovery In
Flash-Memory-Based Solid-State Drives,” Proc. of the IEEE, 2017.
[8] Y. Cai et al., “Error Patterns in MLC NAND Flash Memory: Measure-
ment, Characterization, and Analysis,” in DATE, 2012.
[9] S. Cha et al., “Defect Analysis and Cost-Effective Resilience Architec-
ture for Future DRAM Devices,” in HPCA, 2017.
[10] K. Chandrasekar et al., “Exploiting Expendable Process-Margins in
DRAMs for Run-Time Performance Optimization,” in DATE, 2014.
[11] K. K. Chang, “Understanding and Improving Latency of DRAM-Based
Memory Systems,” Ph.D. dissertation, Carnegie Mellon University,
2017.
[12] K. K. Chang et al., “Understanding Latency Variation in Modern DRAM
Chips: Experimental Characterization, Analysis, and Optimization,” in
SIGMETRICS, 2016.
[13] K. K. Chang et al., “Improving DRAM Performance by Parallelizing
Refreshes with Accesses,” in HPCA, 2014.
[35] A. Hiraiwa et al., “Statistical Modeling of Dynamic Random Access
Memory Data Retention Characteristics,” JAP, 1996.
[36] A. Hocquenghem, “Codes Correcteurs D’erreurs,” Chiffres, 1959.
[37] S. Hong, “Memory Technology Trend and Future Challenges,” in IEDM,
2010.
[38] M. Horiguchi and K. Itoh, Nanoscale Memory Repair. Springer SBM,
2011.
[39] W. C. Huffman and V. Pless, Fundamentals of Error-Correcting Codes.
Cambridge University Press, 2010.
[40] A. A. Hwang et al., “Cosmic Rays Don’t Strike Twice: Understanding
the Nature of DRAM Errors and the Implications for System Design,”
in SIGPLAN Notices, 2012.
[41] Intelligent Memory, “I’M ECC DRAM with Integrated Error Correcting
Code,” 2016, product Brief.
[42] T. Ishigaki et al., “A Multi-Level-Cell Spin-Transfer Torque Memory
with Series-Stacked Magnetotunnel Junctions,” in VLSI, 2010.
[43] 128Mx8, 64Mx16 1Gb DDR3 SDRAM with ECC, ISSI, 2018, rev. B1.
[44] JEDEC, “Low Power Double Data Rate 4 (LPDDR4) SDRAM Specifica-
tion,” JEDEC Standard JESD209–4B, 2014.
[45] M. Jung et al., “Reverse Engineering of DRAMs: Row Hammer with
Crosshair,” in MEMSYS, 2016.
[46] M. Jung et al., “Optimized Active and Power-Down Mode Refresh
Control in 3D-DRAMs,” in VLSI-SoC, 2014.
[47] M. Jung et al., “Omitting Refresh: A Case Study for Commodity and
Wide I/O DRAMs,” in MEMSYS, 2015.
[48] H. L. Kalter et al., “A 50-Ns 16-Mb DRAM with a 10-Ns Data Rate and
On-Chip ECC,” JSSC, 1990.
[49] U. Kang et al., “Co-Architecting Controllers and DRAM to Enhance
[14] K. K. Chang et al., “Low-Cost Inter-Linked Subarrays (LISA): Enabling
DRAM Process Scaling,” in The Memory Forum, 2014.
Fast Inter-Subarray Data Movement in DRAM,” in HPCA, 2016.
[15] K. K. Chang et al., “Understanding Reduced-Voltage Operation in
Modern DRAM Devices: Experimental Characterization, Analysis,
and Mechanisms,” in SIGMETRICS, 2017.
[16] M. H. Cho et al., “A Novel Method to Characterize DRAM Process
Variation by the Analyzing Stochastic Properties of Retention Time
Distribution,” in EDTM, 2017.
[17] K. C. Chun et al., “A 16Gb LPDDR4X SDRAM with an NBTI-Tolerant
Circuit Solution, an SWD PMOS GIDL Reduction Technique, an Adap-
tive Gear-Down Scheme and a Metastable-Free DQS Aligner In a 10nm
Class DRAM Process,” in ISSCC, 2018.
[18] G. C. Clark Jr and J. B. Cain, Error-Correction Coding for Digital Com-
munications. Springer SBM, 2013.
[19] L. Cojocar et al., “Exploiting Correcting Codes: On the Effectiveness
of ECC Memory Against Rowhammer Attacks,” in S&P, 2019.
[20] D. J. Costello and S. Lin, “Error Control Coding: Fundamentals and
Applications,” 1982.
[21] F. Courbon et al., “Reverse Engineering Flash EEPROM Memories
Using Scanning Electron Microscopy,” in CARDIS, 2016.
[22] T. M. Cover et al., “Elements of Information Theory,” SIAM Review,
1994.
[23] S. Desai, “Process Variation Aware DRAM (Dynamic Random Access
Memory) Design Using Block-Based Adaptive Body Biasing Algorithm,”
Ph.D. dissertation, Utah State University, 2012.
[50] C. Keller et al., “Dynamic Memory-Based Physically Unclonable Func-
tion for the Generation of Unique Identifiers and True Random Num-
bers,” in ISCAS, 2014.
[51] S. Khan et al., “The Efficacy of Error Mitigation Techniques for DRAM
Retention Failures: A Comparative Experimental Study,” in SIGMET-
RICS, 2014.
[52] S. Khan et al., “PARBOR: An Efficient System-Level Technique to
Detect Data-Dependent Failures in DRAM,” in DSN, 2016.
[53] S. Khan et al., “A Case for Memory Content-Based Detection and
Mitigation of Data-Dependent Failures in DRAM,” in IEEE CAL, 2016.
[54] S. Khan et al., “Detecting and Mitigating Data-Dependent DRAM
Failures by Exploiting Current Memory Content,” in MICRO, 2017.
[55] I. Kim et al., “High Performance PRAM Cell Scalable to Sub-20nm Tech-
nology with Below 4F2 Cell Size, Extendable to DRAM Applications,”
in VLSIT, 2010.
[56] J. S. Kim et al., “Solar-DRAM: Reducing DRAM Access Latency by
Exploiting the Variation in Local Bitlines,” in ICCD, 2018.
[57] J. S. Kim et al., “The DRAM Latency PUF: Quickly Evaluating Physical
Unclonable Functions by Exploiting the Latency-Reliability Tradeoff
in Modern Commodity DRAM Devices,” in HPCA, 2018.
[58] J. S. Kim et al., “D-RaNGe: Using Commodity DRAM Devices to Gener-
ate True Random Numbers With Low Latency And High Throughput,”
in HPCA, 2019.
[59] K. Kim and J. Lee, “A New Investigation of Data Retention Time in
[24] A. Ditali et al., “X-Ray Radiation Effect in DRAM Retention Time,”
Truly Nanoscaled DRAMs,” in EDL, 2009.
T-DMR, 2007.
[25] B. Efron, “Bootstrap Methods: Another Look at the Jackknife,” in
Breakthroughs in Statistics, 1992.
[26] A. Fukami et al., “Improving the Reliability of Chip-Off Forensic Anal-
ysis of NAND Flash Memory Devices,” in Digital Investigation, 2017.
[27] S. Ghose et al., “What Your DRAM Power Models Are Not Telling You:
Lessons from a Detailed Experimental Study,” SIGMETRICS, 2018.
[28] B. Gu et al., “Challenges and Future Directions of Laser Fuse Processing
in Memory Repair,” Proc. Semicon China, 2003.
[29] T. Hamamoto et al., “Well Concentration: A Novel Scaling Limitation
Factor Derived From DRAM Retention Time and Its Modeling,” in
IEDM, 1995.
[30] T. Hamamoto et al., “On the Retention Time Distribution of Dynamic
[60] Y. Kim, “Architectural Techniques to Enhance DRAM Scaling,” Ph.D.
dissertation, Carnegie Mellon University, 2015.
[61] Y. Kim et al., “Flipping Bits in Memory Without Accessing Them: An
Experimental Study of DRAM Disturbance Errors,” in ISCA, 2014.
[62] Y. Kim et al., “A Case for Exploiting Subarray-Level Parallelism (SALP)
in DRAM,” in ISCA, 2012.
[63] Y. Kim et al., “Ramulator: A Fast and Extensible DRAM Simulator,” in
IEEE CAL, 2016.
[64] W. Kong et al., “Analysis of Retention Time Distribution of Embedded
DRAM-A New Method to Characterize Across-Chip Threshold Voltage
Variation,” in ITC, 2008.
[65] K. Kraft et al., “Improving the Error Behavior of DRAM by Exploiting
its Z-Channel Property,” in DATE, 2018.
Random Access Memory (DRAM),” in TED, 1998.
[66] E. K¨ult¨ursay et al., “Evaluating STT-RAM as an Energy-Efficient Main
[31] R. W. Hamming, “Error Detecting and Error Correcting Codes,” in Bell
Labs Technical Journal, 1950.
[32] H. Hassan et al., “ChargeCache: Reducing DRAM Latency by Exploit-
ing Row Access Locality,” in HPCA, 2016.
[33] H. Hassan et al., “SoftMC: A Flexible and Practical Open-Source Infras-
tructure for Enabling Experimental DRAM Studies,” in HPCA, 2017.
[34] W. Henkels et al., “A 4-Mb Low-Temperature DRAM,” JSSC, 1991.
Memory Alternative,” in ISPASS, 2013.
[67] N. Kwak et al., “A 4.8 Gb/s/pin 2Gb LPDDR4 SDRAM with Sub-100μA
Self-Refresh Current for IoT Applications,” in ISSCC, 2017.
[68] H.-J. Kwon et al., “An Extremely Low-Standby-Power 3.733 Gb/s/pin
2Gb LPDDR4 SDRAM for Wearable Devices,” in ISSCC, 2017.
[69] B. C. Lee et al., “Architecting Phase Change Memory as a Scalable
DRAM Alternative,” in ISCA, 2009.
24
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:57:59 UTC from IEEE Xplore.  Restrictions apply. 
[70] D. Lee et al., “Adaptive-Latency DRAM: Optimizing DRAM Timing
[103] R. M. Roth, Introductin to Coding Theory. Cambridge University Press,
for the Common-Case,” in HPCA, 2015.
[71] D. Lee, “Reducing DRAM Latency at Low Cost by Exploiting Hetero-
geneity,” Ph.D. dissertation, Carnegie Mellon University, 2016.
[72] D. Lee et al., “Design-Induced Latency Variation in Modern DRAM
Chips: Characterization, Analysis, and Latency Reduction Mecha-
nisms,” in SIGMETRICS, 2017.
[73] D. Lee et al., “Tiered-Latency DRAM: A Low Latency and Low Cost
DRAM Architecture,” in HPCA, 2013.
[74] D. Lee et al., “Decoupled Direct Memory Access: Isolating CPU and
IO Traffic by Leveraging a Dual-Data-Port DRAM,” in PACT, 2015.
[75] M. J. Lee and K. W. Park, “A Mechanism for Dependence of Refresh
Time on Data Pattern in DRAM,” in EDL, 2010.
[76] Y. Li et al., “DRAM Yield Analysis and Optimization by a Statistical
Design Approach,” in CSI, 2011.
[77] U. Lieneweg et al., “Assesment of DRAM Reliability from Retention
Time Measurements,” Flight Readiness Technol. Assessment NASA EEE
Parts Prog., 1998.
[78] C. H. Lin et al., “SECRET: Selective Error Correction for Refresh Energy
Reduction in DRAMs,” in ICCD, 2012.
[79] J. Liu et al., “An Experimental Study of Data Retention Behavior in
Modern DRAM Devices: Implications for Retention Time Profiling
Mechanisms,” in ISCA, 2013.
[80] J. Liu et al., “RAIDR: Retention-Aware Intelligent DRAM Refresh,” in
ISCA, 2012.
[81] W. Liu et al., “A Trustworthy Key Generation Prototype Based on
DDR3 PUF for Wireless Sensor Networks,” in Sensors, 2014.
[82] Y. Luo et al., “Characterizing Application Memory Error Vulnerability
to Optimize Datacenter Cost via Heterogeneous-Reliability Memory,”
in DSN, 2014.
[83] F. J. MacWilliams and N. J. A. Sloane, The Theory of Error-Correcting
Codes. Elsevier, 1977.
[84] J. A. Mandelman et al., “Challenges and Future Directions for the
Scaling of Dynamic Random-Access Memory (DRAM),” in IBM JRD,
2002.
[85] J. Meza et al., “Revisiting Memory Errors in Large-Scale Production
Data Centers: Analysis and Modeling of New Trends from the Field,”
in DSN, 2015.
[86] Micron Technology Inc., “ECC Brings Reliability and Power Efficiency
to Mobile Devices,” Micron Technology Inc., Tech. Rep., 2017.
[87] Y. Mori et al., “A New Method for Predicting Distribution of DRAM
Retention Time,” in IRPS, 2001.
[88] O. Mutlu, “Memory Scaling: A Systems Architecture Perspective,” in
IMW, 2013.
[89] O. Mutlu, “The RowHammer Problem and Other Issues we may Face
as Memory Becomes Denser,” in DATE, 2017.
[90] O. Mutlu and J. Kim, “RowHammer: A Retrospective,” in TCAD, 2019.
[91] O. Mutlu and L. Subramanian, “Research Problems and Opportunities
in Memory Systems,” in SUPERFRI, 2014.
[92] P. J. Nair et al., “ArchShield: Architectural Framework for Assisting
DRAM Scaling by Tolerating High Error Rates,” in ISCA, 2013.
[93] P. J. Nair et al., “XED: Exposing On-Die Error Detection Information
for Strong Memory Reliability,” in ISCA, 2016.
[94] T.-Y. Oh et al., “A 3.2Gbps/pin 8Gb 1.0V LPDDR4 SDRAM with In-
tegrated ECC Engine for Sub-1V DRAM Core Operation,” in ISSCC,
2014.
[95] T. Ohsawa et al., “Optimizing the DRAM Refresh Count for Merged
DRAM/logic LSIs,” in ISLPED, 1998.
[96] K. Park et al., “Experiments and Root Cause Analysis for Active-
Precharge Hammering Fault In DDR3 SDRAM Under 3× Nm Tech-
nology,” Microelectronics Reliability, 2016.
[97] K. Park et al., “Statistical Distributions of Row-Hammering Induced
Failures in DDR3 Components,” Microelectronics Reliability, 2016.
[98] M. Patel et al., “The Reach Profiler (REAPER): Enabling the Mitigation
of DRAM Retention Failures via Profiling at Aggressive Conditions,”
in ISCA, 2017.
[99] M. K. Qureshi et al., “AVATAR: A Variable-Retention-Time (VRT)
Aware Refresh for DRAM Systems,” in DSN, 2015.
[100] M. K. Qureshi et al., “Scalable High Performance Main Memory System
Using Phase-change Memory Technology,” in ISCA, 2009.
[101] A. Rahmati et al., “Probable Cause: The Deanonymizing Effects of
Approximate DRAM,” in ISCA, 2016.
2006.
[104] K. Saino et al., “Impact of Gate-Induced Drain Leakage Current on the
Tail Distribution of DRAM Data Retention Time,” in IEDM, 2000.
[105] A. Schaller et al., “Intrinsic Rowhammer PUFs: Leveraging the
Rowhammer Effect for Improved Security,” in HOST, 2017.
[106] B. Schroeder et al., “DRAM Errors in the Wild: a Large-Scale Field
Study,” in SIGMETRICS, 2009.
[107] N. H. Seong et al., “Tri-Level-Cell Phase Change Memory: Toward an
Efficient and Reliable Memory System,” in ISCA, 2013.
[108] V. Seshadri, “Simple DRAM and Virtual Memory Abstractions to En-
able Highly Efficient Memory Systems,” Ph.D. dissertation, Carnegie
Mellon University, 2016.
[109] V. Seshadri et al., “RowClone: Fast and Energy-Efficient In-DRAM
Bulk Data Copy and Initialization,” in MICRO, 2013.
[110] V. Seshadri et al., “Ambit: In-Memory Accelerator for Bulk Bitwise
Operations Using Commodity DRAM Technology,” in MICRO, 2017.
[111] S. M. Seyedzadeh et al., “Mitigating Bitline Crosstalk Noise in DRAM
Memories,” in ISMS, 2017.
[112] C. G. Shirley and W. R. Daasch, “Copula Models of Correlation: A
DRAM Case Study,” in TC, 2014.
[113] Y. H. Son et al., “CiDRA: A cache-Inspired DRAM resilience architec-
ture,” in HPCA, 2015.
[114] V. Sridharan et al., “Memory Errors in Modern Systems: The Good, the
Bad, and the Ugly,” in ASPLOS, 2015.
[115] V. Sridharan and D. Liberty, “A Study of DRAM Failures in the Field,”
in SC, 2012.
[116] S. Sutar et al., “D-PUF: An Intrinsically Reconfigurable DRAM PUF for
Device Authentication and Random Number Generation,” TECS, 2018.
[117] B. Talukder et al., “Exploiting DRAM Latency Variations for Generating
True Random Numbers,” arXiv preprint arXiv:1808.02068, 2018.
[118] B. Talukder et al., “LDPUF: Exploiting DRAM Latency Variations to
Generate Robust Device Signatures,” arXiv preprint arXiv:1808.02584,
2018.
[119] Q. Tang et al., “A DRAM Based Physical Unclonable Function Capable
of Generating ¿1032 Challenge Response Pairs per 1Kbit Array for
Secure Chip Authentication,” in CICC, 2017.
[120] F. Tehranipoor et al., “Investigation of DRAM PUFs Reliability Under
Device Accelerated Aging Effects,” in ISCAS, 2017.
[121] F. Tehranipoor et al., “Robust Hardware True Random Number Gener-
ators using DRAM Remanence Effects,” in HOST, 2016.
[122] J. P. van Zandwijk, “A Mathematical Approach to NAND Flash-
Memory Descrambling and Decoding,” Digital Investigation, 2015.
[123] J. P. van Zandwijk, “Bit-Errors as a Source of Forensic Information in
NAND-Flash Memory,” Digital Investigation, 2017.
[124] R. K. Venkatesan et al., “Retention-Aware Placement in DRAM (RAPID):
Software Methods for Quasi-Non-Volatile DRAM,” in HPCA, 2006.
[125] F. Wang et al., “DRAM Retention at Cryogenic Temperatures,” in IMW,
2018.
[126] J. Wang et al., “ProactiveDRAM: A DRAM-Initiated Retention Man-
agement Scheme,” in ICCD, 2014.
[127] A. Weber et al., “Data Retention Analysis on Individual Cells of 256Mb
DRAM in 110nm Technology,” in ESSDERC, 2005.
[128] C. Weis et al., “Retention Time Measurements and Modelling of Bit
Error Rates of Wide I/O DRAM in MPSoCs,” in DATE, 2015.
[129] C. Weis et al., “Thermal Aspects and High-Level Explorations of 3D
Stacked DRAMs,” in ISVLSI, 2015.
[130] S. B. Wicker, Error Control Systems for Digital Communication and
Storage. Prentice Hall Englewood Cliffs, 1995.
[131] J. Wise, “Reverse Engineering a NAND Flash Device Management Al-
gorithm,” https://joshuawise.com/projects/ndfrecovery#ecc recovery,
2014.
[132] H.-S. P. Wong et al., “Metal–Oxide RRAM,” Proc. IEEE, 2012.
[133] H.-S. P. Wong et al., “Phase Change Memory,” Proceedings of the IEEE,
2010.
[134] W. Xiong et al., “Run-Time Accessible DRAM PUFs in Commodity
Devices,” in CHES, 2016.
[135] C. Zhang et al., “Hi-Fi Playback: Tolerating Position Errors in Shift
Operations of Racetrack Memory,” in ISCA, 2015.
[136] T. Zhang et al., “Half-DRAM: A High-Bandwidth and Low-Power
DRAM Architecture from the Rethinking of Fine-Grained Activation,”
in ISCA, 2014.
[137] X. Zhang et al., “Exploiting DRAM Restore Time Variations In Deep
Sub-Micron Scaling,” in DATE, 2015.
[138] Y. Zhang et al., “Multi-Level Cell STT-RAM: Is it Realistic or Just a
[102] T. Richardson and R. Urbanke, Modern Coding Theory. Cambridge
Dream?” in ICCAD, 2012.
University Press, 2008.
25
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:57:59 UTC from IEEE Xplore.  Restrictions apply.