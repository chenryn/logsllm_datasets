### 6.4.3 Vendor Popularity Across Regions

We present a heat map illustrating the popularity of each vendor across all Autonomous Systems (ASes) in a given region (continent). Cisco is the dominant vendor in all regions. The second most popular vendor is Huawei, with approximately 27% market share in Asia, around 22% in Europe, and close to 14% in South America and Africa. Notably, we did not find any Huawei routers in North America, and their presence in Oceania is less than 1% of the market. The contributions of other router vendors are minimal across all regions. We conclude that, although the number of vendors per AS may be high, only a relatively small number of routers contribute to this diversity. This is due to the strong consolidation driven by two major router manufacturers, Cisco and Huawei.

### 6.4.4 Vendor Popularity in Large Networks

In our final case study, we analyze the top 10 networks based on the number of routers, which each have at least 4,500 routers. These networks are distributed across different continents: four in Europe, four in North America, one in Asia, and one in South America. In Figure 15, we report the popularity of each vendor, along with the number of routers per AS in parentheses. Cisco is the dominant vendor in six out of the ten networks. However, in the network from Asia and in two of the networks in Europe, Huawei is the dominant vendor. Typically, large networks rely on a single dominant vendor, but one of the top 10 networks has deployed both Cisco and Huawei routers, as well as UNIX-based router solutions. Despite the presence of multiple router vendors in all top 10 networks, the vast majority of routers (typically more than 95%) belong to only one or two vendors. Therefore, large networks can be potentially vulnerable to vulnerabilities of a single major vendor, given the uniformity of their deployments.

### 6.5 Vendor Dominance

To further investigate the homogeneity of router vendors in each network, we introduce a new metric called "vendor dominance," which is defined as the fraction of routers belonging to the most dominant router vendor in an AS. A vendor dominance value close to 1 indicates that a significant majority of the routers in the network belong to a single vendor. This is a critical property of a network, as vulnerabilities of the dominant vendor can be exploited, affecting a large fraction of the deployed routers. In Figure 17, we show the distribution of vendor dominance across ASes. We observe that the values of vendor dominance are high in many networks: more than 80% of the networks have a vendor dominance of 0.7 or higher. This demonstrates that, typically, there is a single very popular vendor per network, which can vary from one network to another.

Next, we examine the regional characteristics of networks with at least 10 routers, as measured using SNMPv3 (see Figure 18). We identify two groups of regions: (i) South America, Asia, and Africa, and (ii) Oceania, North America, and Europe. The vendor dominance of networks in the first group is generally lower than in those of the second group.

### 7 Related Work

Previous research has developed passive and active techniques to fingerprint and de-alias devices at various granularities by leveraging identifiers and implementation-specific differences. This section details these existing methods.

#### 7.1 Router Vendor Fingerprinting

**Nmap**: Nmap is an open-source network scanning and reconnaissance tool capable of performing operating system fingerprinting [46]. It sends a series of ICMP echo requests, UDP packets, and TCP probes with varying field values, flags, and options to fingerprint the remote system. By analyzing the responses, such as length, options, window size, sequence numbers, IP ID, TTL values, checksums, and flags, Nmap matches the responses to its database of operating system fingerprints. The latest version of Nmap (7.91) contains 5,679 fingerprints, including approximately 160 for Cisco and 22 for Juniper routers. While Nmap is effective for TCP/IP fingerprinting, it requires the remote host to listen and respond on an open TCP port. Since routers in the wild are often secured and do not respond to unsolicited TCP probes, Nmap is generally ineffective for router fingerprinting.

**Scanning and Banner Grabbing**: Another common technique for remotely inferring operating system and vendor information is "banner grabbing," where publicly available services leak identifying information. For example, the Cisco SSH server implementation returns identifying information in its response string. Internet-wide scanning and banner grabbing are regularly performed [14, 21, 22, 33]. Recent work has sought to augment banner analysis with active measurements [30] to perform large-scale network vendor inference. However, like Nmap, banner analysis requires a publicly responsive service that returns discriminating information. Routers are frequently tightly secured and unresponsive to banner queries.

**TTL-Based Fingerprinting**: Due to the closed nature of routers, Vanaubel et al. developed a fingerprinting technique based solely on TTL responses [59]. They send TCP, UDP, and ICMP probes to the target and use the inferred initial TTL (iTTL) values from the responses to differentiate between well-known platforms, such as Cisco and Juniper. Unfortunately, the universe of possible iTTL values is small, leading to a high number of incorrect inferences. For instance, Huawei has the same iTTL signature as Cisco.

#### 7.2 Router Alias Resolution

**Identifiers**: Techniques for discovering router aliases were first developed by exploiting an implementation behavior where ICMP port unreachable responses were generated with a source address of the interface toward the destination, regardless of which interface IP was originally probed [26]. Other techniques include pre-specified timestamps [54] and graph analysis [27]. More recently, Marder proposed using path length estimation [40], while Vermeulen et al. leverage ICMP rate limiting [60]. However, state-of-the-art systems currently use IP ID-based alias resolution.

**IP ID**: The IP identifier (IP ID) field is used for fragmentation and reassembly. Since IP ID is a mandatory field in IPv4, it is possible to elicit an IP ID value from a router via a simple ICMP echo. This value is typically set in one of three ways: zero (in conjunction with the “don’t fragment” bit), randomly, or sequentially for each new packet. While this information can convey some information about the router vendor, IP IDs can be used for alias resolution—the process of determining if multiple IP addresses correspond to different interfaces on the same router (i.e., are aliases). In many implementations, the IP ID counter is shared among different interfaces on the router [55]. Current state-of-the-art alias resolution techniques sample the IP ID value of candidate IPs over time and perform a monotonic bounds test on IP ID sequences to infer aliases [34]. Similar techniques have been developed for IPv6 [38]. As the IP ID is only 16 bits long, it can increment and wrap faster than it can be sampled if the router has a high traffic rate. Consequently, IP ID techniques suffer from false positive and false negative errors [39]. Finding aliases based on IP ID at Internet scale remains challenging and requires intensive probing and computation. In contrast, our technique elicits a strong, unique, and persistent identifier that can discover aliases much more efficiently.

#### 7.3 Dual-Stack Inference

Comparatively less work has focused on finding dual-stack aliases, especially for routers. Scheitle et al. use TCP timestamp skew to identify IPv4/IPv6 siblings, but their work largely centers on servers, as routers are generally unresponsive to TCP probes [52]. Berger et al. developed a method to reveal dual-stack addresses of name servers [2]. Czyz et al. examined IPv6 security posture compared to IPv4 [19], but they had no method to resolve dual-stack router aliases. To date, the only viable technique for dual-stack router alias resolution has been through DNS inference, particularly using Luckie’s method for extracting router hostnames [39], which we compare against.

### 8 Discussion

#### Remediation

In consultation with Cisco’s product security incident response team, we learned that they had multiple existing bugs [17, 18] (the oldest one is from 2012) and a reserved CVE [57] related to SNMPv3 information leakage. As a fix, Cisco added a new configuration command that instructs the router to drop (and not respond to) SNMP packets for an unknown user (specifically: `snmp-server drop unknown-user`). While this patch is welcome, our findings highlight that, despite this vulnerability being known for nearly a decade, it persists in the wild. Furthermore, operators must know of and explicitly enable this configuration option in their equipment. We recommend that this configuration become the default in the future.

#### Follow Best Current Security Practices When Running SNMPv3

To our surprise, millions of devices, including hundreds of thousands of routers, respond to unauthorized and unsolicited SNMPv3 requests. All of our requests were launched from a server in a single data center, implying that these devices either were not behind a firewall or the firewall was not properly configured. If network administrators had applied best current security practices, such as access control lists or segregated out-of-band management, we would expect significantly fewer responses. This would have mitigated the potential vulnerabilities we identified. Similarly surprising, we did not receive any complaints (although we provided contact information) when we scanned routers, in stark contrast to scans performed in the past for servers. This can be attributed to the fact that SNMPv3 scans are stealthy, sending only a single UDP packet, but it also suggests that routers and other connected devices running SNMPv3 are not well monitored by network administrators for scanning activity. Operators may want to more rigorously monitor such external management queries to their infrastructure.

#### Implicitly Enabling SNMPv3

In addition to the open network access policies previously identified, a likely explanation for the large number of responsive SNMPv3 devices is that some vendors and implementations automatically enable SNMPv3 when SNMPv2 is enabled (see Section 6.2). Instead, we recommend that implementations require explicit configuration to enable SNMPv3 to ensure that operators are consciously running SNMPv3.

#### Potential Vulnerabilities of Current SNMPv3 Implementation

There are more than 400 vulnerabilities related to SNMP [41]. While many of these vulnerabilities are specific to certain implementations, our observations on SNMPv3’s behavior expose a more fundamental fingerprinting weakness. Unlike SNMPv2, which does not respond to unauthorized and unsolicited requests, SNMPv3, by design, does respond. Our study shows that potentially millions of devices will respond to such SNMPv3 requests. Moreover, as SNMPv3 is UDP-based, it is trivial to spoof the source of these requests, similar to other spoofed-source attacks [4, 25, 48, 51]. More concerningly, in some of our measurements, a single request resulted in multiple (identical) responses. For example, in the first IPv4 scan, more than 182,000 IPv4 addresses responded with more than one request, 48 of which returned more than 1,000 responses within two to twenty hours. One of them sent back 48,500,523 response packets within two hours. Although the exact cause of this behavior is not known, similar behavior has been reported for other handshaking protocols [36]. In the second IPv4 scan, we also observed different addresses returning a large number of responses. Thus, SNMPv3 could be potentially exploited for amplification attacks.

#### Towards SNMPv4

Although SNMPv3 offers a stronger security model than its predecessors, our study uncovered shortcomings in the protocol that enable fingerprinting. A fundamental design tension exists between maintaining the stateless operation of SNMP and the security mechanisms. While proposals to utilize standards such as TLS with SNMP have been drafted to protect datagrams [28], such approaches may present other concerns, including the ability to perform certificate-based fingerprinting. A more immediate solution is to not use MAC addresses as the engine ID. While the engine ID needs to be persistent, repurposing MAC addresses has a long history in network security of enabling fingerprinting and other attacks. Further, researchers have shown that obtaining the persistent engine ID permits brute force SNMPv3 password recovery attacks [58]. We thus encourage protocol designers in the future to consider the weaknesses of a persistent engine ID and discourage the use of MAC address-based engine IDs.

### 9 Conclusion

In this paper, we demonstrate that the adoption of the secure network management protocol, SNMPv3, surprisingly increases device fingerprinting capabilities. By design, devices running SNMPv3 respond to unauthorized and unsolicited authentication requests with a device-unique identifier and other critical status and configuration information. We show that SNMPv3 allows for light and accurate alias resolution, dual-stack association, and fingerprinting with only a single request per IP. Using our technique, we were able to de-alias and fingerprint more than 4.6 million devices, including around 350,000 routers. Our analysis provides fresh insights into the router vendor share, router deployment strategies of network operators around the world, as well as router uptime statistics and the distribution of vendors in different regions. We hope that our technique can be used to answer other network analytics questions in the future, such as inferring NAT and load balancers in the wild.

### Acknowledgments

We thank Cas D’Angelo for providing invaluable operational network validation. We would also like to thank our shepherd Mattijs Jonker for his valuable feedback and guidance.