/var/log
.RS 4
应该持久保存的系统日志。 系统组件可以在该目录中放置专属的日志。 不过，推荐的方式是通过
\fBsyslog\fR(3)
与
\fBsd_journal_print\fR(3)
接口记录日志。
.RE
.PP
/var/spool
.RS 4
应该持久保存的系统队列。 例如邮件队列或打印队列。
.RE
.PP
/var/tmp
.RS 4
应该持久保存的临时文件(通常体积也比较大)。 此目录通常位于持久存储设备上，并且可以存储较大的临时文件。 相比较而言，/tmp
一般位于内存中， 并且仅用于存储较小的临时文件。 该目录在系统启动过程中一般不会被清空， 但是，如果其中的某些文件持续长时间不被访问，通常也会被自动删除。 因为系统上的所有用户都可以访问该目录， 所以必须确保该目录仅对
\fBmkstemp\fR(3),
\fBmkdtemp\fR(3)
相关系统调用可写。 如果应用程序发现
\fI$TMPDIR\fR
环境变量已经被设置， 那么应该使用
\fI$TMPDIR\fR
环境变量的设置， 而不应该直接使用
/var/tmp
目录(参见
\fBenviron\fR(7))。
.RE
.SH "虚拟文件系统"
.PP
/dev
.RS 4
设备节点的根目录。 通常被挂载为一个
"devtmpfs"
文件系统实例 (但在沙盒或容器中可能是其他类型)。 该目录中的内容由内核与
\fBsystemd-udevd.service\fR(8)
共同管理，其他任何组件都不应该修改此目录中的内容。 可以在该目录的子目录中再挂载其他特定用途的虚拟文件系统。
.RE
.PP
/dev/shm
.RS 4
通过
\fBshm_open\fR(3)
创建的POSIX共享内存。 因为它其实是一个
"tmpfs"
文件系统， 所以在系统启动过程中会被清空。 因为系统上的所有用户都可以读写该目录， 所以必须注意避免文件名冲突以及安全漏洞(也就是注意权限设置)。 对于普通用户，当其退出登录时，其在该目录下创建的文件也会被删除。 通常，在
/run
目录(针对系统进程) 或
\fI$XDG_RUNTIME_DIR\fR
目录(针对用户进程)中使用内存映射文件， 是比使用POSIX共享内存更好的解决方案。 因为这些目录不是全局可写的， 所以不存在文件名冲突以及安全漏洞的问题。
.RE
.PP
/proc
.RS 4
显示进程信息以及其他功能的虚拟文件系统。 此文件系统主要用作内核与用户交互的界面。 详见
\fBproc\fR(5)
手册。 可以在该目录的子目录中再挂载其他特定用途的虚拟文件系统。
.RE
.PP
/proc/sys
.RS 4
调整内核各项参数的一个界面。 主要通过
\fBsysctl.d\fR(5)
中的配置文件进行设置。 但在沙盒或容器中该目录通常以只读方式挂载(也就是禁止修改内核参数)。
.RE
.PP
/sys
.RS 4
显示所有已发现设备以及其他功能的虚拟文件系统。 此文件系统主要用作内核与用户交互的界面。 在沙盒或容器中该目录通常以只读方式挂载。 可以在该目录的子目录中 再挂载其他特定用途的虚拟文件系统。
.RE
.SH "兼容性软连接"
.PP
/bin, /sbin, /usr/sbin
.RS 4
这三个软连接都指向
/usr/bin
以确保对传统路径的兼容。
.RE
.PP
/lib
.RS 4
这个软连接指向
/usr/lib
以确保对传统路径的兼容。
.RE
.PP
/lib64
.RS 4
在64位系统上， 这个软连接指向
\fI$libdir\fR
以确保对传统路径的兼容。 此软连接仅存在于动态加载器位于此路径的系统架构上。
.RE
.PP
/var/run
.RS 4
这个软连接指向
/run
以确保对传统路径的兼容。
.RE
.SH "家目录"
.PP
用户应用如果想要在用户的家目录中保存文件或目录，那么应该遵守下面的规范。 注意，下面的某些目录虽然比较脆弱， 但是已经被
\m[blue]\fBXDG Base Directory Specification\fR\m[]\&\s-2\u[3]\d\s+2
标准化了。 其他为高层次用户资源定义的位置参见
\m[blue]\fBxdg\-user\-dirs\fR\m[]\&\s-2\u[5]\d\s+2
文档。
.PP
~/\&.cache
.RS 4
应该持久保存的用户缓存。 应用可以在该目录中放置非关键的用户缓存。 清空该目录中的缓存必须不影响应用的正常工作 (但应用可以花费额外的时间重建这些缓存)。 如果应用程序发现
\fI$XDG_CACHE_HOME\fR
环境变量已经被设置， 那么应该使用
\fI$XDG_CACHE_HOME\fR
环境变量的设置， 而不应该直接使用
~/\&.cache
目录。
.RE
.PP
~/\&.config
.RS 4
应该持久保存的用户配置与状态。 当新用户刚被创建时，该目录应该初始为空或根本不存在。 如果期望的配置文件不存在于该目录中， 那么应用程序应该回退到默认设置，而不应该罢工。 如果应用程序发现
\fI$XDG_CONFIG_HOME\fR
环境变量已经被设置， 那么应该使用
\fI$XDG_CONFIG_HOME\fR
环境变量的设置， 而不应该直接使用
~/\&.config
目录。
.RE
.PP
~/\&.local/bin
.RS 4
存放应当出现在用户专属的
\fI$PATH\fR
搜索路径中的用户命令(可执行文件)。 建议仅将命令行工具放到此目录中， 而例如守护进程之类的非命令行工具， 则应该放到
~/\&.local/lib
下的子目录中。 注意，当在此目录中存放特定于体系结构的可执行文件时， 可能会因为与其他不同体系结构的系统共享家目录而出现故障。
.RE
.PP
~/\&.local/lib
.RS 4
存放通用于所有体系结构的、静态的用户专属数据。这包括软件包内部使用的可执行文件、以及例如守护进程之类的非命令行工具。这些二进制文件可用于该操作系统支持的所有体系结构。 不要在此目录中放置公共库，而应该将它们放到
~/\&.local/lib/\fIarch\-id\fR
目录中(参见下文)。
.RE
.PP
~/\&.local/lib/\fIarch\-id\fR
.RS 4
存放专属于特定体系结构的动态链接库。
\fIarch\-id\fR
的具体名称遵守
\m[blue]\fBMultiarch Architecture Specifiers (Tuples)\fR\m[]\&\s-2\u[4]\d\s+2
列表的规范。
.RE
.PP
~/\&.local/share
.RS 4
在多个软件包之间共享的资源，例如图标、字体等资源。 此目录下的子目录结构及文件格式， 取决于确保软件之间正常相互操作的各种规范。 如果应用程序发现
\fI$XDG_DATA_HOME\fR
环境变量已经被设置， 那么应该使用
\fI$XDG_DATA_HOME\fR
环境变量的设置， 而不应该直接使用
~/\&.local/share
目录。
.RE
.SH "非特权进程的写权限"
.PP
非特权进程通常对大多数目录都没有写权限。
.PP
但对于普通用户的非特权进程来说，可以写入
/tmp,
/var/tmp,
/dev/shm,
\fI$HOME\fR
(通常位于
/home
下),
\fI$XDG_RUNTIME_DIR\fR
(通常位于
/run/user
下) 目录。
.PP
而对于系统的非特权进程来说，则仅可以写入
/tmp,
/var/tmp,
/dev/shm
目录。 如果系统的非特权进程需要在
/var
或
/run
目录中创建一个专属的、可写入的目录， 那么可以在守护进程丢弃特权之前先创建该目录，或者通过
\fBtmpfiles.d\fR(5)
在系统启动时先创建该目录， 或者通过服务单元文件中的
\fIRuntimeDirectory=\fR
指令(详见
\fBsystemd.unit\fR(5)
手册)创建该目录。
.SH "文件类型"
.PP
Unix文件系统支持不同的文件节点类型： 普通文件、目录、软连接、字符设备、块设备、 套接字(socket)、管道(FIFO)。
.PP
强烈建议仅将设备文件放置在
/dev
目录中、 仅将套接字(socket)与管道(FIFO)文件放置在
/run
目录中。 而普通文件、目录、软连接则可以放置在所有目录中。
.SH "系统软件包"
.PP
系统软件包的开发者应该严格遵守下面的文件布局规范。 下面列出了发行商提供的系统软件包中各类文件的推荐位置：
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&系统软件包中静态文件的推荐位置
.TS
allbox tab(:);
lB lB.
T{
目录
T}:T{
用途