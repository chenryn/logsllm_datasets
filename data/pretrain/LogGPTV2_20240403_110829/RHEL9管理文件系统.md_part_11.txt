    ::: itemizedlist
    -   `LAYOUT`{.literal} 统计数据指示客户端和服务器使用 pNFS SCSI
        操作的请求。
    -   `读`{.literal} 和 `写`{.literal} 统计指示客户端和服务器回退到
        NFS 操作的请求。
    :::
:::
:::
:::
[]{#getting-started-with-fs-cache_managing-file-systems.html}
::: chapter
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#getting-started-with-fs-cache_managing-file-systems}第 9 章 FS-Cache 入门 {.title}
:::
FS-Cache
是一种持久的本地缓存，文件系统可以使用它通过网络检索数据，并将其缓存在本地磁盘上。这有助于最小化网络流量，以便用户从通过网络挂载的文件系统访问数据（例如
NFS）。
::: section
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#overview-of-the-fs-cache_getting-started-with-fs-cache}FS-Cache 概述 {.title}
:::
下图显示了 FS-Cache 的工作原理：
::: figure
[]{#getting-started-with-fs-cache_managing-file-systems.html#fig-fscachemain}
**图 9.1. FS-Cache 概述**
::: figure-contents
::: mediaobject
![FS-Cache 概述](images/fs-cache.png)
:::
:::
:::
FS-Cache 旨在对系统的用户和管理员尽可能透明。与 Solaris 上的
`cachefs`{.literal} 不同，FS-Cache
允许服务器上的文件系统直接与客户端的本地缓存进行交互，而不创建过度挂载的文件系统。使用
NFS 时，挂载选项指示客户端挂载启用了 FS-cache 的 NFS
共享。挂载点将导致两个内核模块的自动上传：`fscache`{.literal} 和
`cachefile`{.literal}。`cachefilesd`{.literal}
守护进程与内核模块进行通信来实施缓存。
FS-Cache 不会改变通过网络工作的文件系统的基本操作 -
它只是为文件系统提供了一个永久的位置，它可以在该位置缓存数据。例如，客户端仍然可以挂载
NFS 共享，无论是否启用了 FS-Cache。此外，缓存的 NFS
可以处理不能全部放入缓存的文件（无论是单独的还是总体的），因为文件可以部分缓存，且不必预先完全读取。FS-Cache
还会隐藏发生在客户端文件系统驱动程序的缓存中的所有 I/O 错误。
要提供缓存服务，FS-Cache 需要一个
[*缓存后端*]{.emphasis}。缓存后端是配置来提供缓存服务的存储驱动程序，即
`cachefile`{.literal}。在这种情况下，FS-Cache
需要一个挂载的基于块的文件系统，该文件系统支持 `bmap`{.literal}
和扩展属性（例如 ext3）来作为其缓存后端。
支持 FS-Cache 缓存后端所需的功能的文件系统包括以下文件系统的 Red Hat
Enterprise Linux 9 实现：
::: itemizedlist
-   ext3（启用了扩展属性）
-   ext4
-   XFS
:::
FS-Cache
不能任意缓存任何文件系统，不论是通过网络还是通过其他方式：必须更改共享文件系统的驱动程序，来允许与
FS-Cache、数据存储/检索以及元数据设置和验证进行交互。FS-Cache
需要来自缓存文件系统的[ *索引密钥*]{.emphasis} 和
[*一致性数据*]{.emphasis}
来支持持久性：使用索引密钥匹配文件系统对象来缓存对象，使用一致性数据来确定缓存对象是否仍然有效。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在 Red Hat Enterprise Linux 9 中，不会默认安装
[**[cachefilesd]{.package}**]{.strong} 软件包，需要手动安装。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#performance-guarantee_getting-started-with-fs-cache}性能保证 {.title}
:::
FS-Cache
[*不*]{.emphasis}保证更高的性能。使用缓存会导致性能下降：例如，缓存的
NFS 共享会为跨网络查找增加对磁盘的访问。虽然 FS-Cache
尝试尽可能异步，但有一些同步路径（例如读取）的情况，其中异步是不可能的。
例如，使用 FS-Cache ，通过没有负载的 GigE 网络在两台计算机之间缓存 NFS
共享，可能不会在文件访问方面显示出任何性能的改进。相反，从服务器内存而不是从本地磁盘可以更快地满足NFS
请求。
因此，使用 FS-Cache 是各种因素之间的 [*折衷*]{.emphasis}。例如，如果使用
FS-Cache 来缓存 NFS
流量，它可能会减慢一点儿客户端的速度，但通过满足本地的读请求而无需消耗网络带宽，可以大量减少网络和服务器加载。
:::
::: section
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#setting-up-a-cache_getting-started-with-fs-cache}设置缓存 {.title}
:::
目前，Red Hat Enterprise Linux 9 只提供 `cachefiles`{.literal}
缓存后端。`cachefilesd`{.literal} 守护进程启动并管理
`cachefile`{.literal}。`/etc/cachefilesd.conf`{.literal} 文件控制
`cachefile`{.literal} 如何提供缓存服务。
缓存后端的工作原理是在托管缓存的分区上维护一定数量的空闲空间。当系统的其他元素耗尽空闲空间时，它会增长和收缩缓存，使得可以在根文件系统（例如，在笔记本电脑上）上安全地使用。FS-Cache
对此行为设置默认值，可以通过 [*cache cull limits*]{.emphasis}
进行配置。有关配置 cache cull limits 的更多信息，请参阅 [Cache cull
limits
配置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#cache-cull-limits-configuration_getting-started-with-fs-cache){.link}。
这个过程演示了如何设置缓存。
::: itemizedlist
**先决条件**
-   已 [**[安装]{.package}**]{.strong} cachefilesd
    软件包，且服务已成功启动。要确定该服务正在运行，请使用以下命令：
    ``` literallayout
    # systemctl start cachefilesd
    # systemctl status cachefilesd
    ```
    状态必须 [*处于活动状态（正在运行）*]{.emphasis} 。
:::
::: orderedlist
**流程**
1.  在缓存后端中配置要将哪个目录用作缓存，请使用以下参数：
    ``` literallayout
    $ dir /path/to/cache
    ```
2.  通常，缓存后端目录是在 `/etc/cachefilesd.conf`{.literal} 中将其设为
    `/var/cache/fscache`{.literal}，如下所示：
    ``` literallayout
    $ dir /var/cache/fscache
    ```
3.  如果要更改缓存后端目录，selinux 上下文必须与
    `/var/cache/fscache`{.literal} 相同：
    ``` literallayout
    # semanage fcontext -a -e /var/cache/fscache /path/to/cache
    # restorecon -Rv /path/to/cache
    ```
4.  设置缓存时，将 [*/path/to/cache*]{.emphasis} 替换为目录名称。
5.  如果给定的设置 selinux 上下文的命令无法工作，请使用以下命令：
    ``` literallayout
    # semanage permissive -a cachefilesd_t
    # semanage permissive -a cachefiles_kernel_t
    ```
    FS-Cache 会将缓存存储在托管 `/path/to/cache`{.literal}
    的文件系统中。在笔记本电脑上，建议使用 root
    文件系统(`/`{.literal})作为主机文件系统，但对于台式电脑而言，挂载专门用于缓存的磁盘分区更为明智。
6.  主机文件系统必须支持用户定义的扩展属性；FS-Cache
    使用这些属性来存储一致的维护信息。要为 ext3 文件系统（例如
    `device`{.literal}）启用用户定义的扩展属性，请使用：
    ``` literallayout
    # tune2fs -o user_xattr /dev/device
    ```
7.  要在挂载时为文件系统启用扩展属性，作为替代方法，请使用以下命令：
    ``` literallayout
    # mount /dev/device /path/to/cache -o user_xattr
    ```
8.  配置文件就位后，启动 `cachefilesd`{.literal} 服务：
    ``` literallayout
    # systemctl start cachefilesd
    ```
9.  要将 `cachefilesd`{.literal} 配置为在引导时启动，请以 root
    用户身份执行以下命令：
    ``` literallayout
    # systemctl enable cachefilesd
    ```
:::
:::
::: section
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#cache-cull-limits-configuration_getting-started-with-fs-cache}cache cull limits 配置 {.title}
:::
`cachefilesd`{.literal}
守护进程的工作原理是：缓存来自共享文件系统的远程数据，以释放磁盘上的空间。这可能会消耗掉所有空闲空间，如果磁盘还存放
root 分区，这可能会很糟糕。为了对此进行控制，`cachefiled`{.literal}
会尝试通过丢弃缓存中的旧对象（例如，最近不经常访问的）来维护一定数量的空闲空间。这个行为被称为
[*缓存剔除*]{.emphasis}。
缓存筛选是根据底层文件系统中可用块的百分比以及可用文件的百分比来实现的。`/etc/cachefilesd.conf`{.literal}
中有控制六个限制的设置：
::: variablelist
[brun [*N*]{.emphasis}%（块百分比）、frun [*N*]{.emphasis}%（文件百分比）]{.term}
:   如果缓存中空闲空间的数量和可用文件的数量超过这两个限制，则关闭筛选。
[bcull [*N*]{.emphasis}%（块百分比）、fcull [*N*]{.emphasis}%（文件百分比）]{.term}
:   如果缓存中可用空间的数量或文件的数量低于其中任何一个限制，则启动筛选。
[bstop [*N*]{.emphasis}%（块百分比）、fstop [*N*]{.emphasis}%（文件百分比）]{.term}
:   如果缓存中可用空间的数量或可用文件的数量低于其中任何一个限制，则不允许进一步分配磁盘空间或文件，直到筛选再次引发超过这些限制的情况。
:::
每个设置的 `N`{.literal} 的默认值如下：
::: itemizedlist
-   `brun`{.literal}/`frun`{.literal} - 10%
-   `bcull`{.literal}/`fcull`{.literal} - 7%
-   `bstop`{.literal}/`fstop`{.literal} - 3%
:::
在配置这些设置时，必须满足以下条件：
::: itemizedlist
-   0 ࣘ `bstop`{.literal} \
# []{#getting-started-with-fs-cache_managing-file-systems.html#retrieving-statistical-information_getting-started-with-fs-cache}从 fscache 内核模块检索统计信息 {.title}
:::
FS-Cache 还跟踪一般的统计信息。这个流程演示了如何获取此信息。
::: orderedlist
**流程**
1.  要查看有关 FS-Cache 的统计信息，请使用以下命令：
    ``` literallayout
    # cat /proc/fs/fscache/stats
    ```
:::
FS-Cache
统计数据包括有关决策点和对象计数器的信息。如需更多信息，请参阅以下内核文档：
`/usr/share/doc/kernel-doc-4.18.0/Documentation/filesystems/caching/fscache.txt`{.literal}
:::
::: section
::: titlepage
# []{#getting-started-with-fs-cache_managing-file-systems.html#fs-cache-references_getting-started-with-fs-cache}FS-Cache 参考 {.title}
:::
本节提供了 FS-Cache 的参考信息。
::: orderedlist
1.  有关 `cachefilesd`{.literal} 以及如何配置它的更多信息，请参阅
    `man cachefilesd`{.literal} 和
    `man cachefilesd.conf`{.literal}。以下内核文档还提供附加信息：
    ::: itemizedlist
    -   `/usr/share/doc/cachefilesd/README`{.literal}
    -   `/usr/share/man/man5/cachefilesd.conf.5.gz`{.literal}
    -   `/usr/share/man/man8/cachefilesd.8.gz`{.literal}
    :::
2.  有关 FS-Cache
    的常用信息，包括其设计约束、可用统计和功能的详情，请查看以下内核文档：
    `/usr/share/doc/kernel-doc-4.18.0/Documentation/filesystems/caching/fscache.txt`{.literal}
:::
:::
:::
[]{#using-the-cache-with-nfs_managing-file-systems.html}
::: chapter
::: titlepage
# []{#using-the-cache-with-nfs_managing-file-systems.html#using-the-cache-with-nfs_managing-file-systems}第 10 章 在 NFS 中使用缓存 {.title}
:::
除非明确指示，否则 NFS 将不会使用缓存。本段落介绍了如何使用 FS-Cache
配置 NFS 挂载。
::: itemizedlist
**先决条件**
-   [**[cachefilesd]{.package}**]{.strong}
    软件包已安装并在运行。要确保它正在运行，请使用以下命令：
    ``` literallayout
    # systemctl start cachefilesd
    # systemctl status cachefilesd
    ```
    状态必须 [*处于活动状态（正在运行）*]{.emphasis} 。
-   使用以下选项挂载 NFS 共享：
    ``` literallayout
    # mount nfs-share:/ /mount/point -o fsc
    ```
    对 `/mount/point`{.literal}
    下文件的所有访问都将通过缓存，除非文件是为了直接 I/O
    或写而打开。如需更多信息，请参阅 [NFS
    的缓存限制](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#cache-limitations-with-nfs_using-the-cache-with-nfs){.link}。
:::
NFS 使用 NFS 文件句柄 [*而不是*]{.emphasis}
文件名来索引缓存内容，这意味着硬链接的文件可以正确共享缓存。
NFS 版本 3、4.0、4.1 和 4.2
支持缓存。但是，每个版本使用不同的分支进行缓存。
::: section
::: titlepage
# []{#using-the-cache-with-nfs_managing-file-systems.html#configuring-nfs-cache-sharing_using-the-cache-with-nfs}配置 NFS 缓存共享 {.title}
:::