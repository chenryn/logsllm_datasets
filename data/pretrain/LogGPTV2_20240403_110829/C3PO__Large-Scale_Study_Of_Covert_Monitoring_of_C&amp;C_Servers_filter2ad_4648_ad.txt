4
3
2
31
5
0
2
3
2
1
2
1
2
4
4
3
2
31
5
0
2
3
2
1
2
0
2
4
0
3
2
26
5
0
2
3
2
1
2
0
2
4
4
3
2
30
5
0
2
3
2
1
2
4
2
0
4
3
2
30
0
0
0
0
0
0
0
0
0
0
0
2
0
2
0
0
0
0
0
0
0
0
0
0
0
2
0
2
5
1
0
0
0
0
0
0
1
0
0
1
0
8
5
0
0
3
2
1
2
4
2
0
4
3
2
28
0
0
2
0
0
0
0
0
2
0
0
0
2
6
0
0
2
0
0
0
0
0
2
0
0
0
2
6
Table 5 shows that Victim Profiling ranks highest among the
capabilities, accounting for 29% (31 of the 104) of the capabilities.
Next are Live Monitoring and File Exfiltration, with 28 (27%) and
26 (25%) capabilities, respectively. Toward covert monitoring, this
shows that the authorities can expect to locate victim information
on the C&C server including system information, personal files,
and legally admissible evidence of spying.
Among 35 variants, 3 of them (Ragebot, Zbot, and Delf) had 7
FPs from the Victim Profiling, File Exfiltration, and Live Monitoring
identification. Next, 3 of the FNs occurred in the Browser Pass-
word Stealer while 1 occurred in the Victim Profiling distributed
among Cstealer, Sathurbot, and Blackhole. Further investigation
revealed that both the FPs and the FNs are attributed to issues ex-
perienced using angr either due to unresolved symbolic constraints
during CFG generation or temporary variable reuse causing spuri-
ous dependencies in the backward slice. However, our investigation
confirmed these are rare occurrences. Given the low number of
FPs and FNs, and over 94% accuracy, C3PO provides the means to
effectively identify C&C monitoring capabilities.
5 LARGE-SCALE DEPLOYMENT
We deployed C3PO to measure over-permissioned protocols and
C&C monitoring capabilities. We demonstrate that our automated
measurement pipeline provides a scalable means for over-permissioned
bot analysis.
5.1 Post Deployment Dataset Highlights
Deploying C3PO on our dataset exposed a growing trend of over-
permissioned protocol use in malware. C3PO revealed that 62,202
(over 30%) of malware use one or more over-permissioned proto-
cols. Figure 4 illustrates the adoption of over-permissioned pro-
tocols per bot from April 2006 to June 2020. We found that over-
permissioned protocol use peaked in years 2015-2019, which also
accounted for 80% of all over-permissioned protocols C3PO identi-
fied in our study. Interestingly, Figure 4 shows that not only has the
use of over-permissioned protocols increased, but also the number
of protocols used per malware. While a single bot using multiple
over-permissioned protocols was uncommon, this practice is more
prevalent now than ever before with over 4,000 bots using multiple
protocols. In fact, since 2019 alone, C3PO found over 1,500 malware
that used more than one over-permissioned protocol.
C3PO found the remainder of the malware (i.e., 70%) in our
dataset used only HTTP-based communication for command and
control. The prevalence of HTTP-based communication in our
dataset is inline with observations by Peredisci et. al. [48], who
reported that 75% of malware exhibit network activity via HTTP-
based communication. This prevalence led many prior works [49]‚Äì
[51] to target HTTP-based malware exclusively. HTTP-based mal-
ware send and receive data in HTTP packets using non-standard
message protocols. Unlike the protocols considered in this paper,
these HTTP-based messages do not readily provide authorities ac-
cess to the C&C server. As such, these HTTP-only malware do not
function as over-permissioned bots.
5.2 Over-Permissioned Bot Landscape
Table 6 presents interesting insights into over-permissioned proto-
col use. Columns 1 shows the protocols we studied; Column 2, the
number of protocol uses; and Columns 3-4, the total number of ùêªùêø
and ùêøùêø identifiers found. Columns 5-6 show their distribution with
temporal protocol changes of each sample displayed in Column
8. The total number of malware families observed using specific
protocols, as well as the first and last time the malware was seen in
2006-2020 are presented in the remaining columns.
C3PO detected 65,739 uses of over-permissioned protocols. Con-
firming our hypothesis that protocol efficiency supports continued
prevalence, FTP is predominant among all protocols occurring
53,687 accounting for 81% of protocols identified (Column 2, Row
1). Besides, FTP has been consistently used across 88% of the 8,512
malware families over 15 years. This confirms our suspicion that
malware authors either do not realize the inherent vulnerabilities
from using over-permissioned protocols or simply do not expect
them to be used as IVs. We expect the latter to be the case given the
Figure 4: #Over-Permissioned Protocols Per Bot Since 2006.
1204008000160000200620072008200920102011201220132014201520162017201820192020Year SeenOneTwoThreeFourFiveSix# Bots# ProtocolsSession 12B: Analyzing Crashes and Incidents CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea3358ùêªùêø
2006 - 2020
Temporal Changes
Over-Permissioned
Protocol
Table 6: Distribution of Over-Permissioned Bots Identified During the Large-Scale Study.
#Used #Protocol ID Identifiers/Protocol
ùêøùêø Min Avg Max
9
21
21
5
12
11
7
3
6
7
FTP/TFTP
BitTorrent/ùúáTP
WebDAV
MongoDB
ODBC
MySQL
PostgreSQL
MQTT
IRC
Total
1: This is not the sum of this column, but the total number of protocols uses or malware families (see column 9) detected.
55,494 32,531 22,963
892
61
953
2846
117
2,963
0
5
1
670
0
670
262
53
262
117
25
117
23
18
24
10,458
0 10,458
65,7391 34,495 33,607
8,163
56
135
1
126
53
25
1
400
8,512
4
7
16
5
3
5
4
2
3
3
2
1
8
5
1
1
2
1
1
2
#Families
2007-07 2020-06
2011-04 2020-06
2012-07 2020-06
2019-11 2019-11
2010-08 2020-05
2008-12 2020-05
2009-06 2019-10
2014-04 2015-12
2006-10 2020-06
1 2006-10 2020-06
First
Seen
Last
Seen
known FTP insecurities. Thus, bot orchestrators are unknowingly
leaving the front door wide open, a trend our study sheds light on.
From Table 6, Column 8 illustrates the number of protocol iden-
tifiers used in malware since 2006. The number of identifiers per
sample has generally fluctuated, except for the MQTT and IRC
protocols. Similar to the findings in section 4, IRC implementations
generally use 3 tokens to communicate with the C&C server as
illustrated in the average identifiers per use (Column 6). The total
distribution of protocol identifiers found (min=2, avg=3, max=7)
indicates that many protocols use multiple APIs or tokens giv-
ing authorities multiple monitoring vantage points. Notably, the
MongoDB protocol was used in the Cstealer malware then sponta-
neously disappeared from use resulting in a single spike in Column
8. This is likely due to its rapid discovery and public reporting [52],
which immediately revealed a weakness resulting from the use of
the over-permissioned MongoDB protocol. We expect to see a resur-
gence of the MongoDB protocol as some malware authors continue
to prefer efficiency and ease of use over security. Furthermore, the
temporal changes in levels of protocol implementations (i.e., identi-
fiers used) gives us insights into the type of protocol capabilities
enabled; e.g., if C3PO identifies FTPGetFile or FTPPutFile in the
malware, the C&C supports at least FTP read/write. However, as
our study shows, it is safe to assume full protocol implementation
since malware operators adopt over-permissioned protocols for
ease of use and scalability.
Table 6, Row 8 (MQTT) shows a similar trend as the MongoDB
protocol. However, the use of the MQTT protocol is observed over
a longer period. The Expiro malware is the only malware family
detected using the MQTT protocol and disappeared from detection
in 2015. Interestingly, industry experts observed and reported on a
resurgence of Expiro in 2017 [53] adding clarity to our observation,
given that we did not detect it between 2015 and 2020. Industry
experts also reported improvements in Expiro, which we believe
correlates with its lack of presence in recent years, likely stemming
from its exclusion of the MQTT protocol.
From Table 6, we also observe that ùêøùêø identifiers are the majority
with 33,636 detected versus 33,486 ùêªùêø identifiers, although, only
by a slight margin. However, the majority of ùêøùêø implementations
resulted from FTP and IRC protocols. As discussed, the IRC protocol
has no ùêªùêø implementation. Although many IRC bots are no longer
active because of the centralized architecture, which has proven
limitations, new IRC malware have been detected in 2020. We now
turn our attention to the 8,512 malware families identified. This
is important as it illustrates the wide-scale applicability of C3PO
across multiple malware families and variants.
5.3 C&C Monitoring Capabilities at Scale