Certainly! Here is an optimized and more professional version of your text:

---

As of the current master branch, I encountered the following behavior in Julia:

```julia
julia> sin(1)
0.8414709848078965

julia> sin.([1])
ERROR: InexactError()
  in macro expansion at ./broadcast.jl:97 [inlined]
  in macro expansion at ./simdloop.jl:73 [inlined]
  in macro expansion at ./broadcast.jl:91 [inlined]
  in _broadcast!(::Base.#sin, ::Array{Int64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Array{Int64,1}}, ::Type{Val{1}}) at ./broadcast.jl:86
  in broadcast! at ./broadcast.jl:139 [inlined]
  in broadcast(::Function, ::Array{Int64,1}) at ./broadcast.jl:143
  in eval(::Module, ::Any) at ./boot.jl:231
  in macro expansion at ./REPL.jl:92 [inlined]
  in (::Base.REPL.##1#2{Base.REPL.REPLBackend})() at ./event.jl:46
```

I expected the `sin.([1])` operation to work similarly to the `map` function, which behaves as follows:

```julia
julia> map(sin, [1])
1-element Array{Float64,1}:
 0.841471
```

Could someone provide insight into why this error occurs?

---

This version is more structured and clearly presents the problem and the expected behavior.