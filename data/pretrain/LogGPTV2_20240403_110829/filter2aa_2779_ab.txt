# Veil Framework Overview

## Veil Catapult
- **exe_delivery**: Delivers executable payloads.
- **python_injector**: Injects Python code into running processes.
- **powershell_injector**: Injects PowerShell code into running processes.

## New Features
- **Powershell Stagers**: Enhanced stager capabilities using PowerShell.
- **Logging/Cleanup**: Improved logging and cleanup mechanisms.
- **MSF DB Integration**: Integration with Metasploit Framework (MSF) database.
- **Modular Structure**: Modular design for better organization and flexibility.
- **External Integration**: Support for external tools and services.

## New Modules
### Enumeration
- **host/credential_validation**: Validates which credentials work on which systems.
- **domain/user_hunter**: Identifies where Windows domain users are logged in on the network.
- **host/enum_host**: Performs standard enumeration actions on a host.

### Management
- **check_uac/disable_uac/enable_uac**: Full user account control (UAC) management.
- **enable_rdp/disable_rdp**: Enables Remote Desktop Protocol (RDP) and necessary firewall rules.
- **force_logoff/reboot/shutdown**: Triggers specific post-exploitation effects such as logoff, reboot, or shutdown.

### Persistence
- **bitsadmin**: Adds a background job to download and execute an .exe backdoor.
- **registry/sticky_keys**: Sets the sticky keys trick to trigger cmd.exe or uploads an executable.
- **registry/unc_dll**: Appends `\\ATTACKER_IP;` to `%PATH%`, allowing monitoring for DLL hijacking opportunities.

### PowerSploit
- **PowerSploit Modules**: Includes several PowerSploit modules in Pillage.
- **Web Server**: A web server is set up in the background to transparently trigger the `IEX (New-Object Net.WebClient).DownloadString(...)` cradle.
- **Ease of Use**: Simplifies running PowerSploit across multiple machines.

## Primitives
- **pth-wmis**: Pass-the-hash using WMIS.
- **pth-winexe**: Pass-the-hash using WinExe.
- **Impacket-smbexec**: SMB execution using Impacket.
- **Impacket**: General use of Impacket for various tasks.

## Hashes and Plaintexts
### Getting the Goods
- **Hashdumping**:
  - **Traditional Methods**:
    - `gsecdump`, `credump`, etc.
    - Registry backups with `reg.exe`.
    - Meterpreter (hashdump/wdigest).
  - **New Methods**:
    - `Powerdump.ps1`.
    - WCE/Mimikatz binaries.
    - `PowerSploit/Exfiltration/Invoke-Mimikatz.ps1`.

### In-Memory Mimikatz
- **PowerSploit/Exfiltration/Invoke-Mimikatz.ps1**: Utilizes Joe "clymb3r" Bialekâ€™s work in `Invoke-ReflectivePEInjection` to inject an architecture-appropriate Mimikatz .dll.
- **Advantages**: Harnesses the power of Mimikatz without touching disk.

### Pillage Style
- **Aggregation of Techniques**: Combines the best techniques and builds logic for situation-dependent decisions.
- **Logic Example**:
  ```powershell
  if (powershell_installed) {
      if (powershell_installed) {
          Powerdump/PowerSploit
      } else {
          determine_arch
          host/execute appropriate binaries
      }
  }
  ```
- **User Exposure**: Exposes these techniques to the user for situation-dependent decisions.

## Demos
### KB 2871997
- **Overview**: The "pass-the-hash" killing patch, also known as the "Mimikatz KB".
- **Details**:
  - Backport of Windows 8.1 protections.
  - Prevents network logon and remote interactive logon to domain-joined machines using local accounts.
  - **Exceptions**:
    - The rid-500 Administrator account (if enabled) and domain accounts in the Administrators local group can still PTH.
    - PowerShell Remoting still works fine.
    - Windows XP/2003 are unaffected.
  - **Impact**: Raises the bar but PTH isn't going away anytime soon.

### Local Admin Enumeration
- **Capabilities**:
  - With a local/unprivileged domain account, you can use PowerShell (or Nmap) to:
    - Find what the local rid-500 is renamed to and whether it's enabled.
    - Enumerate domain accounts with local admin privileges on a machine.
  - **Integration**: Functions integrated into Veil-Powerview.
  - **More Information**: [http://harmj0y.net](http://harmj0y.net)

### Module Releases
- **Ideas and Contributions**: Many module ideas, and more if people want to contribute.
- **Release Schedule**: Planned releases on the 1st of the month.
- **Updates**: Check [http://www.veil-framework.com](http://www.veil-framework.com) for updates.

### Module Development
- **Flexibility**: Implement any post-exploitation fun you can think of.
- **Triggering Methods**: File downloads, etc., available as library methods.
- **Template**: Included in the tree, and a blog post on developing your own modules is coming soon.

## Recap
- **Flexible Framework**: For post-exploitation of remote machines.
- **Triggering Methods**: Three separate ways of triggering.
- **Module Implementation**: Easy to implement new modules with the common library.
- **Features**: Automation, full logging capabilities, cleanup scripts, and a focus on UI and active development.

## Questions
- **Contact**:
  - @harmj0y
  - harmj0y@veil-framework.com
  - harmj0y in #veil on Freenode
- **Read More**: [https://www.veil-framework.com](https://www.veil-framework.com)
- **Get the Veil Framework**: [https://github.com/Veil-Framework/](https://github.com/Veil-Framework/)