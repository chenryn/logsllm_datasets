### 小米安全中心原创文章
**原文链接：** [https://sec.xiaomi.com/article/17](https://sec.xiaomi.com/article/17)

本文旨在介绍几种跨域获取数据的方法。虽然这些方法较为基础，但在跨站漏洞的挖掘和利用过程中能提供极大的帮助。以下将通过一个具体的例子来总结跨域问题及其解决方案。

#### 场景描述
假设网站A（a.test.com）需要从网站B（b.test.com）获取资源，这涉及到了跨域传输数据的问题。

#### 测试环境设置
为了简化说明，我们将所有测试统一设置在test.com域名下，但二级域名不同。除非特别设置了`document.domain`，否则这些子域名不属于同源。
- **Hosts文件配置：**
  - `ip a.test.com`
  - `ip b.test.com`

#### 同源策略与直接访问尝试
根据同源策略，浏览器会阻止来自不同源的请求以保障数据安全。例如，如果尝试使用iframe加载或JavaScript直接读取其他源的数据，将会收到如下错误信息：
- **使用iframe加载时：**
  ```
  Uncaught SecurityError: Blocked a frame with origin "http://a.test.com" from accessing a frame with origin "http://b.test.com". Protocols, domains, and ports must match.
  ```
- **使用Ajax请求时：**
  ```
  XMLHttpRequest cannot load http://b.test.com/data.html. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://a.test.com' is therefore not allowed access.
  ```

#### 解决方案
##### 情况一：B站点资源可控
当可以修改B站点代码时，有多种方式实现跨域数据获取：
1. **通过设置`document.domain`**
   - 修改data.html和getB.html中的`document.domain = 'test.com';`，使它们共享同一个顶级域名。
2. **利用iframe结合location.hash**
   - B站点的data页面加载一个proxy页面，并通过URL hash传递数据；A站点再从该proxy页面中提取数据。
3. **通过iframe.name属性跨域传递数据**
   - 利用window.name属性存储数据并在同源页间传递。
4. **JSONP技术**
   - 使用动态创建script标签的方法加载远程JSON数据。
5. **HTML5 postMessage API**
   - 适用于现代浏览器，允许不同窗口或iframe之间安全地发送消息。
6. **CORS (跨源资源共享)**
   - 在服务器端设置响应头`Access-Control-Allow-Origin`为特定值或通配符`*`，允许指定来源进行跨域请求。

##### 情况二：B站点资源不可控
如果无法更改B站点的任何内容，则可考虑使用中间代理服务器转发请求。例如，可以通过PHP脚本作为中介，先向目标服务器发起请求并接收响应，然后将其返回给客户端。

以上即为几种常见的跨域数据获取手段及其应用场景分析。希望对您的网络安全研究有所帮助！