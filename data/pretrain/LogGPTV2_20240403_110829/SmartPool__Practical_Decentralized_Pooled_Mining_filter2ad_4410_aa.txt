title:SmartPool: Practical Decentralized Pooled Mining
author:Loi Luu and
Yaron Velner and
Jason Teutsch and
Prateek Saxena
SmartPool: Practical Decentralized Pooled Mining
Loi Luu, National University of Singapore; Yaron Velner, The Hebrew University of Jerusalem; 
Jason Teutsch, TrueBit Foundation; Prateek Saxena, National University of Singapore
https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/luu
This paper is included in the Proceedings of the 26th USENIX Security SymposiumAugust 16–18, 2017 • Vancouver, BC, CanadaISBN 978-1-931971-40-9Open access to the Proceedings of the 26th USENIX Security Symposium is sponsored by USENIXSMARTPOOL: Practical Decentralized Pooled Mining
Loi Luu
Yaron Velner
National University of Singapore
The Hebrew University of Jerusalem
PI:EMAIL
Jason Teutsch
TrueBit Foundation
PI:EMAIL
PI:EMAIL
Prateek Saxena
National University of Singapore
PI:EMAIL
Abstract
Cryptocurrencies such as Bitcoin and Ethereum are op-
erated by a handful of mining pools. Nearly 95% of Bit-
coin’s and 80% of Ethereum’s mining power resides with
less than ten and six mining pools respectively. Although
miners beneﬁt from low payout variance in pooled min-
ing, centralized mining pools require members to trust
that pool operators will remunerate them fairly. Further-
more, centralized pools pose the risk of transaction cen-
sorship from pool operators, and open up possibilities for
collusion between pools for perpetrating severe attacks.
In this work, we propose SMARTPOOL, a novel pro-
tocol design for a decentralized mining pool. Our pro-
tocol shows how one can leverage smart contracts, au-
tonomous blockchain programs, to decentralize cryp-
tocurrency mining. SMARTPOOL gives transaction se-
lection control back to miners while yielding low-
variance payouts. SMARTPOOL incurs mining fees lower
than centralized mining pools and is designed to scale to
a large number of miners. We implemented and deployed
a robust SMARTPOOL implementation on the Ethereum
and Ethereum Classic networks. To date, our deployed
pools have handled a peak hashrate of 30 GHs from
Ethereum miners, resulting in 105 blocks, costing miners
a mere 0.6% of block rewards in transaction fees.
1
Introduction
Cryptocurrencies such as Bitcoin and Ethereum offer the
promise of a digital currency that lacks a centralized is-
suer or a trusted operator. These cryptocurrency net-
works maintain a distributed ledger of all transactions,
agreed upon by a large number of computation nodes (or
miners). The most widely used protocol for agreement
is Nakamoto consensus, which rewards one miner ev-
ery epoch (lasting, say, 10 minutes as in Bitcoin) who
exhibits a solution to a probabilistic computation puzzle
called a “proof-of-work” (or PoW) puzzle [1]. The win-
ning miner’s solution includes a transaction block, which
is appended to the distributed ledger that all miners main-
tain. The reward is substantial (e.g. 12.5 BTC in Bitcoin,
or 30,000 USD at present), incentivizing participation.
Nakamoto-based cryptocurrencies, such as Bitcoin
and Ethereum, utilize massive computational resources
for their mining. Finding a valid solution to a PoW puz-
zle is a probabilistic process, which follows a Poisson
distribution, with a miner’s probability of ﬁnding a solu-
tion within an epoch determined by the fraction of com-
putation power it possesses in the network. Miners with
modest computational power can have extremely high
variance. A desktop CPU would mine 1 Bitcoin block
in over a thousand years, for instance [2]. To reduce
variance, miners join mining pools to mine blocks and
share rewards together. In a mining pool, a designated
pool operator is responsible for distributing computation
sub-puzzles of lower difﬁculty than the full PoW block
puzzle to its members. Each solution to a sub-puzzle has
a probability of yielding a solution to the full PoW block
puzzle—so if enough miners solve them, some of these
solutions are likely to yield blocks. When a miner’s sub-
mitted solution yields a valid block, the pool operator
submits it to the network and obtains the block reward.
The reward is expected to be fairly divided among all
pool members proportional to their contributed solutions.
Problem. Centralized pool operators direct the massive
computational power of their pools’ participants. At the
time of this writing, Bitcoin derives at least 95% of its
mining power from only 10 mining pools; the Ethereum
network similarly has 80% of its mining power ema-
nating from 6 pools. Previous works have raised con-
cerns about consolidation of power on Bitcoin [3,4]. Re-
cent work by Apostolaki et al. has demonstrated large-
scale network attacks on cryptocurrencies, such as dou-
ble spending and network partitioning, which exploit
centralized mining status quo [5]. By design, if a single
pool operator controls more than half of the network’s
total mining power, then a classical 51% attack threat-
USENIX Association
26th USENIX Security Symposium    1409
ens the core security of the Nakamoto consensus protocol
[1]. Cryptocurrencies have witnessed that a single pool
has commandeered more than half of a cryptocurrency’s
hash rate (e.g. DwarfPool1 in Ethereum and GHash.io2
in Bitcoin) on several occasions. In such cases, the pool
operator’s goodwill has been the only barrier to an attack.
Furthermore, pools currently dictate which transac-
tions get included in the blockchain, thus increasing the
threat of transaction censorship signiﬁcantly [6]. While
some Bitcoin pools currently offer limited control to
miners of transaction selection via the getblocktemplate
protocol [7], this protocol only permits a choice between
mining with a transaction set chosen by the pool or min-
ing an empty block. The situation is worse in Ethereum
where it is not yet technically possible for miners in cen-
tralized pools to reject the transaction set selected by the
operator. For example, users recently publicly speculated
that a large Ethereum pool favored its own transactions
in its blocks to gain an advantage in a public crowdsale 3.
One can combat these security issues by running a
pool protocol with a decentralized network of miners in
place of a centralized operator. In fact, one such solution
for Bitcoin, called P2POOL [8], already exists. How-
ever, P2POOL has not attracted signiﬁcant participation
from miners, and consequently its internal operational
network remains open to inﬁltration by attackers. Sec-
ondly, technical challenges have hindered widespread
adoption. Scalable participation under P2POOL’s cur-
rent design would require the system to check a mas-
sive number of sub-puzzles. Furthermore, P2POOL only
works for Bitcoin; we are not aware of any decentralized
mining approach for Ethereum.
Solution. This work introduces a new and practical so-
lution for decentralized pooled mining called SMART-
POOL. We claim two key contributions. First, we ob-
serve that it is possible to run a decentralized pool mining
protocol as a smart contract on the Ethereum cryptocur-
rency. Our solution layers its security on the existing
mining network of a large and widely deployed cryp-
tocurrency network, thereby mitigating the difﬁculty of
bootstrapping a new mining network from scratch. Sec-
ondly, we propose a design that is efﬁcient and scales
to a large number of participants. Our design uses a
simple yet powerful probabilistic veriﬁcation technique
which guarantees the fairness of the payoff. We also in-
troduce a new data structure, the augmented Merkle tree,
for secure and efﬁcient veriﬁcation. Most importantly,
SMARTPOOL allows miners to freely select which trans-
1https://forum.ethereum.org/discussion/5244/
dwarfpool-is-now-50-5
2https://www.cryptocoinsnews.com/warning-ghash-io-
nearing-51-leave-pool/
3https://www.reddit.com/r/ethereum/comments/6itye9/
collecting information about f2pool/
If widely
action set they want to include in a block.
adopted, SMARTPOOL makes the underlying cryptocur-
rency network much more censorship-resistant. Finally,
SMARTPOOL does not charge any fees 4, unlike central-
ized pools, and disburses all block rewards to pool par-
ticipants entirely.
SMARTPOOL can be used to run mining pools for sev-
eral different cryptocurrencies. In this work, we demon-
strate concrete instantiations for Bitcoin and Ethereum.
SMARTPOOL can be run natively within the protocol of
a cryptocurrency — for instance, it can be implemented
in Ethereum itself. We believe SMARTPOOL can sup-
port a variety of standard payoff schemes, as in present
mining pools. In this work, we demonstrate the standard
pay-per-share (or PPS) scheme in our implementation.
Supporting other standard schemes like pay-per-last-n-
shares (PPLNS) and schemes that disincentivize against
block withholding attacks [9–11] is left for future work.
Results. We have implemented SMARTPOOL and a sta-
ble SMARTPOOL implementation has been released and
deployed on the main network via a crowd-funded com-
munity project [12]. As of 18 June 2017, SMARTPOOL-
based pools have mined in total 105 blocks on both
Ethereum and Ethereum Classic networks and have suc-
cessfully handled a peak hashrate of 30 GHs from 2 sub-
stantial miners. SMARTPOOL costs miners as little as
0.6% for operational transaction fees, which is much less
than 3% fees taken in centralized pools like F2Pool 5.
Furthermore, each miner has to send only a few mes-
sages per day to SMARTPOOL. Finally, although being
decentralized, SMARTPOOL still offers the advantage of
low variance payouts like centralized pools.
As a ﬁnal remark, SMARTPOOL does not make cen-
tralized pooled mining in cryptocurrencies impossible,
nor does it incentivize against centralized mining or alter
the underlying proof-of-work protocol (as done in work
by Miller et al. [13]). SMARTPOOL simply offers a prac-
tical alternative for miners to move away from central-
ized pools without degrading functionality or rewards.
Contributions. We claim the following contributions:
• We introduce a new and efﬁcient decentralized
pooled mining protocol for cryptocurrencies. By
leveraging smart contracts in existing cryptocurren-
cies, a novel data structure, and an efﬁcient veriﬁ-
cation mechanism, SMARTPOOL provides security
and efﬁciency to miners.
• We implemented SMARTPOOL and deployed real
mining pools on Ethereum and Ethereum Classic.
The pools have so far mined 105 real blocks and
4The caveat here is that cryptocurrency miners will pay Ethereum
transaction fees to execute SMARTPOOL distributively.
5https://www.f2pool.com/ethereum-blocks
1410    26th USENIX Security Symposium
USENIX Association
have handled signiﬁcant hashrates while deferring
only 0.6% of block rewards to transaction fee costs.
2 Problem and Challenges
We consider the problem of building a decentralized pro-
tocol which allows a large open network to collectively
solve a computational PoW puzzle, and distribute the
earned reward between the participants proportional to
their computational contributions. We expect such a pro-
tocol to satisfy the following properties:
• Decentralization. There is no centralized operator
who operates the protocol and manage other partic-
ipants. The protocol is collectively run by all par-
ticipants in the network. There is also no require-
ment for joining, i.e. anyone with sufﬁcient compu-
tation power can freely participate in and contribute
to solving the PoW puzzle.
• Efﬁciency. The protocol running costs should be
low and offer participants comparable reward and
low variance guarantees as centralized operations.
Furthermore, communication expenses, communi-
cation bandwidth, local computation and other costs
incurred by participants must be reasonably small.
• Security. The protocol protects participants from at-
tackers who might steal rewards or prevent others
from joining the protocol.
• Fairness. Participants receive rewards in proportion
to their share of contributions.
In this paper we focus on this list of properties with
respect to mining pools. Cryptocurrencies like Bitcoin
and Ethereum reward network participants (or miners)
new crypto-coins for solving computationally hard puz-
zles (or proof-of-work puzzles) [1,14,15]. Typically, Bit-
coin miners competitively search for a nonce value sat-
isfying
H(BlockHeader || nonce) ≤ D
(1)
where H is some preimage-resistant cryptographic hash
function (e.g. SHA-256), BlockHeader includes new
set of transactions that the miner wants to append to the
ledger and D is a global parameter which determines
the puzzle hardness. Ethereum uses a different, ASIC-
resistant PoW function [16]. which requires miners to
have a (predetermined) big dataset of 1 GB (increasing
over time). Thus, in Ethereum, the condition (1) becomes
H(BlockHeader || nonce || dataset) ≤ D
in which the dataset includes 64 elements of the 1GB
dataset that are randomly sampled with the nonce and
the BlockHeader as the random seed.
Finding a solution for a PoW puzzle in cryptocurren-
cies requires enormous amount of computation power.
e
r
a
h
s
a
g
n
i
d
n
ﬁ
f
o
y
t
i
l
i
b
a
b
o
r
P
0.6
0.4
0.2
0
Pr[Finding a share in a day]
No. of messages
2.5· 106
2· 106
1.5· 106
1· 106
5· 105
s
e
g
a
s
s
e
m
f
o
.
o
N
5· 105
1· 106
1.5· 106
2· 106
Difﬁculty
0
2.5· 106
Figure 1: The effect of share’s difﬁculty on i) the probability of
a miner with 1 GHs ﬁnding a share within a day as per [2]; ii)
resource (i.e. number of messages) consumed by a miner; in a
decentralized mining pool for Bitcoin (e.g. P2POOL).
Thus miners often join resources and solve the puzzle to-
gether via pooled mining. Currently, most mining pools
follow a centralized approach in which an operator man-
ages the pool and distributes work to pool miners. Here
we are interested in a decentralized approach that allows
miners to collectively run and manage the pool without
inherent trust in any centralized operator.
Threat model and security assumptions. Cryptocur-
rencies like Bitcoin and Ethereum allow users to use
pseudonymous identities in the network. Users do not
have any inherent identities and there is no PKI in the
network. Our solution adheres to this setting.
We consider a threat model where miners are ratio-