bbgyuj h6 uh7 i5y67567y5b7.com 
IP 3 
csfsdfvdbdbbfbnmcnq
8858.com 
IP 1 
2761308267122256373
IP 2 
79735931367645588627.
IP 3 
13348318318656728693.
IP 1  e7722746d7 c642c2 a6793cb8935c45da.com 
IP 2  80b8024c08484f029d 
IP 3  c62fb768dbOc4d 
179bfb200fcc415c9f.com 
2.com 
com 
com 
I c229f5030c741.com 
com 
VII. ANALYSIS OF LIVE TRAFFIC 
Using this approach, 
we clustered 
the data for March 
23 clusters 
were grouped creating 
Of those clusters, 
20th. The 747 clients 
two or more clients. 
the 88 bots found in the ground truth. Figure 11 shows 
a sampling 
in each 
cluster. 
fonts are ones that appear in 
all clients 
appearances 
AGDs in the largest 
in the cluster. 
the domain made. 
The smaller the font, the less 
of the AGDs generated 
by the clients 
four contain 
of 
59 of 
we 
to a 
To further 
the utility 
demonstrate 
an online version and deployed 
of our technique, 
it on  our 
on the host. As a result, 
This setup was used to monitor DNS traffic at 
For the live test, we used an Endace 9.2X2 
(DAG) card connected 
and Generation 
we can take 
of the host (a 2.53 Ghz Intel Xeon core 
implemented 
campus network. 
Data Acquisition 
host machine. 
the border of our campus network. 
The DAG captures  DNS 
packets at line rates and places them in  a shared  memory 
buffer without  relying 
full advantage 
processor 
DNS packets 
the DAG card, they are assigned 
perfonn the initial 
dissection. 
processing, 
each core is assigned 
to easily scale by dynamically 
across multiple 
As 
are placed into the shared memory 
buffer by 
core to 
to an available 
If the packet requires 
further 
it is passed from core to core in a pipeline, 
where 
task. This design allows us 
assigning 
with 16GB memory) for packet inspection. 
a specific 
and tasks 
packets 
cores. 
As Sommer et al. [21] note, utilizing 
is important 
to provide parallelism 
tectures 
able to provide online network analysis 
that end, our network capture 
archi­
multi-core 
to be 
in  order 
at line speeds. 
To 
and analysis 
engine supports 
To attain 
more information 
about the botnet families 
publicly 
available 
we searched 
for information 
websites 
lookups on the domains (e.g., 
these clusters, 
anti-virus 
performed 
if they were sink-holed. 
sink-holed, 
aecgrgbjgaofrilwyg.ru). 
We then 
using dig) to see 
Three of the four clusters 
were 
and the fourth had known cridex AGDs (e.g., 
on the domains. 
blacklists 
for 
and 
The remaining 
29 bots (in the ground truth) 
did not clus­
similarly 
structured 
domains, 
ter. 18 of those hosts generated 
but no two hosts generated 
V). Little information 
domains. 
are sink-holed 
Another 3 clients 
to an address 
was found on the origins 
of these 
contain 
domains that 
linked to the TOS S  botnet [10]. 
multiple 
the exact domains (see Table 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:50:42 UTC from IEEE Xplore.  Restrictions apply. 
Each stage is run on 
[26] 
to stitch 
buffer and en­
matching, 
ring buffers 
and uses two basic thread models: 
together 
stages (dissec­
statistics 
within each stage. 
processing 
etc), and a pool model to 
processing 
processing 
core and we implement 
lock-free 
across the pipeline 
The lock-free 
multi-threaded 
a staged pipeline 
tion, signature 
parallelize 
a different 
to ensure high throughput 
sure data synchronization. 
built using Compare-and-Swap 
by the underlying 
performed 
Layers within a network packet are modelled 
transitions 
FSMs allows us to add  and remove protocol 
easily and provides 
depth" for an individual 
"processing 
our DNS FSM allows the programmer 
into the packet to dissect. 
between states are modelled 
x86 architecture. 
us with the ability 
was 
(CAS) primitives 
to dynamically 
packet. 
provided 
The packet dissection 
finite state machines 
data structure 
to decide how far 
For example, 
by protocol 
as events. 
as states and 
specific 
(FSMs). 
assign 
Using 
is 
dissectors 
spans  a 
Our online evaluation 
period of 24 hours in 
2012. The traffic reflects well-known 
diurnal 
with a large mid-day peak of approximately 
80,000 
November, 
patterns, 
DNS connections 
for less than 10% of the overall 
which highlights 
one of the benefits of using such data for botnet detection. 
Our throughput 
traffic with zero packet loss and < 15% CPU utilization. 
shows that we can operate 
NX traffic accounts 
per minute. 
analysis 
However, 
traffic, 
on live 
DNS zones (rather 
domain names), domain name caching, 
we are able to store state information 
than fully 
and Zipf 
on the order 
Note that by using NX traffic, 
qualified 
filters, 
of megabytes 
could use space efficient 
to keep track of state for several 
leave this as an exercise 
versus gigabytes. 
In larger deployments, 
bloom filters) 
data structures 
IP addresses. 
for future work. 
million 
(e.g., 
one 
We 
traffic. Included 
Analysis of our results show 63 cases of sus­
pected or known malicious 
in our find­
ings were the TDS S  and Z bots, numerous spam­
bots, an OSX. FlashFake trojan and a FakeAV trojan. 
We also detected 
BlackHole [23]. One noteworthy 
the so-called 
domains that are misspellings 
traffic of RunForestRun [25] and 
was that of 
typo-squatting 
of existing 
gbaz z et ta. it, gaz z xet ta. it). Interestingly, 
discovery 
trojan [7] that uses 
domains (e.g. 
Italian 
the do­
main names used by this trojan would have relatively 
edit distance 
the similarity-based 
scores making it difficult 
to detect them using 
techniques 
in §IV. 
low 
VIII. CONCLUSION 
In this paper, we study currently  available 
techniques 
can detect the presence 
domain names, they incur high false positive 
techniques 
algorithmically 
accuracy 
domain 
and timeli­
generated, 
in operational 
settings. 
We show 
on  high 
malicious, 
long observation 
for detecting 
names. Our treatment 
centers 
ness, which are key criteria 
that while contemporary 
of malicious 
rates, and require 
cation can occur. We address 
contemporary 
nique based on sequential 
takes advantage 
high number of unique NX responses 
command-and-control 
uations 
as three to four NX responses, 
approaches 
server. 
by presenting 
hypothesis 
testing. 
of the fact that bots generate 
Our extensive 
when searching 
for a 
eval­
empirical 
periods 
before classifi­
many of the shortcomings 
of 
show that we are able to classify 
hosts in as little 
on average. 
Moreover, 
the 
a lightweight 
tech­
Our approach 
a relatively 
lightweight 
real-world 
nature of our approach 
deployment. 
makes it well-suited 
for 
IX. ACKNOWLEDGEMENTS 
Technology 
of the Information 
We express our gratitude 
to Stan Waddell and Alex 
Service Office and 
Bil 
Murray Anderegg, 
in deploying 
the 
for this study. The researchers 
a longstanding 
Everett 
our networking 
staff (especially, 
Hayes and Jim Gogan) for their efforts 
infrastructure 
nology Service Office  have 
of understanding 
traffic on campus. The memorandum covers specific uses 
and types of networking 
for 
securing 
Michael Bailey, 
mous reviewers 
is supported 
under award numbers 0831245 and 1127361 and the Natural 
Sciences 
Kevin Snow, Andrew White and the anony­
for their insightful 
This work 
data, as well as conditions 
such data. We also thank Jay Aikat, 
and the Tech­
memorandum 
network 
in part by the National 
and Engineering 
in place to collect 
Council of Canada. 
and accessing 
anonymized 
comments. 
Research 
Science Foundation, 
REFERENCES 
[1] M. Antonakakis, 
R. Perdisci, 
N. Feamster. 
for DNS. In USENIX Security 
R. Perdisci, 
[2] M. Antonakakis, 
Building 
Symposium, 
W Lee, N. Vasiloglou, 
2010. 
D. Dagon, W. Lee, and 
a Dynamic Reputation 
System 
and D. Dagon. Detecting 
per DNS Hierarchy. 
2011. 
Malware Domains at the Up­
In USENIX Security 
Symposium, 
[3] M. Antonakakis, 
R. Perdisci, 
Y. Nadji, N. Vasiloglou, 
W Lee, and D. Dagon. From Throw­
S. Abu-Nimeh, 
Away Traffic to Bots: Detecting 
based Malware. 
In USENlX Security 
the Rise of DGA­
[4] L. Bilge, E. Kirda, C. Kruegel, 
EXPOSURE: Finding Malicious 
sive DNS Analysis. 
Distributed 
System  Security, 
In Symposium  on 
Domains using Pas­
Network and 
Symposium, 
and M. Balduzzi. 
2012. 
Feb. 2011. 
Detecting 
[5] K. Born and D. Gustafson. 
DNS Tunnels 
Using Character 
of the Annual Computer Security 
Frequency 
Analysis. 
Conference, 
2010. 
In Proceedings 
[6] J. Dilley, 
B. Maggs, J. Parikh, 
H. Prokop, 
and B. Weihl. Globally 
IEEE Internet Computing, 
distributed 
6(5), Sept. 2002. 
content 
R. Sitaraman, 
delivery. 
[7] A. Eckelberry. 
Massive italian 
ring foists 
malware on users. http://goo.gI/4ZzMI, 
S. Landau, M. Leese, and D. Stahl. Cluster 
Wiley Series in Probability 
typosquatting 
2007. 
and Statistics. 
[8] B. Everitt, 
Analysis. 
Wiley, 2011. 
[9] M. Felegyhazi, 
C. Kreibich, 
and V. Paxson. On the 
domain blacklisting. 
In USENIX 
of proactive 
potential 
Conference on Large-Scale 
Threats, 
2010. 
Exploits and Emergent 
TDL4 Top Bot. See 
[10] S. Golovanov 
and I. Soumenkov. 
http://goo.gl/23BaA, 
[11] S. Hao, N. Feamster, 
DNS Behavior 
2011. 
and R. Pandrangi. 
Initial 
of Malicious 
SIGCOMM Internet Measurement 
Monitoring 
the 
Domains. 
In ACM 
Conference, 
of 
2011. 
[12] J.-W Ho, M. Wright, and S. Das. Fast detection 
sensor networks 
node attacks 
mobile replica 
using sequential 
on Mobile Computing, 
hypothesis 
in wireless 
testing. 
10(6):767 
-782, June 2011. 
IEEE Transactions 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:50:42 UTC from IEEE Xplore.  Restrictions apply. 
[13] ISC. Google Chrome and (weird) 
DNS Requests. 
http: 
//goo.gl/
j4SCA, 2011. 
[14] N. Jiang, J. Cao, Y. Jin, L. E. Li, and Z.-L. Zhang. 
suspicious 
Identifying 
graph analysis. 
work Protocols, 
In International 
pages 144-153, 
[15] J. Jung, V. Paxson, A. W. Berger, 
through dns failure 
Conference on Net­
2010. 
and H. Balakrishnan. 
activities 
Detection 
Fast Portscan 
Testing. In IEEE Symposium on 
May 2004. 
Using Sequential 
Hypothesis 
and Privacy, 
Security 
[16] J. lung, R. Milito, 
detection 
real-time 
Journal of Computer Virology, 4:197-210, 
and V. Paxson. On the adaptive 
of fast-propagating 
200S. 
network worms. 
[17] D. Kaminsky. 
Black ops 200S-its the end of the cache 
as we know it. Black Hat USA, 200S. 
[1S] S. Kullback 
and R. Leibler. On information 
[23] Sophos Inc. Exploring 
//goo.gl/ZhLvp, 
[24] B. Stone-Gross, 
the blackhole 
exploit 
kit. http: 
2012. 
M. Cova, L. Cavallaro, 
R. Kemmerer, 
C. Kruegel, 
Analysis 
B. Gilbert, 
and G. Vi­
of a botnet 
M. Szydlowski, 
gna. Your botnet is my botnet: 
takeover. 
Communications 
[25] Unmask Parasites. 
Security, 
pages 635-647, 
2009. 
Runforestrun 
and pseudo random 
In ACM  Conference on Computer and 
domains. 
http://goo.gl/xRWtw, 
2012. 
[26] J. Valois. Implementing 
lock-free 
queues. In In­
ternational 
Computing 
Conference on Parallel and Distributed 
Systems, 
pages 64-69, 
1994. 
[27] R. Villamarn-Salomn 
using anomaly detection 
botnets 
dns traffic. In IEEE Consumer Communications 
Networking 
and l. Brustoloni. 
techniques 
to 
& 
Identifying 
applied 
Conference (CCNC), 200S. 
sufficiency. 
The Annals of Mathematical 
1951. 
(1):79-S6, 
Inc., 1947. 
Statistics, 
[2S] A. Waldo Sequential 
Analysis. 
John  Wiley 
and Sons, 
[19] P. H. R.O. Duda and D. Stork. Pattern Classification. 
[29] N. Weaver, S. Staniford, 
and V. paxson. Very  fast 
Springer-Verlag 
Sept. 2007. 
New York, Inc., Secaucus, 
NJ, USA, 
[20] S. E. Schechter, 
J. Jung, and A. W.  Berger. Fast 
detection 
of scanning 
on Recent Advances 
S l ,  2004. 
worm infections. 
In Symposium 
in Intrusion 
pages 59-
Detection, 
[21] R. Sommer, V. Paxson, and N. Weaver. An architec­
of scanning 
worms, revisited. 
In Malware 
containment 
Detection, 
pages 113-145. 
[30] A. White, S. Krishnan, 
2007. 
M. Bailey, 
F. Monrose, and 
Data: Opaque Traffic and 
Clear and Present 
P. Parros. 
its Security 
on Network and Distributed 
2013. 
Implications 
for the Future. 
In Symposium 
System Security, 
Feb. 
ture for exploiting 
network intrusion 
putation: 
Practice 
July 2009. 
multi-core 
prevention. 
& Experience, 
processors 
Concurrency and Com­
to parallelize 
21(10):1255-1279, 
[31] S. Yadav and A. N. Reddy. Winning with DNS 
In 
for Faster Botnet Detection. 
Failures:  Strategies 
International 
Communication 
Networks, 
Conference on Security 
2011. 
and Privacy  in 
[32] S. Yadav, A. K.  K. Reddy, A. N. Reddy, and S. Ranjan. 
and 
22 
[22] S. Son and V. Shmatikov. 
DNS Cache Poisoning. 
on Security 
Sept. 2010. 
and Privacy 
The Hitchhiker's 
Guide to 
In International 
in Communication 
Conference 
Networks, 
algorithmically 
Detecting 
names. In ACM Internet Measurement 
pages 4S-61, 2010. 
Conference, 
generated  malicious  domain 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:50:42 UTC from IEEE Xplore.  Restrictions apply.