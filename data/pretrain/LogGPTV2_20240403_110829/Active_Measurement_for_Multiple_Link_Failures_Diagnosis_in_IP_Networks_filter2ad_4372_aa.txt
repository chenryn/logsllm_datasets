title:Active Measurement for Multiple Link Failures Diagnosis in IP Networks
author:Hung Xuan Nguyen and
Patrick Thiran
Active Measurement for Multiple Link Failures
Diagnosis in IP Networks
Hung X. Nguyen(cid:1) and Patrick Thiran
EPFL CH-1015 Lausanne, Switzerland
Abstract. Simultaneous link failures are common in IP networks [1].
In this paper, we develop a technique for locating multiple failures in
Service Provider or Enterprise IP networks using active measurement.
We propose a two-phased approach that minimizes both the additional
traﬃc due to probe messages and the measurement infrastructure costs.
In the ﬁrst phase, using elements from max-plus algebra theory, we show
that the optimal set of probes can be determined in polynomial time,
and we provide an algorithm to ﬁnd this optimal set of probes. In the
second phase, given the optimal set of probes, we compute the location
of a minimal set of measurement points (beacons) that can generate
these probes. We show that the beacon placement problem is NP-hard
and propose a constant factor approximation algorithm for this problem.
We then apply our algorithms to existing ISP networks using topologies
inferred by the Rocketfuel tool [2]. We study in particular the diﬀerence
between the number of probes and beacons that are required for multiple
and single failure(s) diagnosis.
1 Introduction
Routing decisions and content distribution require proper connectivity and la-
tency information to direct traﬃc in an optimal fashion. The family of Internet
protocols collect and distribute only a limited amount of information on the
topology, connectivity and state of the network. Hence information of interest
for Internet Service Providers (ISPs), such as link delays or link failures, has to
be inferred from experimental measurements. The strategy to obtain network
information through end-to-end measurements, known as Internet tomography,
is therefore of great interest to the research community [3,4,5,2,6,7]. The majo-
rity of work on network tomography concentrates on either topology discovery
(e.g. [3,4,2]), or link delay monitoring (e.g. [5]). Some recent research showed that
active measurements can also be used to pinpoint failures in IP networks [6, 7].
In general, an active probing system consists of several measurement points.
Each measurement point, called a beacon, can send IP messages to all nodes
in the network. Each message sent from a beacon to a network node for the
purpose of monitoring is called a probe. To detect failures, the path that each
probe actually follows is compared with the path that the probe should follow
(cid:1) Hung X. Nguyen’s work is ﬁnancially supported by grant DICS 1830 of the Hasler
Foundation, Bern, Switzerland.
C. Barakat and I. Pratt (Eds.): PAM 2004, LNCS 3015, pp. 185–194, 2004.
c(cid:1) Springer-Verlag Berlin Heidelberg 2004
186
H.X. Nguyen and P. Thiran
according to the current network topology information. If the two paths are
diﬀerent, at least one link in the path determined by the current topology has
failed [7]. The authors in [6,7] study the problem of detecting and locating failures
under the assumption that at most one failure can happen at a time. Under this
assumption, a set of probes that traverse all links in the network is suﬃcient
to diagnose any such single failure. The objective in [6, 7] is to determine the
smallest set of beacons whose probes cover all links in the network. This problem
is proven to be NP-complete and approximation algorithms are given in [6] for
general topologies and in [7] for the current Internet topology. Once the beacons
are located, the smallest set of probes must still be determined, Bejerano et.
al. [6] show that this problem is also NP-complete.
Multiple link failures in IP networks happen much more frequently than one
might expect; [1] has recently reported that nearly 35% of link failures in the
Sprint backbone are multiple failures. This ﬁgure emphasizes the need for a
failure detection and location scheme that takes into account the existence of
multiple failures. Although the active probing scheme in [6] can work under the
presence of several link failures, it cannot detect and locate simultaneous link
failures. To our knowledge, there are no active monitoring techniques to date
that apply to simultaneous failures in IP networks.
In this work, we are interested in using active probing to detect and locate
link failures, under the assumption that several links can fail at one time. To
achieve this goal, a distributed set of beacons running a special software are
deployed at key sites across the entire network. A beacon only needs to send
probes to other nodes, and see what routes the probes take. Probe messages can
be implemented by tools like traceroute [8] or skitter [9]. Using probes to pinpoint
network faults has several advantages over monitoring routing protocol messages
(e.g., OSPF LSAs), or using SNMP traps to identify failed links. Firstly, probe-
based techniques are routing protocol agnostic; as a result, they can be used
with a wide range of protocols like OSPF, IS-IS, RIP, etc. Secondly, SNMP trap
messages may be unreliable because they use UDP as the transport protocol [6].
Note here that by using active probing, we may not be able to detect and locate
all failures (single or multiple) uniquely. This is especially true when we consider
multiple failures or when there are constraints on the set of nodes where beacons
can be deployed. Even a probing scheme of maximal detection capacity, that is,
a scheme that would use all the available beacon nodes and send probes from
these beacons to all nodes in the network would only detect and locate a subset
of all possible failures. Therefore, instead of looking for a probing scheme that
guarantees the detection and location of every failure of a given multiplicity, we
ﬁnd a probing scheme that can detect and locate every failure that the probing
scheme with maximal detection capacity can detect and locate.
The cost of using probes for fault diagnosis comprises two components: the
additional traﬃc due to probe packets and the infrastructure cost for beacons.
Similarly to [6], we use a two-phased approach to minimize both the number of
probes and the number of beacons. Whereas, unlike [6], we ﬁrst minimize the
number of probes and next the number of beacons. This enables us to use results
from max-plus algebra for the probe selection problem. Our main contributions
are as follows. (i) We show that, contrary to the single failure case [6] and
Active Measurement for Multiple Link Failures Diagnosis
187
surprisingly so, the optimal set of probes for multiple failures can be found in
polynomial time. (ii) However, like the single failure case, we show that the
beacon placement problem in the multiple failure case is NP-hard. We provide
a constant factor approximation algorithm for the beacon placement problem,
which is very close to the best possible bound. (iii) We show that our algorithms
perform well on existing networks, and that there is a substantial diﬀerence
between the number of probes and beacons that are required for multiple failures
diagnosis and for single failure diagnosis.
The remainder of this paper is organized as follows. Section 2 introduces the
network model. Section 3 presents the probe selection problem, and Section 4
describes the beacon placement problem. Section 5 contains experiment studies
of our algorithms on existing ISP networks. Finally, we conclude the paper in
Section 6.
2 Network Model
We model the network as an undirected graph G(V,E), where the graph nodes,
V, denote the network elements and the edges, E, represent the communication
links connecting them. The number of nodes and edges is denoted by n = |V|
and e = |E|, respectively. Further, we use Ps,t to denote the path traversed by
an IP packet from a source node s to a destination node t. If there is no failure
in the network, an IP packet that is sent from a node s to a destination t will
follow the path Ps,t. When there is/are failure(s) of links on the path Ps,t, the
probe has to be rerouted around the failed link(s); Therefore the actual path
that the probe takes will be diﬀerent from Ps,t. By comparing the actual path
that the probe from s to t takes and Ps,t, we can detect if any link in the path
Ps,t has failed or not. When a probe detects link failure(s) in its path, we say
that the probe has failed.
For a known topology G = (V,E) and a set of probes P, we can compute
which probes will fail when a network link goes down. We call the above relations
between network links and probes dependency relations. Dependency relations
of a network can be represented by a dependency matrix D of dimension e× np,
where e is the number of links and np = |P| is the number of probes in the
network. D is constructed as follows. Let Ps,t be the path followed by probe
pi in the normal situation without failures. Then the entry D(i, j) = 1 if the
path Ps,t contains the link ej and D(i, j) = 0 otherwise. A row of D therefore
corresponds to a probe (more precisely, to the path that the probe take), whereas
a column corresponds to a link.
3 Probe Selection Problem
Given a network G = (V,E) with a set of beacons VB, we denote by Pmax the set
of probes generated when each beacon sends probes to all nodes in the network.
Pmax represents an upper bound on the probing capability of the network. It is
the largest set of probes that can be sent to diﬀerent destinations in the network.
Let Dmax denote the dependency matrix when the set of probes is Pmax.
188
H.X. Nguyen and P. Thiran
Let S ⊆ E be a set of links. The set of failed probes triggered by the failure
of all links in S is made of all the failed probes that would be triggered by
the individual failure of each link in S. The failure of links in S can thus be
−→
d S that is obtained by OR-ing all the column vectors
represented by a vector
of Dmax representing individual links in S. Let us deﬁne the failure of a set
of network links as the failure of all links in that set. A probe pk is said to
distinguish the failures of two subsets E1,E2 ⊆ E if and only if the corresponding
−→
d E2 are diﬀerent, i.e., dE1(k) (cid:3)= dE2(k). The probe set P
kth entries in
is said to distinguish the failures of two subsets E1,E2 ⊆ E if and only if there
exists a probe p ∈ P such that p distinguishes E1,E2. We are interested in the
following optimization problem.
Deﬁnition 1. [PS problem] The probe selection problem is the determination
of the smallest subset P∗ of Pmax, such that any two subsets of E whose failures
are distinguished by Pmax are also distinguished by P∗.
−→
d E1 and
Let D∗ be the dependency matrix for the system with the set of probes
P∗. In terms of dependency matrices, the probe selection problem amounts to
removing some rows of Dmax in order to obtain a new matrix D∗ that veriﬁes
the following properties: (i) Dmax and D∗ have the same number of columns,
and (ii) whenever two vectors obtained by OR-ing up to e = |E| columns of
Dmax are diﬀerent, the two vectors obtained by OR-ing the same columns in D∗
are also diﬀerent.
The set of all binary vectors that represent single and multiple link failures
of a network has a special property that the OR-ing of any two vectors is also a
vector in the set. Any set of vectors with the above property is called a vector
span [10]. To solve the probe selection problem, we need to employ some special
properties of a vector span. We, therefore, ﬁrst study in Section 3.1 properties
of general vector spans, and then show how these properties can be applied to
develop an algorithm for the probes selection problem in Section 3.2.
3.1 Mathematical Basis
Let D = {−→
d i}1≤i≤h be a set of binary vectors of equal length, and let I =
{1, ..., h} be the index set of D. A vector span S can be deﬁned on D as follows.
Deﬁnition 2. [Vector span] The vector span of D is
−→
d i | αi ∈ {0, 1},
d i ∈ D}
S =  = {(cid:1)
αi · −→
i∈I
where “∨” denotes the binary max operation, and “·” denotes the usual multi-
plication operation. Vectors in D are called the generator vectors of S.
On the set D, we deﬁne the following independence property [10].
Deﬁnition 3. [IP] The set D = {−→
I and I2 ⊆ I\{i},
−→
di /∈ .
Merging Deﬁnition 2 and Deﬁnition 3, we obtain the following deﬁnition.
Active Measurement for Multiple Link Failures Diagnosis
189
Deﬁnition 4. [Basis] A basis B of a span S is a set of independent vectors of
S such that  = S.
Assume we have a span S that is generated by a set of generator vectors D
and has a basis B. The following lemma follows from Deﬁnition 4, and is needed
to solve the probe selection problem.
Lemma 1. If D is ﬁnite, then S has a unique basis B that is the subset of D
with smallest cardinality such that = S.
Proof. Wagneur [10] proved that spans over general vector sets have a unique
basis, and hence this conclusion is also true for spans over binary vectors.
We prove the second assertion of the lemma by contradiction. Assume that
there is a smaller subset of D, namely B(cid:5), which satisﬁes  = S, i.e., that
there exists at least one vector −→v of B that does not belong to B(cid:5). Let us denote
−→
d i, i ∈ IB be the
by IB the index set of B, and by I(cid:5)
vectors of B. Since  = S, there exists a non empty subset I(cid:5)
B such
that:
B the index set of B(cid:5). Let
v ⊆ I(cid:5)
(1)
−→
d i ∈ B(cid:5) there is a nonempty
−→
d i =
−→
d j.
(2)
−→v =
−→
di.
(cid:1)
i∈I(cid:1)
v
(cid:1)
j∈Ii
(cid:2)
Furthermore, since B is also a basis of S, for each
subset Ii ⊆ IB such that:
Substituting (2) in (1) yields −→v =
−→
d k ∨ −→
v such that
Ii. Since B
j∈Iv
−→
−→
is independent, the only case where this can happen is that there exists an index
k ∈ Iv such that: −→v =
d k for all l ∈ Iv\{k}. From (2), this
−→
d k and
d l =
d i = −→v , which in turn indicates that
implies that there exists i ∈ I(cid:5)
−→v ∈ B(cid:5); a contradiction to the assumption −→v /∈ B(cid:5).
(cid:6)(cid:7)
−→
d j, where Iv =
i∈I(cid:1)
(cid:3)
v
3.2 Probe Selection Algorithm
Denote by C(Dmax) and R(Dmax) the set of column vectors and row vectors of
the matrix Dmax. Let  be the span generated by column vectors,
called column span of Dmax, and let  be the span generated by row
vectors, called row span of Dmax. A vector in  represents subsets of
E whose failures generate the same set of failed probes. We call the set of all the
subsets of E whose failures are represented by the same vector a failure set. Two
diﬀerent vectors in  represent two failure sets that are distinguished
by Pmax. Therefore, its cardinality |  | is the number of failure sets
that can be distinguished by Pmax. Similarly, let D∗ be the dependency matrix
of the system with the set of probes P∗. Let R(D∗) and C(D∗) be respectively
the set of column vectors and row vectors of D∗. |  | is the number of
failure sets that can be distinguished by P∗.
190
H.X. Nguyen and P. Thiran
Since P∗ is a subset of Pmax, the number of failure sets that can be distin-
guished by P∗ is always less than or equal to the number of failure sets that
can be distinguished by Pmax. Furthermore, any two subsets of E that can be
distinguished by P∗ can also be distinguished by Pmax. Thus, P∗ distinguishes
any two subsets of E that Pmax distinguishes if and only if the number of failure
sets that are distinguishable by P∗ is equal to the number of failure sets that are
distinguishable by Pmax. Consequently, the probe selection problem amounts to
ﬁnd P∗ such that the number of failure sets that can be distinguished by P∗ and
by Pmax are equal. Since each failure set is respectively represented by a column
of D∗ or Dmax, the solution of the probe selection problem is the smallest subset
R(D∗) of R(Dmax) such that |  | = |  |. Theorem 1
below gives the solution to the probe selection problem.
Theorem 1. The solution to the probe selection problem is the set of probes
whose corresponding rows in Dmax form the basis of .
Proof. Let D∗ be a matrix whose rows are the basis of the span ,
i.e., such that  = . From [11], Theorem 1.2.3, the row
span and column span of any binary matrix have the same cardinality. Therefore,
|  | = |  | = |  | = |  |,
which yields that R(D∗) is a solution for the probe selection problem. Now,
Lemmas 1 yields that R(D∗) is the smallest subset of  such that
|  | = |  |. Therefore, R(D∗) is the unique solution to
(cid:6)(cid:7)