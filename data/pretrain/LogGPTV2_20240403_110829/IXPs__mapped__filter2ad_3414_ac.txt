B, the algorithm proceeds in two phases. First, it requires
the selection of a source from where to launch the tracer-
oute; depending on whether or not AS A provides a LG
server with traceroute capabilities, the traceroute probe will
either start within AS A or start outside of AS A and tra-
verse AS A. Second, it requires the selection of a destination
target in AS B.
Phase 1 – Source selection:.
Ideally, we would like to launch a traceroute probe from
the source network (i.e., AS A) itself; this is only possible if
there is a LG server located within the source network. For
213 of the 278 IXPs for which we have preﬁxes, at least one
of their members has a LG. We refer to this technique as
the “basic targeted” technique.
If there is no LG in any member AS of an IXP, we rely
on our inferred AS map, obtain the neighbors of AS A, and
check if any of them has a LG. If neighbor AS C provides
a LG server, and AS A and AS C have a customer-provider
relationship, then launching a traceroute probe from AS C
to a target destination in AS B has a good chance to go
through AS A, increasing the likelihood of revealing an ac-
tual peer-to-peer link at the IXP. If this 1-hop exploration
procedure ﬁnds no neighbor ASes of AS A with a LG server,
we apply the same procedure to all the neighbor ASes of the
neighbor ASes of AS A. If this 2-hop exploration yields no
ASes with LG servers (happened in 9% of the cases), we give
up and cannot discover the possible peering relationships of
AS A. In total, for 253 IXPs, we managed to ﬁnd at least
one LG in at least one member of one of the IXPs’ mem-
bers. We refer to this technique as the “targeted+neighbors”
technique (i.e., the “basic targeted” technique updated with
information from neighboring LGs).
When the 1- or 2-hop exploration process reveals multi-
ple candidate ASes with LGs, we order them according to
the chances they have to reveal the peering. LGs found in
the IXP members themselves have a bigger chance, and have
priority over LGs located in neighbor ASes of IXP members.
We give LGs that are 1 or 2 hops away from an IXP mem-
ber the same priority and then order them according to the
following criteria: (1) Success ratio: for each IXP, we keep
track of the number of peerings discovered by each LG. If
we have already seen the IXP from a particular LG, then we
give that LG priority over those from which this particular
IXP has never been seen. (2) Geographic location: we give
LGs in the same city as the IXP priority over LGs that are
in the same country, mainly because LGs in closer vicinity
of the IXP have a higher likelihood of discovering the IXP
than LGs further away.
Phase 2 – Target selection:.
When looking for traceroute targets, our goal is to locate
destinations that respond to ping, implying that they belong
to a routable preﬁx. This approach prevents artifacts like
routing loops and has additional beneﬁts. It typically speeds
up any traceroute experiments that involve public LGs and
also makes the experiments in general more eﬃcient. Many
LGs are conﬁgured to buﬀer the entire traceroute output
before responding, and if traceroute has not completed after
a timeout, they simply send an empty response. Probes
to a non-responding address causes long delays and yields
non-informative results. Rather than using trial-and-error
scanning to ﬁnd pingable addresses, we rely on heuristics
(e.g., try the ﬁrst address in each preﬁx, then the second,
etc., until we get a response) that mimic how IP addresses
are often allocated inside a preﬁx. If this incremental search
heuristic cannot ﬁnd any pingable IP address within an AS,
we simply select an address randomly in one of its preﬁxes.
For about 4% of all IXP members, we were unable to ﬁnd
a single pingable address. Also, for about 6% of the ASes
we did not ﬁnd any preﬁx. This can happen when ASes are
part of some bigger network that advertises their preﬁxes.
For these ASes, our method fails and we have no way to
check the peerings of interest.
4.2.3 Output data and implementation
Our algorithm outputs a set of traceroute probes that can
be mined to shed new light on the IXP substrate. We can
add a third phase for launching special-purpose traceroute
probes using extra information that was unavailable when
running the generic version of our algorithm—e.g., a speciﬁc
source-destination pair for forcing a traceroute probe to go
through a particular IXP that remained undetected by the
generic algorithm.
Looking glass servers are intended to be queried manually
via a browser. To automate, we built a parser that builds
the appropriate HTTP queries9 The parser outputs a list
of URLs associated with a LG-speciﬁc string with all the
information required to query the LG. This data is used as
input to our targeted traceroutes algorithm. Our scheduler
issues 64 queries in parallel, with the constraints that a LG
can only issue a single query at a given time and waits 10s
between two queries to the same LG to limit the eﬀects of
rate-limiting LGs. Next we wait up to 30s for the HTML
response with formatted traceroute output which is then
parsed via a generic parser recognizing the dozen diﬀerent
trace formats we encountered.
4.3 Targeted Source Routing
The performance of our basic methodology is highly de-
pendent on the number and location of the traceroute-capable
LGs. To reduce this dependence, we developed an exten-
sion of targeted traceroutes to exploit the IPv4 Loose Source
Record Route (LSRR) option and increase the coverage of
our method without increasing the number of LGs. The
LSRR option has previously been employed in Internet map-
ping projects [37, 38], and we use it here to force our targeted
9Of the 2.3K LGs, only about 40 required manual formatting
(e.g., when part of a Javascript/AJAX script, when a cookie
is required, or when a session ID is carried in a PHP script).
341traceroutes to traverse a particular pair of IXP members,
thus allowing us to check a particular IXP-related peering.
LSRR targeted traceroutes diﬀer from our basic targeted
traceroute method only in its ﬁrst phase. To check a peering
between ASes A and B, instead of selecting a LG in or near
AS A, we pick a LSRR-capable router in A and force our
traceroute probes to go through this router before reaching
its ﬁnal destination (in B, selected as in Phase 2). Ideally,
if we can ﬁnd such a router in each IXP member, we could
systematically check each IXP peering from a single source
in the Internet. However, this extension has limitations be-
cause packets with LSRR options can cause many problems.
We ﬁrst use the basic technique described in [37] to check
if a router is LSRR-capable. We send a UDP probe with a
high TTL value to an IP address d which we know is respon-
sive to UDP packets and insert a LSRR option to force the
probe to traverse r before reaching the destination. Receiv-
ing a response from d means that r forwarded the packet
and thus is LSRR-capable. We had to extend this technique
because routers can block packets with LSRR options, ei-
ther silently or by sending an ICMP Source routing failed
error.10 Speciﬁcally, for each member’s ASN, we ﬁrst build
a list of candidate IP addresses belonging to this ASN, ex-
tracted from the CAIDA, PlanetLab, and DIMES traceroute
datasets. We then test each candidate to see whether it is
LSRR-capable or not, using the test described above. For
each member’s ASN, we keep trying candidate addresses un-
til the list is empty or we ﬁnd a successful candidate. The
result of this phase is a list of LSRR-capable routers asso-
ciated with the ASNs of the IXP members they belong to.
We found LSRR-capable routers in 847 IXP members.
Another known problem that packets with LSRR options
often encounter is that they are blocked. We initially ran
the experiment from 250 PlanetLab nodes, and restricted
the subsequent experiments to the 30 nodes which revealed
at least one LSRR-capable router (i.e., those nodes allow
the injection of packets with LSRR options in the network).
Performing the experiments from just those 30 nodes did
not prevent our probes from being widely ﬁltered by routers
spread across many diﬀerent ASes. Note however that if the
probes are dropped after they go through an IXP, we still
have an opportunity to check the peerings.
Lastly, routers often do not respond to traceroute probes
with LSRR options.
In a regular traceroute path, it can
happen that routers do not response to probes, thus they
remain anonymous [39]. While this phenomenon is relatively
rare in the case of regular traceroute, it happens much more
frequently for traceroute probes with LSRR options. This
empirical ﬁnding limits the usefulness of source routing and
is one of the main reasons why it is used so infrequently.
5. RESULTS
5.1 Experiments
Using as input (i) our list of 278 IXPs with 393 known
preﬁxes, (ii) a list of 2,329 traceroute-capable looking glass
servers located in 66 countries and 406 ASes, and (iii) an
AS map that we obtained either from merging BGP routing
table information from RIPE RIS and RouteViews our-
selves or from downloading an inferred topology from the
Cyclope website and augmenting it with our most recently
10Even if we receive such an error message, we still consider
the router as potentially LSRR-capable.
Direct
Neighbors
117
50
CAIDA P-lab DIMES LG All
65
218
141
32
n.a.
n.a.
83
35
Table 3: IXPs with no coverage.
Region
Europe
North America
Asia
# LGs Region
1,361
South America
718 Australia & New Z.
104 Africa
# LGs
84
58
4
Table 4: Geographic distribution of the 2.3K LGs.
discovered IXP peerings, we run our targeted traceroute ex-
periments (without targeted source routing) in July 2008,
December 2008, and April 2009. We report results from our
April 2009 experiment as it uses the most up-to-date list
of LGs and inferred AS map and subsumes the two earlier
experiments.
We compare the results from mining our dataset with
those obtained from mining CAIDA’s Skitter dataset and
the Dimes dataset of traceroute measurements for IXP-speciﬁc
information. While [8, 4] also used Skitter-based data in
their searches for IXPs, to best of our knowledge, the Dimes
dataset has not been analyzed for IXP-speciﬁc information.
To have yet another point for comparison, we also run an
experiment using PlanetLab [40], where we selected 254
alive nodes, one in each site. We then compiled a list of IXP
member ASes; i.e., ASes that are known (or believed) to be
a member of any of the IXPs with known preﬁxes. From
each alive node and for each AS on our list, we launched a
traceroute to a single IP address responding to ping. We
ran this experiment twice, on October 24 and December 9,
2008 and report here the results from the December run. Fi-
nally, we ran our source-routed traceroute experiments three
times in March 2009 (we report the results from our March
30 experiment) and mined the BGP tables in February 2009.
To help calibrate the results obtained from these various
traceroute-based studies, Table 2 shows for each study the
number of diﬀerent ASes, countries, and regions where the
traceroute sources are situated.
In addition Table 3 lists
for each measurement study the number of IXPs for which
there is no traceroute source available in any of its (direct)
members or in any of its members’ neighbors. Both tables
show that detecting IXPs is largely a visibility problem; that
is, detecting IXPs is less about the total number of available
traceroute sources and more about where these sources are
located with respect to the IXPs.
Fig. 2 shows the distribution of our 2.3K traceroute servers
among the 406 ASes. Some ASes provide a large number of
LGs, and their locations are in general spread across each
network. Most ASes provide only a single vantage point.
To illustrate the geographic distribution of the LGs, Table 4
breaks them down by continent. The vast majority of LGs
are found in Europe and North America, and only four LGs
are located in Africa (Egypt and South Africa).
S
A
r
e
p
s
G
L
#
 100
 10
 1
 50  100  150  200  250  300  350  400
AS rank
Figure 2: Distribution of the number of LG per AS.
3425.2 Existence of IXPs
To recall, there are 278 IXPs with known preﬁxes and
another 81 for which we have no preﬁx information. In the-
ory, all 278 IXPs with known preﬁxes should be detectable
via traceroute, but some of them will be harder to discover
than others, depending on how they are designed (e.g., us-
ing private addresses) and, more importantly, where they
are located within the IXP substrate with respect to the
sources available for launching traceroute probes. The col-
umn “IXP” in Table 5 summarizes the results of mining the
diﬀerent datasets for IXPs, and the same column in Table 6
breaks down the results of mining our dataset11 by the par-
ticular technique we used. The three sub-columns give the
number of detected IXPs, the percentage, and the number of
unique IXPs found (i.e., IXPs that none of the other datasets
or techniques detected).
Combining the results from all datasets, we established
the existence of 223 of 278 IXPs with known preﬁxes. The
bulk of the discovered IXPs (i.e., 214) is found in our dataset,
and of the techniques we used, the most successful one was
the targeted traceroutes method with 176 “hits”. In contrast,
the May 2005 experiment reported in He et al. [4] found 110
IXPs.
Note that with less than 2.4K sources, the targeted tracer-
outes method does better than Dimes which has over 18K
sources at its disposal. This observation illustrates that the
success rate for discovering IXPs depends critically on ﬁnd-
ing LG sites with good visibility into the IXP substrate.
The number of sources is less important than their relative
location with respect to the IXPs and their members. Also
note that our technique of traceroutes with source-routing
detected a total of 118 IXPs which shows its potential. The
reason why the pinging technique revealed only 74 IXPs is
that most IXP preﬁxes are not advertised in the global BGP
tables. All in all, relying on our various techniques to mine
our dataset produced all but ﬁve of the IXPs present in the
CAIDA, DIMES or PlanetLab datasets; all our attempts to
detect them (using brute-force LSRR experiments) failed.
With 223 of the 278 IXPs with known preﬁxes discovered,
we classify the 55 unaccounted IXPs in Sec.6, giving detailed
reasons as to why they remained undetected and providing
speciﬁcs about the information needed to detect them.
5.3 Membership of IXPs
The columns “Members” in Tables 5 and 6 give the number
of discovered IXP members for each dataset and technique,
respectively.
In summary, combining the results obtained
from mining all the datasets, we obtain a total of 3.5K IXP
members. The vast majority of them (i.e., 3.3K) resulted
from mining our dataset, and among the techniques we used
to detect IXP members, the two most successful ones were
targeted traceroutes and BGP LGs. Using BGP LGs to
detect members is more eﬃcient, though; it also has the
additional beneﬁt of producing very accurate results. The
fact that LSRR probes frequently get blocked along their
routes explains why the source-routing technique systemati-
cally yields a lower number of IXP members. When compar-
ing our results to the 2.3K members detected by He et al. [4]
in their May 2005 experiment, it is important to note that
their members include IXP members found in their tracer-
11When referring in the rest of the paper to “our dataset”, we
mean the dataset consisting of (i) targeted traceroutes, (ii)
targeted LSRR traceroutes, (iii) BGP LGs, and (iv) pings.
outes as well as IXP members collected from 66 IXP websites
and inferred from their IXP addresses’ DNS names.
5.4 Peerings at IXPs
The columns “Peerings” in Tables 5 and 6 show the total
number of IXP-related peering links as well as the number
of unique peering links (i.e., links only seen in one dataset
or discovered by one technique) discovered using the various
datasets and techniques. In summary, when combining all
datasets and techniques, we discover a total of 58K peerings