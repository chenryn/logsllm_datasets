### 优化后的文本

**公式表示：**
\[ P(m-d, m] = \sum_{k=m-d+1}^{m} \binom{m}{k} \]

**图6展示了当 \( d = m \) 时，方程3在不同 \( p \) 值下的数值结果（图7以对数尺度显示了这些值）。从图中可以看出，即使对于相当低的 \( m \) 值，攻击者注入 \( m - d \) 个恶意样本的概率也非常低。随着 \( m \) 的增加，至少 \( d + 1 \) 个被采样的服务器受到攻击者的控制的概率趋近于0；\( d \) 的值越高，这个概率越低。**

**图9：不同 \( d \) 值下，攻击者将 \( m - d \) 个恶意样本注入到样本集中的概率，假设 \( n \) 个服务器池中的服务器中有部分受其控制。**

**图10：在一个采样迭代中，攻击者控制至少一半查询服务器（从而能够成功攻击当前NTP客户端）的概率。**

**选择 \( \omega \)：上述分析对设置 \( \omega \) 的值有直接影响。假设目标是防止攻击者控制数百个服务器池中的10%（并且这些服务器具有最准确的时钟）。如果将 \( \omega \) 设置为25毫秒，则平均而言，超过83%的服务器是诚实的，并且它们的时钟都在 \( 2\omega = 50 \) 毫秒以内。因此，将 \( \omega \) 设置为数十毫秒可以同时提供高精度和强大的安全保证。**

### 相关工作

**NTP的安全性问题：网络时间协议 (NTP) [14], [32] 由Mills设计 [34]，是互联网上最古老的协议之一。早在1985年，在Kerberos安全模型开发的背景下，就指出了NTP在实现安全时间同步方面的不足 [34]。**

近年来，人们对NTP的安全性再次产生了浓厚的兴趣。[37] 中提供了针对NTP的攻击分类。最近的研究 [24], [25] 展示了即使是离线攻击者也能通过利用NTP实现中的弱点（例如，通过伪造的Kiss-o’-Death数据包）发起拒绝服务 (DoS) 攻击和时间偏移攻击。最近引入的补丁消除了或缓解了一些这些漏洞 [1]。

目前的NTP实际上无法防御中间人 (MitM) 攻击者，他们可以丢弃、延迟和篡改客户端与服务器之间的流量（见第二节）。

**保护NTP的方法：尽管NTP支持加密认证 [9], [43]，但在实践中，NTP流量很少经过认证 [24]，这是由于密钥分发机制繁琐、Autokey协议用于公钥认证的弱点以及其他因素 [14], [37], [40]。“Autokey (RFC 5906) 公钥加密方案的漏洞过于严重而无法修补”促使了NTPsec [2] 的开发，该版本于2015年实现 [22]。然而，目前NTPsec的使用率非常低，更重要的是，加密和认证并不能防止MitM攻击，因为这类攻击可以通过简单地延迟和丢弃（加密）流量来实施。此外，即使完美且全球部署的认证也无法防止攻击者控制（已认证的）NTP服务器。**

另一种NTP安全方法是利用互联网上的路径冗余来避免MitM攻击 [36], [42]。这种方法通过使用多条网络路径连接客户端和服务器。相比之下，Chronos通过创建大型服务器池并仔细从中采样服务器来生成服务器冗余。Chronos还设计了应对比 [36], [42] 中考虑的更强的MitM攻击者威胁模型；Chronos的威胁模型假设攻击者控制了NTP服务器，而不是特定单路径上的MitM攻击者。最后，生成多个不相交的互联网路径对于...