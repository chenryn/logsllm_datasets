title:Detecting Service Violations and DoS Attacks
author:Ahsan Habib and
Mohamed Hefeeda and
Bharat K. Bhargava
Detecting Service Violations and DoS Attacks
Ahsan Habib, Mohamed M. Hefeeda, and Bharat K. Bhargava
CERIAS and Department of Computer Sciences
Purdue University, West Lafayette, IN 47907
fhabib, mhefeeda, PI:EMAIL
Abstract
Denial of Service (DoS) attacks are a serious threat for
the Internet. DoS attacks can consume memory, CPU, and
network resources and damage or shut down the opera-
tion of the resource under attack (victim). The quality of
service (QoS) enabled networks, which offer different lev-
els of service, are vulnerable to QoS attacks as well as
DoS attacks. The aim of a QoS attack is to steal network
resources, e.g., bandwidth, or to degrade the service per-
ceived by users. We present a classiﬁcation and a brief
explanation of the approaches used to deal with the DoS
and QoS attacks. Furthermore, we propose network mon-
itoring techniques to detect service violations and to infer
DoS attacks. Finally, a quantitative comparison among
all schemes is conducted, in which, we highlight the merits
of each scheme and estimate the overhead (both process-
ing and communication) introduced by it. The comparison
provides guidelines for selecting the appropriate scheme,
or a combination of schemes, based on the requirements
and how much overhead can be tolerated.
1. Introduction
The San Diego Supercomputer Center reported 12,805
denial of service (DoS) attacks over a three-week period
in February 2001 [16]. This is just one of the numerous
incidents in which DoS attacks are causing serious secu-
rity threats to many systems connected to the Internet. The
DoS attacks can be severe if they last for a prolonged pe-
riod of time preventing legitimate users from accessing
some or all of computing resources. Imagine an executive
of a ﬁnancial institution deprived of access to the stock
market updates for several hours or even several minutes.
In [16], the authors showed that whereas 50% of the at-
tacks lasted less than ten minutes, unfortunately, 2% of
them lasted greater than ﬁve hours and 1% lasted more
than ten hours. There were dozens of attacks that spanned
multiple days. Wide spectrum of motivation behind these
DoS attacks exists. They range from political conﬂicts
and economical beneﬁts for competitors to just curiosity
of some computer geeks. Furthermore, cyber terrorism
may not be excluded in the future.
In addition to DoS attacks, the quality of service (QoS)
enabled networks are vulnerable to another type of at-
tacks, namely, the QoS attacks. A QoS-enabled network,
such as a differentiated services network [3], offers differ-
ent classes of service for different costs. Differences in the
charging rates may entice some users to steal bandwidth
or other network resources. We deﬁne an attacker in this
environment as a user who tries to get more resources, i.e.,
a better service class, than what he has signed (paid) for.
QoS attacks are classiﬁed into two kinds: attacking the
network provisioning process and attacking the data for-
warding process. Network provisioning involves conﬁg-
uration of routers in a QoS network. This process can be
attacked by injecting bogus conﬁguration messages, mod-
ifying the content of real conﬁguration messages, or de-
laying such messages. Networks can be secured against
such attacks by encrypting the conﬁguration messages of
the signaling protocols. Attacks on the data forwarding
process are of a more serious nature. These attacks in-
ject trafﬁc into the network with the intent to steal band-
width or to cause QoS degradation for other ﬂows. Since
the differentiated services framework is based on aggre-
gation of ﬂows into service classes, legitimate customer
trafﬁc may experience degraded QoS as a result of the il-
legally injected trafﬁc. Taken to an extreme, that excess
trafﬁc may result in a denial of service attack. This cre-
ates a need for developing an effective defense mechanism
that automates the detection and reaction to attacks on the
QoS-enabled networks.
In this paper, we ﬁrst elaborate on the denial of service
attacks and their potential threat on the system. We then
classify the solutions proposed in the literature into two
main categories: detection and prevention approaches. We
brieﬂy describe several mechanisms in each approach, fo-
cusing mainly on the salient features and highlighting the
potential as well as the shortcomings of each mechanism.
In addition, we propose network monitoring techniques
to detect service violations and to infer DoS attacks. We
believe that network monitoring has the potential to de-
tect DoS attacks in early stages before they severely harm
the victim. Our conjecture is that a DoS attack injects a
huge amount of trafﬁc into the network, which may alter
the internal characteristics (e.g., delay and loss ratio) of
the network. Monitoring watches for these changes and
identiﬁes the congested links, which helps in locating the
attacker and alerting the victim. Finally, we conduct a
comparative evaluation study among the approaches pre-
sented. The aim of the study is to compare the behavior of
the approaches under different situations of the underlying
network. We draw insightful comments from the compar-
ison that guide the selection of one or more defending ap-
proaches suitable for a given environment.
The rest of the paper is organized as follows. Section 2
discuses the DoS attacks and presents the classiﬁcation of
the approaches used to deal with them. In Section 3, we
show how network monitoring can be used to detect ser-
vice violations and to infer DoS attacks. The comparative
study is presented in Section 4 and Section 5 concludes
the paper.
2. DoS Attacks: Detection and Prevention
In the literature, there are several approaches to deal
with denial of service (DoS) attacks. In this section, we
provide an approximate taxonomy of these approaches. In
addition, we brieﬂy describe the main features of each ap-
proach and highlight the strengths and weaknesses of it.
We divide the approaches for dealing with DoS attacks
into two main categories: detection and prevention ap-
proaches. The detection approaches capitalize on the fact
that appropriately punishing wrong doers (attackers) will
deter them from re-attacking again, and will scare others
to do similar acts. The detection process has two phases:
detecting the attack and identifying the attacker. To iden-
tify an attacker, several traceback methods can be used,
as explained later in this section. The obvious way to de-
tect an attack is just waiting till the system performance
decreases sharply or even the whole system collapses. We
propose a more effective method for detecting attacks be-
fore they severely harm the system. We propose to use
monitoring for early detection of DoS attacks. The details
are given in Section 3. The prevention approaches, on the
other hand, try to thwart attacks before they harm the sys-
tem. Filtering is the main strategy used in the prevention
approaches.
To clarify the presentation, we use the hypothetical
network topology shown in Figure 1 to demonstrate
several scenarios for DoS attacks and how the differ-
ent approaches react to them. The ﬁgure shows sev-
eral hosts (denoted by Hs) connected to four domains1
D1; D2; D3; and D4; which are interconnected through
the Internet cloud. In the ﬁgure, Ai represents an attacker
i while V represents a victim.
2.1. DoS Attacks
The aim of a DoS attack is to consume the resources
of a victim or the resources on the way to communicate
with a victim. By wasting the victim’s resources, the at-
tacker disallows it from serving legitimate customers. A
victim can be a host, server, router, or any computing en-
tity connected to the network.
Inevitable human errors
during software development, conﬁguration, and installa-
tion open several unseen doors for these type of attacks.
Several DoS attacks are known and documented in the
literature [14, 16, 21, 24]. Flooding a victim with an over-
whelming amount of trafﬁc is the most common. This un-
usual trafﬁc clogs the communication links and thwarts all
connections among the legitimate users, which may result
in shutting down an entire site or a branch of the network.
This happened in February of 2000 for the popular web
sites Yahoo, E*trade, Ebay, and CNN for several hours
[14].
TCP SYN ﬂooding is an instance of the ﬂooding attacks
[22]. Under this attack, the victim is a host and usually
runs a Web server. A regular client opens a connection
with the server by sending a TCP SYN segment. The
server allocates buffer for the expected connection and
replies with a TCP ACK segment. The connection re-
mains half-open (backlogged) till the client acknowledges
the ACK of the server and moves the connection to the
established state. If the client does not send the ACK, the
buffer will be deallocated after an expiration of a timer.
The server can only have a speciﬁc number of half-open
connections after which all requests will be refused. The
attacker sends a TCP SYN segment pretending a desire
to establish a connection and making the server reserves
buffer for it. The attacker does not complete the connec-
tion. Instead, it issues more TCP SYNs, which lead the
server to waste its memory and reach its limit for the back-
logged connections. Sending such SYN requests with a
high rate keeps the server unable to satisfy connection re-
quests from legitimate users. Schuba et al. [22] devel-
oped a tool to alleviate the SYN ﬂooding attack. The tool
watches for SYN segments coming from spoofed IP ad-
dresses and sends TCP RST segments to the server. The
RST segments terminate the half-open connections and
free their associated buffers.
Other types of ﬂooding attacks include TCP ACK and
RST ﬂooding, ICMP and UDP echo-request ﬂooding, and
1Throughout the paper, we use “domain” to refer to an Autonomous
Systems (AS) domain, which is a network administered by a single en-
tity.
V




R6
D4
Attack using reflector
R5










R4
 H4
Forged path








H5
H2
D3
A4
Reflector
H3




























D2












A3
H1
   

   

   

   

   

   

D5
A5
Internet Cloud
R3
















R2
D1
Attack path
			


			


R1
A2
A1
Domain
Host
Router
Figure 1. Different scenarios for DoS attacks. Attacker A1 launches an attack on the victim V . A1 spoofs
IP address of host H5 from domain D5. Another attacker A3 uses host H3 as a reﬂector to attack V:
DNS request ﬂooding [16, 24]. This list is by no means
exhaustive.
A DoS attack can be more severe when an attacker uses
multiple hosts over the Internet to storm a victim. To
achieve this, the attacker compromises many hosts and
deploys attacking agents on them. The attacker signals
all agents to simultaneously launch an attack on a victim.
Barros [1] shows that DDoS attack can reach a high level
of sophistication by using reﬂectors. A reﬂector is like a
mirror that reﬂects light. In the Internet, many hosts such
as Web servers, DNS servers, and routers can be used as
reﬂectors because they always reply to (or reﬂect) speciﬁc
type of packets. Web servers reply to SYN requests, DNS
servers reply to queries, and routers send ICMP packets
(time exceeded or host unreachable) in response to partic-
ular IP packets. The attackers can abuse these reﬂectors
to launch DDoS attacks. For example, an attacking agent
sends a SYN request to a reﬂector specifying the victim’s
IP address as the source address of the agent. The reﬂec-
tor will send a SYN ACK to the victim. There are mil-
lions of reﬂectors in the Internet and the attacker can use
these reﬂectors to ﬂood the victim’s network by sending a
large amount of packets. Paxson [20] analyzes several In-
ternet protocols and applications and concludes that DNS
servers, Gnutella servers, and TCP-based servers are po-
tential reﬂectors.
2.2. Detection Approaches
The detection approaches rely on ﬁnding the malicious
party who launched a DoS attack and consequently hold
him liable for the damage he has caused. However, pin-
ning the real attacker down is not a straightforward task.
One reason is that the attacker spoofs the source IP ad-
dress of the attacking packets. Another reason is that
the Internet is stateless, which means, whenever a packet
passes through a router, the router does not store any in-
formation (or traces) about that packet. Therefore, mech-
anisms such as ICMP traceback and packet marking are
devised to ﬁgure out the real attacker. In this subsection,
we describe several techniques to identify the attacker af-
ter the attack took place. We defer the issue of early de-
tection of an attack till Section 3.
2.2.1. ICMP Traceback
Bellovin [2] proposes the idea of ICMP traceback mes-
sages, where every router samples the forwarded pack-
ets with a very low probability (e.g., 1 out of 20,000)
and sends an ICMP Traceback message to the destina-
tion. An ICMP Traceback message contains the previous
and next hop addresses of the router, timestamp, portion
of the traced packet, and authentication information. In
Figure 1, while packets are traversing the network path
from the attacker A1 to the victim V; the intermediate
routers (R1; R2; R3; R4; R5; and R6) sample some of
these packets and send ICMP Traceback messages to the
destination V: With enough messages, the victim can trace
the network path A1 ! V: The pitfall of this approach
is that the attacker can send many false ICMP Traceback
messages to confuse the victim.
To address Distributed DoS (DDoS) attacks by reﬂec-



