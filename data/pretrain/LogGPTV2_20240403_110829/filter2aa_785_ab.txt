ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
22
Malicious driver
rootkits: ring 0
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
23
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
24
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
25
DEFCON 2018 - USA
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
26
• Naturally, as closest at bottom of device stack occurs the 
infection (SCSI miniport drivers instead of targeting File 
System Drivers), so more efficient it is. 
• Nowadays, most monitoring tools try to detect strange 
activities at upper layers.
• In this case, it is very easy to intercept requests (read / 
write operations) from hard disk by manipulating the 
MajorFunction array (IRP_MJ_DEVICE_CONTROL and 
IRP_INTERNAL_CONTROL) of the DRIVER_OBJECT 
structure. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
27
• Rootkits try to protect itself from being removed by 
modifying routines such as IRP_MJ DEVICE_CONTROL and 
hooking requests going to the disk (IOCTL_ATA_* and 
IOCTL_SCSI_*). 
• Another easy approach is to hook the DriverUnload( ) 
routine for preventing the rootkit of being unloaded.
• However, any used tricks must avoid touching critical areas 
protected by KPP (Kernel Patch Guard) and one of tricky 
methods for find which are those areas is trying the 
following: 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
28
kd> !analyze –show 109
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
Thanks, Alex Ionescu 
ROOTKITS: RING 0
DEFCON 2018 - USA
29
•
Additionally, malwares composed by executable + drivers have 
been using APLC (Advanced Local Procedure Call) in the 
communication between user mode code and kernel drivers 
instead only using only IOCTL commands.  
•
Remember APLC interprocess-communication technique has 
been used  since Windows Vista, as between lsass.exe and SRM( 
Security Reference Monitor). Most analysts are not used to 
seeing this approach. 
•
Malwares usually don’t target a specific driver used during the 
boot for injection, but try to pick one randomly by parsing 
structures such as _KLDR_DATA_TABLE_ENTRY. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
30
•
Certainly, hooking the filesystem driver access is always a 
possible alternative: 
• IoCreateFile( )  gets a handle to the filesystem.
• ObReferenceObjectByHandle( )  gets a pointer to 
FILE_OBJECT represented by the handle.  
• IoCreateDevice( )  creates a device object 
(DEVICE_OBJECT) for use by a driver.
• IoGetRelatedDeviceObject( )  gets a pointer to 
DEVICE_OBJECT.
• IoAttachDeviceToDeviceStack( )  creates a new device 
object and attaches it to DEVICE_OBJECT pointer (previous 
function).
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
31
•
The same AVs usually hook functions such as ZwCreate( ) for 
intercepting all opened requests sent to devices. Unfortunately, 
malwares could do the same and, when it is not possible, so they 
perform their own implementation. 
•
After infecting a system by infection a system dropping kernel 
drivers, malwares usually force the system reboot calling 
ZwRaiseHardError( ) function and  specifying 
OptionShutdownSystem as 5th parameter. 
•
Of course, it could be worse and the malware could use 
IoRegisterShutdownNotification( ) routine registers the driver to 
receive an IRP_MJ_SHUTDOWN IRP notification when the system 
is shutdown for restoring the malicious driver in the next boot 
just in case it is necessary. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
32
•
Malwares continue allocating (usually RWX, although on Windows 8+ it 
could specify NonPagePoolNX) and marking their pages by using 
ExAllocatePoolWithTag( ) function (and other at same family 
ExAllocatePool*). Fortunately, it can be easily found by using memory 
analysis: 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
33
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ROOTKITS: RING 0
DEFCON 2018 - USA
34
0: kd> dt nt!_KTHREAD
•
APC (user and kernel mode) are executed in the thread context, where normal 
APC executes at PASSIVE_LEVEL (thread is on alertable state) and special 
ones at APC_LEVEL (software interruption below DISPATCH LEVEL, where 
run Dispatch Procedure Calls). 
• APC Injection  It allows a program to execute a code in a specific thread by 
attaching to an APC queue (without using the CreateRemoteThread( )) and 
preempting this thread in alertable state to run the malicious code. 
(QueueUserAPC( ), KeInitializeAPC( ) and KeInsertQueueAPC( )). 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
DEFCON 2018 - USA
35
ADVANCED MALWARES 
AND  ROOTKITS RING -2
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
36
•
MBR rootkits: Petya and TLD4 (both in bootstrap code), Omasco 
(partition table)  and Mebromi (MBR + BIOS, triggering SW 
System Management Interrupt (SMI) 0x29/0x2F for erasing the SPI 
flash)
•
VBR rootkits: Rovnix (IPL) and Gapz (BPB – Bios Parameter 
Block, which it is specific for the filesystem)
•
UEFI rootkits: replaces EFI boot loaders and, in some cases, they 
also install custom firmware executable (EFI DXE)
•
Modern malwares alter the BPB (BIOS parameter block), which 
describes the filesystem volume, in the VBR. 
•
We should remember that a rough overview of a disk design is:  
MBR  VBR  IPL  NTFS
Initial Program Loader. It has 15 sectors containing the bootstrap 
code for parsing the NTFS and locating the OS boot loader. 
Locate the active 
partition and reads 
the first sector
It contains necessary boot code for loading the OS loader
DEFCON 2018 - USA
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
37
Overwritten with an  
offset of the bootkit 
on the disk.
Thus, in this case, 
the malicious code 
will be executed 
instead of the IPL. 
BIOS_PARAMETER
__BLOCK_NTFS
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
38
Eventually, 
analyzing and 
debugging the 
MBR/VBR (loaded 
as binary module) 
is unavoidable, 
but it’s not so difficult 
as it seems.
Furthermore, we 
never know when 
an advanced malware 
or a ransomwares 
(TDL4 and Petya) will 
attack us. 
expected MBR entry point and it must be included in the IDA Pro’s load_file.
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
39
•
MBR modifications (partition table or MBR code) as VBR+IPL 
modifications (BPB or IPL code) have been used as an effective way 
to bypass the KCS. 
•
As injecting code into the Windows kernel has turned out to be a bit 
more complicated, to  modern malwares are used to bypassing the 
KCS (Kernel-Mode Code Signing Policy) by:
• Disabling it  Booting the system on Testing Mode. 
Unfortunately, it is not so trivial because the Secure Boot must 
be disabled previously and, afterwards, it must be rebooted. 
• Changing the kernel memory  MBR and/or VBR could be 
altered. However, as BIOS reads the MBR and handle the 
execution over to the code there, so it is lethal. 
• Even trying to find a flaw in the firmware  it is not trivial and 
the Secure Boot must be disabled. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
40
Setting TESTING mode is 
a very poor drive 
signature “bypassing”. 
Actually, there are more 
elegant methods. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
41
BIOS
MBR
EFI
VBR
Bootmgr
Bootmgfw.efi
BCD
Winload.exe
Kdcom.dll
ELAM
Ntoskrnl.exe
Code Integrity
Mebromi
Petya/Mebromi/
Omasco/TLD4
Rovnix and Gapz
UEFI support since Windows 7 SP1 x64
BPB + VBR code + strings + 0xAA55
Read its configuration from 
Boot Configuration Data (BCD)
ci.dll
HAL.dll
Classifies modules as 
good, bad and unknown. 
Additionally, it decides 
whether load a module or 
not according to the policy.
Bootkits could attack it 
before loading the 
kernel and ELAM. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
42
•
The malicious bootmgr, which switches the processor execution 
from real mode to protected mode, uses the int 13h interrupt to 
access the disk drive, patch modules and load malicious drivers.
•
Once again, if the integrity checking of the winload.exe is 
subverted, so a malicious code could be injected into the kernel. 
•
The winload.exe roles:
• enables the protect mode.
• checks the modules’ integrity and loads the Windows kernel.
• loads the several DLLs (among them, the ci.dll, which is 
responsible for Code Integrity) and ELAM (Early Launch Anti 
Malware, which was introduced on Windows 8 as callback 
methods and tries to prevent any strange code execution in 
the kernel).
• loads drivers and few system registry data. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
43
• Most advanced rootkits continue storing/reading (opcode 
0x42, 0x43 and 0x48) their configuration and payloads into a 
encrypted hidden filesystem (usually, FAT32) using 
modified symmetric algorithms (AES, RC4, and so on). 
• Hooking key programs such as NTLDR and BOOTMGR to 
help malwares keeping alive during the transition from real 
to protect mode.
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
44
•
SMM basics:
• Interesting place to hide malwares because is protected from OS 
and hypervisors.
• The SMM executable code is copied into SMRAM and locked during 
the initialization. 
• To switch to SMM, it is necessary to triger a SMI (System 
Management Interrupt), save the current content into SMRAM and 
execute the SMI handler code. 
• A SMI could be generated from a driver (ring 0) by writing a value 
into APMC I/O / port B2h or using a I/O instruction restart CPU 
feature. 
• The return (and execution of the prior execution) is done by using 
RSM instruction.
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
45
MBR
VBR
LOADER
OS
SPI Flash
Ring 0 malwares like rootkits
SPI malwares
Bootkit malwares
UEFI: Bootx64.efi 
and Bootmgfw.efi
(Kernel Code Signing Policies)
UEFI 
Services
SMM
SMM malwares
UEFI/BIOS malwares
(Flash Write Protection)