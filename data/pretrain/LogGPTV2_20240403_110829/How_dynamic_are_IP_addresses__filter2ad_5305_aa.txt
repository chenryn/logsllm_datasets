title:How dynamic are IP addresses?
author:Yinglian Xie and
Fang Yu and
Kannan Achan and
Eliot Gillum and
Mois&apos;es Goldszmidt and
Ted Wobber
How Dynamic are IP Addresses?
Yinglian Xie, Fang Yu, Kannan Achan
Eliot Gillum+, Moises Goldszmidt, Ted Wobber
{yxie,fangyu,kachan,eliotg,moises,wobber}@microsoft.com
Microsoft Research, Silicon Valley
+Microsoft Corporation
ABSTRACT
This paper introduces a novel algorithm, UDmap, to identify dy-
namically assigned IP addresses and analyze their dynamics pat-
tern. UDmap is fully automatic, and relies only on application-
level server logs. We applied UDmap to a month-long Hotmail
user-login trace and identiﬁed a signiﬁcant number of dynamic IP
addresses – more than 102 million. This suggests that the fraction
of IP addresses that are dynamic is by no means negligible. Using
this information in combination with a three-month Hotmail email
server log, we were able to establish that 95.6% of mail servers
setup on the dynamic IP addresses in our trace sent out solely spam
emails. Moreover, these mail servers sent out a large amount of
spam – amounting to 42.2% of all spam emails received by Hot-
mail. These results highlight the importance of being able to accu-
rately identify dynamic IP addresses for spam ﬁltering. We expect
similar beneﬁts to arise for phishing site identiﬁcation and botnet
detection. To our knowledge, this is the ﬁrst successful attempt to
automatically identify and understand IP address dynamics.
Categories and Subject Descriptors
C.2.3 [Computer Communication Networks]: Network Opera-
tions—network management; C.2.0 [Computer Communication
Networks]: General—security and protection
General Terms
Algorithms, Measurement, Security
Keywords
DHCP, dynamic IP addresses, IP volatility, entropy, spam detection
1.
INTRODUCTION
Many existing tasks such as malicious host identiﬁcation, net-
work forensic analysis, and other blacklisting based approaches of-
ten require tracking hosts identities. Techniques that use host IP
addresses to represent host identities are commonly used (e.g., [13,
26, 32]). These techniques are based on the premise that a vast
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’07,  August  27–31,  2007,  Kyoto,  Japan.
Copyright 2007 ACM 978-1-59593-713-1/07/0008 ...$5.00.
majority of IP addresses in the Internet are static, and that the frac-
tion of dynamic addresses is small. Unfortunately, the validity or
the degree to which this important assumption holds has not been
studied in existing literature.
In this paper, we aim to quantify the above assumption, and in
the process answer the following questions. Is the set of dynamic
IP addresses really a small fraction of the set of all IP addresses
in the Internet? How can we automatically identify a dynamic IP
address, and meanwhile estimate the frequency at which it is used
to represent different hosts?
The answers to these questions clearly have wide applicability.
For example, existing blacklist-based approaches for detecting ma-
licious hosts (e.g., botnet members, virus spreaders) should not in-
clude individual dynamic IP addresses straightforwardly in their
ﬁlters, as the identities of such hosts change frequently. Similarly,
Web crawlers should pay special attention to IP addresses that ex-
hibit very dynamic behavior, as the records they point to typically
expire quickly.
Another application, which we use as a case study in this pa-
per, is spam ﬁltering. Previous studies suggest that spammers fre-
quently leverage compromised zombie hosts as mail servers for
sending spam [8, 23], and that many zombie hosts are home com-
puters with serious security vulnerabilities [19]. Therefore, a mail
server set up at a dial-up or wireless connection is far more sus-
picious than one set up with a statically conﬁgured IP address. In
other words, whether a mail server is mapped to a dynamic IP ad-
dress or not can turn out to be a useful feature to add to existing
spam ﬁltering systems.
Throughout this paper, we use the term IP dynamics to refer to
the dynamic behavior, over time and in aggregate, of the mapping
between IP addresses and host computers. Collecting informa-
tion about IP dynamics is a challenging task for several reasons.
First, such information is essentially very ﬁne grain – even for IP
addresses within the same administrative domain and sharing the
same routing preﬁx, IP dynamics can be very different. For ex-
ample, it is not unusual for the static IP address of a Web or mail
server to be adjacent to a wireless DHCP IP range. Second, ISPs
and system administrators often consider the conﬁguration of IP
address ranges to be conﬁdential and proprietary. Such informa-
tion can potentially be used to infer the size of customer population
and operation status. Finally, the Internet is composed of a large
number of independent domains, each with its own policies for IP
assignment. Thus manually collecting and maintaining a list of dy-
namic IP addresses requires an enormous effort, especially given
the fact that the Internet evolves rapidly.
An important goal of this paper is to develop an automatic method
for obtaining ﬁne-grained, up-to-date dynamics properties for IP
addresses. We introduce a metric, IP volatility, that expresses the
rate at which a given IP address is assigned to different hosts. Esti-
mates of IP volatility can help distinguish whether IP addresses are
statically assigned, or belong to a block 1 of dynamically conﬁg-
ured DHCP [6] addresses such as those commonly used for dial-up,
DSL, or wireless access. As we will demonstrate, such ﬁne-grained
dynamics information can suggest possible host properties behind
the IP address – whether the host is an end user computer, a proxy,
or a kiosk-like shared computer.
We propose UDmap, a fully automatic method for identifying
dynamic IP addresses and estimating IP volatility. The dynamic
IP addresses we ﬁnd are a subset of DHCP addresses that exclude
statically conﬁgured addresses, such as those based on host-MAC
address mapping. UDmap utilizes two types of information. First,
we require a log that contains information that roughly tracks host
identities at speciﬁc IP addresses. In this paper, we use a one-month
trace of Hotmail user-login sessions for this purpose. Second, we
require access to IP address aggregation information such as BGP
routing table entries and CIDR IP preﬁxes. Overall, our algorithm
has the following desirable properties:
• It is generally applicable. UDmap can be applied not only to
Hotmail user logs, but also to other form of logs, such as Web
server or search engine logs with user/cookie information.
• It runs autonomously. Each domain or server can indepen-
dently process the collected data, with no need to share in-
formation across domains. Further, UDmap does not require
changes to client software.
• It offers ﬁne-grained, up-to-date IP dynamics information.
UDmap identiﬁes dynamic IP addresses in terms of IP blocks,
often smaller than IP preﬁxes, and thus more precise. As it
is fully automated, it can be constantly applied to recent logs
to obtain up-to-date information.
We also present a detailed study of IP dynamics at a large scale,
and apply our technique to spam ﬁltering using a three-month long
Hotmail email server log. Our key ﬁndings include:
(1) There are a large number of dynamic IP addresses that have
not not been identiﬁed by previous work. Using the one-month Hot-
mail user-login trace, UDmap identiﬁed over 102 million dynamic
IP addresses across 5891 ASes. A large fraction of the identiﬁed
dynamic IP addresses are DSL hosts, with the top ASes from major
ISPs such as SBC and Verizon. Over 50 million of the identiﬁed
dynamic IPs do not show up in existing dynamic IP lists [7].
(2) IP volatility varies widely, with IP-to-host bindings chang-
ing from several hours to several days. Over 30% of the dynamic
IP addresses we identiﬁed had average IP volatility of between 1
and 3 days. As might be expected, IP volatility is correlated to net-
work access method. Our ﬁndings suggest that IP addresses conﬁg-
ured for dial-up access are more dynamic than those for DSL links,
while IP addresses in cable modem networks are least dynamic.
(3) Spam ﬁltering can beneﬁt from using IP dynamics data. To
our knowledge, we are the ﬁrst to provide a systematic study on the
correlation between the portion of dynamic IP addresses and the
degree of spamming activities. By examining Hotmail email server
logs, we show that 95.6% of the sending servers from dynamic IP
ranges sent only spam emails. The total volume of spam from dy-
namic addresses we detected is signiﬁcant: it constitutes 42.2% of
all spam sent to Hotmail during our trace period.
We acknowledge that, despite the large size, our Hotmail login
dataset is still far from providing a complete view of the global
IP address space. The purpose of this paper is not to identify all
dynamic IP addresses in the Internet. Rather, the goal is to expose
IP dynamics as an important feature to consider for various network
applications, and more importantly, to offer a practical solution for
obtaining and understanding ﬁne-grained IP dynamics information.
2. RELATED WORK
We review related work in identifying dynamic IP addresses in
Section 2.1. As we propose spam ﬁltering to be a prime appli-
cation area of UDmap, in Section 2.2, we brieﬂy survey existing
approaches to spam detection, particularly those that relate to the
theme of our work.
2.1 Dynamic IP Identiﬁcation
To the best of our knowledge, we are the ﬁrst to develop a frame-
work to automatically detect dynamic IP addresses on a global
scale and simultaneously understand the associated IP volatility.
In all prior work, enumerations of dynamic IP addresses have been
maintained by hand [9].
Some dynamic IP addresses can be deduced by examining the
Reverse DNS (rDNS) and Whois databases [30]. A rDNS record
maps an IP address into a host name, providing a way to infer its ad-
dress properties. For example, the rDNS record for 157.57.215.19
corresponds to the DNS name adsl-dc-305f5.adsl.wanadoo.nl, in-
dicating that the IP address is used for an Asymmetric Digital Sub-
scriber Line (adsl) in the Netherlands (nl). Despite the existence
of DNS naming conventions and recent proposals on standardiz-
ing DNS name assignment schemes [27], not all domains follow
the naming rules. In fact, many IP addresses do not have rDNS
records: it is reported that only 50 to 60% of IP addresses have
associated rDNS records [10].
Certain enterprises maintain Dialup User Lists (DULs) of sus-
pected dynamic IP addresses, largely to support efforts to aid in
spam ﬁltering [29]. Dynablock provides the most well known and
widely used DUL [7]. It not only contains dialup IPs, but also other
dynamic IPs such as DSL and cable user IP ranges. As of Janu-
ary 2007, the list contains over 192 million dynamic IP addresses.
Manually maintaining such a large list requires enormous effort and
resources. Moreover, updating dynamic IP addresses relies on the
reporting of system administrators. With Internet topology and IP
address assignments changing rapidly, Dynablock can be expected
to contain increasingly obsolete information and miss newly con-
ﬁgured dynamic IPs. In Section 5.3, we show that our automatic
method identiﬁes over 50 million dynamic IP addresses that are not
covered by Dynablock.
While there are no existing approaches that automatically iden-
tify dynamic IP addresses, there has been signiﬁcant amount of
prior work on ﬁnding the topological and geographical properties
associated with an IP address. Krishnamurthy et al. [15] have pro-
posed to cluster Web clients that are topologically close together us-
ing BGP routing table preﬁx information. Padmanabhan et al. [20]
have proposed several methods to obtain geographic locations of
IP preﬁxes. Freedman et al. [10] further extended [20] to provide
even more ﬁne grained geographic location information. Recently,
Casado and Freedman [3] proposed to identify NAT and proxies
by passively collecting client information using active Web content
such as Javascript. Our technique is complementary to these efforts
by focusing on the dynamic nature of IP addresses, and it does not
require actively probing client machines.
2.2 Email Spam Filtering
1We use the term block to represent a group of continuous IP ad-
dresses, typically of ﬁner granularity than an IP preﬁx.
Spam is an ever growing problem in the Internet. Recently, it has
been reported that over 91% of all email generated is spam [21].
 1
 0.8
 0.6
 0.4
 0.2
m
a
p
s
g
n
e
b
i
s
l
i
a
m
e
f
o
n
o
i
t
c
a
r
F
 0
148.202.0.0
Figure 1: Spam ratio of mail servers in 148.202/16
148.202.33.255
148.202.33.64
148.202.255.255
Despite signiﬁcant advances in anti-spam techniques (e.g., [11, 16,
18, 31]), spam ﬁghting remains an arms race. Spammers increas-
ingly use sophisticated techniques, such as arranging many tiny
images to resemble message content or using animated GIF at-
tachments, to bypass content-based spam detection systems [21].
Moreover, content-based systems are easy targets for spammers
who can manipulate content at will until it gets by the ﬁlter.
Network-based spam ﬁltering approaches that do not rely on
message content have started to receive increased attention. DNS
Black Lists (DNSBLs) have been used to record the IP addresses
of spamming mail servers captured either through mail server logs
or Honeypot projects [1]. In 2004, Jung and Sit [13] showed that
80% of spam sources they identiﬁed eventually appeared in one or
more DNSBLs within two months. Recent study [23] has shown
that spammers are getting more stealthy. Spammers often harvest
a large number of zombie hosts to send spam, both to increase
throughput and to defeat blacklist-based countermeasures. Some
spammers even hijack IP preﬁxes for spamming [23]. As a result, a
decreasing fraction of spamming hosts are listed in DNSBLs. Ra-
machandran et al. [22] recently showed that only 6% of the botnet
IPs they queried were actually blacklisted.
Detecting correlation among email sources or content offers new
possibilities for identifying spammers that control large botnets. Li
and Hsieh [17] studied the behavior of spammers by clustering, us-
ing criteria such as the presence of similar URLs in messages sent
out by mail servers. In a similar vein, Ramachandran et al. [24]
correlated queries to DNSBL and botnet membership to identify
zombie spammers. These approaches are grounded on the implicit
assumption that IP addresses are generally static and that the frac-
tion of dynamic IPs tends to be negligible. Under this assumption,
recording the IP address of a spamming host in a blacklist is mean-
ingful, as it can help ﬁlter out further spam from this host. How-
ever, as we show in this paper, this assumption is not valid and the
number of dynamic IP addresses is very large. Obtaining the list of
active dynamic IP addresses and understanding their properties is
critical for network-based spam ﬁltering approaches.
3. A MOTIVATING EXAMPLE
In this section, we present a case study that emphasizes the need
for IP dynamics information to aid in spam detection. As we will
discuss, the knowledge of dynamic IP address ranges can effec-
tively help identify spamming hosts, especially for IP addresses
outside the United States, where little information is available from
existing data sources.
For our case study, we analyze the IP address block 148.202/16.
This is a large block of 65,536 IP addresses owned by Universi-
dad de Guadalajara in Mexico. The main reason for choosing this
particular block is the amount of interesting activity happening be-
hind it. 136 mail servers, all in this IP range, were used to send
email to Hotmail accounts during the period from June 2006 until
early September 2006. It is common for universities to conﬁgure
mail and other computing servers using static IP addresses, while
assigning dynamic IP address blocks for other uses (e.g., for wire-
less access). However, of the 136 mail servers we detected in this
IP range, 75 were solely used to send spam, while the rest sent a
mix of spam and legitimate email. This is further illustrated in Fig-
ure 1: notice that email servers in the address range 148.202.33.64
and 148.202.33.255 sent 100% spam.
As a ﬁrst step, we searched for records pertaining to 148.202/16
using the Dynablock database and rDNS lookups. Surprisingly,
none of the IP address in this range is listed in Dynablock, and a
majority (93 out of 136) of these email server addresses don’t even
have an rDNS record.
Of the 33 IP addresses with rDNS records, only 3 can be veri-
ﬁed as possibly legitimate, by virtue of the fact that the keyword
mail was present in their host names. The remaining 30 IPs could
not be classiﬁed due to the lack of any meaningful information
in their rDNS records. For example, one such IP resolved to for-
eigner.class.udg.mx. From the name alone, we cannot infer either
the type of IP address or whether this is a legitimate email server.
Blacklist-based spam ﬁltering techniques are also not effective
in the 148.202/16 address range. We screened all 30 popular spam
server blacklists [1] for the presence of the offending 136 mail
server IP addresses. Unfortunately, we were able to identify only 8
IP addresses from the blacklists. However, as we can see from
Figure 1, the number of spamming mail server IPs is far more
than 8. We can imagine two possible reasons for the absence of
these spamming mail servers in the blacklists. First, they might
have been sending a very low volume of spam, possibly below the
threshold required to qualify for the blacklist. Second, they might
have used dynamic IP addresses, meaning their IP addresses change
from time to time, making it hard to set up a history.
Applying UDmap to this range, however, we identiﬁed 7045 IP
addresses as dynamic. In particular, the range from 148.202.33.64
to 148.202.33.255 was identiﬁed as dynamic, where 73 IPs in this
range were used to set up mail servers. Since legitimate mail servers
must both send and receive emails, they are often conﬁgured to use
static IP addresses to facilitate establishment of inbound connec-
tions. Thus, mail servers set up using dynamic IP addresses are
more likely to be spam mail servers, directly controlled by spam-
mers or leveraged as zombie hosts. Indeed, for the 73 mail servers
set up with dynamic IP addresses, all of their trafﬁc to Hotmail was
classiﬁed as spam by the existing Hotmail spam ﬁlter.
The above discussion illustrates how the knowledge of IP dy-
namics can be a helpful feature for spam detection, particularly
when existing network-based approaches fail.
4. THE UDMAP ALGORITHM
In this section, we present our methodology for automatically
identifying dynamic IP addresses and computing IP volatility. We
make the observation that dynamic IP addresses manifest in blocks 2,
and therefore we explore aggregated IP usage patterns at the ad-
dress block level. The IP addresses we seek to identify are those
actively in use, so we name our algorithm UDmap in that it gener-
ates a usage-based dynamic IP address map.
UDmap takes as input a dataset that contains IP addresses and
some form of persistent identiﬁcation that can aid tracking of host
2It is common for system administrators to assign a range of IP
addresses for the DHCP pool rather than creating a discrete list of
individual IPs.
User 
login 
trace
IP-user
mappings
Routing 
tables
IP prefix 
table
Multi-user
IP block 
selection
Candidate 
IP blocks
IP usage-
entropy 
computation
IP
entropies
Dynamic 
IP block 
identification
Dynamic
IP blocks
Volatility 
estimation 
and proxy 
removal
Adjusted 
blocks and 
IP volatility 
information
Figure 2: Algorithmic overview of dynamic IP block identiﬁcation
identities, e.g., user IDs, cookies. Such datasets are readily avail-
able in many application logs, including but not limited to search
engine and Web server traces. The availability of more accurate
host identity information (e.g., OS IDs, device ﬁngerprints [14],
or MAC addresses) is not required, but may offer scope for more
precise results.
In our study, we adopt a month-long MSN Hotmail user-login
trace gathered during August, 2006 as our input data. Each en-
try in the trace contains an anonymized user ID, the IP address
that was used to access Hotmail, and other aggregated information
about all the login events corresponding to this user-IP pair in the
month. The aggregated information includes the ﬁrst and the last
time-stamps of the login events over the month, and the minimum
and the maximum IDs of the OSes used 3.
The output of UDmap includes (1) a list of IP address blocks
identiﬁed as dynamic IP blocks, and (2) for each returned IP ad-
dress, its estimated volatility in terms of the rate at which it is as-
signed to different hosts. In the rest of this section, we ﬁrst explain
the intuitions behind our approach (Section 4.1) and then present
the UDmap methodology in detail (Section 4.2 to 4.5).
4.1 Methodology Overview
Establishing IP dynamics with only user-IP mapping information
is a challenging task, because it is unrealistic to assume a one-to-
one mapping between users and hosts. For example, a user can
connect to Hotmail from both a home computer and a ofﬁce com-
puter. Further, a home laptop could be shared by family members,
each having a different Hotmail user ID.
We now make several key observations that collectively make the
identiﬁcation of dynamic IP addresses possible. Although a user
can use multiple hosts, these hosts are usually not located together
in the same network, or conﬁgured to use the same network-access
method (e.g., a laptop using a wireless network and a ofﬁce desktop
connecting through the Ethernet). Therefore it is very rare for a user
to be associated with several to tens of static IP addresses, all from
a very speciﬁc IP block. It is even rarer to observe a large number
of users, with each having used multiple static IP addresses.
To the contrary, it is very common to observe users that are asso-
ciated with multiple IP addresses from a dynamic IP address range.
Dynamic IP addresses are usually allocated from a continuous ad-
dress range, reachable by the same routing table preﬁx entries. Fur-
ther, a user who appears at a given dynamic IP address is likely to
use other IP addresses from the same range. UDmap thus explores
the aggregated user-IP mappings to identify dynamic IP address
ranges. By focusing on address activities at the granularity of IP
blocks, it can make estimates about the behavior of addresses that
appear infrequently or are absent from the traces.
Figure 2 presents a high level overview of the four major steps
involved in identifying dynamic IP address blocks. First, UDmap
selects (multi-user) IP blocks as candidate dynamic ones. Second,
3The trace collection process encodes each distinct type and ver-
sion of operation system into a unique OS ID.
for each IP address in every candidate block, UDmap computes
a score, deﬁned as usage-entropy, to discriminate between a dy-
namic IP and a static IP shared by multiple users. In the third step,
UDmap uses signal smoothing techniques to identify dynamic IP