1
2
Π,A,𝑄Dec,PW(1𝜆, 1𝑚, 1𝑡) = 1(cid:105) −
Π,A,𝑄Dec,PW(1𝜆, 1𝑚, 1𝑡) = 1(cid:105)(cid:12)(cid:12)(cid:12) ≤ 𝑄Dec
|PW| + negl(𝜆) .
We will prove the above statement via a typical hybrid argument,
1
Hid
for that we define the following hybrid experiments:
Π,A,𝑄Dec,PW(1𝜆, 1𝑚, 1𝑡).
• Hyb𝑏,0 is identical to Hid𝑏
• Hyb𝑏,1 is mostly identical to Hyb𝑏,0, except that all zero-
knowledge proofs are simulated by running the simulator of
the NIZKPoK scheme. It it straightforward to show that, for
all 𝑏 ∈ {0, 1},
(cid:12)(cid:12)(cid:12) Pr(cid:2)Hyb𝑏,0 = 1(cid:3) − Pr(cid:2)Hyb𝑏,1 = 1(cid:3)(cid:12)(cid:12)(cid:12) ≤ negl(𝜆)
using the zero-knowledge property of the NIZKPoK scheme.
• Hyb𝑏,2 is mostly identical to Hyb𝑏,1, except that when an
honest key rotation is triggered (the adversary queries the
RotateO oracle with HonestRot = 1), the secret key com-
ponents (𝑘𝑖, 𝐾0, { ¯𝐾𝑗}𝑡−1
𝑗=0) are freshly generated. For all 𝑏 ∈
{0, 1}, note that Hyb𝑏,1 and Hyb𝑏,2 are functionally equiva-
lent, therefore
Pr(cid:2)Hyb𝑏,1 = 1(cid:3) = Pr(cid:2)Hyb𝑏,2 = 1(cid:3) .
• Hyb𝑏,3,0 is identical to Hyb𝑏,2.
• Hyb𝑏,3,𝑞, where 𝑞 ∈ [𝑄Dec], is mostly identical to Hyb𝑏,𝑞−1,
except that when answering the adversary’s 𝑞-th query to
the DecO oracle which triggers the increment of the counter
DecCount (called a critical query hereinafter), the group el-
ements sent by honest parties are replaced by uniformly
∀𝑗 ∈ [0, 𝑡 − 1]
∀𝑗 ∈ [0, 𝑡 − 1]
∀𝑖 ∈ [𝑚]
∀𝑖 ∈ [𝑚]
0,
𝐾′
0 = 𝐺𝑘′
0 = 𝐾𝛾
¯𝛽 𝑗 ,
¯𝑆′
𝑗 = ¯𝑆 𝑗𝐺
¯𝛿 𝑗 ,
¯𝐾′
𝑗 = ¯𝐾𝛾
𝑗 𝐺
𝑗=0 ¯𝑆′𝑖 𝑗
𝐺𝑠′
𝑗=0 ¯𝐾′𝑖 𝑗
𝐺𝑘′
𝑖 =𝑡
𝑖 =𝑡
𝑗
𝑗
,
, and
for some random ¯𝛽0, . . . , ¯𝛽𝑡−1, 𝛾, ¯𝛿0, . . . , ¯𝛿𝑡−1 sampled by the server.
0, ¯𝛽0) and a nonce 𝑛,the server can up-
date each 𝐶 ∈ SKE.Enc(𝑠0, (𝐶0, 𝐶1)) to 𝐶′ ← SKE.Enc(𝑠′
0, 𝐶′
1))
1 := 𝐶1 · 𝐻1(𝑛) ¯𝛽0.
where 𝐶′
With the update token (𝑠0, 𝑠′
0 := 𝐶0 · 𝐻0(𝑛) ¯𝛽0 and 𝐶′
0, (𝐶′
3.3 Correctness and Security
The correctness of our construction follows from the correctness
of SKE and the completeness of the NIZKPoK scheme described
in Appendix A.2. Below, we state the security of our construction,
and give a proof sketch.
Theorem 3.1 (Hiding). If the decisional Diffie-Hellman (DDH)
assumption holds with respect to GGen, and SKE is CCA-secure, then
the (𝑡, 𝑚)-PHE scheme constructed above is semi-adaptively hiding
in the random oracle model.
Proof. We first note that the well known generalized Schnorr
protocol [17] (recalled in Figure 7) is a perfectly zero-knowledge
NIZKPoK for the relation 𝑅GDL in the random oracle model. We
therefore do not need extra assumptions on the NIZKPoK.
We want to prove that construction is hiding (under semi-adaptive
corruption). That is, for any PPT adversary A, any integer 𝑄Dec ≥ 0,
7
Dec⟨. . . , . . .⟩
Server S(“dec”, sk0, pw, 𝑛, 𝐶)
ensure KVf(0, sk0)
(𝐶0, 𝐶1) ← SKE.Dec(𝑠0, 𝐶)
ensure (𝐶0, 𝐶1) ≠ ⊥
𝑋0 := 𝐻0(𝑛), 𝑋1 := 𝐻1(𝑛)
𝑌−1
0,0 := 𝐶−1
0
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Computing encryption of 𝑍 := 𝑌−1
𝐾 := 𝐾0 · ¯𝐾0
𝑟0 ←$ Z𝑝 , (𝑈0, 𝑉0) := (𝐺𝑟0 , 𝐾𝑟0 · 𝑌−1
0,0 )
· 𝐻0(pw, 𝑛)
Rate-limiter R𝑖 (“dec”, sk𝑖), ∀𝑖 ∈ [𝑚]
ensure KVf(𝑖, sk𝑖)
𝑛
0,0 ·𝑖∈𝑃 𝑌
𝜆𝑃,𝑖
𝑖,0
𝑋0 := 𝐻0(𝑛), 𝑋1 := 𝐻1(𝑛)
𝑌𝑖,0 := 𝑋 𝑠𝑖
0
for some 𝑡-subset 𝑃 ⊆ [𝑚] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
𝜆𝑃,𝑗
𝑗
(𝑈 , 𝑉) :=
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Computing encryption of (𝑍 ˜𝑟 , 𝑍 ˜𝑟′ · 𝐻1(pw, 𝑛) · 𝐻1(𝑛)𝑖∈𝑃 𝜆𝑃,𝑖 𝑠𝑖 ) for some random ˜𝑟 and ˜𝑟′ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
(cid:19)
𝜆𝑃,𝑗
𝑗
˜𝑟′0 · 𝐻1(pw, 𝑛)(cid:17)
˜𝑟′0 , 𝑉
˜𝑟′
𝑖 , 𝑉
˜𝑟′
𝑖 · 𝑋
𝜆𝑃,𝑖·𝑠𝑖
1
𝑆 𝑗 :=𝑡−1
(cid:40)
ℓ=0 ¯𝑆 𝑗ℓ
ℓ
, ∀𝑗 ∈ [𝑚]
𝜋1,0 ← Prove (crs, (𝐺, 𝑈0), 𝑟0)
𝑗 ∈ [𝑚] : Vf
P :=
ensure |P| ≥ 𝑡
𝑃 ← Subset𝑡 (P)
(cid:32)
(cid:32) 𝐺,
crs,
𝐼,
𝑋0,
(cid:33)
(cid:33)
(cid:41)
= 1
, 𝜋1,𝑗
𝐼,
𝐺,
𝐾,
𝑆 𝑗
𝑈 𝑗
𝑉𝑗
(cid:19)
,𝑗∈𝑃∪{0}𝑉
(cid:16)𝑈
0) :=
0, ˜𝑉′
𝜆𝑃,𝑗
𝑗
(cid:18)𝑗∈𝑃∪{0}𝑈
(cid:16)𝑈 ˜𝑟0 , 𝑉 ˜𝑟0(cid:17) , ( ˜𝑈 ′
(cid:16)
(cid:16)
crs, (𝑈 , ˜𝑈0), ˜𝑟0
crs, (𝑈 , ˜𝑈 ′
0), ˜𝑟′
0
(cid:17)
(cid:17)
˜𝑟0, ˜𝑟′
0 ←$ Z𝑝
( ˜𝑈0, ˜𝑉0) :=
𝜋2,0 ← Prove
𝜋′
2,0 ← Prove
𝑉
, 𝜋2,𝑗
(cid:19)
crs,
˜𝑈 𝑗
˜𝑉𝑗
ensure ∀𝑗 ∈ 𝑃 : Vf
(cid:18)
(cid:18)𝑈
ensure ∀𝑗 ∈ 𝑃 : Vf(cid:169)(cid:173)(cid:173)(cid:171)crs,(cid:169)(cid:173)(cid:173)(cid:171)
(cid:16)𝑗∈𝑃∪{0} ˜𝑈 𝑗 ,𝑗∈𝑃∪{0} ˜𝑉𝑗
(cid:17)
(cid:16)𝑗∈𝑃∪{0} ˜𝑈 ′
𝑗 ,𝑗∈𝑃∪{0} ˜𝑉′
𝐼
𝜆𝑃,𝑗
1
𝐺
𝑉
𝐼
𝑈
𝑋
𝑗
(cid:17)
(cid:19)
(cid:170)(cid:174)(cid:174)(cid:172) , 𝜋′
2,𝑗
(cid:170)(cid:174)(cid:174)(cid:172)
𝑗
˜𝑈 ′
˜𝑉′
𝑗
𝑆 𝑗
𝑈𝑖 , 𝑉𝑖 , 𝜋1,𝑖
(cid:8)( 𝑗, 𝑈 𝑗 , 𝑉𝑗 , 𝜋1,𝑗) 𝑗∈(𝑃∪{0})\{𝑖}(cid:9)
to 𝑖 ∈ 𝑃
˜𝑈𝑖 , ˜𝑉𝑖 , 𝜋2,𝑖 , ˜𝑈 ′
𝑖 , ˜𝑉′
𝑖 , 𝜋′
2,𝑖
{( 𝑗, ˜𝑈 𝑗 , ˜𝑉𝑗 , 𝜋2,𝑗 , ˜𝑈 ′
2,𝑗)} 𝑗∈(𝑃∪{0})\{𝑖}
𝑗 , ˜𝑉′
𝑗 , 𝜋′
to 𝑖 ∈ 𝑃
(cid:33)
(cid:33)
, 𝜋1,𝑗
𝑆 𝑗
𝑈 𝑗
𝑉𝑗
(cid:19)
𝐾 := 𝐾0 · ¯𝐾0
𝑟𝑖 ←$ Z𝑝 , (𝑈𝑖 , 𝑉𝑖) := (𝐺𝑟𝑖 , 𝐾𝑟𝑖 · 𝑌𝑖,0)
𝑡−1
ℓ=0 ¯𝑆
𝑗ℓ
ℓ
(cid:32)
𝑆 𝑗 := 𝐺
𝑆𝑖 := 𝐺𝑠𝑖
, ∀𝑗 ∈ [𝑚] \ {𝑖}
(cid:32) 𝐺,
𝐼,
𝑋0,
(cid:19)(cid:33)
(cid:33)
,
(cid:18)𝑠𝑖
𝑟𝑖
𝐼,
𝐺,
𝐾,
𝑆𝑖
𝑈𝑖
𝑉𝑖
𝜋1,𝑖 ← Prove
crs,
𝑈
(cid:19)
crs,
𝐼,
𝑋0,
𝐼,
𝐺,
𝐾,
𝜆𝑃,𝑗
𝑗
𝑖 ) :=
(𝑈 , 𝑉) :=
𝜋2,𝑖 ← Prove
𝑖 , ˜𝑉′
˜𝑈𝑖
˜𝑉𝑖
ensure ∀𝑗 ∈ 𝑃 \ {𝑖} : Vf
˜𝑟𝑖 , ˜𝑟′
𝑖 ←$ Z𝑝
( ˜𝑈𝑖 , ˜𝑉𝑖) :=
(cid:32) 𝐺,
,𝑗∈𝑃∪{0}𝑉
(cid:18)
(cid:32)
ensure Vf(cid:0)crs, (𝐺, 𝑈0), 𝜋1,0(cid:1)
(cid:18)𝑗∈𝑃∪{0}𝑈
(cid:16)𝑈 ˜𝑟𝑖 , 𝑉 ˜𝑟𝑖(cid:17) , ( ˜𝑈 ′
(cid:18)
(cid:19)
(cid:18)𝑈