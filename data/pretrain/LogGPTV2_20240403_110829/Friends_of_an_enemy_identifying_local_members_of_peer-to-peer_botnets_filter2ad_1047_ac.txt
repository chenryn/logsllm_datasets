contacts graph of the Nugache peers onto in the mutual-
contacts graph of the background traﬃc where m Nugache
peers coincide with m selected internal hosts. This proce-
dure essentially blends Nugache traﬃc into the background
traﬃc so that each of these m selected internal hosts looked
as if they communicated with the peers that the correspond-
ing m Nugache peers communicated with. Consequently,
each of these m selected hosts becomes a real Nugache peer
and constitutes the ground truth as far as the proposed
scheme is concerned.
Once we obtained the superposed mutual-contacts graph,
we randomly selected one of the m hosts as the seed bot
and ran the Dye-Pumping algorithm to detect the other m−
1 hosts whose ﬂow records were modiﬁed according to the
Nugache crawler data. We set the number of iterations to
maxIter = 5 for Dye-Pumping algorithm since it is almost
impossible to ﬁnd P2P botnet peers more than 3 hops away
from the seed node due to the Erdős-Rényi model as will be
explained in Section 4. In the end, we returned the list of
hosts which accumulate more dye than the threshold as P2P
bots. To obtain statistically reliable results, we repeated the
experiment 100 times, each time with diﬀerent selection of
m hosts and m Nugache peers. We also picked a diﬀerent
24-hour segment of crawler data at every 20th repetition.
Results (Precision & Recall): To gauge the algorithm’s
performance, we computed the average precision and recall.
In our context, precision can be deﬁned as the ratio of the
number of Nugache peers in the returned list of hosts to the
length of the returned list. On the other hand, recall can be
deﬁned as the ratio of the number of Nugache peers in the re-
turned list to the number of all Nugache peers in the network
except the seed bot (m − 1). Figure 4 presents the average
precision and recall values for diﬀerent number of Nugache
peers (m) and diﬀerent threshold values (thr). We set the
privacy threshold k = 5 and node degree sensitivity coeﬃ-
cient β = 2. It is observed that several dormant Nugache
peers can be identiﬁed by the proposed technique when the
threshold is set to an appropriate value. For instance, in
Figure 4(c) we observe that, if there are 17 Nugache peers
in the network, the proposed scheme on average returns 35
hosts, 11 of which are Nugache peers. As a result, upon
obtaining the list of potential P2P bots, a network admin-
istrator can perform a more detailed investigation (perhaps
physically) on the hosts in the list and potentially uncover
several dormant P2P bots. Meanwhile, the returned list also
contains some hosts which are not Nugache peers since such
hosts happen to be connected to one or more Nugache bots
on the mutual-contacts graph due to mutual-contacts cre-
ated by other applications. Interestingly, it is observed in
Figure 4 that both precision and recall values increase as
the number of bots (m) increases. This is due to a property
135
thr=1x10−4
thr=5x10−4
thr=10x10−4
i
i
n
o
s
c
e
r
P
1
0.8
0.6
0.4
0.2
0
5
thr=1x10−4
thr=5x10−4
thr=10x10−4
1
0.8
0.6
0.4
0.2
l
l
a
c
e
R
0
5
40
30
20
10
0
#Bots
#Returned Hosts
20
Number of Nugache Peers (m)
10
15
20
Number of Nugache Peers (m)
10
15
(a) Precision
Figure 4: Experiment results with Nugache. The parameters are k = 5 and β = 2
(b) Recall
5
9
Number of Nugache Peers (m)
(c) Returned host counts,thr=5x10−4
13
17
21
of Erdős-Rényi random graphs that−as will be explained in
the next section− the probability of having a short path be-
tween two nodes increases with the number of nodes. It is
also observed that, increasing the threshold increases pre-
cision but decreases recall, as is naturally expected for any
detection system.
Eﬀects of Privacy Threshold (k): When we repeated
the experiments for diﬀerent k values, we did not observe
a major change in the precision performance. On the other
hand, we observed, as shown Figure 5(a), that recall per-
formance improves as we decrease k as long as the number
of P2P bots in the network is low. The recall performance
improves because more background traﬃc is ﬁltered out for
lower k, thereby removing a signiﬁcant portion of the benign
edges. However, if there are many P2P bots in the network
and if k is small (i.e. k = 3), more than k of them are
likely to communicate with several common external peers
and therefore some of the botnet communications are likely
to be ﬁltered out as well. The eﬀect of this phenomenon can
be observed in Figure 5(a), where recall performance dimin-
ishes for large number of Nugache peers. Hence, based on
Figure 5(a) we can say that k = 5 was an appropriate setting
for our network.
Eﬀects Node Degree Sensitivity Coeﬃcient (β): As
explained in Section 2.3, larger β values result in less dye-
ﬂow towards the nodes which have high degrees on a mutual-
contacts graph. We would like to restrict the dye-ﬂow to
high-degree nodes, because edges between bots and high-
degree nodes are probably not due to botnet communica-
tions but rather due to some other application which causes
many of the edges that high-degree nodes have. Larger β
values cause the dye to concentrate around the seed-bot and
therefore improve the precision performance as observed in
Figure 5(b). On the other hand, since the algorithm cannot
reach far in the mutual-contacts graph for larger β values,
the recall performance drops as β gets larger as observed in
Figure 5(c). According to our experiments, β = 2 turned
out to be an appropriate setting for our network.
In summary, diﬀerent values of the parameters k and β
yield a tradeoﬀ between precision and recall. When deploy-
ing the proposed scheme, a network administrator should
ﬁrst decide on the minimum tolerated precision level and
then set the parameters accordingly. For this purpose, ar-
tiﬁcial P2P botnet traﬃc generated by the Random Peer
Selection model described in Section 4.1 could be used as
a ground truth to determine which parameter values would
136
result in which precision levels for a given network.
4. MATHEMATICAL ANALYSIS
The essence of the proposed algorithm is that the mem-
bers of a P2P botnet tend to have mutual-contacts and
therefore are closely connected on a corresponding private
mutual-contacts graph. In fact, the dye-pumping algorithm
performs better if P2P bots in a network are connected to
the seed node through shorter and higher-capacity paths,
which yield higher volume of dye ﬂow from the seed node
to the other bots. Although our experimental results in
the previous section tend to validate our intuition, some
signiﬁcant questions remain to be addressed to mathemati-
cally validate the approach and show its applicability to the
general problem that goes beyond speciﬁc instances of P2P
botnets. Question such as how likely is it that two peer
bots will have a mutual contact? How does this probability
vary with the size of the botnet and the number of peers
contacted by each bot. Next, how likely is it that the mu-
tual contact graph will have a connected component that
spans peer bots? How does one characterize the properties
of the mutual contacts graph? In this section we address
these questions and present a mathematical analysis that
supports our approach and validates the experimental re-
sults reported in the previous section.
4.1 Random Peer Selection Model
The ﬁrst question we posed was the likelihood of peer
bots having a mutual contact. But before we answer that,
we would like to ﬁrst justify the framework in which we
examine this question. Recall that our framework assumes
that bots independently and randomly select the peers with
which they communicate. How does this assumption bias
our analysis? In this subsection we address this question
and argue that this represents the worst case situation for
our analysis.
In a P2P network some peers might be more available
than others and therefore they have a higher probability of
being selected by other peers [14][18] [21] [1]. Obviously,
having such preferred peers in a P2P botnet increases the
chance ﬁnding mutual-contacts between P2P bots in a net-
work. However, the worst case, as long as unstructured
P2P botnets are considered, from our work’s point of view
is when there is no preferred peer in the botnet and all
peers have equal probability of being contacted by any other
peer, thereby minimizing the probability of private mutual-
contacts between peers.
To investigate the probability of mutual-contacts in the
worst case, we consider a generic botnet model, where each
β=0
β=1
β=2
β=3
i
i
n
o
s
c
e
r
P
1
0.8
0.6
0.4
0.2
0
l
l
a
c
e
R
1
0.8
0.6
0.4
0.2
0
k=3
k=5
k=10
20
Number of Nugache Peers (m)
(a) Recall for diﬀerent k
10
15
5
10
20
Number of Nugache Peers (m)
(b) Prec. for diﬀerent β
15
β=0
β=1
β=2
β=3
20
Number of Nugache Peers (m)
(c) Recall for diﬀerent β
10
15
5
4.2 Friends Stay Closely Connected (Erd˝os-
Figure 5: Eﬀects of diﬀerent parameters. The non-varying parameters are set to k = 5, β = 2 and thr = 5×10−4
bot picks peers independently and randomly. The model has
edges, thereby allowing the dye-pumping algorithm to iden-
two conﬁgurable parameters such that; “B” is the number of
tify them.
all peer in the botnet and “C” is the number of peers that
each peer communicate with during a speciﬁc observation
window. Based on these parameters, each bot (bi) in the
model communicates with a uniform random subset (Si) of
all B−1 available bots (excluding itself) in the model, where
the cardinality of each subset is C.
Bot-Edge Probability: Having justiﬁed our framework,
we now address the question about the probability of two
peer bots having a mutual contact. In the random peer se-
lection model, the probability of having an edge between
two arbitrary bots bi and bj (i.e. bot-edge probability, pe) is
actually the probability of the intersection of the correspond-
ing subsets being non-empty; such that pe = P r(Si∩Sj (cid:5)= ∅).
Since the number of elements in the intersection of two uni-
form random subsets can be computed using hypergeometric
distribution, we can write the bot-edge probability as:
Having established that it is quite likely that two peer bots
will have a mutual contact we now turn our attention on the
expected structure of the mutual contacts graph. After all,
the Dye-Pumping algorithm can only identify the P2P bots
which are connected to the seed-bot via short paths on the
mutual-contacts graph. Bots which are isolated from the
seed-bot cannot be accessed by the algorithm. In this sub-
section, given a bot-edge probability, we investigate how the
P2P bots are expected to be oriented on a private mutual-
contacts graph and what portion of the P2P nodes can be
accessed by the dye-pumping algorithm.
Rényi Subgraphs)
1
0.8
0.6
0.4
0.2