this choice for future work.
The lead AP contends on behalf of all slave APs, with its con-
tention window weighted by the number of packets in the joint
transmission as described in [29]. Clients contend for the medium
as they do today using 802.11 CSMA. When the lead AP wins a
contention window, it starts transmitting its synchronization header,
which causes the slave APs to join the transmission. We note that
contention for joint transmission by the lead AP is robust to hid-
den terminals for two reasons. First, JMB is intended for dense de-
ployments like conference rooms where access points can hear each
other, and the overall wireless capacity is limited by interference be-
tween access points. Further, even in the unlikely event of hidden
terminals, situations causing persistent packet loss due to repeated
collisions can be detected using mechanisms like in [34], and the
lead AP can ensure that JMB access points that trigger hidden ter-
minal packet loss above a threshold are not part of the joint trans-
mission. This ensures that both JMB joint transmissions, as well as
other transmissions, do not encounter persistent hidden terminals.
Rate Selection using Effective SNRs: In systems like JMB where
different sets of APs transmit concurrently for different packets, the
rate to a client can change from packet to packet as the effective
channel at each client changes as a result of beamforming. Such sys-
tems therefore need to use a rate-selection algorithm [19]. JMB uses
the effective SNR algorithm, which is designed for rate selection for
802.11-like frequency selective wideband channels [13]. Since APs
in JMB know the full channel matrix, H, prior to transmission. APs
multiply the signals by kH−1 (k accounts for the maximum power
constraint at APs). Thus, the effective channel is kH−1H = kI, giv-
ing a signal strength of k2 at each client. Client cards report noise N
as in [11]. Clients send the noise N to APs along with the measured
channels. Since APs know the signal strength, k2, in each subcarrier,
and the associated noise N, they can compute the SNR in each sub-
ClientLead APL2Slave APS1S2R1R2L1ReferenceantennaClientLead APL2Slave APS1S2R1R2L1Referenceantenna241carrier as k2
N . They can then map this set of SNRs to rate by perform-
ing a table lookup [13]. Thus, each client in a JMB joint transmission
gets the same rate, which is similar to traditional 802.11 fairness.
Acknowledgments: JMB disables synchronous ACKs at clients and
uses higher layer asynchronous acknowledgments like in prior work
such as MRD and ZipTx [25, 20]. Further, similar to systems like
Maranello [14], JMB can modify the ﬁrmware on clients to imple-
ment an optimized joint synchronous acknowledgment protocol con-
sisting of a single SIFS, followed by back-to-back acknowledgments
from all the clients.
Packet losses and retransmissions: It is important to note that, even
though APs transmit packets jointly to different receivers, packet
losses at different clients are decoupled. Speciﬁcally, if APs have
stale channel information to a client, only the packet to that client is
affected, and packets at other clients will still be received correctly.
As in regular 802.11, APs in JMB keep packets in the queue until
they are ACKed. If a packet is not ACKed, they can be combined
with other packets in the queue for future concurrent transmissions.
10. TESTBED AND IMPLEMENTATION
We implement JMB’s AP design in software radios and evaluate
it with both off-the-shelf 802.11 clients and software-radio clients.
(a) Implementation for the software radio testbed: In this testbed,
each node is equipped with a USRP2 board [6], and an RFX2400
daughterboard, and communicates on a 10 MHz channel in the
2.4 GHz range. We implement OFDM in GNURadio, using various
802.11 modulations (BPSK, 4QAM, 16QAM, and 64QAM), cod-
ing rates, and choose between them using the effective-SNR bitrate
selection algorithm [13].
Our JMB implementation includes the following modules: dis-
tributed phase alignment, beamforming for multiplexing and diver-
sity, and bitrate selection. We do not implement ACKs, CSMA, or re-
transmissions. To perform correct phase alignment, concurrent trans-
mitters must be synchronized tightly at the sample level. We do this
by using USRP2 timestamps to synchronize transmitters despite de-
lays introduced by software. Before every data packet, the lead AP
sends a trigger signal on the medium at ttrigger. All other APs log the
timestamp of this signal, add a ﬁxed delay t∆ to it, and then trans-
mit concurrently at this new time. We select t∆ as 150µs based on
the maximum delay of our software implementation. Finally, to opti-
mize the software turnaround, we did not use GNURadio, but wrote
our own C code that directly interacts with the USRP hardware.
(b) Implementation for the 802.11 testbed: There are two main dif-
ferences between this testbed and the one above. First, each client in
this testbed uses an off-the-shelf 802.11 card. Second, each node in
this testbed has two antennas and can act as a MIMO node. Our ob-
jective is to show that JMB extends beyond single antenna systems;
For example, it can combine two 2x2 MIMO systems to create a 4x4
MIMO system.
Each AP is built by connecting two USRP2 nodes via an exter-
nal clock and making them act as a 2-antenna node. Each client is
a PC equipped with a Intel Wi-Fi Link 5300 a/b/g/n wireless net-
work adapter on which 2 antennas are enabled. The Intel Wi-Fi Link
5300 adapters are updated with a custom ﬁrmware and associated
iwlwifi driver in order to obtain the channel state information in
user space [12].
The AP software implementation is similar to the other testbed ex-
cept that we make the channel width 20 MHz to communicate with
actual 802.11 cards. The packet format is also changed to match
802.11 packets. The client software collects the channel measure-
ments from the ﬁrmware and logs correctly decoded packets.
Figure 5: Testbed Topology. Client locations are marked by red cir-
cles, and AP locations by blue squares. Note that the ﬁgure shows the
set of possible locations for clients and APs, and different subsets of
locations are picked for different experiments.
Figure 6: Degradation of SNR due to phase misalignment. Even
with only 2 transmitters, a misalignment of just 0.35 radians can
reduce the SNR by almost 8 dB at the receivers due to interference.
(c) Testbed Topology: We evaluate JMB in an indoor wireless
testbed that simulates a conference room or classroom, with APs
deployed on ledges near the ceiling, and clients scattered through
the room. Fig. 5 shows node locations in the experimental environ-
ment. In every run, the APs and clients are assigned randomly to
these locations. Note that the testbed exhibits signiﬁcantly diverse
SNRs as well as both line-of-sight and non line-of-sight paths due
to obstacles such as pillars, furniture, ledges etc. The APs transmit
1500 byte packets to the clients in all experiments.
11. RESULTS
We evaluate JMB both through microbenchmarks of its individ-
ual components, as well as an integrated system on both USRP and
802.11n testbed.
11.1 Microbenchmarks
(a) Necessity of Phase Alignment: A key challenge for a dis-
tributed MIMO system is that it must compensate for oscillator off-
sets between the transmitters. In this section, we demonstrate the
impact of misalignment between transmitters on the received SNR.
Method. We simulate a simple 2-transmitter, 2-receiver system
where different data is intended for each receiver. The transmit-
ters measure the initial channel matrix to the receivers, and use this
matrix to compute their beamforming vectors. We then introduce a
phase misalignment at the slave transmitter, and compute the reduc-
tion in SNR at each receiver as a result of this misalignment. We
repeat this process for 100 different random channel matrices, phase
misalignments from 0 to 0.5 radians, and for two systems - one in
which the average SNR is 10 dB, and other in which the average
SNR is 20 dB.
Results. Fig. 6 shows the average reduction in SNR in dB, as a
function of phase misalignment. As one would expect, an increase
in phase misalignment increases the interference at each receiver.
As the graph shows, even a phase misalignment as small as 0.35
 0 2 4 6 8 10 12 0 0.1 0.2 0.3 0.4 0.5Reduction in SNR (dB)Phase misalignment (radians)10 dB SNR20 dB SNR242due to the delay from when the slave measures the lead’s channel
and turns around to jointly transmit data will induce misalignment.
As can be seen, however, the median misalignment is less than 0.017
radians, and the 95th percentile misalignment is less than 0.05 radi-
ans. Based on Fig. 6, with two transmitters, JMB’s phase alignment
algorithm can ensure that the SNR of joint transmission is not re-
duced by 0.4 dB at the 95th percentile.
(c) How does SNR reduction scale? The previous experiments
examined in depth the impact of misalignment and JMB’s precise
alignment performance in the case of a 2x2 distributed MIMO sys-
tem. In this experiment, we observe how the SNR reduction grows
as we increase the number of transmitters in the system.
Method. We evaluate the SNR reduction in JMB in three effective
SNR [13] ranges: low (6-12 dB), medium (12-18 dB) and high (> 18
dB). For each range, we place several JMB nodes in random AP lo-
cations in the testbed. We then place the same number of JMB nodes
in random client locations, such that all clients obtain an effective
SNR in the desired SNR range. For each placement, we then choose
a client at which all APs null their interference, i.e. the expected sig-
nal at that client is zero and measure the received signal power at
that client. If phase alignment is perfect, the received signal power
should be comparable to noise, i.e. the ratio of the received signal
power to noise should be 0 dB. Any inaccuracy in phase misalign-
ment will lead to interference, manifest as a higher ratio of received
power to noise, and produce a corresponding reduction in SNR if
data were actually transmitted to that client. For each topology, we
null at each client, and compute the average interference to noise
ratio (INR) across clients. We repeat this experiment for different
topologies, and different numbers of JMB APs at low, medium and
high SNRs.
Result. Fig. 8 shows the INR as a function of the number of JMB
APs at low, medium and high SNRs. Note that, as before, the reduc-
tion in SNR increases with SNR, but is below 1.5 dB even at high
SNR. The INR also increases with the number of APs, as the number
of interferers increases, but increases gradually: only ∼ 0.13 dB for
every additional AP-client pair even at high SNR.
11.2 Increase of Network Throughput with the
Number of APs
JMB’s key goal is to increase the network throughput as the num-
ber of APs increases. This experiment veriﬁes if JMB delivers on
that promise.
Method. We evaluate JMB’s performance in three effective SNR
ranges: low (6-12 dB), medium (12-18 dB) and high (> 18 dB).
For each range, we place a certain number of JMB nodes in ran-
dom AP locations in the testbed. We then place the same number of
nodes in random client locations such that all clients obtain an effec-
tive SNR in the desired range. For each such topology, we measure
the throughput obtained both with regular 802.11 and JMB. Since
USRP2 cannot perform carrier sense due to software latency, we
measure the throughput of 802.11 by scheduling each client so that it
gets an equal share of the medium. We repeat the experiment for 20
different topologies and also vary the number of JMB APs for each
SNR range.
Results. Figs. 9(a), (b), and (c) show the total throughput obtained
by 802.11 and by JMB for different numbers of APs, and different
SNR ranges. Note that, as one would expect, the obtained throughput
increases with SNR (802.11 throughput at low SNR is 7.75 Mbps, at
medium SNR is around 14.9 Mbps, and at high SNR is 23.6 Mbps).
There are two main points worth noting:
• 802.11 cannot beneﬁt from additional APs operating in the same
channel, and allows only one AP to be active at any given time. As
Figure 7: CDF of observed phase misalignment. The median mis-
alignment is 0.017 radians, and the 95th percentile misalignment is
0.05 radians.
Figure 8: Accuracy of Phase Alignment. Average INR at receivers
for various numbers of receivers across different SNR ranges. INR
stays below 1.5dB across SNRs even with 10 receivers.
radians4 , can cause an SNR reduction of almost 8 dB at an SNR
of 20 dB. This SNR reduction will be greater as we add more and
more transmitters to the system. Further, phase misalignment causes
a greater reduction in SNR when the system is at higher SNR. This
is because the impact of additional noise added by interference is
higher when the original noise itself is low, i.e., at high SNR.
(b) Accuracy of JMB’s Phase Alignment: We now examine the
accuracy of JMB’s lightweight distributed phase alignment algo-
rithm.
Method. In this experiment, we place two JMB nodes at random
AP locations and a third JMB node at a receiver location. We ran-
domly pick one of the two APs to be the lead and the other to
be the slave. The slave transmitter implements JMB’s distributed
phase synchronization algorithm, and performs phase correction on
its transmission before joining the lead transmitter’s data transmis-
sion. In order to measure the accuracy of JMB’s phase synchroniza-
tion algorithm, we make the lead and the slave APs alternate be-
tween transmitting OFDM symbols. In particular, each transmitter’s
transmission consists of pairs of an OFDM symbol followed by an
OFDM symbol length of silence. The transmissions of the lead and
slave transmitter are offset by 1 symbol so that the receiver sees al-
ternating symbols from lead and the slave transmitter. The receiver
estimates the lead and slave transmitter’s channels separately, and
computes the relative phase between them. We then perform several
rounds of this measurement. The receiver uses the ﬁrst measurement
of relative phase as a reference, and computes the deviation of rela-
tive phase from this reference in subsequent transmissions.
Result. Fig. 7 plots the CDF of the absolute value of the devi-
ation in relative phase across all the experiments. If the lead and
slave transmitter are always perfectly aligned, the deviation should
be zero. However, estimation errors due to noise and oscillator drift
40.35 radians is much smaller than the misalignment expected with
the mandated 802.11 tolerance of 20 ppm.
 0 0.2 0.4 0.6 0.8 1 0 0.02 0.04 0.06 0.08Fraction of runsPhase misalignment-0.2 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 3 4 5 6 7 8 9 10INR (dB)Number of receiversLow SNRMedium SNRHigh SNR243(a) High SNR (> 18 dB)
(b) Medium SNR (12-18 dB)
(c) Low SNR (6-12 dB)
Figure 9: Scaling of throughput with the number of APs. In this experiment, the number of APs equals the number of receivers. At all
SNRs, JMB’s network throughput increases linearly with the number of APs while total 802.11 throughput remains constant.
(a) High SNR (> 18 dB)
(c) Low SNR (6-12 dB)
Figure 10: Fairness. CDFs of per-client throughput gain. Across all SNRs, JMB provides all clients with very similar gains.
(b) Medium SNR (12-18 dB)
a result, its throughput stays constant even as the number of APs
increases. This throughput might vary with the number of APs in
a real 802.11 network due to increased contention; however, since
USRPs don’t have carrier sense, we compute 802.11 throughput
by providing each client with an equal share of the medium. In
contrast, with JMB, as we add more APs, JMB can use these APs
to transmit concurrent packets to more receivers. As a result, we
see that the throughput of JMB increases linearly with the number
of APs.
• The absolute gains provided by JMB are higher at high (∼9.4× for
10 APs) and medium (∼9.1×) SNRs, than at low SNRs (∼8.1×).
This is a consequence of the theoretically predicted throughput
of beamforming. In particular, the beamforming throughput with
K ) = N log(SNR) − N log(K), where
N APs scales as N log( SNR
K depends on the channel matrix H and is related to how well
conditioned it is [39]. Natural channel matrices can be consid-
ered random and well conditioned, and hence K can essentially be
treated as constant for our purposes. The 802.11 throughput scales
roughly as log(SNR) [39]. The expected gain of JMB over 802.11
can therefore be written as N(1 − log(K)
log(SNR) ) and hence becomes
closer to N as SNR increases. This is why, JMB’s gains at lower
SNR grow at a lower rate than the gains at high SNR.
11.3 Fairness
In this experiment, we verify if JMB is fair, i.e., it delivers the
above throughput gains to all nodes.
Method. We perform the same experiment as in §11.2. We then
compute the throughput gain of each node as the ratio of its through-
put with JMB to its throughput with 802.11. As before, we perform
this experiment varying the number of APs from 2 to 10, and across
the full range of SNRs.
Results. Figs. 10(a), (b), and (c) plot the CDF of the throughput
gain for 2, 6 and 10 APs at high, medium, and low SNRs. The results
show that JMB is fair i.e. all nodes see roughly the same throughput
gains, and these match the gains in total throughput shown in §11.2.
Note that the CDF is wider at lower SNR. This is a consequence
of greater measurement noise at low SNR causing larger throughput
differences between clients.