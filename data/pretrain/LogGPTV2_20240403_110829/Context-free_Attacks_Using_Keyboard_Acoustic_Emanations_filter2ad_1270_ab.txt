e
t
y
9,0,0 9,1,0 1,1,1 8,1,0 10,0,0 7,1,0
u
i
o
p
a
s
7,0,2 8,1,0 4,4,1 9,1,0 6,0,0 9,0,0
d
f
g
h
j
k
8,1,0 2,1,1 9,1,0 8,1,0 8,0,0 8,0,0
l
;
z
x
c
v
9,1,0 10,0,0 9,1,0 10,0,0 10,0,0 9,0,1
b
n
m
,
.
/
10,0,0 9,1,0 9,1,0 6,1,0 8,1,0 8,1,0
Table 2. The neural network is tested with 300
clicks, 10 clicks per key.
that a click is produced by the key k (l) if it assigns an out-
put node a value between 0 and 0.5 (0.5 and 1). The
histogram displays the number of correct and false recog-
nitions per each 0.1 interval of the output range of the
node. In Figure 6, there are no false recognitions, mean-
ing that all 20 clicks were recognized correctly.
On average, there were only 0.5 incorrect recognitions
per 20 clicks, which shows the exposure of keyboard to the
eavesdropping using this attack.
2.4. The effect of distance
In the above experiment, clicks were recorded from a
short distance of less than 1 meter. We repeated the ex-
periment of distinguishing between two keys by recording
clicks from different distances to study the inﬂuence of the
distance on the quality of recognition. We used an inexpen-
sive parabolic microphone to record the clicks. The micro-
phone was placed behind the person typing. The person was
sitting in a cubicle in a hall, with substantial background
noise.
The maximum distance we experimented with was ap-
proximately 15 meters. There was no decrease in recogni-
tion quality even at this distance.
2.5. Multiple keys
We next studied the effect of multiple keys on the quality
of recognition.
We trained a network to recognize 30 keys on a keyboard
(‘q–p’, ‘a–;’, ‘z–/’). We then recorded 10 test clicks per key.
The neural network had 30 output nodes, each node cor-
responding to one of 30 keys. The network was trained to
recognize a key by assigning a unique output node a value
close to 1, while other nodes were assigned values close to
0. At the time of testing, a certain key was deemed recog-
nized if the output node corresponding to this key was as-
signed largest value when the feature corresponding to the
key was provided as input to the neural network.
The results are presented in Table 2. For each of the
10 test clicks of a single key we collected three numbers:
how many times the node corresponding to the key had the
largest value, the second largest value, or the third largest
value among the 30 nodes. We observe that if the node
corresponding to the pressed key does not have the largest
value among the 30 nodes, then with high probability, it has
the second (or third) largest value.
In summary, a key was recognized correctly with the
largest value assigned to the correct node in 79% of the
clicks (out of 300 test clicks). The network assigned the sec-
ond (the third) largest value to the correct node in 7% (%2)
of the test clicks. So, the correct key was not found among
the three candidates proposed by the network in only 12%
of the tests. This experiment further reinforces the vulnera-
bility of the keyboard to eavesdropping.
2.6. Multiple PC keyboards
We next investigated the feasibility of attacking a key-
board with a network trained on another keyboard of the
same type. We performed our experiments using three GE
keyboards. After training a network on keyboard A, we ap-
plied this network to recognize the clicks produced by the
other two keyboards B and C.
The results are presented in Table 3. As expected, the
quality of recognition is lower compared to the case where
the network is used to attack the same keyboard as it was
trained on (Table 2). We see that 28%, 12%, 7%, and 5%
of the clicks were recognized correctly as the ﬁrst, second,
third, or fourth candidate respectively for keyboard B. So,
the correct key was found among the four guesses made by
the network in 52% of the tests. For keyboard C, the same
statistics is 50%.
These results show that the quality of recognition in this
setup might be insufﬁcient to eavesdrop on the plain text be-
ing typed, however, the information gain is signiﬁcant for
password snooping.
2.7. Handling different typing styles
In the previous experiments, all the clicks used in the
training set as well as the test set were generated by the
same person, using the same ﬁnger and approximately the
same force.
We next studied the effect on recognition if a person
types with variable force. Initially, the network was trained
on clicks produced with an approximately constant typing
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
key pressed
recognized
Keyboard B, ADCS: 9.24
r
w
q
e
t
y
6,1,1 4,1,1 0,1,0 0,2,1 5,1,1 1,0,0
u
i
o
p
a
s
1,2,1 4,1,1 4,3,1 4,1,1 4,1,0 2,1,0
d
f
g
h
j
k
1,4,0 0,0,0 1,0,1 5,1,1 9,0,0 1,0,2
l
;
z
x
c
v
5,0,1 3,2,0 1,0,2 0,0,0 2,0,0 0,2,2
b
n
m
,
.
/
3,3,1 3,1,1 5,1,1 0,2,1 2,1,0 7,2,1
Keyboard C, ADCS: 9.10
r
w
q
e
t
y
1,1,3 0,0,1 0,0,1 4,3,1 0,0,0 0,0,0
u
i
o
p
a
s
2,3,0 1,3,0 3,3,3 1,1,1 0,1,0 1,2,0
d
f
g
h
j
k
2,0,1 0,1,0 2,0,4 2,4,1 0,3,1 3,1,0
l
;
z
x
c
v
1,0,0 1,1,0 2,2,0 0,1,1 10,0,0 1,0,2
b
n
m
,
.
/
7,1,1 7,1,1 5,0,2 1,1,3 4,1,0 2,1,1
Table 3. Keyboards B and C are attacked us-
ing a network trained on the keyboard A of
the same type. There are 300 test clicks per
keyboard, 10 clicks per key.
constant force (correct)
constant force (false)
variable force (correct)
variable force (false)
s
k
c
i
l
c
f
o
r
e
b
m
u
n
7
6
5
4
3
2
1
0
0
0.1
0.2
0.4
0.3
0.5
output of NN
0.6
0.7
0.8
0.9
Figure 7. Test clicks produced with variable
force are classiﬁed by two networks. For one
network a constant force was used to pro-
duce the training set of clicks. For another
network, variable force was used.
i
l
c
s
k
c
f
o
r
e
b
m
u
n
Alice (correct)
Alice (false)
Bob (correct)
Bob (false)
Viktor (correct)
Viktor (false)
8
6
4
2
0
0
0.2
0.6
0.4
output of NN
0.8
Figure 8. Clicks produced by three different
persons are tested on the network trained by
another person.
force. The results of recognizing the test clicks produced
with variable force were poor (Figure 7).
Next, we generated a training set in which clicks were
produced by typing with a variable force and trained the
network again. The testing results (Figure 7) now are as
good as in the basic experiment, meaning that the network
can be trained to recognize the clicks produced with differ-
ent forces. Other experiments show that the same conclu-
sion is valid for typing with one vs. many ﬁngers. Namely,
if trained with one ﬁnger only, the clicks produced by dif-
ferent ﬁngers are recognized with high error rate. But a net-
work trained with many ﬁngers is as good as the basic one
in recognizing the clicks: approx. 1 click (out of 20 clicks)
is recognized incorrectly.
We also investigated if different typing styles affect the
quality of recognition. The answer to this question is par-
ticularly important for practical attacks, where the network
might be trained by one person (an attacker himself) and
then applied to the keyboard in use by another person.
The network was trained using the training set produced
with variable typing force by one person. Then, the test sets
were recorded from three different people. They were free
to use any typing style. The results of recognition (Figure 8)
show that it is possible for the network to be trained on one
person and then applied to attack the same keyboard in use
by another person. The difference in typing style affects the
quality of the classiﬁcation of the clicks only slightly.
Figure 9. The architecture of a mechanical
keyboard.
3. Countermeasures
An obvious candidate for countermeasure is a silent key-
board. It can be a keyboard made of rubber [5], or a key-
board based on a touchscreen or touchstream technologies
[4]. Recently, virtual keyboards have appeared that can be
projected on a ﬂat surface [1] or in the air [3].
These choices are more expensive than the standard me-
chanical keyboard. Typing on a standard keyboard is much
more comfortable than typing on a touchscreen or a rub-
ber keyboard.2
In this section, we try to determine experimentally the
reasons for clicks to sound different. Conclusion made from
this study can help in designing a mechanical keyboard that
produces indistinguishable clicks.
3.1. Mechanical Keyboard
Figure 9 shows the schematic of a mechanical keyboard.
Each key consists of three parts: a head, a dome-shaped rub-
ber part, and an intermediate plastic part that interconnects
the head and the rubber. The keys are kept together by a
plastic plate of a size of the keyboard, with the intermedi-
ate parts of the key going through this plate.
Under the rubber part there is an electrical switch cor-
responding to the key. When the key is being pressed, the
dome-like rubber part of the key is squeezed, and the top of
the dome forces the switch under it to close the circuit.
2
The silent ”chicklet” keyboard was an important factor in the non-
acceptance by the market of IBM PC Jr. [2].
3.2. Why the clicks produce different sounds
We hypothesized three reasons for clicks to produce dif-
ferent sounds:
1. The interaction of the sound produced by a key click
with the surrounding environment such as neighbor-
hood keys might be the reason for each key to sound
slightly different.
2. Microscopic differences in the construction of the keys
might cause them to sound different.
3. Different parts of the keyboard plate might produce
different sounds when the nearby key is pushed. By
analogy with a drum, striking a key at different loca-
tions on the plastic plate provides different timbres.
The ﬁrst hypothesis was ruled out by the following ex-
periment. After the neural network was trained to distin-
guish between two keys, the surrounding environment was
changed by removing several neighborhood keys on the
keyboard. This modiﬁcation should have changed the way
the clicks sound if the environment is the underlying reason.
However, the recorded test clicks were successfully classi-
ﬁed by the trained network, invalidating the hypothesis.
To check the second hypothesis, we trained the network
to recognize two keys: k and l. We then interchanged them
on the keyboard plate and recorded their test clicks. The net-
work identiﬁed the test clicks of the k element as l, and the