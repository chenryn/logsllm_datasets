(cid:3)
(cid:3)
i
; (cid:6)
= (fT
(cid:3)
where (m
(eR1;eR2;eR3;eR4;eR5) and (R
pairs (em;e(cid:6)) and (m
(cid:3)
(cid:3)
r )) is a pair of the challenge message and signature, and
(cid:14) ; (cid:27)
(cid:3)
5) are the intermediate values computed in the veri(cid:12)cation of
Now, we prove the statement by considering a sequence of games. Let A be an adversary that
attacks the anonymity of the patched scheme (cid:5), and Sℓ denote the event that A succeeds in guessing
(cid:3)
x; (cid:27)
(cid:3)
3; R
), respectively.
gi2[1;4]; c
(cid:3)
1; R
(cid:3)
(cid:3)
y; (cid:27)
(cid:3)
4; R
(cid:3)
; (cid:27)
(cid:3)
2; R
(cid:3)
q ; (cid:27)
; (cid:6)
(cid:3)
the challenge bit b in Game ℓ.
[Game 0]: This is the experiment Expanon
random oracle in the list L as in the proof of Theorem 4.1.
(cid:5);A ((cid:21)) itself. The challenger manages an input/output pair of the
(cid:3)
gi2[1;5]; m
[Game 1]: We modify the way of generating the challenge signature in Game 1.
gi2[0;4];
gi2[0;4];fR
fT
(cid:3)
(cid:3)
gi2[1;5]; m
fR
(cid:3)
(cid:3)
i
i
), the challenger sets (cid:6)
(cid:3)
i
1 is uniformly random value in G1, the probability that there is already the same pair in
Since T
L is at most qH =p where qH is the number of A’s random oracle queries. Therefore, we have that
);(cid:1)) is already in the list L when computing the value H(gpk;fT
If the pair ((gpk;
= ?.
(cid:3)
i
(cid:3)
(cid:12)(cid:12)Pr[S0] (cid:0) Pr[S1]
(cid:12)(cid:12) (cid:20) qH =p. That is,
(cid:12)(cid:12)Pr[S0] (cid:0) Pr[S1]
(cid:12)(cid:12) is negligible.
(cid:3)
i
gi2[0;4]. Secondly, the challenger chooses (cid:27)
[Game 2]: We further modify the way of generating the challenge signature. Here, the challenge signature
(cid:3)
is generated as follows: Firstly, the challenger chooses values r
fT
2 Zp and c
(cid:3)
gi2[1;5]. Finally, the challenger de(cid:12)nes a value H(gpk;fT
computes fR
(cid:3)
(cid:3)
r
pair ((gpk;fT
gi2[0;4];fR
(cid:3)
i
i
i
(cid:3) 2 Zp uniformly random and compute
(cid:3) 2 Zp uniformly random, and
gi2[0;4];fR
(cid:3)
);(cid:1)) is already in the list L, the challenger sets (cid:6)
i
gi2[1;5]; m
= ?.
(cid:3)
gi2[1;5]; m
). If the
(cid:3)
(cid:14) ; (cid:27)
(cid:3)
x; (cid:27)
(cid:3)
y; (cid:27)
(cid:3)
q ; (cid:27)
; q
(cid:3)
i
(cid:3)
(cid:3)
Since the modi(cid:12)cation between Game 1 and Game 2 is only conceptual, Pr[S1] = Pr[S2] holds.
[Game 3]: In Game 3, we modify the way of generating a proof (cid:28) in replying queries for the Open oracle.
If the pair ((gpk; Q; T2; T3; R);(cid:1)) is already in the list L when computing the value H(gpk; Q; T2; T3; R),
the challenger returns ? as the response of the query.
26
Here, we can do the same discussion as Game 1. Thus, we can say that
(cid:12)(cid:12)Pr[S2](cid:0) Pr[S3]
(cid:12)(cid:12) is negligible.
[Game 4]: We further modify the way of generating a proof (cid:28) in replying queries for the Open oracle.
When the challenger replies for a query (m; (cid:6) = (fTigi2[1;4]; c; (cid:27)x; (cid:27)y; (cid:27)(cid:14); (cid:27)q; (cid:27)r)), the challenger computes
R = (Q (cid:1) T2
by choosing (cid:27)u 2 Zp and d 2 Zp uniformly random.
(cid:0)1)(cid:27)u (cid:1) T
(cid:0)d
3
Also, the modi(cid:12)cation between Game 3 and Game 4 is only conceptual, and therefore Pr[S3] = Pr[S4]
holds.
[Game 5]: We modify the way of generating the challenge signature.
computes T0 = G1
in Zp.
; T1 = Ai (cid:1) K
; T1 = Ai (cid:1) K q
instead of T0 = G1
(cid:3)
(cid:3)
(cid:3)
q
q
(cid:3)
bq
(cid:3)
bq
(cid:3)
q
(cid:3)
(cid:12)(cid:12) is negligible.
Since the tuples (G1; G2; G1
; K; K q
) and (G1; G2; G1
q
; K; K
) are indistinguishable by the XDH
assumption, this modi(cid:12)cation does not aﬀect the adversary’s behavior. Therefore, it holds that
Pr[S5]
where bq
In this game, the challenger
(cid:3)
is a random value
(cid:3)
(cid:12)(cid:12)Pr[S4](cid:0)
(cid:12)(cid:12)Pr[S5] (cid:0) Pr[S6]
(cid:12)(cid:12) is
(cid:3)
(cid:3)
4 = Gr
; T
2
(cid:3)
(cid:3)
4 = V r
; T
(cid:3)
(cid:3)
(cid:3)
2 = Gxib +r
(cid:3)
2 = Gxib +r
[Game 6]: This game is de(cid:12)ned as Game 5 except that the challenger computes T
(cid:3)
2 is a random value in Z. In the previous games, they were computed as T
where r
(cid:3)
(cid:3)
(cid:3)
Since the tuples (G; Gr
; V; V r
) and (G; Gr
; V; Gr
.
(cid:3)
2 ) are indistinguishable by the DDH assumption,
this modi(cid:12)cation does not aﬀect the adversary’s behavior. Thus, it holds that
negligible.
[Game 7]: Here, we modify the way of replying to opening queries. If a query is a related query, return
? as a opening proof.
For related queries in Table 2, the probability that an adversary generates each type of them is
negligible. Type (a) is negligible by the DL assumption, and that Type (b) and (c) are negligible by
using information-theoretic arguments. Therefore, we see that
(cid:12)(cid:12)Pr[S6] (cid:0) Pr[S7]
(cid:12)(cid:12) is negligible.
[Game 8]: From this game, the challenger use key v to open signatures instead of key u.
8, the challenger sets Q = T2 (cid:1) (T4
Q = T2 (cid:1) (T3
In Game
(cid:0)1 by comparing the previous games in which the challenger sets
Since the underlying non-interactive proof system has soundness, it is negligible that logU T3 ̸=
(cid:0)1.
1
u )
1
v )
(cid:12)(cid:12) is negligible.
logV T4 holds. Therefore, we see that
(cid:12)(cid:12)Pr[S8] (cid:0) Pr[S9]
[Game 9]: In this game, the challenger computes T
in Z. In the previous games, they were computed as T
(cid:3)
(cid:3)
2 = Gxib +r
; T
(cid:3)
(cid:3)
2 = Gxib +r
(cid:3)
3 = Gr
; T
(cid:3)
3 = U r
(cid:3)
.
(cid:3)
1 where r
(cid:3)
1 is a random value
As in Game 6, this modi(cid:12)cation does not aﬀect the adversary’s behavior by the DDH assumption.
Thus, it holds that
The choice of the challenge bit b and the distribution of the challenge signature (cid:6)
are independent.
Also, the oracles, especially the Open oracle, behave independently of b. Thus, we can say that Pr[S9] =
1=2. Since it holds that Advanon
(cid:5);A ((cid:21)) is negligible.
Therefore, the patched scheme (cid:5) satis(cid:12)es anonymity.
8
ℓ=0
(cid:12)(cid:12) +
(cid:12)(cid:12)Pr[Sℓ](cid:0) Pr[Sℓ+1]
(cid:12)(cid:12)Pr[S9](cid:0) 1=2
(cid:3)
(cid:12)(cid:12), Advanon
(cid:5);A ((cid:21)) (cid:20)∑
(cid:12)(cid:12)Pr[S7] (cid:0) Pr[S8]
(cid:12)(cid:12) is negligible.
Moreover, the patched scheme satis(cid:12)es the other security requirements, that is, traceability and non-
frameability [11]. This is because our modi(cid:12)cation does not aﬀect these security proofs. The underlying
proof system is still extractable. Also, an adversary can simulate the Join=Issue protocol as the issuer
without the issuing key in the traceability game, and simulate the signing oracle without the honest
user’s signing key in the non-frameability game. Therefore, we can prove the traceability and non-
frameability of the patched scheme in the same way as those of the original scheme. Note that in the
sense of traceability and non-frameability, the original scheme is secure as it is. Formally, the following
theorems hold.
Theorem 5.2. The patched scheme satis(cid:12)es traceability in the random oracle model under the q-SDH
assumption in the groups (G1; G2) and the DL assumption in the group G1.
Theorem 5.3. The patched scheme satis(cid:12)es non-frameability in the random oracle model under the DL
assumption in the group G1.
27
Eﬃciency. In the patched scheme, the signature size increases by only one element in G1 from Mecha-
nism 6. More precisely, a signature in the patched scheme consists of two elements from G1, three elements
from G, and six elements from Zp. This achieves the comparable eﬃciency to the existing schemes [17, 18]
satisfying the same security level. Speci(cid:12)cally, a signature in the Delerabl(cid:19)ee-Pointcheval scheme [17] con-
sists of four elements in G1 and (cid:12)ve elements in Zp, and in the Derler-Slamanig scheme [18], a signature
requires four elements in G1, two elements in G2, and three elements in Zp.
6 Conclusion
Firstly, we have shown an attack against the anonymity of Mechanism 6 in the BSZ model. Speci(cid:12)cally,
we have proved that the issuer can identify the signer of any signature although only the opener is allowed
to trace the signer in the BSZ model.
Secondly, we have analyzed the security properties oﬀered by Mechanism 6 and characterized the
conditions under which its anonymity is preserved. Concretely, we have seen that no one can extract
the signer’s information from a signature except for the opener and the issuer. This fact indicates that
Mechanism 6 is still secure under the condition that the issuer does not join the attack. Such a condition
is reasonable if a single authority plays roles of both the opener and the issuer.
Finally, we have derived a simple patch for Mechanism 6 from our analysis of its security. In the
patched scheme, only the signing and veri(cid:12)cation algorithms are changed, and its signature size increases
by only one element in G1 where G1 is a source group in the used asymmetric bilinear group. Also, we
need to introduce the XDH assumption in G1 to prove the anonymity of the patched scheme, but the
other security requirements can be showed under the same assumptions as those of Mechanism 6.
References
[1] ISO/IEC 9796-2:2010 information technology { security techniques { digital signature schemes giving
message recovery { part 2: Integer factorization based mechanisms.
[2] ISO/IEC 20008-2:2013 information technology { security techniques { anonymous digital signatures
{ part 2: Mechanisms using a group public key.
[3] ICAO NTWG, PKI for Machine Readable Travel Documents Oﬀering ICC Read-Only Access, Tech-
nical Report, Version 1.1, 2004.
[4] EMV, Integrated Circuit Card Speci(cid:12)cations for Payment Systems, Book 2, Security and Key Man-
agement, Version 4.2, 2008.
[5] Intel Enhanced Privacy
ID (EPID)
Security Technology,
https:software.intel.com/en-
us/articles/intel-enhanced-privacy-id-epid-security-technology.
[6] Intel Software Guard Extensions (Intel SGX), https://software.intel.com/en-us/sgx.
[7] NISC-PEC, December 2011, http://csrc.nist.gov/groups/ST/PEC2011/presentations2011/brickell.pdf.
[8] Bahmani, R., Barbosa, M., Brasser, F., Portela, B., Sadeghi, A., Scerri, G., and
Warinschi, B. Secure multiparty computation from SGX. In FC (2017), pp. 477{497.
[9] Bardou, R., Focardi, R., Kawamoto, Y., Simionato, L., Steel, G., and Tsay, J. Eﬃcient
padding oracle attacks on cryptographic hardware. In CRYPTO (2012), pp. 608{625.
[10] Bellare, M., and Rogaway, P. The exact security of digital signatures - how to sign with RSA
and rabin. In EUROCRYPT (1996), pp. 399{416.
[11] Bellare, M., Shi, H., and Zhang, C. Foundations of group signatures: The case of dynamic
groups. In CT-RSA (2005), pp. 136{153.
[12] Bleichenbacher, D. Chosen ciphertext attacks against protocols based on the RSA encryption
standard PKCS #1. In CRYPTO (1998), pp. 1{12.
28
[13] Brickell, E., and Li, J. Enhanced privacy ID from bilinear pairing for hardware authentication
and attestation. In SocialCom/PASSAT (2010), pp. 768{775.
[14] Chaum, D., and van Heyst, E. Group signatures. In EUROCRYPT (1991), pp. 257{265.
[15] Coron, J., Naccache, D., and Stern, J. P. On the security of RSA padding. In CRYPTO
(1999), pp. 1{18.
[16] Coron, J., Naccache, D., Tibouchi, M., and Weinmann, R. Practical cryptanalysis of
ISO/IEC 9796-2 and EMV signatures. In CRYPTO (2009), pp. 428{444.
[17] Delerabl(cid:19)ee, C., and Pointcheval, D. Dynamic fully anonymous short group signatures. In
VIETCRYPT (2006), pp. 193{210.
[18] Derler, D., and Slamanig, D. Highly-eﬃcient fully-anonymous dynamic group signatures. In
ASIACCS (2018), pp. 551{565.
[19] Faust, S., Kohlweiss, M., Marson, G. A., and Venturi, D. On the non-malleability of the
Fiat-Shamir transform. In INDOCRYPT (2012), pp. 60{79.
[20] Fisch, B., Vinayagamurthy, D., Boneh, D., and Gorbunov, S. IRON: functional encryption
using intel SGX. In CCS (2017), pp. 765{782.
[21] Fuhry, B., Bahmani, R., Brasser, F., Hahn, F., Kerschbaum, F., and Sadeghi, A. Har-
didx: Practical and secure index with SGX. In DBSec (2017), pp. 386{408.
[22] Furukawa, J., and Imai, H. An eﬃcient group signature scheme from bilinear maps. In ACISP
(2005), pp. 455{467.
[23] Furukawa, J., and Imai, H. An eﬃcient group signature scheme from bilinear maps. IEICE
Transactions 89-A, 5 (2006), 1328{1338.
[24] Hwang, J. Y., Lee, S., Chung, B., Cho, H. S., and Nyang, D. Group signatures with
controllable linkability for dynamic membership. Inf. Sci. 222 (2013), 761{778.
[25] Isshiki, T., Mori, K., Sako, K., Teranishi, I., and Yonezawa, S. Using group signatures for
identity management and its implementation. In Digital Identity Management (2006), pp. 73{78.
[26] Pointcheval, D., and Stern, J. Security arguments for digital signatures and blind signatures.
J. Cryptology 13, 3 (2000), 361{396.
[27] Sahai, A. Non-malleable non-interactive zero knowledge and adaptive chosen-ciphertext security.
In FOCS (1999), pp. 543{553.
[28] Sasy, S., Gorbunov, S., and Fletcher, C. W. Zerotrace : Oblivious memory primitives from
intel SGX. In NDSS (2018).
[29] Schuster, F., Costa, M., Fournet, C., Gkantsidis, C., Peinado, M., Mainar-Ruiz, G.,
and Russinovich, M. VC3: trustworthy data analytics in the cloud using SGX. In Security and
Privacy (2015), pp. 38{54.
[30] Seo, J., Lee, B., Kim, S. M., Shih, M., Shin, I., Han, D., and Kim, T. SGX-shield: Enabling
address space layout randomization for SGX programs. In NDSS (2017).
[31] Swami, Y. SGX remote attestation is not suﬃcient. IACR Cryptology ePrint Archive 2017 (2017),
736.
[32] Unruh, D. Quantum proofs of knowledge. In EUROCRYPT (2012), pp. 135{152.
29