[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [9]{.productnumber}
:::
# []{#index.html#idm139934187883920}配置和管理网络 {.title}
## 在 Red Hat Enterprise Linux 9 中配置和管理网络的指南 {.subtitle}
::: abstract
**摘要**
本文档论述了如何在 Red Hat Enterprise Linux 9 中管理网络。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}让开源更具包容性 {.title}
:::
红帽致力于替换我们的代码、文档和 Web
属性中存在问题的语言。我们从这四个术语开始：master、slave、黑名单和白名单。由于此项工作十分艰巨，这些更改将在即将推出的几个发行版本中逐步实施。如需了解更多详细信息，请参阅
[CTO Chris Wright
信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_configuring-and-managing-networking.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_configuring-and-managing-networking.html#proc_providing-feedback-on-red-hat-documentation_configuring-and-managing-networking}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
:::
::: itemizedlist
-   要通过 Bugzilla 提交反馈，请创建一个新的问题单：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%209){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#consistent-network-interface-device-naming_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#consistent-network-interface-device-naming_configuring-and-managing-networking}第 1 章 一致的网络接口设备命名 {.title}
:::
Red Hat Enterprise Linux
提供用于网络接口的一致性和可预测的设备命名方法。这些特性有助于查找和区分网络接口。
内核为网络接口分配名称的方法是，使用一个固定前缀，再加上随着内核初始化网络设备时增加的数字。例如，`eth0`{.literal}
代表启动时被探测的第一个设备。但是这些名称不一定与设备外壳上的标签对应。具有多个网络适配器的现代服务器平台，可能会遇到这些接口的命名不明确的情况。这会影响系统中嵌入的网络适配器和附加适配器。
在 Red Hat Enterprise Linux 中，`udev`{.literal}
设备管理器支持很多不同的命名方案。默认情况下，`udev`{.literal}
根据固件、拓扑和位置信息分配固定名称。它有以下优点：
::: itemizedlist
-   设备名称完全可预测。
-   在添加或删除硬件时，设备名称也会保持不变。
-   因此，有问题的硬件可以被无缝地替换。
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#network-interface-device-naming-hierarchy_consistent-network-interface-device-naming}网络接口设备命名等级 {.title}
:::
如果启用了一致的设备命名（在 Red Hat Enterprise Linux 中是默认设置），则
`udev`{.literal} 设备管理器会根据以下方案生成设备名称：
::: informaltable
  方案   描述                                                                                                                       示例
  ------ -------------------------------------------------------------------------------------------------------------------------- -----------------------------
  1      设备名称包含固件或者 BIOS 提供的索引号，用于板上的设备。如果此信息不适用，则 `udev`{.literal} 将使用方案 2。               `eno1`{.literal}
  2      设备名称包含固件或 BIOS 提供的 PCI Express（PCIe）热插件插槽索引号。如果此信息不适用，则 `udev`{.literal} 将使用方案 3。   `ens1`{.literal}
  3      设备名称包含硬件连接器的物理位置。如果此信息不适用，则 `udev`{.literal} 将使用方案 5。                                     `enp2s0`{.literal}
  4      设备名称包含 MAC 地址。Red Hat Enterprise Linux 默认不使用这个方案，但管理员可选择性地使用它。                             `enx525400d5e0fb`{.literal}
  5      传统的无法预计的内核命名方案。如果 `udev`{.literal} 无法应用任何其他方案，则设备管理器使用这个方案。                       `eth0`{.literal}
:::
默认情况下，Red Hat Enterprise Linux 根据
`/usr/lib/systemd/network/99-default.link`{.literal} 文件中的
`NamePolicy`{.literal} 设置选择设备名称。`NamePolicy`{.literal}
中值的顺序非常重要。Red Hat Enterprise Linux 使用文件中指定的以及
`udev`{.literal} 生成的第一个设备名称。
如果您手动配置 `udev`{.literal}
规则以更改内核设备名称，则优先使用这些规则。
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#how-the-network-device-naming-works_consistent-network-interface-device-naming}网络设备重命名是如何工作的 {.title}
:::
默认情况下，在 Red Hat Enterprise Linux
中启用了一致的设备命名。`udev`{.literal}
设备管理器会处理不同的规则来重命名设备。以下列表描述了 `udev`{.literal}
处理这些规则的顺序，以及这些规则所负责什么操作：
::: orderedlist
1.  `/usr/lib/udev/rules.d/60-net.rules`{.literal} 文件定义了
    `/lib/udev/rename_device`{.literal} helper 实用程序搜索
    `/etc/sysconfig/network-scripts/ifcfg-*`{.literal} 文件中的
    `HWADDR`{.literal} 参数。如果变量中设置的值与接口的 MAC
    地址匹配，帮助程序会将接口重命名为文件 `DEVICE`{.literal}
    参数中设置的名称。只有安装 `initscripts`{.literal}
    软件包后，该文件才存在。
2.  `/usr/lib/udev/rules.d/71-biosdevname.rules`{.literal} 文件定义了
    `biosdevname`{.literal}
    实用程序根据其命名策略重命名接口，只要它在上一步中没有重命名。
3.  `/usr/lib/udev/rules.d/75-net-description.rules`{.literal}
    文件定义了 `udev`{.literal} 检查网络接口设备，并在
    `udev`{.literal}-internal
    变量中设置在下一步中处理的属性。请注意，其中一些属性可能没有定义。
4.  `/usr/lib/udev/rules.d/80-net-setup-link.rules`{.literal} 文件调用
    `net_setup_link`{.literal} `udev`{.literal}
    内置，然后应用该策略。以下是存储在
    `/usr/lib/systemd/network/99-default.link`{.literal}
    文件中的默认策略：
    ``` literallayout
    [Link]
    NamePolicy=kernel database onboard slot path
    MACAddressPolicy=persistent
    ```
    在这个策略中，如果内核使用持久名称，则 `udev`{.literal}
    不会重命名该接口。如果内核没有使用持久名称，则 `udev`{.literal}
    会将接口重命名为 `udev`{.literal}
    的硬件数据库提供的名称。如果这个数据库不可用，Red Hat Enterprise
    Linux 会回复到上述机制中。
    另外，对于基于 MAC 地址的接口，将此文件中的 `NamePolicy`{.literal}
    参数设置为 `mac`{.literal}。
5.  `/usr/lib/udev/rules.d/80-net-setup-link.rules`{.literal} 文件定义了
    `udev`{.literal} 根据 `udev`{.literal}-internal 参数的重命名接口：
    ::: orderedlist
    1.  `ID_NET_NAME_ONBOARD`{.literal}
    2.  `ID_NET_NAME_SLOT`{.literal}
    3.  `ID_NET_NAME_PATH`{.literal}
    :::
    如果没有设置参数，则 `udev`{.literal}
    将使用下一个参数。如果没有设置任何参数，接口就不会被重命名。
:::
步骤 3 和 4
实现了[网络接口设备命名层次结构](#consistent-network-interface-device-naming_configuring-and-managing-networking.html#network-interface-device-naming-hierarchy_consistent-network-interface-device-naming "网络接口设备命名等级"){.link}中介绍的命名方案
1 到 4。
::: itemizedlist
**其他资源**
-   [自定义以太网接口的前缀](#consistent-network-interface-device-naming_configuring-and-managing-networking.html#proc_customizing-the-prefix-of-ethernet-interfacesconsistent-network-interface-device-naming "自定义以太网接口的前缀"){.link}
-   有关 `NamePolicy`{.literal} 参数的详情，请查看
    `systemd.link(5)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#predictable-network-interface-device-names-on-the-x86_64-platform-explained_consistent-network-interface-device-naming}x86_64 平台上的可预测的网络接口名称解释 {.title}
:::
当启用一致的网络设备名称功能时，`udev`{.literal}
设备管理器会根据不同的标准创建设备名称。这部分论述了在 x86_64 平台上安装
Red Hat Enterprise Linux 时的命名方案。
接口名称以双字符前缀开始，该前缀基于接口类型：
::: itemizedlist
-   `en`{.literal} for Ethernet
-   用于无线 LAN(WLAN)的 `wl`{.literal}
-   用于无线广网(WWAN)的 `ww`{.literal}。
:::
另外，以下之一会附加到上述其中一个前缀中，基于 `udev`{.literal}
设备管理器应用的模式：
::: itemizedlist
-   `o`{.literal}
-   `s[f][d]`{.literal}
    请注意，所有多功能 PCI 设备在设备名称中包含
    `[f &lt;function> ]`{.literal} 号，包括功能 `0`{.literal} 设备。
-   `x`{.literal}
-   `[P]ps[f][d]`{.literal}
    `[P &lt;domain_number> ]`{.literal} 部分定义 PCI
    地理位置。只有在域号不是 `0`{.literal} 时，才会设置此部分。
-   `[p &lt;domain_number>]p s &lt;slot>[f &lt;function>][u &lt;usb_port>][…​][c ][i &lt;interface>]`{.literal}
    对于 USB 设备，hub 端口号的完整链由 hub
    的端口号组成。如果名称大于最大值（15
    个字符），则不会导出该名称。如果链中有多个 USB 设备，则
    `udev`{.literal} 可以阻止 USB 配置描述符(`c1)`{.literal}和 USB
    接口描述符(`i`{.literal}0)的默认值。
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#predictable-network-interface-device-names-on-the-system-z-platform-explained_consistent-network-interface-device-naming}System z 平台中可预测的网络接口设备名称解释 {.title}
:::
当启用一致的网络设备名称功能时，System z 平台的 `udev`{.literal}
设备管理器会根据总线 ID 创建设备名称。总线 ID 识别 s390
频道子系统中的一个设备。
对于频道命令词(CCW)设备，总线 ID 是设备编号，其前为 `0.n`{.literal}
前缀，其中 `n`{.literal} 是子频道集 ID。
以太网接口被命名，如
`enccw0.0.1234`{.literal}。串行线互联网协议(SLIP)通道到通道(CTC)网络设备被命名，例如
`slccw0.0.1234`{.literal}。
使用 `znetconf -c`{.literal} 或 `lscss -a`{.literal}
命令显示可用的网络设备及其总线 ID。
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#disabling-consistent-interface-device-naming-during-the-installation_consistent-network-interface-device-naming}在安装过程中禁用一致的接口设备命名 {.title}
:::
这部分论述了如何在安装过程中禁用一致的接口设备命名。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
红帽建议不要禁用一致的设备命名，且不支持具有多个网络接口的主机上此功能。禁用一致的设备命名可能会导致不同类型的问题。例如：如果您在系统中添加另一个网卡，则分配内核设备名称（如
`eth0）`{.literal}
不再被修复。因此，重启后内核可以以不同的方式为该设备命名。
:::
::: orderedlist
**步骤**
1.  引导 Red Hat Enterprise Linux 9 安装介质。
2.  在引导管理器中，选择
    `Install Red Hat Enterprise Linux 9`{.literal}，然后按
    [Tab]{.guibutton} 键编辑该条目。
3.  在内核命令行中附加 `net.ifnames=0`{.literal} 参数：
    ``` literallayout
    vmlinuz... net.ifnames=0
    ```
4.  按 [Enter]{.guibutton} 键开始安装。
:::
::: itemizedlist
**其它资源**
-   [在 RHEL 7 和 RHEL 8 中设置 net.ifnames=0
    是否安全？](https://access.redhat.com/solutions/2435891){.link}
-   [当在 RHEL 7 中使用内核 NIC 时，如何对 RHEL 8
    进行原位升级](https://access.redhat.com/solutions/4067471){.link}
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#disabling-consistent-interface-device-naming-on-an-installed-system_consistent-network-interface-device-naming}在安装的系统中禁用一致的接口设备命名 {.title}
:::
这部分论述了如何在已安装的 RHEL 系统中禁用一致的接口设备命名。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}