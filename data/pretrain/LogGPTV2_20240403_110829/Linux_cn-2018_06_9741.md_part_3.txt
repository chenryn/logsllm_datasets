      ...
      ...
      httpbin
      citizenstig/httpbin
      256Mi
      ...
```
### 总结
作为总结，我们查看上面已描述配置的 Jenkins `config.xml` 对应创建的 OpenShift 资源以及 Kubernetes 插件的配置。
```
apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: git-config
  data:
    config: |
      [credential]
          helper = store --file=/home/jenkins/.config/git-secret/credentials
      [http "http://git.mycompany.com"]
          sslCAInfo = /home/jenkins/.config/git/myTrustedCA.pem
    myTrustedCA.pem: |-
      -----BEGIN CERTIFICATE-----
      MIIDVzCCAj+gAwIBAgIJAN0sC...
      -----END CERTIFICATE-----
- apiVersion: v1
  kind: Secret
  metadata:
    name: git-secret
  stringData:
    ssh-privatekey: |-
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----
    credentials: |-
      https://username:PI:EMAIL
      https://user:PI:EMAIL
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: git-ssh
  data:
    config: |-
      Host git.mycompany.com
        StrictHostKeyChecking yes
        IdentityFile /home/jenkins/.config/git-secret/ssh-privatekey
    known_hosts: '[git.mycompany.com]:22 ecdsa-sha2-nistp256 AAAdn7...'
- apiVersion: v1
  kind: Secret
  metadata:
    name: maven-secret
  stringData:
    username: admin
    password: admin123
```
基于文件创建另一个 ConfigMap：
```
oc create configmap maven-settings --from-file=settings.xml=settings.xml 
--from-file=myTruststore.jks=myTruststore.jks
```
Kubernetes 插件配置如下：
```
...
      openshift
          maven
          false
          false
          2147483647
          100
          0
          maven
          jenkins37
          NORMAL
          false
            false
              /home/jenkins/.config/git-secret
              git-secret
              /home/jenkins/.ssh
              git-ssh
              /home/jenkins/.config/git
              git-config
              /home/jenkins/.m2
              maven-settings
              jnlp
              registry.access.redhat.com/openshift3/jenkins-slave-maven-rhel7:v3.7
              false
              false
              /tmp
              ${computer.jnlpmac} ${computer.name}
              false
              500m
              1024Mi
              500m
              1024Mi
                  JAVA_HOME
                  /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.i386
                  JAVA_OPTS
                  -Xms64m -Xmx64m
                  MAVEN_OPTS
                  -Xms128m -Xmx128m -DargLine=${env.SUREFIRE_OPTS} -Djavax.net.ssl.trustStore=/home/jenkins/.m2/myTruststore.jks -Djavax.net.ssl.trustStorePassword=changeit
                  SUREFIRE_OPTS
                  -Xms256m -Xmx256m
                  MAVEN_MIRROR_URL
                  https://nexus.mycompany.com/repository/maven-public
                  MAVEN_SERVER_USERNAME
                  maven-secret
                  username
                  MAVEN_SERVER_PASSWORD
                  maven-secret
                  password
                0
                0
                0
                0
                0
              httpbin
              citizenstig/httpbin
              false
              false
              /run.sh
              false
              256Mi
              256Mi
                0
                0
                0
                0
                0
      https://172.30.0.1:443
      -----BEGIN CERTIFICATE-----
MIIC6jCC...
-----END CERTIFICATE-----
      false
      first
      http://jenkins.cicd.svc:80
      jenkins-jnlp.cicd.svc:50000
      1a12dfa4-7fc5-47a7-aa17-cc56572a41c7
      10
      5
      0
      0
      32
```
尝试愉快的构建吧！
原文发表于 [ITNext](https://itnext.io/running-jenkins-builds-in-containers-458e90ff2a7b)，已获得翻版授权。
---
via: 
作者：[Balazs Szeti](https://opensource.com/users/bszeti) 选题：[lujun9972](https://github.com/lujun9972) 译者：[pinewall](https://github.com/pinewall) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出