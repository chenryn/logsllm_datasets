## 背景
​ 编写的 ShellCode
采用了硬编址的方式来调用相应的API函数，这会存在操作系统的版本不一样以及ASLR，调用函数在内存中的地址不同而出现失败的现象。
​ 弹窗程序中最重要的函数MessageBox，它是位于 User32.dll 这个动态链接库里，默认情况下是无法直接调用的，为了能够调用它，就需要调用
LoadLibraryA 函数来加载User32.dll模块，而 LoadLibraryA 又位于 kernel32.dll 链接库中。
有这么一个信息，就是所有的win_32程序都会加载ntdll.dll和kerner32.dll这两个最基础的动态链接库。所以只要找到
LoadLibraryA 函数，就能加载动态链接库，并调用其它的函数。
## 原理
跟踪`InLoadOrderModuleList`获取`Kernel32.dll`地址
* * *
# 流程分析
* * *
## 测试程序
    #include
    #include
    #include
    int ExceptionHandler(void);
    int main(int argc,char *argv[]){
    char temp[512];
    printf("Application launched");
    __try {
    strcpy(temp,argv[1]);
    } __except ( ExceptionHandler() ){
    }
    return 0;
    }
    int ExceptionHandler(void){
    printf("Exception");
    return 0;
    }
使用`VC++ 6.0`编译，`VS2019`会自带异常处理，干扰分析
使用Windbg加载程序
## 1\. 首先通过段选择字`FS`在内存中找到当前的线程环境快`TEB`。
当我们开启了异常处理例程TEB结构位于`FS:[0]`
SEH结构图中`FS:[0]`指向`TEB`结构
    0:000> dd FS:[0]
    003b:00000000  0014ff30 00150000 0014d000 00000000
    003b:00000010  00001e00 00000000 003f0000 00000000
    003b:00000020  00000f00 000016b8 00000000 003f002c
    003b:00000030  003ef000 00000000 00000000 00000000
    003b:00000040  00000000 00000000 00000000 00000000
    003b:00000050  00000000 00000000 00000000 00000000
    003b:00000060  00000000 00000000 00000000 00000000
    003b:00000070  00000000 00000000 00000000 00000000
    0:000> !teb
    TEB at 003f0000
        ExceptionList:        0014ff30
        StackBase:            00150000
        StackLimit:           0014d000
        SubSystemTib:         00000000
        FiberData:            00001e00
        ArbitraryUserPointer: 00000000
        Self:                 003f0000
        EnvironmentPointer:   00000000
        ClientId:             00000f00 . 000016b8
        RpcHandle:            00000000
        Tls Storage:          003f002c
        PEB Address:          003ef000               dt _teb 003f0000
    ntdll!_TEB
       +0x000 NtTib            : _NT_TIB
       +0x01c EnvironmentPointer : (null) 
       +0x020 ClientId         : _CLIENT_ID
       +0x028 ActiveRpcHandle  : (null) 
       +0x02c ThreadLocalStoragePointer : 0x003f002c Void
       +0x030 ProcessEnvironmentBlock : 0x003ef000 _PEB          !teb
    TEB at 003f0000
        ExceptionList:        0014ff30
        StackBase:            00150000
        StackLimit:           0014d000
        SubSystemTib:         00000000
        FiberData:            00001e00
        ArbitraryUserPointer: 00000000
        Self:                 003f0000
        EnvironmentPointer:   00000000
        ClientId:             00000f00 . 000016b8
        RpcHandle:            00000000
        Tls Storage:          003f002c
        PEB Address:          003ef000   dt _teb 003f0000
    ntdll!_TEB
       +0x000 NtTib            : _NT_TIB
       +0x01c EnvironmentPointer : (null) 
       +0x020 ClientId         : _CLIENT_ID
       +0x028 ActiveRpcHandle  : (null) 
       +0x02c ThreadLocalStoragePointer : 0x003f002c Void
       +0x030 ProcessEnvironmentBlock : 0x003ef000 _PEB     <==位于teb结构体偏移0x30的位置
       +0x034 LastErrorValue   : 0
       +0x038 CountOfOwnedCriticalSections : 0
       +0x03c CsrClientThread  : (null) 
       +0x040 Win32ThreadInfo  : (null) 