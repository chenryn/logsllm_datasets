title:Client-Side Defense Against Web-Based Identity Theft
author:Neil Chou and
Robert Ledesma and
Yuka Teraguchi and
John C. Mitchell
Client-side defense against web-based identity theft
Neil Chou Robert Ledesma Yuka Teraguchi
John C. Mitchell
Computer Science Department, Stanford University, Stanford CA 94305
{neilchou, led242, yukat, jcm}@stanford.edu
Abstract
Web spooﬁng is a signiﬁcant problem involving fraud-
ulent email and web sites that trick unsuspecting users
into revealing private information. We discuss some
aspects of common attacks and propose a framework
for client-side defense: a browser plug-in that exam-
ines web pages and warns the user when requests for
data may be part of a spoof attack. While the plug-
in, SpoofGuard, has been tested using actual sites ob-
tained through government agencies concerned about
the problem, we expect that web spooﬁng and other
forms of identity theft will be continuing problems in
coming years.
1 Introduction
Web spooﬁng, also known as “phishing” or “carding”
[CNN03, FBI03], is a signiﬁcant form of Internet crime
that is launched against hundreds or thousands of indi-
viduals each day. The US Secret Service and the San
Francisco Electronic Crimes Task Force report that ap-
proximately 30 attack sites are detected each day. Each
attack site may be used to defraud hundreds or thousands
of victims, and it is likely that many attack sites are
never detected. A typical web spoof attack begins with
bulk email to a group of unsuspecting victims. Each is
told that there is a problem with their account at a site
such as E*Trade. Victims of the spooﬁng attack then fol-
low a link in the email message to connect to a spoofed
E*Trade site. Once a victim enters his or her user name
and password on the spoof site, the criminal has the
means to impersonate the victim, potentially withdraw-
ing money from the victim’s account or causing harm in
other ways.
We describe some common characteristics of recent
web spooﬁng attacks and propose a framework for
client-side countermeasures. Like other inexact detec-
tion mechanisms, including virus detection and email
spam ﬁltering, the approach we explore involves look-
ing for characteristics of previously detected attacks. We
experiment with this approach using a browser plug-in
called SpoofGuard. The plug-in monitors a user’s In-
ternet activity, computes a spoof index, and warns the
user if the index exceeds a level selected by the user.
While Internet-savvy users who watch the address bar,
status bar, and other information carefully may not need
SpoofGuard, the current level of accuracy and effec-
tiveness may be sufﬁcient to help many unsophisticated
web users. If the methods we propose become widely
deployed, through our plug-in or through other client-
side defensive software, then phishers will certainly take
steps to circumvent them. However, we expect further
effort and study to produce correspondingly better de-
fenses. Moreover, if synergistic server-side methods are
deployed by concerned companies, it seems possible to
thwart increasingly sophisticated attacks.
SpoofGuard uses domain name, url,
a page with a suspicious url
link, and
to evaluate the likelihood that a
For ex-
such as
image checks
given page is part of a spoof attack.
ample,
etrade-maintenance.suspicious.org
or
PI:EMAIL/
maintainance.asp and an E*Trade logo will have
a higher spoof index than a page with neither of these
characteristics. SpoofGuard also uses history, such as
whether the user has visited this domain before and
whether the referring page was from an email site
such as Hotmail or Yahoo!Mail. Most importantly,
SpoofGuard intercepts and evaluates user posts in
light of relevant history and the spoof index of a form
page. SpoofGuard examines post data user name and
password ﬁelds and compares posted data to previ-
ously entered passwords from different domains. This
mechanism warns a user against sending her E*Trade
password to a site with an E*Trade logo but outside
the etrade.com domain, for example.
Password
comparisons are done using a cryptographically secure
hash, so that plaintext passwords are never stored by
SpoofGuard.
Stopping web spooﬁng bears some similarity to intru-
sion detection, spam ﬁltering, and thwarting traditional
social engineering attacks. Intrusion detection systems
[Pax99, Sno03] typically monitor network and host ac-
1
tivity, compute statistical or other indices, and attempt
to detect intrusions by comparing the index of current
activity against previous statistics. While web spooﬁng
may be regarded as a special case of intrusion detection,
the browser seems like that appropriate place to combat
web spooﬁng. A browser plug-in is relatively easy to in-
stall and has access to honest and spoof pages sent over
https, giving SpoofGuard a better chance of catching an
attack than a network proxy or other external http trafﬁc
monitors. While a plug-in alone does not have full infor-
mation from email programs such as Outlook or Eudora
that may contain the messages that launch an attack, the
browser does provide an indication of the referring page
or application, and it is possible to scan and parse pages
from email sites such as Hotmail or Yahoo!Mail. There-
fore, for non-expert users who read email through their
browser, SpoofGuard has the potential to examine every
step of a standard web spoof attack.
Like other intrusion detection efforts, it is appropriate
to evaluate SpoofGuard by measuring its effective at pre-
venting attacks, the false alarm rate (number of unnec-
essary warnings), and its performance impact. Spoof-
Guard will only be useful if it detects attacks without
raising too many false alarms, since users will almost
certainly reject any method that interferes with normal
browsing activity. We have evaluated the false-alarm
rate by using SpoofGuard ourselves over a period of
time, and we have evaluated its effectiveness for pre-
venting attacks using actual spoof sites brought to our
attention by members of the San Francisco Electronic
Crimes Task Force. While this is not an extensive
enough test to draw broader conclusions, SpoofGuard
does catch the sample attacks found in the wild and does
not add any noticeable delay to ordinary web browsing.
Since web spooﬁng attacks begin with bulk email, a
good general spam solution [Bri03, Din03] could reduce
the incidence of web spooﬁng attacks. However, current
spam solutions are only partly effective at blocking un-
wanted email, and we are not aware of any spam efforts
aimed speciﬁcally at identify theft. While the browser-
based techniques we explore in this paper are comple-
mentary and independent of spam ﬁltering, there may be
additional ways of combining email scanning with web
page analysis that will lead to better spoof prevention in
the future.
Previous efforts by the Princeton Secure Internet Pro-
gramming group and others [FBDW97, EY01] have ad-
dressed another form of “web spooﬁng” in which an
attacker causes all html page requests from a victim
to pass through the attacker’s site. This form of web
spooﬁng allows the attacker to monitor all of the vic-
tim’s activities, including posted passwords or account
numbers. However, previous methods for countering
this form of attack have focused on maintaining the in-
tegrity of browser indicators such as the url indicator in
the status bar, not analyzing user behavior, web pages,
and html post data to stop leakage of sensitive user in-
formation. While we considered using an alternate term
such as “phishing” in this paper, we use “web spooﬁng”
since this currently appears to be the term most com-
monly used by law enforcement and concerned compa-
nies.
The goals of this paper are to raise awareness of the
web spooﬁng problem and propose a framework for
client-side protection. While sophisticated and deter-
mined attackers will be able to circumvent our current
tests (through simple techniques we explain later in the
paper), there is plenty of room for improving speciﬁc
tests and tuning the coefﬁcients of our spoof index func-
tion. Furthermore, the web spooﬁng problem is impor-
tant and we believe our SpoofGuard experience will be
useful for developing more sophisticated defenses. We
discuss the web spooﬁng problem in more detail in Sec-
tion 2, and our solutions in Section 3. The SpoofGuard
implementation and user interface are described in Sec-
tion 4. Some SpoofGuard evaluation information ap-
pears in Section 5, followed by suggestions for server-
side methods in Section 6, some more speculative client-
side methods in Section 7, and concluding remarks in
Section 8.
ogy.
malicious copy of some legitimate web page.
Throughout the paper we use the following terminol-
• Spoof site or Spoof page: the site or page that is a
• Attacker: the person or organization who sets up
• Honest site or honest page: the legitimate site or
• Spoof index: a measure of the likelihood that a spe-
ciﬁc page is part of a spoof attack, described in Sec-
tion 3.
the spoof site.
page that is being spoofed.
A prototype version of SpoofGuard will be made pub-
licly available shortly.
2 The problem
According to Agents of the U.S. Secret Service San
Francisco Electronic Crimes Task Force [Von03], the
U.S. Government’s Internet Fraud Complaint Center re-
ceived over 75,000 complaints in 2002. Of this number,
48,000 cases resulted in further action requests. This is
a three-fold increase over 2001. The total dollar losses
are estimated at more than $54 million compared to $17
million for 2001. A majority of these fraud complaints
are intrusions, auction fraud, credit card/debit fraud, and
computer intrusion. Agents of the U.S. Secret Service
San Francisco Electronic Crimes Task Force report that
web spooﬁng was ﬁrst noticed in late 2001 and grew in
2
popularity in 2002, correlating with the large increase in
Internet Fraud. Further, a majority of the $37 million
increase in losses from 2001 to 2002 can be attributed
to web spooﬁng. Agents working fraud cases in the Bay
Area also report that a majority of their Internet cases
involve web spooﬁng.
One factor that adds to the severity of web spooﬁng
attacks is that many users use the same username and
password at several sites. This allows a phisher who
reels in a victim to use this information on more than one
site. For this reason, companies that provide password-
protected services are dependent on each other for their
security. This is not only true with regard to web spoof-
ing, but for other kinds of attacks as well. If passwords
from one site can be stolen by attacking the site itself,
these may also be used at other sites that protect their
password database more effectively.
2.1 Sample attack
A recent attack described in a New York Times ar-
ticle [HF03] actually mentioned fraudulent email, indi-
cating some level of public awareness of spoof attacks.
On June 18, 2003, thousands of fraudulent e-mails with
the subject “Fraud Alert” were sent out, hoping to reach
Best Buy customers. The e-mails attempted to con-
vince customers that Best Buy’s fraud department re-
quired additional customer information, “in our effort to
deter fraudulent transactions.” To further lure unsuspect-
ing victims, the e-mail provided a link that purported
to reach a “special Fraud Department” at the Best Buy
web site. Instead, the link actually pointed to a fraudu-
lent page unrelated to Best Buy. The Best Buy attacker’s
page resembled an ofﬁcial Best Buy page, using the Best
Buy logo, incorporating elements from an ofﬁcial Best
Buy page, and providing links to other Best Buy re-
sources. The page requested a customer’s social security
number and credit card information.
@bestbuy.com address,
A web page from the Michigan Attorney General
[Cox03] cites “a few giveaways to this particular scam:”
• The [email] message did not
issue from an
• The link embedded in the message does not
to a “special Fraud Depart-
take the user
ment page” on Best Buy’s
to a
page hosted under a completely different do-
main name (such as digitalgamma.com or
your-instant-credit-reporter.org),
• The “National Credit Bureau” mentioned in the
site, but
scam does not exist.
The Michigan Attorney General also points out that
the Best Buy spoof is similar to spoofs imitating Pay-
Pal and eBay. A more recent Dow Jones Newswires
story [Ber03] states that EarthLink, Citibank, Mor-
3
and its Pay-
gan Stanley’s Discover unit, eBay Inc.
Pal unit, Wachovia Corp.’s First Union unit and the
Massachusetts State Lottery reported phishing scams in
recent months. Some general information about web
spooﬁng, including additional news articles and records
of actual attacks, may be found at http://www.
antiphishing.org/, a web site provided by Tum-
bleweed Communications.
2.2 Properties of recent attacks
We describe common properties of ten spoof web sites
recently found in the wild. Figure 4 gives an example of
an Ebay spoof (partially obscured by a SpoofGuard pop-
up warning the user).
• Logos. The spoof site uses logos found on the hon-
• Suspicious urls.
est site to imitate its appearance.
Others use @ marks
Spoof sites are located on
servers that have no relationship with the hon-
est site.
The spoof site’s url may contain
the honest site’s url as a substring (http:
//www.ebaymode.com), or may be simi-
lar to the honest url (http://www.paypaI.
com).
IP addresses are sometimes used to dis-
guise the host name (http://25255255255/
top.htm).
to ob-
scure their host names (http://ebay.com:
top@255255255255/top.html), or contain
suspicious usernames in their urls (http://
middleman/http://www.ebay.com.)
• User input. All spoof sites contain messages to fool
the user into entering sensitive information, such as
password, social security number, etc. Some suc-
cessful spoofs have even been so bold as to ask for
name, address, mother’s maiden name, driver’s li-
cense, and so on.
• Short lived. Most spoof sites are available for only
a few hours or days – just enough time for the at-
tacker to spoof a high enough number of users. The
implication is that defensive methods that alert the
user to a spoof site are more effective than reactive
methods that attempt to shutdown the site.
• Copies. Attackers copy html from the honest site
and make minimal changes. Two consequences
are: (i) some spoof pages actually contain links to
images (e.g. logos and buttons) on the honest site,
rather than storing copies, (ii) the names of ﬁelds
and html code remain as on the honest site. We
note that when a spoof site refers to the honest site
for embedded images it gives the honest site an op-
portunity to detect the spoof: the honest site detects
an http request for an embedded image where the
referral header is not the honest site. Such requests
should not occur unless the honest site is being pla-
giarized.
• Sloppiness or lack of
familiarity with English.
Many spoof pages have silly misspellings, gram-
matical errors, and inconsistencies. In the Best Buy
scam, the fake web page listed a telephone number
with a Seattle area code for a Staten Island, NY,
mailing address.
• HTTPS is uncommon. Most spoof web sites do not
use https even if the honest site does. This simpli-