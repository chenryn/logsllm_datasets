[8] Gilad Asharov, Yehuda Lindell, Thomas Schneider, and Michael Zohner. 2013.
More ecient oblivious transfer and extensions for faster secure computation. In
Proceedings of the 2013 ACM SIGSAC conference on Computer & communications
security. ACM, 535–548.
[9] Shai Avidan and Moshe Butman. 2006. Blind Vision. In Proceedings of the 9 th
European Conference on Computer Vision.
[10] Elaine Barker, William Barker, William Burr, William Polk, and Miles Smid. 2007.
Recommendation for Key Management - Part 1: General (Revised). In NIST Special
Publication 800-57. NIST.
[11] Mauro Barni, Pierluigi Failla, Riccardo Lazzeretti, Ahmad-Reza Sadeghi, and
Thomas Schneider. 2011. Privacy-preserving ECG classication with branching
programs and neural networks. IEEE Transactions on Information Forensics and
Security 6, 2 (2011), 452–468.
[12] Donald Beaver. 1991. Ecient multiparty protocols using circuit randomization.
In Annual International Cryptology Conference. Springer, 420–432.
[13] Donald Beaver. 1995. Precomputing oblivious transfer. In Annual International
Cryptology Conference. Springer, 97–109.
[14] Mihir Bellare, Viet Tung Hoang, Sriram Keelveedhi, and Phillip Rogaway. 2013.
Ecient garbling from a xed-key blockcipher. In IEEE SP. IEEE, 478–492.
[15] Michael Ben-Or, Sha Goldwasser, and Avi Wigderson. 1988. Completeness
Theorems for Non-cryptographic Fault-tolerant Distributed Computation. In
Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing
(STOC ’88). ACM, New York, NY, USA, 1–10. https://doi.org/10.1145/62212.62213
[16] Christopher M Bishop. 1995. Neural networks for pattern recognition. Oxford
[17] Christopher M Bishop. 2006. Pattern recognition. Machine Learning 128 (2006),
university press.
1–58.
[18] Keith Bonawitz, Vladimir Ivanov, Ben Kreuter, Antonio Marcedone, H Brendan
McMahan, Sarvar Patel, Daniel Ramage, Aaron Segal, and Karn Seth. 2016. Practi-
cal Secure Aggregation for Federated Learning on User-Held Data. arXiv preprint
arXiv:1611.04482 (2016).
[19] Joppe W Bos, Kristin Lauter, and Michael Naehrig. 2014. Private predictive
analysis on encrypted medical data. Journal of biomedical informatics 50 (2014),
234–243.
[20] Raphael Bost, Raluca Ada Popa, Stephen Tu, and Sha Goldwasser. 2015. Machine
Learning Classication over Encrypted Data.. In NDSS.
[21] Ran Canetti. 2000. Security and composition of multiparty cryptographic proto-
cols. Journal of CRYPTOLOGY 13, 1 (2000), 143–202.
[22] Octavian Catrina and Sebastiaan De Hoogh. 2010. Improved Primitives for Secure
Multiparty Integer Computation. In SCN’10. Springer.
[23] Octavian Catrina and Amitabh Saxena. 2010. Secure Computation with Fixed-
point Numbers. In FC’10. Springer.
[24] Nishanth Chandran, Divya Gupta, Aseem Rastogi, Rahul Sharma, and Shardul
Tripathi. 2017. EzPC: Programmable, Ecient, and Scalable Secure Two-Party
Computation. Technical Report. IACR Cryptology ePrint Archive 2017/1109.
[25] Condential Source. [n. d.]. Credit Approval Data Set . http://archive.ics.uci.edu/
ml/datasets/credit+approval.
In Concepts for Neural Networks. Springer, 13–70.
[27] Daniel Demmler, Ghada Dessouky, Farinaz Koushanfar, Ahmad-Reza Sadeghi,
Thomas Schneider, and Shaza Zeitouni. 2015. Automated Synthesis of Optimized
Circuits for Secure Computation. In CCS’15. ACM.
[28] Daniel Demmler, Thomas Schneider, and Michael Zohner. 2015. ABY – A Frame-
work for Ecient Mixed-Protocol Secure Two-Party Computation. In NDSS.
[29] Nathan Dowlin, Ran Gilad-Bachrach, Kim Laine, Kristin Lauter, Michael Naehrig,
and John Wernsing. 2016. Cryptonets: Applying neural networks to encrypted
data with high throughput and accuracy. In International Conference on Machine
Learning ICML, Vol. 48. 201–210.
[30] Richard Durbin, Sean R Eddy, Anders Krogh, and Graeme Mitchison. 1998. Bi-
ological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids.
Cambridge University Press.
[31] Khaled El Emam. 2011. Methods for the de-identication of electronic health
records for genomic research. Genome medicine 3, 4 (2011), 25.
[32] EncryptoGropu. 2015. ABY – A Framework for Ecient Mixed-protocol Secure
Two-party Computation. https://github.com/encryptogroup/ABY.
366
SHIELD: Eicient and Secure Machine Learning Classification
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
[61] Huseyin Polat, Wenliang Du, Sahin Renckes, and Yusuf Oysal. 2010. Private
predictions on hidden Markov models. Articial Intelligence Review 34, 1 (2010),
53–72.
[62] José Portêlo, Bhiksha Raj, and Isabel Trancoso. 2015. Logsum Using Garbled
Circuits. PLoS ONE 10, 3 (2015), 1–16.
[63] Bruce Porter and Ross Quinlan. 1992. Audiology (Standardized) Data Set. http:
//archive.ics.uci.edu/ml/datasets/audiology+(standardized).
[64] Lawrence R Rabiner. 1989. A Tutorial on Hidden Markov Models and Selected
Applications in Speech Recognition. Proc. IEEE (1989).
[65] Jorge L. Reyes-Ortiz, Davide Anguita, Alessandro Ghio, Luca Oneto, and
Xavier Parra. 2012. Human Activity Recognition Using Smartphones Data
Set. http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+
Smartphones.
[66] M. Sadegh Riazi, Christian Weinert, Oleksandr Tkachenko, Ebrahim M. Songhori,
Thomas Schneider, and Farinaz Koushanfar. 2018. Chameleon: A Hybrid Secure
Computation Framework for Machine Learning Applications. In 13. ACM Asia
Conference on Information, Computer and Communications Security (ASIACCS’18).
ACM. To appear. Preliminary version: http://ia.cr/2017/1164.
[67] Irina Rish. 2001. An empirical study of the naive Bayes classier. In IJCAI 2001
workshop on empirical methods in articial intelligence, Vol. 3. IBM New York,
41–46.
[68] Bita Darvish Rouhani, M. Sadegh Riazi, and Farinaz Koushanfar. 2018. Deepsecure:
Scalable Provably-secure Deep Learning. In Proceedings of the 55th Annual Design
Automation Conference (DAC ’18). ACM, New York, NY, USA, Article 2, 6 pages.
https://doi.org/10.1145/3195970.3196023
[69] Stuart J. Russell and Peter Norvig. 1995. Articial Intelligence: A Modern Approach.
Prentice-Hall, Inc., Upper Saddle River, NJ, USA.
[70] Ahmad-Reza Sadeghi, Thomas Schneider, and Immo Wehrenberg. 2009. Ecient
Privacy-Preserving Face Recognition. In ICISC.
[71] John Shawe-Taylor and Nello Cristianini. 2004. Kernel methods for pattern analysis.
Cambridge university press.
[72] Paris Smaragdis and Madhusudana Shashanka. 2007. A framework for secure
speech recognition. Audio, Speech, and Language Processing, IEEE Transactions
on 15, 4 (2007), 1404–1413.
[73] Ebrahim M Songhori, Siam U Hussain, Ahmad-Reza Sadeghi, Thomas Schneider,
and Farinaz Koushanfar. 2015. TinyGarble: Highly Compressed and Scalable
Sequential Garbled Circuits. In IEEE SP. IEEE.
[74] V. Rajkovic et al. 1997. Nursery Data Set. https://archive.ics.uci.edu/ml/datasets/
[75] Jaideep Vaidya and Chris Clifton. 2004. Privacy preserving naive bayes classier
for vertically partitioned data. In Proceedings of the 2004 SIAM International
Conference on Data Mining. SIAM, 522–526.
[76] Jaideep Vaidya, Murat Kantarcıoğlu, and Chris Clifton. 2008. Privacy-preserving
naive bayes classication. The VLDB Journal—The International Journal on Very
Large Data Bases 17, 4 (2008), 879–898.
[77] WIlliam H. Wolberg. 1992. Breast Cancer Wisconsin (Original) Data Set. https:
//archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Original).
[78] William H. Wolberg, W. Nick Street, and Olvi L. Mangasarian. 1995. Breast
Cancer Wisconsin (Diagnostic) Data Set. https://archive.ics.uci.edu/ml/datasets/
Breast+Cancer+Wisconsin+(Diagnostic).
[79] Rebecca Wright and Zhiqiang Yang. 2004. Privacy-preserving Bayesian network
structure computation on distributed heterogeneous data. In Proceedings of the
tenth ACM SIGKDD international conference on Knowledge discovery and data
mining. ACM, 713–718.
[80] Andrew Chi-Chih Yao. 1986. How to generate and exchange secrets. In Founda-
tions of Computer Science, 1986., 27th Annual Symposium on. IEEE, 162–167.
[81] Hwanjo Yu, Xiaoqian Jiang, and Jaideep Vaidya. 2006. Privacy-preserving SVM
using nonlinear kernels on horizontally partitioned data. In Proceedings of the
2006 ACM symposium on Applied computing. ACM, 603–610.
[82] Samee Zahur, Mike Rosulek, and David Evans. 2015. Two Halves Make a Whole.
In EUROCRYPT. Springer.
[83] Harry Zhang. 2004. The Optimality of Naive Bayes.. In FLAIRS Conference,
Valerie Barr and Zdravko Markov (Eds.). AAAI Press. http://www.cs.unb.ca/
profs/hzhang/publications/FLAIRS04ZhangH.pdf
[84] Jan Henrik Ziegeldorf, Oscar García Morchon, and Klaus Wehrle. 2014. Privacy
in the Internet of Things: threats and challenges. Security and Communication
Networks 7, 12 (2014), 2728–2742.
[85] Jan Henrik Ziegeldorf, Jan Metzke, Martin Henze, and Klaus Wehrle. 2015. Choose
wisely: a comparison of secure two-party computation frameworks. In Security
and Privacy Workshops (SPW), 2015 IEEE. IEEE, 198–205.
[86] Jan Henrik Ziegeldorf, Jan Metzke, Jan Rüth, Martin Henze, and Klaus Wehrle.
2017. Privacy-Preserving HMM Forward Computation. In Proceedings of the
Seventh ACM Conference on Data and Application Security and Privacy (CODASPY
’17). ACM, New York, NY, USA, 83–94. https://doi.org/10.1145/3029806.3029816
[87] Jan Henrik Ziegeldorf, Nicolai Viol, Martin Henze, and Klaus Wehrle. 2014.
POSTER: Privacy-preserving Indoor Localization. WiSec’14 (2014).
Nursery.
367
A DETAILED PROTOCOLS FOR SECURE
BUILDING BLOCKS
In this section, we provide the detailed protocols for our building
blocks as presented in Sec. 4.2 and summarized in Tab. 7.
A.1 Max and Argmax
Prot. 5 (presented in Sec. 4.2.2) provides the details of the MA
protocol which is used in all our classiers, i.e., H, A,
A, and V. GCC(hxi, ˜ , z) denotes the secure evaluation of
a Boolean circuit C on secret-shared input x (U and S each input
their individual share), garbled input   (an input already held in
garbled form by the evaluator of the circuit), and clear text input z
(held by U or S in clear) using Yao’s generic GC protocol. We only
note the three steps, i) converting to GC using the garbled addition
circuit CAdd, ii) computing the garbled argmax circuit CAr max
and iii) converting to additive shares using garbled subtraction cir-
cuit CSub, separately for the sake of clarity – they are implemented
as one monolithic circuit for greater eciency.
Protocol 5 Secure A protocol based on GC and ASS.
Input: Additive sharing of vector hÆxi = (hx1i, ..., hxni)
Output: Additive sharing hx⇤i, hi⇤i of
xi and i⇤ = arg max
i =1...n
x⇤ = max
i =1...n
xi
U , S :
U , S :
U , S :
˜x1, ..., ˜xn  GC CAdd hx1i, .., hxni 
˜x, ˜i⇤  GC CAr  max  ˜x1, ..., ˜xn 
hx⇤i, hi⇤i  GC CSub  ˜x⇤, ˜i⇤ 
A.2 Scalar Products
Prot. 6 (presented in Sec. 4.2.3) provides the details of the SP
protocol for securely computing scalar products which is heavily
used in H and A to compute weighted sums.   de-
notes multiplication on additive shares which is implemented using
precomputed Multiplication Tripless (MTs) [12, 28]. The secure
R protocol on additive shares has been adopted from [86].
Protocol 6 Secure SP protocol based on ASS.
Input: Additive shares hÆxi and h Æwi of two equal sized vectors Æx and Æw
Output: Additive shares hzi of the inner product z = Æx ·Æw
U , S :
U, S :
U , S :
i =1hzi i
hzi i = hxi i   hwi i
hzi =Õn
hzi   R hzi 
8i = 1...n
A.3 Polynomial Approximation of Arbitrary
Functions
Prot. 7 (presented in Sec. 4.2.4) provides the details of the P
FA protocol. As for MA, we only note conver-
sion steps between GC and ASS separately for the sake of clarity
while CAdd, CSelection, and CSub are implemented as one mono-
lithic circuit in practice. The selected approximation polynomial
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Ziegeldorf et al.
Protocol
x0   2(x, l, s)
ˆp0   2(p, l, s)
hx⇤i, hi⇤i   A(hÆxi)
hzi   SP(hÆxi, h Æwi)
hf 0(xi)i   PFA(hP f i, hxi) Polynomial approximation of possibly secret function f at secret point with secret output
hf (xi)i   OFA(hf (X)i, x)
hNµ,  (x)i   G(hxi, hµi, h  i)
Description
Conversion from reals to integers with s bit precision and maximum bitlength l (inverse: 2)
Conversion from probabilities to integers in logspace with s bit precision s and bitlength l (inverse: 2)
Max and argmax on secret-shared input vector with secret output
Scalar product on two equal-sized secret-shared vectors Æx, Æw with secret outputs
OT-based approximation of possibly secret function f at point x known by U with secret output
Secure evaluation of Gaussian N with secret parameters µ,   at secret point x with secret output.
Backtracking through secret state matrix M from state s⇤T known by U or S with output to U or S
S⇤   B(hMi, s⇤T )
Table 7: Summary of the secure building blocks of SHIELD. The protocols are provided in full detail in Appendix A.
 i(x) is evaluated using the EP subprotocol. EP re-
quires dlog2(d)e + 1 rounds of parallel multiplications and rescal-
ing: In round j, the terms hx2ii, ..., hx2i 1+1i and ha2i 1x2i 1
i, ...,
ha2i 2+1x2i 2+1i. Finally, all shares are added up locally.
Shared evaluation point hxi and approximation parameters
hPi = (ha10i, ..., hakd i, hr1i, ..., hrk i)
Protocol 7 Secure PFA protocol for the evaluation
of arbitrary functions based on GC and ASS.
Input:
Output: Approximated result h i(x)i with ri  x < ri
Parameter selection:
˜x  GC CAdd hxi 
U , S :
˜P GC CAdd hPi 
U , S :