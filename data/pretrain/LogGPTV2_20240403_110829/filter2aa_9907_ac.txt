如果你要了解这些参数的功能的话，请看
.IR /usr/src/linux/drivers/scsi/in2000.c .
.SS "NCR5380 和 NCR53C400 配置"
这个启动参数遵循以下的格式
.IP
.BI ncr5380= iobase,irq,dma
.LP
或者
.IP
.BI ncr53c400= iobase,irq
.LP
如果卡没有使用中断，那么 IRQ 值 255（0xff）将被用来屏蔽中断。
IRQ 值 254 表示自动检测，更多的细节可以从下面的文档中得到。
.IR /usr/src/linux/drivers/scsi/README.g_NCR5380 .
.SS "NCR53C8xx 配置"
.IP
.BI ncr53c8xx= S
.LP
这里 S 是一个用逗号分隔的关键字 [：值]
可以被识别的关键字（有可能伴随着值）是：
mpar (master_parity), spar (scsi_parity),disc (disconnection), 
specf (special_features), ultra (ultra_scsi),fsn (force_sync_nego), 
tags (default_tags), sync (default_sync),
verb (verbose), debug (debug), burst (burst_max).
如果需要了解这些值的功能，请参考
.IR /usr/src/linux/drivers/scsi/ncr53c8xx.c .
.SS "NCR53c406a 配置"
.IP
.BI ncr53c406a= iobase[,irq[,fastpio]]
.LP
指定 irq = 0 适用于无中断驱动模式。
设置 fastpio = 1 设置为快速的处理器 I/O（PIO）模式，0 是慢速的处理器 I/O（PIO）模式。 
.SS "IOMEGA PPA3 配置"
.IP
.BI ppa= iobase[,speed_high[,speed_low[,nybble]]]
.LP
这里 iobase 的值是并口的地址（缺省值是 0x378），
speed_high 是在数据处理时延迟时间（以微秒为单位，缺省值是 1），
speed_low 是端口其他状态下的延迟时间（以微秒为单位，缺省值是 6），
nybble 是一个 BOOL 值，表示是不是强制使用半个字节（4个位）的工作模式，
缺省值是"假"。
更多细节请参考
.IR /usr/src/linux/drivers/scsi/README.ppa .
.SS "Pro Audio Spectrum 配置"
PAS16 适配卡使用 NC5380 SCSI 芯片，较新的版本支持免跳线模式。启动参数是下列格式：
.IP
.BI pas16= iobase,irq
.LP
不同点是你可以指定 IRQ 的值是 255，
这样你就可让驱动程序不要使用中断，当然这样会降低性能。
通常 iobase 的值是0x388。
.SS "Seagate ST-0x 配置"
如果你的卡没有在启动的时候被检测到，你需要使用下面格式的启动参数：
.IP
.BI st0x= mem_base,irq
.LP
这里
.I mem_base
值是卡所使用的内存映射的 I/O 区域值。
通常的值会是 0xc8000，0xca000，0xcc000，0xce000，0xdc000，0xde000。
.SS "Trantor T128 配置"
这种卡也是使用 NCR5380 芯片组，并且接受以下的选项：
.IP
.BI t128= mem_base,irq
.LP
.I mem_base
的值0xc8000，0xcc000，0xdc000，0xd8000。
.SS "UltraStor 14F/34F 配置"
检测出的缺省的 I/O 端口列表能够被
.IP
.BI eata= iobase,iobase,... .
.LP
所改变。
.SS "WD7000 配置"
.IP
.BI wd7000= irq,dma,iobase
.LP
.SS "Commodore Amiga A2091/590 SCSI 控制器配置"
.IP
.BI wd33c93= S
.LP
这里 S 是一个用逗号分隔的字符串选项。
可以被识别的选项字是：
nosync:bitmask, nodma:x, eriod:ns, disconnect:x, debug:x, clock:x, next．
详细说明请参考
.IR /usr/src/linux/drivers/scsi/wd33c93.c .
.SH "硬盘驱动器"
.SS "IDE 硬盘驱动器/光驱驱动程序参数"
IDE 驱动程序可以接受的参数有很多，
其范围包括从磁盘规格到有缺陷的控制器芯片的支持。
指定驱动程序参数的同时需要使用 "hdX=" 的格式来指定驱动器。
X 的范围是从 "a" 到 "h"。
非驱动器选项使用前缀 "hd=" 来指定。
注意如果将驱动器选项作用于非驱动器选项也可以工作，
而且选项也能够象你所期望的那样被应用。
同时还要注意到的是 "hd=" 格式也能够用于按照规定的顺序（从 a 到 h）
检索到下一个没有指定的驱动器。在下面的讨论中，我们可以看到 "hd=" 选项将会被短暂的引用。
需要了解更多细节的话，参考 linux/drivers/block 目录下的 README.ide
.SS "`hd=cyls,heads,sects[,wpcom[,irq]]' 选项"
这些选项用来指定磁盘的物理参数。前面三个参数是必须的。
柱面/磁头/磁道三个参数将被 fdisk 程序所使用。
如果是 IDE 的硬盘驱动器，"写补偿"值会被忽略掉。
指定的 IRQ 值是接口程序所使用的，所以其实并不能被称为真正意义上的指定的驱动器参数。
.SS "`hd=serialize' 选项"
具有双 IDE 接口的 CMD-640 芯片在设计上是有缺陷的。
这个缺陷是当第二个接口与第一个接口被同时使用时，将会破坏你的数据。
使用这个选项能够使你的接口永远不会同时使用。
.SS "`hd=dtc2278'选项"
这个选项告诉驱动程序你拥有一个 DTC-2278D 的 IDE 接口。
驱动程序就会试图使用 DTC 的指定操作来激活第二个接口并启动快速传送模式。
.SS "`hd=noprobe'选项"
不要检测该硬盘驱动器。例如，
.IP
hdb=noprobe hdb=1166,7,17
.LP
将会屏蔽掉检测，可是仍然指定了驱动器的物理参数，
因为这样才能够将驱动器登记成为一个有效的、可用的块设备。
.SS "`hd=nowerr'选项"
一些驱动器具有 WRERR_STAT 位，并且永久有效。这个选项忽略该位。
.SS "`hd=cdrom'选项"
这个选项告诉 IDE 驱动程序有一个 ATAPI 兼容的光盘驱动器。
在大部分情况下光盘驱动器会被自动的识别，
但是对于不能识别的光盘驱动器来说，
这个选项是很有用的。
.SS "标准的 ST-506 磁盘驱动程序参数 (`hd=')"
标准的磁盘驱动程序可以接受磁盘的物理参数，就象上面的 IDE 设备那样。
注意无论怎样它都只希望接受三个参数（柱面/磁头/磁道）-- 过多或过少的参数都会被忽略掉。
当然，它只接受 "hd=" 这样的参数，象 "had=" 参数这样的在这里是无效的。下面是它的格式：
.IP
hd=cyls,heads,sects
.LP
如果装有两个磁盘驱动器，上面的工作需要重复的进行以配置第二个磁盘驱动器。
.SS "XT 磁盘驱动程序参数 (`xd=')"
如果你不幸使用了一些些老掉牙的、8 位的和使用惊人的 125kB/s 传输速度的卡，
这些参数会对你有帮助。
如果它们不能被识别的话，你只能使用以下格式的启动参数：
.IP
xd=type,irq,iobase,dma_chan
.LP
type 值指定该卡的制造厂商，下面是厂商的值及对应的名字：
0= 普通卡; 1=DTC; 2,3,4=Western Digital,5,6,7=Seagate; 8=OMTI. 
同一厂家出厂的不同类型的卡的区别由 BIOS 字符串来指定，如果指定 type，这些也就没有用了。
函数 xd_setup() 不检查这些值，并且会假设你已经输入了全部的四个值。
不要让它失望。
这里有一个 WD1002 控制器示范用法--假设 BIOS 被关掉/移走了--使用缺省的 XT 控制参数
.IP
xd=2,5,0x320,3
.LP
.SS "Syquest's EZ*可移动磁盘"
.IP
.BI ez= iobase[,irq[,rep[,nybble]]]
.LP
.SH "IBM MCA总线设备"
请同时参考
.IR /usr/src/linux/Documentation/mca.txt .
.SS "PS/2 ESDI hard disks"
有可能按下面的方法在启动时指定你所需要的磁盘物理参数。
.IP
.BI ed= cyls,heads,sectors.
.LP
对于ThinkPad-720, 要加上下面的选项
.IP
.BR tp720=1 .
.LP
.SS "IBM Microchannel SCSI Subsystem 配置"
.IP
.BI ibmmcascsi= N
.LP
这里 N 是子系统的\fIpun\fP (SCSI ID)
.SH "CD-ROMs (Non-SCSI/ATAPI/IDE)"
.SS "Aztech 接口"
语法是：
.IP
aztcd=iobase[,magic_number]
.LP
如果你设置 magic_number 值为0x79，
那么该驱动程序尝试在任何一个未知的固件上面执行。其他的值都会被忽略掉。
.SS "MicroSolutions `backpack' 光驱接口"
语法：
.IP
bpcd=iobase
.LP
.SS "CDU-31A 和 CDU-33A Sony 接口"
这种光盘驱动器的接口会出现在一些 Pro Audio Spectrum 声卡及
其他支持 Sony 驱动接口的卡上。语法是：
.IP
cdu31a=iobase,[irq[,is_pas_card]]
.LP
指定一个为 0 的 IRQ 告诉驱动程序该硬件不支持中断（如一些 PAS 卡）。
如果你的卡支持中断，就要使用它们，这样可以减少驱动程序的 CPU 占用时间。
对于
.I is_pas_card
选项来说，如果使用 Pro Audio Spectrum 的卡则应该输入 "PAS"，否则就不需要指定了。
.SS "CDU-535 Sony 接口"
该光盘驱动器接口的语法如下
.IP
sonycd535=iobase[,irq]
.LP
如果你要指定 IRQ 值的话，0 可以被当成一个标志位被填到 I/O 地址中。
.SS "GoldStar 接口"
该光盘驱动器的接口语法是：
.IP
gscd=iobase
.LP
.SS "ISP16 光驱接口"
语法：
.IP
isp16=[iobase[,irq[,dma[,type]]]]
.LP
（三个整数值，一个字符串）。如果 type 的值是 "noisp16" 的话，接口不会被配置。
其他可以被接受的 type 值包括： `Sanyo", `Sony', `Panasonic' 和 `Mitsumi'．
.SS "Mitsumi标准接口"
这种光盘驱动器接口的语法是：
.IP
mcd=iobase,[irq[,wait_value]]
.LP
这里
.I wait_value
被用来设置为内部故障的超时时间。能否实现还需要依靠在编译时的定义而定。
Mitsumi FX400 是一种不使用 mcd 驱动程序的 IDE/ATAPI 光盘驱动器。.
.SS "Mitsumi XA/MultiSession接口"
这是与我们上面介绍的一样的硬件，只不过该驱动程序拥有更多的特性。
语法：
.IP
mcdx=iobase[,irq]
.LP