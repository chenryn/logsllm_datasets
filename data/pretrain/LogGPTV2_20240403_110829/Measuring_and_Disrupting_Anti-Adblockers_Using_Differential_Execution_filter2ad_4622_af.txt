selection of modules has to be guided by some underlying
source of randomness (e.g., system clocks, external network
packets). If we can force a random source in every run, then
the random selection becomes deterministic (e.g., a random
coin ﬂip becomes deterministic). This is very much similar
to virtual machine replay where all external non-determinism
are recorded and replayed to ensure the deterministic behavior
of the VM. In summary, we argue that the two kinds of
randomization does not pose a fundamental
to our
differential analysis.
Robustness of anti-adblocker evasion. Equipped with the
result of differential analysis, we have demonstrated the power
of the JavaScript rewrite and API hooking based solutions.
They are subject to the ongoing arms race between adblockers
and anti-adblockers. For Javascript rewrite especially,
is
in general hard to estimate and contain the effect of any
code change, and therefore can hinder real-world deployment.
Even worse, rewriting Javascript cannot be conducted in a
browser extension and therefore further limits its uses. For API
hooking, as we discussed in §VI-B, it is much more precise,
close to the root, and therefore much less likely to induce
undesired side effects. The challenge of this approach though
is the reliance on the discovery of the exact DOM elements that
are checked in adblock detection (which may require further
program analysis), and we leave as future work.
threat
it
In addition, both approaches share a fundamental limitation
13
of webpage or Javascript content randomization. Unlike the
task of anti-adblocker detection conducted in a controlled
environment, for which we can force not only the same
page/script to be used but also the execution to be deterministic
(see discussion earlier),
the task of anti-adblocker evasion
happens in real users’ browsers where we may not be able to
contain randomization. For instance, for content randomization
(different pages/scripts are loaded in each visit), there is no
ﬁxed page or script
to learn from ofﬂine and every user
will potentially obtain a unique version that has never been
observed in the past. Such frequent randomizations, however,
will likely hurt the web performance by effectively disabling
caching. Users who are not using adblockers will also be
unnecessarily penalized.
It is slightly easier to deal with behavior randomization
where the same exact script randomly selects anti-adblocking
modules during different runs. In this case, since different users
will obtain the same copy of script, it is possible to learn
which part of the code is related to the random selection of
anti-adblocking modules, and simply force the outcome of that
random outcome to eliminate this particular source of non-
determinism.
VIII. CONCLUSIONS
We presented a differential execution analysis approach to
discover anti-adblockers. Our insight is that websites equipped
with anti-adblockers will exhibit different execution traces
when they are visited by a browser with and without an
adblocker. Based on this, our system enables us to unveil many
more (up to 52×) anti-adblocking websites and scripts than
reported in prior literature. Moreover, since our approach en-
ables us to pinpoint the exact branch statements and conditions
involved in adblocker detection, we can steer execution away
from the anti-adblocking code through JavaScript rewriting
or hide the presence of adblockers through API hooking.
Our system can bypass a vast majority of anti-adblockers
without causing any site functionality breakage (except one
with Javascript rewriting).
We anticipate escalation of the technological battle between
adblockers and anti-adblockers — at least in the short term.
From the perspective of security and privacy conscious users,
it is crucial that adblockers are able to keep up with anti-
adblockers. Moreover, the increasing popularity of adblocking
has already led to various reform efforts within the online
advertising industry to improve ads (e.g., Coalition for Better
Ads [5], Acceptable Ads Committee [2]) and even alternate
monetization models (e.g., Google Contributor [6], Brave
Payments [4]). However, to keep up the pressure on publishers
and advertisers in the long term, we believe it
is crucial
that adblockers keep pace with anti-adblockers in the rapidly
escalating technological arms race. Our work represents an
important step in this direction.
ACKNOWLEDGMENT
We would like to thank the anonymous reviewers for their
valuable feedback on this paper. This work is supported in
part by the National Science Foundation under grant numbers
1719147, 1715152, 1664315, and by a seed grant from the
Data Transparency Lab (DTL).
14
REFERENCES
[1] “A Publishers Guide To Counter-Ad Blocking Tech-
nology,” https://adexchanger.com/platforms/a-publishers-
guide-to-counter-ad-blocking-technology/.
[2] “Acceptable Ads Committee,” https://acceptableads.com/
en/committee/.
[3] “AdBlock
for Chrome Now Hides
Facebook
and Blocks More Ads On More Sites,”
Ads
https://blog.getadblock.com/adblock-for-chrome-now-
hides-facebook-ads-and-blocks-more-ads-on-more-
sites-f5918ebc43c6.
[4] “Brave Payments,” https://brave.com/publishers/.
[5] “Coalition for Better Ads,” https://www.betterads.org/.
[6] “Google Contributor,” https://contributor.google.com/v/
beta.
[7] “Googles
Inbuilt Ad-Blocker Comes To Chrome
Canary,” https://techviral.net/googles-inbuilt-ad-blocker-
comes-chrome/.
[8] “Introducing ES2015 Proxies,” https://developers.google.
com/web/updates/2016/02/es2015-proxies.
[9] “Manifest
-
Web
Accessible
Resources,”
https://developer.chrome.com/extensions/manifest/
web accessible resources.
[10] “Blocking Taboola ads,” https://adblockplus.org/forum/
viewtopic.php?t=20747, 2014.
[11] “Anti-Adblock Killer List,” https://github.com/reek/anti-
adblock-killer/blob/master/anti-adblock-killer-ﬁlters.txt,
2015.
[12] “Native Advertising: A Guide
for Businesses,”
https://www.ftc.gov/tips-advice/business-center/
guidance/native-advertising-guide-businesses, 2015.
[13] “Facebook Will Force Advertising on Ad-Blocking
https://www.wsj.com/articles/facebook-will-
Users,”
force-advertising-on-ad-blocking-users-1470751204,
2016.
[14] “The Rise
https:
//www.wsj.com/articles/the-rise-of-the-anti-ad-blockers-
1465805039, 2016.
the Anti-Ad Blockers,”
of
[15] “AdBlock,” https://getadblock.com/, 2017.
[16] “Adblock forum,” https://forums.lanik.us, 2017.
[17] “Adblock
Allow
Plus
2.0,
non-intrusive
https://easylist-downloads.adblockplus.
advertising,”
org/exceptionrules.txt, 2017.
[18] “Adblock Warning Removal List,” https://easylist-
downloads.adblockplus.org/antiadblockﬁlters.txt, 2017.
[19] “Error.prototype.stack,” https://developer.mozilla.org/en-
US/docs/Web/JavaScript/Reference/Global Objects/
Error/Stack, 2017.
[20] “Forum section
content
about
false
blocking,”
https://forums.lanik.us/viewforum.php?f=64&sid=
acd4dfc10ed86e1bc7e29d5f482fd8c7, 2017.
[21] “Generate, parse, and enhance JavaScript stack traces
in all web browsers,” https://github.com/stacktracejs/
stacktrace.js, 2017.
[22] “Google v8,” https://developers.google.com/v8/, 2017.
[23] “mitmproxy,” https://mitmproxy.org/, 2017.
[24] “PageFair,” https://pagefair.com/, 2017.
[25] “The Chromium Projects,” https://www.chromium.org/
Home, 2017.
state
[26] “The
Global
of
Adblock
the
blocked
Report.
web
2017
PageFair,”
[43] A. Narayanan and D. Reisman, “The princeton web
transparency and accountability project.”
Network,
Loop,”
“Concurrency model
and
https://developer.mozilla.org/en-
Event
US/docs/Web/JavaScript/EventLoop, 2017.
S.
arms
[45] R. Nithyanand, S. Khattak, M. Javed, N. Vallina-
J. E. Powles, E. D.
Rodriguez, M. Falahrastegar,
J. Murdoch,
Cristofaro, H. Haddadi,
of
counter
“Adblocking
on
the
in
Free and Open Communications on the
Internet
(FOCI 16). Austin, TX: USENIX Association, 2016.
[Online]. Available: https://www.usenix.org/conference/
foci16/workshop-program/presentation/nithyanand
and
blocking: A slice
6th USENIX Workshop
and
race,”
[46] K. Rieck, T. Krueger, and A. Dewald, “Cujo: Efﬁcient
detection and prevention of drive-by-download attacks,”
in Proceedings of the 26th Annual Computer Security
Applications Conference, ser. ACSAC ’10, 2010.
[47] F. Roesner, T. Kohno, and D. Wetherall, “Detecting and
Defending Against Third-Party Tracking on the Web,” in
USENIX Symposium on Networked Systems Design and
Implementation (NSDI), 2012.
[48] A. K. Sood and R. J. Enbody, “Malvertising–exploiting
web advertising,” Computer Fraud & Security, vol. 2011,
no. 4, pp. 11–16, 2011.
[49] SOPHOS, “Adblocker blockers move to a whole
new level,” https://nakedsecurity.sophos.com/2016/02/01/
adblocker-blockers-move-to-a-whole-new-level/, 2016.
[50] G. Storey, D. Reisman, J. Mayer, and A. Narayanan, “The
future of ad blocking: An analytical framework and new
techniques,” Technical Report, 2017.
[51] T. P. Team, “2017 Adblocking Report,” https://pagefair.
com/blog/2017/adblockreport/, 2017.
[52] W. Wang, Y. Zheng, X. Xing, Y. Kwon, X. Zhang, and
P. Eugster, “Webranz: Web page randomization for better
advertisement delivery and web-bot prevention,” in Pro-
ceedings of the 2016 24th ACM SIGSOFT International
Symposium on Foundations of Software Engineering, ser.
FSE 2016, 2016.
[53] B. Xin, W. N. Sumner, and X. Zhang, “Efﬁcient program
execution indexing,” in Proceedings of the 29th ACM
SIGPLAN Conference on Programming Language Design
and Implementation, ser. PLDI ’08, 2008.
[54] D. Yu, A. Chander, N. Islam, and I. Serikov, “Javascript
instrumentation for browser security,” in ACM SIGPLAN
Notices, vol. 42, no. 1. ACM, 2007, pp. 237–249.
[55] A. Zarras, A. Kapravelos, G. Stringhini, T. Holz,
C. Kruegel, and G. Vigna, “The Dark Alleys of Madison
Avenue: Understanding Malicious Advertisements,” in
ACM Internet Measurement Conference (IMC), 2014.
http:
[44] M.
D.
https://pagefair.com/downloads/2017/01/PageFair-2017-
Adblock-Report.pdf, 2017.
Gives
//youradchoices.com/, 2017.
Control,”
You
[27] “YourAdChoices
[28] C. Curtsinger, B. Livshits, B. Zorn, and C. Seifert, “ZOZ-
ZLE: Fast and Precise In-Browser JavaScript Malware
Detection,” in USENIX Security Symposium, 2011.
[29] Digital-Advertising-Blog, “What tracking pixels are and
why they matter to your next digital ad campaign,” http://
www.digitaland.tv/blog/what-is-tracking-pixel-ht/, 2017.
[30] S. Englehardt and A. Narayanan, “Online tracking: A 1-
million-site measurement and analysis,” in ACM Confer-
ence on Computer and Communications Security (CCS).
ACM, 2016.
[31] D. Gugelmann, M. Happe, B. Ager, and V. Lenders,
“An automated approach for complementing ad blockers
blacklists,” Proceedings on Privacy Enhancing Technol-
ogy (PETS) 2015, 2015.
[32] S. Guha, B. Cheng, and P. Francis, “Privad: Practical
privacy in online advertising,” in NSDI, 2011.
[33] X. Hu, A. Prakash, J. Wang, R. Zhou, Y. Cheng, and
H. Yin, “Semantics-preserving dissection of javascript
exploits via dynamic js-binary analysis,” in Proceedings
of the 19th Symposium on Research in Attacks, Intrusions
and Defense (RAID’16), Sep. 2016.
[34] M. Ikram, H. J. Asghar, M. A. Kaafar, A. Mahanti, and
B. Krishanmurthy, “Towards seamless tracking-free web:
Improved detection of trackers via one-class learning,” in
Proceedings on Privacy Enhancing Technology (PETS),
2017.
[35] U. Iqbal, Z. Shaﬁq, and Z. Qian, “The ad wars: Retro-
spective measurement and analysis of anti-adblock ﬁlter
lists,” in Proceedings of the ACM Internet Measurement
Conference (IMC), 2017.
[36] N. M. Johnson, J. Caballero, K. Z. Chen, S. McCamant,
P. Poosankam, D. Reynaud, and D. Song, “Differential
slicing: Identifying causal execution differences for se-
curity applications,” in Proceedings of the 2011 IEEE
Symposium on Security and Privacy, ser. SP ’11, 2011.
[37] A. Kapravelos, Y. Shoshitaishvili, M. Cova, C. Kruegel,
and G. Vigna, “Revolver: An Automated Approach to the
Detection of Evasive Web-based Malware,” in USENIX
Security Symposium, 2013.
[38] K. Kim, I. L. Kim, C. H. Kim, Y. Kwon, Y. Zheng,
X. Zhang, and D. Xu, “J-force: Forced execution on
javascript,” in Proceedings of the 26th International Con-
ference on World Wide Web, ser. WWW ’17, 2017.
[39] A. Lerner, A. K. Simpson, T. Kohno, and F. Roesner,
“Internet Jones and the Raiders of the Lost Trackers:
An Archaeological Study of Web Tracking from 1996
to 2016,” in Proceedings of USENIX Security, 2016.
[40] M. Malloy, M. McNamara, A. Cahn, and P. Barford, “Ad
blockers: Global prevalence and impact,” in ACM Internet
Measurement Conference (IMC), 2016.
[41] H. Metwalley, S. Traverso, M. Mellia, S. Miskovic,
and M. Baldi, “The Online Tracking Horde: A View
from Passive Measurements,” in Trafﬁc Monitoring and
Analysis, 2015.
[42] M. H. Mughees, Z. Qian, and Z. Shaﬁq, “A ﬁrst look
at ad-block detection: A new arms race on the web,”
Proceedings on Privacy Enhancing Technology (PETS),
2017.
15