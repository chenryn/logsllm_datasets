# 【技术分享】一种深度隐蔽的域后门方式

## 译文声明
本文为翻译文章，原文来自安全客。译文仅供参考，具体内容和含义以原文为准。
- 作者：[360U1259595288](http://bobao.360.cn/member/contribute?uid=1259595288)
- 预估稿费：300 RMB
- 投稿方式：发送邮件至 linwei#360.cn 或通过网页版在线投稿

## 前言
在域网络中设置高度隐蔽的后门一直是许多安全研究人员的目标。本文将介绍一种基于域内对象ACL（访问控制链）的深度隐藏后门技术。我们将持续关注这一领域的研究，并在未来分享更多成果。

## 背景知识
在域网络环境中，组策略和脚本通常存储在域服务器的SYSVOL目录下，所有域用户都可以自由访问这些文件，但只有少数具有高权限的用户能够修改它们。当域内账号登录时，会查询并执行与其相关的域策略和脚本。因此，控制SYSVOL目录意味着有可能掌控整个域网络。

然而，如果域中部署了日志审计软件，那么使用高权限账户进行操作很容易被发现。此外，域策略往往要求定期更改高权限用户的密码，而对低权限用户则没有这种强制性规定。同时，域内存在大量几乎不怎么登录或使用的低权限用户。

如果赋予低权限用户对SYSVOL目录的修改权限，由于其权限较低且行为不起眼，一般不会引起审计软件的关注。目前，大多数防护和监控软件尚未充分重视目录的ACL设置，这使得利用ACL创建隐蔽后门成为可能。

测试环境：
- 域服务器：Windows Server 2016 R2 英文版 (acllab.com)
- 客户端：Windows 7 SP1 中文版

## 实现方法
### 第一步
首先，让一个名为 `eviluser` 的普通用户登录到域客户端（运行 Windows 7 系统）。通过 `net use` 命令连接到域服务器，此时可以看到共享目录，但由于缺乏写入权限，无法对其进行修改。

### 第二步
接下来，在域服务器上使用资源管理器为Policies目录添加写入权限（也可以是完全控制权），并将此权限继承给所有子目录及文件。此时，`eviluser` 将作为单独的权限用户出现在Policies目录的安全选项卡中。正常情况下，普通用户仅拥有Authenticated Users组的权限。

### 第三步
完成上述设置后，再次尝试从客户端向Policies目录写入数据。如图所示，现在`eviluser`已成功获得对该目录的写入权限，从而可以修改其中的策略和脚本，实现隐蔽后门的目的。

实际应用中，为了提高效率，可以通过PowerShell脚本来完成同样的操作。示例如下：

```powershell
# PowerShell命令示例
$acl = Get-Acl -Path "\\acllab.com\SYSVOL\acllab.com\Policies"
$rule = New-Object System.Security.AccessControl.FileSystemAccessRule("eviluser", "Write", "ContainerInherit, ObjectInherit", "None", "Allow")
$acl.SetAccessRule($rule)
Set-Acl -Path "\\acllab.com\SYSVOL\acllab.com\Policies" -AclObject $acl
```

## 结论
本文介绍了一种基于ACL的隐蔽后门技术，适用于多种域内对象。读者可根据自身需求灵活选择目标ACL进行修改，以达到植入后门的目的。需要注意的是，微软已经推出了专门用于检测ACL问题的工具——ACL Scanner，定期使用该工具可以帮助识别此类后门。