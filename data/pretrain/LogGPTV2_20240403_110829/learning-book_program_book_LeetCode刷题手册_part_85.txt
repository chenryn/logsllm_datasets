Input: N = 3, A =
6，B=
Output: 8
Note:
1. 1 >1
if calNthmagica1Count(mid,int64(A),int64(B)) ='a'&&char =K{
if k%1ength !=0{
return decodeAtIndex(s[:i], K%length)
return decodeAtIndex(s[:i], length)
length *=int(s[i]-‘0′)
---
## Page 842
return
881.BoatstoSavePeople
题目
ll jo sujam wnwxew e Aueo ueo jeog ypea pue [laldoad ujam seu uosiad y- au
Each boat carries at most 2 people at the same time, provided the sum of the weight of those
 people is at most limit.
Return the minimum number of boats to carry every given person. (It is guaranteed each person
can be carried by a boat.)
Example 1:
Input: people = [1,2], 1imit = 3
output: 1
Explanation: 1 boat (1, 2)
Example 2:
Input: people = [3,2,2,1], 1imit = 3
Output: 3
Explanation: 3 boats (1,2),(2) and (3)
Example 3:
Input: people = [3,5,3,4], 1imit = 5
Output: 4
Explanation: 4 boats (3),(3),(4),(5)
Note:
●1 x>（（x-Ny）dp（-x-y）dp）xVWNIW=（Ny）p
N
·换个角度来看这个问题，定义dp[k][m]代表K个鸡蛋，M次移动能检查的最大楼层。考虑某
一步t应该在哪一层丢鸡蛋呢？一个正确的选择是在dp[k-1][t-1]+1层丢鸡蛋，结果分两
种情况
1.如果鸡蛋碎了，我们首先排除了该层以上的所有楼层（不管这个楼有多高），而对于剩下的
dp[k-1][t-1]层楼，我们一定能用k-1个鸡蛋在t-1步内求解。因此这种情况下，我们
总共可以求解无限高的楼层。可见，这是一种非常好的情况，但并不总是发生。
2.如果鸡蛋没碎，我们首先排除了该层以下的dp[k-1][t-1]层楼，此时我们还有k个蛋和
t-1步，那么我们去该层以上的楼层继续测得dp[k][t-1]层楼。因此这种情况下，我们
---
## Page 849
总共可以求解dp[k-1][t-1]+1+dp[k][t-1]层楼。
·在所有㎡步中只要有一次出现了第一种情况，那么我们就可以求解无限高的楼层。但题目要求找
们能保证一定能找到安全楼层，所以每次丢鸡蛋的情况应该按照最差情况来，即每次都是第二种情
况。于是得到转状态转移方程：dp[k][m]=dp[k-1][m-1]+dp[k][m-1]+1。这个方程可
以压缩到一维，因为每个新的状态只和上一行和左一列有关。那么每一行从右往左更新，即
dp[i]+=1+dp[i-1]。时间复杂度o（K*1ogN)，空间复杂度o（N)。
·可能会有人有疑问，如果最初选择不在dp[k-1][t-1]+1层丢鸡蛋会怎么样呢？选择在更低的
层或者更高的层丢鸡蛋会怎样呢？
1.如果在更低的楼层丢鸡蛋也能保证找到安全楼层。那么得到的结果一定不是最小步数。因为
这次丢鸡蛋没有充分的展现鸡蛋和移动次数的潜力，最终求解一定会有鸡蛋和步数剩余，即
不是能探测的最大楼层了。
2.如果在更高的楼层丢鸡蛋，假设是第dp[k-1][t-1]+2层丢鸡蛋，如果这次鸡蛋碎了，
剩下k-1个鸡蛋和t-1步只能保证验证dp[k-1][t-1]的楼层，这里还剩第dp[k-1]
[t-1]+1的楼层，不能保证最终一定能找到安全楼层了。
·用反证法就能得出每一步都应该在第dp[k-1][t-1]+1层丢鸡蛋。
·这道题还可以用二分搜索来解答。回到上面分析的状态转移方程：dp[k][m]=dp[k-1][m-1]
+dp[k][m-1]+1。用数学方法来解析这个递推关系。令f（t，k）为t和k的函数，题目所
要求能测到最大楼层是N的最小步数，即要求出f（t，k）≥N时候的最小t。由状态转移方程
可以知道：f（t，k)=f（t-1,k）+f（t-1,k-1）+1，当k=1的时候，对应-个鸡蛋的情
况，f（t，1）=t，当t=1的时候，对应一步的情况，f（1，k）=1。有状态转移方程得：
f(t,k)=1+f(t-1,k-1)+f(t1,k)
（y）+（y）+=（-y）
·令g（t，k）=f（t，k)-f（t，k-1），可以得到
g(t,k)=g(t-1,k)+g(t-1,k-1)
·可以知道g（t，k）是一个杨辉三角，即二项式系数：
g(t,k)=
t
k+1）
·利用裂项相消的方法：
---
## Page 850
g(t,z)=f(tx)-f(t,z-1)
g(t,x-1)=f(t,x-1)-f(t,x-2）
g(t,x-2)=f（t,x-2)-f（t,x-3）
g(t,2)=f（t,2)-f（t,1)
g(t,1)=f(t,1)-f(t,0)
·于是可以得到：
f(t,k)
++++=
·其中：
72
k+1
表+1
k