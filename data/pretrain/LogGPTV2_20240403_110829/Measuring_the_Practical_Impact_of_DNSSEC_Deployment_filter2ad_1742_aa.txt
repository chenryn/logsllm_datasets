# Measuring the Practical Impact of DNSSEC Deployment

## Authors
- Wilson Lian, University of California, San Diego
- Eric Rescorla, RTFM, Inc.
- Hovav Shacham, University of California, San Diego
- Stefan Savage, University of California, San Diego

## Abstract
DNSSEC (Domain Name System Security Extensions) enhances DNS with a public-key infrastructure, providing cryptographic assurance for DNS records to compatible clients, even in the presence of an active network attacker. When deciding whether to deploy DNSSEC, administrators must perform a cost-benefit analysis. For some clients—those that perform DNSSEC validation—the zone will be protected from malicious hijacking. However, for other clients—those whose DNS resolvers are incompatible with DNSSEC—they may no longer be able to connect to the zone. This study aims to balance the security benefits for some users against the potential denial of service for others.

We conducted a large-scale measurement using an ad network to collect data from over 500,000 geographically-distributed clients. Our findings confirm previous research showing that a relatively small fraction of users are protected by DNSSEC-validating resolvers. Additionally, we demonstrate, for the first time, that enabling DNSSEC measurably increases end-to-end resolution failures. For every 10 clients protected from DNS tampering when a domain deploys DNSSEC, approximately one ordinary client (primarily in Asia) becomes unable to access the domain.

## Introduction
The Domain Name System (DNS) is used to map names to IP addresses and is known to be insecure; any active attacker can inject fake responses, corrupting the name-to-address mapping. To prevent such attacks, the Internet Engineering Task Force (IETF) developed DNSSEC, which allows DNS records to be digitally signed, preventing or detecting tampering.

Public enthusiasm for DNSSEC has grown significantly. In July 2010, the DNSSEC root zone was signed, and in March 2011, the .com top-level domain was signed. In January 2012, Comcast announced that they had switched all their DNS resolvers to perform DNSSEC validation and had signed all customer domains they served. Furthermore, protocols like DANE, which use DNS to authenticate SSL/TLS connections, depend on DNSSEC.

Despite these efforts, DNSSEC deployment at the end-system level remains limited. As of February 2013, only 0.15% of .com domains were secured with DNSSEC. This reflects a classic collective action problem: because most browser clients do not verify DNSSEC records or use resolvers that do, the value to a server administrator of deploying DNSSEC is limited. Similarly, because zones are unsigned, client applications and resolvers have little incentive to perform DNSSEC validation.

A zone administrator must weigh the costs and benefits:
- The fraction of clients whose resolvers validate DNSSEC records and would detect tampering if it occurred.
- The fraction of clients that fail with valid DNSSEC records and thus cannot reach the server.

In this paper, we measure these values through a large-scale study using Web browser clients recruited via an advertising network. We surveyed 529,294 unique clients over a week, encountering several pitfalls common in ad-recruited browser measurement studies. Our experience may be relevant to others conducting similar measurements.

### Ethics
Our experiment runs automatically without user interaction, measuring the behavior and properties of hosts along the paths from users to our servers rather than the users themselves. The study was certified as exempt from IRB review by the director of UC San Diego’s Human Research Protections Program.

## Overview of DNS and DNSSEC

### DNS Structure
A DNS name is a dot-separated concatenation of labels, e.g., `cs.ucsd.edu` consists of the labels `cs`, `ucsd`, and `edu`. The DNS namespace is organized as a tree, with nodes representing labels and the root node being the empty string label. Each node can have zero or more resource records (RRs) specifying information about that node. For example, IP addresses are stored in type A or AAAA RRs, and the names of authoritative name servers are stored in type NS RRs. The set of all RRs of a certain type for a given name is referred to as a resource record set (RRset).

### Delegation
DNS is a distributed system, eliminating the need for a central authority. The DNS namespace is divided into zones, each owned by a particular entity. Authority over a subtree can be delegated by the owner of the parent subtree, forming zone boundaries. For example, a registrar might delegate `example.com` to a customer, making that customer the authoritative source for RRsets associated with `example.com` and its subdomains.

### Address Resolution
The primary function of DNS is to resolve domain names to IP addresses. This is done in a distributed, recursive manner starting from the root zone. Typically, end hosts send DNS queries to recursive resolvers, which carry out the resolution. If a non-recursive DNS server cannot answer a query, it returns the name and IP address of an authoritative name server. The recursive resolver then queries that server until the resolution is complete.

### DNS (In)security
The original DNS design did not provide mechanisms to protect the integrity of response messages, making it vulnerable to man-in-the-middle attacks. An active attacker can inject spoofed responses, leading to DNS spoofing and cache poisoning. These attacks can compromise any type of DNS RR.

### DNSSEC to the Rescue
DNSSEC uses public key cryptography to sign RRsets, allowing security-aware recipients to verify that the RRset was signed by the holder of a particular private key. A chain of trust from the root zone ensures that a trusted key is used to validate signatures. DNSSEC adds new RR types, including DNSKEY, RRSIG, and DS. 

- **DNSKEY**: Holds public keys. Each zone authority generates at least one public/private key pair, using the private key to sign RRsets and publishing the public key in DNSKEY records.
- **RRSIG**: Generated for each RRset-public key pair, containing a cryptographic signature, the name and type of the RRset, a validity window, and the name of the signing key’s owner.
- **DS**: Links signed zones to establish the chain of trust, containing the digest of one of the sub-zone’s DNSKEY RRs.

DNSSEC is designed for incremental deployment, allowing coexistence with unsigned domains. DNSSEC-capable resolvers should resolve unsigned domains, and non-DNSSEC resolvers should resolve DNSSEC-signed domains, though without gaining security benefits. Unfortunately, some network elements do not process DNSSEC records properly, which this study aims to quantify.

## Methodology

To address these questions, we conducted a large-scale measurement study of web browsers in the wild. We sought to measure two quantities:
- The fraction of clients that validate DNSSEC records and can detect tampering.
- The fraction of clients that fail with valid DNSSEC records and cannot reach the server.

We gathered clients by purchasing ad space from an online advertising network, hosting an ad at a fixed URL loaded in an iframe on various publishers' websites. The ad included JavaScript code to drive the experiment, executed without user interaction upon loading the ad iframe. Our ad campaign targeted desktop operating systems to minimize sampling bias and ensure reliable internet connections.

### Experiment Setup
Our client-side "driver script" induces participants’ browsers to load 1×1-pixel images ("test resources") from different domains:
- **nosec**: Without DNSSEC
- **goodsec**: With correctly-configured DNSSEC
- **badsec**: With DNSSEC simulating misconfiguration or tampering

During each ad impression, the driver script attempts to resolve and load a total of 27 test resources: one nosec domain, one goodsec domain, and 25 different badsec domains. Failed loads from the goodsec domain class measure the fraction of clients that cannot reach a DNSSEC-enabled site, while failed loads from the badsec domain class measure the fraction of clients that detect and react to DNSSEC tampering.

## Conclusion
This study provides insights into the practical impact of DNSSEC deployment, balancing the security benefits for some users against the potential denial of service for others. Our findings highlight the need for careful consideration and further research to improve DNSSEC compatibility and deployment.