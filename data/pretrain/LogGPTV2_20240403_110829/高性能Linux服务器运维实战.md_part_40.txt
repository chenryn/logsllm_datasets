可以在文件系统挂载过程中启用，例如：
如果内核版本低于2.6.33的，请先升级内核。
内核从2.6.33开始提供TRIM支持，所以可以先运行uname-a命令，查看自己的内核版本，
功能可以通过让操作系统发送discard请求来通知存储器哪些block不再使用。
应商而异，但是所有设备都会出现一些性能下降。为了解决性能下降问题，Linux下的TRIM
试介绍，随着所使用的block接近磁盘容量，SSD的性能会开始降低，性能影响程度因供
可以得到很大提升，同时，TRIM功能还有助于延长SSD使用寿命。根据RedHat官方测
页不再包含有效的数据。这样，SSD在写入数据的时候就可以省下一大笔时间了。写性能
将会大幅度下降。
写入磁盘介质，这个现象称之为写入放大。由此可知，这种情况下，SSD 磁盘的写入性能
清除，接着将要覆盖写的 page 先写入到Cache 的 block 中，最后将 Cache中更新的 block
对于非空的 page，SSD 在写入前必须先进行一次清除，这种情况下，SSD 写入过程变为：
底层存储如SSD和传统机械磁盘并不知道哪些数据块可用，哪些数据块可以清除。所以
通过在命令行运行/usr/sbin/fstrim-a以完成手动执行TRIM，也可以设置cron 任务，
除了通过mount时指定discard选项启用TRIM，还可以通过fstrim命令进行定时TRIM。
如果要启用TRIM，需要确认SSD磁盘、操作系统、文件系统是否都支持TRIM。Linux
为了解决这个问题，SSD磁盘引入了TRIM，TRIM可以使操作系统来通知SSD哪些
关于文件系统优化，并没有太多的内容需要说明。就目前的情况，CentOS/RHEL7.x
这样mount后，/dev/sda2分区已经启用了TRIM。注意mount选项新增了-odiscard，
Linux文件系统中，只有EXT4、XFS文件系统支持TRIM。要如何启用TRIM功能呢？
如果输出中，DISC-GRAN和DISC-MAX列非O，表示该SSD磁盘支持TRIM功能。
要查看SSD 磁盘是否支持TRIM，可以使用IsbIk命令来检测，例如：
也就是，首先将整个 block 的内容读取到Cache中，然后将整个block从 SSD 磁盘中
文件系统性能优化措施
mount-text4-odiscard/dev/sda2/mnt
read-erase-modify-write
-sdb1
sdb
NAME
[root@localhosthadoop]#lsblk
DISC-ALN
DISC-GRAN DISC-MAX DISC-ZERO
512B
512B
4G
4G
-D/dev/sdb
系统性能调优实施细则
第5章
213
---
## Page 225
214
大量小文件所在的文件系统就是一个典型示例，此时可以禁用EXT4的日志功能。
牲一定性能的情况下增强稳定性的一种手段，但在一些情况，例如，WebServer上存在的
功能，但有时候并不需要这些特性，可以禁用它们。EXT4文件系统的日志功能就是在牺
1,version=2/dev/diskal
幅度提升XFS 的性能。例如：
数，这些都能够提高文件系统的相关性能。
的过程中，建议对XFS 做一些简单的优化即可，主要是执行格式化时指定额外的一些参
系列默认更换为性能更好的 XFS，这也是由于XFS 在性能表现确实很好的原因。在使用
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
grep'has_journal
grep 'has_journal'
打开日志功能：
或动态（即在EXT4文件系统已经创建后）指定，例如，关闭日志功能：
禁用日志功能可以在创建EXT4文件系统时就指定：
EXT4提供有很多特性，当然有一些是前一代文件系统EXT3本身就具有的，如日志
2.EXT4文件系统优化
对上面命令含义介绍如下。
对于XFS文件系统，可以在进行格式化的时候添加一些优化参数，这些参数可以大
设置后可以减少10%左右的内存占用，性能也提高了，效果非常不错。
V
1.XFS文件系统格式化时参数优化
提高性能。
lazy-count：该值可以是0或1。如果lazy-count=l，则不会修改超级块，可以显著
-d agcount-4：默认值是根据容量自动设置的。可以设置成1、2、4、16等，这个
128m，可以显著的提高XFS文件系统删除文件的速度，当然还有其他，如复制文
-1 size=128m：注意是小写的m，
值时，写到block中。
-i size=512：默认的值是256KB，
参数可以调节对CPU的占用率，值越小，占用率越低。
件的速度。这个参数需要大内存的支持，内存太少的机器大概不能设置这么高。
Creating journal inode: done
tune2fs 1.41.12 (17-May-2010)
[root@localhost ~]# tune2fs -0 has_journal /dev/sda7
[root@serverl home]#mkfs.xfs -d agcount=16 -l size=128m,lazy-count=
[root@localhostext4]#dumpe2fs/dev/sda7|grep
[root@localhost ext4]# tune2fs
[root@localhost ext4]# mkfs.ext4 -0~has_journal /dev/sda7
不是大写的。默认值的是10m，
当内容小于这个值时，写到inode中，超过这个
-O^has_journal
Filesystem features'
/dev/sda7
，修改这个参数为
---
## Page 226
可，例如：
是EXT4提供的性能最好的模式。
即元数据会记录日志，数据块不记录日志，并且不保证数据比元数据先写入磁盘。writeback
需要把元数据写入到磁盘上的时候，与元数据关联的数据块会首先写入。也就是数据先落
式安全性最高。
元数据恢复到一个一致性的状态。
到目志里，然后再写入磁盘上。在文件系统崩溃的时候，日志就可以进行重放，把数据和
日志模式分别是jourmal、ordered、writeback。下面分别介绍下它们的特点。
journal，而不记录data的jourmal。这就是EXT4文件系统3种日志模式提供的功能，3种
块。metadata和data的操作日志jourmal也是分开管理的。可以让EXT4记录metadata
现性能优化。EXT4文件系统分两部分存储，一部分是文件的元数据块，另一部分是数据
如下命令：
extra_isize
filetype extent flex_bg sparse_super large_file huge_file uninit_bg dir_nlink
grep has_journal"
那么如何使用writeback模式呢？其实只需要在mount分区时，加上writeback选项即
，再做元数据的日志。
joumal模式性能是三种模式中最低的，
在data=writeback模式下，
data-jourmnal模式提供了完全的数据块和元数据块的日志，所有的数据都会被先写入
(1）journal
有时候文件系统日志功能不能关闭时，可以考虑优化EXT4文件系统的日志模式来实
在动态关闭和打开日志功能后，可能需要对文件系统进行fsck检查，避免出错，执行
这样，/dev/sda7分区的文件系统日志模式就变成了writeback，文件系统性能会提高不少。
(3）writeback
EXT4的默认模式，在data=ordered模式下，EXT4文件系统只提供元数据的日志。
(2）ordered
3.EXT4文件系统挂载参数优化
禁用EXT4的日志功能后，文件系统写入性能会有不少提升。
[root@localhostext4]# fsck.ext4-f/dev/sda7
Filesystem features:
dumpe2fs 1.41.12 (17-May-2010)
[root@localhost~]# dumpe2fs/dev/sda7 l grep'Filesystem features'
0days,whichever comes first.Use tune2fs -c or -i to override
一般情况下，这种模式的性能会比jourmal模式要快得多。
，当元数据提交到日志后，数据块可以直接被提交到磁盘
has_journalext attr resize inode dir index
，因为所有的数据都需要日志来记录，但是此模
系统性能调优实施细则第5章
215
宗
---
## Page 227
第3篇智能运维监控篇
第7章Prometheus监控与可视化平台Grafana
第6章
运维监控利器Zabbix
---
## Page 228
信告警，第一时间通知网站运维人员，在状态恢复后发出正常的邮件或短信通知。
机状态，交换机、路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短
来越少。
较精准，但缺点很多，
的状态或者性能趋势图。
RRDTOOL工具绘图，通过PHP程序展现出来。使用它可以展现出监控对象一段时间内
关信息（其实就是使用Net-SNMP软件包的snmpget和snmpwalk命令获取），并通过
介绍各种运维监控工具。
6.1.1常见的运维监控工具
具。简单地说，Cacti就是一个PHP程序。它通过使用SNMP协议获取远端网络设备和相
进行告警。
Apache、Nginx、PHP-FPM、Tomcat、Redis，最后介绍了Zabbix 如何与钉钉、微信整合
的主动模式和被动模式应用的区别，接着通过6个案例介绍了Zabbix如何监控MySQL、
些都属于Zabbix的基础功能，然后介绍了Zabbix的自动发现和自动注册功能以及 Zabbix
模板的使用、触发器的使用、监控项的添加、触发器的配置、告警的设置等几个方面，这
6.1
Cacti是一款很老的监控工具，
Nagios 是一款开源的免费网络监视工具，能有效监控Windows、Linux和UNIX 的主
现在运维监控工具非常多，只有了解了它们的特性才能知道如何进行选择，所以下面
2.Nagios
Cacti是一套基于PHP、MySQL、SNMP及RRDTool开发的网络流量监测图形分析工
1.Cacti
本章主要介绍运维监控神器Zabbix的使用。首先介绍了Zabbix的安装部署、Zabbix
运维监控平台选型以及设计思路
第6章
，出图不好看，不支持分布式，也没有告警功能，所以使用的人会越
运维监控利器Zabbix
其实说它是一款流量监控工具更合适，对流量监控比
217
---
## Page 229
Ganglia 对 Hadoop、Spark 的监控，监控指标有近千个，完全满足了对大数据平台的监控
系统资源，而这个特点刚好弥补了 Zabbix 消耗性能的不足。
控。同时，最为重要的是 ganglia收集数据非常轻量级，客户端的 gmond 程序基本不耗费
Ganglia通过 gmond 收集数据，然后在webfrontend进行展示。
在需要收集数据的客户端，gmetad是服务端，webfrontend是一个 PHP的Web UI 界面。
到 gmetad守护进程下，使用rrdtool存储数据，最后将历史数据以曲线方式通过PHP 页
进程来采集CPU、内存、硬盘利用率、IVO负载、网络流量情况等方面的数据，然后汇总
Ganglia可以监视和显示集群中节点的各种状态信息，由运行在各个节点上的 gmond 守护
Zabbix监控模式等。
会出现监控超时、告警超时等现象。不过也有很多解决办法，例如，提高硬件性能、改变
SNMP、Zabbix agent、ping、端口监视等方法提供对远程服务器/网络状态的监视，数据收
机制以让系统运维人员快速定位/解决存在的各种问题。
解决方案。Zabbix能监视各种网络参数，保证服务器系统的安全运营；并提供强大的通知
容易出错，不宜维护。
主机也非常麻烦；配置文件都是基于文本配置的，不支持Web 方式管理和配置，这样很
点是没有强大的数据收集机制，并且数据出图也很简陋；当监控的主机越来越多时，添加
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
218
需求。
可以将所有数据汇总到一个界面集中展示，并且支持多种数据接口，可以很方便地扩展监
面呈现。
的运维监控平台。
同时还支持分布式部署，这使得它迅速流行起来，Zabbix也成为目前中小企业监控最流行
平台上。
Zabbix 解决了Cacti 没有告警的不足，也解决了 Nagios 不能通过Web 配置的缺点，
Nagios主要的特征是监控告警，最强大的就是告警功能，可支持多种告警方式。但缺
最后，Ganglia 在对大数据平台的监控更为智能，只需要一个配置文件，即可开通
Ganglia的主要特征是收集数据，并集中展示数据，这是Ganglia的优势和特色。Ganglia
当然，Zabbix也有不足之处，它消耗的资源比较多，如果监控的主机非常多时，可能
Zabbix由两部分构成，Zabbix server与可选组件Zabbix agent。Zabbix server可以通过
Ganglia是一款为HPC（高性能计算）集群而设计的可扩展的分布式监控系统
4.Ganglia
Zabbix是一个基于Web界面的提供分布式系统监视以及网络监视功能的企业级开源
3.Zabbix
---
## Page 230
运维规范化、自动化、智能化的大运维管理。
现统一管理、统一规范、统一处理、统一展现、统一用户登录、统一权限控制，最终实现
控平台中，并通过消除管理软件的差别，数据采集手段的差别，对各种不同的数据来源实
有业务系统中所涉及的网络资源、硬件资源、软件资源、数据库资源等纳入统一的运维监
运维监控平台的设计思路。
的环境和特点进行各种整合和二次开发，以达到与自己的需求完全吻合的程度。下面介绍
6.1.2运维监控平台设计思路
KairosDB都可以完美支持。
的数据源，Graphite、InfluxDB、OpenTSDB、Prometheus、Elasticsearch、CloudWatch 和
够好看，不够高端大气上档次，就可以使用Grafana的可视化展示。Grafana支持许多不同
化展示平台，它通过各种炫酷的界面效果展示监控数据。如果觉得Zabbix的出图界面不
服务出现故障时，它可以使运维人员快速定位和诊断问题。
度数据收集和数据筛选查询语言也非常强大。Prometheus是为服务的可靠性而设计的，
控，也适用于高动态的面向服务架构的监控。对于现在流行的微服务，Prometheus的多维
数据进行整合，可以实现主机自动加入监控以及自动告警的功能。
过 Centreon 都能实现。Centreon 可以和 Ganglia 进行集成，Centreon 将 Ganglia 收集到的
不足。
工具，通过Centreon 提供的Web 配置界面，可以解决Nagios 需要手工配置主机和服务的
后，可以通过Centreon Web一键管理和配置主机。Centreon就是Nagios的一个管理配置
似Nagios的监控引擎作为监控软件，同时监控引擎通过ndouil模块将监控到的数据定时
操作系统和应用程序的监控。首先，它是开源的，可以免费使用；其次，它的底层采用类
Centreon 的强项是一键配置和管理，并支持分布式监控。Nagios 能够完成的功能，通
，构建一个智能的运维监控平台，必须以运行监控和故障告警这两个方面为重点，将所
智能的运维监控平台，设计架构从低到高可以分为6层，三大模块，如图6-1所示。
运维监控平台不是简单地下载一个开源工具，然后搭建起来就行了，它需要根据监控
Grafana是一个开源的度量分析与可视化套件。通俗地说，Grafana就是一个图形可视
7.Grafana
Prometheus是一套开源的系统监控告警框架，它既适用于面向服务器等硬件指标的监
6.Prometheus
Centreon是一款功能强大的分布式IT监控系统，它通过第三方组件可以实现对网络、
5.
Centreon
运维监控利器Zabbix第6章
219
票
---
## Page 231
块和监控告警模块，
高性能Linux服务器运维实战：shell编程、
220
》数据收集模块：此模块主要完成基础数据的收集与图形展示。数据收集的方式有
在这6层中，
》用户展示管理层：位于最顶层，
上图架构解释如下。
本实现。
很多种，
权限控制。
告警故障结果进行统一展示，并实现多用户、
故障发生趋势。
入数据库以备调用，
告警事件生成层：位于第5层，主要是对告警事件进行实时记录，将告警结果存
置、告警阈值设置、
告警规则配置层：
接点。
滤处理，提取需要的数据到监控告警模块。这个部分是监控和告警两个模块的衔
数据提取层：位于第3层，主要是对从数据收集层获取到的数据进行规格化和过
还可以作为运维人员排查问题或解决问题的依据。
图形化，可以帮助运维人员了解一段时间内主机或网络的运行状态和运行趋势，
数据进行统一展示，展示的方式可以是曲线图、柱状图、饼状态等。通过将数据
数据展示层：
作系统数据等，然后将收集到的数据进行规范化并进行存储。
数据收集层：位于最底层，
，可以通过 SNMP 实现，也可以通过代理模块实现，还可以通过自定义脚
常用的数据收集工具有Cacti、Ganglia等。
数据收集层
数据展示层
数据提取层
告警规则
配置层
生成层
告警事件
从功能实现划分，
每个模块完成的功能如下所述。
：位于第2层，是一个Web展示界面，主要是将数据收集层获取到的
*
，并将告警结果形成分析报表，以统计一段时间内的故障率和
位于第4层，