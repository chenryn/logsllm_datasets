User: 请解答这个和日志有关的问题Wrong application loads on port 443 I have a server with two web application that configured as follow:

app1:

www.domain1.com
has https version


app2:

www.domain1.com
has not https version


This is my VirtualHost config for domain1:

Listen 443
NameVirtualHost *:443
SSLStrictSNIVHostCheck off

&lt;VirtualHost --ip--:80&gt;
    ServerName www.domain1.com
    DocumentRoot /usr/local/ROOT
    &lt;Directory /usr/local/ROOT&gt;
        Options FollowSymLinks 
        AllowOverride All
        Order allow,deny
        Allow from All
    &lt;/Directory&gt;
    errorlog /var/log/httpd/domain1.error.log
    CustomLog /var/log/httpd/domain1.access.log common 
    JkMount /* ajpmc
&lt;/VirtualHost&gt;

&lt;VirtualHost --ip--:443&gt;
    ServerName www.domain1.com:443
    DocumentRoot /usr/local/ROOT
    &lt;Directory /usr/local/ROOT&gt;
        Options FollowSymLinks 
        AllowOverride All
        Order allow,deny
        Allow from All
    &lt;/Directory&gt;
    errorlog /var/log/httpd/domain1.error.log
    CustomLog /var/log/httpd/domain1.access.log common 

    SSLEngine on
    SSLCertificateFile "/usr/local/security/paadbox.cert"
    SSLCertificateKeyFile "/usr/local/security/paadbox.pem"

    JkMount /* ajpmc
&lt;/VirtualHost&gt;


Edit:
And this is configuration for domain2:

&lt;VirtualHost --ip--:80&gt;
    ServerName www.domain2.com
    DocumentRoot /var/www/html/domain2
    &lt;Directory /var/www/html/domain2&gt;
        Options FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from All
    &lt;/Directory&gt;
    errorlog /var/log/httpd/domain2.error.log
    CustomLog /var/log/httpd/domain2.access.log common
&lt;/VirtualHost&gt;


Note that I have just 1 ip.

These urls works fine in browser:

http://www.domain1.com
http://www.domain2.com
https://www.domain1.com


And when I try to load this URL (app2):

https://www.domain2.com


the first app (app1) loads in my browser.
What is the problem???

Assistant: Historically, you can only have one SSL virtual host per ip address.  SNI -- server name indication -- was designed to work around this issue.

While in theory most browsers now support SNI, there are several requirements that must be met for that to work.  You can read more about Apache and SNI here.

In the absence of SNI, virtual host selection happens before Apache knows the virtual host name being requested by the client.  This means that there can only be a single SSL virtual host for a given ip address.

You can do name based virtual hosting without SNI if all your virtual hosts share a common domain, because then you can use a wildcard SSL certificate that will be valid for all of them.  However, this sounds like it wouldn't apply in your case.