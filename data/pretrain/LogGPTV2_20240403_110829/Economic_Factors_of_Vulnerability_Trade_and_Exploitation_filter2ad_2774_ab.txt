### Data Collection and Analysis of Exploits in RuMarket, NVD, and SYM

#### 1. Data Sources
- **RuMarket**: A dark web marketplace where exploits and malware are traded.
- **NVD (National Vulnerability Database)**: A database maintained by NIST that reports vulnerability characteristics, affected software, and severity.
- **SYM (Symantecâ€™s Threat Explorer and Attack Signature Databases)**: Reports on vulnerabilities for which exploits have been observed in the wild.

#### 2. Data Collection from RuMarket
- **Data Extraction**:
  - We queried RuMarket and analyzed discussion topics to extract relevant information.
  - Due to the nature of the data, fully-automated data extraction is challenging. Therefore, we used semi-automated pattern matching and manual analysis.
  - We identified traded CVEs by searching for the case-insensitive regular expression `cve(-id)?` in the "Virus, attacks, and malware commercial" section of the forum.
  - In April 2017, this process returned 194 discussion threads and approximately 3000 posts.
  - To ensure the reliability of the data, we only considered vendors who were not reported as "rippers" or banned from the community.

- **Sample Characteristics**:
  - The final sample includes 89 traded exploits over 57 unique vulnerabilities, embedded in 38 packages.
  - These packages are categorized as STANDALONE, MALWARE, and ExploitKit (EKIT) products, targeting Microsoft, Oracle, and Adobe software.
  - The sample size is consistent with previous studies on marketed exploits [3, 4, 9, 48].

#### 3. Data Integration
- **Joining Datasets**:
  - We integrated the three datasets (RuMarket, NVD, and SYM) using the CVE-ID of the vulnerabilities.

#### 4. Analysis Procedure

##### 4.1 Estimation of Exploit Prices
- **Exploit Cost Estimation**:
  - When a package contains multiple exploits, the cost of a single exploit can only be estimated.
  - Two key factors influencing exploitation effort are:
    - **Vulnerability Type**: Memory corruption vs. cross-site scripting.
    - **Exploitation Complexity**: Effort required to evade attack mitigation techniques.

- **Vulnerability Type**:
  - We used the Common Weakness Enumeration (CWE) standard to classify vulnerabilities.
  - Packages typically embed vulnerabilities of the same type, suggesting that skewed distributions of exploitation efforts within a package are unlikely.

- **Exploitation Complexity**:
  - The Common Vulnerability Scoring System (CVSS) measures access complexity.
  - CVSSv2 categorizes attack complexity as High, Medium, or Low.
  - Out of 57 unique CVEs, 2 had high CVSS attack complexity, while the remaining 55 had limited or no exploitation complexities.
  - Most packages include vulnerabilities with the same AC assessment, indicating that exploit development efforts are not significantly skewed among bundled vulnerabilities.

- **Cost Distribution**:
  - We assumed a uniform distribution of costs among exploits in a package for estimating unitary exploit costs.

##### 4.2 Bootstrapped Analysis of Exploit Prices
- **Bootstrap Method**:
  - We employed a block bootstrap analysis (N = 10000) to provide a more precise estimate of exploit costs.
  - This method randomly re-samples exploit packages with replacement to approximate the true unknown distribution of traded exploits.
  - It allows us to infer the parameters of the true distribution and build robust confidence intervals for price estimates.

##### 4.3 Regression Analysis
- **Hierarchical Structure**:
  - Our data has a hierarchical structure, with observations depending on both the exploit and the specific vendor.
  - Qualified vendors may publish more reliable exploits, affecting the likelihood of generating attacks in the wild.
  - We used a mixed-effects model to capture the random effect of the vendor and fixed effects of other variables.

- **Model Formulation**:
  - The general regression form is given by:
    \[
    f(\mu_{ai}) = z_{ai} \mu_a + \beta x_{ai}
    \]
  - Where \( f \) is the link function, \( z_{ai} \mu_a \) quantifies the random effect at the intercept, and \( \beta x_{ai} \) is the vector of fixed effects and respective coefficients.
  - Standard model diagnostics were run for all regressions.

#### 5. Limitations
- **Sampling Bias**:
  - The adopted CVE sampling mechanism may exclude some potentially relevant vulnerabilities.
  - Without engaging in trading activity, it is impossible to measure precisely what lies behind a market post.
  - Our analysis should be considered a conservative estimate of traded exploits in RuMarket.

- **Data Coverage**:
  - SYM data primarily covers mass-deployed exploits against consumer systems and does not extend to targeted attacks or 0-day vulnerabilities.

#### 6. Ethical Aspects and Data Sharing
- **Ethical Considerations**:
  - The market infiltration was conducted while the author was at the University of Trento, Italy.
  - All data collection occurred at Eindhoven University of Technology, the Netherlands.
  - No activities involved deception of market participants beyond our 'identity'.
  - We used the TOR network to conceal our identities and do not disclose the real name of the community.
  - The collected data is available for sharing.

#### 7. Data Analysis

##### 7.1 Overview of RuMarket
- **Vendor Activity**:
  - Our sample includes 22 uniquely identified vendors trading CVEs in MALWARE, STANDALONE, and EKIT packages.
  - The number of vendors increases at a steady linear rate of approximately three new vendors per year.
  - EKIT vendors typically publish one product, while STANDALONE and MALWARE vendors trade more packages.
  - EKIT vendors are more productive in terms of exploited vulnerabilities, with 50% contributing more than 10 exploits.
  - STANDALONE vendors focus on a few exploits, trading on average below three exploits.
  - MALWARE vendors are the least productive in terms of exploited CVEs.

- **Vendor Presence**:
  - We used the number of days a vendor has been registered on RuMarket as a proxy for seller presence.
  - STANDALONE vendors have the highest average time on market at the time of product publication.
  - Only 18% of vendors publish their first package on the day of registration, indicating prolonged market activity.

- **Package Activity**:
  - Our sample includes 38 unique exploit packages: six EKIT, six MALWARE, and twenty-six STANDALONE packages.
  - EKIT and MALWARE packages are stable over time, while STANDALONE packs show a steady increase.
  - EKIT packages have the longest active discussion period, with 50% remaining active for more than 500 days.
  - STANDALONE and MALWARE packages have shorter active periods, with 50% remaining active for up to 220 days.

- **Package Prices**:
  - STANDALONE packages are traded at a mean price around $3000 to $8000, bundling 1 to 4 exploits.
  - MALWARE packages are priced between $400 and $4000, with most prices set at around $1000-$2000.
  - EKITs are priced between $150 and $2000, embedding significantly more exploits than other types.
  - EKIT product prices are steadily decreasing, while MALWARE and STANDALONE package prices are increasing.

##### 7.2 Analysis of Exploits
- **Exploit Demographics**:
  - The packages contain 89 exploits targeting 57 unique CVEs in Microsoft, Adobe, and Oracle products.
  - Microsoft vulnerabilities make up more than half of the STANDALONE products.
  - EKIT bundles predominantly target Internet-exposed products like Oracle, Adobe, and Internet Explorer.
  - There is no significant association between the number of exploits in a package and its price.

This structured and detailed approach ensures a comprehensive and professional analysis of the data, providing clear insights into the exploit market dynamics.