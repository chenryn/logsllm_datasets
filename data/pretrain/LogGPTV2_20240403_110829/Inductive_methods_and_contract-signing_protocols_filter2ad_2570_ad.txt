waiting for a reply, then
1) either T has answered a request on the O-T channel and
an abort token or a res cn is on the O-T channel.
2) T has yet to answer a request on the O-T channel and
the request is on the O-T channel.
Lemma 6.4. Let N be a node in tr which is labeled by a
conﬁguration S’. Suppose further that in S’, O is in a state
in which it has requested for an abort token or a resolution
from T and is waiting for a reply, then either N is not an
abort-power node or N is not a contract-power node.
Lemma 6.5. Let N be a node in tr. Then either N is not
an abort-power node or N is not a contract-power node.
Proof : Let N be labeled S
(cid:2)
. Since S
(cid:2)
ﬁguration, we have O must be in one of its 10 states in S
So the following cases arise:
is a reachable con-
(cid:2)
.
1831. Oab?(pd,−) ∈ S
2. O1(pd,−) ∈ S
(cid:2)
(cid:2)
: By lemma 6.4.
: O can request an abort token from T
by the use of rule Oab? and go to a state S”, such that
Oab?(pd,−) ∈ S”. The result follows by case 1 and
proposition 6.2.
3. O0(pd,−) ∈ S
(cid:2)
: O can send me1 by the use rule O1 a
go to a state S”, such that O1(pd,−) ∈ S”. The result
follows by case 2 and proposition 6.2 .
4. Ores?(pd,−) ∈ S
5. O3(pd,−) ∈ S
(cid:2)
(cid:2)
: By lemma 6.4.
: O can request a resolution from T by
the use of rule Ores? and go to a state S”, such that
Ores?(pd,−) ∈ S”. The result follows by case 4 and
proposition 6.2.
6. O2(pd,−) ∈ S
(cid:2)
: O can send me2 by the use of rule O3
and go to a state S”, such that O3(pd,−) ∈ S”. The
result follows by case 5 and proposition 6.2.
7. Oab1(pd,−) ∈ S
(cid:2)
or Oab2(pd,−) ∈ S
(cid:2)
: O has an
abort token and the result follows from proposition 6.2.
8. Ores1(pd,−) ∈ S
−) ∈ S
from proposition 6.2.
(cid:2)
(cid:2)
or Ores2(pd,−) ∈ S
(cid:2)
or Ocom(pd,
: O has a valid contract and the result follows
Theorem 6.6. The protocol is balanced for honest O.
The above deﬁnitions and proofs of balance can be ex-
tended to multiple runs of the protocol. There are the fol-
lowing important distinctions in the deﬁnition:
1) Instead of intitial set of facts, Σ, we start with an arbitary
reachable conﬁguration.
2) For the construction of a ﬁnite continuation tree, along-
with the number of steps that the intruder steps, we also
put a bound the number of times the role generation rule
can be used.
3) Each edge of the continuation tree is now labeled by the
rule being used alongwith the key of the principal involved.
4) Any edge that is labeled by R’s key or a key known to
the intruder is also a removable edge.
5) The protocol is said to be balanced for honest O, if for all
reachable conﬁgurations S, and for all bounds on the num-
ber of steps that the intruder takes and the number of times
the role generation rule is used, at S, R does not have both
the power to abort and the power to complete.
Although we do not discuss it here, balance for honest
O in case R is honest or weakly dishonest, and balance for
honest R in case O is honest, weakly dishonest or strongly
dishonest can be similarly stated and proved.
6.2 Transparent Channels and Balance
If we relax the condition of transparent channels and allow
the intruder to delay messages on the channels between the
participants and T , the protocol is no longer balanced. This
is because of the following scenario relayed to us by Steve
Kremer and Olivier Markowitch:
1) O sends its PCS to R. R does not respond.
2) O asks T for an abort request, and R sends a resolve
request to T .
3) To achieve an abort, R delays its resolve request until T
acts on the abort request; and to achieve a valid contract,
R delays the abort request.
7. REPRESENTATION IN LINEAR LOGIC
Let us indicate how strategies, tr\E, considered in the
previous section may be faithfully represented as formal
derivations in linear logic [11], extending the representation
of MSR traces considered in [3].
A pure Horn axiom is deﬁned as: X(x, a) −◦ ∃y Y (x, y, b).
Any of its ground instances of the form: X(t, a)−◦
∃y Y (t, y, b), is conceived of as an instruction to transform
. . . . . . ⊗ X(t, a) ⊗ . . . . . . into
a conﬁguration of the form:
the conﬁguration: . . . . . . ⊗ Y (t, d, b) ⊗ . . . . . . where d is the
vector of fresh constants.
A conﬁguration of a system is represented as a tensor
of ﬁnitely many atomic formulas. The case where all pos-
sible actions of a system should be taken into account is
described with the help of branching Horn formulas of the
form X −◦ (Y1 ⊕ Y2 ⊕ ··· ⊕ Ym). The ﬁring of such an in-
struction results in the change of the “state” X either into
the “state” Y1, or into the “state” Y2, or . . . , or into the
“state” Ym. But we do not know in advance which of these
m alternatives will be chosen at a given occasion [12, 13].
The case where all possible actions Y2,. . . ,Ym should be
taken into account, with providing our own choice between
Y1,1,. . . ,Y1,k will be described by means of a Horn-like for-
mula of the form X −◦ ((Y1,1&··· &Y1,k) ⊕ Y2 ⊕ ··· ⊕ Ym).
Definition 7.1. Let Γ be a set of Horn clauses. A strat-
egy S in accordance with Γ is a labeled rooted tree of con-
ﬁgurations such that each of its edges (v, w) is labeled by an
‘instruction’ speciﬁed within Γ, which transforms v into w.
More precisely, for each vertex v with exactly k≥ 1 sons
w1, w2, .., wk, the outgoing edges (v, w1), (v, w2), .., (v, wk)
are labeled by pure Horn clauses with one and the same
antecedent: X −◦ Y1,i, X −◦ Y2, .., X −◦ Yk, resp., - these
clauses being such that there exists a Horn clause of the form
X −◦ ((Y1,1&··· &Y1,i&··· &Y1,k) ⊕ Y2 ⊕ ··· ⊕ Ym),
which belongs to Γ. (Thus we represent all possible eﬀects
at v).
We extend the comprehensive computational interpreta-
tion for Horn linear logic introduced in [12, 13]. Let us ap-
ply this approach to the case of the previous section where
a strongly dishonest participant R is playing against the
group G of “others”, which consists of O, T . Suppose that
α1, α2,. . . ,αk is a list of all R’s rules; the intruder rules;
and all rules in which Ni predicates occur on the list; and
the list β2, β3,. . . ,βm includes all the rules of the opponents
from G.
Because of space constraints, we sketch the main points
of our linear logic encoding. We describe the case of a single
run with an honest O and a strongly dishonest R. The case
of a single run with an honest O and weakly dishonest R
can be similarly described.
(cid:2)
) −◦ (q ⊗ Y
Auxiliary control variables: q, q1,1,. . . ,q1,k, q2,. . . ,qm, are
introduced. We form Γ in the following way. Each of the
above αi of the form (X −◦ Y ) is “guarded” as: ((q1,i ⊗ X)−◦
(q ⊗ Y )). Each βj of the form (X
) is “guarded”
as: ((qj ⊗ X
)). And we add the following ax-
q −◦ ((q1,1&··· &q1,k) ⊕ q2 ⊕ ···⊕ qm). In addition,
iom:
we have to introduce a number of Horn axioms to handle
the cases where certain enabling conditions are violated (a
similar situation with the zero-test simulation is handled,
for instance, in [13]).
(cid:2) −◦ Y
(cid:2)
(cid:2)
One can show that the strategies may be extracted from
linear logic proofs and vice-versa. Therefore, we obtain:
184Theorem 7.1. Given a “goal” Z0, R has a power to
!Γ, q (cid:17) Z0, is
get Z0 if and only if a sequent of the form:
derivable in linear logic.
8. CONCLUSIONS AND FURTHER WORK
We have studied an optimistic two-party contract-signing
protocol derived from the Garay-Jakobsson-
MacKenzie (GJM) protocol [10] and the notion of abuse-free
contract signing introduced in [10]. In a version suggested
in [15], a fair contract-signing protocol is abuse-free if, at
any stage of the protocol, any protocol participant does not
have both the power to complete the contract as well as the
power to abort it. We have used a multiset-rewriting formal-
ism for protocol analysis [3] to formally state this property
in terms of a certain recursive property of the protocol ex-
ecution tree, which we then proved for our version of the
GJM protocol by inductive methods. Our proof relies on
a strong notion of fairness adopted from [10], which itself
we formally stated in the multiset-rewriting formalism and
proved by inductive methods. We have also showed that
a version of abuse-freeness may be represented in terms of
provability in a logical system, in which formal derivations
correspond to full execution trees and vice versa.
Other possible forms of abuse-freeness remain to be in-
vestigated. Other desirable properties of the GJM protocol,
such as non-repudiation and the trusted third party account-
ability, still remain to be investigated as well. The latter
will involve formalizing potentially dishonest or careless ac-
tions of the trusted third party. We also plan to apply our
techniques to analyze other, multi-party optimistic contract-
signing protocols presented in [10] and to prove their prop-
erties, including abuse-freeness.
9. REFERENCES
[1] N. Asokan, V. Shoup, and M. Waidner. Asynchronous
protocols for optimistic fair exchange. In IEEE
Symposium on Security and Privacy, pages 86–99,
1998.
[2] I. Cervesato. Typed MSR: Syntax and examples. In
WITS’00. Workshop on Issues in the Theory of
Security, 2000., 2000.
[3] I. Cervesato, N.A. Durgin, P.D. Lincoln, J.C. Mitchell,
and A. Scedrov. A meta-notation for protocol analysis.
In Proc. 12-th Annual IEEE Computer Security
Foundations Workshop — CSFW’99, pages 55–69,
Mordano, Italy, 1999. IEEE Computer Society Press.
[4] V. Cortier, J. Millen, and H. Ruess. Proving secrecy is
easy enough. In 14-th Annual IEEE Computer
Security Foundations Workshop’01, pages 97–108,
2001.
[5] S. Das and D. Dill. Successive approximation of
abstract transition relations. In Sixteenth Annual
IEEE Symposium on Logic in Computer Science,
pages 51–58, 2001.
[6] D. Dolev and A. Yao. On the security of public-key
protocols. In Proc. 22nd Annual IEEE Symp.
Foundations of Computer Science, pages 350–357,
1981.
[7] S. Even. Protocol for signing contracts. In CRYPTO,
pages 148–153, 1981.
[8] S. Even and Y. Yacobi. Tr 175. pages 148–153,
Computer Science Dept, Technion, Israel, March,
1980.
[9] M.J. Fischer, N.A. Lynch, and M.S. Paterson.
Impossibility of distributed consensus with one faulty
process. JACM, 32(2):374–382, 1985.
[10] J. Garay, M. Jakobsson, and P. MacKenzie.
Abuse-free optimistic contract signing. In Advances in
Cryptology – CRYPTO’99, pages 449–466. Springer
Lecture Notes in Computer Science, vol. 1666, 1999.
[11] J.-Y. Girard. Linear logic. Theoretical Computer
Science, 50:1–102, 1987.
[12] M. Kanovich. Linear logic as a logic of computations.
Annals of Pure and Applied Logic, 67:183–212, 1994.
[13] M. Kanovich. The direct simulation of Minsky
machines in linear logic. In Advances in Linear Logic,
volume 222, pages 123–145, London Mathematical
Society Lecture Notes, 1995. Cambridge University
Press.
[14] S. Kremer and J.-F. Raskin. Formal veriﬁcation of
non-repudiation protocols - a game approach. In
Formal Methods for Computer Security (FMCS 2000),
Chicago, USA, July 2000.
[15] J.C. Mitchell and V. Shmatikov. Analysis of abuse-free
contract signing. In Financial Cryptography ’00, 2000.
[16] R.M. Needham and M.D. Schroeder. Using encryption
for authentication in large networks of computers.
Communications of the ACM, 21(12):993–999, 1978.
[17] L. Paulson. Proving properties of security protocols by
induction. In Proc. 10th Computer Security
Foundations Workshop, pages 70–83. IEEE Computer
Society Press, 1997.
[18] V. Shmatikov and J.C. Mitchell. Analysis of a fair
exchange protocol. In FLoC Workshop on Formal
Methods and Security Protocols, 1999.
[19] P. Syverson, C. Meadows, and I. Cervesato. Dolev-yao
is no better than machiavelli. In WITS’00. Workshop
on Issues in the Theory of Security, 2000., 2000.
[20] V.Shmatikov and J.C.Mitchell. Finite-state analysis of
two contract signing protocols. In To appear in special
issue of TCS on computer security, 2001.
[21] T.Y.C. Woo and S.S. Lam. A semantic model for
authentication protocols. In Proc. IEEE Symposium
on Research in Security and Privacy, 1993.
185