### 三元操作符的应用

三元操作符是一种简写形式的 `if-else` 语句，特别适用于简化条件赋值或生成代码。例如，在处理单选按钮的 `checked` 属性时，可以使用三元操作符来根据变量的值决定是否生成该属性。

#### 示例
假设我们有一个响应数组 `$response`，其中存储了用户的响应值。如果 `$response['response']` 的值为 `1`，则生成 `checked` 属性，否则不生成。

```php
echo 'Love';
echo ($response['response'] == 1) ? ' checked="checked"' : '';
```

这样，当 `$response['response']` 等于 `1` 时，会生成 `checked` 属性，从而得到选中的“Love”单选按钮。反之，则不会生成 `checked` 属性，导致“Love”单选按钮未被选中。

### 完整的问卷 PHP 脚本

以下是完整的 `questionnaire.php` 脚本，用于生成 Mismatch 问卷表单并处理用户响应。

```php
<?php
// 检查用户是否已登录
if (!isset($_SESSION['user_id'])) {
    echo 'Please log in to access this page.';
    exit();
}

// 显示导航菜单
require_once('navmenu.php');

// 连接数据库
$dbc = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

// 如果用户从未回答过问卷，则在数据库中插入空响应
$query = "SELECT * FROM mismatch_response WHERE user_id = '" . $_SESSION['user_id'] . "'";
$data = mysqli_query($dbc, $query);
if (mysqli_num_rows($data) == 0) {
    // 获取主题 ID 列表
    $query = "SELECT topic_id FROM mismatch_topic ORDER BY category_id, topic_id";
    $data = mysqli_query($dbc, $query);
    $topicIDs = array();
    while ($row = mysqli_fetch_array($data)) {
        array_push($topicIDs, $row['topic_id']);
    }

    // 插入空响应行到响应表
    foreach ($topicIDs as $topic_id) {
        $query = "INSERT INTO mismatch_response (user_id, topic_id) VALUES ('" . $_SESSION['user_id'] . "', '" . $topic_id . "')";
        mysqli_query($dbc, $query);
    }
}

// 如果表单已提交，将响应写入数据库
if (isset($_POST['submit'])) {
    foreach ($_POST as $response_id => $response) {
        if (is_numeric($response_id)) {
            $query = "UPDATE mismatch_response SET response = '$response' WHERE response_id = '$response_id'";
            mysqli_query($dbc, $query);
        }
    }
    echo 'Your responses have been saved.';
}

// 从数据库获取响应数据以生成表单
$query = "SELECT * FROM mismatch_response WHERE user_id = '" . $_SESSION['user_id'] . "'";
$data = mysqli_query($dbc, $query);
$responses = array();
while ($row = mysqli_fetch_array($data)) {
    // 查找主题名称
    $query2 = "SELECT * FROM mismatch_topic WHERE topic_id = '" . $row['topic_id'] . "'";
    $data2 = mysqli_query($dbc, $query2);
    if (mysqli_num_rows($data2) == 1) {
        $row2 = mysqli_fetch_array($data2);
        $row['category_name'] = $row2['category'];
        array_push($responses, $row);
    }
}

mysqli_close($dbc);

// 生成问卷表单
echo '<form method="post">';
$category = null;
foreach ($responses as $response) {
    // 如果类别发生变化，开始一个新的 fieldset
    if ($category != $response['category_name']) {
        if ($category !== null) {
            echo '</fieldset>';
        }
        $category = $response['category_name'];
        echo '<fieldset><legend>' . $response['category_name'] . '</legend>';
    }

    // 显示主题表单项
    echo '<label>' . $response['topic_name'] . ': ';
    echo 'Love <input type="radio" name="' . $response['response_id'] . '" value="1" ' . ($response['response'] == 1 ? 'checked="checked"' : '') . '> ';
    echo 'Hate <input type="radio" name="' . $response['response_id'] . '" value="2" ' . ($response['response'] == 2 ? 'checked="checked"' : '') . '></label><br>';
}
echo '</fieldset>';
echo '<input type="submit" name="submit" value="Submit">';
echo '</form>';

// 插入页面页脚
require_once('footer.php');
?>
```

### 测试 `questionnaire.php`

1. **创建新的 `questionnaire.php` 脚本**：确保包含上述代码。
2. **更新 `navmenu.php`**：添加一个新菜单项“Questionnaire”，链接到 `questionnaire.php`。
3. **上传脚本**：将脚本上传到 Web 服务器。
4. **测试**：
   - 打开 Mismatch 主页（`index.php`）并登录。
   - 点击“Questionnaire”菜单项访问问卷。
   - 回答问题并提交表单。
   - 返回主页，再次访问问卷，确认响应已正确加载。

### 处理不良数据库数据

如果数据库中的类别名拼写错误，会导致表单生成混乱。解决方法是：

1. **修正拼写错误**：在 `mismatch_topic` 表中修正类别名。
2. **消除重复数据**：创建一个新的 `mismatch_category` 表，存储唯一的类别名，并使用主键和外键关联 `mismatch_topic` 和 `mismatch_category`。

通过这些步骤，可以确保表单生成正确且易于维护。