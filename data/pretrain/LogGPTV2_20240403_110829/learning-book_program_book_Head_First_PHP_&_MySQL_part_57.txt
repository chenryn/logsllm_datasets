Statement
Statement2
false
如果TextExptession为talse，则执
行Statement2.
这个三元操作符实际上只是编写if-else语句的一种简写方式。它对
于简化if-else语句很有帮助，特别是在完成一个变量赋值或者生成
HTML代码作为if条件的响应时。以下使用这个三元操作符重写同样
的“Love”单选钮代码：
echo'Love';
这个tue/balse测试控制
列
三元操作符的结果。
现在使用三元摄作符而
不是一条is-else语句来生
成标记的checked
如果存储在Sresponse[response']中的响应值等于1，则会生
属性。
成checked属性作为标记的一部分，从而得到以下选中
的“Love”单选钮：
Love
标记代码中的这一
部分由三元提作符控制。
Long hair:
Love () Hate
另一方面，除1以外的其他响应值会阻止生成checked属性，导致对
应“Love”单选钮的标记未选中。
你现在的位置
455
---
## Page 492
完整的问卷PHP脚本
生成Mismatch问卷表单
现在已经配备了足够的Mismatch问卷表单代码，可以使用之前创建的响应数组
（$responses）生成整个HTML表单。如果还记得，这个数组是从mismatch
response表取得当前用户的响应来构建的。下面在完整的questionnaire.
php脚本中进一步查看问卷生成代码。
Please log in to access this page.';
exit () ;
// Show the navigation menu
require_once ('navmenu.php') ;
// Connect to the database
$dbc = mysqli_connect (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME) ;
// If this user has never answered the questionnaire, insert empty responses into the database
=    so    - 
.S_SESSION['user_id'].""";
$data = mysqli_query($dbc, $query) ;
if (mysqli_num_rows($data)== 0){
// First grab the list of topic IDs from the topic table
$query = "sELECT topic_id FROM mismatch_topic ORDER BY category_id, topic_id";
$data = mysqli_query($dbc, $query);
StopicIDs = array();
while ($row = mysqli_fetch_array ($data)){
array_push($topicIDs, $row['topic_id']);
// Insert empty response rows into the response table, one per topic
foreach ($topicIDs as $topic_id){
Squery = "INSERT INTO mismatch_response (user_id, topic_id) VALUES (*"
.$ SESSION['user
1d"
（.PToTdo..
mysqli_query ($dbc, $query);
// If the questionnaire form has been submitted, write the form responses to the database
if (isset($_POST['submit'])){
// Write the questionnaire response rows to the response table
foreach ($_PosT as $response_id => $response)(
456
---
## Page 493
控制你的数据，世界在你手中
"WHERE response_id = '$response_id'";
mysqli_query($dbc, $query);
echo 'Your responses have been saved.';
// Grab the response data from the database to generate the form
S_SESSION['user_id']."";
$data = mysqli_query($dbc, $query);
$responses = array();
while ($row = mysqli_fetch_array($data)){
// Look up the topic name for the response from the topic table
=  = 
1";
.$row['topic_id']
Sdata2 = mysqli_query($dbc, $query2);
if (mysqli_num_rows($data2) == 1)(
$row2 = mysqli_fetch_array($data2);
[,ueu,1nox=[,eudo,]mo
Srow['category_name'] = $row2['category'];
array_push ($responses, $row);
进入循环之前首先获取第一个
1
响应的类别。
mysqli_close($dbc);
//Generate the questionnaire formby looping through the response
array
echo'';
每个类别创建为
一个sieldset来帮
echo''.$responses[o]['category_name']”.
'';
助组织主题。
foreach （Sresponses as $response）（
//Only start a new fieldset ifthe category has changed
if （Scategory!=$responseI'category_name']){
Scategory=$response['category_name'];
echo''.$response['category_name']
'';
这里使用三元摄
作符改变未回答
//Display the topic form field
的主题相应标签
echo''
Sresponse['topic_name'].
':':
的样式。
echo'Love
每个主题创建为
$response['response_id'].
"value="2"
41
一个标签，后面跟
($response['response'}==2？'checked="checked"
<>
有“ove”和“Hate”
单送钮。
echo'';
echo'';
// Insert the page footer
要记住，（=love，
require_once ('footer.php′);
2 =hate。
<2
这些echo语句分别生成一个单送钮，一个
由响应数据生成HTML问卷表单
对应“Lowe”，另一个对应
"Hate
你现在的位置
457
---
## Page 494
测试questionnaire.php
运行测试
测试这个新的Mismatch问卷。
修改Mismatch，使用这个新的Questionnaire脚本（或者从HeadFirstLabs网站
（www.headfirstlabs.com/books/hfphp）下载这个应用）。这需要创建
一个新的questionnaire.php脚本，还要在navmenu.php脚本中增加一个新
的“Questionnaire”菜单项，以便用户访问这个问卷。
将脚本上传到你的Web服务器，然后在Web浏览器中打开Mismatch主页（index，
php）。确保正常登录，然后点击“Questionnaire”菜单项来访问问卷。注意此
时未回答任何主题，因为这是你第一次访问问卷。回答问题，并提交表单。返回
到主页，然后再一次回到问卷，确认已经从数据库正确地加载了你的响应。
000
Mismatch-Questionnaire
How do you fcel about each topic?
Questinnaite脚本允许用
Appcarance
户回答好恶问题，然后
Tattoos:
Love CHate
将结果存储在数据库中。
Gold chains:
Love Hate
Body piereings:
Love Hate
Cowboy boots:
Love CHate
Long hair:
Love Hatc
Entertainmcnt
Reality TV:
Love Hate
Professional
wrestling:
Love Hatc
Horror movies:
Love Hatc
表单中的主题问题是由数
据库动态生成的，如果你增
加了新的主题，表单也金随
之改变。
Mismatch应用的完整源代码可以从HeadFirstLabs网站
下载：
www.headfirstlabs.com/books/hfphp
458
第8章
---
## Page 495
控制你的数据，世界在你手中
thereareno
DumbQuestions
是一个串？
response表生成Mismatch问卷表单呢？
签：
合：这个问题问得好。问卷表单必须处理两种可能的情
来计算冒号两边的两个语句之一。如果这些语句是串，那
况：用户第一次回答问卷；或者用户已经回答过问卷，现
么三元操作符的结果也将是一个串。正是这一点使得三元
在正在修改答案。对于第一种情况，还没有做出任何响
操作符使用相当方便，可以把它直接插入到赋值或连接语
应，所以mismatch_response表中对应这个用户还没有
句中间。
数据。不过我们仍需要动态地生成表单。为此，可以使用
mismatch_topic表来生成这样一个表单，这个工作只
完成一次。不过，这不适用于第二种情况，因为此时表单
必须根据用户特定的好恶响应来生成：要记住，“Love”
性（checked）。
+
为简化代码，Mismatch没有自动调整来反映新主题
至少对于已经回答过问卷的用户来说未做调整。所以，
在增加新主题之后必须清空mismatch_response表。
1
用以下SQL语句向你自己的mismatch_topic表增加一条新主题：
INSERT INTO mismatch_topic
(name, category) VALUES
2
用以下SQL语句从mismatch_response表清空所有数据：
DELETE FROM mismatch_response
查看Mismatch应用中的问卷，找到这个新主题。
?
对这个新主题做出响应，提交表单，并查看所保存的响应。
你现在的位置
459
---
## Page 496
处理不好的数据库数据
现在由数据驱动表单
确实很费功夫，不过现在Mismatch应用能够由数据库中存储的响应动
态地生成问卷了。这说明，对数据库做出的任何修改都会自动地反映
到表单中，这正是由数据库驱动Web应用用户界面的主旨所在。不过，
这个表单，
如果有不好的数据会发生什么情况呢？
怎么说呢，看起
来相当混乱！
etd_respo
mmd_opk
response_id
topic_id
response
name
vser_id
category
topic_id
000
How do you feel about cach tcpic?
Appcarance
Tattoos:
Love Hate
Gold chains:
Love @Hate
Body piercings:
Love Hate
Love Hate
这个类别拼错了，
Long hair:
Love Hate
导致表单中额外出
Fionertai
现了这个fieldset，
这3个kieldset本应是一个，这样
Reality TV:
这很让人图惑。
Leve Hatc
所有关子娱乐（Ententaimment）
Professional
的主题都能归组在一起。
wrestling:
Love Hate
Love Hate
m
sic:Love Hatc
Entertai
The opera:
Love Hatc
Food
Sushi:
Love CHate
根据生成这个表单的做法，类别
Spam:
Love @Hae
变化全导政生成一个新的sieldset.
Spicy food:
Love Hate
正因如此，这里创建了一个额外
的bieldset,
确实由数据驱动了表单，但是有些不对劲。看起来数据库中某个类别
拼错了，这导致PHP代码为它生成了一个单独的fieldset。这是一个严
重的问题，因为本来使用fieldset是为了帮助组织表单以便于响应主题，
而这会破坏本该达到的效果。
460
第8章
---
## Page 497
控制你的数据，世界在你手中
0K，这么说数据厚中某个类别拼错了，这破
环了我们的表单。你们认为该如何修正这个
问题呢？
mismaccn topic
Luobeyas
8
Horrormovies
Easy listening music
Entertinment
The opera
Entertainment
我们已经知道是这个拼错的类别
10
Sushi
Food
带来了问题
11
12
Spom
Food
Poople
13
Spicy food
Food
Howard Sters:
Love Hatc
14
Peanut butfer &
Food
Peopel
Food
Bll Gates:
Martinis
Love Hae
15
16
Howard Stern
People
Peopie
17
Bill Gates
Peopel
BarbaraS
Love @Ha
18
Barbara Streisand
People
…这里还有一处金导致问卷表
Fzank
gill
Doe
单中出现同样的tieldset问题。
Frank:这很容易。只需要在mismatch_topic表中把类别名改正确就可以了。
Joe：但是不只是有一个类别拼错了。而且我考虑再三，实在不明白为什么要把类别名存储多次。
Jill：我同意。我们那么费劲地在设计数据库模式时消除重复数据，不过这里还是有一大堆重复的类别名。不仅如
此，还有两个不正确的类别名。
Frank：那好，去掉类别名，按数字来引用类别怎么样呢？这样一来就不存在键人错误的风险了
Joe：没错，不过我们仍然需要类别名作为问卷表单中的标题。
Jill：也许我们可以按数字引l用类别而不要类别名。mismatch_topic表中对主题就是这样做的，对吧？
Joe:完全正确！我们不希望在mismatch_response表中存储大量重复的主题名，所以把主题名放在
mismatch_topic表中，然后用数字键将主题与响应关联。
Frank：你是不是说可以通过创建一个新的类别表来解决重复的类别名问题？
Jill:他正是这个意思。我们可以创建一个新的mismatch_category表，其中各个类别名只存储一次。然后使用
主键和外键在mismatch_topic和mismatch_category之间建立主题和类别的关联。太棒了！
你现在的位置
461
---
## Page 498