### Version and Configuration
- For the main branch, we are using a version that is still under development (commit hash: `be5e8bf8ec698f9ad3a1b6fbb412680995fe39bf`).
- For KLEE, we selected the latest stable version (KLEE 2.110) available in the official Docker image (SHA256 digest: `33a568ccee52efc1fbcce4fb33bab476ce666bef2fa3e628627881bdd70c9d0f8`).

### Exploration Time
- Initially, we set the exploration time to 5 minutes, consistent with EOSAFE.
- Due to the majority of tasks not being completed within this timeframe, we extended the exploration time to 30 minutes to improve performance.
- All other configuration settings remained unchanged, and subsequent experiments were conducted on the same server used for EOSAFE.

### Research Questions
Our evaluation is guided by the following research questions (RQs):

1. **RQ1:** How accurate is EOSAFE in detecting vulnerabilities in EOSIO smart contracts?
2. **RQ2:** How prevalent are these vulnerabilities in the ecosystem?
3. **RQ3:** How many smart contracts have been exploited by attackers, and what are the impacts of these attacks?

### RQ1: Accuracy of Vulnerability Detection
#### Creating the Benchmark
- To evaluate EOSAFE, we first created a benchmark. Since there are no established benchmarks in the research community, we collected real-world attacks and manually examined the affected smart contracts.
- We gathered 38 attacks targeting 34 unique vulnerable smart contracts from security reports by well-known blockchain security companies [26, 27].
- Some attacks were found to be unrelated to the smart contract itself but rather due to external factors such as server issues. After excluding these, our final benchmark consists of 52 smart contracts, including both vulnerable and patched versions. The benchmark is available at [23].

#### Overview of the Benchmark
- The distribution of the benchmark is shown in Table 2.
- We also included 4 pairs of manually crafted smart contracts (with and without missing permission check vulnerabilities) to complement the benchmark.
- The small scale of the benchmark may not fully evaluate EOSAFE's effectiveness, so we will conduct additional manual investigations (see ยง7.2.1).

#### Results
- EOSAFE flagged 26 out of 52 smart contracts as vulnerable, with one false negative (a rollback vulnerability) and no false positives, resulting in a precision of 100% and a recall of 96.30%.
- The false negative was due to the high number of suspicious reveal functions, which made symbolic execution within the 5-minute timeout challenging. This can be mitigated by increasing the analysis time or exploring more paths.
- The exceptional case is rare, as most smart contracts are not overly complex.

#### Comparison with KLEE
- To ensure a fair comparison, we applied KLEE to the same benchmark.
- KLEE achieved a precision of 100%, recall of 37.04%, and F1-measure of 54.05%.
- KLEE successfully identified 10 out of 27 vulnerable contracts and 6 out of 25 non-vulnerable ones, primarily related to fake EOS and missing permission check vulnerabilities.
- KLEE failed to analyze 36 cases, mostly due to timeouts (under 30 minutes) or out-of-memory (OOM) errors, attributed to the large number of jump and call instructions.

### RQ2: Prevalence of Vulnerabilities
#### Dataset
- We analyzed all 53,666 smart contracts (including historical versions) from June 9, 2018, to November 15, 2019.
- Different from Ethereum, EOSIO contracts can be updated, so we used EOSIO accounts to label each unique smart contract.
- We focused on gambling DApps for rollback vulnerability detection, using 17,394 contracts from DAppTotal [31].
- For fake EOS and fake receipt vulnerabilities, we identified 47,396 versions of contracts with transfer functions.
- For the missing permission check vulnerability, we analyzed all 53,666 contracts.

#### Overall Results
- Over 25% of the 53,666 smart contracts are labeled as vulnerable (Table 3).
- The most prevalent vulnerability is the missing permission check, affecting over 15% of the smart contracts.
- The fake receipt vulnerability is also common, affecting 13% of the smart contracts.
- The rollback vulnerability affects over 1,000 out of 17,394 gambling DApps.
- The fake EOS vulnerability affects approximately 2.7% of the smart contracts.
- These results highlight the prevalence of security vulnerabilities in EOSIO smart contracts, underscoring the need for identification and prevention.

#### Vulnerable Unique Smart Contracts
- Half of the 5,574 unique contracts have at least one vulnerable version.
- 10% of unique smart contracts account for 61.24% of vulnerable versions.
- There are 1,793 unique smart contracts with all versions vulnerable.
- The contract `eossanguoone` has the most vulnerable versions (356), with all versions released before September 4, 2019, suffering from the fake receipt vulnerability.

#### Manual Verification
- We manually verified the results by sampling 10 labeled vulnerable and 10 labeled bug-free contracts for each type of vulnerability.
- Only one false negative case was found, which could not be detected due to the complexity of the contract.
- The verification process took three days and the samples are included in the benchmark at [23].

### RQ3: Exploitation and Impact
- To answer RQ3, we collected all on-chain transactions related to the flagged vulnerable contracts and proposed heuristics to identify possible attacks.
- Further details and findings will be provided in the subsequent sections.

---

This optimized text provides a clearer, more coherent, and professional presentation of the original content.