:::
::: orderedlist
**验证步骤**
1.  验证用户是否已映射到正确的 SELinux 用户，并分配了正确的级别：
    ``` screen
    # semanage login -l
    Login Name      SELinux User         MLS/MCS Range        Service
    __default__     user_u               s0-s0                *
    example_user    user_u               s1                   *
    ...
    ```
2.  以 MLS 内的用户身份登录。
3.  验证用户的安全级别是否正常工作：
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果配置不正确，您用于验证的文件不应包含任何敏感信息，并且用户实际上可以访问未经授权的文件。
    :::
    ::: orderedlist
    1.  验证用户无法读取具有更高级别敏感性的文件。
    2.  尝试写入到具有较低级别敏感度的文件。这会将文件的分类级别增加到用户的明确级别。
    3.  验证用户可以读取具有较低级别的敏感性的文件。
    :::
:::
::: itemizedlist
**其他资源**
-   ["将 SELinux 策略切换到
    MLS"一节](#using-multi-level-security-mls_using-selinux.html#switching-the-selinux-policy-to-mls_using-multi-level-security-mls "将 SELinux 策略切换到 MLS"){.xref}
    .
-   ["以 SELinux
    限制的用户身份添加新用户"一节](#managing-confined-and-unconfined-users_using-selinux.html#adding-a-new-user-as-an-selinux-confined-user_managing-confined-and-unconfined-users "以 SELinux 限制的用户身份添加新用户"){.xref}
    .
-   [第 2 章 *更改 SELinux
    状态和模式*](#changing-selinux-states-and-modes_using-selinux.html "第 2 章 更改 SELinux 状态和模式"){.xref}
    .
-   [第 5 章 *故障排除与 SELinux
    相关的问题*](#troubleshooting-problems-related-to-selinux_using-selinux.html "第 5 章 故障排除与 SELinux 相关的问题"){.xref}
    .
-   [CLI
    基本故障排除](https://access.redhat.com/articles/2191331){.link}
    知识库文章。
:::
:::
::: section
::: titlepage
# []{#using-multi-level-security-mls_using-selinux.html#proc_changing-file-sensitivity-in-mls_using-multi-level-security-mls}在 MLS 中更改文件敏感度 {.title}
:::
在 MLS SELinux
策略中，用户只能修改自己的敏感度级别的文件。这是为了防止以较低明确的级别向用户公开任何高度敏感信息，同时防止不明确的用户创建高敏感文件。不过，管理员可以手动增加文件的分类，例如要在更高级别处理该文件。
::: itemizedlist
**先决条件**
-   SELinux 策略设置为 `mls`{.literal}。
-   SELinux 模式被设置为 enforcing。
-   您有安全管理权限，这意味着您要分配给其中之一：
    ::: itemizedlist
    -   `secadm_r`{.literal} 角色。
    -   如果启用了 `sysadm_secadm`{.literal} 模块，进入
        `sysadm_r`{.literal} 角色。`sysadm_secadm`{.literal}
        模块默认启用。
    :::
-   已安装 `policycoreutils-python-utils`{.literal} 软件包。
-   分配给任何安全权限级别的用户。如需更多信息，请参阅 [MLS
    中建立用户清除级别](#using-multi-level-security-mls_using-selinux.html#establishing-user-clearance-in-mls_using-multi-level-security-mls "在 MLS 中建立用户明确"){.link}。
    在本例中，`User1`{.literal} 已有 `s1`{.literal} 级别的权限。
-   分配了安全级别的、您有全访问的文件。
    在本例中，`/path/to/file`{.literal} 具有级别 `s1`{.literal} 权限。
:::
::: orderedlist
**步骤**
1.  检查该文件的安全级别：
    ``` screen
    # ls -lZ file
    -rw-r-----. 1 User1 User1 user_u:object_r:user_home_t:s1 0 12. Feb 10:43 /path/to/file
    ```
2.  更改文件的默认安全级别：
    ``` screen
    # semanage fcontext -a -r s2 /path/to/file
    ```
3.  强制重新标记文件的 SELinux 上下文：
    ``` screen
    # restorecon -F -v /path/to/file
    Relabeled /path/to/file from root:object_r:user_home_t:s1 to user_u:object_r:user_home_t:s2
    ```
:::
::: orderedlist
**验证**
1.  检查该文件的安全级别：
    ``` screen
    # ls -lZ file
    -rw-r-----. 1 User1 User1 user_u:object_r:user_home_t:s2 0 12. Feb 10:53 /path/to/file
    ```
2.  可选：验证具有较低级别权限的用户是否无法读取该文件：
    ``` screen
    $ cat /path/to/file
    cat: file: Permission denied
    ```
:::
::: itemizedlist
**其他资源**
-   ["在 MLS
    中建立用户明确"一节](#using-multi-level-security-mls_using-selinux.html#establishing-user-clearance-in-mls_using-multi-level-security-mls "在 MLS 中建立用户明确"){.xref}
    .
:::
:::
::: section
::: titlepage
# []{#using-multi-level-security-mls_using-selinux.html#proc_separating-system-administration-from-security-administration-in-mls_using-multi-level-security-mls}在 MLS 中将系统管理与安全管理分离 {.title}
:::
默认情况下，syssys_r 角色具有 `secadm_r`{.literal}
角色的权限，这意味着具有 ` sysadm_r`{.literal} ``{=html}
角色的用户可以管理安全策略。如果需要对安全授权进行更多控制，您可以通过将
Linux 用户分配给 `secadm_r`{.literal} 角色并在 SELinux 策略中禁用
`sysadm_secadm`{.literal} 模块将系统管理与安全管理分开。
::: itemizedlist
**先决条件**
-   SELinux 策略被设置为 `mls`{.literal}。
-   SELinux 模式设置为 `enforcing`{.literal}。
-   已安装 `policycoreutils-python-utils`{.literal} 软件包。
-   分配给 `secadm_r`{.literal} 角色的 Linux 用户：
    ::: itemizedlist
    -   该用户被分配给 `staff_u`{.literal} SELinux 用户
    -   定义了此用户的密码。
    :::
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    确保您可以以用户 身份登录，这将分配给 `secadm`{.literal}
    角色。如果不能，您可以防止以后修改系统的 SELinux 策略。
    :::
:::
::: orderedlist
**步骤**
1.  在 `/etc/ sudoers`{.literal}.d``{=html} 目录中为用户创建新的
    sudoers 文件：
    ``` screen
    # visudo -f /etc/sudoers.d/
    ```
    为保持 `sudoers`{.literal} 文件的组织，请 ``{.literal}
    替换为将分配给 `secadm`{.literal} 角色的 Linux 用户。
2.  在 `/etc/sudoers.d/`{.literal} 文件中添加以下内容：
    ``` screen
     ALL=(ALL) TYPE=secadm_t ROLE=secadm_r ALL
    ```
    此行授权所有主机上的 ``{.literal}
    用户执行所有命令，并默认将用户映射到 `secadm`{.literal} SELinux
    类型和角色。
3.  以 [*\*]{.emphasis} 用户身份登录：
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    为确保 SELinux 上下文（由 SELinux 用户、角色和类型组成），使用
    `ssh`{.literal}、控制台或 `xdm`{.literal} 登陆。`su`{.literal} 和
    `sudo`{.literal} 等其他方法无法更改整个 SELinux 上下文。
    :::
4.  验证用户的安全上下文：
    ``` screen
    $ id
    uid=1000() gid=1000() groups=1000() context=staff_u:staff_r:staff_t:s0-s15:c0.c1023
    ```
5.  为 root 用户运行交互式 shell：
    ``` screen
    $ sudo -i
    [sudo] password for :
    ```
6.  验证当前用户的安全上下文：
    ``` screen
    # id
    uid=0(root) gid=0(root) groups=0(root) context=staff_u:secadm_r:secadm_t:s0-s15:c0.c1023
    ```
7.  从策略中禁用 `sysadm_secadm`{.literal} 模块：
    ``` screen
    # semodule -d sysadm_secadm
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    使用 `semodule -d`{.literal} 命令，而不是使用
    `semodule -r`{.literal}
    命令删除系统策略模块。`semodule -r`{.literal}
    命令从您的系统存储中删除模块，这意味着无法重新安装
    `selinux-policy-mls`{.literal} 软件包。
    :::
:::
::: orderedlist
**验证**
1.  作为分配给 `secadm`{.literal} 角色的用户，并在 root 用户的交互式
    shell 中验证您可以访问安全策略数据：
    ``` screen
    # seinfo -xt secadm_t
    Types: 1
       type secadm_t, can_relabelto_shadow_passwords, (...) userdomain;
    ```
2.  从 root shell 注销：
    ``` screen
    # logout
    ```
3.  登出 ``{.literal} 用户：
    ``` screen
    $ logout
    Connection to localhost closed.
    ```
4.  显示当前安全上下文：
    ``` screen
    # id
    uid=0(root) gid=0(root) groups=0(root) context=root:sysadm_r:sysadm_t:s0-s15:c0.c1023
    ```
5.  尝试启用 `sysadm_secadm`{.literal} 模块。该命令应该失败：
    ``` screen
    # semodule -e sysadm_secadm
    SELinux:  Could not load policy file /etc/selinux/mls/policy/policy.31:  Permission denied
    /sbin/load_policy:  Can't load policy:  Permission denied
    libsemanage.semanage_reload_policy: load_policy returned error code 2. (No such file or directory).
    SELinux:  Could not load policy file /etc/selinux/mls/policy/policy.31:  Permission denied
    /sbin/load_policy:  Can't load policy:  Permission denied
    libsemanage.semanage_reload_policy: load_policy returned error code 2. (No such file or directory).
    semodule:  Failed!
    ```
6.  尝试显示有关 `sysadm_t`{.literal} SELinux
    类型的详情。该命令应该失败：
    ``` screen
    # seinfo -xt sysadm_t
    [Errno 13] Permission denied: '/sys/fs/selinux/policy'
    ```
:::
:::
:::
[]{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html}
::: chapter
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux}第 7 章 使用多类别安全(MCS)进行数据保密性 {.title}
:::
您可以使用 MCS
通过分类数据来增强系统数据的机密性，然后授予某些进程和用户对特定类别的访问权限
::: section
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#con_multi-category-security-mcs_assembly_using-multi-category-security-mcs-for-data-confidentiality}多类别安全性(MCS) {.title}
:::
多类别
Security(MCS)是一个访问控制机制，它使用分配给进程和文件的类别。然后，文件只能由分配到相同类别的进程访问。MCS
的目的是维护您系统上的数据保密性。
MCS 类别由 `c0`{.literal} 到 `c1023`{.literal}
的值定义，但您也可以为每个类别或类别组合定义一个文本标签，如\"Personnel\"、\"ProjectX\"或\"ProjectX.Personnel\"。MCS
转换服务(`mcstrans`{.literal})随后将 category
值替换为系统输入和输出中的相应标签，以便用户可以使用这些标签而不是
category 值。
当用户分配给类别时，他们可以为他们分配的任何类别标记其任何文件。
MCS