Name Description
3PARA RAT 如果DES 解码失败，3PARA RAT 将使用从字符串HYF54 和％9
> ＆jkMCXuiS 派生的 8 字节XOR 密钥。
HAMMERTO SS
在附加到图像文件之前，HAMMERTOSS
命令使用由硬编码值和当天推文中包含的字符串组成的密钥加密。
要解密命令，调查员需要访问预期的恶意软件样本，当天的推文以及包含该命令的图
Lazarus Group
像文件。
一些Lazarus Group 恶意软件系列使用自定义代码加密C2
流量，该代码使用带有ADD 操作的XOR 和带有SUB 操作的XOR。 另一个Lazarus
Group 恶意软件样本XORs C2 流量。
Lazarus Group 恶意软件还使用一种称为FakeTLS
的独特形式的通信加密模仿TLS，但使用不同的加密方法，避免了SSL
中间人解密攻击。
Mosquito Mosquito 使用自定义加密算法，该算法由XOR 和类似于Blum Blum Shub
算法的流组成。
3.  、Detection
> 如果恶意软件使用带有对称密钥的自定义加密，则可以从样本中获取算法和密钥，并使用它们来解码网络流量以检测恶意软件通信签名。
>
> 通常，分析网络数据以寻找不常见的数据流（例如，客户端发送的数据明显多于从服务器接收的数据）。
> 利用通常不具有网络通信或从未见过的网络的过程是可疑的。
> 分析数据包内容以检测通信何时不遵循正在使用的端口的预期协议行为。
链接：[Custom Cryptographic
Protocol](https://attack.mitre.org/techniques/T1024/)
## 、数据编码
> 使用标准数据编码系统对命令和控制（C2）信息进行编码。
> 数据编码的使用可以遵循现有协议规范，并且包括使用ASCII，Unicode，
> Base64，MIME，UTF-8 或其他二进制到文本和字符编码系统。
> 某些数据编码系统也可能导致数据压缩，例如gzip。
1.  、 Mitigations Mitigation Description
Network Intrusion Prevention
使用网络签名来识别特定恶意软件的流量的网络入侵检测和防御系统可用于缓解网络级别的活动。
签名通常用于协议内的唯一指示符，并且可以基于特定对手或工具使用的特定混淆技术，并且可能在各种恶意软件系列和版本之间不同。
攻击者可能会随着时间的推移改变工具C2
签名或构建协议，以避免被常见的防御工具检测到。
2.  、Examples
Name Description
Banksho t
Bankshot 使用一系列字符和gzip 对来自控制服务器的命令进行编码。
BS2005 BS2005 使用Base64 编码进行HTTP 请求的消息体中的通信。
Helmint h
对于基于HTTP 的C2，Helminth 使用base64 对数据进行编码，并通过HTTP
请求的"Cookie"字段发送。 对于基于DNS 的C2，Helminth将ASCII
字符转换为十六进制值，并以明文形式发送数据。
3.  、Detection
> 分析不常见数据流的网络数据（例如，客户端发送的数据明显多于从服务器接收的数据）。
> 利用通常不具有网络通信或从未见过的网络的过程是可疑的。
> 分析数据包内容以检测不遵循正在使用的端口的预期协议行为的通信。
链接：[Data Encoding](https://attack.mitre.org/techniques/T1132/)
## 、数据混淆
> 命令和控制（C2）通信被隐藏（但不一定是加密的）以试图使内容更难以发现或解密，并使通信不那么显眼并使命令不被看到。
> 这包括许多方法，例如将垃圾数据添加到协议流量，使用隐写术，将合法流量与C2
> 通
>
> 信流量混合，或使用非标准数据编码系统，例如针对HTTP
> 请求的消息体的修改的Base64 编码。
1.  、Mitigations
Mitigation Description
网络入侵防御
使用网络签名来识别特定恶意软件的流量的网络入侵检测和防御系统可用于缓解网络级别的某些混淆活动。
2.  、Examples
Name Description
APT28 APT28
为每个编码字符串添加了"垃圾数据"，防止了在不知道垃圾清除算法的情况下进行简单解码。
每个植入物在创建时都被赋予"垃圾长度"值，由控制器软件跟踪以允许无缝通信但是阻止分析线上的命令协议。
Axiom xiom
小组使用了其他形式的混淆，包括将合法流量与通信流量混合在一起，以使网络流看起来合法。
Axiom 使用的一些恶意软件也使用隐写术来隐藏PNG 图像文件中的通信。
Backdoor.Oldr ea
一些Backdoor.Oldrea 样本使用标准Base64 + bzip2，有些使用标准Base64
+反向XOR + RSA-2048 来解密从C2 服务器接收的数据。
BACKSPACE 较新的BACKSPACE 变体将使用自定义系统对C2 通信进行编码。
3.  、Detection
> 分析不常见数据流的网络数据（例如，客户端发送的数据明显多于从服务器接收的数据）。
> 利用通常不具有网络通信或从未见过的网络的过程是可疑的。
> 分析数据包内容以检测不遵循正在使用的端口的预期协议行为的通信。
链接：[Data Obfuscation](https://attack.mitre.org/techniques/T1001/)
## 、域面对
> 域前端利用内容交付网络（CDN）中的路由方案和托管多个域的其他服务来混淆HTTPS
> 流量的预期目标或通过HTTPS 隧道传输的流量。 \[1\]该技术涉及在TLS
> 头的SNI 字段和HTTP 头的主机字段中使用不同的域
>
> 名。 如果两个域都是从同一CDN 提供的，则CDN 可能会在解包TLS
> 标头后路由到HTTP 标头中指定的地址。
> 该技术的一种变体，即"无域"前端，利用留空的SNI 字段; 即使CDN
> 尝试验证SNI 和HTTP 主机字段是否匹配（如果忽略空白SNI
> 字段），这可能允许前端工作。
例如，如果domain-x 和domain-y 是同一CDN 的客户，则可以将domain-x 放在TLS
头中，将domain-y 放在HTTP 头中。 流量似乎将转到domain-x，但CDN
可能会将其路由到域-y。
1.  、Mitigations
Mitigation Description
执行预防
为了使用域前端，攻击者可能需要为受感染的系统部署其他工具。可以通过应用程序白名单来防止安装这些工具。
SSL / TLS
检查
如果可以检查HTTPS 流量，则可以针对看起来像域前端的连接分析捕获。
2.  、Examples
Name Description
APT2 9
APT29 使用Tor 的温顺域前端插件来隐藏C2 流量的目的地。
meek meek 使用Domain Fronting
将网络流量的目的地伪装成与预期的desitnation
在同一内容交付网络（CDN）中托管的另一个服务器。
3.  、Detection
> 如果SSL 检查到位或流量未加密，则可以检查HTTP 标头的主机字段是否与HTTPS
> SNI 匹配，还是与域名黑名单或白名单匹配。
链接：[Domain Fronting](https://attack.mitre.org/techniques/T1172/)
## 、域生成算法
> 攻击者可以利用域生成算法（DGAs）动态识别命令和控制流量的目的
> 地，而不是依赖于静态IP 地址或域列表。 这样做的好处是使防御者更难
>
> 以阻止，跟踪或接管命令和控制通道，因为恶意软件可能有数千个域可以检查指令。
> 当通过生成每个字母构造域名时，DGA
> 可以采用明显随机或"乱码"字符串（例如：istgmxdejdnxuyla.ru）的形式。
> 或者，一些DGA
> 通过将单词连接在一起而不是字母来使用整个单词作为单元（例如：
> cityjulydish.net）。 许多DGA
> 都是基于时间的，为每个时间段（每小时，每天，每月等）生成不同的域。
> 其他人也将种子价值纳入其中，以便为防御者预测未来的领域更加困难。
> 攻击者可以使用DGAs 来实现后备频道。
> 当主命令和控制服务器失去联系时，恶意软件可能会使用DGA
> 作为重新建立命令和控制的手段。
1.  、Mitigations
Mitigation Description
网络入侵防御
使用网络签名来识别特定恶意软件的流量的网络入侵检测和防御系统可用于缓解网络级别的活动。
恶意软件研究人员可以对使用DGA
的恶意软件变体进行反向工程，并确定恶意软件将尝试联系的未来域，但这是一项耗费时间和资源的工作。
恶意软件也越来越多地结合了每个实例可能唯一的种子值，然后需要确定这些种子值以提取未来生成的域。
在某些情况下，可以从DNS 流量中提取特定样本使用的种子。
即便如此，每天可能会产生数千个可能的域名; 这使
限制基于Web 的内容
得防御者由于成本而抢先注册所有可能的C2 域是不切实际的。
在某些情况下，可以使用本地DNS sinkhole 来帮助以更低的成本防止基于DGA
的命令和控制。
2.  、Examples
Name Description
BONDUPDATE R
BONDUPDATER 使用DGA 与命令和控制服务器通信。
CCBkdr 如果与主命令和控制服务器的通信丢失，CCBkdr 可以将DGA
用于后备通道。
CHOPSTICK CHOPSTICK 可以使用DGA
作为后备通道，通过连接列表中的单词生成域。
Ebury Ebury 使用DGA 为C2 生成域名。
POSHSPY POSHSPY 使用DGA 从单词列表中派生命令和控制URL。Ursnif Ursnif
使用DGA 为C2 生成域名。
3.  、Detection
> 由于不同DGA
> 算法的数量，不断发展的恶意软件系列以及算法的复杂性日益增加，检测动态生成的域可能具有挑战性。
> 有许多方法可以检测伪随机生成的域名，包括使用频率分析，马尔可夫链，熵，字典词的比例，
> 元音与其他字符的比例等等。由于域名的格式，CDN 域可能会触发这些检测。
> 除了基于名称检测DGA
> 域之外，用于检测可疑域的另一种更通用的方法是检查最近注册的名称或者很少访问的域。
>
> 已经开发出用于检测DGA 域的机器学习方法，并且已经在应用中取得了成功。
> 一种方法是使用N-Gram 方法来确定域名中使用的字符串的随机性分数。
> 如果随机性得分较高，并且域名未列入白名单（CDN
> 等），则可以确定域名是否与合法主机或DGA 相关。\[13\]
> 另一种方法是使用深度学习将域分类为DGA 生成。
链接：[Domain Generation
Algorithms](https://attack.mitre.org/techniques/T1483/)
## 、后备通道
> 如果主要信道被泄露或不可访问，攻击者可以使用回退或备用通信信道，
> 以便维持可靠的命令和控制并避免数据传输阈值。
1.  、Mitigations
Mitigation Description
网络入侵防御
使用网络签名来识别特定恶意软件的流量的网络入侵检测和防御系统可用于缓解网络级别的活动。
签名通常用于协议内的唯一指示符，并且可以基于特定对手或工具使用的特定协议，并且可能在各种恶意软件系列和版本之间不同。
攻击者可能会随着时间的推移改变工具C2
签名或构建协议，以避免被常见的防御工具检测到。
2.  、Examples
Name Description
BISCUIT BISCUIT
恶意软件包含在主命令和控制服务器之后联系的辅助回退命令和控制服务器。
BlackEnergy BlackEnergy 可以通过plus.google.com 通过备份渠道进行通信。
Cardinal RAT
Cardinal RAT 可以通过多个C2 主机和端口组合进行通信。
CHOPSTICK 如果当前的C2 频道被破坏，CHOPSTICK 可以切换到新的C2 频道。
Derusbi Derusbi 使用带有HTTP 信标的备份通信方法。
DustySky DustySky 有两个用于C2 服务器的硬编码域;
如果第一个没有回应，它会尝试第二个。
HOPLIGHT 如果一个失败，HOPLIGHT 有多个C2 通道。
JHUHUGIT JHUHUGIT 测试它是否可以通过首先尝试直接连接到达其C2
服务器，如果它失败，获取代理设置并通过代理发送连接，最后如果代理方法失败则将代码注入正在运行的浏览器。
Kazuar Kazuar 可以接受C2 服务器的多个URL。
Kwampirs Kwampirs 使用大量的C2 服务器循环，直到建立成功的连接。
Lazarus Group
Lazarus Group 恶意软件SierraAlfa 将数据发送到随机选择的硬编码C2
服务器之一，如果传输失败，则选择新的C2 服务器再次尝试传输。
Linfo Linfo 创建了一个后门程序，远程攻击者可以通过该后门程序更改C2
服务器。
MiniDuke 如果通过Twitter 的主要C2 方法不起作用，MiniDuke
使用谷歌搜索来识别C2 服务器。
MIS-Type Mis-Type 首先尝试在C2 的原始TCP 套接字上使用Base64
编码的网络协议，如果该方法失败，则回退到基于HTTP 的辅助协议以与备用C2
服务器通信。
NETEAGLE NETEAGLE 将尝试检测受感染的主机是否配置为代理。
如果是这样，NETEAGLE 将通过HTTP POST 请求发送信标; 否则它将通过UDP /
6000 发送信标。