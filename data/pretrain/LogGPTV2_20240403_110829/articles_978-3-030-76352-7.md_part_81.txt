Initiallythisdatasethas45networkattributesasfeatures.Sincethedeployment
ofintrusiondetectioninnetworklayerrequireslessspaceitisnecessarytoimple-
mentfeaturereductiontechnique.Byusingthecorrelationbasedattributeeval-
uator along with greedy hill climbing search method, the number of attributes
540 M. Shobana and S. Poonkuzhali
Table 2. Hyperparameters values for deep learning model
Class Number of instances
Before sampling After sampling
DDoS HTTP 989 600
TCP 348751 209249
UDP 576884 345592
DoS HTTP 8 3
TCP 10 7
UDP 650260 389968
Service scan 73168 44176
OS fingerprinting 17914 10641
Data exfiltration 6 3
Keylogging 73 49
has been reduced to 6. The reduced features are pkseqid (Row identifier), stime
(Record Start Time), dport (destination port number), state number (Numer-
ical representation of feature state), ltime (Record last time), TnP PerProto
(Total number of packets per protocol). Here not all the features were extracted
out of 10 features. Only three of the features such as stime, state number, ltime
are in common and the remaining three features were new not from previously
extracted 10 features.
Afterthereductionoffeatureset,theinstancesofnetworktrafficarenormal-
ized by Min-Max normalization technique to ease the process of classification.
N −min
N(cid:3) (max(cid:3)−min(cid:3) )+min(cid:3)
= (1)
max−min
Using Eq. (1) min-max normalization has been calculated for all values in the
dataset to scale in the range of [0 1]. Whereas max, min are considered to be
initial value and the variables max’, min’ are considered as newly calculated
instance.
5.3 Classification Phase
In this stage, three most familiar machine learning classifiers (Support vector
Machine, Decision Tree (j48) and Naive Bayes) and one deep learning network
(Deep neural network) for intrusion detection system was used. In order to test
theefficiencyofthesealgorithm,itisusedinthreedifferentways,theyaregiven
below:
1. All the instance is broadly classified into normal/Attack (Binary Classifica-
tion)
2. All the instance were classified into DDoS, DoS, Theft, Reconssaince, and
Normal (Mulitclass Classification-category wise)
IoT Botnet Detection Using Balanced Network Traffic Attributes 541
3. All the instance were classified into DDoS TCP, DDoS UDP, DDoS HTTP,
DoS HTTP, DoS UDP, DoS TCP, OS Fingerprint, service scan, Data exfil-
tration,KeyloggingandNormal(MulitclassClassification-subcategorywise)
Afterthesetrainingandtestingphase,amongthesethreeclassifieroneofthe
best classifier will be chosen based on its performance on IoT network data.
6 Results and Discussion
The proposed model was implemented on a Core i3 Laptop with 2.30GHz CPU
and 4 GB RAM using Rstudio version 3.5.1 software environment. In the origi-
nal dataset, the whole generated traffic is split into five bins for the case of easy
accessibility. Among the five bins 2 million of records has been chosen in such a
waythatrecordscontainsallvarietiesofattackinstancesthenitiscombinesinto
singlenetworktrafficdataset.Onthatcombineddatasetthesamplingtechniqueis
doneusingROSE(RandomoverSamplingExamples)packageinR.Inthispack-
agebothundersamplingandoversamplinghasbeendoneatthesametime.After
sampling6featuresisextractedfromthebalanceddatasetforclassification.
6.1 Evaluation of Classifiers
Theperformanceofthreeclassifiershasbeencalculatedusingthefollowingmet-
rics.
True Positive (TP) denotes that attack instances is correctly predicted as
attack.
True Negative (TN) denotes that normal instances is correctly predicted as
normal.
False Positive (FP) denotes that normal behavior is wrongly detected as
attack.
False Negative (FN) denotes that attack behavior is wrongly detected as
normal.
Accuracy. The accuracy of the classifier can be defined as the total number of
correctly predicted instance in the given dataset is shown in Eq.(2)
TP +TN
Accuracy = (2)
TP +TN +FP +FN
Precision. The Precision can be termed as the ability of the classifier should
correctly label the malicious traffic as attack is shown in Eq.(3)
TP
Precision= (3)
TP +FP
Recall or Detection Rate. Recall or Detection rate can be defined as the
number of correctly detected attack traffic connections is shown in Eq.(4)
TP
Recall= (4)
TP +FN
542 M. Shobana and S. Poonkuzhali
F-Measure. F-measure can be defined as the weighted harmonic mean of pre-
cision and recall is shown in Eq.(5)
precision∗recall
F −measure=2∗ (5)
precision+recall
Response Time. The total time taken by the classifier to build the model
accurately.
Error Rate. The error rate of the classifier is the ratio between total numbers
of incorrectly classified instance to the total number of instances is shown in
Eq.(6)
FP +FN
Errorrate= (6)
TP +TN +FP +FN
False Alarm Rate. False alarm rate can be defined as the number of normal
traffic is incorrectly detected as malicious traffic is shown in Eq.(7)
FP
Falsealarmrate= (7)
TN +FP
Table3 illustrates the quality metrics of the classifiers for three kinds of
classification.FromthisanalysisitisproventhatDecisiontree(j48)outperforms
than the other two classifiers such as SVM and Na¨ıve Bayes for three types
of classification in terms of its accuracy, Response time and false alarm rate.
NaiveBayesandSVMstandsinsamepositionintheirperformance.Whileusing
full features also high performance is achieved in terms of accuracy but when
comparingfalsealarmrateandresponsetimeisveryhigh,itshowsthatminority
class(normal)isnotdetectedbytheclassifierduetotheclassimbalanceproblem
in the original dataset. By using 10 features only decision tree alone is capable
to perform well but in the case of 6 reduced features all the three classifiers able
toperformwell.TheresponsetimetakenbySVMtobuildmodelisquitehigher
than the other two classifiers. It is also shown that the false alarm rate for 10
featuresisliesbetween0to0.006whereasthereducedfeaturesproducethefalse
alarm rate from 0 to 0.001. So it is very easy to conclude that 6 effective feature
capable to perform well for the three classifiers at low false alarm rate.
The values taken from Fig.2 used to calculate the error rate for this work.
The value of error rate is comparatively low for this work when compared to
thepreviouswork[13].Thisimprovementisachievedbythesamplingtechnique
to overcome the problem of class imbalance. This enhances the higher detection
rate of minority class (i.e.) normal traffic instances given in the BoTIot dataset.
The existing of class imbalance problem tends to detect the normal traffic as
malicious one, this will be the serious in IoT kind of environment and it is
overcome in this work using sampling techniques. Since the feature extraction
phase was done after the sampling process, it extracted only minimum number
of features.
IoT Botnet Detection Using Balanced Network Traffic Attributes 543
mrala
eslaF
etar 65.0 45.0 57.0 06.0 57.0 65.0 17.0 98.0
esnopseR 55.54301 87.54321 98.74531 66.86751 55.98761 87.99841 99.98751
4.78851
emit 65.0
serutaef
ycaruccA 98.76741
789.0 889.0 099.0 889.0 999.0 999.0 899.0 099.0
lluF
serutaef
mrala
fo eslaF 100.0 100.0 100.0 899.0 100.0
etar
stes
0 0 0 0
tnereffid esnopseR
14.1363 17.0559
65.41 74.46 100.0 21.21 47.84
emit 32.3 33.6
rof serutaef
ycaruccA
noitaulave 10.3737 3009.99
26.99 09.99 29.99 09.99 99.99
001 001
01
mrala
ecnamrofreP
467.99
eslaF 200.0 400.0 600.0 600.0
etar
0 0 0 0
esnopseR
.3
54.5236 32.1973
88.381
elbaT 41.15 69.92 20.83
emit 9.96 58.5
0
06.0644
serutaef noitacfiissalc
ycaruccA
noitacfiissalc
26.99 87.99 78.99 66.99 58.99 66.99
noitacfiissalc 001 001 001
6
EERT EERT EERT
esiw
SEYAB SEYAB SEYAB
esiw
yrogetacbuS
NOISICED NOISICED NOISICED
ssalc yrogetaC
dohteM EV¨IAN EV¨IAN EV¨IAN
owT MVS MVS MVS
544 M. Shobana and S. Poonkuzhali
Fig.2. Performance analysis of three classifiers for 10 features vs 6 features
Table 4. Performance evaluation of deep neural network
Type of classification Accuracy Precision Recall F1 measure
Binary classification 99.99 0.998 0.997 99.9
Category classification 99.99 0.999 0.999 0.999
Sub category classification 99.88 0.998 0.998 0.998
IoT Botnet Detection Using Balanced Network Traffic Attributes 545
Table4describesabouttheperformanceofthedeepneuralnetworkinterms
ofaccuracy,precision,recallandF1-measure.Byexploringthesevaluesitshows
that due to sampling traditional machine learning techniques becomes overfit
model, so by deploying deep learning technique this problem has been avoided.
Table5describesabouttheadditionalmetricsusedforevaluatingthemulticlass
classification.
Table 5. Detailed evaluation of deep neural network for multiclass classification
Class TPR FPR FNR FDR TNR
Normal 1.000 0.999 0.0001 0.0001 0.00926
DDoS 1.000 0.999 0.0001 0.0001 0.0001
DoS 0.999 1.000 0.0001 0.0001 0.0001
Theft 0.992 1.000 0.0001 0.0001 0.0001
Reconssaince 0.999 1.000 0.0001 0.0001 0.0001
Fig.3. Comparison of false alarm rate of various methods using BoTIoT
In Table6 compares the accuracy of the proposed work with existing work
and it proves that the accuracy value of this work is predominately high and
theerrorrateiscomparativelylowwhencomparestotheexistingsolution.This
provestheefficiencyofthedesignedsolutionisreliablefortheIoTenvironment.
In Fig.3, the false alarm rate of existing methods using imbalanced dataset is
compared with this proposed work designed using balanced dataset. It shows
the importance of sampling technique by producing low false alarm rate than
the existing model.
546 M. Shobana and S. Poonkuzhali
Table 6. Comparative summary of proposed work with existing work
AuthorandYear Methodology Accuracy(%)
Existingwork Moustafaetal.[17]and2018 DecisionTree 95.32
Na¨ıveBayes 91.17
ArtificialNeuralNetwork 92.61
Ensemble(Adaboost) 99.54
Koroniotisetal.[10]and2017 ARM 86.45
DecisionTree 93.23
Na¨ıveBayes 72.73
ArtificialNeuralNetwork 63.97
Ibitoyeetal.[9]and2019 FeedforwardNeuralNetwork 95.10
Dombetal.[21]and2017 RandomForest 95
Nommetal.[18]and2018 IsolationForest 86.18
SupportVectorMachine 95.65
Hodoetal.[8]and2016 ArtificialNeuralNetwork 99.4
Pajouhetal.[19]and2016 k-nearestneighboralgorithmwithNaive 84.82
Bayes
Alghuried[1]and2017 DecisionTree 97
Bezerraetal.[5]and2018 Oneclasssupportvectormachine 96.65to99.33
Kumaretal.[12]and2019 RandomForest 88.8
k-nearestneighboralgorithm 94.44
GaussianNa¨ıveBayes 77.78
Proposedwork Shobanaetal. SVM(BinaryClassification) 99.62
SVM(CategorywiseClassification) 99.92
SVM(SubCategorywiseClassification) 99.76
Naivebayes(BinaryClassification) 99.90
Naivebayes(CategoryClassification) 99.90
Naivebayes(SubCategoryClassification) 99.90
DecisionTree(BinaryClassification) 100
DecisionTree(CategoryClassification) 99.99
DecisionTree(SubcategoryClassification) 100
7 Conclusion
In this work, the class imbalance problem has been identified in the real time
dataset of IoT device namely Bot IoT dataset. Furthermore this problem has
been rectified using sampling techniques in an efficient manner. The ability of
the balanced dataset has been tested by using three major machine learning