invalidate any of the results of our analysis.
6 Related Work on WPA2 Veriﬁcation
As stated in the introduction, the WPA2 handshake has re-
ceived surprisingly little academic veriﬁcation effort com-
pared to other widely-deployed security protocols. The
notable example is [18], in which the authors study the
IEEE 802.11i and TLS handshakes in a version of the so-
called protocol composition logic (PCL) framework.
They consider IEEE 802.11i in the scenario where TLS is
used to set up a shared secret, and model simpliﬁed versions
of the TLS 1.2 protocol (with four messages), the four-way
handshake, and the group key handshake. They model each
protocol as a straight-line protocol, therefore omitting many
transitions present in the real state machines. They then show
invariants for the three protocols and a composition result that
these invariants are maintained by the composition. Based on
this, they report a number of results, including authentication
and conﬁdentiality of the established session keys.
The KRACK attacks cannot be discovered in their approach
for multiple reasons: (i) they do not explicitly consider prop-
erties of the symmetric encryption layer; (ii) they only model
the group-key sequence number but none of the other counters,
and state an invariant that the group-key number monotoni-
cally increases (which does not hold for standard-compliant
implementations); and (iii) their straight-line models omit the
complex transitions in the standard that enable counter resets.
Any one of these three simpliﬁcations independently excludes
the original KRACK attacks. Furthermore, since they do not
model sleep frames, the later attack variants based on sleep
frames are also not considered.
In contrast, our analysis models all of these aspects. As
a result we can detect all these attacks as well as prove that
countermeasures guarantee their absence and that of a much
larger class of attacks.
7 Conclusion
In this work, we have provided the ﬁrst formal security ar-
gument, in any formalism, that the patched versions of IEEE
802.11’s WPA2 indeed meet their core security requirements
in the face of complex attacks.
Our model includes all the interactions between a series of
complex components, and it also incorporates ﬁne-grained
properties of the symmetric encryption channel, which allows
us to capture attacks such as the KRACK attacks.
While our model was initially motivated by the KRACK
attacks and their variants, it is not tailored speciﬁcally to those
attack traces. Instead, our model systematically captures com-
plex aspects of the WPA2 protocol, both in terms of scope
(including various modes and WNM/sleep frames) and depth
(modeling the nonce-reuse weakness of the underlying ci-
phers) in the face of a powerful attacker. Our proofs therefore
show the absence of a large class of systematically deﬁned
attacks that include, but go well beyond, the KRACK attacks.
Of course, WPA2 still allows for off-line guessing attacks,
but this is a fundamental property of its protocol design. Such
attacks ought to be prevented by the WPA3 protocol, which
follows a very different design. Initial analysis work on WPA3
has started [31] and indeed, its design seems more amenable
to cryptographic analysis. We are therefore hopeful that our
analysis approach can be extended to WPA3 in the near future.
References
for
information
and
[1] IEEE
standard
information
technology—
telecommunications
exchange
between systems local and metropolitan area networks—
speciﬁc requirements - part 11: Wireless LAN medium
access control (MAC) and physical
layer (PHY)
IEEE Std 802.11-2016 (Revision of
speciﬁcations.
IEEE Std 802.11-2012), pages 1–3534, Dec 2016.
[2] Joël Alwen, Sandro Coretti, and Yevgeniy Dodis. The
Double Ratchet: Security Notions, Proofs, and Modu-
larization for the Signal Protocol. In EUROCRYPT (1),
volume 11476 of Lecture Notes in Computer Science,
pages 129–158. Springer, 2019.
[3] David A. Basin, Jannik Dreier, Lucca Hirschi, Sasa
Radomirovic, Ralf Sasse, and Vincent Stettler. A Formal
Analysis of 5G Authentication. In Proceedings of the
14    29th USENIX Security Symposium
USENIX Association
2018 ACM SIGSAC Conference on Computer and Com-
munications Security, CCS 2018, Toronto, ON, Canada,
October 15-19, 2018, pages 1383–1396. ACM, 2018.
[4] Gal Beniamini. Over The Air: Exploiting Broadcom’s
Wi-Fi Stack, 2017. Retrieved Feb 2020 from https:
//googleprojectzero.blogspot.be/2017/04/
over-air-exploiting-broadcoms-wi-fi_4.html.
[5] Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine
Delignat-Lavaud, Cédric Fournet, Markulf Kohlweiss,
Alfredo Pironti, Pierre-Yves Strub, and Jean Karim
Zinzindohoue. A messy state of the union: Taming
the composite state machines of TLS. In IEEE Sym-
posium on Security and Privacy, pages 535–552. IEEE
Computer Society, 2015.
[6] Karthikeyan Bhargavan, Bruno Blanchet, and Nadim
Kobeissi. Veriﬁed models and reference implementa-
tions for the TLS 1.3 standard candidate. In IEEE Sym-
posium on Security and Privacy, pages 483–502. IEEE
Computer Society, 2017.
[7] Bruno Blanchet. Composition theorems for CryptoVerif
and application to TLS 1.3. In CSF, pages 16–30. IEEE
Computer Society, 2018.
[8] Nikita Borisov, Ian Goldberg, and David A. Wagner.
Intercepting mobile communications: the insecurity of
802.11. In MobiCom, pages 180–189. ACM, 2001.
[9] Laurent Butti and Julien Tinnés. Discovering and ex-
ploiting 802.11 wireless driver vulnerabilities. Journal
in Computer Virology, 4(1):25–37, 2008.
[10] Aldo Cassola, William K. Robertson, Engin Kirda, and
Guevara Noubir. A practical, targeted, and stealthy at-
tack against WPA enterprise authentication. In NDSS.
The Internet Society, 2013.
[11] Katriel Cohn-Gordon, Cas J. F. Cremers, Benjamin
Dowling, Luke Garratt, and Douglas Stebila. A For-
mal Security Analysis of the Signal Messaging Protocol.
In EuroS&P, pages 451–466. IEEE, 2017.
[12] Cas Cremers and Martin Dehnel-Wild. Component-
Based Formal Analysis of 5G-AKA: Channel Assump-
tions and Session Confusion. In NDSS. The Internet
Society, 2019.
[13] Cas Cremers, Marko Horvat, Jonathan Hoyland, Sam
Scott, and Thyla van der Merwe. A comprehensive sym-
bolic analysis of TLS 1.3. In Proceedings of the 2017
ACM SIGSAC Conference on Computer and Communi-
cations Security, CCS 2017, Dallas, TX, USA, October
30 - November 03, 2017, pages 1773–1788. ACM, 2017.
[14] Cas Cremers, Benjamin Kiesl, and Niklas Medinger. A
formal analysis of IEEE 802.11’s WPA2: models and
proofs. https://cispa.saarland/group/cremers/
tools/tamarin/WPA2/index.html.
[15] Benjamin Dowling, Marc Fischlin, Felix Günther, and
Douglas Stebila. A cryptographic analysis of the TLS
1.3 handshake protocol candidates. In ACM Conference
on Computer and Communications Security, pages 1197–
1210. ACM, 2015.
[16] ESET Experimental Research and Detection Team.
Kr00k, a serious vulnerability deep inside Wi-Fi en-
cryption. https://www.eset.com/int/kr00k/. Ac-
cessed: 2010-06-08.
[17] Finn Michael Halvorsen, Olav Haugen, Martin Eian,
and Stig Fr. Mjølsnes. An improved attack on TKIP. In
NordSec, volume 5838 of Lecture Notes in Computer
Science, pages 120–132. Springer, 2009.
[18] Changhua He, Mukund Sundararajan, Anupam Datta,
Ante Derek, and John C. Mitchell. A modular correct-
ness proof of IEEE 802.11i and TLS. In ACM Confer-
ence on Computer and Communications Security, pages
2–15. ACM, 2005.
[19] Antoine Joux.
Authentication failures in NIST
version of GCM. 2006. Retrieved 01/23/2020 from
https://csrc.nist.gov/csrc/media/projects/
block-cipher-techniques/documents/bcm/
joux_comments.pdf.
[20] Eduardo Novella Lorente, Carlo Meijer, and Roel Ver-
dult. Scrutinizing WPA2 password generating algo-
rithms in wireless routers. In WOOT. USENIX Associa-
tion, 2015.
[21] Gavin Lowe. A hierarchy of authentication speciﬁca-
tions. In 10th Computer Security Foundations Workshop
(CSFW ’97), June 10-12, 1997, Rockport, Massachusetts,
USA, pages 31–44. IEEE Computer Society, 1997.
[22] Simon Meier. Advancing Automated Security Protocol
Veriﬁcation. PhD thesis, ETH Zürich, 2013.
[23] Simon Meier, Benedikt Schmidt, Cas Cremers, and
David A. Basin. The TAMARIN prover for the sym-
bolic analysis of security protocols. In CAV, volume
8044 of Lecture Notes in Computer Science, pages 696–
701. Springer, 2013.
[24] Kenneth G. Paterson, Bertram Poettering, and Jacob
Plaintext recovery attacks against
C. N. Schuldt.
In FSE, volume 8540 of Lecture Notes
WPA/TKIP.
in Computer Science, pages 325–349. Springer, 2014.
USENIX Association
29th USENIX Security Symposium    15
[25] Adam Stubbleﬁeld, John Ioannidis, and Aviel D. Rubin.
Using the Fluhrer, Mantin, and Shamir Attack to Break
WEP. In NDSS. The Internet Society, 2002.
[26] Erik Tews and Martin Beck. Practical attacks against
WEP and WPA. In WISEC, pages 79–86. ACM, 2009.
[27] Erik Tews and Martin Beck. Practical attacks against
WEP and WPA. In David A. Basin, Srdjan Capkun, and
Wenke Lee, editors, Proceedings of the Second ACM
Conference on Wireless Network Security, WISEC 2009,
Zurich, Switzerland, March 16-19, 2009, pages 79–86.
ACM, 2009.
[28] Mathy Vanhoef and Frank Piessens. Predicting, decrypt-
ing, and abusing WPA2/802.11 group keys. In USENIX
Security Symposium, pages 673–688. USENIX Associa-
tion, 2016.
[29] Mathy Vanhoef and Frank Piessens. Key reinstallation
attacks: Forcing nonce reuse in WPA2. In Bhavani M.
Thuraisingham, David Evans, Tal Malkin, and Dongyan
Xu, editors, Proceedings of the 2017 ACM SIGSAC Con-
ference on Computer and Communications Security,
CCS 2017, Dallas, TX, USA, October 30 - November 03,
2017, pages 1313–1328. ACM, 2017.
[30] Mathy Vanhoef and Frank Piessens. Release the Kraken:
New KRACKs in the 802.11 standard. In David Lie,
Mohammad Mannan, Michael Backes, and XiaoFeng
Wang, editors, Proceedings of the 2018 ACM SIGSAC
Conference on Computer and Communications Security,
CCS 2018, Toronto, ON, Canada, October 15-19, 2018,
pages 299–314. ACM, 2018.
[31] Mathy Vanhoef and Eyal Ronen. Dragonblood: A secu-
rity analysis of WPA3’s SAE handshake. IACR Cryptol-
ogy ePrint Archive, 2019:383, 2019.
[32] Stefan Viehböck.
Brute forcing Wi-Fi pro-
Retrieved Feb 2020 from
tected setup, 2011.
https://sviehb.files.wordpress.com/2011/12/
viehboeck_wps.pdf.
16    29th USENIX Security Symposium
USENIX Association
A General Overview and Helper Lemmas.
PTK Wellfoundedness
GTK Wellfoundedness
Supplicant Wellfoundedness
Authenticator Wellfoundedness
Supplicant Uniqueness and Ordering
Authenticator Uniqueness and Ordering
PMK Secrecy
PTK Nonce Uniqueness
GTK Nonce Uniqueness
PTK Secrecy
Injective Agreement
GTK Secrecy
Figure 7: Lemma Map.
In Figure 7 we provide an overview of the types of lemmas
that we use in our model. The core part our theory consists
of lemmas which we divide into so-called wellfoundedness
lemmas, uniqueness lemmas, and ordering lemmas. These
lemmas have two main purposes:
• Characterize invariants and entry points to loops in the
protocol execution.
• Help the prover with dismissing inconsistent execution
traces of a protocol as early as possible to make the proof
search tractable.
Wellfoundedness Lemmas The wellfoundedness lemmas
are required because of the looping behavior in WPA2: the
protocol speciﬁes that nearly all messages can be sent and
received multiple times in a loop. Since the Tamarin prover
reasons backwards from a given assumption, we have to guide
it with additional lemmas so that the backwards reasoning
doesn’t get stuck in a loop without ever exiting this loop again.
As a simple example, consider the following statement:
If a supplicant sent message 2, then it must have received
message 1 before. On an intuitive level, this statement is
clear. However, to prove this statement, Tamarin starts with
the assumption that the supplicant sent message 2, and then
reasons backwards, basically asking itself “What must have
happened before the supplicant sent message 2?” Because
WPA2 allows the supplicant to send message 2 multiple times,
the answer to the question involves the possibility that the
supplicant just sent message 2 before. Now if Tamarin asks
the same question again, the answer is again the same, and
the backwards reasoning goes into a loop, because it attempts
to consider all possible ﬁnite unrollings of the loop in which
the supplicant repeatedly sent message 2.
The solution to this problem is to specify a lemma that
basically says that there cannot be an inﬁnite loop in which the
supplicant repeatedly sends message 2, but that there must be
one initial point in time at which the supplicant sent message
2 for the ﬁrst time. Such a lemma can then be proved using
the induction technique of Tamarin.
The situation is similar for multiple four-way handshakes:
By specifying a corresponding wellfoundedness lemma, we
tell Tamarin that no matter how many four-way handshakes
were performed in a row, there must always be an initial four-
way handshake where things have started out. Finally, we also
need to specify invariants that hold at every iteration of a loop.
The sum of all these statements for all the possible loops in
the WPA2 model are our wellfoundedness lemmas.
Uniqueness and Ordering Lemmas When reasoning over
executions of a protocol, the set of possible execution traces
can quickly become gigantic, rendering the Tamarin prover
practically incapable of proving statements. One reason for
this is that in the most general case, the prover explores nu-
merous traces that eventually—after spending considerable
time building and analyzing these traces—turn out to be in-
consistent with the semantics of the protocol.
To guide the proof search by allowing the prover to dismiss
large sets of traces early on, we thus specify several unique-
ness lemmas that guarantee that certain actions in a protocol
can only happen once. Moreover, we specify ordering lem-
mas to impose order on actions. Together, these lemmas help
Tamarin to focus on traces that can actually happen and to ig-
nore the impossible ones as early on in the reasoning process
as possible.
USENIX Association
29th USENIX Security Symposium    17