### 6. Related Work on WPA2 Verification

As mentioned in the introduction, the WPA2 handshake has received surprisingly little academic verification effort compared to other widely-deployed security protocols. A notable example is the work by He et al. [18], where the authors analyze the IEEE 802.11i and TLS handshakes using a version of the protocol composition logic (PCL) framework.

In their study, they consider the scenario where TLS is used to establish a shared secret and model simplified versions of the TLS 1.2 protocol (with four messages), the four-way handshake, and the group key handshake. Each protocol is modeled as a straight-line protocol, omitting many transitions present in the real state machines. They then demonstrate invariants for the three protocols and show that these invariants are maintained in the composition. Based on this, they report several results, including the authentication and confidentiality of the established session keys.

However, their approach cannot detect the KRACK attacks for several reasons:
1. They do not explicitly consider properties of the symmetric encryption layer.
2. They only model the group-key sequence number but none of the other counters, and state an invariant that the group-key number monotonically increases, which does not hold for standard-compliant implementations.
3. Their straight-line models omit the complex transitions in the standard that enable counter resets.

Any one of these simplifications independently excludes the original KRACK attacks. Furthermore, since they do not model sleep frames, later attack variants based on sleep frames are also not considered.

In contrast, our analysis comprehensively models all these aspects, allowing us to detect all such attacks and prove that countermeasures guarantee their absence, as well as the absence of a much larger class of attacks.

### 7. Conclusion

In this work, we have provided the first formal security argument, in any formalism, that the patched versions of IEEE 802.11’s WPA2 meet their core security requirements in the face of complex attacks.

Our model includes all interactions between a series of complex components and incorporates fine-grained properties of the symmetric encryption channel, enabling us to capture attacks such as the KRACK attacks. While our model was initially motivated by the KRACK attacks and their variants, it is not tailored specifically to those attack traces. Instead, our model systematically captures complex aspects of the WPA2 protocol, both in terms of scope (including various modes and WNM/sleep frames) and depth (modeling the nonce-reuse weakness of the underlying ciphers) in the face of a powerful attacker. Our proofs, therefore, show the absence of a large class of systematically defined attacks that include, but go well beyond, the KRACK attacks.

Of course, WPA2 still allows for offline guessing attacks, which is a fundamental property of its protocol design. Such attacks should be prevented by the WPA3 protocol, which follows a very different design. Initial analysis work on WPA3 has started [31], and indeed, its design seems more amenable to cryptographic analysis. We are hopeful that our analysis approach can be extended to WPA3 in the near future.

### References

[1] IEEE. IEEE Standard for Information technology—Telecommunications and information exchange between systems local and metropolitan area networks—Specific requirements - Part 11: Wireless LAN medium access control (MAC) and physical layer (PHY) specifications. IEEE Std 802.11-2016 (Revision of IEEE Std 802.11-2012), pages 1–3534, Dec 2016.

[2] Joël Alwen, Sandro Coretti, and Yevgeniy Dodis. The Double Ratchet: Security Notions, Proofs, and Modularization for the Signal Protocol. In EUROCRYPT (1), volume 11476 of Lecture Notes in Computer Science, pages 129–158. Springer, 2019.

[3] David A. Basin, Jannik Dreier, Lucca Hirschi, Sasa Radomirovic, Ralf Sasse, and Vincent Stettler. A Formal Analysis of 5G Authentication. In Proceedings of the 29th USENIX Security Symposium, pages 1383–1396. ACM, 2018.

[4] Gal Beniamini. Over The Air: Exploiting Broadcom’s Wi-Fi Stack, 2017. Retrieved Feb 2020 from https://googleprojectzero.blogspot.be/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html.

[5] Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine Delignat-Lavaud, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Jean Karim Zinzindohoue. A messy state of the union: Taming the composite state machines of TLS. In IEEE Symposium on Security and Privacy, pages 535–552. IEEE Computer Society, 2015.

[6] Karthikeyan Bhargavan, Bruno Blanchet, and Nadim Kobeissi. Verified models and reference implementations for the TLS 1.3 standard candidate. In IEEE Symposium on Security and Privacy, pages 483–502. IEEE Computer Society, 2017.

[7] Bruno Blanchet. Composition theorems for CryptoVerif and application to TLS 1.3. In CSF, pages 16–30. IEEE Computer Society, 2018.

[8] Nikita Borisov, Ian Goldberg, and David A. Wagner. Intercepting mobile communications: the insecurity of 802.11. In MobiCom, pages 180–189. ACM, 2001.

[9] Laurent Butti and Julien Tinnés. Discovering and exploiting 802.11 wireless driver vulnerabilities. Journal in Computer Virology, 4(1):25–37, 2008.

[10] Aldo Cassola, William K. Robertson, Engin Kirda, and Guevara Noubir. A practical, targeted, and stealthy attack against WPA enterprise authentication. In NDSS. The Internet Society, 2013.

[11] Katriel Cohn-Gordon, Cas J. F. Cremers, Benjamin Dowling, Luke Garratt, and Douglas Stebila. A Formal Security Analysis of the Signal Messaging Protocol. In EuroS&P, pages 451–466. IEEE, 2017.

[12] Cas Cremers and Martin Dehnel-Wild. Component-Based Formal Analysis of 5G-AKA: Channel Assumptions and Session Confusion. In NDSS. The Internet Society, 2019.

[13] Cas Cremers, Marko Horvat, Jonathan Hoyland, Sam Scott, and Thyla van der Merwe. A comprehensive symbolic analysis of TLS 1.3. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017, pages 1773–1788. ACM, 2017.

[14] Cas Cremers, Benjamin Kiesl, and Niklas Medinger. A formal analysis of IEEE 802.11’s WPA2: models and proofs. https://cispa.saarland/group/cremers/tools/tamarin/WPA2/index.html.

[15] Benjamin Dowling, Marc Fischlin, Felix Günther, and Douglas Stebila. A cryptographic analysis of the TLS 1.3 handshake protocol candidates. In ACM Conference on Computer and Communications Security, pages 1197–1210. ACM, 2015.

[16] ESET Experimental Research and Detection Team. Kr00k, a serious vulnerability deep inside Wi-Fi encryption. https://www.eset.com/int/kr00k/. Accessed: 2010-06-08.

[17] Finn Michael Halvorsen, Olav Haugen, Martin Eian, and Stig Fr. Mjølsnes. An improved attack on TKIP. In NordSec, volume 5838 of Lecture Notes in Computer Science, pages 120–132. Springer, 2009.

[18] Changhua He, Mukund Sundararajan, Anupam Datta, Ante Derek, and John C. Mitchell. A modular correctness proof of IEEE 802.11i and TLS. In ACM Conference on Computer and Communications Security, pages 2–15. ACM, 2005.

[19] Antoine Joux. Authentication failures in NIST version of GCM. 2006. Retrieved 01/23/2020 from https://csrc.nist.gov/csrc/media/projects/block-cipher-techniques/documents/bcm/joux_comments.pdf.

[20] Eduardo Novella Lorente, Carlo Meijer, and Roel Verdult. Scrutinizing WPA2 password generating algorithms in wireless routers. In WOOT. USENIX Association, 2015.

[21] Gavin Lowe. A hierarchy of authentication specifications. In 10th Computer Security Foundations Workshop (CSFW ’97), June 10-12, 1997, Rockport, Massachusetts, USA, pages 31–44. IEEE Computer Society, 1997.

[22] Simon Meier. Advancing Automated Security Protocol Verification. PhD thesis, ETH Zürich, 2013.

[23] Simon Meier, Benedikt Schmidt, Cas Cremers, and David A. Basin. The TAMARIN prover for the symbolic analysis of security protocols. In CAV, volume 8044 of Lecture Notes in Computer Science, pages 696–701. Springer, 2013.

[24] Kenneth G. Paterson, Bertram Poettering, and Jacob C. N. Schuldt. Plaintext recovery attacks against WPA/TKIP. In FSE, volume 8540 of Lecture Notes in Computer Science, pages 325–349. Springer, 2014.

[25] Adam Stubblefield, John Ioannidis, and Aviel D. Rubin. Using the Fluhrer, Mantin, and Shamir Attack to Break WEP. In NDSS. The Internet Society, 2002.

[26] Erik Tews and Martin Beck. Practical attacks against WEP and WPA. In WISEC, pages 79–86. ACM, 2009.

[27] Erik Tews and Martin Beck. Practical attacks against WEP and WPA. In David A. Basin, Srdjan Capkun, and Wenke Lee, editors, Proceedings of the Second ACM Conference on Wireless Network Security, WISEC 2009, Zurich, Switzerland, March 16-19, 2009, pages 79–86. ACM, 2009.

[28] Mathy Vanhoef and Frank Piessens. Predicting, decrypting, and abusing WPA2/802.11 group keys. In USENIX Security Symposium, pages 673–688. USENIX Association, 2016.

[29] Mathy Vanhoef and Frank Piessens. Key reinstallation attacks: Forcing nonce reuse in WPA2. In Bhavani M. Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu, editors, Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017, pages 1313–1328. ACM, 2017.

[30] Mathy Vanhoef and Frank Piessens. Release the Kraken: New KRACKs in the 802.11 standard. In David Lie, Mohammad Mannan, Michael Backes, and XiaoFeng Wang, editors, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS 2018, Toronto, ON, Canada, October 15-19, 2018, pages 299–314. ACM, 2018.

[31] Mathy Vanhoef and Eyal Ronen. Dragonblood: A security analysis of WPA3’s SAE handshake. IACR Cryptology ePrint Archive, 2019:383, 2019.

[32] Stefan Viehböck. Brute forcing Wi-Fi protected setup, 2011. Retrieved Feb 2020 from https://sviehb.files.wordpress.com/2011/12/viehboeck_wps.pdf.

### A General Overview and Helper Lemmas

**Figure 7: Lemma Map**

In Figure 7, we provide an overview of the types of lemmas used in our model. The core part of our theory consists of lemmas, which we divide into wellfoundedness lemmas, uniqueness lemmas, and ordering lemmas. These lemmas serve two main purposes:

1. **Characterize invariants and entry points to loops in the protocol execution.**
2. **Help the prover dismiss inconsistent execution traces of a protocol as early as possible to make the proof search tractable.**

#### Wellfoundedness Lemmas

Wellfoundedness lemmas are necessary due to the looping behavior in WPA2, where nearly all messages can be sent and received multiple times in a loop. Since the Tamarin prover reasons backwards from a given assumption, we need to guide it with additional lemmas to prevent it from getting stuck in a loop without ever exiting.

For example, consider the statement: "If a supplicant sent message 2, then it must have received message 1 before." On an intuitive level, this is clear. However, to prove this, Tamarin starts with the assumption that the supplicant sent message 2 and then reasons backwards, asking, "What must have happened before the supplicant sent message 2?" Because WPA2 allows the supplicant to send message 2 multiple times, the answer involves the possibility that the supplicant just sent message 2 before. This can lead to a loop in the reasoning process.

The solution is to specify a lemma that states there cannot be an infinite loop in which the supplicant repeatedly sends message 2, but there must be an initial point in time when the supplicant sent message 2 for the first time. This lemma can be proved using Tamarin's induction technique.

Similar wellfoundedness lemmas are specified for multiple four-way handshakes, ensuring that no matter how many handshakes were performed, there must always be an initial handshake where things started out. Additionally, invariants that hold at every iteration of a loop are specified.

#### Uniqueness and Ordering Lemmas

When reasoning over protocol executions, the set of possible execution traces can quickly become enormous, making it difficult for Tamarin to prove statements. One reason is that the prover explores numerous traces that eventually turn out to be inconsistent with the protocol's semantics.

To guide the proof search and allow the prover to dismiss large sets of traces early, we specify several uniqueness lemmas that ensure certain actions in a protocol can only happen once. We also specify ordering lemmas to impose order on actions. Together, these lemmas help Tamarin focus on traces that can actually happen and ignore impossible ones as early as possible.