# ​【技术分享】逆向工具综述（上）
##### 译文声明
本文是翻译文章，文章来源：pelock.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
翻译：[overXsky](http://bobao.360.cn/member/contribute?uid=858486419)
预估稿费：200RMB（不服你也来投稿啊！）
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
传送门：[【逆向工具综述（下）】](http://bobao.360.cn/learning/detail/3307.html)
**前言**
本文主要列举了在逆向工程中经常用到的各种调试分析软件，将其分门别类整理成八大部分。译者在翻译的过程中也根据实际经验补充（加*）了几款很强大的工具来丰富内容。其中提到的软件主要限于主流的桌面操作系统，如Windows、Linux等，不包括Android、IOS等移动平台逆向工具（但其中Java逆向部分也涉及到了一些在Android逆向中会用到的工具）。通过阅读本文，希望各位学习、从事逆向行业的人员，不仅能够在已有的知识体系范围内巩固技能，也能够拓宽眼界接触到国外的逆向行业，看看外国佬们平时都热衷于用哪些工具来进行工作。俗话说的好：“工欲善其事，必先利其器”！
**由于全文篇幅较大，先将整体的文章结构列成目录如下：**
一、逆向工程简述
二、类别1：身份识别
2.1 Detect It Easy
2.2 ProtectionID
2.3 YARA GUI
三、类别2：反汇编和反编译
3.1 IDA and Hex-Rays
3.2 .NET Reflector
3.3 dnSpy
3.4 Java Decompiler
3.5 JustDecompile
3.6 ReFox
3.7 VB Decompiler
3.8 IDR
四、类别3：调试器
4.1 OllyDbg
4.2 x64dbg
4.3 DILE
五、类别4：十六进制编辑器
5.1 HIEW
5.2 Hex Workshop
5.3 HxD
六、类别5：资源修改器
6.1 FX Resource Hacker
6.2 Resource Tuner
6.3* Dependency Walker
七、类别6：编辑器和支持工具
7.1 PE-Bear
7.2 PeStudio
7.3 dirtyJOE
7.4* PEiD
7.5* PEView
八、类别7：提取器和分离器
8.1 Universal Extractor
8.2 MultiExtractor
九、类别8：虚拟环境
9.1 VMware
9.2 Sandboxie
9.3* Parallels Desktop
十、这里并不是结束，这里才刚刚开始…
****
**一、逆向工程简述**
逆向工程，在这里更为确切地应该称之为“软件逆向”，是一系列用来分析闭源软件的技术，目的是为了获取一些看上去本来难以获得的软件信息、算法、被隐藏的许可密码或是文件采用的加密方式等等有用信息。
逆向工程的应用领域包含软件安全漏洞的挖掘（从而利用）、恶意软件的分析（对于反病毒开发者），或是软件和游戏的本土语言化，当然这些例子只是一小部分而已。
高级的软件分析技术需要文件结构校检的知识，所以最常见的可执行文件的文件格式的知识是必需的，比如说Windows系统下的PE文件格式或者Linux系统下的ELF文件格式。同时逆向工程还必须得有一定的32位和64位汇编基础，不然很难去理解将闭源软件中经过编译过的代码反汇编出来的二进制代码。
当然，仅仅拥有基础知识是远远不够的，我们还需要合适的逆向工具的支持，这也将是本文的核心所在。本文将会把常用的逆向工程专用工具分门别类来一一介绍。其实有很大一部分的工具都完全有资格被单独拿出来写一篇文章，但是我的目的不在于此，而是想尽可能的涵盖更多不同类型的软件和各种各样的使用方法以飨读者。
顺便再说一下，逆向工程软件因其复杂的特性和开发的困难性，往往导致它本身售价十分昂贵。我会尽量提供一些可选的方案和免费的替代版本来让大家选择。
**类别1：身份识别**
编程语言和相应的编译器种类繁多，除了使用脚本语言开发出来的软件（比方说当下很火的Python），其他的高级语言编译器生成的代码因具有自身特性而很容易通过工具检测出来。当然这里不考虑经过多种多样的软件保护措施处理过后生成的二进制磁盘文件。
当我们不确定手上的这个软件是用什么语言开发的时候，而我们也不具有判断被编译过的文件的特性（比如段名称、导入表等）的专业知识，这个时候身份识别工具就派上用场了，它能快速地检测出结果从而让我们决定下一步该干什么（解包、脱壳等等）。
**Detect It Easy**
DIE检测器具有一个囊括了当下广为流行安全系统的数据库，包含了exe-packers， exe-protectors以及其他许多流行的编译器和链接器的签名。另外它还内置了一个简易的脚本，可以让我们快速地加入新的自定义签名。同时它也包含一个PE可执行文件的结构查看器。
图1：Detect it easy 文件检测器
**Protection ID**
这款名为Protection
ID的检测器主要针对于游戏系统的安全性检测。它拥有一个庞大的数据库，囊括了几乎所有可能的安全系统、编译器和链接器。尽管它的用户界面看起来有点简陋，但是它经常会更新内容，而且不可否认的是其功能十分强大！
图2：Protection ID文件检测器
**YARA GUI**
YARA GUI是一款具有Windows图形界面的软件，主要用于流行的二进制模式匹配以检测库和文件格式。
图3：YARA GUI签名检测器
**类别2：反汇编和反编译**
当知道我们在处理什么的时候，或者更精确的说是已经知道了当前的软件所使用的编程语言和编译器，我们接下来就要开始使用反汇编器和反编译器。他们的作用是分析并使用便于人类理解阅读的方式呈现出经过编译的二进制文件的代码结构。
多亏了以上的过程，现在我们可以纵观整个程序的功能、包含了什么字符串以及哪一段代码引用了这些字符串、哪些程序外部的操作系统函数被调用了或者哪些函数被导出了（比如在使用了DLL动态链接库的情况下）。
反汇编器的作用是以底层汇编器的形式（原文是in the for of，应该是in the form
of之误）描述程序代码，所以用C++、Dephi、Visual
Basic或者其他高级编程语言写的软件被编译成原生机器代码后，反汇编器会以x86或x64的形式向我们展示对应汇编代码。