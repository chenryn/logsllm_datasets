        `DHCP`{.literal} 服务器且您不想手动分配 `IP`{.literal}
        地址，请选择这个选项。随机地址将根据 [*[[RFC
        4862](http://www.rfc-editor.org/info/rfc4862){.link}]{.citetitle}*]{.emphasis}
        分配，前缀为 `FE80::0`{.literal}。
    -   `手动`{.literal} - 如果您要手动分配 `IP`{.literal}
        地址，请选择这个选项。
    -   `Disable`{.literal} - 在这个连接中禁用 `IPv6`{.literal}。
        请注意，`DNS`{.literal}, `Routes`{.literal},
        `Use this connection only for resources on its network`{.literal}
        项是 `IPv4`{.literal} 的常规设置。
    :::
8.  编辑完 `VPN`{.literal}
    连接后，点[添加]{.guibutton}按钮自定义配置或[应用]{.guibutton}按钮为现有配置保存它。
9.  将配置集切换为 `ON`{.literal} 以激活 `VPN`{.literal} 连接。
:::
::: itemizedlist
**其他资源**
-   `nm-settings-libreswan(5)`{.literal}
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-connection_configuring-and-managing-networking.html#configuring-a-vpn-connection-using-nm-connection-editor_configuring-a-vpn-connection}使用 nm-connection-editor 配置 VPN 连接 {.title}
:::
这个步骤描述了如何使用 `nm-connection-editor`{.literal} 配置 VPN 连接。
::: itemizedlist
**先决条件**
-   已安装 `NetworkManager-libreswan-gnome`{.literal} 软件包。
-   如果您配置了互联网密钥交换版本 2（IKEv2）连接：
    ::: itemizedlist
    -   证书导入到 IPsec 网络安全服务（NSS）数据库中。
    -   NSS 数据库中的证书 nickname 是已知的。
    :::
:::
::: orderedlist
**流程**
1.  打开终端窗口，输入：
    ``` screen
    $ nm-connection-editor
    ```
2.  点 [+]{.guibutton} 按钮添加新连接。
3.  选择 `基于 IPsec 的 VPN`{.literal} 连接类型，然后点
    [Create]{.guibutton}。
4.  在 `VPN`{.literal} 标签页中：
    ::: orderedlist
    1.  在 `Gateway`{.literal} 字段中输入 VPN 网关的主机名或 IP
        地址，然后选择验证类型。根据验证类型，您必须输入不同的附加信息：
        ::: itemizedlist
        -   `IKEv2（认证）`{.literal}
            使用证书验证客户端，这会更安全。这个设置需要在 IPsec NSS
            数据库中指定证书的 nickname
        -   `IKEv1(XAUTH)`{.literal}
            使用用户名和密码（预共享密钥）验证用户身份。此设置要求您输入以下值：
            ::: itemizedlist
            -   用户名
            -   密码
            -   组名称
            -   Secret
            :::
        :::
    2.  如果远程服务器为 IKE 交换指定本地标识符，在
        `Remote ID`{.literal} 字段中输入具体字符串。在运行 Libreswan
        的远程服务器中，这个值在服务器的 `leftid`{.literal} 参数中设置。
        [![nm connection editor vpn
        tab](images/nm-connection-editor-vpn-tab.png)]{.inlinemediaobject}
    3.  （可选）点击[高级]{.guibutton}按钮配置附加设置。您可以配置以下设置：
        ::: itemizedlist
        -   身份识别
            ::: itemizedlist
            -   `域`{.literal} - 如果需要，请输入域名。
            :::
        -   安全性
            ::: itemizedlist
            -   `Phase1 Algorithms`{.literal} 对应于 ike
                `Libreswan`{.literal}
                参数。输入用来验证和设置加密频道的算法。
            -   `Phase2 Algorithms`{.literal} 对应于 `esp`{.literal}
                Libreswan 参数。输入用于 `IPsec`{.literal} 协商的算法。
                选择 `Disable PFS`{.literal} 字段来关闭 Perfect Forward
                Secrecy(PFS)，以确保与不支持 PFS 的旧服务器兼容。
            -   `Phase1 Lifetime`{.literal} 与 `ikelifetime`{.literal}
                Libreswan
                参数对应。此参数定义用于加密流量的密钥的有效期。
            -   `Phase2 Lifetime`{.literal} 与 `salifetime`{.literal}
                Libreswan 参数对应。这个参数定义安全关联有效期。
            :::
        -   连接性
            ::: itemizedlist
            -   `远程网络`{.literal} 与 `rightsubnet`{.literal}
                Libreswan 参数对应，并定义应通过 VPN
                访问的目标专用远程网络。
                检查 `缩减`{.literal} 字段以启用缩小字段。请注意，它只在
                IKEv2 协商中有效。
            -   `Enable fragmentation`{.literal} 与
                `segmentation`{.literal} Libreswan
                参数对应，并定义是否允许 IKE 分段。有效值为
                `yes`{.literal} （默认）或 `no`{.literal}。
            -   `Enable Mobike`{.literal} 与 `mobike`{.literal}
                参数对应。参数定义是否允许移动和多功能协议（MOBIKE）（RFC
                4555）启用连接来迁移其端点而无需从头开始重启连接。这可用于在有线、无线或者移动数据连接之间进行切换的移动设备。值为
                `no`{.literal} （默认）或 `yes`{.literal}。
            :::
        :::
    :::
5.  在 `IPv4 Settings`{.literal} 选项卡中，选择 IP
    分配方法，并可选择设置额外的静态地址、DNS 服务器、搜索域和路由。
    [![IPsec IPv4 tab](images/IPsec-IPv4-tab.png)]{.inlinemediaobject}
6.  保存连接。
7.  关闭 `nm-connection-editor`{.literal}。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
当您点 [+]{.guibutton} 按钮添加新连接时， [**NetworkManager**]{.strong}
会为那个连接创建新配置文件，然后打开同一个对话框来编辑现有连接。这两个对话框之间的区别在于现有连接配置集有[**详情**]{.strong}菜单条目。
:::
::: itemizedlist
**其他资源**
-   `nm-settings-libreswan(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-connection_configuring-and-managing-networking.html#proc_configuring-automatic-detection-and-usage-of-esp-hardware-offload-to-accelerate-an-ipsec-connection_configuring-a-vpn-connection}配置自动检测和使用 ESP 硬件卸载以加快 IPsec 连接 {.title}
:::
将安全 Payload(ESP)卸载卸载到硬件加速了通过以太网的 IPsec
连接。默认情况下，Libreswan 会检测硬件是否支持此功能，因此启用 ESP
硬件卸载。这个步骤描述了如何在禁用或显式启用该功能时启用自动检测。
::: itemizedlist
**先决条件**
-   网卡支持 ESP 硬件卸载。
-   网络驱动程序支持 ESP 硬件卸载。
-   IPsec 连接已配置且可以正常工作。
:::
::: orderedlist
**步骤**
1.  编辑连接的 `/etc/ipsec.d/`{.literal} 目录中的 Libreswan
    配置文件，它应使用自动检测 ESP 硬件卸载支持。
2.  确保在连接设置中没有设置 `nic-offload`{.literal} 参数。
3.  如果您删除了 `nic-offload`{.literal}，重启 `ipsec`{.literal} 服务：
    ``` literallayout
    # systemctl restart ipsec
    ```
:::
::: title
**验证**
:::
如果网卡支持 ESP 硬件卸载支持，请按照以下步骤验证结果：
::: orderedlist
1.  显示 IPsec 连接使用的以太网设备的 `tx_ipsec`{.literal} 和
    `rx_ipsec`{.literal} 计数器：
    ``` literallayout
    # ethtool -S enp1s0 | egrep "_ipsec"
         tx_ipsec: 10
         rx_ipsec: 10
    ```
2.  通过 IPsec 隧道发送流量。例如，ping 远程 IP 地址：
    ``` literallayout
    # ping -c 5 remote_ip_address
    ```
3.  再次显示以太网设备的 `tx_ipsec`{.literal} 和 `rx_ipsec`{.literal}
    计数器：
    ``` literallayout
    # ethtool -S enp1s0 | egrep "_ipsec"
         tx_ipsec: 15
         rx_ipsec: 15
    ```
    如果计数器值增加了，ESP 硬件卸载正常工作。
:::
::: itemizedlist
**其他资源**
-   [使用 IPsec 配置
    VPN](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/securing_networks/configuring-a-vpn-with-ipsec_securing-networks){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-a-vpn-connection_configuring-and-managing-networking.html#proc_configuring-esp-hardware-offload-on-a-bond-to-accelerate-an-ipsec-connection_configuring-a-vpn-connection}在绑定中配置 ESP 硬件卸载以加快 IPsec 连接 {.title}
:::
将封装安全负载(ESP)卸载到硬件可加速 IPsec
连接。如果出于故障转移原因而使用网络绑定，配置 ESP
硬件卸载的要求和流程与使用常规以太网设备的要求和流程不同。例如，在这种情况下，您可以对绑定启用卸载支持，内核会将设置应用到绑定的端口。
::: itemizedlist
**先决条件**
-   绑定中的所有网卡都支持 ESP 硬件卸载。
-   网络驱动程序支持对绑定设备的 ESP 硬件卸载。在 RHEL 中，只有
    `ixgbe`{.literal} 驱动程序支持此功能。
-   绑定已配置且可以正常工作。
-   该绑定使用 `active-backup`{.literal}
    模式。绑定驱动程序不支持此功能的任何其他模式。
-   IPsec 连接已配置且可以正常工作。
:::
::: orderedlist
**步骤**
1.  对网络绑定启用 ESP 硬件卸载支持：
    ``` literallayout
    # nmcli connection modify bond0 ethtool.feature-esp-hw-offload on
    ```
    这个命令在对 `bond0`{.literal} 连接启用 ESP 硬件卸载支持。
2.  重新激活 `bond0`{.literal} 连接：
    ``` literallayout
    # nmcli connection up bond0
    ```
3.  编辑应使用 ESP 硬件卸载的连接的 `/etc/ipsec.d/`{.literal} 目录中的
    Libreswan 配置文件，并将 `nic-offload=yes`{.literal}
    语句附加到连接条目：
    ``` literallayout
    conn example
        ...
        nic-offload=yes
    ```
4.  重启 `ipsec`{.literal} 服务：
    ``` literallayout
    # systemctl restart ipsec
    ```
:::
::: orderedlist
**验证**
1.  显示绑定的活动端口：
    ``` literallayout
    # grep "Currently Active Slave" /proc/net/bonding/bond0
    Currently Active Slave: enp1s0
    ```
2.  显示活动端口的 `tx_ipsec`{.literal} 和 `rx_ipsec`{.literal} 计数器：
    ``` literallayout
    # ethtool -S enp1s0 | egrep "_ipsec"
         tx_ipsec: 10
         rx_ipsec: 10
    ```
3.  通过 IPsec 隧道发送流量。例如，ping 远程 IP 地址：
    ``` literallayout
    # ping -c 5 remote_ip_address
    ```
4.  再次显示活动端口的 `tx_ipsec`{.literal} 和 `rx_ipsec`{.literal}
    计数器：
    ``` literallayout
    # ethtool -S enp1s0 | egrep "_ipsec"
         tx_ipsec: 15
         rx_ipsec: 15
    ```
    如果计数器值增加了，ESP 硬件卸载正常工作。
:::
::: itemizedlist
**其他资源**
-   [配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html "第 12 章 配置网络绑定"){.link}
-   [使用 IPsec 配置
    VPN](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/securing_networks/configuring-a-vpn-with-ipsec_securing-networks){.link}
    `部分的安全网络文档`{.literal}
-   [保护网络](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/securing_networks/index){.link}
    文档中的 [配置带有 IPsec 的
    VPN](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/securing_networks/configuring-a-vpn-with-ipsec_securing-networks){.link}
    一章。
:::
:::
:::
[]{#configuring-ip-tunnels_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-ip-tunnels_configuring-and-managing-networking.html#configuring-ip-tunnels_configuring-and-managing-networking}第 15 章 配置 IP 隧道 {.title}
:::
与 VPN 类似，IP
隧道通过网络（如互联网）直接连接两个网络。然而，不是所有的隧道协议都支持加密。
两个建立隧道网络的路由器至少需要两个接口：
::: itemizedlist
-   一个连接到本地网络的接口
-   一个连接到建立隧道的网络的接口。
:::
要建立隧道，您可以在两个路由器中使用来自远程子网的 IP
地址创建一个虚拟接口。
NetworkManager 支持以下 IP 隧道：
::: itemizedlist