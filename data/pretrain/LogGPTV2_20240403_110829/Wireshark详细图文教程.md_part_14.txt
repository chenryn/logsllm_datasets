### 会话统计

#### 8.5.1 什么是会话/Conversation？
网络会话是指两个特定端点之间的通信过程。例如，一个IP会话指的是两个IP地址之间所有的数据交换。

#### 8.5.2 "Conversations/会话"窗口
除了列表内容外，会话窗口与端点窗口基本相同，请参见第8.4.2节“'Endpoints'窗口”。

![](图8.4. "Conversations"对话框)

#### 8.5.3 协议指定的“Conversation List/会话列表”窗口
在综合窗口出现之前，每个页面都是以单独窗口的形式展示的。
尽管综合窗口使用起来更加方便，但这些独立窗口仍然可用，主要是因为它们在处理非常大的捕获文件时可能更高效。然而，由于其功能与综合窗口完全一致，在此不再赘述。

### IO 图表窗口
用户可以自定义配置用于显示网络数据图形的设置。

- **图表**
  - Graph 1-5: 启用1至5号图表（默认仅启用Graph 1）
  - 颜色: 图表的颜色（不可更改）
  - 过滤器: 指定显示过滤条件（只有通过该过滤器的数据包才会被计入相应图表）
  - 样式: 可选样式包括折线图、脉冲图和柱状图
  
- **X轴**
  - 刻度间隔: 设置X轴上每格代表的时间长度(可选值为10, 1, 0.1, 0.01或0.001秒)
  - 像素/刻度: 设置X轴上每格所占像素数(可选值为10, 5, 2或1像素)

- **Y轴**
  - 单位: Y轴单位(Packets/Tick, Bytes/Tick, Bits/Tick等)
  - 刻度: Y轴上的单位增量(如10, 20, 50, 100, 200, 500等)
  
**高级功能说明:** [此处应详细描述高级特性]

![](图8.5. "IO Graphs" 窗口)

### 服务响应时间
服务响应时间是指从发送请求到收到回应所需的时间间隔。此统计信息适用于多种协议。

- 支持的服务响应时间统计的协议:
  - DCE-RPC
  - Fibre Channel
  - H.225 RAS
  - LDAP
  - MGCP
  - ONC-RPC
  - SMB

下面将以DCE-RPC为例进行具体介绍。

**注释:** 其他服务响应时间在Windows平台下的处理方式相似（或者仅有细微差异）。

#### 8.7.1 "Service Response Time DCE-RPC"窗口
DCE-RPC的服务响应时间是从发起请求到接收到回复之间的时间差。

![](图8.6. "Compute DCE-RPC statistics"窗口)

您可以通过设置显示过滤器来减少参与统计的数据包数量。

![](图8.7. The "DCE-RPC Statistic for ..." 窗口)

每一行对应于所选接口的一个方法（例如版本3中的EPM接口有7个方法）。对于每个方法，都会计算调用次数及SRT时间的统计数据。

### 协议特定统计窗口
这些窗口提供了关于特定协议的详细信息，并将在后续文档版本中进一步阐述。部分统计资料可在[Wireshark官方Wiki](http://wiki.wireshark.org/Statistics)上找到。

---

## 第九章 自定义Wireshark

### 引言
本章节自9.6起的内容在译者使用的Wireshark 0.99.5版本中未发现对应功能。

### 9.1 概述
虽然Wireshark默认设置通常已经能满足大多数用户的需求，但对于那些对工具十分熟悉的用户来说，还可以通过个性化设置使其更加贴合个人习惯。本章将涵盖以下主题：
- 如何通过命令行启动Wireshark
- 如何对数据包列表进行着色
- 如何控制数据包解析
- 如何利用各种偏好设置选项

### 9.2 从命令行启动Wireshark
Wireshark支持通过命令行启动，并且可以从多数窗口管理软件中调用。这里我们将重点讨论如何通过命令行来运行它。

Wireshark提供了丰富的命令行参数。要查看所有可用参数，请在命令提示符下输入`wireshark -h`以获取帮助信息及相关详情。详细的参数列表请参阅示例9.1 “Wireshark帮助信息”。

**示例9.1. Wireshark帮助信息**

```
Version 0.99.0
Copyright 1998-2006 Gerald Combs and contributors.
Compiled with GTK+ 2.6.9, with GLib 2.6.6, with WinPcap (version unknown),
with libz 1.2.3, with libpcre 6.4, with Net-SNMP 5.2.2, with ADNS, with Lua 5.1.
Running with WinPcap version 3.1 (packet.dll version 3, 1, 0, 27), based on
libpcap version 0.9[.x] on Windows XP Service Pack 2, build 2600.

wireshark [ -vh ] [ -DklLnpQS ] [ -a  ] ...
[ -b  ] ...
[ -B  ]
[ -c  ] [ -f  ]
[ -g  ] [ -i  ] [ -m  ]
[ -N  ] [ -o  ] ...
[ -r  ] [ -R  ] [ -s  ]
[ -t  ] [ -w  ] [ -y  ]
[ -X  ] [ -z  ] [  ]
```

接下来，我们将逐一介绍各个选项的功能：

- `-a`：设定标准以决定何时停止抓取文件。格式为`test:value`，其中`test`可以是以下之一：
  - `duration:value`：当捕获持续时间超过给定值后停止记录。
  - `filesize:value`：当捕获文件大小达到指定千字节数时停止记录。（注意这里的kilobytes指的是1000字节而非1024字节）
  - `files:value`：当创建的文件数量达到指定值时停止记录。
  
- `-b`：如果设置了最大文件大小，则Wireshark会在"环形缓冲区"模式下工作，并指定文件数量。在这种模式下，一旦当前文件写满，就会切换到下一个文件继续写入，直到最后一个文件也满了为止，然后开始覆盖第一个文件的数据（除非`files`设为0，此时没有文件数量限制）。
  
- `-B`：仅适用于Win32系统，用于设置文件缓存大小（单位为MB，默认1MB），这有助于减少丢包现象。
  
- `-c`：实时捕获过程中指定的最大数据包数量。
  
- `-D`：打印可用于Wireshark捕获的所有接口列表。
  
- `-f`：设置捕获时应用的内置过滤表达式。
  
- `-g`：在读取完捕获文件后跳转到指定编号的数据包。
  
- `-h`：请求Wireshark打印出当前版本的帮助信息并退出。
  
- `-i`：指定用于捕获数据的接口或管道。
  
- `-k`：立即开始捕获，需配合`-i`参数使用。
  
- `-l`：开启自动滚动功能，在捕获新数据时自动滚动"Packet list"面板。
  
- `-m`：设置显示字体（建议提供字体示例）。
  
- `-n`：禁用网络对象名称解析（例如TCP/UDP端口号、主机名）。
  
- `-N`：针对特定类型的地址和端口号启用名称解析；该参数接受一个字符串作为输入，其中`m`表示MAC地址解析，`n`表示网络地址解析，`t`表示传输层端口号解析。若同时存在`-n`和`-N`，则后者优先级更高。字母`C`启用并发DNS查询。
  
- `-o`：设置偏好项或当前值，覆盖默认设置或其他从偏好/最近文件读取的参数。形式为`prefname:value`，其中`prefname`是首选项名称，`value`是对应的值。多个`-o`可以在同一命令行中使用。
  
- `-p`：不将接口置于混杂模式。请注意，即使指定了此选项，也可能因其他原因而处于混杂模式。
  
- `-Q`：禁止Wireshark在完成捕获后退出。通常与`-c`一起使用，并且必须出现在`-i`和`-w`之间。
  
- `-r`：指定要读取并显示的文件名。
  
- `-R`：指定读取文件后应用的过滤规则。
  
- `-s`：设置捕获时的数据包快照长度。
  
- `-S`：使Wireshark在捕获数据后立即显示它们。
  
- `-t`：[待补充]