已经捕捉的会话统计
8.5.1. 什么是会话/conversation?
一个网络会话，指的是两个特定端点之间发生的通信。例如，一个 IP 会话是两个 IP 地址间的所有通信。
8.5.2. "Conversations/会话" window
除了列表内容之外，会话窗口和端点窗口基本一样，见第 8.4.2 节 “"Endpoints"窗口”
图 8.4. "Conversations"对话框
8.5.3. 协议指定“Conversation List/会话列表”窗口
Before the combined window described above was available, each of its pages were shown as separate windows.
Even though the combined window is much more convenient to use, these separate windows are still available.
The main reason is, they might process faster for very large capture files. However, as the functionality
is exactly the same as in the combined window, they won't be discussed in detail here.
8.6. "IO Graphs"窗口
用户可配置的捕捉网络数据图形。
你可以设置五种不同颜色的图形
图 8.5. "IO Graphs" 窗口
用户可以对一下内容进行设置。
Graphs
• Graph 1-5: 开启 1-5 图表(默认仅开启 graph 1)
• Color: 图表的颜色(不可修改)
• Filter:指定显示过滤器(only the packets that pass this filter will be taken into account for that
graph)
• Style:图表样式(Line/Impulse/FBar)
X Axis
• Tick interval 设置 X 轴的每格代表的时间(10/1/0.1/0.01/0.001 seconds))
• Pixels per tick 设置 X 轴每格占用像素 10/5/2/1 px
Y Axis
• Unit y 轴的单位(Packets/Tick, Bytes/Tick, Bits/Tick, Advanced...)
• Ssale Y 轴单位的刻度(10,20,50,100,200,500,...)
XXX - describe the Advanced feature.
8.7. 服务相应时间
服务响应时间是发送请求到产生应答之间的时间间隔。响应时间在很多协议中可用。
服务相应时间统计，在以下协议中可用
• DCE-RPC
• Fibre Channel
• H.225 RAS
• LDAP
• MGCP
• ONC-RPC
• SMB
后面将会以 DCE-RPC 为例介绍响应时间。
注意
其他服务相应时间在 Windows 平台下都是相同的处理方法(或者仅仅轻微不同)
8.7.1. "Service Response Time DCE-RPC"窗口
DCE-RPC 的服务相应时间是在请求发起到相应请求的时间间隔
图 8.6. "Compute DCE-RPC statistics"窗口
你可以设置显示过滤，减少用于统计的包的数量
图 8.7. The "DCE-RPC Statistic for ..." 窗口
Each row corresponds to a method of the interface selected (so the EPM interface in version 3 has 7 methods).
For each method the number of calls, and the statistics of the SRT time is calculated.
8.8. 协议指定统计窗口
The protocol specific statistics windows display detailed information of specific protocols and might be
described in a later version of this document. Some of these statistics are described at the
http://wiki.wireshark.org/Statistics pages.
第 9 章 个性化 Wireshark
写在前面
本章自 9.6 节起的内容在译者的 0.99.5 版 Wireshark 中都未曾见到对应的功能。
9.1. 说明
Wireshark 默认行为通常可以很好地吻合你的习惯，当你十分熟悉 Wireshark 的时候，你可以对 Wireshark 进行个性
化设置以更好地适合你的需要。在本章我们将介绍:
• 如何从命令启动 Wireshark
• 如何将包列表色值化(以颜色区分不同的包)
• 如何控制包解析
• 如何使用多种多样的首选项设置
9.2. 从命令行启动 Wireshark
Wireshark 支持从命令行启动，同样也可以从大多数窗口管理软件启动。这节我们看看如何从命令行启动。
Wireshark 支持丰富的命令行参数。要想看看都有那些参数，在命令行键入 Wireshark-h就会显示帮助信息（以及其
他相关的）。详细参数列表见例 9.1 “Wireshark 帮助信息”
例 9.1. Wireshark 帮助信息
Version 0.99.0
Copyright 1998-2006 Gerald Combs  and contributors.
Compiled with GTK+ 2.6.9, with GLib 2.6.6, with WinPcap (version unknown),
with libz 1.2.3, with libpcre 6.4, with Net-SNMP 5.2.2, with ADNS, with Lua 5.1.
Running with WinPcap version 3.1 (packet.dll version 3, 1, 0, 27), based on
libpcap version 0.9[.x] on Windows XP Service Pack 2, build 2600.
wireshark [ -vh ] [ -DklLnpQS ] [ -a  ] ...
[ -b  ] ...
[ -B  ]
[ -c  ] [ -f  ]
[ -g  ] [ -i  ] [ -m  ]
[ -N  ] [ -o  ] ...
[ -r  ] [ -R  ] [ -s  ]
[ -t  ] [ -w  ] [ -y  ]
[ -X  ] [ -z  ] [  ]
我们随后将对每个选项进行介绍
首先需要注意的是，Wireshark 命令会启动 Wireshark。不管怎样，你可以在启动时追加许多参数(如果你喜欢)。他
们的作用如下(按字母顺序)：
笔者注：按字母顺序是不是一个好主意？按任务顺序会不会更好点？
-a 
设置一个标准用来指定Wireshark什么时候停止捕捉文件。标准的格式为 test:value,test值为下面中的一个。
duration:value
当捕捉持续描述超过 Value 值，停止写入捕捉文件。
filesize:value
当捕捉文件大小达到 Value 值 kilobytes(kilobytes 表示 1000bytes,而不是 1024 bytes)，停止写入捕捉文件。
如果该选项和-b 选项同时使用，Wireshark 在达到指定文件大小时会停止写入当前捕捉文件，并切换到下一个
文件。
files:value
当文件数达到 Value 值时停止写入捕捉文件
-b 
如果指定捕捉文件最大尺寸，因为 Wireshark 运行在"ring buffer"模式，被指定了文件数。在"ring buffer"
模式下，Wireshark 会写到多个捕捉文件。它们的名字由文件数和创建日期，时间决定。
当第一个捕捉文件被写满，Wireshark 会跳转到下一个文件写入，直到写满最后一个文件，此时 Wireshark 会
丢弃第一个文件的数据(除非将 files 设置为 0，如果设置为 0，将没有文件数限制)，将数据写入该文件。
如果 duration 选项被指定，当捕捉持续时间达到指定值的秒数，Wireshark 同样会切换到下个文件，即使文件
未被写满。
duration:value
当捕捉持续描述超过 Value 值，即使文件未被写满，也会切换到下个文件继续写入。
filesize:value
当文件大小达到 value 值 kilobytes 时(kelobyte 表示 1000bytes,而不是 1024bytes)，切换到下一个文件。
files:value
当文件数达到 value 值时，从第一个文件重新开始写入。
-B 
仅适合 Win32:设置文件缓冲大小(单位是 MB,默认是 1MB).被捕捉驱动用来缓冲包数据，直到达到缓冲大小才写
入磁盘。如果捕捉时碰到丢包现象，可以尝试增大它的大小。
-c 
实时捕捉中指定捕捉包的最大数目，它通常在连接词-k 选项中使用。
-D
打印可以被 Wireshark 用于捕捉的接口列表。每个接口都有一个编号和名称(可能紧跟在接口描述之后？)会被
打印，接口名或接口编号可以提供给-i 参数来指定进行捕捉的接口(这里打印应该是说在屏幕上打印)。
在那些没有命令可以显示列表的平台(例如 Windows,或者缺少 ifconfig-a 命令的 UNIX 平台)这个命令很有用;
接口编号在 Windows 2000 及后续平台的接口名称通常是一些复杂字符串，这时使用接口编号会更方便点。
注意，"可以被 Wireshark 用于捕捉"意思是说：Wireshark 可以打开那个设备进行实时捕捉；如果在你的平台
进行网络捕捉需要使用有特殊权限的帐号(例如 root，Windows 下的 Administrators 组)，在没有这些权限的账
户下添加-D 不会显示任何接口。参数
-f 
设置捕捉时的内置过滤表达式
-g 
在使用-r 参数读取捕捉文件以后，使用该参数跳转到指定编号的包。
-h
-h 选项请求 Wireshark 打印该版本的命令使用方法(前面显示的)，然后退出。
-i 
设置用于进行捕捉的接口或管道。
网络接口名称必须匹配 Wireshark -D 中的一个；也可以使用 Wireshark -D显示的编号，如果你使用
UNIX,netstat -i 或者 ifconfig -a获得的接口名也可以被使用。但不是所有的 UNIX 平台都支持-a,ifconfig
参数。
如果未指定参数，Wireshark 会搜索接口列表，选择第一个非环回接口进行捕捉，如果没有非环回接口，会选
择第一个环回接口。如果没有接口，wireshark 会报告错误，不执行捕捉操作。
管道名即可以是 FIFO(已命名管道)，也可以使用"-"读取标准输入。从管道读取的数据必须是标准的 libpcap
格式。
-k
-k选项指定 Wireshark 立即开始捕捉。这个选项需要和-i 参数配合使用来指定捕捉产生在哪个接口的包。
-l
打开自动滚屏选项，在捕捉时有新数据进入，会自动翻动"Packet list"面板（同-S 参数一样）。
-m 
设置显示时的字体（编者认为应该添加字体范例）
-n
显示网络对象名字解析(例如 TCP,UDP 端口名，主机名)。
-N 
对特定类型的地址和端口号打开名字解析功能；该参数是一个字符串，使用 m 可以开启 MAC 地址解析，n 开启
网络地址解析，t 开启传输层端口号解析。这些字符串在-n 和-N 参数同时存在时优先级高于-n，字母 C 开启同
时(异步)DNS 查询。
-o 
设置首选项或当前值，覆盖默认值或其他从 Preference/recent file 读取的参数、文件。该参数的值是一个字
符串，形式为 prefname:value,prefnmae 是首选项的选项名称(出现在 preference/recent file 上的名称)。
value 是首选项参数对应的值。多个-o  可以使用在单独命中中。
设置单独首选项的例子：
wireshark -o mgcp.display_dissect_tree:TRUE
设置多个首选项参数的例子：
wireshark -o mgcp.display_dissect_tree:TRUE -o mgcp.udp.callagent_port:2627
提示
在???可以看到所有可用的首选项列表。
-p
不将接口设置为杂收模式。注意可能因为某些原因依然出于杂收模式；这样，-p 不能确定接口是否仅捕捉自己
发送或接受的包以及到该地址的广播包，多播包
-Q
禁止 Wireshark 在捕捉完成时退出。它可以和-c 选项一起使用。他们必须在出现在-i -w 连接词中。
-r 
指定要读取显示的文件名。捕捉文件必须是 Wireshark 支持的格式。
-R 
指定在文件读取后应用的过滤。过滤语法使用的是显示过滤的语法，参见第 6.3 节 “浏览时过滤包”，不匹
配的包不会被显示。
-s 
设置捕捉包时的快照长度。Wireshark 届时仅捕捉每个包字节的数据。
-S
Wireshark 在捕捉数据后立即显示它们，通过在一个进程捕捉数据，另一个进程显示数据。这和捕捉选项对话
框中的"Update list of packets in real time/实时显示数据"功能相同。
-t 