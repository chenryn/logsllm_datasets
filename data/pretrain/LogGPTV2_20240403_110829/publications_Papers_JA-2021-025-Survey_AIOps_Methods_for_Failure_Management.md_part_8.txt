localization.Onlythenananalysisofthepossibleerrorsourcescanbeperformedwithroot-cause
diagnosis.Asinthecaseofanomalydetection,wetreatsomeassociatedtasks,usefultosupport
root-causeanalysisinthelocalizationanddiagnosisprocedures.
4.4.1 FaultLocalization. Faultlocalizationisaboutidentifyingthesetofcomponents(devices,
network links, hosts, software modules, etc.) interested by a fault that caused a specific failure.
Whentreatingthisproblem,itisimportanttoclarifythescopeoflocalization,asscaleandtargets
maybeambiguousinthiscontextseveralreasons.First,becausefaultlocalizationcanoperateat
various physical, hierarchical scales, from the entirety of a datacenter down to single chips. In
large-scaleservices,inthepresenceofhundredsofthousandsofmachines,itisimportanttore-
stricttheoriginofamanifestederrortotheindividualserverlevel.Itisalsopossibletoperform
problemdeterminationatthephysicaldevicelevel,suchasharddrivesandprocessorchips.Finally,
thehighestlevelofgranularityisreachedbyroot-causediagnosis,wheretheindividualfailurerea-
sonsareinvestigated(seenextsection).Second,fromafunctionalperspective,faultlocalization
mayimplyinvestigatingwhichmoduleinabstract,functionalcomponents(e.g.,thenetwork,or
thesourcecode)isaffectedbyafault.Inthissecondperspective,thelocalizationscaleisdiscon-
nected from the physical scale. Software fault localization is applied to analyze the source code,
regardless of whether the interested piece of software is deployed on thousands or tens of ma-
chines.Inthenetworkcase,itmaybesufficienttounderstandiffaultsarepresentinthenetwork
sothatspecializednetworkoperatorscanidentifytherootcausesindependently.
Some works describe general-purpose fault localization techniques. For instance, Nguyen
et al. [110] present FChain, a black-box fault localization system to pinpoint faulty components
inanonlinecloudsetting.FChainreliesonlow-levelsystemmetricstodetectperformanceanom-
alies,thenobserveshowsuchanomalypatternspropagatetoidentifyfaultycomponents.Perfor-
manceanomaliesareidentifiedviaonlinemetricforecastingusingadiscreteMarkovmodelwith
anadjustabledetectionthreshold.Then,allcomponentsdisplayingananomalyaresortedbyman-
ifestationtimeadexaminedinsequencetofilteroutspuriouscorrelationsaccordingtodifferent
techniques, such as looking at interdependency between components or examining the overall
propagation trend. The approach is tested on different commercial frameworks for distributed
computing.Inthissetting,thelocalizationperformanceoftheapproachiscomparedwithexisting
black-boxlocalizationschemes,whereanimprovementbothintermsofprecision(+90%)andre-
call(+20%)isobserved.Accordingtotheauthors,FChainimposesanoverheadof1%onthecloud
systemperformance.
Severalapproaches[80,83,132]addressfaultlocalizationbycorrelatingabnormalchangesin
KPIvaluestoparticularcombinationsofattributes(representing,e.g.,geographicalregions,ISPs,
hosts,buckets,etc.).Thiscombinationsofvaluesarethensymptomaticofafaultforthatparticular
ACMTransactionsonIntelligentSystemsandTechnology,Vol.12,No.6,Article81.Publicationdate:November2021.
ASurveyofAIOpsMethodsforFailureManagement 81:29
cornercase.Hotspot[132]appliesMonteCarloTreeSearchandhierarchicalpruningtoefficiently
examineattributecombinationsandmeasurehowtheyrelatetosuddenchangesinthePageView
metric. This approach allows one to reduce hours-long manual efforts down to 20 s on average
(300×speedup).Squeeze[80]proposesasimilarapproachbasedonacombinedtop-down,bottom-
upsearchstrategyandanewlydefinedcorrelationmetric(generalizedpotentialscore,GPS).These
improvementsenableSqueezetolocalizerootcausesincasesoflowerstatisticalsignificance,when
testedonsynthetically-injectedreal-worlddatasets(F1=0.86–0.90).Linetal.[83]applypattern
miningtechniquesonstructuredlogstodiscoverassociationrulesX →Y,whereY isapredefined
attributecombinationdescribingafailure.Theyapplyefficientprocessingtechniquesasrowpre-
aggregation, in-memory databases and the FP-growth mining algorithm to render the runtime
complexityofassociationruleminingfeasible.Theirworkalsoproposesfivedifferentusecases
applicableinlarge-scaleserviceinfrastructures.
Other works apply fault localization techniques specifically to the network infrastructure of
computersystems.TheworkofLakhinaetal.[72],alreadypresentedinSection4.3.1fornetwork
anomalydetection,appliesthesamePCA-basedtechniquepreviouslydescribedtoidentifyfaulty
linksaswell.Forthediagnosistask,insteadofconsideringthesubspacedistanceofreconstructed
datapoints(whichwasthereusedasameasureofanomaly),thedirectionofdivergenceisunder
examination. The routing matrix defines the direction of divergence from normal behavior for
eachlink,whilethemostlikelyfaultylinkisselectedastheonewiththelowestreconstruction
errorafterremovingtheestimateddivergenceeffectcausedbythatlink.
WithSherlock[9],Bahletal.localizesourcesofperformanceproblemsinenterprisenetworks
byconstructingprobabilisticinferencegraphsfromtheobservationofpacketsexchangedinthe
network infrastructure. Nodes of the inference graph are divided into root-cause nodes (corre-
sponding to internal IP entities), observation nodes (corresponding to clients), and meta-nodes,
which model the dependencies between the first two types of nodes. Each node is also associ-
atedwithacategoricalrandomvariablemodelingthecurrentstate(up,troubled,down),whichis
influencedbyothernodesvia thedependencyprobabilities.Learning theinferencegraph corre-
spondstolearnthedependencyprobabilitiesforeachedgeinthegraphbyobservingthepackets
exchanged between nodes during normal operation. Once the graph is available, measurements
fromtheobservationnodecanbeusedtoretrieveasetofstate-nodeassignmentvectors,corre-
spondingtotheestimatedoperationalstateofthenetwork.Accordingtotheresultsofthepaper,
Sherlock was able to narrow down more than 87% of the failures from 350 to 16 possible root
causes,whileidentifying32%morefaultsthantheirpreviousworkShrink[64].ThesameShrink
(seeSection4.4.2),althoughtechnicallyaroot-causediagnosistool,canalsobeappliedtolocalize
physical-layerfaultsinnetworks.
SoftwareFaultLocalization(SFL)isfaultlocalizationinsoftwarecomponentsthroughsource
codeanalysis.AnSFLsystemtypicallyreturnsareportcontainingalistofsuspiciousstatements
orcomponents.Itcanbeconsideredsimilartosoftwaredefectprediction(Section4.1.1),becauseof
thesimilarityofinvestigationtargetsandanalysistools;however,differentlyfromSDP,SFLrelies
onobservedfailurepatternsobtainedfromproductionrunsandtestcases,ratherthanpredictions
offuturefaultybehaviorbasedoncodemetrics.
Renierisetal.[121]implementamethodforSFLbasedonsimilaritybetweenprogramexecution
profiles(orspectra),whichareobtainedfromexecutiontracestorepresentsuccessfulandfaulty
runs of programs. In the described approach, successful runs are stored as spectra in a nearest-
neighborquerydatabase.Afaultyrunisthenusedasasearchterminthisdatabase,sothatthe
nearestneighborrunsreturnedbythequery(inparticular,theirdifferencesfromthefaultyrun
intermofcodecoverage)canbeusedtoproduceafaultlocalizationreportwithplausibletarget
codeareasresponsibleforthefault.Thespectralrepresentationofrunsishereconstitutedbysets
ACMTransactionsonIntelligentSystemsandTechnology,Vol.12,No.6,Article81.Publicationdate:November2021.
81:30 P.Notaroetal.
of executed program blocks, on which the Hamming distance is computed to perform neighbor
queries.Inthesamepaper,ameasurequantifyingtheexaminationeffortrequiredtofindabug,
calledtheT-score,isintroducedanditislaterusedbyotherapproachesasacomparisonmeasure
[30,85,145].
Zelleretal.[156]proposeDeltaDebugging,analgorithmforthedeterminationofstatevariables
causing a change in the outcome of execution runs. Via graph modeling techniques, the state
differences between failing and passing runs are examined to understand how state alterations
influencetheoutcomeofruns.Inthisway,itispossibletoextractthevariableinterestedbythe
faultfromthevariationspace.Inthespecificcaseofthepaper,theprogramstateisrepresentedas
amemorygraph.Inafollowingwork[30],thepreviouslyproposedsearch-in-spaceapproachis
complementedbyasearch-in-timeapproach,forthosesituationswhereafailuredependsonwhen
variablesareassignedwrongvalues,aneventcalled“causetransition.”Throughthisconsideration,
programmers can reduce the amount of code that needs to be examined. During the evaluation
phaseconductedontheSiemenstestsuite[59],thecause-transition(CT)approachiscompared
toReference[121]intermsofT-score,whereCTcanpinpointdefectsfor5.43%ofalltheruns,with
more than one-third (35.66%) of these runs requiring examination of less than 10% of the entire
code.Thedescribedapproachalsoprovidesinsightsaboutthecausesbehinderrorsandtherefore
supportsroot-causediagnosisaswell.
Liuetal.[85]adoptastatisticaldebuggingapproach(SOBER)basedontheanalysisofpredicate
evaluations in failing and passing runs. In predicate-basedstatistical debugging, the conditional
probabilityofobservingafailuregiventheobservationofaparticularpredicateisestimatedfor
amultitudeofpredicatespresentinthecode.Predicateswithahigherprobabilityaremorelikely
tocontainasoftwarebugortobeintheproximityofone.Inthispaper,aprobabilisticmodelof
predicatesisintroduced,includingarankingcriteriontoevaluatetheconnectionofpredicatesto
softwarebugs.TheapproachistestedontheSiemenstestsuiteandcomparedusingT-scoreand
detectionratetotheCTapproachofCleveandZeller[30],pushingstate-of-the-artresults:when
adeveloperiswillingtoanalyze1%oftheinterestedcode,SOBERcancapture8.46%ofthebugs
(4.65%forCT);at20%coverage,thedetectionrateclimbsto73.85%(39%forCT).
Abreu et al. [1] propose a Bayesian reasoning approach (BARINEL) based on the analysis of
programspectra,thistimeincorporatedinaprobabilisticframeworkusedtoestimatethehealth
probabilityofcomponents.InBARINEL,whichcanbeappliedtolocalizemultiplefaultssimultane-
ously,coverageflagsareusedasaspectralrepresentationoftestsoncomponents.Amodel-based
reasoning system, founded on propositional logic, is constructed from the interaction between
components.Thismodelisthenaugmentedwithfailureprobabilitiesthatareestimatedviamaxi-
mumlikelihoodtoobtainanapproximatereasoningapproach,completedbyacandidateranking
heuristicstodealwiththehighdimensionalityoftheproblem.BARINELcanfind60%ofsoftware
faultsbyexamininglessthan10%ofthesourcecode.
Wongetal.[145]proposeDStar(D*),atechniquetoautomaticallysuggestsuspiciouslocations
forfaultlocalization.Inparticular,D*adoptsanewmethodtocomputesuspiciousnesscoefficients
fromtestcoveragedataandrunoutcomes.ThismethodisbasedonamodificationoftheKulczyn-
skicoefficientswiththeadditionofavariableexponentiationfactor(denotedbysuperscript*,as
inthename).TheapproachiscomparedwithseveralpreviousSFLtechniquesacross24programs
and38techniques,whereD*isshowntobemoreeffectiveonsinglefaultlocalizationthanprevious
coefficient-basedmethods.
4.4.2 Root-cause Diagnosis. Root-cause diagnosis identifies the causes of behavior leading to
failures,byrecognizingtheprimaryformoffault.Forthisreason,itistypicallytreatedasaclas-
sificationproblem.Duetotheinherentcomplexityandinter-dependencybetweencomponentsin
ACMTransactionsonIntelligentSystemsandTechnology,Vol.12,No.6,Article81.Publicationdate:November2021.
ASurveyofAIOpsMethodsforFailureManagement 81:31
Table7. SummaryofDescribedFaultLocalizationMethods,CategorizedbyDataSourcesandTarget
Component,withCorrespondingAdvantagesandDisadvantages
DataSources Targets
Paper(s) Advantages/Disadvantages
edoCecruoS scirteM cffiarT.wteN noitacilppA erawdraH krowteN retnecataD
sIPK sgoL
[1,30,85,121, pointsdirectlytorootcause/
• •
145,156] applicableonlytosoftwarebugs
unsupervised,onlinelearning/
[110] • • •
black-boxmonitoring
general-purpose,unsupervised/
[80,132] • • complexanalysis,requiresspace
pruningtechniques
unsupervised,accurate,robust/
[9] • • • •
requirestopologyandtrafficinfo
general-purpose,unsupervised/
[83] • • complexanalysis,requiresspace
pruningtechniques
specific/exclusivefor
[72] • •
network-trafficfaultlocalization
softwaresystems,itisconsideredachallengingtask[6].Inthecontextofrequesttracinganddiag-
nosis,thePinpointsystem[25]isoneoftheearliestandmostsalientcontributions.Theapproachis
basedontheanalysisofend-to-endtracesofclientrequests,throughwhichrequestsareclustered.
Thislaterenablesthecorrelationofsimilarfailureswithcomponentscausingthem.Themethod
istestedonasimulatedwebe-commerceenvironmentwhereartificialfaultsinvolvingsingleand
multiplecomponents,areinjected.Inafollowingwork[26](seealsoSection4.3.1),decisiontrees
and association rules are learned to correlate failed requests with root causes. Both approaches
identifythegreatmajorityoffailures(93%),withvariablefalse-positivepredictionrates(23%and
50%,respectively).
Kandulaetal.[64]developShrink,afailurediagnosistooldesignedforopticallinksinIPnet-
works,butcertainlyextendabletoothernetworkingscenarios(theauthorsmention,forexample,
thediagnosisofroutersandservers).Shrinktakesasinputtheconfigurationofthenetwork(both
physicalandsoftware-defined)andthecurrentIPlinkstatustoestimatethemostlikelyexplana-
tionfor theobservedfailure. Thediagnosis taskismodeled usinga bipartiteBayesianNetwork,
connectingthesetofIPlinkswiththesetofphysicalcomponentsonwhichtheyrelytooperate;
thenetworkisthenaugmentedwithlow-probabilityedgesbetweenunrelatednodestoimprove
robustness.Diagnosesareinferredbyfindingthemaximum-likelihoodstateinthephysicallink
spacegiventheobservationfromtheIPlinkstatus.TheNP-hardsearchproblemisapproximated
usingagreedyinferencealgorithm.SinceShrinkperformsbothdetectionanddiagnosis,thesuc-
cessrateandfalse-positive/-negativeratearemeasuredintheevaluationphase.Shrinkexcelsat
the diagnosis task (99.5%) in the presence of an accurate configuration description, while other
approachesoutperformitfordetection[9].
SherLog [154] performs post-mortem analysis of logs and source code to diagnose software
faults(suchascodebugsandconfigurationerrors).SherLogconsistsofthreemainbuildingblocks:
alogparser,whichextractstructurefromlogmessagesandidentifiescorrespondingprintstate-
ments(logpoints)inthesourcecode;apathinferenceengine,whichreconstructsexecutionpaths
ACMTransactionsonIntelligentSystemsandTechnology,Vol.12,No.6,Article81.Publicationdate:November2021.
81:32 P.Notaroetal.
fromlogentriesandknownlogpoints;avalueinferenceengine,whichexecutestheprogramsym-