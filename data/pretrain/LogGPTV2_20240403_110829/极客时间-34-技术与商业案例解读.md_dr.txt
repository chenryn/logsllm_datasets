# 155 \| 创业公司进孵化器真的值得吗？伴随 Y Combinator孵化器在全球范围内的成功，越来越多的创业公司都要面临着一个选择：到底是不是应该进孵化器呢？不进孵化器的好处很明显，不会丢失股份。进孵化器会得到帮助，但往往孵化器本身会拿走2% 到 10%不等的原始股。而孵化器除了不高的资金投入，其好处就不一定那么明显了，创业团队有可能获得很好的帮助，也可能一无所获。在我看来，这个取舍需要考虑两方面因素：创业的团队和孵化器的资质。]{.orange}先聊一下创业的团队。我想，曾经成功创业的人再次创业和从未创业的人开始创业，其结果可能很不一样。有大公司高管加盟的创业团队，和全是学校刚毕业的学生组成的创业团队，其结果也是很不一样的。如果是学生创业，大家都毫无经验的话，有人指导一下前面的路应该怎么走，总归比自己瞎走要好。举个例子，Airbnb是一家非常成功的创业公司了，但是当初两位创始人都是艺术家出身，毫无创业经验。他们如果没有报名Y Combinator的培训班的话，我想无论是找一个程序员做联合创始人，还是后来去找 VC要钱等等，很多事情都有可能耽误他们创业的成功。再举个相反的例子，有一家著名的数据库创业公司Snowflake，其三位联合创始人中的一位自己之前搞过创业公司并成功卖掉了，另外两位在Oracle 工作了很多年，是非常资深的高层，请来的 CEO 则在微软做到过 SeniorVicePresident。这样的一个团队，有足够多的经验，一般的孵化器恐怕给不了什么帮助，还白白浪费了股权。实际上人家也没有去任何孵化器，而且这个公司现在非常得成功。``{=html}从另外一个方面来说，孵化器和孵化器也是不一样的。世界顶级的孵化器 YCombinator，做到今天本身就是金字招牌了，世界各地大把大把的人趋之若鹜地想进去。为什么想进去呢？大体上有三个原因。**第一，Y Combinator里面的创业导师们已经证明了，他们的经验可以给创业团队带来非常多的价值**。这个价值囊括了创业的方方面面，这不是一般的机构可以提供的，也不是一般的创业团队能够具有的。AirBnb和 Dropbox 这种独角兽，岂是一般的孵化器能够孵化出来的。Y Combinator的创业导师给创业团队带来的附加价值，是创业团队趋之若鹜非常重要的原因。**第二，作为创业团队，哪怕冲着融资去，冲着钱去，也没有理由拒绝这种被 YCombinator 加持、认证的过程**。Y Combinator选中的创业团队，本身就不一般，这些项目未来成功的可能性很高。今天 YCombinator如此难进，有无数多的创业团队来申请。那么从这么多的申请者过五关斩六将出来的、成功晋级的创业团队，他们代表的就是好团队好项目。对投资人来说，这些都是已经经过Y Combinator精选出来的好项目。好项目又意味着投资风险低、回报高，所以投资人可以更加放心地投资。而对创业团队来说，获得这种认证，本身就意味着成功融资的可能性大大增强。**最后，Y Combinator有一个传统，就是它很好地维护了早年创业毕业的那些创业者和后来进来的创业者之间的类似校友一般的关系**。在Y Combinator 孵化，并且已经创业成功的那些公司里面，不缺乏 Dropbox 或者Airbnb 这样的巨无霸。Y Combinator构建的这个社交圈，有提携后辈的传统。这些已经创业成功的先辈们，对后面进到Y Combinator 里面来的创业者的提携，也是无可估量的资源。所以到今天来看，进入 YCombinator，付出的原始股和可能获得的潜在价值比起来，显然是后者比前者更加有价值。从这个角度来看，如果一个创业团队有机会进Y Combinator 这样的孵化器的话，没什么理由不去。但是我们也要看到，YCombinator 也是经历了无数年，才进入到今天这种良性循环的状态。适用于 YCombinator 的理由，不一定适用于其他的孵化器。与之对应的，现在市面上的创业孵化器很多。这些孵化器是不是类似 YCombinator这样的金字招牌呢？显然不可能。孵化器圈子也是良莠不齐，所以去不成 YCombinator，选择合适的孵化器对创业团队来说要求很高，而国内的孵化器市场尤其复杂。在国内，最早学习 Y Combinator的当属李开复的创新工场了。创新工场最初在很大程度上学习了它的模式，李开复的理想就是要做中国的Y Combinator。但是大概两年后，李开复就发现做中国的 Y Combinator做不下去了。为什么做不下去？原因比较复杂，创新工场也没有多少公开披露的信息，但我想这和李开复本人的经历很有关系，李开复一直都在大公司工作，自己并没有太多的创业经验。我不否认李开复老师是一个很牛的人，我也非常尊重他。但是一个没有创业并且成功过的人，做创业者的导师，到底能给创业者多大的帮助，是值得审慎考虑的。所以在我看来，李开复老师并没有 Y Combinator的创始人那样成功创业的经历，自然也就不具备复制 Y Combinator的条件。创新工场很快进行了转型，成了纯粹的 VC角色，以投资，而非帮助创业者孵化为主了。在国内，很多没有成功创业经历的人跳出来创建孵化器，这些孵化器在能够给创业者提供多少帮助上，是值得创业者思考的问题。因此，中国的创业者或者就申请了国外的孵化器，或者就干脆不进孵化器了，我想这也是可以理解的。总而言之，进还是不进孵化器，既取决于创业团队，也取决于孵化器。我个人认为，中国国内的孵化器尚不具备类似Y Combinator 的能力，不能像它一样给创业者提供行之有效的帮助。所以，如果你是国内的创业团队，倘若想进孵化器的话，你又会怎么选择呢？![](Images/e7329c467700f5b952da4bc227396c50.png){savepage-src="https://static001.geekbang.org/resource/image/ec/bb/ec0948decf6b89fbe778bfc82bea62bb.jpg"}
# 156 \| Paul Graham：硅谷创业教父著名程序员、计算机编程语言 Lisp 专家、创业者、投资人、作家，这些头衔每一个都金光闪闪。当把这些头衔都集中到一个人身上的时候，这个人就岂止金光闪闪，简直令人仰望了。然而世界上的确有这样的人，比如今天这篇文章的主角保罗·格雷厄姆（PaulGraham）。格雷厄姆如今最为著名的身份，是享誉全球的孵化器 Y Combinator的创始人，但是他的身份和头衔，远不止这一个。今天我们就来全方位地看看他是怎样集众多头衔于一身的。早年出道的格雷厄姆，是众多互联网软件开发者中的一员。但是作为一个资深的程序员，他有一点和其他程序员不太一样，就是特别擅长计算机界一种诞生于20 世纪 60 年代的函数式编程语言：LISP。有关 LISP的故事我们可以大书特书。简单来说，这是一个很优秀很有历史的语言，但同时掌握起来也很有难度。即使是在LISP 最辉煌的年代，也鲜有人是 LISP 的专家。而在格雷厄姆进入计算机行业的20 世纪 90 年代，LISP早已经不是一种很常用的语言了。那个时候是结构化编程语言的天下，C 和 C++是主流，Java 才诞生。但是格雷厄姆是少数几个钟爱LISP，并且研究得非常透彻的人。他曾经写过若干本 LISP 的书，比如*ONLISP*、*ANSI COMMON LISP*等等。这些书到今天依然是这个领域的经典著作。``{=html}他对 LISP 的钟爱，延续到了 1996年的创业。那一年，格雷厄姆和罗伯特·莫里斯（Robert Morris）联合创办了Viaweb。Viaweb这家初创企业的软件，允许用户创建自己的互联网商店，是当时最早在互联网上提供服务的公司。源于对 LISP 的热爱，这个公司的大部分软件代码都是格雷厄姆用 Common Lisp写的，这一点和当时主流的技术栈非常不一样。创业很成功，正好赶上了互联网泡沫的风潮。基于互联网商店提供服务的创业，一下子就引人注目起来。不久之后，1998 年，雅虎就盯上了这个创业公司，两位创始人决定以 5千万美元的价格把 Viaweb卖给雅虎。这个公司的服务被整合进了雅虎的产品，又像历史上无数被雅虎买下的初创公司一样，变得籍籍无名，最终销声匿迹。但是不管怎样，格雷厄姆作为创业者，成功获得了第一桶金。随之而来的一段时间里，他不缺钱，但也没想清楚下一步到底要做什么，所以他把兴趣统统都放到了自己钟爱的LISP 上。那个时候 LISP 在工业界已经是珍稀动物，没什么公司用 LISP开发商用软件，他却并不认同这种现状。他认为 LISP比其他现存语言都更高级、更好，应该更加有前途，只是程序员们大多不够慧眼识珠。他把主要精力都投入到了为LISP 辩护上，并在自己的博客上提出了著名的 Blub论断。这个论断讨论这样一个问题："不同的编程语言到底有什么不一样？是不是一种编程语言比另外一种编程语言更高级？"为了表达观点，他引入了一个叫作 Blub的语言。这个语言比机器上的二进制语言要高级一点，但是比市面上的任何高级语言都要低级。为什么从一个使用 Blub语言的程序员的角度去看，机器上的二进制语言是一个更加低级的编程语言？因为它缺乏了Blub拥有的语言特性。但是从一个使用二进制编程语言的人的角度来看，其实两者没什么差别，因为即便有多余的特性，二进制语言编程者也不会去用那些东西，而只会用属于二进制语言的那个子集。以此类推，如果有程序员用了一种比 Blub 更高级的语言编程，他会觉得 Blub这个语言更低级，缺乏了很多语言特性，但是使用 Blub语言的程序员并不这样看。Blub 语言的程序员会忽略那些额外的语言特性，只用Blub 语言提供的那些。当然这肯定是更高级语言的一个子集。所以格雷厄姆下了这样一个结论：使用更高级语言的人知道低级语言缺乏了一些高级语言的特性，所以低级语言显得更原始，而低级语言的开发者却无法发现高级语言里面蕴含的额外的语言特性。在他看来，只有学习高级语言才能真正了解编程语言的差异。而作为被他大力推崇的、市面上特性最丰富的语言LISP，在他眼里自然是最高级的语言。程序员们如果会 LISP的话，一定会比用其他语言的人懂得更多；反之，如果程序员精通某个低级语言，比如C++，他无法体会到 LISP 里面那些 C++缺少的东西。因此，大家还犹豫什么呢？赶紧加入到 LISP 的怀抱吧。这种努力当然是徒劳无功，LISP 该淘汰自然还是淘汰。很多人不相信 LISP可以开发现代基于互联网的应用。格雷厄姆对此的反击是，在 2001年宣布推出一个基于 LISP 的语言：Arc。这个语言有 LISP的所有好的东西，也弥补了 LISP 在现代编程上的一些缺陷。这个增强版的LISP，或者说 Arc，可以做所有的事情。不但如此，他还一直努力，包括发表论文告诉大家自己给 Arc增加了什么新特性，开发得怎么样了。他更是身体力行，用 Arc 写了著名的Hacker News 论坛，为的就是向全世界证明 Arc不是一个玩具，而是真的可以做产品的现代语言。Hacker News 自然是成名了，但是 Arc 没有什么人搭理。作为 LISP骨灰粉的格雷厄姆以其一己之力，终究无法阻挡历史的车轮，LISP还是进了故纸堆。和对 LISP偏爱齐名，乃至更有名的是他对创业的热爱。格雷厄姆在自己论坛上写的文章，不只是LISP，更有他对创业的思考，这些文章前后时间跨度很大，也文章非常多，也造成了非常广泛的影响。我个人比较推崇下面几篇，排名不分先后：1.  How to Get Startup Ideas2.  Do Things That Don't Scale3.  Startup=Growth除了写文章表达他对创业的热爱和看法，他还在 2005年与老搭档罗伯特·莫里斯（Robert Morris）等人共同创办了 YCombinator，给创业公司提供孵化器模式。顺便说一句，合伙人之一的杰西卡·利文斯通（JessicaLivingston）后来成了他的老婆。有关 Y Combinator的故事，我在前面已经讲过了，它奠定了创业孵化器的标准。格雷厄姆在 YCombinator挑创业者团队的时候，反复强调一点：创业是挑人而非挑项目。他最看好的人首当其冲的素质，是能够决心创业并且不顾一切坚持到底。2014 年，格雷厄姆正式退居二线，从 Y Combinator主席的位置上退下来。这几年来，他没有以前那么活跃了。但是不管怎样，格雷厄姆作为著名的程序员、LISP语言专家、创业者、"创业教父"、作者等诸多角色，在过去的 20余年里，给整个互联网行业，尤其是创投界，带来了巨大的影响。格雷厄姆，是值得我们每个人尊敬的"教父"。![](Images/e7329c467700f5b952da4bc227396c50.png){savepage-src="https://static001.geekbang.org/resource/image/ec/bb/ec0948decf6b89fbe778bfc82bea62bb.jpg"}