### 优化后的文本

#### 5.2 与现有方案的比较
表1对比了我们的方案与基于配对相关假设的先前实用群签名方案。由于我们关注的是实用方案，因此只考虑在随机预言模型中的那些方案。为了进行比较，我们使用256位群阶，使得G和Zp中的元素各用256位编码。

**Boneh, Boyen 和 Shacham 的方案 [14]** 是第一个提供短签名的方案：每个签名包含3个群元素和6个Zp中的元素。然而，该方案仅适用于静态群，并且依赖于强Diffie-Hellman假设（SDH），这是一个非标准的q型假设，其匿名性仅在CPA意义上得到证明。

**Delerablée 和 Pointcheval [27]** 提出了一种针对动态增长群设计的方案，并且是完全（即CCA）匿名的。他们的方案的安全性基于外部Diffie-Hellman假设（XDH），这是我们这里也使用的假设，以及q-SDH假设。在[27]中，每个签名由4个群元素和5个Zp中的标量组成，这导致与之前的签名大小相同。他们还提出了一种变体以摆脱XDH假设，但代价是多出2个群元素和一个标量，但他们仍然依赖于q-SDH假设。

**Bichsel 等人 [12]** 提出了一种非常短的动态群签名，其中每个签名包含3个群元素和2个Zp中的元素。缺点是他们使用了LRSW假设 [42]，这是一个非常特定的交互假设，而且他们的安全性概念不是完全匿名的，而是一种混合安全，具有无我匿名性，在表1中标记为“CCA-”。另一个需要注意的是，与前两个系统不同，他们的开销复杂度是线性的，与群成员数量成正比。

2015年，**Pointcheval 和 Sanders [46]** 给出了[12]的一个实例化，基于不对称设置下的LRSW假设变体（即仅使用Type III配对），提供了比[12]更短的签名，但也具有相同的缺点。他们的方案提供的签名仅包含2个G中的群元素和2个Zp中的标量。

我们的主要贡献是提供了大小相当的签名——我们的方案由7个群元素和3个Zp中的标量组成——同时依赖于标准的、常数大小的假设。此外，我们注意到可以通过牺牲线性时间开销算法来节省一个G中的元素，这个开销与用户数量N成正比（类似于[12]）。

| 名称 | 我们的方案 | Bichsel等人 | Boneh-Boyen-Shacham | Delerablée-Pointcheval | Pointcheval-Sanders |
| --- | --- | --- | --- | --- | --- |
| 签名长度 (G/Zp) | 7/3 | 6/2 | 5/3 | 4/2 | 2/2 |
| 总长度 (bits) | 2560 | 2304 | 2304 | 1280 | 1024 |
| 假设 | SXDH + SDL | SDH + DLIN | SDH + XDH | LRSW + SDL | LRSW |
| 群类型 | 动态 | 动态 | 静态 | 动态 | 动态 |
| 匿名性 | CCA | CPA | CCA | CCA- | CCA- |

表1：不同群签名方案之间的比较

### 致谢
第一作者得到了“里昂圣埃蒂安大学未来计划”的支持，这是在“投资未来”计划（ANR-11-IDEX-0007）框架内的资助。第三作者部分得到了欧洲研究理事会（FP7/2007-2013拨款协议编号339563 - CryptoCloud）和比利时F.R.S.-F.N.R.S.的支持。

### 参考文献
[略]

希望这些修改使文本更加清晰、连贯和专业。如果有任何进一步的修改需求，请告诉我！