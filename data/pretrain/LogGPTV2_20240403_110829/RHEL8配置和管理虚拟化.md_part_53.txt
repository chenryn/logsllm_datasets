        2.  卸载 `kvm`{.literal} 模块：
            ``` literallayout
            # modprobe -r kvm
            ```
        3.  激活嵌套功能：
            ``` literallayout
            # modprobe kvm nested=1
            ```
        4.  现在启用嵌套功能，但只有在下次重启 L0
            主机时才启用。要永久启用它，请在
            `/etc/modprobe.d/kvm.conf`{.literal} 文件中添加以下行：
            ``` literallayout
            options kvm nested=1
            ```
        :::
    :::
:::
::: itemizedlist
**流程**
-   在 L1 虚拟机中创建 L2 虚拟机。要做到这一点，请遵循[创建 L1
    虚拟机](#getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization.html#assembly_creating-virtual-machines_virt-getting-started "创建虚拟机"){.link}的相同步骤。
:::
:::
::: section
::: titlepage
# []{#creating-nested-virtual-machines_configuring-and-managing-virtualization.html#creating-a-nested-virtual-machine-on-ibm-power-9_creating-nested-virtual-machines}在 IBM POWER9 上创建嵌套虚拟机 {.title}
:::
按照以下步骤在 IBM POWER9 主机中启用和配置嵌套虚拟化。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
目前嵌套虚拟化仅作为 IBM POWER9 架构的
[技术预览](https://access.redhat.com/support/offerings/techpreview/){.link}
提供，因此不受支持。此外，之前版本的 IBM POWER 系统（如 IBM
POWER8）上无法创建嵌套虚拟机(VM)。
:::
::: itemizedlist
**先决条件**
-   L0 RHEL 8 主机正在运行 L1 虚拟机。L1 虚拟机使用 RHEL 8
    作为客户机操作系统。
-   在 L0 主机上启用嵌套虚拟化：
    ``` literallayout
    # cat /sys/module/kvm_hv/parameters/nested
    ```
    ::: itemizedlist
    -   如果命令返回 [**Y**]{.strong} 或
        [**1**]{.strong}，则代表启用了该功能，您可以执行以下步骤。
    -   如果命令返回 [**0**]{.strong} 或
        [**N**]{.strong}，请使用以下步骤启用该功能：
        ::: orderedlist
        1.  在 L0 主机上停止所有运行的虚拟机。
        2.  卸载 `kvm`{.literal} 模块：
            ``` literallayout
            # modprobe -r kvm_hv
            ```
        3.  激活嵌套功能：
            ``` literallayout
            # modprobe kvm_hv nested=1
            ```
        4.  现在启用嵌套功能，但只有在下次重启 L0
            主机时才启用。要永久启用它，请在
            `/etc/modprobe.d/kvm.conf`{.literal} 文件中添加以下行：
            ``` literallayout
            options kvm_hv nested=1
            ```
        :::
    :::
:::
::: orderedlist
**流程**
1.  为确保 L1 虚拟机能够创建 L2 虚拟机，请将 `cap-nested-hv`{.literal}
    参数添加到 L1 虚拟机的机器类型。要做到这一点，使用
    `virsh edit`{.literal} 命令修改 L1 虚拟机的 XML 配置，并将以下行改为
    ``{.literal} 部分：
    ``` literallayout
    ```
2.  在 L1 虚拟机中创建 L2 虚拟机。要做到这一点，请遵循[创建 L1
    虚拟机](#getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization.html#assembly_creating-virtual-machines_virt-getting-started "创建虚拟机"){.link}的相同步骤。
    为了显著提高 L2 虚拟机的性能，红帽建议在 L2 虚拟机的 XML
    配置中添加\"cap-nes-hv\"参数。具体步骤请查看上一步。
:::
::: itemizedlist
**附加信息**
-   请注意，使用 IBM POWER8 作为 L2 虚拟机的架构目前无法正常工作。
:::
:::
::: section
::: titlepage
# []{#creating-nested-virtual-machines_configuring-and-managing-virtualization.html#restrictions-and-limitations-for-nested-virtualization_creating-nested-virtual-machines}嵌套虚拟化的限制 {.title}
:::
在使用嵌套虚拟化时请记住以下限制。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
红帽目前不支持嵌套虚拟化，仅提供嵌套作为
[技术预览](https://access.redhat.com/support/offerings/techpreview/){.link}。
:::
[**支持的构架**]{.strong}
::: itemizedlist
-   L0 主机必须是 Intel、AMD、IBM POWER9 或 IBM Z
    系统。嵌套虚拟化目前无法在其它构架中使用。
:::
[**支持的客户端操作系统**]{.strong}
::: itemizedlist
-   要创建嵌套虚拟机，您必须使用以下客户机操作系统(OS)：
    ::: itemizedlist
    -   在 [**L0 主机上**]{.strong} - RHEL 8.2 及更新的版本
    -   在 [**L1 虚拟机上 -**]{.strong} RHEL 7.8 及更新的版本，RHEL 8.2
        及更新的版本
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        此支持不适用于在 L1 虚拟机中使用基于 RHEL 7 和 RHEL 8
        的虚拟化产品。它们是：
        ::: itemizedlist
        -   Red Hat Virtualization
        -   Red Hat OpenStack Platform
        -   OpenShift Virtualization
        :::
        :::
    -   在 [**L2 虚拟机**]{.strong} 上 - 您必须使用以下操作系统之一：
        ::: itemizedlist
        -   RHEL 7.8 及更新的版本
        -   RHEL 8.2 及更新的版本
        -   Microsoft Windows Server 2016
        -   Microsoft Windows Server 2019
        :::
    :::
-   另外，在 IBM POWER9 中，嵌套虚拟化当前仅在以下情况下正常工作：
    ::: itemizedlist
    -   L0 主机和 L1 虚拟机都使用 RHEL 8
    -   L2 虚拟机使用 RHEL 8 或 RHEL 7 及 `rhel-alt`{.literal} 内核。
    -   L1 VM 和 L2 虚拟机没有在 POWER8 兼容模式下运行。
    :::
:::
[**管理程序限制**]{.strong}
::: itemizedlist
-   目前，红帽支持仅在 RHEL-KVM 上嵌套。当 RHEL 用作 L0
    系统管理程序时，您可以将 RHEL 8 或 Windows 用于 WSL 2 作为 L1
    系统管理程序。
-   在非 KVM L0 系统管理程序（如 VMware ESXi 或 Amazon Web
    Services(AWS)）上使用 L1 RHEL 8 虚拟机时，可以在 RHEL 8
    客户机操作系统中创建 L2 虚拟机，但不受支持。
:::
[**功能限制**]{.strong}
::: itemizedlist
-   L2 虚拟机作为 hypervisor 和创建 L3
    客户机尚未经过正确测试，因此无法正常工作。
-   如果在 L0 主机上启用了嵌套虚拟化，则迁移虚拟机目前无法在 AMD
    系统中工作。
-   在 IBM Z 系统中，无法同时使用巨页后备存储和嵌套虚拟化。
    ``` literallayout
    # modprobe kvm hpage=1 nested=1
    modprobe: ERROR: could not insert 'kvm': Invalid argument
    # dmesg |tail -1
    [90226.508366] kvm-s390: A KVM host that supports nesting cannot back its KVM guests with huge pages
    ```
-   L0 主机中的一些特性可能不适用于 L1 管理程序。
    例如，在 IBM POWER 9
    硬件中，外部中断虚拟化引擎(XIVE)无法正常工作。但是，L1
    虚拟机可以使用模拟的 XIVE 中断控制器来启动 L2 虚拟机。
:::
:::
:::
[]{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html}
::: chapter
::: titlepage
# []{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization}第 19 章 诊断虚拟机问题 {.title}
:::
使用虚拟机(VM)时，您可能会遇到不同严重级别的问题。有些问题可能具有快速而简单的修复，而对另一些问题来说，您可能需要捕获与虚拟机相关的数据和日志来报告或诊断问题。
以下小节提供有关生成日志、诊断一些常见虚拟机问题以及报告这些问题的详细信息。
::: section
::: titlepage
# []{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#generating-virtual-machine-debug-logs_diagnosing-virtual-machine-problems}生成虚拟机调试日志 {.title}
:::
要诊断虚拟机(VM)问题，生成和查看调试日志会很有帮助。当请求支持解决虚拟机相关问题时，附加
debug 日志也很有用。
以下小节解释了 [什么是 debug 日志，以及如何将 它们设置为永久
日志](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#understanding-virtual-machine-debug-logs_generating-virtual-machine-debug-logs "了解虚拟机调试日志"){.link}，[在运行时启用它们](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#enabling-virtual-machine-debug-logs-during-runtime_generating-virtual-machine-debug-logs "在运行时启用虚拟机调试日志"){.link}，并在报告
[问题时附加它们](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#attaching-virtual-machine-debug-logs_generating-virtual-machine-debug-logs "附加虚拟机调试日志来支持请求"){.link}。
::: section
::: titlepage
## []{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#understanding-virtual-machine-debug-logs_generating-virtual-machine-debug-logs}了解虚拟机调试日志 {.title}
:::
debug
日志是文本文件，其中包含有关虚拟机(VM)运行时期间发生的事件的数据。日志提供有关基本服务器端功能的信息，如主机库和
`libvirtd`{.literal}
服务。日志文件还包含所有运行中虚拟机的标准错误输出(`stderr`{.literal})。
默认不启用 debug 日志记录，且必须在 libvirt
启动时启用。您可以为一个会话启用日志记录，也可以
[永久启用记录](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#enabling-persistent-settings-for-virtual-machine-debug-logs_generating-virtual-machine-debug-logs "为虚拟机调试日志启用持久性设置"){.link}。您还可以
[修改守护进程运行时设置，在 `libvirtd`{.literal}
守护进程会话已经运行时](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#enabling-virtual-machine-debug-logs-during-runtime_generating-virtual-machine-debug-logs "在运行时启用虚拟机调试日志"){.link}
启用日志记录。
在请求对虚拟机问题的支持时，[附加 libvirt
调试日志](#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#attaching-virtual-machine-debug-logs_generating-virtual-machine-debug-logs "附加虚拟机调试日志来支持请求"){.link}也很有用。
:::
::: section
::: titlepage
## []{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#enabling-persistent-settings-for-virtual-machine-debug-logs_generating-virtual-machine-debug-logs}为虚拟机调试日志启用持久性设置 {.title}
:::
您可以通过编辑位于 `/etc/libvirt`{.literal} 目录中的
`libvirtd.conf`{.literal} 配置文件，将虚拟机(VM)调试日志配置为在 libvirt
启动时自动启用。
::: orderedlist
**流程**
1.  在编辑器中打开 `libvirtd.conf`{.literal} 文件。
2.  根据您的要求替换或设置过滤器。
    ::: table
    []{#diagnosing-virtual-machine-problems_configuring-and-managing-virtualization.html#idm140399972648432}
    **表 19.1. 调试过滤器值**
    ::: table-contents
      ------------------ --------------------------------------
      [**1**]{.strong}   记录 libvirt 生成的所有消息。
      [**2**]{.strong}   记录所有非调试信息。
      [**3**]{.strong}   记录所有警告和错误消息。这是默认值。