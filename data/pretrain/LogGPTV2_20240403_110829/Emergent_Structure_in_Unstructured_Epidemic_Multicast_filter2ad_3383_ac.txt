6. Experimental Results
6.1. Pseudo-Geographical
To strengthen the intuition, we start by evaluating the
impact of the proposed strategies with an oracle that con-
siders pseudo-geographical position of nodes, as generated
by Inet-3.0. Although this cannot be used to assess the per-
formance of the protocol, as geometrical distance does not
directly map to end-to-end distance, it allows the resulting
emergent structure to be plotted and understood.
Fig. 4 shows the result of running 100 node conﬁgura-
tions with different strategies and then selecting the top 5%
connections with highest throughput. The size of each red
circle is proportional to the amount of payload transmitted
by the node. Note that each connection is used for a brief
period of time, as the membership management algorithm
periodically shufﬂes peers with neighbors. This means that
connections shown may have not existed simultaneously.
As a baseline, Fig. 4(a) shows an eager push conﬁgura-
tion, where no structure is apparent. A conﬁrmation of this
is given by the fact that the top 5% connections account for
only 7% of all trafﬁc, i.e. payload transmissions are evenly
spread across all connections. In sharp contrast, Fig. 4(b)
shows an obvious emergent mesh structure as a result of the
Radius strategy, in which the 5% connections account for
37% of all payload transmissions. Finally, Fig. 4(c) shows
a sub-set of nodes emerging as super-nodes, accounting for
a large share of links and also transmitting a higher number
of payloads. Again, the emergent structure is conﬁrmed by
the fact that 5% of the connections account for 30% of total
payloads transmitted.
6.2. Latency vs Bandwidth
is
the
The
primary
criterion
evaluation
la-
tency/bandwidth tradeoff provided by each conﬁguration.
Assuming an eager push protocol, one expects that each
payload is approximately transmitted f times for each
delivery. This makes gossip protocols notorious for wasted
bandwidth. On the other hand, assuming that one uses
a lazy push approach, one expects on average a single
payload transmitted for each messages delivery at
the
expense of an additional round-trip, thus impacting latency.
The measurements of strategy Flat in Fig. 5(a) illustrate
this tradeoff. Latency can be improved from 480 ms down
to 227 ms by increasing parameter π. This does however in-
crease the number of payloads transmitted for each message
delivered from the optimal 1 up to 11, the fanout value used.
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007(a) Latency/bandwidth tradeoff.
(b) Average deliveries.
(c) Hybrid strategy.
Figure 5. Performance.
A much better tradeoff can be obtained with the TTL strat-
egy, which achieves 250 ms with 1.7 transmitions of pay-
load for each message delivered.
Considering that a large majority of links is between
39 ms and 60 ms (with mean close to 50 ms), and that each
message is delivered on the average after being gossiped 4.5
times, it is not realistic to expect that link selection provides
an improvement beyond a 45 ms. It is therefore interesting
to observe that the Ranked strategy does indeed improve av-
erage latency when compared to the Flat strategy that pro-
duces a similar amount of trafﬁc. On the other hand, the Ra-
dius strategy does not produce such improvement. This is
explained by noting that the reduced round latency is com-
pensated by an average larger number of rounds required.
6.3. Reliability
We are interested in conﬁrming that the proposed ap-
proach does not impact reliability. We simulate failed nodes
by silencing them with ﬁrewall rules after letting them join
the overlay and warm up, i.e. immediately before starting
to log message deliveries.
As a baseline in Fig. 5(b), we fail an increasing num-
ber of nodes selected at random while using a pure eager
push conﬁguration of the protocol. As expected, when no
node fails one observes perfect atomic delivery of all mes-
sages. With 20% or more nodes failing, one observes that
atomic delivery does not always happen, although as ex-
pected there is a large number of nodes that deliver each
message. Finally, with more than 80% of nodes failing, the
protocol breaks down as an arbitrary number of nodes get
disconnected from the overlay.
Then we do the same with the Ranked strategy. We run
experiments twice: First, we select failed nodes at random.
Then we select the nodes with the best ranks, precisely those
that are contributing more to the dissemination effort. As
can be observed also in Fig. 5(b), there is no noticeable im-
pact in reliability in both situations. With more that 80% of
nodes failing, although there is an apparent difference, the
observed high variance makes it impossible to conclude on
a which conﬁguration is the best.
6.4. Hybrid Strategy
A major advantage of the proposed approach is that one
can easily try new strategies without endangering the cor-
rectness of the protocol. Namely, this can be used to try
complex heuristics. We do this now by trying to leverage
the contribution of TTL, Radius, and Ranked in a single
In detail, EAGER?(i, d, r, p) returns true
hybrid strategy.
iff one of the involved nodes is considered a best node; or
if METRIC(p) < 2ρ when r < u; or METRIC(p) < ρ
otherwise. i.e. radius shrinks with increasing round num-
ber. Parameters ρ and u are the same as in Radius and TTL
strategies. SCHEDULEDNEXT() is deﬁned exactly as in the
Radius strategy.
The result is shown in Fig. 5(c), which provides a new
interesting tradeoff for regular nodes: Latency can be re-
duced from 379 ms to 245 ms while increasing average pay-
load to 80% of nodes from 1.01 to 1.20 payload transmis-
sions for each message (see “combined (low)” in Fig. 5(c)).
This is achieved at the expense of a contribution of 10.77
payload/message by the remaining 20% (overall average of
3.11). Eager gossip would require an overall average of 11
payload/message to achieve 227 ms.
6.5. Noise
Finally, we evaluate the protocol when the accuracy of
the performance monitoring module deteriorates. As de-
scribed in Section 4.3, we do this in a way that carefully
preserves the amount of data transmitted. This can be con-
ﬁrmed in Fig. 6(a). Note however that the amount of data
transmitted by regular nodes (i.e. other than the best nodes)
increases with the amount of noise until it converges with
the overall average.
Fig. 6(b) shows the impact of degrading structure in la-
tency of the Ranked strategy, as Radius does not provide
 200 250 300 350 400 450 500 0 1 2 3 4 5 6 7 8 9 10 11latency (ms)payload/msgflatTTLradiusranked (all)ranked (low) 50 60 70 80 90 100 0 10 20 30 40 50 60 70 80mean deliveries (%)dead nodes (%)flat/randomranked/randomranked/ranked 200 225 250 275 300 325 350 375 400 1 2 3 4 5 6 7latency (ms)payload/msgTTLcombined (all)combined (low)37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007(a)
(b)
(c)
Figure 6. Degradation of structure.
a latency advantage. Finally, Fig. 6(c) uses the amount of
data conveyed by the top 5% links as a measure of emer-
gent structure. It can be observed that it converges to the
expected 5% of trafﬁc as noise increases, thus showing that
structure is increasingly blurred.
7. Related Work
Reliable multicast in large scale networks has been ad-
dressed a number of times using a different approaches.
Some proposals build on IP multicast, and have thus been
hard to deploy [8]. More recently, a number of application-
level multicast protocols have been proposed, namely, by
building on scalable structured overlay networks [3, 19, 18,
23]. It would be interesting to compare the performance of
such protocols with the proposed approach, as well as the
amount of code required to implement them. Nevertheless,
by relying on explicit garbage collection to ensure reliabil-
ity, these approaches should be vulnerable to the throughput
stability problem [1].
The ﬁrst reliable multicast protocol to exploit gossip-
ing in order to provide simultaneously atomic delivery and
throughput stability is Bimodal Multicast [2]. This proto-
col does however rely on an optimistic dissemination phase
to avoid a large number of redundant transmissions. This
makes it hard to scale it to wide area networks, as the low
adoption of IP multicast in WAN has shown.
It has also been proposed that instead of using a random
overlay, one can build a mesh according to some conﬁg-
urable metric using gossiping itself [14]. In fact, it has been
pointed out a number of different structures can be built us-
ing gossiping [10]. These proposals share with ours the re-
quirement of a performance monitor, but do not preserve
the random nature of an unstructured overlay which is key
to reliability [11]. Similar techniques can however be used
to derive knowledge about the environment for use by the
Transmission Strategy module.
Lazy push gossip can also be confused with pull gossip,
as in both cases payload is transmitted only upon request.
Pull gossip is however fundamentally different as it issues
generic requests to a random sub-set of nodes, which might
or not have new data, while lazy push gossip requests spe-
ciﬁc data items only from peers that have previously adver-
tised them. In fact, unless performed lazily, pull gossip will
result in multiple payload transmissions to the same destina-
tion as much as eager push gossip. A combination of eager
push and eager pull gossip has been proposed as a means
to reduce propagation latency [12]. A combination of lazy
pull gossip and lazy push gossip has been proposed in the
CREW protocol for fast ﬁle download by a large number of
destinations [4], where the latency of lazy gossip is hidden
by concurrently requesting multiple chunks of a large ﬁle.
Adaptation to heterogeneous network resources can also
be done by adjusting node fanout according to available
bandwidth [17, 4] and by biasing choices during gossiping
and overlay maintenance [17]. Although in the current pa-
per we have always used unmodiﬁed gossip to demonstrate
viability, combining both approach should allow further im-
provements.
8. Conclusions
Epidemic multicast protocols are notorious for being re-
silient and scalable, but also for generating a large number
of redundant message transmissions. In this paper, we have
shown that by carefully scheduling the transmission of pay-
load in a combined eager/lazy push gossip protocol, one can
reduce the bandwidth required without otherwise impacting
performance or reliability. Namely, we propose an heuris-
tic conﬁguration that achieves close to optimum bandwidth
and latency in a large majority of participants.
Most interestingly, when we examine the resources used,
we observe that those nodes and links on which most pay-
load transmissions are scheduled emerge as a probabilistic
structure embedded in an otherwise unstructured overlay.
This shows that one can approximate the performance ad-
vantages of structured overlays while at the same time pre-
serving the simplicity, resilience and scalability of gossip.
 2 3 4 5 0 20 40 60 80 100payload/msgnoise (%)radiusranked (all)ranked (low) 200 250 300 350 400 450 500 0 20 40 60 80 100latency (ms)noise (%)radiusranked 0 5 10 15 20 25 0 20 40 60 80 100traffic (%)noise (%)radiusranked37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007of unstructured gossip-based implementations. In Proc. 5th
ACM/IFIP/USENIX Intl. Conf. Middleware, 2004.
[12] R. Karp, C. Schindelhauer, S. Shenker, and B. Vocking.
Randomized rumor spreading. In IEEE Symp. Foundations
of Computer Science, 2000.
[13] B. Koldehofe. Buffer management in probabilistic peer-to-
peer communication protocols. In Proc. IEEE Symp. Reli-
able Distributed Systems (SRDS), 2003.
[14] L. Massoulié, A.-M. Kermarrec, and A. Ganesh. Network
awareness and failure resilience in self-organising overlay
networks. In Proc. IEEE Symp. Reliable Distributed Systems
(SRDS’03), 2003.
[15] J. Pereira, R. Oliveira, and L. Rodrigues. Efﬁcient epidemic
multicast in heterogeneous networks. In OTM Workshops,
number 4278 in Lecture Notes in Computer Science, 2006.
[16] J. Pereira, L. Rodrigues, M. J. Monteiro, R. Oliveira, and
A.-M. Kermarrec. NeEM: Network-friendly epidemic mul-
In Proc. IEEE Symp. Reliable Distributed Systems
ticast.
(SRDS), 2003.
[17] J. Pereira, L. Rodrigues, A. Pinto, and R. Oliveira. Low-
latency probabilistic broadcast in wide area networks.
In
Proc. IEEE Symp. Reliable Distributed Systems (SRDS’04),
Oct. 2004.
[18] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker.
Application-level multicast using content-addressable net-
works. In NGC ’01: Proceedings of the Third International
COST264 Workshop on Networked Group Communication,
2001.
[19] A. Rowstron, A.-M. Kermarrec, M. Castro, and P. Druschel.
SCRIBE: The design of a large-scale event notiﬁcation in-
frastructure. In NGC ’01: Proceedings of the Third Interna-
tional COST264 Workshop on Networked Group Communi-
cation. Springer-Verlag, 2001.
and J. Pereira.
NeEM version 0.5.
[20] P. Santos
http://neem.sf.net, 2006.
[21] A. Vahdat, K. Yocum, K. Walsh, P. Mahadevan, D. Kostic,
J. Chase, and D. Becker. Scalability and accuracy in a large-
scale network emulator. In Proceedings of 5th Symposium
on Operating Systems Design and Implementation (OSDI),
2002.
[22] J. Winick and S. Jamin. Inet-3.0: Internet topology genera-
tor. Technical Report CSE-TR-456-02, University of Michi-
gan, 2002.
[23] S. Zhuang, B. Zhao, A. Joseph, R. Katz, and J. Kubia-
towicz. Bayeux: An architecture for scalable and fault-
tolerant wide-area data dissemination. In Proceedings of the
Eleventh International Workshop on Network and Operating
System Support for Digital Audio and Video, 2001.
Furthermore, our evaluation shows that the resulting per-
formance degrades gracefully as the knowledge about the
environment becomes less accurate, thus demonstrating the
robustness of the approach. In fact, the worst case scenario
in which such knowledge is entirely random, the perfor-
mance is bounded by the original pure lazy or eager push
protocols.
Note also that, although best results are achieved when
all nodes cooperate on a single strategy, correctness is en-
sured regardless of the strategy used by each peer. This
makes the proposed approach a promising base for building
large scale adaptive protocols, given that its operation does
not require tight global coordination.
Acknowledgments
The authors thank Bruno Matos at the U. Minho for his
work on setting up the experimental environment.
References
[1] K. Birman. A review of experiences with reliable multicast.
Software Practice and Experience, 29(9), July 1999.
[2] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu,
and Y. Minsky. Bimodal multicast. ACM Trans. Computer
Systems, 17(2), May 1999.
[3] Y. Chu, S. Rao, S. Seshan, and H. Zhang. A case for end
system multicast. IEEE Journal on Selected Areas in Com-
munication (JSAC), 20(8), 2002.
[4] M. Deshpande, B. Xing, I. Lazardis, B. Hore, N. Venkata-
subramanian, and S. Mehrotra. CREW: A gossip-based
ﬂash-dissemination system. In Intl. Conf. Distributed Com-
puting Systems (ICDCS), 2006.
[5] P. Eugster, R. Guerraoui, S. Handrukande, A.-M. Kermarrec,
and P. Kouznetsov. Lightweight probabilistic broadcast. In
Proc. IEEE Intl. Conf. Dependable Systems and Networks
(DSN), 2001.
[6] P. Eugster, R. Guerraoui, A.-M. Kermarrec, and L. Mas-
IEEE
soulie. From epidemics to distributed computing.
Computer, May 2004.
[7] S. Floyd and K. Fall. Promoting the use of end-to-end con-
gestion control in the Internet. IEEE/ACM Trans. Network-
ing, 7(4), Aug. 1999.
[8] S. Floyd, V. Jacobson, C. Liu, S. McCanne, and L. Zhang.
A reliable multicast framework for light-weight sessions and
application level framing. IEEE/ACM Transactions on Net-
working, 5, Dec. 1997.
[9] M. Jelasity. A case study on gossip beyond gossip: Sorting.
Ws. on Gossip Based Computer Networking, Lorent Center,
Leiden, 2006.
[10] M. Jelasity and O. Babaoglu. T-Man: Gossip-based overlay
topology management. In Proc. 3rd Intl. Ws. Engineering
Self-Organising Applications (ESOA’05). Springer-Verlag,
2005.
[11] M. Jelasity, R. Guerraoui, A.-M. Kermarrec, and M. van
Steen. The peer sampling service: Experimental evaluation
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007