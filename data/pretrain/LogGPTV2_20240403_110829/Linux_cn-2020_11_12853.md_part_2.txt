起初，微软曾试图收购网景公司，但因出价过低而遭到拒绝。因此，微软决定自主研发浏览器，并将其命名为Internet Explorer (IE)。

**Clive Thompson：**
微软仅用了一年的时间就迅速开发出了浏览器，并于1995年秋季发布。与网景类似，微软的策略也是快速推出产品，不追求完美，而是通过不断迭代来改进。在20世纪90年代后期，一场关于浏览器性能、交互性和功能性的激烈竞争随之展开。

**Saron Yitbarek：**
值得注意的是，在这场较量中，网景并未占据明显优势。

**Clive Thompson：**
微软凭借其强大的市场地位占据了上风。当时全球约80%至90%的计算机都安装了Windows系统，这使得微软能够轻松地将IE设置为默认浏览器。随着这一举措的实施，我们可以看到IE市场份额的持续增长。

**Saron Yitbarek：**
尽管如此，网景在这场斗争中始终处于不利地位。然而，在最终败北之前，他们做出了一项孤注一掷的决定——创造JavaScript，这后来成为了编程领域的一大突破。

**Clive Thompson：**
这就是JavaScript诞生背后那段引人入胜且略显奇特的故事。

**Saron Yitbarek：**
围绕Web的所有讨论和热议都指向了一个需求：我们需要一种新的编程语言，一种超越HTML的语言，专门为基于Web的应用程序设计。我们希望这种语言不仅能在网络上生存，还能在此环境中茁壮成长。

**Clive Thompson：**
那么如何为浏览器创建这样一种编程语言呢？

**Saron Yitbarek：**
这是一个价值数十亿美元的问题。当网景意识到微软成为竞争对手时，他们开始关注Java。虽然Java是一种功能强大且丰富的编译型语言，表现力堪比C++，但它仍需经过编译过程。相比之下，开发者更倾向于使用一种轻量级、可解释执行的语言，以便吸引那些非专业程序员加入Web开发行列。毕竟，这些新晋程序员渴望直接在网页上进行工作，而这正是他们的梦想所在。

**Saron Yitbarek：**
网景需要一种可以在浏览器内部运行的编程语言，使开发者能够为静态网页添加动态效果。他们设想如果能够在Netscape 2.0测试版发布的同时推出这样一种新语言，那将是多么令人兴奋的事情。然而问题在于，留给他们的只有短短十天时间来创造一门全新的语言。实际上，这项艰巨的任务交给了Brendan Eich一人完成。毫无疑问，如果有人能够胜任此任务，那必定是他。早在伊利诺伊大学求学期间，Eich就经常出于兴趣而发明各种新语言，仅仅是为了玩弄语法而已。

**Charles Severance：**
Brendan Eich的关键在于，他在构建JavaScript时已经是一名狂热的编程语言爱好者了。

**Saron Yitbarek：**
为了更好地理解Eich所取得的成就，我们采访了密歇根大学信息学院教授Charles Severance。

**Charles Severance：**
在某种程度上，JavaScript是在一个以Java为未来方向的时代被创造出来的。1994年，人们普遍认为Java将解决所有问题。但一年后，真正解决问题的语言出现了，只是它不能声称自己解决了所有问题，因为当时每个人都相信Java才是未来的方向。因此，他们必须构建一种看似微不足道、甚至有些愚蠢但实际上却是正确解决方案的语言。

**Saron Yitbarek：**
然而，Eich提供的绝不仅仅是一种玩具语言。它隐藏着复杂的处理机制，并从先前的语言中汲取灵感。

**Charles Severance：**
如果你观察其基本语法，可以明显看出它受到了带有花括号和分号的C语言的影响。部分字符串模式则借鉴自Java编程语言。但是，面向对象的基本模式以及头等函数的概念来源于名为Modula-2的编程语言。对我来说，选择头等函数确实是让JavaScript变得如此强大且可扩展的一个关键因素之一。这意味着函数本身及其构成代码都可以作为数据进行操作。

**Charles Severance：**
另一个重要的灵感来源是HyperCard。由于JavaScript始终在浏览器中运行，因此它具备文档对象模型（DOM）这一基本数据上下文。DOM是对网页的面向对象表示。不同于传统编程语言，JavaScript代码并不是一开始就存在的；最初它只是一个网页，最终演变成了一种事件驱动的编程方式。

**Saron Yitbarek：**
1995年11月30日，JavaScript随同网景Navigator 2.0一同发布。包括美国在线(AOL)和AT&T在内的28家公司同意将其作为一种开放标准的语言使用。尽管在发布之初，一些经验丰富的专业人士对JavaScript嗤之以鼻，认为这只是初学者使用的语言，但他们忽略了其革命性的潜力。

**Charles Severance：**
Brendan决定将许多源自不太知名但非常先进的面向对象语言中的概念融入其中。因此，JavaScript就像一只特洛伊木马，悄无声息地进入了我们的集体意识，被认为是一种简单、轻巧且玩笑般的语言。但从一开始，它就被设计成了一门强大而深思熟虑的编程语言，几乎能够实现计算机科学中的任何事情。

**Saron Yitbarek：**
结果证明，JavaScript成为了一种原生支持浏览器的语言，随着我们在网上生活方式的发展而不断进化。不久之后，它便成为了事实上的Web开发首选语言。

**Charles Severance：**
JavaScript已经成为不可或缺的编程语言之一。对于想要构建具有交互元素的浏览器应用程序的人来说，学习JavaScript几乎是必然的选择。无论你喜欢哪种编程语言，你都会发现答案往往是“某某加上JavaScript”。例如，“我喜欢Python和JavaScript”，或者“我喜欢Scala和JavaScript”，因为它似乎成了每个人都需要掌握的语言。

**Saron Yitbarek：**
Charles Severance是密歇根大学信息学院的教授。他说，网景公司在初期表现强劲，在浏览器大战中奋力拼搏，但最终……

**Clive Thompson：**
网景浏览器作为一款严肃的产品逐渐淡出了人们的视线。

**Saron Yitbarek：**
微软在整个行业的主导地位是一股不可忽视的力量。尽管他们在浏览器竞赛中起步较晚，但仍成功扭转局势并赢得了最终胜利。然而，网景留下的遗产——JavaScript，却取得了巨大成功。即使在浏览器战争结束后很长一段时间里，这种从争斗中诞生的语言依然发挥着改变世界的作用。

**Saron Yitbarek：**
如果你是最近才开始接触编程的话，可能会理所当然地认为你可以开发出能够即时更新内容而无需重新加载整个页面的交互式Web页面。但想象一下，当这样的技术首次出现时会带来多大的变革吧。为此，我们邀请到了红帽公司的软件工程师Michael Clayton来帮助我们了解这一转变的重要性。

**Michael Clayton：**
我想说，在2004年Gmail发布之际，据我所知，它是第一个真正将JavaScript提升到更高水平的Web应用。它利用JavaScript实现了内容的动态切换。

**Saron Yitbarek：**
假设你在查看收件箱，然后点击了一封邮件。在过去，电子邮件客户端会在你的浏览器中加载一个全新的页面，只是为了显示那封邮件。当你关闭该邮件时，它又会重新加载整个收件箱列表。
  
**Michael Clayton：**
这种方式导致了大量的延迟。每次在不同视图间切换时都要等待很长时间。而Gmail改变了这一点。它使用JavaScript在后台获取所需内容，并直接展示给你，从而避免了加载全新页面的过程。

**Saron Yitbarek：**
这不仅节省了大量时间和精力，还彻底改变了我们工作的本质。

**Michael Clayton：**
因此，Web开发者这一职业从幕后走到了台前，因为他们现在可以直接在浏览器中编写代码，而用户也正是通过浏览器浏览网页的。