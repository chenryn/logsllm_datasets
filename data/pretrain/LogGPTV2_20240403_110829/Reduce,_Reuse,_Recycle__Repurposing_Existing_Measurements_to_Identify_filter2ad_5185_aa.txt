title:Reduce, Reuse, Recycle: Repurposing Existing Measurements to Identify
Stale Traceroutes
author:Vasileios Giotsas and
Thomas Koch and
Elverton C. Fazzion and
&apos;Italo Cunha and
Matt Calder and
Harsha V. Madhyastha and
Ethan Katz-Bassett
Reduce, Reuse, Recycle: Repurposing Existing Measurements to
Identify Stale Traceroutes
Vasileios Giotsas† Thomas Koch‡ Elverton Fazzion♮⋄
Ítalo Cunha⋄ Matt Calder♯‡
Harsha V. Madhyastha⋆ Ethan Katz-Bassett‡
†Lancaster University
‡Columbia University
♮Universidade Federal de São João del-Rei
⋄Universidade Federal de Minas Gerais
♯Microsoft
⋆University of Michigan
ABSTRACT
Many systems rely on traceroutes to monitor or characterize the
Internet. The quality of the systems’ inferences depends on the
completeness and freshness of the traceroutes, but the refreshing
of traceroutes is constrained by limited resources at vantage points.
Previous approaches predict which traceroutes are likely out-of-
date in order to allocate measurements, or monitor BGP feeds for
changes that overlap traceroutes. Both approaches miss many path
changes for reasons including the difficulty in predicting changes
and the coarse granularity of BGP paths.
This paper presents techniques to identify out-of-date trace-
routes without issuing any measurements, even if a change is not
visible at BGP granularity. We base our techniques on two observa-
tions. First, although BGP updates encode routes at AS granularity,
routers issue updates when they change intra-domain routes or
peering points within the same AS path. Second, route changes
correlate across paths, and many publicly available traceroutes
exist. Our techniques maintain an atlas of traceroutes by monitor-
ing BGP updates and publicly available traceroutes for signals to
mark overlapping atlas traceroutes as stale. We focus our analysis
of traceroute path changes at the granularity of border router IPs
which provides an abstraction finer than AS- or PoP-level but is
not affected by the periodicity of intra-domain load balancers. Our
evaluation indicates that 80% of the traceroutes that our techniques
signal as stale have indeed changed, even though the AS hops re-
mained the same. Our techniques combine to identify 79% of all
border IP changes, without issuing a single online measurement.
CCS CONCEPTS
• Networks → Network dynamics; Network monitoring; Pub-
lic Internet;
KEYWORDS
Internet topology, routing, traceroute, path changes, measurements.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
IMC ’20, October 27–29, 2020, Virtual Event, USA
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-8138-3/20/10...$15.00
https://doi.org/10.1145/3419394.3423654
ACM Reference Format:
Vasileios Giotsas, Thomas Koch, Elverton Fazzion, Italo Cunha, Matt Calder,
Harsha V. Madhyastha, and Ethan Katz-Bassett. 2020. Reduce, Reuse, Re-
cycle: Repurposing Existing Measurements to Identify Stale Traceroutes.
In ACM Internet Measurement Conference (IMC ’20), October 27–29, 2020,
Virtual Event, USA. ACM, New York, NY, USA, 19 pages. https://doi.org/10.
1145/3419394.3423654
1 INTRODUCTION
To monitor routing, predict performance, or make other inferences,
many systems gather an atlas of traceroutes from a distributed
set of vantage points [12, 54, 67]. Some systems monitor between
all pairs of vantage points [5, 14, 16, 30, 72, 76]. Others measure
from all vantage points to a set of targets [18, 44, 44, 45, 50, 76, 83].
Others choose custom targets per vantage point [7, 19, 22, 57]. The
fidelity of these systems’ observations or predictions depends on
the completeness and accuracy of their views of Internet routing,
which they must refresh to account for path changes.
Unfortunately, vantage points have limited probing budgets to
restrict bandwidth utilization and other overheads in the networks
hosting them. For example, CAIDA limits Ark monitors to 100 probe
packets per second [12], and RIPE Atlas limits the probing rate of
Probes to 6 Kbps [65]. Saturating these limits is also not advisable
as interference between overlapping probes can negatively affect
precision and synchronization of measurements [35].
These constraints mean that Internet-scale systems cannot fre-
quently reissue traceroutes along all paths. To best cope with prob-
ing rate limits, a system must remeasure a path only when it is
likely to have changed. But, how can a system make this determi-
nation? Path changes occur at arbitrary times and their frequency
varies across paths [19], so remeasuring all paths periodically or in
a random order wastes some measurements on unchanged routes,
takes too long to detect some changes, and misses some changes
altogether.
Prior work that attempted to detect route changes in a timely
manner suffers from two significant limitations:
(1) Detection via direct measurements has limited coverage. Dou-
bleTree [42], DTrack [19], and Sibyl [18] attempt to reduce
the measurement cost to infer changes. However, techniques
that require any measurements to test if a path has changed
have two undesirable properties: (1) for a fixed measurement
budget, the ability to keep traceroutes up-to-date is inversely
proportional to the number of paths, and (2) many measure-
ments will be “wasted” on paths that remain unchanged.
(2) Detection via AS paths in BGP updates is coarse-grained. Other
approaches detect route changes by passively monitoring
IMC ’20, October 27–29, 2020, Virtual Event, USA
Vasileios Giotsas et al.
BGP updates [18, 26, 45]. However, they only detect changes
visible at the AS level; intradomain changes and changes at
peering points go undetected.
To overcome these limitations of prior work, in this paper, we
develop techniques which detect fine-grained route changes with
broad coverage at no measurement cost. First, while BGP encodes
routes at AS granularity, routers still issue updates when changing
routes at finer granularities. We treat updates as signals that a
route may have changed, even when the BGP AS-path remains
unchanged. Second, we crawl publicly available traceroutes from
measurement platforms to identify route changes. We treat changes
as signals that overlapping routes might have changed.
Our techniques combine to detect 79% of the IP-level changes
in border routers across two months of a daily RIPE Atlas trace-
route campaign that generated 8 million traces per day, all without
issuing any online measurements. Achieving high coverage re-
quires recognizing routes that are impacted by a BGP update or
changes observed in public traceroutes, and so our techniques tar-
get cases beyond easy ones that directly observe the path change.
Our techniques are precise: 82% of the traceroutes that they indi-
cate as out-of-date, in terms of border-level IP interconnections,
have actually changed. Achieving high precision requires avoiding
falsely associating an event with an unaffected traceroute, and so
we develop techniques to scope impact.
Our techniques can be easily integrated into other systems that
rely on up-to-date traceroutes. When our techniques flag a trace-
route as likely to have changed, the system using the traceroute
can take a system-specific action, such as reissuing a traceroute,
discarding the route, or treating it as less trustworthy.
2 MOTIVATION
Many systems use corpuses of traceroutes. CDNs measure trace-
routes to destinations around the Internet to aid in performance-
aware traffic engineering [15, 33, 82]. Network tomography and
troubleshooting systems use traceroute corpuses to identify links or
networks responsible for a failure or performance problem [30, 45,
46, 57, 76]. Internet measurement and prediction systems rely on
correlating paths in traceroute corpuses [18, 44, 50]. The inferences
made by these systems degrade if they use out-of-date traceroutes
that no longer reflect active routes.
Large corpuses cannot be refreshed frequently because measure-
ment platforms have limited measurement budget. Achieving high In-
ternet coverage requires topologically distributed vantage points [15,
16, 18]. The usual approach to achieving this goal is to develop
collaborative platforms where networks hosting vantage points
contribute resources to measurements. Given their collaborative
nature and the requirement of not impacting network traffic and
equipment, platforms such as Ark [12], RIPE Atlas [67], and Speed-
Checker [69] operate under strict measurement budget constraints.
The rate at which measurements can be issued on these platforms
is further limited by recent observations that overlapping measure-
ments are best avoided to minimize interference [35].
Existing approaches for updating traceroute corpuses are ineffective
and inefficient. Ark [12] and iPlane [50] measure paths following
a round-robin schedule, too infrequent for some paths and too fre-
quent for others, since the stability of paths varies greatly [19, 81].
Figure 1: Fraction of paths with border-level and AS-level
changes compared to initial traceroute over time. Most paths
are unchanged even after two months.
DTrack observes previous changes to predict when a path is likely
to change again [19] but ignores that changes (or lack thereof)
in one path have implications for which other paths are likely to
change (or remain stable). Donnet proposed a system that triggers
traceroutes to a destination prefix in response to changes in the AS-
path and communities observed in the prefix’s BGP updates [21].
The approach, however, does not infer which traceroutes may be
impacted by an observed AS-path or community change. Moreover,
most ASes with traceroute vantage points do not provide public
BGP feeds, so there may be no public BGP updates that indicate
when the AS-path corresponding to a previously measured trace-
route changes.
Repurposing of public traceroutes requires sacrificing coverage or
freshness. RIPE Atlas and Ark collect and make publicly available a
massive number of traceroutes each day, which make up a particu-
larly large corpus gathered across many individual measurement
campaigns. This corpus is attractive as a source of data for new
use cases. However, each measurement campaign is subject to lim-
ited probing rates and individualized decisions of which paths to
measure, and so the per-path inter-measurement interval varies
and can be extremely long. So, relying on existing public trace-
routes for a new use case necessitates either including very old
traceroutes–some of which are certainly stale due to subsequent
path changes, which can cause incorrect inferences–or only using
recent traceroutes, severely limiting coverage.
Takeaways. In summary, there exist many systems whose ef-
ficacy depends on their ability to maintain up-to-date views of
Internet routing, but they lack good techniques to cope with limita-
tions on probing rates. If the systems had the ability to infer which
paths have changed and which remain stable, they could smartly
allocate probes to refresh only stale portions of the corpus, and they
could use only those public traceroutes that remained unchanged.
To illustrate this idea, we examined traceroutes issued from 897
sources to 497 destinations every 15 minutes for two months (details
in §5.1.1). Our results in Figure 1 depict the fraction of paths that
differ from their initial traceroute at different path granularities.
Changes over time are not monotonic since a path may change then
revert back to its initial measurement. After 30 days, 16% of paths
have changed if we consider just the subset of routers at inter-AS
borders. (We consider this granularity to eliminate most changes
caused by ECMP load balancing [6]). For context, CAIDA’s Ark
IPv4 Routed /24 Topology Dataset uses a probing rate that would
allow a vantage point to cycle through one traceroute to each /24
Repurposing Existing Measurements to Identify Stale Traceroutes
IMC ’20, October 27–29, 2020, Virtual Event, USA
in 34-51 days, and so these traceroutes would be stale before the
vantage point could cycle back. On the other hand, 72% of paths
are unchanged at this granularity even after 2 months. So, efficient
identification of changed paths could keep the corpus up-to-date
with a low probing rate, focusing measurements where needed.
Similarly, identification could enable, for example, safe use of the
majority of public traceroutes issued over the previous two months
(and judicious exclusion of those that were stale).
Hence, to fully capitalize on the potential to reuse traceroutes,
we need the ability to determine when any previously measured
traceroute path has changed, but without having to issue any mea-
surements to make this determination. This paper describes a set
of techniques which can do so in combination.
3 GOAL
Our goal is to create a system that keeps a corpus of traceroutes up-
to-date by either refreshing or pruning a traceroute if the measured
path changes. Changes at different granularities may matter to
different use cases. At the finest granularity, a path is a sequence
of IP addresses between a source and a destination. At the coarsest
granularity we consider, a path is a sequence of AS hops. In between,
we consider a path as a sequence of border routers, each of which
has one or more IP addresses (aliases), abstracting away the intra-
AS topology while still identifying multiple links between a pair
of ASes. For our purposes, we consider a change to be an AS-level
change if one or more of the ASes on the path changes, and we
consider it to be a border-level change if one or more border routers
change but it is not an AS-level change (so the AS-path remains
the same, and the border change is at one or more interconnection
points between the ASes).
In this paper, we focus on AS-level and inter-domain (border)
IP-level changes, rather than intra-domain IP-level changes for two
reasons. First, many use cases operate at these granularities, in-
cluding topology discovery and mapping [24, 56], evaluation of
the resilience and robustness of Internet connectivity [29, 43], mea-
surement of inter-domain congestion [20, 48] and traffic engineer-
ing [55], and analysis of peering strategies [60]. Second, intra-AS
IP-level changes can happen frequently at short time scales due to
load balancing, load sharing, and tunneling, which rarely extend
across AS boundaries [6, 28, 78]. As a result, intra-domain path
dynamics exhibit a much higher degree of periodicity compared to
inter-domain changes [38]. Extending to intra-AS IP-level changes
is an interesting future direction.
4 METHODOLOGY
To achieve unprecedented coverage in our ability to detect when
a path is likely to have changed, we developed two sets of com-
plementary techniques. The techniques passively monitor existing
data streams to detect staleness prediction signals that suggest that
particular traceroutes in the corpus are out-of-date because of path
changes. One set of techniques rely on BGP feeds (§4.1) and the
other set leverages publicly available traceroute datasets (§4.2). Sec-