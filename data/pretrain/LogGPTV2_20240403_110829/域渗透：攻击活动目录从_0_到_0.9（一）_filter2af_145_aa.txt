# 域渗透：攻击活动目录从 0 到 0.9（一）
|
##### 译文声明
本文是翻译文章
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 为什么会有这篇文章？
本指南的目的是从攻击者的角度来看待活动目录。我将尝试回顾活动目录的不同方面以及每个渗透测试人员应该掌握的术语，以理解可以在域中进行的攻击。
为了理解如何攻击活动目录（以及任何其他技术），我认为重要的是不仅要知道工具怎么用，还要知道工具是如何工作的，它们使用什么协议 /
机制，以及为什么存在这些协议 / 机制。
出现在本文的信息来源于公开的知识以及我在 AD 方面的一些经验。然而，我无法确定这里写的都是对的，所以希望你能自己做一些测试。如果发现有错误，请联系我
[PI:EMAIL](mailto:PI:EMAIL)。
此外，我知道这里并没有涵盖关于活动目录的所有内容，但我的本意是至少涵盖理解活动目录及其攻击所需的基本知识，并在将来扩大这一来源。所以，如果你觉得这里漏掉了一些
AD 相关的基础知识，请联系我 [PI:EMAIL](mailto:PI:EMAIL)。
免责声明：本文仅用于教育目的，请不要做未授权的攻击。
我尽可能尝试将这些内容介绍清楚，但有一些内容是很复杂的，所以我也引用了很多外部的链接。
**我的主要目的是将所有的活动目录主题收集在一个地方** ，可以用来咨询攻击 / 协议 /
技术，而不是解释一个具体技术的每一个细节（即使我试图这样做）。因此，我们完全鼓励你跟随超链接去发现更多关于特定主题的信息，那里有很多很棒的资源。
顺便说一下， **我想感谢所有的内容创作者**
，他们多年来通过工具、博客、会议讲座等与社区分享知识。我查阅了很多资料，不可能逐一感谢所有的内容创造者，但是如果你发现了你的资源链接，或者你直接合作的资源（通过给工具添加功能，或者帮助你的朋友写文章），又或者间接合作的资源（例如创建一个库/代码片段/语言/操作系统/IDE/编辑器，被一个工具使用，或者一个博客被用作这里链接的文章的基础），
**谢谢你** ~
> 在整个文章中，我将使用 Powershell 来展示如何获取活动目录的信息。
>
> 为此，我将使用 [ActiveDirectory Powershell模块](https://docs.microsoft.com/en-> us/powershell/module/addsadministration/?view=windowsserver2019-ps)，但也可以使用其他工具，如
> [Powerview](https://github.com/BC-> SECURITY/Empire/blob/master/data/module_source/situational_awareness/network/powerview.ps1)
> 或 [ldapsearch](https://docs.ldap.com/ldap-sdk/docs/tool-> usages/ldapsearch.html) 来代替。
好了，让我们开始吧~
## 什么是活动目录（Active Directory）？
在我看来，活动目录是一个系统，它允许从一个中央服务器上管理连接在同一网络中的一系列的计算机和用户。
当然，这个定义并非完全准确，但我希望它足够简单，能让你了解什么是活动目录。
> Active Directory 网络：
           ____                         __ 
      o   |    |                       |==|
     /|\  |____|  |  |
     / \  /::::/          |    |       |__|
                          v    v
                           .---.
                          /   /|
                         .---. |
                         |   | '
                         |   |/ 
                         '---'  
           ____          ^    ^        ____ 
      o   |    |         |    |       |    |  \o/
     /|\  |____|  |____|   | 
     / \  /::::/                      /::::/  / \
想象一下，一个有数百名员工的公司，每个人都在自己的（可能是 Windows）电脑中工作。这个公司有几个不同的部门，如销售、人力资源、IT 等。
销售部门要求在他们的工作站上安装一个新的程序。或者，每天都有不同办公室的用户忘记了密码，需要恢复。或者，新的实习生小组只需要处理文件服务器上的一些文件。
IT
团队应该在所有销售的工作站中逐一安装该程序吗？他们应该到不同的办公室去恢复用户密码吗？他们是否应该为每个实习生创建一个新的用户，从而只允许查看文件服务器的一个目录中的文件？
好吧，他们可以这样做，虽然这将是一个很大的工作（对公司来说是一种浪费）。但是，由于他们是聪明人，他们把所有的计算机都连接在一个活动目录网络中，所以他们可以从自己的工作站上执行所有这些操作。
活动目录通过维护一个集中的数据库来实现这一点，所有关于用户、计算机、策略、权限等信息都存储在这里。所以，例如 IT
团队可以连接到这个数据库，为实习生创建新的用户，并给他们分配权限，只允许他们读取其部门的特定服务器的指定目录中的文件。
然后，当这些实习生试图登录到活动目录网络内的计算机时，计算机会查询中央数据库，以检查该实习生用户是否存在（以及密码是否正确）。这样，用户可以登录到公司的任何一台电脑上（如果他们有权限的话），通过允许员工只使用一个用户在公司所有的电脑上（可以是工作站、数据库服务器、文件服务器等）做所有的工作。
同样，如果一个用户忘记了密码，她可以提醒 IT 团队，他们可以在这个中央数据库中更改用户密码（并要求用户将这个密码改为只有她知道的新密码）。
就销售部门而言，IT
部门可以在数据库中创建一个新的策略，指出该部门的计算机必须安装指定的程序，以及他们必须如何做。然后，当销售的工作站读取数据库时，它们就会知道它们必须执行这个策略，新的程序就会被安装。
我希望这个例子能让你理解为什么活动目录如此有用，为什么世界上几乎所有的（中大型）组织都使用它。也许你已经使用过它，通常是一台需要在提示你的用户名和密码之前按
Ctrl+Alt+Del 的电脑。
那么……如果有人能窃取一个 IT 用户的密码会怎样？她能更改其他用户的密码吗？以及对数据库的访问？
现在清楚了为什么 活动目录是如此的重要，接下来再看一些它们的术语。
## 域（Domain）
首先，我们一直所说的活动目录网络就是通常所说的 **域**
（Domain）。一个域是一组连接的计算机，它们共享一个活动目录数据库，该数据库由一个域的中央服务器管理，这些服务器被称为 **域控制器** （Domain
Controllers）。
###  域名（Domain name）
每个域都有一个 DNS 名称。在许多公司里，域名就是他们的网站名，例如 `contoso.com`，也有一些有不同的内网域名，如
`contoso.local`。
> 获取当前用户域：
    PS C:\Users\Anakin> $env:USERDNSDOMAIN
    CONTOSO.LOCAL
    PS C:\Users\Anakin> (Get-ADDomain).DNSRoot
    contoso.local
> 获取当前计算机域：
    PS C:\Users\Anakin> (Get-WmiObject Win32_ComputerSystem).Domain
    contoso.local
除了 DNS 名，每个域也可以用 NetBIOS 名标识。例如，域 `contoso.local` 的 **NetBIOS 名**
`CONTOSO`。你可以看到 NetBIOS 名被用于登录操作，在这里使用类似 `CONTOSO\Administrator`来区分用户，这里的第一部分是
NetBIOS 名，第二部分是用户名。
最后，一个域可以通过其 **SID** （安全标识符，Security Identifier）来识别。SID 更多的是被程序使用（使用 Windows
API），而不是被用户使用，但你应该知道如何获得它，以防你需要它。
> 获取域的 DNS 名、NetBIOS 名、SID：
    PS C:\Users\Anakin> Get-ADDomain | select DNSRoot,NetBIOSName,DomainSID
    DNSRoot       NetBIOSName DomainSID
    -------       ----------- ---------    contoso.local CONTOSO     S-1-5-21-1372086773-2238746523-2939299801
## 林（Forests）
使用 DNS 名称是非常有用的，因为它允许为管理目的创建子域。
例如，一个公司有一个 **根域** 叫做 `contoso.local`，然后为不同的（通常是大的）部门创建子域名，像 `it.contoso.local`
或者 `sales.contoso.local`。
> 正如你将看到的，活动目录提供了许多方法来组织你的基础设施，所以一个组织可以在不同的地方使用子域，有些为部门创建子域，而有些则为不同的办公室使用子域。
>
> contoso.local 林：
                  contoso.local
                        |
                .-------'--------.
                |                |
                |                |
         it.contoso.local hr.contoso.local
                | 
                |
                |
      webs.it.contoso.local
这种树状的域被称为林 [**Forest**](https://docs.microsoft.com/en-us/windows/win32/ad/forests)。林的名称与域树的根域的名称相同。
> 获取林信息：
    PS C:\Users\Anakin> Get-ADForest
    ApplicationPartitions : {DC=DomainDnsZones,DC=contoso,DC=local, DC=ForestDnsZones,DC=contoso,DC=local}
    CrossForestReferences : {}
    DomainNamingMaster    : dc01.contoso.local
    Domains               : {contoso.local}
    ForestMode            : Windows2016Forest
    GlobalCatalogs        : {dc01.contoso.local, dc02.contoso.local}
    Name                  : contoso.local
    PartitionsContainer   : CN=Partitions,CN=Configuration,DC=contoso,DC=local
    RootDomain            : contoso.local
    SchemaMaster          : dc01.contoso.local
    Sites                 : {Default-First-Site-Name}
    SPNSuffixes           : {}
    UPNSuffixes           : {}
在一个林中，每个域都有自己的数据库以及域控。不过，域用户也可以访问林中的其他域。
这意味着，即使一个域可以是自治的，不需要与其他域进行交互。但从安全角度来看，它并不是孤立的。因为，正如我们将看到的，一个域的用户可以访问同一林中其他域的资源（默认情况下）。然而，一个林的用户默认不能访问其他林的资源，所以能够提供安全隔离的逻辑结构是林。
正如我之前所说， **每个域都有自己的域控制器**
，所以如果一个部门发展得令人难以置信，你可能需要专门的域控制器来处理该部门所有计算机的请求。你可以通过创建一个新的子域来实现这一点，而用户仍然能够访问同一林中其他子域的计算机。
###  功能级别（Functional Levels）
除了 Windows 电脑之外，域 / 林也可以有自己的“版本”，叫做[功能级别](https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/raise-active-directory-domain-forest-functional-levels)。基于域 / 林的功能级别，可以使用新的特性。
这些模式是根据使用它们所需的最低 Windows Server 操作系统版本来命名的。例如
[下面的林功能级别](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/564dc969-6db3-49b3-891a-f2f8d0a68a7f)：
  * Windows2000
  * Windows2000MixedDomains