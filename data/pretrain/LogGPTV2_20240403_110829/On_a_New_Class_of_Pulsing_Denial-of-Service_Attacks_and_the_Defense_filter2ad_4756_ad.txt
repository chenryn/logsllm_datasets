Time(Seconds)
x 108 A(10ms,100Mbps,800,540/0.81)
x 107 A(10ms,50Mbps,400,540/0.41)
)
n
(
y
H
Z
4
3
2
1
0
0
yZ
(n)
H
In
Ccusum
)
n
(
H
Z
y
200
400
600
800
Time(Seconds)
12
10
8
6
4
2
0
yZ
(n)
H
In
Ccusum
0
200
400
600
800
Time(Seconds)
(b) ZH (n) and the CUSUM results.
Figure 10. The incoming trafﬁc and the detection results for the AIMD-based attacks.
A(10ms,100Mbps,800,540/0.81)
A(10ms,50Mbps,400,540/0.41)
s)
e
t
y
B
(
c
i
f
f
a
r
T
K
C
A
P
C
T
14000
12000
10000
8000
6000
4000
2000
0
0
200
400
600
800
Time(Seconds)
s)
e
t
y
B
(
c
i
f
f
a
r
T
K
C
A
P
C
T
14000
12000
10000
8000
6000
4000
2000
0
0
200
400
600
800
Time(Seconds)
x 104 A(10ms,100Mbps,800,540/0.81)
10
8
6
4
2
i
ts
n
e
c
i
f
f
e
o
C
g
n
i
l
a
c
S
x 104  A(10ms,50Mbps,400,540/0.41)
10
8
6
4
2
i
ts
n
e
c
i
f
f
e
o
C
g
n
i
l
a
c
S
0
0
200
400
600
800
Time(Seconds)
0
0
200
400
600
800
Time(Seconds)
(a) The outgoing ACK trafﬁc and their scaling coefﬁcients.
x 108  A(10ms,100Mbps,800,540/0.81)
x 108  A(10ms,50Mbps,400,540/0.41)
)
n
(
Z
L
2
1.5
1
0.5
0
0
200
400
600
800
Time(Seconds)
)
n
(
Z
L
2
1.5
1
0.5
0
0
200
400
600
800
Time(Seconds)
x 109 A(10ms,100Mbps,800,540/0.81)
x 109  A(10ms,50Mbps,400,540/0.41)
)
n
(
y
L
Z
3.5
3
2.5
2
1.5
1
0.5
0
0
(n)
L
Out
yZ
Ccusum
)
n
(
L
Z
y
200
400
600
800
Time(Seconds)
4
3
2
1
0
0
(n)
L
Out
yZ
Ccusum
200
400
600
800
Time(Seconds)
Figure 11. The outgoing ACK trafﬁc and the detection results for the AIMD-based attacks.
(b) ZL(n) and the CUSUM results.
Table 2. Detection time and loss rate caused by the timeout-based attacks.
RAttack
20
15
10
5
4
2.5
1
τ F inal
Reno
30
30
30
30
30
30*
X
LossR
0.8039
0.7341
0.6234
0.4538
0.3969
0.2933
0.1076
τ F inal
N ewReno LossN
0.7781
30
30
0.6962
0.5679
30
0.4024
30
30
0.353
0.2547
30*
X
0.0805
τ F inal
AIM D LossA
0.7757
30
30
0.6594
0.5098
30
0.3221
30
60*
0.281
0.1877
X
X
0.0463
they differ
age attack rates, which is computed by RAverage =
TExtent∗RAttack
in their values of
TExtent+TSpace , but
RAttack, TExtent, and TSpace.
It is interesting to note
that, although it has the lowest attack rate, the attack
A(10ms, 50M bps, 400ms, 1317) causes the worst dam-
age to the TCP throughput. The results suggest that the
AIMD-based attack can achieve the same effect as the
timeout-based attack, but with a lower attack rate. More-
over, our detection scheme can detect all of these pulsing
attacks in a timely manner after one observation period.
4.2 Test-bed experiments and results
The test-bed topology is shown in Fig. 7(b). We use
NIST Net [7] to simulate the network and iperf to
measure the TCP throughput. The link between NIST
Net and the victim is 10 Mbps, whereas the links con-
necting the legitimate users and the attacker to the NIST
Net are 100 Mbps. We also set the RTTs of both the
legitimate users and the attacker to 100ms.
In this set-
ting, the legitimate user is running Linux 2.4.20-8 (Red
Hat 9 (Shrike)), whose RT Omin is 200 ms, instead of
the 1 second suggested in [19]. There are two reasons
for using this setup. First, it is important to see what ef-
fect the PDoS attack will have on the TCP/IP stacks that
may not follow the standard RFCs. Even though an at-
tacker may not be able to determine the actual value of
RT Omin, it is still possible for the attack to seriously
degrade the victim’s throughout. The second is to test
the detection scheme under a “nonoptimal” PDoS attack.
For this purpose, we launch a PDoS attack at 181 sec-
onds with RAttack = 10M bps, TExtent = 200ms, and
TSpace = 1000ms.
As shown in Figs. 12-13, our scheme can detect the on-
going attack in a timely manner. Fig. 12(a) shows that
the PDoS attack not only successfully degrades the TCP
throughput, but also causes severe ﬂuctuations in the in-
coming trafﬁc as shown in Fig. 12(b). The detection time
for ZH(n) is given by T In = 210s; therefore, the de-
lay time is τ In = 30s. The outgoing TCP ACK trafﬁc
begins to decrease after the attack is launched, as shown
in Fig. 13(a). The detection time for ZL(n) is given by
T Out = 240s. Thus, the ﬁnal detection time is given by
max{T In, T Out} = 240s, and the detection delay is only
max{τ In, τ Out} = 60s. Thus, the results obtained from
the test-bed are quite consistent with those from the simu-
lation experiments presented in the last section.
The NIST NET implements the Derivative Random
Drop (DRD) algorithm instead of the Random Early De-
tection (RED) algorithm. Although both of them are su-
perior to the drop tail method in terms of effectively con-
trolling the average queue size, DRD is more sensitive
to the trafﬁc burst than RED[7]. Hence, we have con-
ducted experiments on RED-based routers by replacing
NIST NET with dummynet[21]. We set the parame-
ters of RED with the following values: minth = 80,
maxth = 160, wq = 0.002, maxp = 0.1, and the queue
size is 250 packets. The iperf generates 15 TCP ﬂows
with RT T = 150ms. We have conducted a total of 15
PDoS attacks with different parameters as shown in Ta-
ble 4.
The results from Table 4 have clearly shown that the
PDoS attack can still seriously degrade TCP throughput
even when the RT Omin is not equal to 1 second, as
suggested by [19]. For Linux (2.4.20-8), which sets the
RT Omin to 200ms and TCP ﬂows with an RTT of 150ms,
a periodic timeout-based attack may not be effective be-
cause it is very difﬁcult to estimate the RTO. However, the
AIMD-based attack can still reduce the throughput with a
reasonable attack rate, e.g., the 5th PDoS in Table 4 can
cause a 41.5% loss in throughput with a relatively small
average attack rate (1.25 Mbps).
Given the same values of RAttack and TExtent, a PDoS
attack with a smaller TSpace causes a bigger loss, e.g. 1st,
4th, 7th, 10th, and 13th attacks in Table 4. Another inter-
esting observation is that those PDoS attacks, which have
the same value of RAttack × TExtent(n), may have dif-
Table 3. Detection time and loss rate for three different PDoS attacks.
A(150ms, 10M bps, 1050ms, 450) A(10ms, 100M bps, 800ms, 667) A(10ms, 50M bps, 400ms, 1317)
Average Rate
Loss Rate
τ In
τ Out
τ F inal
1.25Mbps
0.5679
30
30
30
1.235Mbps
0.6073
30
30
30
Table 4. Different pulsing attacks and the detection time
Seq
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
TExtent(ms) RAttack (Mbps)
TSpace (ms) RAverage (Mbps)
100
200
100
100
200
100
100
200
100
100
200
100
100
200
100
10
10
15
10
10
15
10
10
15
10
10
15
10
10
15
900
1800
1400
700
1400
1100
566
1133
900
471
943
757
400
800
650
1
1
1
1.25
1.25
1.25
1.5
1.5
1.5
1.75
1.75
1.75
2
2
2
Rbottleneck (bandwidth of the bottleneck) : 10 Mbps.
Loss
0.239
0.328
0.258
0.272
0.415
0.371
0.293
0.484
0.374
0.308
0.521
0.449
0.318
0.535
0.476
1.22Mbps
0.7639
30
30
30
τ F inal (s)
60
60
60
60
30
30
60
30
30
30
30
30
30
30
30
ferent effects on the TCP ﬂows. For example, from our
experiments, the PDoS attack with TExtent = 200ms and
RAttack = 10M bps always has a more severe effect than
the other two types of PDoS attacks when all of them have
the same average attack rate. This may be due to its large
TExtent value, which can clog the bottleneck link for such
a long period that the packet-marking probability in RED
[10] increases and the packets belonging to many ﬂows
are dropped. The experiment results also show that the
proposed two-stage detection scheme can effectively dis-
cover the pulsing DoS attack. In most cases, the detection
delay is only one observation period, i.e., 30s.
5 Conclusions
In this paper, we have identiﬁed a new class of PDoS
attacks. Unlike the traditional DoS attack, the PDoS at-
tack can effectively achieve the same purpose with a much