9.3 定义主机与组规则
Ansible通过定义好的主机与组规则（Inventory）对匹配的目标主机进行远程
操作，配置规则文件默认是/etc/ansible/hosts。
9.3.1 定义主机与组
所有定义的主机与组规则都在/etc/Ansible/hosts文件中，为ini文件格式，主机
可以用域名、IP、别名进行标识，其中webservers、dbservers为组名，紧跟着的
主机为其成员。格式如下：
mail.example.com
192.168.1.21：2135
[webservers]
foo.example.com
bar.example.com
192.168.1.22
[dbservers]
one.example.com
two.example.com
three.example.com
192.168.1.23
其中，192.168.1.21：2135的意思是定义一个SSH服务端口为2135的主机，当然我
们也可以使用别名来描述一台主机，如：
jumper ansible_ssh_port=22 ansible_ssh_host=192.168.1.50
jumper为定义的一个别名，ansible_ssh_port为主机SSH服务端
口，ansible_ssh_host为目标主机，更多保留主机变量如下：
·ansible_ssh_host，连接目标主机的地址。
·ansible_ssh_port，连接目标主机SSH端口，端口22无需指定。
·ansible_ssh_user，连接目标主机默认用户。
·ansible_ssh_pass，连接目标主机默认用户密码。
·ansible_connection，目标主机连接类型，可以是local、ssh或paramiko。
·ansible_ssh_private_key_file连接目标主机的ssh私钥。
·ansible_*_interpreter，指定采用非Python的其他脚本语言，如Ruby、Perl或
其他类似ansible_python_interpreter解释器。
组成员主机名称支持正则描述，示例如下：
[webservers]
www[01：50].example.com
[databases]
db-[a：f].example.com
9.3.2 定义主机变量
主机可以指定变量，以便后面供Playbooks配置使用，比如定义主机hosts1及
hosts2上Apache参数http_port及maxRequestsPerChild，目的是让两台主机产生
Apache配置文件httpd.conf差异化，定义格式如下：
[atlanta]
host1 http_port=80 maxRequestsPerChild=808
host2 http_port=303 maxRequestsPerChild=909
9.3.3 定义组变量
组变量的作用域是覆盖组所有成员，通过定义一个新块，块名由组名+“：
vars”组成，定义格式如下：
[atlanta]
host1
host2
[atlanta：vars]
ntp_server=ntp.atlanta.example.com
proxy=proxy.atlanta.example.com
同时Ansible支持组嵌套组，通过定义一个新块，块名由组名+“：children”组
成，格式如下：
[atlanta]
host1
host2
[raleigh]
host2
host3
[southeast：children]
atlanta
raleigh
[southeast：vars]
some_server=foo.southeast.example.com
halon_system_timeout=30
self_destruct_countdown=60
escape_pods=2
[usa：children]
southeast
northeast
southwest
southeast
提示 嵌套组只能使用在/usr/bin/ansible-playbook中，
在/usr/bin/ansible中不起作用。
9.3.4 分离主机与组特定数据
为了更好规范定义的主机与组变量，Ansible支持将/etc/ansible/hosts定义的主
机名与组变量单独剥离出来存放到指定的文件中，将采用YAML格式存放，存放
位置规定：“/etc/ansible/group_vars/+组名”和“/etc/ansible/host_vars/+主机名”分别
存放指定组名或主机名定义的变量，例如：
/etc/ansible/group_vars/dbservers
/etc/ansible/group_vars/webservers
/etc/ansible/host_vars/foosball
定义的dbservers变量格式为：
【/etc/ansible/group_vars/dbservers】
---
ntp_server： acme.example.org
database_server： storage.example.org
提示 在Ansible 1.2及以后版本中，group_vars/和host_vars/目录可以
保存在playbook目录或inventory目录，如同时存在，inventory目录的优先级高于
playbook目录的。
9.4 匹配目标
在9.3节中已经完成主机与组的定义，本节将讲解如何进行目标（Patterns）
匹配，格式为：ansible-m-a。举
例说明：重启webservers组的所有Apache服务。
ansible webservers -m service -a "name=httpd state=restarted"
本节将重点介绍参数的使用方法，详细规则及含义见表
9-2。
表9-2 匹配目标主机规则表
9.5 Ansible常用模块及API
Ansible提供了非常丰富的功能模块，包括Cloud（云计算）、Commands（命
令行）、Database（数据库）、Files（文件管理）、Internal（内置功能）、
Inventory（资产管理）、Messaging（消息队列）、Monitoring（监控管理）、
Net Infrastructure（网络基础服务）、Network（网络管理）、Notification（通知
管理）、Packaging（包管理）、Source Control（版本控制）、System（系统服
务）、Utilities（公共服务）、Web Infrastructure（Web基础服务），等等，更多
模块介绍见官网模块介绍（网址：http://ansibleworks.com/docs/modules.html）。
模块默认存储目录为/usr/share/ansible/，存储结构以模块分类名作为目录名，模
块文件按分类存放在不同类别目录中。命令行调用模块格式：
ansible-m-
a，其中默认的模块名为command，即“-m
command”可省略。获取远程webservers组主机的uptime信息格式如图9-3所示。
图9-3 获取主机“uptime”信息
以上命令等价于ansible webservers-a"uptime"，获得模块的帮助说明信息格
式：ansible-doc，得到ping模块的帮助说明信息如图9-4所示。
图9-4 ping模块帮助信息
在playbooks中运行远程命令格式如下：
- name： reboot the servers
action： command /sbin/reboot -t now
Ansible 0.8或以上版本支持以下格式：
- name： reboot the servers
command： /sbin/reboot -t now
Ansible提供了非常丰富的模块，涉及日常运维工作的方方面面。下面介绍
Ansible的常用模块，更多模块介绍见官方说明。
1.远程命令模块
（1）功能
模块包括command、script、shell，都可以实现远程shell命令运行。command
作为Ansible的默认模块，可以运行远程权限范围所有的shell命令；script功能是
在远程主机执行主控端存储的shell脚本文件，相当于scp+shell组合；shell功能是
执行远程主机的shell脚本文件。
（2）例子
ansible webservers -m command -a "free -m"
ansible webservers -m script -a "/home/test.sh 12 34"
ansible webservers -m shell -a "/home/test.sh"
2.copy模块
（1）功能
实现主控端向目标主机拷贝文件，类似于scp的功能。
（2）例子
以下示例实现拷贝/home/test.sh文件至webserver组目标主机/tmp/目录下，并
更新文件属主及权限（可以单独使用file模块实现权限的修改，格式为：
path=/etc/foo.conf owner=foo group=foo mode=0644）。
#
ansible webservers -m copy -
a "src=/home/test.sh dest=/tmp/ owner=root group=root mode=0755"
3.stat模块
（1）功能
获取远程文件状态信息，包括atime、ctime、mtime、md5、uid、gid等信
息。
（2）例子
ansible webservers -m stat -a "path=/etc/sysctl.conf"
4.get_url模块
（1）功能
实现在远程主机下载指定URL到本地，支持sha256sum文件校验。
（2）例子
ansible webservers -m get_url -
a "url=http：//www.baidu.com dest=/tmp/index.html mode=0440 force=yes"
5.yum模块
（1）功能
Linux平台软件包管理操作，常见有yum、apt管理方式。
（2）例子
ansible webservers -m apt -a "pkg=curl state=latest"
ansible webservers -m yum -a "name=curl state=latest"
6.cron模块
（1）功能
远程主机crontab配置。
（2）例子
ansible webservers -m cron -a "name='check dirs' hour='5，2' job='ls -
alh > /dev/null'"
效果如下：
#Ansible： check dirs
* 5，2 * * * ls -alh > /dev/nullsalt '*' file.chown /etc/passwd root root
7.mount模块
（1）功能
远程主机分区挂载。
（2）例子
ansible webservers -m mount -
a "name=/mnt/data src=/dev/sd0 fstype=ext3 opts=ro state=present"
8.service模块
（1）功能
远程主机系统服务管理。
（2）例子
ansible webservers -m service -a "name=nginx state=stopped"
ansible webservers -m service -a "name=nginx state=restarted"
ansible webservers -m service -a "name=nginx state=reloaded"
9.sysctl包管理模块
（1）功能
远程Linux主机sysctl配置。
（2）例子
sysctl： name=kernel.panic value=3 sysctl_file=/etc/sysctl.conf checks=before reload=yessalt '*' pkg.upgrade
10.user服务模块
（1）功能
远程主机系统用户管理。
（2）例子
#添加用户johnd；
ansible webservers -m user -a "name=johnd comment='John Doe'"
#删除用户johnd；
ansible webservers -m user -a "name=johnd state=absent remove=yes"
提示 playbooks模块调用格式如下，以command模块为例（0.8或更
新版本格式）：
-name：reboot the servers
command：/sbin/reboot-t now
9.6 playbook介绍
playbook是一个不同于使用Ansible命令行执行方式的模式，其功能更强大灵
活。简单来说，playbook是一个非常简单的配置管理和多主机部署系统，不同于
任何已经存在的模式，可作为一个适合部署复杂应用程序的基础。playbook可以
定制配置，可以按指定的操作步骤有序执行，支持同步及异步方式。官方提供
了大量的例子，可以在https://github.com/ansible/ansible-examples找到。playbook
是通过YAML格式来进行描述定义的，可以实现多台主机应用的部署，定义在
webservers及dbservers组上执行特定指令步骤。下面为读者介绍一个基本的
playbook示例：
【/home/test/ansible/playbooks/nginx.yml】
---
- hosts： webservers
vars：
worker_processes： 4
num_cpus： 4
max_open_file： 65506
root： /data
remote_user： root
tasks：
- name： ensure nginx is at the latest version
yum： pkg=nginx state=latest
- name： write the nginx config file
template： src=/home/test/ansible/nginx/nginx2.conf dest=/etc/nginx/nginx.conf
notify：
- restart nginx
- name： ensure nginx is running
service： name=nginx state=started
handlers：
- name： restart nginx
service： name=nginx state=restarted
以上playbook定制了一个简单的Nginx软件包管理，内容包括安装、配置模
板、状态管理等。下面详细对该示例进行说明。
9.6.1 定义主机与用户
在playbook执行时，可以为主机或组定义变量，比如指定远程登录用户。以
下为webservers组定义的相关变量，变量的作用域只限于webservers组下的主
机。
- hosts： webservers
vars：
worker_processes： 4
num_cpus： 4
max_open_file： 65506
root： /data
remote_user： root
hosts参数的作用为定义操作的对象，可以是主机或组，具体定义规则见9.3.1
节内容。本示例定义操作主机为webservers组，同时通过vars参数定义了4个变量