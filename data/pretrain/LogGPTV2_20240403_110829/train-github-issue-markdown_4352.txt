### Issue #739: Clarification and Solution for Sorting Multi-Level DataFrame

#### Problem Description
The following Python script is intended to read two sets of data, concatenate them, group by a specific index, and then sort the resulting DataFrame. However, it encounters an error when attempting to sort the DataFrame.

```python
import pandas as pd
import numpy as np
from StringIO import StringIO

print("Pandas version %s\n\n" % pd.__version__)

data1 = """idx,metric
0,2.1
1,2.5
2,3"""
data2 = """idx,metric
0,2.7
1,2.2
2,2.8"""

df1 = pd.read_csv(StringIO(data1))
df2 = pd.read_csv(StringIo(data2))

concatenated = pd.concat([df1, df2], ignore_index=True)
merged = concatenated.groupby("idx").agg([np.mean, np.std])

print(merged)
print(merged.sort('metric'))
```

#### Output
```
$ python test.py 
Pandas version 0.11.0

         metric          
           mean       std
idx                  
0      2.40  0.424264
1      2.35  0.212132
2      2.90  0.141421
Traceback (most recent call last):
  File "test.py", line 22, in <module>
    print merged.sort('metric')
  File "/***/Python-2.7.3/lib/python2.7/site-packages/pandas/core/frame.py", line 3098, in sort
    inplace=inplace)
  File "/***/Python-2.7.3/lib/python2.7/site-packages/pandas/core/frame.py", line 3153, in sort_index
    % str(by))
ValueError: Cannot sort by duplicate column metric
```

#### Analysis
The error message suggests that the issue is due to a duplicate column `metric`. However, the actual problem is that the DataFrame has a multi-level column structure, and the `sort` method is not correctly handling this structure.

#### Solution
To sort the DataFrame by the mean of the `metric`, you should use the following syntax:

```python
print(merged.sort_values(by=('metric', 'mean')))
```

#### Explanation
- The `merged` DataFrame has a multi-level column structure with levels `('metric', 'mean')` and `('metric', 'std')`.
- The `sort_values` method (replaced `sort` in newer versions of Pandas) can handle multi-level columns by specifying the exact column to sort by, in this case, `('metric', 'mean')`.

#### Updated Code
Here is the updated code with the correct sorting:

```python
import pandas as pd
import numpy as np
from io import StringIO  # Use `io.StringIO` instead of `StringIO` for Python 3

print("Pandas version %s\n\n" % pd.__version__)

data1 = """idx,metric
0,2.1
1,2.5
2,3"""
data2 = """idx,metric
0,2.7
1,2.2
2,2.8"""

df1 = pd.read_csv(StringIO(data1))
df2 = pd.read_csv(StringIO(data2))

concatenated = pd.concat([df1, df2], ignore_index=True)
merged = concatenated.groupby("idx").agg([np.mean, np.std])

print(merged)
print(merged.sort_values(by=('metric', 'mean')))
```

#### Conclusion
The error message could be more informative, and the solution was not immediately clear from the documentation. For future reference, using `sort_values` with the correct multi-level column specification resolves the issue.