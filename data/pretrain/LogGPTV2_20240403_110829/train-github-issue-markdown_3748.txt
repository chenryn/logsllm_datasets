# Checklist
- [ ] I have checked the issues list for similar or identical bug reports.
- [ ] I have checked the pull requests list for existing proposed fixes.
- [ ] I have checked the commit log to determine if the bug was already fixed in the master branch.
- [ ] I have included all related issues and possible duplicate issues in this issue (if there are none, check this box anyway).

## Related Issues and Possible Duplicates
#### Related Issues
- None

#### Possible Duplicates
- None

## Description
I am experiencing a `ConnectionError` when running Celery version `4.4.6` on Google Kubernetes Engine (GKE) with multiple pods (8-10) each reading from a dedicated queue. The setup is fairly basic, and the tasks are defined as follows:

```python
@app.task(bind=True)
def get_some_data_from_a_server_and_update_records(self, ...):
    # Make a request using requests via a Session that is maintained by the instance of the SDK
    my_sdk_client = Client()
    response = my_sdk_client.session.get(...)
    # Update my database
```

### Django Celery Settings
```python
# Celery
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_TASK_QUEUES = (
    Queue('critical', Exchange('critical'), routing_key='critical'),
    Queue('high', Exchange('high'), routing_key='high'),
    Queue('medium', Exchange('medium'), routing_key='medium'),
    Queue('low', Exchange('low'), routing_key='low'),
)
CELERY_TASK_DEFAULT_QUEUE = 'medium'
CELERY_TASK_IGNORE_RESULT = True
CELERY_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_WORKER_HIJACK_ROOT_LOGGER = False
CELERY_WORKER_POOL = 'threads'
```

The error stack trace is as follows:
```python
File "/venv/lib/python3.6/site-packages/requests/sessions.py", line 578, in post
    return self.request('POST', url, data=data, json=json, **kwargs)
File "/venv/lib/python3.6/site-packages/requests/sessions.py", line 530, in request
    resp = self.send(prep, **send_kwargs)
File "/venv/lib/python3.6/site-packages/requests/sessions.py", line 643, in send
    r = adapter.send(request, **kwargs)
File "/venv/lib/python3.6/site-packages/requests/adapters.py", line 498, in send
    raise ConnectionError(err, request=request)
ConnectionError: ('Connection aborted.', OSError(0, 'Error'))
ProtocolError: ('Connection aborted.', OSError(0, 'Error'))
```

The current documentation does not address this common use case, which is causing significant issues. The problem seems to be related to the lack of multiprocess safety when using `requests` or ensuring a single `Session` per thread/process, which is not feasible when interacting with multiple endpoints or initializing multiple sessions in different tasks.

We have switched our execution pool to use `threads`, but this has not resolved the issue.

## Suggestions
- Improve the setup documentation to clearly state how to configure Celery on GKE.
- Provide guidance on working with Celery and `requests` or `urllib3`.
- Recommend an appropriate execution pool based on the intended use of Celery, such as `prefork`, `threads`, `gevent`, or `eventlet`.

## Package Versions
- `celery[redis]==4.4.6`  # via coherentpath (setup.py), django-celery-beat, flower
- `certifi==2019.11.28`  # via requests, urllib3
- `cffi==1.13.2`  # via bcrypt, cryptography, pynacl
- `chardet==3.0.4`  # via aiohttp, requests
- `cryptography==3.3.2`  # via django-cryptography, paramiko, pyopenssl, requests, urllib3
- `django-celery-beat==2.0.0`  # via coherentpath (setup.py)
- `django-timezone-field==4.1.1`  # via coherentpath (setup.py), django-celery-beat
- `future==0.18.2`  # via celery, django-json-widget, python-jose
- `humanize==0.5.1`  # via flower
- `idna-ssl==1.1.0`  # via aiohttp
- `idna==2.6`  # via idna-ssl, jsonschema, requests, urllib3, yarl
- `importlib-metadata==1.6.0`  # via kombu, scout-apm
- `kombu==4.6.11`  # via celery
- `oauthlib==3.1.0`  # via django-oauth-toolkit, requests-oauthlib
- `psycopg2==2.7.3.1`  # via coherentpath (setup.py)
- `pycparser==2.19`  # via cffi
- `pyopenssl==19.1.0`  # via requests, urllib3
- `pyparsing==2.4.7`  # via httplib2, packaging
- `python-crontab==2.5.1`  # via django-celery-beat
- `python-dateutil==2.8.1`  # via jsonmodels, pandas, python-crontab
- `redis==3.5.3`  # via celery
- `requests-toolbelt==0.9.1`  # via zeep
- `requests[security]==2.24.0`
- `urllib3[secure]==1.25.11`  # via pdpyras, requests, scout-apm, selenium
- `vine==1.3.0`  # via amqp, celery