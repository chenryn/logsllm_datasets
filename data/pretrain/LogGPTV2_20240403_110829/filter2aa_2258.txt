### Collaborative Penetration Testing with Lair

#### About Us
- **Tom Steele**
  - Consultant at FishNet Security
  - Twitter: @_tomsteele
- **Dan Kottmann**
  - Consultant at FishNet Security
  - Specializes in security assessments
  - Hobbyist coder
  - Twitter: @djkottmann

#### The Problem
Traditional penetration testing often involves multiple testers working independently, leading to duplicated efforts and inefficient information sharing. This can result in a lack of coordination and an incomplete or inconsistent assessment.

#### Lair: A Solution for Collaborative Penetration Testing
**What is Lair?**
- Lair is a web application designed to manage and track the execution of network assessments.
- It simplifies the process of conducting comprehensive and systematic penetration tests.
- As an open-source project sponsored by FishNet Security, Lair aims to enhance the efficiency and effectiveness of collaborative testing.

**Key Features:**
- **Imports, Aggregates, and Normalizes Data:** Lair imports, aggregates, and normalizes output from various automated tools, providing a unified view of the assessment.
- **Real-Time Updates:** Near real-time updates are pushed to distributed testers, reducing duplication of effort and ensuring that all team members are on the same page.
- **Workflow and Status Tracking:** Enhanced information sharing through detailed status tracking, including:
  - Credentials and hashes found
  - Manually identified vulnerabilities
  - Successful exploitation
  - False positives
  - Screenshots
- **Team Instant Messaging:** Built-in messaging system to facilitate communication among team members.

#### Why is Lair Different?
- **Real-Time Synchronization:** Lair leverages modern web technologies to provide real-time updates, ensuring that all testers have the most up-to-date information.
- **Efficient Collaboration:** By centralizing data and providing a clear workflow, Lair enhances collaboration and reduces redundancy.
- **Comprehensive Tracking:** Detailed tracking of various aspects of the assessment ensures thorough and consistent results.

#### Technology Stack
- **Web Application:** Built using Node.js and Meteor, which simplifies real-time synchronization across multiple, distributed clients.
  - **Pub/Sub Concept:** Utilizes the publish/subscribe model for efficient data distribution.
  - **WebSockets:** No need to manually handle WebSockets, as Meteor handles this seamlessly.
- **Drones:** Python is used for the drone components, which perform automated tasks.
- **Database Backend:** MongoDB is used for the database backend, providing a scalable and flexible storage solution.

#### Architecture
- [Insert a brief description or diagram of the architecture here, if available]

#### Live Demo
[Insert a link or instructions for a live demo here, if available]

#### Download
You can download and explore Lair from our Bitbucket repository:
- [Bitbucket Repository](https://bitbucket.org/fnsseca/lair)

For more information and support, please feel free to contact us.