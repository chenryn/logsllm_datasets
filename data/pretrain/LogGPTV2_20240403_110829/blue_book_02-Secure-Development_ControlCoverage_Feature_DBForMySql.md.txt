## IMPORTANT: DevOps Kit (AzSK) is being sunset by the end of FY21. For more details, please refer to [this document](../../../ReleaseNotes/AzSKSunsetNotice.md).

### DB for MySQL: Description, Rationale, Control Severity, and Automation

#### 1. Use the 'Allow access to Azure services' flag or IP range only if required
- **Rationale**: The 'Allow access to Azure services' setting configures a broad range of IP addresses from Azure as permitted to access the MySQL server. This can expose your server to potential attacks from other resources in the Azure region.
- **Control Severity**: High
- **Automated**: Yes
- **Recommendation**: Configure only the necessary IP addresses on the MySQL server. Avoid using the 'Any-to-Any' IP range. Utilize the firewall feature to restrict access to specific clients.

#### 2. Enable SSL connection for Azure Database for MySQL
- **Rationale**: Enforcing SSL connections between your database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream.
- **Control Severity**: High
- **Automated**: Yes
- **Recommendation**: Ensure SSL is enabled for all connections to the MySQL server.

#### 3. Consider using virtual network rules for improved isolation
- **Rationale**: Virtual network rules provide enhanced isolation by allowing only specified virtual networks to access the MySQL server.
- **Control Severity**: Medium
- **Automated**: Yes
- **Recommendation**: Implement virtual network rules to restrict access to the MySQL server.

#### 4. Plan backup and disaster recovery at the time of creation
- **Rationale**: Azure Database for MySQL offers default backup and disaster recovery for 7 days, which can be extended up to 35 days. Critical workloads require adequate backups.
- **Control Severity**: Medium
- **Automated**: Yes
- **Recommendation**: Choose between locally redundant or geo-redundant backup storage based on your workload's criticality.

#### 5. Enable Advanced Threat Protection for Azure Database for MySQL
- **Rationale**: Advanced Threat Protection provides security alerts on anomalous activities, helping detect and respond to potential threats.
- **Control Severity**: High
- **Automated**: Yes
- **Recommendation**: Enable Advanced Threat Protection to enhance security monitoring.

#### 6. Enable diagnostics logs with a retention period of at least 365 days
- **Rationale**: Retaining logs for a sufficient period allows for activity trail reconstruction during investigations. A one-year retention period is typical for compliance requirements.
- **Control Severity**: Medium
- **Automated**: Yes
- **Recommendation**: Set a log retention period of at least 365 days.

#### 7. Periodically review diagnostic and activity logs
- **Rationale**: Regular reviews of diagnostics, activity, and audit logs help identify anomalous activity early, reducing the risk of major compromises.
- **Control Severity**: Medium
- **Automated**: No
- **Recommendation**: Establish a routine for periodic log reviews.

#### 8. Grant access to Azure Database for MySQL servers according to the principle of least privilege
- **Rationale**: Granting minimum access ensures that users have just enough permissions to perform their tasks, minimizing the risk of resource exposure in case of a compromise.
- **Control Severity**: High
- **Automated**: No
- **Recommendation**: Follow the principle of least privilege when granting access to the MySQL server.