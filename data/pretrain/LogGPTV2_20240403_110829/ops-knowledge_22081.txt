User: 请解答这个和日志有关的问题What to do when asked for a weak password The guys who made the security for my country's state bank are completely nuts in all senses. Their internet banking password must be between 8 and 10 characters, and contain only letters and digits.
I don't think I need to stress how insanely backwards such restrictions are.
In another news, my card's password must be exactly 4 numbers. I'm pretty sure most passwords are an year, and quite possibly an year between the first half of the past century and the current.
Meanwhile, my e-mail password has... 35 characters.
The only non-public thing needed to set up the online banking account is to have that 4-number password. It's also used in their ATMs along with a 3-syllable case-insensitive password that the bank gives you. I guess they realised their passwords were weak, so they thought, &quot;hey, let's top that up with another insecure password&quot;.
Speaking of ATMs, they run some Windows version that I believe to be between 9x and 2k, whose desktop I saw in a ATM whose software seemed to have suffered a buffer overflow (there was a command prompt window open). This doesn't reassure me that they take security seriously.
So the question is:
When asked for a weak password, in the sense that the character set and count is limited, what do you do?
I considered hashing my current password, but it would be a nuisance to generate the hash all the time. My current solution involves applying a rememberable algorithm to the aforementioned 35-character password that I use in my e-mail.

Edit: even though an answer has been accepted, you're welcome to share your thoughts.

Assistant: As discussed in the comments section, password based security is very minimal for banking, as it is worth the effort for a thief to try to steal your password. They basically only have to infiltrate your browser and log your entries. Furthermore, if this is achieved, they have full access.

Approaches such as hashing or other algorithms do not really matter, as you still will be typing in a password that has to commit to the set limits. Thus, you are really only making it harder to remember for yourself, but someone trying to bruteforce -- although it still is a lot of characters for bruteforcing -- still has to do the same effort.

We also discussed other approaches, such as security tokens -- which I personally prefer -- and SMS-based one time passwords. The idea of the former being that you must have your card at hand, and use this to set a signature. However, most non-connected implementations work by signing a number (hash) that most users cannot relate to the action that is about to take place, so a smart attacker may try to fool you by changing the numbers on the screen and the actual numbers. This is where the connected token comes in, which uses its display to show you the complete action you are about to allow, which is probably the most usable secure method out there at the moment. However, I have no idea on banks supporting these techniques in your region.

Finally, with banking security, auditing is most important. Check your statements for crazy transactions and report those as soon as possible. This still is the best approach to banking security. Recall, for example, that credit card fraud is not so hard, but recalling transaction is not hard either.