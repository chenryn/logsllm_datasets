billion VR by
focused
inate
https://www.digi-capital.com/news/2018/01/
ubiquitous-90-billion-ar-to-dominate-focused-
15-billion-vr-by-2022/.
2022,
[16] A. P. Felt, S. Egelman, M. Finifter, D. Akhawe, and D. Wag-
ner. How to ask for permission. In HotSec, 2012.
[17] D. Ferraiolo and R. Kuhn. Role-based access controls.
In
NCSC, 1992.
[18] C. Fink.
The trillion dollar 3D telepresence gold
mine, Nov. 2017.
https://www.forbes.com/sites/
charliefink/2017/11/20/the-trillion-dollar-3d-
telepresence-gold-mine/#42b8f0a12a72.
[19] E. Gaebel, N. Zhang, W. Lou, and Y. T. Hou. Looks good to
me: Authentication for augmented reality. In TrustED, 2016.
[20] J. Gallagher. Upcoming game easily shows you how to master
paintball, Aug. 2017. https://mobile-ar.reality.news/
news/apple-ar-upcoming-game-easily-shows-you-
master-paintball-0179651/.
[21] G. Hancke and M. Kuhn. An RFID distance bounding proto-
col. In SECURECOMM, 2005.
[22] L. A. Hayduk. Personal space: Where we now stand. Psycho-
logical Bulletin, 94(2):293–335, 1983.
[23] T. He, C. Huang, B. M. Blum, J. A. Stankovic, and T. Ab-
delzaher. Range-free localization schemes for large scale sen-
sor networks. In MobiCom, 2003.
[24] Microsoft HoloLens.
https://www.microsoft.com/
microsoft-hololens/en-us.
[25] S. Houben and N. Marquardt. WatchConnect: A toolkit for
prototyping smartwatch-centric cross-device applications. In
CHI, 2015.
[26] D. Y. Huang, D. Grundman, K. Thomas, A. Kumar,
E. Bursztein, K. Levchenko, and A. C. Snoeren. Pinning down
abuse on google maps. In WWW, 2017.
[27] S. E. Hudson, J. Mankoff, and I. Smith. Extensible input han-
dling in the subArctic toolkit. In CHI, 2005.
[28] S. Jana, D. Molnar, A. Moshchuk, A. M. Dunn, B. Livshits,
H. J. Wang, and E. Ofek. Enabling ﬁne-grained permis-
sions for augmented reality applications with recognizers. In
USENIX Security, 2013.
[29] S. W. Kim. 3D document editing system. U.S. Patent Appli-
cation 20180081519, 2016, https://bit.ly/2N5Dt2S.
[30] B. W. Lampson.
Protection.
SIGOPS Oper. Syst. Rev.,
8(1):18–24, Jan. 1974.
[31] L. Lazos and R. Poovendran.
independent localization for wireless sensor networks.
WiSe, 2004.
SeRLoc: Secure range-
In
[32] K. Lebeck, T. Kohno, and F. Roesner. How to safely augment
reality: Challenges and directions. In HotMobile, 2016.
[33] K. Lebeck, T. Kohno, and F. Roesner. Enabling multiple ap-
plications to simultaneously augment reality: Challenges and
directions. In HotMobile, 2019.
[34] K. Lebeck, K. Ruth, T. Kohno, and F. Roesner. Securing aug-
mented reality output. In IEEE Symposium on Security & Pri-
vacy, 2017.
[35] K. Lebeck, K. Ruth, T. Kohno, and F. Roesner. Towards se-
curity and privacy for multi-user augmented reality: Foun-
In IEEE Symposium on Security &
dations with end users.
Privacy, 2018.
[36] L. Li, D. Li, T. F. Bissyand´e, J. Klein, Y. Le Traon, D. Lo,
and L. Cavallaro. Understanding Android app piggybacking:
A systematic study of malicious code grafting. IEEE TIFS,
12(6):1269–1284, 2017.
[37] Magic Leap. https://www.magicleap.com/#/home.
[38] L. Matney. Jeff Koons’ augmented reality Snapchat artwork
gets ‘vandalized’, Oct 2017. https://techcrunch.com/
2017/10/08/jeff-koons-augmented-reality-
snapchat-artwork-gets-vandalized/.
[39] D. Mehta, O. Sotnychenko, F. Mueller, W. Xu, S. Sridhar,
G. Pons-Moll, and C. Theobalt. Single-shot multi-person 3D
pose estimation from monocular RGB. In 3DV, 2018.
[40] Meta. Spatial interface design: Public by default. https:
//devcenter.metavision.com/design/spatial-
interface-design-principles-public-by-default.
[41] https://www.metavision.com/.
[42] Microsoft.
Hologram stability.
https://
docs.microsoft.com/en-us/windows/mixed-reality/
hologram-stability.
[43] Microsoft. Shared experiences in mixed reality. https:
//developer.microsoft.com/en-us/windows/mixed-
reality/shared experiences in mixed reality.
[44] M. R. Morris, A. Cassanego, A. Paepcke, T. Winograd, A. M.
Piper, and A. Huang. Mediating group dynamics through
tabletop interface design. IEEE CGA, 6(5):65–73, 2006.
[45] D. R. Olsen, Jr. Evaluating user interface systems research. In
UIST, 2007.
[46] T. Olsson, T. K¨arkk¨ainen, E. Lagerstam, and L. Vent¨a-
Olkkonen. User evaluation of mobile augmented reality sce-
narios. Journal of Ambient Intelligence and Smart Environ-
ments, 4:29–47, 2012.
[47] T. Olsson, E. Lagerstam, T. K¨arkk¨ainen, and K. V¨a¨an¨anen-
Vainio-Mattila. Expected user experience of mobile aug-
mented reality services: A user study in the context of shop-
ping centres. Personal and ubiquitous computing, 17(2):287–
304, 2013.
[48] L. Poretski, J. Lanir, and O. Arazy. Normative tensions in
shared augmented reality. CSCW, 2018.
[49] N. Raval, A. Srivastava, A. Razeen, K. Lebeck,
A. Machanavajjhala, and L. P. Cox. What you mark is
what apps see. In MobiSys, 2016.
[50] D. Reilly, M. Salimian, B. MacKay, N. Mathiasen, W. K. Ed-
wards, and J. Franz. Secspace: Prototyping usable privacy
and security for mixed reality collaborative environments. In
ACM SIGCHI EICS, 2014.
156    28th USENIX Security Symposium
USENIX Association
[51] K. Rematas, I. Kemelmacher-Shlizerman, B. Curless, and
S. Seitz. Soccer on your tabletop. In CVPR, 2018.
[52] F. Roesner, T. Kohno, and D. Molnar. Security and privacy
for augmented reality systems. Communications of the ACM,
57(4):88–96, 2014.
[53] F. Roesner, T. Kohno, A. Moshchuk, B. Parno, H. J. Wang,
and C. Cowan. User-driven access control: Rethinking per-
mission granting in modern operating systems. In IEEE Sym-
posium on Security and Privacy, 2012.
[54] F. Roesner, D. Molnar, A. Moshchuk, T. Kohno, and H. J.
Wang. World-driven access control for continuous sensing.
In ACM CCS, 2014.
[55] N. Sastry, U. Shankar, and D. Wagner. Secure veriﬁcation of
location claims. In WiSe, pages 1–10, 2003.
[56] F. Schaub, R. Deyhle, and M. Weber. Password entry usabil-
ity and shoulder surﬁng susceptibility on different smartphone
platforms. In MUM, 2012.
[57] S. D. Scott, M. S. T. Carpendale, and K. M. Inkpen. Territori-
ality in collaborative tabletop workspaces. In CSCW, 2004.
[58] S. D. Scott, K. D. Grant, and R. L. Mandryk. System guide-
lines for co-located, collaborative work on a tabletop display.
In ECSCW, 2003.
[59] C. Shen, K. Everitt, and K. Ryall. Ubitable: Impromptu face-
In
to-face collaboration on horizontal interactive surfaces.
UbiComp, 2003.
[60] I. Sluganovic, M. Serbec, A. Derek, and I. Martinovic.
HoloPair: Securing shared augmented reality using Microsoft
HoloLens. In ACSAC 2017, 2017.
[61] I. E. Sutherland. A head-mounted three-dimensional display.
In Fall Joint Computer Conference, American Federation of
Information Processing Societies, 1968.
[62] Z. Szalav´ari, E. Eckstein, and M. Gervautz. Collaborative
gaming in augmented reality. In VRST, 1998.
[63] D. Takahashi.
reality
Spatial
collaboration
raises $8 million for aug-
2018.
platform, Oct.
mented
https://venturebeat.com/2018/10/24/spatial-
raises-8-million-for-augmented-reality-
collaboration-platform/.
[64] F. Tari, A. Ant Ozok, and S. Holden. A comparison of per-
ceived and real shoulder-surﬁng risks between alphanumeric
and graphical passwords. In SOUPS, 2006.
[65] R. Templeman, M. Korayem, D. Crandall, and A. Kapadia.
PlaceAvoider: Steering ﬁrst-person cameras away from sensi-
tive spaces. In NDSS, 2014.
[66] R. Tilton.
Daydream Labs:
positive
Google, Aug. 2016.
in VR.
periences
//www.blog.google/products/google-vr/daydream-
labs-positive-social/.
social
ex-
https:
[67] Ubiquity6. https://ubiquity6.com.
[68] L. Wang, D. Wijesekera, and S. Jajodia. A logic-based frame-
work for attribute based access control. In FMSE, 2004.
[69] X. Wang, A. Pande, J. Zhu, and P. Mohapatra. STAMP: En-
abling privacy-preserving location proofs for mobile users.
IEEE/ACM ToN, 24(6):3276–3289, 2016.
[70] P. Wijesekera, A. Baokar, L. Tsai, J. Reardon, S. Egelman,
D. Wagner, and K. Beznosov. The feasibility of dynamically
granted permissions: Aligning mobile privacy with user pref-
erences. In IEEE Symposium on Security and Privacy, 2017.
[71] M. Wu and R. Balakrishnan. Multi-ﬁnger and whole hand ges-
tural interaction techniques for multi-user tabletop displays.
In UIST, 2003.
[72] Y. Xu, M. Gandy, S. Deen, B. Schrank, K. Spreen, M. Gorb-
sky, T. White, E. Barba, I. Radu, J. Bolter, and B. MacIn-
tyre. Bragﬁsh: Exploring physical and social interaction in
co-located handheld augmented reality games. In ACE, 2008.
[73] F. Zhang, H. Huang, S. Zhu, D. Wu, and P. Liu. ViewDroid:
Towards obfuscation-resilient mobile application repackaging
detection. In WiSec, 2014.
[74] W. Zhou, X. Zhang, and X. Jiang. AppInk: Watermarking
Android apps for repackaging deterrence. In ASIA CCS, 2013.
[75] W. Zhou, Y. Zhou, X. Jiang, and P. Ning. Detecting repack-
aged smartphone applications in third-party Android market-
places. In CODASPY, 2012.
A Prototype Application Descriptions
In Section 6.1, we describe our assessment of our design’s
functionality by its ability to ﬂexibly support our representa-
tive case study apps. Here, we provide further details on our
implemented prototype case study apps.
Paintball. This is a minimalist implementation of the Paint-
ball case study. Players can launch red spheres that, upon
contact with another player, attach to that other player. All
users in the game session can see all of the red spheres. For
the purposes of the prototype, we leave out scorekeeping and
more advanced game features.
Doc Edit. This is a basic version of Multi-Team Whiteboards
in which each user accessing content has a personal instanti-
ation of it. Users, by interacting with a simple control panel,
create ﬂat rectangular boxes as documents. Documents are
location-decoupled, and though they are private and ghosted
by default, users can choose to share individual documents
with individual users. A user can also turn a document red,
modifying the document’s contents in a way that ghost doc-
uments do not display (for the prototype, this emulates arbi-
trary content entry, which we do not implement); the user can
also delete the document in a group-extended way (i.e., all
other users’ instances of the document are also deleted).
Cubist Art. This is a simpliﬁed version of the Community
Art case study. Rather than making and manipulating arbi-
trary objects, users create and control cubes and can choose
to share them or not. Although many of the user’s possible
actions via the control panel are similar to those of Doc Edit,
there are several key differences: (1) Cubes are public by de-
fault rather than private. (2) Cubes are shared in a location-
coupled way rather than location-decoupled. (3) Cubes obey
real-world physics instead of being entirely script-controlled.
(4) Object deletion is global location-coupled rather than
USENIX Association
28th USENIX Security Symposium    157
global location-independent (note, though, that the seman-
tics of location-coupled sharing make these two cases visu-
ally equivalent for solely location-coupled objects).
We did not implement the Soccer Arena case study, since
it does not surface new security, privacy, or functionality re-
quirements not covered by the other case studies. Section 2
provides further analysis.
B Interaction with Existing Design Recom-
mendations
Below we include a further analysis of our module’s compat-
ibility with existing design recommendations.
How are they sharing? The HoloLens guidelines list possi-
ble sharing scenarios as consisting of presentation, collabo-
ration, or guidance. Our design supports all of these: for in-
stance, a developer can use ShareAR to set appropriate con-
trols such as view-only permissions when a presenter shares
content with an audience. Besides the opt-in scenarios that
the HoloLens guidelines describe, our design also supports
opt-out public content sharing, which we argue should be
treated as another important use case for AR.
What is the group size? The HoloLens guidelines remind
developers to design for as many users as needed. Our design
can support an arbitrary number of users. (In practice, our
implementation stores both object IDs and user IDs as 32-bit
integers, providing a generous upper bound on its capacity.
We examine performance questions in Section 6.3.)
When are they sharing? The HoloLens guidelines ask
whether sharing is asynchronous or synchronous. Although
we explicitly design ShareAR to support real-time sharing,
we do not preclude the possibility of asynchronous sharing.
A developer could, for instance, write a replacement network
shim layer that relies on a central server for data storage and
periodically queries the server for updates.
What devices are they using? In particular, the HoloLens
guidelines ask whether AR users might share content with
VR users. Although this is outside the scope of this work, we
note that there is nothing in principle that fundamentally pre-
vents developers from extending our work into VR as well.
More broadly, we note that in principle, the ShareAR design
is compatible across any AR HMD platforms that satisfy ba-
sic assumptions such as a shared notion of 3D space. (Our
implementation is built for the HoloLens and has not been
ported to other platforms as of this writing.)
Clip planes near user. HoloLens recommends setting a
“plane clipping” distance of 0.85 m so that a user does not
see any portions of AR objects that are closer than that in
the user’s ﬁeld of view [42]. Plane clipping may conceptu-
ally be considered a partial way of enforcing personal space;
however, it only affects the view of the user whose space is
invaded, and other users still see the object as being close
to the user. ShareAR’s treatment of owned physical space
Figure 4: Timing measurements for all steps in the evaluation pro-
tocol, each from the perspective of the device initiating the step,
as the number of present users scales. Acceptance times are mea-
sured on the receiver’s device; all other times are measured on the
sharer’s device. Black dashed lines denote a corresponding base-
line Unity operation where one exists.
Figure 5: Timing measurements for all steps in the evaluation pro-
tocol, each from the perspective of the device initiating the step,
on a per-object basis as the number of objects scales. Acceptance
times are measured on the receiver’s device; all other times are
measured on the sharer’s device. Black dashed lines denote a cor-
responding baseline Unity operation where one exists.
encompasses this recommendation and is a more complete
solution. (Our implementation does not yet include personal
space; however, it does include basic plane clipping.)
Do not disturb. Meta cautions against showing the user in-
cessant notiﬁcations. Our design does not specify the user
interface: notiﬁcations from other devices are passed as an
event to the app but not displayed to the user. Thus, ShareAR
is ﬂexible enough to support this design choice.
Public by default. This recommendation is similar in spirit
to our goal of supporting shared physical-world intuition.
Although our design does support a purely public virtual
world, we do not recommend it for all circumstances; our
ghosting mechanism maintains a basic shared-world intu-
ition while preserving a degree of privacy.
C Detailed Performance Data
Results as the number of users scales are shown in Figure 4;
results as the number of objects scales are shown in Figure 5.
158    28th USENIX Security Symposium
USENIX Association