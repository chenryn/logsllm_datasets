.2 and SRX Series
Firewalls.
ospfVirtIfConfigErro 1.3.6.1.2.1.14.16 6 5 – – M, T, MX, J, EX,
.2 and SRX Series
r
Firewalls.
ospfIfAuthFailure 1.3.6.1.2.1.14.16 6 6 – – M, T, MX, J, EX,
.2 and SRX Series
Firewalls.
ospfVirtIfAuthFailur 1.3.6.1.2.1.14.16 6 7 – – M, T, MX, J, EX,
.2 and SRX Series
e
Firewalls.
ospfIfRxBadPacket 1.3.6.1.2.1.14.16 6 8 – – M, T, MX, J, EX,
.2 and SRX Series
Firewalls.
491
Table 43: Standard Supported SNMP Version 1 Traps (Continued)
Defined in Trap Name Enterprise ID Generi Specifi System Syslog Tag Supported On
c Trap c Trap Loggin
Numb Numb g
er er Severit
y Level
ospfVirtIfRxBadPacke 1.3.6.1.2.1.14.16 6 9 – – M, T, MX, J, EX,
.2 and SRX Series
t
Firewalls.
ospfTxRetransmit 1.3.6.1.2.1.14.16 6 10 – – M, T, MX, J, EX,
.2 and SRX Series
Firewalls.
ospfVirtIfTxRetransm 1.3.6.1.2.1.14.16 6 11 – – M, T, MX, J, EX,
.2 and SRX Series
it
Firewalls.
ospfMaxAgeLsa 1.3.6.1.2.1.14.16 6 13 – – M, T, MX, J, EX,
.2 and SRX Series
Firewalls.
ospfIfStateChange 1.3.6.1.2.1.14.16 6 16 – – M, T, MX, J, EX,
.2 and SRX Series
Firewalls.
VRRP Notifications
RFC 2787, vrrpTrapNewMaster 1.3.6.1.2.1.68 6 1 Warnin VRRPD_NEW All devices running
Definition g MASTER_TRAP Junos OS.
s of
Managed
Objects vrrpTrapAuthFailure 1.3.6.1.2.1.68 6 2 Warnin VRRPD_AUTH_ All devices running
g FAILURE_TRAP Junos OS.
for the
Virtual
Router
Redundan
cy
Protocol
492
Table 43: Standard Supported SNMP Version 1 Traps (Continued)
Defined in Trap Name Enterprise ID Generi Specifi System Syslog Tag Supported On
c Trap c Trap Loggin
Numb Numb g
er er Severit
y Level
RFC 6527, vrrpv3NewMaster 1.3.6.1.2.1.207 6 1 Warnin VRRPD_NEW_MA M and MX
Definition g STER
s of
Managed
Objects vrrpv3ProtoError 1.3.6.1.2.1.207 6 2 Warnin VRRPD_V3_PROT M and MX
g O_ERROR
for the
Virtual
Router
Redundan
cy
Protocol
Version 3
(VRRPv3)
Standard SNMP Version 2 Traps
Table 44 on page 492 provides an overview of the standard SNMPv2 traps supported by the Junos OS.
The traps are organized first by trap category and then by trap name and include their snmpTrapOID. The
system logging severity levels are listed for those traps that have them with their corresponding system
log tag. Traps that do not have corresponding system logging severity levels are marked with an en dash
(–) in the table.
Table 44: Standard Supported SNMP Version 2 Traps
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
Startup Notifications
493
Table 44: Standard Supported SNMP Version 2 Traps (Continued)
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
RFC 1907, coldStart 1.3.6.1.6.3.1.1. Critical SNMPD_TRAP_ All devices running
Management 5.1 COLD_START Junos OS.
Information
Base for
Version 2 of the warmStart 1.3.6.1.6.3.1.1. Error SNMPD_TRAP_ All devices running
5.2 WARM_START Junos OS.
Simple Network
Management
Protocol
authenticationFailure 1.3.6.1.6.3.1.1. Notice SNMPD_TRAP_ All devices running
(SNMPv2)
5.5 GEN_FAILURE Junos OS.
Link Notifications
RFC 2863, The linkDown 1.3.6.1.6.3.1.1. Warning SNMP_TRAP_ All devices running
Interfaces 5.3 LINK_DOWN Junos OS.
Group MIB
linkUp 1.3.6.1.6.3.1.1. Info SNMP_TRAP_ All devices running
5.4 LINK_UP Junos OS.
Remote Operations Notifications
RFC 2925, pingProbeFailed 1.3.6.1.2.1.80.0 Info SNMP_TRAP_ All devices running
Definitions of .1 PING_PROBE_ Junos OS.
Managed FAILED
Objects for
Remote Ping,
Traceroute, and pingTestFailed 1.3.6.1.2.1.80.0 Info SNMP_TRAP_PIN All devices running
.2 G_ TEST_FAILED Junos OS.
Lookup
Operations
pingTestCompleted 1.3.6.1.2.1.80.0 Info SNMP_TRAP_PIN All devices running
.3 G_ Junos OS.
TEST_COMPLETE
D
494
Table 44: Standard Supported SNMP Version 2 Traps (Continued)
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
RMON Alarms
RFC 2819a, fallingAlarm 1.3.6.1.2.1.16.0 – – All devices running
RMON MIB .1 Junos OS.
risingAlarm 1.3.6.1.2.1.16.0 – – All devices running
.2 Junos OS.
Routing Notifications
BGP 4 MIB bgpEstablished 1.3.6.1.2.1.15.7 – – All devices running
.1 Junos OS.
bgpBackwardTransition 1.3.6.1.2.1.15.7 – – All devices running
.2 Junos OS.
OSPF Trap MIB ospfVirtIfStateChange 1.3.6.1.2.1.14.1 – – All devices running
6.2.1 Junos OS.
ospfNbrStateChange 1.3.6.1.2.1.14.1 – – All devices running
6.2.2 Junos OS.
ospfVirtNbrStateChang 1.3.6.1.2.1.14.1 – – All devices running
6.2.3 Junos OS.
e
ospfIfConfigError 1.3.6.1.2.1.14.1 – – All devices running
6.2.4 Junos OS.
ospfVirtIfConfigError 1.3.6.1.2.1.14.1 – – All devices running
6.2.5 Junos OS.
495
Table 44: Standard Supported SNMP Version 2 Traps (Continued)
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
ospfIfAuthFailure 1.3.6.1.2.1.14.1 – – All devices running
6.2.6 Junos OS.
ospfVirtIfAuthFailure 1.3.6.1.2.1.14.1 – – All devices running
6.2.7 Junos OS.
ospfIfRxBadPacket 1.3.6.1.2.1.14.1 – – All devices running
6.2.8 Junos OS.
ospfVirtIfRxBadPacket 1.3.6.1.2.1.14.1 – – All devices running
6.2.9 Junos OS.
ospfTxRetransmit 1.3.6.1.2.1.14.1 – – All devices running
6.2.10 Junos OS.
ospfVirtIfTxRetransmi 1.3.6.1.2.1.14.1 – – All devices running
6.2.11 Junos OS.
t
ospfMaxAgeLsa 1.3.6.1.2.1.14.1 – – All devices running
6.2.13 Junos OS.
ospfIfStateChange 1.3.6.1.2.1.14.1 – – All devices running
6.2.16 Junos OS.
MPLS Notifications
RFC 3812, mplsTunnelUp
Multiprotocol
Label Switching
(MPLS) Traffic
496
Table 44: Standard Supported SNMP Version 2 Traps (Continued)
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
Engineering
mplsTunnelDown
(TE)
Management
Information
mplsTunnelRerouted
Base
mplsTunnelReoptimized
Entity State MIB Notifications
RFC 4268, entStateOperEnabled 1.3.6.1.2.1.131. Notice CHASSISD_SNMP MX240, MX480,
Entity State 0.1 _TRAP3 and MX960
MIB
entStateOperDisabled 1.3.6.1.2.1.131. Notice CHASSISD_SNMP MX240, MX480,
0.2 _TRAP3 and MX960
L3VPN Notifications
RFC 4382, mplsL3VpnVrfUp
MPLS/BGP
Layer 3 Virtual
Private mplsL3VpnVrfDown
Network (VPN)
mplsL3VpnVrf
RouteMidThresh
Exceeded
mplsL3VpnVrf
NumVrfRouteMax
ThreshExceeded
497
Table 44: Standard Supported SNMP Version 2 Traps (Continued)
Defined in Trap Name snmpTrapOID System Syslog Tag Supported On
Logging
Severity
Level
mplsL3VpnNum
VrfRouteMax
ThreshCleared
VRRP Notifications
RFC 2787, vrrpTrapNewMaster 1.3.6.1.2.1.68.0 Warning VRRPD_ All devices running
Definitions of .1 NEWMASTER_ Junos OS.
Managed TRAP
Objects for the
Virtual Router
Redundancy vrrpTrapAuthFailure 1.3.6.1.2.1.68.0 Warning VRRPD_AUTH_ All devices running
.2 FAILURE_ TRAP Junos OS.
Protocol
RFC 6527, vrrpv3NewMaster 1.3.6.1.2.1.207. Warning VRRPD_NEW_MA M and MX
Definitions of 0.1 STER
Managed
Objects for the
Virtual Router vrrpv3ProtoError 1.3.6.1.2.1.207. Warning VRRPD_V3_PROT M and MX
0.2 O_ERROR
Redundancy
Protocol
Version 3
(VRRPv3)
SEE ALSO
Configure SNMP Trap Options and Groups on a Device Running Junos OS
No Link Title
498
Customized SNMP MIBs for Syslog Traps
IN THIS SECTION
Overview of Custom SNMP MIBs | 498
Define a Custom MIB for a Syslog Trap | 500
Limitations of Using Custom SNMP Traps | 507
Example Custom Syslog Trap | 507
SNMP syslog traps are alert messages sent from a remote SNMP-enabled device to a central collector
notifying you of a component failure or when critical resources are out of configurable limits. This
information is captured in a Management Information Base (MIB). The Juniper Networks enterprise-
specific System Log MIB enables notification of an SNMP trap-based application when an important
system log message occurs. The MIB is defined to map the syslog entry to the generic jnxSyslogTrap
OID.
The jnxSyslogTrap OID is a trap based on the logs generated in the syslog. The Event process (eventd)
monitors syslog and, based on the event policy raise-trap configuration statement for syslog events,
sends all syslog events into one generic syslog-defined trap MIB, which is jnxSyslogTrap.
Using one generic MIB OID is inconvenient for customers who want to process syslog trap OID values
to discover specific events because it is impossible to distinguish alarms having the same OID. But as of
Junos OS Release 18.3R1, you can map a custom OID to a particular log and load it on the device
dynamically.
The benefit of this feature is that because there is a way to assign specific OIDs to different types of
syslog events, you can now effectively monitor for each different type of syslog event.
Overview of Custom SNMP MIBs
IN THIS SECTION
Write the MIB File | 499
Convert to a YANG File | 499
CLI Commands to Use for Managing YANG Files | 500
499
To create a custom SNMP MIB for a syslog trap, you must complete the following tasks:
• Write the custom MIB.
• Convert the MIB file to YANG format and copy the YANG file to the device.
• Load the YANG file onto the device.
The following sections overview these steps.
Write the MIB File
Before you can map a particular log with a custom OID, you must write a custom MIB. To avoid
collisions, you must define your MIB objects and traps only under the reserved roots shown in Table 9.
Table 45: MIB Roots for Custom MIB Modules
Root Description OID
.iso.org.dod.internet.private.enterprises.juniperMIB.jnxMibs.jnxCustomMibRoot Custom .1.3.6.1.4.1.2636.3.8
MIB 6
module
.iso.org.dod.internet.private.enterprises.juniperMIB.jnxTraps.jnxCustomSyslogNotifications Custom .1.3.6.1.4.1.2636.4.3
trap 0
notification
Convert to a YANG File
Before loading your MIB definition onto the device, you must convert the MIB file to YANG format. The
recommended way to covert the MIB file to YANG is to use the smidump v0.5.0 tool. The smidump tool
is an open source application which can be installed on your laptop (see https://www.ibr.cs.tu-bs.de/
projects/libsmi/smidump.html).
Once the file is in YANG format, you must copy it to the device. Then, using a CLI command, you load
the into the SNMP process (snmpd). A corresponding JSON file is then generated, which snmpd parses
and from it builds the database of the OID hierarchy. If some unknown tag is found, snmpd returns the
appropriate error message.
500
CLI Commands to Use for Managing YANG Files
To load the YANG module into snmpd, use the snmp option with the request system yang add command:
user@host> request system yang add snmp module yang-filename package package-name
The yang-filename includes the absolute path.
NOTE: In order to run the request system yang add command, you must have super-user access.
There are two other commands for managing YANG files on devices: show system yang package and request
system yang delete.
SEE ALSO
show system yang package
request system yang delete
request system yang add
Define a Custom MIB for a Syslog Trap
In this procedure, we use the following example files:
• MIB file to convert
• output
NOTE: Although YANG can be written manually by referring to the example YANG provided in
this documentation, we recommend you convert the MIB to YANG format using the smidump
tool v0.5.0.
To define a custom MIB for a syslog trap:
1. Load your MIB onto the network management system (NMS) and check if there are any errors.
2. Invoke the smidump tool using the following command, where dependency-mib, input-custom-mib-
file, and YANG-MODULE-NAME are variables for specific filenames:
$ smidump -p dependency-mib input-custom-mib-file -f yang -o YANG-MODULE-NAME.yang
501
For example:
$ smidump -p mib-jnx-smi.txt mib-jnx-example-custom-syslog.txt -f yang -o JUNIPER-EXAMPLE-
CUSTOM-SYSLOG-MIB.yang
As output, you will get the converted YANG file JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB.yang.
Notice that the input custom MIB file mib-jnx-example-custom-syslog.txt is dependent on SNMPv2-
SMI, JUNIPER-SMI, and IF-MIB. But since SNMPv2-SMI and IF-MIB are standard MIBs, their
definitions are already present in smidump. So, the only dependent MIB file required is mib-jnx-
smi.txt, which has module JUNIPER-SMI definitions.
3. Copy the file JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB.yang to any path on the device, and copy
all the dependent YANG files to the device at the following path: /opt/lib/python2.7/site-packages/
pyang/modules.
NOTE: You must convert all the dependent MIBs to YANG files and copy to these to the
device.
Following are some of the standard MIBs that have been converted to YANG modules and are
present in the above path: IANAifType-MIB.yang, ietf-yang-types.yang, ietf-inet-types.yang, IF-
MIB.yang, JUNIPER-SMI.yang, SNMPv2-TC.yang.
4. Using the CLI, load the YANG modules into snmpd using this command:
user@host> request system yang add snmp module yang-filename package package-name
For example:
user@host> request system yang add snmp module /var/tmp/JUNIPER-EXAMPLE-CUSTOM-SYSLOG-
MIB.yang package p1
The YANG module is converted to JSON format and goes to snmpd for parsing and creating the
internal database.
5. To verify the trap based on the syslog with the newly added trap definitions is working, spoof (mimic)
the trap. You can do this either using the CLI or an event policy. The following is an example of
spoofing the trap using the CLI.
user@host> request snmp spoof-trap jnxExampleSyslogTrap?
Possible completions:
502
 The name of the trap to spoof
jnxExampleSyslogTrap1 (Dynamic)
jnxExampleSyslogTrap2 (Dynamic)
jnxExampleSyslogTrap3 (Dynamic)
user@host> request snmp spoof-trap jnxExampleSyslogTrap1
Spoof-trap request result: trap sent
successfully
mib-jnx-example-custom-syslog.txt
-- *******************************************************************
-- Juniper enterprise specific custom syslog MIB.
--
-- Copyright (c) 2002-2004, 2006, Juniper Networks, Inc.
-- All rights reserved.
--
-- The contents of this document are subject to change without notice.
-- *******************************************************************
JUNIPER-EXAMPLE-CUSTOM-SYSLOG-MIB DEFINITIONS ::= BEGIN
IMPORTS
MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, Integer32
FROM SNMPv2-SMI