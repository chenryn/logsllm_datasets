经过base64解码之后发现了核心代码经过了混淆，如图5-2所示为解析后的代码。
图5-2 混淆过的代码
对混淆的代码进行梳理，代码中eval用来压缩二进制程序，所以只需打印可还原出关键代码。该脚本是一个基于perl的后门工具。rsync是通过开源的ShellBot工具生成，主要功能是通过监听服务器下发IRC指令执行其他的恶意行为。其ServerIP为5.255.86.125（荷兰），图5-3为解密后的IRCBot。
图5-3 解密后的IRCBot
工具中所使用的变量和注释是葡萄牙语。具有多种后门功能，其中包括单端口探测、全端口扫描、下载文件和执行远程Shell，除此之外,似乎还具有DoS和TCPFlood攻击功能。图5-4为在中发现的疑似DoS攻击。
图5-4 疑似DoS攻击
整个的功能主要是设置循环，监听来自IRC服务器的指令，图5-5为后门中设置的循环监听功能。该工具结合c目录下的爆破工具会将本地失陷计算机变成僵尸网络，向其它存在弱口令的设备植入IRCBot。
图5-5 监听接受来自IRC服务器的指令
具体操作详情在后续分析c目录中叙述，功能如图5-6所示。
图5-6 功能
另外一个后门工具是一个Linux可执行文件，为了保证日后可以密登录，攻击者将RSA公钥添加到失陷计算机.ssh目录中Authorized_keys文件中。后门植入RSA公钥代码如图5-7所示。
图5-7 植入rsa公钥
通过图5-8不难发现，在失陷计算机上也确实发现了此公钥。
图5-8 本地系统中发现公钥
作为ssh后门服务器，注释中包含了大量的ssh字符串。功能包括典型的ssh会话、连接服务器、远程Shell以及传输命令等。图5-9是通过ssh连接服务器的一个操作。
图5-9 ssh连接服务器
## 六、 僵尸网络
此次攻击中，攻击者通过爆破程序的扫描功能将IRCBot植入带有弱口令的设备，通过向失陷计算机植入IRCBot程序形成僵尸网络。和其他功能一样，目录为ssh爆破组件，依托Shell脚本进行初始化。脚本由启动，然后创建脚本并命名为，运行之后启动，进而执行关键脚本。攻击者从第三方网站下载即将要爆破的IP表单和字典，将其作为爆破工具的参数进行扫描和爆破，并时隔一天就会重新启动一次。脚本代码如图6-1所示。
图6-1 执行爆破程序
此脚本会利用wget和curl指令遍历相应的恶意服务器网站，从网站/a/xtr目录下载真正存放恶意文件地址，这些地址存放了攻击者实施爆破的IP地址和字典文件。研究人员发现攻击组织通过54.36.182.244（法国），51.75.28.134（法国），103.248.211.198（印度）三个服务器轮询下载IP表单和字典。轮询的三个地址都包含了相同的IP列表文件a和字典文件b，并且这两个文件在实时更新，如图6-2所示。
图6-2 攻击者实时更新IP列表和字典
文件a中包含攻击者将要爆破的IP地址和端口号，IP数量固定为7万个。通过分析和（两个文件一样，简称tsm）可执行程序，作为爆破工具可充当扫描器。工具使用功能注释部分如图6-3所示，可以看到与脚本中设置的命令一样。
图6-3 爆破程序与脚本内容一致
软件具有远程植入的功能，攻击者通过遍历IP列表，对单个IP尝试爆破，一旦爆破成功就会将IRCBot植入到下一个失陷计算机并上报。图6-4为爆破一个IP地址后植入IRCBot，图6-5为后门代码与中的所执行的后门代码一致。
图6-4通过ssh植入IRCBot
图6-5爆破攻击内嵌IRCBot
攻击者通过sftp将本地挖矿木马传播到下一个失陷计算机，接着开启会话执行与本地系统相同的Shell指令，开始新一轮的攻击，如图6-6所示。
图6-6 执行相同Shell
## 七、 分析总结和建议
安全界有句话“世界上只有两种系统，一种是已知被攻破的系统，一种是已经被攻破但自己还不知道的系统”，如何阻止网络攻击是每个安全从业者的职责。目前业界普遍认可纵深防御的理念开展网络安全防护工作，通过访问控制FW和网络技术进行安全域隔离，生产与非生产隔离；身份认证IAM进行权限管理、运维审计、双因素认证等；应用防火墙WAF和RASP等技术对应用侧威胁检测与阻断；网络入侵监测防御系统NIDPS对威胁进行识别与阻断；APT检测系统在流量侧进行风险预警；服务器侧威胁检测系统HIDS/EDR对服务器资产、安全配置、运行服务和webshell等情况进行排查；日志管理系统SIEM汇总收集各类型日志，通过场景化日志识别风险并告警；数据库审计系统检测异常访问、数据获取与系统运维行为；安全运营中心SOC对各类安全产品进行汇总，借助统计分析、机器学习等方式对告警进行聚合，进行精准告警并联动阻断；通过众多安全产品开展递进式、多维式的防御，经过安全人员的不断运营起到了良好的防御效果。
但是，这一套系统的投入对于企业来说不可忽视，考虑到ROI问题，通常在非生产环境的安全投入是指数级下降。这里建议，如果企业在非生产环境有互联网服务，一定要尽可能的与生产保持一致的防护水平，如果预算不足，至少在如下几点做好管控：
1) 做好资产管理
所有IP资产责任到人，互联网服务责任到人。至少每半年复核1次，这样安全管理员能够确定资产使用情况，责任人能够了解有人在进行监督，杜绝出现无人认领的资产。
2) 严格访问控制
对于提供互联网服务和访问互联网服务的服务器建议单独设置安全域，严格控制出向访问，建议互联网服务双向进行点对点控制。
3) 不在互联网开放高危端口
严禁在互联网开放21、22、23、44、1433、3389、3306、6379、60000、11211等端口，如必须开放，建议通过VPN方式接入，其中ssh建议改为密钥登录。
4) 做好口令管理
严禁任何服务的任何账户使用空口令、默认口令、简单口令，在技术支持的基础上应强制设置高复杂度口令。
5) 坚持漏洞管理
系统被入侵很大原因是漏洞没有及时修复，像今天还有企业存在“永恒之蓝”、“Struts2”旧版本漏洞，在业务系统具备高可用机制的情况下，应采取“积极”的态度进行漏洞修复，也就是及时漏洞修复真的影响了1台服务器，系统架构具有高可用机制，具备回退窗口，依旧不会对系统造成影响。
6) 采集异常日志
对操作系统、数据库、应用登录等敏感日志进行日志采集，针对短时高频失败、短时跨地域、单账号多地同时在线等敏感场景进行捕捉告警。
6、重视“人”的因素
不论是资产的管理还是防护工作的管理都会归集的对“人”的管理，只有将安全意识深入人心，安全的短板才会真正补齐。
7) 落实安全体系
安全工作是一项综合工作，如何“有效”且“全面”的开展，应该在“网安法”和“等级保护2.0”的基础上开展制度体系建设，通过“制度”指引“人”对“资产”开展“防护”工作。
8) 争取预算
安全工作讲究“感知力”（及监测能力），纵深防御每个阶段都有不同的监测与防御能力，单一产品不可能具有“全面”的监测能力，要想做到安全的全面防护，需要企业持续的进行人才培养和资金投入。