本章开头我们提到安全隐患是一种 Bug，但有时即使修正了所有 Bug
也不能保证应用程序绝对安全。举例来说，没有使用 HTTPS
协议（超文本传输安全协议）来加密传输的状态并不能算作是
Bug，这种情况下，虽然不存在（狭义的）安全隐患，但是传输的内容却存在被窃听的可能性。
如同使用 HTTPS
来对传输内容进行加密那样，积极主动地加强安全性的措施在本书中被称为"安全性功能"。安全性功能实为应用程序的一种需求，所以也被称为安全性需求。
从开发管理这一层面上来说，将应用程序安全性方面的 Bug
和需求这两者整理清楚也是至关重要的。如同 Bug
必须被消除一样，消除安全隐患也应当是理所当然的。另一方面，是否将安全性功能加入到项目需求中，则应该由软件的发包方结合项目经费作出决定。
为了让读者有意识地区分安全性 Bug
和安全性功能，本书特意将两者分别独立成章来加以细述。
## **1.5 本书的结构** {#text00000.html#nav_point_9 line-num="102 103"}
本书结构如下。
第 1 章，引入安全隐患这个概念，介绍安全隐患是如何产生的，说明安全性 Bug
和安全性功能的区别。
第 2 章，搭建本书的试验环境。本书通过 VMware
的虚拟机提供了可以实际体验安全隐患的环境。该章会介绍搭建此虚拟机环境和安装诊断用工具的方法。
第 3 章，讲述 HTTP、Cookie、会话（Session）管理等 Web
应用安全方面的基础知识，还会介绍同源策略。
第 4 章，全书的核心章节。针对 Web
应用的每一个功能中易产生的安全隐患模式，对其原理及对策等各个方面加以详细说明。
第 5 章，讲述认证、账号管理、授权、日志输出等典型的安全性功能。
第 6 章，讲述字符编码与安全性的关系。Web
应用安全隐患的起因很多都涉及字符编码。本章将讲述字符编码的基础知识、安全隐患产生的原因和相应的对策。
第 7 章，从 Web 应用以外的方面，描绘提高网站安全性措施的全景。
第 8 章，讲述如何开发安全无虞的 Web 应用。
# **第 2 章 搭建试验环境** {#text00000.html#nav_point_10 line-num="0 1"}
> 本章将讲解如何搭建本书中安全隐患用例的运行环境，其中的截图是在 Windows
> 7 中取得的，但这些操作同样适用于 Windows XP 或 Windows Vista。
## **2.1 试验环境概要** {#text00000.html#nav_point_11 line-num="4 5"}
本书中安全隐患用例的运行环境如下：
-   Linux（Ubuntu 10.04）
-   Apache 2.2
-   PHP 5.3
-   PostgreSQL 8.4
-   Postfix 等兼容 Sendmail 的电子邮件服务器
为了方便使用 Windows
操作系统的读者，本书为大家准备了已经将上述环境搭建完毕的 VMware
虚拟机。下图展示了在 VMware 中运行 Linux 系统的情形。
![{%}](Image00001.jpg)
**图 2-1 本书的试验环境**
虽然虚拟机中的 Linux
服务器事实上是在读者自己的计算机中运行的，但请将其想像成互联网上的一台远程服务器。通过使用虚拟机，我们就能在自己的计算机上模拟近似于互联网上的服务器环境。
本章需要安装以下软件。
-   VMware Player（VMware 运行环境）
-   Fiddler（诊断用工具）
-   虚拟机
VMware Player 和 Fiddler 是免费公开的软件。虚拟机则是指为了能够在 VMware
Player 上运行本书代码而配置的 Linux 环境。
从下一节开始，我们将依次解说各软件的安装方法。
## **2.2 安装 VMware Player** {#text00000.html#nav_point_12 line-num="32 33"}
-   **什么是 VMware Player**
    VMware Player 是美国 VMware
    公司推出的一款免费虚拟机软件。前面已经提到，本书将利用 VMware Player
    在虚拟机上搭建 Linux 服务器的运行环境，并将其视为 Web
    服务器来进行各种试验。
    写作本书时（2011 年 4 月），VMware Player 的最新版本为
    3.1.4，软件要求的配置如下 [1]{.注释编号} 。
    -   CPU ：标准的 x86 兼容系统或 x86-64 位兼容个人计算机，支持 Intel
        VT 或者 AMD-V（不支持 PAE 的 Pentium M 等处理器）
    -   操作系统：Windows XP、Windows Vista 或 Windows 7
    -   内存：1G 以上
    -   硬盘：有 1G 以上空余容量（包括虚拟机）
    如果硬盘剩余空间不足，可将虚拟机保存于外部存储媒介（如 U 盘或 SD
    卡等），这样安装 VMware Player 本身只需要 150M 左右的空间即可。
-   **下载 VMware Player**
    安装 VMware Player 的最新版，可以前往
     下载，页面如图 2-2
    所示。
    ![{%}](Image00002.jpg)
    **图 2-2 在 VMware 的官方网站上能下载最新版的安装文件**
-   **安装 VMware Player**
    双击安装程序。这时会显示以下安装向导。
    ![{%}](Image00003.jpg)
    **图 2-3 安装开始**
    安装过程中可以全部使用默认选项。如有必要，可以更改安装路径等。
    ![{%}](Image00004.jpg)
    **图 2-4 更改安装路径**
    当看到以下画面时，说明安装已经成功。然后按照画面上的指示，重启系统即可。
    ![{%}](Image00005.jpg)
    **图 2-5 安装完成**
[1]{.注释编号下} 本章的讲解主要针对 Windows
操作系统，但本书附带的虚拟机环境在 Linux 版的 VMware Player 3.1.2，以及
Mac OS X 的 VMware Player 3.1.2 上已经做过测试，均能正常运行。
## **2.3 安装虚拟机及运行确认** {#text00000.html#nav_point_13 line-num="76 77"}
接下来安装安全隐患用例的虚拟机。虚拟机的安装，请先到本书的支持页面下载
WASBOOK.ZIP 文件：[链接：http://pan.baidu.com/s/1sj3jhA9
密码：ivfp](http://pan.baidu.com/s/1sj3jhA9)
；然后，解压到合适的路径即可。解压后的大小约为
600M，所以请安装到至少还有 800M 以上剩余空间的盘符中。也可以安装至 U
盘或 SD 卡中。
假定解压路径为"文档"文件夹。这样，文档文件夹内就会生成一个名为 WASBOOK
的文件夹。
![{%}](Image00006.jpg)
**图 2-6 WASBOOK 文件夹的内容**
-   **虚拟机启动确认**
    双击 WASBOOK 文件夹中的 wasbook.vmx，就会启动 VMware
    Player。第一次启动 VMware Player
    时，会出现以下对话框时，请务必选择"我已移动该虚拟机"。
    ![{%}](Image00007.jpg)
    **图 2-7 务必选择"我已移动该虚拟机"**
    如果显示下图这样的 VMware Tools 下载对话框，请点击"以后提醒我"，然后
    Linux 就开始启动了。
    ![{%}](Image00008.jpg)
    **图 2-8 不需要 VMware Tools**
    当出现 wasbook login: 的登录提示时，说明启动已经完成。这时要先按下
    Ctrl+G 将光标切换至虚拟机上，输入用户名 root，密码
    wasbook，就能登录成功。接着在提示符中输入 ifconfig
    eth0，就会出现以下画面。
    ![{%}](Image00009.jpg)
    **图 2-9 登录虚拟机后，执行 ifconfig 命令**
    这时，记下 inet addr: 右边显示的 IP 地址。这个 IP 地址在后面设置
    hosts 文件时会用到。至此，虚拟机的启动确认就完成了。
-   **虚拟机的使用方法**
    这里简单介绍一下虚拟机的使用方法。
    -   **键盘输入切换**
        要在虚拟机画面上输入时，只需在激活 VMware Player 的窗口后按下
        Ctrl+G 即可。或者在 VMware Player
        内部黑色区域中的任一位置按下鼠标。
        在虚拟机中输入完毕想要切换至其他窗口时，可按下 Ctrl+Alt。
    -   **退出**
        退出虚拟机有两种方法。
        如果是使用 root
        登录的话，可以用以下命令退出虚拟机。输入阴影部分的内容。执行后就会立即开始关闭操作系统。
            # shutdown -h now
        另一种方法为，在出现登录提示时输入用户名
        down，此处不需要输入密码，然后便会自动开始关闭操作系统。无论哪种方法，在
        Linux 操作系统关闭之后，VMware Player 都会自动退出。
    -   **Linux 的操作**
        关于 Linux 的操作，本书不做讲述，请参考
        Linux（Ubuntu）的相关书籍或网站。
-   **编辑 hosts 文件**
    为了能顺利地执行试验，在此请将以下站名添加到 Windows 的 hosts
    文件中。
    -   example.jp..................存在安全隐患的网站
    -   trap.example.com......攻击者准备的陷阱网站
    hosts（通常路径为
    C:\\Windows\\System32\\drivers\\etc\\hosts）文件需要有管理者权限才能编辑（Windows
    Vista 或 Windows 7
    的情况下），右击开始菜单中的记事本，选择"以管理者身份运行"。用记事本打开
    hosts
    文件时，在"打开"对话框的"文件种类"中要选择"全部文件"，这样才能显示出
    hosts 文件。
    用记事本添加以下内容（阴影部分）并保存。IP
    地址部分要替换为刚才自己记录下的虚拟机的 IP 地址。
    > **hosts 文件的编辑范例**
        # localhost name resolution is handled within DNS itself.
        #     127.0.0.1       localhost
        #     ::1             localhost
        127.0.0.1       localhost
        192.168.71.128       example.jp       trap.example.com
    如此设置后，example.jp 和 trap.example.com 就都和虚拟机的 IP
    地址（本例为 192.168.126.128）绑定了。
    另外，有些防病毒软件可能会检测到 hosts
    文件被更改而阻止此操作。这种情况下需要解除防病毒软件的阻止。
-   **使用 ping 确认连接**
    修改完 hosts 文件后，打开 Windows 的命令提示符，输入 ping
    example.jp，即能通过 ping
    命令来确认网络连接（请先启动虚拟机）。如果不能连接成功，则可能为以下原因。
    -   启动虚拟机的过程中时选择了"我已复制该虚拟机"
    -   IP 地址错误
    -   hosts 文件中的网址错误
    -   编辑 hosts 文件时没有以管理者身份运行
    如果错选为"我已复制该虚拟机"，将虚拟机文件删除后重新解压 ZIP
    文件即可。而 IP 地址是否错误则可以从 ping 命令的执行结果中看出。
-   **Apache 与 PHP 的运行确认**
    通过 ping 确认完网络连接后，启动 Internet
    Explorer（IE）浏览器，在地址栏中输入 
    ，就会显示图 2-10 所示的页面。
    ![{%}](Image00010.jpg)