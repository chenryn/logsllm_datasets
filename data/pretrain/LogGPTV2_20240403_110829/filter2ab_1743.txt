### Title: Demystifying iOS Dual Booting at BlackHat Asia 2019

In this presentation, we will explore and demonstrate the methods for booting a custom firmware image on an iOS device. To provide a comprehensive understanding, we will delve into the secure iOS boot process, including the intricate details of low-level component verification and the loading and execution of processes during boot time.

iOS devices are known for their tight integration of software and hardware components to ensure system security. But how is this achieved in practice? We will address this question by focusing on one of these key integrations: the boot process of modern iOS devices.

The iOS boot process is a critical aspect of device security, as it ensures that each component can be trusted before it is utilized by the system. Each step in the boot process involves components that are cryptographically signed by Apple to verify their integrity and maintain the chain of trust. This chain includes the system bootloader, XNU kernel, kernel extensions, Secure Enclave Processor (SEP), Wi-Fi, and baseband firmware.

With a detailed understanding of the iOS boot process, we will then discuss how researchers can leverage this knowledge to create and load a custom iOS firmware image on a device. This includes the ability to run a custom XNU kernel and system disk image alongside the device's original iOS firmware.

By the end of the session, attendees will have a clear understanding of the complexities involved in the iOS boot process and the practical steps required to achieve dual booting with a custom firmware image.