100,000
100,000
100,000
50,000
10,000
10,000
5,000
1,000
500
500
100
100
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
Analysis Result
x
x
x
x
x
x
x z {
x
x {
x
x y {
x
z
z {
x
x
x
z
x
x
x
Table 4: Measurement and Analysis Results of 21 Companion Mobile Apps. ( x Standard diagnostic PID, y Non-diagnostic
CAN bus message, z Private command, { Firmware image of dongle)
Dongle Name
Type
Authentication
OBDLink MX
Oummit OBD2 Scanner
OBDLink MX+
TOPDON Auto Mate
OBDII Scanner TOPDON
TOPDON AutoMate Code Reader
Wi-Fi
Wi-Fi
Bluetooth
BLE
BLE
BLE
Password
Button
Button
Button
Button
Button
Table 5: Connection Layer Authentication on Dongles.
still leverage these private commands to launch attacks. In
summary, for all but one dongle, attackers can directly get ac-
cess to the CAN bus right after the connection is established.
The only dongle, Automatic Pro, has demonstrated a way to
implement authentication on application-layer. Speciﬁcally,
prior to the communication stage, it requires users to
manually enter a PIN code which is a random 6-digit length
string printed on the dongle. However, one can still break the
PIN code with a brute-force attack. Afterwards, it validates
the PIN and leverages it to create a cryptographic key for
communicating with the authorized user. When a message is
transferred, it must be encrypted by the key and sent through
the secure channel.
V2. 29 (37.66%) dongles can allow unauthorized access
even when the vehicle owner’s mobile device is connected.
For most dongles, they only allow one mobile device to
be connected at a time, which is expected since the most
popular usage for these dongles is to exclusively connect
with the companion app on the vehicle owner’s smartphone.
Surprisingly, we ﬁnd that some Wi-Fi dongles are conﬁgured
to allow multiple device connections and accesses. These
multiple connected devices are treated equally at
the
communication stage, which implies that an attacker can
attack these dongles even when the vehicle owner’s device
is connected. Among the 49 Wi-Fi dongles in our study, 29
(37.66%) of them are found to allow multiple device accesses.
Additionally, only 1 out of these 29 dongles has implemented
authentication, which means that over half (i.e., 28) of the
Wi-Fi dongles can be attacked even when the vehicle owner’s
smartphone is connected.
5.3.2 Communication Stage
V3. The majority (67.53%) of the dongles fails to ﬁlter out
undeﬁned CAN bus messages (known but not quantiﬁed
before [3]). At the communication stage, DONGLESCOPE
tried to send an undeﬁned CAN bus message which should
not be accepted by the dongle and delivered to the CAN bus.
However, our result reveals that 52 (67.53%) dongles fail to
ﬁlter out this undeﬁned CAN bus message, which implies that
they are vulnerable to undeﬁned CAN bus message injection.
An instance of such lack of ﬁlter has been discovered before
on a Bosch dongle that is not available on the market today [3],
and our study is the ﬁrst to measure the prevalence of such
vulnerability among a comprehensive set of dongles available
today. On the contrary, DONGLESCOPE conﬁrms that only
24 (31.17%) dongles (including 5 dongles that use private
commands) recognize the undeﬁned message and prevent it
from being delivered to the CAN bus. As for the remaining 1
dongle (i.e., Automatic Pro), our tool is unable to determine
whether it can ﬁlter the undeﬁned CAN bus message or not
due to the application-layer authentication.
We also discovered from the set of predeﬁned messages
that 2 dongles (i.e., Carista and Automatic Pro) also support
non-diagnostic capabilities in addition to diagnostic functions.
958    29th USENIX Security Symposium
USENIX Association
Dongle Name
Automatic Pro
BlueDriver Pro
HaulGauge OBD-II Connector
Innova 3211a Drive
DODYMPS OBD-II Scanner
OHP Forscan OBD2 Adapter
Type
BLE
BLE
BLE
BLE
BLE
Wi-Fi
Connection Auth.?
Implementation
Private Commands
No
No
No
No
No
No
PIN, Private commands
Private commands
Private commands
Private commands
Private commands
Private commands
IGN, VIN_STRING, DEVID, obd_protocol
LMIF0, LMIF1, ATIF1, LMH0
4 (checkHardwareVersion)
16557 (readVIN), -1895767379 (BootLoader)
AA000B5000010001000A00005155
020000, 020300, 020400, 020600
Table 6: Application Layer Authentication and Private Commands on Dongles.
Dongle Name
Companion App
Vulnerable?
Automatic Pro
Carly WiFi GEN2
BlueDriver Pro OBDII
Innova 3211a Drive
Automatic
Carly for Toyota
BlueDriver
RepairSolutions
(cid:88)
(cid:88)
Firmware
Available?
(cid:88)
(cid:88)
(cid:88)
Table 7: OTA Firmware Subverting and Extraction Vuln.
For example, Carista provides remote control functions such
as disable remote door locking, removing seat belt warning,
and modifying parking sensor, which affects the control be-
haviour of an automobile. Since this dongle also does not have
any authentication, an attacker is able to extract these valid
non-diagnostic CAN bus messages by reverse engineering
the companion app and then inject them to launch attack. The
other dongle, Automatic Pro, allows tracking of current GPS
location with a private command gps_location. Fortunately,
this dongle has implemented authentication on application
layer so that nearby attackers cannot easily inject the corre-
sponding private commands.
V4. Some (3) dongles are vulnerable to over-the-air
ﬁrmware subverting or extraction. In addition to prede-
ﬁned messages of the OBD-II dongles, we surprisingly found
that the outputs of the predeﬁned message generation step
also include large blocks of data that are apparently not
CAN bus messages. Based on heuristic clues such as key-
words “ﬁrmware” and “upgrade”, we found that these are
the ﬁrmware images of the OBD-II dongles. Since OBD-II
dongles usually do not have cellular network, they rely on the
companion mobile apps as gateway to download and trans-
fer their ﬁrmware packet over the air to achieve upgrade. In
general, a dongle needs to enter a BootLoader mode prior to
the upgrade, which is done by sending a speciﬁc command
from the app to the dongle, such as AT∧ and AT@BL. Next,
the companion app transfers the ﬁrmware packet via wireless
network channel to the dongle. Since the upgrade process is
initiated by the mobile app, it is possible for an attacker to
spoof the dongle and subvert its ﬁrmware by transferring a
malicious one. As indicated in Table 7, we discover that 4
OBD-II dongles have ﬁrmware upgrade capability. Therefore,
we further investigated their upgrade process by manually
analyzing their companion apps. Our analysis reveals that 3
(75%) of the 4 dongles are vulnerable to ﬁrmware subverting
or extraction.
Since subverting the ﬁrmware of a dongle requires one
to ﬁrst have access to it, we eliminate those that have au-
thentication. Among the 4 dongles, only Automatic Pro has
application-layer authentication and thus is not subjective to
the attack. For the rest 3 dongles without any authentication,
their ﬁrmware is at risk of being subverted. In order to subvert
the dongle’s ﬁrmware, it is necessary to make sure that there
is no integrity check on the dongle side. Therefore, we tried
to perform the attack by injecting a modiﬁed ﬁrmware, in
which we found that the upgrade process of Carly and Innova
accepts arbitrary ﬁrmware image. Though the Innova dongle
veriﬁes integrity by validating the checksum appended after
each message, the algorithm of calculating the checksum can
be easily obtained through analyzing the companion apps,
which thus enables an attacker to construct a spoofed upgrade
message to achieve the attack.
Furthermore, the ﬁrmware images of three dongles can
even be extracted from their companion apps through reverse
engineering. For instance, the BlueDriver app exposes the
download URL and authentication credentials of its ﬁrmware
image. Thus, we successfully downloaded its ﬁrmware images
of all available versions. Even worse, some apps directly hard-
code the ﬁrmware images in the app code, including Carly for
Toyota and RepairSolutions. Having the access to the dongle
ﬁrmware, an attacker is then able to discover more vulnera-
bilities with them such as whether containing any backdoors.
5.3.3 Broadcast Stage
V5. Vulnerability status of nearly half (42.86%) of the
dongles can be uniquely identiﬁed using broadcast
information. Having identiﬁed the various vulnerabilities
for exploitation, we then analyze whether it is possible to
ﬁngerprint the vulnerabilities of these OBD-II dongles in
the broadcast stage. This can help an attacker pinpoint which
dongles to attack and then attack correspondingly, and such
ﬁngerprinting can signiﬁcantly improve the attack success
rate. As shown in Table 8, we aggregate all the dongles
by their connection name and show those with the same
vulnerability status. In total, we ﬁnd that using such broadcast
information, 33 (42.86%) dongles can be uniquely ﬁnger-
printed for their vulnerability status. Among these 33 dongles,
each of them contains at least one vulnerability, which indi-
cates that they can be uniquely ﬁngerprinted in the broadcast
stage and exploited with the vulnerabilities discovered earlier
USENIX Association
29th USENIX Security Symposium    959
Connection Name
Type
# Dongle
V-Link
FastLink M2
OBDBLE
V-checker
OBDII SCANNER
OBDLink MX
Carly Adapter
BlueDriver 2.39-B350
OBDII
OBDLink MX+ 38611
7Q-Automatic Pro (LE)
Carista
DODYMPS OBD2
Dongle
FIXD
HGC
iOBD2 mini
IOS-Vlink
JUTA OBD II IOS
Kiwi 3A
TOPDON_760110
Viecar
Wi-Fi
BLE
BLE
BLE
Wi-Fi
Wi-Fi
Wi-Fi
Bluetooth
Bluetooth
Bluetooth
BLE
BLE
BLE
BLE
BLE
BLE
BLE
BLE
BLE
BLE
BLE
BLE
4
4
3
2
1
1
1
1
1
1
1
1
1
1
1
1
1
3
1
1
1
1
Vulnerability
V2
(cid:88)
(cid:88)
V1.2
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)