title:Understanding the Growth and Security Considerations of ECS
author:Athanasios Kountouras and
Panagiotis Kintis and
Athanasios Avgetidis and
Thomas Papastergiou and
Charles Lever and
Michalis Polychronakis and
Manos Antonakakis
Understanding the Growth and Security Considerations of ECS
A Longitudinal Study Exploring the Deployment of a DNS Extension
Athanasios Kountouras∗, Panagiotis Kintis∗, Athanasios Avgetidis∗,
Thomas Papastergiou∗, Chaz Lever∗,
Michalis Polychronakis†, Manos Antonakakis∗
∗Georgia Institute of Technology,†Stony Brook University
{kountouras, kintis, avgetidis, tpapastergiou, chazlever, manos}@gatech.edu, PI:EMAIL
Abstract—The Domain Name System (DNS) is fundamental to
communication on the Internet. Therefore, any proposed changes
or extensions to DNS can have profound consequences on network
communications. In this paper, we explore the implications of
a recent extension to DNS called EDNS Client Subnet (ECS).
This extension extends the visibility of client information to more
domain operators by providing a preﬁx of a client’s IP address
to DNS nameservers above the recursive nameserver. This raises
numerous questions about the impact of such changes on network
communications that rely on DNS.
In this paper, we present the results of a longitudinal study
that measures the deployment of ECS using several DNS vantage
points. We show that, despite being an optional extension, ECS
has seen steady adoption over time—even for sites that do not
beneﬁt from its use. Additionally, we observe that the client
subnet provided by ECS may provide less privacy than originally
thought, with most subnets corresponding to a /24 CIDR or
smaller. Lastly, we observe several positive and negative con-
sequences resulting from the introduction of DNS. For example,
DNS can help aid security efforts when analyzing DNS data above
the recursive due to the addition of client network information.
However,
to
exacerbate existing security issues like DNS leakage. Ultimately,
this paper discusses how small changes to fundamental protocols
can result in unintended consequences that can be both positive
and negative.
information has the potential
that same client
I.
INTRODUCTION
The Domain Name System (DNS) is a fundamental net-
work protocol on the Internet. Its most visible function is
enabling humans to remember simple names to reach network
resources. However, it is also used by countless applications
and is critical to the operation of many services on the Internet.
In fact, attacks targeting DNS infrastructure [8] have been
responsible for taking down large portions of the Internet.
However, it is not just users, benign applications, and ser-
vices that rely on DNS for communication. DNS is used
by malicious actors to provide resilient communication for
malware [23], [24], and security researchers frequently use
DNS to track malicious abuse on the Internet [9], [10], [21],
[28], [31]. Due to its importance to communication in IP based
networks, proposed changes or extensions to DNS should be
well understood.
Network and Distributed Systems Security (NDSS) Symposium 2021
21-25  February  2021, Virtual  
ISBN  1-891562-66-5
https://dx.doi.org/10.14722/ndss.2021.24343
www.ndss-symposium.org
This paper studies the deployment of a DNS extension
called EDNS Client Subnet (ECS) [15], which was originally
proposed as an experimental Internet draft
in 2011 [14].
ECS changes how client IP information is shared with DNS
infrastructure in order to optimize Content Delivery Network
(CDN) selection. It provides more granular client information
to authoritative DNS servers that reveals information about
the underlying client making a request. This entire process is
transparent to end users who receive no indication whether
ECS will be used by their recursive DNS server. ECS is
currently “on by default” for all trafﬁc through many of the
largest open DNS recursive servers. To date, this extension
has been adopted by many of the largest open DNS providers
on the Internet—including Google Public DNS, OpenDNS,
Quad9, and NextDNS [2]–[5].
indirect
limited,
information about
The result of this widespread adoption is that DNS client
information is now shared across many networks on the Inter-
net that previously did not have access to such information.
This is potentially problematic because DNS sometimes leaks
information about user behavior. For example, the automated
DNS behavior of some applications (e.g., web browsers) can
reveal
local users [32].
For this reason, it is recommended that DNS prefetching is
disabled for sensitive applications. In addition, DNS attacks on
Tor anonymity have been demonstrated, but are either patched
or are based on the non-trivial capability of monitoring the
recursive footprint used by most Tor nodes [20]. Furthermore,
information leaks through anonymity networks have long been
addressed by SOCKS tunneling of UDP queries [30]. Beyond
these potential security issues, ECS changes the privacy ex-
pectations traditionally associated with the use of a shared
recursive DNS server. Therefore, it is important that poten-
tially negative repercussions of ECS are studied and better
understood.
Beyond the negative side effects brieﬂy discussed above,
we note that ECS does introduce beneﬁts to both end users and
security researchers. There are numerous open DNS providers
that offer extra features built on top of DNS such as content
ﬁltering, ad blocking, malware protection, and more [3], [5].
These features may be attractive to end users looking to protect
their networks. However, prior to ECS, such users may have
incurred a performance penalty for switching DNS providers
due to CDN optimization based on proximity to a client’s
recursive DNS server rather than the client’s actual location.
Thus, ECS allows users greater choice of DNS providers with-
out incurring a performance penalty. Additionally, ECS can
allow security researchers to gain greater insights into potential
infections above the recursive DNS server. This is particularly
valuable when monitoring DNS queries at the authoritative
DNS server, which sees all non-cached queries for a zone.
Additionally, ECS provides added beneﬁt for organizations
running DNS sinkholes. By providing client level visibility,
DNS sinkholes can be used to estimate infected populations
and provide different responses to clients in different networks.
This extra level of visibility can be used to generate insights
that were previously impossible before introduction of ECS.
The goal of this study is to understand the real-world adop-
tion of ECS since its inception. It seeks to provide a discussion
of the potential security beneﬁts and pitfalls introduced by
ECS. It accomplishes these goals by providing a longitudinal
study of ECS deployment using DNS data collected from
several DNS vantage points both before and after its ofﬁcial
adoption in 2016. The outcomes of our investigation can be
summarized in the following contributions:
• We measure the ECS adoption from the perspective of
three different DNS authoritative name servers to show
how the protocol has grown both before and after its
ofﬁcial adoption in 2016. We show that, despite being an
optional extension, ECS has seen steady adoption over
the years with numerous DNS providers now supporting
it.
• We show how ECS reveals more information about the
clients making DNS requests and discuss the effects of
this increased visibility. We discuss how it may provide
more freedom to end users and aid security practitioners.
At the same time, we discuss how it potentially exacer-
bates existing threats (i.e., DNS leaks).
• We examine the practical beneﬁt provided by ECS to end
users, and using a combination of Alexa and passive DNS
data, we show that the vast majority of highly ranked
ECS-enabled domains do not beneﬁt from the use of ECS.
Thus, most ECS-enabled domains appear to exacerbate
existing privacy problems related to DNS without any
beneﬁt to the end user.
The following is a blueprint to help navigate our ﬁndings.
We discuss the necessary background to understand both DNS
and the changes introduced by ECS in Section II. This is
followed by a description of the datasets and methodology used
to perform our study in Section III. In Section IV-A, we discuss
how the default conﬁguration of ECS may introduce some
unintended privacy consequences—which have been noted,
discussed, and partially addressed in various iterations of the
ECS proposal. Next, we show that ECS has seen steady
adoption over time, despite being an optional extension, in Sec-
tion IV-B. Then, in Section IV-C, we discuss how the client-
level visibility provided by ECS to authoritative DNS networks
is extremely granular, with most client preﬁxes corresponding
to a /24 or smaller network CIDR. This effectively enables
client level tracking using ECS. In Section IV-D, we study
the practical impact of ECS on end users and show that most
of the domains in the Alexa top million do not beneﬁt from
ECS. Finally, Section IV-E discusses how ECS leaks client
level information to every AS on-path between a recursive
DNS server and the authoritative DNS server—exacerbating
existing DNS related privacy concerns. A summary of our
ﬁndings and their impact on Internet communications can be
found in Section VII.
2
Fig. 1: Illustration of the iterative name resolution process. In the
diagram, the recursive is labeled as RDNS, and the authority is
referred to as Auth.
In summary, DNS is a fundamental protocol for communi-
cation on the Internet. This paper studies the deployment of a
DNS extension called ECS, which introduces client informa-
tion into communication above the recursive DNS server. The
effects of this introduction extend beyond its original goal of
making the Internet faster by helping optimize CDN selection
at the DNS level. Through a longitudinal study using several
DNS vantage points, we study both the positive and negative
impacts of ECS on DNS communication.
II. BACKGROUND
The Domain Name System (DNS) [35], [36] translates
memorable names into IP addresses. Figure 1 shows the steps
involved in resolving a domain name. In step (1), a stub
resolver, located at the client, sends a request to a recursive
DNS server, often simply referred to as the “recursive.” If
a cached answer is not available,
the recursive iteratively
queries other servers in the DNS hierarchy until it reaches the
authoritative DNS server (referred to as authority throughout
the paper) that can answer the current request, as seen in
steps (2) to (7). Finally, in step (8), the recursive forwards the
response from the authority to the stub resolver and caches
the response for a period of time dictated by the response’s
time-to-live ﬁeld.
The resolution process can be conceptually split into two
parts. The ﬁrst is the communication between the stub resolver
(client) and the recursive, seen in steps (1) and (8), which is
said to occur below the recursive. The second is the iterative
resolution process shown in steps (2) to (7), which is said to
occur above the recursive. Below, we discuss how the adoption
of ECS enables entities above the recursive to acquire client-
speciﬁc information that was not available to them before.
A. Evolution of DNS with ECS
EDNS Client Subnet (ECS) [15], which has been adopted
by most large open recursives [19], [38], does not change
the resolution process below the recursive but augments the
information exchanged between recursives and authorities.
Without ECS, only communication below the recursive (step 1)
reveals the IP address of the clients. Thus, authorities receive
no information about who is performing a query other than the
IP address of the recursive. For example, as shown in Figure 2,
only the IP address of the recursive DNS (RDNS) server is
revealed to entities outside the local autonomous system (AS).
RDNSRootTLDAuthClient12374568be determined using the most detailed network information
available to the recursive, but by default, it includes the ﬁrst
three octets of a client’s IP address. An authority may include
in its response a scope netmask that can guide a recursive’s
future choice of source netmask. The inclusion of a scope
netmask by the authority is one way to signal that the authority
supports ECS. The scope netmask indicates the authority’s
desired source netmask length, which should correspond to
the minimum length that will allow for an optimal answer
with respect to network performance. The recursive resolver
also uses the scope netmask to help with caching an answer;
based on the documentation, the answer from an ECS query
with a scope netmask indicates the scope under which the
answer is valid, and the recursive can proceed with caching
the answer for the clients under the speciﬁed netmask. The
caching behavior and the potential issues that can arise from
it are further discussed in [7]. Finally, the discovery process
of ECS authorities by the resolvers varies but usually relies
on the recursive resolver sending ECS enabled queries and
observing if the authority responds with a scope netmask, in
most cases. Some operators repeat the discovery process over
time, while other recursives do not keep a list of authorities
that support ECS and instead send ECS enabled queries to all
the authorities.
B. Implications of ECS Misuse
Although one might think that ECS information does not
introduce any additional privacy leakage, as the actual HTTP
trafﬁc will eventually reveal a user’s IP address to the web
server (and all entities along that path). This is not true on the
modern web for two main reasons:
1) The recursive DNS server is often situated in a different
AS than the user.
2) The authoritative DNS server is often situated in a differ-
ent AS than the web site.
Consequently, when resolving a domain name, there is
no guarantee (and should be no assumption) that the same
organization will manage both the DNS server and the web
server for example. ECS introduces new ways in which the
added user information can be exposed to parties that would
normally not have visibility in the traditional DNS resolution
case. When using an ECS enabled cloud based recursive, the
DNS resolution request could have to follow a different path
between the recursive and the authority (red line Figure 3).
For example, a user located in a European country using an
open cloud-based DNS resolver could have their DNS packet
information leave the conﬁnes of their ISP and traverse outside
third party networks on the way to the DNS resolver. This is
a case of below the recursive information leakage and applies
to all DNS queries both before and after ECS adoption made
to recursive resolvers outside the user’s ISP network. On the
other hand, after the cloud-based DNS recursive accepts the
query if the recursive support ECS all subsequent hops from
the recursive to ECS supporting authorities would include the