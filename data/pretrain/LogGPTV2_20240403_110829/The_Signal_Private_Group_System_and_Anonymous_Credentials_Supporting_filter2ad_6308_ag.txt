z)y4W (U Gx0
V GV
y1 ··· M4
zy1 ··· G4
y4W U x0+tx1)G1
GV
zy1 ··· Gy4
zy4Gx0
zx0Gx1
= I z
zx1
z
z
z
(M1Gy1
=
=
=
(M1
Gy1
z)x0(U tGx1
z)x1
zy4Gx1
zx1Gx0
zx0
and it can be checked similarly that this also holds with more than four attributes.
Unforgeability Intuitively, credential unforgeability means that an adversary cannot
create a valid proof for a statement not satisﬁed by the credentials they have been is-
sued. This follows from the unforgeability of the MAC (proven in Section 7.3), and the
extractability of the proof system.
If the adversary outputs a proof based on a MAC with attributes that were not output
by Issue, then we can extract a forgery for the MAC scheme.
For example, referring the to the proof of knowledge used for authentication in Sec-
tion 5.12, note that from a successful prover we can extract (z, sk), then use these to
compute (t, U, V ), which is a valid MAC on the attributes (M1, M2, m3) since it satisﬁes
the veriﬁcation equation (assured by the proof statement Z = I z). If the MAC was created
by the issuer, authentication should succeed. If not, and the MAC is new, it is a forgery
and the MAC scheme is broken.
Anonymity This requires that the proofs output when presenting a credential reveal only
the statement being proven. Below we sketch a proof that the authentication proof is zero-
knowledge, and this proof includes the statements common to any credential presentation.
To show that the proof of Section 5.12 is zero-knowledge, we ﬁrst need to show that the
commitments are hiding (which is nontrivial since they all share the same random value
z). Note that in the random oracle model, the bases Gyi are a random set, that are then
37
z is a PRF output under the DDH assumption. Therefore,
input to the wPRF fz, so Gyi
the commitments (Cy1, . . . , Cy4, Cx0, Cx1, CV ) are hiding, and they can be simulated with
random group elements. Since the ciphertext (EA1, EA2) is CPA secure, it can also be
simulated with random values, and since the proof πA is zero-knowledge, a simulator exists
to simulate it.
Blind Issuance This property requires that blind issuance be a secure two-party proto-
col, between the user, who has the blind attributes as private input, and the issuer, who has
the issuer secret key as private input. Our blind issuance protocol based on homomorphic
Elgamal encryption is unchanged from [CMZ14], and security follows from CPA security of
Elgamal (implied by DDH) and the privacy and extractability of the zero-knowledge proof
system. Note that non-blind issuance is the special case where no attributes are hidden.
Key-parameter consistency This property ensures that an issuer cannot use diﬀerent
secret keys with diﬀerent users, in order to link an instance of BlindIssue with an instance
of Show.
We consider two cases, starting with the key consistency of (w, w(cid:48)). From an issuer that
creates two proofs πI with diﬀerent (w, w(cid:48)), we can extract two openings to the Pedersen
commitment CW = GW
, breaking the binding property. Given such a malicious
issuer, we can construct an algorithm for the DLP in G. Given a DLP instance Y = Gx,
set GW = Y and GW (cid:48) = Gr1. Then given two distinct openings of the commitment CW ,
and knowledge of r1, we can solve for x.
wGW (cid:48) w(cid:48)
Now consider the secrets used in the I value of iparams. Similarly, the product
x1 is a binding commitment under the DLP assumption in G, and
y1 . . . Gyn
Gy1
by the same argument no malicious issuer can prove knowledge of distinct openings if the
DLP is hard in G.
ynGx0
x0Gx1
7.5 System Security
When considering the security and privacy properties of the system as a whole, there
are no existing deﬁnitions in the literature we can leverage.
In Appendix A, we give a
deﬁnition of a secure private group system as an ideal functionality. The functionality,
denoted F, is a trusted party that implements the system, and interacts with users and
the server. Specifying F in this way concisely deﬁnes the behavior our protocol aims to
achieve, including any leakage or misbehaviors that may be possible when the server or
users are malicious.
In terms of security, when the server is honest we must ensure the privacy of honest
users against attacks by malicious users, for example, groups of honest users should have
privacy from malicious users.
When the server is malicious, denoted S∗, there are two cases, depending on whether a
group contains a malicious user. If so, then between the malicious user and S∗ they know
38
all secrets (ServerSecretP arams and GroupSecretP arams) for that group, and can learn
all group members and modify the group arbitrarily; no security is possible. The more
interesting case is when the malicious server manages the state for a group where all users
are honest. Here S∗ can deviate from the protocol in many ways (e.g., delete members from
a group, reject requests to add a new user, etc.) but none of these deviations should violate
privacy. Informally: the group should remain conﬁdential if all members are honest. Some
amount of integrity is possible as well: since S∗ does not know the group key, it cannot
add arbitrary users to a group.
Appendix A then provides a sketch of a simulation-based security proof, to provide
some assurance that our design implements F securely, and to motivate some of the security
properties we require from our new encryption and credentials.
8 Additional Related Work
Structure preserving signatures [AFG+16] are similar to our new MAC in the sense that
it’s possible to sign group elements. However, known constructions require a group with a
pairing, making them signiﬁcantly more expensive than our MAC.
Bellare et al. [BPR14] also study deterministic symmetric-key encryption with unique
ciphertexts, in the context of preventing malicious implementations of ciphers from leaking
information in the context of internet protocols. Our deﬁnition of unique ciphertexts
matches theirs, but our constructions are algebraic, and are therefore quite diﬀerent.
There are alternative constructions of algebraic MACs[ZYHW16, BBDT16, CDDH19],
inspired by pairing-based signatures, with BB-MAC being most common (derived from
Boneh-Boyen signatures). BB-MAC also works in a cyclic group G, and requires that the
strong Diﬃe-Hellman problem be hard in G. While BB-MAC (and SDH-based variants)
may be more eﬃcient in terms of the number of group operations, the comparison does
account for the larger groups required to provide concrete security [BG04, Che06, JY09].
For example, Zhang et al. [ZYHW16] design a system using BB-MAC for anonymous
password-based authentication in the context of TLS. While the implementation claims
to target 128-bit security, is uses the elliptic curve nistp256r1 [oST13], which does not
provide 128 bits of security for the SDH assumption [BG04, Che06, JY09]. The target
128-bit security could be achieved by moving up to the nistp384r1 curve, which has 1.5x
larger group elements and signiﬁcantly higher computational costs (e.g., the nistp256r1
implementation in OpenSSL 1.1.1 is about 18x faster than the nistp384r1 implementation).
The choice of concrete parameters in [CDDH19] has similar issues. Since using SDH-based
MACs would require using a diﬀerent, larger curve than what is currently deployed in
Signal, our design consciously avoids SDH-based MACs.
Barki et al. observe that if BB-MAC is instantiated in a group with a pairing, then the
MAC can become a public-key signature scheme if the veriﬁer uses parings. Pointcheval
and Sanders [PS16] do the same for MACGGM. The drawback of enabling public veriﬁcation
39
is that groups with a pairing are generally less eﬃcient than the fastest cyclic groups from
elliptic curves.
Concrete performance comparisons of KVAC systems based on these MACs to the
new system we present here are diﬃcult, since they do not allow group elements as at-
tributes, and so do not support our encryption scheme. We did experiment with MACGGM
from [CMZ14], where we had to divide plaintexts into small scalars (e.g., 16 bits), in or-
der to encrypt them using an exponential Elgamal variant, that required solving small
discrete logs during decryption. For example, instead of encoding a 16-byte UUID into a
single 32-byte group element, giving a 64-byte ciphertext, our prototype had eight group
elements, and 288-byte ciphertexts. Decryption, credential issuance and presentation were
also signiﬁcantly slower.
Group signatures [Cv91] and ring signatures [RST01] allow users to form a group, such
that any member can anonymously create a signature that veriﬁes with a group public key.
Using group signatures would allow a user to authenticate as a group member, without
revealing which ciphertext encrypts their UID (though this would prevent the server from
easily implementing access control). However, group signatures are based on relatively
expensive public-key signatures, and are often more complex than our proposal. Further,
we do not require the notion of a group manager, who can de-anonymize signers.
There is a growing list of systems that use credentials based on algebraic MACs
for authentication. There are designs for privacy-preserving federated identity manage-
ment [IHD16], anonymous payment channels [GM17], electronic voting [ABBT16], private
e-cash [BBD+16], censorship resistance [LdV17] and smart card authentication [CDDH19].
The NEXTLEAP project [Hal17] considers building a fully decentralized PKI for use with
the Signal protocol, while our approach increases centralization while maintaining privacy.
9 Future Work
The private group system has been implemented, and deployment is underway. Here we
discuss possible improvements to the security analysis, or extensions.
Some aspects of our work could beneﬁt from formal methods. For instance, the encryp-
tion and MAC schemes may be within reach of automated analysis in the generic group
model, as in [ABS16].
In the security analysis of our new MAC, we assume that MACGGM is uf-cma secure,
which is only known to be true in the generic group model. Ongoing work is developing
a new proof of Theorem 14 assuming instead that DDH is hard in G (also in the random
oracle model). To make the proof work, each MAC must have one of the attributes be a
random group element. Thus for a small decrease in performance, the GGM assumption
can be replaced with the weaker DDH assumption.
While we deﬁne security of the system as a whole in a formal way with an ideal func-
tionality, our security proof is informal, being only a sketch. Making this proof rigorous is
40
another possible improvement.
Further analysis on encoding data into group elements, and analysis of our encryp-
tion scheme in the deterministic authenticated encryption framework of [RS06], might be
productive.
Our security analysis that our system satisﬁes the private groups functionality deﬁned
by the ideal functionality in the case of malicious servers also requires the generic group
model assumption, in order to allow a type of selective opening property of the encryption.
Future work could investigate this issue with the goal of removing this assumption.
In Section 1.1 we noted some security properties that might be strengthened.
Acknowledgements We extend our thanks to Dan Boneh, Isis Lovecruft, Henry de
Valence, Bas Westerbaan, Bram Westerbaan, Jan Camenisch, and the Signal team for
helpful discussions. We also thank Cathie Yun for help with the sequence diagram.
References
[ABBT16] Roberto Ara´ujo, Amira Barki, Solenn Brunet, and Jacques Traor´e. Remote
electronic voting can be eﬃcient, veriﬁable and coercion-resistant. In Jeremy
Clark, Sarah Meiklejohn, Peter Y. A. Ryan, Dan S. Wallach, Michael Brenner,
and Kurt Rohloﬀ, editors, FC 2016 Workshops, volume 9604 of LNCS, pages
224–232. Springer, Heidelberg, February 2016.
[ABS16]
Miguel Ambrona, Gilles Barthe, and Benedikt Schmidt. Automated un-
bounded analysis of cryptographic constructions in the generic group model.
In Marc Fischlin and Jean-S´ebastien Coron, editors, EUROCRYPT 2016,
Part II, volume 9666 of LNCS, pages 822–851. Springer, Heidelberg, May
2016.
[AFG+16] Masayuki Abe, Georg Fuchsbauer, Jens Groth, Kristiyan Haralambiev, and
Miyako Ohkubo. Structure-preserving signatures and commitments to group
elements. Journal of Cryptology, 29(2):363–421, April 2016.
[BBD+16] Amira Barki, Solenn Brunet, Nicolas Desmoulins, S´ebastien Gambs, Sa¨ıd
Gharout, and Jacques Traor´e. Private eCash in practice (short paper).
In
Jens Grossklags and Bart Preneel, editors, FC 2016, volume 9603 of LNCS,
pages 99–109. Springer, Heidelberg, February 2016.
[BBDT16] Amira Barki, Solenn Brunet, Nicolas Desmoulins, and Jacques Traor´e. Im-
proved algebraic MACs and practical keyed-veriﬁcation anonymous creden-
tials. In Roberto Avanzi and Howard M. Heys, editors, SAC 2016, volume
10532 of LNCS, pages 360–380. Springer, Heidelberg, August 2016.
41
[BDJR97] Mihir Bellare, Anand Desai, Eric Jokipii, and Phillip Rogaway. A concrete
security treatment of symmetric encryption. In 38th FOCS, pages 394–403.
IEEE Computer Society Press, October 1997.
[Ber05]
[Ber06]
[BG04]
[BL13]
Daniel J. Bernstein. The poly1305-AES message-authentication code. In Henri
Gilbert and Helena Handschuh, editors, FSE 2005, volume 3557 of LNCS,
pages 32–49. Springer, Heidelberg, February 2005.
Daniel J. Bernstein. Curve25519: New Diﬃe-Hellman speed records. In Moti
Yung, Yevgeniy Dodis, Aggelos Kiayias, and Tal Malkin, editors, PKC 2006,
volume 3958 of LNCS, pages 207–228. Springer, Heidelberg, April 2006.
Daniel R. L. Brown and Robert P. Gallant. The static Diﬃe-Hellman problem.
Cryptology ePrint Archive, Report 2004/306, 2004. http://eprint.iacr.
org/2004/306.
Foteini Baldimtsi and Anna Lysyanskaya. Anonymous credentials light. In
Ahmad-Reza Sadeghi, Virgil D. Gligor, and Moti Yung, editors, ACM CCS
2013, pages 1087–1098. ACM Press, November 2013.
[BPR14] Mihir Bellare, Kenneth G. Paterson, and Phillip Rogaway. Security of sym-
metric encryption against mass surveillance. In Juan A. Garay and Rosario
Gennaro, editors, CRYPTO 2014, Part I, volume 8616 of LNCS, pages 1–19.
Springer, Heidelberg, August 2014.
[BS20]
[CD00]
Dan Boneh and Victor Shoup. A graduate course in applied cryptography,
2020. Available online https://crypto.stanford.edu/~dabo/cryptobook/.
Jan Camenisch and Ivan Damg˚ard. Veriﬁable encryption, group encryption,
and their applications to separable group signatures and signature sharing
schemes. In Tatsuaki Okamoto, editor, ASIACRYPT 2000, volume 1976 of
LNCS, pages 331–345. Springer, Heidelberg, December 2000.
[CDDH19] Jan Camenisch, Manu Drijvers, Petr Dzurenda, and Jan Hajny. Fast keyed-
veriﬁcation anonymous credentials on standard smart cards. Proceedings of
ICT Systems Security and Privacy Protection, 34th IFIP International Con-
ference, 2019.
[Cha85]
[Che06]
David Chaum. Security without identiﬁcation: Transaction systems to make
big brother obsolete. Communications of the ACM, 28(10):1030–1044, 1985.
Jung Hee Cheon. Security analysis of the strong Diﬃe-Hellman problem. In
Serge Vaudenay, editor, EUROCRYPT 2006, volume 4004 of LNCS, pages