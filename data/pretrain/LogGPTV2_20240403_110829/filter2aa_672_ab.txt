                  |                           *diagram*
   ______________[ ]__
  |-        ||        |=-                         
  |-        ||  F T   |=-
  |-        ||  M U   |=-
P |-        ||  1 N   |=- 
C |-        ||  2 E   |=-                 
I |-        ||  1 R   |=-                  
  |-        ||  6     |=-                           1  _______  20
B |         ||________|=- --------> MPX  --->  MUXIN -|.  U   |-
u |-                  | pin 25                       -|       |-
s |-                  | AF sound output              -|   T   |-
  |-                  |                              -|   D   |-
  |-                  |                              -|   A   |-
  |-                  |                              -|   7   |-
  |-                  |                              -|   3   |- QUAL______
  |-                  |                              -|   3   |- DATA____  |
  |-                  |                              -|   0   |- CLOCK_  | |
  |___________________|                              -|_______|-       | | V
                                                   10          11      | V |
        _______________________________________________________________V | |
       |      ___________________________________________________________| |
       |  ___|_____________________________________________________________|
       | |   |
       | |   |           1  _______  18
       V |   V          x -|.  u   |- -> data out (to rs232)______________
       | V   |          x -|       |- -> rts  out (to rs232)____________  |
       | |  _|          x -|   1   |-  -|   6   |- -> OSC2 / CLKOUT                  | V
       | | | Vss (gnd) -> -|   F   |-  -|   8   |- x                                 | |
       | |_______ QUAL -> -|   4   |- x                                 | |
       |________ CLOCK -> -|       |- x                                 | |
                        x -|_______|- x                                 | |
                         9           10                                 | |
                                       ______________________________   | |
    Serial Port                       |            1  _______  16    |  | |
   (DB9 connector)                    |             -|.  U   |-      ^  | | 
              ______________          |             -|       |-      |  | |
             | RX - pin2    |         |             -|   R   |- RTS _|  | |
         ____V________      |         |             -|   S   |-         V |
        |  . o . . .  |     |         |             -|   2   |-         | V 
         \  . o . .  /      |         |             -|   3   |- 
;                Daniele Bianco 
;
; Permission to use, copy, modify, and distribute this software for any
; purpose with or without fee is hereby granted, provided that the above
; copyright notice and this permission notice appear in all copies.
;
; THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
; WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
; MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
; ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
; WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
; ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
; OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
;
; Pin diagram:   
;
;                   1  _______  18
;                  x -|.  U   |- -> DATA out (to RS232)
;                  x -|       |- -> RTS  out (to RS232)
;                  x -|   1   |-  -|   6   |- -> OSC2 / CLKOUT
;       Vss (gnd) -> -|   F   |-  -|   8   |- x   
;            QUAL -> -|   4   |- x
;           CLOCK -> -|       |- x
;                  x -|_______|- x
;                   9           10 
;
; Connection description:
; 
; pin 4 : MCLR          (it must be connected to Vdd through a resistor
;                        to prevent PIC reset - 10K is a good resistor)
; pin 5 : Vss           (directly connected to gnd)
;
; pin 6 : DATA  input   (directly connected to RDS demodulator DATA  out)
; pin 7 : QUAL  input   (directly connected to RDS demodulator QUAL  out)
; pin 8 : CLOCK input   (directly connected to RDS demodulator CLOCK out)
;
; pin 14: Vdd           (directly connected to +5V)
; pin 15: OSC2 / CLKOUT (connected to an 2.4576 MHz oscillator crystal* )
; pin 16: OSC1 / CLKIN  (connected to an 2.4576 MHz oscillator crystal* )
; 
; pin 17: RTS  output   (RS232 - ''RTS'' pin 7 on DB9 connector** )
; pin 18: DATA output   (RS232 - ''RX''  pin 2 on DB9 connector** )
; 
; pin 1,2,3,9,10,11,12,13: unused
; 
; *)
; We can connect the oscillator crystal to the PIC using this simple 
; circuit:
;               
;                C1 (15-33 pF)
;              ____||____ ______ OSC1 / CLKIN  
;             |    ||    |     
;             |         ___
;      gnd ---|          =  XTAL (2.4576 MHz)
;             |         ---
;             |____||____|______ 
;                  ||            OSC2 / CLKOUT
;                C2 (15-33 pF)
; **) 
; We have to convert signals TTL  RS232 before we send/receive them 
; to/from the serial port. 
; Serial terminal configuration:
; 8-N-2 (8 data bits - No parity - 2 stop bits)
;
; HARDWARE CONF -----------------------
    PROCESSOR    16f84
    RADIX        DEC
    INCLUDE      "p16f84.inc"
    ERRORLEVEL   -302                  ; suppress warnings for bank1
    __CONFIG 1111111110001b            ; Code Protection  disabled
                                       ; Power Up Timer    enabled
                                       ; WatchDog Timer   disabled
                                       ; Oscillator type        XT
; -------------------------------------
; DEFINE ------------------------------
#define    Bank0     bcf  STATUS, RP0  ; activates bank 0
#define    Bank1     bsf  STATUS, RP0  ; activates bank 1
#define    Send_0    bcf     PORTA, 1  ; send 0 to RS232 RX
#define    Send_1    bsf     PORTA, 1  ; send 1 to RS232 RX
#define    Skip_if_C btfss  STATUS, C  ; skip if C FLAG is set
#define    RTS               PORTA, 0  ; RTS   pin RA0
#define    RX                PORTA, 1  ; RX    pin RA1
#define    DATA              PORTB, 0  ; DATA  pin RB0
#define    QUAL              PORTB, 1  ; QUAL  pin RB1
#define    CLOCK             PORTB, 2  ; CLOCK pin RB2
RS232_data     equ               0x0C  ; char to transmit to RS232
BIT_counter    equ               0x0D  ; n. of bits to transmit to RS232
RAW_data       equ               0x0E  ; RAW data (from RDS demodulator)
dummy_counter  equ               0x0F  ; dummy counter... used for delays
; -------------------------------------
; BEGIN PROGRAM CODE ------------------
    ORG    000h
InitPort
    Bank1                              ; select bank 1
    movlw  00000000b                   ; RA0-RA4 output
    movwf  TRISA                       ;
    movlw  00000111b                   ; RB0-RB2 input / RB3-RB7 output
    movwf  TRISB                       ;
    Bank0                              ; select bank 0
    movlw  00000010b                   ; set voltage at -12V to RS232 ''RX''
    movwf  PORTA                       ;
Main
    btfsc  CLOCK                       ; wait for clock edge (high -> low)
    goto   Main                        ;
    movfw  PORTB                       ; 
    andlw  00000011b                   ; reads levels on PORTB and send
    movwf  RAW_data                    ; data to RS232
    call   RS232_Tx                    ; 
    btfss  CLOCK                       ; wait for clock edge (low -> high)
    goto   $-1                         ;               
    goto   Main
RS232_Tx                               ; RS232 (19200 baud rate) 8-N-2
                                       ; 1 start+8 data+2 stop - No parity  
    btfsc  RAW_data,1
    goto   Good_qual
    goto   Bad_qual
Good_qual                              ; 
    movlw  00000001b                   ;
    andwf  RAW_data,w                  ; good quality signal 
    iorlw  '0'                         ; sends '0' or '1' to RS232
    movwf  RS232_data                  ; 
    goto   Char_Tx
Bad_qual                               ;
    movlw  00000001b                   ;
    andwf  RAW_data,w                  ; bad  quality signal     
    iorlw  '*'                         ; sends '*' or '+' to RS232
    movwf  RS232_data                  ;
Char_Tx
    movlw  9                           ; (8 bits to transmit)
    movwf  BIT_counter                 ; BIT_counter = n. bits + 1
    call   StartBit                    ; sends start bit
Send_loop
    decfsz BIT_counter, f              ; sends all data bits contained in
    goto   Send_data_bit               ; RS232_data
    call   StopBit                     ; sends 2 stop bit and returns to 
Main
    Send_1
    goto   Delay16
StartBit
    Send_0
    nop
    nop
    goto   Delay16
StopBit
    nop
    nop
    nop
    nop
    nop
    Send_1
    call   Delay8
    goto   Delay16
Send_0_
    Send_0
    goto   Delay16
Send_1_
    nop
    Send_1
    goto   Delay16
Send_data_bit
    rrf    RS232_data, f               ; result of rotation is saved in
    Skip_if_C                          ; C FLAG, so skip if FLAG is set
    goto   Send_zero
    call   Send_1_
    goto   Send_loop
Send_zero
    call   Send_0_
    goto   Send_loop
;
; 4 / clock = ''normal'' instruction period (1 machine cycle )
; 8 / clock = ''branch'' instruction period (2 machine cycles)
;
;     clock            normal instr.           branch instr. 
;   2.4576 MHz           1.6276 us               3.2552 us
;
Delay16
    movlw  2                           ; dummy cycle,
    movwf  dummy_counter               ; used only to get correct delay
                                       ; for timing.
    decfsz dummy_counter,f             ; 
    goto  $-1                          ; Total delay: 8 machine cycles
    nop                                ; ( 1 + 1 + 1 + 2 + 2 + 1 = 8 )
Delay8
    movlw  2                           ; dummy cycle,
    movwf  dummy_counter               ; used only to get correct delay
                                       ; for timing.
    decfsz dummy_counter,f             ; 
    goto   $-1                         ; Total delay: 7 machine cycles
                                       ; ( 1 + 1 + 1 + 2 + 2 = 7 )
Delay1
    nop
    RETURN                             ; unique return point
END
; END PROGRAM CODE --------------------
Using the circuit we assembled we can "sniff" RDS traffic directly on the
serial port using screen, minicom or whatever terminal app you like.