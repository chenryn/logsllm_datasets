view,whichprovidesthisinformationinamoreconvenientformat.
Thefractionofvaluesbelongstocolumn-levelstatistics;calculatedduringthe
analysis,itisshownasthenull_fracattribute.
Forexample,whensearchingfortheflightsthathavenotdepartedyet,wecanrely
ontheirdeparturetimesbeingundefined:
=> EXPLAIN SELECT * FROM flights WHERE actual_departure IS NULL;
1 sigmodrecord.org/publications/sigmodRecord/0809/p20.date.pdf
2 include/catalog/pg_statistic.h
312
17.3 DistinctValues
QUERY PLAN
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
Seq Scan on flights (cost=0.00..4772.67 rows=15356 width=63)
Filter: (actual_departure IS NULL)
(2 rows)
Toestimatetheresult,theplannermultipliesthetotalnumberofrowsbythefrac-
tionofvalues:
=> SELECT round(reltuples * s.null_frac) AS rows
FROM pg_class
JOIN pg_stats s ON s.tablename = relname
WHERE s.tablename = 'flights'
AND s.attname = 'actual_departure';
rows
−−−−−−−
15356
(1 row)
Andhereistheactualrowcount:
=> SELECT count(*) FROM flights WHERE actual_departure IS NULL;
count
−−−−−−−
16348
(1 row)
17.3 Distinct Values
The n_distinct field of the pg_stats view shows the number of distinct values in a
column.
If n_distinct is negative,its absolute value denotes the fraction of distinct values
inacolumnratherthantheiractualcount. Forexample,−1indicatesthatallcol-
umnvaluesareunique,while−3meansthateachvalueappearsinthreerowson
average.Theanalyzerusesfractionsiftheestimatednumberofdistinctvaluesex-
ceeds10%ofthetotalrowcount;inthiscase,furtherdataupdatesareunlikelyto
changethisratio.1
1 backend/commands/analyze.c,compute_distinct_statsfunction
313
Chapter17 Statistics
ycneuqerf
null_frac
n_distinct
values
Ifuniformdatadistributionisexpected,thenumberofdistinctvaluesisusedin-
stead. Forexample,whenestimatingthecardinalityofthe“column=expression”
condition,theplannerassumesthattheexpressioncantakeanycolumnvaluewith
equalprobabilityifitsexactvalueisunknownattheplanningstage:1
=> EXPLAIN SELECT *
FROM flights
WHERE departure_airport = (
SELECT airport_code FROM airports WHERE city = 'Saint Petersburg'
);
QUERY PLAN
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
Seq Scan on flights (cost=30.56..5340.40 rows=2066 width=63)
Filter: (departure_airport = $0)
InitPlan 1 (returns $0)
−> Seq Scan on airports_data ml (cost=0.00..30.56 rows=1 wi...
Filter: ((city −>> lang()) = 'Saint Petersburg'::text)
(5 rows)
Here the InitPlan node is executed only once,and the calculated value is used in
themainplan.
1 backend/utils/adt/selfuncs.c,var_eq_non_constfunction
314
17.4 MostCommonValues
=> SELECT round(reltuples / s.n_distinct) AS rows
FROM pg_class
JOIN pg_stats s ON s.tablename = relname
WHERE s.tablename = 'flights'
AND s.attname = 'departure_airport';
rows
−−−−−−
2066
(1 row)
Iftheestimatednumberofdistinctvaluesisincorrect(becausealimitednumber
ofrowshavebeenanalyzed),itcanbeoverriddenatthecolumnlevel:
ALTER TABLE ...
ALTER COLUMN ...
SET (n_distinct = ...);
Ifalldataalwayshaduniformdistribution,thisinformation(coupledwithminimal
and maximal values) would be sufficient. However,for non-uniform distribution
(whichismuchmorecommoninpractice),suchestimationisinaccurate:
=> SELECT min(cnt), round(avg(cnt)) avg, max(cnt)
FROM (
SELECT departure_airport, count(*) cnt
FROM flights
GROUP BY departure_airport
) t;
min | avg | max
−−−−−+−−−−−−+−−−−−−−
113 | 2066 | 20875
(1 row)
17.4 Most Common Values
Ifdatadistributionisnon-uniform,theestimationisfine-tunedbasedonstatistics
onmostcommonvalues()andtheirfrequencies. Thepg_statsviewdisplays
thesearraysinthemost_common_valsandmost_common_freqsfields,respectively.
Hereisanexampleofsuchstatisticsonvarioustypesofaircraft:
315
Chapter17 Statistics
ycneuqerf
[most_common_vals]
]sqerf_nommoc_tsom[
null_frac
values
=> SELECT most_common_vals AS mcv,
left(most_common_freqs::text,60) || '...' AS mcf
FROM pg_stats
WHERE tablename = 'flights' AND attname = 'aircraft_code' \gx
−[ RECORD 1 ]−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
mcv | {CN1,CR2,SU9,321,763,733,319,773}
mcf | {0.27736667,0.27023333,0.26093334,0.0597,0.038266666,0.03796...
To estimate the selectivity of the “column = value” condition, it is enough to
find this value in the most_common_vals array and take its frequency from the
most_common_freqsarrayelementwiththesameindex:1
=> EXPLAIN SELECT * FROM flights WHERE aircraft_code = '733';
QUERY PLAN
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
Seq Scan on flights (cost=0.00..5309.84 rows=8158 width=63)
Filter: (aircraft_code = '733'::bpchar)
(2 rows)
1 backend/utils/adt/selfuncs.c,var_eq_constfunction
316
17.4 MostCommonValues
=> SELECT round(reltuples * s.most_common_freqs[
array_position((s.most_common_vals::text::text[]),'733')
])
FROM pg_class
JOIN pg_stats s ON s.tablename = relname
WHERE s.tablename = 'flights'
AND s.attname = 'aircraft_code';
round
−−−−−−−
8158
(1 row)
Itisobviousthatsuchestimationwillbeclosetotheactualvalue:
=> SELECT count(*) FROM flights WHERE aircraft_code = '733';
count
−−−−−−−
8263
(1 row)
The  list is also used to estimate selectivity of inequality conditions. For ex-
ample,a condition like“column  SELECT left(histogram_bounds::text,60) || '...' AS hist_bounds
FROM pg_stats s
WHERE s.tablename = 'boarding_passes' AND s.attname = 'seat_no';
hist_bounds
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
{10A,10A,11B,11H,12G,13B,14B,14H,15G,16B,17B,17H,19B,19B,19J...
(1 row)
Combinedwiththelist,thehistogramisusedforoperationslikeestimating
theselectivityofgreaterthanandlessthanconditions.1 Forexample,let’stakea
lookatthenumberofboardingpassesissuedforbackrows:
1 backend/utils/adt/selfuncs.c,ineq_histogram_selectivityfunction
318
17.5 Histogram
ycneuqerf
[mcv]
]fcm[
null_frac
values
[histogram_bounds]
=> EXPLAIN SELECT * FROM boarding_passes WHERE seat_no > '30C';
QUERY PLAN
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
Seq Scan on boarding_passes (cost=0.00..157350.10 rows=3014932 ...
Filter: ((seat_no)::text > '30C'::text)
(2 rows)
Ihaveintentionallyselectedtheseatnumberthatliesrightontheboundarybe-
tweentwohistogrambuckets.
Theselectivityofthisconditionwillbeestimatedat N ,whereN isthe
numberofbuckets
numberofbucketsholdingthevaluesthatsatisfythecondition(thatis,theones
locatedtotherightofthespecifiedvalue).Itmustalsobetakenintoaccountthat
sarenotincludedintothehistogram.
Incidentally,  values do not appear in the histogram either, but the seat_no
columncontainsnosuchvaluesanyway:
=> SELECT s.null_frac FROM pg_stats s
WHERE s.tablename = 'boarding_passes' AND s.attname = 'seat_no';
319
Chapter17 Statistics
null_frac
−−−−−−−−−−−
0
(1 row)
First,let’sfindthefractionofsthatsatisfythecondition:
=> SELECT sum(s.most_common_freqs[
array_position((s.most_common_vals::text::text[]),v)
])
FROM pg_stats s, unnest(s.most_common_vals::text::text[]) v
WHERE s.tablename = 'boarding_passes' AND s.attname = 'seat_no'
AND v > '30C';
sum
−−−−−−−−
0.2172
(1 row)
Theoverallshare(ignoredbythehistogram)is:
=> SELECT sum(s.most_common_freqs[
array_position((s.most_common_vals::text::text[]),v)
])
FROM pg_stats s, unnest(s.most_common_vals::text::text[]) v
WHERE s.tablename = 'boarding_passes' AND s.attname = 'seat_no';
sum
−−−−−−−−−−−
0.6735997
(1 row)
Since the values that conform to the specified condition take exactly 𝑁 buckets
(outofbucketspossible),wegetthefollowingestimation:
=> SELECT round( reltuples * (
0.2172 -- MCV share
+ (1 - 0.6735997 - 0) * (50 / 100.0) -- histogram share
))
FROM pg_class
WHERE relname = 'boarding_passes';
round
−−−−−−−−−
3014933
(1 row)
320
17.5 Histogram
ycneuqerf
null_frac
x values
Inthegenericcaseofnon-boundaryvalues,theplannerapplieslinearinterpola-
tiontotakeintoaccountthefractionofthebucketthatcontainsthetargetvalue.
Hereistheactualnumberofbackseats:
=> SELECT count(*) FROM boarding_passes WHERE seat_no > '30C';
count
−−−−−−−−−
2986429
(1 row)
As you increase the default_statistics_target value, estimation accuracy may im-
prove,butasourexampleshows,thehistogramcombinedwiththelistusually
givesgoodresultsevenifthecolumncontainsmanyuniquevalues:
=> SELECT n_distinct FROM pg_stats
WHERE tablename = 'boarding_passes' AND attname = 'seat_no';
n_distinct
−−−−−−−−−−−−
461
(1 row)
Itmakessensetoimproveestimationaccuracyonlyifitleadstobetterplanning.
Increasingthedefault_statistics_target valuewithoutgivingitmuchthoughtmay
321
Chapter17 Statistics
slow down planning and analysis without bringing any benefits in return. That
said,reducingthisparametervalue(downtozero)canleadtoabadplanchoice,
eventhoughitdoesspeedupplanningandanalysis. Suchsavingsareusuallyun-
justified.
17.6 Statistics for Non-Scalar Data Types
Fornon-scalardatatypes,Postgrecangatherstatisticsnotonlyonthedistri-
butionofvalues,butalsoonthedistributionofelementsusedtoconstructthese
values. It improves planning accuracy when you query columns that do not con-
formtothefirstnormalform.
• Themost_common_elemsandmost_common_elem_freqsarraysshowthelistof
themostcommonelementsandthefrequencyoftheirusage.
Thesestatisticsarecollectedandusedtoestimateselectivityofoperationson
arrays1 andtsvector2 datatypes.
• Theelem_count_histogramarrayshowsthehistogramofthenumberofdistinct
elementsinavalue.
Thisdataiscollectedandusedforestimatingselectivityofoperationsonar-
raysonly.
• For range types, Postgre builds distribution histograms for range length