---
## Page 209
Lis7-5~7-7的程序，可以用来显示出图7-7股的GU1应用程序。单击右侧的
请改写范例程序的Host类（Lis7-2）为不使用匿名内部类的版本。
publie class MyErame extenda Jrrame-implements Actionliatoner1
import
import javax.aving.Jtabel;
inport
inport
mportsava-awt.FlowLayout
smport 3ava.ie.ICException;
publle class Msfn
Import
提示：请考虑用户连续单击按钮的情况
写Service类（List7-7），提高这个类的响应性。
[Executc]按钮时，Swing的framework 会去调用aetionPerformed 方法，在
问题7-5（提升响应性）
提示：请尝试建立一个新的HelperThrcad类用来取代名内部类
得等上一些时间，这会使按钮的反应、应用程序对用户的反应都慢下来。请改
actionPerformed方法里，会调用Scrvice类的service方法。
问题7-4（不使用匿名内部类）
Lit7-6
publie MyErameAy I
List7-5
pubiiestatieoid main（sttlng]arga）（
面，因为scrvice方法很花时闻，这么一来要从actionPerformed方法退出，
super("MyFrane")
avax.sying.JButton:
javax.sgiog.JFramo
Java.avt.event.ActionEventj
java.avt.event.Acticnlistener:
getCantentPane(1.netiayout (new FlowLayout(1):
De MyFrame（
MyFrame类（MyFramejava）
Main类（Main.java）
医？-7拥有[Exccut]的GU应用程序
LMytrame
Thread-Per-Message-
一这个工作交给你了
7章
囍
---
## Page 210
hM务线精设谢模武
数据。
问题7-6（制作服务器）
注5：这里无视Web浏览器（客户端）传米的HTTP 请求，而机械性地对客户端吐出HTML
请使用Thread-Per-Message Patterm，将它修改为可以同时应付多个 Web 浏览器
览器倒数的10秒之间，其他浏览器都会被要求等待。
这个服务器是以单线程运行的，所以同时只能应付－-个Web 浏览器。对一个浏
的Web服务器，执行范例如图7-8所示"
List 7-8～List 7-10的程序是--个会从10 正始，每隔约1秒倒数1，直到0为止
public class Service l
List 7-7
public static void service() {
public void actionFerformed(ActionEvent e) ↑
System.out.printlr("done.");
System,ott.printi"service");
 Service.service(l;
for (=nt i = 0; i chead>Countdcwn") ;
getOutputStream()); 
Service.service(" + clientSocket + ") BFGiN");
IoExceptionf
public class Service
import java.io.Dataout.put Stream;
import
import
import
import java.net.Socket;
01-4 1sr?
public
private Service()
System.out.println (Thread.currentThread().getName() +";
java.io.BufferedReader;
java.io.InputstreamReader;
Java-io.IOException;
}finally f
1 catch 
e.printstackTrase();
out.writeBytes("Countdowr start!");
out.writeBytes(")r\n");
out.writeBytes("HTTp/l.c 2C0 OR\r\n");
 Service 类(Servicejava)
 serverSocket.close();
static
System. out println("connected to "+ clientsocket);
Socket clientSccket = serverSocket.accept();
System.out.printin("Accepzing...");
(lOExceptior e） 
catch (roexceptior e) {
try [
é-printstackrrace();
Service.service(cllentsocket);
void
 service[socket
clientSocket)
throws
---
## Page 213
[这个间题用来检验您对多线程的理解。Blackhole类（List7-11）具有enter与
而现在的目标是调用enter方法时，会显示出
Step 1、Step2之间，调用了magic方法
在enter方法中，有用来显示Step1、Step2、Step3等字符串的语句。在显示
magic这两个类方法，enter方法已经写好了，而magic方法还没写。
问题7-7
servi+vio”+cliont5ocke+）END
图7-8执行范例（请在本地执行，以Web范器读取bp/127.0.0.1：8888/）
inaily1
clientSocket:close(l
oot.vritenytes("11
oint-10i>01-1
out.flunb:
cut，zt=yte（ch2>+1+"*）
Syatemicut.ptihtlntThread.gurrentThreadl)
tryI
catch（tntezruptedExceptione)（
getName（）：Cauntdow1
Thrsd.1p/1000）;
Thread-Per-Message
tx
start!
Countdown
Q-0
6
-工
一这个工作交给你了
7章
---
## Page 214
6
public class Main {
public class Blackhole l
执行程序使用的Main类如List 7-12所示，期待的执行结果如图 7-9所示。
此不可以在 magic方法里显示字符串。
则不显示出来。请尝试写出 magic 方法，达到上面期待的程序行为，不过，在
step 3 
而再来的
Step2
Step 1
List 7-12
List 7-11
public static void mair(string args[l) {
(magic方法请您来完成)
public static void enter(object obj) f
System.out.print-n("ENn");
System.out.println("BEGIN"};
Blackhole.enter(cbjl; 
object cbj
System.ou.println("step 2");
magicfobjl;
System.out.prirtln("step 1");
synchronized （obj)I
System,oul.println("Step 3(never reachea here)");//不会执行这里
Main 类(Mainjava)
Blackhote 类(Blackhole.java)
(在这里停止不动、CTRL+C结束程序)
Step
step 1
BEGIN
 new object();
图7-9执行结
---
## Page 215
来，来了就工作
WorkerThread
等到工作
第8章
---
## Page 216
200
后，就回到 Chamnel里，等待下--个工作啊。
收到请求，
是要求显示出请求者的名称与请求编号而已）。
所示。范例程序的操作如下：
点放在管理I.人线程的地方，称之为Thread Poo。
来
会依次抓一件上作米处理。当没有工作可作时，上人线程会停下来等待新的工作过
Request
组合。如果没有模型盒子了，就等待新的模型盒子送来……。
并阅读盒内的说明书，并将模型组装起来。做完“作的工人，就去拿下一个盒了来
WorkerThread
Channel
ClientThread
Main
范例程序
Worker Thread Pattern
Channel类的实例管理者5个工人线程（WorkerThread）。每个工人线程都等待
ClientThread 类的线程，会对Chamnel 类送出“作的请求（说是工作，在这里只
Worker Thread也有人称为Background Thread（背景线程）。另外，也有人把视
当工作的请求来临时，工人线程会从 Chaneel 里抓一·件请求来处理。处理结束
接下来就米看Worker Thread Pattern 的范例程序吧。程序电出现的类如表 8-1
worker是“工人”的意思，Worker Thread Pattern 中，上人线程（worker thread）
范例程序的类图和顺序图，如图8-1和图8-2所示。
这一章要学习的是Worker Thread Patterm.
.r人必须逐个组装收到的塑料玩具模型。工人首先会去拿桌上堆放的模型盒子，
工作的委托人，会将很多塑料玩具模型盒予搬去工厂，堆放在桌上。
这是某个工厂的故事。在这里，上人要组装塑料玩具模型，
名
表示［人线程的类
接受工作请求，传给“人线程的类
代表工作请求的类
用米送出工作请求的线程
操作测试用线程
表 8-1 类一览表
说
明
---
## Page 217
Landon
channel
Cli+ntThraad
就直
接来
结果
ClhentThread
Puts request
ates
图8-2范例程序的顺序图
图8-1
Worker Thread-
startorkers
anandisanbat
范例程序的类图
ke民音
1t
R+qu+t
Chann
HER
Contains
est
Channel
takeRequest
Takas request
Creates and pools!
一等到工作来，来了就工作
:WurkerThread
调用
试获
档术
第8路
---
## Page 218
20
例程序中，对应到这样的操作：
ClientThread 类
ChientThread 实例（Alice、Bobby、Chris）共亨这个 Channel 实例。
Main 类
ClientThread类（List 8-2）用来送出工作请求。“送出工作请求”的行为，在范
import java.util.Random;
●建立 Request 实例：
Main类（List 8-1）会建立1个拥有5条上人线程的Channel实例。并让3个
public class ClientThread extends Thread l
public class Main ↑
List 8-2
了使程序操作有些变化，程序使用了随机数sleep-
将这个实例传给Channel类的 putRequest 方法，
List 8-1
pubzic void run() f
pubiic CiientThread(String name, Channei channel) [
private static final Random random = new Randcn():
private finai Channel channel;
public static void maintStringt] args) f
try{
this.channel = charnel:
super(name);
new Clientrhread("chris",
channel.startWorkers();
Channel channel = new Channei (5);
new
new ClientThread("Alice",
for （int. 1 = O; true; i++) {
用来送出工作请求的ClientThread 类（ClientThreadjava）
ClientThread("Bobby",
测试用的 Main 类（Main.java）
Request. request = new Request(getName(), i);
 channel).start(),
channei).stert();
！！工人线程的数量
一些时间。
---
## Page 219
川了 sleep。
线程名称（委托者与号码）而已，为了模拟这个“操作”需要花点时间，所以
execute方法定义了这个请求的“操作”。说是操作，在范例程序里只是显示出
name 的名字会是Alice、Bobby、Chris 其中之一：number 的值则是0、1、2….
Request 类
executes "+ this);
name 字段是请求者的名称，mumber 字段是请求编号。这个范例程序中，
public class Reguest l
import java.util,Random;
Request类（List 8-3）用来表示工作请求。
List 8-3