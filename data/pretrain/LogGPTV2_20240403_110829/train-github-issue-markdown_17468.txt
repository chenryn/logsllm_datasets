### Environment
- SQLAlchemy: 1.3.5 or 1.3.11
- PostgreSQL: 9.6
- Python: 3.7.4

### Problem
When deleting a parent model that has a relationship with child models through a secondary table, and also has a direct relationship to the secondary table, duplicate delete queries are emitted for the same instance, resulting in an `SAWarning`.

In my observation, it appears that `db.session.deleted` retains the deleted instances even after they have been automatically deleted from the secondary table. The following logs are generated when the parent record is deleted (some comments reflect my opinion):

```plaintext
# Automatic deletion due to secondary relationship
# https://docs.sqlalchemy.org/en/13/orm/cascades.html#delete
2019-11-19 14:30:03,653 INFO sqlalchemy.engine.base.Engine DELETE FROM user_assignments WHERE user_assignments.user_id = %(user_id)s AND user_assignments.account_id = %(account_id)s
2019-11-19 14:30:03,654 INFO sqlalchemy.engine.base.Engine ({'user_id': 8, 'account_id': 6}, {'user_id': 8, 'account_id': 51})

# Automatic deletion due to explicit cascade
# Unexpectedly, db.session.deleted retains the deleted instances?
2019-11-19 14:30:03,655 INFO sqlalchemy.engine.base.Engine DELETE FROM user_assignments WHERE user_assignments.user_id = %(user_id)s AND user_assignments.account_id = %(account_id)s
2019-11-19 14:30:03,656 INFO sqlalchemy.engine.base.Engine ({'user_id': 8, 'account_id': 6}, {'user_id': 8, 'account_id': 51}, {'user_id': 8, 'account_id': 987})

# SAWarning is reported because some rows in user_assignments are already deleted.
/home/centos/.pyenv/versions/3.7.4/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py:1367: SAWarning: DELETE statement on table 'user_assignments' expected to delete 3 row(s); 1 were matched. Please set confirm_deleted_rows=False within the mapper configuration to prevent this warning.
```

### Reproduction
We have two models, `Account` and `User`, which have a many-to-many relationship via the `UserAssignment` model. The `UserAssignment` model includes data for email confirmation status.

```python
class Account(db.Model):
    users = db.relationship(
        'User', 
        secondary='user_assignments', 
        back_populates='accounts', 
        lazy='dynamic',
        secondaryjoin='''and_(User.id == UserAssignment.account_id,
                              UserAssignment.confirmed_at.isnot(None))'''
    )
    assignments = db.relationship('UserAssignment', cascade='all, delete-orphan', lazy='dynamic')
```

Here is the content of the `user_assignments` table for `user_id = 8`:

```sql
SELECT * FROM user_assignments WHERE user_id = 8;
 user_id | account_id |         confirmed_at          
---------+------------+-------------------------------
       8 |          6 | 2017-05-19 16:21:38.938036+00 
       8 |        987 |                               
       8 |         51 | 2019-09-27 05:38:53.467833+00 
```

To reproduce the issue, follow these steps:

```python
user = User.query.get(8)
db.session.delete(user)
print(db.session.deleted)  # IdentitySet([<UserAssignment 1>, <UserAssignment 2>, <UserAssignment 3>])
db.session.flush()
```

This will trigger the duplicate delete queries and the `SAWarning`.