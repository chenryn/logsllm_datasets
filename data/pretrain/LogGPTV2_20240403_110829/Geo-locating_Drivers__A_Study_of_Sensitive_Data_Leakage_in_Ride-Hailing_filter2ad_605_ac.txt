### Included in Nearby Cars API Responses

#### User Authentication
Fourteen services restrict the Nearby Cars API to authenticated users only. The remaining services—GroundLink, myTaxi, Easy, Jeeny, RideLA, and eCab—do not require any form of user authentication. This allows any public attacker to retrieve nearby cars without user authentication.

It is worth noting the case of GoCatch. Every time a user wants to log in to GoCatch, the service requires the submission of a token sent via SMS. While this approach may affect the service's usability, it can increase the cost and complexity for attackers.

#### Session Lifespan
Since the beginning of our experiments, all services except three have not required us to obtain a fresh user session. For Uber, Lyft, Heetch, Gett, and Flywheel, the experiments lasted a total of 28 days. During this period, only Lyft and Flywheel required us to refresh the session ID after 24 hours and every 30 minutes, respectively. For the other services, the experiment lasted 15 days (eCab and Taxify only 7 days). Among these, only Ztrip requires refreshing the session ID every 30 minutes.

#### Anti-GPS Spoofing
Our analysis did not reveal the presence of any anti-GPS spoofing behavior among all tested ride-hailing services (RHSes).

#### Identifier Lifespan
Overall, 17 services do not use short-lived identifiers. The maximum time interval is the same as that of the session lifespan. Only three services shuffle identifiers every 20 minutes. Notably, Flywheel refreshes identifiers approximately every 10 minutes.

#### Personally Identifiable Information (PII)
Our analysis revealed that six services share Personally Identifiable Information (PII). Among them, we discovered full names, phone numbers, and sensitive information such as social security numbers and bank account data. The complete list of PII per service is provided in Table III.

### Takeaways
For the remaining RHSes, we did not identify rate limits. As elaborated in §V, we requested on average about four requests per second based on insights gained from Uber, Taxify, and eCab. Higher rate limits may be present, but we did not verify their presence for ethical reasons. Finally, none of the services enforce a same-origin network policy for user requests.

In summary, our initial analysis did not observe any particular countermeasures that would hinder attackers. Instead, our analysis revealed behaviors that can facilitate attackers, such as long-lived tokens. Our tests identified two types of vulnerabilities in 11 RHSes: six services do not require user authentication to reveal the position of nearby drivers, and another six services directly return a variety of personally identifiable information, including sensitive and confidential data (e.g., social security numbers and bank account numbers).

### Attacks
The results of the web API analysis indicate that the Nearby Cars API may be poorly protected. Attackers may be able to collect a large volume of data containing drivers' identifiable information and their positions, which can indirectly uncover drivers' sensitive information. To demonstrate the threats, we present three attacks in this section.

#### Design
Our attacks consist of three components: data acquisition, data aggregation, and data analysis.

**Data Acquisition:**
Data acquisition is performed using monitors, which are bots that control rider accounts. In this study, all monitors for a particular RHS use only one account. A monitor is placed in an appropriate location in a city to collect data by continuously performing API calls with spoofed GPS coordinates and storing the collected data in a local database. Monitors are also responsible for determining when the authorization token needs to be refreshed.

The exact locations of our monitors were determined as follows:
1. If the RHS operates in multiple cities, we select a city that is relatively isolated from neighboring cities (e.g., an island).
2. We calculate the average size that a monitor could cover (up to 20 mi² for ethical concerns).
3. We place monitors in a grid based on the size of the area covered by each monitor, adjusting for irregular city shapes and reducing overlaps.

After being placed, each monitor starts to acquire data at a constant request rate, which has been determined by considering ethical aspects. Specifically, our experiments must not interfere with the normal business operations of RHSes and should not trigger any active rate-limiting mechanisms. We first tried to acquire data from Lyft with a rate of 10 requests per second, the documented rate limit. After two hours, we reached the rate limit and reduced the rate to five requests per second. For Uber, we further reduced the rate to one request per second. For the other RHSes, we set the initial rate to four requests per second and never changed it, except for Taxify and eCab, where we reduced the rate to two requests per second.

We acquired data incrementally. First, we started the acquisition for Lyft, Uber, Heetch, Gett, and Flywheel on April 13th, 2018. The responses were collected over four consecutive weeks (28 days), i.e., between April 13th and May 10th. Then we extended the acquisition to the remaining 15 RHSes from May 11th. In total, except for Taxify and eCab, we acquired data for 15 days. Due to a power outage, our monitors were offline or gathered partial data between May 12th and 14th, and May 19th and 21st. These days were excluded from the study. For Taxify and eCab, we acquired only seven days because the network providers flagged our machines as infected, and we suspended the acquisition of data.

**Data Aggregation:**
Responses from the Nearby Cars API return car paths, each consisting of timestamped GPS coordinates with an identifier that links paths to cars or drivers and does not change over time. One RHS, Lyft, requires additional attention. Lyft’s Nearby Cars API responses include the URL of the driver’s avatar, which is a driver-chosen picture (usually a selfie). Avatars do not change frequently, making them reliable identifiers for drivers. However, each response contains only the URL of the closest driver. To gather the URLs of other drivers, we deploy a mobile monitor for each newly-discovered "driver" to perform an additional API call closer to the most recent GPS coordinate.

**Data Analysis:**
The final step is to remove noise from our dataset. First, we categorize drivers as full-time if they appear more than half of the total number of days. Full-time drivers exhibit more regular daily patterns, so we focus on them. Second, drivers have various activities throughout the day, such as giving rides or logging out of the platform. Since none of the web APIs we used can distinguish specific activities, we rely on the inter-path interval to distinguish these cases. Specifically, we observe that the average ride in the monitored cities lasts up to 45 minutes. Accordingly, if the inter-path interval exceeds 45 minutes, we assume the driver was either absent or logged out.

### Ethical Considerations and Responsible Disclosure
Our analysis involved the analysis of remote servers and handling sensitive data of drivers. We addressed the ethical concerns of our study as follows:
1. We designed experiments to avoid interfering with the normal operations of RHSes. Our experiments used a low request rate, adapted based on feedback from the remote servers, and did not perform any operations that could change driver behavior.
2. Even though the data we collected is accessible to the public and not encrypted, our monitors were implemented to remove sensitive response fields before storing data in our database, ensuring we do not store private data items such as full names, dates of birth, and social security numbers.

Our analysis identified security issues that need to be addressed by RHSes’ developers. We notified our findings as follows:
1. For RHSes with clear vulnerabilities, such as Bounce returning SSNs and unauthenticated access to the Nearby Cars API, we followed the notification procedure presented by Stock et al. [35]. After the initial notification, we regularly verified the presence of the vulnerability and sent reminders if it persisted.
2. To address our findings, RHSes developers may need to redesign the web API and the rider app. We reached out to the developers and discussed the details of our findings.

### Feedbacks After Disclosure
We notified the developers of all 20 RHSes about our results. Eight services shared the details of the patch and asked for our feedback. For example, Bounce removed sensitive PII, including social security numbers and bank account numbers, from their response messages. Lyft’s Nearby Cars API has stopped providing avatar information, and Heetch is considering hardening the web API usage by introducing further restrictions, such as shorter lifespans for drivers’ IDs. Additionally, as a result of our notification efforts, Lyft and Uber each awarded us a bug bounty.

### Lessons Learned
**The Unlearned Lesson Despite Media Attention:**
Despite extensive media attention on massive sensitive data leaks and the Hell program, changes in the platforms, if any, are not perceptible, making it possible for attackers to spy on drivers.

**From Security to Safety:**
Most attention has been devoted to industrial espionage, with little focus on the possible safety issues of drivers. The issues presented in this paper go beyond mere computer security and touch on drivers’ safety. For example, Nearby Cars APIs can be used to determine a driver’s home address.

**A Market Segment Problem:**
Our findings show that the problem is not limited to Uber and Lyft but extends to the entire sector. All services are vulnerable to the same set of attacks, and each suffers from at least one vulnerability. In one case, Gett, the attacker can directly query a web API to obtain the position of a specific driver without harvesting API responses.

### Related Work
**Privacy-Preserving Location-Based Services (LBS):**
Privacy in LBSes has been a long-standing concern. Many privacy-preserving architectures have been proposed to address privacy issues in LBSes, such as location-based trust for mobile user-generated content, location-based social networks, and privacy-preserving location proof systems. Recently, Pham et al. proposed ORide and PrivateRide, two privacy-preserving LBS systems specifically for ride-hailing services. Our work complements these efforts by demonstrating the possible attacks current ride-hailing services still face.

**Leakage of Privacy-Sensitive Data in Mobile Applications:**
The detection of data leakage in mobile applications is a challenging problem that has been addressed from different angles using various techniques. For example, Enck et al. [13], Yang et al. [37], and Egele et al. [12] focused on identifying mobile apps that transmit sensitive data such as GPS positions and contact lists without user awareness. Data leakage can also occur when transmitting user-provided information.