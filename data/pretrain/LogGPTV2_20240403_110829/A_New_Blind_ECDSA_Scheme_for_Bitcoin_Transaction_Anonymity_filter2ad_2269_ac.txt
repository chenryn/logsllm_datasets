of three distinct primes, i.e, N = pqt.
Definition 1. An integer z is said to be a N -th residue modulo N 2
if there is an integer y such that z = yN (mod N 2).
The set of N -th residues is a multiplicative subgroup of Z∗
N 2
of order ϕ(N) = (p − 1)(q − 1)(t − 1). Each N -th residue z has
exactly N roots of degree N , among which exactly one is strictly
smaller than N . The N -th roots of unity are the numbers of the
form (1 + N)x = 1 + xN(mod N 2).
The problem of deciding N -th residuosity, i.e. distinguishing
N -th residues from non N -th residues will be denoted by CR[N].
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand617AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
Xun Yi and Kwok-Yan Lam
As for prime residuosity [1, 13], deciding p-th residuosity is
believed to be computationally hard. Accordingly, we assume that:
Conjecture. There exists no polynomial time distinguisher for
N -th residues modulo N 2, i.e. CR[N] is intractable.
This intractability hypothesis is referred to as the Decisional
Composite Residuosity Assumption (DCRA) throughout this fol-
lowing discussion.
We now proceed to describe the number-theoretic framework
underlying the modified Paillier cryptosystem introduced in sec-
tions 4.1. Let д = (1+N)pt and denote by E(m, r) the integer-valued
function defined by
E(m, r) = дmr N (mod N 2)
N 2. Note that дq = 1(mod N 2).
where m ∈ Zq and r ∈ Z∗
Definition 2. We call Composite Residuosity Class Problem the
computational problem Class[N] defined as follows: for a given
C = E(m, r) ∈ Z∗
N 2 where m ∈ Zq and r ∈ Z∗
N 2, compute m.
Associated to the computation problem, we define the decisional
problem as follows:
Definition 3. Associated to Class[N], we call the decisional prob-
lem D-Class[N] defined as: given C = E(m, r) ∈ ZN 2 and x ∈ Zq,
decide if x = m.
Based on the above definitions, we have
Theorem 3. There exists the following computational hierarchy
CR[N] = D-Class[N] ⇐ Class[N]
Proof. The hierarchy D-Class[N] ⇐ Class[N] comes from the
general fact that it is easier to verify a solution than to compute it.
Let us prove the left-side equivalence.
(⇒) Assume that C = дmr N (mod N 2) and submit Cд−x =
дm−x r N (mod N 2) to the oracle solving CR[N]. In case of N -th
residuosity detection, there exists an integer r′ such that Cд−x =
r′N (mod N 2). Therefore, we have дm−x(r/r′)N = 1(mod N 2). Rais-
ing two sides to the same power (p − 1)(q − 1)(t − 1), we have
д(m−x)(p−1)(q−1)(t−1)(mod q) = 1(mod N 2), i.e., 1 + pt[(m − x)(p −
1)(q − 1)(t − 1)(mod q)]N = 1(mod N 2). Because (m − x)(p − 1)(q −
1)(t − 1)(mod q) < q, we have x = m. Therefore, the answer is “Yes”.
Otherwise, the answer is “No”.
(⇐) Submit the pair (z = E(m, r), x = 0) to the oracle solving
D-Class[N]. Return the oracle’s answer without change.
Therefore, the theorem is proved. △
Remark. In the above proof, we consider some special cases of
CR[N], that is, z = E(m, r) = дmr N (mod N 2) instead of any z ∈
ZN 2. However, since we assume that CR[N] is intractable, it must
be intractable in any case.
Based on the above facts, we now analyze the semantic security
of the modified Paillier cryptosystem. The semantic security of
a public key crytosystem is commonly defined by the following
experiment [7, 8].
• A random public and private pair (pk, sk) are generated by
running Gen(1N ).
• A probabilistic polynomial time-bounded adversary is given
the public key pk, which it may use to generate any number
of ciphertexts (within polynomial bounds).
• The adversary generates two equal-length messages m0 and
m1, and transmits them to a challenge oracle along with the
public key. The challenge oracle selects one of the messages
by flipping a fair coin (selecting a random bit b ∈ {0, 1}),
encrypts the message mb under the public key, and returns
the resulting challenging ciphertext c to the adversary.
The underlying public key cryptosystem is semantically secure
under chosen plaintext attack if the adversary cannot determine
which of the two messages was chosen by the oracle, with prob-
ability significantly greater than 1/2 (the success rate of random
guessing).
Theorem 4. The modified Paillier cryptosystem is semantically
secure if CR[N] is intractable.
Proof. Since CR[N] is intractable, D-Class[N] is also intractable
according to Theorem 3. Therefore, given m0, m1, and E(mb , r), the
adversary cannot determine which of the two messages was chosen
by the oracle, with probability significantly greater than 1/2. The
theorem is proved. △
Next, we analyze the security of the proposed blind signature
based on the modified Paillier cryptosystem. According to [9], a
blind digital signature scheme is secure if it has blindness and
unforgeability.
Blindness. Intuitively, blindness of a blind signature means that
the recipient R does not reveal to the signer S any information
about the signature during the generation of the signature.
In the proposed blind signature scheme, the information relevant
to the signature include h and (Kx , s). During the signature gen-
eration, both h and Kx are encrypted by the recipient R with the
modified Paillier cryptosystem. Based on Theorem 4, the modified
Paillier cryptosystem is semantically secure. Therefore, without
knowing the decryption key, the signer S cannot distinguish h, Kx
from random integers in Zq. In addition, although the encryp-
tion of k−1
1 (h + Kx sk)(mod q) is computed by the signer S based
on the homomorphic property of the Paillier cryptosystem, the
signer S, without knowing the decryption key, cannot distinguish
s = k−1
1 (h + Kx sk)](mod q) from a random integer in Zq. If the
signer S returns an encryption of a known integer α instead of
k−1
1 (h + Kx sk)(mod q) to the recipient R, it can be detected by the
recipient R because (Kx , s), where s = k−1
2 α, is usually not a valid
signature of the signer. Even if (Kx , k−1
2 α) happens to be a valid
signature, the signer S cannot trace the signature (Kx , k−1
2 α) with
α because he has no knowledge of k2 in the signature.
In summary, the recipient R does not reveal to the signer S
any information about the blind signature. Therefore, the proposed
blind signature has blindness.
Unforgeability. Intuitively, unforgeability of a blind signature
means that the recipient R cannot forge any new blind signature if
given some blind signatures.
2 [k−1
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand618A New Blind ECDSA Scheme for Bitcoin Transaction Anonymity
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
Recipient Comp.
1 mp+2 exp.+2ℓ exp.
1 exp.
Steps
Step 1
Step 2
Step 3
Step 4
Total
1 mp+(2ℓ + 3) exp.
1 mp+(2ℓ + 3) exp.
Table 1: Computation and Communication Complexities for Recipient and Signer
Signer Comp.
1 mp
2ℓ exp.
3 exp.
2-Party Comm. (bits)
(4ℓ + 2)|N 2| + 2ℓ|q|
2|q|
1 |N 2|
(4ℓ + 3)|N 2|+(2ℓ + 2)|q|
In the proposed blind signature scheme, when the recipient R
submits to the signer S the encryptions of h and Kx , he is re-
quired to provide zero-knowledge proof that the encryptios are con-
1 (mod N 2) and C2 =
structed correctly. This ensure that C1 = дhr N
1 (mod q)r N (mod N 2) =
2 (mod N 2). Therefore, C = (C1Csk
дKx r N
E(k−1
1 (h + Kx sk)(mod q)) from which the recipient R can only ob-
tain s = k−1
1 (h +Kx sk)(mod q) and then a blind signature (Kx , s)
on h. Note that the recipient R may not obtain a valid signature if
he does not follow the scheme to send the encryptions of h and Kx
to the signer S.
Since the ECDSA has been assumed to be unforgeable, given
some blind ECDSA signatures, the recipient R cannot forge any
new blind ECDSA signature.
2 )k−1
2 k−1
In summary, the proposed blind signature scheme has unforge-
ability if the ECDSA is unforgeable.
6 PERFORMANCE ANALYSIS
In this section, we analyze the computation and communication
complexities required by the new blind signature scheme, where
the recipient R and the signer S interact to generate the blind
signature (Kx , s) on a hash value h.
With reference to Section 4.2, the scheme is described with 4
steps. We will analyze the computation and communication com-
plexities required for the recipient R and the signer S, respectively,
in each step in Table 1, where mp represents a point multiplication
over an elliptic curve, exp. denotes a modular exponentiation with
the modulo N 2, ℓ is the number of interactions between the recipi-
ent R and the signer S for zero-knowledge proof, and |x| stands
for the bit length of an integer x.
Note that in the performance analysis, we have not considered
the complexities of computing modular additions and multiplica-
tions in the above analysis because they are relatively small com-
pared to the complexities of computing point multiplications and
modular exponentiations. In addition, because д = (1+N)pt(mod N 2),
so дm = (1 + mptN)(mod N 2) and therefore the computation of
C = дmr N (mod N 2) needs only one modular exponentiation in-
stead of two.
plexities of the recipient and the signer are the same.
From Table 1, it is interesting to see that the computation com-
If we run the proposed blind ECDSA (|p| = 512, |q| = 256, |t| =
5122) on the Skylake Core-i5 test platform with 2.7e+09 Hz CPU
frequency, according to Crypto++ 6.0.0 benchmarks3, one modular
exponentiation with modulo N 2, where |N 2| = 2560, takes less than
2In this case, the security level of the modified Paillier cryptosystem is the same as
that of RSA with 1024-bit modulus since q is a public parameter.
3https://www.cryptopp.com/benchmarks.html
2 ms and one point multiplication with modulo q, where |q| = 256,
takes less than 1 ms. In case that ℓ = 20, the total computation time
for the recipient and the signer to generate a blind signature is less
than 175 ms, and the total communication overload is less than 28
kbytes.
In the case that a bitcoin provider sells 100 bitcoins to 100 clients
in the same time with the proposed blind signature for bitcoin
transaction anonymity, the total computation time of the signer is
less than 100 × 175/2 = 8750 ms = 8.75 s.
We can improve the performance of our scheme by using the
Chinese Reminder Theorem (CRT) to compute the modular expo-
nentiation ax(mod N 2) where N = pqt. The recipient, knowing
p, q, t, can compute ax(mod p2), ax(mod q2) and ax(mod t2) at first
and then ax(mod N 2) with CRT. The signer, knowing pt and q, can
compute ax(mod p2t2) and ax(mod t2) at first and then ax(mod N 2)
with CRT.
We can significantly improve the performance of our scheme by
eliminating the zero-knowledge proof. To protect the signing key
sk of the signer against the malicious recipient, we can modify Eq.
(10) as follows:
2 )k−1
C = (C1Csk
1 (mod q)+r′qr N (mod N 2)
(12)
where the signer randomly chooses r′ from Z∗
q, and the recipient
still computes s as Eq. (11). This change brings about the computa-
tion complexities of both the recipient and the signer being reduced
to only 1 point multiplication plus 3 modular exponentiations and
the communication overload being reduced to only 3|N 2| + 2|q|.
Although this change improves the performance significantly, we
have not provided a rigorous security proof so far.
At last, let us compare our scheme with the blind ECDSA sug-
gested in [10, 11]. In [10, 11], the size of the modulo n for Pillier
cryptosystem is set between q6 and q7. When |q| = 256, the average
size of n is 1664 and therefore |n2| = 3328, which is larger than that
in our scheme when |p| = 512, |q| = 256, |t| = 512 and |N 2| = 2560.
In this case, the computation of a modular exponentiation in [10, 11]
takes longer time than that in our scheme. In addition, Metet [11]
has not provided any security proof of the suggested blind signature
scheme.
7 CONCLUSION
In the bitcoin protocol, it is hard to hide the identity of a client
who buys a bitcoin from a bitcoin provider when the client pays
the provider by bank transfer, credit card, PayPal, or even Ali pay.
In this paper, we proposed a new blind ECDSA scheme to achieve
bitcoin transaction anonymity. With the new blind ECDSA scheme,
the client can pay the provider by any payment approach to ex-
change a blind signature of the provider on the transaction and later
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand619AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
Xun Yi and Kwok-Yan Lam
broadcast it in the bitcoin network. The bitcoin provider cannot
tell the relationship between the real identities of clients and the
sold bitcoins in the blockchain.
We have provided a rigorous security proof that the proposed
blind signature scheme has blindness and unforgeability on the
basis of the semantic security of the modified Paillier cryptosystem.
Performance analysis has shown that our scheme is feasible and
can be used by a bitcoin provider to sell bitcoins to multiple client
in the same time.
Our future work is to study if we can remove the zero-knowledge
proof to improve the performance of our scheme.
ACKNOWLEDGEMENTS
This research is supported by the National Research Foundation,
Prime Minister’s Office, Singapore under its Strategic Capability Re-
search Centres Funding Initiative, and Australian Research Council
(ARC) Discovery Projects DP160100913 & DP180103251.
REFERENCES
[1] J. C. Benaloh. Verifiable Secret-Ballot Elections. PhD Thesis, Yale University, 1988.
[2] F. Boudot. Efficient proofs that a committed number lies in an interval. In EURO-
CRYPT 2000.
[3] D. Chaum. Blind signature for untraceable payment. In CRYPTO 1982.
[4] D. Chaum, A. Fiat, and M. Naor. Untraceable electronic cash. In CRYPTO 1988.
[5] Digital Signature Standard (DSS). Digital Signature Standard (DSS). July 2013.
http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf
[6] A. Fiat and A., Shamir. How to prove yourself: practical solutions to identification
and signature problems. In CRYPTO 1986, pages 186-194.
[7] S. Goldwasser and S. Micali. Probabilistic encryption & how to play mental poker
keeping secret all partial information. Annual ACM Symposium on Theory of
Computing, 1982.
[8] S. Goldwasser and S. Micali. Probabilistic encryption. Journal of Computer and
System Sciences 28: 270-299, 1984.
[9] A. Juels, M. Luby, R. Ostrovsky. Security of blind digital signatures. In CRYPTO
1997, pages 150-164.
[10] W. Ladd. Blind signatures for bitcoin transaction anonymity. https://pdfs.
semanticscholar.org/db29/892c3641587ab0d3af7be584b0d61546ae72.pdf
[11] S. Metet. Blind signature with das/ecdsa? 2004. http://www.metzdowd.com/
pipermail/cryptography/2004-April/006790.html
[12] P. MacKenzie and M. K. Reiter. Two-party generation of DSA signatures. In
CRYPTO 2001, pages 137–154.
[13] D. Naccache and J. Stern. A new public-key cryptosystem based on higher
residues. In EUROCRYPT 1998, pages 308-318.
[14] S. Nakamoto. Bitcoin: A peer-to-peer electronic cash system. 24 May 2009.
https://bitcoin.org/bitcoin.pdf
[15] P. Paillier. Public-key cryptosystems based on composite degree residuosity
classes. In EUROCRYPT 1999, pages 223-238.
[16] D. Pointcheval and J. Stern. Provably secure blind signature schemes. In ASI-
ACRYPT 1996.
[17] D. Pointcheval and J. Stern. Security arguments for digital signatures and blind
signatures. Journal of Cryptology, 13(3): 361-396, 2000.
[18] R. Rivest, A. Shamir and L. Adleman. A method for obtaining digital signatures
and public-key cryptosystems. Communications of the ACM. 21 (2): 120-126,
1978.
[19] C. P. Schnorr. Efficient identification and signatures for smart cards. In CRYPTO
[20] Q. ShenTu and J. Yu. A blind-mixing scheme for Bitcoin based on an elliptic
curve cryptography blind digital signature algorithm. ATR Defense Science &
Technology Lab, 2015.
1989.
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand620