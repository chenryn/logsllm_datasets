The title says it all. I'd like if `fetch` could also open local files, just
like the browser can if the origin ist `file://`.
There is even a test that checks that this does not work here:
deno/cli/tests/unit/fetch_test.ts
Lines 14 to 20 in e568ddf
|  await assertThrowsAsync(  
---|---  
|  async (): Promise => {  
|  await fetch("file:///");  
|  },  
|  TypeError,  
|  "not supported",  
|  );  
Allowing `file://` could profit any library or script that really just needs
the contents of a file and doesn't really care where it is.... just like `deno
run` in fact.
At this moment, you'd have to implement some kind of wrapper.
    async function readTextFile(url: URL): Promise {
        if (url.protocol === 'file:' && typeof Deno.readTextFile !== 'undefined') {
            return await Deno.readTextFile(url.pathname)
        } else {
            const response = await fetch(url)
            return await response.text()
        }
    }
There are a few things interesting points to look out for:
  * Error code mapping aka: 404 = not found/file does not exist, 403 = unauthorized/--allow-read-missing/filemod
  * Partial request?
  * Post/Put request?