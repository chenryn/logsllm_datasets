point out that even though the security parts clearly state to
avoid keystream reuse, the actual protocol speciﬁcation does
not prevent it. Based on these insights, we then discuss dif-
ferent types of countermeasures and evaluate them regarding
their deployment requirements. We focus on fast deployment
and sustainable mitigation options, as they help all stakehold-
ers to prevent the substantial privacy issues of REVOLTE
efﬁciently.
5.1 Root Cause Analysis
The speciﬁcation forbids the reuse of the keystream but does
not specify an implementation, respectively. In particular,
the security paragraph of the RRC speciﬁcation states the
82    29th USENIX Security Symposium
USENIX Association
following: “The eNB is responsible for avoiding reuse of
the COUNT with the same RB identity and with the same
KeNB” [10][5.3.1.2]. Despite being documented in the secu-
rity paragraph, the rest of the protocol speciﬁcation does not
document measures for avoiding keystream reuse.
In particular, when going through the procedure of releas-
ing and adding a new bearer, neither the RRC nor the PDCP
speciﬁcation indicates how to avoid possible keystream reuse.
The RRC speciﬁcation [10, 11] is responsible for the manage-
ment of data bearers, i. e., the RRC reconﬁguration messages
sent in downlink direction can add, release, or modify bearers.
When the UE receives such a reconﬁguration message for
adding a data bearer, it adds a new PDCP entity and conﬁg-
ures it with the current security conﬁguration [10][5.3.10.3].
A new PDCP entity causes a reset of the count variable. More
precisely, the hyper frame number and the sequence numbers
are set to 0 [6][7.1]. While the count starts over again, the
security conﬁguration including the kup remains the same.
This results in the keystream reuse.
Root Cause. Adding a PDCP entity for the VoLTE data
bearer in the same radio connection resets packet counts for
a second time, which introduces the keystream reuse for a
subsequent call along with reusing the same bearer identity.
We argue that the speciﬁcation must clarify the problems of
keystream reuse, in particular in the procedure parts of the
speciﬁcation. This is also part of the current deployment of
5G networks, which resembles the LTE speciﬁcation.
the paragraph states:
5.2 Suggested Countermeasures
The security parts of the speciﬁcation make not only the
eNodeB responsible for avoiding keystream reuse, but they
also suggest how to avoid the keystream reuse.
In par-
ticular,
“In order to avoid such
reuse, the eNB may e. g. use different radio bearer iden-
tities for successive radio bearer establishments,
trigger
an intra-cell handover or by triggering a transition from
RRC_CONNECTED to RRC_IDLE or RRC_INACTIVE and
then back to RRC_CONNECTED.” Those three mechanisms
have different consequences and may be suitable for different
use cases, which we assess in the following.
Radio Bearer Identities. Using different radio bearer iden-
tities mitigates the threat of keystream reuse, as a separate
input parameter changes the output keystream for the subse-
quent call. Further, it is low-cost mitigation, as no additional
messages are exchanged and no key derivation function is
triggered. However, the radio bearer identity is only deﬁned
as a 5-bit ﬁeld, which means that incrementing it only works
for 32 new bearers. A simple bearer identity wrap-around is
not allowed, as it results again in keystream reuse. In this
case, the underlying key material must be changed.
Intra-Cell Handover. An inter-cell handover allows trans-
ferring a phone from one cell to another while the phone
stays connected. With an intra-cell handover, the target and
the origin cell are the same. Using an intra-cell handover as
mitigation works, as the handover procedure has a built-in
key reuse avoidance. Based on the next hop chaining counter
(NNC), which is sent in an RRC Reconﬁguration message,
the old key (kenb) and a new key (kenb(cid:48)) are derived. As the
input material differs from the one used before, the keystream
reuse is mitigated. However, using an intra-cell handover
comes with the cost of an additional run of the key derivation
function.
Switching between RRC Idle/Connected. Another possibil-
ity suggested by the speciﬁcation is to switch back and forth
between the RRC connected and RRC idle states, which can
be achieved by the RRC connection release and the RRC
connection establishment. The eNodeB sends the phone into
RRC idle mode with RRC connection release. The phone
then triggers an RRC connection establishment, as it needs
to send data to the network. A new key for the radio con-
nection is established when the RRC establishment carries
an uplink NAS message, which increases the uplink NAS
count. Again, this derives a new key (kenb(cid:48)), which is then
used for the connection. In general, most RRC connection
establishment procedures carry a NAS uplink message. Thus
this procedure helps to mitigate the threat. However, send-
ing the phone to idle mode does increase the latency, which
should be avoided for the VoLTE calls.
5.3 Encryption of RTP Trafﬁc
A successful REVOLTE attack requires that no additional
media encryption is active [7]. Even though the adversary can
attack and decrypt the radio layer encryption, such additional
encryption via SRTP prevents access to any voice data. Me-
dia encryption conforms with the speciﬁcation, but support
by the IMS and UE is optional. However, our preliminary
experiments in Section 4 demonstrate that none of the tested
providers makes use of this additional layer of protection.
Using media encryption as a countermeasure to REVOLTE
does not depend on any additional speciﬁcation process, nev-
ertheless, the baseband of the UE must implement it. When
implemented, the encryption itself only poses a minor over-
head, as we can assume that the respective algorithm, e. g.,
AES, is implemented in hardware. However, the key ex-
change is performed via the SDP protocol as part of the SIP
protocol and thus brings some additional overhead.
As a long-term solution, vendors and providers both must
make better use of the media encryption speciﬁcation. This in-
cludes signaling the encryption support through the baseband,
as well as providing all required features in the IMS.
5.4 Conclusion: Suggested Defenses
The REVOLTE attack is a threat to the conﬁdentiality of
phone calls and introduces severe privacy issues, which em-
USENIX Association
29th USENIX Security Symposium    83
phasizes the need for a practical countermeasure. As a con-
crete suggestion for a realistic countermeasure setup, we pro-
vide a conclusion of the above options.
As a short-term defense, we recommend increasing bearer
identities; when reaching a wrap-around, we suggest deriving
a new key with an intra-cell handover. However, switching
from RRC connected to idle and back again introduces latency
and an obsolete overhead for VoLTE calls.
A long-term solution, we recommend specifying manda-
tory media encryption and integrity protection for VoLTE.
This provides long-term mitigation for known issues, e. g.,
key reuse, and missing integrity protection on the radio layer,
and introduces an additional layer of security.
6 Discussion
As LTE is a fundamental part of our communication infras-
tructure, open attack vectors in its implementation affect mil-
lions of users worldwide. Therefore, discussing the real-
world feasibility, possible attack scenarios and potential mit-
igation helps to get a better understanding of the impact of
REVOLTE.
6.1 Real-World Application
Our experiments demonstrate the practical feasibility of RE-
VOLTE in a real-world environment. Our realistic setup
includes COTS phones that connect to standard commercial
networks, and we record trafﬁc using the downlink sniffer
Airscope [3]. An adversary needs to invest less than 7000 $
to create a setup with the same functionality and, eventually,
the ability to decrypt downlink trafﬁc.
While our downlink REVOLTE is already feasible, a more
sophisticated adversary can improve the attack’s efﬁciency
by extending the setup with an uplink sniffer, e. g., the Wave-
Judge5000 by SanJole [2] where we can exploit the same
attack vector, and access both directions simultaneously.
Is the Victim on a Call?
6.2
For a targeted attack, the adversary needs to know if the victim
is currently on a call; only if this is the case, she/he can start
the keystream call right after the target call ends. Technically,
this can be achieved by matching the phone number to the
internal network identiﬁers, such as the radio layer identity
(RNTI), i. e., if a victim’s RNTI has an active voice bearer, the
attacker knows that a call is ongoing. Prior work demonstrates
that matching a public identiﬁer with an internal network
identity is feasible in mobile networks, e. g., Shaik et al. [43]
demonstrate that is is possible to map the phone number to
the TMSI. Further, Jover [27] and Kohls et al. [30, 38] show
how an uplink or downlink sniffer can match the TMSI to
the RNTI. Such stepping stone attacks allow an adversary to
assess if the victim is currently on a call.
6.3 Attack Severity
The severity of the attack depends on the number of vendors
using an incorrect implementation that enables to exploit the
keystream reuse, as well as on the distribution of vulnerable
eNodeBs. To estimate this, we sample 15 different eNodeBs
with a wide geographical distribution, which is important as
providers tend to deploy the same vendor within one region.
Our results show that 12 of the sampled eNodeB are prone to
REVOLTE. Because only a small number of vendors exists,
which provide large deployments, we estimate that a high
number of users are potentially affected.
6.4 User Interaction
We can exploit the keystream reuse of VoLTE when we man-
age to place the adversarial keystream call right after the
initial target call took place. While we can demonstrate the
technical feasibility of REVOLTE in different real-world se-
tups and discuss their challenges, user interaction remains one
mandatory factor of the operational aspects of the attack. In
general, we can structure this user interaction in three steps:
1) Recognize Incoming Call. This step is rather simple, but
still decides whether the attack can be successful. For answer-
ing the keystream call, the victim must recognize the call. We
can assume that the victim is in the proximity of the phone
and thus recognizes the incoming call as he just hang up the
previous call.
2) Answer Call. The likelihood to answer the incoming call
depends on human factors. For example, answering the phone
depends on the caller identity [16]. If the caller identity is
known or ﬁts a particular pattern, e. g., area code, we can
assume that it is likely that the call gets answered. The ad-
versary can inﬂuence this by identity spooﬁng, which is a
common attack in telephony networks [18]. Identity spoof-
ing can exploit a variety of different attack vectors based on
SS7 [42] or SIP spooﬁng [28, 46]. We argue that an attacker
who is capable of performing such an attack can increase the
likelihood that the victim answers the incoming call. Note that
SS7 identity spooﬁng requires additional capabilities for an
attacker, i. e., SS7 network access. In contrast, SIP spooﬁng
does not require additional capabilities as only the attacker’s
phone must be manipulated.
3) Hold Call. To generate sufﬁcient keystream material for
the ﬁnal decryption, the keystream call must be as long as
the initial target call. Therefore, the adversary must keep
up the conversation with the victim for a certain amount of
time, depending on the recorded target call. In the context of
telephony fraud, different techniques on the basis of social
engineering exist, e. g., scam and robocalls are a well-known
problem [18, 32, 40]. Besides these rather simple approaches,
more advanced techniques use artiﬁcial intelligence to imper-
sonate the known voice of a speciﬁc person [44]. Obviously,
84    29th USENIX Security Symposium
USENIX Association
there is a wide range of different options to keep up the mali-
cious keystream for the required amount of time.
Conclusion: User Interaction. Even though REVOLTE de-
pends on user interaction—a factor we cannot inﬂuence de-
spite an elaborate and successful technical attack concept—a
large body of prior work indicates that we can assume a sufﬁ-
cient rate of “collaboration”. To further increase the chances
of a successful attack, the adversary can inﬂuence individ-
ual factors that motivate users more to answer and hold an
incoming call. Overall, we conclude that user interaction is a
critical but manageable aspect of REVOLTE.
6.5 Ethics
At all times, we ensure the privacy of users and ensure that we
only process data related to our experiments. To ensure the
privacy of uninvolved users for recorded traces, we a) never
sniffed broadcast channels (e. g., the paging channel), and b)
only analyze data related to our own radio identiﬁer. We learn
this by using the Qualcomm debug (SCAT) interface.
6.6 Disclosure Process
To mitigate the threat of eavesdropping, we have informed
providers about the attack vector through the GSMA CVD
process [4]. The GSMA requested all equipment vendors to
reveal implementation details on keystream reuse mitigation
and to provide patches for affected base stations. By the date
of publication, the affected vendors should have provided
patches, and providers are requested to install and conﬁgure
them securely. However, we need to consider the large num-
ber of providers worldwide and their large deployments. It is
thus crucial to raise awareness in the whole telecommunica-
tion industry to support long-term mitigation.
7 Related Work
REVOLTE extends the idea of key reinstallation attacks by
an elaborate concept that covers all technical challenges of
conducting the attack in real-world scenarios. In the follow-
ing, we discuss the core differences between our keystream
reuse and prior attack concepts, and summarize existing spec-
iﬁcation and implementation ﬂaws in the context of LTE.
Furthermore, as one core component of the attack, we outline
existing options to record the trafﬁc of an LTE radio cell.
Key Reinstallation Attacks. In 2018, Raza and Lu [36] in-
troduced the theoretical foundation for our work. In their
technical report, the authors examine key reinstallation at-
tacks on the LTE control and user plane with an active radio
attacker. Such key reinstallation attacks enable an adversary
to deny the service for a user by either hijacking the location
update or the deregister procedure. As part of their work, they
discovered that keys are reused for user plane trafﬁc in case
of two subsequent VoLTE calls of one radio connection.
In contrast to their work, we make use of the keystream
reuse to fully decrypt the call of a victim that we previously
recorded. On the one hand, this requires a much more elabo-
rate attack concept that is capable of countering all technical
challenges implied by the protocol and transmission charac-
teristics of VoLTE. By taking this into account, we manage
to successfully conduct the attack in different commercial
networks and with realistic voice signals in the calls. Our
attack is feasible with a passive radio sniffer and a normal
phone. On the other hand, our practical evaluation of differ-
ent networks and attack scenarios allows us to provide an
in-depth discussion of the attack vector. Furthermore, we
discuss possible short- and long-term defenses against such a
critical security and privacy threat.
Overall, we emphasize the importance of a practical per-
spective in this context, as otherwise neither the impact of the
attack for our communication infrastructures nor the conse-
quences for future mobile generations become accessible for
future research.
Speciﬁcation Flaws. In the context of radio layer vulnera-
bilities, Rupprecht et al. demonstrated that missing integrity
protection of user plane data allows an active attacker to redi-
rect a victim to a malicious website or even to impersonate
a user towards the network and vice versa [38, 39]. The pre-
sented ALTER attack breaks the mutual authentication aim
and, eventually, also affects the conﬁdentially aim, as all
subsequent DNS and TCP trafﬁc can be intercepted. While
ALTER and REVOLTE both highlight ﬂaws on the layer two
of the protocol stack, ALTER uses a more restrictive attacker
model that depends on an active Man-in-the-Middle (MitM)
adversary. In contrast, REVOLTE invades the privacy of
VoLTE calls solely depending on passive downlink snifﬁng.
Further exploits of speciﬁcation ﬂaws focus on location and
identity privacy and manage to localize a victim either using
an active or passive attacker model [26,27,37,43]. In the con-
text of REVOLTE, we can use such attacks for verifying if a
victim is in the proximity of the attacker, which provides cer-
tainty about the success chances of a targeted attack. Another
direction of research is the formal veriﬁcation of the LTE
speciﬁcation. Hussain et al. [25] introduce a symbolic model
that is capable of checking critical LTE procedures; by apply-
ing their tool, they have identiﬁed different ﬂaws that allows
for denial of service or relay attacks. Basin et al. [13] and Cre-
mers et al. [19] use a Tamarin prover to analyze the 5G AKA,
which is comparable to the LTE AKA. While such work
demonstrates the general security of the AKA, REVOLTE
exploits the keystream reuse after the initial AKA.
Implementation and Conﬁguration Flaws. While speciﬁ-