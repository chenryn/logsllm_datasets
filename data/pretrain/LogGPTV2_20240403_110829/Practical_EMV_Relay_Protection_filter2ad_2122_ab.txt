### 1738
The Merchant Category Code (MCC) identifies the type of business associated with the transaction (e.g., 5732 for electronics stores or 4111 for local transport). The proof of payment required by the reader from the card is a Message Authentication Code (MAC) on the transaction data, known as an Application Cryptogram (AC). The reader requests this AC using a GEN AC command, which includes all the data the card requested in the Card Data Object List (CDOL).

The card then generates a session key, KS, based on the shared key with the bank, KM, and its Application Transaction Counter (ATC), which tracks the total number of times the card has been used. The AC is generated as a MAC of the CDOL1 data, ATC, and Application Interchange Profile (AIP), keyed with KS.

Since the reader does not know the key, it cannot verify the MAC. Instead, the card signs the data for the reader to check, known as Signed Dynamic Application Data (SDAD). The SDAD includes the CDOL1 data, the AC, the AIP (if present in the Static Data Authentication Tag List), any records marked for data authentication, and the Unique Number (UN).

The SDAD and the AC are sent by the card to the reader along with the ATC, which the bank uses to calculate the MAC key, a Cryptogram Information Data (CID) (indicating the type of AC), and the Issuer Authentication Data (IAD). The reader checks the SDAD signature and the data within. If correct, it sends the AC, AIP, CDOL1 data, ATC, and IAD to the bank/payment network for verification. If the AC is verified, the bank authorizes the payment. The MCC is also securely sent to the bank as part of the "authorization request message."

There are many variations of this protocol. For example, the specification includes a card nonce, Nc, which is included in the SDAD, although we did not observe this in our tests. The protocol described here uses Combined DDA with application cryptogram (CDA) mode, as specified in the AIP. The specification allows for an "online" mode without an SDAD, but we have not seen this in our tested cards and readers, which are online and still use CDA.

### Visa Protocol
The Visa protocol is similar to Mastercard's, but before delving into it, let's cover some common details.

**Issuer Authentication Data (IAD):** This hex-string follows the defined format in the EMV standard, but the specifics are proprietary. The IAD, combined with the transaction data, is used by the bank/payment networks for anti-fraud checks. We discovered details of the IAD through investigations and disclosures with Visa, Apple, and Mastercard, which are detailed in Section IV-C.

**Cardholder Verification:** EMV transactions with NFC cards remain fully contactless as long as spending limits are not exceeded: a limit per transaction (e.g., £45 in the UK) and/or cumulative daily limits (e.g., €150 in the EU). If either limit is reached, a Cardholder Verification (CV) mechanism is enforced.

The Cardholder Verification Method (CVM) list informs the terminal of the rules for performing CV, such as entering a Personal Identification Number (PIN) for plastic cards or using a Consumer Device Cardholder Verification Method (CDCVM) for mobile devices. CDCVM allows the reader to accept contactless payments above the normal limit. The AIP indicates if CDCVM is possible, not that it has been used.

**Tap-and-PIN:** The method of requesting the PIN can vary by country. In the UK and Singapore, an "over-the-limit" transaction requires the card to be inserted into the terminal and the PIN to be entered. In Spain, France, Switzerland, Norway, and others, the card does not need to be inserted, but the user is asked to enter the PIN or confirm via a button. This latter type is referred to as Tap & PIN mode. Our investigation found that non-Tap & PIN cards stop transactions over the limit, while Tap & PIN cards continue, requesting CV.

### Visa’s PayWave Protocol
The version of Visa’s protocol, as per the standard and validated by our traces, is shown in Figure 2. Unlike Mastercard, the list of data needed for the transaction (e.g., amount, UN, etc.) is returned in response to the second SELECT message. The functions of the GEN AC and GPO messages in the Mastercard protocol are merged into the GPO message in Visa’s protocol. Checks on the SDAD and AC remain the same. While the MCC is not sent to the card, it is securely sent from the reader to the bank and payment networks for anti-fraud checks and fees.

The type of Cardholder Verification supported or performed is signaled through various EMV data elements, particularly the Terminal Transaction Qualifiers (TTQ), Card Transaction Qualifiers (CTQ), and AIP.

- **Terminal Transaction Qualifiers (TTQ):** Inform the card of the online and CVM options the terminal supports, including "EMV Mode," "offline data authentication for online transactions," and "CVM required."
- **Card Transaction Qualifiers (CTQ):** Determine the type of CV that can/should be performed at the point of sale. The "CDCVM performed" bit tells the terminal that on-device CV has been performed.

We observed both online and offline modes in the Visa traces. If the "offline data authentication for online transactions" flag was set by the reader, the card would report extra records in the AFL field and send the SDAD. Mobile devices we tested used tokenization to obscure account details, whereas plastic cards do not.

### Over the Limit Attacks Against Tap & PIN Cards
Two attacks have demonstrated how user authentication can be bypassed for high-value transactions with Tap & PIN cards.

- **Galloway and Yunusov [7]:** Show that, for high-value Visa transactions, a Man-in-the-Middle (MitM) attacker clearing the TTQ bit, which requests user authentication, leads to a high-value transaction being accepted without a PIN request.
- **Basin et al. [2]:** Present an attack against contactless Visa plastic cards, where a MitM attacker flips CTQ bits, making the terminal believe that CDCVM was performed when it wasn't. This also leads to a high-value transaction being accepted without a PIN request.

While the lack of CTQ authentication is true, the root cause is missing checks at the EMV backend rather than a flaw in Visa’s protocol. We show in Section IV-C that the IAD generated by the plastic card in their attack would have a Visa "plastic-IAD" format, which, if checked, would reveal that the device is not capable of CDCVM authentication, and the transaction should be rejected.

### Visa Relay Protection Protocol
Visa proposes a relay-counteraction measure, called the VISA-L1 protocol, based on two ideas:

1. **Random Unique Identifier (UID):** Each run of the protocol uses a random 4-byte UID, which functions as a nonce and is referred to as the L1SessionParameter. This is sent by the card to the reader as part of the Level 1 anti-collision process.
2. **L1SessionParameter Binding:** The L1SessionParameter is tied into the Level 3 of Visa’s PayWave protocol. The L1SessionParameter is added to the SDAD, alongside the normal Level 3 EMV data. If the UID received at Level 1 and Level 3 do not match, the transaction is rejected as a possible relay.

### Mastercard Relay Protection Protocol
Mastercard’s PayPass-RRP (Figure 3) is an extension of the PayPass protocol, using a timed nonce-exchange at Level 3 to detect relay attacks. PayPass cards indicate support with an AIP of 1981. A PayPass-RRP reader sends an Exchange Relay Resistance Data (ERRD) command containing the "Terminal Relay Resistance Entropy," the same reader-generated UN nonce sent in PayPass inside the GEN AC.

The ERRD response contains:
1. The nonce returned by the card (NC).
2. Three timing estimates from the card (minimum and maximum expected time for processing the ERRD command and an estimate of the round trip time (RTT)).
3. These values are signed in the Signed Static Application Data (SSAD), which the reader checks.

If the RTT is smaller than the maximum listed in the timing data, the ERRD phase finishes, and the protocol continues. If the RTT exceeds the maximum time three times, the reader stops the transaction as a suspected relay attack. If a terminal has done a PayPass-RRP check and it passed, the TVR should be set to 0000000002. We will use "RRP" for the whole payment protocol by Mastercard (PayPass-RRP).

### Threat Model
Our threat model involves an active Man-in-the-Middle (MitM) adversary who can also relay. The attacker operates in an environment where:
1. Banks/issuers/payment networks are honest.
2. EMV terminals are honest.
3. Cards can be compromised, except for the card the attacker is trying to relay in the current attack.

**Formal-Verification Adversary:** Our attacker is modeled as a Dolev-Yao attacker, allowing for corrupt cards and an unbounded number of sessions. For proximity-checking, we follow the state-of-the-art formalism of Mauw et al., where distance and timing are abstracted into event-ordering on traces, and we focus on MitM-security.

**Practical Adversary:** Our practical attackers use Commercial Off The Shelf (COTS) equipment, such as mobile phones (rooted or not). They do not rely on extensively modifying firmware or building new hardware. This is the same type of attacker that Mastercard and Visa aim to stop with their proposals. No current proposal for relay protection for contactless EMV aims to stop specialist, expert-built relay/MitM equipment.

There are fast and effective, purpose-built hardware-based relays in other domains, such as remote car-unlocking. Our threat model does not include hardware-based EMV relays that operate at Level-1 or the physical-layer, and such relays might compromise our proposed solution. In Section VI, we provide timing measurements for an implementation of our L1RP protocol, mention observed bottlenecks, and leave open the possibility of successful hardware-based relays against current contactless EMV technologies.