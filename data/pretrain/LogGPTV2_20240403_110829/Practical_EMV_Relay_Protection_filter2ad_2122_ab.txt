1738
and the MCC, which identiﬁes the business associated with the
reader (e.g., 5732:electronics stores or 4111:local transport).
The proof of payment that the reader requires from the card
is a MAC on the transaction data, referred to as an Application
Cryptogram (AC). The reader now requests this AC with a
GEN AC command, which sends all of the data the card
requested in the CDOL.
The card will then generate a session key, KS, based on
the key it shares with the bank, KM , and its Application
Transaction Counter (ATC), which represents the total number
of times the card has been used. The card generates the AC as
a MAC of the CDOL1 data, ATC, and AIP, keyed with KS.
The reader cannot check this MAC as the key is known only
to the bank and card, so the card signs data for the reader to
check, the Signed Dynamic Application Data (SDAD), which
includes the CDOL1 data, the AC, the AIP (if present in the
Static Data Authentication Tag List), any records marked to
be included in data authentication and the UN.
The SDAD and the AC are sent by the card to the reader
along with the ATC, needed by the bank to calculate the
MAC key, a CID (which indicates the type of the AC) and
the IAD (which we discuss below). The reader checks the
SDAD signature and the data in the SDAD and, if this is
correct, it sends the AC, the AIP, CDOL1 data, ATC and IAD
to the bank/payment network, which will verify the AC. If it
is correct the bank will authorise the payment. The MCC is
also sent securely to the bank, by the terminal, as part of this
“authorisation request message”.
We note that there are many variations of this protocol,
e.g., the speciﬁcation includes a card nonce, Nc, which is
included in the SDAD, however we did not see this in any of
our runs. The protocol presented here uses Combined DDA
with application cyptogram (CDA) mode, as speciﬁed in the
AIP; the speciﬁcation allows for an “online” mode without a
SDAD, although we have not seen this for any of our tested
cards and readers, which are online and still use CDA.
Below, we present the Visa protocol, which is similar to
Mastercard’s protocol, but before doing so we include some
extra details common to both.
IAD: This hex-string follows the deﬁned format set out
in the EMV standard, but the details are proprietary; see Visa
Contactless Payment Speciﬁcation and Visa Mobile Contact-
less Payment Speciﬁcation [10]. The IAD, in combination with
the transaction data, is used by the bank/payment networks
for anti-fraud checks. We discovered details of the IAD via
investigation of cards and our disclosure processes with Visa,
Apple and Mastercard, we give details in Section IV-C.
Cardholder Veriﬁcation: EMV transactions with NFC
cards remain fully contactless as long as certain spending
limits are not reached: a limit per transaction (e.g., £45 in the
UK) and/or cumulative daily limits (e.g., C150 in the EU); if
either is reached, then normally the transaction would require
proof of “user presence”, i.e., a Cardholder Veriﬁcation (CV)
mechanism is enforced.
The Cardholder Veriﬁcation Method (CVM) list informs
the terminal of a set of rules for performing Cardholder
Reader
Card
SELECT 2PAY.SYS.DDF01
FCI(AID-MC)
SELECT AID-MC
FCI(API),PDOL
GPO(PDOL-DATA)
AIP, AFL
READ RECORDs
CDOLs, Track2, CVM List, IAC, Certs
UN ∈R {0, 1}32, Check CVM
list,
CDOL1-DATA=(amount,
amount other, country code, TVR,
currency, date, type, UN, terminal
type, data auth code,
ICC no.,
CVM, TRM, MCC, MNL)
GEN AC (CDOL1-DATA)
KS = EncKM (ATC)
AC = MACKs (CDOL1-DATA,AIP,
ATC,AID,IAD)
SDAD = Sign(CID,AC,CDOL1-
DATA,AIP,UN)
CID, ATC, SDAD(AC,AIP), IAD
Check certs, use these to check sig
on SDAD. CDCVM in IAD for high
amounts
Fig. 1. MasterCard’s PayPass from EMV standard & observed traces
Veriﬁcation supported by the card, as well as the conditions
in which these rules apply. For plastic cards, this is generally
done by requesting that
the card’s Personal Identiﬁcation
Number (PIN) is input into the terminal (this PIN is sent
encrypted to the bank for veriﬁcation). On mobile devices,
the CV can be done on the device, called Consumer Device
Cardholder Veriﬁcation Method (CDCVM), i.e., the user’s
ﬁngerprint is scanned by the mobile app. Importantly, this
allows the reader to accept contactless payments above the
normal contactless limit. We note that the AIP indicates if
CDCVM may be possible, not that it has been used.
“Tap-and-PIN”: The way of requesting the PIN can
differ from country to country (i.e., residing country of the ter-
minal, issuing country of the card and combinations thereof).
For instance, in the UK and Singapore, when using a UK-
issued card, an “over-the-limit” transaction asks for the card to
be inserted into the terminal and for the PIN to be used. Yet, in
Spain, France, Switzerland, Norway, and others, the card does
not need to be inserted in the terminal, but the user is asked
to type in the PIN (or conﬁrm via a button). We refer to the
latter type of PIN-request as Tap & PIN mode. Investigating
Tap & PIN cards from Romania and non-Tap & PIN cards
from the UK, we found that non-Tap & PIN cards would stop
the transaction for any amount over the limit, whereas Tap &
PIN cards would continue, requesting the reader perform CV.
To the best of our knowledge, we are the ﬁrst to point out
that there are two types of EMV cards, although some past
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:17 UTC from IEEE Xplore.  Restrictions apply. 
1739
Reader
Card
SELECT 2PAY.SYS.DDF01
FCI(AID-VISA)
SELECT VISA AID
PDOL, FCI(API)
UN ∈R {0, 1}32, PDOL-DATA=(TTQ,
amount, amount other, country, TVR, cur-
rency, date, type, UN)
GPO(PDOL-DATA)
KS = EncKM (ATC)
AC = MACKs (PDOL-DATA, AIP, ATC,IAD)
SDAD = Sign(ATC, UN, amount,
currency,NC,CTQ,AIP)
Other = PAN Seq no., AC info,form factor
AIP, [AFL] IAD, AC, ATC,
CTQ, Track2, [SDAD], Other
(cid:104) READ RECORD (cid:105)
(cid:104) ICC,TRID,PAR (cid:105)
[ READ RECORDs ]
[ Certs, PAN, CARD(NC) ]
Fig. 2. Visa’s PayWave protocol. Brackets indicate optional messages.
authors have presented attacks that only work against Tap &
PIN cards [2], [7] and others have presented attacks that only
work against non-Tap & PIN cards [11].
2) Visa’s Protocol: The version of Visa’s protocol, as per
the standard and validated by our traces, is shown in Fig 2.
Unlike Mastercard, the list of data needed for the transaction
(e.g. amount, UN, etc.) is returned in answer to the second
SELECT message. The function of the GEN AC and the GPO
messages in the Mastercard protocol
is merged into the GPO
message in Visa’s protocol. Checks on the SDAD and AC
remain the same. While the MCC is not sent to the card, it
is sent securely from the reader to the bank and payment-
networks (i.e., Visa), for anti-fraud checks and fees [12].
The type of Cardholder Veriﬁcation supported or performed
is signalled through a number of different EMV data elements
throughout the transaction, in particular a mobile Visa trans-
action uses the Terminal Transaction Qualiﬁers (TTQ), Card
Transaction Qualiﬁers (CTQ) and AIP.
The Terminal Transaction Qualiﬁers (TTQ) inform the card
of the online and CVM options that the terminal supports;
of relevance are the bits ﬂagging support of “EMV Mode”
(byte 1 bit 6), “ofﬂine data authentication for online trans-
actions” (byte 1 bit 1) and “CVM required” (byte 2 bit 7).
Ofﬂine data authentication for online transactions is a feature
used in special-purpose readers, such as transit system entry
gates [13], where EMV readers may have intermittent con-
nectivity and online processing of a transaction cannot always
take place. In such cases, ofﬂine veriﬁcation is performed and
the payment is processed once the terminal is back online.
The Card Transaction Qualiﬁers (CTQ) are a set of options
which determine what type of CV can/should be performed at
the point of sale. The allowed options are decided by the bank
issuing the card and are programmed at the time of issuance.
The “CDCVM performed” bit (byte 2 bit 5) is of interest – it
tells the terminal that on-device CV has been performed.
Unlike for Mastercard, we saw both online and ofﬂine mode
in the Visa traces. If the “ofﬂine data authentication for online
transactions” ﬂag was set by the reader then the card would
report extra records in the AFL ﬁeld and would send the
SDAD; the ﬁelds in square brackets in Fig 2. For Visa, the
mobile devices we tested used tokenization [14] to obscure the
account details (done by the read record in angle brackets in
Fig 2), whereas plastic cards do not do this.
B. Over the Limit Attacks Against Tap & PIN cards
Two attacks have demonstrated how user authentication can
be bypassed for high-value transactions with Tap & PIN cards.
Galloway and Yunusov [7] show that, for high-value Visa
transactions, a MitM attacker clearing the TTQ bit, which
requests user authentication, leads to a high-value transaction
being accepted without a request for the PIN. This shows that
the TTQ used by the card is not being authenticated by the
reader or EMV back-end.
Basin et. al. [2] present an attack against contactless Visa
plastic cards, in which a MitM attacker ﬂips CTQ bits, making
the terminal believe that CDCVM was performed on the device
when in fact it wasn’t. This too leads to a high-value Visa
transaction being accepted without the reader asking for a PIN.
The authors of [2] state that their attack is “possible because
no cryptographic protection of the CTQ is offered”. While the
lack of CTQ authentication is true, this is not the root cause.
We show in sub-section IV-C that the IAD generated by the
plastic card in their attack would have a Visa “plastic-IAD”
format [10] which, if checked by the payment network, would
reveal that the device is not capable of CDCVM authentication,
and so the transaction should be rejected. Therefore, the attack
of Basin et. al. [2] is due to missing checks at the EMV back-
end rather than a ﬂaw in Visa’s protocol.
We observed some discrepancies regarding how the TTQ-
AC relationship is presented in the above mentioned attacks.
Galloway [7] claims that for Visa cards, the AC does not
contain the TTQ, based on information from the Visa Con-
tactless Payment Speciﬁcation [15], which is a proprietary
speciﬁcation. Basin et. al. [2] claim that the TTQ is in the
AC, based on EMV Book 2 [16], and explain that this is
why their formal model does not identify the Galloway attack.
EMV Book 2 states that it is recommended that the whole
Processing Options Data Object List (PDOL) be included in
the AC (which would include the TTQ in this case), but the
minimum set of data elements they specify does not include
the TTQ. Therefore, whether the TTQ is included in the AC
or not (and if the attack of Galloway [7] is due to missing
back-end checks or a ﬂaw in the protocol) is unclear.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:17 UTC from IEEE Xplore.  Restrictions apply. 
1740
Reader
Card
timed
. . .
. . .
EXCHANGE RELAY RESISTANCE DATA (U N)
NC, Timing information
READ RECORDs
. . .
SDAD, AC, ATC
Fig. 3. Mastercard’s PayPass-RRP Protocol – PayPass with ERRD
C. Visa Relay Protection Protocol
Visa proposes a relay-counteraction measure [3], [17],
which we call the VISA-L1 protocol. This protocol is based
on two ideas. First, it requires the card to use a random 4-byte
Unique Identiﬁer (UID) in each run of the protocol (random
UIDs are common in RFID devices). This means that the UID
now functions as a nonce, and is referred to by Visa as the
L1SessionParameter. This is sent by a card to the reader
as part of the Level 1 anti-collision process (see Appendix A).
The L1SessionParameter is then tied into the Level 3
of Visa’s PayWave protocol. While Visa’s patent and current
documents do not specify how the Level 1-to-Level 3 binding
must be done, we understand from conversations with Visa
that the “EMVCo NextGen” speciﬁcation will specify that the
L1SessionParameter be added to the SDAD, alongside
the normal Level 3 EMV data that the SDAD contains. If the
UID received at Level 1 and Level 3 do not match then the
transaction is rejected as a possible relay.
Visa’s Relay-Security: In the speciﬁcation documents [3],
[17], the security argument relies on the difﬁculty of setting the
UID to a particular value, especially with off-the-shelf devices
such as mobile phones. Thus, a proxy card used in relaying
to impersonate the real card would fail to produce the right
messages to the legitimate reader.
Through our conversations with Visa Research, there is
another implicit security argument, common in the RFID ﬁeld:
relaying at Level 1 is harder than at Level 3, because ISO
14443-4 framing is more restrictive than at the EMV level.
So, relay protections may be more effective at Level 1 than
Level 3. However, we note that if the attacker can set the UID
of the proxy to equal the UID of the card, then Visa’s defences
will no longer work , because there is no dynamic/fresh reply
by the reader based on said UID and there is no distance
bounding used in the VISA-L1 protocol.
D. Mastercard Relay Protection Protocol
Mastercard’s PayPass-RRP (shown in Fig. 3 and described
in EMV Book-C2 [1], Sections 3.10, 5.3 and 6.6) is a direct
extension of the PayPass protocol, in which a timed nonce-
exchange at Level 3 is used in order to detect relay attacks.
PayPass cards indicate they support the protocol with a AIP
of 1981; a PayPass-RRP reader then sends an Exchange
Relay Resistance Data (ERRD) command that contains the
“Terminal Relay Resistance Entropy”. This is the same reader-
generated UN nonce sent in PayPass inside the GEN AC.
The ERRD response contains (1) the nonce returned by
the card and denoted in Fig. 3 as NC, (2) three timing
estimates from the card, denoted in Fig. 3 as timing info, i.e.,
the minimum and maximum expected time for the card to
process the ERRD command and an estimate of the round trip
time (RTT). All these values are signed in the Signed Static
Application Data (SSAD), which the reader should check.
If the message RTT is smaller than the maximum listed
in the timing data, then the ERRD phase ﬁnishes and the
protocol continues. If the RTT is larger than the maximum
time three times in a row, then the reader stops the transaction
as a suspected relay attack. If a terminal has done a PayPass-
RRP check and it passed, then the TVR should be set to
0000000002. We will use “RRP” for the whole payment
protocol by Mastercard (PayPass-RRP).
III. THREAT MODEL
Our threat model is that of an active Man-in-the-Middle
(MitM) adversary, who can also relay. The attacker operates in
an environment where: (1) the banks/issuers/payment networks
are honest; (2) the EMV terminals are honest; (3) cards can
be compromised, except for the card that the attacker is trying
to relay in the current attack (i.e., we do not consider attacks
such as distance fraud or terrorist fraud).
Formal-Veriﬁcation Adversary: Our attacker is modelled
as a Dolev-Yao attacker [18] allowing for corrupt cards and
an unbounded number of sessions. For proximity-checking, we
follow the state of the art formalism of Mauw et. al. [5], where
distance and timing are safely abstracted into event-ordering
on traces, and we are only interested in MitM-security (i.e.,
not distance fraud or terrorist fraud).
Practical Adversary: Our practical attackers use, for
relaying or other MitM manipulations, Commercial Off The
Shelf (COTS) equipment,
i.e., commercial, relatively non-
expensive, easy-to-use hardware or software such as mobile
phones (rooted or not). More speciﬁcally, our practical attacks
do not rely on extensively modifying ﬁrmware on hardware or
building new hardware (for relaying or other MitM attacks),
and our practical adversaries stop at application-level devel-
opment/manipulation on COTS devices. This is the same type
of attacker that Mastercard and Visa aim to stop with their
proposals. No current proposal for relay protection for con-
tactless EMV aims to stop specialist, expert-built relay/MitM
equipment (e.g., [19]).
There are fast and effective, purposely built hardware-based
relays in other domains such as remote car-unlocking [19], as
well as solutions [20] designed speciﬁcally for the physical-
layer (e.g., bespoke modulation schemes) to combat such
efﬁcient, hardware-based attacks. Our threat model does not
include hardware-based EMV relays that operate at Level-
1 (or the physical-layer) and such relays might be able to
compromise our proposed solution. In fact, in Section VI, we
give certain timing measurements for an implementation of our
L1RP protocol, mention the bottlenecks observed, and leave as
an open question the possibility of successful hardware-based
relays against current contactless EMV technologies.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:17 UTC from IEEE Xplore.  Restrictions apply. 
1741