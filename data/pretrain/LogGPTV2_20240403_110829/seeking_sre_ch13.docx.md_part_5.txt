我们在 24 至 36
个月时再次讨论这个问题，我们开始寻找补充他们当前知识的东西。例如，如果存储团队中的
PE 工程师 Jane
已经在那里很长时间了，我们可能会问她是否考虑过加入内存缓存团队。谈话内容类似："嘿，简，你已经在存储团队中工作一段时间了，我想确保你成为一个更全面的工程师。您是否考虑过迁移到缓存团队？他们需要像你这样的高级工程师，而且你拥有快速扩展系统的经验。当然，这是缓存，而不是存储，但您应该去与
Joan
讨论一下，看看发生了什么事情。"一般来说，她的回答是，\"这听起来很有趣。让我去跟她谈谈。或者
Jane
会回来说，"你知道，我还有三四个月的工作，我想做。让我完成这个项目，然后我会考虑调到
Jone 的团队，或者每个月回来看看有啥可以露一手的。"
 当我们意识到，在我们所有的工程团队中，我们需要一个更好的方法来让人们有机会学习新的东西时，我们才意识到，*每月的露一手*就是黑客文化孕育出来的东西。每月的露一手有两个主要目的。其一：鼓励在同一项目工作超过一年的工程师离开团队一个月，从事完全不同的事情。许多人使用这个机会从他们正常的工作中暂时脱离。第二：找到一支新的团队，并看看自己是否想换个环境。在这两种情况下，团队都必须能够处理出人的问题，因此经理需要确保他们的人员配备处于良好水平，或者需要努力寻找其他人来接替他们的位置。
为了最好地评估这些想露一手的人，两个经理需要在这段时间内同步绩效。在某人学习新知识的情况下，通常有一个定义明确的项目，其结束状态可以客观地测量。在迁移到新团队的情况下，我们给人们进入新空间的机会，我们在绩效评估中考虑到这一点。
在团队工作 36
个月后，我们更直接地与工程师讨论要迁移到另一个团队的问题。我们这样做是因为我相信，当人们陷入困境时，他们可以放慢团队的进步。当新的
PE（或
SWE）加入团队并提出新想法时，他们可能会被熟悉系统工作方式的工程师拒绝。成熟的工程师可能会拒绝这个新的想法，因为它改变了他们的思维定势，并改变了他们对系统的舒适感。这可能会扼杀创新。我们实际上已经经历过这种情况，因此，当工程师在同一团队中工作三年或更长时间时，我们对于将工程师转移到新团队方面更具规范性。随着我们向新的地区扩展，达到这三年成绩的工程师应该有足够的移动性，可以进入其他团队。
我们有不少高级工程师，他们一遍又一遍地换团队。他们背后有自己的想法，比如管理者如何影响他们，他们如何影响自己，他们如何相互交谈，是否容易转换团队，以及如果他们再次出现自我认知问题，他们如何面对自己的选择。我们鼓励这些工程师坦率地分享他们的故事，因为它让其他人从非管理者的角度深入了解这一过程。如果一个工程师遇到自我认知问题，但知道他们的经理非常支持他的决定，这使它更容易。如果围绕它们构建的组织提供此机制来尝试新事物，而不再过多地担心自己的表现，那么转换团队就变成了一个更流畅的过程。
**大卫：** 成为成功的生产工程师需要什么？
**佩德罗：**我将尝试列出一些想到的关键特征：
专注于完成工作
:   生产工程师需要有行动的倾向。当我们研究问题、构建系统或创建团队时，一定存在一个实际问题，我们可以长期处理和修复。角色肯定有反应性部分，并且需要它，因为系统会一直出现故障。PE
    需要为这些问题构建可持续的解决方案，因此需要专注于主动解决问题。如果我们陷入一种运维模式，一遍又一遍地完成同样的修补，我们就不会在角色中取得成功。
支持性沟通和影响技能
:   你不能是个混混。混混通常与人交往不好。我们这些在业内工作了很长时间的人会记得与
    BOFH【Bastard Operator from
    Hell】相关的运维打交道的体验。处理故障和定期修复事情可能会让人们失望，并可能使他们变成愤怒的胡言乱语，所以我们需要确保我们雇用的人了解什么是直接的（且仍然算是文明的）方式，并保持与他人交谈。当有人想炫耀自己的知识，并拒绝一个可能没有他们那么多经验的人时，这真的让我恼火。生产工程师需要善于沟通，才能在角色中取得成功。好好说话的规则适用于此处，当你发现这些人时，应该指导他们以不同的方式沟通，如果他们不这样做，你应该积极管理他们，因为这类的恶习很容易渗透到整个团队中。
技术知识和技能
:   生产工程师不仅需要说与软件工程师相同的语言，还需要能够讲其他人的语言。例如：网络工程师、计算容量工程师、数据中心工程师和项目经理。这意味着他们需要了解这些不同的学科，并能够从容面对各种问题，无论是硬件问题还是
    UI 问题。例如，为了在渲染层中查找问题，PE
    需要能够查看代码并了解它如何呈现数据。生产工程师不一定需要成为所有这些学科的专家，但他们不能回避他们。这就是为什么我们的面试寻找各种技术技能，我们也随着时间的推移培训工程师，以获得更多的知识。但我们找到知道想找到无所不知的人是不可能的，所以我们很小心，避免对人有不切实际的期望。
灵活性
:   PE
    在不同的时间扮演不同的角色，需要了解何时使用某些技能。例如，在某些团队中，PE
    需要作为沟通者或联络人。在其他情况下，他们可能需要是问题解决者、调试者或故障解决者。有时，他们可能需要对服务的关键组件进行编码。生产工程师的角色在业内无法仔细定义，这是我们可以接受的。我们特别选择有一个宽泛的定义，因为我们参与我前面描述的服务生命周期的不同阶段。团队的组成是确保角色成功的关键因素，我们需要在不同领域相互利用优势来解决问题。我们确实强调不要陷入"不是我的工作"的心态，而且
    PE 需要乐于去做在工作描述中没有明确定义的事情。
协作与妥协
:   我们的模型是，我们与软件团队合作，而不是软件团队，反之亦然。一方面，我们希望
    SWE 关注可靠性、稳定性和操作性。另一方面，作为
    PE，我们需要确保我们并不总是使用稳定作为唯一衡量标准，并且需要关注功能和提供新服务。我们都需要共同努力，为业务、服务和团队做正确的事。有时，这意味着我们需要在运维问题上做出妥协，有时这意味着
    SWE
    需要在功能上做出妥协。任何考虑问题的角度都不应该赢得一切优先。如果我们一起工作时没有妥协，那么这可能导致不健康的工作关系。PE
    领导层经常与 PE
    团队讨论这一概念，因为很容易陷入一种运维模式，而无暇花时间进行自我反省。请确保我们实际上不是导致
    Dev 和 Ops 之间裂痕的人。
愿意教导，避免 SPOF【单点失败】
:   从长远来看，我们扮演的角色都不是可持续的。PE
    需要专注于构建软件、建立流程以及随时间演变，以便团队将来不再需要自己。PE
    需要小心，避免称为团队中始终解决特定类型问题的人，或称为解决某类问题的专家。PE
    需要确保他们正在构建工具，并培养用户称为专家。
生产工程类似于工程学科中的行业，了解如何操作系统不是学校或大学所教的东西。由于这是你在工作中通过经验学到的东西，这意味着我们必须教别人如何做我们知道的事情。我发现，在职业生涯的开始阶段，很少有软件工程师经常考虑失败或试图构建能够抵御这些故障的系统。成功的
PE
肯定有一种心态，但我坚信，这是后天学习到的行为。我们有责任为周围的人灌输这种心态。实践更多的软件工程师知道如何做到这一点，但现实是，我们正在增加越来越多的新的软件工程师到我们的队伍中，我相信
PE
能帮助他们获得知识，如何更快地构建更具弹性的软件。这也意味着需要为此类培训和开发腾出空间，而不仅仅是期望团队中的生产工程师提供定时定量的产出。 
**大卫：**我们能谈谈如何培训新的生产工程师吗？Facebook
以其入职训练营而闻名；生产工程师会经历训练营吗？是否有属于训练营的 PE
课程？
**佩德罗：**我们如何在训练营中取得更强势的地位，是 PE
起源故事的一部分，我之前没有分享过。当我到达 Facebook
时，运营部不允许加入现有的软件工程训练营。我看过关于训练营的事，在加入之前看过这些视频，很兴奋。然而，当我加入时，我被告知："你在做的是运维，你为什么想要提交代码？"我很愤怒。我在
Facebook
度过了职业生涯的第一年左右，努力改变这种看法，证明人们错了。我来自计算机科学背景，我整个职业生涯都编写了代码。因为我选择参与运维，并不意味着我就要放弃编程，其实我喜欢通过软件解决广泛的运维问题。
工程师在 Facebook
工作的最初几周，他们学到的是作为运维工程师的基本知识：如何提交代码、了解
Facebook
的代码质量标准、使用我们的工具、将内容部署到生产中、了解如何监控和监控添加检测等。这似乎是非常相关的材料，我们也需要了解，但由于我们不允许参加
Bootcamp，我们最初不得不建立自己的版本。与此同时，我们中的一些人花更多的时间与训练营领导，通过许多对话，并通过雇用更多具有较强软件背景的人，我们最终能够获得进入。
训练营现在已经成为所有生产工程师的入职过程的一部分。我们影响了许多课程，同时向软件工程师和生产工程师开放，以便每个人在加入团队之前获得一些有关系统的基本运维知识。