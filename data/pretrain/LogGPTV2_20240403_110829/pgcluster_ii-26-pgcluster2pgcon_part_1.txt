# PGCluster-II: A Clustering System for PostgreSQL Using Shared Data
## Presented at PGCon 2007
### Atsushi MITANI

---

### Agenda
1. **Introduction**
2. **Requirements**
3. **PGCluster**
4. **New Requirements**
5. **PGCluster-II**
   - Structure and Process Sequence
6. **Pros and Cons**
7. **Conclusion**

---

### Introduction
- **Background**: The need for high availability (HA) and high performance (HP) in database systems.

#### Status of Database
- **Broken**: Data is lost.
- **Stopped**: Out of service, but data remains intact.
- **Running**: Fully operational, allowing read and write operations.
- **Between Running and Stopped**: Partial functionality, with some users able to connect while others cannot.

#### What is a DBA?
- **Not Good DBA**: Breaks the database with incorrect patches or restores the wrong data.
- **Ordinary DBA**: Monitors, patches, and backs up the database, stopping it before data is corrupted.
- **Good DBA**: Avoids using unreliable databases.

---

### High Availability (HA)
- **What is required?**:
  - Minimize downtime as much as possible.
  - Ensure system operation even during hardware failures, power outages, and database maintenance.
- **Why is it required?**:
  - To prevent data loss and service interruptions.
- **Who needs it?**:
  - Data owners and service users.

### High Performance (HP)
- **What is required?**:
  - Minimize response time as much as possible.
- **Why is it required?**:
  - Users dislike waiting.
  - Efficient processing of large volumes of data adds value to the system.
- **Who needs it?**:
  - Service users.

---

### Initial Requirements
- **Target Application**: Web applications.
- **High Availability**:
  - Scheduled maintenance only.
- **High Performance**:
  - More than 200 accesses per second.
  - 700,000 requests per hour, 1,500,000 requests per day.
  - 99.9% of queries are for data reading.

---

### Solution: PGCluster (2002-)
- **Synchronous and Multi-Master Replication System**:
  - Query-based replication.
  - Independent data replication across nodes.
  - No single point of failure.
  - Multiplex load balancer, replication server, and cluster databases.
  - Automatic failover.
  - Manual restoration.
  - Dynamic addition of cluster databases and replication servers.
  - Version upgrades supported.

#### Structure of PGCluster
- **Client** → **Load Balancer** → **Replicator** → **Cluster Databases**

#### Pros and Cons of PGCluster
- **Pros**:
  - Sufficient HA and performance for data reading.
- **Cons**:
  - Poor performance for data writing.
  - Maintenance issues.
  - Cost considerations.
  - Documentation issues.
- **Cost and Licensing**:
  - Uses normal PC servers.
  - BSD-licensed software.

---

### Evolving Requirements
- **High Availability**:
  - 24/7 non-stop operation.
- **High Performance**:
  - Support for both read and write operations.
- **Cost Reduction**:
  - Minimize expenses.

#### Coexistence of HA and HP
- **Conflict**:
  - HA requires redundancy.
  - HP requires quick response.
- **Performance Considerations**:
  - Replication scales well for data reading but not for writing.
  - Parallel query improves both.
  - Redundancy is challenging to add.
  - Shared Data Clustering scales well for both but is not suitable for large datasets.
  - Shared Disk requires redundancy.

#### Suitable Solutions for HA and HP
- **Synchronous Replication**: Ensures shared data availability.
- **Asynchronous Clustering**: Supports parallel queries.
- **Shared Disk**: Requires redundancy.

#### Performance Assumptions
- **Request Types**:
  - Read and write operations.
- **Data Instance Size**:
  - Small and large data sets.
- **Connection Numbers**:
  - Few and many connections.

---

### PGCluster-II
- **Data Shared Clustering System**:
  - Storage data shared via shared disk (NFS, GFS, GPFS, NAS).
  - Cache and lock status shared via Virtual IPC.

#### Concept of Shared Data
- **Virtual Shared IPC**:
  - Cluster DBs share semaphores and memory.
  - Writes to remote nodes through cluster processes.
  - Reads from local node directories.
  - Signal and message queues are out of scope.

#### Structure of PGCluster-II
- **DB Node** → **Virtual IPC** → **Shared Disk** → **DB Node**

---

### Conclusion
- **Summary of Key Points**:
  - PGCluster-II addresses the evolving needs for high availability and high performance.
  - It leverages shared data and virtual IPC to ensure efficient and reliable database clustering.

---

Thank you for your attention.