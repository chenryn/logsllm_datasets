Summary 288
Questions 289
Further reading 289
Chapter 11: Database Management 290
Technical requirements 291
Installing databases with Ansible 291
Installing MariaDB server with Ansible 291
Installing PostgreSQL Server with Ansible 300
[ iv ]
Table of Contents
Importing and exporting data 306
Automating MariaDB data loading with Ansible 306
Performing routine maintenance 318
Routine maintenance on PostgreSQL with Ansible 318
Summary 322
Questions 322
Further reading 323
Chapter 12: Performing Routine Maintenance with Ansible 324
Technical requirements 325
Tidying up disk space 325
Monitoring for configuration drift 331
Understanding process management with Ansible 337
Rolling updates with Ansible 342
Summary 346
Questions 346
Further reading 347
Section 4: Securing Your Linux Servers
Chapter 13: Using CIS Benchmarks 349
Technical requirements 350
Understanding CIS Benchmarks 350
What is a CIS Benchmark? 350
Exploring CIS Benchmarks in detail 352
Applying security policy wisely 355
Applying the SELinux security policy 356
Mounting of filesystems 356
Installing Advanced Intrusion Detection Environment (AIDE) 357
Understanding CIS Service benchmarks 358
X Windows 358
Allowing hosts by network 358
Local firewalls 359
Overall guidance on scoring 359
Scripted deployment of server hardening 360
Ensuring SSH root login is disabled 360
Ensuring packet redirect sending is disabled 365
Running CIS Benchmark scripts from a remote location 368
Summary 371
Questions 371
Further reading 372
Chapter 14: CIS Hardening with Ansible 373
Technical requirements 373
Writing Ansible security policies 374
[ v ]
Table of Contents
Ensuring remote root login is disabled 375
Building up security policies in Ansible 378
Implementing more complex security benchmarks in Ansible 385
Making appropriate decisions in your playbook design 388
Application of enterprise-wide policies with Ansible 390
Testing security policies with Ansible 394
Summary 397
Questions 397
Further reading 398
Chapter 15: Auditing Security Policy with OpenSCAP 399
Technical requirements 400
Installing your OpenSCAP server 400
Running OpenSCAP Base 401
Installing the OpenSCAP Daemon 402
Running SCAP Workbench 403
Considering other OpenSCAP tools 404
Evaluating and selecting policies 405
Installing SCAP Security Guide 406
Understanding the purpose of XCCDF and OVAL policies 408
Installing other OpenSCAP policies 410
Scanning the enterprise with OpenSCAP 412
Scanning the Linux infrastructure with OSCAP 412
Running regular scans with the OpenSCAP Daemon 422
Scanning with SCAP Workbench 426
Interpreting results 428
Summary 432
Questions 432
Further reading 433
Chapter 16: Tips and Tricks 434
Technical requirements 434
Version control for your scripts 435
Integrating Ansible with Git 436
Organizing your version control repositories effectively 438
Version control of roles in Ansible 440
Inventories – maintaining a single source of truth 444
Working with Ansible dynamic inventories 445
Example – working with the Cobbler dynamic inventory 448
Running one-off tasks with Ansible 452
Summary 457
Questions 457
Further reading 458
Assessments 459
[ vi ]
Table of Contents
Other Books You May Enjoy 472
Index 475
[ vii ]
Preface
Welcome to Hands-On Enterprise Automation on Linux, your guide to a collection of the most
valuable processes, methodologies, and tools for streamlining and efficiently managing
your Linux deployments at enterprise scale. This book will provide you with the
knowledge and skills required to standardize your Linux estate and manage it at scale,
using open source tools including Ansible, AWX (Ansible Tower), Pulp, Katello, and
OpenSCAP. You will learn about the creation of standard operating environments, and
how to define, document, manage, and maintain these standards using Ansible. In
addition, you will acquire knowledge of security hardening standards, such as the CIS
Benchmarks. Throughout the book, practical, hands-on examples will be provided for you
to try for yourself, on which you can build your own code, and to demonstrate the
principles being covered.
Who this book is for
This book is for anyone who has a Linux environment to design, implement, and care for. It
is intended to appeal to a wide range of open source professionals, from infrastructure
architects through to system administrators, including professionals up to C level.
Proficiency in the implementation and maintenance of Linux servers and familiarity with
the concepts involved in building, patching, and maintaining a Linux server infrastructure
are assumed. Prior knowledge of Ansible and other automation tools is not essential but
may be beneficial.
What this book covers
Chapter 1, Building a Standard Operating Environment on Linux, provides a detailed
introduction to standardized operating environments, a core concept that will be referred to
throughout this hands-on book, and which is essential understanding in order for you to
embark on this journey.
Chapter 2, Automating Your IT Infrastructure with Ansible, provides a detailed, hands-on
breakdown of an Ansible playbook, including inventories, roles, variables, and best
practices for developing and maintaining playbooks; a crash course enabling you to learn
just enough Ansible to begin your automation journey.
Preface
Chapter 3, Streamlining Infrastructure Management with AWX, explores, with the help of
practical examples, the installation and utilization of AWX (also available as Ansible
Tower) so as to build good business processes around your Ansible automation
infrastructure.
Chapter 4, Deployment Methodologies, enables you to understand the various methods
available in relation to large-scale deployments in Linux environments, and how to
leverage these to the best advantage of the enterprise.
Chapter 5, Using Ansible to Build Virtual Machine Templates for Deployment, explores the best
practices for deploying Linux by building virtual machine templates that will be deployed
at scale on a hypervisor in a practical and hands-on manner.
Chapter 6, Custom Builds with PXE Booting, looks at the process of PXE booting for when
the templated approach to server builds may not be possible (for example, where bare-
metal servers are still being used), and how to script this to build standard server images
over the network.
Chapter 7, Configuration Management with Ansible, provides practical examples of how to
manage your build once it enters service, so as to ensure that consistency remains a byword
without limiting innovation.
Chapter 8, Enterprise Repository Management with Pulp, looks at how to perform patching in
a controlled manner to prevent inconsistencies re-entering even the most carefully
standardized environment through the use of the Pulp tool.
Chapter 9, Patching with Katello, builds on our work involving the Pulp tool by introducing
you to Katello, providing even more control over your repositories whilst providing a user-
friendly graphical user interface.
Chapter 10, Managing Users on Linux, provides a detailed look at user account management
using Ansible as the orchestration tool, along with the use of centralized authentication
systems such as LDAP directories.
Chapter 11, Database Management, looks at how Ansible can be used both to automate
deployments of databases, and to execute routine database management tasks, on Linux
servers.
Chapter 12, Performing Routine Maintenance with Ansible, explores some of the more
advanced on-going maintenance that Ansible can perform on a Linux server estate.
Chapter 13, Using CIS Benchmarks, provides an in-depth examination of the CIS server
hardening benchmarks and how to apply them on Linux servers.
[ 2 ]
Preface
Chapter 14, CIS Hardening with Ansible, looks at how a security hardening policy can be
rolled out across an entire estate of Linux servers in an efficient, reproducible manner with
Ansible.
Chapter 15, Auditing Security Policy with OpenSCAP, provides a hands-on look at the
installation and use of OpenSCAP to audit Linux servers for policy violations on an on-
going basis, since security standards can be reversed by either malicious or otherwise well-
meaning end users.
Chapter 16, Tips and Tricks, explores a number of tips and tricks to keep your Linux
automation processes running smoothly in the face of the ever-changing demands of the
enterprise.
To get the most out of this book
To follow the examples in this book, it is recommended that you have access to at least two
Linux machines for testing on, though more may be preferable to develop the examples
more fully. These can be either physical or virtual machines—all examples were developed
on a set of Linux virtual machines, but should work just as well on physical ones. In
Chapter 5, Using Ansible to Build Virtual Machine Templates for Deployment, we make use of
nested virtualization on a KVM virtual machine to build a Linux image. The exact
hardware requirements for this are listed at the beginning of this chapter. This will require
either access to a physical machine with the appropriate CPU to run the examples on, or a
hypervisor that supports nested virtualization (for example, VMware or Linux KVM).
Please be aware that some examples in this book could be disruptive to other services on
your network; where there is such a risk, this is highlighted at the beginning of each
chapter. I recommend you try out the examples in an isolated test network unless/until you
are confident that they will not have any impact on your operations.
Although other Linux distributions are mentioned in the book, we focus on two key Linux
distributions—CentOS 7.6 (though if you have access to it, you are welcome to use Red Hat
Enterprise Linux 7.6, which should work just as well in most examples), and Ubuntu Server
18.04. All test machines were built from the official ISO images, using the minimal
installation profile.
As such, where additional software is required, we take you through the steps needed to
install it so that you can complete the examples. If you choose to complete all the examples,
you will install software such as AWX, Pulp, Katello, and OpenSCAP. The only exception
to this is FreeIPA, which is mentioned in Chapter 10, Managing Users on Linux. Installing a
directory server for your enterprise is a huge topic that sadly requires more space than we
have in this book—hence, you may wish to explore this topic independently.
[ 3 ]
Preface
The text assumes that you will run Ansible from one of your Linux test machines,
but Ansible can actually be run on any machine with Python 2.7 or Python 3 (versions 3.5
and higher) installed (Windows is supported for the control machine, but only through a
Linux distribution running in the Windows Subsystem for Linux (WSL) layer available on
newer versions of Windows. Supported operating systems for Ansible include (but are not
limited to) Red Hat, Debian, Ubuntu, CentOS, macOS, and FreeBSD.
This book uses the Ansible 2.8.x.x series release, although a few examples are specific to
Ansible 2.9.x.x, which was released during the course of writing. Ansible installation
instructions can be found at https:/​/​docs.​ansible.​com/​ansible/​intro_​installation.
html.
Download the example code files
You can download the example code files for this book from your account
at www.packt.com. If you purchased this book elsewhere, you can
visit www.packtpub.com/support and register to have the files emailed directly to you.
You can download the code files by following these steps:
1. Log in or register at www.packt.com.
2. Select the Support tab.
3. Click on Code Downloads.
4. Enter the name of the book in the Search box and follow the onscreen
instructions.
Once the file is downloaded, please make sure that you unzip or extract the folder using the
latest version of:
WinRAR/7-Zip for Windows
Zipeg/iZip/UnRarX for Mac
7-Zip/PeaZip for Linux
The code bundle for the book is also hosted on GitHub at https:/​/​github.​com/
PacktPublishing/​Hands-​On-​Enterprise-​Automation-​on-​Linux. In case there's an update
to the code, it will be updated on the existing GitHub repository.
We also have other code bundles from our rich catalog of books and videos available
at https:/​/​github.​com/​PacktPublishing/​. Check them out!
[ 4 ]
Preface
Download the color images
We also provide a PDF file that has color images of the screenshots/diagrams used in this
book. You can download it here: https:/​/​static.​packt-​cdn.​com/​downloads/
9781789131611_​ColorImages.​pdf.
Conventions used
There are a number of text conventions used throughout this book.
CodeInText: Indicates code words in text, database table names, folder names, filenames,
file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here is an
example: "To start with, let's create a role called loadmariadb."
A block of code is set as follows:
- name: Ensure PostgreSQL service is installed and started at boot time
service:
name: postgresql
state: started
enabled: yes
Any command-line input or output is written as follows:
$ mkdir /var/lib/tftpboot/EFIx64/centos7
Bold: Indicates a new term, an important word, or words that you see on screen. For
example, words in menus or dialog boxes appear in the text like this. Here is an example:
"Select System info from the Administration panel."
Warnings or important notes appear like this.
Tips and tricks appear like this.
[ 5 ]
Preface
Get in touch
Feedback from our readers is always welcome.
General feedback: If you have questions about any aspect of this book, mention the book
title in the subject of your message and email us at customercare@packtpub.com.
Errata: Although we have taken every care to ensure the accuracy of our content, mistakes
do happen. If you have found a mistake in this book, we would be grateful if you would
report this to us. Please visit www.packtpub.com/support/errata, selecting your book,
clicking on the Errata Submission Form link, and entering the details.
Piracy: If you come across any illegal copies of our works in any form on the internet, we
would be grateful if you would provide us with the location address or website name.
Please contact us at PI:EMAIL with a link to the material.
If you are interested in becoming an author: If there is a topic that you have expertise in,
and you are interested in either writing or contributing to a book, please
visit authors.packtpub.com.
Reviews
Please leave a review. Once you have read and used this book, why not leave a review on
the site that you purchased it from? Potential readers can then see and use your unbiased
opinion to make purchase decisions, we at Packt can understand what you think about our
products, and our authors can see your feedback on their book. Thank you!
For more information about Packt, please visit packt.com.
[ 6 ]
1
Section 1: Core Concepts
The objective of this section is to understand the systems administration fundamentals and
techniques that will be covered in this book. First, we will cover a hands-on introduction to
Ansible, the tool that will be used throughout this book for automation and purposes such
as package management and advanced systems administration en masse.
This section comprises the following chapters:
Chapter 1, Building a Standard Operating Environment on Linux
Chapter 2, Automating Your IT Infrastructure with Ansible
Chapter 3, Streamlining Infrastructure Management with AWX
1
Building a Standard Operating
Environment on Linux
This chapter provides a detailed exploration of the Standard Operating Environment
(henceforth, SOE for short) concept in Linux. Although we will go into much greater detail
later, in short, an SOE is an environment where everything is created and modified in a
standard way. For example, this would mean that all Linux servers are built in the same
way, using the same software versions. This is an important concept because it makes
managing the environment much easier and reduces the workload for those looking after it.
Although this chapter is quite theoretical in nature, it sets the groundwork for the rest of
this book.
We will start by looking at the fundamental definition of such an environment, and then
proceed to explore why it is desirable to want to create one. From there, we will look at
some of the pitfalls of an SOE to give you a good perspective on how to maintain the right