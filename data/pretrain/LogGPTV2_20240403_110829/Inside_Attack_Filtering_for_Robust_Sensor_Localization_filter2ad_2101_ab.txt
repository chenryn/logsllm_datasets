3 . Transmission of one round of beacons,
followed by antenna rotation by π
3 and re-transmission of
the updated beacons is equivalent to transmitting one round
of beacons when locators are equipped with six directional
antennas of beamwidth π
3 .
Equation (2), expresses two different ways of computing
the region of intersection. We can, (a) collect all beacons over
several transmission rounds and compute the intersection of
the all sector areas or, (b) estimate ROI after every round
of transmissions and intersect it with the previous estimate
of the ROI. We will refer to the ﬁrst approach as HiRLoc-I
and the latter approach as HiRLoc-II. Though both of these
approaches result in the same estimate of the ROI, they
exhibit different properties explained below.
the ROI,
2. Varying the Communication range: A second approach
to reduce the area of
is to reduce the size
the intersecting sectors. This can be achieved by
of
allowing locators
transmission power
and re-broadcast beacons with the new communication
the sector area Si(j)
range information. In such a case,
to decrease their
HiRLoc-I: Computing the intersection of all sector areas
In the ﬁrst version of HiRLoc the estimation of the ROI is
computed by collecting all beacons transmitted by each locator
over time, intersecting all sectors of each locator and then
intersecting the outcome.
4
(a)
(b)
(c)
Fig. 2.
(a) The sensor is located within the intersection of the sectors S1(j), S2(j), which deﬁnes the ROI, (b) the locators reduce their communication
range and transmit updated beacons. While s is outside the communication range of L1, it can still hear the transmission of L2. The new beacon information
leads to the reduction of the ROI. (c) The intersection of multiple sectors originating from the same locator with the same angle boundaries but different
transmission range Ri(j) is equal to the sector with the smallest communication range.
(cid:92)
 m(cid:92)
|LHs|
j=0
ROI(m) =
Si(j)
The algorithmic steps performed are:
(4)
transmissions take place). The antenna orientation variation
increases the number of sectors deﬁning the ROI by a factor
of (Q − 1). The number of intersecting sector Si(j) is equal
to Q|LHs|. Hence, the algorithmic complexity for computing
the ROI is increased by a factor of (Q − 1) compared to
SeRLoc [18].
Step 1: Initial estimate of the ROI—In step 1, the sensor
determines the set of locators LHs that will be used for its
localization. Based on the coordinates of the locators Li ∈
LHs, and the maximum communication range of the locators,
denoted as Rmax, the sensor calculates the ﬁrst estimate of
the ROI as follows: Let Xmin, Ymin, Xmax, Ymax denote the
minimum and maximum locator coordinates form the set LHs
deﬁned as:
Xmin = min
Li∈LHs
Ymin = min
Li∈LHs
Xi, Xmax = max
Li∈LHs
Yi, Ymax = max
Li∈LHs
Xi,
Yi.
(5)
Since every locator in set LHs is within a range Rmax
from sensor s,
if s can hear locator Li with coordinates
(Xmin, Yi), it has to be located left from the vertical boundary
of (Xmin + R). Similarly, s has to be located right from
the vertical boundary of (Xmax − R), below the horizontal
boundary of (Ymin + R), and above the horizontal boundary
of (Ymax − R).
Step 2: Beacon collection—In step 2, sensors continue
to collect all
the beacons heard over multiple beacon
transmission rounds3, generated due to changes in the
parameters of the antenna sector. We describe three different
options on the type of parameter changes that the locators
can perform.
Option A: Antenna orientation variation—The locators
rotate their antennas by a pre-speciﬁed angle α = 2π
QM ,
where M is the number of antenna sectors at each locator
and (Q − 1) is the total number of antenna rotations until
the initial conﬁguration is repeated (A total of Q different
3The jth transmission round is deﬁned as the time until every locator
Li ∈ LHs has completed its jth beacon transmission.
Option B: Communication range variation—The locators
reduce their communication range by a pre-speciﬁed amount
at each transmission round. If N is the total number of distinct
communication ranges, the locators reduce the range by Rmax
N ,
at each round.
Note that not all beacons from the same locator provide
useful information for the determination of the ROI. As an
example, consider ﬁgure 2(c) where the locator L1 gradually
reduces its transmission range from Rmax to (N−k)Rmax
.
Since ∩k
j=1Si(j) = Si(k), if a sensor is able to hear the kth
transmission of L1, only the sector area corresponding to
Si(k) contributes to the estimation of the ROI. Hence, all
previous beacons can be ignored. The communication range
variation does not increase the number intersecting areas and
hence does not increase the algorithmic complexity compared
to SeRLoc [18]. The number of sector areas that intersect to
deﬁne the ROI is equal to |LHs|.
N
Option C: Combination of options A, B—Locators can
variate both their communication range and their antenna
orientation, by going through a total of (Q− 1)(N − 1) steps.
The number of sectors Si(j) that intersect to deﬁne the ROI
is (Q − 1)|LHs|, and the algorithmic complexity is equal to
option A.
Step 3: Determination of the ROI—Though analytical
computation of the ROI is achievable based on the intersec-
tion of the boundary lines of the sectors, in order to reduce the
computational complexity, each sensor uses a majority vote-
based scheme as in SeRLoc [18], and described brieﬂy here.
The sensor places a grid of equally spaced points within the
ﬁrst estimate of the ROI computed in Step 1. For each grid
point, the sensor holds a score in a Grid Score Table (GST),
with initial scores set to zero. Let gi denote the ith grid point.
HiRLoc-I: High-resolution Robust Localization Scheme
Li : broadcast { (Xi, Yi) || (θi,1(1), θi,2(1)) || Ri(1)}
s : deﬁne LHs = {Li : (cid:107)s − Li(cid:107) ≤ Ri(1)}
s : deﬁne As = [Xmax − Ri(1), Xmin + Ri(1),
Ymax − Ri(1), Ymin + Ri(1)]
s : store S ← Si(1) : { (Xi, Yi) || (θi,1(1), θi,2(1)) || Ri(1)},
∀Li ∈ LHs
j = 1
for k = 1 : Q − 1
for w = 1 : N − 1
j + +
L reduce R(j) = R(j − 1) − R(1)
L : broadcast { (Xi, Yi) || (θi,1(j), θi,2(j)) || Ri(j)}
s : S ← Si(j) : { (Xi, Yi) || (θi,1(j), θi,2(j)) || Ri(j)},
N
∀Li : (cid:107)s − Li(cid:107) ≤ Ri(j)
Li ∈ LHs
(cid:84)
endfor
j + +
Ri(j) = Ri(1), ∀Li ∈ LHs
M Q , θi,2(j − 1) + 2π
M Q}
L rotate θi(j) = {θi,1(j − 1) + 2π
L : broadcast Li : { (Xi, Yi) || (θi,1(j), θi,2(j)) || Ri(j)}
s : store S ← Si(j) : { (Xi, Yi) || (θ1(j), θ2(j)) || Ri(j)},
∀Li : (cid:107)s − Li(cid:107) ≤ R(j)
Li ∈ LHs
(cid:84)
endfor
s : compute ROI =
(cid:84)|S|
i=1 Si
Fig. 3.
algorithm (version I).
The pseudo-code for the High-resolution Robust Localization
For each grid point gk the sensor increases the corresponding
score in the grid score table with respect to a sector Si(j)
corresponding to a locator Li ∈ LHs if the two following
conditions are satisﬁed:
C1 : (cid:107)gk − Li(cid:107) ≤ Ri(j), C2 : θi,1(j) ≤ φ ≤ θi,2(j), (6)
where φ is the slope of the line connecting gk with Li. The
sensor determines the ROI as the grid points with the highest
score on the grid score table:
ROI = {gi∗ : i∗ = arg max
i
GST (i)}.
(7)
HiRLoc-II: Computing the sector
transmission round
intersection at each
In our second approach, the sensor computes the ROI
by intersecting all collected information at each transmission
round.
m(cid:92)
|LHs(j)|(cid:92)
 .
ROI(m) =
Si(j)
(8)
j=0
i=1
At a transmission round m the sensor intersects the newly
acquired sectors as described in step 3 of HiRLoc-I, and
computes ROIm :
|LHs(m)|(cid:92)
i=1
Si(m).
ROIm =
5
(9)
(cid:92)
m(cid:92)
|LHs(j)|(cid:92)
Si(j)
the sensor intersects the ROIm with the previous
Then,
estimate ROI(m − 1) to acquire the current estimate.
ROI(m) = ROIm
ROI(m − 1) =
j=1
i=1
(10)
HiRLoc-II can be seen as an iterative application of SeRLoc
[18], with sensors using SeRLoc at each transmission round
to estimate ROIt and intersecting it with the previous one.
Comparison of HiRLoc-I and HiRLoc-II: Though both
versions of HiRLoc result in the same ROI estimation once
all transmission rounds have been completed, the two methods
have different algorithmic complexity. In HiRLoc-I we make
use of a smaller number of sectors compared to HiRLoc-II,
since several beacons from the communication range variation
phase are discarded (see step 2). In addition, the intersection
of the ROI with the previous estimate at each transmission
round, adds an extra computational step for HiRLoc-II. On
the other hand,
the sensor has an estimate
of its location at any given time, and does not have to
wait for several transmission rounds to compute the ROI.
Furthermore, the sensor may choose to terminate the algorithm
at some intermediate round, if its location is computed with
sufﬁcient accuracy and hence, reducing the computational
complexity. Note that in HiRLoc-I, sensors may also compute
a ROI estimate at any transmission round if they choose to.
in HiRLoc-II,
C. Security features of HiRLoc
In order
to provide high-resolution robust
localization
in an untrusted environment, HiRLoc is enforced with the
following security features.
Encryption of the beacon transmissions: All the beacons
transmitted from locators are encrypted with a globally
shared symmetric key K0, pre-loaded in every sensor and
locator before deployment. In addition, every sensor s shares
a symmetric pairwise key K Li
s with every locator Li, also
pre-loaded. In order to reduce the storage requirement at each
locator the pairwise keys K Li
are derived by a master key
s
KLi, using a pseudo-random function h [32], and the unique
sensor IDs: K Li
(IDs).
s = hKLi
Authentication of the beacon transmissions: In order to
prevent holders of the common key K0 from broadcasting
bogus beacons, we provide a mechanism that allows sensors
to authenticate the source of the beacons using collision-
resistant hash functions [32]. Each locator Li has a unique
password P Wi, blinded with the use of a collision-resistant
hash function h such as SHA1 [32]. By recursive application
of the hash function, each locator generates a chain of hash
i = 1,··· , n, with
values: h0 = P Wi, hi = h(hi−1),
h0 never revealed to any sensor. The number n of hash
values stored at each locator determines the number of beacon
transmissions that each locator can perform and hence, has
to be large. Due to the collision resistance property, it is
computationally infeasible for any attacker to ﬁnd a P Wj,
such that h(P Wi) = h(P Wj), P Wi (cid:54)= P Wj.
To enable sensors to authenticate a beacon transmission,
each sensor is pre-loaded with a table containing the IDLi
of each locator and the corresponding hash value hn(P Wi).
To reduce the locator storage requirements, locators employ
an efﬁcient storage/computation method for hash chains of
time/storage complexity O(log2(n)) [7].
Authentication mechanism: A locator transmitting its jth
beacon appends the next hash value hn−j(P Wi) towards the
beginning of the hash chain h(P Wi), along with the index
j. Every sensor that hears the beacon, hashes the received
hash value to verify that h(hn−j(P Wi)) = hn−j+1(P Wi).
If the veriﬁcation is correct, the sensor accepts the beacon
information, replaces hn−j+1(P Wi) with hn−j(P Wi) in its
memory, and increases the hash counter by one. The hash
counter facilitates the synchronization with the latest published
hash value, in case of loss of some intermediate hash values.
The jth beacon format of locator Li is as follows:
Li : { loci || (hn−j(P Wi)) (cid:107) j (cid:107) IDLi }K0,
where loci = (Xi, Yi) || (θi,1(j), θi,2(j)) || Ri(j), || denotes
the concatenation operation and {m}K denotes the encryption
of message m with key K. Note that our authentication
mechanism does not prevent a sensor from authenticating a
bogus beacon, if the beacon originates from a locator that is
not within the communication range of the sensor. However,
our method guarantees that beacons originating from the set
of locators directly heard by a sensor s, are indeed authentic.
In our threat analysis we will show that this is a sufﬁcient