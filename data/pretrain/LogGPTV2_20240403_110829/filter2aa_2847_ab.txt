[anon:Mem_0x10001000]
12100000-12122000 rw-p 00000000
[anon:Mem_0x10001000]
12153000-1218c000 rw-p 00000000
[anon:Mem_0x10001000]
e5502000-e598d000 r-xp 00000000
/vendor/lib/libhoudini.so
e598d000-e59bf000 r--p 0048a000
/vendor/lib/libhoudini.so
e59bf000-e59ff000 rw-p 004bc000
/vendor/lib/libhoudini.so
ecdb0000-eceaa000 r-xp 00000000
/system/lib/libc.so
eceaa000-eceae000 r--p 000f9000
/system/lib/libc.so
eceae000-eceb0000 rw-p 000fd000
/system/lib/libc.so
ee0da000-ee0dc000 rwxp 00000000
[anon:Mem_0x10000000]
ee1b5000-ee303000 r-xp 00000000
/system/bin/linker
ee303000-ee309000 r--p 0014d000
/system/bin/linker
ee309000-ee30a000 rw-p 00153000
/system/bin/linker
ff26d000-ffa6c000 rw-p 00000000
[stack]
00008000-0000a000 rw-p 00000000
[anon:Mem_0x10000002]
0c000000-0c001000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c001000-0c002000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c200000-0c203000 r--p 00000000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c203000-0c204000 r--p 00002000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c204000-0c205000 rw-p 00003000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c500000-0c5d6000 r--p 00000000
/vendor/lib/arm/nb/libc.so
0c5d6000-0c5da000 r--p 000d5000
/vendor/lib/arm/nb/libc.so
0c5da000-0c5dc000 rw-p 000d9000
/vendor/lib/arm/nb/libc.so
...
0e094000-10000000 rwxp 00000000
[anon:Mem_0x20000000]
12000000-12100000 rwxp 00000000
[anon:Mem_0x10001000]
12100000-12122000 rw-p 00000000
[anon:Mem_0x10001000]
12153000-1218c000 rw-p 00000000
[anon:Mem_0x10001000]
e5502000-e598d000 r-xp 00000000
/vendor/lib/libhoudini.so
e598d000-e59bf000 r--p 0048a000
/vendor/lib/libhoudini.so
e59bf000-e59ff000 rw-p 004bc000
/vendor/lib/libhoudini.so
ecdb0000-eceaa000 r-xp 00000000
/system/lib/libc.so
eceaa000-eceae000 r--p 000f9000
/system/lib/libc.so
eceae000-eceb0000 rw-p 000fd000
/system/lib/libc.so
ee0da000-ee0dc000 rwxp 00000000
[anon:Mem_0x10000000]
ee1b5000-ee303000 r-xp 00000000
/system/bin/linker
ee303000-ee309000 r--p 0014d000
/system/bin/linker
ee309000-ee30a000 rw-p 00153000
/system/bin/linker
ff26d000-ffa6c000 rw-p 00000000
[stack]
00008000-0000a000 rw-p 00000000
[anon:Mem_0x10000002]
0c000000-0c001000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c001000-0c002000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c200000-0c203000 r--p 00000000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c203000-0c204000 r--p 00002000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c204000-0c205000 rw-p 00003000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c500000-0c5d6000 r--p 00000000
/vendor/lib/arm/nb/libc.so
0c5d6000-0c5da000 r--p 000d5000
/vendor/lib/arm/nb/libc.so
0c5da000-0c5dc000 rw-p 000d9000
/vendor/lib/arm/nb/libc.so
...
0e094000-10000000 rwxp 00000000
[anon:Mem_0x20000000]
12000000-12100000 rwxp 00000000
[anon:Mem_0x10001000]
12100000-12122000 rw-p 00000000
[anon:Mem_0x10001000]
12153000-1218c000 rw-p 00000000
[anon:Mem_0x10001000]
e5502000-e598d000 r-xp 00000000
/vendor/lib/libhoudini.so
e598d000-e59bf000 r--p 0048a000
/vendor/lib/libhoudini.so
e59bf000-e59ff000 rw-p 004bc000
/vendor/lib/libhoudini.so
ecdb0000-eceaa000 r-xp 00000000
/system/lib/libc.so
eceaa000-eceae000 r--p 000f9000
/system/lib/libc.so
eceae000-eceb0000 rw-p 000fd000
/system/lib/libc.so
ee0da000-ee0dc000 rwxp 00000000
[anon:Mem_0x10000000]
ee1b5000-ee303000 r-xp 00000000
/system/bin/linker
ee303000-ee309000 r--p 0014d000
/system/bin/linker
ee309000-ee30a000 rw-p 00153000
/system/bin/linker
ff26d000-ffa6c000 rw-p 00000000
[stack]
00008000-0000a000 rw-p 00000000
[anon:Mem_0x10000002]
0c000000-0c001000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c001000-0c002000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c200000-0c203000 r--p 00000000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c203000-0c204000 r--p 00002000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c204000-0c205000 rw-p 00003000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c500000-0c5d6000 r--p 00000000
/vendor/lib/arm/nb/libc.so
0c5d6000-0c5da000 r--p 000d5000
/vendor/lib/arm/nb/libc.so
0c5da000-0c5dc000 rw-p 000d9000
/vendor/lib/arm/nb/libc.so
...
0e094000-10000000 rwxp 00000000
[anon:Mem_0x20000000]
12000000-12100000 rwxp 00000000
[anon:Mem_0x10001000]
12100000-12122000 rw-p 00000000
[anon:Mem_0x10001000]
12153000-1218c000 rw-p 00000000
[anon:Mem_0x10001000]
e5502000-e598d000 r-xp 00000000
/vendor/lib/libhoudini.so
e598d000-e59bf000 r--p 0048a000
/vendor/lib/libhoudini.so
e59bf000-e59ff000 rw-p 004bc000
/vendor/lib/libhoudini.so
ecdb0000-eceaa000 r-xp 00000000
/system/lib/libc.so
eceaa000-eceae000 r--p 000f9000
/system/lib/libc.so
eceae000-eceb0000 rw-p 000fd000
/system/lib/libc.so
ee0da000-ee0dc000 rwxp 00000000
[anon:Mem_0x10000000]
ee1b5000-ee303000 r-xp 00000000
/system/bin/linker
ee303000-ee309000 r--p 0014d000
/system/bin/linker
ee309000-ee30a000 rw-p 00153000
/system/bin/linker
ff26d000-ffa6c000 rw-p 00000000
[stack]
00008000-0000a000 rw-p 00000000
[anon:Mem_0x10000002]
0c000000-0c001000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c001000-0c002000 r--p 00000000
/vendor/lib/arm/nb/libdl.so
0c200000-0c203000 r--p 00000000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c203000-0c204000 r--p 00002000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c204000-0c205000 rw-p 00003000
/data/app/com.nccgroup.research.../lib/arm/libnative-lib.so
0c500000-0c5d6000 r--p 00000000
/vendor/lib/arm/nb/libc.so
0c5d6000-0c5da000 r--p 000d5000
/vendor/lib/arm/nb/libc.so
0c5da000-0c5dc000 rw-p 000d9000
/vendor/lib/arm/nb/libc.so
...
0e094000-10000000 rwxp 00000000
[anon:Mem_0x20000000]
12000000-12100000 rwxp 00000000
[anon:Mem_0x10001000]
12100000-12122000 rw-p 00000000
[anon:Mem_0x10001000]
12153000-1218c000 rw-p 00000000
[anon:Mem_0x10001000]
e5502000-e598d000 r-xp 00000000
/vendor/lib/libhoudini.so
e598d000-e59bf000 r--p 0048a000
/vendor/lib/libhoudini.so
e59bf000-e59ff000 rw-p 004bc000
/vendor/lib/libhoudini.so
ecdb0000-eceaa000 r-xp 00000000
/system/lib/libc.so
eceaa000-eceae000 r--p 000f9000
/system/lib/libc.so
eceae000-eceb0000 rw-p 000fd000
/system/lib/libc.so
ee0da000-ee0dc000 rwxp 00000000
[anon:Mem_0x10000000]
ee1b5000-ee303000 r-xp 00000000
/system/bin/linker
ee303000-ee309000 r--p 0014d000
/system/bin/linker
ee309000-ee30a000 rw-p 00153000
/system/bin/linker
ff26d000-ffa6c000 rw-p 00000000
[stack]
Houdini Emulator — Execution
• State machine (switch inside while loop), fetch/decode/dispatch shown below
Houdini Emulator — Instruction Table
© NCC Group 2021. All rights reserved
Instruction bits 27-20 concatenated with
bits 7-4 is used as the offset into the table
uint32_t instruction = memory[state.pc];
uint8_t
condition_code = instruction >> 24;
if(condition_code != 0x0E) goto 0x3100AD;
uint32_t offset =
((instruction >> 16) & 0xFF0) + \\ [20:27]
((instruction >>
4) & 0x00F);
\\ [4:7]
void **instruction_table = 0x4BB9C0;
int (*instruction_handler)(uint32_t, struct proc_state*);
instruction_handler = instruction_table[offset];
instruction_handler(instruction, state);
Houdini Emulator — Instruction Table
© NCC Group 2021. All rights reserved
Instruction bits 27-20 concatenated with
bits 7-4 is used as the offset into the table
uint32_t instruction = memory[state.pc];
uint8_t
condition_code = instruction >> 24;
if(condition_code != 0x0E) goto 0x3100AD;
uint32_t offset =
((instruction >> 16) & 0xFF0) + \\ [20:27]
((instruction >>
4) & 0x00F);
\\ [4:7]
void **instruction_table = 0x4BB9C0;
int (*instruction_handler)(uint32_t, struct proc_state*);
instruction_handler = instruction_table[offset];
instruction_handler(instruction, state);
For example, ’mov r0, r1’ is 0xE1A00001
instr[27:20] ∥ instr[7:4] →0x1A1
Each entry is a 32-bit address, so:
0x1A1 ∗ 4 = 0x684
Instruction table offset is 0x4BB9C0
0x4BB9C0 + 0x684 = 0x4BC044
Houdini Emulator — Processor State
© NCC Group 2021. All rights reserved
• Stores ARM registers, as well as other processor states
/* Processor state of libhoudini's emulated ARM */
struct proc_state {
unsigned int
reg[16];
/* Register values for r0, r1, r2... */
unsigned char unk[300];
/* Unknown fields */
unsigned int
isThumb;
/* Whether in thumb mode or not */
unsigned int
svcNumber; /* Pending SVC call number */
unsigned char unk2[40];
/* Unknown fields */
unsigned int
pc8;
/* PC + 8 */
unsigned int
ldrstr;
/* ?? (used for ldr/str instructions) */
unsigned char unk3[84];
/* Unknown fields */
};
• ARM registers can be read/written from both ARM and x86
Houdini Emulator — Syscall
© NCC Group 2021. All rights reserved
• ARM syscalls are handled by userland x86 code that issues x86 syscalls
Houdini Emulator — fork(2)/clone(2)
© NCC Group 2021. All rights reserved
• Intercepted and reimplemented by Houdini
• Houdini clones the process
• The child process handles the child fork/clone logic
• The parent process handles the fork/clone logic
• clone(2) child_stack not passed to the kernel
• Instead an empty RWX page is passed as child_stack
Houdini Emulator — Detection
© NCC Group 2021. All rights reserved
Java architecture checking
• System.getProperty("os.arch");
• /proc/cpuinfo
Houdini Emulator — Detection
© NCC Group 2021. All rights reserved
Java architecture checking
• System.getProperty("os.arch");
• /proc/cpuinfo
Houdini hides these
System.getProperty("os.arch") -> armv7l
$ cat /proc/cpuinfo
Processor
: ARMv8 processor rev 1 (aarch64)
processor
: 0
processor
: 1
BogoMIPS
: 24.00
Features
: neon vfp half thumb fastmult edsp
vfpv3 vfpv4 idiva idivt tls aes sha1 sha2 crc32
CPU implementer : 0x4e
CPU architecture: 8
CPU variant
: 0x02
CPU part
: 0x000
CPU revision
: 1
Hardware
: placeholder
Revision
: 0000
Serial
: 0000000000000000
Houdini Emulator — Detection
© NCC Group 2021. All rights reserved
Java architecture checking
• System.getProperty("os.arch");
• /proc/cpuinfo
Memory mapping checking
• /proc/self/maps
• Dual x86/ARM shared libraries
Houdini hides these
System.getProperty("os.arch") -> armv7l
$ cat /proc/cpuinfo
Processor
: ARMv8 processor rev 1 (aarch64)
processor
: 0
processor
: 1
BogoMIPS
: 24.00
Features