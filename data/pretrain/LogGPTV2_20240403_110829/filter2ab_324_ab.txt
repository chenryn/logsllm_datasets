mput *n 这条指令不会被匹配,
于是 mput 会试图把文件名为 "*n" 的本地文件传到远端,
如果本地没有这个名为 "*n" 的文件, ftp 就会报错.
2、
mput 是把本地文件送到远端机器, 故其匹配规则与本地 shell的文件名匹配一致.
mget, mdelete 则是把远端机器上的文件送到本地,
故其匹配规则和最终结果要取决于远端系统.
3、
考虑如下情况: 远端机器上有三个文件 Xie, Wen, Min
如果执行 mget X* W* *n,
显然, 匹配结果会是 Xie Wen Min Wen.
虽然 Wen 这个文件出现了两次,
但 ftp 不会把这两个文件名合为一个,
所以 Wen 这个文件会被 mget 两次, 第二次覆盖第一次.
如果 mdel X* W* *n, Wen 这个文件会被删两次, 第二次报错.)
.It Ic hash
转换 hash 状态, 即是否显示数据传输进度. 如果 hash 状态为 on,
每传送完一个 1024 字节的数据块时显示一个 # 号.
.It Ic help Op Ar command
显示指定命令
.Ar command
的简要说明. 如果不指定参数, 本命令列出所有已知的
.Nm ftp
命令.
.It Ic idle Op Ar seconds
将远端服务器的最长空闲时间设为
.Ar seconds
秒.
如果不指定参数
.Ar seconds,
则本命令显示当前的最长空闲时间值.
（译者注：如果在最长空闲时间内没执行任何 ftp 命令,
与远端机器的连接将自动终止. ）
.It Ic lcd Op Ar directory
改变本地的当前工作目录. 如果不指定参数
.Ar directory,
则切换到用户的 home 目录.
.It Xo
.Ic \&ls
.Op Ar remote-directory
.Op Ar local-file
.Xc
显示远端机器目录下的文件名列表. 具体如何显示与远端系统有关;
例如, 大多数
.Ux
系统显示 shell 命令 ls -l 的输出 (参阅 nlist ).
如果不指定
.Ar remote-directory
则显示远端机器当前目录的内容.
如果 prompt 状态为 on ,
.Nm ftp
会提示用户确认最后一个参数是用来存放
.Ic \&ls
显示结果的本地文件. 如果不指定
.Ar local-file
, 或者
.Ar local-file
指定为
.Sq Fl ,
则结果显示到用户终端上. 可以在本命令中用引号指定附加参数.
例如, 如果远端系统为
.Ux ,
则 ls "-rt /usr" 这条命令会显示远端机器 /usr 这个目录下的文件,
显示结果按创建时间由远到近排序.
.It Ic macdef Ar macro-name
定义一个宏. 执行本命令后, 接下来输入的内容会存放到宏
.Ar macro-name
里. 空行 (文件中的连续换行, 或终端的回车换行) 表示宏定义结束.
最多只能定义 16 条宏, 而且所有的宏内容加起来不能超过 4096 字节.
执行
.Ic close
命令后所有的宏定义会被清除.
在宏中, $ 和 \e 这两个字符为特殊字符.
$ 字符后跟数字, 将在这个宏在执行时将替换为命令行中的参数.
$ 字符后跟字符 i , 表示循环执行当前宏.
在循环的第一次, $i 被替换为命令行中的第一个参数;
第二次, 替换为第二个参数, 以此类推.
\e 后面跟一个字符, 表示这个字符本身.
例如, \e 可以去掉 $ 的特殊意义, 表示 $ 这个字符本身.
.It Ic mdelete Op Ar remote-files
删除远端机器文件
.Ar remote-files.
.It Ic mdir Ar remote-files local-file
和
.Ic dir
命令相似, 但是允许你指定多个远端文件. 如果 prompt 状态为 on,
.Nm ftp
会提示用户确认最后一个参数是用来存放输出结果的本地文件.
.It Ic mget Ar remote-files
匹配参数
.Ar remote-files
中指定的远端文件名, 对匹配结果里的每个文件都执行一个
.Ic get
命令. 关于文件名匹配, 请参阅
.Ic glob
命令. 根据当前的
.Ic case,
.Ic ntrans,
和
.Ic nmap
状态, 远端文件名在经过适当的转换后, 作为本地文件名使用.
文件被传输到本地机器的当前目录. 你可以用
.Ql lcd directory
命令改变本地机器的当前目录, 也可以用
.Ql "\&! mkdir directory"
命令新建本地目录.
.It Ic mkdir Ar directory-name
在远端机器上创建目录.
.It Ic mls Ar remote-files local-file
和
.Ic nlist
命令相似, 但是允许你指定多个远端文件, 而且
.Ar local-file
这个参数必须指定. 如果 prompt 状态为 on,
.Nm ftp
会提示用户确认最后一个参数是用来存放输出结果的本地文件.
.It Ic mode Op Ar mode-name
将文件传输模式设置为
.Ar mode-name
所指定的模式. 缺省模式为 \*(Lqstream\*(Rq 模式. ??
.It Ic modtime Ar file-name
显示远端机器上文件的最后修改时间.
.It Ic mput Ar local-files
匹配参数中指定的本地文件名, 对匹配结果里的每个文件都执行一个
.Ic put
命令. 关于文件名匹配, 请参阅
.Ic glob
命令. 根据当前的
.Ic ntrans
和
.Ic nmap
状态, 本地文件名在经过适当的转换后, 作为远端文件名使用.
.It Ic newer Ar file-name Op Ar local-file
比较远端文件和本地文件的修改时间, 如果远端文件比本地文件新,
或本地文件不存在, 则从远端机器上取此文件.
.It Xo
.Ic nlist
.Op Ar remote-directory
.Op Ar local-file
.Xc
显示远端机器上指定目录下的文件列表.
如果不指定参数
.Ar remote-directory,
则显示远端机器当前目录的内容.
如果 prompt 状态为 on,
.Nm ftp
会提示用户确认最后一个参数是用来存放显示结果的本地文件.
如果不指定本地文件
.Ar local-file,
或者本地文件
.Ar local-file
指定为
.Sq Fl,
显示结果会在用户终端上显示出来.
.It Ic nmap Op Ar inpattern outpattern
设置或取消文件名映射机制. 如果不指定参数, 则本命令取消文件名映射机制.
如果指定了参数, 则在执行
.Ic mput
或
.Ic put
命令, 且不指定远端文件名时, 远端文件名会被映射;
在执行
.Ic mget
或
.Ic get
命令, 且不指定本地文件名时, 本地文件名会被映射.
非 unix 的远端系统常使用不同于 unix 的文件命名规则,
当用 ftp 连接到这样的远端系统时, 本命令会很有用处.
转换规则由参数
.Ar inpattern
和
.Ar outpattern
决定.
一个文件名会先经过
.Ic ntrans
和
.Ic case
的转换, 再按照
.Ar inpattern
进行
.Ic nmap
映射. 参数
.Ar inpattern
指定转换前的文件命名规则. 参数
.Ar outpattern
指定转换后的文件命名规则. 在
.Ar inpattern
和
.Ar outpattern
这两个参数中, 用 $1, $2, ..., $9 来替代变量; 用 \e$ 替代 $ 字符;
其余的字符则没有特殊含义. 例如, 若
.Ar inpattern
为 $1.$2, 则对于文件名 mydata.data, $1 取值 mydata, $2取值 data.
结果文件名由
.Ar outpattern
决定. 在
.Ar outpattern
中, $1, $2, ..., $9 被相应的取值代替, 作为最终结果.
$0 被替换为整个原始文件名. 对方括号括起来的两个变量 [$x,$y] 而言,
若 $x 非空, 则其相当于 $x; 否则相当于 $y (以上 x,y 为数字).
举例如下:
输入命令行 nmap $1.$2.$3 [$1,$2].[$2,file], 则
原始文件名 myfile.data 会被映射为 myfile.data,
原始文件名 myfile.data.old 会被映射为 myfile.data,
原始文件名 myfile 会被映射为 myfile.file,
原始文件名 .myfile 会被映射为 myfile.myfile,
Spaces may be included in
.Ar outpattern,
as in the example: `nmap $1 sed "s/  *$//" > $1' . ??
(译者注: 这一段我没看懂, 也没试出来.)
`$', '[', ']', `,' 这四个字符有特殊含义, 所以若要使用这四个字符,
需在前面加上 \\ 以去掉其特殊含义.
.It Ic ntrans Op Ar inchars Op Ar outchars
设置或取消文件名字符转换机制. 如果不指定参数,
则本命令取消文件名字符转换机制. 如果指定了参数, 则在执行
.Ic mput
和
.Ic put
命令, 且不指定远端文件名时, 远端文件名中的字符会被转换;
在执行
.Ic mget
和
.Ic get
命令, 且不指定本地文件名时, 本地文件名中的字符会被转换.
非 unix 的远端系统常使用不同于 unix 的文件命名规则,
用 ftp 连接到这样的远端系统时, 本命令会很有用处.
原始文件名中的
.Ar inchars
会被替换为对应的
.Ar outchars.
如果 inchar 字符串比 outchar 长, 则多出的那一部分字符会从原始文件名中删掉.
.It Ic open Ar host Op Ar port
连接到指定的远端主机
.Ar host
.Tn FTP
服务器. 端口号
.Nm ftp
是可选的; 如果指定了端口号,
.Nm ftp
会尝试使用这个指定的端口号连接远端
.Tn FTP
主机. 如果自动登陆选项
.Ic auto-login
是打开的话 (缺省为打开),
.Nm ftp
还会尝试自动登陆.  (详见下述)
.It Ic prompt
转换 prompt 状态, 即是否进行交互提示. 如果 prompt 状态为 on ,
在传送多个文件时, ftp 会提示用户选择要上传或下载的文件;
如果 prompt 状态为 off (缺省为 on),
.Ic mget
和
.Ic mput
这两个命令会不加提示地传送所有指定的文件,
.Ic mdelete
会不加提示地删掉所有指定的文件.
.It Ic proxy Ar ftp-command
在副连接上执行 ftp 命令. 本命令允许同时连接到两个远端 ftp 服务器,
并在这两个远端服务器之间传送文件.
(译者注: 原始的 ftp 所建立的连接为 primary control connection, 主连接;
使用 proxy open 所建立的连接为 secondary control connection, 副连接.
在副连接上运行 ftp 命令, 即在 ftp 命令前加上 proxy 前缀, 如
proxy open, proxy put 等. 以下将这种 ``proxy ftp command'' 译为 "代理命令".)
第一个执行的代理命令应该是
.Ic open
命令, 用来建立副连接.
运行 "proxy ?" 命令, 可以看到所有能在副连接中运行的 ftp 命令.
以下的 ftp 命令在副连接中运行时, 效果与在主连接中不同:
在自动登录过程中,
.Ic open
不会定义新的宏;
.Ic close
不会清除已有的宏定义;
.Ic get
和
.Ic mget
将文件从主连接的远端主机传送到副连接的远端主机;
.Ic put  ,
.Ic mput ,
和
.Ic append
将文件从副连接的远端主机传至主连接的远端主机.
第三方文件传输取决于副连接的远端主机是否支持 ftp 协议中的
.Dv PASV
命令.
.It Ic put Ar local-file Op Ar remote-file
将本地文件传至远端主机. 如果不指定参数
.Ar remote-file,
则根据当前的
.Ic ntrans
和
.Ic nmap
状态, 本地文件名在经过适当的转换后, 作为远端文件名使用.
在文件传输过程中会用到当前的
.Ic type,
.Ic format,
.Ic mode
和
.Ic structure
状态.
.It Ic pwd
显示远端机器的当前路径.
.It Ic quit
同
.Ic bye
命令.
.It Ic quote Ar arg1 arg2 ...
将你指定的参数原样送到远端
.Tn FTP
服务器.
(译者注: 你输入的 ftp 命令, 经由本地 ftp 客户程序解释,
转换成 ftp 协议命令, 再发送给远端 ftp 服务程序.
这些转换后的 ftp 协议命令, 叫做 raw ftp command,
也就是本命令所能使用的参数. 关于这些参数, 请参阅 remotehelp 命令.
下文中出现的大写字母的命令都是 raw ftp command.)
.It Ic recv Ar remote-file Op Ar local-file