Stopping a default detail trace
• Using the command line:
CALL PGM(QMQM/ENDMQTRC)
• Using the Qshell:
/QSYS.LIB/QMQM.LIB/ENDMQTRC.PGM
Using endmqtrc with no parameters has the same effect as endmqtrc -e. You cannot specify the
-e parameter with the -m parameter, the -i parameter, or the -p parameter.
Stopping a trace of queue manager QMA
• Using the command line:
CALL PGM(QMQM/ENDMQTRC) PARM('-m' 'QMA')
• Using the Qshell:
/QSYS.LIB/QMQM.LIB/ENDMQTRC.PGM -m QMA
Stopping a trace of jobs named AMQSPUT
• Using the command line:
CALL PGM(QMQM/ENDMQTRC) PARM('-p' 'AMQSPUT')
• Using the Qshell:
/QSYS.LIB/QMQM.LIB/ENDMQTRC.PGM -p AMQSPUT
IBM MQ troubleshooting and support 389
Stopping an early trace
• Using the command line:
CALL PGM(QMQM/ENDMQTRC) PARM('-e')
• Using the Qshell:
/QSYS.LIB/QMQM.LIB/STRMQTRC.PGM -e
4.Optional: Format the binary trace files.
The trace files generated by IBM MQ are binary, and must be formatted before they can be read. You
can either send the binary traces to IBM, or you can format them at the Qshell at a time when your
system is not under heavy load. If you format the traces yourself, delete the binary trace files before
sending your files to IBM:
• Using the command line to delete the binary trace files:
RMVLNK OBJLNK('/QIBM/UserData/mqm/trace/AMQ*.?.TR?')
• Using the Qshell to display a formatted trace file using the DSPMQTRC command and then delete the
binary trace files:
cd /QIBM/UserData/mqm/trace
/QSYS.LIB/QMQM.LIB/DSPMQTRC.PGM AMQ*.TR?
rm -f AMQ*.?.TR?
5.Collect the traces and any other troubleshooting information relating to your problem.
You can do this either automatically or manually:
• Collect the data automatically by using the runmqras command as described in “Collecting
troubleshooting information automatically with runmqras” on page 303. If you are using the
runmqras command to collect IBM MQ troubleshooting information and you need to include trace
data, you must include trace in the section names that you specify for the -section parameter.
If the traces are very large, you might need to use the -workdirectory option to package the files
in a directory with plenty of free space.
You must run the runmqras command at the Qshell as shown in the following example:
/QIBM/ProdData/mqm/bin/runmqras -section trace,defs,cluster -caseno TS001234567 -qmlist
QMA
• Alternatively, collect the data manually as described in “Collecting troubleshooting information
manually” on page 306.
6.Send the traces and any other troubleshooting information that you have collected for the same
problem to IBM.
For more information, see “Sending troubleshooting information to IBM” on page 353.
7.Clean up the trace directory to reclaim space and also to make sure you are ready to generate new
traces in future, if necessary.
• Using the command line:
RMVLNK OBJLNK('/QIBM/UserData/mqm/trace/AMQ*.*')
• Using the Qshell:
cd /QIBM/UserData/mqm/trace
rm -f AMQ*.*
Related concepts
“FFST: IBM MQ for IBM i” on page 365
390 Troubleshooting and Support for IBM MQ
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files for IBM i
systems.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
information described in this section, IBM Support might request further information on a case by case
basis.
Tracing on Windows
On Windows, you can use the strmqtrc and endmqtrc commands to start and end tracing. You can also
use IBM MQ Explorer to start and end tracing.
Before you begin
To format or view a trace file, you must be either the creator of the trace file, or a member of the mqm
group.
About this task
Traces can capture the root cause of many IBM MQ problems. It is important to limit how long tracing is
active in order to avoid affecting performance or generating excessively large trace files and filling up your
disk.
On Windows, you use the following commands to control the trace facility:
strmqtrc
On Windows systems, you enable or modify tracing using the strmqtrc control command. The
command has optional parameters that specify the level of tracing you want. For example:
• For selective component tracing, use the -t and -x parameters to control the amount of trace detail
to record. Specify the points that you want to trace by using the -t parameter or the points you do
not want to trace by using the -x parameter. You can run multiple traces with different parameters
at the same time, if necessary.
• For selective process tracing, use the -p parameter to restrict trace generation to specified named
processes.
• To prevent IBM MQ from including any message data in its traces, use the -d 0 parameter.
For more information, see strmqtrc (start trace).
endmqtrc
To stop tracing, you use the endmqtrc control command. The endmqtrc command ends only the
trace that is described by its parameters. Using endmqtrc with no parameters ends early tracing of all
processes. For more information, see endmqtrc (end trace).
On Windows systems, you can alternatively use IBM MQ Explorer to start and stop tracing as follows:
1.Start the IBM MQ Explorer from the Start menu.
2.In the Navigator View, right-click the IBM MQ tree node, and select Trace.... The Trace Dialog is
displayed.
3.Click Start or Stop as appropriate.
The output files are created in the MQ_DATA_PATH/trace directory.
Trace files are named AMQppppp.qq.TRC where the variables are:
ppppp
The ID of the process reporting the error.
IBM MQ troubleshooting and support 391
qq
A sequence number, starting at 0. If the full file name exists, this value is incremented by one until a
unique trace file name is found. A trace file name can exist if a process is reused.
Note:
1.The process identifier can contain fewer, or more, digits than shown in the example.
2.There is one trace file for each process running as part of the entity being traced.
SSL trace files have the names AMQ.SSL.TRC and AMQ.SSL.TRC.1.
The trace files generated by IBM MQ on Windows are readable text files (except for AMQ.SSL.TRC and
AMQ.SSL.TRC.1, if present). On Windows, trace files do not need to be formatted before you send them
to IBM Support.
Procedure
1.If you have multiple installations of IBM MQ on a single Windows system, make sure that your
environment is set for the installation that you want to trace.
For example, if you are tracing a queue manager or application associated with Installation1, then you
must use the setmqenv command to switch to Installation1 before running any of the commands to
start, stop, or format traces, otherwise, your trace will capture no useful information.
Check the /etc/opt/mqm/mqinst.ini file to determine the location of the IBM MQ installations on
your system. Use the setmqenv command to set your environment for the installation you want to
trace.
For example:
Setting your environment for Installation1
"C:\Program Files\IBM\MQ\bin\setmqenv" -n Installation1
Setting your environment for the installation with queue manager QMA
"C:\Program Files\IBM\MQ\bin\setmqenv" -m QMA
The traces are written to the trace subdirectory under the path given by the MQ_DATA_PATH
environment variable. After running setmqenv, you can find the location of the trace directory by
running:
echo "%MQ_DATA_PATH%\trace"
2.Start tracing with the strmqtrc command.
By default all trace points are enabled and a default-detail trace is generated. The parameters passed
to strmqtrc control which processes generate trace files and what kinds of data they trace. For
example:
Tracing only data flowing over communications networks
strmqtrc -x all -t comms
Starting a default detail trace of queue manager QMA
strmqtrc -m QMA
Starting a default detail trace of queue manager QMB with no message data included
strmqtrc -m QMB -d 0
Starting an API trace of processes named amqsput with all message data included
strmqtrc -t api -p amqsput -d all
392 Troubleshooting and Support for IBM MQ
Starting a high detail trace of everything with files that wrap at 100MB
strmqtrc -e -t all -t detail -l 100
3.Reproduce the problem while tracing is active, making every attempt to keep the trace as short as
possible.
To check trace status use the -s parameter of the strmqtrc command:
strmqtrc -s
4.Stop tracing with the endmqtrc command.
As soon as the problem has occurred, stop tracing immediately. If you wait to stop the trace, the data
that IBM Support needs might be lost or overwritten. You can stop all traces at once, or you can stop
each trace individually. For example:
Stopping all traces in an installation
endmqtrc -a
Stopping a trace of queue manager QMA
endmqtrc -m QMA
Stopping a trace of processes named amqsput
endmqtrc -p amqsput
5.Collect the traces and any other troubleshooting information relating to your problem.
If you are using the runmqras command to collect IBM MQ troubleshooting information and you need
to include trace data, you must include trace in the section names that you specify for the -section
parameter. If the traces are very large, you might need to use the -workdirectory option to package
the files in a directory with plenty of free space. For more information, see “Collecting troubleshooting
information automatically with runmqras” on page 303.
6.Send the traces and any other troubleshooting information that you have collected for the same
problem to IBM.
For more information, see “Sending troubleshooting information to IBM” on page 353.
7.Clean up the trace directory
Save a copy of the trace files as long as you are working with IBM Support, but keep them somewhere
other than the trace directory. Clean up the trace directory to reclaim space and also to make sure you
are ready to generate new traces in future, if necessary. For example:
C:\> CD "%MQ_DATA_PATH%\trace"
C:\ProgramData\IBM\MQ\trace> DEL AMQ*.TRC AMQ*.TRS
Related concepts
“FFST: IBM MQ for Windows” on page 367
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files for
Windows systems.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
IBM MQ troubleshooting and support 393
information described in this section, IBM Support might request further information on a case by case
basis.
Example trace data for Windows
An extract from an IBM MQ for Windows trace file.
TimeStamp PID.TID Ident Data
============================================================
10:55:33.033870 4996.1 : ---{ zutLookupInitialize
10:55:33.033877 4996.1 : ----{ xcsCreateThreadMutexSem
10:55:33.033889 4996.1 : hmtx: 000001DD32A9E0A0, created: TRUE
10:55:33.033896 4996.1 : ----} xcsCreateThreadMutexSem (rc=OK)
10:55:33.033903 4996.1 : ----{ xcsGetMemFn
10:55:33.033911 4996.1 : Data: 0x000001dd 0x32ab1b30
10:55:33.033923 4996.1 : component:33 function:431 length:496 options:0
cbmindex:-1 *pointer:000001DD32AB1B30
10:55:33.033932 4996.1 : ----} xcsGetMemFn (rc=OK)
10:55:33.033985 4996.1 : ---} zutLookupInitialize (rc=OK)
10:55:33.034004 4996.1 : ---{ xcsGetEnvironmentInteger
10:55:33.034012 4996.1 : ----{ xcsGetEnvironmentString
10:55:33.034027 4996.1 : xcsGetEnvironmentString[AMQ_BACKWARDS_TIME_LIMIT] =
NULL
10:55:33.034034 4996.1 : ----}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034065 4996.1 : ---}! xcsGetEnvironmentInteger
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034073 4996.1 : ---{ xcsReleaseThreadMutexSem
10:55:33.034078 4996.1 : hmtx: 000001DD32A9DE90
10:55:33.034086 4996.1 : ---} xcsReleaseThreadMutexSem (rc=OK)
10:55:33.034089 4996.1 : ---{ xcsGetEnvironmentString
10:55:33.034099 4996.1 : xcsGetEnvironmentString[AMQ_REUSE_SHARED_THREAD] =
NULL
10:55:33.034106 4996.1 : ---}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034114 4996.1 : ---{ xcsGetEnvironmentInteger
10:55:33.034118 4996.1 : ----{ xcsGetEnvironmentString
10:55:33.034124 4996.1 : xcsGetEnvironmentString[AMQ_AFFINITY_MASK] = NULL
10:55:33.034131 4996.1 : ----}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034138 4996.1 : ---}! xcsGetEnvironmentInteger
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034146 4996.1 : ---{ xcsGetEnvironmentString
10:55:33.034153 4996.1 : xcsGetEnvironmentString[AMQ_FFSTINFO] = NULL
10:55:33.034160 4996.1 : ---}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034168 4996.1 : ---{ xcsGetEnvironmentString
10:55:33.034176 4996.1 : xcsGetEnvironmentString[AMQ_CHECK_SEM_OBJECTS] = NULL
10:55:33.034183 4996.1 : ---}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034191 4996.1 : ---{ xcsGetEnvironmentString
10:55:33.034199 4996.1 :
xcsGetEnvironmentString[AMQ_OVERRIDE_CONVERSION_TABLE] = NULL
10:55:33.034207 4996.1 : ---}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034215 4996.1 : ---{ xcsGetEnvironmentString
10:55:33.034223 4996.1 : xcsGetEnvironmentString[AMQ_OVERRIDE_CCSID_TABLE] =
NULL
10:55:33.034230 4996.1 : ---}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034237 4996.1 : ---{ xcsGetEnvironmentInteger
10:55:33.034241 4996.1 : ----{ xcsGetEnvironmentString
10:55:33.034248 4996.1 : xcsGetEnvironmentString[AMQ_CBM_REUSE_FACTOR] = NULL
10:55:33.034255 4996.1 : ----}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034262 4996.1 : ---}! xcsGetEnvironmentInteger
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034270 4996.1 : ---{ xcsGetEnvironmentInteger
10:55:33.034274 4996.1 : ----{ xcsGetEnvironmentString
10:55:33.034282 4996.1 : xcsGetEnvironmentString[AMQ_CBM_MAX_CACHEABLE_SIZE]
= NULL
10:55:33.034289 4996.1 : ----}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034296 4996.1 : ---}! xcsGetEnvironmentInteger
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034304 4996.1 : ---{ xcsGetEnvironmentInteger
10:55:33.034308 4996.1 : ----{ xcsGetEnvironmentString
10:55:33.034314 4996.1 : xcsGetEnvironmentString[AMQ_CBM_LEN] = NULL
394 Troubleshooting and Support for IBM MQ
10:55:33.034322 4996.1 : ----}! xcsGetEnvironmentString
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034330 4996.1 : ---}! xcsGetEnvironmentInteger
(rc=xecE_E_ENV_VAR_NOT_FOUND)
10:55:33.034337 4996.1 : --} InitProcessInitialisation (rc=OK)
Tracing on z/OS
There are different trace options that can be used for problem determination with IBM MQ. Use this topic
to understand the different options and how to control trace.
About this task
The trace facilities available with IBM MQ for z/OS are:
• The user parameter (or API) trace
• The IBM internal trace used by the support center
• The channel initiator trace
• The line trace
Use the following links to find out how to collect and interpret the data produced by the user parameter
trace, and describes how to produce the IBM internal trace for use by the IBM support center. There is
also information about the other trace facilities that you can use with IBM MQ.
• Controlling the GTF for your z/OS system
• Controlling the IBM MQ trace for each queue manager subsystem for which you want to collect data
• “Formatting and identifying the control block information on z/OS” on page 398
• “Interpreting the trace information on z/OS” on page 399
If trace data is not produced, check the following:
• Was the GTF started correctly, specifying EIDs 5E9, 5EA, and 5EE on the USRP option?
• Was the START TRACE(GLOBAL) command entered correctly, and were the relevant classes specified?
Other trace options available on z/OS are:
• The channel initiator trace
• The line trace
• The CICS adapter trace
• System SSL trace