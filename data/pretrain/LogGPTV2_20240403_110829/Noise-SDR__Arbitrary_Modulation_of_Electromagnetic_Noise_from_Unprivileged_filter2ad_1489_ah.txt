Digital phase
Digital phase (two values)
Digital phase (four values)
Code to spread the spectrum
Chirp to spread the spectrum
Orthogonal subcarriers
Filter lower half band
θbb[i/Fs]) of the intermediate frequency wave, that is then sent to
the radio-frequency stage. a[i]=abb[i/Fs] and θ[i]=θbb[i/Fs] are
chosen based on the bits to transmit and the specifications of the pro-
tocols. The simplest example is OOK with symbol duration Tsym. In
this case, a bit ‘1’ consists of the samples x[i]=cos(2πfIF i/Fs) for
i=[0,TsymFs], whereas a ‘0’ is x[i]=0 for i=[0,TsymFs]. Similar
exaplanations exist for other modulations, and their C++ implemen-
tation is visible in Fldigi [56] and GNURadio [68] source code.
APPENDIX B
IMPLEMENTATION DETAILS
RF-PWM: Conversion from a sinusoidal IF carrier (modulated
in amplitude/frequency/phase) to an RF-PWM square wave is
straightforward following Equation 2. Figure 6 visualizes the process.
Listing 1 shows our C++ implementation used in Fldigi-Noise-SDR.
Leakage generation: Noise-SDR requires a source of leakage
(Section IV). Inspired by previous work on exfiltration [1], [3],
[8], [44], [45] and Rowhammer [66], [67], we have implemented
Noise-SDR on x86-64, ARMv7-A, ARMv8-A, and MIPS32. The code
sequence (leakyOperation) used to trigger the leakage emission
during the high periods of the RF-PWM square wave is shown in
Listing 2, Listing 3, Listing 4, and Listing 5, respectively.
Leakage control: To generate the desired RF-PWM square wave,
Noise-SDR simply alternates an operation with strong leakage
(during the high period) with inactivity (during the low period).
The timings of the square wave (high and low periods) are stored in
a static array (filled by the RF-PWM stage) for fast access. The code
that controls the square wave is shown in Listing 6. Timing measure-
ments (get ns()) that control the pulses are based on clock getttime.
The fundamental difference between this code and that provided in
previous work is that duty-cycle, frequency, and phase of the pulses
are controlled in a generic way following an RF-PWM square wave,
to modulate an arbitrary sinusoidal signal on the first harmonic.
Time resolution, quantization levels, and bandwidth: Noise-
SDR is implemented in software and therefore it works at discrete
while (i
= 0) {
j++;
if (outputBuffer[i + j] > a)
a = outputBuffer[i + j];
}
while (i + j > 2fIF . RF-PWM approximates x(t)
with the fundamental component of a square wave at fRF−P W M =
FIF , exploiting the fact that x(t) is a band-pass signal, too. Conse-
quently, PWM requires a higher time resolution to generate a square
wave at higher frequency. This would become quickly impractical
using leakage. An in-depth comparison of the two techniques is
outside the scope of this paper, and can be found in [30].
π
Fig. 15. Comparison between PWM (top) and RF-PWM (bottom).
TESTING THE PRESENCE OF CONTROLLABLE LEAKAGE ON SMARTPHONES
TABLE VI
Model
Innos D6000
Nokia 3.1
Samsung Galaxy A30S
Samsung S7 Exynos
Samsung Galaxy S5 Mini
Samsung M31
Samsung Galaxy J7
Samsung Galaxy Young
Sony Xperia C5
Sony Xperia X
Motorola Moto E6S
Google Nexus 5
Google Pixel XL
Google Pixel 2
Wiko Fever
Huawei P8 Lite
Huawei P10
Huawei P8 SE
OnePlus 7 Pro PE
ARM
V8-A
V8-A
V8-A
V8-A
V7-A
V8-A
V8-A
V7-A
V8-A
V8-A
V7-A
V7-A
V8-A
V8-A
V8-A
V8-A
V8-A
V8-A
V8-A
DRAM
LPDDR3
LPDDR3
LPDDR4
LPDDR4
n.a.
LPDDR4
LPDDR3
n.a.
LPPDR4
LPDDR3
LPDDR3
LPDDR2
LPDDR4
LPDDR4
LPDDR3
LPDDR3
LPDDR4
LPDDR3
LPDDR4
f (MHz)
400
13.56
1794
1794
200
1794
-
-
400
-
400
200
-
-
-
-
-
-
-
Harmonics n
1−4
7 (NFC)
1
1
1-11,
13-19,26
1 (rare)
-
-
1-11
-
1,2
1−5,8,12
16,20,24
-
-
-
-
-
-
-
APPENDIX C
ADDITIONAL EXPERIMENTAL DATA
Controllable leakage on additional devices: We studied the
existance of controllable leakage on many smartphones. In particular,
we tested the existence of leakage that can be modulated with simple
tunes and chirps by unprivileged software, which is a necessary
requirement for Noise-SDR and other Soft-TEMPEST techniques.
As shown in Table VI, in many devices one or more harmonics of an
electromagnetic leakage can be controlled by performing memory
accesses. The Samsung Galaxy A30S is noticeable because it is able
to transmit a GLONASS C/A code at 800 MHz as we explained
in Section IX. In addition, we also analyzed a laptop (Dell Inspiron
14R 5437). It has a DDR3 DRAM with SSC at 800 MHz. We tested
NBFM, PSK31, RTTY45, MFSK128, and Olivia on one SSC sub-
harmonic at 800 MHz, with the antenna in proximity to the device.
Modulating an intentional radio carrier: The Nokia 3.1 in
Table VI is particularly interesting. Since we did not observe
any leakage from DRAM, we might think that exfiltration is not
possible. However, we noticed that DRAM accesses modulate the
radio carrier intentionally emitted at relatively high power by the
NFC reader when close to a tag. This is probably due to some
coupling effect on the smartphone platform that hosts both the
DRAM and the NFC reader. As a result, we were able to use
Noise-SDR to transmit, for example, with PSK31.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:24:04 UTC from IEEE Xplore.  Restrictions apply. 
1210