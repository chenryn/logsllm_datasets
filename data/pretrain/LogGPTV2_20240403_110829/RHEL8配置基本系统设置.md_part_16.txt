    另外，要在不关闭机器的情况下关闭和停止系统，请使用：
    ``` literallayout
    systemctl halt
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，运行其中任何一个命令会导致 systemd
向所有当前登录该系统的用户发送信息。要防止 systemd 发送此消息，请使用
`--no-wall`{.literal} 命令行选项运行所选命令。
:::
::: itemizedlist
**其它资源**
-   [使用 shutdown
    命令关闭系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#shutting-down-the-system-using-shutdown-command_shutting-down-suspending-and-hibernating-the-system){.link}
:::
:::
::: section
::: titlepage
# []{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#restarting-the-system_shutting-down-suspending-and-hibernating-the-system}重启系统 {.title}
:::
您可以按照这个步骤重启该系统。
::: itemizedlist
**先决条件**
-   切换到 `root`{.literal} 用户
:::
::: itemizedlist
**流程**
-   要重启该系统，请运行以下命令：
    ``` literallayout
    systemctl reboot
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，这个命令可让 systemd
向所有当前登录该系统的用户发送信息。要防止 systemd 发送此消息，请使用
`--no-wall`{.literal} 命令行选项运行这个命令。
:::
:::
::: section
::: titlepage
# []{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#suspending-the-system_shutting-down-suspending-and-hibernating-the-system}挂起系统 {.title}
:::
您可以按照这个步骤挂起系统。
::: itemizedlist
**先决条件**
-   切换到 `root`{.literal} 用户。
:::
::: itemizedlist
**流程**
-   要挂起该系统，请运行以下命令：
    ``` literallayout
    systemctl suspend
    ```
    该命令在 RAM 中保存系统状态，除了 RAM
    模块外，关闭机器中的大多数设备。当您重新打开机器时，系统会从内存中恢复其状态，而无需再次引导。
    由于系统状态保存在 RAM
    中，而不是保存在硬盘中，将系统从挂起模式恢复比休眠模式快得多。但是，请注意，暂停的系统状态也容易出现断电的情况。
:::
::: itemizedlist
**其它资源**
-   [休眠系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#hibernating-the-system_shutting-down-suspending-and-hibernating-the-system){.link}
:::
:::
::: section
::: titlepage
# []{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#hibernating-the-system_shutting-down-suspending-and-hibernating-the-system}休眠系统 {.title}
:::
通过遵循这个过程，您可以休眠系统，或者休眠并暂停系统。
::: itemizedlist
**先决条件**
-   切换到 `root`{.literal} 用户。
:::
::: itemizedlist
**流程**
-   要休眠系统，请运行以下命令：
    ``` literallayout
    systemctl hibernate
    ```
    该命令在硬盘驱动器中保存系统状态，并断开机器电源。当您重新打开机器时，系统会从保存的数据中恢复其状态，而无需再次引导。
    由于系统状态保存在硬盘上，而未保存在 RAM 中，因此计算机不必维护 RAM
    模块的电力。但是，因此，从休眠模式恢复系统要比将其恢复为挂起模式要慢得多。
    另外，要休眠并挂起该系统，请运行以下命令：
    ``` literallayout
    systemctl hybrid-sleep
    ```
:::
::: itemizedlist
**其它资源**
-   [挂起系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#suspending-the-system_shutting-down-suspending-and-hibernating-the-system){.link}
:::
:::
::: section
::: titlepage
# []{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#overview-of-the-power-management-commands-with-systemctl_shutting-down-suspending-and-hibernating-the-system}使用 systemctl 的电源管理命令概述 {.title}
:::
您可以使用以下 `systemctl`{.literal} 命令列表来控制系统的电源管理。
::: table
[]{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#idm140142136596176}
**表 16.1. systemctl 电源管理命令概述**
::: table-contents
  `systemctl`{.literal} 命令           描述
  ------------------------------------ ------------------
  `systemctl halt`{.literal}           关闭系统。
  `systemctl poweroff`{.literal}       关闭系统。
  `systemctl reboot`{.literal}         重启该系统。
  `systemctl suspend`{.literal}        挂起系统。
  `systemctl hibernate`{.literal}      休眠系统。
  `systemctl hybrid-sleep`{.literal}   休眠并挂起系统。
:::
:::
:::
:::
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#assembly_working-with-systemd-unit-files_configuring-basic-system-settings}第 17 章 使用 systemd 单元文件 {.title}
:::
本章包含 [**systemd**]{.strong} 单元文件的描述。以下部分介绍了如何进行：
::: itemizedlist
-   创建自定义单元文件
-   将 SysV init 脚本转换为单元文件
-   修改现有单元文件
-   使用实例化单元
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#con_introduction-to-unit-files_assembly_working-with-systemd-unit-files}单元文件简介 {.title}
:::
单元文件包含描述这个单元并定义其行为的配置指令。几个
`systemctl`{.literal}
命令可用于后台的单元文件。要进行更细的调整，系统管理员必须手动编辑或创建单元文件。[systemd
单元文件位置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#introduction-to-systemd_configuring-basic-system-settings){.link}
列出了三个主要目录，单元文件存储在系统中，`/etc/systemd/system/`{.literal}
目录为系统管理员创建的或自定义的单元文件保留。
单元文件名的格式如下：
``` literallayout
unit_name.type_extension
```
这里的 [*unit_name*]{.emphasis} 代表单元名称，type
[*\_extension*]{.emphasis} 标识单元类型。有关单元类型的完整列表，请参阅
[systemd
单元文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#systemd-unit-types_introduction-to-systemd){.link}
例如，系统通常会有 `sshd.service`{.literal} 和 `sshd.socket`{.literal}
单元。
可通过一个目录来补充单元文件，以了解额外的配置文件。例如，要将自定义配置选项添加到
`sshd.service`{.literal}，请创建 `sshd.service.d/custom.conf`{.literal}
文件，并在其中插入其他指令：有关配置目录的更多信息，[请参阅修改现有单元文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#modifying-existing-unit-files_working-with-systemd-unit-files){.link}。
另外, `sshd.service.wants/`{.literal} 和
`sshd.service.requires/`{.literal} 目录可以被创建。这些目录包含到
`sshd`{.literal}
服务依赖的单元文件的符号链接。符号链接会在安装过程中根据 \[Install\]
单元文件选项自动创建，或者根据 \[Unit\]
选项在运行时自动创建。也可以手动创建这些目录和符号链接。有关 \[Install\]
和 \[Unit\] 选项的详情请参考下表。
可以使用名为 [**单元指定符**]{.strong} -
通配符字符串（在加载单元文件时动态替换为单元参数）来设置许多单元文件选项。这可创建通用单元文件，用作生成实例化单元的模板。[请参阅使用实例化单元](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#working-with-instantiated-units_working-with-systemd-unit-files){.link}。
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#con_unit-file-structure_assembly_working-with-systemd-unit-files}单元文件结构 {.title}
:::
单元文件通常由三个部分组成：
::: itemizedlist
-   `[Unit]`{.literal} 部分 -
    包含不依赖于该单元类型的通用选项。这些选项提供单元描述，指定单元的行为，并将依赖项设置为其他单元。有关最常用的
    \[Unit\] 选项列表，请参阅 [Important \[Unit\]
    部分选项](#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Unit_Sec_Options "表 17.1. 重要 [Unit] 部分选项"){.link}。
-   `[Unit type]`{.literal} 部分 -
    如果单元具有特定于类型的指令，则这些指令分组在以单元类型命名的部分中。例如，服务单元文件包含
    `[Service]`{.literal} 部分。
-   `[Install]`{.literal} 部分 - 包含 `systemctl enable`{.literal} 和
    `disable`{.literal} 命令使用的单元安装信息。有关
    `[Install]`{.literal} 部分的选项列表，请参阅 [重要 \[Install\]
    部分选项](#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Install_Sec_Options "表 17.3. 重要 [Install] 部分选项"){.link}。
:::
::: itemizedlist
**其它资源**
-   [重要\[Unit\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#important-unit-section-options_working-with-systemd-unit-files){.link}
-   [important\[Service\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#important-service-section-options_working-with-systemd-unit-files){.link}
-   [重要\[Install\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#important-install-section-options_working-with-systemd-unit-files){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#ref_important-unit-section-options_assembly_working-with-systemd-unit-files}重要 \[Unit\] 部分选项 {.title}
:::
下表列出了 \[Unit\] 部分的重要选项。
::: table
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Unit_Sec_Options}
**表 17.1. 重要 \[Unit\] 部分选项**
::: table-contents
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
| [^\[a\]^](#assembly_wo           |                                  |
| rking-with-systemd-unit-files_co |                                  |
| nfiguring-basic-system-settings. |                                  |
| html#ftn.idm140142135009632){#as |                                  |
| sembly_working-with-systemd-unit |                                  |
| -files_configuring-basic-system- |                                  |
| settings.html#idm140142135009632 |                                  |
| .footnote}                       |                                  |
+:=================================+:=================================+
| `描述`{.literal}                 | 对单元                           |
|                                  | 进行有意义的描述。这个文本显示在 |
|                                  | `systemctl status`{.literal}     |
|                                  | 命令的输出中。                   |
+----------------------------------+----------------------------------+
| `Documentation`{.literal}        | 提供单元参考文档的 URI 列表。    |
+----------------------------------+----------------------------------+
| `后`                             | 定义启动单位的顺序。这个单元仅在 |
| {.literal}[^\[b\]^](#assembly_wo | `After`{.literal}                |
| rking-with-systemd-unit-files_co | 中指                             |
| nfiguring-basic-system-settings. | 定的单元处于活跃状态后才启动。与 |
| html#ftn.idm140142132200512){#as | `Requires`{.literal}             |
| sembly_working-with-systemd-unit | 不同，`After`{.literal}          |
| -files_configuring-basic-system- | 不会显式激                       |
| settings.html#idm140142132200512 | 活指定的单元。`Before`{.literal} |
| .footnote}                       | 选项与 `After`{.literal}         |
|                                  | 的功能相反。                     |
+----------------------------------+----------------------------------+
| `Requires`{.literal}             | 配置其它单元上                   |
|                                  | 的依赖关系。`Requires`{.literal} |
|                                  | 中列出的单元与单                 |
|                                  | 元一同被激活。如果任何需要的单元 |
|                                  | 无法启动，则该单位就不会被激活。 |
+----------------------------------+----------------------------------+
| `期望`{.literal}                 | 配置比 `Requires`{.literal}      |
|                                  | 更弱的                           |
|                                  | 依赖项。如果列出的单元没有成功启 |
|                                  | 动，它对单元激活不会有影响。这是 |
|                                  | 建立自定义单元依赖项的建议方法。 |
+----------------------------------+----------------------------------+
| `Conflicts`{.literal}            | 配置负的依赖关系，与             |
|                                  | `Requires`{.literal} 相反。      |
+----------------------------------+----------------------------------+
| ::: {#assembly_working-          |                                  |
| with-systemd-unit-files_configur |                                  |
| ing-basic-system-settings.html#f |                                  |
| tn.idm140142135009632 .footnote} |                                  |
| [^\[a\]^](#assembly_work         |                                  |
| ing-with-systemd-unit-files_conf |                                  |
| iguring-basic-system-settings.ht |                                  |
| ml#idm140142135009632){.simpara} |                                  |
| 有关 \[Unit\]                    |                                  |
| 部                               |                                  |
| 分中可配置的完整选项列表，请查看 |                                  |
| `systemd.unit(5)`{.literal}      |                                  |
| 手册页。                         |                                  |
| :::                              |                                  |
|                                  |                                  |
| ::: {#assembly_working-          |                                  |
| with-systemd-unit-files_configur |                                  |
| ing-basic-system-settings.html#f |                                  |
| tn.idm140142132200512 .footnote} |                                  |
| [^\[b\]^](#assembly_work         |                                  |
| ing-with-systemd-unit-files_conf |                                  |
| iguring-basic-system-settings.ht |                                  |
| ml#idm140142132200512){.simpara} |                                  |
| 在大多数                         |                                  |
| 情况下，只需要`After`{.literal}  |                                  |
| 和 `Before`{.literal}            |                                  |
| 单元文件选项设置                 |                                  |
| 顺序依赖关系就足够了。如果还使用 |                                  |
| `Wants`{.literal}（推荐）或      |                                  |
| `Requires`{.                     |                                  |
| literal}设置了需要的依赖关系，仍 |                                  |
| 需要指定依赖关系顺序。这是因为排 |                                  |
| 序和要求依赖关系可以独立地工作。 |                                  |
| :::                              |                                  |
+----------------------------------+----------------------------------+
:::
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#ref_important-service-section-options_assembly_working-with-systemd-unit-files}重要的服务部分选项 {.title}
:::