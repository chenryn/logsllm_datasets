*   可信操作系统(TOS)是满足一组特定安全要求的操作系统。操作系统是否可信取决于几个因素。例如，对于要被认证为可信的特定计算机上的操作系统，除了别的以外，还需要验证满足以下四个要求:
*   其系统设计没有缺陷；
*   其系统软件没有漏洞；
*   其系统配置正确；和
*   其系统管理得当。
*   堡垒主机
*   堡垒主机是具有强大防御机制的计算机。它们通常用作实现应用网关、电路网关和其他类型防火墙的主机。堡垒主机在可信的操作系统上运行，该操作系统不得包含不必要的功能或程序。这一措施有助于减少错误概率，并使安全检查更容易进行。只有那些必要的网络应用，例如 SSH、DNS、SMTP 和身份验证程序，才安装在堡垒主机上。
*   Bastion 主机也主要用作受控的入口点，以便安全监控可以更精确地关注发生在单个点上的动作。
* * *
## 常用技术&扫描、数据包捕获
### 使用 Nmap 扫描端口
*   Nmap(“网络映射器”)是一个免费的开源(许可)工具，用于网络发现和安全审计。许多系统和网络管理员也发现它对于诸如网络库存、管理服务升级计划以及监控主机或服务正常运行时间等任务非常有用。
*   Nmap 最好的一点是它是免费和开源的，非常灵活和通用
*   Nmap 通常用于确定网络中的活动主机、这些主机上的开放端口、这些开放端口上运行的服务以及该端口上该服务的版本标识。
*   更多在 http://scanme.nmap.org/
```sh
nmap [scan type] [options] [target specification] 
```
Nmap 使用 6 种不同的端口状态:
*   **开放** —开放端口是主动接受 TCP、UDP 或 SCTP 连接的端口。开放的端口是我们最感兴趣的，因为它们容易受到攻击。开放端口还显示网络上可用的服务。
*   **关闭** —接收和响应 Nmap 探测数据包的端口，但没有应用在该端口上侦听。有助于识别主机是否存在以及操作系统检测。
*   **Filtered** — Nmap 无法确定端口是否打开，因为包过滤会阻止其探测器到达该端口。过滤可能来自防火墙或路由器规则。在扫描过程中，过滤端口通常很少给出信息，因为过滤器可能会丢弃探测而不作出响应，或者以无用的错误消息作出响应，例如目的地不可达。
*   **未过滤** —端口可访问，但 Nmap 不知道它是打开的还是关闭的。仅在用于映射防火墙规则集的确认扫描中使用。其他扫描类型可用于识别端口是否打开。
*   **打开/过滤** — Nmap 无法确定是打开还是过滤。当打开的端口没有响应时，就会发生这种情况。没有响应可能意味着数据包筛选器丢弃了该探测，或者任何响应都被阻止。
*   **关闭/过滤** — Nmap 无法确定端口是关闭还是过滤。仅用于 IP ID 空闲扫描。
### Nmap 扫描的类型:
1.  TCP 连接
2.  TCP 连接扫描完成三次握手。
3.  如果端口打开，操作系统完成 TCP 三次握手，端口扫描器立即关闭连接以避免 DOS。这是“嘈杂”的，因为服务可以记录发送者的 IP 地址，并可能触发入侵检测系统。
4.  UDP 扫描
5.  该扫描检查是否有任何 UDP 端口正在侦听。
6.  由于 UDP 不像 TCP 那样以肯定的确认来响应，而是仅在端口关闭时才响应传入的 UDP 数据包，
7.  同步扫描
8.  SYN 扫描是 TCP 扫描的另一种形式。
9.  这种扫描类型也称为“半开扫描”，因为它实际上从不打开完整的 TCP 连接。
10.  端口扫描器生成一个 SYN 数据包。如果目标端口是开放的，它将使用 SYN-ACK 数据包进行响应。扫描仪主机用 RST 数据包响应，在握手完成前关闭连接。
11.  如果端口关闭但未过滤，目标将立即用 RST 数据包响应。
12.  SYN 扫描的优点是各个服务实际上从不接收连接。
13.  手指扫描
14.  这是一种秘密扫描，类似于 SYN 扫描，但发送的是 TCP FIN 数据包。
15.  确认扫描
16.  Ack 扫描确定端口是否被过滤。
17.  零扫描
18.  另一种非常隐秘的扫描，将所有 TCP 报头标志设置为 off 或 null。
19.  这通常不是有效的数据包，一些主机不知道如何处理。
20.  圣诞扫描
21.  类似于空扫描，只是 TCP 报头中的所有标志都设置为 on
22.  RPC 扫描
23.  这种特殊类型的扫描寻找对 RPC(远程过程调用)服务的机器应答
24.  空闲扫描
25.  这是一种超级隐蔽的方法，扫描数据包从外部主机上反弹回来。
26.  您不需要控制另一台主机，但它必须设置并满足某些要求。你必须输入我们的“僵尸”主机的 IP 地址和使用的端口号。这是 Nmap 中比较有争议的选项之一，因为它只用于恶意攻击。
扫描技术
一些扫描技术可用于获取有关系统及其端口的更多信息。你可以在[https://medium . com/infosec-adventures/nmap-cheat sheet-a 423 fcd da 0 ca](https://medium.com/infosec-adventures/nmap-cheatsheet-a423fcdda0ca)了解更多信息
### OpenVAS
*   OpenVAS 是一个全功能的漏洞扫描器。
*   OpenVAS 是一个服务和工具框架，它提供了一个全面而强大的漏洞扫描和管理包
*   OpenVAS 是一个开源程序，最初是一度更受欢迎的扫描程序 Nessus 的一个分支。
*   OpenVAS 由三个主要部分组成。这些是:
*   网络漏洞测试(NVTs)的定期更新馈送；
*   运行 NVTs 的扫描仪；和
*   一个 SQLite 3 数据库，用于存储您的测试配置以及 NVTs 的结果和配置。
*   [https://www.greenbone.net/en/install_use_gce/](https://www.greenbone.net/en/install_use_gce/)
### WireShark
*   Wireshark 是一个协议分析器。
*   这意味着 Wireshark 不仅可以解码数据包的位和字节，还可以解码数据包和协议之间的关系。
*   Wireshark 理解协议序列。
Wireshark 的简单演示
1.  仅捕获 udp 数据包:
2.  捕获筛选器= "udp "
3.  仅捕获 tcp 数据包
4.  捕获筛选器= "tcp "
5.  TCP/IP 三次握手![image17](img/3dbffc4528a1e018f07167f6ed98d665.png)
6.  按 IP 地址过滤:显示来自 IP 的所有流量，无论是源流量还是目的流量
7.  ip.addr == 192.168.1.1
8.  按源地址过滤:仅显示来自 IP 源的流量
9.  ip.src == 192.168.0.1
10.  按目标过滤:仅显示来自 IP 目标的流量
11.  ip.dst == 192.168.0.1
12.  按 IP 子网过滤:显示来自子网的流量，无论是来源还是目的地
13.  ip.addr = 192.168.0.1/24
14.  按协议过滤:按协议名称过滤流量
15.  十进位计数制
16.  超文本传输协议（HTTP）（Hyper Text Transport Protocol 的缩写）
17.  文件传输协议（File Transfer Protocol 的缩写）
18.  阿尔普
19.  嘘
20.  远程登录
21.  网间控制报文协议