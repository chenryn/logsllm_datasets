**I'm submitting a ...** (check one with "x")
- [X] Feature Request

### Current Behavior
Bi-directional binding (Banana in a Box) does not work out-of-the-box for parent/child components when using a child event emitter. The parent component's property is not updated.

### Expected/Desired Behavior
The bi-directional binding should function without the need to duplicate binding attributes.

### Reproduction of the Problem

#### Parent Template (Does Not Work)
```html
<app-child [(toggleEditInPlace)]="parentToggleEditInPlace"></app-child>
```

#### Parent Template (Works)
```html
<app-child [toggleEditInPlace]="parentToggleEditInPlace" (toggleEditInPlaceEvent)="parentToggleEditInPlace = $event"></app-child>
```

#### Child Component
```typescript
import { Component, Input, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-child',
  template: `<div>{{ toggleEditInPlace }}</div>`
})
export class ChildComponent {
  @Input() toggleEditInPlace: boolean = false;
  @Output() toggleEditInPlaceEvent = new EventEmitter<boolean>();

  // Example method to emit the event
  toggle() {
    this.toggleEditInPlace = !this.toggleEditInPlace;
    this.toggleEditInPlaceEvent.emit(this.toggleEditInPlace);
  }
}
```

### Environment
- **Angular Version:** 2.0.0-rc.5
- **Browser:** All
- **Language:** All

---

This version of the text is more structured and clearly explains the issue, the expected behavior, and provides a clear example of the problem.