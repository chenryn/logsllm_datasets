### System info
  * Playwright Version: [v1.34.3]
  * Operating System: [All]
  * Browser: [All]
  * Other info:
### Source code
The POST request here:
https://github.com/microsoft/playwright/blob/ec972fb7c140908560347ea215d30016fda2508d/packages/playwright-
core/src/server/chromium/chromium.ts#L192C28-L199  
is correct, but the method `fetchData` defined here:
playwright/packages/playwright-core/src/utils/network.ts
Lines 97 to 111 in ec972fb
|  export function fetchData(params: HTTPRequestParams, onError?: (params:
HTTPRequestParams, response: http.IncomingMessage) => Promise):
Promise {  
---|---  
|  return new Promise((resolve, reject) => {  
|  httpRequest(params, async response => {  
|  if (response.statusCode !== 200) {  
|  const error = onError ? await onError(params, response) : new Error(`fetch
failed: server returned code ${response.statusCode}. URL: ${params.url}`);  
|  reject(error);  
|  return;  
|  }  
|  let body = '';  
|  response.on('data', (chunk: string) => body += chunk);  
|  response.on('error', (error: any) => reject(error));  
|  response.on('end', () => resolve(body));  
|  }, reject);  
|  });  
|  }  
is not passing the header `"Content-type": "application/json"`  
so when Selenium Hub receives the request, it drops the body of the request.
It's the only instance where the method is doing a "POST" rather than a "GET",
which I guess has resulted in this slipping through.
  * I provided exact source code that allows reproducing the issue locally.
**Steps**
  * Setup a Remote Selenium Grid Hub
  * Follow the docs
  * Run the tests
  * Read the Selenium Grid Hub logs
**Expected**
[Describe expected behavior]
Propagate the Selenium Grid capabilities from the environment variable
[Describe actual behavior]
Does not propagate Selenium Grid capabilities from the environment variable