length
cat hosts.txt | httpx -ports 80,443,8009,8080,8081,8090,8180,8443 -path /web-
console/ -status-code -content-length
cat hosts.txt | httpx -path /phpinfo.php -status-code -content-length -title
验室制作翻译出品
这是⼀一篇很有⻅见地的bug悬赏⼩小⽂文章，讲述了了适当的侦察可以带来怎样的收获。在这个案例例中，笔者能
够发现⼀一个敏敏感的信息披露露问题。我们可以在这⾥里里学习⼀一些技巧，看看赏⾦金金猎⼈人是如何思考的。
以下是@_justYnot的具体做法。
1. 运⾏行行 subfinder -d target.com | httprobe -c 100 > target.txt  。得到⼤大约210个⼦子域。
2. 运⾏行行 cat target.txt | aquatone -out ~aquatone/target 捕捉⽹网⻚页截图。
3. 检查每张截图，发现⼀一个有趣的⼦子域。
4. 尝试了了⼀一些bug XSS，打开重定向等，但没有任何效果。
5. 然后他决定对⽬目录进⾏行行爆破，他使⽤用了了ffuf和@DanielMiesslerSecLists中的⼀一个词表。
6. 运⾏行行 ffuf -w path/to/wordlist.txt -u https://sub.target.com/FUZZ -mc all -c -
v 。
7. ⽽而在⼀一段时间后，他得到了了⼀一个端点，这个端点暴暴露露了了 /debug/pprof ，其中有很多敏敏感信息，如
调试信息、痕迹等。
8. 向公司报告了了这个问题，他们很快就修复了了这个问题，并认可了了他的⼯工作
这就是⼀一个完美的例例⼦子，为什什么⼀一个详细⽽而彻底的侦察是如此重要。
发现⼀一个暴暴露露的调试端点可以给攻击者提供关于远程系统内部⼯工作的详细信息，然后可以⽤用来进⾏行行更更有
针对性的攻击。
下⾯面是所有提到的⼯工具的链接。
https://github.com/projectdiscovery/subfinder
https://github.com/danielmiessler/SecLists
https://github.com/michenriksen/aquatone
https://github.com/tomnomnom/httprobe
https://github.com/ffuf/ffuf
83. 使⽤用Amass的ASN查找⼦子域
By @ofjaaah
Source: link
这⾥里里有⼀一个强⼤大的侦察技巧，就是使⽤用OWASP Amass⼯工具找到我们⽬目标组织的⼦子域。
这就是该命令的详细作⽤用。
1. 获取⽬目标组织（如yahoo）的ASN（⾃自主系统号）列列表。
2. 只提取AS号清单，并⽤用逗号隔开。
3. 对于每⼀一个确定的ASN，找出与ASN相关的域名清单。
Amass在攻击⾯面图谱⽅方⾯面有⾮非常强⼤大的功能，它使⽤用了了许多不不同的第三⽅方API和数据源来实现其功能。它
使⽤用许多不不同的第三⽅方API和数据源来实现其功能。
amass intel -org yahoo -max-dns-queries 2500 | awk -F, '{print $1}' ORS=',' | 
sed 's/,$//' | xargs -P3 -I@ -d ',' amass intel -asn @ -max-dns-queries 2500
验室制作翻译出品
这⾥里里是amass的获取地点。
https://github.com/OWASP/Amass
84. 使⽤用httpx和subjs收集JavaScript⽂文件
By @ofjaaah
Source: link
JavaScript可以隐藏很多珍贵的信息，API、令牌、⼦子域等。
我们如何才能轻松获得⽬目标域（和⼦子域）上托管的JavaScript⽂文件列列表？看看这个超级有⽤用的单⾏行行命令
吧。
就这么简单!
cat domains | httpx -silent | subjs | anew
验室制作翻译出品
该命令将通过所有指定的域，尝试访问它们并产⽣生有效的（实时）URLs。然后subjs⼯工具将施展魔法，
从URLs中提取所有JavaScript链接。
以下是这个组合⼯工作所需要的东⻄西。
https://github.com/projectdiscovery/httpx
https://github.com/tomnomnom/anew
https://github.com/lc/subjs
85. Unpack exposed JavaScript source map files
By @nullenc0de
Source: link
这⾥里里有⼀一个很酷的技巧，可以找到暴暴露露的JavaScript源码图⽂文件，并从中提取敏敏感信息。
1. 找到JavaScript⽂文件
2. 运⾏行行 ffuf -w js_files.txt -u FUZZ -mr "sourceMappingURL" 来识别定义了了源代码映射的
JavaScript⽂文件。
3. 下载源地图
4. 使⽤用unmap在本地解压。
5. 浏览配置或直接grep查找API密钥/密码
什什么是JavaScript源码图⽂文件？JavaScript源码图⽂文件是包含部署的JavaScript代码（bundle）的原始、
未压缩（"unminified"）、未混淆（"unuglified"）源代码的调试⽂文件。这些⽂文件有助于开发⼈人员远程调
试他们的代码。
现在，源码图的路路径通常指定在JavaScript⽂文件的结尾，例例如timepickerbundle.js的结尾会有这样的内
容。
使⽤用unmap⼯工具，我们可以将这些⽂文件解压成它们的原始形式，放到⼀一个⽬目录结构中，并在本地浏览它
们。
但是，请记住，JavaScript源码地图⽂文件绝对不不能在⽣生产站点上暴暴露露（上传），因为它们可能包含敏敏感信
息。因此，你很有可能只会得到⼀一堆404s，⽽而没有什什么可以解压的。
86. 14个Google dorks，可供侦察和轻松取胜
By @drok3r
Source: link1, link2, link3, link4, link5, link6, link7
这⾥里里整理理了了14个有趣的Google dorks，这些Google dorks可以帮助我们侦察关于⽬目标域名的情况，也可
以找到⼀一些轻松的胜利利。
... js code ...
//# sourceMappingURL=timepickerbundle.js.map
# 登录⾯面板搜索
site:target.com inurl:admin | administrator | adm | login | l0gin | wp-login
# 登录⾯面板搜索 #2
验室制作翻译出品
可能确实相当有⽤用!
⼩小贴⼠士：也可以试试这些免费的优秀资源。
Google Hacking dorks maintained by Pentest-Tools.
Google Hacking Database maintained by Offensive Security.
87. 寻找易易受CORS攻击的⽹网络服务器器
intitle:"login" "admin" site:target.com
# 管理理⾯面板搜索
inurl:admin site:target.com
# 搜索⽬目标的暴暴露露⽂文件
site:target.com ext:txt | ext:doc | ext:docx | ext:odt | ext:pdf | ext:rtf | 
ext:sxw | ext:psw | ext:ppt | ext:pptx | ext:pps | ext:csv | ext:mdb
# 获取打开的⽬目录(索引)
intitle:"index of /" Parent Directory site:target.com
# 搜索暴暴露露的管理理⽬目录
intitle:"index of /admin" site:target.com
# 搜索暴暴露露的密码⽬目录
intitle:"index of /password" site:target.com
# 搜索带有邮件的⽬目录
intitle:"index of /mail" site:target.com
# 搜索包含密码的⽬目录
intitle:"index of /" (passwd | password.txt) site:target.com
# 搜索包含.htaccess的⽬目录
intitle:"index of /" .htaccess site:target.com
# 搜索带有密码的.txt⽂文件
inurl:passwd filetype:txt site:target.com
# 搜索潜在的敏敏感数据库⽂文件
inurl:admin filetype:db site:target.com
# 搜索⽇日志⽂文件
filetype:log site:target.com
# 搜索链接到我们的⽬目标⽹网站的其他⽹网站。
link:target.com -site:target.com
验室制作翻译出品
By @ofjaaah
Source: link
以下命令能够识别⽬目标域名下的任何⼦子域是否容易易受到基于跨源资源共享（CORS）的攻击。
下⾯面就来详细介绍⼀一下这个命令的作⽤用。
1. 收集⽬目标域的⼦子域（如fitbit.com）。
2. 确定有效的(活的)⼦子域，并编制URL清单。
3. 访问每个URL，并在每个请求中包含 "Origin: evil.com "HTTP头。
4. 在响应标题中寻找 "evil.com"。
5. 如果匹配，打印出来
如果我们看到类似的东⻄西，这意味着被识别的⽹网站已经错误地配置了了CORS政策，并有可能向任何任意的
第三⽅方⽹网站披露露敏敏感信息。这包括会话cookies、API密钥、CSRF令牌和其他敏敏感数据。
关于CORS攻击的更更多信息，请参⻅见PortSwigger制作的【CORS安全教程与实例例】(https://portswigger.
net/web-security/cors)。
为了了使这个组合⼯工作，安装以下⼯工具。
https://github.com/tomnomnom/assetfinder
https://github.com/projectdiscovery/httpx
https://github.com/shenwei356/rush
88. 在Burp Suite中拦截iOS13的流量量。
By @Dark_Knight
Source: link
assetfinder fitbit.com | httpx -threads 300 -follow-redirects -silent | rush -
j200 'curl -m5 -s -I -H "Origin: evil.com" {} | [[ $(grep -c "evil.com") -gt 0 
]] && printf "\n3[0;32m[VUL TO CORS] 3[0m{}"' 2>/dev/null
验室制作翻译出品
如果你在iOS13上使⽤用Burp Suite拦截流量量时遇到问题，请尝试禁⽤用TLSv1.3。你可以通过以下任何⼀一种
⽅方法来实现。
使⽤用以下命令⾏行行选项。
-Djdk.tls.server.protocols=TLSv1,TLSv1.1,TLSv1.2
或者在2020.8及以上版本中使⽤用以下配置。
现在拦截流量量应该没有问题了了。
89. 查找SQL注⼊入(命令组合)
By @D0cK3rG33k
Source: link
这5个命令可以帮助我们轻松识别⽬目标域的SQL注⼊入。
下⾯面就来详细说说是怎么回事。
1. ⾸首先，我们要找到⽬目标域名下的所有⼦子域名。
2. 接下来，我们将确定在这些⼦子域上运⾏行行的所有活着的⽹网络服务器器。
3. Waybackurls将获取Wayback机器器所知道的所有关于已识别的活着⼦子域的URLs
4. 现在我们将过滤出符合模式的URL，并有潜在的SQL注⼊入的可能性
5. 最后⼀一步是在所有识别出的潜在漏漏洞洞的URL上运⾏行行sqlmap，让它发挥它的魔⼒力力。
提示。如果你需要在这个过程中绕过WAF(⽹网络应⽤用防⽕火墙)，在sqlmap中添加以下选项：
subfinder -d target.com | tee -a domains
cat domains | httpx | tee -a urls.alive
cat urls.alive | waybackurls | tee -a urls.check
gf sqli urls.check >> urls.sqli
sqlmap -m urls.sqli --dbs --batch
验室制作翻译出品
这⾥里里是获得这个技巧的所有⼯工具的地⽅方。
https://github.com/projectdiscovery/subfinder
https://github.com/tomnomnom/waybackurls
https://github.com/projectdiscovery/httpx
https://github.com/tomnomnom/gf
https://github.com/1ndianl33t/Gf-Patterns (sqli patterns)
90. 在CLI中获取Bugcrowd程序的范围。
By @sw33tLie
Source: link
有⼀一个新的⼯工具叫bcscope，它可以让你获得Bugcrowd平台上所有的bug赏⾦金金项⽬目的范围，包括私⼈人项
⽬目。
你要做的就是提供你的Bugcrowd令牌，⽐比如这样。
相当⽅方便便和相当有⽤用!
在这⾥里里获取该⼯工具。
--level=5 --risk=3 -p 'item1' --
tamper=apostrophemask,apostrophenullencode,appendnullbyte,base64encode,between,
bluecoat,chardoubleencode,charencode,charunicodeencode,concat2concatws,equaltol
ike,greatest,ifnull2ifisnull,modsecurityversioned
bcscope -t  -c 2 -p
验室制作翻译出品
https://github.com/sw33tLie/bcscope
91. 初学者的GraphQL笔记
By @sillydadddy
Source: link
下⾯面是由@sillydadddy为bug赏⾦金金猎⼈人整理理的GraphQL介绍101。这些信息可以帮助你快速上⼿手，熟悉
GraphQL技术。下⾯面我们就来介绍⼀一下。
1. 与REST相⽐比，GraphQL被开发者⽤用来提⾼高可⽤用性。所以⼤大多数情况下，它是在现有的REST服务上
实现的，就像⼀一个包装器器。所以有时候开发者可能不不会对所有的端点进⾏行行正确的配置!
2. 攻击GraphQL最重要的是获取模式。为此我们需要使⽤用⾃自省查询（它可能被禁⽤用）。⾃自省查询有两
个版本。所以，如果查询不不起作⽤用，不不要以为查询被禁⽤用了了--两个都试⼀一下吧!
3. 检查你是否能掌握开发⼈人员使⽤用的GraphQL控制台，例例如：
/graphql/altair/playground 。等(⽤用wordlist)
4. 尝试在请求中加⼊入调试参数。
&debug=1 。
5. 查找以前的版本，例例如：
v1/graphqlV2/graphql
6. ⼯工具
1. Altairweb浏览器器插件来运⾏行行你的测试。
2. Graphql-Voyager，⽤用于模式的可视化表示。
3. GraphQl raider Burp Suite插件扩展
7. 漏漏洞洞
1. IDOR（不不安全的直接对象引⽤用）
2. 授权/访问控制问题
3. GraphQL中不不安全的突变(数据修改)
4. 注⼊入，如：SQL