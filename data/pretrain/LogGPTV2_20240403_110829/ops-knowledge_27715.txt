To properly configure two different web applications with distinct domains and ports on a single machine, you need to ensure that your Apache configuration correctly directs traffic to the appropriate application. Below is a refined and more detailed explanation of how to achieve this, along with an optimized version of your virtual host configuration.

### Problem Summary
You have two applications running on your server:
- `x.abc.com` running on port 80
- `admin.x.abc.com` running on port 8080

When accessing `admin.x.abc.com`, the requests are being redirected to `x.abc.com`.

### Solution
To resolve this issue, you need to ensure that each domain is correctly mapped to its respective port and document root. Hereâ€™s how you can configure your Apache virtual hosts:

1. **Virtual Host for `x.abc.com` (Port 80)**
2. **Virtual Host for `admin.x.abc.com` (Port 8080)**

### Optimized Virtual Host Configuration

#### Virtual Host for `x.abc.com` (Port 80)
```apache
<VirtualHost *:80>
    ServerName x.abc.com
    ServerAlias www.x.abc.com
    RailsEnv test
    DocumentRoot /home/cp/cp/public

    <Directory /home/cp/cp/public/>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    LogLevel warn
    ErrorLog /home/cp/cp/log/error.log
    CustomLog /home/cp/cp/access.log combined
</VirtualHost>
```

#### Virtual Host for `admin.x.abc.com` (Port 8080)
```apache
<VirtualHost *:8080>
    ServerName admin.x.abc.com
    ServerAlias www.admin.x.abc.com
    RailsEnv test
    DocumentRoot /home/cp/cp_admin/public

    <Directory /home/cp/cp_admin/public/>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    LogLevel warn
    ErrorLog /home/cp/cp_admin/log/error.log
    CustomLog /home/cp/cp_admin/access.log combined
</VirtualHost>
```

### Explanation
1. **ServerName and ServerAlias**: These directives specify the primary and secondary domain names for the virtual host.
2. **DocumentRoot**: This directive sets the root directory for the web content.
3. **<Directory> Block**: This block configures the permissions and options for the specified directory. The `Require all granted` line allows access from all clients.
4. **LogLevel, ErrorLog, and CustomLog**: These directives control logging settings for the virtual host.

### Additional Notes
- Ensure that the Apache service is configured to listen on both port 80 and port 8080. You can do this by adding the following lines to your `httpd.conf` or `ports.conf` file:
  ```apache
  Listen 80
  Listen 8080
  ```

- After making these changes, restart the Apache service to apply the new configuration:
  ```sh
  sudo systemctl restart apache2
  ```

By following these steps, you should be able to access `x.abc.com` on port 80 and `admin.x.abc.com` on port 8080 without any redirection issues.