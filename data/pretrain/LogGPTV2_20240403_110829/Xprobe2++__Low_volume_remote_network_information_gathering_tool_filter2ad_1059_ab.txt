identifypossibleHoneynetsystemsamongthescannedhosts.Thispaper’sprimarycontributionisintroductionofre-motenetworkﬁngerprintingtoolthatusesbothnetworklayerandapplicationlayerﬁngerprintstocollecttargetsys-teminformationandiscapableoffeedingsuchdata(informofXML)toinformationconsumers(suchasIntrusionDe-tectionSystemcorrelationengine).Therestofthispaperisorganizedasfollows:Sec-tion2introducesbasicconceptsofnetworkﬁngerprint-ingandtheproblemsthatthetoolhastodealthesedays,andalsoproposedsolutions.Section3introducesba-sicXprobe2/Xprobe2++architecture.Section4introducesimprovementsthatwerebroughtinXprobe2++.5Sec-tiondemonstratessomeevaluationresultsandSection6discussespossibleproblemsandSection7concludesthiswork.2.PreliminariesNetworkScanningistheprocessofsendingoneoranumberofnetworkpacketstoahostoranetwork,andbasedonreceivedresponse(orlackofsuch)justifyingtheexis-tenceofthenetworkorthehostwithintargetIPaddressrange.RemoteOperatingSystemFingerprintingistheprocessofidentifyingcharacteristicsofthesoftware(suchasOper-atingSystemtype,version,patch-level,installedsoftware,andpossibly-moredetailedinformation),whichrunsonremotecomputersystem.Thiscanbedonebyanalyzingnetworktrafﬁctoandfromtheremotesystem,orbysend-ingrequeststoremotesystemandanalyzingtheresponses.Thepassiveanalysisofnetworktrafﬁcisfrequentlynamedinliteratureaspassivefingerprintingandactiveprobingofremotesystemsisnamedasactivefingerprinting.Xprobe2++isanovelactiveremoteoperatingsystemﬁngerprintingtoolthatusesTCP/IPmodelnetworkinglayerprotocolsandapplicationlayerrequeststoidentifythetypeandversionofoperatingsystemsoftware,runningontargetsystem.WithintroductionofapplicationlayertestsXprobe2++aimsatresolvingtheproblems,whichcannotberesolvedbyﬁngerprintingatnetworklayer.Intheremainingpartofthissectionwearegoingtodiscusstypicalproblemsandissuesthatanetworklayeroperatingsystemﬁngerprintingtoolshavetodealwithduringthescanningprocess.2.1.ModernFingerprintingProblemsHoneypotsystems,modiﬁedTCP/IPstacksettingsandnetworkpacketscrubbersareknowntofrequentlyconfuseremoteﬁngerprintingtools.Honeypotsystemsoftenre-spondashostsoragroupofhoststoremoteﬁngerprintingtools.ModiﬁedTCP/IPstackresponsesarehardtoﬁnger-printwithstrictsignaturematching.Whenpacketstraverseacrossthenetwork,theycanbemodiﬁedbynetworktrafﬁcnormalizers.AllofthesefactorsaffecttheaccuracyoftheOSﬁngerprinting.Xprobe2++isawareoftheseproblemsanddealswiththembyusingfuzzymatchingandmixedsignaturesthatprobetargetsystematdifferentlayersofOSIModelnet-workstack.Moreover,suchbehaviorofsomeroutingandpacketﬁl-teringdevicescouldbeanalyzedandsignaturestoidentifyandﬁngerprintintermediatenodescouldbeconstructed.Forexample,OpenBSDPFﬁlterisknowntoreturndif-ferentvaluesinTTLﬁeld,whenasystembehindtheﬁlterisaccessed[6].Asignaturecanbeconstructedtodetectthisbehavior.3.ToolArchitectureOverviewTheXprobe2++toolarchitectureincludesseveralkeycomponents:coreengine,signaturematcher,andanex-tendablesetofpluggablemodules(alsoknownasplugins).Thecoreengineisresponsibleforbasicdatamanagement,signaturemanagement,modulesselection,moduleloadingandprobeexecution.Thesignaturematcherisresponsibleforresultanalysis.Thepluginsprovidethetoolwithpacketprobestobesenttothetargetsystemsandmethodsofana-lyzingandmatchingthereceivedresponsestothesignatureentries.TheXprobe2++modulesareorganizedinseveralgroups:NetworkDiscoveryModules,ServiceMappingModules,OperatingSystemFingerprintingModulesandInformationCollectionModules.Figure1.ImplementationDiagram978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
207
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:57 UTC from IEEE Xplore.  Restrictions apply. 
ThegeneralsequenceofmoduleexecutionisdenotedonFigure1.Eachgroupofthemodulesisdependentonsuc-cessfulexecutionoftheothergroup,thereforegroupsofmodulesareexecutedsequentially.Howevereachpartic-ularmodulewithinthegroupmaybeexecutedinparallelwithanothermodulewithinthesamegroup.Itispossibletocontrolwhichmodules,andinwhatse-quencearetobeexecuted,usingcommandlineswitches1.3.1.NetworkDiscoveryModulesXprobe2discoverymodulesaredesignedtoperformhostprobing,ﬁrewalldetection,andprovideinformationfortheautomaticreceive-timeoutcalculationmechanism.Xprobe2++comeswithanewmodulethatusesSCTPpro-tocolforremotesystemprobing.Theaimofallnetworkdiscoverymodulesistoelicitaresponsefromatargetedhost,eitheraSYN—ACKoraRSTasaresponsefortheTCPpingdiscoverymoduleandanICMPPortUnreachableasaresponsefortheUDPpingdiscoverymoduleoranSCTPresponseforSCTPpingmodule.Theroundtriptime,whichcanbecalculatedforanysuccessfulrunofadiscoverymodule,isrememberedbymoduleexecutorandisfurtherusedbythereceive-timeoutcalculationmechanism.Thereceive-timeoutcalcu-lationmechanismisusedatthelaterstageofthescanningtotoestimateactualtargetsystemresponsetimeandidentifysilentlydroppedpacketswithouthavingtowaitlonger.3.2.OSFingerprintingModulesTheOperatingSystemFingerprintingModulesinXprobe2++includebothnetworklayerﬁngerprintingmod-ulesthatoperatewithnetworkpacketsandapplicationlayerﬁngerprintingmodulesthatoperatewithapplicationre-quests.TheOSﬁngerprintingmodulesprovidesetoftestsforatarget(withpossibleresults,storedinsignatureﬁles)todeterminethetargetoperatingsystemandthetargetarchi-tecturedetailsbasedonreceivedresponses.Theexecutionsequenceandthenumberofexecutedoperatingsystemﬁngerprintingmodulescanbecontrolledmanuallyorbeselectedautomaticallybasedontheinforma-tiondiscoveredbynetworkdiscoverymodulesorprovidedbycommandlineswitches.3.3.FuzzySignatureMatchingMechanismTheXprobe2toolstoresOSstackﬁngerprintsinformofsignaturesforeachoperatingsystem.Eachsignaturewill1PleaserefertotheXprobe2++manualpageforthedetailedinforma-tion.containdataregardingissuedtestsandpossibleresponsesthatmayidentifytheunderlyingsoftwareoftargetsystem.Xprobe2/Xprobe2++signaturesarepresentedinhuman-readableformatandareeasilyextendable.Moreover,thesignaturesfordifferenthostsmayhavevariablenumberofsignatureitems(signaturesfordifferenttests)presentedwithinthesignatureentry.Thisallowsthetooltomaintainasmuchaspossibleinformationondifferenttargetplat-formswithoutneedtore-testthewholesignaturesetforthefullsetofﬁngerprintingmoduleseverytime,whenthesystemisextendedwithnewﬁngerprintingmodules.FollowingexampledepictstheXprobe2++signatureforAppleMacOSoperatingsystemwithapplicationlayersig-natureentryforSNMPprotocol.fingerprint{OSID=”AppleMacOSX10.2.3”icmpechoreply=yicmpechocode=!0...snmpsysdescr=DarwinKernelVersionhttpcaseinsensitive=y}Thesignaturecontainsthepairsofkey,valuesforﬁnger-printingtests(key)andmatchingresults(values).Thekey-wordsaredeﬁnedbyeachmoduleseparatelyandregisteredwithinXprobe2signatureparserrun-time.Xprobe2istheﬁrstbreedofremoteOSﬁngerprint-ingtoolsthatintroduced“fuzzy”matchingalgorithmfortheRemoteOperatingSystemFingerprintingprocess.The“fuzzy”matchingisusedtoavoidimpactontheaccuracyofﬁngerprintingbyfailedtestsandthetests,whichwereconfusedbymodiﬁedTCP/IPstacksandnetworkprotocolscrubbers.Thusincaseifnofullsignaturematchisfoundintargetsystemresponses,Xprobe2providesabestef-fortmatchbetweentheresultsreceivedfromﬁngerprintingprobesagainstatargetedsystemtothesignaturedatabase.ThedetailsofXprobe2“fuzzy”matchingalgorithmcanbefoundinourearlierpublication[1].InXprobe2++the“fuzzy”matchingalgorithmisup-dated,somoduleweightsandreliabilitymetricsareusedinﬁnalscorecalculation.Theoriginalalgorithmformoduleweightcalculationisproposedin[4].Reliabilitymetricisaﬂoatingpointvalueinrange[0,1],whichcanbeoptionallyincludedaspartofsignatureforeachtest.4.ToolImprovements4.1.ApplicationLayerSignaturesSomeTCP/IPnetworkstacksmaybemodiﬁeddeliber-atelytoconfuseremoteOperatingSystemFingerprinting978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
208
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:57 UTC from IEEE Xplore.  Restrictions apply. 
attempts.Inothercasesanetworksystemmaysimplyfor-wardaTCPportofanapplication.ThemodernOSﬁnger-printingtoolhastohavepossibilitiestodealwiththistypeofsystemsandpossiblyidentifythefactofOSstackmodi-ﬁcationorportforwarding.Xprobe2++dealswiththefactbyusingadditionalapplicationlayerdifferentiativeteststomapdifferentclassesofoperatingsystems.Themethodsofapplicationlayerﬁngerprintingareknowntobeeffective[2]anditismuchhardertoemulateapplicationlayerresponsestomatchsignaturesofaparticularoperatingsystem.Theapplicationlayerresponsesarenotmodiﬁedbynetworkprotocolscrubbersandthusmayprovidemoreaccuratein-formation.Wedonotclaimthatitisimpossibletoaltersys-temresponsesatapplicationlayer,butwesimplypointoutthereislessmotivationtomodifysystemresponsesatappli-cationlayer,asthisismuchmorecomplextaskwithhigherrisksofbringingsysteminstabilityorintroducingsecurityvulnerabilitiesintheapplication.Theapplicationsrunningondifferentoperatingsystemsmayresponddifferentlytocertaintypeofrequests.Thisbehaviorisdictatedbyoperatingsystemlimitationsordif-ferencesindesignofunderlyingoperatingsystemcompo-nents.Asimpletestthatveriﬁes’directoryseparator’map-pingsimplytestshowtargetsystemhandles’/’and’\\’typerequests.Theapplicationwillresponddifferentlyun-derWindowsandUnixbecauseofthedifferenceintheﬁlesystemimplementation.ModifyingApplicationlayerresponsestorespondasothertypeofoperatingsystemisnotaneasytask.Forexample,normalizationofresponsesto“..\..\requestsonwebserverrunningonthetopofOS/2platformmay“unplug”asecurityholeonthisoperatingsystem[7].Xprobe2++usesapplication-layermodulesinordertodetectandcorrectpossiblemistakesofﬁngerprintingatnet-worklayer.Thesemodulescanalsocollectadditionalinfor-mationontargethost.Inadditiontothat,thenewversionofXprobe2++comeswithamodulethatattemptstodetecthoneydinstancesandother“honeypot”systemsbygenerat-ingknown-to-bevalidandinvalidapplicationrequestsandvalidatingresponses.Thevariablepartsoftheserequests,suchasﬁlenames,usernamesandsoon,arerandomlygen-eratedtoincreasecomplexityofcreating“fake”serviceswithoutfullimplementationoftheapplicationorprotocol.Inconsistencieswithreceivedapplicationresponsesarecon-sideredassignsofpossiblehoneypotsystem.Inadditiontothat,theinconsistencyoftheresultsre-turnedbyapplicationlayertestsandnetworklayertestsmaysignifypresenceofahoneypotsystem,anetwork-layerpacketnormalizerorasystemrunningstaticportaddresstranslated(PAT)services.ThedetailedlistofimplementedapplicationlayertestsisshowninTable4.1.Asitcanbeobservedfromthista-ble,someoftheseapplicationlayertestscanonlydifferenti-atebetweenclassesofoperatingsystems,whileothersmayidentifycertaincharacteristics,suchasusedﬁlesystemtype,whicharespeciﬁctotheparticularoperatingsystem(s)andandmaygivesomecluesofusedsoftwareversion.Wewouldliketofurtherdiscussthegroupsofapplica-tionlayertests,whicharesupportedbyourtool.Howeveritshouldbeunderstoodthatthetestingpossibilityatapplica-tionlayerisnotlimitedbythosemethodsdiscussedinthissection.Morespeciﬁcapplicationlayertests,suchasusedforHTTPServerﬁngerprinting[10]orAjaxFingerprintingTechniques[11]canbeusedtogainadditionalprecisioninremotesystemﬁngerprintingprocess.UnderlyingFilesystemtests-thisgroupoftestsaimsatdetectinghowunderlyingOSsystemcallshan-dlevariouscharacteristicsofdirectoryorﬁlename.Forexample,FAT32andNTFSﬁlesystemsthreatMS-DOSﬁlenames,suchasFOO∼1.HTM,inaspecialway,ﬁlenamesarecaseinsensitive,requeststoﬁlenamescontain-ingspecialcharacter0x1a(EOFmarker)willreturndif-ferentHTTPresponsesfromawebserverrunningonthetopofWindows(403)andUnixOS(404).Presenceofspecialfiles-Thismethodisnotasreliableasﬁlesystembasedmethods,howeveritoftenproducesusefulresults.Therearespecialﬁlesonsomeﬁlesystems,suchasThumbs.dbthatisautomaticallycreatedonWindowssys-temswhenfolderisaccessedbyExplorer.TheﬁleformatisdifferentondifferentOSversions.Ifsuchﬁleisobtained,itispossibletovalidatewhethertheﬁlewascreatedatthesystemwhereitispresentlylocatedbycomparingtheap-plicationandtheﬁletimestamps.Wealsobelieveitmightbepossibletoperformfurtherdifferentiationofoperatingsystemsatapplicationlayerbyanalyzingencodingtypes,supportedbyapplicationorun-derlyingﬁlesystem.Itmayalsobepossibletoanalyzedis-tributionofapplicationlayerresponsedelaysfordifferentrequestsinordertoidentify“fake”servicesorﬁngerprintparticularsoftwareversions.Furtherresearchinthisareaisneeded.4.2.OptionalTCPPortScanningOneofthemotivationsfordevelopingtheoriginalXprobe2toolwastoavoiddependencyonnetworkﬁnger-printingteststhatwouldrequireexcessiveamountofnet-workprobesinordertocollectthepreliminaryinformation.Xprobe2++networklayertestsareprimarilybasedonvari-etyofICMPprotocoltests.Suchtestsdonotrequireanyadditionalinformationoftargetsystem,suchasUDPorTCPopenorclosedportnumberssimplybecausethereisno“port”conceptincontextoftheprotocol.TheoptionalTCP/UDPportscanningmodule,whenen-abled,allowsexecutionofTCP,UDPandapplicationlayertests,becauseonlythesetestsrequireknowledgeofTCP978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
209
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:57 UTC from IEEE Xplore.  Restrictions apply. 
TesttypeUsableProtocolTestprecisionDirectorySeparatorHTTPWindowsvs.UnixNewlinecharactersHTTPWindowsvs.UnixSpecial/reservedﬁlenamesHTTPWindowsvs.UnixRootdirectoryFTPWindows,Unix,Symbian,OS/2Specialcharacters(EOF,EOLFilesystemlimitationsHTTP,FTPCorrelatesFS-typetoOSFilesystemillegalcharactersHTTP,FTPCorrelatesFS-typetoOSCasesensitivityHTTP,FTPWindowsvs.UnixSpecialﬁlenameshandlingHTTP,FTPWindowsvs.UnixSpecialﬁlesindirectoryHTTP,FTPWindowstypes,MacOS,UnixBinaryﬁleﬁngerprintingFTPWindows,UnixtypesFigure2.Xprobe2++ApplicationLayerTestsandUDPportstatus.IfoptionalTCP/UDPportscanningmoduleisnotexe-cuted,whichisdefaultbehavior,Xprobe2++willonlyuseinformationprovidedbycommandline(suchasopenportnumbers),andtheports,whichstatusesarediscovereddur-ingexecutionofothertests.Modulesarereorderedpriortheexecutioninordertominimizetotalnumberofpacketsandoptimizeuseablityofinformationthatcouldbediscov-eredduringeachmoduleexecution.Forexample,theap-plicationlayertestthatusesUDPpacketwithSNMPquerywillbeplacedforexecutionbeforethemodulethatrequiresaclosedUDPport.WhentheSNMPqueryissent,thereceivedresponse(ifany)willrevealthestatusofSNMPportattargetsystem.IftheUDPportisclosed,theICMPPortUnreachableresponsewouldbereceived.InthiscasethereceiveddatagramispassedtothemodulethatrequiresclosedUDPport.IfaUDPpacketresponseisreceived,theSNMPsignaturescanbematchedtothereceivedre-sponse.Ifnoresponseisreceived,theresultofthistestisnotcounted.ThiswayXprobe2++maintainsitsminimalusageofpacketsforthenetworkdiscovery.5.EvaluationsWeevaluatedthenewversionXprobe2++systembyexe-cutingXprobe2++andnmapscansagainstanumberofdif-ferentnetworksystems:computerhosts,runningLinuxandwindowsoperatingsystemsandvarietyofprotocols,routersandnetworkedprinters.Additionally,wetestedXprobe2++againstawebserversystemrunningonLinuxoperatingsystemandprotectedbyOpenBSDpacketﬁlterwithpacketnormalizationturnedon.Weveriﬁedcorrectnessofeachexecutionandcorrectedthesignatures,whenitwasneces-sary.TheHTTPapplicationmodulewasmanuallyloadedinXprobe2++byspecifyingport80asopenportinXprobe2++commandline.ThesameparameterwaspassedtoNmaptool.NmapusedportmoduleforTCPpingprobetoidentifyresponsivenessofremotesystem.WealsoperformedafewtestrunsbysimultaneouslyexecutingXprobe2++andnmapagainstunknownnetworksystemsandrecordingnetworktrafﬁcloadgeneratedbyeachtool.Thethesamplednetworktrafﬁcthroughput,recordedwithntop,isshownonFigure3.Pleasenotethatnmapneedstoexecuteportscanninginordertobeabletosuccessfullyguessremoteoperatingsystemtype,whileXprobe2++canrelyonresultsofthetests,whichdonotrequireanyportstobeknown,withexceptionforapplica-tionlayermodule.ThediagramsimplydemonstratethatitispossibletodecreasenetworkoverheadwhennoTCPportscanningisperformed.Figure3.Xprobe2++andnmapgeneratedtrafﬁcloads.6.DiscussionsOurtoolprovidesahighperformance,highaccuracynet-workscanningandnetworkdiscoverytechniquesthatallowuserstocollectadditionalinformationofscannedenviron-ment.Xprobe2++isfocusedonusingminimalamountof978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
210
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:57 UTC from IEEE Xplore.  Restrictions apply. 
packetsinordertoperformactiveoperatingsystemﬁnger-printing,thatmakesthetoolsuitableforlarger-scalenet-workdiscoveryscans.Howeverthesebeneﬁtsalsoleadtosomelimitations,whichwewouldliketodiscussinthissection.Inordertosuccessfullyﬁngerprinttargetsystem,Xprobe2++needstheremotehosttorespondtoatleastsomeofthetests.Ifnopreliminaryinformationiscollectedbeforethetestsandsomeoftheprotocols(suchasICMP)areblocked,Xprobe2++resultsmaybeextremelyimpre-ciseorthetoolmayactuallyfailtocollectanyinformationatall.Weconsiderthisasthemajorlimitationofthetool.Theotherlimitationwiththeapplication-layertestsisthatcurrentlyXprobe2++doesnotperformnetworkser-viceﬁngerprinting.Bydoingsoweminimizenetworktraf-ﬁcoverheadandriskofremoteservicetocrash,howeverXprobe2++mayalsorunwrongtestsontheservices,thatarerunningonnon-standardportsorevenmisstheservices,whicharerunningonnon-commonportnumbers.Meth-odsoflow-overhead,risk-freenetworkserviceﬁngerprint-ingcouldbesubjectofourfurtherresearchthatcouldre-solvethislimitation.Also,despiteofthefactthatthethetooliscapableofperformingremotehostﬁngerprintingwithoutperforminganypreliminaryportscanningofthetargetsystem,thismayleadtosigniﬁcantperformancedropswhenrunningapplication-layertestsonﬁlteredportnumbers.Webelievethatpreliminaryportprobeforeachapplication-layertestmaybehelpfultoresolvethislimitation.Xprobe2++useslibpcaplibraryforitsnetworktrafﬁccaptureneeds.Thelibraryprovidesunforminterfacetonetworkcapturefacilitiesofdifferentplatformsandgreatportability,howeveritalsomakesthetoolunsuitableforhigh-performance,largevolumeparallelnetworkﬁnger-printingtasks,duetohighpacketdropratioonheavilyloadednetworks.UseofPFRINGsockets,availableonLinuxplatform,maybeconsideredinfuturereleasesofthistoolinordersacriﬁceportabilityforperformanceimprove-ments.7.ConclusionOurprimarycontributionisdemonstrationofthetoolthatiscapableofusingtheapplicationlayerﬁngerprintingtestsalongwithnetworklayerﬁngerprintingtoperformOSﬁngerprintingremotelywithhigherprecisionandlowernet-workoverhead.Additionally,thetoolcandemonstratethatwiththeuseofapplicationlayertestsitispossibletodetectspeciﬁcnetworkconﬁgurations,whichcouldnotbeidenti-ﬁedbyusingnetworklayerﬁngerprintingtestsalone.8.AvailabilityDevelopedapplicationisfreesoftware,releasedunderGNUGeneralPublicLicense.Thediscussedversionofthissoftwarewillbereleasedbeforetheconferenceattheprojectwebsite:http://xprobe.sourceforge.netAcknowledgmentThisstudyisconductedunderthe”IIIInnovativeandProspectiveTechnologiesProject”oftheInstituteforIn-formationIndustrywhichissubsidizedbytheMinistryofEconomyAffairsoftheRepublicofChina.References[1]O.ArkinandF.Yarochkin.A”Fuzzy”ApproachtoRe-moteActiveOperatingSystemFingerprinting.availableathttp://www.sys-security.com/archive/papers/Xprobe2.pdf,2002.[2]D.Crowley.AdvancedApplicationLevelOSFin-gerprinting:PracticalApproachesandExamples.http://www.x10security.org/appOSﬁngerprint.txt,2002.[3]Fyodor.RemoteOSdetectionviaTCP/IPStackFingerPrint-ing.http://www.phrack.com/show.php?p=54&a=9,1998.[4]L.G.GreenwaldandT.J.Thomas.Towardundetectedop-eratingsystemﬁngerprinting.InWOOT’07:ProceedingsoftheﬁrstUSENIXworkshoponOffensiveTechnologies,pages1–10,Berkeley,CA,USA,2007.USENIXAssociation.[5]J.JiaoandW.Wu.AMethodofIdentifyOSBasedOnTCP/IPFingerptint.InUCSNSInternationalJournalofComputerScienceandNetworkSecurity,Vol.6No.7B,2006.[6]M.Kydyraliev.Openbsdttlﬁngerprintingvulnerability.http://www.securityfocus.com/bid/4401,2002.[7]A.Luigi.Apache2.0.39directorytraversalandpatchdisclo-surebug.http://securityvulns.ru/docs3377.html,2002.[8]P.Ning,Y.Cui,D.S.Reeves,andD.Xu.Techniquesandtoolsforanalyzingintrusionalerts.ACMTrans.Inf.Syst.Secur.,7(2):274–318,2004.[9]G.PortokalidisandH.Bos.Sweetbait:Zero-hourwormde-tectionandcontainmentusinglow-andhigh-interactionhon-eypots.Comput.Netw.,51(5):1256–1274,2007.[10]S.Shah.Httprint:httpwebserverﬁngerprinting.http://net-square.com/httprint/httprintpaper.html,2004.[11]S.Shah.Ajaxﬁngerprinting.http://www.net-security.org/dl/articles/Ajaxﬁngerprinting.pdf,2007.[12]F.Veysset,O.Courtay,andO.Heen.NewToolandTechniqueforRemoteOperatingSystemFingerprinting.http://www.intranode.com/site/techno/technoarticles.htm,2002.