/sf/app/apache_portal/bin/httpd 
/etc/profile/root/.bash_profile
/etc/bashrc/root/.bashrc
/etc/profile.d/*.sh/etc/profile.d/lang.sh
/etc/sysconfig/i18n/etc/rc.local/etc/rc.d/rc.local
/etc/rc.local
/etc/rc.d/rc.local
/etc/profile.d/ 
/etc/init.d
systemctl 
systemctl list-units --type=service
/usr/lib/systemd/system
crontab 
cat /etc/crontab
​
ssl443——httpd 
0x00  
0x01  
0x02  
 /sf/app/apache_portal/bin/httpd 
 /usr/lib/systemd/system 
 /sf/app/apache_portal/bin/httpd 
systemctl list-units --type=service
#
systemd-user-sessions.service     Permit User Sessions
sangfor-session_check.service    Sangfor session_check
systemd-vconsole-setup.service       Setup Virtual Console
systemd-logind.service       Login Service
#web
sangfor-conhttpd.service     Sangfor EMM Http Server
sangfor-boa.service         Sangfor WebUI Http Server
sangfor-ntwf_framework.service      Sangfor ntwf framework(node_twf)
sangfor-php-fpm.service        Sangfor PHP-FPM Service
sangfor-ssllogs.service    Sangfor WebUI Ssllogs Service
#vpn
sangfor-svpn.service        Sangfor SSLVPN Core Service
[root@sslvpn system]# cat sangfor-svpn.service
[Unit]
Description=Sangfor SSLVPN Core Service
After=sangfor-env.service sangfor-module.service sangfor-net.service sangfor-ntwf_framework.service
[Service]
CPUQuota=160%
Type=forking
EnvironmentFile=/etc/sysconfig/sangforenv
ExecStart=/sf/app/svpn/svpn_ctrl start
ExecReload=/sf/app/svpn/svpn_ctrl restart
ExecStop=/sf/app/svpn/svpn_ctrl stop
# We want systemd to give httpd some time to finish gracefully, but still want
# it to kill httpd after TimeoutStopSec if something went wrong during the
# graceful stop. Normally, Systemd sends SIGTERM signal right after the
# ExecStop, which would kill httpd. We are sending useless SIGCONT here to give
# httpd time to finish.
KillSignal=SIGTERM
PrivateTmp=false
Restart=always
RestartSec=5
[Install]
WantedBy=multi-user.target
 ExecStart=/sf/app/svpn/svpn_ctrl start 
​
 /sf/app/apache_portal/bin/httpd 
​
 /sf/app/apache_portal/bin/apachectl start -DIS_GM_DEV 
systemctl stop sangfor-svpn.service 
​
 systemctl start sangfor-svpn.service
​
 /sf/app/apache_portal/bin/httpd 
 /sf/app/apache_portal/ 
[root@sslvpn system]# ls /sf/app/apache_portal/conf
apache-errpage.conf  charset.conv  get_sp_module_macro.sh  magic  mime.types  modify_httpdconf.sh  sp_modules.conf  sp_modules.conf.bak
[root@sslvpn system]#
0x03 svpn_ctrl 
[root@sslvpn system]# cat /sf/app/svpn/svpn_ctrl
#!/bin/bash
#
#
# Starts the at daemon
# Source function library.
. /sf/sbin/funcssl
RETVAL=0
PROG="svpn"
APACHE_LOCK_DIR="/sftmpfs/lock/apache_locks/"
recordcaller ${PROG} ${1}
mmap_conf_create() {
    if [ ! -f /etc/sangfor/ssl/mmap.conf ];then
        find /usr/local/apache2/htdocs -type f -print \
        |grep -v "\.csp$" | grep -v "\.tml$" | grep -v "\.sin$" | grep -v "\.inc$" | sed -e 's/.*/MMapFile &/' > /etc/sangfor/ssl/mmap.conf
    fi
}
authz_conf_create() {
    PLUGIN_LISTS=/etc/runtime/plugin_lists.json
    PLUGIN_MAPPING=/etc/runtime/plugin_mapping.json
    PLUGIN_ALIAS=/etc/runtime/plugin_service_alias.json
    PLUGIN_GROUP=/etc/runtime/plugin_service_groups.json
    if [[ -f ${PLUGIN_LISTS} && -f ${PLUGIN_MAPPING} && -f ${PLUGIN_ALIAS} && -f ${PLUGIN_GROUP} ]]; then
        return 0
    fi
    NTWF_PREPARE=/sf/app/ntwf_framework/node_ntwf_prepare.sh
    if [ -f ${NTWF_PREPARE} ]; then
        chmod +x ${NTWF_PREPARE}
        ${NTWF_PREPARE}
    fi
    return 0
}
check_httpconfig() {
    if [ -f /config/etc/sangfor/ssl/sslchain.crt ] && [ ! -f /etc/sangfor/ssl/sslchain.crt ]; then
        cp -f /config/etc/sangfor/ssl/sslchain.crt /etc/sangfor/ssl/sslchain.crt
    fi
}
start() {
    if [ ! -d "${APACHE_LOCK_DIR}" ]; then
        mkdir -p "${APACHE_LOCK_DIR}"
    fi
    touch /tmp/svpn_start
    mkdir -p /tmp/cookie
    chmod 777 /tmp/cookie
    chmod 777 /etc/runtime/cookie
    . /sf/sbin/pre_env
    buildconf > /dev/null 2>&1
    tpl_conv > /dev/null 2>&1
    config_worker > /dev/null 2>&1
    mmap_conf_create
    /sf/sbin/makeservercrt.sh config /config/etc/sangfor/ssl/server.crt user
    cp -af /config/etc/sangfor/ssl/server.crt /etc/sangfor/ssl/server.crt
    cp -af /etc/db/sqlite3/message2iptun.sq3 /etc/runtime/
    #add by suntao for m68en
    result=`openssl rsa -in /sftmpfs/etc/sangfor/ssl/ssl.key -noout -modulus | awk -F'=' '{print $2}'`
    qdbconf /sftmpfs/etc/db/sysconf/sysconf.db -d "Advanced.DevCertModulus" 1>&2>/dev/null
    qdbconf /sftmpfs/etc/db/sysconf/sysconf.db -i "Advanced.DevCertModulus" $result 1>&2>/dev/null
    result=`openssl rsa -in /sftmpfs/etc/sangfor/ssl/ssl.key -text -noout | grep publicExponent | awk -F ' ' '{print $2}'`
    qdbconf /sftmpfs/etc/db/sysconf/sysconf.db -d "Advanced.DevCertPublicExponent" 1>&2>/dev/null
    qdbconf /sftmpfs/etc/db/sysconf/sysconf.db -i "Advanced.DevCertPublicExponent" $result 1>&2>/dev/null
    convert_crdb 1>&2>/dev/null
    #end by suntao for m68en
    authz_conf_create
    # measures
    check_httpconfig
    # ipcs
    ipcs -s | grep nobody | awk '{print "ipcrm -s " $2}' | bash
    if [ -f /sf/app/ssl/gmdev ]; then
        /sf/app/apache_portal/bin/apachectl start -DIS_GM_DEV
    else
        /sf/app/apache_portal/bin/apachectl start
    fi
    RETVAL=$?
    /sf/sbin/crt2dat /etc/sinfor/ssl/ssl.crt /etc/htdocs/com/crt2.dat
    #/sf/sbin/rebuild_vlan.sh > /hislog/rebuild_vlan_log.txt 2>&1
    /sf/sbin/radius_account on
    rm /tmp/svpn_start -f
    return $RETVAL
}
#쳣£httpdпforkֲΪhttpdӽ̡
#ʱpidof httpdķʽɱ̾Ϳɱɾ
#ԣΪȷʽͨѯ˿ڵķʽҵ쳣httpḍȻɱ
kill_malformed_child()
{
    local listenport
    listenport=`grep '^Listen' /config/etc/sangfor/ssl/httpd.conf /config/etc/sangfor/ssl/ssl.conf | awk '{print $2}'`
    if [ -z "$listenport" ];
    then
        return
    fi
    local trytimes=0
    while [ $trytimes -lt 5 ];
    do
        local allpids=""
        local pids=""
        local name=""
        local tmp=""
        for port in $listenport
        do
            if echo "$port" | grep -q '[[:digit:]]\+';
            then
                tmp=`netstat -anpt | grep -i "tcp.*0.0.0.0:$port[[:space:]]\+" | grep -v "httpd" | awk '{print $7}'`
                pids=`echo $tmp | awk -F/ '{print $1}'`
                if [ -n "$pids" ];
                then
                    allpids="${allpids} $pids"
                    name=`echo $tmp | awk -F/ '{print $2}'`
                    echo "`date` stop svpn, kill -9 ${pids}(${name}) who listen $port" >> /hislog/error_log
                fi
            fi
        done
        if [ -z "$allpids" ];
        then
            break
        fi
        let trytimes+=1
        kill -9 $allpids > /dev/null 2>&1
        sleep 1
    done
}
stop() {
    rm -rf /etc/runtime/online_user/*
    rm -rf /etc/runtime/webopt/*
    rm -rf /sftmpfs/lock/pid.httpd
    /sf/app/apache_portal/bin/apachectl stop
    sleep 1
    TRYTIME=0
    while [ $TRYTIME -lt 5 ]
    do
        let TRYTIME+=1
        count=`pidof httpd | wc -w `
            if [ $count -eq 0 ]; then
                RETVAL=0
                break;
            fi
            echo "`date` stop svpn, pidof httpd $count" >> /hislog/error_log
            killall -9 httpd > /dev/null 2>&1
            sleep 1
    done
    kill_malformed_child
    RETVAL=$?
    rm -rf ${APACHE_LOCK_DIR}*
    /sf/sbin/radius_account off
    return $RETVAL
}
restart() {
    stop
    start
}
reload() {
    restart
}
case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
reload|restart)
    restart
    ;;
*)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
exit $?
exit $RETVAL
   if [ -f /sf/app/ssl/gmdev ]; then
        /sf/app/apache_portal/bin/apachectl start -DIS_GM_DEV
    else
        /sf/app/apache_portal/bin/apachectl start
    fi
​
 /sf/app/apache_portal/bin 
​
[root@sslvpn bin]# cat apachectl
#!/bin/sh
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Apache control script designed to allow an easy command line interface
# to controlling Apache.  Written by Marc Slemko, 1997/08/23
#
# The exit codes returned are:
#   XXX this doc is no longer correct now that the interesting
#   XXX functions are handled by httpd
#   0 - operation completed successfully
#   1 -
#   2 - usage error
#   3 - httpd could not be started
#   4 - httpd could not be stopped
#   5 - httpd could not be started during a restart
#   6 - httpd could not be restarted during a restart
#   7 - httpd could not be restarted during a graceful restart
#   8 - configuration syntax error
#
# When multiple arguments are given, only the error from the _last_
# one is reported.  Run "apachectl help" for usage info
#
ACMD="$1"
ARGV="$@"
#
# |||||||||||||||||||| START CONFIGURATION SECTION  ||||||||||||||||||||
# --------------------                              --------------------
#
# the path to your httpd binary, including options if necessary
HTTPD='/sf/app/apache_portal/bin/httpd'
#
# pick up any necessary environment variables