The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
1 / 42
The ABC of Next-Gen
Shellcoding
Hadrien Barral,
R´emi G´eraud-Stewart,
Georges-Axel Jaloyan,
David Naccache
´Ecole normale sup´erieure, PSL Research University
What we’re interested in today
⌅ Embedded devices, especially
smartphones.
⌅ Many people have phones. Some are
security-conscious.
⌅ Phones contain a lot of sensitive data:
attractive targets.
⌅ The usual hacking toolset is very
limited as of now.
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
2 / 42
Who we are
⌅ Hadrien Barral: Hacker. I like hacking stuﬀ.
⌅ Georges-Axel Jaloyan: PhD student. I like reversing open source binaries.
⌅ R´emi G´eraud-Stewart: Hacker. I like whisky and maths.
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
3 / 42
Why this matters and what is this about
⌅ Creative methods
⌅ . . .
to write constrained shellcodes
⌅ . . .
on new architectures
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
4 / 42
1. This is not the shellcode
you’re looking for
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
5 / 42
Shellcode 101
For those hiding in the back
⌅ Code that you wrote (or found) in the target’s memory
⌅ That gives you some power (e.g., pop a shell)
⌅ That you can jump to using some vuln (e.g. buﬀer overﬂow, UAF...)
Typical scenario: send a carefully crafted string to the target and proﬁt.
NOP sled
Payload
Target’s memory
Jump using vuln
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
6 / 42
Shellcode 102
It’s sometimes not as easy
⌅ If treated as a string, the shellcode can’t contain \x00
⌅ Stack protections (NX, ...)
⌅ Limited memory available for shellcode
⌅ Jumping to shellcode may be tricky (ASLR...)
Many clever techniques exist to work around these obstacles (ROP, heap sprayin’,
egglayin’, ...)
But...
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
7 / 42
Shellcode 102
Even ignoring the obstacles, take your typical kindergarten shellcode:
00000000: 6821 0a00 0068 6f72 6c64 686f 2c20 5768
h!...horldho, Wh
00000010: 4865 6c6c ba0e 0000 0089 e1bb 0100 0000
Hell............
00000020: b804 0000 00cd 80
.......
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
8 / 42
Some people try to detect and stop shellcodes
Can you believe that?
The textbook shellcode
⌅ Pretends to be user input but...
⌅ ...Has many NOP instructions
⌅ ...And non-printable characters
⌅ ...With /bin/sh somewhere
⌅ ...May look like another code
All this is suspicious and easily detectable
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
9 / 42
Shellcode 103: Fly under the radar
How to pass as human input?
Idea:
⌅ Use only ASCII-printable characters?
⌅ ... only alphanumeric characters?
⌅ ... only English words?
⌅ ... only Shakespeare quotes?
Advantages:
⌅ Less likely to trigger alarm, plausible deniability
⌅ Less likely to be escaped / broken
⌅ Can serve as a pick-up line
Disadvantages:
⌅ Is this even possible?
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
10 / 42
Shellcode 103: Fly under the radar
How to pass as human input?
Idea:
⌅ Use only ASCII-printable characters?
⌅ ... only alphanumeric characters?
⌅ ... only English words?
⌅ ... only Shakespeare quotes?
Advantages:
⌅ Less likely to trigger alarm, plausible deniability
⌅ Less likely to be escaped / broken
⌅ Can serve as a pick-up line
Disadvantages:
⌅ Is this even possible? YES
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
10 / 42
ASCII
IA32
‘A’
inc %eax
‘B’
inc %edx
‘C’
inc %ebx
‘D’
inc %esp
‘E’
inc %ebp
‘F’
inc %esi
‘G’
inc %edi
‘H’
dec %eax
‘I’
dec %ecx
‘J’
dec %edx
‘K’
dec %ebx
‘L’
dec %esp
‘M’
dec %ebp
‘N’
dec %esi
‘O’
dec %edi
ASCII
IA32
‘P’
push %eax
‘Q’
push %ecx
‘R’
push %edx
‘S’
push %ebx
‘T’
push %esp
‘U’
push %ebp
‘V’
push %esi
‘W’
push %edi
‘X’
pop %eax
‘Y’
pop %ecx
‘Z’
pop %edx
‘a’
popa
‘h’
push imm32
‘j’
push imm8
ASCII
IA32
‘p’
jo
short disp8
‘q’
jno short disp8
‘r’
jb
short disp8
‘s’
jnb short disp8
‘t’
je
short disp8
‘u’
jnz short disp8
‘v’
jbe short disp8
‘w’
ja
short disp8
‘x’
js
short disp8
‘y’
jns short disp8
‘z’
jpe short disp8
‘8’
cmp r/m8
r8
‘9’
cmp r/m32 r32
‘0’
xor r/m8
r8
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
11 / 42
ASCII
IA32
‘A’
inc %eax
‘B’
inc %edx
‘C’
inc %ebx
‘D’
inc %esp
‘E’
inc %ebp
‘F’
inc %esi
‘G’
inc %edi
‘H’
dec %eax
‘I’
dec %ecx
‘J’
dec %edx
‘K’
dec %ebx
‘L’
dec %esp
‘M’
dec %ebp
‘N’
dec %esi
‘O’
dec %edi
ASCII
IA32
‘P’
push %eax
‘Q’
push %ecx
‘R’
push %edx
‘S’
push %ebx
‘T’
push %esp
‘U’
push %ebp
‘V’
push %esi
‘W’
push %edi
‘X’
pop %eax
‘Y’
pop %ecx
‘Z’
pop %edx
‘a’
popa
‘h’
push imm32
‘j’
push imm8
ASCII
IA32
‘p’
jo
short disp8
‘q’
jno short disp8
‘r’
jb
short disp8
‘s’
jnb short disp8
‘t’
je
short disp8
‘u’
jnz short disp8
‘v’
jbe short disp8
‘w’
ja
short disp8
‘x’
js
short disp8
‘y’
jns short disp8
‘z’
jpe short disp8
‘8’
cmp r/m8
r8
‘9’
cmp r/m32 r32
‘0’
xor r/m8
r8
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
11 / 42
ASCII
IA32
‘A’
inc %eax
‘B’
inc %edx
‘C’
inc %ebx
‘D’
inc %esp
‘E’
inc %ebp
‘F’
inc %esi
‘G’
inc %edi
‘H’
dec %eax
‘I’
dec %ecx
‘J’
dec %edx
‘K’
dec %ebx
‘L’
dec %esp
‘M’
dec %ebp
‘N’
dec %esi
‘O’
dec %edi
ASCII
IA32
‘P’
push %eax
‘Q’
push %ecx
‘R’
push %edx
‘S’
push %ebx
‘T’
push %esp
‘U’
push %ebp
‘V’
push %esi
‘W’
push %edi
‘X’
pop %eax
‘Y’
pop %ecx
‘Z’
pop %edx
‘a’
popa
‘h’
push imm32
‘j’
push imm8
ASCII
IA32
‘p’
jo
short disp8
‘q’
jno short disp8
‘r’
jb
short disp8
‘s’
jnb short disp8
‘t’
je
short disp8
‘u’
jnz short disp8
‘v’
jbe short disp8
‘w’
ja
short disp8
‘x’
js
short disp8
‘y’
jns short disp8
‘z’
jpe short disp8
‘8’
cmp r/m8
r8
‘9’
cmp r/m32 r32
‘0’
xor r/m8
r8
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
11 / 42
ASCII
IA32
‘A’
inc %eax
‘B’
inc %edx
‘C’
inc %ebx
‘D’
inc %esp
‘E’
inc %ebp
‘F’
inc %esi
‘G’
inc %edi
‘H’
dec %eax
‘I’
dec %ecx
‘J’
dec %edx
‘K’
dec %ebx
‘L’
dec %esp
‘M’
dec %ebp
‘N’
dec %esi
‘O’
dec %edi
ASCII
IA32
‘P’
push %eax
‘Q’
push %ecx
‘R’
push %edx
‘S’
push %ebx
‘T’
push %esp
‘U’
push %ebp
‘V’
push %esi
‘W’
push %edi
‘X’
pop %eax
‘Y’
pop %ecx
‘Z’
pop %edx
‘a’
popa
‘h’
push imm32
‘j’
push imm8
ASCII
IA32
‘p’
jo
short disp8
‘q’
jno short disp8
‘r’
jb
short disp8
‘s’
jnb short disp8
‘t’
je
short disp8
‘u’
jnz short disp8
‘v’
jbe short disp8
‘w’
ja
short disp8
‘x’
js
short disp8
‘y’
jns short disp8
‘z’
jpe short disp8
‘8’
cmp r/m8
r8
‘9’
cmp r/m32 r32
‘0’
xor r/m8
r8
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
11 / 42
Alphanumeric shellcodes
rix, Phrack 57, 2001 + Basu et al., ICISS, 2014
⌅ The x86 ISA is really nice and smooth when going into alphanumeric:
I push/pop/inc/dec have single letter instructions!
I jmp and cmp are available
I xor with many operands are available
⌅ For x86-64: just preﬁx 0x48 (= H) to every instruction (breaks inc/dec though)
⌅ Follow the tutorial: https://nets.ec/Alphanumeric_shellcode
jZTYX4UPXk9AHc49149hJG00X5EB00PXHc1149Hcq01q0Hcq41q4Hcy0
Hcq0WZhZUXZX5u7141A0hZGQjX5u49j1A4H3y0XWjXHc9H39XTH394c
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
12 / 42
English shellcode
Mason et al., English Shellcode, ACM CCS, 2009
⌅ Generate English compatible subset of IA32...
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
13 / 42
English shellcode
Mason et al., English Shellcode, ACM CCS, 2009
⌅ Generate English compatible subset of IA32...
⌅ ...We have more than alphanumeric:
(punctuation, spaces, ...)!
ASCII
IA32
‘p.’
jo short $30
‘q.’
jno short $30
‘r.’
jb short $30
‘s.’
jnb short $30
‘t.’
je short $30
‘u.’
jnz short $30
‘v.’
jbe short $30
‘w.’
ja short $30
‘x.’
js short $30
‘y.’
jns short $30
‘z.’
jpe short $30
‘ ca’
and 61(%ebx), %ah
‘ An’
and 6E(%ecx), %al
‘ jo’
and 6F(%edx), %ch
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
13 / 42
English shellcode
Mason et al., English Shellcode, ACM CCS, 2009
⌅ Generate English compatible subset of IA32...
⌅ ...We have more than alphanumeric:
(punctuation, spaces, ...)!
ASCII
IA32
‘p.’
jo short $30
‘q.’
jno short $30
‘r.’
jb short $30
‘s.’
jnb short $30
‘t.’
je short $30
‘u.’
jnz short $30
‘v.’
jbe short $30
‘w.’
ja short $30
‘x.’
js short $30
‘y.’
jns short $30
‘z.’
jpe short $30
‘ ca’
and 61(%ebx), %ah
‘ An’
and 6E(%ecx), %al
‘ jo’
and 6F(%edx), %ch
The ABC of Next-Gen Shellcoding @ DEF CON 27
11 Aug 2019
13 / 42
English shellcode
Mason et al., English Shellcode, ACM CCS, 2009
⌅ Generate English compatible subset of IA32...
⌅ ...We have more than alphanumeric:
(punctuation, spaces, ...)!
ASCII
IA32
‘p.’
jo short $30
‘q.’
jno short $30
‘r.’
jb short $30