Question: A web application uses a session variable 'user_role' to store the role of the authenticated user. This variable is set upon successful login and is checked on subsequent requests to authorize access to sensitive areas of the application. An attacker discovers that the application also sets the 'user_role' variable to 'guest' for users who visit the public forum page without logging in. Considering the concept of Session Variable Overloading, which of the following attacks could the attacker potentially execute?
"A": "The attacker could modify the 'user_role' variable on the client-side to escalate their privileges.",
"B": "The attacker could visit the public forum page to set the 'user_role' to 'guest' and then exploit the session variable reuse to access sensitive areas without authentication.",
"C": "The attacker could create multiple accounts to generate concurrent sessions, leading to a denial of service.",
"D": "The attacker could intercept other users' traffic to steal their session cookies and impersonate them."
Answer: B