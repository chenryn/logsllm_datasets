constraintsarepushinggovernmentstodrasticallyincreaseproductivityandreduce
costs. Electronicservicesareatargetedarea.
TheEuropeanCommissionisaddressingtheseconcernsthroughits2020Strat-
egyanditsDigitalAgendaflagship.The“DigiytalbyDefaultorbyDetour?”report
publishedinMay2013surveyed28.000internetusersacross27Europeancountries.
Thestudyfoundthat73%ofcitizensdeclaretaxes,57%changetheiraddress,and
56%applyforahighereducationonline. Amongthemanypointsfocused,five
importantkeyfindingsarehighlighted:
50 ElectronicServices
Innovation Transformationisneededtodrivethedevelopmentofinnovativee-
governmentservices. Newsolutionsthatusetechnologyinasmarterway,
capitalizeonsocialmediaandcollaborativeplatforms,implementstronger
citizen-orientedstrategies,andopenupdatatoexploitthevalueofhidden
knowledgeareindispensable. Nonetheless,generatinginnovativeservicesis
farfromtrivial.
Design Governmentshavenotyetfullyembracedaservice-orientedthinking. A
shift needs to take place to change the ad hoc management of services to
theirsystematicdesigncenteredarounduserneeds. Thereisavariationin
thesatisfactionofonlineserviceusers,from41%to73%,whichmaybea
symptomoftheuseofdifferentapproachesforservicedesign.
Efficiency Theincreasingnumberofautomatedservicesandselfservicescurrently
availablegeneratepreciousdatawhichcanbenefitfromadvancedalgorithms
andanalyticaltools. Serviceanalyticscanextractinformationtoenablepub-
licagenciestoimproveservicedeliveryefficiencyandcustomerexperience.
Thereportindicatesthat80%ofonlinepublicservicessavecitizenstime,
76%provideflexibility,and62%reducecosts.
Transparency Currently,servicesarepresentedasblack-boxessincecitizensare
unawareofhowprocessesareinternallyconducted. Infact,thetransparency
ofserviceexecutionratesbelow50%. Thisindicatesthatmoretransparency
isstillneeded. Governmentsareprovidingbasicdataabouttheiragencies,
butinformationonservicesthatempowercitizens.
Businessmodels Openingupdatawillenabletoimplementnewbusinessmodels
to reach economic gains from various perspectives. The direct impact of
OpenDatainEuropewasestimatedate32billionin2010,withanestimated
annualgrowthrateof7%. Nonetheless,fewgovernmentsareexploitingthe
fulleconomicbenefitsofOpenData.
Thereisnodoubtthatdigitaltechnologieswillbeafundamentalpillaroffuture
publicservicedeliverytakingadifferentdirectionfromhowgovernmentoperates
todate. WhileEuropeistakingaseriousstrategytoimplementdigitalservices2at
thegovernmentlevel,similareffortsarevisibleattheglobalscale.
Three of the most advanced governments in this field include the UK, New
Zealand, and US. UK adopted a digital by default approach and offers a guide
andresources(gov.uk/service-manual)fordeliveringdigitalservicesinthe
government. New Zealand has followed the same steps and is mirroring UK
progresses(seebeta.govt.nz). IntheUS,TheWhiteHouseissuedthedirective
“Buildinga21stCenturyDigitalGovernment”3 onMay23,2012,announcinga
strategytoenableamoreefficientdigitalservicedeliverybyrequiringagencies
2Thetermdigitalserviceshasthesamemeaningaselectronicservices
3TheWhiteHouse,Buildinga21stCenturyDigitalGovernment,May23,2012,http://www.
whitehouse.gov/sites/default/files/uploads/2012digital_mem_rel.pdf
eGovernment Benchmark 2012 – INSIGHT report
Demand-side survey: Citizen Insights
2 Demand-side Building on the complete set of many citizens have used
data per country, the results allow eGovernment services and
survey: Citizen for country specific analysis and prefer the online channel
Insights will provide useful insights for ! Barriers for using online public
governments to improve their services: describing reasons for
eGovernment strategy as well as not using eGovernment services,
The User Survey exercise provides a
specific public services. The providing governments with
new and true-demand picture of
background report and the data direct recommendations for
how European Citizens perceive
sets to be published will enable improving take-up
online public services. As far as
countries to do so. The 2012 ! eGovernment satisfaction: with
known, it is the first time this
e-Government benchmark is a online public and private
exercise has been completed on
significant enhancement of the e- services
this scale, revealing representative
Government benchmark of
insights at both country and EU ! Fulfilment and benefits:
previous years, moving with the
level. The survey reached 28,000 revealing reasons for using
fast changing times of ICT
internet-using citizens across 32 EU eGovernment services and
developments in public service
countries, exploring 27 questions, indicating whether governments
delivery. This insights report at
and 19 most common citizen are able to meet expectations
hand will focus on the insights at
services. This provides a picture citizens have when using
the EU level regarding:
with 95% confidence (relevancy) of eGovernment services
! eGovernment use and channel
the views of the 600 million
preferences: explaining how
European citizens.
2.2 ServicesastheAutomationofActivities 51
Table 2.1: Key Insights User Survey
Barriers that prevent Fulfillment & Benefits of
eGovernment Use eGovernment use eGovernment Satisfaction eGovernment use
!46% of users of public services ! 21% was not aware of the ! Satisfaction with eGovernment !47% of eGovernment users fully
used eGovernment services existence of relevant websites services is significantly (-2,0) got what he wanted from the
!54% preferred traditional or online services, mainly lower than the satisfaction with public administration
channels younger people (especially eBanking services (resp. 6,5 & !46% only partially receives what
! !H i e c M ( e tn a aoC xo d m xo anhw ei s mtc a o sa te a n n ’ic pv t nn (gtee o 7e e d gr tp 3dl h o 5 u %t )n ev :o0 l e a e ‘ o1% x dp rr f9t enr e o u e t cm sGf if slem ae o eea r rr rv vnl e i l n t i t ws cr wh ge e e ie h ls r is l nv p e ucio n c son e et md h te e e hn y et s ! s a e s 8 w s r oet e eb G l0 iu dlr rll % ao led v v ei tnv i i/ re ic cis v gnn B pe ek endt s sU ei les l i . y ol ce ) T se T , a px m s d hlw ti le s t ee i oa ss oth s rs in b o gn eu ad ua r g s a wo tw l ew a r o u aoe a cni e p ll mkr sl lm G ei oi cn n o e o oo og 6fe nv nr f 2 t e s aro % ie ns u t dl oe ss fv e o a fnt ! ! ! 8 S s w ‘ t l SiD he va e, i5 ar e et t rvi h v) tc s u i il f ec ca1 pa e G er,c 3 is t sont o i i a% vgo s c re n id oirn t r n uw ico zm no ei pt dm neh p sn eie n t e G g t xsa o e ps xiv r e'n ve csc ir th cen aeo tm 2 sw io0 ce s0 nan 7 snt , ! !w 5 w T m f s po ii r% mma a lo ols n os p cd e t t w el li o e id a i sfm eo d si n cn dk . da p a o e A t b toftd piyl r a oeg t p f l nsaxe lo aa i ntr ob rv t ew fi i l n nti ah t o g t ya ld y u mt g e , s ah lo qe ii ve n un r es as e r, y l ya it r a ye n od f a
eChannel for this service next daily Internet users (un)employment receive low service is less relevant to
t ai dm de r) e, s ‘ sm wo iv thin ing/ cc oh ua nn tg ri yn ’g ( 57%) ! 11% did not use Internet s toa dti asf ya ’sc t eio con n s oc mor ie cs s, ir te uf al te ic ot ning citizens
a en dd c‘ ae tn ioro nl l ain ng /in rh aig ph pe lyr b pe roc ta eu cs te o nf ac no dn sc ee cr uns ta yb oo fu t
u d o ing for io ri
student grant’ (56%) personal data
!Least popular eGov service: ! 24% was not able to use eGov
‘reporting a crime’ (41%), services. Mainly older people,
‘starting a new job’ (41%) and but also young people who
‘starting a procedure for abandoned because the service
disability allowance’ (42%) was too difficult to use
Figure2.5: Keyfindingsfromthe“DigitalbyDefaultorbyDetour?” report[14]
Page 16 of 74
toestablishspecific, measurablegoalsbyusingwebperformanceanalyticsand
customersatisfactionmeasurementtoolsonall.govwebsites.
2.2.8 DevelopingElectronicServices
Electronicservicesarerealizedbysoftwareprogramsthatutilizeexistingtechnical
infrastructureslikethecustomer’saccessdevice,theinternet,andtheprovider’s
datacenterandinformationsystems. Todevelopanelectronicservicemeansto
developasoftwareprogram.
Insoftwareengineering,web-accessibleprogramsarecalledwebapplications
(seeFigure2.6). Awebapplicationisasoftwareprogramresidingontheprovider’s
web application server which uses the client’s web browser as the presentation
layerinaclient/serverfashion. Clientandservercommunicateviastandardinternet
protocolssuchasHTTP.Onrequestoftheclient, thewebapplicationcreatesa
responseinformofwebpagescontainingstaticanddynamiccontent. Programs
maybedownloadedandexecutedontheclient’swebbrowser. Thedatabaseserver
willberesponsibleforthepersistenceofdatastoredforthewebapplication.
52 ElectronicServices
Web Browser
Web Page HTTP Web Web
Application Application
Server Python
JavaScript
HTML
HTML
PaHgTeMs L Database
Pages
Pages Server
Figure2.6: Architectureofawebapplication
Popularprogramminglanguagesusedontheserversideofthewebapplication
areJava,Perl,PHP,Python,Ruby,or.NET.MostwebapplicationsuseHTMLor
XHTMLtocreatewebpages. TheyoftensendJavaScriptand/orFlashtomakethe
contentdynamicandmoreinteractive.
2.3 Services as Programming Paradigms
Incontrasttotheprevioussection,thissectiondescribesanevolutioninsoftware
engineering that has started with service-oriented programming and has seen a
similarboostwiththeadventoftheinternetlikeelectronicservices. Ithasledtothe
conceptsofwebservices,cloudservices,semanticwebservices,andtheinternetof
services,whicharecoveredinthefollowingsections.
Naturally, these developments are closer to the fields of computer science
and information technology rather than to the fields of economics, business, or
management as it was the case of Section 2.2 on services as the automation of
activities.
2.3.1 Subroutines
Theoriginsofserviceorientationcanbetracedbacktotheearlydaysofprogram-
ming. Inthe1950s, programmersrealizedthatcertainfunctions, e.g., datecon-
versionroutines,wereusedoverandoveragainthroughouttheirapplications[15].
Theyisolatedthefunctionfromtherestofthecodeandputitintoasubroutine
(seeFigure2.7.a). Thissubroutinecouldthenbecalledfromanypointinthemain
programwhereitwasneeded. Itreturnedtheresultbacktothemainprogramatthe
pointfromwhereitwascalled. Theprogrammerkeptthesubroutineinalibrary
forthecasethatitcouldbereusedinanotherapplication. Subroutinescouldalso
besharedwithotherprogrammers. Asounduseofsubroutinesoftenreducedthe
costandincreasedthequalityandreliabilityofdevelopingandmaintaininglarge
applications.
2.3 ServicesasProgrammingParadigms 53
One componen t Two components Many components
1 1
1
2
2
3
4
“Monolithic“ Programming Less programming; Extensive use of
Program using reusable, more use of components (services) ;
pre-programmed components (services) programming has
components become “modeling“
(services)
(a) (b) (c) (d)
Figure2.7: Evolutionofprogrammingmodels
2.3.2 Components
Over time, programmers realized that business applications exhibited many of
theserecurring, separablefunctions. Itbecamecommonpracticetoextensively
reusepre-programmedobjectsorcomponentsasthesubroutineswerenowcalled
(seeFigure2.7.b,c,andd). Intheend,programmersdidnotwritemanylinesof
codesanymore–theymainlycomposedpre-built,reusablecomponentsstoredin
softwarelibraries. Theorganizationofthecodeinseparablefunctionsmadecode
easily reusable due to its inherent modularity, high cohesion, and separation of
concerns. Thisnewstyleofprogrammingwascalledcomponent-basedsoftware
development.Thisstylewasanindicationthatcomponentswouldeventuallyevolve
intodistributedservicestoachieveahigherreuseanddecoupling.
Parnas, an early pioneer from the field of software engineering, proposed
theconceptofmodule[16],whichlatterevolvedintotheconceptofcomponent.
Moduleswereintroducedtoenablesoftwaredeveloperstoimplementsegmentsof
codeindependently. Theyenabledtochangeonemodulewithoutaffectingother
modules,andeasetheunderstandingoftheoverallsystembyanalyzingonemodule
atatime.
There are some analogies with the French restaurant example introduced in
Chapter1(page 9): thechefwithhisstaffandkitchenequipmentwasseparated
fromthearistocrat’shouseholdandmovedtosomeplaceelse,nowcalledarestau-
rant – much like a particular function was separated from the main application
programandmovedintoasubroutine(component). Therestauranthasbecome
aself-contained,autonomousservicewhich(theoretically)couldbeusedbythe
formerowner,butisnowavailabletomanyotherpeoplehavingaproperphysical
interface. Thesubroutine(component)isaself-contained,autonomousprogram
54 ElectronicServices
whichcanbecalledfromtheoriginatingmainprogram,butalso(potentially)from
manyotherprograms.
An important prerequisite for reusability is the separation of the service’s
implementationfromitsinterface. Applicationbuildersshouldnotbeconcerned
with how a service works, only with what the service accomplishes and how it
is invoked. For this purpose, the service needs a well-defined interface and its
functionalityhastobedescribedinaformunderstandablebytherequestor.
2.3.3 BusinessProcessModeling
Once a reusable set of services is available, the developer can start building a
businessapplicationbasedonthesebuildingblocks. Byintention,thewordpro-
grammingisnolongerusedforthisactivity,butratherthewordscomposingor
modeling.Thisdifferentwordingindicatesaparadigmshiftinsoftwareengineering.
Awidelyusedapproachforthecompositionofservicesintobusinessapplications
isbusinessprocessmodeling(BPM).BPMprovidesgraphicalnotations, which
are intuitive to business users yet formal enough to represent complex business
semantics.
Business process modeling is used by business analysts and consultants to
describebusinessprocessesinreengineeringprojects,anditisusedbysoftware
developers to document business processes as a starting point for application
development. The business process model notation (BPMN) has emerged as a
widelyacceptedstandardforBPM.Otherwell-knowngraphicallanguagesinclude
event-drivenprocesschains(EPC),simpleprocessstatediagrams,andevenPetri
nets(generallyusedinacademicenvironments).
Once processes are modeled, they can be executed using an orchestration
language. Forexample,thebusinessprocessexecutionlanguage(BPEL)defines
processesthatcanbeexecutedonanorchestrationengine. Duringexecution,the
externallyobservableinteractionsbetweenservicesiscalledthechoreographyand
describescollaborationsbetweenservices.
2.3.4 Service-OrientedArchitecture(SOA)
Service-OrientedArchitecture(SOA)andService-OrientedComputing(SOC)are
programming paradigms that were introduced to overcome the inflexibility of
monolithicsoftware. Theyutilizeservicesasfundamentalelementsfordeveloping
applications[17].
Definition — Service-Oriented Architecture. An architectural style and
business-centricprogrammingparadigmtodevelopdistributedsystemswhere
systemsconsistofsoftwareclients,whichactasserviceconsumers,andsoft-
wareproviders,whichactasserviceproviders.
2.3 ServicesasProgrammingParadigms 55
CompositionandDecomposition
Programmersmadetheobservationthatsmallerfunctionslike“checkcustomer
status”,“checkorderstatus”,or“determineproductavailability”wererepeatedly
usedinlargerbusinessapplicationslikeorderprocessing,accountmanagement,or
servicescheduling. Itappearedmeaningfultoseparatetherepetitivetasksfromthe
businessapplicationsandtoputthemasservicesintoaservicerepository. Oncea
servicerepositoryisavailable,applicationscouldbedevelopedbycompositionof
existingservices.
Many companies decided to use the SOA paradigm for new application de-
velopment. Theyalsoreengineeredexistingapplicationsbybreakingthemdown
intosmaller,manageableservices,whichwerethengluedtogetheragaininamore
flexible way. This process of decomposition is not trivial. There are better and
worsedecompositions. Agooddecompositionisonewhichhaslittleinteraction
betweenthecomponentsandahighfunctionalcoherencewithinthecomponents.
Inthiscase,componentsaremore“self-contained”and“looselycoupled”–char-
acteristicsthataredesiredfromaservice. Inhisseminalwork“TheArchitecture
of Complexity”, Simon [18] points out that many natural (e.g., biological) and
man-madesystems(e.g.,technicalandorganizational)exhibitthiskindof“near
decomposability”.
Figure2.9showsa“baddecomposition”withtoomanyinteractions(interfaces)
betweenthecomponentsanda“gooddecomposition”withlittleinteractionbetween
thecomponents. Inthelattercase,theinterfacesarebettermanageableandcanbe
describedwithlesseffort.
(a) A bad decomposition: too many (b) A good decomposition: little interaction
interactions between the components between the components; interfaces can be