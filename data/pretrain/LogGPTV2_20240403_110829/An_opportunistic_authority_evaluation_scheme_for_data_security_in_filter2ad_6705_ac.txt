vices) and certiﬁcates of trusted entities, so that it can securely obtain credentials. It
can also cache credentials for use in ofﬂine mode. The duration for which a cached
attribute value may be used depends on whether it is persistent or volatile. The
PDP of peer/server then evaluates speciﬁed DSA and user credentials to determine
whether a use-license can be given to the user.
12
Figure 5: Interactions to obtain a Use License
5.2 Usage Control
Figure 6 illustrates the interactions to evaluate access when a user has a valid use-
license. Implementation of usage control requires that the PDP, DPOAPI and the
controlled application implement listener interfaces to handle changes in the mon-
itored attributes. On access evaluation, if the policy granting access to the user
requires monitoring, the PDP subscribes to the PIP to receive notiﬁcation about
changes in the monitored attributes. The PIP then subscribes to local or remote
attribute authorities. Note that in ad hoc mode we require remote authorities
for monitored attributes to be within the local network and communication with
them should be possible using opportunistic routing. When a monitored attribute
changes, the PIP sends an attribute changed event to the PDP. The PDP is session-
aware and keeps track of sessions that need to be re-evaluated when subscribed
attributes change. Thus, the PDP determines the sessions that must be reevaluated
and asks the DPOAPI to send the access evaluation requests for those sessions. The
DPOAPI obtains the cached copy of the user credentials from the PIP and sends the
evaluation requests to the PDP. If the permissions returned by the PDP are different
from the previous permissions, the DPOAPI sends a permission changed event to
the application. The application is trusted to terminate the ongoing accesses, while
the DPOAPI will stop providing decrypting data for the application if the user has
lost all permissions.
The monitored conditions may need to be reevaluated several times during an
access session. It is efﬁcient to evaluate the monitored conditions because com-
munication between the PEP and PDP are local and no network communication is
needed after an attribute changed event is received.
13
Figure 6: Usage control (a) evaluation for new session and (b) revaluation in an
ongoing session.
6 Implementation
We have implemented the UDSA architecture and tested with development of two
UDSA-aware applications. The PDP components of the architecture were devel-
oped at Imperial College London, and the PEP and PIP components were devel-
oped at European Microsoft Innovation Center (EMIC). The PDP component for
end-user devices has been implemented as a Java library, and the server-side PDP
component is exposed as a Java web service. The DPOAPI and PIP components
are implemented using C#. Interoperability between Java and C# components is
achieved using JNBridge [12].
The two UDSA-aware applications demonstrate use of the architecture in dif-
ferent scenarios. The ﬁrst application provides secure access to XML documents
containing information about an incident. The data-protection mechanism imple-
mented is ﬂexible and allows us to restrict the access to selected parts of the docu-
ment. In addition, the access to the document can be restricted based on the user’s
location, role, and status of the incident. User’s location is determined by trian-
gulation of wiﬁ tags (Aeroscout tags [3]) carried by the user. The user’s identity
and location credentials are issued by a security token service (STS) implemented
using the Geneva Framework [8]. The second application instead provides secure
access to sensitive scientiﬁc data in a typical enterprise scenario.
14
7 Discussion
A pragmatic data sharing architecture for crisis management should allow a re-
sponder to override the security policies to access data in high risk situations. Im-
plementation of such break-the-glass security mechanism should be accompanied
with the creation of an activity log that can be reviewed later.
In general, when users have complete privileges on their devices, it is neces-
sary to rely on the trusted computing (TC) technology [24, 11] to ensure secrecy
of the encryption keys (e.g. PEP’s private key) and the integrity of the policy and
enforcement infrastructure. TC provides hardware-based security and allows only
trusted software to access sealed data such as keys. Sandhu et. al [21] describe
several architectures based on TC to provide policy enforcement and implemen-
tation. However, in case of Government agencies responding to a crisis situation
or large corporations the user privileges are often restricted and well managed. In
such cases, it is not necessary to rely on TC. The safety of keys and integrity of the
policy and enforcement infrastructure can be provided by restricting user access
over them.
Our architecture also allows the end users to freely redistribute protected data to
others. However, to access the protected data each recipient needs to obtain a use-
license from one of the designated policy evaluating authorities after presenting her
credentials.
UDSA uses an access revocation similar to IDSA. On use license expiration the
PEP requires the user to renew the use-license to continue the access. This allows
the trusted policy evaluation authorities to check for revocations.
8 Conclusions
In this paper we presented an architecture for secure data sharing in crisis sce-
narios. The architecture uses a ﬂexible policy evaluation scheme that provides
automated evaluation of data sharing requests. Automation allows the architecture
to provide faster and secure data sharing than manual data sharing practices. In
addition, usage control on disseminated data can be enforced without need to con-
nect with organizational infrastructures because users can be evaluated within their
local network. This allows the architecture to cater for data sharing among users
with intermittent connectivity.
We have also shown that it is possible to use the same architecture for scenarios
with and without reliable network connectivity. The UDSA architecture achieves
this goal by using distributed policy evaluation and establishing the required trust
relationships using the concept of DSAs.
15
References
[1] N. Adam, A. Kozanoglu, A. Paliwal, and B. Shaﬁq. Secure information shar-
ing in a virtual multi-agency team environment. Electron. Notes Theor. Com-
put. Sci., 179:97–109, 2007.
[2] Adobe. A primer on electronic document security, 2004. White Paper.
http://www.adobe.com/security/pdfs/acrobat live-cycle security wp.pdf Ac-
cessed 22-Sep-2009.
[3] Aeroscout. http://www.aeroscout.com/content/tags.
[4] M. J. Atallah, K. B. Frikken, and M. Blanton. Dynamic and efﬁcient key
In CCS ’05: Proceedings of the 12th
management for access hierarchies.
ACM conference on Computer and communications security, pages 190–202,
New York, NY, USA, 2005. ACM.
[5] Authentica. Enterprise rights management for document protection, 2005.
White Paper.
[6] J. Bethencourt, A. Sahai, and B. Waters. Ciphertext-policy attribute-based
encryption. In SP ’07: Proceedings of the 2007 IEEE Symposium on Security
and Privacy, pages 321–334, Washington, DC, USA, 2007. IEEE Computer
Society.
[7] D. Boneh and M. Franklin.
Identity based encryption from the Weil pair-
ing. In Proc. 21st Annual Int. Cryptology Conference, pages 213–229, Santa
Barbara, USA, 2001.
[8] M. L. Bustamante. A better approach for building claims-based wcf ser-
vices. MSDN magazine, December 2008. http://msdn.microsoft.com/en-
us/magazine/dd278426.aspx.
[9] M. Conti and S. Giordano. Multihop ad hoc networking: The reality. IEEE
Communications Magazine, 45(4):88–95, April 2007.
[10] EMC. Emc documentum information rights management: Overview of tech-
nical architecture, 2006. White Paper.
[11] E. W. Felten. Understanding trusted computing: Will its beneﬁts outweigh its
drawbacks? IEEE Security and Privacy, 1(3):60–62, 2003.
[12] JNBridgePro. http://www.jnbridge.com/jnbpro.htm.
16
[13] Leeds Primary Care Trust. Appendix 3 - Example of an Information Shar-
ing Agreement. In Leeds Interagency Protocol for Sharing Information.,
2008. http://www.leedspct.nhs.uk/?pagepath=About Us/Information Shar-
ing/Protocol. Accessed 10-Dec-2009.
[14] Liquid Machines. Liquid Machines and Microsoft Windows Rights Man-
agement Services (RMS): End-to-end Rights Management for the Enterprise,
2006. White Paper.
[15] Microsoft.
Technical overview of windows
for windows
services
download.microsoft.com/download/8/d/9/8d9dbf4a-3b0d-4ea1-905b-
92c57086910b/RMSTechOver-view.doc.
server 2003,
2005.
rights management
White Paper. URL:
[16] M.-C. Mont, S. Pearson, and P. Bramhall. Towards accountable management
of identity and privacy: Sticky policies and enforceable tracing services. In
DEXA Workshops, pages 377–382, 2003.
[17] J. Park and R. S. Sandhu. The UCONABC usage control model. ACM Trans.
Inf. Syst. Secur., 7(1):128–174, 2004.
[18] J. Park, R. S. Sandhu, and J. Schifalacqua. Security architectures for con-
In 16th An. Computer Security
trolled digital information dissemination.
Applications Conf. (ACSAC), pages 224–, New Orleans, USA, 2000. IEEE
Computer Society.
[19] R. Ramanathan, R. Hansen, P. Basu, R. Rosales-Hain, and R. Krishnan. Pri-
oritized epidemic routing for opportunistic networks. In Proc. of the 1st int.
MobiSys Workshop on Mobile Opportunistic Networking (MobiOpp), pages
62–66, New York, USA, March 2007. ACM.
[20] A. Sahai and B. Waters. Fuzzy identity-based encryption. In 24th Int. Conf.
on the Theory and Applications of Cryptographic (EUROCRYPT), volume
3494 of LNCS, pages 457–473. Springer, 2005.
[21] R. S. Sandhu, K. Ranganathan, and X. Zhang. Secure information sharing
enabled by Trusted Computing and PEI models. In ASIA CCS, pages 2–12,
2006.
[22] E. Scalavino, V. Gowadia, and E. C. Lupu. PAES: Policy-based Authority
Evaluation Scheme. In Proceedings of the 23rd Annual IFIP WG 11.3 Work-
ing Conference on Data and Applications Security XXIII, pages 268–282,
Berlin, Heidelberg, 2009. Springer-Verlag.
17
[23] E. Scalavino, G. Russello, R. Ball, V. Gowadia, and E. C. Lupu. An Op-
portunistic Authority Evaluation Scheme for Data Security in Crisis Manage-
ment Scenarios. In Proceedings of Asia CCS, 2010.
[24] S. Schoen.
Trusted Computing: Promise and Risk, 2003.
URL:
http://www.eff.org/ﬁles/20031001 tc.pdf.
[25] A.
Secure.
Choosing
an
enterprise
rights
system:
ment
www.windowsecurity.com/uplarticle/Authentication and Access Control/ERM-
architectural-approaches.pdf.
Architectural
approach,
2007.
manage-
URL:
[26] V. Swarup, L. Seligman, and A. Rosenthal. A data sharing agreement frame-
work. In ICISS, pages 22–36, 2006.
[27] United Kingdom. Cabinet Ofﬁce.
Emergency
preparedness
guidance on part 1 of
sociated
http://www.cabinetofﬁce.gov.uk/media/131903/emergprepﬁnal.pdf.
the civil contingencies act 2004,
arrangements.
non-statutory
regulations
and
-
its as-
URL:
[28] A. Vahdat and D. Becker. Epidemic routing for partially connected ad hoc
networks. Technical Report CS-2000-06, Duke University, April 2000.
18