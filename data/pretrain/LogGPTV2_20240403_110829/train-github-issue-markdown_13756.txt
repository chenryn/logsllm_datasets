### System Information
- **OpenCV Version:** 4.1.2-1
- **Operating System/Platform:** Linux (Arch)
- **Compiler:** gcc (not relevant for this issue)

### Detailed Description
In the following Python 3 code, `cap.get(cv2.CAP_PROP_POS_MSEC)` does not return the correct position in milliseconds if `cap.read()` has not been called before the query. This behavior is different from version 4.1.1-1, where the method works as expected.

### Steps to Reproduce
The following Python 3 code demonstrates the issue:

```python
import cv2

# Initialize the VideoCapture object
cap = cv2.VideoCapture("set/your/file/here")

# Get the frame width and total frame count
width = cap.get(cv2.CAP_PROP_FRAME_WIDTH)
frame_count = cap.get(cv2.CAP_PROP_FRAME_COUNT)
print(f"OpenCV width: {width} frames: {frame_count}")

# Read the first frame
cap.read()

# Get the timestamp at the current frame (should be 0.000)
ts = cap.get(cv2.CAP_PROP_POS_MSEC)
print(f"Timestamp at frame 0 after read: {ts:.3f}")

# Set the position to the 5th frame
cap.set(cv2.CAP_PROP_POS_FRAMES, 5)

# Get the timestamp at the 5th frame
ts = cap.get(cv2.CAP_PROP_POS_MSEC)
print(f"Timestamp at frame 5 after setPos: {ts:.3f}")

# Retrieve the frame at the 5th position
ret, frame = cap.retrieve()
ts = cap.get(cv2.CAP_PROP_POS_MSEC)
print(f"Timestamp at frame 5 after retrieve: {ts:.3f}")

# Read the next frame
ret, frame = cap.read()
ts = cap.get(cv2.CAP_PROP_POS_MSEC)
print(f"Timestamp at frame 5 after read: {ts:.3f}")

# Release the VideoCapture object
cap.release()
```

### Results
- **For OpenCV 4.1.2-1:**
  ```
  OpenCV width: 720 frames: 9000
  Timestamp at frame 0 after read: 0.000
  Timestamp at frame 5 after setPos: -2969.967
  Timestamp at frame 5 after retrieve: -2969.967
  Timestamp at frame 5 after read: 520.000
  ```

- **For OpenCV 4.1.1-1:**
  ```
  OpenCV width: 720 frames: 9000
  Timestamp at frame 0 after read: 40.000
  Timestamp at frame 5 after setPos: 480.000
  Timestamp at frame 5 after retrieve: 480.000
  Timestamp at frame 5 after read: 520.000
  ```

### Conclusion
The issue is that `cap.get(cv2.CAP_PROP_POS_MSEC)` does not return the correct timestamp in milliseconds if `cap.read()` has not been called before the query. This behavior is inconsistent with the previous version (4.1.1-1) and should be addressed.