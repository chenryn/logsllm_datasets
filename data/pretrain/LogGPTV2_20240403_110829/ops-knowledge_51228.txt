User: How to Set the Swap Space and Kernel Parameters of a Linux Server to Improve Performance?
Assistant: 1. Setting up Swap space Swap space refers to a space on the disk where the operating system saves part of the memory data to the disk when the physical memory is almost used up. The size of the Swap space should be determined according to the actual memory usage. Generally, the size of the Swap space can be set to twice the actual memory. You can set the Swap space through the following steps: (1) View the Swap status in the current system $ free -h (2) Create a Swap file through the fallocate command (in order to improve performance, it is recommended to use the fallocate to create the Swap file instead of using the dd command) $ sudo fallocate -l 4G /swapfile (Create a 4GB Swap file) (3) Set the Swap file permissions $ sudo chmod 600 /swapfile (4) Format the Swap file $ sudo mkswap /swapfile (5) Enable the Swap file $ sudo swapon /swapfile (6) Add the Swap file in the /etc/fstab file to enable it automatically after booting $ sudo vim /etc/fstab # Add the following content /swapfile swap swap defaults 0 0 2. Set Kernel parameters Kernel is the core of the operating system and the entire The heart of the system, the performance and stability of the operating system are closely related to the Kernel. Therefore, in order to improve performance and stability, the system can be adjusted by modifying Kernel parameters. You can check the current Kernel configuration parameters with the following command: $ sysctl -a You can modify the Kernel parameters by modifying the /etc/sysctl.conf file: $ sudo vim /etc/sysctl.conf The following are some commonly used Kernel parameters: (1) Adjust TCP/IP parameters# Optimize TCP/IP performance and increase network transmission speed $ sudo sysctl -w net.ipv4.tcp_fin_timeout=30 $ sudo sysctl -w net.ipv4.tcp_tw_reuse=1 $ sudo sysctl -w net.ipv4.tcp_timestamps =1 (2) Adjust memory usage parameters # Reduce memory interaction and improve system performance $ sudo sysctl -w vm.swappiness=10 (3) Increase file descriptor resource limits # Increase the number of file descriptors to support more concurrent connections $ sudo sysctl -w fs.file-max=65535 (4) Disable IPv6 # Disable IPv6 $ sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 $ sudo sysctl -w net.ipv6.conf.default.disable_ipv6= 1 It should be noted that the modification of Kernel parameters will directly affect the stability and security of the system, so it needs to be modified carefully. It is recommended to understand and test more before modifying Kernel parameters to avoid unpredictable consequences.