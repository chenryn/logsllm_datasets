Another limitation is that our datasets only contain TCP trafﬁc,
while both [35] and [10] use a mixture of TCP and UDP trafﬁc.
However, basic statistics of VPN dataset1 shows that UDP con-
tributes only 7.8% of the trafﬁc, comparable with the fractions
in [10] (4% and 15%). We believe the above limitations (ﬁnite
dataset length and a lack of non-TCP trafﬁc) do not qualitatively
affect our comparison with [35] and [10].
3.2 Flow Characteristics
We analyze four basic ﬂow characteristics: size, duration, rate,
and burstiness. Size is simply deﬁned as the total number of bytes
in the ﬂow including headers; and duration is the time span between
ﬁrst and last packet of the ﬂow. Flow rate is computed by dividing
ﬂow size by ﬂow duration. Similar to previous work [35, 10], we
focus on longer-lived ﬂows by ignoring ﬂows with durations of less
than 100ms when computing the ﬂow rate. We give the deﬁnition
of burstiness later. We ﬁrst characterize the distributions of size,
duration, and rate of all ﬂows before focusing on “heavy-hitter”
ﬂows [31, 7] i.e., ﬂows with exceptionally large size, long duration,
high speed, and strong burstiness. Understanding the behavior of
heavy-hitter ﬂows are useful for various applications [13, 31, 22,
12], as described in §1. Due to the well-known heavy-tailed dis-
tribution of Internet ﬂows, the number of such ﬂows is very small.
They however may contribute to signiﬁcant trafﬁc volume.
Figure 1 plots the complementary cumulative distribution (CCDF)
of ﬂow size, duration, and rate across 7 datasets (shown in thick
lines), compared with the T-RAT study which is a most recent TCP
study similar to ours on understanding the origin of Internet ﬂow
rates conducted in 2001 [35], whose eight datasets are shown as
thin lines2. For ﬂow size and duration, no qualitative difference
exists in log-log plot. We do observe much higher ﬂow rate in
our dataset. For instance, in their datasets, only 4% to 10% ﬂows
are faster than 100kbps; the percentage increases to at least 17%
in ours. This is mostly explained by higher speed backbone links
and increasingly popular broadband Internet access. Correspond-
ingly, high-speed TCP variations were deployed accommodating
faster link speed. For instance, BIT-TCP was used as the default
TCP implementation since Linux 2.6.8 in 2004 [16]. BIT-TCP
makes the congestion window grow faster by modifying the linear
growth function for existing congestion avoidance, thus mitigat-
ing the under-utilization problem for high speed and long distance
paths.
Note that the higher rate is observed by ignoring considerable
number of ﬂows with duration less than 100ms. We will see a much
more signiﬁcant increase of ﬂow rate by looking at a smaller num-
ber of “heavy hitter” ﬂows later.
Given the signiﬁcant similarities across our seven datasets as ev-
idenced by closely placed thick lines representing them in Figure 1,
we attempt to quantify the similarity between two datasets by de-
tecting ﬂows with the same unordered pair (IP1/24, IP2/24) i.e.,
only preserving 24-bit preﬁx. In particular, we deﬁne the Similar-
ity Index (SI) between dataset X and Y as SIX,Y = |Ω(X) ∩
Ω(Y )|/ max{|Ω(X)|, |Ω(Y )|}, where Ω(X) denotes the set con-
taining unordered (IP1/24, IP2/24) pairs of all ﬂows in X. We ﬁnd
that the similarity index for any pair of datasets is less than 33%,
therefore we claim that our datasets are reasonably heterogeneous.
Next we examine heavy-hitter ﬂows and compare our results
with a most recent study analyzing traces of a regional network and
Abilene OC48 backbone link collected in April 2003 and August
2002 respectively focusing on heavy-hitter ﬂows [10]. This study
1We only have simple statistics of UDP trafﬁc for VPN dataset.
2For both Figures 1 and 2, to ensure effective comparison, we su-
perimposed our data onto ﬁgures obtained from the original papers
preserving their scale.
78Name
BU
BS1
BS2
BS3
BS4
VPN
DSL
Date
Jun 17, 2008
Jun 26, 2008
Jun 26, 2008
Jun 26, 2008
Jun 26, 2008
Jan 05, 2009
Jan 09, 2009
Length
30min
62min
59min
58min
47min
2h46min
2h18min
Table 1: Basic statistics of datasets used
# Packets Volume
377G
371G
424G
346G
360G
245G
496G
643 M
635 M
637 M
636 M
633 M
522 M
745 M
Bidir
No
No
No
No
No
Yes
Yes
Sampled
No
1 in 2 ﬂows
1 in 2 ﬂows
1 in 2 ﬂows
1 in 2 ﬂows
No
No
Description
# Flows
32.6 M Unsampled unidirectional backbone link trace
Sampled unidirectional backbone link trace
30.6 M
Sampled unidirectional backbone link trace
30.0 M
Sampled unidirectional backbone link trace
29.6 M
24.0 M
Sampled unidirectional backbone link trace
29.6 M
25.3 M
Unsampled bidirectional VPN link trace
Unsampled bidirectional DSL link trace
Figure 1: Complementary distribution of ﬂow size, duration and rate (comparing with the T-RAT study in 2001). When computing
the ﬂow rate, we only examine ﬂows with durations of 100ms or longer.
Table 2: Contribution of heavy-hitter ﬂows in ﬂow count and
volume
Elephant
0.09%
49.4%
0.08%
55.8%
6e-3%
55.3%
0.06%
58.9%
Elephant
Tortoise
0.52%
37.3%
0.24%
38.7%
0.42%
50.4%
0.34%
48.7%
Tortoise
Cheetah
0.60%
23.8%
0.60%
22.0%
1.15%
49.7%
1.51%
35.0%
Cheetah
Our datasets
BU
VPN
BS1 (Similar
to BS2-BS4)
Flows
Vol.
Flows
Vol.
Flows
Vol.
Flows
Vol.
Two datasets in [10]
LosAngeles
Regional’03
Abilene OC48
DSL
Aug 2002
Flows
Vol.
Flows
Vol.
1%
71%
4%
82%
4%
43%
4%
45%
2%
16%
2%
36%
by Lan et al. ﬁnds strong correlations among some combinations of
size, rate and burstiness, explained using transport and application-
level protocol mechanisms. Four types of heavy-hitter ﬂows are
coined in that work: elephant, tortoise, cheetah, and porcupine, cor-
responding to ﬂows with size, duration, rate, and burstiness greater
than the mean plus three standard deviation of the respective mea-
surement. In particular, the burstiness of a ﬂow is calculated by
multiplying the average burst rate by the average inter-burst time,
where a burst consists of a train of packets whose inter-arrival time
are less than 1ms. Only bursts with more than one packet are con-
sidered. As shown in Table 2, although the number of heavy-hitter
ﬂows is very small (except for porcupine ﬂows), they contribute to
signiﬁcant trafﬁc volume.
Figure 2 illustrates distributions of size, rate, and burstiness for
four types of heavy-hitter ﬂows in the BU trace (thick curves with
labels). We did not present the duration distribution due to the
bias introduced by limited duration of the BU trace (30min vs 2hr).
Measurements from Lan’s study [10] are also kept for comparison.
We observe qualitatively similar distributions compared to other
datasets and highlight key observations below.
Porcupine
0.26%
0.83%
0.15%
1.35%
0.04%
0.24%
0.12%
1.07%
Porcupine
0.9%
39%
1%
40%
As illustrated in Figure 2(a), the sizes of elephant, cheetah, and
tortoise ﬂows increase by about an order of magnitude. Since most
are HTTP data ﬂows with the source port 80, such increase is likely
due to ﬁle size increase on Web servers and the trend of using HTTP
to transfer large multimedia data. The growth in ﬁle size in both
local and network ﬁle systems are well documented by previous
measurements [4, 20]. The decrease in ﬂow size for the overall
dataset is caused by the 30min duration of our trace compared to
the 2hr duration of data used in Lan’s study.
As depicted in Figure 2(b), the rate of elephant ﬂows that con-
tribute to at least half of the trafﬁc volume along with that of tor-
toise ﬂows increases by one magnitude compared to Lan’s study [10],
most likely accounted for by the tremendous growth in link speed
within both the core and edge networks. In Lan’s study [10], the
authors explain the rate increase of tortoise ﬂows with user behav-
ior (e.g., one types a character every 30 seconds), as only 6% of
tortoises are ﬂows with size greater than 100KB. While in our re-
sults, we observe a trend in more long-lived ﬂows (about 10% of
them) are likely multimedia streaming or gaming as veriﬁed using
the IP addresses and port numbers.
The most striking difference is the burstiness. First, as shown
in Table 2, the very small number of porcupines contribute to less
than 1.5% of the trafﬁc volume, providing a sharp contrast to [10].
Second, as shown in Figure 2(a)(b), the size and rate of porcupine
ﬂows differ signiﬁcantly from previous study: there is an increase
in rate, but decrease in size. Finally, in Figure 2(c), the burstiness of
heavy-hitter ﬂows also deviate much from Lan’s study, deserving
further investigation we plan to conduct as future work.
Similar to [35] and [10], we also observe correlation between
duration, rate and size. For each dataset, (logS, logR) has corre-
lation coefﬁcient between 0.54 and 0.57, smaller than the values
observed in [35] and [10]; while (logR, logD) shows a stronger
negative correlation between −0.69 and −0.60. (logS, logD) are
slightly positively correlated with correlation coefﬁcient between
0.21 and 0.40.
To summarize our major ﬁndings, we observe signiﬁcant increase
of average ﬂow rate. In particular, the rate of elephant ﬂows in-
79Figure 2: Distributions of size, duration, rate and burstiness for four types of heavy-hitter ﬂows in BU. The base of logarithm is 10.
creases by a factor of 10, comparing with that of 6 years ago. Also,
the sizes of elephant, cheetah, and tortoise ﬂows increase by an
order of magnitude. Our observations indicate the trend of upgrad-
ing Internet infrastructure at core and edge, the deployment of new
TCP variants, and the trend of using TCP to transfer larger content
such as video streaming and long-time online gaming.
4. NEW METHODS FOR FLOW ANALYSIS
In this section, we present three new algorithms for analyzing
unidirectional TCP ﬂows. As discussed before, we focus on long-
lived ﬂows which contribute much more trafﬁc volume compared
to short-lived ones. An inherent challenge in analyzing unidirec-
tional ﬂows is a general lack of information to reconstruct the TCP
states at both the sender and receiver side. For example, if there is
no pronounced ﬂow clock or the ﬂow clock does not originate from
the transport layer (RTT), it is challenging to accurately estimate
RTT. To overcome this difﬁculty, in §4.2 and §4.3, we adopt statis-
tical approaches that require observing enough packets to infer cer-
tain properties with sufﬁcient accuracy and high conﬁdence. Such
approaches are fundamentally different from existing deterministic