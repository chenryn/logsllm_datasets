To back up an Open Directory master, you need to back up its shared LDAP directory 
domain, its configuration files, and its Open Directory Password Server database. You 
can back up the server’s local directory, which is a NetInfo domain, as well. 
You can do a hot backup of an Open Directory master. That is, you can back up an 
Open Directory master while it is in service.
Although you can back up an Open Directory replica, there is no real need to do so. In 
fact, restoring a replica can be dangerous because it puts an outdated copy of the 
master on the network. Since a replica is a copy of the master, the master effectively 
backs up the replica. If a replica develops a problem, you can just change its role to 
standalone server. Then set up the server as though it were a brand new server, with a 
new host name, and set it up as a replica of the same master as before. Therefore, if you 
have a reliable backup of the master, you effectively have a backup of all replicas of the 
master.
Important:  Be sure to perform the backup procedure without much delay between 
steps. By minimizing delays between steps, you ensure that the backed up LDAP 
directory, configuration files, and password storage database are as in sync as possible.
Important:  Carefully safeguard the backup media that contains a copy of the Open 
Directory Password database. The backup contains passwords of all users who have an 
Open Directory password, both in the shared LDAP directory domain and in the local 
NetInfo directory domain. Your security precautions for the backup media should be 
just as stringent as for the Open Directory master server.
To do a hot backup of an Open Directory master:
1 Open a Terminal session as root.
2 Type the following command and press Return.
slapcat -l backup.ldif
LL2352.Book  Page 118  Friday, August 22, 2003  3:12 PM
Chapter 8    Maintenance and Problem Solving
119
This use of slapcat saves the complete contents of the LDAP directory as a raw LDIF 
dump in a text file named backup.ldif. You can specify a different filename and a 
pathname. The file you specify contains all user records, group records, computer 
records, and so on. (The file does not contain passwords for user records whose 
password type is Open Directory. These passwords are not stored in the LDAP directory 
database. They are stored separately in the Open Directory Password Server database.)
3 Make a copy of the /etc/openldap folder.
This folder contains files that determine the setup of the LDAP directory domain, 
including schema files.
4 If your LDAP server uses SSL, make a copy of the server certificate file, LDAP server’s 
private key file, and the certificate authority (CA) certificate file.
5 Type the following commands, pressing Return after each.
mkdir -p backup folder pathname
mkpassdb -backupdb backup folder pathname
The Open Directory Password backup folder, located at backup folder pathname, will 
contain backup copies of all Open Directory Password Server files, including the 
database. 
Carefully safeguard the Open Directory Password Server backup folder! It contains the 
passwords of all users who have an Open Directory password, both in the shared LDAP 
directory domain and in the local NetInfo directory domain. Keep the backup media as 
secure as the Open Directory master server.
6 Optionally, make a copy of the Library/Preferences/DirectoryService folder.
Files in this folder specify the server’s search policies and specify how the server 
accesses its LDAP directory. The folder may contain additional files that specify how the 
server access other directory domains. 
7 Optionally, make a copy of the /etc/hostconfig file.
8 If you want to back up the local NetInfo directory domain, type the following 
command and press Return:
nidump -r / . > local.dump
This use of nidump saves the entire contents of the local NetInfo domain as a raw text 
file named local.dump. You can specify a different filename and a pathname.
Note:  If all user accounts have an Open Directory password and the Open Directory 
Password Server stops working, you can log in as root. The root user account in the 
local directory domain has a shadow password, which is not stored in the Open 
Directory Password Server database.
LL2352.Book  Page 119  Friday, August 22, 2003  3:12 PM
120
Chapter 8    Maintenance and Problem Solving
Restoring Open Directory Files
To restore an Open Directory master from backup files, you need to restore its shared 
LDAP directory domain, its configuration files, and its Open Directory Password Server 
database. You might want to restore the server’s local directory, which is a NetInfo 
domain, as well. 
To restore an Open Directory master from backup files:
1 If you have to recover from a catastrophic failure by reinstalling the Mac OS X Server 
software, set the directory usage to standalone server when Server Assistant takes you 
through the initial configuration of the server.
If Mac OS X Server was reinstalled but the directory usage was initially configured to 
something other than standalone server in Server Assistant, open Server Admin, select 
Open Directory, click Settings, click General, and change Role to Standalone Server. 
2 Open a Terminal session as root.
3 Restore the /etc/openldap folder from a backup copy.
This folder contains files that determine the setup of the LDAP directory domain, 
including schema files.
4 Restore the /etc/hostconfig file from a backup copy.
If you don’t have a backup copy of the /etc/hostconfig file, you can edit the existing 
file. The file needs to contain the following line:
LDAPSERVER=-YES-
If the restored LDAP server will use SSL, the /etc/hostconfig file must also contain the 
following line:
LDAPSSL=-YES-
5 If the restored LDAP server will use SSL, restore a copy of the server certificate file, 
LDAP server’s private key file, and the certificate authority (CA) certificate file.
Restore these files to their previous locations. The correct pathnames are specified in 
/etc/openldap/slapd_macosxserver.conf or /etc/openldap/slapd.conf.
6 Make sure the folder that will contain the LDAP database exists and is empty.
This folder’s pathname, which by default is /var/db/openldap/openldap-data/, is 
specified in /etc/openldap/slapd_macosxserver.conf or /etc/openldap/slapd.conf.
7 Type the following command and press Return.
slapadd -c -l backup.ldif
This use of slapadd adds user records, group records, computer records, and so on to 
the LDAP directory from the raw LDIF text file named backup.dif. You can specify a 
different filename and a pathname. (Adding LDAP records from the LDIF text file does 
not restore passwords for user records whose password type is Open Directory. These 
passwords are not stored in the LDAP directory database. They are stored separately in 
the Open Directory Password Server database.)
LL2352.Book  Page 120  Friday, August 22, 2003  3:12 PM
Chapter 8    Maintenance and Problem Solving
121
8 Type the following command and press Return.
mkpassdb -mergedb backup folder pathname
This use of mkpassdb adds all of the passwords from the Open Directory Password 
Server backup folder, located at backup folder pathname, into the server’s existing 
Open Directory Password Server database. (The server has an existing Open Directory 
Password Server for its local directory domain.)
9 Type the following command and press Return:
/System/Library/StartupItems/LDAP/LDAP start
This command starts the LDAP server.
10 If you want to restore the local NetInfo directory domain, type the following command 
and press Return:
niload -r / .  Reset Password.
3 Select the hard disk volume that contains the administrator account whose password 
you want to reset.
4 Choose the administrator account from the pop-up menu, enter a new password, and 
click Save.
System Administrator is the root user (superuser) account. Don’t confuse this account 
with a normal administrator account.
Avoid changing the password of any predefined user account. For more information on 
predefined user accounts, see the user management guide.
Note:  This procedure changes the password of the administrator account stored in the 
server’s local directory domain. It does not change the password of an administrator 
account stored in the server’s shared directory domain, if the server has one.
If you know the password of any administrator account that’s stored in the local 
domain, you can change the password of any other administrator account in the local 
directory domain by using Workgroup Manager instead of this procedure. For 
instructions, see the user management guide.
LL2352.Book  Page 123  Friday, August 22, 2003  3:12 PM
LL2352.Book  Page 124  Friday, August 22, 2003  3:12 PM
125
Appendix
A
A Mac OS X Directory Data
Knowing the Open Directory LDAP schema and the 
record types and attributes in Mac OS X directory 
domains can help you map to other directory domains 
and import or export user and group accounts.
For specifications of Open Directory extensions to LDAP schema, mappings of Open 
Directory attributes to LDAP and Active Directory attributes, and the standard 
attributes in various types of records, see:
• “Open Directory Extensions to LDAP Schema” on page 126
• “Object Classes in Open Directory LDAP Schema” on page 126
• “Attributes in Open Directory LDAP Schema” on page 132
• “Mapping Standard Attributes to LDAP and Active Directory” on page 145
• “Mappings for Users” on page 145
• “Mappings for Groups” on page 149
• “Mappings for Mounts” on page 150
• “Mappings for Computers” on page 151
• “Mappings for ComputerLists” on page 153
• “Mappings for Config” on page 153
• “Mappings for People” on page 154
• “Mappings for PresetComputerLists” on page 156
• “Mappings for PresetGroups” on page 156
• “Mappings for PresetUsers” on page 157
• “Mappings for Printers” on page 159
• “Mappings for AutoServerSetup” on page 160
• “Mappings for Locations” on page 160
• “Standard Attributes in User Records” on page 161
• “User Data That Mac OS X Server Uses” on page 165
• “Standard Attributes in Group Records” on page 166
• “Standard Attributes in Computer Records” on page 168
• “Standard Attributes in Computer List Records” on page 169
• “Standard Attributes in Mount Records” on page 170
• “Standard Attributes in Config Records” on page 171
LL2352.Book  Page 125  Friday, August 22, 2003  3:12 PM
126
Appendix A    Mac OS X Directory Data
Use these specifications for reference when you:
• Map object classes and attributes of non-Apple LDAP directories or Active Directory 
domains to Open Directory record types and attributes, as described in Chapter 7, 
“Managing Directory Access.”
• Import or export user or group accounts to an Open Directory domain, as described 
in the user management guide.
Open Directory Extensions to LDAP Schema
The schema for the Open Directory LDAP directories is based on the de facto standard 
attributes and object classes defined in the following Request for Comments 
documents of the Internet Engineering Task Force (RFCs of the IETF):
• RFC 2307 “An Approach for Using LDAP as a Network Information Service”
• RFC 2798 “Definition of the inetOrgPerson LDAP Object Class”
These RFCs are available at the IETF website:  www.ietf.org/rfc.html.
The attributes and object classes defined in these RFCs form the basis of the Open 
Directory LDAP schema.
The extended schema for Open Directory LDAP directories includes the attributes and 
object classes defined in this section. 
Note:  Apple may extend the Open Directory LDAP schema in the future, for example, 
to support new versions of Mac OS X and Mac OS X Server. The latest schema is 
available in text files on a computer with Mac OS X Server installed. The schema files 
are in the /etc/openldap/schema/ directory. In particular, the apple.schema file 
contains the latest schema extensions for Open Directory LDAP directories.
Object Classes in Open Directory LDAP Schema
This section defines the Open Directory LDAP object classes that extend the standard 
LDAP schema.
Container Structural Object Class
Container is a structural object class which is used for the top level record containers 
such as cn=users, cn=groups, and cn=mounts. There is no Directory Services analog to 
this object class, but the container name is part of the search base for each record type.
objectclass (
1.2.840.113556.1.3.23
NAME 'container'
SUP top
STRUCTURAL
MUST ( cn ) )
LL2352.Book  Page 126  Friday, August 22, 2003  3:12 PM
Appendix A    Mac OS X Directory Data
127
User Object Class
The apple-user object class is an auxiliary class used to store Mac OS X specific 
attributes which are not part of inetOrgPerson or posixAccount. This object class is 
used with kDSStdRecordTypeUsers records.
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.1
NAME 'apple-user'
SUP top
AUXILIARY
DESC 'apple user account'
MAY ( apple-user-homeurl $ apple-user-class $
apple-user-homequota $ apple-user-mailattribute $
apple-user-printattribute $ apple-mcxflags $
apple-mcxsettings $ apple-user-adminlimits $
apple-user-picture $ apple-user-authenticationhint $ 
apple-user-homesoftquota $ apple-user-passwordpolicy $
apple-keyword $ apple-generateduid $ authAuthority $ 
acctFlags $ pwdLastSet $ logonTime $ logoffTime $
kickoffTime $ homeDrive $ scriptPath $ profilePath $
userWorkstations $ smbHome $ rid $ primaryGroupID ) )
Group Auxiliary Object Class
The apple-group object class is an auxiliary class used to store Mac OS X specific 
attributes which are not part of posixGroup. This object class is used with 
kDSStdRecordTypeGroups records.
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.14
NAME 'apple-group'
SUP top
AUXILIARY
DESC 'group account'
MAY ( apple-group-homeurl $
apple-group-homeowner $
apple-mcxflags $
apple-mcxsettings $
apple-group-realname $
apple-user-picture $
apple-keyword $
apple-generateduid ) )
LL2352.Book  Page 127  Friday, August 22, 2003  3:12 PM
128
Appendix A    Mac OS X Directory Data
Machine Auxiliary Object Class
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.3
NAME 'apple-machine'
SUP top
AUXILIARY
MAY ( apple-machine-software $
apple-machine-hardware $
apple-machine-serves $
apple-machine-suffix ) )
Mount Object Class
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.8
NAME 'mount'
SUP top STRUCTURAL
MUST ( cn )
MAY ( mountDirectory $
mountType $
mountOption $
mountDumpFrequency $
mountPassNo ) )
Printer Object Class
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.9
NAME 'apple-printer'
SUP top STRUCTURAL
MUST ( cn )
MAY ( apple-printer-attributes $
apple-printer-lprhost $
apple-printer-lprqueue $
apple-printer-type $
apple-printer-note ) )
Computer Object Class
objectclass (
1.3.6.1.4.1.63.1000.1.1.2.10
NAME 'apple-computer'
DESC 'computer'
SUP top STRUCTURAL
MUST ( cn )
MAY ( apple-realname $
description $
LL2352.Book  Page 128  Friday, August 22, 2003  3:12 PM
Appendix A    Mac OS X Directory Data
129
macAddress $
apple-computer-list-groups $
apple-mcxflags $