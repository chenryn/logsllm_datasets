### Backing Up an Open Directory Master

To back up an Open Directory master, you need to back up the following components:
- The shared LDAP directory domain
- The configuration files
- The Open Directory Password Server database
- Optionally, the server’s local NetInfo domain

#### Performing a Hot Backup

A hot backup of an Open Directory master can be performed while the server is in service. Here are the steps:

1. **Open a Terminal session as root.**
2. **Save the LDAP directory contents:**
   ```bash
   slapcat -l backup.ldif
   ```
   This command saves the complete contents of the LDAP directory as a raw LDIF dump in a text file named `backup.ldif`. You can specify a different filename and path.

3. **Copy the `/etc/openldap` folder:**
   This folder contains files that determine the setup of the LDAP directory domain, including schema files.

4. **If your LDAP server uses SSL, copy the following files:**
   - Server certificate file
   - LDAP server’s private key file
   - Certificate authority (CA) certificate file

5. **Backup the Open Directory Password Server database:**
   ```bash
   mkdir -p /path/to/backup/folder
   mkpassdb -backupdb /path/to/backup/folder
   ```
   The specified folder will contain backup copies of all Open Directory Password Server files, including the database.

6. **Optionally, copy the `Library/Preferences/DirectoryService` folder:**
   This folder contains files that specify the server’s search policies and how the server accesses its LDAP directory. It may also contain additional files for accessing other directory domains.

7. **Optionally, copy the `/etc/hostconfig` file.**

8. **If you want to back up the local NetInfo directory domain:**
   ```bash
   nidump -r / . > local.dump
   ```
   This command saves the entire contents of the local NetInfo domain as a raw text file named `local.dump`. You can specify a different filename and path.

**Important Notes:**
- Perform the backup procedure without significant delays between steps to ensure that the backed-up LDAP directory, configuration files, and password storage database are as synchronized as possible.
- Safeguard the backup media containing the Open Directory Password database. This backup includes passwords for all users with an Open Directory password, both in the shared LDAP directory domain and in the local NetInfo directory domain. Your security precautions for the backup media should be as stringent as those for the Open Directory master server.

### Restoring an Open Directory Master

To restore an Open Directory master from backup files, follow these steps:

1. **Reconfigure the server:**
   - If you have to recover from a catastrophic failure by reinstalling Mac OS X Server, set the directory usage to standalone server during the initial configuration.
   - If Mac OS X Server was reinstalled but the directory usage was initially configured to something other than standalone server, use Server Admin to change the role to Standalone Server.

2. **Open a Terminal session as root.**

3. **Restore the `/etc/openldap` folder:**
   This folder contains files that determine the setup of the LDAP directory domain, including schema files.

4. **Restore the `/etc/hostconfig` file:**
   If you don’t have a backup copy, edit the existing file to include the following line:
   ```plaintext
   LDAPSERVER=-YES-
   ```
   If the restored LDAP server will use SSL, add the following line:
   ```plaintext
   LDAPSSL=-YES-
   ```

5. **If the restored LDAP server will use SSL, restore the following files to their previous locations:**
   - Server certificate file
   - LDAP server’s private key file
   - Certificate authority (CA) certificate file
   The correct paths are specified in `/etc/openldap/slapd_macosxserver.conf` or `/etc/openldap/slapd.conf`.

6. **Ensure the folder that will contain the LDAP database exists and is empty:**
   The default path is `/var/db/openldap/openldap-data/`, as specified in the configuration files.

7. **Add the LDAP directory contents:**
   ```bash
   slapadd -c -l backup.ldif
   ```
   This command adds user records, group records, computer records, etc., from the raw LDIF text file. Note that this does not restore passwords for user records whose password type is Open Directory. These passwords are stored separately in the Open Directory Password Server database.

8. **Merge the Open Directory Password Server database:**
   ```bash
   mkpassdb -mergedb /path/to/backup/folder
   ```
   This command adds all passwords from the backup folder into the server’s existing Open Directory Password Server database.

9. **Start the LDAP server:**
   ```bash
   /System/Library/StartupItems/LDAP/LDAP start
   ```

10. **If you want to restore the local NetInfo directory domain:**
    ```bash
    niload -r / . < local.dump
    ```

### Resetting an Administrator Password

To reset the password of an administrator account in the local directory domain:

1. **Boot the server in single-user mode.**
2. **Mount the hard disk volume:**
   ```bash
   mount -uw /
   ```
3. **Reset the password:**
   ```bash
   passwd username
   ```
   Replace `username` with the name of the administrator account.

**Note:**
- The System Administrator is the root user (superuser) account. Do not confuse this with a normal administrator account.
- Avoid changing the password of any predefined user account. For more information, see the user management guide.
- This procedure changes the password of the administrator account stored in the server’s local directory domain. It does not change the password of an administrator account stored in the server’s shared directory domain, if the server has one.

### Appendix A: Mac OS X Directory Data

Understanding the Open Directory LDAP schema and the record types and attributes in Mac OS X directory domains can help you map to other directory domains and import or export user and group accounts.

#### Open Directory Extensions to LDAP Schema

The schema for Open Directory LDAP directories is based on the de facto standard attributes and object classes defined in the following RFCs:
- RFC 2307: "An Approach for Using LDAP as a Network Information Service"
- RFC 2798: "Definition of the inetOrgPerson LDAP Object Class"

These RFCs are available at the IETF website: [www.ietf.org/rfc.html](http://www.ietf.org/rfc.html).

Apple may extend the Open Directory LDAP schema in the future. The latest schema is available in text files on a computer with Mac OS X Server installed, located in the `/etc/openldap/schema/` directory, particularly in the `apple.schema` file.

#### Object Classes in Open Directory LDAP Schema

This section defines the Open Directory LDAP object classes that extend the standard LDAP schema.

- **Container Structural Object Class:**
  ```plaintext
  objectclass (
  1.2.840.113556.1.3.23
  NAME 'container'
  SUP top
  STRUCTURAL
  MUST ( cn ) )
  ```

- **User Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.1
  NAME 'apple-user'
  SUP top
  AUXILIARY
  DESC 'apple user account'
  MAY ( apple-user-homeurl $ apple-user-class $
  apple-user-homequota $ apple-user-mailattribute $
  apple-user-printattribute $ apple-mcxflags $
  apple-mcxsettings $ apple-user-adminlimits $
  apple-user-picture $ apple-user-authenticationhint $ 
  apple-user-homesoftquota $ apple-user-passwordpolicy $
  apple-keyword $ apple-generateduid $ authAuthority $ 
  acctFlags $ pwdLastSet $ logonTime $ logoffTime $
  kickoffTime $ homeDrive $ scriptPath $ profilePath $
  userWorkstations $ smbHome $ rid $ primaryGroupID ) )
  ```

- **Group Auxiliary Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.14
  NAME 'apple-group'
  SUP top
  AUXILIARY
  DESC 'group account'
  MAY ( apple-group-homeurl $
  apple-group-homeowner $
  apple-mcxflags $
  apple-mcxsettings $
  apple-group-realname $
  apple-user-picture $
  apple-keyword $
  apple-generateduid ) )
  ```

- **Machine Auxiliary Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.3
  NAME 'apple-machine'
  SUP top
  AUXILIARY
  MAY ( apple-machine-software $
  apple-machine-hardware $
  apple-machine-serves $
  apple-machine-suffix ) )
  ```

- **Mount Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.8
  NAME 'mount'
  SUP top STRUCTURAL
  MUST ( cn )
  MAY ( mountDirectory $
  mountType $
  mountOption $
  mountDumpFrequency $
  mountPassNo ) )
  ```

- **Printer Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.9
  NAME 'apple-printer'
  SUP top STRUCTURAL
  MUST ( cn )
  MAY ( apple-printer-attributes $
  apple-printer-lprhost $
  apple-printer-lprqueue $
  apple-printer-type $
  apple-printer-note ) )
  ```

- **Computer Object Class:**
  ```plaintext
  objectclass (
  1.3.6.1.4.1.63.1000.1.1.2.10
  NAME 'apple-computer'
  DESC 'computer'
  SUP top STRUCTURAL
  MUST ( cn )
  MAY ( apple-realname $
  description $
  macAddress $
  apple-computer-list-groups $
  apple-mcxflags $
  apple-mcxsettings ) )
  ```

For more detailed mappings and specifications, refer to the sections on "Mapping Standard Attributes to LDAP and Active Directory" and "Standard Attributes in User, Group, Computer, and Other Records."