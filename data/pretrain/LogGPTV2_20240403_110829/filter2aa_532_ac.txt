### Advanced Wireless Attacks Against Enterprise Networks
#### Attacking and Gaining Entry to WPA2-EAP Wireless Networks
© 2017 Gabriel Ryan All Rights Reserved

### Chapter Overview
Rogue access point attacks are a fundamental part of modern wireless penetration testing. These attacks can be used to perform stealthy man-in-the-middle (MitM) attacks, steal RADIUS credentials, and trick users into interacting with malicious captive portals. Penetration testers can also use rogue access points for traditional functions such as deriving WEP keys and capturing WPA handshakes [1]. One of the key advantages of these attacks is that they are often most effective when conducted out of range of the target network. For this workshop, we will focus primarily on using Evil Twin attacks.

### Wireless Theory: Evil Twin Attacks
An Evil Twin attack involves impersonating a legitimate access point. The 802.11 protocol allows clients to roam freely between access points, and most wireless implementations do not require mutual authentication between the access point and the client. This means that wireless clients rely on the following attributes to identify access points:

1. **BSSID** - The Basic Service Set identifier, which is typically the MAC address of the access point.
2. **ESSID** - The Extended Service Set identifier, commonly known as the "network name."
3. **Channel** - The operating channel of the access point.

To execute an Evil Twin attack, the attacker creates an access point with the same ESSID and channel as a legitimate AP on the target network. If the malicious access point has a stronger signal than the legitimate AP, devices connected to the target AP will disconnect and connect to the attacker's AP.

### Wireless Theory: WPA2-EAP Networks
WPA2-EAP networks commonly use EAP-PEAP and EAP-TTLS. Since these are similar from a technical standpoint, we will focus on EAP-PEAP, but the techniques can be applied to both.

The EAP-PEAP authentication process involves three parties:
- **Supplicant** - The wireless client (specifically, the software running on the client).
- **Authenticator** - The access point.
- **Authentication Server** - The server that verifies the client's credentials.

When a client device attempts to connect to the network, the authentication server presents the supplicant with an x.59 certificate. If the client accepts the certificate, a secure encrypted tunnel is established between the authentication server and the supplicant. The authentication attempt then proceeds through this tunnel. If successful, the client is allowed to connect to the network [2][3].

Without the secure tunnel, an attacker could sniff the challenge and response and derive the password offline. However, the secure tunnel prevents passive credential theft. While the EAP-PEAP process can be conceptualized as an exchange between the supplicant and the authentication server, the actual implementation involves the authenticator relaying all communication. The supplicant and authenticator communicate using Layer 2 protocols like IEEE 802.1X, and the authenticator communicates with the authentication server using RADIUS, a Layer 7 protocol [2][3].

### Attacking and Gaining Entry to WPA2-EAP Wireless Networks
To compromise EAP-PEAP, an attacker first performs an Evil Twin attack against the target access point. When a client connects to the rogue access point, it begins an EAP exchange with the attacker's authenticator and authentication server. If the supplicant accepts the attacker's certificate, a secure tunnel is established between the attacker's authentication server and the supplicant. The supplicant then completes the authentication process with the attacker, who uses the challenge and response to derive the victim's password [4][5].

### Evil Twin Attack Using Hostapd-WPE
The first phase of the attack involves creating an Evil Twin using eaphammer. Traditionally, this is done with hostapd-wpe, a powerful but cumbersome tool. Eaphammer provides a user-friendly command-line interface and automates the configuration process.

#### Step 1: Create a Self-Signed Certificate
Use eaphammer’s `--cert-wizard` flag to create a self-signed x.509 certificate. Choose values that are believable within the context of your target organization.

```bash
root@localhost:~# ./eaphammer --cert-wizard
```

For example, if attacking "Evil Corp," you might use:
- Country: US
- State: Nevada
- Locale: Las Vegas
- Organization: Evil Corp
- Email: PI:EMAIL
- CN: PI:EMAIL

#### Step 2: Launch the Evil Twin Attack
Once the certificate is created, launch the Evil Twin attack against the target access point. For instance, to attack the access point with BSSID `1c:7e:e5:97:79:b1`:

```bash
root@localhost:~# ./eaphammer.py --bssid 1C:7E:E5:97:79:B1 --essid ECwnet1 --channel 2 --wpa 2 --auth peap --interface wlan0 --creds
```

If the signal strength of the rogue access point is stronger, clients will disconnect from the target network and connect to your access point. Unless the client devices are configured to reject invalid certificates, users will see a message prompting them to accept the certificate. Often, at least one enterprise employee will accept the certificate, or devices may be configured to automatically accept invalid certificates. In either case, usernames, challenges, and responses will appear in your terminal, which can be passed to tools like asleap to obtain valid RADIUS credentials.

Congratulations, you now have your first set of RADIUS credentials.