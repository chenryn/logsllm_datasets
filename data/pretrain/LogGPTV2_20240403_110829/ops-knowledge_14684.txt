User: I'm developing a python application over Windows. However, this application will be deployed in Linux systems.
This application will have a configuration file at /etc/myapp/config. This path is not possible in Windows.
So, my question is:

In Python, is there any way to simulate, only during development process, the existence of a certain directory and file (such as /etc/myapp/config)?

Thank you.
Assistant: Instead of trying to "simulate" some non-existant path, just avoid hardcoding any path in your app and you will be fine. 
Hint: environment variables and/or command-line arguments are canonical ways to avoid harcoding environment-dependant values. You can read environment variables from the os.environ mapping. 
This being said, if your app is going to be deployed on some linux distro, you should REALLY test it on the same distro to make sure there are no other glitches. It's not a valid reason for hardcoding your config path (even native linux apps don't and rely on either env variable and/or command line args), but there are quite a few other differences between a unix-like and windows...