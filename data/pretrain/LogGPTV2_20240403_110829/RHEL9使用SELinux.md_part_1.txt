[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [9]{.productnumber}
:::
# []{#index.html#idm139972190219792}使用 SELinux {.title}
## Security-Enhanced Linux（SELinux）的基本和高级配置 {.subtitle}
::: abstract
**摘要**
本文档可帮助用户和管理员了解 SELinux
功能的基本性和原则，并描述了设置和配置各种服务的实际任务。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}让开源更具包容性 {.title}
:::
红帽致力于替换我们的代码、文档和 Web
属性中存在问题的语言。我们从这四个术语开始：master、slave、黑名单和白名单。由于此项工作十分艰巨，这些更改将在即将推出的几个发行版本中逐步实施。详情请查看
[CTO Chris Wright
的信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_using-selinux.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_using-selinux.html#proc_providing-feedback-on-red-hat-documentation_using-selinux}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
:::
::: itemizedlist
-   要通过 Bugzilla 提交反馈，请创建一个新的问题单：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%209){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#getting-started-with-selinux_using-selinux.html}
::: chapter
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#getting-started-with-selinux_using-selinux}第 1 章 SELinux 入门 {.title}
:::
SELinux（Security Enhanced Linux）提供了一个额外的系统安全层。SELinux
从根本上解决以下问题：[*May \ do \ to
\?*]{.emphasis}, 例如：[*Web
服务器是否可以访问用户主目录中的文件？*]{.emphasis}
::: section
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#introduction-to-selinux_getting-started-with-selinux}SELinux 简介 {.title}
:::
系统管理员一般无法通过基于用户、组群和其它权限（称为 Discretionary
Access
Control，DAC）的标准访问策略生成全面、精细的安全策略。例如，限制特定应用程序只能查看日志文件，而同时允许其他应用程序在日志文件中添加新数据。
Security Enhanced
Linux(SELinux)实现强制访问控制(MAC)。每个进程和系统资源都有一个特殊的安全性标签,称为
[*SELinux 上下文（context）*]{.emphasis}。SELinux 上下文有时被称为
[*SELinux
标签*]{.emphasis}，它是一个提取系统级别细节并专注于实体的安全属性的标识符。这不仅提供了在
SELinux
策略中引用对象的一个一致方法，而且消除了在其他身份识别系统中可能存在的模糊性。例如，某个文件可以在使用绑定挂载的系统中有多个有效的路径名称。
SELinux
策略在一系列规则中使用这些上下文，它们定义进程如何相互交互以及与各种系统资源进行交互。默认情况下,策略不允许任何交互,除非规则明确授予了相应的权限。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
请记住，对 SELinux 策略规则的检查是在 DAC 规则后进行的。如果 DAC
规则已拒绝了访问，则不会使用 SELinux 策略规则。这意味着，如果传统的 DAC
规则已阻止了访问，则不会在 SELinux 中记录拒绝信息。
:::
SELinux 上下文包括以下字段： user（用户）、role（角色）、type（类型）和
security level（安全级别）。在 SELinux 策略中，SELinux
类型信息可能是最重要的。这是因为，最常用的、用于定义允许在进程和系统资源间进行的交互的策略规则会使用
SELinux 类型而不是 SELinux 的完整上下文。SELinux 类型以 `_t`{.literal}
结尾。例如，Web 服务器的类型名称为 `httpd_t`{.literal}。通常位于
`/var/www/html/`{.literal} 中的文件和目录的类型上下文是
`httpd_sys_content_t`{.literal}。通常位于 /tmp 和 `/var /tmp`{.literal}
/``{=html} 中的文件和目录的类型上下文是 `tmp_t`{.literal}。Web
服务器端口的类型上下文是 `http_port_t`{.literal}。
有一个策略规则允许 Apache（作为 `httpd_t`{.literal}运行的 Web
服务器进程）访问通常位于 `/var/www/html/`{.literal} 和其他 Web
服务器目录中上下文的文件和目录(`httpd_sys_content_t`{.literal})。策略中没有允许规则适用于通常位于
`/tmp`{.literal} 和 `/var/tmp/`{.literal}
中的文件，因此不允许访问。因此，当使用 SELinux 时，即使 Apache
被破坏，一个恶意的脚本可以访问它，也无法访问 `/tmp`{.literal} 目录。
::: figure
[]{#getting-started-with-selinux_using-selinux.html#fig-intro-httpd-mysqld}
**图 1.1. 通过 SELinux 以安全的方式运行 Apache 和 MariaDB 的示例。**
::: figure-contents
::: mediaobject
![SELinux_Apache_MariaDB_example](images/selinux-intro-apache-mariadb.png)
:::
:::
:::
如上图所示，SELinux 允许作为 `httpd_t`{.literal} 运行 Apache 进程访问
`/var/www/html/`{.literal} 目录，并且拒绝同一进程访问
`/data/mysql/`{.literal} 目录，因为 `httpd_t`{.literal} 和
`mysqld_db_t`{.literal} 类型上下文没有允许规则。另一方面，作为
`mysqld_t`{.literal} 运行的 MariaDB 进程可以访问
`/data/mysql/`{.literal} 目录，SELinux 也会正确地拒绝使用
`mysqld_t`{.literal} 类型的进程来访问标记为
`httpd_sys_content_t`{.literal} 的 `/var/www/html/`{.literal} 目录。
::: itemizedlist
**其他资源**
-   `selinux(8)`{.literal} 手册页和 `apropos selinux`{.literal}
    命令列出的 man page。
-   在安装了 `selinux-policy-doc`{.literal}
    软件包后，`man -k _selinux`{.literal} 命令会列出 man page。
-   [The SELinux Coloring
    Book](https://people.redhat.com/duffy/selinux/selinux-coloring-book_A4-Stapled.pdf){.link}
    可帮助您更好地了解 SELinux 基本概念。。
-   [SELinux Wiki FAQ](http://selinuxproject.org/page/FAQ){.link}
:::
:::
::: section
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#benefits-of-selinux_getting-started-with-selinux}运行 SELinux 的好处 {.title}
:::
SELinux 提供以下优点：
::: itemizedlist
-   所有进程和文件都被标记。SELinux
    策略规则定义了进程如何与文件交互，以及进程如何相互交互。只有存在明确允许的
    SELinux 策略规则时，才能允许访问。
-   精细访问控制。传统的 UNIX 通过用户的授权、基于 Linux
    的用户和组进行控制。而 SELinux 的访问控制基于所有可用信息，如
    SELinux 用户、角色、类型以及可选的安全级别。
-   SELinux 策略由系统管理员进行定义，并在系统范围内强制执行。
-   改进了权限升级攻击的缓解方案。进程在域中运行，因此是相互分离的。SELinux
    策略规则定义了如何处理访问文件和其它进程。如果某个进程被破坏，攻击者只能访问该进程的正常功能，而且只能访问已被配置为可以被该进程访问的文件。例如：如果
    Apache HTTP
    服务器被破坏，攻击者无法使用该进程读取用户主目录中的文件，除非添加或者配置了特定的
    SELinux 策略规则允许这类访问。
-   SELinux
    可以用来强制实施数据机密性和完整性，同时保护进程不受不可信输入的影响。
:::
但是，SELinux 本身并不是：
::: itemizedlist
-   防病毒软件,
-   用来替换密码、防火墙和其它安全系统,
-   多合一的安全解决方案。
:::
SELinux 旨在增强现有的安全解决方案，而不是替换它们。即使运行
SELinux，仍需要遵循好的安全实践，如保持软件更新、使用安全的密码、使用防火墙。
:::
::: section
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#selinux-examples_getting-started-with-selinux}SELinux 示例 {.title}
:::
以下示例演示了 SELinux 如何提高安全性：
::: itemizedlist
-   默认操作为 deny（拒绝）。如果 SELinux
    策略规则不存在允许访问（如允许进程打开一个文件），则拒绝访问。
-   SELinux 可以限制 Linux 用户。SELinux 策略中包括很多受限制的 SELinux
    用户。可将 Linux 用户映射到受限制的 SELinux
    用户，以便利用其使用的安全规则和机制。例如，将 Linux 用户映射到
    SELinux `user_u`{.literal} 用户，这会导致 Linux
    用户无法运行，除非有其他配置的用户 ID(setuid)应用程序，如
    `sudo`{.literal} 和 `su`{.literal}。
-   增加进程和数据的分离。SELinux
    [*域（domain）*]{.emphasis}的概念允许定义哪些进程可以访问某些文件和目录。例如：在运行
    SELinux 时，除非有其他配置，攻击者将无法侵入 Samba 服务器，然后使用
    Samba 服务器作为攻击向量读取和写入其它进程使用的文件（如 MariaDB
    数据库）。
-   SELinux 可帮助缓解配置错误带来的破坏。不同的 DNS
    服务器通常会在彼此间复制信息，这被称为区传输（zone
    transfer）.攻击者可以利用区传输来更新 DNS
    服务器使其包括错误的信息。当在 Red Hat Enterprise Linux 中使用
    BIND（Berkeley Internet Name Domain）作为 DNS
    服务器运行时，即使管理员没有限制哪些服务器可执行区传输，默认的
    SELinux 策略也会阻止区文件
    [^\[1\]^](#getting-started-with-selinux_using-selinux.html#ftn.idm139972209769232){#getting-started-with-selinux_using-selinux.html#idm139972209769232
    .footnote} 通过 BIND `named`{.literal}
    守护进程本身或其它进程的区传输被更新。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#selinux-architecture_getting-started-with-selinux}SELinux 构架和软件包 {.title}
:::
SELinux 是一个内置在 Linux 内核中的 Linux 安全模块（LSM）。内核中的
SELinux
子系统由安全策略驱动，该策略由管理员控制并在引导时载入。系统中所有与安全性相关的、内核级别的访问操作都会被
SELinux
截取，并在加载的安全策略上下文中检查。如果载入的策略允许操作，它将继续进行。否则,操作会被阻断，进程会收到一个错误。
SELinux 决策（如允许或禁止访问）会被缓存。这个缓存被称为 Access Vector
Cache（AVC）。通过使用这些缓存的决定，可以较少对 SELinux
策略规则的检查，这会提高性能。请记住，如果 DAC 规则已首先拒绝了访问，则
SELinux 策略规则无效。原始审计消息会记录到
`/var/log/audit/audit.log`{.literal}，它们以 `type=AVC`{.literal}
字符串开头。
在 RHEL 9 中，系统服务由 `systemd`{.literal} 守护进程控制；
`systemd`{.literal} 启动和停止所有服务，用户和进程使用
`systemctl`{.literal} 实用程序与 `systemd`{.literal}
通信。`systemd`{.literal} 守护进程可以参考 SELinux
策略，检查调用进程标签以及调用者试图管理的单元文件标签，然后询问 SELinux
是否允许调用者的访问。这个方法可控制对关键系统功能的访问控制，其中包括启动和停止系统服务。
`systemd`{.literal} 守护进程也可以作为 SELinux
访问管理器使用。它检索运行 `systemctl`{.literal} 或向
`systemd`{.literal} 发送 `D-Bus`{.literal}
消息的进程标签。然后守护进程会查找进程要配置的单元文件标签。最后，如果
SELinux
策略允许进程标签和单元文件标签之间的特定访问，`systemd`{.literal}
就可以从内核中检索信息。这意味着，需要与特定服务交互的
`systemd`{.literal} 进行交互的应用程序现在可以受 SELinux
限制。策略作者也可以使用这些精细的控制来限制管理员。
如果进程向另一个进程发送 `D-Bus`{.literal} 消息，如果 SELinux
策略不允许这两个进程的 `D-Bus`{.literal} 通信，则系统会打印
`USER_AVC`{.literal} 拒绝消息，以及 D-Bus 通信超时。请注意，两个进程间的
D-Bus 通信会双向运行。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
为了避免不正确的 SELinux 标记以及后续问题，请确定使用
`systemctl start`{.literal} 命令启动服务。
:::
RHEL 9 提供以下用于 SELinux 的软件包：
::: itemizedlist
-   策略：`selinux-policy-targeted`{.literal},
    `selinux-policy-mls`{.literal}
-   工具：
    `policycoreutils`{.literal},`policycoreutils-gui`{.literal},`libselinux-utils`{.literal},`policycoreutils-python-utils`{.literal},`setools-console`{.literal},`checkpolicy`{.literal}
:::
:::