User: How to configure Nginx reverse proxy service with Ansible?
Assistant: The following are the steps to configure Nginx reverse proxy service using Ansible: 1. Install Ansible: Install Ansible on the control node. 2. Create an Ansible playbook: Create an Ansible playbook that includes the Nginx reverse proxy configuration. 3. Write Ansible playbook: Use Ansible syntax to write a playbook to define host groups, variables, and tasks. 4. Install Nginx: Use Ansible to install Nginx on the target node. 5. Configure Nginx: Use Ansible's template function to create an Nginx configuration file that contains the reverse proxy configuration. 6. Restart Nginx: Use Ansible to restart the Nginx server to apply the new configuration. Here is a simple Ansible playbook example: ```yaml - name: Install and configure Nginx reverse proxy server hosts: webserver become: true vars: backend_server_address: 192.168.1.10 tasks: - name: Install Nginx apt: name: nginx state: latest - name: Add Nginx configuration file template: src: nginx.conf.j2 dest: '/etc/nginx/nginx.conf' mode: '0644' owner: 'root' group: 'root' - name: Restart Nginx service : name: nginx state: restarted ``` In the above example, we defined a hostgroup named "webserver" which contains the target server where Nginx will be installed and configured. We also define a variable "backend_server_address" which contains the IP address of the backend web server. In tasks, we first install Nginx using the apt module. Then, we use the template module to create the ngixn configuration file. The reverse proxy configuration is included in the template file "nginx.conf.j2". Finally, we restart the Nginx server using the service module. It should be noted that in the template file, we use the Jinja2 template engine and the variable "backend_server_address" to set the target address of the reverse proxy. This is a simple example, and the Ansible playbook can be extended to meet more complex reverse proxy configurations according to actual needs.