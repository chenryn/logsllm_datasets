# Micro-Renovator: Bringing Processor Firmware up to Code

## Bio
**Matt (a.k.a. Syncsrc)**
- **Background:** Recovering Electrical Engineer / Computer Engineer
- **Expertise:** Builder and user of hardware debug features
- **Terminology:** Uses “BIOS” and “UEFI” interchangeably
- **Current Role:** Responsible for platform security in a cloud environment
- **Habits:** Religiously updates firmware
- **Previous Experience:** Former product security validation lead at Intel

## Background: Patches for Spectre & Meltdown
### Meltdown
- **Linux:** PTI (Page Table Isolation)
- **Windows:** KVA Shadow (Kernel Virtual Address Shadow)

### Spectre v1
- **Mitigation:** Lfence (forced serialization)

### Spectre v2
- **Retpoline:** Pollutes the Branch Target Buffer (BTB) - An incomplete fix, per Intel
- **IBRS & IBPB:** New Model-Specific Registers (MSRs) to control BTB
- **Microcode Updates:** Necessary to expose these new MSRs

## What is Microcode?
- **Definition:** Can be thought of as "Processor Firmware"
  - **History:** A Brief History of Microprogramming
- **Functionality:**
  - **Patching:** Can be patched to fix bugs and errata
  - **Storage:** Processors do not have non-volatile storage; patches are lost on reset or power-down
  - **Application:** Stored and applied by the BIOS or Operating System
    - **Reloaded:** On every boot, reset, S3 resume, etc.
    - **Reference:** Intel 64 and IA-32 Architectures SDM Volume 3A, section 9.11.6

## Obtaining Microcode Patches
### From BIOS Updates
- **Coverage:** MacBook and Surface users are covered

### From Operating System Updates
- **Linux:**
  - **Redistribution:** Most distributions (via `microcode_ctl.rpm` or `intel-microcode.deb`)
  - **Direct Download:** Users can also download `microcode.dat` directly from Intel
- **Microsoft:**
  - **Delay:** Started distributing microcode 2 months after release
  - **Availability:** Only for some processor and Windows versions

### Challenges
- **Patches Existed:** But were impossible to apply to many systems

## Systems Unable to Patch Spectre
- **Spectre v2 Mitigation:**
  - **No Mitigation:** Millions of systems still lack mitigation
  - **Alternatives:** Buying a new OS or a new computer
- **Affected Systems:**
  - **Windows PCs (3-9 years old):**
    - **Pre-installed OS:** Mostly Windows 7 or 8
    - **BIOS Updates:** Delayed or unavailable

### CPU Support
| CPU Generation | BIOS Updates | Windows 7 & 8 | Windows 10 |
|----------------|--------------|---------------|------------|
| 8th Gen        | Available    | N/A           | None       |
| 7th Gen        | Available    | N/A           | None       |
| 6th Gen        | Available    | Negligible    | None       |
| 5th Gen        | Available *  | 49 Million    | None       |
| 4th Gen        | Available *  | 114 Million   | None       |
| 3rd Gen        | Xeon Only    | 141 Million   | None       |
| 2nd Gen        | Xeon Only    | 149 Million   | None       |
| 1st Gen        | Xeon Only    | 216 Million   | 216 Million|

* CPUs more than 9 years old are not receiving microcode updates from Intel.

## Are There Any Other Options?
- **Microcode Patch Application:**
  - **BIOS:** Users cannot modify
  - **OS:** Microcode drivers run too late
  - **Bootloader:** Possible but no existing EFI utility

### Uload.efi
- **Built Using:** EDK2
- **Code Source:** Mostly from `MicrocodeUpdateDxe`
- **Functionality:** Loads microcode to all processors/threads

### Inserting Uload into EFI Boot
- **POST:** Power On Self-Test
- **Determine Bootloader:** From NVRAM variables
- **Locate Boot Drive & Partition:** Involves UUIDs
- **Run Bootloader:** (e.g., `bootx64.efi`, `shim.efi`); just an EFI application, replaceable
- **Launch Kernel:**

### Micro-Renovator
- **Script:** Automatically updates EFI boot partition
  - **Runs From:** Linux Live CD
  - **Finds:** EFI partition and bootloader
  - **Copies:** Microcode and `Uload.efi` to the boot partition
  - **Installs:** `Shell.efi` and sets it as the primary boot option
  - **On Boot:** Startup script runs `Uload` prior to the OS bootloader

### GitHub Repository
- **Link:** [MicroRenovator](https://github.com/syncsrc/MicroRenovator)

## Limitations
- **Breaks Sleep (S3):** Hibernation still works
- **No Secure Boot Support:** (yet)
- **Inconsistent Behavior:** After booting into Windows
- **Microsoft Reverts Changes:** Made by earlier versions of MicroRenovator

## Summary
- **Firmware Patching:** An unsolved problem
  - **UEFI:** Should have made things better, but did not
- **Component Vendors:** Need to focus on enabling patching for end-users, not system builders
  - **IoT and Mobile:** Face similar issues
- **Security Patches:** Should not require bootloader hacks for supported operating systems

## Questions?