# Vulnerability Reporting and Mitigation: A Case Study

## Overview
This document details the timeline and communication between TXOne Networks and a vendor regarding a reported vulnerability in Mitsubishi Electric's PLC (Programmable Logic Controller) systems. The issue involves the authentication process in GxWorks2, which TXOne Networks identified as a potential security risk.

## Timeline of Reporting the Vulnerability
- **May 30, 2020**: First Vendor Reply
- **June 1, 2020**: TXOne's First Reply
- **June 1, 2020**: TXOne's Second Reply
- **June 13, 2020**: Second Vendor Reply
- **June 19, 2020**: TXOne's Third Reply
- **July 8, 2020**: Third Vendor Reply
- **July 15, 2020**: Fourth Vendor Reply

## Communication Details

### [May 30, 2020] First Vendor Reply
**Vendor:**
"Thank you for your report. We have confirmed the content. The authentication process you pointed out is not to protect the customer's security, but to prevent connection to devices of other companies. Therefore, we concluded that the issue you pointed out was not a vulnerability (not applicable). ZDI will close the report. Please let us know if you believe this is an unfair reply or if you think anything was missed or if you have questions."

### [June 1, 2020] TXOne's First Reply
**TXOne:**
"We believe this is an unfair reply. Our reasons are:
1. We performed reverse engineering on GxWorks2 and found a simple authentication mechanism. Without this authentication, direct control of the PLC is not possible, and error codes like '0x4006 initial communication failed' are received. Bypassing this authentication allows for operations such as replacing the PLC program and reading/writing memory.
2. Although the authentication is intended to prevent connections from other companies, bypassing it can still lead to an attacker faking an EWS (Engineering Workstation) and sending unauthenticated commands to the PLC. This should be considered a vulnerability, regardless of the original design intent."

### [June 1, 2020] TXOne's Second Reply
**TXOne:**
"In addition to our previous response, we have some questions:
- What is the purpose of preventing connections to devices of other companies? Does this mean GxWorks2 might connect to a non-Mitsubishi PLC? If so, why does GxWorks2 send command 0x0114 with a 32-byte payload based on a 10-byte payload to the PLC? This seems like mutual authentication.
- When we try to read data using command 0x0401 (batch read device) without passing the authentication, the PLC does not respond with legal content. This suggests the authentication is used to protect the PLC from unauthorized access. Could you provide more details on this?"

### [June 13, 2020] Second Vendor Reply
**Vendor:**
"Thank you for your questions. Here are our responses:
1. The authentication is not for protecting data in Mitsubishi PLCs. It was part of a past business strategy to make it difficult to connect to other companies' equipment. This authentication ensures interconnectivity with previous versions. Data in Mitsubishi PLCs can also be operated by other companies' equipment using the public protocol (SLMP).
2. The PLC does not respond to command 0x0401 without authentication because it judges the connection as not coming from Mitsubishi products and adopts a nonresponsive mechanism."

### [June 19, 2020] TXOne's Third Reply
**TXOne:**
"We understand that the authentication is used for combining Mitsubishi products, and data in Mitsubishi PLCs can be operated using the public protocol SLMP. However, by forging an EWS, we can perform additional operations such as reading the CPU model name and serial number, which are not possible via SLMP. This suggests the authentication provides more functionalities beyond just combining products. We also noted that file manipulation via FTP and SLMP is possible, but only with specific modules. Bypassing authentication allows more possibilities and risks. We plan to submit our findings to a cybersecurity conference."

### [July 8, 2020] Third Vendor Reply
**Vendor:**
"In the Q series, there are functional differences between the CPU built-in Ethernet port and the Ethernet module. The CPU module supports device read/write commands but not file operation commands. In the iQ-R series, these differences are eliminated, and file operation commands are supported via SLMP. Therefore, bypassing authentication is not considered a threat. We will close the case as it is not being considered a vulnerability."

### [July 15, 2020] Fourth Vendor Reply
**Vendor:**
"We request that you add a comment to the information submitted to the conference stating that this issue is not a vulnerability in Mitsubishi Electric products."

## Final Remarks
**TXOne:**
"This issue is not considered a vulnerability in Mitsubishi Electric products from the vendor’s perspective."

## Mitigation and Closing Remarks

### Detection, Protection, and Mitigation
#### Short-term Effective Options
- Detecting and protecting ICS/SCADA protocols that cannot be patched or for which the vendor will not provide a patch.
- Providing a Lua plugin for analyzing the MELSOFT protocol.
- Providing Snort rules for detecting and protecting MELSOFT traffic.

#### Snort Detection Demo
- `alert tcp any any -> any 5007 (msg: "Melsoft 0x0114 MS Authentication"; flow:to_server,established; content:"|57 00|"; offset:0; depth:2; content:"|01 14|"; distance:31; within:2; classtype:others; sid:202107011; rev:1;)`
- `alert tcp any any -> any 5007 (msg: "Melsoft 0x1002 MC Remote STOP"; flow:to_server,established; content:"|57 00|"; offset:0; depth:2; content:"|10 02|"; distance:31; within:2; classtype:others; sid:202107012; rev:1;)`
- `alert tcp any any -> any 5007 (msg: "Melsoft 0x1001 MC Remote Run"; flow:to_server,established; content:"|57 00|"; offset:0; depth:2; content:"|10 01|"; distance:31; within:2; classtype:others; sid:202107013; rev:1;)`
- `alert tcp any any -> any 5007 (msg: "Melsoft 0x1829 MC Write to File"; flow:to_server,established; content:"|57 00|"; offset:0; depth:2; content:"|18 29|"; distance:31; within:2; classtype:others; sid:202107014; rev:1;)`

#### Mid-to-Long-Term Complete Planning
1. Security awareness for ICS vendors.
2. Defense-in-Depth from the outside.
3. Security design in protocols and other components from the inside.
4. Secure ICS/SCADA ecosystems in the future.

## Conclusion
Thank you for listening.
- Mars Cheng (@marscheng_)
- Selmon Yang

© 2021 TXOne Networks Inc.