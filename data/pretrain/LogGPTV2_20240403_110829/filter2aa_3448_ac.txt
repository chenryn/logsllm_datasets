Escalation
Evasion
Discovery
Lateral 
Movement
Collection
Command and 
Control
Inhibit 
Response 
Function
Impair Process 
Control
Impact
Data Historian 
Compromise
Change Operating 
Mode
Modify Program
Exploitation for 
Privilege Escalation
Change Operating 
Mode
Network 
Connection 
Enumeration
Default Credentials
Automated 
Collection
Commonly Used 
Port
Activate Firmware 
Update Mode
Brute Force I/O
Damage to 
Property
Drive-by 
Compromise
Command-Line 
Interface
Module Firmware
Hooking
Exploitation for 
Evasion
Network Sniffing
Exploitation of 
Remote Services
Data from 
Information 
Repositories
Connection Proxy
Alarm Suppression
Modify Parameter
Denial of Control
Engineering 
Workstation 
Compromise
Execution through 
API
Project File 
Infection
Indicator Removal 
on Host
Remote System 
Discovery
Lateral Tool 
Transfer
Detect Operating 
Mode
Standard 
Application Layer 
Protocol
Block Command 
Message
Module Firmware
Denial of View
Exploit Public-
Facing Application
Graphical User 
Interface
System Firmware
Masquerading
Remote System 
Information 
Discovery
Program Download
I/O Image
Block Reporting 
Message
Spoof Reporting 
Message
Loss of 
Availability
Exploitation of 
Remote Services
Hooking
Valid Accounts
Rootkit
Wireless Sniffing
Remote Services
Man in the Middle
Block Serial COM
Unauthorized 
Command Message
Loss of Control
External Remote 
Services
Modify Controller 
Tasking
Spoof Reporting 
Message
Valid Accounts
Monitor Process 
State
Data Destruction
Loss of 
Productivity and 
Revenue
Internet Accessible 
Device
Native API
Point & Tag 
Identification
Denial of Service
Loss of Protection
Remote Services
Scripting
Program Upload
Device 
Restart/Shutdown
Loss of Safety
Replication Through 
Removable Media
User Execution
Screen Capture
Manipulate I/O 
Image
Loss of View
Rogue Master
Wireless Sniffing
Modify Alarm 
Settings
Manipulation of 
Control
Spearphishing 
Attachment
Rootkit
Manipulation of 
View
Supply Chain 
Compromise
Service Stop
Theft of 
Operational 
Information
Wireless 
Compromise
System Firmware
© 2021 TXOne Networks Inc.
A Story of Reporting the Vulnerability
© 2021 TXOne Networks Inc.
Timeline of Reporting the Vulnerability
[May 30, 2020] 1st Vendor Reply 
[June 1, 2020] Our 1st Reply
[June 1, 2020] Our 2nd Reply
[June 13, 2020] 2nd  Vendor Reply
[June 19, 2020] Our 3rd Reply
[July 8, 2020] 3rd  Vendor Reply
[July 15, 2020] 4th  Vendor Reply
May
June
July
© 2021 TXOne Networks Inc.
[May 30, 2020] 1st Vendor Reply 
Vendor
…
Thank you for your report. We were happy to disclose it. We do have 
a reply from the vendor and the CERT:
"Thank you for pointing out the issue.
We have confirmed the content. The authentication process you 
pointed out is not to protect the customer's security, but to 
prevent connection to devices of other companies.
Therefore, we concluded that the issue you pointed out was not a 
vulnerability (not applicable)."
ZDI will close the report. Please let us know if you believe this is an 
unfair reply or if you think anything was missed or if you have 
questions.
….
© 2021 TXOne Networks Inc.
[June 1, 2020] Our 1st Reply
TXOne
…
First of all, we think this is an unfair reply and please allow me to describe 
why we think so. The reason we show as follows:
1.
In this issue, we perform reverse engineering on GxWork2, and extract the 
security design problem of simple authentication. If we directly connect to 
PLC without this authentication process, we can not control PLC and will 
receive error code such as “0x4006 initial communication failed”. By 
passing the authentication, we can ask the PLC to do many things, such as, 
replacing PLC program, read/write memory...
2. Although it is to prevent connection to devices of other companies, the 
bypass of this authentication process still will lead to an attacker can 
fake EWS and send any unauthenticated command to PLC. We can not 
say this is not a vulnerability because the original design idea was used 
to prevent connection to devices of other companies.
…
© 2021 TXOne Networks Inc.
[June 1, 2020] Our 2nd Reply
TXOne
…
In addition to the reply of the previous mail, there are some questions.
What is the purpose of preventing connection to devices of other companies? Is it 
meaning that the EWS (i.e. Gx Works 2) might connect to a PLC which is not a 
Mitsubishi series PLC? If it is true, then why Gx Works 2 needs to send the 
command 0x0114 with the 32 bytes payload which based on the 0xda0000ff 10 
bytes payload to the PLC? It looks like a mutual authentication, right? Could you 
kindly provide some comment and description for this?
As our observation, the PLC will not respond legal content if we do not pass the 
authentication when we are trying to use the command 0x0401 (batch read device) 
to read data.
Based on this, we think it is used to protect PLCs which not be manipulated by non-
EWS. If our thinking is wrong, and why Mitsubishi PLCs do not respond correctly 
when we are trying to read data with command 0x0401? Could you kindly provide 
some comment and description for this too?
…
© 2021 TXOne Networks Inc.
[June 13, 2020] 2nd  Vendor Reply
Vendor
Thank you for pointing out the issue. The followings are answers in response to your questions.
Q1. What is the purpose of preventing connection to devices of other companies?
Is it meaning that the EWS (i.e. Gx Works 2) might connect to a PLC which is not a Mitsubishi series PLC? If it is 
true, then why Gx Works 2 needs to send the command 0x0114 with the 32 bytes payload which based on the 
0xda0000ff 10 bytes payload to the PLC? It looks like a mutual authentication, right? Could you kindly provide 
some comment and description for this?
A1. The purpose is not to protect the data in Mitsubishi PLCs. According to the past business strategy (enclosing 
strategy), Mitsubishi PLCs and Mitsubishi product groups (GX Works2 and HMI products, etc.) were sold in 
complete sets, and we made it not easy to connect to other companies' equipment.
Assume that another company's HMI is connected to Mitsubishi PLC, but not for that GX Works2 is connected to 
another company's PLC.
In addition, this authentication is used for combining our products, thus transmitting data between each 
other.
Furthermore, this authentication process has been carried in order to ensure interconnectivity with previous 
versions. Now, without bypassing this authentication process, data in Mitsubishi PLC can also be operated by 
other companies' equipment by using the public protocol (SLMP).
However, assuming that malicious third-parties may use the mechanism of public protocol (SLMP) to make 
attacks, we have given guidelines in the manuals in order to protect data in PLC such as installing a firewall or 
using various security functions of Mitsubishi PLC.
...
© 2021 TXOne Networks Inc.
[June 13, 2020] 2nd  Vendor Reply (Cont.)
Vendor
…
Q2 As our observation, the PLC will not respond legal content if we do not 
pass the authentication when we are trying to use the command 0x0401 
(batch read device) to read data.
Based on this, we think it is used to protect PLCs which not be manipulated 
by non-EWS. If our thinking is wrong, and why Mitsubishi PLCs do not 
respond correctly when we are trying to read data with command 0x0401? 
Could you kindly provide some comment and description for this too?
A2. As mentioned in answer 1, this authentication is used for combining 
Mitsubishi products, PLC judges that the connection does not come from 
Mitsubishi products and adopts a nonresponsive mechanism.
© 2021 TXOne Networks Inc.
[June 19, 2020] Our 3rd Reply
TXOne
The authentication is used for combining Mitsubishi products.
And data in Mitsubishi PLCs can be operated by using the public protocol, SLMP, too.
We think we can understand the thinking of the Mitsubishi team.
The data in Mitsubishi PLCs can be operated by using the public protocol, SLMP.
For example, command 0x0401 for reading device memory, command 0x1401 for writing device 
memory...
And, by using SLMP command 0x1001/0x1002/..., we can ask Mitsubishi PLCs to run/stop/..., 
respectively.
However, by using SLMP command 0x0101, we are not allowed to read the CPU model name on 
Mitsubishi Q PLCs via the CPU built-in Ethernet port.
It is available only on the Ethernet module.
In contrast, by forging EWS, we are allowed not only to use command 0x0101 to read the CPU 
model name, but also to use command 0x0b05 to read CPU Serial Number..., etc.
It means that the authentication is not only used for combing Mitsubishi products because it 
provides more functionalities. Of course, it could be a strategy to show customers that, hey, 
buying a complete set of Mitsubishi products would be better than buying Mitsubishi PLCs only 
because our products know each other better.
© 2021 TXOne Networks Inc.
[June 19, 2020] Our 3rd Reply (Cont.)
TXOne
…
We know that we are able to manipulate the files on Mitsubishi Q PLCs via FTP to do the similar things.
For example, we connect to a Mitsubishi Q PLC via FTP, using quote stop to stop it first, using 
delete/mdelete to remove the MAIN.QPG, , using put to upload a new MAIN.QPG, using quote pm-write 
to write data to the program memory, and then quit.
After rebooting, the motor behavior will be changed.
In addition, we know that SLMP also supports file operation commands, like open/close/write/read/...
Unfortunately, these commands are only available on the Ethernet module, and we do not have it.
So we are unable to verify whether we can manipulate the MAIN.QPG by using SLMP like what we do 
by forging EWS. Could you please kindly have some comments on it?
If we are not allowed to do the same thing via SLMP (FTP is disabled by default), we think that 
bypass authentication will allow more possibilities and more risks.
If we can do the similar things via SLMP, then passing the authentication may not be a threat for 
Mitsubishi.
However, since we have spent time conducting reverse engineering on GX Works2, we are going to 
submit our findings to the cyber security conference. We believe it would be harmless.
© 2021 TXOne Networks Inc.
[July 8, 2020] 3rd  Vendor Reply
Vendor
…
We have received this reply from the vendor:
"In Q series, due to the product strategy, there are some functional differences between the 
CPU built-in Ethernet port and the Ethernet module. Therefore, Q series CPU module 
supports command of device read/write, but does not support file operation command.
However, considering usability, we eliminated the functional differences of each module in 
the next-generation model MELSEC iQ-R series, so the CPU module also supports file 
operation command.
In iQ-R series, it is possible to use SLMP to operate MAIN.QPG file just as possible to 
operate it by forging EWS.
Therefore, we don't think it is a problem to bypass authentication."
Since the case is not being considered as an issue by the vendor and will have no fix, we will 
proceed to close the case on our end.
Thank you for your contributions to our program and we look forward to your future 
submissions.
…
© 2021 TXOne Networks Inc.
[July 15, 2020] 4th  Vendor Reply
Vendor
…
We have received the following request from the vendor:
"We would appreciate it if you could add a comment to 
the information submitted to the conference that this 
issue is not a vulnerability in Mitsubishi 
Electric products. "
…
© 2021 TXOne Networks Inc.
Last Thing!
TXOne
This issue is not a vulnerability in 
Mitsubishi Electric products from 
vendor’s perspective
© 2021 TXOne Networks Inc.
Mitigation and Closing Remarks
© 2021 TXOne Networks Inc.
Detection, Protection and Mitigation
• Short-term effective options
•
Detecting and protecting ICS/SCADA protocols that can’t be patched 
or which the vendor will not patch
•
We will provide a Lua plugin for analyzing the MELSOFT protocol
•
We will provide Snort rules for detecting and protecting MELSOFT 
traffic
© 2021 TXOne Networks Inc.
Snort Detection Demo 
•
alert tcp any any -> any 5007 (msg: "Melsoft 0x0114 MS Authentication"; flow:to_server,established; content:"|57 
00|"; offset:0; depth:2; content:"|01 14|"; distance:31; within:2; classtype:others; sid:202107011; rev:1;) 
•
alert tcp any any -> any 5007 (msg: "Melsoft 0x1002 MC Remote STOP"; flow:to_server,established; content:"|57 
00|"; offset:0; depth:2; content:"|10 02|"; distance:31; within:2; classtype:others; sid:202107012; rev:1;) 
•
alert tcp any any -> any 5007 (msg: "Melsoft 0x1001 MC Remote Run"; flow:to_server,established; content:"|57 00|"; 
offset:0; depth:2; content:"|10 01|"; distance:31; within:2; classtype:others; sid:202107013; rev:1;)
•
alert tcp any any -> any 5007 (msg: "Melsoft 0x1829 MC Write to File"; flow:to_server,established; content:"|57 00|"; 
offset:0; depth:2; content:"|18 29|"; distance:31; within:2; classtype:others; sid:202107014; rev:1; )
© 2021 TXOne Networks Inc.
Detection, Protection and Mitigation
• Mid-to-long-term complete planning
1.
Security awareness for ICS vendors
2. Defense-in-Depth from the outside 
3. Security design in protocols and other components from the inside
4. Secure ICS/SCADA ecosystems in the future
Keep the Operation Securely Running   
© 2021 TXOne Networks Inc.
Thanks for Listening
Mars Cheng (@marscheng_)
Selmon Yang