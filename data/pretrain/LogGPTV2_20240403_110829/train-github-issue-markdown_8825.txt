For some small example data, on my system (and one other), `operator.lshift`
and `operator.rshift` randomly return incorrect results.
PC 1:
  * macOS 10.13.2
  * Anaconda (latest)
  * Python 3.6.4
  * Numpy 1.13.3
PC 2:
  * Same as PC 1, except Numpy 1.14.0
  * New Conda env
Third config:
  * PC 1, but with system Python 2.7 and a clean VENV
  * Numpy 1.14.0
Simple test (only fails on some data) and doesn't fail on third configuration.
But it can be reproduced reliably.
    import numpy as np
    if __name__ == '__main__':
        x = np.load('x.npy')
        y = np.load('y.npy')
        print(x.shape)  # (2, 3, 4)
        print(y.shape)  # (2, 3, 4)
        print(x.shape == y.shape)  # True
        print(x[0, 2, 0] << y[0, 2, 0])  # 1476395008
        print((x << y)[0, 2, 0])  # 0
        print(x[0, 2, 0] << y[0, 2, 0] == (x << y)[0, 2, 0])  # False
Attaching example data/project on which this happens (produced with
`np.save`):  
numpy_test.zip
I strongly suspect this isn't really a Numpy bug, but maybe Python 3 related
or possibly related to the compiler Anaconda uses.