at line 15 can be set to Selector(p
In that case a 
its timestamp 
If the function 
phase ¢ (lines 
on each process 
the 
¢, 
7 and 19. 
26).1 
The same holds with benign faults when 
p and in all 
Ion each process 
, ¢) l
¢: validatorsp 
at line 21 is the process 
from which 
I Selector(p
phases 
the validation 
round message 
is received. 
6p cons  is defined in [17] for rounds in which all processes 
of P cons  that does not require 
is trivial. 
processes. 
message exchange. 
We assume here variant 
The adaptation 
send to all 
all-to-all 
7Line 26 is not mandatory, 
of function FLV(i1;). 
but it allows us to simplify 
the instantiation 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
346 
DSN 2010: ROtti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
FLV(iI;) must satisfy 
the follow­
FLV(iI;): The function 
ing three properties: 
• FLV-validity: 
If FLV(iI;) returns 
and v -=I-null, then v E {vote: (vote, 
If value v is locked 
• FLV -agreement: 
-, -) E iI;}. 
in round r, only 
v such that v -=I- ? 
v or null can be returned. 
• FLV -liveness: 
be returned. 
cannot 
If Vq E C : iI; [q] -=I-..l, then null 
variables 
3.3 Correctness 
of the Generic Algorithm 
(1) FLAG = ¢: only votes that have been validated 
starts 
must hold for a process 
29). A process 
only two criteria 
the conditions that 
its vote 
then decides 
votes which 
a threshold 
some criteria 
The Decision Round (r =  3¢). The decision 
round de­
termines 
to de­
by sending 
each process 
cide. Concretely, 
(line 
and its timestamp 
if it 
number TD of identical 
receives 
defined by the flag FLAG. To our 
satisfy 
knowledge, 
ature: 
in the current 
all votes are considered. 
round can be suppressed. 
and historyp 
Selector(p, 
can be suppressed. 
Optimization: 
cuted concurrently 
In the latter 
As a consequence, 
tsp 
Moreover, 
the set 
¢) does not need to be sent at line 7, and line 15 
round of phase ¢ can be exe­
round of phase ¢ + 1. 
phase ¢ are considered, 
are no more necessary. 
with the selection 
The decision 
have been considered 
in liter­
and (2) FLAG = *: 
case, the validation 
3.2 Parameters 
of parameters. 
two categories 
The first cat­
round, 
to the decision 
and contains 
the pa­
4, these 
TD and FLAG. As shown in Section 
(i.e., 
influence 
n, process 
the properties 
state, 
The second 
¢) and FLV(iI;) which define the selection 
category 
the functions 
and 
and number of rounds 
contains 
of the instantiated 
rounds. 
We identify 
egory is related 
rameters 
two parameters 
algorithm 
per phase). 
Selector(p, 
the validation 
FLAG: The parameter 
taken into account 
FLAG =  *), or only the votes that are 
phase (if FLAG =  ¢). In the former 
round can be suppressed. 
TD defines 
TD: The parameter 
votes that is required 
to decide. 
votes of faulty 
to decide. 
be required 
¢): The function 
Selector(p, 
S   ntb, then Algorithm 
validity, 
FLV(iI;) satisfies 
Selector(p, 
FLAG =  ¢ and TD > b or (iii­
votep to v and tsp to ¢, and 
voteq to Vi and tSq to 
process 
honest 
and agreement. 
FLV-validity 
¢) satisfies 
(ii) function 
23-24), 
unanimity 
I ensures 
p updates 
q updates 
then v = v'. 
(iii-a) 
process 
holds, 
holds if(iv) TD :::; n -b -f, (v)function 
Termination 
and (vi) there is a good 
FLV(iI;) satisfies 
phase ¢o in which Selector-liveness 
holds (SLl, SL2, SL3). 
FLV-liveness, 
4 Instantiations 
of the Parameters and Clas­
sification 
• Selector-validity: 
If I Selector(p, 
¢) I >  0, then 
ISelector(p, 
¢)I > b. 
• Selector-liveness: 
There exists 
a good phase ¢o such 
that: 
¢o), 
SLl: Vp, q E C : Selector(p, 
SL2: if FLAG = *, then ISelector(p, 
¢o) n CI  TD, 
SL3: if FLAG =  ¢, then ISelector(p, 
ISelector(
¢o) = Selector(q, 
¢o) n CI > 
p,.po) I+b 
2 
The first instantiation 
now instantiations 
three instantiations 
FLV and 
of the functions 
of FLV func­
uses only the variable 
votep, the 
votep and tsp, and the last one 
uses the variables 
of consensus 
tsp and historyp. 
algorithms, 
as shown in Ta­
This leads 
We identify 
We present 
Selector. 
tion. 
second 
uses all three variables 
votep, 
to three classes 
ble 1. Algorithms 
same values 
algorithms 
n (follows 
ber of rounds 
3.2). 
(follows 
that belong 
for the parameters 
to the same class have the 
FLAG and TD. Therefore 
from the same class have the same constraint 
on 
from n  TD + b + f) and have the same num­
from the value of FLAG, see Section 
8 Selector 
properties. 
same comment applies 
is not really a function. 
it a function 
However,  calling 
to F LV. 
It is rather a problem defined by 
The 
is somehow more intuitive. 
For instance, 
rounds 
when FLAG =  *, TD > n+3;+f, only two 
state is the 
and the process 
per phase are needed 
One can observe 
a tradeoff among these three 
classes. 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
347 
DSN 20lO: RUtti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Table 1. The three classes of consensus algorithms. 
FLAG TD 
n 
Process 
state Rounds  Examples 
> 5b + 31 
1  *  > 2 
2  ¢  > 3b+1 > 4b+ 21  (votep, 
3  ¢  > 2b+1 > 3b + 21 (votep, 
(votep) 2  OneThirdRule 
[6] (b = 0) 
FaBPaxos [16] (I -0) 
tsp)  3  Paxos [11], CT [5] (b = 0) 
MQB (f -0) (newaIg) 
tsp, historyp) 3 
CT) (b = 0) 
(Paxos, 
PBFT [4] (f -0) 
per phase 
smallest, 
"Examples" 
rithms 
cussed 
but it requires 
the largest 
n (n > 5b + 3f). The 
column of Table 1 shows which known algo­
These examples 
are dis­
correspond 
in Section 
to a given class. 
5. 
faults), 
comments. 
We can make the following 
classes 
with benign 
if b =  0 
First, 
2 and 3 are identical, 
since historyp 
Paxos and 
Therefore 
faults. 
2, also trivially 
belong 
(benign 
can be ignored 
CT 9, which belong 
to class 
3, case b =  O. Second, 
existing algorithm corresponds 
1 = 0 (Byzantine faults). 
(Masking 
nally, 
algorithm 
algorithm. 
We call this new algorithm 
algorithm).
its name, the FaB Paxos 
to the same class as the Paxos 
to the best of our knowledge, 
Table 1 shows that despite 
does not belong 
consensus 
2 for the case 
MQB 
l0 Fi­
to the class 
Quorum Byzantine 
to class 
no 
We now present 
the three instantiations 
of the F L V func­
tion that lead to the three classes 
Instantiations 
of the Selector 
function 
are discussed 
later. 
of consensus 
algorithms. 
4.1 Instantiations 
of FLV(JI;) 
We give here the intuition 
of the instantiations. 
The 
3.2 hold can 
that the properties 
defined in Section 
proofs 
be found in [19]. 
1 
Algorithm 2 FLVUt;) for class 
1: correctVotes,, 2(n -TD + b) then 
5:  return? 
6: else 
7 :  return null 
v:1 {(v,-,-,
=  1 then 
Votes" 
- )  E tt;} I > n-TD+b} 
when 
3 must also prevent
The condition 
? to be returned 
VI. For FLV-agreement 
of line 4 ensures 
of line 4 holds. 
the condition 
of line 1 
from ? 
different 
to 
equal to V2 i- Vl (*). Therefore, 
can only hold for VI, i.e., 
among the values 
and null, FLV can only return 
hold, Algorithm 
VI is locked. 
this. Here is 
This means 
why. Assume that the condition 
that JI; contains 
With 
more than 2(n -TD + b) messages. 
(*), any set of more than 2(n  -TD + b) messages 
con­
equal to VI (this 
is 
tains more than n -TD + b messages 
1 with the case n =  6, b =  1, 1 = 0 
illustrated 
in Figure 
and TD =  5). By line 1, we have VI E correctVotesp, 
only Vl can be in correctVotesp. 
and as explained 
Therefore, 
the condition 
of line 2 holds: 
return? when VI is locked. 
Algorithm 
2 cannot 
above, 
4.1.1 FLV(JI;) for class 1 
1 
example. 
the discussion 
for class 
2. 
Line 1 is for FLV -agreement. 
Let Vl be locked 
only on the following 
We start 
with the FLV function 
(FLAG =  * and TD > n+;Hf), see Algorithm 
We now explain 
with a simple 
in round r. For 
simplicity, 
case: some 
Vl in round r -1. By Algo­
honest 
rithm 1, p has received 
TD votes 
processes, 
Vl. At least TD - b votes 
i.e., 
at most n -(TD -b) processes 
round r - 1 at least 
Vl are from honest 
in the decision 
p has decided 
let us reason 
process 
have votep 
its role 
9CT refers to the Chandra-Toueg 
consensus 
algorithm 
with the failure 
OS. 
detector 
JOThe quorums used in this algorithm 
satisfy 
the property 
of masking 
quorums [IS]. Note that with respect 
of class 1 use opaque quorums, and algorithms 
quorums. 
to the definitions 
in [15], algorithms 
of class 3 use dissemination 
To-b 
n - To+ b 
n-To+b 
Byz. 
> 2(n - TD+ b) 
Figure 1. Illustration 
b = 1, 1 = 0, TD = 5) 
for FLV for class 1 (n = 6, 
by lines 
is ensured 
Property 
FLV-liveness 
4, 5. This 
when T D > n+;H f, we have n  - b  - 1 > 
from all 
IJI;I 2: n - b -f) implies 
that the 
FLV -validity 