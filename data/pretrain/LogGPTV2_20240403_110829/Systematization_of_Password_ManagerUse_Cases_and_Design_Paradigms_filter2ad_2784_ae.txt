ing design paradigms or multiple implementation approaches for a
single paradigm, meaning that these design’s relative strengths and
weaknesses and the best way to implement them remain unknown.
In making this observation, we are not denigrating the excellent
existing research into password manager usability but instead not-
ing that this is an area rife with research opportunities. Within this
environment, our systematization serves as an invaluable reference
for constructing future usability studies.
Based on our systematization, we conducted cognitive walk-
throughs of eight different managers, covering all essential and
recommended use cases. Observations from these walkthroughs
include significant issues typing credentials when autofill is unavail-
able, confusing interface designs, and challenges linking credentials
to multiple websites.
538ACSAC ’21, December 6–10, 2021, Virtual Event, USA
James Simmons, Oumar Diallo, Sean Oesch, and Scott Ruoti
We conclude with an observation taken from considering both
our systematization and our cognitive walkthroughs. We find that
browser-based managers have limited feature sets, failing to imple-
ment many of the design paradigms provided by extension-based
paradigms, limiting the usability and security of browser-based
managers. However, browser-based managers are more trivial to
set up and begin using than the more feature-rich extension-based
managers. This situation could explain why convenience-oriented
users are more likely to adopt and continue using browser-based
managers [8, 21].
Still, this situation is problematic as the lackluster security of
browser-based managers leaves user credentials at risk [19]. While
one approach focuses on making browser-based managers more
secure or extension-based managers easier to set up (both of which
are admirable goals), we instead recommend that browser- and
extension-based managers work together to help users adopt and
transition to secure password managers. In this approach, browser-
based managers would continue to provide a seamless onboarding
process, maximizing the number of users who adopt password
managers. After users become accustomed to using a password
manager, the browser-based managers would begin nudging users
to adopt more functional and secure extension-based browsers. The
extension-based browsers would automate the transition from the
browser-based manager to the extension-based manager, helping
users recognize and leverage the increased utility and security of
the extension-based managers. Ultimately, we hypothesize that
such a two-step process would be more successful than having
any single manager optimize for both adoption and long-term use
simultaneously.
REFERENCES
[1] Wei Bai, Moses Namara, Yichen Qian, Patrick Gage Kelley, Michelle L Mazurek,
and Doowon Kim. 2016. An inconvenient trust: User attitudes toward security and
usability tradeoffs for key-directory encryption systems. In Twelfth Symposium
on Usable Privacy and Security (SOUPS 2016). 113–130.
[2] Joseph Bonneau. 2012. The science of guessing: analyzing an anonymized corpus
of 70 million passwords. In 2012 IEEE Symposium on Security and Privacy. IEEE,
538–552.
[3] Sonia Chiasson, Paul C van Oorschot, and Robert Biddle. 2006. A Usability Study
and Critique of Two Password Managers. In USENIX Security Symposium, Vol. 15.
1–16.
[4] Anupam Das, Joseph Bonneau, Matthew Caesar, Nikita Borisov, and XiaoFeng
Wang. 2014. The Tangled Web of Password Reuse. In NDSS, Vol. 14. 23–26.
[5] Matteo Dell’Amico, Pietro Michiardi, and Yves Roudier. 2010. Password strength:
An empirical analysis. In 2010 Proceedings IEEE INFOCOM. IEEE, 1–9.
[6] Rachna Dhamija and J Doug Tygar. 2005. The battle against phishing: Dynamic
security skins. In Proceedings of the 2005 symposium on Usable privacy and security.
77–88.
[7] Saba Eskandarian, Jonathan Cogan, Sawyer Birnbaum, Peh Chang Wei Brandon,
Dillon Franke, Forest Fraser, Gaspar Garcia, Eric Gong, Hung T Nguyen, Taresh K
Sethi, et al. 2019. Fidelius: Protecting user secrets from compromised browsers.
In 2019 IEEE Symposium on Security and Privacy (SP). IEEE, 264–280.
[8] Michael Fagan, Yusuf Albayram, Mohammad Maifi Hasan Khan, and Ross Buck.
2017. An investigation into users’ considerations towards using password man-
agers. Human-centric Computing and Information Sciences 7, 1 (2017), 12.
[9] Sascha Fahl, Marian Harbach, Marten Oltrogge, Thomas Muders, and Matthew
Smith. 2013. Hey, you, get off of my clipboard. In International Conference on
Financial Cryptography and Data Security. Springer, 144–161.
[10] Dinei Florencio and Cormac Herley. 2007. A large-scale study of web password
habits. In Proceedings of the 16th international conference on World Wide Web.
ACM, 657–666.
[11] Paolo Gasti and Kasper B Rasmussen. 2012. On the security of password manager
database formats. In European Symposium on Research in Computer Security.
Springer, 770–787.
[12] Kristen K Greene, John Michael Kelsey, and Joshua M Franklin. 2016. Measur-
ing the usability and security of permuted passwords on mobile platforms. US
Department of Commerce, National Institute of Standards and Technology.
[13] N. Huaman, S. Amft, M. Oltrogge, Y. Acar, and S. Fahl. 2021. They Would do
Better if They Worked Together: The Case of Interaction Problems Between
Password Managers and Websites. In 2021 2021 IEEE Symposium on Security
and Privacy (SP). IEEE Computer Society, Los Alamitos, CA, USA, 1626–1640.
https://doi.org/10.1109/SP40001.2021.00094
[14] Jonathan Lazar, Jinjuan Heidi Feng, and Harry Hochheiser. 2017. Research methods
in human-computer interaction. Morgan Kaufmann.
[15] Zhiwei Li, Warren He, Devdatta Akhawe, and Dawn Song. 2014. The Emperor’s
New Password Manager: Security Analysis of Web-based Password Managers.
In USENIX Security Symposium. 465–479.
[16] Sanam Ghorbani Lyastani, Michael Schilling, Sascha Fahl, Michael Backes, and
Sven Bugiel. 2018. Better managed than memorized? Studying the Impact of
Managers on Password Strength and Reuse. In 27th USENIX Security Symposium.
203–220.
[17] Daniel McCarney, David Barrera, Jeremy Clark, Sonia Chiasson, and Paul C
Van Oorschot. 2012. Tapas: design, implementation, and usability evaluation
of a password manager. In Proceedings of the 28th Annual Computer Security
Applications Conference. 89–98.
[18] Sean Oesch, Anuj Gautam, and Scott Ruoti. 2021. The Emperor’s New Aut-
ofill Framework: A Security Analysis of Autofill on iOS and Android. CoRR
abs/2104.10017 (2021). arXiv:2104.10017 https://arxiv.org/abs/2104.10017
[19] Sean Oesch and Scott Ruoti. 2020. That Was Then, This Is Now: A Security Eval-
uation of Password Generation, Storage, and Autofill in Browser-Based Password
Managers. In 29th USENIX Security Symposium (USENIX Security 20). USENIX
Association, Boston, MA. https://www.usenix.org/conference/usenixsecurity20/
presentation/oesch
[20] Sarah Pearman, Jeremy Thomas, Pardis Emami Naeini, Hana Habib, Lujo Bauer,
Nicolas Christin, Lorrie Faith Cranor, Serge Egelman, and Alain Forget. 2017.
Let’s Go in for a Closer Look: Observing Passwords in Their Natural Habitat. In
Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 295–310.
[21] Sarah Pearman, Shikun Aerin Zhang, Lujo Bauer, Nicolas Christin, and Lor-
rie Faith Cranor. 2019. Why people (don’t) use password managers effectively.
In Fifteenth Symposium On Usable Privacy and Security (SOUPS 2019). USENIX
Association, Santa Clara, CA. 319–338.
[22] Hirak Ray, Flynn Wolf, Ravi Kuber, and Adam J. Aviv. 2021. Why Older
Adults (Don’t) Use Password Managers. In 30th USENIX Security Symposium
(USENIX Security 21). USENIX Association. https://www.usenix.org/conference/
usenixsecurity21/presentation/ray
[23] Shannon Riley. 2006. Password security: What users know and what they actually
web. arXiv preprint arXiv:1805.00566 (2018).
[34] Alma Whitten and J Doug Tygar. 1999. Why Johnny Can’t Encrypt: A Usability
Evaluation of PGP 5.0. In USENIX Security Symposium, Vol. 348. 169–184.
do. Usability News 8, 1 (2006), 2833–2836.
[24] Scott Ruoti, Jeff Andersen, Scott Heidbrink, Mark O’Neill, Elham Vaziripour,
Justin Wu, Daniel Zappala, and Kent Seamons. 2016. " We’re on the Same Page"
A Usability Study of Secure Email Using Pairs of Novice Users. In Proceedings of
the 2016 CHI Conference on Human Factors in Computing Systems. 4298–4308.
[25] Scott Ruoti, Jeff Andersen, Travis Hendershot, Daniel Zappala, and Kent Seamons.
2016. Private Webmail 2.0: Simple and easy-to-use secure email. In Proceedings of
the 29th Annual Symposium on User Interface Software and Technology. 461–472.
[26] Scott Ruoti, Jeff Andersen, Tyler Monson, Daniel Zappala, and Kent Seamons.
2018. A comparative usability study of key management in secure email. In
Fourteenth Symposium on Usable Privacy and Security ({SOUPS} 2018). 375–394.
[27] Scott Ruoti, Jeff Andersen, Daniel Zappala, and Kent Seamons. 2015. Why Johnny
still, still can’t encrypt: Evaluating the usability of a modern PGP client. arXiv
preprint arXiv:1510.08555 (2015).
[28] Scott Ruoti and Kent Seamons. 2017. End-to-end passwords. In Proceedings of the
2017 New Security Paradigms Workshop. ACM, 107–121.
[29] Sunyoung Seiler-Hwang, Patricia Arias-Cabarcos, Andrés Marín, Florina Al-
menares, Daniel Díaz-Sánchez, and Christian Becker. 2019. “I don’t see why I
would ever want to use it:” Analyzing the Usability of Popular Smartphone Pass-
word Managers. In Proceedings of the 2019 ACM SIGSAC Conference on Computer
and Communications Security. 1937–1953.
[30] David Silver, Suman Jana, Dan Boneh, Eric Yawei Chen, and Collin Jackson.
2014. Password Managers: Attacks and Defenses. In USENIX Security Symposium.
449–464.
[31] Elizabeth Stobert, Tina Safaie, Heather Molyneaux, Mohammad Mannan, and
Amr Youssef. 2020. ByPass: Reconsidering the Usability of Password Managers.
In International Conference on Security and Privacy in Communication Systems.
Springer, 446–466.
[32] Ben Stock and Martin Johns. 2014. Protecting users against XSS-based password
manager abuse. In Proceedings of the 9th ACM symposium on Information, computer
and communications security. ACM, 183–194.
[33] Ke Coby Wang and Michael K Reiter. 2018. How to end password reuse on the
539Systematization of Password Manager Use Cases and Design Paradigms
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
A COGNITIVE WALKTHROUGH TASKS
Below are the tasks used in our cognitive walkthroughs:
(1) First time setup (E1): The evaluator was required to set up
the password manager. This included downloading the man-
ager (if applicable), installing it, creating an online account,
and finishing any remaining setup tasks. Evaluators avoided
using external documentation, focusing instead on how the
manager’s UI supported this use case. This task was always
the first task completed for each manager.
(2) Registering a credential in the manager (E2): The eval-
uator needed to register a credential (an account name and
password) in the manager. They were free to complete this
task in any way they wanted so long as they did not leave
the manager’s interface. This task explores design paradigm
(E2-P1) Manual registration.
(3) Log in with an unstored credential (E2): The evaluator
would log into a test website we created with credentials
not already stored in the manager. This would trigger the
manager to suggest saving the credentials. The task was
complete once the credentials were saved. This task explores
design paradigm (E2-P2) Auto-detect registration.
(4) Updating a credential in the manager (E3): The evalua-
tor needed to update a credential previously stored in the
manager. They were free to complete this task in any way
they wanted so long as they did not leave the manager’s in-
terface. This task explores design paradigm (E3-P1) Manual
update.
(5) Login with updated credentials (E3): The evaluator would
log into a test website with credentials different than those
stored in the manager. This would trigger the manager to
suggest saving the updated credentials. The task was com-
plete once the updated credentials were saved. This task
explores design paradigm (E3-P2) Auto-detect update.
(6) Removing a credential stored in the manager (E4): The
evaluator would use the manager to remove a target creden-
tial.
(7) Log in with credentials stored in the manager (E5): The
evaluator would log into a test website that has associated
credentials stored in the manager. This would trigger the
autofill process ((E5-P1) Autofill w/ interaction or (E5-P2)
Autofill w/o interaction). The task was complete once the
evaluator finished the autofill process and was logged into
the website.
(8) Log in from multiple subdomains (E5): The evaluator
would sequentially log into two test websites we had created.
These websites shared the same parent domain. The task
was completed once both websites were logged in. This task
compares design paradigms (E5-P4) Separate subdomains and
(E5-P5) Group subdomains.
(9) Log in from a mobile device (E6): The evaluator would
log into a test website using their mobile device. This device
did not have a manager installed, and the evaluator was not
allowed to install one. Instead, they would need to view the
credential in the desktop manager then manually enter it
into the mobile device.
(10) Create an account (E7): The evaluator would need to cre-
ate a new online account, making sure to use a generated
password. What approach they took in generating the pass-
word was left up to the evaluator, though they did examine
the default settings and modified them if they wished to.
(11) Set up and sync on a secondary device (E1, E8): The eval-
uator was tasked with setting up the manager again on a
second device. After setting up the manager, the evaluator
would ensure that their credentials were synchronized be-
tween the two managers, and if not, they needed to figure
out how to resolve the situation.
(12) Lock manager (E9): The evaluator would need to lock the
manager.
lock the manager.
(13) Unlock manager (E10): The evaluator would need to un-
(14) Complete a credential audit (R1): The evaluator would
need to find the credential audit tool, execute the audit, and
respond to any warnings presented. The vault was filled with
several problematic credentials to ensure that results would
be returned from the audit.
(15) Ensure safe settings (R2): The evaluator would need to
ensure that user interaction was required before credentials
would be autofilled. This included identifying the appropriate
setting and changing it if necessary.
(16) Recover access to the manager (R3): Evaluators would
act as if they had lost their credentials and try to determine
if they could regain access to their vault. If it were possible,
they would take the necessary steps to do so.
(17) Store non-credential data in manager (X4): The eval-
uator would be tasked with storing a phone number and
address in the manager. They would then be asked to en-
ter this information into a website. They were free to enter
the information using autofill ((X4-P3) Autofill for structured
data) if supported.
540