deny a tx
replay a tx
not notify R
not notify S
DoS
forge a rcpt
deny a tx
not notify R
forge a rcpt
replay a tx
not notify S
Solution
V keeps the rcpt
S and R keep the rcpt
use nonce
S has incentive to send rcpt
3 disputes/fair rcpt signing
inevitable, hurts V’s reput
rcpt must be signed by V
R keeps the rcpt
S has incentive to send rcpt
rcpt must be signed by V
use nonce
3 disputes/fair rcpt signing
S being malicious. S can only try to deny an approved transac-
tion (tx) to claim a higher balance. However, this won’t succeed as
long as V keeps the receipt (rcpt) signed by both itself and S.
V being malicious. There are five possible scenarios. First, V
may attempt to deny a transaction. But again, S has the receipt
signed by V as an evidence. Second, V may replay the same transac-
tion even if S doesn’t have the intention. To prevent this, we can add
a nonce to each transaction like in Ethereum [74], and transactions
with the same nonce shall only be executed once. Third, usually V
SenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsSenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsSenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsTransaction intent signed by SenderReceipt signed by VASPReceipt signed by VASPReceipt signed by VASPSession 12D: Decentralized Cryptographic Protocols CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3484R being malicious. The capability of R is limited. Without a
receipt signed by V, R cannot claim a higher balance than he should
possess.
V colludes with S. There are two possible disputes. First, V
and S may execute a transaction but later deny it so R’s balance
is not properly increased. This won’t succeed as long as R keeps
the receipt. Second, V and S may withhold the receipt from R. As
mentioned, S has no incentive to do so in practice.
S colludes with R. A valid receipt requires the signature from
V. So if only S and R are colluding, there is nothing harmful they
can do.
V colludes with R. There are two possible disputes in this case.
First, V may collude with R and replay a transaction from S. Sim-
ilarly as before, adding a nonce to each transaction prevents this.
Second, V may secretly process a transaction but doesn’t send the
receipt to S. As mentioned, this can be resolved via potentially three
separate disputes or mitigated if S and V run a fair contract signing
protocol.
Note that there is no incentive for S, R and V to collude together,
because it is in S’s and R’s interests that their balances are no less
than they actually own while V wants its total liabilities to be as
low as possible.
Overall, all the scenarios except the DoS case which is inevitable
in most centralized applications and hurts V’s reputation, can be
resolved. However, for an individual user, the cost (including time
and effort) for dispute resolution may be higher than the balance
in dispute, so the user might not have incentive to raise a dispute.
In practice, V may slightly manipulate balances so that users have
little motive to dispute. There is a game between these entities
when taking such incentives into consideration, which is open for
future research.
F.2 2-VASP Dispute Resolution
We depict in fig. 10 the execution of a transaction across two VASPs
and analyze all possible dispute scenarios. The difference between
transaction execution within a single VASP and that across two
VASPs is that in the latter case, V1 needs to transfer assets to V2
and V2 forwards the receipt to R. We can have a bijective mapping
from scenarios in the single-VASP case to the two-VASP case by
viewing V as the union of V1 and V2, i.e., V1 and V2 collude as a
single entity, and all solutions still work. Therefore, we only analyze
additional scenarios when either of V1 and V2 is malicious. Still,
we classify them by the set of malicious entities and summarize the
analysis in table 6.
V1 being malicious. There are four possible disputes. First,
V1 may secretly decrease S’s balance without sending the signed
receipt to him. Similarly to the single-VASP case, this can be resolved
by possibly three separate disputes or mitigated by S and V1 running
a fair contract signing protocol on the receipt. Second, V1 may replay
a transaction and this can be prevented by using nonce as discussed
previously. Third, V1 may approve a cross-VASP transaction but
not transfer the corresponding asset to V2. This can be resolved by
requiring proof of transfer (PoT) from V1. Fourth, V1 may DoS S.
As mentioned, this is inevitable but hurts V1’s reputation.
V2 being malicious. There are two possible disputes. First, V2
may deny receiving the asset from V1. This can be resolved by V1
providing a PoT. Second, V2 may withhold the receipt from R and
Figure 10: Transaction across two VASPs.
Table 6: Transaction across two VASPs.
S
H
H
M
M
H
H
M
M
V1
V2
M
H
H
M
H
M
H
M
H
M
H
M
H
M
H
M
R
H
H
H
H
M
M
M
M
Potential attack
Solution
not notify S
replay a tx
not transfer assets
DoS
deny asset transfer
not notify R
not transfer assets
deny a tx
not notify R
3 disputes/fair rcpt signing
use nonce
PoT needs to match rcpt
inevitable, hurts V1’s reput
V1 provides PoT
S has incentive to send rcpt
PoT needs to match rcpt
V1 keeps the rcpt
S has incentive to send rcpt
deny asset transfer
V1 provides PoT
not notify S
replay a tx
not transfer assets
deny asset transfer
not transfer assets
deny a tx
deny asset transfer
3 disputes/fair rcpt signing
use nonce
PoT needs to match rcpt
V1 provides PoT
PoT needs to match rcpt
V1 keeps the rcpt
V1 provides PoT
automatically sends receipts to R for usability and efficiency in a
trading system, but V may withhold a receipt so that R cannot verify
the balance accordingly. In this case, S can forward the receipt to
R directly to proceed with the trading, thus this is not an issue. In
practice S has the incentive to do so because he/she is either paying
for a product or service, or transferring money to R who he/she
knows. In either case, S needs to get confirmation of receipt from
R. Fourth, V may not notify S of the approval of a transaction but
secretly decreases S’s balance. S only finds out when verifying the
balance. When S raises a dispute, however, V is able to provide the
receipt. S may use the receipt to raise another dispute with R as R
should have received the funds. This is in a different layer of trading
protocols between S and R, so we don’t go into detail. R disagreeing
with the balance can use the receipt for another dispute. There are
three potential disputes. To avoid all the complexities, S and V can
also run a fair contract signing protocol [4] for receipts on each
transaction to eliminate V’s advantage here. Fifth, V may mount
a denial-of-service (DoS) attack, not approving valid transactions,
which is inevitable in most centralized applications. However, V
cannot claim a lower balance for S, thus the issue is out of the scope
of PoL. Meanwhile, DoS hurts V’s reputation (reput), so V has no
incentive to do so.
SenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsSenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsSenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsSenderReceiverVASP_1Receipt signed by VASP_1Receipt signed by VASP_1Receipt signed by VASP_1Txn intent signed by SenderVASP_2Receipt signed by VASP_1 & Transfer assetsTransaction intent signed by SenderReceipt signed by VASP_1Receipt signed by VASP_1 & Transfer assetsReceipt signed by VASP_1Receipt signed by VASP_1Session 12D: Decentralized Cryptographic Protocols CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3485not increase his balance properly. However, S has the incentive to
notify R, so R can dispute with the receipt.
V1 colludes with S. V1 may approve a transaction but not send
the assets to V2. However, this won’t succeed because S has incen-
tive to send R the receipt, e.g., for service in return, which allows R
to dispute. In the dispute, V2 can require V1 to provide a PoT that
matches with the receipt.
V2 colludes with S. There are three possible scenarios. First, S
may deny an issued transaction, but V1 keeps the receipt signed S.
Second, S and V2 may not notify R about the transaction. However,
there is no incentive for S to do so in practice as discussed before.
Third, V2 may deny receiving assets from V1 for the transaction,
but V1 can provide a PoT.
V1 colludes with R. There are three possible scenarios. First,
V1 may secretly process the transaction but withhold the receipt
from S. This can either be resolved via potentially three disputes
or mitigated by S and V1 running a fair signing protocol on the
receipt. Second, V1 may replay transactions, which can be prevented
by using the nonce. Third, V1 may not transfer the assets to V2.
V2 can require V1 to provide a PoT that matches the receipt with
which R claims a higher balance.
V2 colludes with R. V2 may deny asset transfer from V2. This
can be resolved by V1 providing a PoT.
V1 colludes with S and R. V1 may not send the assets to V2
properly. However, once R claims a higher balance with a valid
receipt, V2 can dispute and require from V1 a PoT that matches the
receipt.
V2 colludes with S and R. There are two possible disputes. First,
S may deny a transaction he/she issued and approved by V1. V1
can use the receipt as a defense in the dispute. Second, V2 may deny
receiving assets from V1 for the approved transaction, but V1 can
provide the corresponding PoT.
Overall, all the scenarios except the DoS case can be resolved.
The discussions regarding the cost and game of dispute resolution
in the single-VASP case also hold in the cross-VASP case.
Session 12D: Decentralized Cryptographic Protocols CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3486