 **Migrated issue, originally created by Michael Bayer (@zzzeek)**
right now functions like startswith() and endswith() rely upon an in-python
string concatenation of "%" with the given value. this prevents the usage of
bind parameters and other non-literal expressions. a better approach would be
to move the string concatenation into the database layer, so that instead of
producing:
    where somecol LIKE "%foo"
we instead produce:
    where somecol LIKE '%' + 'foo'
but not every database supports "+" as a concatenation operator. so a
`ConcatenationClause` would be needed which each dialect can produce as it
likes, such as oracle which would produce `CONCAT(x, y)` for example.
* * *
Attachments: py