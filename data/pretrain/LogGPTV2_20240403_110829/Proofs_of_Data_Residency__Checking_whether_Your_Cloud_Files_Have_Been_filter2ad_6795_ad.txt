### Impact of Block Size on Response Latency and Security

#### Figure 2: CDFs of Response Latencies in E-ResCheck
- **(h)** 512-byte blocks
- **(g)** 256-byte blocks
- **(i)** 1024-byte blocks

**Figure 2** illustrates the cumulative distribution functions (CDFs) of response latencies for an honest prover \( P \) and an adversary \( A \) in E-ResCheck, considering different block sizes. The goal is to confirm the effect of block size on the security of our constructions and to determine the optimal block size for efficiency.

#### Experimental Setup
We varied the block size from 1 to 1024 bytes and measured the response latencies for both \( P \) and \( A \). The results are reported in Figures 1, 2 (for E-ResCheck) and Figures 3, 4 (for N-ResCheck).

#### Results and Analysis

**Figure 1** presents histograms of 1000 response latencies for \( P \) and \( A \) in E-ResCheck, with respect to different block sizes. The block size significantly affects fetching time. For block sizes ranging from 1 to 32 bytes, the fetching times of \( P \) follow a normal distribution with a mean of 12.93 ms and a standard deviation of 0.73 ms. As the block size increases, the variance in fetching time also increases because blocks are more likely to span across physical sectors.

For block sizes between 128 and 512 bytes, the fetching times can be classified into two groups, each following a normal distribution with different means (12.93 ms and 19.03 ms for 64 to 256 bytes, and 12.93 ms and 21.52 ms for 512-byte blocks). This variance is even more pronounced for 1024-byte blocks, where the fetching times are divided into three distinct groups (Figure 1i).

Uniform fetching times are desirable for reliable latency assessment. Large block sizes (e.g., larger than 64 bytes) are not suitable for security in our protocol due to the increased variance in fetching times.

The response latencies for \( A \) follow a normal distribution with a mean of 19.58 ms and a standard deviation of 2.71 ms. For blocks larger than 64 bytes, \( A \) splits them into 64-byte segments and retrieves them in parallel to speed up the fetching time. This explains why \( A \)'s fetching times for large blocks do not show the same grouping as those of \( P \). As the block size increases, differentiating the latencies of \( P \) and \( A \) becomes more challenging, potentially leading to higher false acceptance and rejection rates. This issue is particularly severe with 1024-byte blocks.

**Figure 2** shows the CDFs of response latencies for \( P \) and \( A \) in E-ResCheck. As the block size approaches 512 bytes, the CDFs of \( P \)'s response latencies no longer dominate those of \( A \), indicating difficulties in distinguishing the latencies of the honest prover from those of the adversary.

**Figure 3** depicts the histograms of response latencies for \( P \) and \( A \) in N-ResCheck. The effect of block size on response latency is noticeable but less evident compared to E-ResCheck, as the observed response latency includes both fetching time and challenge-response transmitting time. The latter component is relatively consistent across all block sizes. The response latencies for \( P \) follow normal distributions with means ranging from 24.32 ms to 30.34 ms and standard deviations varying from 1.81 ms to 2.52 ms. The response latencies for \( A \) follow a normal distribution with a mean of approximately 31.22 ms and standard deviations around 3.18 ms. Similar to E-ResCheck, distinguishing the response latencies of honest and dishonest provers in N-ResCheck becomes more difficult as the block size increases, especially when the block size reaches 512 bytes.

**Figure 4** shows the CDFs of response latencies for \( P \) and \( A \) in N-ResCheck. Figures 4h and 4i indicate that the CDFs of the adversary's response latencies dominate those of the honest prover, suggesting a significant advantage for the adversary in disguising its response latencies and behavior as honest.

From these experiments, it is clear that the block size has a strong impact on the security of our protocols. A block size that is too large can lead to failure in detecting adversarial behaviors. We recommend a block size of 64 bytes for both E-ResCheck and N-ResCheck, and this block size will be used in all subsequent experiments.

### Effect of MAC Length on False Acceptance Rate

In the second set of experiments, we varied the MAC length \( b \) from 1 to 4 bits and examined its effect on the false acceptance rate \( \psi \). The late delivery threshold was set to five, and the audit size was 300 challenges.

**Figure 5** shows the experimental results. The false acceptance rate \( \psi \) drops exponentially by at least an order of magnitude as \( b \) increases from one to four bits. Specifically, \( \psi \) reduces from \( 10^{-7} \) to \( 10^{-8} \) when \( c = 10\% \) in N-ResCheck or \( 3.8 \times 10^{-35} \).

**Figure 6** illustrates the effect of the late delivery threshold \( l \) on the security in E-ResCheck. The MAC length is set to 16 bits, and the audit size is 300 challenges. The figures show that the false acceptance rate \( \psi \) and the false rejection rate \( \gamma \) are influenced by the late delivery threshold \( l \).

In conclusion, the block size and MAC length are critical parameters that significantly affect the security and efficiency of our protocols. Based on our findings, we recommend a block size of 64 bytes and a MAC length of 16 bits for optimal performance.