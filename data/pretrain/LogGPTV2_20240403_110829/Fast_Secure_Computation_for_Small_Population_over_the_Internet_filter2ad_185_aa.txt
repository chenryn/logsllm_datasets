# Fast Secure Computation for Small Populations over the Internet

**Authors:**
- Megha Byali
- Arun Joseph
- Arpita Patra
- Divya Ravi

## Abstract

Secure Multi-Party Computation (MPC) with a small number of participants is an important area of research, primarily due to its ability to model most real-world MPC applications and the simplicity and efficiency of the resulting protocols. In this work, we present efficient, constant-round 3-party (3PC) and 4-party (4PC) protocols in the honest-majority setting that achieve strong security notions of fairness (corrupted parties receive their output only if all honest parties receive their output) and guaranteed output delivery (corrupted parties cannot prevent honest parties from receiving their output). Our constructions, being constant-round, are suitable for high-latency networks such as the Internet and are built using garbled circuits (GC).

### Contributions

1. **Pairwise-Private Channels Model:**
   - A 4-round 3PC protocol with fairness.
   - A 5-round 4PC protocol with guaranteed output delivery.
   - Empirically, our protocols match the best-known 3PC protocol by Mohassel et al. [CCS 2015] in terms of computation time, LAN runtime, WAN runtime, and communication cost. Notably, our 4PC outperforms the 3PC of Mohassel et al. in terms of per-party computation and communication cost.
   - By adding one more GC, we reduce the round complexity of our 4PC to four rounds. The only existing 4PC in this setting, by Ishai et al. [CRYPTO 2015], involves 12 GCs.

2. **Broadcast Channel Model:**
   - A 5-round 3PC protocol with guaranteed output delivery, involving the computation and communication of a single GC. A broadcast channel is essential for achieving guaranteed output delivery, as per known impossibility results. The overall broadcast communication in our protocol is minimal and independent of the circuit size, inducing a nominal overhead compared to the protocol by Mohassel et al.

### Related Work

- **Mohassel et al. [CCS 2015]:** Best-known 3PC protocol with selective abort.
- **Ishai et al. [CRYPTO 2015]:** Existing 4PC protocol involving 12 GCs.

### Preliminaries

#### 2.1 Model and Notations
- **Model:** Honest-majority setting with pairwise-private channels and optional broadcast channels.
- **Notations:** Definitions and notations for MPC, GC, and other primitives.

#### 2.2 Primitives
- **Garbled Circuits (GC):** Properties and usage in MPC.
- **Non-Interactive Commitment Schemes (NICOM):** Definition and properties.
- **Equivocal Non-Interactive Commitment (eNICOM):** Definition and properties.

### 3PC with Fairness

#### 3.1 Correctness and Security
- **Correctness:** Ensuring that all parties receive the correct output.
- **Security:** Achieving fairness and preventing corrupted parties from receiving output unless all honest parties do.

#### 3.2 Optimizations and Generalization
- **Optimizations:** Techniques to improve performance and reduce communication.
- **Generalization:** Extending the protocol to handle more complex scenarios.

### 4PC with Guaranteed Output Delivery

#### 4.1 Protocol for Input Consistency
- **Input Consistency:** Ensuring that all parties provide consistent inputs.

#### 4.2 Our Protocol
- **Description:** Detailed steps of the 4PC protocol.

#### 4.3 Correctness and Security
- **Correctness:** Ensuring that all parties receive the correct output.
- **Security:** Achieving guaranteed output delivery and preventing corrupted parties from disrupting the protocol.

#### 4.4 Optimizations
- **Optimizations:** Techniques to improve performance and reduce communication.

### 4PC with Guaranteed Output Delivery in Four Rounds

#### 5.1 Our Protocol
- **Description:** Detailed steps of the 4PC protocol with reduced round complexity.

#### 5.2 Correctness and Security
- **Correctness:** Ensuring that all parties receive the correct output.
- **Security:** Achieving guaranteed output delivery and preventing corrupted parties from disrupting the protocol.

#### 5.3 Optimizations
- **Optimizations:** Techniques to improve performance and reduce communication.

### 3PC with Guaranteed Output Delivery

#### 6.1 Correctness and Security
- **Correctness:** Ensuring that all parties receive the correct output.
- **Security:** Achieving guaranteed output delivery and preventing corrupted parties from disrupting the protocol.

#### 6.2 Optimizations
- **Optimizations:** Techniques to improve performance and reduce communication.

### Experimental Results

- **Performance Metrics:** Computation time, LAN runtime, WAN runtime, and communication cost.
- **Comparison:** Comparison with the best-known 3PC protocol by Mohassel et al. [CCS 2015].

### Appendices

- **A. The Security Model:**
  - Detailed description of the security model used in the protocols.
- **B. Primitives:**
  - **B.1 Properties of Garbling Scheme:**
    - Properties and usage of garbled circuits.
  - **B.2 Non-Interactive Commitment Schemes (NICOM):**
    - Definition and properties.
  - **B.3 Equivocal Non-Interactive Commitment (eNICOM):**
    - Definition and properties.
- **C. Security Proof of f3PC Protocol:**
  - Detailed security proof for the 3PC protocol with fairness.
- **D. Security Proof for g4PC:**
  - Detailed security proof for the 4PC protocol with guaranteed output delivery.
- **E. Security Proof for g4PC4:**
  - Detailed security proof for the 4PC protocol with guaranteed output delivery in four rounds.
- **F. Security Proof for g3PC:**
  - Detailed security proof for the 3PC protocol with guaranteed output delivery.

---

This version of the text is more structured and clearly delineates the contributions, related work, and technical details, making it easier to follow and understand.