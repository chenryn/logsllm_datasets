# 基础理论
## CAP 定理
CAP定理是分布式系统设计中最基础且至关重要的理论。它指出，在分布式数据存储中，无法同时满足以下三个条件：
- **一致性（Consistency）**：每次读取要么获得最近写入的数据，要么返回一个错误。
- **可用性（Availability）**：每次请求都能获得一个非错误响应，但不保证返回的是最新写入的数据。
- **分区容忍性（Partition Tolerance）**：尽管节点间存在网络故障导致消息丢失或延迟，系统仍能继续运行。

根据CAP定理，在存在网络分区的情况下，一致性和可用性必须二选一。而在没有发生网络故障时，即分布式系统正常运行时，一致性和可用性是可以同时被满足的。

需要注意的是，CAP定理中的一致性与ACID数据库事务中的一致性有所不同。正确理解C、A、P的含义对于系统架构设计至关重要，因为网络故障在分布式系统中不可避免。例如，大多数互联网应用（如门户网站）通常选择AP模型以确保高可用性，而银行等需要高度一致性的场景则倾向于CA或CP模型。

### 具体模式
- **CA (Consistency + Availability)**: 这样的系统关注一致性和可用性，需要严格的全局一致性协议，如“两阶段提交”（2PC）。这类系统不能容忍网络或节点故障，一旦出现故障，系统将拒绝写请求并变为只读状态。
- **CP (Consistency + Partition Tolerance)**: 关注一致性和分区容忍性，采用多数一致协议，如Paxos算法。这种系统能够提供部分可用性，少数节点在未同步到最新版本数据时会变得不可用。
- **AP (Availability + Partition Tolerance)**: 优先考虑可用性和分区容忍性，牺牲了一致性。这类系统通过维护数据版本来处理冲突，Dynamo就是一个典型例子。

## Fallacies of Distributed Computing
Fallacies of Distributed Computing是由Sun公司的劳伦斯·彼得·多伊奇等人于1994至1997年间提出的，旨在指出新进入分布式计算领域的程序员常犯的一些错误假设。这些假设包括：

1. 网络是稳定的。
2. 网络传输的延迟为零。
3. 网络带宽是无限的。
4. 网络是安全的。
5. 网络拓扑不会改变。
6. 只有一个系统管理员。
7. 数据传输成本为零。
8. 整个网络是同构的。

了解并避免这些错误对于开发可靠的分布式系统至关重要。认识到错误不可避免，并将其作为功能编写进代码中，是构建健壮分布式系统的关键。

# 经典资料
## 分布式系统理论
### Distributed Systems Theory for the Distributed Systems Engineer
本文认为推荐大量理论论文不是学习分布式系统的最佳方法。作者提出了一份适合工程师掌握的知识清单，并推荐了四份阅读材料：
- **Distributed Systems for Fun and Profit**: 涵盖了分布式系统中的关键问题。
- **Notes on Distributed Systems for Young Bloods**: 实践笔记，适合新手。
- **A Note on Distributed Systems**: 讨论了远程交互与本地对象的区别。
- **The Fallacies of Distributed Computing**: 列出了常见的错误假设及其影响。

### FLP Impossibility Result
FLP不可能性结果由Fischer、Lynch和Paterson提出，讨论了异步模型下共识问题的限制。结论是在异步模型中不存在完全正确的共识算法，但在某些条件下可以实现部分正确的共识算法。

### An Introduction to Distributed Systems
这份课程提纲覆盖了分布式系统的基础知识，适合作为初学者的学习指南。

### Distributed Systems for Fun and Profit
一本免费电子书，介绍了分布式系统的核心思想和技术，内容详实易懂。

### Distributed Systems: Principles and Paradigms
由Andrew S. Tanenbaum和Martin van Steen合著的经典教材，系统介绍了分布式系统的基本原理和技术。

### Scalable Web Architecture and Distributed Systems
一本免费在线小册子，主要针对面向互联网的分布式系统，介绍了高性能互联网服务的架构方案和实用工具。

### Principles of Distributed Systems
苏黎世联邦理工学院的教材，讲述了多种分布式系统中常用的算法，帮助学生掌握算法设计的精髓。

### Making Reliable Distributed Systems in the Presence of Software Errors
Erlang之父Joe Armstrong的作品，探讨了在存在软件错误的情况下如何构建可靠的分布式系统。

### Designing Data Intensive Applications
Martin Kleppmann撰写的书籍，深入浅出地讲解了数据密集型应用的设计与优化，提供了丰富的案例和解决方案。

# 小结
本文介绍了分布式系统的基础理论和一些经典资料，希望读者能够花时间消化吸收这些知识。结合实践，你一定能达到大多数人难以企及的技术境界。新年快乐！