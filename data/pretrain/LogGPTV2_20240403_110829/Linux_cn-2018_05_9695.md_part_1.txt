---
author: Jakelumetta
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 6861
date: '2018-05-30 05:58:08'
editorchoice: false
excerpt: 任何一种架构都是有利有弊的，而能满足你组织的独特需要的决策才是正确的选择。
fromurl: https://opensource.com/article/18/1/how-choose-between-monolith-microservices
id: 9695
islctt: true
largepic: /data/attachment/album/201805/30/055802hiuhbwgl09093gu6.jpg
permalink: /article-9695-1.html
pic: /data/attachment/album/201805/30/055802hiuhbwgl09093gu6.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 任何一种架构都是有利有弊的，而能满足你组织的独特需要的决策才是正确的选择。
tags:
- 架构
- 微服务
thumb: false
title: 微服务 vs. 整体服务：如何选择
titlepic: true
translator: qhwdw
updated: '2018-05-30 05:58:08'
---
> 
> 任何一种架构都是有利有弊的，而能满足你组织的独特需要的决策才是正确的选择。
> 
> 
> 
![](/data/attachment/album/201805/30/055802hiuhbwgl09093gu6.jpg)
对于许多初创公司来说，传统的知识认为，从单一整体架构开始，而不是使用微服务。但是，我们还有别的选择吗？
这本新书 —— 《[初创公司的微服务](https://buttercms.com/books/microservices-for-startups/)》，从许多 CIO 们理解的微服务的角度，解释了微服务的优点与缺点。
对于初创公司，虽然不同的 CTO 对此给出的建议是不同的，但是他们都一致认为环境和性能很重要。如果你正考虑你的业务到底是采用微服务还是单一整体架构更好，下面讨论的这些因素正好可以为你提供一些参考。
### 理解范围
首先，我们先来准确定义我们所谓的 “整体服务” 和 “微服务” 是什么。
微服务是一种方法，它开发一个单一的应用程序来作为构成整体服务的小服务，每个小服务都运行在它自己的进程中，并且使用一个轻量级的机制进行通讯，通常是一个 HTTP 资源的 API。这些服务都围绕业务能力来构建，并且可依赖全自动部署机制来独立部署。
一个整体应用程序是按单个的、统一的单元来构建，并且，通常情况下它是基于一个大量的代码来实现的。一般来说，一个整体服务是由三部分组成的：数据库、客户端用户界面（由 HTML 页面和/或运行在浏览器中的 JavaScript 组成）、以及服务器端应用程序。
“系统架构处于一个范围之中”，Zachary Crockett，[Particle](https://www.particle.io/Particle) 的 CTO，在一次访谈中，他说，“在讨论微服务时，人们倾向于关注这个范围的一端：许多极小的应用程序给其它应用程序传递了过多的信息。在另一端，有一个巨大的整体服务做了太多的事情。在任何现实中的系统上，在这两个极端之间有很多合适的面向服务的架构”。
根据你的情况不同，不论是使用整体服务还是微服务都有很多很好的理由。
“我们希望为每个服务使用最好的工具”，Julien Lemoine 说，他是 Algolia 的 CTO。
与很多人的想法正好相反，整体服务并不是过去遗留下来的过时的架构。在某些情况下，整体服务是非常理想的。我采访了 Steven Czerwinski 之后，更好地理解了这一点，他是 [Scaylr](https://www.scalyr.com/) 的工程主管，前谷歌员工。
“尽管我们在谷歌时有使用微服务的一些好的经验，我们现在 [在 Scalyr] 却使用的是整体服务的架构，因为一个整体服务架构意味着我们的工作量更少，我们只有两位工程师。“ 他解释说。（采访他时，Scaylr 正处于早期阶段）
但是，如果你的团队使用微服务的经验很丰富，并且你对你们的发展方向有明确的想法，微服务可能是一个很好的替代者。
Julien Lemoine，[Algolia](https://www.algolia.com/) 的 CTO，在这个问题上，他认为：“我们通常从使用微服务开始，主要目的是我们可以使用不同的技术来构建我们的服务，因为如下的两个主要原因：
* 我们想为每个服务使用最好的工具。我们的搜索 API 是在底层做过高度优化的，而 C++ 是非常适合这项工作的。他说，在任何其它地方都使用 C++ 是一种生产力的浪费，尤其是在构建仪表板方面。
* 我们希望使用最好的人才，而只使用一种技术将极大地限制我们的选择。这就是为什么在公司中有不同语言的原因。
”
如果你的团队已经准备好从一开始就使用微服务，这样你的组织从一开始就可以适应微服务环境的开发节奏。
### 权衡利弊
在你决定那种方法更适合你的组织之前，考虑清楚每种方法的优缺点是非常重要的。
### 整体服务
#### 优点：