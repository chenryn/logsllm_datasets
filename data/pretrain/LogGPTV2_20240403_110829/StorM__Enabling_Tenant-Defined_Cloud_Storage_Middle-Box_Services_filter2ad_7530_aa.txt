**Title: StorM: Enabling Tenant-Defined Cloud Storage Middle-Box Services**

**Authors:**
- Hui Lu†
- Abhinav Srivastava‡
- Brendan Saltaformaggio†
- Dongyan Xu†

**Affiliations:**
- †Department of Computer Science, Purdue University
- ‡AT&T Research

**Contact:**
- †{lu220, bsaltafo, dxu}@cs.purdue.edu
- ‡PI:EMAIL

**Conference:**
2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks

---

**Abstract:**

In an Infrastructure-as-a-Service (IaaS) cloud, tenants typically rely on the cloud provider to offer "value-added" services such as data security and reliability. However, this provider-controlled service model lacks flexibility and cannot be tailored to meet individual tenant needs. In this paper, we introduce StorM, a novel middle-box service platform that allows each tenant to deploy customized security and reliability services in virtualized middle-boxes for their cloud data. By enabling tenants to define their own data policies and the provider to offer corresponding infrastructural support, StorM divides the responsibilities of service creation. In developing StorM, we address key challenges including network splicing, platform efficiency, and semantic gap. We have implemented a StorM prototype on OpenStack and demonstrated three tenant-defined security and reliability middle-box services, achieving low performance overhead.

**Architecture Overview:**

Figure 2 illustrates the architecture of StorM, which consists of three main components:

1. **Network Splicing:**
   - Part of the cloud infrastructure, network splicing enables the seamless and transparent deployment of virtualized middle-boxes.
   - It ensures the isolation and security of any "cross-network" traffic, allowing middle-boxes to intercept and process storage packets without disrupting the overall system.

2. **Packet Interception and Semantics Reconstruction:**
   - Storage packets entering the middle-boxes carry block-level information such as disk sectors, raw data blocks, and inode information.
   - Middle-boxes offering encryption/decryption can operate at this granularity. However, other services like access monitoring and intrusion detection require higher-level file semantics.
   - StorM reconstructs the mapping from low-level block accesses to high-level file operations using inherent storage subsystem information, such as file system types and disk layouts.
   - Our case study in Section V-B demonstrates that this mapping not only recovers high-level file operations but also provides detailed insights into file system internal operations, which can be used to detect suspicious behaviors.

3. **Assumptions:**
   - A typical cloud infrastructure (e.g., OpenStack) consists of controller nodes and compute nodes.
   - We assume that cloud providers, including the controller and physical cloud infrastructure, are trusted.
   - StorM components residing on the physical cloud infrastructure are also trusted and protected by the cloud providers.
   - Once deployed, middle-boxes are isolated to the storage network (controlled by CSPs) and connections from local CSP administrators. They are transparent to programs (including malicious ones) running in tenants' VMs.
   - Tenants' VMs, which face the external network, are not trusted. Attackers may compromise a tenant's VM and attempt to access its in-cloud data storage.

**Design:**

The design of StorM is centered around the following key components:

1. **Network Splicing:**
   - Ensures the seamless and transparent deployment of virtualized middle-boxes.
   - Maintains the isolation and security of cross-network traffic, ensuring that middle-boxes can intercept and process storage packets without affecting the overall system.

2. **Packet Interception and Semantics Reconstruction:**
   - Storage packets carry block-level information, and middle-boxes can perform encryption/decryption at this level.
   - For services requiring higher-level file semantics, StorM reconstructs the mapping from low-level block accesses to high-level file operations.
   - This reconstruction provides detailed insights into file system internal operations, enhancing the effectiveness of services like access monitoring and intrusion detection.

By addressing these challenges, StorM offers a flexible and secure platform for tenants to deploy customized cloud storage services, thereby improving the overall security and reliability of their data in the cloud.