---
author: Benjamin Pollack
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4560
date: '2017-12-16 00:08:49'
editorchoice: false
excerpt: 指责开源软件总是离奇难用已经不是一个新论点了；这样的论点之前就被很多比我更为雄辩的人提及过，甚至是出自一些人非常推崇开源软件的人士口中。那么为什么我要在这里老调重弹呢？
fromurl: https://bitquabit.com/post/one-which-i-call-out-hacker-news/
id: 9148
islctt: true
largepic: /data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg
permalink: /article-9148-1.html
pic: /data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 指责开源软件总是离奇难用已经不是一个新论点了；这样的论点之前就被很多比我更为雄辩的人提及过，甚至是出自一些人非常推崇开源软件的人士口中。那么为什么我要在这里老调重弹呢？
tags:
- 开源软件
thumb: false
title: 因为这个我要点名批评 Hacker News
titlepic: true
translator: hopefully2333,yunfengHe
updated: '2017-12-16 00:08:49'
---
> 
> “实现高速缓存会花费 30 个小时，你有额外的 30 个小时吗？ 不，你没有。我实际上并不知道它会花多少时间，可能它会花五分钟，你有五分钟吗？不，你还是没有。为什么？因为我在撒谎。它会消耗远超五分钟的时间。这一切把问题简单化的假设都只不过是程序员单方面的乐观主义。”
> 
> 
> — 出自 [Owen Astrachan](http://www.cs.duke.edu/%7Eola/) 教授于 2004 年 2 月 23 日在 [CPS 108](http://www.cs.duke.edu/courses/cps108/spring04/) 上的讲座
> 
> 
> 
![](/data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg)
[指责开源软件总是离奇难用已经不是一个新论点了](http://blog.bitquabit.com/2009/06/30/one-which-i-say-open-source-software-sucks/)；这样的论点之前就被很多比我更为雄辩的人提及过，甚至是出自一些人非常推崇开源软件的人士口中。那么为什么我要在这里老调重弹呢？
在周一的 Hacker News 期刊上，一段文章把我逗乐了。文章谈到，一些人认为 [编写代码实现和一个跟 StackOverflow 一样的系统可以简单到爆](http://news.ycombinator.com/item?id=678501)，并自信的 [声称他们可以在 7 月 4 号的周末就写出一版和 StackOverflow 原版一模一样的程序](http://news.ycombinator.com/item?id=678704)，以此来证明这一切是多么容易。另一些人则插话说，[现有的](http://code.google.com/p/cnprog/)[那些仿制产品](http://code.google.com/p/soclone/) 就已经是一个很好的例证了。
秉承着自由讨论的精神，我们来假设一个场景。你在思考了一阵之后认为你可以用 ASP.NET MVC 来编写一套你自己的 StackOverflow 。我呢，在被一块儿摇晃着的怀表催眠之后，脑袋又挨了别人一顿棒槌，然后像个二哈一样一页一页的把 StackOverflow 的源码递给你，让你照原样重新拿键盘逐字逐句的在你的环境下把那些代码再敲一遍，做成你的 StackOverflow。假设你可以像我一样打字飞快，一分钟能敲 100 个词 ([也就是大约每秒敲八个字母](http://en.wikipedia.org/wiki/Words_per_minute))，但是却可以牛叉到我无法企及的打字零错误率。从 StackOverflow 的大小共计 2.3MB 的源码来估计（包括 .CS、 .SQL、 .CSS、 .JS 和 .aspx 文件），就单单是照着源代码这么飞速敲一遍而且一气呵成中间一个字母都不错，你也要差不多用掉至少 80 个小时的时间。
或者你打算从零开始编码实现你自己的 StackOverflow，虽然我知道你肯定是不会那样做的。我们假设你从设计程序，到敲代码，再到最终完成调试只需要区区十倍于抄袭 StackOverflow 源代码的时间。即使在这样的假设条件下，你也要耗费几周的时间昼夜不停得狂写代码。不知道你是否愿意，但是至少我可以欣然承认，如果只给我照抄 StackOverflow 源代码用时的十倍时间来让我自己写 StackOverflow，我可是打死也做不到。
*好的*，我知道你在听到这些假设的时候已经开始觉得泄气了。*你在想，如果不是全部实现，而只是实现 StackOverflow **大部分** 的功能呢？这总归会容易很多了吧。*
好的，问题是什么是 “大部分” 功能？如果只去实现提问和回答问题的功能？这个部分应该很简单吧。其实不然，因为实现问和答的功能还要求你必须做出一个对问题及其答案的投票系统，来显示大家对某个答案是赞同还是反对。因为只有这样你才能保证提问者可以得到这个问题的唯一的可信答案。当然，你还不能让人们赞同或者反对他们自己给出的答案，所以你还要去实现这种禁止自投自票的机制。除此之外，你需要去确保用户在一定的时间内不能赞同或反对其他用户太多次，以此来防止有人用机器人程序作弊乱投票。你很可能还需要去实现一个垃圾评论过滤器，即使这个过滤器很基础很简陋，你也要考虑如何去设计它。而且你恐怕还需要去支持用户图标（头像）的功能。并且你将不得不寻找一个自己真正信任的并且与 Markdown 结合很好的干净的 HTML 库（当然，假设你确实想要复用 StackOverflow 的 [那个超棒的编辑器](http://github.com/derobins/wmd/tree/master) ）。你还需要为所有控件购买或者设计一些小图标、小部件，此外你至少需要实现一个基本的管理界面，以便那些喜欢捣鼓的用户可以调整和改动他们的个性化设置。并且你需要实现类似于 Karma 的声望累积系统，以便用户可以随着不断地使用来稳步提升他们的话语权和解锁更多的功能以及可操作性。
但是如果你实现了以上*所有*功能，可以说你*就已经*把要做的都做完了。