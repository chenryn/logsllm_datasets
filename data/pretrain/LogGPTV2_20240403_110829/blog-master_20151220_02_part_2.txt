      begin  
        for rec in execute sql loop  
          return next rec;  
        end loop;  
        return;  
      end;  
    $function$;';  
  for i in 0..31 loop  
    perform new_dblink_connect('p'||i||'_conn', 'p'||i);  
    perform dblink_exec('p'||i||'_conn', 'create schema digoal', false);  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    perform dblink_disconnect('p'||i||'_conn');  
  end loop;  
end;  
$$;  
```  
创建plproxy使用的集群，注意顺序：  
```  
CREATE SERVER rds_pg_cluster FOREIGN DATA WRAPPER plproxy options(  
connection_lifetime '1800',  
disable_binary  '0',  
p0 'host=xxxx1.pg.rds.aliyuncs.com dbname=db0 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=0',  
p1 'host=xxxx2.pg.rds.aliyuncs.com dbname=db1 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=1',  
p2 'host=xxxx3.pg.rds.aliyuncs.com dbname=db2 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=2',  
p3 'host=xxxx4.pg.rds.aliyuncs.com dbname=db3 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=3',  
p4 'host=xxxx5.pg.rds.aliyuncs.com dbname=db4 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=4',  
p5 'host=xxxx6.pg.rds.aliyuncs.com dbname=db5 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=5',  
p6 'host=xxxx7.pg.rds.aliyuncs.com dbname=db6 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=6',  
p7 'host=xxxx8.pg.rds.aliyuncs.com dbname=db7 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=7',  
p8 'host=xxxx9.pg.rds.aliyuncs.com dbname=db8 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=8',  
p9 'host=xxxx10.pg.rds.aliyuncs.com dbname=db9 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=9',  
p10 'host=xxxx11.pg.rds.aliyuncs.com dbname=db10 port=3433 user=renny keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=10',  
p11 'host=xxxx12.pg.rds.aliyuncs.com dbname=db11 port=3433 user=postgres keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=11',  
p12 'host=xxxx13.pg.rds.aliyuncs.com dbname=db12 port=3433 user=dbnosql keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=12',  
p13 'host=xxxx14.pg.rds.aliyuncs.com dbname=db13 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=13',  
p14 'host=xxxx15.pg.rds.aliyuncs.com dbname=db14 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=14',  
p15 'host=xxxx16.pg.rds.aliyuncs.com dbname=db15 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=15',  
p16 'host=xxxx1.pg.rds.aliyuncs.com dbname=db16 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=16',  
p17 'host=xxxx2.pg.rds.aliyuncs.com dbname=db17 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=17',  
p18 'host=xxxx3.pg.rds.aliyuncs.com dbname=db18 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=18',  
p19 'host=xxxx4.pg.rds.aliyuncs.com dbname=db19 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=19',  
p20 'host=xxxx5.pg.rds.aliyuncs.com dbname=db20 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=20',  
p21 'host=xxxx6.pg.rds.aliyuncs.com dbname=db21 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=21',  
p22 'host=xxxx7.pg.rds.aliyuncs.com dbname=db22 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=22',  
p23 'host=xxxx8.pg.rds.aliyuncs.com dbname=db23 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=23',  
p24 'host=xxxx9.pg.rds.aliyuncs.com dbname=db24 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=24',  
p25 'host=xxxx10.pg.rds.aliyuncs.com dbname=db25 port=3433 user=digoal keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=25',  
p26 'host=xxxx11.pg.rds.aliyuncs.com dbname=db26 port=3433 user=renny keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=26',  
p27 'host=xxxx12.pg.rds.aliyuncs.com dbname=db27 port=3433 user=postgres keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=27',  
p28 'host=xxxx13.pg.rds.aliyuncs.com dbname=db28 port=3433 user=dbnosql keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=28',  
p29 'host=xxxx14.pg.rds.aliyuncs.com dbname=db29 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=29',  
p30 'host=xxxx15.pg.rds.aliyuncs.com dbname=db30 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=30',  
p31 'host=xxxx16.pg.rds.aliyuncs.com dbname=db31 port=3433 user=dbuser keepalives_idle=30 keepalives_interval=10 keepalives_count=10 application_name=31'  
);  
CREATE USER MAPPING FOR public SERVER rds_pg_cluster;  
```  
执行动态SQL的代理函数：  
```  
CREATE OR REPLACE FUNCTION dy(sql text)                           
 RETURNS SETOF record  
 LANGUAGE plproxy  
 STRICT  
AS $function$  
  cluster 'rds_pg_cluster';  
  run on all;  
  target digoal.dy;  
$function$;  
```  
例子(IP已隐去部分)：  
```  
postgres=# select * from dy('select inet_server_addr(),inet_server_port(),inet_client_addr(),inet_client_port(),count(*) from pg_stat_activity group by 1,2,3,4') as t(c1 inet,c2 int,c3 inet,c4 int,cnt int8) order by 1,2;  
      c1       |  c2  |       c3       |  c4   | cnt   
---------------+------+----------------+-------+-----  
10.151. | 3012 | 10.172. | 48477 | 2  
10.151. | 3012 | 10.172. | 48493 | 2  
10.151. | 3013 | 10.172. | 27255 | 3  
10.151. | 3013 | 10.172. | 27239 | 3  
10.151. | 3014 | 10.172. | 64573 | 2  
10.151. | 3014 | 10.172. | 64557 | 2  
10.151. | 3004 | 10.172. | 63958 | 2  
10.151. | 3004 | 10.172. | 63974 | 2  
10.151. | 3009 | 10.172. | 34966 | 3  
10.151. | 3009 | 10.172. | 34982 | 3  
10.151. | 3010 | 10.172. | 24074 | 2  
10.151. | 3010 | 10.172. | 24058 | 2  
10.151. | 3009 | 10.172. | 56821 | 2  
10.151. | 3009 | 10.172. | 56837 | 2  
10.151. | 3011 | 10.172. | 29265 | 3  
10.151. | 3011 | 10.172. | 29249 | 3  
10.151. | 3012 | 10.172. | 14945 | 2  
10.151. | 3012 | 10.172. | 14961 | 2  
10.151. | 3008 | 10.172. | 24139 | 2  
10.151. | 3008 | 10.172. | 24155 | 2  
10.151. | 3003 | 10.172. | 9419 | 2  
10.151. | 3003 | 10.172. | 9435 | 2  
10.151. | 3004 | 10.172. | 35252 | 2  
10.151. | 3004 | 10.172. | 35236 | 2  
10.151. | 3004 | 10.172. | 47530 | 2  
10.151. | 3004 | 10.172. | 47546 | 2  
10.151. | 3006 | 10.172. | 33434 | 2  
10.151. | 3006 | 10.172. | 33418 | 2  
10.151. | 3006 | 10.172. | 56858 | 2  
10.151. | 3006 | 10.172. | 56842 | 2  
10.151. | 3010 | 10.172. | 46645 | 2  
10.151. | 3010 | 10.172. | 46629 | 2  
(32 rows)  
```  
16个RDS，server IP有8个。  
使用dblink在所有节点创建以下dy_ddl实体函数，用于执行DDL：  
```  
do language plpgsql $$  
declare  
  v_sql text;  
begin  
  v_sql := 'CREATE OR REPLACE FUNCTION digoal.dy_ddl(sql text)  
     RETURNS VOID  
     LANGUAGE plpgsql  
     STRICT  
    AS $function$  
      declare  
      begin  
        execute sql;  
        return;  
      exception when others then return;  
      end;  
    $function$;';  
  for i in 0..31 loop  
    perform new_dblink_connect('p'||i||'_conn', 'p'||i);  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    perform dblink_disconnect('p'||i||'_conn');  
  end loop;  
end;  
$$;  
```  
创建plproxy函数，代理DDL语句：  
```  
CREATE OR REPLACE FUNCTION dy_ddl(sql text)                           
 RETURNS setof void  
 LANGUAGE plproxy  
 STRICT  
AS $function$  
  cluster 'rds_pg_cluster';  
  run on all;  
  target digoal.dy_ddl;  
$function$;  
```  
利用这个plproxy代理DDL函数在所有节点创建test表:  
```  
postgres=# select dy_ddl('create table test(id int)');  
 dy_ddl   
--------  
 ......  
(32 rows)  
Time: 35.683 ms  
```  
查询刚刚创建的test表:  
```  
postgres=# select * from dy('select id from test') as t(id int);  
 id   
----  
(0 rows)  
Time: 2.958 ms  
```  
删除test表：  
```  
select dy_ddl('drop table test');  
```  
接下来部署测试用例：  
使用dblink，连接到不同的db创建测试表：  
```  
do language plpgsql $$  
declare  
  v_sql text;  
begin  
  for i in 0..31 loop  
    perform new_dblink_connect('p'||i||'_conn', 'p'||i);  
    v_sql := 'create table digoal.userinfo(dbid int default '||i||',userid int,info text)';  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    v_sql := 'create table digoal.session (dbid int default '||i||',userid int,last_login timestamp)';  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    v_sql := 'create table digoal.login_log (dbid int default '||i||',userid int,db_user name,client_addr inet,  
                       client_port int,server_addr inet,server_port int,login_time timestamp)';  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    v_sql := 'create table digoal.tbl_small (userid int primary key,info text)';  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    perform dblink_disconnect('p'||i||'_conn');  
  end loop;  
end;  
$$;  
```  
生成测试数据，每个库200万数据(每个RDS 400万)，一共6400万用户数据：  
创建实体函数：  
```  
do language plpgsql $$  
declare  
  v_sql text;  
begin  
  v_sql := 'CREATE OR REPLACE FUNCTION digoal.dy_generate_test_ddl()  
     RETURNS VOID  
     LANGUAGE plpgsql  
     STRICT  
    AS $function$  
      declare  
        node int;  
sql text;  
      begin  
        select application_name::int into node from pg_stat_activity where pid=pg_backend_pid();  
sql := $a$insert into digoal.userinfo select $a$||node||$a$,generate_series($a$||node||$a$,32000000,32)$a$;  
execute sql;  
sql := $a$insert into digoal.session select dbid,userid from digoal.userinfo$a$;  
execute sql;  
        return;  
      exception when others then return;  
      end;  
    $function$;';  
  for i in 0..31 loop  
    perform new_dblink_connect('p'||i||'_conn', 'p'||i);  
    perform dblink_exec('p'||i||'_conn', v_sql, false);  
    perform dblink_disconnect('p'||i||'_conn');  
  end loop;  
end;  
$$;  
```  
创建代理函数：  
```  
CREATE OR REPLACE FUNCTION dy_generate_test_ddl()                           
 RETURNS setof void  
 LANGUAGE plproxy  
 STRICT  
AS $function$  
  cluster 'rds_pg_cluster';  
  run on all;  
  target digoal.dy_generate_test_ddl;  
$function$;  
```  
调用代理函数，生成测试数据：  