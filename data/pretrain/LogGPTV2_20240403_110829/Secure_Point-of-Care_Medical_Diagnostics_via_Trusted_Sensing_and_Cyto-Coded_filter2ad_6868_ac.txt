correspond to a single cell by observing the width of the curve
that would remain unchanged by modifying the amplitude. By
modifying the ﬂuid ﬂow speed through the channel, MedSen
can alter the width of the resulting signal and thus protect this
information as well. The slow ﬂuid speed results in peaks with
larger widths.
V. CYTO-CODED AUTHENTICATION
Cloud-based medical services often require user authenti-
cation for various reasons such as billing and/or data storage
for later remote access by the users’ doctors. For server-side
patient authentication, existing solutions leverage traditional
methods such as explicit on-screen password entry by the
user [29]. MedSen’s trusted computing base does not include
the user’s smartphone; hence, it cannot rely on phone-based
user credential entry. On the other end, adding password
entry screen and authentication data processing facilities would
increase MedSen’s complexity, size and cost. Instead, MedSen
eliminates the need for explicit password entry completely, and
makes use of the user’s blood entry channel for automated
authentication of the user. We introduce a new authentication
mechanism that rely on unique identiﬁer based on a new type
of alphabet.
This alphabet is build by choosing unique combinations
of types and quantities of beads that are mixed with the
patient blood sample. These micro-beads generate peaks in
the ciphertext signal, similar to blood cells with different peak
characteristics, that can be recovered by the controller after
the decryption stage and used to associate a stored ciphertext
in the cloud service to an unique bead-based identiﬁer that
only the patient possess. This cyto-coded identiﬁer protects
the patient privacy by default since it is embedded in the
diagnostic protocol and carries no biometric information. It can
be associated either to a single diagnostic (different identiﬁers
per pipette), several diagnostics (multiple pipettes carrying the
same identiﬁer) or the entire set of diagnostics from a speciﬁc
user (all pipettes from a user) depending on the diagnostic
privacy requirements. Also, it is not linked with any patient
related information or knowledge, relieving him or her from
the task of ensuring the privacy of his or her data.
Also, this identiﬁer permits to check the integrity of the
ciphertext. More precisely, it provides a veriﬁcation code to
ensure that the integrity of the signal processing. The results
returned by the cloud-based server is preserved if the decoded
synthetic bead types numbers matches the ones submitted
588
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:12 UTC from IEEE Xplore.  Restrictions apply. 
high viscosity of elastomer, microﬂuidic channels take on the
designed conﬁgurations of the master mold. Biopsy punches
are used to create inlet and out outlet ports for the microﬂuidic
channel.
Micro-electrode fabrication. Micro-electrodes are fabricated
on the glass substrate using standard photolithography [34].
Similar to previous fabrication of the mold, the glass substrate
is coated with photoresist AZ5214 (MicroChem, Westborough,
MA) and exposed to UV light under photomask for the
electrodes. The coated wafer is then developed in AZ5412
developer to create the micro-patterns for the sensor. A thin
layer of chromium and gold (50 ˚A and 100 nm respectively)
are deposited on the micro-patterns using electron beam
evaporation to create the sensor. In this design, MedSen’s
electrodes have width of 20 μm, and 25 μm pitch. Figure 5
shows the electrodes that are designed with one common rake
of electrodes. This common junction takes excitation inputs
of multiple carrier frequencies from the lock-in ampliﬁer. The
output electrodes are interpolated in between the electrodes of
the common junction.
Microﬂuidic device. PDMS can be covalently bonded to glass
or Si substrates by oxidizing the contact surfaces. Cross-linked
polymer exposed to oxygen plasma generates a thin layer of
silanol terminations (SiOH) on the surface. When brought in
contact to the oxidized glass surface, the silanol terminated
layers condense with each other. The reaction creates confor-
mal Si-O-Si bonds between the polymer and glass [7]. These
covalent bonds create an irreversible, water tight seal between
the layers for microﬂuidic channels. Furthermore, Oxygen
plasma treatment on PDMS changes its surface properties from
hydrophobic to hydrophilic [31]. Intrinsically, cross-linked
PDMS is hydrophobic. Hydrophobicity in microﬂuidic systems
would make it difﬁcult to wet the channels. The introduction of
the polar function silanol group by exposing the microﬂuidic
channel to Oxygen plasma renders the surface of the channel
hydrophilic. The change from hydrophobicity to hydrophilicity
of PDMS is observed by the relative change in the advancing
contact angle of deionized water and PDMS surface [16].
B. Sensor-Side Data Manipulation
We implemented MedSen’s peak count-based encryption
scheme using the multi-electrode sensor, a controller for ran-
dom key generation, and a multiplexer for converting the key
to a speciﬁc sequence of electrodes.
We used a Raspberry Pi as a controller, which is in
charge of generating the key that
is later used to set a
speciﬁc sequence of electrodes on or off. For our proof-
of-concept demonstrations, we used the controller’s Linux
operating system /dev/random interface as the entropy
source for the key sequence parameters. Based on the key, the
electrodes are turned on and off via the Raspberry Pi general
purpose input-output (GPIO) interfaces that are connected to
a multiplexer, which in turn is connected to the electrodes.
The key generation and key renewal over time is handled by
a python custom library that is embedded in the program. The
encryption keys always remain on the controller and never get
sent out to the phone or cloud. This keeps the controller as
MedSen’s minimal trusted computing base.
To ensure accurate sensor cell count repeatability and
device ﬁdelity, the blood sample evaluated should reach a
certain size in terms of the number of cells counted. From
repeated experimentation, we empirically determined that sam-
ples containing at least 20K cells can provide repeatable cell
count with minimal standard deviation from run to run using
MedSen sensor. For the ideal encryption design (Section IV),
i.e. one different key for individual successive cells, this would
result in a key of length L bits:
N
× R
elec
2
+ R
),
gain
flow
(2)
L = N
× (N
+
cells
elec
where N
cells represents the number of cells in the blood
sample; N
elec is the number of activated electrodes; R
gain the
representation bit-length (or resolution of the gain in bits) for
subsequent pairs of activated electrodes N
/2 each forming
a capacitor; and R
flow the representation (or resolution) of the
ﬂow speed in the channel.
elec
Considering a 20K-cell sample, with a 16 output electrode
bio-sensor, with 16 different choices of gains (4-bit represen-
tation) and 16 different ﬂow speeds, that would lead us to
a 20K ∗ (16 + 8 ∗ 4 + 4) = 1M -bits key (0.12MB). The
16 different gain and ﬂow speed resolution granularity are
empirical choices and can be adjusted based on the security and
sensor precision requirements. We made those choices based
on the following observations. The amplitude and width of a
peak associated with a signal will typically be as much as four
times larger than the smallest peak observable. Speciﬁcally,
let’s take the 3.58 μm synthetic beads as a reference. Human
blood cells will typically have peaks of approximately twice
the amplitude, and the 7.8 μm synthetic beads approximately
have four times the amplitude of the 3.58 μm beads. Choosing
a 16-level granularity provides MedSen with (more than)
sufﬁcient entropy and ﬂexibility to change peak characteristics
in order to conceal cell types and masquerade them to external
untrusted entities such as the cloud. Needless to mention,
higher granularity would help to improve the homogeneity of
the signals in the ciphertext and thus provide better protection
at the cost of larger key size.
Cyto-coded authentication. MedSen’s cyto-coded identiﬁers
and authentication alphabet relies on different types of beads
mixed together at different concentrations. These two features
are used together to provide an alphabet large enough such
that we can create large number of distinguishable identiﬁers
for different patients. To avoid an identiﬁer collisions, i.e. two
different sets of beads types and concentrations that result
in the same measured/classiﬁed identiﬁer, we carefully chose
different types of beads as well as speciﬁc bead concentra-
tions that provide a measurement resolution good enough to
avoid any undesired case. This is tightly linked to the sensor
precision. Section VII provides further empirical details on
this identiﬁer construction and resolution. From the patient
perspective, this approach provides a completely transparent
and privacy preserving authentication mechanism. This feature
can be especially useful for patients that use this diagnostic
framework multiple times such as daily medical tests by the
elderly. A set of miniaturized micro-pipettes purchased by the
same user would embed the same identiﬁer. Patients do not
need to enter any information such as their credentials on the
phone or controller. MedSen considers the identiﬁer as the
patient’s credential, and stores the analysis outcomes from the
same patient under the same class.
C. Cloud-Based Data Analysis
MedSen encrypts the acquisition signal by randomizing the
number of electrodes (peaks) according to the generated key.
589
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:12 UTC from IEEE Xplore.  Restrictions apply. 
For server-side encrypted signal analysis, MedSen implements
a peak counting method to extract the number of peaks and
their characteristics in the encrypted signal. The outcomes
are sent back to MedSen’s bio-sensor micro-controller for
decoding and diagnostic decisions. Peak detection is performed
by thresholding the acquired signal and computing the number
of peaks whose amplitudes are above a predeﬁned minimum
value threshold. However,
in the long succession of data
acquisition, the measured signal changes in the baseline mea-
surement. These changes can be caused by many conditions
such as the change in ﬂuid concentration over long acquisition
time and the temperature drift of the ﬂuid.
In order to perform peak detection, the signal needs to be
detrended before thresholding the signal. Signal detrending is
achieved by ﬁtting the polynomial to the signal and detrending
the signal according to the polynomial
line. Strategically,
higher order polynomial ﬁtting is desired to match the baseline
drifting of the signal. However, for the large sequence of
data, the high order of the polynomial ﬁtting would cause
additional unwanted effects such as over-ﬁtting. This would
cause the peaks of the signal to deform to a larger degree. For
lower order of polynomial ﬁtting, the ﬁtted line might not be
conformal to the baseline drifting of the signal. This would be
under-ﬁtting and the signal cannot be detrended as desired.
According to our repeated experimentation, we empirically
found optimal a second order polynomial ﬁtting line to detrend
the baseline drifting of the signal. For the large sequence of
the signal, a second order polynomial line clearly under-ﬁts the
baseline drift of the signal. However, by partitioning the signal
sequence into a smaller train of data sub-sequences, the second
order polynomial ﬁtting line would be sufﬁcient to conform the
baseline drifting of each section in the train set of the signal.
The detrended sub-sequences will be concatenated to create
the original signal sequence with signal detrending applied.
After ﬁtting the sub-sequence with a second order polynomial,
the data section is detrended and normalized by dividing the
subsection of data by the ﬁtted polynomial. The sub-sequences
of the signal are detrended with overlap sections to minimize
the error of the ﬁtted polynomial at both ends of the sub-
sequences. The baseline of the detrended sub-sequences has
a mean value of one. Peak detection is achieved by setting
a minimum threshold on the data section of one minus the
detrended subsequence.
D. System Integration
Figure 9 describes the implementation of the MedSen’s
proof-of-concept apparatus. Figure 10 shows the details of the
microﬂuidic device and its interactions with the local micro-
controller, smartphone, and the cloud server. Figure 10a shows
MedSen withdrawing the ﬂuid solution from the microﬂuidic
channel through the outlet of the microﬂuidic device. The
microﬂuidic channel is video recorded under a microscope for
observing the ground truth (for our experiments) and validation
of the recovered signals. Figure 10b shows the setup for
how the output electrodes of the bio-sensor are connected
to the input of the multiplexer. Figure 10c and Figure 10d
show the details of the fabricated micro-electrodes and the
embedded micro-electrodes in the microﬂuidic channel (the
two parallel lines run perpendicular to the set of electrodes).
The microﬂuidic channel ﬂow is driven by the external peri-
staltic pump labeled D, i.e., Harvard Apparatus 11 Pico Plus
Elite (Figure 9). The Raspberry Pi microcontroller (label A) is
used to generate the random selection sequence of the output
Fig. 9.
Full Experiment Setup: A-microcontroller, B-multiplexer, C-
microﬂuidic device, D-external peristaltic pump, E-lock-in ampliﬁer. F-cloud
infrastructure, G-mobile platform.
electrodes in the microﬂuidic device (label C) through the 16:2
multiplexer MAX14661 (labeled B; Maxim Integrated). The
selected output sequence of the signal is recovered by the lock-
in ampliﬁer (labeled E).
To upload the encrypted signal to the remote signal pro-
cessing unit, the controller (Raspberry Pi A) is connected to a
mobile phone (labeled G) that shares its Internet connection.
The mobile phone also acts as a user interface to display
the progression of the test. In our implementation we used a
Google Android mobile phone LG Nexus 5 with a 4G connec-
tion. The Raspberry Pi and the Android device are connected
through a micro-USB to USB cable. We developed an Android
application that leverages the Android USB accessory API [6],
which allows the phone to detect the Raspberry Pi as soon as it
is connected and launches the corresponding app. This app has
two purposes: it provides an interface for the user to start the
blood test and provides a test progression feedback to the user
via information on the screen, and relays the measurements
to the cloud infrastructure, labeled F, in charge of performing
the heavy computation. It also receives the analysis outcomes
and forwards them to MedSen device. The Raspberry Pi runs
a daemon listening for events on the USB port. When the
phone is connected, the daemon exchanges information with
the device using the Android Open Accessory Protocol [5].
This ﬁrst exchange invites the user to download the diagnostic
application from the Google Play Store. The implementation
of the daemon running on the Raspberry Pi relies on libusb
library via the pyusb package in order to detect events,
read and write data on the USB ports. No speciﬁc security
requirements for the user privacy are addressed at this layer.
The mobile device is not part of the trusted computing base
and the valuable information conﬁdentiality is already ensured
though the encryption mechanisms above mentioned.
In our implementations for data acquisition, a Zurich
Instruments HF2IS impedance spectroscope coupled with a
HF2TA trans-impedance ampliﬁer are used to measure the
electrical impedance across the microﬂuidic channel. The bio-
sensor in the microﬂuidic system is excited with the continual
AC signals with a ﬁxed discrete set of frequencies. The
HF2IS impedance spectroscope can operate simultaneously at
590
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:12 UTC from IEEE Xplore.  Restrictions apply. 
electrode is selected and the remaining output electrodes are
routed to the ground port. Figure 11b shows the response where
the lead electrode (or electrode 9) is selected along with the
last electrode (or electrode 1). Figure 11c shows the response
of the bio-sensor when lead electrode 9 and electrode 1, 2
are selected. Figure 11d shows the outcomes when all the
electrodes are activated. These measurements are then send
for cloud-based peak detection analyses.
In Figure 11, the response time for each peak is approx-
imately 20 ms. The distance each bead travels through a pair
of electrodes, so a peak can be measured, is 45 μm (25 μm
pitch, and 20 μm of two halves of electrode). The microﬂuidic
channel dimension is 30 μm width, and 20 μm height. By
dividing the volume of the solution passing through a pair of
electrodes in the channel at the approximated time, the actual
ﬂow rate in the channel can be calculated to be 0.081 μL/min.
MedSen’s current deployment presents two limitations.