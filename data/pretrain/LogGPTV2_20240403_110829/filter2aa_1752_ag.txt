 2 
文件 I/O
更效。
我们将子 I/O 调。
2.11.1 虚拟文件系统
文件 (时 virtual file switch)  Linux 内
的文件操作的。内文件
的文件操作文件。
VFS 实的方文件 (common file model)
 Linux 文件的。对方∗文件
提 Linux 内文件的。 VFS 对文件
。提子读同步以及能。文
件的处理相操作。
方文件间的性。子 VFS 工作
inode superblock 上。 Unix 的文件能 Unix 的
 inodes处理。实 Linux 以的
FAT  NTFS 的文件。
VFS 的处。单的调以上的文件
上读单的工以文件上。文件
同的同的同的调。工作工
作。
 read() 调段的程。 C 提
调的调的。空间
进程内调处理处理给 read() 调内
文件对的对。然内调相对的 read() 
。对文件文件的。然
工作文件读给空间的
read() 调调空间的调处理然将
空间 read() 调进程。
对程 VFS 的的。程文件的
文件或。调 read() write()以及能
的文件上操作文件。
∗的 C 。
– 62 –
 2 
文件 I/O
2.11.2 页缓存
页存内存存文件上的的方
式。相对的处理。内存存
内对相同的以内存读
。
页存性（locality of reference的方时间
性 (temporal locality)方能。
时的内存时存的
页存内文件的的。存时内
调存子读。读读
页存存给。读
存。页存的操作的的相
效的。
Linux 页存小的。 I/O 操作将的内存页
存空的内存。页存实的空
内存新的存出页存的
页将空间给真的内存。处理自进的。
的存 Linux 的内存存能的。
的页存的
能将读的更（内上存
的 RAM 更的内存空间。 Linux 内实
理页存（以及存的式方。式方能
理页存的时。
存间的以 /proc/sys/vm/swappiness 调。文件
以 0  100 间 60。的示内存页存
的示更理页存进。
性（locality of reference的式空间性 (sequential
locality)的的性。原理内实页存
读。读读时读更的页存的
作读效。内读时读
。读的时以
– 63 –
 2 
文件 I/O
效。内以进程操作读时读。
的进程对的提新的读内以
 I/O 将读。
页存内理读的。进程
读的内读读进更的。读
小 16KB 128KB。内读何的
文件的读以
读。
页存的存对程的。程
以页存更处 (空间实
存。的效率的以页存。方
读。然文件 I/O 。
2.11.3 页回写
write() 的的内写操
作。进程写进将
” ” 的内存的上的新。时写以
。对同新的写更新新。文件
的写新的。
” ” 写将文件内存同步。
的写。以件写
• 空内存小设的时的写上理
的能内存空间。
• 的超设的时写。以
的性。
写 pdflush 的内程操作（能 page dirty flush 
。以上出时 pdflush 程
将的提件满。
能同时 pdflush 程写。更的性
。设备进写操作时的写
操作。自设备存 pdflush 程
设备。以内的处的 pdflush 
– 64 –
 2 
文件 I/O
程（bdflush单程能的时间设备
同时设备处空。上 Linux 内以
。
内 buffer head 示。
的的的。同时
实的。存页存。的方式将
子页存。
 Linux 内 2.4 子页存离
的同时页存存。以同时
存（作的页存（存存。自然的同步
存时间。 2.4 Linux 内的的页存
的进。
Linux 的写子以写操作
时出的。性以同步
I/O（。
2.12 结论
 Linux 程的文件 I/O。 Linux 
文件的操作何读写文件的。
操作的 Unix 方式及。
集处理 I/O以及 C 的 I/O 。 C 
出方空间的 I/O 提的性能提。
– 65 –
 3 
出
第 3 章
缓冲输入输出
我们的的文件的 I/O 
的 - 的操作进的。以小
对时 I/O 效率理的。
操作效率调的。读读
1024 读 1024 相然效率更。 bolck 的
即以的进的操作效率理
的。的小 1K, 以 1130 的操作 1024 的
。
3.1 用户－缓冲 I/O
对文件 I/O 的程 I/O。
 I/O 空间内的以程设
以调。的出性能方的内
写操作相 I/O 读操作。同的方
的提操作效率。
以空间程 dd 
dd bs=1 count=2097152 if=/dev/zero of=pirate
 bs=1, 进 2 097 152 操作 () 文件
/dev/zero(提的 0 文件的设备)  2M 文件 pirate 。
文件的程 2 的读写操作。
相同的 2M  1024 的:
dd bs=1024 count=2048 if=/dev/zero of=pirate
操作相同的 2M 内相同的文件 1024 读
写操作。 3  1 的效率提的。
小上的 dd 的时间（同的
。实时间的时时间时间空间程
的时间时间进程内调的时间。
– 66 –
 3 
出
 3-1. 小对性能的
Block size 
 Real time 
 User time 
System time
1 byte 
 18.707 seconds
1.118 seconds
 17.549 seconds
1,024 bytes 
 0.025 seconds
 0.002 seconds
 0.023 seconds
1,130 bytes
 0.035 seconds
 0.002 seconds
 0.027 second
 1024 小进操作 1 相的性能提
。示更的小（的调
小小的效率。即
更的调 1130 的对的操作 1024 的
效率更。
性能的理小。式的
小能 1024 1024 的或 1024 的。
/dev/zero 的小实上 4096B。
3.1.1 块大小
实小 512  1024  2048 或 4096 
。 3  1 示效率的提将操作的设
小或的。内件间的。
以小或能能的对
的以的内操作。
调 stat()(我们将) 或 stat(1) 以设备的
小。实上我们的小.
 I/O 操作小的 1130 
的。 Unix 的上 1130 的的小
操作 I/O 对。小的或以对的
。的小操作对, 效率。的
调。
然, 单的方小小的
I/O。 4096 或 8192 的效.
程以单进操作. 程以, , 单
单进操作的。, , 程
 I/O. 写时, 存程空间的。
– 67 –
 3 
出
给的（小时操作写
出。同理读操作读小对的。程对
的读时的给出。空时
的对的读。的小设将的效率
提。
以程实。实上实
的。然程 I/O  (C 的)以提
能的方。
3.1.2 标准 I/O
C 提 I/O  (单作 stdio)实
的方。 I/O 单能。程
 ( FORTAN) 同,  C 
对能提内然对 I/O 的内。 C 
的展们提能的处理、
、时间以及 I/O 。程 ANSI C 的
 (C89) C 。然 C95  C99 
新的 I/O  1989 的时相。
的 I/O。属文件出 C 
实、、读写文件 C 。程
 I/O 或自的调
设程的能。
C 给实的相实
扩展的性。的 Linux 上的
 glibc 实的。 Linux 离的时我
们以。
3.1.3 文件指针
 I/O 程操作文件。的们自的
即的文件 (file pointer)。 C 文件映射
文件。文件 FILE 的示 FILE  
。
– 68 –
 3 
出
 I/O , 的文件” ”(stream)。以读 (
), 写 (出), 或 (出)。
3.2 打开文件
文件 fopen() 以读写操作:
#include 
FILE* fopen(const char * path, const char * mode);
的式文件 path, 新的。
3.2.1 模式
式 mode 以的方式文件。以
:
r
文件读。文件的处。
r+
文件读写。文件的处。
w
文件写, 文件存, 文件空。文件存, 
。文件的处。
w+
文件读写。文件存, 文件空。文件存, 
。设文件的。
a
文件式的写。文件存。设文件
的。的写文件。
a+
文件式的读写。文件存。设文
件的。的写文件。
– 69 –
 3 
出
给的式能 b,  Linux 。操作
同的方式对文进文件,  b 式示文件进。
Linux, 的性的操作, 以相同的方式对文进文
件。
时,fopen() 的 FILE 。时,  NULL, 相
的设 errno。
, 的 /etc/manifest 以读, 将:
FILE *stream;
stream = fopen (”/etc/manifest”, ”r”);
if (!stream)
/* error */
3.2.2 通过文件描述符打开文件
 fdopen() 将的文件 (fd) :
#include 
FILE * fdopen (int fd, const char *mode);
fdopen() 的能式 fopen() , 原文件的式
。以式 w  w+, 们文件。的设文件
的文件。文件, 文
件上进 I/O（的。的文件
, 新的。相的文件。
时,fdoepn() 的文件; 时,  NULL。, 的
 open() 调 /home/kidd/map.txt, 然的文件
的:
FILE *stream;
int fd;
fd = open (”/home/kidd/map.txt”, O_RDONLY);
if (fd == −1)
/* error */
stream = fdopen (fd, ”r”);
– 70 –
 3 
出
if (!stream)
/* error */
3.3 关闭流
fclose() 给的
#include 
int fclose (FILE *stream);
写出的写出。时 fclose() 
0。时 EOF 相的设 errno。
3.3.1 关闭所有的流
fcloseall() 的进程相的
出
#define _GNU_SOURCE
#include 
int fcloseall (void);
的的写出。 0 Linux 
的。
3.4 从流中读取数据
C 实读的方。
的单的读单的读进读。读
以的方式何 w 或 a 的式以。
3.4.1 单字节读取
理的出式单读。 fgetc() 以
读单
#include 
– 71 –
 3 
出
int fgetc (FILE *stream);
读 int 。
的示文件:  EOF 。
fgetc() 的以 int 存。存 char 
的。的子读单然以方式
int c;
c = fgetc (stream);
if (c == EOF)
/* error */
else
printf (”c=%c\n”, (char) c);
stream 的以读式。
3.4.2 把字符回放入流中
出提将的。
的以。
#include 
int ungetc (int c, FILE *stream);
调 c 。时 c; 时
 EOF。读 c。们以的
方式的。 POSIX 出间读时
能。然实。的内存
Linux 的。然。
调 ungetc() 读
 (’ ’) 的调的。
进程的程实的的程。
3.4.3 按行的读取
 fgets() 给的读:
– 72 –
 3 
出
#include 
char * fgets (char *str, int size, FILE *stream);
读 size  1 的存 str 。
读时空存。读 EOF 或时读。
读’\n’ 存 str。
时 str时 NULL。
char buf[LINE_MAX];
if (!fgets (buf, LINE_MAX, stream))
/* error */
POSIX    LINE MAX POSIX 能
处理的的。 linux 的 C 提的 (以
), 能 LINE MAX 。程以 LINE MAX 
 linux 设的相对。对 linux 的程
小的。
3.4.4 读取任意字符串
fgets() 的读的。时。时
。时
。的
存的。
 fgetc() 写 fgets() 。的段读 n-1 
 str 然上’\0’
char *s;
int c;
s = str;
while (--n > 0 && (c = fgetc (stream)) != EOF)
*s++ = c;
*s = ’\0’;
– 73 –
 3 
出
段程以扩展的 d 处 ( d 能空
)
char *s;
int c = 0;
s = str;
while (--n > 0 && (c = fgetc (stream)) != EOF &&
(*s++ = c) != d)
;
if (c == d)
*--s = ’\0’;
else
*s = ’\0’;
存, 将 d 设’\n’ 以提 fgets() 的
能。
 fgets() 的实实方式能调
fgetc()。然我们的 dd 子同。然段出的
调进的调 dd 程 bs  1 的对 I/O 
, 相对更的。
3.4.5 读取二进制文件
程读。时读写的进
 C 的。出提 fread():
#include 
size_t fread (void *buf, size_t size, size_t nr,
FILE *stream);
调 fread() 读 nr  size 将
 buf 的。文件读出的。