### Micro-benchmarks for Text and Compressed Files

**Figure 7: Micro-benchmarks for text and compressed files.**

- **Text Files:**
  - **Read Performance (in seconds):**
    - MT-EINT: 70
    - RAND-EINT: 60
    - COMP-EINT: 50
  - **Write Performance (in seconds):**
    - MT-EINT: 70
    - RAND-EINT: 60
    - COMP-EINT: 50

- **Compressed Files:**
  - **Read Performance (in seconds):**
    - MT-EINT: 70
    - RAND-EINT: 60
    - COMP-EINT: 50
  - **Write Performance (in seconds):**
    - MT-EINT: 70
    - RAND-EINT: 60
    - COMP-EINT: 50

- **Operations Breakdown (in seconds):**
  - **Encryption:**
    - MT-EINT: 30
    - RAND-EINT: 20
    - COMP-EINT: 10
  - **SHA1/HMAC:**
    - MT-EINT: 20
    - RAND-EINT: 10
    - COMP-EINT: 0
  - **Randomness Check:**
    - MT-EINT: 10
    - RAND-EINT: 0
    - COMP-EINT: 0
  - **Tree Operations:**
    - MT-EINT: 10
    - RAND-EINT: 0
    - COMP-EINT: 0
  - **Update/Check Root:**
    - MT-EINT: 10
    - RAND-EINT: 0
    - COMP-EINT: 0
  - **Disk Wait Time:**
    - MT-EINT: 10
    - RAND-EINT: 0
    - COMP-EINT: 0
  - **Other:**
    - MT-EINT: 10
    - RAND-EINT: 0
    - COMP-EINT: 0

### Results for Low-Entropy Files

For sets of files with a low percentage of random-looking blocks (text, object, and executable files), RAND-EINT outperforms MT-EINT in all metrics. Specifically:
- **Writes:** RAND-EINT shows a 31.77% improvement over MT-EINT.
- **Reads:** RAND-EINT shows a 20.63% improvement over MT-EINT.

The performance of COMP-EINT differs significantly between write and read operations due to the cost difference of compression and decompression:
- **Writes:** COMP-EINT's write time is within 4% of MT-EINT's.
- **Reads:** COMP-EINT outperforms MT-EINT by 25.27%.

- **Integrity Bandwidth:**
  - RAND-EINT: 92.93 times lower than MT-EINT.
  - COMP-EINT: 58.25 times lower than MT-EINT.

- **Untrusted Storage for Integrity:**
  - RAND-EINT: Reduced by 2.3 times compared to MT-EINT.
  - COMP-EINT: Reduced by 1.17 times compared to MT-EINT.

### Results for High-Entropy Files

For sets of files with a high percentage of random-looking blocks (image and compressed files), the performance overheads are as follows:
- **Writes:**
  - RAND-EINT: Maximum overhead of 4.43% for a 1KB cache.
  - COMP-EINT: Overhead of 38.39% compared to MT-EINT.

- **Reads:**
  - RAND-EINT: Overhead of 18.15%.
  - COMP-EINT: Performs within 1% of MT-EINT.

- **Average Integrity Bandwidth:**
  - RAND-EINT: 30.15% lower than MT-EINT.
  - COMP-EINT: 10.22% lower than MT-EINT.

- **Untrusted Storage for Integrity:**
  - RAND-EINT: Improved by 9.52% compared to MT-EINT.
  - COMP-EINT: Within 1% of the storage used by MT-EINT.

The average integrity bandwidth and untrusted storage for integrity are still reduced in RAND-EINT compared to MT-EINT because only about 70% of the blocks have high entropy. For files with 100% high-entropy blocks, these metrics would exhibit a small overhead, but such workloads are very unlikely in practice.

### The Impact of File Access Patterns on Integrity Performance

#### File Traces

We considered a subset of three NFS Harvard traces (LAIR, DEASNA, and HOME02), each collected during one day. The characteristics of each trace are shown in Table 3.

| Trace     | Number of Files | Number of Writes | Number of Reads |
|-----------|-----------------|------------------|-----------------|
| LAIR      | 7017            | 66331            | 23281           |
| DEASNA    | 890             | 64091            | 521             |
| HOME02    | 183             | 89425            | 11815           |

#### Experiments

We replayed each of the three traces with three types of block contents: all low-entropy, all high-entropy, and 50% high-entropy. We measured the total running time, the average integrity bandwidth, and the total untrusted storage for integrity for RAND-EINT and COMP-EINT relative to MT-EINT. The results are plotted in Figure 10.

- **Performance Improvements:**
  - For low-entropy blocks, the improvements for RAND-EINT and COMP-EINT compared to MT-EINT are as high as 56.21% and 56.85%, respectively, for the HOME02 trace.
  - For high-entropy blocks, the maximum performance overheads are 54.14% for RAND-EINT (in the LAIR trace) and 61.48% for COMP-EINT (in the DEASNA trace).

- **Behavior Based on Read-to-Write Ratio:**
  - RAND-EINT performs better than COMP-EINT when the ratio of read to write operations is small, as in the DEASNA and HOME02 traces.
  - As this ratio increases, COMP-EINT outperforms RAND-EINT.

- **Integrity Bandwidth and Untrusted Storage:**
  - For low-entropy files, both the average integrity bandwidth and the untrusted storage for integrity for both RAND-EINT and COMP-EINT are greatly reduced compared to MT-EINT.
  - For example, in the DEASNA trace, MT-EINT requires 215 bytes on average to update or check the integrity of a block, whereas RAND-EINT and COMP-EINT require only 0.4 bytes on average.