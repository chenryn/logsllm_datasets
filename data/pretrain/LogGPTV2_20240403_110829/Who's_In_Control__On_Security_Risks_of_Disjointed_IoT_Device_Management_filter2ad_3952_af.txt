coordinate, but even those from the same manufacturer are not well
synchronized for security policies. We further found that HomeKit
internally has two channels, a local channel to directly connect an
iPhone (with the Home app) to the IoT device and a cloud-based
channel where commands from the Home app go through HomeKit
cloud to reach IoT devices. When the two channels have conflicting
security policies, there is no proper protocol to resolve the issue,
leading to a privilege escalation attack (see Flaw 6 in Appendix C).
Clean slate design. To fundamentally address the Codema risk,
we envision a clean-slate design with a cross-DMC management
standard that allows different DMCs to work together for consis-
tent, fine-grained device control. We propose two principles for
designing and implementing such a standard:
• Multi-layered and coordinated authorization. A fundamental cause
of Codema is the design of today’s DMCs, which work indepen-
dently and have the same control rights on a device. The problem
can be solved by multi-level security, with some DMCs (such as m-
DMC) given a higher privilege than others. Such a DMC can help co-
ordinate policy configurations from different channels and resolve
conflicts to provide coherent, comprehensive protection, under the
command of the authorized party (typically the device owner).
• Standardized middleware and interfaces. The heterogeneity of
DMCs in terms of their architectures (e.g., with or without cloud)
Session 5A: Control System SecurityCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1300and the technical stacks (e.g., HAP, Zigbee, Z-Wave) has made it
difficult to configure and enforce security policies across DMCs.
Therefore it is imperative to design standardized middleware to
make different DMCs compatible and interoperable. Equally impor-
tant is to define standardized software interfaces and protocols to
be followed by DMC developers, which allow different DMCs to
exchange user information, access control policy, etc.
Other mitigation strategies observed. After we reported Codema
vulnerabilities to affected vendors, some of them have deployed
mitigation. Without a systematic approach like CGuard, their miti-
gation appears to be ad-doc, less usable and secure. For example,
after meeting with us, August closes all third-party DMCs by default
and device owners must configure/use the m-DMC (August app) to
enable/close third-party DMCs. In addition, when the owner uses
the August app to remove other/guest users, a popup warning is
shown to communicate the Codema risks: "The removed user may
still have access via HomeKit". Compared to CGuard, (1) it
does not satisfy the U-Goal since it forces the owner to use m-DMC
first (see Section 5.1); (2) its cross-DMC control (enabling/disabling
HomeKit) is only available on August’s iOS app (subject to Codema
Flaw 3). As another example, the m-DMC of MiHome lamp will
be automatically closed once the user fully configures the lamp
with HomeKit DMC, which only partially exercises the fail-safe
default principle (see Section 5.2 ). The problem is, if the owner opts
for the m-DMC, the HomeKit DMC is still left open silently and
can be bound and controlled by the adversary. Moreover, after our
Codema report, LIFX has enhanced their protection by updating
the LIFX iOS app to force its users to take control of both HomeKit
and LIFX’s m-DMC during the setup, which would protect those
running the LIFX iOS app. However, the iOS users who choose to
use the Apple Home app and all Android users are still at risk.
Codema discovery at scale. Our current approach to detect Codema
flaws (Section 3) has limitations in identifying the dependency rela-
tions between the state transitions of two DMCs since we relied on
manual efforts to set up individual DMCs and confirm whether fully
configuring a DMC relies on any operation/approval in another
DMC (e.g., configuring HomeKit DMC in the Abode Alarm Hub
requires a setup code generated in the m-DMC’s app, see Figure 6).
Fully automating the step can be challenging since configuring a
DMC often requires manual steps such as scanning a setup code
or device-specific physical operations. To further scale our work
and enable a large-scale assessment of Codema flaws involving
more devices, an improved approach can be built on our current
model-guided approach by automating the model building process.
In particular, we may extract the model of each DMC on a device by
exploring semantic based UI analysis of the DMC mobile apps, in
particular identifying whether the setup process of a DMC involves
a step in another DMC.
7 RELATED WORK
IoT platform security. Many efforts have been made to analyze
the security problems of the IoT platforms, such as [51, 54–59,
65, 68, 70, 71]. [51] provided a methodology to analyze security
properties for home-based IoT devices from the perspectives of
attack techniques, mitigations, and stakeholders. [54, 55, 57, 58,
65, 68, 70] presented methods to detect inter-rule vulnerabilities,
mishaving devices, malicious apps and security policy violations.
[71] and [56] found problematic device management of IoT clouds
based on state machine model of a single device. [69] studied the
IoT cross-cloud delegation process (the cross-cloud delegation goes
from the manufacturer-DMC’s backend server to another cloud). In
contrast, our work attempts to understand and reveal the security
risks of co-exiting of multiple DMCs in the same device instead of
identifying the flaws in a single DMC or platform.
IoT access control. Access control on today’s IoT ecosystem is
not only distributed but also heterogeneous and ad-hoc. To cope
with the new challenges arising in today’s IoT access +control,
[53] presented WAVE, which fulfills the requirements of today’s
complicated IoT delegation by offering fully decentralized trust,
which supports decentralized verification, transitive delegation and
revocation. [60] also introduced Decentralized Action Integrity to
prevent an untrusted IoT platform from misusing OAuth tokens.
[67] presented a user-centered authorization mechanism to protect
users from overprivileged apps in Samsung SmartThings, while [63]
proposed a fine-grained context-based access control system for
Samsung SmartThings. [66] presented “environmental situational
oracles”, which encapsulate the implementation of how a situation
is sensed, inferred or actuated, to avoid over-privilege, redundancy,
inconsistency, and inflexibility in today’s IoT situational access
control. By contrast, we attempt to fix the access control problem
caused by Codema, which is new and unexplored, by developing
CGuard, a new technique that can be unilaterally implemented by
the device manufacturer to fully mediate third-party DMCs without
any change to their designs.
8 CONCLUSION
This paper reports the first systematic study on the security risks
introduced by the presence of multiple DMCs on IoT devices. Lack
of coordination across these DMCs exposes a new attack surface,
allowing the unauthorized party to circumvent the protection en-
forced by one channel through another channel. Our study shows
that this security weakness is pervasive and fundamental. Our
user study and measurement analysis further demonstrate that the
security risk is realistic and significant. To mitigate the risk, we
introduced a new access control framework that enables the IoT
manufacturer to uni-laterally control third-party channels’ acces-
sibility status. Our evaluation provides further evidence for the
effectiveness, usability, and feasibility of the design.
ACKNOWLEDGMENTS
We would like to thank our shepherd Prof. Z. Berkay Celik and
the anonymous reviewers for their insightful comments. Special
thanks to Haoran Lu’s discussion and Yiyu Yang’s help for test-
ing. Yan Jia is funded by China Postdoctoral Science Foundation
(No. 2021M691673) and in part by China Scholarship Council. The
authors of Huazhong University of Science and Technology are
supported by the National Natural Science Foundation of China
(No. 61902138). Yuqing Zhang is supported by the National Natu-
ral Science Foundation of China(U1836210), and the Key Research
and Development Science and Technology of Hainan Province
(ZDYF202012). IU authors are supported in part by NSF CCF-2124225
and Indiana University FRSP-SF and REF.
Session 5A: Control System SecurityCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1301REFERENCES
[1] 2016. BLE Bonding.
[2] 2017. The best smart home devices for your rental property. https://cozy.co/bl
og/the-best-smart-home-devices-for-your-rental-property/.
[3] 2019. https://www.airbnb.com/partner.
[4] 2019. https://smartrent.com/product/access-control/.
[5] 2019. Local Technologies for the Smart Home (Google I/O’19). https://www.yo
utube.com/watch?v=Y6Ue5hQ9meM&t=2044s
[6] 2020. abode: the top-rated smart home security system in USA. https://goabode.
com.
ips.lighting.hue2.
com.signify.hue.blue.
/046677458478.
e26/046677555689.
[7] 2020. Abode’s HomeKit certification. https://help.goabode.com/hc/en-us/article
s/360038823531-Homekit-FAQ.
[8] 2020. Amazon Alexa. https://developer.amazon.com/en-US/alexa.
[9] 2020. Apple Bonjour. https://developer.apple.com/bonjour.
[10] 2020. Apple Home app. https://support.apple.com/en-us/HT204893.
[11] 2020. Apple HomeKit. https://www.apple.com/ios/home/.
[12] 2020. August Smart Lock. https://august.com.
[13] 2020. AWS IoT device SDK - embedded C. https://github.com/aws/aws-iot-
[14] 2020. Bluetooth Low Energy. https://en.wikipedia.org/wiki/Bluetooth_Low_En
device-sdk-embedded-C.
ergy.
[15] 2020. Channel Guard Github. https://github.com/ChannelGuard/CGuard.
[16] 2020. Frida. https://frida.re.
[17] 2020. Google Home. https://store.google.com/us/product/google_home.
[18] 2020. Google Home mini. https://store.google.com/product/google_nest_mini?
gclid=CjwKCAjw-YT1BRAFEiwAd2WRtn7q4mSlQ-S-OBd_0kjZBbP6jnN5Ivr
rDWKKenIT4CPjHCqannddwhoChZUQAvD_BwE&gclsrc=aw.ds.
[19] 2020. HomeKit Accessory Protocol Specification. https://developer.apple.com/
support/homekit-accessory-protocol.
[20] 2020. HomeKit ADK. https://github.com/apple/HomeKitADK.
[21] 2020. Hue works with the Google Assistant for easy voice control.
//www2.meethue.com/en-us/works-with/google-home-products.
[22] 2020. Human Interface Guidelines - Setup. https://developer.apple.com/design
https:
/human-interface-guidelines/homekit/overview/setup/.
[23] 2020. ismartgate Garage/Gate Controller. https://ismartgate.com.
[24] 2020. LIFX. https://www.lifx.com.
[25] 2020. MFi Program. https://developer.apple.com/programs/mfi.
[26] 2020. Most Advanced Smart Locks in Amazon: August Lock. https://www.amaz
on.com/s?k=smart+lock&ref=nb_sb_noss_2.
[27] 2020. Philips Hue app. https://play.google.com/store/apps/details?id=com.phil
[28] 2020. Philips Hue Bluetooth app. https://play.google.com/store/apps/details?id=
[29] 2020. Philips Hue bridge.
https://www2.meethue.com/en-us/p/hue-bridge
[30] 2020. Philips Hue Bulb. https://www2.meethue.com/en-us/p/hue-white-1-pack-
[31] 2020. Philips Hue bulb ranks # 4 in Best Seller in LED Bulbs and # 1 in Smart
Bulbs on Amazon. https://www.amazon.com/gp/bestsellers/hpc/2314207011/re
f=pd_zg_hrsr_hpc.
[32] 2020. Philips Hue Smart Plug. https://www2.meethue.com/en-us/p/hue-smart-
[33] 2020. Set up HomeKit accessory devices. https://support.apple.com/en-us/H
plug/046677552343.
T204893.
[34] 2020. Smart Home Gadgets: 6 Additions That Will Revolutionize Your Vacation
Rental. https://www.lodgify.com/blog/smart-home-gadgets-vacation-rental.
[35] 2020.
updateAuthorizationData:completionHandler.
https://deve
loper.apple.com/documentation/homekit/hmcharacteristic/1624193-
updateauthorizationdata?language=objc.
[36] 2020.
Yale iM1 (HomeKit) Network Module and Secure App FAQs.
https://www.yalehome.com/en/support/yale-im1-homekit-network-module-
secure-app-faqs.
[37] 2020. Z-Wave Alliance. https://z-wavealliance.org.
[38] 2020. Zigbee ADK. https://www.ti.com/tool/Z-STACK.
[39] 2020. Zigbee Alliance. https://zigbeealliance.org.
[40] 2020. Zigbee Protocol. https://en.wikipedia.org/wiki/Zigbee.
[41] 2021. Alexa Gadgets Raspberry Pi Samples. https://github.com/alexa-samples/
Alexa-Gadgets-Raspberry-Pi-Samples.
[42] 2021. Control your home remotely with iPhone. https://support.apple.com/guid
e/iphone/control-your-home-remotely-iph1d10f7f2b/ios.
[43] 2021. MQTT: The Standard for IoT Messaging. https://mqtt.org/
[44] 2021. OAuth. https://oauth.net/2
[45] 2021. Philips Hue. https://www2.meethue.com.
[46] 2021. Set up and control Seamless setup smart devices. https://support.google.c
om/googlenest/answer/9367121?hl=en
[47] 2021.
https://docs.espressif.com/projects/esp-
idf/en/latest/esp32/api-reference/network/esp_smartconfig.html#:~:text=The
SmartConfig.
%20SmartConfig%20TM%20is%20a%20provisioning%20technology%20develop
ed,or%20a%20tablet%2C%20to%20an%20un-provisioned%20Wi-Fi%20device.
[48] 2021. SmartThings App. https://play.google.com/store/apps/details?id=com.sa
msung.android.oneconnect
[49] 2021. Who’s In Control? On Security Risks of Disjointed IoT DeviceManagement
Channels. https://sites.google.com/view/cguard.
[50] 2021. Z-Wave Protocol. https://en.wikipedia.org/wiki/Z-Wave.
[51] Omar Alrawi, Chaz Lever, Manos Antonakakis, and Fabian Monrose. 2019. SoK:
Security Evaluation of Home-Based IoT Deployments. In Proceedings of 2019
IEEE Symposium on Security and Privacy. 1362–1380.
[52] Safwa Ameer, James Benson, and Ravi Sandhu. 2020. The EGRBAC Model for
Smart Home IoT. In 2020 IEEE 21st International Conference on Information
Reuse and Integration for Data Science (IRI). IEEE, 457–462.
[53] Michael P. Andersen, Sam Kumar, Moustafa AbdelBaky, Gabe Fierro, John Kolb,
Hyung-Sin Kim, David E. Culler, and Raluca Ada Popa. 2019. WAVE: A Decen-
tralized Authorization Framework with Transitive Delegation. In 28th USENIX
Security Symposium. 1375–1392.
[54] Z. Berkay Celik, Patrick D. McDaniel, and Gang Tan. 2018. Soteria: Automated IoT
Safety and Security Analysis. In Procedings of 2018 USENIX Annual Technical
Conference. 147–158.
[55] Z. Berkay Celik, Gang Tan, and Patrick D. McDaniel. 2019. IoTGuard: Dynamic
Enforcement of Security and Safety Policy in Commodity IoT. In Proceedings of
the 26th Annual Network and Distributed System Security Symposium.
[56] Jiongyi Chen, Chaoshun Zuo, Wenrui Diao, Shuaike Dong, Qingchuan Zhao,
Menghan Sun, Zhiqiang Lin, Yinqian Zhang, and Kehuan Zhang. 2019. Your
IoTs Are (Not) Mine: On the Remote Binding Between IoT Devices and Users.
In 49th Annual IEEE/IFIP International Conference on Dependable Systems and
Networks. 222–233.
[57] Jiwon Choi, Hayoung Jeoung, Jihun Kim, Youngjoo Ko, Wonup Jung, Hanjun
Kim, and Jong Kim. 2018. Detecting and Identifying Faulty IoT Devices in Smart
Home with Context Extraction. In Proceedings of the 48th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks. 610–621.
[58] Wenbo Ding and Hongxin Hu. 2018. On the Safety of IoT Device Physical
Interaction Control. In Proceedings of the 2018 ACM SIGSAC Conference on
Computer and Communications Security. 832–846.
[59] Earlence Fernandes, Jaeyeon Jung, and Atul Prakash. 2016. Security Analysis of
Emerging Smart Home Applications. In 37th IEEE Symposium on Security and
Privacy. 636–654.
[60] Earlence Fernandes, Amir Rahmati, Jaeyeon Jung, and Atul Prakash. 2018. De-
centralized action integrity for trigger-action IoT platforms. In Proceedings of
2018 Network and Distributed System Security Symposium.
[61] Weijia He, Maximilian Golla, Roshni Padhi, Jordan Ofek, Markus Dürmuth, Ear-
lence Fernandes, and Blase Ur. 2018. Rethinking access control and authentication