    -- Automatic GPU detection failed. Building for common architectures.
    -- Autodetected CUDA architecture(s): 3.0;3.5;5.0;5.2;6.0;6.1;7.0;7.0+PTX
    -- Added CUDA NVCC flags for: -gencode;arch=compute_30,code=sm_30;-gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_70,code=compute_70
    -- Could NOT find CUB (missing: CUB_INCLUDE_DIR) 
    -- 
    -- ******** Summary ********
    --   CMake version         : 3.13.0
    --   CMake command         : /anaconda3/lib/python3.6/site-packages/cmake/data/CMake.app/Contents/bin/cmake
    --   System                : Darwin
    --   C++ compiler          : /Library/Developer/CommandLineTools/usr/bin/clang++
    --   C++ compiler version  : 9.1.0.9020039
    --   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -Wno-deprecated-declarations
    --   Build type            : Release
    --   Compile definitions   : 
    --   CMAKE_PREFIX_PATH     : /anaconda3/lib/python3.6/site-packages
    --   CMAKE_INSTALL_PREFIX  : /Users/carlos/Downloads/pytorch/torch/lib/tmp_install
    --   CMAKE_MODULE_PATH     : /Users/carlos/Downloads/pytorch/cmake/Modules;/Users/carlos/Downloads/pytorch/cmake/public/../Modules_CUDA_fix
    -- 
    --   ONNX version          : 1.3.0
    --   ONNX NAMESPACE        : onnx_torch
    --   ONNX_BUILD_TESTS      : OFF
    --   ONNX_BUILD_BENCHMARKS : OFF
    --   ONNX_USE_LITE_PROTO   : OFF
    --   ONNXIFI_DUMMY_BACKEND : OFF
    -- 
    --   Protobuf compiler     : 
    --   Protobuf includes     : 
    --   Protobuf libraries    : 
    --   BUILD_ONNX_PYTHON     : OFF
    -- Found CUDA with FP16 support, compiling with torch.cuda.HalfTensor
    -- Removing -DNDEBUG from compile flags
    -- MAGMA not found. Compiling without MAGMA support
    -- Could not find hardware support for NEON on this machine.
    -- No OMAP3 processor on this machine.
    -- No OMAP4 processor on this machine.
    -- AVX compiler support found
    -- AVX2 compiler support found
    -- Atomics: using GCC intrinsics
    -- Found a library with LAPACK API. (accelerate)
    -- Found CUDA: /usr/local/cuda (found suitable version "10.0", minimum required is "5.5") 
    disabling ROCM because NOT USE_ROCM is set
    -- MIOpen not found. Compiling without MIOpen support
    CMake Deprecation Warning at third_party/ideep/mkl-dnn/CMakeLists.txt:21 (cmake_policy):
      The OLD behavior for policy CMP0048 will be removed from a future version
      of CMake.
      The cmake-policies(7) manual explains that the OLD behaviors of all
      policies are deprecated and that a policy should be set to OLD only under
      specific short-term circumstances.  Projects should be ported to the NEW
      behavior and not rely on setting a policy to OLD.
    CMake Deprecation Warning at third_party/ideep/mkl-dnn/CMakeLists.txt:22 (cmake_policy):
      The OLD behavior for policy CMP0054 will be removed from a future version
      of CMake.
      The cmake-policies(7) manual explains that the OLD behaviors of all
      policies are deprecated and that a policy should be set to OLD only under
      specific short-term circumstances.  Projects should be ported to the NEW
      behavior and not rely on setting a policy to OLD.
    -- Detecting Intel(R) MKL: trying mklml_intel
    -- Intel(R) MKL: include /Users/carlos/Downloads/pytorch/third_party/ideep/mkl-dnn/external/mklml_mac_2018.0.3.20180406/include
    -- Intel(R) MKL: lib /Users/carlos/Downloads/pytorch/third_party/ideep/mkl-dnn/external/mklml_mac_2018.0.3.20180406/lib/libmklml.dylib
    -- Intel(R) MKL: OpenMP lib /Users/carlos/Downloads/pytorch/third_party/ideep/mkl-dnn/external/mklml_mac_2018.0.3.20180406/lib/libiomp5.dylib
    -- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
    -- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
    -- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
    -- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) 
    -- VTune profiling environment is unset
    CMake Warning (dev) at cmake/public/mkldnn.cmake:1 (find_package):
      Policy CMP0074 is not set: find_package uses _ROOT variables.
      Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
      command to set the policy and suppress this warning.
      CMake variable MKLDNN_ROOT is set to:
        /Users/carlos/Downloads/pytorch/third_party/ideep/mkl-dnn
      For compatibility, CMake is ignoring the variable.
    Call Stack (most recent call first):
      cmake/Dependencies.cmake:1308 (INCLUDE)
      CMakeLists.txt:201 (include)
    This warning is for project developers.  Use -Wno-dev to suppress it.
    -- Using python found in /anaconda3/bin/python
    -- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
    -- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
    -- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
    -- Configuring build for SLEEF-v3.2
       Target system: Darwin-18.2.0
       Target processor: x86_64
       Host system: Darwin-18.2.0
       Host processor: x86_64
       Detected C compiler: AppleClang @ /Library/Developer/CommandLineTools/usr/bin/clang
    -- Using option `-Wall -Wno-unused -Wno-attributes -Wno-unused-result -ffp-contract=off -fno-math-errno -fno-trapping-math` to compile libsleef
    -- Building shared libs : OFF
    -- MPFR : /usr/local/lib/libmpfr.dylib
    -- MPFR header file in /usr/local/include
    -- GMP : /usr/local/lib/libgmp.dylib
    -- RUNNING_ON_TRAVIS : 0
    -- COMPILER_SUPPORTS_OPENMP : 
    -- Using python found in /anaconda3/bin/python
    -- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
    -- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
    -- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
    -- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS) 
    -- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS) 
    -- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND) 
    -- Found CUDA: /usr/local/cuda (found suitable version "10.0", minimum required is "7.5") 
    -- NCCL operators skipped due to no CUDA support
    -- Including IDEEP operators
    -- Excluding image processing operators due to no opencv
    -- Excluding video processing operators due to no opencv
    -- MPI operators skipped due to no MPI support
    -- Include Observer library
    -- Using lib/python3.6/site-packages as python relative installation path
    -- Automatically generating missing __init__.py files.
    -- A previous caffe2 cmake run already created the __init__.py files.
    CMake Warning at CMakeLists.txt:389 (message):
      Generated cmake files are only fully tested if one builds with system glog,
      gflags, and protobuf.  Other settings may generate files that are not well
      tested.
    -- 
    -- ******** Summary ********
    -- General:
    --   CMake version         : 3.13.0
    --   CMake command         : /anaconda3/lib/python3.6/site-packages/cmake/data/CMake.app/Contents/bin/cmake
    --   System                : Darwin
    --   C++ compiler          : /Library/Developer/CommandLineTools/usr/bin/clang++
    --   C++ compiler version  : 9.1.0.9020039
    --   BLAS                  : MKL
    --   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -Wno-deprecated-declarations -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-typedef-redefinition -Wno-unknown-warning-option -Wno-unused-private-field -Wno-inconsistent-missing-override -Wno-aligned-allocation-unavailable -Wno-c++14-extensions -Wno-constexpr-not-const -Wno-missing-braces -Qunused-arguments -faligned-new -Wno-unused-private-field -Wno-missing-braces -Wno-c++14-extensions -Wno-constexpr-not-const
    --   Build type            : Release
    --   Compile definitions   : ONNX_NAMESPACE=onnx_torch;USE_GCC_ATOMICS=1;HAVE_MMAP=1;_FILE_OFFSET_BITS=64;HAVE_SHM_OPEN=1;HAVE_SHM_UNLINK=1