title:Disclosure: detecting botnet command and control servers through large-scale
NetFlow analysis
author:Leyla Bilge and
Davide Balzarotti and
William K. Robertson and
Engin Kirda and
Christopher Kruegel
DISCLOSURE: Detecting Botnet Command and Control
Servers Through Large-Scale NetFlow Analysis
Leyla Bilge
Symantec Research Labs
PI:EMAIL
Davide Balzarotti
Eurecom
PI:EMAIL
William Robertson
Northeastern University
PI:EMAIL
Engin Kirda
Northeastern University
PI:EMAIL
ABSTRACT
Botnets continue to be a significant problem on the Internet.
Accordingly, a great deal of research has focused on methods
for detecting and mitigating the effects of botnets. Two of the
primary factors preventing the development of effective large-scale,
wide-area botnet detection systems are seemingly contradictory.
On the one hand, technical and administrative restrictions result
in a general unavailability of raw network data that would facil-
itate botnet detection on a large scale. On the other hand, were
this data available, real-time processing at that scale would be a
formidable challenge. In contrast to raw network data, NetFlow
data is widely available. However, NetFlow data imposes several
challenges for performing accurate botnet detection.
In this paper, we present Disclosure, a large-scale, wide-area
botnet detection system that incorporates a combination of novel
techniques to overcome the challenges imposed by the use of
NetFlow data. In particular, we identify several groups of features
that allow Disclosure to reliably distinguish C&C channels from
benign traffic using NetFlow records (i.e., flow sizes, client access
patterns, and temporal behavior). To reduce Disclosure’s false
positive rate, we incorporate a number of external reputation
scores into our system’s detection procedure. Finally, we provide
an extensive evaluation of Disclosure over two large, real-world
networks. Our evaluation demonstrates that Disclosure is able
to perform real-time detection of botnet C&C channels over
datasets on the order of billions of flows per day.
1.
INTRODUCTION
Malware continues to run rampant across the Internet, and
among the myriad forms that modern malware can assume, bot-
nets represent one of the gravest threats to Internet security.
Through the large-scale compromise of vulnerable end hosts,
botmasters can both violate the confidentiality of sensitive user
information—for instance, banking or social network authen-
tication credentials—as well as leverage groups of bots as an
underground computational platform for performing other illicit
activities.
Accordingly, a great deal of research has focused on methods
for detecting and mitigating the deleterious effects of botnets.
Research to date has largely followed one of two major approaches:
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’12 Dec. 3-7, 2012, Orlando, Florida USA
Copyright 2012 ACM 978-1-4503-1312-4/12/12 ...$15.00.
129
Christopher Kruegel
UC Santa Barbara
PI:EMAIL
(i) vertical correlation, or detecting command and control (C&C)
channels used by botmasters to communicate with each infected
machine [17,19,21,29]; and (ii) horizontal correlation, where botnet
detection is based upon patterns of crowd behavior exhibited by
collections of bots in response to botmaster commands [6,16,18,32,
35]. Once bots or, ideally, C&C servers have been identified, a num-
ber of actions can be performed, ranging from removal of infected
endpoints from the network, to filtering C&C channels at edge
routers, to orchestrated take-downs of the C&C servers themselves.
Unfortunately, while previous botnet detection approaches are
effective under certain circumstances, none of these approaches
scales beyond a single administrative domain while retaining
useful detection accuracy. This limitation restricts the application
of automated botnet detection systems to those entities that are
informed or motivated enough to deploy them. Thus, we have
the current state of botnet mitigation, where small pockets of
the Internet are fairly well protected against infection while the
majority of endpoints remain vulnerable.
This situation is not ideal. Botnets are an Internet-wide prob-
lem that spans individual administrative domains and, therefore,
a problem that requires an Internet-scale solution. In particular,
botnets can continue to wreak havoc upon the Internet despite
the deployment of localized detection systems by focusing on
propagation through less well-protected populations.
Two of the primary factors preventing the development of effec-
tive large-scale, wide-area botnet detection systems are seemingly
contradictory. On the one hand, technical and administrative
restrictions result in a general unavailability of raw network data
that would facilitate botnet detection on a large scale. On the
other hand, were this data available, real-time processing at that
scale would be a formidable challenge. While the ideal data source
for large-scale botnet detection does not currently exist, there
is, however, an alternative data source that is widely available
today: NetFlow data [10].
NetFlow data is often captured by large ISPs using a distributed
set of collectors for auditing and performance monitoring across
backbone networks. While it is otherwise extremely attractive,
NetFlow data imposes several challenges for performing accurate
botnet detection. First, and perhaps most critically, NetFlow
records do not include packet payloads; rather, flow records are
limited to aggregate metadata concerning a network flow such
as the flow duration and number of bytes transferred. Second,
NetFlow records are half-duplex; that is, they only record one
direction of a network connection. Third, NetFlow data is of-
ten collected by sampling the monitored network, often at rates
several orders of magnitude or more removed from real traffic.
Each of these characteristics of NetFlow data complicates the
development of an effective botnet detector over this domain. The
detector must be able to distinguish between benign and malicious
network traffic without access to network payloads, which is the
component of network data that carries direct evidence of mali-
cious behavior. The detector must also be able to recognize weak
signals indicating the presence of a botnet due to the combined
effects of half-duplex capture and aggressive sampling.
In this paper, we present Disclosure, a large-scale, wide-area
botnet detection system that incorporates a combination of novel
techniques to overcome the challenges imposed by the use of
NetFlow data. In particular, we identify several groups of features
that allow Disclosure to reliably distinguish C&C channels from
benign traffic using NetFlow records: (i) flow sizes, (ii) client
access patterns, and (iii) temporal behavior. We demonstrate that
these features are not only effective in detecting current C&C
channels, but that these features are relatively robust against
expected countermeasures future botnets might deploy against
our system. Furthermore, these features are oblivious to the
specific structure of known botnet C&C protocols.
While the aforementioned features are sufficient to capture core
characteristics of generic C&C traffic, they also generate false
positives in isolation. To reduce Disclosure’s false positive rate,
we incorporate a number of external reputation scores into our
system’s detection procedure. These additional signals function
as a filter that reduces Disclosure’s false positive rate to a level
where the system can feasibly be deployed on large-scale networks.
We provide an extensive evaluation of Disclosure over two
real-world networks: a university network spanning a small country
where no NetFlow sampling occurred, and a Tier 1 ISP where Net-
Flow data was sampled at a rate of one out of every ten thousand
flows. Our evaluation demonstrates that Disclosure is able to
perform real-time detection of botnet C&C channels over data sets
on the order of billions of flows per day. In particular, we show that
Disclosure is able to recognize approximately 65% of known bot-
net C&C servers in both settings while producing 1% false positives.
Furthermore, we demonstrate Disclosure’s ability to detect previ-
ously unknown C&C servers by manually verifying 20 and 91 true
positive alerts from the university and ISP networks, respectively.
Finally, we report on our operational experience in deploying
and testing Disclosure on real large-scale networks, highlighting
the most critical areas for tuning the performance of the detection
system. The contributions of the paper is as follows:
• We present Disclosure, a large-scale, wide-area botnet de-
tection system that reliably detects botnet C&C channels in
readily-available NetFlow data using a set of robust statistical
features. To our knowledge, Disclosure is the only NetFlow-
based system that does not assume a priori knowledge of
particular C&C protocols.
• We incorporate several external reputation systems into Dis-
closure’s detection procedure to further refine the accuracy
of the system.
• We evaluate Disclosure over two real-world networks, and
demonstrate its ability to detect both known and unknown
botnet C&C servers at scales not previously achieved.
• We report on our operational experience with Disclosure,
and highlight important tuning considerations for deployment
and reproducibility.
2. SYSTEM OVERVIEW
Disclosure is a botnet detection system designed to identify
C&C servers by employing NetFlow analysis. Figure 1 shows
an overview of the system architecture. The upper half of the
figure describes the detection model generation process, where
a supervised machine learning algorithm is used to train models
on a subset of NetFlows targeting known (i.e., labeled) benign
and C&C servers.
The flows in this labeled data set are first processed by the
feature extraction module. This module reduces the flows to a
number of distinct features: flow size-based features, client access
pattern-based features, and temporal features, which are described
in detail in Section 3. The features extracted from the training
set are then forwarded to Disclosure’s learning module, which
is responsible for building detection models. The learning module
can be tuned with several thresholds to obtain an optimal balance
between detection and false positive rates.
The bottom half of the graph represents the detection phase,
where the models that have been previously generated are applied
to unlabeled NetFlows in order to distinguish benign traffic from
C&C communication. Since the aim of Disclosure is not to
identify bot-infected machines but to detect C&C servers, the first
task of the detection phase is to filter those NetFlows that cannot
be attributed to a server; this process is explained in Section 5.4.
Then, the flows are forwarded to the feature extraction module.
Finally, the resulting feature vectors are processed by the detection
module to produce the final list of suspected C&C servers.
Note that the results of Disclosure can be further processed
by a false positive reduction filter. The goal of this additional
module is to correlate the results of Disclosure with the infor-
mation obtained from other security feeds in order to reduce the
probability of misclassification. For example, in Section 4, we
present a novel technique that associates a reputation score to
the autonomous systems to which the C&C servers belong.
3. FEATURE SELECTION AND CLASSIFI-
CATION
In this section, we present the features extracted by Disclo-
sure from NetFlow data in order to detect botnet C&C channels
at scale, and discuss why these features are suitable for discrim-
inating between C&C channels and benign traffic. We then
describe the particular machine learning techniques we use to
build detection models over these features.
3.1 NetFlow Attributes
NetFlow is a network protocol proposed and implemented by
Cisco Systems [10] for summarizing network traffic as a collection
of network flows. Network elements such as routers and switches
capture these NetFlows and forward them to NetFlow collectors.
A network flow is defined to be a unidirectional sequence of packets
that share specific network properties (e.g., IP source/destination
addresses, and TCP or UDP source/destination ports). Each flow
has a number of associated attributes, or summary statistics that
characterize various general aspects of its behavior. In this paper,
the NetFlow attributes we analyzed for extracting features to
identify C&C servers are: the source IP address, the destination
IP address, the TCP source port, the TCP destination port, the
start and finish timestamps, and the number of bytes and packets
transferred.
Since Disclosure is primarily focused on identifying botnet
C&C channels, it is imperative that the system can reliably
distinguish servers from clients. Therefore, as an intermediate pre-
processing stage, NetFlow data is analyzed by the server classifier
that labels each observed IP address according to whether it pro-
vides one or more network services. In particular, since multiple
services can be made available for each IP address, we represent
each server as a 2-tuple of IP address and port, si = (cid:9)a, p(cid:10), where
a ∈ A is an IP address, A is the set of all IP addresses, p ∈ P
is a TCP port, and P is the set of all ports.
A common, and legitimate, criticism of early attempts to per-
form machine learning-based detection over NetFlow data is that
the features that were selected were often not robust. Hence,
the resulting detection systems would often overfit models to the
specific behavior of malware represented in the training set—for
instance, the particular server port used by a given malware
sample. Such features, however, do not generalize to classes
of malware such as botnets. For example, using our example
of learning a model on server ports, it is clear that the use of
a particular server port is not an intrinsic property of botnet
behavior. Therefore, the design of Disclosure’s feature extractor
module emphasizes the selection of those NetFlow attributes that
best capture invariants in botnet behavior without resorting to
specialization to a particular C&C protocol.
130
Figure 1: The system architecture of Disclosure. In the training phase (upper half), labeled training samples are
used to build detection models. In the detection phase (lower half), the detection models are used to classify IP
addresses as benign or associated with C&C communications.
3.2 Disclosure Feature Extraction
3.2.1 Flow Size-Based Features
The first class of features extracted from NetFlow data are based
on flow sizes, which simply indicate the total number of bytes
transferred in one direction between two endpoints for a particular
flow. Our premise for analyzing flow sizes in NetFlow data is that
the flow size distributions for C&C servers are significantly and
necessarily different from flow size distributions for benign servers.
We attribute this difference to several factors. First, the main
role of the botnet C&C channel is to establish a connection
between the bots and the C&C server. This channel should be
both reliable as well as relatively innocuous in appearance. Thus,
flows carrying botnet commands or information harvested from
infected clients are preferred to be as short as possible in order
to minimize their observable impact on the network. Considering
that network monitoring tools are widely used and that a botnet’s
local network impact usually scales linearly with the number of
bot infections, tuning for stealth is an important goal. Moreover,
due to the limited number of commands in typical C&C protocols,
flow sizes tend not to fluctuate significantly. On the other hand,
flow sizes generated during accesses to a benign server usually
assume a wide range of values.
The preliminary analysis we performed on known sets of benign
servers and C&C servers supports our premise. Hence, we de-
signed a set of methods to extract features to detect the behavioral
difference between C&C servers and benign servers with respect
to flow size.
Disclosure extracts flow size-based features by first grouping
all flows according to the server si that they originate from or are
destined to. Let si ∈ S be a server, and cj ∈ C be a client. Then,
flow sizes are grouped by time intervals j = 0, 1, 2, . . ., where Fi,j
denotes a series of flow sizes for flows from endpoint i to j, where
endpoints can be drawn from C or S. Once this set has been
derived, the following feature sets are extracted.
Statistical features. This group of features characterizes the
regularity of flow size behavior over time for both benign and C&C
servers. In particular, we extract the mean μFi,j and standard
deviation σFi,j separately for both incoming and outgoing flows