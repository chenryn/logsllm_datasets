### Introduction

With the introduction of Next.js plugins, we have gained additional functionality and dependencies that are exposed in `next.config.js`. Plugins such as `next-sass` and others add extra development dependencies to the runtime, even in production mode. This is because `next.config.js` is executed at server startup, requiring us to include Node modules that are not used in the production build.

### Issue Summary

I have searched the issues in this repository and believe that this is not a duplicate.

### Expected Behavior

As discussed last week, a potential solution would be to allow Next.js to read lifecycle-specific configuration files, such as `next.config.dev.js` and `next.config.build.js`, with a fallback to `next.config.js` if these specific files are not present. This would enable us to separate development and production configurations, thereby reducing unnecessary dependencies in the production environment.

### Current Behavior

Currently, Next.js loads `next.config.js` regardless of the lifecycle stage (development, build, or production).

Thank you for your attention to this matter.

---

This revised version improves the clarity, coherence, and professionalism of the original text.