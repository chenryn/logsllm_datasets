    commandkey 1
    keyfile /etc/chrony.keys
    initstepslew 10 client1 client3 client6
    local stratum 8
    manual
    allow 192.0.2.0
    ```
    其中 `192.0.2.0`{.literal} 是允许客户端连接的网络或者子网地址。
2.  在选择为 master 客户端的系统上，以 `root`{.literal}
    用户身份运行一个文本编辑器来编辑
    `/etc/chrony.conf`{.literal}，如下所示：
    ``` literallayout
    server master
    driftfile /var/lib/chrony/drift
    logdir /var/log/chrony
    log measurements statistics tracking
    keyfile /etc/chrony.keys
    commandkey 24
    local stratum 10
    initstepslew 20 master
    allow 192.0.2.123
    ```
    其中 `192.0.2.123`{.literal} 是 master 的地址， `master`{.literal}
    是 master 的主机名。带有此配置的客户端如果重启 master 将重新同步。
:::
在不是 master 客户端的客户端系统中，`/etc/chrony.conf`{.literal}
文件应该是相同的，除了应该省略 `local`{.literal} 和 `allow`{.literal}
指令。
在隔离的网络中，您还可以使用 `local`{.literal}
指令来启用本地参考模式。该模式可允许 `chronyd`{.literal} 作为
`NTP`{.literal}
服务器实时显示同步，即使它从未同步或者最后一次更新时钟早前发生。
要允许网络中的多个服务器使用相同的本地配置并相互同步，而不让客户端轮询多个服务器，请使用
`local`{.literal} 指令的 `orphan`{.literal}
选项启用孤立模式。每一服务器需要配置为通过 `本地`{.literal}
轮询所有其他服务器。这样可确保只有具有最小参考 ID
的服务器具有本地参考活跃状态，并同步其他服务器。当服务器出现故障时，另一台服务器将接管。
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#proc_configuring-remote-monitoring-access_using-chrony}配置远程监控访问 {.title}
:::
[**[chronyc]{.application}**]{.strong} 可以通过两种方式访问
`chronyd`{.literal}:
::: itemizedlist
-   互联网协议、IPv4 或者 IPv6。
-   UNIX 域套接字，由 `root`{.literal} 用户或 `chrony`{.literal}
    用户从本地进行访问。
:::
默认情况下，[**[chronyc]{.application}**]{.strong} 连接到 Unix
域套接字。默认路径为
`/var/run/chrony/chronyd.sock`{.literal}。如果这个连接失败，比如
[**[chronyc]{.application}**]{.strong} 在非 root 用户下运行时，chrony
[**[c]{.application}**]{.strong} 会尝试连接到 127.0.0.1，然后 ::1。
网络中只允许以下监控命令，它们不会影响 `chronyd`{.literal} 的行为：
::: itemizedlist
-   activity
-   manual list
-   rtcdata
-   smoothing
-   sources
-   sourcestats
-   tracking
-   waitsync
:::
`chronyd`{.literal} 接受这些命令的主机集合可以使用 `chronyd`{.literal}
配置文件中的 `cmdallow`{.literal} 指令，或者在
[**[chronyc]{.application}**]{.strong} 中使用 `cmdallow`{.literal}
命令配置。默认情况下，仅接受来自本地主机（127.0.0.1 或 ::1）的命令。
所有其他命令只能通过 Unix
域套接字进行。当通过网络发送时，`chronyd`{.literal} 会返回
`Notauthorized`{.literal} 错误，即使它来自 localhost。
以下流程描述了如何使用 [**[chronyc]{.application}**]{.strong} 远程访问
chronyd。
::: orderedlist
**流程**
1.  在 `/etc/chrony.conf`{.literal} 文件中添加以下内容来允许 IPv4 和
    IPv6 地址的访问：
    ``` literallayout
    bindcmdaddress 0.0.0.0
    ```
    或者
    ``` literallayout
    bindcmdaddress ::
    ```
2.  使用 `cmdallow`{.literal} 指令允许来自远程 IP
    地址、网络或者子网的命令。
    ::: informalexample
    在 `/etc/chrony.conf`{.literal} 文件中添加以下内容：
    ``` literallayout
    cmdallow 192.168.1.0/24
    ```
    :::
3.  在防火墙中打开端口 323 从远程系统连接。
    ``` literallayout
    #  firewall-cmd --zone=public --add-port=323/udp
    ```
    如果想永久打开端口 323，使用 `--permanent`{.literal}。
    ``` literallayout
    #  firewall-cmd --permanent --zone=public --add-port=323/udp
    ```
:::
::: itemizedlist
**其它资源**
-   `chrony.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#managing-time-synchronization-using-rhel-system-roles_using-chrony}使用 RHEL 系统角色管理时间同步 {.title}
:::
您可以使用 `timesync`{.literal}
角色在多个目标机器上管理时间同步。`timesync`{.literal} 角色安装并配置
NTP 或 PTP 实现来作为 NTP 客户端或 PTP slave 操作，以便将系统时钟与 PTP
域中的 NTP 服务器或 grandmasters 同步。
请注意，使用 `timesync`{.literal} 角色还可帮助 [迁移到
chrony](#using-chrony-to-configure-ntp_configuring-basic-system-settings.html#proc_migrating-to-chrony_using-chrony-to-configure-ntp "迁移到 chrony"){.link}，因为您可以在从
RHEL 6 开始的所有 Red Hat Enterprise Linux 版本上使用相同的
playbook，无论系统是使用 [**[ntp]{.application}**]{.strong} 还是
[**[chrony]{.application}**]{.strong} 来实施 NTP 协议。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
`timesync 角色`{.literal}替换了受管主机上给定或检测到的供应商服务的配置。之前的设置即使没有在角色变量中指定，也会丢失。如果没有定义
`timesync_ntp_provider`{.literal} 变量，唯一保留的设置就是供应商选择。
:::
以下示例演示了如何在只有一个服务器池的情况下应用 `timesync`{.literal}
角色。
::: example
[]{#using-chrony_configuring-basic-system-settings.html#idm140142161695152}
**例 30.1. 为单一服务器池应用 timesync 角色的 playbook 示例**
::: example-contents
``` literallayout
---
- hosts: timesync-test
  vars:
    timesync_ntp_servers:
      - hostname: 2.rhel.pool.ntp.org
        pool: yes
        iburst: yes
  roles:
    - rhel-system-roles.timesync
```
:::
:::
有关 `timesync`{.literal} 角色变量的详细参考，请安装
`rhel-system-roles`{.literal} 软件包，并参阅
`/usr/share/doc/rhel-system-roles/timesync`{.literal} 目录中的
` README.md`{.literal} 或 README.html``{=html} 文件。
::: itemizedlist
**其它资源**
-   [RHEL
    系统角色简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}
:::
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#_additional_resources_10}其它资源 {.title}
:::
::: itemizedlist
-   `chronyc(1)`{.literal} man page
-   `chronyd(8)`{.literal} man page
-   [常见问题解答](https://chrony.tuxfamily.org/faq.html){.link}
:::
:::
:::
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#chrony-with-hw-timestamping_configuring-basic-system-settings}第 31 章 带有 HW 时间戳的 Chrony {.title}
:::
硬件时间戳是一些网络接口控制器(NIC)支持的一项功能，它提供传入和传出数据包的准确时间戳。`NTP`{.literal}
时间戳通常由内核及使用系统时钟的 [**[chronyd]{.application}**]{.strong}
创建。但是，当启用 HW 时间戳时，NIC
使用自己的时钟在数据包进入或离开链路层或物理层时生成时间戳。与
`NTP`{.literal}
一起使用时，硬件时间戳可以显著提高同步的准确性。为了获得最佳准确性，NTP
服务器和 `NTP`{.literal} ``{.literal}
客户端都需要使用硬件时间戳。在理想条件下，可能还会有次微秒的准确性。
另一个用于使用硬件时间戳进行时间同步的协议是 `PTP`{.literal}
与 `NTP`{.literal} 不同，`PTP`{.literal}
依赖于网络交换机和路由器。如果您想要达到同步的最佳准确性，请在带有
`PTP`{.literal} 支持的网络中使用
`PTP`{.literal}，在使用不支持这个协议的交换机和路由器的网络上选择
`NTP`{.literal}。
以下小节描述了如何进行：
::: itemizedlist
-   验证对硬件时间戳的支持
-   启用硬件时间戳
-   配置客户端轮询间隔
-   启用交集模式
-   为大量客户端配置服务器
-   验证硬件时间戳
-   配置 PTP-NTP 网桥
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-support-for-hardware-timestamping_chrony-with-hw-timestamping}验证硬件时间戳支持 {.title}
:::
要验证接口是否支持使用 `NTP`{.literal} 的硬件时间戳，请使用
`ethtool -T`{.literal} 命令。如果 `ethtool`{.literal} 列出了
`SOF_TIMESTAMPING_TX_HARDWARE`{.literal} 和
`SOF_TIMESTAMPING_TX_SOFTWARE`{.literal} 模式，以及
`HWTSTAMP_FILTER_ ALL`{.literal} 过滤器模式，则可以使用硬件时间戳的
`NTP`{.literal}。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hw-timestamping}
**例 31.1. 在特定接口中验证硬件时间戳支持**
::: example-contents
``` literallayout
# ethtool -T eth0
```
输出：
``` literallayout
Timestamping parameters for eth0:
Capabilities:
        hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)
        software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)
        hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)
        software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)
        software-system-clock (SOF_TIMESTAMPING_SOFTWARE)
        hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)
PTP Hardware Clock: 0
Hardware Transmit Timestamp Modes:
        off                   (HWTSTAMP_TX_OFF)
        on                    (HWTSTAMP_TX_ON)
Hardware Receive Filter Modes:
        none                  (HWTSTAMP_FILTER_NONE)
        all                   (HWTSTAMP_FILTER_ALL)
        ptpv1-l4-sync         (HWTSTAMP_FILTER_PTP_V1_L4_SYNC)
        ptpv1-l4-delay-req    (HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ)
        ptpv2-l4-sync         (HWTSTAMP_FILTER_PTP_V2_L4_SYNC)
        ptpv2-l4-delay-req    (HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ)
        ptpv2-l2-sync         (HWTSTAMP_FILTER_PTP_V2_L2_SYNC)
        ptpv2-l2-delay-req    (HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ)
        ptpv2-event           (HWTSTAMP_FILTER_PTP_V2_EVENT)
        ptpv2-sync            (HWTSTAMP_FILTER_PTP_V2_SYNC)
        ptpv2-delay-req       (HWTSTAMP_FILTER_PTP_V2_DELAY_REQ)
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-hardware-timestamping_chrony-with-hw-timestamping}启用硬件时间戳 {.title}
:::
要启用硬件时间戳，请使用 `/etc/chrony.conf`{.literal} 文件中的
`hwtimestamp`{.literal}
指令。该指令可指定单一接口，也可以指定通配符字符来启用所有支持接口的硬件时间戳。如果没有其他应用程序（如
`linuxptp`{.literal} 软件包中的 [**[ptp4l]{.application}**]{.strong}
）在接口上使用硬件时间戳，请使用通配符规格。在 chrony
配置文件中允许使用多个 `hwtimestamp`{.literal} 指令。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-hardware-timestamping}
**例 31.2. 使用 hwtimestamp 指令启用硬件时间戳**
::: example-contents
``` literallayout
hwtimestamp eth0
hwtimestamp eth1
hwtimestamp *
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-client-polling-interval_chrony-with-hw-timestamping}配置客户端轮询间隔 {.title}
:::
建议为互联网中的服务器使用默认的轮询间隔范围（64-1024秒）。对于本地服务器和硬件时间戳，需要配置一个较短的轮询间隔，以便最小化系统时钟偏差。
`/etc/chrony.conf`{.literal} 中的以下指令使用一秒轮询间隔指定本地
`NTP`{.literal} 服务器：
``` literallayout
server ntp.local minpoll 0 maxpoll 0
```
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-interleaved-mode_chrony-with-hw-timestamping}启用交集模式 {.title}
:::
不是硬件 `NTP`{.literal} ``{.literal} 设备，但一般情况下运行软件
`NTP 实施的计算机（如 chrony ）的 NTP`{.literal}
服务器只有在发送数据包后才会获得硬件传输时间戳。此行为可防止服务器在它对应的数据包中保存时间戳。要启用
`NTP`{.literal}
客户端接收传输时间戳后生成的传输时间戳，请将客户端配置为使用
`NTP`{.literal} 交集模式，方法是在 `/etc/chrony.conf`{.literal} 的
server 指令中添加 `xleave`{.literal} 选项：
``` literallayout
server ntp.local minpoll 0 maxpoll 0 xleave
```