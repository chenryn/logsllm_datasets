Here is a test-case, where I expect the results to always be the same, but
they are not.
    import numpy as np
    dtype=object
    print("[[0]] = array-like")
    A = np.zeros(2, dtype=dtype)
    A[[0]] = [[1,2,3,4]]
    print(A)
    print("[[0]] = ndarray")
    B = np.zeros(2, dtype=dtype)
    B[[0]] = np.array([[1,2,3,4]])
    print(B)
    print("[[T,F]] = array-like")
    C = np.zeros(2, dtype=dtype)
    C[np.array([True, False])] = [[1,2,3,4]]
    print(C)
    print("[[T,F]] = ndarray")
    D = np.zeros(2, dtype=dtype)
    D[np.array([True, False])] = np.array([[1,2,3,4]])
    print(D)
    print("[0] = array-like")
    E = np.zeros(2, dtype=dtype)
    E[0] = [1,2,3,4]
    print(E)
To be clear, I expected the result to always be `[ [1,2,3,4], 0]`.
The results in 1.8 are different, but also wrong.
  * 
A probably related bug: when using `dtype=int`, then I would expect all the
calls to trigger an error message, but they do not.
Tested on both 1.9.2 and current master.