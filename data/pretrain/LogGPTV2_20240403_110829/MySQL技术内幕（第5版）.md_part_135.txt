返回x，即x的次方。
PI()
RAND(10)
RAND(10)
RAND()
种子就可以达到目的。
一个整数。如果参数为常量，那么RAND（）函数将以这个常量作为随机数发生器的种子值。
RAND(n)
RADIANS(-360)
RADIANS(360)
RADIANS(0)
POW(16,0.25)
POW(4,0.5)
POW(2,-3)
POW(2,3)
POWER(X, Y)
PI(）
返回圆周率π。
(参考C.1.3节)。
MOD（）函数执行的是模运算。
间占用量。
LOG2（）能够让你了解以位计算的数值“宽度”。人们经常利用此函数来估算某个值的存储空
ROUND(X,d)
RAND()
LOG2（32767)
LOG2(255)
LOG2(0)
返回x以2为底的对数。
LOG10(100)
LOG10(10)
LOG10(0)
那么每次调用RAND（）时都会将它作为种子值。（例如，如果你指定了
↑↑
→3.141593
→14.99995597177
↑↑
↑
0.65705152196535
0.65705152196535
0.5725383884949
0.1036697114852
-6.2831853071796
6.2831853071796
0
22
0.125
8
7.9943534368589
NULL
12
NULL
C.2
函数
573
---
## Page 594
574
口
TAN(x)
口
SIN(x)
SIGN(x)
TRUNCATE(123456.789,-3)
如果d是负数，TRUNCATE（）会去掉小数部分，把小数点左边的 ABS（d)个数变为0。
TRUNCATE(1.23,4)
TRUNCATE(1.23,
分。如果d大于x的小数位数，x的小数部分将用0来补足到指定的位数。
返回小数部分被截短为α位数字的x值。如果α等于0，返回值里将不包含小数点和小数部
TRUNCATE(x, d)
TAN(PI()/4)
返回x的正切值，其中，x是一个弧度值。
SQRT(-1)
SQRT(2.25)
SQRT(625)
返回x的非负平方根。
SQRT（x)
SIN(PI()/2)
SIN(O)
返回x的正弦值，其中，x是一个弧度值。
SIGN(-99)
SIGN(15.803)
根据x的值是负数、0还是正数，分别返回-1、0或1。
TRUNCATE(1.23,
TAN(0)
有关精确值和近似值的更多讨论请参考3.1.1.1节。
ROUND（）函数对x参数的舍入处理遵循以下规则。
ROUND(123456,-2)
位数字设置为零。
如果d是一个负数，那么ROUND（）函数会去掉小数部分，把从小数点开始往左算起的ABS（d)
ROUND（1,4)
ROUND(-33.27834,2)
ROUND(15.5)
ROUND(15.3)
先转换为双精度浮点数，再进行舍入处理。
以如果该参数是一个整数的话，返回结果将没有任何小数部分。以字符串形式给出的数值将
结果将没有小数点或小数部分。此函数的返回值和它的第一个参数有着同样的数值类型，所
ROUND（）函数将返回x的值，但只保留到小数点后面的d位数字。如果d等于零或没有给出，
将按接近零的方向舍入。例如，1.5和-1.5将被分别舍入为2和-2，而1.49和-1.49将被舍
1对于精确值数值，大于或等于0.5的小数部分将按远离零的方向舍人。小于0.5的小数部分
1对于近似值数值，舍入行为仍取决于其底层的算术函数库。
附录C操作符与函数参考
人为1和-1。
→123000
+
11
↑1
→123500
1.2300
NULL
1.0000
1.2
0
1.5
0
L
-33.28
G
---
## Page 595
RPAD（)、RTRIM()、
LEFT()、LOCATE()、LOWER()、LTRIM()、MID()、POSITION()、REPLACE()、REVERSE()、RIGHT()
字符串，但返回的是数值。对于那些根据字符串位置处理字符串类的函数，我们将把字符串的头一
C.2.4
有些字符串函数能够支持多字节字符：CHAR_LENGTH（）、INSERT（）、
本节绝大多数字符串函数的返回值仍将是一个字符串。有些函数，比如LENGTH（），其参数为
COERCIBILITY(str)
 cOALESCE(exprl,expr2,...)
 CHARSET(str)
 CHAR_LENGTH(str)
CHAR(n1,n2,..
口
ASCII(str)
（coercibity），指的是某个字符串在涉及其他字符串的表达式里改变其排序规则的程度。
返回字符串str 的排序可压缩性；如果该参数非法，则返回 NULL。所谓“可压缩性”
COALESCE(NULL,1/0,2,'a′,45+97)
返回输入参数中的第一个非NULL元素；如果所有元素全都为NULL，则返回NULL。
返回给定字符串的字符集名；如果参数为 NULL，则返回NULL。
长度为1。）
这两个函数与LENGTH（）差不多，但参数长度以字符计算，而非字节。
CHARACTER_LENGTH(str)
CHAR(89,105,107,101,115,33)
CHAR(97)
么结果将是NULL）。NULL参数会被忽略。
符集里的合法字符，那么CHAR（）函数将返回一条警告消息（如果启用了SQL严格模式，那
USING选项，那么返回值将由该选项所指定的字符集里的字符构成。如果结果不是指定字
码。如果没有使用USING选项，那么CHAR（）函数的返回值将是一个二进制串。如果使用
符构成一个字符串作为其返回值。大于255 的字符编码值将被解释为多字节字符的字符编
它会把参数nl,n2，..解释为一组数字字符编码值，并根据它们用当前字符集里的对应字
CONV(65,10,2)
BIN(65)
参考对CONV（）函数的介绍。
返回以字符串表示的参数n的二进制表示形式。下面两个表达式是等价的，更多详细信息请
BIN(n)
ASCII(NULL)
ASCII(")
ASCII('abc')
个空串，则返回O；如果 str为NULL，则返回NULL。Str应该只包含8位的字符。
返回字符串str最左端的那个字节的ASCII编码，整数值，范围为0~255。如果str是一
COALESCE(NULL,1/0)
CHARSET(123)
CHARSET(CONVERT('abc'USING utf8))
CHARSET('abc')
CHAR(65)
字符串函数
、SUBSTRING()、SUBSTRING_INDEX()、TRIM()、UCASE()和 UPPER()。
.[USING charset])
→NULL
→2
→'latinl'
↑
一
1000001
"1000001
NULL
97
'utf8:
'Yikes!!
a
A'
INSTR()、LCASE（)
。（一个多字节字符的
C.2函数
575
---
## Page 596
576
口
口
 coNCAT(str1, str2,...)
口
下面的例子将把十六进制表示的14转换为二进制：
都是大写。
数值n里的非十进制字符既可以是大写字母，也可以是小写字母。但结果里的非十进制数字
为'abcdefg'，则结果为0，因为g不是一个合法的十六进制数字。
from_base 为底的数字，那么此函数的返回结果将为0。例如，如果 from_base为16，n
11~36之间的数值经过转换得到的字符可能是从A到z的字母。）如果n不是一个合法的以
可能会包含非十进制数字。（这也正是CONV（）函数为何返回一个字符串的原因。底数在
数。n将被当作BIGINT（64位整数）值，但不能被指定为字符串，因为底数大于10的数值
果有参数为 NULL，则返回 NULL。参数 from_base 和 to_base 必须是一个 2~36之间的整
给定一个以 from_base为底的数值 n，返回一个以 to_base为底的数值的字符串表示。如
CONV(n, from_base, to_base)
CONCAT_WS（·,,'a',b',*,'d')
的字符串里的 NULL值会被忽略。
输入参数之间用字符串 delim加以分隔。如果delim为 NULL，则返回 NULL；但参加连接
与CONCAT（）类似，返回值为由第2个及后续输入参数合并在一起而得到的一个字符串，各
CONCAT_WS(delim,str1,str2,...)
连接字符串的另一个办法是相邻排列，即一个接一个地写出它们。
CONCAT('abc',NULL)
CONCAT('abc','def')
非二进制串；那以前的版本，转换结果为二进制串。
是一个非二进制串。数字参数都可以转换为字符串。自MySQL5.5.3起，这种转换得到的是
有一个参数是二进制串，结果就是一个二进制串；如果所有参数都是非二进制串，结果就
返回一个由自身所有参数连接而成的字符串；只要有一个参数为NULL，就返回NULL。只要
COLLATION(CONVERT('abc USING utf8) COLLATE utf8_bin)
COLLATION(_latin2‘abc')
返回给定字符串str的排序规则名称；如果该参数非法，则返回 NULL。
COLLATION(str)
COERCIBILITY('abc')
COERCIBILITY(_utf8 'abc' COLLATE utf8_bin)
表列出了各种返回值，它们都按可压缩性从低到高的顺序排列。
'abc''def'='abcdef
'three''blind''mice
CONCAT('abc')
附录C操作符与函数参考
可压缩性
0
排序规则可忽略（如设置为NULL）
排序规则可压缩
排序规则由USER（）等系统值设定
排序规则是隐式设定的
未设定排序规则
排序规则是显式设定的，不能转换
含义
→*1emon*-*1ime*-*grape*
→'a,b,,d'
→
→'latin2_general_ci'
↓
↑
"threeblindmice'
NULL
'utf8_bin'
'abc'
'abcdef
---
## Page 597
HEX(n)