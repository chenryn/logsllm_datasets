Triton and Symbolic 
execution on GDB 
bananaappletw)@)DEF)CON)China)
2018/05/11)
$whoami
•  Wei-Bo)Chen(@bananaappletw))
•  MS)major)in)CSE,)Chiao)Tung)
University,)Hsinchu)
•  Organizations:)
•  Software)Quality)Laboratory)
•  Co-founder)of)NCTUCSC)
•  Bamboofox)member)
•  Specialize)in:)
•  symbolic)execution)
•  binary)exploitation)
•  Talks:)
•  HITCON)CMT)2015)
HITCON)CMT)2017)
Outline 
•  Why)symbolic)execution?)
•  What)is)symbolic)execution?)
•  Triton)
•  SymGDB)
•  Conclusion)
•  Drawbacks)of)Triton)
•  Comparison)between)other)symbolic)execution)framework)
Why symbolic execution? 
In the old days 
•  Static)analysis)
•  Dynamic)analysis)
Static analysis 
•  objdump)
•  IDA)PRO)
Dynamic analysis 
•  GDB)
•  ltrace)
•  strace)
My brain is going to explode
Symbolic execution!!! 
What is symbolic execution?
Symbolic execution 
•  Symbolic)execution)is)a)means)of)analyzing)a)program)to)determine)
what)inputs)cause)each)part)of)a)program)to)execute.)
•  System-level)
•  S2e(https://github.com/dslab-epfl/s2e))
•  User-level)
•  Angr(http://angr.io/))
•  Triton(https://triton.quarkslab.com/))
•  Code-based)
•  klee(http://klee.github.io/))
Symbolic execution 
Z"=="12"
fail()"
"OK""
Triton 
•  Website:)https://triton.quarkslab.com/)
•  A)dynamic)binary)analysis)framework)written)in)C++.)
•  developed)by)Jonathan)Salwan)
•  Python)bindings)
•  Triton)components:)
•  Symbolic)execution)engine)
•  Tracer)
•  AST)representations)
•  SMT)solver)Interface)
Triton
•  Structure)
•  Symbolic)execution)engine)
•  Triton)Tracer)
•  AST)representations)
•  Static)single)assignment)form(SSA)form))
•  Symbolic)variables)
•  SMT)solver)Interface)
•  Example
Structure 
Symbolic execution engine 
•  The)symbolic)engine)maintains:)
•  a)table)of)symbolic)registers)states)
•  a)map)of)symbolic)memory)states)
•  a)global)set)of)all)symbolic)references)
Step)
Register)
Instruction)Set)of)symbolic)expressions)
init) eax)=)UNSET)None)
)
1)
eax)=)φ1)
mov)eax,)0){φ1=0})
2)
eax)=)φ2)
inc)eax)
{φ1=0,φ2=φ1+1})
3)
eax)=)φ3)
add)eax,)5) {φ1=0,φ2=φ1+1,φ3=φ2+5})
Triton Tracer 
•  Tracer)provides:)
•  Current)opcode)executed)
•  State)context)(register)and)memory))
•  Translate)the)control)flow)into)AST"Representations"
•  Pin)tracer)support)
AST representations 
•  Triton)converts)the)x86)and)the)x86-64)instruction)set)semantics)into)
AST)representations.)
•  Triton's)expressions)are)on)SSA"form.)
•  Instruction:))add)rax,)rdx)
•  Expression:)))ref!41)=)(bvadd)((_)extract)63)0))ref!40))((_)extract)63)0))
ref!39)))
•  ref!41)is)the)new)expression)of)the)RAX)register.)
•  ref!40)is)the)previous)expression)of)the)RAX)register.)
•  ref!39)is)the)previous)expression)of)the)RDX)register.)
AST representations 
•  mov)al,)1)
•  mov)cl,)10)
•  mov)dl,)20)
•  xor)cl,)dl)
•  add)al,)cl)
Static single assignment form(SSA form) 
Each)variable)is)assigned)exactly)once"
•  y):=)1)
•  y):=)2)
•  x):=)y)
Turns)into)
•  y1):=)1)
•  y2):=)2)
•  x1):=)y2)
Static single assignment form(SSA form) 
y1):=)1))(This)assignment)is)not)necessary))
y2):=)2)
x1):=)y2)
•  When)Triton)process)instructions,)it)could)ignore)some)unnecessary)
instructions.)
Symbolic variables 
•  Imagine)symbolic)as)a)infection.)If)one)of)the)operand)of)a)instruction)
is)symbolic,)the)register)or)memory)which)the)instruction)infect)will)
be)symbolic.)
•  In)Triton,)we)could)use)the)following)method)to)manipulate)it.)
•  convertRegisterToSymbolicVariable(const)triton::arch::Register)&reg))
•  isRegisterSymbolized(const)triton::arch::Register)&reg))
Symbolic variables 
1.  Make)ecx)as)symbolic)variable)
•  convertRegisterToSymbolicVaria
ble(Triton.registers.rcx))
•  isRegisterSymbolized(Triton.regi
sters.rcx))==)True)
Symbolic variables 
1.  Make)ecx)as)symbolic)variable)
2.  test)ecx,)ecx"
•  ZF)=)AND(ecx,)ecx))==)0)
•  If)ecx)==)0:)
•  Set)ZF)to)1)
•  Else:)
•  Set)ZF)to)0)
Symbolic variables 
1.  Make)ecx)as)symbolic)variable)
2.  test)ecx,)ecx"
3.  je)+7)(eip))
4.  mov)edx,)0x64)
5.  nop)
•  If)ZF)==)1:)
•  Jump)to)nop)
•  Else:)
•  Execute)next)instruction)
•  isRegisterSymbolized(Triton.regi
sters.eip))==)True)
SMT solver Interface 
Example 
•  Defcamp)2015)r100)
•  Program)require)to)input)the)password)
•  Password)length)could)up)to)255)characters)
•  Then)do)the)serial)operations)to)check)password)is)correct)
Defcamp 2015 r100 
Defcamp 2015 r100 
Defcamp 2015 r100 
•  Import)Triton)and)initialize)Triton)context)
•  Set)Architecture)
•  Load)segments)into)triton)
•  Define)fake)stack)()RBP)and)RSP)))
•  Symbolize)user)input)
•  Start)to)processing)opcodes)
•  Set)constraint)on)specific)point)of)program)
•  Get)symbolic)expression)and)solve)it)
Import Triton and initialize Triton context 
Set Architecture 
Load segments into triton 
Define fake stack ( RBP and RSP ) 
Symbolize user input 
Start to processing opcodes 
Get symbolic expression and solve it 
Some problems of Triton 
•  The)whole)procedure)is)too)complicated.)
•  High)learning)cost)to)use)Triton.)
•  With)support)of)debugger,)many)steps)could)be)simplified.)
SymGDB 
•  Repo:)
https://github.com/SQLab/symgdb)
•  Symbolic)execution)support)for)GDB)
•  Combined)with:)
•  GDB)Python)API)
•  Triton)
•  Symbolic)environment)
•  symbolize)argv
Design and Implementation 
•  GDB)Python)API)
•  Failed)method)
•  Successful)method)
•  Flow)
•  SymGDB)System)Structure)
•  Implementation)of)System)
Internals)
•  Relationship)between)SymGDB)
classes)
•  Supported)Commands)
•  Symbolic)Execution)Process)in)
GDB)
•  Symbolic)Environment)
•  symbolic)argv)
•  Debug)tips)
•  Demo
GDB Python API 
•  API:)https://sourceware.org/gdb/onlinedocs/gdb/Python-API.html)
•  Source)python)script)in).gdbinit)
•  Functionalities:)
•  Register)GDB)command)
•  Register)event)handler)(ex:)breakpoint))
•  Execute)GDB)command)and)get)output)
•  Read,)write,)search)memory)
Register GDB command 
Register event handler 
Execute GDB command and get output 
Read memory 
Write memory 
Failed method 
•  At)first,)I)try)to)use)Triton)callback)to)get)memory)and)register)values)
•  Register)callbacks:)
•  needConcreteMemoryValue(const)triton::arch::MemoryAccess&)mem))
•  needConcreteRegisterValue(const)triton::arch::Register&)reg))
•  Process)the)following)sequence)of)code)
•  mov)eax,)5)
•  mov)ebx,eax)(Trigger"needConcreteRegisterValue))
•  We)need)to)set)Triton)context)of)eax)
Triton callbacks 
Problems 
•  Values)from)GDB)are)out)of)date)
•  Consider)the)following)sequence)of)code)
mov)eax,)5)
•  We)set)breakpoint)here,)and)call)Triton's)processing()))
mov)ebx,eax)(trigger)callback)to)get)eax)value,)eax)=)5))
mov)eax,)10)
mov)ecx,)eax)(Trigger)again,)get)eax)=)5))
•  Because)context)state)not)up)to)date)
Tried solutions 
•  Before)needed)value)derived)from)GDB,)check)if)it)is)not)in)the)
Triton's)context)yet)
Not)working!)
Triton)will)fall)into)infinite)loop)
)
Successful method 
•  Copy)GDB)context)into)Triton)
•  Load)all)the)segments)into)Triton)context)
•  Symbolic)execution)won't)affect)original)GDB)state)