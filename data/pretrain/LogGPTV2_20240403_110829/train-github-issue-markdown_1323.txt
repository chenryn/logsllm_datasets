## The Problem
Currently, a newly rendered `dialog` element can erroneously retain the "open
state" a previously rendered `dialog` element if React _thinks_ that the same
element is being re-rendered. Interestingly enough, this problem doesn't seem
to happen for the element's other attributes/properties.
React version: `18.2.0`
## Steps To Reproduce
The situation is best understood with a CodeSandbox. Notice that after the
state change (which happens on submission of the `dialog`'s form), the `open`
attribute is stale, but the `data-phase` attribute is fresh.
This is potentially a problem with the reconciler ... because if you change
the "phase two version" to have a wrapping `div`, this problem goes away.
(This is not always a viable solution, however. And it's a bit hacky.)
## The current behavior
When `ModalComponent` re-renders, the new `dialog` element that it mounts
retains the `open` value of the previous `dialog` element.
## The expected behavior
When `ModalComponent` re-renders, the new `dialog` element that it mounts
_should not_ have an `open` attribute since none was provided for it.
## Extra Notes
The conversation would be unrelated to the bug, but in case it's brought up:
Please note that the actual project that I'm working on does not simply have
virtually-duplicated content between the 2 dialog elements. (The content
between the two is distinct.) So combining the content under a single `dialog`
element is not an option for me at the moment.