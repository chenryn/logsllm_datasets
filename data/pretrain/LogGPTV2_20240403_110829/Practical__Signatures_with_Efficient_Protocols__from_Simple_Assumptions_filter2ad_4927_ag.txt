Exponent-inversion Signatures and IBE under Static
Assumptions. Cryptology ePrint Archive 2014: Report
2014/311.
APPENDIX
A. PROOF OF THEOREM 1
Proof. We will proceed as in [41] to prove that the
scheme of section 3 is secure under chosen-message at-
tacks. Namely we will consider a sequence of hybrid
games involving two kinds of signatures.
Type A signatures: These are real signatures:
σ1 = gω · (vm1
1 · (zm1
π = zω
1
2
(cid:96)
· w)s,
··· vm(cid:96)
··· zm(cid:96)
, . . . , σm(cid:96)
σ2 = gs,
(cid:96)+1 · z(cid:96)+2)s, σ3 = hs.
2 , σ2, σm1
, . . . , σm(cid:96)
3
Since (σ1, σm1
3 , σ3, Ω) is
in the row space of M, the QA-NIZK proof π has
2
(13)
(cid:32)(cid:96)+1(cid:89)
(cid:33)
the same distribution as if it were computed as
·
−χ1
π = σ
1
(cid:32) 2(cid:96)+2(cid:89)
−χimi−1
σ
2
· σ
−χ(cid:96)+2
2
·
(cid:33)
i=2
−χimi−(cid:96)−2
3
σ
· σ
−χ2(cid:96)+3
3
· Ω
−χ2(cid:96)+4 .
(14)
i=(cid:96)+3
We also deﬁne Type A(cid:48) signatures as a generalization of
Type A signatures where only condition (13) are imposed
and no restriction is given on π beyond the fact that it
should be a valid homomorphic signature on vector (2).
Type B signatures: These use a random value ω(cid:48) ∈R
Zp instead of the secret key ω. We pick random
ω(cid:48), s, s1
(σ1, σ2, σ3) = (gω(cid:48) · (vm1
· w)s, gs, hs+s1 ),
The QA-NIZK proof π is computed as in (14) by
using tk = {χi}2(cid:96)+4
i=1 . Note that Type B signatures
can be generated without using ω ∈ Zp.
R← Zp and compute:
··· vm(cid:96)
1
(cid:96)
i=1
We consider a sequence of games. In Game i, Si de-
notes the event that A produces a valid signature σ(cid:63) on
M (cid:63) such that (M (cid:63), σ(cid:63)) was not queried before, and by
Ei the event that A produces a Type A(cid:48) signature.
Game 0: This is the real game. The challenger B pro-
duces a key pair (sk, pk) and sends pk to A. Then
A makes Q signature queries: A sends messages Mi
to B, and B answers by sending σi = Sign(sk, Mi) to
A. Finally A sends a pair (M (cid:63), σ(cid:63)) /∈ {(Mi, σi)}Q
and wins if Verify(pk, σ(cid:63), M (cid:63)) = 1.
Game 1: We change the way B answers signing queries.
The QA-NIZK proofs π are then computed as sim-
ulated QA-NIZK proofs using tk as in (14). These
QA-NIZK proofs are thus simulated proofs for true
statements, and then their distribution remains un-
changed. We have Pr[S1] = Pr[S1 ∧ E1] + Pr[S1 ∧
¬E1]. Lemma 3 states that the event S1 ∧ ¬E1
happens with all but negligible probability: Pr[S1 ∧
(λ)− 1/p. Thus our task is now to
¬E1] ≤ AdvDDH
upper-bound the probability Pr[S1 ∧ E1].
Game 2.k (0 ≤ k ≤ Q): In Game 2.k, the challenger
returns a Type B signature for the ﬁrst k queries.
At the last Q − k signature queries, the challenger
answers a type A signature. Lemma 4 ensures that
(cid:12)(cid:12)Pr[S2.k ∧ E2.k] − Pr[S2.(k−1) ∧ E2.(k−1)](cid:12)(cid:12) is smaller
ˆG
than AdvDDHG
(λ) + 1/p.
In Game 2.Q, we know that if SXDH holds, A can only
output a type A(cid:48) forgery even if it only obtains type
B signatures during the game. Nevertheless, lemma 5
shows that a type A(cid:48) forgery in Game 2.Q contradicts
the DDH assumptions in G. Therefore we have Pr[S2.Q∧
E2.Q] ≤ AdvDDHG
(λ). Putting the above altogether, the
probability Pr[S0] is upper-bounded by
(cid:18)
(cid:19)
AdvDDH
ˆG
(λ)+
AdvDDHG
+Q
1
p
 k: The last Q − k − 1 signing queries are
computed as Type A signatures, which B is able to gen-
erate using the secret key ω ∈ Zp he knows and crs or
tk = {χi}2(cid:96)+4
Case j = k: In the k-th signing query (m1, . . . , m(cid:96)),
B embeds the DDH instance in the signature and sim-
ulates either Game 2.k or Game 2.(k − 1) depending
on whether η = gab or η = ga(b+c) for some c ∈R
Zp. Namely, B computes σ2 = gb, σ3 = η, and
. Then B simu-
σ1 = gωσ
lates QA-NIZK proofs π as recalled in (14), and sends
σ = (σ1, σ2, σ3, π) to A.
to produces valid proofs.
aw +(cid:80)(cid:96)
bw +(cid:80)(cid:96)
i=1 avi mi
i=1 bvi mi
i=1
σ
2
3
If η = gab, the k-th signature σ is a Type A signature
with s = b. If η = ga(b+c) for some c ∈R Zp, we have:
σ1 = gωgac·(bw +(cid:80)(cid:96)
= gω(cid:48)
··· vm(cid:96)
σ2 = gb,
(vm1
1
Where ω(cid:48) = ω + ac · (bw +(cid:80)(cid:96)
bw +(cid:80)(cid:96)
i=1 bvi mi)(vm1
(cid:96) w)b
1
··· vm(cid:96)
(cid:96) w)b
σ3 = hb+c
i=1 bvi mi). Since the term
i=1 bvi mi is uniform and independent of A’s view,
σ is distributed as a Type B signature if η = ga(b+c).
When A terminates,
1 ··· m(cid:63)
couple
(m(cid:63)
that has not been queried during
the signing queries. Now the reduction B has to deter-
mine whether σ(cid:63) is a Type A(cid:48) forgery or not. To this
end, it tests if the equality:
outputs
(cid:96) , σ(cid:63))
it
a
(cid:63)aw +(cid:80)(cid:96)
(cid:63)bw +(cid:80)(cid:96)
i=1 avi m(cid:63)
i
i=1 bvi m(cid:63)
i
σ(cid:63)
1 = gωσ
2
(15)
is satisﬁed. If it is, B outputs 1 to indicate that η = gab.
Otherwise it outputs 0 and rather bets that η ∈R G.
To see why this test allows recognizing Type A(cid:48) forg-
σ
3
eries, we remark that σ(cid:63) is of the form:
··· vm(cid:63)
(cid:96)
1
1
1 = gω+s0 (vm(cid:63)
3 = hs+s1 , σ(cid:63)
not. We notice that s0 = a · s1 · (bw +(cid:80)(cid:96)
(cid:96) w)s,
σ(cid:63)
2 = gs, σ(cid:63)
and the goal of B is to decide whether (s0, s1) = (0, 0) or
i ) if
the forgery fulﬁlls relation (15) and we show this to only
happen with probability 1/p for any s1 (cid:54)= 0 meaning that
Type B forgery passes the test with the same probability.
From the entire game and assuming a forgery which
i=1 bvi · m(cid:63)
passes the test we have the following linear system:
 I(cid:96)+1
0(cid:62)
0(cid:62)
(cid:96)+1
(cid:96)+1
·
a · I(cid:96)+1
ac · (m1|···|m(cid:96)|1)
as1 · (m(cid:63)
(cid:96)|1)
1|···|m(cid:63)
av1
...
av(cid:96)
aw
bv1
...
bv(cid:96)
bw
=
logg(v1)
...
logg(v(cid:96))
logg(w)
ω(cid:48) − ω
s0
p
where, 0(cid:96)+1 denotes the zero vector of length (cid:96) + 1
and m1, . . . , m(cid:96) is the message involved in the k-th