Franklin et al. [13] identiﬁed cases where Golle’s protocol would
not work correctly, and developed two new protocols using a simi-
lar approach. Their ﬁrst protocol was based on an XOR secret shar-
ing scheme and used private information retrieval to process bids.
It required running an encryption mixnet on O(n) ciphertexts for
each of n2 rounds, requiring in total O(n4) public key operations
and Õ(n2) communication rounds. Their second protocol was not
based on Golle’s, but instead used garbled circuits in combination
with Naor-Nissim’s protocol for secure function evaluation [39].
This resulted in a two-party protocol with O(n4) computation com-
plexity and Õ(n2) communication rounds. As with Golle’s, it does
not appear to be practical and has never been implemented.
Teruya and Sakuma presented a secure stable matching protocol,
also building on Golle’s protocol, but using additive homomorphic
encryption to simplify the bidding process [52]. This reduced the
number of communication rounds needed to O(n2) and resulted in
a protocol practical enough to implement. They implemented their
protocol as a client-server system, using mobile devices running on
a LAN. The largest benchmark they report is for n = 4, which took
over 8 minutes to complete.
Terner [51] built garbled-circuit implementations of variants of
the Gale-Shapley algorithm, reporting execution times of over 12
hours for experiments with 100× 100 participants.
Keller and Scholl [27] were the ﬁrst to consider using RAM-
based secure computation to implement stable matching. They
designed a secure version of Gale-Shapley using an ORAM, and
implemented their protocol using Path ORAM [50] and the SPDZ
MPC protocol [10]. They report an experiment that matched 128×
128 participants in roughly 2.5 hours, but it also required an es-
timated 1000 processor-days of ofﬂine compute time (i.e., work
independent of the input) which they did not include. In all cases,
the algorithm and secure computation techniques together limit the
applicability of the entire scheme to toy instances.
The best previous results reported for implementing secure stable
matching are Zahur et al.’s results using Square-Root ORAM [63],
which are the baseline comparison we use in Section 5.1. They im-
plemented a textbook version of Gale-Shapley, and reported com-
pleting a match involving 512 × 512 participants in just over 33
hours (over 40 times longer than our approach takes for the same
benchmark running on an identical testbed).
Blanton et al. [6] made an observation about read-once data ac-
cess patterns in the structure of Breadth First Search, and pro-
posed a Θ(V 2) secure version based upon permuting the rows and
columns of an adjacency matrix. Though their observation is sim-
ilar to our own, the underlying differences between Gale-Shapley
and BFS preclude adapting their solution. In particular, BFS per-
mits the algorithm to iterate over an entire column at once, whereas
both Gale-Shapley and Roth-Peranson must shift between proposers
as they become matched and unmatched, and resume iteration when
revisiting. This necessitates a far more complex construction.
7. CONCLUSION
Our results conﬁrm that with appropriately adapted algorithms
and data structures it is now possible to execute complex algo-
rithms with data-dependent memory accesses as scalable secure
two-party computations. The NRMP matching pool is one of the
largest of its type in the world. Similar or identical algorithms are
used for many other problems including matching residents to resi-
dency programs in other countries [9]; placing applicants for phar-
macy, optometry, psychology, dentistry and other residencies [40];
matching rushees to sororities [37]; and assigning students to pub-
lic schools in Boston and New York City [54]. Most of these are
signiﬁcantly smaller than the scale demonstrated by our simulated
NRMP match, and we judge the cost of executing an NRMP-scale
match as an MPC to be well within reasonable bounds for such use
cases. We are optimistic that private stable matching protocols can
be applied to important matching processes in practice.
Availability
All of our code is available under the BSD 2-Clause Open Source
license from https://www.oblivc.org/matching.
Acknowledgments
The authors thank Samee Zahur for insightful conversations about
this work and assistance with Obliv-C and ORAM, and Elaine Shi
for constructive comments and advice. This work was partially
supported by grants from the National Science Foundation SaTC
program (NSF Award CNS-1111781 and TWC-1664445), the Air
Force Ofﬁce of Scientiﬁc Research, and Google.
8. REFERENCES
[1] Atila Abdulkadiro˘glu, Parag A Pathak, and Alvin E Roth.
The New York City High School Match. American Economic
Review, 2005.
[2] abhi shelat and Chih-Hao Shen. Fast Two-Party Secure
Computation with Minimal Assumptions. In ACM CCS,
2013.
[3] Chaitanya Bandela, Yu Chen, Andrew B. Kahng, Ion I.
M˘andoiu, and Alexander Zelikovsky. Multiple-object XOR
Auctions with Buyer Preferences and Seller Priorities. In
Competitive Bidding and Auctions. 2003.
[4] K. E. Batcher. Sorting Networks and Their Applications. In
Spring Joint Computer Conference, 1968.
[5] Mihir Bellare, Viet Tung Hoang, Sriram Keelveedhi, and
Phillip Rogaway. Efﬁcient Garbling from a Fixed-Key
Blockcipher. In IEEE Symposium on Security and Privacy,
2013.
[6] Marina Blanton, Aaron Steele, and Mehrdad Alisagari.
Data-oblivious Graph Algorithms for Secure Computation
and Outsourcing. In ACM Asia CCS, 2013.
[7] Luís T. A. N. Brandão. Secure Two-Party Computation with
Reusable Bit-Commitments, via a Cut-and-Choose with
Forge-and-Lose Technique. In ASIACRYPT, 2013.
[8] Niklas Buescher and Stefan Katzenbeisser. Faster Secure
Computation through Automatic Parallelization. In USENIX
Security Symposium, 2015.
[9] Canadian Resident Matching Service. The Match Algorithm.
http://www.carms.ca/en/residency/match-algorithm/, 2016.
[10] Ivan Damgård, Valerio Pastro, Nigel Smart, and Sarah
Zakarias. Multiparty Computation from Somewhat
Homomorphic Encryption. In CRYPTO. 2012.
[11] Daniel Demmler, Thomas Schneider, and Michael Zohner.
ABY —- a Framework for Efﬁcient Mixed-Protocol Secure
Two-Party Computation. In Network and Distributed
Systems Symposium, 2015.
[12] Sky Faber, Stanislaw Jarecki, Sotirios Kentros, and Boyang
Wei. Three-Party ORAM for Secure Computation. In
ASIACRYPT, 2015.
[13] Matthew Franklin, Mark Gondree, and Payman Mohassel.
Improved Efﬁciency for Private Stable Matching. In Topics
in Cryptology – CT-RSA, 2007.
[14] Tore Kasper Frederiksen, Thomas P Jakobsen, and
Jesper Buus Nielsen. Faster Maliciously Secure Two-Party
Computation Using the GPU. In Security and Cryptography
for Networks. 2014.
[15] David Gale and Lloyd S. Shapley. College Admissions and
the Stability of Marriage. The American Mathematical
Monthly, 69(1), 1962.
[16] Craig Gentry, Kenny A Goldman, Shai Halevi, Charanjit
Julta, Mariana Raykova, and Daniel Wichs. Optimizing
ORAM and Using it Efﬁciently for Secure Computation. In
Privacy Enhancing Technologies, 2013.
[17] Oded Goldreich, Silvio Micali, and Avi Wigderson. How to
Play any Mental Game or A Completeness Theorem for
Protocols with Honest Majority. In ACM Symposium on the
Theory of Computing, 1987.
[18] Oded Goldreich and Rafail Ostrovsky. Software Protection
and Simulation on Oblivious RAMs. Journal of the ACM,
43(3), 1996.
[19] Phillippe Golle. A Private Stable Matching Algorithm. In
Financial Cryptography and Data Security, 2006.
[20] S. Dov Gordon, Jonathan Katz, Vladimir Kolesnikov,
Fernando Krell, Tal Malkin, Mariana Raykova, and Yevgeniy
Vahlis. Secure Two-Party Computation in Sublinear
(amortized) Time. In ACM CCS, 2012.
[21] Dan Gusﬁeld and Robert W Irving. The Stable Marriage
Problem: Structure and Algorithms. MIT Press, 2003.
[22] Chih hao Shen and abhi shelat. Two-output secure
computation with malicious adversaries. In Eurocrypt 2011,
2011.
[23] Wilko Henecka, Stefan Kögl, Ahmad-Reza Sadeghi, Thomas
Schneider, and Immo Wehrenberg. TASTY: Tool for
Automating Secure Two-partY computations. In ACM CCS,
2010.
[24] Andreas Holzer, Martin Franz, Stefan Katzenbeisser, and
Helmut Veith. Secure Two-Party Computations in ANSI C.
In ACM CCS, 2012.
[25] Yan Huang, David Evans, Jonathan Katz, and Lior Malka.
Faster Secure Two-Party Computation using Garbled
Circuits. In USENIX Security Symposium, 2011.
[26] Yan Huang, Jonathan Katz, and David Evans. Efﬁcient
Secure Two-Party Computation Using Symmetric
Cut-and-Choose. In CRYPTO, 2013.
[27] Marcel Keller and Peter Scholl. Efﬁcient, Oblivious Data
Structures for MPC. In ASIACRYPT, 2014.
[28] Jon Kleinberg and Éva Tardos. Algorithm Design. 2005.
[29] Vladimir Kolesnikov and Thomas Schneider. Improved
Garbled Circuit: Free XOR Gates and Applications.
Automata, Languages and Programming, 2008.
[30] Benjamin Kreuter, abhi shelat, and Chih-Hao Shen.
Billion-Gate Secure Computation with Malicious
Adversaries. In 21st USENIX Security Symposium, 2012.
[31] Mei Liang. Director of Research, National Resident
Matching Program. Personal communication, May 2016.
[32] Yehuda Lindell. Fast Cut-and-Choose Based Protocols for
Malicious and Covert Adversaries. In CRYPTO, 2013.
[33] Yehuda Lindell and Benny Pinkas. A Proof of Security of
Yao’s Protocol for Two-Party Computation. Journal of
Cryptology, 22(2), 2009.
[34] Yehuda Lindell and Benny Pinkas. Secure Two-Party
Computation via Cut-and-Choose Oblivious Transfer. In
Theory of Cryptography Conference, 2011.
[35] Yehuda Lindell and Benny Pinkas. An Efﬁcient Protocol for
Secure Two-Party Computation in the Presence of Malicious
Adversaries. Journal of Cryptology, 28(2), 2015.
[36] Yehuda Lindell, Benny Pinkas, and Nigel P. Smart.
Implementing Two-Party Computation Efﬁciently with
Security Against Malicious Adversaries. In Sixth Conference
on Security and Cryptography for Networks, 2008.
[37] Susan Mongell and Alvin E. Roth. Sorority Rush as a
Two-Sided Matching Mechanism. American Economic
Review, 81(3), 1991.
[38] Benjamin Mood, Debayan Gupta, Henry Carter, Kevin
Butler, and Patrick Traynor. Frigate: A Validated, Extensible,
and Efﬁcient Compiler and Interpreter for Secure
Computation. In IEEE European Symposium on Security and
Privacy, 2016.
[39] Moni Naor and Kobbi Nissim. Communication Preserving
Protocols for Secure Function Evaluation. In STOC, 2001.
[40] National Matching Service. Current Clients.
https://natmatch.com/clients.html, 2016.
[41] National Resident Matching Program. 2016 Main Residency
Match. http://www.nrmp.org/wp-content/uploads/2016/04/
Main-Match-Results-and-Data-2016.pdf, 2016.
[42] Michael Ostrovsky. Stability in Supply Chain Networks.
American Economic Review, 98(3):897–923, June 2008.
[43] Benny Pinkas, Thomas Schneider, Nigel P. Smart, and
Stephen C. Williams. Secure Two-Party Computation Is
Practical. In ASIACRYPT, 2009.
[44] Eytan Ronn. NP-Complete Stable Matching Problems.
Journal of Algorithms, 11(2), 1990.
[45] Alvin E. Roth. The Evolution of the Labor Market for
Medical Interns and Residents: A Case Study in Game
Theory. Journal of Political Economy, 92:991–1016, 1984.
[46] Alvin E. Roth. Interim Report #1: Evaluation of the Current
NRMP Algorithm, and Preliminary Design of an
Applicant-Processing Algorithm.
https://web.stanford.edu/~alroth/interim1.html, 1996.
[47] Alvin E. Roth. Who Gets What—–and Why: The New
Economics of Matchmaking and Market Design. Houghton
Mifﬂin Harcourt, 2015.
[48] Alvin E. Roth and Elliott Peranson. The Redesign of the
Matching Market for American Physicians: Some
Engineering Aspects of Economic Design. American
Economic Review, 1999.
[49] Alvin E. Roth and John H. Vande Vate. Random Paths to
Stability in Two-Sided Matching. Econometrica,
58(6):1475–1480, 1990.
[50] Emil Stefanov, Marten Van Dijk, Elaine Shi, Christopher
Fletcher, Ling Ren, Xiangyao Yu, and Srinivas Devadas. Path
ORAM: an Extremely Simple Oblivious RAM Protocol. In
ACM CCS, 2013.
[51] Ben Terner. Stable Matching with PCF Version 2, an E´tude
in Secure Computation. Master’s thesis, U of Virginia, 2015.
[52] Tadanori Teruya and Jun Sakuma. Round-Efﬁcient Private
Stable Matching from Additive Homomorphic Encryption.
In Conference on Information Security, 2013.
[53] The Royal Swedish Academy of Sciences. Stable Matching:
Theory, Evidence, and Practical Design.
http://www.nobelprize.org/nobel_prizes/economic-sciences/
laureates/2012/popular-economicsciences2012.pdf, 2012.
[54] Tracy Tullis. How Game Theory Helped Improve New York
City’s High School Application Process. The New York
Times, 5 December, 2014.
[55] Abraham Waksman. A Permutation Network. Journal of the
ACM, 15(1), January 1968.
[56] Xiao Wang, Hubert Chan, and Elaine Shi. Circuit ORAM:
On Tightness of the Goldreich-Ostrovsky Lower Bound. In
ACM CCS, 2015.
[57] Xiao Shaun Wang, Yan Huang, T.-H. Hubert Chan, Abhi
Shelat, and Elaine Shi. SCORAM: Oblivious RAM for
Secure Computation. In ACM CCS, 2014.
[58] Andrew C. Yao. Protocols for Secure Computations. In
Symposium on Foundations of Computer Science, 1982.
[59] Andrew Chi-Chih Yao. How to Generate and Exchange
Secrets (Extended Abstract). In IEEE Symposium on
Foundations of Computer Science, 1986.
[60] Samee Zahur and David Evans. Circuit Structures for
Improving Efﬁciency of Security and Privacy Tools. In IEEE
Symposium on Security and Privacy, 2013.
[61] Samee Zahur and David Evans. Obliv-C: A Lightweight
Compiler for Data-Oblivious Computation. Cryptology
ePrint Archive, Report 2015/1153. http://oblivc.org, 2015.
[62] Samee Zahur, Mike Rosulek, and David Evans. Two Halves
Make a Whole: Reducing Data Transfer in Garbled Circuits
Using Half Gates. In EUROCRYPT, 2015.
[63] Samee Zahur, Xiao Wang, Mariana Raykova, Adrià Gascón,
Jack Doerner, David Evans, and Jonathan Katz. Revisiting
Square Root ORAM: Efﬁcient Random Access in
Multi-Party Computation. In IEEE Symposium on Security
and Privacy, 2016.