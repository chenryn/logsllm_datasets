smartcard
Smartcard
Smartcard
forged
forged
≥1
≥1
&
&
Malice uses
Malice uses
smartcard
smartcard
with correct
with correct
machine
machine
Authorised
Authorised
user
user
impersonated
impersonated
Figure 4. Malice subverts authorisation
process
Compromising the authorisation service so that
Malice is able to obtain permissions to which she is
not entitled can only be achieved if she either changes
the access-control matrix or
the
asynchronous, time-free Byzantine-agreement protocol
used by the authorisation service, together with the
threshold-cryptographic protocol used to protect its
secret key and thus its digital signatures.
subverts
she
Changing the access-control matrix could be
achieved if either there is a conspiracy of sufficient
system administrators working in Malice’s interest or
Malice can crack the threshold-cryptography scheme
used to scatter and encrypt the contents of the matrix.
Administrator conspiracies are a social engineering
problem that falls outside the technical jurisdiction of
MAFTIA and so we do not consider this type of attack
further.
Breaking the matrix scatter and encryption scheme
requires Malice to control and understand the
programmed semantics of t+1 hosting sites, where t is
the intrusion resilience threshold above which the
intrusion tolerance of the access matrix fails. Malice
would also need to overcome the distributed diversity
of the hosting sites. All of this taken together is
regarded as a non-trivial problem with sufficient work
factors to deter the attacker.
For Malice to obtain (forged) capabilities and
vouchers, she needs to break the asynchronous
Byzantine-protocol of the authorisation service and
crack the threshold-cryptographic scheme for deriving
the necessary secret key to sign capabilities and
not be possible (practically) for the attacker to realise a complete
fake transaction.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
vouchers. The resilience  of the authorisation service as
a whole to attack depends on the diversity of the
underlying servers, which are grouped together
according to  one or more sets of attribute values [13].
The protocols can tolerate the failure of  an entire set of
servers within each attribute class. Again, host site
diversity can also be brought into play to frustrate
Malice.
As an alternative to attacking the authorisation
server, Malice could instead attempt to impersonate
another authorised user by stealing or forging that
user’s smartcard. The authorisation server can provide
no guarantees about the behaviour of a compromised
user, but it can prevent the compromised user from
interfering with the activities of legitimate users.
the card is
stolen,
application (in this
The security of a smartcard and its PIN is the
responsibility of the authorised cardholder. Loss of the
card and its PIN cannot be protected by MAFTIA’s
technical defenses alone. The cardholder has two
essential responsibilities in this respect: (i) to always
keep the card in a safe place; and (ii) to never reveal its
then the
PIN. If, however,
MAFTIA-compliant
case,
TRADEZONE) should  require the cardholder to report
its loss to the security administration as soon as
possible so that the certificate for the card (held on the
card itself and known by the authorisation service) can
be revoked. Additionally, the PIN that enables the card
to be authenticated to a local reference monitor must
never be allowed to be given incorrectly more than,
say, three times without being revoked. Such policies
accord with standard ATM banking practice. Such a
security policy will of course require cooperation
between the logic on the card, the reference monitor on
a host,
the
authentication service.
security administration, and
the
The act of forging  a smartcard is considerably more
difficult
than stealing an existing card. Although
technical attacks on smart cards are known to  exist (see
for example, Chapter 14 of Anderson [14]), they are
assumed to be beyond the resources of Malice. In any
case, even if Malice were to be able to break into a
smart card and steal the private keys it contained, she
would still not be able to generate false permissions to
access other MAFTIA hosts because this would require
knowledge of the private key for the authentication
server, which is not stored on the smart card [12].
Rather than attempting to forge a smart card for an
existing user, Malice would sensibly choose the easier
option of stealing the card and deriving its PIN.
However, in either case,  before Malice was able to use
the forged or stolen card, she would also have to defeat
the certificate-based host-authorisation mechanism used
by the Java card, or gain physical access to her
victim’s machine, which is another obstacle for her to
overcome.
4. Related work
Traditionally, security is concerned with intrusion
prevention rather  than intrusion tolerance, but the idea
of combining security techniques with fault tolerance
techniques has gained increasing momentum in recent
years and has  been explored in a number of initiatives
on trustworthy and survivable computing, including
the DARPA OASIS programme. However, to the best
of our knowledge, MAFTIA was the first project that
uniformly applied the ‘tolerance paradigm’ to the
dependability of complete large-scale applications in a
hostile environment and not just to single components
of such systems. For a general overview of intrusion
tolerance concepts, see Veríssimo et al. [15].
The DELTA-4 project [16] was one of the first
attempts to build a fully functional distributed, secure
and robust replicated system. It developed a general
architecture for dependable distributed  systems. Part of
the architecture [17] provided intrusion-tolerant
services for data storage with secured access to
authenticated, authorised users. Secrecy was afforded
by encryption and data fragmentation, and availability
by replicated data-fragments. Secret encryption key
sharing was supported, but no computations on shared
secrets or
robust protocols were implemented.
DELTA-4 assumed a synchronous communications
network.
Assumptions about synchrony can be exploited by
an attacker (e.g., by attacking the failure detectors), but
using Byzantine-agreement protocols
to build
intrusion-tolerant systems over an asynchronous
network requires finding a way of circumventing the
famous FLP impossibility result [18]. Castro and
Liskov propose a practical approach to  Byzantine fault-
tolerance that sacrifices liveness for safety [19], but
MAFTIA uses a non-deterministic asynchronous
atomic-broadcast protocol that is able to maintain
safety and liveness at the same time. In contrast,
COCA [20]
is an intrusion-tolerant certification
authority built using Byzantine quorums, a weaker
form of agreement.
Byzantine protocols allow for arbitrary failures, but
can only tolerate a certain number of simultaneous
failures. Diversity can be used at both design-time and
run-time to reduce the likelihood of an attacker being
able to exploit a common vulnerability, but unless the
system can adapt
its behaviour in response to
previously unknown attacks, a determined attacker will
eventually be able to bring the whole system down.
Thus, diversity must be coupled with adaptive learning
strategies. The ITUA project [21] investigated the use
of unpredictability and adaptation to increase intrusion
tolerance, and there is a new DARPA programme on
Self-Regenerative Systems that is calling for research
into areas such as biologically-inspired diversity and
cognitive immunity and self-healing.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
Bruce Schneier [22] first described the notion of
using fault trees to analyse possible attack-scenarios
and introduced the term attack trees to describe a fault
tree used in this way. As the generation of attack trees
is a laborious task, there has been interest in trying to
reuse existing fault-trees. For example, Moore et al.
[23]
investigated creating reusable attack-trees
annotated with pre-  and post-conditions that they term
attack patterns.
The generation of fault trees is a task that depends
upon human expertise and judgment. An alternative
approach is to automatically generate attack scenarios
and recent work by Sheyner et al. [24] has looked at
modelling a system and its vulnerabilities and then
using model checking to derive attack graphs. This is
an approach that could be expected to generate attack
scenarios not anticipated by a group of human experts.
However, there are still  the difficulties of dealing with
state-space explosions and knowing that all
the
vulnerabilities have been identified.
5. Conclusions and future research
fault
tolerance
techniques,
This paper has presented MAFTIA’s approach to
building intrusion tolerant systems in terms of
classical
thereby
highlighting a number of key design principles for
building intrusion tolerant systems. These include: the
use of a “defence in depth” strategy, a hybrid failure-
model that allows systems to be build from a mixture
of trusted and untrusted components, measures to
increase trust such as the use of Byzantine-agreement
protocols, and measures to decrease the reliance on
trust such as the use of error confinement mechanisms
to prevent intrusions from propagating throughout a
system. Detailed discussions of all these models and
techniques can be found in the relevant MAFTIA
deliverables, which are available at www.maftia.org
[25].
Because of the difficulties of building reliable error-
detection mechanisms in a hostile environment and the
problems posed for state-based error-recovery methods
by long latency of error detection and malicious
dormant-faults, MAFTIA has concentrated on
achieving intrusion tolerance using error-compensation
mechanisms based on masking. However, the success
of these measures depends on the use of hybrid failure-
assumptions and claims about diversity. Thus, three
important areas for future research are:
(cid:127) developing techniques
for ensuring and
measuring diversity in the presence of
malicious faults,
(cid:127) improving the quality of
error-detection
mechanisms so as to make state-based error-
recovery techniques feasible as a means of
intrusion tolerance, and finally,
(cid:127) finding solutions to the problems of
long
latency of error detection and malicious
dormant-faults.
6. References
[1] D. Powell, A. Adelsbach, C. Cachin, S. Creese,
M. Dacier, Y. Deswarte, T. McCutcheon, N. Neves,
B. Pfitzmann, B. Randell, R. Stroud, P. Veríssimo,
and M. Waidner,
and
A c c i d e n t a l - F a u l t
I n t e r n e t
Applications)”, in Supplement of the 2001 Int. Conf.
on Dependable Systems and Networks (DSN'2001),
(Göteborg, Sweden), pp.D32-D35, 2001.
“MAFTIA (Malicious-
T o l e r a n c e
f o r
[2] D. Powell and R.  J. Stroud (Eds.), Conceptual Model
and Architecture of MAFTIA, MAFTIA Project,
Deliverable D21, 2003.
[3] A. Avizienis,
J.-C. Laprie, and B. Randell,
Fundamental Concepts of Dependability, Research
Report no. 01145 (Revision 1: December 2002),
LAAS-CNRS, August 2001 (UCLA CSD Report no.
010028; Newcastle University Report
no.
CS-TR-739).
[4] M. Dacier (Ed.), Design of an Intrusion-Tolerant
Intrusion Detection System, MAFTIA Project,
Deliverable D10, 2002.
[5] N. F. Neves and P. Veríssimo (Eds.), Complete
Specification of APIs and Protocols for the MAFTIA
Middleware, MAFTIA Project, Deliverable D9, 2002.
[6] L. Cheuk Lung, M. Correia, N. Neves, and
P. Veríssimo, “A Simple Intrusion-Tolerant Reliable
in Simpósio
Multicast Protocol using the TTCB”,
Brasileiro de Redes de Computadores,
(Natal,
Brasil), 2003.
[7] C. Cachin, K. Kursawe, and V. Shoup, “Random
oracles in Constantinople: Practical asynchronous
Byzantine agreement using cryptography”, in Proc.
19th ACM Symposium on Principles of Distributed
Computing (PODC), pp.123-132, 2000.
[8] Y. Deswarte, N. Abghour, V. Nicomette, and
D. Powell, “An Intrusion-Tolerant Authorization
Scheme for Internet Applications”, in Supplement o f
the 2002 International Conference on Dependable
Systems and Networks (DSN'2002), (Washington,
D.C. (USA)), pp.C.1.1-C.1.6, IEEE CS Press, 2002.
[9] MAFTIA, Reference Model and Use Cases,
Deliverable D1, MAFTIA Project, 2000.
[10] N. Storey, Safety-Critical Computer Systems,
Addison-Wesley Longman, Essex, England, 1996.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply. 
[11] I. S. Welch, J. P. Warne, P. Y. A. Ryan, and
R. J. Stroud, Architectural Analysis of MAFTIA's
Intrusion Tolerance Capabilities, MAFTIA Project,
Deliverable D99, January 2003.
[12] N. Abghour, Y. Deswarte, V. Nicomette, and
D. Powell, Design of the Local Reference Monitor,
MAFTIA Project, Deliverable D6, April 2002.
[13] C. Cachin (Ed.), Specification of Dependable
Trusted Third Parties, MAFTIA Project, Deliverable
D26, 2001.
[14] R. J. Anderson, Security Engineering: a Guide t o
Building Dependable Distributed Systems, Wiley
Computer Publishing, 2001.
[15] P. J. Veríssimo, N. F. Neves, and M. Correia,
“Intrusion-Tolerant Architectures: Concepts and
in Architecting Dependable Systems,
Design”,
(R. Lemos, C. Gacek, and A. Romanovsky, Eds.),
2677, Lecture Notes in Computer Science, Springer-
Verlag, 2003.
[16] D. Powell, G. Bonn, D. Seaton, P. Veríssimo, and
F. Waeselynck,
t o
Dependability in Open Distributed Computing
Systems”, in 18th IEEE Int. Symp. on Fault-Tolerant
Computing Systems (FTCS-18),
Japan),
pp.246-251, IEEE CS Press, 1988.
“The Delta-4 Approach
(Tokyo,
[17] Y. Deswarte, L. Blain, and J.-C. Fabre, “Intrusion
in Symp. o n
Tolerance in Distributed Systems”,
Research in Security and Privacy, (Oakland, CA,
USA), pp.110-121, IEEE CS Press, 1991.
[18] M. J. Fischer, N. A. Lynch, and M. S. Paterson,
“Impossibility of Distributed Consensus with One
Faulty Process”, Journal of the ACM, 32 (2), pp.374-
382, 1985.
[19] M. Castro and B. Liskov, “Practical Fault Tolerance”,
in Third Symposium on Operating Systems Design
and Implementation (OSDI), (New Orleans), pp.173-
186, Usenix Association, IEEE TCOS and ACM
SIGOPS, 1999.
[20] L. Zhou, F.  B. Schneider, and R. v. Renesse, “COCA:
A Secure Distributed On-line Certification
Authority”, ACM Transactions on Computer
Systems, 20 (4), pp.329-368, 2002.
[21] M. Cukier, T. Courtney, J. Lyons, H. V. Ramasamy,
W. H. Sanders, M. Seri, M. Atighetchi, P. Rubel,
C. Jones, F. Webber, P. Pal, R. Watro, and J. Gossett,
“Providing Intrusion Tolerance with ITUA”,
in
Supplement of
the 2002 International Conference
on Dependable Systems and Networks (DSN'2002),
(Washington, DC), IEEE CS Press, 2002.
[22] B. Schneier, “Attack Trees”, Dr Dobb's Journal of
Software Tools, 12 (Dec 1999), pp.21-29, 1999.
[23] A. P. Moore, R. J. Ellison, and R. C. Linger, Attack
M o d e l i n g
and
Survivability, CMU/SEI-2001-TN-001, ADA388771,
Software Engineering Institute, Carnegie Mellon
University, 2001.
Information
f o r
Security
[24] O. Sheyner, J. W. Haines, S. Jha, R. Lippmann, and
J. M. Wing,  “Automated Generation and Analysis of
in Symposium on Security and
Attack Graphs”,
Privacy, pp.273-284, IEEE, 2002.
[25] MAFTIA Project Web Site, http://www.maftia.org
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:32 UTC from IEEE Xplore.  Restrictions apply.