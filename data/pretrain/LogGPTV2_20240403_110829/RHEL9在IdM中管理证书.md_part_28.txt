    主体，指定要存储证书的输出文件，以及可选的证书配置集。指定您要发布证书的
    IdM 子 CA。例如，要为
    `idm_user`{.literal}@`IDM.EXAMPLE.COM`{.literal} 主体从
    `webclient-ca`{.literal} 获取 `IECUserRoles`{.literal}
    配置集的证书（这个配置集带有添加了用户角色扩展），并将证书保存到
    `~/idm_user.pem`{.literal} 文件中：
    ``` literallayout
    # ipa cert-request certificate_request.csr --principal=PI:EMAIL --profile-id=IECUserRoles --ca=webclient-ca --certificate-out=~/idm_user.pem
    ```
5.  将证书添加到 NSS 数据库。使用 `-n`{.literal} 选项设置您在之前创建的
    CSR 时使用的相同 nickname，以便证书与 NSS
    数据库中的私钥匹配。`t`{.literal} 选项设定信任级别。详情请查看
    certutil(1)man page。`-i`{.literal}
    选项指定输入证书文件。例如，要将带有在 `~/idm_user.pem`{.literal}
    文件中定义的 `idm_user`{.literal} 别名的证书添加到
    `~/certdb/`{.literal} 数据库的 NSS数据库：
    ``` literallayout
    # certutil -A -d ~/certdb/ -n idm_user -t "P,," -i ~/idm_user.pem
    ```
6.  验证 NSS 数据库中的密钥是否未显示 `（孤立）`{.literal} 作为其
    nickname。例如，要验证 `~/certdb/`{.literal}
    数据库中存储的证书没有孤立：
    ``` literallayout
    # certutil -K -d ~/certdb/
     rsa      5ad14d41463b87a095b1896cf0068ccc467df395   NSS Certificate DB:idm_user
    ```
7.  使用 `pk12util`{.literal} 命令将证书从 NSS 数据库导出到 PKCS12
    格式。例如，要将来自 `/root/certdb`{.literal} NSS 数据库的带有
    `idm_user`{.literal} 别名的证书导出到 `~/idm_user.p12`{.literal}
    文件中：
    ``` literallayout
    # pk12util -d ~/certdb -o ~/idm_user.p12 -n idm_user
    Enter Password or Pin for "NSS Certificate DB":
    Enter password for PKCS12 file:
    Re-enter password:
    pk12util: PKCS12 EXPORT SUCCESSFUL
    ```
8.  将证书传送到您希望启用 `idm_user`{.literal} 的证书身份验证的主机：
    ``` literallayout
    # scp ~/idm_user.p12 PI:EMAIL:/home/idm_user/
    ```
9.  在传输证书的主机上，为了安全起见，使 .pkcs12
    文件存储在其中的目录将无法访问\"其他\"组：
    ``` literallayout
    # chmod o-rwx /home/idm_user/
    ```
10. 出于安全考虑，请从服务器中删除临时 NSS 数据库和 .pkcs12 文件：
    ``` literallayout
    # rm ~/certdb/
    # rm ~/idm_user.p12
    ```
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#configuring-browser-for-cert-auth_restricting-an-application-to-trust-a-subset-of-certs}配置浏览器以启用证书身份验证 {.title}
:::
要在使用 WebUI 登录到 Identity
Management(IdM)时，可以使用证书进行身份验证，您需要将该用户和相关证书颁发机构(CA)证书导入到
Mozilla Firefox 或 Google Chrome 浏览器。浏览器运行的主机本身不需要是
IdM 域的一部分。
IdM 支持以下浏览器来连接 WebUI：
::: itemizedlist
-   Mozilla Firefox 38 及更新的版本
-   Google Chrome 46 及更新的版本
:::
以下流程演示了如何配置 Mozilla Firefox 57.0.1 浏览器。
::: itemizedlist
**先决条件**
-   您有您要导入到浏览器
    [的用户证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#requesting-and-exporting-a-user-certificate_restricting-an-application-to-trust-a-subset-of-certs "请求新用户证书并将其导出到客户端"){.link}，使用
    PKCS#12 格式。
-   您已 [下载了 sub-CA
    证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#downloading-the-sub-CA-certificate-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 下载子 CA 证书"){.link}，并使其采用
    PEM 格式处理。
:::
::: orderedlist
**步骤**
1.  打开 Firefox，然后导航到 `Preferences`{.literal} →
    `Privacy & Security`{.literal}。
    ::: figure
    []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#privacy-security_restricting-an-application-to-trust-a-subset-of-certs}
    **图 17.8. 首选项中的隐私和安全部分**
    ::: figure-contents
    ::: mediaobject
    ![突出显示 Firefox 设置页面的截图和\"Privacy &
    Security\"选项。](images/privacy_and_security.png)
    :::
    :::
    :::
2.  [单击查看证书]{.guibutton}。
    ::: figure
    []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#view-certificates_restricting-an-application-to-trust-a-subset-of-certs}
    **图 17.9. 查看隐私和安全中的证书**
    ::: figure-contents
    ::: mediaobject
    ![在右上\"证书\"部分和\"查看证书\"按钮的截图将被突出显示。](images/view_certificates.png)
    :::
    :::
    :::
3.  在 `证书`{.literal} 选项卡中，单击 [导入]{.guibutton}。以 PKCS12
    格式查找并打开用户证书，然后点 [OK]{.guibutton} 和
    [OK]{.guibutton}。
4.  要确保您的 IdM 子 CA 被 Firefox 识别为可信颁发机构，请导入在[从 IdM
    WebUI 下载子
    CA证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#downloading-the-sub-CA-certificate-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 下载子 CA 证书"){.link}部分中保存的
    IdM 子 CA 证书作为可信证书颁发机构证书：
    ::: orderedlist
    1.  打开 Firefox，导航到首选项，然后单击 [Privacy &
        Security]{.guibutton}。
        ::: figure
        []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#privacy-security-2_restricting-an-application-to-trust-a-subset-of-certs}
        **图 17.10. 首选项中的隐私和安全部分**
        ::: figure-contents
        ::: mediaobject
        ![隐私和安全](images/privacy_and_security.png)
        :::
        :::
        :::
    2.  [单击查看证书]{.guibutton}。
        ::: figure
        []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#view-certificates-2_restricting-an-application-to-trust-a-subset-of-certs}
        **图 17.11. 查看隐私和安全中的证书**
        ::: figure-contents
        ::: mediaobject
        ![\"Certificates\"部分的截图。右下方的\"查看证书\"按钮将突出显示。](images/view_certificates.png)
        :::
        :::
        :::
    3.  在 `颁发机构`{.literal} 选项卡中，点
        [Import]{.guibutton}。找到并打开子 CA
        证书。信任证书来识别网站，然后点[OK]{.guibutton} 和
        [OK]{.guibutton}。
    :::
:::
:::
:::
[]{#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm}第 18 章 快速地无效相关证书组 {.title}
:::
作为系统管理员，如果要无法快速使相关证书组无效：
::: itemizedlist
-   设计您的应用程序，以便它们只信任由特定轻量级身份管理(IdM)子 CA
    发布的证书。之后，您可以通过只撤销发布这些证书的 Identity
    Management(IdM)子 CA 的证书，使所有这些证书无效。有关如何在 IdM
    中创建和使用轻量级子 CA 的详情，请参考
    [快速评估特定组相关证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html "第 17 章 将应用程序限制为只信任证书子集"){.link}。
-   为确保被接收的 IdM 子 CA
    发布的所有证书都被立即无效，请配置依赖此类证书的应用程序使用 IdM
    OCSP 响应者。例如，要将 Firefox 浏览器配置为使用 OCSP 响应器，请确保
    `Query OCSP 响应器服务器来确认在 Firefox 首选项中检查证书复选框的当前有效`{.literal}。
    在 IdM 中，证书撤销列表(CRL)会每四个小时更新一次。要使由一个 IdM 子
    CA 签发的所有证书都失效，[撤销 IdM sub-CA
    证书](#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#revoking-certificates-with-the-integrated-IdM-CAs_managing-the-validity-of-certificates-in-idm "吊销带有集成 IdM CA 的证书"){.link}。另外，[禁用相关的
    CA
    ACL](#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html#disabling-CA-ACLs-in-IdM-CLI_invalidating-a-specific-group-of-related-certificates-quickly "在 IdM CLI 中禁用 CA ACL"){.link}，并考虑
    [禁用 IdM 子
    CA](#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html#disabling-an-IdM-sub-CA_invalidating-a-specific-group-of-related-certificates-quickly "禁用 IdM 子 CA"){.link}。禁用子
    CA 可防止子 CA 发布新证书，但会允许线证书状态协议 (OCSP)
    对之前发布的证书进行响应，这是因为子 CA 的签名密钥被保留。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果您的环境中使用 OCSP，则不要删除子 CA。删除子 CA 会删除子 CA
的签名密钥，防止为由该子 CA 发布的证书生产环境 OCSP 响应。
当删除子 CA 时，最好最好使用同一对象区分名称(DN)创建新子
CA，但新签名密钥。
:::
::: section
::: titlepage
# []{#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html#disabling-CA-ACLs-in-IdM-CLI_invalidating-a-specific-group-of-related-certificates-quickly}在 IdM CLI 中禁用 CA ACL {.title}
:::
当您要停用 IdM 服务或 IdM 服务组时，请考虑禁用任何现有对应的 CA ACL。
完成本节，以禁用
[TLS_web_server_authentication](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-CA-ACL-for-web-servers-authenticating-to-web-clients-using-certificates-issued-by-webserver-ca_restricting-an-application-to-trust-a-subset-of-certs "使用由 webserver-ca 发布的证书为 Web 服务器创建 CA ACL"){.link}
CA ACL，该 ACL 限制您的 IdM 客户端上运行的 Web 服务器，以请求由
`webserver-ca`{.literal} IdM 子 CA 发布的证书，并禁用
[TLS_web_client_authentication](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-CA-ACL-for-user-web-browsers-authenticating-to-web-servers-using-certificates-issued-by-webclient-ca_restricting-an-application-to-trust-a-subset-of-certs "使用 webclient-ca 发布的证书为用户 Web 浏览器创建 CA ACL"){.link}
CA ACL，以请求 `webclient-ca`{.literal} IdM 子 CA 发出用户证书。
::: orderedlist
**步骤**
1.  另外，要查看您的 IdM 环境中所有 CA ACL，请输入
    `ipa caacl-find`{.literal} 命令：
    ``` literallayout
    $ ipa caacl-find
    -----------------
    3 CA ACLs matched
    -----------------
      ACL name: hosts_services_caIPAserviceCert
      Enabled: TRUE
      ACL name: TLS_web_server_authentication
      Enabled: TRUE
      ACL name: TLS_web_client_authentication
      Enabled: TRUE
    ```
2.  另外，要查看 CA ACL 的详情，请输入 `ipa caacl-show`{.literal}
    命令，并指定 CA ACL 名称：
    ``` literallayout
    $ ipa caacl-show TLS_web_server_authentication
      ACL name: TLS_web_server_authentication
      Description: CAACL for web servers authenticating to web clients using certificates issued by webserver-ca
      Enabled: TRUE
      CAs: webserver-ca
      Profiles: caIPAserviceCert
      Services: HTTP/PI:EMAIL
    ```
3.  要禁用 CA ACL，请输入 `ipa caacl-disable`{.literal} 命令，并指定 CA
    ACL 名称。
    ::: itemizedlist
    -   要禁用 [**TLS_web_server_authentication**]{.strong} CA
        ACL，请输入：
        ``` literallayout
        $ ipa caacl-disable TLS_web_server_authentication
        -------------------------------------------------
        Disabled CA ACL "TLS_web_server_authentication"
        -------------------------------------------------
        ```
    -   要禁用 [**TLS_web_client_authentication**]{.strong} CA
        ACL，请输入：
        ``` literallayout
        $ ipa caacl-disable TLS_web_client_authentication
        -------------------------------------------------
        Disabled CA ACL "TLS_web_client_authentication"
        -------------------------------------------------
        ```
    :::
    现在唯一启用的 CA ACL 是
    [**hosts_services_caIPAserviceCert**]{.strong} CA ACL。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    禁用 `hosts_services_caIPAserviceCert`{.literal} CA ACL
    时，请特别小心。如果禁用了
    `hosts_services_caIPAserviceCert`{.literal}，且没有其他使用带有
    `caIPAserviceCert`{.literal} 配置集的 `ipa`{.literal} CA 的 CA ACL
    授权 IdM 服务器时，在续订 IdM `HTTP`{.literal} 和 `LDAP`{.literal}
    证书时会失败。已过期的 IdM `HTTP`{.literal} 和 `LDAP`{.literal}
    证书最终会导致 IdM 系统失败。
    :::
:::
:::
::: section
::: titlepage
# []{#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html#disabling-an-IdM-sub-CA_invalidating-a-specific-group-of-related-certificates-quickly}禁用 IdM 子 CA {.title}
:::
在撤销 IdM 子 CA 的 CA 证书后，使该子 CA
发布的所有证书无效，如果您不再需要 IdM 子 CA，请考虑禁用 IdM 子
CA。您可以稍后重新启用子 CA。
禁用子 CA 可防止子 CA 发布新证书，但会允许线证书状态协议 (OCSP)
对之前发布的证书进行响应，这是因为子 CA 的签名密钥被保留。
::: itemizedlist
**先决条件**
-   以 IdM 管理员身份登录。
:::
::: itemizedlist
**步骤**