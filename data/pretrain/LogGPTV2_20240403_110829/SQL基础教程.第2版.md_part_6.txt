product_name VARCHAR(100) NOT NULL,
product_type VARCHAR(32) NOT NULL,
KEYWORD 数据类型的右侧设置了NOT NULL约束。NULL是代表空白（无
●NOT NULL约束
记录）的关键字A。在NULL之前加上了表示否定的NOT，就是给该列
●NULL
设置了不能输入空白，也就是必须输入数据的约束（如果什么都不输入
注A
NULL这个词是无或空的意思， 就会出错）。
NULL是使用SQL时的常见关键
这样一来，Product表的product_id（商品编号）列、product_
字，请大家牢记。
name（商品名称）列和product_type（商品种类）列就都成了必须
输入的项目。
另外，在创建Product表的CREATE TABLE语句的后面，还有
下面这样的记述。
PRIMARY KEY (product_id)
KEYWORD 这是用来给product_id列设置主键约束的。所谓键，就是在指
●主键约束
定特定数据时使用的列的组合。键种类多样，主键（primary key）就是可
●键
●主键 以特定一行数据的列B。也就是说，如果把product_id列指定为主键，
注B 就可以通过该列取出特定的商品数据了。
特定一行数据，也可以说是唯一
反之，如果向product_id列中输入了重复数据，就无法取出唯
确定一行数据。
一的特定数据了（因为无法确定唯一的一行数据）。这样就可以为某一列
设置主键约束了。
1-5 表的删除和更新 37 ●
第1章 数据库和SQL
1-5
表的删除和更新
● 使用DROP TABLE语句来删除表。
学习要点
● 使用ALTER TABLE语句向表中添加列或者从表中删除列。
表的删除（ 语句）
DROP TABLE
KEYWORD 此前介绍的都是关于Product表的内容的创建，下面我们就来介绍
●DROP TABLE语句
一下删除表的方法。删除表的SQL语句非常简单，只需要一行
DROP TABLE语句即可。
语法1-3 删除表时使用的DROP TABLE语句
DROP TABLE ；
如果想要删除Product表，只需要像代码清单1-3那样书写SQL
语句即可A。
注A
代码清单1-3 删除Product表
随后还需使用Product表来学习
相关知识，请不要删除Product DROP TABLE Product;
表。如果已经删除，请重新创建
Product表。
DROP在英语中是“丢掉”“舍弃”的意思。需要特别注意的是，删
除的表是无法恢复的B。即使是被误删的表，也无法恢复，只能重新创建，
注B
其实很多RDBMS都预留了恢复的 然后重新插入数据。
功能，但还是请大家认为是无法
恢复的。 如果不小心删除了重要的业务表，那就太悲剧了。特别是存储了大量
数据的表，恢复起来费时费力，请大家务必注意！
法则1-12
删除了的表是无法恢复的。
在执行DROP TABLE语句之前请务必仔细确认。
● 38 第1章 数据库和SQL
表定义的更新（ 语句）
ALTER TABLE
有时好不容易把表创建出来之后才发现少了几列，其实这时无需把表删
KEYWORD 除再重新创建，只需使用变更表定义的ALTER TABLE语句就可以了。
●ALTER TABLE语句
ALTER在英语中就是“改变”的意思。下面就给大家介绍该语句通常的使
用方法。
首先是添加列时使用的语法。
语法1-4 添加列的ALTER TABLE语句
ALTER TABLE  ADD COLUMN ；
特定的SQL
Oracle和SQL Server中不用写COLUMN。
ALTER TABLE  ADD ；
另外，在Oracle中同时添加多列的时候，可以像下面这样使用括号。
ALTER TABLE  ADD （，，……）；
例如，我们可以使用代码清单1-4中的语句在Product表中添加这
样一列，product_name_pinyin（商品名称（拼音）），该列可以存
储100位的可变长字符串。
代码清单1-4 添加一列可以存储100位的可变长字符串的product_name_pinyin列
DB2 PostgreSQL MySQL
ALTER TABLE Product ADD COLUMN product_name_pinyin VARCHAR(100);
Oracle
ALTER TABLE Product ADD (product_name_pinyin VARCHAR2(100));
SQL Server
ALTER TABLE Product ADD product_name_pinyin VARCHAR(100);
反之，删除表中某列使用的语法如下所示。
语法1-5 删除列的ALTER TABLE语句
ALTER TABLE  DROP COLUMN ；
1-5 表的删除和更新 39 ●
特定的SQL
Oracle中不用写COLUMN。
ALTER TABLE  DROP ；
另外，在Oracle中同时删除多列的时候，可以像下面这样使用括号来实现。
ALTER TABLE  DROP （，，……）；
例如，我们可以使用代码清单1-5中的语句来删除之前添加的
product_name_pinyin列。
代码清单1-5 删除product_name_pinyin列
SQL Server DB2 PostgreSQL MySQL
ALTER TABLE Product DROP COLUMN product_name_pinyin;
Oracle
ALTER TABLE Product DROP (product_name_pinyin);
ALTER TABLE语句和DROP TABLE语句一样，执行之后无法恢复。
误添的列可以通过ALTER TABLE语句删除，或者将表全部删除之后
重新再创建。
法则1-13
表定义变更之后无法恢复。
在执行ALTER TABLE语句之前请务必仔细确认。
向 表中插入数据
Product
最后让我们来尝试一下向表中插入数据。从下一章开始，大家将会使
用插入到Product表中的数据，来学习如何编写操作数据的SQL语句。
向Product表中插入数据的SQL语句如代码清单1-6所示。
● 40 第1章 数据库和SQL
代码清单1-6 向Product表中插入数据的SQL语句
SQL Server PostgreSQL
-- DML：插入数据
BEGIN TRANSACTION;—————————①
INSERT INTO Product VALUES ('0001', 'T恤衫', '衣服',
1000, 500, '2009-09-20');
INSERT INTO Product VALUES ('0002', '打孔器', '办公用品',
500, 320, '2009-09-11');
INSERT INTO Product VALUES ('0003', '运动T恤', '衣服',
4000, 2800, NULL);
INSERT INTO Product VALUES ('0004', '菜刀', '厨房用具',
3000, 2800, '2009-09-20');
INSERT INTO Product VALUES ('0005', '高压锅', '厨房用具',
6800, 5000, '2009-01-15');
INSERT INTO Product VALUES ('0006', '叉子', '厨房用具',
500, NULL, '2009-09-20');
INSERT INTO Product VALUES ('0007', '擦菜板', '厨房用具',
880, 790, '2008-04-28');
INSERT INTO Product VALUES ('0008', '圆珠笔', '办公用品',
100, NULL,'2009-11-11');
COMMIT;
表示下一行接续本行，只是由于版面所限而换行。
特定的SQL
DBMS不同，代码清单1-6中的DML语句也略有不同。
在MySQL中运行时，需要把①中的BEGIN TRANSACTION;改写成
START TRANSACTION;
在Oracle和DB2中运行时，无需使用①中的BEGIN TRANSACTION;（请予以
删除）。
这些在不同的DBMS中使用的DML语句，都保存在本书示例程序Sample\
CreateTable\文件夹下的CreateTableProduct.sql文件中。
使用插入行的指令语句INSERT，就可以把表1-2中的数据都插入到
表中了。开头的BEGIN TRANSACTION语句是开始插入行的指令语句，
结尾的COMMIT语句是确定插入行的指令语句。这些指令语句将会在第
4章详细介绍，大家不必急于记住这些语句。
1-5 表的删除和更新 41 ●
专 栏
表的修改
本节将名为Product的表作为例子进行了讲解，估计会有些读者在匆忙中
把表名误写成了Poduct，创建出了名称错误的表，这可怎么办呢？
如果还没有向表中插入数据，那么只需要把表删除，再重新创建一个名称正
确的表就可以了。可是如果在发现表名错误之前就已经向表中插入了大量数据，
再这样做就麻烦了。毕竟插入大量的数据既费时又费力。抑或起初决定好的表名，
之后又觉得不好想换掉，这种情况也很麻烦。
KEYWORD 其实很多数据库都提供了可以修改表名的指令（RENAME）来解决这样的问
●RENAME 题。例如，如果想把Poduct表的名称变为Product，可以使用代码清单1-A
中的指令。
代码清单1-A 变更表名
Oracle PostgreSQL
ALTER TABLE Poduct RENAME TO Product;
DB2
RENAME TABLE Poduct TO Product;
SQL Server
sp_rename 'Poduct', 'Product';
MySQL
RENAME TABLE Poduct to Product;
通常在RENAME之后按照、的顺序来指
定表的名称。
各个数据库的语法都不尽相同，是因为标准SQL并没有RENAME，于是各个
数据库便使用了各自惯用的语法。如上所述，在创建了错误的表名，或者想要保
存表的备份时，使用这些语句非常方便。但美中不足的是，由于各个数据库的语
法不同，很难一下子想出恰当的指令。这时大家就可以来参考本专栏。
● 42 第1章 数据库和SQL
练习题
1.1 编写一条CREATE TABLE语句，用来创建一个包含表1-A中所列各项
的表Addressbook（ 地址簿），并为regist_no（ 注册编号）列设置
主键约束。
表1-A 表Addressbook（地址簿）中的列
列的含义 列的名称 数据类型 约束
注册编号 regist_no 整数型 不能为NULL、主键
可变长字符串类
姓名 name 不能为NULL
型（长度为128）
可变长字符串类
住址 address 不能为NULL
型（长度为256）
定长字符串类型
电话号码 tel_no
（长度为10）
定长字符串类型
邮箱地址 mail_address
（长度为20）
1.2 假设在创建练习1.1中的Addressbook表时忘记添加如下一列postal_
code（邮政编码）了，请把此列添加到Addressbook表中。
列名 ：postal_code
数据类型 ：定长字符串类型（长度为8）
约束 ：不能为NULL
1.3 编写SQL语句来删除Addressbook表。
1.4 编写SQL语句来恢复删除掉的Addressbook表。
1-5 表的删除和更新 43 ●
第２章 查询基础
SELECT语句基础
算术运算符和比较运算符
逻辑运算符
本章重点
本章将会和大家一起学习查询前一章创建的Product表中数据的SQL语句。
这里使用的SELECT语句是SQL最基本也是最重要的语句。请大家在实际运行书中的
SELECT语句时，亲身体验一下其书写方法和执行结果。
执行查询操作时可以指定想要查询数据的条件（查询条件）。查询时可以指
定一个或多个查询条件，例如“某一列等于这个值”“某一列计算之后的值大于
这个值”等。
2-1 SELECT语句基础
■列的查询
■查询出表中所有的列
■为列设定别名
■常数的查询
■从结果中删除重复行
■根据WHERE语句来选择记录
■注释的书写方法
2-2 算术运算符和比较运算符
■算术运算符
■需要注意NULL
■比较运算符
■对字符串使用不等号时的注意事项
■不能对NULL使用比较运算符
2-3 逻辑运算符
■NOT运算符
■AND运算符和OR运算符
■使用括号强化处理
■逻辑运算符和真值
■含有NULL时的真值
2-1 SELECT语句基础 45 ●
第２章 查询基础
2-1
语句基础
SELECT
● 使用SELECT语句从表中选取数据。
学习重点
● 为列设定显示用的别名。
● SELECT语句中可以使用常数或者表达式。
● 通过指定DISTINCT可以删除重复的行。
● SQL语句中可以使用注释。
● 可以通过WHERE语句从表中选取出符合查询条件的数据。
列的查询
KEYWORD 从表中选取数据时需要使用SELECT语句，也就是只从表中选出
●SELECT语句
（SELECT）必要数据的意思。通过SELECT语句查询并选取出必要数据
●匹配查询
●查询 的过程称为匹配查询或查询（query）。
SELECT语句是SQL语句中使用最多的最基本的SQL语句。掌握了
SELECT语句，距离掌握SQL语句就不远了。
SELECT语句的基本语法如下所示。
语法2-1 基本的SELECT语句