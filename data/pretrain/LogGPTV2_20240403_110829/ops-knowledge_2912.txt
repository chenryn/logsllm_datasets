User: 如何使用Git来管理代码版本？请详细描述如何创建分支、合并分支等基本操作。
Assistant: Git是一种版本控制工具，能够帮助开发者管理代码版本。使用Git管理代码版本，需要掌握以下基本操作：

1. 创建分支：分支是指从主干代码中分离出来的版本。在Git中创建分支，可以使用“git branch”命令。例如，要创建名为“feature-branch”的分支，可以运行以下命令：

   git branch feature-branch

2. 切换分支：切换分支使开发者可以在不影响主干代码的情况下，对代码进行修改和测试。在Git中切换分支，可以使用“git checkout”命令。例如，要切换到名为“feature-branch”的分支，可以运行以下命令：

   git checkout feature-branch

3. 提交代码：在Git中，提交代码意味着将代码更改保存到版本库中。提交代码可以使用“git add”和“git commit”命令。例如，要提交文件“example.py”，可以运行以下命令：

   git add example.py
   git commit -m "Add example.py file"

4. 合并分支：当开发者完成分支上的工作，并希望将更改合并回主干代码中时，可以使用“git merge”命令。例如，要将名为“feature-branch”的分支合并到当前分支中，可以运行以下命令：

   git merge feature-branch

5. 解决冲突：当Git无法自动合并代码时，会发生合并冲突。解决冲突的最好方法是手动合并代码。在手动解决冲突后，运行以下命令将修改后的代码提交到版本库中：

   git add .
   git commit -m "Resolve merge conflicts"

以上是Git中基本的分支管理操作。需要注意的是，在使用Git管理代码版本时，应定期将修改后的代码提交到版本库中，并及时合并分支。这有助于保持代码的稳定性和可追踪性。