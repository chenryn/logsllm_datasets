(BZ#1930576)
[]{#known-issues.html#BZ-1866402}
::: title
**OPEN MPI 库可能会使用默认 PML 的触发程序运行时失败**
:::
在 OPEN 消息密码界面（OPEN MPI）实现 4.0.x 系列中，Unified communicating
X（UCX）是默认的点到点通信器（PML）。之后版本的 OPEN MPI 4.0.x
系列弃用了 `openib`{.literal} Byte Transfer Layer(BTL)。
但是，OPEN MPI 在 [**同构**]{.strong}
集群（与硬件和软件配置相同）上运行时，UCX 仍会为 MPI 单边操作使用
`openib`{.literal}
BTL。因此，这可能会导致触发器执行错误。要临时解决这个问题：
::: itemizedlist
-   使用以下参数运行 `mpirun`{.literal} 命令：
:::
``` screen
-mca btl openib -mca pml ucx -x UCX_NET_DEVICES=mlx5_ib0
```
其中,
::: itemizedlist
-   `-mca btl openib`{.literal} 参数禁用 `openib`{.literal} BTL
-   `-mca pml ucx`{.literal} 参数将 OPEN MPI 配置为使用 `ucx`{.literal}
    PML。
-   `x UCX_NET_DEVICES=`{.literal} 参数限制 UCX 使用指定的设备
:::
OPEN MPI 在使用 [**异构**]{.strong}
集群（不同硬件和软件配置）中运行时，使用 UCX 作为默认的
PML。因此，这可能会导致 OPEN MPI
任务在运行时出现错误的性能、不响应性行为或崩溃问题。要临时解决这个问题，将
UCX 优先级设置为：
::: itemizedlist
-   使用以下参数运行 `mpirun`{.literal} 命令：
:::
``` screen
-mca pml_ucx_priority 5
```
因此，OPEN MPI 库可以选择使用 UCX 的可替代传输层。
(BZ#1866402)
[]{#known-issues.html#BZ-1971506}
::: title
**Solarflare 无法创建最大虚拟功能数量(VF)**
:::
Solarflare NIC 无法因为资源不足而创建 VF 的最大数量。您可以检查 PCIe
设备可在 `/sys/bus/pci/devices/PCI_ID/sriov_totalvfs`{.literal}
文件中创建的最大 VF 数量。要解决这个问题，您可以将 VF 或 VF MSI
中断值的数量调整为较低值，可以是在启动时
`Solarflare Boot Manager`{.literal}，也可以使用 Solarflare
`sfboot`{.literal} 实用程序。默认的 VF MSI 中断值为 `8`{.literal}。
::: itemizedlist
-   使用 `sfboot`{.literal} 调整 VF MSI 中断值：
:::
``` literallayout
# sfboot vf-msix-limit=2
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
调整 VF MSI 中断值会影响 VF 性能。
:::
有关要相应地调整的参数的更多信息，请参阅
`Solarflare Server Adapter 用户指南`{.literal}。
(BZ#1971506)
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_hardware-enablement}硬件启用 {.title}
:::
[]{#known-issues.html#JIRA-RHELPLAN-28940}
::: title
**默认的 7 4 1 7 printk 值有时会导致系统暂时无响应**
:::
默认的 [**7 4 1 7**]{.strong} `printk`{.literal}
值可以更好地调试内核的活动。但是，当与串口控制台搭配使用时，这个
`printk`{.literal} 设置可能会导致大量 I/O，从而导致 RHEL
系统暂时变得不响应。为了解决这个问题，添加了一个新的
`optimize-serial-console`{.literal} TuneD 配置集，它把默认的
`printk`{.literal} 值减为 [**4 4 1
7**]{.strong}。用户可以按照以下方法追踪其系统：
``` screen
# tuned-adm profile throughput-performance optimize-serial-console
```
重启后会保留一个较低的 `printk`{.literal}
值，这可以降低系统挂起的可能性。
请注意，这个设置更改的代价是丢失额外的调试信息。
（JIRA:RHELPLAN-28940）
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_file-systems-and-storage}文件系统和存储 {.title}
:::
[]{#known-issues.html#JIRA-RHELPLAN-27987}
::: title
**LVM `writecache`{.literal} 的限制**
:::
`writecache`{.literal} LVM 缓存方法有以下限制，这些限制不会出现在
`cache`{.literal} 方法中：
::: itemizedlist
-   使用 `pvmove`{.literal} 命令时您无法命名 `writecache`{.literal}
    逻辑卷。
-   您不能将带有 `writecache`{.literal} 的逻辑卷与精简池或 VDO
    结合使用。
:::
以下限制也适用于 `cache`{.literal} 方法：
::: itemizedlist
-   您不能在将 `cache`{.literal} 或 `writecache`{.literal}
    附加到逻辑卷时重新定义大小。
:::
（JIRA:RHELPLAN-27987、[BZ#1798631](https://bugzilla.redhat.com/show_bug.cgi?id=1798631){.link}、BZ#1808012）
[]{#known-issues.html#BZ-1730502}
::: title
**保存一个 LUKS 卷的 LVM `mirror`{.literal} 设备有时将变为无响应**
:::
在某些情况下，保存 LUKS 卷的片段类型的 `mirror`{.literal} LVM
设备可能会变得无响应。无响应设备会拒绝所有 I/O 操作。
要解决这个问题，红帽建议在有弹性软件定义的存储之上使用带
`raid1`{.literal} 的片段类型的 LVM RAID 1 设备而不是镜像(
`mirror`{.literal} )。
`raid1`{.literal} segment 类型是默认的 RAID
配置类型，它作为推荐的解决方案替换 `mirror`{.literal}。
要将 `mirror`{.literal} 设备转换为 `raid`{.literal}，请参阅[将镜像 LVM
设备转换为 RAID1
设备](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_logical_volumes/assembly_configure-mange-raid-configuring-and-managing-logical-volumes#proc-converting-mirror-to-raid-configure-manage-raid){.link}。
(BZ#1730502)
[]{#known-issues.html#BZ-1496229}
::: title
**无法将 `/boot`{.literal} 文件系统放在 LVM 中**
:::
您不能将 `/boot`{.literal} 文件系统放在 LVM
逻辑卷中。这种限制的原因如下：
::: itemizedlist
-   在 EFI 系统中，[*EFI 系统分区*]{.emphasis} 通常充当
    `/boot`{.literal} 文件系统。uEFI 标准要求有特定的 GPT
    分区类型和具体文件系统类型。
-   RHEL 8 在系统引导条目中使用 [*Boot Loader 规格*]{.emphasis}
    (BLS)。这个规格要求 `/boot`{.literal} 文件系统可由平台固件可读。在
    EFI 系统中，平台固件只能读取 uEFI 标准定义的 `/boot`{.literal}
    配置。
-   在 GRUB 2 引导装载程序中不支持 LVM
    逻辑卷。红帽没有计划进行改进，因为如 uEFI 和 BLS
    的标准，这个功能的使用情况正在下降。
:::
红帽不计划在 LVM 中支持
`/boot`{.literal}。反之，红帽提供了管理系统快照和回滚的工具，这些工具不需要将
`/boot`{.literal} 文件系统放在 LVM 逻辑卷中。
(BZ#1496229)
[]{#known-issues.html#BZ-1768536}
::: title
**LVM 不再允许使用混合块大小创建卷组**
:::
LVM 工具（如 `vgcreate`{.literal} 或
`vgextend`{.literal}）不再允许您创建有不同逻辑块大小的物理卷（PV）的卷组(VG)。LVM
启用了这个更改，因为如果您使用不同块大小的 PV
扩展了基本逻辑卷（LV），文件系统将无法挂载。
要重新创建带有混合块大小的 VG，在 `lvm.conf`{.literal} 文件中设置
`allow_mixed_block_sizes=1`{.literal} 选项。
([BZ#1768536)](https://bugzilla.redhat.com/show_bug.cgi?id=1768536){.link}
[]{#known-issues.html#BZ-1987087}
::: title
**在启动过程中初始失败后，GRUB 会重试访问磁盘**
:::
有时，存储区域网络(SAN)无法确认 `打开`{.literal} 和 `读取`{.literal}
磁盘调用。在以前的版本中，用于进入 `grub_rescue`{.literal} 提示符的 GRUB
工具会导致引导失败。在这个版本中，GRUB
会在初始调用打开并读取磁盘失败后尝试访问磁盘。如果 GRUB
工具在尝试后仍无法打开或读取磁盘，它将进入 `grub_rescue`{.literal}
模式。
(BZ#1987087)
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_dynamic-programming-languages-web-and-database-servers}动态编程语言、网页和数据库服务器 {.title}
:::
[]{#known-issues.html#BZ-1944653}
::: title
**在启用 `OQGraph`{.literal} 插件时，`MariaDB 10.5`{.literal}
不会对删除不存在的表发出警告**
:::
当 `OQGraph`{.literal} 存储引擎插件加载到 `MariaDB 10.5`{.literal}
服务器 时，`MariaDB`{.literal}
不会对删除不存在的表发出警告。特别是，当用户尝试使用`DROP TABLE`{.literal}或`DROP TABLE IF EXISTS`{.literal}SQL命令删除不存在的表时，`MariaDB`{.literal}不会返回错误信息，也不会记录警告。
请注意，`OQGraph`{.literal} 插件由 `mariadb-oqgraph-engine`{.literal}
软件包提供，该软件包默认情况下不会安装。
（[BZ#1944653](https://bugzilla.redhat.com/show_bug.cgi?id=1944653){.link}）
[]{#known-issues.html#BZ-1942330}
::: title
**PAM 插件版本 1.0 在 `MariaDB`{.literal}中无法正常工作**
:::
`MariaDB 10.3`{.literal} 提供可插拔验证模块(PAM)插件版本
1.0。`MariaDB 10.5`{.literal} 提供插件版本 1.0 和 2.0，版本 2.0
是默认版本。
`MariaDB`{.literal} PAM 插件版本 1.0 在 RHEL 8
中不起作用。要临时解决这个问题，请使用 `mariadb:10.5`{.literal}
模块流提供的 PAM 插件版本 2.0。
（[BZ#1942330](https://bugzilla.redhat.com/show_bug.cgi?id=1942330){.link}）
[]{#known-issues.html#BZ-1803161}
::: title
**当有 32 位应用程序调用 `getpwnam()`{.literal} 时，可能会失败**
:::
当 NIS 用户使用32 位应用程序调用 `getpwnam()`{.literal} 函数时，如果没有
`nss_nis.i686`{.literal} 软件包，则调用会失败。要临时解决这个问题，使用
`yum install nss_nis.i686`{.literal} 手动安装缺少的软件包。
([BZ#1803161](https://bugzilla.redhat.com/show_bug.cgi?id=1803161){.link})
[]{#known-issues.html#BZ-1819607}
::: title
**OpenLDAP 库之间的符号冲突可能会导致 `httpd`{.literal}中的崩溃**
:::
当 OpenLDAP 提供的 ` libldap`{.literal} 和 libldap_r``{=html}
库被加载并在单个进程中使用时，这些库之间可能会出现符号冲突。因此，如果
`httpd`{.literal} 配置也加载 `mod_security 或 mod_auth_`{.literal}
openidc``{=html} 模块，使用 PHP `ldap`{.literal} 扩展的 Apache
`httpd`{.literal} 子进程可能会意外终止。
从因为RHEL 8.3 更新到 Apache Portable Runtime(APR)库，您可以通过设置
`APR_DEEPBIND`{.literal} 环境变量来临时解决这个问题，该变量在载入
`httpd`{.literal} 模块时，允许使用 `RTLD_DEEPBIND`{.literal}
动态链接器选项。当 `APR_DEEPBIND`{.literal}
环境变量启用时，会不再在加载冲突库的 `httpd`{.literal} 配置中崩溃。
(BZ#1819607)
:::
::: section
::: titlepage