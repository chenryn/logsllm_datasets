# 邮件发送配置
无论此 crontab 归属哪个用户，所有输出都将通过邮件发送给 Paul。
```
MAILTO=paul
```

# 定时任务配置说明
- `Min Hour DayOfMonth Month DayOfWeek command` (Day... 使用 OR 逻辑运算符)
- 每天凌晨 00:05 运行 `$HOME/bin/daily.job` 脚本并将输出追加到 `$HOME/tmp/out` 文件中，错误信息也会被重定向至同一文件。
```
5 0 * * * $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
```
- 每月第一天的 14:15 执行 `$HOME/bin/monthly` 命令，并将输出通过邮件发送给 Paul。
```
15 14 1 * * $HOME/bin/monthly
```
- 工作日（周一至周五）晚上 22:00 向 Joe 发送一封提醒邮件。使用 `%` 来表示换行，最后一个 `%` 用于添加抄送地址。
```
0 22 * * 1-5 mail -s "It's 10pm" joe%Joe,%%Where are your kids?%.%%
```
- 在每月二月份的每两小时运行一次命令，从 00:23 开始直到当天结束。
```
23 */2 1 2 * echo "run 23 minutes after 0am, 2am, 4am ..., on Feb 1"
```
- 每周日早上 04:05 输出一条消息。
```
5 4 * * sun echo "run at 04:05 every Sunday"
```
- 每月第一个星期一的 03:40 如果日期在 1 到 7 号之间，则执行特定命令。
```
40 3 1-7 * * [ "$(date +%a)" == "Mon" ] && command -args
```

**提示**
对于那些不连续运行的系统，推荐安装 `anacron` 软件包以确保周期性命令能够按时执行。这些命令会在机器启动后不久自动运行，并允许设定特定的时间间隔。详情请参阅 `anacron(8)` 和 `anacrontab(5)`。

定时维护脚本可以作为 root 用户安排执行，并且可以放置于 `/etc/cron.hourly/`, `/etc/cron.daily/`, `/etc/cron.weekly/`, 或 `/etc/cron.monthly/` 目录下。这些脚本的具体执行时间可以通过编辑 `/etc/crontab` 和 `/etc/anacrontab` 文件来定制。

当 `cron` 守护进程不可用时，Systemd 提供了一种替代方案来按计划执行任务。例如，`/lib/systemd/system/apt-daily.timer` 和 `/lib/systemd/system/apt-daily.service` 可以设置每日更新 APT 数据库。更多信息请查阅 `systemd.timer(5)`。

### 9.4.15 Alt-SysRq 键功能
按下 Alt+SysRq(PrtScr) 组合键后再按下一个字母键，可以触发各种紧急控制操作。
- k: 终止当前虚拟控制台上的所有进程 (SAK)
- s: 同步刷新所有已挂载的文件系统，防止数据丢失
- u: 重新以只读模式挂载所有文件系统
- r: 在 X 窗口系统崩溃后恢复键盘输入

更多关于 SAK 的信息，请参考 Linux 内核文档中的“Linux Magic System Request Key Hacks”。

**提示**
即使是在 SSH 终端中，也可以通过向 `/proc/sysrq-trigger` 文件写入相应字符来激活 Alt-SysRq 功能。例如，在 root shell 中执行以下命令以同步并卸载所有文件系统：
```
echo s > /proc/sysrq-trigger; echo u > /proc/sysrq-trigger
```

目前 Debian amd64 Linux 内核为 `/proc/sys/kernel/sysrq` 设置了值 438 (二进制 0b110110110)，具体包括：
- 2 (0x2): 控制台日志级别调整
- 4 (0x4): 键盘控制（如 SAK）
- 8 (0x8): 进程调试转储（关闭）
- 16 (0x10): sync 命令启用
- 32 (0x20): 只读重新挂载
- 64 (0x40): 进程信号处理（关闭）
- 128 (0x80): 重启或关机权限
- 256 (0x100): 调整实时任务优先级

### 9.5 系统维护技巧
#### 9.5.1 查看登录用户
你可以通过以下几种方式检查当前登录到系统的用户列表：
- `who(1)`: 显示当前登录用户
- `w(1)`: 不仅显示登录用户还显示他们正在做什么
- `last(1)`: 展示最近成功登录的历史记录
- `lastb(1)`: 记录失败的登录尝试

**提示**
用户登录信息存储于 `/var/run/utmp` 和 `/var/log/wtmp` 文件中。更多细节见 `login(1)` 和 `utmp(5)`。

#### 9.5.2 广播消息
使用 `wall(1)` 可以向所有在线用户发送即时消息。
```
$ echo "We are shutting down in 1 hour" | wall
```

#### 9.5.3 硬件识别
对于 PCI 类设备 (AGP, PCI-Express, CardBus, ExpressCard 等), 使用 `lspci(8)` 是一种有效的硬件识别方法。此外，还可以直接读取 `/proc/bus/pci/devices` 或浏览 `/sys/bus/pci` 下的目录结构来进行更详细的硬件分析。

### 表 9.13: 硬件识别工具列表
| 软件包       | 流行度   | 大小 | 描述                                     |
|--------------|----------|------|------------------------------------------|
| pciutils     | V:247,I:991 | 212  | Linux PCI 工具集                         |
| usbutils     | V:74,I:867  | 320  | Linux USB 工具集                        |
| nvme-cli     | V:14,I:21   | 1526 | NVMe 存储管理工具                       |
| pcmciautils  | V:6,I:10    | 91   | PCMCIA 卡管理工具                       |
| scsitools    | V:0,I:2     | 346  | SCSI 设备管理工具集                     |
| procinfo     | V:1,I:9     | 132  | 从 /proc 获取系统信息                   |
| lshw         | V:13,I:90   | 919  | 硬件清单生成器                          |
| discover     | V:41,I:957  | 98   | 自动硬件检测                            |

### 表 9.14: 硬件配置工具列表
| 软件包           | 流行度   | 大小 | 描述                                       |
|------------------|----------|------|--------------------------------------------|
| console-setup    | V:84,I:967 | 428  | 控制台字体与键盘布局配置                  |
| x11-xserver-utils| V:302,I:524 | 568  | X 服务器管理工具                           |
| acpid            | V:88,I:156 | 157  | ACPI 事件处理器                            |
| acpi             | V:10,I:144 | 47   | 显示 ACPI 设备状态                         |
| sleepd           | V:0,I:0   | 86   | 笔记本电脑空闲时进入休眠状态               |
| hdparm           | V:187,I:356 | 256  | 硬盘性能优化                              |
| smartmontools    | V:202,I:246 | 2358 | 磁盘健康监测                              |
| setserial        | V:4,I:7   | 103  | 串行端口配置                              |
| memtest86+       | V:1,I:21  | 12687| 内存测试                                   |
| setcd            | V:0,I:0   | 37   | 光驱速度调节                               |
| big-cursor       | I:0      | 26   | X 窗口系统的大鼠标指针                     |

### 9.5.4 现代图形桌面环境下的硬件配置
尽管 GNOME 和 KDE 等现代图形界面提供了丰富的图形化硬件配置选项，了解基本的文本配置方法仍然是有益的。例如，ACPI 作为一种较新的电源管理系统框架取代了旧有的 APM 标准。

**提示**
CPU 频率调节通常由内核模块 `acpi_cpufreq` 管理。

### 9.5.5 系统时间和硬件时钟
要设置系统硬件时间为 MM/DD hh:mm CCYY 格式，请执行以下命令：
```
# date MMDDhhmmCCYY
# hwclock --utc --systohc
# hwclock --show
```
Debian 默认显示本地时间，而硬件时钟通常采用 UTC 时间标准。若需将硬件时钟设为 UTC 时间，应在 `/etc/default/rcS` 文件中设置 `UTC=yes`。

重新配置 Debian 系统使用的时区:
```
# dpkg-reconfigure tzdata
```

如果希望利用网络服务同步时间，可考虑使用 NTP、ntpdate 或 chrony 等软件包提供的 NTP 服务。

**提示**
在 systemd 环境下，`systemd-timesyncd` 服务负责网络时间同步。详情见 `systemd-timesyncd(8)`。

相关资源:
- 精确时间和日期管理 HOWTO
- NTP 公共服务项目
- ntp-doc 包

**提示**
`ntptrace(8)` 工具可用于追踪 NTP 服务器链直至原始时间源。

### 9.5.6 终端配置
有多个组件可用于配置字符控制台和 ncurses 应用程序的行为。
- `/etc/terminfo/*/*` 文件定义终端类型
- `$TERM` 环境变量指定当前终端类型
- `setterm(1)`, `stty(1)`, `tic(1)`, 和 `toe(1)` 用于进一步自定义终端设置

如果 xterm 的 terminfo 对非 Debian 系统上的 xterm 不适用，远程登录时可能需要修改 `$TERM` 为兼容版本（如 `xterm-r6`）。最通用的选择是 `"dumb"`。

### 9.5.7 声音基础设施
当前 Linux 发行版主要依赖高级 Linux 声音架构 (ALSA) 作为声卡驱动程序。ALSA 提供了对开放声音系统 (OSS) 的兼容模式。应用程序既可以直接访问音频设备，也可通过 PulseAudio, JACK, 或 PipeWire 等标准化的声音服务进行间接访问。最新进展请参见 Debian Wiki 声音页面。

各主流桌面环境均配备了默认的声音引擎，它们可以选择连接不同的声音服务器。

**提示**
测试扬声器工作状态的方法之一是使用 `cat /dev/urandom > /dev/audio` 或者 `speaker-test(1)` （Ctrl+C 停止）。

如果你听不到任何声音，可能是由于某些输出端口被静音。`alsamixer(1)` 可以帮助你调整音频输出设置。

### 表 9.15: 常见声音软件包
| 软件包          | 流行度   | 大小 | 描述                                             |
|-----------------|----------|------|--------------------------------------------------|
| alsa-utils      | V:327,I:464 | 2607 | ALSA 配置工具                                     |
| oss-compat      | V:1,I:18  | 20   | 在 ALSA 下提供 OSS 兼容性                         |
| pipewire        | V:265,I:316 | 119  | 音视频处理引擎                                    |
| pipewire-bin    | V:276,I:316 | 1627 | Pipewire 的命令行工具                             |
| pipewire-alsa   | V:94,I:141 | 205  | Pipewire 的 ALSA 替代实现                         |
| pipewire-pulse  | V:149,I:193 | 49   | Pipewire 的 PulseAudio 替代实现                   |
| pulseaudio      | V:269,I:322 | 6462 | PulseAudio 服务器                                 |
| libpulse0       | V:411,I:579 | 969  | PulseAudio 客户端库                               |
| jackd           | V:2,I:19   | 9    | JACK 音频连接工具包 (低延迟)                      |
| libjack0        | V:1,I:9    | 329  | JACK 库                                           |
| libgstreamer1.0-0 | V:430,I:593 | 4453 | GStreamer (GNOME 的多媒体框架)                    |
| libphonon4qt5-4 | V:72,I:162 | 593  | Phonon (KDE 的多媒体框架)                         |

### 9.5.8 关闭屏幕保护
不同环境下禁用屏幕保护程序的方法如下表所示：

| 环境         | 命令                                        |
|--------------|---------------------------------------------|
| Linux 控制台 | `setterm -powersave off`                    |
| X 窗口 (禁用屏幕保护) | `xset s off`                                |
| X 窗口 (禁用 DPMS)   | `xset -dpms`                                |
| X 窗口 (屏幕保护 GUI 配置) | `xscreensaver-command -prefs`              |

### 9.5.9 关闭蜂鸣声
为了彻底消除计算机发出的报警音，你可以物理拔掉内置扬声器或卸载 `pcspkr` 内核模块。对于 bash shell 中 readline 函数产生的警告音，可以在用户配置文件中加入以下内容来屏蔽它：
```
$ echo 'set bell-style none' >> ~/.inputrc
```

### 9.5.10 内存使用情况查询
有两种常见方法来获取系统内存使用概况：
- 查看 `/var/log/dmesg` 日志文件中的内核启动信息部分，这里会列出系统可用内存总量。
- 利用 `free(1)` 和 `top(1)` 实时查看当前运行中的内存状态。

示例命令如下：
```
# grep '\] Memory' /var/log/dmesg
[ 0.004000] Memory: 990528k/1016784k available (1975k kernel code, 25868k reserved, 931k data, 296k init)
```