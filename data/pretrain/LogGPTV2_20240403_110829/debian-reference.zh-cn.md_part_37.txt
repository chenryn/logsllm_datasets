# mail any output to paul, no matter whose crontab this is
MAILTO=paul
# Min Hour DayOfMonth Month DayOfWeek command (Day... are OR’ed)
# run at 00:05, every day
5 0 * * * $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
# run at 14:15 on the first of every month -- output mailed to paul
15 14 1 * * $HOME/bin/monthly
# run at 22:00 on weekdays(1-5), annoy Joe. % for newline, last % for cc:
0 22 * * 1-5 mail -s ”It’s 10pm” joe%Joe,%%Where are your kids?%.%%
23 */2 1 2 * echo ”run 23 minutes after 0am, 2am, 4am ..., on Feb 1”
5 4 * * sun echo ”run at 04:05 every Sunday”
# run at 03:40 on the first Monday of each month
40 3 1-7 * * [ ”$(date +%a)” == ”Mon” ] && command -args
提示
对那些非连续运行的系统，安装anacron软件包来定时执行周期性的命令，命令在接近机器启动的时间运行，并
允许有特定的时间间隔。参见anacron(8)和anacrontab(5).
提示
对于定时系统维护脚本，你能够以 root 账户定时运行，把这类脚本放入”/etc/cron.hourly/”,
”/etc/cron.daily/”, ”/etc/cron.weekly/”, 或”/etc/cron.monthly/”. 这些脚本的执行时间，可以通
过”/etc/crontab”和”/etc/anacrontab”来定制。
cron后台守护进程（daemon）不存在时，Systemd也有按时间计划运行程序的低级能力。例如，/lib/systemd/system/apt-daily.timer
和/lib/systemd/system/apt-daily.service建立每天的apt下载行动。参见systemd.timer(5)。
9.4.15 Alt-SysRq 键
按Alt-SysRq(PrtScr)组合键跟一个字母按键，进行不可思议的系统应急控制。
Alt-SysRq之后的键 行为描述
k kill杀死在当前虚拟控制台上的所有进程(SAK)
s sync同步刷新所有已经挂载的文件系统来避免数据损坏
u 重新以只读方式挂载所有已挂载的文件系统(umount)
r 在X崩溃后，从raw模式恢复键盘
Table9.12: 著名的SAK命令键列表
更多信息参见Linux内核用户和管理员手册»LinuxMagicSystemRequestKeyHacks
提示
从 SSH 终端等，你能够通过向”/proc/sysrq-trigger” 写入内容来使用 Alt-SysRq 特性。例如，从 root shell
提示符运行”echo s > /proc/sysrq-trigger; echo u > /proc/sysrq-trigger”来syncs和umounts
所有已挂载的文件系统。
Debian参考手册 149/233
目前(2021)Debianamd64Linux内核为/proc/sys/kernel/sysrq=438=0b110110110:
• 2=0x2-启用控制台日志级别控制(打开)
• 4=0x4-启用键盘控制(SAK,unraw)(打开)
• 8=0x8-启用进程调试转储（debuggingdumpsofprocesses）等。（关闭）
• 16=0x10-启用sync命令(打开)
• 32=0x20-启用只读重新挂载（打开）
• 64=0x40-启用进程信号(term,kill,oom-kill)(关闭)
• 128=0x80-允许重启、关闭电源（打开）
• 256=0x100-允许调整所有RT（实时）任务优先级（打开）
9.5 系统维护技巧
9.5.1 谁在系统里？
你可以通过下面的方法检查谁登录在系统里。
• who(1)显示谁登录在系统里面。
• w(1)显示谁登录在系统里面，他们正在在做什么。
• last(1)显示用户最后登录的列表。
• lastb(1)显示用户最后错误登录的列表。
提示
”/var/run/utmp”和”/var/log/wtmp”存储这样的用户信息。参见login(1)和utmp(5).
9.5.2 警告所有人
你可以通过下面的方式使用wall(1)给登录系统的每一个人发送信息。
$ echo ”We are shutting down in 1 hour” | wall
9.5.3 硬件识别
对于PCI类设备(AGP,PCI-Express,CardBus,ExpressCard等),一开始就使用lspci(8)(也许加上”-nn”选项)进行硬件
识别比较好。
此外，你可以通过阅读”/proc/bus/pci/devices”里面的内容或浏览”/sys/bus/pci”下面的目录树来进行硬件
识别(参见第 1.2.12 节).
Debian参考手册 150/233
软件包 流行度 大小 说明
pciutils V:247,I:991 212 LinuxPCI工具: lspci(8)
usbutils V:74,I:867 320 LinuxUSB工具: lsusb(8)
nvme-cli V:14,I:21 1526 LinuxNVMe工具: nvme(1)
pcmciautils V:6,I:10 91 LinuxPCMCIA工具: pccardctl(8)
scsitools V:0,I:2 346 SCSI硬件管理工具集: lsscsi(8)
procinfo V:1,I:9 132 从”/proc”: lsdev(8)获得系统信息
lshw V:13,I:90 919 硬件配置信息: lshw(1)
discover V:41,I:957 98 硬件识别系统: discover(8)
Table9.13: 硬件识别工具列表
软件包 流行度 大小 说明
console-setup V:84,I:967 428 Linux控制台字体和键盘表工具
x11-xserver-utils
V:302,I:524 568 X服务端工具: xset(1),xmodmap(1)
管理高级可配置和电源接口(ACPI)事件分发的后台守护进程
acpid V:88,I:156 157
（daemon）
acpi V:10,I:144 47 显示ACPI设备信息的工具
sleepd V:0,I:0 86 在笔记本空闲时，使其进入休眠状态的后台守护进程（daemon）
hdparm V:187,I:356 256 硬盘访问优化(参见第 9.6.9 节)
smartmontools V:202,I:246 2358 使用S.M.A.R.T.控制和监控存储系统
setserial V:4,I:7 103 串口管理工具集
memtest86+ V:1,I:21 12687 内存硬件管理工具集
scsitools V:0,I:2 346 SCSI硬件管理工具集
setcd V:0,I:0 37 光驱访问优化
big-cursor I:0 26 X系统的大鼠标光标
Table9.14: 硬件配置工具列表
Debian参考手册 151/233
9.5.4 硬件配置
像GNOME和KDE这类现代图形桌面系统，虽然大部分硬件的配置都能够通过相应的图形配置工具来管理，但知道
一些配置它们的基础方式，也是一个好的主意。
这里,ACPI是一个比APM新的电源管理系统框架。
提示
现代系统的CPU频率调整功能，是由内核模块acpi_cpufreq管理的。
9.5.5 系统时间和硬件时间
下面设置系统的硬件时间为：MM/DDhh:mm,CCYY.
# date MMDDhhmmCCYY
# hwclock --utc --systohc
# hwclock --show
Debian系统的时间通常显示为本地时间，但硬件时间通常使用UTC(GMT)时间。
如果硬件时间设置为UTC时间，请在“/etc/default/rcS”里面设置“UTC=yes”。
下面是重新配置Debian系统使用的时区。
# dpkg-reconfigure tzdata
如果你希望通过网络来更新系统时间，考虑使用ntp,ntpdate和chrony这类包提供的NTP服务。
提示
在systemd下，是使用systemd-timesyncd来替代进行网络时间同步。参见systemd-timesyncd(8).
参见下面内容。
• 精确时间和日期管理HOWTO
• NTP公共服务项目
• ntp-doc包
提示
在ntp包里面的ntptrace(8)能够跟踪NTP服务链至原始源。
9.5.6 终端配置
有几个组件可以用来配置字符控制台和ncurses(3)系统功能。
•“/etc/terminfo/*/*”文件（terminfo(5)）
•“$TERM”环境变量（term(7)）
• setterm(1)、stty(1)、tic(1)和toe(1)
如果xterm的terminfo对非Debian的xterm不起作用，则当你从远程登录到Debian系统时，你需要改变你的终端
类型“$TERM”，从“xterm”更改为功能受限的版本（例如“xterm-r6”）。更多内容参见“/usr/share/doc/libncurses5/FAQ”“。dumb”
是“$TERM”中最通用的。
Debian参考手册 152/233
9.5.7 声音基础设施
用于现在的 Linux 的声卡设备驱动程序由 高级 Linux 声音体系（Advanced Linux Sound Architecture，ALSA） 提供。
ALSA提供了兼容之前的开放声音系统（OpenSoundSystem，OSS）的模拟模式。
应用软件不仅可被配置为不仅直接访问声音设备，也可以通过一些标准化声音服务端系统来访问它们。目前，
PulseAudio、JACK和PipeWire被用作声音的服务端系统。参见Debian维基声音页面得到最新情况。
每个流行的桌面环境通常都有一个通用的声音引擎。每个被应用程序使用的声音引擎都可以选择连接到不同的声音服
务器。
提示
使用“cat /dev/urandom > /dev/audio”或speaker-test(1)来测试扬声器（^C停止）。
提示
如果你无法听到声音，那你的扬声器可能连接到了一个静音输出。现代的声音系统有许多输出。alsa-utils软件
包中的alsamixer(1)可以很好地配置声音和静音设置。
软件包 流行度 大小 说明
alsa-utils V:327,I:464 2607 配置和使用ALSA的工具
oss-compat V:1,I:18 20 在ALSA下兼容OSS，预防“/dev/dsp not found”错误
pipewire V:265,I:316 119 音频和视频处理引擎多媒体服务端-元数据包
pipewire-bin V:276,I:316 1627 音频和视频处理引擎多媒体服务端-音频服务和命令行程序
pipewire-alsa V:94,I:141 205 音频和视频处理引擎多媒体服务端-代替ALSA的音频服务
pipewire-pulse V:149,I:193 49 音频和视频处理引擎多媒体服务端-代替PulseAudio的音频服务
pulseaudio V:269,I:322 6462 PulseAudio服务端
libpulse0 V:411,I:579 969 PulseAudio客户端库
jackd V:2,I:19 9 JACKAudioConnectionKit. (JACK)服务器（低延迟）
libjack0 V:1,I:9 329 JACKAudioConnectionKit. (JACK)库（低延迟）
libgstreamer1.0-0
V:430,I:593 4453 GStreamer：GNOME声音引擎
libphonon4qt5-4
V:72,I:162 593 Phonon：KDE声音引擎
Table9.15: 声音软件包
9.5.8 关闭屏幕保护
关闭屏幕保护，使用下面的命令。
环境 命令
Linux控制台 setterm -powersave off
X窗口（关闭屏幕保护） xset s off
X窗口（关闭dpms） xset -dpms
X窗口（屏幕保护GUI配置） xscreensaver-command -prefs
Table9.16: 关闭屏幕保护命令列表
Debian参考手册 153/233
9.5.9 关闭蜂鸣声
可以把电脑的扬声器拔掉来关闭蜂鸣声。把pcspkr内核模块删除，也可以做到这点。
bash(1)用到的readline(3)程序，当遇到告警字符(ASCII=7)时，将会发生。下面的操作将阻止发生。
$ echo ”set bell-style none”>> ~/.inputrc
9.5.10 内存使用
对你来说，这里有两种可用的方法来得到内存的使用情况。
•“/var/log/dmesg”中的内核启动信息包含了可用内存的精确总大小。
• free(1)和top(1)显示正在运行的系统中内存资源的相关信息。
下面是一个例子。
# grep ’\] Memory’ /var/log/dmesg
[ 0.004000] Memory: 990528k/1016784k available (1975k kernel code, 25868k reserved, 931k ←-
data, 296k init)