# RTSP and SDP Configuration
The following SDP (Session Description Protocol) configuration describes two media tracks: a video and an audio track, each with specific RTP (Real-time Transport Protocol) settings.

```sdp
m=video 0 RTP/AVP 96
b=AS:79
a=3GPP-Adaptation-Support:1
a=rtpmap:96 X-SV3V-ES/90000
a=control:trackID=1

m=audio 0 RTP/AVP 97
b=AS:14
a=3GPP-Adaptation-Support:1
a=rtpmap:97 X-QDM/22050/2
a=control:trackID=2
a=x-bufferdelay:4.97
```

# RTSP Client-Server Interaction
This section details the interaction between an RTSP (Real-Time Streaming Protocol) client and server, using QuickTime as the client.

### Initial Setup for the First Track
The client initiates the setup for the first track by sending a `SETUP` request to the server.

```rtsp
SETUP rtsp://192.168.1.182/test.sdp/trackID=1 RTSP/1.0
CSeq: 2
Transport: RTP/AVP;unicast;client_port=6970-6971
x-retransmit: our-retransmit
x-dynamic-rate: 1
x-transport-options: late-tolerance=2.384000
User-Agent: QuickTime/7.4.1 (qtver=7.4.1;cpu=IA32;os=Mac 10.5.2)
Accept-Language: en-US
```

After some negotiation, the server responds with an `OK` and provides necessary parameters such as port numbers and session IDs.

```rtsp
RTSP/1.0 200 OK
Server: QTSS/6.0.3 (Build/526.3; Platform/MacOSX; Release/Darwin Streaming Server; State/Development; )
Cseq: 3
Session: 2239848818749704366
Cache-Control: no-cache
Date: Wed, 09 Jul 2008 15:19:11 GMT
Expires: Wed, 09 Jul 2008 15:19:11 GMT
Transport: RTP/AVP;unicast;source=192.168.1.182;client_port=6972-6973;server_port=6970-6971
x-Transport-Options: late-tolerance=2.384000
x-Retransmit: our-retransmit
x-Dynamic-Rate: 1
```

### Media Playback
The client then sends a `PLAY` request to start the media playback.

```rtsp
PLAY rtsp://192.168.1.182/test.sdp RTSP/1.0
CSeq: 4
Range: npt=0.000000-
x-prebuffer: maxtime=2.000000
x-transport-options: late-tolerance=10
Session: 2239848818749704366
User-Agent: QuickTime/7.4.1 (qtver=7.4.1;cpu=IA32;os=Mac 10.5.2)
```

The media server begins streaming the content via RTP over UDP. The client can control the stream using RTCP (Real-time Transport Control Protocol).

### Pausing and Teardown
The client can pause or stop the stream by sending `PAUSE` and `TEARDOWN` requests.

```rtsp
PAUSE rtsp://192.168.1.182/test.sdp RTSP/1.0
CSeq: 6
Session: 2239848818749704366
User-Agent: QuickTime/7.4.1 (qtver=7.4.1;cpu=IA32;os=Mac 10.5.2)

RTSP/1.0 200 OK
Server: QTSS/6.0.3 (Build/526.3; Platform/MacOSX; Release/Darwin Streaming Server; State/Development; )
Cseq: 6
Session: 2239848818749704366

TEARDOWN rtsp://192.168.1.182/test.sdp RTSP/1.0
CSeq: 7
Session: 2239848818749704366
User-Agent: QuickTime/7.4.1 (qtver=7.4.1;cpu=IA32;os=Mac 10.5.2)

RTSP/1.0 200 OK
Server: QTSS/6.0.3 (Build/526.3; Platform/MacOSX; Release/Darwin Streaming Server; State/Development; )
Cseq: 7
Session: 2239848818749704366
Connection: Close
```

# Understanding the Attack Surface in Mac OS X
Understanding the attack surface of a system is crucial for identifying potential vulnerabilities. This section focuses on the attack surface of Mac OS X, particularly the services and ports that are exposed by default.

### Network Traffic and Protocols
Mac OS X processes various network protocols, including TCP, UDP, ICMP, and others. The IP stack is based on FreeBSD, which is generally robust but not invulnerable. Additionally, there are drivers for Bluetooth and wireless interfaces, which are written by Apple and may contain vulnerabilities.

### Default Listening Ports
By default, Mac OS X has a limited number of listening ports. The following command lists the processes that are listening:

```sh
$ sudo lsof -P | grep IPv | grep -v localhost
ntpd 14 root 20u IPv4 0t0 UDP *:123
ntpd 14 root 21u IPv6 0t0 UDP *:123
ntpd 14 root 26u IPv4 0t0 UDP 192.168.1.4:123
mDNSRespo 21 _mdnsresponder 7u IPv4 0t0 UDP *:5353
mDNSRespo 21 _mdnsresponder 8u IPv6 0t0 UDP *:5353
configd 33 root 8u IPv4 0t0 UDP *:*
configd 33 root 11u IPv6 0t0 ICMPV6 *:*
SystemUIS 87 cmiller 9u IPv4 0t0 UDP *:*
cupsd 601 root 9u IPv4 0t0 UDP *:631
```

From this output, we can see that:
- **NTPD**: Listens on UDP port 123.
- **mDNSResponder**: Listens on UDP port 5353.
- **CUPS**: Listens on UDP port 631.

### Sandboxing and Security
To minimize the attack surface, Apple runs some daemons in a sandbox. For example, `mDNSResponder` and `ntpd` are run in a sandbox, while `cupsd` is not. The sandbox configuration for `mDNSResponder` is as follows:

```plaintext
(version 1)
(debug deny)
(deny default)
(deny mach-lookup)
(deny mach-priv-host-port)
(allow mach-lookup (global-name "com.apple.bsd.dirhelper" "com.apple.distributed_notifications.2" "com.apple.ocspd" "com.apple.mDNSResponderHelper" "com.apple.SecurityServer" "com.apple.SystemConfiguration.configd" "com.apple.system.DirectoryService.libinfo_v1" "com.apple.system.notification_center"))
(allow network*)
(allow sysctl-read)
(allow file-read-metadata)
```

This configuration restricts the operations that `mDNSResponder` can perform, enhancing security.