# Can Systems Explain Permissions Better? Understanding Users’ Misperceptions under Smartphone Runtime Permission Model

## Authors
- Bingyu Shen, University of California, San Diego
- Lili Wei, The Hong Kong University of Science and Technology
- Chengcheng Xiang, Yudong Wu, Mingyao Shen, and Yuanyuan Zhou, University of California, San Diego
- Xinxin Jin, Whova, Inc.

## Abstract
Modern smartphone operating systems allow users to manage permissions according to their preferences through a runtime permission model. However, the limited information provided by these systems when requesting permissions makes it challenging for users to fully understand the scope and potential risks associated with these permissions.

In this paper, we first investigate the extent to which current system-provided information helps users understand the scope and risks of permissions. We employ a mixed-methods approach, including real permission settings from 4,636 Android users, an interview study with 20 participants, and large-scale internet surveys of 1,559 users. Our findings reveal several common misunderstandings among users regarding the runtime permission model. Only 6.1% of users can accurately infer the scope of permission groups based on the system-provided information, indicating that the current information is insufficient.

We then explore what additional information systems can provide to help users make more informed permission decisions. By surveying users' common concerns about apps' permission requests, we identify five types of information (i.e., decision factors) that are helpful for users' decisions. We further study the impact and helpfulness of these factors on users' permission decisions using both positive and negative messages. Our results show that the background access factor is the most helpful, while the grant rate is the least helpful. Based on our findings, we provide recommendations for system designers to enhance future systems with more comprehensive permission information.

## 1. Introduction
Smartphones have become ubiquitous [23, 52]. The latest versions of major smartphone operating systems, such as Android and iOS, offer runtime permission management, allowing users to decide whether to grant or deny apps' requests to access private data like photos and contacts [16, 19]. However, users may unintentionally make incorrect permission decisions, leading to significant privacy leaks, as seen in recent security incidents [13, 17, 18, 20]. For example, in March 2018, it was reported that the Facebook Android app collected and uploaded users' call history and SMS messages without their full awareness, even though they had granted the necessary permissions [17].

Compared to the previous install-time model, the runtime permission model introduces three new challenges:
1. **Brief Descriptions**: The runtime permission model provides shorter and briefer descriptions for permission requests, making it difficult for users to understand the scope of the data being accessed.
2. **Permission Groups**: Users need to understand the details of the private data granted within each permission group to make informed decisions.
3. **Compatibility Issues**: Old apps can bypass the runtime permission mechanism and directly obtain all requested permissions after installation on Android 6-9, posing new security risks.

Current smartphone systems play a neutral and passive role in helping users understand and manage permissions, providing only brief and often incomplete descriptions. This can lead to misunderstandings. For instance, the permission request dialog in Figure 1(a) informs users that Snapchat will "make and manage phone calls," but does not mention that the app can also collect the phone's unique ID (IMEI). Similarly, the dialog in Figure 1(b) states that Twitter will "access location" but does not specify how this data will be used.

To better explain permissions, smartphone systems allow app developers to provide explanations, but this has several issues. Developers may not provide accurate or comprehensive explanations, leading to user misperceptions [50, 57]. It is therefore essential for systems to provide more accurate and detailed information to help users understand and manage permissions.

Additionally, it is unclear whether systems effectively notify users of the risks associated with permission model changes. Our study aims to identify problems in the runtime permission model and evaluate their impacts on users by addressing the following research questions:

**RQ1.** How commonly do users have low-version apps installed, which may take advantage of permission model compatibility to bypass runtime user consents?

**RQ2.** Can the information provided by the system help ordinary users precisely comprehend the permissions and their capabilities? How often do users review their permission settings after granting them at runtime?

**RQ3.** What extra information (if the system can provide) would impact users' permission decisions?

To answer these questions, we conducted three types of studies: collecting app permission settings from 4,636 real mobile users, conducting an interview study with 20 participants, and two online surveys with 359 and 1,200 participants. Our findings include:
1. Low-version apps are still widely used, with 61.8% of the 4,636 studied Android users having at least one such app installed.
2. Only 6.1% of survey respondents can accurately infer the scope of all permission groups after reading system-provided explanations.
3. Messages highlighting negative aspects of the apps are more likely to impact users' permission decisions.

This paper makes the following contributions:
- We study users' understanding of the information provided by smartphone systems for the runtime permission model and identify common misunderstandings.
- We identify five factors that users are concerned about in making permission decisions and quantitatively compare their impact from both positive and negative perspectives.
- Based on our findings, we provide recommendations for smartphone OS designers to address common misunderstandings of the runtime permission model.

## 2. Background

### 2.1. Permissions & Permission Groups
Permissions are designed to gain explicit consent from smartphone users to access sensitive data or system resources. Smartphone OSes organize permissions into groups, allowing users to decide whether to allow or deny each group [15]. For example, in Android, the `READ_SMS` and `RECEIVE_SMS` permissions are included in the SMS group. When either permission is requested, the system asks for the entire SMS group with the same notice.

Users can manage permissions in two ways in the runtime model:
1. **Runtime Dialogs**: Users can make permission decisions in dialogs when using an app, but these dialogs are often not informative due to their brevity and lack of detail.
2. **Privacy Settings**: Users can grant or revoke permissions in privacy settings, but the system settings do not provide detailed explanations or clear definitions of permission groups.

### 2.2. Permission Management
#### On Android
Since version 6.0, released in 2015, Android has transitioned from the install-time to the runtime permission model. In the install-time model, a list of requested permissions and their descriptions were shown before installation. Users could either grant all permissions or reject the installation. In the runtime model, permission request dialogs are shown when the app is used, allowing users to make granular decisions. However, compatibility issues arise with older apps, which can bypass the runtime model and automatically receive all permissions upon installation.

#### On iOS
iOS has used the runtime permission model since iOS 6 in 2012 [12]. It differs from Android in two key ways:
1. **Finer-Grained Permissions**: iOS allows users to manage specific categories of personal data within permission groups, such as step count or heart rate in the Health group.
2. **Usage Explanations**: iOS requires app developers to provide usage explanations for each requested sensitive resource, which is optional on Android. However, developers may provide partial or misleading explanations [50, 57].

## 3. Methodology

### 3.1. Permission System Evolution Study
To study the issues related to permission model changes, we developed an Android app, Permission Checker (PerChecker), to collect data on installed apps and their permission settings from real users. This app was released on Google Play in June 2018 and received over 10k downloads by June 2019. We collected data from 4,636 distinct Android users whose phones support the runtime permission model. The dataset is available at [7].

### 3.2. Interview Study
We conducted semi-structured interviews to study users' comprehension of permission groups and related risks, as well as factors affecting permission decisions. Participants must own a smartphone with the runtime permission model. The interview results informed the design of the surveys in §3.3. The full interview questions are available online [10].

#### Interview Design Methodology
Our interviews followed a predefined structure:
1. **Permission Group Comprehension**: We asked if users could find and understand permission settings, and how often they reviewed them.
2. **Permission Model Changes (Android only)**: We showed participants a prompt for downloading an app with a low target SDK version and asked about their expectations for permission grants.
3. **Permission Rationale (iOS only)**: We showed a screenshot of a Camera permission request and asked about the source and helpfulness of the rationale.
4. **Concerns in Granting Permissions**: We asked about uncomfortable permission requests and the factors considered in making permission decisions.

#### Recruitment
We advertised the study in public places and conducted interviews in a coffee shop. Each interview lasted 10-30 minutes, and participants were compensated with a $5 gift card. Data analysis involved transcribing and coding the text, with reliability measured using Krippendorff’s α statistic [42].

### 3.3. Internet Survey
We conducted two separate surveys to study users' comprehension and experience with permissions. The survey structure and results are detailed in the subsequent sections.