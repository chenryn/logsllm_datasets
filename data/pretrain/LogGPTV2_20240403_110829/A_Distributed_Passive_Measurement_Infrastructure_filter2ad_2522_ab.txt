giving the user an indication of the amount of traﬃc that his consumer might
receive.
The example in Figure 3 contains a consumer network (CN). It is placed on
a separate switch to minimize processing required by the MArN, thus enabling
additional consumers to be easily connected to the MArN, for instance new
probes, analyzers etc. to be evaluated in parallel. If the number of consumers is
low, the MArN switch might handle them directly, and no CN switch is necessary.
This would be the normal setup, see Figure 6. In Figure 7 a minimal MAr is
shown. In both cases the MPs are using a separate network for the time signal
distribution.
2.3 Consumer
A consumer is a user-controlled device that accepts packets according to the
format speciﬁed by the system. A consumer should ﬁlter the content of the
measurement frame that it receives, since the MP merges multiple user requests
some ﬁlters will capture packets that match several requests. Such a joint ﬁlter
might not perfectly match the desired frame description; this is discussed in the
following section.
MArN
Switch
MP1
MP2
A Distributed Passive Measurement Infrastructure
221
Control
Data
MArC
Users/SMA
C
C
c
Fig. 6. Normal MAr
MArN
Control
Data
MP1
Switch
MArC
Users/SMA
C
Fig. 7. Minimal MAr
3 Filters and Rules
A user supplies rules to the MArC. These rules describe what data the user
desires to collect, where the data should be collected, when the data should be
collected and where to send the data. The MArC uses this information to create
ﬁlters that the MPs understand. The ﬁlters that the MP uses are a combination
of all the user supplied rules, combined in such a manner that all requests are met
in a best eﬀort style. The MArC keeps track of the MPs and their capabilities,
thus it knows how many ﬁlters a MP can handle before it runs into performance
problems. The MArC also monitors the performance of the MArN and reject
user rules that could cause performance problems within the MArN. If a MP is
to obtain a ﬁlter list that would push it into a region of potential performance
problems, the MArC will alter the ﬁlters in order to minimize the number of
ﬁlters. By doing this the load on the MP is kept at a reasonable level, but this
approach requires the consumers to do some ﬁltering of their own. Hence, it is
up to the user to supply the desired Consumer with a ﬁlter. The ﬁlters within a
MP are arranged in such a manner that no packet is reported twice by the MP.
Let’s give a simple example, we have one MP and two consumers C1 and C2.
Initially we have two rules (using BPF syntax):
P. Arlos, M. Fiedler, and A.A. Nilsson
222
R1 {tcp host A.a} which sends its data to C1.
R2 {ip net A} which targets C2
Here two approaches are possible; the ﬁrst during low load would have the fol-
lowing ﬁlters sent to the MP:
F1 {tcp host A.a}→ M1
F2 {ip net A}→ C2
Here M1 is a multicast address that C1 and C2 listens to. If the load on the MP
approaches a high level then only one ﬁlter would be sent to the MP
F1 {ip net A}→ M1
In this case the C1 consumer would need to perform ﬁltering in order to select
the TCP segments of host A.a. By default a consumer should always ﬁlter the
measurement data that it receives, ensuring that it passes a correct stream to
the analysis/storage entity.
4 Privacy and Security Issues
A MP will see all the traﬃc passing on a link that it is tapping, which can be
viewed as a intrusion of privacy. Furthermore, since the majority of the network
protocols used today were not designed with security in mind, user credentials
might pass on the link and be clearly visible to the MP. This can be an intrusion
of privacy and should require special care on behalf of the measurement system
and its users. If the data collected from the system is only intended for internal
use, it might be enough that all users and the network-owner have agreed to
that their traﬃc can be monitored to allow for measurements. However, if the
data is to be shared with researchers in other organizations, the data should be
deprivatized. Deprivatization [7] can be done on various levels, from the removal
of parts in the application data to the removal of all network data. We believe
that the system should minimize the alternation of the captured data and leave
the anonymization to the consumers. If the MP would anonymize the data, e.g.
through scrambling of addresses [8], some consumers such as intrusion detection
systems or charging systems might not be able to operate anymore. However, if
the system does deprivatization by default, this should be done in the MPs. If
address scrambling is utilized, this causes problems when the user speciﬁes the
measurement rules. If the unscrambled address was used, the user will obtain
scrambled addresses matching his requirement and then it is possible to reverse-
engineer the scrambling system. If the scrambled address was used, the user
would need to know how to create that scrambled address. Probably, the ﬁrst
method should be chosen. In that case, the only person that is capable of reverse-
engineering the packet trace is the user requesting the trace, since he knows
both scrambled and unscrambled address. Now, if the packet trace is stolen, the
thief cannot match packets to individual hosts/users unless he has access to a
descrambler and the scrambling key.
A Distributed Passive Measurement Infrastructure
223
Privacy issues will probably have to be addressed by specialized consumers.
For instance, we have two consumers, a intrusion detection system (IDS) and a
link utilization estimator (LUE). The IDS needs undistorted information. The
LUE could on the other hand use deprivatized data, but since the MP will not
send two copies of the same packet there is a problem. It is probable that a
network owner would like to have control of the information that leaves his net-
work, so it would be easier for the network owner to supply an export consumer
that deprivatizes the data according to his own policies, which might not meet
the particular desires of the user. For our own measurements, the agreement we
made with the system owner was the following: The MPs are only allowed to
capture headers, not user payload. Furthermore, the data leaving a consumer
may only be in statistical form, or deprivatized in such a manner that it is im-
possible to reverse-engineer the data to obtain information that allows you to
identify a particular individual.
MA1-MArC
MA1-SMAfilter
MA2-MArC
MA2-SMAfilter
Control
Data
SMArC
Users
SMAConsumer1
SMAConsumer2
Fig. 8. Example of a SMAr
From a security point of view, all components in the system should be pro-
tected from unauthorized access. The simplest way to do this is to have the sys-
tem operating on a separate network, with no connection to any other networks.
This would however be expensive and unpractical in measurements distributed
over a wide area. The solution to this it to utilize Super Measurement Areas
(SMAr), see Figure 8. SMAr’s are used to connect to MAr’s at diﬀerent loca-
tions using existing infrastructure. A SMAr can be seen as a MAr at a higher
level, the MAr’s MP becomes SMArFilters (specialized consumers that attach
to the MArN), the MArs consumers are called SMArConsumers. Between the
SMArFilters and SMArConsumers TCP is used to provide reliable communica-
tion. The MPs and the MArN need to be protected from unauthorized access,
both physical and logically. Physical protection of the MAr subsystems is the
ﬁrst requirement in giving logical protection; the consumers and the MArC need
to be protected from intrusions via their connection to the users.
224
P. Arlos, M. Fiedler, and A.A. Nilsson
5 Examples of Use
As of writing two MAr have been implemented and used. One is available online
via http://inga.its.bth.se/projects/dpmi and is mainly used in a controlled envi-
ronment. The second MAr consisted of two measurement points each monitoring
a gigabit link on a campus network. In both cases only one physical consumer
was used, but it was suﬃcient to handle up to eight logical consumers. Examples
of consumers are: estimation of traﬃc distribution (at link, network, transport
and application level); link utilization; packet inter arrival time; communication
identiﬁcation; and bottleneck identiﬁcation [9]. At the time of writing we are
preparing a third MAr to be deployed in an ISP network, where it will initially
be used for bottleneck identiﬁcation. In Figure 9 we visualize the result from a
analyzer that identiﬁes bottlenecks. It uses two consumers to estimate the link
bit rate over a given time intervall, these are then transferred to a database
which is accessed by the visualizer that estimates the bottleneck.
Bottleneck
0.2
0.15
0.1
0.05
0
−0.05
−0.1
−0.15
−0.2
0
1
2
3
Bit rate [Mbps]
4
5
6
Fig. 9. Example of a consumer: Visualization of a bottleneck through bitrate histogram
diﬀerence plots (c.f. [9])
A Distributed Passive Measurement Infrastructure
225
Fig. 10. User interface for adding rules
In Figure 10 the MArC (prototype) interface for adding a rule is shown. In
this implementation all tasks are done manually, the goal was to develop the MP
not the MArC. The following ﬁltering options are availible, the MASK ﬁelds are
used to mask the packet value.
– CI: Physical interface identiﬁer.
– VLAN TCI: VLAN number and priority.
– ETH TYPE: Ethernet type.
– ETH SRC/DST: Ethernet source/destination address.
– IP PROTO: IP payload type.
– IP SRC/DST: IP source/destination address.
– SRC/DST PORT: Transport protocol source/destination port numbers (if
applicable).
– DESTADDR: What Ethernet address should receive the measurement data?
– TYPE: Which type of transport should the MP use? Ethernet, UDP or TCP.
– CAPLEN: How much of each captured frame should we store?
226
P. Arlos, M. Fiedler, and A.A. Nilsson
FilterID is a number that speciﬁes in which order the MP should check its ﬁlters,
starting with number zero. Index will indicate which ﬁelds that are used in the
rule speciﬁcation. For instance if we wish to collect all packets caught on a speciﬁc
CI the index would be 512, and the CI ﬁeld would hold a string identifying the
CI. If we would like to capture IP packets caught on a speciﬁc CI, index would
be 640, ETH TYPE=2048 and CI a string specifying the interface.
6 Ongoing and Future Work
Initial experiences with the system are encouraging, and development of con-
sumers is currently ongoing. The experience of the demo has indicated that the
MP’s software needs to be changed in such a manner that the MPs periodically
ﬂush their measurement buﬀers, in order to prevent consumers from waiting
long times. We are considering a modiﬁcation of the system so that the MArC
supplies the consumers automatically with the information that they need with
regards to ﬁlters and multicast addresses.
To handle the increased link speeds, new devices with better timestamping
accuracy are needed. Even if we can obtain this accuracy, a single device will
probably run into problems when measuring such a link. Hence another task
would be to investigate how to distribute the measurement task of a link onto
several MPs. Compression of frame data is also considered to be implemented,
this would could enable us to do full frame capturing without requiring a MArN
that is more powerful that the observed link. We also need to evaluate the
performance of a MArN.
The infrastructure is being considered as a part of the EuroNGI WP.JRA.4.3
[10] Measurement tool. This tool will support traﬃc generation, measurement,
analysis and visualization.
7 Conclusions
In this paper we have presented a distributed passive measurement infrastruc-
ture, which has separate components for packet capturing, control and analysis.
We discussed how the system deals with multiple users and their request for
data. Since the infrastructure is passive we addressed the security and privacy
issues associated with this. Furthermore, we gave examples of current usage and
future work.
References
1. CAIDA: CoralReef. (2005) http://www.caida.org/tools/measurement/coralreef
(Verﬁed in January 2005).
2. Sprint: IPMON (2005) http://ipmon.sprint.com (Veriﬁed in January 2005).
3. AT&T: Gigascope (2005) http://www.research.att.com/info/Projects/Gigascope
(Veriﬁed in January 2005).
A Distributed Passive Measurement Infrastructure
227
4. IETF: PSAMP Workgroup. (2005) http://www.ietf.org/html.charters/psamp-
charter.html (Verﬁed in January 2005).
5. IETF: IPFIX Workgroup. (2005) http://www.ietf.org/html.charters/ipﬁx-
charter.html (Verﬁed in January 2005).
6. IETF: A Framework for Packet Selection and Reporting. (2005)
http://www.ietf.org/internet-drafts/draft-ietf-psamp-framework-10.txt (Verﬁed in
January 2005).
7. Pang, R., Paxson, V.: A high-level programming environment for packet trace
anonymization and transformation. In: SIGCOMM ’03: Proceedings of the 2003
conference on Applications, technologies, architectures, and protocols for computer
communications, ACM Press (2003) 339–351
8. Xu, J., Fan, J., Ammar, M., Moon, S.B.: On the design and performance of preﬁx-
preserving ip traﬃc trace anonymization. In: IMW ’01: Proceedings of the 1st ACM
SIGCOMM Workshop on Internet Measurement, ACM Press (2001) 263–266
9. Fiedler, M., Tutschku, K., Carlsson, P., Nilsson, A.A.: Identiﬁcation of performance
degradation in ip networks using throughput statistic. In: Proceedings of the 18th
nternational Teletraﬃc Congress (ITC-18), ELSEVIER (2003) 399–408
10. EuroNGI: Homepage (2005) http://www.eurongi.org (Veriﬁed in January 2005).
11. TCPDUMP Public Repository: Homepage. (2005) http://www.tcpdump.org (Ver-
ﬁed in January 2005).
12. Endace Measurement Systems: Homepage. (2005) http://www.endace.com (Veri-
ﬁed in January 2005).