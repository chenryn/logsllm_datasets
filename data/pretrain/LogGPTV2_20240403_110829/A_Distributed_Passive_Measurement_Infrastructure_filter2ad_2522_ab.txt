# Indicating Traffic Volume for Consumers

To provide the user with an indication of the amount of traffic that their consumer might receive, the system employs a consumer network (CN). This CN is placed on a separate switch to minimize the processing load on the MArN, thereby allowing additional consumers (e.g., new probes, analyzers) to be easily connected and evaluated in parallel. If the number of consumers is low, the MArN switch can handle them directly, eliminating the need for a CN switch. This setup is illustrated in Figure 6, which shows a typical configuration. Figure 7, on the other hand, depicts a minimal MAr setup. In both configurations, the MPs use a separate network for time signal distribution.

## 2.3 Consumer

A consumer is a user-controlled device that accepts packets according to the format specified by the system. The consumer should filter the content of the measurement frames it receives because the MP merges multiple user requests, and some filters may capture packets that match several requests. A joint filter might not perfectly match the desired frame description; this issue is discussed in the following section.

### Figures
- **Figure 6: Normal MAr**
- **Figure 7: Minimal MAr**

## 3 Filters and Rules

Users supply rules to the MArC, which describe what data they want to collect, where and when to collect it, and where to send the data. The MArC uses this information to create filters that the MPs can understand. These filters are a combination of all user-supplied rules, designed to meet all requests in a best-effort manner. The MArC tracks the MPs' capabilities and performance, ensuring that no MP is overloaded. If a MP's filter list would cause performance issues, the MArC adjusts the filters to minimize the number of filters, thus keeping the MP's load at a reasonable level. However, this approach requires the consumers to perform some filtering of their own. 

For example, consider one MP and two consumers, C1 and C2, with the following rules (using BPF syntax):
- R1: `{tcp host A.a}` sends data to C1.
- R2: `{ip net A}` targets C2.

In low-load scenarios, the following filters would be sent to the MP:
- F1: `{tcp host A.a} → M1`
- F2: `{ip net A} → C2`

Here, M1 is a multicast address that C1 and C2 listen to. If the MP's load increases, only one filter would be sent:
- F1: `{ip net A} → M1`

In this case, C1 would need to filter the TCP segments of host A.a. By default, a consumer should always filter the measurement data it receives to ensure it passes a correct stream to the analysis or storage entity.

## 4 Privacy and Security Issues

The MP sees all traffic passing through the link it taps, which can be seen as an intrusion of privacy. Since many network protocols were not designed with security in mind, user credentials might be visible to the MP. This can be an invasion of privacy and requires special care from the measurement system and its users. If the data is for internal use, it may be sufficient for all users and the network owner to agree to monitoring. However, if the data is shared with researchers in other organizations, it should be deprivatized. Deprivatization can range from removing parts of application data to removing all network data. We believe the system should minimize alterations to captured data and leave anonymization to the consumers. If the MP anonymizes the data, some consumers, such as intrusion detection systems or charging systems, might not function properly. If deprivatization is done by default, it should be performed in the MPs. Address scrambling can cause issues when specifying measurement rules. The first method, using unscrambled addresses, allows the user to reverse-engineer the scrambling system. The second method, using scrambled addresses, requires the user to know how to create the scrambled address. The first method is preferred, as only the user requesting the trace can reverse-engineer the packet trace.

### Specialized Consumers
Privacy issues can be addressed by specialized consumers. For example, an intrusion detection system (IDS) needs undistorted information, while a link utilization estimator (LUE) can use deprivatized data. However, since the MP does not send two copies of the same packet, there is a problem. A network owner might prefer to control the information leaving their network, so an export consumer that deprivatizes data according to their policies could be used. For our measurements, we agreed that MPs are only allowed to capture headers, and the data leaving a consumer must be in statistical form or deprivatized to prevent identification of individuals.

### Figure 8: Example of a SMAr
- **SMAr**: Super Measurement Area
- **SMArFilters**: Specialized consumers attached to the MArN
- **SMArConsumers**: Consumers in the SMAr

From a security perspective, all system components should be protected from unauthorized access. The simplest way is to operate the system on a separate network, but this is impractical for wide-area measurements. SMArs connect to MAr's at different locations using existing infrastructure. Between SMArFilters and SMArConsumers, TCP is used for reliable communication. The MPs and MArN need physical and logical protection, and the consumers and MArC need protection from intrusions via their connections to users.

## 5 Examples of Use

Two MAr implementations have been deployed. One is available online and is used in a controlled environment. The second MAr monitors gigabit links on a campus network, using one physical consumer to handle up to eight logical consumers. Examples of consumers include traffic distribution estimation, link utilization, packet inter-arrival time, communication identification, and bottleneck identification. A third MAr is being prepared for deployment in an ISP network for bottleneck identification. Figure 9 visualizes the result from an analyzer that identifies bottlenecks.

### Figure 9: Visualization of a Bottleneck
- **Bottleneck Identification**: Bit rate histogram difference plots

### Figure 10: User Interface for Adding Rules
- **MArC Interface**: Options for adding rules manually

Filter options include:
- CI: Physical interface identifier
- VLAN TCI: VLAN number and priority
- ETH TYPE: Ethernet type
- ETH SRC/DST: Ethernet source/destination address
- IP PROTO: IP payload type
- IP SRC/DST: IP source/destination address
- SRC/DST PORT: Transport protocol source/destination port numbers
- DESTADDR: Ethernet address for receiving measurement data
- TYPE: Transport type (Ethernet, UDP, or TCP)
- CAPLEN: Amount of each captured frame to store

## 6 Ongoing and Future Work

Initial experiences with the system are encouraging, and consumer development is ongoing. The demo experience indicates that the MP software needs to periodically flush measurement buffers to prevent long wait times for consumers. We are considering modifications to the MArC to automatically supply consumers with necessary information regarding filters and multicast addresses.

To handle increased link speeds, new devices with better timestamping accuracy are needed. Even with improved accuracy, a single device may struggle with high-speed links, so we are investigating how to distribute the measurement task across multiple MPs. Frame data compression is also being considered to enable full frame capturing without requiring a more powerful MArN. The infrastructure is being considered for the EuroNGI WP.JRA.4.3 Measurement tool, which will support traffic generation, measurement, analysis, and visualization.

## 7 Conclusions

This paper presents a distributed passive measurement infrastructure with separate components for packet capturing, control, and analysis. We discussed how the system handles multiple users and their data requests, addressing security and privacy issues. Examples of current usage and future work were also provided.

### References
1. CAIDA: CoralReef. (2005) http://www.caida.org/tools/measurement/coralreef (Verified in January 2005).
2. Sprint: IPMON (2005) http://ipmon.sprint.com (Verified in January 2005).
3. AT&T: Gigascope (2005) http://www.research.att.com/info/Projects/Gigascope (Verified in January 2005).
4. IETF: PSAMP Workgroup. (2005) http://www.ietf.org/html.charters/psamp-charter.html (Verified in January 2005).
5. IETF: IPFIX Workgroup. (2005) http://www.ietf.org/html.charters/ipfix-charter.html (Verified in January 2005).
6. IETF: A Framework for Packet Selection and Reporting. (2005) http://www.ietf.org/internet-drafts/draft-ietf-psamp-framework-10.txt (Verified in January 2005).
7. Pang, R., Paxson, V.: A high-level programming environment for packet trace anonymization and transformation. In: SIGCOMM ’03: Proceedings of the 2003 conference on Applications, technologies, architectures, and protocols for computer communications, ACM Press (2003) 339–351.
8. Xu, J., Fan, J., Ammar, M., Moon, S.B.: On the design and performance of prefix-preserving IP traffic trace anonymization. In: IMW ’01: Proceedings of the 1st ACM SIGCOMM Workshop on Internet Measurement, ACM Press (2001) 263–266.
9. Fiedler, M., Tutschku, K., Carlsson, P., Nilsson, A.A.: Identification of performance degradation in IP networks using throughput statistics. In: Proceedings of the 18th International Teletraffic Congress (ITC-18), ELSEVIER (2003) 399–408.
10. EuroNGI: Homepage (2005) http://www.eurongi.org (Verified in January 2005).
11. TCPDUMP Public Repository: Homepage. (2005) http://www.tcpdump.org (Verified in January 2005).
12. Endace Measurement Systems: Homepage. (2005) http://www.endace.com (Verified in January 2005).