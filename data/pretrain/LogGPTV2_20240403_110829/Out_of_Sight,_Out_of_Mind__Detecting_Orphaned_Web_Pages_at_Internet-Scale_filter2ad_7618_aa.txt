title:Out of Sight, Out of Mind: Detecting Orphaned Web Pages at Internet-Scale
author:Stijn Pletinckx and
Kevin Borgolte and
Tobias Fiebig
Out of Sight, Out of Mind:
Detecting Orphaned Web Pages at Internet-Scale
Stijn Pletinckx
Tobias Fiebig
Kevin Borgolte
TU Delft
PI:EMAIL
Ruhr University Bochum
PI:EMAIL
TU Delft
PI:EMAIL
Abstract
Security misconfigurations and neglected updates commonly lead
to systems being vulnerable. Especially in the context of websites,
we often find pages that were forgotten, that is, they were left on-
line after they served their purpose and never updated thereafter.
In this paper, we introduce new methodology to detect such for-
gotten or orphaned web pages. We combine historic data from the
Internet Archive with active measurements to identify pages no
longer reachable via a path from the index page, yet stay accessible
through their specific URL. We show the efficacy of our approach
and the real-world relevance of orphaned web-pages by applying
it to a sample of 100,000 domains from the Tranco Top 1M.
Leveraging our methodology, we find 1,953 pages on 907 unique
domains that are orphaned, some of which are 20 years old. Ana-
lyzing their security posture, we find that these pages are signifi-
cantly (ùëù < 0.01 using ùúí 2) more likely to be vulnerable to cross-
site scripting (XSS) and SQL injection (SQLi) vulnerabilities than
maintained pages. In fact, orphaned pages are almost ten times as
likely to suffer from XSS (19.3%) than maintained pages from a ran-
dom Internet crawl (2.0%), and maintained pages of websites with
some orphans are almost three times as vulnerable (5.9%). Con-
cerning SQLi, maintained pages on websites with some orphans
are almost as vulnerable (9.5%) as orphans (10.8%), and both are
significantly more likely to be vulnerable than other maintained
pages (2.7%). Overall, we see a clear hierarchy: Orphaned pages
are the most vulnerable, followed by maintained pages on websites
with orphans, with fully maintained sites being least vulnerable.
We share an open source implementation of our methodology to
enable the reproduction and application of our results in practice.
CCS Concepts
‚Ä¢ Security and privacy ‚Üí Web application security.
Keywords
Orphaned resources; web security; measurement;
ACM Reference Format:
Stijn Pletinckx, Kevin Borgolte, and Tobias Fiebig. 2021. Out of Sight, Out
of Mind: Detecting Orphaned Web Pages at Internet-Scale. In Proceedings
of the 2021 ACM SIGSAC Conference on Computer and Communications Secu-
rity (CCS ‚Äô21), November 15‚Äì19, 2021, Virtual Event, Republic of Korea. ACM,
New York, NY, USA, 15 pages. https://doi.org/10.1145/3460120.3485369
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full cita-
tion on the first page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the owner/author(s).
CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea.
¬© 2021 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-8454-4/21/11.
https://doi.org/10.1145/3460120.3485369
Figure 1: Matrix of known and unknown pages on a web-
site. Columns differentiate between pages that are known,
and pages that are not known by the administrator (called
‚Äúadministrator‚Äù for simplicity, this can be a team). Rows dif-
ferentiate between the public‚Äôs knowledge.
1 Introduction
The World Wide Web is an ever-changing landscape. When op-
erating a website, keeping it updated is imperative for ensuring
that it is free of bugs and vulnerabilities. However, keeping a web-
site updated and secure is a cumbersome endeavor that is rarely
achieved fully and often not at all [23]. Common causes are de-
laying or ignoring critical security updates [24] and other security
misconfigurations, often rooted in human error [12, 32].
A recent example of a security misconfiguration that led to a
compromise is Deloitte‚Äôs ‚ÄúTest your Hacker IQ‚Äù campaign [7]. This
advertisement campaign ran in 2015 and made use of a promo-
tional website that remained online long after the actual campaign
ended. In November 2020, an IT consultant discovered the old do-
main and managed to retrieve the database credentials.
This example highlights that administrators can lose track of
the state of their website and lead to an old and unmaintained
domain exposing data for years. Finding such no-longer-used do-
mains is feasible by, for example, tracking certificate transparency
logs to identify hosts that stop renewing their certificates but re-
main reachable, or by using passive DNS traces to identify domains
that, over time, receive significantly less traffic. However, these
techniques do not allow to identify URLs of abandoned content on
a single domain but at a different path, like a discontinued web
applications hosted at example.com/web-app while example.com re-
mains actively being maintained and used. In this paper, we aim
to shine light on this blind spot and we develop a methodology to
identify orphaned URLs of single domains in the wild and at-scale.
We express what it means for pages (and the URL pointing to
them) to be orphaned in terms of who knows about them (adminis-
trators vs. the public). This leads to four quadrants (Figure 1) that,
much like a Johari window [26], characterize the pages of a website
as known and unknown to the administrator and the public.
Most websites have pages that are intended for and known to
the public. At the same time, some pages are usually not known
Known toadministratorNot known toadministratorKnown topublicNot knownto public2143Public part ofthe websiteInternal part ofthe websiteForgottenpublic pagesForgotteninternal pages This work is licensed under a Creative Commons Attribution International 4.0 License. CCS '21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea. ¬© 2021 Copyright is held by the owner/author(s). ACM ISBN 978-1-4503-8454-4/21/11. https://doi.org/10.1145/3460120.3485367  Session 1A: Cybercrime CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea21to the public or even intended to be accessed by the public, such as
administrative interfaces, content management, but also internal
pages, like a company‚Äôs intranet. In general, administrators should
‚Äúknow‚Äù about both types of pages. However, they may become un-
aware of them and then these pages become orphaned. Eventually,
these pages will be unmaintained, and, for example, may not re-
ceive security updates that address existing vulnerabilities. In our
work, we identify these orphaned pages, with a specific focus on
Quadrant 1 of Figure 1, that is, pages that were once intended for
public access but have since been forgotten by the administrators.
One way how a page can become forgotten and unmaintained
is by misconfiguration when removing a web page. Successful re-
moval of a web page requires two steps: first, removing it from the
webserver, and, second, making sure no other page on the website
links to it. If only the second step is performed, then the page only
appears to be removed because it is no longer accessible by navi-
gating on the website.However, since the page itself has not been
removed, it remains accessible by navigating to its URL directly.
We classify these pages as ‚Äúorphaned‚Äù pages (see Section 2).
In this paper, we develop new methodology to detect orphaned
web pages on a website. We make use of archived data to compare
the current sitemap of a domain against its historic versions, and
extract unlisted pages that are still accessible. We further scruti-
nize this list by filtering out purposely archived pages, and perform
fingerprint comparisons and copyright checks to validate their un-
maintained status. We evaluate our implementation through a
large-scale measurement study, and confirm its efficacy for find-
ing orphaned web pages in the wild. To investigate the security
impact of orphaned web pages, we compare their security posture
to non-orphaned pages on a variety of metrics.
In summary, we make the following contributions:
‚Ä¢ We create the first methodology for detecting orphaned web
pages on a single domain, only using public information.
‚Ä¢ We perform the first large-scale detection of orphaned web
pages in the wild, and report a lower bound on the preva-
lence of them. On a sample of 100,000 websites, we observe
that at least 1,953 pages, spread over 907 domains, are or-
phaned, with some of the pages being as old as 20 years.
‚Ä¢ We compare the security posture of orphaned pages to a
control group of non-orphaned pages, and we find that or-
phaned pages are more prone to vulnerabilities. For exam-
ple, we find 19.3% of the orphaned pages processing user
input are vulnerable to cross-site scripting (XSS) attacks,
which differs substantially to 2.0% of the maintained con-
trol group being vulnerable (ùëù < 0.01 using ùúí 2).
‚Ä¢ We share an open source implementation of our methodol-
ogy to be used for further research, and by administrators
and security professionals to audit websites.
2 Background
While we are, to the best of our knowledge, the first first to com-
prehensively study orphaned resources within the context of web
pages, the general concept has been studied before (Section 7). Fol-
lowing, we briefly describe the necessary background.
(a) Site referenced
(b) Link removed
Figure 2: Sitemap example for a website at example.com.
When /page2.html stops linking to /page2/page2_1.html, then
the latter becomes orphaned.
2.1 Definition of Orphaned Web Pages
We define an orphaned web page based on the sitemap of a website.
Figure 2 shows a simplified example of such a sitemap graph: a
starting node, called root or index (example.com/index.html), with
edges (links) to children nodes (pages at example.com/page1.html,
example.com/page2.html, etc. and further descendants. A page
becomes orphaned when all links (edges) to a page (node) are re-
moved, and no other page (node) links to that page (see Figure 2b,
where the page at example.com/page2/page2_1.html has no inbound
link). However, although there is no path from the root, the page
remains accessible via its URL. That is, a page is orphaned if it can-
not be reached through graph traversal from the website‚Äôs entry
points, with a typical entry point being the website‚Äôs index page.
2.2 Types of Orphaned Web Pages
We can divide orphaned web pages into two categories: unmain-
tained orphaned pages and maintained orphaned pages.
2.2.1 Unmaintained Orphaned Web Pages Unmaintained orphaned
web pages are those where the administrators are no longer aware
of their existence (or do not care), and, consequently, do not ap-
ply (security) updates to the underlying application(s) providing
the page. For example, this can happen if a team runs uses a web-
site for a limited time (e.g., a product promotion or recruitment
campaign, as the Deloitte example in Section 1 illustrated) or if the
person responsible for maintaing a website leaves the company.
With the lack of updates, the orphaned web page might become
outdated, possibly making it prone to vulnerabilities over time.
Coming back to the quadrants of Figure 1, we can classify un-
maintained orphan pages on the right side (quadrants 1 and 4). In
quadrant 1, a user still knows the URL of the orphaned page, and
can access it directly. This means that these web pages are de-
tectable as their URL is known by someone or recorded somewhere,
like, for example, in old messaging board post or in archival data.
Pages in quadrant 4 are much more challenging to detect. These
pages are orphaned and unmaintained, but they were never in-
tended to be used by the public. This means that their specific
URL may never have been referenced on a publicly accessible site,
or that the page is hidden behind (simple) authentication. In the
former case, the page could theoretically be accessed if one could
guess the URL or brute-force it, but this is no small feat and akin
to searching for the needle in the haystack, when there might not
even be a needle in the first place. Correspondingly, we focus on
orphaned pages previously known to the public (quadrant 1), and
we consider pages unknown to the public (quadrant 4) out of scope.
example.com/index.htmlexample.com/page1.htmlexample.com/page2.htmlexample.com/page3.htmlsub.example.com/main.htmlexample.com/page2/page2_1.htmlexample.com/page3/page3_1.htmlexample.com/page1/page1_1.htmlexample.com/index.htmlexample.com/page1.htmlexample.com/page2.htmlexample.com/page3.htmlsub.example.com/main.htmlexample.com/page2/page2_1.htmlexample.com/page3/page3_1.htmlexample.com/page1/page1_1.htmlSession 1A: Cybercrime CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea222.2.2 Maintained Orphaned Web Pages Web pages may also be or-
phaned without becoming unmaintained. This can be the case if a
link is unintentionally removed. In this case, the orphaned page is
unreachable if one only follows links from an entry point on the
website. However, the administrator is still aware of the pages and
maintains them along the same care as other pages. This is also the
case if the orphaned page utilizes the same framework or content
management system as the main site.
Maintained orphaned pages correspond to the left quadrants of
Figure 1 (quadrants 2 and 3). These pages are generally less of an
issue in terms of security vulnerabilities, although they can lead
be inconvenient to users or cause confusion.
2.3 Security by Obscurity
In addition to accidentally orphaned pages, whether maintained or
not, a page might become orphaned by design, with the intention
of ‚Äúprotecting‚Äù the page against various attack vectors. Operators
may chose to ‚Äúhide‚Äù a page by removing links to it, excluding it
from public search (using robots.txt) to reduce the attack surface,
and only sharing it‚Äôs URL with a select group of (trusted) people.
This may happen for publicly available internal applications, or
for pages for which a vulnerability was discovered. Although this
might result in less exposure and less traffic to the vulnerable page,
security by obscurity is known to be largely ineffective, and the site
actually remains vulnerable to exploitation by adversaries. While
one could consider these sites as ‚Äúmaintained‚Äù orphaned pages, we
argue that if they are hidden with the goal of security by obscu-
rity, and administrators are not actually applying other security
updates, then they provide additional attack surface (unlike other
maintained orphaned pages), and they are actually unmaintained.
2.4 Security Impact of Orphaned Pages
We expect that unmaintained orphaned web pages are more prone
to vulnerabilities, due to delayed updates (or not receiving them
at all) and pre-dating modern defenses. While the main infras-
tructure of the website is likely maintained, such as the under-
lying operating system or webserver (e.g., nginx or Apache), we
see no reason to assume that administrators are patching vulnera-
bilities of orphaned web pages hosted on the infrastructure. This
also holds true for server-side applications only used by the or-
phaned pages, as the administrator expects that the functionality
is not reachable anyways, and, thus, they have no incentive to ex-
pend time and resources to apply security patches. Naturally, this
differs for systems applying automatic updating, though these au-