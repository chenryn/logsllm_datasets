### 通信成本和性能评估

**表4：协议的通信成本（单位：MB）；λ = 40, σ = 32, h = 3。在10Gbps网络中，假设往返时间（RTT）为0.2毫秒，其他情况下使用80毫秒的RTT。R → S 和 S → R 分别表示从接收者到发送者以及从发送者到接收者的通信。**

为了最大化密文批处理的利用率，我们在集合大小Ny ∈ {5535, 11041} 和 Nx ∈ {216, 220, 224} 的情况下评估了性能，这在第4.1节中有详细描述。Ny 的大小在第4.2节中确定，以确保统计安全级别达到 λ ≥ 40。如果读者希望将我们的运行时间与 [PSZ16] 中报告的结果直接比较，可以将我们的集合大小 Ny 向下取整以匹配文献中的值。

**通信成本对比：**
- 当发送者的集合大小大于216时，我们的协议在通信成本上的扩展性明显优于[PSZ16]。例如，当字符串长度为32位，且 Ny ≤ 5535 和 Nx = 220 时，我们的协议传输量为5.6MB，而相同参数下的 [PSZ16] 协议则需要30.4MB的通信——这是5.4倍的改进。
- 进一步增加 Nx 到 224 时，我们的协议仅需11.0MB的通信量，而 [PSZ16] 需要超过480MB——这相当于43.7倍的改进。
- 随着发送者集合大小的进一步增加，这种通信优势变得更加显著。

**计算时间对比：**
- 在单线程局域网环境下，当计算集合大小为 Ny ≤ 5535 和 Nx = 220 的交集时，我们的协议需要8.6秒。使用相同参数的 [PSZ16] 协议执行时间为3.1秒。尽管 [PSZ16] 在此特定设置下更快，但其通信需求是我们的5.4倍，并且计算负载在双方之间均匀分配，即每方执行 O(Nx + Ny) 次操作。相比之下，我们的协议对接收者的计算能力要求很低。

**不同带宽环境下的性能：**
- 由于我们的协议在非对称集合大小的情况下实现了比 [PSZ16] 更低的通信成本，因此在网络带宽减少时表现出更好的性能。我们考虑了几个模拟广域网环境的网络设置，其中包括100Mbps、10Mbps 和 1Mbps 的网络，RTT 均为80毫秒。在这些环境中，除了少数例外情况外，我们的协议表现优于 [PSZ16]。
- 例如，在单线程100Mbps环境下，当 Nx = 224 且 Ny ≤ 5535 时，我们的协议需要107.2秒，而 [PSZ16] 需要87.9秒。然而，在多线程设置中，我们的协议获得了显著的速度提升，使用4个线程时运行时间减少到36.7秒。另一方面，[PSZ16] 使用相同的集合大小和4个线程时需要65.5秒——相比我们的协议慢了近1.8倍。
- 当带宽进一步降低时，这种差异变得更加显著。在1Mbps单线程环境下，当 Nx = 224 且 Ny ≤ 5535 时，我们的协议需要211.1秒，而 [PSZ16] 需要4080.6秒——运行时间提高了19.3倍。使用4个线程时，我们的运行时间减少到132.7秒，而 [PSZ16] 仍需要4064.3秒——运行时间提高了30.6倍。

**表5：总通信成本（单位：MB）和运行时间（单位：秒），比较我们的协议与 [PSZ16] 和 [KKRT16]，线程数 T ∈ {1, 4}；λ = 40, σ = 32, h = 3。10Gbps 网络假设 RTT 为 0.2ms，其他情况使用 80ms RTT。[KKRT16] 仅显示单线程结果，因为其实现存在限制。[KKRT16] 的通信成本基于其论文中的公式；实际观察到的通信量约为理论值的1.5倍。**

**多线程环境下的性能：**
- 当允许发送者使用16个线程时，在局域网环境下，对于 Nx = 224 且 Ny ≤ 5535 的情况，我们的运行时间减少到16.9秒。相比之下，[PSZ16] 在16个线程下仅略微加速，对于 Nx = 224 的情况，运行时间略超过20秒。这表明即使在局域网环境下，只要发送者使用至少16个线程，我们的协议也能超越 [PSZ16]。

**接收者的工作量：**
- 我们的协议的一个重要特性是接收者所需的工作量相对较小。在许多应用中，接收者的计算能力远低于发送者。这一点在联系人发现应用中尤为明显，其中接收者可能是手机，而发送者可以在大型数据中心运行，计算资源相对廉价。例如，表3中 SEAL8192-1, α = 64, (cid:96) = 3 的参数显示，对于5535和224项的交集，接收者只需执行1.7秒的计算，而使用16个线程的服务器需要18秒，总通信量为11MB，不到2012年iOS应用程序平均下载大小的一半 [Res12]，并且仅为2015年美国智能手机每日平均移动数据使用量的十分之一 [Eri16]。相比之下，[PSZ16] 需要480MB的通信量——增加了44倍——并且接收者的计算负载显著更高，需要执行5000万次哈希表查询和数千次盲转移。

**与 Kolesnikov 等人的比较 [KKRT16]：**
- 我们还将我们的协议与 Kolesnikov 等人 [KKRT16] 的协议进行了比较，后者优化了盲转移的使用。虽然他们的结果确实改善了对称大集合的运行时间，但在我们的设置中，他们的改进带来的好处有限，并且被 [PSZ16] 采用的其他优化所超越。特别是，[PSZ16] 考虑了一种不同的盲转移优化方法，该方法在短字符串上更有效，并且还针对非对称集合大小优化了布谷鸟哈希。这些设计决策导致 [KKRT16] 在相交5535和224大小的集合时，所需的通信量是 [PSZ16] 的两倍，是我们协议的87倍。在基准测试 [KKRT16] 时，我们发现实际通信量大约是其理论值的1.5倍。

**结论：**
- 我们的协议在通信成本和计算效率方面都具有显著的优势，特别是在非对称集合大小和低带宽环境下。此外，它对接收者的计算资源要求较低，适用于多种应用场景。