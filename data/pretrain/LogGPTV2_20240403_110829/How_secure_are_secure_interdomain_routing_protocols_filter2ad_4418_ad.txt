path of type... Customers Peers Providers
(cid:2)∗
(cid:2)∗
(cid:2)
(cid:2)∗
(cid:2)∗
X
Customer
Peer
Provider
(cid:2)
X
X
Table 1: Guidelines for interception.
by announcing to a provider (and vice versa).
In the full
version [1] we present an example contradicting this, that
proves the remaining X entries in Table 1.
Tier 1s and Stubs.
Theorem 5.1 leads to a number of
observations, also noted by [2]. First, interception is easy for
Tier 1s. Since Tier 1s have no providers, they need only con-
cern themselves with the four upper-left entries in Table 1,
which indicate that they can announce paths to all their
neighbors. Secondly, interception is hard for stubs. A stub’s
neighbor is always a provider, putting it in the bottom-right
entry of Table 1, indicating that aggressive announcements
could cause a blackhole (e.g., Figure 6).
5.3 When do “Shortest-Path Export-All” at-
tack strategies cause a blackhole?
The observations of Section 5.2 are borne out by our ex-
periments. Recall that in the “Shortest-Path Export-All” at-
tack strategy, the manipulator announces his shortest (non-
rejected) to all of his neighbors. We now show that this
simple attack strategy often allows the manipulator to in-
tercept traﬃc without creating a blackhole:
Figure 7: We show the probability that the manipulator
has some available path to the victim if he uses the “Shortest-
Path Export-All” attack strategy for each of the four BGP
security variants. We present results for a randomly-chosen
victim, and a manipulator chosen from the usual four classes
(see Figure 4). We assume that manipulator runs the “Shortest-
Path Export-All” attack strategy on each BGP security vari-
ant. We can make a number of observations:
1. Manipulators with the most customers are least likely
to create a blackhole. As discussed in Section 5.2, these
manipulators are most likely to have an available customer
path to the victim, and as shown in the ﬁrst row of Table 1,
can get away with announcing to all their neighbors without
creating a blackhole.
2. The attack on BGP is most likely to cause a blackhole
(cf., the attack on origin authentication, or soBGP). Because
the manipulator announces a more attractive (i.e., short)
path, he is more likely to convince all of his neighbors to
forward traﬃc to him, and thus create a blackhole.
3. The “Shortest-Path Export-All” attack strategy on S-
BGP, never creates a blackhole (as long as the manipulator
had a path to the victim in the normal outcome). This
observation matches intuition; since S-BGP forces the ma-
nipulator to announce an available path, the manipulator
must of course have an available path to the victim.
5.4  Two  i ntercepti on  strategi es
Figure 7 immediately suggests a simple interception strat-
egy that seems to work every time:
“Shortest-Available-Path Export-All” attack strat-
egy: The manipulator should announces his shortest avail-
able path from the normal outcome to all his neighbors.
941
0.8
0.6
0.4
0.2
0
Any
Non-stubs
 > 25 customers
 > 250 customers
  BGP
OrAuth
 soBGP
 SBGP
Figure 7: Probability that the “Shortest-Path
Export-All” attack strategy does not create a black-
hole.
Recall that this is exactly the “Shortest-Path Export-All”
attack strategy on S-BGP.
Figure 3, shown that this strategy attracts more traﬃc
than the normal strategy, but also suggests that when the
network does not use S-BGP, there may be better intercep-
tion attack strategies. Indeed, Figure 7 shows that there is a
non-trivial probability that the manipulator has an available
path to the victim, even if he launches the “Shortest-Path
Export-All” attack strategy on the BGP. This suggests the
following two-phase strategy:
“Hybrid Interception” attack strategy:
First, run
the “Shortest-Path Export-All” attack strategy on the se-
cure routing protocol, and check if there is an available path
to the victim.
If no such path is available, announce the
shortest path that was available in the normal outcome to
all neighbors.4
By no means do we believe that these two strategies are
optimal; indeed, while we evaluated more clever attack strate-
gies, we omitted them here in the interest of brevity and sim-
plicity. What is surprising is that even these trivial strate-
gies can be quite eﬀective for certain manipulators.
5.5  Eva l uati ng  i ntercepti on  strategi es
From the discussion above (Figures 6 and 7, Section 5.2),
it is clear that ASes with very few customers are unlikely
to attract large volumes of traﬃc without blackholing them-
selves. For this reason, we focus our evaluation on manipula-
tors with at least 25 customers, and for brevity only present
attacks on BGP:
Figure 8: This is a CCDF of the probability that at least
a x-fraction of the ASes in the internetwork forward traﬃc
to the manipulator, under the assumption that the network
uses BGP. We compare the (a) “Shortest-Path Export-All”
attack strategy where the manipulator is allowed to create
a blackhole (and thus tends to attract more traﬃc than the
interception strategies above), with (b) the two interception
strategies above, as well as (c) the normal strategy. Our key
observation is that the “Hybrid Interception” attack strategy
intercepts a large fraction of traﬃc; e.g., at least 10% of the
ASes in the internetwork with probability over 50%!
4We note that while this strategy will attract at least as
much traﬃc as the “Shortest-Available-Path Export-All” at-
tack strategy, the manipulator stands a higher chance of
getting caught if he creates a blackhole in the ﬁrst phase of
the strategy.
1
0.8
0.6
0.4
0.2
0
0
Announce All
Hybrid Interception
Shortest Available Path Announce All
Honest
0.2
0.8
Fraction of ASes routing thru Manipulator
0.4
0.6
1
Figure 8: Interception attacks on BGP.
6. SMART ATTACKS ARE NOT OPTIMAL
We now prove that the “Shortest-Path Export-All” attack
strategy is not optimal for the manipulator. We present
three surprising counterexamples5, found in CAIDA’s AS
graph and then anonymized, that show that (a) announcing
longer paths can be better than announcing shorter ones,
(b) announcing to fewer neighbors can be better than to
announcing to more, and (c) the identity of the ASes on the
announced path matters, since it can be used to strategically
trigger BGP loop detection.
In fact, (c) also proves that
announcing a longer path can be better than a preﬁx hijack
(where the manipulator originates a preﬁx he does not own)!
6.1 Attract more by announcing longer paths!
Our ﬁrst example is for a network with soBGP, S-BGP or
data-plane veriﬁcation. We show a manipulator that triples
his attracted traﬃc by announcing a legitimate path to the
victim, that is not his shortest path. (This contradicts the
optimality of the “Shortest-Path Export-All” attack strat-
egy, which requires announcing shortest paths.) In fact, this
strategy is so eﬀective, that it attracts almost as much traﬃc
as an aggressive preﬁx hijack on unmodiﬁed BGP!
Figure 9: The manipulator m is a small stub AS in Basel,
Switzerland, that has one large provider a1 that has almost
500 customers and 50 peers, and one small provider AS a2
in Basel that has degree only four. The victim is European
broadband provider v with over 100 customers and 26 peers.
Preﬁx hijack. In a network with (unmodiﬁed) BGP, the
manipulator could run a simple preﬁx hijack, announcing
“m, Preﬁx” to both his providers, and attract traﬃc from
62% of the ASes in the internetwork (20550 ASes), including
73% of ASes with at least 25 customers, and 88% of ASes
with at least 250 customers. However, this strategy both
creates a blackhole at the manipulator, and fails against
soBGP or S-BGP.
Naive strategy. The upper (green) ﬁgure shows the
“Shortest-Path Export-All” attack strategy, where the ma-
nipulator naively announces a three-hop available path, (m,
a1, v, Preﬁx) to his provider a2. Since ASes a2 and a3 pre-
fer the customer path that leads to the manipulator, over
their existing peer paths, both will forward traﬃc to the
manipulator. He intercepts traﬃc from 16% of the ASes in
5Each example was chosen to contradict the optimality of
one aspect of the “Shortest-Path Export-All” attack strat-
egy.
95p3p
p1
a1
p3
p
p1
a1
p2
7 providers
464 customers
46 peers
p
3236
ASes
p2
7 providers
464 customers
46 peers
p
1682
1682
peer & 
customer 
Prefix   
v
2546
AS
ASes
a3
a2
3 providers
960 customers
106 peers
3 providers
Prefix   
m
v
m
3 providers
960 customers
106 peers
3 providers
a3
a2
Figure 9: Announcing a longer path.
the internetwork (5569 ASes), including 25% of ASes with
at least 25 customers, and 41% of ASes with at least 250
customers.
Clever strategy. The lower (purple) ﬁgure shows the
manipulator cleverly announcing a four-hop available path
(m, a2, a3, v, Preﬁx) to his provider a1. The large ISP a1
will prefer the longer customer path through the manipu-
lator over his shorter peer connection to victim v, but this
time, the manipulator triples the amount of traﬃc he at-
tracts, intercepting traﬃc from a total of 56% of the ASes
in the internetwork (18664 ASes), including 69% of ASes
with at least 25 customers, and 85% of ASes with at least
In fact, by announcing a longer path, the
250 customers.
manipulator earns almost as much traﬃc as the aggressive
preﬁx hijack.
Why it works. Notice that the manipulator’s large
provider a1 has hundreds more neighbors then his small
provider, a2, and that the clever strategy attracts large ISP
a1’s traﬃc while the naive strategy attracts small AS a2.
Attracting traﬃc from the larger AS is crucial to the ma-
nipulator’s success; in fact, it is more important than an-
nouncing short paths.
When it works. This strategy only involves deviating
from normal export policy, rather than lying about paths.
Thus, it succeeds against any secure routing protocol (ex-
cept when it is launched by stubs in a network with defensive
ﬁltering).
6.2 Attract more by exporting less!
This example is for a network with origin authentication,
soBGP, S-BGP, data-plane veriﬁcation, and/or defensive ﬁl-
tering. We show a manipulator that intercepts traﬃc from
25% more of the ASes in the internetwork by exporting to
fewer neighbors.
(This contradicts the optimality of the
“Shortest-Path Export-All” attack strategy, which requires
exporting to as many neighbors as possible.)
466
ASes
T1a
T1a
T1c
T1c
p1
1597
ASes
T2
T2
m
1527
ASes
2055
ASes
T1b
T1b
Tier 1 ASes
T1a
T1a
T1c
T1c
p1
6399
ASes
T1b
T1b
308
ASes
T2
T2
X
m
v
Prefix   