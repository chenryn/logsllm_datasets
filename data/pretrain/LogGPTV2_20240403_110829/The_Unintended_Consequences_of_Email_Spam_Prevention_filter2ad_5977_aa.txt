title:The Unintended Consequences of Email Spam Prevention
author:Sarah Scheffler and
Sean Smith and
Yossi Gilad and
Sharon Goldberg
The Unintended Consequences of Email
Spam Prevention
Sarah Scheﬄer1(B), Sean Smith1,3, Yossi Gilad1,2, and Sharon Goldberg1
1 Boston University, Boston, USA
PI:EMAIL
2 Massachusetts Institute of Technology, Cambridge, USA
3 Amazon Technologies, Inc., Chicago, USA
Abstract. To combat Domain Name System (DNS) cache poisoning
attacks and exploitation of the DNS as ampliﬁer in denial of service
(DoS) attacks, many recursive DNS resolvers are conﬁgured as “closed”
and refuse to answer queries made by hosts outside of their organization.
In this work, we present a technique to induce DNS queries within an
organization, using the organization’s email service and the Sender Policy
Framework (SPF) spam-checking mechanism. We use our technique to
study closed resolvers. Our study reveals that most closed DNS resolvers
have deployed common DNS poisoning defense techniques such as source
port and transaction ID randomization. However, we also ﬁnd that SPF
is often deployed in a way that allows an external attacker to cause
the organization’s resolver to issue numerous DNS queries to a victim IP
address by sending a single email to any address within the organization’s
domain, thereby providing a potential DoS vector.
1 Introduction
The Domain Name System (DNS) is one of the most fundamental Internet ser-
vices. Most clients are serviced by a recursive resolver, which queries author-
itative name servers until ﬁnding the IP address mapped to a domain name.
The ubiquitous deployment of DNS servers, their critical nature, combined with
rather limited security mechanisms embedded into the DNS protocol caused DNS
to be exploited in many malicious activities on the Internet over the years, from
denial of service (DoS) attacks [1,21,26] to cache poisoning [14]. A common best
practice for recursive DNS resolvers to protect themselves from being exploited
in such attacks is to be “closed”, meaning that the resolver will not respond to
requests for queries made by IP addresses located outside their organizations.
A closed resolver forces the attacker to operate from inside the organization’s
network, e.g., by compromising an internal machine, and therefore provides a
useful mitigation against attacks that do not target a speciﬁc organization. Since
closed resolvers are widely deployed and provide a fundamental service, studying
their operation is important to understanding how networks operate. Yet, closed
S. Smith and Y. Gilad—Work conducted while at Boston University.
c(cid:2) Springer International Publishing AG, part of Springer Nature 2018
R. Beverly et al. (Eds.): PAM 2018, LNCS 10771, pp. 158–169, 2018.
https://doi.org/10.1007/978-3-319-76481-8_12
The Unintended Consequences of Email Spam Prevention
159
resolvers make it diﬃcult for researchers to measure the DNS landscape, because
recursive resolvers would no longer answer remote queries. Thus performing an
Internet-wide scan of DNS services becomes a challenge.
In this study, we use a method of querying closed recursive DNS resolvers
by using email, taking advantage of the Sender Policy Framework [15,25], a
common anti-spam defense for email. By sending an email to a mail server within
the organization, we trigger an SPF check for the sender’s address, triggering
an intra-organization query for a domain controlled by our own authoritative
nameserver, and thus bypass the “closed” defense of the resolver. This email
should be caught by the spam ﬁlter aided by the receiver’s SPF system, and
thus is typically not noticeable by mail server administrators.
We conducted a partial Internet scan, covering 15% of the IPv4 address space,
searching for mail servers, and then sent emails to each of the mail servers we
found. We then studied the induced DNS queries that our email triggered using
a nameserver under our control. Our results show that many mail servers use an
unsafe SPF conﬁguration that will cause more than the maximum-recommended
10 DNS queries. We ran a test on the scanned mail servers that would induce a
maximum of 10 DNS queries in the recommended SPF conﬁguration, and would
induce up to 42 DNS queries in a conﬁguration vulnerable to abuse. We received
on average 34.3 induced queries, indicating that many mail servers in the wild
use this potentially-vulnerable conﬁguration. We also used the DNS queries we
received to measure the deployment of various anti-cache poisoning mechanisms
across closed DNS resolvers.
We provide required background on SPF in Sect. 2. We discuss measurement
methodology in Sect. 3 and analyze our results in Sect. 4. Section 5 discusses
related work, and we conclude with recommendations in Sect. 6.
2 SMTP and Sender Policy Framework (SPF)
Emails are sent and received by Mail Transfer Agents (MTAs). In “vanilla”
SMTP, any MTA is allowed to send email from any sending address. Much
like there is no mechanism to stop somebody from writing a fraudulent return
address on an envelope, there is no mechanism in SMTP to stop somebody from
sending from an email address with a domain they are not part of. As an anti-
spam defense, the Sender Policy Framework (SPF) was introduced in 2006 [25]
as means of verifying email-sender identity. It was later updated in 2014 [15].
In SPF, a TXT record is set in the sender’s domain to specify which IP
addresses are approved to serve as the domain’s MTAs (i.e., send emails on
behalf of senders in that domain). When an email is sent, the receiving MTA
retrieves this record using a DNS query to determine whether the sending MTA’s
IP address was valid.
SPF allows for more complicated validation procedure than just querying for
whitelisted MTA addresses. The TXT record contains a list of terms, which the
recipient’s MTA uses to check for matches with the sender’s IP address. If the
IP address matches a term, then the qualiﬁer on that term determines whether
160
S. Scheﬄer et al.
the email should be delivered or rejected. It is common practice to end an SPF
record with a “-all” term, which rejects any email address that did not match
any other term. Some SPF terms can cause additional DNS queries, such as for
the IP address matching a given A or MX record. One important feature of SPF
we use in future sections is support for include terms, which allow an SPF
record to tell an MTA to recursively evaluate another SPF record and use the
result in the evaluation of the “top-level” record.
Limiting SPF’s overhead. In order to avoid unreasonable load on the DNS,
the SPF standard [15] requires limiting the number of DNS query-causing terms
to 10, and if any more are found, an error must be returned. However, as we
see in the next section, the include term allows a malicious email sender to
circumvent this limit.
3 Measurement Methodology
In our experiment, we registered the domain name emaildns.net. We control its
authoritative nameserver. The emaildns.net domain contains several SPF TXT
records for subdomains that correspond to three diﬀerent SPF conﬁgurations,
which we explain in Sect. 3.3. We send emails from these subdomains to MTAs
that we ﬁnd by using zmap [5]. These emails trigger an SPF check that causes
the MTA’s DNS resolver to query our authoritative nameserver. We can observe
the queries made to our nameserver, and therefore study the behavior of both
the DNS resolvers and the MTAs they are querying for, even if those resolvers
are closed.
3.1 Ethical Considerations
This study used a remote port scan, which relied on information publicly avail-
able by trying to communicate with MTAs legitimately. We sent at most three
emails to each MTA we found, which would cause a maximum of 60 DNS queries
per email (5 for goodspf, 10 for badspf, and 42 for treespf conﬁguration, plus 1
query for the original SPF record for each conﬁguration). We believe that this
should not cause considerable load on any MTA or recursive resolver.
We did our best to ensure that as few humans as possible would receive
email, by attempting to ﬁnd email addresses that would not be delivered to a
human. We also wrote the SPF record in the emaildns.net zone to deliberately
fail after checking all our recursive statements, so that any correctly-conﬁgured
SPF system would ultimately reject our email.
Our measurement emails referred readers to our project website https://
emaildns.net which has information about our study, and contains a form that
allows adding email addresses to a blacklist, if anyone wanted to opt-out of the
remaining part of the study. We attempted to contact 190597 MTAs found by our
zmap scan, and in total we sent 38720 emails successfully. During this process, 23
email addresses were added to our blacklist via our web form. We also received
three emailed requests to opt-out of the study and one emailed request to send
the owner of the MTA the results of our study when we completed it.
The Unintended Consequences of Email Spam Prevention
161
Fig. 1. Measurement technique. The example emails an MTA at IP address 1.2.3.4
using the “goodspf” conﬁguration. The steps are detailed in the text.
We also contacted the authors of a paper that used a similar IPv4 scan [10]
and used their blacklist of CIDR ranges, under the logic that anyone that opted
out of that study probably would not want to be part of this one either. We noted
on our website that we would add CIDR ranges to the blacklist if we received
an email request to do so. We received no such requests during the scan.
3.2 Operation
Our measurement has several steps, which we summarize in Fig. 1 and describe
in more detail in Sect. 3.4. First, we test whether an IP address is a potential
MTA, by using zmap [5] to check if that IP address hosts a server listening on
port 25, the default SMTP port. Second, because SPF is only used when an email
is sent to a valid address, for each MTA IP address we attempt to ﬁnd a valid
email address served by that MTA, following a procedure discussed in Sect. 3.4.
Third, we send emails to addresses served by the MTA to invoke the SPF check.
The sending address of this email is within emaildns.net, so our authorita-
tive nameserver for emaildns.net will be queried during the SPF check of this
email. To allow measuring diﬀerent MTAs/DNS resolvers in parallel, we encode
information about the recipient MTA in the subdomain of the sender’s address
in our email. The sending address is in the form 
..spf-config.emaildns.net. For
sending to an
MTA at 1.2.3.4 using the “treespf” conﬁg, the domain of the send-
ing email address, which will be checked via the receiver’s SPF,
is
1-2-3-4.25.treespf.emaildns.net.
example,
if
Steps 4–11 in Fig. 1 illustrate what happens after an email was sent and SPF
checks begin. In step 4 the recipient’s MTA issues a DNS query for the sending
domain name’s SPF record. In step 5 the DNS resolver at the recipient MTA side
(possibly a closed resolver) sends this TXT query for the sender’s domain name
to the authoritative nameserver at emaildns.net, where it is logged. In steps
162
S. Scheﬄer et al.
6–7 the response, which contains a number of include statements depending on
the SPF conﬁguration, is sent to the recipient’s DNS resolver and then its MTA.
Steps 8–11 are induced DNS queries for the names speciﬁed by the include
statements in the original SPF record. Steps 8–11 repeat a number of times
dependant on the SPF conﬁguration, as discussed in Sect. 3.3.
3.3 SPF Conﬁgurations
We use three sets of SPF records, which we call goodspf, badspf, and treespf.
As discussed in Sect. 2, SPF records are restricted to containing no more than
10 DNS query-causing terms. Our three SPF implementations are designed to
study how this restriction works in practice. goodspf contains 5 DNS query-