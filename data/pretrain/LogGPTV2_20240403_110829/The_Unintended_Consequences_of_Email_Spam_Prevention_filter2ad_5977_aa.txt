# The Unintended Consequences of Email Spam Prevention

**Authors:**
- Sarah Scheffler
- Sean Smith
- Yossi Gilad
- Sharon Goldberg

**Affiliations:**
1. Boston University, Boston, USA
2. Massachusetts Institute of Technology, Cambridge, USA
3. Amazon Technologies, Inc., Chicago, USA

## Abstract
To combat Domain Name System (DNS) cache poisoning attacks and the exploitation of DNS as an amplifier in denial of service (DoS) attacks, many recursive DNS resolvers are configured as "closed," refusing to answer queries from hosts outside their organization. In this work, we present a technique to induce DNS queries within an organization using the organization's email service and the Sender Policy Framework (SPF) spam-checking mechanism. Our study reveals that most closed DNS resolvers have deployed common DNS poisoning defense techniques such as source port and transaction ID randomization. However, we also find that SPF is often configured in a way that allows an external attacker to cause the organization's resolver to issue numerous DNS queries to a victim IP address by sending a single email to any address within the organization's domain, thereby providing a potential DoS vector.

## 1. Introduction
The Domain Name System (DNS) is one of the most fundamental Internet services. Most clients are serviced by a recursive resolver, which queries authoritative name servers to find the IP address mapped to a domain name. The widespread deployment of DNS servers, combined with limited security mechanisms, has made DNS a target for malicious activities, including denial of service (DoS) attacks and cache poisoning. A common best practice for recursive DNS resolvers is to be "closed," meaning they will not respond to requests from IP addresses outside their organization. This forces attackers to operate from inside the network, providing a useful mitigation against attacks not targeting a specific organization.

Closed resolvers are widely deployed and provide essential services, making it important to understand their operation. However, they make it difficult for researchers to measure the DNS landscape, as recursive resolvers no longer answer remote queries. In this study, we use a method to query closed recursive DNS resolvers by leveraging the Sender Policy Framework (SPF), a common anti-spam defense for email. By sending an email to a mail server within the organization, we trigger an SPF check, which induces intra-organization queries for a domain controlled by our authoritative nameserver, bypassing the "closed" defense of the resolver. This email is typically caught by the spam filter, making it unnoticeable to mail server administrators.

We conducted a partial Internet scan covering 15% of the IPv4 address space, searching for mail servers, and then sent emails to each found mail server. We studied the induced DNS queries using a nameserver under our control. Our results show that many mail servers use an unsafe SPF configuration, causing more than the maximum-recommended 10 DNS queries. We tested the scanned mail servers, inducing a maximum of 10 DNS queries in the recommended SPF configuration and up to 42 DNS queries in a vulnerable configuration. On average, we received 34.3 induced queries, indicating that many mail servers use this potentially-vulnerable configuration. We also used the DNS queries to measure the deployment of various anti-cache poisoning mechanisms across closed DNS resolvers.

## 2. SMTP and Sender Policy Framework (SPF)
Emails are sent and received by Mail Transfer Agents (MTAs). In standard SMTP, any MTA can send email from any sending address, similar to writing a fraudulent return address on an envelope. As an anti-spam defense, the Sender Policy Framework (SPF) was introduced in 2006 [25] to verify email-sender identity and updated in 2014 [15]. In SPF, a TXT record is set in the sender's domain to specify approved IP addresses for MTAs. When an email is sent, the receiving MTA retrieves this record via a DNS query to validate the sending MTA's IP address.

SPF allows for a more complex validation procedure, including additional DNS queries for A or MX records. It is common to end an SPF record with a "-all" term, rejecting any email address that did not match other terms. SPF also supports include terms, allowing an SPF record to recursively evaluate another SPF record.

### Limiting SPF's Overhead
To avoid unreasonable load on the DNS, the SPF standard [15] requires limiting the number of DNS query-causing terms to 10. However, the include term can be exploited to circumvent this limit.

## 3. Measurement Methodology
In our experiment, we registered the domain name `emaildns.net` and controlled its authoritative nameserver. The domain contains several SPF TXT records for subdomains corresponding to three different SPF configurations, explained in Section 3.3. We sent emails from these subdomains to MTAs found using zmap [5], triggering an SPF check that caused the MTA's DNS resolver to query our nameserver. We observed the queries to study the behavior of both the DNS resolvers and the MTAs, even if those resolvers were closed.

### 3.1 Ethical Considerations
Our study used a remote port scan, relying on publicly available information. We sent at most three emails to each MTA, causing a maximum of 60 DNS queries per email. We ensured minimal human interaction by attempting to find email addresses that would not be delivered to a human. The SPF record in the `emaildns.net` zone was designed to fail after checking all our recursive statements, so any correctly-configured SPF system would reject our email.

Our measurement emails referred readers to our project website, https://emaildns.net, which provided information about our study and a form to opt-out. We attempted to contact 190,597 MTAs, successfully sending 38,720 emails. During this process, 23 email addresses were added to our blacklist, and we received three opt-out requests and one request for study results.

### 3.2 Operation
Our measurement process, summarized in Figure 1, includes several steps:
1. **Identify Potential MTAs:** Use zmap to check if an IP address hosts a server listening on port 25.
2. **Find Valid Email Addresses:** For each MTA IP address, attempt to find a valid email address served by that MTA.
3. **Send Emails:** Send emails to the found addresses to invoke the SPF check. The sending address is within `emaildns.net`, so our nameserver is queried during the SPF check. The sending address format is `IP-address.spf-config.emaildns.net`.

### 3.3 SPF Configurations
We used three SPF records: `goodspf`, `badspf`, and `treespf`. The SPF standard restricts the number of DNS query-causing terms to 10. Our configurations are designed to study how this restriction works in practice:
- **goodspf:** Contains 5 DNS query-causing terms.
- **badspf:** Contains 10 DNS query-causing terms.
- **treespf:** Contains 42 DNS query-causing terms, exploiting the include term to circumvent the limit.

## 4. Results and Analysis
Our results show that many mail servers use an unsafe SPF configuration, causing more than the recommended 10 DNS queries. On average, we received 34.3 induced queries, indicating that many mail servers use a potentially-vulnerable configuration. We also measured the deployment of various anti-cache poisoning mechanisms across closed DNS resolvers.

## 5. Related Work
[Discuss related work here]

## 6. Recommendations
[Provide recommendations here]

---

This optimized version of your text aims to improve clarity, coherence, and professionalism. Let me know if you need further adjustments!