nginx.method为日志的非必要字段，并不是所有的nginx日志中都有nginx.method字段，所
以nginx.method出现的总次数可能与nginx日志总数量不同。这与日志原文及日志解析效果
相关。
 key:value|statscount(key) SPL搜索命令与全文搜索配合使用，统计某字段（key）的
某值（value）出现的次数。（这里的key即字段，可以理解为Excel的列名，value为
字段值，可以理解为该列下的不同种类，如key为性别，value为男，该命令统计结果
为该班男生的总数量）
筛选appname为nginx的日志，并统计这些日志中appname字段出现的总次数。
筛选appname为nginx的日志中nginx.method字段为GET的日志，并统计nginx.method字
段的数量。
SPL：bucket 分时统计
appname:nginx
|buckettimestamp span=10m asts
|statscount()byts
bucket将时间划分成段，span为时间段的长度，如0点起到0点10分为一个时间段，使用
statscount()可统计出该时间段内的日志条数。该命令基于nginx日志统计nginx访问趋势。
统计结果如图：
3-123
日志学院
SPL说明：
 为了统计当日每10分钟交易情况。我们引入了数据分桶命令bucket，bucket 通过
timestamp（时间戳）按照每10分钟分割，然后通过stats命令统计每10分钟内发生事
件数量。
 命令中为stats命令增加的by 关键字，该关键字后面为字段。主要对数据进行分组统
计。用法同sql 中groupby。
可基于该数据绘制nginx访问趋势图（访问趋势图的绘制详见下一小节。）：
思考：
3-124
日志学院
1. 您在 stats count()by 后面更换相关分组字段会形成什么样的效果？
2. 是否可以通过饼图反应网页访问状态？
3. 对访问页面进行流量统计会得到什么样的结论？
SPL：rename 优化字段名称
appname:nginx
|buckettimestamp span=10m asts
|statscount()byts
|rename ‘count()’as“事件量”,tsas“时间”
rename可将修改原字段名为中文，便于直观展示统计结果。
结果如图：
SPL说明：
 通过上面的实例可以看出rename命令可以调整字段名称，在使用的时候需要使用as 来
连接别名。如果被调整后的字段名称为中文需要用双引号扩起来。
画龙点睛
数据分析行业有句老话，“字不如表，表不如图”。相信您通过“小试牛刀”后已经开始跃跃欲
试期待让别人更直观的读懂数据。日志易平台自带实时图表功能可以满足您对数据可视化要
求，无需二次开发。
案例 2：透过数据看态势
可视化：体现数据趋势的图表
在搜索栏输入：
appname:nginx
3-125
日志学院
|buckettimestamp span=10m asts
|statscount()byts
|rename 'count()'as"事件量",tsas"时间"
然后选择“类型”如图：
趋势效果如图：
3-126
日志学院
系统会自动识别数据分组字段以适应图表。如果图表显示有误，可以通过“设置”按钮进行调
整。与此同时可以通过“保存为”将图表保存为“趋势图”在仪表盘展示，或存成图片作为汇报
素材。
SPL：top 快速获取排名
如果您想快速获得客户端访问IP地域分布信息，或者快速提取某属性数量靠前的信息，我
们建议您使用top命令，如：
appname:nginx AND nginx.request_time:*
|top5nginx.client_ip.geo.province
该处使用top统计nginx访问中访问量最高的前5个省份：
3-127
日志学院
目前日志易平台提供动态图表有19种之多，根据数据的特性选择相应的图表。在图表的选
择方面我们推荐您阅读本材料“3.2.高级搜索视图”章节。未来在生成图表的过程中经常需要
对现有数据进行处理，那么接下来需要您进入下一小节的学习。
爬梳剔抉
爬梳剔抉，有认真整理选择之意，在做数据分析的时候时常需要对数据进行整理，日志易
SPL 提供了一些常用数据整理命令，您可以通过下面几个案例来了解。
案例 3：赋值与计算
在数据整理过程中经常需要对数据单位进行换算、时间格式调整或根据条件判断并对变量进
行赋值等计算。
如：您比较关注网站的访问状态趋势，想要查看客户端连接状态为200（正常访问）和非
200（不正常访问）状态的对比情况。
SPL：eval 为变量带来无限可能
普通的统计方法：
appname:nginx|statscount()bynginx.status
对于看不懂Nginx日志的人来说并不知道状态为200和400有什么区别。是否可以优化一下
统计结果呢？当然可以。
appname:nginx
|evalnew_status=if(nginx.status=="200","正常","异常")
|statscount()bynew_status
使用eval函数中的if参数生成新字段new_status，当nginx.status的值为200时，将new_status
赋值为正常，否则赋值为异常。
3-128
日志学院
注：如果nginx.status做了数值型转换，则“200”不应该再加引号，否则会被当成字符型计算，
以至于得到的结果全是异常。
结果如图：
通过上面的实例您可能已经发现了，通过eval 命令结合if判断函数可以生成新字段
new_status，对这个值进行分组统计即可形成上述效果。
eval 本身也支持运算符，按照优先级自低到高排序如下：
1）|| （逻辑或）二元操作符，操作数必须是布尔类型
2）&&（逻辑与）二元操作符，操作数必须是布尔类型
3）!=（不等于）==（等于）
4）>=，>，%s","aa","bb")
[X...]) FORMAT，为printf函数的format字符串 输入"aa=>bb"
NOTE:
变量类型和format中%x需要对应正确，否则
可能导致计算失败，而输出空值