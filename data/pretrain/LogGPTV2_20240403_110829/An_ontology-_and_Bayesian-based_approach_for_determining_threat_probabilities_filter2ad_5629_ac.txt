fectiveness of existing control combinations
weight WCCEVi
. If the corresponding threat has a deliber-
⃗P PVi is also in(cid:13)uenced by the e(cid:11)ectiveness
ate threat source
of a potential attacker
(see E-
quation 8). In the case of non-deliberate threat sources the
⃗APTi and its
corresponding a priori threat probability vector
⃗CCEVi
weight WAPTi
the posterior vulnerability exploitation proba-
and WCCEVi
⃗P PVi (see Equation 9).
bility vector
(cid:3) WCCEVi
⃗AEVi and its weight WAEVi
are used to determine together with
⃗P PVi = ⃗CCEVi
(cid:3) WAEVi
+ ⃗AEVi
(8)
⃗P PVi = ⃗CCEVi
(cid:3) WCCEVi
+ ⃗APTi
(cid:3) WAPTi
(9)
To simplify the calculation of the conditional probability
table in each vulnerability node of the Bayesian network,
⃗AEVi were mapped
the vectors
to real numbers, represented by P PVi , APTi , CCEVi , and
AEVi . P PVi , APTi and AEVi are rated by a positive n-
⃗CCEVi , and
⃗P PVi ,
⃗APTi ,
= 1.
point scale (e.g. low, medium, high, represented by +1, +2,
and +3). To express the contrary e(cid:11)ects of CCEVi , CCEVi
was rated by a negative n-point scale (e.g.
low, medium,
high, represented by -1, -2, and -3). WCCEVi
=
1; WCCEVi
+ WAEVi
+ WAPTi
The problem with combining negative and positive rating
scales is that the range of the result set starts at a low-
er bound and ends at an upper bound which are incom-
patible to integrate the result in the original rating scale
of the posterior vulnerability exploitation probability P PVi
(e.g.
low, medium, and high, represented by +1, +2, and
+3). Therefore, the result has to be mapped by determining
the lower and upper bound of P PVi (P PViLB
).
max(RSi) represents the maximum and min(RSi) the min-
imum value on the given rating scale RSi. The lower and
upper bounds of P PVi are determined by integrating the
lower and upper bounds of its input factors:
and P PViU B
P PViLB
+WAEVi
= WCCEVi
jjAPTi
(cid:3) min(RSAEVi
P PViU B
+WAEVi
= WCCEVi
jjAPTi
(cid:3) max(RSAEVi
(cid:3) min(RSCCEVi
jjAPTi
(cid:3) max(RSCCEVi
jjAPTi
)
)
)
)
(10)
(11)
The result of subtracting the lower bound P PViLB
from
the upper bound P PViU B
and dividing the result by n (the
number of intervals on the rating scale; e.g. n would be 2
on a low, medium, high scale) is the length T RSL of one
interval on the target rating scale T RS:
T RSL =
(P PViU B
(cid:0) P PViLB
)
n
(12)
Now the result can be mapped, namely the posterior vul-
⃗P PVi map-
nerability exploitation probability P PVi by the
ping algorithm to the posterior vulnerability exploitation
probability vector
⃗P PVi .
)/n
then
⃗P PVi
  0
(cid:0) P PViLB
Algorithm 1 ⃗P PVi Mapping Algorithm
91:
92: T RSL   (P PViU B
(cid:20) P PViLB
93: if P PVi
⃗P PVi [0] = 1.0
94:
95: else
for int j   0; j  P PViLB
T RSL (cid:3) (j + 1) then
⃗P PVi [j + 1]   (P PVi
⃗P PVi [j]   1.0 (cid:0) ⃗P PVi [j + 1]
j))/T RSL
98:
99:
910:
911:
912: end if
end if
end for
+ T RSL (cid:3) j ^ P PVi
(cid:0) (P PViLB
(cid:20) P PViLB
+
+ T RSL (cid:3)
To show how the algorithm works the following parame-
ters are assumed: posterior vulnerability exploitation vul-
= (cid:0)1, upper
nerability P PVi = (cid:0)0.5, lower bound P PViLB
= 1 ! T RSL = 1. According to the devel-
bound P PViU B
oped mapping algorithm, P PVi is in the range of low and
medium (see Figure 4). Thus, the vulnerability exploitation
348
Figure 4: P PVi to
⃗P PVi mapping
probability vector
(cid:0)0:5(cid:0)((cid:0)1+1(cid:3)0)
is derived as follows:
⃗P PVi [1] =
⃗P PVi
⃗P PVi [0] = 1.0 (cid:0) 0.5 = 0.5. The (cid:12)nal
= 0.5;
1
vulnerability exploitation probability vector
representing a 50% chance for a low, a 50% chance for a
medium, and a 0% chance for a high posterior vulnerability
exploitation probability.
⃗P PVi = (0, 50, 50),
While the calculation schema for determining the upper
and lower bound of P PVi allows the mapping of the result to
⃗P PVi , it does not express the in-
the original rating scale of
terdependency between CCEVi and AEVi or APTi . Assume
as an example the following input factors: medium e(cid:11)ective
control implementation (CCEVi = (cid:0)2; WCCEVi
= 0.5) and
medium a priori threat probability (APTi = 2; WAPTi
=
0.5). According to the rating scales of CCEVi and APTi
would be (cid:0)1, whereas the upper
the lower bound P PViLB
bound P PViU B
would be 1. According to Equation 9 and
taking the stated input factors into account, P PVi would
be 0. Applying the aforementioned algorithm reveals that
⃗P PVi = f0, 100, 0g. Thus, the control implementation does
not a(cid:11)ect the a priori probability at all and it does not make
any di(cid:11)erence whether this control is implemented or not.
To ensure that equal input factors result in a low posterior
vulnerability exploitation probability 1.0 has been added to
P PViLB
. To ensure that low e(cid:11)ective control implementa-
tions have an impact on high a priori probabilities or a highly
e(cid:11)ective attacker 0.5 has been added to P PViU B
. Both pa-
rameters are the result of an expert panel discussion process
which evaluated potential control implementation e(cid:11)ective-
ness and (a priori threat probability / attacker e(cid:11)ectiveness)
rating combinations. For each possible rating combination
the expert panel reviewed the corresponding posterior vul-
nerability exploitation probability. Finally, the results pro-
duced with the o(cid:11)sets +1.0 for P PViLB
and +0.5 for P PViU B
have been acknowledged by the expert panel.
4.3.3 Rating
While the previous calculation schema can be applied to
all rating scales, the vulnerability rating is, just as the vul-
nerability combination rating scale, derived from [7] and uses
a three-point Likert scale (high, medium, and low). While
the variable itself always expresses the exploitation prob-
ability, the interpretation di(cid:11)ers due to the threat source
which exploits the vulnerability. If it is a deliberate threat
source the following interpretation is applied [7]: (1) High -
the exploitation is highly possible since a potential attacker
is highly motivated and su(cid:14)ciently capable, and the imple-
mented controls are inappropriate or not applied at all, (2)
Medium - the exploitation probability is medium as a poten-
tial attacker is motivated and capable, but the implemented
controls may impede the exploitation, and (3) Low - the
exploitation probability is low because a potential attacker
lacks motivation and capability, and the implemented con-
trols are able to appropriately prevent an exploitation.
If
an accidental threat source exploits the vulnerability, the
a priori probability and implemented controls in(cid:13)uence the
exploitation probability and, thus, the rating scale is de(cid:12)ned
as follows: (1) High - the exploitation is highly possible since
the implemented controls are inappropriate or not applied
at all, (2) Medium - the exploitation probability is medi-
um because the implemented controls may impede the ex-
ploitation, and (3) Low - the exploitation probability is low
because the implemented controls are able to appropriately
prevent an exploitation.
4.3.4 Running example
The no backup strategy vulnerability which is exploited
by the e(cid:11)ectiveness of the backup strategy control imple-
mentation (low e(cid:11)ectiveness) and the data loss threat is de-
termined by the a priori probability of the data loss threat
(highly probable).
⃗P PVN BS =
⃗CCEVN BS
+ ⃗APTDL
(cid:3) WAPTDL
(cid:3) WCCEVN BS
⃗CCEVN BS and
As described the vectors
(13)
⃗APTDL are mapped
to real numbers to express the contrary e(cid:11)ects of control
implementations (negative real number) and a priori proba-
bilities (positive real number).
P PVN BS = (cid:0)1 (cid:3) 0.5 + 3 (cid:3) 0.5 = 1
(14)
According to Equation 10, 11, and 12: lower bound P PVN BSLB
= -1, upper bound P PVN BSU B
= 1. According to Algorithm
(+1) and
1 and taking the expert panel o(cid:11)set for P PVN BSLB
P PVN BSU B
(+0.5) into account T RSL = 0.75 and the (cid:12)nal
exploitation vector for the no backup strategy vulnerability
is:
⃗P PVN BS = f34, 66, 0g
(15)
4.4 Attacker Variable
The e(cid:11)ectiveness vector
⃗AEVi of an attacker is bound to a
certain vulnerability Vi since the necessary capability vector
⃗ACVi and the motivation vector
⃗AMVi , which represent the
⃗AEVi , depend on the considered vulnerabil-
input factors of
ity.
4.4.1 Determining factors
The attacker’s e(cid:11)ectiveness
⃗AEVi
⃗AMVi and its capabilities
is determined by the
⃗ACVi .
motivation of the attacker
While [16] recommends to consider the attacker’s motiva-
tion, capabilities, resources, the attractiveness of the target
system, and the simplicity of a vulnerability exploitation,
⃗AMVi
these components were summarized in two variables,
and
⃗ACVi , to keep the complexity level to a minimum.
4.4.2 Calculation
The attacker’s e(cid:11)ectiveness is determined by its capabili-
, and by the attacker’s moti-
⃗ACVi and its weight WACVi
ties
⃗AMVi and its weight WAMVi
. All weights sum up to
vation
349
Low     Medium   High (-1)         (0)                              (1)PPVi = -0.50.5 (Medium)0.5 (Low)High0Medium50Low50PPVi Result Vector1 ! WACVi
are set to 0.5.
+ WAMVi
= 1. By default WACVi
and WAMVi
⃗AEVi = ⃗ACVi
(cid:3) WACVi
+ ⃗AMVi
(cid:3) WAMVi
(16)
4.4.3 Rating