the National Science Foundation under Grant Nos. CNS-1657534
and CNS-1750024.
Cross-App Poisoning in Software-Defined Networking
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
Networks. In Proceedings of the Workshop on Programmable Routers for Extensible
Services of Tomorrow (PRESTO ’10). ACM, New York, NY, USA, Article 6, 6 pages.
https://doi.org/10.1145/1921151.1921160
[24] Linux Foundation. 2018. Open vSwitch. (2018). https://www.openvswitch.org/
[25] Python Software Foundation. 2018. ast—Abstract Syntax Trees. (2018). https:
REFERENCES
[1] Carolyn Jane Anderson, Nate Foster, Arjun Guha, Jean-Baptiste Jeannin, Dexter
Kozen, Cole Schlesinger, and David Walker. 2014. NetKAT: Semantic Foundations
for Networks. In ACM SIGPLAN Notices, Vol. 49. ACM, 113–126. https://doi.org/
10.1145/2578855.2535862
[2] B Arab, Dieter Gawlick, Venkatesh Radhakrishnan, Hao Guo, and Boris Glavic.
2014. A Generic Provenance Middleware for Database Queries, Updates, and
Transactions. In Proceedings of the Theory and Practice of Provenance (TaPP ’14).
[3] Michael Backes, Sven Bugiel, and Sebastian Gerling. 2014. Scippa: System-centric
IPC Provenance on Android. In Proceedings of ACSAC ’14. ACM, 36–45. https:
//doi.org/10.1145/2664243.2664264
[4] Anindya Banerjee and David A. Naumann. 2005. History-based Access Control
and Secure Information Flow. In Proceedings of CASSIS ’04. Springer-Verlag, Berlin,
Heidelberg, 27–48. https://doi.org/10.1007/978-3-540-30569-9_2
[5] Anindya Banerjee and David A. Naumann. 2005. Stack-based Access Control
and Secure Information Flow. Journal of Functional Programming 15, 2 (March
2005), 131–177. https://doi.org/10.1017/S0956796804005453
[6] Adam Bates, Kevin Butler, Andreas Haeberlen, Micah Sherr, and Wenchao Zhou.
2014. Let SDN Be Your Eyes: Secure Forensics in Data Center Networks. In
Proceedings of USENIX SENT ’14. USENIX Association.
[7] Adam Bates, Devin J. Pohly, and Kevin R. B. Butler. 2016. Secure and Trustworthy
Provenance Collection for Digital Forensics. In Digital Fingerprinting, Cliff Wang,
Ryan M. Gerdes, Yong Guan, and Sneha Kumar Kasera (Eds.). Springer New York,
141–176. https://doi.org/10.1007/978-1-4939-6601-1_8
[8] Adam Bates, Dave Tian, Kevin R. B. Butler, and Thomas Moyer. 2015. Trustworthy
Whole-system Provenance for the Linux Kernel. In Proceedings of USENIX Security
Symposium ’15. USENIX Association, 319–334.
[9] Lujo Bauer, Shaoying Cai, Limin Jia, Timothy Passaro, Michael Stroucken, and
Yuan Tian. 2015. Run-time Monitoring and Formal Analysis of Information Flows
in Chromium. In Proceedings of NDSS ’15. Internet Society. https://doi.org/10.
14722/ndss.2015.23295
[10] K. J. Biba. 1975. Integrity Considerations for Secure Computer Systems. Technical
Report MTR-3153. MITRE Corporation. www.dtic.mil/dtic/tr/fulltext/u2/a039324.
pdf
[11] Marco Canini, Daniele Venzano, Peter Perešíni, Dejan Kostić, and Jennifer Rexford.
2012. A NICE Way to Test OpenFlow Applications. In Proceedings of NSDI ’12,
Vol. 12. 127–140. http://dl.acm.org/citation.cfm?id=2228298.2228312
[12] Ang Chen, Yang Wu, Andreas Haeberlen, Wenchao Zhou, and Boon Thau Loo.
2016. The Good, the Bad, and the Differences: Better Network Diagnostics with
Differential Provenance. In Proceedings of ACM SIGCOMM ’16. ACM, 115–128.
https://doi.org/10.1145/2934872.2934910
[13] Laura Chiticariu, Wang-Chiew Tan, and Gaurav Vijayvargiya. 2005. DBNotes: A
Post-it System for Relational Databases Based on Provenance. In Proceedings of the
2005 ACM Special Interest Group on Management of Data Conference (SIGMOD’05).
[14] M. C. Dacier, H. König, R. Cwalinski, F. Kargl, and S. Dietrich. 2017. Security
Challenges and Opportunities of Software-Defined Networking. IEEE Security &
Privacy 15, 2 (March 2017), 96–100. https://doi.org/10.1109/MSP.2017.46
[15] Mohan Dhawan, Rishabh Poddar, Kshiteej Mahajan, and Vijay Mann. 2015.
SPHINX: Detecting Security Attacks in Software-Defined Networks. In Proceed-
ings of NDSS ’15. Internet Society. https://doi.org/10.14722/ndss.2015.23064
[16] Michael Dietz, Shashi Shekhar, Yuliy Pisetsky, Anhei Shu, and Dan S. Wallach.
2011. Quire: Lightweight Provenance for Smart Phone Operating Systems. In
Proceedings of USENIX Security ’11. USENIX Association, 23–23.
[17] Abhishek Dwaraki, Srini Seetharaman, Sriram Natarajan, and Tilman Wolf. 2015.
GitFlow: Flow Revision Management for Software-defined Networks. In Proceed-
ings of ACM SOSR ’15. ACM, Article 6, 6 pages. https://doi.org/10.1145/2774993.
2775064
[18] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox, Jaeyeon Jung,
Patrick McDaniel, and Anmol N. Sheth. 2010. TaintDroid: An Information-flow
Tracking System for Realtime Privacy Monitoring on Smartphones. In Proceedings
of the 9th USENIX Conference on Operating Systems Design and Implementation
(OSDI’10). USENIX Association, Berkeley, CA, USA, 393–407. http://dl.acm.org/
citation.cfm?id=1924943.1924971
[19] Adrienne Porter Felt, Helen J. Wang, Alexander Moshchuk, Steven Hanna, and
Erika Chin. 2011. Permission Re-delegation: Attacks and Defenses. In Proceedings
of the 20th USENIX Conference on Security Symposium (SEC ’11). USENIX Asso-
ciation, Berkeley, CA, USA, 22–22. http://dl.acm.org/citation.cfm?id=2028067.
2028089
[20] Floodlight. 2018. (2018). http://www.projectfloodlight.org/
[21] Project Floodlight. 2018. Floodlight Controller: MemoryStorageSource (Dev).
(2018). https://floodlight.atlassian.net/wiki/spaces/floodlightcontroller/pages/
1343633/MemoryStorageSource+Dev
[22] Ian T. Foster, Jens-S. Vöckler, Michael Wilde, and Yong Zhao. 2002. Chimera: A
Virtual Data System for Representing, Querying, and Automating Data Derivation.
In Proceedings of SSDBM ’02. https://doi.org/10.1109/SSDM.2002.1029704
[23] Nate Foster, Michael J. Freedman, Rob Harrison, Jennifer Rexford, Matthew L.
Meola, and David Walker. 2010. Frenetic: A High-level Language for OpenFlow
13
//docs.python.org/3/library/ast.html
[26] Timothy Fraser. 2000. LOMAC: Low Water-Mark integrity protection for COTS
environments. In Proceeding of the 2000 IEEE Symposium on Security and Privacy
(S&P ’00). 230–245. https://doi.org/10.1109/SECPRI.2000.848460
[27] Ashish Gehani and Dawood Tariq. 2012. SPADE: Support for Provenance Auditing
in Distributed Environments. In Proceedings of Middleware ’12. Springer–Verlag
New York, 101–120. https://doi.org/10.1007/978-3-642-35170-9_6
[28] Boris Glavic and Gustavo Alonso. 2009. Perm: Processing Provenance and Data
on the Same Data Model Through Query Rewriting. In Proceedings of the 25th
IEEE International Conference on Data Engineering (ICDE ’09). https://doi.org/10.
1109/ICDE.2009.15
[29] Natasha Gude, Teemu Koponen, Justin Pettit, Ben Pfaff, Martín Casado, Nick
McKeown, and Scott Shenker. 2008. NOX: towards an operating system for
networks. ACM SIGCOMM Computer Communication Review 38, 3 (2008), 105–
110. https://doi.org/10.1145/1384609.1384625
[30] Norm Hardy. 1988. The Confused Deputy: (or Why Capabilities Might Have
Been Invented). ACM SIGOPS Operating Systems Review 22, 4 (Oct. 1988), 36–38.
http://dl.acm.org/citation.cfm?id=54289.871709
[31] Hewlett-Packard Enterprise. 2018. HPE SDN app store. https://community.
arubanetworks.com/t5/SDN-Apps/ct-p/SDN-Apps. (Aug. 2018).
[32] Hewlett-Packard Enterprise. 2018. Software Defined Networking. (Aug. 2018).
https://www.hpe.com/us/en/networking/sdn.html
[33] International Data Corporation. 2016. SDN Market to Experience Strong Growth
Over Next Several Years, According to IDC. https://www.idc.com/getdoc.jsp?
containerId=prUS41005016. (3 Feb. 2016).
[34] Samuel Jero, Xiangyu Bu, Cristina Nita-Rotaru, Hamed Okhravi, Richard Skowyra,
and Sonia Fahmy. 2017. BEADS: Automated Attack Discovery in OpenFlow-
based SDN Systems. In Proceedings of RAID ’17.
https://doi.org/10.1007/
978-3-319-66332-6_14
[35] Peyman Kazemian, Michael Chan, Hongyi Zeng, George Varghese, Nick McKe-
own, and Scott Whyte. 2013. Real Time Network Policy Checking Using Header
Space Analysis. In Proceedings of NSDI ’13. 99–111. http://dl.acm.org/citation.
cfm?id=2482626.2482638
[36] Ahmed Khurshid, Wenxuan Zhou, Matthew Caesar, and P. Brighten Godfrey.
2012. VeriFlow: Verifying Network-wide Invariants in Real Time. ACM SIGCOMM
Computer Communication Review 42, 4 (Sept. 2012), 467–472. https://doi.org/10.
1145/2377677.2377766
[37] Diego Kreutz, Fernando M.V. Ramos, and Paulo Veríssimo. 2013. Towards Secure
and Dependable Software-defined Networks. In Proceedings of ACM HotSDN ’13.
55–60. https://doi.org/10.1145/2491185.2491199
[38] D. Kreutz, F. M. V. Ramos, P. E. Veríssimo, C. E. Rothenberg, S. Azodolmolky, and
S. Uhlig. 2015. Software-Defined Networking: A Comprehensive Survey. Proc.
IEEE 103, 1 (Jan 2015), 14–76. https://doi.org/10.1109/JPROC.2014.2371999
[39] Chanhee Lee and Seungwon Shin. 2016. SHIELD: An Automated Framework for
Static Analysis of SDN Applications. In Proceedings of ACM SDN-NFV Security
’16. ACM, 29–34. https://doi.org/10.1145/2876019.2876026
[40] Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. 2013. High Accuracy Attack
Provenance via Binary-based Execution Partition. In Proceedings of NDSS ’13.
Internet Society.
[41] Seungsoo Lee, Changhoon Yoon, Chanhee Lee, Seungwon Shin, Vinod Yeg-
neswaran, and Phillip Porras. 2017. DELTA: A Security Assessment Framework
for Software-Defined Networks. In Proceedings of NDSS ’17. Internet Society.
https://doi.org/10.14722/ndss.2017.23457
[42] Seungsoo Lee, Changhoon Yoon, and Seungwon Shin. 2016. The Smaller, the
Shrewder: A Simple Malicious Application Can Kill an Entire SDN Environment.
In Proceedings of ACM SDN-NFV Security ’16. ACM, 23–28. https://doi.org/10.
1145/2876019.2876024
[43] R. J. Lipton and L. Snyder. 1977. A Linear Time Algorithm for Deciding Subject
Security. J. ACM 24, 3 (July 1977), 455–464. https://doi.org/10.1145/322017.322025
[44] Shiqing Ma, Juan Zhai, Fei Wang, Kyu Hyung Lee, Xiangyu Zhang, and Dongyan
Xu. 2017. MPI: Multiple Perspective Attack Investigation with Semantic Aware
Execution Partitioning. In 26th USENIX Security Symposium.
[45] Shiqing Ma, Xiangyu Zhang, and Dongyan Xu. 2016. ProTracer: Towards Practical
Provenance Tracing by Alternating Between Logging and Tainting. In Proceedings
of NDSS ’16.
[46] Nick McKeown, Tom Anderson, Hari Balakrishnan, Guru Parulkar, Larry Pe-
terson, Jennifer Rexford, Scott Shenker, and Jonathan Turner. 2008. OpenFlow:
Enabling Innovation in Campus Networks. ACM SIGCOMM Computer Communi-
cation Review 38, 2 (March 2008), 69–74. https://doi.org/10.1145/1355734.1355746
[47] Paolo Missier, Khalid Belhajjame, and James Cheney. 2013. The W3C PROV
Family of Specifications for Modelling Provenance Metadata. In Proceedings of
ACM EDBT ’13. 773–776. https://doi.org/10.1145/2452376.2452478
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
B. Ujcich et al.
[48] Jeffrey C. Mogul, Alvin AuYoung, Sujata Banerjee, Lucian Popa, Jeongkeun Lee,
Jayaram Mudigonda, Puneet Sharma, and Yoshio Turner. 2013. Corybantic:
Towards the Modular Composition of SDN Control Programs. In Proceedings
of ACM HotNets ’13. ACM, Article 1, 7 pages. https://doi.org/10.1145/2535771.
2535795
[49] Christopher Monsanto, Nate Foster, Rob Harrison, and David Walker. 2012. A
compiler and run-time system for network programming languages. In ACM SIG-
PLAN Notices, Vol. 47. ACM, 217–230. https://doi.org/10.1145/2103621.2103685
[50] Christopher Monsanto, Joshua Reich, Nate Foster, Jennifer Rexford, David Walker,
et al. 2013. Composing Software Defined Networks. In Proceedings of NSDI ’13,
Vol. 13. 1–13. http://dl.acm.org/citation.cfm?id=2482626.2482629
[51] Luc Moreau and Paul Groth. 2013.
Provenance: an introduction to PROV.
Synthesis Lectures on the Semantic Web: Theory and Technology, Vol. 3.
Morgan & Claypool Publishers. 1–129 pages.
https://doi.org/10.2200/
S00528ED1V01Y201308WBE007
[52] Kiran-Kumar Muniswamy-Reddy, David A. Holland, Uri Braun, and Margo Seltzer.
2006. Provenance-aware Storage Systems. In Proceedings of USENIX ATC ’06.
USENIX Association, 1.
[53] Andrew C. Myers and Barbara Liskov. 1997. A Decentralized Model for Infor-
mation Flow Control. In Proceedings of ACM SOSP ’97. ACM, 129–142. https:
//doi.org/10.1145/268998.266669
[54] Andrew C. Myers, Lantian Zheng, Steve Zdancewic, Stephen Chong, and
Nathaniel Nystrom. 2018. Jif: Java + Information Flow. (2018). http://www.cs.
cornell.edu/jif/
[55] Adwait Nadkarni, Benjamin Andow, William Enck, and Somesh Jha. 2016. Practi-
cal DIFC Enforcement on Android. In Proceedings of the 25th USENIX Conference
on Security Symposium (SEC ’16). USENIX Association, Berkeley, CA, USA, 1119–
1136. http://dl.acm.org/citation.cfm?id=3241094.3241181
[56] Barak Naveh. 2018. JGraphT. (2018). https://jgrapht.org/
[57] Open Networking Foundation. 2018. Creating Security-Mode Compatible ONOS
(2018). https://wiki.onosproject.org/display/ONOS/Creating+
Applications.
Security-Mode+compatible+ONOS+applications
[58] Open Networking Foundation. 2018. Enabling Security-Mode ONOS. (2018).
https://wiki.onosproject.org/display/ONOS/Enabling+Security-Mode+ONOS
[59] Open Networking Foundation. 2018. GitHub – onos/apps at 1.10.0.
(2018).
https://github.com/opennetworkinglab/onos/tree/1.10.0/apps
[60] Open Networking Foundation. 2018. GitHub – opennetworkinglab/onos at 1.10.0.
(2018). https://github.com/opennetworkinglab/onos/tree/1.10.0
[61] Open Networking Foundation. 2018. ONOS - A new carrier-grade SDN network
operating system designed for high availability, performance, scale-out. (Aug.
2018). https://onosproject.org/
[62] Open Networking Foundation. 2018. ONOS In Action. (2018). https://onosproject.
org/in-action/
opendaylight.org/
[63] Open Networking Foundation. 2018. Security Advisories: ONOS. (2018). https:
//wiki.onosproject.org/display/ONOS/Security+advisories
[64] OpenDaylight. 2018. Home - OpenDaylight.
(Aug. 2018).
https://www.
[65] Hitesh Padekar, Younghee Park, Hongxin Hu, and Sang-Yoon Chang. 2016. En-
abling Dynamic Access Control for Controller Applications in Software-Defined
Networks. In Proceedings of SACMAT ’16. ACM, 51–61. https://doi.org/10.1145/
2914642.2914647
[66] T. Pasquier, J. Singh, D. Eyers, and J. Bacon. 2017. CamFlow: Managed Data-
sharing for Cloud Services. IEEE Transactions on Cloud Computing PP, 99 (2017),
1–1. https://doi.org/10.1109/TCC.2015.2489211
[67] Devin J. Pohly, Stephen McLaughlin, Patrick McDaniel, and Kevin Butler. 2012.
Hi-Fi: Collecting High-fidelity Whole-system Provenance. In Proceedings of ACM
ACSAC ’12. ACM, 259–268. https://doi.org/10.1145/2420950.2420989
[68] Phillip Porras, Steven Cheung, Martin Fong, Keith Skinner, and Vinod Yeg-
neswaran. 2015. Securing the Software-Defined Network Control Layer. In Pro-
ceedings of NDSS ’15. Internet Society. https://doi.org/10.14722/ndss.2015.23222
[69] POX. 2018. POX. (Aug. 2018). https://github.com/noxrepo/pox
[70] OpenDaylight Project. 2018. OpenDaylight Documentation: Authentication,
Authorization and Accounting (AAA) Services. (2018). https://docs.opendaylight.
org/en/stable-boron/user-guide/authentication-and-authorization-services.
html
[71] Ryu SDN Framework Community. 2018. Ryu SDN Framework. (Aug. 2018).
http://osrg.github.io/ryu/
[72] A. Sabelfeld and A. C. Myers. 2003. Language-based information-flow security.
IEEE Journal on Selected Areas in Communications 21, 1 (Jan 2003), 5–19. https:
//doi.org/10.1109/JSAC.2002.806121
[73] S. Scott-Hayward, S. Natarajan, and S. Sezer. 2016. A Survey of Security in
Software Defined Networks. IEEE Communications Surveys Tutorials 18, 1 (2016),
623–654. https://doi.org/10.1109/COMST.2015.2453114
[74] SW Shin, Phillip Porras, Vinod Yegneswaran, Martin Fong, Guofei Gu, and Mabry
Tyson. 2013. FRESCO: Modular composable security services for software-defined
networks. In Proceedings of NDSS ’13. Internet Society.
[75] Seungwon Shin, Yongjoo Song, Taekyung Lee, Sangho Lee, Jaewoong Chung,
Phillip Porras, Vinod Yegneswaran, Jiseong Noh, and Brent Byunghoon Kang.
2014. Rosemary: A Robust, Secure, and High-performance Network Operating
System. In Proceedings of ACM CCS ’14. ACM, 78–89. https://doi.org/10.1145/
2660267.2660353
[76] The Flick Team. 2018. C Abstract Syntax Tree (CAST) Representation. (2018).
http://www.cs.utah.edu/flux/flick/current/doc/guts/gutsch6.html
[77] Dave (Jing) Tian, Adam Bates, Kevin R.B. Butler, and Raju Rangaswami. 2016.
ProvUSB: Block-level Provenance-Based Data Protection for USB Storage Devices.
In Proceedings of ACM CCS ’16. ACM, 242–253. https://doi.org/10.1145/2976749.
2978398
[78] Y. Tseng, M. Pattaranantakul, R. He, Z. Zhang, and F. NaÃŕt-Abdesselam. 2017.
Controller DAC: Securing SDN controller with dynamic access control. In Pro-