6 Invisible undeniable signature from bilinear subgroups
Generic undeniable signatures from DCS
Undeniable signatures [10] are DCS’s where signer and conﬁrmer are
the same entity. Using techniques developed above, we can modify Laguil-
laumie, et al. [19]’s undeniable signature without random oracles to up-
graded security model with signature invisibility and defense against sig-
nature transformation attackers. Consult original references for details of
the security model.
1. Setup. The signer public key pk = (n, y1, y2, 1, d2, d3), sk = (x1,
x2, ¯x1, ¯x2, ¯y1, ¯y2, z), where y1 = gx1, y2 = gx2, d1 = g ¯x1
2 , d2 =
g ¯y1
1 g ¯y2
1, n is a product of two safe primes p and q, pairings
ˆe : G1 × G1 → GT , order(G1) = n, g ∈ G1, g1, g2 ∈ Zn2, g0 = n + 1.
2. Sign. Select random R ∈ Zn, compute σ = (σ1, σ2), where σ1 =
g1/(x1+R+mx2), σ2 = Enc(R) = (u1, ··· , u4) with u1 = gr
2, u3
= dr
2 )r, where α = Hash(u1, u2, u3, m, pk, σ1).
2 , d3 = gz
3gR
0 , u4 = (d1dα
1 g ¯x2
1, u2 = gr
12
Victor K. Wei
3. Conﬁrm/disavow. To conﬁrm, prove the following concurrent zero-
knowledge protocols:
0 ∧ d3 = gz
CZK{R : ˆe(σ1, y1ym
1}
1gR
To disavow, prove the following concurrent zero-knowledge protocol
2 )ˆe(σ1, g)R = ˆe(g, g) ∧ u3 = uz
CZK{(¯x1, ¯x2, ¯y1, ¯y2, z, R0) : d1 = g ¯x1
∧ d2 = g ¯y1
∧ [u4 6= u¯x1+α¯y1
2 ∧ d3 = gz
u¯x2+α¯y2
2
1 g ¯y2
1
2
1 g ¯x2
1 ∧ u3 = uz
1gR0
2 )ˆe(σ1, g)R0 6= ˆe(g, g)}
∨ ˆe(σ1, y1ym
0
Note order(g0) = n in Zn2. There is no need to prove for the proof of
range that R (and R0) lie in the interval [0, n). Th invisibility of signa-
ture mainly follows the use of concurrent zero-knowledge protocols. The
unforgeability of the undeniable signature can be proved similarly to [19].
Methods to instantiate a pairings group (or gap Diﬃe-Hellman group) G1
with a composite order n were described in Boneh, et al. [6] and Groth,
et al. [17].
Generalization. The undeniable signature above combines Boneh, et
al. [5]’s signature without random oracles and the famous Cramer-Shoup
encryption [11] without random oracles. It can be modiﬁed into a DCS by
separating the signing key (given to the signer) and the encryption key
(given to the conﬁrmer). But then the conﬁrmer key, pkC = (d1, d2, d3),
is dependent of the signer public key n, as the three entries lie in Zn2.
Although security is not compromised because the security of the Cramer-
Shoup encryption reduces to the decisional Diﬃe-Hellman assumption in
Zn2 which continues to hold, this dependence is not desirable. If entries
of pkC are in Z¯n2 with ¯n 6= n, then ineﬃcient range proofs may have to
be used in the conﬁrmation/disavowal protocol.
7 Conclusion
We have presented new constructions of DCS with invisibility. It remains
to construct eﬃcient and secure DCS where the conﬁrmer is identity-
based. Acknowledgementsto Hong Kong Earmarked Grants 4232-03E
and 4328-02E for sponsorship.
References
1. Masayuki Abe, Rosario Gennaro, Kaoru Kurosawa, and Victor Shoup. Tag-
KEM/DEM: A new framework for hybrid encryption and a new analysis of
Kurosawa-Desmedt KEM. In EUROCRYPT 2005, pages 128–146, 2005.
Invisible Designated Conﬁrmer Signatures without Random Oracles
13
2. Ben Adida and Douglas Wikstr¨om. How to shuﬄe in public. Cryptology ePrint
Archive, Report 2005/394, 2005. http://eprint.iacr.org/.
3. N. Asokan, Victor Shoup, and Michael Waidner. Optimistic fair exchange of digital
signatures. In EUROCRYPT 1998, pages 591–606, 1998.
4. Mihir Bellare and Adriana Palacio. GQ and Schnorr identiﬁcation schemes:
Proofs of security against impersonation under active and concurrent attacks. In
CRYPTO 2002, pages 162–177, 2002.
5. D. Boneh, X. Boyen, and H. Shacham. Short group signatures. In Proc. CRYPTO
2004, pages 41–55. Springer-Verlag, 2004. Lecture Notes in Computer Science No.
3152.
6. Dan Boneh, Eu-Jin Goh, and Kobbi Nissim. Evaluating 2-DNF formulas on ci-
phertexts. In TCC 2005, pages 325–341, 2005.
7. F. Boudot. Eﬃcient proofs that a committed number lies in an interval. In Euro-
crypt’00, pages 431–444, 2000.
8. J. Camenisch and M. Michels. Conﬁrmer signature schemes secure against adaptive
adversaries. In Eurocrypt 2000, pages 243–258. Springer-Verlag, 2000. LNCS No.
2729.
9. D. Chaum. Designated conﬁrmer signatures.
In Eurocrypt’94, pages 86–91.
Springer-Verlag, 1994. LNCS No. 435.
10. D. Chaum and H. van Antwerpen. Undeniable signatures. In Crypto’89, pages
286–299, 1989.
11. R. Cramer and V. Shoup. Universal hash proofs and a paradigm for adaptive
chosen ciphertext secure public-key encryption. In EUROCRYPT 2002, volume
2332 of LNCS, pages 45–64. Springer-Verlag, 2002.
12. Ronald Cramer and Victor Shoup. Signature schemes based on the strong rsa
assumption. ACM Trans. Inf. Syst. Secur., 3(3):161–185, 2000.
13. Ivan Damgard, Kasper Dupont, and Michael Ostergaard Pedersen. Unclonable
group identiﬁcation. In EUROCRYPT 2006, pages 555–572, 2006.
14. C. Dwork, M. Naor, , and A. Sahai. Concurrent zero-knowledge.
J. ACM,
51(6):851–898, 2004. Also in STOC’98, p.409-418.
15. Craig Gentry, David Molnar, and Zulﬁkar Ramzan. Eﬃcient designated con-
ﬁrmer signatures without random oracles or general zero-knowledge proofs.
In
ASIACRYPT 2005, volume 3788 of LNCS, pages 662–681. Springer-Verlag, 2005.
16. Shaﬁ Goldwasser and Erez Waisbard. Transformation of digital signature schemes
into designated conﬁrmer signature schemes. In TCC 2004, volume 2951 of LNCS,
pages 77–100. Springer-Verlag, 2004.
17. Jens Groth, Rafail Ostrovsky, and Amit Sahai. Perfect non-interactive zero knowl-
edge for NP. Cryptology ePrint Archive, Report 2005/290.
18. Jens Groth, Rafail Ostrovsky, and Amit Sahai. Perfect non-interactive zero knowl-
edge for NP. In EUROCRYPT 2006, pages 339–358, 2006.
19. Fabien Laguillaumie and Damien Vergnaud. Short undeniable signatures without
random oracles: The missing link. In INDOCRYPT 2005, volume 3797 of LNCS,
pages 283–296. Springer-Verlag, 2005.
20. T. Okamoto. Designated conﬁrmer signatures and public-key encryption are equiv-
alen. In Proc. CRYPTO ’94, pages 61–74, 1994.
21. P. Paillier. Public-key cryptosystems based on composite degree residuosity classes.
In EUROCRYPT ’99, pages 223–238. Springer-Verlag, 1999. Lecture Notes in
Computer Science No. 1592.
22. Mario Di Raimondo and Rosario Gennaro. New approaches for deniable authen-
tication. In ACM Conference on Computer and Communications Security, pages
112–121, 2005. Also Eprint 2003/056.
14
Victor K. Wei
23. Victor K. Wei and T. H. Yuen. More short signatures without random oracles,
2007. ePrint 2005/463.
A Elaborating (CV erC, CV erV ) of DCSGMR+
The conﬁrmation (6) is composed of only multi-exponentiations. Instan-
tiating it using a standard four-move concurrent zero-knowledge protocol
is straightforward: (The common inputs are pkS, pkC, σ = (σ1, σ2, σ3,
σ4 = (u1, u2, u3, v)). The private inputs of CV erC are x1, x2, y1, y2,
z1, z2, R) where R is computed from the partial discrete logarithm as in
CV erC.
1. CV erV selects random c0, compute c00 = Hash(c0), sends c00.
2. CV erC selects random rx,1, rx,2, ry,1, ry,2, rz,1, rz,2, compute and
sends the following commitments:
Dv = urx,1+ry,1α
1
D1 = grx,1
urx,2+ry,2α
2
, D2 = gry,1
grx,2
2
1
1
, Du = urz,1
gry,2
2
1 urz,2
, D3 = grz,1
2 grR
0 ,
grz,2
,
2
1
3. CV erV sends c0.
4. CV erC checks c00 = Hash(c0), compute and sends the responses:
zx,1 = rx,1 − c0x1, zx,2 = rx,2 − c0x2, zy,1 = ry,1 − c0y1,
zy,2 = ry,2 − c0y2, zz,1 = rz,1 − c0z1, zz,2 = rz,2 − c0z2, zR = rR − c0R
5. CV erV veriﬁes the following before outputting 1: (If not all veriﬁed,
output 0)
Dv = uzx,1+zy,1α
2 dc0
gzx,2
1
D1 = gzx,1
vc0
uzx,2+zy,2α
, Du = uzz,1
2
2 dc0
gzy,2
1 , D2 = gzy,1
1 uzz,2
2 , D3 = gzz,1
0 uc0
gzR
3 ,
2 dc0
gzz,2
3 ,
2
1
1
1
To instantiate the disavowal (7), CV erC sends β ∈ {1,2,3} indicating
; (Case 2) gmhR 6= φ; or
1 gx2
2
∧ 1 = T y2
4 g−s4
1
}
1
1 uz2
2 gR
3 uz1
ux2+y2α
2
0 6= 1. Further elaborations: Case 1)
its wish to prove (Case 1) v 6= ux1+y1α
(Case 3) u−1
ConZKP{(x1, x2, y1, y2) : d1 = gx1
2 ∧ v 6= ux1+y1α
⇔ ConZKP{(x1, x2, y1, y2, s0, s1, s2, s3, s4) : d1 = gx1
2 ∧ T0 = v−s0us1+s2α
us3+s4α
2
1 ∧ T4 = gy2
1 ∧ T3 = gx2
3 g−s3
∧ 1 = T x2
The four-move concurrent zero-knowledge protocol is
∧ d2 = gy1
∧ d2 = gy1
∧ T1 = gx1
∧ 1 = T x1
1 gy2
1 ∧ T2 = gy1
1 g−s1
1 gx2
ux2+y2α
2
∧ 1 = T y1
2 g−s2
1 gy2
}
1