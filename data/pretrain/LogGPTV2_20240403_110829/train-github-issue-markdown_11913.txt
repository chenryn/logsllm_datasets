##### System information (version)
  * OpenCV => 4.1.2
  * Operating System / Platform => Arch Linux
  * Compiler => g++ 9.2.0
##### Detailed description
I found that my application sometimes crashes on `readNetFromCaffe` with a
segmentation fault. I believe it is caused by the opencv function not being
thread safe while I call it multiple times concurrently.
##### Steps to reproduce
Here is a simple test application that crashes around 10% of the runs. In my
real application I have less threads (usually 2...16), but 1000 threads makes
the test have this bug more frequently.
    #include 
    #include 
    #include 
    void test() {
        cv::dnn::readNetFromCaffe(..., ...);
    }
    int main() {
        std::vector threads;
        for (size_t i = 0; i , std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x1092DD: test() (in /home/runner/segfaulttest/main)
       by 0x10AE5B: void std::__invoke_impl(std::__invoke_other, void (*&&)()) (in /home/runner/segfaulttest/main)
       by 0x10ADFF: std::__invoke_result::type std::__invoke(void (*&&)()) (in /home/runner/segfaulttest/main)
       by 0x10AD9D: void std::thread::_Invoker >::_M_invoke(std::_Index_tuple) (in /home/runner/segfaulttest/main)
       by 0x10AD5E: std::thread::_Invoker >::operator()() (in /home/runner/segfaulttest/main)
       by 0x10AD33: std::thread::_State_impl > >::_M_run() (in /home/runner/segfaulttest/main)
    This conflicts with a previous read of size 8 by thread #3
    Locks held: none
       at 0x492C047: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x5036473: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49CFF8B: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49D0477: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49C05AD: cv::dnn::dnn4_v20190902::readNetFromCaffe(std::__cxx11::basic_string, std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x1092DD: test() (in /home/runner/segfaulttest/main)
       by 0x10AE5B: void std::__invoke_impl(std::__invoke_other, void (*&&)()) (in /home/runner/segfaulttest/main)
       by 0x10ADFF: std::__invoke_result::type std::__invoke(void (*&&)()) (in /home/runner/segfaulttest/main)
     Address 0x51eb5e8 is in the BSS segment of /usr/lib/libopencv_dnn.so.4.1.2
    ----------------------------------------------------------------
    Possible data race during read of size 8 at 0x51EB5E8 by thread #3
    Locks held: none
       at 0x4FA8FB6: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x492C0B2: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x5036473: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49CFF8B: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49D0477: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49C05AD: cv::dnn::dnn4_v20190902::readNetFromCaffe(std::__cxx11::basic_string, std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x1092DD: test() (in /home/runner/segfaulttest/main)
       by 0x10AE5B: void std::__invoke_impl(std::__invoke_other, void (*&&)()) (in /home/runner/segfaulttest/main)
       by 0x10ADFF: std::__invoke_result::type std::__invoke(void (*&&)()) (in /home/runner/segfaulttest/main)
       by 0x10AD9D: void std::thread::_Invoker >::_M_invoke(std::_Index_tuple) (in /home/runner/segfaulttest/main)
       by 0x10AD5E: std::thread::_Invoker >::operator()() (in /home/runner/segfaulttest/main)
       by 0x10AD33: std::thread::_State_impl > >::_M_run() (in /home/runner/segfaulttest/main)
    This conflicts with a previous write of size 8 by thread #2
    Locks held: none
       at 0x4FA8F9E: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x492C0B2: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x5036473: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49CFF8B: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49D0477: ??? (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x49C05AD: cv::dnn::dnn4_v20190902::readNetFromCaffe(std::__cxx11::basic_string, std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) (in /usr/lib/libopencv_dnn.so.4.1.2)
       by 0x1092DD: test() (in /home/runner/segfaulttest/main)
       by 0x10AE5B: void std::__invoke_impl(std::__invoke_other, void (*&&)()) (in /home/runner/segfaulttest/main)
     Address 0x51eb5e8 is in the BSS segment of /usr/lib/libopencv_dnn.so.4.1.2
    ...
Here is also a gdb backtrace of the segmentation fault. Unfortunately I didn't
have opencv symbols enabled, when I managed to reproduce the crash with gdb.
It seems that running the application in gdb makes the bug very rare:
    #0  0x00007fd9ce450470 in free () at /usr/lib/libc.so.6
    #1  0x00007fd9d28584bc in  () at /usr/lib/libopencv_dnn.so.4.1
    #2  0x00007fd9d285a528 in  () at /usr/lib/libopencv_dnn.so.4.1
    #3  0x00007fd9d285c604 in cv::dnn::dnn4_v20190902::readNetFromCaffe(std::__cxx11::basic_string, std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) () at /usr/lib/libopencv_dnn.so.4.1