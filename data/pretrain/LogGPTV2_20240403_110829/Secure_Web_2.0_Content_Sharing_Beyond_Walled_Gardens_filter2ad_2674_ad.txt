Google AuthSub, AOL OpenAuth, Yahoo BBAuth) may
cause users to become accustomed to being redirected to
identity provider websites for authentication. If users do not
verify the authenticity of these websites before entering their
credentials (and they usually do not [28], [29]), phishing
attacks are possible. To prevent phishing attacks, users must
conﬁrm the authenticity of an identity provider before en-
tering their credentials. Existing research on authenticating
web-sites to users include security indicator [30], secure
bookmarks for known websites [31], [32], and automated
detection and blacklisting of known phishing sites [33].
However, studies suggest that security indicators are inef-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:09 UTC from IEEE Xplore.  Restrictions apply. 
with 100Mbps Ethernet adapters. Round-trip latency was
less than 0.1 millisecond on average in this conﬁguration.
To evaluate the performance characteristics of contain-
ment queries, we wrote scripts to create a set of credentials
for each OpenPolicy server and then triggered OpenPolicy to
perform a worst-case containment query (i.e., A.r (cid:119) D, but
D is not a member of A.r), which enumerated all credential
statements on all testing servers. The performance results
are shown in Figure 5. For each run, a different number of
credential statements (i.e., 5,000 to 25,000) are generated
on each server, and a different number of threads (i.e.,
ﬁve to twenty threads) are invoked to simulate concurrent
authorization requests.
To improve authorization response time, OpenPolicy
caches proof graphs. When proof graphs are cached, the
response time becomes linear to the number of servers
involved in the query process. In our testbed, the worst-case
response time was less than 3 milliseconds when caching
was used. Proof graph caches can greatly improve the
response time of OpenPolicy. However, when the size of the
cached graphs exceeds available memory, cache efﬁciency
begins to degrade. As future work, we plan to use other
cache strategies to improve cache efﬁciency. We also want
to apply authorization recycling [37] techniques to derive
access-control decisions directly on CSPs based on cached
authorization responses from OpenPolicy providers.
V. CONCLUSION
Since the beginning of the Web, “identity wars” have
led to service providers building “walls” to protect their
customer-base. However, these “walls” restrict the evolution
of the Web. In this paper, we described the design, architec-
ture, and implementation of a proposed system for secure
content sharing beyond walled gardens. In the future, we
plan to conduct usability studies on our prototype imple-
mentation to ensure the proposed mechanisms are usable
for average Web users. For phishing prevention, we plan
to explore the feasibility of OpenID functioning without
relying on redirection between CSPs and OpenID identity
providers. For performance, we plan to investigate other
cache strategies and apply authorization recycling techniques
on CSPs to improve authorization response times.
Our proposed approach promotes user-centric access con-
trol. In our vision of a truly user-centric Web 2.0, users own
their personal content and are free to share it across and be-
yond walled gardens. Users also have the freedom to choose
their favorite providers for their identities, content, social
relationships, and access-control policies. The separation of
personal content and services puts the focus of a service
provider on providing value services to the user it serves,
forcing the service provider to be just a service provider—
no longer requiring users to compromise their identity or
expand their social graphs unnecessarily to share content.
Figure 5.
OpenPolicy performance evaluation results. The worst-case
response time was measured by forcing OpenPolicy to enumerate all
credential statements on all testing servers. For each run, a different number
of credential statements are generated on each server, and 5-20 concurrent
authorization requests are submitted.
fective at preventing phishing attacks [29], [28], and black-
listing known phishing sites still suffers from high rate of
false-positives and false-negatives [34]. Even with improved
security indicators, users still tend to ignore them [35], [28].
How to make OpenID protocol more resilient to phishing
attacks is an important task of our future work.
IV. IMPLEMENTATION AND EVALUATION
To
evaluate
our
implemented
approach, we
an
OpenIDemail provider and OpenPolicy provider in J2EE. To
support OpenID protocols, we reused OpenID4Java [36],
an open-source Java library that offers
for
implementing OpenID identity providers and consumer
(relying party) web-sites. OpenPolicy uses Apache Tomcat
as a web container and stores credential statements in a
MySQL database. To validate the design of our prototype
implementation, we developed a Facebook application
to enable Facebook users to share their private photo
albums with non-Facebook users via our proposed sharing
architecture.
support
In addition to validating the correctness of data ﬂows and
inference logic, the runtime latency incurred during autho-
rization decision processes was another important concern.
To evaluate the performance characteristics of OpenPolicy,
we deployed OpenPolicy on three hosts within our insti-
tution’s internal network. To evaluate the portability and
to ensure the performance measurements were not skewed
by hardware and operating system, we used a different OS
and hardware for each machine. The conﬁgurations were
as follows: (A) Intel Duo Core 2 2.4GHz CPU, 4GB RAM,
running Windows Vista, (B) Intel Duo Core 2 2.6GHz CPU,
4GB RAM, running MacOS 10.5.6, and (C) AMD Opteron
Processor 142 CPU, 8GB RAM, running Linux 2.4.27.
Testing machines were connected over a local area network
417
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:09 UTC from IEEE Xplore.  Restrictions apply. 
VI. ACKNOWLEDGMENTS
We thank members of the Laboratory for Education
and Research in Secure Systems Engineering (LERSSE)
supplied valuable feedback on the earlier drafts of this
paper. Special thanks go to Levi Stoddard for his great
helps on the prototype implementation. Research on secure
Web 2.0 content sharing by the ﬁrst and third authors have
been partially supported by the Canadian NSERC ISSNet
Internetworked Systems Security Network Program.
REFERENCES
2,”
[1] T. Oreilly, “What is Web 2.0: Design patterns and business
models for the next generation of software,” Communications
and Strategies, No. 1, p. 17, 2007.
J.
trust-management
J. Feigenbaum,
“The KeyNote
[2] M. Blaze,
Keromytis,
version
http://www.ietf.org/rfc/rfc2704.txt
and A. D.
system
[Online]. Available:
September
Ioannidis,
1999.
[3] C. M. Ellison, B. Frantz, B. Lampson, R. Rivest, B. Thomas,
and T. Ylonen, “SPKI certiﬁcate theory,” September 1999.
[Online]. Available: http://www.ietf.org/rfc/rfc2693.txt
[4] N. Li, J. C. Mitchell, and W. H. Winsborough, “Design
of a role-based trust-management framework,” in SP ’02:
Proceedings of the 2002 IEEE Symposium on Security and
Privacy, 2002, p. 114.
[5] S. Voida, W. K. Edwards, M. W. Newman, R. E. Grinter, and
N. Ducheneaut, “Share and share alike: exploring the user
interface affordances of ﬁle sharing,” in Proceedings of the
SIGCHI conference on Human Factors in computing systems
CHI ’06:. New York, NY, USA: ACM, 2006, pp. 221–230.
[6] T. Whalen, “Supporting ﬁle sharing through improved
awareness,” Ph.D. Dissertation, Dalhousie University,
Canada, 2008. [Online]. Available: http://www.proquest.com/
[7] A. D. Miller and W. K. Edwards, “Give and take: A study of
consumer photo-sharing culture and practice,” in Proceedings
of the CHI 2007, San Jose, California, USA, April 28 –May
3 2007, pp. 347–356.
[8] D. Recordon and B. Fitzpatrick, “OpenID authentication 2.0 -
ﬁnal,” http://openid.net/specs/openid-authentication-2 0.html,
December 2007.
[9] J. S. Olson, J. Grudin, and E. Horvitz, “A study of preferences
for sharing and privacy,” in CHI ’05 extended abstracts on
Human factors in computing systems (CHI ’05). New York,
NY, USA: ACM, 2005, pp. 1985–1988.
[10] D. Florencio and C. Herley, “A large-scale study of web
password habits,” in WWW ’07: Proceedings of the 16th
international conference on World Wide Web. New York,
NY, USA: ACM, 2007, pp. 657–666.
[11] E. Cohen, R. K. Thomas, W. Winsborough, and D. Shands,
“Models for coalition-based access control (cbac),” in Pro-
ceedings of the seventh ACM symposium on access control
models and technologies, Monterey, California, USA, 2002,
pp. 97–106.
[12] Internet2,
“Shibboleth
http://shibboleth.internet2.edu/, 2008.
System,”
[13] OASIS, “Assertions and Protocol for the OASIS Security
Assertion Markup Language (SAML),” http://www.oasis-
open.org/committees/security/docs/cs-sstc-core-00.pdf, April
2002.
[14] B. Adida, “EmID: Web authentication by email address,” in
Proceedings of Web 2.0 Security and Privacy Workshop 2008,
Oakland, California, USA, 2008.
[15] M. Blaze, J. Feigenbaum, and J. Lacy, “Decentralized trust
management,” in the 1996 IEEE Symposium on Security and
Privacy, Washington DC, USA, 1996, pp. 164–173.
[16] R. Sandhu, E. Coyne, H. Feinstein, and C. Youman, “Role-
based access control models,” IEEE Computer, vol. 29, no. 2,
pp. 38–47, 1996.
Corporation,
“Microsoft
Live Mesh,”
[17] Microsoft
https://www.mesh.com/, 2009.
[18] Dropbox Corporation, “Sync your ﬁles online and across
computers,” http://www.getdropbox.com/, 2009.
[19] R. J. Bayardo Jr., R. Agrawal, D. Gruhl, and A. Somani,
“YouServ: a web-hosting and content sharing tool for the
masses,” in Proceedings of the 11th international conference
on World Wide Web. New York, NY, USA: ACM, 2002, pp.
345–354.
[20] A. H. Karp, M. Stiegler, and T. Close, “Not one click
for security,” http://www.hpl.hp.com/techreports/2009/HPL-
2009-53.pdf, 2009.
[21] T. Close, “Web-key: Mashing with permission,” in Proceed-
ings of the Web 2.0 Security and Privacy 2008, 2008.
[22] B. Carminati, E. Ferrari, and A. Perego, “Rule-based access
control for social networks,” in On the Move to Meaningful
Internet Systems 2006: OTM 2006 Workshops.
LNCS,
Springer-Verlag, 2006.
[23] A. Tootoonchian, K. K. Gollu, S. Saroiu, Y. Ganjali, and
A. Wolman, “Lockr: social access control for web 2.0,” in
Proceedings of the ﬁrst workshop on Online social networks,
Seattle, WA, USA, 2008, pp. 43–48.
[24] S.-T. Sun and K. Beznosov, “Open problems in Web 2.0 user
content sharing,” in Proceedings of the iNetSec Workshop,
Zurich, Switzerland, April 23th 2009.
[25] D. Fuelling and W. Norris, “Email Address to URL Trans-
formation 1.0,” http://eaut.org/specs/1.0/, June 2008.
[26] E. Hammer-Lahav,
“XRDS-Simple
simple.net/core/1.0/, March 2008.
1.0,”
http://xrds-
[27] N. Li, W. H. Winsborough, , and J. C. Mitchell, “Distributed
credential chain discovery in trust management,” Journal of
Computer Security, vol. 11, no. 1, pp. 35–86, 2003.
[28] S. E. Schechter, R. Dhamija, A. Ozment, and I. Fischer, “The
emperor’s new security indicators,” in Proceedings of the
2007 IEEE Symposium on Security and Privacy. Washington,
DC, USA: IEEE Computer Society, 2007, pp. 51–65.
[29] R. Dhamija, J. D. Tygar, and M. Hearst, “Why phishing
works,” in CHI ’06: Proceedings of the SIGCHI conference
on Human Factors in computing systems. New York, NY,
USA: ACM, 2006, pp. 581–590.
[30] A. Herzberg and A. Jbara, “Security and identiﬁcation indica-
tors for browsers against spooﬁng and phishing attacks,” ACM
Trans. Interet Technology., vol. 8, no. 4, pp. 1–36, 2008.
[31] R. Dhamija and J. D. Tygar, “The battle against phishing:
Dynamic security skins,” in SOUPS ’05: Proceedings of the
2005 symposium on Usable privacy and security. New York,
NY, USA: ACM, 2005, pp. 77–88.
[32] M. Wu, R. C. Miller, and G. Little, “Web wallet: preventing
phishing attacks by revealing user intentions,” in SOUPS ’06:
Proceedings of the second symposium on Usable privacy and
security. New York, NY, USA: ACM, 2006, pp. 102–113.
[33] Earthlink Inc., “Earthlink toolbar: scambloker for windows
users,” 2008.
[34] Y. Zhang, S. Egelma, L. Cranor, and J. Hong, “Phinding
phish: Evaluating anti-phishing tools,” in Proceedings of
the 14th Annual Network and Distibuted System Security
Symposium (NDSS 2007), 2007.
[35] M. Wu, R. C. Miller, and S. L. Garﬁnkel, “Do security
toolbars actually prevent phishing attacks?” in Proceedings
of the SIGCHI conference on Human Factors in computing
systems(CHI ’06). New York, NY, USA: ACM, 2006, pp.
601–610.
[36] J. Bufu, “Openid4java,” http://code.sxip.com/openid4java/,
[37] Q. Wei, J. Crampton, K. Beznosov, and M. Ripeanu,
“Authorization recycling in RBAC systems,” in Proceedings
of the thirteenth ACM Symposium on Access Control Models
and Technologies (SACMAT). Estes Park, Colorado, USA:
ACM, June 11–13 2008, pp. 63–72. [Online]. Available:
http://doi.acm.org/10.1145/1377836.1377848
2009.
418
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:09 UTC from IEEE Xplore.  Restrictions apply.