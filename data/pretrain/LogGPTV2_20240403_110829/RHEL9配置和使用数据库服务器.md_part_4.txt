    和 `mysqlshow`{.literal} 分别指向
    `mariadb-admin`{.literal}、`mariadb-access`{.literal} 和
    `mariadb-show`{.literal} 二进制代码。
-   `SUPER`{.literal}
    特权已被分成几个特权，以更好地与每个用户角色保持一致。因此，某些语句已更改了所需的权限。
-   在并行 `复制中，slave_parallel_mode`{.literal} 现在被默认设置为
    `静态`{.literal}。
-   在 [**InnoDB**]{.strong} 存储引擎
    中，以下变量的默认值已发生变化：`innodb_adaptive_hash_index `{.literal}
    变为 `OFF`{.literal}，`innodb_checksum_algorithm`{.literal} 变为
    `full_crc32`{.literal}。
-   [**MariaDB**]{.strong} 现在使用用于管理 [**MariaDB**]{.strong}
    命令历史记录（the `.mysql_history`{.literal} 文件）的底层软件的
    `libedit`{.literal} 实施，而不是之前使用的 `readline`{.literal}
    库。此更改会影响直接使用 `.mysql_history`{.literal} 文件的用户。注意
    `.mysql_history`{.literal} 是一个由 [**MariaDB**]{.strong} 或
    [**MySQL**]{.strong}
    应用管理的文件，用户不应直接使用该文件。人类可读的外表是巧合。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    要提高安全性，您可以考虑不维护历史记录文件。禁用记录命令历史记录：
    ::: orderedlist
    1.  删除 `.mysql_history`{.literal} 文件（如果存在的话）。
    2.  使用以下任一方法：
        ::: itemizedlist
        -   将 `MYSQL_HISTFILE`{.literal} 变量设置为
            `/dev/null`{.literal}，并将此设置包含在您的任何 shell
            启动文件中。
        -   将 `.mysql_history`{.literal} 文件更改为指向
            `/dev/null`{.literal} 的符号链接：
            ``` literallayout
            $ ln -s /dev/null $HOME/.mysql_history
            ```
        :::
    :::
    :::
:::
[**MariaDB Galera 集群**]{.strong} 已升级到版本 4，有以下显著变化：
::: itemizedlist
-   [**Galera**]{.strong}
    添加了一个新的流复制特性，其支持复制无限大小的事务。在执行流复制的过程中，集群以小片段复制事务。
-   [**Galera**]{.strong} 现在完全支持全球交易 ID(GTID)。
-   `/etc/my.cnf.d/galera.cnf`{.literal} 文件中的 `wsrep_on`{.literal}
    选项的默认值已从 `1`{.literal} 改为
    `0`{.literal}，以防止最终用户在没有配置所需的附加选项的情况下启动
    `wsrep`{.literal} 复制。
:::
对[**MariaDB 10.5**]{.strong} 中 PAM 插件的更改包括：
::: itemizedlist
-   [**MariaDB 10.5**]{.strong}
    添加了可插拔验证模块(PAM)插件的一个新版本。PAM 插件版本 2.0
    使用单独的 `setuid root`{.literal} 助手二进制文件来执行 PAM
    身份验证，这使得 [**MariaDB**]{.strong} 可以使用其他 PAM 模块。
-   帮助程序二进制文件只能由 `mysql`{.literal}
    组中的用户执行。默认情况下，组只包含 `mysql`{.literal}
    用户。红帽建议管理员不要向 `mysql`{.literal}
    组添加更多用户，以防止无需通过这个助手工具进行节流或记录的情况下的密码猜测攻击。
-   在 [**MariaDB 10.5**]{.strong}
    中，可插拔验证模块(PAM)插件及其相关文件已移至新的软件包
    `mariadb-pam`{.literal}。因此，在不使用对 `MariaDB`{.literal}
    进行PAM 验证的系统中不会引入新的 `setuid root`{.literal}
    二进制文件。
-   `mariadb-pam`{.literal} 软件包包含两个 PAM 插件版本：版本 2.0
    是默认值，版本 1.0 作为 `auth_pam_v1`{.literal} 共享对象库提供。
-   默认情况下，`mariadb-pam`{.literal} 软件包不与
    [**MariaDB**]{.strong} 服务器一起安装 。要在 [**MariaDB
    10.5**]{.strong} 中提供 PAM 身份验证插件，请手动安装
    `mariadb-pam`{.literal} 软件包。
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#migrating_from_a_rhel_8_version_of_mariadb_10_3_to_a_rhel_9_version_of_mariadb_10_5}从 RHEL 8 的 MariaDB 10.3 迁移到 RHEL 9 版本的 MariaDB 10.5 {.title}
:::
这个步骤描述了使用 `mariadb-upgrade`{.literal} 程序从 [**MariaDB
10.3**]{.strong} 迁移到 [**MariaDB 10.5**]{.strong}。
`mariadb-upgrade`{.literal} 实用程序由 `mariadb-server-utils`{.literal}
子软件包提供，该子软件包作为 `mariadb-server`{.literal}
软件包的依赖项安装。
::: itemizedlist
**先决条件**
-   在执行升级前，备份存储在 [**MariaDB**]{.strong} 数据库中的所有数据。
:::
::: orderedlist
**流程**
1.  确定在 RHEL 9 系统中安装了 `mariadb-server`{.literal} 软件包：
    ``` literallayout
    # dnf install mariadb-server
    ```
2.  确保 `mariadb`{.literal} 服务在复制数据时没有在源和目标系统上运行：
    ``` literallayout
    # systemctl stop mariadb.service
    ```
3.  将源位置的数据复制到 RHEL 9 目标系统的 `/var/lib/mysql/`{.literal}
    目录中。
4.  对目标系统上复制的文件设置适当的权限和 SELinux 上下文：
    ``` literallayout
    # restorecon -vr /var/lib/mysql
    ```
5.  确保 `mysql:mysql`{.literal} 是 `/var/lib/mysql`{.literal}
    目录中所有数据的所有者：
    ``` literallayout
    # chown -R mysql:mysql /var/lib/mysql
    ```
6.  调整配置，以便位于 `/etc/my.cnf.d/`{.literal} 中的选项文件只包含对
    [**MariaDB 10.5**]{.strong} 有效的选项。详情请参阅 [MariaDB
    10.4](https://mariadb.com/kb/en/upgrading-from-mariadb-103-to-mariadb-104/#options-that-have-changed-default-values){.link}
    和 [MariaDB
    10.5](https://mariadb.com/kb/en/upgrading-from-mariadb-104-to-mariadb-105/#options-that-have-been-removed-or-renamed){.link}
    的上游文档。
7.  在目标系统中启动 [**MariaDB**]{.strong} 服务器。
    ::: itemizedlist
    -   在升级独立运行的数据库时：
        ``` literallayout
        # systemctl start mariadb.service
        ```
    -   在升级 [**Galera**]{.strong} 集群节点时：
        ``` literallayout
        # galera_new_cluster
        ```
        `mariadb`{.literal} 服务将自动启动。
    :::
8.  执行 [**mariadb-upgrade**]{.strong} 工具来检查和修复内部表。
    ::: itemizedlist
    -   在升级独立运行的数据库时：
        ``` literallayout
        $ mariadb-upgrade
        ```
    -   在升级 [**Galera**]{.strong} 集群节点时：
        ``` literallayout
        $ mariadb-upgrade --skip-write-binlog
        ```
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
有一些与原位升级相关的风险和已知问题。例如，一些查询可能无法正常工作，或者它们会以与升级前不同的顺序运行。有关这些风险和问题的更多信息，以及有关原位升级的常规信息，请参阅
[MariaDB 10.5
发行注记](https://mariadb.com/kb/en/release-notes-mariadb-105-series/){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#using-mariadb_configuring-and-using-database-servers.html#replicating-mariadb-with-galera_using-mariadb}使用 Galera 复制 MariaDB {.title}
:::
这部分论述了如何在 Red Hat Enterprise Linux 9 中使用 Galera 解决方案复制
[**MariaDB**]{.strong} 数据库。
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#introduction-to-galera-replication_replicating-mariadb-with-galera}MariaDB Galera 集群介绍 {.title}
:::
Galera 复制是基于由多个 [**MariaDB**]{.strong} 服务器组成的同步多源
[**MariaDB Galera 集群**]{.strong}
的创建。与传统的主/备设置不同，副本通常是只读的，[**MariaDB Galera
集群**]{.strong} 中的节点可以是全部可写。
Galera 复制和 [**MariaDB**]{.strong} 数据库之间的接口由写集复制
API([**wsrep API**]{.strong}) 定义的。
[**MariaDB Galera 集群**]{.strong} 的主要特性是 ：
::: itemizedlist
-   同步复制
-   主动-主动多源拓扑
-   对任何集群节点的读和写
-   自动成员资格控制，故障节点从集群中删除
-   自动节点加入
-   行一级的并行复制
-   直接客户端连接：用户可以登录到集群节点，并在复制运行时直接使用这些节点
:::
同步复制意味着服务器在提交时复制事务，方法是将与事务关联的写入集合广播到集群中的每个节点。客户端（用户应用程序）直接连接到数据库管理系统(DBMS)，可以体验类似于原生
[**MariaDB**]{.strong} 的行为。
同步复制保证集群中一个节点上的更改会同时在集群中的其他节点上发生。
因此，与异步复制相比，同步复制具有以下优势：
::: itemizedlist
-   在特定集群节点间传播更改没有延迟
-   所有集群节点始终一致
-   如果其中一个集群节点崩溃，则不会丢失最新的更改
-   所有集群节点上的事务都会并行执行
-   整个集群的因果关系
:::
::: itemizedlist
**其他资源**
-   [关于 Galera
    复制](https://mariadb.com/kb/en/library/about-galera-replication/){.link}
-   [什么是 MariaDB Galera
    集群](https://mariadb.com/kb/en/library/what-is-mariadb-galera-cluster/){.link}
-   [MariaDB Galera
    集群入门](https://mariadb.com/kb/en/library/getting-started-with-mariadb-galera-cluster/){.link}
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#components-to-build-mariadb-galera-cluster_replicating-mariadb-with-galera}构建 MariaDB Galera 集群的组件 {.title}
:::
要构建 [**MariaDB Galera
集群**]{.strong}，您必须在您的系统上安装以下软件包：
::: itemizedlist
-   `mariadb-server-galera`{.literal} - 包含 [**MariaDB Galera
    集群**]{.strong} 的支持文件和脚本。
-   `MariaDB-server`{.literal} - 由 [**MariaDB**]{.strong}
    上游打补丁，以包含写入集复制 API([**wsrep API**]{.strong})。此 API
    提供 [**Galera**]{.strong} 复制和 [**MariaDB**]{.strong}
    之间的接口。
-   `Galera`{.literal} - 由 [**MariaDB**]{.strong} 上游打补丁，以添加对
    [**[MariaDB]{.application}**]{.strong}
    的完全支持。`galera`{.literal} 软件包包含以下内容：
    ::: itemizedlist
    -   [**Galera Replication 程序库**]{.strong} 提供整个复制功能。
    -   [**Galera Arbitrator**]{.strong}
        工具可用作参与脑裂场景的集群成员。但是，[**Galera
        Arbitrator**]{.strong} 无法参与实际的复制。
    -   [**Galera Systemd 服务**]{.strong} 和 [**Galera
        打包程序脚本**]{.strong}，它们用于部署 Galera Arbitrator
        工具。RHEL 9 提供这些文件的上游版本，位于
        `/usr/lib/systemd/system/garbd.service`{.literal} 和
        `/usr/sbin/garb-systemd`{.literal}。
    :::
:::
::: itemizedlist
**其他资源**
-   [Galera
    复制程序](https://mariadb.com/kb/en/library/about-galera-replication/#generic-replication-library){.link}
-   [Galera
    Arbitrator](https://galeracluster.com/library/documentation/arbitrator.html){.link}
-   [MySQL-wsrep 项目](https://github.com/codership/mysql-wsrep){.link}
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#configuring-mariadb-galera-cluster_replicating-mariadb-with-galera}部署 MariaDB Galera 集群 {.title}
:::
::: itemizedlist
**先决条件**
-   安装 [**MariaDB Galera Cluster**]{.strong} 软件包。例如：
    ``` literallayout
    # dnf install galera
    ```
    因此，会安装以下软件包：
    ::: itemizedlist
    -   `mariadb-server-galera`{.literal}
    -   `mariadb-server`{.literal}
    -   `galera`{.literal}
        `mariadb-server-galera`{.literal} 软件包将
        `mariadb-server`{.literal} 和 `galera`{.literal}
        软件包作为其依赖项。
        有关构建 [**MariaDB Galera Cluster**]{.strong}
        的组件的更多信息，请参阅 ["构建 MariaDB Galera
        集群的组件"一节](#using-mariadb_configuring-and-using-database-servers.html#components-to-build-mariadb-galera-cluster_replicating-mariadb-with-galera "构建 MariaDB Galera 集群的组件"){.xref}
    :::
-   在系统首次添加到集群前，必须更新 [**MariaDB**]{.strong}
    服务器复制配置。
    默认配置在 `/etc/my.cnf.d/galera.cnf`{.literal} 文件中。
    在部署 [**MariaDB Galera 集群**]{.strong} 之前，请将所有节点上的
    `/etc/my.cnf.d/galera.cnf`{.literal} 文件中的
    `wsrep_cluster_address`{.literal} 选项设置为以以下字符串开头：
    ``` literallayout
    gcomm://
    ```
    ::: itemizedlist
    -   对于初始节点，可以将 `wsrep_cluster_address`{.literal}
        设置为空列表：
        ``` literallayout
        wsrep_cluster_address="gcomm://"
        ```
    -   对于所有其他节点，将 `wsrep_cluster_address`{.literal}
        设置为包含已属于正在运行的集群的一部分的任何节点的地址。例如：
        ``` literallayout
        wsrep_cluster_address="gcomm://10.0.0.10"
        ```
        有关如何设置 Galera 集群地址的更多信息，请参阅 [Galera Cluster
        Address](https://mariadb.com/kb/en/library/galera-cluster-address/){.link}。
    :::
:::
::: orderedlist
**流程**
1.  通过在该节点上运行以下 wrapper 来引导新集群的第一个节点：
    ``` literallayout
    # galera_new_cluster