com.ibm.mq.connector.outbound.ConnectionWrapper.setExceptionListener(ConnectionWrapper.java:244)
| at com.ibm.basicMDB.MDB.onMessage(MDB.java:45)
...
Property Store Contents
-----------------------
All currently set properties
| awt.toolkit :- sun.awt.windows.WToolkit
| catalina.ext.dirs :- C:\JBoss-6.0.0\server\default\lib
| catalina.home :- C:\JBoss-6.0.0\server\default
| com.ibm.cpu.endian :- little
| com.ibm.jcl.checkClassPath :-
| com.ibm.mq.connector.performJavaEEContainerChecks :- false
| com.ibm.oti.configuration :- scar
| com.ibm.oti.jcl.build :- 20131013_170512
| com.ibm.oti.shared.enabled :- false
| com.ibm.oti.vm.bootstrap.library.path :- C:\Program
Files\IBM\Java70\jre\bin\compressedrefs;C:\Program Files\IBM\Java70\jre\bin
| com.ibm.oti.vm.library.version :- 26
| com.ibm.system.agent.path :- C:\Program
Files\IBM\Java70\jre\bin
| com.ibm.util.extralibs.properties :-
| com.ibm.vm.bitmode :- 64
| com.ibm.zero.version :- 2
| console.encoding :- Cp850
| file.encoding :- Cp1252
| file.encoding.pkg :- sun.io
...
WorkQueueMananger Contents
--------------------------
| Current ThreadPool size :- 2
| Maintain ThreadPool size :- false
| Maximum ThreadPool size :- -1
| ThreadPool inactive timeout :- 0
Runtime properties
------------------
| Available processors :- 4
| Free memory in bytes (now) :- 54674936
| Max memory in bytes :- 536870912
| Total memory in bytes (now) :- 235012096
Component Manager Contents
--------------------------
Common Services Components:
| CMVC :- p750-002-130627
| Class Name :- class com.ibm.msg.client.commonservices.j2se.J2SEComponent
| Component Name :- com.ibm.msg.client.commonservices.j2se
| Component Title :- Common Services for Java Platform, Standard Edition
| Factory Class :- class com.ibm.msg.client.commonservices.j2se.CommonServicesImplementation
| Version :- 7.5.0.2
| inPreferenceTo[0] :- com.ibm.msg.client.commonservices.j2me
Messaging Provider Components:
IBM MQ troubleshooting and support 371
| CMVC :- p750-002-130627
| Class Name :- class com.ibm.msg.client.wmq.factories.WMQComponent
| Component Name :- com.ibm.msg.client.wmq
| Component Title :- IBM MQ JMS Provider
| Factory Class :- class com.ibm.msg.client.wmq.factories.WMQFactoryFactory
| Version :- 7.5.0.2
Provider Specific Information
-----------------------------
Overview of JMS System
Num. Connections : 3
Num. Sessions : 3
Num. Consumers : 0
Num. Producers : 0
Detailed JMS System Information
Connections :
| Instance :- com.ibm.msg.client.wmq.internal.WMQXAConnection@bd4b665a
| connectOptions :- version:5 options:64 clientConn:
[channelName:'MY.SVRCONN' version:10 channelType:6 transportType:2 desc:''
qMgrName:'test' xmitQName:'' connectionName:'9.20.124.119(1414)' mcaName:''
modeName:'' tpName:'' batchSize:50 discInterval:6000 shortRetryCount:10
shortRetryInterval:60 longRetryCount:999999999 longRetryInterval:1200
seqNumberWrap:99999999 maxMsgLength:104857600 putAuthority:1 dataConversion:0
userIdentifier:'' password:'' mcaUserIdentifier:'' mcaType:1
remoteUserIdentifier:'' msgRetryExit:'' msgRetryUserData:'' msgRetryCount:10
heartbeatInterval:1 batchInterval:0 nonPersistentMsgSpeed:2 clustersDefined:0
networkPriority:0
mcaSecurityId:000000000000000000000000000000000000000000000000000000000000000000000000000
00000 remoteSecurityId:000000000000000000000000000000000000000000000000000000000000000000000000
00000000 sslCipherSpec:'' sslPeerName:'' sslClientAuth:0 keepAliveInterval:-1
localAddress:'' batchHeartbeat:0 hdrCompList:(0,-1)msgCompList:(0,-1,-1,-1,-1,-1,-
1,-1,-1,-1,-1,-1,-1,-1,-1,-1)clwlChannelRank:0 clwlChannelPriority:0 clwlChannelWeight:50
channelMonitoring:0 channelStatistics:0 exitNameLength:128 exitDataLength:32
sendExitsDefined:0 sendExit:''
sendUserData:0000000000000000000000000000000000000000000000000000000000000000
sendExitPtr: sendUserDataPtr: receiveExitsDefined:0 receiveExit:''
receiveUserData:0000000000000000000000000000000000000000000000000000000000000000
receiveExitPtr: ReceiveUserDataPtr: SharingConversations:999999999
propertyControl:0 maxInstances:999999999 maxInstancesPerClient:999999999
clientChannelWeight:0 connectionAffinity:1 batchDataLimit:5000 useDLQ:2 defReconnect:0 ]
connTag:000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
sslConfig:[version:1 keyRepository:'' cryptoHardware:'' authInfoRecCount:0
keyResetCount:0 fipsRequired:0 encryptionPolicySuiteB:(1,0,0,0)certificateValPolicy:0 ]
connectionId:414D51437465737420202020202020208CA3E2522028FD02 securityParms:[]
| exceptionListener :-
com.ibm.msg.client.jms.internal.JmsProviderExceptionListener@f17b3583
| helper :-
com.ibm.msg.client.wmq.internal.WMQConsumerOwnerShadow@adabbe93
| queueManagerName :- test
...
Sessions : 3
| Instance :- com.ibm.msg.client.wmq.internal.WMQXASession@f5c63f0a
| Parent Connection :- com.ibm.msg.client.wmq.internal.WMQXAConnection@228b45cb
| ackMode :- 0
| asfConsumer :- 
| asfDestination :- 
| asfSubName :- 
| asyncPutCounter :-
com.ibm.msg.client.wmq.internal.WMQSession$AsyncPutCounter@88db6ec0
| didRecovAsyncPut :- false
| helper :-
com.ibm.msg.client.wmq.internal.WMQConsumerOwnerShadow@28192ad1
| inSyncpoint :- false
| queueManagerName :- test
...
Consumers :
Producers :
All Thread Information
Name : DispatchThread:
[com.ibm.mq.jmqi.remote.impl.RemoteSession[connectionId=414D51437465737420202020202020208
CA3E2522028FA01]]
Priority : 5
372 Troubleshooting and Support for IBM MQ
ThreadGroup : java.lang.ThreadGroup[name=JMSCCThreadPool,maxpri=10]
ID : 86
State : TIMED_WAITING
Stack : java.lang.Object.wait(Object.java:-2)
: java.lang.Object.wait(Object.java:196)
:
com.ibm.mq.jmqi.remote.impl.RemoteDispatchThread.waitOnSleepingEvent(RemoteDispatchThread
.java:151)
:
com.ibm.mq.jmqi.remote.impl.RemoteDispatchThread.sleepPhase(RemoteDispatchThread.java:636)
:
com.ibm.mq.jmqi.remote.impl.RemoteDispatchThread.run(RemoteDispatchThread.java:385)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:214)
:
com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueIt
em.java:105)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:229)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueMa
nager.java:303)
:
com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoo
lWorker.run(WorkQueueManagerImplementation.java:1219)
Name : RcvThread:
com.ibm.mq.jmqi.remote.impl.RemoteTCPConnection@269522111[qmid=test_2014-01-
24_15.55.24,fap=10,channel=MY.SVRCONN,ccsid=850,sharecnv=10,hbint=300,peer=/9.20.124.119(
1414),localport=65243,ssl=no,hConns=0,LastDataSend=1391436871409 (0ms ago
),LastDataRecv=1391436871409 (0ms ago),]
Priority : 5
ThreadGroup : java.lang.ThreadGroup[name=JMSCCThreadPool,maxpri=10]
ID : 84
State : RUNNABLE
Stack :
java.net.SocketInputStream.socketRead0(SocketInputStream.java:-2)
:
java.net.SocketInputStream.read(SocketInputStream.java:163)
:
java.net.SocketInputStream.read(SocketInputStream.java:133)
:
com.ibm.mq.jmqi.remote.impl.RemoteTCPConnection.receive(RemoteTCPConnection.java:1545)
:
com.ibm.mq.jmqi.remote.impl.RemoteRcvThread.receiveBuffer(RemoteRcvThread.java:794)
:
com.ibm.mq.jmqi.remote.impl.RemoteRcvThread.receiveOneTSH(RemoteRcvThread.java:757)
:
com.ibm.mq.jmqi.remote.impl.RemoteRcvThread.run(RemoteRcvThread.java:150)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:214)
:
com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueIte
m.java:105)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:229)
:
com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.j
ava:303)
:
com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoo
lWorker.run(WorkQueueManagerImplementation.java:1219)
...
First Failure Symptom Report completed at Mon Feb 03 14:14:46 GMT 2014
------------------------------------END FFST------------------------------------
The information in the header, Data, and Stack Trace sections of the FFST record are used by IBM to assist
in problem determination. In many cases, there is little that the system administrator can do when an
FFST record is generated, apart from raising problems through the IBM Support Center.
Suppressing FFST records
An FFST file that is generated by the IBM MQ classes for JMS contain one FFST record. If a problem
occurs multiple times during the execution of an IBM MQ classes for JMS application, multiple
FFST files with the same probe identifier are generated. This might not be desirable. The property
com.ibm.msg.client.commonservices.ffst.suppress can be used to suppress the production of FFST files.
IBM MQ troubleshooting and support 373
This property must be set in the IBM MQ classes for JMS configuration file used by the application, and
can take the following values:
0: Output all FFDC files (default).
-1: Output only the first FFST file for a probe identifier.
integer: Suppress all FFST files for a probe identifier except those files that are a multiple of this
number.
FFST: WCF XMS First Failure Support Technology
You can collect detailed information about what various parts of the IBM MQ code is doing by using IBM
MQ trace. XMS FFST has its own configuration and output files for the WCF custom channel.
XMS FFST trace files are traditionally named using the base name and process ID format of: xmsffdc
pid_date.txt, where pid is the process ID and date is the time and date.
As XMS FFST trace files can still be produced in parallel with WCF custom channel XMS FFST files, the
WCF custom channel XMS FFST output files have the following format to avoid confusion: wcf ffdc
pid_date.txt, where pid is the process ID and date is the time and date.
This trace output file is created in the current working directory by default, but this destination can be
redefined if necessary.
The WCF custom channel with XMS .NET trace header is similar to the following example:
************* Start Display XMS WCF Environment *************
Product Name :- value
WCF Version :- value
Level :- value
************* End Display XMS WCF Environment *************
The FFST trace files are formatted in the standard way, without any formatting that is specific to the
custom channel.
Related tasks
“Tracing the WCF custom channel for IBM MQ” on page 467
You can use IBM MQ trace to collect detailed information about what various parts of the IBM MQ code
is doing. When using Windows Communication Foundation (WCF), a separate trace output is generated
for the Microsoft Windows Communication Foundation (WCF) custom channel trace integrated with the
Microsoft WCF infrastructure trace.
“Troubleshooting WCF custom channel for IBM MQ problems” on page 242
Troubleshooting information to help you solve problems with running Microsoft Windows Communication
Foundation (WCF) custom channel for IBM MQ applications.
“Contacting IBM Support” on page 301
If you need help with a problem that you are having with IBM MQ, you can contact IBM Support through
the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and
other news.
Developing Microsoft Windows Communication Foundation applications with IBM MQ
FFDC configuration for XMS .NET applications
For the .NET implementation of XMS, one FFDC file is produced for each FFDC.
First Failure Data Capture (FFDC) files are stored in human readable text files. These files
have names of the form xmsffdcprocessID_DateTTimestamp.txt. An example of a file
name is xmsffdc264_2006.01.06T13.18.52.990955.txt. The timestamp contains microseconds
resolution.
Files start with the date and time that the exception occurred, followed by the exception type. The files
include a unique short probeId, which can be used to locate where this FFDC occurred.
374 Troubleshooting and Support for IBM MQ
You do not need to carry out any configuration to turn on FFDC. By default, all FFDC files are written to the
current directory. However, if required, you can specify a different directory by changing ffdcDirectory in
the Trace section of the application configuration file. In the following example, all trace files are logged to
the directory c:client\ffdc:.
You can disable trace by setting FFDC to false in the Trace section of the application configuration file.
If you are not using an application configuration file, FFDC is on and trace is off.
Tracing
You can use different types of trace to help you with problem determination and troubleshooting.
About this task
Use this information to find out about the different types of trace, and how to run trace.
• “Tracing on Windows” on page 391
• “Tracing on AIX and Linux” on page 376
• “Using trace with IBM MQ server on IBM i” on page 382
• “Using trace with an IBM MQ client on IBM i” on page 387
• “Tracing on z/OS” on page 395
• “Tracing TLS: runmqakm, strmqikm, and runmqckm functions” on page 466
• “Tracing IBM MQ classes for JMS applications” on page 426
• “Tracing IBM MQ classes for Java applications” on page 430
• “Tracing the IBM MQ resource adapter” on page 439
• “Tracing additional IBM MQ Java components” on page 440
• “Controlling trace in a running process by using IBM MQ classes for Java and IBM MQ classes for JMS”
on page 435
Related concepts
“Using error logs” on page 353
There are a variety of error logs that you can use to help with problem determination and troubleshooting.
“First Failure Support Technology (FFST)” on page 363
First Failure Support Technology (FFST) for IBM MQ provides information about events that, in the case of
an error, can help IBM support personnel to diagnose the problem.
Related tasks
“Contacting IBM Support” on page 301
IBM MQ troubleshooting and support 375
If you need help with a problem that you are having with IBM MQ, you can contact IBM Support through
the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and
other news.
Tracing on AIX and Linux
On AIX and Linux, you can use the strmqtrc and endmqtrc commands to start and end tracing, and
dspmqtrc to display a trace file. On AIX, you can use AIX system trace in addition to using the strmqtrc
and endmqtrc commands.
Before you begin
To format or view a trace file, you must be either the creator of the trace file, or a member of the mqm
group.
About this task
Traces can capture the root cause of many IBM MQ problems. It is important to limit how long tracing is
active in order to avoid affecting performance or generating excessively large trace files and filling up your