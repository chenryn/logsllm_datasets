ENV MYSQL_USER test
ENV MYSQL_PASS mypassword
6.1 构建mysql镜像 75
#支持中文
1
ENV LC_ALL en_US.UTF-8
ADD build_table.sh /root/build_table.sh
RUN chmod u+x /root/build_table.sh
2
RUN /root/build_table.sh
EXPOSE 3306
ADD run.sh /root/run.sh
3
RUN chmod u+x /root/run.sh
CMD /root/run.sh
4
下面我们说明Dockerfile用到的两个脚本文件——build_table.sh和run.sh，它们和Dockerfile放
在同一个目录下。
5
build_table.sh的内容为：
#!/bin/bash 6
mysqld_safe &
sleep 3
mysql -e "GRANT ALL PRIVILEGES ON *.* TO '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASS' WITH GRANT 7
OPTION;"
mysql -e "create database scores"
mysql -e "create table scores.name_score(name char(20) not null,score int not null)DEFAULT CHARSET=utf8" 9
mysql -e "insert into scores.name_score values ('李明',80),('张军',90),('王小二',95)"
build_table.sh首先以后台方式运行mysqld_safe，然后通过mysql客户端程序执行数据库操作。
8
第一条操作是授权给MYSQL_USER变量代表的用户，该变量的值我们在Dockerfile中设定为test了。
第二条操作是创建scores数据库，第三条操作是创建name_score表格，它属于scores数据库，第四
10
条则是向表中插入三条数据。
run.sh定义了容器的默认启动行为，这里只是拉起mysql，其内容为： 10
#!/bin/bash
mysqld_safe 11
6.1.2 构建和上传镜像 13
Dockerfile和必要的文件都准备好了，接下来就可以使用docker build命令来构建镜像了：
14
$ sudo docker build -t lqkaixin/centos-mysql:v1 ./
Sending build context to Docker daemon 7.68 kB
15
Sending build context to Docker daemon
Step 0 : FROM centos
---> 8efe422e6104
16
Step 1 : WORKDIR /root/
---> Using cache
---> 61b420a9c947
Step 2 : RUN yum -y install wget 17
---> Using cache
---> 655f7617edb4
18
....
76 第6章 综合案例1：Apache+PHP+MySQL
Step 15 : RUN chmod u+x /root/run.sh
---> Using cache
---> 0b8e3b2ec3b1
Step 16 : CMD /root/run.sh
---> Using cache
---> 200f7c523709
Successfully built 200f7c523709
docker build命令的-t参数将构建成的镜像标记为lqkaixin/centos-mysql:v1。lqkaixin是命
名空间，就是笔者在Docker Hub上的用户名，centos-mysql是仓库名，v1是标签，表明这是第一
个版本。在输出的最后，我们看到Successfully built 200f7c523709，这表明镜像生成成功，其
中200f7c523709就是镜像的ID。
构建好镜像之后，通过docker push命令将镜像提交到Docker Hub：
$ sudo docker push lqkaixin/centos-mysql:v1
The push refers to a repository [lqkaixin/centos-mysql:v1] (len: 1)
Sending image list
Please login prior to push:
Username: lqkaixin
Password:
Email: PI:EMAIL
Login Succeeded
The push refers to a repository [lqkaixin/centos-mysql:v1] (len: 1)
Sending image list
Pushing repository lqkaixin/centos-mysql:v1 (1 tags)
511136ea3c5a: Image already pushed, skipping
5b12ef8fd570: Image already pushed, skipping
...
200f7c523709: Image successfully pushed
Pushing tag for rev [200f7c523709] on
{https://cdn-registry-1.docker.io/v1/repositories/lqkaixin/centos-mysql/tags/v1}
由于之前没有登录过，这里提示需要输入用户名、密码和注册邮箱。如果镜像比较大，上传
会花费比较长的时间。看到类似最后一行输出，就表明上传成功。登录Docker Hub，就可以看到
刚刚上传的镜像了。
现在mysql镜像就创建好了，并且可以在任何可以上网的机器上从Docker Hub拉取。
6.2 构建 apache+php 镜像
Apache是世界使用排名第一的Web服务器软件。由于其跨平台性和安全性而被广泛使用，它
是目前最流行的Web服务器端软件。PHP是一种通用开源脚本语言，非常适用于Web开发，是常
用的服务端脚本语言。在这一节里，我们将以centos镜像为基础，使用Dockerfile搭建一个
apache+php镜像。
6.2 构建apache+php镜像 77
6.2.1 编写镜像Dockerfile
1
(1) 和上一节类似，首先创建Dockerfile，在前面加入适当的说明：
2
# 名称：容器化的Apache+PHP
# 用途：用作Web前端服务
# 创建时间：2015.01.22 3
(2) 制定我们使用的基础镜像：
4
FROM centos
(3) 声明维护者信息： 5
MAINTAINER kaixin PI:EMAIL
6
(4) 制定工作目录：
WORKDIR /root/ 7
(5) 安装httpd和php。需要注意的是，安装过程中可能出现错误导致命令运行失败，进而中断
9
build镜像。如果遇见错误但该错误又不影响应用的使用时，可以忽略该错误，以便安装顺利执
行。我这里使用 ||true来保证整个命令返回true：
8
RUN yum -y install httpd php || true
(6) 安装MySQL客户端和php-mysqlnd。MySQL是用来和远程MySQL服务端通信的，而 10
php-mysqlnd用于PHP和MySQL的沟通驱动：
10
RUN yum -y install mysql php-mysqlnd
(7) 创建必要的目录。要想Apache正常工作，就必须创建下面的目录：
11
RUN mkdir /var/log/httpd
RUN mkdir /var/www/
13
RUN mkdir /var/www/html/
其中，/var/log/httpd是存放日志的目录，var/www/是Apache应用的数据根目录，/var/www/html/
14
是存放Web页面的目录。
(8) 通过环境变量定义远端MySQL的地址、用户名和密码。可以在启动容器时用-e改变：
15
ENV MYSQL_ADDR 172.17.0.36:3306
ENV MYSQL_USER test 16
ENV MYSQL_PASS mypassword
(9) 定义启动服务必需的环境变量TERM，并且定义支持中文：
17
ENV TERM linux
#支持中文
18
ENV LC_ALL en_US.UTF-8
78 第6章 综合案例1：Apache+PHP+MySQL
(10) 添加我们的页面，这里我只定义了一个PHP页面。可以根据需要添加任意的页面或者挂
载宿主主机已有的目录：
ADD test.php /var/www/html/test.php
ADD命令会将本地的test.php文件复制到容器内的/var/www/html/目录下。
(11) 导出Apache的服务端口，这里是默认的80端口：
EXPOSE 80
(12) 添加启动脚本，定义默认启动命令：
ADD run.sh /root/run.sh
RUN chmod u+x /root/run.sh
CMD /root/run.sh
下面是完整的Dockerfile：
# 名称：容器化的Apache+PHP
# 用途：用作Web前端服务
# 创建时间：2015.01.22
FROM centos
MAINTAINER kaixin PI:EMAIL
WORKDIR /root/
RUN yum -y install httpd php || true
RUN yum -y install mysql php-mysqlnd
RUN mkdir /var/log/httpd
RUN mkdir /var/www/
RUN mkdir /var/www/html/
ENV MYSQL_ADDR 172.17.0.36:3306
ENV MYSQL_USER test
ENV MYSQL_PASS mypassword
ENV TERM linux
#支持中文
ENV LC_ALL en_US.UTF-8
ADD test.php /var/www/html/test.php
EXPOSE 80
ADD run.sh /root/run.sh
RUN chmod u+x /root/run.sh
CMD /root/run.sh
下面我们说明Dockerfile用到的两个文件test.php和run.sh。test.php是PHP演示页面文件，其内
容为：
";
}
}
4
mysql_close($con);
?>
test.php做的工作很简单，它连接到我们指定的MySQL服务端，查询scores.name_score表， 5
并把查询结果按每条一行的方式输出。
6
run.sh用于启动Apache服务，其内容为：
#!/bin/bash
7
#启动Apache
httpd
#防止脚本结束
9
while true;do sleep 1000;done
httpd命令会立即返回，这里我们用了一个while循环防止脚本返回。
8
6.2.2 构建和上传镜像
10
编写好Dockerfile后，可以通过docker build命令构建镜像：
10
$ sudo docker build -t lqkaixin/centos-apache-php:v1 ./
Sending build context to Docker daemon 7.68 kB
Sending build context to Docker daemon
11
Step 0 : FROM centos
---> 8efe422e6104
Step 1 : WORKDIR /root/
13
---> Using cache
---> 61b420a9c947
Step 2 : RUN yum -y install httpd php || true
14
---> Using cache
---> 4a9af7deb20f
...
15
Step 15 : RUN chmod u+x /root/run.sh
---> Running in baa86fdc7849
---> f516e1aad85e
16
Removing intermediate container baa86fdc7849
Step 16 : CMD /root/run.sh
---> Running in c6e88bbbbf0f
---> 1d07b342055c 17
Removing intermediate container c6e88bbbbf0f
Successfully built 1d07b342055c
18
80 第6章 综合案例1：Apache+PHP+MySQL
在docker build中，我们指定要生成的镜像的命名空间/仓库/标签为lqkaixin/centos-
apache-php:v1。
构建好镜像之后，通过docker push命令提交镜像到Docker Hub：
$ sudo docker push lqkaixin/centos-apache-php:v1
The push refers to a repository [lqkaixin/centos-apache-php:v1] (len: 1)
Sending image list
Pushing repository lqkaixin/centos-apache-php:v1 (1 tags)