### 6.1 构建 MySQL 镜像

#### 6.1.1 Dockerfile
```dockerfile
# 设置环境变量
ENV MYSQL_USER test
ENV MYSQL_PASS mypassword

# 支持中文
ENV LC_ALL en_US.UTF-8

# 添加并执行脚本文件
ADD build_table.sh /root/build_table.sh
RUN chmod u+x /root/build_table.sh
RUN /root/build_table.sh

# 暴露 MySQL 默认端口
EXPOSE 3306

# 添加并设置启动脚本
ADD run.sh /root/run.sh
RUN chmod u+x /root/run.sh
CMD /root/run.sh
```

#### 脚本说明
**build_table.sh**
```bash
#!/bin/bash
mysqld_safe &
sleep 3
mysql -e "GRANT ALL PRIVILEGES ON *.* TO '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASS' WITH GRANT OPTION;"
mysql -e "CREATE DATABASE scores"
mysql -e "CREATE TABLE scores.name_score (name CHAR(20) NOT NULL, score INT NOT NULL) DEFAULT CHARSET=utf8"
mysql -e "INSERT INTO scores.name_score VALUES ('李明', 80), ('张军', 90), ('王小二', 95)"
```
- **功能说明**：
  1. 后台运行 `mysqld_safe`。
  2. 授权给 `MYSQL_USER` 变量指定的用户（Dockerfile 中设定为 `test`）。
  3. 创建 `scores` 数据库。
  4. 在 `scores` 数据库中创建 `name_score` 表，并插入三条数据。

**run.sh**
```bash
#!/bin/bash
mysqld_safe
```
- **功能说明**：启动 MySQL 服务。

#### 6.1.2 构建和上传镜像
1. **构建镜像**：
   ```sh
   $ sudo docker build -t lqkaixin/centos-mysql:v1 ./
   ```
   - `-t` 参数用于标记镜像，格式为 `命名空间/仓库:标签`。例如，`lqkaixin/centos-mysql:v1`。
   - 成功构建后，会输出镜像 ID。

2. **上传镜像到 Docker Hub**：
   ```sh
   $ sudo docker push lqkaixin/centos-mysql:v1
   ```
   - 如果之前未登录，系统会提示输入用户名、密码和邮箱。
   - 上传成功后，可以在 Docker Hub 上看到新上传的镜像。

### 6.2 构建 Apache + PHP 镜像

#### 6.2.1 编写 Dockerfile
```dockerfile
# 名称：容器化的Apache+PHP
# 用途：用作Web前端服务
# 创建时间：2015.01.22

FROM centos
MAINTAINER kaixin PI:EMAIL

WORKDIR /root/

# 安装必要的软件包
RUN yum -y install httpd php || true
RUN yum -y install mysql php-mysqlnd

# 创建必要的目录
RUN mkdir -p /var/log/httpd
RUN mkdir -p /var/www/html

# 环境变量
ENV MYSQL_ADDR 172.17.0.36:3306
ENV MYSQL_USER test
ENV MYSQL_PASS mypassword
ENV TERM linux
ENV LC_ALL en_US.UTF-8

# 添加测试页面
ADD test.php /var/www/html/test.php

# 暴露 Apache 默认端口
EXPOSE 80

# 添加并设置启动脚本
ADD run.sh /root/run.sh
RUN chmod u+x /root/run.sh
CMD /root/run.sh
```

#### 文件说明
**test.php**
```php
<?php
$con = mysqli_connect("172.17.0.36", "test", "mypassword");
if (!$con) {
    die('Could not connect: ' . mysqli_error($con));
}
mysqli_select_db($con, "scores");

$result = mysqli_query($con, "SELECT * FROM name_score");

while ($row = mysqli_fetch_array($result)) {
    echo $row['name'] . " : " . $row['score'] . "<br>";
}

mysqli_close($con);
?>
```
- **功能说明**：连接到 MySQL 服务器，查询 `scores.name_score` 表，并按行输出结果。

**run.sh**
```bash
#!/bin/bash
# 启动 Apache
httpd
# 防止脚本结束
while true; do sleep 1000; done
```
- **功能说明**：启动 Apache 服务，并使用一个无限循环防止脚本结束。

#### 6.2.2 构建和上传镜像
1. **构建镜像**：
   ```sh
   $ sudo docker build -t lqkaixin/centos-apache-php:v1 ./
   ```

2. **上传镜像到 Docker Hub**：
   ```sh
   $ sudo docker push lqkaixin/centos-apache-php:v1
   ```

通过以上步骤，你可以成功构建并上传 MySQL 和 Apache + PHP 的 Docker 镜像。