`/etc/multipath.conf`{.literal} 配置文件包含一个 `defaults`{.literal}
部分，该部分将 `user_friendly_names`{.literal} 参数设置为
`yes`{.literal}，如下所示。
``` literallayout
defaults {
        user_friendly_names yes
}
```
这会覆盖 `user_friendly_names`{.literal}
参数的默认值。`multipath.conf 文件`{.literal} 的 defaults
部分中设置的默认值由 DM 多路径使用，除非被 `multipath.conf`{.literal}
文件的设备、多路径或覆盖部分中指定的属性所覆盖。
::: orderedlist
**流程**
1.  查看 `/etc/multipath.conf`{.literal}
    配置文件，其中包含配置默认值模板：
    ``` literallayout
    #defaults {
    #       polling_interval        10
    #       path_selector           "round-robin 0"
    #       path_grouping_policy    multibus
    #       uid_attribute           ID_SERIAL
    #       prio                    alua
    #       path_checker            readsector0
    #       rr_min_io               100
    #       max_fds                 8192
    #       rr_weight               priorities
    #       failback                immediate
    #       no_path_retry           fail
    #       user_friendly_names     yes
    #}
    ```
2.  覆盖任何配置参数的默认值。您可以从此模板将相关行复制到
    `defaults`{.literal} 部分，并取消注释它。
    例如，要将 `path_grouping_policy`{.literal} 参数覆盖为
    `multibus`{.literal}，而不是 `故障转移`{.literal}
    的默认值，请将模板中的相应行复制到配置文件的初始默认值部分，然后取消对它的注释，如下所示：
    ``` literallayout
    defaults {
            user_friendly_names     yes
            path_grouping_policy    multibus
    }
    ```
3.  通过运行以下命令之一修改多路径配置文件后，验证
    `/etc/multipath.conf`{.literal} 文件：
    ::: itemizedlist
    -   要显示任何配置错误，请运行：
        ``` screen
        # multipath -t > /dev/null
        ```
    -   要显示使用添加的更改显示新配置，请运行：
        ``` screen
        # multipath -t
        ```
    :::
4.  重新载入 `/etc/multipath.conf`{.literal} 文件并重新配置
    `multipathd`{.literal} 守护进程以使更改生效：
    ``` screen
    # service multipathd reload
    ```
:::
::: itemizedlist
**其它资源**
-   `multipath.conf(5)`{.literal} 和 `multipathd(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#modifying-the-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#modifying-multipath-settings-for-specific-devices_modifying-the-dm-multipath-configuration-file}修改具体设备的多路径设置 {.title}
:::
在 `multipath.conf`{.literal} 配置文件的 `multipaths`{.literal}
部分中，您可以添加特定于单个多路径设备的配置，由强制 WWID 参数引用。
这些默认设置由 DM 多路径使用，并覆盖 `multipath.conf`{.literal} 文件的
`overrides`{.literal}、default 和 `devices`{.literal}
部分设置的属性。``{.literal}`multipaths`{.literal}
部分可能存在任意数量的多路径子部分。
::: orderedlist
**流程**
1.  修改特定多路径设备的 `multipaths`{.literal}
    部分。以下示例显示了在配置文件中为两个特定多路径设备指定的多路径属性：
    ::: itemizedlist
    -   第一个设备的 WWID 为
        `3600508b4000156d70001200000b0000`{.literal}，符号链接名为
        `yellow`{.literal}。
    -   示例中的第二个多路径设备的 WWID 为
        `1DEC_321816758474`{.literal}，符号链接名为。``{.literal}
    :::
    在本例中，`rr_weight`{.literal} 属性设置为 `priorities`{.literal}。
    ``` literallayout
    multipaths {
           multipath {
                  wwid                  3600508b4000156d70001200000b0000
                  alias                 yellow
                  path_grouping_policy  multibus
                  path_selector         "round-robin 0"
                  failback              manual
                  rr_weight             priorities
                  no_path_retry         5
           }
           multipath {
                  wwid                  1DEC_321816758474
                  alias                 red
                  rr_weight             priorities
            }
    }
    ```
2.  通过运行以下命令之一修改多路径配置文件后，验证
    `/etc/multipath.conf`{.literal} 文件：
    ::: itemizedlist
    -   要显示任何配置错误，请运行：
        ``` screen
        # multipath -t > /dev/null
        ```
    -   要显示使用添加的更改显示新配置，请运行：
        ``` screen
        # multipath -t
        ```
    :::
3.  重新载入 `/etc/multipath.conf`{.literal} 文件并重新配置
    `multipathd`{.literal} 守护进程以使更改生效：
    ``` screen
    # service multipathd reload
    ```
:::
::: itemizedlist
**其它资源**
-   `multipath.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#modifying-the-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#modifying-multipath-settings-for-storage-controllers_modifying-the-dm-multipath-configuration-file}修改存储控制器的多路径设置 {.title}
:::
`multipath.conf`{.literal} 配置文件的 `devices`{.literal}
部分为独立的存储设备设置属性。这些属性可由 DM 多路径使用，除非被
`多路径`{.literal} 或者 `覆盖了`{.literal} 包含该设备的路径的
`multipath.conf`{.literal} 文件中指定的属性所覆盖。这些属性覆盖
`multipath.conf`{.literal} 文件的 `defaults`{.literal}
部分中设置的属性。
::: orderedlist
**流程**
1.  查看默认配置值的信息，包括支持的设备：
    ``` screen
    # multipathd show config
    # multipath -t
    ```
    在多路径配置中，默认包括支持多路径的许多设备。
2.  可选：如果需要修改默认配置值，您可以通过在配置文件中包含覆盖这些值的设备的条目来覆盖默认值。您可以复制
    `multipathd show config`{.literal}
    命令显示的设备的设备配置默认值，并覆盖您要更改的值。
3.  通过设置 `供应商和`{.literal} `产品`{.literal}
    参数，将默认自动配置的设备添加到配置文件的 `devices`{.literal}
    部分。打开 `/sys/block/device_name/device/vendor`{.literal} 和
    `/sys/block/device_name/device/model`{.literal} 文件，其中
    [*device_name*]{.emphasis} 是多路径的设备，如下例所示：
    ``` screen
    # cat /sys/block/sda/device/vendor
    WINSYS
    # cat /sys/block/sda/device/model
    SF2372
    ```
4.  可选： 根据您的具体设备指定附加参数：
    ::: variablelist
    [`主动/主动`{.literal} 设备]{.term}
    :   通常，在这种情况下不需要设置附加参数。如果需要，您可以将
        `path_grouping_policy`{.literal} 设置为
        `multibus`{.literal}。其他可能需要设置的参数为
        `no_path_retry`{.literal} 和 `rr_min_io`{.literal}。
    [`主动/被动`{.literal} 设备]{.term}
    :   如果它自动将 I/O
        的路径切换到被动路径，您需要将检查程序功能更改为不会将 I/O
        发送到路径路径，以测试其是否工作，否则您的设备会保持故障。这意味着，您已将
        `path_checker`{.literal} 设置为 `tur`{.literal}，它适用于支持
        Test unit Ready 命令的所有 SCSI 设备。
    :::
    如果设备需要特殊命令来切换路径，则为多路径配置这个设备需要硬件处理器内核模块。当前可用的硬件处理器是
    `emc`{.literal}。如果您的设备不够，您可能无法为多路径配置设备。
    以下示例显示了多路径配置文件中的 `设备`{.literal} 条目：
    ``` screen
    #	}
    #	device {
    #		vendor			"COMPAQ  "
    #		product			"MSA1000         "
    #		path_grouping_policy	multibus
    #		path_checker		tur
    #		rr_weight		priorities
    #	}
    #}
    ```
5.  通过运行以下命令之一修改多路径配置文件后，验证
    `/etc/multipath.conf`{.literal} 文件：
    ::: itemizedlist
    -   要显示任何配置错误，请运行：
        ``` screen
        # multipath -t > /dev/null
        ```
    -   要显示使用添加的更改显示新配置，请运行：
        ``` screen
        # multipath -t
        ```
    :::
6.  重新载入 `/etc/multipath.conf`{.literal} 文件并重新配置
    `multipathd`{.literal} 守护进程以使更改生效：
    ``` screen
    # service multipathd reload
    ```
:::
::: itemizedlist
**其它资源**
-   `multipath.conf(5)`{.literal} 和 `multipathd(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#modifying-the-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#setting-multipath-values-for-all-devices_modifying-the-dm-multipath-configuration-file}为所有设备设定多路径值 {.title}
:::
使用 `multipath.conf`{.literal} 配置文件的 `overrides`{.literal}
部分，您可以为所有设备设置配置值。这部分支持 `multipath.conf`{.literal}
配置文件的 `devices`{.literal} 和 `defaults`{.literal}
部分支持的所有属性，这是 `供应商`{.literal}、`产品和`{.literal}
`修订`{.literal} 以外的所有 `设备`{.literal} 部分属性。
这些属性可由 DM 多路径为所有设备使用，除非被 multipath.conf 文件的
`multipath.conf`{.literal} 文件的 `multipaths`{.literal}
部分中指定的属性覆盖。这些属性覆盖 `multipath.conf`{.literal} 文件的
`devices`{.literal} 和 `defaults`{.literal} 部分中设置的属性。
::: orderedlist
**流程**
1.  覆盖特定于设备的设置。例如，您可能希望所有设备都设置为
    `no_path_retry`{.literal}，使其
    `失败`{.literal}。当所有路径都失败时，使用以下命令关闭队列。这会覆盖任何特定于设备的设置。
    ``` screen
    overrides {
            no_path_retry fail
    }
    ```
2.  通过运行以下命令之一修改多路径配置文件后，验证
    `/etc/multipath.conf`{.literal} 文件：
    ::: itemizedlist
    -   要显示任何配置错误，请运行：
        ``` screen
        # multipath -t > /dev/null
        ```
    -   要显示使用添加的更改显示新配置，请运行：
        ``` screen
        # multipath -t
        ```
    :::
3.  重新载入 `/etc/multipath.conf`{.literal} 文件并重新配置
    `multipathd`{.literal} 守护进程以使更改生效：
    ``` screen
    # service multipathd reload
    ```
:::
::: itemizedlist
**其它资源**
-   `multipath.conf(5)`{.literal} 手册页
:::
:::
:::
[]{#preventing-devices-from-multipathing_configuring-device-mapper-multipath.html}
::: chapter
::: titlepage
# []{#preventing-devices-from-multipathing_configuring-device-mapper-multipath.html#preventing-devices-from-multipathing_configuring-device-mapper-multipath}第 6 章 防止设备多路径 {.title}
:::
您可以将 DM 多路径配置为在配置多路径设备时忽略所选设备。DM
多路径不会将这些忽略的设备分组到多路径设备中。
::: section
::: titlepage