In PI, recall that the ﬁltering attribute is a path marker
ﬁeld in the IP header that is determined as a function of
the path the packet traversed. As noted in [31], PI improves
when paths taken by attack packets intersect paths taken by
legitimate packets as little as possible. Since paths tend to
intersect as they aggregate close to the target, Yaar et al. rec-
ommend placing PI ﬁlters several hops away from the tar-
get, so as to minimize the effects of this aggregation on the
PI marks. This observation is consistent with the reduced
internet maps we described in Section 4.3, and as such, we
evaluate the PI algorithm assuming that the ﬁlter is placed
the recommended three hops in front of the target.
This improvement does come with a cost (also discussed
in [31]), however, since this effectively reduces the distance
of each attacker to the ﬁlter by three hops. For those attack-
ers at a distance d  %(vj) if i < j, where %(vi) denotes the
percentage of packets received during training that have at-
tribute value vi. Then, for a ﬁxed percentage x, we say that
 35
 30
 25
 20
 15
 10
 5
 0
e
g
a
t
n
e
c
r
e
P
e
v
i
t
a
g
e
N
e
s
a
F
l
8 Bit SC
16 Bit SC
24 bit SC
 8
 7
 6
 5
 4
 3
 2
 1
e
g
a
t
n
e
c
r
e
P
e
v
i
t
a
g
e
N
e
s
a
F
l
 0
 20
 40
 60
 80
 100
 120
 0
 10
 20
 30
 40
NAC
 50
 70
False Positive Percentage
 60
 80
 90
 100
 110
-5
-20
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
-10
 0
t
e
g
a
n
e
c
r
e
P
e
v
i
t
a
g
e
N
e
s
a
F
l
False Positive Percentage
(i) Spoofed attack
8 bit SC
16 bit SC
24 bit SC
 20
 40
 60
 80
 100
 120
False Positive Percentage
(ii) Non-spoofed attack
 70
 60
 50
 40
 30
 20
 10
 0
 0
(i) Spoofed attack
NAC
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
 110
False Positive Percentage
(ii) Non-spoofed attack
t
e
g
a
n
e
c
r
e
P
e
v
i
t
a
g
e
N
e
s
a
F
l
Figure 5. SC (normalcy learning)
Figure 6. NAC (normalcy learning)
an attribute value (cluster) v(cid:1) is common if
(cid:2) ≤ arg min
i
j=1
 i(cid:3)
 .
%(vi) ≥ x
(1)
Intuitively, v(cid:1) is common if the smallest set of attribute val-
ues that account for a total of x% of the learning packets
contains value v(cid:1). During ﬁltering (given a ﬁxed percent-
age x), packets received bearing a common attribute value
are accepted; others are rejected. We tested this algorithm
for both spoofed attacks and non-spoofed ones. The per-
centage x was varied to exhibit its effect on false positive
and false negative rates.
The performance of SC for 8-bit, 16-bit and 24-bit clus-
tering is shown in Figure 5. Figure 5(i) shows performance
against spoofed attacks, and Figure 5(ii) shows performance
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
against nonspoofed attacks. The extreme performance of
static clustering based on /24-bit clusters is at least par-
tially due to the fact that the attacker addresses (in both the
spoofed and non-spoofed cases) virtually never appeared in
common clusters for the servers we considered, and so the
false negative rate was very close to zero.
It is also interesting to compare static clustering to NAC,
shown in Figure 6. There we can see that NAC performs
very similarly to 16-bit SC in the ranges where both are
plotted, probably owing to the fact that if the most speciﬁc
BGP routing preﬁx in our routing tables that matched an in-
coming packet was of length less than 16 bits, then we still
utilized the full 16 bits of the packet address as its attribute
value. That said, NAC does slightly outperform 16-bit SC
on average as x is increased. A plausible explanation is the
e
g
a
t
n
e
c
r
e
P
e