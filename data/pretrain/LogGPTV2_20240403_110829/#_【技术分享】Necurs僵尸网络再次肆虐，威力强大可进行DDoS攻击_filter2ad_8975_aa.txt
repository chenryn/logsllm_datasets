# 【技术分享】Necurs僵尸网络再次肆虐，威力强大可进行DDoS攻击
|
##### 译文声明
本文是翻译文章，文章来源：anubisnetworks.com
原文地址：[http://blog.anubisnetworks.com/blog/necurs-proxy-module-with-ddos-features?hs_preview=qztxAuUY-4862144940&utm_campaign=social%20media%20news&utm_source=blog%20post%20necurs](http://blog.anubisnetworks.com/blog/necurs-proxy-module-with-ddos-features?hs_preview=qztxAuUY-4862144940&utm_campaign=social%20media%20news&utm_source=blog%20post%20necurs)
译文仅供参考，具体内容表达以及含义原文为准。
翻译：[pwn_361](http://bobao.360.cn/member/contribute?uid=2798962642)
预估稿费：200RMB
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**前言**
Necurs僵尸网络是世界上最大的恶意网络之一，曾经用于传播各种致命威胁，但是在很长一段时间内它都没有再出现过，似乎是已经消失了。然而现在，它又回来了，已知的主要功能是发送大量垃圾邮件，这里面最引人注目的是Locky勒索软件。然而，Necurs并不仅仅是一个垃圾邮件程序，它是一个模块化的恶意软件，包含了一个主僵尸网络模块、一个用户级Rootkit，并且它可以动态加载其它模块。
几年以来，已经有很多对它的研究，包括它的Rootkit([1](https://www.virusbulletin.com/virusbulletin/2014/04/curse-necurs-part-1)、[2](https://www.virusbulletin.com/virusbulletin/2014/05/curse-necurs-part-2)、[3](https://www.virusbulletin.com/virusbulletin/2014/06/curse-necurs-part-3))、[DGA](https://www.johannesbader.ch/2015/02/the-dgas-of-necurs/)、[通信协议和垃圾邮件模块](https://www.cert.pl/en/news/single/necurs-hybrid-spam-botnet/)，然而，除了它的垃圾邮件模块，其它模块没有太多的公共信息。
几个月之前，我们在一些被Necurs感染的系统中注意到，Necurs除了使用常用的80通信端口以外，它还使用了一个IP集和多个不同的端口，它的通信协议似乎发生了变化，下图显示了该网络流量的示例：
最近，在Necurs僵尸网络的一个解密的C2通信数据中，我们观察到了一个请求，目的是加载两个不同的模块，每一个模块包含了不同的参数列表。下图是解密的C2服务器响应数据包：
上半部分是C2服务器对垃圾邮件模块的响应数据，这是Necurs的知名模块，参数是C2服务器的地址(链接)，可以从该地址上接收到新垃圾邮件活动的通知。下半部分是C2服务器对一个未知模块的响应数据，通过判断响应数据中的参数值，我们看到它使用了5222端口。
我们是在2016年9月注意到这个模块的，该模块的编译时间是“2016年8月23日”，这个时间表明该模块是从这个时候开始应用的。当然，也有可能相同模块的另一个版本在以前部署过，只是没有被注意到。
我们下载了该模块，并对它进行逆向分析，试图了解它到底实现了什么功能。第一眼看上去，它好像是一个简单的SOCKS/HTTP代理模块，但是当我们看到该僵尸程序可以接收C2服务器的命令时，我们意识到这是一个新添加的命令，它可以引起僵尸主机向任意目标无限循环的发送HTTP或UDF请求，这种方式只能解释为是DDOS攻击。考虑到[
**Necurs僵尸网络的规模很大**](http://blog.anubisnetworks.com/blog/monitoring-necurs-the-tip-of-the-iceberg) ，这将是非常有趣的，规模这么大的僵尸网络可能会产生强大的DDOS攻击力。
需要注意的是我们还没有看到Necurs被用于DDOS攻击，我们只是在它加载一个模块中看到了它有这种能力。
接下来的内容里，我们会对该模块进行技术分析，详细介绍它的C2协议、SOCKS/HTTP代理功能、和DDOS攻击功能。
**一、模块启动/初始化**
当该模块被僵尸程序加载后，它会执行以下初始化操作：
1.对参数进行解析，并将解析结果存储到一个内部C2地址列表中。
2.用以下信息填充一个内存数据结构(下图中的botsettings数据结构)，它包含了以下信息：
**僵尸主机ID** ：根据收集的独特系统信息产生的唯一标识。
**内部IP地址** ：通过检查出站套接字连接google.com时所用的IP地址。
**外部IP地址** ：通过ipv4.icanhazip.com或checkip.dyndns.org网站得到的主机外部IP地址。
可用带宽：通过从微软下载Windows 7 Service Pack 1文件来测量下载速度。
SOCKS/HTTP代理服务端口：大于1024的一个随机监听端口。
3.检查系统是否运行在NAT后面：通过检查出站套接字IP地址是否与本地地址、外部地址相匹配。如果系统没有在NAT后面，该僵尸程序会开启一个SOCKS/HTTP代理服务，监听一个大于1024的随机端口。
botsettings的数据结构如下图：
**二、C2通信协议**
在初始化之后，该僵尸程序会循环进入主C2连接过程，除非另有指令，否则，在这个过程中，它会每隔10秒钟尝试连接一次当前C2服务器，如果连接当前的C2服务器失败了，它会尝试连接C2地址列表中的下一个C2服务器。
该通信协议代码是二进制的，并且使用了自定义算法进行了加密/模糊。发送到服务器的信息(消息)采用了相似的数据结构(请看下图中botmsg和c2msg结构)，并包含了下面的数据：
**1.密钥** ：32位加密密钥。
**2.加密头**
：消息本身的一个被加密的头部数据结构(下图中botmsgheader和c2msgheader结构)，里面的信息用密钥加密了，包含了以下信息：
消息类型：定义了发送的消息/命令类型，大小为1字节。
载荷长度：发送的载荷长度。
头部HASH：代表了消息中第一字节的HASH值(key,msgtype,unknown和datalength)。
数据HASH：载荷的HASH，用于检查数据的完整性。
**3.加密的载荷** ：一组被发送的数据，用密钥的反向值加密过。
这就是僵尸程序发送到C2服务器的三种类型的消息，可以通过头部信息中的msgtype字节来区分它们。通常，有以下三种类型的消息：
**1.信标(msgtype 0)** ：这是僵尸程序每10秒钟发送会给C2服务器的主要消息，该消息的结构是前面提到过的botsettings结构。