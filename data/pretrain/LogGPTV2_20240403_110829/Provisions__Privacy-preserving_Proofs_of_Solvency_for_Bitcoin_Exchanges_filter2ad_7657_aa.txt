title:Provisions: Privacy-preserving Proofs of Solvency for Bitcoin Exchanges
author:Gaby G. Dagher and
Benedikt B&quot;unz and
Joseph Bonneau and
Jeremy Clark and
Dan Boneh
Provisions: Privacy-preserving Proofs of Solvency
for Bitcoin Exchanges
Gaby G. Dagher
Concordia University
Benedikt Bünz
Stanford University
Joseph Bonneau ((cid:66))
Stanford University
˚
Jeremy Clark
Concordia University
Dan Boneh
Stanford University
ABSTRACT
Bitcoin exchanges function like banks, securely holding their cus-
tomers’ bitcoins on their behalf. Several exchanges have suffered
catastrophic losses with customers permanently losing their sav-
ings. A proof of solvency demonstrates that the exchange controls
sufﬁcient reserves to settle each customer’s account. We introduce
Provisions, a privacy-preserving proof of solvency whereby an ex-
change does not have to disclose its Bitcoin addresses; total hold-
ings or liabilities; or any information about its customers. We also
propose an extension which prevents exchanges from colluding to
cover for each other’s losses. We have implemented Provisions
and it offers practical computation times and proof sizes even for a
large Bitcoin exchange with millions of customers.
Categories and Subject Descriptors
K.4.4 [Electronic Commerce]: Security, Cybercash, digital cash;
E.3 [Data Encryption]: Public key cryptosystems
Keywords
Bitcoin; Exchange Services; Solvency; Zero Knowledge Protocols
1.
INTRODUCTION
Digital currencies enable transactions that are electronically au-
thorized, cleared and settled. After decades of research [7, 5, 2, 25]
and failed business ventures attempting to establish a digital cur-
rency, Bitcoin [23] was proposed and deployed in 2009. While still
in its infancy, Bitcoin has achieved unprecedented success, enjoy-
ing a multi-billion dollar market capitalization and deployment by
large retailers. Bitcoin transactions can be executed at any time by
any device in the world with low (sometimes zero) fees.
Users can maintain security of their assets by managing the pri-
vate keys used to control them. However, managing cryptographic
keys is difﬁcult for many users [12]. Equipment failure, lost or
˚Corresponding Author
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813674 .
stolen devices, or Bitcoin-speciﬁc malware [18] could all result in
the loss of one’s holdings. Many users prefer to keep their hold-
ings with online exchanges for a simple user experience similar to
online banking—e.g., with passwords, account recovery, velocity
limits and customer support. Exchanges, as their name suggest,
also provide conversion services between bitcoin1 and other cur-
rencies. Customers can ‘withdraw’ by instructing the exchange to
send the stored bitcoin to a Bitcoin address for which they manage
the private key.
Unfortunately, storing assets with an exchange leaves users vul-
nerable to the exchange being hacked and losing its assets. One of
the most notorious events in Bitcoin’s short but storied history is
the collapse and ongoing bankruptcy of the oldest and largest ex-
change, Mt. Gox, which lost over US$450M in customer assets. A
number of other exchanges have lost their customers’ Bitcoin hold-
ings and declared bankruptcy due to external theft, internal theft, or
technical mistakes [22].
While the vulnerability of an exchange to catastrophic loss can
never be fully mitigated, a sensible safeguard is periodic demon-
strations that an exchange controls enough bitcoins to settle all of
its customers’ accounts. Otherwise, an exchange which has (se-
cretly) suffered losses can continue operating until the net with-
drawal of Bitcoin exceeds their holdings. Note that while con-
ventional banks typically implement fractional reserve banking in
which they only retain enough assets to cover a fraction of their
liabilities, the Bitcoin community is skeptical of this approach and
exchanges are generally expected to be fully solvent at all times.
A rudimentary approach to demonstrating assets is simply to
transfer them to a fresh public key. Mt. Gox did so once in 2011 in
the face of customer skepticism, moving over B420k (then worth
over US$7 M) in a single large transaction. However, this demon-
stration undermined Mt. Gox’s privacy by revealing which Bitcoin
addresses they controlled. It was never repeated.
More importantly, a proof of reserves without a corresponding
proof of liabilities is not sufﬁcient to prove solvency. A proof of
liabilities might consist of an audit by a trusted accountant, as done
for example by Coinbase2 and Bitstamp3. This might be improved
1Following convention, we refer to the protocol as ‘Bitcoin’ and
the units of currency as ‘bitcoin’ or B.
2A. Antonopoulos, “Coinbase Review,” antonopoulos.com (Blog),
25 Feb 2014.
3E. Spaven, “Bitstamp Passes Audit Overseen by Bitcoin Devel-
oper Mike Hearn,” CoinDesk, 27 May 2014.
720by allowing users to independently verify they are in the dataset
seen by the auditor, a step taken by Kraken4 and OKCoin5.
The notion of a cryptographic proof of liabilities, veriﬁable
by any party with no trusted auditor, was ﬁrst proposed by
Maxwell [29], although this initial proposal leaks information
about the number and size of customer accounts (see Section 2.2).
These privacy issues (as well as those inherent to a simple public
proof of assets) have been cited by some exchanges (e.g., Kraken6)
as a reason to use a trusted auditor instead.
In this paper we propose Provisions, a cryptographic proof of
solvency scheme with the following properties:
‚ no information is revealed about customer holdings
‚ the value of the exchange’s total total holdings is kept secret
‚ the exchange maintains unlinkability from its Bitcoin ad-
‚ multiple exchanges performing Provisions contemporane-
dress(es) through an anonymity set of arbitrary size
ously can prove they are not colluding
While the Maxwell proof of reserves is a straightforward use of
a Merkle tree, a data structure well known by Bitcoin community,
Provisions employs somewhat heavier cryptography not found in
Bitcoin itself—e.g., homomorphic commitments and zero knowl-
edge proofs. However, we demonstrate that Provisions is efﬁcient
enough in practice even for the largest of today’s exchanges to con-
duct a daily proof of solvency, being computable by a single server
in a few hours and requiring proofs which are less than 20 GB in
size. Given this practicality and the strong privacy guarantees, we
hope it will become the norm for exchanges to regularly compute a
Provisions proof of solvency which might go a long way to restor-
ing conﬁdence in the Bitcoin ecosystem.
Limitations.
It is important to recognize that no proof of solvency (or any
other type of audit) is future proof, as exchanges can still be hacked
at any time. Likewise, proving control of a quantity of bitcoin does
not guarantee the exchange itself will behave honestly in the fu-
ture. It may simply abscond with all of its customers funds after
completing a Provisions proof. The best we can hope for is efﬁ-
cient enough proofs to enable frequent and continual monitoring of
the ﬁnancial health of exchanges to quickly detect the loss of funds,
which Provisions enables.
Provisions also requires customers to check individually that
their balance has been included in the proof of liabilities. This
appears to be a fundamental limitation given our privacy goals that
a user’s account balance is not revealed to any other party. On the
positive side, as long as some users check and the exchange cannot
predict conﬁdently which users will check, it runs a high risk of
detection if it cheats (see Section 9.2).
Provisions is also limited to proving ownership of accounts with
a full public key on the blockchain (not unused pay-to-pub-key-
hash or pay-to-script-hash addresses which haven’t yet be been
used or multi-sig addresses). Removing this limitation is an in-
teresting challenge for future work.
2. BACKGROUND
We assume the reader is familiar with Bitcoin [23]. Bonneau
et al. [4] provide an extensive survey of Bitcoin, although a deep
understanding is not needed for understanding Provisions. The
pertinent features are that each unit of bitcoin is usually redeemable
by a speciﬁed public key7 and this information is maintained in a
public data structure called the blockchain.
Note that the blockchain is an ever-growing log of transactions.
Any proof of solvency will be inherent to a single block, represent-
ing one snapshot of the state of the system. In the remainder of
the paper we leave implicit the proof will be valid for a speciﬁc
block number t. It is also possible for the blockchain to fork (or
“re-org”) in which case an apparently-valid proof at block t may
not be valid in the ﬁnal block number t. As is standard with Bit-
coin transactions, the defense against this is to wait until a block
is conﬁrmed with high probability, typically after observing that 6
followup blocks have been published.
Bitcoin public keys which hold funds are interchangeably called
accounts or addresses. We note here that while we designed Pro-
visions with Bitcoin in mind as it is the dominant cryptocurrency
today, it could easily be ported to similar cryptocurrencies which
have the above properties.
A proof of solvency consists of two components. In the ﬁrst, the
proof of liabilities, the exchange proves the total value of bitcoin
it owes to each of its users. In the second, the proof of assets, the
exchange proves the total value of bitcoin it has signing authority
over. If the latter amount is greater than or equal to the former, the
exchange is considered solvent.
2.1 Exchange structure and holdings
Nearly all large Bitcoin exchanges operate by pooling cus-
tomers’ funds into a small number of large accounts. Typically for
security reasons the keys for some of these accounts are kept on of-
ﬂine computers or in hardware security modules, requiring human
action to authorize transactions (commonly called cold storage).
One might ask why an exchange does not simply maintain a sep-
arate Bitcoin address for each customer, enabling direct monitor-
ing by each user of their funds on the public blockchain; a simple
mechanism that eschews the need for a more complicated crypto-
graphic proof of solvency. By itself, this scheme is not secure, as
a malicious exchange might attempt to convince two users with the
same balance that a single address is holding funds for both of them
(a variation of the clash attack [28] discussed later).
This model also has several key practical shortcomings. First, it
prevents simple division of money into hot and cold storage. Cur-
rent exchanges can exist with a limited amount of money in more
vulnerable hot storage because, on aggregate, the number of with-
drawals in a given day is typically only a small amount of total
holdings. This is similar to a large ofﬂine bank which does not
carry enough cash in ATMs to cover all customer accounts, keep-
ing substantial assets in secure (but less accessible) storage.8
Second, pooling assets means that transfers between customers
can be efﬁciently settled by changing each customers’ account bal-
ance without executing a transaction on the Bitcoin blockchain (in-
curring a transaction fee and a wait of around an hour for conﬁrma-
4N. Hajdarbegovic. “Kraken Bitcoin Exchange Passes ‘Proof of
Reserves’ Cryptographic Audit,” CoinDesk, 24 Mar 2014.
5J. Southurst, “OKCoin Reveals BTC Reserves of 104% as China’s
Exchanges Undergo Audits,” CoinDesk, 22 Aug 2014.
6“Kraken Proof-of-Reserves Audit Process,” https://www.
kraken.com/security/audit
7Technically, bitcoins are redeemable by a speciﬁc transaction
script which can encode various spending conditions, though in the
vast majority of cases this is simply a public key signature and we
will discuss Bitcoin as if this is the only method.
8Executing Provisions will require computation using all of an
exchange’s private keys, including those for assets in cold storage.
However, this can be done with human intervention at a predictable
time and does not require network access to the cold storage.
721Figure 1: The Merkle tree from the Maxwell protocol [29] for proof of solvency. When a customer desires to verify their account (e.g. dashed
line node), only two nodes need to be sent to the customer (bold line nodes).
tion). Similarly, two exchanges can aggregate multiple transactions
between pairs of their customers into a single settlement payment
(referred to as netting). Minimizing reliance on the blockchain
(especially for small transfers) is a key beneﬁt of exchanges. By
contrast, maintaining a separate Bitcoin account for each customer
requires “hitting the blockchain” with every transaction.
Finally, although it is not typically advertised, exchanges offer a
signiﬁcant privacy beneﬁt to users as as pooling funds ensures that
it is not easy for outside observers to link deposits and withdrawals
to the same individual [20].
Thus, we consider the pooled assets model likely to persist and
we have designed Provisions to work in this model. If we com-
bine these factors with maintaining the privacy of an exchange’s
addresses—proving that one owns (i.e., knows) a private key with-
out disclosing which—zero knowledge proofs appear inescapable.
2.2 Maxwell’s proof of liabilities
Maxwell proposed a protocol (summarized by Wilcox [29]) that
enables an exchange to prove its total liabilities while allowing
users to verify that their accounts are included in this total. The
exchange constructs a binary Merkle hash tree [21] where each leaf
node contains a customer’s balance, as well as the hash of the bal-
ance concatenated with the customer id and a fresh nonce (i.e., a
hash-based commitment). Each internal node stores the aggregate
balance of its left child (lc) and right child (rc), as well as the hash
of its aggregate balance concatenated with the hash of its left and
right children. The root node stores the aggregate of all customers’
balances, representing the total liabilities, and the exchange broad-
casts the root node. This is illustrated in Figure 1.
When a customer wants to verify that their balance is included in
the total liabilities declared by the exchange, it is sufﬁcient to send
to the customer only part of the hash tree in order to perform the
veriﬁcation. Speciﬁcally, the exchange sends to the customer her
nonce and the sibling node of each node on the unique path from the
customer’s leaf node to the root node. The other nodes on the path,
including the leaf node itself, do not need to be sent to the customer
because they will have sufﬁcient information to reconstruct them.
The customer eventually accepts that their balance is included iff
their path terminates with the same root broadcast by the exchange.
While elegant, this protocol does not hide the value of the ex-
change’s total liabilities which is published in the root node. While
a rough sense of this value may be public knowledge, the exact
value may be sensitive commercial data. Furthermore, regular
proofs will reveal precise changes in the exchange’s holdings.
This protocol also leaks partial information about other cus-
tomers’ balances. For example, if a simple balanced tree is used
then each customer’s proof reveals the exact balance of the sibling
account in the tree (although the account holder remains anony-
mous). More generally, each sibling node revealed in a given users’
path to the root node reveals the total holdings of each customer in
that neighboring subtree. This could be mitigated somewhat by us-
ing an unbalanced tree so it is not immediately clear how many
customers are in any neighboring subtree, but the protocol inher-
ently leaks some information. Provisions removes this problem
entirely, revealing no information about any users’ assets beyond
the fact that the total is less than the exchange’s proven reserves.
2.3 Proof of assets
Once an exchange establishes its total liabilities, it must prove
it owns sufﬁcient bitcoin to match (or exceed) its liabilities. This
proof of assets together with the proof of liabilities forms a proof
of solvency. Maxwell’s proof of assets does not preserve privacy.
Instead, the exchange publicly demonstrates control of a set of ad-
dresses holding at least as much bitcoin as the exchange’s total li-
abilities. This demonstration of control might involve moving a
challenge amount of bitcoin from each account or signing a chal-
lenge message with the private key associated with each address.
Exchanges may be reluctant to do so for privacy and security con-
cerns (revealing their internal division of funds between accounts).
In Provisions, we enable the exchange to prove ownership of an
anonymous subset of addresses pulled from the blockchain. The
total quantity of bitcoin across these addresses can then be deter-
mined, without being revealed, and proved to be equal or greater
than the exchange’s total liabilities.
2.3.1 Control vs. ownership
Any proof of assets, including Provisions, faces the inherent
problem that the ability to use the signing key of an address does
not necessarily imply ownership of it. A malicious exchange may
collude with one or more bitcoin holders who agree to use their ac-
counts to cover the exchange’s liabilities. However, these partners
may have no intention of ever making their holdings available to
the exchange’s customers.
An exchange might try consolidating its holdings into a single
address to demonstrate that either exchange or the colluder is risk-
ing their bitcoin by placing it under the other’s control. However,