single voice call), irrespective of whether the client actively
makes a call. All other links carry trafﬁc at a multiple of u.
The links connecting SPs to mixes within a given zone have
identical rates at any given time; this rate can be changed
simultaneously on all such links. Likewise, the rate on links
connecting mixes within a zone, and the rate on links con-
necting mixes between a given pair of zones, respectively,
is identical at any time and may be changed only simulta-
neously. Mixes periodically report their link utilization to a
local, zone directory and rate adjustments are decided uni-
laterally for intrazone links, or by the two corresponding di-
rectories for interzone links.
Trust and incentive model. We assume that each zone is
bound by its local laws and authorities. In particular, zone
operators can be compelled by local authorities to release the
information available to the mixes in their zone.
Clients and SPs trust the mix they attach to, and thus the
authorities within the mix’s jurisdiction, with their partial
call metadata (source IP address and destination mix, dura-
tion of call). Therefore, clients and SPs should select a mix
operated by a provider of their choice within a zone whose
jurisdiction meets their privacy needs.
A client may select a mix in a location and jurisdiction
different from her own, e.g., when she does not trust the lo-
cal authorities with her partial call metadata. This presumes,
however, that local authorities do not systematically block
network access to such mixes. To circumvent censorship,
Herd could rely on SPs with unpublished IP addresses (like
Tor bridges) and obfuscate client trafﬁc. Applying obfus-
cation mechanisms like Tor’s obfsproxy [11] to Herd is the
subject of future work. A key challenge is that appropriate
cover trafﬁc must sustain a minimum rate of one VoIP call at
all times to provide obfuscation.
Figure 1: Herd’s architecture comprises clients, mixes
located in trust zones, and optionally, SPs (not shown).
Herd employs both hop-by-hop and layered encryption
to hide content, routing information, and circuit IDs.
Mixes can also act as rendezvous enabling clients to re-
ceive incoming VoIP calls with zone anonymity. Option-
ally, a caller and callee can use an additional zone (e.g.,
A and B) to avoid depending on the same jurisdiction.
Moreover, in Herd’s trust model, the anonymity of a caller
or callee depends only on her own choice of a trust zone,
i.e., a provider within a jurisdiction. Callers and callees pick
a trust zone independently and do not depend on the choices
made by their call partner.
3. DESIGN AND IMPLEMENTATION
System model. Herd comprises clients, which originate and
terminate trafﬁc; mixes, which relay trafﬁc; and optional un-
trusted superpeers (SPs), which can originate, terminate, and
relay trafﬁc. We call a client initiating a call caller and
one accepting a call callee. All participants are connected
by links that carry encrypted and padded trafﬁc. A client
connects to at least one mix, either directly (shown in Fig-
ure 1), or via one or more SPs attached to the same mix.
SPs connect to one mix. Links among the mixes form a
fully connected network. Herd mixes are further partitioned
into trust zones. All mixes within a trust zone are operated
by a single provider under a single jurisdiction. Typically,
the mixes of a trust zone are hosted in the same data cen-
ter. (Because a data center can serve a large user popula-
tion, small countries may have a single provider/data center,
while large countries/jurisdictions would be served by multi-
ple providers/data centers.) To bootstrap, Herd needs at least
one zone with one mix. A new zone requires a minimum set
of clients before establishing calls, which can be achieved
by requiring a minimal number of initial subscribers or by
splitting an existing, large zone into several partitions.
3.1 Overview
Herd adopts a hybrid of P2P and infrastructure-based ar-
chitecture for performance and scalability reasons. First,
a modest number of well-provisioned, dedicated mixes are
connected to the core of the Internet around the world, and
642
A client may either connect to an SP or directly to a mix.
We assume there is a business model to cover the cost of op-
erating mixes and possibly to incentivize SP operators. For
instance, mixes may charge their clients a subscription fee,
possibly using a digital currency such as Bitcoin [42]. Re-
call that clients trust their mixes, so the payment transaction
need not be anonymous (which Bitcoin is not), unless the
client wishes to keep her identity hidden from the mix. The
mix may in turn grant the operators of SPs free calls or pay
them a fee, as an incentive to relay calls from clients.
SPs learn the IP addresses of their connected clients; how-
ever, they cannot detect when a client makes a call or with
whom. We assume SPs act rationally, i.e., they perform in
a way that will allow them to remain in good standing as an
SP for their mix. Speciﬁcally, mixes monitor and reject SPs
with insufﬁcient availability or signiﬁcant packet loss/jitter.
Clients connect to Herd continuously (modulo power or
network outages), regardless of call activity. Given the low
bitrate of VoIP relative to typical ﬂat-rate broadband capac-
ity, chafﬁng at a small multiple of that rate seems reason-
able. Further, VoIP users tend to remain available to receive
incoming calls. For example, prior work showed that half of
Skype users are available more than 80% of the time [38].
Threat model. We assume an adversary who seeks to in-
fer the IP addresses of the caller and callee of calls made
via Herd, their time and duration, as well as their content.
The adversary is able to observe the time series of encrypted
trafﬁc on all Herd links as part of a global, passive trafﬁc
analysis attack. Within a portion of the Internet controlled
by the adversary, he can additionally compromise mixes and
network components, change their behavior, and modify the
time series of encrypted trafﬁc as part of a local, active trafﬁc
analysis attack. These assumptions are reasonable because
an active subversion with global reach is harder to achieve
and maintain than a passive one. An active subversion is
easier to detect (and thus counteract by local authorities) and
typically requires a synchronous control loop. We make the
common assumption that the adversaries cannot break the
cryptographic primitives or compromise the keys used by
clients, SPs, or mixes they do not control.
We assume a PKI that provides a root of trust to authenti-
cate legitimate mixes and zone directories. For instance, the
root certiﬁcate can be embedded in the Herd client software,
and a hash of the client software can be published periodi-
cally in several trusted outlets.
We assume that legitimate clients and SPs attach to mixes
in a trust zone that is friendly to their cause. Clients and SPs
can make their choice of a trust zone based on the zone’s
location, jurisdiction, history and operator.
Anonymity property. Under the threat model described
above, Herd ensures zone anonymity for the caller and callee.
That is, assuming a call is known to originate or terminate in
a given zone, the communicating party is equally likely to
be any of the users attached to the zone.
In the case of an inter-zone call (i.e., caller and callee at-
tach to mixes in different zones), zone anonymity is indepen-
dent for caller and callee. That is, even if zone anonymity is
violated for one participant due to a compromised mix, it
continues to hold for the other. However, in case of an intra-
zone call (i.e., caller and callee attach to different mixes in
the same zone), anonymity is lost for both caller and callee
if the zone is compromised. If this is undesirable, users can
attach to mixes in two different zones; in this case, Herd en-
sures that only inter-zone calls are established.
Roadmap. In the rest of this section, we discuss the com-
ponents of Herd’s design. First, layered encryption ensures
bitwise unlinkability and end-to-end conﬁdentiality of VoIP
packets. Second, Herd uses a rendezvous mechanism to es-
tablish low-delay circuits while maintaining anonymity for
both caller and callee. Third, trafﬁc obfuscation is used to
thwart trafﬁc analysis attacks, using appropriate mechanisms
at clients, SPs, and mixes. Jointly, these components ensure
that an adversary can learn only upper bounds on the volume
of active calls between any given pair of zones, the volume
of calls within a zone, and the maximum number of concur-
rently active calls among the clients attached to an SP.
Finally, superpeers can reduce a mix’s client-side band-
width requirements from linear in the number of online
clients to linear in the number of active callers. Herd re-
lies on network coding to hide from the untrusted SPs which
clients are making calls.
3.2 Layered encryption
Herd uses hop-by-hop and layered encryption over a
sender-receiver mutually anonymous circuit as shown in
Figure 1. Mixes maintain a Datagram TLS (DTLS) link to
all other mixes, SPs maintain a DTLS link to the mix they
are attached to, and clients maintain either one such link to
a mix, or a small number of links to SPs. All Herd trafﬁc is
transferred over these links.
As in Tor, mixes, SPs, and clients maintain a long-term
identity key pair l used to sign DTLS certiﬁcates and their
descriptors, and a short-term key pair s used to set up cir-
cuits and negotiate symmetric, ephemeral session keys e.
Descriptors containing public keys l and s of the zone par-
ticipants are published in their directory, where they can be
queried. Mixes and users communicate via DTLS links en-
crypted with ephemeral key e, sealing the trafﬁc with perfect
forward secrecy. Finally, clients build circuits incrementally,
negotiating a symmetric key with each mix on the circuit,
one hop at the time, using s over DTLS links. We refer to
the Herd speciﬁcations for more details [19].
Layered encryption provides bitwise unlinkability, and
hides content and routing information from both individ-
ual mixes and eavesdroppers, while hop-by-hop encryption
hides circuit IDs from the latter and provides perfect forward
secrecy. (Circuit IDs are needed to lookup the key used to
peel off a layer of encryption, so they are transmitted out-
side of layered encryption.) Herd VoIP content is encrypted
end-to-end between the caller and callee using a symmetric
key negotiated over two circuits concatenated at rendezvous
mixes (described below). A complete circuit has ﬁve hops
(up to seven if optional SPs are used), with typically at least
two intra-zone (and thus intra-data center) hops, and for in-
terzone calls, at most three intercontinental hops (at most
one if clients select a zone in their respective continent).
For security, simplicity, and future interoperability Herd
borrows most of its signaling and cryptographic protocol
from Tor. This design decision enables Herd to build upon
years of research and engineering from the Tor community.
Security. Layered and hop-by-hop encryption maintain the
following security invariants: I1: The encrypted content on
successive links of a circuit is uncorrelated. I2: The inte-
rior mixes on a circuit know only the previous and next hop
on the circuit. I3: The caller’s mix knows only the caller
and the next mix on the circuit; the callee’s mix knows only
the callee and the previous mix on the circuit. I4: A circuit
includes two (not necessarily distinct) mixes in each of the
caller and callee’s zone. Given I2, this implies that, from the
perspective of a mix in the caller’s zone, the callee is equally
likely to attach to any of the mixes in the callee’s zone, and
vice versa.
643
3.3 Rendezvous
The Herd rendezvous mechanism connects clients anony-
mously, independent of their trust zones. This mechanism
comprises a per-zone directory server, at least one mix for
each of the caller and callee, and for each such mix, a ran-
dom and not necessarily distinct rendezvous mix in the same
zone. The rendezvous mix is selected and trusted by the
caller (resp. callee) to initiate/accept calls on her behalf.
Each zone directory server stores the rendezvous mixes of
all the clients attached to that zone (client’s public key and
rendezvous mix IP address).
The Herd client software comes with a default list of zone
directories and public keys used to locate and authenticate
zones. Upon joining the system, a client obtains a signed
certiﬁcate from a zone directory that contains a client ID and
the zone’s signature. We assume that users exchange certiﬁ-
cates prior to making calls using an out-of-band mechanism.
We will discuss the join protocol in detail in Section 3.5.
A call is established using the rendezvous mechanism as
follows. First, a hidden callee builds a circuit comprising
a mix and rendezvous mix in her trust zone and uses it to
publish her rendezvous mix in the zone directory. The caller
follows the same procedure to select its mix and rendezvous
mix. To make a call, a caller looks up the callee’s rendezvous
mix in the directory of the zone contained in the callee’s cer-
tiﬁcate and initiates a handshake with the hidden callee. If
the call is accepted, the two clients communicate via the ren-
dezvous mixes, hence hiding the mixes to which they attach
from each other, thus maintaining zone anonymity.
As we discussed in Section 3.1 (anonymity property),
zone anonymity is lost for the caller and callee if they both
attach to the same, compromised zone. If they want to en-
sure that their anonymity does not depend on the same trust
zone, they may use an alternative, pre-established circuit to
a different zone to contact each other as shown in Figure 1.
To do so, a caller whose certiﬁcate bears the same zone as
the callee may chose a different trust zone to establish the
call.
Rendezvous enables clients to receive VoIP calls while re-
taining zone anonymity by interposing a trusted local mix
between the client’s mix and an untrusted zone. This is be-
cause the interposed mix hides the actual entry mix to which
a client is attached (either directly or via an SP). Although
our rendezvous mechanism is similar to Tor’s, Herd is the
ﬁrst system to combine it with trafﬁc obfuscation (as we will
describe below) in order to achieve zone anonymity.
Security. Rendezvous maintains security invariant I5: Any
mix in a client’s zone is equally likely to be the client’s
rendez-vous mix. Thus, knowledge of a client’s rendez-vous
mix does not reveal any information about which mix the
client attaches to.
3.4 Trafﬁc-analysis resistance
Despite bitwise unlinkability, an adversary can observe
and correlate the time series of encrypted packets on differ-
ent links. Changes in call volume, payload rate (e.g., due to
congestion) or manipulation of trafﬁc by an active adversary
644
can cause correlated changes in the time series of encrypted
packets along a ﬂow’s path. To defeat such trafﬁc analysis
the anonymity network must craft the time series of packets
on each (per-hop) link such that the adversary is unable to
infer which clients are communicating. Herd does this by
adding chaff trafﬁc as needed to pad ﬂows to a constant rate.
Herd uses different padding mechanisms on the clients,
SPs and mixes’ links. On the clients’ links, Herd simply
maintains constant chafﬁng at a rate sufﬁcient to carry a
small number (possibly one) VoIP call(s). Chaff is then re-
placed with payload trafﬁc when a call is made. On the links
between SPs and mixes and among mixes, we use a dynamic
chafﬁng strategy for trafﬁc obfuscation, which can take ad-
vantage of temporal and spatial correlation among the pay-
load trafﬁc of groups of clients, in order to resist both short
and long-term trafﬁc analysis with low overhead. We de-
scribe both methods in more detail below.
3.4.1 Trafﬁc obfuscation on client links
Each client sends and receives at a constant rate equivalent
to a small number of voice calls on their SP link(s). To do
so, a constant number of encrypted packets equal to the size
and rate of the VoIP codec’s packets is sent and received per
time unit. Chaff packets, which include a sequence number,
are substituted when no VoIP packets are to be sent. Both
chaff and VoIP packets are encrypted with a symmetric key
established between client and mix when the client joined.
Security. Consider the security properties of clients ex-
changing bidirectional encrypted trafﬁc at a ﬁxed target
rate with their SP. Due to congestion and packet loss, the
achieved rate on a given link may differ from the target.
However, the actual link rate reﬂects only the capacity and
congestion state of the underlying network, and reveals noth-
ing about the payload it carries. Thus, the constant rate traf-
ﬁc is perfectly resistant to passive trafﬁc analysis. Further,
actively delaying or dropping trafﬁc on a link does not leak
useful information to a network observer, because the down-
stream node’s outgoing stream rate will not be affected (it
simply adds more chaff).
3.4.2 Trafﬁc obfuscation on SP links
The links connecting SPs to their mixes carry bi-
directional, encrypted and padded trafﬁc at a rate that is a
multiple of the VoIP base rate. All links between the mixes
of a zone and their SPs carry trafﬁc at the same rate at any
given time, but the rate can change over time to accommo-
date long-term changes in call volume (e.g., based on his-
torical call volume information). Such changes take place at
time scales of hours, e.g., to accommodate diurnal load pat-
terns, but do not reveal individual call activity. Rate changes
on SP links are orchestrated by the zone directory; mixes
periodically report statistics about link utilization to their di-
rectory, which then signals them to ramp up/down the rate
based on a utilization metric (e.g., average link utilization).
Security. The chafﬁng reveals no information about indi-
vidual clients’ call activity. However, the sum of the rates
on the mix-SP links of a zone reveals an upper bound on the
maximal number of active calls originating or terminating
in the zone at any given time. This is a deliberate design
decision that signiﬁcantly reduces the client-side bandwidth
overhead of mixes, at the cost of revealing an upper bound
on the per-zone call volume.
3.4.3 Trafﬁc obfuscation on mix links
The mixes are fully connected by a set of encrypted and
padded links. The links connecting mixes within a given
zone, as well as the links connecting mixes in a given pair of
zones, respectively, carry trafﬁc at the same rate at any given
time. However, the rates within a zone and between any pair
of zones may change over time to accommodate changes in
the aggregate call rate. As above, these rate changes take
place on time scales of hours and do not reveal individual
call activity. Although rate changes on links spanning a sin-
gle zone are orchestrated unilaterally by their directory (as
for SPs), rate changes on links crossing zones require coor-