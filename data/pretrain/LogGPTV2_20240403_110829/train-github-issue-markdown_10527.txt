## Bug Report
  * I would like to work on a fix!
**Current behavior**  
A clear and concise description of the behavior.
  * REPL
**Babel Configuration (babel.config.js, .babelrc, package.json#babel, cli
command, .eslintrc)**
  * Filename: `.babelrc`
    {
      plugins: [
        ["@babel/proposal-class-properties"],
        ["@babel/transform-classes"],
        ["@babel/plugin-syntax-jsx"]
      ]
    }
**Input Code**
    class Hello extends Component {
      world = () => 
    }
**Output Code**
    //...
    var Hello = /*#__PURE__*/function (_Component) {
      "use strict";
      _inherits(Hello, _Component);
      var _super = _createSuper(Hello);
      function Hello() {
        var _this2 = this;
        var _this;
        _classCallCheck(this, Hello);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key ;
        });
        return _this;
      }
      return Hello;
    }(Component);
    //...
**Expected behavior**  
A clear and concise description of what you expected to happen (or code).
    //...
    var Hello = /*#__PURE__*/function (_Component) {
      "use strict";
      _inherits(Hello, _Component);
      var _super = _createSuper(Hello);
      function Hello() {
        var _this;
        _classCallCheck(this, Hello);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key ;
        });
        return _this;
      }
      return Hello;
    }(Component);
    //...
**Environment**
      System:
        OS: macOS 11.0
      Binaries:
        Node: 14.7.0 - /usr/local/bin/node
        Yarn: 1.22.4 - /usr/local/bin/yarn
        npm: 6.14.7 - /usr/local/bin/npm
      npmPackages:
        @babel/core: 7.11.1 => 7.11.1
        @babel/plugin-proposal-class-properties: 7.10.4 => 7.10.4
        @babel/plugin-syntax-jsx: 7.10.4 => 7.10.4
        @babel/plugin-transform-classes: 7.10.4 => 7.10.4
**Possible Solution**
This patch won't be correct, but work for the snippet above:
    --- transformClass.js	2020-08-11 21:49:04.000000000 +0800
    +++ transformClass.patch.js	2020-08-11 21:55:10.000000000 +0800
    @@ -54,6 +54,7 @@
         staticPropBody: [],
         body: [],
         superThises: [],
    +    jsxSuperThises: [],
         pushedConstructor: false,
         pushedInherits: false,
         protoAlias: null,
    @@ -75,6 +76,9 @@
           ThisExpression(path) {
             classState.superThises.push(path);
           },
    +      JSXIdentifier(path) {
    +        if (path.node.name === 'this') classState.jsxSuperThises.push(path);
    +      },
         },
       ]);
    @@ -339,6 +343,15 @@
           );
         }
    +    for (const thisPath of classState.jsxSuperThises) {
    +      const { node, parentPath } = thisPath;
    +      if (parentPath.isJSXMemberExpression({ object: node })) {
    +        const ref = thisRef();
    +        ref.type = "JSXIdentifier";
    +        thisPath.replaceWith(thisRef());
    +      }
    +    }
    +
         const bareSupers = new Set();
         path.traverse(
           traverse.visitors.merge([
**Additional context**  
Add any other context about the problem here. Or a screenshot if applicable