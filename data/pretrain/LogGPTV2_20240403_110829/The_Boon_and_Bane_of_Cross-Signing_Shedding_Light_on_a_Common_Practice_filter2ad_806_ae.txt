### Root Store Policy and Backdating Practices

Root store policies often rely on the information in the "not before" field, such as the deprecation of SHA-1 signatures for new certificates [37]. Mozilla identifies backdating as a problematic practice [67] because it can interfere with future policies (see "not before" rules, Section 5.1.1). For example, the USERTrust ECC Certification Authority root, valid since 2010, was cross-signed by AddTrust External CA Root in 2013 [20] using a "not before" date of 2000. Other cross-signs use more accurate times, such as a 2019 cross-sign by AAA Certificate Services.

We have identified additional cross-signs by AddTrust that appear to be backdated, as their "not before" dates precede the cross-signed root by several years. While we lack clear evidence, there are signs of a recurring backdating behavior by the CA. All presumably backdated cross-signs are issued by AddTrust External CA Root with "not before" dates from 2000 or 2010. Specifically, the cross-signs of COMODO Certification Authority, COMODO ECC Certification Authority, COMODO RSA Certification Authority, and USERTrust RSA Certification Authority list "not before" dates from 2000, while the corresponding roots list dates from 2006, 2008, and 2010. Cross-signs of the Network Solutions Certificate Authority, created in 2006, list dates from 2000 and 2010.

Additionally, StartCom sets the "not before" date to 2006 (corresponding to the original root) when cross-signing StartCom Certification Authority, whereas the cross-signing StartCom Certificate Authority G2 is valid only since 2010. This practice, while not a strict violation of policy, is noteworthy. StartCom has a history of backdating certificates, which contributed to the loss of trust in WoSign and StartCom due to their violation of policies by backdating certificates to circumvent SHA-1 deprecation (see Section 5.1).

### Partially Disabled Comodo Root XS-Certs

Comodo requested the exclusion of some root certificates from root stores but kept their cross-signs valid. Specifically, the root certificates of USERTrust UTN-USERFirst-Hardware and AddTrust Class 1 CA Root were removed from the Firefox and Android root stores in 2017, as they are no longer in use [16]. However, corresponding cross-signs by UTN-USERFirst-Client Authentication and Email, still trusted by Firefox and Android, have not been revoked. The USERTrust UTN-USERFirst-Hardware cross-sign is particularly active, with valid trust paths for 4,244,104 leaf and 276 CA certificates until 2020. While this appears to be desired behavior, it highlights the difficulty in determining whether cross-signs are intentionally or unintentionally kept active.

In contrast, the removal and revocation of USERTrust UTN-DATACorp SGC was more straightforward. It was removed from Firefox and Android root stores in 2015 due to a planned removal of public trust by the owner [13, 14]. After an additional request by the owner, the intermediates were revoked by adding them to Mozillaâ€™s OneCRL [14]. This case demonstrates the complexity of revocations in the presence of cross-signs, as the original removal request did not address the revocation of cross-signs, requiring an explicit additional request.

### Takeaways and Recommendations

**Backdating Certificates:**
Backdating certificates, while tempting to match validity periods, is a problematic practice that obscures the issuance date without providing benefits. Cross-signing adds another layer of complexity, making it difficult to assess the legitimacy of incomplete revocations. To achieve transparency, evaluating cross-signs and requesting information about them should be an integral part of the revocation process.

**Cross-Signing in Practice:**
While cross-signing complicates PKI, it is essential for CAs to adopt more secure cryptography while maintaining compatibility with legacy software. For example, Let's Encrypt and GoDaddy both used cross-signing to establish trust. However, cross-signing introduces new challenges, such as managing cross-signs and assessing their validity after ownership changes. Problematic practices like backdating further complicate the assessment of existing cross-signs.

**Recommendations:**

1. **Limit Validity Periods:**
   - CAs should limit the maximum validity period of cross-signs to reduce the window of opportunity for exploitation. Shorter validity periods, such as 3 months, align with current industry trends and can be managed through increased automation.
   
2. **Transparency in Cross-Sign Motivations:**
   - CAs should encode the motivation for a cross-sign in a new XS extension. This includes bootstrapping, expanding trust, fall-back paths, and supporting multiple algorithms. This transparency will help in assessing the legitimacy of cross-signs.

3. **Ownership Change Reporting:**
   - When the owner of a cross-sign changes, issuers should publicly declare if the cross-sign should remain valid. The new owner should also acknowledge their obligations. This should be a mandatory part of the report on CA ownership change.

4. **Explain Revocation Inconsistencies:**
   - CAs should proactively explain revocation inconsistencies of XS-Certs to enable root store maintainers and researchers to classify these cases correctly.

5. **Easy Access to Cross-Sign Information:**
   - CAs should report all certificates of a XS-Cert to the same CT log(s) to ensure that a single CT log can provide complete information on the cross-signing properties of a certificate.

6. **Use Vendor-Controlled CRLs:**
   - A new standard system for the revocation of certificates, similar to OneCRL or CRLSets, should be created and supported by typical operating systems and SSL/TLS libraries to ensure that revocation information is easily accessible.

By implementing these best practices, the security and privacy of users can be better protected, and the integrity of the PKI ecosystem can be maintained.