JavaDocker官方镜像标签：https://registry.hub.docker.com/_/java/tags/manage/
JavaDocker官方镜像：https://registry.hub.docker.com/_/java/
3.相关资源
CMD[bash]
#定义默认启动命令
#定义环境变量
WORKDIR/data
#定义工作目录
RUN
#安装Java环境
FROM dockerfile/ubuntu
rm-rf/var/lib/apt/lists/*
apt-getinstall-y openjdk-7-jre&amp;&amp;\
apt-getupdate &amp;&amp;
Python
Python技术栈
第13章编程语言153
---
## Page 168
用SSH服务方便地访问Python容器。当然，也可以使用以下Dockerfile来定制镜像：
通过以下命令直接使用官方Python镜像，带参数运行容器：
址可以参见本章的“相关资源”部分。
的Dockerfle的FROM指令中明确Python版本号。官方镜像都有明确的标签列表，具体地
154第二部分实战案例
笔者首先推荐读者基于本书第10章的SSHD镜像进行Python镜像的定制，这样可以使
FROM buildpack-deps
2.定制镜像
如果读者需要使用Python2的话，可用下列命令：
如果读者只需要运行单个Python脚本，那么无需使用Dockerfle构建自定义镜像，而是
第四步，创建容器并运行：
第二步，在读者的Python项目中新建一个Dockerfile：
如果读者对Python的版本有要求，可以在以上命令中加人Tag标签，以便于在下一步
#清理Debian系统已有的Python环境
#系统更新
$sudo
$ sudo docker build -t my-python-app
第三步，通过此Dockerfile，构建自定义的镜像：
之后读者就可以在一个Python容器中运行自己的程序了。
如果读者需要使用Python2的话，可用下列命令：
CMD ["python","./your-daemon-or-script.py"
FROMpython:3-onbuild
$ sudo docker pull python
第一步，下载Docker官方的Python镜像：
FROM python:2-onbuild
dockerrun
-it
--name my-running-script
ddeu/os/xsn/(pmd)s
---
## Page 169
他功能。
因为它仅仅使用简单的核心，使用extension来增加其
Flask使用BSD授权。Flask也称为“microframework”，
框架。基于WerkzeugWSGI工具箱和Jinja2模板引擎。
13.4.2
Flask是一个使用Python编写的轻量级Web应用
Google App Engine兼容
口详细的文件、教学
 Unicode based
100%WSGI1.0兼容
支持 secure cookies（client side sessions）
口使用Jinja2模板引擎
 RESTful request dispatching
口集成单元测试（unit testing）
口内置开发用服务器和调试器（debugger）
笔者在此简述一下Flask的特色：
CMD ["python2"]
RUN pip install virtualenv
RUN curl -SL 'https://bootstrap.pypa.io/get-pip.py' I python2
#安装pip和virtualenv
f1*
VERSION.tar.xz"\
RUN curl -SL"https://www.python.org/ftp/python/SPYTHON_VERSION/Python-$PYTHON
ENV PYTHON_VERSION 2.7.8
ENV LANGC.UTF-8
#设置系统变量
WORKDIR/usr/src/python
RUNmkdir/usr/src/python
Flask
&& make ExTRATEsTOPTs='--exclude test_file2k test_mhlib' test\
make install\
"|tar -xJ --strip-components=1
第13章编程语言155
one drop at a time
web development
---
## Page 170
SSH服务方便的访问Flask容器。当然，读者也可以使用以下Dockerfle来定制镜像：
156第二部分实战案例
#安装Python环境
RUN apt-get update
#系统更新
FROM google/debian:wheezy
2.定制镜像
第三步，创建并运行Flask容器（Flask的App代码作为Docker数据卷）：W
第二步，
init.py:
app.run(host='0.0.0.0',port=5000,debug=True)
from app import app
#!flask/bin/python
run.py:
src/
第一步，
1.使用官方镜像
Flask是目前广受欢迎的PythonWeb技术选型之一。
sudodockerpullverdverm/flask
口可用Extensions增加其他功能
app/
run.py
verdverm/flask
-v/path/to/app/src:/src
下载DockerHub的Flask镜像：
，项目准备工作：构建FlaskApp目录：
templates/
static/
init_
.Py
---
## Page 171
日正式成立基金会。Django 是Python MVC框架中开源组织最完善、社区人气最旺的。
在Django中Python被普遍使用，甚至包括配置文件和数据模型。Django于2008年6月17
Django 注重组件的重用性和“可插拔性”，敏捷开发和DRY法则（Don't Repeat Yourself)。
Reinhardt来命名的。Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。
并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django
初是用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的。
用了MVC的软件设计模式，即模型M、视图V和控制器C。它最
13.4.3Django
Django是一个开放源代码的Web应用框架，
口一组产生RSS和Atom的工具。
口动态站点管理页面。
口一个可扩展的认证系统。
Django包含了很多应用在它的“contrib”包中，这些包括：
口
口一个用于扩展模板引擎的能力的系统。
口一个序列化系统，能够生成或读取采用XML或JSON表示的 Django模型实例。
口内置的分发系统允许应用程序中的组件采用预定义的信号进行相互间的通信。
口一个轻量级的、独立的Web服务器，用于开发和测试。
Django框架的核心包括：
CMD[&quot;runserver&quot;]
ENTRYPoINT [&quot;python&quot;,&quot;/src/run.py&quot;]
口
口
WORKDIR /src
VOLUME ["/src"]
EXPOSE 5000
#安装requirements.txt中的依赖包，此处可至
ADDrequirements.txt/tmp/requirements.txt
RUN easy_install pip
#安装pip
essential python-dev libpq-dev ca-certificates
一个灵活的评论系统。
中间件支持，允许对请求处理的各个阶段进行干涉。
口
一个缓存框架，并有几种缓存方式可供选择。
一个表单序列化及验证系统，用于HTML表单和适于数据库存储的数据之间的转换。
，由Python写成。采
电
1
第13章编程语言157
中证业集城
django
---
## Page 172
Dockerile来定制镜像：
DockerHub镜像即使用此技术栈：
的话，可以放心地选择Django。
板系统。如果创业过程中的中小型项目，选择Python技术栈，又对并发支撑能力要求不苛刻
框架，提供一些方便快速开发的特性，如脚手架，完整的面向对象的ORM，还有方便的模
158第二部分实战案例
#安装uwsgi
#本Dockerfile由Thatcher Peskens贡献，遵循Apache 许可
读者可以自建SSHD镜像后制作自定义的Django镜像。当然，也可以使用以下
run easy_install pip
run echo "deb http://archive.ubuntu.com/ubuntu precise main universe" > /etc/
from ubuntu:precise
2.定制镜像
$ sudo docker run -d webapp
运行：
$ sudo docker build -t webapp
读者也可以利用Dockerfile 进行定制，自行构建：
$ sudo docker pull dockerfiles/django-uwsgi-nginx
测试数据显示：Django，uWSGIandNginx的技术组合拥有优异的性能。我们选用的
1.使用DockerHub镜像
Django是目前广受欢迎的Python Web 技术选型之一。
cun
cun
apt/sources.list
maintainer Dockerfiles
口
口一套支持轻量级标记语言（Textile和Markdown）的模板库。
口防止跨站请求伪造（cross-site request forgery）的工具。
口产生Google站点地图（Google Sitemaps）的工具。
一套协助创建地理信息系统（GIS）的基础框架。
apt-get install
apt-get
apt-get
apt-get
install
update
-y nginx supervisor
-ypythonpython-dev python-setuptools
---
## Page 173
dockerfile/
13.4.4
Django Dockerfile: https://registry.hub.docker.com/u/dockerfiles/django-uwsgi-nginx/
Django官网: https://www.djangoproject.com/
FlaskDockerfile:https://registry.hub.docker.com/u/verdverm/flask/dockerfile/
FlaskDocker 镜像：https://registry.hub.docker.com/u/verdverm/flask/
Flask官网：http://flask.pocoo.org/
PythonDocker官方镜像：https://registry.hub.docker.com/_/python/
PythonDocker官方Dockerfile:https://github.com/docker-library/python/
Python官网：https://www.python.org/
cmd ["supervisord","-n"]
expose 80
run django-admin.py startproject website/home/docker/code/app/
#安装django
run pip install -r/home/docker/code/app/requirements.txt
#运行pip install
run echo "daemon off">>/etc/nginx/nginx.conf
add./home/docker/code/
#添加项目代码
run apt-get install -y sqlite3
#安装nginx
run pip install uwsgi
run 1n -s/home/docker/code/supervisor-app.conf /etc/supervisor/conf.d/
cun
修改配置
RUN
run apt-getupdate
runapt-get
相关资源
ln-s/home/docker/code/nginx-app.conf/etc/nginx/sites-enabled/
x
tinstall -y python-software-properties
第13章编程语言159
达9
189
商
t.a.81
0.81
---
## Page 174
基础定制Perl容器，这样可以方便地通过SSH服务访问Perl容器。
通过以下命令直接使用官方Perl镜像，带参数运行容器：
参见后面的“相关资源”部分。
Dockerfle的FROM指令中明确Perl版本号。官方镜像都有明确的标签列表，具体地址可以
胶水语言。
目前Perl常见于系统管理、文件处理等程序，笔者认为Perl多数情况下属于Web方案中的
像C一样强大，同时像awk、sed等脚本语言一样富有表达性，被称为“Unix系统王牌工具”。
Perl最重要的特性是它内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。Perl
13.5.1
13.5
160第二部分实战案例
Perl是一个高级的动态的解释型脚本语言。Perl的设计借鉴了C、Shell、awk和 sed。
如果读者需要运行Perl的Web项目，则最好先自建内置SSH服务的镜像，然后以此为
如果读者只需要运行单个的Perl脚本，那么无需使用Dockerfile构建自定义镜像，而是
第四步，创建容器并运行：
第三步，通过此Dockerfile，构建自定义的镜像：
第二步，在读者的Perl项目中新建一个Dockerfle：
$sudo docker build-t my-perl-app
WORKDIR/usr/src/myapp
FROMper1:5.20
如果读者对Perl的版本有要求，
$ sudo docker pull perl
第一步，下载Docker官方的Perl镜像：
我们可以使用Docker官方的Perl镜像作为基础，在此之上进行必要的定制。
使用官方镜像
下面，
COPY
Perl
，笔者讲主要介绍Perl5的Docker环境。
Per技术栈
/usr/src/myapp
，可以在以上命令中加人Tag标签，以便于在下一步
MA.CN
---
## Page 175
13.5.3
13.5.2
Perl Docker 镜像：https:/registry.hub.docker.com/_/perl/
Perl6 官网: http://rakudo.org/how-to-get-rakudo/
Perl中国官网：http://www.perlchina.org/
Perl 官网：http://www.perl.org/
RUN cpanm
读者可以使用以下Dockerile来定制镜像：
2.定制镜像
使用Perl容器进行一下操作：
$sudo docker pull rsrchboy/perl-catalyst-latest
使用DockerHub镜像如下所示：
1.使用DockerHub镜像
Catalyst是一个用Perl语言开发的MVC框架。
RUN cpanm
#运行cpan管理器
libxml2-dev
RUNapt-get
FROMrsrchboy/perl-stable:latest
#本dockerfile由ChrisWeyl贡献
scatalyst.plmyApp
cpan>install Catalyst::Devel
$sudo cpan
相关资源
cpanm
cpanm
cpanm
cpanm
cpanm
cpanm
cpanm
cpanm
Catalyst
-q --notest Capture::Tiny
g
-a
g
update &amp;&amp; apt-get install -y libmysqlclient-dev libssl-dev
Task::Catalyst
Task::Plack
Dist::Zilla
Reindeer
DBIx::Class::Schema::Loader
DBIx::ClasS
DBI DBD::mysql
--notest
-installdeps LWP::UserAgent &&rm-rf
LWP::UserAgent&&rm-rf~/.cpanm
8
&&
&&
&&1
&&rm-rf~/.cpanm
-rf~/.cpanm
-rf
~/.cpanm
~/.cpanm
第13章编程语言161
catalyst
WebFm
---
## Page 176
候，Docker会执行 COPY./usr/src/app 以及 RUN bundle install。