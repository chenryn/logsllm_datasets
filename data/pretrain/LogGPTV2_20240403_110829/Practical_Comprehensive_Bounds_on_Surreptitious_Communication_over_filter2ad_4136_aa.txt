title:Practical Comprehensive Bounds on Surreptitious Communication over
DNS
author:Vern Paxson and
Mihai Christodorescu and
Mobin Javed and
Josyula R. Rao and
Reiner Sailer and
Douglas Lee Schales and
Marc Ph. Stoecklin and
Kurt Thomas and
Wietse Z. Venema and
Nicholas Weaver
Practical Comprehensive Bounds 
on Surreptitious Communication Over DNS
Vern Paxson, University of California, Berkeley, and International Computer Science Institute;  
Mihai Christodorescu, Qualcomm Research; Mobin Javed, University of California, Berkeley; 
Josyula Rao, Reiner Sailer, Douglas Lee Schales, and Marc Ph. Stoecklin, IBM Research;  
Kurt Thomas, University of California, Berkeley; Wietse Venema, IBM Research;  
Nicholas Weaver, International Computer Science Institute  
and University of California, San Diego
Open access to the Proceedings of the 22nd USENIX Security Symposium is sponsored by USENIXThis paper is included in the Proceedings of the 22nd USENIX Security Symposium.August 14–16, 2013 • Washington, D.C., USAISBN 978-1-931971-03-4Practical Comprehensive Bounds on Surreptitious
Communication Over DNS
Vern Paxson(cid:31)∗ Mihai Christodorescu† Mobin Javed(cid:31) Josyula Rao‡ Reiner Sailer‡
Douglas Schales‡ Marc Ph. Stoecklin‡ Kurt Thomas(cid:31) Wietse Venema‡ Nicholas Weaver∗§
(cid:31)UC Berkeley
∗ICSI
†Qualcomm Research ‡IBM Research §UC San Diego
Abstract
DNS queries represent one of the most common forms of net-
work trafﬁc, and likely the least blocked by sites. As such, DNS
provides a highly attractive channel for attackers who wish to
communicate surreptitiously across a network perimeter, and
indeed a variety of tunneling toolkits exist [7, 10, 13–15]. We
develop a novel measurement procedure that fundamentally
limits the amount of information that a domain can receive sur-
reptitiously through DNS queries to an upper bound speciﬁed
by a site’s security policy, with the exact setting representing
a tradeoff between the scope of potential leakage versus the
quantity of possible detections that a site’s analysts must inves-
tigate.
Introduction
Rooted in lossless compression, our measurement procedure
is free from false negatives. For example, we address conven-
tional tunnels that embed the payload in the query names, tun-
nels that repeatedly query a ﬁxed alphabet of domain names
or varying query types,
tunnels that embed information in
query timing, and communication that employs combinations
of these. In an analysis of 230 billion lookups from real produc-
tion networks, our procedure detected 59 conﬁrmed tunnels.
For the enterprise datasets with lookups by individual clients,
detecting surreptitious communication that exceeds 4 kB/day
imposes an average analyst burden of 1–2 investigations/week.
1
Some of the most serious security threats that enterprises
face concern the potential use of surreptitious communi-
cation (Figure 1). One such scenario takes the form of
exﬁltration, when an attacker with internal access aims
to transmit documents or other substantive data out of
the enterprise to a remote location [4]. Another scenario
arises in the context of interactive remote access: an at-
tacker who has patiently compromised a local system
subsequently interacts with it over the network in order
to assay the information it holds and employ it as an in-
ternal stepping stone for further probing of the enterprise.
DNS plays a pervasive role in Internet communica-
tion; indeed, the vast majority of any Internet commu-
nication ultimately begins with DNS queries. Even sites
that are highly security-conscious will ﬁnd that they still
INTERNET
INTERNET
DNS server
DNS server
controlled
by attacker
DNS server
N ENTERPRISE
O
I
T
A
R
T
L
I
F
X
E
A
T
A
D
Hijacked system
S ENTERPRISE
S
E
C
C
A
E
T
O
M
E
R
DNS server
Hijacked system
Figure 1: Two examples of surreptitious communication via
DNS tunnels through perimeter ﬁrewalls.
must allow internal clients to issue DNS queries and
receive the replies. Unless sites can restrict their sys-
tems to only intra-enterprise communication, some of
these queries will necessarily reach external systems,
giving attackers the opportunity to piggyback their ac-
tual communication over seemingly benign DNS trafﬁc.
Thus, DNS provides a highly-attractive target for attack-
ers seeking a means of surreptitious communication.
We note that such communication fundamentally can-
not be detected at the level of individual DNS queries.
For example, an attacker could exﬁltrate only one bit
of information per day by having a local system under
their control each day issue a single query for either
www.attacker.com or mail.attacker.com, where the label
used (www or mail) conveys either a 0 bit or a 1 bit.1 It
will prove intractable for a site’s security analysts (or any
detection tool) to tell that such requests reﬂect adversar-
ial activity, absent a great deal of additional information.
In this work we develop a principled means—rooted
in assessments of information-theoretic entropy and free
from false negatives—by which sites can analyze their
1 We assume that the attacker controls the attacker.com DNS zone.
USENIX Association  
1
22nd USENIX Security Symposium  17
DNS activity and detect the presence of surreptitious
communication whose volume exceeds a conﬁgurable
bound. Simpler metrics, such as volume of DNS trafﬁc,
are not useful to distinguish tunnels from normal query
trafﬁc, because large-scale trafﬁc naturally exhibits a
high degree of diversity (§ 5.2). Approaches that focus
on speciﬁc syntactical patterns [29] will miss communi-
cation with different encodings. Our conﬁgurable bound
on the volume of surreptitious communication over DNS
allows sites to trade off analysis burden (detections re-
quiring investigation) versus assurance that such commu-
nication does not exceed a considerably low level.
We formulate this detection problem as having three
main components. The ﬁrst concerns constructing a
sound, fairly tight estimate of the amount of information
potentially encoded in a stream of DNS queries. Here
we need to comprehensively identify all potential infor-
mation vectors, i.e., aspects of DNS queries that can en-
code information. The second regards ensuring that we
can compute such estimates with reasonable efﬁciency
in the face of very high volumes of DNS activity (tens of
millions of lookups per day). Finally, we need to assess
to what degree benign DNS query streams encode sig-
niﬁcant amounts of information, and formulate effective
ways of minimizing the burden that such benign activity
imposes on a site’s security assessment process.
Thus, we conceptualize our overall goal as providing
a site’s security analysts with a high-quality, tractable set
of domains for which the corresponding DNS lookups
potentially reﬂect surreptitious communication. We view
it as acceptable that the analyst then needs to conduct a
manual assessment to determine which of the candidates
actually reﬂects a problem, provided that we keep the set
small and the process of eliminating a benign candidate
does not require much attention.
This work makes the following contributions:
• We introduce a principled means of detecting the
presence of surreptitious communication over DNS,
parameterized by a (conﬁgurable) bound on the
amount of information conveyed.
• Our approach is comprehensive because we root our
estimates of information conveyed in DNS lookups
in lossless compression of entire query streams.
• We perform an in-depth empirical analysis of
mostly-benign DNS trafﬁc on an extensive set
of traces comprising 230 billion queries observed
across a variety of sites. For enterprise datasets
with lookups by individual clients, we ﬁnd that a
bound of 4 kB/day per client and registered domain
name imposes an operationally viable analysis bur-
den. Thus, we argue that our procedure proves prac-
tical for real-world operational use.
After a summary of our information measurement pro-
In § 4 we
cedure, we deﬁne the threat model in § 3.
Bound on information content
Suffix: attacker.com, Client: 10.9.8.7
name
time
type
mincompr(A)
mincompr(D)  
+ mincompr(I)
min
sum
mincompr(x) = min( gzip(x), bzip2(x), ppmd(x) )
A: All Symbols  D: Distinct Symbols 
I: Index of Distinct Symbols
Figure 2: The information measurement procedure, summa-
rized in § 2. Figure 5 shows the full detection procedure.
present the extensive datasets used in our study. We
discuss information vectors potentially present in DNS
queries and ways to estimate their volume in § 5, and
explore implementation issues, including ﬁltering tech-
niques for reducing the resources required, in § 6. We
evaluate the efﬁcacy of our procedure in § 7, present a
real-time detector in § 8, discuss ﬁndings, limitations,
and future work in § 9, and review prior work in § 10.
2 Summary of the information measure-
ment procedure
As explained in § 6.3, we analyze DNS queries per client
and per registered domain name. For example, we aggre-
gate queries with names ending in site1.com, site2.co.uk,
and so on. We also aggregate PTR queries, but ignore
them here for clarity.
We measure the information in query name, time and
record-type sequences separately (§ 5.3). For example,
we transform a sequence of query names A to a sequence
of indices I into a table with distinct names D, and then
compress I and D with gzip. The size of the output then
gives us a measurement of the information in the input
sequence.
The key insight is that we will never under-estimate
the information in a query sequence as long as the trans-
formation and compression are reversible, i.e., we can
recover the original input sequence. Taking advantage
of this insight, we subject each query attribute sequence
to multiple (transformation, compressor) alternatives and
use the minimal result as the tightest (upper) bound.
Figure 2 illustrates our measurement procedure. For
each client and registered domain we compress both the
original and transformed query name sequences with
gzip, bzip2 and ppmd [23], and take the size of the small-
est output. We apply the same procedure to the record-
type sequences and 32-bit inter-query arrival time dis-
tances, and from these compute a combined score.
18  22nd USENIX Security Symposium 
2
USENIX Association
Site
INDLAB
LBL
NERSC
UCB
CHINA
SIE
Features
L,N,Q,T
N,Q
N,Q
N,Q,T
N,Q,T
N
Vantage
point
Notes
I
I
I
E
I/E
A
a
b
c, d
Time
span
1,212 d
2,776 d
1,642 d
45 d
5 d
53 d
Daily statistics: Average (Daily peak)
Clients
10k (16k)
6.8k (11k)
1.3k (3.3k)
2.1k (5.1k)
61k (101k)
123∗ (123∗)
Total lookups
47M (164M)
28M (154M)
9M (59M)
38M (52M)
13.9M (15.7M)
1.45B (1.84B)
Distinct lookups
(2.4M)
310k
(2.2M)
867k
44k
(114k)
3.3M (4.4M)
468k
(670k)
110M (129M)
Table 1: Summary of data sources. The available features are: 0x20-encoding [27] (C), caching lifetime derived from reply
time-to-live (L), query name (N), query type (Q), and timing (T). Sensor vantage points are: aggregated across multiple sites (A),
external to site (E), lookups associated with individual clients as seen at internal name servers (I), a mixture of these last two (I/E).
a The raw UCB dataset includes resolvers that employ 0x20-encoding [27] as well as a single system conducting high-volume DNS
lookups for research purposes. We preprocessed this dataset by removing lookups from the research system (totaling more than
250M) and downcasing lookups from 0x20-resolvers (cf. § 5.3). (Note that the dataset has 3 days with only partial information.)
b This dataset’s ﬁrst day starts at 7AM local time rather than midnight. The other days are complete.
c “Clients” in the SIE dataset instead reﬂect site resolvers, each with potentially thousands of actual clients.
d As discussed later, we omit from our evaluation the PTR reverse lookups in this data, which comprise about 10% of the lookups.
3 Threat Model
Our basic model assumes that the attacker controls both a
local system and a remote name server. The local system
will communicate with the remote name server solely by
issuing lookups for DNS names that the site’s resolver
will ultimately send to the attacker’s name server. The
attacker inspects both the content of these queries (i.e.,
the names and the associated query type, such as TXT or
AAAA) and their arrival timing.
We further assume that the internal system under the
attacker’s control makes standard queries, either because
the site’s ﬁrewalling requires internal systems to use the
site’s own resolvers, or because non-standard queries
made directly to the public Internet could expose the
communication’s anomalous nature.
For the investigation we develop in this work, we focus
(We
on communication outbound from local systems.
brieﬂy discuss inbound communication encoded in DNS