Response splitting allows an attacker to take control of the response body by adding extra CRLFs into headers. 
In HTTP the headers and bodies are separated by 2 CRLF characters, and thus if an attackers input is used in 
a response header, and that input contained 2 CRLFs, then anything after the CRLFs would be interpreted as 
the response body. In code review ensure functionality is sanitizing any information being put into headers.
STRING TO SEARCH
javax.servlet.http.HttpServletResponse.sendRedirect
strcpy
setHeader
212
Redirection
Any time an application is sending a redirect response, ensure that the logic involved cannot be manipulated 
by an attackers input. Especially when input is used to determine where the redirect goes to.
SQL & Database
Searching for Java database related code should help pinpoint classes/methods which are involved in the 
persistence layer of the application being reviewed.
SSL
Looking for code which utilises SSL as a medium for point to point encryption. The following fragments 
should indicate where SSL functionality has been developed.
STRING TO SEARCH
sendRedirect
setStatus
addHeader
etHeader
STRING TO SEARCH
java.sql.Connection.prepareStatement
java.sql.ResultSet.getObject
select
insert
java.sql.Statement.executeQuery
java.sql.Statement.execute
delete
update
java.sql.Connection.prepareCall
createStatement
java.sql.ResultSet.getString
executeQuery
jdbc
java.sql.Statement.executeUpdate
java.sql.Statement.addBatch
execute
executestatement
STRING TO SEARCH
com.sun.net.ssl
SSLContext
SSLSocketFactory
TrustManagerFactory
HttpsURLConnection
KeyManagerFactory
Session Management
The following APIs should be checked in code review when they control session management.
STRING TO SEARCH
getSession
invalidate
getId
Code Crawling
213
Code Crawling
Logging
We may come across some information leakage by examining code below contained in one’s application.
Legacy Interaction
Here we may be vulnerable to command injection attacks or OS injection attacks. Java linking to the native 
OS can cause serious issues and potentially give rise to total server compromise.
STRING TO SEARCH
java.lang.Runtime.exec
java.lang.Runtime.getRuntime
getId
STRING TO SEARCH
java.io.PrintStream.write
log4j
jLo
Lumberjack
JDLabAgent
MonoLog
qflog
just4log
log4Ant
Ajax and JavaScript
Look for Ajax usage, and possible JavaScript issues:
STRING TO SEARCH
document.write
eval
document.cookie
window.location
document.URL
document.URL
Searching for Code in Classic ASP
Input APIs in ASP are commonly used to retrieve the input from the request, therefore code review should ensure 
these requests (and dependent logic) cannot be manipulated by an attacker. Output APIs are used by ASP to write 
the response body that will be sent to the end user, hence code review should check these requests are used in a 
proper manner and no sensitive information can be returned.  Cookies can also be a source of information leakage.
STRING TO SEARCH
Request
Request.QueryString
Request.Form
Request.ServerVariables
Response.Write
Response.BinaryWrite
<%=
.cookies
Query_String
hidden
include
.inc
214
STRING TO SEARCH
err.
Server.GetLastError
On Error Resume Next
On Error GoTo 0
STRING TO SEARCH
location.href
location.replace
method=”GET”
On Error GoTo 0
Error Handling
Ensure errors in an application are handled properly, otherwise an attacker could use error conditions to 
manipulate the application.
Information in URL
These APIs are used to extract information from the URL object in the request. Code review should check that 
the information extracted from the URL is sanitized.
Database
These APIs can be used to interact with a database, which can lead to SQL attacks. Code review can check 
these API calls use sanitized input.
STRING TO SEARCH
commandText
select from
update
insert into
.open
ADODB.
Commandtype
ICommand
delete from where
IRowSet
execute
.execute
Session
These API calls can control session within ASP applications.
STRING TO SEARCH
session.timeout
session.abandon
session.removeall
Code Crawling
215
Code Crawling
DOS Prevention & Logging
The following ASP APIs can help prevent DOS attacks against the application. Leaking information to a log 
can be of use to an attacker, hence the following API call can be checked in code review to ensure no sensitive 
information is being written to logs.
Redirection
Do not allow attacker input to control when and where rejection occurs.
STRING TO SEARCH
server.ScriptTimeout
IsClientConnected
WriteEntry
STRING TO SEARCH
Response.AddHeader
Response.AppendHeader
Response.Redirect
Response.Status
Response.StatusCode
Server.Transfer
Server.Execute
Searching for Code in Javascript and AJAX
Ajax and JavaScript have brought functionality back to the client side, which has brought a number of old security 
issues back to the forefront. The following keywords relate to API calls used to manipulate user state or the control 
the browser. The advent of AJAX and other Web 2.0 paradigms has pushed security concerns back to the client side, 
but not excluding traditional server side security concerns. Look for Ajax usage, and possible JavaScript issues.
STRING TO SEARCH
eval
document.cookie
document.referrer
document.attachEvent
document.open
document.URL
document.URLUnencoded
document.write
document.create
document.execCommand
document.forms[0].action
document.location
document.body
document.body.innerHtml
document.body.innerText
document.close
document.writeln
location.hash
location.href
location.search
window.alert
window.attachEvent
window.createRequest
window.execScript
window.location
window.open
window.navigate
window.setInterval
window.setTimeout
XMLHTTP
216
Searching for Code in C++ and Apache
Commonly when a C++ developer is building a web service they will build a CGI program to be invoked by 
a web server (though this is not efficient) or they will use the Apache httpd framework and write a handler 
or filter to process HTTP requests/responses. To aid these developers, this section deals with generic C/C++ 
functions used when processing HTTP input and output, along with some of the common Apache APIs that 
are used in handlers.
Legacy C/C++ Methods
For any C/C++ code interacting with web requests, code that handles strings and outputs should be checked 
to ensure the logic does not have any flaws.
STRING TO SEARCH
exec
sprint
document.referrer
fprintf
cerr
System
popen
stringstream
fstringstream
Malloc
free
strncpy
Strcat
cout
cin
printf
Stdio
FILE
strcpy
Request Processing
When coding within Apache, the following APIs can be used to obtain data from the HTTP request object.
STRING TO SEARCH
headers_in
ap_read_request
post_read_request
Response Processing
Depending on the type of response to be sent to the client, the following Apache APIs can be used.
STRING TO SEARCH
headers_out
ap_rprintf
ap_send_error_response
ap_send_fd
ap_vprintf
Code Crawling
217
Code Crawling
Logging
Log messages can be implemented using custom loggers included in the module (e.g. log4cxx, etc), by using 
the Apache provided logging API, or by simply writing to standard out or standard error.
STRING TO SEARCH
cout
cerr
ap_open_stderr_log
ap_error_log2stderr
ap_log_error
ap_log_perror
ap_log_rerror
STRING TO SEARCH
ap_unescape_all
ap_unescape_url
ap_unescape_url_keep2f
ap_unescape_urlencoded
ap_escape_path_segment
Cookie Processing
Cookie can be obtained from the list of request headers, or from specialized Apache functions.
STRING TO SEARCH
headers_in
headers_out
headers_out
ap_cookie_write2
ap_cookie_read
ap_cookie_check_string
HTML Encoding
When the team has got a handle for the HTML input or output in the C/C++ handler, the following methods 
can be used to ensure/check HTML encoding.
HTML
218
The icons below represent what other 
versions are available in print for this book 
title.
ALPHA: “Alpha Quality” book content is a 
working draft. Content is very rough and in 
development until the next level of publish-
ing.
BETA: “Beta Quality” book content is the 
next highest level. Content is still in devel-
opment until the next publishing.
RELEASE: “Release Quality” book content 
is the highest level of quality in a book 
title’s lifecycle, and is a final product.
Attribution
You must attribute the work in the manner 
specified by the author or licensor (but 
not in any way that suggests that they 
endorse you or your use of the work).
Share Alike
If you alter, transform, or build upon this 
work, you may distrib- ute the resulting 
work only under the same, similar or a 
compatible license.
To Share - To copy, distribute and trans-
mit the work
To Remix - to adapt the work
YOU ARE FREE:
UNDER THE FOLLOWING CONDITIONS:
The Open Web Application Security Project (OWASP) is a worldwide free and open community focused 
on improving the security of application software. Our mission is to make application se- curity “visible”, 
so that people and organizations can make informed decisions about application security risks. Every 
one is free to participate in OWASP and all of our materials are available under a free and open software 
license.The OWASP Foundation is a 501c3 not-for-profit charitable organi- zation that ensures the ongo-
ing availability and support for our work.
Alpha
Beta
Release