# Episode 5: Challenge 2
## Description
> Get the jump on your enemies in this side scrolling game. https://pzero-adventures-web.h4ck.ctfcompetition.com/
> 
> Hint: Can you score lower than zero?
The sources were attached.
  Click to expand
  ### app.py
  ```python
  import re
from flask import Flask, request
from flask_json import FlaskJSON, json_response
from util import verify, sign as _sign
KEY_ID = 'pzero-adventures'
FLAG = '**REDACTED**'
app = Flask(__name__)
json = FlaskJSON(app)
json.init_app(app)
highscores = []
@app.route("/")
def main():
    return open('index.html').read()
@app.route("/api/highscores")
def get_highscores():
    global highscores
    return json_response(200, data_=[{
        'name': h.get('name'),
        'score': h.get('score')
    } for h in highscores])
@app.route("/api/highscores", methods=["post"])
def post_highscore():
    global highscores
    data = request.get_json()
    try:
        name = data.get('name')
        score = data.get('score')
        signature = bytes.fromhex(data.get('signature', ''))
    except:
        return json_response(400, text="invalid parameters")
    if type(name) != str or len(name) != 3:
        return json_response(400, text="invalid name")
    if type(score) != int or not -2**16  10:
        highscores.pop(10)
    if score 
## Solution
The attached website contained a cute interactive side-scroller game. Once the player died, they got the chance to submit their name to the highscore list.
Submitting a score works as follows:
First, the front-end submits the name and score to a signing API:
```console
┌──(user@kali)-[/media/sf_CTFs/h4ck1ng.google/EP005/Challenge_02]
└─$ curl 'https://pzero-adventures-web.h4ck.ctfcompetition.com/api/sign' -X POST -H 'Content-Type: application/json' --d
ata-raw '{"name":"ABC","score":16}'
{"signature":"4477dca23d6fd861e6517db9a154db55868873da0c29feec20023fe148831b99f19eca86f29bfcdb436de5469aeacc905b8789ecfb470ee0fb8aa91f9a3bec2ffbcecc07c2f2a114c9b101d333bdc23e1a169441173a0ba7f79802cf3349b9458a181afe728657de3066a5699f9530d1f3ae6fb28a129f4c0fbbce5d62c4701337887700948ab67da0db15e55efa6adb066827f77a2079e2c0de72e2b276f3ae5d90ccb9f863cb897205b8c8e8a14568c40a2e3801a601af562074543f9cb6d02f278260b6e870c8c5188b211cafa5bcf1a134cdaefba1a564f3df6cf5f670dd72e675cbd922c67f8d6f34b3f92b18df06e788860d2249f415ba49291aed11be"}
```
Then, it takes the signature and resubmits it to the highscore API:
```console
┌──(user@kali)-[/media/sf_CTFs/h4ck1ng.google/EP005/Challenge_02]
└─$ curl 'https://pzero-adventures-web.h4ck.ctfcompetition.com/api/highscores' -X POST -H 'Content-Type: application/json' --data-raw '{"name":"ABC","score":16,"signature":"4477dca23d6fd861e6517db9a154db55868873da0c29feec20023fe148831b99f19eca86f29bfcdb436de5469aeacc905b8789ecfb470ee0fb8aa91f9a3bec2ffbcecc07c2f2a114c9b101d333bdc23e1a169441173a0ba7f79802cf3349b9458a181afe728657de3066a5699f9530d1f3ae6fb28a129f4c0fbbce5d62c4701337887700948ab67da0db15e55efa6adb066827f77a2079e2c0de72e2b276f3ae5d90ccb9f863cb897205b8c8e8a14568c40a2e3801a601af562074543f9cb6d02f278260b6e870c8c5188b211cafa5bcf1a134cdaefba1a564f3df6cf5f670dd72e675cbd922c67f8d6f34b3f92b18df06e788860d2249f415ba49291aed11be"}'
{"message":"Better luck next time!"}
```
From inspecting the sources we see that it's possible to read the flag if we can submit a negative score:
```python
if score < 0:
    # FIX(mystiz): I heard that some players are so strong that the score is overflown.
    #              I'll send them the flag and hope the players are satisfied for now...
    return {"message": f"You performed so well so that you triggered an integer overflow! This is your flag: {FLAG}"}
```
However the `/api/sign` API won't sign a negative score:
```python
if type(score) != int or score < 0:
    return json_response(400, text="invalid score")
```
Note that the `/api/highscores` API does accept a negative score if the signature is correct:
```python
if type(score) != int or not -2**16 <= score < 2**16:
    return json_response(400, text="invalid score")