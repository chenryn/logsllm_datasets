模糊测试是将自动或半自动生成的随机数据输入到一个程序中，并监视程序异常，如崩溃，断言（assertion）失败，以发现可能的程序错误，比如内存泄
漏等。跟SAST、DAST、IAST等不同的是，AST是基于已知经验发现安全问题，模糊测试捕捉的是未知的安全问题。
10
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
CHAPTER THREE
11
3.2.3.5  Release 发布阶段
集成测试是在单元测试的基础上，将所有模块按照设计要求（如根据结构图）组装成为子系统或系统，进行集成测试。
其中混沌工程和集成测试都是软件及测试工程中一些专用的动作，这里映射到安全动作的话更多是通过这些工程方法实现一些安全测试的目的。
同时在预发布阶段，除了以上三种动作，其实类似主机安全测试、容器镜像检查等都可以是在预发布执行的安全动作。在实际执行和落地过程，通常也
会有一些安全动作比较难以清晰的划分是在验证或者预发布阶段进行，两个阶段在一些特殊场景下可能会出现互相融合的情况。
针对发布阶段，在DevSecOps的流程中主要动作是软件签名，与预防阶段结合来看，主要是软件防篡改。
3.2.3.6  Prevent 预防阶段
预防阶段在过去版本的DevSecOps模型中也被叫为配置（Conﬁgure）阶段，在最新的模型中被调整为预防（Prevent），从调整也可以看得出，该阶段理
论和实践性还有待进一步发展和细化。
该阶段主要包含有签名验证、完整性检查和纵深防御。
其中签名验证是呼应发布阶段的软件签名，以及进行完整性检查，两者都是保障软件的一致性，避免传输等过程软件被篡改、替换等情况。
而纵深防御（Defence-in-Depth, 
DiD）其核心思想简单来说就是层层防御。采用分层的机制，通过层层的安全防护和监控手段而非指望单一的安全手
段来建立安全防御体系，纵深防御的目标是确保每层都知道如何在可疑的攻击事件中采取行动，限制恶意或意外破坏的机会，并最大限度地提高快速
识别任何安全漏洞的机会。
3.2.3.7  Detect 检测阶段
从预防阶段，就已经从开发切换到运维阶段，而检测阶段则更符合传统安全中相关的安全监控动作，该阶段主要包含有RASP、UEBA、网络流量监控、
渗透测试几个安全动作。
RASP(Runtime Application Self-Protection，应用运行时自我保护)，Gartner在2014年引入RASP这个概念。RSAP将自身注入到应用程序中，与应用程
序融为一体，实时监测、阻断攻击，使程序自身拥有自保护的能力。RASP的注入方式类似于某些IAST，但其更强调的是安全防护和阻断能力，国内比较
出名的有百度的OpenRASP。
UEBA（User and Entity Behavior Analytics，用户行为分析）其也是Gartner提出并的一个安全名称，说白了就是通过行为分析来识别恶意行为，一般在
讲述这个概念的时候会提及用户画像、机器学习等自动化学习、分析和预测能力。
网络流量监控其实是类似于UEBA的一个东西，其核心是通过对流量进行监控分析，识别其中恶意的流程，即一些攻击行为等。
而渗透测试通常就是指通过人工等方式进行软件或者系统的测试仪发现攻击者可以利用的攻击途径或者安全问题。引申的话其实还涉及到红蓝对
抗，在渗透测试的基础上更强调攻击方与防御方的对抗过程，以此验证整体安全防御体系及相应机制等。
其实除了以上4个安全动作，在运维阶段可以进行的安全检测或者监控远不止如此，过去在安全落地过程通常通过相关安全监控来进行补偿性的安全
问题发现，一般就是位于该阶段，如高危端口开放检测、系统漏洞扫描等。
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
3.2.3.8  Respond 响应阶段
而渗透测试通常就是指通过人工等方式进行软件或者系统的测试仪发现攻击者可以利用的攻击途径或者安全问题。引申的话其实还涉及到红蓝对
抗，在渗透测试的基础上更强调攻击方与防御方的对抗过程，以此验证整体安全防御体系及相应机制等。
其实除了以上4个安全动作，在运维阶段可以进行的安全检测或者监控远不止如此，过去在安全落地过程通常通过相关安全监控来进行补偿性的安全
问题发现，一般就是位于该阶段，如高危端口开放检测、系统漏洞扫描等。
在DevSecOps的响应阶段，安全动作主要包含有安全编排、基于RASP/WAF的防护、以及混淆。
基于RASP/WAF安全防护是指通过WAF或RASP的方式，针对 Web 攻击进行拦截阻断， 以实现避免由于Web 攻击导致的拖库等后果。
而混淆主要是指代码混淆，更多是针对移动APP的混淆操作，避免APP反编译等。
安全编排一般是指安全编码自动化和响应(SOAR)，也是Gartner在2017年提出的概念，它是安全编排与自动化（SOA，Security 
Orchestration 
and 
Automation）、安全事件响应平台（SIRP，Security Incident Response Platform）和威胁情报平台（TIP，Threat Intelligence Platform）三种技术/工具的
融合，目的是快速准确的响应和预测安全事件。
3.2.3.9  Predict 预测阶段
3.2.3.10  Adapt 适应阶段
预测阶段主要涉及漏洞相关性分析与威胁情报（开发消耗（Dev Consumable）是新版本的 DevSecOps 工具链中新引入的点，概念与含义还不够
清晰）。
漏洞相关性分析（Application Vulnerability Correlation，AVC）也是 Gartner 提的一个概念，是一种应用程序安全性工作流和流程管理工具，旨
在通过将来自各种安全测试发现的不同数据源的漏洞进行统一管理和自动关联，从而简化漏洞的修复。通俗的解释，由于存在不同类型的应用安
全测试工具，如上文的 SAST、DAST、IAST 等，那么不同工具的使用会产生不同标准和格式的漏洞结果，会存在重复扫出同一个漏洞等情况，漏
洞相关性分析通过自动分析和关联合并漏洞，这样开发人员就可以更便捷和快速的修复安全问题，提升安全效率。
威胁情报（Threat Intelligence，TI），根据 Gartner 对威胁情报的定义，威胁情报是某种基于证据的知识，包括上下文、机制、标示、含义和能够
执行的建议，这些知识与资产所面临已有的或酝酿中的威胁或危害相关，可用于资产相关主体对威胁或危害的响应或处理决策提供信息支持。业
内大多数所说的威胁情报可以认为是狭义的威胁情报，其主要内容为用于识别和检测威胁的失陷标识，如文件 HASH，IP，域名，程序运行路径，
注册表项等，以及相关的归属标签。威胁情报旨在为面临威胁的资产主体 ( 通常为资产所属企业或机构 ) 提供全面的、准确的、与其相关的、并且
能够执行和决策的知识和信息。其中 IOC（Indicators of Compromise）叫做入侵威胁指标，是威胁情报的关键信息，通常是如恶意文件指纹、进
程信息、恶意域名、C&C 服务器 IP 等。
由于威胁情报可能有不同的来源，那么意味着其有不同的结构和标准，为了统一威胁情报表达和交换标准，方便进行不同来源威胁情报的使用，
就诞生了对应的威胁情报标准，其中结构化威胁信息表达式（StructuredThreatInformationeXpression，STIX）和指标信息的可信自动化交换
（TrustedAutomatedeXchangeofIndicatorInformation，TAXII）就是其中的核心的两个标准。前者提供了基于标准 XML 语法描述威胁情报的细节
和威胁内容的方法，后者则定义了威胁情报的交换协议。所以通常使用 STIX 来描述情报，而使用 TAXII 来传输交换情报。
适应阶段主要强调了安全技术债务、修改应急响应方案、安全防御方案等几个点。其实这个阶段也可以称作优化阶段，主要是基于DevSecOps实施的
整个流程的情况，进行持续的适配改进和项目调整优化，对应到过去安全动作，可以理解为持续运营反馈调整的过程，包含对相关安全问题的持续跟
踪、闭环，对DevSecOps过程中相关安全动作如策略的调整等。
在此，我们分别国内某知名金融机构和国内在线旅游行业龙头企业携程的企业DevSecOps落地为例，串联文化、流程及技术三要素，给出具有行业及
企业特色的实践参考。
12
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
4
CHAPTER
FOUR
第四章
某金融机构
DevSecOps 实践 
FreeBuf 咨询荣誉出品 
高层支持：借助监管要求、外部咨询、安全案例等形式，强化应用系统生命周期安全管理的必要性，争取高层的认同与支持，获得更多的人力及预算等
资源。
软件安全方法论：确立了自有软件安全开发生命周期管理框架，规定在软件安全开发的不同阶段需要开展的安全活动。
安全活动干系人：明确项目安全建设过程中涉及的干系人的主要活动、职责和义务，让研发及运维人员意识到安全是整个IT团队每个人的责任，需要
贯穿从开发到运营整个软件生命周期的每一个环节。
安全培训：开展了一系列线上线下信息安全技能培训，提升IT人员安全专业技能。并且基于不同的角色，定制了不同的培训课程。
安全积极分子：在内部信息安全门户建立了漏洞修复知识库，鼓励安全积极分子将日常漏洞修复过程分享出来，共同维护该漏洞修复知识库。
以史为鉴：通过收集和总结历史上发生的真实漏洞案例，形成“漏洞-以史为鉴”，用实际发生的安全案例对研发及运维人员进行安全宣贯。
该金融机构安全部门下设应用安全、数据安全、安全技术攻防、安全事件响应相关职能团队，覆盖应用安全、GRC(治理、风险和合规)、数据安全、业务安
全、安全运营、安全攻防及安全响应等分支。
其中，应用安全团队负责DevSecOps的研究与落地，应用安全职能专设安全顾问“ISO”的角色，扎口管理项目安全评估与咨询，负责项目安全建设的全
流程跟踪。
此外，为了解决安全方向较多而安全人力不足的问题，机构跨团队成立了六大虚拟组织“大运营体系”，采用融合SCRUM敏捷方法的安全大运营模式，
提升安全人力协作和运营效能。
2017年开始，该机构已全面向敏捷及DevOps转型，DevOps平台也在同步自研中，目前已经具备较完善的功能，大量的项目在逐步迁移到DevOps平
台。作为国内较早实施DevSecOps实践的金融企业，具备丰富的安全管理及建设经验。
4.1 安全背景简介
图 某金融机构 DevOps 数字化转型
4.2 企业安全文化建设
14
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
图 研发运营一体化过程中安全活动
4.3 企业安全流程建设
安全团队和质量团队合作，对应用系统进行分类分级，针对不同的系统分类分级，定义不同的安全策略，将安全活动内嵌到项目流程中。包括安全调
查问卷、轻量级威胁建模、源代码安全扫描、开源组件安全扫描、黑盒安全测试、内外部渗透测试、生产环境部署验证、剩余风险评级与接受等。
4.3.1  安全策略
在DevOps研发运营一体化过程中进行的安全活动如下图，选取一些主要活动进行说明。
4.3.2  安全活动及工具链应用
4.3.2.1 轻量级威胁建模
安全团队对威胁建模过程进行了优化，将安全需求分析和架构设计过程结合，设计了轻量级威胁建模，主要包括攻击面分析和安全威胁库。
>Step 1-问卷调研：调研问卷主要包括系统架构、使用场景、重要数据、部署方式 4部分。其中系统架构关注统架构图、技术实现方案等，使用场景关注
用户场景、用户群体、角色、访问方式等，数据关注是否有敏感数据，而部署关注部署架构及物理资产。
>Step 2-攻击面分析：采用简化的数据流图，关注系统与外部系统的边界。
>Step 3-威胁识别：将识别出的攻击面，基于业务场景与威胁库进行匹配，识别出系统面临的威胁点。
>Step 4-安全设计方案：根据威胁分析结果，匹配安全需求标准库，输出进行威胁缓释需要实施的安全需求基线，制定最终的安全设计方案。
CHAPTER FOUR
15
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
当前机构的轻量级威胁建模仍然处于手工阶段，为了提供效率，安全团队已经在SDL安全开发全流程赋能平台中，进行自动化轻量级威胁建模功能
开发。
图 SonarQube 集成 Find Security Bugs 插件