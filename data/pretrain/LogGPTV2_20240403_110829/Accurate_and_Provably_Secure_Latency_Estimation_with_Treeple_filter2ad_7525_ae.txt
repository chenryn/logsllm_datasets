not necessary to label the individual hops in a coordinate’s
path with globally unique names: as long as it is possible
to determine the position along the path at which two coor-
dinates diverge, the distance can be computed. By examin-
ing the distribution on node degrees in the trees within our
trusted vantage points, we found that on average each next
hop identiﬁer can be encoded with only 2 bits. Similarly,
it is not necessary to encode the full RTT between the van-
tage point and each hop; using difference encoding on the
RTTs, we found that on average each hop’s RTT can be en-
coded with 6 bits. These techniques can reduce the size of
a coordinate to 260 bytes.
Although this reduced coordinate size is still substan-
tially larger than that of Vivaldi, Treeple requires only one
single interaction to compute a peer’s coordinate, which can
then be used for weeks. On the other hand, Vivaldi re-
quires the constant exchange of coordinates. Thus, over any
reasonable period of time, Treeple’s bandwidth overhead is
smaller than that of Vivaldi.
It can be argued that the cost of the vantage points to
perform traceroutes to other nodes on the Internet is very
high. However, the vantage points only need to performed
this measurement once every few weeks, as we showed in
Section 4.5. We also note that iPlane is performing these
measurements on a daily basis on the PlanetLab nodes.
4.7 Summary
On the large, real-world iPlane dataset, Treeple performs
essentially as well as the Vivaldi network coordinate sys-
tem. The median relative error when using 20 trusted nodes
(note that GNP, a centralized network coordinate system,
uses 20 trusted landmarks) is 0.26 for our system and 0.25
for Vivaldi. Thus, our system’s latency estimation performs
roughly as well as that of previous network coordinate sys-
tem, while being the ﬁrst system to provide provable se-
curity, meeting our goal of simultaneously providing secu-
rity and accuracy. As expected, using more vantage points
improves accuracy, at the cost of relying on more trusted
nodes. The communication and processing overheads for
Treeple are also relatively small. Finally, Treeple positions
can be used to accurately predict network distances over
long periods of time, including the full 21-day period of
data used in our evaluation.
5. Other Related Work
We note that while there have been other systems pub-
lished [9, 34, 4, 28] that do not use network coordinates
and ﬁnd close nodes, none of these systems can estimate
the distance between arbitrary nodes. Several other projects
have produced services that allow one peer to estimate its
latency to another.
IDMaps [9] was one of the ﬁrst sys-
tems to estimate the network latency between two hosts. In
IDMaps, hosts perform measurements to the central nodes
called tracers, and the hosts can then approximate their la-
tency to other hosts without having to contact those hosts
directly. IDMaps cannot be used by a third party to predict
the latency between pairs of hosts.
Sequoia [27] approximately represents Internet latencies
and bandwidth as a tree metric. The authors showed that,
for a small data set, using this metric allows accurate pre-
diction of latency as well as bandwidth, with latency pre-
diction comparable to Vivaldi. However, Sequioa relies on
a complete view of the reconstructed tree metric; every node
must know the complete tree, and in order to be assigned a
position in the tree a node must participate in the protocol.
iPlane [21] and iPlane Nano [22] attempt to map the
whole Internet to produce an atlas of link-to-link latency,
bandwidth, and loss rate. In iPlane, a central database server
uses the atlas to respond to path queries from Peers.
In
iPlane Nano, the atlas is compressed to about 7MB and dis-
tributed to end hosts; end hosts then download about 1MB
of deltas produced each day. Hosts use this atlas to compute
predicted latencies using shortest-path algorithms. Thus the
computational and bandwidth overhead associated with us-
ing iPlane Nano are quite high.
We note that all of these systems essentially construct a
“global map” of the peer topology by relying on the peers to
report pairwise latency and traceroute measurements. None
of these systems considers security in any way; essentially
the measurements taken by all peers when constructing the
maps are trusted.
In contrast, Treeple takes security as a
starting point and produces “local” positions for each peer,
while trusting only a small set of end-hosts.
6. Discussion & Conclusion
Traceroute Complications
It is well-known that several issues such as multiple inter-
faces, load balancers, multi-protocol label switching, and
non-responding hosts can interfere with the accuracy of
paths returned by traceroute; in our evaluation, we did not
use any special techniques to deal with these issues. We
note that none of these issues presents a security challenge
for Treeple, but that resolving them could well improve the
accuracy of Treeple: for example, consistently resolving
aliases would place the common ancestor later in a path and
thus decrease the estimated distance between two nodes.
Thus the performance evaluation in Section 4 can be seen as
conservative in this sense. We naturally expect such mea-
sures to improve the accuracy of Treeple.
Vantage Point Migration
Although we treat vantage points as ﬁxed in our theoreti-
cal treatment of Treeple, we point out that in practice, the
set of vantage points {T1, . . . , Tk} is amenable to standard
mechanisms used to manage migration of trusted servers
for services such as DNS, DHTs, and Tor: it is straightfor-
ward to implement the Distance function so that it is robust
to additional or missing vantage points – identify vantage
points by veriﬁcation key, and compute distances using only
the positions computed by vantage points in common – and
executables can eventually phase out support for discarded
vantage points when sufﬁciently old versions are not sup-
ported, while peers running older executables will continue
to function with slightly reduced accuracy.
threat model. Moreover, because Treeple positions are ex-
tremely stable, they can be maintained with very low over-
head compared to traditional network coordinate schemes.
Acknowledgments
We thank our Shepherd, Suman Banerjee, for his input on
improvements to this paper. We also thank Yongdae Kim,
Zhi-Li Zhang, Roger Dingledine, and Brighten Godfrey for
helpful comments and discussions about Treeple. This work
was supported by the National Science Foundation under
grant CNS-0716025.
Router Compromise
References
As we have discussed in section 2, under the current Inter-
net architecture compromise of even a single BGP router is
sufﬁcient to render meaningless the measurements or es-
timates of any latency estimation scheme. Thus: on the
current Internet, network coordinate systems (and schemes
based on them [1, 12, 16, 20, 4, 2, 6]) are insecure against
compromised routers. However, since router compromises
are possible in practice, it would be desirable to consider
whether, in some future network that secures path discov-
ery and does not use policy-based routing, it is possible to
reason about the security Treeple (or any other latency esti-
mation scheme) can offer against router compromise.
To be concrete, we imagine a network (not the current
Internet) in which a corrupted router can only intercept or
delay trafﬁc between a small fraction of the pairs of peers.
In this case, it might be possible to use the trusted vantage
points in Treeple to build a simple reputation system for
router edges: if a particular edge exhibits variable behavior,
as measured by a vantage point, then paths containing that
edge could be marked as untrustworthy. As long as some
paths remain, the inﬂuence of these adversarial edges would
be limited. Similarly, individual nodes can maintain a “lo-
cal” reputation which calculates whether a given path con-
sistently leads to poor performance and if so, drop the path
from their coordinates (replacing it with ⊥). Of course, the
exact nature of the security guarantees these mechanisms
can provide would clearly depend on the nature of the rout-
ing protocol in this hypothesized future network architec-
ture.
Conclusion
We propose Treeple, a provably secure network distance es-
timation service, where the estimated network distance dif-
fers from the real network distance by 26%. The accuracy
of the system is comparable to using a network coordinate
system, where the median relative error was 25%. In addi-
tion, Treeple is provably secure, whereas all previously pro-
posed schemes are vulnerable to attacks within the Treeple
[1] I. Abraham and D. Malkhi. Compact routing on euclidian
metrics. In PODC ’04: Proceedings of the twenty-third an-
nual ACM symposium on Principles of distributed comput-
ing, pages 141–149, New York, NY, USA, 2004. ACM.
[2] R. Bazzi and G. Konjevod. On the Establishment of Distinct
Identities in Overlay Networks. In ACM PODC, 2005.
[3] E. Chan-Tin, D. Feldman, Y. Kim, and N. Hopper. The Frog-
Boiling Attack: Limitations of Anomaly Detection for Se-
cure Network Coordinates. SecureComm, 2009.
[4] D. Choffnes and F. Bustamante. Taming the Torrent: A prac-
tical approach to reducing cross-ISP trafﬁc in P2P systems.
ACM Special Interest Group on Data Communication (SIG-
COMM), 2008.
[5] M. Costa, M. Castro, A. Rowstron, and P. Key. PIC: Practi-
cal Internet Coordinates for Distance Estimation. Proceed-
ings of the IEEE International Conference on Distributed
Computing Systems (ICDCS), 2004.
[6] J. Cowling, D. Ports, B. Liskov, R. A. Popa, and A. Gaik-
wad. Census: Location-Aware Membership Management
for Large-Scale Distributed Systems. In the proceedings of
USENIX Annual Technical Conference, 2009.
[7] F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: A
Decentralized Network Coordinate System. In Proceedings
of ACM SIGCOMM, 2004.
[8] J. R. Douceur. The sybil attack. In Proc. of the International
Workshop on Peer-to-Peer Systems (IPTPS), 2002.
[9] P. Francis, S. Jamin, C. Jin, Y. Jin, D. Raz, Y. Shavitt, and
IDMaps: A Global Internet Host Distance Es-
IEEE/ACM Trans. Netw., 9(5):525–540,
L. Zhang.
timation Service.
2001.
[10] GNP Simulator.
http://www.cs.rice.edu/
˜gw4314/ncs-configurable.tar.gz.
[11] S. Goldberg, M. Schapira, P. Hummon, and J. Rexford. How
secure are secure interdomain routing protocols?
In SIG-
COMM’10: Proceedings of the ACM SIGCOMM 2010 Con-
ference on Data Communication. ACM, 2010. to appear.
[12] R. Gummadi, R. Govindan, N. Kothari, B. Karp, Y. J. Kim,
, and S. Shenker. Reduced state routing in the internet. Hot-
Nets, 2004.
[13] M. Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Vir-
tual Networks under Attack: Disrupting Internet Coordinate
Systems. ACM/e-NEXT International Conference on Future
Networking Technologies (CoNext), 2006.
Workshop on Dependable and Adaptable Networks and Ser-
vice, 2007.
[30] Y. Shavitt and T. Tankel. Big-Bang Simulation for embed-
IEEE INFO-
ding network distances in Euclidean space.
COM, 2003.
[31] M. Sherr, M. Blaze, and B. T. Loo. Veracity: Practical Se-
cure Network Coordinates via Vote-based Agreements. In
USENIX Annual Technical Conference, 2009.
[32] Vuze. http://azureus.sourceforge.net.
[33] G. Wang and T. S. E. Ng. Distributed Algorithms for Stable
and Secure Network Coordinates. ACM/USENIX Internet
Measurement Conference (IMC), 2008.
[34] B. Wong, A. Slivkins, and E. G. Sirer. Meridian: A
Lightweight Network Location Service without Virtual Co-
ordinates. ACM Special Interest Group on Data Communi-
cation (SIGCOMM), 2005.
[35] D. Zage and C. Nita-Rotaru. On the accuracy of decentral-
ized virtual coordinate systems in adversarial networks. In
Proceedings of the 14th ACM conference on Computer and
communications security (CCS), 2007.
[36] H. Zheng, E. K. Lua, M. Pias, and T. Grifﬁn. Internet Rout-
ing Policies and Round-trip Times. Passive and Active Mea-
surement Workshop, 2005.
[14] M. A. Kaafar, L. Mathy, C. Barakat, K. Salamatian,
T. Turletti, and W. Dabbous. Securing Internet Coordi-
nate Embedding Systems. Proceedings of ACM SIGCOMM,
2007.
[15] M. A. Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Real
attacks on virtual networks: Vivaldi out of tune. Proceedings
of the SIGCOMM workshop on Large-scale Attack Defense,
2006.
[16] J. Ledlie, M. Mitzenmacher, and M. Seltzer. Wired geomet-
ric routing. International Workshop on Peer-to-Peer Systems
(IPTPS), 2007.
[17] J. Ledlie, P. Pietzuch, and M. Seltzer. Stable and accurate
network coordinates. Proceedings of the IEEE International
Conference on Distributed Computing Systems (ICDCS),
2006.
[18] J. Ledlie, P. Pietzuch, and M. Seltzer. Network coordinates
in the wild. Proceedings of the USENIX Symposium on Net-
worked Systems Design and Implementation (NSDI), 2007.
[19] C. Lumezanu, R. Baden, N. Spring, and B. Bhattacharjee.
Triangle inequality variations in the internet. In IMC ’09:
Proceedings of the 9th ACM SIGCOMM conference on In-
ternet measurement conference, pages 177–183, New York,
NY, USA, 2009. ACM.
[20] C. Lumezanu, D. Levin, and N. Spring. Peer wise discovery
and negotiation of faster path. In Proceedings of HotNets-VI,
2007.
[21] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. An-
derson, A. Krishnamurthy, and A. Venkataramani.
iPlane:
An Information Plane for Distributed Services. In Proceed-
ings of the USENIX Symposium on Operating Systems De-
sign and Implementation (OSDI), 2006.
[22] H. V. Madhyastha, E. Katz-Bassett, T. Anderson, A. Krish-
namurthy, and A. Venkataramani. iplane nano: path predic-
tion for peer-to-peer applications. In NSDI’09: Proceedings
of the 6th USENIX symposium on Networked systems design
and implementation, pages 137–152, Berkeley, CA, USA,
2009. USENIX Association.
[23] T. S. E. Ng and H. Zhang. Predicting Internet Network Dis-
tance with Coordinates-Based Approaches. Proceedings of
IEEE INFOCOM, 2002.
[24] T. S. E. Ng and H. Zhang. A network positioning system for
the internet. Proceedings of the USENIX annual technical
conference, 2004.
[25] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti.
Interna-
Lighthouses for Scalable Distributed Location.
tional Workshop on Peer-to-Peer Systems (IPTPS), 2003.
[26] PlanetLab. http://planet-lab.org.
[27] V. Ramasubramanian, D. Malkhi, F. Kuhn, M. Balakrishnan,
A. Gupta, and A. Akella. On the treeness of internet latency
and bandwidth.
In SIGMETRICS ’09: Proceedings of the
eleventh international joint conference on Measurement and
modeling of computer systems, pages 61–72, New York, NY,
USA, 2009. ACM.
[28] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker.
Topologically-Aware Overlay Construction and Server Se-
lection. In Proceedings of Infocom, 2002.
[29] D. Saucez, B. Donnet, and O. Bonaventure. A Reputation-
Based Approach for Securing Vivaldi Embedding System.
In EUNICE Open European Summer School and IFIP TC6.6