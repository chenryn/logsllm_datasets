title:Spaced Repetition and Mnemonics Enable Recall of Multiple Strong Passwords
author:Jeremiah Blocki and
Saranga Komanduri and
Lorrie Faith Cranor and
Anupam Datta
Spaced Repetition and Mnemonics Enable Recall of
Multiple Strong Passwords
Jeremiah Blocki
Saranga Komanduri
Lorrie Cranor
Anupam Datta
Carnegie Mellon University
Email: PI:EMAIL
Carnegie Mellon University
Email: PI:EMAIL
Carnegie Mellon University
Email: PI:EMAIL
Carnegie Mellon University
Email: PI:EMAIL
Abstract—We report on a user study that provides evidence
that spaced repetition and a speciﬁc mnemonic technique enable
users to successfully recall multiple strong passwords over time.
Remote research participants were asked to memorize 4 Person-
Action-Object (PAO) stories where they chose a famous person
from a drop-down list and were given machine-generated random
action-object pairs. Users were also shown a photo of a scene and
asked to imagine the PAO story taking place in the scene (e.g.,
Bill Gates—swallowing—bike on a beach). Subsequently, they
were asked to recall the action-object pairs when prompted with
the associated scene-person pairs following a spaced repetition
schedule over a period of 127+ days. While we evaluated several
spaced repetition schedules, the best results were obtained when
users initially returned after 12 hours and then in 1.5× increasing
intervals: 77% of the participants successfully recalled all 4
stories in 10 tests over a period of ≈ 158 days. Much of the
forgetting happened in the ﬁrst test period (12 hours): 89%
of participants who remembered their stories during the ﬁrst
test period successfully remembered them in every subsequent
round. These ﬁndings, coupled with recent results on naturally
rehearsing password schemes, suggest that 4 PAO stories could
be used to create usable and strong passwords for 14 sensitive
accounts following this spaced repetition schedule, possibly with
a few extra upfront rehearsals. In addition, we ﬁnd statistically
signiﬁcant evidence that with 8 tests over 64 days users who
were asked to memorize 4 PAO stories outperform users who
are given 4 random action-object pairs, but with 9 tests over 128
days the advantage is not signiﬁcant. Furthermore, there is an
interference effect across multiple PAO stories: the recall rate of
100% (resp. 90%) for participants who were asked to memorize
1 PAO story (resp. 2 PAO stories) is signiﬁcantly better than the
rate for participants who were asked to memorize 4 PAO stories.
These ﬁndings yield concrete advice for improving constructions
of password management schemes and future user studies.
I.
INTRODUCTION
Passwords are currently the dominant form of human au-
thentication over the Internet despite many attempts to replace
them [1]. A typical internet user has the complex task of creat-
ing and remembering passwords for many different accounts.
Users struggle with this task, adopting insecure password
practices [2]–[5] or frequently having to reset their passwords.
Permission to freely reproduce all or part of this paper for noncommercial
purposes is granted provided that copies bear this notice and the full citation
on the ﬁrst page. Reproduction for commercial purposes is strictly prohibited
without the prior written consent of the Internet Society, the ﬁrst-named author
(for reproduction of an entire paper only), and the author’s employer if the
paper was prepared within the scope of employment.
NDSS ’15, 8-11 February 2015, San Diego, CA, USA
Copyright 2015 Internet Society, ISBN 1-891562-38-X
http://dx.doi.org/10.14722/ndss.2015.23094
Yet research on human memory provides reason for optimism.
Speciﬁcally, spaced repetition—a memorization technique that
incorporates increasing intervals of time between subsequent
review of previously learned material—has been shown to be
effective in enabling recall in a wide variety of domains [6]–
[10]. Similarly, mnemonic techniques that provide multiple
semantic encodings of information (e.g., as stories and images)
also signiﬁcantly help humans recall information [10], [11].
We report on a user study that provides evidence that
spaced repetition and mnemonics enable users to successfully
recall multiple strong passwords over time. The study is
inspired by a recent result on naturally rehearshing password
schemes [12] that rely on spaced repetition and a speciﬁc
Person-Action-Object (PAO) mnemonic technique to design a
scheme to create and maintain multiple strong passwords. As
a core component of the study, remote research participants
were asked to memorize 4 Person-Action-Object (PAO) stories
where they chose a famous person from a drop-down list
and were given machine-generated random action-object pairs.
Users were also shown a photo of a scene and asked to imagine
the PAO story taking place in the scene (e.g., Bill Gates—
swallowing—bike on a beach). Subsequently, they were asked
to recall the action-object pairs (e.g., swallowing—bike) when
prompted with the associated scene-person pairs (e.g., Bill
Gates—beach) following a spaced repetition schedule over a
period of 100+ days. We designed the study to seek answers
to the following questions:
•
•
•
Do users who follow spaced repetition schedules suc-
cessfully recall multiple PAO stories and, if so, which
schedules work best?
Does the PAO mnemonic technique improve recall
over random action-object pairs alone?
Is there an interference effect when users are asked to
memorize multiple PAO stories?
We summarize our key ﬁndings and discuss their im-
plications for password management below. First, while we
evaluated several spaced repetition schedules, the best results
were obtained under the schedule in which users initially
returned after 12 hours and then in 1.5× increasing intervals:
76.6% of the participants successfully recalled all 4 stories in
10 tests over a period of ≈ 158 days. Much of the forgetting
happened in the ﬁrst test period (the ﬁrst 12 hours): 89%
of participants who remembered their stories during the ﬁrst
test period successfully remembered them in every subsequent
round. This ﬁnding, coupled with recent results of Blocki et
al. [12], suggest that 4 PAO stories could be used to create and
maintain usable and strong passwords for up to 14 accounts
following this spaced repetition schedule, possibly with a
few extra upfront rehearsals. The ﬁnding that much of the
forgetting happens in the ﬁrst test period robustly held in all
the spaced repetition schedules that we experimented with.
Another implication of this ﬁnding is that password expiration
policies [13] negatively impact usability by forcing users to
return to the highest rehearsal effort region of memorizing
a password. Furthermore,
they are unnecessary for strong
passwords (see Section II).
Second, we ﬁnd statistically signiﬁcant evidence that ini-
tially with 8 tests over 64 days users who were asked to
memorize 4 PAO stories outperform users who are given 4
random action-object pairs, but with 9 tests over 128 days the
advantage is not signiﬁcant. This ﬁnding is consistent with the
previous ﬁnding in that much of the forgetting happens in the
early rounds and in those rounds the PAO mnemonic technique
helps signiﬁcantly with recall.
Third, we ﬁnd a statistically signiﬁcant interference effect
across multiple PAO stories. Speciﬁcally, the recall rate of
100% (resp. 90%) for participants who were asked to memo-
rize 1 PAO story (resp. 2 PAO stories) is signiﬁcantly better
than the rate for participants who were asked to memorize 4
PAO stories. The interference effect is strong: it continues to be
statistically signiﬁcant even if we only count a participant with
4 PAO stories as failing if they forgot their ﬁrst (or ﬁrst two)
action-object pair(s). This ﬁnding has several implications for
password management. Further studies are needed to discover
whether the interference effect is alleviated if users memorize
multiple PAO stories following a staggered schedule in which
they memorize 2 stories at a time. To accommodate this user
model, we also need new constructions for naturally rehearsing
password schemes in which passwords can be constructed
even when not all PAO stories are memorized upfront (see
Section VI for a concrete open problem). At the same time,
the perfect recall rate for 1 or 2 PAO stories suggests that they
could serve as a mechanism for strengthening existing pass-
words over time. This conclusion is similar to the conclusion
of a related study of Bonneau and Schechter [14] (although
there are signiﬁcant differences between the two studies that
we discuss in Section V).
Organization. Section II brieﬂy reviews the password man-
agement scheme of Blocki et al. [12], and the security of the
associated passwords consisting of random action-object pairs.
Section III presents the design of our user study. Section IV
describes the results of the study. Section V describes related
work. Finally, Section VI concludes with a discussion of the
implications of these results for password management and
suggestions for future work.
II. BACKGROUND
In this section we show how a user can form multiple
secure passwords from a few random PAO stories by following
the Shared Cues password management scheme of Blocki et
al. [12]. We ﬁrst analyze the security of passwords consisting
of randomly selected actions and objects in Section II-A. In
Section II-B we overview the Shared Cues password man-
agement scheme. In Section II-C we consider a variation of
the Shared Cues password management scheme which only
2
requires the user to memorize four PAO stories to form 14
strong passwords.
A. Security Against Ofﬂine Attacks
Any adversary who has obtained the cryptographic hash
H (pw) of a user’s password pw can mount an automated
brute-force attack to crack the password by comparing H (pw)
with the cryptographic hashes of likely password guesses.
This attack is called an ofﬂine dictionary attack, and there
are many password crackers that an adversary could use [15].
Ofﬂine dictionary attacks against passwords are powerful and
commonplace [16]. Adversaries have been able to compromise
servers at
large companies (e.g., Zappos, LinkedIn, Sony,
Gawker [17]–[22]) resulting in the release of millions of
cryptographic password hashes.
In expectation an adversary would need to pay NC (H) /2
to crack a password chosen uniformly at random from a
space of size N, where C (H) denotes the cost of evaluating
the cryptographic hash function H one time. In our study
each action is chosen uniformly at random from a list of 92
actions and each object is chosen from a list of 96 objects.
Thus, N = (8, 740)i for i randomly chosen action-object
pairs (approximately equivalent to a randomly chosen 4-digit
pin number when i = 1). Table I shows the expected cost
((8, 740)i C (H) /2) of an ofﬂine attack against a password
consisting of i randomly chosen action-object pairs. Symantec
reported that compromised passwords are sold for between $4
and $30 on the black market [23]. As long as C (H) ≥ $10−6 a
rational adversary would not bother trying to crack a password
consisting of two random action-object pairs. A password
consisting of three random action-object pairs would be strong
enough to protect higher value accounts.
Bonneau and Schechter used data on the Bitcoin mining
economy to estimate that C (H) ≈ $1.2× 10−15 for the SHA-
256 hash function, and they estimate that iterated password
hashing1 can only increased this cost to C (H) ≈ $1.42×10−8
— unless we are willing to wait more than two seconds
to compute H during authentication. However, we note that
the value of C (H) could be increased without increasing au-
thentication time using other techniques (parallel computation,
memory hard functions). For example, if authentication were
performed on a GPU with 1, 024 cores and we were willing to
wait approximately two seconds for authentication we could
increase C (H) ≈ $2−16.07 ≈ $1.46 × 10−5 by developing a
function H whose computation can be divided easily2.
B. Shared Cues Password Management Scheme
Our user study is partially motivated by the Shared Cues
password management scheme of Blocki et al. [12]. In their
scheme the user memorizes random PAO stories, and forms
his passwords by appending the secret action(s) and object(s)
from different stories together.
1Cryptographic password hash functions like SCRYPT or BCRYPT [24]
use similar ideas to increase C (H) .
(cid:16)(cid:22)y∈{0,1}dH2 (x, y)
(cid:17)
2One concrete way to accomplish this would be to set H(x) =
, where H1 and H2 are also cryptographic hash
H1
functions. Each of the 2d calls to H2 could be evaluated in parallel.
Person-Action-Object Stories. A user who adopts the Shared
Cues password management scheme [12] ﬁrst memorizes sev-
eral randomly generated Person-Action-Object (PAO) stories.
To memorize each PAO story the user would be shown four
images: a person, an action, an object and a scene. The user
is instructed to imagine the PAO story taking place inside the
scene. After the user has memorized a PAO story the computer
stores the images of the person and the scene, but discards the
images of the secret action and object.
A password is formed by concatenating the secret action(s)
and object(s) from several different PAO stories. During au-
thentication the images of the corresponding people/scenes are
used as a public cue to help the user remember his secret
stories. The public cues remind the user which secrets are used
to form each password (e.g., take the action from the PAO story
involving Bill Gates on the beach, append the object from the
PAO story involving Steve Jobs in the woods,...). The rehearsal
phase from our user study emulates this authentication process.
We stress that the actions and the objects in each of these
PAO stories are selected uniformly at random by the computer
after the images of the person/scene have been ﬁxed. If the user
selected the action and the object then he might pick actions
or objects that are correlated with the person or the scene
(e.g., users might favor objects like ‘apple’ for a person like
Steve Jobs). By having the computer select the story we ensure
that the secret actions and objects are not correlated with the
public cue for the password. Thus, an adversary who is able
to observe these public cues does not gain any advantage in
guessing the corresponding password.
Sharing Stories. Stories are shared across different accounts
to minimize the total number of stories that the user needs
to remember and, more importantly, to maximize the natural
rehearsal rate for each of the user’s PAO stories. Blocki
et al. [12] proposed using a particular combinatorial design
(deﬁnition 1) to balance security and usability. This combina-
torial design, which they called an (n, (cid:96), γ)-sharing set family,
ensures that no pair of passwords can share too many of the
same secret actions/objects. Thus, an adversary who has seen
one of the user’s passwords will not be able to guess any of
the user’s other passwords. More formally, let Si (resp. Sj)
denote the subset of secrets (actions/objects) used to form the
password pwi (resp. pwj) for account Ai (resp. Aj). Even if
the adversary sees pwj he still has to guess all of the secrets
in Si − (Si ∩ Sj) before he can obtain pwi. In an (n, (cid:96), γ)-
sharing set family we can ensure that the set Si − (Si ∩ Sj)
contains at least (cid:96) − γ secrets.
is (n, (cid:96), γ)-sharing if (1) |(cid:83)m
Deﬁnition 1: We say that a set family S = {S1, ..., Sm}
i=1 Si| = n, (2)|Si| = (cid:96) for each
Si ∈ S, and (3) |Si ∩ Sj| ≤ γ for each pair Si (cid:54)= Sj ∈ S.
Here, n denotes the number of secrets (actions/objects)
that the user has to memorize and m denotes the number of
passwords that the user can form. Intuitively, we want to keep
n as small as possible to minimize memorization effort. Even
if the adversary learns the users password pwj for account Aj
then the password for account Si is still at least as strong as
a password containing (cid:96) − γ secrets.
Blocki et al. [12] showed how a user could create m = 110
unique passwords from n = 43 PAO stories using a (43, 4, 1)-
sharing set family (in their scheme each password consisted
3
of four action-object pairs). Even if an adversary was able to
obtain two of the user’s passwords all of the user’s remaining
passwords would be at least as strong as a password containing
2 random action-object pairs — strong enough to resist ofﬂine
attacks3. Even if an adversary was able to obtain three of the
user’s passwords all of the user’s remaining passwords would
be strong enough to resist online attacks — each remaining
password contains at least one unknown action-object pair.
Usability Model. Blocki et al. [12] developed a usability
model to predict how much work a user would need to do to
remember all of his secrets. A central piece of their model was
based on an assumption about human memory that they called
the expanding rehearsal assumption. Loosely, this assumption
states that a person will be able to remember his secrets if he
follows a spaced repetition schedule like the ones tested in this
study.
C. Variants Considered in Our Study
We observe that 4 PAO stories is already enough to
generate 14 moderately secure passwords in the Shared Cues
framework using a (8, 4, 2)-sharing set family of size m = 14.
To see this we observe that S = {{1, 2, 3, 4}, {1, 2, 5, 6},
{1, 2, 7, 8}, {1, 3, 5, 7}, {1, 3, 6, 8}, {1, 4, 5, 8}, {1, 4, 6, 7},
{2, 3, 5, 6}, {2, 3, 6, 7}, {2, 4, 5, 7}, {2, 4, 6, 8}, {3, 4, 5, 6},
{3, 4, 7, 8}, {5, 6, 7, 8}} is an (8, 4, 2)-sharing set family. Each
PAO story that the user memorizes can be viewed as containing
two independent secrets (the action and the object). Thus, each
password will contain (cid:96) = 4 secrets (actions and/or objects).
The password pw1 for the ﬁrst account A1 would be formed
by appending the actions and objects from the ﬁrst two PAO
stories and the password pw14 for account A14 would be
formed by appending the actions and objects from the last
two PAO stories.
Security. Each password is strong enough to resist an ofﬂine
attack3. Even if the adversary recovered one of the passwords
in a plaintext password breach all of the user’s other pass-
words are strong enough to resist online attacks because each
password will contain at least two unknown secrets (action(s)
and/or object(s)).
Usability. The evaluation of usability of this construction can
be decomposed into two questions. First, can users robustly
recall 4 PAO stories while following a suitable spaced rep-
etition schedule? A central goal of our study is to answer
this question. Second, how many extra rehearsals (beyond
rehearsals from normal logins) does a user have to perform
in order to follow the spaced repetition schedule? We do not
attempt to answer this question in our study. However, we
provide a sense of this user effort in the discussion section
(see Section VI).
III. STUDY DESIGN
Our user study was conducted online using Amazon’s Me-
chanical Turk framework, on a website at our institution. It was