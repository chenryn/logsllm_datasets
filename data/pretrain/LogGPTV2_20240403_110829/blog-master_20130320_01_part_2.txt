```  
新建触发器  
```  
digoal=> create trigger tg1 after insert or update or delete on user_account_kb for each row execute procedure trace_row();  
CREATE TRIGGER  
```  
测试插入  
```  
digoal=> insert into user_account_kb select * from user_account_kb limit 3;  
WARNING:  user:digoal, db:digoal, query:insert into user_account_kb select * from user_account_kb limit 3;, newdata:(1,test,66,"2013-03-20 10:08:15.969523",)  
WARNING:  user:digoal, db:digoal, query:insert into user_account_kb select * from user_account_kb limit 3;, newdata:(2,test,50,"2013-03-20 10:08:15.969523",)  
WARNING:  user:digoal, db:digoal, query:insert into user_account_kb select * from user_account_kb limit 3;, newdata:(3,test,95,"2013-03-20 10:08:15.969523",)  
INSERT 0 3  
```  
测试更新  
```  
digoal=> update user_account_kb set info='new' where id delete from user_account_kb where id drop trigger tg1 on user_account_kb;  
DROP TRIGGER  
```  
创建触发器, 这里用到when条件, 只有当balance变化时才审计  
```  
digoal=> create trigger tg1 after update on user_account_kb for each row when (new.balance<>old.balance) execute procedure trace_row();  
CREATE TRIGGER  
```  
测试  
```  
digoal=> update user_account_kb set info='new' where id=4;  
UPDATE 1  
digoal=> update user_account_kb set info='new',balance=balance where id=4;  
UPDATE 1  
```  
balance变化才审计  
```  
digoal=> update user_account_kb set info='new',balance=balance-1 where id=4;  
WARNING:  user:digoal, db:digoal, query:update user_account_kb set info='new',balance=balance-1 where id=4;, newdata:(4,new,89,"2013-03-20 10:08:15.969523",), olddata:(4,new,90,"2013-03-20 10:08:15.969523",)  
UPDATE 1  
```  
## 小结  
1\. 前面提到ROLLBACK等事务相关的SQL不会被审计到, 所以当SQL执行失败时, LOG已经记录了, 但是没有记录回滚的动作, 所以信息是不完整的, 除非从XLOG/CLOG中取出对应的XID是提交还是回滚.   
为了使记录在LOG中的语句一定是提交的, 那么需要调整一下触发器的创建方法, 使得回滚的事务中所有的SQL都不被审计.  
如下,  
触发器只有在提交时才会触发, 回滚不触发. (使用constraint来创建触发器)  
```  
digoal=> create constraint trigger tg1 after update on user_account_kb DEFERRABLE INITIALLY deferred for each row when (new.balance<>old.balance) execute procedure trace_row();  
CREATE TRIGGER  
digoal=> begin;  
BEGIN  
digoal=> update user_account_kb set balance=balance+1 where id=1;  
UPDATE 0  
digoal=> update user_account_kb set balance=balance+1 where id=4;  
UPDATE 1  
digoal=> end;  
WARNING:  user:digoal, db:digoal, query:end;, newdata:(4,new,90,"2013-03-20 10:08:15.969523",), olddata:(4,new,89,"2013-03-20 10:08:15.969523",)  
COMMIT  
digoal=> begin;  
BEGIN  
digoal=> update user_account_kb set balance=balance+1 where id=4;  
UPDATE 1  
digoal=> rollback;  
ROLLBACK  
```  
注意以上方法只有after ... for each row才能被用到.  
```  
When the CONSTRAINT option is specified, this command creates a constraint trigger. This is the same as a regular trigger except that the timing of the trigger firing can be adjusted using SET CONSTRAINTS.   
Constraint triggers must be AFTER ROW triggers. They can be fired either at the end of the statement causing the triggering event, or at the end of the containing transaction; in the latter case they are said to be deferred.   
A pending deferred-trigger firing can also be forced to happen immediately by using SET CONSTRAINTS.   
Constraint triggers are expected to raise an exception when the constraints they implement are violated.  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/16387704020132208241607/  
2\. http://blog.163.com/digoal@126/blog/static/1638770402013283547959/  
3\. http://blog.163.com/digoal@126/blog/static/1638770402013211102130526/  
4\. http://blog.163.com/digoal@126/blog/static/163877040201252575529358/  
5\. http://blog.163.com/digoal@126/blog/static/16387704020132131361949/  
6\. http://www.postgresql.org/docs/9.2/static/sql-createtrigger.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")