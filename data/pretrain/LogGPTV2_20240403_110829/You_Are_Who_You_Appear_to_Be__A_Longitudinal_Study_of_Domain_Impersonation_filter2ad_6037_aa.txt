title:You Are Who You Appear to Be: A Longitudinal Study of Domain Impersonation
in TLS Certificates
author:Richard Roberts and
Yaelle Goldschlag and
Rachel Walter and
Taejoong Chung and
Alan Mislove and
Dave Levin
You Are Who You Appear to Be
A Longitudinal Study of Domain Impersonation in TLS Certificates
Richard Roberts
University of Maryland
Taejoong Chung
Rochester Institute of Technology
Yaelle Goldschlag
University of Maryland
Alan Mislove
Northeastern University
Rachel Walter
University of Maryland
Dave Levin
University of Maryland
ABSTRACT
The public key infrastructure (PKI) provides the fundamental prop-
erty of authentication: the means by which users can know with
whom they are communicating online. The PKI ensures end-to-end
authenticity insofar as it verifies a chain of certificates, but the
true final step in end-to-end authentication comes when the user
verifies that the website is what they expect. To this end, users are
expected to evaluate domain names, but various “domain imperson-
ation” attacks threaten their ability to do so. Indeed, if a user could
be easily tricked into believing that amazon.com-offers.com is
actually amazon.com, then, coupled with security indicators like a
lock icon, users could believe that they have a secure connection to
Amazon.
We study this threat to end-to-end authentication: (1) We in-
troduce a new classification of an impersonation attack that we
call target embedding. This embeds an entire target domain, un-
modified, using one or more subdomains of the actual domain.
(2) We perform a user study with the specific goal of understand-
ing whether users fall for target embedding, and how its eﬃcacy
compares to other popular impersonation attacks (typosquatting,
combosquatting, and homographs). We find that target embedding
is the most effective against modern browsers. (3) Using all HTTPS
certificates collected by Censys, we perform a longitudinal analy-
sis of how target-embedding impersonation has evolved, who is
responsible for issuing impersonating certificates, who hosts the
domains, where the economic choke-points are, and more. We close
with a discussion of counter-measures against this growing threat.
CCS CONCEPTS
• Security and privacy → Spoofing attacks; Web protocol secu-
rity; Economics of security and privacy.
KEYWORDS
PKI; TLS; Domain impersonation; Target embedding
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-6747-9/19/11…$15.00
https://doi.org/10.1145/3319535.3363188
ACM Reference Format:
Richard Roberts, Yaelle Goldschlag, Rachel Walter, Taejoong Chung, Alan
Mislove, and Dave Levin. 2019. You Are Who You Appear to Be: A Longi-
tudinal Study of Domain Impersonation in TLS Certificates. In 2019 ACM
SIGSAC Conference on Computer and Communications Security (CCS ’19),
November 11–15, 2019, London, United Kingdom. ACM, New York, NY, USA,
16 pages. https://doi.org/10.1145/3319535.3363188
1 INTRODUCTION
The public key infrastructure (PKI) solves a fundamental problem
of online communication: it provides mechanisms by which users
verify with whom they are communicating. The PKI provides end-
to-end authentication in the sense that it ensures that a user’s
machine is able to verify the signatures in a website’s certificate
chain, and to check that the certificates have not been revoked [29].
However, the true final step in end-to-end authentication comes
when the user ascertains who is on the other side of the connection.
To this end, users have two readily available pieces of information:
First, users are commonly presented with a security indicator, such
as the well-known “lock icon” (or conversely a “Not Secure” tag)
when browsing the web. Indicators such as these denote that the
browser was able to successfully authenticate a website’s certificate,
but they do not represent whether the website is what the user
expects it to be. Second, browsers present users with the website’s
domain name itself.
Of these, the security community has encouraged users to look
for security indicators like the lock icon when sharing private
information online [11]. It is well known through user studies [15,
37], however, that users misinterpret the meaning behind such
security indicators and equate them not only with the authenticity
of the connection, but with the trustworthiness of the site.
But to our knowledge, there has been little study on the equally
critical question of whether users are effective at properly evaluat-
ing domain names themselves. For instance, if users could be easily
tricked into believing that amazon.com-offers.com is actually
amazon.com, then, coupled with the lock icon, they could believe
that they have a secure (“trustworthy”) connection to Amazon.
32,
41,
45], homographs
There has been a large body of work proposing and studying var-
ious forms of domain impersonation attacks—such as typosquatting
(e.g., youtueb.com)
(e.g.,
y0utube.com)
[13, 16, 17, 20, 25], and combosquatting
(e.g., youtube-videos.com) [22]. Through various wide-scale and
longitudinal studies, researchers have found that attackers appear
to be using these forms of impersonation in the wild. However, we
are unaware of any work performing a user-focused study of the
relative successes of these attacks. Are they effective, and are there
other forms of impersonation that may be even more effective?
[5,
Session 10E: CertificatesCCS ’19, November 11–15, 2019, London, United Kingdom2489Are these problems made more acute within the PKI, and are there
players in the PKI who may be able to help mitigate them?
In this paper, we make three broad contributions:
A new classification of domain impersonation. We propose
a new classification of domain impersonation which we call target
embedding. Unlike prior schemes that alter a domain in some way,
target embedded leaves the impersonated domain unmodified—it
does this by embedding the domain by using a subdomain of the ac-
tual domain. For example, apple.com-signin.id embeds the tar-
get domain apple.com, but the actual domain is com-signin.id.
This is a real domain: the popular certificate authority (CA) Let’s
Encrypt gave a certificate to this domain in October, 2018. Target
embedding is differentiated from attacks such as homographs, ty-
posquatting, and combosquatting, as it is a form of “subdomain
spoofing,” or an impersonation attack that is located in subdomains
instead of an effective second-level domain (e2LD).
A user study of susceptibility to domain impersonation. We
performed a user study of 244 users with a relatively narrow goal:
to understand how thoroughly users fall for target embedding, as
compared with other popular domain impersonation attacks (ty-
posquatting, combosquatting, and homographs). Our results show
that users are significantly more susceptible to target embedding
than the other attacks that threaten today’s browsers.
A wide-scale longitudinal study of target embedding. The
bulk of our investigation analyzes all HTTPS certificates collected
by Censys to understand how target embedding happens—which
domains are targeted, who gives them certificates, where are they
hosted, and so on—and ways to remedy it.
We summarize our longitudinal study’s key findings as follows:
• Target embedding is widespread. We observe 256,045 imper-
sonation attempts spanning 112,262 distinct domains and 7,581
distinct targets from within the Alexa top-100K most popular
websites. While impersonators preferentially target more popu-
lar websites, we see a long tail of impersonation attempts.
• Impersonators take advantage of the low economic barrier of
entry to impersonation attacks by using free domain registration,
free certificate issuance, and free hosting.
• Three CAs were responsible for issuing 95.37% of certificates
that included a target embedding domain (but issued only 80.80%
of all certificates in our dataset).
• Reactive initiatives such as Google Safe Browsing [18] miss
thousands of domains from large, coordinated campaigns.
• Wildcard certificates pose a large potential threat. We iden-
tify 343,336 unique wildcard domains whose wildcard is imme-
diately followed by a TLD from an impersonated target (e.g.,
*.com-deals.online).
Roadmap §2 presents background and related work. §3 provides
the results of a user study investigating how successful domain im-
personation attacks are at deceiving users. §4 describes our datasets
and methodology for detecting target embedding attacks, and com-
pare target embedding to other common forms of domain imper-
sonation. §5 presents our longitudinal study of target embedding.
§6 studies how successful Google Safe Browsing is at detecting
large coordinated impersonation campaigns. We present possible
solutions to target embedding in §7 and conclude in §8. All of our
code and data are publicly available at https://securepki.org
2 BACKGROUND AND RELATED WORK
Domain Impersonation Attacks A wide range of domain imper-
sonation attacks have been identified. These include: typosquat-
ting, in which the impersonating domain has a small edit distance
from the target domain (faceboook.com) [5, 32, 41, 45]; bitsquat-
ting, in which a bit in the ASCII representation is flipped (fage-
book.com) [33]; combosquatting, in which the attacker includes
a target’s brand name alongside other string tokens (facebook-
login.com) [22], homographs, that use “confusable” characters—
often Unicode characters used in Internationalized Domain Names
(IDNs) [10]—that look like the real characters (faceb00k.com) [13,
16, 17, 20, 25]; and homophones, domains that sound the same as a
target domain when read aloud (fasebook.com) [34]. All of these
impersonation attacks occur in the effective second-level domain, or
e2LD (e.g., example in example.com). We introduce the umbrella
term “e2LD spoofing” to describe attacks that generate a domain
with a new e2LD, which impersonates a similar looking e2LD.
We expand on this work by introducing a type of imperson-
ation that we call target embedding. Simply put, a target embedding
domain embeds a complete, unmodified target domain, including
the TLD, by using one or more subdomains of the real domain.
The target domain is separated from the rest of the domain on
the right (and optionally on the left) by either a period (.) or a
hyphen (-). For example, consider the target embedding domain
“www.facebook.com.user-29de84ca4bfa72.tk”. The target, in this
case “facebook.com”, is embedded using subdomains of the actual
domain, “user-29de84ca4bfa72.tk”. The target’s TLD can also ap-
pear in the real e2LD, such as apple.com-login.pw. Unlike prior
domain impersonation attacks, target embedding does not operate
strictly within the e2LD: in fact, it requires the use of at least one
subdomain, as all target domains have at least one period between
their e2LD and TLD.
Target embedding is part of a broader class of attacks known as
“subdomain spoofing.” Subdomain spoofing has been mentioned
only in passing in academic literature [13, 23] and lacks a con-
crete definition. We define subdomain spoofing as an umbrella
term that includes any attempt at domain impersonation where
the target of impersonation is primarily contained in one or more
subdomains. Snowshoe spamming [40] is a form of subdomain
spoofing that prepends a target’s e2LD as a subdomain on multi-
ple domains to evade reputation filters (e.g., LinkedIn.foo1.com,
LinkedIn.foo2.com, etc.). Other forms of impersonation such as
URL padding can use long subdomains or e2LDs to force portions
of a domain not to be rendered on a user’s screen [13, 19, 23]. To the
best of our knowledge, our paper is the first to empirically measure
any form of subdomain spoofing at scale.
User Perception and Comprehension of URLs Much work
has been conducted on drawing user attention to URLs in order to
help determine a website’s legitimacy. Several studies have found
that some users do look at the address bar for evaluation without
prompting, through interviews, think-aloud protocols, eye tracking
measurements, and click-heatmaps [21, 27, 42]. In cases where users
did not look at the address bar on their own, education attempts
Session 10E: CertificatesCCS ’19, November 11–15, 2019, London, United Kingdom2490to explicitly make them consider the address bar when evaluat-
ing a website’s legitimacy have proven effective [27, 47], unlike
UI changes created to indirectly alert users to the presence of a
suspicious domain [42, 46, 47]. However, in all these cases, even
engaged users struggled with actually identifying when a domain
was spoofing a target, as users are generally unaware of modern
impersonation techniques. Kumaraguru et al. developed education
tools designed to teach users about impersonation techniques them-
selves [24]. We complement these works with a user study that
measures how effective different types of domain impersonation
are at confusing users.
3 DO USERS FALL FOR TARGET
EMBEDDING?
To motivate our study of target embedding, we performed a user
study with a solitary goal: to understand how thoroughly users
fall for target embedding, as compared to other popular domain
impersonation attacks (typosquatting, combosquatting, and homo-
graphs).
3.1 Study design
We designed and ran a user survey (N=244) on Amazon MTurk.
After brief instructions in which we explained what a URL was, par-
ticipants were presented with 48 questions. Each question presented
a (possibly impersonating) URL and the name of an organization,
and the participant was instructed to answer “Yes” or “No” to the
question: Do you believe that this is the organization’s URL?
Posing the question in this manner is intentionally unlike what
users tend to experience. First, it raises their suspicion to a level
higher than users are likely to experience while normally brows-
ing [6]. Second, it draws the users’ attention to the address bar (that
is all our survey shows them), which browsers currently do a poor
job at [42]; despite the fact that the URL is the one true indicator of
a website’s identity, users often make their trust decisions based
on the page’s content, which is easy to replicate. We believe our
results capture a lower bound of users’ susceptibility to domain im-
personation attacks, as these two departures from reality decrease
the likelihood that users will be fooled.
We tested users’ ability to detect four types of domain imperson-
ation: target embedding, combosquatting, typosquatting, and Uni-
code homographs. Participants were given six of the above Yes/No
questions for each of these. Another six questions included the
Unicode homographs converted to Punycode, an ASCII encoding
of Unicode that modern browsers display to mitigate homograph
attacks. For example, the homograph eβay.com in Punycode is xn–
eay-sxc.com. Appendix A lists all of the domain names we used in
our user study.
The remaining URLs were controls and related to measurements
not discussed in this paper; more information on these, our recruit-
ment method, compensation, ethical considerations, participant
demographics, and survey protocol can be found in Appendix A.
Our user study received IRB approval, and we received informed
consent from all participants.
Figure 1: N=244 participants were shown 6 questions each
for target embedding, combosquatting, typosquatting, and
Unicode homographs. Participants were also shown the 6
homograph URLs rendered as Punycode, a common defense
against that attack. The number of errors the participants
committed are presented as stacked histograms.
3.2 Results
Figure 1 shows the overall responses from our survey. The total
height of each bar represents the number of participants that an-
swered at least one question in the respective category incorrectly:
a taller bar represents more participants falling for an imperson-
ation attack (at least once). Colors within each bar bin participants
by how many of that category’s questions the user answered incor-
rectly: a darker bar represents individual participants falling for an
impersonation attack more often. When comparing two imperson-
ation attacks, we use chi-square tests and report p-values, corrected
with the Bonferroni method. We make several observations:
Target embedding evokes more repeated mistakes The par-
ticipants collectively made 428 mistakes when classifying target
embedding domain names. This is second only to homograph’s
480, but this difference is not statistically significant (p = 0.17).
Target embedding leads to more mistakes than combosquatting’s
279, typosquatting’s 185, and Punycode’s 66 (p < 0.001 for each).
However, target embedding does not always have many more
users who fall for it. A total of 136 participants fell for at least
one target embedding attack. Target embedding was less effective
than homograph’s 225 participants, but far more effective than
typosquatting’s 83 and Punycode’s 21 (p < 0.001 for all of these).
Target embedding was not statistically significantly different from
combosquatting, which 117 participants fell for (p = 0.41).
Punycode mitigates Unicode homograph attacks In an effort
to mitigate homograph attacks, modern browsers convert domain
names that contain Unicode (e.g., ´apple.com) to Punycode (equiv-
alently, xn--pple-4na.com) [36]. Our results show that this is an
extremely effective defense: our participants were significantly less
likely to fall for Punycoded domains than for any other imperson-
ation attack (p < 0.001).
 0 50 100 150 200 250UnicodeHomographsTargetEmbeddingCombosquattingTyposquattingPunycode#Errors:123456Number of Participants (Stacked, N=244)      Session 10E: CertificatesCCS ’19, November 11–15, 2019, London, United Kingdom2491Target embedding is currently the greatest threat Taken to-
gether, these results show that target embedding leads to signifi-
cantly more user mistakes than any other impersonation attack cur-
rently possible in modern browsers (thus excluding homographs).
Moreover, the results show that if a user falls for a target embedding
attack once, they are likely to fall for it multiple times—more so
than with other domain impersonation attacks.
Summarized simply: to users, domain names are who they appear
to be, and target embedding is currently the most effective means
of appearing to be someone a domain is not.
3.3 Implications on the Web’s PKI