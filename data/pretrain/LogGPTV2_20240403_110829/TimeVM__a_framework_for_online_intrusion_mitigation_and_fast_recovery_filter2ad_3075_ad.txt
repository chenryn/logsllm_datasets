deploying TimeVM in real practice. We ﬁrst examine the
impact of increasing packets’ replay rate during fast replay
mode on the system recovery time. For this case, we ﬁx N
to two shadow VM’s, Tmin to 2 seconds, and T T D to 10
seconds, i.e., h(t) = 5t. Equation 4 can be rewritten as
E(R) =
2Tmin
π − 1
+ 5 × Tmin
(7)
where π = λa/λ. Here, π expresses the magnitude of rate
increase, and it is more convenient to study the eﬀect of rate
increase than specifying explicit values for λ and λa. Figure
7 shows the relation between the expected recovery time and
the ratio π. As shown, there is a signiﬁcant improvement
on the system recovery time as the ratio goes from 1 up to
2, then the recovery time improves slowly after 2.5. We can
142N T 1
lag
10.73
2
6.42
3
4.56
4
3.53
5
6
2.88
T 2
lag
30.0
15.41
10.33
7.77
6.22
T 3
lag
T 4
lag
T 5
lag
30.0
18.15
13.04
10.17
30.0
19.98
15.04
30.0
21.3
T 6
lag E(R)
41.65
35.56
32.87
31.36
30.4
30.0
Table 2: Tlag’s values and E(R) when T T D is expo-
nentially distributed
N T 1
lag
2
10.69
8.39
3
7.2
4
6.44
5
6
5.9
T 2
lag
18.31
12.6
10.27
8.93
8.04
T 3
lag
T 4
lag
T 5
lag
T 6
lag
18.31
13.66
11.43
10.07
18.31
14.35
12.25
18.31
14.85
18.31
E(R)
35.38
32.74
31.49
30.76
30.28
Table 3: Tlag’s values and E(R) when T T D is follow-
ing Gamma distribution
is obvious that E(R) is signiﬁcantly reduced as we deploy
3 or 4 Shadow VMs. Then, we notice that E(R) is almost
a horizontal line after N = 5. This implies that adding
more than 5 virtual machines to the system may not be
worthy because the cost of adding one additional VM is more
than the gain (in terms of reducing the recovery time). The
two ﬁgures also illustrate the impact of increasing π on the
recovery time for diﬀerent values of N . As we said before,
the recovery time is improved signiﬁcantly when the ratio is
more than 1 and less than 2.5.
In the following paragraphs, we study the inﬂuence of con-
ﬁdent factor on our framework. Figure 10 shows the eﬀect of
conﬁdent factor, ρ, on the storage requirement. As we can
notice, the average storage size increases smoothly when ρ
increases from 0.5 to 0.85. After this point, the average stor-
age starts to increase signiﬁcantly and rapidly after 0.95.
Next, we examine the eﬀect of conﬁdent factor on system
recovery time. Figure 11 depicts this eﬀect on a system that
has 1, 2, 3, 5, or 7 Shadow VMs and T T D is exponentially
distributed with a mean value equals to 10 seconds. Figure
12 depicts the same eﬀect for the same system conﬁgurations
but T T D follows a Gamma distribution with α = 5 and θ =
2 (the mean value is 10 seconds). As shown, the expected
recovery time increases as ρ increase. This is because, ρ
conﬁgures the time lag of the last Shadow VM. Low value
of ρ means that the diﬀerence in time between the Live VM
and the last Shadow VM is small. However, the probability
of unsuccessful recovery will be high. High value of ρ means
that the time lag of the last Shadow VM is high, and the
probability of unsuccessful recovery is low. Figure 11 and
12 also show that the impact of conﬁdent factor on expected
recovery time does not depend on the distribution of T T D.
7. CONCLUSION AND FUTURE WORK
We propose a framework called TimeVM to achieve an on-
line mitigation and recovery of network servers under-attack.
The framework is based on traﬃc-log-replay recovery and
virtualization technology. TimeVM consists of several vir-
tual machines running on diﬀerent time lags. These ma-
chines represent multiple historical snapshots of the original
virtual machine at diﬀerent times in the past. Whenever
Figure 7: The impact of λa/λ on system recovery
time
conclude that we do not need to pump high volume of pack-
ets to the network in order to reduce the average recovery
time. Based on Figure 7, it is recommended to make the
ratio of π between 1.5 and 2.5. In our implementation, we
can adjust this ratio by tuning silent time value.
In real practice, increasing the ratio π could lead to a
disaster situation.
If the Live VM is hosting a busy net-
work server, then increasing packets rate could overwhelm
the network servers on the Shadow VMs and lead to packets
dropping. As shown in [2], the system utilization of HTTP
server is linearly increasing as the number of requests per
second is increased. This means that if the server utiliza-
tion is 80%, then increasing the ratio from 1 to 1.25 will
eventually increase the server utilization to 100%. As a fu-
ture work, the value of π should be adjusted based on the
server utilization.
Second, we examine the eﬀect of N on system recovery
time. As we mentioned before, if T T D is indeterministic,
then we need to deploy multiple shadow VMs to reduce the
system recovery time, and we assumed that T T D follows a
certain distribution. Remember that T T D is composed of
time to detect and time to discover. In literature, ﬁnding
a suitable distribution for T T D has shown to be diﬃcult.
However, for the evaluation purpose, we consider two dis-
tributions that approximately simulate the real situations:
Exponential and Gamma distributions. We select exponen-
tial distribution to simulate the case that it is more likely
that T T D has a shorter time (i.e., closer to zero) and less
likely a longer time. We select Gamma distribution to simu-
late the case that T T D is more likely around a certain time.
lag} for diﬀerent values of
N when T T D follows an exponential distribution with the
mean value 10 seconds. Table 3 shows the values when T T D
follows a Gamma distribution with α = 5 and θ = 2. In both
cases, we ﬁx the ratio of λa/λ to 1.5 and the conﬁdent factor
ρ to 0.95. As shown, there is a dramatic reduction in system
recovery time when we deploy three Shadow VM’s instead of
deploying two Shadow VM’s. Also, as the number of Shadow
VM’s increases the expected recovery time decreases. How-
ever, there is no signiﬁcant decrement of E(R) when N is
increased from 5 to 6.
Figure 9 and 8 illustrate the values of E(R) with high
values of N (i.e., N ≥ 7), and with diﬀerent values of π. It
Table 2 shows the value of {T ∗
11.522.533.544.555.560102030405060708090100Ratio of la / lExpected recovery time, E(R), in seconds143Figure 8: The impact of reliability factor ρ on system
recovery time
Figure 10: The impact of conﬁdent factor ρ on stor-
age capacity
Figure 9: The impact of reliability factor ρ on system
recovery time
Figure 11: The impact of conﬁdent factor ρ on sys-
tem recovery time when T T D is exponentially dis-
tributed
the system detects an infection, it selects the ﬁrst shadow
VM before the infection time, and then fast-replay the en-
tire traﬃc after removing the infection traﬃc from the logs.
This shadow VM will replace the contaminated VM as the
infection is mitigated.
The paper addresses the theoretical and implementation
challenges to respectively optimize the recovery time and
replay network traﬃc. One signiﬁcant contribution of our
work is to achieve an online mitigation as fast as possi-
ble. This requires proper conﬁguration of system param-
eters. Minimizing recovery time has been formulated as a
constrained nonlinear optimization problem. We used an
available evolutionary approach to solve this optimization
problem.
The evaluation results look very appealing in practice. We
show in section6 that replaying traﬃc as twice as fast as orig-
inal traﬃc speed is suﬃcient to obtain the minimum recovery
time. This oﬀers a practical solution. The evaluation results
also show that it is suﬃcient to deploy a small number of
shadow VMs (i.e., not exceed 5 VMs) to achieve a very rea-
sonable recovery time in most cases. These results reveal
that TimeVM can be deployed easily and economically in
real systems.
We will continue to develop TimeVM to accommodate
diﬀerent type of traﬃc such as UDP, ICMP, and multicast
traﬃc. Then, we build a complete prototype with diﬀerent
types of exploitation to get some experiences with TimeVM.
8. REFERENCES
[1] http://www.rtfm.com/ssldump.
[2] T. F. Abdelzaher and C. Lu. Modeling and
performance control of internet servers. In Proceedings
of the 39th IEEE Conference on Decision and Control,
volume 3, pages 2234–2239, 2000.
[3] P. Barham, B. Dragovic, K. Fraser, S. Hand,
T. Harris, A. Ho, R. Neugebauer, I. Pratt, and
A. Warﬁeld. Xen and the art of virtualization. In
SOSP ’03: Proceedings of the nineteenth ACM
symposium on Operating systems principles, pages
164–177, 2003.
[4] A. Cichocki and R. Unbehauen. Neural Networks for
Optimization and Signal Processing. John Wiley and
Sons, 1993.
[5] J. R. Crandall and T. F. Chong. Minos: Control data
attack preventing orthogonal to memory model. In In
Proceedings of the 37th International Symposium on
Microarchitecture (MICRO), 2004.
1234567891011121314151015202530354045Number of Shadow VMsExpected Recovery time, E(R), in secondsla / l = 1.5la / l = 2.0la / l = 2.5la / l = 3.012345678910111213141510203040506070Number of Shadow VMsExpected Recovery time, E(R), in secondsla / l = 1.5la / l = 2.0la / l = 2.5la / l = 3.00.50.550.60.650.70.750.80.850.90.95101234567x 104Confident factor (r)Maximum storage size, in packets0.5(cid:13)0.55(cid:13)0.6(cid:13)0.65(cid:13)0.7(cid:13)0.75(cid:13)0.8(cid:13)0.85(cid:13)0.9(cid:13)0.95(cid:13)1(cid:13)0(cid:13)50(cid:13)100(cid:13)150(cid:13)Confident factor ((cid:13)r(cid:13))(cid:13)Expected recovery time, E(R), in seconds(cid:13)N (cid:13)= 2(cid:13)N (cid:13)= 3(cid:13)N (cid:13)= 5(cid:13)N (cid:13)= 7(cid:13)144Netw. Syst. Manage., 12(2):251–276, 2004.
[17] A. C. Snoeren, D. G. Andersen, and H. Balakrishnan.
Fine-grained failover using connection migration. In
USITS’01: Proceedings of the 3rd conference on
USENIX Symposium on Internet Technologies and
Systems, 2001.
[18] S. M. Srinivasan, S. Kandula, C. R. Andrews, and
Y. Zhou. Flashback: a lightweight extension for
rollback and deterministic replay for software
debugging. In ATEC ’04: Proceedings of the annual
conference on USENIX Annual Technical Conference,
pages 3–3, 2004.
[19] F. Sultan, K. Srinivasan, and L. Iftode. Migratory tcp:
connection migration for service continuity in the
internet. In Proceedings of the 22nd International
Conference on Distributed Computing Systems, pages
469–470, 2002.
[20] A. Whitaker, R. S. Cox, M. Shaw, and S. D. Gribble.
Rethinking the design of virtual machine monitors.
IEEE Computer, 38(5):57–62, 2005.
[21] M. Xu, R. Bodik, and M. D. Hill. A ﬂight data
recorder for enabling full-system multiprocessor
deterministic replay. SIGARCH Comput. Archit.
News, 31(2):122–135, 2003.
Figure 12: The impact of conﬁdent factor ρ on sys-
tem recovery time when T T D follows Gamma distri-
bution
[6] J. R. Crandall, Z. Su, S. F. Wu, and T. F. Chong. On
deriving unkown vulnerabilities from zero-day
polymorphic and metamorphic worm exploits. ACM
CCS, pages 235–248, 2005.
[7] D. A. S. de Oliveira, J. R. Crandall, G. Wassermann,
S. F. Wu, Z. Su, and F. T. Chong. Execrecorder:
Vm-based full-system replay for attack analysis and
system recovery. In ASID ’06: Proceedings of the 1st
workshop on Architectural and system support for
improving software dependability, pages 66–71, 2006.
[8] G. W. Dunlap, S. T. King, S. Cinar, M. A. Basrai,
and P. M. Chen. Revirt: enabling intrusion analysis
through virtual-machine logging and replay. SIGOPS
Oper. Syst. Rev., 36:211–224, 2002.
[9] G. W. Dunlap, D. G. Lucchetti, M. A. Fetterman, and
P. M. Chen. Execution replay of multiprocessor virtual
machines. In VEE ’08: Proceedings of the fourth ACM
SIGPLAN/SIGOPS international conference on
Virtual execution environments, pages 121–130, 2008.
[10] M. Kharbutli, X. Jiang, Y. Solihin, G. Venkataramani,
and M. Prvulovic. Comprehensively and eﬃciently
protecting the heap. ASPLOC, 2006.
[11] T. J. LeBlanc and J. M. Mellor-Crummey. Debugging
parallel programs with instant replay. IEEE Trans.
Comput., 36(4):471–482, 1987.
[12] J. D. C. Little. A proof of the queueing formula
l = λw. Oper. Res., p:383–387, 1961.
[13] M. V. Mahoney. Network traﬃc anomaly detection
based on packet bytes. In SAC ’03: Proceedings of the
2003 ACM symposium on Applied computing, pages
346–350, 2003.
[14] L. McVoy and C. Staelin. lmbench: Portable tools for
performance analysis. In Proceedings of the USENIX,
1996.
[15] S. Narayanasamy, G. Pokam, and B. Calder. Bugnet:
Continuously recording program execution for
deterministic replay debugging. SIGARCH Comput.
Archit. News, 33(2):284–295, 2005.
[16] I. Ray and S. Tideman. A secure tcp connection
migration protocol to enable the survivability of
client-server applications under malicious attack. J.
0.50.550.60.650.70.750.80.850.90.95110203040506070Confident factor (r)Expected recovery time, E(R), in secondsN = 1N = 2N = 3N = 5N = 7145