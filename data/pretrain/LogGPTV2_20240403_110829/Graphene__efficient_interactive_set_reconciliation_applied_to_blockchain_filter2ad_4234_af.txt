probability β when
a∗ =(1 + δ)a,
.
a
where δ =1
(15)
PROOF: There are m − n potential false positives that pass
through S. They are a set A1, . . . , Am−n of independent Bernoulli
i =1 Ai and
m−n(m − n) = a. From Lemma
µ = E[A] = fS(m − n) = a
1, we have
2(s +√s2 + 8s) and s =− ln(1−β)
trials such that Pr[Ai = 1] = fS. Let A =m−n
(cid:19)
(cid:18)
Pr[A ≥ (1 + δ)µ] ≤ Exp
(16)
for δ ≥ 0. The receiver can set a bound of choice, 0  0, and µ = E[Y] = (m−x)fS. By setting(1 + δ)µ = z − x
and solving for δ, we have
(1 + δ)(m − x)fS = z − x
δ =
z − x
(m − x)fS − 1.
We substitute δ into Eq. 20 and bound the probability of
observing a value of y = z − x or greater, given that the
receiver has x transactions in the block. This realization
allows us to enumerate all possible scenarios for observation
z. The cumulative probability of observing y, parametrized
by z, given that the receiver has at most k of the transactions
in the block, is:
Pr[x ≤ k; z, m, fS] =
≤
(cid:19)(m−k)fS
(23)
(24)
Pr[y; z, k, m]
eδk
(1 + δk)1+δk
where δk = z−k
(m−k)fS − 1. Finally, using this closed-form equa-
tion, we select a bounding probability β, such as β = 239/240.
We seek a probability β of observing z from a value x∗ or
larger; equivalently, we solve for the complement:
k
k
i =0
i =0
(cid:18)
(20)
(21)
(22)
Figure 15: [Simulation] The fraction of Monte Carlo exper-
iments where x∗  y via Theorem 3 compared to
a desired bound of β = 239/240 (shown as a dashed red line).
arg min
x∗
Pr[x ≤ x∗; z, m, fS] ≤ 1 − β .
(25)
To summarize, x∗ is the smallest number of true positives
such that the cumulative probability of observing y = z − x∗
false positives is at least 1 − β.
For good measure, we validated the theorem empirically,
2
as shown in Fig. 15.
THEOREM 3: Let m be the size of a mempool containing
0 ≤ x ≤ n transactions from a block. Let z = x + y be
the count of mempool transactions that pass through S
with FPR fS , with true positive count x and false positive
count y. Then y∗ ≥ y with probability β when
y∗ = (1 + δ)(m − x∗)fS ,
2(s +√s2 + 8s) and s = − ln(1 − β)
(m − x∗)fS
where δ=1
(26)
.
15
llllllllllllllllllllllllllllllllllllllllllllllllllllll2002000100000.00.10.20.30.40.50.60.70.80.90.9960.9970.9980.9991.0000.9960.9970.9980.9991.0000.9960.9970.9980.9991.000Fraction of block in mempoolFraction of time x* is a lower boundllllllllllllllllllllllllllllllllllllllllllllllllllllll2002000100000.00.10.20.30.40.50.60.70.80.90.9960.9970.9980.9991.0000.9960.9970.9980.9991.0000.9960.9970.9980.9991.000Fraction of block in mempoolFraction of time y* is an upper boundUM-CS, 2019-001
A. Pinar Ozisik, Brian Levine, George Bissias, Gavin Andresen, Darren Tapp, and Sunny Katkuri
(cid:18)
Y =m−x∗
PROOF: First, we solve for x∗ ≤ x with β-assurance using
Theorem 2. We find y∗ = z − x∗ ≥ y by applying Lemma 1 to
, the sum of m − x∗ independent Bernoulli trials
such that Pr[Yi = 1] = fS trials and µ = (m − x∗)fS:
i =1
µ
−
Pr[Y ≥ (1 + δ)µ] ≤ Exp
(27)
for δ ≥ 0. We select 0  0.
We validated this theorem empirically as well, as shown
in Fig. 16.
B THEOREMS FROM SECTION 5.1
THEOREM 4: Relaying a block with n transactions to
a receiver with a mempool (a superset of the block) of m
transactions is more efficient with Graphene Protocol 1
than using an optimally small Bloom filter alone, when
the IBLT uses k ≥ 3 hash functions. The efficiency gains
of Graphene Protocol 1 are Ω(n log2 n).
PROOF: We assume that m = cn for some constant c >
1. Our proof is asymptotic. Thus, according to the law of
large numbers, every value δ > 0 (where δ is defined as
in Theorem 1) is sufficient to achieve β-assurance when
choosing values for a∗, x∗, and y∗. Accordingly, we may
proceed under the assumption that δ = 0, i.e. there is no
need to lower the false positive rate of either Bloom filter to
account for deviations because the observed false positive
rate will always match its expected value asymptotically.
Let f , where 0 < f < 1, be the FPR of a Bloom filter
created in order to correctly identify n ≥ 1 elements from
a set of m ≥ 1 elements. The size of the Bloom filter that
has FPR, f , with n items inserted, is −n log2(f ) bits [16].
Let f = p
m−n , where 0 < p < 1. The expected number
of false positives that can pass through the Bloom filter is
p
= p. Since 0 < p < 1, one out of every 1/p
(m − n)
(m−n)
Bloom filters is expected to fail.
To correctly identify the same set of items, Graphene
instead uses a Bloom filter with f = a
m−n , where we set
a = n/rt since the Bloom filter is optimal, and use an IBLT
with aτ cells (r bytes each) that decodes with probability p.
The expected number of false positives that pass through
Graphene’s Bloom filter is (m − n)
= a. An IBLT with
1 to a items inserted in it decodes with probability 1 − p.
In other words, one out of every 1/p Graphene blocks is
expected to fail.
The difference in size is
(m−n)
a
(cid:18)
(cid:19)
(cid:18)
p
− n log2
m − n
−n log2
−
=n log2(a/p) − arτ
=n(log2 n + log2 1/pτ) − 1)
=n(log2 n + Ω(τ 2−k))
=Ω(n(log2 n)),
(cid:18)
(cid:19)
(cid:19)
a
m − n
+ arτ
(33)
(34)
(35)
(36)
(37)
where Eq. 36 follows from Theorem 1 from Goodrich and
Mitzenmacher [28], given that we have an IBLT with k ≥ 3
hash functions.
2
C FIGURES FOR SECTION 5.3
Fig. 17 shows the decode rate of Protocol 2 when the re-
ceiver is missing some fraction of the block, for block sizes
of 200, 2000 and 10,000. Note that with the use of ping-pong
decoding, the decode rate increases to almost 100%.
16
Graphene: Set Reconciliation Applied to Blockchain Propagation
UM-CS, 2019-001
Figure 17: [Simulation, Protocol 2] Decode rate of Graphene
blocks with a Chernoff bound of β = 239
240, shown by the red
dotted line, as block size and the number of extra transac-
tions in the mempool increases. Error bars represent 95%
confidence intervals.
17
llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll2002000100000.00.10.20.30.40.50.60.70.80.91.01e−051e−041e−031e−051e−041e−031e−051e−041e−03Fraction of blk receiver has in mempoolDecode failure probability (logscale)llwith ping−pongwithout