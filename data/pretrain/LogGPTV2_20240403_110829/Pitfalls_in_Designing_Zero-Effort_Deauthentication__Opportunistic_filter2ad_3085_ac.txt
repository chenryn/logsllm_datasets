### Performance for Legitimate Users

**Figure 4: Performance for legitimate users**

**Figure 4a** illustrates the impact of different window sizes (w) and matching thresholds (m) on the average False Negative Rate (FNR). Our system exhibits a very low FNR, with values ranging from 0-6%, and below 1% for window sizes above 10. In contrast, the original ZEBRA paper [23] reports FNRs in the range of 0-16%.

We also evaluated the duration for which a legitimate user remained logged in, using a fixed window size (w = 20) and matching threshold (m = 60%), as in [23]. On average, each window was 13 seconds long. The low FNRs ensured that no legitimate users were logged out during any of the 10-minute samples. **Figure 4b** shows the fraction of users still logged in after a given number of authentication windows. This result holds true whether allowing one additional failed authentication window before logging out (g = 2) or logging out after the first failed window (g = 1). These findings are consistent with [23], where one legitimate user was logged out when using a stricter grace period (g = 1).

**Table I** presents the confusion matrix for the classification performance of our Interaction Classifier, combining data from all 80 (20 x 4) classifications. The results indicate high accuracy in recognizing events. For example, for typing events, we achieved a precision of 96.9% (15753/16252) and a recall of 96.5% (15753/16332).

| Predicted | Typing | Scrolling | MKKM |
|-----------|--------|----------|-------|
| Typing    | 15753  | 271      | 228   |
| Scrolling | 354    | 2506     | 71    |
| MKKM     | 225    | 2        | 15378 |

### Detection of Innocent Adversaries

To assess the security against an innocent adversary (a different user) who inadvertently uses an unattended terminal, we computed the True Negative Rate (TNR) for mismatched sequences. TNR is the fraction of windows in which the "wrong" user is correctly classified as "different user." Mismatched sequences were synchronized by aligning the starting points of the sequences being compared.

**Figure 5a** shows how different w and m values affect the average TNR (over 20 x 4 classifications) of our system with mismatched traces. For thresholds of 60-70%, a majority of the authentication windows are identified correctly as non-matching. Using w = 20 and m = 60%, **Figure 5b** depicts the fraction of "wrong" users who remain logged in after interacting with the terminal for a given number of windows. A strict grace period (g = 1) logs out 78% of wrong users after the first authentication window and all but one after five windows. For g = 2, 80% of wrong users are logged out after five windows, and all by window 10.

### Malicious Adversaries

#### Naïve All-Activity Attackers

**Figure 6a** presents the average False Positive Rate (FPR) for threshold values (m) between 50% and 70%, and for window sizes (w) in the 5-30 range. The FPR represents the fraction of authentication windows in which the attacker is mistaken for the victim. With a lenient threshold of 50%, FPR values range from 50-80%, and with a strict threshold of 70%, they range from 15-35%. For example, with m = 70% and w = 20, less than one-fifth of the attackers' authentication windows are correct.

Using the same threshold and window size (m = 60% and w = 20), **Figure 6b** shows the fraction of logged-in users as a function of the number of authentication windows. With a strict grace period (g = 1), all attackers are logged out by the seventh authentication window, whereas with g = 2, one attacker remains logged in until window 16 (all others fail at window 10 at the latest). The corresponding number of windows in [23] were 2 and 4.

#### Opportunistic Keyboard-Only Attackers

**Figure 7a** presents the average FPR for different threshold values and window sizes for an opportunistic keyboard-only attacker. The FPRs are notably higher, with an FPR of 70% for m = 60% and w = 20. Even with a stricter threshold of 70%, around half of the windows are incorrectly evaluated as matching. In summary, windows are misclassified as correct ones roughly 20 percentage points more often with an opportunistic keyboard-only attacker compared to a naïve all-activity attacker.

**Figure 7b** shows the fraction of attackers remaining logged in after (n) authentication windows, for different grace periods (g). The advantage of an opportunistic keyboard-only attacker over the naïve all-activity attacker is statistically significant (Wilcoxon signed-rank test, z = −2.928, p = 0.003, r = −0.46). Using g = 1 results in 40% of the attackers remaining logged in throughout the experiment, and g = 2 increases this to 45%.

#### Other Attacks

**Figure 9a** and **Figure 9b** summarize the performance of the opportunistic all-activity attack. Compared to the opportunistic keyboard-only attack, average FPR values are somewhat worse for the attacker, resulting in a higher logout rate. However, this difference is not statistically significant (z = −1.082, r = −0.17, p = 0.279 > 0.05). Opportunistic all-activity attackers are more successful than naïve all-activity attackers, but again, this difference is not statistically significant (z = −1.514, r = 0.24, p = 0.130 > 0.05). For example, with g = 1, all naïve all-activity attackers are logged out after 7 windows, while 25% of the opportunistic all-activity attackers succeed in remaining logged in.

### Summary

Our end-to-end system is functionally comparable to that of [23], with legitimate users remaining logged in at a very high rate and the majority of wrong users quickly logged out. Our system achieves lower FNR for legitimate users compared to [23], which is beneficial for usability. However, experiments with mismatched and desynchronized traces show marked increases in FNR, suggesting that our system is not overly permissive.