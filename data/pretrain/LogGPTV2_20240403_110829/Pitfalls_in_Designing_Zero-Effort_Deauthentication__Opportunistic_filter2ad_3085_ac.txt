windows (with w = 20, m = 60%), for different grace periods (g).
Fig. 4: Performance for legitimate users
Figure 4a shows how different window size (w) and
matching threshold (m) values affect average FNR. As can be
seen, FNR is very low for our system. The original ZEBRA
paper [23] reports FNRs in the range of 0-16% whereas in our
system the FNRs are 0-6%, and below 1% for window sizes
above 10.
We also estimated the length of time (in terms of the
number of windows) for which a legitimate user remained
logged in. For this, we ﬁx w = 20 and m = 60% as in
6
[23]. On average, a window was 13 seconds long. The low
FNRs result in no legitimate users getting logged out in any
of the 10 minute samples. Figure 4b depicts this by plotting
the fraction of users still
logged in after a given number
of authentication windows. The situation is the same when
allowing one additional failed authentication window before
logging a user out (g = 2), or when directly logging the user
out after the ﬁrst failed window (g = 1). This also seems in
line with the results reported in [23], where one legitimate user
was logged out when using a stricter grace period (g = 1).
Table I presents the confusion matrix for the classiﬁcation
performance of our Interaction Classiﬁer. It combines data for
all 80 (20 x 4) classiﬁcations. It shows that our system is very
good at recognizing events accurately. For example, for the
typing events, we obtain a precision of 96.9% (15753/16252)
and a recall of 96.5% (15753/16332).
TABLE I: Confusion matrix for 80 legitimate user samples.
Predicted
Typing
15753
271
228
Scrolling MKKM
354
2506
71
225
2
15378
l
a
u
t
c
A
Typing
Scrolling
MKKM
Detection of Innocent Adversaries: To estimate the security
against an innocent adversary (a different user) who inad-
vertently starts using an unattended terminal where another
user has logged in, we compute the true negative rate (TNR)
for “mismatching” sequences: where the actual
interaction
sequence of one sample is compared against the predicted
interaction sequence of a different sample. With such mis-
matched sequences, the TNR is the fraction of windows in
which the “wrong” user is correctly classiﬁed as “different
user.” Recall that data within a sample (and thus the interaction
sequences extracted from it) are synchronized. When mis-
matching samples to compute TNR, we synchronized traces by
aligning the starting points of the sequences being compared.
Figure 5a shows how different w and m values impact
the average TNR (over 20 x 4 classiﬁcations) of our system
with mismatched traces as input. Especially for thresholds
of 60-70%, a majority of the authentication windows are
identiﬁed correctly as non-matching. Again, using w = 20 and
m = 60%, Figure 5b shows the fraction of “wrong” users who
remain logged in (i.e., incorrectly not deauthenticated) after
interacting with the terminal for a given number of windows.
When the legitimate user is also interacting with a terminal,
it can be expected that a non-zero fraction of actual interactions
by the “wrong user” will accidentally match the predicted
interactions by the legitimate user. As such ZEBRA Authen-
ticator will accept (output 1) for a fraction of authentication
windows. However, as can be seen from the fraction of logged
in users in Figure 5b, a majority of users will quickly get
logged out as any such accidental matches are not sufﬁcient to
keep the user logged in for an extended period of time. Using
a strict grace period (g = 1), 78% of wrong users are logged
out after the ﬁrst authentication window and all but one after
5 windows. For g = 2, 80% of wrong users are logged out
after 5 windows, and all by window 10.
5101520253000.010.020.030.040.050.060.070.080.090.1Window size (w)Average FNR  50%55%60%65%70%5101520253000.10.20.30.40.50.60.70.80.91Windows (w)Fraction of logged in users  g=1g=2V. MALICIOUS ADVERSARIES
Having shown that our end-to-end system is resilient
innocent adversaries, we now consider its security
against
against malicious adversaries who attempt
to intentionally
mimic a victim’s interactions. We consider the four types of
attack scenarios from Section III-B: na¨ıve and opportunistic
all-activity attacks, and two variants of opportunistic keyboard-
only attacks.
In all four cases, we use data from the 20 user sessions.
As before, we use the leave-one-user-out approach: for a given
session, we train Interaction Classiﬁer using the bracelet traces
from the 76 samples from the remaining 19 sessions. For each
type of attack, we then apply the classiﬁer for the correspond-
ing trace in the current sample. Thus, the results for each attack
scenario is the aggregated result of 20 classiﬁcations.
Na¨ıve all-activity: Figure 6a presents the average False Pos-
itive Rate (FPR) for threshold values (m) between 50% and
70%, and for window sizes (w) in the 5-30 range. The FPR
represents the fraction of authentication windows in which
the attacker is mistaken for the victim, i.e., a large enough
fraction of interactions are evaluated as matching. The FPR
values range from 50-80% with a lenient threshold of 50%,
and from 15-35% with a strict threshold of 70%. For example,
with m = 70% and w = 20, less than one ﬁfth of the attackers’
authentication windows are correct.
We choose the same threshold and window size as pre-
viously described (m = 60% and w = 20), and determine
the fraction of logged in users as a function of the number
of authentication windows. This represents how long the
attackers successfully remain logged in. Figure 6b depicts this
fraction for g = 1, 2 . The FPR of 43% from Figure 6a
translates to all users eventually being logged out. With a
strict grace period (g = 1) all attackers are logged out by
the seventh authentication window, whereas with g = 2 one
attacker remains logged in until window 16 (all others fail
at window 10 at the latest). The victim in this one case had
very slow interactions, which made them easier to mimic. The
corresponding number of windows in the ZEBRA paper [23]
were 2 and 4.
The na¨ıve all-activity attacker is comparable to the attacker
modeled in [23]. However, the performance of our system
against such an attacker (as summarized in Figures 6a and 6b)
is more lenient than the corresponding ﬁgures reported in [23].
Nevertheless, we can use the results for the na¨ıve all-activity
attacker as a baseline to compare against more sophisticated
or smart attacker strategies we study next.
Opportunistic keyboard-only: We now consider an attacker
who opportunistically mimics only a subset of the typing inter-
actions. Figure 7a presents average FPR for different threshold
values and window sizes. The FPRs are now noticeably higher.
A threshold of m = 60% and a window size of w = 20 now
produces an FPR of 70%. Even with a stricter threshold of
70%, in around half of the windows, attacker interactions are
incorrectly evaluated as matching the victim’s interactions. In
summary, windows are misclassiﬁed as correct ones roughly
20 percent points more often with an opportunistic keyboard-
only attacker, compared to a na¨ıve all-activity attacker.
(a) Average TNR for different threshold (m) values. Fractions of
windows that correctly identify a wrong user.
(b) Fraction of users remaining logged in after (n) authentication
windows (with w = 20, m = 60%), for different grace periods (g).
Fig. 5: Performance for “wrong” (mismatched) users. Simu-
lated accidental usage of the terminal.
To further evaluate the resilience of our system, we in-
vestigated the impact on FNR if the predicted and actual
interaction sequences are desynchronized. We shifted the ac-
tual interaction sequence in each sample forward in time to
simulate the time delay incurred, for example, when an attacker
mimics his victim. Delays of 200 ms increase the Negative
Rates (NR) from the 0-6% (presented in Figure 4a) to 1-
20%, resulting in 5-10% of legitimate users getting logged
out. Further increasing the delay to 500 ms increases the NR
to 25-70% causing a majority of users to be logged out within
2-4 authentication windows. Thus, despite its low FNRs for
legitimate users, our system is robust because it is sensitive to
delays introduced in mimicking user interactions.
Summary: We therefore conclude that our end-to-end system
is functionally comparable to that of [23]. Legitimate users
remain logged-in at a very high rate, whereas the majority
of wrong users are quickly logged out. Our system achieves
lower FNR for legitimate users compared to [23], which is
good for usability but may also be caused if the system is
too permissive. However, our experiments with mismatched
and desynchronized traces show marked increases in FNR
suggesting that our system is not overly permissive.
7
5101520253000.10.20.30.40.50.60.70.80.91Window size (w)Average TNR  50%55%60%65%70%5101520253000.10.20.30.40.50.60.70.80.91Windows (w)Fraction of logged in "wrong" users  g=1g=2(a) Average FPR for different
attacker windows that are classiﬁed as matching with the bracelet.
threshold (m) values. Fraction of
(a) Average FPR for different
attacker windows that are classiﬁed as matching with the bracelet.
threshold (m) values. Fraction of
(b) Fraction of attackers remaining logged in after (n) authentication
windows, for different grace periods (g).
(b) Fraction of attackers remaining logged in after (n) authentication
windows for different grace periods (g).
Fig. 6: Results for na¨ıve all-activity attackers. Na¨ıve all-
activity attackers try to replicate all mouse-hand movements.
Fig. 7: Results for opportunistic keyboard-only attackers.
Opportunistic keyboard-only attackers choose to replicate only
a part of the keyboard movements of the victim.
These high FPRs translate to almost half of the attackers
remaining successfully logged in for the whole duration of
the experiment. Figure 7b depicts the fraction of logged
in attackers as a function of the number of authentication
windows, using g = 1, 2. Figure 8 shows the same information
in terms of minutes. In terms of remaining successfully logged
in, the advantage of an opportunistic keyboard-only attacker
(Figure 7b) over the na¨ıve all-activity attacker (Figure 6b)
is statistically signiﬁcant (Wilcoxon signed-rank test, z =
−2.928 and p = 0.003 (cid:28) 0.05) with medium effect size
(r = −0.46). In other words, keyboard-only attackers remain
logged in statistically longer than all-activity attackers. Using
g = 1 results in 40% of the attackers remaining logged in
throughout the experiment. A grace period of g = 2 increases
this to 45%.
Given that an opportunistic keyboard-only attacker can
do signiﬁcantly better than the na¨ıve all-activity attacker, we
conclude that the attack scenario used in [23] to demonstrate
the security of ZEBRA is not the most favorable setting for the
adversary. Also, in our experiments the opportunistic attackers
reproduced around 60% of the victims’ typing interactions,
reaching typing speeds of 20-40 words/minute. Even at this
high typing rate, 40-45% of attackers were able to successfully
evade detection throughout the experiment. A more conser-
Fig. 8: Opportunistic keyboard-only attacker: Fraction of
attackers remaining logged in after (t) minutes (with w =
20, m = 60%), for different grace periods (g).
vative strategy would naturally increase the attacker success
rates closer to 100%. To clarify, the number of interactions
generated per unit of time is not bound to the typing speed:
ZEBRA concatenates consecutive typing events into a single
typing interaction of up to 1s in length. Victims who type
slowly may give the attacker more time to mimic. For a
8
5101520253000.10.20.30.40.50.60.70.80.91Window size (w)Average FPR  50%55%60%65%70%5101520253000.10.20.30.40.50.60.70.80.91Windows (w)Fraction of logged in adversaries  g=1g=25101520253000.10.20.30.40.50.60.70.80.91Window size (w)Average FPR  50%55%60%65%70%5101520253000.10.20.30.40.50.60.70.80.91Windows (w)Fraction of logged in adversaries  g=1g=201234567891000.10.20.30.40.50.60.70.80.91Time (t), minutesFraction of logged in adversaries  g=1g=2(a) Average FPR for different
attacker windows that are classiﬁed as matching with the bracelet.
threshold (m) values. Fraction of
(a) Average FPR for different
attacker windows that are classiﬁed as matching with the bracelet.
threshold (m) values. Fraction of
(b) Fraction of attackers remaining logged in after (n) authentication
windows for different grace periods (g).
(b) percentage of attackers remaining logged in after (n) authentica-
tion windows for different grace periods (g).
Fig. 9: Results for opportunistic all-activity attackers. Op-
portunistic all-activity attackers replicate easy mouse-hand
movements of the victim.
Fig. 10: Results for audio-only opportunistic keyboard-only
attackers. Audio-only opportunistic keyboard-only attackers
eavesdrop on the victim and type only when they hear the
victim typing.
malicious attacker, even a short period is enough to cause
damage to the system. The attacker can, for example, mount a
USB drive and execute a script from the drive in mere seconds.
Other Attacks: Having demonstrated that opportunistic
keyboard-only attacks are effective, we now consider two
variations. First we ask whether the opportunistic approach can
be extended successfully to mimicking all types of activities
rather than just typing. Figures 9a and 9b summarize the per-
formance of the opportunistic all-activity attack. Compared
to Figure 7a, average FPR values in Figure 9a are somewhat
worse for the attacker. This results in opportunistic all-activity
attackers being logged out at a higher rate compared to
opportunistic keyboard-only attackers (although this is not
statistically signiﬁcant, with z = −1.082, r = −0.17 and
p = 0.279 > 0.05). This is not surprising since mimicking
all types of interactions is likely to be harder than mimick-
ing typing interactions only. Nevertheless, opportunistic all-
activity attackers are somewhat more successful than na¨ıve
all-activity attackers (but again not statistically signiﬁcant, with
z = −1.514, r = 0.24, p = 0.130 > 0.05). For example, with
g = 1, all na¨ıve all-activity attackers are logged out after 7
windows, while 25% of the opportunistic all-activity attackers
succeed in remaining logged in.