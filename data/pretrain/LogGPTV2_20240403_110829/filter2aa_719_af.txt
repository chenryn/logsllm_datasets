  from	
  several	
  pins	
  (like	
  large	
  QFP	
  or	
  BGA	
  components)	
•  By	
  severing	
  or	
  regulaDng	
  some	
  of	
  those	
  power	
  leads,	
  you	
  can	
  cause	
  chips	
  to	
  misbehave	
•  SomeDmes	
  it’s	
  possible	
  to	
  confuse	
  the	
  chip,	
  but	
  make	
  it	
  responsive	
  to	
  the	
  debugging	
interface	
–  BoOom	
  line,	
  chips	
  are	
  fragile	
  to	
  power	
  ﬂuctuaDons,	
  but	
  there	
  have	
  been	
  huge	
improvements	
  over	
  the	
  past	
  few	
  years.	
SoUware	
  AOacks	
•  Can	
  the	
  device’s	
  soUware	
  be	
  updated?	
–  Check	
  the	
  website	
–  If	
  there’s	
  a	
  soUware	
  update,	
  download	
  it	
  and	
  see	
  if	
you	
  can	
  deconstruct	
  it	
  (lots	
  of	
  info	
  in	
  here)	
–  If	
  you	
  ﬁnd	
  a	
  binary	
  package	
  (like	
  a	
  CAB)	
  you	
  may	
  have	
found	
  the	
  ﬁrmware	
–  Some	
  vendors	
  like	
  to	
  “encrypt”	
  their	
  updates.	
  Most	
  of	
the	
  Dme	
  this	
  a	
  VERY	
  weak	
  system	
  like	
  XOR	
  or	
  XOR	
+/-­‐1	
–  In	
  most	
  cases	
  unless	
  it’s	
  a	
  “secure”	
  device,	
  more	
companies	
  are	
  concerned	
  with	
  IP	
  leak	
  than	
  the	
security	
  of	
  the	
  device	
SoUware	
  AOack	
•  IdenDfying	
  the	
  ﬁrmware	
•  Each	
  device	
  has	
  it’s	
  own	
  way	
  to	
  structure	
soUware	
•  Every	
  Device	
  is	
  Unique,	
  just	
  like	
  all	
  the	
  others	
J!	
SoUware	
  AOack	
ARM:	
– Loader	
  tables	
–  These	
  represent	
  a	
  20	
  byte	
  loader	
  row	
  that	
  tells	
  the	
  program	
  on	
the	
  MPU	
  how	
  to	
  load	
  an	
  overlay	
  into	
  memory	
  on	
  the	
  chip	
  since	
the	
  main	
  chip	
  doesn’t	
  have	
  enough	
  memory	
  to	
  hold	
  it	
  all	
  at	
once.	
  (Hint,	
  the	
  addresses	
  are	
  three	
  bytes	
  long!)	
SoUware	
  AOack	
• 
MSP430	
– 
NoDce	
  the	
  vector	
  table	
  at	
  the	
  0x0000	
  addresses	
– 
seg000:0000FFE0	
  .short	
  0F852h	
– 
seg000:0000FFE2	
  .short	
  0F852h	
– 
seg000:0000FFE4	
  .short	
  0F852h	
– 
seg000:0000FFE6	
  .short	
  0F852h	
– 
seg000:0000FFE8	
  .short	
  0F852h	
– 
seg000:0000FFEA	
  .short	
  0F852h	
– 
seg000:0000FFEC	
  .short	
  0F852h	
– 
seg000:0000FFEE	
  .short	
  0F852h	
– 
seg000:0000FFF0	
  .short	
  0F852h	
– 
seg000:0000FFF2	
  .short	
  0F852h	
– 
seg000:0000FFF4	
  .short	
  0F956h	
– 
seg000:0000FFF6	
  .short	
  0F852h	
– 
seg000:0000FFF8	
  .short	
  0F852h	
– 
seg000:0000FFFA	
  .short	
  0F852h	
– 
seg000:0000FFFC	
  .short	
  0F852h	
– 
seg000:0000FFFE	
  .short	
  0F800h	
SoUware	
  AOack	
• 
AVR	
– 
Again,	
  a	
  vector	
  table	
  to	
  deﬁne	
  what	
  happens	
  to	
  the	
  component	
  upon	
  events	
  like	
  restart,	
  Dmer	
  interrupt,	
  etc.	
– 
ROM:0000	
  TWSI__0:	
  ;	
  CODE	
  XREF:	
  TWSI_j	
– 
ROM:0000	
  jmp	
  __RESET	
  ;	
  External	
  Pin,	
  Power-­‐on	
  Reset,	
  Brown-­‐out	
  Reset	
  and	
  Watchdog	
Reset	
– 
ROM:0000	
  ;	
  End	
  of	
  funcDon	
  TWSI__0	
– 
ROM:0000	
– 
ROM:0002	
  ;	
  -­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐	
– 
ROM:0002	
  .org	
  2	
– 
ROM:0002	
  jmp	
  TWSI_	
  ;	
  2-­‐wire	
  Serial	
  Interface	
– 
ROM:0004	
  ;	
  -­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐	
– 
ROM:0004	
  .org	
  4	
– 
ROM:0004	
  jmp	
  TWSI_	
  ;	
  2-­‐wire	
  Serial	
  Interface	
– 
ROM:0006	
  ;	
  -­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐	
– 
ROM:0006	
  .org	
  6	
– 
ROM:0006	
  jmp	
  TWSI_	
  ;	
  2-­‐wire	
  Serial	
  Interface	
– 
ROM:0008	
  ;	
  -­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐	
– 
ROM:0008	
  .org	
  8	
– 
ROM:0008	
  jmp	
  TWSI_	
  ;	
  2-­‐wire	
  Serial	
  Interface	
– 
ROM:000A	
  ;	
  -­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐-­‐	
– 
ROM:000A	
  .org	
  0xA	
– 
ROM:000A	
  jmp	
  TWSI_	
  ;	
  2-­‐wire	
  Serial	
  Interface	
SoUware	
  AOack	
• 
Xilinx	
  FPGA	
– 
Xilinx	
  bit	
  stream	
----------Bitstream Header----------
Design Name: Unknown
Part Name: 2vp50
Date: Unknown
Time: Unknown
-------------End Header-------------
----------Begin Bitstream-----------
ffffffff - Dummy Word
aa995566 - Sync Word
30008001 - CMD
00000007 - CMD: Reset CRC
30016001 - FLR
000000e1
30012001 - COR
00043fe5
3001c001 - IDCODE
0129e093
3000c001 - MASK Type I
00000000
30008001 - CMD
00000009 - CMD: Switch CCLK Frequency
30002001 - FAR
00000000 - MJA: 0 MNA: 0
30008001 - CMD
00000001 - CMD: Write Configuration
30004000 - FDRI Type II
500910ea - Length: 594154 words (2629 frames)
00800000 - BA: 0 MJA: 0 MNA: 0 Word: 0 (GCLK)
00000140 - BA: 0 MJA: 0 MNA: 0 Word: 1 (GCLK)
– 
Much	
  Thanks	
  to	
  Casey	
  Morford	
  and	
  is	
  work	
  on	
  dynamic	
  reconﬁguraDon	
  of	
  Xilinix	
  chips	
SoUware	
  AOack	
•  Determining	
  other	
  chips	
  structures	
–  Most	
  have	
  diﬀerent	
  version	
  of	
  embedded	
  compilers	
  and	
RTOS	
  (Real	
  Time	
  OperaDng	
  Systems)	
–  Each	
  one	
  has	
  its	
  own	
  “markers”	
  in	
  the	
  binary	
  image	
–  The	
  Code	
  Sorcery	
  (now	
  Mentor	
  Graphics)	
  compilers	
  and	
linkers	
  address	
  overlaying	
  code	
  in	
  a	
  parDcular	
  way	
–  Keil	
  SoUware’s	
  compilers	
  also	
  have	
  a	
  number	
  of	
  markers	
  in	
their	
  loader	
  and	
  vector	
  handling	
  code	
–  Many	
  devs	
  will	
  start	
  with	
  manufacture	
  provided	
  code	
samples	
  (we	
  do),	
  which	
  makes	
  it	
  easier	
  to	
  idenDfy	
–  Look	
  at	
  the	
  order	
  of	
  addresses,	
  segment	
  numbers,	
  and	
ﬂags	
SoUware	
  AOack	
•  Each	
  device	
  has	
  its	
  own	
  mechanism	
  for	
  updates	
–  It	
  may	
  be	
  possible	
  to	
  “man	
  in	
  the	
  middle”	
  a	
  ﬁrmware	
  update	
  and	
obtain	
  the	
  decrypted	
  ﬁrmware.	
–  Some	
  ﬁrmware	
  may	
  be	
  decrypted	
  on-­‐component.	
–  If	
  you	
  ﬁnd	
  a	
  signiﬁcant	
  area	
  of	
  a	
  ﬁle	
  that	
  is	
  a	
  sequence	
  of	
  repeaDng	
characters	
  (say	
  4	
  bytes),	
  there’s	
  a	
  good	
  bet	
  that	
  the	
  “encrypDon”	
  your	
dealing	
  with	
  is	
  simple	
  XOR	
  and	
  that	
  you’re	
  looking	
  at	
  the	
  key.	
–  In	
  the	
  same	
  sense,	
  if	
  you	
  ﬁnd	
  a	
  sizable	
  area	
  where	
  the	
  values	
  are	
incremenDng	
  or	
  decremenDng,	
  you	
  may	
  have	
  found	
  a	
  XOR	
  +n/-­‐n	
  key.	
•  If	
  you	
  work	
  the	
  math	
  backwards,	
  you	
  can	
  ﬁgure	
  out	
  the	
  key,	
  the	
  repeat	
interval,	
  and	
  the	
  progression.	
•  Determine	
  the	
  unit	
  of	
  advancement,	
  the	
  value	
  at	
  the	
  observed	
  locaDons,	
  and	
the	
  oﬀset	
  in	
  those	
  units	
  and	
  work	
  it	
  backwards	
  to	
  get	
  the	
  key	
  to	
  start	
  with.	
•  StarDng	
  Key	
  =	
  (	
  ((known	
  oﬀset)	
  –	
  (start	
  oﬀset))	
  /	
  (size	
  of	
  key)	
  )	
  *	
  (Key	
  at	
known	
  oﬀset)	
•  Roughly.	
  The	
  mulDplicaDon	
  is	
  conﬁned	
  to	
  the	
  key	
  size.	
  Or	
  you	
  can	
  use	
  a	
  “for”	
loop.	
  J	
SoUware	
  AOack	
•  Each	
  component	
  type	
  (family)	
  has	
  its	
  own	
  machine	
language	
•  ARM	
  is	
  not	
  AVR	
  is	
  not	
  Z80	
  is	
  not	
  x86	
  is	
  not	
  PPC.	
•  The	
  operaNonal	
  codes	
  (OP	
  codes)	
  are	
  diﬀerent.	
•  The	
  Peripheral	
  regions	
  (Input	
  /	
  Output	
  regions)	
  are	
diﬀerent.	
–  Some	
  families	
  may	
  have	
  the	
  same	
  general	
  regions,	