larger than the network’s RTT, they also reduce the number of RTT
samples that can be taken, as can be seen in Figure 4(c). Looking
at Figure 4(b), we see that only the VEC observer remains accurate
under burst loss, as the VEC indicates that the spin signal has been
disturbed, allowing the observer to reject the incorrect samples.
4 THE LATENCY SPIN SIGNAL IN TCP
The latency spin signal was originally designed to ensure that pas-
sible latency measurements remain possible when using encrypted
transport headers. However, its simplicity and low overhead make
it a suitable transport-independent and explicit signal, regardless of
whether or not encryption is used. To demonstrate this, we added
the signal to TCP. Though TCP already supports passive RTT mea-
surement through the timestamp option [15], this approach is less
efficient (requiring eight bytes per packet, ten including options
overhead; as opposed to three bits for the latency spin signal, or
three bytes if implemented as a separate TCP option).
In addition to these efficiency gains, the VEC’s ability to signal
known bad samples addresses accuracy issues related to acknowl-
edgment optimizations in modern TCP implementations [5]. Fur-
thermore, the timestamp option exposes much more information
about the operation of the endpoint than it appears at first glance.
TCP implementations simply drive the timestamp signal from the
kernel’s interrupt counter, and different endpoints generally have
a characteristic clock drift which can be used to determine which
addresses belong to the same endpoint [14] and to fingerprint end-
points [19]. In addition, discontinuities in the timestamp sequence
over long periods of time can be used to detect reboots or equivalent
node replacements [2]. Currently, endpoints wishing to avoid these
inferences have no choice but to disable timestamps, losing passive
RTT measurability at the same time.
To explore the applicability of the latency spin signal to TCP, we
implemented the signal in a patch for Linux 4.9 and 4.15, using the
the three reserved flag bits in the TCP header for the spin bit and
the VEC.
Compared to QUIC the TCP spin signal also appears on hand-
shake packets. The client initializes the spin value to one on ini-
tiation, in order to quickly detect issues arising from the use of
the reserved bits during experimentation. In addition, only pack-
ets with a sequence number greater than or equal to the last seen
(as opposed to the maximum packet number) are considered. Our
passive measurement device (Section 2.3) required only minimal
changes to support TCP as well, accounting only for the fact that
the bits are found at a different offset in a different header.
4.1 Evaluation: Comparing Spin and TCP
Timestamp RTT Measurement
We deployed virtual machines running our patched Linux kernel
on cloud nodes in seven networks with a global distribution9 on 25
May 2018, and set up a simple test web server10 on each of them.
All traffic between these nodes was routed through an observation
node running our VPP code in our local, on-campus infrastructure11.
This approach allows us to verify mid-path passive measurability
while still maintaining diverse link characteristics on legs from and
9DigitalOcean VMs in regions NYC1, SFO2, AMS3, SGP1, BLR1, FRA1, and LON1
10see https://github.com/mami-project/three-bits-suffice
11This routing was achieved by two-way network address translation on the machine
running the VPP measurement observer, and has the effect of composing n × m paths
from each access network via ETH to each cloud network.
5040302010010Observer estimate  client estimate [ms]0.000.250.500.751.00ECDFSpin bitPacket numberHeuristicVEC010203040Packet reordering rate [%]0.60.70.80.91.0Fraction of sampleswith |error| < 10 ms010203040Packet reordering rate [%]123Samples per RTTVEC half-RTT100102030Observer estimate  client estimate [ms]0.000.250.500.751.00ECDFSpin bitPacket numberHeuristicVEC05101520Average burst length [packets]0.80.91.0Fraction of sampleswith |error| < 10 ms05101520Average burst length [packets]0.51.01.52.0Samples per RTTVEC half-RTTIMC ’18, October 31–November 2, 2018, Boston, MA, USA
De Vaere et al.
Figure 5: Spin- vs. TS-based RTT estimation over time.
Figure 6: Sample rate per RTT (left plot/axis) and relative er-
ror between VEC- and TS-based estimation (right plot/axis).
to our midpoint. From these measurements we have 49 traces of
120 seconds each.
In addition, we accessed each server from five access networks in
Europe12, also steering traffic past our measurement node. On those
networks where both wired and wireless endpoint connections were
possible, we measured both. This yielded 53 additional traces.
In Figure 5, we illustrate the operation of the latency spin signal
using traces of three examples of RTT measurements taken using
the latency spin signal, compared to per-packet RTT measurements
taken using TCP timestamps (TS). Subfigure (a) shows a typical
inter-datacenter trace: the spin signal measurement stays fairly
close to the minimum of the noisier TS measurement. Subfigure (b),
taken from a node connected via Ethernet to a residential access
router, shows a more typical situation with larger buffers. Subfigure
(c), from a wireless network with a bad case of bufferbloat, shows
an extreme situation with high delay and moderate loss. Here, the
latency spin signal’s sample rate reduces as the RTT increases; yet,
it still provides accurate enough information for rough intra-flow
measurement.
Overall the relative errors between VEC- and TS-based RTT
measurements are small. As we do not have ground truth for the
end-to-end latency, we compare each TS-based RTT sample to the
latest value derived from the spin signal. As shown in the right-side
(red) boxplots in Figure 6, the median error for the inter-datacenter
measurements is -0.03% and -0.04% for the wired access case. For
wireless access, we observed a slightly higher median error of 1.04%,
because the spin signal overestimates the RTT measured by TS.
However, in wireless networks RTT is highly variable and in some
measurement runs we also observed fewer valid samples due to
reordering or loss. As shown by the left-side (white) boxplots, the
median number of samples per estimated average RTT for wireless
runs is still high with 1.94, compared to 1.97 for the data center
case. In the wired case, one of our access nodes experienced a high
amount of packet reordering, probably due to traffic shaping, which
led to a relatively high number of invalid VEC edges and a median
sample rate of 1.82 with high variance. This shows the expected
behavior: invalid samples are filtered out.
12We note that at least one of the involved access routers performed TCP header
manipulation that resulted in a mangled latency spin signal. Handling edge cases in
on-path TCP manipulation is a matter for future work.
5 CONCLUSION
In this paper, we presented a three-bit latency spin signal, explicitly
enabling comparable passive RTT measurement for both TCP and
QUIC. Though this signal is necessary in QUIC, to replace informa-
tion lost through encryption of the transport headers with respect
to TCP, we show that it is also a useful enhancement to TCP, pro-
viding equivalent passive RTT accuracy at a lower sample rate than
timestamp-based passive measurements, with lower overhead and
less potential for endpoint fingerprinting. As this is initial work on
an overarching approach to protocol measurability in the spirit of
Allman et al [1], we now look to future developments. The signal
has a few limitations to address, which ongoing work is focused
on.
First, the simple RTT sample generation method suggested by
Table 1 will reject any RTT samples that experienced a lost or
reordered edge within 1.5 RTT, which may result in an unacceptably
low sample rate for precisely those flows with interesting problems
to debug. Simple heuristics at the observer may allow edges with
VEC 1 and 2 to be used to generate full RTT samples, decreasing
the impact of loss and reordering on the sample rate.
Our implementation of the signal on TCP uses three reserved
bits in the TCP flags word; we chose this approach as opposed
to TCP options for reasons of efficiency, ease of implementation,
and comparable deployability of formerly reserved flags [18] and
new options [11, 12]. While our initial experimentation noted no
stripping of these bits or dropping of packets based on them, mid-
dleboxes that handle these bits in ad-hoc ways could lead to du-
plication of signals or other oddities that a production-ready TCP
implementation would need to detect and correct.
As the signal is intentionally separate from the rest of the trans-
port machinery, any endpoint can simply refuse to participate with-
out negative consequences for end-to-end connectivity. Any plan
for Internet-scale deployment of the signal on endpoints must there-
fore consider the incentives for endpoints to participate by gener-
ating the signal.
Looking toward deployment, the Internet Engineering Task Force
(IETF) QUIC working group has approved experimentation with
the spin bit. Two independent implementations, including one from
a major operating system vendor, have support for the spin bit,
and one telecommunications operator and one network equipment
vendor are actively working on experimental measurements using
the signal.
50607080RTT [ms]a) DC to DCa) DC to DCTCP timestampsSpin signal406080100RTT [ms]b) Wired home network to DCb) Wired home network to DC020406080100120Time [s]05001000RTT [ms]c) Wireless home network to DCc) Wireless home network to DCa) DC to DCb) Wired to DCc) Wireless to DC0.00.51.01.52.0Samples / RTT1050510Error [%RTT]Three Bits Suffice: Explicit Latency Measurement
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
Acknowledgments: The one-bit portion of the latency spin signal was
initially proposed for QUIC by Christian Huitema, following discussions at
the June 2017 interim meeting of the IETF QUIC Working Group in Paris.
Thanks to Christian and the QUIC WG for input on the design leading to
the mechanism described in this paper. Thanks to Manya Ghobadi, our
shepherd, and the anonymous reviewers for their feedback, which signif-
icantly improved the paper. This project has received funding from the
European Union’s Horizon 2020 research and innovation program under
grant agreement No 688421, and was supported by the Swiss State Secre-
tariat for Education, Research and Innovation (SERI) under contract number
15.0268. The opinions expressed and arguments employed reflect only the
authors’ views. The European Commission is not responsible for any use
that may be made of that information. Further, the opinions expressed and
arguments employed herein do not necessarily reflect the official views of
the Swiss Government.
REFERENCES
[1] Allman, M., Beverly, R., and Trammell, B. Principles for Measurability in
Protocol Design. SIGCOMM Comput. Commun. Rev. 47, 2 (May 2017), 2–12.
[2] Beverly, R., Luckie, M., Mosley, L., and Claffy, K. Measuring and Characteriz-
ing IPv6 Router Availability. In Passive and Active Measurement (Brooklyn, USA,
2015), J. Mirkovic and Y. Liu, Eds., Springer International Publishing, pp. 123–135.
[3] Carra, D., Avrachenkov, K., Alouf, S., Blanc, A., Nain, P., and Post, G.
Passive Online RTT Estimation for Flow-Aware Routers Using One-Way Traffic.
In Proceedings of NETWORKING 2010 (Chennai, India, 2010), M. Crovella, L. M.
Feeney, D. Rubenstein, and S. V. Raghavan, Eds., pp. 109–121.
[4] De Vaere, P. Adding Passive Measurability to QUIC. Master’s thesis, ETH Zürich,
2018.
[5] Ding, H., and Rabinovich, M. TCP Stretch Acknowledgements and Timestamps:
Findings and Implications for Passive RTT Measurement. SIGCOMM Comput.
Commun. Rev. 45, 3 (July 2015), 20–27.
[6] Gilbert, E. N. Capacity of a burst-noise channel. The Bell System Technical
Journal 39, 5 (Sept 1960), 1253–1265.
[7] Guo, C., Yuan, L., Xiang, D., Dang, Y., Huang, R., Maltz, D., Liu, Z., Wang, V.,
Pang, B., Chen, H., Lin, Z.-W., and Kurien, V. Pingmesh: A Large-Scale System
for Data Center Network Latency Measurement and Analysis. In Proceedings of
pp. 18–23.
the 2015 ACM SIGCOMM Conference (New York, NY, USA, 2015), SIGCOMM ’15,
ACM, pp. 139–152.
[8] Hemminger, S., et al. Network emulation with NetEm. In Linux conf au (2005),
[9] Langley, A., Riddoch, A., Wilk, A., Vicente, A., Krasic, C., Zhang, D., Yang,
F., Kouranov, F., Swett, I., Iyengar, J., Bailey, J., Dorfman, J., Roskind, J.,
Kulik, J., Westin, P., Tenneti, R., Shade, R., Hamilton, R., Vasiliev, V., Chang,
W.-T., and Shi, Z. The QUIC Transport Protocol: Design and Internet-Scale
Deployment. In Proceedings of the Conference of the ACM Special Interest Group
on Data Communication (Los Angeles, CA, USA, 2017), SIGCOMM ’17, ACM,
pp. 183–196.
[10] Lantz, B., Heller, B., and McKeown, N. A Network in a Laptop: Rapid Proto-
typing for Software-defined Networks. In Proceedings of the 9th ACM SIGCOMM
Workshop on Hot Topics in Networks (New York, NY, USA, 2010), Hotnets-IX,
ACM, pp. 19:1–19:6.
[11] Paasch, C. Network support for TCP Fast Open. Presentation at NANOG 67,
January 2016.
[12] Raiciu, C., Paasch, C., Barre, S., Ford, A., Honda, M., Duchene, F., Bonaven-
ture, O., and Handley, M. How Hard Can It Be? Designing and Implementing
a Deployable Multipath TCP. In Proceedings of the 9th USENIX Conference on
Networked Systems Design and Implementation (San Jose, CA, 2012), NSDI’12,
USENIX Association, pp. 29–29.
[13] Sargent, M., Chu, J., Paxson, D. V., and Allman, M. Computing TCP’s Retrans-
mission Timer. RFC 6298, June 2011.
[14] Scheitle, Q., Gasser, O., Rouhi, M., and Carle, G. Large-scale classification of
IPv6-IPv4 siblings with variable clock skew. In Network Traffic Measurement and
Analysis Conference, TMA 2017, Dublin, Ireland, June 21-23, 2017 (2017), pp. 1–9.
[15] Strowes, S. D. Passively Measuring TCP Round-trip Times. Queue 11, 8 (Aug.
2013), 50:50–50:61.
[16] Trammell, B. A Transport-Independent Explicit Signal for Hybrid RTT Mea-
surement. Internet-Draft draft-trammell-tsvwg-spin-00, IETF Secretariat, July
2018. http://www.ietf.org/internet-drafts/draft-trammell-tsvwg-spin-00.txt.
[17] Trammell, B., and Kuehlewind, M. The QUIC Latency Spin Bit. Internet-Draft
draft-ietf-quic-spin-exp-00, IETF Secretariat, April 2018. http://www.ietf.org/
internet-drafts/draft-ietf-quic-spin-exp-00.txt.
[18] Trammell, B., Kühlewind, M., Boppart, D., Learmonth, I., Fairhurst, G., and
Scheffenegger, R. Enabling Internet-Wide Deployment of Explicit Congestion
Notification. In Passive and Active Measurement (Brooklyn, USA, 2015), J. Mirkovic
and Y. Liu, Eds., Springer International Publishing, pp. 193–205.
[19] Zander, S., and Murdoch, S. J. An Improved Clock-skew Measurement Tech-
nique for Revealing Hidden Services. In Proceedings of the 17th Conference on
Security Symposium (San Jose, CA, 2008), SS’08, USENIX Association, pp. 211–225.