location /{
dosdz
gzipon;
9
 autoindex on;
Nginx 的压缩输出由一组 gzip 压缩指令来实现。我们从示例入手,来学习 gzip 压缩输出。gzip
gzip（GNU-ZIP）是一种压缩技术。经过 gzip 压缩后页面大小可以变为原来的 30%甚至更小,
这个 shell脚本和crontab 配置主要实现的功能为：假设今天的日期为 2009年5月19日,Nginx
另外，还有两项跟自动列目录相关的指令，分别为：
我们经常会看到一些开源软件的下载页面是能够自动列目录的，这一功能 Apache 可以实现，
416k;
第 3章Nginx 的基本配置与优化
---
## Page 33
缓存1小时，如代码3-10所示。
修改，则可以通过 expires 设置浏览器缓存。
年。-1指定“Expires”的值为服务器当前时间-1s，即永远过期。
time 值来获得。
息（起到控制页面缓存的作用）。
页面的阅览。缓存的方式节约了网络的资源，提高了网络的效率。
进行存储，当访问者再次请求这个页面时，浏览器就可以从本地磁盘显示文档，这样就可以加速
3.6
例：对常见格式的图片、Flash 文件在浏览器本地缓存 30 天，对 js、css 文件在浏览器本地
autoindex_localtime [ onloff ］ 
设定索引时文件大小的单位（B、KB、MB 或GB）
autoindex_exact_size [ onioff j
假设一个HTML 页面中会引用一些JavaScript 文件、图片文件，而这些格式的文件很少会被
epoch 指定“Expires” 的值为 1 January,1970, 00:00:01 GMT。
可以在 time 值中使用正数或负数。“Expires”头标的值将通过当前系统时间加上您设定的
用途：使用本指令可以控制 HTTP 应答中的“Expires”和“Cache-Control”的 Header 头信
作用域：http，
默认值：expires off
语法：expires [timelepochlmaxloff]
浏览器缓存可以通过 expires 指令输出 Header 头来实现，expires 指令的语法如下:
浏览器缓存（Browser Caching）是为了加速浏览，浏览器在用户磁盘上对最近请求过的文档
正数或零：Cache-Control: max-age= #,#为您指定时间的秒数。
负数：Cache-Control: no-cache。
“Cache-Control”头标的值由您指定的时间来决定。
开启以本地时间来显示文件时间的功能。默认为关（GMT时间）。
Nginx的浏览器本地缓存设置
 server, location
3.6Nginx 的浏览器本地缓存设置
Www.TopSage实姑wginx：取代 Apache 的高性能 Web 服务器
“Cache-Control”的值为 10
---
## Page 34
实战 Nginx：取代Apache的高性能Wetw双务器TopSage.com
location~
代码3-10
location~
8
expires 1h;
expires30d;
.*\.(jslcss)?$
.*\.(gifljpgljpeglpnglbmp|swf)$
第3章Nginx的基本配置与优化
TopSage.com
---
## Page 35
品共同组成了一个强大的Web应用程序平台。
些产品。Linux 操作系统、Apache 服务器、MySQL 数据库和 Perl、PHP 或 Python 语言，这些产
件之间的协作，已经创建了某些扩展功能。目前，几乎在所有的Linux 发布版中都默认包含了这
年里，这些组件的兼容性不断完善，在一起应用的情形变得更加普遍。并且它们为了改善不同组
是影响较大的开源软件，拥有很多共同特点，这就导致了这些组件经常在一起使用。在过去的几
这个术语。随之LAMP技术成了开源软件业的一盏真正的明灯。
出的LAMP 这一术语很快就被市场接受。O'Reilly和 MySQL AB更是在英语人群中推广普及了
组合（由 4种技术开头的字母组成）。由于IT 世界众所周知的对缩写的爱好，Michael Kunze 提
代 Linux 操作系统、Apache 网络服务器、MySQL 数据库和 PHP（Perl 或 Python）脚本语言的
写作的一篇关于自由软件如何成为商业软件替代品的文章时，创建了LAMP 这个名词，用来指
架构。LAMP 这个特定名词最早出现在1998 年。当时，Michael Kunze 为德国计算机杂志《c't》
现在，由于 Nginx 拥有超越 Apache 的卓越性能，LAMP 架构正在逐渐被 LNMP 架构所取代。
虽然这些开放源代码程序本身并不是专门设计成同另外几个程序一起工作的，但由于它们都
在互联网服务器架构中，我们经常可以听到LAMP（Linux+Apache+Mysql+Perl/PHP/Python）
Nginx 与 PHP (FastCGI)
Www.TopSage密敏Nginx：取代 Apache 的高性能Web 服务器
的安装、配置与优化
---
## Page 36
实战 Nginx：取代 Apache 的高性能 Web孤低据TopSage.com
环境为：CentOS Linux 5.3（Linux 2.6+内核），另在 RedHat AS4上也可安装成功。
于 PHP 的 FastCGI。
以将站点的传输速度提升很多而不必增加 CPU 负担。
此举极大提升了依靠脚本运行站点的性能。
重新载入全部扩展并重新初始化全部数据结构。使用 FastCGI，所有这些都只在进程启动时发生
进程管理器的下--个连接。而在一般的普通 CGI模式中，php-cgi 在此便退出了。
当 FastCGI子进程关闭连接时，请求便告知处理完成。FastCGI子进程接着等待并处理来自FastCGI
Web 服务器将 CGI 环境变量和标准输入发送到 FastCGI 子进程 php-cgi。
套接字方式转发到FastCGI 主进程，FastCGI 主进程选择并连接到一个 CGI 解释器（子进程）。
程。启动 php-cgi FastCGI 进程时，可以配置以 TCP 和 UNIX 套接字两种方式启动。
待来自 Web Server 的连接。在本文中，采用 PHP-FPM 进程管理器启动多个 php-cgi FastCGI 进
Fail-Over 特性等。
如果 CGI 解释器保持在内存中并接受 FastCGI 进程管理器调度，则可以提供良好的性能、伸缩性
在内存中并因此获得较高的性能。众所周知,CGI解释器的反复加载是CGI 性能低下的主要原因
与 PHP（FastCGI）的安装、配置与优化。
一次。
40
接下来，我们开始安装、搭建LNMP（Linux+Nginx+Mysql+PHP）平台。本文中的操作系统
所以，你可以想象普通的 CGI 模式有多慢。每一个 Web 请求 PHP 都必须重新解析 php.ini
（2）须要使用的系统资源更少。由于服务器不用在每次需要时都载入PHP 解释程序，你可
PHP FastCGI 的优点:
（3)FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回 Web 服务器（Nginx）。
FastCGI 的工作原理是：
FastCGI 是语言无关的、可伸缩架构的 CGI 开放扩展，其主要行为是将 CGI 解释器进程保持
提高 PHP（FastCGI），
（3）不需要对现有的代码作任何改变。运行在 Apache+PHP 上的程序，无须修改即可适用
（1）PHP 脚本运行速度更快。PHP 解释程序被载入内存而不用每次需要时从存储器读取,
（2）当客户端请求到达Web 服务器（Nginx）时，Web 服务器将请求采用TCP 协议或UNIX
（1）FastCGI 进程管理器自身初始化，启动多个 CGI解释器进程（多个 php-cgi进程）并等
第4章Nginx与 PHP（FastCGl）的安装、配置与优化
，那么FastCGI是什么呢？
---
## Page 37
wgethttp://blog.s135.com/soft/1inux/nginx_php/rpm/i386/freetype-devel-2.1.9-1.i386.rpm
wgethttp://blog.s135.com/soft/1inux/nginx_php/rpm/i386/1ibjpeg-devel-6b-33.i386.rpm
代码4-1
RedHat可以直接利用CentOS的RPM包安装，以下是RPM包的下载网址：
openldap-devel nss_ldap openldap-clients openldap-servers
e2fsprogs-devel krb5krb5-devellibidn libidn-devel openssl openssl-devel openldap
freetype-devel 1ibxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2
LANG=C
sudo-s
行版可从安装光盘中找到这些程序库的RPM包，进行安装）：
4.1获取相关开源程序
rpm-ivhfreetype-devel-2.1.9-1.i386.rpm
rpm-ivh1ibjpeg-devel-6b-33.i386.rpm
“rpm-qalgrep libjpeg”的命令查看RPM包是否存在，但通常“xxx-devel”不存在，须要安装）。
glib2-devel bzip2bzip2-develncurses ncurses-devel curl curl-devel e2fsprogs
I.i386系统如代码4-1：
http://rpm.pbone.net/
http://mirrors.163.com/centos/4/os/i386/CentOS/RPMS/
RedHat等其他Linux发行版可从安装光盘中找到这些程序库的RPM包（事先可通过类似
利用CentOSLinux系统自带的yum命令安装、升级所需的程序库（RedHat等其他Linux发
（4）RedHatAS4系统环境，通常情况下缺少包安装支持：
http://www.rpmfind.net/
（3）RPM包搜索网站：
http://mirrors.163.com/centos/5/os/x86_64/CentOS/
http://mirrors.163.com/centos/5/os/i386/CentOs/
（2）RedHatAS5&CentOS5:
http://mirrors.163.com/centos/4/os/x86_64/CentOS/RPMS/
(1）RedHatAS4&CentOS4:
2.
1.【适用CentOS操作系统】
【适用RedHat操作系统】
4.1获取相关开源程序
www.TopSage.ohNginx：取代Apache的高性能Web服务器
家网
41
---
## Page 38
实战 Nginx:取代 Apache 的高性能 Web吸奢解.TopSage.com
Curl 等命令下载以下软件），如代码4-4:
wget http://pecl.php.net/get/imagick-2.2.2.tgz
wget http://blog.s135.com/soft/linux/nginx_php/imagick/ImageMagick.tar.gz
wget http://pecl.php.net/get/PDo_MYSQL-1.0.2.tgz 
wget http://bart.eaccelerator.net/source/0.9.5.3/eaccelerator-0.9.5.3. tar.bz2
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-7.9.tar.gz 
1175740843&big_mirror=0"
1194463373&big_mirror=0"
wget http://sysoev.ru/nginx/nginx-0.8.15.tar.gz
mkdir -p /data0/software
代码4-3
rpm -ivh 1ibpng-devel-1.2.7-1.x86_64.rpm
wget http://pecl.php.net/get/memcache-2.2.5.tgz
x86_64.rpm
wget http://blog.s135.com/soft/linux/nginx_php/rpm/x86_64/1ibpng-devel-1.2.7-1.
rpm -ivh freetype-devel-2.1.9-1.x86_64.rpm 
x86_64.rpm
wget http: //blog.s135.com/soft/linux/nginx_php/rpm/x86_64/freetype-devel-2.1.9-1.
rpm -ivh 1ibjpeg-devel-6b-33.x86_64.rpm
x86_64.rpm
wget http://blog.s135.com/soft/1inux/nginx_php/rpm/x86_64/1ibjpeg-devel-6b-33.
代码4-2
rpm -ivh 1ibpng-devel-1.2.7-1.i386.rpm
wget http://blog.s135.com/soft/linux/nginx_php/rpm/i386/libpng-devel-1.2.7-1.i386.rpm
6
tet
et
ret
124
/data0/software
"http://downloads.sourceforge.net/mcrypt/libmcrypt-2.5.8.tar.gz? modtime=
本文中提到的所有开源软件为截止到 2009 年 09月18日的最新稳定版。
下载程序源码包：
3．【适用 CentOS、RedHat 及其他 Linux 操作系统】
II. x86_64系统如代码4-2:
（1）从软件的官方网站下载如代码4-3:
第 4 章Nginx与 PHP（FastCGl）的安装、配置与优化
---
## Page 39
make
./configure
cd mhash-0.9.9.9/
tar zxvf mhash-0.9.9.9.tar.gz
make install
./configure
cd libltdl/
/sbin/ldconfig
make install
./configure
cd libmcrypt-2.5.8/
tar zxvf libmcrypt-2.5.8.tar.gz
./configure --prefix=/usr/local
tar zxvf libiconv-1.13.tar.gz
代码4-5
4.2
wget http://blog.s135.com/soft/linux/nginx_php/imagick/imagick-2.2.2.tgz
wget http://blog.s135.com/soft/linux/nginx_php/imagick/ImageMagick.tar.gz
wget http://blog.s135.com/soft/linux/nginx_php/pdo/PDO_MYSQL-1.0.2.tgz
0.9.5.3.tar.bz2
wgeth
wgeth
wget
cd
nake
make
台
wget
wget
wget
wget http://blog.s135.com/soft/linux/nginx_php/nginx/nginx-0.8.15.tar.gz
cd/data0/software
mkdir -p /data0/software
代码4-4
台
..
ake install
et
get
../../
（1）编译安装 PHP 5.2.10 所需的支持库，代码如 4-5 所示:
: http://blog.s135.com/soft/linux/nginx_php/phpfpm/php-5.2.10-fpm-0.5.11.diff.gz
: http://blog.s135.com/soft/linux/nginx_php/php/php-5.2.10.tar.gz
http://blog.s135.com/soft/linux/nginx_php/pcre/pcre-7.9.tar.gz 
http://blog.s135.com/soft/1inux/nginx_php/mhash/mhash-0.9.9.9.tar.gz
http://blog.s135.com/soft/linux/nginx_php/memcache/memcache-2.2.5.tgz
http://blog.s135.com/soft/1inux/nginx_php/mcrypt/mcrypt-2.6.8.tar.gz
http://blog.s135.com/soft/linux/nginx_php/mcrypt/libmcrypt- 2.5.8.tar.gz
http://blog.s135.com/soft/linux/nginx_php/libiconv/libiconv-1.13.tar.gz
http://blog.s135.com/soft/linux/nginx_php/mysql/mysql-5.1.38.tar.gz 
安装PHP5.2.10（FastCGI 模式）
 --enable-ltdl-install
4.2
安装 PHP 5.2.10（FastCG! 模式）
www.TopSage实确Wginx：取代 Apache 的高性能 Web 服务器
43
---
## Page 40
实战Nginx：取代Apache的高性能Wew碳麻器TopSage.com
--user=mysql
--basedir=/usr/local/webserver/mysql
/usr/local/webserver/mysql/bin/mysql_install_db
mkdir -p /data0/mysql/3306/data/
持MySQL扩展库，能够连接其他服务器上的MySQL数据库，那么，以下几步无须执行。
8
chmod+w/usr/local/webserver/mysql
make&&makeinstall
--with-readline --with-ssl --with-embedded-server--enable-local-infile
cdmysql-5.1.38/
tar zxvf mysql-5.1.38.tar.gz
/usr/sbin/useradd-gmysqlmysql
/usr/sbin/groupaddmysql
代码4-6
8
make install
make
./configure
/sbin/ldconfig
cd mcrypt-2.6.8/
--with-plugins=innobase
--with-extra-charsets=complex--enable-thread-safe-client --with-big-tables
/configure--prefix=/usr/local/webserver/mysql/--enable-assembler
tar zxvf mcrypt-2.6.8.tar.gz
make install
44
2）以mysql用户账号的身份建立数据表：
-s/usr/local/1ib/1ibmhash.so.2.0.1/usr/1ib/1ibmhash.so.2.0.1
-s/usr/local/1ib/libmcrypt.la/usr/lib/libmcrypt.la
/
3）创建my.cnf配置文件：
1）创建MySQL数据库存放目录：
如果你想在这台服务器上运行MySQL数据库，则执行以下几步。如果你只是希望让PHP支
-S
-S
-S
-S
-S
-S
（2）编译安装MySQL5.1.38所需的代码如4-6所示：
6/usr/local/lib/libmhash.so.2/usr/lib/libmhash.so.2
/usr/local/lib/libmhash.so/usr/lib/libmhash.so
/usr/local/lib/libmhash.la
/usr/local/lib/libmhash.a/usr/lib/libmhash.a
s/usr/local/1ib/1ibmcrypt.so.4.4.8/usr/1ib/1ibmcrypt.so.4.4.8
s /usr/local/lib/libmcrypt.so.4 /usr/lib/libmcrypt.so.4
/usr/local/lib/libmcrypt.so/usr/lib/libmcrypt.so
第4章Nginx与PHP（FastCGI）的安装、配置与优化
/usr/lib/libmhash.la
--datadir=/data0/mysql/3306/data
弘网
---
## Page 41
read_buffer_size = 1M
expire_logs_days = 7 
max_binlog_size = 512M
max_binlog_cache_size = 8M
binlog_format = MIxED
binlog_cache_size = 4M
log-bin = /data0/mysql/3306/binlog
max_heap_table_size
tmp_table_size = 246M
default_table_type = MyISAM
default-storage-engine
query_cache_limit = 2M
thread_concurrency
thread_cache_size = 
join_buffer_size =
datadir = /data0/mysql/3306/data
basedir = /usr/local/webserver/mysql
user =
#default-character-set = utf8
no-auto-rehash
prompt="(\u:blog.domain.com:) [\d]> "
socket
default-character-set = utf8
代码4-7