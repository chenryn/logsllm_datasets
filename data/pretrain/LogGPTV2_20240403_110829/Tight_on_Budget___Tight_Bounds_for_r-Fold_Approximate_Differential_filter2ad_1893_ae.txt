each new bucket is composed of two previous buckets, the bucket factor actually only changes for one half of
the values: the evenly indexed buckets BT (2i) with factor f 2i are now moved into buckets BsT (i) with the
same factor (f 2)i and thus their EC terms are still correct. The other half of buckets BT (2i − 1) with factor
f 2i−1 are moved into the same buckets BsT (i) with factor (f 2)i and thus the EC terms need to be modiﬁed
to capture this change in the bucket factor, based on the previous EC terms (cid:96)T and bucket values BT :
(cid:18) 1
(cid:19)
(cid:96)sT (i) := (cid:96)T (2i − 1) + BT (2i − 1)
f 2i−1 −
1
f 2i
+ (cid:96)T (2i).
Deﬁnition 7 (Privacy buckets with error correction terms). Let T be a valid composition tree with n := nT
and let N = {−n, . . . , n}. We deﬁne AT /BT privacy buckets with EC terms as as follows. BT , fT , and nT
are deﬁned exactly as in Deﬁnition 4, whereas ˜(cid:96)T , (cid:96)T , and uT are deﬁned as follows
(cid:40)(cid:80)
(cid:40)˜(cid:96)l(A,B,f,n)(i)
0
0
x∈U ,ι(x)=i PB(x) − PA(x)
f i
if i ∈ N
if i = ∞
if i ∈ N \ {−n}
if i ∈ {−n,∞}
˜(cid:96)l(A,B,f,n)(i) :=
(cid:96)l(A,B,f,n)(i) :=
ul(A,B,f,n) :=1
For composition we require that fT1 = fT2 and we write f = fT1. To ease readability we deﬁne
V (j, k, x, y) = BT1 (j)
f j y(k) + BT2 (k)
f k x(j) + x(j)y(k) and based on V we deﬁne the EC terms as
To ease the readability we deﬁne a function W (i, x) := x(2i − 1) + B1(2i − 1)
deﬁne the EC terms as
(cid:19)
+ x(2i). We
1
T1 − 1
f 2i−1
f 2i
T1
(cid:80)
(cid:80)
j+k=i V (j, k, ˜(cid:96)T1, ˜(cid:96)T2)
j+k≤−n V (j, k, ˜(cid:96)T1 , ˜(cid:96)T2 )
(cid:40)(cid:80)
j+k=i V (j, k, (cid:96)T1, (cid:96)T2)
0
˜(cid:96)T1×T2 (i) :=
(cid:96)T1×T2 (i) :=
0
uT1×T2 (i) :=uT1 + uT2
if i ∈ N \ {−n}
if i = −n
if i = ∞
if i ∈ N \ {−n}
if i ∈ {−n,∞}
(cid:18)
W (i, ˜(cid:96)T1 )
(cid:40)
˜(cid:96)T1(−n)
0
W (i, (cid:96)T1)
0
˜(cid:96)sT1 (i) :=
(cid:96)sT1 (i) :=
usT1 (i) :=(cid:100)uT1/2(cid:101) + 1
20
if i ∈ [−n/2 + 1, n/2]
i = −n/2
otherwise
if i ∈ [−n/2 + 1, n/2]
otherwise
4.2 Buckets and error correction terms per element
Before we can show the ﬁrst helpful lemmas for the soundness of our error correction (EC) terms, we introduce
the impact that each individual event x has on the bucket terms that are inﬂuenced by x. We ﬁrst simply
deﬁne these terms per element separately and then continue by showing that each bucket value (and EC
term) is simply the sum over the respective terms of all elements contributing to this bucket. This marks a
signiﬁcant step in the correctness (and tightness) of our results: Although we only consider a few values (one
bucket value and one EC value per bucket) we still capture all individual events. The only exception to this
precision then comes from misplaced events, which we will analyze subsequently. To distinguish terms per
element from our previous (accumulated) terms, we mark terms considering only individual (atomic) events
with a special symbol C.
Deﬁnition 8 (Privacy buckets with EC terms per element). Let T be a valid composition tree with n := nT
an f := fT and N = {−n, . . . , n}.
For T = l(A, B, f, n) with UT =: U, we deﬁne for all x ∈ U
C
l(A,B,f,n)(x) := PA(x)
B
C
˜(cid:96)
l(A,B,f,n)(x) :=
C
(cid:96)
l(A,B,f,n)(x) :=
PA(x)
ιl(A,B,f,n)(x)
f
PB(x) −
0
C
l(A,B,f,n)(x)
0
ιl(A,B,f,n)(x) ∈ N,
ιl(A,B,f,n)(x) = ∞,
ιl(A,B,f,n)(x) ∈ N \ {−n} ,
ιl(A,B,f,n)(x) ∈ {−n,∞} .
(cid:40)
(cid:40)˜(cid:96)
(cid:33)
(cid:33)
For T = T1 × T2with Ui = UTi (for i ∈ {1, 2}), we deﬁne for all x = (x1, x2) with x1 ∈ U1 and x2 ∈ U2
C
T1×T2(x) := BT1(x1) · BT2(x2)
B
and we deﬁne the EC terms as
C
˜(cid:96)
T1×T2 (x) :=
(cid:32)
(cid:32)
C
T1(x1)
if ιT1×T2 (x) ∈ {−n, . . . , n}
C
C
T2(x2) + ˜(cid:96)
˜(cid:96)
T1 (x2)
C
B
T1(x1)
f ιT1 (x1) + ˜(cid:96)
if ιT1×T2 (x) ∈ {∞}
C
˜(cid:96)
T1×T2 (x) := 0
if ιT1×T2 (x) ∈ {−n + 1, . . . , n,∞}
C
(cid:96)
T1×T2(x) :=
C
B
T1(x1)
C
T1(x1)
f ιT1 (x1) + (cid:96)
C
(cid:96)
T2(x2) + (cid:96)
C
T1 (x2)
(cid:32)
(cid:32)
(cid:33)
C
B
T2(x2)
f ιT2 (x2) + ˜(cid:96)
C
T2(x2)
C
C
T1(x1)˜(cid:96)
T2(x2)
− ˜(cid:96)
(cid:33)
C
B
T2(x2)
C
T2(x2)
f ιT2 (x2) + (cid:96)
C
C
− (cid:96)
T2(x2)
T1(x1)(cid:96)
if ιT1×T2 (x) ∈ {−n,∞}
C
T1×T2 (x) := 0.
(cid:96)
For a squaring node (T = sT1), we keep the bucket value as B
C
sT1 (x) := B
C
T1(x1) and we deﬁne the EC
21
terms as follows for f = fT1 :
if ιT1(x) ∈ {−n, . . . , n}
(cid:18) 1
C
T1(x) ·
f ιT1 (x) −
C
C
sT1 (x) := ˜(cid:96)
˜(cid:96)
T1(x) + B
if ιT1(x) ∈ {∞}
C
˜(cid:96)
sT1(x) := 0
(cid:18) 1
f ιT1 (x) −
if ιT1(x) ∈ {−n + 1, . . . , n}
C
C
T1(x) + B
(cid:96)
sT1 (x) := (cid:96)
C
T1(x) ·
if ιT1(x) ∈ {−n,∞}
C
sT1(x) := 0.
(cid:96)
(cid:19)
(cid:19)
1
f 2·(cid:100)ιT1 (x)/2(cid:101)
1
f 2·(cid:100)ιT1 (x)/2(cid:101)
We now show our ﬁrst important lemma for the soundness of our buckets and EC terms: the terms we
deﬁned just previously indeed characterize the impact of each individual event on the overall bucket values
and EC terms. These terms indeed are just the sum of the respective values per element for all elements of
an index that equals the bucket index.
Lemma 8 (All values are sums over atomic events). Let T be a valid composition tree, labeled with n ∈ N .
 BT (i) =(cid:80)
Then, the following statements hold for all i ∈ {−n, . . . , n,∞} and x ∈ UT :
 ˜(cid:96)T (i) =(cid:80)
 (cid:96)T (i) =(cid:80)
C
x∈U s.t. ιT (x)=i B
T (x)
C
˜(cid:96)
T (x)
x∈U s.t. ιT (x)=i
C
T (x)
x∈U s.t. ιT (x)=i (cid:96)
Proof. We show the lemma via structural induction over T .
If T = l(A, B, f, n): Let i ∈ {−n, . . . , n,∞} and x ∈ UT .
C
T (x) = PA(x) (c.f., Deﬁnition 8). Thus, B
 By deﬁnition, B
x s.t. ι(x)=i 0 =(cid:80)
 If i ∈ {−n, . . . , n}, then ˜(cid:96)T (i) =(cid:80)
0 =(cid:80)
 If i ∈ {−n + 1, . . . , n}, then (cid:96)T (i) = (cid:80)
x s.t. ι(x)=i 0 =(cid:80)
(cid:96)T (i) = 0 =(cid:80)
x s.t. ι(x)=i
x s.t. ι(x)=i PB(x) − PA(x)
C
˜(cid:96)
T (x).
x s.t. ι(x)=i PB(x) − PA(x)
C
x s.t. ι(x)=i (cid:96)
T (x).
C
T (i) =(cid:80)
f i =(cid:80)