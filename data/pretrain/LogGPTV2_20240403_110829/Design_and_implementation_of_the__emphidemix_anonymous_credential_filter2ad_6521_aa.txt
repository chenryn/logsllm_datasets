# Design and Implementation of the idemix Anonymous Credential System

**Authors:**
- Jan Camenisch
- Els Van Herreweghen

**Affiliation:**
- IBM Research, Zurich Research Laboratory
- 8803 Rüschlikon, Switzerland
- Email: {jca,evh}@zurich.ibm.com

## Abstract
Anonymous credential systems [8, 9, 12, 24] enable authenticated and accountable transactions while preserving user anonymity. These systems are crucial for protecting privacy in online interactions.

In this paper, we present the design and implementation of an anonymous credential system based on protocols developed by [6]. The system leverages high-level primitives and interfaces, facilitating integration into access control systems. A prototype was implemented in Java, and we demonstrate its use through a practical deployment scenario.

**Categories and Subject Descriptors:**
- E.3 [Data]: Data Encryption—Public key cryptosystems

**General Terms:**
- Design, Security

**Keywords:**
- Privacy, Anonymous Credential Systems, Cryptographic Protocols

## 1. Introduction
Protecting user privacy in Internet and web-based transactions is essential for the widespread acceptance and use of online services. Techniques for anonymizing communication channels between users and service providers, such as [26, 18, 27], can help minimize the release of personal information. However, these methods may not fully address the need for authentication and accountability.

Service providers often require users to prove their identity or possession of specific credentials. Traditional certificates, like those defined by X.509 [11] or SPKI [2], can be linked across different uses, potentially compromising user anonymity. An anonymous credential system (or pseudonym system) [8, 9, 12, 24] addresses this issue by allowing organizations to know users only by pseudonyms, which cannot be linked to each other.

This paper describes the design and implementation of idemix, a prototype of the anonymous credential system proposed by Camenisch and Lysyanskaya [6]. We use high-level primitives to explain the system's functionality, making it easier to reason about security and privacy features. Additional modules support easy configuration, creation, management, and deployment of idemix-based applications. We also provide an example to demonstrate the use of the prototype in real-world scenarios.

The paper is organized as follows:
- Section 2 outlines the idemix protocols, pseudonyms, and credentials.
- Section 3 introduces the high-level primitives.
- Section 4 details the architecture and implementation of the prototype.
- Section 5 demonstrates the use of the prototype with a practical scenario.
- Section 6 discusses security and infrastructure management issues.
- Section 7 presents conclusions and future work.

## 2. idemix Protocols, Pseudonyms, and Credentials

### 2.1 Basic Credential Protocols
The core of the idemix system consists of protocols for issuing and showing credentials, as described in [6]. The entities in the system include users, who obtain and show credentials, and organizations that issue and verify credentials. Users have a master secret linked to all their pseudonyms and credentials, while organizations use public/private key pairs for issuing and verifying credentials.

#### Pseudonym Registration and Credential Issuance
- **Pseudonym Registration:** A user \( U \) contacts an issuing organization \( OI \) and establishes a pseudonym \( N \).
- **Credential Issuance:** If \( N \) is eligible, \( OI \) generates a credential \( C \) by signing a statement containing \( N \) and any attributes, and sends \( C \) to \( U \).

#### Credential Verification
- **Credential Showing:** \( U \) shows \( C \) to a verifying organization \( OV \) using a zero-knowledge proof, demonstrating possession of the credential without revealing additional information.
- **Unlinkability:** Different showings of the same credential are unlinkable, even if \( OV \) and \( OI \) are the same organization.

### 2.2 Credential Options and Attributes
Credentials can have options (e.g., one-show, multi-show) and attributes. One-show credentials include an off-line double-spending test, making multiple uses detectable. Attributes can include expiration dates, user age, and credential subtypes. When showing a credential, users can choose which attributes to reveal and what to prove about them.

### 2.3 Parameters of the Show Protocol

#### 2.3.1 De-Anonymizable Show of a Credential
De-anonymization mechanisms allow revealing a user's identity (global de-anonymization) or pseudonym (local de-anonymization). Both types are optional and require the user's cooperation. A de-anonymizing organization \( OD \) with a public-private key pair (PKD, SKD) is involved. When showing a credential, the user encrypts the pseudonym \( N \) with \( OD \)'s public key, ensuring verifiability.

## 3. High-Level Primitives
High-level primitives abstract the complexity of cryptographic protocols, allowing for easier reasoning about security and privacy. These primitives hide the differences between actual protocols while providing a clear interface for system integration.

## 4. Architecture and Implementation
The prototype is implemented in Java, with a modular architecture supporting easy configuration, creation, management, and deployment of idemix-based applications. Additional modules facilitate resource access control and credential issuance decisions.

## 5. Demonstration Scenario
We demonstrate the use of the prototype with a practical scenario, illustrating how it can be integrated into real-world applications.

## 6. Security and Infrastructure Management
This section discusses the security and infrastructure management issues related to the deployment of idemix, including potential vulnerabilities and best practices.

## 7. Conclusions and Future Work
We conclude by summarizing the contributions of our work and outlining future research directions, including the implementation of advanced features such as all-or-nothing non-transferability and signature functionality.

---

**Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.**

**CCS'02, November 18–22, 2002, Washington, DC, USA. Copyright 2002 ACM 1-58113-612-9/02/0011 ...$5.00.**