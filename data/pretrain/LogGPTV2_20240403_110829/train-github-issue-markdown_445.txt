### Issue Description

In the `numpy/distutils/fcompiler/gnu.py` file, there is a piece of code that sets the `MACOSX_DEPLOYMENT_TARGET` environment variable. This code snippet is as follows:

```python
import sysconfig
target = sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')
if not target:
    target = '10.9'
    s = f'Env. variable MACOSX_DEPLOYMENT_TARGET set to {target}'
    warnings.warn(s, stacklevel=2)
os.environ['MACOSX_DEPLOYMENT_TARGET'] = target
```

On macOS Big Sur, `sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')` can return an integer (e.g., 11), but the `os.environ` dictionary requires the value to be a string. This discrepancy causes a `TypeError` and prevents `numpy` from compiling from source, which is particularly problematic in the context of Sagemath, where `numpy` is compiled from source.

### Error Message

The error message when attempting to build `numpy-1.19.4` is as follows:

```
Building from source results in
    building library "npymath" sources
    Traceback (most recent call last):
      File "/Users/palmieri/Desktop/Sage/sage_builds/TESTING/sage-9.3.beta5/local/var/tmp/sage/build/numpy-1.19.4/src/setup.py", line 508, in <module>
        setup_package()
      ...
      File "/Users/palmieri/Desktop/Sage/sage_builds/TESTING/sage-9.3.beta5/local/var/tmp/sage/build/numpy-1.19.4/src/numpy/distutils/fcompiler/gnu.py", line 346, in get_flags_linker_so
        flags = GnuFCompiler.get_flags_linker_so(self)
      File "/Users/palmieri/Desktop/Sage/sage_builds/TESTING/sage-9.3.beta5/local/var/tmp/sage/build/numpy-1.19.4/src/numpy/distutils/fcompiler/gnu.py", line 136, in get_flags_linker_so
        os.environ['MACOSX_DEPLOYMENT_TARGET'] = target
      File "/usr/local/Cellar/python@3.9/3.9.1_2/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py", line 684, in __setitem__
        value = self.encodevalue(value)
      File "/usr/local/Cellar/python@3.9/3.9.1_2/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py", line 756, in encode
        raise TypeError("str expected, not %s" % type(value).__name__)
    TypeError: str expected, not int
```

### NumPy/Python Version Information

- Python version: 3.9.1
- Numpy version: 1.19.4

### Suggested Fix

To resolve this issue, you can ensure that the `target` variable is always a string before setting it in the `os.environ` dictionary. This can be done by modifying the code as follows:

#### Option 1: Modify the Assignment

Change the assignment to `os.environ` to include a call to `str`:

```python
import sysconfig
target = sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')
if not target:
    target = '10.9'
    s = f'Env. variable MACOSX_DEPLOYMENT_TARGET set to {target}'
    warnings.warn(s, stacklevel=2)
os.environ['MACOSX_DEPLOYMENT_TARGET'] = str(target)
```

#### Option 2: Use `str` When Defining `target`

Alternatively, you can convert `target` to a string immediately after retrieving it from `sysconfig`:

```python
import sysconfig
target = str(sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET'))
if not target:
    target = '10.9'
    s = f'Env. variable MACOSX_DEPLOYMENT_TARGET set to {target}'
    warnings.warn(s, stacklevel=2)
os.environ['MACOSX_DEPLOYMENT_TARGET'] = target
```

### Conclusion

By ensuring that the `target` variable is always a string, you can prevent the `TypeError` and allow `numpy` to compile successfully on macOS Big Sur.