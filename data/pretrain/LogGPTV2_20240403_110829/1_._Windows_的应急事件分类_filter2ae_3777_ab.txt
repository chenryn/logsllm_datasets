PsExec在执行命令时在远程主机上创建服务，默认服务名称为`PSEXESVC`，配合检测系统 7045 事件可以确定。  
如果使用`-r`参数更改了默认的服务名称，通过以下特征可以检测 PSExec 的执行：
  * PSExec服务执行文件（默认值：PSEXESVC.exe）被复制到远程计算机上的“％SystemRoot％”目录中
  * 服务名称与没有“.exe”扩展名的执行名称相同
  * 服务以“用户模式”执行，而不是“内核模式”
  * “LocalSystem”帐户用于服务帐户
  * 实际帐户用于执行服务执行文件，而不是“SYSTEM”
### 2.1.3 GUI 的日志工具介绍
Widnows 自带事件管理器就是很不错的日志工具，其他可以了解下[Event Log Explorer](https://eventlogxp.com/)
可以将目标 IP 的所有日志文件复制出来，然后在其他电脑上使用 Event Log Explorer 进行分析。  
其他一些工具：
  * Microsoft Message Analyzer
  * ETL Viewer
  * Log Parser
    * 使用示例：
### 2.2.4 PowerShell 日志操作
使用`Get-WinEvent`
    Get-WinEvent @{logname='application','system'} -MaxEvents 1
一些常见日志操作
    # Get-WinEvent帮助命令
    get-help Get-WinEvent
    # 列出所有事件日志
    Get-WinEvent -ListLog *
    # powershell管理员权限下获取安全事件日志
    Get-WinEvent -FilterHashtable @{LogName='Security'}
    # 过滤安全事件ID 4624
    Get-WinEvent -FilterHashtable @{LogName='Security';ID='4624'}
    # 查询今天的应用和系统日志，显示前2条
    Get-WinEvent @{logname='application','system';starttime=[datetime]::today } -MaxEvents 2
    # 根据ID查询事件
    Get-WinEvent -LogName Microsoft-Windows-PowerShell/Operational | Where-Object {$_.ID -eq "4100" -or $_.ID -eq "4104"}
    # 查询指定时间内的事件
    $StartTime=Get-Date  -Year  2017  -Month  1  -Day  1  -Hour  15  -Minute  30
    $EndTime=Get-Date  -Year  2017  -Month  2  -Day  15  -Hour  20  -Minute  00
    Get-WinEvent -FilterHashtable @{LogName='System';StartTime=$StartTime;EndTime=$EndTime}
Get-EventLog 的使用可以参考：
### 2.2.5 Windows 日志删除和日志集中化
攻击者入侵系统后，很可能会删除日志，比较粗暴的手法是直接删除所有日志和停止日志服务，对于应急来说删除掉的日志本身就是就是入侵的明显特征，根据文件创建时间也能大概判断入侵时间。另外有工具可以删除单条日志，这样只是分析
Windows 日志时对分析人员来说很难找到攻击痕迹，单条日志删除工具
对抗删除的的措施是实施日志集中化，从 Windows 7 开始，Windows 记录日志为 XML 格式，可以使用
## 2.2 检查账户
检查账户的几种方式：
  1. 在本地用户和组里查看，运行`lusrmgr.msc`
  2. 使用`net user`列出当前登录账号，使用`wmic UserAccount get`列出当前系统所有账户
  3. 检查注册表 `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList`，`HKLM\SAM\Domains\Account\`（默认是 SYSTEM）权限，需要配置成管理员权限查看。
SID 位于`HKU\`和 `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows
NT\CurrentVersion\ProfileList`两个密钥中。
用户SID可以在值“Profilelist”下找到Subkeys（在用户登录系统时创建）。
值“ProfileImagePath”将列出该特定用户的配置文件的路径。 在操作系统级别，SID可识别无疑问题的帐户。 多用户系统看起来像这样
    HKU\.DEFAULT
    HKU\S-1-5-18
    HKU\S-1-5-19
    HKU\S-1-5-20
    HKU\S-1-5-21-1116317227-3122546273-4014252621-1000
    HKU\S-1-5-21-1116317227-3122546273-4014252621-1000_Classes
    HKU\S-1-5-21-1116317227-3122546273-4014252621-1003
    HKU\S-1-5-21-1116317227-3122546273-4014252621-1003_Classes
前四个密钥是系统帐户，从计算机到计算机通常是相同的。 `HKU\.DEFAULT`包含全局用户信息。
`HKU\S-1-5-18`属于“LocalSystem帐户”。`HKU\S-1-5-19`用于运行本地服务，是“本地服务帐户”。`HKU\S-1-5-20`
是用于运行网络服务的“NetworkService帐户”。 其他子键是唯一的SID，它们与已登录系统的各个用户相关联。 他们的解释如下：
  * “S”将字符串标识为SID。
  * “1”是SID规范的版本。
  * “5”是标识符权限值。
  * “21-1116317227-3122546273-4014252621”是域或本地计算机标识符，因计算机与计算机不同，因为它对应于唯一的个人用户帐户。
  * “1000”是相对ID（RID）。 默认情况下未创建的任何组或用户的RID均为1000或更高。
  * “1000_Classes”包含每用户文件关联和类注册。
  * “1003”是同一系统上另一个用户的相对ID（RID）。
  * “1003_Classes”包含第二个用户的文件关联和类注册。
## 2.3 检查网络连接
检查网络监听和连接的端口和应用程序
    netstat -anob
输出主机上的所有侦听和活动连接，包括 PID 和连接到每个连接的程序的名称。 这也告诉 Netstat返回连接的 IP 地址，而不是试图确定它们的主机名。
  * -a ：显示所有连接和侦听端口。
  * -b ：显示在创建每个连接或侦听端口时涉及的可执行程序。在某些情况下，已知可执行程序承载多个独立的组件，这些情况下，显示创建连接或侦听端口时涉及的组件序列。在此情况下，可执行程序的名称位于底部 [] 中，它调用的组件位于顶部，直至达到 TCP/IP。注意，此选项可能很耗时，并且在你没有足够权限时可能失败。
  * -n ：以数字形式显示地址和端口号。
  * -o ：显示拥有的与每个连接关联的进程 ID。
  * -r ：显示路由表。
路由
    netstat -rn
结合`findstr`命令查找特定的端口或程序。
发现的感觉异常的 IP 地址可以在威胁情报平台上查询，如果是已知的恶意 IP，可以比较快速的确认攻击方式。
防火墙配置
    netsh firewall show all
Windows 10 自带的网络连接可以参考：  
## 2.4 检查进程
进程通常结合网络查看异常，先检查异常的网络连接，再获取由哪个进程生成的网络连接
    netstat -abno | find "port number"
    tasklist | findstr PID
使用 wmic 命令获取进程信息
    wmic process | find "Proccess Id" > proc.csv
    Get-WmiObject -Class Win32_Process
    Get-WmiObject -Query  "select * from win32_service where name='WinRM'" -ComputerName Server01, Server02 | Format-List -Property PSComputerName, Name, ExitCode, Name, ProcessID, StartMode, State, Status
PowerShell 的其他关于进程和网络的命令
    Get-Process
    Get-NetTCPConnection
    Get-NetTCPConnection -State Established
    # 进程跟服务的对应关系
    tasklist /svc
使用 SysinternalsSuite 的 procexp 可以获取进程比较详细的信息，比如真实路径、加载的 DLL 文件等、CPU 和内存使用情况等。
当然也可以使用内存管理器。
查看可疑的进程及其子进程。可以通过观察以下内容：
  * 没有签名验证信息的进程
  * 没有描述信息的进程
  * 进程的属主
  * 进程的路径是否合法
  * CPU或内存资源占用长时间过高的进程
可以获取进程关联的文件 MD5 值，然后发送到威胁情报平台上辅助检查。进程关联的文件也可以使用在线病毒检测平台上直接检测。
### 2.4.1 内存 dump
有 2 种比较方便的方法：  
第一种是使用系统自带功能，在计算机属性，系统属性，高级选项卡中选择“启动和故障恢复设置”，选择完全转储内存，然后点击确定，系统会提示重启。
重启后在配置的文件位置可以找到上次转储的内存文件。
另外一种方法，使用 SysinternalsSuite 工具集的 notmyfault64
工具，在使用管理员权限的命令行模式下（cmd、PowerShell），运行
    NotMyFault64.exe /crash
### 2.4.2 内存分析
利用 Volatility
进行内存取证，分析入侵攻击痕迹，包括网络连接、进程、服务、驱动模块、DLL、handles、检测进程注入、检测Meterpreter、cmd历史命令、IE浏览器历史记录、启动项、用户、shimcache、userassist、部分rootkit隐藏文件、cmdliner等。
参考：
## 2.5 检查开机启动和运行服务
### 2.5.1 开机启动
关于开机启动需要分析的位置：
  * 注册表中的关于开机启动的位置
    * HKLM\Software\Microsoft\Windows\CurrentVersion\Runonce
    * HKLM\Software\Microsoft\Windows\CurrentVersion\policies\Explorer\Run
    * HKLM\Software\Microsoft\Windows\CurrentVersion\Run
    * HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Run
    * HKCU\Software\Microsoft\Windows\CurrentVersion\Run 
    * HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce
    * (ProfilePath)\Start Menu\Programs\Startup
  * 开始菜单，启动项里（C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup）
  * 任务管理器，启动选项卡，或者运行 msconfig，查看启动选项卡
  * 运行`gpedit.msc`在本地组策略编辑器里查看开机运行脚本，包括计算机配置和用户配置的。
  * 使用 SysinternalsSuite 工具集的 Autoruns 工具查看开机启动项目
### 2.5.2 查看服务状态
服务状态，自动启动配置，在 PowerShell 下可以运行：
    Get-Service
    # 运行service命令
    service
运行`services.msc`可以打开 Windows 服务工具，常见的 GUI 界面。
## 2.6 检查计划任务
存放计划任务的文件
  * C:\Windows\System32\Tasks\
  * C:\Windows\SysWOW64\Tasks\
  * C:\Windows\tasks\
  * *.job（指文件）