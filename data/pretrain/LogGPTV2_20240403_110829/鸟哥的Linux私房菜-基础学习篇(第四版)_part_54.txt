### 文件属性和特殊权限详解

#### 压缩存储
在存储文件时，系统会先对文件进行压缩处理再进行存储。这一功能对于大文件尤其有用。

#### `dump` 程序的 `d` 属性
当使用 `dump` 程序备份文件或目录时，如果设置了 `d` 属性，则该文件或目录将不会被包含在备份中。

#### 不可变文件 (`i` 属性)
设置 `i` 属性后，文件将变得不可删除、重命名，也无法写入新的数据或修改现有数据。这对于提升系统安全性非常有帮助。只有 `root` 用户才能设置此属性。

#### 安全删除 (`s` 属性)
若文件设置了 `s` 属性，在删除该文件时，其内容会被彻底从硬盘空间中移除，无法恢复。这适用于需要高度保密的数据。

#### 可恢复删除 (`u` 属性)
与 `s` 属性相反，`u` 属性允许在文件被删除后，仍能从磁盘上恢复其内容。这对于意外删除重要文件的情况很有用。

**注意事项：**
1. 最常用的属性是 `a`（追加）和 `i`（不可变），并且许多属性必须由 `root` 设置。
2. XFS 文件系统仅支持 `AadiS` 这些属性。

### 示例：设置和取消 `i` 属性
```bash
[root@study ~]# cd /tmp
[root@study tmp]# touch attrtest  # 创建一个空文件
[root@study tmp]# chattr +i attrtest  # 给予 i 属性
[root@study tmp]# rm attrtest  # 尝试删除
rm: cannot remove 'attrtest': Operation not permitted
```
可以看到，即使是以 `root` 身份尝试删除带有 `i` 属性的文件也会失败。

要取消 `i` 属性：
```bash
[root@study tmp]# chattr -i attrtest
```

### 查看隐藏属性 (`lsattr`)
`lsattr` 命令用于显示文件的隐藏属性。常用选项包括：
- `-a`：显示所有隐藏文件的属性。
- `-d`：只显示目录本身的属性。
- `-R`：递归地显示子目录中的文件属性。

示例：
```bash
[root@study tmp]# chattr +aiS attrtest
[root@study tmp]# lsattr attrtest
--S-ia---------- attrtest
```

### 特殊权限
除了基本的 `rwx` 权限外，还有几种特殊的权限类型，如 SUID (Set UID)、SGID (Set GID) 和 Sticky Bit (SBIT)。

#### SUID
- 当 `s` 标志出现在文件拥有者的执行权限位时（例如 `-rwsr-xr-x`），表示该文件具有 SUID 权限。
- 执行者在运行程序时会暂时获得文件拥有者的权限。
- 仅对二进制程序有效。

#### SGID
- 当 `s` 标志出现在群组的执行权限位时（例如 `-rwx--s--x`），表示该文件具有 SGID 权限。
- 执行者在运行程序时会暂时获得文件所属组的权限。
- 对于目录来说，新创建的文件将继承该目录的群组。

#### Sticky Bit
- 仅对目录有效。
- 如果用户对该目录有写权限，但只能删除自己创建的文件，而不能删除其他用户的文件。

### 设置特殊权限
可以使用数字方式或符号方式来设置这些特殊权限。

#### 数字方式
- `4` 表示 SUID
- `2` 表示 SGID
- `1` 表示 SBIT

示例：
```bash
[root@study tmp]# chmod 4755 test  # 添加 SUID
[root@study tmp]# chmod 6755 test  # 添加 SUID 和 SGID
[root@study tmp]# chmod 1755 test  # 添加 SBIT
```

#### 符号方式
- `u+s` 表示 SUID
- `g+s` 表示 SGID
- `o+t` 表示 SBIT

示例：
```bash
[root@study tmp]# chmod u+s,g+s,o+t test
```

通过以上方法，你可以灵活地管理和控制文件的安全性和访问权限。