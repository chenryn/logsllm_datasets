icated channel (DCH) state and also suﬀers the tail energy overhead in the For-
ward Access Channel (FACH) state. We can also observe the energy eﬃciency of
Table 2. ICS: the average traﬃc statistics of 30 character messages
Apps
Number of Average packet Duration (s)
Number of
TCP connections packets
WeChat
WhatsApp
1
1
FB messenger 1
Line
Viber
1
1
38
14
28
12
26
size (byte)
61.4
110.9
166.4
87
108.5
33.54
21.35
22.42
20.74
22.39
90
L. Zhang et al.
Fig. 4. Energy consumption per character
WeChat is much lower compared to other apps. This is because WeChat aggres-
sively sends typing notiﬁcations every 2 seconds. Since typing many shorter mes-
sages takes much more time combined than typing one long message, number of
typing notiﬁcations increase sharply for WeChat, resulting in sharp increase
in energy consumption. To further validate this, we present network traﬃc
statistics in Table 2. It shows that WeChat sends more smaller packets for typing
notiﬁcations. On the other hand, WhatsApp and Line send fewer packets due
to fewer typing notiﬁcations which also reﬂects in their per character energy
eﬃciency in Fig. 4(a).
In the ICR state, the energy consumption also follows the same trend that
many shorter messages consume more energy as shown in Fig. 4(b). However, we
observe some anomaly in case of FB Messenger and Viber where many shorter
messages (no. of substrings = 6) are more energy eﬃcient compared to fewer
medium sized messages (no. of substrings = 5). This is because both these apps
delay sending the typing notiﬁcations. This allows the typing notiﬁcation to be
received almost at the same time (compared to Fig. 2) with the actual message,
which eliminates additional radio wake up and saves energy. This shows that
if the typing notiﬁcation can be delayed towards sending the actual message,
it is possible to reduce the energy overhead of sending/receiving the typing
notiﬁcations, especially for small length messages.
Findings: (1) Sending and receiving typing notiﬁcation is a major contributor to
the total energy consumption of ICR and ICS states. IM apps which periodically
send the typing notiﬁcations suﬀer from very high energy consumption. Because
most of the IM messages are small in length, delaying the sending of typing noti-
ﬁcation can save signiﬁcant energy. Also, an adaptive scheme should be designed
that can control when to send the typing notiﬁcation depending on the length of
user’s input message. Such a scheme can achieve the correct balance between use-
fulness of typing notiﬁcations and their energy consumption. (2) Because user’s
residence time on IM apps are much longer compared to other types of apps,
simply switching to darker GUI can yield surprising energy beneﬁt.
Characterizing Instant Messaging Apps on Smartphones
91
Table 3. ICR: the average traﬃc statistics of 30 character messages
Apps
Number of Average packet Duration (s)
Number of
TCP connections packets
WeChat
WhatsApp
1
1
FB messenger 2
Line
Viber
1
1
20
12
26
8
14
size (byte)
280
78.7
235.3
187.5
122.4
10.3
11.5
16.4
12.4
22.6
3.2 Bandwidth Eﬃciency
We now analyze the bandwidth eﬃciency (amount of traﬃc generated per char-
acter sent/received) of the IM apps and present the results in Fig. 5(a) and (b).
This helps us to understand how much traﬃc the IM apps generate compared
to the amount of useful information (instant message) exchanged. It is observed
that network traﬃc per character is diﬀerent when receiving or sending the same
message. This is expected given that all the apps use client-server architecture
and the sent message is ﬁrst processed at the server before it is delivered to the
receiver. It is also observed that network traﬃc per character is much higher on
the receiving side compared to the sending side.
We observe that FB Messenger has the worst bandwidth eﬃciency for both
sending and receiving sides in most cases. On the other hand, WhatsApp and
Line achieve very high bandwidth eﬃciency compared to other apps. Due to the
unavailability of their internal design, application layer protocol customization
etc., it remains inconclusive why certain apps achieve high or low bandwidth
eﬃciency.
Comparison with Other Types of Applications. We now compare the
bandwidth eﬃciency of IM apps to other kind of applications. We ﬁrst construct
a set of emails and plain HTML pages with the same set of messages tested on the
IM apps. For email, we measure the amount of traﬃc generated by Google Mail
and the size of the actual emails. For HTML, we set up a web-server which holds
a plain HTML page (without any images) and connect it via a client to measure
the traﬃc and the size of HTML page. The bandwidth eﬃciency of Email and
HTML are compared with IM apps in Fig. 5(c). As we can observe, IM apps
have extremely poor bandwidth eﬃciency which shows that even the modern
protocols such as XMPP (used by WhatsApp) are not bandwidth eﬃcient.
Traﬃc Due to Typing and Read Notiﬁcations. It was observed in Sect. 3.1
that typing notiﬁcations are a major contributor to energy consumption. We
now evaluate how much network traﬃc is generated due to the typing and read
notiﬁcations. Figure 5(d) shows the ratio of traﬃc due to notiﬁcations to the total
traﬃc. We observe that the ratio is small for most of the applications. This way,
the actual traﬃc due to notiﬁcations is low, however, because the notiﬁcations
92
L. Zhang et al.
Fig. 5. The bandwidth consumption statistics of in conversation states
are sent/received using many small packets (Table 3), it causes frequent radio
wake up and results in poor energy eﬃciency.
Findings: (1) The IM apps have extremely poor bandwidth eﬃciency compared to
other applications such as email and web-surﬁng. Modern IM protocols such as
XMPP which are optimized to reduce traﬃc in background states demonstrate the
same poor level of bandwidth eﬃciency in the foreground states. Further improve-
ments are necessary to improve the network performance of instant messaging
apps and protocols. (2) Typing notiﬁcation which is a major contributor in energy
consumption does not introduce proportionally high network traﬃc.
4 The Background States
The performance of the IM apps running in the background is now characterized.
We show the corresponding results in Figs. 6, 7 and 8. Similar to the ICR state, we
can also observe the energy eﬃciency of the background receiving decreases if the
length of the messages decreases, as shown in Fig. 6. However, the reasons behind
the phenomenons are quite diﬀerent. In the background receiving states, we did
not observe any typing notiﬁcation nor read notiﬁcation from the network traces.
The main cause of the energy eﬃciency reduction is the overhead of notifying the
users through certain methods, e.g. banner size notiﬁcation, pop-up window and
icon label. In the BRON state, Viber uses pop-up window, while in the BROFF
state, both Line and Viber use pop-up window. The pop-up window results in
signiﬁcant increase of energy consumption for these two apps as seen in Fig. 6.
Characterizing Instant Messaging Apps on Smartphones
93
r
e
t
c
a
r
a
h
C
r
e
P
n
o
i
t
p
m
u
s
n
o
C
y
g
r
e
n
E
)
j
m
(
700
600
500
400
300
200
100
0
1
WeChat
WhatsApp
FBMessenger
Line
Viber
6
3
2
5
The Number of Substrings
4
r
e
t
c
a
r
a
h
C
r
e
P
n
o
i
t
p
m
u
s
n
o
C
y
g
r
e
n
E
600
500
400
300
200
100
)
J
m
(
0
1
WeChat
WhatsApp
FBMessenger
Line
Viber
6
3
2
5
The Number of Substrings
4
(a) BRON Energy Consumption Per
Character
(b) BROFF Energy Consumption Per
Character
Fig. 6. The energy eﬃciency of background receiving
r
e
t
c
a
r
a
h