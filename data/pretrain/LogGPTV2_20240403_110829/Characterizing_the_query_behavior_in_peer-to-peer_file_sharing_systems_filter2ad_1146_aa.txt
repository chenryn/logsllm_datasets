title:Characterizing the query behavior in peer-to-peer file sharing systems
author:Alexander Klemm and
Christoph Lindemann and
Mary K. Vernon and
Oliver P. Waldhorst
Characterizing the Query Behavior in  
Peer-to-Peer File Sharing Systems* 
Alexander Klemma     Christoph Lindemanna     Mary K. Vernonb     Oliver P. Waldhorsta 
aUniversity of Dortmund 
Department of Computer Science 
August-Schmidt-Strasse 12 
44227 Dortmund, Germany 
http://mobicom.cs.uni-dortmund.de/ 
bUniversity of Wisconsin - Madison 
Department of Computer Sciences 
1210 West Dayton Street 
Madison, WI 53706, USA 
http://www.cs.wisc.edu/~vernon 
ABSTRACT 
This paper characterizes the query behavior of peers in a peer-to-
peer (P2P) file sharing system. In contrast to previous work, which 
provides various aggregate workload statistics, we characterize peer 
behavior in a form that can be used for constructing representative 
synthetic  workloads  for  evaluating  new  P2P  system  designs.  In 
particular, the analysis exposes heterogeneous behavior that occurs 
on  different  days,  in  different  geographical  regions  (i.e.,  Asia, 
Europe, and North America) or during different periods of the day.  
The workload measures include the fraction of connected sessions 
that  are  passive  (i.e.,  issue  no  queries),  the  duration  of  such 
sessions, and for each active session, the number of queries issued, 
time until first query, query interarrival time, time after last query, 
and distribution of query popularity. Moreover, the key correlations 
in these workload measures are captured in the form of conditional 
distributions,  such 
the  correlations  can  be  accurately 
reproduced in a synthetic workload. The characterization is based 
on trace data gathered in the Gnutella P2P system over a period of 
40  days.  To  characterize  system-independent  user  behavior,  we 
eliminate queries that are specific to the Gnutella system software, 
such  as  re-queries  that  are  automatically  issued  by  some  client 
implementations to improve system responsiveness. 
Categories and Subject Descriptors 
C.4 [Performance of Systems]: Measurement Techniques. 
C.2.4 
Systems – distributed applications. 
General Terms 
Measurement, Performance. 
Keywords 
Peer-to-peer,  overlay  networks,  workload 
synthetic workloads. 
[Computer-Communication  Networks]:  Distributed 
characterization, 
that 
*The  research  in  this  paper  was  partially  supported  by  the  German 
Research  Council  (DFG)  under  Grant  Li-645/13-1  and  by  the  U.S. 
National Science Foundation under Grant ANI-0117810.  
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies 
are not made or distributed for profit or commercial advantage and that 
copies bear this notice and the full citation on the first page. To copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
IMC’04, October 25–27, 2004, Taormina, Silicy, Italy. 
Copyright 2004 ACM 1-58113-821-0/04/0011…$5.00. 
1.  INTRODUCTION 
Peer-to-peer  (P2P)  systems  constitute  one  of  the  most  popular 
applications in the Internet. The list of applications that are built on 
Sun’s JXTA protocol suite for P2P communication [6] reveals that 
P2P technology is employed for instant messaging, web publishing, 
distributed data management, gaming, in addition to the traditional 
file sharing applications which were made popular by Napster [13] 
and Gnutella [8]. Although Napster is no longer in service due to 
legal issues, Gnutella systems are still deployed and widely used. In 
particular, the popular Morpheus file sharing system [21] adopted 
the Gnutella protocol.  
Gnutella,  like  all  P2P  file  sharing  systems,  consists  of  two  main 
building  blocks:  (1)  a  search  algorithm  for  queries  and  (2)  a  file 
transfer protocol for downloading files matching a query. Efficient 
searching in P2P systems is an active area of research. Approaches 
include variants of Gnutella’s unstructured search algorithm such as 
the  algorithm  employed  in  KaZaA  [18]),  as  well  as  structured 
search approaches based on distributed hash tables, e.g., CAN [14] 
and CHORD [19]. Unstructured systems do not provide an index of 
data locations, so a query must be sent to many peers. In contrast, 
structured systems improve search efficiency by indexing the data 
locations and routing a query along a path to the data location. Data 
replication has been proposed to improve unstructured searches [5]. 
Accurate  characterization  of  peer  query  behavior  is  needed  when 
evaluating design alternatives for future P2P systems. For example, 
Chawathe  et  al.  [3]  use  simulations  of  client  query  behavior  to 
evaluate  a  new  overlay  network  architecture  and  a  new  biased 
random  walk  search  protocol,  and  Ge  et  al.  [7]  use  an  analytic 
model  of  query  behavior 
to  compare  alternative  directory 
architectures  and  search  protocols.  Recent  studies  have  provided 
important  partial  characterizations  of  peer  behavior,  including 
aggregate  distributions  of  session  durations, 
time  between 
downloads,  query  and  file  popularity,  requested  file  sizes,  and 
measured bandwidth between the peer and the Internet at large [2, 
9, 15, 16, 17, 20, 22]. Several of these studies consider the impact 
of time of day or another specific correlation between the measured 
parameters  (e.g.,  distribution  of  session  duration  as  a  function  of 
measured  peer  bandwidth).  However,  the  previous  workload 
measures have two significant drawbacks for constructing realistic 
synthetic workloads: (1) they are incomplete with respect to the key 
correlations  among  the  workload  measures,  and  (2)  they  include 
aggregate  measures  (e.g.,  mixture  distributions)  that  obscure 
heterogeneous behavior across different classes of peers or across 
different  periods  of  time.  Examples  of  the  latter  include  the 
aggregate distribution of query popularity for peers from different 
geographic regions or across different days.  
This paper provides a characterization of P2P query behavior that is 
based on passive measurement of a peer in the Gnutella P2P system 
over  a  period  of  40  days.  We  make  three  principal  contributions. 
First, 
to  characterize  system-independent  peer  behavior,  we 
eliminate queries that are specific to the Gnutella system, such as 
the  re-queries  that  are  issued  by  some  client  implementations  to 
improve  system  responsiveness.  Second, 
the  characterization 
exposes key correlations among the workload measures as well as 
heterogeneous  peer  behavior  on  different  days,  in  different 
geographical regions, and over different periods of the day. Third, 
we  provide  a  relatively  complete  set  of  measures  and  model 
distributions  that  can  be  used  for  constructing  realistic  synthetic 
workloads.  
The workload measures include the fraction of connected sessions 
that are completely passive (i.e., issue no queries), the duration of 
such  sessions,  and  for  each  active  session,  the  number  of  queries 
issued, time until the first query, query interarrival time, time after 
last query, and query popularity. The heterogeneous measures are 
provided for each class of peer sessions in a distinct geographical 
region (i.e., Asia, Europe, or North America) or during a different 
period of the day. Moreover, other key correlations in the measures 
are captured using further conditional distributions that can easily 
be  applied  when  generating  a  synthetic  workload.  An  important 
result  is  that  only  a  relatively  small  number  of  conditional 
distributions are needed. We observe that the number of queries per 
active  session,  passive  session  duration,  and  the  set  of  100  most 
popular  queries  are  all  strongly  correlated  with  the  geographic 
location of the peer. We also find a significant correlation between 
session  duration  and  the  number  of  queries  issued  during  the 
session,  but  not  between  query  interarrival  time  and  number  of 
queries issued.  
The  remainder  of  this  paper  is  organized  as  follows.  Section  2 
summarizes related work in measurement and workload modeling 
of  P2P  file  sharing  systems.  In  Section  3,  we  describe  the 
measurement  methodology,  including  the  data  filtering  rules  to 
eliminate system-specific peer behavior. Section 4 provides the P2P 
workload  measures  in  the  form  of  the  requisite  conditional 
distributions. Conclusions are given in Section 5. 
2.  RELATED WORK 
Several recent papers report workload measures of P2P file sharing 
systems.  For  example,  Sripanidkulchai  [20]  shows  that  the 
popularity of Gnutella queries follows a Zipf-like distribution, and 
that simulated caching of query results reduces the network traffic 
by up to a factor of 3.7.  
Sariou,  Gummadi,  and  Gribble  [16]  measured  the  Napster  and 
Gnutella file sharing systems in order to characterize the peers in 
terms  of  network  topology,  measured  bottleneck  bandwidth, 
network  latency  as  a  function  of  bandwidth,  session  duration, 
number  of  shared  files,  size  of  shared  files  as  a  function  of  the 
number of shared files, and number of downloads as a function of 
peer  bandwidth.  They  identified  different  classes  of  peers  and 
propose that different tasks in a P2P system should be delegated to 
different peers depending on their capabilities. We observe similar 
distributions  of  session  duration  (i.e.,  a  high  fraction  under  3 
minutes), and a similar fraction of peers that are passive (i.e., 80%), 
but we omit characterization of parameters that depend on system 
design  (e.g.,  overlay  network  topology),  and  more  completely 
characterize the query behavior, including the impact of geographic 
location  and  time  of  day  on  the  number  of  queries  and  the 
correlation between session duration and number of queries. 
Adar  and  Hubermann  [1]  also  measured  the  Gnutella  system  and 
found  a  significant  fraction  of  “free  rider”  sessions,  which 
download  files  from  other  peers  but  don’t  share  any  files.  An 
analysis  of  locality  in  shared  files  and  downloads  is  provided  by 
Chu, Labonte, and Levine [4]. This paper does not characterize the 
number of files shared by a peer or the locality in the shared files. 
Instead this paper focuses on characterizing the query behavior of 
the peers. 
In  [9]  Gummadi  et  al.  collected  and  analyzed  a  200-day  trace  of 
KaZaA  traffic.  They  characterize  active  session  length,  size  of 
downloads,  and  evolution  of  object  popularity.  Similar  to  their 
work, we propose a synthetic workload model, and we observe that 
the query popularity distribution aggregated over multiple days has 
a  “flattened  head”.  In  contrast  to  their  work,  we  characterize  a 
wider  range  of  peers  (distributed  among  three  continents,  rather 
than  localized  on  a  single  campus).  In  addition,  we  characterize 
passive sessions, the per day query popularity distribution, and key 
correlations in the measured characteristics.  
Bhaghwan et al. [2] characterize the fraction of time that hosts are 
available  as  well  as  the  frequency  of  arrivals  and  departures, 
including  time  of  day  effects.  Sen  and  Wang  [17]  also  consider 
time of day effects in characterizing traffic volume, distribution of 
time between downloads, and active session durations, but not the 
correlation between session duration and number of downloads, nor 
the  impact  of  geographic  locality.  The  previous  papers  that 
characterize Gnutella client queries also do not mention separating 
system-independent  peer  behavior  from  the  system-dependent  re-
queries to obtain better responsiveness. 
First  approaches  to  modeling  the  performance  of  entire  P2P  file 
sharing systems include [7] and [22]. Yang and Garcia-Molina [22] 
present  an  analytical  model  for  hybrid  P2P  systems  and  evaluate 
several system designs in terms of the number of results and CPU 
and  memory  requirements.  To  validate  their  model,  they  used 
aggregated  measures  obtained  from  the  server  of  a  hybrid  P2P 
system.  Ge,  Figueiredo,  Jaswal,  Kurose,  and  Towsley  present  an 
analytical  model  that  can  be  adapted  to  different  file  sharing 
systems  by  appropriately  choosing  model  parameters  [7].  We 
characterize classes of peers, time between queries, and the query 
popularity distribution that could be used in their model. We also 
characterize  passive  peer  behavior,  and  observe  significant  class 
dependent  query  popularity,  and  session  duration,  which  could 
easily be added to their model. 
3.  TRACE MEASUREMENTS 
3.1  Measurement Setup 
For the analysis of peer behavior in P2P file sharing systems, we 
set up a client node in the popular Gnutella overlay network [8].  
Gnutella  clients  construct  an  overlay  network  (i.e.,  a  network  of 
application layer connections) that is used to route query messages 
and  responses  from  one  client  to  another.  The  Gnutella  protocol 
specifies four message types. Messages of types PING and PONG 
are  used  to  maintain  overlay  connectivity  and  obtain  information 
about  other  peers.  Messages  of  type  QUERY  contain  a  set  of 
keywords in the title of files a user is searching for. Each QUERY 
message  generated  at  a  client  is  sent  to  each  of  its  directly 
connected  peers  in  the  overlay  network,  which  then  forwards  the 
Table 1. Overall Trace Characteristics 
Value 
3/15/04 – 4/23/04 
Measure 
Trace period 
Number of QUERY messages 
Number of QUERYHIT messages 
Number of PING messages 
Number of PONG message 
Number of direct connections 
Query messages with hop count = 1 
34,425,154 
1,339,540 
27,159,805 
17,807,992 
4,361,965 
1,735,538 
message  to  further  peers.  Peers  with  a  high  bandwidth  Internet 
connection and high processing power run in ultrapeer mode. Less 
powerful  peers  (leaf  nodes)  connect  to  only  a  small  set  of 
ultrapeers. A QUERY message is forwarded to all ultrapeer nodes, 
but is only forwarded to the leaf nodes that have a high probability 
of responding. Forwarding a QUERY message more than once is 
prevented by storing the query’s global unique identifier (GUID) in 
a  routing  table,  along  with  the  identity  of  the  directly  connected 
peer  that  the  query  is  initially  received  from.  The  maximum 
number  of  overlay  hops  that  a  QUERY  message  may  transit  is 
specified  by  a  time-to-live  (TTL)  field,  which  is  set  when  the 
message  is  generated.  The  field  is  decremented  each  time  the 
message is forwarded, and the message is not forwarded if TTL is 
equal to zero. To determine how far a message has traveled through 
the  network,  a  hops  count  field  with  an  initial  value  of  zero  is 
incremented before forwarding. If a peer has one or more files that 
match  the  query  string  in  a  query  message,  it  responds  with  the 
fourth  message  type,  QUERYHIT.  This  response  message  is 
transferred to the inquiring peer on the reverse overlay path that the 
query message was routed to the responding peer, using the routing 
table that specifies the next hop in the reverse path for each GUID. 
According to the protocol specification, a GUID is deleted from the 
routing table after a specified time, typically after 10 minutes. 
Since the Gnutella protocol specification is publicly available, there 
are  a  number  of  client 
the 
measurements in the Gnutella network, we modify the open-source 
Gnutella client implementation called mutella [12], to obtain a trace 
of the data contained in the Gnutella messages from the peer nodes. 
We conduct only passive measurements; that is, we do not generate 
messages  actively,  in  order  to  minimize  the  disturbance  of  the 
actual network traffic by the measurement.  
To obtain a reasonable sampling of the network traffic in the traces, 
we specify that the measurement client will run in ultrapeer mode 
and maintain up to 200 connections to other peers simultaneously. 
This  results  in  more  than  four  million  measured  direct  peer 
connections during the forty day measurement period, as shown in 
Table 1. The number of connections is determined by the number 
of unique IP addresses from which a connection has been received. 
Approximately  40%  of  the  connections  are  from  peers  that  are 
running in ultrapeer mode, and 60% are from leaf nodes. Thus, both 
types of nodes are well represented in the measured workload. 
For convenience, the measurement node is located at the University 
of Dortmund; however, as will be shown in Section 3.4 below, the 
200  directly  connected  peers  are  scattered  around  the  globe  with 
proportions of one-hop peers in North America, Europe, and Asia 
that are approximately the same as the corresponding proportions 
of the total peer population in each of the three continents. Since 
the construction algorithm of the Gnutella overlay network [8] does 
not  contain  any  geographic  bias  in  the  peers  that  are  directly 
implementations.  To  perform 
connected, we hypothesize that the placement of the measurement 
node does not impact the measured behavior of the peers. Section 
3.4  provides  quantitative  measures  that  are  consistent  with  this 
hypothesis. 
3.2  Measuring Peer Characteristics 
An  important  characteristic  to  be  measured  is  the  geographic 
location of a peer. We determine this measure from the IP address 
for the peer using the GeoIP database [10].  
Another key measure is the number of queries issued during a peer 
session. Unfortunately, a QUERY message does not include the IP 
address or any other tag that can be used to identify the node that 
generated the query. However, each QUERY message generated by 
a  user  of  a  Gnutella  client  that  is  directly  connected  to  the 
measurement  peer  has  a  hop  count  equal  to  one,  and  the  IP 
addresses  of  these  directly  connected  peers  are  known  from  the 
TCP  connections  in  the  overlay.  Since  each each  QUERY  that is 
generated at a client (by the user) is sent to each directly connected 
peer,  the  measurement  node  will  receive  every  QUERY  message 
from  a  directly  connected  (or  “one-hop”)  peer.  We  can  thus 
measure the number of QUERY messages that are generated during 
each connected peer session that has distance one hop.  
A third important measure is the peer’s session duration. There are 
no Gnutella messages to indicate the start of a new client session. 
However, a connected session starts when the Gnutella handshake 
between the measurement peer and the one-hop peer is completed. 
Since  the  measurement  client  session  never  terminates,  the 
termination of the TCP connection to a one-hop peer indicates the 
end  of  the  one-hop  peer’s  session.  We  note  that  many  Gnutella 
clients do not terminate an overlay connection by sending a BYE 
message  according  to  the  Gnutella  specification.  Instead,  most 
clients  simply  stop  sending  messages  over  the  connection.  When 
the  measurement  peer  detects  that  a  connection  is  idle  for  15 
seconds, it sends a single PING message to the one-hop peer. If no 
response  is  received  after  another  15  seconds,  the  measurement 
peer will close the connection. Thus, we will overestimate the end 
of most connected session durations by approximately 30 seconds. 
According  to  the  Gnutella  protocol,  queries  are  assumed  to  be 
identical  if  they  contain  the  same  set  of  keywords.  We  use  this 
definition of a query when measuring the number of distinct queries 
observed  at  the  measurement  node.  We’ve  also  verified  by 
inspection that the great majority of the top 100 queries are each for 
different  files,  rather  than  being  variations  of  keywords  for  the 
same files. 
3.3  Filtering Gnutella System Behavior 
When inspecting the trace files, we discovered several anomalies in 
the  queries  received  from  some  one-hop  neighbors.  By  recording 
the content of the User-Agent-Header exchanged during handshake 
at  connection  establishment,  we  determined  that  certain  types  of 
anomalies  could  be  attributed  to  peers  running  a  specific  client 
implementation.  Since  our  objective  is  to  characterize  the  user 
workload rather than the behavior of the P2P system software, we 
discard 
that  are 
automatically issued by particular Gnutella client implementations 
to improve system responsiveness: 
1.  QUERY message with the SHA1 extension. The client software 
uses  the  SHA1  hash  sum  to  identify  a  specific  file  that  is 
already  known.  Thus,  this  query  does  not  indicate  the  user’s 
types  of  query  messages 
the 
following 
Table 2. Filtered Queries 
Rule 
Ignore query messages with empty keywords and SHA1 extension 
Ignore query messages with identical query string issued by the same peer within a session 
Discard sessions with session length of less than 64 seconds  
Number of sessions and query messages from 1-hop neighbors 
1 
2 
3 
Final number of QUERY messages and sessions considered 
4 
5 
Final number of QUERY messages considered in query interarrival time measure 
Ignore query messages from a specific peer with query interarrival time of less then 1 seconds  
Ignore subsequent query messages from a specific peer with identical interarrival times 
# Queries 
1,735,538 
   410,513 
   841,656 
   310,164 
   173,195 
     77,058 
     14,715 
     81,432 
# Sessions 
4,361,965 
3,053,375 
1,308,590 
interest in a new file, but rather a search for additional sources 
to continue a file download.  
2.  QUERY  message  with  a  query  string  that  has  already  been 
observed within a client session. Most Gnutella clients provide 
features  for  automatically  re-sending  a  query  in  order  to 
improve search results. These repeated queries indicate that the 
system  is  searching  for  further  results,  rather  than  user 
behavior. 
3.  QUERY message from a session that is connected for less than 
64 seconds. Many clients (i.e., 29%) disconnect in less than 10 
seconds  and  another  significant  fraction  (32%)  disconnect 
during  the  next  20-25  seconds.  A  total  of  about  70%  of 
connections terminate in less than 64 seconds. Such frequently 
occurring quick disconnects are likely due to system software 
decisions  to  disconnect  from  the  measurement  peer  (for 
unknown reason) rather than user behavior. Since other specific 
connection durations are not observed with unusual frequency, 
sessions longer than 64 seconds are assumed to end due to user 
session termination. 
queries, we conclude that it is essential to apply the filter rules in 
order  to  characterize  the  system-independent  query  behavior  of 
users. Nevertheless, there are still a substantial number of queries 
and  connected  sessions  that  are  analyzed  to  obtain  the  user 
workload characterization.  
3.4  Properties of One-hop Peers 
Since  we  can  only  measure  the  query  behavior  of  peers  that  are 
directly  connected  to  the  measurement  node,  we  examine  two 
measures  that  are  consistent  with  the  hypothesis  that  the  large 
number  of  one-hop  peer  sessions  are  representative  of  all  peer 
sessions in the system.  
The  first  measure  is  the  geographic  distribution  of  the  one-hop 
peers  as  compared  to  all  peers.  To  measure  the  geographic 
distribution  of  all  peers,  we  determine  the  distribution  of  the  IP 
addresses in all PONG and QUERYHIT messages that are recorded 
at the measurement node. To determine the geographic distribution 
of  the  one-hop  peers,  we  determine  the  distribution  of  the  IP 
addresses for all connected sessions. Figure 1 provides the fraction 
of one-hop peers, and the fraction of all peers, in each of the three 
geographic regions where most peers are located (North America, 
Europe, and Asia) during each one-hour interval of a 24-hour day. 
The value for each one-hour bin is an average over the entire trace. 
We  observe  that  the  geographic  distribution  of  one-hop  peers  is 
nearly the same as the geographic distribution of all peers, although 
there  is  a  slightly  higher  fraction  of  one-hop  peers  in  Asia  and  a 