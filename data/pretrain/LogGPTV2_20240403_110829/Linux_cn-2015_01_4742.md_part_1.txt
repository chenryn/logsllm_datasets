---
author: ''
category: 技术
comments_data:
- date: '2015-01-25 23:03:03'
  message: '@我的印象笔记'
  postip: 218.30.103.250
  username: 微博评论
- date: '2015-01-25 23:33:02'
  message: '@我的印象笔记'
  postip: 218.30.103.250
  username: 微博评论
- date: '2015-01-25 23:33:02'
  message: //@童剑://@cwinux:转发微博
  postip: 218.30.103.250
  username: 微博评论
- date: '2015-01-26 00:03:01'
  message: 好文 //@kewin_文超:转发微博
  postip: 113.118.247.91
  username: 微博评论
- date: '2015-01-26 00:03:01'
  message: Linux中国:【使用 nice、cpulimit 和 cgroups 限制 ......】
  postip: 113.118.247.91
  username: 微博评论
- date: '2015-01-26 00:33:03'
  message: '@我的印象笔记'
  postip: 68.180.228.107
  username: 微博评论
- date: '2015-01-26 00:33:03'
  message: //@柳烟堆雪:好文 //@kewin_文超:转发微博
  postip: 68.180.228.107
  username: 微博评论
- date: '2015-01-26 01:03:02'
  message: '@有道云笔记收藏'
  postip: 218.30.103.250
  username: 微博评论
- date: '2015-01-26 07:33:02'
  message: '@我的印象笔记'
  postip: 123.125.71.42
  username: 微博评论
- date: '2015-01-26 08:03:02'
  message: '@我的印象笔记'
  postip: 123.125.71.101
  username: 微博评论
- date: '2015-01-26 08:33:02'
  message: 好文
  postip: 123.125.71.108
  username: 微博评论
- date: '2015-01-26 09:50:07'
  message: "很有用，Mark。\r\n不过，有些许瑕疵：\r\n1. “并保持系统的能够正常运转” 这句话不太通顺；\r\n2.
    ”下来介绍一下nice命令的使用方法“ 这句感觉应该是 “下面介绍一下nice命令的使用方法”?"
  postip: 221.10.196.170
  username: ChangLiu
- date: '2015-01-26 10:03:01'
  message: //@柳烟堆雪:好文 //@kewin_文超:转发微博
  postip: 66.249.79.110
  username: 微博评论
- date: '2015-01-26 10:03:01'
  message: '@我的印象笔记'
  postip: 66.249.79.110
  username: 微博评论
- date: '2015-01-26 12:03:01'
  message: '@mywiz @北邮黄兵'
  postip: 123.234.229.74
  username: 微博评论
- date: '2015-01-26 12:08:56'
  message: 谢谢您的意见，马上去修正。
  postip: 106.120.101.58
  username: linux
- date: '2015-01-26 13:03:01'
  message: 好东西，收藏
  postip: 114.111.167.135
  username: 微博评论
- date: '2015-01-26 13:33:04'
  message: '@我的印象笔记  //@唐僧_huangliang://@yangdigital: //@柳烟堆雪:好文 //@kewin_文超:转发微博'
  postip: 112.102.134.150
  username: 微博评论
- date: '2015-01-26 22:03:04'
  message: '@有道云笔记收藏'
  postip: 222.190.115.77
  username: 微博评论
count:
  commentnum: 19
  favtimes: 6
  likes: 0
  sharetimes: 41
  viewnum: 32711
date: '2015-01-26 07:42:00'
editorchoice: false
excerpt: Linux内核是一名了不起的马戏表演者，它在进程和系统资源间小心地玩着杂耍，并保持系统的能够正常运转。 同时，内核也很公正：它将资源公平地分配给各个进程。
  但是，如果你需要给一个重要进程提高优先级时，该怎么做呢？ 或者是，如何降低一个进程的优先级？ 又或者，如何限制一组进程所使用的资源呢？ 答案是需要由用户来为内核指定进程的优先级
  大部分进程启动时的优先级是相同的，因此Linux内核会公平地进行调度。 如果想让一个CPU密集型的进程运行在较低优先级，那么你就得事先配置好调度器。 下面介绍3种控制进程运行时间的方法：
fromurl: http://blog.scoutapp.com/articles/2014/11/04/restricting-process-cpu-usage-using-nice-cpulimit-and-cgroups
id: 4742
islctt: false
largepic: /data/attachment/album/201501/25/224321eg56vddot1wdzvov.jpg
permalink: /article-4742-1.html
pic: /data/attachment/album/201501/25/224321eg56vddot1wdzvov.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: Linux内核是一名了不起的马戏表演者，它在进程和系统资源间小心地玩着杂耍，并保持系统的能够正常运转。 同时，内核也很公正：它将资源公平地分配给各个进程。
  但是，如果你需要给一个重要进程提高优先级时，该怎么做呢？ 或者是，如何降低一个进程的优先级？ 又或者，如何限制一组进程所使用的资源呢？ 答案是需要由用户来为内核指定进程的优先级
  大部分进程启动时的优先级是相同的，因此Linux内核会公平地进行调度。 如果想让一个CPU密集型的进程运行在较低优先级，那么你就得事先配置好调度器。 下面介绍3种控制进程运行时间的方法：
tags:
- CPU
- nice
- cpulimit
- cgroups
thumb: false
title: 使用 nice、cpulimit 和 cgroups 限制 cpu 占用率
titlepic: false
translator: ''
updated: '2015-01-26 07:42:00'
---
![](/data/attachment/album/201501/25/224321eg56vddot1wdzvov.jpg)
Linux内核是一名了不起的马戏表演者，它在进程和系统资源间小心地玩着杂耍，并保持系统的正常运转。 同时，内核也很公正：它将资源公平地分配给各个进程。
但是，如果你需要给一个重要进程提高优先级时，该怎么做呢？ 或者是，如何降低一个进程的优先级？ 又或者，如何限制一组进程所使用的资源呢？
**答案是需要由用户来为内核指定进程的优先级**
大部分进程启动时的优先级是相同的，因此Linux内核会公平地进行调度。 如果想让一个CPU密集型的进程运行在较低优先级，那么你就得事先配置好调度器。
下面介绍3种控制进程运行时间的方法：
* 使用 nice 命令手动降低任务的优先级。
* 使用 cpulimit 命令不断的暂停进程，以控制进程所占用处理能力不超过特定限制。
* 使用linux内建的**control groups（控制组）**功能，它提供了限制进程资源消耗的机制。
我们来看一下这3个工具的工作原理和各自的优缺点。
### 模拟高cpu占用率
在分析这3种技术前，我们要先安装一个工具来模拟高CPU占用率的场景。我们会用到CentOS作为测试系统，并使用[Mathomatic toolkit](http://www.mathomatic.org/)中的质数生成器来模拟CPU负载。
很不幸，在CentOS上这个工具没有预编译好的版本，所以必须要从源码进行安装。先从  这个链接下载源码包并解压。然后进入 **mathomatic-16.0.5/primes** 文件夹，运行 **make** 和 **sudo make install** 进行编译和安装。这样，就把 **matho-primes** 程序安装到了 **/usr/local/bin** 目录中。
接下来，通过命令行运行：
```
/usr/local/bin/matho-primes 0 9999999999 > /dev/null &
```
程序运行后，将输出从0到9999999999之间的质数。因为我们并不需要这些输出结果，直接将输出重定向到/dev/null就好。
现在，使用top命令就可以看到matho-primes进程榨干了你所有的cpu资源。
![](/data/attachment/album/201501/25/224432u113ygwrtys1ds12.jpg)
好了，接下来（按q键）退出 top 并杀掉 matho-primes 进程（使用 fg 命令将进程切换到前台，再按 CTRL+C）
### nice命令
下面介绍一下nice命令的使用方法，nice命令可以修改进程的优先级，这样就可以让进程运行得不那么频繁。 **这个功能在运行cpu密集型的后台进程或批处理作业时尤为有用。** nice值的取值范围是[-20,19],-20表示最高优先级，而19表示最低优先级。 Linux进程的默认nice值为0。使用nice命令（不带任何参数时）可以将进程的nice值设置为10。这样调度器就会将此进程视为较低优先级的进程，从而减少cpu资源的分配。
下面来看一个例子，我们同时运行两个 **matho-primes** 进程，一个使用nice命令来启动运行，而另一个正常启动运行：
```
nice matho-primes 0 9999999999 > /dev/null &
matho-primes 0 9999999999 > /dev/null &
```
再运行top命令。
![](/data/attachment/album/201501/25/224459x99wukb9kgdpj9uu.jpg)
看到没，正常运行的进程（nice值为0）获得了更多的cpu运行时间，相反的，用nice命令运行的进程占用的cpu时间会较少（nice值为10）。
在实际使用中，如果你要运行一个CPU密集型的程序，那么最好用nice命令来启动它，这样就可以保证其他进程获得更高的优先级。 也就是说，即使你的服务器或者台式机在重载的情况下，也可以快速响应。