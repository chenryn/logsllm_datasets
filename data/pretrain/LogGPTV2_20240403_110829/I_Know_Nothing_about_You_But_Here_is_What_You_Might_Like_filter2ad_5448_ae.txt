### 优化后的文本

**图5：离线处理加速。**

| 线程数 | 加速比 |
| --- | --- |
| 1 | 0 |
| 2 | 1 |
| 3 | 2 |
| 4 | 3 |
| 5 | 4 |
| 6 | 5 |
| 7 | 6 |
| 8 | 7 |
| 9 | 8 |
| 10 | 9 |

**图6：X-REC中的预测更新时间。**

(a) Movielens
(b) FilmTrust

### D. 性能比较

**与J-REC的比较**
我们接下来将X-REC与Jeckmans等人[24]提出的一种最先进的隐私推荐系统（称为J-REC）进行比较。为了确保公平性，我们在[24]中使用的合成数据集上对X-REC和J-REC进行了对比评估。这些数据集包括50、100或200个用户，每个用户对25本书进行了评分。书籍总数分别为500、1,000或2,000本。需要注意的是，如J-REC所指出的，50个用户无法对2,000本书进行评分（每用户只有25次评分），因此在表IV中标记为n/a。我们展示了当用户数量或项目数量增加时，X-REC在端到端延迟方面的表现。

首先，我们将X-REC与J-REC的在线版本（J-REC On）和离线版本（J-REC Off）进行比较。J-REC在线版本要求所有用户保持登录状态，而离线版本则不需要用户保持登录，但会花费更多时间来保护离线用户的隐私。为了公平起见，我们在单核上运行了X-REC。图7比较了X-REC与J-REC（J-REC On和J-REC Off）在延迟方面的表现。结果清楚地显示，在所有数据集上，X-REC显著优于J-REC。J-REC需要多次与用户通信以计算相似性和预测，而X-REC只需一次与TP的通信即可完成。此外，对于每个用户，J-REC使用包含所有项目的向量（未评分的项目评分为0），这是其加密相似性计算所必需的。从表IV可以看出，随着用户和项目数量的增加，性能提升幅度也相应增加。

**表IV：相对于J-REC的端到端延迟改进。**

| 书籍数量 | 用户数量 (J-REC On) | 用户数量 (J-REC Off) |
| --- | --- | --- |
| 500 | 5× | 5.9× |
| 1,000 | 6.8× | 6.85× |
| 2,000 | 10.5× | n/a |

**与全同态加密的比较**
我们在这里评估X-REC在全同态加密方案上的开销。我们实现了一个非私有的X-REC版本（NX-REC），作为比较的基准。然后，我们比较了X-REC、非私有版本的X-REC（NX-REC）以及基于全同态加密（FHE）方案的方法在端到端延迟方面的表现。FHE的延迟是基于K. Rohloff等人的最新实现[5]计算得出的。图9显示了比较结果。X-REC的延迟略高于非加密版本，但显著低于基于FHE的方案。

### E. 动态性

在实际部署中，新用户不断加入服务。因此，系统应具备可扩展性以应对这种动态性（用户流失）。我们评估了X-REC在不断增加用户数量情况下的性能。我们分析了X-REC在数据库中用户数量增加时的预测更新时间（涉及x-server）的速度提升。图8展示了X-REC在三个数据集上的速度提升。我们观察到，随着用户数量的增加，X-REC在所有三个数据集上的速度提升也随之增加。这种可扩展性的改进是因为随着用户数量的增加，更多的计算得以执行。

### F. 隐私比较

在本小节中，我们评估了X-HE实现的安全性。我们使用四种标准攻击方案来比较X-REC和J-REC中的加密方案的安全性，分别是：穷举搜索（EX）[33]、中间相遇（MITM）[33]、Blum-Kalai-Wasserman方案（BKW）[34]和有界距离解码（BDD）[32]。

成功运行攻击会以高概率破坏加密方案的安全性。位级安全性表示成功攻击所需操作次数的对数。图10(a)比较了我们的方案与J-REC方案在面对EX、MITM和BKW攻击时的位级安全性。我们观察到，BKW是对X-REC和J-REC的最佳攻击。然而，X-REC在对抗BKW攻击方面提供了稍好的位级安全性。

成功概率表示区分0和1密文的概率。为了公平比较，我们在成功概率为2^-32的情况下比较了X-REC和J-REC在BDD攻击中的表现，如图10(b)所示。虽然J-REC在2.3GHz AMD Opteron机器上报告BDD攻击时间为275秒[32]，但X-REC在同一台机器上估计该攻击时间为233.04秒。尽管BDD攻击在X-REC上所需时间较少，但良好的安全保证选择可以确保攻击成本为40M美元天数，这符合Lenstra关于密钥大小的讨论[37]。假设AMD Opteron机器的成本估算为390美元（亚马逊价格），X-REC确保了针对BDD的39.9M美元天数，这是一个良好的安全选择。

**图7：与J-REC的端到端延迟比较。**

(a) 包含500本书的数据集
(b) 包含1000本书的数据集
(c) 包含2000本书的数据集

**图8：X-REC在不同数据集上的速度提升。**

(a) ML
(b) FilmTrust

**图9：与FHE的端到端延迟比较。**

(a) Movielens
(b) FilmTrust

**图10：(a) X-REC与J-REC在不同攻击下的位级安全性比较；(b) X-REC与J-REC在BDD攻击下的成功概率比较。**