### Content Analysis and Delivery

**Figure 3. Content analysis and delivery.**

- **(a) Domains per page.**
- **(b) Objects per domain.**
- **(c) Relative inlined CSS/JS size.**

**Key Findings:**
- There is no significant difference in object composition between the H1 and H2 versions of a website.
- 90% of the websites still leverage H1 to serve a portion of their content.

### Number of Connections

We investigate the number of TCP connections used to load a website using H1 versus H2. Motivated by the previous result, we differentiate websites based on the fraction of their objects served with H2. Figure 2(b) shows the Cumulative Distribution Function (CDF) of the number of TCP connections per website as a function of \( \theta \), or the fraction of the webpage's objects served with H2. The data for this plot was collected from our machines in Cleveland between October 6th–13th (8,492 distinct websites).

- **H1 vs. H2 (θ = 0):** On average, H2 requires half as many TCP connections as H1. A few websites can be served via a single TCP connection, but there are extreme cases where up to 100 connections might be required.
- **As θ increases:** The required number of TCP connections decreases. This is intuitive since H1 and H2 cannot share the same TCP connection.
- **θ = 1 (all objects served with H2):** Up to 40% of the websites only need a single TCP connection, indicating that the website's content is hosted entirely on a single webserver. However, the remaining 60% need up to 20 TCP connections. This is a consequence of the way web content is organized today, where objects might reside on third-party domains.

**Key Takeaway:**
- H2 does not currently succeed in serving a page using a single TCP connection: 50% (4,300) of the websites using H2 today use at least 20 TCP connections.

### Page Composition

Websites today try to optimize delivery using several techniques like sharding, inlining, spriting, and concatenation. We focus on sharding and inlining, as measuring spriting and concatenation is not straightforward. Figure 3 summarizes the results of this analysis.

- **Domain Sharding (Fig. 3(a)):** The distribution of the number of unique domains per website is essentially the same for H1 and H2, with a median of 18 domains per page each, and outliers of ~250 unique domains on a single page. This finding is related to the number of TCP connections opened per page. While H2 allows multiplexing object requests over a single TCP connection, most web pages embed objects from many different domains, thus forcing the use of a larger number of TCP connections. Possible explanations include deliberate sharding and deep linking practices.
- **Objects per Domain (Fig. 3(b)):** There is no meaningful difference between H1 and H2: most domains are used for relatively few objects (median = {3.5, 3.5}, mean = {5.5, 5.4}, top 10th-percentile of {9.7, 9.6}, and a max of {179, 171} for H1 and H2 respectively). This further indicates sharding behavior.
- **Inlined CSS/JS Size (Fig. 3(c)):** The size of inlined CSS/JS relative to the total size of the main HTML for each website. About 25% of websites' page contents is more than 25% inlined CSS/JS. Inlining can help ensure faster page loads in H1 by avoiding extra TCP connections, but this is no longer an issue in H2, potentially reducing the utility of caching.

**Key Takeaway:**
- Most websites exhibit H1 practices like domain sharding and inlining in H2. Sharding causes H2 websites to use more TCP connections than necessary, and inlining may reduce the utility of caching.

### Performance Comparison to H1

**Figure 4. CDFs of H2 speedup.**

- **PLT Definition:** Page Load Time (PLT) is the time from when Chrome starts fetching the page to the firing of the JavaScript "onLoad" event.
- **H2 Speedup:** Defined as the difference in PLT between the H1 and H2 versions of a website. Positive values indicate faster delivery with H2.

**Data Collection:**
- From fiber connections, we target 8,492 websites with verified H2 support using three network locations: Barcelona (Spain), Pittsburgh (U.S.), and Cleveland (U.S.).
- For 3G/4G connections, we restrict the list to the 200 most popular websites, as ranked by Alexa, that also support H2, and perform experiments at a single location (Barcelona).

**Results:**
- **Fiber Access:** Positive speedup values for 75–85% of the websites, depending on the network location. Speedup values measured from Barcelona are 10–15% higher due to an additional 14 ms in RTT.
- **Access Speed (Barcelona):** As access speed decreases, the benefit of adopting H2 increases. The average speedup grows from 560 ms on fiber, up to 800 ms on 4G and 1.6 s on 3G. An additional 10% of websites see performance degradation over 3G compared with 4G and fiber, likely due to simpler landing pages.

**Key Takeaway:**
- 80% of the websites adopting H2 see an average page load time reduction of 500 ms (fiber) and 1.6 s (3G). The remaining 20% see an average page load time increase of 1 s (fiber) and 1.4 s (3G).

### Partial Adoption

We analyze the impact of the fraction of the webpage served with H2 (\( \theta \)) on H2 speedup (cf. Fig. 2(a)). Focusing on a single location and access network (Cleveland, fiber), we find that for \( \theta < 1 \), there is no statistically significant difference between the curves. Most websites benefit from even partial H2 adoption. On average, the speedup reduces by 10% when \( \theta = 1 \), which is counter-intuitive and related to the simpler object composition of these websites.

**Key Takeaway:**
- Even partial H2 adoption improves PLT. The decrease in PLT for websites using both H1 and H2 is often greater than that for pure H2 websites, though this is likely an artifact of the small subset of very simple, fully H2 websites.

### Discussion

In December 2015, CloudFlare enabled H2 for all its free customers, resulting in an additional 80,000 websites announcing H2 support, of which about 60,000 exhibit true support. This rapid growth affected Phase III's feasibility, and we have temporarily suspended it to rethink the component. We are collaborating directly with CloudFlare to collect both server and client-side measurements and will soon report the outcome of an improved Phase III.

### Conclusion

This work presents a measurement platform to monitor both adoption and performance of H2, the recently standardized update of H1. Our platform checks the top 1 million Alexa websites daily for protocol support, tests their content structure and performance weekly from multiple network locations, and monthly from 3G and 4G networks. Results are updated daily. We find 68,000 websites already announcing H2 support, out of which 10,000 serve actual content. Classic H1 hacks are still present with H2. In performance, 80% of the websites load faster with H2 than H1, with an average decrease in page load time of 300–560 ms from multiple locations with a fiber access, and up to 1.6 s from a European 3G connection.

### References

1. Is the Web HTTP/2 Yet?. http://isthewebhttp2yet.com
2. Node.js. https://nodejs.org/
3. Planetlab. http://planet-lab.org
4. Langley, A.: TLS Next Protocol Negotiation. https://technotes.googlecode.com/git/nextprotoneg.html
5. Akhshabi, S., Dovrolis, C.: The evolution of layered protocol stacks leads to an hourglass-shaped architecture. In: Proceedings of the ACM SIGCOMM, Toronto, Canada, August 2011
6. Cardaci, A.: Chrome har capturer. https://github.com/cyrus-and/chrome-har-capturer
7. Erman, J., Gopalakrishnan, V., Jana, R., Ramakrishnan, K.: Towards a SPDYier mobile web?. In: Proceedings of the ACM CoNEXT, Santa Barbara, CA, December 2013
8. White, G., Mule, J.-F., Rice, D.: Analysis of spdy and tcp initcwnd. https://tools.ietf.org/html/draft-white-httpbis-spdy-analysis-00
9. Molnár, G.: node-http2. https://github.com/molnarg/node-http2
10. Google: Spdy whitepaper. http://www.chromium.org/spdy/spdy-whitepaper
11. Podjarny, G.: Not as spdy as you thought. http://www.guypo.com/not-as-spdy-as-you-thought/
12. Rizzo, J., Duong, T.: The crime attack. In: Ekoparty (2012)
13. Naylor, D., Finamore, A., Leontiadis, I., Grunenberger, Y., Mellia, M., Munafò, M., Papagiannaki, K., Steenkiste, P.: The cost of the “S” in HTTPS. In: Proceedings of the ACM CoNEXT, Sydney, Australia, December 2014
14. OpenSSL: OpenSSL: The Open Source Toolkit for SSL/TLS. https://www.openssl.org/
15. Padhye, J., Nielsen, H.F.: A comparison of spdy and http performance. Technical report (2012)
16. Peon, R., Ruellan, H.: Hpack - header compression for http/2. https://tools.ietf.org/html/draft-ietf-httpbis-header-compression-12
17. Saxcè, H.D., Oprescu, I., ChenSaamer, Y.: Is HTTP/2 really faster than HTTP/1.1?. In: Proceedings ot he IEEE Global Internet Symposium (GI), Hong Kong, CH, April 2014
18. Stenberg, D.: HTTP2, background, the protocol, the implementations and the future. http://daniel.haxx.se/http2/http2-v1.9.pdf
19. Stenberg, D.: HTTP2 Explained. http://http2-explained.haxx.se/content/en/part5.html
20. Friedl, S., Popov, A., Langley, A., Stephan, E.: Transport layer security (tls) application-layer protocol negotiation extension. https://tools.ietf.org/html/rfc7301
21. The http archive: http://httparchive.org
22. Tuan, N.A.: Maximum concurrent connections to the same domain for browsers. http://sgdev-blog.blogspot.com.es/2014/01/maximum-concurrent-connection-to-same.html
23. Wang, X.S., Balasubramanian, A., Krishnamurthy, A., Wetherall, D.: How speedy is spdy. In: Proceedings of the NSDI, Seattle, WA, April 2014