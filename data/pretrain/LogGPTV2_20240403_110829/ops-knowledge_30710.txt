User: 如何使用Python编写一个TCP Server并监听指定端口？请提供一个完整的代码示例。
Assistant: 下面是一个Python编写的TCP服务器代码示例，它可以监听指定端口并接收客户端传入的数据：

```python
import socket

# 配置服务器IP和端口
IP = '127.0.0.1'
PORT = 8888

# 创建服务器socket对象
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((IP, PORT)) # 绑定IP和端口
server_socket.listen(5) # 启动监听，允许最大连接数5

print(f"Server listening on {IP}:{PORT}...")

while True:
    client_socket, client_address = server_socket.accept() # 等待接收客户端连接
    print(f"Client {client_address[0]}:{client_address[1]} connected.")

    # 接收客户端数据
    data = client_socket.recv(1024)
    print(f"Received data from client {client_address[0]}:{client_address[1]}:")
    print(data.decode())

    # 发送服务端响应给客户端
    response = "Hello, client!"
    client_socket.send(response.encode())

    client_socket.close() # 关闭客户端连接
```

运行以上代码后，TCP服务器将会一直在指定的IP和端口上监听客户端连接。当有客户端连接成功后，服务器会首先接收客户端传入的数据，然后发送一个固定响应给客户端，最后关闭连接。