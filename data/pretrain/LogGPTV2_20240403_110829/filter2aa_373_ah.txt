a9
af
a3
bb
8b
eb
2b
这种类型的Payload类似于字符frobber，但在你需要更细粒度的控制时是有用的。例如，
会话令牌或其他参数值使用CBC模式的块密码加密，有可能系统地由前一密码块内修改
Bit位以改变解密后的数据。在这种情况下，你可以使用的Bit翻转的Payload来确定加密
值内部修改了个别bit位后是否对应用程序产生影响，并了解应用程序是否容易受到攻
击。关于加密模式可以点击阅读这篇文章做进一步的了解。
用户名生成器（Usernamegenerator）这种类型的Payload主要用于用户名和email帐号
的自动生成，其设置界面如下图：
第八章如何使用BurpIntruder
101
如上图所示，我设置了原始值为PI:EMAIL,然后执行此Payload生成器，其生
成的Payload值如图所示
ECB加密块洗牌（ECBblockshuffler）——这种类型的Payload是基于ECB加密模式的
Payload生成器，关于加密模式可以点击阅读这篇文章做进一步的了解。其原理是因为
ECB加密模式中每组64位的数据之间相互独立，通过改变分组数据的位置方式来验证应
第八章如何使用BurpIntruder
102
用程序是否易受到攻击。其设置界面如下图，Payload的配置参数同上一个Payload类型
雷同，就不再赘述。如图：
BurpPayload生成插件（Extension-generated）——这种类型的Payload是基于Burp插
件来生成Payload值，因此使用前必须安装配置Burp插件，在插件里注册一个Intruder
payload生成器，供此处调用。其基本设置和使用步骤如下图所示，因后续章节将重点叙
述Burp插件，此处不再展开。
Payload复制（Copyotherpayload）——这种类型的Payload是将其他位置的参数复制到
Payload位置上，作为新的Payload值，通常适用于多个参数的请求消息中，它的使用场
景可能是：1.两个不同的参数需要使用相同的值，比如说，用户注册时，密码设置会输
入两遍，其值也完全一样，可以使用此Payload类型。2.在一次请求中，一个参数的值是
基于另一个参数的值在前端通过脚本来生成的值，可以使用此Payload类型。它的设置界
第八章如何使用BurpIntruder
103
面和参数比较简单，如下图所示，其中Payload位置的索引值就是指向图中Payloadset的
值。
Payload位置和攻击类型
首先我们来看看Payload位置（Payloadpositions）选项卡的设置界面：
从上图中我们可以看出，Payload位置的设置是基于Http请求的原始消息作为母板，使用一对
§字符来标记出Payload的位置，在这两个号直接包含了母板文本内容。当我们已经把一个
Payload在请求消息的特殊位置上时标明后，发起攻击时，BurpIntruder就把一个Payload值
放置到给出的特殊位置上，替换§符号标示的整个位置。如上图中的参数id后面的§符号之间
的标明的是Payload位置1，name后面的§符号之间标明的是Payload位置2，这个值对应于
Payload设置中的Payloadset的值。我们可以在消息编辑器中间对Payload位置进行编辑，它
主要是由右侧的四个按钮来控制的。
【Add§】——在当前光标的位置添加一个Payload位置标志
【Clear§】——清除所有Payload位置标志或者清除选中的Payload位置标志
第八章如何使用BurpIntruder
104
【Auto§】——对消息内容中可能需要标志的参数做一个猜测，标志为Payload位置，自
动设置完之后再做人工的选择，确定哪些位置是需要传入Payload的。目前Burp支持自动
选择的参数类型有：1.URL请求参数2.Body参数3.cookie参数4.复合型参数属性，比如
文件上传时候的文件名5.XML数据6.JSON数据虽然Burp默认是支持自动标志这些类型
的参数作为Payload位置，但如果是针对于像XML或JSON的节点属性值的，还是需要手
工指定。
【Refresh】——刷新消息内容中带有颜色的部分。
【Clear】——清除消息编辑器中所有内容。
在消息编辑器的上方，有一个下拉选择框，攻击类型（AttackType）。BurpIntruder支持使
用Payload进行多种方式的模拟攻击，目前只要有以下4种。
狙击手模式（Sniper）——它使用一组Payload集合，依次替换Payload位置上（一次攻
击只能使用一个Payload位置）被§标志的文本（而没有被§标志的文本将不受影响），对
服务器端进行请求，通常用于测试请求参数是否存在漏洞。
攻城锤模式（Batteringram）——它使用单一的Payload集合，依次替换Payload位置上
被§标志的文本（而没有被§标志的文本将不受影响），对服务器端进行请求，与狙击手
模式的区别在于，如果有多个参数且都为Payload位置标志时，使用的Payload值是相同
的，而狙击手模式只能使用一个Payload位置标志。
草叉模式（Pitchfork）——它可以使用多组Payload集合，在每一个不同的Payload标志
位置上（最多20个），遍历所有的Payload。举例来说，如果有两个Payload标志位置，
第一个Payload值为A和B，第二个Payload值为C和D，则发起攻击时，将共发起两次攻
击，第一次使用的Payload分别为A和C，第二次使用的Payload分别为B和D。
集束炸弹模式（Clusterbomb）它可以使用多组Payload集合，在每一个不同的Payload
标志位置上（最多20个），依次遍历所有的Payload。它与草叉模式的主要区别在于，执
行的Payload数据Payload组的乘积。举例来说，如果有两个Payload标志位置，第一个
Payload值为A和B，第二个Payload值为C和D，则发起攻击时，将共发起四次攻击，第
一次使用的Payload分别为A和C，第二次使用的Payload分别为A和D，第三次使用的
Payload分别为B和C，第四次使用的Payload分别为B和D。
可选项设置（Options）
可选项设置主要包括请求消息头设置、请求引擎设置、攻击结果设置、grepmatch,grep
extract,greppayloads,以及重定向设置。在使用中，你可以在攻击前进行设置，也可以在攻
击过程中做这些选项的调整。
请求消息头设置（RequestHeaders）——这个设置主要用来控制请求消息的头部信息，
它由UpdateContent-Lengthheader和SetConnection:close两个选项组成。其中
第八章如何使用BurpIntruder
105
UpdateContent-Lengthheader如果被选中，BurpIntruder在每个请求添加或更新
Content-Length头为该次请求的HTTP体的长度正确的值。这个功能通常是为插入可变长
度的Payload到模板的HTTP请求的主体的攻击中，如果没有指定正确的值，则目标服务
器可能会返回一个错误，可能会到一个不完整的请求做出响应，或者可能会无限期地等
待请求继续接收数据。SetConnection:close如果被选中，表示BurpIntruder在每个请
求消息中添加或更新值为“关闭”的连接头，这将更迅速地执行。在某些情况下（当服务器
本身并不返回一个有效的Content-Length或Transfer-Encoding头），选中此选项可能允
许攻击。
请求引擎设置（RequestEngine）——这个设置主要用来控制BurpIntruder攻击，合理
地使用这些参数能更加有效地完成攻击过程。它有如下参数：Numberofthreads并发的
线程数，Numberofretriesonnetworkfailure网络失败时候重试次数，Pausebefore
retry重试前的暂停时间间隔（毫秒），Throttlebetweenrequests请求延时（毫
秒），Starttime开始时间，启动攻击之后多久才开始执行。
第八章如何使用BurpIntruder
106
GrepMatch——这个设置主要用来从响应消息中提取结果项，如果匹配，则在攻击结果
中添加的新列中标明，便于排序和数据提取。比如说，在密码猜测攻击，扫描诸如“密码
不正确”或“登录成功”，可以找到成功的登录;在测试SQL注入漏洞，扫描包
含“ODBC”，“错误”等消息可以识别脆弱的参数。
其选项有Matchtype表示匹配表达式还是简单的字符串，Casesensitivematch是否大
小写敏感，ExcludeHTTPheaders匹配的时候，是否包含http消息头。
GrepExtract——这些设置可用于提取响应消息中的有用信息。对于列表中配置的每个项
目，Burp会增加包含提取该项目的文本的新结果列。然后，您可以排序此列（通过单击
列标题）命令所提取的数据。此选项是从应用数据挖掘有用的，能够支持广泛的攻击。
例如，如果你是通过一系列文档ID的循环，可以提取每个文档寻找有趣的项目的页面标
题。如果您发现返回的其他应用程序用户详细信息的功能，可以通过用户ID重复和检索
有关用户寻找管理帐户，甚至密码。如果“遗忘密码”的功能需要一个用户名作为参数，并
第八章如何使用BurpIntruder
107
有关用户寻找管理帐户，甚至密码。如果“遗忘密码”的功能需要一个用户名作为参数，并
返回一个用户配置的密码提示，您可以通过共同的用户名列表运行和收获的所有相关密
码的提示，然后直观地浏览列表寻找容易被猜到密码。
GrepPayloads——这些设置可用于提取响应消息中是否包含Payload的值，比如说，你
想验证反射性的XSS脚本是否成功，可以通过此设置此项。当此项设置后，会在响应的
结果列表中，根据Payload组的数目，添加新的列，显示匹配的结果，你可以通过点击列
标题对结果集进行排序和查找。
其设置项跟上一个类似，需要注意的是Matchagainstpre-URL-encodedpayloads，如
果你在请求消息时配置了URL-encodepayloads，则这里表示匹配未编码之前的
Payload值，而不是转码后的值。
重定向（Redirections）——这些设置主要是用来控制执行攻击时Burp如何处理重定向，
在实际使用中往往是必须遵循重定向，才能实现你的攻击目的。例如，在密码猜测攻
击，每次尝试的结果可能是密码错误会重定向响应到一个错误消息提示页面，如果密码
正确会重定向到用户中心的首页。但设置了重定向也可能会遇到其他的问题，比如说，
在某些情况下，应用程序存储您的会话中初始请求的结果，并提供重定向响应时检索此
值，这时可能有必要在重定向时只使用一个单线程攻击。也可能会遇到，当你设置重定
第八章如何使用BurpIntruder
108
向，应用程序响应会重定向到注销页面，这时候，按照重定向可能会导致您的会话被终
止时。因其设置选项跟其他模块的重定向设置基本一致，此处就不再重叙。
Intruder攻击和结果分析
一次攻击的发起，通常有两种方式。一种是你在BurpIntruder里设置了Target,Positions,
PayloadsandOptions，然后点击【Startattack】启动攻击；另一种是你打开一个之前保存
的预攻击文件，然后点击【Startattack】启动攻击。无论是哪种方式的攻击发起，Burp都将
弹出攻击结果界面。在攻击的过程中，你也可以修改攻击配置，或者做其他的操作。攻击结
果的界面如下图所示：
从上图我们可以看出，其界面主要又菜单区、过滤器、Payload执行结果消息记录区、请求/响
应消息区四大部分组成。
第八章如何使用BurpIntruder
109
菜单区包含Attack菜单、Save菜单、Columns菜单。Attack菜单主要用来控制攻击行为
的，你可以暂停攻击（pause）、恢复攻击（resume）、再次攻击（repeat）。Save
菜单主要用来保存攻击的各种数据，Attack保存当前攻击的副本，下次可以从此文件进
行再次攻击；Resultstable保存攻击的结果列表，相当于图中的Payload执行结果消息记
录区数据，当然你可以选择行和列进行保存，只导出你需要的数据；Serverresponses
保存所有的服务器响应消息；Attackconfiguration保存当前的攻击配置信息。
Columns菜单主要用来控制消息记录区的显示列。如果某个列被选中，则在Payload执行
结果消息记录区显示，反之则不显示。
过滤器——可以通过查询条件、服务器响应的状态码、注释过Payload执行结果消息记录
区的信息进行过滤。
Payload执行结果消息记录区，又称结果列表（ResultsTable），记录Payload执行时请
求和响应的所有信息，它包含的列有：请求序列——显示请求的序列号，如果配置了记
录未修改的请求消息母板，则会在第一个进行记录。Payload位置——狙击手模式下会
记录Payload值——如果有多个Payload，则存在多个列HTTP状态码——服务器响应状
态码请求时间——执行攻击的时间响应时间——开始接受到响应时间，单位为毫秒。响
应完成时间——响应完成的时间，单位为毫秒。网络错误——Payload执行时是否发生网
络问题超时情况——等待应答响应过程中，是否发生网络超时长度——响应消息的长度
Cookie——任何的Cookie信息Grep——如果设置了Grep匹配、Grep提取、Grep
Payload，则会有多个列显示匹配的信息重定向——如果配置了重定向，则显示注释
——消息记录的注释信息
请求/响应消息区——参考Proxy章节的相关叙述。
在对攻击结果的分析中，你可以通过单击任一列标题（单击标题循环通过升序排序，降序排
序和未排序）重新排序表的内容。有效地解释攻击的结果的一个关键部分是定位有效的或成
功的服务器响应，并确定生成这些请求。有效的应答通常可以通过以下中的至少一个存在差
异：1.不同的HTTP状态代码2.不同长度的应答3.存在或不存在某些表达式4.错误或超时的
发生5.用来接收或完成响应时间的差异比如说，在URL路径扫描过程中，对不存在的资源的
请求可能会返回“404未找到”的响应，或正确的URL会反馈的“200OK”响应。或者在密码猜测
攻击，失败的登录尝试可能会产生一个包含“登录失败”关键字“200OK”响应，而一个成功的登
录可能会生成一个“302对象移动”的反应，或不同的“200OK”响应页面。