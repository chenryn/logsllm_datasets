title:blackhat:asia-20 Wi-Fi Brokering
The common perception of 802.1X WiFi networks using tunneled authentication methods such as PEAP, are that they offer good enough security. Attacks introduced in 2004 by Joshua Wright and Brad Antoniewicz allow the inner MSCHAPv2 challenge/response to be captured, and cracked offline. As MSCHAPv2 is based on DES, Moxie Marlinspike and David Hulton showed that the entire keyspace can be brute forced with specialised hardware at Defcon 20. However, what if you didn't need to crack the password at all, but simply relayed the challenge and response.
When WiFi devices authenticate to a network, in a typical tunnelled EAP scenario, such as PEAP, the security of the authentication is provided by an outer TLS connection, and the inner MSCHAPv2 exchange is assumed secure as long as the TLS channel is. For these tunnelled EAPs, it's possible to relay the inner EAP exchange between a legitimate client device and it's legitimate network, to authenticate ourselves to the network without having to crack the password. This is conceptually similar to SMB relay attacks. The rogue AP and rogue supplicant merely require a network connection between them (via RADIUS), and don't need to be physically co-located, meaning this attack could for e.g. be done while a victim device is at home, and the attacker is at the target network.
Using this method it is possible to authenticate to PEAP protected networks (and possibly others using the same idea) by tricking users into authenticating to your rogue access point without having to crack the MSCHAPv2 challenge/response to retrieve that user's password.
This talk will intro just such an attack and corresponding toolset, as well as explain the process of developing the attack. Finally, we will cover practical defences to the vulnerability.