title:Acoustics to the Rescue: Physical Key Inference Attack Revisited
author:Soundarya Ramesh and
Rui Xiao and
Anindya Maiti and
Jong Taek Lee and
Harini Ramprasad and
Ananda Kumar and
Murtuza Jadliwala and
Jun Han
Acoustics to the Rescue: 
Physical Key Inference Attack Revisited
Soundarya Ramesh and Rui Xiao, National University of Singapore; 
Anindya Maiti, University of Oklahoma; Jong Taek Lee, Harini Ramprasad, 
and Ananda Kumar, National University of Singapore; Murtuza Jadliwala, 
University of Texas at San Antonio; Jun Han, National University of Singapore
https://www.usenix.org/conference/usenixsecurity21/presentation/ramesh
This paper is included in the Proceedings of the 30th USENIX Security Symposium.August 11–13, 2021978-1-939133-24-3Open access to the Proceedings of the 30th USENIX Security Symposium is sponsored by USENIX.Acoustics to the Rescue:
Physical Key Inference Attack Revisited
Soundarya Ramesh1, Rui Xiao1, Anindya Maiti2, Jong Taek Lee1, Harini Ramprasad1, Ananda Kumar1,
Murtuza Jadliwala3, and Jun Han1
1National University of Singapore, 2University of Oklahoma, 3University of Texas at San Antonio
Abstract
Audio
Video
Lock picking and key bumping are the most common at-
tacks on traditional pin tumbler door locks. However, these
approaches require physical access to the lock throughout
the attack, increasing suspicion and chances of the attacker
getting caught. To overcome this challenge, we propose Keyn-
ergy, a stealthy ofﬂine attack that infers key bittings (or secret)
by substantially extending and improving prior work that only
utilizes a still image of the key. Keynergy effectively utilizes
the inherent audible “clicks” due to a victim’s key insertion,
together with video footage of the victim holding the key, in
order to infer the victim’s key’s bittings. We evaluate Keyn-
ergy via a proof-of-concept implementation and real-world
experiments comprising of participants that perform multiple
key insertions across a total of 75 keys with the related audio
recorded using different microphone types placed at varying
distances. We demonstrate that Keynergy achieves an aver-
age reduction rate of around 75% with an acoustics-based
approach alone. When we combine both acoustics and video
together, Keynergy obtains a reduced keyspace below ten keys
for 8% of the keys (i.e., six keys out of 75 keys tested).
1 Introduction
Pin tumbler locks constitute a majority of the market share
in securing home and ofﬁce doors, with a few manufactur-
ers dominating the global market [23, 31, 45, 64]. Conse-
quently, they have been a constant target of several known
hobbyist-style attacks and academic proposals that have at-
tempted to compromise their security. Lock picking and key
bumping are the most common existing attacks, which are
non-destructive techniques that manipulate a lock’s internal
components (known as pins) by inserting specialized instru-
ments in order to unlock it without the possession of a valid
key [17, 19, 70]. However, these techniques inherently have
signiﬁcant limitations. First, they require physical access to
the lock throughout the attack, which raises suspicion and
increases the chances of the attacker getting caught, espe-
cially with the prevalence of motion sensor enabled home
Victim
Victim Attacker
Attacker
Attacker
(a) Proximity Attacker
(b) Distant Attacker
Figure 1: Figure depicts potential attack scenarios of Keyn-
ergy. (a) depicts a Proximity Attacker capturing via the at-
tacker’s smartphone microphone and camera to capture the
sound of key insertion and video of victim holding the key,
respectively. (b) depicts a Distant Attacker employing a direc-
tional parabolic microphone and a telephotography camera.
security cameras [6, 7]. Furthermore, recent locks now ship
with anti-picking and/or bumping features, rendering such
attacks difﬁcult, especially for laypersons. Besides, these at-
tacks require sufﬁcient amount of training while only granting
one-time entry despite a successful attack [48, 49, 63, 70].
To overcome these limitations, one research effort in the
literature proposed a stealthy ofﬂine attack that utilizes a
still image of the victim’s key (that the attacker captures via
telephotography) to infer its bittings (or secret) [35]. While a
novel attempt at a stealthy attack, it requires high-resolution
images of immobile keys at a particular angle (e.g., lying ﬂat
on a surface), which is a signiﬁcant restriction that renders it
less practical. This assumption is not surprising because any
movement while imaging would blur the bittings. In fact, the
authors of this work agree that a more practical attack scenario,
where an attacker captures video footage of a moving key
(e.g., when a victim is holding a key), would cause a serious
degradation to their attack accuracy [35].
The above phenomenon, also observed by us during our
experiments, leads us to the following question: Is it possible
to design a realistic and stealthy ofﬂine physical key inference
attack that overcomes these shortcomings and impractical as-
sumptions of prior work? In search for an answer to this ques-
USENIX Association
30th USENIX Security Symposium    3255
tion, we design Keynergy 1, a novel ofﬂine attack for inferring
the bittings of a key that employs a combined acoustics-video
side-channel. More speciﬁcally, Keynergy substantially ex-
tends and improves the prior image-only attack by utilizing
inherent sounds of key insertions as the victim inserts her/his
key into the lock and video footage capturing the victim hold-
ing the key. The attacker may obtain the sound and video
recording separately, each from a variety of sources and later
consolidate them together. Figure 1 depicts two exemplary
scenarios for obtaining the acoustic and video signals to carry
out the Keynergy attack, where the attacker: (a) records with
her/his smartphone microphone while walking by the door.
At a later time, the attacker records the video of the victim
holding the key (e.g., in an elevator or a hallway). (b) employs
a directional (parabolic) microphone and a telephotography
camera from several meters away.
We design Keynergy by ﬁrst extending the prior work [35]
by leveraging blurred and distorted images (caused by signif-
icant key movements during recording) of the target key at
different angles to obtain a plausible yet relatively large set
of bitting values, thus reducing the overall key search space.
We then utilize the audio signal of key insertion to further
signiﬁcantly reduce the keyspace to a small subset of keys.
However, such further reduction is extremely challenging due
to the following two reasons. First, the remaining keys in
the initially reduced subset from video footages are likely
to exhibit similar bitting patterns, making further reduction
immensely challenging. Second, to exacerbate the problem,
Keynergy needs to subsequently rely only on the sound signal
to infer exceedingly ﬁne-grained bitting depths that differ by
sub-millimeters (i.e., 0.381 mm).
To solve the aforementioned challenges, Keynergy utilizes
the audible “clicks” that occur as the lock’s pins fall off the
key’s ridges (that exist due to cuts of the key’s bittings) during
insertion, to create a click pattern unique to the key. Keynergy
then compares the obtained click pattern against simulated
patterns (of resulting “clicks”) of all possible keys that have
been pre-computed (by the attacker) via simulation modeled
after a constant insertion speed by utilizing the techniques
from prior work [55]. However, the unknown and inconsis-
tent speed of key insertion renders this comparison signiﬁ-
cantly difﬁcult. We overcome this challenge by fusing across
recordings from multiple key insertions of the same victim.
Ultimately, Keynergy outputs a small subset of the most likely
keys that resemble the victim’s key.
Inferring the secret key bittings in this fashion would ul-
timately allow the attacker to replicate the corresponding
key(s), for example, using 3D printing, in order to unlock the
victim’s door. Keynergy, by design, yields many advantages
over the state-of-the-art attacks to compromise pin tumbler
locks. For instance, Keynergy minimizes the attacker’s physi-
cal access to the lock, thus reducing the risks of him/her being
1Key inference from the synergy between two sensing modalities
Inter-pin Distance
(a)
Top pins
Bottom pins
5 4 3 2 1
Shear   
line
Key specifications
Key Insertion
Width
9
b
2
Ridge
r
4
r
3
3
Bitting 
Depth
b
3
Cut angle 
r
5
5
b
4
Shoulder
0
…
5
…
9
Increment
9
b
5
t1
Time
click
t2
Time
Inter-pin Distance
t3
Time
t4
Time
(b)
(c)
Figure 2: (a) depicts a pin tumbler lock consisting of pins
(p1, . . . , p5). When the matching key is inserted, the pins ex-
actly separate at the shear line to unlock; (b) depicts key
speciﬁcation parameters and bittings/ridges within a key. (c)
depicts the origin of sound from the interaction between bot-
tom pins and key ridges during key insertion. The time points
t1 − t4 indicate instances as the relative position of the pin
changes with respect to the ridge. “Click” occurs at time t3.
apprehended. It is also robust against locks with anti-picking
and/or bumping features as Keynergy attacks the key itself
and not the lock. Furthermore, Keynergy would enable those
inexperienced in lock picking to launch this attack, granting
them multiple unrestricted accesses to the victim’s property.
We evaluate Keynergy by means of a proof-of-concept im-
plementation and real-world experiments by recruiting par-
ticipants that insert 75 different keys for a total of more than
3,600 insertions. The resulting key insertion audio is recorded
with multiple microphone types placed at varying distances
from the lock. From our empirical analysis, Keynergy achieves
an average reduction of around 75% with the acoustics-based
approach alone. When we combine both acoustics and video
together, Keynergy obtains a reduced keyspace below ten keys
for 8% of the keys (i.e., six keys out of 75 keys tested).
By means of this work, we hint at a new avenue of sensor
side-channel attacks that combine information from differ-
ent sensing modalities – such as microphone and camera in
our case – abundantly available in today’s era of Internet-of-
Things and Cyber-Physical Systems. An individual modality
may not provide sufﬁcient information, but they could con-
structively complement each other to enable new attacks that
easily surpass the well-studied risks from just the individual
modalities. We hope that this paper would encourage the se-
curity community to explore new defense policies to thwart
such potentially emerging attacks.
2 Primer on Pin Tumber Locks and Keys
Prior to presenting our attack design, we provide background
on the construction of pin tumbler locks and keys. We also
explain the cause of the sound produced during key insertion,
resulting in a click pattern, which forms the basis of our attack.
3256    30th USENIX Security Symposium
USENIX Association
(a)
inter-pin 
distance
inter-pin 
distance
5
4 3 2 1
(b)
d1
d2
d3 d4
d1
d2
d3 d4
1
Figure 3: (a) depicts the click pattern from multiple pins
during key insertion; (b) depicts the simulated click pattern
from a single pin, p1. Time-interval between adjacent clicks
equals inter-ridge distance for a constant speed of insertion.
Pin Tumbler Lock. Pin tumbler locks, such as Schlage SC1,
typically consist of ﬁve pin-pairs, shown as p1, . . . , p5 in Fig-
ure 2(a). Each pair comprises the top and bottom pins, where
adjacent pins are separated by an inter-pin distance. The top
(or driver) pins are spring-loaded, and in their resting position,
they block the rotation of the lock’s plug. Bottom (or key)
pins vary in length, corresponding to its key’s bittings, or cut
depths (i.e., secret). When a matching key is inserted, the
bottom pins correctly sit on each of the key bittings, causing
the pins to align on a shear line, thereby allowing the plug to
rotate and unlocking the lock.
Key. The key of a pin tumbler lock has a unique keycode,
denoted by a 5-digit number b5 . . . b1 (e.g., 39359). The key-
code speciﬁes the bitting depths, which are cut by adhering
to the manufacturer’s speciﬁcations [63]. The speciﬁcations
mandate key parameters including, number of bittings, depth
values, increments, bitting width and cut angle. We further
explain their details in Appendix A. For Schlage SC1 keys,
there are a total of ﬁve bitting positions and ten depth values
(denoted by numbers 0-9), with each adjacent depth value
separated by an increment of 15 milli-inch (0.381 mm) (see
Figure 2(b)). Hence, the maximum number of keys possible is
105. However, in practice, the keyspace is close to 75% of the
maximum, due to constraints imposed by the manufacturer’s
speciﬁcations. Among the many constraints, Maximum Adja-
cent Cut Speciﬁcation (MACS) is an important constraint that
bounds the difference between adjacent depths. For example,
with MACS = 7 (also the case for Schlage SC1 keys), the dif-
ference between two adjacent bittings can be at most 7. Hence,
a key with depths 08345 is not possible, as 0 and 8 yield a
difference greater than 7. On applying all the constraints, the
keyspace for Schlage SC1 keys reduces to 75, 066, i.e., 75%
of the theoretically maximum possible number of keys. We
further enumerate all other constraints in Appendix B.
Key Insertion Sound and Click Pattern Formation. A
ridge on a key’s blade (e.g., r2, r3, r4) is the convergence of
inclines from two adjacent bitting positions, as illustrated in
Figure 2(b). Thus, for a 5-bittings key, there will be a total of
ﬁve ridges. Ridges are an important key feature relevant to
our Keynergy attack, as they are the primary source of sound
produced during key insertion. Speciﬁcally, as depicted in
Figure 2(c), during a key insertion, the bottom pins fall off
the ridges resulting in a sharp “click” sound. Moreover, mul-
tiple ridges and pins result in a series of “clicks” producing
a click pattern as illustrated in Figure 3(a). We post a spec-
trogram of exemplary key insertion sound in the following:
https://bit.ly/3pr5aFS. Keynergy exploits the unique na-
ture of the click pattern for each key to ultimately identify
the correct victim key from a keyspace of all candidate keys.
We perform a feasibility study (Appendix C) to verify the
occurrence of click patterns in human key insertion audio.
3 Threat Model
We now outline the attacker’s goals and capabilities, and fur-
ther enumerate Keynergy’s assumptions.
Goals and Capabilities. The goal of the attacker is to launch
a key inference attack by utilizing the sound as the victim is
inserting the key, and video recording of the victim holding
the key. The attacker launches a stealthy ofﬂine attack to
infer the victim’s key bittings, such that s/he can replicate the
physical key with that information. To achieve this goal, the
attacker may launch two different types of attacks, namely
proximity or distant attacks, as shown in Figure 1.
When launching the proximity attack (Figure 1(a)), we
assume that the attacker is able to secretly capture sound and
video recordings in close vicinity of the victim by means
of appropriate recording devices. For example, the attacker
may walk by the victim and record the sound of victim’s key
insertion with her/his smartphone microphone. Alternatively,
the attacker could record such sound by concealing small
“spy” microphones within objects that are typically placed
near the door, e.g., gardening pots or shoe racks. Similarly,
the attacker may also secretly record a video of the victim
holding the key by means of a smartphone camera when in
close proximity to the victim, for example, in an elevator.
When launching the distant attack (Figure 1(b)), the at-
tacker has the capability to gain access to the sound and video
recordings of the victim’s key insertions from a distance away
(e.g., by hiding in the bushes or inside a parked car by utilizing
a parabolic microphone, telephotography camera, and/or even
a drone ﬂying nearby. These devices are capable of capturing
sound and video signals from a far away distance [35, 46, 56].
Assumptions. We assume that the attacker knows the location
of the victim’s door, as well as the make-and-model of the lock
(visually apparent from the lock). We also assume that the
attacker has the corresponding key speciﬁcations (publicly
available) [9, 47]. Moreover, upon successfully deriving a
small set of candidate keys, the attacker can replicate them by
leveraging key code cutting machine [22] or a 3D printer [20,
34, 52]. Then the attacker needs a short physical access to the
door to try the replicated keys to determine the actual key.
USENIX Association
30th USENIX Security Symposium    3257
(a)
Checkpoint t
1
Checkpoint t
2
Checkpoint t
3
1
2
345
2
1
3
45
3
1
2
4
5
Checkpoint t
4
4
3
5
12
Checkpoint t
5
5
4
23
1
t
1
t
2
t
3
t
4
t
5
Key 1
(b)
less distinct 
clusters
Cluster 1
Cluster 2
Cluster 3
Cluster 4
Cluster 5
Key 2
(c)
more distinct 
clusters
Figure 4: Figure depicts the key at checkpoints (t1, . . . ,t5),
i.e., timestamps at which pin p1 rests at bittings b1, . . . , b5.
Clicks occurring between two checkpoints are clusters. It also
depicts two distinct keys with differing cluster distinctness.
4 Modeling Key Insertion Sound
When launching the Keynergy attack, the attacker compares
the obtained click pattern from the victim’s key insertion
sound with the simulated click patterns (also referred as simu-
lated patterns) that models key insertions based on key speci-
ﬁcations and by assuming a constant insertion speed. In order
to generate such simulated patterns, we utilize techniques
from the prior work, SpiKey [55]. When obtaining simulated
patterns, we observe the formation of click clusters from
intermittent pauses, which we later utilize to overcome the
challenges of variable insertion speeds in designing Keynergy.
as depicted in Figures 4(b) and (c) for Key 1 and Key 2, respec-
tively. Hence, all clicks that occur between two checkpoints
belong to a single cluster (e.g., in the case of a 5-pin lock, the
simulated patterns has exactly ﬁve clusters). Furthermore, the
number of clicks increases by one in each succeeding cluster,
i.e., the ﬁrst cluster has one click, the second cluster has two
clicks, and so on, yielding a total of 15 clicks. However, the
number of distinct clicks within a cluster can be less than the
maximum in the presence of overlapping clicks, i.e., due to
simultaneous occurrence of multiple clicks. For example, a
key with keycode 33333 (i.e., all identical bittings) will have
only nine clicks in its simulated patterns (see Appendix D).
Cluster detection enables a more guided search for clicks
due to the presence of an upper bound on the number of clicks
per cluster (see Section 5). As clusters are a localized time
region in the key insertion, the speed variations within each
cluster tends to be lower in comparison to the entire insertion,
leading to more reliable click pattern matching.
Presence of distinct clusters is crucial for the success of our
attack. We observe that keys have varied cluster distinctness.
Hence, we can categorize keys with more distinct clusters to
be the key type that is more susceptible to Keynergy attack.
For example, Key 2 exhibits more distinct clusters than Key
1 in Figures 4(b) and (c). From our analysis, we observe
that 79% of all Schlage SC1 keys (i.e., 59,207 keys) have
distinct clusters, constituting the more vulnerable key types.
We provide more details of our analysis in Appendix F.
4.1 Simulated Patterns
5 Attack Design and Implementation
We model the simulated patterns by obtaining the click pat-
tern of the ﬁrst pin (based on the insertion sound as presented
in Section 2) for a constant insertion speed of 1 inch/sec. Con-
sequently, the time interval between clicks produced from the
ﬁrst pin case equals the inter-ridge distance (i.e., the horizon-
tal distance between adjacent ridges; see Figure 3(b)). Hence,
the problem of modeling the simulated pattern reduces to
computing the inter-ridge distance.
To compute the inter-ridge distance, we obtain the position
of every ridge on the key by taking advantage of the key’s
geometry and speciﬁcations (see Appendix A). Upon obtain-
ing the ﬁrst pin click pattern, we create the entire simulated
pattern by repeating this click pattern with an offset of the
inter-pin distance as shown in Figure 3(a).
4.2 Formation of Click Clusters
The obtained simulated patterns exhibit a pattern we deﬁne
as clusters, which are click groups formed due to intermittent
pauses that occur during the key insertion. As depicted in
Figure 4(a), pin p1 transiently rests on bitting positions b1
through b4, and ultimately on b5 at the end of the insertion.
We refer to each of the times when p1 rests on the bitting po-
sitions b1, . . . , b5 as checkpoints, which we notate as t1, . . . ,t5,
We now ﬁrst present an overview of Keynergy’s design, and
then delve into the details of its main modules.
5.1 Attack Design Overview
Keynergy utilizes the audio recordings of multiple key in-
sertions (e.g., n insertions over a period of time), computes
the time-interval between clicks in each recording, and ulti-
mately converts them into a single click pattern (i.e., a set of
time-intervals) to compare it against the modeled simulated
patterns of all keys in the keyspace. We present the individual
modules that constitute the design of Keynergy in Figure 5.
First, the Click and Cluster Detection module identiﬁes
the presence of clusters and the corresponding clicks. Sub-
sequently, Synthesized Click Pattern Computation module
selects, for each cluster, the most representative insertion (out
of n insertions), and stitches the selections of each cluster
together to obtain a new synthesized pattern, which we com-
pare against the simulated patterns. Prior to this compari-
son, we design the Video Analysis module, that utilizes the
video recordings of the victim holding the key to reduce the
keyspace to a smaller subset. Finally, the Pattern Comparison
module takes as inputs the synthesized pattern as well as the
simulated patterns of the reduced keyspace, to perform the
3258    30th USENIX Security Symposium
USENIX Association
Video Frames
Reduced Subset
of Key Space
Video Analysis
(cid:1)Sec 5.5(cid:2)
Simulated Patterns
Pattern 
Comparison 