详细可参考：4.2.1.3代码安全。
（4）安全漏洞：评估代码仓库中可能存在的安全漏洞，包括代
码中的漏洞、第三方库中的漏洞等。
（5）操作审计：评估代码仓库的操作审计，确保所有操作可追
踪，以便及时发现和应对安全事件。
（6）私有化部署：将代码仓库部署在私有网络中，例如，企
业、学校的内部网络中，相比公网中的外部代码托管服务理论上会
更安全；
2．效果评估
安全往往只有0和1的概念，要么安全，要么不安全，不存在中
间状态，因此代码安全可靠性的效果评估可通过代码泄露等安全事
件的发生与否来评估，同时通过审计能力来保障安全事件发生时具
备可回溯能力；
（1）代码泄漏次数：代码仓库代码泄露事件的次数；
（2）漏洞数量：代码仓库中发现的漏洞数量；
（3）访问控制：是否具备精细化权限控制的能力；
（4）审计能力：是否具备良好的审计能力；
⽹址：SRE-Elite.com 30 微信：SRE精英联盟
SRE实践白皮书（2023年）
3.2.2.4 仓库可扩展性
构建是指在构建机上把代码、资源文件等源文件编译打包成可
执行的程序文件的过程；在当前的持续集成/持续交付的软件开发模
式下，若构建出现问题，则新的软件版本无法快速发布验证，软件
质量就会受到影响，所以构建的可靠性对于软件服务的可靠性和迭
代效率起到了重要作用；构建可靠性主要由构建效率和构建成功率
两个方面组成；
构建可靠性提升涉及构建工具建设与规划、业务层改造优化、
软硬协同等多个方面，一般需要由平台 SRE、业务开发、服务 SRE
多角色共同参与；
1．代码仓库可扩展性提升措施
（1）分布式版本控制系统：使用支持分布式版本控制系统，比
如 Git，可以支持代码仓库的架构可扩展性，可以将代码库分散在多
个服务器上，从而实现横向可扩展；
（2）集群化：使用集群化技术，如 Kubernetes 等容器编排系
统，可以实现代码仓库的自动化部署和管理；
（3）功能扩展：使用插件等能力，结合业务的个性化诉求，扩
展版本控制系统的功能，满足团队的研发需求；
2．效果评估
代码仓库可扩展的能力可使用以下两个指标评估
（1）架构可扩展性：代码仓库架构是否支持水平横向扩展。
（2）功能可扩展性：是否可以通过插件扩展版本控制系统的功
⽹址：SRE-Elite.com 31 微信：SRE精英联盟
SRE实践白皮书（2023年）
能。
3.2.3 构建可靠性
构建是指在构建机上把代码、资源文件等源文件编译打包成可
执行的程序文件的过程；在当前的持续集成/持续交付的软件开发模
式下，若构建出现问题，则新的软件版本无法快速发布验证，软件
质量就会受到影响，所以构建的可靠性对于软件服务的可靠性和迭
代效率起到了重要作用；构建可靠性主要由构建效率和构建成功率
两个方面组成；
构建可靠性提升涉及构建工具建设与规划、业务层改造优化、
软硬协同等多个方面，一般需要由平台 SRE、业务开发、服务 SRE
多角色共同参与；
3.2.3.1 构建效率
构建效率即构建速度，取决于从构建启动到构建结束的耗时情
况，构建耗时过长的话软件版本无法按时交付，对业务版本迭代效
率产生了影响，构建可靠性就无从谈起。
1．构建效率提升措施
（1）流程自动化
利用自动化构建工具或脚本把构建各个环节串联起来，减少各
环节之间的等待时间；
（2）并行化
通过把一些构建流程从串行改成并行，优化构建流程，提升构
建速度。
⽹址：SRE-Elite.com 32 微信：SRE精英联盟
SRE实践白皮书（2023年）
（3）增量构建
在构建机上执行一次构建时把构建过程中的一些临时文件、中
间产物存起来作为构建缓存，等下一次构建时，由于一般情况下只
有部分代码被修改了，那么没有被修改的代码就能免去构建环节，
直接使用上次的构建缓存，这样就通过增量构建的方式减少了需要
构建的内容，降低了构建耗时。
针对构建机首次构建时没有缓存的问题，可以搭建构建缓存共
享服务器（例如 UE引擎的 DDC服务器），一台构建机的构建缓存会
生成到缓存共享服务器上，供其他构建机使用。
（4）分布式编译
相对单机有限的资源来讲，集群的力量无疑是强大的：一个人
计算 100道数学题，相比 100个同样能力的人一人计算 1道题，孰优
孰劣不言而喻。分布式编译加速就是利用集群的资源，将单个节点
的工作分配给一大批节点，然后再汇总结果。根据需要，资源数量
可以近乎无限地扩充，不再受制于单机的物理架构；时间上，集群
工作所需要的时间往往是原来的几分之一。
（5）软硬协同
部分构建任务比如代码预处理、资源文件处理无法通过分布式
编译加速分发到远端，只能在构建机本地处理，此时本地构建机性
能就成为了瓶颈，可以针对性地提升本地构建机的 CPU/内存/磁盘
IO性能，再结合分布式编译系统，软硬协同提升构建速度。
（6）多进程编译
⽹址：SRE-Elite.com 33 微信：SRE精英联盟
SRE实践白皮书（2023年）
有些编译软件默认只开启单进程编译，导致构建机硬件性能未
得到充分利用，此时可以通过开启多进程编译来提升构建速度。
2．效果评估
（1）基于基线：使用构建耗时超出基线比例来评估单次构建的
效果，每次正常构建完成后，把本次构建耗时上报上去，持续若干
天后，我们就能得到一段时期内的多次稳定构建耗时数据，把这些
数据求一个平均值之后，我们就得到了这一段时期的构建耗时基
线。当一次构建耗时超出基线很多时（比如超出基线 20%），这 次构
建就可能出现了性能问题，在得到构建耗时基线以后，我们可以将
当前构建耗时与基线进行对比来作为 SLO，比如不超过基线 10%即
为健康；
（2）基于阈值：按不同的业务实际情况设置不同的阈值，例如
设置构建耗时不大于 2H为可靠性的衡量标准；
3.2.3.2 构建成功率
构建成功率指指定时间内，构建成功次数占构建总次数的比
例。构建成功率低的话，需要多次构建才能产生可交付的版本，也
是影响构建可靠性的一个关键因素；
1．构建成功率提升措施
（1）保障构建环境可靠性
构建成功率受到构建环境影响，当构建机异常时（比如缺少某
个依赖包，连不上代码仓库，磁盘故障等），构建就会失败。我们需
要保证构建环境的可靠性，比如通过自动化方式批量部署构建机，
⽹址：SRE-Elite.com 34 微信：SRE精英联盟
SRE实践白皮书（2023年）
避免手动部署时遗漏某些依赖包；尽量利用云上的高可靠性网络、
计算和存储。
（2）PreBuild预编译检查
通常的构建是拉取代码后再执行后面的编译流程，这就要求开
发编写完代码后必须提交到代码仓库再启动构建。其实可以在提交
代码到仓库之前就把问题暴露出来，问题越早发现，修复解决的成
本越低；提交到代码库的代码质量越高，问题越少，团队协作起来
就越顺畅，越高效。PreBuild就是在提交代码到仓库之前，利用本地
PreBuild工具进行本地代码检查或传输代码到远端进行预编译代码检
查，从而尽早发现问题，实现质量左移。
2．效果评估
（1）基于基线评估：每次构建完后将成功 /失败状态进行上报，
统计一天的构建成功率，持续若干天后，我们就能得到一段时期内
的多天稳定构建成功率，把这些数据求一个平均值之后，我们就得
到了这一段时期的构建成功率基线。当某天的构建成功率超出基线
很多时（比如超出基线 20%），这 次构建 就可能出现了性能 问题 。在
得到构建成功率基线以后，我们可以将当前构建成功率与基线进行
对比来作为 SLO，比如不低于基线 10%即为健康。
（2）基于阈值评估：按业务需求设置固定的成功率阈值，例如
80%，可以取一个固定周期的所有构建进行统计分析并进行对比，
例如以天/周/月等单位。
⽹址：SRE-Elite.com 35 微信：SRE精英联盟
SRE实践白皮书（2023年）
3.2.4 制品可靠性
制品为构建过程的产物，包括软件包、测试报告、应用配置文
件等，最终提供给研发、测试等多个角色，用于下载并部署到 PC、
console、移动端、服务器等多种不同的设备，从而完成发布和交
付；
制品的可靠性分为制品下载可靠性、制品部署可靠性、制品安
全可靠性三个方面；
制品可靠性提升涉及制品库工具建设与规划、安全、部署分发
等多个方面，一般需要由平台 SRE、服务 SRE、安全人员共同参
与；
3.2.4.1 制品下载可靠性
随着企业的快速发展，研发团队规模的扩大，为拓展全球市场
在国内海外多地建立研发团队，制品的高效交付和管理也成为影响
研发效率的关键，制品分发缓慢、下载困难等为代表的制品库不可
用挑战，急需快速解决；
1．制品下载可用性提升措施
（1）多地分发：根据研发的不同地域分布，按需设置制品的分
发策略，实现构建完成后多地制品分发，从而达到提升制品速率的
目的；
（2）P2P：制品的下载往往具备一定的峰值规律，例如早高峰会
出现大量的集中下载，为提升并发下载的速率，可以使用 P2P 的下
载策略，下载用户越多，速率越快；
⽹址：SRE-Elite.com 36 微信：SRE精英联盟
SRE实践白皮书（2023年）
（3）专属工具：制品的下载使用专属下载工具，能够支持分片
下载、 断点续传、多线程、热点缓存等特性；
（4）镜像源加速：建设距离用户更近用户的镜像源，来提升制
品依赖的拉取速度，减少下载中断；
2．效果评估
（1）下载成功率，下载成功率=1-（失败请求数/用户请求数），
失败请求是指制品库返回的错误码为服务器内部错误码的请求（错