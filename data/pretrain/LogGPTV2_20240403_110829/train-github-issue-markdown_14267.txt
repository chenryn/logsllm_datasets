## Bug Report
**Current Behavior**  
The following code throws an error that `bar` is not defined (no error in
babel@6).
**Input Code**
    async function foo() {
      await (async function bar() {
        await bar();
      })();
    }
    foo();
**Expected behavior**  
The code inside an async self-executing named function is able to refer to the
function by name.
**Babel Configuration (.babelrc)**
    {
      "presets": [
        ["@babel/env", {
          "modules": "cjs",
          "useBuiltIns": "entry"
        }],
        "@babel/typescript",
        "@babel/react"
      ]
    }
**Environment**
  * Babel version(s): @babel/core@7.1.2, @babel/preset-env@7.1.0, @babel/preset-typescript@7.1.0, @babel/preset-react@7.0.0
  * Node/npm version: node v10.10.0, npm@6.4.1
  * OS: OSX 10.13.6
  * Monorepo: no
  * How you are using Babel: webpack (loader) / parcel
**Possible Solution**  
This is probably caused by asyncToGenerator / regenerator. `bar` is eventually
located not inside `bar` itself and the function `bar` is not transpiled into
a function declaration (this was in babel@6 and therefore there was no error
present), but rather is still a function expression.