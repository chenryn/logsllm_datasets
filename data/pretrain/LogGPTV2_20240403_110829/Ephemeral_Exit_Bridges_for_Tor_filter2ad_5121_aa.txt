# Ephemeral Exit Bridges for Tor

## Authors
- Zhao Zhang, Georgetown University
- Tavish Vaidya, Georgetown University
- Kartik Subramanian, Jericho High School
- Wenchao Zhou, Georgetown University
- Micah Sherr, Georgetown University

## Abstract
This paper addresses a significant threat to the Tor network: the increasing frequency of websites applying discriminatory behavior to users arriving via the anonymity network. Our primary contribution is the introduction of ephemeral exit bridges, which are short-lived virtual machines (VMs) on cloud service providers. These exit bridges serve as alternative egress points for Tor and are designed to bypass server-side censorship. Due to the widespread use of managed cloud-based desktop services, blocking requests from the cloud would cause substantial collateral damage.

Our experiments demonstrate that exit bridges effectively circumvent server-side blocking of Tor with minimal overhead. Additionally, we perform a cost analysis and show that even large-scale deployment can be achieved at a low cost.

**Keywords:** Tor, Bridge, Exit, Server-side, Blocking

## I. Introduction
Tor [12] is used by millions of daily users [27, 49], primarily for private web browsing [27]. Blocking access to the relays that make up the Tor network is straightforward, as their locations are public and can be easily enumerated and blocked. To counter this, the Tor Project has developed new obfuscation protocols [16, 31, 54] that allow Tor clients to communicate covertly with bridge relays, whose locations are not advertised by directory servers.

This paper explores a complementary threat to Tor: server-side blocking. Instead of focusing on how censors prevent access to Tor, we examine how websites and hosting providers discriminate against Tor traffic. Prior studies [26, 41] have shown that some websites block Tor traffic, often due to the inclusion of Tor exit relays in IP blacklists or the belief that a disproportionate amount of malicious traffic flows through Tor. Our measurements indicate that the rate of server-side filtering has increased, with approximately 8% of the top 10,000 Alexa sites [4] either significantly altering content for Tor users or blocking Tor traffic entirely.

We argue that this trend poses an existential threat to Tor. As more sites block Tor, more users may abandon the service. Recent work shows that about 80% of Tor visits are to the top 1 million Alexa sites [27], and we estimate that more than 4.8% of Tor traffic would go to blocked sites. This suggests that a large fraction of Tor users will be disenfranchised as top sites continue to block access and Tor becomes less effective in providing access to desired content.

The main contribution of this paper is the design, implementation, and deployment of ephemeral exit bridges. These bridges provide a temporary egress point for Tor traffic, making it difficult to blacklist. Unlike traditional (ingress) Tor bridges, which operate at fixed, unadvertised locations, exit bridges are more similar to domain fronting [21] and operate as ephemeral VMs on popular cloud service providers. They assume users who can access the Tor network but are stymied by server-side discrimination. The threat model for exit bridges assumes a more corporate adversary who operates or hosts a website.

We evaluate exit bridges extensively and show that they enable access with low overhead. Using exit bridges, we were able to access nearly all tested sites, even those that block connections from Tor. While exit bridges introduce additional latency, this is negligible compared to Tor's overall end-to-end latency.

Blocking exit bridges by preventing incoming requests from cloud providers might seem trivial, but it would cause significant collateral damage due to the proliferation of virtualized desktop services like Amazon Workspaces. We show that a surprising amount of web traffic already originates from the cloud, making it a good mixing ground for exit bridge traffic.

We also consider the anonymity implications of exit bridges and find that coalescing egress traffic at cloud service providers increases vulnerability to traffic correlation attacks [25, 33, 37]. This threat is similar to that faced by domain fronting techniques, though in our case, a rogue cloud operator learns the sites being visited rather than the clients requesting them.

Finally, we explore the operational costs of deploying exit bridges. Unlike domain fronting systems, which are expensive, we argue that the cost of operating an exit bridge is sufficiently low that it can be fully funded by its users. We use nascent web revenue services [23] that pay website operators a small amount each time their visitors complete a short online task. We demonstrate that this revenue is sufficient for operating an exit bridge while imposing only a modest time commitment on the bridge user.

## II. Background and Related Work
Tor is an overlay network that provides anonymity by routing user requests through volunteer-operated nodes called relays. The Tor client typically forms anonymous circuits, each consisting of a guard, middle, and exit relay. The guard and exit serve as ingress and egress points for the anonymity network. When a Tor relay comes online, it publishes information about itself, including its public key fingerprint and network address, to the Tor directory authorities. This information is consolidated into signed consensus documents that Tor clients use to discover the relays that comprise the network, enabling source routing.

### Blocking Traffic from Tor
Online services can easily block traffic from Tor by creating a blacklist of IP addresses belonging to exit relays, obtained from the consensus document. Khattak et al. [26] systematically evaluated Tor exit blocking and found that at least 1.3 million IPs block traffic from Tor exits at the TCP/IP layer. They also found that 3.67% of the top 1,000 Alexa websites perform blocking or discrimination of Tor traffic. Singh et al. [41] extended this work by measuring the extent of blocking of search and login functionalities, finding that 20% of the top 500 Alexa websites discriminate against Tor traffic.

### Related Work
Tor was initially designed to allow users to browse the web more privately by separating a user's identity from their network location [12]. However, with various actors trying to block access to the Tor network, Tor has also become a censorship-circumvention tool. Most relevant literature focuses on censors' efforts to block access to the Tor network. Preventing access to guards is trivial since the list of relays is publicly available. To mitigate this, the Tor Project maintains a separate list of bridges, whose IPs are not publicly advertised. However, discovering bridge IP addresses is not especially difficult [11, 15].

Even if bridge locations are not public, censors can identify Tor protocol traffic through traffic analysis or active probing and still restrict access to Tor bridges [24, 51, 55]. As a countermeasure, Tor supports pluggable transports [48] that obfuscate Tor traffic between users and bridges. Various pluggable transports have been proposed and deployed, such as meek [20], which uses HTTP to relay Tor traffic via cloud-based domain fronting and TLS to hide the underlying Tor protocol.

Davidson et al. [10] examined how some users are treated unfairly by content providers because they share a common IP address with a large pool of users, some of whom may be malicious. For example, Cloudflare previously imposed multiple CAPTCHAs on Tor users due to high volumes of malicious activity. Davidson et al. proposed PrivacyPass, a cryptographic protocol that allows users to earn "tokens" by solving challenges, which can then be exchanged in the future without re-interacting with the challenge. However, PrivacyPass requires the participation of the service provider. In contrast, exit bridges are designed as a more general solution and do not require the support of the requested website or its hosting provider.

## III. Design Principles
### A. The State of Server-Side Blocking of Tor
To understand the current state of server-side discrimination against Tor, we conducted an analysis of Tor's accessibility to the top 10,000 Alexa websites. For each website, we performed three consecutive HTTP/S requests and collected their responses: one direct request without using Tor (Direct1) from a local machine, one request through Tor (Tor), and another direct request (Direct2) from the same local machine. We performed two direct requests to identify sites that serve significantly different content for each request (see Figure 1).

We further refined our results by excluding sites that serve CAPTCHAs to Tor users, as users could still access these sites if they solve the puzzles. Table II shows these filtered results. Overall, we found that approximately 8% of the top Alexa sites block Tor. The modest differences in HTML similarity scores between the two crawlers (pycurl and Selenium) are due to the manner in which pages are constructed: pycurl retrieves embedded web objects, while Selenium does a full rendering of the page, including JavaScript.

To validate our automated technique, we randomly sampled 100 sites from the Alexa list and manually evaluated whether the sampled sites discriminated against Tor. We loaded each site directly and contemporaneously requested the site through the TorBrowser. We found that 11% of the sampled sites either blocked Tor or timed out when using the TorBrowser, which generally agrees with our more comprehensive automated analysis.

### B. Threat Model
We adopt the threat model used by Tor [12]. Briefly, we assume an adversary whose goal is to compromise the anonymity of Tor users. The adversary can observe, inject, modify, delete, or delay traffic within its reach. The adversary may also operate or compromise some of the Tor relays and can compromise the entire exit bridge infrastructure.

Additionally, we consider the threat posed by adversaries who, as content providers, aim to discriminate against Tor users by providing differentiated services between Tor and non-Tor users. We use the shorthand "block" to denote any instance where a site discriminates against Tor traffic (e.g., serving different content or blocking access).

We measure the frequency of sites blocking Tor using two techniques: HTTP response codes and HTML similarity scores. We treat a web request as successful if we receive a 2xx or 3xx HTTP response code. A site is considered to block Tor if we receive a success code for Direct1 but not for Tor. We also quantify similarity using the HTML similarity score metric [22, 28], where a score of 1 indicates identical documents, and a score of 0 reflects completely different content. We consider a site to be blocked if the HTML similarity score between Direct1 and Tor is below 0.01, and the score between Direct1 and Direct2 is above 0.01, reducing false positives from geolocation-based content differences.