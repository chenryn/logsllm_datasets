# snyk：2017年开源安全的现状报告
##### 译文声明
本文是翻译文章，文章原作者 snyk，文章来源：snyk.io
原文地址：[https://snyk.io/stateofossecurity/pdf/The%20State%20of%20Open%20Source.pdf?utm_source=blog&utm_campaign=osssecurity](https://snyk.io/stateofossecurity/pdf/The%20State%20of%20Open%20Source.pdf?utm_source=blog&utm_campaign=osssecurity)
译文仅供参考，具体内容表达以及含义原文为准。
> 开源似广袤之地，且越来越多样化。开源安全的整体状况是一个重要的衡量尺度。我们需要了解它当前所处的位置，以便了解我们能够改进的地方。
>
>
> 试图并提供对开源这个生态系统安全健康的全球性观点需要数据的支持。为了更好地理解安全的开源是什么样的以及我们如何可以让开源的安全性变得更好，Snyk公司发出并分析了由500多名开源维护者和用户填写的调查。我们同时查看了Snyk公司基于40,000多个项目的内部数据、由Red
> Hat Linux提供的信息、以及我们通过扫描数百万GitHub仓库和包所收集的数据。
>
> 本报告概述了这些研究结果。
## 概览
去年，包管理工具索引的开源包数量呈爆炸式增长。
包管理器 | 开源包增长百分比  
---|---  
Rubygems | 10%  
Python | 32%  
Maven | 28%  
Npm | 57%  
开源维护者的安全知识并没有保证。仅有16.8% 的维护者认为他们掌握的安全知识很多，而43.7% 的维护者从未开展过代码安全审计。
对43万站点的测试结果显示，77%的站点至少运行了一个带有已知安全漏洞的前端库 (front-end library)。
开源应用库的漏洞数量在2016年增长了53.8%。而在2017年，漏洞数量在此基础上又增长了39.1%。
发布修复方案后，维护者需要通知用户保护应用的安全。88% 的维护者通过发布说明（Release
notes）通知用户，而只有9%的维护者会申请CVE编号，仅有3%的维护者会将漏洞情况告知漏洞监控服务。
漏洞在披露前潜伏的时间中位数是2.5年，不过一旦发现后，维护者的响应速度通常很快。漏洞从发现到修复的时间中位数是16天。
美国国家漏洞库 (NVD) 中的漏洞数量大幅增长，但漏洞覆盖是个问题。
被NVD所覆盖的漏洞百分比：npm（11%）、Rubygem（67%）。
## 开源软件情况总览
整体而言，开源正在蓬勃发展。Forrester和Gartner都表示80%到90%的商用软件开发人员都在应用程序中使用开源组件。全球范围内所有可想象得到的垂直行业都在使用开源代码助力自己的业务。
###  使用
不管你看的是哪个生态系统，它们对开源组件的使用都在增多。
截止到2017年9月底，人们通过PyPi下载Python包的次数已达到63亿，通过npm下载Node包的次数超过873亿。
去年（2016年10月1日至2017年10月1日），包管理工具索引的开源包数量呈爆炸式增长。Rubygems的数量已增长10.3%，Python库的数量增长32%，Maven的数量增长28%，npm包的数量增长57%。
同时，Docker Hub上的公共应用程序数量已超过90万个，而去年的数量为46万左右。
简言之，开源组件的数量之多前所未有，而且它们的便捷性也史无前例。
平均每天下载的npm包数量（单位：百万）
平均每天下载的PyPi包数量（单位：百万）
索引包总数的百分比增长率 （2016年10月至2017年10月）
###  风险和影响
如果你正在使用开源代码，那么安全性是一个首要考虑因素。Github在最近的开源调查中指出，86%的用户表示安全极其或非常重要。但是开源具有内在风险，因为你不知道你所下载的来源是谁，而且不同开源项目之间的安全标准和维护者的技术水平各不相同。
开源组件中的已知漏洞也成为非常具有吸引力的攻击向量。一旦这些漏洞遭公开披露，那么利用代码就会紧随其后。
今年的Struts2漏洞 (CVE-2017-5638)
就是一个例子。研究人员在2017年3月发现了这个漏洞，6天之后，Imperva公司就报告称发现数千个来自40多个国家1323个不同IP地址的漏洞利用尝试。
聚焦Equifax
2017年最引人注目的安全事件之一是Equifax遭受的攻击，它导致数百万记录遭泄露。这次事件是通过利用Apache
Struts2包中的一个已知漏洞引发的，该漏洞能让远程攻击者发送恶意请求，从而执行任意命令。
这个漏洞的时间轴也让其与众不同。2017年3月6日，漏洞被公开披露并修复。一天之后，利用脚本就开始出现。2个月之后，也就是5月13日，Euifax数据泄露事件爆发。再过了2个月之后（7月29日），事件才被发现。这个漏洞从被公开到被利用中间只隔一天，而数据泄露事件是在2个月之后发生。因此，怎么强调优先保证开源的安全性也不为过。
###  开源软件维护者的安全态势
从安全角度来讲，开源的蓬勃发展也带来了挑战。并不存在开源开发必须遵守的、确保软件安全交付的“规则”，因此每个项目的安全态势各不相同。开源软件维护者的挑战在于，他们通常是业余维护这些开源资源，因此他们并没有足够的时间和资源来确保项目的安全。
虽然向开源项目贡献代码的多数人员并非恶意人员，但只有16.8%的受访维护者表示自己觉得自己的安全知识水平为“高”。
减少应用程序中漏洞数量的方法之一是例行开展安全审计，或者开展手动审计或者雇佣渗透测试人员来检查尚未披露的安全风险有哪些。然而43.7%的开源维护者表示从未开展过代码安全审计，而另外31.8%的维护者表示在项目生命周期内只审计过一两次。
目前，并不存在记录开源项目基本安全信息的标准。在GitHub排名前40万公共库中，只有不到1万个公共库中有说明开源项目安全信息的文件，，约占总数的2.4%。
由于缺少公开信息，因此难以评估任何单个开源包或项目的总体安全投入，而且也难以理解如何向开源维护者披露新发现的漏洞。
维护者如何评价自己的安全专业技能
维护者审计代码的频率
###  漏洞的数量有多少？
错误总会发生。卡内基梅隆大学开展的一项调查显示，每1000行商用软件代码中，约有20到30个bug。有了bug之后，漏洞会不可避免地随之产生。
应用程序库中的已知漏洞
自2009年以来，应用程序库中已发布的漏洞数量稳步增长，并且并无放缓的迹象。去年（2016年），所发布的开源安全漏洞数量增长了53.8%（基于Snyk数据库的统计，该数据库追踪的是npm、Maven、Pip、Rubygems和Go），而今年较去年已增长39.1%。
同样的问题也存在于前端。我们测试了超过43万个站点后发现，77%的站点至少运行着一个包含一个已知安全漏洞的库。
系统库中的已知漏洞
从Red Hat Linux中我们看到了一个相反的趋势。影响Red Hat Linux的漏洞数量自2012年以来稳步减少，至今已减少了62%。
按年份公布的开源漏洞数量
按年份统计的Red Hat Linux漏洞数量
漏洞严重性的趋势
对漏洞数量的统计是一方面，不过我们也可以质疑这些漏洞是否会产生真正的影响。下载数量不多的库中出现的高危漏洞可能会导致漏洞数量被人为夸大。
为此，我们查看了从下载量超过5万次的npm包中发现的高危漏洞，同时基于包对客户的重要性查看了Java包中出现的高危漏洞。在这两种情况下，我们发现影响力大的高危漏洞数量在稳步增长。截至2017年的目前阶段，我们看到增长趋势非常相似。
严重的Java和Node包漏洞
Docker容器中的漏洞
容器也面临着类似问题。容器将所有的库、包、设置等整合到一个预配置好的环境中，为人们提供了极大的便利性。
但跟其它事情一样，如果它们没有持续更新的话，也会出现已知漏洞。在最受欢迎的1000个Docker容器中，76.5%的容器中存在已知漏洞，而62.3%的容器中至少存在一个高危漏洞。
系统库中的高危漏洞
Red Hat Linux漏洞再次显示出不同的趋势。影响Red Hat的严重漏洞数量在2012年达到峰值，不过其它年份都基本保持一致。
Red Hat
Linux似乎找到了某个稳定水平。虽然应用程序库的情况并非如此（漏洞数量和严重程度都在增加），但它让我们乐观地认为，只要多做一点工作，那么就可以变得更加安全。
## 开源安全的生命周期
开源安全漏洞的生命周期（从发现到修复）中涉及到很多步骤。生命周期中的每个部分都起着重要作用，从而最终对开源的安全状态产生影响。
发现漏洞（漏洞是如何被发现的，以及它们隐藏了多长时间）——发布修复方案（从披露到漏洞解决所耗费的时间）——通知用户（用户是如何了解到漏洞修复方案的）——采纳发布的修复方案（用户在修复方案发布后采纳的速度有多快）