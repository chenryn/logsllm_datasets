Remote Device Management: An important feature of
mobile devices is the ability to be managed by a remote
entity. This is due to the fact
that usually some entity
has more power over the device than in ordinary computer
environments, e.g., the mobile network operator, the device
manufacturer, or the corporate IT department.
Figure 1. Speciﬁcs of Mobile Devices
addition, mobile devices have a speciﬁc bundle of attack
vectors which are new to some organizations and also
individuals. An overview of these differences is shown in
Figure 1 and they will be introduced subsequently.
1) Creation of Costs: The speciﬁc creation of costs is the
inherent possibility for attackers to generate costs for the
user and revenue for the attacker. It has two aspects: events
that are billed by mobile network operators (e.g., phone calls
or messages) and arising payment systems.
Billed Events: The problem of billed events existed
previously in desktop security when dial-up connections via
modem or ISDN lines were common. Malware (so called
dialers) could dial premium-rate numbers and with it directly
provide proﬁt to the malware author. With the appearance
of broadband connections (like DSL) this problem mostly
vanished, because the computer is now directly connected
to a computer network and does no longer have a direct
interface to the premium-rate numbers of the telephone
network. However, with mobile devices the cost aspect will
likely be a problem for a long time. Even if ﬂat rates for
data or voice services become common, separately charged
premium services will most likely be still available.
Payment Systems: A ﬁrst type of payment systems uses
the messaging functionality of mobile phones as a trustwor-
thy channel for transmitting authorization information, e.g.,
online banking with mobile transaction numbers or online
payment services. In general, there are two communication
channels that need to be compromised. However, the mobile
device is the only channel that needs to be compromised
if an attacker has access to the authentication information
of the targeted account. Customized mobile malware might
forward the messages to the attacker [18] or respond to them
in the expected form. The necessity of these attacks being
customized makes it more probable that mobile malware will
use the cost-creating functionality of the mobile network.
A second type of payment systems uses mobile phones
as payment devices and physical proximity as part of the
authorization process, e.g., payments based on Near Field
98
ReputationSecurity-unaware userLimited device resourcesCreation of costsNetwork environmentExpensivewirelesslinkdevice by the MNO. Other feature changes are mainly
targeted at corporate environments, where the IT department
has to enforce a corporate security policy on such devices.
Examples of these features are disabling Bluetooth, WLAN,
or memory card interfaces to prevent leaks of corporate data
from protected devices. An interesting feature in this context
is the remote wiping functionality. Lost or stolen devices can
be deleted completely by a remote entity [19], [20]. This
feature is mandatory in some regulated industries.
3) Limited Device Resources: A smartphones typically
has limited resources as we discuss in the following.
Resource Limitations: The limited resources of a mo-
bile device are the most obvious difference to ordinary
computers. Even though it is always said that mobile devices
today have the computing power of desktop computers of
“some years ago”, they are still limited compared to high-
end computers. The main limiting factors are the CPU and
memory such as RAM. These two factors limit the so-
phistication of possible security solutions, e.g., sophisticated
intrusion detection algorithms that hardly work for real-life
applications on ordinary computers cannot be transferred to
mobile devices in the foreseeable future.
Battery: A unique factor of smartphones is the battery,
which severely limits the resources available for a security
solution from the point of view of the general acceptance
factor. Although Joe Sixpack might not notice this point,
it is important that a security solution does not constantly
drain large portions of available CPU time to avoid battery
exhaustion.
4) Double Expensive Wireless Link: Another speciﬁc of
mobile security is the expensive wireless link. The term
expensive is meant twofold here. First in terms of computa-
tional costs for the algorithms and second in terms of battery
power. It does not point to monetary costs for the user here.
Expensive Computation Costs: Compared to local com-
putations on the device, the wireless link is always expensive
for an algorithm. Thus, solutions for increasing security
of mobile devices should try to avoid this communication.
On the other hand, transferring computation load from the
device to the mobile network is desirable as the device
resources are limited. Hence, we have a trade-off here
between the limited device resources (e.g., processing power
and memory), the design of security algorithms using the
computing resources of the mobile network, and the expen-
sive communication between these two, which needs to be
balanced out and which might lead to different solutions for
the same user during the lifespan of a mobile device.
High Monetary Communication Costs: A minor aspect
are the communication costs, i.e., the costs of using the
mobile network. Communication cost means that either the
user has to pay for the security solution or the network
operator has to consider these communication costs in the
calculation of its ﬂat rate conditions. However, this is only
a side aspect compared to the computation costs.
5) Reputation: The speciﬁc reputation can be seen as
a weak speciﬁc of mobile devices. The mobile network
operator will invoice every event that generated costs, even
though it might have been generated by malicious software
or an attacker. Therefore, it can be thought that the mobile
network operator could be held responsible from the user’s
point of view. In case of a widespread mobile malware
outbreak with several network operators involved, mobile
malware might even have an impact on the reputation of the
entire mobile phone system in general.
III. ATTACK VECTOR CLASSES AND ATTACK MODELS
In this section, we present a classiﬁcation of attack vectors
for smartphones which we use as a framework for the rest of
this paper. Its intention is to show the relevant attack vectors
that can be used by an attacker.
Mobile device threats are classiﬁed here as belong-
ing to one out of four classes: hardware-centric, device-
independent, software-centric, and user layer attacks [21]:
• Hardware-centric attacks belong to mobile device se-
curity only from a broader point of view. Even though
they are suited to violate security properties (e.g.,
conﬁdentiality of personal data violated by forensic
analysis), they are not suited to be easily exploitable
by an attacker, because these vulnerabilities typically
cannot be exploited remotely, but only with physical
access to the mobile device.
• Device-independent attacks directly belong to the pro-
tection targets of the mobile device user: eavesdropping
on the wireless connection or leaking mirrored personal
data on back end systems both violate conﬁdentiality
of the user’s personal data.
• In the context of this paper, the most important class
of
technical vulnerabilities for mobile devices are
software-centric attacks. Especially the rise of the—
hardly security-speciﬁed—mobile web browser led to
various exploited vulnerabilities in the recent past.
• User layer attacks contain every exploit that is not
of technical nature. Many of today’s mobile malware
samples are not based on a technical vulnerability, but
trick the user into overriding technical security mecha-
nisms [5]. This is an important class of vulnerabilities,
even if not of technical nature. Nevertheless, we do not
discuss this aspect in detail in this paper since the topic
is too broad to cover within our analysis.
From the point of view of defending against vulnerabil-
ities, every class is separate from the others and needs its
own security mechanisms. We will discuss the individual
vectors in the next few sections.
In addition to these attack vectors, we also consider
different attack models. Basically, attack vectors investigate
vulnerabilities on the victim’s side, while attack models limit
the power of an attacker. More speciﬁcally, we distinguish
between passive attackers who do not alter the content sent
99
and active attackers who might do. Obviously, the second
is more powerful than the ﬁrst, while the passive attacker
is more likely to go unnoticed compared to the active one.
Both attackers might have the following goals:
• Eavesdropping: A passive attacker tries to intercept the
conversation between mobile phone and base station
and therefore (implicitly) between the user of the phone
and her caller. In Section V-A, we will see how an
active attacker can make this scenario far more likely.
• Availability Attacks: One possible example is an active
attacker blocking the signal of the mobile phone or
base station, for example via jamming and therefore
rendering the mobile service unusable.
• Privacy Attacks: A passive attacker might use the
smartphone’s ID to locate its owner. Again, this attack
can be made more efﬁcient using an active attacker.
• Impersonation Attacks: In a nutshell, one mobile phone
impersonates as another in such an attack. For example,
a mobile phone uses the service of a base station
without billing facility for the base station, i.e., the
service is used in a fraudulent way.
In the next four sections, we investigate in detail the
security aspects of the four different security classes and
present past work and future challenges in these areas.
IV. HARDWARE-CENTRIC SECURITY ASPECTS
We subdivide this attack vector into attacks on removable
security modules of mobile devices, especially the MNO
smartcard, and attacks against the device itself.
A. Intercepting MNO Smartcard Communication
Communication between the mobile device and the MNO
smartcard is not encrypted because a man-in-the-middle
(MITM) attack on this communication was considered infea-
sible when this interface was speciﬁed. However, nowadays
a product named TurboSIM [22] successfully implements
an MNO smartcard MITM attack. It is a small chip that
intercepts the communication between the MNO smartcard
and the mobile device and is attached by removing a small
part of the smartcard’s plastic frame. With the usage of Tur-
boSIM it was possible to successfully remove the SIM lock
of the iPhone [23]. As the hardware interface is the same for
2G SIM (Subscriber Identity Module) cards and 3G UICCs
(Universal Integrated Circuit Card), it is possible to use
TurboSIM for both settings. A recently started project called
Osmocom SIMtrace is also able to trace the communication
between the SIM card and the mobile device [24].
Without regarding the limitations of the actual imple-
mentation of TurboSIM, in general, such a MITM attack
can change all communication between MNO smartcards
and mobile devices and even inject new messages. This
can be mitigated by encrypting the communication: As the
attacking devices have no access to the internals of the MNO
100
smartcard or the mobile device, the attack would no longer
be easily realizable.
However, it is difﬁcult to address this attack vector with
billions of vulnerable devices deployed world-wide. From a
high-level point of view, it is an engineering task, but there
are several challenges involved. For the solution sketched
above, we are now faced with the problem of the initial key
exchange using only an untrusted channel.
B. Attacking the Device
Hardware-centric attacks that target the mobile device
itself can be subdivided according to the status of the mobile
device: switched on (JTAG attacks) or switched off (forensic
analysis).
1) JTAG Attacks: Joint Test Action Group (JTAG) is a
standard for testing and debugging hardware. Even though
this debugging functionality is no longer necessary in mobile
devices that are sold to end users, the JTAG functional-
ity is sometimes still accessible. This functionality allows
inspecting the device on a deep level, being able to lead
to exploitable vulnerabilities. This threat is addressed by
industry requirements [25].
2) Forensic Analysis: The forensic analysis of mobile
devices is an attack vector targeting the conﬁdentiality of
the stored data. It is an unexpected attack vector and it is
only valid in the case of an attacker getting physical access
to the device. There are two common possibilities for that:
an attacker that takes the device for a limited period of time
without the owner noticing it, and a legitimate change of
ownership. Especially the second case is common today and
as some studies show, it encompasses data from personal
conversations to conﬁdential corporate data [26], [27].
From a high-level point of view, this attack vector can
be closed quite easily by adding sound encryption schemes
to the data. Since smartphones are carried around they
are prone to getting lost or stolen. In order to protect the
stored data on it, non-volatile memory should be encrypted.
Further, a secure store for cryptographic keys should be
used to protect these against threats from the smartphones’
applications itself. A TPM or special functionality of a SIM
card may be utilized for this. Dealing with the solution in
more detail leads to the consideration that cryptographic
functions need the limited device resource processing power,
leading to increased battery usage. Therefore, encryption vs.
battery life need to be weighted against each other. Using
speciﬁc hardware oriented ciphers,
this choice becomes
easier. In particular, designing a battery-friendly cipher is an
open question which would have impact on this question.
V. DEVICE-INDEPENDENT SECURITY ASPECTS
Device-independent vulnerabilities directly belong to the
protection targets of mobile device users. Both eavesdrop-
ping the wireless connection (Section V-A) and leaking
mirrored personal data on back end systems (Section V-H)
violate the conﬁdentiality of the user’s personal data. Similar
to the device-centric attacks of Section IV, these attacks
cannot be exploited by mobile malware either. An exception
could be the wireless pairing process, which could be
inﬂuenced by mobile malware, e.g., by forcing the device
to connect to a rogue access point or base station.
A. GSM: Cryptography for Protecting the Air Link
Unlike land lines, GSM uses radio waves to connect
different participants. More speciﬁcally, a mobile phone and
a base station are linked via an (encrypted) channel. From
a security point of view, we have several issues to consider
in this setting.
Within the GSM speciﬁcation, several security mech-
anisms are in place to prevent
the attacks outlined in
Section III—at least in principle. In a nutshell, each GSM
phone holds a SIM card which supplies all cryptographic
secrets and also cryptographic algorithms. Note the design
decision here to split the mobile and user data (e.g., address
book) from the cryptographic secrets. In particular, we speak
about the A3 algorithm for authentication, the A8 algorithm
for key derivation, and the A5 algorithms (A5/1, A5/2,
and A5/3) for encryption and the “algorithm” A5/0 for
no encryption. For describing the protocol, we will use a
more concise notion—skipping details on lower protocol
levels—without abstracting away any security problem. In
the following, we relate the security objectives from above
to the corresponding steps in the protocol, and also discuss
weaknesses and possible mitigations or even remedies.
B. Initial Connection and Encryption
To use the mobile system, a phone must prove that it
has access to a genuine SIM card. To this end, symmetric
cryptography is used. While asymmetric crypto might be
better suited for this purpose,
it was too heavy weight
25 years ago when the protocols were designed and still
puts a burden on the battery of mobile devices. Hence, all
solutions below use symmetric cryptography only.