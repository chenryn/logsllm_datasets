 **Do you want to request a _feature_ or report a _bug_?**  
bug
**What is the current behavior?**  
Chunks generated by `System.import` or `import` do not affected by
CommonsChunkPlugin.
**If the current behavior is a bug, please provide the steps to reproduce.**  
demo rep
_sources structure_
    src
      |- modules
      |     |- module0.js
      |     |- module1.js
      |- index.js
_webpack.config.js_
    const path = require('path');
    const webpack = require("webpack");
    module.exports = {
        entry: {
            index: './src/index.js'
        },
        output: {
            filename: '[name].js',
            path: path.resolve(__dirname, 'dist'),
            publicPath: 'dist/'
        },
        plugins: [
            new webpack.optimize.CommonsChunkPlugin({
                name: "vendors",
                minChunks: function(module) {
                    return module.resource && (/node_modules/).test(module.resource);
                }
            })
        ]
    };
_index.js_
    for (let i = 0; i  module.default());
    }
_modules/module0.js_ && _modules/module1.js_
    import * as _ from "lodash";
    export default () => console.log(_.random(100));
Generated chunks for module0 & module1 both has copy of `lodash` and
vendors.js is empty.
**What is the expected behavior?**  
Dynamically generated chunks must be affected by CommonsChunkPlugin in same
way as entry points.
**Please mention other relevant information such as the browser version,
Node.js version, webpack version and Operating System.**  
node 7.0.0, webpack 2.2.1, OSX