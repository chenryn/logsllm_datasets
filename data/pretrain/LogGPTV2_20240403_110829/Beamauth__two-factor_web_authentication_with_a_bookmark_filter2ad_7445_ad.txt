must be checked for potential XSS vulnerabilities, while in
BeamAuth, only the login page needs to be veriﬁed. Of
course, it’s a good idea to check all web pages for cross-
site scripting vulnerabilities regardless, but a BeamAuth-
style bookmark token reduces this particular attack surface
signiﬁcantly.
Browser Initialization. It is common for a user to delete
her cookies regularly, in particular because of the privacy
implications of cookies. It is a lot less common for a user to
delete one of her bookmarks, except if she explicitly means to
remove it. Thus, we believe it is less likely that a user would
lose her BeamAuth bookmark than her site-image cookie.
This advantage is partially weakened by the recent use of
Flash cookies [14], a technique which mirrors the cookie in-
side the embedded Flash application, which users clear far
more rarely. However, as these Flash cookies still have signif-
icant privacy implications, it is only a matter of time before
privacy-protection tools allow users to regularly clear these
cookies, too.
Another interesting aspect of bookmarks is that, using
one of the many bookmark synchronization tools mentioned
earlier, it is relatively easy for a user to transmit her Bea-
mAuth bookmark to all of her browsers. There are no known
tools to accomplish this task for cookies. Overall, we expect
the BeamAuth token to be more resilient to regular activity,
multi-browser and multi-computer use.
5.4 Usability Testing
BeamAuth has undergone only very informal user testing
on a handful of willing volunteers. Initial feedback was along
the lines of what was expected: the signup procedure is a
tad tedious, while the login process is relatively straight-
forward. Further usability testing is required, of course, in
particular to better gauge the use across multiple computers
and multiple sites.
5.5 Security in the Web Application Stack
With browsers installed on hundreds of millions of com-
puters, and browser upgrades a fairly rare occurrence with
typically conservative goals, it may become increasingly use-
ful to think about implementing security in the web appli-
cation stack, where the web site developer, rather than only
the web browser developer, can innovate. It will be inter-
esting to think about what small changes can be made to
the browser platform to enable more innovation in the web
application stack, so that the browser need not commit to
one security solution, only to becoming a better platform for
additional security [1].
5.6 Impact on Single Sign-On
Single sign-on is a growing use case which stands to ben-
In particular, systems
eﬁt the most from our proposals.
like OpenID, Yahoo BBauth, and university web-based lo-
gin systems often expect relying parties to redirect users to
the login site for authentication. Users are thus accustomed
to arriving at their login site automatically, which makes the
act of phishing somewhat more likely: an evil relying party
can simply redirect a user to a fake login site.
BeamAuth stands to signiﬁcantly reduce this speciﬁc phish-
ing threat by introducing the “BeamAuth bookmark click” as
an inescapable component of the user login ritual, thereby
redirecting the user away from potential phishing attacks.
BeamAuth is particularly appropriate because, like these sin-
gle sign-on solutions, it works on existing vanilla web browsers
without any add-ons or other additional client-side software.
6. CONCLUSION
Using only existing features of HTTP and modern web
browsers, we have designed and implemented BeamAuth, a
two-factor authentication technique to combat a number of
types of phishing attacks. We believe our proposal makes
the most common phishing attacks noticeably more diﬃcult.
Because our approach requires boomark-bar real estate and
a browser setup procedure, it is best for high-value web sites,
in particular single sign-on sites, where the user is inclined
to make an additional small eﬀort at registration time. Bea-
mAuth exploits the URL Fragment Identiﬁer and its unusual
properties: it is never sent over the network, and changing
it does not trigger a page reload.
Looking ahead, we suspect that the web platform is now
ﬂexible enough for some aspects of application-layer security
to be implemented in JavaScript and HTML. In this model,
new security features can be tested and deployed rapidly, on
a per-web-application basis, without updating the client. It
will be interesting to see if other existing browser features
can be usurped to yield additional security properties.
7. ACKNOWLEDGMENTS
The author would like to thank David Wagner and Chris
Karlof for extensive and insightful feedback on a draft of this
paper, an anonymous CCS reviewer for pointing out that
Alice might as well use the BeamAuth bookmark to reach her
login site in the ﬁrst place, Filipe Almeida and Ben Laurie
for crucial feedback on an earlier (and broken) version of this
scheme, and a number of folks who provided bleeding-edge
user feedback: Rachna Dhamija, Simson Garﬁnkel, Susan
Hohenberger, and Alon Rosen.
8. REFERENCES
[1] Ben Adida. The Browser as a Secure Platform for
Loosely Coupled Private-Data Mashups. In W2SP
2007, Proceedings of the First Workshop on Web 2.0
Security Privacy, Oakland, CA, USA, May 2007.
[2] Ben Adida, David Chau, Susan Hohenberger, and
Ronald L. Rivest. Lightweight Email Signatures
(Extended Abstract). In Fifth Conference on Security
and Cryptography for Networks (SCN’06), volume
4116 of Lecture Notes in Computer Science, pages
288–302. Springer Verlag, 2006.
[3] Bank Of America. SiteKey.
http://www.bankofamerica.com/privacy/sitekey/.
[4] Anti-Phishing Working Group. Digital Signatures to
Fight Phishing Attacks.
http://www.antiphishing.org/smim-dig-sig.htm.
[5] Apache Software Foundation. Apache HTTP Server
Project. http://httpd.apache.org, last viewed on
February 3rd 2007.
[6] T. Berners-Lee, R. Fielding, and L. Masinter. Uniform
Resource Identiﬁer (URI): General Syntax, January
2005. http://www.ietf.org/rfc/rfc3986.txt.
[7] Kim Cameron. As simple as possible – but no simpler.
http://www.identityblog.com/?p=649, last visited
on February 3rd 2007.
[8] Kim Cameron and Michael B. Jones. Design Rationale
behind the Identity Metasystem Architecture, 2006.
http://www.identityblog.com/wp-content/
resources/design_rationale.pdf.
[9] CERT Advisory CA-2000-02 Malicious HTML Tags
Embedded in Client Web Requests.
http://www.cert.org/advisories/CA-2000-02.html.
[10] Remi Delon. CherryPy HTTP Framework.
http://cherrypy.org, last viewed on February 3rd
2007.
[11] Rachna Dhamija, Doug Tygar, and Marti Hearst.
Why Phishing Works. In CHI ’06: Proceedings of the
SIGCHI conference on Human Factors in computing
systems, pages 581–590. ACM Special Interest Group
on Computer-Human Interaction, January 2006.
[12] Rachna Dhamija and J. D. Tygar. The battle against
phishing: Dynamic security skins. In SOUPS ’05:
Proceedings of the 2005 symposium on Usable privacy
and security, pages 77–88, New York, NY, USA, 2005.
ACM Press.
[13] Apple dotMac. http://www.apple.com/dotmac/, last
viewed on 8 May 2007.
[14] Electronic Privacy Information Center. Local Shared
Objects – “Flash Cookies”.
http://www.epic.org/privacy/cookies/flash.html,
last viewed on August 12th, 2007.
[15] Simson Garﬁnkel. Fingerprinting Your Files. MIT
Technology Review, August 2004.
http://www.technologyreview.com/read_article.
aspx?id=13718&ch=infotech.
[16] Simson L. Garﬁnkel. Email-Based Identiﬁcation and
Authentication: An Alternative to PKI? IEEE
Security & Privacy, 1(6):20–26, November 2003.
[17] Jesse James Garrett. Ajax: A New Approach to Web
Applications, February 2005.
http://www.adaptivepath.com/publications/
essays/archives/000385.php.
[18] Google. Google Browser Sync. http:
//www.google.com/tools/firefox/browsersync/.
[19] Anti-Phishing Working Group. Phishing Activity
Trends, November 2006. http://www.antiphishing.
org/reports/apwg_report_november_2006.pdf.
[20] T. Hansen, D. Crocker, and P. Hallam-Baker.
DomainKeys Identiﬁed Mail (DKIM) Message Signing
Service Overview, March 2007. http://www.dkim.
org/specs/draft-ietf-dkim-overview-04.html.
[21] Harvard University. Harvard University PIN System.
http://pin.harvard.edu/, last viewed on February
3rd 2007.
[22] Amir Herzberg and Ahmad Gbara. TrustBar:
Protecting (even Naive) Web Users from Spooﬁng and
Phishing Attacks. Cryptology ePrint Archive, Report
2004/155, 2004. http://eprint.iacr.org/2004/155.
[23] IETF. MTA Authorization Records in DNS (MARID),
June 2004. http://www.ietf.org/html.charters/
OLD/marid-charter.html.
[24] Collin Jackson and Helen Wang. Subspace: Secure
Cross-Domain Communication for Web Mashups. In
Proceedings of the 16th international conference on
World Wide Web (WWW 2007), Banﬀ, Canada, 2007.
[25] Markus Jakobsson and Steven Myers. Phishing and
Countermeasures: Understanding the Increasing
Problem of Electronic Identity Theft.
Wiley-Interscience, 2006.
[26] Paul Johnston. A JavaScript implementation of the
Secure Hash Algorithm.
http://pajhome.org.uk/crypt/md5.
[27] JotSpot. DojoDotBook. http://manual.dojotoolkit.
org/WikiHome/DojoDotBook/Book0.
[28] Ari Juels, Markus Jakobsson, and Tom N. Jagatic.
Cache cookies for browser authentication (extended
abstract). In S&P, pages 301–305. IEEE Computer
Society, 2006.
[29] Brian Krebs. Microsoft Releases Windows Malware
Stats, June 2006.
http://blog.washingtonpost.com/securityfix/
2006/06/microsoft_releases_malware_sta.html.
[30] Ben Laurie. OpenID: Phishing Heaven.
http://www.links.org/?p=187, last visited on
February 3rd 2007.
[31] J. Levine and A. DeKok. Lightweight MTA
Authentication Protocol (LMAP) Discussion and
Comparison, February 2004. http://www.taugh.com/
draft-irtf-asrg-lmap-discussion-01.txt.
[40] Ed Rice. Passwords in the Clear, 2006. http://www.
w3.org/2001/tag/doc/passwordsInTheClear-52, last
viewed on February 3rd 2007.
[41] Blake Ross, Collin Jackson, Nicholas Miyake, Dan
Boneh, and John C. Mitchell. Stronger Password
Authentication Using Browser Extensions. In
P. McDaniel, editor, 14th USENIX Security
Symposium, 2005.
[42] M. Sahami, S. Dumais, D. Heckerman, and
E. Horvitz. A Bayesian Approach to Filtering Junk
E-Mail. In Learning for Text Categorization: Papers
from the 1998 Workshop, May 1998.
[43] Stuart Shechter, Rachna Dhamija, Andy Ozment, and
Ian Fischer. The Emperor’s New Security Indicators.
In S&P. IEEE Computer Society, 2007.
[44] Stanford University. Stanford WebAuth.
http://www.stanford.edu/services/webauth/, last
viewed on February 3rd 2007.
[45] Sync2it. http://www.sync2it.com/, last viewed on 8
[32] John R. Levine. A Flexible Method to Validate SMTP
May 2007.
Senders in DNS, April 2004.
http://www1.ietf.org/proceedings_new/04nov/
IDs/draft-levine-fsv-01.txt.
[33] Justin Mason. Filtering Spam with SpamAssassin. In
HEANet Annual Conference, 2002.
[34] Eric A. Meyer. S5: A Simple Standards-Based Slide
Show System.
http://meyerweb.com/eric/tools/s5/, last viewed
on October 26th, 2006.
[35] T.A. Meyer and B. Whateley. SpamBayes: Eﬀective
open-source, Bayesian based, email classiﬁcation
system. In Conference on Email and Anti-Spam 2004,
July 2004.
[36] Netcraft. Anti-Phishing Toolbar.
http://news.netcraft.com/archives/2004/12/28/
netcraft_antiphishing_toolbar_available_for_
download.html.
[37] Gunter Ollmann. The Pharming Guide. http://www.
[46] Tumbleweed Communications. Digitally-Signed Emails
to Protect Against Phishing Attacks.
http://www.tumbleweed.com/solutions/finance/
antiphishing.html.
[47] Guido van Rossum. The Python Programming
Language. http://python.org, last viewed on
October 26th, 2006.
[48] Xiaoyun Wang, Yiqun Lisa Yin, and Hongbo Yu.
Finding Collisions in the Full SHA-1. In Victor Shoup,
editor, CRYPTO, volume 3621 of Lecture Notes in
Computer Science, pages 17–36. Springer, 2005.
[49] Wikipedia. Usage share of Web Browser. http://en.
wikipedia.org/wiki/Usage_share_of_web_browsers,
last visited on February 3rd 2007.
[50] Min Wu, Simson L. Garﬁnkel, and Robert Miller.
Secure Web Authentication with Cell Phones.
http://groups.csail.mit.edu/uid/projects/
cellphone-auth/.
ngssoftware.com/papers/ThePharmingGuide.pdf.
[51] Yahoo. Browser-Based Authentication.
[38] V. Ramasubramanian and E. Sirer. Perils of transitive
trust in the domain name system. In Proceedings of
the 2005 Internet Measurement Conference (IMC
2005), Berkeley, CA, USA, 2005.
[39] D. Recordon and B. Fitzpatrick. OpenID
Authentication 1.1, May 2006. http://openid.net/
specs/openid-authentication-1_1.html.
http://developer.yahoo.com/auth/, last viewed on
October 26th, 2006.
[52] Yahoo. What is a sign-in Seal? http://security.
yahoo.com/article.html?aid=2006102507, last
viewed on 8 May 2007.
[53] Zishuang (Eileen) Ye and Sean Smith. Trusted Paths
for Browsers. In Dan Boneh, editor, USENIX Security
Symposium, pages 263–279. USENIX, 2002.