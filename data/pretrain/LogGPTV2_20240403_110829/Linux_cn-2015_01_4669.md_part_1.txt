---
author: Adrien Brochard
category: 桌面应用
comments_data:
- date: '2015-01-15 10:33:01'
  message: 不错
  postip: 223.104.20.61
  username: 微博评论
- date: '2015-01-15 10:33:01'
  message: 转发微博.
  postip: 223.104.20.61
  username: 微博评论
- date: '2015-01-15 10:33:01'
  message: '@我的印象笔记'
  postip: 223.104.20.61
  username: 微博评论
- date: '2015-01-15 10:33:01'
  message: '@我的印象笔记'
  postip: 223.104.20.61
  username: 微博评论
- date: '2015-01-15 10:52:34'
  message: 有意思
  postip: 124.254.61.170
  username: soli
- date: '2015-01-15 11:03:02'
  message: Repost
  postip: 110.86.179.68
  username: 微博评论
- date: '2015-01-15 11:03:02'
  message: get
  postip: 110.86.179.68
  username: 微博评论
- date: '2015-01-15 12:03:02'
  message: 棒棒哒
  postip: 157.55.39.135
  username: 微博评论
- date: '2015-01-15 12:03:02'
  message: 很不错
  postip: 157.55.39.135
  username: 微博评论
- date: '2015-01-15 12:33:02'
  message: Repost
  postip: 198.58.103.115
  username: 微博评论
- date: '2015-01-15 12:33:02'
  message: m
  postip: 198.58.103.115
  username: 微博评论
- date: '2015-01-15 12:33:02'
  message: 正在爬vim的学习曲线
  postip: 198.58.103.115
  username: 微博评论
- date: '2015-01-15 13:33:01'
  message: di好赞！vim真是个无底洞呀。。。
  postip: 121.122.11.193
  username: 微博评论
- date: '2015-01-15 18:33:02'
  message: 干货
  postip: 113.91.213.226
  username: 微博评论
- date: '2015-01-15 21:03:02'
  message: 黑科技啊！
  postip: 125.90.49.6
  username: 微博评论
- date: '2015-01-15 22:33:01'
  message: Repost
  postip: 157.55.39.135
  username: 微博评论
- date: '2015-01-16 01:03:03'
  message: Mark!
  postip: 182.92.212.78
  username: 微博评论
- date: '2015-01-17 09:23:38'
  message: 你们的评论太没“干货了”，不知道是不是我菜鸟的关系，首先Ctrl+n补全不了单词会显示pattern not found，还有diffthis
    用Ctrl+W切再输入根本不好使，但是windo diffthis是可以用的。其他的我就没验证了，有谁能站出解释么，别随声附和，对这个网站的编辑们都有所怀疑了，全是不验证的瞎翻译。
  postip: 114.248.151.43
  username: 空中辉舞
- date: '2015-01-17 13:07:09'
  message: "w !sudo tee %\r\ndi\r\n两个命令对我的vim（7.4）不起作用。"
  postip: 112.10.245.150
  username: linlover
- date: '2015-01-17 20:48:55'
  message: 我是校对和发布，我确实没验证过，不过这篇，从我们译者写的译者注来看，应该是验证过的，也许不够充分？
  postip: 123.120.79.76
  username: linux
- date: '2015-01-18 04:30:47'
  message: ctrl+n需要有以前写过的单词才能补全，另外它目前只对c语言的#include内的东西自动抓取。
  postip: 173.212.99.142
  username: 来自 - 加拿大 的 Firefox/Linux 用户
- date: '2015-04-14 18:31:36'
  message: ctrl+p，你试下吧，7.3版本gvim无问题
  postip: 218.80.213.58
  username: 来自 - 上海 的 MSIE/Windows 用户
count:
  commentnum: 22
  favtimes: 20
  likes: 0
  sharetimes: 32
  viewnum: 27357
date: '2015-01-15 10:08:00'
editorchoice: true
excerpt: 如果我的关于这个话题的最新帖子没有提醒到你的话，那我明确地说，我是一个 Vim 的粉丝。所以在你们中的某些人向我扔石头之前，我先向你们展示一系列鲜为人知的
  Vim 命令。我的意思是，一些你可能以前没有碰到过的命令，但可能对你来说很有用。作为第二免责声明，我不知道哪些命令是你可能知道的，以及哪些是对你来说有用的。因此这些命令实际上是一些相对少见，但很可能很有用的
  Vim 命令。  保存文件并退出 说起来有些惭愧，我也是最近才学到这个命令 :x  和下面的命令是等价的： :wq  都是保存当前文件并退出。 （译者注：这两个命令实
fromurl: http://xmodulo.com/useful-vim-commands.html
id: 4669
islctt: true
largepic: /data/attachment/album/201501/14/221707husac00lms29u0lb.jpg
permalink: /article-4669-1.html
pic: /data/attachment/album/201501/14/221707husac00lms29u0lb.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 如果我的关于这个话题的最新帖子没有提醒到你的话，那我明确地说，我是一个 Vim 的粉丝。所以在你们中的某些人向我扔石头之前，我先向你们展示一系列鲜为人知的
  Vim 命令。我的意思是，一些你可能以前没有碰到过的命令，但可能对你来说很有用。作为第二免责声明，我不知道哪些命令是你可能知道的，以及哪些是对你来说有用的。因此这些命令实际上是一些相对少见，但很可能很有用的
  Vim 命令。  保存文件并退出 说起来有些惭愧，我也是最近才学到这个命令 :x  和下面的命令是等价的： :wq  都是保存当前文件并退出。 （译者注：这两个命令实
tags:
- vi
- vim
thumb: false
title: 一些不起眼但非常有用的 Vim 命令
titlepic: false
translator: wangjiezhe
updated: '2015-01-15 10:08:00'
---
如果我的[关于这个话题的最新帖子](http://xmodulo.com/turn-vim-full-fledged-ide.html)没有提醒到你的话，那我明确地说，我是一个 Vim 的粉丝。所以在你们中的某些人向我扔石头之前，我先向你们展示一系列“鲜为人知的 Vim 命令”。我的意思是，一些你可能以前没有碰到过的命令，但可能对你来说很有用。作为第二免责声明，我不知道哪些命令是你可能知道的，以及哪些是对你来说有用的。因此这些命令实际上是一些相对少见，但很可能很有用的 Vim 命令。
![](/data/attachment/album/201501/14/221707husac00lms29u0lb.jpg)
### 保存文件并退出
说起来有些惭愧，我也是最近才学到这个命令
```
:x
```
和下面的命令是等价的：
```
:wq
```
都是保存当前文件并退出。
（译者注：这两个命令实际上并不完全等价，当文件被修改时两个命令时相同的。但如果未被修改，使用 :x 不会更改文件的修改时间，而使用 :wq 会改变文件的修改时间。）
### 基本计算器
在插入模式下，你可以使用 Ctrl+r 键然后输入 =，再输入一个简单的算式。按 Enter 键，计算结果就会插入到文件中。例如，尝试输入：
```
Ctrl+r '=2+2' ENTER
```
![](/data/attachment/album/201501/14/221726xp1ff319n4pngp5n.jpg)
然后计算结果“4 ”会被插入到文件中。
### 查找重复的连续的单词
当你很快地打字时，很有可能会连续输入同一个单词两次，就像 this this。这种错误可能骗过任何一个人，即使是你自己重新阅读一遍也不可避免。幸运的是，有一个简单的正则表达式可以用来预防这个错误。使用搜索命令（默认时 /）然后输入：
```
\(\\)\_s*\1
```
这会显示所有重复的单词。要达到最好的效果，不要忘记把下面的命令：
```
set hlsearch
```
放到你的 .vimrc 文件中高亮所有的匹配。
![](/data/attachment/album/201501/14/221729u02co02332hd28ev.jpg)
### 缩写
一个很可能是最令人印象深刻的窍门是你可以在 Vim 中定义缩写，它可以实时地把你输入的东西替换为另外的东西。语法格式如下：
```
:ab [缩写] [要替换的文字]
```
一个通用的例子是：
```
:ab asap as soon as possible
```
会把你输入的 “asap” 替换为 “as soon as possible”。
### 在你忘记用 root 方式打开文件时的文件保存
这可能是一个在论坛中一直受欢迎的命令。每当你打开一个你没有写入权限的文件（比如系统配置文件）并做了一些修改，Vim 无法通过普通的 “:w” 命令来保存。
你不需要重新以 root 方式打开文件再进行修改，只需要运行：
```
:w !sudo tee %
```
这会直接以 root 方式保存。
### 实时加密文本
如果你不想让别人看懂你的屏幕上的内容，你可以使用一个内置的选项，通过下面的命令使用 [ROT13](https://en.wikipedia.org/wiki/ROT13) 来对文本进行编码：
```
ggVGg?
```
![](/data/attachment/album/201501/14/221731qgz66o3qvveiv0dv.jpg)
gg 把光标移动到 Vim 缓冲区的第一行，V 进入可视模式，G 把光标移动到缓冲区的最后一行。因此，ggVG 使可视模式覆盖这个当前缓冲区。最后 g? 使用 ROT13 对整个区域进行编码。