title:Measurement of loss pairs in network paths
author:Edmond W. W. Chan and
Xiapu Luo and
Weichao Li and
Waiting W. T. Fok and
Rocky K. C. Chang
Measurement of Loss Pairs in Network Paths
Edmond W. W. Chan‡, Xiapu Luo§, Weichao Li‡, Waiting W. T. Fok‡, and Rocky K. C. Chang‡
Department of Computing‡
The Hong Kong Polytechnic University
College of Computing§
Georgia Institute of Technology
{cswwchan|csweicli|cswtfok|csrchang}@comp.polyu.edu.hk
PI:EMAIL
ABSTRACT
Loss-pair measurement was proposed a decade ago for dis-
covering network path properties, such as a router’s buﬀer
size. A packet pair is regarded as a loss pair if exactly one
packet is lost. Therefore, the residual packet’s delay can be
used to infer the lost packet’s delay. Despite this unique
advantage shared by no other methods, no loss-pair mea-
surement in actual networks has ever been reported. In this
paper, we further develop the loss-pair measurement and
make the following contributions. First, we characterize the
residual packet’s delay by including other important factors
(such as the impact of the ﬁrst packet in the pair) which
were ignored before. Second, we employ a novel TCP-based
probing method to measure from a single endpoint all four
possible loss pairs for a round-trip network path. Third,
we conducted loss-pair measurement for 88 round-trip paths
continuously for almost three weeks. Being the ﬁrst set of
loss-pair measurement, we obtained a number of original
results, such as prevalence of loss pairs, distribution of dif-
ferent types of loss pairs, and eﬀect of route change on the
paths’ congestion state.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network
Operations; C.4 [Performance of Systems]: Measure-
ment Techniques
General Terms
Experimentation, Measurement, Performance
Keywords
Loss pair, Packet pair, Non-cooperative, Delay
1.
INTRODUCTION
Packet loss behavior in network paths has been exten-
sively studied for the last twenty years. Most of the eﬀorts
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
focus on packet losses as a result of router congestion. The
packet loss behavior has been characterized by loss rates,
loss stationarity [53], loss episodes [53, 47], and loss corre-
lation [52, 37]. Both active (e.g., ZING [4], Sting [44], Bad-
abing [46, 47], OneProbe [33], and Queen [50]) and passive
(e.g., [5, 39]) measurement methods have been proposed for
measuring losses on end-to-end paths. For active methods,
the probing process is an important consideration for min-
imizing measurement errors [6, 48, 7]. Moreover, various
tomography techniques have been proposed for measuring
packet losses on the link level [13, 17, 15].
Besides the packet loss measurement, it is also useful to
study the correlation between loss and other important met-
rics. However, the correlation problem has so far received
much less attention. A notable exception is using a packet
pair to correlate a packet loss event and the delay that would
have been experienced by the lost packet. A packet pair is
referred to as a loss pair [31, 30] if exactly one packet (the
ﬁrst or second) in the pair is lost. If the two packets traverse
the path close to each other, then the residual packet’s delay
can be used to infer the lost packet’s delay. The loss-pair
analysis was originally motivated by the problem of estimat-
ing buﬀer size of the congested node responsible for dropping
the packet. Other possible applications of the lost-pair mea-
surement include characterizing packet dropping behavior
[31], classifying the type of packet loss [32], detecting domi-
nant congestion links [51], and detecting common congestion
points [21, 41].
Although loss pairs could be considered rare events in typ-
ical network paths, they can be detected by many existing
measurement methods without extra cost. For example, the
path capacity measurement methods, such as [42, 16, 26, 11],
send a sequence of packet pairs to capture the packet disper-
sion from the bottleneck link. But they usually discard the
loss pairs, which fail to provide the dispersion information.
Other measurement methods for packet loss (e.g., [44, 35]),
packet reordering (e.g., [34, 8]), Internet traﬃc character-
ization (e.g., [12]), and path ﬁngerprinting (e.g., [45]) also
send packet pairs for their measurement. Therefore, loss-
pair measurement is considered a bonus feature for these
tools, and the previously regarded useless probes can now
be exploited for discovering additional path properties.
However, loss pairs have not been reported in actual net-
work path measurement. In [31, 32, 30], only ns-2 simulation
and emulated testbed experiments were performed to eval-
uate the eﬀectiveness of using loss pairs to measure path
properties. As a result, the behavior of loss pairs in Internet
paths is largely unknown. Moreover, some important delay
88components, such as the impact of the ﬁrst packet on the
second, have not been taken into consideration. In this pa-
per, we revisit the loss-pair measurement method and make
three main contributions:
1. Delay characterization We conducted a more detailed
analysis for the residual packets’ delays by including the
impacts of cross traﬃc and the ﬁrst packet. The new anal-
ysis invalidates the previous claim that the ﬁrst and second
residual packets give the same result [31, 30]. We instead
show that using the ﬁrst packet’s delay is generally more ac-
curate than the second packet’s delay on inferring the con-
gested router’s queueing delay upon packet loss. Moreover,
we show that the delay variation of the ﬁrst and second
residual packets can be used to estimate the link capacity of
a hop preceding the congested router.
2. Method for measuring loss pairs We exploited One-
Probe’s capability [33] of detecting path events from a single
endpoint to measure all four possible loss pairs on a round-
trip path: two for the forward path and the other two for the
reverse path. To the best of our knowledge, OneProbe is the
ﬁrst non-cooperative method capable of performing compre-
hensive loss-pair measurement. Previous loss-pair measure-
ment considered only two possible loss pairs on a round-trip
path [31, 30]. We also utilized OneProbe’s facility of packet
size conﬁguration to validate that a smaller packet size gen-
erally increases the accuracy of delay inference.
3. Loss-pair measurement in the Internet We con-
ducted loss-pair measurement using HTTP/OneProbe (an
OneProbe implementation based on HTTP/1.1 [19]) for 88
round-trip paths between eight universities in Hong Kong
and 11 PlanetLab nodes located at eight countries. Our
measurement shows that loss pairs were prevalent in the
packet pairs that suﬀered packet loss, and a loss-pair analy-
sis can help infer additional properties about the lossy paths.
Besides, we show that loss pairs’ delays provide path signa-
tures for correlating multiple path measurements.
In §2, we ﬁrst discuss previous works related to this pa-
per.
In §3, we review the loss-pair measurement method
and describe how OneProbe detects the loss-pair events. In
§4, we analyze the residual packets’ delays and relate the
results to the problem of estimating the queueing delay at
the congested router upon packet drop. In §5, we report our
ﬁndings of measuring 88 paths continuously for almost three
weeks. In §6, we conclude this paper with a few potential
directions to extend this work.
2. RELATED WORK
The notion of packet pair was ﬁrst deﬁned in [24] as a
pair of back-to-back packets of the same size dispatched by
a source to a destination. Each packet arrived at the destina-
tion is acknowledged by an acknowledgement packet, which
travels along a returning path back to the source. Assuming
that the pair traverses the path close to each other, they may
observe similar states of the congested hop before a packet
is discarded. Therefore, the residual packet in the loss pair
has been used to estimate the packet dropping mechanism
of the congested hop governed by various active queue man-
agement schemes (e.g., droptail, RED [20], and BLUE [18])
and a droptail queue’s buﬀer size [31], and to classify the
causes for packet loss [32]. In this paper, we analyze the ac-
curacy of two possible residual packets’ delays for inferring
the network path properties.
Previous studies used packet pairs to measure various path
performance metrics,
including packet reordering [34, 8],
packet loss [44, 35], available bandwidth [36, 23], and ca-
pacity [10, 43, 16, 26]. The pioneer work by Keshav [28]
exploited the dispersion of a packet pair to measure the ca-
pacity of rate allocating servers. The packet-pair dispersion
observed from the destination contains the latency of the
packet pair after leaving the bottleneck link. P´asztor and
Veitch [38] analyzed several types of components embedded
in the packet-pair dispersion. On the other hand, Bolot [9]
relied on the queueing of the ﬁrst packet in a packet pair
at the bottleneck hop to measure the bottleneck link’s ca-
pacity. MultiQ [27] exploited the congestion experienced by
packet pairs to infer the capacity of congested links. In this
paper, we propose a method of estimating the capacity of a
network link preceding the congested hop based on the two
residual packets’ delays.
A number of methods were proposed for monitoring con-
gested network links, including Pathload [25] and Pong [14]
that detect network congestions by observing increasing queue-
ing delays of its probe packets. Besides, various methods
[41, 21, 51] were proposed to detect the shared network con-
gestion point in the paths. However, these methods were
evaluated based on either simulation or cooperative mea-
surement. In this paper, by using OneProbe’s probing tech-
nique [33], our loss-pair measurement and analysis can infer
the packet loss behavior for both forward and reverse paths
in a non-cooperative manner and identify artifacts, such as
packet reordering, that may aﬀect the measurement results.
3. ACTIVE LOSS-PAIR MEASUREMENT
In loss-pair measurement, a source node sends a sequence
of probe pairs, each pair consisting of two back-to-back probe
packets, to a destination node. The possible delivery sta-
tuses of a probe pair are 00 (both received), 01 (only the
ﬁrst is received), 10 (only the second is received), or 11
(none is received). The cases of 01 and 10 are referred to
as loss pairs in [31]. Moreover, the destination node may be
induced to send a sequence of response pairs, each pair con-
sisting of two back-to-back response packets, to the source
node. There are four similar delivery statuses for each re-
sponse pair. As a result, there are generally four possible
loss pairs for a round-trip path: P10 and P01 for a probe
pair, and R10 and R01 for a response pair.
Both passive and active methods could be used for mea-
suring loss pairs. An active loss-pair measurement of a path
can be performed on both endpoints of the path or from only
a single endpoint. In this section, we use OneProbe [33] to
illustrate how the four types of loss pairs can be measured
from only one endpoint. We also deployed HTTP/OneProbe
[33] to measure loss pairs on Internet paths, and the results
will be presented in §5.
OneProbe sends a sequence of probe pairs, each consisting
of two TCP data packets, to a remote server. If both packets
are received in the same order, each packet elicits a response
TCP packet, thus returning a response pair. Even if one or
more probe packets is lost, at least one response TCP packet
will be elicited immediately. Moreover, by predetermining
the number, types, and order of the response packets elicited
under each delivery status (00, 01, 10, or 11) of the probe
pair, OneProbe can distinguish the delivery statuses for both
probe and response pairs just based on the elicited response
packets. Figure 1(a) shows two cases. For those marked by
‘X’, OneProbe can simultaneously detect the probe pair’s
89pairs measured by OneProbe.
R00 R10 R01 R11
Server
Probe packet
Response packet
P00
P10
P01
P11
X
X
–
–
X
X
–
–
X
X
–
–
X
X
–
–
(a) The delivery statuses.
OneProbe
P00xR10
P00xR01
P10xR00
P10xR10
P10xR01
P01x
(b) The six loss-pair events.
Figure 1: The delivery statuses of probe and response pairs and six loss-pair events measured by OneProbe.
and response pair’s delivery statuses. For those marked by ‘–
’, OneProbe can only detect the probe pair’s status, because
at most one response packet can be elicited for those cases.
Six cases in Figure 1(a) involve at least one loss pair, and
they are illustrated in Figure 1(b). For P00 and P10, two
response packets can be elicited from the server. As a result,
OneProbe can detect the forward-path and reverse-path loss
pairs at the same time. However, in the absence of a re-
sponse pair, OneProbe can detect only the forward-path loss
pair for P01. Furthermore, packet reordering does not af-
fect the loss-pair measurement, because OneProbe can also
identify from the response packets end-to-end packet order-
ing events for the probe and response pairs.
Source
Destination
1
2
n
n+1
H(1)
H(2)
H(n)
Forward path
(a) One-way path.
Source
1
H(1)
Destination
m+1
H(m+1)
Source
n
n+1
H(n)
Forward path
Reverse path
(b) Round-trip path.
4. ANALYSIS OF LOSS PAIRS’ DELAYS
Figure 2: Two models for the loss-pair analysis.
Since a packet pair’s delay is used for inferring path prop-
erties, in this section we analyze the ﬁrst and second packets’
delay, and their diﬀerence. In the following analysis, we con-
sider the four loss-pair events (P10xR00, P01x–, P00xR10,
and P00xR01) for which a loss pair exists in only one uni-
directional path, and a similar analysis can be performed
for the other events. To simplify the notations, we also use
LP10 to denote a loss pair with the delivery status 10 (i.e.,
P10xR00 and P00xR10), and LP01 to denote that with the
status 01 (i.e., P01x– and P00xR01).
After presenting the network models in §4.1, we ﬁrst derive
in §4.2 the residual packets’ delays in the LP10 and LP01,
taking into consideration the queueing delay at all hops. In
§4.3, we then extend the analysis to the problem of using the
delay to characterize the congested node’s queueing delay
upon packet drops. Finally in §4.4, we show that the LP10’s
and LP01’s delays can be utilized to estimate the capacity
of a link preceding the congested node.
4.1 Network models
Consider a sequence of probe pairs dispatched on a net-
work path of n hops (where n ≥ 1) which also admits
other cross traﬃc. The network path is assumed unchanged
throughout the measurement. Each hop in the path consists
of a store-and-forward node and its outgoing link connecting
to the next hop. We use H (h) to denote the hth hop that
transmits (i.e., serializes) packets to the outgoing link with
capacity of C (h) bits/s. Each node is conﬁgured with a drop-
tail queue which is modeled as a single-server queue with a
buﬀer size of B(h) bits for H (h) and a First-Come-First-Serve
(FCFS) queueing discipline. For convenience, we label the
hops on the path sequentially, starting from 1 at the source
node. The n-hop network path can be either a one-way path
(forward path) depicted in Figure 2(a) or a round-trip path
(forward path and reverse path) in Figure 2(b) in which the
destination node is located at H (m+1), 1 ≤ m < n.
We use {pj−1, pj}, j = 2i, i = 1, 2, . . ., to denote the ith
probe pair with pj−1 being the ﬁrst packet in the pair. Each
probe packet is of S bits long,
including the IP header.
Therefore, sending a probe packet on H (h) incurs at least
a packet transmission delay of X (h) (= S/C (h)) and a con-
stant propagation delay denoted by T (h). Besides, adjacent
probe pairs are assumed to be suﬃciently spaced out, so
that a packet is never queued behind the preceding packet
pair, and the probe packets are not out-of-ordered due to the
FCFS queueing discipline. In the case of round-trip path, we
also make similar assumptions for the response packet pairs.
Moreover, we use the same notations and packet size for the
response pairs to simplify our ensuing discussion. However,
the analysis can be easily adapted to diﬀerent probe and
response packet sizes.
We start the analysis by considering the total delay for pj
, h =
to traverse the ﬁrst h hops of the path, denoted by d(h)
0, 1, . . . , n, and d(0)
, h = 1, . . . , n + 1,
be the time for pj’s to fully arrive (including the last bit of
the packet) at H (h). Therefore,
j = 0. We also let t(h)
j
j
d(h)
j
= t(h+1)
j
= d(h−1)
j
j
− t(1)
+ (cid:16)w(h)
,
j + X (h) + T (h)(cid:17) ,
(1)
j
where w(h)
is the queueing delay experienced at H (h). The
recursive expression in Eqn. (1) also applies to pj−1 after
updating the subscripts.
Moreover, we can relate d(h)
where τ (h+1)
j−1,j is the {pj−1, pj}’s inter-arrival time at H (h+1).
(2)
d(h)