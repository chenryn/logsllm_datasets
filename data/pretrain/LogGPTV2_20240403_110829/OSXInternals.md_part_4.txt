Software movements, and, of course, individuals.
Apple has been around since 1976, and many accounts of its history have been told. If the story of
Apple as a company is fascinating, so is the technical history of Apple's operating systems. In this
chapter,[1] we will trace the history of Mac OS X, discussing several technologies whose confluence
eventually led to the modern-day Apple operating system.
[1]
This book's accompanying web site (www.osxbook.com) provides a more detailed
technical history of all of Apple's operating systems.
[2]
1.1. Apple's Quest for the Operating System
[2] Whereas the word "the" is used here to designate prominence and desirability, it is an
interesting coincidence that "THE" was the name of a multiprogramming system
described by Edsger W. Dijkstra in a 1968 paper.
It was March 1988. The Macintosh had been around for four years. Some Apple engineers and
managers had an offsite meeting. As they brainstormed to come up with future operating system
strategies, they noted down their ideas on three sets of index cards that were colored blue, pink, and
red.
Blue would be the project for improving the existing Macintosh operating system. It would
eventually form the core of System 7.
Pink would soon become a revolutionary operating system project at Apple. The operating system
was planned to be object-oriented. It would have full memory protection, multitasking with
lightweight threads, a large number of protected address spaces, and several other modern features.
After languishing for many years at Apple, Pink would move out to Taligent, a company jointly run
by Apple and IBM.
Since the color red is "pinker than pink," ideas considered too advanced even for Pink were made
part of the Red project.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 2 of 32
As the 1980s drew to an end, the Macintosh system software was at major version 6. System 7, a
result of the Blue project, would be Apple's most significant system yet. However, that would not
appear until 1991.
Meanwhile, Microsoft had developed its Windows 3.x operating system, which became extremely
successful after its release in 1990. Microsoft had also been working on a new operating system
codenamed Chicago. Initially slated for release in 1993, Chicago kept slipping. It was eventually
released as Windows 95. However, Microsoft did release another Windows operating
systemWindows NTin 1993 (Figure 11). NT was an advanced operating system meant for high-end
client-server applications. It had various important features such as symmetric multiprocessing
support, a preemptive scheduler, integrated networking, subsystems for OS/2 and POSIX, virtual
machines for DOS and 16-bit Windows, a new file system called NTFS, and support for the Win32
API.
Figure 11. Microsoft Windows NT 3.1
[View full size image]
Apple needed an answer to Microsoft's onslaught, particularly in the face of the upcoming Windows
95, which was to be an end-user operating system.
The Pink and Red projects would turn out to be rather unsuccessful. Apple would continue to
attempt to solve the "OS problem" one way or another.
1.1.1. Star Trek
Star Trek was a bold project that Apple ran jointly with Novell to port Mac OS to run on the x86
platform. A team consisting of engineers from both Apple and Novell succeeded in creating a very
reasonable prototype in an incredibly short amount of time. The project was canceled, however, for
various reasons: Apple had already committed to the PowerPC; many within and outside of Apple
thought that adding support for the x86 platform would disrupt Apple's existing business model; and
vendor feedback was not encouraging.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 3 of 32
Many years later, Darwinthe core of Apple's far more successful Mac OS Xruns on both the
PowerPC and the x86. Whereas the Star Trek prototype showed the "Happy Mac" logo while
booting up, Darwin/x86 prints the message "Welcome to Macintosh" during boot.
Star Trek was finally vindicated with Apple's mid-2005 announcement of transitioning Mac OS X to
the x86 platform. The first x86-based Macintosh computersthe iMac and the MacBook Pro (the
successor to the PowerBook)were unveiled at the San Francisco Macworld Conference & Expo in
January 2006.
1.1.2. Raptor
Raptor was, in many respects, the Red project. It was supposed to provide Apple with a next-
generation microkernel that would run on any architecture. As the Star Trek project was being
canceled, it was considered for absorption by Raptor, which itself died later due to budgetary
limitations and employee attrition, among other reasons.
1.1.3. NuKernel
NuKernel was a kernel project at Apple that was meant to result in a modern operating system kernel
on more than one occasion. NuKernel was meant to be an efficient microkernel that would facilitate
features such as preemptive multitasking, protected memory, an efficient memory model, a high
degree of system extensibility, and most significantly, a hardware abstraction layer (HAL) that was
expected to allow any computer vendor to easily design Mac OScompatible systems.
1.1.4. TalOS
Apple and IBM formed a company called Taligent in early 1992 to continue work on the Pink
project. Pink originally aimed to be an object-oriented operating system but later morphed into an
object-oriented environment called CommonPoint that ran on many modern operating systems such
as AIX, HP-UX, OS/2, Windows 95, and Windows NT. It was also meant to run on Apple's
NuKernel. Taligent Object Services (TalOS) was the name given to a set of lower-level technologies
to be built around version 3.0 of the Mach kernel. TalOS was meant to be an extensible and portable
operating system, with a small footprint and good performance.
TalOS was object-oriented from the kernel up, with even device drivers and network protocols
implemented in an object-oriented fashion. Taligent's object-oriented libraries were known as
frameworks. There were frameworks for user interfaces, text, documents, graphics, multimedia,
fonts, printing, and low-level services such as drivers. These, along with the TalOS development
tools, explicitly strived to shift the burden of programming from application developers to
application system engineers.
Note that even though there existed other commercial systems such as NEXTSTEP that had object-
oriented application frameworks, Taligent aimed to build its entire programming model around
objects. In NEXTSTEP, the developers who created frameworks had to map object behavior to the
underlying libraries, Unix system calls, Display PostScript, and so onall of which had procedural
APIs. In contrast, Taligent's CommonPoint applications were not meant to use the host operating
system APIs at all.
In 1995, Taligent became a wholly owned subsidiary of IBM. The Pink project did not give Apple
the next-generation operating system that Apple had been seeking.
1.1.5. Copland
Apple made an announcement in early 1994 that it would channel more than a decade of experience
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 4 of 32
into the next major release of the Macintosh operating system: Mac OS 8. The project was
codenamed Copland. It was expected that Copland would be Apple's real response to Microsoft
Windows. With Copland, Apple hoped to achieve several goals, many of which had been long
elusive.
Adopt RISC[3] as a key foundation technology by making the system fully PowerPC-native.
[3]
Reduced instruction-set computing.
Integrate, improve, and leverage existing Apple technologies such as ColorSync, OpenDoc,
PowerShare, PowerTalk, QuickDraw 3D, and QuickDraw GX.
Retain and improve the Mac OS interface's ease of use while making it multiuser and fully
customizable. In particular, Copland's implementation of themes allowed customization of
most user-interface elements on a per-user basis.
Extend interoperability with DOS and Windows.
Make Mac OS systems the best network clients.
Incorporate active assistance that works across applications and networksthat is, make it very
easy to automate a wide variety of tasks.
Release Copland as a system that may be openly licensed to foster development of Mac
OScompatible clones by third parties.
To achieve these goals, Copland was supposed to have a comprehensive set of system-level features,
for example:
A hardware abstraction layer that would also help vendors in creating compatible systems
A microkernel (the NuKernel) at its core
Symmetric multiprocessing with preemptive multitasking
Improved virtual memory with memory protection
A flexible and powerful system extension mechanism
Critical subsystems such as I/O, networking, and file systems running as services on top of the
kernel
Built-in low-level networking facilities such as X/Open Transport Interface (OTI), System V
STREAMS, and Data Link Provider Interface (DLPI)
File searching based on both metadata and content
The ability to perform "live upgrades" on a system without affecting the performance of other
running programs
Figure 12 shows a conceptual view of Copland.
Figure 12. Copland architecture
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 5 of 32
[View full size image]
Work on Copland gained momentum during the early 1990s, and by the mid-1990s, Copland was
heavily counted on to do wonders for the company. Apple dubbed it as "The Mac OS Foundation for
the Next Generation of Personal Computers." However, the project kept slipping. A few prototypical
Driver Development Kit (DDK) releases went out, but a 1996 releaseas had been planned and hoped
fordid not seem feasible. Due to numerous pressures, full memory protection had not been included
after all. Apple's CEO Gil Amelio described the state of Copland as "just a collection of separate
pieces, each being worked on by a different team . . . that were expected to magically come together
."[4]
somehow. . .
[4]
On the Firing Line, by Gil Amelio and William L. Simon (New York: Harper
Business, 1998).
Apple eventually decided to cancel Copland in May 1996. Amelio announced that Copland's best
pieces would be shipped with future releases of their existing system, beginning with the upcoming
System 7.6, whose name was formally changed to Mac OS 7.6.
1.1.6. Gershwin
After the Copland debacle, Apple's need for a new operating system was direr than ever. Focus
shifted briefly to a project named Gershwin, which was to include the painfully elusive memory
protection, among other things. However, it was apparently nothing more than a codename, and it is
believed that nobody ever worked on Gershwin.
1.1.7. BeOS
Apple briefly considered partnering with Microsoft to create an Apple OS based on Windows NT.
Other systems under consideration were Solaris from Sun Microsystems and BeOS from Be. In fact,
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 6 of 32
Apple's acquisition of Be came rather close to materializing.
Be was founded in 1990 by Jean-Louis Gassée, Apple's former head of product development. Be's
capable engineering team had created an impressive operating system in BeOS (Figure 13). It had
memory protection, preemptive multitasking, and symmetric multiprocessing. It even ran on the
PowerPC,[5] thus fitting with Apple's hardware agenda. BeOS was designed to be especially adept at
handling multimedia. It had a metadata-rich file system called BeFS that allowed files to be accessed
via multiple attributes. However, BeOS was still an unfinished and unproven product. For example,
it did not yet support file sharing or printing, and only a few applications had been written for it.
[5]
BeOS initially ran on Be's own PowerPC-based machine called the BeBox. It was
later ported to the x86 platform.
Figure 13. BeOS
[View full size image]
Gassée and Apple negotiated back and forth over Be's acquisition. The total investment in Be at that
time was estimated at about $20 million, and Apple valued Be at $50 million. Gassée sought over
$500 million, confident that Apple would buy Be. Apple negotiated up to $125 million, and Be
negotiated down to $300 million. When things still did not work out, Apple offered $200 million,
and even though it is rumored that Gassée was actually willing to accept this offer, it is also said that
he came back with a "final price" of $275 million, hoping Apple would bite the bullet. The deal did
not happen. In any case, Be had a tough contender in NeXT, a company founded and run by another
one-time Apple employee: Steve Jobs.
Be eventually failed as a companyits technological assets were acquired by Palm, Inc., in 2001.
1.1.8. Plan A
Unlike Be, NeXT's operating systems had at least been proven in the market, despite NeXT not
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 7 of 32
having any resounding successes. In particular, the OPENSTEP system had been well received in the
enterprise market. Moreover, Steve Jobs pitched NeXT's technology very strongly to Apple,
asserting that OPENSTEP was many years ahead of the market. The deal with NeXT did go through:
Apple acquired NeXT in February 1997 for over $400 million. Amelio later quipped that they picked
Be."[6]
"plan A" instead of "plan
[6]
Apple: The Inside Story of Intrigue, Egomania, and Business Blunders, by Jim
Carlton (New York: HarperPerennial, 1998).
NeXT's acquisition would prove pivotal to Apple, as NeXT's operating system technology would be
the basis for what would become Mac OS X. Let us now look at the background of NeXT's systems.
1.2. The NeXT Chapter
All of Steve Jobs' operational responsibilities at Apple were "taken away" on May 31, 1985. Around
this time, Jobs had come up with an idea for a startup for which he pulled in five other Apple
employees. The idea was to create the perfect research computer for universities, colleges, and
research labs. Jobs had even attempted to seek the opinion of Nobel laureate biochemist Paul Berg
on using such a computer for simulations. Although interested in investing in Jobs' startup, Apple
sued Jobs upon finding out about the Apple employees who joined him. After some mutual
agreements, Apple dropped the suit a year after. The startup was NeXT Computer, Inc.
NeXT's beginnings were promising. Jobs initially used $7 million of his personal money. Several
larger investments were made in NeXT, such as $20 million from Ross Perot and $100 million from
Canon a few years later. True to its original goal, NeXT strived to create a computer that would be
perfect in form and function. The result was the NeXT cube.
The cube's motherboard had a clever, visually appealing design. Its magnesium case was painted
black with a matte finish. The monitor stand required an astonishing amount of engineering (for a
monitor stand). An onboard digital signal-processing chip allowed the cube to play stereo-quality
musican exceptional feature for that time. The machines were manufactured in NeXT's own state-of-
the-art factory.
1.2.1. NEXTSTEP
Jobs unveiled the NeXT cube on October 12, 1988, at the Davies Symphony Hall in San Francisco.
[7]
The computer ran an operating system called NEXTSTEP, which used as its kernel a port of CMU
Mach 2.0[8] with a 4.3BSD environment. NEXTSTEP's window server was based on Display
PostScripta marriage of the PostScript page-description language and window system technologies.
[7]
Carnegie Mellon University.
[8]
The Mach implementation in NEXTSTEP included NeXT-specific features, as well
as some features from later versions of CMU Mach.
In 1986, Sun Microsystems had announced its own Display PostScript Window System called
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 8 of 32
NeWS.
NEXTSTEP offered both a graphical user interface and a Unix-style command-line interface. The
NEXTSTEP graphical user interface had multilevel menus, windows whose contents were shown
while being dragged, and smooth scrolling. A dock application always stayed on top and held
frequently used applications. Other NEXTSTEP features included the following:
The ability to "hide" applications instead of quitting them
CD-quality sound
A versatile mail application that supported voice annotation of messages, inline graphics, and
dynamic lookup of email addresses over the network
Drag and drop of complex objects between applications
A services menu that could be accessed from various applications to provide services such as
dictionary and thesaurus
A Digital Librarian application that could build searchable indexes of content dragged to it
A file viewer that extended across the network
An object-oriented device driver framework called the Driver Kit
NEXTSTEP used drag and drop as a fundamental, powerful operation. It was possible to drag an
image from, say, the mail application to a document editing application such as WordPerfect.
Conversely, you could drag a spreadsheet to the mail application to attach it to a message. Since the
file viewer was network capable, a remote directory could be dragged as a shortcut on the user's
desktop (specifically, on the shelf).
NEXTSTEP's native programming language was Objective-C. The system included Interface
Builder, a tool for designing application user interfaces graphically. Several software kits were
provided to aid in application development. A software kit was a collection of reusable classes (or
object templates). Examples include the Application Kit, the Music Kit, and the Sound Kit.
Objective-C
Objective-C is an object-oriented, compiled programming language invented by Brad
Cox and Tom Love in the early 1980s. It is a superset of C, with dynamic binding and a
messaging syntax inspired by Smalltalk. It aims to be a simpler language than C++.
Consequently, it does not have many features of C++, such as multiple inheritance and
operator overloading.
Cox and Love founded StepStone Corporation, from which NeXT licensed the language
and created its own compiler. In 1995, NeXT acquired all rights to StepStone's
intellectual property related to Objective-C.
Apple's Objective-C compiler used in Mac OS X is a modified version of the GNU
compiler.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hhB9A2.h... 20.08.2007
Chapter 1. Origins of Mac OS X Page 9 of 32
At the time of the cube's announcement, NEXTSTEP was at version 0.8. It would be another year
before a 1.0 mature release would be made.
NEXTSTEP 2.0 was released a year after 1.0, with improvements such as support for CD-ROMs,
color monitors, NFS, on-the-fly spell checking, and dynamically loadable device drivers.
In the fall of 1990, Timothy John "Tim" Berners-Lee at CERN created the first web browser. It
offered WYSIWYG browsing and authoring. The browser was prototyped on a NeXT computer in
the space of a few months. The speed of implementation was attributed to the qualities of the
NEXTSTEP software development system.
NEXTSTEP tools allowed fast prototyping for ideas in human-interface design and navigation
techniques.