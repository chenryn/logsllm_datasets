User: How to implement a simple TCP server with Python and perform basic network communication?
Assistant: 1. Import socket library ```python import socket ``` 2. Create a socket object ```python server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ``` 3. Bind IP and port number` ``python IP = "127.0.0.1" PORT = 8888 server_socket.bind((IP, PORT)) ``` 4. Listen to client connection ```python server_socket.listen() ``` 5. Wait for client connection ```python client_socket, client_address = server_socket.accept() ``` 6. Receive messages from the client ```python data = client_socket.recv(1024) ``` 7. Send messages to the client```python client_socket. send("Hello, client!".encode()) ``` 8. Close the connection ```python client_socket.close() server_socket.close() ``` Complete code example: ```python import socket IP = " 127.0.0.1" PORT = 8888 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((IP, PORT)) server_socket.listen() while True: print("Waiting for client...") client_socket, client_address = server_socket.accept() print(f"Connection from {client_address[0]}:{client_address[1]}") data = client_socket.recv(1024) print(f"Received from client: {data.decode ()}") client_socket.send("Hello, client!".encode()) client_socket.close() server_socket.close() ```