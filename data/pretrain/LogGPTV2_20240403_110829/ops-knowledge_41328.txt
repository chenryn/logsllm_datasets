User: How to use ansible to automatically deploy the specified version of the application to multiple servers?
Assistant: The following is an example of using ansible to automatically deploy a specified version to multiple servers: 1. Make sure that ansible is installed and configured on all target servers, and ansible is installed locally. 2. Create a host inventory file, such as `hosts.ini`, that contains all the IP addresses of the target servers, and organize the hosts in it. 3. Create an ansible playbook file `deploy.yaml` locally, specifying the application name and version to be deployed on the target server. ``` --- - name: Deploy app hosts: all vars: app_name: myapp app_version: 1.0.0 tasks: - name: Copy app package to remote servers copy: src: /path/to/{{ app_name }}- {{ app_version }}.tar.gz dest: /tmp/ - name: Unpack app package unarchive: src: "/tmp/{{ app_name }}-{{ app_version }}.tar.gz" dest: "/var/ www/{{ app_name }}" remote_user: "{{ ansible_user }}" owner: "{{ ansible_user }}" group: "{{ ansible_user }}" - name: Start app service service: name: "{{ app_name } }" state: started enabled: true ``` 4. Run the `ansible-playbook` command, specifying the host list file and ansible playbook file. ``` ansible-playbook -i hosts.ini deploy.yaml ``` 5. Ansible will automatically deploy the specified version of the application on all target servers and start the service. 6. If you need to deploy a different application or version, just modify the variable values in the `deploy.yaml` file. At the same time, if the server group changes, just update the IP address in the `hosts.ini` file.