title:Locating throughput bottlenecks in home networks
author:Srikanth Sundaresan and
Nick Feamster and
Renata Teixeira
Locating Throughput Bottlenecks in Home Networks
Srikanth Sundaresan, Nick Feamster, Renata Teixeira
To cite this version:
Locating Throughput Bottlenecks in
Srikanth Sundaresan, Nick Feamster, Renata Teixeira.
Home Networks. ACM SIGCOMM 2014 (demonstration), Aug 2014, Chicago, United States.
10.1145/2619239.2631440. hal-01100729
HAL Id: hal-01100729
https://hal.inria.fr/hal-01100729
Submitted on 13 Jan 2015
HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.
L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.
Copyright
Locating Throughput Bottlenecks in Home Networks
Srikanth Sundaresan†, Nick Feamster†, Renata Teixeira‡
†Georgia Tech ‡INRIA
Abstract
We present a demonstration of WTF (Where’s The Fault?), a system
that localizes performance problems in home and access networks.
We implement WTF as custom ﬁrmware that runs in an off-the-shelf
home router. WTF uses timing and buffering information from
passively monitored trafﬁc at home routers to detect both access link
and wireless network bottlenecks.
Categories and Subject Descriptors:
C.2.3 [Computer-
Communication Networks] Network Operations:
Network
Management; C.2.3 [Computer-Communication Networks]
Network Operations: Network Monitoring
General Terms: Measurement, Performance
Keywords: bottleneck location; home networks; performance diag-
nosis; troubleshooting
1
Introduction
We develop an algorithm and tool that determines whether network
performance bottlenecks lie inside or outside the home network.
WTF (Where’s The Fault?) runs on commodity home routers and de-
tects access link and wireless bottlenecks in a home network. WTF
uses timing and buffering information from passively monitored traf-
ﬁc to design two maximum likelihood detectors: one detects access
link bottlenecks and the other detects wireless network bottlenecks.
Together, these detectors allow us to infer properties of the network
and the most likely location of performance problems. These detec-
tors can be easily measured from resource-constrained home routers.
Although WTF does not determine why a particular bottleneck or
problem exists, it takes an important ﬁrst step in helping users and
ISPs determine where the problem exists, at least to the granularity
of whether the problem is inside or outside the home.
To deploy WTF in as many homes as possible, we implemented it
as custom ﬁrmware that runs on a commodity home router. Although
this approach allows us to collect measurements on a low-cost device
that users are familiar with (and hence, more than willing and able to
install), it introduces a unique set of challenges because the device
is resource constrained. This environment makes it difﬁcult to apply
existing bottleneck detection and wireless analysis tools [1, 2], since
they typically require additional affordances (e.g., multiple wireless
vantage points, signiﬁcant trace collection). WTF works within these
constraints and only collects lightweight passive measurements and
conducts lightweight data processing on the home router.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed for
proﬁt or commercial advantage, and that copies bear this notice and the full citation on
the ﬁrst page. Copyrights for third-party components of this work must be honored. For
all other uses, contact the owner/author(s). Copyright is held by the author/owner(s).
SIGCOMM’14, August 17–22, 2014, Chicago, IL, USA.
Copyright 2014 ACM 978-1-4503-2836-4/14/08
http://dx.doi.org/10.1145/2619239.2631440
(a) Access link is not the bottleneck.
Instantaneous throughput at the
WAN interface varies at short time scales due to high variance in packet
inter-arrival times.
(b) Access link is the bottleneck. Instantaneous throughput at the WAN
interface is steady, due relatively uniform packet interarrival times caused
by upstream shaping.
Figure 1: Behavior of packet inter-arrival times.
2 Detection Algorithm
We exploit a fundamental property of bottleneck links: packets buffer
at the head of the bottleneck queue. This property manifests itself in
two ways from the point of view of the access point depending on
the location of the bottleneck.
Access link bottleneck.We use the intuition that bottleneck links
smooth packet arrival rates. Because a bottleneck link services
packets at a rate slower than they arrive, queues build up at the link,
and the link paces packets at an even rate. Packets upstream of
the bottleneck will arrive according to the natural variation induced
by TCP congestion control, but packets are more evenly spaced
downstream of the bottleneck link. We assume that the most likely
bottleneck upstream of the home network is the access link, so
all ﬂows are buffered, which allows us to use the overall packet
distribution for detection.
We expect to see high variance in packet interarrival times before
the bottleneck link due to congestion control, but signiﬁcantly lower
variance after the bottleneck link itself because the buffer smoothes
packet arrivals. Figure 1 shows this effect: It shows the instanta-
neous TCP throughput at a granularity of 10 ms, as measured from
the gateway. In Figure 1a, the access link throughput is 100 Mbit-
s/s; the wireless link is the bottleneck because the maximum TCP
throughput it can support is about 21 Mbits/s. In Figure 1b, we
shape the access link to 3 Mbits/s, signiﬁcantly lower than the wire-
less capacity. In this case, throughput is less variable. Indeed, the
coefﬁcient of variation for packet interarrival times, cv, when the
012345678910Time(seconds)05101520253035Instantaneousthroughput(Mbits/s)012345678910Time(seconds)05101520253035Instantaneousthroughput(Mbits/s)Figure 2: TCP RTT between client and gateway. RTT is signiﬁcantly higher
when the wireless link is the bottleneck; this is caused by buffering.
Figure 3: Combining the two bottleneck detectors to create a single com-
bined detection algorithm for access link bottlenecks (event B) and wireless
bottlenecks (event W ).
access link is the bottleneck for this example is 0.05; in contrast,
when it is not the bottleneck, cv is 0.88.
Wireless bottleneck.We use the intuition that TCP round-trip time
from the wireless router to the client is high if the wireless link is the
bottleneck. Queues build up at the head of a bottleneck link. Because
we cannot view the wireless buffer directly without instrumenting
the driver, we look at the impact of buffering on TCP ﬂows. We
run tcptrace on the traces we collect on the router to obtain
the RTT of TCP ﬂows, τ, between the router and the clients in the
local network. If the wireless link is not the bottleneck, the RTT
is expected to be low, as the packet will dispatched without delay.
Even though the wireless link is not work-conserving, the delays
caused by medium access control are low compared to buffering
delays.
Figure 2 illustrates this effect with an example. We run two tests
in a setting where the wireless link capacity is about 40 Mbits/s
(obtained by repeated measurements). In the ﬁrst case, the access
link is throttled to 30 Mbits/s, so it is always the bottleneck. In
the second case, the access link is throttled to 70 Mbits/s so that
the wireless link becomes the bottleneck. We see that there is a
signiﬁcant disparity in the TCP RTT in these two cases; when the
wireless link is the bottleneck, the RTT is about 25–30 ms, while
when the access link is the bottleneck, the RTT is about 5 ms. This
effect does not depend on the achieved throughput; it depends solely
on the occurrence of buffering.
Putting it together. We combine the access link and the wireless
link bottleneck detectors using a simple algorithm. Figure 3 shows
the algorithm. Both the detectors are simple threshold based; there-
fore there are four scenarios. When either the access link threshold
or the wireless threshold is breached, we deem the corresponding
link to be the bottleneck. When neither thresholds are breached, we
Figure 4: WTF runs on the gateway between the home network and the
access link, thus offering a unique vantage point for observing pathologies
on either side.
deem the bottleneck to be elsewhere, or the application demand to
be insufﬁcient. In our experiments, we model this by introducing
latency or loss in the path so that TCP throughput is less than the
access link and the wireless throughput—neither are the bottlenecks.
The case when both the thresholds are breached is likely to happen
only when the access link and the wireless link throughputs are
closely matched, as there can only be one throughput bottleneck
in the end-to-end path. We test all the above cases rigorously with
controlled experiments. We obtained robust thresholds for both cv
and τ. We saw that testing for cv with a threshold of 0.8 and τ with
a threshold of 15 ms produced more than a 95% true positive detec-
tion rate and less than a 5% false negative rate for all the cases (the
algorithm produces similar results over a broad range of thresholds;
we use the above values).
3 Demonstration Details
In our demo, we will show WTF working on a commodity home
router. We will use an experiment setup as shown in Figure 4. We
will use trafﬁc controllers to vary the bandwidth, latency, and loss in
the end-to-end path with wireless clients, and show how WTF accu-
rately detects cases where there are throughput bottlenecks — both
access link and wireless bottlenecks — and also cases where there
are no throughput bottlenecks. The tool front-end will be a simple
web page hosted on the router that is constantly refreshed with the
current state of the access link and the wireless clients. We will
also provide detailed information about the wireless network per-
formance that each client gets (bitrates, retransmission rates, etc. );
this will allow us to better understand client performance. While
we can conduct the demo without an upstream Internet connection,
the demo will be enhanced with an Internet connection, especially
as it will be easier to get more people to associate with our router
wireless, and therefore emulate realistic scenarios.
Acknowledgments
We thank Dina Papagiannaki and Yan Grunenberger for early dis-
cussions that led to development of Where’s the Fault. This project
is supported by NSF Award CNS-1059350, a Google Focused Re-
search Award, and the European Community’s Seventh Framework
Programme (FP7/2007-2013) no. 258378 (FIGARO).
References
[1] R. Mahajan, M. Rodrig, D. Wetherall, and J. Zahorjan. Analyzing the
mac-level behavior of wireless networks in the wild. In In Proc. ACM
SIGCOMM, pages 75–86, 2006.
[2] Y. Zhang, L. Breslau, V. Paxson, and S. Shenker. On the characteristics
and origins of internet ﬂow rates. In Proc. ACM SIGCOMM, Pittsburgh,
PA, Aug. 2002.
010203040AchievedThroughput(Mbits/s)0102030TCPRTToverwireless(ms)WirelessbottleneckAccesslinkbottleneckAccess Point Upstream	
  Network	
  Packet arrivals smoothed by upstream buffer (if bottleneck). TCP RTT within home network Home Wireless Network Co-efficient of variation of packet inter-arrival times