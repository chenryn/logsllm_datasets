       var oWSS = new ActiveXObject("WScript.Shell");
       oWSS.RegWrite(regpath, sRegValue, "REG_SZ");
    }
    function readFromRegistry(sRegEntry)
    {
       var regpath = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\" + sRegEntry;        /*Payload injected in Run registry entry*/
       var oWSS = new ActiveXObject("WScript.Shell");    /*WASCRIPT ActiveX object created which is used to inject the Malicous JS in registry*/
       return oWSS.RegRead(regpath);
    }
    function tst()
    {
       writeInRegistry("malware", "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";alert('payload'); "); /*Payload is the JS payload which does the real malicious stuff and it got watchdog, for keeping an eye over the registry entry which makes the infection persistent*/
       alert(readFromRegistry("malware"));
    }
    Click here to run test: 
    /***************************POC end****************************************/
出于本文目的，选择了`Poweliks`作为案例，再加上它能从运行注册表项中释放JS，用它作为例子是不二选择。为了让感染持续存在，它被注入到运行注册表项，用户重新启动计算机，它又会自动重新注册。(因为内存中的感染会在计算机重新启动后消失.)
对于我们的POC，我们使用JS的Alert
API演示(恶意攻击者可能会有所不同)，使用PowerShell或CSCRIPT也可以实现同样的效果。分析了之前无文件感染行为，我们发现它具有一个“看门狗”模块，它可以监控注册表项，如果用户删除它，它也会重新创建注册表项。
这种攻击手法，可能会影响从Windows 95到Windows
10的所有Windows版本，因为所有版本都有预安装IE，而随附IE的WSCRIPT是执行此攻击的唯一必需组件。
### 变体
以下可信应用程序也能达到同样攻击手段：
  * [PowerShell [13]](https://blogs.msdn.microsoft.com/powershell/2006/11/14/its-a-wrap-windows-powershell-1-0-released)
  * [CSCRIPT [14]](https://technet.microsoft.com/en-us/library/bb490887.aspx)
  * [WSCRIPT [15]](https://msdn.microsoft.com/en-us/library/at5ydy31.aspx)
## 预防和解决
Symantec建议用户遵守以下几点，防止一键无文件感染攻击：
  * 不要将HTA文件视为HTML文件
  * 动态检测调用PowerShell，WSCRIPT，CSCRIPT，cmd，RUNDLL32或regserve32的独立注册表项
  * 必要时进行手动清楚卸载（步骤如下）。
### 手动清除
  1. 下载Microsoft的Process Explorer并执行。
  2. 重启进入安全模式。
  3. 选择父进程（恶意软件注入的进程）并终止它（杀死进程树）。
  4. 打开注册表编辑器（运行 - > regedit.exe）。
  5. 在左侧面板中，进入：`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\`
  6. 清理注册表项。
  7. 关闭注册表编辑器
### AV 解决方法
反病毒产品有以下方法定位无文件感染体的路径：
  1. 内存扫描
  2. 注册表扫描
  3. 网络扫描。
## 结语
出于易读性，文章有所增、删、改，若翻译有问题可参考原文，自行修正。
[原文地址](https://www.virusbulletin.com/uploads/pdf/magazine/2017/VB2016-AnandMenrige.pdf)在:
https://www.virusbulletin.com/uploads/pdf/magazine/2017/VB2016-AnandMenrige.pdf
该文章在[YouTube](https://www.youtube.com/watch?v=EIIFly_iR8Y)上的地址：https://www.youtube.com/watch?v=EIIFly_iR8Y，
[PPT](https://www.virusbulletin.com/uploads/pdf/conference_slides/2016/Anand_Menrige-vb-2016-One-Click-Fileless.pdf)
地址为https://www.virusbulletin.com/uploads/pdf/conference_slides/2016/Anand_Menrige-vb-2016-One-Click-Fileless.pdf 。
CHXX大佬也说现在很多病毒都采用无文件感染技术，文件不落地，杀软扫起来比较难。
由此可见，`无文件感染`是一种无痕迹的新型恶意攻击，再结合一键点击欺骗的攻击手法，这类病毒造成的危害就会很大的。所以在浏览网页和使用软件的时候需谨慎。
## 参考
[1] Trojan.Poweliks.
https://www.symantec.com/security_response/writeup.jsp?docid=2014-080408-5614-99.
[2] Trojan.Bedep.
https://www.symantec.com/security_response/writeup.jsp?docid=2015-020903-0718-99.
[3] Trojan.Kotver.
https://www.symantec.com/security_response/writeup.jsp?docid=2015-082817-0932-99.
[4] Camba, A. Unplugging Plugx Capabilities. Trend Micro Malware Blog.
http://blog.trendmicro.com/trendlabs-security-intelligence/unplugging-plugx-capabilities.
[5] O'Murchu, L.; Gutierrez, F. The evolution of the fileless click-fraud
malware Poweliks. Symantec Connect Blog.
http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/evolution-of-poweliks.pdf.
[6] Microsoft Windows Remote Privilege Escalation Vulnerability
(CVE-2015-0016).
https://www.symantec.com/security_response/vulnerability.jsp?bid=71965.
[7] Kafeine. Angler EK: now capable of "fileless" infection. Malware Don't
Need Coffee Blog. http://malware.dontneedcoffee.com/2014/08/angler-ek-now-capable-of-fileless.html.
[8] Anand, H. One-click fraudsters extend reach by learning Chinese. Symantec
Connect Blog. http://www.symantec.com/connect/blogs/one-click-fraudsters-extend-reach-learning-chinese.
[9] Extreme Makeover: Wrap Your Scripts Up in a GUI Interface. Microsoft
Technet. https://technet.microsoft.com/en-us/library/ee692768.aspx.
[10] Recreated from the Microsoft TechNet (2013) gallery – IE Architecture.
https://gallery.technet.microsoft.com/IE-Architecture-3bc7c3fd/file/78635/1/IE%20Architecture.png.
[11] HTML Applications SDK. https://msdn.microsoft.com/en-us/library/ms536473(vs.85).aspx.
[12] Hamada, J. The rise of Japanese zero-click fraud. Symantec Connect Blog.
http://www.symantec.com/connect/blogs/rise-japanese-zero-click-fraud.
[13] It's a Wrap! Windows PowerShell 1.0 Released! Windows PowerShell Blog.
https://blogs.msdn.microsoft.com/powershell/2006/11/14/its-a-wrap-windows-powershell-1-0-released.
[14] Using the command-based script host (CScript.exe). Microsoft Technet.
https://technet.microsoft.com/en-us/library/bb490887.aspx.
[15] WScript Object. Microsoft Developer Network.
https://msdn.microsoft.com/en-us/library/at5ydy31(v=vs.84).aspx.
* * *