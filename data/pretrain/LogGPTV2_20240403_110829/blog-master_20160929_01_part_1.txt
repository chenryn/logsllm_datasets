## PostgreSQL 巧妙的数据采样方法
### 作者         
digoal          
### 日期        
2016-09-29         
### 标签        
PostgreSQL , 数据采样       
----        
## 背景  
因为线上数据库较大，通常我们可以通过数据采样来构建测试库。    
数据采样除了需要对数据进行均匀的抽取之外，还可能有一种需求是对数据进行加密，例如需要隐藏或加密一些敏感字段的信息。  
PostgreSQL 9.5开始支持tablesample的语法，参考如下    
https://www.postgresql.org/docs/9.6/static/tablesample-method.html  
https://www.postgresql.org/docs/9.6/static/sql-select.html  
如果是以前的版本，则可以通过自定义函数来实现数据的采样。      
## 例子
9.5以前的PostgreSQL，通过函数达到采样目的。9.5以后PostgreSQL提供了采样SQL语法，不需要这么麻烦了。    
1\. 指定schema, tablename, 需要采样的记录数, 采样的离散度，返回符合要求的采样记录。    
离散度取值范围0-100，可以理解为数据采样的覆盖范围。   
代码如下  
```
create or replace function samp_rows(nsp name, rel name, cnt int8, dist float8 default 100.0) returns setof record as $$
declare
  pages int8;
  tups float8;
begin
  if dist100 then 
    raise notice 'dist must between 0 and 100';
    return;
  end if;
  select relpages,reltuples into pages,tups from pg_class where oid=(quote_ident(nsp)||'.'||quote_ident(rel))::regclass;
  if not found then
    return;
  end if;
  if cnt >= tups then   -- 输入的采样记录数大于实际的记录数, 直接返回全表  
    -- ctid可以反映采样的随机度, 仅用于观察, 实际使用中可以不返回ctid  
    return query execute 'select ctid, * from '||quote_ident(nsp)||'.'||quote_ident(rel)||' t limit '||cnt;
  else
    -- 如果采样的记录数小于实际的记录数，则根据随机数的概率来返回采样结果  cnt/tups 即全离散时的采样概率   
    -- 离散度0-100，越大表示采样的结果越离散，可以理解为随机采样时覆盖的数据面，0表示连续采样，100则表示在所有数据中随机采样。  
    if dist = 100.0 then 
      return query execute 'select ctid, * from '||quote_ident(nsp)||'.'||quote_ident(rel)||' where random() 100 then 
    raise notice 'dist must between 0 and 100';
    return;
  end if;
  select relpages,reltuples into pages,tups from pg_class where oid=(quote_ident(nsp)||'.'||quote_ident(rel))::regclass;
  if not found then