i, vi
i
σ(cid:48)
w = gr = gr(cid:48)β = hr(cid:48)
σ(cid:48)
x = grHx( (cid:126)m) = gr(cid:48)β(Hx(cid:48) ( (cid:126)m)/β+Hv( (cid:126)m)) = (gHx(cid:48) ( (cid:126)m)hHv( (cid:126)m))r(cid:48)
y = grHy( (cid:126)m) = gr(cid:48)β(Hy(cid:48) ( (cid:126)m)/β−sHx( (cid:126)m)) = gr(cid:48)Hy(cid:48) ( (cid:126)m)σ−s
σ(cid:48)
σ(cid:48)
z = grz = gr(cid:48)β(z(cid:48)/β−t) = (gz(cid:48)
h−t)r(cid:48)
x
,
0 (k).
To address the changes in veriﬁcation, we proceed through a series of hybrids: deﬁne HA
so the Mac responses in the modiﬁed game are also identical to those in GA
i (k) to be
a game in which the ﬁrst i Verify queries are answered using Verify, the last qv − i are answered
using the veriﬁcation procedure deﬁned in GA
0 (k) (referred to in the sequel as SimVerify), and the
veriﬁcation at the end is considered the qv + 1st query; then HA
qv+1(k) is the intermediate game and
HA
0 (k) is GA
i−1(k) for i  i) then r $←− Fp; σw ← hr; σx ← (gHx( (cid:126)m)hHv( (cid:126)m))r; σy ← grHy( (cid:126)m)σ−s
x ; σz ← (gzh−t)r, σz ← gzrh−ωt
x ; σz ← gzrh−ωt
x ; σz ← (gzh−t)r
// HA
Procedure Macsk ( (cid:126)m)
if (j = i) then r, ω, χ $←− Fp; σw ← hω; σx ← grHx( (cid:126)m)hωHv( (cid:126)m), σx ← grHx( (cid:126)m)hrHv( (cid:126)m)+χ ;
σy ← grHy( (cid:126)m)σ−s
x ; σz ← gzrh−ωt
i,1(k) / HA
i,2(k)
// HA
Procedure Macsk ( (cid:126)m)
if (j = i) then r, ω, χ $←− Fp; σw ← hω; σx ← grHx( (cid:126)m)hrHv( (cid:126)m)+χ, σx ← hχ ;
σy ← grHy( (cid:126)m)σ−s
x ; σz ← gzrh−ωt
i,2(k) / HA
i (k)
Figure 2: Games for the transition from HA
boxed code and the other games do not.
i−1(k) to HA
i (k) in proof of Equation 4. The boxed game uses the
B (p, G, g, A, B, C)
Q ← ∅; h ← A
Xi ← gxihvi; Yi ← gyiX−s
( (cid:126)m∗, σ∗) $←− ASimMac,Verify((p, G, g, h), iparams)
b ← ((σyσs
return b(cid:48) = (( (cid:126)m∗ /∈ Q) ∧ b)
w)Hy( (cid:126)m∗)) ∧ ((σ
x)z = (σzσt
−Hv( (cid:126)m∗)
w
i
∀ i ∈ {1, . . . , n}; iparams ← ( (cid:126)X, (cid:126)Y )
σx)Hy( (cid:126)m∗) = (σs
xσy)Hx( (cid:126)m∗)) ∧ (σw (cid:54)= 1)
Procedure SimMacsk ( (cid:126)m)
On queries j  i: use (cid:126)x, (cid:126)v, (cid:126)y, s, z, t, h to compute σ as in GA
On query i: σw ← C; σx ← BHx( (cid:126)m)CHv( (cid:126)m); σy ← BHy( (cid:126)m)σ−s