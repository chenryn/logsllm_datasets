---
## Page 381
联接与多张表的操作
保存兴趣
接下来是麻烦的部分：要用另一个子字符串函数把interests列
中已经被我们存储到interest1列的数据移除。然后才能以相同
方式填充其他兴趣列。
interests
interest1
interest2
interest3
interest4
first,
second, third, fourth
现在要从interests列中移除第一项兴趣以及
它后面的道号和空格。
我们会使用SUBSTR函数，它能抓取兴趣列中的字符串并返回部分字
符串值。
下例壹询的翻译：把interests列的值改变
JnterestI字段中存储的文
为这个查询指定的任何内容，但要去除
本字符事的长度
…再加2道
interest列存储的值、有适号与空格。
号与空格的长度。
UPDATEmy_contacts
SET interests =SUBSTR（interests,LENGTH(interest1)+2);
7
SUBSTR返回本列内原始字符串的一部
LENCTH返回括号中参
本例中，字符事“ist”
数字符串的长度。
分。它提受字符事并切除我们用括号指
的长度为5个字符
定的第一部分，然后返回制下的部分。
5
V
K
有些面数会因为每个人使用的SQL户品不同
所以，由LENCTH返回的数宇
而略有差异，还记得这点吗：SUBSTR也是其
是5再加2.也就是7.所
中心一。请参考非常有用的参考书稠—例如
以会从原本的interests列的左
0Reilly出版的《SQL技术手册》，哥找你
侧（字符事开始处）开始移除
习债的SQL户品。
7个字符。
当前位置
349
---
## Page 382
以子字符串函数分开数据值（part2）
UPDATE所有兴趣列
运行UPDATE语句后，表会如下所示。但工作还没完成，
interest2、interest3、interes4列都需要相同的处理。
interests
interest1
interest2
interest3
interest4
second, third, fourth
first
磨笔上陈
补齐下列UPDATE语句，帮Greg完成查询。旁边
附有提示。
提示：interests列每次都金改变
因为每次执行后，它存储的字符
事值都含被SUBSTR截短一点。
UPDATE mY_contacts SET
interest1 = SUBSTRING_INDEX(interests, '', 1),
interests = SUBSTR(interests, LENGTH(interest1)+2),
interest2 = SUBSTRING_INDEX(
1
interest3
=SUBSTRING
interests = SUBSTR(
）
第378页
interest4
在移除前三项兴趣后，interests列只刺下第四
见
项兴趣。此时该如何处理：
物
执行过上述的复杂查询后，请在下表中填入执行结果。
interests
interest1
interest2
interest3
interest4
second,third,fourth
first
350
第8章
---
## Page 383
联接与多张表的操作
取得所有兴趣
终于，每一项兴趣都存储在不同列中了。使用简单的SELECT语句即可看到所
有兴趣，但无法同时取得它们。而且我们想把所有兴趣整理成单一结果集也并
非简单的事。我们的尝试结果是：
>SELECT interestl,
interest2,
"interest3,
interest4 FRoMmy
contacts;
first
second
third
horses
fourth
pets
music
fishing
books
painting
movies
horses
pets
music
sports
books
boating
travel
music
horses
pets
music
sports
books
knitting
pets
writing
hiking
travel
dogs
movies
sports
至少我们还可以分开编写4条SELECT语句来取得所有兴趣值：
SELECT interest1 FROM my _ contacts;
SELECT interest3 FROM my _ contacts;
SELECT interest2 FROM my _contacts;
SELECT interest4 FROM my_contacts;
我们现在缺少接受这些SELECT语句并把内容直接填入新表的工具。我们
至少有三种能选择的达成这个目标的方式！
看一下你在第345页为profession列设计的SELECT语句：
SELECT profession FROM my_contacts GRoUP BY profession
ORDER BY profession;
下一页我们会解说三种利用这里的SELECT语句的方式，以便给新的兴趣表填
人现有内容。
尽情地利用SELECT、INSERT、CREATE，看看各种查询结果。然后翻到下一
页，研究我们提供的三种方式。
重点不是一次就做对事情，而是思考一下现有工具的潜力。
当前位置
351
---
## Page 384
查询的三种乐趣
条条大路通罗马
对于疯狂小丑而言，同样的事情可以有三种方式来完成或许的确
孩子们，你知道
SQL哪儿好玩吗？
非常有趣，但对我们一般人而言可能就有点头大了。
我说，SQL的好玩
不过，这么多选择自然有它们的用处。当我们知道有三种方式可
就在于有很多不同的方式
可以完成同一件事
以做同一件事情时，也就表示可以选用最适合自己的方式。随着
数据的增加，某些查询可能表现得比其他方式快（根据各人使用
的RDBMS而定）。当表变得非常庞大后，你肯定希望优化你的
查询，此时，知道各种达成目标的方式会有助于最优化的工作。
接下来的几页，就是创建这个
表，并慎满没有重复、按字母顺
profession
序排列的内容的三种方式。
prof_ido
profession
同时（几乎同 时啦）CREATE、SELECT、INSERT
1.CREATETABLE，然后利用SELECT进行INSERT
我们已经知道这种方式了！首先创建（CREATE）profession表，
然后填人第345页上的SELECT的查询结果。
创建带有主键列的profession表.并
CREATE TABLE profession
用VARCHAR类型的列存储职业。
id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY
profession varchar(20)
INSERT INTO profession(profession)
SELECTprofession FROMmy_contacts
GROUP BY profession
ORDER BY profession;
现在以SELECT的查询结果慎满
prosession表的protession列。
352
第8章
---
## Page 385
联接与多张表的操作
2.利用SELECT进行CREATETABLE，然后ALTER以添加主键
第二种方式：利用sELECT从my_contacts表的职业列抓出来的数
据创建新的profession表，再用ALTER修改新表并添加（ADD）
主键字段。
创建只有一列的profession
表，并填入SELECT的奎询
CREATE TABLE professionAS
结果..….
SELECT profession FROMmy_contacts
GROUP BY profession
ORDER BY profession;
然后用ALTER
ALTER TABLE profession
改表以添加主键字段。
ADD COLUMN id INT NOT NULL AUTO_INCREMENT FIRST,
ADD PRIMARY KEY(id);
同一时间 CREATE、SELECT、INSERT
3.CREATETABLE的同时设置主键并利用SELECT填入数据
这是只需一个步骤的方式：创建profession表的同时设置主键列以及
另一个VARCHAR类型的列来存储职业，同时还要填人SELECT的查询结
果。SQL具有AUTO_INCREMENT功能，所以RDBMS知道ID列需要
创建protession表时一并创
自动填入，因此只剩一列，也就是SELECT的数据应该填人的地方。
建主键与prolession列，并
以SELECT的壹询结果读
满prosession列。
CREATE TABLE profession
K
id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
profession varchar(20)
)AS
SELECT profession FROMmy_contacts
GROUP BY profession
ORDER BY profession;
我之前没有看过“AS”。它好像会引
用某个查淘的结累采安插至另一个表
中。
没错。关键字AS的作用正是这样。
一切都与别名（aliasing）有关，接下来我们就要进
入这个主题了！
当前位置
353
---
## Page 386
如君所好：AS
AS到底是怎么一回事？
AS能把SELECT的查询结果填人新表中。我们在第二和第三个范例
中使用AS时，其实是要求软件把来自my_contacts表的内容当成
SELECT的查询结果，并把结果值存入新建的profession表中。
如果不指定新表具有带有新名称的两列，AS只会创建一列，且该列的
列名及数据类型与SELECT的查询结果相同。
如果我们没有给新表设计两个
列，AS只金创建一列，并采用
我们在新表里创建
与SELECT的壹询结果相同的列
了一个VARCHAR列.
CREATE TABLE profeSsion
名与数据类型。
命名为probession。
（
V
id INT(11)NOT NULL AUTO_INCREMENT PRIMARY KEY
profession varchar(20)
)AS
这个小小的关键字有
SELECTprofessionFROMmy_contacts
很大的作用。它就像随
GRouPBYprofession
ORDER BY profession;
这些都是my_contacts表的
道一样，把所有SELECT
K
protession列，都是SELECT的
的查询结果输出到新的
一部分。
表中。
既然我们创建了职业表，而且有AUTO_INCREMENT主键，所以只
要插人第二列的值就够了，这一列名为profession。
我都搞涂了。一个壶沟中“profession”出现了
5次。SQL软件或许能区分具体的profession，但我
该怎么分辨？
所以SQL才会提供别名功能，以免各种名称把
我们搞糊涂。
这只是SQL允许我们暂时对表与列赋予新名称的原因之一，
这项功能称为别名（alias）。
354
第8章
---
## Page 387
联接与多张表的操作
列的别名
创建别名真的很简单。在查询中首次使用原始列名的地方后接AS并
设定要采用的别名，告诉软件现在开始以另一个名称引用my_
contacs表的profession列，这样可以让查询更容易被我们理解。
我们将由my_contacts表选取的职业值称为mc_prof（mc是
my_contacts的缩写）。
CREATE TABLE profession
（
id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
这个童询与原先的查
mc_prof varchar (20)
询效果完全一样，但
)AS
因为有别名，所以它
SELECT profession AS
mc_profFROMmy_contacts
更容易理解。
GROUPBYmC_prof
ORDERBYmc_prof;
叠询里首次提到原始列名的地方后
接AS并设定别名，让款件从这里
开始用别名引用数据。
这两个查询有一点小小的不同。所有查询都以表的形式返回。别名
改变了查询结果中的列名，但并未改变来源列的名称。别名只是临
时的。
但因为指定了新表有两列一一主键和职业列相当于覆盖了原始查询
结果，所以新表还是会有名为profession 的列，而非mc_prof。
采用别名后的查询
profession
采用原始列名的原
结果。列名变为别
mc_prof
programmer
始查询结果。
名。
programmer
teacher
lawyer
teacher
lawyer
当前位置
355
---
## Page 388
表别名的解释
表的别名，谁会需要？
你会需要！我们很快就要进入联接（join）领域，一个从多张表里选
取数据的世界。若是没有别名，众多一再出现的表名会把我们搞得
头昏眼花。
创建表别名的方式与创建列别名的方式几平一样。在查询中首次出
现表名的地方后接AS并设定别名，告诉软件现在开始以mc引用原
表别名又称
有的my_contacts。
为correlation
SELEcTprofessionASmc_prof
name（相关名
FROMmy_contacts ASmc
称）。
GROUP BY mC_prof
ORDER BY mC_prof;
乎与创建列别名的方式
相同。
每次设定别名时都要用到
“AS"吗？
不用，另有设定别名的简短方式。
可以省略AS。下列查询也会得到与上例查询相同的
结果。
这两个查询的结果并
无不同。
我们拿掉了AS。只要别名紧接在
SELECT professionmc_prof
原始表名或列名后，就能直接设
FROMmy_contactsmc
定别名。
GROUP BY mC_prof
ORDER BY mC_prof;
356
第8章
---
## Page 389
联接与多张表的操作
关于内联接的二三事
如果各位曾经听过关于SQL的讨论，可能常常会听到“联
接”（join）这个词。不过，联接并没有你想象的那么复杂。
接下来我们就要开始了解联接，研究它的运作方式，并提供
很多机会，让大家研究使用联接的时机以及应该使用何种联
这就是小型结票
接。
表的用途响。
不过，开始联接的深度之旅前，我们先
看看最简单的联接（它甚至不算真正的
联接）。
它有很多不同的名称。本书称之为交
叉联接（crossjoin）（译注1），但
各位或许也听过它的其他名字，例如
笛卡尔积、交叉积…还有最奇怪的
“没有联接”（nojoin）。
译注1：
为统一本章末及附录3的用词，故
修改原文的“CartesianJoin”为
'cross join“
假设你有一个存储男孩姓名的表及一个记录男孩们分别拥有
哪些玩具的表。现在我们要试着找出每个男孩拥有的玩具。
toys
boys
toy_id
toy
boy_id
boy
1
hula hoop
1
Davey
2
balsa glider
2
Bobby
3
toy soldiers
3
Beaver
4
harmonica
4
Richie
5
baseball cards
当前位置
357
---
## Page 390
探讨交叉联接
交叉联接
下例同时查询玩具表的toy列与男孩表的boy列，这个方法的
查询结果会是交义联接。
还记得上一章提过的速记符号吗：点号前是表
名，点号后是表内的列名。只是这里以别名代
K
b.boy
替表的全名。
SELECT t.tOY,
FROM toyS AS
t
这一行的意思是：从6oy表
CROSS JOIN
里SELECT'6oy'列、从toy表里
boys ASb;
SELECT“toy”列。至于查询的其他
这里也使用表别
部分，则会把查询结果联接成一张
新的结果表。
名。
交叉联接把第一张表的每个值都与第二张表的每个值
配成对。
toys.toy
boys.boy
CROSSJOIN返回两
toy
boy
张表的每一行相乘
hula hoop
Davey
balsa glider
Bobby
的结果。
toy soldiers
Beaver
harmonica
Richie
baseball cards
这些线显示本例的联接结果。每种
玩具与每个男孩的格配。没有重复
的数据
本例联接出20条记录。5个玩具乘以4个男孩
的结果呈现了所有可能的组合。
toy
boy
hulahoop
Davey
hulahoop
Bobby
因为toys.toy的奎询结果比较
hulahoop
Beaver
多，所以结果呈现如右表所示
hulahoop
Richie
的组。如果男孩有5个，玩具
balsa glider
Davey
只有4种.则金以男孩姓名为
balsa glider
Bobby
划分组的依据。但请记住，结
balsa glider
Beaver
balsa glider
Richie
果的顾序在这个壹询里没有意
toy soldiers
Davey
义。
toysolien
358
第8章
---
## Page 391