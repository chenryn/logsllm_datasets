the time to help us construct realistic attacks and defenses.
This material is based upon work supported by the Ofﬁce of
Naval Research under Award No. N00014-17-1-2011, by the
Department of Homeland Security under Award No. FA8750-
19-2-0005, and by the IBM Ph.D. Fellowship. Any opinions,
ﬁndings, and conclusions or recommendations expressed in
this publication are those of the author(s) and do not neces-
sarily reﬂect the views of the Ofﬁce of Naval Research, the
Department of Homeland Security, or IBM Research.
REFERENCES
[1] “American fuzzy lop,” http://lcamtuf.coredump.cx/aﬂ/.
[2] “Glitchplease
version,”
full
https://drive.google.com/ﬁle/d/
1UlY8ySgagFrV911NpJZF1o43okwxdCHc/view?usp=sharing.
[3] A. ARM7TDMI, “Technical reference manual,” Advanced RISC Ma-
chines Ltd.,(15 May 2003).
[4] D. Arora, S. Ravi, A. Raghunathan, and N. K. Jha, “Hardware-assisted
run-time monitoring for secure program execution on embedded pro-
cessors,” IEEE Transactions on Very Large Scale Integration (VLSI)
Systems, vol. 14, no. 12, pp. 1295–1308, 2006.
[5] J. Balasch, B. Gierlichs, and I. Verbauwhede, “An in-depth and black-
box characterization of the effects of clock glitches on 8-bit mcus,”
in 2011 Workshop on Fault Diagnosis and Tolerance in Cryptography.
IEEE, 2011, pp. 105–114.
[6] H. Bar-El, H. Choukri, D. Naccache, M. Tunstall, and C. Whelan, “The
sorcerer’s apprentice guide to fault attacks,” Proceedings of the IEEE,
vol. 94, no. 2, pp. 370–382, 2006.
[7] G. Barbu, G. Duc, and P. Hoogvorst, “Java card operand stack: fault
attacks, combined attacks and countermeasures,” in International Con-
ference on Smart Card Research and Advanced Applications. Springer,
2011, pp. 297–313.
[8] G. Barbu, H. Thiebeauld, and V. Guerin, “Attacks on java card 3.0
combining fault and logical attacks,” in International Conference on
Smart Card Research and Advanced Applications. Springer, 2010, pp.
148–163.
[9] A. Barenghi, G. Bertoni, E. Parrinello, and G. Pelosi, “Low voltage fault
attacks on the rsa cryptosystem,” in 2009 Workshop on Fault Diagnosis
and Tolerance in Cryptography (FDTC).
IEEE, 2009, pp. 23–31.
[10] A. Barenghi, G. M. Bertoni, L. Breveglieri, M. Pellicioli, and G. Pelosi,
“Low voltage fault attacks to aes,” in 2010 IEEE International Sympo-
sium on Hardware-Oriented Security and Trust (HOST).
IEEE, 2010,
pp. 7–12.
[11] A. Barenghi, L. Breveglieri, I. Koren, G. Pelosi, and F. Regazzoni,
“Countermeasures against fault attacks on software implemented aes:
effectiveness and cost,” in Proceedings of the 5th Workshop on Embed-
ded Systems Security. ACM, 2010, p. 7.
[12] T. Barry, D. Courouss´e, and B. Robisson, “Compilation of a counter-
measure against instruction-skip fault attacks,” in Proceedings of the
Third Workshop on Cryptography and Security in Computing Systems,
2016, pp. 1–6.
[13] G. Bouffard, J. Iguchi-Cartigny, and J.-L. Lanet, “Combined software
and hardware attacks on the java card control ﬂow,” in Interna-
tional Conference on Smart Card Research and Advanced Applications.
Springer, 2011, pp. 283–296.
[14] C. Bozzato, R. Focardi, and F. Palmarini, “Shaping the glitch: Optimiz-
ing voltage fault injection attacks,” IACR Transactions on Cryptographic
Hardware and Embedded Systems, pp. 199–224, 2019.
[15] J. Breier, X. Hou, and Y. Liu, “On evaluating fault resilient encoding
schemes in software,” IEEE Transactions on Dependable and Secure
Computing, 2019.
[16] C.-K. Chang, G. Li, and M. Erez, “Evaluating compiler ir-level se-
lective instruction duplication with realistic hardware errors,” in 2019
IEEE/ACM 9th Workshop on Fault Tolerance for HPC at eXtreme Scale
(FTXS).
IEEE, 2019, pp. 41–49.
[17] T. Chen, “Guarding against physical attacks: The xbox one story,” https:
//www.platformsecuritysummit.com/2019/speaker/chen/, October 2019.
[18] Z. Chen, J. Shen, A. Nicolau, A. Veidenbaum, N. F. Ghalaty, and
R. Cammarota, “Camfas: A compiler approach to mitigate fault attacks
via enhanced simdization,” in 2017 Workshop on Fault Diagnosis and
Tolerance in Cryptography (FDTC).
IEEE, 2017, pp. 57–64.
[19] L. Cojocar, K. Papagiannopoulos, and N. Timmers, “Instruction dupli-
cation: Leaky and not too fault-tolerant!” in International Conference
on Smart Card Research and Advanced Applications. Springer, 2017,
pp. 160–179.
[20] A. Cui and R. Housley, “BADFET: Defeating modern secure boot using
second-order pulsed electromagnetic fault injection,” in 11th USENIX
Workshop on Offensive Technologies (WOOT 17), 2017.
[21] M. Dadashi, L. Rashid, K. Pattabiraman, and S. Gopalakrishnan,
“Hardware-software integrated diagnosis for
intermittent hardware
faults,” in 2014 44th Annual IEEE/IFIP International Conference on
Dependable Systems and Networks.
IEEE, 2014, pp. 363–374.
[22] F. de Aguiar Geissler, F. L. Kastensmidt, and J. E. P. Souza, “Soft error
injection methodology based on qemu software platform,” in 2014 15th
Latin American Test Workshop-LATW.
IEEE, 2014, pp. 1–5.
[23] E. DeBusschere and M. McCambridge, “Modern game console exploita-
tion,” Technical Report, Department of Computer Science, University of
Arizona, 2012.
[24] C. Dobraunig, M. Eichlseder, H. Gross, S. Mangard, F. Mendel, and
R. Primas, “Statistical ineffective fault attacks on masked aes with
fault countermeasures,” in International Conference on the Theory and
Application of Cryptology and Information Security.
Springer, 2018,
pp. 315–342.
[25] J. W. Duran and S. Ntafos, “A report on random testing,” in Proceedings
IEEE
of the 5th international conference on Software engineering.
Press, 1981, pp. 179–183.
[26] I. O. for Standardization, “Iso/iec 9899:tc3: Programming languages -
c,” 2007.
[27] A. Galauner,
“Glitching
the
switch,”
https://media.ccc.de/v/c4.
openchaos.2018.06.glitching-the-switch#t=82, June 2018.
[28] N. F. Ghalaty, A. Aysu, and P. Schaumont, “Analyzing and eliminating
the causes of fault sensitivity analysis,” in 2014 Design, Automation &
Test in Europe Conference & Exhibition (DATE).
IEEE, 2014, pp. 1–6.
[29] R. J. Gove, K. Balmer, N. K. Ing-Simmons, and K. M. Guttag, “Multi-
processor reconﬁgurable in single instruction multiple data (simd) and
multiple instruction multiple data (mimd) modes and method of opera-
tion,” May 18 1993, uS Patent 5,212,777.
[30] J. Grand and J. Friday, “Advanced hardware hacking techniques,”
[31] J. Gratchoff, N. Timmers, A. Spruyt, and L. Chmielewski, “Proving the
DEFCON, vol. 12, p. 59, 2004.
wild jungle jump,” 2015.
[32] A. H¨oller, G. Macher, T. Rauter, J. Iber, and C. Kreiner, “A virtual fault
injection framework for reliability-aware software development,” in 2015
IEEE International Conference on Dependable Systems and Networks
Workshops.
IEEE, 2015, pp. 69–74.
[33] M.-C. Hsueh, T. K. Tsai, and R. K. Iyer, “Fault injection techniques and
tools,” Computer, vol. 30, no. 4, pp. 75–82, 1997.
[34] Y. Kim, R. Daly, J. Kim, C. Fallin, J. H. Lee, D. Lee, C. Wilkerson,
K. Lai, and O. Mutlu, “Flipping bits in memory without accessing them:
An experimental study of dram disturbance errors,” in ACM SIGARCH
Computer Architecture News, vol. 42, no. 3.
IEEE Press, 2014, pp.
361–372.
[35] P. Kocher, D. Genkin, D. Gruss, W. Haas, M. Hamburg, M. Lipp,
S. Mangard, T. Prescher, M. Schwarz, and Y. Yarom, “Spectre attacks:
Exploiting speculative execution,” arXiv preprint arXiv:1801.01203,
2018.
[36] T. Korak and M. Hoeﬂer, “On the effects of clock and power supply
tampering on two microcontroller platforms,” in 2014 Workshop on Fault
Diagnosis and Tolerance in Cryptography.
IEEE, 2014, pp. 8–17.
[37] J.-F. Lalande, K. Heydemann, and P. Berthom´e, “Software countermea-
sures for control ﬂow integrity of smart card c codes,” in European
Symposium on Research in Computer Security.
Springer, 2014, pp.
200–218.
[38] M. M. Latif, R. Ramaseshan, and F. Mueller, “Soft error protection
via fault-resilient data representations,” North Carolina State University.
Dept. of Computer Science, Tech. Rep., 2007.
[39] N. Lawson, “How the ps3 hypervisor was hacked,” https://rdist.root.org/
2010/01/27/how-the-ps3-hypervisor-was-hacked/, 2010.
[40] G. Li, Q. Lu, and K. Pattabiraman, “Fine-grained characterization
of faults causing long latency crashes in programs,” in 2015 45th
Annual IEEE/IFIP International Conference on Dependable Systems and
Networks.
IEEE, 2015, pp. 450–461.
[41] G. Li, K. Pattabiraman, S. K. S. Hari, M. Sullivan, and T. Tsai, “Model-
ing soft-error propagation in programs,” in 2018 48th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN).
IEEE, 2018, pp. 27–38.
[42] M. Lipp, M. Schwarz, D. Gruss, T. Prescher, W. Haas, S. Mangard,
P. Kocher, D. Genkin, Y. Yarom, and M. Hamburg, “Meltdown,” arXiv
preprint arXiv:1801.01207, 2018.
[43] Y. Lu, “Attacking hardware aes with dfa,” https://yifan.lu/images/2019/
02/Attacking Hardware AES with DFA.pdf, Februrary 2019.
[44] ——, “Injecting software vulnerabilities with voltage glitching,” arXiv
preprint arXiv:1903.08102, 2019.
[45] Y. Lu and Davee, “Viva la vita vida: Hacking the most secure handheld
console,” https://media.ccc.de/v/35c3-9364-viva la vita vida, Decem-
ber 2018.
[46] M. Lubinets, “Reed solomon bch encoder and decoder,” https://github.
[71] M. Seaborn and T. Dullien, “Exploiting the dram rowhammer bug to
gain kernel privileges,” Black Hat, vol. 15, 2015.
[72] S. P. Skorobogatov and R. J. Anderson, “Optical fault induction attacks,”
in International workshop on cryptographic hardware and embedded
systems. Springer, 2002, pp. 2–12.
[73] D. Song, J. Lettner, P. Rajasekaran, Y. Na, S. Volckaert, P. Larsen, and
M. Franz, “Sok: sanitizing for security,” IEEE Security and Privacy,
2019.
[74] C. Spensky, “Analyzing and securing embedded systems,” Ph.D. disser-
tation, UC Santa Barbara, 2020.
[75] A. Spruyt, “Building fault models for microcontrollers,” University of
Amsterdam, Amsterdam, Tech. Rep, pp. 2011–2012, 2012.
[76] N. Theißing, D. Merli, M. Smola, F. Stumpf, and G. Sigl, “Comprehen-
sive analysis of software countermeasures against fault attacks,” in 2013
Design, Automation & Test in Europe Conference & Exhibition (DATE).
IEEE, 2013, pp. 404–409.
[77] N. Timmers and C. Mune, “Escalating privileges in linux using voltage
fault injection,” in 2017 Workshop on Fault Diagnosis and Tolerance in
Cryptography (FDTC).
IEEE, 2017, pp. 1–8.
[78] N. Timmers and A. Spruyt, “Bypassing secure boot using fault injec-
tion,” Black Hat Europe, vol. 2016, 2016.
[79] N. Timmers, A. Spruyt, and M. Witteman, “Controlling PC on ARM
injection,” in 2016 Workshop on Fault Diagnosis and
using fault
Tolerance in Cryptography (FDTC).
IEEE, 2016, pp. 25–35.
[80] J. G. Van Woudenberg, M. F. Witteman, and F. Menarini, “Practical
optical fault injection on secure microcontrollers,” in 2011 Workshop
on Fault Diagnosis and Tolerance in Cryptography.
IEEE, 2011, pp.
91–99.
[81] M. Werner, E. Wenger, and S. Mangard, “Protecting the control ﬂow of
embedded processors against fault attacks,” in International Conference
on Smart Card Research and Advanced Applications. Springer, 2015,
pp. 161–176.
[82] N. Wiersma and R. Pareja, “Safety!= security: On the resilience of
asil-d certiﬁed microcontrollers against fault injection attacks,” in 2017
Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC).
IEEE, 2017, pp. 9–16.
[83] M. Witteman and M. Oostdijk, “Secure application programming in the
presence of side channel attacks,” in RSA conference, vol. 2008, 2008.
[84] A. G. Yanci, S. Pickles, and T. Arslan, “Detecting voltage glitch attacks
on secure devices,” in 2008 Bio-inspired, Learning and Intelligent
Systems for Security.
IEEE, 2008, pp. 75–80.
[85] B. Yuce, N. F. Ghalaty, C. Deshpande, C. Patrick, L. Nazhandali, and
P. Schaumont, “Fame: Fault-attack aware microprocessor extensions for
hardware fault detection and software fault response,” in Proceedings of
the Hardware and Architectural Support for Security and Privacy 2016,
2016, pp. 1–8.
[86] B. Yuce, P. Schaumont, and M. Witteman, “Fault attacks on secure em-
bedded software: Threats, design, and evaluation,” Journal of Hardware
and Systems Security, vol. 2, no. 2, pp. 111–130, 2018.
com/mersinvald/Reed-Solomon, Februrary 2016.
[47] M. Milshtein, “A new two-error-correcting binary code of length 16,”
Cryptography and Communications, pp. 1–5, 2019.
[48] R. E. Moore, R. B. Kearfott, and M. Cloud, “Introduction to interval
analysis,” 2009.
[49] N. Moro, A. Dehbaoui, K. Heydemann, B. Robisson, and E. Encrenaz,
“Electromagnetic fault injection: towards a fault model on a 32-bit
microcontroller,” in 2013 Workshop on Fault Diagnosis and Tolerance
in Cryptography.
IEEE, 2013, pp. 77–88.
[50] N. Moro, K. Heydemann, A. Dehbaoui, B. Robisson, and E. Encrenaz,
“Experimental evaluation of two software countermeasures against fault
attacks,” in 2014 IEEE International Symposium on Hardware-Oriented
Security and Trust (HOST).
IEEE, 2014, pp. 112–117.
[51] N. Moro, K. Heydemann, E. Encrenaz, and B. Robisson, “Formal veri-
ﬁcation of a software countermeasure against instruction skip attacks,”
Journal of Cryptographic Engineering, vol. 4, no. 3, pp. 145–156, 2014.
[52] K. Murdock, D. Oswald, F. D. Garcia, J. Van Bulck, D. Gruss, and
F. Piessens, “Plundervolt: Software-based fault injection attacks against
intel sgx,” in Proceedings of the 41st IEEE Symposium on Security and
Privacy (S&P’20), 2020.
[53] A. Q. Nguyen and H. V. Dang, “Unicorn: Next generation cpu emulator
framework,” in Proceedings of the 2015 Blackhat USA conference, 2015.
[54] C. O’Flynn, “Fault injection using crowbars on embedded systems.”
IACR Cryptology ePrint Archive, vol. 2016, p. 810, 2016.
[55] C. O’Flynn and Z. D. Chen, “Chipwhisperer: An open-source platform
for hardware embedded security research,” in International Workshop
on Constructive Side-Channel Analysis and Secure Design. Springer,
2014, pp. 243–260.
[56] N. Oh, P. P. Shirvani, and E. J. McCluskey, “Control-ﬂow checking by
software signatures,” IEEE transactions on Reliability, vol. 51, no. 1,
pp. 111–122, 2002.
[57] R. Omarouayache, J. Raoult, S. Jarrix, L. Chusseau, and P. Maurine,
“Magnetic microprobe design for em fault attack,” in 2013 International
Symposium on Electromagnetic Compatibility.
IEEE, 2013, pp. 949–
954.
[58] S. Ordas, L. Guillaume-Sage, and P. Maurine, “Electromagnetic fault
injection: the curse of ﬂip-ﬂops,” Journal of Cryptographic Engineering,
vol. 7, no. 3, pp. 183–197, 2017.
[59] C. Patrick, B. Yuce, N. F. Ghalaty, and P. Schaumont, “Lightweight
fault attack resistance in software using intra-instruction redundancy,” in
International Conference on Selected Areas in Cryptography. Springer,
2016, pp. 231–244.
[60] F. Project, “The xbox 360 reset glitch hack,” https://free60project.github.
io/wiki/Reset Glitch Hack.html.
[61] J. Proy, K. Heydemann, A. Berzati, and A. Cohen, “Compiler-assisted
loop hardening against fault attacks,” ACM Transactions on Architecture
and Code Optimization (TACO), vol. 14, no. 4, pp. 1–25, 2017.
[62] N. A. Quynh, “Capstone: Next generation disassembly framework,”
[63] ——, “Keystone: Next generation assembler framework,” Black Hat
Black Hat USA, 2014.
USA, 2016.
[64] G. A. Reis, J. Chang, N. Vachharajani, R. Rangan, and D. I. August,
“Swift: Software implemented fault tolerance,” in International Sympo-
sium on Code Generation and Optimization.
IEEE, 2005, pp. 243–254.
[65] L. Riviere, Z. Najm, P. Rauzy, J.-L. Danger, J. Bringer, and L. Sauvage,
“High precision fault injections on the instruction cache of ARMv7-
M architectures,” in 2015 IEEE International Symposium on Hardware
Oriented Security and Trust (HOST).
IEEE, 2015, pp. 62–67.
[66] F. Rodr´ıguez, J. C. Campelo, and J. J. Serrano, “A watchdog processor
architecture with minimal performance overhead,” in International Con-
ference on Computer Safety, Reliability, and Security. Springer, 2002,
pp. 261–272.
[67] F. Rodr´ıguez and J. J. Serrano, “Control ﬂow error checking with isis,” in
International Conference on Embedded Software and Systems. Springer,
2005, pp. 659–670.
[68] T. Roth, “TrustZone-M(eh): Breaking ARMv8-M’s security,” in The 36th
Chaos Communication Congress (36C3), December 2019.
[69] G. T. H. G. Roussel-Tarbouriech, N. Menard, T. True et al.,
“Methodically defeating nintendo switch security,” arXiv preprint
arXiv:1905.07643, 2019.
[70] J.-M. Schmidt and C. Herbst, “A practical fault attack on square and
multiply,” in 2008 5th Workshop on Fault Diagnosis and Tolerance in
Cryptography.
IEEE, 2008, pp. 53–58.