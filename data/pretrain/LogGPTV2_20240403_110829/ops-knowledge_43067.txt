User: 我们需要对多个Linux服务器进行自动化部署和配置管理。请提供一个可行的自动化脚本和工具，并按照要求进行部署和配置。
Assistant: 一个可行的自动化脚本和工具是Ansible。以下是一个基本的Ansible playbook示例，可以用于在多个Linux服务器上部署和配置软件包、设置用户、配置服务等。

1. 安装Ansible

在一台服务器上安装Ansible，并配置SSH密钥到其他服务器上，以便Ansible可以连接其他服务器并进行管理。可以使用以下命令在Ubuntu上安装Ansible：

```
sudo apt update
sudo apt install ansible
```

2. 编写Ansible playbook

创建一个名为`deploy.yml`的Ansible playbook文件，并按照需求配置需要安装和配置的软件包、用户、服务等。以下是一个简单的示例：

```yaml
---
- hosts: webservers
  become: true
  vars:
    http_port: 80
    database_name: myapp
  tasks:
  - name: Install Apache web server
    apt:
      name: apache2
      state: present
  - name: Start Apache service
    service:
      name: apache2
      state: started
  - name: Create new user
    user:
      name: john
      password: "{{ 'secure-password' | password_hash('sha256') }}"
      groups: sudo
      shell: /bin/bash
  - name: Create database
    mysql_db:
      name: "{{ database_name }}"
      state: present
      login_user: root
      login_password: "{{ mysql_root_password }}"
  - name: Install PHP and MySQL packages
    apt:
      name:
        - php
        - php-mysql
        - mysql-client
        - mysql-server
      state: present
```

上述示例中，`hosts`指定要运行此playbook的目标主机（在本例中为`webservers`组），`become`指定使用sudo权限运行任务。`vars`定义了一些可重用的变量，如`http_port`和`database_name`。`tasks`包含了要在目标主机上执行的一系列任务。每个任务都有一个名称，以及一个Ansible模块，用于执行操作。

3. 运行Ansible playbook

运行以下命令以在目标主机上运行Ansible playbook：

```
ansible-playbook deploy.yml -i hosts.ini
```

其中，`hosts.ini`文件包含了目标主机列表和SSH连接信息：

```
[webservers]
web1 ansible_host=192.168.1.10 ansible_user=admin ansible_ssh_private_key_file=/home/admin/.ssh/id_rsa
web2 ansible_host=192.168.1.11 ansible_user=admin ansible_ssh_private_key_file=/home/admin/.ssh/id_rsa
web3 ansible_host=192.168.1.12 ansible_user=admin ansible_ssh_private_key_file=/home/admin/.ssh/id_rsa
```

上述示例中的`web1`、`web2`和`web3`是目标主机的主机名，`ansible_host`为其IP地址，`ansible_user`为SSH连接时使用的用户名，`ansible_ssh_private_key_file`为连接时使用的私钥文件路径。

执行以上命令后，Ansible会自动连接到目标主机并按照playbook中定义的任务进行部署和配置。

当然，Ansible还有很多高级功能可以使用，如模板、循环、条件语句、标签、调试等，可以根据自己的需要进行使用。