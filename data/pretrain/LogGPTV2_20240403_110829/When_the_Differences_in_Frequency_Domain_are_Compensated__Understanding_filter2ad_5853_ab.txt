ods, we find the existing defenses rely on the features of amplitude
spectrum. Based on these observations, we propose a method to esti-
mate the speaker response and build an inverse filter to compensate
the amplitude spectrum of the replay signals. The reconstructed
replay signals can bypass the existing defenses.
3.1 Impacts of Replay Components
Although classical replay attacks can achieve a high success rate in
spoofing ASR systems, some acoustic features can still be utilized
to distinguish the replay audio from the genuine audio. As shown
Second, when the A/D converter transforms the signal into a
digital form, it may cause the information loss of the analog signal
due to the sampling and quantization operations. However, this
effect is limited since the modern recording devices have a higher
sampling rate (not less than 44.1 kHz) and a higher bit depth (usually
higher than 16-bit resolution) than the old-fashioned recorders.
Third, the signal can be transformed back into the analog form by
the D/A converter, where a low-pass filter is used to eliminate the
high-frequency components caused by sampling. As the sampling
frequency is at least 10 times larger than the speech frequency, the
filter in the D/A converter has little effect on the audio signals.
in Figure 2(a), the main difference between these two types of audio
is the additional replay process that the replay audio goes through.
We study the impacts from four components involved in the
replay process, namely, the recording device, A/D converter, D/A
converter, and the playback device. We observe that the impacts
from the first three components are negligible, and the most sig-
nificant impacts on replay signals come from the playback device.
First, an attacker needs to use a recording device to collect the voice
command. The main factors that influence the recording process
include the non-linearity of modern microphones and the ambient
noise. However, the nonlinear frequency range of a microphone is
much higher than the human speech frequency. When it comes to
the ambient noise, it is hard to tell if the noise is introduced during
the attacker‚Äôs recording process or the ASR recording phase.
Finally, we find the most significant effects on the replay signal
are caused by the playback device. Because of the shape and volume,
the acoustic characteristics of loudspeakers are greatly different
from those of human vocal organs. Due to the resonance of the
speaker enclosure, the voice from loudspeakers contains low-power
"additive" noise. These resonant frequency components are typ-
ically within 20-60 Hz that human cannot produce [8]. Another
important feature of loudspeakers is the low-frequency response
distortion due to the limited size of loudspeakers. Within the speech
frequency range, the amplitude response of a loudspeaker is a high-
pass filter with a cut-off frequency typically near 500 Hz [59]. As a
result, the power of low-frequency components will be attenuated
rapidly when a voice signal passes through a loudspeaker, which is
the "multiplicative" characteristic of speakers in human speech fre-
quency range [46]. Even though the genuine audio and the replay
audio have the same fundamental frequency and harmonic fre-
quencies, the power distributions of frequency components remain
different. The low-frequency components of replay audio have a
smaller power proportion compared with those of genuine audio.
Because the different power distributions lead to different timbre,
the voice signals sound different even with the same loudness and
fundamental frequency.
3.2 Attack Overview
Based on our observation that existing defenses utilize the ampli-
tude spectrum to detect replay attacks, the key idea of our proposed
attack is to modulate the voice signal so that the replay audio has
the same amplitude spectrum as the genuine audio. As shown in
Figure 2(b), the most critical component is the modulation processor
between the A/D and D/A conversion. The modulation processor
can compensate for the amplitude spectrum distortion caused by
the replay process. By adding the modulation processor, we can
Recording DeviceHumanVoiceSignalProcessingSpeechRecognition(a) Classical Replay Attacks
(b) Modulated Replay Attacks
Figure 2: Classical Replay Attacks vs. Modulated Replay Attacks.
deal with the modulated replay process as an all-pass filter, so that
the modulated replay audio will have an equivalent processing flow
as the genuine audio.
In the classical replay process, the recording device and the
A/D and D/A conversion have limited effects on the replay audio.
Thus, our modulation processor mainly targets the playback device,
specifically, the amplitude response of it. There are many types of
playback devices, such as mobile phones, MP3 players, and remote
IoT devices in the victim‚Äôs home. We acquire the amplitude response
of a playback device by measuring the output spectrum in response
to different frequency inputs. If the playback device is under remote
control that the amplitude response cannot be measured directly,
we can estimate an approximate response from the same or similar
devices. After acquiring the amplitude response of the playback
device, we design an inverse filter that is a key component in the
modulation processor to compensate for the distortion of the signal
spectrum. After the spectrum modulation, the modulated replay
audio can bypass existing frequency-based defense.
In our modulated replay attack, the modulation processor only
deals with the voice signals in digital form. Therefore, the inverse
filter is designed by digital signal processing (DSP) techniques. The
modulated signals can be stored or spread through the Internet to
launch a remote replay attack.
3.3 Modulation Processor
The structure of the modulation processor is shown in Figure 3. The
recorded audio is a digital signal collected from the genuine human
voice. The audio is then transformed from the time domain to the
frequency domain by fast Fourier transform algorithm. The FFT
output is a complex frequency spectrum that can be divided into
two parts: (1) the amplitude spectrum that records the amplitude
for each frequency component, and (2) the phase spectrum that
records the phase angle for each frequency component. We only
process the amplitude spectrum in the modulation processor for
two reasons. One reason is that both the ASR systems and the
Figure 3: The modulation processor.
replay detection systems extract signal features from the amplitude
spectrum. Another reason is that the human ear is less sensitive to
the sound phase compared to the sound amplitude. Therefore, the
phase spectrum will remain the same in the modulation processor.
The inverse filter, estimated based on the speaker properties, is
the key component in the modulation processor. Specifically, the
inverse filter is an engine in the spectrum filtering unit, transform-
ing the amplitude spectrum to a compensated spectrum. By the
spectrum filtering, the inverse filter can offset the distortion effect
caused by the playback device. Therefore, the amplitude responses
of the inverse filter and the loudspeaker are complementary, be-
cause the combination of these two transfer functions is a constant
function that represents an all-pass filter.
After processing the amplitude spectrum with the inverse filter,
we can obtain a compensated spectrum that has a better frequency
characteristic in the low-frequency range. With both the compen-
sated spectrum and the phase spectrum, the inverse fast Fourier
transform (iFFT) is utilized to convert the reconstructed signal from
frequency domain to time domain. Finally, we can get a modulated
audio in the time domain. Moreover, the modulated audio will be
stored as a digital format, which is ready to be used to launch the
modulated replay attack.
Playback DeviceRecording DeviceSaved AudioASRSystemsA/D ConversionD/A ConversionHumanVoiceReplay ProcessPlayback DeviceRecording DeviceSaved AudioASRSystemsA/D ConversionD/A ConversionInverse FilterHumanVoiceModulated Replay ProcessFast Fourier TransformSpectrum FilteringReconstructionSpeaker Response EstimationSpeaker PropertiesRecorded AudioModulated AudioAmplitude SpectrumPhase SpectrumCompensated SpectrumInverse Filter EstimationInverse FilterInverse Filter(a) The measurement of single-frequency response.
(b) The processing of fitting speaker response.
Figure 4: The method to estimate the speaker response.
3.4 Inverse Filter Estimation
The inverse filter is estimated through the speaker properties. There-
fore, it is necessary to measure the amplitude response of the loud-
speaker directly. If it is not possible for direct measurement, the
amplitude response can be estimated by measuring the speakers in
the same or similar model.
When measuring the speaker properties, we set a single-frequency
test signal as the speaker input and record the output audio, as
shown in Figure 4(a). Through checking the output amplitude spec-
trum, we can get the output amplitude of the corresponding fre-
quency. The amplitude response of the single frequency is the out-
put amplitude divided by the input amplitude. Through changing
the input frequency of the test signal, we can obtain the amplitude
response over the entire speech frequency range.
Because the test frequencies of the input signals are discrete, the
amplitude response is a series of discrete data points, as shown in
Figure 4(b). To obtain a continuous response function over the en-
tire frequency range, we fill in the missing data by the curve fitting.
Cubic spline interpolation [24] will be used to construct a continu-
ous and smooth response curve ùêª(ùëì ) with multiple polynomials of
degree 3.
As the inverse filter is implemented on the digital signals, we
need to convert the continuous response function into a digital
form. After the Fourier transform, the signal spectrum has a fixed
frequency interval Œîùëì denoting the frequency resolution. Hence,
we sample the continuous response function at the same frequency
interval and get a finer-grained amplitude response. The digital
amplitude response of the electronic speaker is denoted as ùêª(ùëò).
After obtaining the speaker amplitude response, we can design
the inverse filter by the complementary principle. The amplitude
responses of the inverse filter and the speaker can cancel each other,
minimizing the impact of the replay process. Hence, the inverse
filter ùêª‚àí1(ùëò) should satisfy the all-pass condition that ùêª‚àí1(ùëò) ¬∑
ùêª(ùëò) = ùê∂ when ùêª(ùëò) ‚â† 0. ùê∂ is a positive constant which is typically
1. In addition, if ùêª(ùëò) = 0 for any ùëò, ùêª‚àí1(ùëò) should also be 0.
Another speaker property is the sub-bass (0-60 Hz) energy, which
can be generated by loudspeakers, not humans. The sub-bass fea-
tures are dependent on the speaker models and enclosure struc-
ture [8]. Although attackers may pick the speakers to minimize
the sub-bass energy, we still need to minimize the possibility of
detected by the sub-bass features. Hence, we optimize the inverse
filter in two ways. We set ùêª‚àí1(ùëò) = 0 when the frequency is within
0-60 Hz, because we do not want to amplify the existing noise in
the sub-bass range. Another way is to enhance the inverse filter re-
sponse in the speech frequency range so as to decrease the relative
proportion of the additive sub-bass energy. By these optimizations,
we can decrease the metric of sub-bass energy balance under the
detection threshold.
By applying the inverse filter before the playback device, we
can compensate the unwanted replay effects that are caused by the
electronic speakers.
3.5 Spectrum Processing
The spectrum processing will involve three phases: the time-frequency
domain conversion, the amplitude spectrum filtering, and the mod-
ulated signal reconstruction.
3.5.1 Time-Frequency Domain Conversion. First, we need to con-
vert the recorded audio from the time domain into the frequency
domain, because it is easier to filter the signals in the frequency
domain. For a ùêø-length signal segment, we pad the signal with zeros
so that the total signal length would be ùëÅ , where ùëÅ is the smallest
power of 2 greater than or equal to ùêø. The extended signal is denoted
as ùë•(ùëõ), ùëõ = 0, 1, ..., ùëÅ ‚àí 1. Then we convert the time-domain signal
ùë•(ùëõ) into the frequency-domain representation ùëã(ùëò) through the
fast Fourier transform algorithm.
ùëã(ùëò) =
ùë•(ùëõ) ¬∑ ùëí‚àíùëñ2ùúãùëòùëõ/ùëÅ , ùëò = 0, 1, ..., ùëÅ ‚àí 1
(1)
ùëÅ‚àí1
ùëõ=0
ùëã(ùëò) is the frequency spectrum of the original signal in the form
of complex numbers. The frequency resolution is defined as the
frequency interval Œîùëì = ùëìùë†/ùëÅ , where ùëìùë† is the sampling rate of the
recording audio.
Then we split the complex frequency spectrum into two parts.
The magnitude spectrum ùëãùëö(ùëò) = |ùëã(ùëò)|, represents the signal am-
plitude of different frequency components ùëò ¬∑ Œîùëì , ùëò = 0, 1, ..., ùëÅ ‚àí 1.
The phase spectrum ùëãùëù(ùëò) = ‚à†ùëã(ùëò) in radians, which is inde-
pendent with the amplitude information, represents where the
frequency components lie in time.
Spectrum Filtering. The inverse filter will only be imple-
3.5.2
mented in the amplitude spectrum. The phase spectrum will remain
unchanged. The effect of applying a filter is to change the shape
of the original amplitude spectrum. According to the system re-
sponse theory, the compensated amplitude spectrum is the product
of the input amplitude spectrum and the amplitude response of
the inverse filter. Hence, after modulating the signal with the in-
verse filter ùêª‚àí1(ùëò), the compensated spectrum ùëåùëö(ùëò) satisfies that
ùëåùëö(ùëò) = ùëãùëö(ùëò) ¬∑ ùêª‚àí1(ùëò).
Note that the amplitude spectrum of the speaker output is also
the product of the input amplitude spectrum and the speaker am-
plitude response. Therefore, the amplitude spectrum of the mod-
ulated replay audio will be ùëÜùëö(ùëò) = ùëåùëö(ùëò) ¬∑ ùêª(ùëò). We can find
that ùëÜùëö(ùëò) = ùëãùëö(ùëò) ¬∑ ùêª‚àí1(ùëò) ¬∑ ùêª(ùëò) = ùê∂ ¬∑ ùëãùëö(ùëò). Because ùê∂ is a
constant, the power distribution of frequency components in the
modulated replay audio will be the same as that in the genuine
audio, making it harder for ASR systems to detect the replay attack.
Test SignalSpeakerRecorderf = f0, a = 1FFT spectrumf = f0, a = a0(f0,a0)f Discrete data(f0,a0)Speaker responseFitting curve(f0,a0)f f f 3.5.3 Modulated Signal Reconstruction. After modifying the ampli-
tude spectrum to compensate for the energy loss in the following
playback phase, we need to reconstruct the signal in the frequency
domain. The modulated signal will have the compensated ampli-
tude spectrum and remain the original phase spectrum. Therefore,
the complex frequency spectrum will be reconstructed by the ampli-
tude ùëåùëö(ùëò) and the phase angle ùëãùëù(ùëò). That means the frequency
spectrum of the modulated signal should be ùëå (ùëò) = ùëåùëö(ùëò) ¬∑ ùëíùëñùëãùëù (ùëò)
according to the exponential form of complex numbers. After re-
constructing the modulated signal in the frequency domain, the
complex frequency spectrum ùëå (ùëò) will be converted back into the
time domain by the inverse fast Fourier transform algorithm.
ùëå (ùëò) ¬∑ ùëíùëñ2ùúãùëòùëõ/ùëÅ , ùëõ = 0, 1, ..., ùëÅ ‚àí 1
(2)
ùëÅ‚àí1
ùëò=0
ùë¶(ùëõ) =
1
ùëÅ
To ensure that the length of the modulated audio is the same
as that of the original audio, the last (ùëÅ ‚àí ùêø) data points in ùë¶(ùëõ)
will be discarded. Hence, the total signal length of the modulated
audio would be ùêø. Then, the final modulated audio will be saved as
a digital format to complete the replay attack.
4 COUNTERMEASURE: DUAL-DOMAIN
DETECTION