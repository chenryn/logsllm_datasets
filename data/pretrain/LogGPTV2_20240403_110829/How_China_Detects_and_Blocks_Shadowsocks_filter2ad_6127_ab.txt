frequency: https://www.wikipedia.org, http://example.com, and
https://gfw.report.
OutlineVPN. We installed an OutlineVPN v1.0.7 server in a US
university network. The OutlineVPN client we used was the latest
as of October 2019. The client was in a residential network in China.
Client traffic was provided by an instance of Firefox, configured to
automatically browse a subset of the Alexa top 1 million sites that
is censored in China.
Limitations. The locations of our vantage points lack some diver-
sity, making us less likely to observe any potential inconsistencies
in the probing system caused by geolocation.
3.2 Probe Types
We analyzed all connections to the server port running Shadow-
socks, and used the traffic received by the control host to verify
8121622334149Probe length (bytes)010203040CountType NR12210500100015002000Type NR2IMC ‚Äô20, October 27‚Äì29, 2020, Virtual Event, USA
Alice et al.
Table 2: The most common prober IP addresses and their
number of occurrences.
Prober IP address Count
44
38
36
36
33
32
32
32
32
31
175.42.1.21
223.166.74.207
124.235.138.113
113.128.105.20
221.213.75.88
112.80.138.231
116.252.2.39
124.235.138.231
221.213.75.126
223.166.74.110
Figure 4: Overlap in prober source IP addresses across inde-
pendently collected datasets.
Table 3: Counts of unique prober IP addresses per au-
tonomous system, across all experiments.
AS4837
AS4134
AS17622
AS17621
AS17816
AS4847
6262
5188
315
263
104
101
AS58563
AS17638
AS9808
AS4812
AS24400
AS56046
AS56047
44
17
2
1
1
1
1
sent more than one probe. The most common prober IP addresses
are summarized Table 2.
We compared our list of prober IP addresses against 934 that
were observed to send active probes to Tor servers in 2018 by Dunna
et al. [13], and 22,000 that were observed to send various types of
active probes between 2010 and 2015 by Ensafi et al. [14]. Figure 4
shows that three sets overlap only slightly. We note the IP address
202.108.181.70, which was responsible for an inordinate number of
probes in previous work [14, ¬ß5.3], does not appear in our data. The
small overlap is not unexpected, given that past work has observed
high churn in prober IP addresses.
Figure 3: Cumulative number of probes per prober IP ad-
dress.
that the probes we observed were triggered by our own connec-
tions, and not the result of ‚Äúbackground radiation‚Äù Internet scans.
We observed a total of 51,837 active probes across all experiments.
We arrange the probes into two main categories, replay-based and
seemingly random, with a further distinction of probe types within
each category. The first category of probes, replay-based, have a
payload that is derived from the first data-carrying packet of some
previously recorded legitimate connection. We assign the probe
types in this category names beginning with ‚ÄòR‚Äô, for ‚Äúreplay‚Äù:
Type R1 Identical replay.
Type R2 Replay with byte 0 changed.
Type R3 Replay with bytes 0‚Äì7 and 62‚Äì63 changed.
Type R4 Replay with byte 16 changed.
Type R5 Replay with bytes 6 and 16 changed.
Probe types R3, R4, and R5 were received only in the OutlineVPN
experiment, not in the Shadowsocks-libev one. Only two type R5
probes were received in our experiments.
The other category of probes, seemingly random, have varying
lengths. Their contents that do not resemble a prior legitimate
connection in any way we can identify. We give probe types in this
category names starting with ‚ÄòNR‚Äô, for ‚Äúnon-replay‚Äù:
Type NR1 Probes of length 7‚Äì9, 11‚Äì13, 15‚Äì17, 21‚Äì23,
32‚Äì24, 40‚Äì42, or 48‚Äì50 bytes.
Type NR2 Probes of length exactly 221 bytes.
Figure 2 illustrates the distribution of type NR1 and NR2 probes.
The lengths of NR1 probes are distributed in trios centered on 8,
12, 16, 22, 33, 41, and 49 bytes. We will have more to say about this
distribution in Section 5.2.
3.3 Origin of the Probers
A simple idea to defend against active probing is to discover the
IP addresses of probers, and ban them. Below, we show it may be
challenging to implement such a defense, because the GFW probes
from a large and diverse pool of IP addresses, with high churn.
IP addresses. The 51,837 active probes were sent from 12,300
unique source IP addresses, all located in China. Figure 3 shows the
distribution of the number of probes sent per unique IP address. In
contrast to previous work, which found that ‚Äú95% of the addresses
appear only once‚Äù [14, ¬ß5.3], in our tests more than 75% of addresses
114
010203040Number of probes sent from one IP address02500500075001000012500Count of IP addressesNumber of unique IP addresses: 123001212821721167895534Tor active probes  (Dunna et al.)Shadowsocks active probesActive probes  (Ensafi et al.)How China Detects and Blocks Shadowsocks
IMC ‚Äô20, October 27‚Äì29, 2020, Virtual Event, USA
Figure 5: CDF of TCP source port numbers of probes in one
experiment, including 1,576 probes.
Autonomous systems. The autonomous system (AS) distribution
of probers is shown in Table 3. The two ASes that account for the
most Shadowsocks probes are AS4837 (CHINA169-BACKBONE
CNCGROUP China169 Backbone) and AS4134 (CHINANET-BACK-
BONE No.31, Jin-rong Street). These two were the most common
in previous work [14, 56] as well. Other ASes that overlap with
previous work are AS17816, AS9808, AS56046, AS17638, AS56047,
and AS17622. AS17622 (CNCGROUP-GZ China Unicom Guangzhou
network) accounts for a much larger fraction of probes than in
previous work [14, Figure 7]. Other previously attested ASes do not
appear in our data, including AS7497 (CSTNET-AS-AP Computer
Network Information Center), which was the third most common
source of probes seen by Ensafi et al [14]. There are also ASes in
our dataset that have not been previously documented as being a
source of active probes.
3.4 Fingerprinting the Probes
As in previous work, we fingerprint the packet-level features of
active probes. At the IP layer, we examine the ID and TTL fields.
At the TCP layer, we look at source ports and timestamps.
IP ID and TTL. We fingerprint the IP ID and TTL of PSH/ACK
packets sent by the probers. As in Ensafi et al. [14, ¬ß5.5], we find no
clear pattern in the IP ID sequences, and that TTLs remain within
the range 46‚Äì50.
TCP source ports. Around 90% of probes came from source ports
in the range 32768‚Äì60999. This range, highlighted in Figure 5, hap-
pens to be the default source port range of many Linux kernels.
Probes never used a source port below 1024 (the precise minimum
we saw in one experiment was 1212). These result differ from those
of previous work [14, ¬ß5.5], which observed all ports being used,
and no range of ports being more common than any other.
TCP timestamp (TSval). The TCP timestamp is a 32-bit counter
that increases at a fixed rate, attached to every non-RST TCP seg-
ment [7, ¬ß3]. It is not an absolute timestamp, but is relative to how
and when the counter was initialized, and its rate of increase varies
across operating systems. Figure 6 shows the timestamp value at-
tached to the SYN segment of each probe. The figure shows that
Figure 6: Non-independent processes revealed by common
TCP timestamp sequences. The labeled marker lines have
slopes of precisely 250 Hz and 1000 Hz. The small cluster
of 22 non-replay probes on the 1000 Hz line locally have a
slope of 1009 Hz, but here the measurement is less certain
because they span only about 3.5 s. The 1000 Hz line does
not become 250 Hz, even if connected to one of the sparse
non-replay data points at the left edge of the figure.
although the probers use thousands of source IP addresses, they
cannot be fully independent, because they share a small number
of TCP timestamp sequences. In this case, there are at least seven
different physical systems or processes, with one of the seven ac-
counting for the great majority of probes. We say ‚Äúat least‚Äù seven
because we would not be able to distinguish two processes whose
TSvals sequences are very close (which could happen, for exam-
ple, if both processes were restarted at about the same time). We
measured the slope of the linear sequences to be almost exactly
250 Hz, with the exception of one small cluster of 22 closely spaced
points whose slope is closer to 1000 Hz. There are two cases where
a sequence reached the maximum value of 232 ‚àí 1 and wrapped
around to 0. Compare Figure 6 to Figure 11(c) of Ensafi et al. [14],
which also shows 250 Hz and 1000 Hz sequences.
3.5 Delay of Replay Attacks
The GFW may record the first data-carrying packet of a genuine
client connection and replay it later, possibly with modifications,
as an active probe. Figure 7 shows the variability in delay between
when a legitimate connection is made and when the GFW sends
replay-based probes derived from that connection. Because probe
payloads may be replayed more than once (up to 47 times, in one
case), we present two distributions, with and without repeated pay-
loads. The orange line represents the delay of the first occurrence
of each replay-based probe payload, while the blue line shows the
delay of all replay-based probes, including repeated payloads. The
total number of probes is 3,269 for first occurrences and 11,137 for
all occurrences.
More than 20% of first replays arrived within one second; more
than 50% within one minute; and more than 75% within 15 minutes.
Replay-based probes may be sent almost immediately, or may be
stored for a surprisingly long time before being sent. The shortest
delay we observed was 0.28 seconds and the longest was 570 hours.
115
0100002000030000400005000060000TCP source port of prober SYN packets0%20%40%60%80%100%Common Linux source ports32768‚Äì60999Lowest observed: 1212Highest observed: 65237Oct 27Nov 03Nov 10Nov 170231232TCP TSval250 Hz1000 HzIdentical replay (R1)Byte-changed replay (R2‚ÄìR5)Non-replay (NR1‚ÄìNR2)IMC ‚Äô20, October 27‚Äì29, 2020, Virtual Event, USA
Alice et al.
Table 4: Summary of random-data experiments. [ùë•, ùë¶] means
the value is uniformly and randomly sampled from a range,
independently for each connection. In Exp 1, the server
was switched from sink mode to responding mode after 310
hours; we label the two subexperiments 1.a and 1.b.
Client
Length (bytes) Entropy
Exp #
1.a
1.b
2
3
[1, 1000]
[1, 1000]
[1, 1000]
[1, 2000]
Server
Mode
sink
sink
sink
responding
> 7
> 7
< 2
[0, 8]
very beginning of a client-to-server flow, before deciding that the
traffic was suspicious.
Guided by these two observations, we implemented a TCP client
that connects to a TCP server and sends one data packet, with a
specified length and Shannon entropy. We implemented a server
with two operating modes: sink mode and responding mode. In
sink mode, the server accepts TCP connections, but does not re-
spond with any data, and closes connections after 30 seconds. In
responding mode, the server responds to probers‚Äîbut not our own
clients‚Äîwith between 1 and 1000 bytes of random data.
Table 4 summarizes the design of the random-data experiments.
Table 1 shows the time span of the experiment. Clients ran on
different VPSes within the same Tencent datacenter in Beijing. All
servers ran in the same Digital Ocean datacenter in the US. Client
and server IP addresses were not reused across experiments.
4.2 Experiment Results and Analysis
Little traffic is required to trigger active probes. Our sink server,
despite not being a real Shadowsocks server and never sending data,
received many of the same types of probes as in the Shadowsocks
server experiment of Section 3.1. After a TCP handshake, a single
data packet from client to server suffices to trigger active probes.
Only certain lengths are replayed. Although our clients sent data
packets with lengths of between 1 and 2000 bytes, virtually all
probes that were determined to be replays had a payload length of
between 160 and 700 bytes, with the maximum length being 999
bytes. Figure 8 shows the distribution of probe lengths in Exp 1.a.
The distribution of lengths exhibits a stair-step pattern, reflecting
the fact that certain lengths are more likely to be replayed. Namely,
the lengths of replay probes tend to have certain remainders when
divided by 16. Considering type R1 probes (type R2 is similar),
of the 376 probes whose length is in the interval 168‚Äì263 bytes,
72% have a length whose remainder when divided by 16 is 9; of
1,558 in the interval 384‚Äì687, 96% have a length whose remainder
is 2; and of 749 in the middle interval 264‚Äì383, there is a mix of
remainders 9 (37%) and 2 (32%). The results suggest that the GFW
considers packet lengths in classifying Shadowsocks traffic. Packet
length is a reasonable feature to use, because Shadowsocks does
not pad the contents of the tunnel, only incidentally changing the
underlying packet length distribution by adding an address header
prefix (see Section 2) and, with AEAD ciphers, length prefixes and
tags. The payload length distribution of the Shadowsocks traffic
Figure 7: CDF of the delay of replay-based probes. Note the
logarithmic ùë•-axis.
4 WHAT TRIGGERS ACTIVE PROBING
There are alternative hypotheses for how the GFW might go about
discovering Shadowsocks servers. One is large-scale, proactive port
scanning; another is reactive probing triggered by legitimate con-
nections. The fact that the unused control host in the previous
section did not receive any active probes leads us to discard the
proactive scanning hypothesis. Instead, we assume that probes are
sent only when the probing system sees a suspected Shadowsocks
connection.
What, then, constitutes a suspected Shadowsocks connection,
from the GFW‚Äôs point of view? In this section, we deal with the
following questions:
‚Ä¢ How much traffic is required to trigger active probes?