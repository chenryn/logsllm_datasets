6）通过实时推送指标数据达到流式监控能力，例如通过WebSocket实现实时监控推送和监控曲线实时刷新。
2.  数据传输能力
> 描述：通过标准数据协议在应用侧，本地代理，可观测性后端等环节传输可观测性数据的能力
>
> 要求：
1.  具有数据交付的高可靠性和数据无法交付的清晰可见性
2.  高性能序列化和反序列化，支持高效修改反序列化数据并再次序列化以进一步传递的能力。
3.  支持负载均衡
4.  支持背压信号。如果服务器无法跟上它从客户端接收到的数据的速度，那么它应该向客户端发出这个事实的信号，客户端收到后需自己节流以避免服务器不堪重负。
    1.  数据处理能力
描述：对可观测性数据进行分析，聚合，处理的能力
要求：
1.  Metrics数据处理，如预聚合、降采样能力
2.  Traces数据处理，如尾部采样、聚合分析调用依赖的能力
3.  支持数据标签，通过标签方式给采集的数据添加标志，更好识别与区隔特定条件的数据。
4.  按租户将可观测性数据路由调度能力
5.  分布式追踪中时钟偏差修复能力，便于发现和展示链路中的时延（可选）
    1.  数据开放能力
描述：平台对生成的应用可观测性数据进行开放，满足第三方应用的增值需求。
要求：
1\)
业务上线前的资源精准评估，结合链路拓扑与服务压测，得出每条边的放大倍数；
2\) 结合混沌工程，引入服务调用关系链数据，用于服务强弱依赖分析；
3\)
收集追踪、指标、日志等历史数据，引入机器学习技术，实施异常检测及根因分析。
4）业务服务质量报表，如成功率，平均延迟，分位延迟等
5）提供开放API供外部系统集成
2.  数据存储能力
描述：根据采集可观测性数据的应用特点实施分级存储。
要求：
1\) 支持实时数据 ,最新最热的数据，推荐以小时级为单位的存储粒度
2\) 支持以周为单位的数据存储，用于短期回顾检索
3\) 支持以月、年为单位的数据存储，用于永久历史数据的查询与分析
4\) 支持数据去重与合并
3.  数据可分析可观测能力
描述：“补充”
要求：
1)  具有数据可视化能力，如列表展示能力，Trace时间轴、瀑布图、拓扑图，Metric面板链接Trace/Log、并支持附加信息（服务发布，告警触发）
2)  提供了可视化方案方便使用者构建可观测的视图
3)  提供完整的全链路的数据分析能力，有效的整合指标，日志和追踪
4)  具有数据关联能力，如Metric数据关联Trace/Log数据、Log数据关联Trace数据
5)  提供强大的数据分析查询语言，快速在海量数据中查询指标，日志和追踪
    1.  数据的异常检测能力
描述：“补充”
要求：
1)支持指标基于阈值或机器学习的异常检测能力，如相较于过去一周的指标偏移情况
2)支持日志基于文本的异常检测能力，如日志中包含关键字的错误过去5分钟出现了多少次
3)支持追踪基于规则的异常检测能力，如过去5分钟p99延迟超过多少的请求。
2.  复杂环境的可观测性支持
描述：“补充”
要求：
1)支持复杂网络条件下的可观测性
2)支持多云、混合云环境下的可观测性
3)支持容器环境下的可观测性
7.  []{#_Toc85805531 .anchor}业务系统支撑能力
要达成理想的可观测效果，不但需要有完善的可观测平台技术，还需要被观测的业务系统提供对可观测性的友好支持，这样才能形成整体的可观测效果，可观测性平台应当提供相关文档/SDK/插件辅助被观测性系统完成以下能力要求。
1.  指标统计
> 描述：支撑业务程序在运行过程中准确的统计自身的性能数据，并将相关的数据暴露给可观测系统，以使可观测系统能够准确获取程序的运行状态；
要求：
1)  准确统计流量、平均响应时间、错误码、成功率等信息
2)  至少支持一种数据暴露方式，如主动上报或输出到运行日志中
3)  需要遵守一定的格式规范，如OpenMetrics。
    1.  
    2.  
    3.  日志规范
> 描述：可观测性平台应提出日志格式和等级规范，指导被观测程序在运行过程中按规范输出日志，方便可观测系统进行分析。
要求：
1.  提出日志格式规范，用关键字区分正常日志和异常日志，用关键字或位置区分关键信息，如流量、平均响应时间等。
2.  提出日志等级规范，如正常等级、debug等级，程序运行过程中开启正常等级，调试和排查问题时可开启debug等级，常态下不输出无效日志。
    1.  分布式追踪采集
> 描述：业务系统从端上到接入层到后端和组件，支持对各个请求进行标识，并在日志中记录每一个请求在每一个环节的标识码，方便可观测系统识别分析。
要求：
1.  业务系统各个环节支持请求的标识方案
2.  提供标准Trace数据模型
3.  提供标准Trace上下文规范，如W3C、B3、Jaeger、OT Trace、Skywalking等
    1.  组件提供可观测性的标准化集成
1)对于基础设施，系统，容器等基础环境提供相关指标和日志
2)对于中间件，数据库，如MySQL，Kafka等提供相关的指标和日志
3)应用程序发布者提供指标，日志，链路的可观测性方案，如指标提供Prometheus
Exporter方式的输出，标准化日志数据模型，自带基于OpenTelemetry协议的链路追踪暴露。
4)端应用（H5，小程序，Android，IOS，win/mac客户端，IOT终端）提供相应的指标和日志以及追踪
5)支持导入复杂的业务指标
2.  观测指标
1\) 基础通用指标，服务或平台基础性通用指标，如性能类；
2\)
服务特性指标，服务或平台特有的属性描述指标，如业务充值数、流失数、访问失败率
3\) 其他分类指标，其它更多用户自定义指标。
4\) 日志指标化，可以将日志的数据提取为指标
5）Trace指标化，可以将Traces的数据提取为指标
3.  
```{=html}
```
8.  []{#_Toc74241879 .anchor}平台运维支撑能力要求
> 运维支撑部分是指对可观测平台自身系统运维能力的要求。
1.  容器化支持
> 描述：可观测系统可以部署到容器环境，支持k8s编排，增加服务的可用性，提升系统自身的运维效率
>
> 要求：
>
> 1.支持模块微服务容器化部署；
>
> 2.支持Kubernetes容器编排；
2.  弹性伸缩
> 描述：根据可观测性系统的负载情况可以动态的增加集群资源或者减少资源做到扩容和缩容。
>
> 要求：
>
> 1.支持资源水平扩展与伸缩。
>
> 2.支持在固定时间内完成资源的伸缩。
>
> 3.支持扩容后节点负载的均衡。
3.  高可用性
> 描述：描述可观测性系统无故障运行的时间比、容灾策略等。
>
> 要求：架构应具备容灾能力，系统内任何单实例故障，不影响系统核心功能和体验。
>
> 1\.
> 应具备容灾能力，在服务出现问题时，可以在规定时间内在模块层面实现平滑的容灾处理。
>
> 2.应支持多种容灾能力、高可用架构策略。
4.  日志管理
> 描述：提供日志管理功能，记录可观测性系统运行过程中生成日志文件，包括运行信息、传输的数据包和文件信息、系统错误等。日志可用于系统的运行状态监控，通过对日志的实时采集、分析、展示等，便于自监控分析。
>
> 要求：系统运行输出完善的运行状态日志
>
> 1.提供平台日志查询和管理功能。
>
> 2.支持日志收集、检索、聚合、分析展示功能。
>
> 3.应保障日志采集的完整性，通过跟踪日志文件状态日志落盘等方式，防止Agent故障重启后的数据丢失。
5.  数据异地灾备
> 描述：支持监控数据在多个集群间备份的能力。
>
> 要求：支持数据异地灾备能力。
6.  操作系统与处理器适配
1)支持包括Windows，Linux，甚至嵌入式的RTOS
2)支持x86，amd64，arm，arm64，risc，AIX等硬件环境
9.  []{#_Toc74241880 .anchor}平台安全能力要求
可观测性系统采集了大量的业务信息，信息安全保障是平台需要提供的重要基础能力之一，本节定义了可观测性系统安全相关内容。
1.  身份认证