从对抗角度看，这种攻击者的APT意向是我们当前无法主动消除的，也就是说对方什么时候出拳不由我们决定，因此，防御的滞后性是先天决定的，它不是技术层面可以解决的，但APT意向可以被引导弱化或是加强。有人喜欢讨论杀毒软件特征码技术具有滞后性，因此认为动态行为分析，或者引入人工智能是解决APT的最佳方案，这也是看不到这个层面的问题所导致的片面认识。但应当指出，开发强大的防御体系具有威慑效果，它会使APT攻击者在决策时陷入困难并可能选择防御较弱的目标作为优先被攻击对象。
另外APT素材具有相当复杂的多样性，这是由防御者能力来激发的。被攻击目标的难易程度，攻击策略的选择都将导致APT素材的不断变化。需要仔细研究的案例就是BlackEnergy
APT(2015被发现)[21],这起APT事件的幕后操纵者Sandworm团队技术能力出众[22]，但整个攻击过程没有使用一个0Day漏洞（面对如此复杂的电力系统攻击场景，仅使用带宏的xls文档就撕开来一个进攻的口子。相比较Stuxnet
v1.2携带6个漏洞5个0Day[23]的气势汹汹，势在必得而言，Sandworm
Team这次攻击显得如此的闲庭信步，够用且不浪费，如此精准的控制细思极恐）可以肯定，前期准备的素材一定是非常多的。APT素材只会越来越多，也会继续出现在我们常规观念不易察觉的地方，不同类型厂商之间的协作分析越来越有必要。
现在，我们可以明晰APT这一高级威胁方面的术语所包含的真正进一步含义，即攻击组织在APT素材的协助下由意向转变为目的意图的过程就是APT事件，这个事件的发生过程是具有持续性的。
### 定量研究APT高级威胁
前面我们从定性的角度讨论的APT的本质，为了便于更细致的讨论，我将从定量的角度分析APT本质和攻击意向，攻击素材的关系。
攻击意向记作集合E E = {e | 元素e具有攻击意向属性} －－－－ 2.1
攻击素材记作集合M M = {m| 元素m具有攻击素材属性 } －－－－2.2
E和M一起确定了APT系统,记作A， A =  ，A代表了APT的本质的组成集合
E = {e | e1 , e2 , e3 .... en} // e1~ n
代表了不同目标的攻击意向，针对电力的／能源的／金融的／政府的／制造政治事件...
M = {m | m1 , m2 , m3 ... mn} // m1 ~ n
代表了不同的攻击素材，针对浏览器／系统内核／移动／IoT研究／固件／代码逆向／代码开发 ....
APT所产生的表象记作集合
P = {p | 元素p是具有某种APT表象的属性} －－－－2.5
激活函数记作集合 F = {f | 元素f是具有触发具体APT事件的动力因素属性} －－－－2.6 例如，f1 ＝ 政治事件，f2 ＝ 经贸活动 ，f3 ＝
军事行动， f4 ＝ 外交变化 ，f5 ＝ 长期潜伏，f6 ＝ 紧急行动,f7 = 经济利益 ...
同样，表象p和攻击意向e，攻击素材m在激活函数的f的作用下有如关系 p = f(e，m) －－－－2.7
1)在激活函数促进下攻击素材m可以转换产生为m‘，m’是m的扩展应用 ，m' ∈ M, 记作 m ＝> m' －－－－2.4
2)在激活函数的促进下攻击意向e可以转换产生为e‘，e’是e的增强或是减弱 ，e' ∈ E, 记作 e ＝> e' －－－－2.3
因此，表象P是APT本质集合的一个活动投影 A => a' －－－－2.8 // A的活动产生a' a' ∈ P －－－－2.9 // a'属于表象P集合
对比Stuxnet震网事件，2006年伊朗宣布恢复纳坦滋试验厂铀浓缩活动这一事件，对攻击者而言，起到了激活函数F的作用,进而由攻击意向e转化为e'(e'是e的加强，决定使用网络
武器攻击的意图)和攻击素材m(ORNL部门开始着手研究破坏离心机项目)的组合下由激活函数F产生了表象p
即｛离心机被破坏，使用了5个0Day漏洞，攻击工控设备的样本...｝。
在分析出APT本质后，我们可以看到，最终影响表象P的因素是：
  1. 激活函数F 
  2. 攻击意向e 
  3. 攻击素材m三方面的作用
激活函数F这一动力因素具有两个方面影响，一方面影响内部因素e,m，使其转化为e‘,m’（加强或减弱攻击意向，增加攻击素材），一方面激活f（e‘，m’）产生外部表象p。从防御角度看，激活函数这一因素最复杂，因为我们无法简单根据一个政策，事件，经济活动，外交变化，所持立场等角度判断出F是否对本质A产生确切的影响。这需要对F激活函数有具体的深入研究才能得出相应的一些推断。不妨简化一下这个问题，假设e，m是可以被得知且明确认定情况下，F产生了一个激活函数，例如
f ＝
外交变化，那么攻击者此时最想做的是什呢？站在攻击者对立场可以设想一下，具体哪些电力系统，航空系统，政府部门是否会受到攻击，潜伏的APT是否会因此被激活？可否做到提前预警？需要采取哪些措施？等等问题都是值得我们深入思考的事情。
从理论上讲，攻击意向E不可能被消除，但我们可以利用激活函数F产生一些伪造的动力因素f’，使得e ＝> e'
;e'是弱化的e，使得其它激活函数不能激发f(e‘，m)，这样可以暂时避免或减少目标系统遭受APT攻击的可能性。当下，尚未对激活函数有具体的研究结论时，这样的操作有相当大的难度，但在理论上存在这样的可能。
这里需要说明一下，为什么是攻击意向，而不是意图或是意志呢？
因为意图或意志是明确的具有不可转变的含义。意向的不断增强会转化为明确的意图或持续的坚强的意志。意向的减弱会转变为新的意图。换句话说，攻击意图或是意志是意向的最终表象，是我们进行APT事件分析、样本分析后，所最终肯定的那部分内容。但最本质的部分是攻击者的意向的存在，在攻击素材的配合下，所转化为确定的攻击意图和得手后所呈现的最后结果。
同样,攻击素材M也不可能被消除，M只会变的越来越多。M演化的速度与整体网络环境及目标系统的防御难度成正比关系。即网络环境越复杂，目标系统入侵难度越大，那么攻击素材M就会越多。显然，攻击者的强大优势体现在攻击素材的存量远远高于防御者掌握的表象即
M >>> P
.也就是安全研究者提出的“上帝视角攻击”，可以对比看一下方程式／CIA被曝光的攻击包就是这个含义［24］。对此，我们可以伪造一些终端主机／服务器,并暴漏一些安全问题，诱使攻击者选择已有的攻击素材M,消减攻击者对目标系统更新攻击素材M的速度。
综上，从整体上来看各国之间网络战的条件已然形成[25]。因此，APT集合会不断产生表象P，我们未来面对的APT攻击只会越来越具有复杂指向性，不只是单纯的技术高级而是攻击者与被攻击者，目的与意图这些约束关系之间的组成变化。所以就防御而言，梳理各类事件信息形成激活函数模版并在特定场景下进行APT推测具有很深刻的理论意义，我们绝对不会真正知道未来情况如何变化，这堪比预测地震一样困难，确定激活函数是为了弄清其意义，评估接下来发生的可能性。同时对攻击素材方面要扩大认知层面，尽可能多的搜集和整理可实战的新的攻击思路和方法，对防守方来说囊括的攻击素材越多，未来检测出的表象P就会越多，效果就会越好，威慑能力也越强。客户对威胁情报的质量要求远远高于数量要求，厂商简单的积累过往的APT攻击素材对高一阶的APT攻击起不到任何威慑的作用。
## 0x03 有效方法的提出
### 纸上得来终觉浅 － 提出问题
从2010开始至今，APT问题层出不穷，不断刷新安全研究人员对其理解程度的认知。APT具有天然复杂性是其一，但根本原因在于缺少梳理归纳APT事件合理方法。我们只看到发现APT事件－>曝光－>更新产品数据->继续曝光->继续更新...
这样的循环模式。虽然在不断的实践中积累了宝贵经验。但这样的经验显然不能使我们自信的面对未来的威胁，因为这样的经验不能准确的，系统的刻画及表达出未来威胁的可能信息，对未来发生的情况我们所知甚少，惊叹甚多。2010年Stuxnet出现我们惊叹，2012年Flame出现我们惊叹，2015Equation出现我们还是惊叹。
在上一节的关于本质讨论中我们已经知道，目前我们能够干预激活函数的可能性很小，攻击意向也不可能消除，只剩下对攻击素材的研究了。换句话说能不能在激活函数F,攻击意志E一定的条件下，通过对表象信息的研究获得深入的知识，刻画当前，预测未来的可能威胁呢？也就是我们要寻找出归纳APT事件的方法，让APT事件变得有序，可在一定程度上可以被把握，被评估，被预测。
Stuxnet是APT事件中最佳的分析对象,它包含了最少争议的事实，明确的激活函数，明确的攻击意向，明确的攻击素材。为此我们需要仔细研究Stuxnt的方方面面，但在汗牛充栋的资料当中寻找我们需要的细节，没有其它的捷径可走，不断的调试和逆向分析是最可靠的知识来源，我选择从此入手，寻找我们能准确的刻画威胁信息的方法。
### Stuxnet逆向分析
分析Stuxnet是非常困难的事情，在那几年当中，即便把所有精力投入，我也没有能力把Stuxnet完全的分析完毕，受知识领域限制尤其工业工控部分，另外对攻击者操作过程中信息的丢失，以及对某些深入问题的研究程度都将影响最终的分析结果。但这仍然是极其有意义的事情，没有这些繁琐的逆向调试过程就不能真正的深刻认识到问题的复杂，它时刻提醒你，摆在眼前的可不是什么小角色，它是网络武器不要放过任何细节。下面把我自己之前的一些分析放在附录中供大家参考（注：这不是完整的技术分析报告,仅是分析时的技术点记录）。
  * 《附录一：主要感染模块~WTR4132.tmp的逆向分析》
  * 《附录二：主要感染模块~WTR4132.tmp攻击载荷部分的逆向分析》
  * 《附录三：通过lnk漏洞加载的～WTR4141.tmp的逆向分析》
  * 《附录四：内核rootkit-MRXNet.sys的逆向分析》
  * 《附录五：关于内核提权漏洞CVE-2010-2743的分析与利用》 
  * 《附录六：关于Windows Shell远程代码执行漏洞CVE-2010-2568的分析与利用》
  * 《附录七：关于打印机远程任意代码执行漏洞CVE-2010-2729的分析与利用》
  * 《附录八：关于Windows 计划任务导致内核提权漏洞CVE-2010-3338的分析与利用》
  * 《附录九：ITW 0Day：LNK远程代码执行漏洞（CVE-2017-8464）的简要分析》
  * 《附录十：Symantec赛门铁壳通报的Stuxnet相关信息摘要》
  * 附录的技术详情见：
  * 未完待续...
整体分析下来可以得知，Stuxnet称得上是精巧且以极其复杂而著称，攻击者能够一蹴而就的完成攻击，显然是经过长久以来的默契配合才能有如此效果的。但在分析中我也发现了一些问题，首先精心策划数年，价值上百万美元的攻击武器先是被一个名不见经传的白俄罗斯安全公司VBA32发现（行业里面的人会对VBA32的启发式技术有很大的好感，但行业外知名度不高），又被Symantec几个不太懂工控PLC的聪明的加州程序员发现了新问题并模拟出了结果，最后由Ralph等3个人组成的研究团队的德国小公司揭示出了攻击目的[26]。
这看上去有点不可思议？其实一点都不，研究Stuxnet的样本可以看到，代码虽然精巧，但所使用的技术绝大部分并没有超越常规的技术理解范围，只要持续的投入分析，绝大部分信息是可以被破解出来的。Stuxnet也要躲避杀毒软件的，如果发现存在杀软的机器则退出监控。攻击过程中漏洞使用量非常大，这一点令人印像深刻，5个windows漏洞+1针对SIMATIC
WinCC 漏洞[27]，其中4个windows
0Day漏洞中涉及到的打印机漏洞和lnk漏洞在前些年的hackin9杂志以及银行盗窃病毒zlob(也就是后来被确认用2个0Day漏洞的fanny,Equation组织中的另一款工具)中都有使用出现。利用2个被盗用的合法的数字签名是让人吃惊的，它否定了我们之前的安全假设，Duqu攻击者目的被破解后，人们因数字证书所建立的信任关系开始动摇了。
最为困难的事情是对攻击者的意图的破解,但研究人员最终还是通过这些样本揭示公众对Stuxnet的疑问。通过模拟分析来判断攻击者的意图是针对特定的西门子的S7-315／417型PLC设备，继而靠变频器的设备ID分析出了针对315型号代码意图是修改变频器的工作频率，通过不间断的高低频的变换使得离心机的频率超出正常的范围，在多轮循环之后最终将轴承磨损殆尽，造成过早的机器损害。至此，从样本分析到最终攻击者意图的显现都让人惊讶不已，因为直到3年后发现Stuxnet0.5时，研究员人员才确定为什么当初针对417型的攻击代码是缺失不全的，以及为什么Stuxnet0.5中包含完整的417型攻击代码而后被舍弃。所谓的有组织，国家力量的背后支持，持续性的，高级攻击技术其每一项在震网的案例中都被体现的淋漓尽致。
### 构建高级威胁评估模型
坦率的讲，虽然我分析过很多的APT组织，但多数都是技术普通的攻击团体，真正称得上高级威胁并不是太多，而从技术角度来看，高级威胁应该具有下面的特点，
  1. 使用0Day攻击，这一点几乎是必须的条件
  2. 支持各种网络协议上的多个隐蔽通信通道
  3. 不同寻常的持久化技术，借助于操作系统的某些不被人知的技术
  4. 恶意程序模块只能存在于内存中而不会触及磁盘，造成取证困难
  5. 高难度复杂技术的实现，其技术门槛的高度仅限于该组织独有
  6. 未被发现感染媒介，也就是最初的感染向量到目前为止也不清楚
  7. 已经破坏了多个国家/地区的多个政府组织
  8. 在被发现前已经隐藏潜伏多年，而造成的损失以无从评估
当通盘分析和考量了Stuxnet的进攻方式后，就可以直观自然地认识到漏洞,攻击技术,使用方式都只是影响高级威胁到关键要素，而要把握住这样的攻击能力，唯有对攻击目标的整体衡量才会对高级威胁认识方面的困惑慢慢变得减少。漏洞是攻击者采用的手段之一，它只是预备漏洞存储库中的一例，技术的复杂与否只因目标而定，同样体系下产生的Stuxnet和Duqu显然不同，攻击能力高低不等，但却同样是高级威胁。因此我采用最小闭环原则来进行评估，即形成一次攻击所要求的最小数据集合，攻击量化的数据取自攻击者实施当前攻击中成功所需的模块代码数量。因为对于网络攻击技术而言，技术人员很可能拿不到第一时间的入侵数据，现实中的第一步感染操作是如何进行的可能便无从得知，我们只能取得当前可以被认为是第一个步骤的数据进行量化评估。在此之后下载及后续能力的更新则不完全算是初始攻击能力的体现。
所以，针对Stuxnet的量化文件包括～WTR4141.tmp，～WTR4132.tmp，Copy of Shortcut to.lnk
3个文件，因为它们能够构成一个最小的攻击组合。其他产生的衍生文件则不是攻击能力评估的对象，下面给出攻击能力量化的一些原则。
攻击体现在对攻击产生重要影响的技术与代码总量之间比例的考虑，相当于使用一个0Day漏洞产生价值趋向于编写1296k（即a=3；s=1；m=1；p=1；x=5；的情况下）的代码含量的程序。这个比例是兼顾考察Stuxnet与其他攻击案例的差异不至于过大，同时也为了区分使用0Day的案例与其他没有使用0Day的案例的协调关系。
对于需要交互才能完成的利用给予降低攻击能力的评价，例如直接发送伪造为word，pdf文档的exe文件等方式，这样方式作为高级威胁虽然也会出现在个别组织的攻击事件当中，但对于高级威胁的攻击能力的评估上要予以降低分数的考量。
综合了各方面的因素与实际的反复测量，下面给出一种评估模型的检测公式：
攻击能力AT = (a + s + m + p) ^ (k) * (1 + x)^ 2 + c －－－－ －－－－ 3.1  
c = 代码量衡量值，  
如果a >= 3,时， c = 最小闭合的文件大小 / 1024，  