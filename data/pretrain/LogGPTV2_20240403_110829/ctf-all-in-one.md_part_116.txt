| ; CALL XREF from 0x00400c3a (main)
| 0x0040081d push rbp
| 0x0040081e mov rbp, rsp
| 0x00400821 sub rsp, 0x20
| 0x00400825 mov dword [obj.student_num], 0
; [0x602028:4]=0
| ; JMP XREF from 0x00400ba3 (sym.f)
| .-> 0x0040082f mov edi, str.1._Add_student.__2._Nam
e_student.__3._Write_memo__4._Show_Name__5._Show_memo.__6._Bye_:
; 0x400ce8 ; "1. Add student.\n2. Name student.\n3. Write memo\
n4. Show Name\n5. Show memo.\n6. Bye :)" ; 循环开始
| : 0x00400834 call sym.imp.puts
; int puts(const char *s)
| : 0x00400839 lea rax, [local_18h]
| : 0x0040083d mov rsi, rax
| : 0x00400840 mov edi, 0x400d3c
| : 0x00400845 mov eax, 0
| : 0x0040084a call sym.imp.__isoc99_scanf
; 读入选项到 [local_18h]
| : 0x0040084f call sym.imp.getchar
; int getchar(void)
1169
6.1.17 pwn SECCONCTF2016 jmper
| : 0x00400854 mov eax, dword [local_18h]
| : 0x00400857 cmp eax, 1
; 1
| ,== 0x00400889 mov edi, 0x30
; '0' ; 48
| |: 0x0040088e call sym.imp.malloc
; malloc(0x30) ; 分配一个 student 结构
| |: 0x00400893 mov qword [local_8h], rax
; 将 student 地址放到 [local_8h]
| |: 0x00400897 mov eax, dword [obj.student_num]
; [0x602028:4]=0
| |: 0x0040089d movsxd rdx, eax
| |: 0x004008a0 mov rax, qword [local_8h]
| |: 0x004008a4 mov qword [rax], rdx
; 将 student_num 作为该 student->id
| |: 0x004008a7 mov edi, 0x20
; 32
| |: 0x004008ac call sym.imp.malloc
; malloc(0x20) ; 分配一块空间作为 name
| |: 0x004008b1 mov rdx, rax
| |: 0x004008b4 mov rax, qword [local_8h]
1170
6.1.17 pwn SECCONCTF2016 jmper
| |: 0x004008b8 mov qword [rax + 0x28], rdx
; 将 name 的地址放到 student->name
| |: 0x004008bc mov rax, qword [obj.my_class]
; [0x602030:8]=0
| |: 0x004008c3 mov edx, dword [obj.student_num]
; [0x602028:4]=0
| |: 0x004008c9 movsxd rdx, edx
| |: 0x004008cc mov rcx, qword [local_8h]
| |: 0x004008d0 mov qword [rax + rdx*8],
; 将新分配的 student 地址放到 my_class[id]
| |: 0x004008d4 mov eax, dword [obj.student_num]
; [0x602028:4]=0
| |: 0x004008da add eax, 1
; student_num + 1
| |: 0x004008dd mov dword [obj.student_num], eax
; [0x602028:4]=0 ; 写回 student_num
| ,=== 0x004008e8 mov eax, dword [local_18h]
| | : 0x004008eb cmp eax, 2
; 2
| |,== 0x00400937 mov edi, str.Invalid_ID.
; 0x400d64 ; "Invalid ID."
| | ||: 0x0040093c call sym.imp.puts
; int puts(const char *s)
| | ||: 0x00400941 mov edi, 1
| | ||: 0x00400946 call sym.imp.exit
; void exit(int status)
| | ||: ; JMP XREF from 0x00400935 (sym.f)
| `-----> 0x0040094b mov esi, str.Input_name:
; 0x400d70 ; "Input name:"
| ||: 0x00400950 mov edi, 0x400d61
| ||: 0x00400955 mov eax, 0
| ||: 0x0040095a call sym.imp.printf
; int printf(const char *format)
| ||: 0x0040095f mov rax, qword [obj.my_class]
; [0x602030:8]=0
| ||: 0x00400966 mov edx, dword [local_1ch]
| ||: 0x00400969 movsxd rdx, edx
| ||: 0x0040096c mov rax, qword [rax + rdx*8]
; 取出 my_class[id]
| ||: 0x00400970 mov rax, qword [rax + 0x28]
; [0x28:8]=-1 ; 取出 my_class[id]->name
| ||: 0x00400974 mov qword [local_10h], rax
; 放到 [local_10h]
| ||: 0x00400978 mov dword [local_14h], 0
; 循环计数 i 初始化为 0
| ,==== 0x00400981 call sym.imp.getchar
1172
6.1.17 pwn SECCONCTF2016 jmper
; int getchar(void)
| :|||: 0x00400986 mov byte [local_1dh], al
; 读入一个字节到 [local_1dh]
| :|||: 0x00400989 cmp byte [local_1dh], 0xa
; [0xa:1]=255 ; 10
| ,====== 0x00400995 mov rax, qword [local_10h]
| | :|||: 0x00400999 movzx edx, byte [local_1dh]
| | :|||: 0x0040099d mov byte [rax], dl
; 写入该字节写入 name
| | :|||: 0x0040099f add qword [local_10h], 1
; name = name + 1
| | :|||: 0x004009a4 add dword [local_14h], 1
; i = i + 1
| | :|||: ; JMP XREF from 0x0040097f (sym.f)
| | :`----> 0x004009a8 cmp dword [local_14h], 0x20
; [0x20:4]=-1 ; 32
| | `===== 0x004009b3 mov eax, dword [local_18h]
| | || : 0x004009b6 cmp eax, 3
; 3
| | ||,== 0x00400a02 mov edi, str.Invalid_ID.
; 0x400d64 ; "Invalid ID."
| || |||: 0x00400a07 call sym.imp.puts
; int puts(const char *s)
| || |||: 0x00400a0c mov edi, 1
| || |||: 0x00400a11 call sym.imp.exit
; void exit(int status)
| || |||: ; JMP XREF from 0x00400a00 (sym.f)
| |`------> 0x00400a16 mov esi, str.Input_memo:
; 0x400d7c ; "Input memo:"
| | |||: 0x00400a1b mov edi, 0x400d61
| | |||: 0x00400a20 mov eax, 0
| | |||: 0x00400a25 call sym.imp.printf
; int printf(const char *format)
| | |||: 0x00400a2a mov rax, qword [obj.my_class]
; [0x602030:8]=0
| | |||: 0x00400a31 mov edx, dword [local_1ch]
| | |||: 0x00400a34 movsxd rdx, edx
| | |||: 0x00400a37 mov rax, qword [rax + rdx*8]
; 取出 my_class[id]
| | |||: 0x00400a3b add rax, 8
; 取出 my_class[id]->memo
1174
6.1.17 pwn SECCONCTF2016 jmper
| | |||: 0x00400a3f mov qword [local_10h], rax
; 放到 [local_10h]
| | |||: 0x00400a43 mov dword [local_14h], 0
; 循环计数 i，初始化为 0
| | ,===== 0x00400a4c call sym.imp.getchar
; int getchar(void)
| |:||||: 0x00400a51 mov byte [local_1dh], al
| |:||||: 0x00400a54 cmp byte [local_1dh], 0xa
; [0xa:1]=255 ; 10
| ======== 0x00400a60 mov rax, qword [local_10h]
| |:||||: 0x00400a64 movzx edx, byte [local_1dh]
| |:||||: 0x00400a68 mov byte [rax], dl
| |:||||: 0x00400a6a add qword [local_10h], 1
| |:||||: 0x00400a6f add dword [local_14h], 1
| |:||||: ; JMP XREF from 0x00400a4a (sym.f)
| |:`-----> 0x00400a73 cmp dword [local_14h], 0x20
; [0x20:4]=-1 ; 32
| |`====== 0x00400a7e mov eax, dword [local_18h]
| | ||| : 0x00400a81 cmp eax, 4
; 4
| | |||,==< 0x00400a84 jne 0x400b0d
| | ||||: 0x00400a8a mov esi, 0x400d5d
; 选项 4
| | ||||: 0x00400a8f mov edi, 0x400d61
| | ||||: 0x00400a94 mov eax, 0
| | ||||: 0x00400a99 call sym.imp.printf
; int printf(const char *format)
| | ||||: 0x00400a9e lea rax, [local_1ch]
1175
6.1.17 pwn SECCONCTF2016 jmper
| | ||||: 0x00400aa2 mov rsi, rax
| | ||||: 0x00400aa5 mov edi, 0x400d3c
| | ||||: 0x00400aaa mov eax, 0
| | ||||: 0x00400aaf call sym.imp.__isoc99_scanf
; 读入 id 到 [local_1ch]
| | ||||: 0x00400ab4 call sym.imp.getchar
; int getchar(void)
| | ||||: 0x00400ab9 mov edx, dword [local_1ch]
| | ||||: 0x00400abc mov eax, dword [obj.student_num]
; [0x602028:4]=0
| | ||||: 0x00400ac2 cmp edx, eax
; 判断 id 是否有效
| |,======< 0x00400ac4 jge 0x400acd
; 无效时跳转
| ||||||: 0x00400ac6 mov eax, dword [local_1ch]
| ||||||: 0x00400ac9 test eax, eax
; 根据 id 设置符号位
| ========< 0x00400acb jns 0x400ae1
; 符号位为 0 时跳转，即 id 大于等于 0