27-61
8-11
22-27
42-53
–
–
–
13-21
28-41
55-160
–
–
12
–
54
–
CRC-12:
0xC07 = (x+1)(x11 +x2 +1)‡
[Ottoson01]
1074-2035
221-1073
54-220
0xB75 = (x2+x+1)‡(x3+x2+1)‡(x7 +x5 +x4 +x3+1)‡
new
2036-2048
–
–
13-2036
8-12;
23-2036
8-22;
29-1012
8-12;18-26;
1013-2036
8-26;
132-1012
12-2048
8-11
8-27;
54-2048
8-53;
161-2048
8-2048
8-53;
2036-2048
8-2035
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:55 UTC from IEEE Xplore.  Restrictions apply. 
CRC
Size
(Bits) Nickname Polynomial
Table 4 continued.
Performance compared to bound at lengths given
Source
new
new
new
0x10B7 = (x+1)(x+1)(x11 +x9 +x7 +x6 +x5 +x +1)
0x12A5 = (x2+x+1)‡(x11 +x10 +x6 +x5 +x4 +x2 +1)
0x1909 = (x+1)(x12 +x8 +x7 +x6 +x5 +x4 +1)
0x102A = (x4+x3+x2+x+1)(x9+x8+x4+x3+x2+x+1)‡
new
0x2371 = (x+1)(x+1)(x+1)(x11+x10+x6+x5+x4+x2+1) new
0x28A9 = (x14 +x12 +x8 +x6 +x4 +x +1)‡
new
0x372B = (x+1)(x+1)(x12+x11+x10+x7+x5+x4+x3+x +1)‡
0x212D = (x7 +x6 +x3 +x +1)‡(x7 +x6 +x5 +x4 +1)‡
new
new
Within 1% of
bound
10-11
12-13
44-52
363-2048
11
13-14
Within 2x of
bound
8-9
–
21-43
171-362
10
Same HD, but
more than 2x
bound
–
53-56
13, 14-20
53-170
8-9
12; 136-317
114-135
51-57
30-50; 304-2048
14-29; 114-303
101-113
20-21; 58-100
14-19
DARC-14:
0x21E8 = (x4 +x3 +x2 +x +1)(x10 +x9 +x4 +x +1)‡
0x2402 = (x+1)(x13 + x12 + x11 +x +1)‡
0x630B = (x+1)(x14 +x9 +x3 +x2 +1)‡
new
[ETSI02]
new
0x5BD5 = (x3+x2+1)‡(x12+x11+x8+x6+x5+x3+x2+x+1) new
1940-2048
–
12
16
227-1939
540-2048
114-226
114-539
10-11; 732-2048
8-9; 137-731
14-15
0x573A = (x+1)(x14+x13+x10+x8+x7+x6+x4+x+1)
new
78; 98-114
49-77; 79-97
CAN:
0x62CC = (x+1)(x7 +x3 +1)‡(x7 +x3 +x2 +x +1)‡
[Bosch91]
64-112
49-63
0x6A8D = (x15 +x14 +x12 +x10 +x8 +x4 +x3 +x +1)
new
123-136
115-122
13
17-48
17-48
–
Worse HD
than bound
12-2048
8-11; 14-52;
57-2048
8-12;
53-2048
8-52
12-2048
8-11; 15-113;
318-2048
8-13;
58-113;
8-13; 22-57;
114-2048
8-113
8-113
13-136;
8-12;
17-2048
8-16;
115-2048
8-16;
113-2048
8-114;
137-2048
8-2048
8-2048
16-19;
52-241
9-15;
20-241;
364-2048
8-19;
136-2048
9-19;
36-135;
242-2048
8-241
8-241
8-241
9-19; 68-241
10-19;
113-2048
13
13
13
13
14
14
14
14
14
14
15
15
15
15
15
15
15
15
16
16
16
16
16
16
16
16
16
16
16
0x4976=(x4+x3+x2+x+1)(x11+x10+x8+x7+x6+x4 +x2+x+1)‡
new
0x4001 = (x15 +x +1)‡
[Gilmore02]
0x740A=(x3+x2+1)‡(x6+x+1)‡(x6+x4+x2+x+1) [MPT1327]
0x8FDB =
(x+1)(x15+x14+x13+x12+x10+x8+x6+x5+x3+x2+1)‡
new
1771-2048
441-1770
17-18; 137-440
8-16; 19-136
–
–
14-15
–
–
–
–
12-13; 42-51;
913-2048
8-11; 20-41;
242-912
0x968B = (x2+x+1)‡(x14 +x13 +x9 +x7 +x5 +x4 +1)
new
19
16-18; 245-363
8; 242-244
0xC86C = (x+1)(x15+x11+x10+x9+x8+x7 +x5+x4+x2+x+1)
[Baicheva00]
110-111; 113-135
39-109; 112
20-38
C3
0xAC9A = (x16+x14+x12+x11+x8+x5+x4+x2+1)
[Castagnoli90]
219-241
33-35; 136-218
8; 20-32
0xBAAD = (x3+x2+1)‡(x6+x5+x2+x+1)‡(x7+x3+1)‡
new
0xD3E9 = (x3+x2+1)‡(x6+x5+x2+x+1)‡(x7+x6+x5+x4+1)‡
[Kazakov01]
[Press92]
[USB00]
0xA001 = (x+1)(x15 +x14 +1)‡
0xC002 = (x+1)(x15 + x + 1)‡
0xD04B = (x+1)(x+1)
(x14+x13+x12+x10+x8+x6 +x5+x4+x3+x+1)‡ [Ottoson01]
CRC-16:
ANSI-16:
IEC-16:
0xADC9=(x+1)(x+1)(x7+x6+x3+x+1)‡
(x7+x6+x5+x4+x3+x2+1)‡
[Baicheva00]
CCITT-16:
0x8810 = (x+1)(x15+x14+x13+x12+x4+x3+x2+x+1)‡
[ETSI02]
–
–
–
–
–
1578-2048
242-1577
20
8-19; 21-241
1270-2048
256-1269
242-255
1270-2048
1270-2048
39-67;
1146-2048
242-1269
242-1269
8; 20-38;
242-1145
39-112
8-9; 20-38
1015-2048
242-1014
8-241
Notes:
All polynomials are represented as a product of irreducible factors
‡
All polynomial factors marked with (
) are primitive.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:55 UTC from IEEE Xplore.  Restrictions apply. 
data array. Unfortunately, 0x68 is dominated by six other
polynomials and is generally inferior to 0x48.
Similarly [Jaffer03] indicates that various web-based
sources are evenly split between 0xC06 and 0xC07 as be-
ing the “standard” CRC-12 polynomial. Numerical
Recipes states that CRC-12 is 0xC05 [Press92]. One can
speculate that these are also one-bit transcription errors.
6. Conclusions
New embedded networks that use CRCs are continually
being created. Unfortunately, the usual practice of select-
ing a published CRC polynomial under the presumption
that it is “good” runs into trouble because some published
values perform quite poorly. Moreover, even if a good
published polynomial is available, there is generally no
published guidance on what range of data word lengths it is
good for nor, for that matter, quantitative data to help dis-
tinguish that good polynomial from any competing pub-
lished or standardized “bad” polynomials.
This paper presents the first exhaustive survey of all
CRC polynomials from 3 bits to 15 bits, and discusses
16-bit polynomials as well. A methodology for selecting
generically “good” CRC polynomials is based on achiev-
ing maximum Hamming Distance for the longest possible
data word sizes and other performance considerations.
Our tables of good polynomials given should enable prac-
titioners to use quantitative information in selecting effec-
tive polynomials for embedded computing error detection
applications for data word sizes up to 2048 bits.
7. Acknowledgments
Thanks to Kobey DeVale for her help in early explora-
tions. This work was supported in part by grants from
Bombardier Transportation, the General Motors Collabo-
rative Laboratory at Carnegie Mellon University, and the
Pennsylvania Infrastructure Technology Alliance.
8. References
[Baicheva98] Baicheva, T., S. Dodunekov & P. Kazakov, “On
the cyclic redundancy-check codes with 8-bit redun-
dancy,” Computer Communications, vol. 21, 1998, pp.
1030-1033.
[Baicheva00] Baicheva, T., S. Dodunekov & P. Kazakov, “Unde-
tected error probability performance of cyclic redun-
dancy-check codes of 16-bit redundancy,” IEEE Proc.
Comms., Vol. 147, No. 5, Oct. 2000, pp. 253-256.
[Bosch91] Bosch, CAN Specification, Version 2, 1991.
[Castagnoli93] Castagnoli, G., S. Braeuer & M. Herrman,
"Optimization of Cyclic Redundancy-Check Codes with
24 and 32 Parity Bits", IEEE Trans. on Communications,
Vol. 41, No. 6, June 1993.
[Gilmore02] Gilmore, J., “Parallel CRC Equation Generator”
(source code), accessed on October 22, 2002 at:
http://www.physics.ohio-state.edu/~cms/crc_generator
[ETSI02]
ETSI, Radio broadcasting systems; DAta Radio
Channel
infotainment
forwarding and teledistribution, ETSI EN 300 751, V1.2.1,
October 2002.
(DARC); System for wireless
[Funk88] Funk, G., "Performance comparison of standard frame
transmission formats FT1.2 and FT2 specified by IEC
TC57", ntzArchiv Bd. 10, 1988, pp. 217-221.
[G704]
International Telecommunication Union, General
Aspects of Digital Transmission Systems: Synchronous
frame structures used at 1544, 6312, 2048, 8488 and 44
736 kbit/s hierarchical
levels, ITU-T Recommendation
G.704 (previously “CCITT Recommendation”), July 1995.
[G832] International Telecommunication Union, Transport of
SDH Elements on PDH Networks: Frame and Multiplexing
Structures, ITU-T Recommendation G.832 (previously
“CCITT Recommendation”), November 1993.
[Jaffer03]
Jaffer, A.,
“Mathematical packages:
cyclic
checksum,” accessed September 27, 2003 at
http://www.swiss.ai.mit.edu/~jaffer/slib_4.html#IDX522
[Kazakov01] Kazakov, P., “Fast calculation of the number of
minimum-weight words of CRC codes,” IEEE Trans. In-
formation Theory, (47) 3, March 2001, pp. 1190-1195.
[Koopman01] Koopman, P. & T. Chakravarty, “Analysis of the
Train Communication Network Protocol Error Detection
Capabilities,” Feb. 25, 2001, http://www.tsd.org/papers/
[Koopman02] Koopman, P., "32-bit cyclic redundancy codes
for Internet applications," Intl. Conf. Dependable Systems
and Networks (DSN), Washington DC, July 2002, pp.
459-468.
[Lin83] Lin, Shu & D. Costello, Error Control Coding,
Prentice-Hall, 1983.
[MPT1327] MX.com, Error detection and correction of
MPT1327 formatted messages using MX429A or MX809
devices, application note MPT1327, 1999.
[Ottosson01] Ottosson, T., T. Eriksson, P. Frenger, T. Ringström
& J. Samuelsson, “crc.cpp,” version 1.8, May 22, 2003, at:
http://itpp.sourceforge.net/crc_8cpp-source.html
[Peterson72] Peterson, W. & E. Weldon, Error-Correcting
Codes, MIT Press, Second Edition, 1972.
[Press92] Press, W., S. Teukolsky, W. Vetterling, & B. Flannery,
Numerical Recipes in C (2nd ed.), Cambridge Press, 2002.
[RFC3095] Bormann, C. (ed.), RFC 3095 - RObust Header
Compression (ROHC): Framework and four profiles: RTP,
UDP, ESP, and uncompressed, 2001, accessed at:
http://www.faqs.org/rfcs/rfc3095.html
[Smbus00] SBS Implementers Forum, System Management Bus
(SMBus) Specification, Version 2.0, August 3, 2000.
[Tanenbaum96] Tanenbaum, A., Computer Networks (3rd. Ed.),
Prentice Hall, 1996.
[USB00] Universal Serial Bus Specification, Rev. 2.0, 2000.
[Wells99] Wells, R., Applied coding and information theory for
engineers, Prentice-Hall, 1999.
[Whitfield01] Whitfield, H., “XFCNs for Cyclic Redundancy
Check Calculations,” April 24, 2001, accessed at
http://homepages.
cs.ncl.ac.uk/harry.whitfield/home.formal/CRCs.html
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:55 UTC from IEEE Xplore.  Restrictions apply.