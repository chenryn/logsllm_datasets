User: How to use iptables command in Linux system to filter network connection and discard useless data packets?
Assistant: The steps are as follows: 1. Open the terminal and log in as the root user. 2. Enter the following command in the terminal to view the current iptables rules. ``` iptables -L ``` 3. If there is no iptables rule in the current system, you can use the following command to create a new iptables rule. ``` iptables -P INPUT DROP iptables -P OUTPUT DROP iptables -P FORWARD DROP ``` This will cause all incoming, outgoing, and forwarded traffic to be dropped. This is because by default, iptables rules allow all packets to pass. 4. Next, you can add more specific rules to grant certain traffic through. For example, if you want to allow connections via SSH, you can use the following command to allow all SSH connections from a specified IP address. ``` iptables -A INPUT -p tcp -s ip address --dport 22 -j ACCEPT ``` where ip address is the IP address you want to allow SSH connections to. 5. If you want to prohibit a certain IP address from accessing your server, you can use the following command to add a custom rule. ``` iptables -A INPUT -s IP address -j DROP ``` 6. If you want to allow a certain port to pass traffic from all IP addresses, you can use the following command to add a rule. ``` iptables -A INPUT -p tcp --dport port number -j ACCEPT ``` 7. If you do not want to use iptables as root user, please use the following command in terminal to create a new iptables user. ``` adduser iptables ``` 8. Run the terminal under the newly created iptables user, and use the following command to use iptables. ``` iptables -L ``` This will display the current list of iptables rules. When reviewing iptables rules and adding new ones, make sure you know what each rule means, and make a backup of your iptables rules before attempting to apply any rules. Because some wrong rules may affect the normal communication of the server.