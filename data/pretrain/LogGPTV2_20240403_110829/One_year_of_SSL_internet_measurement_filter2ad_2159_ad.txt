12 %
16 %
1 %
0 %
21 %
0 %
Table 9: Answers to the TLS12 stimulus.
The Alert line shows the proportion of servers that refuse
to negotiate and assert this choice. This should happen if
none of the proposed ciphersuites is acceptable. Theoreti-
cally, this should not happen with a protocol version, since
the servers of the sample groups accepted TLSv1.0 and could
have answered with this version. Yet, our TLS12 stimu-
lus did not contain all the suites of the NoExt2/FF/SSL2+
ClientHellos so it is legitimate for a server to accept the
latter stimuli but send an Alert to the TLS12 message.
The last two lines represent servers that do not respond
correctly to the stimulus. As they correctly answered three
other stimuli, we would have expected an Alert message to
signal the negotiation failure. We call such servers DHE-
, EC- or TLSv1.2-intolerant, and their behaviour does not
conform to the standards.
For each case (DHE, EC, TLSv1.2), the proportion
of intolerant servers is very important: about 20 %
globally, more than 12 % for EV servers.
Another disappointing fact is the very low pro-
portions of servers supporting DHE and EC suites,
especially for EV hosts (13% for DHE, 5 % for EC).
Finally, let’s consider the proportion of the sample groups
answering correctly to a SSLv2 ServerHello when the stim-
ulus is a pure SSLv2 ClientHello (SSL2 stimulus). Table 10
shows the answers received. We did not expect TLS servers
to behave correctly, since SSLv2 uses diﬀerent messages and
is now deprecated. In fact, we would have expected fewer
servers to accept negotiating a SSLv2 session.
Many TLS servers are still fully compatible with
SSLv2, whereas they should not negotiate the obso-
lete version of the protocol.
Compatible Handshake
Alert
Non-TLS answer
Incompatible Handshake
Trusted
TLS
EV
40 % 27 % 8 %
2 %
1 %
91 %
58 %
0 %
0 %
2 %
71 %
0 %
Table 10: Answers to the SSL2 stimulus.
7. ANALYSIS OF CHAIN QUALITY
In this section, we only consider four campaigns (NoExt1,
EFF-1, EFF-2 and NoExt2) which correspond to diﬀerent
dates (July 2010, August 2010, December 2010 and July
2011). The results of this section were similar for the three
standard July 2011 stimuli (NoExt2, FF, SSL2+). For the
four campaigns, trusted hosts represent around 35 % of the
TLS hosts (about 4 million) and EV servers represent 1 %
of the TLS hosts (100 to 140,000). 10.2 million unique cer-
tiﬁcates were analysed, that were gathered from 10.9 million
unique certiﬁcate chains.
The certiﬁcate chains we study are the chains built by
our veriﬁcation program, i.e. the best certiﬁcate chain we
could build from the certiﬁcates sent and all the certiﬁcates
gathered. We prefer trusted chains over non-trusted chains,
and chose RFC-compliant chains (R) over complete but un-
ordered chains (C) over transvalid chains (T). The partition
of certiﬁcate chains built along these latter categories are
given in table 11. It is interesting to notice that EV hosts
often present unordered or even transvalid chains17, which
leads to incompatibilities with some TLS stacks18. Gener-
ally, servers send 2 or 3 certiﬁcates and the certiﬁcate chains
we build also contain the same number of certiﬁcates. How-
ever, some servers send more certiﬁcates. The maximum we
saw was 150 in EFF-2 and corresponded to a trusted server.
More than 40 % TLS hosts do not send RFC-
compliant chains. The values for EV hosts are even
worse (around 85 %). These observations are stable
from 2010 to 2011.
2010-08
2010-12
TLS
C : 8 %
T : 3 %
2010-07
2011-07
R : 60 % R : 61 % R : 59 % R : 54 %
C : 10 % C : 10 %
C : 9 %
T : 4 %
T : 6 %
I : 27 % I : 28 % I : 25 % I : 30 %
R : 69 % R : 71 % R : 67 % R : 62 %
Trusted C : 21 % C : 19 % C : 21 % C : 24 %
T : 10 % T : 10 % T : 12 % T : 14 %
R : 11 % R : 13 % R : 16 % R : 12 %
C : 78 % C : 76 % C : 74 % C : 83 %
T : 11 % T : 11 % T : 10 % T : 5 %
T : 6 %
EV
Table 11: Partition of the certiﬁcate chains built
in (R)FC-compliant, (C)omplete although not RFC-
compliant and (T)ransvalid chains.
(I)ncomplete
chains are chains we could not build completely.
RSA is the main algorithm used in the certiﬁcates sent:
the proportion of certiﬁcate chains containing only RSA keys
17As mentioned earlier, transvalid chains are chain missing
intermediate certiﬁcate authorities, the root certiﬁcate being
optional in the RFC.
18For example, the Java TLS implementation can not vali-
date such chains.
18
is higher than 99 % for TLS hosts, and reaches 100 % for
trusted and EV hosts. We thus would like to assess the cryp-
tographic robustness of such RSA certiﬁcate chains. The
criterium to measure RSA key robustness is the minimum
RSA key length found in the certiﬁcate chain. The statis-
tics for this parameter are given in table 12. It appears that
mean RSA key lengths are increasing with time. The 84 %
1024-bit and 13 % 2048-bit chains measured in 2010 turn
into 52 % and 48 % respectively. The shift is even better
for Trusted hosts, since we have 86 % of 1024 bit chains and
13 % of 2048 bit chains in July 2010 that have become 52 %
and 48 % in July 2011. In 2011, all the EV servers present
2048 bit robust chains, which can be explained by the EV
guidelines [5] that specify this as a minimum key size for EV
certiﬁcates from December 2010.
2010-07
2010-08
2010-12
2011-07
TLS
Trusted
EV
1147
1149
1950
1135
1133
1897
1197
1220
2042
1303
1514
2048
Table 12: Mean RSA robustness of the chains.
This table does not include extreme values:
few servers
present huge RSA keys (up to 16384 bit long) or very short
keys (512 or 768 bits). Such weak RSA keys represent 3 % of
TLS hosts in the ﬁrst two campaigns and less than 2 % for
the last two. What is more serious is that 512 and 768 bit
certiﬁcates are present in 2 % of trusted hosts in July 2010.
Fortunately, this number has dropped to less than 0.1 %
(less than 2,500 servers) in July 2011.
Finally, the last parameter we study is the validity period
of the chain (i.e. the intersection of the validity periods of
the certiﬁcates in the chain). The mean values are repre-
sented in table 13. As expected, trusted and EV validity
periods are reasonable (mostly one or two years). However
TLS hosts do contain anomalies (chains that are never valid,
or valid until the year 9999), that are hopefully skimmed by
the trusted ﬁlter. Another trend we observe is that the typi-
cal validity of EV certs has moved from 365 days to 730 days
between July 2010 and December 2011.
2010-07
2010-08
2010-12
2011-07
TLS
Trusted
EV
2561
701
551
5020
728
555
2328
728
612
2659
744
652
As explained in section 3, the EFF performed two similar
campaigns. They presented their results about the certiﬁ-
cates gathered in 2010 [13, 14]. Even if the global method-
ology resembles ours (enumerating TCP/443 open ports on
the IPv4 space), they used standard tools to ﬁnd TLS hosts
(nmap) whereas we developped speciﬁc tools to fully random-
ize the IPv4 space. Besides, the set of IPs initally probed
was not exactly the same: they used a restricted list of /8
preﬁxes following the IANA information. Additionally, in
their second measure (EFF-2), they did not enumerate the
TCP/443 hosts again and used the August 2010 list instead.
Another main diﬀerence in our approaches is the stimulus:
the EFF sent a SSLv2 ClientHello whereas we tried to
obtain more information by sending diﬀerent stimuli. Con-
trary to this study, our work does not focus exclusively on
the certiﬁcate chains sent by trusted hosts; but we broaden
the criteria to assess the quality of servers’ answers and to
show trends by focusing on diﬀerent subsets of hosts.
In 2010, Ivan Ristic from Qualys SSL Labs presented an-
other SSL survey focusing this time on a DNS enumeration
of HTTPS hosts [26]. He established several connections
with each of the servers tested. His goal was to assess the
quality of TLS answers from servers reachable via a DNS
hostname. His results concerning protocol support match
ours: SSLv2 is still widely supported, at least with a compat-
ible ClientHello, while TLSv1.1 and TLSv1.2 are virtually
inexistant. Our results also concur with his ﬁndings about
the quality of the Certificate message sent by servers that
are not strictly RFC-compliant. Like SSL Labs, we work
on more criteria than just the certiﬁcates, but the diﬀerence
in host enumeration makes our work complement theirs. In
addition, focusing on the EV hosts allows us to present ad-
ditionnal results. Since April 2012, SSL Labs have launched
SSL Pulse, a dashboard providing daily measures for 200,000
HTTPS sites, which gives a partial but interesting insight
on trends in SSL deployements.
Finally, in 2011, Ralph Holtz et al.
from the University
of M¨unchen gathered and studied diﬀerent data sets: ac-
tive probing of popular sites, passive monitoring on a 10Gb
link and the EFF campaigns [18]. They provide a thorough
analysis of the certiﬁcates received for each of the campaigns
studied. One of their results is to compare the certiﬁcates
received by clients from diﬀerent source addresses and to
spot suspicious certiﬁcates from these sets. Using real world
traﬃc is a very interesting source of information and once
again, it is complementary to full IPv4 host enumerations.
Table 13: Mean validity period (in days).
9. CONCLUSION
The chain validity period and the key robustness
are well understood parameters that have improved
over time. They have reached acceptable values in
the EV subset: at least 2048 bit RSA keys, 1- or
2-year validity. This is fortunate, as EV was designed
speciﬁcally to take these parameters into account.
8. RELATED WORK
Several projects aiming at understanding the SSL land-
scape have performed similar measures on the internet. We
discuss three of them: two which were presented at security
conferences (BlackHat, DefCon and CCC) and one covered
in an academic paper.
From July 2010 to July 2011, we gathered data from full
IPv4 HTTPS host enumerations, evaluated the quality of
TLS answers and described trends in time.
We found that some well studied parameters, like RSA key
sizes, are improving, but most of the criteria we analysed are
not well taken into account, even if some parameters have
improved in a year. For example, a lot of servers are still
intolerant to some ciphersuites or to recent TLS versions.
The quality of the certiﬁcate chains sent by servers is also
not acceptable, since many HTTPS hosts send Certificate
messages that do not comply to the standard, which makes
some TLS stacks fail.
There is a pressing need for a quality label representing the
overall quality of TLS sessions (server conﬁguration, imple-
mentation and cryptographic parameters). The only wide-
19
spread existing label is Extended Validation, which is visu-
ally recognisable in web browsers. However, EV only deals
with the format of the certiﬁcate issued to servers, and does
not take into account the other parameters. In fact, global
TLS statistics were even better than EV statistics for some
parameters. One way of improving the SSL landscape would
thus be to create a new label or to extend EV constraints to
cover all the criteria relevant to security: support for recent
TLS versions and for most secure ciphersuites, preference
for PFS suites, strict RFC-compliance, support of known
security extensions.
Recent initiatives like the EFF Decentralized SSL Obser-
vatory (passive monitoring through a browser plugin) or SSL
Labs’ SSL Pulse should help monitoring parts of the SSL
landscape, as the EFF calls it.
It may also be useful to
browse the full IPv4 space again to compare global views
of the SSLiverse over time. Indeed, using only DNS scans
or passive monitoring does not allow for really comparable
statistics.
Further work could also include new stimuli to reﬁne the
data obtained. We could study other parameters like the cer-
tiﬁcate revocation methods. To improve our notion of trust,
it would be useful to take other certiﬁcate trust stores into
account (e.g. Internet Explorer, Opera). Finally, what we
noticed was that many servers did not behave like common
known TLS stacks, so it would be interesting to investigate
their answers to try and ﬁngerprint the stacks encountered.
Acknowledgment
The work in this paper has been partially sponsored by
the EC 7th Framework Programme as part of the ICT Vis-
Sense project (grant no. 257497). The authors would like
to thank the Applied and Fundamental Research Division
of the French Network and Information Security Agency
(ANSSI) for their comments and suggestions.
10. REFERENCES
[1] T. Benzel. The science of cyber security
experimentation: the DETER project. In
Robert H’obbes’ Zakon, John P. McDermott, and
Michael E. Locasto, editors, ACSAC, pages 137–148.
ACM, 2011.
[2] S. Blake-Wilson, N. Bolyard, V. Gupta, C. Hawk, and
B. Moeller. Elliptic Curve Cryptography (ECC)
Cipher Suites for Transport Layer Security (TLS).
RFC 4492 (Informational), May 2006.
[3] S. Blake-Wilson, M. Nystrom, D. Hopwood,
J. Mikkelsen, and T. Wright. Transport Layer Security
(TLS) Extensions. RFC 3546 (Proposed Standard),
June 2003.
[4] D. Bleichenbacher. Chosen Ciphertext Attacks
Against Protocols Based on the RSA Encryption
Standard PKCS #1. In CRYPTO, 1998.
[5] CA/Browser Forum. EV SSL Certiﬁcate Guidelines
version 1.3, 2010.
[6] Comodo. Report of Incident - Comodo detected and
thwarted an intrusion on 26-MAR-2011, 2011.
[7] D. Cooper, S. Santesson, S. Farrell, S. Boeyen,
R. Housley, and W. Polk. Internet X.509 Public Key
Infrastructure Certiﬁcate and Certiﬁcate Revocation
List (CRL) Proﬁle. RFC 5280 (Proposed Standard),
May 2008.
[8] Debian. DSA-1571-1 openssl – predictable random
number generator, 2008.
[9] T. Dierks and C. Allen. The TLS Protocol Version
1.0. RFC 2246 (Proposed Standard), January 1999.
[10] T. Dierks and E. Rescorla. The Transport Layer
Security (TLS) Protocol Version 1.1. RFC 4346
(Proposed Standard), April 2006.
[11] T. Dierks and E. Rescorla. The Transport Layer
Security (TLS) Protocol Version 1.2. RFC 5246
(Proposed Standard), August 2008.
[12] T. Duong and J. Rizzo. BEAST: Surprising crypto
attack against HTTPS, 2011.
[13] P. Eckersley and J. Burns. An Observatory for the
SSLiverse, Talk at Defcon 18, 2010.
[14] P. Eckersley and J. Burns. Is the SSLiverse a safe
place?, Talk at 27C3, 2010.
[15] Electronic Frontier Foundation. Cracking DES.
Secrets of Encryption Research, Wiretap Politics &
Chip Design. O’Reilly, 1998.
[16] A. Freier, P. Karlton, and P. Kocher. The SSL
Protocol Version 3.0, 1996.
[17] K. Hickman. The SSL Protocol, 1994-1995.
[18] R. Holz, L. Braun, N. Kammenhuber, and G. Carle.
The SSL landscape: a thorough analysis of the X.509
PKI using active and passive measurements. In
IMC’11, 2011.
[19] A. Langley. Unfortunate current practices for HTTP
over TLS. Internet Draft, 2011.
[20] A. Lenstra, J. Hughes, M. Augier, J. Bos,
T. Kleinjung, and C. Wachter. Ron was wrong, Whit
is right. Cryptology ePrint Archive, Report 2012/064,
2012.
[21] M. Marlinspike. Internet Explorer SSL Vulnerability,
2002.
[22] M. Marlinspike. More Tricks For Defeating SSL In
Practice, 2009.
[23] B. Moeller. Security of CBC Ciphersuites in SSL/TLS:
Problems and Countermeasures, 2002-2004.
[24] M. Ray. Authentication gap in TLS renegotiation,
2009.
[25] E. Rescorla, M. Ray, S. Dispensa, and N. Oskov.
Transport Layer Security (TLS) Renegotiation
Indication Extension. RFC 5746 (Proposed Standard),
February 2010.
[26] I. Ristic. Internet SSL Survey, Talk at BlackHat 2010,
2010.
[27] J. Salowey, H. Zhou, P. Eronen, and H. Tschofenig.
Transport Layer Security (TLS) Session Resumption
without Server-Side State. RFC 4507 (Proposed
Standard), May 2006.
[28] M. Stevens, A. Sotirov, A. Lenstra J. Appelbaum,
D. Molnar, D.A. Osvik, and B.D. Weger. Short
chosen-preﬁx collisions for MD5 and the creation of a
rogue CA certiﬁcate. In Crypto 2009, LNCS 5677,
pages 55–69, 2009.
[29] S. Turner and T. Polk. Prohibiting Secure Sockets
Layer (SSL) Version 2.0. RFC 6176 (Proposed
Standard), March 2011.
[30] Vasco. DigiNotar reports security incident, 2011.
20