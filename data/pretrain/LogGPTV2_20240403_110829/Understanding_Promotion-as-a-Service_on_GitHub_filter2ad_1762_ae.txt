promised to pass our request on to the appropriate team for con-
sideration.
Limitations. We develop our detection method by analyzing be-
havior patterns and then used this method to perform a large-scale
detection. However, if adversaries knew our detection algorithms
in advance, they would have adjusted their behavior patterns for
evasion. For example, they can conduct more common activities
such as commit, push, and pull, just like normal users do. However,
these actions would increase the cost for maintaining these promo-
tion accounts. An alternative to avoid being detected is to reduce
the frequency of starring and forking, but this would also increase
the cost of promotion service providers and decrease their profit
prominently. Another evasion method may fork or star other popu-
lar repositories during their promotion service. This can confuse
our detection due to the addition of more actions that cannot be
identified in an accurate manner. For our future work, we will in-
vestigate possible ways for evasion and then improve our detection
by making it more adaptive.
Recommendations to GitHub. We suggest that GitHub should
take action to regulate the existing promotion. One possible action
is to send emails with confirmed information to suspected accounts
and ask them for an active response. The inquiries can depend on
the actual activities that have happened on the GitHub repositories,
and the responses should be relevant to the inquires. According
to our observations, most of these suspected promotion accounts
are acquired through selling and buying. Thus, they are likely to
ignore emails received in their GitHub accounts or auto-reply to
the inquiries. In such a case, GitHub can put special flags on these
accounts. Industry recruiters will notice the accounts with special
flags, and could potentially reject the applications whose reposi-
tories have stars or forks from those special accounts. Thus, the
ACSAC ’20, December 07–11, 2020, Online
Kun Du, Hao Yang, Yubao Zhang, Haixin Duan, Haining Wang, Shuang Hao, Zhou Li, and Min Yang
negative impacts of promotion services can be alleviated. Another
action could be requiring suspected promotion accounts to com-
plete a more complicated captcha. This can prevent automatic login
and automatic action like forking and starring.
7 RELATED WORKS
Collaboration on GitHub. GitHub is a cloud-based service that
helps developers collaborate on a variety of projects. The collabo-
ration plays a vital role in GitHub. Researchers have done a set of
works on this collaboration platform [27, 35, 37, 39, 44]. Developers
make contributions [29, 40, 45] to improve their reputation. While
developers and their community can benefit from the legitimate use
of bots [47], the misuse of bots in a promotion service could harm
the community but has not yet been noticed by the community.
Manipulating Reputation. Reputation manipulation has be-
come a serious security problem in recent years. In online e-commerce
markets, dishonest sellers have been reported to manipulate the
reputation system by faking their transaction history. Xu et al. [49]
investigated five underground markets for reputation manipula-
tion in Taobao, referred to as Seller-Reputation-Escalation (SRE)
markets. Within the SRE underground market, sellers can easily
harness human labors to conduct fake transactions for improving
their stores’ reputation. In [25], Cai et al. employed reinforcement
learning methods to detect the reputation manipulation in online
e-commerce markets. Xie et al. [48] examined the underground
market where mobile app developers can illegally misuse positive
reviews and hence boost their reputation. In [26], Chen et al. ex-
ploited the unusual ranking change patterns of apps to identify
promoted apps and detect the collusive promotion groups that
engaged in reputation manipulation.
Promotion Services in Online Social Networks. Stringhini
et al. [42] inspected the Twitter follower markets, which provide
promotion services for helping users create a large number of fol-
lowers in Twitter. Similarly, the underground market for boosting
page likes has emerged in Facebook and attracted considerable
attentions [24, 28, 33]. Zheng et al. [52] demonstrated the collu-
sive promoters who generate seemingly-trustworthy reviews in
Dianping, a user-review social network. Jiang et al. [34] proposed a
graph-mining approach based on catching synchronized behaviors
in a large network. A number of studies have also been done to
detect crowdturfing [41, 46] and suspicious accounts [31, 43]. Song
et al. [41] detected crowdturfing through the detection of target
objects, such as post content, pages and URLs. Wang et al. [46]
performed the detection in the context of malicious crowdsourcing
systems, where sites connect both paying users and promoters.
However, these detection approaches are ineffective in GitHub.
GitHub promotion service providers do not need to post content for
promotion. Many of them use IM tools to gain profits, and there is
no valid site yet. Besides, GitHub promotion service providers take
two main actions to conceal their characteristics: (1) They forge
retroactive commits in their own accounts actively. Consequently,
the account itself can be treated as a normal account that has more
complicated action patterns include forking, starring, and issuing.
(2) They mix their promotion actions with normal actions. For ex-
ample, during our infiltration described in Section 3.3, we observed
that promotion accounts performed star and fork operations on
well-known repositories as a disguise.
8 CONCLUSION
In this paper, we have conducted the first comprehensive investi-
gation on a new promotion service on GitHub called “Promotion-
as-a-Service,” which helps developers increase the number of stars
and forks on a repository, so as to improve social status and earn
advantages in career development. In this work, we have devel-
oped a behavior pattern model by purchasing services from actual
GitHub promotion service providers and performed a large-scale
scan on all those accounts with star and fork operations from 2015
to 2019. We have detected that 63,872 accounts are promotion ac-
counts that star and fork for profit. Moreover, we have conducted a
large-scale measurement on these suspected promotion accounts
and the repositories that they starred or forked. We believe that our
findings will help the security community to pay more attention to
all kinds of fraudulent promotion methods. More importantly, our
work will help to achieve fair and objective recruitment in the IT
industry.
9 ACKNOWLEDGEMENTS
We thank our shepherd Ting-Fang Yen and anonymous reviewers
for their insightful feedback, which helped us improve the quality
of this paper. This work was supported in part by the National
Natural Science Foundation of China (U1836213, U1636204) and the
BNRist Network and Software Security Research Program (Grant
No. BNR2019TD01004).
2018.
REFERENCES
[1] Github warns. https://www.zdnet.com/article/github-warns-some-accounts-
compromised-after-reused-password-attack/, 2016.
[2] How i got 1,000 stars on my github project, and the lessons learned along the
way. https://medium.freecodecamp.org/how-i-got-1000–on-my-github-project-
654d3d394ca6, 2016.
[3] Abusing Github commit history for the lulz. https://github.com/gelstudios/gitfiti,
[4] China’s mainland github fraud has grown exponentially, behind it... (translated
from chinese). https://zhuanlan.zhihu.com/p/38791657, 2018.
[5] Github says bug exposed some plaintext passwords | zdnet. https://www.zdnet.
com/article/github-says-bug-exposed-account-passwords/, 2018.
[6] Github’s fake industry chain is exposed. you can buy stars when you
spend money (translated from chinese). https://www.oschina.net/news/99612/
fake-star-on-github?from=20180909, 2018.
[7] Gitstar. http://218.241.135.34:88/, 2018.
[8] Pillow. https://pillow.readthedocs.io/en/stable/, 2018.
[9] Projects | the state of the octoverse. https://octoverse.github.com/projects, 2018.
[10] Smexpt | github stars. https://www.smexpt.com/shop/github-stars/, 2018.
[11] The state of the octoverse | the state of the octoverse celebrates a year of building
across teams, time zones, and millions of merged pull requests. https://octoverse.
github.com/, 2018.
[12] Devskiller. https://devskiller.com/, 2019.
[13] Drinks-for-stars. https://www.theregister.co.uk/2019/07/30/would_you_star_a_
linux, 2019.
github_project_for_a_free_drink/, 2019.
[14] Gh archive. https://www.gharchive.org/, 2019.
[15] Gimhub - buy github stars and followers. https://gimhub.com/, 2019.
[16] Github - torvalds/linux: Linux kernel source tree. https://github.com/torvalds/
[17] Github api interface. https://api.github.com/, 2019.
[18] Github report abuse. https://github.com/contact/report-abuse/, 2019.
[19] Passive dns historical
internet database: Farsight dnsdb.
https://www.
farsightsecurity.com/solutions/dnsdb/, 2019.
[20] Skt-github-abuse. https://brunch.co.kr/@supims/595, 2019.
[21] Stop abuse github star metatron-app/metatron-discovery · github. https://github.
com/metatron-app/metatron-discovery/issues/2405, 2019.
Understanding Promotion-as-a-Service on GitHub
ACSAC ’20, December 07–11, 2020, Online
[47] Wessel, M., de Souza, B. M., Steinmacher, I., Wiese, I. S., Polato, I., Chaves,
A. P., and Gerosa, M. A. The Power of Bots: Characterizing and Understanding
Bots in OSS Projects. Proc. ACM Hum.-Comput. Interact. (2018).
[48] Xie, Z., and Zhu, S. AppWatcher: Unveiling the Underground Market of Trading
Mobile App Reviews. In Proceedings of the 8th ACM Conference on Security &
Privacy in Wireless and Mobile Networks (2015).
[49] Xu, H., Liu, D., Wang, H., and Stavrou, A. E-commerce Reputation Manipu-
lation: The Emergence of Reputation-Escalation-As-A-Service. In International
Conference on World Wide Web (2015), ACM.
[50] Yang, H., Ma, X., Du, K., Li, Z., Duan, H., Su, X., Liu, G., Geng, Z., and Wu,
J. How to Learn Klingon without a Dictionary: Detection and Measurement of
Black Keywords used by the Underground Economy. In Proceedings of the IEEE
Symposium on Security and Privacy (2017).
[51] Zhang, X., Zhu, S., and Liang, W. Detecting Spam and Promoting Campaigns
in the Twitter Social Network.
In Proceedings of the IEEE 12th International
Conference on Data Mining (2012).
[52] Zheng, H., Xue, M., Lu, H., Hao, S., Zhu, H., Liang, X., and Ross, K. Smoke
Screener or Straight Shooter: Detecting Elite Sybil Attacks in User-Review Social
Networks. arXiv preprint arXiv:1709.06916 (2017).
[22] The world leading software development platform github. https://github.com/,
2019.
[23] Zhaopin. https://www.zhaopin.com/, 2019.
[24] Badri Satya, P. R., Lee, K., Lee, D., Tran, T., and Zhang, J. Uncovering Fake
Likers in Online Social Networks. In Proceedings of the 25th ACM International
on Conference on Information and Knowledge Management (2016).
[25] Cai, Q., Filos-Ratsikas, A., Tang, P., and Zhang, Y. Reinforcement Mechanism
Design for Fraudulent Behaviour in E-commerce. In Proceedings of the 32nd AAAI
Conference on Artificial Intelligence (2018).
[26] Chen, H., He, D., Zhu, S., and Yang, J. Toward Detecting Collusive Ranking
Manipulation Attackers in Mobile App Markets. In Proceedings of the ACM on
Asia Conference on Computer and Communications Security (2017).
[27] Dabbish, L., Stuart, C., Tsay, J., and Herbsleb, J. Social Coding in GitHub:
Transparency and Collaboration in an Open Software Repository. In Proceedings
of the ACM Conference on Computer Supported Cooperative Work (2012).
[28] De Cristofaro, E., Friedman, A., Jourjon, G., Kaafar, M. A., and Shafiq, M. Z.
Paying for Likes?: Understanding Facebook Like Fraud Using Honeypots. In
Proceedings of the ACM Internet Measurement Conference (2014).
[29] Destefanis, G., Ortu, M., Bowes, D., Marchesi, M., and Tonelli, R. On
Measuring Affects of Github Issues’ Commenters.
In Proceedings of the 3rd
International Workshop on Emotion Awareness in Software Engineering (2018),
ACM.
[30] Du, K., Yang, H., Li, Z., Duan, H.-X., and Zhang, K. The Ever-Changing
Labyrinth: A Large-Scale Analysis of Wildcard DNS Powered Blackhat SEO.
In USENIX Security Symposium (2016).
[31] Egele, M., Stringhini, G., Kruegel, C., and Vigna, G. COMPA: Detecting
Compromised Accounts on Social Networks. In Proceedings of the Symposium on
Network and Distributed System Security (2013).
[32] Grier, C., Ballard, L., Caballero, J., Chachra, N., Dietrich, C. J., Levchenko,
K., Mavrommatis, P., McCoy, D., Nappa, A., Pitsillidis, A., Provos, N., Rafiqe,
M. Z., Rajab, M. A., Rossow, C., Thomas, K., Paxson, V., Savage, S., and Voelker,
G. M. Manufacturing Compromise: The Emergence of Exploit-as-a-service. In
Proceedings of the ACM Conference on Computer and Communications Security
(2012).
[33] Ikram, M., Onwuzurike, L., Farooqi, S., Cristofaro, E. D., Friedman, A.,
Jourjon, G., Kaafar, M. A., and Shafiq, M. Z. Measuring, Characterizing, and
Detecting Facebook Like Farms. ACM Transactions on Privacy and Security (2017).
[34] Jiang, M., Cui, P., Beutel, A., Faloutsos, C., and Yang, S. Catching Synchro-
nized Behaviors in Large Networks: A Graph Mining Approach. ACM Transactions
on Knowledge Discovery from Data (2016).
[35] Kalliamvakou, E., Gousios, G., Blincoe, K., Singer, L., German, D. M., and
Damian, D. The Promises and Perils of Mining GitHub. In Proceedings of the
11th Working Conference on Mining Software Repositories (2014), ACM.
[36] Kanich, C., Weaver, N., McCoy, D., Halvorson, T., Kreibich, C., Levchenko, K.,
Paxson, V., Voelker, G. M., and Savage, S. Show Me the Money: Characterizing
Spam-advertised Revenue. In USENIX Security Symposium (2011).
Theory of Communication Visibility. Information Systems Research (2014).
[38] Levchenko, K., Pitsillidis, A., Chachra, N., Enright, B., Félegyházi, M.,
Grier, C., Halvorson, T., Kanich, C., Kreibich, C., Liu, H., McCoy, D., Weaver,
N., Paxson, V., Voelker, G. M., and Savage, S. Click Trajectories: End-to-End
Analysis of the Spam Value Chain. In Proceedings of the IEEE Symposium on
Security and Privacy (2011).
[39] Marlow, J., Dabbish, L., and Herbsleb, J. Impression Formation in Online Peer
Production: Activity Traces and Personal Profiles in Github. In Proceedings of the
Conference on Computer Supported Cooperative Work (2013), ACM.
[40] Ren, J., Yin, H., Hu, Q., Fox, A., and Koszek, W. Towards Quantifying the
Development Value of Code Contributions. In Proceedings of the 26th ACM Joint
Meeting on European Software Engineering Conference and Symposium on the
Foundations of Software Engineering (2018).
[41] Song, J., Lee, S., and Kim, J. Crowdtarget: Target-Based Detection of Crowdturf-
ing in Online Social Networks. In Proceedings of the 22nd ACM SIGSAC Conference
on Computer and Communications Security (2015).
[42] Stringhini, G., Egele, M., Kruegel, C., and Vigna, G. Poultry Markets: On
the Underground Economy of Twitter Followers. ACM SIGCOMM Computer
Communication Review (2012).
[43] Thomas, K., Grier, C., Song, D., and Paxson, V. Suspended Accounts in Retro-
spect: An analysis of Twitter Spam. In Proceedings of the ACM Internet Measure-
ment Conference (2011).
[44] Thung, F., Bissyande, T. F., Lo, D., and Jiang, L. Network Structure of Social
Coding in GitHub. In Proceedings of the 17th European Conference on Software
Maintenance and Reengineering (2013), IEEE.
[45] Tsay, J., Dabbish, L., and Herbsleb, J. Influence of Social and Technical Factors
for Evaluating Contribution in GitHub. In Proceedings of the 36th International
Conference on Software Engineering (2014), ACM.
[46] Wang, G., Wang, T., Zheng, H., and Zhao, B. Y. Man vs. Machine: Practical
Adversarial Detection of Malicious Crowdsourcing Workers. In USENIX Security
Symposium (2014).
[37] Leonardi, P. M. Social media, Knowledge sharing, and Innovation: Toward a
ACSAC ’20, December 07–11, 2020, Online
Kun Du, Hao Yang, Yubao Zhang, Haixin Duan, Haining Wang, Shuang Hao, Zhou Li, and Min Yang
APPENDIX
A Forging Retroactive Commits
Figure 11 shows the abuse of forging retroactive commits. Adver-
saries can pretend to be an active developer through this abuse.
(a) There are two important files in the pack folder.
(a) Before the promotion, the honeypot repository had only two contributions in
2016.
(b) Adversaries forge retroactive commits all at 17:2 0.
(b) After the promotion, the honeypot repository had 190 contributions in 2016.
Figure 11: Forging historical commits
Figure 12 shows how adversaries forge retroactive commits and
pretend to be a skillful and hardworking developer. In this pro-
cess, they must first change historical records stored separately
in two local files “pack-*.idx” and “pack-*.pack.” Then, they forge
a temporary file and tamper to add, modify, or delete characters.
By uploading these files back to GitHub, adversaries can change
historical records at will.
(c) The content of retroactive commits is simple.
Figure 12: The process of forging historical commits.