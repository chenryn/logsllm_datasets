---
author: Gabriel Cánepa
category: 技术
comments_data:
- date: '2015-10-15 14:22:01'
  message: 感谢分享，顺便问下，能否在后面的内容里面把 Tecmint 里面 的 RHCE exam 内容翻译下吗？
  postip: 117.32.132.75
  username: mefirst_love [Internet Explorer 11.0|Windows 8.1]
- date: '2015-10-15 22:34:26'
  message: 有的。
  postip: 114.253.22.175
  username: linux [Chrome 45.0|Mac 10.11]
- date: '2015-10-16 08:26:49'
  message: 没有找到在什么地方，能告诉下么？谢谢
  postip: 117.32.132.75
  username: mefirst_love [Microsoft Edge 12.10240|Windows 10]
- date: '2015-10-16 20:05:13'
  message: 啊哈，还没发呢。。我这就准备发了，一个系列。
  postip: 114.253.22.175
  username: linux [Chrome 45.0|Mac 10.11]
count:
  commentnum: 4
  favtimes: 10
  likes: 0
  sharetimes: 0
  viewnum: 7250
date: '2015-10-07 10:30:00'
editorchoice: false
excerpt: 假如你在词典中查一下单词 虚拟化（virtualize），你将会发现它的意思是 创造某些事物的一个虚拟物（而非真实的）。在计算机行业中，术语虚拟化（virtualization）指的是：在相同的物理（硬件）系统上，同时运行多个操作系统，且这几个系统相互隔离的可能性，而那个硬件在虚拟化架构中被称作宿主机（host）。  RHCSA
  系列： 虚拟化基础和使用 KVM 进行虚拟机管理  Part 15 通过使用虚拟机监视器（也被称为虚拟机管理程序（hypervisor）），虚拟机（被称为 guest）由底层的硬件来供给虚拟资源（举几个例子来说，如
  CPU，RAM，存储介质，网
fromurl: http://www.tecmint.com/kvm-virtualization-basics-and-guest-administration/
id: 6362
islctt: true
largepic: /data/attachment/album/201510/07/103003l1zq1cewee57q9je.png
permalink: /article-6362-1.html
pic: /data/attachment/album/201510/07/103003l1zq1cewee57q9je.png.thumb.jpg
related:
- displayorder: 0
  raid: 6348
reviewer: ''
selector: ''
summary: 假如你在词典中查一下单词 虚拟化（virtualize），你将会发现它的意思是 创造某些事物的一个虚拟物（而非真实的）。在计算机行业中，术语虚拟化（virtualization）指的是：在相同的物理（硬件）系统上，同时运行多个操作系统，且这几个系统相互隔离的可能性，而那个硬件在虚拟化架构中被称作宿主机（host）。  RHCSA
  系列： 虚拟化基础和使用 KVM 进行虚拟机管理  Part 15 通过使用虚拟机监视器（也被称为虚拟机管理程序（hypervisor）），虚拟机（被称为 guest）由底层的硬件来供给虚拟资源（举几个例子来说，如
  CPU，RAM，存储介质，网
tags:
- RHCSA
thumb: false
title: RHCSA 系列（十五）： 虚拟化基础和使用 KVM 进行虚拟机管理
titlepic: false
translator: FSSlc
updated: '2015-10-07 10:30:00'
---
假如你在词典中查一下单词 “ 虚拟化   （    virtualize    ） ”，你将会发现它的意思是 “创造某些事物的一个虚拟物（而非真实的）”。在计算机行业中，术语 虚拟化   （    virtualization    ） 指的是：在相同的物理（硬件）系统上，同时运行多个操作系统，且这几个系统相互隔离的**可能性**，而那个硬件在虚拟化架构中被称作 宿主机   （    host    ） 。
![KVM 虚拟化基础和 KVM 虚拟机管理](/data/attachment/album/201510/07/103003l1zq1cewee57q9je.png)
*RHCSA 系列： 虚拟化基础和使用 KVM 进行虚拟机管理 – Part 15*
通过使用虚拟机监视器（也被称为 虚拟机管理程序   （    hypervisor    ） ），虚拟机（被称为 guest）由底层的硬件来供给虚拟资源（举几个例子来说，如 CPU，RAM，存储介质，网络接口等）。
考虑到这一点就可以清楚地看出，虚拟化的主要优点是节约成本（在设备和网络基础设施，及维护工作等方面）和显著地减少容纳所有必要硬件所需的物理空间。
由于这个简单的指南不能涵盖所有的虚拟化方法，我鼓励你参考在总结部分中列出的文档，以此对这个话题做更深入的了解。
请记住当前文章只是用于在 RHEL 7 中用命令行工具使用 [KVM](http://www.linux-kvm.org/page/Main_Page) ( Kernel-based Virtual Machine   （    基于内核的虚拟机    ） ) 学习虚拟化基础知识的一个起点，而并不是对这个话题的深入探讨。
### 检查硬件要求并安装软件包
为了设置虚拟化，你的 CPU 必须能够支持它。你可以使用下面的命令来查看你的系统是否满足这个要求：
```
# grep -E 'svm|vmx' /proc/cpuinfo
```
在下面的截图中，我们可以看到当前的系统（带有一个 AMD 的微处理器）支持虚拟化，svm 字样的存在暗示了这一点。假如我们有一个 Intel 系列的处理器，我们将会看到上面命令的结果将会出现 vmx 字样。
![检查 KVM 支持](/data/attachment/album/201510/07/103005v25u5d8d9984of6z.png)
*检查 KVM 支持*
另外，你需要在你宿主机的硬件（BIOS 或 UEFI）中开启虚拟化。
现在，安装必要的软件包：
* qemu-kvm 是一个开源的虚拟机程序，为 KVM 虚拟机监视器提供硬件仿真，而 qemu-img 则提供了一个操纵磁盘镜像的命令行工具。
* libvirt 包含与操作系统的虚拟化功能交互的工具。
* libvirt-python 包含一个模块，它允许用 Python 写的应用来使用由 libvirt 提供的接口。
* libguestfs-tools 包含各式各样的针对虚拟机的系统管理员命令行工具。
* virt-install 包含针对虚拟机管理的其他命令行工具。
命令如下：
```
# yum update && yum install qemu-kvm qemu-img libvirt libvirt-python libguestfs-tools virt-install
```
一旦安装完成，请确保你启动并开启了 libvirtd 服务：
```
# systemctl start libvirtd.service
# systemctl enable libvirtd.service
```
默认情况下，每个虚拟机将只能够与放在相同的物理服务器上的虚拟机以及宿主机自身通信。要使得虚拟机能够访问位于局域网或因特网中的其他机器，我们需要像下面这样在我们的宿主机上设置一个桥接接口（比如说 br0）：
1、 添加下面的一行到我们的 NIC 主配置中（类似 `/etc/sysconfig/network-scripts/ifcfg-enp0s3` 这样的文件）：
```
BRIDGE=br0
```
2、 使用下面的内容（注意，你可能需要更改 IP 地址，网关地址和 DNS 信息）为 br0 创建一个配置文件（`/etc/sysconfig/network-scripts/ifcfg-br0`）：
```
DEVICE=br0
TYPE=Bridge
BOOTPROTO=static
IPADDR=192.168.0.18
NETMASK=255.255.255.0
GATEWAY=192.168.0.1
NM_CONTROLLED=no
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=br0
ONBOOT=yes
DNS1=8.8.8.8
DNS2=8.8.4.4
```
3、 最后在文件`/etc/sysctl.conf` 中设置：
```
net.ipv4.ip_forward = 1
```
来开启包转发并加载更改到当前的内核配置中：