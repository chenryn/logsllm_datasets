def_initial_extent character This column will always be NULL.
varying(40)
def_next_extent character This column will always be NULL.
varying(40)
def_min_extents character This column will always be NULL.
varying(40)
def_max_extents character This column will always be NULL.
varying(40)
def_pct_increase character This column will always be NULL.
varying(40)
def_freelists numeric T h i s c o lu m n will always be NULL.
def_freelist_groups numeric T h i s c o lu m n will always be NULL.
def_logging character This column will always be YES
varying(7)
def_compression character This column will always be NONE
varying(8)
def_buffer_pool character This column will always be DEFAULT
varying(7)
ref_ptn_constraint_name character This column will always be NULL
varying(30)
interval character This column will always be NULL
varying(1000)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 415
Database Compatibility for Oracle® Developers Guide
10.6.1.2 ALL_TAB_PARTITIONS
The following table lists the information available in the ALL_TAB_PARTITIONS view:
Column Type Description
table_owner name T h e o w n e r o f th e t able.
schema_name name T h e sc h e m a in w h ich the table resides.
table_name name The name of the table.
composite text Y E S i f th e ta b le is subpartitioned; NO if it is
not subpartitioned.
partition_name name T h e n am e o f t h e p artition.
subpartition_count bigint T h e n u m b e r o f su b partitions for this partition.
high_value text T h e p ar t it io n l im it for RANGE partitions, or
the partition value for LIST partitions.
high_value_length integer T h e le n g th o f h ig h _value.
partition_position integer T h i s c o lu m n w i ll a lways be NULL.
tablespace_name name T h e ta b le s p a c e in which this partition resides.
pct_free numeric T h i s c o lu m n w i ll a lways be 0.
pct_used numeric T h i s c o lu m n w i ll a lways be 0.
ini_trans numeric T h i s c o lu m n w i ll a lways be 0.
max_trans numeric T h i s c o lu m n w i ll a lways be 0.
initial_extent numeric T h i s c o lu m n w i ll a lways be NULL.
next_extent numeric T h i s c o lu m n w i ll a lways be NULL.
min_extent numeric T h i s c o lu m n w i ll a lways be 0.
max_extent numeric T h i s c o lu m n w i ll a lways be 0.
pct_increase numeric T h i s c o lu m n w i ll a lways be 0.
freelists numeric T h i s c o lu m n w i ll a lways be NULL
freelist_groups numeric T h i s c o lu m n w i ll a lways be NULL
logging character This column will always be YES.
varying(7)
compression character This column will always be NONE.
varying(8)
num_rows numeric T h e ap p r o x . n u m b er of rows in this partition.
blocks integer T h e ap p r o x . n u m b er of blocks in this partition.
empty_blocks numeric T h i s c o lu m n w i ll a lways be NULL
avg_space numeric T h i s c o lu m n w i ll a lways be NULL
chain_cnt numeric T h i s c o lu m n w i ll a lways be NULL
avg_row_len numeric T h i s c o lu m n w i ll a lways be NULL
sample_size numeric T h i s c o lu m n w i ll a lways be NULL
last_analyzed timestamp This column will always be NULL
without time
zone
buffer_pool character This column will always be NULL
varying(7)
global_stats character This column will always be YES.
varying(3)
user_stats character This column will always be NO.
varying(3)
backing_table regclass O ID o f t he b a ck i n g table for this partition.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 416
Database Compatibility for Oracle® Developers Guide
10.6.1.3 ALL_TAB_SUBPARTITIONS
The following table lists the information available in the ALL_TAB_SUBPARTITIONS
view:
Column Type Description
table_owner name T h e n a m e o f t h e o w n er of the table.
schema_name name T h e n a m e o f t h e s c h ema in which the table
resides.
table_name name The name of the table.
partition_name name T h e n a m e o f t h e p a r tition.
subpartition_name name The name of the subpartition.
high_value text T h e s u b pa r ti ti o n l im it for RANGE subpartitions,
or the subpartition value for LIST subpartitions.
high_value_length integer T h e l en g t h o f h i gh _ v alue.
subpartition_position integer T h is c o l u m n w il l a lw ays be NULL.
tablespace_name name T h e t ab l e sp a c e i n w h ich this subpartition resides.
pct_free numeric T h is c o l u m n w il l a lw ays be 0.
pct_used numeric T h is c o l u m n w il l a lw ays be 0.
ini_trans numeric T h is c o l u m n w il l a lw ays be 0.
max_trans numeric T h is c o l u m n w il l a lw ays be 0.
initial_extent numeric T h is c o l u m n w il l a lw ays be NULL.
next_extent numeric T h is c o l u m n w il l a lw ays be NULL.
min_extent numeric T h is c o l u m n w il l a lw ays be 0.
max_extent numeric T h is c o l u m n w il l a lw ays be 0.
pct_increase numeric T h is c o l u m n w il l a lw ays be 0.
freelists numeric T h is c o l u m n w il l a lw ays be NULL.
freelist_groups numeric T h is c o l u m n w il l a lw ays be NULL.
logging character This column will always be YES.
varying(7)
compression character This column will always be NONE.
varying(8)
num_rows numeric T h e a p p ro x . n u m b e r of rows in this subpartition.
blocks integer T h e a p p ro x . n u m b e r of blocks in this
subpartition.
empty_blocks numeric T h is c o l u m n w il l a lw ays be NULL.
avg_space numeric T h is c o l u m n w il l a lw ays be NULL.
chain_cnt numeric T h is c o l u m n w il l a lw ays be NULL.
avg_row_len numeric T h is c o l u m n w il l a lw ays be NULL.
sample_size numeric T h is c o l u m n w il l a lw ays be NULL.
last_analyzed timestamp This column will always be NULL.
without time
zone
buffer_pool character This column will always be NULL.
varying(7)
global_stats character This column will always be YES.
varying(3)
user_stats character This column will always be NO.
varying(3)
backing_table regclass O I D o f t h e b a c k in g t able for this subpartition.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 417
Database Compatibility for Oracle® Developers Guide
10.6.1.4 ALL_PART_KEY_COLUMNS
The following table lists the information available in the ALL_PART_KEY_COLUMNS
view:
Column Type Description
owner name The name of the table owner.
schema_name name The name of the schema on which the table
resides.
name name The name of the table.
object_type character(5) This column will always be TABLE.
column_name name The name of the partitioning key column.
column_position integer The position of this column within the
partitioning key (the first column has a column
position of 1, the second column has a column
position of 2...)
10.6.1.5 ALL_SUBPART_KEY_COLUMNS
The following table lists the information available in the ALL_SUBPART_KEY_COLUMNS
view:
Column Type Description
owner name The name of the table owner.
schema_name name The name of the schema on which the table
resides.
name name The name of the table.
object_type character(5) This column will always be TABLE.
column_name name The name of the partitioning key column.
column_position integer The position of this column within the
subpartitioning key (the first column has a
column position of 1, the second column has a
column position of 2...)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 418
Database Compatibility for Oracle® Developers Guide
11 ECPGPlus
EnterpriseDB has enhanced ECPG (the PostgreSQL pre-compiler) to create ECPGPlus.
ECPGPlus allows you to include embedded SQL commands in C applications; when you
use ECPGPlus to compile an application that contains embedded SQL commands, the
SQL code is syntax-checked and translated into C.
ECPGPlus supports Pro*C compatible syntax in C programs when connected to an
Advanced Server database. ECPGPlus supports:
 Oracle Dynamic SQL – Method 4 (ODS-M4).
 Pro*C compatible anonymous blocks.
 A CALL statement compatible with Oracle databases.
As part of ECPGPlus' Pro*C compatibility, you do not need to include the BEGIN
DECLARE SECTION and END DECLARE SECTION directives.
For more information about using ECPGPlus, please see the EDB Postgres Advanced
Server ECPG Connector Guide available from the EnterpriseDB website at:
https://www.enterprisedb.com/resources/product-documentation
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 419
Database Compatibility for Oracle® Developers Guide
12 dblink_ora
dblink_ora provides an OCI-based database link that allows you to SELECT, INSERT,
UPDATE or DELETE data stored on an Oracle system from within Advanced Server.
Connecting to an Oracle Database
To enable Oracle connectivity, download Oracle's freely available OCI drivers from their
website, presently at:
http://www.oracle.com/technetwork/database/database-technologies/instant-
client/overview/index.html
For Linux, if the Oracle instant client that you've downloaded does not include the
libclntsh.so library, you must create a symbolic link named libclntsh.so that
points to the downloaded version. Navigate to the instant client directory and execute the
following command:
ln -s libclntsh.so.version libclntsh.so
Where version is the version number of the libclntsh.so library. For example:
ln -s libclntsh.so.12.1 libclntsh.so
Before creating a link to an Oracle server, you must tell Advanced Server where to find
the OCI driver.
Set the LD_LIBRARY_PATH environment variable on Linux (or PATH on Windows) to the
lib directory of the Oracle client installation directory.
For Windows only, you can instead set the value of the oracle_home configuration
parameter in the postgresql.conf file. The value specified in the oracle_home
configuration parameter will override the Windows PATH environment variable.
The LD_LIBRARY_PATH environment variable on Linux (PATH environment variable or
oracle_home configuration parameter on Windows) must be set properly each time you
start Advanced Server.
When using a Linux service script to start Advanced Server, be sure LD_LIBRARY_PATH
has been set within the service script so it is in effect when the script invokes the pg_ctl
utility to start Advanced Server.
For Windows only: To set the oracle_home configuration parameter in the
postgresql.conf file, edit the file, adding the following line:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 420
Database Compatibility for Oracle® Developers Guide
oracle_home = 'lib_directory '
Substitute the name of the Windows directory that contains oci.dll for
lib_directory.
After setting the oracle_home configuration parameter, you must restart the server for
the changes to take effect. Restart the server from the Windows Services console.
12.1 dblink_ora Functions and Procedures
dblink_ora supports the following functions and procedures.
12.1.1 dblink_ora_connect()
The dblink_ora_connect() function establishes a connection to an Oracle database
with user-specified connection information. The function comes in two forms; the
signature of the first form is:
dblink_ora_connect(conn_name, server_name, service_name,
user_name, password, port, asDBA)
Where:
conn_name specifies the name of the link.
server_name specifies the name of the host.
service_name specifies the name of the service.
user_name specifies the name used to connect to the server.
password specifies the password associated with the user name.
port specifies the port number.
asDBA is True if you wish to request SYSDBA privileges on the Oracle server.
This parameter is optional; if omitted, the default value is FALSE.
The first form of dblink_ora_connect() returns a TEXT value.
The signature of the second form of the dblink_ora_connect() function is:
dblink_ora_connect(foreign_server_name, asDBA)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 421
Database Compatibility for Oracle® Developers Guide
Where:
foreign_server_name specifies the name of a foreign server.
asDBA is True if you wish to request SYSDBA privileges on the Oracle server.
This parameter is optional; if omitted, the default value is FALSE.
The second form of the dblink_ora_connect() function allows you to use the
connection properties of a pre-defined foreign server when establishing a connection to
the server.
Before invoking the second form of the dblink_ora_connect() function, use the
CREATE SERVER command to store the connection properties for the link to a system
table. When you call the dblink_ora_connect() function, substitute the server name
specified in the CREATE SERVER command for the name of the link.
The second form of dblink_ora_connect() returns a TEXT value.
12.1.2 dblink_ora_status()
The dblink_ora_status() function returns the database connection status. The
signature is:
dblink_ora_status(conn_name)
Where:
conn_name specifies the name of the link.
If the specified connection is active, the function returns a TEXT value of OK.
12.1.3 dblink_ora_disconnect()
The dblink_ora_disconnect() function closes a database connection. The signature
is:
dblink_ora_disconnect(conn_name)
Where:
conn_name specifies the name of the link.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 422
Database Compatibility for Oracle® Developers Guide
The function returns a TEXT value.
12.1.4 dblink_ora_record()
The dblink_ora_record() function retrieves information from a database. The
signature is:
dblink_ora_record(conn_name, query_text)
Where:
conn_name specifies the name of the link.
query_text specifies the text of the SQL SELECT statement that will be
invoked on the Oracle server.
The function returns a SETOF record.
12.1.5 dblink_ora_call()
The dblink_ora_call() function executes a non-SELECT statement on an Oracle
database and returns a result set. The signature is:
dblink_ora_call(conn_name, command, iterations)
Where:
conn_name specifies the name of the link.
command specifies the text of the SQL statement that will be invoked on the
Oracle server.
iterations specifies the number of times the statement is executed.
The function returns a SETOF record.
12.1.6 dblink_ora_exec()
The dblink_ora_exec() procedure executes a DML or DDL statement in the remote
database. The signature is:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 423
Database Compatibility for Oracle® Developers Guide
dblink_ora_exec(conn_name, command)
Where:
conn_name specifies the name of the link.
command specifies the text of the INSERT, UPDATE, or DELETE SQL statement
that will be invoked on the Oracle server.
The function returns a VOID.
12.1.7 dblink_ora_copy()
The dblink_ora_copy() function copies an Oracle table to an EnterpriseDB table. The
dblink_ora_copy() function returns a BIGINT value that represents the number of rows
copied. The signature is:
dblink_ora_copy(conn_name, command, schema_name,
table_name, truncate, count)
Where:
conn_name specifies the name of the link.
command specifies the text of the SQL SELECT statement that will be invoked on
the Oracle server.
schema_name specifies the name of the target schema.
table_name specifies the name of the target table.
truncate specifies if the server should TRUNCATE the table prior to copying;
specify TRUE to indicate that the server should TRUNCATE the table. truncate is
optional; if omitted, the value is FALSE.
count instructs the server to report status information every n record, where n is
the number specified. During the execution of the function, Advanced Server
raises a notice of severity INFO with each iteration of the count. For example, if
FeedbackCount is 10, dblink_ora_copy() raises a notice every 10 records.
count is optional; if omitted, the value is 0.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 424
Database Compatibility for Oracle® Developers Guide
12.2 Calling dblink_ora Functions
The following command establishes a connection using the dblink_ora_connect()
function:
SELECT dblink_ora_connect('acctg', 'localhost', 'xe', 'hr',
'pwd', 1521);
The example connects to a service named xe running on port 1521 (on the localhost)
with a user name of hr and a password of pwd. You can use the connection name acctg
to refer to this connection when calling other dblink_ora functions.
The following command uses the dblink_ora_copy() function over a connection
named edb_conn to copy the empid and deptno columns from a table (on an Oracle
server) named ora_acctg to a table located in the public schema on an instance of
Advanced Server named as_acctg. The TRUNCATE option is enforced, and a feedback
count of 3 is specified:
edb=# SELECT dblink_ora_copy('edb_conn','select empid,
deptno FROM ora_acctg', 'public', 'as_acctg', true, 3);
INFO: Row: 0
INFO: Row: 3
INFO: Row: 6
INFO: Row: 9
INFO: Row: 12
dblink_ora_copy
-----------------
12
(1 row)
The following SELECT statement uses dblink_ora_record() function and the acctg
connection to retrieve information from the Oracle server:
SELECT * FROM dblink_ora_record( 'acctg', 'SELECT
first_name from employees') AS t1(id VARCHAR);
The command retrieves a list that includes all of the entries in the first_name column
of the employees table.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 425
Database Compatibility for Oracle® Developers Guide
13 System Catalog Tables
The system catalog tables contain definitions of database objects that are available to
Advanced Server; the layout of the system tables is subject to change. If you are writing
an application that depends on information stored in the system tables, it would be
prudent to use an existing catalog view, or create a catalog view to isolate the application
from changes to the system table.
For detailed information about the system catalog tables, please see the Database
Compatibility for Oracle® Developer’s Reference Guide, available at:
https://www.enterprisedb.com/resources/product-documentation
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 426
Database Compatibility for Oracle® Developers Guide
14 Acknowledgements
The PostgreSQL 8.3, 8.4, 9.0, 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 10, and 11 Documentation
provided the baseline for the portions of this guide that are common to PostgreSQL, and
is hereby acknowledged:
Portions of this EnterpriseDB Software and Documentation may utilize the following
copyrighted material, the use of which is hereby acknowledged.
PostgreSQL Documentation, Database Management System
PostgreSQL is Copyright © 1996-2018 by the PostgreSQL Global Development Group
and is distributed under the terms of the license of the University of California below.
Postgres95 is Copyright © 1994-5 by the Regents of the University of California.
Permission to use, copy, modify, and distribute this software and its documentation for
any purpose, without fee, and without a written agreement is hereby granted, provided
that the above copyright notice and this paragraph and the following two paragraphs
appear in all copies.
IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS
DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF
THE POSSIBILITY OF SUCH DAMAGE.
THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
PROVIDED HEREUNDER IS ON AN "AS-IS" BASIS, AND THE UNIVERSITY OF
CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 427