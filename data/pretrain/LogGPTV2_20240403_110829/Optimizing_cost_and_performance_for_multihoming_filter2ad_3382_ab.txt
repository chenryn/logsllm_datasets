recurring and non-recurring local access fees. Given a set of ded-
icated links available, the cost of using dedicated links is the min-
imum cost of links such that their total capacity exceeds the max-
imum trafﬁc load. Note that the price of ISP5 is corrected from
$23,750 in the original publication to $28,750.
Burstable
DS3
Full-rate
DS3
Burstable
OC3
ISP
ISP1
ISP2
ISP3
ISP4
ISP5
(100 Mbps)
(155 Mbps)
(24 Mbps)
$12,131
$11,160
$ 9,870
$ 7,600
$ 6,300
(45 Mbps)
$13,000
$18,652
$12,690
$10,500
$ 9,000
$32,500
$29,900
$37,088
$19,600
$24,700
Table 1: The pricing data.
Full-rate
OC3
$43,245
$46,930
$45,989
$29,000
$28,750
(a) DS3 pricing functions
(b) OC3 pricing functions
Figure 2: The more complex pricing functions.
delay or rapidly increasing latency as a sign of a potential avail-
ability problem. Our algorithms can be easily extended to work
with alternative metrics, e.g., a combination of latency and loss
rate: latency + w· log(
1−lossRate ), where w is the relative weight
of loss rate.
1
4. MINIMIZING TOTAL COST
Since the previous studies focus on improving network perfor-
mance without considering cost, we ﬁrst motivate the need to opti-
mize cost. We show that by optimizing network performance alone,
users may incur high cost. Since the percentile-based charging
model is in common use, we illustrate our point below using a sim-
ple example under this model. Our performance results in Section 6
will further support this point using real data.
Consider a user with K identical links to K ISPs. Suppose the
user has one unit of trafﬁc to send at each interval, and the latency
of each link at each interval is drawn uniformly from a common
range. In each interval, to minimize latency, the user sends all of its
trafﬁc through the link with the lowest latency while the other links
receive no trafﬁc. Since the latency through different links are iden-
tically distributed, each link receives trafﬁc for approximately 1/K
of the intervals. Therefore when K is less than 20, e.g., K = 4, the
95th-percentile of each link is one. This implies that by optimizing
performance, the user pays K times the cost of using a single link.
This K-fold increase in cost is clearly unacceptable to most users.
Given this potential of a large cost increase, in this section we
study how to design effective smart routing algorithms to optimize
cost. As mentioned in Section 3, we focus on the percentile-based
 0 5000 10000 15000 20000 0 5 10 15 20 25 30 35 40 45Monthly Charge ($)Mbps 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 50000 0 20 40 60 80 100 120 140 160Monthly Charge ($)Mbpscharging model. We present an algorithm for dealing with the total-
volume based charging model in Appendix C.
4.1 Problem Speciﬁcation
We ﬁrst introduce the following notation.
4.2.2 Computing Charging Volumes
In this section, we describe how to compute the optimal charg-
ing volumes to minimize total cost. We show that the charging
volumes can be derived in two steps: (i) compute the sum of the
charging volumes, namely
k pk, and (ii) compute individual pk
values based on the sum.
(cid:80)
K
ck
I
F
v[i]
f
v[i]
t[i]
k
qk
qt(X, q)
pk
f v[i]
(cid:80)
The number of ISPs. We use k as the index.
The cost function of ISP k. Without loss of generality,
we assume that ck is a piece-wise linear non-decreasing
function.
The number of time intervals in a charging period. We use
i as the index.
The number of ﬂows. We use f as the index.
The trafﬁc volume of ﬂow f during interval i.
The total trafﬁc volume during interval i, i.e., v[i] =
k Tk (with vector summation).
f . Let time series V = {v[i] | 1 ≤ i ≤ I}.
(cid:80)
The volume of trafﬁc distributed to ISP k during interval
k | 1 ≤ i ≤ I}. Note that
i. Let time series Tk = {t[i]
V =
The charging percentile of ISP k, e.g., qk = 0.95 if an
ISP charges at 95th-percentile.
The (cid:100)q ∗ |X|(cid:101)-th value in Xsorted (or 0 if q ≤ 0), where
Xsorted is X sorted in non-decreasing order, and |X| is
the number of elements in X.
The charging volume of ISP k, (i.e., pk = qt(Tk, qk)).
For example, if ISP k charges at 95th-percentile, then pk
is the 95th-percentile of the trafﬁc assigned to ISP k.
(cid:80)K
k=1 ck(pk).
We now formally specify the ﬂow assignment problem: Given
k that
cost functions ck, the ﬂow assignment problem is to ﬁnd t[i]
minimizes the total cost
We consider two cases: fractional ﬂow assignment and integral
ﬂow assignment. Under fractional ﬂow assignment, ﬂows are in-
ﬁnitely splittable.
In contrast, integral ﬂow assignment assumes
that during each interval each ﬂow is assigned to only one ISP. In
the latter case, ﬂows can be naturally deﬁned using destination pre-
ﬁxes when BGP is used to implement smart routing.
The trafﬁc assignment problem, be it fractional or integral, can
be further classiﬁed into two categories: ofﬂine or online. The of-
ﬂine version assumes that v[i]
f are given in advance, whereas the
online version needs to predict v[i]
f and deals with prediction er-
rors. The online integral algorithms are more practical and have
lower control overhead. The ofﬂine fractional algorithms are also
important because they provide a lower bound on cost, and further
serve as a basis for designing our online algorithms.
4.2 Ofﬂine Fractional Flow Assignment
We begin by solving the ofﬂine fractional ﬂow assignment prob-
lem. We ﬁrst present an efﬁcient algorithm to compute an optimal
trafﬁc assignment when ISPs do not have capacity constraints. We
then extend the algorithm to deal with capacity constraints.
4.2.1 An Optimal Algorithm for Percentile-based
Charging Without Capacity Constraints
A key to optimizing cost is to determine the charging volumes.
For example, when ISPs use the 95th-percentile charging model,
we need to determine the 95th-percentile trafﬁc volume for each
ISP. Once we know the charging volume for each ISP, we can as-
sign trafﬁc by ensuring that the number of intervals in which ISP
k serves more than its charging volume of trafﬁc does not exceed
(1 − qk) ∗ I (e.g., 5% ∗ I for 95th-percentile charging).
Based on the above observation, we develop an efﬁcient algo-
rithm that computes an optimal trafﬁc assignment in two steps: (i)
compute the charging volume for each ISP, and (ii) assign trafﬁc
based on the charging volumes.
4.2.2.1 Computing the sum of charging volumes.
(cid:80)
We ﬁrst describe how to compute the sum of charging volumes to
minimize cost. This is based on the following two important obser-
vations, which we will formally prove below. Our ﬁrst observation
is that the total cost has a monotonicity property with respect to the
sum of the charging volumes. This monotonicity property suggests
k ck(pk), we need to minimize
that to minimize the total cost
(cid:80)
the value of
k pk. Our second observation is that the minimum
k(1 − qk)). As an exam-
value of
ple, suppose we have 4 ISPs and all of them charge based on the
k pk is equal to the
95th-percentile volume; then the minimum
80th-percentile of the total trafﬁc (since 1− 4∗ (1− 95%) = 0.80).
The two observations together suggest that to minimize cost, we
k(1 − qk)), which is easy to
need to have
compute given V and qk.
Now we formally prove the above two observations. Deﬁne
(cid:80)
(cid:80)
k pk is equal to qt(V, 1 −(cid:80)
(cid:80)
k pk = qt(V, 1 −(cid:80)
cmin(s) = min{(cid:80)
k ck(pk) | (cid:80)
(cid:80)
(cid:80)
k pk· s1
(cid:80)
k ck(pk) ≥ (cid:80)
(cid:80)
(cid:80)
k pk ≥ qt(V, 1 −(cid:80)
k pk.
k(1 − qk)) def= V0.
THEOREM 1. If s0 ≥ s1 ≥ 0, then cmin(s0) ≥ cmin(s1).
PROOF. Suppose the set pk minimizes
k pk = s0. We have cmin(s0) =
k ck(pk) subject to
k ck(pk ·
s1/s0) ≥ cmin(
) = cmin(s1), where the ﬁrst inequality
is because the cost functions ck are monotonically non-decreasing,
and the second inequality is by the deﬁnition of cmin.
The second observation, which is formalized in Theorem 2, es-
tablishes the (reachable) lower bound of
k pk = s}. We have
THEOREM 2.
(cid:80)
s0
We need the following lemma to prove the above theorem. The
proof of the lemma is in Appendix A.
k , t[2]
(QUANTILE INEQUALITY). Given K equal-length
k ,··· , t[n]
k }, where n = |Tk| and 0 ≤
(cid:88)
(cid:88)
qt(Tk, 1 − ak) ≥ qt(
Tk, 1 −
ak).
k
k
time series Tk = {t[1]
LEMMA 3
ak ≤ 1, we have(cid:88)
(cid:88)
k
(cid:88)
(cid:88)
k
pk =
k
≥ qt(
Given the above lemma, we can prove Theorem 2 as follows.
qt(Tk, 1 − (1 − qk))
(cid:88)
(1 − qk))
Tk, 1 −
(cid:88)
k
= qt(V, 1 −
k
(1 − qk))
def
= V0.
k
Note that in the above proof, we implicitly assume that all qk ∗ I
are integers, where I = |V |. When qk ∗ I is not an integer, we
can easily enforce its integrality by readjusting qk to (cid:100)qk ∗ I(cid:101)/I.
Clearly such readjustment does not affect the outcome of qt(V, qk)
(i.e., qt(V, qk) = qt(V,(cid:100)qk ∗ I(cid:101)/I), where I = |V |). Through-
out the rest of the paper, we assume that such readjustment has
been made for every qk in advance. For example, when we dis-
cuss 95th-percentile charging with charging period of one week
(i.e., I = 7 × 24 × 60/5 = 2016), we are really using qk =
(cid:100)0.95 ∗ I(cid:101)/I = (cid:100)1915.2(cid:101)/2016 = 1916/2016 (as opposed to
qk = 0.95 = 1915.2/2016).
(cid:80)
(cid:80)
4.2.2.2 Computing individual charging volumes.
Once V0 is determined, the next step is to compute the opti-
k ck(pk) subject to
mal charging volumes pk, which minimize
k pk = V0.
Theorem 4 shows that the optimal charging volumes pk are easy
to derive when all ck are concave (proof omitted for the interest of
brevity).
(cid:80)
(cid:80)
THEOREM 4. If all cost functions ck are concave, then an opti-