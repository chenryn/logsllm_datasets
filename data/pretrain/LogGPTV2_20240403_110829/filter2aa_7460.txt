#include 
#include 
#include 
#include 
uint16_t be2le(uint16_t be) {
    return (be > 8);
}
#pragma pack(0)
struct packet {
    uint16_t hash;
    uint16_t magic1;
    uint16_t conn_id;
    uint16_t seq_id;
    uint16_t unk2;
    uint8_t raw[10000];
} buf;
bool data_only = false;
bool text_dump = false;
bool decrypt = false;
void print_info(const char *fmt, ...) {
    if (data_only) { return; }
    va_list args;
    va_start(args, fmt);
    vprintf(fmt, args);
    va_end(args);
}
uint8_t getxor(int ndx, uint16_t current_hash) {
    if (!decrypt) { return 0; }
    return (ndx % 2 == 0)
        ? (current_hash & 0x00FF)
        : (current_hash & 0xFF00) >> 8;
}
int main(int argc, char *argv[]) {
    FILE *f = fopen("rawdata.bin", "rb");
    for (int i = 1; i = ' ' && c <= '~' ? c : '.');
                    } else {
                        printf(" ");
                    }
                }
            }
        } printf("\n");
    }
}