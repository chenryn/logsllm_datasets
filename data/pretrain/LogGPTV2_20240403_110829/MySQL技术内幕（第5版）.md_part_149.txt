ANSI
复合模式
变量表示的是与服务器启动时给定的各个--ssl-xxx 选项相对应的值。（例如，
BROSALALRA
AOSTAOUOOPIONS,
ANOSTAOUOOPTIONS,
HIGH_NOT_PRECEDENCE,
HIGH_NOT_PRECEDENCE,
ANSI_OUOTES,
S IGNORE_SACONCAT
DSPA
，引用标识符将使用反撇号（）；否则，会使用双引
NO_FIELD_OPTIONS
NO_FIELD_OPTIONS
组成模式
NO_FIELD_OPTIONS,
NO_FIELD_OPTIONS,
NO_FIELD_OPTIONS,
REAL_AS_FLOAT
，如果你曾经更改过此变量
一它们使得MySQL在处理
INSERT INTO ...
NO_KEY_OPTIONS
NO_KEY_OPTIONS
NO_KEY_OPTIONS
NO_ZERO_DATE
的
使
面
---
## Page 651
口thread_concurrency（启动：直接设置；作用范围：全局）
口thread_cache_size（启动：直接设置；作用范围：全局；动态）
口table_open_cache_instances（启动：直接设置；作用范围：全局）
口table_open_cache（启动：直接设置；作用范围：全局；动态）
口table_definition_cache（启动：直接设置；作用范围：全局；动态）
口
口
口
口9
口
口stored_program_cache（启动：直接设置；作用范围：全局；动态）
口 storage_engine（作用范围：全局、会话；动态）
个当前连接的客户端分别使用一个线程的时候，就要用到线程缓存。
还有线程，新建立的连接就会重复使用它们而不是去创建新的线程。当MySQL服务器为每
这个缓存还没有满，那么客户端曾经使用过的线程就将被放入这个缓存。只要这个缓存里
它指的是线程缓存所能容纳的最大线程数。当客户端断开与MySQL服务器的连接时，如果
下，将缓存分开可能会减少会话之间的资源竞争。此变量是在MySQL5.6.6里引入的。
它指的是用于对打开的表缓存进行分区的实例数量。默认为1（即不分区）
它指的是服务器能够同时打开的表的最大个数。
它指的是服务器在其定义缓存里可以存放的表定义（来自.frm文件）个数。
--timezone选项。
值。要想显式地设置这个值，可以设置 TZ 环境变量，或是为mysqld_safe脚本指定
system_time_zone（作用范围：全局）
此变量与 sync_master_info 很像，不同之处在于它处理的是 relay-log.info文件。
服
sync_relay_log_info（启动：直接设置；作用范围：全局；动态）
一次写入操作；否则，是每个事务发生一次写入操作。
对于从服务器，
sync_relay_log（启动：直接设置；作用范围：全局；动态）
文件同步到磁盘。实际上，正常的文件系统会执行刷新操作。如果该值大于0，那么从服务
对于从服务
sync_master_info（启动：直接设置；作用范围：全局；动态）
磁盘。
当启用此变量时（默认值），服务器会在数据创建时将每个非临时表的.frm文件刷新到
sync_frm（启动：直接设置；作用范围：全局；动态）
系统性能的负面影响也越大。
这种情况下，系统发生崩溃时，此变量的值越小，有关数据的安全系数越大，但这同时对
为一个正整数n的时候，服务器每对二进制日志进行n次写操作就会把日志刷新到磁盘。在
当把此变量设置为0时（默认值）：
sync_binlog（启动：直接设置；作用范围：全局；动态）
磁
里引入的。
它指的是服务器会为每个连接缓存多少存储例程。默认值为256。此变量是在MySQL5.5.21
自MySQL5.5.3起，它已被弃用。请使用default_storage_engine来代替。
NULL。
那么相应的ss1_xXx 变量的值将为空串。如果不支持使用 SSL，则这些变量的值都将是
ssl_ca 表示的是--ssl-ca 选项的值。）如果在启动服务器时没有给定--ssl-xxx选项,
服务器的系统时区。服务器在它启动时会尝试通过询问操作系统的办法来确定此变量的
入组处理完之后将中继日志同步到磁盘。如果启用了自动提交，那么每条语句都会发生
盘。实际上，正
会在每个事件组处理完之后将该文件同步到磁盘。
器，如果这个变量为O（默认值），那么从服务器不会强制将它的master.info
正常的文件系统会执行刷新操作。如果该值大于0，那么从服务器会在每个
如果这个变量为〇（默认值），那么从服务器不会强制将其中继日志同步到
，服务器不会把二进制日志刷新到磁盘。当此变量被设置
D.1系统变量
在高负荷情况
631
---
## Page 652
632
口unique_checks（作用范围：全局、会话；动态)
口tx_read_only（启动：使用--transaction-read-only 选项；作用范围：全局、会话；
口tx_isolation（启动：使用--transaction-isolation 选项；作用范围：全局、会话；
口
口transaction_alloc_block_size（启动：直接设置；作用范围：全局、会话；动态）
口
口tmp_table_size（启动：直接设置；作用范围：全局、会话；动态）
口
口time_format（作用范围：全局）
口thread_stack（启动：直接设置；作用范围：全局）
口thread_handling（启动：直接设置；作用范围：全局）
与唯一性需求冲突时，才可以这样做。
把数据导入 InnoDB表时，禁用这些检查可以提升性能，但是只有事先知道这些数据值不会
将此变量设置为0或1，将分别禁用或启用对InnoDB 表里的辅助索引进行唯一性检查。当
引入的。
默认事务访问模式是否为只读。默认值为OFF（即允许读/写）。此变量是在MySQL5.6.5里
它指的是事务隔离的默认级别。
间不会被释放。
action_alloc_block_size 变量控制的内存分配块不同，这个缓冲区在前后两条语句之
它指的是为处理构成某个事务的语句而分配的那个缓冲区的大小。与那些由trans-
transaction_prealloc_size（启动：直接设置；作用范围：全局、会话；动态）
入二进制日志之前，需要存储为事务一部分的语句。
它指的是为处理这样一些语句而分配的临时内存的块大小：在事务提交之时，在将事务写
名之间则需要用分号（；）隔开。
表，它们将轮换着使用。在Unix里，目录名之间使用冒号（：）隔开；在Windows里，目录
它指的是服务器用于创建临时文件的那个目录的路径名。此变量的值可以是一个目录列
tmpdir（启动：直接设置；作用范围：全局）
时表，而不必把它们转换为磁盘文件格式。
上。如果有足够多的内存的话，那么增大此变量的值可以使服务器在内存里维护更大的临
size当中较小的那个值，那么服务器会把它从内部内存表转换为MyISAM表，保存到磁盘
的最大允许长度。如果某个临时表的长度超过了max_heap_table_size 和 tmp_table_
它指的是MySQL内部使用的各种临时表（即服务器在处理SQL语句的过程中自动创建的表）
timestamp的值会对NOW（）的返回值产生影响，但是不会影响到SYSDATE（）的返回值。
通过设置此变
timestamp（作用范围：会话；动态）
设置其自己会话的时区。
system_time_zone 变量的值作为它的当前时区。客户端可以通过修改此变量的会话值，
它指的是MySQL服务器的当前时区。如果此变量的值为SYSTEM，则MySQL服务器将使用
time_zone（启动：使用--default-time-zone 选项；作用范围：全局、会话；动态）
此变量未被使用。
它指的是每个线程的栈大小。
为 one-thread-per-connection。
接线程）或one-thread-per-connection（每个当前连接的客户端使用一个线程）。默认
它指的是服务器用于处理客户端连接的线程模型。此变量的值可以为no-threads（单个连
此变量已过时。
动态）
动态）
附录D系统变量、状态变量和用户变量参考
变量，可以指定当前会话的TIMESTAMP值。它用于二进制日志的处理。
---
## Page 653
InnoDB系统变量
口innodb_autoextend_increment（启动：直接设置；作用范围：全局；动态)
口innodb_additional_mem_pool_size（启动：直接设置；作用范围：全局）
口innodb_adaptive_max_sleep_delay（启动：直接设置；作用范围：全局；动态）
口innodb_adaptive_flushing_lwm（启动：直接设置；作用范围：全局；动态）
口innodb_adaptive_flushing（启动：直接设置；作用范围：全局；动态）
ignore_builtin_innodb（作用范围：全局）
wait_timeout（启动：直接设置；作用范围：全局、会话；动态）
口version_compile_os（作用范围：全局）
version_compile_machine（作用范围：全局）
口version_comment（作用范围：全局）
它指的是InnoDB存储引擎用来存放各种内部数据结构的内存池的大小。
口
口
口
5.6.3里引入的。
thread_sleep_delay 的上限值（单位为微秒）。默认值为150000。此变量是在 MysSQL
innodb_adaptive_hash_index（启动：直接设置；作用范围：全局；动态）
它指的是会使 InnoDB 启用自适应刷新功能的那个重做日志容量的最低百分比点数。默认值
下面这些系统变量都与InnoDB 存储引擎有关。
为0时，会禁止调整。非零值最大可达1 000 000，它指定的是InnoDB调整innodb_
态构建散列索引，如果这样做，则有可能提高性能。默认值为ON。
它指的是，InnoDB是否要使用自适应哈希索引。也就是说，它是否要监视索引查找，并动
为10。此变量是在MySQL5.6.6里引I入的。
来避免IO爆炸。默认值为ON。
它表示的是，InnoDB 是否会试图通过使用工作负载水平更改缓冲池里脏页刷新频率的方式
此变量未被使用。
息的数量。
这是一个只读会话变量，它表示的是，
warning_count（作用范围：会话）
闲的秒数。对于交互式客户端，需要使用 interactive_timeout 变量的值来代替。
此变量指的是，在服务器自己认为可以将非交互式客户端关闭之前，该客户端能够保持空
它指的是MySQL的编译操作系统。这个值是在构建MySQL时的配置阶段确定的。
定的。
它指的是MySQL的编译机器（即硬件类型）。这个值是在构建 MySQL时的配置阶段确
指定任何注释，则此变量的默认值为"Source distribution"。
它指的是在配置服务器时指定给CMake的-DWITH_COMMENT选项的值。如果在配置时没有
构成，如-1og用于表明启用日志记录；-debug用于表明服务器正运行在调试模式下。
它指的是MySQL服务器的版本。此变量的值由一个版本编号以及（可能）一个或多个后缀
version（作用范围：全局）
告信息。
在了单个行里也不行。当启用此变量时（默认值），服务器会允许更新操作，并产生一条警
执行UPDATE 或DELETE语句），即使更新操作里包含有LIMIT1子句，把更新范围限制
当禁用此变量时，服务器会禁止对那些在其底层表里没有使用主键的视图进行更新操作（即
updatable_views_with_limit（启动：直接设置；作用范围：全局、会话；动态）
，最后那条语句所产生的诸如错误、警告和注意等信
D.1系统变量
633
---
## Page 654
634
品
D
口
口
口
口
口
口
口
口innodb_autoinc_lock_mode（启动：直接设置；作用范围：全局）
它指的是，InoDB缓冲表会如何更改辅助索引的延迟写操作。通过将写操作缓冲的方式，
innodb_change_buffering（启动：直接设置；作用范围：全局；动态）
innodb_buffer_pool_size（启动：直接设置；作用范围：全局）
innodb_buffer_pool_load_at_startup（启动：直接设置；作用范围：全局
innodb_buffer_pool_instances（启动：直接设置；作用范围：全局）
提高的 IO性能。下表列出了各种可能的取值。
InnoDB 有时可以把它们分成一组，然后顺序地写入，而不是以随机方式写入；这样有利于
为 0~50。此变量是在 MySQL 5.6.2里引入的。
innodb_change_buffer_max_size（启动：直接设置；作用范围：全局；动态）
它指的是InnoDB用于缓冲表数据和索引的那个缓存的大小。默认大小为128MB。
MySQL5.6.3里引I入的。
innodb_buffer_pool_load_now（启动：直接设置；作用范围：全局；动态）
5.6.3
它指的是，InnoDB是否会在启动时从磁盘加载缓冲池。默认值为OFF。此变量是在MySQL
此变量是在MySQL5.6.3里引入的。
将此变量设置为ON，会导致InnoDB 中断当前正从磁盘加载的所有缓冲池。默认值为OFF。
innodb_buffer_pool_load_abort（启动：直接设置；作用范围：全局；动态）
MySQL5.5.4里引I入的。
buffer_pool_instances 的值进行选择，以便每个实例都至少为1 GB。此变量是在
划分为innodb_buffer_pool_instances 个区域。此变量的默认值是1（单个缓冲池），
它指的是，如果innodb_buffer_pool_size的值至少为1 GB，则需要将InnoDB缓冲池
ib_buffer_pool文件。此变量是在MySQL 5.6.3里引入的。
它指的是InnoDB 用于缓冲池转储和加载操作的那个文件的名字。默认为数据目录里的
innodb_buffer_pool_filename（启动：直接设置；作用范围：全局；动态）
将
最
MySQL5.6.3里引入的。
将此变量设置为ON，会使得InnoDB立即将缓冲池转储至磁盘。默认值为OFF。1
MySQL5.6.3里引I入的。
它指的是，InnoDB 是否会在关闭时将缓冲池转储至磁盘。默认值为OFF。此变量是在
innodb_buffer_pool_dump_at_shutdown（启动：直接设置；作用范围：全局；动态）
是安全的。）
但是模式2分配的值是不确定的，因此该模式是不安全的。（所有的模式对基于行的复制都
是它们不一定连续。这也会对复制产生影响。模式0和1对基于语句的复制来讲是安全的；
为它允许在语句之间交叉分配各个值，虽然这样对于某个给定的语句生成的值是单调，
句，模式0和1可以保证生成的值在该语句内部是连续的。模式2无法保证这种连续性：
锁定的扩展性、
认值）和2。一般情况下，当有多个事务需要同时生成自动增量值时，使用这些值可以增加
此变量控制的是InnoDB用于生成AUTO_INCREMENT 值的锁定算法。允许取值包括0、1(默
增加那个表空间的大小。指定值的单位为MB。此变量的默认值是8，最大值是1000。
当某个自扩展表空间快要被填满时，ImnoDB 存储引擎将自动使用此变量的值作为递增量去
指的是InnoDB为更改缓冲区预留的缓冲池最大百分比例。默认值为25。允许的取值范围
将此变量设置为ON，会导致InnoDB立即从磁盘加载缓冲池。默认值为OFF。此变量是在
最大值是 64。为达到最好的效果，需要对 innodb_buffer_pool_size 和innodb