 4
 4.5
 5
Figure 5: When traf(cid:2)c deviates from TM by a margin, TeXCP stays
within a few percent of the optimal max-utilization; OSPF-TEBase and
OSPF-TEM ulti(cid:0)T M lead to much larger max-utilization.
Margin
InvCap OSPF-TE_base OSPF-TE_failures
TeXCP
l
a
m
i
t
p
O
o
t
n
o
i
t
a
z
i
l
i
t
U
-
x
a
M
f
o
o
i
t
a
R
4
3.5
3
2.5
2
1.5
1
Ebone
Exodus
Abovenet
AT&T
Figure 6: Under failures, TeXCP’s max-utilization is within a few per-
cent of the optimal; InvCap, OSPF-TEBase, and OSPF-TEF ailures
become highly suboptimal. Figure shows the 90th percentile (thick)
and maximums (thin) taken over multiple TMs.
Genuity
Tiscali
Sprint
Fig. 4 plots the ratio of the max-utilization under a particular
technique to the optimal max-utilization for that topology and TM.
The (cid:2)gure shows both the average taken over 40 different TMs
and the maximum value. The (cid:2)gure shows that using a TE tech-
nique such as OSPF-TE or TeXCP can substantially reduce the
network utilization. For example, for the AT&T network, using In-
vCap weights produces a network utilization that is on average 60%
higher than the optimal. Using OSPF-TE produces an average net-
work utilization that is 20% higher than the optimal, whereas with
TeXCP the value is less than 5% higher than the optimal. These
results have direct implications on the required link capacity(cid:150)i.e.,
under static demands, a network that runs TeXCP can support the
same required demands, under the same utilization, but with 55%
less capacity than a network that uses InvCap weights and 15% less
capacity than a network that uses OSPF-TE.
One might wonder why OSPF-TE does not achieve optimal max-
utilization though the traf(cid:2)c demands are static.
Indeed, (cid:2)nding
optimal link weights that minimize the max-utilization is NP-hard.
OSPF-TE uses a heuristic to search for a good weight setting [15],
but is not guaranteed to (cid:2)nd the optimal one. TeXCP stays within
a few percent of the optimal max-utilization; the small deviations
from optimal are likely due to the limited number of paths.
(b) Deviation from Long Term Demands: OSPF-TE does not
rebalance the load when the realtime demands deviate from the
long term averages provided in the TM. Theoretically, one can
compute new weights using the new traf(cid:2)c demands, but in real-
ity computing new weights takes time and accurately estimating
changing traf(cid:2)c matrices is dif(cid:2)cult [15]. More importantly, the
new weights have to be pushed to the routers and the OSPF routing
protocol has to rerun and converge to new routes. Rerunning OSPF
with new weights may cause transient loops and substantial con-
gestion [8] before routes converge, so ISPs avoid it if possible [20].
To cope with deviations from the TM, OSPF-TE uses a special
tweak which we call OSPF-TEM ulti(cid:0)T M. This technique opti-
mizes the link weights for multiple traf(cid:2)c matrices at once (e.g.,
the peak hour TM, the off-peak TM, . . . ).
Fig. 5 compares the max-utilization under OSPF-TEBase,
OSPF-TEM ulti(cid:0)T M, and TeXCP as the actual traf(cid:2)c demands de-
viate from the long term average demands expressed in the traf-
(cid:2)c matrix. The (cid:2)gure is for the AT&T topology. The x-axis is
the deviation margin; e.g., a margin of 1.5 means that the actual
demands are randomly chosen to be at most 50% away from the
long term demands [6]. The graph shows the average and standard
deviation, over 40 TMs with that margin. The (cid:2)gure shows that
as the actual traf(cid:2)c deviates from the traf(cid:2)c matrix (long term de-
mands), the performance of OSFP-TEBase degrades substantially.
This is expected as OSFP-TE is an of(cid:3)ine protocol that cannot re-
act to changing demands. In contrast, TeXCP reacts in realtime
to the actual demands and its performance is always near optimal
independent of the margin. OSPF-TEM ulti(cid:0)T M is only marginally
better than OSPF-TEBase.
(c) Failures: ISPs provision their network with enough capac-
ity to support the demands if a failure occurs (i.e., max-utilization
stays (cid:28) 100%). We investigate the amount of over-provisioning
required, under various TE techniques.
Although the OSPF intra-domain routing protocol will re-route
around an unavailable link, it does not rebalance the load after a
failure. Thus, after a failure, the max-utilization may become very
suboptimal. OSPF-TEF ailures [16] addresses this issue by opti-
mizing the weights over a set of critical single link failures, those
that cause the largest increase in max-utilization upon failure.7
We compare the performance of TeXCP, OSPF-TEF ailures, and
OSPF-TEBase, under failures. Fig. 6 plots the ratio of the max-
utilization under a particular TE technique to the optimal max-
utilization, for single link failures. The (cid:2)gure plots the 90th per-
centile and the maximum value taken over all possible single link
failures in the given topology. The (cid:2)gure shows that the 90th per-
centile of max-utilization under a single link failure is much higher
with OSFP-TE than TeXCP.8 These results have interesting impli-
cations for capacity provisioning. The (cid:2)gure reveals that for the
same level of failure provisioning, an ISP that uses OSPF-TE needs
to buy double or triple the capacity needed under TeXCP. Simula-
tions of multiple links failures (i.e., SRLG failures) show similar
results, which we do not report for lack of space.
In summary:
(cid:15) For the same traf(cid:2)c demands, a network that uses TeXCP can
support the same utilization and failure resilience as a network
that uses traditional of(cid:3)ine TE, but with a half or a third the ca-
pacity. This creates a major cost reduction for the ISP.
(cid:15) The max-utilization under TeXCP is always within a few per-
cent of optimal, independent of failures or deviations from the
TM. In comparison, InvCap results in an average max-utilization
60% higher than optimal in the base case, and twice as high un-
der failures. OSPF-TE, achieves a max-utilization that is about
20% away from optimal in the base case, but is highly sensi-
tive to failures and deviations from the TM, sometimes creating
a utilization that is twice or thrice the optimal.
5.5 Comparison With MATE
We also compare TeXCP with MATE, a prior online TE pro-
posal [12]. TeXCP borrows from MATE, and prior work on MPLS-
TE [26, 39], the idea of building multiple ingress-to-egress tunnels
and splitting traf(cid:2)c among them. TeXCP, however, differs from
7Optimizing over (cid:2)ve most critical failures, as recommended by [16], takes about one
hour on a 2GHz, 4GB RAM P4 machine.
8The averages over all link failures, represented by the lower end of the thin error bars,
also show the same trends.
I1
I2
I3
L1
L2
L3
E1
E2
E3
Figure 7: Topology for comparing TeXCP against MATE.
d
a
o
L
d
e
r
e
f
f
O
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
Cross Traffic on Link 1
Cross Traffic on Link 2
Cross Traffic on Link 3
 0
 1000  2000  3000  4000  5000  6000  7000  8000
Time
Figure 8: Changes in cross traf(cid:2)c during the MATE simulation.
1.4
1.2
1
0.8
0.6
0.4
0.2
d
a
o
L
d
e
r
e
f
f
O
0
0
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
d
a
o
L
d
e
r
e
f
f
O
Aggregate Traffic on Link 1
Aggregate Traffic on Link 2
Aggregate Traffic on Link 3
1000
2000
3000
4000
Time (sec)
5000
6000
7000
8000
a) MATE, reproduced from [12]
Aggregate Traffic on Link 1
Aggregate Traffic on Link 2
Aggregate Traffic on Link 3
 0
 1000  2000  3000  4000  5000  6000  7000  8000
Time
b) TeXCP
Figure 9: Comparison between the performance of TeXCP and MATE
over the topology in Fig. 7 and for the cross traf(cid:2)c in Fig 8. TeXCP
converges faster to the optimal balance and exhibits a smoother curve.
MATE in a few important aspects. First, the TeXCP load bal-
ancer (Eq. 5) minimizes max-utilization while MATE minimizes
the sum of the delays in the network. Unless the network is con-
gested, the delay on a path is constant and equal to propagation
delay. Second, TeXCP is fully distributed whereas MATE’s simu-
lations assume that ingress nodes have instantaneous knowledge of
the whole network state. On the other hand, MATE does not need
the core routers to report link utilization to ingresses.
We compare the performance of TeXCP with MATE. MATE’s
simulation code is proprietary. So, we compare TeXCP against
MATE’s published results [12], which we reproduce here for con-
n
o
i
t
a
z
i
l
i
t
U
k
n
L
i
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
-20
TeXCP converges
Link Fails
-10
 0
 10
 20
 30
 40
 50
Time(s)
Figure 10: Changes in link utilization during TeXCP convergence for
a representative sample of links in the Sprint topology. Both the maxi-
mum utilization in the network and the individual link utilization con-
verge smoothly without oscillations.
l
s
e
p
m
a
S
f
o
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4