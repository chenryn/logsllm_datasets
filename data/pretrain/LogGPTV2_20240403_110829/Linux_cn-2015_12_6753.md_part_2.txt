### 注意事项
#### SELinux，AppArmor，和 GrSecurity/PaX
 强制访问控制   （    Mandatory Access Controls，MAC    ） 或者 基于角色的访问控制   （    Role-Based Access Controls，RBAC    ） 是一个用在老式 POSIX 系统的基于用户或组的安全机制扩展。现在大多数发行版已经捆绑了 MAC/RBAC 系统（Fedora，Ubuntu），或通过提供一种机制一个可选的安装后步骤来添加它（Gentoo，Arch，Debian）。显然，强烈建议您选择一个预装 MAC/RBAC 系统的发行版，但是如果你对某个没有默认启用它的发行版情有独钟，装完系统后应计划配置安装它。
应该坚决避免使用不带任何 MAC/RBAC 机制的发行版，像传统的 POSIX 基于用户和组的安全在当今时代应该算是考虑不足。如果你想建立一个 MAC/RBAC 工作站，通常认为 AppArmor 和 PaX 比 SELinux 更容易掌握。此外，在工作站上，很少有或者根本没有对外监听的守护进程，而针对用户运行的应用造成的最高风险，GrSecurity/PaX *可能* 会比SELinux 提供更多的安全便利。
#### 发行版安全公告
大多数广泛使用的发行版都有一个给它们的用户发送安全公告的机制，但是如果你对一些机密感兴趣，去看看开发人员是否有见于文档的提醒用户安全漏洞和补丁的机制。缺乏这样的机制是一个重要的警告信号，说明这个发行版不够成熟，不能被用作主要管理员的工作站。
#### 及时和可靠的安全更新
多数常用的发行版提供定期安全更新，但应该经常检查以确保及时提供关键包更新。因此应避免使用 附属发行版   （    spin-off    ） 和“社区重构”，因为它们必须等待上游发行版先发布，它们经常延迟发布安全更新。
现在，很难找到一个不使用加密签名、更新元数据或二者都不使用的发行版。如此说来，常用的发行版在引入这个基本安全机制就已经知道这些很多年了（Arch，说你呢），所以这也是值得检查的。
#### 发行版支持 UEFI 和安全引导
检查发行版是否支持 UEFI 和安全引导。查明它是否需要导入额外的密钥或是否要求启动内核有一个已经被系统厂商信任的密钥签名（例如跟微软达成合作）。一些发行版不支持 UEFI 或安全启动，但是提供了替代品来确保 防篡改   （    tamper-proof    ） 或 防破坏   （    tamper-evident    ） 引导环境（[Qubes-OS](https://qubes-os.org/) 使用 Anti Evil Maid，前面提到的）。如果一个发行版不支持安全引导，也没有防止引导级别攻击的机制，还是看看别的吧。
#### 全磁盘加密
全磁盘加密是保护静止数据的要求，大多数发行版都支持。作为一个选择方案，带有自加密硬盘的系统也可以用（通常通过主板 TPM 芯片实现），并提供了类似安全级别而且操作更快，但是花费也更高。
发行版安装指南
-------
所有发行版都是不同的，但是也有一些一般原则：
### 检查清单
* [ ] 使用健壮的密码全磁盘加密（LUKS） *(关键)*
* [ ] 确保交换分区也加密了 *(关键)*
* [ ] 确保引导程序设置了密码（可以和LUKS一样） *(关键)*
* [ ] 设置健壮的 root 密码（可以和LUKS一样） *(关键)*
* [ ] 使用无特权账户登录，作为管理员组的一部分 *(关键)*
* [ ] 设置健壮的用户登录密码，不同于 root 密码 *(关键)*
### 注意事项
#### 全磁盘加密
除非你正在使用自加密硬盘，配置你的安装程序完整地加密所有存储你的数据与系统文件的磁盘很重要。简单地通过自动挂载的 cryptfs  环   （    loop    ） 文件加密用户目录还不够（说你呢，旧版 Ubuntu），这并没有给系统二进制文件或交换分区提供保护，它可能包含大量的敏感数据。推荐的加密策略是加密 LVM 设备，以便在启动过程中只需要一个密码。
`/boot`分区将一直保持非加密，因为引导程序需要在调用 LUKS/dm-crypt 前能引导内核自身。一些发行版支持加密的`/boot`分区，比如 [Arch](http://www.pavelkogan.com/2014/05/23/luks-full-disk-encryption/)，可能别的发行版也支持，但是似乎这样增加了系统更新的复杂度。如果你的发行版并没有原生支持加密`/boot`也不用太在意，内核镜像本身并没有什么隐私数据，它会通过安全引导的加密签名检查来防止被篡改。
#### 选择一个好密码
现代的 Linux 系统没有限制密码口令长度，所以唯一的限制是你的偏执和倔强。如果你要启动你的系统，你将大概至少要输入两个不同的密码：一个解锁 LUKS ，另一个登录，所以长密码将会使你老的更快。最好从丰富或混合的词汇中选择2-3个单词长度，容易输入的密码。
优秀密码例子（是的，你可以使用空格）：
* nature abhors roombas
* 12 in-flight Jebediahs
* perdon, tengo flatulence
如果你喜欢输入可以在公开场合和你生活中能见到的句子，比如：
* Mary had a little lamb
* you're a wizard, Harry
* to infinity and beyond
如果你愿意的话，你也应该带上最少要 10-12个字符长度的非词汇的密码。
除非你担心物理安全，你可以写下你的密码，并保存在一个远离你办公桌的安全的地方。
#### Root，用户密码和管理组
我们建议，你的 root 密码和你的 LUKS 加密使用同样的密码（除非你共享你的笔记本给信任的人，让他应该能解锁设备，但是不应该能成为 root 用户）。如果你是笔记本电脑的唯一用户，那么你的 root 密码与你的 LUKS 密码不同是没有安全优势上的意义的。通常，你可以使用同样的密码在你的 UEFI 管理，磁盘加密，和 root 登录中 -- 知道这些任意一个都会让攻击者完全控制您的系统，在单用户工作站上使这些密码不同，没有任何安全益处。
你应该有一个不同的，但同样强健的常规用户帐户密码用来日常工作。这个用户应该是管理组用户（例如`wheel`或者类似，根据发行版不同），允许你执行`sudo`来提升权限。
换句话说，如果在你的工作站只有你一个用户，你应该有两个独特的、 强健   （    robust    ） 而 强壮   （    strong    ） 的密码需要记住：
**管理级别**，用在以下方面：
* UEFI 管理
* 引导程序（GRUB）
* 磁盘加密（LUKS）
* 工作站管理（root 用户）
**用户级别**，用在以下：
* 用户登录和 sudo
* 密码管理器的主密码
很明显，如果有一个令人信服的理由的话，它们全都可以不同。
安装后的加固
------
安装后的安全加固在很大程度上取决于你选择的发行版，所以在一个像这样的通用文档中提供详细说明是徒劳的。然而,这里有一些你应该采取的步骤:
### 检查清单
* [ ] 在全局范围内禁用火线和雷电模块 *(关键)*
* [ ] 检查你的防火墙，确保过滤所有传入端口 *(关键)*
* [ ] 确保 root 邮件转发到一个你可以收到的账户 *(关键)*
* [ ] 建立一个系统自动更新任务，或更新提醒 *(中等)*
* [ ] 检查以确保 sshd 服务默认情况下是禁用的 *(中等)*
* [ ] 配置屏幕保护程序在一段时间的不活动后自动锁定 *(中等)*
* [ ] 设置 logwatch *(中等)*
* [ ] 安装使用 rkhunter *(中等)*
* [ ] 安装一个 入侵检测系统   （    Intrusion Detection System    ）  *(中等)*
### 注意事项
#### 将模块列入黑名单
将火线和雷电模块列入黑名单，增加一行到`/etc/modprobe.d/blacklist-dma.conf`文件：
```
blacklist firewire-core
blacklist thunderbolt
```
重启后的这些模块将被列入黑名单。这样做是无害的，即使你没有这些端口（但也不做任何事）。
#### Root 邮件
默认的 root 邮件只是存储在系统基本上没人读过。确保你设置了你的`/etc/aliases`来转发 root 邮件到你确实能读取的邮箱，否则你也许错过了重要的系统通知和报告：
```
# Person who should get root's mail
root:          PI:EMAIL
```
编辑后这些后运行`newaliases`，然后测试它确保能投递到，像一些邮件供应商将拒绝来自不存在的域名或者不可达的域名的邮件。如果是这个原因，你需要配置邮件转发直到确实可用。
#### 防火墙，sshd，和监听进程
默认的防火墙设置将取决于您的发行版，但是大多数都允许`sshd`端口连入。除非你有一个令人信服的合理理由允许连入 ssh，你应该过滤掉它，并禁用 sshd 守护进程。
```
systemctl disable sshd.service
systemctl stop sshd.service
```
如果你需要使用它，你也可以临时启动它。