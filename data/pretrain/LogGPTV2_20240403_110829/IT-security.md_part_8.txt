netdiscover -r 192.168.1.1/24
Nikto
Nikto is a good tool to scan webservers. It is very intrusive.
nikto -host 192.168.1.101
References
https://blog.bugcrowd.com/discovering-subdomains
https://high54security.blogspot.cl/2016/01/recon-ng-and-power-to-crawl-trough.html
83
Port Scanning
Port Scanning
Port Scanning
TLDR
# Stealthy
nmap -sS 10.11.1.X
# Scan all ports, might take a while.
nmap 10.11.1.X -p-
# Scan for UDP
nmap 10.11.1.X -sU
unicornscan -mU -v -I 10.11.1.X
# Scan for version, with NSE-scripts and trying to identify OS
nmap 10.11.1.X -sV -sC -O
# All out monsterscan
nmap -vvv -Pn -A -iL listOfIP.txt
# Fast scan
nmap 10.11.1.X -F
# Only scan the 100 most common ports
nmap 10.11.1.X --top-ports 100
Nmap
Now that you have gathered some IP addresses from your subdomain scanning it is time to scan those
addresses. You just copy-paste those addresses and add them to a file, line by line. Then you can scan
all of them with nmap at the same time. Using the -iL flag.
Basics - tcp-connect scan
Okay, so a bit of the basics of Nmap and how it works. When one machine initiate a connection with
another machine using the transmission-control protocol (tcp) it performs what is know as a three-
way handshake. That means:
machine1 sends a syn packet to machine2
machine2 send a syn-ack packet to machine1
machine1 sends a ack packet to machine2.
If machine2 responds with a syn-ack we know that that port is open. This is basically what nmap does
when it scans for a port. If machine1 omits the last ack packet the connection is not made. This can be
a way to make less noise.
This is the default mode for nmap. If you do not add any flags and scan a machine this is the type of
84
Port Scanning
connection it creates.
"Stealthy" -sS
By adding the -sS flag we are telling nmap to not finalize the three way handshake. It will send a
syn, receive syn-ack (if the port is open), and then terminate the connection. This used to be
considered stealthy before, since it was often not logged. However it should not be considered
stealthy anymore.
In the flag I imagine that the first s stands for scan/scantype and the second S stands for syn.
So -sS can be read as scantype syn
UDP scan
UDP is after TCP the most common protocol. DNS (53), SNMP (161/162) and DHCP (67/68) are
some common ones. Scanning for it is slow and unreliable.
-sU
Output scan to a textfile
Not all output works with grepable format. For example NSE does not work with grepable. So you
might want to use xml instead.
# To text-file
-oN nameOfFile
# To grepable format
-oG nameOfFile
# To xml
-oX nameOfFile
Scan an entire IP-range
You might find that a site has several machines on the same ip-range. You can then use nmap to scan
the whole range.
The -sn flag stops nmap from running port-scans. So it speeds up the process.
nmap -vvv -sn 201.210.67.0/24
You can also specify a specific range, like this
nmap -sP 201.210.67.0-100
`
Sort out the machines that are up
So let's say you find that 40 machine exists in that range. We can use grep to output those IP:s.
First let's find the IPs that were online. Ip-range is the output from previous command. You can of
course combine them all.
85
Port Scanning
cat ip-range.txt | grep -B 1 "Host is up"
Now let's sort out the ips from that file.
grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' ip-range.txt > only-ip.txt
Now you can input all those ips to nmap and scan them.
Scan a range and output if a specific port is open
Nmap has a command to make the output grepable.
nmap -vvv -p 80 201.210.67.0-100 -oG - | grep 80/open
Nmap scripts
This chapter could also be placed in Vulnerability-analysis and Exploitation. Because nmap scripting
is a really versatile tool that can do many things. Here we will focus on it's ability to retrieve
information that can be useful in the process to find vulnerabilities
First locate the nmap scripts. Nmap scripts end in .nse. For Nmap script engine.
locate *.nse
The syntax for running a script is:
nmap --script scriptname 192.168.1.101
To find the "man"-pages, the info about a script we write:
nmap -script-help http-vuln-cve2013-0156.nse
Run multiple scripts
Can be run by separating the script with a comma
nmap --script scriptone.nse,sciprt2.nse,script3.nse 192.168.1.101
Run the default scripts
nmap -sC example.com
Metasploit
We can do port-scanning with metasploit and nmap. And we can even integrate nmap into metasploit.
This might be a good way to keep your process neat and organized.
db_nmap
You can run db_nmap and all the output will be stored in the metasploit database and available with
hosts
services
You can also import nmap scans. But you must first output it in xml-format with the following flag
86
Port Scanning
nmap 192.168.1.107 -oX result.xml
Good practice would be to output the scan-results in xml, grepable and normal format. You do that
with
nmap 192.168.1.107 -oA result
Then you can load it into the database with the following command.
db_import /path/to/file.xml
Metasploit PortScan modules
If you for some reason don't have access to nmap you can run metasploits modules that does
portscans
use auxiliary/scanner/portscan/
87
Vulnerability analysis
Vulnerability analysis
Vulnerability analysis
So now you have done your recon and found services and their versions. You have looked in every
corner of the target. Enumerated subdomains, scanned them, browsed through the webpage looking
everywhere.
So, now it is time to see if any of these services contains any vulnerabilities.
88
Non-HTTP Vulnerabilities
Non-HTTP Vulnerabilities
89
Common ports\/services and how to use them
Common ports\/services and how to use them
Common ports/services and how to use them
I will try to make this chapter into a reference library. So that you can just check in this chapter to see
common ways to exploit certain common services. I will only discuss the most common, since there
are quite a few.
This is fucking awesome. if there is any ports here you dont find check out this guide.
http://www.0daysecurity.com/penetration-testing/enumeration.html
Port XXX - Service unknown
If you have a port open with unkown service you can do this to find out which service it might be.
amap -d 192.168.19.244 8000
Port 21 - FTP
Connect to the ftp-server to enumerate software and version
ftp 192.168.1.101
nc 192.168.1.101 21
Many ftp-servers allow anonymous users. These might be misconfigured and give too much access,
and it might also be necessary for certain exploits to work. So always try to log in with
anonymous:anonymous.
Remember the binary and ascii mode!
If you upload a binary file you have to put the ftp-server in binary mode, otherwise the file will
become corrupted and you will not be able to use it! The same for text-files. Use ascii mode for them!
You just write binary and ascii to switch mode.
Port 22 - SSH
SSH is such an old and fundamental technology so most modern version are quite hardened. You can
find out the version of the SSH either but scanning it with nmap or by connecting with it using nc.
nc 192.168.1.10 22
It returnes something like this: SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu1
This banner is defined in RFC4253, in chapter 4.2 Protocol Version Exchange.
http://www.openssh.com/txt/rfc4253.txt The protocol-version string should be defined like this: SSH-
protoversion-softwareversion SP comments CR LF Where comments is optional.
And SP means space, and CR (carriege return) and LF (Line feed) So basically the comments should
be separated by a space.
90
Common ports\/services and how to use them
Port 23 - Telnet
Telnet is considered insecure mainly because it does not encrypt its traffic. Also a quick search in
exploit-db will show that there are various RCE-vulnerabilities on different versions. Might be worth
checking out.
Brute force it
You can also brute force it like this:
hydra -l root -P /root/SecLists/Passwords/10_million_password_list_top_100.txt 192.168.1.101 telnet
Port 25 - SMTP
SMTP is a server to server service. The user receives or sends emails using IMAP or POP3. Those
messages are then routed to the SMTP-server which communicates the email to another server. The
SMTP-server has a database with all emails that can receive or send emails. We can use SMTP to
query that database for possible email-addresses. Notice that we cannot retrieve any emails from
SMTP. We can only send emails.
Here are the possible commands
HELO -
EHLO - Extended SMTP.
STARTTLS - SMTP communicted over unencrypted protocol. By starting TLS-session we encrypt the traffic.
RCPT - Address of the recipient.
DATA - Starts the transfer of the message contents.
RSET - Used to abort the current email transaction.
MAIL - Specifies the email address of the sender.
QUIT - Closes the connection.
HELP - Asks for the help screen.
AUTH - Used to authenticate the client to the server.
VRFY - Asks the server to verify is the email user's mailbox exists.
Manually
We can use this service to find out which usernames are in the database. This can be done in the
following way.
nc 192.168.1.103 25
220 metasploitable.localdomain ESMTP Postfix (Ubuntu)
VRFY root
252 2.0.0 root
VRFY roooooot
550 5.1.1 : Recipient address rejected: User unknown in local recipient table
Here we have managed to identify the user root. But roooooot was rejected.
VRFY, EXPN and RCPT can be used to identify users.
Telnet is a bit more friendly some times. So always use that too
telnet 10.11.1.229 25
91
Common ports\/services and how to use them
Automatized
This process can of course be automatized
Check for commands
nmap -script smtp-commands.nse 192.168.1.101
smtp-user-enum
The command will look like this. -M for mode. -U for userlist. -t for target
smtp-user-enum -M VRFY -U /root/sectools/SecLists/Usernames/Names/names.txt -t 192.168.1.103
Mode ..................... VRFY
Worker Processes ......... 5
Usernames file ........... /root/sectools/SecLists/Usernames/Names/names.txt
Target count ............. 1
Username count ........... 8607
Target TCP port .......... 25
Query timeout ............ 5 secs
Target domain ............
######## Scan started at Sun Jun 19 11:04:59 2016 #########
192.168.1.103: Bin exists
192.168.1.103: Irc exists
192.168.1.103: Mail exists
192.168.1.103: Man exists
192.168.1.103: Sys exists
######## Scan completed at Sun Jun 19 11:06:51 2016 #########
5 results.
8607 queries in 112 seconds (76.8 queries / sec)
Metasploit
I can also be done using metasploit
msf > use auxiliary/scanner/smtp/smtp_enum
msf auxiliary(smtp_enum) > show options
Module options (auxiliary/scanner/smtp/smtp_enum):
Name Current Setting Required Description
---- --------------- -------- -----------
RHOSTS yes The target address range or CIDR identifier
RPORT 25 yes The target port
THREADS 1 yes The number of concurrent threads
UNIXONLY true yes Skip Microsoft bannered servers when testing unix users
USER_FILE /usr/share/metasploit-framework/data/wordlists/unix_users.txt yes The file that contains a list of probable users accounts.
Here are the documentations for SMTP https://cr.yp.to/smtp/vrfy.html
92
Common ports\/services and how to use them
http://null-byte.wonderhowto.com/how-to/hack-like-pro-extract-email-addresses-from-smtp-server-
0160814/
http://www.dummies.com/how-to/content/smtp-hacks-and-how-to-guard-against-them.html
http://pentestmonkey.net/tools/user-enumeration/smtp-user-enum
https://pentestlab.wordpress.com/2012/11/20/smtp-user-enumeration/
Port 69 - TFTP
This is a ftp-server but it is using UDP.
Port 80 - HTTP
Info about web-vulnerabilities can be found in the next chapter HTTP - Web
Vulnerabilities.
We usually just think of vulnerabilities on the http-interface, the web page, when we think of port 80.
But with .htaccess we are able to password protect certain directories. If that is the case we can
brute force that the following way.
Password protect directory with htaccess
Step 1
Create a directory that you want to password-protect. Create .htaccess tile inside that directory.
Content of .htaccess:
AuthType Basic
AuthName "Password Protected Area"
AuthUserFile /var/www/html/test/.htpasswd
Require valid-user
Create .htpasswd file
htpasswd -cb .htpasswd test admin
service apache2 restart
This will now create a file called .htpasswd with the user: test and the password: admin
If the directory does not display a login-prompt, you might have to change the apache2.conf file. To
this:
AllowOverride AuthConfig
Brute force it
Now that we know how this works we can try to brute force it with medusa.
medusa -h 192.168.1.101 -u admin -P wordlist.txt -M http -m DIR:/test -T 10
93
Common ports\/services and how to use them
Port 88 - Kerberos
Kerberos is a protocol that is used for network authentication. Different versions are used by *nix and
Windows. But if you see a machine with port 88 open you can be fairly certain that it is a Windows
Domain Controller.
If you already have a login to a user of that domain you might be able to escalate that privilege.
Check out: MS14-068
Port 110 - Pop3
This service is used for fetching emails on a email server. So the server that has this port open is
probably an email-server, and other clients on the network (or outside) access this server to fetch their
emails.
telnet 192.168.1.105 110
USER PI:EMAIL
PASS admin
# List all emails
list
# Retrive email number 5, for example
retr 5
Port 111 - Rpcbind
RFC: 1833
Rpcbind can help us look for NFS-shares. So look out for nfs. Obtain list of services running with
RPC:
rpcbind -p 192.168.1.101
Port 119 - NNTP
Network time protocol. It is used synchronize time. If a machine is running this server it might work
as a server for synchronizing time. So other machines query this machine for the exact time.
An attacker could use this to change the time. Which might cause denial of service and all around
havoc.
Port 135 - MSRPC
This is the windows rpc-port. https://en.wikipedia.org/wiki/Microsoft_RPC
Enumerate
nmap 192.168.0.101 --script=msrpc-enum
msf > use exploit/windows/dcerpc/ms03_026_dcom
94
Common ports\/services and how to use them
Port 139 and 445- SMB/Samba shares
Samba is a service that enables the user to share files with other machines. It has interoperatibility,
which means that it can share stuff between linux and windows systems. A windows user will just see
an icon for a folder that contains some files. Even though the folder and files really exists on a linux-
server.
Connecting
For linux-users you can log in to the smb-share using smbclient, like this:
smbclient -L 192.168.1.102
smbclient //192.168.1.106/tmp
smbclient \\\\192.168.1.105\\ipc$ -U john
smbclient //192.168.1.105/ipc$ -U john
If you don't provide any password, just click enter, the server might show you the different shares and
version of the server. This can be useful information for looking for exploits. There are tons of
exploits for smb.
So smb, for a linux-user, is pretty much like and ftp or a nfs.
Here is a good guide for how to configure samba:
https://help.ubuntu.com/community/How%20to%20Create%20a%20Network%20Share%20Via%20Samba%20Via%20CLI%20(Command-
line%20interface/Linux%20Terminal)%20-
%20Uncomplicated,%20Simple%20and%20Brief%20Way!
mount -t cifs -o user=USERNAME,sec=ntlm,dir_mode=0077 "//10.10.10.10/My Share" /mnt/cifs
Connectin with PSExec
If you have credentials you can use psexec you easily log in. You can either use the standalone binary
or the metasploit module.
use exploit/windows/smb/psexec
Scanning with nmap
Scanning for smb with Nmap