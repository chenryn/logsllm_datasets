measurements, the information that we save is constrained to
information in the SSL/TLS handshake without analysing any
later connection payload data. The campus administration has
approved this data collection. For the capability measurements,
only automatic server capability replies were recorded, which do
not contain any personally identiﬁable information. In addition,
the University IRB takes the position that IP addresses, which
were also recorded for this measurement, are not treated as
personally identiﬁable.
c) Unusual trafﬁc on standard ports: While analysing
the TLS extensions sent by clients, we noticed that there are
4,584 connections that send the Application-Layer Protocol
Negotiation (ALPN) extension, which is used to negotiate
protocols like HTTP2 and SPDY. Closer examination shows that
2,703 of these connections going to six servers indeed contain
values that point to them being HTTPS servers, running on
port 993 as well as 110. Manually connecting to a few of these
IP addresses shows that they are Squid proxy servers running
on non-standard ports. The remaining 1,881 connections to
780 hosts all have a destination port of 5223. The ALPN in
these cases indicates a value of apns-security-v1 and
apns-security-v2, terminating at nodes for the Apple
push notiﬁcation service. We are not sure what software causes
TABLE III: STARTTLS support and use. Passive monitoring
allows to differentiate server-side support from client–server
connections which were actually negotiated. S2S is short for
server-to-server, C2S for client-to-server.
Active probing
Passive monitoring
Protocol
SMTP
SUBMISSION
IMAP
POP3
IRC
XMPP, C2S
XMPP, S2S
Supported
& upgraded
30.82%
43.03%
50.91%
45.62%
0.14%
2.44%
0.39%
Supporting Offering
servers
Upgraded
connections connections
94%
97%
44%
62%
–
–
–
97%
99.9%
70%
73%
–
–
–
59%
98%
77%
55%
–
–
–
these connections. Further trafﬁc analysis also reveals that our
data set contains 3,728 certiﬁcates, from 9,082 connections to
110 servers, indicating that they are used by the Tor service.
We excluded all these servers from further analyses.
d) OCSP stapling: Another interesting ﬁnding is the
adoption of OCSP [31] stapling by email servers. OCSP
stapling allows TLS servers to send a proof that their certiﬁcate
is currently still valid and has not been revoked. This is
part of the TLS handshake if the client signals support for
the extension. We encountered 836 connections using OCSP
stapling, terminating at 64 different servers. The majority of
these (706 connections and 58 servers) were on port 993
(IMAPS).
IV. SECURITY ANALYSIS
We now analyse our datasets from a security perspective.
Speciﬁcally, we examine how appropriately servers are conﬁg-
ured. We look at basic parameters such as the ciphers in use
and also consider PKI-related speciﬁcs, such as whether the
offered certiﬁcates are valid and linkable to CAs present in
the Mozilla root store, the amount of key and certiﬁcate reuse,
and whether CAs follow best practices in issuing certiﬁcates.
We ﬁnally study authentication methods offered to clients.
Where applicable, we compare our ﬁndings for email and
chat protocols with results from our HTTPS scan.
A. Use of STARTTLS vs. direct SSL/TLS
As mentioned in Section II, email and chat protocols can be
secured with SSL/TLS either by using SSL/TLS on a dedicated
port or by upgrading a TCP connection via STARTTLS.
Table I shows how many hosts supported SSL/TLS directly.
We also measured support for STARTTLS in our active and
passive scans (see table III). Our data shows that, depending on
the application-layer protocol, about 30 to 51% servers offer
STARTTLS. The STARTTLS extension is also often used in
practice. While popular servers seem to support the extension
(and thus most connections contain an offer to use it), the results
for SMTP, IMAP, and POP3 do show that there is a signiﬁcant
number of servers without support. At least in the case of IMAP
and POP3, one can also see that, in a considerable number of
cases, connections are not upgraded although the server would
support it.
TABLE IV: Negotiated protocol versions from active scans
with SSL 3 activated and passive monitoring.
Version
SSL 3
TLS 1.0
TLS 1.1
TLS 1.2
Active probing
Negotiated with server
0.02%
39.26%
0.23%
60.48%
Passive monitoring
Observed connections
1.74%
58.79%
0.1%
39.37%
s
n
o
i
t
c
e
n
n
o
c
f
o
t
n
e
c
r
e
P
100
90
80
70
60
50
40
30
20
10
0
P
P
P
P
T
T
T
T
M
M
M
M
S
S
S
S
5
2
S
S
S
S
P
P
P
P
T
T
T
T
M
M
M
M
S
S
S
S
5
6
4
rc4
aes
dhe
ecdhe
P
P
P
A
A
A
M
M
M
I
I
I
3
4
1
S
S
S
P
P
P
A
A
A
M
M
M
I
I
I
3
9
9
3
3
3
P
P
P
O
O
O
P
P
P
0
1
1
S
S
S
S
3
3
3
3
P
P
P
P
O
O
O
O
P
P
P
P
5
9
9
S
S
S
S
2
2
2
2
C
C
C
C
P
P
P
P
P
P
P
P
M
M
M
M
X
X
X
X
2
2
2
5
I
I
I
I
N
N
N
N
O
O
O
O
S
S
S
S
S
S
S
S
M
M
M
M
B
B
B
B
U
U
U
U
S
S
S
S
I
I
I
I
7
8
5
Fig. 3: Use of PFS ciphers by port. Red and yellow indicate
that PFS is not used.
B. SSL/TLS versions—deployment and use
Ideally, only the latest version of TLS (1.2) should be used.
Previous versions, especially SSL 3, have vulnerabilities, many
of which are listed in RFC 7457 [44].
TABLE IV shows how often the different SSL/TLS protocol
versions were chosen by servers in active scans (in scans
that supported SSL 3). Note that we did not scan for SSL 2.
TABLE IV also shows protocol versions observed in use in
our passive monitoring dataset. No connections using SSL 2
were encountered.
Our result shows that just 0.03% of scanned servers only sup-
port the old and relatively insecure SSL 3—all others preferred
one of the stronger TLS versions. However, the percentage
of connections actually using SSL 3 in our passive dataset is
much higher (1.74%). There are two possible reasons for this.
Either clients connect preferentially to less secure servers—this
would not be in line with our results for STARTTLS support in
the previous section. Or there is a signiﬁcant number of clients
that offer SSL 3 only, e.g., because they are outdated.
C. Cipher use
In SSL/TLS, the server chooses the symmetric cipher to use,
based on a list of ciphers that the client suggests. Determining
which ciphers a server supports would require many connections
to test all ciphers individually. Given that many of those suites
may never be negotiated, this is a poor trade-off in terms of
good Internet citizenship versus lessons that can be learned.
We thus use passively monitored data to investigate which
ciphers are actually negotiated in practice. Due to the high
7
Servers
Connections
broken
expired
self−signed
verifiable
S
P
T
M
S
P
T
M
S
S