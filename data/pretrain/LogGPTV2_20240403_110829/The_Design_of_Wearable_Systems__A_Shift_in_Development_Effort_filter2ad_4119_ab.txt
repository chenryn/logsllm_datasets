Bringup does the defect count begin climbing again. Here,
as the design is exercised for the ﬁrst time, a large number
of defects are discovered. In fact, as Figure 3 shows, more
Spot defects were found in Bringup than in any other sec-
tion — 46% of the total. By Integration, most of the critical
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:38 UTC from IEEE Xplore.  Restrictions apply. 
d
n
u
o
f
s
t
c
e
f
e
d
e
v
i
t
a
u
m
u
c
l
180
160
140
120
100
80
60
40
20
0
R3
R3 integ’n
R3 bringup
R3 design
R2 operation
R2 integration
R2 bringup
R2 design
R1 integration
R2
R1 bringup
R1 design
100
0
200
300
400
500
600
700
days
s
y
a
d
35
30
25
20
15
10
5
0
R1
R2
R3
Regulators
JTAG/Flash Bootloader
Kernel
Figure 2. Spot defect discoveries.
Figure 4. Spot bringup milestones.
2: Bringup
related defects. Instead, the problems tend to be net assign-
ment errors, conﬁguration strapping pins tied to the wrong
logic level, or faulty glue logic. Once these basic defects are
identiﬁed and corrected in the ﬁrst hardware revision, sub-
sequent revisions pass through Bringup much more rapidly.
1: Design
3: Integration
4: Operation
4. Defect Observations
s
t
c
e
f
e
d
f
o
r
e
b
m
u
n
80
70
60
50
40
30
20
10
0
Figure 3. Spot defects by phase found.
defects have already been discovered, and the defect rate is
lowest in Operation.
To provide some insight into the relatively larger num-
ber of defects found in Bringup, Figure 4 shows the four
major milestones which mark the progress of Spot through
that phase. For each of the three Spot revisions, a count of
the total number of days to reach each milestone is given,
measured from the date of hardware availability. Gener-
ally, the voltage regulators come up quickly, although there
may continue to be adjustments later in the phase. The next
goal is to exercise the memory bus and ﬂash memory via
the JTAG test access port on the microprocessor; this is a
static test which can reveal many simple logic and net er-
rors. Once the ﬂash memory can be programmed, the next
test is to have the processor execute the bootloader, which
is the ﬁrst dynamic test of the memory. Finally, once the
serial port and SDRAM have been veriﬁed, the operating
system can be loaded, and the process moves to the Integra-
tion phase.
Figure 4 reveals that a relatively large amount of Bringup
time is spent resolving simple conﬁguration and control
logic errors. The JTAG and ﬂash programming milestone
exercises the memory interface very slowly, so any prob-
lems arising at this stage are unlikely to be subtle, timing-
The previous section organized information about Spot
defects according to the various phases of the design pro-
cess. An equally important view of defects is the design
aspect they affect. Figure 5 shows the 150 of 163 total Spot
defects which can be associated with the features previously
listed in Table 1. More than half of these defects could be
linked to the memory interface, a serial I/O subsystem, or
the power supply electronics. These three subsystems are
complex, and even overlap. For example, one of the sixteen
memory bus devices on Spot is the FireWire serial bus con-
troller; in addition, the Spot power supplies can be driven
from the FireWire bus.
Another interesting view of defects is the amount of de-
sign risk they reﬂect. For example, there exists a reference
y
r
o
m
e
M
s
t
c
e
e
d
f
f
o
r
e
b
m
u
n
60
50
40
30
20
10
0
O
/
I
l
a
i
r
e
S
l
y
p
p
u
S
r
e
w
o
P
r
o
s
s
e
c
o
r
P
o
e
d
V
i
y
r
e
t
t
a
B
i
o
d
u
A
g
n
i
r
o
t
i
n
o
M
y
g
r
e
n
E
D
M
H
l
s
t
o
S
d
r
a
C
Figure 5. Spot defects by subsystem.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:38 UTC from IEEE Xplore.  Restrictions apply. 
From Reference
Not From Reference
Circuit
Design
Schematic
Capture
Routing
Board
Fabrication
Board
Assembly
Board
Rework
Figure 6. Spot defects found in design ele-
ments from a reference implementation.
(a) Electronics.
(b) Manufacturing.
electronic schematic for the processor used in Spot, and
there is a reference version of the Linux kernel for that de-
sign. Some portions of the reference schematic and kernel
were reused in Spot, but most subsystems were either modi-
ﬁed from the reference, or were not present in the reference
at all. Figure 6 shows the relative proportion of defects ob-
served in Spot which could be directly traced to an equiva-
lent element of the reference design. These 90 defects gen-
erally exclude mechanics, manufacturing, and routing, as
these activities do not directly reuse elements of other de-
signs.
The representations of Figures 5 and 6 are tied closely
to the details of a speciﬁc design. A more general organi-
zation is shown in Figure 7, in which defects are decom-
posed according to their discipline, or type. Within each of
electronics, manufacturing, software, and mechanics there
is a non-uniform distribution of defects. This representa-
tion could be used for predicting what kind of developer
resources within each ﬁeld might be helpful. For exam-
ple, nearly all of the electronic design defects involve in-
correct circuits or errors in entering a good circuit into the
schematic editor. Most manufacturing problems could be
traced to the way in which the circuit boards were populated
or manually repaired. Software errors tended to be simple
value assignment problems such as bad register initializa-
tions, and relatively few bugs were traced to code written
outside of the project, such as the Linux kernel. There was a
greater variety of industrial design and mechanical defects,
but the majority of these involved some sort of conﬂict be-
tween component placement and the housing; improved 3D
visualization capabilities might have been helpful in this as-
pect of the design.
5. Orthogonal Defect Classiﬁcation
Section 3 provided a time-based view of development
effort, while Section 4 focused on subsystems and the per-
discipline type of defects. In this section, we combine these
two approaches using a multidimensional defect categoriza-
tion system originated by IBM for software development.
Orthogonal Defect Classiﬁcation [4, 5] tracks changes in
the distributions of several defect attributes throughout
the course of a development process. Given a properly-
Algorithm
Assignment
External
Layout
Component
Choice
Assembly
Housing
Cabling
(c) Software.
(d) Mechanics.
s
t
c
e
f
e
d
f
o
r
e
b
m
u
n
80
70
60
50
40
30
20
10
0
Electronics
Manufacturing
Mechanics
Software
General
(e) Type magnitudes.
Figure 7. Spot defect types.
calibrated ODC, automated tools can be used in-process to
ﬂag deviations from expected defect discoveries.
In this paper, we are attempting to reﬁne a variant
of ODC for electromechanical systems, introduced in [1],
which classiﬁes defects along six dimensions. The original
work developed a categorization scheme based on observed
defect data for V¯u·Man 2R and Navigator 2. In general, we
were able to reuse this scheme to interpret the Spot defect
data. In future work, we hope to apply ODC in-process to
test the usefulness of this categorization.
We begin the presentation of 82 V¯u·Man 2R and Navi-
gator 2 defects, and 163 Spot defects, with a defect attribute
used in all comparisons: phase found. The values of this
attribute – Design, Bringup, Integration, and Operation –
∗
have already been presented.
The second attribute, type, was presented in the previous
section; a comparison of type distributions for the two pe-
∗
In [1], the ﬁrst two phases were “Conﬁguration” and “Detailed De-
sign.” These have been renamed to better reﬂect the activities they encom-
pass.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:38 UTC from IEEE Xplore.  Restrictions apply. 
s
t
c
e
f
e
d
f
o
r
e
b
m
u
n
s
t
c
e
f
e
d
f
o
r
e
b
m
u
n
20
15
10
5
0
35
30
25
20
15
10
5
0