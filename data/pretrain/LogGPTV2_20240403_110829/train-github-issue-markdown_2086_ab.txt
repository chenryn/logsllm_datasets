        tables:
          bmsql_config:
            actualDataNodes: ds_0.bmsql_config
          bmsql_customer:
            actualDataNodes: ds_${0..4}.bmsql_customer
            # tableStrategy:
            #   standard:
            #     shardingColumn: c_id
            #     shardingAlgorithmName: t_bmsql_customer
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_customer_inline
                shardingColumn: c_id
          bmsql_district:
            actualDataNodes: ds_${0..4}.bmsql_district
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_district_inline
                shardingColumn: d_w_id
          bmsql_history:
            actualDataNodes: ds_${0..4}.bmsql_history
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_history_inline
                shardingColumn: h_w_id
          bmsql_item:
            actualDataNodes: ds_${0..4}.bmsql_item_${0..1}
            tableStrategy:
              standard:
                shardingColumn: i_im_id
                shardingAlgorithmName: t_bmsql_item
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_item_inline
                shardingColumn: i_id
          bmsql_new_order:
            actualDataNodes: ds_${0..4}.bmsql_new_order
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_new_order_inline
                shardingColumn: no_w_id
          bmsql_oorder:
            actualDataNodes: ds_${0..4}.bmsql_oorder
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_oorder_inline
                shardingColumn: o_w_id
          bmsql_order_line:
            actualDataNodes: ds_${0..4}.bmsql_order_line_${0..5}
            tableStrategy:
              standard:
                shardingColumn: ol_number
                shardingAlgorithmName: t_bmsql_order_line
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_order_line_inline
                shardingColumn: ol_w_id
          bmsql_stock:
            actualDataNodes: ds_${0..4}.bmsql_stock
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_stock_inline
                shardingColumn: s_w_id
          bmsql_warehouse:
            actualDataNodes: ds_${0..4}.bmsql_warehouse
            databaseStrategy:
              standard:
                shardingAlgorithmName: ds_bmsql_warehouse_inline
                shardingColumn: w_id
### bin/start.sh
    SERVER_NAME=ShardingSphere-Proxy
    cd `dirname $0`
    cd ..
    DEPLOY_DIR=`pwd`
    LOGS_DIR=${DEPLOY_DIR}/logs
    if [ ! -d ${LOGS_DIR} ]; then
        mkdir ${LOGS_DIR}
    fi
    STDOUT_FILE=${LOGS_DIR}/stdout.log
    EXT_LIB=${DEPLOY_DIR}/ext-lib
    CLASS_PATH=.:${DEPLOY_DIR}/lib/*:${EXT_LIB}/*
    JAVA_OPTS=" -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true "
    JAVA_MEM_OPTS=" -server -Xmx16g -Xms16g -Xmn8g -Xss1m -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 "
    MAIN_CLASS=org.apache.shardingsphere.proxy.Bootstrap
    print_usage() {
        echo "usage: start.sh [port] [config_dir]"
        echo "  port: proxy listen port, default is 3307"
        echo "  config_dir: proxy config directory, default is conf"
        exit 0
    }
    if [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then
        print_usage
    fi
    echo "Starting the $SERVER_NAME ..."
    if [ $# == 0 ]; then
        CLASS_PATH=${DEPLOY_DIR}/conf:${CLASS_PATH}
    fi
    if [ $# == 1 ]; then
        MAIN_CLASS=${MAIN_CLASS}" "$1
        echo "The port is $1"
        CLASS_PATH=${DEPLOY_DIR}/conf:${CLASS_PATH}
    fi
    if [ $# == 2 ]; then
        MAIN_CLASS=${MAIN_CLASS}" "$1" "$2
        echo "The port is $1"
        echo "The configuration path is $DEPLOY_DIR/$2"
        CLASS_PATH=${DEPLOY_DIR}/$2:${CLASS_PATH}
    fi
    echo "The classpath is ${CLASS_PATH}"
    nohup java ${JAVA_OPTS} ${JAVA_MEM_OPTS} -classpath ${CLASS_PATH} ${MAIN_CLASS} >> ${STDOUT_FILE} 2>&1 &
    sleep 1
    echo "Please check the STDOUT file: $STDOUT_FILE"
## About BenchmarkSQL
### runDatabaseBuild.sh
    #!/bin/sh
    echo $(date "+%Y-%m-%d %H:%M:%S")
    if [ $# -lt 1 ] ; then
        echo "usage: $(basename $0) PROPS [OPT VAL [...]]" >&2
        exit 2
    fi
    PROPS="$1"
    shift
    if [ ! -f "${PROPS}" ] ; then
        echo "${PROPS}: no such file or directory" >&2
        exit 1
    fi
    DB="$(grep '^db=' $PROPS | sed -e 's/^db=//')"
    BEFORE_LOAD="tableCreates"
    #AFTER_LOAD="indexCreates foreignKeys extraHistID buildFinish"
    AFTER_LOAD="indexCreates buildFinish"
    for step in ${BEFORE_LOAD} ; do
        ./runSQL.sh "${PROPS}" $step
    done
    ./runLoader.sh "${PROPS}" $*
    for step in ${AFTER_LOAD} ; do
        ./runSQL.sh "${PROPS}" $step
    done
    echo $(date "+%Y-%m-%d %H:%M:%S")
    ### props.proxy_mysql
    db=mysql
    driver=com.mysql.jdbc.Driver
    conn=jdbc:mysql://IP.10.25:3307/proxy_tpcc?serverTimezone=UTC&useSSL=false&cachePrepStmts=true&prepStmtCacheSize=8000
    user=root
    password=root
    warehouses=200
    loadWorkers=200
    terminals=200
    //To run specified transactions per terminal- runMins must equal zero
    runTxnsPerTerminal=0
    //To run for specified minutes- runTxnsPerTerminal must equal zero
    runMins=10
    //Number of total transactions per minute
    limitTxnsPerMin=0
    //Set to true to run in 4.x compatible mode. Set to false to use the
    //entire configured database evenly.
    terminalWarehouseFixed=true
    //The following five values must add up to 100
    //The default percentages of 45, 43, 4, 4 & 4 match the TPC-C spec
    newOrderWeight=45
    paymentWeight=43
    orderStatusWeight=4
    deliveryWeight=4
    stockLevelWeight=4
    // Directory name to create for collecting detailed result data.
    // Comment this out to suppress.
    resultDirectory=my_result_%tY-%tm-%td_%tH%tM%tS
    osCollectorScript=./misc/os_collector_linux.py
    osCollectorInterval=1
    //osCollectorSSHAddr=user@dbhost
    osCollectorDevices=net_eth0 blk_sda
## About MySQL
### my.cnf
    [mysqld]
    server_id=13306
    port =3306
    basedir=/usr/local/mysql5.7
    datadir=/data/mysql/mysql3306/data
    log-error=/data/mysql/mysql3306/data/mysql.err
    log_bin=/data/mysql/mysql3306/data/mysql-bin
    gtid-mode=on
    enforce-gtid-consistency=true
    log-slave-updates=1
    character_set_server = utf8mb4
    pid-file=/data/mysql/mysql3306/data/mysql.pid
    socket=/tmp/mysql3306.sock
    max_connections=50000
    expire_logs_days=1
    innodb_buffer_pool_size=8000000000
    ###
    innodb-log-file-size=2000000000
    innodb-log-files-in-group=3
    innodb-flush-log-at-trx-commit=0
    innodb-change-buffer-max-size=40
    back_log=900
    #innodb_io_capacity
    #innodb_io_capacity_max
    innodb_max_dirty_pages_pct=75
    innodb_open_files=20480
    innodb_buffer_pool_instances=8
    innodb_page_cleaners=8
    innodb_purge_threads=2
    innodb_read_io_threads=8
    innodb_write_io_threads=8
    table_open_cache=102400
    #binlog_expire_logs_seconds=43200
    binlog_format=mixed
    log_timestamps=system
    thread_cache_size=16384
    ### ds å‡†å¤‡
    create database tpcc0 ;
    create database tpcc1 ;
    create database tpcc2 ;
    create database tpcc3 ;
    create database tpcc4 ;
## BenchmarkSQL do
    ./runDatabaseDestroy.sh props.proxy_mysql
    time ./runDatabaseBuild.sh  props.proxy_mysql > 200test &