### Meters to Compromise and State Variables for the IEEE 300-Bus System

Figure 7 illustrates the execution time of the Matching Pursuit algorithm required to successfully find an attack vector. For the IEEE 300-bus system, an attacker needs to compromise between 55 and 140 meters to inject malicious data into up to 10 state variables. These meters can be identified within approximately 8 seconds.

### Constrained Case: Number of Meters to Compromise

#### Figure 4
**Constrained case: Number of meters to compromise to inject false data into \( l \) target state variables in the IEEE 300-bus system.**

- **IEEE Test Systems:**
  - 300-bus
  - 118-bus
  - 30-bus
  - 14-bus
  - 9-bus

#### Figure 6
**Unconstrained case: Number of meters to compromise to inject false data into \( l \) target state variables in the IEEE 300-bus system.**

#### Figure 5
**Constrained case: Number of meters to compromise to inject false data into one target state variable.**

We also conducted a detailed examination of targeted false data injection attacks in the constrained case. Specifically, for each state variable, we determined the number of meters that need to be compromised if the attacker targets that specific variable. The results, shown in Figure 5, indicate that the attacker can inject malicious data into any single state variable using fewer than 35 meters for the IEEE 118-bus system and fewer than 40 meters for the IEEE 300-bus system. For all systems, the median values do not exceed 10, meaning that the attacker can affect most state variables by compromising at most 10 meters.

In the constrained case, since \( c \) is fixed, the attack vectors can be directly computed. Consequently, the execution time in all experiments is very short. For example, it takes only 1.2 ms on the test computer to generate an attack vector that injects false data into 10 state variables in the IEEE 300-bus system.

### Unconstrained Case: Targeted False Data Injection Attacks

In the unconstrained case, the attacker aims to inject malicious data into specific state variables without necessarily keeping other state variables unchanged. We used the Matching Pursuit algorithm [19, 26, 27] to find attack vectors. We performed the same set of experiments as in Section 4.2.2 to obtain the following results:

#### Figure 7
**Unconstrained case: Execution time of finding an attack vector to inject false data into \( l \) target state variables in the IEEE 300-bus system.**

We also exhaustively examined the special situation of injecting malicious data into a single state variable for all IEEE test systems, as in the constrained case. Figures 8 and 9 show the number of meters to compromise and the corresponding execution time, respectively. For instance, the attacker can inject malicious data into any single state variable of the IEEE 300-bus system by compromising at most 27 meters, with the process taking less than 2.6 seconds to find the attack vector.

These experimental results indicate that false data injection attacks are practical and easy to launch if the attacker has the configuration information of the target system and can modify meter measurements.

#### Figure 8
**Unconstrained case: Number of meters to compromise to inject false data into one target state variable.**

- **IEEE Test Systems:**
  - 300-bus
  - 118-bus
  - 30-bus
  - 14-bus
  - 9-bus

#### Figure 9
**Unconstrained Case: Execution time of finding an attack vector to inject false data into one target state variable.**

- **IEEE Test Systems:**
  - 300-bus
  - 118-bus
  - 30-bus
  - 14-bus
  - 9-bus

### Conclusion and Future Work

In this paper, we introduced a new class of attacks, called false data injection attacks, against state estimation in electric power systems. We demonstrated that an attacker can exploit the configuration of a power system to launch such attacks, bypassing existing techniques for bad measurement detection. We considered two realistic attack scenarios: one where the attacker is constrained to specific meters, and another where the attacker is limited in the resources required to compromise meters. Our results show that the attacker can systematically and efficiently construct attack vectors in both scenarios, which can alter state estimation results in a predictable manner. Simulations on IEEE test systems confirmed the success of these attacks. Our findings suggest that security protection for the electric power grid must be revisited in light of potential malicious attacks.

In future work, we plan to extend our results to state estimation using AC power flow models and investigate the possibility of adapting network anomaly detection techniques to identify false data injection attacks.

### References

[References listed as provided in the original text]

### Appendix A: IEEE Test Systems

We validated the false data injection attacks through experiments using IEEE test systems, including the IEEE 9-bus, 14-bus, 30-bus, 118-bus, and 300-bus systems. We extracted the configuration of these test systems (particularly the matrix \( H \)) from MATPOWER, a MATLAB package for solving power flow problems [37]. The topology, bus data, and branch data can be found in the source files case9.m, case14.m, case30.m, case118.m, and case300.m.

#### Table 3: Number of State Variables and Measurements in the IEEE Test Systems

| Test System   | # State Variables | # Measurements |
|---------------|-------------------|----------------|
| IEEE 9-bus    | 8                 | 27             |
| IEEE 14-bus   | 13                | 54             |
| IEEE 30-bus   | 29                | 112            |
| IEEE 118-bus  | 117               | 490            |
| IEEE 300-bus  | 299               | 1,122          |

The matrices \( H \) for the test systems are space-consuming and are not included here.