### 使用Docker构建自定义PHP镜像

#### 1. 下载基础PHP镜像
首先，我们将从Docker Hub下载官方的PHP基础镜像。使用以下命令来完成此操作：
```bash
$ sudo docker pull php:5.6-apache
```

#### 2. 镜像定制
在众多优质的PHP镜像中，特别推荐tutum团队发布的系列镜像。但是，对于本教程，我们基于第10章提供的SSHD镜像进行自定义PHP镜像的制作。

##### Dockerfile示例
```dockerfile
# 基础镜像
FROM sshd:dockerfile

# 设置Apache相关的一些环境变量
ENV APACHE_RUN_USER www-data
ENV APACHE_SERVERALIAS docker.localhost
ENV APACHE_SERVERADMIN admin@localhost
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_GROUP www-data
ENV APACHE_SERVERNAME localhost
ENV DEBIAN_FRONTEND noninteractive

# 创建必要的目录
RUN mkdir -p /var/lock/apache2 && mkdir -p /app && rm -rf /var/www/html && ln -s /app /var/www/html

# 添加示例PHP站点并设置权限
COPY sample/ /app
RUN chmod 755 *.sh
ADD run.sh /run.sh
RUN chmod +x /run.sh

# 更改系统时区设置
RUN echo "Asia/Shanghai" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata

# 安装必要的软件包
RUN apt-get update && apt-get install -yq \
    libapache2-mod-php5 \
    php5-curl \
    php5-gd \
    php5-mysql \
    php-pear \
    php-apc && \
    rm -rf /var/lib/apt/lists/*

# 曝露80端口
EXPOSE 80

# 设置工作目录和默认命令
WORKDIR /app
CMD ["/run.sh"]
```

#### 3. 构建自定义镜像
保存上述内容为`Dockerfile`，然后执行以下命令构建自定义镜像：
```bash
$ sudo docker build -t my-php:dockerfile .
```

#### 4. 运行自定义镜像
构建完成后，可以运行这个镜像：
```bash
$ sudo docker run -it -p 80:80 -p 49159:22 --name my-php-container my-php:dockerfile
```

#### 5. 测试
打开浏览器访问 `http://<宿主主机IP>:49160`，即可看到示例PHP页面。同时，可以通过SSH连接到容器：
```bash
$ ssh root@<宿主主机IP> -p 49159
```

### 使用CakePHP框架
CakePHP 是一个全栈MVC框架，适合开发复杂且高要求的Web应用。

#### 1. 下载CakePHP镜像
```bash
$ sudo docker pull vcarl/cakephp
```

#### 2. 运行CakePHP容器
```bash
$ sudo docker run -d -p 80:80 -p 443:443 -v /path/to/project:/var/www/html vcarl/cakephp
```

#### 3. 访问CakePHP页面
打开浏览器访问 `http://<宿主主机IP>:80`，可以看到CakePHP的欢迎页面。

### 使用Zend Server
Zend Server 是一个企业级的PHP应用服务器，适用于关键业务的Web应用。

#### 1. 下载Zend Server镜像
```bash
$ sudo docker pull php-zendserver
```

#### 2. 运行Zend Server容器
```bash
$ sudo docker run -d -p 80:80 -p 443:443 -e ZS_ADMIN_USERNAME=admin -e ZS_ADMIN_PASSWORD=password php-zendserver
```

#### 3. 访问Zend Server页面
打开浏览器访问 `http://<宿主主机IP>:80`，可以看到Zend Server的管理界面。

通过以上步骤，读者可以从零开始构建、运行和测试自定义的PHP镜像，并使用流行的PHP框架和应用服务器。