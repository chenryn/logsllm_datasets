da565d6c25d3:
$ sudo docker pull php
下面，笔者将带领读者从头操作一次。
笔者首先推荐读者基于本书第10章提供的SSHD镜像进行自定义PHP镜像的制作，
2.定制镜像
DockerHub中的优质PHP镜像很多，笔者特别推荐tutum团队发布的系列镜像（包括
注意
docker/php
docker/php
REPOSITORY
$ sudo docker images
下载完成后，
1a74afd35a74:
01a6ed55fbf9:
a50bbc401f05:
8859f0d2ad74:
31d7cb82d7f6:
afcdff084bd7:
35a6381b9f4d:
aaabd2b41e22:
36fd425d7d8a:
511136ea3c5a:
7a0d03c7b9dc:
Pulling repository docker/php
第一步，下载PHP官方基础镜像：
php:5.6-apache
如果读者希望直接使用DockerHub官方镜像运行PHP项目，可以执行：
COPYsrc//var/www/html/
CoPYconfig/php.ini/usr/local/lib/
FROM php:5.6-apache
src/是当前存放PHP代码的文件夹，config/文件夹包含php.ini文件。
，可以使用docker images查看PHP基础镜像是否安装完成：
5.6
S
5-cli
latest
cli
TAG
Download
Download
Download
Download
Download
Download
Download complete
Download
Download
Download
Download
complete
complete
complete
complete
complete
complete
complete
complete
complete
complete
complete
7a0d03c7b9dc
7a0d03c7b9dc
7a0d03c7b9dc
7a0d03c7b9dc
7a0d03c7b9dc
IMAGE ID
for docker/php:latest
9
6days
9
9
CREATED
days
days
days
days ago
N
ago
ago
ago
ago
OA
394.7
394.7
394.7
394.7MB
VIRTUAL SIZE
如
---
## Page 153
个PHPCLI命令）的镜像：
文件：
下面，我们基于本书创建的 sshd镜像，构建一个能够方便地运行PHP业务代码（非单
此时会打开一个空文件，然后输人i进人Vim的编辑模式，输人一下代码：
$vim demo.php
sdemo_object = new demo();
class demo{
此时笔者已经确定在此目录是有读写权限的，下面使用Vim文本编辑器新建一个PHP
$demo_object->hello_world();
Interactive shell
$sudo docker run-it docker/php
第二步，笔者将在Docker中运行一条PHP命令（CLI）：
/home/core
命令结果显示，PHP5.6.2已经安装完成（5.6.2即为目前最新的PHP官方镜像标签）
docker/php
docker/php
docker/php
functionhello_world()
function
print'Hello World!';
echo
"\n";
5.6.2-cli
5.6.2
5.6-cli
_construct()
7a0d03c7b9dc
7a0d03c7b9dc
7a0d03c7b9dc
6days ago
6 days ago
6daysago
第13章编程语言139
394.7MB
394.7MB
394.7MB
---
## Page 154
140第二部分实战案例
CMD["/run.sh"]
WORKDIR/app
#使用80端
ENV
ENV APACHE_RUN_USER www-data
#设置apache相关的一些变量，在容器启动的时候可以使用-e参数替代
COPY sample//app
RUNmkdir-p/var/lock/apache2&&mkdir-p/app &&rm-fr/var/www/html &&1n-S
#添加一个示例的php站点，
RUNchmod 755/*.sh
ADD run.sh
#添加我们的脚本，并设置权限，这会覆盖之前放在这个位置的脚本
你的应用程序发生不可思议的效果哦
#注意这里要更改系统的时区设置，
RUNecho"Asia/Shanghai">/etc/timezone&&\
local/bin
RUN curl
apache2/php.ini
RUN sed -i "s/variables_order.*/variables_order = \"EGPcs\"/g" /etc/php5/
EXPOSE80
ENV
ENV
ENV
/app/var/www/html
ENV DEBIAN FRONTEND noninteractive
#安装基础镜像
FROM sshd:dockerfile
APACHE_SERVERALIAS docker.localhost
APACHE SERVERADMIN admin@localhost
APACHE_LOCK_DIR/var/lock/apache2
APACHE_RUN_DIR/var/run/apache2
APACHE_PID_FILE/var/run/apache2.pid
APACHE LOG DIR/var/log/apache2
APACHE_RUN_GROUP wwW-data
APACHESERVERNAMEloCalhost
rm-rf/var/lib/apt/lists/*
apt-get
php-apc&&
php-pear\
php5-curl
php5-gd\
ohp5-mysql
libapache2-mod-php5\
apache2\
--filename=composer
口
-yq install
，删掉默认安装在apache文件夹下面的文件，并将我们添加的示例用软链接链
-fnoninteractivetzdata
因为在web应用中经常会用到时区这个系统变量，默认的ubuntu会让
---
## Page 155
我们还可以通过浏览器访问htp://宿主主机ip:49160来访问我们的示例程序，如图13-1所示。
$ cur1 127.0.0.1:49160/demo.php
使用49160端口可以打开php页面，使用49159端口可以打开ssh服务。
0.0.0.0:49159->22/tcp,0.0.0.0:49160->80/tcp
查看是否启动成功：
构建镜像成功后，运行此镜像：
Step O:FROM sshd
$ sudo docker build -t my-php:dockerfile
然后，构建此镜像：
exec apache2-D FOREGROUND
run.sh 文件内容如下：
Hello World!
Building Object.
55745292b34c
CONTAINER ID
$sudo docker ps
55745292b34cb085fbf2425988d00a51c451c79071f0929f2ca4943d93e33dad
Successfu1ly built bdb6460f17d7
Removing intermediate container 6273e14f6a91
ohp-apc&&
libapache2-mod-php5
Step2:RUN apt-get
Step 1:ENV DEBIAN_FRONTEND noninteractive
Sending build
source/etc/apache2/envvars
/usr/sbin/sshd-D&
#!/bin/bash
--->cfdf02ec333c
-->2e89cae5f1b6
->Using cache
context to Docker
php:latest
IMAGE
HelloWorld!
Building Object.
→192.168.66.128:80
update&&
Docker daemon
COMMAND
图13-1PHP页面
daemon
"/run.sh"
apt-get
CREATED
7.68kB
pb-sdud
-yq install
happy_blackwell
3seconds ago
STATUS
第13章编程语言141
php5-curl
PORTS
curl
9H
Up 2seconds
NAMES
php-pear
apache2
St
---
## Page 156
企业级使用者众多，是优秀的快速开发框架。
括CakeRequest、AppModel、AppController等）。CakePHP社区完善，
码生成器）、模板引擎、功能全面的ORM，完整的面向对象的封装（包
CakePHP提供了完整的高级框架所需提供的所有组件，如脚手架（代
stackFramework，是相对于Yaf这类微框架micro-framework而言的），
Docker的各种使用方法。
ThinkPHP、Codelgniter、Lavarel等。笔者将以CakePHP框架为主，其他框架为辅，阐述
13.1.2
Connection refused，则请检查 SSH连接所需的 RSA 密钥是否生成正确。
142
PHPMVC框架资源非常丰富。常用的Web解决方案中涉及的有Zend、Yi、CakePHP、
2第二部分实战案例
第三步，打开浏览器，打开localhost：80查看运行结果，如图13-2所示。
注意，/path/to/project不能指向app/文件夹内部，而应该指向项目根目录。
第二步，使用dockerrun命令运行CakePHP容器：
第一步，下载DockerHub镜像：
使用官方镜像的方法如下。
CakePHP是Rails风格的全栈开源MVC框架（此处的全栈Full-
1.CakePHP
如果读者遇到命令行报错：ssh：connecttohostcoreos-ipport 10123：
$sudo dockerrun-d-p 80:80-p 443:443-v/path/to/project:/var/www/htm1vcarl/apache
$sudodockerpullvcarl/cakephp
PHP常用框架
Editina this Paae
Database connectionMysl'ismissing,or could not be created
The FleEngine
Read the.changelog
ReleaseNotes for CakePHP 2.2.7.
Cake isNOT able to onnect to the database
图13-2CakePHP页面
higher
---
## Page 157
具体地址可以参见后面“相关资源”部分。
一步的Dockerfile的FROM指令中明确ZendServer版本号。官方镜像都有明确的标签列表，
Server的DockerHub官方镜像：
此简略介绍一下ZendServer的特性：
其Docker化部署。
定性要求较高的中大型Web项目。
方案的常用选型之一。它比较适合业务逻辑复杂，并且对拓展性、稳
构和高可维护性，即使是规模庞大的Web项目。Zend框架是PHPWeb
独立使用各种组件。正确使用 Zend Framework 可以保持良好的代码结
件几乎不依靠其他组件。这样的松耦合结构(use-at-will)可以让开发者
架。ZF用100%面向对象编码实现。ZF的组件结构独一无二，每个组
方镜像。
用 SSH服务连接CakePHP镜像。当然，读者也可以到Docker Hub 自行搜索CakePHP第三
基于第10章的SSHD 镜像，自定义Dockerfile后，构建CakePHP镜像。这样可以方便地使
如果读者对Zend Server的版本有要求，可以在以上命令中加入Tag标签，以便于在下
Zend Server是针对于关键Web业务的Web应用服务器，适合企业级解决方案。笔者在
使用 Zend Framework 最简单的方式是安装 Zend Server。下面笔者将介绍Zend Server及
$ sudo docker pull php-zendserver
Zend Server在Docker Hub上以php-zendserver的名称标示。首先，
口完全页面缓存：以URL为基础的HTML输出缓存，它不需要任何应用程序的变。
口最好的应用性能：内置的优化和加速功能，确保了高性能和低资源利用率。
口快速问题响应：利用先进的应用程序监测和诊断，能及早发现问题并能快速分析问题
口使部署更有信心：在开发中使用一个完整的和一致的环境，这样在部署过程中读者可
口企业级PHP：一款最新的，经受测试以及支持PHP堆栈的服务器，它可以确保应用
ZendFramework（ZF)是用PHP5来开发Web程序和服务的开源框
2.Zend
使用官方镜像
口部分页面缓存：
如果读者需要运行现有CakePHP项目，则可以选择使用上文的实战演练中的方法一
口代码加速：PHP的字节码缓存提高性能而没有使应用程序发生变化。
的根源。
程序的高可靠性、提高应用程序的安全性以及效率。
以消除许多测试和运行所遇到的问题。
它允许开发人员能够在共享内存或磁盘中缓存数据。
第13章编程语言143
zend
我们下载Zend
口
---
## Page 158
PASSWORD。集群操作中的MySQL变量（以下指令都是节点正常加人集群所必须的）：
2）使用环境变量。使用预定义的管理员用户名密码启动ZendServer：－ZS_ADMIN
各个节点。b）将不同的若干端口分别定向至各个容器。
中的port）。如果需要运行一个集群，可以有两个做法：a）将不同的若干端口分别定向至
使用来自自定义镜像的Zend Server容器，那么读者可以在每个节点执行：
如下：
都使用来自官方镜像的ZendServer容器，那么可以在每个节点执行：
版本有5.4和5.5（默认），Zend Server版本为7（如：php-zendserver:7.0-php5.4）。
人：：或者：-php。目前可供使用的PHP
144第二部分实战案例
MYSQL_HOSTNAME：MySQL数据库的ip或hostname。
如果读者需要搭建一个Zend Server 集群，并在每个Zend 集群节点（即 Cluster Node）都
注意以下几点：
Ssudo docker run -e MYSQL_HOSTNAME=-e MYSQL_PORT=3306 -e MYSQL
2）通过镜像ID，启动单个ZendServer容器：
执行完毕后，命令行会输出镜像的ID（image-id）。
1）修改Dockerfil，加人定制内容。在含有Dockerfile的根目录执行以下语句构建镜像：
如果读者需要执行自定义操作，可以自定义Dockerfile，以生成自定义的镜像，步骤
1）当运行多个容器（即Instance实例）时，只有一个实例只可以绑定至一个端口（命令
USERNAME= -e MYSQL_PASSWORD= -e MYSQL_DBNAME=zend 
$sudodockerbuild
zendserver
USERNAME=