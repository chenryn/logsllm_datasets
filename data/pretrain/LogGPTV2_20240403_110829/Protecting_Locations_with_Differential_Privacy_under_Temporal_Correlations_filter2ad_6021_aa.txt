title:Protecting Locations with Differential Privacy under Temporal Correlations
author:Yonghui Xiao and
Li Xiong
Protecting Locations with Differential Privacy under
Temporal Correlations
Dept. of Math and Computer Science
Dept. of Math and Computer Science
Li Xiong
Emory University
PI:EMAIL
Yonghui Xiao
Emory University
PI:EMAIL
ABSTRACT
Concerns on location privacy frequently arise with the rapid
development of GPS enabled devices and location-based ap-
plications. While spatial transformation techniques such as
location perturbation or generalization have been studied
extensively, most techniques rely on syntactic privacy mod-
els without rigorous privacy guarantee. Many of them only
consider static scenarios or perturb the location at single
timestamps without considering temporal correlations of a
moving user’s locations, and hence are vulnerable to vari-
ous inference attacks. While diﬀerential privacy has been
accepted as a standard for privacy protection, applying dif-
ferential privacy in location based applications presents new
challenges, as the protection needs to be enforced on the ﬂy
for a single user and needs to incorporate temporal correla-
tions between a user’s locations.
In this paper, we propose a systematic solution to preserve
location privacy with rigorous privacy guarantee. First, we
propose a new deﬁnition, “δ-location set” based diﬀerential
privacy, to account for the temporal correlations in location
data. Second, we show that the well known (cid:96)1-norm sensi-
tivity fails to capture the geometric sensitivity in multidi-
mensional space and propose a new notion, sensitivity hull,
based on which the error of diﬀerential privacy is bound-
ed. Third, to obtain the optimal utility we present a pla-
nar isotropic mechanism (PIM) for location perturbation,
which is the ﬁrst mechanism achieving the lower bound of
diﬀerential privacy. Experiments on real-world datasets al-
so demonstrate that PIM signiﬁcantly outperforms baseline
approaches in data utility.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: Gener-
al—Security and protection; K.4.1 [Computers and Soci-
ety]: Public Policy Issues—Privacy
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813640.
Keywords
Location privacy; Location-based services; Diﬀerential pri-
vacy; Sensitivity hull; Planar isotropic mechanism
1.
INTRODUCTION
Technology and usage advances in smartphones with lo-
calization capabilities have provided tremendous opportu-
nities for location based applications. Location-based ser-
vices (LBS) [20, 8] range from searching points of inter-
est to location-based games and location-based commerce.
Location-based social networks allow users to share location-
s with friends, to ﬁnd friends, and to provide recommenda-
tions about points of interest based on their locations.
One major concern of location based applications is lo-
cation privacy [3]. To use these applications, users have to
provide their locations to the respective service providers or
other third parties. This location disclosure raises important
privacy concerns since digital traces of users’ whereabouts
can expose them to attacks ranging from unwanted location
based spams/scams to blackmail or even physical danger.
Gaps in Existing Works and New Challenges. Many
location privacy protection mechanisms have been proposed
during the last decade [23, 15] in the setting of LBS or con-
tinual location sharing.
In such setting, a user sends her
location to untrusted service providers or other parties in
order to obtain some services (e.g. to ﬁnd the nearest restau-
rant). One solution is Private Information Retrieval (PIR)
technique, based on cryptography instead of revealing indi-
vidual locations (e.g. [32]). However, such technique tends
to be computationally expensive and not practical in ad-
dition to requiring diﬀerent query plans to be designed for
diﬀerent query types.
Most solutions proposed in the literature are based on lo-
cation obfuscation which transforms the exact location of a
user to an area (location generalization) or a perturbed lo-
cation (location perturbation) (e.g. [14, 1]). Unfortunately,
most spatial transformation techniques proposed so far rely
on syntactic privacy models such as k-anonymity, or ad-hoc
uncertainty models, and do not provide rigorous privacy.
Many of them only consider static scenarios or perturb the
location at single timestamps without considering the tem-
poral correlations of a moving user’s locations, and hence
are vulnerable to various inference attacks. Consider the
following examples.
I Suppose a user moved from school to the cafeteria (where
“(cid:63)” is) in Figure 1 (left). Three perturbed locations were
released by selecting a point probabilistically in each of
Figure 1: Examples of privacy breach caused by temporal corre-
lations of user locations
the three circles (by some spatial cloaking methods).
Even though the individual locations were seemingly
protected at each timestamp, considering them togeth-
er with road constraints or the user’s moving pattern
will enable an adversary to accurately ﬁgure out the
user is in the cafeteria, resulting in privacy breach.
II Suppose a user’s location “(cid:63)” is protected in a circle
as shown in Figure 1 (right). If by estimation based on
previous locations the user can only be in the ﬁve places
at current timestamp as shown in the ﬁgure, then the
obfuscated location actually exposes the true location.
Thus technically, the radius of the circle (in location
obfuscation) should be subject to temporal correlations.
While such temporal correlations can be commonly modeled
by Markov chain [37, 17, 25], and few works have considered
such Markov models [37, 17], it remains a challenge to pro-
vide rigorous privacy protection under temporal correlations
for continual location sharing.
Diﬀerential privacy [9] has been accepted as a standard for
privacy preservation. It was originally proposed to protect
aggregated statistics of a dataset by bounding the knowledge
gain of an adversary whether a user opts in or out of a
dataset. Applying diﬀerential privacy for location protection
is still at an early stage. In particular, several works (e.g.
[6, 33, 12]) have applied diﬀerential privacy on location or
trajectory data but in a data publishing or data aggregation
setting. In this setting, a trusted data publisher with access
to a set of location snapshots or user trajectories publishes
an aggregate or synthetic view of the original data while
guaranteeing user-level diﬀerential privacy, i.e. protecting
the presence of a user’s location or entire trajectory in the
aggregated data.
There are several challenges in applying diﬀerential priva-
cy in the new setting of continual location sharing. First,
standard diﬀerential privacy only protects user-level privacy
(whether a user opts in or out of a dataset); while in our
setting, the protection needs to be enforced on the ﬂy for a
single user. Second, as shown in Figure 1, temporal correla-
tions based on road networks or the user’s moving patterns
exist and the privacy guarantee needs to account for such
correlations. Finally, there is no eﬀective location release
mechanism with diﬀerential privacy under such model.
Contributions. In this paper, we propose a systematic so-
lution to preserve location privacy with diﬀerential privacy
guarantee. As shown in Figure 2, we consider a moving user
with sensitive location stream who needs to share her lo-
cations to an untrusted location-based application host or
other parties. A user’s true locations are only known by
the user. The “sanitized” locations released by the priva-
Figure 2: Problem setting
cy mechanisms are observable to the service providers, as
well as adversaries. To enable private location sharing, we
address (and take advantage of) the temporal correlations,
which can not be concealed from adversaries and hence are
assumed to be public. Our contributions are summarized as
follows.
First, we propose “δ-location set” based diﬀerential pri-
vacy to protect the true location at every timestamp. The
“neighboring databases” in standard diﬀerential privacy are
any two databases under one operation: adding or removing
a record (or a user). However, this is not applicable in a
variety of settings [21, 5], which leads to new and extended
notions such as δ-neighborhood [13] or event-level [11] diﬀer-
ential privacy. In our problem, location changes between two
consecutive timestamps are determined by temporal correla-
tions modeled through a Markov chain [37, 17]. Accordingly
we propose a “δ-location set” to include all probable location-
s (where the user might appear). Intuitively, to protect the
true location, we only need to “hide” it in the δ-location set
in which any pairs of locations are not distinguishable.
Second, we show that the well known (cid:96)1-norm sensitivity
in standard diﬀerential privacy fails to capture the geomet-
ric sensitivity in multidimensional space. Thus we propose a
new notion, sensitivity hull, to capture the geometric mean-
ing of sensitivity. We also prove that the lower bound of
error is determined by the sensitivity hull.
Third, we present an eﬃcient location perturbation mech-
anism, called planar isotropic mechanism (PIM), to achieve
δ-location set based diﬀerential privacy.
I To our knowledge, PIM is the ﬁrst optimal mechanism
that can achieve the lower bound of diﬀerential priva-
cy1. The novelty is that in two-dimensional space we
eﬃciently transform the sensitivity hull to its isotropic
position such that the optimality is guaranteed.
II We also implement PIM on real-world datasets, show-
ing that it preserves location utility for location based
queries and signiﬁcantly outperforms the baseline Laplace
mechanism (LM).
2. PRELIMINARIES
We denote scalar variables by normal letters, vectors by
bold lowercase letters, and matrices by bold capital letters.
We use || · ||p to denote the (cid:96)p norm, x[i] to denote the ith
1The state-of-art diﬀerentially private mechanisms [18, 4]
for linear queries can be O(log(d)) approximately optimal
where d is the number of dimensions.
(East)(North)?123(East)(North)?timet1t2t3t4Location Based ApplicationsPrivacy MechanismsPerturbedlocationPerturbedlocationTruelocationTruelocationTruelocationTruelocationTruelocationuntrustedusert5si
u, x
u∗, x∗
z
p−
t
p+
t
∆X
K
a cell in a partitioned map, i = 1, 2, · · · , m
location in state and map coordinates
true location of the user
the released location in map coordinate
prior probability (vector) at timestamp t
posterior probability (vector) at timestamp t
δ-location set
sensitivity hull
Table 1: Denotation
Figure 3: Two coordinate systems
element of x, E() to denote the expectation, xT to denote the
transpose of vector x. Table 1 summarizes some important
symbols for convenience.
2.1 Two Coordinate Systems
We use two coordinate systems, state coordinate and map
coordinate, to represent a location for the Markov model and
map model respectively. Denote S the domain of space. If
we partition S into the ﬁnest granularity, denoted by “cell”,
then S = {s1, s2,··· , sm} where each si is a unit vector with
the ith element being 1 and other m − 1 elements being 0.
Each cell can represent a state (location) of a user. On the
other hand, If we view the space as a map with longitude
and latitude, then a 2 × 1 vector can be used to represent a
user’s location x with two components x[1] and x[2]. Figure
3 shows an example using these two coordinate systems. If
a user is in s7, the state coordinate and map coordinate are
shown as follows. Note that the two coordinate systems can
be transformed to each other. We skip how to transform
them and treat u and x interchangeable.
u = s7 =(cid:2) 0 0 0 0 0 0 1 0 ··· 0 (cid:3)
x = [2, 4]T with x[1] = 2 and x[2] = 4
As time evolves, the trace of a user can be represented by
a series of locations, x1, x2,··· , xt in map coordinate or
u1, u2,··· , ut in state coordinate.
2.2 Mobility and Inference Model
Our approach uses Markov chain [37, 17, 25] to model
the temporal correlations between user’s locations. Other
constraints, such as road network, can also be captured by
it. However, we note that Markov model, as well as any
mobility models, may have limits in terms of predicability
[38]. And we will discuss our solution to address these limits
later.
In our problem setting, a user’s true locations are unob-
servable, i.e. only known by the user. The “sanitized” loca-
tions released by the perturbation mechanism are observable
to the service provider, as well as adversaries. Thus from an
adversarial point of view, this process is a Hidden Markov
Model (HMM).
At timestamp t, we use a vector pt to denote the probabil-
ity distribution of a user’s location (in each cell). Formally,
∗
∗
t = si) = P r(x
pt[i] = P r(u
t = the coordinate of si)
where pt[i] is the ith element in pt and si ∈ S. In the exam-
ple of Figure 3, if the user is located in cells {s2, s3, s7, s8}
with a uniform distribution, the probability vector can be
expressed as follows.
p =(cid:2) 0 0.25 0.25 0 0 0 0.25 0.25 0 ··· 0 (cid:3)