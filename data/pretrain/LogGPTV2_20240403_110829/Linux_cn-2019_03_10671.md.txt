---
**作者:** Girish Managoli  
**类别:** 观点  
**评论数据:** 无  
**统计:** 
  - 评论数: 0
  - 收藏次数: 0
  - 点赞数: 0
  - 分享次数: 0
  - 浏览量: 4164
**日期:** 2019-03-31 18:41:24  
**编辑推荐:** 否  
**摘要:** 六位专家为您解析DevOps的定义、实施方法、实践和哲学。  
**来源链接:** <https://opensource.com/article/19/1/what-does-devops-mean-you>  
**文章ID:** 10671  
**是否翻译:** 是  
**大图:** /data/attachment/album/201903/31/184128uc2pisanr8rciz8a.png  
**永久链接:** /article-10671-1.html  
**图片:** /data/attachment/album/201903/31/184128uc2pisanr8rciz8a.png.thumb.jpg  
**相关文章:** 无  
**审阅者:** wxy  
**选择者:** lujun9972  
**标签:** DevOps  
**缩略图:** 否  
**标题图片:** 是  
**翻译者:** MZqk  
**更新时间:** 2019-03-31 18:41:24
---

![](/data/attachment/album/201903/31/184128uc2pisanr8rciz8a.png)

如果你向十个人询问关于DevOps的问题，你可能会得到十二种不同的答案。这种多样性反映了人们对DevOps的不同理解和期望，以及其在实际操作中的多种表现形式。为了更好地理解DevOps的概念，我们采访了几位行业内的顶尖专家。他们不仅对DevOps有深入的理解，而且拥有多年实践经验。他们的见解应该能够启发并激发您对DevOps的新思考。

### 对于您来说，DevOps意味着什么？

首先，我们需要了解专家们是如何定义DevOps的基本概念的。

IBM数字企业集团DevOps商业平台负责人[Ann Marie Fred](https://twitter.com/DukeAMO)认为，“对我来说，DevOps是一系列旨在提高团队在设计、开发、交付及运营软件方面效率的做法和原则。”

红帽公司的资深DevOps倡导者[Daniel Oh](https://twitter.com/danieloh30?lang=en)指出：“DevOps通常是指基于现有IT发展、应用程序开发、运维及安全协议的一套流程与工具来促进企业的运作。”

Tactec战略解决方案创始人[Brent Reed](https://twitter.com/brentareed)则强调了持续改进的重要性：“对我而言，DevOps是一种工作方式，它鼓励不断优化运营绩效，从而提升整个组织的表现，并使所有利益相关者受益。”

许多专家还提到了DevOps的文化层面。例如，Ann Marie提到：“这同样涉及持续改进与学习的过程，涵盖了人与文化因素，而不仅仅是技术和工具。”

美国国家保险监管协会(NAIC)首席架构师兼DevOps领导者[Dan Barker](https://twitter.com/barkerd427)进一步解释道：“DevOps的核心在于文化...它将诸如精益生产、公正文化和终身学习等不同领域整合在一起。我认为文化是最关键同时也是最难执行的部分。”

Atos公司DevOps负责人[Chris Baynham-Hughes](https://twitter.com/onlychrisbh?lang=en)补充说：“DevOps实践通过企业文化、流程和技术的进步得以采纳。重点在于文化转型，而成功的DevOps文化依赖于协作精神、实验态度、快速反馈机制以及持续改善的努力。”

云架构师[Geoff Purdy](https://twitter.com/geoff_purdy)则特别关注敏捷性和反馈周期：“缩短并放大反馈循环。我们的目标是在几分钟内而不是几周后获得反馈。”

最后，Daniel重申了开源文化对于推动DevOps的重要性：“在推广DevOps的过程中，最关键的因素应该是开放源代码文化，而非特定工具或复杂方案。”

### 哪些DevOps实践被证明是有效的？

虽然每位专家都提到了一些普遍适用的最佳实践，但也有各自独特的视角。

Ann Marie列举了一些强大的项目管理技术，比如打破职能壁垒、实现全自动化持续部署、蓝绿发布以实现零停机时间；同时让开发者负责自己的监控报警设置，确保无缝自愈能力，以及自动化安全合规性检查。

Chris分享了几个突破性的做法：包括加强合作、持续改进、开放式领导风格、缩小业务距离、从垂直孤岛转向跨功能产品团队、增加透明度、相互影响、Mobius循环、加快反馈速度以及全面自动化（从环境配置到CI/CD）。

Brent提倡培养一种学习型文化，采用测试驱动开发(TTD) 和行为驱动开发(BDD)，并通过持续集成与交付(CI/CD) 自动化从设计到生产的全过程。他还建议采取故障优先的方法来进行测试，以便在整个生命周期中提供快速反馈。

Geoff则着重于自动化的基础设施配置。“对我们团队来说，从版本控制系统中自动获取配置信息非常有效。”

Dan则采取了一种更加轻松愉快的方式：“我们做了很多事情来营造DevOps文化氛围。比如举办‘午餐&学习’活动，提供免费食物吸引大家参与学习。我们还会购买书籍供小组共同研读。”

### 您如何激励您的团队达成DevOps目标？

Daniel建议通过提高自动化水平来减少来自多个团队之间的摩擦：“你应该鼓励你的团队增强开发、测试与IT运营方面的自动化能力，引入新的流程和程序。Linux容器就是一个很好的例子。”

Geoff对此表示赞同：“如果有些任务让你感到厌烦，那就试着让它们消失吧。如果做不到的话，至少也要设法将其自动化。这样可以让工作变得更加有趣且充满变化。”

Dan, Ann Marie, 和 Brent 都强调了团队建设的重要性。Dan分享了他们在NAIC的经验：“我们有一套完善的奖励制度用来表彰特定的行为表现。奖项分为多个等级，其中有两个级别的奖可以由任何人提名授予他人。此外，我们也为完成重要项目的团队颁发集体荣誉，不过通常只针对个人贡献者。”

Ann Marie谈到了她所在地区团队的动力源泉：“看到别人成功是我们最大的动力之一。每周我们都会进行一次回顾会议，在此期间会分享尝试新工具或方法时学到的东西。大家都对自己所从事的工作充满热情，并乐于帮助其他人加入进来。”

Brent也表达了类似的观点：“确保每个人都掌握必要的基础知识至关重要……我喜欢从评估哪些措施有助于团队达成目标开始着手。”

Chris建议采取双轨策略：“设定短期可实现的目标，并定期庆祝所取得的成绩，即使这些进步可能看起来微不足道。”

### DevOps与敏捷开发之间有何关联？

这个问题很重要，因为DevOps和敏捷开发都是现代软件开发不可或缺的一部分。

DevOps侧重于沟通与协作，旨在促进应用程序和产品的快速部署。而敏捷开发则是一种迭代式开发方法，强调持续开发、迭代测试以及高质量的交付成果。

那么这两者之间存在怎样的联系呢？让我们听听专家怎么说。

Brent认为：“DevOps不等于敏捷。其次，敏捷也不等同于Scrum流程……敏捷工具和工作方式支持着DevOps的战略和目标，二者紧密相连。”

Chris指出：“对我来说，敏捷是DevOps的一个基本组成部分。当然，我们可以讨论如何在非敏捷环境中应用DevOps文化，但最终结果表明，提高软件设计灵活性是衡量DevOps成熟度的关键指标。”

Dan将DevOps与更广泛的[敏捷宣言](https://agilemanifesto.org/)联系起来：“当我谈论敏捷时，我总是引用敏捷宣言作为基准，但实际上很多实现并不遵循这一理念。当你阅读这份宣言时，你会发现它实际上是从开发者的角度描述了DevOps。因此，将敏捷融入DevOps文化是非常自然的事情，因为它重视沟通、协作、适应变化的能力以及快速投产。”

Geoff则认为：“DevOps是众多敏捷实践的一种具体实现。敏捷本质上是一组原则，而DevOps则是体现这些原则的文化、流程和技术栈。”

Ann Marie总结道：“敏捷是实现DevOps的前提条件。DevOps使得敏捷更加高效。”

### 开源是否有利于DevOps的发展？

所有受访者都给予了肯定的回答，并详细阐述了各自的观察结果。

Ann Marie提到：“我们站在前人的肩膀上继续前进。开源模式下的拉取请求和代码审查对DevOps团队维护软件非常有用。”

Chris完全同意这一点：“毫无疑问，DevOps得益于开源——无论是在设计理念还是工具选择上（如Ansible），还是在流程管理和人员培训方面，通过分享业内故事和社区领袖的经验。”

Geoff指出了一个优势即“草根级采用”。免费软件无需经过繁琐的采购审批流程。当团队发现能满足需求的工具时，可以直接使用并根据需要进行定制。随后再回馈给更大的社区，形成良性循环。

Daniel认为开源已经展示了“就像开源软件开发者所做的那样，有一种更好的方式来应对新挑战”。

Brent补充道：“DevOps从开源中获益良多。其中一个途径就是利用这些工具来理解它们如何加速DevOps目标和策略的实现；通过对开发人员和运维人员进行自动化、自动扩展、虚拟化和容器化等方面的培训，如果没有引入易于使用的支撑技术，就很难达到这些效果。”

Dan强调了DevOps与开源之间的双向互利关系：“良好的开源项目往往具备非常开放透明的沟通结构。对于DevOps从业者来说，这是一个绝佳的学习机会，可以了解到自己组织可能需要引入哪些元素。此外，能够使用那些来自相似背景社区的工具也促进了自身文化的成长。以GitLab为例，当我们将其引入公司时，不仅得到了一款优秀的产品，更重要的是吸收了其独特的企业文化。这种互动及其带来的价值贡献极大地丰富了我们内部的文化氛围。”

现在，随着我们的DevOps专家们已经发表了自己的看法，请您在下方评论区分享您对DevOps的理解，并提出其他任何感兴趣的话题。
---
**原文作者:** [Girish Managoli](https://opensource.com/users/gammay)  
**选题:** [lujun9972](https://github.com/lujun9972)  
**译者:** [MZqk](https://github.com/MZqk)  
**校对:** [wxy](https://github.com/wxy)  
**本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。**