    __u16 uid_high(void) const { return i_uid_high; }
    __u16 gid_high(void) const { return i_gid_high; }
    #ifndef i_reseved2
    #define i_reserved2 osd2.hurd2.h_i_author
#endif
    __u32 reserved2(void) const { return i_reserved2; }
    void set_reserved2(__u32 val) { i_reserved2 = val; }
    // Returns true if this inode is part of an ORPHAN list.
    // In that case, dtime is overloaded to point to the next orphan and contains an inode number.
    bool is_orphan(void) const
    {
       // This relies on the fact that time_t is larger than the number of inodes.
       // Assuming we might deal with files as old as five years, then this would
       // go wrong for partitions larger than ~ 8 TB (assuming a block size of 4096
       // and twice as many blocks as inodes).
       return i_links_count == 0 && i_atime && i_dtime /dev/null | awk '{print $NF}' | sed -e 's/[()]//g'`
if [ "$USER_IP" = "" ]
then
USER_IP=`hostname`
fi
export HISTTIMEFORMAT="%F %T $USER_IP `whoami` "
shopt -s histappend
export PROMPT_COMMAND="history -a"
# 让配置生效
source /etc/profile
```
---
### 开机启动
#### 查看开机启动服务
```bash
chkconfig                   # 查看开机启动服务命令
chkconfig --list | grep "3:启用\|3:开\|3:on\|5:启用\|5:开\|5:on"
ls /etc/init.d              # 查看开机启动配置文件命令
cat /etc/rc.local           # 查看 rc 启动文件
ls /etc/rc.d/rc[0~6].d
runlevel                    # 查看运行级别命令
```
#### 查看计划任务
```bash
crontab -l                  # 计划任务列表
ls -alh /var/spool/cron     # 默认编写的 crontab 文件会保存在 /var/spool/cron/用户名 下
ls -al /etc/ | grep cron
ls -al /etc/cron*
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
```
---
### 账号
#### 异常查找
```bash
awk -F: '{if($3==0||$4==0)print $1}' /etc/passwd            # 查看 UID\GID 为0的帐号
awk -F: '{if($7!="/usr/sbin/nologin"&&$7!="/sbin/nologin")print $1}' /etc/passwd # 查看能够登录的帐号
awk '/\$1|\$6/{print $1}' /etc/shadow                       # 查询可以远程登录的帐号信息
lastlog                                                     # 系统中所有用户最近一次登录信息
lastb                                                       # 显示用户错误的登录列表
users                                                       # 打印当前登录的用户，每个用户名对应一个登录会话。如果一个用户不止一个登录会话，其用户名显示相同次数
```
#### 异常设置
**/etc/passwd**
- 若用户 ID=0,则表示该用户拥有超级用户的权限
- 检查是否有多个 ID=0
- 禁用或删除多余的账号
**/etc/login.defs**
```bash
PASS_MAX_DAYS   90              # 用户的密码最长使用天数
PASS_MIN_DAYS   0               # 两次修改密码的最小时间间隔
PASS_MIN_LEN    7               # 密码的最小长度
PASS_WARN_AGE   9               # 密码过期前多少天开始提示
```
#### 当查到异常用户时,需要立即禁用
```bash
usermod -L user     # 禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头
userdel user        # 删除user用户
userdel -r admin    # 将删除user用户，并且将/home目录下的admin目录一并删除
```
#### 安全配置
**设置账户锁定登录失败锁定次数、锁定时间**
```bash
vim /etc/pam.d/system-auth
auth required pam_tally.so onerr=fail deny=6 unlock_time=300  # 设置为密码连续输错6次,锁定时间300秒
auth required pam_tally.so deny=2 unlock_time=60 even_day_root root_unlock_time=60
```
#### 安全审计
```bash
ps -ef | grep auditd            # 查看是否开启系统安全审计功能
more /etc/audit/audit.rules     # 查看审计的规则文件
    - w 文件 -p 权限(r读 w写 x执行 a修改文件属性) -k 关键字
    - w /etc/passwd -p wa -k passwd_changes             # 对重要文件的操作行为进行监控
    - a -系列动作 -S 系统调用名称 -F 字段-值 -k 关键字
    - a exit,always -S mount -S umount                  # 对系统调用进行监控
more /etc/audit/auditd.conf     # 查看安全事件配置
ausearch -i | less              # 查看审计日志
more /var/log/audit/audit.log   # 查看审计日志
```
**audit**
linux audit 子系统是一个用于收集记录系统、内核、用户进程发生的行为事件的一种安全审计系统。该系统可以可靠地收集有关上任何与安全相关（或与安全无关）事件的信息，它可以帮助跟踪在系统上执行过的一些操作。
audit 和 syslog 有本质区别。syslog 记录的信息有限，主要目的是软件调试，对于用户的操作行为（如某用户修改删除了某文件）却无法通过这些日志文件来查看。而 audit 的目的则不同，它是 linux 安全体系的重要组成部分，是一种 “被动” 的防御体系。
```bash
yum install audit*.* -y         # 安装 audit
service auditd start            # 启动 audit
service auditd status           # 查看 audit 状态
# 开启了 autid 服务后，所有的审计日志会记录在 /var/log/audit/audit.log 文件中。
```
audit 安装后会生成 2 个配置文件:
* /etc/audit/auditd.conf
* /etc/audit/audit.rules
具体配置信息请查看 [文件](./笔记/文件.md#etc)
audit 常用命令
```bash
ausearch    # 查询 audit log 工具
aureport    # 输出 audit 系统报告