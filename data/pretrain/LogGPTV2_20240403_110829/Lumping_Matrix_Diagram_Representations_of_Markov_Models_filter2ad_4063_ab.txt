i
j
i
i
(cid:3)
(cid:3)
(cid:3)
For a proof of Theorem 2, we refer to [2]. Using Theorem 2,
one can show that all reward measures of M that are based
on r and πini can be computed using(cid:1)r and(cid:1)πini.
3 Compositional Lumping of MDs
In this section, we ﬁrst deﬁne MDs [6, 15] and introduce
a notation for them. Then, we describe the concepts based
on which the compositional lumping works. In particular,
we will describe a set of sufﬁcient lumpability conditions on
the nodes of one level of the MD, and prove that it satisﬁes
lumpability conditions on the overall MD.
An MD [6] is a symbolic data structure that repre-
sents real-valued matrices. MDs are related to MDDs
(Multi-valued Decision Diagrams), edge-valued decision
diagrams, and Kronecker representations [17]. MDs have
proven to be particularly useful in representing large state
transition matrices of compositional Markovian models.
Refer to [6, 15] for details on MDs and algorithms for ma-
nipulating them. The formal deﬁnition of MDs that we use
in the following is slightly different from that in [6, 15].
The resulting data structures remain the same, but the for-
mal treatment is more concise.
An ordered MD is a connected directed acyclic graph
(DAG) with a ﬁnite number of nodes and a unique root
node. Each node in an MD has a unique index. We refer to
the node with index n as Rn. R1 is the root node. All paths
from R1 to any given node are of the same length. Conse-
quently, the set of nodes can be partitioned into L subsets,
called levels of the MD, based on their distance from the
root node. Nodes in level i ∈ {1, . . . , L} have distance
i − 1 from the root node, and the set of their indices is rep-
resented by Ni. The top level (level 1) has only the root
node in it, i.e., N1 = {1}. By the deﬁnition of levels, arcs
only connect nodes of adjacent levels i and i + 1.
Rni, a node at level i (ni ∈ Ni), is a matrix whose
(cid:3)
row index set Sni and column index set S
ni are subsets
of a ﬁnite index set Si that is the same for all nodes at
(cid:3)
level i1. R
ni are re-
indicates that Sni and S
spectively the row and column index sets for Rni. As a
∈ S
result, we can refer to row si ∈ Sni, column s
(cid:3)
(cid:3)
ni,
(cid:3)
i
or entry (si, s
) of Rni. Matrix entries are ﬁnite formal
) · Rni+1
(cid:3)
(cid:3)
i
ni+1∈Ni+1 rni,ni+1(si, s
sums Rni(si, s
) =
i
i
) and references to nodes at
with real values rni,ni+1(si, s
level ni+1, if i (cid:5)= L. At level i = L, Rni(si, s
) is a
real value, and therefore Rni is a real-valued matrix. Terms
) (cid:5)= 0 correspond
rni,ni+1(si, s
to an arc from node Rni to Rni+1. We assume that the MD
is reduced, i.e., at any level i, no two nodes are equal. Oth-
erwise, one node can be removed, and references at level
i − 1 can be appropriately renamed. The assumption that
the MD has been reduced is the basis of the efﬁciency of
)·Rni+1 with rni,ni+1(si, s
(cid:2)
(Sni
ni
×S
(cid:1)
ni
(cid:3)
i
(cid:3)
i
(cid:3)
i
(cid:3)
i
)
1Matrices of different dimensions may result from the computation of
reachable state space by projections on an MD.
3
the MD data structure. In MD theory, the removal of dupli-
cates is called “quasi-reduction”.
In the following paragraphs, we describe how to merge
adjacent levels of an MD in bottom-up and top-down man-
ners. We do so to show that (1) each MD node Rni re-
sults in a real-valued matrix Rni, and (2) we can avoid an
overwhelming notation by considering MDs with 3 levels
instead of MDs with an arbitrary number of levels, with no
loss of generality.
k=i
(cid:3)
i
(cid:3)
i
(cid:1)
(cid:2)
(cid:3)
i
) =
(cid:3) ∈ S
(cid:3)
A, SB, S
(cid:3)
B
(cid:3)) + B(s, s
ni+1∈Ni+1 rni,ni+1(si, s
We ﬁrst consider merging adjacent levels from the bot-
tom up and show that item (1) holds. Observe that it holds
for nodes at level i = L by deﬁnition. At level i < L, Rni is
a block-structured matrix in which each block is deﬁned as
)·Rni+1. In other
Rni(si, s
words, we replace node references with matrix references
and resolve the formal sum by scalar matrix multiplication
and matrix addition. We can thus merge levels i through L
by replacing nodes Rni with matrices Rni (for all ni ∈ Ni)
and removing all levels i + 1 to L without affecting the ma-
trix that the overall MD represents. Note that the row and
column index sets of Rni will be subsets of (and not neces-
sarily equal to)×L
Sk. Therefore, we need special deﬁn-
itions for the abovementioned operators to resolve the sum.
In particular, consider a ∈ IR, A(SA×S
A), B(SB×S
(cid:1)
B ), and
⊆ S. We then deﬁne the scalar multiplica-
SA, S
tion of a and A as (a · A)(SA×S
(cid:3)) = a · A(s, s
(cid:3))
(cid:1)
A)(s, s
for all s ∈ SA and s
(cid:3)
A. We also deﬁne the ma-
A∪S
trix addition of A and B as C(SA∪SB×S
(cid:3)) =
(cid:1)
(cid:1)
B )(s, s
(cid:3)) in which we assume, for simplicity of
A(s, s
(cid:3)) = 0 if s ∈ S\SA or s
(cid:3) ∈ S\S
(cid:3)
notation, that A(s, s
A.
We make a similar assumption for B. Terms in a formal
sum with rni,ni+1(si, s
) = 0 result in a zero matrix and
need not be considered in a summation. Furthermore, Rni
matrices need not be square matrices in general, since Rni
nodes are not necessarily square. For i = 1, we reduce the
number of levels to one and end up with the real-valued ma-
trix R1, which corresponds to the root node R1. It is a ﬂat
representation of the matrix that the original MD represents.
row indices is a subset of ×L
R1 has a nested block structure, and each of its column and
i=1 Si. Therefore, a row or
a column index can be represented as s = (s1, . . . , sL).
When an MD is used to represent the R or the Q matrix
of a CTMC, s = (s1, . . . , sL) is a state of the CTMC, and
we call si a substate of s. Much as levels can be merged
in a bottom-up manner, we can reduce the number of levels
by merging in a top-down manner, i.e., starting at the top
level. For this paper, we need to test an arbitrary level l for
lumpability conditions local to that level. Therefore, it is
natural to merge all levels l + 1, . . . , L into a single level
and all levels 1, . . . , l − 1 into another single level when
1 < l < L. The cases where l = 1 (and l = L) need spe-
cial attention. We ﬁrst add an artiﬁcial level 0 (or L + 1)
to the MD that has a single node of size 1 × 1 consisting
of entry 1, and establish appropriate pointers from level 0
to 1 (or L to L + 1) such that the new MD represents the
same overall matrix. Then, we perform the merging oper-
ations mentioned above. Eventually, the merging leads us
to consider, for most of our discussion and without loss of
generality, an MD of 3 levels and to focus on level 2 for
local lumping purposes instead of considering an MD of L
levels and focusing on level l. Once again, note that the sole
purpose of our merging argument is to simplify the notation
and understanding of the material. The implementation of
the algorithm does not perform any merging operation.
Compositional Lumping. We have shown so far how
an MD can represent the state transition rate matrix of a
CTMC. To discuss lumping conditions according to Theo-
rem 1, we need to augment the CTMC to an MRP by speci-
fying the rewards and the initial probability distribution. In
particular, to discuss local lumping conditions, it is neces-
sary to make rewards and probability distribution decom-
posable. More speciﬁcally, r is an arbitrary reward vector
on S, and when we discuss ordinary lumping, we restrict
its representation to r(s) = g(f1(s1), f2(s2), f3(s3)) (i.e.,
a function built upon functions of substates at each level),
in which s = (s1, s2, s3), g : IR3 → IR, f1 : S1 → IR,
f2 : S2 → IR, and f3 : S3 → IR. Likewise, πini is
also an arbitrary initial probability distribution on S, and
when we discuss exact lumping, we restrict its representa-
tion to πini(s) = gπ(fπ,1(s1), fπ,2(s2), fπ,3(s3)), in which
gπ : IR3 → [0, 1], fπ,1 : S1 → IR, fπ,2 : S2 → IR, and
fπ,3 : S3 → IR. To illustrate the ﬂexibility of the repre-
sentation in deﬁning arbitrary initial probability vectors, we
consider a general function hπ : S1 × S2 × S3 → [0, 1].
To represent hπ, one possibility for deﬁning gπ and fπ
is fπ,i(si) = si for i = 1, 2, 3 and gπ(a1, a2, a3) =
hπ(a1, a2, a3) if a1 = s1, a2 = s2, and a3 = s3 and 0
otherwise. As a typical example, consider a πini such that
πini(s0) = 1 for a given initial state s0 ∈ S, and therefore,
πini(s) = 0 for all s (cid:5)= s0. One possibility for deﬁning
gπ and fπ is the following: fπ,i(si) = 1 if si = s0
i and 0
otherwise, for i = 1, 2, 3, and gπ(a1, a2, a3) =
i=1 ai.
In the rest of this section, we ﬁrst present two local
equivalence relations ≈lo and ≈le on the state space of level
2 of an MD. We then prove that lumping level 2 of the MD
with respect to each of those relations results in an MD that
is lumped with respect to (global) equivalence relations ≈go
or ≈ge.
Deﬁnition 3. Local equivalences≈lo and ≈le (and corre-
spondingpartitionsPlo andPle) are deﬁned onS2 as fol-
lows:
s2 ≈lo ˆs2 if
f2(s2) = f2(ˆs2) and
(1)
∀ n2 ∈ N2, C2 ∈ Plo : Rn2(s2, C2) = Rn2(ˆs2, C2) (2)
(cid:5)3
4
(3)
(4)
s2 ≈le ˆs2 if
fπ,2(s2) = fπ,2(ˆs2) and
∀ n2 ∈ N2 : Rn2(s2,S2) = Rn2(ˆs2,S2) and
∀ n2 ∈ N2, C2 ∈ Ple : Rn2(C2, s2) = Rn2(C2, ˆs2) (5)(cid:1)
In ≈lo and ≈le, the letters l, o, and e stand for local, or-
dinary, and exact, respectively. Note that the symbol “=”
in Eqs. (2), (4), and (5) means equality of matrices (all el-
ements equal), and that the matrices on both sides of each
equality are at most of size |S3|×|S3|. The following propo-
sition states when the equalities in (2), (4), and (5) will hold
in terms of matrix elements.
Proposition 1. Eq. (2) holds iff ∀ n2 ∈ N2, C2 ∈ Plo,
3 ∈ S3:(cid:6)
(cid:6)
(cid:6)
(cid:6)
(cid:3)
2)Rn3(s3, s
rn2,n3(s2, s
(cid:3)
3) =
n3∈N3
2∈C2
(cid:1)
s
s3, s
(cid:3)
rn2,n3(ˆs2, s
(cid:3)
2)Rn3(s3, s
(cid:3)
3)
2∈C2
(cid:1)
s
n3∈N3
Eq.(4)holdsiff∀ n2 ∈ N2, s3, s
3 ∈ S3:
(cid:3)
(cid:3)
2)Rn3(s3, s
rn2,n3(s2, s
(cid:3)
3) =
rn2,n3(ˆs2, s
(cid:3)
2)Rn3(s3, s
(cid:3)
3)
AndEq. (5)holdsiff∀ n2 ∈ N2, C2 ∈ Ple, s3, s
(cid:3)
3) =
(cid:3)
2, s2)Rn3(s3, s
rn2,n3(s
3 ∈ S3:
(cid:3)
rn2,n3(s
(cid:3)
2, ˆs2)Rn3(s3, s
(cid:3)
3)
(cid:1)
In Deﬁnition 4, we “extend” ≈lo and ≈go to deﬁne an-
other pair of equivalence relations ≈go and ≈ge that imply
a partition on S, the state space of the overall MD.
Deﬁnition 4. Globalequivalences≈go and≈ge (andcorre-
spondingpartitionsPgo andPge)aredeﬁnedonS forstates
s = (s1, s2, s3), ˆs = (ˆs1, ˆs2, ˆs3) ∈ S as
a)s ≈go ˆs ifs1 = ˆs1, s2 ≈lo ˆs2, ands3 = ˆs3,
b)s ≈ge ˆs ifs1 = ˆs1, s2 ≈le ˆs2, ands3 = ˆs3