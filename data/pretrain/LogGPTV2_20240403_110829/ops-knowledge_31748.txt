Question: While reviewing the code for a new feature of an application, a developer finds that input validation is only performed based on checking for known malicious or malformed inputs. Considering the best practices for secure coding, identify the issues that may arise from this approach and recommend more robust input validation methods.
"A": "Relying solely on denylists for input validation can be incomplete and may miss undesirable inputs, thereby recommending an 'accept known good' strategy.",
"B": "Using stringent allowlists for filename validation can help avoid directory traversal and file inclusion vulnerabilities.",
"C": "Input validation should ignore the full range of acceptable values, as focusing on syntax and length is sufficient for security.",
"D": "Removing dangerous characters like '../' sequentially from inputs is an effective method to prevent path traversal attacks."
Answer: AB