S 1a -1 test_*
-rwrvr-- 1 chxlatine chxLatine 0 May 21 14:35 test_one
-rwrvz=- 1 chxlatine chxlatine 0 May 21 15:15 test_tvo
新文件test_two和文件test_one的修改时间并不一样。如果目标文件已经存在，cp命令
可能并不会提醒这一点。最好是加上-选项，强制shell询问是否需要覆盖已有文件。
$ 1s -1 test_*
christine chrietine 0 May 21 14:35 test_one
-rw-rv-r-- 1 chrietine christine 0 May 21 15:15 test_two
S cp -i test_one test_tuo
cpi overwrite *test_tvo'? n
如果不回答y，文件复制将不会继续。也可以将文件复制到现有目录中。
$ cp -i test_one /hone/christine/Document8/
$ 18 -1 /hone/christine/Document8
-rw-rv-r-- 1 chrietine chrietine 0 May 21 15:25 test_one
新文件现就在目录Documents中了，和源文件同名。
说明之前的例子在目标目录名足部加上了一个正斜线（/），这表明Documents是目录而非文件。
这有助于明确目的，而且在复制单个文件时非常重妥。如果没有使用正斜线，子目录
/home/christine/Documents又不存在，就会有麻烦。在这种情况下，试图将一个文件复制
到Documents子目录反而会创建一个名为Documents的文件，连错误消息都不会显示！
上一个例子采用了绝对路径，不过也可以使用相对路径。
S cp -1 test_one Documents/
 1a -1 Documenta
tota10
-rwrvz=- 1 chr1atine chx1atine 0 May 21 15:28 test_one
本章在前面介绍了特殊符号可以用在相对文件路径中。其中的单点符（.）就很适合用于cP
命令。记住，单点符表示当前工作目录。如果需要将一个带有很长的源对象名的文件复制到当前
工作目录中时，单点符能够简化该任务。
S 1s -1 NetvorkManager.conf
1 chx1atine chx1atine 76 May 21 15:55 NetworlkcHanager,conf
---
## Page 64
3.6处理文件
想找到那个单点符可真是不容易！仔细看的话，你会发现它在第一行命令的末尾。如果你的
源对象名很长，使用单点符要比输人完整的目标对象名省事得多。
窍门cp命令的参数要比这里叙述的多得多。别忘了用mancp，你可以看到cp命令所有的可用
参数。
cp命令的-R参数威力强大。可以用它在一条命令中递归地复制整个目录的内容。
≤ 1s -rd *scripta
Scx1pts/
S 1s -1 Scripts/
total 25
rHXEW=-
1christine christine 254 Jan
2 14:18 SGID_search.sh
rhxrwr=- 1 chriatine chriatine 243 Jan2 13:42 SUID_search.sh
S cp -R Scripts/ Mod_Seripts
S 1s -Fd *Scripts
S 1s -1 Mod_Seripts
Xod_Scrlpta/
Scr1pta/
total 25
-rncrwr-- 1 chriatine chriatine 929 May 21 16:16 fi1e_mod.ah
-rsoxrw-r-- 1 chriatine chriatine 243 May 21 16:16 SUID_search.gh
在执行cp-R命令之前，目录Mod_Scripts并不存在。它是随着cp-R命令被创建的，整个Scripts
目录中的内容都被复制到其中。注意，在新的Mod_Scripts目录中，所有的文件都有对应的新日期。
Mod_Scripts目录现在已经成为了Scripts目录的完整副本。
说明在上面的例子中，1s命令加入了-Pd选项。之前你已经见过-P选项了，不过-选项可能
还是第一次碰到。后者只列出目录本身的信息，不列出其中的内容。
也可以在cp命令中使用通配符。
≤ 1s -1 nod_Scripts
total 26
-rmxrw-r-- 1 christine christine 929 May 21 16:16 file_mod.sh
MXW-r--
 1 chrietine christine 54  May 21 16:27 my_ecript
-rmxrw-r-- 1 christine christine 243 May 21 16:16 SUID_search.sh
MXW-r--
1 christine christine 254 May 21 16:16 sGID_search.sh
该命令将所有以script结尾的文件复制到Mod_Scripts目录中。在这里，只需要复制一个文件：
my_script。
---
## Page 65
50
第3章基本的bash shell命令
在复制文件的时候，除了单点符和通配符之外，另一个shell特性也能派上用场。那就是制表
键自动补全。
3.6.3制表键自动补全
在使用命令行时，很容易输错命令、目录名或文件名。实际上，对长目录名或文件名来说，
输错的儿率还是蛮高的。
这正是制表键自动补全挺身而出的时候。制表键自动补全允许你在输人文件名或目录名时按
一下制表键，让shell帮忙将内容补充完整。
really_ridieulously_long_file_name
$ 1s really*
$ cp really_ridiculously_long_file_name Hod_Scripts/
18 -1 Hod_Scripts
-rwxrα-r-- 1 christine ehrietine 929 May 21 16:16 file_mod.sh
total 26
-rwxrv-r-- 1 chrietine ehrietine 54 May 21 16:27 my_script
really_ridiculously_long_file_name
-rw-rv-r-- 1 chrietine ehrietine 0  May 21 17:08
-rwxrv-r-- 1 chrietine christine 254 May 21 16:16 SGID_search.sh
rwxrv-r-- 1 chrietine chrietine 243 May 21 16:16 suID_search.sh
在上面的例子中，我们输入了命令cpreally，然后按制表键，shell就将剩下的文件名自动
补充完整了！当然了，目标目录还是得输人的，不过仍然可以利用命令补全来避免输人错误。
使用制表键自动补全的的技巧在于要给shell足够的文件名信息，使其能够将需要文件同其他
文件区分开。假如有另一个文件名也是以really开头，那么就算按了制表键，也无法完成文件名
的自动补全。这时候你会听到嘟的一声。要是再按一下制表键，shell就会列出所有以really开头的
文件名。这个特性可以让你观察究竞应该输人哪些内容才能完成自动补全。
3.6.4链接文件
链接文件是Linux文件系统的一个优势。如需要在系统上维护同一文件的两份或多份副本，
除了保存多份单独的物理文件副本之外，还可以采用保存一份物理文件副本和多个虚拟副本的方
法。这种虚拟的副本就称为链接。链接是目录中指向文件真实位置的占位符。在Linux中有两种
不同类型的文件链接：
口符号链接
口硬链接
符号链接就是一个实实在在的文件，它指向存放在虚拟目录结构中某个地方的另一个文件。
这两个通过符号链接在一起的文件，彼此的内容并不相同。
要为一个文件创建符号链接，原始文件必须事先存在。然后可以使用1n命令以及-s选项来
创建符号链接。
---
## Page 66
3.6处理文件
S 1s -1 data_file
1 chriatine chriatine 1092 May 21 17:27 Gata_r11e
S ln -s data_file  sl_data_file
-
rvrwr-- 1 chriatine christine 1092 May 21 17:27 data_[11e
lruxrwxrwx 1 chriatine christine
9 May 21 17:29 s1_data_file -> data_f11e
在上面的例子中，注意符号链接的名字sl_data_file位于1n命令中的第二个参数位置上。显示
在长列表中符号文件名后的->符号表明该文件是链接到文件data_file上的一个符号链接。
另外还要注意的是，符号链接的文件大小与数据文件的文件大小。符号链接sl_data_file只有9
个字节，而data_file有1092个字节。这是因为s_data_file仅仅只是指向data_file而已。它们的内容
并不相同，是两个完全不同的文件。
另一种证明链接文件是独立文件的方法是查看inode编号。文件或目录的inode编号是一个用
于标识的唯一数字，这个数字由内核分配给文件系统中的每一个对象。要查看文件或目录的inode
编号，可以给1s命令加人-i参数。
296890 Gata_f11e 296891 a1_data_f11e
S 1s -1 *data_file
从这个例子中可以看出数据文件的inode编号是296890，面sl_data_file的inode编号则是
296891。所以说它们是不同的文件
硬链接会创建独立的虚拟文件，其中包含了原始文件的信息及位置。但是它们从根本上而言
是同一个文件。引用硬链接文件等同于引用了源文件。要创建硬链接，原始文件也必须事先存在，
只不过这次使用1n命令时不再需要加入额外的参数了。
 1s -1 code_file
rvrwr=- 1 chriatine chriatine 189 May 21 17:56 code_fi1e
S 1n code_file hl_code_file
S 1s -11 *code_fi1e
296892 -zwrv-r-- 2 chx1atine chx1atine 189 Kay 21 17:56
code_file
h1_code_fi1e
在上面的例子中，我们使用1s-li命令显示了*code_files的inode编号以及长列表。注意，
带有硬链接的文件共享inode编号。这是因为它们终归是同一个文件。还要注意的是，链接计数
（列表中第三项）显示这两个文件都有两个链接。另外，它们的文件大小也一模一样。
---
## Page 67
52
第3章基本的bash shell命令
说明只能对处于同一存储媒体的文件创建硬链接。要想在不同存储媒体的文件之间创建链接，
只能使用符号链接。
复制链接文件的时候一定要小心。如果使用cp命令复制一个文件，面该文件又已经被链接
到了另一个源文件上，那么你得到的其实是源文件的一个副本。这很容易让人犯晕。用不着复
制链接文件，可以创建原始文件的另一个链接。同一个文件拥有多个链接，这完全没有问题。
但是，千万别创建软链接文件的软链接。这会形成混乱的链接链，不仅容易断裂，还会造成各
种麻烦。
你可能觉得符号链接和硬链接的概念不好理解。幸好下一节中的文件重命名容易明白得多。
3.6.5重命名文件
在Linux中，重命名文件称为移动（moving）。mv命令可以将文件和目录移动到另一个位置
或重新命名。
$ 1s -1i f?11
296730 -rv-rw-r-- 1 christine christine 0 May 21 13:44 fa11
296717 -rv-rw-r-- 1 christine christine 0 May 21 13:44 fe11
296742 -rv-rw-r-- 1 christine christine 0 May 21 13:44 ful1
= z  088xoxo  --1-956
f111
$ mv fal1 fz11
 18 -1i f711
294561 -rv-rw-r-- 1 christine christine 0 May 21 13:44 fi11
296742 -rv-rw-r-- 1 christine christine 0 May 21 13:44 fu11
296730 -rv-rwr-- 1 chziat1ne chziat1ne 0 May 21 13:44 fz11
$
注意，移动文件会将文件名从fall更改为fzll，但inode编号和时间截保持不变。这是因为mv
只影响文件名。
也可以使用mv来移动文件的位置。
$ 18 -1i /home/christine/fz11
296730 -rv-rwr-- 1 chziatine chziatine 0 May 21 13 :44
/home/chrietine/ fz11
 1a -11 /home/chriatine/Plctures/
$mv fz11 Pictures/
tota] 0
$ 18 -1i /home/christine/Picture8/
tota] 0
296730 -rv=rwr-- 1 chxiat1ne chxiat1ne 0 May 21 13 :44 fz11
$ 18 -1i /home/christine/fz11
---
## Page 68
3.6处理文件
53
ls: cannot access /hone/chrlatine/fzll: No guch file or dlrectory
在上例中，我们使用mv命令把文件fzll从/home/christine移动到了/home/christine/Pirctures。和
刚才一样，这个操作并没有改变文件的inode编号或时间藏。
跨门和cp命令类似，也可以在mv命令中使用-i参数。这样在命令试图覆盖已有的文件时，你
就会得到提示。
唯一变化的就是文件的位置。home/christine目录下不再有文件fzll，因为它已经离开了原先
的位置，这就是mv命令所做的事情。
也可以使用mv命令移动文件位置并修改文件名称，这些操作只需一步就能完成。
S 18 -1i Pictures/fz11
296730 -rw-rv-r-- 1 christine christine 0 May 21 13:44
Pictures/fz11
S nv /home/christine/Pictures/fzll/home/christine/fal1
S 18 -1i /hone/christine/fa11
296730 -rw-rv-r-- 1 christine christine 0 May 21 13:44
/home/christine/fa11
S 18 -1i /hone/christine/Pictures/fz11
o such file or directory
ls1 cannot access /home/chrietine/Pictures/fz11:
在这个例子中，我们将文件fzll从子目录Pictures中移动到了主目录/home/christine，并将名字
改为fall。文件的时间藏和inode编号都没有改变。改变的只有位置和名称。
也可以使用mv命令移动整个目录及其内容。
$ 1s -1i Mod_Seripts
tota1 26
296886 -rwxrm-r-- 1 christine christine 929 May 21 16:16
file_mod,sh
296887 -rwxrv-r-- 1 christine christine  54 May 21 16:27
my_ecript
296885 -rwxrw-r-- 1 christine christine 254 May 21 16:16
296884 -rwxr-r-- 1 christine christine 243 May 21 16:16
SGID_search.sh
SUID_search.sh
S nv Mod_scripts 01d_Script8
ls1 cannot access Mod_Scripte1 No such file or directory
S 18 -1i Mod_Scripts
$ 18 -1i o1d_Soript8
tota1 26
296886 -rwxrv-r-- 1 christine christine 929 Kay 21 16:16
---
## Page 69
54
第3章基本的bash shell命令
296887 -rwxrw-r-- 1 chriatine chriatine 54 May 21 16:27
f11e_nod.ah
my_scr1pt
296884 -rwxrw-r-- 1 chriatLne chxlatLne 243 Kay 21 16:16
SGID_search , ah
SUID_search.ah
目录内容没有变化。只有目录名发生了改变。
在知道了如何使用mv命令进行重命名.不对.移动文件之后.你应该发现这其实非常容
易的。另一个简单但可能有危险的任务是删除文件。
3.6.6删除文件
迟早有一天，你得删除已有的文件。不管是清理文件系统还是删除某个软件包，总有要删除
文件的时候。
在Linux中，删除（deleting）叫作移除（removing）”。bash shell中删除文件的命令是rm。rm
命令的基本格式非常简单。
A<t[e. 11a Kdue xentsx onous x
S rm -i fal1
S 1s -1 fa11
1s: cannot accese fall: No auch file or Glrectozy
注意，-i命令参数提示你是不是要真的删除该文件。bash shell中没有回收站或垃圾箱，文件
一旦删除，就无法再找回。因此，在使用rm命令时，要养成总是加人-i参数的好习惯。
也可以使用通配符删除成组的文件。别忘了使用-选项保护好自己的文件。
$ rm -i f?11
<,og, oTg Adue xe[n0ex onousx :x
<,TTTa, 0Tg Adue xe[n0ex onousx :x
2,mg, eTT] Kdue xen6sx enous. 1x
$ 1s -1 f?11
1s: cannot access f?11: No such file or Glrectozy
rm命令的另外一个特性是，如果要删除很多文件且不受提示符的打扰，可以用-f参数强制
删除。小心为妙！
①这里原文可理解为删除的功能实际上是移除（rernove）命令rm完成的。在本书中，我们依然用“删除”这个大
家已经习惯的叫法。
---
## Page 70
3.7处理目录
55
3.7
处理目录
在Linux中，有些命令（比如cp命令）对文件和目录都有效，面有些只对目录有效。创建新
目录需要使用本节讲到的一个特殊命令。删除目录也很有意思，本节也会讲到。
3.7.1创建目录
在Linux中创建目录很简单，用mkdir命令即可：
XTOAON PT- BT S
S nkdir New_Dir
drwxcrwxx=x 2 chriatine chriatine 4096 May 22 09:48 New_D1x
系统创建了一个名为New_Dir的新目录。注意，新目录长列表是以d开头的。这表示New_Dir
并不是文件，而是一个目录。
可以根据需要批量地创建目录和子目录。但是，如果你想单单靠mkdir命令来实现，就会得
到下面的错误消息：
S nkdir New_Dir/Sub_Dir/Under_D1r
邮
o guch file or dlrectory
mkdlr : cannot create Glrectozy *New_D1x/Sub_Dix/Undex_Dix′ :
电
要想同时创建多个目录和子目录，需要加人-p参数：