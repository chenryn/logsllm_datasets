OpenPGP》，http://www.ietf.org/rfc/rfc3156.txt。
C.Ellison。《SPKIRequirements,RFC 2692》，1999年9月，
http:/www.ietf.org/rfc/rfc2692.txt。
C.Ellison、B.Frantz、B.Lampson和IR.Rivest。《SPKI Certificate
Theory,RFC 2693》，1999年9月，http://www.ietf.org/rfc/rfc2693.txt。
S.Garfinkel。《PGP:Pretty Good Privacy》
(http:/oreilly.com/catalog/9781565920989/index.html）。O'Reilly,
1995.
J.Gordon。《The Alice and Bob AfterDinner Speech》，1984年4月在
苏黎世的研讨会上提出，http://downlode.org/etext/alicebob.html。
K.Hasselbacher。《ROBOT CA》，http://www.toehold.com/robotca
K.Hasselbacher。《Robot CA:toward zero-UI crypto》，
http://www.kuro5hin.org/story/2002/11/18/135727/66.
S.Levy。《Crypto:How the Code Rebels Beat the Government
Saving Privacy in the Digital Age) Diane Pub Co.,2003.
U.Maurer。《Modeling aPublic-KeyInfrastructure》，在1996年欧洲关
于计算机安全（ESORICS'96）的专题报告会上提出。Springer-
Verlag计算机科学的演讲稿，1996年9月，第1146卷，第325-350页，
http://citeseer.ist.psu.edu/maurer96modelling.html 
2350
---
## Page 2352
N.McBurnett。《PGP Web of Trust Statistics》，http:/bcn.boulder.co.us/
~neal/pgpstat。
M.Reiter和S.Stubblebine。《Path independence for authentication in
large-scale systems》，在“第4届ACM计算机和通信安全会议”上提
出，瑞士苏黎世，1997年4月，第57-66页。
http://stubblebine.com/97ccs.pdf
M.Reiter和S.Stubblebine。Resilient Authentication Using Path
Independence》，IEEETransactions onComputers，第47卷，第12号，
1998年12月。
R.Rivest。《Can We Eliminate Certificate Revocation Lists?》，在
FinancialCryptography'98上提出，Springer计算机科学演讲稿，第
1465号（RafaelHirschfeld,ed），1998年2月，第178-183页。
B.Schneier。《Applied Cryptography:Protocols,Algorithms,and Source
CodeinC》，第2版，JohnWiley&Sons，1996年。
S.Schoen。《Casual PKI and making e-mail encryption easy》，
http://www.advogato.org/article/391.html.
P.R.Zimmermann.
《The Official PGPUser's Guide》，The MIT
Press，1995年。
P.R.Zimmermann。
《PGP:Source Code andInternals》，TheMIT
Press，1997年。
第8章开源Honeyclient：先发制
人的客户端漏洞检测
当前，客户端软件的漏洞受到攻击的频率不断升高。根据2004年9月
的一项调查，Dell公司估计90%的Windows个人计算机都至少潜伏了
一个间谍程序。根据公共漏洞和暴露（CVE）数据库
（http://cve.mitre.org）所提供的数据，Microsoft的InternetExplorer浏
览器在过去的六个月中至少发现了50个漏洞。通过攻击客户端软件
的漏洞，攻击者可以感染和控制那些受防火墙或其他措施的保护而
无法访问的系统。
2351
---
## Page 2353
众所周知，当一台受害的计算机被劫持之后，攻击者可以利用客户
端的漏洞进行许多其他恶意活动。攻击者可以盗窃有价值的信息，
例如用户的在线银行资格证书等。攻击者可以劫持受害计算机，并
把它添加到不断增长的肉鸡网络中。在肉鸡网络中，每个肉鸡都可
以成为分布式拒绝服务（DDoS）攻击或恶意软件发布系统的组成部
分。
攻击者是怎么利用客户端软件的漏洞呢？早在2002年，一篇标题为
《How toOwn theInternetInYour SpareTime》[]的论文设想了一些
可能出现的烦人场景：一种具有传染性的端虫攻击同时把目标瞄准
了服务器和客户的漏洞。首先，攻击方使用典型的Web服务器安全
览器访问这个网站时就会下载这些代码。然后，被下载的代码就可
以攻击浏览器客户的漏洞。
今天，攻击者把目标瞄准客户软件的原因是许多这样的软件应用程
序是由那些没有经过安全软件训练的人们所并发的。另外，使用客
户软件的人群要远远多于使用服务器软件的人群，并且大多数人只
是很普通的Intermet用户，很可能没有进行安全更新。相比之下，服
务器管理员一般受过专门的技术训练，会经常对服务器软件进行安
全更新。
即使用户足够明智，经常更新他们的操作系统并且很勤奋地运行反
病毒产品的最新签名，大多数通过客户软件实现攻击的恶意软件仍
然能够成功入侵用户的系统，而且不会被反病毒软件所检查。反病
毒软件生产商很难跟上它们的步伐。
漏洞攻击产业
当我思索客户端攻击的风险的时候，我查看了诸如CVE和
SecurityFocus（（http://www.securityfocus.com/bid）这样的漏洞数据
库。我意识到安全行业在服务器漏洞的确认和修补方面远远领先于
客户应用程序漏洞的确认和修补。事实上，也就是最近5到10年，我
们才开始理解客户端的漏洞和攻击。我们有大量的东西要追赴！
使事态更为严重的是，各种把攻击客户端的漏洞作为它们的商业策
略的"产业"如雨后春笋般不断冒出。根据InformationWeek所提供的信
息[2]，一家叫做Iframedollars.biz的俄罗斯公司开发了一个单线漏洞
攻击工具，并把它放在市场上向web服务器管理员推广。管理员下
2352
---
## Page 2354
载这个漏洞攻击工具，把它安装在他们的Web服务器上，当每个Web
浏览器访问了服务器并受到漏洞攻击代码的感染后，就可以向
Iframedollars.biz收取6美分。
我必须承认对这样的单线漏洞攻击非常有兴趣。因此我访问了
Iframedollars.biz，看看可以从什么地方下载它，结果发现为了获得
这个漏洞攻击工具，我需要向Iframedollars.biz发送一些信息，包括
我的姓名、住址和信用卡号码。这是相当滑稽的，你能放心把自己
的个人信息交给这样的人吗？我不太清楚会有多少web管理员同意
把这些敏感信息发送给Iframedollars.biz。当然，我放弃了获得这个
漏洞攻击工具的机会。
8.1进入Honeyclient
在网络安全管理中，安全分析师对漏洞攻击的响应质量常常取决于
他现在所掌握的与漏洞和攻击有关的知识。这些知识可用于创建入
侵检测系统（IDS）签名，或用于主动修补存在漏洞的系统。
honeypot是一种流行的用于获取高级知识的工具。它是一种专用的系
统，故意成为新攻击的目标，当一次漏洞攻击获得成功时获取与此
相关的详细信息。
但是，honeypot是消极的设备，到目前为止所有公开的honeypot系统
仅限于发现对服务器软件的攻击。当前有大量的漏洞是在客户软件
中发现的，例如Web浏览器或电子邮件客户。由于现有的honeypot系
统无法检测对这些漏洞的攻击，因此我们需要一种新技术，能够驱
动客户软件，使它们能够检测新的漏洞攻击。这个概念就是
Honeyclient。
Honeyclient系统把具有潜在漏洞的客户软件（例如Web浏览器）暴露
在潜在的恶意网站面前，然后监视系统的行为，观察有无攻击行为
发生。Honeyclient模仿连接的客户端，在正常模式下作为蜘蛛或肉
鸡，持续地访问随机的网站。这种客户程序很可能在一个沙盒内运
行，由后者监视它的行为，观察它是否偏离了正常操作的边界。例
如，我们可以对来自Honeyclient的请求进行监视，观察Honeyclient的
请求是否开始偏离良好请求的状态（例如，这个Honeyclient系统不
再写入到一个可执行文件）。如果Honeyclient开始表现出异常行
为，我们就知道它已经被感染。另外，这个监视进程还可以检测恶
意或被劫持的Web服务器。
2353
---
## Page 2355
传统的Honeypot是消极的，除非攻击者恰好对它们进行了攻击，否
则它们无法检测到恶意行为。因此，Honeyclient具有能够搜寻可疑
远程系统的优点。但是，它们各有适合自己的领地：Honeypot适合
检测服务器端的漏洞攻击，Honeyclient适合检测客户端的漏洞攻
击。
[1]S.Staniford,VPaxson,和IN.Weaver。How to Own the Internet InYour
Spare Time。http://www.icir.org/vern/papers/cdc-usenix-sec02(2008年
9月4日访问）。
[2]InformationWeek关于Iframedollars.biz的文章：
http:/www.informationweek.com/news/security/vulnerabilities/showArtic
le.jhtml?articleID=163701736。
8.2世界上第一个开源Honeyclient简介
2004年，我开始设计一个Honeyclient原型。我所作出的最早决定之
一就是开放这个原型的源代码。我希望这种做法可以激励安全社区
的其他人把Honeyclient看成是一个技术领域，并且会有一些人对这
个项目作出贡献。
为了检测漏洞攻击，我对客户软件所发生的改变进行了全面的检
查，就像Tripwire（http:/sourceforge.net/projects/tripwire）对服务器
所做的一样。我通过记录文件的MD5散列和枚举Windows的注册表
键，为Honeyclient设置了一条基线。在访问了每一个可疑网站之
后，我开始寻找原先的基线和新的快照之间的变化。
我已经决定从一个WindowsHoneyclient主机开始，因为普通用户的
计算机一般都使用这个操作系统。
我还选择了MicrosoftInternetExplorer（IE）作为访问可疑网站的浏
览器。虽然可能存在专门针对其他操作系统或浏览器的漏洞攻击，
我的Honeyclinet可能无法检测到它们，但是我只能选择一种操作系
统和一种浏览器，因此应该选择用户使用量最大的。它们也是恶意
软件开发人员最可能选择的系统，将它们暴露在漏洞攻击之下能够
为最多的人群提供帮助。
真正关键的决定是让一个真实的Web浏览器访问每个站点而不是通
过像wget这样的工具下载文件来模拟浏览器的行为。这种模拟方法
是无法让我所希望发现的恶意软件的隐藏效果现形的。实际上，
2354
---
## Page 2356
Honeyclient软件在遇到一个恶意网站时必须被劫持，这样才能收集
并分析恶意软件，以便更好地理解最近的攻击线路。利用这些信
息，我可以向用户社区警告这些不良网站以及潜在的感染后果。如
果Honeyclinet只是模拟Web浏览器，它并不会被劫持，因为它并不存
在攻击所瞄准的底层系统。
Honeyclient的操作步骤类似下面这样：
1）创建一条由MD5散列值和注册键值所组成的基准线。
2）Honeyclient主机调用iexplore.exe进程，启动Internet
Explorer（IE）。
3）打开一个以前创建的URL列表文件，然后从这个文件中逐个读取
URL。
4）驱动IE访问指定的URL。
5）当URL被访问时，就在系统上创建MD5散列值和注册键值的一个
快照。
6）如果步骤5的快照与步骤1所创建的基准线不符，Honeyclient就认
为发生了一个可疑的事件，它设置一个标志以警告用户。
7）如果快照与基准线相匹配，就对网站进行爬行（递归地访问每个
链接），直到这个网站上不再有其他链接可以访问。
8）当一个网站被完全爬行之后，Honeyclient就从URL列表中提取下
一个外部链接，并再次执行上述的过程。
最初的Honeyclient原型也是用一种驱动器一—代理体系结构开发的
（见图8-1）。驱动器代码负责创建一条初始的基准线并调用Internet
Explorer浏览器，而代理则负责创建套接字以传递来自浏览器的
HTTP请求。驱动器还负责对系统的状态进行检查。
2355