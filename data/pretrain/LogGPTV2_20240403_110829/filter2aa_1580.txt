# MJ0011: Reversing Windows 8 Kernel Security Features

## PI: EMAIL
## Goal:
- To revise the Windows 8 Release Preview and identify new security features that can defend against or mitigate kernel vulnerability attacks.
- Target: `ntoskrnl.exe`
- Tools: IDA Pro, Hex-Rays, WinDbg

## Agenda
1. **Disable Null Page Memory Allocation**
2. **Disable Win32k System Calls**
3. **Security Failure Interrupt**
4. **Nonexecutable NonPaged Pool**
5. **Apply Intel® Secure Key Technology**
6. **Apply Intel® SMEP Technology**

### 1. Disable Null Page Memory Allocation
- **Context**: In previous versions of Windows, allocating memory at a null page (e.g., for 16-bit virtual machines like `ntvdm`) could be exploited to trigger uninitialized object pointer reference vulnerabilities or other attack vectors (e.g., CVE-2010-4398).
- **New Feature**: Windows 8 disallows allocation of low addresses (0x0~0x10000) by default.
- **Mechanism**:
  - `EPROCESS->Flags.VdmAllowed` is used to control this behavior.
  - The system checks all possible locations where null pages can be allocated, such as:
    - `MiCreatePebOrTeb` (for creating PEB or TEB)
    - `MiMapViewOfImageSection` (for mapping image sections)
    - `MiMapViewOfDataSection` and `MiMapViewOfPhysicalSection` (for mapping data/physical sections)
    - `MmMapLockedPagesSpecifyCache` and `MmMapLockedPages` (for mapping in user address space)
    - `NtAllocateVirtualMemory` (for allocating process memory)

### 2. Disable Win32k System Calls
- **Context**: `win32k.sys` has been a frequent source of kernel vulnerabilities due to its ability to be called without process privilege control (e.g., MS11-087 Trojan.win32.Duqu).
- **New Feature**: Windows 8 introduces a flag `EPROCESS->Flags2.DisallowWin32kSystemCalls` to prevent win32k system calls.
- **Mechanism**:
  - GUI threads use `PsConvertToGuiThread` to make their initial win32k system call. If the `DisallowWin32kSystemCalls` flag is set, any subsequent win32k system calls will fail.
  - This flag can be set through:
    - Registry configuration (`HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\MitigationOptions`)
    - Documented API `SetProcessMitigationPolicy`
    - Inheritance from the parent process

### 3. Security Failure Interrupt
- **New Feature**: Windows 8 introduces a new security failure interrupt (INT 0x29) that triggers a Blue Screen of Death (BSOD) during security failures in the kernel or other drivers.
- **Mechanism**:
  - This interruption is added to all double-linked list operations in the OS Loader, kernel, and kernel drivers.
  - Functions like `IoRegisterFsRegistrationChangeMountAware` (safe linking) and `IoUnregisterFileSystem` (safe unlinking) are protected.
  - The handler routine `KiRaiseSecurityCheckFailure` calls `KiFastFailDispatch` to show the BSOD with bug check code 0x139.
  - Known error IDs include:
    - 0x2: Kernel driver security cookie exception
    - 0x3: Safe unlinking/safe linking exception
    - 0x6: Kernel driver security cookie initialization exception
    - 0x9: `RtlQueryRegistryValuesEx` using untrusted key (CVE-2010-4398)

### 4. Nonexecutable NonPaged Pool
- **Context**: In previous versions, the nonpaged pool could be used to create kernel vulnerability ROP (Return-Oriented Programming) attacks.
- **New Feature**: Windows 8 introduces new pool types that are nonexecutable:
  - `NonPagedPoolNx`
  - `NonPagedPoolNxCacheAligned`
  - `NonPagedPoolSessionNx`
- **Mechanism**:
  - Memory allocated from these pools is nonexecutable, and attempting to execute code in this type of pool will cause a system crash.
  - The kernel and kernel drivers now use `NonPagedPoolNx` instead of `NonPagedPool`.

### 5. Apply Intel® Secure Key Technology
- **Context**: Past kernel random number attacks have included security cookie prediction and ASLR brute force.
- **New Feature**: Windows 8 uses Intel® Secure Key Technology (Bull Mountain) to generate high-quality, high-performance entropy and random numbers.
- **Mechanism**:
  - New instruction: `RDRAND`
  - Function: `ExGenRandom`
  - Used for generating security cookies and ASLR addresses.
  - The kernel and kernel drivers use this technology to enhance security.

### 6. Apply Intel® SMEP Technology
- **Context**: Most kernel vulnerability attacks involve making the kernel code jump to preset shell code in user address space.
- **New Feature**: Windows 8 uses Intel® SMEP (Supervisor-Mode Execution Prevention) to protect pages from supervisor mode instruction fetches.
- **Mechanism**:
  - Enabled in the CPU, it prevents execution of user-mode code in kernel mode.
  - Combined with `NonPagedPoolNx`, it makes it impossible to place executable shell code in kernel objects.
  - Known attack tricks and their defenses in Windows 8 are documented.

## References
- Intel. Intel® Digital Random Number Generator Software Implementation Guide
- Intel. Intel® 64 and IA-32 Architectures Developer's Manual: Vol. 3A
- J00ru. Exploiting the otherwise non-exploitable: Windows Kernel-mode GS Cookies subverted
- H. Shacham, M. Page, B. Pfaff, E.-J. Goh, N. Modadugu, and D. Boneh. On the Effectiveness of Address-Space Randomization
- Guillaume. Bypassing ASLR and DEP on Adobe Reader X

## Q&A
- Thanks to: CHROOT Security Group, 360Safe MDT/HIPS Team

---

This revised version provides a clear, professional, and coherent structure, making the content easier to understand and follow.