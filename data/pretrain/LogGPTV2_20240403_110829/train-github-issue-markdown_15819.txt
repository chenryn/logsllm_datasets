 **I'm submitting a ...** (check one with "x")
    [x] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**
When a provided service implements the `ngOnDestroy` lifecycle hook (the only
LC hook honored by Angular at this point), Angular instantiates the service
eagerly with the module/component/directive that creates it. But if the
service does not implement this hook, Angular waits and only instantiates it
when the service is requested.
**This is clearly intended behavior**. There is a test for it here:  
angular/modules/@angular/core/test/linker/ng_module_integration_spec.ts
Line 919 in d169c24
|  let created = false;  
---|---  
At a minimum we need to document this extraordinary result.
> p.s. We also need to add documentation about `ngOnDestroy` in the regular
> docs; that is already on the docs' todo list.
More importantly, I believe this behavior is mistaken on several grounds.
  1. It is inconsistent. Why create in the presence of a destroy method and but not create w/o a destroy method?
  2. Such a service could unintentionally acquire resources and start working when it isn't actually needed at all. Developers don't know about this behavior and won't know that their constructors are called before they are expected to be called.
  3. Adding the destroy hook changes the behavior of the service. A service that was once constructed lazily will now be created eagerly for no apparent reason.
  4. It complicates the service API. There is no easy way to make the service wait until needed before it starts doing potentially expensive initialization work. Folks will have to come up with private protocols to call init on the service or bury the init logic in the methods of the service's public API.
  5. It's not clear that its scope of application is as intended. The behavior appears to have been introduced in connection with NgModules but, per the test and my experience, it applies also when the service is provided to components and directives.
This "feature" appears to have been in the product since August of 2016
(`ecdaded`) so I can't say that it is a breaking change.
**Expected behavior**
Please either remove this behavior for Angular v.4 **OR** explain what good
purpose it serves. In the latter case, the documentation should convey this
explanation to users so they will understand what is otherwise a mysterious
and inconsistent result.
  * **Angular version:** 2.4.X (since RC5)
It's still in master.