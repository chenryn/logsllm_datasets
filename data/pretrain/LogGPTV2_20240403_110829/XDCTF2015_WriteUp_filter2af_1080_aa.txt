# XDCTF2015 WriteUp

##### 译文声明
本文是翻译文章，原文来源：复旦六星战队@360安全播报。译文仅供参考，具体内容表达及含义以原文为准。

## MISC 100
题目提供了一张与官网logo完全一致的图片。起初，解题方向并不明确。随后，原图被给出，但两个文件的大小有显著差异，这表明图像并非通过简单的修改生成。提示中提到“brain”，让人联想到Brainfuck编程语言，但我对其理解仅限于它是一种较为特殊的编程语言，并未进行深入探索。进一步的线索指向了“braintools”，推测可能是使用了某种现成的图片隐写工具。通过在Google或GitHub上搜索“braintool”，可以找到相应的工具并使用其命令解码出隐藏信息。

通过上述步骤，我们得到了一段Brainfuck代码。然后利用BFI工具执行这段代码，即可得到最终结果。

## MISC 300
首先，按照惯例检查LSB（最低有效位）。
```python
import Image
a = Image.open('zxczxc.png')
a.point(lambda i: 255 if i & 1 else 0).show()
```
观察到第一列像素中隐藏的信息。接着，仔细查看这些像素值：
```python
for i in range(100):
    print(a.getpixel((0, i)))
```
输出显示，像素值在252至255之间波动，这意味着数据可能藏于每个颜色通道的最后两位二进制数中。尝试将按像素顺序、RGB顺序排列且倒数第二第一位的01串提取出来。
```python
s = ''
for i in range(165):
    p = a.getpixel((0, i))
    for k in range(3):
        s += '1' if p[k] & 2 else '0'
        s += '1' if p[k] & 1 else '0'
print(s)
```
将获取到的二进制字符串转换为ASCII字符：
```python
def tostr(s):
    ret = ''
    for i in range(0, len(s), 8):
        ret += chr(int(s[i:i+8], 2))
    return ret
print(tostr(s))
```
从输出中可以看到一个IP地址（210.27.10.195）、时间戳（2015-09-16T05:21:52+02:00）以及一些分隔符（例如98&4f#ti%dc）。最初认为IP地址可能包含有用信息，但后来发现第二个分隔符后有"xxda"，提示这是zlib压缩的数据。使用Python的zlib库解压该段数据：
```python
import zlib
print(zlib.decompress('xxdaxabHI.Ixab..1NOxcc3H/2)xc8xa8xd4MxcdK6H1xd657xae(xd15xcc+xc9xd75xcc5IOxadx05x00Zpx0fx1798&4f#ti%dc'))
```
解压后得到Flag：`xdctf{st3gan0gr4phy-enc0d3-73xt-1nto-1m4ge}`。

## REVERSE 100
本题背景设定为出题人因赶火车而留下了一个程序。经过分析，发现真正有用的逻辑隐藏在看似不会被执行的一段代码中。如果直接运行关注的部分，只会得到带有问号的“congratulations”。实际解题过程涉及对字符串进行异或操作和一系列复杂的字典查找与旋转操作，最终揭示了正确的答案。

---

希望以上优化后的文本能够更清晰地传达原文内容，并提升了整体的专业性和可读性。