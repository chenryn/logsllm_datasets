### Issue Report: Illegal Instruction on ARM CPU-based Cisco Linksys NSLU2

**Reported by:** rounin.urashima

**Summary:**
When running a simple Go program on an ARM CPU-based Cisco Linksys NSLU2, the program terminates with an "Illegal instruction" error. This issue occurs after updating to the latest version of Go using `hg update default`.

**Steps to Reproduce:**

1. **Environment Setup:**
   - Device: Cisco Linksys NSLU2
   - Operating System: Debian GNU/Linux 6.0
   - Go Version: `go version weekly.2012-03-27 +820ffde8c396`
   - ARM Environment: `GOARM=5`

2. **Code:**
   ```go
   package main
   func main() {
       print("hello, world\n")
   }
   ```

3. **Commands and Output:**
   ```sh
   rounin@LKG80B859:~$ go run hello.go
   signal 4
   rounin@LKG80B859:~$ go build hello.go
   rounin@LKG80B859:~$ ./hello
   Illegal instruction
   ```

**Expected Output:**
```
hello, world
```

**Actual Output:**
```
Illegal instruction
```

**Compiler and Operating System Information:**
- Compiler: `go build`
- Operating System:
  ```sh
  uname -a
  Linux LKG80B859 2.6.32-5-ixp4xx #1 Sun May 6 12:28:42 UTC 2012 armv5tel GNU/Linux
  ```
- CPU Information:
  ```sh
  cat /proc/cpuinfo
  Processor       : XScale-IXP42x Family rev 1 (v5l)
  BogoMIPS        : 266.24
  Features        : swp half thumb fastmult edsp
  CPU implementer : 0x69
  CPU architecture: 5TE
  CPU variant     : 0x0
  CPU part        : 0x41f
  CPU revision    : 1
  Hardware        : Linksys NSLU2
  Revision        : 0000
  Serial          : 0000000000000000
  ```

**Additional Information:**
- Before the update, the system was using `go1.0.1/release` and the program ran with the following message:
  ```sh
  This program can only be run on EABI kernels
  ```
- The `strace` output for the executable shows an illegal instruction:
  ```sh
  strace -f ./hello
  execve("./hello", ["./hello"], [/* 24 vars */]) = 0
  rt_sigaction(SIGILL, {0x237fc, [RT_1], 0}, {SIG_DFL, [], 0}, 8) = 0
  getpid()                                = 10347
  rt_sigaction(SIGILL, {SIG_DFL, [], 0}, NULL, 8) = 0
  --- SIGILL (Illegal instruction) @ 0 (0) ---
  +++ killed by SIGILL +++
  Illegal instruction
  ```

- The `gdb` backtrace shows the illegal instruction at `0x0001d744`:
  ```sh
  (gdb) run
  Starting program: /home/rounin/hello
  Program received signal SIGILL, Illegal instruction.
  0x0001d744 in runtime.check ()
  (gdb) x/i 0x0001d744
  0x1d744 :    vldr    d0, [sp, #36]   ; 0x24
  (gdb) info registers 
  r0             0x0      0
  r1             0xbe859278       3196424824
  r2             0xffffffff       4294967295
  r3             0x4      4
  r4             0x35     53
  r5             0x0      0
  r6             0x0      0
  r7             0xae     174
  r8             0x0      0
  r9             0x36314  221972
  r10            0x36100  221440
  r11            0x35ff0  221168
  r12            0xcafebabe       3405691582
  sp             0xbe859254       0xbe859254
  lr             0x23c14  146452
  pc             0x1d744  0x1d744 
  fps            0x1001000        16781312
  cpsr           0x60000010       1610612752
  (gdb) bt
  #0  0x0001d744 in runtime.check ()
  #1  0x00023c14 in runtime.cas ()
  #2  0x0002326c in _rt0_arm ()
  ```

**Compilation Time:**
- Compiling Go from source on this device takes approximately 235 minutes.

**Version Information:**
- Current Go Version:
  ```sh
  go version
  go version weekly.2012-03-27 +820ffde8c396
  ```
- Previous Go Version:
  ```sh
  hg identify
  2ccfd4b451d3 (release-branch.go1) go1.0.1/release
  ```

**Request:**
- Please provide guidance and assistance in resolving this issue. Debugging cycles on this device are lengthy, and your patience is greatly appreciated.

Thank you.