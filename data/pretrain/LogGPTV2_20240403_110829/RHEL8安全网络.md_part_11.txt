**验证**
-   要查看是否打开或关闭 panic 模式，请使用：
    ``` literallayout
    # firewall-cmd --query-panic
    ```
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#controlling-traffic-with-predefined-services-using-cli_controlling-network-traffic-using-firewalld}使用 CLI 控制预定义服务的流量 {.title}
:::
控制流量的最简单的方法是向 `firewalld`{.literal}
添加预定义的服务。这会打开所有必需的端口并根据
[*服务定义文件*]{.emphasis} 修改其他设置。
::: orderedlist
**流程**
1.  检查该服务是否还未被允许：
    ``` literallayout
    # firewall-cmd --list-services
    ssh dhcpv6-client
    ```
2.  列出所有预定义的服务：
    ``` literallayout
    # firewall-cmd --get-services
    RH-Satellite-6 amanda-client amanda-k5-client bacula bacula-client bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc ceph ceph-mon cfengine condor-collector ctdb dhcp dhcpv6 dhcpv6-client dns docker-registry ...
    [trimmed for clarity]
    ```
3.  在允许的服务中添加服务：
    ``` literallayout
    # firewall-cmd --add-service=
    ```
4.  使新设置持久：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#controlling-traffic-with-predefined-services-using-gui_controlling-network-traffic-using-firewalld}通过 GUI，使用预定义服务控制流量 {.title}
:::
这个步骤描述了如何使用图形用户界面控制预定义服务的网络流量。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**流程**
1.  启用或禁用预定义或自定义服务：
    ::: orderedlist
    1.  启动 [**[firewall-config]{.application}**]{.strong}
        工具并选择要配置的服务的网络区。
    2.  选择 `Services`{.literal} 选项卡。
    3.  选择您要信任的每种服务类型的复选框，或者清除要阻断服务的复选框。
    :::
2.  编辑服务：
    ::: orderedlist
    1.  启动 [**[firewall-config]{.application}**]{.strong} 工具。
    2.  从标为 `Configuration`{.literal} 的菜单中选择
        `Permanent`{.literal}
        。其它图标和菜单按钮会出现在[服务]{.guibutton}窗口底部。
    3.  选择您要配置的服务。
    :::
:::
`Ports`{.literal} 、`Protocols`{.literal} 和 `Source Port`{.literal}
选项卡可为所选的服务启用、更改和删除端口、协议和源端口。模块标签是用来配置
[**[Netfilter]{.application}**]{.strong} helper
模块。`Destination`{.literal}
选项卡允许将流量限制到特定的目标地址和Internet协议(`IPv4`{.literal} 或
`IPv6`{.literal})。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在`Runtime`{.literal} 模式下无法更改服务设置。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#adding-new-services_controlling-network-traffic-using-firewalld}添加新服务 {.title}
:::
可以使用图形化的 [**[firewall-config]{.application}**]{.strong}
工具、`firewall-cmd`{.literal} 和 `firewall-offline-cmd`{.literal}
来添加和删除服务。或者，您可以编辑 `/etc/firewalld/services/`{.literal}
中的 XML 文件。如果用户未添加或更改服务，则在
`/etc/firewalld/services/`{.literal} 中没有相应的 XML
文件。如果要添加或更改服务，则文件
`/usr/lib/firewalld/services/`{.literal} 可用作模板。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
服务名称必须是字母数字，此外只能包含 `_`{.literal} （下划线）和
`-`{.literal} （短划线）字符。
:::
::: title
**流程**
:::
要在终端中添加新服务，请使用 `firewall-cmd`{.literal} 或在
`firewalld`{.literal}
未激活的情况下，使用`firewall-offline-cmd`{.literal} 。
::: orderedlist
1.  运行以下命令以添加新和空服务：
    ``` screen
    $ firewall-cmd --new-service=service-name --permanent
    ```
2.  要使用本地文件添加新服务，请使用以下命令：
    ``` screen
    $ firewall-cmd --new-service-from-file=service-name.xml --permanent
    ```
    您可以使用 `--name=service-name`{.literal} 选项来更改服务名称。
3.  更改服务设置后，服务的更新副本放在
    `/etc/firewalld/services/`{.literal} 中。
    作为 `root`{.literal} 用户，您可以输入以下命令来手动复制服务：
    ``` screen
    # cp /usr/lib/firewalld/services/service-name.xml /etc/firewalld/services/service-name.xml
    ```
:::
`firewalld`{.literal} 首先从 `/usr/lib/firewalld/services`{.literal}
加载文件。如果文件放在 `/etc/firewalld/services`{.literal}
中，并且有效，则这些文件将覆盖 `/usr/lib/firewalld/services`{.literal}
中的匹配文件。一旦删除了 `/etc/firewalld/services`{.literal}
中的匹配文件，或者要求 `firewalld`{.literal} 加载服务的默认值，就会使用
`/usr/lib/firewalld/services`{.literal}
中的覆盖文件。这只适用于永久性环境。要在运行时环境中获取这些回退，则需要重新载入。
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#proc_opening-ports-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 打开端口 {.title}
:::
要允许流量通过防火墙到达某个端口，您可以在 GUI 中打开端口。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**流程**
1.  启动 [**[firewall-config]{.application}**]{.strong}
    工具并选择要更改的网络区。
2.  选择 `Ports`{.literal} 选项卡，然后点击右侧的 [Add]{.guibutton}
    按钮。此时会打开 `端口和协议`{.literal} 窗口。
3.  输入要允许的端口号或者端口范围。
4.  从列表中选择 `tcp`{.literal} 或 `udp`{.literal}。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#proc_controlling-traffic-with-protocols-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 控制协议的流量 {.title}
:::
如果想使用某种协议允许流量通过防火墙，您可以使用 GUI。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**流程**
1.  启动 [**[firewall-config]{.application}**]{.strong}
    工具并选择要更改的网络区。
2.  选择 `Protocols`{.literal} 选项卡，然后点击右侧的 `Add`{.literal}
    按钮。此时会打开 `协议`{.literal} 窗口。
3.  从列表中选择协议，或者选择 `Other Protocol`{.literal}
    复选框，并在字段中输入协议。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#proc_opening-source-ports-using-gui_controlling-network-traffic-using-firewalld}使用 GUI 打开源端口 {.title}
:::
要允许来自某个端口的流量通过防火墙，您可以使用 GUI。
::: itemizedlist
**先决条件**
-   已安装 `firewall-config`{.literal} 软件包
:::
::: orderedlist
**流程**
1.  启动 firewall-config 工具并选择要更改的网络区。
2.  选择 `Source Port`{.literal} 选项卡，然后点击右侧的 `Add`{.literal}
    按钮。`源端口`{.literal} 窗口将打开。
3.  输入要允许的端口号或者端口范围。从列表中选择 `tcp`{.literal} 或
    `udp`{.literal}。
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_securing-networks.html#controlling-ports-using-cli_using-and-configuring-firewalld}使用 CLI 控制端口 {.title}
:::
端口是可让操作系统接收和区分网络流量并将其转发到系统服务的逻辑设备。它们通常由侦听端口的守护进程来表示，它会等待到达这个端口的任何流量。
通常，系统服务侦听为它们保留的标准端口。例如，`httpd`{.literal}
守护进程监听 80
端口。但默认情况下，系统管理员会将守护进程配置为在不同端口上侦听以便增强安全性或出于其他原因。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#opening-a-port_controlling-ports-using-cli}打开端口 {.title}
:::
通过打开端口，系统可从外部访问，这代表了安全风险。通常，让端口保持关闭，且只在某些服务需要时才打开。
::: title
**流程**
:::
要获得当前区的打开端口列表：
::: orderedlist
1.  列出所有允许的端口：
    ``` literallayout
    # firewall-cmd --list-ports
    ```
2.  在允许的端口中添加一个端口，以便为入站流量打开这个端口：
    ``` literallayout
    # firewall-cmd --add-port=port-number/port-type
    ```
    端口类型为 `tcp`{.literal}、`udp`{.literal}、`sctp`{.literal} 或
    `dccp`{.literal}。这个类型必须与网络通信的类型匹配。
3.  使新设置具有持久性：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
    端口类型为 `tcp`{.literal}、`udp`{.literal}、`sctp`{.literal} 或
    `dccp`{.literal}。这个类型必须与网络通信的类型匹配。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_securing-networks.html#closing-a-port_controlling-ports-using-cli}关闭端口 {.title}
:::
当打开的端口不再需要时，在 `firewalld`{.literal}
中关闭此端口。强烈建议您尽快关闭所有不必要的端口，因为端口处于打开状态会存在安全隐患。
::: title
**流程**
:::
要关闭某个端口，请将其从允许的端口列表中删除：
::: orderedlist
1.  列出所有允许的端口：
    ``` literallayout
    # firewall-cmd --list-ports
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    这个命令只为您提供已打开作为端口的端口列表。您将无法看到作为服务打开的任何打开端口。因此，您应该考虑使用
    `--list-all`{.literal} 选项，而不是 `--list-ports`{.literal}。
    :::
2.  从允许的端口中删除端口，以便对传入的流量关闭：
    ``` literallayout
    # firewall-cmd --remove-port=port-number/port-type
    ```
3.  使新设置具有持久性：
    ``` literallayout
    # firewall-cmd --runtime-to-permanent
    ```
:::
:::
:::
::: section
::: titlepage