[《PostgreSQL 会话级资源隔离探索》](../201607/20160727_01.md)      
## 25 基因工程 - 生命科学、医疗 等业务场景    
PostgreSQL凭借良好的扩展性，不仅仅是一个数据库，同时也是具备非常强大的数据处理能力的数据平台。    
很多垂直行业的用户拿它来做各种和业务贴合非常紧密的事情。     
例如PostgreSQL在生命科学领域的应用案例 - 基因工程。        
通常的思维可能是这样的，把数据存在数据库，需要运算的时候，再把数据取出进行运算（例如配对），需要花费非常多的网络传输时间。        
![1](../201606/20160621_1_1.png)    
PostgreSQL提供了基因工程相关的数据类型，操作类型，索引。满足基因工程业务的需求。      
用户可以直接在数据库中对基因数据进行处理。同时还可以利用MPP来解决更大数据量的问题（例如压缩后百TB级别）。        
![2](../201606/20160621_1_2.png)    
![pic](../201606/20160621_1_4.png)    
![pic](../201606/20160621_1_6.png)    
[《为了部落 - 如何通过PostgreSQL基因配对，产生优良下一代》](../201606/20160621_01.md)      
## 26 数据预测、挖掘 - 金融数据分析、机器学习 等业务场景    
PostgreSQL、以及HybridDB(基于GPDB)，等PostgreSQL相关的数据库，都支持MADlib机器学习库，这个库支持机器学习领域常见的算法（例如聚类、线性回归、贝叶斯、文本处理等等）    
其中在数据领域用得较多的数据预测，可以使用MADLib的多元回归库，进行数据的预测。    
结合plR语言 或者R + pivotalR 、 python + pythonR插件，可以自动将R\python语言的命令转换为MADlib库函数，对数据进行分析。    
非常适合使用R或者python对数据进行分析的数据科学家使用。    
其特点是高效（数据与运算一体，可以使用LLVM\向量计算等技术优化，同时不需要传播数据，节约了传播的开销）、易用（支持常见的SQL、r, python等编程）。    
![pic](../201609/20160929_02/0050.jpg)    
![pic](../201609/20160929_02/0051.jpg)    
[《PostgreSQL 线性回归 - 股价预测 1》](../201503/20150304_01.md)      
[《在PostgreSQL中用线性回归分析linear regression做预测 - 例子2, 预测未来数日某股收盘价》](../201503/20150305_01.md)      
## 27 数据库端编程 - ERP、电商、传统企业、电商、运营商 等业务场景    
在传统企业、电商、运营商等涉及用户交互、或者多个系统交互的业务场景中，通常一个事务涉及到很复杂的业务逻辑，需要保证数据的一致性，同时还需要与数据库多次交互。    
比如 银行开户 ， 涉及的业务系统多，逻辑复杂。    
在传统企业中，通常使用商业数据库的过程函数，实现此类复杂的逻辑。    
PostgreSQL的数据库过程函数支持的语言非常丰富，比如plpgsql（可与Oracle pl/sql功能比肩)，另外还支持语言的扩展，例如支持python,perl,java,c,r等等作为数据库的过程函数语言。    
对于开发人员来说，几乎可以在PostgreSQL数据库中处理任何业务逻辑。    
[《论云数据库编程能力的重要性》](../201605/20160505_01.md)      
![pic](../201605/20160505_01_pic_001.png)    
![pic](../201609/20160929_02/0055.jpg)    
![pic](../201701/20170113_03_pic_002.jpg)    
[《PostgreSQL 数据库扩展语言编程 之 plpgsql - 1》](../201701/20170110_01.md)     
## 28 ECPG，C嵌入式开发 - 金融 等业务场景    
在金融行业中，用得非常多的是嵌入式SQL开发，可能为了处理复杂的逻辑，同时还需要非常高的效率、以及方便的代码管理。    
所以此类场景就会用到嵌入式SQL开发，取代部分数据库过程语言的代码。    
PostgreSQL 的ECPG，与Oracle的Pro*C功能对齐，是个非常好的选择。    
https://www.postgresql.org/docs/9.6/static/ecpg.html    
## 29 数据库水平拆分、跨平台数据融合 - 金融、电商、互联网、物联网 等业务场景    
PostgreSQL 从 2011年的9.1版本引入FDW开始，发展到现在已经支持几乎所有的外部数据源读写操作，例如mysql,oracle,pgsql,redis,mongo,hive,jdbc,odbc,file,sqlserver,es,S3,......。      
https://wiki.postgresql.org/wiki/Fdw      
开放的接口，允许用户自己添加外部数据源的支持。      
9.6针对postgres_fdw（即PostgreSQL外部数据源）再次增强，开始支持对sort, where, join的下推，支持remote cancel query, 用户使用FDW可以对应用透明的实现数据库的sharding，单元化需求。      
内核层支持sharding，这种分片技术相比中间件分片技术的好处：     
1\. 支持跨库JOIN        
2\. 支持绑定变量        
3\. 支持master(coordinator)节点水平扩展      
4\. 支持segment(datanode)节点水平扩展      
5\. 支持函数和存储过程       
6\. 支持sort, where, join的下推，支持remote cancel query，10.x支持聚合算子的下推。    
ps: 目前还不支持分布式事务（需要用户干预2PC） ，10.x的版本会增加内核层面的分布式事务控制。     
[《PostgreSQL 9.6 单元化,sharding (based on postgres_fdw) - 内核层支持前传》](../201610/20161004_01.md)      
[《PostgreSQL 9.6 sharding + 单元化 (based on postgres_fdw) 最佳实践 - 通用水平分库场景设计与实践》](../201610/20161005_01.md)      
![pic](../201610/20161005_01_pic_001.png)    
除了postgres_fdw，PostgreSQL还有很多FDW，也就是说，你可以在PostgreSQL数据库中，访问几乎任何外部数据。就像访问本地的表效果一样。    
![pic](../201609/20160929_02/0018.jpg)    
https://wiki.postgresql.org/wiki/Fdw    
## 31 地理位置信息查询 - LBS、社交、物流、出行、导航 等业务场景    
在LBS、社交、物流、出行、导航等场景中，最为常见的一个需求是基于位置的搜索，比如搜索附近的人，并按距离由近到远排序。    
在PostgreSQL中，有专门的GiST, SP-GiST索引支持，可以做到非常高效的检索，100亿地理位置数据，查询某个点附近的点，普通硬件，单个数据库响应时间在1毫秒以内。    
PostgreSQL在位置信息近邻（KNN）查询方面的性能参考。    
![pic](../201609/20160929_02/0017.jpg)    
[《PostgreSQL 百亿地理位置数据 近邻查询性能》](../201601/20160119_01.md)      
## 32 Oracle兼容性    
毫无疑问，Oracle在企业市场的份额依旧是老大哥的地位，市面上也有很多数据库对这块市场虎视眈眈。    
拥有43年开源历史的PostgreSQL数据库，是目前与Oracle兼容最为完美的数据库。业界也有许多非常成功的案例。    
比如 丰田汽车、平安银行、邮储银行 等。       
兼容性细节请参考    
http://vschart.com/compare/oracle-database/vs/postgresql    
https://wiki.postgresql.org/wiki/Oracle_to_Postgres_Conversion    
https://www.postgresql.org/about/featurematrix/  
[《数据库选型思考》](../201702/20170208_03.md)     
[《Oracle 迁移至 PostgreSQL 文档、工具大集合》](../201702/20170217_02.md)      
[《PostgreSQL Oracle 兼容性之 - RATIO_TO_REPORT 分析函数》](../201703/20170302_01.md)      
[《PostgreSQL Oracle 兼容性之 - SQL OUTLINE插件sr_plan (保存、篡改、固定 执行计划)》](../201702/20170228_01.md)      
[《PostgreSQL Oracle 兼容性之 - 函数、类型、多国语言》](../201702/20170217_01.md)      
[《PostgreSQL Oracle 兼容性之 - 内核自带的兼容函数》](../201702/20170207_01.md)      
[《Oracle log file parallel write 等待事件分析 - PostgreSQL的WAL异曲同工》](../201612/20161219_01.md)      
[《PostgreSQL Oracle 兼容性之 - plpgsql 自治事务(autonomous_transaction)补丁》](../201611/20161104_01.md)      
[《PostgreSQL Oracle 兼容性之 - PL/SQL FORALL, BULK COLLECT》](../201610/20161018_04.md)      
[《PostgreSQL Oracle 兼容性之 - 字符编码转换 CONVERT》](../201609/20160921_02.md)      
[《PostgreSQL Oracle 兼容性之 - COMPOSE , UNISTR , DECOMPOSE》](../201609/20160921_01.md)      
[《PostgreSQL Oracle 兼容性之 - BIT_TO_NUM , BITAND , 比特运算 , 比特与整型互相转换》](../201609/20160920_06.md)      
[《PostgreSQL Oracle 兼容性之 - ASCIISTR》](../201609/20160920_05.md)      
[《PostgreSQL Oracle 兼容性之 - TZ_OFFSET》](../201609/20160920_03.md)      
[《PostgreSQL Oracle 兼容性之 - NEW_TIME , SYS_EXTRACT_UTC》](../201609/20160920_02.md)      
[《PostgreSQL Oracle 兼容性之 - REMAINDER》](../201609/20160920_01.md)      
[《PostgreSQL Oracle 兼容性之 - 锁定执行计划(Outline system)》](../201607/20160725_04.md)      
[《PostgreSQL Oracle 兼容性之 - PL/SQL record, table类型定义》](../201607/20160714_01.md)      
[《为什么用 PostgreSQL 绑定变量 没有 Oracle pin S 等待问题》](../201606/20160617_02.md)      
[《PostgreSQL Oracle 兼容性之 - connect by》](../201606/20160614_03.md)      
[《PostgreSQL Oracle 兼容性之 - 如何篡改插入值(例如NULL纂改为其他值)》](../201605/20160527_01.md)      
[《PostgreSQL Oracle 兼容性之 - add_months》](../201605/20160507_01.md)      
[《PostgreSQL Oracle 兼容性之 - psql prompt like Oracle SQL*Plus》](../201605/20160503_01.md)      
[《PostgreSQL Oracle 兼容性之 - PL/SQL pipelined》](../201603/20160318_01.md)      
[《PostgreSQL Oracle 兼容性之 - sys_guid() UUID》](../201603/20160315_01.md)      
[《PostgreSQL Oracle 兼容性之 - WM_SYS.WM_CONCAT》](../201602/20160204_01.md)      
[《EnterpriseDB & PostgreSQL RLS & Oracle VPD》](../201602/20160203_03.md)      
[《PostgreSQL Oracle 兼容性之 - 函数 自治事务 的写法和实现》](../201602/20160203_02.md)      
[《PostgreSQL Oracle 兼容性之 - WITH 递归 ( connect by )》](../201512/20151221_02.md)      
[《PostgreSQL Oracle 兼容性之 - orafce介绍》](../201512/20151221_01.md)      
[《PostgreSQL Oracle 兼容性之 - orafce (包、函数、DUAL)》](../201507/20150703_01.md)      
[《PostgreSQL Oracle 兼容性之 - 事件触发器实现类似Oracle的回收站功能》](../201504/20150429_01.md)      
[《PostgreSQL 函数封装 - Wrap Function code like Oracle package》](../201206/20120606_01.md)      
[《PostgreSQL Oracle 兼容性之 - Support GROUPING SETS, CUBE and ROLLUP.》](../201505/20150526_02.md)    
[《数据库界的华山论剑 tpc.org》](../201701/20170125_01.md)    
[《BenchmarkSQL 测试PostgreSQL 9.5.0 TPC-C 性能》](../201601/20160109_01.md)      
[《BenchmarkSQL 测试Oracle 12c TPC-C 性能》](../201512/20151223_02.md)      
## 33 强大的社区力量  
PostgreSQL 的开源许可非常友好，开发者遍布世界各地，各个行业，这也是PostgreSQL数据库用户行业覆盖面非常广的原因之一。  
https://wiki.postgresql.org/wiki/Development_information  