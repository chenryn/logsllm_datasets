in a rearranged form so that we need solutions to recognize
them. However, recovering the original textures from the
rearranged textures is difﬁcult because (1) GPU vendors
document nothing about the hardware-level texture man-
agement, (2) GPUs have virtualized and paged memory,
and (3) GPU memory dumps also contain other non-color
data. Therefore, instead of trying to recover the original
textures, we strive to design methods for inferring the visited
webpages from the rearranged textures.
C. Overview of Attack Scenarios
We consider three attack scenarios to know how attackers
can infer browsing history of victims by leveraging GPUs in
various situations. First, we assume an attacker who prepares
c1, c2, cb, c3, cb, c4, cw, cw, c5, c6, cb,
where each ci is a tuple of red, blue, and green color values
(0–255), cb is black (0,0,0), and cw is white (255,255,255),
the pixel sequence set is
P = {(c1, c2), (c3), (c4), (c5, c6)}.
Moreover, the JI of the following two pixel sequence sets
P1 = {(c1, c2), (c3), (c4), (c5, c6)},
P2 = {(c1, c2, c3), (c4), (c5, c6)},
are
|P1 ∩ P2|
|P1 ∪ P2| =
|(c4), (c5, c6)|
|(c1, c2), (c3), (c4), (c5, c6), (c1, c2, c3)| =
2
5
.
26
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:59:35 UTC from IEEE Xplore.  Restrictions apply. 
(a) Chromium with GTX 780.
(b) Firefox with GTX 780.
(c) Chromium with W9000.
(d) Firefox with W9000.
Figure 7.
from NVIDIA and AMD GPUs.
Pixel sequence similarity between webpage dumps extracted
Figure 7 shows boxplots of pixel sequence similarity
of the same and different webpages with NVIDIA and
AMD GPUs. We observe that the pixel sequence similar-
ity between the same webpage is fairly higher than that
of different webpages in all cases. The median similarity
between the same webpage is 0.865 whereas that of the
different webpage is 0.014 in the Chromium browser with
the NVIDIA GPU, those of the Firefox browser with the
NVIDIA GPU are 0.478 and 0.029, those of the Chromium
browser with the AMD GPU are 0.671 and 0.007, and
those of the Firefox browser with the AMD GPU are 0.888
27
Figure 8. The amount of GPU memory the Chromium web browser utilizes
for rendering four different Google webpages with an NVIDIA GTX 780
GPU.
and 0.060. When computing the cross similarity between
different webpages, we use the centroid pixel sequence set
of each webpage, whose average similarity between pixel
sequence sets of the same webpage is the largest.
We further inspect (1) the same webpages having low
pixel sequence similarity and (2) different webpages having
high pixel sequence similarity. First, most of the same
webpages with the low similarity are dynamic webpages
showing different images at each visit, such as apple.com
and tumblr.com. If attackers prepare a number of GPU
memory dumps corresponding to the dynamic contents, they
may overcome this limitation.
Second, most of the different webpages with high similar-
ity are either similar or the same webpages having different
domain names, such as (google.com, google.co.uk)
and (facebook.com, fbcdn.net). We are certain that
distinguishing them is less meaningful because attackers
can infer a victim’s preferences using one of the similar
webpages. Furthermore, we can distinguish them if we
monitor changes in GPU memory utilization by the browsers
as Memento [28] does. Figure 8 shows that the Chromium
web browser has different GPU memory usage patterns
when rendering four different Google webpages. Such a
monitoring, however, only works with NVIDIA GPUs be-
cause AMD GPUs provide no APIs to check the available
global memory size.
The limitation of the pixel sequence matching is that pixel
sequences heavily depend on which GPU and web browser
a victim uses (Figure 9). For this reason, attackers should
prepare the web browser and the GPU that are equivalent to
those of a victim to perform this attack.
2) RGB Histogram Matching: The RGB histogram
matching compares non-black and non-white RGB his-
tograms derived from two GPU memory dumps using Eu-
clidean distance. An RGB histogram is a tuple of 256 values
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:59:35 UTC from IEEE Xplore.  Restrictions apply. 
SamewebpageDifferentwebpage0.00.20.40.60.81.0PixelsequencesimiliaritySamewebpageDifferentwebpage0.00.20.40.60.81.0PixelsequencesimiliaritySamewebpageDifferentwebpage0.00.20.40.60.81.0PixelsequencesimiliaritySamewebpageDifferentwebpage0.00.20.40.60.81.0Pixelsequencesimiliarity0500010000150002000025000300000100020003000400050006000Utilized GPU memory (KB)Elapsed time (ms)google.cagoogle.co.jpgoogle.aegoogle.frPixel sequence similarity between the same webpage dumps
Figure 9.
extracted from different browsers (on an NVIDIA GeForce GTX 780),
different generation of GPUs (NVIDIA GeForce 210 vs. GTX 780 with
Chromium), and different vendors (NVIDIA GTX 780 vs. AMD W9000)
with Chromium.
for red, blue, and green channels as follow:
H = (r0, r1, . . . , r255, g0, g1, . . . , g255, b0, b1, . . . , b255).
For example, a pixel (128,64,32) contributes one to the 128-
th, the 320-th, and the 544-th values of a tuple, respectively.
We check dissimilarity of RGB histogram tuples by divid-
ing them with the sum of all 768 values (normalization)
and computing Euclidean distance, while using a random
projection method for dimensionality reduction [31].
Figure 10 shows boxplots of RGB histogram distance of
the same and different webpages with NVIDIA and AMD
GPUs. We identify that histogram distance between the same
webpage is shorter than that of the different webpages in
all cases. The median distance between the same webpage
is 0.004 whereas that of the different webpage is 0.210 in
the Chromium browser with the NVIDIA GPU, those of the
Firefox browser with the NVIDIA GPU are 0.011 and 0.093,
those of the Chromium browser with the AMD GPU are
0.003 and 0.196, and those of the Firefox browser with the
AMD GPU are 0.004 and 0.150. Again, dynamic webpages
and similar or the same webpages with different domain
names dominate errors, like the pixel sequence matching.
Since the RGB histogram has weaker correlation with
GPUs than the pixel sequences has, preparing the same GPU
that a victim uses is optional for performing this attack.
Figure 11 shows that the RGB histogram distance between
the same webpage dumps extracted from different GPUs
is shorter than those of the different webpages when we
use the same web browser. In contrast, dumps came from
the different browsers quite differ, so that attackers should
prepare different dump sets for different browsers.
3) Inference Accuracy and Combined Matching: We
evaluate the inference accuracy of the proposed matching
methods. We randomly choose 100 front pages from the
Alexa Top 1000 websites and visit them while recording
GPU memory dumps. We then compare each of the new
dumps with the known dumps to infer the corresponding
webpages. When we detect a known dump having either
the largest similarity or shortest distance with a new dump
(a nearest neighbor), we treat both correspond to the same
(a) Chromium with GTX 780.
(b) Firefox with GTX 780.
(c) Chromium with W9000.
(d) Firefox with W9000.
Figure 10. RGB histogram distance between webpage dumps extracted
from NVIDIA and AMD GPUs.
webpage. In addition, if the proposed matching methods
decide the same or similar webpages having different do-
main names are the same, we treat the methods are correct
because visiting whether google.com or google.fr in-
curs negligible difference in inferring a victim’s preferences.
We perform this procedure 10 times and ﬁnally compute
their average.
Figure 12 shows the evaluated inference accuracy of the
proposed methods. On average, the pixel sequence matching
can infer 69.4% of the randomly selected 100 webpages and
the RGB histogram matching can infer 60.9% of them. We
identify that the Chromium web browser with the NVIDIA
28
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:59:35 UTC from IEEE Xplore.  Restrictions apply. 
BrowserGenerationVendor0.000.010.020.030.040.050.060.070.08PixelsequencesimilaritySamewebpageDifferentwebpage0.00.10.20.30.40.50.60.70.80.9HistogramdistanceSamewebpageDifferentwebpage0.00.10.20.30.40.50.60.70.80.9HistogramdistanceSamewebpageDifferentwebpage0.00.10.20.30.40.50.6HistogramdistanceSamewebpageDifferentwebpage0.00.10.20.30.40.50.6Histogramdistance(a) Same webpage.
(b) Different webpage.
Figure 11.
RGB histogram distance between dumps extracted from
different browsers (on an NVIDIA GeForce GTX 780), different generation
GPUs (NVIDIA GeForce 210 vs. GTX 780 with Chromium), and different
vendors (NVIDIA GTX 780 vs. AMD W9000) with Chromium.
GPU and the Firefox web browser with the AMD GPU are
more vulnerable.
Lastly, we simultaneously apply the pixel sequence match-
ing and the RGB histogram matching when comparing
dumps to further increase the inference accuracy. The pro-
cedure is as follows. First, we use the pixel sequence
matching for detecting the top-k known dumps similar to
a new dump (k-nearest neighbors). Next, we use the RGB
histogram matching for selecting one of the top-k known
dumps having the smallest distance with a new dump. We
treat the selected known dump as the corresponding webpage
of the new dump. As shown in Figure 12, the combined
matching achieves the highest accuracy: it correctly infers
84.6% of the randomly selected 100 webpages on average.
Particularly, victims who use the Chromium web browser
with the NVIDIA GPU are in danger because the combined
matching attack can infer the webpages they have visited
within 95.4% accuracy.
4) Efﬁciency: We lastly check the efﬁciency of our
matching methods. For the measurements, we use the test
platform that has Intel Core i7-2600 CPU and 8 GB of main
memory. On average, it takes ∼0.451 s and ∼0.002 s to
perform the pixel sequence matching and the RGB histogram
matching between two GPU memory dumps, respectively.
The average execution time of the combined matching is
the sum of the two average values. Since we can conduct
each comparison between two GPU memory dumps in
parallel, we can further accelerate the performance of the
matching methods using data parallel systems (e.g., multi-
core processors or GPUs’ computing APIs). We omit details
29
Figure 12.
browsers, and matching methods.
Portion of correctly inferred webpages according to GPUs,
of such accelerations in this work, because reducing attack
costs is not our primary goal.
E. Attack using Webpage Snapshot
The attack using known GPU memory dumps demand
attackers to prepare a number of GPU memory dumps to
perform the attack. Although the RGB history matching does
not need the same GPU a victim uses, still, preparing dumps
is signiﬁcant overhead.
We introduce another method for further reducing attack
overhead: using known webpage snapshots instead of known
GPU memory dumps. First, we use PhantomJS [32] for load-
ing the front pages of Alexa Top 1000 websites while taking
their image snapshots. Next, we compare the snapshots with
GPU memory dumps using the RGB histogram matching.
Note that we cannot perform the pixel sequence matching
using snapshots because of texture rearrangement.
When
image
snapshots, we
taking webpage
set
to our screen
page.clipRect of PhantomJS to ﬁt
is because
size to create screen-size snapshots. This
GPU memory dumps only contain a portion of webpages
displayed on a screen, whereas webpage screenshots
of PhantomJS by default also contain a portion of the
webpages not displayed on the screen (full webpage
screenshots).
Figure 13 shows boxplots of RGB histogram distance
between webpage image snapshots and dumps. We identify
that the RGB histogram matching between the webpage
snapshots and the dumps extracted from the Chromium
browsers with both GPUs work well: the median distance
between the same webpage is 0.064 whereas that of the
different webpage is 0.214 in the NVIDIA GPU, and the me-
dian distance between the same webpage is 0.009 whereas
that of the different webpage is 0.225 in the AMD GPU. In
contrast, the RGB histogram matching does not work well
when we test the Firefox browsers with GPUs: their distance
is long even when we compare the same webpages. This is
because the dumps extracted from the Firefox web browsers
also contain non-texture data, resulting in low inference
accuracy.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:59:35 UTC from IEEE Xplore.  Restrictions apply. 
BrowserGenerationVendor0.00.10.20.30.40.50.60.7HistogramdistanceBrowserGenerationVendor0.00.10.20.30.40.50.60.7Histogramdistance020406080100SequenceHistogramCombinedSequenceHistogramCombinedSequenceHistogramCombinedSequenceHistogramCombinedChromiumFirefoxChromiumFirefoxGTX 780W9000Correctly inferred webpages (%)(a) Chromium with GTX 780.
(a) Pixel sequence.
(b) Chromium with W9000.
(b) RGB histogram.
Figure 14. Comparisons between combined dumps and dumps of fore-
ground and background webpages in two tabs (Chromium and GTX 780).
such scenarios is meaningful.
First, we visit each front page of Alexa Top 100 websites
along with a randomly selected front page among them
using two tabs while recording GPU memory dumps (10
times). Next, we check the pixel sequence similarity and the
RGB histogram distance between the recorded dumps and
known dumps of the foreground and background webpages,
respectively. For simplicity, we only use the Chromium web
browser and an NVIDIA GTX 780 GPU when performing
this attack.
We observe that the recorded memory dumps with two
tabs mostly contain the pixel sequences and the RGB
histograms of the foreground webpages (Figure 14). We
conclude that the Chromium web browser does not use
GPUs for rendering background webpages as foreground
webpages cloak them.
Second, we visit each front page of Alexa Top 100
websites right after visiting a randomly selected front page
among them using two separate windows while recording
GPU memory dumps (10 times). We adjust the size and
position of two windows to avoid overlap between them.
We then check the pixel sequence similarity and the RGB
histogram distance between the recorded dumps and known
dumps of the ﬁrstly and secondly rendered webpages, re-
spectively.
We detect that the recorded memory dumps mostly con-
tain the pixel sequences and RGB histograms of the secondly
rendered webpages (Figure 15). We presume that GPUs
write the textures of the secondly rendered webpages to the
same buffer of the ﬁrstly rendered webpages so that the
earlier textures are overwritten.
(c) Firefox with GTX 780.