# Apache Tomcat 从文件包含到RCE漏洞原理深入分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 文章内容简介
本篇文章针对Apache Tomcat
Ajp（CVE-2020-1938）漏洞的文件包含和RCE的利用方式以及原理进行的深入的分析，同时包括漏洞复现和分析环境搭建的详细步骤，大家可以根据文中所写，自己搭建环境，然后通过在代码中下断点来自己进行调试，从而更好地理解漏洞的原理。
## 漏洞简介
2020年02月20日，于CNVD公开的漏洞公告中发现Apache Tomcat文件包含漏洞（CVE-2020-1938）。
Apache Tomcat为Apache开源组织开发的用于处理HTTP服务的项目。Apache
Tomcat服务器中被发现存在文件包含漏洞，攻击者可利用该漏洞读取或包含 Tomcat 上所有 webapps目录下的任意文件。
本次漏洞是一个单独的文件包含漏洞，该漏洞依赖于Tomcat的AJP（定向包协议）协议。AJP协议自身存在一定的缺陷，导致存在可控参数，通过可控参数可以导致文件包含漏洞。AJP协议使用率约为7.8%，鉴于Tomcat作为中间件被大范围部署在服务器上，本次漏洞危害较大。
## AJP13协议介绍
我们对Tomcat的普遍认识主要有两大功能，一是充当web服务器，可以对一切静态资源的请求作出回应，二就是Servlet容器。
常见的web服务器有 Apache、 Nginx、 IIS等。常见的Servlet容器有Tomcat，Weblogic，JBOSS等。
Servlet容器可以理解为是Web服务器的升级版，拿Tomcat来举例，Tomcat本身可以不做Servlet容器使用，仅仅充当Web服务器的角色是完全没问题的，但是在处理静态资源请求的效率和速度上是远不及Apache，所以很多情况下生产环境中都会将Apache作为web服务器来接受用户的请求，静态资源有Apache直接处理，而Servlet请求则交由Tomcat来进行处理。这么做就可以让两个中间件各司其职，大大加快相应速度。
众所周知我们用户的请求是以http协议的形式传递给Web
服务器的，我们在浏览器中对某个域名或者ip进行访问，头部都会有http或者https的表示，而AJP协议浏览器是不支持的，我们无法通过浏览器发送AJP的报文。当然AJP这个协议也不是提供给我们用户来使用的。
在Tomcat $CATALINA_BASE/conf/web.xml默认配置了两个Connector，分别监听两个不同的端口，一个是HTTP
Connector 默认监听8080端口，一个是AJP Connector 默认监听8009端口。
HTTP Connector的主要就是负责接收来自用户的请求，不管事静态还是动态，只要是HTTP请求就时由HTTP Connector来负责。有了这个
Connector Tomcat才能成为一个web服务器，但还额外可处理Servlet和jsp。
而AJP协议的使用对象通常是另一个Web服务器。例如Apache ，这里从网上找到了一张图，以此图来进行说明。
通常情况下AJP协议的使用场景是这样的。
AJP是一个二进制的TCP传输协议，浏览器无法使用，首先由Apache与Tomcat之间进行AJP协议的通信，然后由Apache通过proxy_ajp模块进行反向代理，将其转换成HTTP服务器然后在暴露给用户，让用户来进行访问。
之所以要这么做，是因为相比HTTP这种纯文本的协议来说，效率和性能更高，同时也做了很多优化。
其实AJP协议某种程度上可以理解为是HTTP的二进制版，为了加快传输效率从而被使用，实际情况是像Apache这样有proxy_ajp模块可以反向代理AJP协议的很少，所以日常生产中AJP协议也很少被用到
## Tomcat 远程文件包含漏洞分析
###  漏洞分析环境搭建
首先从官网下载对应的Tomcat源码文件，和可执行文件。  
下载好后将两个文件夹放入同一个目录下  
然后在源码中新增pom.xml并加入以下内容
    4.0.0
    org.apache.tomcat
    Tomcat8.0
    Tomcat8.0
    8.0
    Tomcat8.0
    java
    test
    java
    test
    org.apache.maven.plugins
    maven-compiler-plugin
    2.3
    UTF-8
    1.8
    1.8
    junit
    junit
    4.12
    test
    org.easymock
    easymock
    3.4
    ant
    ant
    1.7.0
    wsdl4j
    wsdl4j
    1.6.2
    javax.xml
    jaxrpc
    1.1