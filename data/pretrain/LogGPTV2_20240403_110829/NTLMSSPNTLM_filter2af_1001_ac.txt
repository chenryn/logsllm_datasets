will be using Unicode strings. This should only be set if the client indicates
(in the Type 1 message) that it supports Unicode. Either this flag or
Negotiate OEM should be set, but not both.  
Negotiate OEM (0x00000002) | This flag is set to indicate that the server will
be using OEM strings. This should only be set if the client indicates (in the
Type 1 message) that it will support OEM strings. Either this flag or
Negotiate Unicode should be set, but not both.  
Request Target (0x00000004) | This flag is often set in the Type 2 message;
while it has a well-defined meaning within the Type 1 message, its semantics
here are unclear.  
Negotiate NTLM (0x00000200) | Indicates that NTLM authentication is supported.  
Negotiate Local Call (0x00004000) | The server sets this flag to inform the
client that the server and client are on the same machine. The server provides
a local security context handle with the message.  
Negotiate Always Sign (0x00008000) | Indicates that communication between the
client and server after authentication should carry a “dummy” signature.  
Target Type Domain (0x00010000) | The server sets this flag to indicate that
the authentication target is being sent with the message and represents a
domain.  
Target Type Server (0x00020000) | The server sets this flag to indicate that
the authentication target is being sent with the message and represents a
server.  
Target Type Share (0x00040000) | The server apparently sets this flag to
indicate that the authentication target is being sent with the message and
represents a network share. This has not been confirmed.  
Negotiate NTLM2 Key (0x00080000) | Indicates that this server supports the
NTLM2 signing and sealing scheme; if negotiated, this can also affect the
client’s response calculations.  
Negotiate Target Info (0x00800000) | The server sets this flag to indicate
that a Target Information block is being sent with the message.  
Negotiate 128 (0x20000000) | Indicates that this server supports strong
(128-bit) encryption.  
Negotiate 56 (0x80000000) | Indicates that this server supports medium
(56-bit) encryption.  
Target Name是包含身份验证目标信息的安全缓冲区。 这通常是响应客户端请求目标而发送的（通过设置Type 1消息中的Request Target
Flags）。 它可以包含域，服务器或（显然）网络共享。 通过Target Type Domain, Target Type Server, and
Target Type Share flags指示目标类型。 Target Name可以是Unicode或OEM，如Type
2消息中存在适当的Flags所指示。
challenge是一个8字节的随机数据块。客户端将使用它来制定响应。
设置”Negotiate Local Call”时，通常会填充上下文字段。它包含一个SSPI上下文句柄，该句柄允许客户端”short-circuit”身份验证并有效规避对challenge的响应。从物理上讲，上下文是两个长值。稍后将在”Local Authentication
“部分中对此进行详细介绍。
Target information是一个包含目标信息块的安全缓冲区，该缓冲区用于计算 NTLMv2响应（稍后讨论）。它由一系列子块组成，每个子块包括：
Field | Content | Description  
---|---|---  
Type | short | Indicates the type of data in this subblock:1 (0x0100):
Server name2 (0x0200): Domain name3 (0x0300): Fully-qualified DNS host
name (i.e., server.domain.com)4 (0x0400): DNS domain name (i.e.,
domain.com)  
Length | short | Length in bytes of this subblock’s content field  
Content | Unicode string | Content as indicated by the type field. Always sent
in Unicode, even when OEM is indicated by the message flags.  
前面已经描述了OS版本的结构。
与Type 1消息一样，已经观察到一些Type 2的版本：
版本1-上下文，目标信息和操作系统版本结构均被省略。数据块（仅包含Target
Name安全缓冲区的内容）从偏移量32开始。这种形式在较旧的基于Win9x的系统中可见，并且在Open
Group的ActiveX参考文档（第11.2.3节）中得到了大致记录。
版本2-存在Context 和 Target Information
fields字段，但没有OS版本结构。数据块在目标信息标题之后的偏移量48处开始。在大多数现成的Windows发行版中都可以看到这种形式。
版本3-上下文，目标信息和操作系统版本结构均存在。数据块在OS版本结构之后开始，偏移量为56。同样，缓冲区可能为空（产生零长度的数据块）。这种形式是在相对较新的Service
Pack中引入的，并且可以在Windows 2000，Windows XP和Windows 2003的当前修补版本中看到。
最小的Type 2消息如下所示：
    4e544c4d53535000020000000000000000000000020200000123456789abcdef
该消息包含NTLMSSP签名，NTLM消息Type ，空Target
Name，最少Flags（NegotiateNTLM和NegotiateOEM）以及质询。
###  Type 2消息示例
让我们看下面的十六进制Type 2消息：
    4e544c4d53535000020000000c000c003000000001028100 
    0123456789abcdef0000000000000000620062003c000000 
    44004f004d00410049004e0002000c0044004f004d004100 
    49004e0001000c0053004500520056004500520004001400 
    64006f006d00610069006e002e0063006f006d0003002200 
    7300650072007600650072002e0064006f006d0061006900 
    6e002e0063006f006d0000000000
将其分为几个组成部分可以得出：
偏移量 | 值 | 说明  
---|---|---  
0 | 0x4e544c4d53535000 | NTLMSSP Signature  
8 | 0x02000000 | Type 2 Indicator  
12 | 0x0c000c0030000000 | Target Name Security Buffer:Length: 12 bytes
(0x0c00)Allocated Space: 12 bytes (0x0c00)Offset: 48 bytes
(0x30000000)  
20 | 0x01028100 | Flags:Negotiate Unicode (0x00000001)Negotiate NTLM
(0x00000200)Target Type Domain (0x00010000)Negotiate Target Info
(0x00800000)  
24 | 0x0123456789abcdef | Challenge  
32 | 0x0000000000000000 | Context  
40 | 0x620062003c000000 | Target Information Security Buffer:Length: 98
bytes (0x6200)Allocated Space: 98 bytes (0x6200)Offset: 60 bytes
(0x3c000000)  
48 | 0x44004f004d004100 49004e00 | Target Name Data (“DOMAIN”)  
60 | 0x02000c0044004f00 4d00410049004e00 01000c0053004500
5200560045005200 0400140064006f00 6d00610069006e00
2e0063006f006d00 0300220073006500 7200760065007200
2e0064006f006d00 610069006e002e00 63006f006d000000 0000 |
Target Information Data: 接下一表格  
Target Information Data：
偏移量 | 值  
---|---  
0x02000c0044004f00 4d00410049004e00 | Domain name subblock:Type: 2
(Domain name, 0x0200)Length: 12 bytes
(0x0c00)Data: “DOMAIN”  
0x01000c0053004500 5200560045005200 | Server name subblock:Type: 1
(Server name, 0x0100)Length: 12 bytes
(0x0c00)Data: “SERVER”  
0x0400140064006f00 6d00610069006e00 2e0063006f006d00 | DNS domain name
subblock:Type: 4 (DNS domain name, 0x0400)Length: 20 bytes
(0x1400)Data: “domain.com”  
0x0300220073006500 7200760065007200 2e0064006f006d00
610069006e002e00 63006f006d00 | DNS server name subblock:Type: 3 (DNS
server name, 0x0300)Length: 34 bytes (0x2200)Data:
“server.domain.com”  
0x00000000 | Terminator subblock:Type: 0 (terminator,
0x0000)Length: 0 bytes (0x0000)  
对此消息的分析显示：
  * 这是一条NTLM 2类消息（来自NTLMSSP Signature and Type 2指示符）。