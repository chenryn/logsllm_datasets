fails, Wikipedia knows that the user has previously visited
YouTube. Even though the user is anonymous, an SP can
learn information about the user’s behavior at another SP.
Revoking compromised TPMs.
Concurrently and independently, Brickell and Li [8] have
proposed a method to unlinkably revoke compromised
Trusted Platform Modules (TPMs) [34]. While they focus
on revoking compromised hardware, as opposed to black-
listing misbehaving users, their construction is similar to
ours. Both solutions use a protocol for proving the inequal-
ity of multiple discrete logarithms to prove that a user is
not revoked/blacklisted. Nevertheless, signatures in their
solution are not bound to the veriﬁer’s identity and authen-
ticating even once could result in the global revocation of
the prover. Our solution provides more privacy by allowing
sharing and non-sharing of blacklist entries among veriﬁers.
Finally, their solution is RSA-based while ours is pairing-
based.
8. CONCLUSION
We motivated the need for anonymous credential systems
that support anonymous blacklisting and subjective judging
without relying on trusted third parties that are capable of
deanonymizing (or linking) users. All previous solutions rely
on either trusted third parties or restricted formulations of
misbehavior. We provide the ﬁrst cryptographic construc-
tion that simultaneously provides anonymous blacklisting,
subjective judging, and eliminates the reliance on trusted
third parties capable of revoking the privacy of users.
9. ACKNOWLEDGMENTS
This work was supported in part by the Institute for Se-
curity Technology Studies, under Grant number 2005-DD-
BX-1091 awarded by the Bureau of Justice Assistance, and
the National Science Foundation, under grant CNS-0524695.
The views and conclusions do not necessarily represent those
of the sponsors.
10. REFERENCES
[1] G. Ateniese, J. Camenisch, M. Joye, and G. Tsudik. A
practical and provably secure coalition-resistant group
signature scheme. In CRYPTO, volume 1880 of LNCS,
pages 255–270. Springer, 2000.
[2] G. Ateniese, D. X. Song, and G. Tsudik.
Quasi-eﬃcient revocation in group signatures. In
Financial Cryptography, volume 2357 of LNCS, pages
183–197. Springer, 2002.
[3] M. H. Au, S. S. M. Chow, and W. Susilo. Short
e-cash. In INDOCRYPT, volume 3797 of LNCS, pages
332–346. Springer, 2005.
[4] M. H. Au, W. Susilo, and Y. Mu. Constant-size
dynamic k-TAA. In SCN, volume 4116 of LNCS, pages
111–125. Springer, 2006.
[5] M. Bellare and P. Rogaway. Random oracles are
practical: a paradigm for designing eﬃcient protocols.
In Proceedings of the 1st ACM conference on
Computer and communications security, pages 62–73.
ACM Press, 1993.
[6] D. Boneh, X. Boyen, and H. Shacham. Short group
signatures. In CRYPTO, volume 3152 of LNCS, pages
41–55. Springer, 2004.
[7] D. Boneh and H. Shacham. Group signatures with
veriﬁer-local revocation. In ACM Conference on
Computer and Communications Security, pages
168–177. ACM, 2004.
[8] E. Brickell and J. Li. Enhanced privacy ID: A direct
anonymous attestation scheme with enhanced
revocation capabilities. Cryptology ePrint Archive,
Report 2007/194, 2007. http://eprint.iacr.org/.
[9] J. Camenisch, S. Hohenberger, M. Kohlweiss,
A. Lysyanskaya, and M. Meyerovich. How to win the
clonewars: eﬃcient periodic n-times anonymous
authentication. In ACM Conference on Computer and
Communications Security, pages 201–210. ACM, 2006.
[10] J. Camenisch, S. Hohenberger, and A. Lysyanskaya.
Compact e-cash. In EUROCRYPT, volume 3494 of
LNCS, pages 302–321. Springer, 2005.
[11] J. Camenisch, S. Hohenberger, and A. Lysyanskaya.
Balancing accountability and privacy using e-cash
(extended abstract). In SCN, volume 4116 of LNCS,
pages 141–155. Springer, 2006.
Smith. Nymble: Anonymous IP-address blocking. In
Privacy Enhancing Technologies Symposium (PET
’07), Ottawa, Canada, June 2007. To appear.
[26] A. Kiayias and M. Yung. Group signatures with
eﬃcient concurrent join. In EUROCRYPT, volume
3494 of LNCS, pages 198–214. Springer, 2005.
[27] J. K. Liu, V. K. Wei, and D. S. Wong. Linkable
spontaneous anonymous group signature for ad hoc
groups (extended abstract). In ACISP, volume 3108 of
LNCS, pages 325–335. Springer, 2004.
[28] L. Nguyen. Accumulators from bilinear pairings and
applications. In CT-RSA, volume 3376 of LNCS,
pages 275–292. Springer, 2005.
[29] L. Nguyen and R. Safavi-Naini. Dynamic k-times
anonymous authentication. In ACNS, volume 3531 of
LNCS, pages 318–333. Springer, 2005.
[12] J. Camenisch and A. Lysyanskaya. An eﬃcient system
[30] C.-P. Schnorr. Eﬃcient signature generation by smart
for non-transferable anonymous credentials with
optional anonymity revocation. In EUROCRYPT,
volume 2045 of LNCS, pages 93–118. Springer, 2001.
[13] J. Camenisch and A. Lysyanskaya. Dynamic
accumulators and application to eﬃcient revocation of
anonymous credentials. In CRYPTO, volume 2442 of
LNCS, pages 61–76. Springer, 2002.
[14] J. Camenisch and A. Lysyanskaya. A signature scheme
with eﬃcient protocols. In SCN, volume 2576 of
LNCS, pages 268–289. Springer, 2002.
[15] J. Camenisch and A. Lysyanskaya. Signature schemes
and anonymous credentials from bilinear maps. In
CRYPTO, volume 3152 of LNCS, pages 56–72.
Springer, 2004.
[16] J. Camenisch and V. Shoup. Practical veriﬁable
encryption and decryption of discrete logarithms. In
CRYPTO, volume 2729 of LNCS, pages 126–144.
Springer, 2003.
[17] J. Camenisch and M. Stadler. Eﬃcient group
signature schemes for large groups (extended
abstract). In CRYPTO, volume 1294 of LNCS, pages
410–424. Springer, 1997.
[18] D. Chaum and E. van Heyst. Group signatures. In
EUROCRYPT, pages 257–265, 1991.
[19] R. Cramer, I. Damg˚ard, and B. Schoenmakers. Proofs
of partial knowledge and simpliﬁed design of witness
hiding protocols. In CRYPTO, volume 839 of LNCS,
pages 174–187. Springer, 1994.
[20] I. Damg˚ard. Eﬃcient concurrent zero-knowledge in the
auxiliary string model. In EUROCRYPT, pages
418–430, 2000.
[21] R. Dingledine, N. Mathewson, and P. F. Syverson.
Tor: The second-generation onion router. In USENIX
Security Symposium, pages 303–320. USENIX, 2004.
[22] J. R. Douceur. The sybil attack. In IPTPS, volume
2429 of LNCS, pages 251–260. Springer, 2002.
[23] S. Goldwasser, S. Micali, and C. Rackoﬀ. The
knowledge complexity of interactive proof systems.
SIAM J. Comput., 18(1):186–208, 1989.
[24] S. Goldwasser, S. Micali, and R. L. Rivest. A digital
signature scheme secure against adaptive
chosen-message attacks. SIAM J. Comput.,
17(2):281–308, 1988.
[25] P. C. Johnson, A. Kapadia, P. P. Tsang, and S. W.
cards. J. Cryptology, 4(3):161–174, 1991.
[31] P. F. Syverson, S. G. Stubblebine, and D. M.
Goldschlag. Unlinkable serial transactions. In
Financial Cryptography, volume 1318 of LNCS, pages
39–56. Springer, 1997.
[32] I. Teranishi, J. Furukawa, and K. Sako. k-times
anonymous authentication (extended abstract). In
ASIACRYPT, volume 3329 of LNCS, pages 308–322.
Springer, 2004.
[33] I. Teranishi and K. Sako. k-times anonymous
authentication with a constant proving cost. In Public
Key Cryptography, volume 3958 of LNCS, pages
525–542. Springer, 2006.
[34] TPM Work Group. TCG TPM speciﬁcation version
1.2 revision 94. Technical report, Trusted Computing
Group, 2006.
[35] P. P. Tsang, M. H. Au, A. Kapadia, and S. W. Smith.
Blacklistable anonymous credentials: Blocking
misbehaving users without TTPs (full version).
Technical Report TR2007-601, Dartmouth College,
Sep 2007.
[36] P. P. Tsang and V. K. Wei. Short linkable ring
signatures for e-voting, e-cash and attestation. In
ISPEC, volume 3439 of LNCS, pages 48–60. Springer,
2005.
[37] P. P. Tsang, V. K. Wei, T. K. Chan, M. H. Au, J. K.
Liu, and D. S. Wong. Separable linkable threshold ring
signatures. In INDOCRYPT, volume 3348 of LNCS,
pages 384–398. Springer, 2004.
APPENDIX
A. SECURITY GAMES
We use a game-based approach to deﬁne the security for-
mally. The adversary’s capabilities are modeled by oracles,
which are stateful and together share a private state denoted
by state. state contains three counters m, n and a, which
are initially set to 0, and six sets UP , UA, UB, SP , SA, AA,
which are initially set to ∅. In the following, we describe the
oracles.
P-Join This oracle simulates the registration protocol be-
tween an honest user and an honest GM. Upon in-
vocation, the oracle increments n by 1, sets state :=
state||hn, transn, credni, where transn is the transcript
of the registration protocol and certn is the resulting
user credential. (transn, n) is returned to the adversary
and n is added to UP .
A-Join This oracle simulates the registration protocol be-
tween a corrupt user and an honest GM. n is incre-
mented by 1 after the oracle is invoked. The oracle
also sets state := state||hn, transn, ⊥i, where transn is
again the protocol transcript. The oracle adds n to UA
and returns n to the adversary.
B-Join This oracle simulates the registration protocol be-
tween an honest user and a corrupt GM. Upon in-
vocation, the oracle increments n by 1, sets state :=
state||hn, ⊥, credni, where credn is the credential issued
to the user by the adversary. n is added to UB and is
returned to the adversary.
Corrupt(i) This oracle allows the adversary to corrupt an
honest user. Upon invocation, i is removed from UB
or UP and is added to UA.
credi, together with all
randomness used during any communication attempt
involving user i are returned to the adversary.
Add-SP This oracle allows the adversary to introduce an
SP into the system. When invoked, m is incremented
by 1, then added to SP , and returned to the adversary.
P-Auth(i,j) On input i such that i ∈ UP ∪ UB and j ∈
SP , the oracle uses credi to produce an authentication
transcript πa with SPj. (πa, a) is recorded in state and
returned to the adversary. a is then incremented by 1.
A-Auth(j) On input j ∈ SP , the oracle acts on behalf of
the honest SPj and interacts with a corrupt user in the
authentication protocol. The authentication transcript
πa is recorded in state after the protocol execution and
a is returned to the adversary. a is added to the set AA
and ﬁnally incremented by 1.
B-Auth(i,j) On input i such that i ∈ UB ∪ UP , the oracle
acts on behalf of an honest user and interacts with a
corrupt SPj in the authentication protocol. If j 6∈ SA, j
is removed from SP and added to SA. The authentica-
tion transcript πa is recorded in state after the protocol
execution and a is returned to the adversary. Finally,
a is incremented by 1.
AddToBL(i,j) On input i such that i  ay for all x > y, a1 is
the return value of the ﬁrst A-Auth(j) query in the
End Game Phase, ax ∈ AA for all x ∈ {1, · · · , k},
and all these k + 1 A-Auth queries are successful.
We remark that the adversary is allowed to make
any queries (except B-Join) within the series.
• k >= |UA|+QR where QR is the number of times A
invokes the oracle RemoveFromBL(j,Extract(πai ))
for i = 1, · · · , k.
A.2 Anonymity
The following game between challenger C and adversary
A formally deﬁnes anonymity.
Setup Phase. C takes a suﬃciently large security parame-
ter and generates gpk and gsk, which are given to A.
Probing Phase. A is allowed to issue queries to all the
oracles except P-Join.
Challenge Phase. Sometime during the game, A outputs
i0, i1, j such that i0, i1 ∈ UB. C then ﬂips a fair coin
b ∈ {0, 1}. Depending on j ∈ SP or not, A invokes the
P-Auth or B-Auth oracle on j, without specifying i. C
answer using ib.
Probing Phase 2. A is allowed to issue queries as in Prob-
ing Phase.
End Game Phase. A outputs a guess bit b′. A wins the
game if b = b′ and at least one of the following is true:
• (Case I.) In the probing phase, A never invokes
AddToBL(i, j) such that πi is an authentication
transcript from user i0 or i1. (Technically speak-
ing, A is allowed to make such a query provided
that just before the challenge phase,
it has in-
voked RemoveFromBL(j, τ ) to remove the ticket
τ of i0 or i1 from SPj ’s blacklist.)
In probing
phase 2, A never invokes AddToBL(i, j) such that
i = P-Auth(ib, j) or i = B-Auth(ib, j).
and πi2
are
• (Case II.) In the probing phase, A invokes
AddToBL(i1, j) and AddToBL(i2, j) such that
authentication transcripts
πi1
from user i0 and i1 respectively. A does not
and
invoke
RemoveFromBL(j, Extract(πi2 )). In probing phase
2, A never invokes RemoveFromBL(j, Extract(πi))
such that i = P-Auth(ib, j) or i = B-Auth(ib, j).
RemoveFromBL(j, Extract(πi1 ))
A.3 Non-frameability
The follow game between challenger C and adversary A
formally deﬁnes Non-frameability.
Setup Phase. C takes a suﬃciently large security parame-
ter and generates gpk and gsk, which are given to A.
Probing Phase. A is allowed to issue queries to all the
oracles except P-Join.
End Game Phase. A outputs i such that i ∈ UB, A wins
the game if at least one of the following is true:
• (Case I.) A outputs j. A invokes P-Auth(i,j) or
B-Auth(i,j) such that P-Auth or B-Auth return
an authentication transcript indicating the authen-
tication attempt is unsuccessful.
In the probing
phase, A never invokes AddToBL(k,j) such that
πk is an authentication transcript from user i.
• (Case II.) Let Si = {Extract(π)} where π is any
authentication transcript in the P-Auth, B-Auth
query involving user i. A outputs πA such that πA
is the transcript of any A-Auth of B-Auth query
and Extract(πA) ∈ Si.