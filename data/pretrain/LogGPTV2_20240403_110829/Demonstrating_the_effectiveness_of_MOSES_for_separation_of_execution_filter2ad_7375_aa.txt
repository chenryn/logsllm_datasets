title:Demonstrating the effectiveness of MOSES for separation of execution
modes
author:Giovanni Russello and
Mauro Conti and
Bruno Crispo and
Earlence Fernandes and
Yury Zhauniarovich
DEMO: Demonstrating the Effectiveness of MOSES for
Separation of Execution Modes
Giovanni Russello
University of Auckland
Auckland, New Zealand
PI:EMAIL
Mauro Conti
Università di Padova,
Padova, Italy
Bruno Crispo
Università di Trento
Trento, Italy
PI:EMAIL
PI:EMAIL
Earlence Fernandes
Vrije Universiteit Amsterdam
The Netherlands
PI:EMAIL
Yury Zhauniarovich
Università di Trento
Trento, Italy
PI:EMAIL
ABSTRACT
In this poster, we describe a demo of a light virtualisation solu-
tion for Android phones. We named our solution MOSES (MOde-
of-uses SEcurity Separation). MOSES is a policy-based frame-
work for enforcing software isolation of applications and data. In
MOSES, it is possible to deﬁne distinct security proﬁles within a
single smartphone. Each security proﬁle is associated with a set of
policies that control the access to applications and data. One of the
main characteristics of MOSES is the dynamic switching from one
security proﬁle to another. Each proﬁle is associated with a context
as well. Through the smartphones sensors, MOSES is able to detect
changes in context and to dynamically switch to the security proﬁle
associated with the current context. Our current implementation of
MOSES shows minimal overhead compared to standard Android
in terms of latencies and battery consumption.
Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection—access con-
trols, information ﬂow controls
Keywords
Android Security Extension, Separation of Modes, Light Virtuali-
sation
1. MOTIVATION
Latest smartphone models provide computational power and stor-
age capacity that only few years ago were exclusive realm of lap-
top and desktop computers. Today, smartphones enable the users
to perform several tasks while being on the move carrying only a
device that easily ﬁts in a pocket. Users have since recognised the
advantages of smartphones and it does not come as a surprise that
in 2011 half a billion of smartphones have been sold world-wide
[2].
Another incentive to smartphone sales comes from the prolifera-
tion of enterprises that adopt smartphone in their IT infrastructure.
A large number of enterprises allow their employees’ smartphones
to connect to their IT infrastructure. Enterprise have recognised
that opening their IT infrastructures to employee-owned smartphones
vastly increases their productivity. This Bring-Your-Own-Device
Copyright is held by the author/owner(s).
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
ACM 978-1-4503-1651-4/12/10.
(BYOD) policy [4] has advantages for both parties: companies can
save budget on acquiring and maintaining a ﬂeet of smartphones;
employees can avoid to carry around several devices (i.e. at least
one for work, and one for private computing).
Given the success of smartphones, these devices are becoming an
attractive target for attacks. As a consequence, we have witness a
growth in the number of malware types on smartphones [1]. For in-
stance, malicious applications may access emails, SMS and MMS
messages stored in the smartphone. This poses serious security
concerns to sensitive corporate data, especially when the standard
security mechanisms offered by the platform are not sufﬁcient to
protect the users from such attacks [3].
One possible solution to this problem is to compartmentalise the
phone, by keeping applications and data related to work separated
from recreational applications and private/personal data. This sep-
aration can be achieved by supporting separate security environ-
ments. On the same device, one security environment can be ded-
icated to sensitive/corporate data and trusted applications while on
another environment the user could install entertainment and third-
party applications. As long as applications from the second envi-
ronment are not able to access data of the ﬁrst environment the risk
of leakage of sensitive information can be greatly reduced.
An implementation of this solution is represented by virtualisa-
tion technologies where different instances of an OS can run sepa-
rately on the same device. When deployed on fully-ﬂedged devices
such PCes and servers, virtualisation is an effective solution to cre-
ate separate computation environments. Another approach that is
taking momentum especially for smartphones is para-virtualisation
[8]. Unlikely full virtualisation where the guest OS is not aware
of running in a virtualised environment, in para-virtualisation it
is necessary to modify the guest OS to boost performance. How-
ever,current implementations such as Trango, VirtualLogix, L4 mi-
crokernel, L4Android [6, 5]are still too resource demanding for
smartphones.
2. MOSES OVERVIEW
In this section, we provide an overview of MOSES. More details
of MOSES can be found in [7]. As Figure 1 shows, the MOSES
framework extends some the modules of the Android middleware.
The separation of execution is realised in MOSES through the no-
tion of Security Proﬁle (SP). MOSES supports several SP instances
within the same device. By default, the “Default” SP is always
present in MOSES. This SP can be used for containing newly in-
stalled applications or new data stored in the smartphone (e.g.,
998S e cu rity P ro file : 
S e cu rity P ro file : 
S e cu rity P ro file : 
W o rk
P riva te
D e fa u lt
A pplications
M O S E S
C onfigu ra tio n
M a na ge r
A pp 1
A pp 2
D a ta
A pp 3
A pp 4
A pp 6
D a ta
A pp 5
D a ta
S e cu rity 
P o licie s 
S e cu rity 
P o licie s 
S e cu rity 
P o licie s 
M O S E S  H yp e rviso r
P o licy E nfo rce m en t 
C on te xt M o nito rin g 
M o du le
M o du le
M O S E S
A ndroid M iddle w a re
Linu x kernel
of locked SPes: a locked SP has its settings protected by a pass-
word. In order to edit the settings of a locked SP the user needs to
supply a password ﬁrst. For instance, the “Work” SP in Figure 1
is a locked proﬁle where the password is only know to the IT ad-
ministrator of the company where the user of smartphone works. In
this way, the user owning the smartphone cannot edit. In this way,
the company makes sure that its SP is not modiﬁed by the user once
it is installed in the smartphone.
3. DEMO
In our demo, we demonstrate several aspects of MOSES. First
of all, we show how to deﬁne new SPes and how to edit existing
ones. Second, we demonstrate how changing of context informa-
tion drives the switching of SPes. Finally, we show the impact that
MOSES has on the execution of the applications.
Figure 1: MOSES Overview.
3.1 Security Proﬁle Management
as an email attachment). The “Work” SP is used for accessing
work-related data through company-approved applications. The
“Private” SP is used by the user for accessing private information
such as emails and SMS messages from family and friends. Also,
in “Private” SP the user can install her preferred applications and
games.
An SP is associated with a set of security policies. Through the
enforcement of the security policies, MOSES guarantees that appli-
cations within an SP can access only the data within the same SP.
MOSES achieves this ﬁne-grained level of enforcement by means
of data tainting implemented in the Policy Enforcement Module
(PEM). Basically, when data is associated with an SP it is tainted
with the SP name. The security policies speciﬁed in that SP en-