use in practice.
5.1 Accuracy
Table 1: The accuracy of conﬁrmation/login phases
in three tests.
First Test
Second Test
Third Test
First
Total
First
Total
First
Total
Conﬁrmation
96.30% 100%
-
-
-
-
Login
91.77% 100% 76.54% 92.59% 54.72% 81.13%
In order to analyze user recollection in our experiment,
we deﬁne ﬁrst accuracy and total accuracy. First accu-
racy means that a user is successful to login in the ﬁrst
attempt. Total accuracy means that a user is successful to
login within six attempts. Table 1 shows the ﬁrst accuracy
and total accuracy of the conﬁrmation/login phase of the
three tests. It is clear that both ﬁrst and total accuracy in
the ﬁrst test are high. After one week, the ﬁrst accuracy in
the second test drops to 76.54%, but the total accuracy is
still 92.59%. We analyzed failed submissions in the second
test and discovered that participants did not forget their
passwords. Most of them still remember the positions of
click-points of passwords; however, the points they chosen
are very closed to click-points of passwords but not within
the tolerance squares, or they got confused by the multi-
ple sets of accounts and passwords, but most of them can
log into the system eventually after a few tries. Hence, if
we increase the size of tolerance squares to 30 × 30 pixel,
the total accuracy of login phase in second test will become
from 92.59% to 98.77%. However, it will also decrease the
security strength of PassMap, but we think it is still secure
enough (discussed in Section 6 later). Moreover, even after
a long time period (six weeks), the total accuracy in third
test is still 81.13%.
In summary, we think that the passwords of PassMap are
easy for humans to memorize, even after a long time pe-
riod. On average users can log into the system within 1.37
and 1.65 login submissions with the total accuracy of lo-
gin being 92.59% and 81.13% after one week and six weeks
respectively, even with multiple sets of accounts and pass-
words.
5.2 Usability
We measure the total time and the number of functions
used per login submission to understand the usability of
PassMap in practice.
The total time of registration is a little bit long (87.34
seconds on average), but we think it is acceptable. The
reason is because users must spend time to think about areas
to select click-points from, and then try to manipulate the
world map to those areas. The total time in the conﬁrmation
phase and the login phase in ﬁrst test are 35.30% and 30.62%
of that in registration phase, i.e., 2.83 and 3.26 times faster,
and the trend of the number of functions used is also similar
(see Table 2). This is the advantage of using the world map
as the extremely huge passwords space. After one week, the
total time and the number of functions used in login phase
in second test is slightly more than those in login phase in
ﬁrst test because it takes time to recall passwords, but the
total time is still 49.09% of the registration.
Table 2: The total time and the number of functions
used in conﬁrmation/login phase.
Login(1st)
Conﬁrmation(1st)
Login(2nd)
Mean Median
S.D Mean Median
S.D Mean Median
S.D
Total Time(s)
40.01
37.54
19.96
34.70
33.29
19.97
55.64
52.45
70.31
Zoom Out
Zoom In
Search
Drag
1.99
0.31
1.53
5.85
1
0
2
4
2.50
0.77
0.82
8.60
1.91
0.24
1.52
5.39
0
0
2
3
2.58
0.72
0.84
9.14
1.97
0.24
1.73
6.32
0
0
2
4
2.58
0.67
1.18
6.78
In summary, we think that PassMap is friendly to use in
practice. Although users must spend more time to create
their passwords, they can conﬁrm or log into the system
faster (between 34.7s and 55.64s) based on their knowledge
about the world map one week later. We think the results
are acceptable because clicking 2 points in a 226
× 226 pixel
large image and using functions to manipulate the world
map are optimized. Furthermore, the numbers of each func-
tions is used is very low and stable in both conﬁrmation and
login phases. This shows that users can easily manipulate
the world map to preferred areas and use the system with
ease once the click-points have been decided. Hence, we
think that PassMap is suitable to build and use in practice.
6. SECURITY ANALYSIS
Brute Force Attacks
In order to quantify the security
of PassMap against brute force attacks, we calculate the en-
tropy of password in PassMap. Entropy means the quantity
of information inside the password space, i.e., all possible
passwords, in bits. If the entropy of a password space is x
bits, there will be 2x possible passwords in that space.
In our implementation, the size of the world map is 226
×
226 pixel, and the tolerance squares are 20 × 20 pixel. How-
ever, we think that the oceans look about the same in the
world map, and no participants selected click-points in the
ocean in the user study, so we exclude ocean. Hence, the
image size becomes 226
× 0.2905 pixel (about 29.05%
of Earth is land). We then measure the security strength of
PassMap with entropy.
× 226
Table 3: The entropy (bits) of PassMap and corre-
sponding length of text passwords , compared with
PassPoints.
PassMap
PassPoints
sequential click-point(s)
1
2
3
4
5
Entropy of 20 × 20 (bits)
41.57
Length of Text Passwords
6.35
83.14
12.69
124.72
166.29
207.86
19.04
25.39
31.37
Total Accuracy
-
92.59%
-
-
-
5
43
6.56
94%
Table 3 shows the entropy of PassMap against brute force
attacks and corresponding length of text passwords with
20 × 20 pixel wide tolerance squares, varied from 1 to 5 se-
quential click-point(s), compared with PassPoints [12][1][9].
We can ﬁnd that even with only 1 click-point, the security
strength of PassMap is closed to that of PassPoints with 5
click-points, which is approximately equal to the strength
of a 6 textual passwords. With our proposed 2 click-points
scheme, the entropy is 83.14 bits, which is approximately
equal to a 12 textual password. We think this is more se-
cure than most graphical-password authentication systems
in practice against brute force attacks [1].
Pattern Dictionary Attacks
Just like other cued-recall
based systems, PassMap is still vulnerable to the threat of
pattern dictionary attacks. Attackers can collect the image
of the world map and perform image processing [4] to ob-
tain hotspots and patterns. However, we increase the cost
of pattern dictionary attacks greatly, making it more dif-
ﬁcult because of the time and computing power available
in practice. Compared to PassPoints with 451 × 331 pixel
wide image, the image size of PassMap, 226
× 226 pixel, is
3.02 × 1010 times larger. Even when we exclude the parts
of the ocean, it is still about 8.76 × 109 times larger than
the image of PassPoints. Hence, the cost of processing the
whole image of PassMap is extremely high.
However, in order to memorize the passwords more easily,
users may choose the click-points near one’s birthplaces or
residences. Hence, attackers can decrease the image size to
be processed and lower attack cost by collecting personal
information about users. We think that this is the trade-
oﬀ between security and users’ recollection. However, com-
pared to PassPoints, the cost for attackers is still high be-
cause although users choose birthplaces or residences as their
passwords, the map size (i.e., password space) is still large.
Moreover, attackers must do additional eﬀort to collect the
personal information about users or the list of famous land-
scapes. We also measured the distance between the 2 click-
points in a password. On average they were 3198227.4 pixel
apart, which is equal to 4997.23 frame blocks. This means
the distance between 2 click-points of a password is quite
large, which also increases the cost for attackers.
Shoulder-surﬁng attack is a direct attack fo-
Limitation
cused on the visual aspect of graphical passwords. When
users are logging in or inputting passwords, attackers may
directly observe or use external recording devices such as
high resolution cameras and surveillance equipments [6] to
collect users’ credentials. PassMap is not resistant to shoulder-
surﬁng attack, but it decreases the probability of successful
attacks and increases the cost for attackers when compared
with PassPoints. It is diﬃcult for attackers to know where
these areas are or how to use the map functions to shift
the map to these areas by the small parts displayed unless
attackers record the entire authentication process.
7. CONCLUSION
In order to solve the password recollection and security
problems of PassPoints, we propose a novel world map based
graphical-password authentication system called PassMap.
By using an extremely huge world map image as the pass-
word space, and a sequence of 2 click-points that user selects
in an huge world map as the password. We implemented a
prototype of PassMap and conducted a user study. The col-
lected results shows that after a week, the accuracy of login
is 92.59%. The accuracy of PassMap is higher than that
of PassPoints. Moreover, even after a long time period (six
weeks), the accuracy of login is still 81.13%. The total time
of login is on average between 34.7s and 55.64s.
PassMap provides 83.14 bits entropy against brute force
attacks, much higher than the 43 bits provided by Pass-
Points, even when we exclude the oceans. Moreover, the
image size of PassMap is 3.02 × 1010 times larger than that
of PassPoints. PassMap increases the cost of pattern dictio-
nary attacks greatly because of time and computing power
available in practice, even though there are still hotspots on
the world map. We conclude that PassMap is a secure and
friendly cued-recall based graphical-password authentication
system with easy-to-remember passwords for humans.
8. REFERENCES
[1] R. Biddle, S. Chiasson, and P. van Oorschot.
Graphical passwords: Learning from the ﬁrst twelve
years. ACM Computing Surveys (to appear). School of
Computer Science, Carleton University, 2010.
[2] G. Blonder. Graphical password, Sept. 24 1996. US
Patent 5,559,961.
[3] S. Chiasson, A. Forget, E. Stobert, P. Van Oorschot,
and R. Biddle. Multiple password interference in text
passwords and click-based graphical passwords. In
Proceedings of the 16th ACM conference on Computer
and communications security, pages 500–511. ACM,
2009.
[4] A. Dirik, N. Memon, and J. Birget. Modeling user
choice in the passpoints graphical password scheme. In
Proceedings of the 3rd symposium on Usable privacy
and security, pages 20–28. ACM, 2007.
[5] I. Jermyn, A. Mayer, F. Monrose, M. K. Reiter, and
A. D. Rubin. The design and analysis of graphical
passwords. In Proceedings of the 8th conference on
USENIX Security Symposium-Volume 8, pages 1–1.
USENIX Association, 1999.
[6] B. Laxton, K. Wang, and S. Savage. Reconsidering
physical key secrecy: Teleduplication via optical
decoding. In Proceedings of the 15th ACM conference
on Computer and communications security, pages
469–478. ACM, 2008.
[7] D. Nelson, U. Reed, and J. Walling. Picture
superiority eﬀect. Journal of Experimental Psychology:
Human Learning and Memory, 3:485–497, 1977.
[8] A. Perrig and D. Song. Hash visualization: A new
technique to improve real-world security. In
International Workshop on Cryptographic Techniques
and E-Commerce, pages 131–138. Citeseer, 1999.
[9] X. Suo, Y. Zhu, and G. Owen. Graphical passwords:
A survey. 2005.
[10] J. Thorpe and P. Van Oorschot. Towards secure design
choices for implementing graphical passwords. 2004.
[11] J. Thorpe and P. van Oorschot. Human-seeded attacks
and exploiting hot-spots in graphical passwords. In
Proceedings of 16th USENIX Security Symposium on
USENIX Security Symposium, pages 8:1–8:16.
USENIX Association, 2007.
[12] S. Wiedenbeck, J. Waters, J. Birget, A. Brodskiy, and
N. Memon. Passpoints: Design and longitudinal
evaluation of a graphical password system.
International Journal of Human-Computer Studies,
63(1-2):102–127, 2005.
[13] S. Wiedenbeck, J. Waters, L. Sobrado, and J. Birget.
Design and evaluation of a shoulder-surﬁng resistant
graphical password scheme. In Proceedings of the
working conference on Advanced visual interfaces,
pages 177–184. ACM, 2006.