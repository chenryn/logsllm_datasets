User: Configure one Nginx server to reverse proxy multiple web applications.
Assistant: 1. Install Nginx Run the following command on the server to install Nginx: ``` sudo apt update sudo apt install nginx ``` 2. Create a new Nginx virtual host configuration file in the `/etc/nginx/sites-available/` directory Create a new virtual host configuration file in: ``` sudo nano /etc/nginx/sites-available/reverse-proxy ``` In this file, you need to add the following configuration: ``` # HTTP server listening port number server { listen 80; server_name example.com; # static file mapping location /static/ { alias /var/www/example/static/; } # reverse proxy the request to example_app1 location /example1 { proxy_pass http://127.0. 0.1:8000/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } # Reverse proxy the request to example_app2 location /example2 { proxy_pass http://127.0.0.1:8080/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } } ``` Here we define two reverse proxy locations `/example1` and `/example2` which forward requests to ports `8000` and `/example2` on the local machine respectively `8080`. Additionally, we define a static file map for serving our static files in the future. 3. Enable the Nginx virtual host configuration file to link the configuration file to `/etc/nginx/sites-enabled/`: ``` sudo ln -s /etc/nginx/sites-available/reverse-proxy /etc/nginx /sites-enabled/ ``` 4. Restart Nginx Restart Nginx with the following command for the changes to take effect: ``` sudo systemctl restart nginx ``` You can now access `http://example.com/example1 /` and `http://example.com/example2/`, so that requests are reverse-proxyed to our two web applications.