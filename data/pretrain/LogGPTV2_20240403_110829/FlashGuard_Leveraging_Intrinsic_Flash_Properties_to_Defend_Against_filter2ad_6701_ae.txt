5.7
5.7
(a) Server Storage in Enterprise
(b) Server Storage in University
(c) Misc I/O Workloads
Figure 12: The average latency of running real-world workloads when the over-provisioning is changed from 20% to 30%. The
time of holding retained invalid pages is set to be 20 days.
6.4 Impact on SSD Lifetime
As each flash block has limited endurance, it is necessary to ensure
FlashGuard can offer acceptable SSD lifetime. Two metrics are used
to evaluate FlashGuard’s impact on SSD lifetime. (1) The wear
balance measures whether the flash blocks age evenly or not. We
use the standard deviation of the remaining lifetime of all the flash
blocks to evaluate SSD’s wear balance. (2) The write amplification
factor (WAF) [57] evaluates the actual amount of physical write
traffic to the logical amount of write traffic. Larger WAF means that
SSD suffers from more write traffic, indicating that the SSD would
last for a shorter time.
additional page movements for retaining invalid pages. As the time
of holding the retaining invalid pages in flash device is increased,
the WAF is slightly increased. However this is less of a concern. For
an SSD that usually has a lifetime of 160 - 250 weeks, the slightly
increased WAF reduces its lifetime by only one or two weeks, which
is acceptable in practice.
FlashGuard aims to achieve the same wear balance as the unmod-
ified SSD since their basic strategies for GC and block allocation
are the same. During the GC procedure, the hot block (which is
erased frequently) will be swapped with cold block to make sure
the wear balance is well maintained.
The wear balance of FlashGuard is even better than unmodified
SSD for some workloads such as those in enterprise servers (see
Figure 13). This could be because FlashGuard delays GC execution
on some flash blocks, which affects the wear distribution among
the flash blocks. Overall, the experiments with a set of real-world
workload traces demonstrate that FlashGuard could maintain the
wear balance across all the flash blocks as well as that of the state-
of-the-art SSD.
We use another metric WAF to evaluate how FlashGuard can
affect SSD lifetime. As shown in Figure 14, for the storage workloads
running in enterprise and university, the WAF of FlashGuard is the
same as that of unmodified SSD. For IO-intensive workloads, the
WAF is increased by up to 4%. This is because FlashGuard incurs
7 DISCUSSION AND FUTURE WORK
According to our study in § 2, few encryption ransomware was
developed considering the SSD characteristics. In this section, we
discuss the possible ransomware attacks against FlashGuard and
potential research directions in the future.
Exploiting storage capacity. To support data recovery, Flash-
Guard holds the data potentially encrypted by ransomware and
prevents them from being discarded by garbage collection. Intuition
suggests an attacker can exploit storage capacity and keep writing
to occupy the available space in SSD, forcing FlashGuard to release
its hold. Another potential attack is that a ransomware keeps read-
ing and overwriting data to the SSD in order to cause FlashGuard
to retain a large amount of garbage data. In practice, such attacks
are in vain. FlashGuard refuses to release data hold if the lifespan of
the holding data has not yet expired, even though the SSD is fully
occupied. When such an incident happens, FlashGuard will stop
issuing IO requests when the SSD is full, resulting in the failure
of filesystem operations in OS. Therefore, although ransomware
has the kernel privilege, it cannot prevent a user from noticing the
abnormal events.
Timing attacks. Time is critical for both security and performance
of FlashGuard. The longer FlashGuard holds stale data, the more
ms-hmms-mdsms-prnms-projms-prxyms-rsrchms-srcms-stgms-tsms-usrms-wdevms-web020040060080010001200MicrosecondsUnmodified SSD (20%-over-provision)FlashGuard (20%-over-provision)Unmodified SSD (30%-over-provision)FlashGuard (30%-over-provision)coursewebmailhomemailserverresearchwebusers050100150200250300350MicrosecondsPostmarkIOZoneTPCCTPCE100101102103104105Microseconds(a) Server Storage in Enterprise
(b) Server Storage in University
(c) Misc I/O Workloads
Figure 13: The normalized wear balance (lower is better) across all the flash blocks after running real-world workloads.
(a) Server Storage in Enterprise
(b) Server Storage in University
(c) Misc I/O Workloads
Figure 14: The normalized write amplification factor (WAF) of FlashGuard compared to Unmodified SSD (lower is better).
overhead it might impose to I/O operations. To obtain high storage
performance, a user might set the lifespan of holding data relatively
short. In this way, the user is exposed to the threat of ransomware
attacks in that ransomware could slow down the pace of encrypting
data and notifying victims.
As discussed in § 2, ransomware variants have been evolving
to lock up user data and collect ransom rapidly to prevent from
being caught. In § 6, we have already demonstrated that FlashGuard
typically incurs only negligible overhead to regular I/O operations,
even though we set the lifespan of holding data for 20 days. This
implies FlashGuard is effective in defending against the aforemen-
tioned ransomware attacks. This is because it not only significantly
increases the risk of ransomware of being caught but also thwarts
ransomware authors from gaining rewards rapidly. We wish to
explore new detection and defense mechanisms against the timing
attacks in the future.
Secure deletion. FlashGuard retains overwritten contents for the
sake of recovery. Intuitively, this design contradicts to the objec-
tive of secure deletion [24, 37–39, 54], which requires irrecoverable
data deletion from a physical medium. However, we believe Flash-
Guard is compatible with secure deletion. In particular, FlashGuard
can use a user-specified encryption key to encrypt the stale data
potentially overwritten by ransomware. In this way, a user can
still perform data recovery but not worrying about data leakage
because adversaries cannot restore “securely deleted data” without
the encryption key. As future work, we will develop this solution,
making FlashGuard compatible with secure deletion.
Protecting against encryption ransomware on various plat-
forms. FlashGuard leverages the intrinsic properties of Flash to
protect against encryption ransomware, which means its approach
can be applied to any kind of flash-based storage devices to protect
different computing platforms against encryption ransomware. A
typical example is the mobile device which has used Flash to store
personal user data for decades. As the flash devices used on mo-
biles (e.g., eMMC) share the same intrinsic properties as that on
personal computers and enterprise servers (e.g., SSDs) [15, 21, 25],
our approach can be deployed on the mobile platform to enhance
its storage system and protect users against the ever-increasing
threat of mobile ransomware such as Simplocker [2, 26, 35, 43].
8 RELATED WORK
The lines of work most closely related to FlashGuard are research
on ransomware detection and data recovery.
Ransomware detection. The prior research mainly focuses on
demystifying ransomware attacks [20] and detecting their foot-
prints [19, 44, 45]. Several defense mechanisms have been proposed
and developed. Kharraz et al. proposed UNVEIL [19], a dynamic anal-
ysis system that characterizes encryption ransomware behavior
and detects ransomware footprints by tracking how ransomware
interacts with user data. CryptoDrop [44] is another ransomware
detection system that alerts users when it observes a process that
appears to tamper with a large amount of user data. In addition,
recent research leverages machine learning techniques to perform
ransomware analysis and classification. EldeRan [45] is such an
example which models each program as a set of features and do the
classification to determine if the program is a piece of ransomware.
The mechanisms discussed above offer effective detection of
encryption ransomware. However, they do not provide sufficient,
ms-hmms-mdsms-prnms-prxyms-rsrchms-srcms-stgms-tsms-usrms-wdevms-web00.20.40.60.81.01.2Normalized Wear BalanceUnmodified SSDFlashGuard (2 days)FlashGuard (4 days)FlashGuard (8 days)FlashGuard (16 days)FlashGuard (20 days)coursewebmailhomemailserverresearchwebusers00.20.40.60.81.01.2Normalized Wear BalancePostmarkIOZoneTPCCTPCE00.51.01.52.02.53.0Normalized Wear Balancems-hmms-mdsms-prnms-prxyms-rsrchms-srcms-stgms-tsms-usrms-wdevms-web00.20.40.60.81.01.2Normalized WAFUnmodified SSDFlashGuard (2 days)FlashGuard (4 days)FlashGuard (8 days)FlashGuard (16 days)FlashGuard (20 days)coursewebmailhomemailserverresearchwebusers00.20.40.60.81.01.2Normalized WAFPostmarkIOZoneTPCCTPCE00.20.40.60.81.01.2Normalized WAFproper cure for the damage that has been caused. As such, ran-
somware still locks up a few files. Given that encrypted files might
be vitally important for business operations, the victims may still
have to pay a hefty ransom request in order to minimize the damage.
In this paper, we look beyond ransomware detection and concen-
trate on a solution to offset the damage to user files. To the best of
our knowledge, FlashGuard is the first system designed to reinstate
damage caused by encryption ransomware.
Data recovery. Data recovery techniques might allow users to
restore their data to the copies prior to the encryption. A large
number of backup systems have been proposed [5, 12, 33, 41]. The
ones that have been commonly adopted on Unix systems are dump
and tar utilities. They both support full and incremental backup
strategies [33]. On Microsoft Windows system, the most popular
backup system is Volume Shadow Copy Service that archives user
data on local and external volumes in an incremental manner [41].
Another line of work capable of achieving data recovery are log-
structured file systems [40] and journaling file systems [32]. They
both maintain data updates in persistent logs. Once data loss or
inconsistency occurs, they can recover the data back to previous
states by rolling back the logs.
Apart from the backup systems integrated into modern OSes,
other well-developed backup systems include the IBM Tivoli Stor-
age Manager [5] that performs selective, incremental backup in
conjunction with deduplication, and those cloud based storage
systems [12] that synchronize file updates and creation with the
backup storage running on the cloud.
As a defense mechanism, however none of them is sufficient and
proper. To avoid loss of files newly updated or created, they have
to perform backup frequently. From the perspective of efficiency,
this is particularly time consuming. Since ransomware has already
run with the kernel privilege, the backup systems proposed can
be easily disabled or circumvented. For example, a backup process
that synchronizes user files with a cloud storage can be terminated
by ransomware. In this work, we design and develop firmware-
level data recovery mechanism, making it naturally resistant to
ransomware attacks launched at both user and kernel levels.
Looking beyond file backups, researchers proposed to integrate
proactive defense mechanisms into the existing software systems
recently. ShieldFS [6] monitors the low-level file access activities
to detect ransomware and implements a protection layer with the
copy-on-write mechanism to recover data. PayBreak [23] hooks
crypto functions in the standard libraries to identify the invoca-
tions from ransomware and logs the encryption key for future data
decryption. Similar to the attacks against file backups, ransomware
can easily undermine these mechanisms by disabling them with
kernel privilege or obfuscating the execution of its critical functions.
9 CONCLUSION
In this paper, we develop FlashGuard, a ransomware-tolerant SSD
that retains the data potentially encrypted by ransomware in SSDs.
With FlashGuard, we demonstrate that victims can efficiently rein-
state the damage to their files caused by encryption ransomware.
The design of FlashGuard takes advantage of the intrinsic flash
properties. We show FlashGuard only introduces negligible over-
head to regular storage operations and has trivial impact on SSD
lifetime. In comparison with existing detection mechanisms against
ransomware, FlashGuard is the first firmware-level defense sys-
tem, it is naturally resistant to the ransomware that exploits kernel
vulnerabilities or runs with the kernel privilege.
ACKNOWLEDGMENTS
We would like to thank the anonymous reviewers for their helpful
comments and feedback. This research was supported in part by
NSF grant 1526798, ARO W911NF-13-1-0421 (MURI), NSF CNS-
1422594, and NSF CNS-1505664.
REFERENCES
[1] Nitin Agrawal, Vijayan Prabhakaran, Ted Wobber, John D Davis, Mark S Manasse,
and Rina Panigrahy. 2008. Design Tradeoffs for SSD Performance.. In USENIX
Annual Technical Conference. 57–70.
[2] Nicolo Andronio, Stefano Zanero, and Federico Maggi. 2015. HelDroid: Dissecting
and Detecting Mobile Ransomware. In Proc. International Symposium on Research
in Attacks, Intrusion and Detection (RAID’15). Kyoto, Japan.
[3] Werner Bux and Ilias Iliadis. 2010. Performance of greedy garbage collection in
flash-based solid-state drives. Performance Evaluation 67, 11 (2010), 1172–1186.
https://blog.malwarebytes.com/threat-analysis/2016/03/
cerber-ransomware-new-but-mature/. (2016).
[4] Cerber Ransomware - New, But Mature. 2016.
[5] IBM Comparing. 2002. Tivoli Storage Manager and VERITAS NetBackup in
Real-World Environments. A summary by IBM of the whitepaper and benchmark
written by Progressive Strategies (2002).
[6] Andrea Continella, Alessandro Guagneli, Giovanni Zingaro, Giulio De Pasquale,
Alessandro Barenghi, Stefano Zanero, and Federico Maggi. 2016. ShieldFS: A
Self-healing, Ransomware-aware Filesystem. In Proc. the 32nd Annual Conference
on Computer Security Applications (ACSAC’16). Los Angeles, CA.
https://support.microsoft.com/en-us/help/835840/data-recovery. (2014).
[7] Data Recovery. 2014.
[8] Niv Dayan, Philippe Bonnet, and Stratos Idreos. 2016. GeckoFTL: Scalable Flash
Translation Techniques For Very Large Flash Devices. In Proc. SIGMOD’16. San
Francisco, CA.
[9] Jiang Ming Dongpeng Xu and Dinghao Wu. 2017. Cryptographic Function
Detection in Obfuscated Binaries via Bit-precise Symbolic Loop Mapping. In Proc.
38th IEEE Symposium on Security and Privacy (Oakland’17). San Jose, CA.
[10] Manuel Egele, Theodoor Scholte, Engin Kirda, and Christopher Kruegel. 2012.
A survey on automated dynamic malware-analysis techniques and tools. ACM
Computing Surveys (CSUR) 44, 2 (2012), 6.
[11] Simson Garfinkel, Paul Farrell, Vassil Roussev, and George Dinolt. 2009. Bringing
science to digital forensics with standardized forensic corpora. digital investiga-
tion 6 (2009), S2–S11.
[12] James Gross. 2013. Cloud based storage: A brief look at dropbox. Chronicles 30, 4
(2013).
[13] How Ransomware Became a Billion-Dollar Nightmare for Business. 2016.
https://www.theatlantic.com/business/archive/2016/09/ransomware-us/
498602/. (2016).
[14] Jian Huang, Anirudh Badam, Laura Caulfield, Suman Nath, Sudipta Sengupta,
Bikash Sharma, and Moinuddin K. Qureshi. 2017. FlashBlox: Achieving Both
Performance Isolation and Uniform Lifetime for Virtualized SSDs. In Proc. FAST’17.
Santa Clara, CA.
[15] Jian Huang, Anirudh Badam, Ranveer Chandra, and Edmund B. Nightingale.
2015. WearDrive: Fast and Energy-Efficient Storage for Wearables. In Proc. 2015
USENIX Annual Technical Conference (USENIX ATC’15). Santa Clara, CA.
[16] Jian Huang, Anirudh Badam, Moinuddin K. Qureshi, and Karsten Schwan. 2015.
Unified Address Translation for Memory-Mapped SSD with FlashMap. In Proc.
ISCA’15. Portland, OR.
[17] IBM X-Force Research. 2016. Ransomware: How consumers and businesses value
their data. Technical Report (2016).
http://www.iozone.org/. (2016).
[18] IOzone Lab. 2016.
[19] Amin Kharaz, Sajjad Arshad, Collin Mulliner, William Robertson, and Engin Kirda.
2016. UNVEIL: A Large-Scale, Automated Approach to Detecting Ransomware.
In 25th USENIX Security Symposium (USENIX Security 16). USENIX Association,
Austin, TX, 757–772.
[20] Amin Kharraz, William Robertson, Davide Balzarotti, Leyla Bilge, and Engin
Kirda. 2015. Cutting the Gordian Knot: A Look Under the Hood of Ransomware
Attacks. In Conference on Detection of Intrusions and Malware & Vulnerability
Assessment (DIMVA). Milan, IT.
[21] Hyojun Kim, Nitin Agrawal, and Cristian Ungureanu. 2012. Revisiting Storage
for Smartphones. In Proc. 10th USENIX Conference on File and Storage Technologies
[22] Hyojun Kim and Seongjun Ahn. 2008. BPLRU: A Buffer Management Scheme
(FAST’12). San Jose, CA.
for Improving Random Writes in Flash Storage. In FAST’08. San Jose, CA.
[23] Eugene Kolodenker, William Koch, Gianluca Stringhini, and Manuel Egele. 2017.
PayBreak: Defense Against Cryptographic Ransomware. In Proc. the 2017 ACM on
Asia Conference on Computer and Communications Security). Abu Dhabi, United
Arab Emirates.
[24] Jaeheung Lee, Sangho Yi, Junyoung Heo, Hyungbae Park, Sung Y Shin, and
Yookun Cho. 2010. An Efficient Secure Deletion Scheme for Flash File Systems.
J. Inf. Sci. Eng. 26, 1 (2010), 27–38.
[25] Jing Li, Anirudh Badam, Ranveer Chandra, Steven Swanson, Bruce Worthington,
and Qi Zhang. 2014. On the Energy Overhead of Mobile Storage Systems. In Proc.
12th USENIX Conference on File and Storage Technologies (FAST’14). Santa Clara,
CA.
[26] Robert Lipovsky, Lukas Stefanko, and Gabriel Branisa. 2016. The Rise of Android
Ransomware. White Paper (2016).
[27] Master File Table (Windows). 2017.
https://msdn.microsoft.com/en-us/library/windows/desktop/aa365230(v=vs.85)
.aspx. (2017).
[28] Dushyanth Narayanan, Austin Donnelly, and Antony Rowstron. 2008. Write
Off-Loading: Practical Power Management for Enterprise Storage. In Proc. 6th
USENIX on File and Storage Technologies (FAST’08). San Jose, CA.
http://www.shub-internet.org/brad/FreeBSD/postmark.html. (1997).
[29] NetApp. 1997.
[30] Gavin O’Gorman and Geoff McDonald. 2012. Ransomware: a growing menace.
[31] John H Palevich and Martin Taillefer. 2008. Network file system. (Oct. 21 2008).
Symantec Corporation.
US Patent 7,441,012.
[32] Vijayan Prabhakaran, Andrea C Arpaci-Dusseau, and Remzi H Arpaci-Dusseau.
2005. Analysis and Evolution of Journaling File Systems.. In USENIX Annual
Technical Conference, General Track. 105–120.
[33] Curtis Preston. 2007. Backup & recovery: inexpensive backup solutions for open
systems. " O’Reilly Media, Inc.".
[34] Ransomware Definition. 2016.
http://www.trendmicro.com/vinfo/us/security/definition/ransomware. (2016).
[35] Ransomware on Mobile Devices. 2016.
http://www.hipaajournal.com/ransomware-mobile-devices/. (2016).
[36] Ransomware: the Tool of Choice for Cyber Extortion. 2016.
https://www.fireeye.com/current-threats/what-is-cyber-security/ransomware.
html. (2016).
[37] Joel Reardon, David Basin, and Srdjan Capkun. 2013. Sok: Secure data deletion.
In Security and Privacy (SP), 2013 IEEE Symposium on. IEEE, 301–315.
[38] Joel Reardon, Srdjan Capkun, and David Basin. 2012. Data Node Encrypted File
System: Efficient Secure Deletion for Flash Memory. In Proc. USENIX Security’12.
Bellevue, WA.
[39] Ronald L Rivest. 1997. All-or-nothing encryption and the package transform. In
International Workshop on Fast Software Encryption. Springer, 210–218.
[40] Mendel Rosenblum and John K Ousterhout. 1992. The design and implementation
of a log-structured file system. ACM Transactions on Computer Systems (TOCS)
10, 1 (1992), 26–52.
[41] Mark E Russinovich, David A Solomon, and Jim Allchin. 2005. Microsoft Windows
Internals: Microsoft Windows Server 2003, Windows XP, and Windows 2000. Vol. 4.
Microsoft Press Redmond.
[42] Ananda Sankaran, Kevin Guinn, and Dat Nguyen. 2004. Volume shadow copy
[43] Kevin Savage, Peter Coogan, and Hon Lau. 2015. The Evolution of Ransomware.
service. Power Solutions, March (2004).
Symantec Technical Report (2015).
[44] Nolen Scaife, Henry Carter, Patrick Traynor, and Kevin RB Butler. 2016. Cryp-
tolock (and drop it): stopping ransomware attacks on user data. In Distributed
Computing Systems (ICDCS), 2016 IEEE 36th International Conference on. IEEE,
303–312.
[45] D. Sgandurra, L. Muñoz-González, R. Mohsen, and E. C. Lupu. 2016. Automated
Dynamic Analysis of Ransomware: Benefits, Limitations and use for Detection.
ArXiv e-prints (Sept. 2016). arXiv:cs.CR/1609.03020
[46] Special Report: Ransomware and Businesses. 2016.
http://www.symantec.com/content/en/us/enterprise/media/security_response/
whitepapers/ISTR2016_Ransomware_and_Businesses.pdf. (2016).
[47] SSD prices plummet again, Close in on HDDs. 2016.
http://www.pcworld.com/article/3040591/storage/
ssd-prices-plummet-again-close-in-on-hdds.html. (2016).
[48] TPC-C: An On-line Transaction Processing Benchmark. 2001.
http://www.tpc.org/tpcc/. (2001).
[49] Akshat Verma, Ricardo Koller, Luis Useche, and Raju Rangaswami. 2010. SRCMap:
Energy Proportional Storage Using Dynamic Consolidation. In Proc. 6th USENIX
on File and Storage Technologies (FAST’10). San Jose, CA.
[50] Robin Verschoren and Benny Van Houdt. 2016. On the Impact of Garbage
Collection on Flash-Based SSD Endurance. In Proc. 4th Workshop on Interactions
of NVM/Flash with Operating System and Workloads (INFLOW’16). Savannah, GA.
[51] Michael Virable, Stefan Savage, and Geoffrey M. Voelker. 2012. BlueSky: A Cloud-
Backed File System for the Enterprise. In Proc. 10th USENIX conference on File
and Storage Technologies (FAST’12). San Jose, CA.
https://www.virustotal.com/. (2016).
[52] VirusTotal - Free Online Virus, Malware and URL Scanner. 2016.
[53] WannaCry Ransomware Attack. 2017.
https://en.wikipedia.org/wiki/WannaCry_ransomware_attack. (2017).
[54] Michael Yung Chung Wei, Laura M Grupp, Frederick E Spada, and Steven Swan-
son. 2011. Reliably Erasing Data from Flash-Based Solid State Drives.. In Proc.
9th USENIX Conference on File and Storage Technologies (FAST’11).
http://www.csoonline.com/article/3075385/backup-recovery/
will-your-backups-protect-you-against-ransomware.html. (2016).
[55] Will you backups protect you against ransomware. 2016.
[56] WMIC - Take Command-line Control over WMI. 2002. (2002).
[57] Write Amplification Factor. 2017.
https://en.wikipedia.org/wiki/Write_amplification. (2017).