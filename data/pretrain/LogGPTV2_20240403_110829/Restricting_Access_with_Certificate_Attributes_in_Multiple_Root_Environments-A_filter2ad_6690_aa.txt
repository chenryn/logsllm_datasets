title:Restricting Access with Certificate Attributes in Multiple Root Environments-A
Recipe for Certificate Masquerading
author:James M. Hayes
Restricting Access with Certificate Attributes in 
Multiple Root Environments – A Recipe for Certificate Masquerading 
Capt James M. Hayes, USAF 
Systems and Network Attack Center 
National Security Agency 
Suite 6704 – 9800 Savage Road 
Fort George G. Meade, Maryland 20755-6704 
PI:EMAIL 
Abstract 
The  issue  of  certificate  masquerading  against  the  SSL 
protocol  is  pointed  out  in  [4].    In  [4],  various  forms  of 
server  certificate  masquerading  are  identified.    It  should 
also  be  noted  that  the  attack  described  is  a  man-in-the-
middle (MITM) attack that requires direct manipulation of 
the  SSL  protocol.    This  paper  is  a  mirror  of  [4]  and 
involves  client  certificate  masquerading.    The  motivation 
for  this  paper  comes  from  the  fact  that  this  anomaly  has 
shown up in commercial products.  It is potentially more 
damaging than [4] since a MITM attack is not involved and 
the  only  requirement  is  that  the  application  trust  a  given 
root certificate authority (CA).  The problem arises when 
applications  use  multiple  roots  that  do  not  cross-certify.  
The problem is further exasperated since the applications 
themselves do not have the ability to apply external name 
constraints and policies.  Unfortunately, the problem is a 
fairly  well  known  problem  within 
the  public  key 
infrastructure (PKI) community, but continues to persist in 
practice despite this knowledge.   
1. Introduction 
  PKI has been established as one of the major buzzwords 
for Internet, extranet, and intranet security.  Although PKI 
shows  much  promise,  it  is  not  without  its  own  subtle 
misgivings.    Ford  and  Baum  state  “…the  certificate  user 
may hold multiple root public keys and may make decisions 
that one root key is trusted for some purpose and another 
root key is trusted for another purpose.  (In saying the root 
key is trusted, we actually mean that all certification paths 
starting from that root key are trusted.)” [2] 
In the past couple of years, some product manufactures 
have  attempted  to  improve  their  products  by  including 
features that would allow a user to define the purpose of a 
CA in terms of how certificates issued by a CA can be used, 
e.g.,  a  specific  type  of  application  or  protocol.    For   
example,  some  products  will  allow  an  administrator  to 
determine  if  a  CA  certificate  can  be  used  to  validate 
certificates  that  are  used  for  server  authentication,  client 
authentication,  code  signing,  or  secure  e-mail;  however, 
excluding these products, one would be hard pressed to find 
a  product  that  would  allow  a  user  or  an  organization  to 
enforce a policy such that an application could only accept 
certificates from a given CA when the certificates conform 
to  a  particular  usage  and/or  name  constraint.    Generally, 
CAs  are  either  trusted  or  not  trusted  for  all  purposes, 
regardless of the intended purpose. 
  The  remaining  sections  of  this  paper  will  explain  the 
details  of  attribute-based  client  masquerading.    Section  2 
will  give  a  definition  of  PKI  and  Section  3  will  define 
certificate  masquerading.    Section  4  will  discuss  trust 
implications  of  multiple  root  environments.  Sections 5, 6, 
and 7 will illustrate the problem.  Section 8 will present an 
analysis  of  the  problem.    Lastly,  Section  9  will  present 
possible solutions.  When reading this paper, keep in mind 
that  based  on  [3]’s  2001  annual  “Computer  Crime  and 
Security Survey”, 34 of the 538 respondents stated that they 
suffered a $151,230,100 loss in proprietary information and 
21 respondents stated they suffered a $92,935,500 loss to 
financial fraud. 
2. PKI Defined 
[1] defines PKI as the following: 
The set of hardware, software, people, policies and 
procedures  needed 
to  create,  manage,  store, 
distribute, and revoke public key certificates based 
on public-key cryptography. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:09:17 UTC from IEEE Xplore.  Restrictions apply. 
to 
and 
it’s 
important 
to  note 
certificate 
revocation, 
imitate  a  peer 
  [6]  In  addition, 
  The  overall  goal  of  a  PKI  is  to  ensure  that  a  certificate 
that is used in any given transaction is valid at the instance 
that a transaction is executed.  In order to assure that this is 
the case, the PKI will incorporate various functions such as 
registration,  initialization,  certification,  key  pair  recovery, 
key  generation,  key  update,  key  expiry,  key  compromise, 
cross-certification, 
and 
revocation notice distribution and publication. [1] If a root 
makes  a  decision 
root,  severe 
consequences can result, [4] i.e., it can then undermine the 
trustworthiness of its peers.  
3. Certificate Masquerading Defined 
  Certificate  masquerading,  as  based  on  [4],  allows  a 
masquerader 
to  substitute  an  unsuspecting  certificate 
holder’s  valid  certificate  with  the  masquerader’s  valid 
certificate.  A valid certificate is  defined as a certificate that 
has  been  signed  by  a  CA  that  a  relying  party  (user, 
computer,  service,  etc.)  is  willing  to  accept  with  out 
challenge,  i.e.,  the  certificate  has  a  CA  trust  point,  the 
certificate’s signature can be verified, the certificate is  not 
revoked and the certification path can be constructed and is 
valid. 
that 
masquerading can take place where invalid certificates are 
used as well, i.e., no CA trust point.     
4. Trust Implications in Multi-Root  
    Environments 
  Whenever 
external 
organization’s  CA  without  cross  certifying,  it  creates  by 
default  an  unbounded  cross-certification  with 
that 
organization.    Often,  this  is  done  for  convenience  or 
expedience.    What  is  the  result?    The  issue  of  trust 
management is not resolved.  [6] Trust decisions in terms of 
types of certificates that will be accepted, e.g., client, web 
server, timestamp, etc., are not addressed.  Also, limits on 
certificate names, path lengths and other PKI policy issues 
are not addressed.  If two organizations attempted to enter a 
formal  trust  relationship,  these  issues  would  need  to  be 
addressed  in  a  formal  cross-certification  between  the 
organizations.  Unfortunately,  these  issues  are  often  not 
addressed in informal relationships.  An example of this is 
when  one  trusts  the  default  CAs  that  come  with  a  web 
browser  or  web  server.  However,  some  products  are 
beginning to address this issue with respect to policy and 
allowing  administrators  to  configure  policies  to  limit  the 
types  of  certificates  accepted  from  a  CA,  i.e.,  only  client 
certificates  from  a  given  CA  will  be  accepted,  but  code 
signing  certificates  will  not.    This  capability  is  yet  to  be 
extended  to  include  path  length  constraints  or  name 
constraints both of which are needed even in the case of an 
informal relationship. 
organization 
an 
trusts 
an 
5. A Case Study of the BIMM  
Corporation, PPC and SRPC 
Institution 
for  Mismanagement 
So let’s start off looking at the relationship between the 
(BIMM) 
Bureaucratic 
Corporation,  the  Popular Products Corporation (PPC), and 
the  Second  Rate  Products  Corporation  (SRPC).    In  this 
illustration,  the  author  has  enlisted  the  service  of  Bob, 
Mallory,  Trent,  and  Victor  to  demonstrate  the  problem  at 
hand.    Mallory  will  play  the  role  of  a  network  penetration 
tester  and  CA  administrator  who  works  for  SRPC.    Trent 
will play the role of an administrator of the CA for PPC.  
The  BIMM  Corporation  has  a  web  application  that  was 
created  by  Victor  and  used  by  BIMM,  PPC,  and  SRPC.   
The  web  application  uses  SSL  3.0  and  requires  client 
authentication.    Client  certificates  are  issued  by  BIMM, 
PPC and SRPC CAs. 
For  many  years,  the  BIMM  Corporation  has  provided 
marketing  data  to  PPC  and  SRPC.    SRPC  is  having 
difficulties  competing  with  PPC.    SRPC  management 
approaches  Mallory and offers him a substantial amount of 
money if he can get any restricted information about PPC 
from the BIMM web application. 
6. Mallory’s Reconnaissance   
Mallory  and  Victor  often  had  conversations  regarding 
security.  One day Mallory asked Victor about how the web 
application was actually protected.  Victor told Mallory the 
following: 
It uses SSL 3.0 with client authentication. 
1. 
2.  The  web  application  uses  four 
trusted  root 
certificates: BIMM, PPC, SRPC and Ultra Trust.  
Ultra Trust is a commercial CA. 
3.  The  web  application  uses  certificate  mapping 
rules,  as  shown  in  Table  1,  to  determine  which 
user  accounts  should  be  mapped  to  a  given 
certificate.      The  mapping  rule  that  is  used  is 
determined by the certificate’s issuer distinguished 
name.  
4.  Since  BIMM certificates are stored in a directory, 
BIMM  client  certificates  are  compared 
to 
certificates in the directory; however, PPC, SRPC, 
and  Ultra  Trust  certificates  are  not  stored  in  the 
directory  because  BIMM  does  not  wish  to  allow 
other CAs to publish directly to their directory.  In 
addition, collecting certificates from the other CAs 
would not allow the web application to be robust, 
i.e.,  BIMM  would  have 
to  collect  all  user 
certificates  and  publish  them  to  the  directory 
before access could be granted to a legitimate user.  
This could cause unacceptable delay to PPC and 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:09:17 UTC from IEEE Xplore.  Restrictions apply. 
5. 
SRPC  clients  as  well  as  additional  overhead  for 
BIMM. 
It  uses  a  certificate’s  subject  distinguished  name 
(SDN) to determine branch points in the directory 
and  then  applies  the  search  criteria for a specific 
entry in the directory.  It only allows certificates 
signed by PPC to map to PPC accounts and groups 
and  certificates  signed  by  SRPC  to  map  SRPC 
accounts and groups, or so Victor thought.  
Mallory’s  certificate  and  the  original  were  the  public  key 
and authority key identifier; however, it’s important to note 
that  because  of  the  default  mapping,  Mallory  could  have 
created  a  SRPC  certificate  with  SDN  attributes  that 
reflected  Bob’s  certificate  and  still  gained  access.    The 
certificate appears below in Figure 1. 
Masquerading SRPC User Certificate 
this  basic 
the  mapping  capability  of 
reconnaissance,  Mallory 
the  web 
Vice President Research and Development 
Research and Development 
After  performing 
decided 
to 
application.  
test 
Figure 1. Bob’s SRPC certificate 
  Mallory  decides  to  visit  his  favorite  café,  The  Black 
Hatters  Internet Café.  He accesses the web application in 
question  and  when  prompted,  selected  the  fraudulent 
certificate as his authentication certificate.  The certificate 
chain  was  sent  to  the  web  application  and  Mallory  was 
granted  access  as  Bob.    The  complete  chain  is  shown  in 
Figure 2. 
Root SRPC Certificate 
Masquerading PPC CA Certificate 
Masquerading User Certificate 
Bob 
PI:EMAIL 
Vice President Research and Development 
Research and Development 
Figure 2. Mallory’s fake certificate chain 
Bob 
PI:EMAIL 
PPC 
SRPC CA 
SRPC 
SRPC CA 
SRPC 
SRPC CA 
SRPC 
PPC CA 
PPC 
SRPC CA 
SRPC 
PPC 
PPC CA 
PPC 
Table 1. Certificate Mapping Rules 
Mapping Rules 
CAName: default 