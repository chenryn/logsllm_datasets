e
v
r
e
s
b
O
35000
30000
25000
20000
15000
10000
5000
0
00
s
I
S
M
T
d
e
v
r
e
s
b
O
40000
35000
30000
25000
20000
15000
10000
5000
0
00
s
I
S
M
T
d
e
v
r
e
s
b
O
18000
16000
14000
12000
10000
8000
6000
4000
2000
0
00
32
64
96
c8
fa
s
I
S
M
T
d
r
e
v
r
e
s
b
O
10000
9000
8000
7000
6000
5000
4000
3000
2000
1000
0
00
32
64
96
c8
fa
32
64
96
c8
fa
32
64
96
c8
fa
Byte value in hexadecimal
Byte value in hexademical
Byte value in hexadecimal
Byte value in hexadecimal
(a) Byte 3
(b) Byte 2
(c) Byte 1
(d) Byte 0
Figure 6: Statistical distribution of each TMSI byte contained in paging requests for O2. Based on 437734 TMSIs.
nication could be used to coordinate these efforts, it also
poses a signiﬁcant slowdown. Consequently, using se-
rial communication would lower the chance to win the
race. We therefore decided to not make use of any actual
communication between attacking devices, but to use a
probabilistic approach instead.
For this, we analyzed the TMSI values to determine
the statistical distribution of each individual TMSI byte
as contained in respective paging requests. Namely, to
prevent the collection of mobile subscriber identities and
thus enable tracking, mobile phones are in most cases
identiﬁed by their TMSI instead of their IMSI. To pro-
vide strong anonymity, a network should therefore sufﬁ-
ciently randomize those short term identities to provide
unlinkability. A statistically uniform distribution would
ease randomly distributing the paging load across mul-
tiple phones. However, an analysis of collected TMSIs
made it clear that not all bits of the TMSI are sufﬁciently
random or at least uniformly distributed. This may be,
because some parts of the TMSI can be related to, e.g.,
the time of its allocation [8]. We also observed that cer-
tain bytes of the TMSI appear more frequently in speciﬁc
ARFCNs. Thus, we further analyzed the distribution of
each individual of the four TMSI bytes, for all tested op-
erators. We use O2 as an example operator here even
though nearly identical patterns can be seen for other car-
riers.
Figure 6 shows for each possible byte value how of-
Figure 7: Cumulative distribution function for Byte 0
(LSB) of TMSIs contained in paging requests observed
for O2.
ten a speciﬁc value was found in TMSIs contained in
paging requests that we logged. As visible, all byte val-
ues are not uniformly distributed. However, 6a, 6b, and
6c show a signiﬁcantly different pattern from 6d. Not
every possible value of the least signiﬁcant byte (LSB)
of the TMSI is encountered with equal frequency on the
air interface. For example the value 0xff is not used at
all. Some seem to be more likely than others. Nonethe-
less, 6d shows that value ranges are close to a uniform
distribution. This becomes more plausible in Figure 7,
which compares the cumulative distribution function for
observed values of the LSB and the uniform distribution.
We make use of this characteristic to delegate speciﬁc
attack phones to dedicated TMSI LSB byte ranges. This
way, we can distribute the immense amount of paging be-
tween several phones by simply using randomization and
thus avoid coordination at all. Outliers for certain value
ranges could be compensated by adding more phones to
the speciﬁc range. To prevent recompilation of our Os-
mocomBB based ﬁrmware for distinct value range, we
introduced a mechanism to conﬁgure the range at run-
time. This mechanism is similar to the TMSI setting de-
scribed in Section 3.4 and is based on a HDLC message
over serial.
A similar distribution could be achieved by hashing
TMSI values and assigning individual phones to speciﬁc
hash preﬁxes. However for simplicity and to reduce the
response time as much as possible we decided not to do
this.
4.3 Mapping Location Areas
When performing a large-scale attack against a geo-
graphic region, we have to determine the size covered by
the location area. Speciﬁcally, this knowledge enables an
adversary to precisely plan the affected zone of such an
attack. An attacker carefully selects the target location
areas for speciﬁc regions and operators.
Location areas are not organized to cover an equally
large area. As pointed out in Section 4.1, this impacts
the paging activity that can be observed in a speciﬁc
location area. Their size differs among operators and
speciﬁcs of the covered environment. In fact, because of
USENIX Association  
22nd USENIX Security Symposium  43
its impact on mobility management, location area plan-
ning is an important aspect for mobile network operators.
Its size manifests a trade-off between subscriber-induced
and network-induced performance degradation. Small
location areas can cause a signiﬁcant signaling overhead
in the core network due to frequent location updates. It
has already been demonstrated, that this can lead to de-
nial of service like conditions [36]. A large location area
causes additional load due to the paging overhead.
The Location Area Code (LAC), which is part of the
Location Area Identiﬁer (LAI), is broadcasted by each
BTS in regular intervals on the BCCH via a System In-
formation Type 3 message. To map location areas, we
use a slightly modiﬁed version of the cell log applica-
tion from the OsmocomBB tool-chain. cell log scans all
ARFCNs in the assigned GSM frequency spectrum for a
carrier signal. It then attempts to sync to these frequen-
cies and logs decoded system information messages as
broadcasted on the BCCH. In combination with off-the-
shelf GPS receivers, we determine the geographic loca-
tion of the observed LAC.
By slowly driving through the city in a car, we col-
lected a number of waypoints and the respective GSM
cells in sight. To minimize the loss due to driving speed,
the scan process was performed simultaneously on eight
OsmocomBB devices. In order to estimate the surface
covered by a location area, we calculated the convex hull
of points within the same LAC. The size of location areas
in a metropolitan area such as Berlin varies from 100km2
to 500km2. From our study, the average location area in
Berlin covers around 200km2. Data from OpenCellID
and Crowdﬂow [29, 31] indicate that outside of the city
center location areas exist that cover over 1000km2. Fig-
ure 8 shows location areas that we mapped for one of the
four major operators in Berlin.
Most location areas partially overlap with geographic
regions that are part of a different area. These results
provide a rough insight on dimensions of location areas
in a metropolitan area. It also shows that a large-scale
denial of service attack based on the paging procedure
has a signiﬁcant impact to a large number of subscribers.
Figure 8: Location Areas of Vodafone Germany in Berlin.
ered that the IMSI DETACH message is not authenticated
in GSM and 3G networks [34]. As a result, an attacker
can easily craft detach messages on behalf of a victim.
This message acts as an indication to the network that a
subscriber is no longer marked as available for the car-
rier. As a result, the network marks the mobile station as
detached and will no longer page the subscriber until it
reassociates with the network. Consequently, this stops
the network from delivering MT services. During nor-
mal operation, this message is generated by the phone
and sent to the network, e.g., when it is being switched
off.
The mobile identity contained in the detach indication
message is not limited to IMSIs, but can also contain
TMSIs. By combining the paging response attack with
the IMSI detach attack, it is therefore possible to amplify
its effect. After each paging response, our OsmocomBB
implementation reuses the collected mobile identity to
send a detach message. Accordingly, our attack ensures
that an initial call to a subscriber will be terminated and
that reissued services such as calls will not cause paging
activity again. Thus, by doing so, we effectively reduce
the paging load over time.
4.4 Ampliﬁcation of the Paging Response
4.5 Large-scale Attack Feasibility
Attack
The attack procedure as introduced in Section 3 does pre-
vent MT services from being delivered to a subscriber.
However, it does not provide a persistent way to cause
denial of service conditions. Access to mobile services
is denied as long as an adversary is running the attack.
Accordingly, calls reissued by subscribers to reach a per-
son, have to be attacked again, which may further raise
the paging load. To prevent this, we make use of another
attack that has been publicized before. Munaut discov-
We continue to evaluate the feasibility of a large-scale
attack using multiple phones against commercially de-
ployed networks. The transmission of a large number
of RACH bursts and SDCCH channel allocations may
be limited due to radio resource bottlenecks. We there-
fore verify, whether or not a single cell provides enough
resources, or an attack needs to be conducted in a dis-
tributed fashion.
Prerequisites.
In the following, we denote the TMSI
paging request activity as rrequest and the number of re-
44  22nd USENIX Security Symposium 
USENIX Association
quired phones to handle this respectively as nphones. As
discussed in Section 4.2, the TMSI LSB value range is
used to equally distribute the paging load across multi-
ple attacking phones. Therefore, assigned phones need
to wait for a range match. On average this requires
tmatching = rrequest/nphones seconds. On a match, the phone
sends a channel request on the RACH and a paging re-
sponse on an SDCCH in tresponse seconds. It ﬁnally syn-
chronizes back to the CCCH in tsync seconds to be pre-
pared for the next run. The required time for an attack
is therefore tattack = tmatching + tresponse + tsync seconds.
Thus, for a successful attack, the minimum number of
phones an adversary requires is nphones ≥ rrequest · tattack.
RACH Resource Constraints. The available resources
provided by a single cell depend on its conﬁguration.
The GSM speciﬁcations deﬁnes a number of valid chan-
nel conﬁgurations [7].
Thus, an adversary is lim-
ited by the number of available RACH slots and the
number of SDCCHs that a cell provides.
In practice
cells in metropolitan areas use the BCCH+CCCH or
FCCH+SCH+CCCH+BCCH channel conﬁgurations on
the ﬁrst time slot. These are not combined with DCCHs
and therefore allow all 51 bursts on the uplink of a 235.4
ms 51-multiframe to be used to transmit channel requests
on the RACH. Because the RACH is a shared medium,
collisions with requests of other subscribers may occur.
According to Traynor et al. [36], the maximum resulting
throughput is 37%. As a result, an attacker can transmit
up to rRACH = 51/0.2354 · 0.37 ≈ 80 channel requests
per second in a single cell. Consequently, given that
nphones ≤ nRACH = rRACH · tattack is true, a single cell can
fulﬁll the channel request requirements.
SDCCH Resource Constraints. Following the chan-
nel allocation, the adversary phone uses an SDCCH to
send the paging response. Analogical to the RACH, SD-
CCHs in medium- or large-sized cells in a metropoli-
tan area are provided on a separate time slot. A typ-
ical SDCCH/8+SACCH/8 channel conﬁguration com-
prises of 8 SDCCHs per 51-multiframe, in theory offer-
ing: rSDCCH = 8/0.2354 = 34 SDCCH/second. Clearly
this may make the signaling channel the major bottle-
neck for this attack. Accordingly, the occupation time of
these channels needs to be taken into account. For ex-
ample according to Traynor et al., a rough estimation of
the occupation time of the channel for an Insert Call For-
warding operation is 2.7 seconds [36]. Compared to this,
our attack occupies the channel for a very short duration,
as shown in Section 3.5.
Similar to the RACH requirements, the maximum
number of attacking phones per cell is therefore bounded
by nphones ≤ nSDCCH = rSDCCH · tattack.
Example Computation. The following is an exam-
ple, based on the peak values from our measurements
gathered for the E-Plus network and as reﬂected in Ta-
Table 2: Example resource requirements for
E-Plus.
Variable
Value
rrequest
tresponse
tsync
415 paging/min
180 ms
745 ms
Reference
Section 4.1
Section 3.5
Section 4
ble 2. Based on the previous equations, at least nphones ≈
10.820 phones are required to attack a typical location of
E-Plus. Given the costs of the Motorola devices, this
is a reasonably small amount. Each paging response
attack lasts tattack ≈ 1.564 seconds. This allows up to
nRACH ≈ 125 phones without a saturation of the RACH.
For the SDCCH, the above formula yields to a maximum
of nSDCCH ≈ 53 phones. It is also important to note that
the number of phones is proportional to the impact. This
means that half of the attacking phones would still be
able disrupt service for half of the subscribers of a loca-
tion area.
A single cell therefore provides enough resources to
attack a complete location area of a considerably small
operator. In practice these resources are shared with le-
git MO and MT trafﬁc. The exact trafﬁc patterns and
the number of cells per location is unknown. Further-
more, a combination with the IMSI detach attack pre-
vents phones that reside in the location area to generate
further MT activity. As we cannot estimate these activ-
ities, we do not include this in our calculation. Never-
theless, the results indicate the required resources for a
large-attack do not extensively exhaust the resources pro-
vided by a cell. Additionally, there is no technical limita-
tion of distributing attacking phones across small number