Output:Effective capacity γ
1 γ ← 1
2 for (H ,T) ∈ H × E do
j∈K tij > Mi(H) then
for i ∈ K do
if
γ ← min(cid:104)
if
γ ← min(cid:104)
γ ,
γ ,
(cid:105)
(cid:105)


Mi(H)
j∈K ti j
Mi(H)
j∈K tji
j∈K tji > Mi(H) then
3
4
5
6
7
A.8 Effective Capacity Under Arbitrary
Combinations of Failures
To compute the effective capacity under an arbitrary combination of
internal link and L1/L2 switch failures, let L1(H) be the remaining
438
ABCABCCCABCABCCCSIGCOMM ’19, August 19–23, 2019, Beijing, China
Sucha Supittayapornpong, Barath Raghavan, and Ramesh Govindan
L1 switches under L1-switch failure pattern H, i.e., L1(H) = L1\H.
The effective capacity under given failure sets F and H is a solution
of the following optimization:
max
min
H ∈H
min
F ∈F
a∈L1(H) r
ij
b∈L2 r
ba


(i, j)∈K2 r
ω
ω
a∈L1(H) r
wai
min
T ∈T
ij
ab
+ ωtij
ab ≤ I[(a, b) (cid:60) F]
=
ω∈Ω(F,H,T) ω where Ω(F , H ,T) =
Mi(H) =
,∀b ∈ L2,(i, j) ∈ K2
ij
ba
b∈L2 r
,∀a ∈ L1(H),(i, j) ∈ K2
,∀(a, b) ∈ (L1(H) × L2) ∪ (L2 × L1(H))
,∀j ∈ K
,∀i ∈ K
,∀a ∈ L1(H), b ∈ L2,(i, j) ∈ K2
waj
Mj(H)
i∈K tij ≤ Mj(H)
j∈K tij ≤ Mi(H)
ba ∈ R+
+ ωtij
ij
ab
ij
ij
ij
ab , r
r
ω ∈ [0, 1]
The set Ω(F , H ,T) is similar the set Θ(F ,T) except that failed L1
switches in H are not considered in Ω(F , H ,T). This reflects in the
usage of L1(H) and Mk(H).
As before, the convex polytope property of the traffic set T can
be used to simplify the optimization to
ω :
min
H ∈H
min
F ∈F
min
T ∈E
ω∈Ω(F,H,T) ω.
Theorem A.6. The following equality holds:
max
min
H ∈H
min
F ∈F
min
T ∈T
max
ω∈Ω(H,F,T) = min
H ∈H
min
F ∈F
min
T ∈E
max
ω∈Ω(H,F,T)
Proof. The proof is similar to Theorem A.4 and is omitted. □
A.9 Compact Forwarding Table Formulation
The Formulation. Our compact forwarding table optimization
seeks to find flow count assignments x
, such that the
maximum total flow count assignment at an L2 switch is minimized:
and x
ij
ba
ij
ab
min
(x, µ)∈Φ(F,T)
a∈L1


=


(i, j)∈K2 θ(F)tijx
(i, j)∈K2 θ(F)tijx
max
b∈L2
ij
a∈Li j
x
ab
ij
b∈L2 x
ab
ij
b∈L2 x
ba
= µv
= µv
+
µ, x
ij
ab , x
ij
ba ∈ Z+

 where Φ(F , T) =
x
ij
ba
(i, j)∈K2
ij
a∈Li j− x
ba
a I[a ∈ Lij
+ ]
ij
a I[a ∈ Lij− ]
ij
abαij ≤ µI[(a, b) (cid:60) F]
baαij ≤ µI[(a, b) (cid:60) F]
,∀b ∈ L2,(i, j) ∈ K2
,∀a ∈ L1,(i, j) ∈ K2
,∀a ∈ L1,(i, j) ∈ K2
,∀(a, b) ∈ L1 × L2,T ∈ T
,∀(a, b) ∈ L1 × L2,T ∈ T
,∀(a, b) ∈ L1 × L2,(i, j) ∈ K2
ij
ij
(x, µ) :
In the formulation, the first constraint ensures flow count con-
servation at each L2 switch for each trunk pair. We define Lij
+ and
Lij− respectively be the set of L1 switches with upflow flow count
and the set of L1 switches with downflow flow counts. The second
and third constraints ensure conservation between flow counts at
a switch having upflow and downflow respectively. In some cases,
these flow counts may cause a link to exceed its capacity, in which
case we scale the flow counts by a factor µ. The fourth and fifth
ij
Figure 25: WCMP weights are derived at an L1 switch and an L2
switch.
constraints limit the flow counts on each internal link by link ca-
pacity. In this step, we also scale the traffic matrix by the effective
capacity θ(F) for the given failure pattern, as computed in §3. The
last constraint defines the domain of the variables.
Computing WCMP Weights for Egress Links in L1 Switches.
As discussed above, the assigned flow counts {x
ba} from the com-
pact routing optimization can be directly used as WCMP weights in
L2 switches. However, at an L1 switch, {x
ab} (also an output of the
optimization) only assigns flow counts to links to L2 switches. L1
switches also have egress links and these must be considered when
assigning weights at L1 switches. The rate of egress traffic from trunk
i to trunk j at an L1 switch s is tijws j/Mj, and each switch port
carries tij/Mj. Then, the egress fraction is 1/Mj per switch port.
WCMP weights can be derived from these egress fractions and
the upflow fractions. At an L1 switch s, the FGCD of the fractions per
trunk pair (i, j) is FGCD(cid:16)1/Mj , {αijx
(cid:17). WCMP weights are
the fractions divided by that FGCD. This is illustrated in Figure 25
which shows the WCMP weights assigned to the rightmost L1
switch as 2 and 1 for upflows and 1 for early forwarding.
sb}b∈L2
ij
ij
A.10 Partial External Trunk Failure
We can extend our approach to handle partial external trunk fail-
ures, in which one or more links in a trunk can fail. Such a failure
can increase upflow because traffic on the failed links is evenly dis-
tributed over the remaining links of the same trunk. The increased
upflow requires re-calculating (a) traffic matrices, (b) effective ca-
pacity, and (c) routing tables.
Traffic Matrices. When some external links fail, the capacity of
the trunk associated with the failed links decreases, from Mk to,
say, M′
. This change in capacity changes the set of traffic matrices
k
Equation 4 so we need to re-compute the extreme traffic set for the
new trunk set {M′
k}.
External Link Failure Pattern. An external link failure affects
how traffic flows internally in the router, since there can be no
ingress or egress traffic on the failed link. We assume a given wiring
cannot be rewired, so an external link failure “removes” the failed
links from the wiring and yields a residual wiring that contains only
active links. For example, in Figure 25, if the link connecting trunk
A and the leftmost L1 switch fails, the residual wiring at the switch,
say 1, is (w′
1C) = (0, 1, 0). Now, for a given minimum-
upflow wiring, each external link failure pattern can induce a new
residual wiring and for each such residual wiring, we would need
to pre-compute effective capacity and routing tables.
1A, w′
1B , w′
To reduce the space of residual wirings, we can canonicalize each
external failure pattern (in much the same way as we canonicalize
internal failures §3.3), so we would only need to consider as many
residual wirings as the number of canonical patterns. Specifically,
439
AAAABBBCC🠖AC🠖AC🠖AC🠖AFlow count:113121111Fractions {¼,¼,½}¼½¼FGCD =¼Towards Highly Available Clos-Based WAN Routers
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Figure 26: Steps in the canonical-form resolution for external
failure.
given an external failure pattern Q, Algorithm 3 can find a canonical
form ψ ′ (Q) of the external failed links. Figure 26 shows an example
of applying this algorithm to the external failure pattern on the left.
The first step labels each L1 node by the number of failed external
links it associated with. For example, the first L1 switch a1 has a
failed link from trunk C. So, the algorithm assigns it a label (0, 0, 1).
Steps 2-4 group L1 nodes that have the same wiring and sort the
nodes according to their label in descending order. For example,
a2 becomes the leftmost L1 switch in its group {a1, a2}. Intuitively,
the algorithm moves failed links to the left within each L1 group.
:Graph Q
Algorithm 3: Canonical-form resolution for external failure
Input
Output:Canonical form ψ ′ (Q)
1 Label each L1 node by the numbers of trunk’s failed links.
2 Group L1 nodes by their trunk wiring.
3 for each group of L1 nodes do
4
Sort nodes in descending order by their labels.
Once canonical forms are available, the residual wiring w′ is
just the original wiring w with failed links in the canonical form
ψ ′ (Q). Each residual wiring is then used to generate internal failure
patterns (§3.3).
Effective Capacity and Routing. Under external link failure, the
steps above generate a new trunk set {M′
k}, residue wiring w′,
a traffic set T ′, an extreme traffic set E′, and a set of internal
failure patterns F ′. They are the inputs to an effective capacity
calculation, which is a modified version of the optimization in §A.8.
Intuitively, the modified version replaces ({Mk}, w, T , E, F) with
({M′
k}, w′, T ′, E′, F ′), and it assumes that all internal and external
links of an L1 switch fail if the switch fails. After obtaining the
effective capacity, a compact routing table could be optimized by
computing flow counts and solving the formulation in §A.9 using
the new effective capacity, T ′, E′, and F ′.
440