定制业务质量报表详解
创建、更新 rrd及输出图表流程
graph png
53
---
## Page 78
Linux公社微信公众号：linuxidc_com
专题
Linux公社（LinuxIDC.com）设置了有一定影响力的Linux专题栏目。
数据中心，LinuxIDC就是关于Linux的数据中心。
Linux现在已经成为一种广受关注和支持的一种操作系统，IDC是互联网
Linux公社（www.Linuxidc.com）于2006年9月25日注册并开通网站，
Hadoop专题RedHat专题SUSE专题红旗Linux专题CentOS
包括：Ubuntu 专题Fedora专题Android 专题Oracle专题
Linux公社主站网址：
技术。
证、SUSE Linux、Android、Oracle、Hadoop、CentOS、MySQL、
Linux公社是专业的Linux系统门户网站，实时发布最新Linux资讯，包括
欢迎点击这里的链接进入精彩的Linux公社网站
www.Linuxidc.com
inux公社
www.linuxidc.com
搜索微信公众号:linuxidc_Com
源技术教程。
订阅专业的最新Linux资讯及开
微信扫一扫
旗下网站:
Linxidc.com
---
## Page 79
最大值、最小值、平均值等。详细源码如下：
度；DEF指定数据源；使用CDEF合并数据；HRULE绘制水平线（告警线）；GPRINT输出
psutil.net_io_countersO[1]为入流量，关于psutil模块的介绍见第1.1。详细源码如下：
定etho_in、etho_out值（当前网卡的出人流量），网卡流量我们通过psutil模块来获取，如
54第一部分基础篇
第三步
将代码加人crontab，并配置5分钟作为采集频率，crontab配置如下：
printupdate
(str(starttime),str(total_input_traffic),str(total_output_traffic)))
update=rrdtool.updatev('/home/test/rrdtool/Flow.rrd','%s:%s:&s'
#将获取到的三个数据作为updatev的参数，返回'return_value'：OL)则说明更新成功，反之失败
starttime=int(time.time())
total_input_traffic =psutil.net_io_counters()[1]
import
#!/usr/bin/python
【/home/test/rrdtool/update.py】
total
import.rrdtool
第二步
if rrd:
-*-coding:utf-8-*-
RRA:MAX:0.5:24:775
RRA:AVERAGE:0.5:24:775
#xff定义为0.5，表示一
print rrdtool.error()
RRA:MIN:0.5:444:797')
RRA:MIN:0.5:24:775'
RRA:MIN:0.5:6:700'
RRA:MIN:0.5:1:600
RRA:MAX:0.5:444:797
RRA:MAX:0.5:1:600
RRA:AVERAGE:0.5:288:797
RRA:AVERAGE:0.5:6:700',
RRA:AVERAGE:0.5:1:600'
下列前4个RRA的定义说明如下，
_output_traffic=psutil.net
time,psutil
隔2小时（24*300秒）
采用 graph方法绘制图表，此示例中关键参数使用了--x-grid定义X轴网格刻
采用updatev方法更新rrd数据库，
Linux公社
）存一次数据的平均值
一次数据的平均值
其他定义与AVERAGE方式相似，区
 www.linuxidc.com
#获取当前Linux时间戳
io_counters()[0]
存600笔，
参数指定了当前的Linux时间戳，以及指
存775笔，
存797笔，即797
#获取网卡入流量
#获取网卡出流量
别是存最大值与最小值
天（2年
（2个月）
C
---
## Page 80
提示
以上代码将生成一个Flow.png文件，如图3-13所示。
"COMMENT:\\r",
"HRULE:6144#FF0000:Alarm value\\r",
"LINE1:total#FF8833:Totaltraffic"
"CDEF:total=inoctets,outoctets,+",
'0:%H"
"HOUR:1"
'HOUR:1"
‘MINUTE:12"
mport rrdtool
#!/usr/bin/python
#-*-coding:utf-8-*=
(/home/test/rrdtool/graph.py 】
"GPRINT:outbits:MIN:MIN Outtraffic\:&6.2if &Sbps\\r")
"COMMENT:",
"GPRINT:outbits:MAX:Max Out traffic\:%6.21f %Sbps",
"COMMENT:",
"GPRINT:outbits:AVERAGE:Avg Out traffic\:%6.21f %Sbps",
"GPRINT:inbits:MIN:MIN In traffic\:%6.21f &Sbps\\r",
'COMMENT:
"GPRINT:inbits:MAX:Max In traffic\:%6.21f %Sbps",
'COMMENT:
"GPRINT:inbits:AVERAGE:Avg In traffic\:%6.21f %Sbps",
"COMMENT:\\r",
"CDEF:inbits=inoctets,8,*",
"LINE1:outoctets#0000FF:Out traffic",
"AREA:inoctets#ooFFoo:In traffic"
"DEF:outoctets=Flow.rrd:eth0_out:AVERAGE",
"DEF:inoctets=Flow.rrd:etho_in:AVERAGE",
"--width","650",
itle="Servernetwork
mporttime
COMMENT:
口fetch 根据指定时间、CF 查询rrd 文件，如 rrdtool fetch Flow.rrd AVERAGE。
last查看rrd文件最近一次更新的时间，如rrdtoollast Flow.rrd；
first 查看rrd 文件第一个数据的更新时间，如 rrdtool first Flow.rrd;
口info查看rrd文件的结构信息，如 rrdtool info Flow.rrd;
查看 rrd文件内容有利于观察数据的结构、更新等情况，rrdtool提供几个常用命令：
表
Linux公社www.linuxidc.com
"MINUTE:12:HOUR:1:HOUR:1:0:%H",\
村
表示控制每隔12分钟放置一根次要格线
控制每隔1小时放置一根主要格线
#在网格下方输出一个换行符
traffic flow
#将入流量换算成bit，
#将出流量换算成bit，即*8，计算结果给outbits
（"+time.strftime('%Y-%m-%d',\
#以
#以线条方式绘制总流量
-#通过CDEF合并网卡出入流量，得出总流量total
"-1d","--vertical-label=Bytes/s",\
#绘制水平线，
#以线条方式绘制出流量
面积方式绘制入流量
#指定网卡入流量数据源DS及CF
第3章
#指定网卡出流量数据源DS及CF
作为告警线，
定制业务质量报表详解
#绘制入流量最大值
#绘制出流量最大值
#绘制入流量最小值
#绘制入流量平均值
#绘制出流量最小值
#绘制出流量平均值
网值为6.1k
5
---
## Page 81
3.3.1
路由节点所处的 IDC 位置、经过的运营商路由节点等信息。下面详细进行介绍。
务，并生成美观的路由线路图报表，让管理员清晰了解探测点到目标主机的服务状态、骨干
功能，实现TCP协议方式对服务可用性的探测，比如常用的80（HTTP）与443（HTTPS）服
在处理网络扫描、路由跟踪、服务探测、单元测试等方面，本节主要针对 scapy的路由跟踪
能够对数据包进行伪造或解包，包括发送数据包、包嗅探、应答和反馈匹配等功能。可以用
3.3
56第一部分基础篇
scapy 模块提供了众多网络数据包操作的方法，包括发包 sendO、SYN\ACK 扫描、嗅探
scapy（http://www.secdev.org/projects/scapy/）是一个强大的交互式数据包处理程序，它
# scapy 模板需要tcpdump 程序支持，生成报表需要 graphviz、ImageMagick 图像处理包支持
scapy模块的安装方法如下：
源码安装
wget http://www.secdev.org/projects/scapy/files/scapy-2.2.0.tar.gz
生成动态路由轨迹图
python setup.pyinstall
模块常用方法说明
cd scapy-2.2.0
tar-zxvf scapy-2.2.0.tar.gz
3.2.1rrdtool参数说明参考http://bbs.chinaunix.net/thread-2150417-1-1.html和http://
oss.oetiker.ch/rrdtool/doc/index.en.html
Bytes/s
Linux公社www.linuxidc.com
6k
20k
AvgDnt146ks
图3-13graph.py 执行输出图表
Server networktrafficflow(2014-04-29)
MDn raf2kbps
---
## Page 82
源码如下：
具将 svg 格式转换成png，流程结束。
绘制，中间调用ASN 映射查询IP地理信息并生成 svg 流程文档，最后使用ImageMagick 工
tcpdump 进行抓包，捕获扫描过程经过的所有路由点，再通过graphO方法进行路由IP轨迹
整个过程的原理见图3-14，首先通过探测机以SYN方式进行TCP服务扫描，同时启动
3.3.2实践：实现TCP探测目标服务路由轨迹
timeout=2, verbose=None, **kargs)
细介绍traceroute(方法，其具体定义如下：
sniff()、抓包wrpcapO、TCP路由跟踪 tracerouteO等，本节主要关注服务监控内容接下来详
在此次实践中，通过 scapy的tracerouteO方法实现探测机到目标服务器的路由轨迹，
本次实践通过 tracerouteO)方法实现路由的跟踪，跟踪结果动态生成图片格式。功能实现
口maxttl：指定路由跟踪的最大跳数（节点数)。
target：跟踪的目标对象，可以是域名或IP，类型为列表，
该方法实现TCP跟踪路由功能，关键参数说明如下：
traceroute(target, dport=80, minttl=1, maxttl=30, sport=, 14=None, filter=None,
口mintl：指定路由跟踪的最小跳数（节点数);
口dport：目标端口，类型为列表，支持同时指定多个端口，如[80,443];
Linux公社 www.linuxidc.com
图3-14TCP探测目标服务路由轨迹原理图
口
路由书点IP3
由点！
探测主机
TT
graph()
ASN
由节点
SYN扫描
第3章定制业务质量报表详解57
ImageMagick
SVG->PNG
，支持同时指定多个目标，
---
## Page 83
骨干网。
AS Number for CHINANETjiangsu province backbone,CN”意思为该IP所处中国电信江苏省
过ASN获取所处的运营商或IDC位置，如IP“202.102.69.210”为“CHINANET-JS-AS-AP
无回应；“SA”表示扫描的指定服务有回应，一般是最后一个主机IP。
58第一部分基础篇
生成的路由轨迹图见图3-16（仅局部），“_”将使用unk*单元代替，重点路由节点将通
代码运行结果见图3-15，“-”表示路由节点无回应或超时；“11”表示扫描的指定服务
if len(target）>=1 and target[0]!=:
domains=raw_input（'Please input one ormore IP/domain:‘）#接受输入的域名或IP
【 /home/test/scapy/simple1.py 】
else:
dport=[80]
target=
fromscapy.allimporttraceroute
import warnings,logging
importos,sys,time,subprocess
print "IP/domain number of errors,exit"
subprocess.Popen(/usr/bin/convert test.svg test.png"，shell=True) #svg 转png格式
time.sleep(1)
domains.split()
Linux公社www.linuxidc.com
#扫描的端口列表
18201223
8281139
73
图3-15代码运行结果
1.
.26
121
ket
category=DeprecationWarning)
S
180.96.12.11
891
#生成svg矢量图形
12.11
55$
#屏蔽scapy无用告警信息
---
## Page 84
换成 png或其他格式，
这个信息。另外IE8以上及chrome浏览器都已支持SVG格式文件，可以直接浏览，无需转
?
会做路由节点分流，不排除会造成选择的路由线路不是最优的，该视图可以帮助我们了解到
通过路由轨迹图，我们可以非常清晰地看到探测点到目标节点的路由走向，运营商时常
3.3.1节scapy方法参数说明参考http://www.secdev.org/projects/scapy/doc/usage.html。
Linux公社 www.linuxidc.com
114.116.64.
192.168.1.1
，可以轻松整合到我们的运营平台当中。
180.96.1211htpSA
[CHINANET-JS-AS-APASNuml
202.97.49.221
图3-16路由轨迹图
15.239.211.10hup SA
12134.242.24
unk20
8
第3章定制业务质量报表详解59
02.69.21
115239.209.22
unk9
---
## Page 85
的平台当中。下面详细进行说明。
clamd，来实现一个高效的病毒检测功能，另外，pyClamad模块也非常容易整合到我们已有
pyclamd/）是一个Python第三方模块，可让Python直接使用ClamAV病毒扫描守护进程
Linux、Unix系统提供病毒扫描、查杀等服务。pyClamad（http:/xael.org/norman/python/
更新皆由社区免费发布，官网地址：http://www.clamav.net/lang/en/。目前ClamAV主要为
4.1构建集中式的病毒扫描机制
安全密码生成等。
过Python来实现系统级的安全防范策略，包括构建集中式的病毒扫描机制、端口安全扫描、
发展动向等，通过上述几个方面可以在很大程度上避免出现安全事故。本章主要讲述如何通
护、提高人员安全意识、实施系统平台安全加固、安全规范融合到ITIL体系、关注最新安全
企业的安全防范水准是目前普遍面临的问题，大体上主要分以下几个方面，包括安全设备防
出各大门户的安全漏洞。因此，信息安全体系建设已经被提到了前所未有的高度。如何提升
近年发生的多个知名网站会员数据库外泄事件，另外，国内知名漏洞报告平台乌云也频频爆
Chayter a
#1、客户端（病毒扫描源）安装步骤
pyClamad模块的安装方法如下：
ClamAntiVirus（ClamAV）是一款免费而且开放源代码的防毒软件，软件与病毒库的
信息安全是运维的根本，直接关系到企业的安危，稍有不慎会造成灾难性的后果。比如
第4章
Python与系统安全
Linux公社 www.linuxidc.com
---
## Page 86
如扫描对象、描述模式、扫描路径、调度频率等。示例实现的架构见图4-1，首先业务服务
4.1.2
定义的方法完全一样，本节以ClamdNetworkSocketO类进行说明。
操作clamd；另一个为ClamdUnixSocketO类，实现使用Unix套接字类操作clamd。两个类
4.1.1
本次实践实现了一个集中式的病毒扫描管理，
pyClamad 提供了两个关键类，
口EICAR(self)方法，返回EICAR测试字符串，即生成具有病毒特征的字符串，便于
口reload(self)方法，强制重载clamd病毒特征库，扫描前建议做reload操作。
 stats(self)方法，获取 Clamscan 的当前状态。
口 shutdown(self)方法，实现强制关闭clamd进程并退出。
 scan_file(self, file)方法，实现扫描指定的文件或目录，在扫描时发生错误或发现病毒
口multiscan_file（self,file)方法，实现多线程扫描指定的文件或目录，多核环境速度更
口contscan_fle(self,file)方法，实现扫描指定的文件或目录，在扫描时发生错误或发现
将终止，参数fle（string类型）为指定的文件或目录的绝对路径。
快，在扫描时发生错误或发现病毒将不终止，参数 fle（string 类型）为指定的文件或
病毒将不终止，参数file（string类型）为指定的文件或目录的绝对路径。
etc/clamd.conf配置文件中的TCPSocket参数要保持一致；timeout为连接的超时时间。
的初始化方法，参数host为连接主机IP；参数port为连接的端口，默认为3310，与
python setup.py install
cd pyClamd-0.3.4
tar-zxvfpyclamd-0.3.4.tar.gz
wgethttp://xael.org/norman/python/pyclamd/pyClamd-0.3.4.tar.gz
2、主控端部署pyClamad 环境步骤
/etc/init.d/clamdstart
sed-i-e/^TCPAddr/(s/127.0.0.1/0.0.0.0/;}′/etc/clamd.conf
更新守护进程监听IP配置文件，根据不同环境自行修改监听的IP，“0.0.0.0”为监听所有主机IP
实践：实现集中式的病毒扫描
测试。
目录的绝对路径。
setenforce0
模块常用方法说明
yum install-yclamav clamd clamav-update
Linux公社 www.linuxidc.com
#关闭SELinux，避免远程扫描时提示无权限的问题
更新病毒库，
一个为ClamdNetworkSocketO类，实现使用网络套接字
#启动扫描守护进程
#添加扫描守护进程clamd系统服务
，可以针对不同业务环境定制扫描策略，比
#安装clamavp相关程序包
第4章Python与系统安全
9