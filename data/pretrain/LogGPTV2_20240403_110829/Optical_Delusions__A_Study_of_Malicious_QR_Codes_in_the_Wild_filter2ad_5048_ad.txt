category that were used as Facebook profile pictures. The
attackers posted status updates on websites encouraging users
to scan the QR code and like a Facebook page to receive noti-
fications on special savings offers. This provides a potentially
large victim population for the attackers since they can directly
interact with victims by easily distributing their update posts
among popular discussion groups.
Based on our experiments, Paypal was identified as the
most phished brand in payment-related phishing attacks. We
found 11 QR codes in our experiments that referred users to
websites for online purchases – e.g., a fake Paypal website.
Once a victim scans the malicious QR code, she is directed
to a fake checkout page that requires the user’s credentials to
proceed. We also found three QR codes that directed users
to fake versions of other financial services such as Cielo,
the largest Brazilian credit and debit card operator. Though
some posts in popular discussion groups indicate that the
security community has expressed concerns about QR code-
based payment systems [5], we did not find any reports
showing that this type of malicious QR code has actually been
identified in the wild before.
Table VI represents an overview of the most frequent
domains used in QR code attacks as well as the countries of
the associated IP addresses. Although the countries are widely
spread, the number of malicious QR codes associated with US
IP addresses is at the top of the list by a wide margin. Our
analysis also shows that generic top-level domains (e.g., .com,
.net, .org) are the most abused TLDs and account for 61%
of URLs extracted from malicious QR codes. Furthermore,
country name top-level domains such as .ru and .br are
significantly used compared to other country domain spaces.
We did not observe a significant use of URL shortening
services to launch QR code attacks, finding only five malicious
QR codes that abused tinyurl.com to hide the malicious links.
V. Proposed Defenses
The great advantage for an attacker in using QR codes
to distribute malicious URLs lies in the inability of users
to distinguish benign URLs from malicious URLs via visual
inspection of a QR code. Therefore, a first step towards
preventing QR code-based attacks is to ensure that users are
at least given the chance to inspect a decoded URL prior to
directing a browser to the URL.
However, many popular QR code-capable mobile applica-
tions already follow this practice. For instance, at the time of
writing, after scanning a QR code, the ZXing Barcode Scan-
ner [27] will present a visual overlay depicting the particular
barcode scanned, the data (including any URL) extracted, as
well as other metadata such as the code type and timestamp.
For the careful and attentive user, this information is likely
sufficient to help determine whether the data contained therein
presents a threat.
However, as research and experience has demonstrated,
users are not necessarily always able to distinguish between
legitimate and malicious URLs [13]. Attackers have developed
an impressive array of techniques to disguise malicious URLs
using techniques such as domain prefixing, where attackers
take advantage of space-limited browser URL bars by prefix-
ing attacker-controlled domains with subdomains mimicking
legitimate domains (e.g., www.paypal.com.attacker.com), or
IDN homograph attacks [28] where Unicode characters are
used to generate domain names that appear visually similar to
legitimate domains (e.g., pаypal.com, where a Cyrillic “а” has
been used instead of an ASCII “a” in this document).
In response, it has become common to embed an auto-
mated check for malicious URLs directly into browsers –
e.g., Google Safe Browsing. In the case of malicious QR
codes, we suspect that a similar defensive tactic would also
prove useful. In particular, we advocate for the integration of
domain or URL blacklists such as those we have used for our
experiments to detect malicious QR codes on the public web
into mobile applications that decode QR codes. Integration of
blacklist checks into these mobile applications would allow for
immediate feedback to the user as to whether a decoded URL
might be malicious, and would allow the user the opportunity
to avoid browsing to a potentially unsafe website.
Another possible solution might be to depend upon similar
blacklist checks to be integrated into mobile browsers or other
applications that load content from potentially untrusted URLs
decoded by QR code decoders. We note, however, that as of
the time of writing, many mobile browsers, including Google
Chrome for Android, do not incorporate malicious domain
201201201
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:28:03 UTC from IEEE Xplore.  Restrictions apply. 
blacklist checks.
VII. Conclusion
VI. Related Work
Attacks against mobile devices have been a subject of
intense scrutiny in recent years. Several studies have been
been performed to measure and characterize the nature of
the threat against mobile devices in terms of mobile-specific
malware [29], [30]. Researchers have also investigated a
number of approaches for detecting or preventing security and
privacy violations against mobile devices and the sensitive
user data stored on them [31]–[33]. One effort has studied
user susceptibility to malicious QR codes physically posted in
public areas [34]. Furthermore, current status of existing QR
code scanners in terms of their detection of malicious URLs
have also been investigated [35]. However, to our knowledge,
prior work has heretofore not measured the extent of the threat
posed by malicious QR codes on the public web as a vector
for attacks against mobile device users.
Malicious QR codes share some characteristics of other web
security issues, where attackers attempt to disguise malicious
links as benign links in order to trick unsuspecting users into
exposing themselves to attacks. The class of attack that is
closest in spirit to malicious QR codes is the distribution of
malicious links using URL shortening services, which has been
studied in several efforts [15], [36]. However, QR codes pose
an intrinsically different problem, in that while URL shorteners
necessarily require some interaction with a remote service that
has the opportunity to screen URLs for malicious behavior, QR
codes are decoded on the mobile device itself. However, as
we mention in Section V, integrating existing URL blacklisting
services into QR code applications might help ameliorate the
threat posed by malicious QR codes.
In general, mobile devices have lagged behind traditional
desktop UIs with respect to helping users avoid attacks. For
example, Dhamija et al.
investigated the causes for users
succumbing to phishing attacks by studying the user interface
elements of web pages and browsers in order to highlight
errors that users might make when identifying malicious
websites [13]. Also, Niu et al. identified several vulnerabilities
in the iOS browser interface that increases the chances of
successful attacks by performing user studies demonstrating
the users failed to recognize spoofed browser UI elements [37].
In the same vein, Rydstedt et al. presented framing attacks
on websites displayed in mobile phones [38]. By spoofing
the iOS browser address bar,
they were able to perform
“tapjacking” attacks, thereby motivating the necessity of using
frame busting in mobile websites.
A number of studies have demonstrated that aside from
defenses against low-level attacks, robust UI mechanisms for
informing users of potential security and privacy violations
are lacking on traditional platforms [13] as well as mobile
devices [39]. Malicious QR codes can be viewed as yet another
facet of the problem of providing accurate and understandable
security indicators to users.
In this paper, we carried out a large-scale experiment to
estimate to what extent QR codes are currently used for
malicious purposes. We performed our analysis on over 14.7
million unique web pages. Our analysis shows that QR codes
are already being used by cyber-criminals in the real world.
However, our analysis shows that only 145 of the 94,770 QR
codes we extracted exhibit evidence of malicious intent. The
low observed base rate of malicious QR codes suggests that
users are rarely exposed to QR code-based attacks, contradict-
ing recent claims in security blogs surrounding the increasing
use of malicious QR codes. Additionally, we did not find
any significant change in the frequency of launching QR code
attacks in our experimental runs to draw a concrete conclusion
about the future use of QR codes for malicious purposes.
We found 48 malicious QR codes in our data set
that
were designed to direct victims to phishing sites. Spoofing
password-protected websites for social sharing (Facebook)
was observed as the most prevalent form of QR code-based
phishing attack. We also found 11 malicious QR codes that
directed victims to a fake version of the Google Play app
market. Consequently, users who typically scan QR codes to
download an app or link to online social networks are at higher
risk of exposure to a QR code phishing attack.
Furthermore, 94 malicious QR codes were used to direct
users to either exploit or intermediate sites, or to distribute
malware via direct download links. We observed that
the
lifetime of this class of malicious QR code was very short,
and the corresponding URLs failed to be resolved after a short
period of time. Only five QR codes were successfully resolved
from this class. Our results also indicate that QR code attacks
are most often found on free download and personal/business
websites.
Although we identified a relatively small number of mali-
cious QR codes in the wild, we believe that defenses against
such codes should be clearly defined. For example, enabling
browsers to automatically resolve QR codes and perform URL
reputation checks before visiting the URLs could help to
prevent QR code-based attacks on mobile devices.
References
[1] International Organization for Standardization, “ISO/IEC 18004:2006
Information technology – Automatic identification and data capture
techniques – QR Code 2005 bar code symbology specification,” 2006.
[2] I. P. Release, “Smartphone market hits all-time quarterly high due to
seasonal strength and wider variety of offerings, according to idc,” 2012.
http://www.idc.com/getdoc.jsp?containerId=prUS23299912.
[3] M. DeCarlo, “AVG: QR Code-based Malware Attacks
to Rise
http://www.techspot.com/news/
2012.” Techspot News.
in
47189-avg-qr-code-based-malware-attacks-to-rise-in-2012.html.
[4] D. Maslennikov, “Malicious QR codes pushing android malware.”
Kaspersky Securelist Blog, 2011. http://www.securelist.com/en/blog?
print_mode=1&weblogid=208193145.
[5] E. Chickowski, “QR Code Malware Picks Up Steam.” Dark Reading
Blog. http://www.darkreading.com/mobile-security/167901113/security/
news/232301147/qr-code-malware-picks-up-steam.html.
[6] T. Wasserman, “New Security Threat: Infected QR Codes.”
http:
//mashable.com/2011/10/20/qr-code-security-threat/.
[7] The Jester, “Curiosity Pwned the Cat.” Blog Post, 2012.
jesterscourt.cu.cc/2012/03/09/curiosity-pwned-the-cat/.
http://
202202202
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:28:03 UTC from IEEE Xplore.  Restrictions apply. 
[35] H. Yao and D. Shin, “Towards preventing qr code based attacks on
android phone using security warnings,” in Proceedings of the 8th ACM
SIGSAC symposium on Information, computer and communications
security, (New York, NY, USA), pp. 341–346, ACM, 2013.
[36] J. B. A. Neumann and U. Meyer, “Security and Privacy Implications of
URL Shortening Services,” in Proceedings of the Workshop on Web 2.0
Security and Privacy, 2010.
[37] Y. Niu, F. Hsu, and H. Chen, “iPhish: Phishing Vulnerabilities on
Consumer Electronics,” in Proceedings of the Conference on Usability,
Psychology, and Security, (Berkeley, CA, USA), pp. 1–8, USENIX
Association, 2008.
[38] G. Rydstedt, B. Gourdin, E. Bursztein, and D. Boneh, “Framing Attacks
on Smart Phones and Dumb Routers: Tap-jacking and Geo-localization
Attacks,” in Proceedings of the USENIX Workshop on Offensive Tech-
nology, USENIX Association, 2010.
[39] A. P. Felt, E. Ha, S. Egelman, A. Haney, E. Chin, and D. Wagner,
“Android Permissions: User Attention, Comprehension, and Behavior,”
in Proceedings of the Symposium on Usable Privacy and Security, 2012.
[8] P. Roberts, “QR Tags Can Hide Malicious Links, Experts Warn.”
Kaspersky’s ThreatPost Blog, 2011. http://threatpost.com/en_us/blogs/
qr-tags-can-hide-malicious-links-experts-warn-091211.
[9] MasterButcher68, “Backtrack 5 R3-QRcode Attack with SET.” http:
//www.youtube.com/watch?v=GeE5-6kTO_U.
[10] Alexa Internet, Inc., “Alexa.” http://alexa.com/.
[11] D. Storm, “Hack or hoax? Jester brags of QR code smartphone attack
http://blogs.computerworld.com/19875/
against Anonymous,” 2012.
hack_or_hoax_jester_brags_of_qr_code_smartphone_attack_against_
anonymous.
[12] G. Funaro, “Malicious QR Codes: Attack Methods and Techniques
Infograph,” 2011.
http://usa.kaspersky.com/about-us/press-center/
press-blog/malicious-qr-codes-attack-methods-techniques-infographic.
[13] R. Dhamija, J. D. Tygar, and M. Hearst, “Why Phishing Works,” in
Proceedings of the SIGCHI Conference on Human Factors in Computing
Systems, (New York, NY, USA), pp. 581–590, ACM, 2006.
[14] K. Onarlioglu, U. O. Yilmaz, E. Kirda, and D. Balzarotti, “Insights into
user behavior in dealing with internet attacks,” in 19th Annual Network
and Distributed System Security Symposium (NDSS 2012), 2 2012.
[15] F. Maggi, A. Frossi, S. Zanero, G. Stringhini, B. Stone-Gross,
C. Kruegel, and G. Vigna, “Two Years of Short URLs Internet Mea-
surement: Security Threats and Countermeasures,” in Proceedings of
the International World Wide Web Conference, ACM, 2013.
[16] N. Provos, D. McNamee, P. Mavrommatis, K. Wang, and N. Modadugu,
“The Ghost
in the Browser Analysis of Web-based Malware,” in
Proceedings of the Workshop on Hot Topics in Understanding Botnets,
(Berkeley, CA, USA), USENIX Association, 2007.
[17] E.
“A
Protalinski,
Drive-by
droid
Day
a-first-hacked-sites-with-android-drive-by-download-malware/11810.
An-
Zero
http://www.zdnet.com/blog/security/
Hacked
Malware.”
First:
Download
with
ZDNet
2012.
Blog,
sites
[18] The Scrapy Project, “An Open-Source Web Scraping Framework for
Python.” http://scrapy.org/.
[19] robotstxt.org, “The Web Robots Pages.” http://www.robotstxt.org/.
[20] Y. Yanbe, “Open Source QR Code Library.” http://qrcode.sourceforge.
[21] OpenDNS, Inc., “The Phishtank Project.” http://phishtank.com/.
[22] DNS-BH Operators, “DNS-BH – Malware Domain Blocklist.” http:
[23] Malwre Domain List Operators, “The Malware Domain List Project.”
//malwaredomains.com/.
http://malwaredomainlist.com/.
jp/.
com/.
[24] Malc0de Operators, “Malc0de.” http://www.malc0de.com/.
[25] ParetoLogic, Inc., “Malware Black List.” http://www.malwareblacklist.
[26] VX Vault Operators, “VX Vault.” http://vxvault.siri-urz.net/.
[27] ZXing Team, “Barcode Scanner.” https://play.google.com/store/apps/
details?id=com.google.zxing.client.android&hl=en.
[28] E. Gabrilovich and A. Gontmakher, “The Homograph Attack,” Commu-
nications of the ACM, vol. 45, February 2002.
[29] Y. Zhou and X. Jiang, “Dissecting Android Malware: Characterization
and Evolution,” in Proceedings of the IEEE Symposium on Security and
Privacy, IEEE Computer Society, May 2012.
[30] A. P. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wagner, “A Survey
of Mobile Malware in the Wild,” in Proceedings of the ACM workshop
on Security and Privacy in Smartphones and Mobile Devices, pp. 3–14,
ACM, 2011.
[31] M. Egele, C. Kruegel, E. Kirda, and G. Vigna, “PiOS: Detecting
Privacy Leaks in iOS Applications,” in Proceedings of the Network
and Distributed System Security Symposium, Internet Society, February
2009.
[32] W. Enck, P. Gilbert, B. gon Chun, L. P. Cox, J. Jung, P. McDaniel, and
A. N. Sheth, “TaintDroid: An Information-Flow Tracking System for
Realtime Privacy Monitoring on Smartphones,” in Proceedings of the
USENIX Symposium on Operating Systems Design and Implementation,
USENIX Association, October 2010.
[33] R. Xu and R. Anderson, “Aurasium: Practical Policy Enforcement
for Android Applications,” in Proceedings of the USENIX Security
Symposium, USENIX Association, August 2012.
[34] P. Kieseberg, M. Leithner, M. Mulazzani, L. Munroe, S. Schrittwieser,
M. Sinha, and E. Weippl, “QR Code Security,” in Proceedings of the
International Workshop on Trustworthy Ubiquitous Computing, January
2010.
203203203
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:28:03 UTC from IEEE Xplore.  Restrictions apply.