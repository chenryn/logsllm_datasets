### Editing Tools for Ontology Construction

**Authors:**
- **Jorge Cardoso**
  - Department of Mathematics and Engineering
  - University of Madeira
  - 9000-039 Funchal, Portugal
  - [PI:EMAIL]

- **Ana Lisete Nunes Escórcio**
  - Department of Exact Science and Technology
  - Escola Básica e Secundária do Carmo
  - 9300 Câmara de Lobos, Portugal
  - [PI:EMAIL]

**Publication:**
- Escórcio, L. and Cardoso, J. "Editing Tools for Ontology Construction", in "Semantic Web Services: Theory, Tools and Applications", Idea Group. (scheduled for March 2007).
- Copyright of authors until publication.

**Abstract:**
This chapter provides an overview of various editing tools for ontology construction. In the current landscape, developing an ontology project necessitates the use of specialized software tools. We present a synopsis of the most relevant tools, aiming to assist readers in selecting an appropriate ontology editor that aligns with their project goals. The tools are described based on a set of key features, including collaborative ontology edition, versioning, graphical tree view, OWL editor, and others (see Annex 2).

**Keywords:**
knowledge base, meta model, data sharing, data modeling, knowledge representation, knowledge-based system, knowledge sharing, semantic data model, data semantics, ontologies, XML

### Introduction

The World Wide Web is predominantly composed of documents written in HTML (Hypertext Markup Language), which is designed for visual presentation. While humans can easily read and understand these web pages, their inherent meaning is not structured in a way that allows for machine interpretation. The Semantic Web aims to extend the current web by providing well-defined meanings to information, enabling better interoperability and integration between systems and applications (Cardoso, 2005).

"The Semantic Web is not a separate Web but an extension of the current one, in which information is given a well-defined meaning, better enabling computers and people to work in cooperation" (Berners-Lee et al., 2001). This extension involves adding machine-readable descriptions to existing web data and documents. Recent advancements have shifted from static HTML pages to dynamically generated web pages using server-side applications and database access techniques. However, these technologies were insufficient for the integration needs of organizations, which required their heterogeneous systems and applications to communicate transactionally.

Ontologies play a crucial role in enhancing communication between humans and computers. An ontology is a shared conceptualization of the world, consisting of definitional aspects (high-level schemas) and assertional aspects (entities, attributes, interrelationships, domain vocabulary, and factual knowledge) connected in a semantic manner (Sheth, 2003). They are used for:
- Assisting in communication between humans.
- Achieving interoperability and communication among software systems.
- Improving the design and quality of software systems.

The primary markup language for publishing and sharing data using ontologies on the internet is the Web Ontology Language (OWL, 2004). There are numerous ontology development tools available, each tailored for specific tasks such as domain modeling, building knowledge bases, visualization, and project management. Many of these tools are research prototypes developed for specific projects or institutions, and there has been significant growth in the number of ontology technology products.

After reviewing Michael Deny’s Survey on Ontology Tools and the paper "The Hitchhiker’s Guide to Ontology Editors" by Loredana Laera and Valentina Tamma, we decided to update the list of available tools. Some tools from the survey are no longer available or have been improved, and new tools and languages have emerged to meet the demands of new projects. In compiling the list shown in Table 1, we selected tools based on the following criteria: robustness, readiness for use, free and open-source availability, support for the ontology development process, support for RDF, RDFS, and OWL, collaborative environment, multiple ontology support, server-based environment with consistency checking, easy-to-use visual creation and editing, query builder, support for methodology, formal axioms and rules, large-scale ontology growth, versioning, interoperability, reasoner, graphical view, easy and fast navigation, tutorial support, and plug-ins.

We have chosen the following tools: Protégé, OntoEdit, DOE (Differential Ontology Editor), IsaViz, Ontolingua, Altova SemanticWorks 2006, OilEd, WebODE, pOWL, and SWOOP.

### PROTÉGÉ

Protégé (Noy et al., 2001) is one of the most widely used ontology development tools, developed at Stanford University. Being free and open source, it is supported by a large community of active users. It has been utilized in domains such as medicine and manufacturing for domain modeling and building knowledge-base systems. Protégé provides an intuitive editor for ontologies and includes extensions for visualization, project management, software engineering, and other modeling tasks.

In its early versions, Protégé enabled users to build and populate frame-based ontologies in accordance with the Open Knowledge Base Connectivity protocol (OKBC). An ontology consisted of a set of classes organized in a subsumption hierarchy, slots associated with classes to describe properties and relationships, and instances of those classes. The editor supported classes and class hierarchies with multiple inheritance, templates and slots, predefined and arbitrary facets for slots, metaclasses, and metaclass hierarchies.

In 2003, Protégé was extended to support OWL, attracting many users interested in the Semantic Web. The OWL plug-in transforms the Protégé platform into an ontology editor for OWL, allowing users to build, load, save, edit, and visualize ontologies in OWL and RDF. It also provides interfaces for Description Logic Reasoners such as Racer.

Protégé ontologies can be exported in various formats, including RDF(S), OWL, and XML Schema. The current version supports editing classes and their characteristics, accessing reasoning engines, editing and executing queries and rules, comparing ontology versions, visualizing relationships, and acquiring instances using a configurable graphical user interface. However, Protégé does not support collaborative editing by groups of users.

Protégé can be extended through a plug-in architecture and a Java-based Application Programming Interface (API) for building knowledge-base tools and applications. External Semantic Web applications can use the API to directly access Protégé knowledge bases without running the application. An OWL API is also available for accessing OWL ontologies. The extensible architecture makes Protégé suitable for ontology-based research and development projects. It includes a Programming Development Kit (PDK) for programmers, which describes how to work with Protégé APIs and illustrates how to program plug-in extensions.

Several plug-ins are available, such as JSave for generating Java class definition stubs, Protégé Web Browser for sharing ontologies over the Internet, WordNet for annotating ontologies with terms from the WordNet database, XML Schema for transforming a Protégé knowledge base into XML, UML for exchanging ontologies and UML class diagrams, DataGenie for importing and exporting data from relational databases, and Docgen for creating reports in various formats. Additionally, JessTab and Algernon provide rule-based programming capabilities, while PROMPT manages multiple ontologies and OWL-S Editor handles OWL-S services.

### Conclusion

The main purpose of this chapter is to provide an overview of the ontology tools currently available. If you are starting an ontology project, the initial step is to find a suitable ontology editor. The tools discussed here offer a range of features and functionalities, and we hope that this chapter will help you choose the right tool for your project.