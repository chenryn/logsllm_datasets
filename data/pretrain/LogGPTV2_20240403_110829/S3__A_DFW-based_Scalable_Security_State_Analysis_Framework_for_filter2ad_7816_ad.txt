### Improved Text

#### Performance Comparison with and without Segmentation
The performance of the system is better when using segmentation compared to a centralized firewall. This improvement is due to the absence of east-west traffic among running services, which did not specify reachability information between them. As a result, the Attack Graph (AG) computation is more efficient, leading to a significant reduction in generation time.

**Table 3: Mean and Standard Deviation for AG Generation Time**
| #Segments | Mean Time (sec) | Standard Deviation (sec) |
|-----------|-----------------|-------------------------|
| 5         | 3.66            | 1.96                    |
| 10        | 6.75            | 3.17                    |
| 15        | 9.91            | 4.46                    |
| 20        | 13.03           | 5.04                    |

**Table 4: Sub-AG Scalability Generation Time Using DFW, with and without Segmentation**
| # Services | # Segments | Without Segmentation (sec) | Using Segmentation (sec) |
|------------|------------|----------------------------|--------------------------|
| 750        | 5          | 2490                       | 0.872                    |
| 1450       | 10         | 3360                       | 2.083                    |
| 2490       | 15         | 4980                       | 4.468                    |
| 3360       | 20         | 6720                       | 10.027                   |

### SDN Controller Overhead
Since S3 is based on an SDN-managed data center network, it is essential to evaluate the overhead of computing AGs using the SDN controller to ensure that the AG generation does not overwhelm the controller, which could lead to service disruption for end users. Specifically, our proposed algorithm (Algorithm 1, line 15) relies on the SDN controller to compute the sub-AGs for all obtained segments. To measure the impact of this operation on the SDN controller's bandwidth, we used the first case in Table 2, where the system has 50-100 services (approximately 4000 vulnerabilities) running. We emulated the scenario and used the network throughput measurement tool `iperf` to assess the end-to-end bandwidth.

**Figure 8: Evaluation of SDN Controller Overhead**
- **Without Micro-Segmentation:** The network throughput was around 11.3 Gbps.
- **With Micro-Segmentation:**
  - 5 segments: 9.95 Gbps
  - 10 segments: Slight decrease
  - 15 segments: Slight decrease
  - 20 segments: Slight decrease

The drop in throughput can be attributed to the overhead induced by AG generation in each network segment and the computation required to merge individual segments into a full AG. The worst-case throughput impact on the SDN controller was approximately 10% (in the 20-segment case). This experiment shows that, on average, the scalable AG generation process will not significantly impact the SDN controller's performance in a large data center network.

### Optimal Number of Segments
We conducted a simulation experiment to identify the optimal number of segments in a large network with 50 services and 50 vulnerabilities. We varied the number of segments from 5 to 25, with an increasing number of DFW rules (3 in the case of 5 segments, 17 in the case of 25 segments), induced by the increase in the number of segments.

In Section 5.2, we presented and discussed a heuristic approach to determine the optimal number of segments based on the derived equation for the Segmentation Index (SI). The equation helps system administrators decide whether connectivity or the number of DFW rules is more important. **Figure 9** shows our experiments, where:
- The blue line indicates high connectivity between services in one segment (scon + scom > sd, α = 0.877, β = 0.105).
- The orange line indicates higher separation between segments based on the number of DFW rules (scon + scom < sd).

The SI increases steadily for cases where the weight of firewall rules is high, indicating reduced dependencies between vulnerabilities in each segment due to traffic regulation provided by DFW. Increasing the number of segments to 25 resulted in a low SI value for all three lines, indicating that the segments are disconnected from each other.

### Discussion
#### Cycle Detection
Dependencies between services in a network can cause cycles in the directed AG. Homer et al. [17] discussed the problems of cycles that can limit the scalability of AGs. Their research takes about 150 ms for cycle detection over a network with 10 hosts and 46 vulnerabilities. S3 utilizes network connectivity and vulnerability dependency information to detect any cycles present in the final directed AG. We use parallel nested Depth First Search [16] over each sub-AG to identify the cycles within each segment. The algorithm scales linearly with the number of vulnerabilities present in each network segment. For brevity, details on cycle detection are omitted in this paper.

#### Segment Validation and Segmentation Heuristics
We utilized a Segmentation Index-based sub-AG (segment) with a validation heuristic approach. The algorithm provides information about the appropriate size of each segment, addressing both the complexity concerns for AG generation and ensuring that each segment is highly cohesive (having the same type of services and vulnerabilities). This will help in the application of security patches to the entire segment. Other segmentation heuristics, such as k-spanning tree and shared nearest neighbor (SNN) graph, are classified under graph clustering algorithms. We plan to compare the optimal segmentation heuristic discussed in Section 5.2 with other state-of-the-art graph segmentation heuristics in future work.

#### Policy Conflicts and SLA Impact
It is crucial to consider the Service Level Agreement (SLA) that states the relationship between a service provider and client. The SLA will have an impact on the DFW rules enforced by the system administrator to create segments and isolate vulnerable services from protected ones. After applying segmentation and deriving new DFW rules, a conflict might exist between the SLA and the DFW rules, potentially causing service disruption for users. Security policy conflict handling is another area of research that will be considered in future work.

### Conclusion
Attack graph scalability and granular security enforcement are key challenges in data-centric networks today. We provide an SDN-based micro-segmentation approach using the S3 framework to address these issues. S3 enforces granular security policies in the data center network to deal with threats such as lateral movement of attacks. S3 reduces the number of security states in the network by reducing attack graph density and generation time, as evident from Section 6.2. The micro-segmentation approach is capable of establishing and generating a scalable AG for a large network, as shown in Section 6.1. Moreover, the impact on the SDN controller due to micro-segmentation is limited, as proven by the experimental analysis in Section 6.3. We also identified the optimal number of segments using the Segmentation Index (SI) method, which ensures high-quality (cohesive) segments with fine-grained access control policies across segments, as discussed in Section 5.2.

The current research does not address security policy conflicts that can be induced by co-dependency between micro-segmentation policies. Additionally, we have not compared our segmentation method with a diverse set of graph segmentation/clustering heuristics. In the future, we plan to address these limitations.

### Acknowledgment
All authors are thankful for research grants from the Naval Research Lab (N00173-15-G017, N0017319-1-G002) and the National Science Foundation (US DGE-1723440, OAC-1642031, SaTC-1528099). Special thanks to Jim Kirby from NRL for valuable feedback on the paper. Abdulhakim Sabur is a scholarship recipient from Taibah University through the Saudi Arabian Cultural Mission (SACM).

### References
[References remain unchanged]

---

This version of the text is more structured, clear, and professional, making it easier to read and understand.