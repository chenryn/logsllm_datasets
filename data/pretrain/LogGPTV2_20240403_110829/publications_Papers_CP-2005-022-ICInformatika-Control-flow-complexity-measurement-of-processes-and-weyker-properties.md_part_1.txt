Cardoso, J., “Control-flow Complexity Measurement of Processes and Weyuker’s Properties”, 6th International Enformatika
Conference. Transactions on Enformatika, Systems Sciences and Engineering, Vol. 8, pp. 213-218, Budapest, Hungary, October 26-
28, 2005. ISBN: 975-98458-7-3
Control-flow Complexity Measurement of
Processes and Weyuker’s Properties
Jorge Cardoso
which a business process is difficult to analyze, understand or
Abstract—Process measurement is the task of empirically and explain. The use of the CFC measure allow designers to create
objectively assigning numbers to the properties of business processes less complex processes, thus reducing the time spent reading
in such a way as to describe them. Desirable attributes to study and and understanding processes in order to remove faults or adapt
measure include complexity, cost, maintainability, and reliability. In
the process to changed requirements. Nowadays, complexity
our work we will focus on investigating process complexity. We
analysis has an increased importance since the emergence of
define process complexity as the degree to which a business process
processes that span both between and within enterprises have
is difficult to analyze, understand or explain. One way to analyze a
process’ complexity is to use a process control-flow complexity an inherent higher complexity. Therefore, methods should be
measure. In this paper, an attempt has been made to evaluate the used to support the design and redesign of processes to reduce
control-flow complexity measure in terms of Weyuker’s properties. their complexity. The CFC can be used to analyze the
Weyuker’s properties must be satisfied by any complexity measure
complexity of business processes, as well as workflow and
to qualify as a good and comprehensive one.
Web processes.
In this paper, our objective is to evaluate the control-flow
Keywords—Business process measurement, workflow,
complexity measure presented in [1] in terms of Weyuker’s
complexity.
properties [2]. Weyuker’s properties give an important basis
I. INTRODUCTION to classify a complexity measure to determine if it can be
B USINESS Process Management Systems (BPMS) categorized as a good, structured, and comprehensive one.
provide a fundamental infrastructure to define and
II. PERSPECTIVES TO PROCESS COMPLEXITY
manage business processes. BPMS, such as Workflow
Management Systems (WfMS), have become a serious There is no single metric that can be used to measure the
competitive factor for many organizations that are complexity of a process. Four main complexity perspectives
increasingly faced with the challenge of managing e-business can be identified (Fig. 4): activity complexity, control-flow
applications, workflows, Web services, and Web processes. complexity, data-flow complexity, and resource complexity.
Recently, a new field of research for processes has While in this paper we will focus on control-flow complexity,
emerged. This new field – termed process measurement – we present the main ideas behind each complexity
presents a set of approaches to the quantification of specific perspective.
properties of processes. Important properties to analyze Activity complexity. This view on complexity simply
include the estimation of complexity, defects, process size, calculates the number of activities a process has. While this
effort of testing, effort of maintenance, understandability, complexity metric is very simple, it is very important to
time, resources, and quality of service. Process measurement complement other forms of complexity. The control-flow
is still in its infancy and much work has yet to be undertaken. complexity of a process can be very low while its activity
Process measurement can and should be used in every complexity can be very high. For example, a sequential
phase of the process development life-cycle, including the process that has a thousand activities has a control-flow
analysis, design, implementation, testing, and maintenance complexity of 0, whereas its activity complexity is 100.
phases. Process measurement provides business process Control-flow complexity. The control-flow behavior of a
engineers and managers with a forecast of the characteristics process is affected by constructs such as splits, joins, loops,
of processes early in the development stage so that corrective and ending and starting points. Splits allow defining the
actions can be taken, if necessary, when the cost is low. possible control paths that exist in a process. Joins have a
In [1] we have presented a Control-Flow Complexity (CFC) different role; they express the type of synchronization that
measure to analyze the degree of complexity of business should be made at a specific point in the process.
processes. Process complexity can be defined as the degree to Data-flow complexity. The data-flow complexity of a
process increases with the complexity of its data structures,
the number of formal parameters of activities, and the
Manuscript received August 26, 2005.
mappings between activities’ data. A data-flow complexity
J. Cardoso is with the Department of Mathematics and Engineering,
University of Madeira, 9050-390 Funchal, Portugal (phone: 291-705-156; fax: metric can be composed of several sub-metrics which include:
291-705-199; e-mail: PI:EMAIL).
data complexity, interface complexity, and interface execution. Xor-split activities enable only one outgoing
integration complexity [3]. transition after completing their execution. And-split activities
are represented with a ‘•’, or-split are represented with a ‘O’
and xor-split activities are represented with a ‘⊕’. An activity
with more than one incoming transition can be classified as an
and-join, or-join or xor-join. And-join Activities start their
execution when all their incoming transitions are enabled. Or-
join activities start their execution when a subset of their
incoming transitions is enabled. Xor-join activities are
executed as soon as one of the incoming transitions is enabled.
As with and-split, or-split and xor-split activities, and-join, or-
join and xor-join activities are represented with the symbols
Fig. 1. Types of complexity analysis ‘•’, ‘O’ and ‘⊕’, respectively.
Resource complexity. Activities in a process need to Definition 6 (Fan-out)
access resources during their executions. The different types Fan-out is the number of transitions going out of an
of resources can be analyzed to determine the complexity of a activity.
process. This analysis can help managers to lower
administrative costs and better optimize resource utilization. Definition 7 (Control-flow induced state)
We map the control-flow complexity into the space of
III. THE CONTROL-FLOW COMPLEXITY METRIC possible execution states of a process. An induced state is a
For our investigation of complexity we use the following state that can be reached from a particular activity. Splits
practical definitions related to the control-flow complexity introduce the notion of states in processes. When a split
metric. (XOR, OR, or AND) is added to a process, the activities
connected to its outgoing transitions form the states that can
Definition 1 (Process): be reached from the split.
A process is a collection of activities that takes one or more
kinds of input and creates an output that is of value to the Definition 8 (XOR-split Control-flow Complexity)
customer. A process is a specific ordering of activities across XOR-split CFC (CFC XOR-split(activity i)) is determined by the
time and place, with a beginning, an end, and clearly number of induced states that are introduced with the split.
identified inputs and outputs. For XOR-splits, the complexity corresponds to the fan-out of
the split, i.e. the number of states that follow the XOR-split
Definition 2 (Process Property) that the process designer needs to consider, analyze, and
A property is a feature, characteristic or attribute of a assimilate.
process, such as complexity, maintainability, cost, reliability,
etc. Process properties can be evaluated and quantified using Definition 9 (OR-split Control-flow Complexity)
suitable models, methods, and algorithms. OR-split CFC (CFC OR-split(activity i)) is also determined by
the number of induced states that are introduced with the split.
Definition 3 (Process Measure) For OR-splits, the complexity corresponds to 2n-1, where n is
A process measure is an empirical assignment of numbers the fan-out of the split. OR-splits lead to higher control-flow
(or symbols) to processes to characterize a specific property. complexity than an XOR-split or AND-split since they
originate a greater number of induce states.
Definition 4 (Process Measurement)
Process measurement is the task of applying measures to Definition 10 (AND-split Control-flow Complexity)
processes in such a way as to describe them. As with the previous types of splits, an AND-split CFC
(CFC (activity)) is determined by the number of
AND-split i
Definition 5 (Control-flow Graphs) induced states that are introduced with the split. For AND-
Control-flow graphs can be used to describe the logic splits, the complexity is simply 1. The designer constructing a
structure of processes. A process is composed of activities and process needs only to consider and analyze one state that may
transitions. Activities are represented using circles and arise from the execution of an AND-split construct since it is
transitions are represented using arrows. Transitions express assumed that all the outgoing transitions are selected and
dependencies between activities. An activity with more than executed.
one outgoing transition can be classified as an and-split, or-
split or xor-split. And-split activities enable all their outgoing Definition 11 (Control-flow Complexity)
transitions after completing their execution. Or-split Activities The complexity of process is connected to effects such as
enable one or more outgoing transition after completing their readability of processes, understandability, effort, testability,
reliability and maintainability. The Control-flow Complexity another program, its complexity should be the same as the
(CFC) is calculated by adding the CFC of all split constructs original program. The final property states the complexity of
presents in a process. two programs joined together may be greater than the sum of
The CFC metric was inspired from the branch of software their individual complexities.
engineering known as software metrics, namely from the
B. Concatenation Operations on Processes
McCabe’s Cyclomatic complexity [4]. In processes, the
Weyuker introduces the concatenation operation (P1;P2) of
McCabe’s Cyclomatic complexity cannot be used directly
program blocks. Weyuker defines the concatenation operation
since the metric ignores the semantics associated with nodes
in the following way: a program can be uniquely decomposed
of the graph. While the nodes (i.e. activities) of processes
into a set of disjointed blocks of ordered statements having the
have distinct semantics (e.g. different types of splits and
property whenever the first statement in the block is executed;
joins), the nodes of a program’s flowgraph are
the other statements are executed in the given order.
undifferentiated. Therefore, we calculated the control-flow
In our approach and since we are dealing with processes,
complexity for a process P as follows:
four concatenation operations exist. Processes can be
CFC(P)= concatenated either sequentially, using an AND, an OR, or a
(1) XOR. Every AND/OR/XOR split has also a corresponding
∑CFC (i)+ ∑CFC (j)+
XOR−split OR−split AND/OR/XOR join and the different splits do not overlap
i∈{XOR−splits o fP} j∈{OR−splits o fP}
each other. We have decided to only allow the construction of
∑CFC (k)
AND−split well structured processes [9] which are based on a set of
k∈{AND-splits o fP}
predefined building blocks. This protects users from designing
invalid processes. Aalst [9] has shown that processes that are
The greater the value of the CFC(P) the greater the overall
not well structured contain design errors, such as non-
architectural complexity of a process. CFC(P) analysis seeks
termination, deadlocks, and spliting of instances. We use
to evaluate complexity without direct execution of processes.
Weyuker’s properties to evaluate the CFC metric assuming
that the processes are well-structured for simplicity reasons.
IV. CONTROL-FLOW COMPLEXITY AND WEYUKER’S
The CFC metric can be applied to well-structured and
PROPERTIES
unstructured processes.
Weyuker properties have been applied to software
In the list of properties below, P, Q and R represent
engineering and have been seriously discussed in the literature
processes and the complexity of P computed by our
[5-8]. Weyuker properties are a widely known formal
complexity measure CFC(P) is represented by |P|.
analytical approach and were therefore chosen for our analysis
since they do provide a basis for some validation of
1) When a process P is concatenated sequentially with a
complexity metrics. As shown by Weyuker, with such
process Q, we depict the resulting process as P-Q. This type of
properties it is possible to filter out measurements with
concatenation is illustrated in Fig. 2.
undesirable properties. The majority of these properties are
P-Q
formulated in a clear way. This is an advantage because we
are able to discuss them.
P Q
A. Summary of Weyuker’s Properties
Weyuker’s first property states that a metric cannot measure
all software programs as being equally complex. The second
property states that there are only a finite number of programs
Fig. 2. Sequential concatenation
of the same complexity. The third property states that each
different program may be complex. The fourth property states
2) When a process P is concatenated with a process Q using
that the complexity of a program depends on its
an AND-split and an AND-join, we depict the resulting
implementation and that even if two programs solve the same
process as P•Q. This type of concatenation is illustrated in Fig.
problem, they can have different complexities. Weyuker’s
3.
fifth property states that the complexity of two programs
P•Q
joined together is greater than the complexity of either
program considered separately. The sixth property states that a P
program of a given complexity when joined to two other
programs does not necessarily mean the resulting program
AND-split AND-join
will be of equal complexity, even if the two added program
are of equal complexity. Weyuker’s seventh property states
Q
that a permuted version of a program can have a different
complexity, so the order of statements matters. The eighth
property states that if a program is a straight renaming of
Fig. 3. AND concatenation Let c be a nonnegative number. Then there are only finitely
many processes for which |P| = c.
3) When a process P is concatenated with a process Q using