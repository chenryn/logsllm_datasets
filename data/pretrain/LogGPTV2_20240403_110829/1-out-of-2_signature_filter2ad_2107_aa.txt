title:1-out-of-2 signature
author:Miroslaw Kutylowski and
Jun Shao
1-out-of-2 Signature∗
†
Mirosław Kutyłowski
‡
Jun Shao
Institute of Mathematics and Computer Science
College of Computer and Information
Wrocław University of Technology
PI:EMAIL
Engineering
Zhejiang Gongshang University
PI:EMAIL
ABSTRACT
We consider a scenario in which Alice entitles Bob to serve
as her proxy with the right to sign one out of two possible
documents, say m1 and m2. The protocol guarantees that
the data given to Bob cannot be recognized as signatures
of m1 and m2, unless Bob transforms them with his private
key. The most important feature is, however, then if Bob
ﬁnalizes both signatures (of m1 and of m2) - violating the
delegated rights, then Bob’s private key will be revealed to
Alice. So we propose an undeniable proof of misbehavior
instead of other means that turn out to be less eﬀective and
more diﬃcult to implement.
The presented solution can be applied for providing agents
or representatives in negotiations to provide the original
signed documents on behalf of represented parties. The so-
lution can be immediately extended to a version with any
ﬁxed number of documents, from which only one can be
signed ﬁnally.
Security of the scheme can be shown in random oracle
model. We also provide a solution, for which security of the
signer is protected within the fail-stop framework.
Categories and Subject Descriptors
K.6.5 [Security and Protection]: Authentication.
General Terms
Security, Algorithms, Theory.
∗Main part of this work has been done when Jun Shao vis-
ited Wroc law University of Technology, sponsored by Foun-
dation for Polish Science, “Mistrz” Programme.
†Miros law Kuty lowski was supported by Polish Ministry of
Science and Higher Education, project N N206 369839.
‡Jun Shao was supported by NSFC Nos.61003308 and
60803161, ZJGSUSF No. 1130XJ2010045, and ECZJF No.
Y201017312.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’11, March 22–24, 2011, Hong Kong, China.
Copyright 2011 ACM 978-1-4503-0564-8/11/03 ...$10.00.
391
Keywords
proxy signature, undeniability, limited transformation.
1.
INTRODUCTION
The classical framework of using electronic signatures is
that the signer holds his private signing keys in a secure
environment called signature creation device and signatures
are created solely by this device. However, this leads to
a lot of practical problems. This is one of the reasons for
which proxy signatures have been introduced [6]. For proxy
signatures the right to create a signature is delegated from
the signer to a proxy that can produce a valid signature
in behalf of the signer. This brings electronic signatures
somewhat closer to the existing procedures of document ﬂow
in business and administration.
It also helps to overcome
some practical technical problems.
1.1 The Idea of 1-out-of-2 Signatures
Proxy signatures provide possibility to sign documents by
the proxy on behalf of the original signer within the scope
deﬁned in the delegation. This enables to control what has
been signed, but not how many times.
In particular, the
proxy may have unlimited authorization to sign documents
of a given kind. In the classical approach there is no techni-
cal provision to control the number of signatures.
What we propose in this paper is to delegate the right
to sign exactly one out of two documents.
In a slightly
more general version (1-out-of-k signatures) one can choose
exactly one out of k pre-signed documents.
Enforcing to sign only one document from the given col-
lection should be implemented not on procedural way, but
on cryptographic way. Creating two signatures by the proxy
should lead immediately to possibility of presenting an un-
deniable proof of misconduct: any person with these two
signatures must be able to prove in mathematical way that
the proxy violated the delegation.
1.2 The Idea of Undeniable Proofs of Misbe-
havior
A more general goal of this paper and the proposed con-
struction is to show that automatic detection of misbehavior
is possible. Moreover, we aim not only to detect a miscon-
duct by participants of cryptographic protocols, but also
provide mechanisms that yield undeniable proofs that can
be used in a court. With such proofs no expert knowledge of
security technology, cryptography or e-forensics is required
by the judge to make a decision. The case should be as self-
evident as possible. This would open room for simpliﬁed
court procedures (like Mahnverfahren in Germany), saving
costs and speeding up the procedure.
1.3 Example Application
Delegating the Right to a Negotiation Team When
entering business negotiations, many possible outcomes, dec-
larations, and guarantees might be necessary. Only one of
them will be really necessary to turn out during negotiation
time. Hence, the party entering the negotiations might pre-
pare in advance signed documents in order to present them
in case of need and speed-up the process, especially if the
negotiations are secret and no electronic document can be
delivered over the network to the negotiation team.
However, the problem is that the negotiation team repre-
senting company A may be composed of traitors: they might
be tempted to reveal all digital data obtained from A to the
negotiation partner. In this case, improving security level
digital signatures actually facilitate malicious behavior.
1-out-of-k signatures might be particularly helpful in this
situation: if a traitor wishes to authenticate more than one
options of a document prepared by A, he must ﬁnalize more
than one signatures. However, then the secret of the traitor
is revealed to the negotiation partner and provides an un-
deniable proof of misbehavior that can be used any time
against the traitor, among others in a crime prosecution
procedure. So behaving like this would be extremely risky
for the traitor. Of course, the traitor may reveal the op-
tions without signing them, but then the negotiation part-
ner should believe the traitor, which again would be quite
risky.
2. PREVIOUS WORK
1-out-of-2 signature is very similar with signatures related
to signing rights delegation, such as proxy signature, proxy
re-signature, and mediated signature.
Proxy signature is proposed by Mambo, Usuda and Okamoto
[6].
In a proxy signature scheme, the original signer dele-
gates his/her signing rights to a proxy, who can sign mes-
sages on behalf of the original signer afterwards. Generally
speaking, proxy signature schemes can be classiﬁed into the
following three types.
• Full delegation: The proxy can generate signatures on
behalf of the original signer on all messages by using
the proxy key which is the original signer’s secret key.
• Partial delegation: The proxy can generate signatures
on behalf of the original signer on all messages by us-
ing the proxy key which is computed from the original
signer’s secret key and the proxy’s secret key.
• Delegation by warrant: The proxy can use his/her se-
cret key to generate signatures on behalf of the original
signer on the messages speciﬁed in the warrant gener-
ated by the original signer.
At ﬁrst glance, delegation by warrant proxy signature can
also implement the functionality of 1-out-of-2 signature. In
particular, the original signer can specify that only one of
the two signatures can be signed by the proxy. However,
this procedure has two disadvantages. One is that the two
messages must explicitly be described in the warrant; the
other is that everyone can always recognize that the ﬁnal
signature is computed by the signer or the proxy. These two
advantages make the delegation by warrant proxy signature
unsuitable for the application mentioned in section 1.3.
392
On the other hand, 1-out-of-2 signature could hide the
signed messages from the proxy, and may let the signature
computed by the proxy indistinguishable from the signature
computed by the original signer.
Proxy re-signature is proposed by Blaze, Bleumer and
Strauss [1].
In a proxy re-signature scheme, a semi-proxy
can transform a signature for one public key to another sig-
nature for another public key on the same message.
Mediated signature is proposed by Boneh et al.
[2]. In
a mediated signature scheme, an on-line semi-trusted medi-
ator (SEM) should involve in every signing process to help
the original signer to generate the signature.
Clearly, neither of proxy re-signature nor mediated signa-
ture can implement the functionality of 1-out-of-2 signature.
3. PRELIMINARIES
3.1 Deﬁnition for 1-out-of-2 Signature
Informally speaking, 1-out-of-2 signature allows the signer
to give the proxy two his/her partial signatures, which can
be transformed to the signer’s full signatures by the proxy.
However, once these two partial signatures are both trans-
formed to the full signatures, the proxy’s secret key will be
revealed. In other words, the proxy can transform only one
of the two partial signatures; hence the name of 1-out-of-2
signature is obtained. The formal deﬁnition is as follows.
Deﬁnition 1. A 1-out-of-2 signature scheme is a tuple of
probabilistic polynomial time (p.p.t.) algorithms (SKeyGen,
PKeyGen, PreSign, Trans, Verify, Reveal):
• SKeyGen(1k) → (pkS, skS). On input the security pa-
rameter 1k, the signer’s key generation algorithm SKeyGen
outputs the signer’s key pair: a public key pkS and a
secret key skS.
• PKeyGen(1k) → (pkP , skP ). On input the security
parameter 1k, the proxy’s key generation algorithm
PKeyGen outputs the proxy’s key pair: a public key
pkP and a secret key skP .
• PreSign(skS, pkP , (m0, m1)) → ((σ0, m0), (σ1, m1)). On
input the signer’s secret key skS, the proxy’s pub-
lic key, and two messages (m0, m1) from the message
space, the partial signature generation algorithm PreSign
outputs two partial signatures ((σ0, m0), (σ1, m1)). Note
that in this algorithm, the signer may interact with the
proxy. Furthermore, there is no order for (m0, m1).
• Trans(σ0, σ1, skP ) → σ′
b, (b ∈ {0, 1}). On input two
partial signatures (σ0, σ1), and the proxy’s secret key
skP , the 1-out-of-2 full signature generation algorithm
Trans outputs a full signature σ′
b, (b ∈ {0, 1}). Note if
the proxy is involved in PreSign, then the values used
by the proxy may also be needed in this algorithm.
Furthermore, there is no order for (σ0, σ1).
• Verify((σ′, m), pkS) → 1 or 0. On input a full signa-
ture (σ′, m) and the signer’s public key pkS, the veri-
fying algorithm Verify outputs 1 if the full signature
is valid; 0, otherwise.
• Reveal((σ0, σ1), (σ′
0, σ′
1), pkP ) → skP . On input two
partial signatures (σ0, σ1) that are output from PreSign
together, their corresponding full signatures (σ′
1),
and the proxy’s public key Y , the revealing algorithm
Reveal outputs the proxy’s secret key skP . Note if
the proxy is involved in PreSign, then the values the
0, σ′
proxy sent to the signer may also be needed in this
algorithm.
Correctness. The correctness property has two require-
ments. Assume we have that ((σ0, m0), (σ1, m1)) ← PreSign(
skS, pkP , (m0, m1)), and σ′
(b′ =
0, 1), then the following two conditions must hold:
b′ ← Trans(σ0, σ1, skP ),
• Veriﬁability: Verify((σ′
• Revealability: Reveal((σ0, σ1), (σ′
b, mb), pkS) = 1, (b ∈ {0, 1}).
0, σ′
1)) = skP .
3.2 Security Models
Recall the applications of 1-out-of-2 signature, if the signer
cannot give the proxy’s secret key, he/she should be fully
responsible for the valid full signature; otherwise, the proxy
is fully responsible for the valid full signature.
As a result, we have two security models. One is for the
unforgeability of the signer’s signature, and the other is for
the conﬁdentiality of the proxy’s secret key.
Note that the oracles in the following security models al-
ways output the same value(s) for the same input.
3.2.1 Existential Unforgeability
The security game for the existential unforgeability of the
signer’s signature played between a challenger C and an ad-
versary A is as follows.
Setup The challenger runs SKeyGen and PKeyGen to obtain
the signer’s key pair (pkS, skS) and the proxy’s key
pair (pkP , skP ), respectively. The adversary is given
the signer’s public key pkS and the proxy’s public key
pkP , but the signer’s secret key skS and the proxy’s
secret key skP are kept by the challenger.
Queries The adversary adaptively makes a number of dif-
ferent queries to the challenger. Each query can be one
of the following.
• Secret key oracle OP sk: The challenger returns
the proxy’s secret key skP .
• Partial signature generation oracle Ops: On in-
put two messages (m0, m1), the challenger returns
PreSign(skS, pkP , (m0, m1)). If the proxy is in-
volved in PreSign, the communication data be-
tween the signer and proxy should be also re-
turned to the adversary. Among the communi-
cation data, if the adversary has queried OP sk, it
may generate the data that supposed to be gen-
erated by the proxy as in PreSign.
• Full signature generation oracle Ot: On input two
partial signatures (σ0, σ1), the challenger returns
Trans(σ0, σ1, skP ) → σ′
b, (b ∈ {0, 1}).
Forgery The adversary outputs a full signature (σ∗, m∗).
The adversary wins if the following situations all hold:
• Verify((σ∗, m∗), pkS) → 1.
• (∗, m∗) has not been queried to Ot.
• m∗ has not been queried to Ops or OP sk has not
been queried.
We deﬁne AdvEU(1k) to be the probability that adversary
AdvEU(1k) wins in the above game.
Deﬁnition 2. A 1-out-of-2 signature scheme is existentially
unforgeable with respect to adaptive chosen message attacks
if for all p.p.t. adversaries A, AdvEU(1k) is negligible in 1k.
393
Remark 1
(Type of the Forgery). At ﬁrst glance,
the adversary may output a partial signature. However, we
have the following two reasons that this case can be omitted.
On the one hand, if the input of Trans does not contain
the values used by the proxy in PreSign, then this partial
signature can easily be transformed to a full signature via
querying Ot by the adversary or the challenger. On the other
hand, if the input of Trans does contain the values used by
the proxy in PreSign, then the adversary can generate the
valid forgery that can be transformed by the proxy only when
he/she is the proxy; however, the forgery in this case is a
legal partial signature.
3.2.2 Conﬁdentiality
The security game for the conﬁdentiality of the proxy’s
secret key played between a challenger C and an adversary
A is as follows.
Setup Identical to that in the game for Existential Unforge-
ability.
Queries The adversary adaptively makes a number of dif-
ferent queries to the challenger. Each query can be one
of the following.
• Secret key oracle OSsk: The challenger returns
the signer’s secret key skS.
• Partial signature generation oracle Ops: Almost
the same as that in the game for Existential Un-
forgeability, except that among the communica-
tion data, if the adversary has queried OSsk, it
may generate the data that supposed to be gen-
erated by the signer as in PreSign.
• Full signature generation oracle Ot: Identical to
that in the game for Existential Unforgeability.
Output The adversary wins if he/she outputs the proxy’s
secret key skP .
We deﬁne AdvC(1k) to be the probability that adversary
AdvC(1k) wins in the above game.
Deﬁnition 3. A 1-out-of-2 signature scheme is conﬁden-
tial with respect to adaptive chosen message attacks if for
all p.p.t. adversaries A, AdvC(1k) is negligible in 1k.
4. THE PROPOSED SCHEME
Due to the limited space, we omit the correctness and
security analysis of our proposals in the paper, and give
them in the full version.
4.1 Scheme QS
The system parameters of schemeQS are (p, g, G, H1, H2),
where p is prime number, G is a ﬁnite cyclic group with order
p, g is a generator of G, and H1 and H2 are hash functions
H1(·) : {0, 1}∗ → Z∗
p , H2(·) : {0, 1}∗ → Z∗
p .
• SKeyGen: The signer chooses a random number x from
p , and computes X = gx. The (public key, secret
Z∗
key) key pair of the signer is (X, x).
• PKeyGen: The proxy chooses a random number y from
p , and computes Y = gy. The (public key, secret
Z∗
key) key pair of the proxy is (Y, y).
• PreSign: On input the signer’s secret key x, the proxy’s
public key Y , and two messages m0, m1 from the mes-
sage space, the partial signature generation algorithm
is performed as follows.
– The proxy sends A = ga to the signer, where a is
a random number from Z∗
p .
– On receiving A, the signer computes two partial
signatures on m0, m1 as follows. For (b′ = 0, 1)
Rb′ = (Y H1(Y ||A||b′) · A) · grb′ ,
Sb′ = rb′ + H2(mb′ ||Rb′ ) · x mod p,
where rb′ , (b′ = 0, 1) are random numbers from
Z∗
p .
– The signer sends (Rb′ , Sb′ , b′), (b′ = 0, 1) to the
proxy.
Remark 2. The proxy has no idea about the signed
messages. However, he/she can check whether the par-
tial signature is on a speciﬁc message or not by