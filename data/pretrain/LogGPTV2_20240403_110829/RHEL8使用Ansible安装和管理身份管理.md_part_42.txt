5.  通过在 `ipadnsconfig`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `forward_policy`{.literal} 变量设置为 [**first**]{.strong}。
        删除原始 playbook 的其他所有行。这是当前示例修改的 Ansible
        playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Playbook to set global forwarding policy to first
      hosts: ipaserver
      become: true
      tasks:
      - name: Set global forwarding policy to first.
        ipadnsconfig:
          ipaadmin_password: Secret123
          forward_policy: first
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file set-forward-policy-to-first.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 IdM DNS 中可用的转发策略类型的更多信息，请参阅 IdM 中的 [DNS
    转发策略。](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}
-   有关使用 `ansible-freeipa`{.literal} `ipadnsconfig`{.literal}
    模块的更多 Ansible playbook 示例，请参阅
    `/usr/share/doc/ansible -freeipa/ 目录中提供的README-`{.literal}
    dnsconfig.md``{=html} Markdown 文件。该文件还包含
    `ipadnsconfig`{.literal} 变量的定义。
-   有关使用 `ipadnsconfig`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-that-global-forwarders-are-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks}使用 Ansible playbook 确保 IdM DNS 中禁用了全局转发器 {.title}
:::
本节论述了 Identity Management(IdM)管理员可以如何使用 Ansible playbook
来确保在 IdM DNS 中禁用全局转发器。禁用的方法是将
`forward_policy`{.literal} 变量设置为 [**none**]{.strong}。
禁用全局转发器会导致 DNS
查询不会被转发。禁用转发仅作为全局转发配置的特定区覆盖。此选项等同于在
BIND 配置中指定空转发器列表。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了 `ansible-freeipa`{.literal}
    软件包，即执行该流程的主机。[如需更多信息，请参阅安装
    ansible-freeipa
    软件包](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}。
-   您知道 IdM 管理员密码。
-   您的 IdM 环境包含一个集成的 DNS 服务器。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsconfig
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**disable-global-forwarders.yml**]{.strong} Ansible playbook
    文件的副本。例如：
    ``` literallayout
    $ cp disable-global-forwarders.yml disable-global-forwarders-copy.yml
    ```
4.  打开 [**disable-global-forwarders-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsconfig`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `forward_policy`{.literal} 变量设置为 [**none**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Playbook to disable global DNS forwarders
      hosts: ipaserver
      become: true
      tasks:
      - name: Disable global forwarders.
        ipadnsconfig:
          ipaadmin_password: Secret123
          forward_policy: none
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file disable-global-forwarders-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 IdM DNS 中可用的转发策略类型的更多信息，请参阅 IdM 中的 [DNS
    转发策略。](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}
-   有关使用 `ansible-freeipa`{.literal} `ipadnsconfig`{.literal}
    模块的更多 Ansible playbook 示例，请参阅
    `/usr/share/doc/ansible -freeipa/ 目录中提供的README-`{.literal}
    dnsconfig.md``{=html} Markdown 文件。该文件还包含
    `ipadnsconfig`{.literal} 变量的定义。
-   有关使用 `ipadnsconfig`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-that-synchronization-of-forward-and-reverse-lookup-zones-is-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks}使用 Ansible playbook 确保 IdM DNS 中禁用了正向和反向查找区域的同步 {.title}
:::
本节论述了 Identity Management(IdM)管理员可以如何使用 Ansible playbook
来确保 IdM DNS 中不同步正向和反向查找区域。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了 `ansible-freeipa`{.literal}
    软件包，即执行该流程的主机。[如需更多信息，请参阅安装
    ansible-freeipa
    软件包](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}。
-   您知道 IdM 管理员密码。
-   您的 IdM 环境包含一个集成的 DNS 服务器。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsconfig
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  复制 [**disallow-reverse-sync.yml**]{.strong} Ansible playbook
    文件。例如：
    ``` literallayout
    $ cp disallow-reverse-sync.yml disallow-reverse-sync-copy.yml
    ```
4.  打开 [**disallow-reverse-sync-copy.yml**]{.strong} 文件进行编辑。
5.  通过在 `ipadnsconfig`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `allow_sync_ptr`{.literal} 变量设置为 [**no**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Playbook to disallow reverse record synchronization
      hosts: ipaserver
      become: true
      tasks:
      - name: Disallow reverse record synchronization.
        ipadnsconfig:
          ipaadmin_password: Secret123
          allow_sync_ptr: no
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file disallow-reverse-sync-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关使用 `ansible-freeipa`{.literal} `ipadnsconfig`{.literal}
    模块的更多 Ansible playbook 示例，请参阅
    `/usr/share/doc/ansible -freeipa/ 目录中提供的README-`{.literal}
    dnsconfig.md``{=html} Markdown 文件。该文件还包含
    `ipadnsconfig`{.literal} 变量的定义。
-   有关使用 `ipadnsconfig`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录。
:::
:::
:::
[]{#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm}第 25 章 使用 Ansible playbook 管理 IdM DNS 区域 {.title}
:::
作为身份管理(IdM)管理员，您可以使用 `ansible-freeipa`{.literal}
软件包中的 `dnszone`{.literal} 模块来管理 IdM DNS
区域的工作方式。本章描述了以下主题和程序：
::: itemizedlist
-   [IdM 中支持哪些 DNS
    区域类型](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#supported-dns-zone-types_using-ansible-playbooks-to-manage-idm-dns-zones "支持的 DNS 区类型"){.link}
-   [您可以在 IdM 中配置的 DNS
    属性](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones "主要 IdM DNS 区的配置属性"){.link}
-   [如何使用 Ansible playbook 在 IdM DNS
    中创建主区域](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#using-ansible-to-create-a-primary-zone-in-idm-dns_using-ansible-playbooks-to-manage-idm-dns-zones "使用 Ansible 在 IdM DNS 中创建主区域"){.link}
-   [如何使用 Ansible playbook 确保存在带有多个变量的主 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-the-presence-of-a-primary-dns-zone-in-idm-with-multiple-variables_using-ansible-playbooks-to-manage-idm-dns-zones "使用 Ansible playbook 确保 IdM 中存在一个带有多个变量的主 DNS 区域"){.link}
-   [在提供 IP 地址时，如何使用 Ansible playbook 确保存在用于反向 DNS
    查找的区域](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-the-presence-of-a-zone-for-reverse-dns-lookup-when-an-ip-address-is-given_using-ansible-playbooks-to-manage-idm-dns-zones "在给定 IP 地址时，使用 Ansible playbook 确保存在用于反向 DNS 查找的区域"){.link}
:::
::: itemizedlist
**先决条件**
-   DNS 服务安装在 IdM 服务器上。有关如何使用 Red Hat Ansible Engine
    安装带有集成 DNS 的 IdM 服务器的更多信息，请参阅使用 [Ansible
    playbook
    安装身份管理服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management){.link}。
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#supported-dns-zone-types_using-ansible-playbooks-to-manage-idm-dns-zones}支持的 DNS 区类型 {.title}
:::
身份管理(IdM)支持两种类型的 DNS [*区域：主区和 []{.emphasis}
转发区域*]{.emphasis}。这部分论述了这两个类型的区，并包括 DNS
转发的示例场景。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本指南对区域类型使用 BIND 术语，不同于用于 Microsoft Windows DNS
的术语。BIND 中的主要区域与 Microsoft Windows [*DNS 中的正向查找区域和
[]{.emphasis} 反向查找区域的作用相同*]{.emphasis}。BIND
中的转发区域的作用与 Microsoft Windows DNS
[*中的条件转发器相同*]{.emphasis}。
:::
::: variablelist
[主 DNS 区域]{.term}
:   主 DNS 区域包含权威 DNS 数据，并且可以接受动态 DNS
    更新。此行为等同于标准 BIND 配置中的 `类型 master`{.literal}
    设置。您可以使用 `ipa dnszone-*`{.literal} 命令管理主区域。
    根据标准 DNS 规则，每个主区域必须包含 `授权起始`{.literal} (SOA)和
    `名称服务器`{.literal} (NS)记录。在创建 DNS 区域时，IdM
    会自动生成这些记录，但您必须手动将 NS
    记录复制到父区域，以创建正确委托。
    根据标准 BIND 行为，查询服务器不具有权威的名称将转发到其他 DNS
    服务器。这些 DNS 服务器（称为转发器）可能是也可能不是查询的权威。
    ::: example
    []{#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#idm139880021264208}
    **例 25.1. DNS 转发的示例**
    ::: example-contents
    IdM 服务器包含 `test.example.`{.literal} 主区域。此区域包含
    `sub.test.example.`{.literal} 名称的 NS 委派记录。此外，test
    `.example.`{.literal} 区域还配置了
    `sub.text .example 子区域的 192.0.2.`{.literal} 254``{=html}
    转发器 IP 地址。
    查询名称 `不存在.test.example.`{.literal} 的客户端会收到
    `NXDomain`{.literal} 回答，并且不会发生转发，因为 IdM
    服务器对此名称具有权威。
    另一方面，查询 `host1.sub.test.example.`{.literal} name
    会转发到配置的转发器 `192.0.2.254`{.literal}，因为 IdM