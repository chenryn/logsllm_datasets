```
src/backend/utils/adt/genfile.c
Datum
pg_read_file(PG_FUNCTION_ARGS)
{
...
        if (!superuser())
                ereport(ERROR,
                                (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
                                 (errmsg("must be superuser to read files"))));
Datum
pg_read_binary_file(PG_FUNCTION_ARGS)
{
...
        if (!superuser())
                ereport(ERROR,
                                (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
                                 (errmsg("must be superuser to read files"))));
```
3\. 只有超级用户可以查看需要超级用户权限才能查看的参数  
```
src/include/utils/guc.h
/*
 * bit values in "flags" of a GUC variable
 */
#define GUC_LIST_INPUT                  0x0001  /* input can be list format */
#define GUC_LIST_QUOTE                  0x0002  /* double-quote list elements */
#define GUC_NO_SHOW_ALL                 0x0004  /* exclude from SHOW ALL */
#define GUC_NO_RESET_ALL                0x0008  /* exclude from RESET ALL */
#define GUC_REPORT                              0x0010  /* auto-report changes to client */
#define GUC_NOT_IN_SAMPLE               0x0020  /* not in postgresql.conf.sample */
#define GUC_DISALLOW_IN_FILE    0x0040  /* can't set in postgresql.conf */
#define GUC_CUSTOM_PLACEHOLDER  0x0080  /* placeholder for custom variable */
#define GUC_SUPERUSER_ONLY              0x0100  /* show only to superusers */
#define GUC_IS_NAME                             0x0200  /* limit string to NAMEDATALEN-1 */
#define GUC_NOT_WHILE_SEC_REST  0x0400  /* can't set if security restricted */
#define GUC_DISALLOW_IN_AUTO_FILE 0x0800                /* can't set in
src/backend/utils/misc/guc.c
        if (restrict_superuser &&
                (record->flags & GUC_SUPERUSER_ONLY) &&
                !superuser())
                ereport(ERROR,
                                (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
                                 errmsg("must be superuser to examine \"%s\"", name)));
...
```
4\. 只有超级用户能执行alter system  
```
src/backend/utils/misc/guc.c
        if (!superuser())
                ereport(ERROR,
                                (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
                         (errmsg("must be superuser to execute ALTER SYSTEM command"))));
```
5\. 只有超级用户能创建language   
```
src/backend/commands/proclang.c
                /*
                 * Check permission
                 */
                if (!superuser())
                {
                        if (!pltemplate->tmpldbacreate)
                                ereport(ERROR,
                                                (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
                                                 errmsg("must be superuser to create procedural language \"%s\"",
                                                                stmt->plname)));
                        if (!pg_database_ownercheck(MyDatabaseId, GetUserId()))
                                aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_DATABASE,
                                                           get_database_name(MyDatabaseId));
                }
```
如果你发现报错中包含了权限错误的问题，也可以使用这个方法找到对应的代码。   
```
\set VERBOSITY verbose
test=> \set VERBOSITY verbose
test=> create role b replication;
ERROR:  42501: must be superuser to create replication users
LOCATION:  CreateRole, user.c:319
对应的代码在user.c的319行, CreateRole函数中.  
```
就举这些例子，其他的可以自己看一下。   
## 阿里云rds_superuser和superuser有什么区别
为了维护便利，阿里云RDS PostgreSQL开放了一个权限名为rds_superuser给用户，比superuser少一些权限，主要是文件操作相关的，并且不能越权做superuser能做的事情。   
相比普通用户，rds_superuser多了以下权限。  
```
-- 创建插件
create extension ?;  
-- 创建非superuser,repliction权限用户
create role ?;  
-- 非supuer owned对象的操作
alter table test.test rename to test1;
alter table test.test1 owner to test_rdssuper;
alter table test.test1 rename to test;
alter table test.test owner to test_norm;
-- SET SESSION AUTHORIZATION、SET ROLE可以set非superuser用户
set role to test_norm;
reset role;
-- 所有对象的vacuum、analyze操作
vacuum pg_class;
analyze pg_class;
-- pg_stat_reset (pgstat_reset_counters) pg_stat_reset_shared（pgstat_reset_shared_counters）
select pg_stat_reset();
select pg_stat_reset_shared('bgwriter');
-- pgstat_reset_single_counter
select pg_stat_reset_single_table_counters('test.test'::regclass::oid);
select pg_stat_reset_single_function_counters('pg_stat_get_activity'::regproc::oid);
-- pg_stat_get_activity pg_stat_get_backend_activity pg_stat_get_backend_waiting pg_stat_get_backend_activity_start pg_stat_get_backend_xact_start pg_stat_get_backend_start pg_stat_get_backend_client_addr pg_stat_get_backend_client_port
-- select pg_stat_get_activity()
SELECT pg_stat_get_backend_pid(s.backendid) AS pid, pg_stat_get_backend_activity(s.backendid) AS query,pg_stat_get_backend_waiting(s.backendid) AS waiting, pg_stat_get_backend_xact_start(s.backendid) AS xact_start, pg_stat_get_backend_start(s.backendid) AS bd_start, pg_stat_get_backend_client_addr(s.backendid) AS ip, pg_stat_get_backend_client_port(s.backendid) AS port FROM (SELECT pg_stat_get_backend_idset() AS backendid) AS s;
-- pgstatindex pgstatindexbyid pgstatginindex pg_relpages pg_relpagesbyid pgstattuple 
create extension pgstattuple; 
SELECT * FROM pgstattuple('pg_catalog.pg_proc'); 
SELECT * FROM pgstatindex('pg_cast_oid_index'); 
SELECT * FROM pgstatginindex('test_gin_index'); 
-- pg_stat_statments
-- 中文分词相关
CREATE EXTENSION zhparser;
CREATE TEXT SEARCH CONFIGURATION testzhcfg (PARSER = zhparser);
ALTER TEXT SEARCH CONFIGURATION testzhcfg ADD MAPPING FOR n,v,a,i,e,l WITH simple;
-- finish prepared transaction，提交或回滚两阶段提交的事务
\c - test_norm
begin;
insert into test.test values(2);
prepare transaction 't1';
\c - test_rdssuper
select * from pg_prepared_xacts ;
commit prepared 't1';
-- alter type owner
\c - test_norm
CREATE TYPE compfoo AS (f1 int, f2 text); 
\c - test_rdssuper
alter type compfoo owner to test_rdssuper; 
-- 允许rds_superuser用户设置session_preload_libraries，以便于用户使用pg_hint_plan等
alter role all set session_preload_libraries = 'pg_hint_plan';
alter role all set set pg_hint_plan.debug_print = on;
\c - superuser
/*+ SeqScan(test.test) */ select * from test.test;
\c - test_rdssuper
/*+ SeqScan(test.test) */ select * from test.test;
-- 支持设置session_preload_libraries，设置的值必须是rds_available_extensions里面的插件
alter role all set session_preload_libraries = 'plperlu';  -- ERROR: invalid value for parameter "session_preload_libraries": "plperlu"
alter role all set session_preload_libraries = 'plperl,postgis';
-- grant role to
grant test_norm to test_rdssuper;
-- revoke role from
revoke test_norm from test_rdssuper;
-- rds_superuser可以set
SET SESSION AUTHORIZATION ?;
-- 允许rds_superuser通过dblink连接本地数据库,不需要配置port,host,ip,只需要指定dbname
-- 支持oss_fdw
-- 创建RDS实例时的超级用户自带了replication角色，允许用来做流复制
-- 允许rds_superuser设置temp_file_limit参数
-- 允许rds_superuser修改schema
grant all on schema test to test_another;
```
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")