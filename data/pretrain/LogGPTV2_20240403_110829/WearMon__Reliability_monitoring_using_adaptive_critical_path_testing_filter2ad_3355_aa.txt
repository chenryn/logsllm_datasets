# WearMon: Reliability Monitoring Using Adaptive Critical Path Testing

**Authors:** Bardia Zandian, Waleed Dweik, Suk Hun Kang, Thomas Punihaole, Murali Annavaram  
**Affiliation:** Electrical Engineering Department, University of Southern California  
**Emails:** {bzandian, dweik, sukhunka, punihaol, annavara}@usc.edu

## Abstract
As processor reliability becomes a primary design constraint, there is a growing need for continuous and adaptive monitoring to ensure correct functionality near the end of a chip's lifetime. This paper introduces WearMon, an adaptive critical path testing framework that provides accurate and real-time measures of a processor's timing margin degradation. By activating actual devices and signal paths used in normal operation, each test captures the timing margin of these paths. The monitoring adapts dynamically based on prior test results, which increases the efficiency of monitoring. Experimental results based on FPGA implementation show that the proposed monitoring framework can be easily integrated into existing designs with high accuracy and low complexity.

**Keywords:** Reliability, Critical Paths, Timing Margins

## 1. Introduction
Reliability concerns in modern systems are exacerbated by factors such as manufacturing imprecision, within-die and die-to-die variations, and wearout mechanisms like Bias Temperature Instability (NBTI) and Electromigration. These factors lead to gradual degradation over time, causing timing degradation that is hard to predict or accurately model. Most commercial products address this problem by inserting a guardband, which reduces performance and is a primary reason for over-provisioning resources.

In this paper, we argue that providing continuous and real-time reliability monitoring is essential for future processors. We propose WearMon, a runtime monitoring framework that uses adaptive critical path testing. WearMon injects specially designed test vectors into the circuit-under-test (CUT) to measure both functional correctness and timing margins. The outcomes of these tests are analyzed and stored in flash memory, providing an unprecedented view into timing margin degradation over long time scales. For effective monitoring, the framework must satisfy three criteria: continuous monitoring, adaptive monitoring, and low overhead monitoring.

## 2. Reliability Monitoring Framework

### 2.1. Architecture of the Monitoring Unit
Figure 1(a) shows the overview of the Reliability Monitoring Unit (RMU) and its integration with the CUT. The RMU consists of key components including a Test Vector Repository (TVR), a Dynamic Test Control (DTC) unit, and a Reliability History Table (RHT). The TVR holds a set of test patterns that are injected into the CUT at specified intervals. The DTC unit selects test vectors and determines the test frequency, while the RHT stores test history information.

### 2.2. Test Vector Selection
Prior studies using industrial CPU designs, such as the Intel Core 2 Duo processor, have shown that circuits often fall into three groups: a few paths with zero timing margin, a moderate number of paths with less than 10% timing margin, and a vast majority of paths with larger timing margins. Test engineers spend significant effort analyzing the first two sets of critical paths and generating test vectors. The TVR is initially filled with test vectors that target paths with less than 10% timing margin, even for complex CUTs like cache controllers.

### 2.3. Test Frequency Selection
To accurately monitor the timing margin of a path in the CUT, it is tested at multiple frequencies above its nominal operation frequency. The difference between the highest frequency at which the path passes and the nominal operation frequency determines the current timing margin. This range is then divided into steps, allowing for the reduction of the guardband while still meeting reliability goals.

### 2.4. DTC and Opportunistic Tests
The DTC is the decision-making unit that determines the interval between tests and the number of test vectors to inject during each test phase. DTC reads the most recent RHT entries to decide the next testing interval and complexity. If any prior tests have failed, DTC selects the union of all failed test vectors for the next phase. If no prior tests have failed, DTC simply selects from the top of the TVR.

## 3. Experimental Results
Experimental results based on FPGA implementation show that the proposed monitoring framework can be easily integrated into existing designs with high accuracy and low complexity. The results demonstrate the effectiveness of WearMon in providing continuous and adaptive monitoring of timing margins.

## 4. Related Work
This section compares WearMon to related works in the field, highlighting its unique contributions and advantages.

## 5. Conclusion
In conclusion, WearMon provides a robust and efficient framework for continuous and adaptive reliability monitoring. By leveraging adaptive critical path testing, it enables designers to make informed decisions and improve the reliability of future processors.

---

**Note:** The content has been reorganized and refined for clarity, coherence, and professionalism.