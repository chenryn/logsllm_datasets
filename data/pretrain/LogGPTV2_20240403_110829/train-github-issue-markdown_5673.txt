### Feature
In Angular 1, it was possible to store the intermediate result of a filtered `ngFor` loop. Starting with version 1.3 beta 17, this became even more straightforward by using an alias expression. You can find the documentation for this feature [here](https://code.angularjs.org/1.3.0-beta.17/docs/api/ng/directive/ngRepeat). However, this feature appears to be missing in Angular 2.

### Use Case Example
**Scenario:**
I am using a pipe to filter a list of items based on a search text. When the filtered list is empty, I want to notify the user with a message such as "No search results." Additionally, I would like to display the number of search results at any given time.

**Implementation in Angular 1:**
In Angular 1, I could save the intermediate filter result in a variable and use its `length` property to achieve this functionality.

### Question
Will this feature be reintroduced in Angular 2? If not, should we avoid using pipes in this scenario? Although I believe that using a pipe is the most elegant solution.

### Suggested Solution
If the feature is not available in Angular 2, you might consider the following alternatives:

1. **Custom Pipe with State Management:**
   Create a custom pipe that returns both the filtered list and the count. You can then manage the state in your component to display the appropriate messages.

2. **Component-Level Filtering:**
   Perform the filtering logic within the component itself and bind the filtered list and count to the template. This approach provides more control over the data and allows for easier state management.

By using one of these approaches, you can still achieve the desired functionality while maintaining the elegance of your code.