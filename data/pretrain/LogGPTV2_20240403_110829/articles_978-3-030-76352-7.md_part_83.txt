# Connected Calculus Units and KMeans Models for AI Service Providers

## Overview
This document outlines a general architecture for an edge AI-IoT network designed to detect plant leaf diseases at an early stage. The framework is composed of two main segments: the Edge AI-IoT Segment and the Core AI Service Segment. These segments are interconnected to share data and models, enabling efficient and accurate disease detection.

## General Architecture
### Edge AI-IoT Segment
The Edge AI-IoT Segment is the part of the IoT where plant detection machine learning models are deployed in AI-IoT-Nodes. Each node consists of at least a camera sensor and a small computation unit, such as a Raspberry Pi. These nodes capture images of plant leaves and analyze them to detect diseases at an early stage (Fig. 1). The results of the analysis are then sent to the Core AI Service Segment for further processing and use by farmers and agronomists.

### Core AI Service Segment
The Core AI Service Segment is hosted in the cloud and contains machine learning tools and image datasets used for training models to detect plant leaf diseases. This segment is responsible for:
- Selecting kernel images that have core characteristics of diseased leaves.
- Building KMeans Kernel Models using these kernel images.
- Deploying the trained models to the AI-IoT Nodes.

The operation of this framework involves the following steps:
1. **Kernel Image Selection**: The AI-Service Segment selects kernel images with core characteristics of diseased leaves.
2. **Model Training**: KMeans clustering is used to build clusters of kernel images, ensuring that diseased regions form one cluster. The resulting models are called KMeans Kernel-Models.
3. **Model Deployment**: The trained KMeans Kernel-Models are deployed to the AI-IoT Nodes, which use them to analyze the stream of images from the camera sensors (Fig. 2).

## Detailed Architecture
### Edge AI-IoT Node
Each AI-IoT Node includes:
- A camera sensor to capture images.
- A communication interface to send and receive data.
- A machine learning kernel model to analyze the images.

### Core AI-IoT Service Segment
The main functionalities of the framework are implemented in the Core AI-IoT Service Segment, which performs the following tasks:
- **Select Kernel-Images**: Choose images that represent the core characteristics of diseased leaves.
- **Build K-Means Kernel Models**: Use KMeans clustering to create models that can identify diseased regions.
- **Deploy the Service**: Send the trained models to the Edge AI-IoT Segment for real-time analysis.

KMeans clustering is chosen for its low computational requirements and efficiency in feature extraction. The process separates the image into four clusters, with one cluster containing most of the diseased region (Fig. 3).

### KMeans Kernel Learning
#### Principle
KMeans Kernel Learning involves creating KMeans models trained with selected kernel images. The resulting clusters are labeled as either diseased or healthy zones. The framework uses a specific kernel image (Ik0) to build a KMeans Kernel Model (ϕ k0) and kernel clusters (ω i, k0; i ∈ [0,4]). The cluster that contains the most significant diseased region is always labeled ω 2, k0 (Fig. 4).

#### Formal Definition
Given a kernel image Ik0, the KMeans Kernel Model is defined as:
\[ \text{KMeans}(I_{k0}) = \phi_{k0}, \Omega_{k0} \]
where:
- \(\phi_{k0}\) is the KMeans Kernel Model based on the kernel image Ik0.
- \(\Omega_{k0}\) is the set of cluster centroids and their labels (healthy or diseased).

\(\Omega_{k0}\) is defined as:
\[ \Omega_{k0} = (\omega_{i,k0}, \text{label}) / i \in [0-3], \text{label} \in \{\text{health}, \text{diseased}\} \]

Where \(\omega_{i,k0}\) is the centroid of the cluster number i, and the label indicates if the cluster belongs to a diseased or healthy region.

### Application to Images
The trained KMeans Kernel Model can be applied to any other image to detect plant leaf diseases. For example, given an image I1, the clustering result is:
\[ \phi_{k0}(I_1) = (C_{0,1}, h), (C_{1,1}, h), (C_{2,1}, d), (C_{3,1}, h) \]
where Cx,1 are the clusters produced by the model \(\phi_{k0}\) applied to the image data, and h or d indicates whether the cluster is healthy or diseased (Fig. 5).

For multiple images \(I_1, I_2, ..., I_n\), the result can be generalized as:
\[ \phi_{k0} \left( \begin{bmatrix} I_1 \\ I_2 \\ \vdots \\ I_n \end{bmatrix} \right) = \begin{bmatrix} (C_{0,1}, h_{0,1}) & (C_{1,1}, h_{1,1}) & \cdots & (C_{3,1}, h_{3,1}) \\ (C_{0,2}, h_{0,2}) & (C_{1,2}, h_{1,2}) & \cdots & (C_{3,2}, h_{3,2}) \\ \vdots & \vdots & \ddots & \vdots \\ (C_{0,n}, h_{0,n}) & (C_{1,n}, h_{1,n}) & \cdots & (C_{3,n}, h_{3,n}) \end{bmatrix} \]

A score is used to measure the quantity of clustering, defined as:
\[ \text{Score}_{\phi_{k0}}(I) = \frac{C_2}{C} \times 100 \]
where C2 is the number of pixels in the diseased cluster, and C is the total number of pixels. If the plant is healthy, C2 = 0 (Fig. 7).

### Kernel Image Selection Process
The selection of the kernel image is crucial for the efficiency of the algorithm. An algorithm is defined to find the most accurate kernel image by computing the accuracy of all candidate images and selecting the best one (Algorithm 1). The algorithm was executed on the tomato bacterial spot dataset from the Plant Village Dataset, and the best kernel images were identified (Fig. 8 and Fig. 9).

### Performance Evaluation
To evaluate the quality of the KMeans Kernel-Learning, tomato images from the Plant Village Dataset were used. The dataset contains 54,306 images of diseased and healthy plant leaves from 14 crop species, all captured under controlled conditions and resized to 256 × 256 pixels.

#### Results
- **Accuracy**: 96.25%
- **Precision**: 97.96%
- **Recall**: 62.34%
- **F1-Score**: 76.19%

The confusion matrix (Fig. 11) shows the classification performance, and the accuracy and training dataset size are compared with other methods (Fig. 12 and Fig. 13). The KMeans Kernel method achieved comparable accuracy with fewer training images compared to other techniques.

## Conclusion
The proposed KMeans Kernel Learning-based AI-IoT framework for plant leaf disease detection is efficient and accurate, with a high level of precision and recall. The framework leverages the strengths of KMeans clustering and edge computing to provide real-time disease detection, making it a valuable tool for farmers and agronomists.