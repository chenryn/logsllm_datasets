2323
4022
358
1012
49
0
Storm
Waledac
Nugache
Using a Structured P2P Topology: A botmaster can
adopt a structured P2P topology to decrease the probability
of mutual contacts by making peers in a same network to
communicate with diﬀerent sets of peers from each other. To
achieve this, peers in a same network have to coordinate with
each other so that they won’t communicate with the peers in
each other’s peer list. In some sense, peers in a same network
have to form their own tiny botnet among themselves and
appear as a single node to the remaining of the P2P botnet.
These intra-network communications among the peers in a
same network, however, would potentially yield new means
of detecting P2P bots in a network. Nevertheless, even if
a botmaster manages to deploy a mutual-contact-free P2P
architecture, two or more networks can choose to share their
ﬂow records to exploit the mutual-contacts among P2P bots
in diﬀerent networks, which are unavoidable since the bot-
master cannot know which networks would collaborate in
the ﬁrst place. For such mitigation strategies, cooperating
networks can use privacy-preserving set operations such as
[7] to share data between networks without revealing any
sensitive information.
Poisoning Clusters: The purpose of cluster poisoning for
P2P networks is to destroy clustering structure of a graph
by creating bogus edges [5]. Cluster poisoning appears to
be very hard to achieve in our context. In order to perform
poisoning, a botmaster has to create an edge between a P2P
bot and a benign node on a mutual-contacts graph. For this
purpose, she needs to make both the bot and the benign
host communicate with a mutual external IP. To do so, the
botmaster has to listen to the traﬃc of the benign host and
make the P2P bot contact with an external host which the
benign host has communicated with. But this is not a trivial
task for a botmaster, unless she also possesses a router or a
138
proxy in the same network.
6. RELATED WORK
Early botnets employed centralized command and control
(C&C) servers to distribute commands and updates to in-
dividual bots, usually through IRC or HTTP protocols [9].
Although a centralized structure is simple and easy to man-
age, it suﬀers from a single point of failure and is susceptible
to traditional defenses such as domain revocation, DNS redi-
rection, blacklisting etc. Therefore, botmasters have begun
to adopt a P2P architecture for C&C channels. In [20], au-
thors argue that it is harder to detect P2P bots especially
with a limited view of their traﬃc from a single Autonomous
System. In P2P botnets each bot acts both as a server and
a client allowing botmasters to publish commands and up-
dates from any point in the botnet[14][18]. In [6], authors
investigate the eﬀects of diﬀerent botnet structures.
There have been numerous techniques proposed to detect
botnets. In [25] and [24], the authors employ machine learn-
ing techniques where they train classiﬁers with diﬀerent fea-
tures to detect botnet C&C ﬂows. In [31], Strayer et. al.
proposed a technique to detect botnet activity by exploiting
temporal correlations between C&C activities of the bots
belonging to the same botnet. Binkey and Singh proposed a
technique to detect IRC botnets in [2] using botnet-related
anomalies in TCP and IRC statistics. Another IRC botnet
detection scheme was proposed by Goebel and Holz in [13],
where the authors exploited the structure and evolution of
IRC nicknames used by IRC bots. In [23], Karasaridis et.
al. combined traﬃc aggregates with IDS alarms to identify
centralized botnets within a Tier-1 ISP. In [16], Gu et. al.
proposed BotHunter, which searches for a speciﬁc pattern
of events in IDS logs to detect successful infections caused
by centralized botnets.
All the above schemes were designed to detect either spe-
ciﬁc botnets that they were trained for, or centralized bot-
nets. In general, detecting P2P bots in a network is harder
since there is no trivial correlation that allows us to link to-
gether the P2P bots in a network, especially when bot peers
communicate with each other using encryption and through
random ports [14, 18, 10].
As a completely diﬀerent problem from ours, crawler based
methods were proposed to enumerate P2P bots globally in
[22] and [18]. Since crawlers cannot enumerate P2P bots
behind NAT and/or ﬁrewall in [21] Kang et. al. proposed a
sybil attack based passive monitoring scheme to enumerate
P2P bots even behind NAT or ﬁrewall. However, P2P bot
enumeration methods are not intended to identify local P2P
bots in a network. Also, they require implantation of bot
peers which requires reverse engineering of a bot binary and
its C&C protocol.
Coming back to our problem, there have been few tech-
niques proposed which are able to detect local P2P bots
assuming that P2P bots exhibit similar malicious activities
and similar connection patterns.
In [17], Gu et. al. pro-
posed BotSniﬀer to detect bots based on spatial-temporal
correlation between bot responses to commands. Following
that, in [15], Gu et. al. proposed BotMiner which clusters
the hosts in a network by their malicious activity and com-
munication patterns. Their results showed that members of
a botnet usually fall within the same cluster. Similarly, in
[33], Yen and Reiter proposed a scheme called TAMD, where
traﬃc containing similar external IPs, similar payloads and
similar internal platform types are aggregated to detect bot-
139
nets in a network. Although clustering based botnet detec-
tion schemes are successful in detecting many current P2P
bots, botmasters can evade them by assigning diﬀerent tasks
to the bots in the same network or by randomizing their
communication patterns as acknowledged in [15].
In [29],
authors systematically investigate such evasion techniques.
Also, clustering based schemes fall short in detecting idle
P2P bots which haven’t exhibited any overt behavior yet.
7. CONCLUSION AND FUTURE WORK
In this paper, we presented a simple and eﬃcient method
to identify local members of a P2P botnet in a network,
starting from a known member of the same botnet in the
same network. The basic idea of the proposed method is
that, the members of a botnet are more likely to have mutual-
contacts with each other than with benign hosts. We evalu-
ate the proposed method using real P2P botnet (Nugache)
data captured by a crawler. We also provide a mathematical
analysis of the C&C structure of P2P botnets to characterize
the performance of the proposed method. Both our analysis
and experiments show that the proposed scheme is able to
identify several dormant P2P bots in a network.
There are some limitations of the proposed scheme as dis-
cussed in Section 5. Perhaps the most important one is that,
a botmaster can evade detection if she employs a structured
P2P topology which ensures that her bots avoid mutual-
contacts while communicating with each other. However,
developing such a mechanism is not trivial for today’s bot-
nets and currently available P2P topologies. Nevertheless,
even if a botmaster achieves such a topology, two or more
networks can mitigate this by sharing their network traf-
ﬁc, possibly in a privacy-preserving manner, to exploit the
mutual-contacts which will possibly occur between peers in
diﬀerent networks. We leave the exploration of the bene-
ﬁts of data-sharing as future work.
In addition, we plan
to study on a new P2P botnet architectures, which poten-
tially evade the proposed scheme at least in some scenarios.
This will allow us to further improve the proposed scheme
to withstand potential evasion strategies, which might be
employed by next generation botnets.
8. ACKNOWLEDGEMENTS
The authors would like to thank the anonymous review-
ers for their comments and David Dittrich for his valuable
contributions.
9. REFERENCES
[1] R. Bhagwan, S. Savage, and G. M. Voelker.
Understanding availability. In The 2nd International
Workshop on Peer-to-peer systems, 2003.
[2] J. R. Binkley and S. Singh. An algorithm for
anomaly-based botnet detection. In SRUTI’06:
Proceedings of the 2nd conference on Steps to
Reducing Unwanted Traﬃc on the Internet, 2006.
[3] J. Caballero, P. Poosankam, C. Kreibich, and
D. Song. Dispatcher: Enabling active botnet
inﬁltration using automatic protocol
reverse-engineering. In Proceedings of the 16th ACM
Conference on Computer and Communication
Security, Chicago, IL, November 2009.
[4] CERT Coordination Center. SiLK: System for
internet-level knowledge. Available at
http://tools.netsa.cert.org/silk/.
[5] D. R. Choﬀnes, J. Duch, D. Malmgren, R. Guierma,
F. E. Bustamante, and L. Amaral. Swarmscreen:
Privacy through plausible deniability in P2P systems.
Technical report, Northwestern EECS Technical
Report, March 2009.
[6] D. Dagon, G. Gu, C. Lee, and W. Lee. A taxonomy of
botnet structures. In Proceedings of the 23 Annual
Computer Security Applications Conference
(ACSAC’07), December 2007.
[7] L. K. Dawn and D. Song. Privacy-preserving set
operations. In in Advances in Cryptology - CRYPTO
2005, LNCS, pages 241–257, 2005.
[8] D. Dittrich and S. Dietrich. Discovery techniques for
P2P botnets. In Stevens Institute of Technology CS
Technical Report 2008-4, September 2008.
[9] D. Dittrich and S. Dietrich. New directions in
peer-to-peer malware. In Sarnoﬀ Symposium, 2008
IEEE, April 2008.
[10] D. Dittrich and S. Dietrich. P2P as botnet command
and control: A deeper insight. In MALWARE 2008.
3rd International Conference on Malicious and
Unwanted Software, 2008.
[11] P. Erdos and A. Renyi. On random graphs I. Publ.
Math. Debrecen 6, pages 290–297, 1959.
[12] P. Erdos and A. Renyi. The evolution of random
graphs. Magyar Tud. Akad. Mat. Kutato Int. Kozl 5,
pages 17–61, 1960.
[13] J. Goebel and T. Holz. Rishi: identify bot
contaminated hosts by IRC nickname evaluation. In
HotBots’07: Proceedings of the ﬁrst conference on
First Workshop on Hot Topics in Understanding
Botnets, 2007.
[14] J. B. Grizzard, V. Sharma, C. Nunnery, B. B. Kang,
and D. Dagon. Peer-to-peer botnets: overview and
case study. In HotBots’07: Proceedings of the ﬁrst
conference on First Workshop on Hot Topics in
Understanding Botnets, 2007.
[15] G. Gu, R. Perdisci, J. Zhang, and W. Lee. BotMiner:
Clustering analysis of network traﬃc for protocol- and
structure-independent botnet detection. In
Proceedings of the 17th USENIX Security Symposium
(Security’08), 2008.
[16] G. Gu, P. Porras, V. Yegneswaran, M. Fong, and
W. Lee. BotHunter: Detecting malware infection
through ids-driven dialog correlation. In Proceedings
of the 16th USENIX Security Symposium
(Security’07), August 2007.
[17] G. Gu, J. Zhang, and W. Lee. BotSniﬀer: Detecting
botnet command and control channels in network
traﬃc. In Proceedings of the 15th Annual Network and
Distributed System Security Symposium (NDSS’08),
February 2008.
[18] T. Holz, M. Steiner, F. Dahl, E. Biersack, and
F. Freiling. Measurements and mitigation of
peer-to-peer-based botnets: a case study on Storm
Worm. In LEET’08: Proceedings of the 1st Usenix
Workshop on Large-Scale Exploits and Emergent
Threats, 2008.
[19] M. Iliofotou, P. Pappu, M. Faloutsos,
M. Mitzenmacher, S. Singh, and G. Varghese.
Network monitoring using traﬃc dispersion graphs
(TDGs). In IMC ’07: Proceedings of the 7th ACM
SIGCOMM conference on Internet measurement,
pages 315–320, 2007.
[20] M. Jelasity and V. Bilicki. Towards automated
detection of peer-to-peer botnets: On the limits of
local approaches. In Proceedings of the 2nd USENIX
Workshop on Large-Scale Exploits and Emergent
Threats LEET’09, April 2009.
[21] B. B. Kang, E. Chan-Tin, C. P. Lee, J. Tyra, H. J.
Kang, C. N. Z. Wadler, G. Sinclair, N. Hopper,
D. Dagon, and Y. Kim. Towards complete node
enumeration in a peer-to-peer botnet. In Proceedings
of ACM Symposium on Information, Computer and
Communications Security (ASIACCS 2009), March
2009.
[22] C. Kanich, K. Levchenko, B. Enright, G. M. Voelker,
and S. Savage. The Heisenbot uncertainty problem:
challenges in separating bots from chaﬀ. In LEET’08:
Proceedings of the 1st Usenix Workshop on Large-Scale
Exploits and Emergent Threats, pages 1–9, 2008.
[23] A. Karasaridis, B. Rexroad, and D. Hoeﬂin.
Wide-scale botnet detection and characterization. In
HotBots’07: Proceedings of the ﬁrst conference on
First Workshop on Hot Topics in Understanding
Botnets, 2007.
[24] S. Kondo and N. Sato. Botnet traﬃc detection
techniques by C&C session classiﬁcation using svm.
Advances in Information and Computer Security,
pages 91–104, 2007.
[25] C. Livadas, R. Walsh, D. Lapsley, and W. Strayer.
Using machine learning technliques to identify botnet
traﬃc. Local Computer Networks, Annual IEEE
Conference on, 0:967–974, 2006.
[26] S. Nagaraja, P. Mittal, C.-Y. Hong, M. Caesar, and
N. Borisov. BotGrep: Finding P2P bots with
structured graph analysis. In USENIX Security
Conference, August 2010.
[27] P. Porras, H. Saidi, and V. Yegneswaran. Conﬁcker C
P2P Protocol and Implementation, September 2009.
http://mtc.sri.com/Conficker/P2P/.
[28] G. Sinclair, C. Nunnery, and B.-H. Kang. The waledac
protocol: The how and why. In Malicious and
Unwanted Software (MALWARE), 2009 4th
International Conference on, pages 69 –77, October
2009.
[29] E. Stinson and J. C. Mitchell. Towards systematic
evaluation of the evadability of bot/botnet detection
methods. In WOOT’08: Proceedings of the 2nd
conference on USENIX Workshop on oﬀensive
technologies, 2008.
[30] S. Stover, D. Dittrich, J. Hernandez, and S. Dietrich.
Analysis of the storm and nugache trojans: P2P is
here. In ;login: The USENIX Magazine, volume 32-6,
December 2007.
[31] W. Strayer, R. Walsh, C. Livadas, and D. Lapsley.
Detecting botnets with tight command and control.
Local Computer Networks, Annual IEEE Conference
on, 0:195–202, 2006.
[32] The Honeynet Project. Honeywall, 2009.
https://projects.honeynet.org/honeywall/.
[33] T.-F. Yen and M. K. Reiter. Traﬃc aggregation for
malware detection. In DIMVA ’08: Proceedings of the
5th international conference on Detection of
Intrusions and Malware, and Vulnerability
Assessment, pages 207–227, 2008.
140