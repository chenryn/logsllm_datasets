It seems that `np.vectorize` casts / unboxes `timedelta64` values and does so
kind of inconsistently depending on the unit. I am not sure that this was
intentional, but makes it difficult to work with such arrays; in particular,
it is not possible to vectorize a function which takes `timedelta64` value;
    >>> np.__version__
    '1.9.0'
    >>> f = lambda x: print(type(x), x)
    >>> xs = np.arange(1, 3).astype('timedelta64[h]')
    >>> xs
    array([1, 2], dtype='timedelta64[h]')
with `[h]` and `[s]` unit:
    >>> _ = np.vectorize(f)(xs)
     1 hours
     1:00:00
     2:00:00
    >>> _ = np.vectorize(f)(xs.astype('timedelta64[s]'))
     3600 seconds
     1:00:00
     2:00:00
    >>> _ = np.vectorize(f, otypes='O')(xs.astype('timedelta64[s]'))
     1:00:00
     2:00:00
with `[ns]` unit:
    >>> _ = np.vectorize(f)(xs.astype('timedelta64[ns]'))
     3600000000000 nanoseconds
     3600000000000
     7200000000000
    >>> _ = np.vectorize(f, otypes='O')(xs.astype('timedelta64[ns]'))
     3600000000000
     7200000000000