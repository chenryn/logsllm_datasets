term memory limit the duration of storage to less than about 30 seconds. On the other hand,
long-term memory can last as little as 30 seconds or as long as decades. Understanding how
short-term and long-term memories are used can lead to workflow metrics that predict
human performance and comprehension in workflow design, and can be used to assess and
improve the understandability of workflows.
Figure 8. Decreasing the cognitive complexity of workflows
For example, let us consider the workflow on the left side of Figure 8. The workflow is
one structure of 18 activities. Each activity has a name and a perceived behavior. When a
workflow designer looks at the workflow its brain tries to group all the concepts associated
with the activities together into one big abstract unit called chunk (Cant, Jeffery et al.
1995). Unfortunately, the short-term memory is a container where only a small finite
number of concepts can be stored. Miller (Miller 1956) argued that human short-term
memory has a forward memory span of approximately seven items plus or minus two. This
means that the number of items, for example, words or numbers, that a person can retain
and recall is 7±2. In our example, too many concepts are associated with the workflow and,
therefore, they cannot all be stored in the short-term memory container. As a result, when
confronted with workflow design decisions, designers have a higher risk of making errors.
Indeed, when short-term memory is overloaded, errors occur (Kintsch 1998).
One solution to enable workflow designers to avoid making errors while working with
the workflow on the left side of Figure 8 is to hierarchically decompose the workflow, i.e.,
the workflow is broken into a hierarchy of sub-workflows. Using this strategy, chunks
become composed of chunks and chunks can become part of long-term memory if they are
11
Dagstuhl Seminar, “The Role of Business Processes in Service Oriented Architectures”, 16-21 July 2006, Dagstuhl, Germany.
encountered often enough. Once in long-term memory, they can be recognized when they
are encountered. In computer programs, it has been found that the identifier density is a
good predictor of error provided time is constrained (Klemola 1999). In our context,
activities can be though as identifiers.
Furthermore, Athey (1976) and Ören (1978) have noticed that for a problem with a low
complexity, an individual may need a low level of information processing to cope with the
decisions to solve the problem. If the complexity of the problem increases, its information
processing level may increase. However, for each individual there is a critical point beyond
which the level of processed information effectiveness is decreased. After the critical point,
an increase in the complexity of a problem may worsen the individual’s ability to cope with
complexity, by causing a decrease level of information processing. As a result, workflows
should have a structure within predefined levels of complexity. The workflow on the left
side of Figure 8 may have a complexity that requires a level of information processing that
is beyond critical point making the individual’s ability to cope with complexity decreases.
6.5 Computational complexity theory
Computational complexity theory studies the resources of the computation required to
solve a given problem. Resources usually involve parameters such as time and space. Time
complexity studies the length of time it takes to find a solution or complete a process. It is a
function of the size of the input. Space complexity studies the amount of physical storage
required for a system to perform a certain operation. It is also a function of the size of the
input.
The basic property of workflow is that they are case-based (Aalst 1998). This means that
every activity is executed for a specific case. The concept of time complexity theory can be
used to study the number of activities that are needed to complete a particular workflow
instance. In the same way, space complexity can also be used to study the storage space
needed to complete and instance.
Figure 9. Time complexity of a workflow
Let us consider the workflow in Figure 9. Each activity has a Big O notation that
describes its asymptotic behavior. Some transitions are loops that are taken n times. Having
these settings, what is the time computational complexity of the workflow? The difficulty
12
Dagstuhl Seminar, “The Role of Business Processes in Service Oriented Architectures”, 16-21 July 2006, Dagstuhl, Germany.
of computing the overall complexity is due to the existence of parallel constructs and
especially non-deterministic splits.
7 Conclusions
Several workflow specification languages and systems have been developed to ease the
task of modeling and supporting business processes. Emergent business-to-business and
business-to-customer distributed systems will most likely be based on workflow
management platforms. One step in this direction was the specification of BPEL, a
language to design processes that orchestrate Web services. As organization adopt this new
technological way of doing business, they will rapidly wish to have available tools to
guarantee that the developed workflows are simple, modular, easy to understand, easy to
maintain and easy to re-engineer. To achieve these objectives, one can calculate the
complexity of workflows. The complexity of workflows is intuitively connected to effects
such as readability, understandability, effort, testability, reliability and maintainability. As
known from software engineering, it is a fact that it is cost-effective to fix a defect earlier in
the design lifecycle than later. While these characteristics are fundamental in the context of
workflow, and business processes in general, only a few contributions have targeted these
problems.
In this paper, we surveyed several complexity approaches developed in other fields of
science and we discussed to what extent these metrics and measurements can be adapted for
workflows. While more complexity approaches exist, we have limited our scope to the one
that we feel can have a greater impact on workflow management. Namely, we have
described and illustrated possible scenarios that explain how information complexity,
cyclomatic complexity, Kolmogorov complexity, cognitive complexity, and computational
complexity can be used to evaluate the complexity of workflows.
A further empirical investigation of the application of these approaches to evaluate
complexity might ultimately lead to establishing a complexity theory of business process
models. In order to demonstrate that these metrics serves their purpose, we plan to carry out
several empirical validations by means of controlled experiments and develop tools that
will be made available to workflow designers.
8 References
Aalst, W. M. P. v. d. (1998). "The Application of Petri Nets to Workflow Management."
The Journal of Circuits, Systems and Computers 8(1): 21-66.
Aalst, W. M. P. v. d. and A. H. M. t. Hofstede (2005). "YAWL: Yet Another Workflow
Language." Information Systems Frontiers 30(4): 245-275.
Adams, M., D. Edmond, et al. (2003). The application of Activity Theory to dynamic
workflow adaptation issues. 7th Pacific Asia Conference on Information Systems
(PACIS 2003), Adelaide, South Australia.
Alexander, C. (1979). The Timeless Way of Building, Oxford University Press.
Arthur, W. B. (1999). "Complexity and the Economy." Science 284(5411): 107-109.
13
Dagstuhl Seminar, “The Role of Business Processes in Service Oriented Architectures”, 16-21 July 2006, Dagstuhl, Germany.
Athey, T. H. (1976). Training the Systems Analysts to Solve Complex Real World
Problems. 14th Annual Computer Personnel Research Conference, ACM Press.
Bar-Yam, Y. (1997). Dynamics of Complex Systems, Perseus.
Burbeck, S. (1996). "Real-time complexity metrics for smalltalk methods." IBM Systems
Journal: 1-28.
Cant, S., D. R. Jeffery, et al. (1995). "A conceptual model of cognitive complexity of
elements of the programming process." Inf. Software Technol. 37(7): 351-362.
Cardoso, J. (2005). About the Complexity of Teamwork and Collaboration Processes. IEEE
International Symposium on Applications and the Internet (SAINT 2005),
Workshop - Teamware: supporting scalable virtual teams in multi-organizational
settings, Trento, Italy, IEEE Computer Society.
Cardoso, J. (2005). About the Data-Flow Complexity of Web Processes. 6th International
Workshop on Business Process Modeling, Development, and Support: Business
Processes and Support Systems: Design for Flexibility, Porto, Portugal.
Cardoso, J. (2005). Control-flow Complexity Measurement of Processes and Weyuker's
Properties. 6th International Conference on Enformatika, 26-28, October 2005,
Budapest, Hungary, International Academy of Sciences.
Cardoso, J. (2005). Evaluating Workflows and Web Process Complexity. Workflow
Handbook 2005. L. Fischer. Lighthouse Point, FL, USA, Future Strategies Inc.:
284-290.
Cardoso, J. (2006). "Complexity Analysis of BPEL Web Processes." Journal of Software
Process: Improvement and Practice, InterScience, Wiley (to appear).
Cardoso, J. and A. Sheth (2005). Adaptation and Workflow Management Systems.
International Conference WWW/Internet 2005, Lisbon, Portugal.
Du, W., J. Davis, et al. (1999). Enterprise workflow resource management. International
Workshop on Research Issues in Data Engineering, Sydney, Australia.
Goldenfeld, N. and L. P. Kadanoff (1999). "Simple Lessons from Complexity." Science
284(5411): 87-89.
Gruhn, V. and R. Laue (2006). Adopting the Cognitive Complexity Measure for Business
Process Models. 5th IEEE International Conference on Cognitive Informatics,
Beijing, China.
Gruhn, V. and R. Laue (2006). Complexity Metrics for Business Process Models. 9th
International Conference on Business Information Systems, Klagenfurt, Austria.
Hermann, T. (1995). Workflow Management Systems: Ensuring Organizational Flexibility
by Possibilities of Adaptation and Negotiation. Proceedings of the Conference on
Organizational Computing Systems (COOCS'95).
Holland, J. H. (1995). Hidden Order: How Adaptation Builds Complexity, Reading:
Addison-Wesley.
IEEE (1992). IEEE 610, Standard Glossary of Software Engineering Terminology. New
York, Institute of Electrical and Electronic Engineers.
Jones, T. C. (1986). Programming Productivity. New York, McGraw-Hill.
14
Dagstuhl Seminar, “The Role of Business Processes in Service Oriented Architectures”, 16-21 July 2006, Dagstuhl, Germany.
Kauffman, S. A. (1993). The Origins of Order: Self-Organization and Selection in
Evolution. New York, Oxford University Press.
Kintsch, W. (1998). Comprehension: a paradigm for cognition, Cambridge University
Press.
Klemola, T. (1999). Software Comprehension: Theory and Metrics, Concordia University.
Koch, C. and G. Laurent (1999). "Complexity and the Nervous System." Science
284(5411): 96-98.
Lakshmanan, K. B., S. Jayaprakash, et al. (1991). "Properties of Control-Flow Complexity
Measures." IEEE Transactions on Software Engineering archive 17(12): 1289 -
1295.
Lee, T. (2003). Complexity Theory in Axiomatic Design. Department of Mechanical
Engineering. Massachusetts, Massachusetts Institute of Technology: 182.
Miller, G. A. (1956). "The Magical Number Seven, Plus or Minus Two: Some Limits on
Our Capacity for Processing Information." Psychological Review 63: 81-97.
Miller, J. A., J. S. Cardoso, et al. (2002). Using Simulation to Facilitate Effective Workflow
Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02),
San Diego, California.
Ören, T. I. (1978). Rationale for Large Scale Systems Simulation Software based on
Cybernetics and
General Systems Theories. Cybernetics and Modelling and Simulation Large Scale
Systems, Namur, Belgium.
Reijers, H. A. and I. T. P. Vanderfeesten (2004). Cohesion and Coupling Metrics for
Workflow Process Design. BPM 2004 (LNCS 3080). J. Desel, B. Pernici and M.
Weske. Berlin, Heidelberg, Springer-Verlag. LNCS 3080: 290-305.
Rind, D. (1999). "Complexity and Climate." Science 284(5411): 103-107.
Rolón, E., F. Ruíz, et al. (2005). "Aplicación de métricas software en la evaluación de
modelos de procesos de negocio." Revista Sociedad Chilena de Ciencia de la
Computación 6(1).
Weng, G., U. S. Bhalla, et al. (1999). "Complexity in Biological Signaling Systems."
Science 284(5411): 92-96.
Whitesides, G. M. and R. F. Ismagilov (1999). "Complexity in Chemistry." Science
284(5411): 89-92.
zur Mühlen, M. (1999). Resource Modeling in Workflow Applications. Workflow
Management Conference, Muenster, Germany.
Zuse, H. (1991). Software Complexity: Measures and Methods. Berlin, New York,
DeGruyter Publisher.
Zuse, H. (1997). A Framework of Software Measurement. Berlin, Walter de Gruyter Inc.
15