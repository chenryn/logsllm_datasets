Zabbix企业级分布式监控系统
awk'/max listen queue:/(print $NF}$(LOG FILE)
listen_queue_len() {
awk '/listen queue len:/ (print $NF)' $(LOG_FILE)
idle_processes(){
active_processes(){
total_processes()f
awk'/total processes:/ (print $NF)' s(LOG_FILE)
max_active_processes() {
awk '/max active processes:/ (print $NFl' $(LOG_FILE)
max children reached(){
case "sl" in
pool)
pool
process_manager)
process manager
start_since)
start since
accepted_conn)
accepted_conn
listen_queue)
listen_queue
max_listen_queue)
max_listen_queue
listen_queue_len)
listen_queue_len
idle_processes)
idle_processes
active_processes)
active_processes
total_processes)
total_processes
max_active_processes)
258
---
## Page 275
第11章监控案例
max_active_processes
max_children_reached)
max_children_reached
)
o
nn/listen_queue/max_listen_queue|listen_queue_len/idle_processes|act
ive_processes|total_processeslmax_active_processeslmax_children_reac
hed}"
esac
Key的php-fpm.conf的子配置文件如下。
shell# cat /etc/zabbix/zabbix_agentd.conf.d/php-fpm.conf
UserParameter=phpfpm.status.pool,/etc/zabbix/scripts/monitor_php
fpm_status pool
UserParameter=phpfpm.status.process.manager,/etc/zabbix/scripts/
monitor_phpfpm_status process_manager
UserParameter=phpfpm.status.start.since,/etc/zabbix/scripts/moni
tor_phpfpm_status start_since
UserParameter=phpfpm.status.accepted.conn,/etc/zabbix/scripts/mo
nitor_phpfpm_status accepted_conn
UserParameter=phpfpm.status.listen.queue,/etc/zabbix/scripts/mon
itor_phpfpm_status listen_queue
UserParameter=phpfpm.status.max.listen.queue,/etc/zabbix/scripts
/monitor phpfpm status max_listen_queue
UserParameter=phpfpm.status.listen.queue.len,/etc/zabbix/scripts
/monitor_phpfpm_status listen_queue_len
UserParameter=phpfpm.status.idle.processes,/etc/zabbix/scripts/m
onitor_phpfpm_status idle_processes
UserParameter=phpfpm.status.active.processes,/etc/zabbix/scripts
/monitor_phpfpm_status active_processes
UserParameter=phpfpm.status.total.processes,/etc/zabbix/scripts/
monitor_phpfpm_status total_processes
UserParameter=phpfpm.status.max.active.processes,/etc/zabbix/scr
ipts/monitor_phpfpm_status max_active_processes
UserParameter=phpfpm.status.max.children.reached,/etc/zabbix/scr
ipts/monitor_phpfpm_status max_children_reache
在Web页面中依次添加Key，如图11-6所示。
rd
nterval
phofpm.statusacented.conn
phpfpm.status.accepted.conr
300
photm.srausatiyeorocees
phpfm.statustvpe
00
phofomstatusiderocesses
phpfpm.status.idle.processes
O0E
phpfm.tatus.isten.queue
phpfpm.status.listen.queue
300
phofom.status.listen.queuelen
phofom.status.max.active.processes
300
ohofnm.as.max.chideneachd
phpfpm.status.max.children.reached
300
hofmsttma.tene
phpfp.status.max.isten.q
300
chpfom.ctatuu.roo!
phipfpm.status.po
00
phofom.taus.oroes.manaer
phfpm.status,process.manaer
300
phofern.tatus.ga.ince
ohipfor
.status,start.sinc
300
phofpm.statustotl.orooesses
phofpm,status.ttalproess
300
图11-6
259
---
## Page 276
Zabbix企业级分布式监控系统
监控效果如图11-7所示。
10 E
8
6
4
2E
3
last
min
avg
phpfps.status,accepted.conn
[avg]
9.97K
9.97K
9.97区
9.97
phpfpm.status,active.processes
[aae]
1
1
phpfp,status.idlc.proceses
[avg]
24
24
24
phpfpm,status,listen.queue
[avg]
0
U
0
phpfpm.status.listen.queue.len
[avg]
0
phpfpn,stalus,max,active.processes
[avg]
5
phpfpm,status,max.children.reached
[avg]
0
phpfpn,status,max,llsten,queue
[avg]
0
phpfpn,status,start,since
[avg]
3.36K
3.36K
3.36
3.36K
phpfpm,status,total.processes
[avg]
25
25
25
25
图11-7
有关监控Tomcat和Weblogic的内容，请参考7.7.7节和7.7.8节的内容。
监控MySQL
11.4
11.4.1用自带的模板监控MySQL
安装好Zabbix后，会出现一个MySQL的模板，如图11-8所示。
TemplateAppMySOL
Applications(1)Items(14）Triqgers(1）Graphs(2)Screens(1)Discovery（0)Web (0)
图11-8
由于Zabbix-Agent 本身并没有提供直接对MySQL监控的Key，所以，首先
需要通过自定义Key来应用这个模板。系统默认已经提供了如图11-9所示的模板。
接下来定义Key。分析一下Key 的规则可知，默认的模板中，Key可以归为
以下三类。
●mysql.status[var]
#这种格式可以通过传递参数来定义Key
● mysql.ping
·mysql.version
260
---
## Page 277
第11章
监控案例
Wizard
Name
Triggers
Key
口
MySQL beqin operations per second
mysql.status[Com_begin]
口
MySQLbytesreceived persecond
mysql.status[Bytes_received]
口
MySOL bytes sent per second
mysql.status[Bytes_sent]
口
MySQL commit operations per second
mysql.status[Com_commit]
口
MySQL delete operations per second
mysql.status[Com_delete]
口
MySOL insert operations per second
mysql.status[Com_insert]
口
MvSQL queries per second
mysql.status[Questions]
口
MySQL rollback operations per second
mysql.status[Com_rollback]
口
MySQL select operations per second
mysql.status[Com_select]
口
MySQL slow queries
mysql.status[Slow_queries]
口
MySQL status
Triggers (1)
mysql.ping
口
MySOL update operations per second
mysql.status[Com_update]
口
MySOL uptime
mysql.status[Uptime]
口回
MySQL version
mysql.version
图11-9
然后编写一个Key的脚本。
MySQL监控的原理很简单，用MySQL的命令showstatus即可查看相关的性
能参数，然后依次取值。
①在Zabbix-Agent端添加MySQL的监控脚本
shell# vim /etc/zabbix/scripts/monitor_mysql
#!/bin/bash
#author:itnihao
#mail:PI:EMAIL
#date 2013-12-18
#version v1.0
#function:use zabbix monitor mysql status
mysql=s(which mysql)
#注意，如果MySQL是非标准安装，请写出MySQL的绝对路径
#mysql=/usr/bin/mysql
var=$1
MYSQL_USER=$2
#这里的参数方便后面在Web界面中自定义变量
MYSQL_PASSWORD=$3
MYSQL Host=$4
#如果没有传递参数，则使用默认的用户名、密码和主机名
["S{MYSQL USER}"
=] &&MYSQL_USER=zabbix
]
"${MYSQL_PASSWORD)"=]&&MYSQL_PASSWORD=Zabbix
["${MYSQL_HOSt}"
='] && MYSQL_Host=localhost
ASSWoRD) -h$(MYSQL_Host) -e 'show status'Igrep -v Variable_namelgrep
"\b${var}\b"|awk'{print$2}m
测试脚本，结果如图11-10所示。
261
---
## Page 278
Zabbix企业级分布式监控系统
[rootelocalhost zabbix_agentd.conf.d]#/etc/zabbix/scripts/monitor_mysg]
ot@localhostzabbix_agentd.conf.d]#/etc/zabbix/scripts/monitor_mysql uptime
[root@localhost zabbix_agentd.conf.d]#
图11-10
从图11-10中可以看到，脚本能正常运行（如果不能正常运行，则需要检查
授权信息是否正确）。
②修改zabbix_agentd.conf 配置文件。
Juos pzua6e xtqqez/xtqqez /o4a/ :($vI#<) : 4- daxbe #1taus
#主要修改以下参数
Include=/etc/zabbix/zabbix_agentd.conf.d/
#配置文件路径
UnsafeUserParameters=1
#允许特殊字符
③子配置文件定义Key的名称。
shell#vim/etc/zabbix/zabbix_agentd.conf.d/mysql_status.conf
UserParameter=mysql.status[*],/etc/zabbix/scripts/monitor_mysql $1
nglgrep alivelwc -l
UserParameter=mysql.version,mysql -V | cut -f6-d" " l sed 's/,//'
④对MySQL服务的主机添加MySQL模板，如图11-11所示。
HostTemplatesIPMIMacrosHost inventory
Linkedtemplates
Action
TemplateAppMySQL
Unlink Unlink and clear
TemplateOsLinux
Unlink Unlink and clear
Linknewtemplates
type here to seardh
Add
SaveCloneFull cloneDeleteCancel
图11-11
大约1分钟（即监控项的更新周期）后，就可以看到相关的监控参数，如图
11-12所示。
ZABBIX
10
图11-12
在MySQL的分组中可以看到取到的数值，如图11-13所示。
以上步骤完成后，就可以让默认的MySQL模板生效了。但是我们不会满足
于此，能否添加更多的监控呢？答案是肯定的。
添加Key，单击Items，如图11-14所示。
262
---
## Page 279
第11章
监控案例
MySQL(14Itenis)
MySQLbeginoperationsersecond
17 Dec201319:08:11
0qps
MySQLbytesreceived persecond
17Dec2013 19:08:09
5da 0
MySQLbytes sentper second
17Dec201319:08:10
sdao
MySQLcommitoperationsersecond
17 Dec201319:08:12
0qps
17Dec201319:08:13
0aps
MysQLinsertoperationspersec
17Dec201319:08:14
0qps
MySQL
17Dec201319:08:18
0aps
MysQLrollbackoperationspersecond
17Dec201319:08:15
sdbo
MysQLeleterationserecond
17 Dec201319:08:16
0qps
MySQL slow quenes
17 Dec201319:08:19
MySQLstatus
17 Dec 2013 19:08:08
(r)an
MySQL update operatiens
17 Dec2013 19:08:17
0qps
MySQLuptime
17 Dec201319:08:20
1day,08:57:01
MySQLven
17 Dec 2013 18:28:21
5.1.61
图11-13
Applications(1)
Items(14))Triqgers(1)Graphs(2)Screens(1) Discovery(0)Web(0)
图11-14
模板中自带的Items有限，如果需要创建新的Items，例如，监控总的连接次数
（Connections），那么添加创建新的Items即可。对于创建新的Items，这里可以使用
Clone（克隆）的小技巧，由于数据填充内容都相似，那么可以用Zabbix监控项中
的Clone（克隆）功能，任意单击MySQL模板中的一个Items，如图11-15所示。
Enabled
Clonc
图11-15
然后单击图11-15中的“Clone”按钮，修改对应的填充参数即可，如图11-16所示。
Templatelist Template:Template App MySOLApplications(1)Items(14）Iriqqers(1)Graphs(2)Scre
NameMySQLConnections
Type
Zabbix agent
mysql.status[Connections]
Select
Numeric(float)
口
Units
口
Update interval(in sec)
60
Flexible intervals
Interval
Period
Action
No flexible intervals defined.
NewflexibleintervalInterval(insec)
50Period1-7,00:00-24:00
Add
Keep history(in days)
Keep trends (in days)
Storevalue
Delta(speed per
nd
Showvalue
Asis
show
Newapplication
Applications
MySOL
图11-16
263
---
## Page 280
Zabbix企业级分布式监控系统
对于更多的监控项参数，读者可以根据自己的需要添加，下面对MySQL的
模板进行一些改进，在MySQL模板中使用宏的设置。
在有些场合，添加监控的人员对机器并没有操作的权限（不能使用SSH登录
服务器），尤其是像数据库这么重要的服务器，一般都是禁止普通用户使用SSH
登录的，当系统管理人员把上面的监控脚本添加到操作系统后，其他人员不一定
就知道脚本中的默认密码，这时让其他人员登录Zabbix修改参数的配置（即用户
名、密码、主机的自定义参数）就非常有意义了。
选择MySQL模板，对其复制（Clone）一份模板，如图11-17和图11-18所示。
Template listTemplate:TemplateApp MySQLApplications(1)Items(15
TempiatenameTemplateApp MysQL
Visible name
Groups In groups
Templates
图11-17
图11-18
注意，Clone只复制名称，不会复制模板中的Key。
修改Templatename，如图11-19所示。
Template
Linked TemplatesMacros
Templatenan
TemplateAppMySQLwithMacros
Visible name
dnoour snos
Templates
图11-19
切换到Macros自定义宏变量，如图11-20所示。
Macro
Value
(SMYSQL_USER)
zabbix
Remove