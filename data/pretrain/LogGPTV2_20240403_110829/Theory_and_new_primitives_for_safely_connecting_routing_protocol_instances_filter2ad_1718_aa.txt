title:Theory and new primitives for safely connecting routing protocol instances
author:Franck Le and
Geoffrey G. Xie and
Hui Zhang
Theory and New Primitives for Safely Connecting Routing
Protocol Instances
Franck Le
Geoffrey G. Xie
Hui Zhang
Carnegie Mellon University
Naval Postgraduate School
Carnegie Mellon University
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
Recent studies have shown that the current primitives for connect-
ing multiple routing protocol instances (OSPF 1, OSPF 2, EIGRP
10, etc.) are pervasively deployed in enterprise networks and the
Internet. Furthermore, these primitives are extremely vulnerable to
routing anomalies (route oscillations, forwarding loops, etc.) and
at the same time too rigid to support some of today’s operational
objectives. In this paper, we propose a new theory to reason about
routing properties across multiple routing instances. The theory di-
rectly applies to both link-state and vector routing protocols. Each
routing protocol still makes independent routing decisions and may
consider a combination of routing metrics, including bandwidth,
delay, cost, and reliability. While the theory permits a range of so-
lutions, we focus on a design that requires no changes to existing
routing protocols. Guided by the theory, we derive a new set of
connecting primitives, which are not only provably safe but also
more expressive than the current version. We have implemented
and validated the new primitives using XORP. The results conﬁrm
that our design can support a large range of desirable operational
goals, including those not achievable today, safely and with little
manual conﬁguration.
Categories and Subject Descriptors:
C.2.6 [Computer-Communication Networks]: Internetworking
General Terms: Design, Theory
Keywords: Connecting primitives, route redistribution, route se-
lection
1.
INTRODUCTION
Recent empirical studies [24, 21, 5] challenge the traditional,
simple “BGP over your favorite IGP” view of the Internet routing
architecture. As illustrated in Figure 1, they reveal that the Inter-
net routing landscape is in reality much more complex. ISPs and
enterprise networks deploy tens to hundreds of routing protocol in-
stances simultaneously [21, 5], and those routing instances are of-
tentimes interconnected in diverse ways [24]. In a recent study [5],
the authors found that 57% of the analyzed networks have more
than three routing instances, which is greater than a single IGP and
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
Copyright 2010 ACM 978-1-4503-0201-2/10/08 ...$10.00.
EGP, and discovered both enterprise and university networks with
more than ten instances. Former studies [21, 24] have also con-
ﬁrmed the prevalance of routing instances and exposed networks
with even hundreds of routing instances. There are several reasons
for these sophisticated routing designs:
the need to route trafﬁc
based on metrics other than hop count, the desire for autonomy
between departments of a same company [21], the requirement to
ﬁlter route announcements [8], scalabity [21] and economical rea-
sons [5].
It has been observed that the connecting primitives, which run
on the border routers (e.g., A and B in Figure 1) and govern the
interactions between the routing protocol instances, play critical
roles in implementing the sophisticated routing designs. Even in
the simplest “BGP over IGP” scenarios, those primtives are ac-
tually required to inject IGP or static routes into BGP. More im-
portantly, operators use them to not simply interconnect routing
protocol instances but also achieve critical design objectives (e.g.,
domain backup, shortest path routing across instances) that are in-
feasible using routing protocols (e.g., BGP) alone [21].
Currently, the primitives responsible for interconnecting routing
instances consist of the so-called route selection and route redistri-
bution procedures [9, 8]. Consider routers A and B in Figure 1.
They are border routers in the sense that they belong to multiple
routing protocol instances at the same time. Router A belongs to
three routing protocol instances (BGP, OSPF 100, and RIP) and
runs a separate routing process for each of them. In contrast, router
B is a member of two different OSPF instances. When a bor-
der router (e.g., A) receives routes, to the same destination pre-
ﬁx, from multiple routing processes (e.g., BGP, OSPF 100, RIP),
the border router cannot directly compare the routes as each rout-
ing instance typically has its own metrics. For example, RIP re-
lies on a hop-count, whereas OSPF routes have a type (intra-area,
inter-area, external type 1, external type 2) and a cost. The border
router uses the route selection procedure to rank routes received
from different routing processes and to determine which one to in-
stall in its forwarding table. As for route redistribution, this proce-
dure is required to exchange routing information between routing
instances. By default, routing processes of different protocol in-
stances do not exchange routing information even though they are
on the same border router. Route redistribution must be explicitly
enabled through router conﬁguration. For example, the OSPF 200
and OSPF 300 instances will not exchange routes unless route re-
distribution between the two instances is conﬁgured on router B.
Current operational networks rely heavily on these two procedures.
A recent study [21] analyzed the usage of route redistribution in
more than 1600 networks, and revealed that 99.9% of them depend
on it.
Despite the prevalence and importance of the connecting primi-
219router A
!
router bgp 65501
 ...
!
router ospf 100
 ...
!
router rip
 ...
!
BGP 65502
OSPF 36
RIP
BGP 65501
A
OSPF 100
BGP 65503
B
C
OSPF 300
router B
!
router ospf 200
 ...
!
router ospf 300
 ...
!
IS−IS
OSPF 200
EIGRP 65551
Figure 1: A typical slice of Internet routing landscape. Though abstracted, it still shows formidable complexity.
tives, it has been shown that the current mechanisms are extremely
prone to misconﬁgurations [20, 22] and such errors are likely the
root causes of many reported forwarding loops, route oscillations,
preﬁx hijacks, and non-deterministic path problems [23].
In re-
sponse, several analytical models [20, 22, 23] have been developed
enabling rigorous analyses of the current route selection and route
redistribution procedures, and the formulation of practical conﬁg-
uration guidelines. However, adding band-aids to current mecha-
nisms presents severe limitations. Conﬁguration guidelines intro-
duce new restrictions on setting parameters and, therefore, reduce
the ﬂexibility of the primitives and their power to implement oper-
ational goals. Operators have reported that the current primitives,
even without any restriction, are already too rigid to support some
desirable routing policies [21]. The existing analytical models are
too tied to the current mechanisms and as such, do not provide in-
sights for new designs.
We believe that the Internet will remain a myriad of routing pro-
tocol instances and that the primitives responsible for connecting
different routing protocol instances will continue to play a cru-
cial role in the Internet routing architecture. One single routing
instance is unlikely to satisfy all operational requirements. The
driving forces behind the current prevalence of routing protocol in-
stances, including the distinction between IGP and EGP function-
ality, the requirement to route trafﬁc based on different metrics, and
the desire for autonomy between sites branches or departments, are
likely to persist. In fact, the number of routing protocol instances
may even grow with the emergence of new technologies (e.g., wire-
less networks, ad-hoc networks, vehicular networks, sensor net-
works, etc.) as each of them presents unique characteristics and
may require distinct routing protocols. In this context, operators
need a safe way to connect routing instances.
This situation brings up a fundamental open question: Can we
design a set of connecting primitives that both guarantee routing
correctness (i.e., always converge to loop-free forwarding paths re-
gardless of how they are conﬁgured) and increase the offered de-
gree of expressiveness allowing operators to fulﬁll their require-
ments? To answer the question, we need a theory to reason about
routing across multiple routing protocol instances.
In this paper, we present such a theory for reasoning about rout-
ing correctness in networks with multiple interconnected routing
instances. From the theory, we then derive a new set of primitives
to connect routing protocol instances. While the theory permits a
wide range of design options, we focus on a design characterized by
no changes to existing routing protocols. We implemented the new
primitives in XORP routing software [3]. The results conﬁrm that
our proposed design allows operators to safely implement a large
range of desirable design objectives, including those not feasible
today. Our contributions are three-fold:
1. We have developed a new formal framework to reason about
routing properties in networks with multiple interconnected rout-
ing protocol instances. By adding the formalism of conversion
functions to the theory of routing algebras, we are able to ab-
stract the functional requirements of connecting routing proto-
col instances. The framework is able to model the current route
selection and route redistribution procedures and also provide
insights for a clean slate design of these mechanisms. The key
result is a set of sufﬁcient conditions for guaranteeing safe rout-
ing, and optimal paths, across multiple routing instances.
2. Guided by the new theory, we have created a new design of con-
necting primitives. In contrast to the current approach, our de-
sign guarantees routing safety regardless of conﬁguration errors
and, moreover, supports a large range of operational goals. The
solution is desirable and feasible for many networks, including
individual ISP networks, and large enterprise networks. To de-
ploy the new primitives likely requires router software upgrade.
However, no modiﬁcation to any of the existing routing proto-
cols is necessary. As such, the scope of router software upgrade
will be limited to a relatively small number of border routers.
3. We have implemented the new primitives into XORP and con-
ducted experiments to validate the ability of these primitives to
support several design goals considered important by the oper-
ational community. The results are encouraging. While some
of the goals are not feasible today, our implementation show the
new primitives are able to support them without requiring elab-
orate conﬁgurations.
The rest of the paper is structured as follows. Section 2 provides
a brief description of the existing route selection and route redistri-
bution procedures. Section 3 presents the newly proposed theory
to reason about routing across multiple routing protocol instances.
Section 4 identiﬁes sufﬁcient conditions to guarantee correct rout-
ing and optimal paths across routing protocol instances. From the
theory, Section 5 derives new primitives. Section 6 presents our im-
plementation. Section 7 illustrates the expressiveness of the design.
Section 8 presents related work, and ﬁnally, Section 9 discusses fu-
ture work.
2. BACKGROUND: CURRENT PRIMITIVES
This section brieﬂy describes the current implementation of the
two primitives, namely route selection and route redistribution, that
govern the interactions between routing protocol instances. It should
be noted that all discussions in the paper are with respect to a single
destination preﬁx, denoted by P , unless noted otherwise.
2201
2
3
4
5
6
7
8
9
10
11
12
13
14
15
interface ethernet 0
ip address 192.1.1.1 255.255.255.0
!
interface ethernet 1
ip address 192.1.2.1 255.255.255.0
!
router rip
network 192.1.1.0
distance 100
!
router ospf 100
network 192.1.2.0 255.255.255.0 area 0.0.0.0
default-metric 100
redistribute rip metric 200 metric-type 1 subnets
!
Figure 2: Excerpt of a router conﬁguration ﬁle illustrating the
current IOS commands for route selection and route redistri-
bution.
Route selection: A router that runs multiple instances of different
routing protocols (EIGRP, BGP, OSPF, etc.) or multiple instances
of a same routing protocol (e.g., OSPF 100, OSPF 200, etc.) creates
a separate routing process for each of them. In the rest of this paper,
we will more formally say that two routing processes belong to the
same routing protocol instance when the two processes are each
on a different router, run the same routing protocol and exchange
routing information through it.
For the destination preﬁx P , each routing process selects one
best route, from both the received updates and the local informa-
tion, using a protocol speciﬁc algorithm: E.g., RIP simply com-
pares the hop count while BGP uses an elaborate path ranking pro-
cedure. Then, if more than one routing process offer[s] a route
to P , the router must perform a route selection procedure to de-
termine which one to install in the Forwarding Information Base
(FIB). This decision is currently based on a conﬁgurable parameter
called Administrative Distance (AD) [9], with the preference given
to the route with the lowest AD value. By default, in Cisco routers,
RIP processes have an AD of 120 whereas OSPF processes have
an AD of 110. As such, unless the AD values are overridden, when
receiving both a RIP route and an OSPF route to the same destina-
tion preﬁx, a router prefers and installs the OSPF route in its FIB.
Route redistribution: Route redistribution allows operators to ex-
change routing information across routing instances. One compli-
cation is that routing protocols use different types of routing met-
rics. For example, RIP uses a single metric (hop count) while
EIGRP relies on a weighted sum of bandwidth, delay, reliability,
and load. The current route redistribution procedure handles this
incompatibility in a crude fashion. It resets the metric of a redis-
tributed route to either a constant default value or a ﬁxed value
manually conﬁgured by the operator. In either case, the new metric
values typically have no relation to the route’s original metric val-
ues.
Conﬁguration commands: Each router vendor has its own con-
ﬁguration language. We focus on the Cisco IOS commands for
illustration purposes. The syntax may differ across router vendors
but the functions remain similar. Currently, conﬁguring route selec-
tion and route redistribution on Cisco routers mainly involves three
IOS commands. Each command allows a number of variants and
options. Figure 2 illustrates an example use of these commands.
The router has two interfaces, and runs two routing processes: RIP
on the ﬁrst interface, and OSPF on the second one.
1. The distance command (line 9) allows operators to override
the default administrative distance of a routing process. In the
depicted example, the administrative distance of RIP is set to
100, which is lower than the default administrative distance value
of OSPF (110). Consequently, when receiving routes to the
same destination from both RIP and OSPF, the router will se-
lect the RIP route.
2. The redistribute command (line 14) inside the OSPF com-
mand block activates route redistribution from RIP into the OSPF
process. When conﬁguring BGP, one may also use the network
command to activate redistribution from any source (e.g., static,
RIP, etc.) into BGP. Route ﬁlters can be applied to a redistribute