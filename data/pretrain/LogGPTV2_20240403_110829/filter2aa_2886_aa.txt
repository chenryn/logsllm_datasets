# Internal Server Error: Exploiting Inter-Process Communication in SAP's HTTP Server

## Author
Martin Doyhenard  
Security Researcher @ Onapsis

## Overview of SAP Business Processes Software
SAP's business processes software supports various critical operations, including:
- Operations
- Financials
- Human Capital Management
- Customer Relationship Management
- Supply Chain Management

SAP serves over 400,000 customers, with 90% being Fortune 500 companies. The software is based on web services and uses the HTTP protocol (both Java and ABAP).

## Internet Communication Manager (ICM)
The ICM is a proprietary HTTP server that handles all communication between the SAP system and its clients, as well as the outside world. It supports multiple protocols, including HTTP, P4, IIOP, SMTP, and others. The HTTP protocol is enabled by default in all SAP installations, including Java, ABAP, WebDispatcher, and S/4HANA.

### ICM HTTP Workflow
The ICM worker thread processes HTTP requests and responses using memory pipes (MPI). The MPI framework facilitates data exchange between the ICM and Java/ABAP processes. Requests and responses are placed in shared memory and accessed via MPI pointers. MPI buffers have a fixed size (default 2^16) and are managed by worker threads.

#### ICM Worker Thread (WT) and MPI Buffers
- **MPI Buffers**: Fixed size (2^16 by default).
- **Worker Thread (WT)**: Reserves and frees MPI buffers.
- **Shared Memory**: Used for storing requests and responses.

### ICM HTTP Handlers
The method and URL determine which internal handlers will be called. When a handler generates a response, all other handlers are removed. The following are some of the internal handlers:
- Cache Handler
- Admin Handler
- Authentication Handler
- File Access Handler
- Modification Handler
- Redirect Handler
- JAVA Handler
- ABAP Handler

### Multi-Buffer Messages
If an HTTP message is larger than a single MPI buffer, the ICM splits the message. Internal handlers only need headers, which are typically smaller than 65K.

### MPI Desynchronization: CVE-2022-22536
This vulnerability occurs when the request body is split across multiple MPI buffers, leading to desynchronization. This can be exploited to manipulate the processing of HTTP requests.

### ICM HTTP Smuggling
HTTP smuggling can occur if a request is split by an internal handler or if the size of the body plus headers exceeds 65455 bytes. Proxies will treat the payload as a single request, but the ICM may process it differently.

#### Example of HTTP Smuggling
```http
GET /sap/admin/public/default.html HTTP/1.1
Host: SapSystem.com
Content-Length: 65417
(A*65370)GET /smuggled HTTP/1.1
Host: SapSystem.com
GET /some/cached/url HTTP/1.1
Host: SapSystem.com
Padding: 
Content-Length: 47
```

#### Exploitation through /nwa Application
The `/nwa` application has two features that can be exploited:
- **Open Redirect**: Uses the Host header to build the redirect location.
- **Parameter Reflection**: Reflects the query string from the body (POST) or query string (GET).

By hijacking victimâ€™s requests and session cookies, an attacker can perform actions such as:
- **Redirecting to a malicious site**.
- **Capturing session cookies**.

#### Example Attack Scenario
1. **Attacker** sends a crafted POST request to `/nwa` with a large body.
2. **Proxy** treats the entire payload as a single request.
3. **ICM** splits the request, allowing the attacker to inject additional requests.
4. **Victim** is redirected to a malicious site, and their session cookies are captured.

### Smuggling Botnet
Desynchronization does not rely on HTTP headers and can be exploited through HTML/JS. DNS rebinding can be used to send valid custom HTTP headers, as seen in HAProxy CVE-2021-40346.

### Demo
A demonstration of HTTP request smuggling in action can be provided to illustrate the attack vector and potential impact.

---

This optimized version provides a clear and structured overview of the topic, making it more professional and easier to understand.