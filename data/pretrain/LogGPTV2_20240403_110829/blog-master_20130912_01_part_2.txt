```  
[root@db-172-16-3-39 ~]# stap --vp 5 test.stp   
Parsed kernel "/lib/modules/2.6.18-348.12.1.el5/build/.config", containing 1977 tuples  
Parsed kernel /lib/modules/2.6.18-348.12.1.el5/build/Module.symvers, which contained 3546 vmlinux exports  
Searched: " /usr/share/systemtap/tapset/x86_64/*.stp ", found: 4, processed: 4  
Searched: " /usr/share/systemtap/tapset/*.stp ", found: 81, processed: 81  
Pass 1: parsed user script and 85 library script(s) using 147760virt/23716res/3008shr/22356data kb, in 160usr/10sys/172real ms.  
semantic error: unable to find member 'p' for struct pt_regs (alternatives: r15 r14 r13 r12 rbp rbx r11 r10 r9 r8 rax rcx rdx rsi rdi orig_rax rip cs eflags rsp ss): operator '->' at test.stp:2:25  
        source:   printf("%d, \n", $regs->p[1])  
                                        ^  
Pass 2: analysis failed.  Try again with another '--vp 01' option.  
```  
5\. $return, 只有当被探测到函数有返回值时才有用, 上面的例子已经用到了.  
6\. $var[N], N是数字. 指函数中的数组变量.  
例如这里用到的是/usr/src/debug/kernel-2.6.18/linux-2.6.18-348.12.1.el5.x86_64/net/ipv4/icmp.c 中的一个结构中包含的数组.  
```  
struct icmp_bxm {  
        struct sk_buff *skb;  
        int offset;  
        int data_len;  
        struct {  
                struct icmphdr icmph;  
                __u32          times[3];  
        } data;  
        int head_len;  
        struct ip_options replyopts;  
        unsigned char  optbuf[40];  
};  
```  
函数 :   
```  
static void icmp_push_reply(struct icmp_bxm *icmp_param,  
                            struct ipcm_cookie *ipc, struct rtable *rt)  
{  
        struct sk_buff *skb;  
        if (ip_append_data(icmp_socket->sk, icmp_glue_bits, icmp_param,  
                           icmp_param->data_len+icmp_param->head_len,  
                           icmp_param->head_len,  
                           ipc, rt, MSG_DONTWAIT) sk);  
        else if ((skb = skb_peek(&icmp_socket->sk->sk_write_queue)) != NULL) {  
                struct icmphdr *icmph = skb->h.icmph;  
                unsigned int csum = 0;  
                struct sk_buff *skb1;  
                skb_queue_walk(&icmp_socket->sk->sk_write_queue, skb1) {  
                        csum = csum_add(csum, skb1->csum);  
                }  
                csum = csum_partial_copy_nocheck((void *)&icmp_param->data,  
                                                 (char *)icmph,  
                                                 icmp_param->head_len, csum);  
                icmph->checksum = csum_fold(csum);  
                skb->ip_summed = CHECKSUM_NONE;  
                ip_push_pending_frames(icmp_socket->sk);  
        }  
}  
```  
这个探针如下 :   
```  
[root@db-172-16-3-39 ~]# stap -l 'kernel.function("**")'|grep icmp_push_reply  
kernel.function("icmp_push_reply@net/ipv4/icmp.c:347")  
```  
测试 :   
```  
[root@db-172-16-3-39 ~]# cat test.stp   
probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
  for (i=0; idata->times[i])  
  }  
  printf("end\n")  
  exit()  
}  
[root@db-172-16-3-39 ~]# stap --vp 5 test.stp 10  
Parsed kernel "/lib/modules/2.6.18-348.12.1.el5/build/.config", containing 1977 tuples  
Parsed kernel /lib/modules/2.6.18-348.12.1.el5/build/Module.symvers, which contained 3546 vmlinux exports  
Searched: " /usr/share/systemtap/tapset/x86_64/*.stp ", found: 4, processed: 4  
Searched: " /usr/share/systemtap/tapset/*.stp ", found: 81, processed: 81  
Pass 1: parsed user script and 85 library script(s) using 146796virt/23700res/3008shr/21392data kb, in 160usr/10sys/173real ms.  
WARNING: For probing a particular line, use a .statement() probe, not .function(): keyword at test.stp:1:1  
 source: probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
         ^  
2147839040, 4294967295, 2149938976, 8, 0, 0, 2, 2, 0, 0, end  
```  
下半部分是操作符 :   
1\. $$vars  
```  
[root@db-172-16-3-39 ~]# cat test.stp  
probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
  printf("$$vars: %s\n", $$vars)  
  printf("%x\n", $icmp_param)  
  exit()  
}  
[root@db-172-16-3-39 ~]# stap --vp 5 test.stp  
Parsed kernel "/lib/modules/2.6.18-348.12.1.el5/build/.config", containing 1977 tuples  
Parsed kernel /lib/modules/2.6.18-348.12.1.el5/build/Module.symvers, which contained 3546 vmlinux exports  
Searched: " /usr/share/systemtap/tapset/x86_64/*.stp ", found: 4, processed: 4  
Searched: " /usr/share/systemtap/tapset/*.stp ", found: 81, processed: 81  
Pass 1: parsed user script and 85 library script(s) using 147760virt/23716res/3008shr/22356data kb, in 160usr/10sys/172real ms.  
WARNING: For probing a particular line, use a .statement() probe, not .function(): keyword at test.stp:1:1  
 source: probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
         ^  
$$vars: icmp_param=0xffff810133953dc8 ipc=0xffff810133953d68 rt=0xffff8101af062b40 skb=?  
ffff810133953dc8  
```  
2\. $$locals, $$parms, $$return 是从$$vars中分子出来的本地变量, 函数参数, 函数返回值.  
3\. 取变量地址.  
```  
& $EXPR  
```  
4\. 判断变量是否存在.  
```  
@defined($EXPR)  
@defined($foo->bar) ? $foo->bar : 0  
```  
5\.   输出结构包括第一层member的表达式.  
```  
      $EXPR$ expands to a string with all of $EXPR’s members, equivalent to  
              sprintf("{.a=%i, .b=%u, .c={...}, .d=[...]}",  
                       $EXPR->a, $EXPR->b)  
```  
例如 :   
```  
[root@db-172-16-3-39 ~]# cat test.stp  
probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
  printf("%s\n", $icmp_param$)  
  exit()  
}  
[root@db-172-16-3-39 ~]# stap --vp 5 test.stp  
Parsed kernel "/lib/modules/2.6.18-348.12.1.el5/build/.config", containing 1977 tuples  
Parsed kernel /lib/modules/2.6.18-348.12.1.el5/build/Module.symvers, which contained 3546 vmlinux exports  
Searched: " /usr/share/systemtap/tapset/x86_64/*.stp ", found: 4, processed: 4  
Searched: " /usr/share/systemtap/tapset/*.stp ", found: 81, processed: 81  
Pass 1: parsed user script and 85 library script(s) using 146800virt/23704res/3008shr/21396data kb, in 170usr/10sys/172real ms.  
WARNING: For probing a particular line, use a .statement() probe, not .function(): keyword at test.stp:1:1  
 source: probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
         ^  
{.skb=0xffff8102207e1080, .offset=0, .data_len=56, .data={...}, .head_len=8, .replyopts={...}, .optbuf=[...]}  
```  
6\.  输出结构包括所有层member的值的表达式.  
```  
       $EXPR$$  
              expands to a string with all of $var’s members and submembers, equivalent to  
              sprintf("{.a=%i, .b=%u, .c={.x=%p, .y=%c}, .d=[%i, ...]}",  
                      $EXPR->a, $EXPR->b, $EXPR->c->x, $EXPR->c->y, $EXPR->d[0])  
```  
例如 :   
```  
[root@db-172-16-3-39 ~]# cat test.stp  
probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
  printf("%s\n", $icmp_param$$)  
  exit()  
}  
[root@db-172-16-3-39 ~]# stap --vp 5 test.stp  
Parsed kernel "/lib/modules/2.6.18-348.12.1.el5/build/.config", containing 1977 tuples  
Parsed kernel /lib/modules/2.6.18-348.12.1.el5/build/Module.symvers, which contained 3546 vmlinux exports  
Searched: " /usr/share/systemtap/tapset/x86_64/*.stp ", found: 4, processed: 4  
Searched: " /usr/share/systemtap/tapset/*.stp ", found: 81, processed: 81  
Pass 1: parsed user script and 85 library script(s) using 146800virt/23700res/3008shr/21396data kb, in 160usr/10sys/173real ms.  
WARNING: For probing a particular line, use a .statement() probe, not .function(): keyword at test.stp:1:1  
 source: probe kernel.function("icmp_push_reply@net/ipv4/icmp.c:347") {  
         ^  
{.skb=0xffff81022fc1a2c0, .offset=0, .data_len=56, .data={.icmph={.type='\000', .code='\000', .checksum=0, .un={.echo={.id=9086, .sequence=31749}, .gateway=2080711550, .frag={.__unused=9086, .mtu=31749}}}, .times=[2147839040, ...]}, .head_len=8, .replyopts={.faddr=0, .optlen='\000', .srr='\000', .rr='\000', .ts='\000', .is_setbyuser=0, .is_data=1, .is_strictroute=0, .srr_is_hit=0, .is_changed=0, .rr_needaddr=0, .ts_needtime=0, .ts_needaddr=0, .router_alert='\000', .cipso='\000', .rhel_alloc_flag=0, .__data  
```  
## 参考  
1\. https://sourceware.org/systemtap/langref/Components_SystemTap_script.html  
2. man stap  
```  
   TYPECASTING  
       Once  a pointer has been saved into a script integer variable, the translator loses the type information neces-  
       sary to access members from that pointer.  Using the @cast() operator tells the translator how to read a point-  
       er.  
              @cast(p, "type_name"[, "module"])->member  
       This will interpret p as a pointer to a struct/union named type_name and dereference the member value.  Further  