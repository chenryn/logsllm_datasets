2.  创建配置集：
    ``` screen
    # boom profile create --from-host --uname-pattern el7
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果要在 Red Hat Enterprise Linux 8 中创建 `boom`{.literal}
    配置集，使用 `el8`{.literal} 作为 uname-pattern。
    :::
3.  使用原始引导镜像的备份副本创建原始系统的快照引导条目：
    ::: orderedlist
    1.  对于 `boom-1.2`{.literal} 或更高版本：
        ``` screen
        # boom create --backup --title "Root LV snapshot before changes" --rootlv rhel/root_snapshot_before_changes
        ```
        在这里：
        ::: itemizedlist
        -   `--title`{.literal} [*更改之前 root LV
            快照是引导条目的名称*]{.emphasis}，在系统启动期间显示在列表中
        -   `--rootlv`{.literal} 是与新引导条目对应的 root 逻辑卷
        :::
    2.  对于 `boom-1.1`{.literal} 或更早的版本：
        ``` screen
        # cp /boot/vmlinuz-$(uname r) /boot/vmlinuz$(uname -r).bak
        # cp /boot/initramfs-$(uname r).img /boot/initramfs$(uname -r).img.bak
        # boom create -title "Root LV snapshot before changes" --rootlv rhel/root_snapshot_before_changes --linux /boot/vmlinuz$(uname r).bak --initrd /boot/initramfs$(uname -r).img.bak
        ```
        如果您首次执行 `boom create`{.literal} 命令，则会显示以下消息：
        ``` screen
        WARNING - Boom configuration not found in grub.cfg
        WARNING - Run 'grub2-mkconfig > /boot/grub2/grub.cfg' to enable
        ```
        在 GRUB 2 中启用 Boom：
        ``` screen
        # grub2-mkconfig > /boot/grub2/grub.cfg
        ```
    :::
4.  使用 `Leapp`{.literal} 实用程序升级到 Red Hat Enterprise Linux 8：
    ``` screen
    # leapp preupgrade
    ```
    如果 `leapp preupgrade`{.literal} 命令报告有任何阻塞，则检查和地址。
5.  解决预升级报告中指定的块后，使用 `--reboot`{.literal} 选项重新运行
    upgrade 命令：
    ``` screen
    # leapp upgrade --reboot
    ```
    这个命令会重启到 `leapp`{.literal}
    工具创建的升级引导条目，并开始执行到 Red Hat Enterprise Linux 8
    的原位升级。reboot 参数会在升级过程后启动自动系统重启。
    在重启过程中，GRUB 2 屏幕会显示：
    ::: informalfigure
    ::: mediaobject
    ![GRUB2 显示](images/GRUB2_display.png)
    :::
    :::
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您在 Red Hat Enterprise Linux 8 系统中，GRUB2 引导屏幕中的
    [**Snapshots**]{.strong} 子菜单不可用。
    :::
:::
::: itemizedlist
**验证步骤**
-   选择 [**RHEL Upgrade Initramfs**]{.strong} 条目并按
    ENTER。继续升级并安装新的 Red Hat Enterprise Linux 8 RPM
    软件包。升级完成后，系统会自动重启，GRUB 2
    屏幕会显示升级的和旧版本的可用系统。升级的系统版本是默认选择。
    ::: informalfigure
    ::: mediaobject
    ![在新版本和旧版本间切换](images/switching_between_new_and_old_versions.png)
    :::
    :::
    [**[*另外，存在更改引导条目前创建的 Root LV
    快照*]{.emphasis}**]{.strong}，它会在升级前即时访问系统状态。
:::
::: itemizedlist
**其它资源**
-   `boom`{.literal} man page。
-   [什么是 BOOM
    以及如何安装它？](https://access.redhat.com/solutions/3750001){.link}知识库文章。
-   [如何创建 BOOM
    引导条目知识库文章](https://access.redhat.com/solutions/3772101){.link}。
-   [Leapp 工具所需的数据用于从 RHEL 7 原位升级到 RHEL
    8](https://access.redhat.com/articles/3664871){.link} 知识库。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_switching-between-new-and-old-red-hat-enterprise-linux-versions_assembly_managing-system-upgrades-with-snapshots}在新的和旧的 Red Hat Enterprise Linux 版本间切换 {.title}
:::
[**Boom**]{.strong}
引导管理器减少了与升级系统相关的风险，并帮助减少硬件停机时间。例如：您可以将
Red Hat Enterprise Linux 7 系统升级到 Red Hat Enterprise Linux
8，同时保留原始 Red Hat Enterprise Linux 7
环境。通过在环境间进行切换，您可以：
::: itemizedlist
-   以并排方式快速比较这两个环境，并以最少的开销在两者之间切换。
-   恢复旧的文件系统的内容。
-   在升级的主机正在运行时继续访问旧的系统。
-   随时停止并恢复更新过程，即使更新本身正在运行。
:::
这个步骤描述了如何在升级完成后在新的和旧的 Red Hat Enterprise Linux
版本间切换。
::: itemizedlist
**先决条件**
-   升级的 Red Hat Enterprise Linux 版本。更多信息请参阅 ["使用 Boom
    升级到另一个版本"一节](#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_upgrading-to-another-version-using-boom_assembly_managing-system-upgrades-with-snapshots "使用 Boom 升级到另一个版本"){.xref}。
:::
::: orderedlist
**流程**
1.  重启系统：
    ``` screen
    # reboot
    ```
2.  从 GRUB 2 引导装载程序屏幕选择所需引导条目。
    ::: informalfigure
    ::: mediaobject
    ![在新版本和旧版本间切换](images/switching_between_new_and_old_versions.png)
    :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证所选引导卷是否已显示：
    ``` screen
    # cat /proc/cmdline
    root=/dev/rhel/root_snapshot_before_changes ro rd.lvm.lv=rhel/root_snapshot_before_changes rd.lvm.lv=vg_root/swap rhgb quiet
    ```
:::
::: itemizedlist
**其它资源**
-   `boom`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_deleting-the-snapshot_assembly_managing-system-upgrades-with-snapshots}删除快照 {.title}
:::
快照引导条目引导原始系统的快照，并可用于在升级尝试成功或失败后检查并测试以前的系统状态。这个步骤描述了删除快照的步骤。
::: itemizedlist
**先决条件**
-   升级至一个新的 RHEL 版本。更多信息请参阅 ["使用 Boom
    升级到另一个版本"一节](#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_upgrading-to-another-version-using-boom_assembly_managing-system-upgrades-with-snapshots "使用 Boom 升级到另一个版本"){.xref}。
:::
::: orderedlist
**流程**
1.  从 GRUB 2 条目引导 Red Hat Enterprise Linux
    8。以下输出确认选择了新的快照：
    ``` screen
    # boom list
    BootID  Version                    Name                            RootDevice
    6d2ec72 3.10.0-957.21.3.el7.x86_64 Red Hat Enterprise Linux Server /dev/rhel/root_snapshot_before_changes
    ```
2.  使用 `BootID`{.literal} 值删除快照条目：
    ``` screen
    # boom delete --boot-id 6d2ec72
    ```
    这会从 GRUB 2 菜单中删除该条目。
3.  删除 LV 快照：
    ``` screen
    # lvremove rhel/root_snapshot_before_changes
    Do you really want to remove active logical volume rhel/root_snapshot_before_changes? [y/n]: y
          Logical volume "root_snapshot_before_changes" successfully removed
    ```
    ::: itemizedlist
    **其它资源**
    -   `boom`{.literal} man page。
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_creating-rollback-boot-entry_assembly_managing-system-upgrades-with-snapshots}创建回滚引导条目 {.title}
:::
回滚引导条目引导原始系统环境，并将任何升级回滚到以前的系统状态。检查后将升级的和回滚引导条目恢复到原始环境，现在可以通过快照引导条目获得。
可以从升级的系统或快照环境中准备回滚引导条目。
::: itemizedlist
**先决条件**
-   升级至一个新的 RHEL 版本。更多信息请参阅 ["使用 Boom
    升级到另一个版本"一节](#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_upgrading-to-another-version-using-boom_assembly_managing-system-upgrades-with-snapshots "使用 Boom 升级到另一个版本"){.xref}。
:::
::: orderedlist
**流程**
1.  合并快照：
    ``` screen
    # lvconvert --merge rhel/root_snapshot_before_changes
    ```
2.  为合并的快照创建一个回滚引导条目：
    ::: orderedlist
    1.  对于 `boom-1.2`{.literal} 或更高版本：
        ``` screen
        boom create --backup --title "RHEL Rollback" --rootlv rhel/root
        ```
    2.  对于 `boom-1.1`{.literal} 或更早的版本：
        ``` screen
        boom create --title "RHEL Rollback" --rootlv rhel/root --linux /boot/vmlinuz$(uname r).bak --initrd /boot/initramfs$(uname -r).img.bak
        ```
    :::
3.  可选：引导回滚环境并恢复系统状态：
    ``` screen
    # reboot
    ```
    [**系统重启后，使用箭头键选择[*RHEL
    Rollback*]{.emphasis}**]{.strong} 引导条目，然后按 [**Enter
    键引导此条目**]{.strong}。
    激活 `root`{.literal} 逻辑卷后，系统会自动启动快照合并操作。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    启动合并操作后，快照卷将不再可用。在成功引导 [*RHEL
    Rollback*]{.emphasis} 引导条目后, [*修改引导条目前 Root LV
    快照*]{.emphasis}
    无法正常工作,因为它现在已合并到原始逻辑卷中。合并快照逻辑卷，销毁快照并恢复原始卷之前的状态。
    :::
4.  可选：完成合并操作后，删除未使用的条目并恢复原始引导条目：
    ::: orderedlist
    1.  从 `/boot`{.literal} 文件系统中删除未使用的 Red Hat Enterprise
        Linux 8 引导条目并刷新 `Grub2`{.literal} 配置：
        ``` screen
        # rm -f /boot/el8
        # grub2-mkconfig -o /boot/grub2/grub.cfg
        ```
    2.  恢复原始 Red Hat Enterprise Linux 7 引导条目：
        ``` screen
        # new-kernel-pkg --update $(uname -r)
        ```
    :::
5.  成功回滚到系统后，删除 `boom`{.literal} 引导条目：
    ``` screen
    # boom list
    # boom delete boot-id
    ```
:::
::: itemizedlist
**其它资源**
-   `boom`{.literal} man page。
:::
:::
:::
[]{#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html}
::: chapter
::: titlepage
# []{#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#overview-of-nvme-over-fabric-devicesmanaging-storage-devices}第 13 章 NVMe over fabric 设备概述 {.title}
:::
Non-volatile Memory
Express(NVMe)是一个接口，它允许主机软件实用程序与固态驱动器通信。
使用以下类型的光纤传输通过光纤设备配置 NVMe：
::: variablelist
[NVMe over Remote Direct Memory Access(NVMe/RDMA)]{.term}
:   有关如何配置 NVMe/RDMA 的详情请参考 ["使用 RDMA 的 NVMe over
    fabrics"一节](#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#nvme-over-fabrics-using-rdma_overview-of-nvme-over-fabric-devices "使用 RDMA 的 NVMe over fabrics"){.xref}。
[NVMe over Fibre Channel(FC-NVMe)]{.term}
:   有关如何配置 FC-NVMe 的详情请参考 ["使用 FC 的光纤的 NVMe over
    fabrics"一节](#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#nvme-over-fabrics-using-fc_overview-of-nvme-over-fabric-devices "使用 FC 的光纤的 NVMe over fabrics"){.xref}。
:::
使用光纤通道(FC)和远程直接内存访问(RDMA)时，固态驱动器不必是您的系统的本地驱动器；可以通过
FC 或 RDMA 控制器远程配置。
::: section
::: titlepage
# []{#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#nvme-over-fabrics-using-rdma_overview-of-nvme-over-fabric-devices}使用 RDMA 的 NVMe over fabrics {.title}
:::
在 NVMe over RDMA(NVMe/RDMA)设置中，您要配置 NVMe 目标和 NVMe 启动器。
作为系统管理员，在以下部分中完成任务以部署 NVMe/RDMA 设置：
::: itemizedlist
-   ["使用 configfs 设置 NVMe/RDMA
    目标"一节](#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#setting-up-nvme-rdma-target-using-configfs_nvme-over-fabrics-using-rdma "使用 configfs 设置 NVMe/RDMA 目标"){.xref}
-   ["使用 nvmetcli 设置 NVMe/RDMA
    目标"一节](#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#setting-up-nvme-rdma-target-using-nvmetcli_nvme-over-fabrics-using-rdma "使用 nvmetcli 设置 NVMe/RDMA 目标"){.xref}
-   ["配置 NVMe/RDMA
    客户端"一节](#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#configuring-nvme-rdma-client_nvme-over-fabrics-using-rdma "配置 NVMe/RDMA 客户端"){.xref}
:::
::: section
::: titlepage
## []{#overview-of-nvme-over-fabric-devicesmanaging-storage-devices.html#setting-up-nvme-rdma-target-using-configfs_nvme-over-fabrics-using-rdma}使用 configfs 设置 NVMe/RDMA 目标 {.title}