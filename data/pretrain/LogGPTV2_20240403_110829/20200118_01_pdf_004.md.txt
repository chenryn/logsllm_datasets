# MySQL与PostgreSQL对比学习指南
## 面向开发者 - 阿里云 & digoal

### 目录
- 数据类型
- 函数和操作符
- 分区表
- SQL语法
- 约束
- 索引
- DBA常见操作

---

### 数据类型

#### 数值类型
- **MySQL**:
  - 整型: `tinyint`, `smallint`, `mediumint`, `int`, `bigint` (支持 `signed` 和 `unsigned`)
  - 浮点数: `float(4字节, 精度0~23)`, `double(8字节, 精度24~53)`
  - 定点数: `decimal`, `numeric(m,n)` (最大65位)
  - 位字段: `bit(1~64)`

- **PostgreSQL**:
  - 整型: `int2`, `int4`, `int8` (支持自定义域如 `int1`, `uint1`, `uint2`, `int3`, `uint3`, `uint4`, `uint8`)
  - 浮点数: `real`, `float`, `float4`, `double precision`, `float8`
  - 定点数: `decimal`, `numeric(m,n)` (最大精度为131072位，小数点后最多16383位)
  - 位字段: `bit(1~83886080)`

#### 序列
- **MySQL**: `auto_increment`
- **PostgreSQL**: `serial2`, `serial4`, `serial8` (支持修改起始值、增量、最大值、缓存大小及循环使用)

#### 时间类型
- **MySQL**:
  - 日期: `date`
  - 时间: `time`
  - 日期时间: `datetime`, `timestamp`
  - 年份: `year` (范围1901~2155)

- **PostgreSQL**:
  - 日期: `date`
  - 时间: `time`, `timetz`
  - 日期时间: `timestamp`, `timestamptz`
  - 年份: 通过 `int2` 域实现，并检查范围1901~2155

#### 字符串类型
- **MySQL**:
  - 固定长度: `char(n)` (最大255字符)
  - 可变长度: `varchar(n)` (最大n字符, 小于64K字节)
  - 二进制: `binary(n)`, `varbinary(n)` (最大255字符或n字符, 小于64K字节)
  - 大对象: `blob`, `text` (支持geohash编码, btree索引)

- **PostgreSQL**:
  - 固定长度: `char(n)` (最大10485760字符)
  - 可变长度: `varchar(n)` (最大1G字节)
  - 二进制: `bytea` (最大1GB)
  - 支持更丰富的GIS处理功能（平面、立体、栅格等）

### 常见DBA操作
- **查看会话**: 
  - MySQL: `show processlist;`
  - PostgreSQL: `select pid, query, state, wait_event from pg_stat_activity;`
- **终止会话**:
  - MySQL: `kill pid;`
  - PostgreSQL: `select pg_terminate_backend(pid);` 或 `select pg_cancel_backend(pid);`
- **显示数据库/表/列**:
  - MySQL: `show databases; show tables; show columns from table;`
  - PostgreSQL: `\l` 查看数据库, `\dt n.*` 查看表, `\d table` 查看列
- **查询计划分析**:
  - MySQL: `explain query;`
  - PostgreSQL: `explain (analyze, verbose, timing, costs, buffers) query;`

### 参考资料
- [MySQL官方文档](https://dev.mysql.com/doc/refman/8.0/en/)
- [PostgreSQL官方文档](https://www.postgresql.org/docs/current/index.html)
- [PostGIS手册](http://postgis.net/docs/manual-3.0/)

### 技术社群
- 加入我们的PG技术交流钉钉群（超过3500人），获取更多帮助和支持。

希望这份优化后的文本能够帮助您更好地理解和比较MySQL与PostgreSQL。