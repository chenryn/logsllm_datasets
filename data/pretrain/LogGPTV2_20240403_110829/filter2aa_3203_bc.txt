destination without specifying the zone ID. Therefore, entries in the Hosts file are useful only for global 
IPv6 addresses. For more information about IPv6 addresses and the use of the zone ID, see Chapter 3, 
“IP Addressing.” 
Chapter 7 – Host Name Resolution 
TCP/IP Fundamentals for Microsoft Windows  
Page: 210 
The DNS Client Resolver Cache 
The DNS client resolver cache is a RAM-based table that contains both the entries in the Hosts file and 
the host names that Windows has tried to resolve through DNS. The DNS client resolver cache stores 
entries for both successful and unsuccessful DNS name resolutions. A name that was queried but was 
not successfully resolved is known as a negative cache entry.   
The following list describes the attributes of the DNS client resolver cache: 
It is built dynamically from the Hosts file and from DNS queries.   
Entries obtained from DNS queries are kept only for a period of time known as the Time to Live (TTL), 
which is set by the DNS server that has the name-to-IP address mapping stored in a local database. 
Entries obtained from the Hosts file do not have a TTL and are kept until the entry is removed from the 
Hosts file. 
You can use the ipconfig /displaydns command to view the contents of the DNS client resolver cache. 
You can use the ipconfig /flushdns command to flush and refresh the DNS client resolver cache with 
just the entries in the Hosts file. 
The following is an example display of the ipconfig /displaydns command: 
C:\>ipconfig /displaydns 
Windows IP Configuration 
   localhost. 
   ------------------------------------------------------ 
     Record Name . . . . . : localhost 
     Record Type . . . . . : 1 
     Time To Live  . . . . : 31165698 
     Data Length . . . . . : 4 
     Section . . . . . . . : Answer 
     A (Host) Record . . . : 127.0.0.1 
   dc7.corp.example.com. 
   ------------------------------------------------------ 
     Record Name . . . . . : dc7.corp.example.com 
     Record Type . . . . . : 1 
     Time To Live  . . . . : 852 
     Data Length . . . . . : 4 
     Section . . . . . . . : Answer 
     A (Host) Record . . . : 157.60.23.170 
Chapter 7 – Host Name Resolution 
TCP/IP Fundamentals for Microsoft Windows  
Page: 211 
   1.0.0.127.in-addr.arpa. 
   ------------------------------------------------------ 
     Record Name . . . . . : 1.0.0.127.in-addr.arpa 
     Record Type . . . . . : 12 
     Time To Live  . . . . : 31165698 
     Data Length . . . . . : 4 
     Section . . . . . . . : Answer 
     PTR Record  . . . . . : localhost 
   mailsrv15.corp.example.com. 
   ------------------------------------------------------ 
     Record Name . . . . . : mailsrv15.corp.example.com 
     Record Type . . . . . : 1 
     Time To Live  . . . . : 2344 
     Data Length . . . . . : 4 
     Section . . . . . . . : Answer 
     A (Host) Record . . . : 157.54.16.83 
Chapter 7 – Host Name Resolution 
TCP/IP Fundamentals for Microsoft Windows  
Page: 212 
Chapter Summary 
The chapter includes the following pieces of key information: 
Window Sockets applications use host names or IP addresses when specifying a destination. Host 
names must be resolved to an IP address before communication with the destination can begin. 
The standard methods of host name resolution include checking the local host name, checking the local 
Hosts file, and querying DNS servers. Windows-based hosts also check the DNS client resolver cache, 
which contains the entries in the Hosts file. 
LLMNR uses multicast query and unicast reply messages to resolve single-label names on a subnet. 
Windows-based hosts on which NetBIOS over TCP/IP is enabled also use NetBIOS methods to attempt 
to resolve a host name to an IPv4 address. 
The Hosts file on a Windows-based computer is stored in the systemroot\System32\Drivers\Etc folder 
and can include entries that map IPv4 or IPv6 addresses to host names. 
The Hosts file is dynamically loaded into the RAM-based DNS client resolver cache, which also 
contains the results of recent DNS name queries.  
Chapter 7 – Host Name Resolution 
TCP/IP Fundamentals for Microsoft Windows  
Page: 213 
Chapter Glossary 
DNS – See Domain Name System (DNS). 
DNS client resolver cache – A RAM-based table that contains both the entries in the Hosts file and the 
results of recent DNS name queries. 
DNS server – A server that maintains a database of mappings of DNS domain names to various types 
of data, such as IP addresses. 
Domain Name System (DNS) – A hierarchical, distributed database that contains mappings of DNS 
domain names to various types of data, such as IP addresses. DNS enables the specification of 
computers and services by user-friendly names, and it also enables the discovery of other information 
stored in the database. 
Host name – The name of a computer or device on a network. Users specify computers on the network 
by their host names. To find another computer, its host name must either appear in the Hosts file or be 
known by a DNS server. For most Windows-based computers, the host name and the computer name 
are the same.  
Host name resolution – The process of resolving a host name to a destination IP address. 
Hosts file – A local text file in the same format as the 4.3 BSD UNIX /etc/hosts file. This file maps host 
names to IP addresses, and it is stored in the systemroot\System32\Drivers\Etc folder. 
Link-local Multicast Name Resolution (LLMNR) – A simple, multicast-based, request-reply protocol that 
can resolve single-label host names to IPv4 or IPv6 addresses. LLMNR can be used in the absence of 
DNS servers and NetBIOS over TCP/IP. 
LLMNR – See Link-local Multicast Name Resolution (LLMNR). 
Lmhosts file – A local text file that maps NetBIOS names to IP addresses for hosts that are located on 
remote subnets. For Windows-based computers, this file is stored in the 
systemroot\System32\Drivers\Etc folder. 
negative cache entries – Host names added into the DNS client resolver cache that were queried but 
that could not be resolved. 
NBNS – See NetBIOS name server (NBNS). 
NetBIOS name - A 16-byte name of a process using NetBIOS. 
NetBIOS name cache – A dynamically maintained table that resides on a NetBIOS-enabled host and 
that stores recently resolved NetBIOS names and their associated IPv4 addresses. 
NetBIOS name resolution – The process of resolving a NetBIOS name to an IPv4 address. 
NetBIOS name server (NBNS) – A server that stores NetBIOS name to IPv4 address mappings and 
resolves NetBIOS names for NetBIOS-enabled hosts. WINS is the Microsoft implementation of a 
NetBIOS name server. 
Windows Internet Name Service (WINS) – The Microsoft implementation of a NetBIOS name server. 
WINS – See Windows Internet Name Service (WINS). 
Chapter 7 – Host Name Resolution 
TCP/IP Fundamentals for Microsoft Windows  
Page: 214 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 215 
Chapter 8 – Domain Name System Overview 
Abstract 
This chapter describes the details of the Domain Name System (DNS) and its use for private intranets and the Internet. 
DNS is required to provide name resolution for domain names such as www.example.com for all types of network 
applications from Internet browsers to Active Directory. A network administrator's understanding of DNS names, 
domains, zones, name server roles, and replication is vital to the configuration and maintenance of a properly 
functioning private intranet and the Internet. 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 216 
Chapter Objectives 
After completing this chapter you will be able to: 
Define the components of DNS. 
Describe the structure and architecture of DNS as it is used on the Internet. 
Define the difference between domains and zones. 
Define recursive and iterative queries and how DNS forward and reverse lookups work. 
Define the various roles of DNS servers. 
Describe the common types of DNS resource records. 
Describe the different types of zone transfers. 
Define DNS dynamic update. 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 217 
The Domain Name System 
The initial solution for name resolution on the Internet was a file named Hosts.txt that was used on the 
now obsolete Advanced Research Projects Agency network (ARPANET), the predecessor of the 
modern day Internet. When the number of hosts on the ARPANET was small, the Hosts.txt file was 
easy to manage because it consisted of unstructured names and their corresponding IPv4 addresses. 
Computers on the ARPANET periodically downloaded Hosts.txt from a central location and used it for 
local name resolution. As the ARPANET grew into the Internet, the number of hosts began to increase 
dramatically and the centralized administration and manual distribution of a text file containing the 
names for computers on the Internet became unwieldy. 
The replacement for the Hosts.txt file needed to be distributed, to allow for a hierarchical name space, 
and require minimal administrative overhead. The original design goal for DNS was to replace the 
existing cumbersome, centrally administered text file with a lightweight, distributed database that would 
allow for a hierarchical name space, delegation and distribution of administration, extensible data types, 
virtually unlimited database size, and reasonable performance.  
DNS defines a namespace and a protocol for name resolution and database replication: 
The DNS namespace is based on a hierarchical and logical tree structure. 
The DNS protocol defines a set of messages sent over either User Datagram Protocol (UDP) port 53 or 
Transmission Control Protocol (TCP) port 53. Hosts that originate DNS queries send name resolution 
queries to servers over UDP first because it’s faster. These hosts, known as DNS clients, resort to TCP 
only if the returned data is truncated. Hosts that store portions of the DNS database, known as DNS 
servers, use TCP when replicating database information.  
Historically, the most popular implementation of the DNS protocol is Berkeley Internet Name Domain 
(BIND), which was originally developed at the University of California at Berkeley for the 4.3 Berkeley 
Software Distribution release of the UNIX operating system.  
DNS Components 
Requests for Comments (RFCs) 974, 1034, and 1035 define the primary specifications for DNS. From 
RFC 1034, DNS comprises the following three components: 
1. The domain namespace and resource records 
DNS defines a specification for a structured namespace as an inverted tree in which each node and 
leaf of the tree names a set of information.  
Resource records are records in the DNS database that can be used to configure the DNS database 
server (such as the Start of Authority [SOA] record) or to contain information of different types to 
process client queries (such as Address [A] records or Mail Exchanger [MX] records). Typical 
resource records contain resources by name and their IP addresses. Name queries to DNS database 
servers are attempts to extract information of a certain type from the namespace. The name query 
requests a name of interest and a specific type of record. For example, a name query would provide 
a host name and ask for the corresponding IPv4 or IPv6 address. 
2. Name servers 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 218 
Name servers store resource records and information about the domain tree structure and attempt to 
resolve received client queries. DNS database servers, hereafter referred to as name servers or DNS 
servers, either contain the requested information in their resource records or have pointer records to 
other name servers that can help resolve the client query. If the name server contains the resource 
records for a given part of the namespace, the server is said to be authoritative for that part of the 
namespace. Authoritative information is organized into units called zones. 
3. Resolvers 
Resolvers are programs that run on DNS clients and DNS servers and that create queries to extract 
information from name servers. A DNS client uses a resolver to create a DNS name query. A DNS 
server uses a resolver to contact other DNS servers to resolve a name on a DNS client's behalf. 
Resolvers are usually built into utility programs or are accessible through library functions, such as 
the Windows Sockets getaddrinfo() or gethostbyname() functions. 
DNS Names 
DNS names have a very specific structure, which identifies the location of the name in the DNS 
namespace. A fully qualified domain name (FQDN) is a DNS domain name that has been constructed 
from its location relative to the root of the namespace (known as the root domain). FQDNs have the 
following attributes:  
FQDNs consist of the series of names from the name of the host or computer to the root domain.  
A period character separates each name. 
Each FQDN ends with the period character, which indicates the root domain. 
Each name within the FQDN can be no more than 63 characters long. 
The entire FQDN can be no more than 255 characters long. 
FQDNs are not case-sensitive. 
RFC 1034 requires the names that make up a FQDN to use only the characters a-z, A-Z, 0-9, and the 
dash or minus sign (-). RFC 2181 allows additional characters and is supported by the DNS Server 
service in Microsoft Windows Server 2003 operating systems. 
Domains and Subdomains 
The DNS namespace is in the form of a logical inverted tree structure. Each branch point (or node) in 
the tree is given a name that is no more than 63 characters long. Each node of the tree is a portion of 
the namespace called a domain. A domain is a branch of the tree and can occur at any point in the tree 
structure. Domains can be further partitioned at node points within the domain into subdomains for the 
purposes of administration or load balancing. The domain name identifies the domain's position in the 
DNS hierarchy. The FQDN identifies the domain relative to the root. You create domain names and 
FQDNs by combining the names of the nodes from the designated domain node back to the root and 
separating each node with a period (.). The root of the tree has the special reserved name of "" (null), 
which you indicate by placing a final period at the end of the domain name (such as 
www.sales.example.com.). Domains and subdomains are grouped into zones to allow for distributed 
administration of the DNS namespace.  
Figure 8-1 shows the DNS namespace as it exists for the Internet. 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 219 
Figure 8-1  The DNS namespace 
Figure 8-1 shows a few of the top-level domains and example hosts in the "microsoft.com." domain. A 
trailing period designates a domain name of a host relative to the root domain. To connect to that host, 
a user would specify the name "www.microsoft.com." If the user does not specify the final period, the 
DNS resolver automatically adds it to the specified name. Individual organizations manage second-level 
domains (subdomains of the top level domains) and their name servers. For example, Microsoft 
manages the "microsoft.com." domain. 
DNS Servers and the Internet 
Domains define different levels of authority in a hierarchical structure. The top of the hierarchy is called 
the root domain. The DNS namespace on the Internet, as shown in Figure 8-1, has the following 
structure: 
Root domain 
Top-level domains 
Second-level domains 
The root domain uses a null label, which you write as a single period (.). In the United States, the 
Internet Assigned Names Authority (IANA) manages several root domain name servers.  
The next level in the hierarchy is divided into a series of nodes called the top-level domains. The top-
level domains are assigned by organization type and by country/region. Some of the more common top-
level domains are the following: 
com – Commercial organizations in the United States (for example, microsoft.com for the Microsoft 
Corporation). 
Chapter 8 – Domain Name System Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 220 
edu – Educational organizations in the United States. 
gov – United States governmental organizations. 
int – International organizations. 
mil – United States military organizations. 
net - Networking organizations. 