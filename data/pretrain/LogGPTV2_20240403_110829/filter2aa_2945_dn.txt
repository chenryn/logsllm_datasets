displaying data in, 658–664
modifying data with, 664–669
quick reference, 655
scalable, 618–627, 655
styles applied to, 646–654, 655
tabular layout, 630–639
ViewModel
adding commands to, 675–685
creating, 671–675
vocal responses to voice commands, 697–700
UX (user experience), 612
V
ValidateCustomer method, 735, 739, 743–744, 748
validPercentage method, 97
Value enumeration, 241
value keyword, 369
Value method, 186–187
Value property, 192
value types
Action, 529, 676
arithmetic operators and, 47–49
in arrays, 249–251
Download from finelybook PI:EMAIL
1191
binary
binary notation, 364
displaying, 365
hexadecimal notation, 364
manipulating, 365–366
obo prefix, 364
operators for, 365–366
storing, 364
boxing, 199–200, 207
casting, 202, 207
InvalidCastException, 201
is operator, 202
as operator, 202–203
switch statement, 203–204
copying, 183–189, 206, 216
double, converting to int, 517
enumerations
declaring, 210, 227
enumeration variables, 210–211, 227
literal values, 211
nullable, 210
overview, 209
StructsAndEnums project, 212–214
underlying types, 212
Func, 676
int
arithmetic operators and, 49–54
in array arguments, 256–257
checked versus unchecked arithmetic, 144–148
converting double type to, 517
converting strings to, 47, 59
converting to double, 517
Download from finelybook PI:EMAIL
1192
minimum/maximum value of, 144
overview, 40
in parameter arrays, 257–258
uint (unsigned int), 364
null
null-conditional (?) operator, 190–191, 207
overview, 189–190
testing for, 190–191
nullable, 210
overview, 191–192
properties of, 192–193
numeric
displaying when last updated, 41–46
infinite values, 49
specifying, 39–40
out parameters, 194–195, 207
primitive
displaying values of, 41–46
table of, 40
quick reference, 206–207, 227
ref parameters
creating, 193–194, 207
overview, 193
Parameters project, 195–196
reference types compared to, 183–185
structures, 214
classes compared to, 217–218
common types, 214–215
declaring, 216, 227
initializing, 219–223
operators and, 216
StructsAndEnums project, 224–225
Download from finelybook PI:EMAIL
1193
structure variables, 223, 227
variable declarations, 218
Windows Runtime compatibility, 226
uint, 364
unboxing, 200–201
Windows Runtime compatibility, 311–313
values. See also value types
assigning to variables, 39, 59
returning from methods
method calls, 68–70
method declarations, 63–64, 93
multiple return values, 68–70, 93
void keyword, 63
unassigned, 40
ValueTuple package, installing, 70
ValueTuple structure, 214
ValueType abstract class, 269
ValueType package, 173
var keyword, 58, 62, 179, 484
varargs macros, 258
variables. See also values
array
declaring, 229–230
instantiating, 230–231
assigning values to, 39, 59
Boolean, 95–96, 112
currentCustomer, 673
declaring, 38–39, 59
decrementing, 56–57, 59, 116
defined, 37–38
enumeration variables
assigning to values, 227
Download from finelybook PI:EMAIL
1194
declaring, 210–211, 227
operators and, 211
implicitly typed local, 57–58
incrementing, 56–57, 59, 116
initializing, 189–190, 441
naming, 38
null
null-conditional (?) operator, 190–191
overview, 189–190
testing for, 190–191
nullable
overview, 191–192
properties of, 192–193
pointers, 204–206
quick reference, 59
randomCardSelector, 242
sentinel, 117
structure
copying, 223
declaring, 218, 227
initializing, 227
nullable, 218
sumTotal, 262
unassigned local, 40
variadic methods, 256
variance, generic interfaces and, 402–404
VCD (voice-command definition) files, 687–690
Vehicle class, 279
Vehicles project, 278–283
ViewModel object, 734–740
adding commands to, 675–685
ICommand interface, 675–678, 701
Download from finelybook PI:EMAIL
1195
NextCustomer command, 679–682
Next/Previous buttons, 682–685
PreviousCustomer command, 679–682
adding/editing data with, 731
creating, 671–675
error reporting, 743–746
MVVM (Model-View-ViewModel) pattern, 657–658
UI updates, 746–748
virtual keyword, 275, 288, 313
virtual machines, 226
virtual methods
declaring, 274–275
polymorphism and, 277, 288
Visual State Manager, adapting user interfaces with, 639–645
Visual Studio 2017
Code and Text Editor window, 6
console applications
creating in Visual Studio 2017, 3–14, 34
defined, 3
namespaces, 14–17
graphical applications, creating, 18–27, 34
adding code to, 30–32
App.xaml.cs file, 28–30
building and running, 25–26, 34
Button control, 24–25
MainPage.xaml.cs file, 27–28
pages in, 21
TextBlock control, 21–24
views of, 18
WPF App template, 33
Implement Interface Wizard, 292
quick reference, 34
Download from finelybook PI:EMAIL
1196
Solution Explorer pane, 6
VMs (virtual machines), 226
vocal responses to voice commands, 697–700
voice activation, 691–695
registration of voice commands, 690–691
VCD (voice-command definition) files, 687–690
vocal responses to voice commands, 697–700
voice-command definition (VCD) files, 687–690
VoiceCommandActivatedEventArgs object, 691
VoiceCommandDefinitionManager, 691
void keyword, 63
W
Wait method, 531, 564
WaitAll method, 531, 565
WaitAny method, 531
waiting for tasks, 531, 564–565
WaitingToRun task status, 556
WalkTree method, 396
when keyword, 138–142
where keyword, 401, 408, 489, 501
Where method, 484–485, 501
while statements
blocks, 118
example of, 132
nesting, 117
sentinel variable, 117
syntax, 117
terminating, 117
writing, 118–121
WhileStatement project, 118–121
Download from finelybook PI:EMAIL
1197
white space, 36
widening conversions, 517
Windows applications, indexers in, 372–378
Windows Phone SDK 8.0, 611
WinRT (Windows Runtime), 611
asynchronous methods and, 580–582
compatibility with, 226, 311–313
WithCancellation method, 590, 608
wizards
Add Scaffold, 718
Entity Data Model, 712–716
Extract Method, 78
Generate Method Stub, 74–77, 93
Implement Interface, 292
Publish Web, 724
WPF App template, 33
WrappedInt class, 187
Wrapper structure, 370–371
Wrapper class, 403
Write method, 76, 582
WriteableBitmap object, 532–534, 582
WriteAsync method, 582
writeFee method, 77
WriteLine method, 40, 73, 214, 255–256, 260
write-only indexers, 369
write-only properties, 345, 360
X-Y-Z
XAML (Extensible Application Markup Language), 20. See also user
interfaces
App.xaml.cs file, 28–30
Download from finelybook PI:EMAIL
1198
MainPage.xaml files, 27–28, 639
namespace declarations, 616
XML (Extensible Markup Language), special characters in, 109
XOR (^) operator, 366
yield keyword, 444, 448
Download from finelybook PI:EMAIL
1199
Code Snippets
Many titles include programming code or configuration examples. To
optimize the presentation of these elements, view the eBook in single-
column, landscape mode and adjust the font size to the smallest setting. In
addition to presenting code and configurations in the reflowable text format,
we have included images of the code that mimic the presentation found in the
print book; therefore, where the reflowable format may compromise the
presentation of the code listing, you will see a “Click here to view code
image” link. Click the link to view the print-fidelity code image. To return to
the previous page viewed, click the Back button on your device or app.
Download from finelybook PI:EMAIL
1200
Download from finelybook PI:EMAIL
1201
Download from finelybook PI:EMAIL
1202
Download from finelybook PI:EMAIL
1203
Download from finelybook PI:EMAIL
1204
Download from finelybook PI:EMAIL
1205
Download from finelybook PI:EMAIL
1206
Download from finelybook PI:EMAIL
1207
Download from finelybook PI:EMAIL
1208
Download from finelybook PI:EMAIL
1209
Download from finelybook PI:EMAIL
1210
Download from finelybook PI:EMAIL
1211
Download from finelybook PI:EMAIL
1212
Download from finelybook PI:EMAIL
1213
Download from finelybook PI:EMAIL
1214
Download from finelybook PI:EMAIL
1215
Download from finelybook PI:EMAIL
1216
Download from finelybook PI:EMAIL
1217
Download from finelybook PI:EMAIL
1218
Download from finelybook PI:EMAIL
1219
Download from finelybook PI:EMAIL
1220
Download from finelybook PI:EMAIL
1221
Download from finelybook PI:EMAIL
1222
Download from finelybook PI:EMAIL
1223
Download from finelybook PI:EMAIL
1224
Download from finelybook PI:EMAIL
1225
Download from finelybook PI:EMAIL
1226
Download from finelybook PI:EMAIL
1227
Download from finelybook PI:EMAIL
1228
Download from finelybook PI:EMAIL
1229
Download from finelybook PI:EMAIL
1230
Download from finelybook PI:EMAIL
1231
Download from finelybook PI:EMAIL
1232
Download from finelybook PI:EMAIL
1233
Download from finelybook PI:EMAIL
1234
Download from finelybook PI:EMAIL
1235
Download from finelybook PI:EMAIL
1236
Download from finelybook PI:EMAIL
1237
Download from finelybook PI:EMAIL
1238
Download from finelybook PI:EMAIL
1239
Download from finelybook PI:EMAIL
1240
Download from finelybook PI:EMAIL
1241
Download from finelybook PI:EMAIL
1242
Download from finelybook PI:EMAIL
1243
Download from finelybook PI:EMAIL
1244
Download from finelybook PI:EMAIL
1245
Download from finelybook PI:EMAIL
1246
Download from finelybook PI:EMAIL
1247
Download from finelybook PI:EMAIL
1248
Download from finelybook PI:EMAIL
1249
Download from finelybook PI:EMAIL
1250
Download from finelybook PI:EMAIL
1251
Download from finelybook PI:EMAIL
1252
Download from finelybook PI:EMAIL
1253
Download from finelybook PI:EMAIL
1254
Download from finelybook PI:EMAIL
1255
Download from finelybook PI:EMAIL
1256
Download from finelybook PI:EMAIL
1257
Download from finelybook PI:EMAIL
1258
Download from finelybook PI:EMAIL
1259
Download from finelybook PI:EMAIL
1260
Download from finelybook PI:EMAIL
1261
Download from finelybook PI:EMAIL
1262
Download from finelybook PI:EMAIL
1263
Download from finelybook PI:EMAIL
1264
Download from finelybook PI:EMAIL
1265
Download from finelybook PI:EMAIL
1266
Download from finelybook PI:EMAIL
1267
Download from finelybook PI:EMAIL
1268
Download from finelybook PI:EMAIL
1269
Download from finelybook PI:EMAIL
1270
Download from finelybook PI:EMAIL
1271
Download from finelybook PI:EMAIL
1272
Download from finelybook PI:EMAIL
1273
Download from finelybook PI:EMAIL
1274
Download from finelybook PI:EMAIL
1275