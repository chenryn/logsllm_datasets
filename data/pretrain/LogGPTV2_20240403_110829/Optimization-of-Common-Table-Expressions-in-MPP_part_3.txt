meansthattheplanchosenforthemainquerymaynotbeoptimal notinliningtheCTE.Figure7depictstheMemoafterapplyingthe
anymoreafterplugginginthesmallerCTEsubplans. followingCTE-relatedtransformations:
An additional source of complexity with this approach comes
from the fact that executing some parts of a query plan might be • ThefirstruleisappliedtotheCTEAnchoroperator. Itgen-
skipped altogether for certain inputs. Consider the plan in Fig- eratesaSequenceoperatorinthesamegroupastheCTEAn-
ure5(b).Inthisplan,theCTEProducerwasplacedaccordingtothe chor (group 0), such that the left child of the Sequence is
algorithmabove,underthefirstCTEConsumerencounteredinthe thewholetreerepresentingtheCTEdefinition–creatingas
orderofexecution. Assumenowthatthefilteronicurrentprice many new groups as necessary (groups 4, 5, and 6) – and
doesnotreturnanytuples.Mostengineswillthenoptimizeexecu- the right child of the Sequence is the original child of the
tionandsimplyskipexecutingtheinnersideofthejoin,sincethe CTEAnchor(group1).
1708
Select&
i_color=‘red’&
CTEConsumer(0)&
Select&
GroupBy&i_color&
CTEProducer(0)( i_color=‘red’&
Select&
GroupBy&i_color&
GroupBy(i_color( Select& i_color=‘red’&
i_color=‘red’&
TableScan(item)( Select& TableScan(item)& TableScan(item)&
CTEConi_scoulomr=e‘rre(d0’&)&
CTEConsumer(0)&
!"#$% Select& CTEProducer(G0)r(oupBy&i_color&
i_color=‘red’&
Select& GroupBy&&
GroupBy&i_color& Select4
.,/,01% &'(&"$)*+,-!"#$ i_color=‘rGedr’o&upBy(( Select& i_color&
GroupBy&i_color& Select& i_color=‘red’&
!"#$% %&'()(*$+,*-./$ GroupBy&i T_ aci bo_c ll eoo Sl ro c&r a( n( i_co il _o crS o=e l‘ orl ree =dc ‘r’t& e& d’& i_color=‘red’& GroupBy&& Select4
'23/,.02$% TableScan(item) (& item)( TableScan(ite Cm T) E& Consumer(0)& i_color& i_color=‘red’&
&'(&"$)*+,-!"#$&'(&"$)*+,-!"#$ !%0-1#$ Tab (le aS )ca Cn T(it Eem d) e& finitioT nableS (c ba )n( Oite rm ig) i& nalexpression TableScan4 TableScan4
(a) (b) (item)& (item)&
/.4,.$-.$ /.4,.$-.$
Select4 GroupBy&&
&'()*"+,-.*!"#$ !"#$% &'()*"+,-.*!"#$ !"#$% Select S& elect& i_colo i_r c=S o‘e r loel rde =’c ‘& rt e4 d’& iG_cr io _ol cou or lp& orB &y&&
i_color=‘red’&
%&'(/ ). (0 *. $+- ,1 *-% ./$%&'(/ ). (0 *. $+- ,1 *-% ./$%&'(/ ). (0 *. $+- ,1 *-% ./$ %&'(/ ). (0 *. $+- ,1 *-% ./$%&'(/ ). (0 *. $+- ,1 *-% ./$&'(&" C$ T5, E6 C. o* Cn!" Ts# Eu$i C_ mc oo nelo srr u(= 0‘ mre )&d e’& r(0)& Gr i_o cGu olp r o i_o rB c&u oy lp o&& rB &y&& i_cS io _e l coS ol re e l= olc ‘ re r =t ec ‘4 d rt e’4 & d’&
TableScan4
TableScan4 TableScan4
'23 !%0 0. -1/- #2 $$% '23 !%0 0. -1/- #2 $$% '23 !%0 0. -1/- #2 $$% '23 !%0 0. -1/- #2 $$% '23 !%0 0. -1/- #2 $$% (itT ea m(b itl )ee &mSc )a &n4 (it(eitmem)&)&
(c) (d) (c) InlinedCTE (d) Predicate push-
down
Figure8:Otherpossibleplans
Figure9:PushingdownpredicatesthroughinlinedCTE
• ThesecondruleisalsoappliedtotheCTEAnchor,generating
aNoOpoperatorinthesamegroup(group0),withitsonly
ure9(c).However,Orcabydefaulttriestopushdownpredicatesas
childbeingthechildoftheCTEAnchor(group1).
faraspossible,whichmeansthattheexpressioninFigure9(c)will
• ThethirdruleisappliedtoCTEConsumeroperators,generat-
eventuallybetransformedtotheexpressioninFigure9(d),which
ingacopyoftheCTEdefinition,andaddingthatexpression
maysignificantlyreducethenumberofintermediaterows.
to the same group as the CTEConsumer. For example, for
theCTEConsumeringroup2,theCTEdefinitionisaddedso
6.2 AvoidingInvalidPlans
thattheSelectoperatorisalsoingroup2,anditschild(the
TableScanoperator)isaddedtoanewgroup(group7). Inthissectionwedescribethealgorithmwhichchecksplansand
subplansforvaliditywithrespecttotheconfigurationofCTEPro-
After estimating the cost of the different alternatives (cf. Sec- ducers and CTEConsumers. The algorithm fits within Orca’s
tion7), theoptimizerchoosesthealternativewiththelowestcost frameworkofpassingdownqueryrequirementsandderivingplan
from each group. For example, if the optimizer chooses a plan properties(cf.Section3.2).Thealgorithmoperatesonthedifferent
rootedbytheNoOpoperatorfromgroup0withtheinlinedexpres- alternativeplansencodedbytheMemo. However,forillustration
sionsfromgroups2and3,wegettheplaninFigure3(a).Alterna- purposes,wepresentherearecursiveimplementationofthealgo-
tively,iftheoptimizerpicksaplanrootedbytheSequenceoperator rithmwhichoperatesonacompleteplan.
fromgroup0withtheCTEConsumersfromgroups2and3,weend The main function is given in Algorithm 1. The input to this
upwiththeplaninFigure3(b). functionisaplan(orasubplan),representedbyitsrootnode,and
Figure8showsotherpossibleplansthatcanbepickedbychoos- a list of CTE requirements. Each item in the list is a CTESpec
ing other operators. Note, however, that not all the plans shown object.TheoutputofthefunctionisalsoalistofCTESpecobjects
in this Figure are valid. For example, the plans in Figures 8(a) that represent the CTE configuration in the given subplan. Each
and8(b)containCTEConsumeroperatorswithoutacorresponding CTESpecisacompactspecificationofanunresolvedCTEProducer
CTEProducer. TheseplanscannotbeexecutedsincetheCTECon- orCTEConsumer,comprisedof:(i)theCTEid,and(ii)spectype:
sumersneedtoreaddatathatisneverproduced. TheplaninFig- either‘p’forproduceror‘c’forconsumer. Forsimplicity,wewill
ure 8(c) has a CTEProducer without any corresponding CTECon- representeachCTESpecusingapair(id,type).Forexample(1,c)
sumers. ThismeansthattheCTEexpressionwouldbeneedlessly representsaCTESpecwithid=1andtypeconsumer.
executedoneadditionaltimeandcached.Weavoidgeneratingsuch Thisfunctioniscalledinitiallyonthetopnodeofthewholeplan,
plansusingthealgorithmexplainedinSection6.2. andgivenanemptylistofrequirements. Thefunctioncomputesa
TheplaninFigure8(d)isnotaninvalidplan. However,itisnot CTESpeclistforthecurrentnode(lines1-2),thenproceedstopro-
the most efficient plan, since it contains only one CTEConsumer cessthechildnodes,ifany(lines3-7).Foreachchild,wecompute
thatcorrespondstotheincludedCTEProducer. Thisplanisalmost anewsetofCTErequirementsdependingontherequirementcom-
equivalent to the plan in Figure 3(a) in terms of cost, except that ingfromtheparentaswellastheCTESpecsobtainedfromprevi-
itincurstheadditionaloverheadofcachingtheCTEoutputs. We ous children (line 4). We then call the same function recursively
avoidgeneratingsuchplansasweexplainlaterinSection6.3.2. for the child, passing the new requirement (line 5) and combine
Using the Memo to represent the different alternatives makes thereturnedCTESpecswithwhathasbeenreturnedfromprevious
thedecisionofwhetherornottoinlineaCTEpurelycost-based. children (line 6). Finally the function checks whether or not the
Within the same query, some CTEs may be inlined, while others combinedCTESpecsofthecurrentnodeanditschildrensatisfies
may not be inlined. Inlining also allows performing some opti- the requirement coming from the parent. If not, then the current
mizations such as pushing down predicates, distribution, sorting, planisinvalid(lines8-10).Otherwise,thecombinedCTESpeclist
etc. Forexample, considertheCTEProducerinFigure9(a). The isreturnedtotheparent(line11).
partiallogicalexpressionshowninFigure9(b)showsapredicate Thealgorithmusesanumberofhelperfunctions; TheCompu-
ontopofaCTEConsumer. Usingthetransformationrulethatin- teCTESpec()functionisoperator-specific,andisusedtocompute
linestheCTEConsumerwouldgiveusthepartialexpressioninFig- thelocalCTESpecrepresentationforeverydifferentoperator.The
1709
Algorithm1:DeriveCTEs Sequence$ Sequence$
Input :Nodenode,ListreqParent
Output:ListofCTESpecs CTEProducer(0)$ Join% CTEProducer(0)$ Join%
1 ListspecList;
2 specList.Add(node.ComputeCTESpec()); i_curS re el ne tc _t p% rice$$ i_coloS re =l ‘e rc et d% ’$OR$
3 foreachchildinnode.childrendo <$50$ $i_color=‘blue’$
4 ListreqChild=Request(specList,reqParent);
5 ListspecChild=DeriveCTEs(child,reqChild); Select%
Select% Select% Select% Select%
6 Combine(specList,specChild); i_color$=‘red’$ i_color=‘blue’$ i_current_price$$ i_color=‘red’$ i_color=‘blue’$
<$50$
7 end
8 if!Satisfies(specList,reqParent)then TableScan% CTEConsumer(0)%CTEConsumer(0)% TableScan%CTEConsumer(0)%CTEConsumer(0)%
9 SignalInvalidPlan(); (item)$ (item)$
10 end (a)$Predicates$Not$pushed$to$CTEProducer$ (b)$Predicates$pushed$to$CTEProducer$
11 returnspecList;
Figure10:Pushingdownpredicateswithoutinlining
implementationofComputeCTESpec()formostoperatorsreturns totakeintoaccountallconsumersofagivenCTE,andcannotbe
an empty list. The only exceptions are for the CTEProducer and appliedlocallytoindividualCTEConsumers.
CTEConsumer operators; each of which returns a list with one
CTESpecobjecthavingtheCTEidofthatoperator. 6.3.1 PredicatePush-down
TheRequest()functioncomputesanewlistofrequirementsfor As explained in Section 6.1, inlining CTEs makes it possible
agivenchildnode,takingintoaccounttheparent’srequirements, topushdownpredicates,whichreducesthenumberofintermedi-
andtheCTESpecsreturnedfromthepreviouschildren. Thenew aterows. However,inOrca,weintroduceamethodtopushdown
requirementscontainthefollowing: predicatesevenwithoutinliningCTEs.
Example5. Considerthefollowingquery:
• AnyCTESpecnotrequiredbytheparent,butintroducedby
a previous child. For example, the Sequence node in Fig- WITH v as (SELECT ibrand, icolor FROM item
ure 8(d) receives an empty requirement list, since it is the WHERE icurrentprice < 50)
SELECT * FROM v v1, v v2
root. Itsfirstchildreports(0,p). Thereforetherequirement
WHERE v1.ibrand = v2.ibrand
forthesecondchildis(0,c) AND v1.icolor = ’red’
• AnyCTESpecrequiredbytheparentandnotresolvedbythe AND v2.icolor = ’blue’;
previouschildren. Forexample,thejoinnodeinFigure8(d)
This query has two CTEConsumers, with a predicate on each
receivestherequirement(0,c)fromitsparent. Thisrequire-
one. Figure10(a)showsapossibleexecutionplanfortheoriginal
mentisnotsatisfiedbythefirstchild. Thereforeitispassed
query without CTE inlining. However, in this plan, the CTEPro-
downtothesecondchild.
ducer outputs tuples that are not needed by any of the CTECon-
sumers. Weoptimizethisbyforminganewpredicateasthedis-
TheCombine()functioncombinesCTESpeclistsobtainedfrom
junctionofallpredicatesontopoftheCTEConsumers,andpushing
thecurrentnodeanditschildrentobuildCTESpeclistforthewhole
thatnewpredicatetotheCTEProducer.Thisreducestheamountof
subplanrootedbythecurrentnode.Combiningmultipleliststakes
datathatneedstobematerialized. Westillneedtoapplytheorig-
placeasfollows: IfCTESpecsexistwiththesameidbutdifferent
inal predicates on top of the CTEConsumers to produce only the
types,theycanceleachotherandarenotpartofthecombinedlist.
neededtuples.TheoptimizedplanisgiveninFigure10(b).
AllremainingCTESpecsarecopiedintothecombinedlist.
TheSatisfies()functioncheckswhetherornottheCTErepresen- 6.3.2 AlwaysInliningSingle-useCTEs
tationofthewholesubplansatisfiestherequirementpasseddown
In Orca, we use a heuristic where any CTE with a single con-
fromtheparent.ThisisaccomplishedbycomparingtheCTESpecs
sumerisautomaticallyinlined.Considerthefollowingexample:
inbothlists,andcheckingiftheymatch.
Finally,thefunctionSignalInvalidPlan()signalsthatthecurrent Example6.
plan being processed is invalid because the requirements are not
WITH v as (SELECT icolor FROM item
satisfied. Hence, it cannot be considered as one of the possible WHERE icurrentprice < 50)
executionplansforthegivenquery. SELECT * FROM v
WHERE v.icolor = ’red’;
Asnotedinthebeginningofthissection,ourimplementationof
this algorithm operates on the Memo groups directly, not on the
Thisqueryhasonlyoneconsumerofv. Whetherweinlinethe
extracted plans. The requests and derived properties are passed
CTEornot,theCTEexpressionisexecutedonlyonce. However,
from one Memo group to its children and vice versa. Signalling
whentheCTEisnotinlined,wealsoincurtheaddedcostofma-
aninvalidsubplansimplymeansthatthissubplanisremovedfrom
terializationandreadingbackthematerializedtuples.Therefore,it
the plan space, and not considered as part of any plan. In other
isalwaysbettertoinlineCTEsthatarereferencedonlyonce.
words,wedonotwaituntilallalternativeplansareproducedand
then apply this algorithm, but rather apply it as part of property 6.3.3 EliminationofunusedCTEs
derivationtoavoidinvalidoperatorcombinations.
Example7.
6.3 OptimizationsAcrossConsumers
WITH v as (SELECT icolor FROM item
Execution plans containing CTEs can be further optimized in WHERE icurrentprice < 50)
multiplewaystoimproveexecutionperformance. Inthissection, SELECT * FROM item
WHERE item.icolor = ’red’;
weoutlinesomeoftheseoptimizations. Theseoptimizationshave
1710
As an extension to the previous optimization, CTEs that are are attached to the request sent to group 1, from which the CTE-
never referenced in the query can be removed altogether. In Ex- Consumersdescend. ThisallowstheCTEConsumerstodetermine
ample7,visdefinedbutneverreferenced.Nomatterhowcompli- laterwhethertheCTEplansatisfiestherequirementsattheCTE-
catedthedefinitionofv is,itcanbecompletelyremovedwithout Consumers contexts, or property enforcers are needed to satisfy
affectingtheresultofthequery.Thiscanalsobeappliediteratively missingrequirements.
toquerieswithmultiplesCTEs. The local requirements of the HashJoin operator in group 1
entail aligning child distributions based on the join condition
Example8. Considerthefollowingquery: (v1.i brand = v2.i brand). The goal is to collocate tu-
plesthatwilljointogetheronthesamenode. Thisisachievedby
WITH v as (SELECT icurrentprice p FROM item
WHERE icurrentprice < 50), requestingHashed(ibrand)distributionfrombothchildgroups2
w as (SELECT v1.p FROM v as v1, v as v2 and3. NotethatCTEplanpropertiesarestillattachedtothesere-