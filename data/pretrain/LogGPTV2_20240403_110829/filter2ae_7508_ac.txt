DNS上报信息示例（子域“2eapjayv9u2”为传输信息）：
2eapjayv9u2.53a91f99cdc251934931.d.requestbin.net
图3-7 DNS上报流量
requestbin.net端接收到的完整感染上报情况参考图3-8所示。
图3-8 “requestbin.net”接收DNS上报信息
在此次攻击活动中，诱饵文档的共性技战术特点是均通过`RequestBin`提供的`DNS`隧道服务进行宏感染情况的上报。我们针对3种不同类型的诱饵文档进行了比对分析，发现文档基于功能的不同上报次数也有所差异。初期侦查阶段（绕过宏安全警告）的诱饵文档共2次上报感染阶段，而后门植入阶段涉及的两类诱饵文档分别进行了4次和6次上报，对比情况参考下图所示。
图3-9 感染阶段上报对比
### 3.2.2 注册任务计划
当受害者打开文档时（Document_Open），宏代码通过Base64解码并释放后续的恶意代码。此阶段包含两类不同的后门KarkoffDll和SideTwist，其释放路径和加载方式也有所不同，相关路径如下所示：
“……\ appdata\local\Google_Corporation\”（KarkoffDll）
"……\public\documents\SystemFailureReporter\"（SideTwist）
 图3-10 后门释放路径
当受害者关闭文档时（Document_Close），宏代码将注册Windows任务计划以循环加载执行后续的恶意代码。以释放后门KarkoffDll的文档为例，当文档关闭时，其会创建任务名为Google
Update的任务计划。
图3-11 注册任务计划
该任务计划每5分钟执行一次`exchange.vbs`脚本，从而加载后续恶意代码`MicrosoftExchangeModule.dll`和依赖库`Microsoft.Exchange.WebServices.dll`。后门的持久性高度依赖于此任务计划，其生命周期也与任务计划时间相同（任务计划持续20天）。
## 3.3 阶段三：隐匿驻留
攻击者最终可能植入两类后门木马，分别使用了不同的隐匿隧道通信技术来实现敏感信息的传输：EWS隧道技术（`KarkoffDll`）和HTTP隧道技术（`SideTwist`），下文分别对这两类样本及其使用的通信技术进行深入分析。
### 3.3.1 EWS隧道通信
后门KarkoffDll利用了EWS API协议实现受控机与C&C间的隐匿隧道通信。EWS（全称`Microsoft Exchange Web
service`）是`Exchange 2007`之后推出的基于SOAP (`Simple Object Access Protocol`) 协议的 web
service，提供了访问Exchange资源的接口。微软Exchange团队后续又推出了`Microsoft Exchange Web
Service(EWS) Managed API`，开发者可以根据此接口发送和接收信息，实现操作Exchange服务器邮箱的各类功能。
攻击者在成功窃取到受害目标或与目标具有信任关系的Exchange服务器邮箱账户后，将该账号作为`C&C`跳板，通过EWS API隐匿的传输数据。由于EWS
API本身基于SOAP协议和HTTPS加密，且恶意数据被组合加密(自定义`Base64+RSA+AES`)后隐藏嵌入在邮件内容中传输，在对抗流量检测方面可以起到很好的效果。我们搭建了`EWS`环境来模拟被入侵邮件账户的受控情况：
 图3-12 通过EWS API传输敏感数据
攻击者将恶意EWS模块封装在DLL(MicrosoftExchangeModule.dll)中，并结合Windows任务计划和exchange.vbs脚本定时加载。
图3-13 exchange.vbs加载DLL
MicrosoftExchangeModule.dll的执行流程如图3-14所示，我们将分别从初始化、EWS API通信、控制指令三个部分进行介绍。
 图3-14 恶意DLL执行流程图
  * 1）初始化 首先，后门执行的初始阶段会随机休眠30秒至120秒以尝试绕过沙箱检测。
图3-15 初始休眠
之后，通过自定义码表的Base64算法对UserName进行编码从而生成程序ID标识(Program.id)，该标识将用于后续通信的识别。
图3-16 生成程序ID
进一步后门会读取资源信息，包括登陆EWS服务器邮箱所需的Host域名、账号、密码、邮件地址，以及配置文件中的模式值（首次运行为null）。
图3-17 登陆邮箱所需的连接信息
由于后门循环启动，黑客可以通过更改配置文件中”KMAV”对应的模式值来实现不同的功能分支。配置文件字段及相关信息如下：
图3-18 配置文件相关信息
  * 2）EWS API通信 初始化后，后门在CheckEWSConnection()函数内根据从配置文件中读取到的模式值(credential.mode)选择执行分支。当模式值为0-2时程序会在当前登陆连接的Exchange邮件账户中创建邮件任务；当值为3-7时则会将邮件任务发送至黑客指定的邮箱（如：PI:EMAIL）。
图3-19 执行分支
各分支根据传入参数创建EWSCommunication对象、EWSManager对象以及进行EWS服务器连接建立的初始化工作。
 图3-20 创建连接对象
进一步在Initialize()函数中将设置EWS请求的UserAgent、操作文件夹位置（默认为已删除邮件）。
图3-21 初始化配置
如果是首次执行后门（模式值为0），还将添加以下邮件收件箱规则： （1）DefaultExchangeRule1：若邮件主题中包含“Important
Dropbox Updates”字符串，删除邮件并且将邮件标记为“已读” （2）DefaultExchangeRule：若邮件主题中包含“Important
Dropbox API Updates”字符串，删除邮件并且将邮件标记为“已读”
图3-22 收件箱规则
创建收件箱规则的目的是将包含指定字符串的邮件移至“已删除邮件”，降低被邮箱用户发现的机率。攻击者采用了3种邮件任务实现数据传输，分别为“心跳包”邮件（aliveSubject）、“CMD”邮件（cmdSubject）、“结果”邮件（resultSubject）：
表3-1 邮件任务信息
资源名称| 值(邮件主题名前缀)| 功能解释  
---|---|---  
aliveSubject| Dropbox and Paper, together| “心跳包”邮件任务（更新执行时间）  
cmdSubject| Important Dropbox API Updates| “CMD”邮件任务（接收C&C指令信息）  
resultSubject| Important Dropbox Updates| “结果”邮件任务（上报指令执行结果）  
首次执行后门时受控机器会创建默认的“心跳包”邮件和“结果”邮件，“CMD”邮件则会由攻击者在下发控制指令时创建。
“心跳包”邮件主题名结构：aliveSubject + Program.id（自定义Base64) 示例：" Dropbox and Paper,
together CoFD!o4^}-F?CuF0}dNN"
图3-23 邮件任务主题
加解密算法： EWS
API基于`SOAP`协议和`HTTPS`加密通信，其本身已具有较强的安全性。攻击者进一步还将传输数据组合加密后嵌入在`Emailbody`中对抗流量检测，并通过前后字符串定位加密数据内容：
startString: “These don’t require action, but they may” endString: “enrich
your application and increase the value” 默认“结果”邮件的数据结构如下（初次创建）： mid | cid |
data | UserDomainName | MachineName | UserName
图3-24 邮件Emailbody
邮件标题和内容均通过伪造Dropbox平台（网络存储服务提供商）的服务更新内容来混淆视听。在通信安全方面，黑客采用了RSA（非对称加密算法）、AES（对称加密算法）、自定义码表Base64的组合加密策略。通信共使用了两对RSA密钥对A和B，其中受控端内置了A密钥对的公钥和B密钥对的公钥、私钥。受控端上传信息时先由AES加密内容，再通过RSA_PublicKey_A加密AES