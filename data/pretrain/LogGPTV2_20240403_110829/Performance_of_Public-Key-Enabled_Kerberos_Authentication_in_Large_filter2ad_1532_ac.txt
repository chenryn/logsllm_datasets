45 
A 
3
4 0 -  
8 
Y  35 - 
0) E 
i= 
8  2 5 -  
2 0 -  
E  15 - 
qr 
___ 
m 
0
-
E
'p 
--e- measured 
- - .U-. . predicted 
10 - 
't---- 
"' 
0 
0.00 
0.02 
0.04 
0.08 
0.06 
0.10 
Throughput (trandsec) 
0.12 
0.14 
0.16 
Figure 7. Calibration results for the PKCROSS transaction 
120 
I O 0  
80 
60 
40 
20 
0 
0.05 
0.06 
-+- Meas. Rsp. 
Pred. Rsp. 
0.08 
0.08 
0.07 
0.06 
Throughput (trandsec) 
0.07 
Figure 8. Calibration results for the PKTAPP transaction 
179 
Y 
10  - 
line 
-~~ - .. 
_.-- 
-.@. 
..-L.L------ 
_ _ . -  
I 
I 
Figure 9. Comparative PKCROSS and PKTAPP performance 
The next bottleneck, with  very  similar workload, was 
the  local  KDC.  The  application  server  was  under- 
utilized-it 
conducted  the  final  user  authentication  with 
only secret key encryption. Under PKCROSS, the KDCs 
remain  the  saturation  point  regardless  of  the  number  of 
remote  realm  application  servers  participating  in  the 
authentication. 
The indifference of the PKCROSS protocol to number 
of servers in  the  remote  realm  is clear  in  Figure  9. The 
is  a 
analysis  demonstrates 
significantly  better  performance  choice  for  a  single 
remote server, PKCROSS is significantly more stable for 
anything greater than two servers in the remote realm. 
that,  while  PKTAPP 
Our  model  accounts  only  for  application  server 
workload  generated  by  authentications.  In  general,  the 
application  server  will  carry  additional  processing 
workload. If we had added that workload  to the model, it 
would make PKCROSS look even more favorable. 
4.3 Sensitivity to Resource Capacity 
We  call  the  number  of  servers  per  realm  favoring 
PKCROSS performance over PKTAPP the “cross-over.” 
The  cross-over  may  vary  with  server  and  network 
capacity.  The  test  bed  was  constructed  with 
low- 
performance servers and a high-performance  network-a 
1 0-Mbps local area network has much better performance 
than the typical Internet connection. 
We repeated the model variations studied in Section 4.2 
over  a  range  of  server  and  network  performance.  We 
the  performance  of  both  KDCs  and  the 
increased 
application  servers (that  is,  service  times  were  reduced) 
by  one  and  two  orders  of  magnitude.  As  a  result,  we 
studied  a  range  of  processor  performance  that  varied 
from a “1”  to “100’ SPEC CINT95 [ 171 rating-from 
a 
very-low-end  Intel  Pentium  processor  to  a  high-end 
server.  Network  performance  ranged  from  LAN  speeds 
to  a  network  throughput  of  12,750 bytes  per  second  to 
characterize slow Internet links [ 181. 
The results of our fast-processor/slow-network  model 
are documented  in Figure  10. This analysis indicates that 
performance benefits of PKCROSS when more than two 
application servers are accessed in the remote realm hold 
for  increased  processor  capacity  and  reduced  network 
throughput.  It  might  appear  that  the  increased  network 
delay would favor PKTAPP because PKCROSS includes 
more  message  exchanges.  The increased  network  delay 
does  result  in  more  separation  between  the  PKCROSS 
response  time curves for  1, 8, and  16 application  server 
authentications. However, because  PKTAPP sends large 
messages carrying certification chains to each application 
server, we observe the same cross-over result. 
180 
1 
PKTAPP  : I 
.
i
PKTAPP 
0 
2 
4 
I 
6 
10 
Throughput (translsec) 
0 
12 
14 
1 
16 
Figure 10. Comparative PKCROSS and PKTAPP performance with increased server capacity and 
decreased network throughput 
5. Related Work 
Developers  of  security  protocols  and  encryption 
algorithms  have  long  recognized 
the  importance  of 
performance.  In  many  cases,  researchers  applied  either 
complexity analysis to evaluate algorithm performance or 
measurement  techniques  to  analyze  system performance 
[ 19-22].  Protocol 
an 
increasingly  important  topic  as  security  algorithms  have 
become  more  commonly  used  in  production  and  high- 
workload computing and networking environments. 
has  become 
performance 
Early work examined the impact of security protocols 
on  network  throughput,  seeking  to  determine  whether 
encryption  calculations  would  put  a  damper on  rapidly 
increasing  data  rates.  In  [23],  Zorkadis  identifies  the 
impacts  of  five  basic 
communications  performance 
security 
control, 
confidentiality,  integrity,  and  non-repudiation.  Zorkadis 
begins  his  exploration  of  the  impacts by  constructing a 
simple queuing model for secure communications. 
authentication, 
services: 
access 
protocol 
Because  Kerberos  was 
in 
the 
standard  network 
authentication 
the  Open  Software 
Foundation's  Distributed  Computing  Environment 
(DCE)  [24,  2-51,  it  has  been  analyzed  in  that  context. 
DCE  security  services  have  been  benchmarked  and 
analyzed  in  [26].  The  performance  characteristics  of 
Kerberos have been loosely measured in some of  its pilot 
applications [27], with good results. 
The predominant  role  of  public  key  cryptography  in 
electronic commerce  has  motivated  several performance 
studies. In [28], Apostolopoulos and Peris look at ways to 
reduce  the  impact  of  the  private  key  encryption  step  in 
the  Transport  Layer  Security  (TLS)  protocol.  In  [29], 
MenascC and  Almeida  use analytical modeling to assess 
the  tradeoff  between  performance  and  security  in  e- 
commerce applications using protocols such as TLS and 
payment  services  such  as  SET.  Lambert,  in  [30], 
performs  a  high-level,  benchmark-supported  analysis  of 
performance  improvements anticipated  from  the  use  of 
elliptic curve cryptography in e-commerce transactions. 
Finally, in previous work, the authors analyzed public- 
key-enabled  Kerberos 
the  benefit  of 
PKINIT and  PKCROSS  skeleton implementations. As  a 
result, 
speculative 
that 
observations. 
[31]  without 
contained 
analysis 
only 
6. Summary and Future Work 
We have  demonstrated, through  the  use  of  validated 
analytical  queuing  models, the  quantitative performance 
differences between  two  proposals  to  public-key-enable 
Kerberos: PKCROSS and PKTAPP. Our analysis shows 
that,  over  the  range  of  server  and  network  capacity 
studied,  PKCROSS  outperforms  the  simpler  protocol, 
PKTAPP, for authenticating to more than one application 
server  in  a  remote  realm.  This  finding  can  be  used  to 
18 1 
guide a high-level  protocol  that combines both PKTAPP 
and PKCROSS to improve performance. 
Use  of  such  a high-level  protocol  would  require  that 
each  application  server  provide  support 
for  both 
PKTAPP and traditional  Kerberos. It would  also require 
that the client know,  a priori, the number  of  servers that 
will be authenticated to in a given realm. 
Neither requirement is onerous. The application server 
could support both PKTAPP and traditional  Kerberos on 
two well-known  ports. PKTAPP would be listening  on a 
TCP  socket.  Kerberos  would  be  awaiting  UDP 
datagrams. 
The client, in the process of searching for information 
over a large number of servers, is often presented  with a 
“hit-list’’  before  beginning 
the  process  of  server 
authentications. This would  allow the client to use either 
PKTAPP or PKCROSS based  on the  number  of servers 
for each realm. This type of scenario fits well within the 
criminal investigation example offered in Section 2.5. 
Our analysis, as shown in Figures 9 and  IO, provides a 
small range  of  variation  in  server  and  network  capacity. 
The development  of  a more  comprehensive heuristic  for 
selecting  between  PKCROSS  and  PKTAPP  remains  as 
future  work.  We  would  also  like  to  use  the  model  to 
evaluate the performance of a larger variety of encryption 
algorithms including comparison  to  baseline, secret-key- 
based  Kerberos,  an  AES  version  of  Kerberos,  and  an 
elliptic curve version  of public-key-enabled  Kerberos. In 
addition, the analysis we conducted does not consider the 
performance  implications of  the  practical  aspects of  key 
management  in  a  PKI,  such  as  CRL  distribution  and 
review. 
Finally,  we  have  shown  that  the  class  switching 
queuing formulation  is an effective  way to quantitatively 
analyze the performance of protocols that combine secret 
and  public  key  cryptography.  The  application  of  this 
analysis  technique  to  a  broader  range  of  protocols  will 
also be the topic of future research. 
7. References 
[I]  Needham, R.M. and M.D. Schroeder, Using 
encyption for authentication in large networks of 
computers. Communications of the ACM,  1978. 
21(December  1978): p. 993-999. 
Kohl, J., The Kerberos Network Authentication 
[2] 
Service (VS), C. Neuman, Editor.  1993: 
http://www.ietf.org/rfc/rfc 15 1 O.txt?number= 15 10. 
[3]  Kaufman, C., R. Perlman, and M. Speciner, 
Network Security, Private Communication in a Public 
World. 1995, Englewood Cliffs, New Jersey: PTR 
Prentice Hall. 
Schneier, B., Applied Cryptography. Second ed. 
[4] 
1996, New York: John Wiley & Sons, Inc. 758. 
Ashely, P. and B. Broom, A Survey of Secure 
[5] 
Multi-Domain Distributed  Architectures, 1997, 
Queensland University of Technology, Faculty of 
Information Technology. 
RSA, S., Understanding Public Key Infrastructure 
[6] 
(PKI), 1999, RSA Security Inc. 
[7]  Tung, B., et al., Public Key Cryptography for 
Initial Authentication in Kerberos, January  15,2001 
(expiration): http://www.ietf.org/internet-drafts/draft-ietf- 
cat-kerberos-pk-init- 12.txt. 
[8]  Tung, B., et al., Public Key Cryptography for 
Cross-Realm Authentication in Kerberos, 1998: 
http://www.internic.net/internet-drafts/draft-ietf-cat- 
derberos-pk-cross-03.txt. 
Medvinsky, A., et al., Public Key Utilizing Tickets 
[9] 
for Application Servers (PKTAPP), 1997: 
http://www.ietf.org/internet-drafts/draft-ietf-cat-kerberos- 
pk-tapp-03.txt. 
[IO]  Sirbu, M.A. and J.C.-I. Chuang. Distributed 
Authentication  in Kerberos Using Public Key 
Cryptography. in Symposium on Network and 
Distributed System Security. 1997. San Diego, 
California: IEEE Computer Society Press. 
[l 11  Bruell, S.C. and G. Balbo, Computational 
Algorithms for Closed Queuing Networks. The Computer 
Science Library, ed. P.J. Denning.  1980, New York: 
Elsevier North Holland, Inc. 
[ 121  Gross, D. and C.M. Harris, Fundamentals of 
Queuing Theory. Third ed. 1998, New York: John Wiley 
& Sons. Inc. 439. 
[13]  Baskett, F., et al., Open, Closed, and Mixed 
Networks of Queues with Different Classes of Customers. 
J. ACM, 1975.22(2). 
182 
[ 141  Menasce, D.A., V.A.F. Almeida, and L. Dowdy, 
W., Capacity Planning and Performance Modeling. 
1994, Englewood Cliffs, New Jersey: Prentice-Hall, Inc. 
[ 151  Johnson., M., North American Cryptography 
Archives, October 26, 2000 (last accessed): 
http://cryptography.org/cgi-bin/noexport.cgi. 
[ 161  Karn, P., Index of /cryptocd/source/cyphers/des/c/ 
karn, October 26, 2000 (last accessed): http://www 
.cryptocd. org/cryptocd/source/cyphers/des/ckarn/. 
[ 171  Standard, P.E.C., SPEC CPU95 Benchmarks, July 
2000: http://www.spec.org/osg/cpu95/. 
[23]  Zorkadis, V. Security versus Pe~ormance 
Requirements in Data Communications Systems.  1994. 
[24]  OpenGroup, Distributed Computing Environment, 
1998, http://www.camb.opengroup.org/dce/. 
[25]  OpenGroup, DCE 1. I :  Authentication and Securir): 
Services, 1997: http://www.opengroup.org/publications/ 
catalog/c3 1 1 .htm. 
[26]  Martinka, J., et al. A Performance Study of DCE 
1.0.1 Cell Directory Service: Implications for 
Application and Tool Programmers. in Lecture notes in 
computer science.  1993. 
[ 181  Menasce, D.A. and V.A.F. Almeida, Capacir): 
Planning for Web Performance.  1998: Prentice-Hall Inc. 
[27]  Stallings, W., Kerberos Keeps the Enterprise 
Secure, in Data Communications.  1994. p.  103-1 1 1. 
[ 191  Bosselaers, A., Fast Implementations on the 
Pentium, in http://www,esat.kuleuven.ac.be/- 
bosslae/fast. html. 
[28]  Apostolopoulos, G., V. Peris, and D. Saha. 
Transport Layer Securit): How much does it really cost? 
in IEEE INFOCOM. 1999. 
[20]  Schneier, B., et al., Performance  Characteristics of 
the AES Submission,  1999. 
[21]  :Bassham, L.E., Eficiency Testing ofANSI C 
Implementations of Round 1 Candidate Algorithms for 
the Advanced Encryption Standard, 1999, Computer 
Security Division, Information Technology Laboratory, 
National Institute of Standards and Technology. 
[22]  Blaze, M., High-Bandwidth Encryption with Low- 
Bandwidth Smartcards. Lecture Notes in Computer 
Science, 1996. Number 1039. 
[29]  Menasce, D.A. and V.A.F. Almeida, Scaling for E- 
Business: Technologies, Models, Performance, and 
Capacity Planning. 2000: Prentice Hall. 
[30]  Lambert, P., Elliptic Curve Cryptography  Delivers 
High Performance and SecuriQ for E-commerce. 
Computer Security Journal, 1998. XIV(4): p. 23-29. 
[3 1 J  Harbitter, A. and D. Mensasce. Performance Issues 
in Large Distributed System Security. in Computer 
Measurement Group 98. 1998. Anaheim, CA. 
183