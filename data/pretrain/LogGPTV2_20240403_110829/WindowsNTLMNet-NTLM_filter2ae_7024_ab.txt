默认是0xe2898215(跟图里面不一样?大端小端)
NTLMSSPNEGOTIATEEXTENDED_SESSIONSECURITY对应的是第13位，改为0，也就是0xe2818215
改下就行
http的话在packets.py里面的NTLM_Challenge类里面
Responder的NTLM SSP没有通用性，这个挺难受的，其他协议的话，大家自己找吧。跟下代码挺快的。
###  2\. Net-NTLM v2的破解
Net-NTLM v2 现在也没有什么比较好用的破解方式，一般就是利用hashcat 离线爆破明文密码，能不能跑出来就看字典里面有没有了。
使用hashcat进行字典破解
    hashcat -m 5600  win10::TEST:1122334455667788:622DED0816CFF5A0652209F20A7CF17A:0101000000000000C0653150DE09D201532C07A7DEE654B8000000000200080053004D004200330001001E00570049004E002D00500052004800340039003200520051004100460056000400140053004D00420033002E006C006F00630061006C0003003400570049004E002D00500052004800340039003200520051004100460056002E0053004D00420033002E006C006F00630061006C000500140053004D00420033002E006C006F00630061006C0007000800C0653150DE09D2010600040002000000080030003000000000000000010000000020000067840C88904F15E659858A3CBA35EBEF61A38EC88C5E3D26B968F1C20C9ACAC10A001000000000000000000000000000000000000900220063006900660073002F003100370032002E00310036002E003100300030002E0031000000000000000000 /tmp/password.dic --force
## 0x02 Relay
在Net-NTLM Hash的破解里面，如果是v1的话，拿到Net-NTLM就相当于拿NTLM
HASH.这个时候就没有Relay的必要性了，但是在实际中遇到的例子往往不会是v1，而是v2。这个时候密码强度高一点，基本就跑不出来了，这种情况底下，不妨试一试Relay。
###  1\. Relay2SMB
能直接relay到smb服务器，是最直接最有效的方法。可以直接控制该服务器(包括但不限于在远程服务器上执行命令，上传exe到远程命令上执行，dump
服务器的用户hash等等等等)。
主要有两种场景
  1. 工作组环境
这个实用性比较差。在工作组环境里面，工作组中的机器之间相互没有信任关系，每台机器的账号密码Hash只是保存在自己的SAM文件中，这个时候Relay到别的机器，除非两台机器的账号密码一样(如果账号密码一样，我为啥不直接pth呢)，不然没有别的意义了，这个时候的攻击手段就是将机器reflect回机子本身。因此微软在ms08-068中对smb
reflect到smb 做了限制。这个补丁在CVE-2019-1384(Ghost Potato)被绕过。将在下篇文章里面详细讲。
  2. 域环境
域环境底下域用户的账号密码Hash保存在域控的
ntds.dit里面。如下没有限制域用户登录到某台机子，那就可以将该域用户Relay到别人的机子，或者是拿到域控的请求，将域控Relay到普通的机子，比如域管运维所在的机子。(为啥不Relay到其他域控，因为域内就域控默认开启smb签名)
下面演示使用几款工具在域环境底下，从域控relay到普通机器执行命令
  1. impacket 的底下的smbrelayx.py
  2. impacket 的底下的ntlmrelayx.py
  3. Responder底下的MultiRelay.py
###  2\. Relay2EWS
Exchange的认证也是支持NTLM
SSP的。我们可以relay的Exchange，从而收发邮件，代理等等。在使用outlook的情况下还可以通过homepage或者下发规则达到命令执行的效果。而且这种Relay还有一种好处，将Exchange开放在外网的公司并不在少数，我们可以在外网发起relay，而不需要在内网，这是最刺激的。
下面演示通过[NtlmRelayToEWS](https://github.com/Arno0x/NtlmRelayToEWS.git)(事实上，工具挺多的。其他的大家可以上github自己找)来实现Relay2ews
配合homepage 能够实现命令执行的效果
homepage的简易demo代码如下
    Outlook
放置于web服务器。在[NtlmRelayToEWS](https://github.com/Arno0x/NtlmRelayToEWS.git)
里面通过-u 参数指定。
###  3\. Relay2LDAP
不管是杀伤力巨大的8581还是1040。Relay到ldap都在里面发挥着巨大的作用。
relay 到ldap的话，能干嘛呢
这里着重介绍三种通用性比较强的利用思路。这三种在impacket里面的ntlmrelayx都有实现。(这三种通用性比较强而已，实际中这个的利用比较灵活，需要通过
nTSecurityDescriptor分析用户在域内对哪些acl有权限，什么权限。关于acl怎么深入利用,这里不再展开，后面在ldap篇会详细说明)
  1. 高权限用户
如果NTLM发起用户在以下用户组
  * Enterprise admins
  * Domain admins
  * Built-in Administrators
  * Backup operators
  * Account operators
那么就可以将任意用户拉进该组，从而使该用户称为高权限用户，比如域管
  2. write-acl 权限
如果发起者对域有write-acl 权限，那么就可以在域内添加两台acl
    'DS-Replication-Get-Changes'     = 1131f6aa-9c07-11d1-f79f-00c04fc2dcd2
    'DS-Replication-Get-Changes-All' = 1131f6ad-9c07-11d1-f79f-00c04fc2dcd2
acl的受托人可以是任意用户，从而使得该用户可以具备dcsync的权限
这个案例的典型例子就是Exchange Windows Permissions组，我们将在下一篇介绍8581的 时候详细说下这个用户组的权限。
  3. 普通用户权限
在server2012r2之后，如果没有以上两个权限。可以通过设置基于资源的约束委派。
在NTLM发起者属性msDS-AllowedToActOnBehalfOfOtherIdentity里面添加一条ace,可以让任何机器用户和服务用户可以控制该用户(NTLM发起者)。
## 0x03 引用
[LM-Hash、NTLM-Hash、Net-NTLMv1、Net-NTLMv2详解](http://d1iv3.me/2018/12/08/LM-Hash%E3%80%81NTLM-Hash%E3%80%81Net-NTLMv1%E3%80%81Net-NTLMv2%E8%AF%A6%E8%A7%A3/)
[The NTLM Authentication Protocol and Security Support
Provider](http://davenport.sourceforge.net/ntlm.html)