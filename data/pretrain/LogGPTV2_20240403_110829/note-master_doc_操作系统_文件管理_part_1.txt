# 文件管理
长期存储信息的三个基本要求
- 能够存储大量信息
- 使用信息的进程终止时，信息仍旧存在
- 信息能够并发访问
## 磁盘
### 磁盘接口
- IDE
（ATA）全称 Advanced Technology Attachment，接口速度最大为 133MB/s，因为并口线的抗干扰性太差，且排线占用空间较大，不利电脑内部散热，已逐渐被 SATA 所取代
![202033194510](/assets/202033194510.jpg)
- SATA
全称 Serial ATA，也就是使用串口的 ATA 接口，抗干扰性强，且对数据线的长度要求比 ATA 低很多，支持热插拔等功能。SATA-II 的接口速度为 300MiB/s，而 SATA-III 标准可达到 600MiB/s 的传输速度。SATA 的数据线也比 ATA 的细得多，有利于机箱内的空气流通，整理线材也比较方便
![202033194618](/assets/202033194618.jpg)
- SCSI
全称是 Small Computer System Interface（小型机系统接口），SCSI 硬盘广为工作站以及个人电脑以及服务器所使用，因此会使用较为先进的技术，如碟片转速 15000rpm 的高转速，且传输时 CPU 占用率较低，但是单价也比相同容量的 ATA 及 SATA 硬盘更加昂贵
![202033194731](/assets/202033194731.jpg)
- SAS
Serial Attached SCSI是新一代的 SCSI 技术，和 SATA 硬盘相同，都是采取序列式技术以获得更高的传输速度，可达到 6Gb/s。此外也通过缩小连接线改善系统内部空间等
![202033194821](/assets/202033194821.jpg)
## 文件
### 文件命名
一些常见的文件系统：
- FAT-16
- FAT-32
- exFAT
- NTFS
- ReFS
操作系统对文件的命名规则大多允许1-8个字母组成，并且根据约定，有的使用点号分割文件名与扩展名
在部分操作系统中，扩展名不是必须的
### 文件结构
- 字节序列
- 记录序列：以特定的长度管理字符，称之为一个记录，很像数据库的表结构
- 树
![三种文件结构](/assets/20211228164952.png)
### 文件类型
- 普通文件
- 目录
![20211228165029](/assets/20211228165029.png)
### 文件访问
- 顺序访问 read
- 随机访问 lseek
### 文件属性
- 文件的元数据
文件属性        | 意义
----------- | ---------------
保护          | 谁能访问该文件，以何种方式访问
密码          | 访问该文件需要的密码
创立者         | 创立该文件的用户的ID
拥有者         | 文件当前的拥有者
只读标志        | 0读写访问;1只读.
隐藏标志        | 0正常文件; 1隐藏文件
系统标志        | 0正常文件; 1系统文件
归档标志        | 0已经备份; 1需要备份
ASCIIV二进制标志 | 0文本文件; 1二进制文件
随机访问标志      | 0顺序访问; 1随机访问
临时文件标志      | 0正常文件; 1临时文件
锁标志         | 0释放状态;非零锁住状态
记录长度        | 一个记录包含的字节数
关键字位置       | 记录里关键字所处的位移量
关键字长度       | 关键字所占字节数
文件创立时间      | 文件创立的日期和时间
最后访向时间      | 文件最后被访问的日期和时间
最后修改时间      | 文件最后修改的日期和时间
当前文件大小      | 文件所占的字节数
文件最大尺寸      | 文件可达到的最大字节数
### 文件操作
- create
- delete
- open
- close
- read
- write
- append
- seek
- get attrs
- set attrs
- rename
### 使用文件系统调用
一个简单的C语言程序：
```c
int main(){
  FILE *fp;
  char c = -1;
  fp = fopen("./file.c","r");
  while ((c = fgetc(fp)) != -1){
    putchar(c);
  }
  fclose(fp);
  return 0;
}
```
## 目录
### 一级目录系统
实现简单，用在嵌入式系统上
![批注 2020-07-31 155012](/assets/批注%202020-07-31%20155012.png)
### 层次目录系统
![批注 2020-07-31 155041](/assets/批注%202020-07-31%20155041.png)
### 路径名
- 绝对路径
- 相对路径
- 工作目录：对当前程序来说 使用一个状态变量记录的一个目录 这样就可以方便地使用相对路径
### 目录操作
- create
- delete
- opendir
- closedir
- readdir
- rename
- link
- unlink
## 文件系统的实现
一个分区通常只能格式化成一个文件系统，但使用磁盘阵列技术可以将一个分区格式化为多个文件系统
### 文件系统布局
![文件系统布局](/assets/202242821236.jpg)
![20203320634](/assets/20203320634.png)
除了MBR 不同的文件系统分区的布局也不同