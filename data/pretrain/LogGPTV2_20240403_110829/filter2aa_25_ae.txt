监听端口（这里以火狐浏览器为例）。
图4-1 暴力破解测试流程图
（1）打开火狐浏览器，在页面中单击右上角的“打开菜单”按钮，然后在下拉框中单
击“选项”按钮进入火狐浏览器选项页面，如图4-2所示。
图4-2 进入火狐浏览器选项功能页面
（2）在火狐浏览器选项页面中单击“高级”按钮，选择“网络”选项卡，在连接项中单
击“设置”按钮，进入火狐浏览器“连接设置”界面，如图4-3所示。
图4-3 进入火狐浏览器“连接设置”界面
（3）进入“连接设置”界面后将连接方式选择为“手动配置代理”，在  HTTP代理框中
填写“127.0.0.1”，在端口框中填写“8080”，最后单击“确定”按钮确定配置信息，如图4-4所
示。
图4-4 配置火狐浏览器代理参数
步骤二：使用  Burp  Suite  工具获取浏览器登录请求，并将登录请求数据发送至
Intruder选项卡中（这里使用Burp Suite 1.7.11版本）。
（1）在Burp  Suite页面中选择“Proxy”选项卡，然后再次选择“Intercept”子选项卡，在
该选项卡界面中将“Intercept”按钮设置为“Intercept  is  on”，此时火狐浏览器发送的请求数
据会被Burp Suite工具截断，如图4-5所示。
图4-5 将Burp Suite工具中Proxy模块数据包拦截功能开启
从图4-5我们可以看到Proxy的Intercept选项卡中对应有四个选项按钮，下面分别来讲
解一下。
· Forward：将当前Proxy拦截到的数据包进行转发。
· Drop：将当前Proxy拦截到的数据包进行丢弃。
·  Intercept  is  on：单击之后，将关闭Burp  Suite的拦截功能。但是所有HTTP请求还是
经过Burp Suite，我们可以在HTTP history选项卡中看到。
· Action：我们可以进行其他更多的操作，发送到 Intruder 等其他 Burp Suite模块，以
便进行重复测试或者暴力破解。（2）在火狐浏览器中填写要暴力破解的账号信息及任意
密码信息，单击“确定”按钮提交信息，如图4-6所示。
图4-6 输入将要暴力破解账号口令并提交
（3）当火狐浏览器将登录请求数据提交后，会被Burp  Suite  Proxy模块截断，在截断
数据界面中使用鼠标右击，在弹出菜单中选择“Send to Intruder”，Burp Suite会将该请求数
据分发给Intruder模块，如图4-7所示。
图4-7 截获浏览器请求数据并将请求数据分发给Intruder模块
步骤三：使用Burp  Suite工具中的Intruder模块进行破解参数配置，运行破解任务并成
功破解系统账号口令。
（1）在Intruder模块中选择Positions选项卡，单击“Clear”按钮清除相关默认参数值前
后的“§”标记符号，如图4-8所示。
图4-8 在Intruder模块中的Positions选项卡中清除默认参数值标记
（2）用鼠标选中请求数据页面中的password参数值（所要进行暴力破解的密码
值），并单击“Add §”按钮进行位置标记，如图4-9所示。
（3）选择Payloads选项卡，然后单击“Load  items  form  file”，在弹出对话框中选择暴
力破解密码文件并单击“打开”按钮，将破解密码列表导入后单击“Start  attack”按钮开始暴
力破解测试，如图4-10所示。
（4）在暴力破解测试窗口“Intruder attack 1”中可根据Length属性值长度的不同来判断
暴力破解密码是否成功，也可通过查看Response返回信息或者Status返回状态的不同来判
断破解密码是否成功，如图4-11所示。
图4-9 选择并标记所要暴力破解的参数值
图4-10 导入暴力破解密码文件并运行暴力破解测试
图4-11 根据返回结果判断暴力破解密码是否成功
（5）通过Burp  Suite工具暴力破解成功的密码来尝试系统登录（本系统为作者自己搭
建的系统），如图4-12所示。
图4-12 通过Burp Suite工具暴力破解成功的密码来尝试登录
4.1.3 修复建议
（1）增加验证码，登录失败一次，验证码变换一次。
（2）配置登录失败次数限制策略，如在同一用户尝试登录的情况下，5  分钟内连续
登录失败超过6次，则禁止此用户在3小时内登录系统。
（3）在条件允许的情况下，增加手机接收短信验证码或邮箱接收邮件验证码，实现
双因素认证的防暴力破解机制。
4.2 本地加密传输测试
4.2.1 测试原理和方法
本机加密传输测试是针对客户端与服务器的数据传输，查看数据是否采用 
SSL
（Security Socket Layer，安全套接层）加密方式加密。
4.2.2 测试过程
测试验证客户端与服务器交互数据在网络传输过程中是否采用  SSL  进行加密处理，
加密数据是否可被破解。测试流程如图4-13所示。
图4-13 本地加密传输测试流程图
步骤一：使用Wireshark网络抓包工具，选择与公网连接的本地网卡并开启对网卡流
量数据的捕获功能，如图4-14所示。
图4-14 使用Wireshark网络抓包工具对本地网卡进行数据捕获
步骤二：在浏览器中访问要测试的HTTPS协议网站，并输入用户名及密码进行登录
操作，如图4-15所示。
图4-15 在Wireshark捕获状态下对HTTPS测试网站进行登录操作
步骤三：在Wireshark工具捕获流中找到对应HTTPS测试网站登录的请求数据包，对
该请求包内容进行分析，判断测试网站交互数据是否真正加密，如图4-16所示。
图4-16 在Wireshark工具捕获流中找到对应HTTPS测试网站并查看数据是否加密
4.2.3 修复建议
在架设Web应用的服务器上部署有效的SSL证书服务。
4.3 Session测试
4.3.1 Session会话固定测试
4.3.1.1 测试原理和方法
Session  是应用系统对浏览器客户端身份认证的属性标识，在用户退出应用系统时，
应将客户端Session认证属性标识清空。如果未能清空客户端Session标识，在下次登录系
统时，系统会重复利用该Session标识进行认证会话。攻击者可利用该漏洞生成固定
Session会话，并诱骗用户利用攻击者生成的固定会话进行系统登录，从而导致用户会话
认证被窃取。
4.3.1.2 测试过程
在注销退出系统时，对当前浏览器授权SessionID值进行记录。再次登录系统，将本
次授权 SessionID 值与上次进行比对校验。判断服务器是否使用与上次相同的SessionID 值
进行授权认证，若使用相同 SessionID 值则存在固定会话风险。测试流程如图4-17所示。
图4-17 Session会话固定测试流程图
步骤一：在已登录授权认证的页面中单击“退出系统”，如图4-18所示。
图4-18 单击并退出已登录授权认证的系统
步骤二：使用Burp 
Suite工具对本次退出系统的请求数据进行截取，对本次授权的
SessionID进行记录备份，如图4-19所示。
图4-19 在退出系统前抓包将SessionID值进行记录备份
步骤三：退出系统后，再次重新登录系统，如图4-20所示。
图4-20 退出系统后再次重新登录系统
步骤四：使用Burp  Suite工具对本次登录授权请求数据进行截取，并将本次登录与上
次登录的授权SessionID值进行比较，判断是否相同，如图4-21所示。
图4-21 将两次登录SessionID值进行判断对比
4.3.1.3 修复建议
在客户端登录系统时，应首先判断客户端是否提交浏览器的留存Session认证会话属
性标识，客户端提交此信息至服务器时，应及时销毁浏览器留存的Session认证会话，并
要求客户端浏览器重新生成Session认证会话属性标识。
4.3.2 Seesion会话注销测试
4.3.2.1 测试原理和方法
Session  是应用系统对浏览器客户端身份认证的属性标识，在用户注销或退出应用系
统时，系统应将客户端Session认证属性标识清空。如果未能清空Session认证会话，该认
证会话将持续有效，此时攻击者获得该Session认证会话会导致用户权限被盗取。
4.3.2.2 测试过程
该项测试主要在用户注销退出系统授权后，判断授权认证SessionID值是否依然有
效。若授权认证SessionID依然有效则存在风险。测试流程如图4-22所示。
图4-22 Seesion会话注销测试流程图
步骤一：对已登录授权的系统页面使用Burp  Suite工具进行请求数据截取，将数据包
中Session认证参数值进行保存记录，如图4-23、图4-24所示。
图4-23 已登录授权的系统页面
图4-24 使用Burp Suite 工具截取登录认证Session信息并进行保存记录
步骤二：在数据截取窗口中使用鼠标右击，在弹出菜单中选择“Send  Repeater”，将请
求数据发送至Repeater模块中，如图4-25所示。
图4-25 将请求数据信息转发至Repeater模块中
步骤三：在已授权的页面中退出系统，如图4-26所示。
图4-26 在系统授权页面中退出系统
步骤四：在Repeater模块相应授权数据信息页面中单击“GO”按钮，再次发送授权访问
请求并查看系统是否对退出后的用户授权Session进行解除授权，如图4-27所示。
图4-27 在用户退出系统后再次使用原先的Session访问系统要求重新登录
4.3.2.3 修复建议
在用户注销或退出应用系统时，服务器应及时销毁Session认证会话信息并清空客户
端浏览器Session属性标识。
4.3.3 Seesion会话超时时间测试
4.3.3.1 测试原理和方法
在用户成功登录系统获得Session认证会话后，该Session认证会话应具有生命周期，
即用户在成功登录系统后，如果在固定时间内（例如10分钟）该用户与服务器无任何交互
操作，应销毁该用户Session认证会话信息，要求用户重新登录系统认证。
4.3.3.2 测试过程
对系统会话授权认证时长进行测试，并根据系统承载的业务需求来分析判断当前系统
会话授权认证时间是否过长。测试流程如图4-28所示。
图4-28 Session会话超时时间测试流程图
步骤一：对已登录授权的系统页面使用Burp  Suite工具进行请求数据截取，将数据包
中Session认证参数值进行保存记录，如图4-29、图4-30所示。
图4-29 已登录授权的系统页面
图4-30 使用Burp Suite工具截取登录认证Session信息并进行保存记录
步骤二：在数据截取窗口中使用鼠标右击，在弹出菜单中选择“Send  Repeater”，将请
求数据发送至Repeater模块中，如图4-31所示。
图4-31 将请求数据信息转发至Repeater模块中
步骤三：在此后30分钟内不再使用该授权会话与服务器进行交互访问。30分钟过后在
Repeater  模块相应授权数据信息页面中单击“GO”按钮，再次发送授权访问请求并查看系
统返回结果是否存在授权后可查阅的特殊信息，如图4-32、图4-33所示。
图4-32 对授权成功的Session值进行首次访问
图4-33 时隔30分钟后再次发送请求（系统仍然返回用户特殊信息）
4.3.3.3 修复建议
对每个生成的Session认证会话配置生命周期（常规业务系统建议30分钟内），从而
有效降低因用户会话认证时间过长而导致的信息泄露风险。
4.4 Cookie仿冒测试
4.4.1 测试原理和方法
服务器为鉴别客户端浏览器会话及身份信息，会将用户身份信息存储在  Cookie中，
并发送至客户端存储。攻击者通过尝试修改Cookie中的身份标识，从而达到仿冒其他用户
身份的目的，并拥有相关用户的所有权限。
4.4.2 测试过程
对系统会话授权认证Cookie中会话身份认证标识进行篡改测试，通过篡改身份认证标
识值来判断能否改变用户身份会话。测试流程如图4-34所示。
图4-34 Cookie仿冒测试流程图
步骤一：使用leifeng账号登录系统并进行浏览器页面刷新，如图4-35所示。
图4-35 使用学生账号leifeng登录系统
步骤二：使用Burp 
Suite工具对本次页面刷新请求数据进行截取，并将请求数据
Cookie中的userid值修改为“admin”进行提交，如图4-36所示。
图4-36 再次刷新页面并抓包将Cookie中userid身份认证标识进行篡改
步骤三：查看提交后的返回信息，账号身份授权被修改，如图4-37所示。
图4-37 通过篡改userid身份标识改变登录系统人员身份信息
4.4.3 修复建议
建议对客户端标识的用户敏感信息数据，使用Session会话认证方式，避免被他人仿
冒身份。
4.5 密文比对认证测试