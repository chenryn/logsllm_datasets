be replaced by the following speciﬁc one [10, 7]. Let
g2, g3 be random generators of G. Then we deﬁne the
function F : Zq → G as F (y)
2 · g3, where ˜y
is a ﬁxed one-to-one representation of y in Zq. (An
additional hash function can be included in the public
key to implement this one-to-one mapping from y to
˜y.) For simplicity, we will write y instead of ˜y.
def
= g ˜y
To change from scheme ΠRO to scheme Π only the en-
cryption algorithm changes as:
Encryption (Enc): On input pk and message m ∈ GT , do:
1. Select a one-time signature keypair as G(1k) → (svk , ssk ).
2. Select a random r ∈ Zq and compute
Set A = svk .
D = F (svk )r = (gsvk
B = pk r
· g3)r
2
, C = e(g, H(svk ))r · m,
, E = hr.
3. Run the signing algorithm S(ssk , (C, D, E)), where the
message is (C, D, E), and denote the signature S.
4. Output the ciphertext (A, B, C, D, E, S).
Eﬃciency comparison of Π and ΠRO. Scheme Π remains
surprisingly eﬃcient compared to ΠRO. It requires two ad-
ditional elements from G in the global parameters. The cost
to compute a ciphertext also increases by two multi-base
exponentiations in G to cover the hashes.
We are now ready to present our main result. Removing
oracle H is rather straight-forward, because H was only pro-
grammed on one point in the proof of Theorem 3.3. Canetti,
Halevi, and Katz [10] present one method of designing a uni-
versal one-way hash function that satisﬁes a series of poly-
nomial constraints, i.e., pairs (x, y) such that H(x) = y.
Removing oracle F , however, is more involved, because F
was programmed for exponentially many points. In particu-
lar, the proof of Theorem 3.3 required that: (1) F satisﬁed
one (x, y) constraint and (2) that for all other inputs z (cid:54)= x,
the discrete log of F (z) base g was known to the party B
playing the security game with the adversary. In scheme Π,
we specially designed a function F such that: (1) F satis-
ﬁes one constraint (x, y) and (2) such that together with the
other parts of the ciphertext, B can compute the necessary
information related to F (z) base g for all inputs z (cid:54)= x.
Theorem 3.5. If the DBDH assumption holds in (G, GT ),
then scheme Π is Bidirectional PRE-CCA secure for domain
GT of messages in the standard model.
Proof sketch. We now describe how to modify the proof of
Theorem 3.3 to our new scheme without random oracles by
specifying a diﬀerent algorithm B, with black-box access to
A, that succeeds in breaking the mDBDH assumption with
probability: Pr[B breaks mDBDH] ≥
1/2 + Pr[A breaks Π]/2 − Pr[A breaks Sig] − qO · δ,
where A makes qO oracle queries and δ is the maximum
probability that any given veriﬁcation key is output by G
(which by assumption is negligible.)
On mDBDH input (g, ga, gb, gc, Q), where B’s goal is to
decide if Q = e(g, g)ab/c or not, B sets up the global pa-
rameters for A as follows: B runs G(1k) → (svk∗, ssk∗).
Next, B sets the generators h = gcw, g2 = gα1 , and g3 =
g−α1svk∗ · gcα2 for a randomly chosen w, α1, α2 ∈ Zq. Fi-
nally, B samples a pairwise independent hash function H ∈
H such that H(svk∗) = ga. The system parameters are
(q, g, G, GT , e, h, g2, g3, H). B runs G(1k) → (svk∗, ssk∗),
and remembers these values. Oracle queries from A to Orkey
are handled the same as in the proof of Theorem 3.3. The
other oracles behave as follows:
• Key Generation: B chooses a random xi ∈ Zq. If user
i is uncorrupted, then B outputs pk i = (gc)xi = gcxi .
Else, B sets sk i = xi, pk i = gxi , and outputs (pk i, sk i).
• Decryption: On input (i, K) to Odec, if Check (K, pk i) =
0, then the ciphertext is not well-formed, so B halts
and returns ⊥. Next, B checks that A (cid:54)= svk∗ and
aborts if this is false. Otherwise, B proceeds as follows.
Notice that in a well-formed ciphertext, B = pk r
i and
D = F (A)r for the same value of r ∈ Zq. B decrypts
the ciphertext by computing
t =
, λ =
1
α1(A − svk∗)
.
D
α2
xi
B
Then, B outputs the message C/e(tλ, H(A)).
Note that when A (cid:54)= svk∗, then B can solve for tλ = gr:
t =
F (A)r
α2
xi
(pk r
i )
=
grA
2 gr
3
rα2
xi
=
i
pk
grα1(A−svk∗)+rcα2
grcα2
(gα1 )rA(g−α1svk∗+cα2 )r
=
rα2
xi
(gcxi )
= grα1(A−svk∗).
• Re-Encryption: On input (i, j, K) to Orenc, if the value
Check (K, pk i) = 0, then the ciphertext is not well-
formed, so B halts and returns ⊥. Otherwise, B parses
K = (A, B, C, D, E, S).
– If both users i and j are uncorrupted or both
are corrupted, B computes the re-encryption key
xj/xi and executes the algorithm ReEnc(xj/xi, K).
– If user i is corrupted and user j is uncorrupted,
then B computes Exj /w = hrxj /w = gcwrxj /w =
gcrxj = pk r
i ) and outputs
(A, B(cid:48), C, D, E, S).
– If user i is uncorrupted and user j is corrupted,
if A = svk∗, then B outputs ⊥. Otherwise, B
solves for gr as it does in decryption (where B =
j = B(cid:48) and outputs
pk r
(A, B(cid:48), C, D, E, S).
j = B(cid:48) (where B = pk r
i ), computes grxj = pk r
• Challenge: At some point, A will output a challenge
(i, m0, m1), where i is the index of an honest user. B
responds choosing a random d ∈ {0, 1} and setting:
∗
A = svk
C = Q · md
E = (gb)w = hb/c
, B = (gb)xi = pk b/c
,
, D = (gb)α2 = (gsvk∗
, S = Sssk∗ (C, D, E).
2
i
· g3)b/c,
• Decision: Finally, A will output a guess d(cid:48) ∈ {0, 1}.
If d = d(cid:48), then B outputs 1 (i.e., mDBDH instance),
otherwise B outputs 0 (i.e., not an mDBDH instance).
This ends our description of B. The analysis follows the
previous proof. (Omitted for space reasons.)
The following is immediate from Theorems 2.9 and 3.5.
Corollary 3.6. If the DBDH assumption holds in (G, GT ),
then bidirectional re-encryption scheme Π is non-adaptively,
weakly UC-secure with respect to Deﬁnition 2.7.
4. ACKNOWLEDGMENTS
We thank Matt Green, Manoj Prabhakaran and Shengbao
Wang for helpful comments and discussions.
5. REFERENCES
[1] Giuseppe Ateniese, Kevin Fu, Matthew Green, and
Susan Hohenberger. Improved Proxy Re-encryption
Schemes with Applications to Secure Distributed
Storage. In NDSS, pages 29–43, 2005.
[2] Giuseppe Ateniese, Kevin Fu, Matthew Green, and
Susan Hohenberger. Improved Proxy Re-encryption
Schemes with Applications to Secure Distributed
Storage. ACM TISSEC, 9(1):1–30, Feb 2006.
[3] Boaz Barak, Ran Canetti, Jesper Buus Nielsen, and
Rafael Pass. Universally composable protocols with
relaxed set-up assumptions. In FOCS ’04, pages
186–195, 2004.
[4] Boaz Barak, Oded Goldreich, Russell Impagliazzo,
Steven Rudich, Amit Sahai, Salil P. Vadhan, and
Ke Yang. On the (im)possibility of obfuscating
programs. In CRYPTO, vol. 2139, pages 1–18, 2001.
[5] Matt Blaze, Gerrit Bleumer, and Martin Strauss.
Divertible protocols and atomic proxy cryptography.
In EUROCRYPT, vol. 1403, pages 127–144, 1998.
[6] Matt Blaze and Martin Strauss. Atomic proxy
cryptography. Technical report, AT&T Research, 1997.
[7] Dan Boneh and Xavier Boyen. Eﬃcient selective-ID
secure identity-based encryption without random
oracles. In EUROCRYPT ’04, vol. 3027 of LNCS,
pages 223–238, 2004.
[8] Dan Boneh and Matthew K. Franklin. Identity-Based
Encryption from the Weil Pairing. In CRYPTO ’01,
vol. 2139 of LNCS, pages 213–229, 2001.
[9] Ran Canetti. Universally composable security: A new
paradigm for cryptographic protocols. In FOCS, 2001.
See Cryptology ePrint Archive: Report 2000/067.
[10] Ran Canetti, Shai Halevi, and Jonathan Katz. A
forward-secure public-key encryption scheme. In
EUROCRYPT, vol 2656 of LNCS, pp. 255–271, 2003.
[11] Ran Canetti, Shai Halevi, and Jonathan Katz.
Chosen-ciphertext security from identity-based
encryption. In EUROCRYPT, vol. 3027 of LNCS,
pages 207–222, 2004.
[12] Ran Canetti and Susan Hohenberger.
Chosen-ciphertext secure proxy re-encryption.
Cryptology ePrint Report 2007/171, 2007.
[13] Ran Canetti, Hugo Krawczyk, and Jesper B. Nielsen.
Relaxing chosen-ciphertext security. In CRYPTO ’03,
vol. 2729 of LNCS, pages 565–582, 2003.
[14] Yevgeniy Dodis and Anca-Andreea Ivan. Proxy
cryptography revisited. In NDSS ’03, 2003.
[15] Steven D. Galbraith, Kenneth G. Paterson, and
Nigel P. Smart. Pairings for cryptographers, 2006.
Cryptology ePrint Archive: Report 2006/165.
[16] Shaﬁ Goldwasser and Yael Tauman Kalai. On the
impossibility of obfuscation with auxiliary input. In
FOCS ’05, pages 553–562, 2005.
[17] Philippe Golle, Markus Jakobsson, Ari Juels, and
Paul F. Syverson. Universal re-encryption for mixnets.
In CT-RSA, vol 2964 of LNCS, pages 163–178, 2004.
[18] Matthew Green and Giuseppe Ateniese.
Identity-based proxy re-encryption. In ACNS ’07, vol.
4521 of LNCS, pages 288–306, 2007.
[19] Jens Groth. Re-randomizable and replayable adaptive
chosen ciphertext attack secure cryptosystems. In
TCC ’04, pages 152–170, 2004.
[20] Satoshi Hada. Zero-knowledge and code obfuscation.
In ASIACRYPT, vol 1976 of LNCS, pp. 443–457, 2000.
[21] Susan Hohenberger, Guy N. Rothblum, abhi shelat,
and Vinod Vaikuntanathan. Securely obfuscating
re-encryption. In TCC, vol. 4392, pages 233–252, 2007.
[22] Markus Jakobsson. On quorum controlled asymmetric
proxy re-encryption. In PKC ’99, pages 112–121, 1999.
[23] Masahiro Mambo and Eiji Okamoto. Proxy
Cryptosystems: Delegation of the Power to Decrypt
Ciphertexts. IEICE Trans. Fund. Elect.
Communications and CS, E80-A/1:54–63, 1997.
[24] Manoj Prabhakaran and Mike Rosulek.
Rerandomizable RCCA encryption. In CRYPTO 2007.
[25] Amit Sahai and Brent Waters. Fuzzy identity-based
encryption. In EUROCRYPT, pages 457–473, 2005.
[26] Tony Smith. DVD Jon: buy DRM-less Tracks from
Apple iTunes, March 18, 2005. Available at
http://www.theregister.co.uk/2005/03/18/
itunes_pymusique.
[27] Lidong Zhou, Michael A. Marsh, Fred B. Schneider,
and Anna Redz. Distributed blinding for El Gamal
re-encryption. TR 1924, Cornell CS Dept., 2004.