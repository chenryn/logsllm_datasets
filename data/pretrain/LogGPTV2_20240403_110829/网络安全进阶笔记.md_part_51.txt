准IDEA.其中安全强度高于DES算法的如RC2及RC4算法、IDEA算法、SKIPJACK算法等。
1977年美国国家标准局正式公布实施了美国的数据加密标准DES，公开它的加密算法，并批
准用于非机密单位和商业上的保密通信。随后DES成为全世界使用最广泛的加密标准。加密
与解密的密钥和流程是完全相同的，区别仅仅是加密与解密使用的子密钥序列的施加顺序刚好
相反。但是，经过20多年的使用，已经发现DES有很多不足之处，对DES的破解方法也日
趋有效。AES将会替代DES成为新一代加密标准。
表5.1近年来出现的一些分组密码体制
分组密码
密钥组位长度（比特）
明、密文组位长度（比特）
选代次数（次）
DES（美国)
56
64
16
DES(美国)
56
64
16
FEAL8(日木)
64
64
8
LOKI(澳大利亚)
64
64
16
Khufu Khaffe(美国)
512
64
1.IDEA算法
1990年赖学家（XueJiaLai）和梅西（Massey)开发的IDEA密码首次成形，称为PES，即“建
242
---
## Page 251
三
第5章趣解加密与解密
议的加密标准”，次年，根据有关专家对这一密码算法的分析结果，设计者对该算法进行了强
化，并称之为IPES，即“改进的建议加密标准”，该算法于1992年更名为IDEA，即“国际
加密标准”
IDEA算法的密钥长度为128位。设计者尽最大努力使该算法不受差分密码分析的影响，
赖学家已证明IDEA算法在其8轮选代的第4轮之后使不受差分密码分析的影响了。假定穷举
法攻击有效的话，那么即使设计一种每秒钟可以试验10亿个密钥的专用芯片，并将10亿片这
样的芯片用于此项工作，仍需1013年才能解决问题。不过人们还无法找到足够的硅原子来制
造这样一台机器。目前，尚无一篇公开发表的试图对IDEA进行密码分析的文章。因此，就现
在来看，应当说IDEA是非常安全的。IDEA分组密码已在欧测取得专利，在美国的专利还悬
面未决，不存在非商用所需的使用许可证费用问题。
2.LOKI算法
LOKI算法作为DES的一种潜在替代算法于1990年在密码学界首次亮相。LOKI同DES
一样，以64位二进制分组加密数据，也使用64位密钥（只是其中无奇偶校验位），所有64位均
为密钥，LOKI密码公布之后，有关专家对其进行了研究破译，并证明不大于14轮的LOKI算
法极易受到差分密码分析的攻击等。不过，这仍然优于56位密钥的DES。LOKI较新的成果
版本是LOKI-91。LOKI尚未取得专利，任何人都可以使用该算法。有意在商用产品中使用设
计者基准方案的人士，可以与澳大利亚堪培拉国防学院计算机科学系西特拉德主任联系。
3.Khufu和Khafre算法
1990年由默克尔（Merhie）设计的这对算法具有较长的密钥，适合于软件实现，比较安全可
靠。Khufu算法的总体设计同DES，只是拥有512位（64字节）的密钥.Khafre算法与前者类似，
预定用于不能预先计算的场合。由于Khufu算法具有可变的S盒，可以抵抗差分密码分析的攻
击。据了解目前尚无以该算法为目标的其他密码分析成果，这对密码算法都已取得专利，算法
的原码在专利之中。对使用这对算法感兴趣的人士，可以与施乐（Xerox）公司专利许可证发放部
的彼得（Petre）主任联系。
4.FEAL-8密码
FEAL密码算法家族是日本NTT（日本电报电话公司）的清水（Shimizi）和宫口（Miyaguchi）设
计的。作为一种分组密码，与DES相比其主要想法为增加每一轮选代的算法强度，因此可以
通过减少选代次数面提高运算速度。FEAL-8即为8轮选代的FEAL密码算法。FEAL密码算
法推出之后，引起有关专家的注意。密码专家比哈姆和沙米尔利用养分密码分析技术发现，可
以用比穷举法更快的速度破译FEAL密码。如FEAL-8只需2000个选择明文即可破译，而
FEAL-4更只需8个精心选择的明文便可破译，目前，FEAL已经取得了专利。
5.4.2DES算法描述
了密码，从而把已有数千年历史的密码学推向了科学的轨道，莫定了密码学的理论基础。该文
利用数学方法对信息源、密钥源、接收和截获的密文进行了数学描述和定量分析，提出了通用
243
---
## Page 252
网络安全进阶笔记
的秘钥密码体制模型。
美国国家标准局1973年开始研究除国防部外的其他部门的计算机系统的数据加密标准，
于1973年5月15日和1974年8月27日先后两次向公众发出了征求加密算法的公告。加密算
法要达到的目的通常称为DES密码算法，要求主要为以下4点：①提供高质量的数据保护，
防止数据未经授权的泄露和未被察觉的修改：②具有相当高的复杂性，使得破译的开销超过可
能获得的利益：③又要便于理解和掌握：④密码体制的安全性应该不依赖于算法的保密，其安
全性仅以加密密钥的保密为基础，并且适用于多种完全不同的应用。
1977年1月，美国政府宣布：采纳IBM公司设计的方案作为非机密数据的正式数据加密
标准（即DataEncryption Standard）.DES算法的研究经过了6年时间（1968~1974年）。20世纪
60年代末，IBM公司在菲斯特的带领下研制出了Lucifer密码算法。1971年IBM请塔其曼和
迈耶在Lucifer密码算法的基础上进行研制，3年后他们完成了DES算法的设计和编制工作。
DES算法的入口参数有3个：Key、Data、Mode。其中Key为8个字节，共64位，是DES
算法的工作密钥：Data也为8个字节，64位，是要被加密或被解密的数据：Mode为DES的
工作方式，有两种：加密或解密。DES是一个分组加密算法，以64位为分组对数据加密。同
时DES也是一个对称算法：加密和解密用的是同一个算法。它的密钥长度是56位（因为每个第
8位都用作奇偶校验），密钥可以是任意的56位的数，而且可以在任意时候改变。其中有极少
量的数被认为是弱密钥，但是很容易避开它们。所以保密性依赖于密钥。
以下是DES算法的实现过程描述：DES对64位的明文分组进行操作，通过一个初始置换，
将明文分成左半部分和右半部分，各32位长，然后进行16轮完全相同的运算，这些运算被称
为函数f，在运算过程中数据与密钥结合。经过16轮后，左、右半部分合在一起，经过一个末
置换，这样就完成了。
在每一轮中，密钥位移位，然后再从密钥的56位中选出48位。通过一个扩展置换将数据
的右半部分扩展成48位，并通过一个异或操作替代成新的32位数据，再将其置换一次。这4
步运算构成了函数f。然后，通过另一个异或运算，函数f的输出与左半部分结合，其结果成
为新的右半部分，原来的右半部分成为新的左半部分。将该操作重复16次，就实现了，具体
如图5.28所示。
明文
K
L-Ro
RLRK)
图5.28DES算法的原理
---
## Page 253
三
第5章趣解加密与解密
1.初始置换
初始置换在第一轮运算之前执行，对输入分组实施如下所示的变换：
62.54.46.38.30.22.14.6,64,56,48,40.32.24,16.8,
61，53,45,37.29,21,13,5,63,55,47,39,31,23,15,7,
初始置换和对应的末置换并不影响DES的安全性。所以很多软件实现方式删去了初始置
换和末置换，尽管这种新的算法的安全性不比DES差，但他没有遵循DES标准，所以不叫DES。
2.密钥置换
由于不考虑每个字节的第8位，DES的密钥由64位减至56位，每个字节第8位作为奇偶
校验确保密钥不发生错误。在DES每一轮中，从56位密钥产生出不同的48位子密钥，这些
子密钥Ki由下面的方式确定。密钥置换如下所示：
57,49.41.33,25,17,9,1.58,50,42,34,26,18，
10.2,59.51.43.35.27.19.11.3.60.52,44,36,
4，
首先，56位密钥本分成了两个部分，每部分28位。然后，根据轮数，这两部分分别循环
左移1位或者2位。下面是每轮移动的轮数：
轮123456789 10111213141516
位数1122222212222221
移动后，就从56位中选出48位。因为这个运算不仅置换了每位的顺序，同时也选择了子
密钥，因而被称作压缩置换。这个运算提供了一组48位的集。如下定义了压缩置换：
23,19,:12,4,26.8,16,7,27,20,13,2,
41,52.31.37.47.55,30.40.51.45,33,48,
44,49,39,56,34,53,46.42,50,36,29,32,
因为由移动运算，在每一个子密钥中使用了不同的密钥子集的位，虽然不是所有的位在子
密钥中使用的次数都相同，但在16个子密钥中，每一位大约使用了其中14个子密钥。
3.扩展置换
这个运算将数据的右半部分Ri从32位扩展到了48位。由于这个运算改变了位的次序，
245
---
## Page 254
网络安全进阶笔记
重复了某些位，故被称为扩展置换，这个操作有两个方面的目的：它产生了与密钥通长度的数
据以进行异或运算：它提供了更长的结果，使得在替代运算时能进行压缩，由于输入的一位将
影响两个替换，所以输出对输入的依赖性将传播得更快，这叫雪崩效应。
图5.29显示了扩展置换，有时也叫E-盒。对每个4位输入分组，第1和第4位分别表示
输出分组中的两位，而第2和第3位分别表示输出分组中的一位。
1234
567
10
1112
32
48
图5.29扩展置换
如下给出了邮一位输出对应于哪一位输入：
32.1,
2，
3,
4,
5.
6.
7.
8，
9,
8,
9,
10,
11,
12,
13,
12.
13,
14.15.16.
17,
16.
17,
18,19,
20，
21.20.21.
22.23.24,25,
24,25,26,27,28,29,28,29,30.31,32,1,
尽管输出分组大于输入分组，但每一个输入分组产生唯一的输出分组。
4.S盒代替
压缩后的密钥与扩展分组异或以后，将48位的结果送入，进行代替运算。替代由8个代