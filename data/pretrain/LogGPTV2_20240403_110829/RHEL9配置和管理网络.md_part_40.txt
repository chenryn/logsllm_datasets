::: chapter
::: titlepage
# []{#assembly_managing-the-mptcpd-service_configuring-and-managing-networking.html#assembly_managing-the-mptcpd-service_configuring-and-managing-networking}第 31 章 管理 mptcpd 服务 {.title}
:::
本节介绍 `mptcpd`{.literal} 服务的基本管理。`mptcpd`{.literal}
软件包提供 `mptcpize`{.literal} 工具，该工具在 `TCP`{.literal} 环境中的
`mptcp`{.literal} 协议上切换。
::: section
::: titlepage
# []{#assembly_managing-the-mptcpd-service_configuring-and-managing-networking.html#proc_configuring-mptcpd_assembly_managing-the-mptcpd-service}配置 mptcpd {.title}
:::
`mptcpd`{.literal} 服务是 `mptcp`{.literal} 协议的一个组件，它提供对配置
`mptcp`{.literal} 端点的检测。`mptcpd`{.literal}
服务默认为每个地址创建一个子流端点。端点列表根据正在运行的主机上的 IP
地址修改动态更新。`mptcpd`{.literal}
服务自动创建端点列表。它使多个路径作为使用 `ip`{.literal}
工具的替代选择。
::: itemizedlist
**先决条件**
-   已安装 `mptcpd`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  使用以下命令在内核中启用 `mptcp.enabled`{.literal} 选项：
    ``` literallayout
    # echo "net.mptcp.enabled=1" > /etc/sysctl.d/90-enable-MPTCP.conf
    # sysctl -p /etc/sysctl.d/90-enable-MPTCP.conf
    ```
2.  启动 `mptcpd`{.literal} 服务：
    \# `systemctl start mptcp.service`{.literal}
3.  验证端点创建：
    \# `IP mptcp 端点`{.literal}
4.  要停止 `mptcpd`{.literal} 服务，请使用以下命令：
    \# `systemctl stop mptcp.service`{.literal}
5.  要手动配置 `mptcpd`{.literal} 服务，修改
    `/etc/mptcpd/mptcpd.conf`{.literal} 配置文件。
:::
请注意，端点 mptcpd 服务创建，最后一个主机关闭。
::: itemizedlist
**其他资源**
-   `mptcpd(8)`{.literal} 手册页.
:::
:::
::: section
::: titlepage
# []{#assembly_managing-the-mptcpd-service_configuring-and-managing-networking.html#proc_managing-applications-with-mptcpize-tool_assembly_managing-the-mptcpd-service}使用 mptcpize 工具管理应用程序 {.title}
:::
使用 `mptcpize`{.literal} 工具管理应用程序和服务。
以下指令演示了如何使用 `mptcpize`{.literal} 工具在 `TCP`{.literal}
环境中管理应用程序。
假设需要使用启用的 `MPTCP`{.literal} 套接字运行 `iperf3`{.literal}
工具。您可以按照以下过程来实现此目标。
::: itemizedlist
**先决条件**
-   已安装 `mptcpd`{.literal} 软件包
-   安装了 `iperf3`{.literal} 软件包
:::
::: itemizedlist
**步骤**
-   启动启用 `MPTCP`{.literal} 套接字的 `iperf3`{.literal} 工具：
    \# `mptcpize run iperf3 -s &`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_managing-the-mptcpd-service_configuring-and-managing-networking.html#proc_enabling-mptcp-sockets-for-a-services-using-the-mptcpize-utility_assembly_managing-the-mptcpd-service}使用 mptcpize 程序为服务启用 MPTCP 套接字 {.title}
:::
以下一组命令演示了如何使用 `mptcpize`{.literal}
工具管理服务。您可以为服务启用或禁用 `mptcp`{.literal} 套接字。
假设需要管理 `nginx`{.literal} 服务的 `mptcp`{.literal}
套接字。您可以按照以下过程来实现此目标。
::: itemizedlist
**先决条件**
-   已安装 `mptcpd`{.literal} 软件包
-   安装了 `nginx`{.literal} 软件包
:::
::: orderedlist
**步骤**
1.  为服务启用 `MPTCP`{.literal} 套接字：
    ``` literallayout
    # mptcpize enable nginx
    ```
2.  为服务禁用 `MPTCP`{.literal} 套接字：
    ``` literallayout
    # mptcpize disable nginx
    ```
3.  重启该服务以使更改生效：
    ``` literallayout
    # systemctl restart nginx
    ```
:::
:::
:::
[]{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#configuring-the-order-of-dns-servers_configuring-and-managing-networking}第 32 章 配置 DNS 服务器顺序 {.title}
:::
大多数应用程序使用 `glibc`{.literal} 库的 `getaddrinfo()`{.literal}
函数来解决 DNS 请求。默认情况下，`glibc`{.literal} 将所有 DNS 请求发送到
`/etc/resolv.conf`{.literal} 文件中指定的第一个 DNS
服务器。如果这个服务器没有回复，Red Hat Enterprise Linux
会使用这个文件中的下一个服务器。
这部分论述了如何自定义 DNS 服务器顺序。
::: section
::: titlepage
# []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#how-networkmanager-orders-dns-servers-in-etc-resolv-conf_configuring-the-order-of-dns-servers}NetworkManager 如何在 /etc/resolv.conf 中对 DNS 服务器进行排序 {.title}
:::
NetworkManager 根据以下规则对 `/etc/resolv.conf`{.literal} 文件中的 DNS
服务器排序：
::: itemizedlist
-   如果只有一个连接配置集，NetworkManager 将使用那个连接中指定的 IPv4
    和 IPv6 DNS 服务器顺序。
-   如果激活多个连接配置集，NetworkManager 会根据 DNS 优先级值对 DNS
    服务器进行排序。如果您设置了 DNS 优先级，NetworkManager 的行为取决于
    `dns`{.literal} 参数中设置的值。您可以在
    `/etc/NetworkManager/NetworkManager.conf`{.literal} 文件的
    `[main]`{.literal} 部分中设置此参数：
    ::: itemizedlist
    -   `DNS=default`{.literal} 或者如果没有设置 `dns`{.literal} 参数：
        NetworkManager 根据每个连接中的 `ipv4.dns-priority`{.literal} 和
        `ipv6.dns-priority`{.literal} 参数将 DNS
        服务器从不同的连接中排序。
        如果没有设置值，或者将 `ipv4.dns-priority`{.literal} 和
        `ipv6.dns-priority`{.literal} 设置为 `0，`{.literal}
        NetworkManager 将使用全局默认值。请参阅 [DNS
        优先级参数的默认值](#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#default-values-of-dns-priority-parameters_configuring-the-order-of-dns-servers "DNS 优先级参数的默认值"){.link}。
    -   `DNS=dnsmasq`{.literal} 或 `dns=systemd-resolved`{.literal} ：
        当您使用这些设置之一时，NetworkManager 将 `dnsmasq`{.literal} 的
        `127.0.0.1`{.literal} 或 `127.0.0.53`{.literal} 设置为
        `/etc/resolv.conf`{.literal} 文件中的 `nameserver`{.literal}
        条目。
        `dnsmasq`{.literal} 和 `systemd 解析的服务`{.literal}
        都转发向网络管理器(NetworkManager)连接中与该连接中指定的 DNS
        服务器连接的搜索域查询，并将查询转发到其他域与默认路由的连接。当多个连接有相同的搜索域集时，`dnsmasq`{.literal}
        和 `systemd-resolved`{.literal}
        将这个域的查询转发到连接中带有最低优先级值的 DNS 服务器。
    :::
:::
### []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#default-values-of-dns-priority-parameters_configuring-the-order-of-dns-servers}DNS 优先级参数的默认值
NetworkManager 对连接使用以下默认值：
::: itemizedlist
-   `50`{.literal} 用于 VPN 连接
-   `100`{.literal} 用于其他连接
:::
### []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#valid-dns-priority-values_configuring-the-order-of-dns-servers}有效的 DNS 优先级值：
您可以将全局默认和特定于 connection 的 `ipv4.dns-priority`{.literal} 和
`ipv6.dns-priority`{.literal} 参数设置为值 `-2147483647`{.literal} 和
`2147483647`{.literal}。
::: itemizedlist
-   低的值具有更高的优先级。
-   负值具有一个特殊的效果，它会排除其他带有更大值的配置。例如，如果至少有一个连接具有负优先级值，NetworkManager
    只使用在连接配置集中指定的具有最低优先级的 DNS 服务器。
-   如果多个连接具有相同的 DNS 优先级，NetworkManager 会按照以下顺序排列
    DNS 的优先顺序：
    ::: orderedlist
    1.  VPN 连接
    2.  带有活跃的默认路由的连接。活跃的默认路由是具有最低指标的默认路由。
    :::
:::
::: itemizedlist
**其他资源**
-   `nm-settings(5)`{.literal} man page 中的 `ipv4`{.literal} 和
    `ipv6`{.literal} 部分中的 `dns-priority`{.literal} 参数描述
-   [在不同域中使用不同的 DNS
    服务器](#using-different-dns-servers-for-different-domains_configuring-and-managing-networking.html "第 39 章 在不同域中使用不同的 DNS 服务器"){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#setting-a-networkmanager-wide-default-dns-server-priority-value_configuring-the-order-of-dns-servers}设置 NetworkManager 范围默认 DNS 服务器优先级值 {.title}
:::
NetworkManager 为连接使用以下 DNS 优先级默认值：
::: itemizedlist
-   `50`{.literal} 用于 VPN 连接
-   `100`{.literal} 用于其他连接
:::
这部分论述了如何使用 IPv4 和 IPv6
连接的自定义默认值覆盖这些系统范围的默认值。
::: orderedlist
**步骤**
1.  编辑 `/etc/NetworkManager/NetworkManager.conf`{.literal} 文件：
    ::: orderedlist
    1.  添加 `[connection]`{.literal} 部分（如果不存在）：
        ``` literallayout
        [connection]
        ```
    2.  将自定义默认值添加到 `[connection]`{.literal} 部分。例如，要将
        IPv4 和 IPv6 的新默认值设置为 `200`{.literal}，请添加：
        ``` literallayout
        ipv4.dns-priority=200
        ipv6.dns-priority=200
        ```
        您可以将参数设置为 `-2147483647`{.literal} 和
        `2147483647`{.literal} 之间的值。请注意，将 参数设置为
        `0`{.literal} 可启用内置默认值（`50`{.literal} 个用于 VPN
        连接，为其他连接 `100`{.literal} ）。
    :::
2.  重新载入 `NetworkManager`{.literal} 服务：
    ``` literallayout
    # systemctl reload NetworkManager
    ```
:::
::: itemizedlist
**其他资源**
-   `NetworkManager.conf(5)`{.literal} man page 中的 `连接`{.literal}
    部分
:::
:::
::: section
::: titlepage
# []{#configuring-the-order-of-dns-servers_configuring-and-managing-networking.html#setting-the-dns-priority-of-a-networkmanager-connection_configuring-the-order-of-dns-servers}设置网络管理器连接的 DNS 优先级 {.title}
:::
这部分论述了如何在 NetworkManager 创建或更新
`/etc/resolv.conf`{.literal} 文件时定义 DNS 服务器顺序。
请注意，只有在您配置了多个与不同 DNS 服务器的连接时，设置 DNS
优先级才有意义。如果您只有一个与多个 DNS
服务器的连接，请在连接配置集中按首选顺序手动设置 DNS 服务器。
::: itemizedlist
**先决条件**
-   系统配置了多个网络管理器连接。
-   系统在 `/etc/NetworkManager/NetworkManager.conf`{.literal}
    文件中未设置 `dns`{.literal} 参数，或者 参数设置为
    `默认值`{.literal}。
:::
::: orderedlist
**步骤**
1.  另外，还可显示可用的连接：
    ``` literallayout
    # nmcli connection show
    NAME           UUID                                  TYPE      DEVICE
    Example_con_1  d17ee488-4665-4de2-b28a-48befab0cd43  ethernet  enp1s0
    Example_con_2  916e4f67-7145-3ffa-9f7b-e7cada8f6bf7  ethernet  enp7s0
    ...
    ```
2.  设置 `ipv4.dns-priority`{.literal} 和 `ipv6.dns-priority`{.literal}
    参数。例如，为 `Example_con_1`{.literal} 连接将两个参数都设置为
    `10`{.literal} ：
    ``` literallayout
    # nmcli connection modify Example_con_1 ipv4.dns-priority 10 ipv6.dns-priority 10
    ```
3.  另外，还可为其他连接重复前面的步骤。
4.  重新激活您更新的连接：
    ``` literallayout
    # nmcli connection up Example_con_1
    ```