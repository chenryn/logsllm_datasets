title:On spatio-temporal constraints and inheritance in role-based access
control
author:Liang Chen and
Jason Crampton
On Spatio-Temporal Constraints and Inheritance
in Role-Based Access Control
Liang Chen
PI:EMAIL
Jason Crampton
PI:EMAIL
Information Security Group and Department of Mathematics
Royal Holloway, University of London
ABSTRACT
Pervasive computing environments have created a require-
ment for spatial- and temporal-aware access control systems.
Although temporal, spatial and spatio-temporal role-based
access control (RBAC) models have been developed, a fam-
ily of simple, expressive and ﬂexible models that convinc-
ingly addresses the interaction between spatio-temporal con-
straints and inheritance in RBAC does not yet exist.
In
this paper, we deﬁne three spatio-temporal models based on
RBAC96 the de facto standard for RBAC, and extend these
models to include activation and usage hierarchies. These
models provide diﬀerent authorization semantics, varying in
the extent to which RBAC entities and relations are con-
strained by spatio-temporal restrictions. We introduce the
notion of trusted entities, which are used to selectively over-
ride certain spatio-temporal restrictions. We also demon-
strate that our spatio-temporal models are consistent and
compatible with RBAC96 and the ANSI-RBAC standard,
in contrast to existing models. Finally, we propose four ap-
proaches to encoding spatio-temporal requirements in prac-
tical applications that permit access requests to be answered
eﬃciently.
Categories and Subject Descriptors
D.4.6 [Security and Protection]: Access controls; K.6.5
[Management of Computing and Information Sys-
tems]: Security and Protection
General Terms
Security, Theory
Keywords
ERBAC, RBAC, Spatio-temporal domain
1.
INTRODUCTION
Role-based access control (RBAC) has been the subject
of considerable research in the last decade [1, 10, 14] and is
widely accepted as an alternative to traditional discretionary
and mandatory access controls. The emergence of mobile
and ubiquitous computing environments poses new demands
on access control mechanisms, because the decision to grant
access may depend on contextual information, such as the
location of the user and the time at which access requests
are made. It may be appropriate, for example, to limit the
time and places at which a particular role can be activated.
Several context-based RBAC models have been deﬁned in
recent years [3, 4, 6, 7, 8, 9, 12, 15]. Each of these models
introduces extensions to the basic role-based model in which
components may be associated with general contextual con-
straints [6, 7, 15], temporal constraints [3, 9], spatial con-
straints [4, 8], or spatio-temporal constraints [12]. However,
none of these models accurately captures the interaction be-
tween spatio-temporal constraints and inheritance in RBAC
model: indeed, all of them have one or more of the following
limitations.
• No existing model has clear semantics for inheritance
in the role hierarchy in the presence of spatio-temporal
constraints. This means that there is no way of design-
ing an algorithm for deciding access requests.
• Existing models are extremely complicated. GTR-
BAC [9] and the spatio-temporal RBAC model of
Ray and Toahchoodee [12] deﬁne a large number of
predicates to specify temporal constraints and spatio-
temporal constraints, respectively. The relationship
between these predicates is often unclear, again mak-
ing it diﬃcult to see how access requests should be
evaluated in such models.
• Conﬂicts and ambiguity may occur in existing models.
Conﬂicts may arise among the constraints speciﬁcation
in spatio-temporal RBAC [12], for example.
• Existing models lack compatibility with RBAC96 and
the closely related ANSI-RBAC standard. It is not at
all clear how to translate the predicates used in GTR-
BAC [9] and spatio-temporal RBAC [12], for example,
to the entities and relations used in the ANSI-RBAC
standard and RBAC96.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’08, March 18-20, Tokyo, Japan
Copyright 2008 ACM 978-1-59593-979-1/08/0003 ...$5.00.
In summary, we would argue that existing models focus far
too much on syntax, and far too little on semantics.
In this paper, we undertake a rigorous analysis of spatio-
temporal requirements in RBAC models. We use a graph-
based formalism to deﬁne the semantics of RBAC96 [14] and
ERBAC07 [5]; this formalism provides the basis for the se-
mantics of our subsequent models. We then deﬁne three
diﬀerent spatio-temporal RBAC models, motivating the de-
velopment of these models using simple scenarios. These
models extend the basic RBAC96 model with very little ad-
ditional syntax. We also introduce the idea of trusted en-
tities: for such entities spatio-temporal constraints may be
ignored, in order to deal with certain scenarios. These sim-
ple, expressive, ﬂexible spatio-temporal RBAC models have
clear, well-deﬁned semantics and are designed to be compat-
ible with RBAC96 and the ANSI-RBAC standard.
In an eﬀort to address interoperability problems that ex-
ist when there is a single role hierarchy and separation duty
constraints, ERBAC96 [13] and ERBAC07 [5] have been de-
ﬁned to separate the role activation hierarchy and the per-
mission usage hierarchy. We extend our models to include
spatio-temporal requirements for ERBAC07.
The existence of spatio-temporal constraints will gener-
ally result in a more complex access control decision func-
tion. Hence, we consider the implementation of our spatio-
temporal RBAC models in practical applications. We ﬁnd
that it is possible to use one of our models to encode most
spatio-temporal requirements, if we assume that there is no
role hierarchy. On the other hand, if a role hierarchy is
required, we show how to eliminate spatio-temporal con-
straints on roles by imposing restrictions on outer nodes
and edges, such as users and user-role assignments. In ad-
dition, we demonstrate how to improve the eﬃciency of ac-
cess request checking by pre-computing spatio-temporal con-
straints over the transitive closure of (part of) the RBAC
graph. We believe that our models can be eﬃciently and
easily implemented, in contrast to existing models.
All existing models tend to focus on the syntax of tem-
poral and spatial constraints, rather than on the seman-
tics of the model. While we believe that the syntax of
such constraints will generally be application-dependent,
we do consider the representation of spatio-temporal con-
straints, distinguishing between concrete and symbolic do-
mains. Concrete domains comprise a set of points deﬁned
by some numerically-encoded reference system; symbolic do-
mains comprise sets of labels, each corresponding to one or
more points in a concrete domain. Our approach is consid-
erably simpler and more general than existing work, such as
GTRBAC [9].
ST , RBAC+
The rest of the paper is organized as follows.
In the
next section, we recall the basic features of RBAC96 and
ERBAC07. We also introduce a novel graph-based formal-
ism to deﬁne the semantics of RBAC96 and ERBAC07. In
Section 3, we formally deﬁne the RBAC=
ST and
RBAC−
ST models, and introduce the notion of trusted enti-
ties. We also demonstrate the use of RBAC96-style syntax
to encode spatio-temporal RBAC models, and illustrate how
to integrate our spatio-temporal functions into the ANSI-
RBAC standard. In Section 4, we introduce the ERBAC=
ST ,
ERBAC+
ST models for ERBAC07. In Sec-
tion 5, we consider the practical considerations in spatio-
temporal RBAC models., focusing on the interaction be-
tween spatio-temporal constraints and the role hierarchy.
In Section 6, we discuss possible representations of spa-
tial and temporal domains, and give concrete examples of
spatial RBAC=
ST and spatio-temporal
ERBAC=
ST . Section 7 compares our work with related work
in the literature. Section 8 concludes the paper with some
suggestions for future work.
ST and ERBAC−
ST , temporal RBAC=
2. PRELIMINARIES
2.1 RBAC96 syntax
The RBAC96 family of models is undoubtedly the most
well known model for RBAC [14], and provides the basis for
the recent ANSI RBAC standard [1]. RBAC0, the simplest
RBAC96 model, introduces a set of users U , a set of ses-
sions S, a set of roles R, a set of permissions P ,1 a user-role
assignment relation UA ⊆ U × R and a permission-role as-
signment relation PA ⊆ P × R. A user u may activate a role
r in a session s if there exists r ∈ R such that (u, r) ∈ UA.
A user u is authorized for permission p if there exists r ∈ R
such that u may activate r and (p, r) ∈ PA.
RBAC1 introduces the concept of role hierarchy, which is
modeled as a partial order on the set of roles (R, 6). The role
hierarchy (RH ⊆ R×R) is used to reduce the administrative
burden by reducing the number of explicit assignments in
UA and PA relations. That is, a user u may activate a role
r in session s if there exists r′ ∈ R such that (u, r′) ∈ UA
and r 6 r′. A user u is authorized for permission p if there
exists r, r′ ∈ R such that u may activate r′, (p, r) ∈ PA and
r 6 r′.
RBAC2 extends RBAC0 through the addition of access
control constraints, such as separation of duty constraints,
cardinality constraints etc. RBAC3 incorporates the fea-
tures of RBAC1 and RBAC2, although it has long been
known that the features of those two models are somewhat
incompatible. From now on, we write RBAC96 to mean
RBAC1 only; note that RBAC0 is a special case of RBAC1
in which the hierarchy relation is empty.
2.2 RBAC96 semantics
We
introduce a novel graph-based formulation of
RBAC96, which we believe to be simple and intuitive spec-
iﬁcation of basic components of RBAC96 model. As we
will see, this formulation can be readily extended to include
spatio-temporal restrictions. We construct an acyclic, di-
rected graph G = (V, E), where V = U ∪ R ∪ P , and
E = UA ∪ PA ∪ RH .
In other words, each vertex v rep-
resents an entity, such as a user u, a role r or a permission p
in a RBAC96 system, and each directed edge e = (vi, vj )
represents a relationship between two entities vi and vj;
speciﬁcally, (vi, vj ) ∈ E if and only if (precisely) one of the
following conditions holds
(vi, vj ) ∈ UA,
(vj, vi) ∈ RH ,
(vj, vi) ∈ PA.
An authorization path (or au-path) between v1 and vn is
a sequence of vertices v1, . . . , vn such that (vi, vi+1) ∈ E,
i = 1, . . . , n − 1. Hence, a user u can activate a role r if
there is an au-path between u and r; a role r is authorized
for permission p if there is an au-path between r and p; and
a user u is authorized for permission p is there is an au-path
between u and p. For simplicity, we introduce the following
deﬁnition.
Definition 1. An entity v ∈ U ∪ R is RBAC96-
authorized for v′ ∈ R ∪ P if and only if there exists an
1The nature of a permission depends largely on the imple-
mentation details of a system, and some authors prefer to
treat permissions as “uninterpreted symbols” [14].
au-path v = v1, v2, . . . , vn = v′.2
2.3 ERBAC07 syntax
It has been observed that there are a number of situations
where it is necessary to distinguish between role activation
and permission usage [13].
In particular, it solves certain
issues that arise when there is a role hierarchy and sepa-
ration of duty constraints (as in RBAC3). The ERBAC96
(extended RBAC96) model introduces a separate role activa-
tion hierarchy, a relation which is a superset of the (permis-
sion) usage hierarchy [13]. This means that it is necessary
for a user to explicitly activate certain roles in order to ob-
tain authorization for the permissions associated with those
roles.
Chen and Crampton recently introduced ERBAC07 [5],
which deﬁnes the activation and usage hierarchies by replac-
ing the standard role hierarchy relation with a new relation
RH = R×R×{a, u}. The activation hierarchy is denoted by
RH a = {(r, r′) : (r, r′, a) ∈ RH }, and the permission usage
hierarchy is denoted by RH u = {(r, r′) : (r, r′, u) ∈ RH }.
We write 6a to denote the reﬂexive transitive closure of
RH a and 6u to denote the reﬂexive transitive closure of
RH u. In other words, the usage and activation hierarchies
are modeled as two partial orderings on the set of roles R.
ERBAC07 does not require that RH u ⊆ RH a; otherwise it
is semantically equivalent to ERBAC96.
2.4 ERBAC07 semantics
We construct an acyclic, directed graph G = (V, E), where
V = U ∪ R ∪ P , and E = UA ∪ PA ∪ RH a ∪ RH u. An
activation path (or a-path) between v1 and vn is deﬁned to
be a sequence of vertices v1, . . . , vn such that (v1, v2) ∈ UA
and (vi+1, vi) ∈ RH a for i = 2, . . . , n − 1. A usage path (or
u-path) between v1 and vn is deﬁned to a sequence of vertices
v1, . . . , vn such that (vi+1, vi) ∈ RH u (i = 1, . . . , n − 2) and
(vn, vn−1) ∈ PA. In ERBAC07:
• v ∈ U may activate role v′ ∈ R if and only if there
exists an a-path v = v1, v2, . . . , vn = v′;
• v ∈ R is authorized for permission v′ ∈ P if and only
if there exists a u-path v = v1, v2, . . . , vn = v′;
• v ∈ U is authorized for permission v′ ∈ P if and only if
there exists a path v = v1, v2, . . . , vi, . . . , vn = v′ such
that vi ∈ R for some i, v1, . . . , vi is an a-path, and
vi, . . . , vn is a u-path.
We say v1, . . . , vn is an au-path in ERBAC07 if v1, . . . , vn
is either an a-path, or a u-path, or the concatenation of an
a-path and an u-path.
Definition 2. An entity v ∈ U ∪ R is ERBAC07-
authorized for v′ ∈ R ∪ P if and only if there exists an
au-path v = v1, . . . , vn = v′.
3. SPATIO-TEMPORAL RBAC
We assume the existence of the usual RBAC96 entities: U ,
R, P , UA, PA, and RH ; we write V to denote U ∪ R ∪ P and
E to denote UA ∪ PA ∪ RH . We also assume the existence
of a spatio-temporal domain D: d ∈ D represents a point
2Note that r ∈ R is RBAC96-authorized for r′ ∈ R means
that r is senior to r′ in the role hierarchy.
in space-time; D ⊆ D represents a collection of points in
space-time.3
3.1 The standard model
The standard spatio-temporal RBAC model (or RBAC=
ST )
augments the standard RBAC96 model with a function λ :
V → 2D. For v ∈ V , λ(v) ⊆ D denotes the set of points in
space-time at which v is “enabled”. In particular,
• if u ∈ U , then λ(u) denotes the set of points in space-
time at which u may create a session;
• if r ∈ R, then λ(r) denotes the set of points in space-
time at which a role may be activated in a session;
• if p ∈ P , then λ(p) denotes the set of points in space-
time at which a permission may be granted.
Given a path v1, . . . , vn in the labeled graph G = (V, E, λ),
we write bλ(v1, . . . , vn) ⊆ D to denote Tn
i=1 λ(vi). In other
words, bλ(v1, . . . , vn) is the set of points at which every ver-
bλ(v1, vn) for bλ(v1, . . . , vn).
tex vi is enabled. When the context is clear, we will write
Definition 3. An entity v ∈ U ∪ R is RBAC=
ST -
authorized for v′ ∈ R ∪ P at point d ∈ D if and only if there
exists an au-path v = v1, v2, . . . , vn = v′ and d ∈ bλ(v, v′).