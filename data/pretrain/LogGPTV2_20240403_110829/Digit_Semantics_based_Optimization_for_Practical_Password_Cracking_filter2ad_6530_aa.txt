title:Digit Semantics based Optimization for Practical Password Cracking
Tools
author:Haodong Zhang and
Chuanwang Wang and
Wenqiang Ruan and
Junjie Zhang and
Ming Xu and
Weili Han
Digit Semantics based Optimization for Practical Password
Cracking Tools
Haodong Zhang, Chuanwang Wang, Wenqiang Ruan, Junjie Zhang, Ming Xu, Weili Han
Laboratory for Data Analytics and Security, Fudan University
Shanghai Key Laboratory of Data Science, Fudan University
{20212010013,19212010027,20110240031,19212010013,18110240014,wlhan*}@fudan.edu.cn
ABSTRACT
Users usually create their passwords with meaningful digits, i.e.
digit semantics, which can be partially exploited by probabilistic
password guessing models with a data-driven methodology for
better efficiency. However, these semantics are largely ignored by
current practical password cracking tools, like John the Ripper
(JtR) and Hashcat.
In this paper, we are motivated to study the digit semantics in
passwords and exploit them to improve the guessing efficiency
of practical password cracking tools. We first design a practical
extraction tool of digit semantics in passwords. Then we conduct
a comprehensive empirical analysis of the digit semantics in four
large-scale password sets leaked from the real world. Based on the
analysis results, we further propose two new operations (the basic
unit to construct mangling rules), then generate 1,974 digit seman-
tics rules constructed from them. Moreover, in order to enforce
semantics rules in JtR and Hashcat, we optimize their rule engines
and running logic with the compatibility of the original built-in
operations. The evaluation on the real password sets shows the
significant advantage of digit semantics rules to extend current
typical rule sets when we crack both Chinese and English (two of
the largest user groups) passwords with digit strings.
CCS CONCEPTS
• Security and privacy → Systems security.
KEYWORDS
Password Cracking, Digit Semantics, JtR, Hashcat.
ACM Reference Format:
Haodong Zhang, Chuanwang Wang, Wenqiang Ruan, Junjie Zhang, Ming
Xu, Weili Han. 2021. Digit Semantics based Optimization for Practical Pass-
word Cracking Tools. In Annual Computer Security Applications Conference
(ACSAC ’21), December 6–10, 2021, Virtual Event, USA. ACM, New York, NY,
USA, 15 pages. https://doi.org/10.1145/3485832.3488025
1 INTRODUCTION
Textual passwords are one of the most widely used authentica-
tion schemes at present because of their low cost and friendly
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8579-4/21/12...$15.00
https://doi.org/10.1145/3485832.3488025
usage [45, 52]. Driven by password composition policies, users usu-
ally leverage letters, digits, and symbols to create their passwords.
According to the prior study [28], Chinese users prefer digits, while
English users prefer letters.
In order to facilitate memorization and input, users lean to make
the password meaningful by employing semantic patterns. How-
ever, this behaviour would weaken password security [32, 41]. In re-
cent studies, analyzing the semantics in passwords is regarded as an
important way to understand password composition [8, 32, 34, 43],
especially the combination of semantics and probabilistic mod-
els [27, 41, 46].
Most studies about password semantics [16, 17, 19, 22, 28, 32,
35, 41, 42, 44] concentrate on the semantics represented with let-
ters, like names, cities. However, the semantics represented with
digits, i.e., digit semantics, is largely missed in these studies, even
though digits are commonly used among different language groups,
countries, and other groups [7, 34, 43]. Even in a few studies on
digit semantics, they only focus on one or two particular types
of digit semantics [43, 49] (like date and/or keyboard patterns) or
focus on digit strings with certain lengths [44]. There still lacks a
comprehensive analysis of digit semantics in passwords so far.
Besides, the characteristics of digit semantics are simply ex-
pressed as a dictionary [43] or used in probabilistic models [28, 44,
49]. There is no study on the application of digit semantics in the
attacks using practical password cracking tools, like the rule-based
attack of John the Ripper (JtR) and Hashcat, which are widely
used in practice [29, 40]. The reasons are two-fold. One is the lack
of comprehensive research on digit semantics. The other is that
the operations (the basic unit to construct mangling rules) in these
cracking tools are all at the character level, which cannot detect
and modify words at the level of digit semantics.
In this paper, we are motivated to conduct a comprehensive
study on the digit semantics in passwords and to study digit seman-
tics based optimization for practical password cracking tools (the
rule-based attack). We refer to prior studies [8, 28, 43–45, 49] and
summarize the common semantics expressed by digits in real life,
classifying the digit semantics into three categories, i.e., Common
Digit Patterns (including 6 types of digit semantics like repeated
numbers), Information Represented with Digits (including 5 types
of digit semantics like phone number), and Combination of Single
Tags (the combination of segments with digit semantics). To the
best of our knowledge, these 12 types of digit semantics are the
finest types of digit semantics so far. We further design an auto-
matic, highly configurable extraction tool to extract digital strings
(digit segments, segments for short) that match those semantic
tags in passwords. Based on the above extraction tool, we conduct
a comprehensive analysis of the digit semantics in both Chinese
513ACSAC ’21, December 6–10, 2021, Virtual Event, USA
H. Zhang, C. Wang, W. Ruan, et al.
password sets (Dodonew and Youku) and English password sets
(XATO and Rockyou).
rules (HR_100000), even though HR_100000 results in guesses with
one more order of magnitude.
We summarize our contribution as follows:
• The digit semantics extraction tool and a large-scale compre-
hensive analysis of digit semantics in the passwords from
the real world.
• Password cracking optimization based on digit semantics:
new operations on the level of digit semantics and the digit
semantics mangling rules constructed from them.
The rest of the paper is organized as follows: We introduce the
background knowledge about the rule-based attack in Section 2.1
and present the related works on the password semantics and on
the optimizations of passwords cracking tools in Section 2.2. Sec-
tion 3 introduces the digit semantics in our work and corresponding
extraction tool. We then take a comprehensive analysis of digit se-
mantics using four password sets leaked from the real world in
Section 4. Section 5 introduces the design and enforcement of our
digit semantics based optimization in JtR and Hashcat. We evalu-
ate our optimization in Section 6 and discuss the matching method
we used in our extraction tool, password security guidelines, and
further work in Section 7. Finally, we conclude this paper in Sec-
tion 8.
2 BACKGROUND AND RELATED WORK
2.1 Background Knowledge
In this section, we introduce the rule-based attack in two popular
password cracking tools, namely JtR and Hashcat.
The rule-based attack (also referred to as “wordlist mode” in JtR)
is an optimization of the dictionary attack supported by the state-
of-the-art password cracking tools. It is widely used in password
cracking competitions [25] and research analysis [29, 40]. The main
idea of the rule-based attack is to combine wordlist and mangling
rules to generate guesses through character modification. In this
attack mode, users need to provide three kinds of inputs: a wordlist,
a rule set, and a target file with encrypted passwords. Here, the
wordlist is usually composed of passwords leaked from the real
world, words from dictionaries, and natural language data [29]. The
rule set includes mangling rules, which indicates the operations to
be done on the word. In the runtime, JtR or Hashcat modifies or
filters each word in the wordlist according to each rule in the rule set
to obtain a guess, then matches it in the target file after processing
the corresponding hash algorithm. JtR follows rule-major order,
applying a rule to all words in the wordlist before processing the
next rule. By contrast, Hashcat applies a more complex hardware-
dependent strategy, which can be simplified into a word-major
order, i.e., processing a word in the wordlist with all rules in the
rule set before the next word.
Each mangling rule is composed of one or more built-in opera-
tions. Some operations work with parameters. For example, in the
operation ’6 (truncate word at the position 6), ’ is the operation
name and 6 is the parameter. JtR supports 52 operations [38] and
Hashcat supports 45 operations [20] (with another 10 operations
supported only in a special mode). Both of them only generate
at most one guess per rule when processing a word in their rule
engine. However, JtR is designed with a rule preprocessor, which
enables the usage of square brackets (the same way used in regular
The results show a wide usage of digit semantics, especially in
Chinese passwords (around 55% of all passwords contain matched
digit segments). In English passwords, we find a smaller coverage in
all passwords (around 25%) but wider coverage from the perspective
of all digit segments (around 75% of all digit segments are matched).
In all digit segments, common digit patterns and postcodes are more
common in English passwords than those in Chinese passwords. It
is the opposite for idiom, phone, and combination of single tags. We
also notice that date is the most important part of digit semantics
in both Chinese and English passwords. In addition, we find that
the digit semantics segment usually appears at the end or at the
front of passwords or directly as an entire password (over 95% are
placed in these three positions). Moreover, the length is mainly
concentrated below 13 (over 99%). To show the comprehensiveness
of our analysis, we evaluate the coverage of our tags in social media
data sets, Weibo and Twitter, where the digit segments tend to have
a certain meaning. We obtain a promising result that around 55% of
digit segments are covered. Moreover, we compare the coverage of
digit semantics in passwords with that in random digit strings and
find a significant difference (with P in the Chi-squared test equal
to 0).
To construct mangling rules that can crack passwords utilizing
the rich digit semantics concluded from the above study, we design
two operations, namely Tag_Trans and Tag_Replace. Tag_Trans is
applied to those tags that are highly structured and easy to deform,
like Date. It detects a specific tag in a designated position and de-
forms the word according to the format of the tag. Tag_Replace
can be applied to all tags. It detects the digit segment matching a
specific tag in a designated position and replaces it with dictionar-
ies. We further optimize the rule-based attack in JtR (v1.9.0) and
Hashcat (v6.0.0) to support our new operations by modifying their
rule engines and running logic, with no impact on the processing of
the original operations. Note that our operations can be used in the
same way as other built-in operations. Moreover, in Hashcat, our
operations can also take advantage of Hashcat’s important feature
to use GPU to speed up rule processing.
Finally, we generate 1,974 digit semantics rules constructed from
our operations and conduct an evaluation test using real passwords
(UUU9 and Neopets). The test results show the significant advan-
tage of digit semantics rules to extend existent rule sets when we
crack both Chinese and English passwords with digit strings. In
the evaluation of JtR, the mixed rule set with digit semantics rules
(Mix_Digits) has a significantly better performance than the ex-
tended rule set used in Liu’s work [29] (Mix_Compare). In Chinese
passwords, Mix_Digits can crack relatively 17.58% more passwords
than Mix_Compare under 1011 guesses. In English passwords, we
can obtain a significant increase from the beginning under a small
number of guesses (28.47% and 19.53% more under 107 and 108, re-
spectively) and a stable improvement through all guesses. Besides,
in the evaluation of Hashcat, we show that, compared with random
rules, our digit semantics rules are much more effective to supple-
ment the existent rule sets. For example, after adding the top 100
digit semantics rules (ordered by the amount of guessed passwords
in the training set) in the large rule set Generated2, the number of
newly cracked passwords is 4.2× that after adding 100,000 random
514Digit Semantics based Optimization for Practical Password Cracking Tools
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
expressions). For a rule like $[1-9], the preprocessor will first ex-
pand it into 9 individual rules ($1 to $9). The operations supported
in current password cracking tools are all restricted at the charac-
ter level, which can be roughly summarized as: case conversion,
flip, repetition, and offset in specific positions; addition, deletion,
extraction, overwriting, truncation, and replacement of characters
in specific positions; replacement and filtering (purge) of a specific
character in a word. These operations are difficult to utilize the se-
mantic distribution in passwords [32]. For example, when we try to
replace the MMDD date segment 0314 in alice0314, current tools
cannot determine the existence of the MMDD format or transfer it
into another segment according to the specific date format.
2.2 Related Work
In this section, we investigate the recent advances in passwords
semantics and optimizations of password cracking tools.
Studies on Password Semantics. Password semantics is an
2.2.1
important research topic to explore password generation strategies
and analyze password security. As early as 1989, Riddle et al. [34]
found that birthdays, names, nicknames, and celebrity names were
very common in passwords. Later, Brown et al. [8] also found that
information like names, dates (like a birthday), and phone numbers
is often used to generate passwords. Han et al. [16] and Wang et
al. [45] focused on the semantic features in Chinese password sets,
especially the pinyin-related structure, and explored the differences
in the security of Chinese and English passwords. With continuous
researches, semantics has been further applied for the improvement
of password guessing algorithms. Rao et al. [32] used the analysis
model based on part-of-speech tagging to study the effect of the
grammatical structure contained in long passwords or phrase-like
passwords on password security and pointed out that the existence
of grammatical structures would reduce the search space for pass-
word guessing. Veras et al. [41] proposed a model to capture the
semantic essence of password samples, and used semantic cate-
gories to extend the basic grammars of PCFG. Li et al. [27] specified
password semantics to personal information and proposed Personal-
PCFG with length-based PII (personally identifiable information)
matching and substitution approach. Furthermore, Wang et al. [46]
proposed a framework for targeted online guessing with type-based
PII matching approach and gained drastic improvements.
On the other hand, digit semantics, one of the most common
semantics in passwords [8, 34, 43], is also analyzed in some related
studies. However, they are often limited in the semantic complete-
ness or the length of digit strings, and the characteristics obtained
are used in either pure dictionary attacks [43] or in probabilistic
models like PCFG [28, 49] and Markov [44]. In 2012, Veras et al. [43]
focused on the date semantics in the password set Rockyou and
provided a visual result of date distribution. Li et al. [28] analyzed
the date semantics in passwords when studying the differences
between Chinese and English passwords and added 20,000 common
6-digit and 8-digit dates to the structure set of PCFG to improve its
guessing efficiency on Chinese passwords. Wang et al. [44] analyzed
the characteristics with more patterns, including 9 date formats
with 4 or 6 digits (e.g., YYYY, MMDD, YYYYMM), repeated number
string (repeated with 1 digit to 3 digits), palindrome, keyboard, se-
quential numbers, Chinese idioms, math constants, and two special
patterns (ending with 88 and beginning with 52) but only covered
4-digit and 6-digit sequences in passwords. Similarly, Xu et al. [49]
summarized the digit semantics into dates and five common key-
board patterns (e.g., continuous number string, repeated number
string) and integrated them into PCFG along with common memory
chunks and other semantics represented with letters like names.
2.2.2 Optimizations of Password Cracking Tools. Prior studies opti-
mized password cracking tools mainly from two aspects: computing
ability and guessing efficiency.
On the aspect of computing ability, Hranický et al. [23] applied
Hashcat into a large-scale distributed password cracking system
by using Berkeley Open Infrastructure for Network Computing
(BOINC) framework to control a network with Hashcat as a node.
Similarly, Yulong Bai [3] used DCR (Decompose, Compute, Reduce)
platform to implement a distributed Hashcat password cracking
system, namely DCR_hashcat, to improve Hashcat’s computing
ability. Sykes et al. [37] used Message Passing Interface to optimize
the load balancing of parallel operations in JtR.
On the aspect of guessing efficiency, Hitaj et al. [21] applied
the generative adversarial networks to generate samples whose
distribution is similar to the training set (a real password set) and
used the samples as guesses. However, this method requires more
guesses (about 5× to 50×) to obtain similar performance with the
original cracking tool. Liu et al. [29] focused on rule-based attacks.
They designed an analysis tool with two functions, namely rule
inversion and guess counting, for most rules of Hashcat and
JtR. With these two functions, they can quickly analyze information