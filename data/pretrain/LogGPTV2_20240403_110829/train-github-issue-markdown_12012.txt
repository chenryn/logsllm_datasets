### System information
  * **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)** : Yes
  * **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)** : Linux Ubuntu 16.04
  * **TensorFlow installed from (source or binary)** : from binary(pip install)
  * **TensorFlow version (use command below)** :1.9.0
  * **Python version** : 3.6.4
  * **Bazel version (if compiling from source)** : None
  * **GCC/Compiler version (if compiling from source)** : None
  * **CUDA/cuDNN version** : CUDA-8.0
  * **GPU model and memory** : GTX1080Ti, 12G
  * **Exact command to reproduce** : just as the code below
### Describe the problem
As the official document here, tf.keras.models could be saved with
`model.save('my_model.h5')`, namely, "The entire model can be saved to a file
that contains the weight values, the model's configuration, and even the
optimizer's configuration". However, when I load the model with `model =
tf.keras.models.load_model('lenet_mnist.h5')`, it throws an error: **"You are
trying to load a weight file containing 5 layers into a model with 0
layers."**
### Source code / logs
#### source code(lenet_mnist.py)
    import tensorflow as tf
    import numpy as np
    def train_test_data():
        (x_train, y_train),(x_test, y_test) = tf.keras.datasets.mnist.load_data()
        x_train, x_test = x_train / 255.0, x_test / 255.0
        x_train = np.expand_dims(x_train, -1)
        x_test = np.expand_dims(x_test, -1)
        return x_train, y_train, x_test, y_test
    def train_fn():
        x_train, y_train, x_test, y_test = train_test_data()
        model = tf.keras.models.Sequential([
            tf.keras.layers.Conv2D(6, [5, 5], strides=1, padding="same", use_bias=True),
            tf.keras.layers.AvgPool2D([2, 2], 2, padding="valid"),   
            tf.keras.layers.LeakyReLU(0),
            tf.keras.layers.Conv2D(16, [5, 5], strides=1, padding="valid", use_bias=True),
            tf.keras.layers.AvgPool2D([2, 2], 2, padding="valid"),
            tf.keras.layers.LeakyReLU(0),
            tf.keras.layers.Conv2D(120, [5, 5], strides=1, padding="valid", use_bias=True),
            tf.keras.layers.Flatten(),
            tf.keras.layers.Dense(84, activation=tf.nn.relu),
            tf.keras.layers.Dense(10, activation=tf.nn.softmax),
        ])
        model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
        model.fit(x_train, y_train, epochs=5, batch_size=300)
        loss, test_acc = model.evaluate(x_test, y_test, verbose=1)
        print("test_acc: " + str(test_acc))
        model.save('lenet_mnist.h5')
    def test_fn():
        x_train, y_train, x_test, y_test = train_test_data()
        model = tf.keras.models.load_model('lenet_mnist.h5')
        loss, test_acc = model.evaluate(x_test, y_test, verbose=1)
        print("test_acc: " + str(test_acc))
    def main(unused):
        train_fn()
        test_fn()
    if __name__ == '__main__':
        tf.app.run()
#### log
    Traceback (most recent call last):
      File "lenet_mnist.py", line 60, in 
        tf.app.run()
      File "/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 125, in run
        _sys.exit(main(argv))
      File "lenet_mnist.py", line 57, in main
        test_fn()
      File "lenet_mnist.py", line 49, in test_fn
        model = tf.keras.models.load_model('lenet_mnist.h5')
      File "/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py", line 232, in load_model
        load_weights_from_hdf5_group(f['model_weights'], model.layers)
      File "/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py", line 732, in load_weights_from_hdf5_group
        ' layers.')
    ValueError: You are trying to load a weight file containing 5 layers into a model with 0 layers.