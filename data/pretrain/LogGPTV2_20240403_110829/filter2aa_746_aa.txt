DGAs and Threat 
Intelligence 
John Bambenek – Fidelis Cybersecurity Threat Research Team 
HITCON 2015 
Intro 
 President and Chief Forensic Examiner for 
Bambenek Consulting 
 Adjunct Faculty in CS Department at the 
University of Illinois at Urbana-Champaign 
 Producer of open-source intel feeds 
 Work with companies and LE all over the 
world to address growth in cybercrime 
About Threat Intelligence 
 Information is a set of unprocessed data that may 
or may not contain actionable intelligence. 
 Intelligence is the art of critically examining 
information to draw meaningful and actionable 
conclusions based on observations and 
information. 
 Involves analyzing adversary capabilities, 
intentions and motivations. 
Adversarial objectives 
 Here we are generally talking about organized 
crime, usually financially motivated. 
 What we know: 
 Highly rational actors 
 May hire “outside experts” for specific tasks 
 Generally technological sophisticated 
 Desire to remain “quiet” and resilient 
My Objectives 
 Any good intelligence program needs to also 
analyze your own objectives. 
 I investigate and try to disrupt criminal networks, 
so my objective is externally focused. 
 These efforts are directed toward “criminal” 
actors, nation-state / APT threats would require a 
different focus. 
 Most people are defensively focused so their 
information priorities are different. 
Malware C2 Network Types 
 Static IP / Hostname Lists 
 Proxied C2s 
 Dynamic DNS 
 Fast Flux / Double Flux Networks 
 Domain Generation Algorithms 
 Tor / i2p hidden services 
A History of Malware C2 Networks 
 An adversary wants to persist over the long-term 
and make their networks more resilient against 
enforcement actions. 
 Domains tend to be easier to take down the IPs 
due to avoidance of jurisdictional issues. 
 Development over time will largely show 
adversaries have acted in ways to ensure 
increased resiliency.   
 We can continue to map forward over time 
where they are likely to go in the future as a 
result. 
Use of Multiple Techniques 
 The most resilient malware C2 use multiple 
methods of callback. 
 Static Lists 
 DGAs 
 Tor/I2P 
 If one or two are blocked, still able to control 
machine. 
 To affect a takedown, need to block all means of 
communication and updating victim machines. 
Domain Generation Algorithms 
 Usually a complex math algorithm to create 
pseudo-random but predictable domain names. 
 Now instead of a static list, you have a dynamic 
list of hundreds or thousands of domains and 
adversary only needs to have a couple registered 
at a time. 
 Can search for “friendly” registrars to avoid 
suspension. 
Reverse Engineering DGAs 
 Many blog posts about reversing specific DGAs, 
Johannes Bader has the most online at his blog: 
 Johannesbader.ch 
 No real shortcuts except working through 
IDA/Debugger and reversing the function. 
 Look for functions that iterate many times. 
 There will be at least a function to generate the 
domains and a function to connect to all of them to 
find the C2. 
 As with all reverse engineering, be aware of 
obfuscation and decoy code meant to deceive you. 
Reversing DGAs Example 
From http://johannesbader.ch/2015/05/the-dga-of-ranbyus/ 
Types of DGAs 
 Almost all DGAs use some time of “Seed”. 
 Types: 
 Date-based 
 Static seed 
 Dynamic seed 
 Seed has to be globally consistent so all 
victims use the same one at the same time. 
Other DGA Hardening Techniques 
 Choice of gTLD matters. 
 Some doing have WHOIS protection, make it hard 
to sinkhole 
 Rotation of seeds 
 Some malware has rudimentary “sinkhole 
awareness” 
 Adversarial objectives: Maintain control, limit 
surveillance 
Examples of select DGAs - Cryptolocker 
 Used 1000 domains a day across 7 gTLDs. 
Order domains are queries in based on 
GetTickCount() 
 Eerily similar to DGA described in Wikipedia 
article on DGAs. 
 Used previously by Flashback OSX Worm. 
 Never changed during the life of the malware 
campaign. 
 Successfully taken down in June 2014. 
 Special thanks to Vladimir Kropotov for his help 
on this! 
Examples of select DGAs - Cryptolocker 
 Intel conclusions: 
 Likely written by a third party. 
 Went days without a domain registered, actor 
wanted to get paid but wasn’t overly concerned 
about keeping everything going 24x7. 
 Tended not to shift registrar even after domains 
were suspended. 
 Likely didn’t monitor his own domains because 
the ratio of malicious to sinkholed domains was 
about 1:125. 
 Way to go on the OPSEC good guys. D 
Examples of select DGAs - Tinba 
 Generated 1,000 domains a day, not date-
seeded. 
 Seeded by an initial hostname and a defined 
gTLD (one or more). 
 Changes seeds often and tends to update 
already infected machines. 
 At least sinkholing tended to be ineffective for more than a 
few days. 
Examples of select DGAs - Tinba 
 Intelligence conclusions: 
 These guys care about their infrastructure. 
 Likely they are actively monitoring to see when their DGA is 
cracked and adapting accordingly. 
 Likely they wrote DGA with this kind of flexibility in mind. 
Examples of select DGAs - Bedep 
 Uses a dynamic seed – currency exchange 
values for foreign currency 
 European Central Bank produces daily feeds of 
the rates, this is used as source data. 
 Impossible to predict in advance even though 
code to generate the domains is publicly 
available. 
 http://asert.arbornetworks.com/bedeps-dga-trading-foreign-
exchange-for-malware-domains/ 
Examples of select DGAs - Bedep 
 To date, all successful takedowns (and for that 
matter unsuccessful takedowns) seized malicious 
DGA domains in advance while simultaneously 
suspending current domains. 
 This would decapitate a botnet if and only if there 
was no fallback mechanism to reach the C2 (i.e. 
tor). 
 How can you do this for Bedep when you don’t 
know future currency values? 
 Intelligence conclusion: this is obviously an intentional choice. 
Examples of Select DGAs – Matsnu and Rovnix 
 Matsnu and Rovnix both use wordlists to generate domains that appear like they 
would be “reasonable”.  Rovnix uses the US Declaration of Independence. 
 Problem is that sometimes there is collisions with real domains. 
teamroomthing.com,Domain used by matsnu DGA for 16 Aug 2015,2015-08-
16 
transitionoccur.com,Domain used by matsnu DGA for 16 Aug 2015,2015-08-
16 
windbearboxreceive.com,Domain used by matsnu DGA for 16 Aug 
2015,2015-08-16 
winner-care-sir.com,Domain used by matsnu DGA for 16 Aug 2015,2015-08-
16 
theirtheandaloneinto.com, Domain used by Rovnix DGA 
thathistoryformertrial.com, Domain used by Rovnix DGA 
tothelayingthatarefor.com, Domain used by Rovnix DGA 
definebritainhasforhe.com, Domain used by Rovnix DGA 
tosecureonweestablishment.com, Domain used by Rovnix DGA 
What the use of DGAs gives the good guys 
 Easy ability to sinkhole unused DGA domains 
to gather additional intelligence. 
 Easier ability to do bulk takedowns. 
 *IF* you can predict domains in advance. 
 The ability to surveil malicious infrastructure 
in near real-time. 
What the use of DGAs gives the good guys 
 The use of DNS in malware severely limits the 
ability of the adversary to play games. 
 They need the world to be able to find their 
infrastructure in order to control victim 
machines. 
 Even when DGA changes, the adversary 
**tends** not to immediately change their 
infrastructure too. 
 Allows for the use of passive DNS to see the 
extent of DGA changes. 
Sinkholing 
 Many security companies do this. 
 Many want to hide the fact they do this. 
 Most adversaries aren’t stupid enough to not 
notice. 
 Remember, Cryptolocker we had 125 or so 
sinkholed domain for every 1 malicious 
domain. 