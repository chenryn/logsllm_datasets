如果能把学生的姓名直接显示出来则会更具意义。第二阶段，我们将利用 student 表，把学生
件 ID在 score 表里找到了与之匹配的分数。这个查询的输出只包含了 student_id 值，但是
它们把你想要的信息找出来。
考试的类别。你根本不用了解学生ID和事件ID，因为MySQL会自动查出有关的 ID值并利
mysql> SELECT
对于这个查询，只要插入任何日期，即可获得那天对应的分数、参加考试的学生姓名，以
在第一阶段的查询里，我们利用grade_event表将日期映射到了事件ID，并使用这个事
ON子句里多了一个查询条件，用于指定score表里的行与student表里的行必须基于学
口
口
口
mysql> SELECT
输出列的列表里加上student.student_ia即可。）
score表以外，还需要用到它。
个查询与以前介绍的查询命令在以下几方面有区别。
Abby
Kyle
Joseph
name
第1章MySQL入门
这个查询会显示出学生的姓名，而不显示学生的ID。
生ID匹配在一起：
score表和student表都有student_id列，所以肯定会出现二义性。于是，为了避免
在前一个查询里，student_id列不会产生二义性，因此在引用它时，既可以不限定表
FROM子句现在包含了student表，因为这条查询语句除了要用到grade_event表和
Megan
ON...score.student_id= student.student_id
V
V
>
（student_id），也可以限定表名（score.student_id）
>
V
A
>
grade_event.date,grade_event.category,
student.name, grade_event.date, score.score, grade_event.category
AvG(score.score) As average,
MAX(score.score)
WHERE grade_event.date =
AND score.student_id = student.student_id
ON grade_event.event_id
|date
2012-09-23
2012-09-23
2012-09-23
2012-09-23
2012-09-23
AS maximum,
AS minimum,
I score|category
score.event_id
00
O
（如果想要两者都显示，只需要在
。但在这个查询里，因为
生
---
## Page 73
缺勤情况：
的值，将 absence 表连接到 student 表上。下面这个查询可以列出学生的 ID号和姓名，以及
表里，其中包括学生ID 和日期。为获得学生的名字（不只是ID)，我们必须基于 student_id
算每个学生的总成绩：
平均分数：
汇总信息。下面这个查询可以为事件日期与学生性别的每种组合，确定出各分数的数目，以及
多个输出列，不过名叫 date的列只有一个，因此MySQL可以清楚地知道你所指的是哪一个。
我们可以用一条类似的查询语句来完成成绩考评项目的其中一项任务，即在期末的时候计
即使有源自多个表的多个列，你也可以使用像COUNT（）和AVG（）这样的函数，为它们生成
成绩考评项目的另一项任务是汇总所有学生的缺勤情况。
GROUP BY score.student_id
NO
SUM(score.score) As total,
SELECT student.student_id,
mysql>
虽然GROUP BY 列带有限定符，
AND score.student_id= student.student_id
2012-10-01
2012-10-01
2012-09-23
2012-09-16
2012-09-09
2012-09-09
2012-09-06
2012-09-06
2012-09-03
2012-09-16
date
2012-10-01
2012-09-23
2012-09-16
2012-09-09
2012-09-06
2012-09-03
date
V
V
V
GROUP BY grade_event.date, student.sex;
SELECT grade_event.date,student.sex,
FROM score INNER JOIN grade_event
ON grade_event.event_id=
coUNT(score.score) As count,AvG(score.score) AS average
CoUNT(score.score) AS
|category|minimum
W
15
12
3
15
14
COUNT(score.score) AS n
student.name
114.6429
但对于这条查询语句来说并不是必须的。GROUPBY引用了
82.4000
12.8571
13.6875
count
77.7857
14.0833
15.3077
77.4000
14.7143
9
8
L
8
9
|maximum|span|total|average|count
100
2
6
2
39
3
12
所有缺勤情况都记录在absence
2325
383
379
425
439115.1379
14.1667
1.4MySOL教程
80.1724
14.1852
14.0370
78.2258
+
乙
-+
---
## Page 74
检查每位总统的出生地与其他总统的出生地是否一致：
其自身连接起来。例如，想确定是否有某位总统与另一位总统出生在同一个城市，这时便需要
配这两个表中的行。此查询如下所示：
的两个表之间使用
告知MySQL，对于连接里的第一个表（即LEFTJOIN关键字左边的那个表），为从其里面查
的数量。既然这个问题有所不同，那么回答这个问题的查询也就会有所不同。
交到学校办公室，那么他们可能会问：“其他学生的情况怎么样呢？我们希望看到每位学生的情
况
S
山，其中甚至包括那些absence表里没有的学生。在编写此查询语句时，可以在FROM子句里
出的每一行产生一个输出行。通过将 student 表指定为第一个表，我们将能获得每位学生的转
。”这就是个有所不同的问题了。它既要求统计缺勤学生的数量，也要求统计无缺勤情况学
这条查询命令有以下两个地方需要特别注意。
连接操作并非只能用于两个不同的表。这乍听起来有点儿奇怪，但你完全可以把某个表与
mysql> SELECT student.student_id,student.name,
使用内连接（innerjoin）来回答此问题并不合适，我们需要使用LEFT JOIN子句。该子句
如果你只想知道有哪些学生缺勤，那么这个查询输出已能满足需要。如果想要把这个列表
mysql> SELECT student.student_id, student.name,
last_name | first_name
student_idIname
student_id Iname
Adams
Adams
第1章MySQL入门
V
->GROUP BY student.student_id;
-> ON student.student_id = absence.student_id
V
->FROM student INNERJOIN absence
ORDER BY state, city, last_name;
GROUP BY student.student_id;
ON p1.city = p2.city AND p1.state
FROM president AS p1
ON student.student_id=absence.student_id
FROM student LEFT JOIN absence
用LEFTJOIN（而不是用逗号把这两个表分开），然后使用ON子句说明如何D
20
9
5
S
John Quincy
|Liesl
1Megan
John
Joseph
Peter
Abby
Abby
Kyle
Avery
Kyle
Nathan
Katie
Wi1l
1absencesl
|city
absences
AS absences
AS absences
Braintree|
0
state
=p2.state
匹
里
输
询
会
牛
---
## Page 75
条子查询语句来解决，如下所示：
提供一种单语句解决方案。当时的解决方案是使用两条语句和一个用户变量，而现在可以用一
SELECT语句则会检索出student 表里与该集合中的ID值都不匹配的那些行。
们可以这样做：
要把全勤的学生都找出来。此要求等价于把没在 absence 表里出现过的学生都找出来，因此我
语句里。子查询有几种类型，详细内容将在2.9节进行讨论。我们现在只看两个示例。假设需
儿的查询语句。但其查询结果却可能不正确，因为它没有考虑到出现闰年的情况。
MONTH（）和DAYOFMONTH（）来比较出生日期里的月和日：
生日期，那么查询结果里就会缺少那些生于同月同日但不同年的总统。因此，我们必须用函数
子查询还能为1.4.9.8节提出的那个问题（即有哪些总统出生在Andrew.Jackson总统之前）
另一种类型的多表检索操作是使用“子查询”，即把一条SELECT语句嵌套在另一条SELECT
mysql> SELEcT last_name, first_name,
嵌套于内层的 SELECT 语句会确定出 absence 表里的 student_id 值集合，而外层的那个
mySql> SELECT *FROM student
使用DAYOFYEAR（）来代替 MONTH（）与DAYOFMONTH（）的组合，
用一个类似的查询可以查出在同月同日出生的总统。不过，如果直接比较某两位总统的出
口每位总统的记录都与其本身相匹配，但这并不是我们想要的输出结果。在确保参与比
1last_name | first_name | birth
口它需要引用同一个表中的两个实例，因此我们必须为它创建两个别名（p1和p2），并用
Adams
WashingtonIGeorge
last_name
Liesl
Nathan
Megan
name
Polk