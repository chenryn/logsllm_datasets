示的格式是“yyy mmm ddd hhh mmm sss ms"，注意，这里只会显示最大的三个单位，比
到的是881764（秒），那么就会显示为“10days,04:56:04"。此外，如果选择s，那么显
的样式，uptime 则会被翻译成“hh:mm:ss”或者“N days,h:mm:ss"。比如 Zabbix 接收
还有时间的转换。当选择unixtime的时候，返回值会被翻译为“yyy.mm.d hh:mm:ss"
了B或者Bps，那么1会显示为1B/1Bps，1024会显示为1KB/1KBps。除了单位的转换，
示的时候就是15k。比较特殊的是针对B（byte）和Bps（bytes per second），如果设置
超过1000的数值，Zabbix会将它除以1000，并以多少k的方式显示。比如15000，显
·Text：文本，没有长度限制。
·Log：log 文件，当使用 log 或者 logrt 作为 item 的key 的时候需要选择的选项。
·Character：字符串，大小不超过255bytes。
的每分钟变化值的Item。
prev_time 是上一次获取数据的时间戳。这个设置非常有用，特别是针对那种需要抓取
value表示这次获取到的数据，value_prev是上次获取的数据，time表示当前的时间戳，
---
## Page 62
这里的“ppPPp:”只要和前面的 yMdhms 不同就可以了，具体是什么并没有关系。
时间戳最左边的空格会被排除。比如一个日志为“23480:20100328:154718.045Zabbix agent
@Log time format：只有当 type是Log的时候才有效，支持的占位符有以下几种。
Show value：选择一种映射关系。数据返回“0”表示“服务器通电”，返回“1”表示
·s:秒（00~59)
·m:分钟（00～59）
•h:小时（00～23）
·y:年（0001～9999）
0或者是1了。
“服务器负载高”，返回“2”表示“服务器磁盘空间不足”，等等。这个映射关系可以
•d:日（01~31)
·M：月（01～12）
看到“NotAvailable”或者是“Available”，如果没有设置过映射，那么这里显示的就是
使用了前面说的“0”和“1”的映射关系，那么我们就能在这个Item的Latest Data 中
再选择 Create value map，在新建窗口中进行。映射结果的查看，即假设一个Item 已经
Available”；“1”－“Available”，然后可以在Item配置的Showvalue选择事先定义的映射
件/SMS/Jabber等Media 中生效。
始，支持Numeric（float）和 Character 的映射。这个映射既在 Zabbix 前端生效，也在邮
的字符串。之前只能将Numeric（unsigned）类型的数据映射到字符串，从Zabbix2.2开
一些。
映射关系的设置，可以从菜单进人“Administration”—“General-Valuemapping”
举个例子，一个Item的返回值是“0”和“1”,那么我们可以将其映射为：“0”－“No
何东西），然后等待下一次值。
为了让Zabbix 收集的监控数据更加可读，我们可以把数字的监控数据映射到文字
注意：如果当前值比上一次的值要小，那么Zabbix不会记录这次变化（不存储任
第5章增加监控
·47
---
## Page 63
·48·
Agent 将数据发送回 Zabbix Server 或者Proxy。Zabbix Server 请求的内容为：
里就是“01/00/00/00/00/00/00/00”，即十六进制中的8个字节，64位数字。
Zabbix使用的协议，有以下预先定义的值。
式和主动模式。
5.3Item类型
所示。
Zabbix监控系统深度实践
5.3.1Zabbix Agent类型
被动模式是最简单的，Zabbix Server或者Proxy向ZabbixAgent请求数据，然后Zabbix
（2）：这次连接传送数据的长度，一共8个字节。比如长度为“1"，那么这
Item 的 Type 中,有“Zabbix agent"”和“Zabbix agent（ active 》”两个容易混淆的概念,如图 5-5
Zabbix agent类型的 Item是使用部署在服务器端的Agent 来获取数据的，可以分为被动模
1.被动模式
为了限制内存的消耗，每一个连接传送的数据最大不能超过64MB。
（1）：ZBXD\x01，一共5个字节。
总的来说，Zabbix和 ZabbixAgent 之间的数据传输协议是一种类似JSON的数据格式。
Enabled：是否启用该项Item。
Description：对于该项Item的描述。
@Populated host inventory field：在这里可以选择一个在 Host 中设置的 Invertory 属性，这样
New application ：新建一个 Application。
一般把前者称为“被动模式”，后者称为“主动模式”，下面主要介绍这两者的功能和区别。
的话，该项 Item 的值会自动推送给选择的 inventroy field。
Key
Type
Zabbixagent(active)
Zabbix
图5-5
uebe,
---
## Page 64
求一次。如果某一次请求失败了，那么会在60秒后重试。
中定义的，另一个参数“RefreshActiveChecks”定义了Zabbix Agent 每隔多久向Zabbix Server请
里 Zabbix Agent 请求的 Zabbix Server 的列表，是在 zabbix_agentd.conf 中的“ServerActive”参数
需要发送的Items 的列表，然后根据列表中的 Item，去获取数据，再发送给Zabbix Server。这
Agent主动将数据发送给 Zabbix Server。在主动模式中，Zabbix Agent 会先从 Zabbix Server 获取
ZabbixServer发起的请求。接下来我们看看主动模式。
Agent 来说的，每一次Item 值的获取，对于Zabbix Agent来说是“被动”的，因为是先由
和在本节开头处的 Zabbix传输协议中介绍过。
这时ZabbixServer的返回内容如下。
"host" :" "
{
首先 Zabbix agent 请求需要发送的Item 列表，请求的内容如下。
主动模式和被动模式相反，被动模式是Zabbix Server发起请求，而主动模式是Zabbix
2.主动模式
通过这个例子，相信大家已经对被动模式有所理解了。所谓的“被动”，是针对Zabbix
（5）TCP连接关闭。
（4）Zabbix Server 获取 Zabbix Agent 返回的数值，即例子中的“1"。
（3）ZabbixAgent 读取请求，并且返回“1"，这里的
（2）Zabbix Server 发送“agent.pingln”。
而 ZabbixAgent的返回的格式为：
（1）Zabbix Server（或者Proxy，下同）打开一个TCP连接。
当 Zabbix Server请求 agent.ping 这个 key 的 Item 的时候，会有以下的步骤。
\n
第5章增加监控
·49·
---
## Page 65
·50。
(revision {7836)）."
Zabbix监控系统深度实践
"value" :" 13039:20090907:184546.759 zabbix_agentd started.
"key" :" log[\/home\/zabbix\/logs\/zabbix_agentd.log]"
"data":[
"request" :" agent data"
{
当 Zabbix Agent 将数据发送给 Zabbix Server的时候，格式如下。
（6）Zabbix Agent开始定期收集数据。
（5）关闭TCP连接。
（4）ZabbixAgent 处理Zabbix Server的返回值。
(3）ZabbixServer返回需要Item的列表。
（2）Zabbix Agent 请求需要检查的列表。
（1）ZabbixAgent 打开一个TCP连接。
整个过程包括如下几步。
"delay":"600"
"key":"agent.version",
"lastlogsize":"0"
"delay":"30",
"key":"log[\/home\/zabbix\/logs\/zabbix_agentd.log]",
"data":[
"response":"success",
ZABBIX1.6.6
---
## Page 66
器等，只要是有 SNMP 功能的，Zabbix 都可以监控。在设置 SNMP Item 的时候，只要将 Type
disabled了或者根本不存在，那么Zabbix Agent是不会重试的。
5.3.2
SNMP是监控服务器以外设备的非常好的方式，
（4）TCP连接关闭。
（3）ZabbixServer获取到数据列表，并进行处理。
（2）ZabbixAgent发送数据的列表。
（1）ZabbixAgent 打开一个TCP连接。
对于ZabbixAgent发送这个过程，具体步骤如下。
注意：如果 Zabbix Agent发送的一些数据在Zabbix Server上出错了，比如 Host和 Item 被
{
然后ZabbixServer的返回内容如下。
"clock"
“clock":1252926015
"value" :" 1.6.6" ,
"host"
“clock":1252926015
"lastlogsize" :80,
SNMP类型
：1252926016
agent.version"
"
，比如可以用于监控打印机、交换机、路由
第5章增加监控
●51°
---
## Page 67
·52。
MOD1ARPM"
server.conf 中将StartIPMIPollers改成非O的数字。
不会有 poller来监控 IPMI，这时候就算有 IPMI的 Item，也不会有任何数据，需要在 zabbix
项--with-openipmi。一般我们使用 IPMI来监控硬件信息，比如温度之类。默认 Zabbix Server
刚获取的.1.3.6.1.2.2.1.10.3。
前的命令获取的）。
什么。如果需要获取交换机上端口3进来的网络流量，应该使用IF-MIB:iflnOctets.3（这是之
如果用这条命令无法显示出 SNMP信息，可以查找资料，看看对于你的设备，“publi”应该填
用net-snmp一起安装）。
选择为SNMP即可。具体步骤如下。
Zabbix监控系统深度实践
5.3.3
（2）在Item的配置中选择IPMI，配置IPMI sensor，
具体步骤如下。
Zabbix也有监控IPMI设备的需求，在编译安装ZabbixServer的时候，
注意：如果要使用 SNMP 监控，必须在编译 Zabbix 的时候加上--with-net-snmp。
（4）在 Item配置页面中，type选择 SNMPv*，星号表示 SNMP 版本，最后在OID 中输入刚
（1）在将Host 添加监控时，就要加人IPMIinterface。
>shell snmpget
（3）接着使用 snmpget 获取数据。
其中“-v”参数表示 SNMP版本，这里使用的是SNMPv2，“public”是一般使用 SNMP的字段，
>shell snmpwalk -v 2c -c public HOsTIP
（2）然后获取设备支持的所有 SNMP信息。这里使用 snmpwalk（它可以在安装Zabbix 时
可以获取到下面这串结果。
（1）首先添加SNMP设备到Zabbix。
1.3.6.1.2.2.1.10.3
IPMI类型
-v2c
=Counter32:3472126941
-C public -On HOSTIP IF-MIB::ifInOctets.3
比如在 Dell Poweredge 上的“FAN
，一定要加上IPMI选
---
## Page 68
负载过高，这个数字是 zabbix_agent.conf 中的 MaxLinesPerSecond。
这样能够保证 Agent 从上次停止的地方开始读取。
在字节计数器和最新时间计数器中。
一定要保证 Zabbix用户对日志文件有可读权限，否则，这个 Item 的状态会变成“unsupported"。
是监控日志的两种key-
的表达式。对于日志轮转与否，Zabbix都支持。
Zabbix的日志监控工具很简单，但却很有效，它最主要的是监控日志文件中有没有某个字符串
5.3.4日志文件监控
（8）Zabbix Agent 每秒发送的日志量，有一个日志行数的上限，这是为了防止网络和CPU
（3）字节计数器和最新时间计数器的数据会被记录在Zabbix数据库，并且发送给Agent,
在配置 Item 的时候，Type 选择 Zabbix agnet（active），这里主要需要配置的是Key。下面
（7）到每个 Update interval 的时间时，Agent 会检查一次目录下的文件。
（6）一个目录下的多个文件如果修改时间相同，会按照字母顺序来读取。
（5）所有符合配置的文件，都会被监控。
（4）当日志文件大小小于字节计数器中的数字时，字节计数器会变为0，从头开始读取文件。
（2）Agent会从上次读取日志的地方开始读取日志。
（1）Zabbix Server 和 Zabbix Agent 会追踪日志文件的大小和最后修改时间，并且分别记录
需要注意以下几点。
只要配置了，Zabbix会根据的正则表达式来匹配日志中的内容。注意，
log[/path/to/some/ile,,,,,]
下面介绍Zabbix另一个“重量级”的功能—日志文件的监控。相对于其他的日志工具，
logtr[/path/to/some/filename_format,,,,,]
（4）选择合适的数据类型和单位。
（3）在key 中输入 Host 独一无二的 Item key。
——log和logtr。
第5章增加监控
53
---
## Page 69
54
Item key，必须手动更改计算表达式中的Itemkey。
parameter，就是func需要的一些参数。下面看一些具体的表达式实例。
能防止Zabbix解析错误。如果在双引号内还要使用双引号，可以加上“”来转移。后面的
hostname:key是引用其他Item的值。需要注意的是，最好在key的外面加上双引号，这样
储在数据库中。在 Item 配置时，将 type选择为Calculated。
表达式。对于计算型 Item，Zabbix会像其他 Item一样看待它，也能建立 Triger，并将数据存
新建一个虚拟的Item，它的数据是通过计算其他的Item来获取的，可以自己定义这个计算的
要将4块网卡的出口流量全部相加，这时，计算型Item就可以派上用场了。计算型Item可以
果这时新建了日志文件类型的监控，会将BufferSize中最老的50%数据清空给日志文件Item使用。
BufferSize设置为maxlines 的2倍。
其他类型的 Item），也是只有 50%。同时，由于有 maxlines，故需要将 zabbix_agent.conf 中的
Zabbix监控系统深度实践
5.3.5计算型lItem
（10）当 Agent 没有 Log类型的监控的时候，所有的 BufferSize 都会为其他类型 Item 服务。如
1.计算表达式中相关的Item key必须存在，而且有值，如果更改了和计算表达式相关联的
func (/,,,.".)
计算类型的Item，可以通过计算其他Item来获取数据。可能一台服务器有多块网卡，需
（11）在logrt中，正则表达式只对文件名有效，对文件目录无效。
（9）发送的日志量最多是Agent 设置的 buffer size 的 50%，就算只有日志类监控（即没有
注意：
双引号中嵌套双引号的例子，这里是对于一个聚合类型的Item再做计算：last
计算两个func的和：last（"net.if.in[ethO,bytes]",0）+last（"net.if.out[ethO,bytes]",0）
计算Zabbix在10分钟内平均处理的数据量：avg（"Zabbix Server:zabbixwcache,values]",600）
计算磁盘空余空间百分比：100×last（"vfs.fs.size[/,free]",0）/last（"vfs.fs.size[/,total]",0）
在 Item的配置中，可以书写自己的计算表达式。Zabbix支持的计算表达式如下。
stat.sh[active",V"last\",\"oV"]",0 )
("grpsum\"video\","net.if.out[etho,bytes","last\",\"OV]",0）/ last ("gpsum\"video\","nginx
---
## Page 70
或Proxy 自己计算获得。Zabbix内部监控也是由 Zabbix pollers 来完成的。
host name，itemkey或者是运算符，它不会被展开。
5.3.6Zabbix内部监控
Zabbix 内部监控是针对 Zabbix Server或者 Zabbix Proxy 本身的一些指标的监控，由 Server
zabbix[process,，，]：查询Server或者Proxy在某个状态下所消耗的时
 zabbix[java,]：返回和 Zabbix Java gateway 相关的信息。
O zabbix[items_unsupported]：不可用的 Items。
zabbix[items]：监控的Items数量（包括可用或不可用）。
 zabbix[hosts]：监控 Host 或者 Items 的数量。
○zabbix[host,,available]：检查某种类型在 Host 上是否可用。type 可以是 Agent、
zabbix[boottime]：Server或者Proxy启动的时间，值为UNIX时间戳。
Zabbix内部监控包括下列几项。
2.针对User macros，在计算表达式中会自动展开。但是如果User macros 指代的是func,
 zabbix[history]、zabbix[history_log]、zabbix[history_str]、zabbix[history_text]、zabbix[history_
询数据库等。在Linux上，这个状态0.01秒变化一次。
表示进程不在“sleeping”状态，在未来，Zabbix会添加更多的状态，比如等待锁、查
Item 的值才会变化。这保证了一个挂起的进程也会被认为是100%busy。在当前，“busy
进程每分钟会去收集一次Zabbix进程在内存中进行的工作。busy和idle只有状态变化时
置了5个pollers，中却填6个），Item会变成“不可用”状态。self-monitoring
间百分比。只会计算最近一分钟的数据。如果是一个不存在的进程号（比如设
从Zabbix2.0.0开始支持。
是 version，会返回Java gateway 的版本。注意：第二个参数一定要留空，为了以后使用。
会返回“1”"，可以配合Trigger 中的 nodataO来检查Java gateway是否可用。当
开始可用。Proxy不支持。
SNMP、IMPI、JMX。返回值“0”表示不可用，“1”表示可用，“2”表示未知。从Zabbix2.0.0
各位还是宁可信其有不可信其无吧）
不要使用它，可能有性能问题，Proxy不支持。（这是官方文档的说法，笔者也不能确定
unit]：HISTORY表中存的数据量。如果是MySQL InnoDB、Oracle 或者PostgreSQL，请
，当是ping时
第5章增加监控
55
?
---
## Page 71
·56。
Zabbix监控系统深度实践
 zabbix[proxy_history]：Proxy 的 history 表中等待发送给 Server 的数据数量。Server不支持。
 zabbix[proxy,,]：获取Proxy 相关数据。是Proxy 的名字，对于
，目前仅仅支持lastaccess，最后一次收到 Proxy 的心跳
下面看几个例子。
其支持的 state有：busy（默认）、idlle。
其支持的 mode有：avg、count、max、mino
·zabbix[process,trapper.count]：目前运行的 trapper 进程数量。
zabbix[process，”icmp pinger”,max,busy]：在最近1分钟内icmp pinger使用的最长时间。
·zabbix[process,poller,avg,busy]：监控的是最近1分钟内 poller 进程平均工作时间。
·history syncer：Zabbix将history写人数据库的进程。
·escalator：报警扩散的进程。Proxy不支持。
·discoverer：侦测设备的进程。
·data sender：proxy 将数据发送到 server 的进程。Server不支持。
vmwarecollector：收集VMware数据的进程。
proxy poller：被动模式的 proxy 的 poller进程。
node watcher：node之间发送配置信息更新和历史数据的进程。Proxy不支持。
http poller：web监控的进程。