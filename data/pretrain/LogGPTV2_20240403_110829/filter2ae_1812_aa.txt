2021 年 10 月，James Forshaw（[@tiraniddo](https://twitter.com/tiraniddo)）在
[Project Zero](https://googleprojectzero.blogspot.com/) 上发表了一篇名为 [《Using
Kerberos for Authentication Relay
Attacks》](https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html) 的文章，介绍了其在中继 Kerberos 身份验证方面的相关研究。该项研究一举反驳了多年以来不能中继
Kerberos 的观点。文章中介绍了一些技巧，可以使 Windows 对不同的服务主体名称（SPN）进行身份验证，这意味着 Kerberos
并不像我假设的那样完全可以避免中继。这促使 Dirk-jan
Mollema（[@dirkjanm](https://twitter.com/_dirkjan)）研究了一种新的的滥用技术：使用 mitm6 通过 DNS
中继 Kerberos 身份验证。
通过 mitm6 工具，我们可以劫持客户端的 IPv6 DHCP 请求，并最终接管客户端的 DNS。在这种情况下，您可以让客户端机器使用 Kerberos
及其机器帐户向我们进行身份验证。此身份验证可以中继到任何不强制执行完整性保护的服务，例如基于 HTTP 协议的 Active Directory
证书服务（AD CS）的 Web 注册接口。本篇博客描述了这项技术的背景以及如何使用 mitm6 通过 DNS 中继 Kerberos 身份验证。
## Background
基于 Windows 的企业网络依靠网络身份验证协议（例如 NTLM 和
Kerberos）来实现单点认证。这些协议允许域用户无缝连接到企业资源，而无需重复输入密码。这主要通过计算机的本地安全机构（Local Security
Authority，LSA）在用户首次完成身份验证时存储用户的凭据来起作用。然后，LSA
可以重用这些凭据在网络中自动进行身份验证，而无需用户交互。这其中最常见的是 HTTP 或 SMB
等网络协议的常见客户端必须在没有用户交互的情况下自动执行身份验证，否则会违背避免向用户询问其凭据的目的。
但是，重用凭据有一个很大的缺陷。如果攻击者可以欺骗用户连接到他们控制的服务器，这种自动身份验证可能会成为问题。攻击者可以诱导用户的网络客户端启动身份验证过程并重用这些信息对不相关的服务进行身份验证，从而允许攻击者以用户身份访问该服务的资源。当以这种方式捕获身份验证消息并将其转发到另一个系统时，它被称为身份验证中继（Relay）攻击。
NTLM Relay 是最经典的身份验证中继攻击，其最早由 Dead Cow 的 Josh Buchbinder 于 2001 年发布。然而，即使在
2021 年，NTLM Relay 攻击仍然是 Windows 域网络配置的重要威胁。
截至本文所撰写时，NTLM Relay 的最新主要滥用是通过 Active Directory 证书服务的 Web 注册服务，其与
[PetitPotam](https://github.com/topotam/PetitPotam) 技术相结合可以诱导域控制器执行 NTLM
身份验证，并为域控制器注册 AD CS 证书，从而允许未经身份验证的攻击者破坏 Windows 域环境。该项技术起源于 Lee
Christensen（[@tifkin_](https://twitter.com/tifkin_)）和 Will
Schroeder（[@harmj0y](https://twitter.com/harmj0y)）在 2021 年的 BlackHat 大会上发布的名为
[《Certified Pre-Owned - Abusing Active Directory Certificate
Services》](https://www.specterops.io/assets/resources/Certified_Pre-Owned.pdf)
的白皮书，相关内容可以看我之前的博客：[《Attack Surface Mining For AD
CS》](https://whoamianony.top/attack-surface-mining-for-ad-cs/)。
多年来，Microsoft
为缓解身份验证中继攻击做出了许多努力。最好的缓解措施依赖于攻击者不知道用户密码或控制身份验证过程的事实。这包括使用会话密钥对网络流量进行签名和加密，该会话密钥受用户密码或通道绑定保护，作为身份验证扩展保护（Extended
Protection for Authentication，EPA）的一部分 ，可防止将身份验证中继到 TLS 下的网络协议。
此外，另一个常见的缓解措施是使用组策略禁用特定服务或网络范围内的 NTLM 身份验证。虽然这有潜在的兼容性问题，但仅允许 Kerberos
协议的身份验证相对而言应该更安全。那么，禁用了 NTLM 协议后是否足以真正消除 Windows 身份验证中继攻击带来的威胁呢？
### Why are there no Kerberos Relay Attacks?
如果 NTLM 协议被禁用，那么能否转而中继 Kerberos 身份验证呢？然而，多年以来并没有关于 Kerberos
中继攻击的公开研究或资料，那么到底存不存在 Kerberos 中继攻击呢？
显而易见的是，NTLM 之所以易于中继，是因为它并非旨在将特定服务的身份验证与任何其他服务区分开来。唯一独特的方面是服务器质询，但该值不是特定于服务的，因此
SMB 的身份验证可以转发到 HTTP，而受害者服务无法区分。
但是，Kerberos 始终要求通过主体名称预先指定身份验证的目标，通常这是服务主体名称（[Service Principal
Names](https://docs.microsoft.com/en-us/windows/win32/ad/service-principal-names)，SPN），尽管在某些情况下它可以是用户主体名称 (User Principal Names，UPN)。 SPN 通常表示为
`CLASS/INSTANCE:PORT/NAME` 形式的字符串，其中 `CLASS` 是服务类，例如 HTTP、CIFS、LDAP、DNS 或 HOST
等，`INSTANCE` 通常是托管服务的服务器的 DNS 名称，`PORT` 和 `NAME` 是可选的。
Kerberos 票据授予服务（TGS）使用 SPN 为身份验证生成的 Kerberos 服务票据选择共享加密密钥。此票据包含基于在用户预 Kerberos
身份验证过程中请求的票据授予票据（TGT）内容的身份验证用户的详细信息。然后，客户端可以将服务票据打包到身份验证请求（AP_REQ）身份验证令牌中以发送到服务器。
在不知道共享加密密钥的情况下，服务无法解密 Kerberos 服务票证，则身份验证会失败。因此，如果 Kerberos 身份验证是尝试使用 SPN
`CIFS/fileserver.domain.com` 对 SMB 服务进行的 ，那么如果中继的目标是具有 SPN
`HTTP/fileserver.domain.com` 的 HTTP 服务，则该票据不可用，因为共享密钥不同。
在域环境中，域控制器将 SPN 与用户帐户相关联，最常见的是加入域的服务器的计算机帐户，并且该共享密钥来自机器帐户的密码哈希值。比如，SPN
`CIFS/fileserver.domain.com` 和 SPN `HTTP/fileserver.domain.com`可能会分配给名为
`FILESERVER$` 的计算机帐户，因此两个 SPN 的共享加密密钥将是相同的，那么理论上可以将对其中一个服务的身份验证中继到另一个服务。
用于 Kerberos 身份验证的 SPN 通常由目标服务器的主机名定义。在中继攻击中，攻击者的服务器将与目标服务器不同。例如，SMB
连接可能以攻击者的服务器为目标，并将分配 SPN `CIFS/evil.com`。假设此 SPN 已注册，由于计算机帐户不同，它很可能具有与 SPN
`CIFS/fileserver.domain.com` 不同的共享加密密钥。因此，将身份验证中继到目标 SMB 服务将失败，因为票证无法解密。
正是因为 SPN 与目标服务的共享加密密钥相关联的要求，使得很少有人认为 Kerberos 中继攻击的威胁是现实存在的。
但是，如果攻击者可以控制 SPN，则没有什么能阻止 Kerberos 身份验证被中继了。缓解中继 Kerberos
身份验证的唯一方法是让服务通过使用签名或通道绑定来保护自己。但是，即使在 LDAP 等关键协议上，这些服务保护也不是默认设置的。
**在没有其他服务保护的情况下，Kerberos 中继的唯一限制是 SPN 的选择，因此本研究重点关注普通协议如何选择
SPN，以及它是否可以受到攻击者的影响以实现 Kerberos 身份验证中继。**
### Kerberos Relay Requirements
在可控环境中，很容易证明 Kerberos 中继是可能的。我们可以编写一个简单的客户端，并使用 SSPI API 与 LSA
通信并实现网络身份验证。此客户端调用 InitializeSecurityContext API，它将生成一个 AP_REQ 身份验证令牌，其中包含任意
SPN 的 Kerberos 服务票证。此 AP_REQ 可以转发到中间服务器，然后由中间服务器中继到 SPN
代表的真实服务。如果没有其他服务保护措施，这将会起作用。
但是，客户端调用 InitializeSecurityContext 的方式有一些警告， 这将影响生成的 AP_REQ 的有用性，即使攻击者可以修改
SPN。如果客户端指定了 ISC_REQ_CONFIDENTIALITY、ISC_REQ_INTEGRITY 、ISC_REQ_REPLAY_DETECT
或ISC_REQ_SEQUENCE_DETECT 请求标志，则生成的 AP_REQ
将启用签名加密和/或消息完整性检查。当服务器使用AcceptSecurityContext API 接收到 AP_REQ
时，它将返回一组标志，指示客户端是否启用了签名加密或完整性检查。一些服务会使用这些返回的标志启用相关的服务保护。
例如，LDAP 服务的默认设置是在客户端支持的情况下启用签名/加密，即协商签名。因此，如果客户端启用了这些保护中的任何一个，那么就无法将 Kerberos
身份验证中继到 LDAP。但是，其他服务（例如 HTTP）通常不支持签名，因此允许接受指定了上述请求标志的身份验证令牌，而不做出任何保护性的措施。
另一个警告是客户端可以指定通道绑定信息，通常来自通信中使用的 TLS 证书。通道绑定信息可以由攻击者控制，但如果没有 TLS
实现中的错误或确定通道绑定信息本身的代码，则不能设置为任意值。
虽然服务可以选择仅在客户端支持的情况下启用通道绑定，但所有 Windows Kerberos AP_REQ 令牌都通过 `Authenticator`
属性中的 `KERB_AP_OPTIONS_CBT` 选项标志指示支持。即使 Sagi Sheinfeld 等人证明了，如果您可以从非 Windows
源获取 AP_REQ，它将不会设置该选项标志，因此不会强制执行通道绑定，但这显然不是微软会做的事情。Windows
客户端也有可能通过注册表配置选项禁用通道绑定，尽管这在现实世界的网络中似乎不太可能。
如果客户端在生成 AP_REQ 时指定 `ISC_REQ_MUTUAL_AUTH` 请求标志，它将启用客户端和服务器之间的相互身份验证。客户端在发送
AP_REQ 以证明它拥有共享加密密钥后，期望从服务器接收到身份验证响应 AP_REP。如果服务器没有返回有效的