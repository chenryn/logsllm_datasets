:::
这部分论述了如何在安装过程中禁用一致的接口设备命名。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
红帽建议不要禁用一致的设备命名。禁用一致的设备命名可能会导致不同类型的问题。例如：如果您在系统中添加了另一个网卡，则分配的内核设备名称（例如，`eth0`{.literal}）不再是固定的。因此，重启后内核可以以不同的方式为该设备命名。
:::
::: orderedlist
**流程**
1.  引导 Red Hat Enterprise Linux 8 安装介质。
2.  在引导管理器中，选择
    `Install Red Hat Enterprise Linux 8`{.literal}，然后按
    [Tab]{.guibutton} 键编辑该条目。
3.  在内核命令行中附加 `net.ifnames=0`{.literal} 参数：
    ``` literallayout
    vmlinuz... net.ifnames=0
    ```
4.  按 [Enter]{.guibutton} 键开始安装。
:::
::: itemizedlist
**其它资源**
-   [在 RHEL 7 和 RHEL 8 中设置 net.ifnames=0
    是否安全？](https://access.redhat.com/solutions/2435891){.link}
-   [当在 RHEL 7 中使用内核 NIC 时，如何对 RHEL 8
    进行原位升级](https://access.redhat.com/solutions/4067471){.link}
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#disabling-consistent-interface-device-naming-on-an-installed-system_consistent-network-interface-device-naming}在安装的系统中禁用一致的接口设备命名 {.title}
:::
这部分论述了如何在已安装的系统中禁用一致的接口设备命名。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
红帽建议不要禁用一致的设备命名。禁用一致的设备命名可能会导致不同类型的问题。例如：如果您在系统中添加了另一个网卡，则分配的内核设备名称（例如，`eth0`{.literal}）不再是固定的。因此，重启后内核可以以不同的方式为该设备命名。
:::
::: itemizedlist
**先决条件**
-   系统使用一致的接口设备命名，这是默认设置。
:::
::: orderedlist
**流程**
1.  编辑 `/etc/default/grub`{.literal} 文件，将
    `net.ifnames=0`{.literal} 参数附加到 `GRUB_CMDLINE_LINUX`{.literal}
    变量中：
    ``` literallayout
    GRUB_CMDLINE_LINUX="... *net.ifnames=0
    ```
2.  重建 `grub.cfg`{.literal} 文件：
    ::: itemizedlist
    -   在具有 UEFI 引导模式的系统上：
        ``` literallayout
        # grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg
        ```
    -   在使用旧引导模式的系统上：
        ``` literallayout
        # grub2-mkconfig -o /boot/grub2/grub.cfg
        ```
    :::
3.  如果在配置文件或脚本中使用接口名称，则必须手动更新它们。
4.  重启主机：
    ``` literallayout
    # reboot
    ```
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#using-prefixdevname-for-naming-of-ethernet-network-interfaces_consistent-network-interface-device-naming}使用 prefixdevname 命名以太网网络接口 {.title}
:::
本文档描述了在不需要使用这些接口的默认命名方案时，如何设置前缀以便以太网网络接口提供一直性的命名。但是，红帽建议使用默认命名方案。有关此方案的详情，请参阅
[一致网络接口设备命名](#consistent-network-interface-device-naming_configuring-and-managing-networking.html "第 1 章 一致的网络接口设备命名"){.link}。
::: section
::: titlepage
## []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#introduction-to-prefixdevname_using-prefixdevname-for-naming-of-ethernet-network-interfaces}prefixdevname 简介 {.title}
:::
`prefixdevname`{.literal} 工具是 udev
帮助程序程序，可让您定义您自己用来命名以太网网络接口的前缀。
:::
::: section
::: titlepage
## []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#limitations-of-prefixdevname_using-prefixdevname-for-naming-of-ethernet-network-interfaces}prefixdevname 的限制 {.title}
:::
以太网网络接口前缀有一些限制。
您选择的前缀必须满足以下要求：
::: itemizedlist
-   必须是 ASCII 字符串
-   必须是字母数字字符串
-   少于 16 个字符
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
该前缀不能与用于 Linux
上网络接口命名的任何其他已知的前缀冲突。特别是，您不能使用这些前缀：
`eth`{.literal}、`eno`{.literal}、`ens`{.literal}、`em`{.literal}。
:::
:::
::: section
::: titlepage
## []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#setting-prefixdevname_using-prefixdevname-for-naming-of-ethernet-network-interfaces}设置 prefixdevname {.title}
:::
使用 `prefixdevname`{.literal} 的前缀设置是在系统安装过程中完成的。
要为您的以太网网络接口设置和激活所需前缀，请使用以下步骤。
::: itemizedlist
**流程**
-   在内核命令行中添加以下字符串：
    ``` literallayout
    net.ifnames.prefix=
    ```
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
红帽不支持在已部署的系统中使用 `prefixdevname`{.literal}。
:::
设定了前缀后，操作系统重启后，前缀在每次出现新网络接口时都有效。为这个新设备分配一个名称，格式为
``{.literal}。例如，如果您选择的前缀是
`net`{.literal}，系统中也有 `net0`{.literal} 和 `net1`{.literal}
前缀的接口，新接口名为 `net2`{.literal}。然后 `prefixdevname`{.literal}
工具会在 `/etc/systemd/network`{.literal} 目录中生成新的
`.link`{.literal} 文件，该文件将名称应用到刚刚出现的 MAC
地址的接口。配置在重启后会保留。
:::
:::
::: section
::: titlepage
# []{#consistent-network-interface-device-naming_configuring-and-managing-networking.html#related_information}相关信息 {.title}
:::
::: itemizedlist
-   有关 `udev`{.literal} 设备管理器的详情，请查看 `udev(7)`{.literal}
    手册页。
:::
:::
:::
[]{#getting-started-with-networkmanager_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#getting-started-with-networkmanager_configuring-and-managing-networking}第 2 章 NetworkManager 入门 {.title}
:::
默认情况下，RHEL 使用 NetworkManager 管理网络配置和连接。
::: section
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#benefits-of-using-networkmanager_getting-started-with-networkmanager}使用 NetworkManager 的好处 {.title}
:::
使用 NetworkManager 的主要优点是：
::: itemizedlist
-   通过 D-Bus 提供
    API，它允许查询和控制网络配置和状态。这样，多个应用程序就可以检查和配置网络，确保同步和最新的网络状态。例如，RHEL
    web 控制台（通过一个 web 浏览器监控和配置服务）使用
    [**[NetworkManager]{.application}**]{.strong} D-BUS
    接口来配置网络，以及 [**Gnome GUI**]{.strong}、[**nmcli**]{.strong}
    和 [**nm-connection-editor**]{.strong}
    工具。对这些工具所做的每个改变都会被其他所有用户检测到。
-   可以更方便的镜像网络配置：网络管理器（
    [**[NetworkManager]{.application}**]{.strong}）确保网络连接正常工作。当发现在系统中没有网络配置但存在网络设备时，[**[NetworkManager]{.application}**]{.strong}
    会创建临时连接以提供连接。
-   提供到用户的简单连接设置：
    [**[NetworkManager]{.application}**]{.strong}
    通过不同的工具提供管理 -
    [**[GUI、nmtui、nmcli]{.application}**]{.strong}。
-   支持配置灵活性。例如，配置 WiFi
    接口，[**[NetworkManager]{.application}**]{.strong}
    会扫描并显示可用的 wifi
    网络。您可以选择一个接口，[**[NetworkManager]{.application}**]{.strong}
    会显示在重启过程后提供自动连接所需的凭证。[**[NetworkManager]{.application}**]{.strong}
    可以配置网络别名、IP 地址、静态路由、DNS 信息和 VPN
    连接以及很多具体连接的参数。您可以修改配置选项以反应您的需要。
-   重启过程后保持设备状态，并接管在重启过程中将其设定为受管模式的接口。
-   处理没有被显式设置但由用户或者其他网络设备手动控制的设备。
:::
::: itemizedlist
**其它资源**
-   有关安装和使用 RHEL web [控制台的更多信息，请参阅使用 RHEL 8 web
    控制台管理系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_systems_using_the_rhel_8_web_console/){.link}。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#an-overview-of-utilities-and-applications-you-can-use-to-manage-networkmanager-connections_getting-started-with-networkmanager}您可以用来管理 NetworkManager 连接的工具和应用程序概述 {.title}
:::
您可以使用以下工具和应用程序来管理 NetworkManager 连接：
::: itemizedlist
-   `nmcli`{.literal}：管理连接的命令行工具。
-   `nmtui`{.literal}：基于 curses
    的文本用户界面(TUI)。要使用这个应用程序，请安装
    `NetworkManager-tui`{.literal} 软件包。
-   `nm-connection-editor`{.literal}：用于 NetworkManager
    相关任务的图形用户界面（GUI）。要启动这个应用程序，在 GNOME
    会话终端输入 `nm-connection-editor`{.literal}。
-   `control-center`{.literal}: GNOME shell 为桌面用户提供的
    GUI。请注意，这个应用程序支持的功能比
    `nm-connection-editor`{.literal} 少。
-   GNOME shell 中的 `network connection icon`{.literal}
    ：此图标代表网络连接状态，并充当您正在使用的连接类型的可视化指示器。
:::
::: itemizedlist
**其它资源**
-   [nmtui
    入门](#getting-started-with-nmtui_configuring-and-managing-networking.html "第 4 章 nmtui 入门"){.link}
-   [nmcli
    入门](#getting-started-with-nmcli_configuring-and-managing-networking.html "第 5 章 nmcli 入门"){.link}
-   [使用 GNOME GUI
    配置网络入门](#getting-started-with-configuring-networking-using-the-gnome-gui_configuring-and-managing-networking.html "第 6 章 使用 GNOME GUI 配置网络入门"){.link}
:::
:::
::: section
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#using-network-manager-dispatcher-scripts_getting-started-with-networkmanager}使用 NetworkManager 分配程序脚本 {.title}
:::
默认情况下, `/etc/NetworkManager/dispatcher.d/`{.literal}
目录存在，[**[NetworkManager]{.application}**]{.strong}
会以字母顺序运行脚本。每个脚本都必须为 `root`{.literal} [
**拥有的**]{.strong} 可执行文件，且只有文件所有者才有
`write permission`{.literal} 权限。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
网络管理器（NetworkManager）以字母顺序执行
`/etc/NetworkManager/dispatcher.d/`{.literal} 分配程序脚本。
:::
::: itemizedlist
**其它资源**
-   有关分配程序脚本示例，请参考 [如何编写 NetworkManager
    分配程序脚本以应用 ethtool
    命令](https://access.redhat.com/solutions/2841131){.link} 解决方案。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-networkmanager_configuring-and-managing-networking.html#loading-manually-created-ifcfg-files-into-networkmanager_getting-started-with-networkmanager}将手动创建的 ifcfg 文件加载到 NetworkManager 中 {.title}
:::
在 Red Hat Enterprise Linux 中，如果您编辑了 `ifcfg`{.literal}
[**[文件，NetworkManager]{.application}**]{.strong}
不会自动意识到这个更改，且必须提示您注意到更改。如果您使用其中一个工具更新
[**[NetworkManager]{.application}**]{.strong}
配置集设置，[**[NetworkManager]{.application}**]{.strong}
不会实现这些更改，除非您使用该配置集重新连接。例如，如果使用编辑器修改了配置文件，[**[NetworkManager]{.application}**]{.strong}
必须再次读取配置文件。
`/etc/sysconfig/`{.literal} 目录是配置文件和脚本的位置。除
VPN、移动宽带和 PPPoE 配置外，大多数网络配置信息都存储在
`/etc/NetworkManager/`{.literal} 子目录中。例如，具体接口信息保存在
`/etc/sysconfig/network-scripts/`{.literal} 目录中的 `ifcfg`{.literal}
文件中。
VPN、移动宽带和 PPPoE 连接的信息保存在