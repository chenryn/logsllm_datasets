# 模块串讲（一） \| Web安全：如何评估用户数据和资产数据面临的威胁？

大家好，我是何为舟。在“Web安全”模块结束后，我将通过这篇串讲帮助你回顾这一模块的知识，以巩固你的理解和应用能力。有同学曾留言问：“老师，讲了这么多漏洞防护知识，有没有什么好的记忆方法呀？”首先，无论学习何种知识，在初期阶段都需要经常复习来加深记忆。在此基础上，我们才能深刻理解并熟练运用这些知识。那么，如何有效地记住这些知识呢？我个人常用的方法是“体系化地记忆”。具体来说，就是每学完一部分内容后，通过自己的理解将其串联起来，形成一个完整的知识体系。

### 1. 用户数据的威胁评估

假设你正在为公司设计安全体系，首要任务是对用户数据进行威胁评估。以微博为例，用户数据包括个人信息、博文信息以及关注互动信息等。通常情况下，用户需要登录才能访问和修改这些数据。然而，黑客常常通过盗取用户身份来进行未授权操作。他们可能利用弱密码或社会工程学手段获取用户密码，或者利用Web漏洞（如XSS、SQL注入和CSRF）在不知道密码的情况下模拟用户行为。

- **XSS漏洞**：黑客可以通过嵌入JavaScript脚本篡改Web应用在用户浏览器上的行为，进而窃取用户的Cookie信息，绕过登录认证。
- **SQL注入漏洞**：黑客可以利用“万能密码”篡改登录认证SQL语句，使其恒为真，从而直接获得用户身份。
- **CSRF漏洞**：黑客可以在自己的网页中发起跨域请求，控制用户的浏览器，利用保存在浏览器中的登录凭证进行未授权操作。

### 2. 资产数据的威胁评估

接下来，我们以银行为例讨论资产数据的威胁评估。金融行业尤其关注与金钱相关的数据，因此在进行威胁评估时，重点识别的数据通常是资产数据，如余额和交易记录。由于这些数据存储在内部数据库中，黑客可能会通过控制内网服务器来窃取信息。常见的攻击方式包括：

- **SSRF漏洞**：黑客可以控制服务器向内网发起任意网络请求，获取Web服务内的数据，甚至进一步探测内网结构。
- **反序列化漏洞**：黑客可以控制应用的服务端执行自定义逻辑，实现权限提升。
- **插件漏洞**：应用所依赖的插件可能存在安全漏洞，例如Struts框架的命令执行漏洞。
- **后门**：黑客为了长期控制服务器，会在其中留下后门，如木马、Rootkit和WebShell。

### 3. 认证和授权的安全防护

完成威胁评估后，我们需要针对识别出的风险和漏洞采取相应的防护措施。主要的防护手段包括：

- **检测和过滤**：对用户生成的信息进行检测和过滤，如页面渲染输出时的信息编码、关键词过滤和白名单限制。
- **加强认证**：对于关键操作（如转账），采用一次性Token和支付密码等二次认证手段。
- **补丁管理**：使用自动化工具监控公开的插件漏洞，并及时更新补丁。

此外，还需要在授权和审计阶段加入检测机制，提高系统的安全性。典型的方式包括：

- **最小权限原则**：配置最小权限，减少黑客窃取用户身份后的危害。
- **WAF**：对用户输入进行检测，拦截可疑输入。
- **IDS**：收集内网和服务器中的各类行为，检测异常行为并告警。

### 总结

本文从互联网应用的用户数据威胁评估到金融行业的资产数据威胁评估，最后介绍了在威胁评估完成后应采取的认证、授权和审计方面的防护措施。希望这些内容能帮助你更好地理解和应用Web安全知识。最后，我整理了一张表格，方便你随时回顾。

![](Images/b68ea3ba7a3f09bbd7f349a8b3e3c65f.png)

### 思考题

在文章开头，我提到了“体系化地记忆”这种学习方法。今天，我用我的思路带领你复习了Web安全模块的核心知识。你可以尝试用自己的方式总结和串联这些内容，相信你会有很大收获。欢迎留言分享你的思考和疑惑，也欢迎你把文章分享给朋友。我们下一讲再见！