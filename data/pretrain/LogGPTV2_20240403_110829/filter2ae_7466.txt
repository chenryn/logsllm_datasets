# 引言
我之前在edusrc平台上注册并获得了证书，但之后很少使用该平台。鉴于账户中还存有不少金币且没有合适的兑换选项，我决定再次尝试获取证书。本文将记录在此过程中发现并提交至edusrc的所有漏洞，这些漏洞均已得到修复。

# 漏洞发现过程

### 信息收集阶段
首先进行了广泛的信息搜集工作，包括子域名枚举、目录扫描等基础步骤。这部分内容较为常规，在此不再赘述。

### 登录系统测试
在众多子域名中，我发现其中一个提供了登录界面。于是以`admin`作为用户名、`123456`作为密码进行尝试（请注意使用Tab键切换输入框）。

#### 初始登录尝试
- **账号**: admin
- **密码**: 123456

通过Burp Suite拦截请求包后观察到，服务器返回了一个XML格式的数据包，其中包含一个表示认证失败的`<result>False</result>`标签。

#### 修改响应数据
考虑到标准接口通常采用JSON或XML格式传递信息，而此处正是后者。因此我尝试修改响应中的`<result>`值为`True`，并将更改后的数据包重新发送给服务器。结果成功绕过了身份验证机制，页面显示已成功登录。

#### 进一步探索
- 注销当前会话后，尝试任意用户名与密码组合均能重复上述攻击。
- 接着进入管理后台，注意到URL路径中存在数字标识符（如`/Face/0/Main0.aspx?`）。通过逐一替换这些数字，发现了多个隐藏的管理界面，并利用相同手法突破其安全限制。
  - `https://x.x.x.x/Face/1/Main0.aspx?`
  - `https://x.x.x.x/Face/2/Main0.aspx?` (需重新登录)
  - `https://x.x.x.x/Face/3/Main0.aspx?`
  - `https://x.x.x.x/Face/4/Main0.aspx?`
  - `https://x.x.x.x/Face/5/Main0.aspx?`

每个新发现的界面都提供了不同程度的功能访问权限，直至达到编号为5为止未再发现新的有效链接。

# 结论
通过对目标网站进行细致的安全审计，共识别出若干个潜在风险点，尤其是关于不当处理用户认证状态的问题。所有相关漏洞报告均已提交至edusrc官方，并得到了及时修复。希望此次经历能够为其他网络安全爱好者提供参考价值。