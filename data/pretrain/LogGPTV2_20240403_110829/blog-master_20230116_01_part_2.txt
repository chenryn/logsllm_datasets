SET (MYDIR /usr/local/include/antlr4-runtime/)  
```  
安装第一个插件babelfishpg_money  
```  
cd contrib/babelfishpg_money  
make && make install  
```  
安装第二个插件babelfishpg_common  
```  
cd ../babelfishpg_common  
make && make install  
```  
报错与fix如下:  
```  
报错:  
src/collation.c: In function ‘BabelfishPreCreateCollation_hook’:  
src/collation.c:1368:4: error: ‘strncat’ specified bound depends on the length of the source argument [-Werror=stringop-overflow=]  
    strncat(catcollcollate, collcollate, strlen(collcollate));  
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
src/collation.c:1378:4: error: ‘strncat’ specified bound depends on the length of the source argument [-Werror=stringop-overflow=]  
    strncat(catcollctype, collcollate, strlen(collcollate));  
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
cc1: all warnings being treated as errors  
make: *** [: src/collation.o] Error 1  
fix:   
vi src/collation.c  
修改line 1368, 1378  
// strncat(catcollcollate, collcollate, strlen(collcollate));  
memcpy(strchr(catcollcollate, '\0'), collcollate, strlen(collcollate));  
// strncat(catcollctype, collcollate, strlen(collcollate));  
memcpy(strchr(catcollctype, '\0'), collcollate, strlen(collcollate));  
```  
安装第三个插件babelfishpg_tds  
```  
cd ../babelfishpg_tds  
make && make install  
```  
报错与fix如下:  
```  
报错:  
In function ‘check_version_number.part.2’,  
    inlined from ‘check_version_number’ at src/backend/tds/guc.c:117:1:  
src/backend/tds/guc.c:127:2: error: ‘strncpy’ specified bound depends on the length of the source argument [-Werror=stringop-overflow=]  
  strncpy(copy_version_number,*newval,strlen(*newval) + 1);  
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
src/backend/tds/guc.c: In function ‘check_version_number’:  
src/backend/tds/guc.c:127:38: note: length computed here  
  strncpy(copy_version_number,*newval,strlen(*newval) + 1);  
                                      ^~~~~~~~~~~~~~~  
cc1: all warnings being treated as errors  
src/backend/tds/tdslogin.c: In function ‘ProcessVersionNumber’:  
src/backend/tds/tdslogin.c:400:2: error: ‘strncpy’ specified bound depends on the length of the source argument [-Werror=stringop-overflow=]  
  strncpy(copy_version_number,inputString,strlen(inputString) + 1);  
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
src/backend/tds/tdslogin.c:400:42: note: length computed here  
  strncpy(copy_version_number,inputString,strlen(inputString) + 1);  
                                          ^~~~~~~~~~~~~~~~~~~  
src/backend/fault_injection/fault_injection_tests.c: In function ‘throw_error_buffer’:  
src/backend/fault_injection/fault_injection_tests.c:241:2: error: ‘memcpy’ forming offset [4, 10] is out of the bounds [0, 3] of object ‘buffer’ with type ‘char[3]’ [-Werror=array-bounds]  
  memcpy(buffer,tem,10);  
  ^~~~~~~~~~~~~~~~~~~~~  
src/backend/fault_injection/fault_injection_tests.c:238:7: note: ‘buffer’ declared here  
  char buffer[3] = {'\0'};  
       ^~~~~~  
cc1: all warnings being treated as errors  
fix:   
vi src/backend/tds/guc.c  
修改line 127  
// strncpy(copy_version_number,*newval,strlen(*newval) + 1);  
strcpy(copy_version_number,*newval);  
vi src/backend/tds/tdslogin.c  
修改line 400  
// strncpy(copy_version_number,inputString,strlen(inputString) + 1);  
strcpy(copy_version_number,inputString);  
vi src/backend/fault_injection/fault_injection_tests.c  
修改line 238  
//char buffer[3] = {'\0'};  
char buffer[10] = {'\0'};  
```  
安装第四个插件babelfishpg_tsql  
```  
cd ../babelfishpg_tsql  
make && make install  
```  
报错与fix如下:  
```  
报错:  
src/pl_handler.c: In function ‘pltsql_sequence_datatype_map’:  
src/pl_handler.c:1783:3: error: ‘new_type_names’ may be used uninitialized in this function [-Werror=maybe-uninitialized]  
   list_free(new_type_names);  
   ^~~~~~~~~~~~~~~~~~~~~~~~~  
cc1: all warnings being treated as errors  
make: *** [: src/pl_handler.o] Error 1  
src/pl_funcs.c: In function ‘pltsql_ns_additem’:  
src/pl_funcs.c:109:2: error: ‘strncat’ specified bound depends on the length of the source argument [-Werror=stringop-overflow=]  
  strncat(nse->name, name, strlen(name));  
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
cc1: all warnings being treated as errors  
make: *** [: src/pl_funcs.o] Error 1  
fix:   
vi Makefile   
PG_CFLAGS += -g -Werror -Wno-error=maybe-uninitialized -Wno-error=stringop-overflow=  
// 以上加了两个flag  
-Wno-error=maybe-uninitialized -Wno-error=stringop-overflow=  
```  
4、配置postgresql配置文件, 并启动数据库  
```  
cd $PGDATA  
vi postgresql.auto.conf  
# add  
shared_preload_libraries = 'babelfishpg_tds'   
```  
```  
pg_ctl start  
```  
5、安装sqlserver 客户端sqlcmd  
https://learn.microsoft.com/en-us/sql/linux/quickstart-install-connect-red-hat?view=sql-server-ver15#tools  
```  
su - root  
curl -o /etc/yum.repos.d/msprod.repo https://packages.microsoft.com/config/rhel/8/prod.repo  
yum remove unixODBC-utf16 unixODBC-utf16-devel  
yum install -y mssql-tools unixODBC-devel  
```  
6、将sql server客户端命令添加到PATH变量  
```  
su - postgres  
vi .bash_profile  
# add  
export PATH=/opt/mssql-tools/bin:$PATH  
[postgres@1829117d0f28 ~]$ . ./.bash_profile   
[postgres@1829117d0f28 ~]$ which sqlcmd  
/opt/mssql-tools/bin/sqlcmd  
```  
## 测试babelfish   
1、psql  
```  
CREATE USER babelfish_user WITH CREATEDB CREATEROLE PASSWORD '12345678' INHERIT;  
DROP DATABASE IF EXISTS babelfish_db;  
CREATE DATABASE babelfish_db OWNER babelfish_user;  
\c babelfish_db   
CREATE EXTENSION IF NOT EXISTS "babelfishpg_tds" CASCADE;  
CREATE EXTENSION IF NOT EXISTS "babelfishpg_common" CASCADE;  
GRANT ALL ON SCHEMA sys to babelfish_user;  
ALTER SYSTEM SET babelfishpg_tsql.database_name = 'babelfish_db';  
ALTER SYSTEM SET babelfishpg_tds.set_db_session_property = true;  -- 这个貌似不用设置了, 搜遍repo也没找到对应代码, 估计默认有了.  
ALTER DATABASE babelfish_db SET babelfishpg_tsql.migration_mode = 'single-db';  
SELECT pg_reload_conf();  
CALL SYS.INITIALIZE_BABELFISH('babelfish_user');  
```  
2、sql server客户端sqlcmd连接postgresql with babelfish  
```  
sqlcmd -S localhost -U babelfish_user -P 12345678  
1> create table tbl (id int, info text);  
2> go  
1> insert into tbl select id, md5(id::text) from generate_series(1,100) id;  
2> go  
(100 rows affected)  
1> select count(*) from tbl;  
2> go  
count        
-----------  
        100  
(1 rows affected)  
1> quit  
```  
3、psql 检查到通过sqlcmd写入到PG实例的数据正常  
```  
babelfish_db=# \c babelfish_db babelfish_user   
You are now connected to database "babelfish_db" as user "babelfish_user".  
babelfish_db=> \dt  
Did not find any relations.  
babelfish_db=> \dn  
               List of schemas  
          Name           |       Owner         
-------------------------+-------------------  
 information_schema_tsql | postgres  
 master_dbo              | master_db_owner  
 msdb_dbo                | msdb_db_owner  
 public                  | pg_database_owner  
 sys                     | postgres  
 tempdb_dbo              | tempdb_db_owner  
(6 rows)  
babelfish_db=> \dt master_dbo.tbl   
           List of relations  
   Schema   | Name | Type  |   Owner      
------------+------+-------+------------  
 master_dbo | tbl  | table | master_dbo  
(1 row)  
babelfish_db=> select * from master_dbo.tbl limit 10;  
 id |               info                 
----+----------------------------------  
  1 | c4ca4238a0b923820dcc509a6f75849b  
  2 | c81e728d9d4c2f636f067f89cc14862c  
  3 | eccbc87e4b5ce2fe28308fd9f2a7baf3  
  4 | a87ff679a2f3e71d9181a67b7542122c  
  5 | e4da3b7fbbce2345d7772b0674a318d5  
  6 | 1679091c5a880faf6fb5e6087eb1b2dc  
  7 | 8f14e45fceea167a5a36dedd4bea2543  
  8 | c9f0f895fb98ab9159f51fd0297e236d  
  9 | 45c48cce2e2d7fbdea1afc51c7c6ad26  
 10 | d3d9446802a44259755d38e6d163e820  
(10 rows)  
```  
## 参考  
https://github.com/babelfish-for-postgresql/babelfish_project_website/blob/main/_internals/configuration.md  
`babelfishpg_tds.set_db_session_property`  
- This parameter specifies the database session property used for TDS connections. This means that babelfishpg_tsql.database_name is set during the login process. An error will occur if the database_name is not set.  
https://babelfishpg.org/docs/installation/single-multiple/   
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")