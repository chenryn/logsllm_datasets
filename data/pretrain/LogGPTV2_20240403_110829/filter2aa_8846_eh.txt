### 优化后的文本

---

#### 2. 工作组的角色
通常情况下，企业需要组建一个工作组来执行测试和评估战略。这个工作组常被称为“测试和评估集成产品小组”，成员包括测试和评估领域的专家、客户代表以及其他利益相关方。

---

#### 3. 验证与确证
- **验证 (Verification)**：确保产品准确体现了产品规范，并满足需求规格书的要求。
- **确证 (Validation)**：确认软件或系统能够满足文档中的需求和用户的实际期望。

关于认证/认可的详细描述，请参阅第三域 C 章节的第 5 条。

---

### B. 执行安全控制测试

#### 1. 基于分类的 25 个最危险软件错误
2011 年，CWE/SANS（Common Weakness Enumeration/SysAdmin, Audit, Network, Security）发布了 25 个最危险的软件错误列表。这些错误可能导致严重的软件漏洞，且易于被发现和利用。它们之所以危险，是因为黑客可以利用这些错误完全控制软件或使其彻底失效。CBK 中将这些错误分为三大高级类型：
1. **组件之间不安全的交互**：通信安全性弱。
2. **高风险的资源管理**：资源管理不当。
3. **漏洞百出的防御**：防御措施不足。

#### 2. SANS 协会的关键安全控制
SANS 协会（SysAdmin, Audit, Network, Security），即系统管理和网络安全审计委员会，提供计算机安全培训和专业认证。除了上述 25 个最危险软件错误列表外，SANS 的关键安全控制列表也是该领域的重要资源，特别是在应用软件安全方面。其中，第 6 号控制列表（CSC6）旨在管理所有内部开发或外部获取的软件的安全生命周期，以防止、探测和纠正安全弱点。具体列表请参阅 CBK。

---

### B.1 脆弱性评估

#### 一、脆弱性评估
- **目标**：评估安全状态、查找所有漏洞、测试响应措施，并在测试前告知可能的影响。
- **分类**：
  1. **黑盒测试**：渗透团队在不了解测试目标的情况下进行测试。
  2. **灰盒测试**：在了解一些与测试目标相关的信息的基础上进行测试。
  3. **白盒测试**：在完全了解目标本质的基础上进行测试。

评估内容还包括对员工的职能测试、社会学测试以及设备的物理性测试。评估结果仅针对当前时间点，之后仍需定期评估。

为了做好脆弱性评估，安全人员应在筹划准备阶段定义具体的防护目标和要求，包括：
1. **威胁定义**；
2. **目标识别**；
3. **系统（站点）特点**。

#### 二、漏洞扫描
自动对系统、应用程序和网络进行探测，寻找可能会被攻击者利用的弱点。主要类型包括：
1. **网络发现扫描**：使用多种技术对一系列 IP 地址进行扫描，搜索配有开放网络端口的系统。
   - **TCP-SYN 扫描**：发送带有 SYN 标志的数据包，如果收到 SYN 和 ACK 标志的响应，则表明端口开放。
   - **TCP 连接扫描**：向指定端口的远程系统打开一个全连接。
   - **TCP-ACK 扫描**：发送带有 ACK 标志的数据包。
   - **Xmas 扫描**：发送带有 FIN、PSH 和 URG 标志的数据包。
   - **NMAP**：解释 NMAP 扫描结果的三种端口状态：开放/在用、关闭/未用、过滤/阻拦/未知。

2. **网络漏洞扫描**：检测到开放端口后，继续调查目标系统或网络，查找已知漏洞。可能存在假阳性报告（误报）和假阴性报告（漏报）。

3. **Web 漏洞扫描**：针对 Web 应用程序的安全设计缺陷进行扫描，如 SQL 注入等。

---

### B.2 渗透测试
渗透测试（Penetration Testing, PT）超越了漏洞测试技术，模拟攻击者的行为，找出并利用漏洞进行入侵。常用的工具包括 Metasploit 和 Kali Linux。根据双方关系和掌握的信息，渗透测试可分为盲测、双盲测、目标测试，以及零知识（黑盒）、部分知识（灰盒）、全知识（白盒）测试。

考试中的渗透测试步骤包括：
1. **发现**：搜集目标相关信息。
2. **枚举**：进行端口扫描和资源标识。
3. **脆弱性映射**：在确定的系统和资源中标识脆弱性。
4. **利用**：尝试利用脆弱性进行未授权访问。
5. **报告**：向管理层提交报告和安全建议。

脆弱性评估与渗透测试的区别在于，前者扫描环境中存在的所有可能漏洞，后者则找出并利用漏洞入侵客户系统。

选择安全测试或渗透测试的方法/工具时，应考虑以下因素：
1. **攻击面**：不同工具查找不同类型的漏洞。
2. **应用类型**：不同的软件系统采用不同的测试方法。
3. **测试结果的质量要求和用途**：不同标准对应不同的方法。
4. **功能特点**：评测工具有自身的功能特点。
5. **性能要求**：不同的工具需要不同的计算能力、人力和经费。

考试中常见的渗透测试工具包括 Nikto、Burp Suite、Wapiti、Metasploit、sqlmap、Nmap 和 Nessus。

---

### B.3 日志审查
信息安全管理人员应定期进行日志审查，以确保特权用户不滥用特权。安全信息和事件管理（SIEM）系统在此过程中发挥重要作用，将大部分日常工作自动化。

#### 1. 日志
日志记录系统和网络中发生的事件，由多个日志项组成，每个日志项包含与事件相关的信息。安全日志来源多样，包括反病毒软件、防火墙、入侵检测和防御系统、操作系统、网络设备和应用软件等。

#### 2. 日志管理
日志管理涉及生成、传输、存储、分析和废弃计算机安全日志数据的全过程。

#### 3. 日志分析
网络和系统管理员负责执行日志分析，研究日志记录以辨识感兴趣的事件。

#### 4. 日志的作用
- 审计和取证调查
- 内部调查
- 建立基线
- 识别运行趋势和发现长期问题

#### 5. 最常见的与安全相关的操作系统数据
- **系统事件**：记录操作系统的操作行动，如关机、启动服务等。
- **审计记录**：包含安全事件信息，如身份认证尝试、文件访问、安全策略变更等。

---

### B.4 综合事务监控
信息系统运维的一项重要任务是监控各类业务的运行状态，包括人工检测和自动检测。

#### 1. 实际用户监控 (RUM)
实际用户监控（Real User Monitoring, RUM）是一种被动监控方式，通过捕获和分析网站或应用的每个用户的每个交易，追踪可用性、功能性和反应时间。RUM 依赖于轻量级代理，如 JavaScript、CSS 和 AJAX 的调用。

- **自下而上的 RUM**：依赖服务器侧信息重建用户体验。
- **自上而下的 RUM**：直接观察用户如何与应用交互。

#### 2. 合成事务监控
监控真实的用户会话容易出现误差，更有效的方法是使用自动工具模拟脚本化的浏览器进行集成测试，精确测量在线时间并提供图形化的态势界面。典型的例子是微软的系统中心运行管理器，可用于监控数据库、网站和 TCP 端口。

---

### B.5 代码审核与测试
第八域 C.3 章节也介绍了软件测试的内容，如白盒测试、黑盒测试、单元测试、集成测试等。

#### 1. 代码审查
代码审查是软件评估的基础，在此期间，非编写代码的开发人员进行审查，查找缺陷。最正式的代码评审过程称为范根检查法（Fagan Inspections），包括六个步骤：
- 规划
- 概述
- 准备
- 检查
- 返工
- 后续

#### 2. 静态测试
静态测试是在不运行软件的情况下，通过分析源代码或编译的应用程序对软件进行评估。静态分析通常用于查找编程错误和潜在的安全漏洞。

---