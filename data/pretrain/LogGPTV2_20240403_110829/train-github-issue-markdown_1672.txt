    function isOkOf(anything: { isOk: a }) : a {
        return anything.isOk;
    }
    function notOver(is: (value: a) => boolean) : (value: a) => boolean {
        return function not(value: a) : boolean {
            return !is(value);
        };
    }
    interface A {
        isOk: boolean;
    }
    var values : A[] = [{ isOk: true }];
    values.map(notOver(isOkOf)); // <-- expected: compilation error, actual: `a` inferred to {} without a warning