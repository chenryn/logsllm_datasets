e)i) 1 message/4 slots
i) slot I: Message A→ B, message D→ C
slot 2: Ack B→ A
slot 3: Ack C→ D
---
## Page 122
= 2 messages/ 3 slots
i)
slot 1: Message C→ D
slot 2: Ack D-→C, message A→ B
slot 3: Ack B→ A
Repeat
= 2 messages/3 slots
Problem10
a)10 Mbps if it only transmits to node A. This solution is not fair since only A is getting
served. By “fair" it means that each of the four nodes should be allotted equal number
of slots.
b) For the fairness requirement such that each node receives an equal amount of data
during each downstream sub-frame, let n1, n2, n3, and n4 respectively represent the
number of slots that A, B, C and D get.
Now,
data transmitted to A in 1 slot = 10t Mbits
(assuming the duration of each slot to be t)
Hence,
Total amount of data transmitted to A (in nl slots) = 10t n1
Similarly total amounts of data transmitted to B, C, and D equal to 5t n2, 2.5t n3, and
t n4 respectively.
Now, to fulfill the given fairness requirement, we have the following condition:
10t n1 = 5t n2 = 2.5t n3 = t n4
Hence,
n2 = 2 n1
n3 = 4 n1
n4 = 10 n1
Now, the total number of slots is N. Hence,
n1+ n2+ n3+ n4 = N
i.e. n1+ 2 nl + 4 nl + 10 nl = N
i.e. nl = N/17
Hence,
n2 = 2N/17
n3 = 4N/17
---
## Page 123
n4 = 10N/17
The average transmission rate is given by:
(10t n1+5t n2+ 2.5t n3+t n4)/tN
 40/17 = 2.35 Mbps
= (10N/17 + 5 * 2N/17 + 2.5 * 4N/17 + 1 * 10N/17)/N
c)Let node A receives twice as much data as nodes B, C, and D during the sub-frame.
Hence,
10tn1 = 2 * 5tn2 = 2 * 2.5tn3 = 2 * tn4
i.e. n2 = nl
n3 = 2n1
n4 = 5n1
Again,
n1 + n2 + n3 + n4 = N
i.e. n 1+ n1 + 2n1 + 5n1 = N
i.e. nl = N/9
Now, average transmission rate is given by:
 25/9 = 2.78 Mbps
(10t n1+5t n2+ 2.5t n3+t n4)/tN
Similarly, considering nodes B, C, or D receive twice as much data as any other
nodes, different values for the average transmission rate can be calculated.
Problem 11
a) No. All the routers might not be able to route the datagram immediately. This is
because the Distance Vector algorithm (as well as the inter-AS routing protocols like
BGP) is decentralized and takes some time to terminate. So, during the time when the
algorithm is still running as a result of advertisements from the new foreign network,
some of the routers may not be able to route datagrams destined to the mobile node.
b)Yes. This might happen when one of the nodes has just left a foreign network and
joined a new foreign network. In this situation, the routing entries from the old
foreign network might not have been completely withdrawn when the entries from the
new network are being propagated.
c)The time it takes for a router to learn a path to the mobile node depends on the
number of hops between the router and the edge router of the foreign network for the
node.
---
## Page 124
Problem 12
dest: 79.129.13.2
dest 128.11940.186
permanent
address:
128.119.40.18
6
permanent address:
128.119.40.186
dest: 128.11940.186
home agent
XC
foreign agent
care-of-addg
ss: 79.129.13.2
dest: 128.11940.186
foreign agent
dest: 10.10.10.1
correspondent
permanent address
care-of-address:20.20.20.2
of correspondent:
10.10.10.1
correspondent's
dest: 20.20.20.2
home agent
If the correspondent is mobile, then any datagrams destined to the correspondent would
have to pass through the correspondent's home agent.The foreign agent in the
network being visited would also need to be involved, since it is this foreign agent that
notifies the correspondent’s home agent of the location of the correspondent. Datagrams
received by the correspondent'’s home agent would need to be encapsulated/tunneled
between the correspondent’s home agent and foreign agent, (as in the case of the
encapsulated diagram at the top of Figure 6.23.
Problem 13
Because datagrams must be first forward to the home agent, and from there to the mobile,
the delays will generally be longer than via direct routing. Note that it is possible,
however, that the direct delay from the correspondent to the mobile (i.e., if the datagram
is not routed through the home agent) could actually be smaller than the sum of the delay
---
## Page 125
from the correspondent to the home agent and from there to the mobile. It would depend
on the delays on these various path segments. Note that indirect routing also adds a home
agent processing (e.g., encapsulation) delay.
Problem14
First, we note that chaining was discussed at the end of section 6.5. In the case of
chaining using indirect routing through a home agent, the following events would
happen:
The mobile node arives at A, A notifies the home agent that the mobile is now
visiting A and that datagrams to the mobile should now be forwarded to the
specified care-of-address (COA) in A.
The mobile node moves to B. The foreign agent at B must notify the foreign
agent at A that the mobile is no longer resident in A but in fact is resident in B
and has the specified COA in B. From then on, the foreign agent in A will
forward datagrams it receives that are addressed to the mobile’s COA in A to the
mobile's COA in B.
·The mobile node moves to C. The foreign agent at C must notify the foreign
agent at B that the mobile is no longer resident in B but in fact is resident in C and
has the specified COA in C. From then on, the foreign agent in B will forward
datagrams it receives (from the foreign agent in A) that are addressed to the
mobile's COA in B to the mobile’s COA in C.
Note that when the mobile goes offline (i.e., has no address) or returns to its home
network, the datagram-forwarding state maintained by the foreign agents in A, B and C
must be removed. This teardown must also be done through signaling messages. Note
that the home agent is not aware of the mobile's mobility beyond A, and that the
correspondent is not at all aware of the mobile’s mobility.
In the case that chaining is not used, the following events would happen:
The mobile node arrives at A, A notifies the home agent that the mobile is now
visiting A and that datagrams to the mobile should now be forwarded to the
specified care-of-address (COA) in A.
·The mobile node moves to B. The foreign agent at B must notify the foreign
agent at A and the home agent that the mobile is no longer resident in A but in
fact is resident in B and has the specified COA in B. The foreign agent in A can
remove its state about the mobile, since it is no longer in A. From then on, the
home agent will forward datagrams it receives that are addressed to the mobile’s
COA in B.
·The mobile node moves to C. The foreign agent at C must notify the foreign
agent at B and the home agent that the mobile is no longer resident in B but in fact
is resident in C and has the specified COA in C. The foreign agent in B can
remove its state about the mobile, since it is no longer in B. From then on, the
home agent will forward datagrams it receives that are addressed to the mobile’s
COA in C
---
## Page 126
When the mobile goes offline or returns to its home network, the datagram-forwarding
state maintained by the foreign agent in C must be removed. This teardown must also be
mobile’s current foreign network. However, the correspondent is still blissfully unaware
of the mobile's mobility.
Problem15
Two mobiles could certainly have the same care-of-address in the same visited network.
Indeed, if the care-of-address is the address of the foreign agent, then this address would
be the same. Once the foreign agent decapsulates the tunneled datagram and determines
the address of the mobile, then separate addresses would need to be used to send the
datagrams separately to their different destinations (mobiles) within the visited network.
Problem16
If the MSRN is provided to the HLR, then the value of the MSRN must be updated in the
HLR whenever the MSRN changes (e.g., when there is a handoff that requires the MSRN
to change). The advantage of having the MSRN in the HLR is that the value can be
provided quickly, without querying the VLR. By providing the address of the VLR
Rather than the MSRN), there is no need to be refreshing the MSRN in the HLR
---
## Page 127
Chapter8ReviewQuestions
1.Confidentiality is the property that the original plaintext message can not be
determined by an attacker who intercepts the ciphertext-encryption of the original
plaintext message. Message integrity is the property that the receiver can detect
whether the message sent (whether encrypted or not) was altered in transit. The two
are thus different concepts, and one can have one without the other. An encrypted
message that is altered in transmit may still be confidential (the attacker can not
determine the original plaintext) but will not have message integrity if the error is
undetected. Similarly, a message that is altered in transit (and detected) could have
been sent in plaintext and thus would not be confidential.
2.User's laptop and a web server; (ii) two routers; (i) two DNS name servers.
3. One important difference between symmetric and public key systems is that in
symmetric key systems both the sender and receiver must know the same (secret) key.
In public key systems, the encryption and decryption keys are distinct. The
encryption key is known by the entire world (including the sender), but the decryption
key is known only by the receiver.
4. In this case, a known plaintext attack is performed. If, somehow, the message
encrypted by the sender was chosen by the attacker, then this would be a chosen-
plaintext attack.
5.An 8-block cipher has 2* possible input blocks. Each mapping is a permutation of the
2° input blocks; so there are 2*! possible mappings; so there are 2*! possible keys.
6. If each user wants to communicate with N other users, then each pair of users must
have a shared symmetric key. There are N*(N-1)/2 such pairs and thus there are
N*(N-1)/2 keys. With a public key system, each user has a public key which is
known to all, and a private key (which is secret and only known by the user). There
are thus 2N keys in the public key system.
7. a mod n = 23 , b mod n = 4. So (a*b) mod n = 23*4=92
8.175
9. One requirement of a message digest is that given a message M, it is very difficult to
find another message M' that has the same message digest and, as a corollary, that
given a message digest value it is difficult to find a message M" that has that given
message digest value.We have “message integrity”in the sense that we have
reasonable confidence that given a message M and its signed message digest that the
message was not altered since the message digest was computed and signed. This is
---
## Page 128
not true of the Internet checksum, where we saw in Figure 7.18 that it easy to find
two messages with the same Internet checksum.
10. No. This is because a hash function is a one-way function. That is, given any hash
value, the original message cannot be recovered (given h such that h=H(m), one
cannot recover m from h).
11. This is scheme is clearly flawed. Trudy, an attacker, can first sniff the communication
and obtain the shared secret s by extracting the last portion of digits from H(m)+s.
Trudy can then masquerade as the sender by creating her own message t and send (t,
H(t)+s).
12. Suppose Bob sends an encrypted document to Alice. To be verifiable, Alice must be
able to convince herself that Bob sent the encrypted document. To be non-forgeable,
Alice must be able to convince herself that only Bob could have sent the encrypted
document (e.g.., no one else could have guessed a key and encrypted/sent the
document) To be non-reputable, Alice must be able to convince someone else that
only Bob could have sent the document. To illustrate the latter distinction, suppose
Bob and Alice share a secret key, and they are the only ones in the world who know
the key. If Alice receives a document that was encrypted with the key, and knows
that she did not encrypt the document herself, then the document is known to be
used). However, Alice cannot convince someone else that Bob must have sent the
document, since in fact Alice knew the key herself and could have encrypted/sent the
document.
the private key) a short message digest, rather than the entire message. Since public
key encryption with a technique like RSA is expensive, it’s desirable to have to sign
(encrypt) a smaller amount of data than a larger amount of data.
14. This is false. To create the certificate, certifier.com would include a digital signature.
which is a hash of foo.com's information (including its public key), and signed with
certifier.com's private key.
15. For a MAC-based scheme, Alice would have to establish a shared key with each
potential recipient. With digital signatures, she uses the same digital signature for
each recipient; the digital signature is created by signing the hash of the message with
her private key. Digital signatures are clearly a better choice here.
16. The purpose of the nonce is to defend against the replay attack.
17. Once in a lifetimes means that the entity sending the nonce will never again use that
value to check whether another entity is “live"
---
## Page 129
18. In a man-in-the-middle attack, the attacker puts himself between Alice and Bob,
altering the data sent between them. If Bob and Alice share a secret authentication
key, then any alterations will be detected.
19. Alice provides a digital signature, from which Bob can verify that message came
from Alice. PGP uses digital signatures, not MACs, for message integrity.
20. False. SSL uses implicit sequence numbers.
21. The purpose of the random nonces in the handshake is to defend against the
connection replay attack.
22. True. The IV is always sent in the clear. In SSL, it is sent during the SSL handshake.
23. After the client will generate a pre-master secret (PMS), it will encrypt it with Alice’s
public key, and then send the encrypted PMS to Trudy. Trudy will not be able to
decrypt the PMS, since she does not have Alice's private key. Thus Trudy will not be
able to determine the shared authentication key. She may instead guess one by
choosing a random key. During the last step of the handshake, she sends to Bob a
MAC of all the handshake messages, using the guessed authentication key. When
Bob receives the MAC, the MAC test will fail, and Bob will end the TCP connection.
24. False. Typically an IPsec SA is first established between Host A and Host B. Then all
packets in the stream use the SA.
25. False. IPsec will increment the sequence number for every packet it sends.
26. False. An IKE SA is used to establish one or more IPsec SAs.
27. 01011100
28. True
29. Filter table and connection table. The connection table keeps track of connections,
allowing for a finer degree of packet filtering
30. True
31. True
32. If there isn’t a packet filter, than users inside the institution's network will still be
able to make direct connections to hosts outside the institution’s network. The filter
forces the users to first connect to the application gateway.
33. True
---
## Page 130
Chapter8Problems
Problem 1
The decoding of “rmij'u uamu xyj” is “wasn't that fun"
Problem2
If Trudy knew that the words “bob" and “alice”" appeared in the text, then she would
know the ciphertext for b,o,a,l,i,c,e (since “bob" is the only palindrome in the message,
and “alice” is the only 5-letter word. If Trudy knows the ciphertext for 7 of the letters.
then she only needs to try 19!, rather than 26!, plaintext-ciphertext pairs. The difference
between 19! and 26! is 26*25*24..*20, which is 3315312000, or approximately 10"
Problem3
Every letter in the alphabet appears in the phrase “The quick fox jumps over the lazy
brown dog." Given this phrase in a chosen plaintext attack (where the attacker has both
the plain text, and the ciphertext), the Caesar cipher would be broken - the intruder would
know the ciphertext character for every plaintext character.However, the Vigenere
cipher does not alway translate a given plaintext character to the same ciphertext
character each time, and hence a Vigenere cipher would not be immediately broken by
this chosen plaintext attack
Problem 4
a)The output is equal to 00000101 repeated eight times.
b) The output is equal to 00000101 repeated seven times + 10000101.
c)We have (ARBRCR)R = CBA, where A, B, C are strings, and R means inverse
operation. Thus:
1.For (a), the output is 10100000 repeated eight times;
2. For (b), the output is 10100001 + 10100000 repeated seven times.
Problem5
a)There are 8 tables. Each table has 28 entries. Each entry has 8 bits.
number of tables * size of each table * size of each entry = 8*28* 8= 214 bits
b)There are 264 entries. Each entry has 64 bits. 271 bits
Problem6
110110110<==001001001（
b)Trudy will know the three block plaintexts are the same.
c)c(i) = KS(m(i) XOR c(i-1))
c(1) = KS(100 XOR 111) = KS (011) = 100
c(2) = KS(100 XOR 100) = KS (000) = 110
c(1) = KS(100 XOR 110) = KS (010) = 101
---
## Page 131
Problem7
might be a good idea to give students a hint that 9 is a good value to choose, since the
resulting calculations are less likely to run into numerical stability problems than
20. We can now perform the RSA encryption and decryption using n = 33 e = 9 and
d = 9.
letter
m
m**e
ciphertext = m* *e mod 33
d
4
262144
25
15
38443359375
3
6
7
40353607
1 9
ciphertext
C**d
Im
=
C * * d
mod n
letter
25
38146972265625
4
dl
3
19683
15
1 9
322687697779
7
6
We first consider each letter as a 5-bit number: 00100, 01111, 00111. Now we
concatenate each letter to get 001000111100111 and encrypt the resulting decimal
number m=4583. The concatenated decimal number m (= 4583) is larger than current
n (= 33). We need m < n. So we use p = 43, q = 107, n = p*q = 4601, z = (p-1)(q-1)
= 4452. e = 61, d = 73
ciphertext = m**e mod 4601
m**e= 21386577601828057804089602156530567188611499869029788733808438
804302864595620613956725840720949764845640956118784875246785033236197
972508185769802881718983
ciphertext = m**e mod 4601 = 402
c**d
= 1283813313619771634195712132539793287643533147482536209328405262793
027158861012392053287249633570967493122280221453815012934241370540204
5814598714979387232141014703227794586499817945633390592
ciphertext = m**e mod 4601 = 4583
---