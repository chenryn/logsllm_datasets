   0 6236-07-21 07:00:39 UTC+0000
0xffffd88ec1343578 ??????RuntimeB       5664    300 32...0        0 ------      
0 6236-07-21 07:00:39 UTC+0000
0xffffd88ec299b578 ?>??????backgrou       5952    444 32...4        0 ------   
   0 6236-07-21 14:40:09 UTC+0000
0xffffd88ec018c578 ???????MSASCuiL       5220    260 32...8        0 ------   
   0 6236-07-21 07:00:39 UTC+0000
0xffffd88ec017e578 gM?????vmtoolsd       5080    288 32...8        0 ------   
   0 6236-07-21 07:00:39 UTC+0000
0xffffd88ec14e3578 ??????OneDrive       5356    196 32...0        0 ------      
0 6237-01-02 17:28:14 UTC+0000
modules
moddump
rc4
Paranoid
Status: Completed Tag: Network
Description
Author: Vlad Roskov (vos)
0xffffd88ec0136578                        5564      0 32...0        0 ------   
   0 -
0xffffd88ebfa71578 ??V?????audiodg.       5808    380 32...8        0 ------   
   0 6236-07-21 07:00:39 UTC+0000
0xffffd88ebfa54578  ?0?????cmd.exe        3428      0 32...0        0 ------   
   0 6236-07-21 07:00:43 UTC+0000
0xffffd88ebfa74578 ??????conhost.       4236    280 32...4        0 ------      
0 6236-07-21 07:00:39 UTC+0000
0xffffd88ec1a87078 ?
                    g?????SearchPr       5168    268 32...0        0 ------   
   0 2583-02-02 09:39:39 UTC+0000
0xffffd88ec2a3c578 ?hM?????SearchFi       3964    256 32...2        0 ------   
   0 2583-02-02 09:39:42 UTC+0000
0xffffd88ec0fa9578 @Z??????RamCaptu       4920    184 32...6        0 ------   
   0 6236-10-10 17:41:57 UTC+0000
0xffffd88ec26a3578 ?dQ?????conhost.       4312    268 32...6        0 ------   
   0 6236-07-21 07:00:39 UTC+0000
0xffffd88eda5c83d0 Flagostor.sys        0xfffff8005daf0000             0x7000 
\??\C:\t4est\Flagostor.sys
0xfffff8005daf0000 Flagostor.sys        OK: driver.fffff8005daf0000.sys
>>> buff = [
... 0x2D, 0xFB, 0x9B, 0xA8, 0x21, 0xF8, 0xB0, 0xB5, 0xFA, 0xEC,
...   0x58, 0xC5, 0xF9, 0x35, 0x57, 0xFA, 0xE1, 0x62, 0x0E, 0x19,
...   0x45, 0x7D, 0x33, 0x58, 0x6F, 0xC9, 0x88, 0x4F, 0x70, 0x82,
...   0x00
... ]
>>> rc4 = ARC4.new('qweasdzxc')
>>> rc4.decrypt(''.join(map(chr, buff)))
'cybrics{H1DD3N_D33P_1N_NTKRNL}\xc9'
My neighbors are always very careful about their security. For example they've just bought a new
home Wi-Fi router, and instead of just leaving it open, they instantly are setting passwords!
Don't they trust me? I feel oﬀended.
paranoid.zip
Can you give me their current router admin pw?
Solution
HTTPwiﬁwireshark802.11
WEPWPA
ﬂag
Sender
Status: Completed Tag: Cyber
Description
Author: Vlad Roskov (vos)
We've intercepted this text oﬀ the wire of some conspirator, but we have no idea what to do with
that.
intercepted_text.txt
Get us their secret documents
Solution
Base64 decode to get the content of email, his username and password.
Use the username and password to login to his email via POP protocol to download the archive
then decompress it with the password in the content.
Matreshka
Status: Completed Tag: Reverse
Description
Author: Khanov Artur (awengar)
Matreshka hides ﬂag. Open it
Solution
Solution
ELF
golang
Pyc
magic number 42 0Dpython 3.7 b5
# 
>>> from Crypto.Cipher import DES
>>> key = "matreha!"
>>> des = DES.new(key)
>>> buffer = [76, -99, 37, 75, -68, 10, -52, 10, -5, 9, 92, 1, 99, -94, 105, 
-18]
>>> buffer = map(lambda x: x & 0xff, buffer)
>>> buffer
[76, 157, 37, 75, 188, 10, 204, 10, 251, 9, 92, 1, 99, 162, 105, 238]
>>> des.decrypt(''.join(map(chr, buffer)))
'lettreha\x08\x08\x08\x08\x08\x08\x08\x08'
>>> key = 'lettreha'
>>> des = DES.new(key)
>>> buf = open('/Users/acdxvfsvd/Downloads/matreshka/data.bin', 'rb').read()
>>> buffer = des.decrypt(buf)
>>> f = open('/Users/acdxvfsvd/Downloads/matreshka/data2.bin', 'wb')
>>> f.write(buffer)
>>> f.close()
>>> from Crypto.Cipher import ARC4
>>> key = [1,3,3,7,3,3,8,1]
>>> key = ''.join(map(chr, key))
>>> buf = [
...     0x53, 0xDD, 0xC5, 0x87, 0xE4, 0x63, 0x99, 0x14, 0x4F, 0xA4,
...   0x14, 0x2D, 0xC4, 0x24, 0x04, 0xC0, 0xB0
... ]
>>> rc4 = ARC4.new(key)
>>> rc4.decrypt(''.join(map(chr, buf)))
'kroshka_matreshka'
def decode(data, key):
    idx = 0
    res = []
# WARNING: Decompyle incomplete
XOR, ﬂagcybrics{
flag = [
    40,
    11,
    82,
    58,
    93,
    82,
    64,
    76,
    6,
    70,
    100,
    26,
    7,
    4,
    123,
    124,
    127,
    45,
    1,
    125,
    107,
    115,
    0,
    2,
    31,
    15]
print('Enter key to get flag:')
key = input()
if len(key) != 8:
    print('Invalid len')
    quit()
res = decode(flag, key)
>>> flag = [
...     40,
...     11,
...     82,
...     58,
...     93,
...     82,
...     64,
...     76,
...     6,
...     70,
...     100,
...     26,
keyﬂag
Oldman Reverse
Status: Completed Tag: Reverse
Description
Author: George Zaytsev (groke)
I've found this ﬁle in my grandfather garage. Help me understand what it does
oldman.asm
Solution
...     7,
...     4,
...     123,
...     124,
...     127,
...     45,
...     1,
...     125,
...     107,
...     115,
...     0,
...     2,
...     31,
...     15]
>>> map(ord, 'cybrics{')
[99, 121, 98, 114, 105, 99, 115, 123]
>>> key = [99 ^ 40, 11 ^ 121, 82 ^ 98, 58 ^ 114, 93 ^ 105, 82 ^ 99, 64 ^ 115, 
76 ^ 123]
>>> key
[75, 114, 48, 72, 52, 49, 51, 55]
>>> ''.join(map(chr, key))
'Kr0H4137'
.MCALL  .TTYOUT,.EXIT
START:
    mov   #MSG r1 
    mov #0d r2
    mov #32d r3
loop:       
    mov   #MSG r1 
    add r2 r1
    movb    (r1) r0
NopeSQL
Status: Completed Tag: WEB
Description
Author: Alexander Menshchikov (n0str)
Maybe you can login and ﬁnd unusual secret news
http://173.199.118.226/
Solution
    .TTYOUT
    sub #1d r3
    cmp #0 r3
    beq     DONE
    add #33d r2
    swab r2
    clrb r2
    swab r2    
    br      loop      
DONE: 
    .EXIT
MSG:
    .ascii 
"cp33AI9~p78f8h1UcspOtKMQbxSKdq~^0yANxbnN)d}k&6eUNr66UK7Hsk_uFSb5#9b&PjV5_8phe
7C#CLc#rh0dMzi>
_KXGxv1cIs1q(QwpnONOU9PtP35JJ5>> text = 