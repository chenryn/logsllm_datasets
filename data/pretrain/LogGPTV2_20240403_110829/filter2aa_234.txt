# DNS - Devious Name Services: Destroying Privacy & Anonymity Without Your Consent

**Presenter: Jim Nitterauer, Senior Security Specialist**

---

### Disclaimer
- The information in this presentation is intended to enhance your security and privacy. It should not be used for unethical purposes.
- The concepts presented are not original research by me or my employer.
- Information is gathered from public and private sources, with proper references and credits provided where applicable.
- The views expressed here are my own and do not necessarily reflect those of my employer.

---

### Why Am I Here?
![The Great Firewall of China](http://bestvpnprovider.co/wp-content/uploads/2015/01/VPN-Blocked-in-China-The-Great-Firewall-Strikes-Again.png)

---

### Agenda
1. **Review DNS, EDNS0 Extensions, and Option Codes**
2. **Discuss the Rationale for EDNS0 Use**
3. **Examine EDNS Client Subnet (ECS)**
4. **Review DNS Resolver Support**
5. **Examine Tools & Procedures for Testing**
6. **Discuss Privacy Implications of EDNS0 OPT Codes**
7. **Discuss Potential for Abuse**
8. **Questions & Answers**

---

### Goals for Today
- Understand the basics of EDNS OPT Resource Records (RRs).
- Recognize the potential threat to your privacy.
- Learn how to detect the use of EDNS OPTs.
- Be able to better ensure your online privacy.

---

### Brief History of DNS
- **Introduced in 1983** by Paul Mockapetris and Jon Postel at the Information Sciences Institute, USC.
- **RFC 882 & RFC 883** updated by RFC 973 in 1986.
- **Obsoleted by RFC 1034 & RFC 1035** in 1987:
  - **RFC 1034**: Describes the data structure and exchange of data.
  - **RFC 1035**: Describes record and infrastructure format.
- **Main Components**:
  - Namespace
  - Resource Records (RRs)
  - Resolvers
  - Name Servers
- **Improvements**:
  - Master/Slave relationships
  - Notify and IXFR (Incremental Zone Transfers)
  - Dynamic Updates (RFC 2136)
  - Extension Mechanisms for DNS (EDNS0) - RFC 2671 & RFC 6891
  - Clarifications (RFC 2181), Negative Responses (RFC 2308)
  - DNS Security (DNSSEC) - RFC 2535 (now RFC 6840)

---

### EDNS RFC 2671 & 6891
- **Proposed by Paul Vixie in 1999**, replaced by RFC 6891 in 2013.
- **Overcomes 512-byte UDP packet size limit**.
- **Support required for modern DNS features**.
- **Defines transport standards and option format**.

---

### EDNS Option Codes
- **IANA Registry**: [https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11)
- **Long list of RFCs and Drafts**:
  - 11 RFCs
  - 3 Drafts
  - Approximately 17 codes in use
- **Future Expansion**: 65,535 possible code assignments.
- **OPT Record**:
  - Extends RCODE field from 4 to 12 bytes.
  - Defines OPT Record (Resource Record Type 41).
  - Supports DNSSEC (RFC 3225).

---

### Review of OPT Option Codes
| Code | Name | Status | Description | Vendor |
|------|------|--------|-------------|--------|
| 0    | Reserved | - | - | - |
| 1    | LLQ | Draft (expired) | DNS Long Lived Queries | Apple |
| 2    | UL | Draft (expired) | Dynamic DNS Update Leases | Apple |
| 3    | NSID | RFC 5001 | DNS Name Server Identifier | ISC |
| 4    | - | Draft (expired) | - | - |
| 5    | DAU | RFC 6975 | DNSSEC Algorithm Understood | NIST |
| 6    | DHU | RFC 6975 | DS Hash Understood | NIST |
| 7    | N3U | RFC 6975 | NSEC3 Hash Understood | NIST |
| 8    | ECS | RFC 7871 | EDNS Client Subnet | Google Akamai |
| 9    | EDNS EXP | RFC 7314 | SOA Expire Identifier | ISC |
| 10   | COOKIE | RFC 7873 | DNS Cookies | ISC, Huawei |
| 11   | EDNS-TCP | RFC 7828 | TCP Keepalive | Red Hat, Dyn, ISC |
| 12   | PADDING | RFC 7830 | Random Padding | GmbH |
| 13   | CHAIN | RFC 7901 | CHAIN Query Requests | Red Hat |
| 14   | EDNS KEY | RFC 8145 | DNSSEC | Verisign, Google, ICANN |
| 26946 | DEVICEID | Experimental | Umbrella Device ID | Cisco |
| UA   | ISP LOC | Draft | ISP Location in DNS | CNNIC |
| UA   | CLIENT ID | Draft | Client ID in Forwarded DNS | Charter, Akamai |

---

### EDNS Use Cases
- **DNSSEC Implementation (OPT 5, 6, & 7)**:
  - Inform resolvers about cryptographic algorithms.
  - Enable validating end-system resolvers to specify supported algorithms.
- **EDNS Client Subnet (ECS) - OPT 8**:
  - Sends IPv4 WAN or IPv6 address subnet of the requester.
  - Enables Content Delivery Networks via DNS.
- **DeviceID - OPT 26946**:
  - Used by Cisco Umbrella.
  - Sends organization ID, remote IP, and IPv6.
- **ISP Location in DNS Queries - Draft**:
  - Proposed by CNNIC.
  - Includes country, area, and ISP.
- **Client ID in Forwarded DNS Queries - Draft**:
  - Proposed by Akamai.
  - Provides precise client identity for parental control, domain access restriction, and compromise attribution.

---

### EDNS Client Subnet
- **Initial Draft** by C. Contavalli & W. van der Gaast (Google), S. Leach (Verisign), D. Rodden (Neustar) on January 27th, 2011.
- **Revisions**:
  - Revision 02 submitted on July 4th, 2013.
  - Revision 03 submitted on August 24th, 2015.
  - Revision 04 submitted on September 25th, 2015.
  - Revision 05 submitted on December 14th, 2015.
  - Revision 06 submitted on December 15th, 2015.
  - Revision 07 submitted on March 21st, 2016.
  - Revision 08 submitted on April 19th, 2016.
  - Finalized as RFC 7871 in May 2016.
- **Patent**:
  - Number WO2013164007 A1, submitted by Jan Seedorf & Mayutan Arumaithurai (Nec Europe Ltd.) on April 30th, 2012.
  - U.S. Patent number US20150134730 A1, still in application status.

---

### EDNS Client Subnet Workflow
- **Client**:
  - Checks cache.
  - Sends request to resolver.
- **Resolver**:
  - Checks cache or forwards to root.
  - If ECS supported, sending IP is packaged into OPT RR Data.
- **Authoritative**:
  - Supplies answer.
  - If ECS aware, sends geographically appropriate answer.
- **Client**:
  - Receives best route based on geolocation.
  - All clients on the same subnet get the same answer.

---

### EDNS Client Subnet Support
- **Authoritative**:
  - Google, Akamai, NS1, OpenDNS, UltraDNS, PowerDNS, BIND 9.11, Amazon CloudFront.
- **Recursive**:
  - Unbound 1.6.2, PowerDNS, Google, OpenDNS, BIND 9.11, Amazon CloudFront.

---

### Tools for Evaluating Use
- **No Up-to-Date Listing** for ECS compliant DNS records.
- **Provider Tech Material** or direct inquiries are necessary.
- **dig Command**:
  - `dig @8.8.8.8 +short -t txt edns-client-sub.net` targets the name server and returns a JSON packet.
  - `dig @x.x.x.x –t ns avaliddomain.com +subnet=y.y.y.y` targets x.x.x.x, supplies ECS data y.y.y.y, and checks OPT PSEUDOSECTION.
- **Packetbeat and Graylog**:
  - Capture DNS traffic and forward to Graylog.
  - Tag DNS messages and correlate to source and destination IPs.
- **Wireshark or TCPDump**:
  - Filter by `dns.opt.code == 8`.
  - Note the full IP of the requester, subnet mask, and scope mask.
- **Nmap Script**:
  - `dns-client-subnet-scan.nse` for isolated testing.
- **Alexa Top 1 Million Sites**:
  - Download and query each nameserver, supply ECS data, and parse options returned.

---

### DNS Packages Supporting EDNS OPT
- **.NET**:
  - ARSoft.Tools.Net
- **Python**:
  - Dnspython (Nomium project)
  - Twisted Matrix
  - Getdns-python-bindings
  - Pydig
- **PHP**:
  - NET_DNS2

---

### Privacy & Security Implications
- **Leaks IP Information** to every DNS server touched.
- **First Server** may not honor subnet restrictions.
- **/32 Subnet** can attribute all DNS to the source IP.
- **Other Data Leaks** (e.g., MAC addresses, credentials).
- **Data Can Be Captured** by anyone in the path.
- **Lack of Disclosure** and documentation.
- **Implementers** can track data without your knowledge.
- **No Easy Opt-Out** mechanism.
- **Malware** can use this for C&C traffic.
- **Data Manipulation** (e.g., using dig to spoof subnets).
- **Erroneous Attribution** can be dangerous, especially if law enforcement is involved.
- **Third-Party Data Recipients** can buy info regarding your DNS habits.
- **Privacy** is compromised without extra measures.

---

### Defensive Options
- **Know What’s Normal**.
- **Understand IPv6 vs. IPv4**.
- **Route All DNS** to known recursive resolvers that do not pass EDNS OPT data or pass fake data.
- **Lock Out Non-Validated DNS** at the edge.
- **Disable EDNS(0)** (not recommended).
- **Monitor DNS** using Packetbeat/Graylog and full capture if needed (Bro, Security Onion, etc.).
- **Create IPS Rules** as needed.
- **Enforce DNSSEC** (may break some things).

---

### Offensive Options
- **Create Noise** by generating scripted DNS with forged OPT data.
- **Use Full VPN Tunnel** to route all traffic through a "safe" exit point.
- **Tor Past Safe End Point**.
- **Account for IPv6 Traffic**.
- **Disable IPv6 Temporarily**.
- **Use TorGhost** (works only with IPv4).
- **Test with Wireshark or TCPDump**.

---

### Summary
- **Benefits**:
  - Allows CDN via DNS.
  - Enables DNSSEC.
  - Enables multi-tenant cache servers to cache data for different endpoints.
  - DNS responses can be altered quickly in case of traffic overload.
  - Signature of compromise can be attributed to IP or MAC.
- **Privacy Concerns**:
  - All servers in the DNS path can track data.
  - No standard for opting out.
  - Privacy is compromised when EDNS OPT data is forwarded.
  - No mechanism to verify OPT data accuracy.
  - Data mining is likely once providers fully implement.
- **Potential for Abuse**:
  - Data can be easily spoofed.
  - 65,535 possible OPT choices.
  - Botnet C&C and data exfiltration.

---

### Wrap Up
- **Questions & Answers**
- **Contact Info**:
  - Email: [PI:EMAIL]
  - Twitter: [@jnitterauer]
  - LinkedIn: [https://www.linkedin.com/in/jnitterauer](https://www.linkedin.com/in/jnitterauer)
  - Phone: 850-932-5338 ext. 6468