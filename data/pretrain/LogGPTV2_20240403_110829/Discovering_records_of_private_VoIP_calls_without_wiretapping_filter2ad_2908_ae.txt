the  target’s  IP  address  is  necessary  for  their  attack,  but  not  for 
ours.  Third,  we  assume  that  every  entry  in  the  protocol  buffer 
expires  independently,  whereas  they  use  a  FIFO  queue  to  model 
how ICMP packets are processed.  
Although  we  use  resource  exhaustion  in  a  similar  way  as 
research  on  covert  channels,  ours  is  a  side  channel,  not  a  covert 
channel,  since  we  do  not  need  a  Trojan  Horse  program  installed 
on  a  targeted  phone  to  leak  its  busy  status  [18].  However,  in 
contrast with traditional side-channel attacks used in cryptography 
[15,  16]  and  non-traditional  ones  used  to  detect  clock  skew  in 
remote  hosts  [21],  our  attack  correlates  the  side  channels  of 
multiple network nodes, rather than operating on a single node. 
Our  side-channel  is  based  on  resource-use  detection  and  is 
somewhat  reminiscent  of  the  resource  exhaustion  attack  in  the 
TCP  SYN  flooding  analyzed  by  Schuba  et  al.  [27].  Both  TCP 
SYN  flooding  and  our  attack  send  packets  to  fill  a  buffer. 5 
However,  these  attacks  differ  in  their  execution  and  goals:  our 
attack  determines  the  current  size  of  the  buffers,  whereas  TCP 
SYN flooding fills a host buffer to disable the host. 
5 TCP is a three-way hand-shake protocol. The client sends a SYN 
packet  to  the  server;  the  server  responds  with  a  SYN/ACK 
packet;  finally the client sends ACK packets to the server.  The 
TCP  protocol  stack  needs  to  use  or  allocate  a  buffer  for 
recording  the  context  of  each  connection.  When  the  adversary 
sends numerous SYN packets to a host, the host will run out of 
buffer  slots  eventually.  Therefore  the  host  cannot  accept  any 
new connection. In other words, TCP SYN flooding is a denial 
of service attack that disables a host by sending numerous TCP 
SYN packets. 
6.  SUMMARY 
We proposed an attack for discovering call records in a VoIP 
service over a private network. We analyzed the SIP protocol and 
discovered  that  the  array-based  buffers  of  three  commercially 
available  closed-source  hardware  phones,  which  are  used  for 
storing protocol negotiation contexts, can be exploited to leak the 
busy  status  of  a  SIP  phone.  Through  the  leaked  busy  status  of  a 
callee’s  phone,  an  adversary  can  easily  detect 
the  VoIP 
communication between phones. This attack is general enough to 
hold  in  other  types  of  hardware  phones.  To  defend  against  such 
attacks,  we  suggested  several  countermeasures  based  on 
manipulating  of  the  buffer,  detecting  full  buffers  and  using 
firewalls.  
7.  ACKNOWLEDGMENTS 
This  research  was  supported  in  part  by  CyLab  at  Carnegie 
Mellon  under  grant  DAAD19-02-1-0389  from  the  US  Army 
Research  Office.  The  first  author  was  also  partially  supported  by 
the  MURI  grant  W  911  NF  0710287  from  the  Army  Research 
Office. The views and conclusions contained in this document are 
those of the authors and should not be interpreted as representing 
the  official  policies,  either  expressed  or 
implied,  of  any 
sponsoring institution, the U.S. government, or any other entity. 
8.  APPENDIX 
Appendix I: Probe Messages 
Several  attack  SIP  messages  are  listed  here.  Note  that  the 
adversary  should  use  different  Call-ID  in  different  requests  so 
they are not being identified as duplicates. 
Message 1. OPTIONS probe message 
SIP/2.0/UDP 
OPTIONS sip:PI:EMAIL SIP/2.0 
Via: 
127.0.0.1:5000;branch=z9hG4bK.1770151725;rport;alias 
From: sip:voicepulser@127.0.0.1:5000;tag=1236798926 
To: sip:PI:EMAIL 
Call-ID: 1811209364@127.0.0.1 
CSeq: 1 OPTIONS 
Contact: sip:voicepulser@127.0.0.1:5000 
Content-Length: 0 
Max-Forwards: 70 
User-Agent: Voice Pulser version 1 
Accept: text/plain 
Message 2. INVITE-require probe message 
SIP/2.0/UDP 
INVITE sip:PI:EMAIL SIP/2.0 
Via: 
127.0.0.1:5000;branch=z9hG4bK.899244477;rport;alias 
From: sip:voicepulser@127.0.0.1:5000;tag=524046249 
To: sip:PI:EMAIL 
Call-ID: 111248654@127.0.0.1 
CSeq: 1 INVITE 
Contact: sip:voicepulser@127.0.0.1:5000 
Content-Length: 0 
Max-Forwards: 70 
User-Agent: Voice Pulser version 1 
Accept: text/plain 
Require:xx 
Message 3. INVITE-SDP probe message 
SIP/2.0/UDP 
INVITE sip:PI:EMAIL SIP/2.0 
Via: 
127.0.0.1:5000;branch=z9hG4bK.600541343;rport;alias 
From: sip:voicepulser@127.0.0.1:5000;tag=1552686011 
To: sip:PI:EMAIL 
Call-ID: 1436339943@127.0.0.1 
CSeq: 1 INVITE 
Contact: sip:voicepulser@127.0.0.1:5000 
Content-Length: 181 
Content-type:  application/sdp 
Max-Forwards: 70 
User-Agent: Voice Pulser version 1 
Accept: text/plain 
v=0 
o=alice 2890844526 2890844526 IN IP4 192.168.1 
s= 
c=IN IP4 192.168.1a 
t=0 0 
m=audio 49170 RTP/AVP 0 8 97 
a=rtpmap:0 PCMU/8000 
a=rtpmap:8 PCMA/8000 
a=rtpmap:97 iLBC/8000 
Message 4. NOTIFY-refer probe message 
SIP/2.0/UDP 
NOTIFY sip:PI:EMAIL SIP/2.0 
Via: 
127.0.0.1:5000;branch=z9hG4bK.1592896042;rport;alias 
From: sip:voicepulser@127.0.0.1:5000;tag=499998901 
To: sip:PI:EMAIL 
Call-ID: 1599885472@127.0.0.1 
CSeq: 1 NOTIFY 
Contact: sip:voicepulser@127.0.0.1:5000 
Content-Length: 0 
Max-Forwards: 70 
User-Agent: Voice Pulser version 1 
Accept: text/plain 
Event:refer 
Subscription-State: active;expires=180 
Appendix II: Calculation of Disabled Period 
We illustrate the timing of busy-status detection and calculate 
the  disabled  period,  as  shown  in  Figure  11.  Consider  the  three 
relevant  time  points of  a  transaction.  The  black  diamond  and  the 
white  diamond  show  the  time  that  the  SIP  phone  receives  the 
request and responds the request, respectively,  whereas the black 
square denotes the end of a transaction. The interval between the 
first two time points is the processing time r, a small time period 
measured  to  be  between  10ms  and  100ms.  After  this  interval,  a 
transaction waits for L seconds; e.g., L is 32 seconds (Timer J) for 
non-INVITE UDP transactions.  For INVITE UDP transactions, L 
is  32  seconds  (Timer  H)  if  no  ACK  request  is  received,  and  is  5 
seconds  (Timer  I)  if  an  ACK  request  received.  These  timers  are 
standard [10]. 
In  calculating  the  disabled  period,  we  omit  the  network 
transmission  time  since  it  is  negligible  compared  to  the  disabled 
period. In Figure 10, time 0 denotes the receipt of the 1st request. 
For the first h requests, the SIP phone takes r seconds to respond 
to each request. The phone will become available to accept a new 
request after the 1st request expires, at time r+L. Thus, during time 
Figure 11. Disabled period 
(h-1)*d and time r +L, the phone is unable to accept a new request 
for (r+L)-(h-1)×d seconds.  The response to an INVITE request is 
given after the disabled period.  
Given  parameters  of  PAP2  and  7940G  along  with  an 
estimated parameter r=20ms, we are able to calculate the disabled 
period  of  both  phones.  PAP2  phone’s  disabled  period  is  29.54 
seconds  with  parameters  L=32sec,  d=80ms,  and  h=32.  7940G 
phone’s  disabled  period  (not  shortened)  is  31.62  seconds  with  a 
different  parameter  h=6.  However,  by  applying  disabled-period 
shortening, the shortened disabled period of 7940G is smaller than 
2 seconds. 
9.  REFERENCES 
[1]  Cauley, L., “NSA has Massive Database of Americans’ 
Phone Calls,” USA Today, May 2006. 
[2]  Danezis, G. “Statistical Disclosure Attacks: Traffic 
Confirmation in Open Environments, “ In Proc. of Security 
and Privacy in the Age of Uncertainty (SEC), 2003, Athens, 
Greece 
[3]  Danezis, G., and Diaz, C. ”A survey of anonymous 
communication channels,”  Microsoft Research Technical 
Report (MSR-TR-2008-35), Jan. 2008 
[4]  Dingledine, R., Mathewson, N., and Syverson, P. “Tor: The 
Second-Generation Onion Router, “ In Proc. of the 13th 
USENIX Security Symposium, 2004, San Diego, CA 
[5]  Fathi, H., Chakraborty, S. S., and Prasad, R. “Optimization 
of SIP Session Setup Delay for VoIP in 3G Wireless 
Networks, “IEEE Transaction on Mobile Computing, Vol. 5, 
No. 9, Sep. 2006 
[6]  Fyodor, “Remote OS Detection via TCP/IP Stack 
FingerPrinting,” Phrack 54, 8, Dec 1998. URL 
http://nmap.org/nmap-fingerprinting-article.txt 
[7]  Gilbert, E., and Karahalios, K. “Predicting Tie Strength With 
Social Media," In Proc. of ACM CHI 2009, April 2009, 
Boston, MA 
[8]  Gong, X.,  Kiyavash, N. and  Borisov, N., “Fingerprinting 
Websites Using Remote Traffic Analysis,” In Proc. of ACM 
CCS, 2010, Chicago, IL 
[9]  IANA-defined SIP Parameters, 
http://www.iana.org/assignments/sip-parameters 
[10] IETF RFC 3261, “SIP: Session Initiation Protocol”  
[11] IETF RFC 3264, “An Offer/Answer Model with the Session 
[24] Pfitzmann, A. and Hansen, M. “A terminology for talking 
Description Protocol (SDP)” 
[12] IETF RFC 3265, “Session Initiation Protocol (SIP)-Specific 
Event Notification” 
[13] ITU-T G.114, One-way transmission time 
[14] Jong, C.-H., Voice Pulser SIP attack program, 
https://code.google.com/p/voice-pulser/ 
[15] Kocher, P.C. “Timing Attacks on Implementations of Diffie-
Hellman, RSA, DSS, and Other Systems,” In Proc. Of 
CRYPTO, 1996, Santa Barbara, CA 
[16] Kocher, P.C., Jaffe, J., and Jun, B. “Differential Power 
Analysis,” In Proc. of CRYPTO, 1999, Santa Barbara, CA 
[17] Kazatzopoulos, L., Delakouridis, C., and Marias, G.F. 
“Providing Anonymity Services in SIP,” In Proc. of IEEE 
PIMRC,  2008, Cannes, France 
[18] Lin, Y.-B. and Tsai, M.-H. “Eavesdropping Through Mobile 
Phone,” IEEE Transaction on Vehicular Technology, Vol 56, 
Issue 6, Nov 2007 
about privacy by data minimization:Anonymity, 
Unlinkability, Undetectability, Unobservability, 
Pseudonymity, and Identity Management,”  Version 0.34 
Aug. 10, 2010, available on http://dud.inf.tu-
dresden.de/Anon_Terminology.shtml 
[25] Resig, J., Dawara, S., Homan, C. M., and Teredesai, A. 
“Extracting Social Networks from Instant Messaging 
Populations, “ In Proc. Of LinkKDD, 2004, Seattle, WA 
[26] Srivatsa, M., Iyengar, A., Liu, L., and Jiang, H. “Privacy in 
VoIP Networks: Flow Analysis Attacks and Defense, “IEEE 
Transaction on Parallel and Distributed Systems, Vol. 22, 
No. 4, April 2011 
[27] Schuba, C. L., Krsul, I. V., Kuhn, M. G., Spafford, E. H., 
Sundaram, A., and Zamboni, D. “Analysis of a denial of 
service attack on TCP, “ In Proc. of IEEE Symposium of 
Security and Privacy, 1997, Oakland, California 
[28] Solomon, J., Johnson, C. “FBI Broke Law for Years in 
Phone Record Searches,” Washington Post, Jan. 2010. 
[19] Markoff, J. “Taking Spying to a Higher Level,” New York 
[29] Superstructure Group, “SiD Case Study in Drug 
Times, Feb. 2006. 
[20] McKeay, M. ‘Taking Corporate Spying to a Higher Level,” 
Computerworld, 2006.  
[21] Murdoch, S. J. “Hot or Not: Revealing Hidden Services by 
their Clock Skew, “In Proc. of ACM CCS, 2006, Alexandria, 
VA 
[22] Murdoch, S. J. and Danezis, G.  “Low-Cost Traffic Analysis 
of Tor,” In Proc. of the IEEE Symposium on Security and 
Privacy, 2005, Oakland, CA 
Intelligence,” rel. 1.1, February 2011, 
www.superstructuregroup.com/Resources/SiDCaseStudy_Dr
ugIntell.pdf (accessed Aug. 20, 2011) 
[30] Wang, X., Chen, S., Jajodia, S. “Tracking Anonymous Peer-
to-Peer VoIP Calls on the Internet,” In Proc. of ACM CCS, 
2005, Alexandria, VA 
[31] Wright,C., Ballard, L., Coull, S., and Monrose, F. "Spot Me 
If You Can: recovering spoken phrases in encrypted VOIP 
conversations,"  In Proc. of IEEE Symposium on Security 
and Privacy, May, 2008, Oakland, CA 
[23] Padhye, J. and Floyd, S. “On Inferring TCP Behavior,” In 
Proc. of ACM SIGCOMM, 2001, San Diego, CA