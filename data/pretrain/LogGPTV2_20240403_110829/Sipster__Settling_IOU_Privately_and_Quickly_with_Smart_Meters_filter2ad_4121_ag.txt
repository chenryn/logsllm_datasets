### References

1. Alexandra Boldyreva. 2003. Threshold Signatures, Multisignatures and Blind Signatures Based on the Gap-Diffie-Hellman-Group Signature Scheme. In *Public Key Cryptography (PKC)*. 31–46.
2. Dan Boneh, Craig Gentry, Ben Lynn, and Hovav Shacham. 2003. Aggregate and Verifiably Encrypted Signatures from Bilinear Maps. In *EUROCRYPT*. 416–432.
3. Dan Boneh, Ben Lynn, and Hovav Shacham. 2001. Short Signatures from the Weil Pairing. In *ASIACRYPT*. 514–532.
4. Jan Camenisch, Susan Hohenberger, and Anna Lysyanskaya. 2005. Compact E-Cash. In *EUROCRYPT*. 302–321.
5. Jan Camenisch and Anna Lysyanskaya. 2002. Dynamic Accumulators and Application to Efficient Revocation of Anonymous Credentials. In *CRYPTO*. 61–76.
6. Dario Catalano, Dario Fiore, and Luca Nizzardo. 2015. Programmable Hash Functions Go Private: Constructions and Applications to (Homomorphic) Signatures with Shorter Public Keys. In *CRYPTO (Part II)*. 254–274.
7. Dario Catalano, Dario Fiore, and Bogdan Warinschi. 2014. Homomorphic Signatures with Efficient Verification for Polynomial Functions. In *CRYPTO (Part I)*. 371–389.
8. Jae Choon Cha and Jung Hee Cheon. 2003. An Identity-Based Signature from Gap Diffie-Hellman Groups. In *Public Key Cryptography (PKC)*. 18–30.
9. Melissa Chase and Sherman S. M. Chow. 2009. Improving Privacy and Security in Multi-Authority Attribute-Based Encryption. In *ACM Conference on Computer and Communications Security (CCS)*. 121–130.
10. Sanjit Chatterjee, Darrel Hankerson, Edward Knapp, and Alfred Menezes. 2010. Comparing Two Pairing-based Aggregate Signature Schemes. *Des. Codes Cryptogr.* 55, 2-3 (2010), 141–167.
11. David Chaum. 1982. Blind Signatures for Untraceable Payments. In *CRYPTO*. 199–203.
12. Sherman S. M. Chow. 2016. Functional Credentials for Internet of Things. In *Workshop on IoT Privacy, Trust, and Security, IoTPTS@AsiaCCS*. 1.
13. Sherman S. M. Chow, Lucas Chi Kwong Hui, Siu-Ming Yiu, and K. P. Chow. 2005. Two Improved Partially Blind Signature Schemes from Bilinear Pairings. In *Australasian Conference on Information Security and Privacy (ACISP)*. 316–328.
14. Sherman S. M. Chow, Russell W. F. Lai, Xiuhua Wang, and Yongjun Zhao. 2016. Privacy Preserving Credit Systems. In *Network and System Security (NSS)*. 184–199.
15. Sherman S. M. Chow, Alexander Russell, Qiang Tang, Moti Yung, Yongjun Zhao, and Hong-Sheng Zhou. 2019. Let a Non-barking Watchdog Bite: Cliptographic Signatures with an Offline Watchdog. In *Public Key Cryptography (PKC) Part I*. 221–251.
16. George Danezis, Markulf Kohlweiss, and Alfredo Rial. 2011. Differentially Private Billing with Rebates. In *Information Hiding*. 148–162.
17. Amit Datta, Marc Joye, and Nadia Fawaz. 2019. Private Data Aggregation over Selected Subsets of Users. In *Cryptology and Network Security (CANS)*. 375–391.
18. Yevgeniy Dodis, Ilya Mironov, and Noah Stephens-Davidowitz. 2016. Message Transmission with Reverse Firewalls - Secure Communication on Corrupted Machines. In *CRYPTO Part I*. 341–372.
19. Zekeriya Erkin and Gene Tsudik. 2012. Private Computation of Spatial and Temporal Power Consumption with Smart Meters. In *Applied Cryptography and Network Security (ACNS)*. 561–577.
20. Flavio D. Garcia and Bart Jacobs. 2010. Privacy-Friendly Energy-Metering via Homomorphic Encryption. In *Security and Trust Management (STM)*. 226–238.
21. B. Kelsey Jack and Grant Smith. 2015. Pay as You Go: Prepaid Metering and Electricity Expenditures in South Africa. *The American Economic Review* 105, 5 (2015), 237–241.
22. Marek Jawurek, Martin Johns, and Florian Kerschbaum. 2011. Plug-In Privacy for Smart Metering Billing. In *Privacy Enhancing Technologies Symposium (PETS)*. 192–210.
23. Marek Jawurek, Florian Kerschbaum, and George Danezis. 2012. Privacy Technologies for Smart Grids - A Survey of Options. Technical Report MSR-TR-2012-119. https://www.microsoft.com/en-us/research/publication/privacy-technologies-for-smart-grids-a-survey-of-options
24. Klaus Kursawe, George Danezis, and Markulf Kohlweiss. 2011. Privacy-Friendly Aggregation for the Smart-Grid. In *Privacy Enhancing Technologies Symposium (PETS)*. 175–191.
25. Russell W. F. Lai, Raymond K. H. Tai, Harry W. H. Wong, and Sherman S. M. Chow. 2018. Multi-key Homomorphic Signatures Unforgeable Under Insider Corruption. In *ASIACRYPT Part II*. 465–492.
26. Hsiao-Ying Lin, Wen-Guey Tzeng, Shiuan-Tzuo Shen, and Bao-Shuh Paul Lin. 2012. A Practical Smart Metering System Supporting Privacy Preserving Billing and Load Monitoring. In *Applied Cryptography and Network Security (ACNS)*. 544–560.
27. Ian Miers, Christina Garman, Matthew Green, and Aviel D. Rubin. 2013. Zerocoin: Anonymous Distributed E-Cash from Bitcoin. In *IEEE S&P*. 397–411.
28. Ilya Mironov and Noah Stephens-Davidowitz. 2015. Cryptographic Reverse Firewalls. In *EUROCRYPT*. 657–686.
29. Moni Naor, Benny Pinkas, and Omer Reingold. 1999. Distributed Pseudo-random Functions and KDCs. In *EUROCRYPT*. 327–346.
30. National Institute of Standards and Technology. 2000. FIPS PUB 186-2: Digital Signature Standard (DSS). NIST.
31. Lucien K. L. Ng, Sherman S. M. Chow, Anna P. Y. Woo, Donald P. H. Wong, and Yongjun Zhao. 2021. Goten: GPU-Outsourcing Trusted Execution of Neural Network Training. In *AAAI*. 14876–14883.
32. Shen Noether and Adam Mackenzie. 2016. Ring Confidential Transactions. *Ledger* 1 (2016), 1–18. https://ledgerjournal.org/ojs/index.php/ledger/article/view/34
33. Faranaaz Parker. 2010. Pay-As-You-Go Healthcare Launches in South Africa. http://mg.co.za/article/2010-12-02-payasyougo-healthcare-launches-in-south-africa.
34. David Pointcheval and Olivier Sanders. 2016. Short Randomizable Signatures. In *Cryptographers’ Track at the RSA Conference (CT-RSA)*. 111–126.
35. Raluca A. Popa, Hari Balakrishnan, and Andrew J. Blumberg. 2009. VPriv: Protecting Privacy in Location-Based Vehicular Services. In *USENIX Security Symposium*. 335–350.
36. Quindi Research. 2017. Smart Prepaid Utilities in the United States: Forecasts & Analysis. https://www.exceleron.com/wp-content/uploads/2017/03/QRL-US-Smart-Prepaid-Utilities-Report-Summary-Exceleron-1.pdf.
37. Alfredo Rial and George Danezis. 2011. Privacy-Preserving Smart Metering. In *Workshop on Privacy in the Electronic Society (WPES)*. 49–60.
38. Andy Rupp, Foteini Baldimtsi, Gesine Hinterwälder, and Christof Paar. 2015. Cryptographic Theory Meets Practice: Efficient and Privacy-Preserving Payments for Public Transport. *ACM Trans. Inf. Syst. Secur.* 17, 3 (2015), 10:1–10:31.
39. Antonio G. Ruzzelli, C. Nicolas, Anthony Schoofs, and Gregory M. P. O’Hare. 2010. Real-Time Recognition and Profiling of Appliances through a Single Electricity Sensor. In *Sensor, Mesh and Ad Hoc Communications and Networks (SECON)*. 279–287.
40. Elaine Shi, T.-H. Hubert Chan, Eleanor Gilbert Rieffel, Richard Chow, and Dawn Song. 2011. Privacy-Preserving Aggregation of Time-Series Data. In *NDSS*. 17 pages.
41. Siemens. 2019. Smart Metering Software Prepayment Metering Solutions. http://w3.siemens.com/smartgrid/global/en/products-systems-solutions/smart-metering/software-systems-solutions/pages/prepayment.aspx.
42. SmartGridCIS. 2015. SmartGridCIS Fuels “Pay-as-you-Go” Program for Wake Forest Power. http://sgcisonline.com/wp-content/uploads/2015/07/Wake-Forest-Case-Study.pdf.
43. Patrick P. Tsang, Sherman S. M. Chow, and Sean W. Smith. 2007. Batch Pairing Delegation. In *International Workshop on Security (IWSEC)*. 74–90.
44. Jiafan Wang, Minxin Du, and Sherman S. M. Chow. 2020. Stargazing in the Dark: Secure Skyline Queries with SGX. In *Database Systems for Advanced Applications (DASFAA) Part III*. 322–338.
45. Eric A. Young and Tim J. Hudson. 2011. OpenSSL: The Open Source Toolkit for SSL/TLS.

### A Privacy-Preserving Aggregation

Bill generation is considered a special case of data aggregation [34]. Each user can mask their readings before submitting them to the company. These masks can be obtained through collaboration among all users [35], such that the aggregated masks cancel each other out, but this approach incurs significant communication overhead. Acs and Castelluccia [3] employ a differential privacy model, where users add carefully designed noise to their readings to hide the real values. The utility company can then obtain the sum of the noisy readings, which sacrifices data accuracy for privacy.

Garcia and Jacobs [31] use homomorphic encryption to encrypt secret shares of the measurements and distribute them to each member in the aggregation group. With homomorphism, every user can obtain an aggregated share encrypted under the public key. The user then sends the decryption result of the aggregated shares to the utility company, who finally obtains the total consumption without knowing individual measurements. Erkin and Tsudik [30] develop another aggregation scheme using encryption as a homomorphic commitment. The scheme splits a value (specifically, the modulo) into random shares among the users. An individual user's reading is committed with the exponent of the random term (which was the modulo originally) being the share. When all commitments are combined, the random shares cancel each other out.

To hide individual usage, all the above schemes aggregate individual consumption over either a long duration or a group of users. In short, privacy-preserving data aggregation is a form of secure multi-party computation of secret values but is not related to subsequent payments based on those values. On the other hand, our payment problem requires signatures certifying the secret amounts and aims to achieve seemingly contradictory requirements (e.g., unlinkability between payments and receipts and preventing double claims of the same receipt).

### B Basic Definitions

**Definition 1 (Existential Unforgeability).** Let \( SS = (KGen, Sign, Verify) \) be a signature scheme. We say that \( SS \) is \((t, q, \epsilon)\)-EUF-CMA-secure if for all probabilistic polynomial-time (PPT) adversaries \( A \) running in time \( t \):

\[
\Pr \left[ \text{Verify}(vk, (m^*, \sigma^*)) = 1 \land m^* \notin Q : (vk, sk) \leftarrow KGen(1^\lambda); (m^*, \sigma^*) \leftarrow A^{\text{Sign}(sk, \cdot)}(vk) \right] \leq \epsilon
\]

where \( Q = \{m_1, \ldots, m_q\} \) denotes the set of queries to the signing oracle. Whenever \( q = \text{poly}(\lambda) \) and \( \epsilon(\lambda) = \text{negl}(\lambda) \), we simply say that \( SS \) is EUF-CMA-secure.

A group sampler is a PPT algorithm \( IG \) that, on input the security parameter \( \lambda \), outputs a tuple \((G, g, q) \leftarrow IG(1^\lambda)\). It defines a \(\text{poly}(\lambda)\)-bit representation for group elements in \( G \) of order \( q \). For simplicity, we omit the indication of \( IG \) hereafter, but note that in the following definitions, the probabilities are also taken over the randomness of \( IG \).

**Definition 2 (Computational Diffie-Hellman Problem).** Given \((g, g^x, g^y)\), compute \( g^{xy} \), where \(\{g, g^x, g^y\} \in G\) and \((x, y) \leftarrow \mathbb{Z}_q^2\). Let the advantage of a PPT algorithm \( A \) in solving the computational Diffie-Hellman (CDH) problem be:

\[
\text{Adv}_{A}^{\text{CDH}} = \Pr[(x, y) \leftarrow \mathbb{Z}_q^2 : A(g, g^x, g^y) = g^{xy}]
\]

The CDH assumption requires that, for any PPT adversary \( A \), the advantage of solving the CDH problem \(\text{Adv}_{A}^{\text{CDH}}\) is negligible.

**Gap Diffie-Hellman (Gap-DH) groups** (e.g., [12, 19]) are those where the decisional Diffie-Hellman (DDH) problem can be solved in polynomial time, but no PPT algorithm can solve the CDH problem with non-negligible probability, e.g., bilinear groups. Let \( O_{\text{DDH}}(\cdot) \) denote an oracle machine that takes input \((g, g^x, g^y, g^z) \in G^4\), outputs 1 if \( z = xy \) and outputs 0 otherwise.

**Definition 3 (Gap-Diffie-Hellman (Gap-DH) Problem).** Given \((g, g^x, g^y)\) and access to a DDH oracle \( O_{\text{DDH}}(\cdot) \), compute \( g^{xy} \), where \(\{g, g^x, g^y\} \in G\) and \((x, y) \leftarrow \mathbb{Z}_q^2\). Let the advantage of a PPT algorithm \( A \) in solving the gap-DH problem \(\text{Adv}_{A}^{\text{Gap-DH}}\) be:

\[
\text{Adv}_{A}^{\text{Gap-DH}} = \Pr[(x, y) \leftarrow \mathbb{Z}_q^2 : A^{O_{\text{DDH}}(\cdot)}(g, g^x, g^y) = g^{xy}]
\]

The gap-DH assumption requires that, for any PPT adversary \( A \), the advantage of solving the gap-DH problem \(\text{Adv}_{A}^{\text{Gap-DH}}\) is negligible. We assume that the gap-DH assumption holds in bilinear group \( G_1 \). The use of pairing groups enables such a DDH oracle.

### C Formal Security Analysis

#### C.1 Privacy

First, we claim that Sipster satisfies privacy, meaning the utility company (UC) cannot infer how many e-coins it receives from a residential user (RU), nor link any spending of e-coin to a particular RU.

To define privacy, we introduce a user indistinguishability game between an adversary \( A \), acting as the malicious UC, and a challenger \( C \), acting as both the RU and smart meters (SMs). This definition ensures that a curious UC cannot differentiate users who made payments in Sipster, even when the UC can choose these target users and adaptively induce them to perform payment-related operations of its choice.

**Definition 4 (User Indistinguishability).** The user indistinguishability game between an adversary \( A \) and a challenger \( C \) proceeds in steps as follows:

- **Setup Phase:** \( C \) runs the key generation algorithm of a digital signature scheme to obtain a verification/signing key pair \((vk_{\text{SM}}, sk_{\text{SM}})\), and gives the verification key \( vk_{\text{SM}} \) to \( A \). \( C \) plays the role of the RU and \( N \) smart meter instances \(\{SM_i\}_{i \in [N]}\) that share the same signing key \( sk_{\text{SM}} \). The internal states \(\{\tau_i\}_{i \in [N]}\) are initialized. \( C \) also initializes empty sets \( ID \) (for recording corrupted IDs) and \(\{RC_i\}_{i \in [N]}\) (for storing receipts). \( C \) chooses a random permutation \( \pi : [N] \to [N] \). \( A \) chooses a billing period \( t \). It runs the setup algorithm for the system.