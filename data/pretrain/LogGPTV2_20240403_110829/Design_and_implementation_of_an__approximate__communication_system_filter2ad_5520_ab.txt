randomly to symbol positions. Then, when an error occurs, the
likelihood of a correct value in any given bit position is purely by
chance. The probability of such an event is 0.5, i.e., the probability
that a neighboring symbol has the same most signiﬁcant bit (MSB)
value as the MSB of the actually transmitted symbol is 0.5, and
the same is true for the least signiﬁcant bit (LSB) and all other bit
positions in between. Such a constellation map does not help in
achieving our desired goal in approximate communication.
Fortunately, various common constellation maps, e.g., the Gray
code (used in 802.11 ) map bit sequences to symbols in a way that
increases the resilience of certain bits, even when the symbols are
in error. As an example, the Gray code corresponding to a 16-
QAM constellation is shown in Figure 4. If we examine the MSB
of the different symbols to the left of the Q-axis, we can observe
that all of them have a value of 0. Similarly, the MSB of different
symbols to the right of Q-axis all have a value of 1. In such a case,
if a decoding error occurs for any symbol within the shaded region,
there are no errors in the MSB (under our assumption that symbol
errors do not exceed 1 unit). For the remaining symbols, we expect
an error probability of either 1/4 or 1/3 for the MSB, depending
on its position in the constellation. If the likelihood of transmitting
each symbol is identical, then the probability of error in the MSB,
given a symbol error has occurred, is 1/6. For the LSB, on the other
hand, the probability of making an error, given a symbol error has
occurred, is 1/3. This gives rise to an intriguing possibility. If an
application identiﬁes different priority levels for its various data
bits, then instead of performing data bit placement (mapping these
data bits to bit positions in symbols) in an agnostic manner, we can
achieve the desired impact of differential data protection by placing
the higher priority data bits to the MSB positions of symbols, and
the lower priority data bits to the LSB (and other) positions.
Note that such differential protection of data values is possible by
170000       0100        1100       1000
  _    _       _    _        _    _       _    _
X
0001       0101        1101       1001
  _    _       _    _        _    _       _    _
N
P
Z
0011       0111        1111       1011
  _    _       _    _        _    _       _    _
M
0010       0110        1110       1010
  _    _       _    _        _    _       _    _
Y
Figure 4: 16-QAM with Gray
code constellation map. MSBs
and LSBs are underlined.
Traditional communication
B-frame
1 0 0 1
I-frame
0 0 1 0
P-frame
1 1 0 1
I-frame
0 1 0 0
Approximate communication
B-frame
1 0 0 1
I-frame
0 0 1 0
P-frame
1 1 0 1
I-frame
0 1 0 0
Wireless packets (exactly mapped from video frames)
X = 0 1 0 0
Y = 0 0 1 0
P = 1 0 0 1
Z = 1 1 0 1
Wireless packets (combines bits from different
video frames)
P = 1 0 0 1
N = 0 0 0 1
Y = 0 0 1 0
M = 0 1 1 1
Figure 5: Wireless frames in approximate communication combines bits from video
frames of different priority levels. Example uses 16-QAM and assumes that the two
MSBs can be better protected than the two LSBs. The data bit placement strategy
maps I-bits MSBs and P- and B-bits to LSBs. Symbols M, N, P, X, Y , and Z are as
shown in Figure 4 that uses a Gray code constellation map. (Only subset of data bit
placements shown.)
simply placing the data bits to appropriate bit positions, and without
adding any form of redundancy into the system. In a way, such
data protection is available natively through the wireless channel,
and can be better exploited by applications, without imposing any
overheads. This is in contrast to the traditional FEC-based methods
for providing UEP that require communication of additional bits
that redundantly encode more important data.
Also, while we explained the phenomenon of differential error
resilience of bit positions with the example of QAM modulation
the same would hold for other modulation schemes such as Phase
Shift Keying(PSK), Pulse Position Modulation (PPM), Frequency
Shift Keying (FSK) etc. as well.
Based on the above intuition, we build an approximate commu-
nication system that can provide differential protection to different
data bits of an application. We use streaming of MPEG-4 encoded
video as an example of such an application. Such a video stream
consists of frames with different levels of importance, e.g., I-frames
are more important than P-frames, which in turn are more impor-
tant than B-frames.
Akin to regular communication systems, the application creates
and continuously sends data bits corresponding to different frames
(I, P, and B) down the network protocol stack. Bits from each video
frame will be packetized in smaller chunks at the network and MAC
layers, and then will be handed into the digital component of the
PHY layer. This is shown in Figure 5, with four video frames —
two I-frames with data 0100 and 0010, a P-frame with data 1101,
and B-frame with data 1001.
In traditional communication sys-
tems, the 4-bit sequences of each frame gets placed together in a
single wireless frame, e.g., the ﬁrst I-frame is mapped to the ﬁrst
wireless frame (consisting of a single symbol X). The key differ-
ence in approximate communication is that data bits of different
priority levels will be placed together and combined into a single
symbol, such that the most protected bit positions are occupied by
the higher priority data bits (say, I bits), and the least protected bit
positions are occupied by the lower priority data bits (say, P and B
bits). For example, the ﬁrst two bits of the ﬁrst I-frame, i.e., 01,
are mapped to MSBs of the ﬁrst symbol of a wireless frame, while
the second two bits of the same I-frame, i.e., 00, are mapped to
the MSBs of the symbol of the next frame 2. The bits of P- and
B-frames are placed into the LSB positions of different symbols.
2In our actual implementation, the I-, P-, and B-frame bits would
ﬁrst go through the usual 802.11-style digital PHY processes, in-
cluding the scrambler, convolution coder, and the interleaver for
added resilience, before being mapped to the symbols.
Overall, this means the I-frame bits will be better protected than
the P- and B-frame bits.
When symbols are decoded (possibly in error), the receiver sim-
ply passes them along to the higher layers, even if in error. When
the different application bits are extracted out of these erroneous
symbols, the highest priority bits are most likely to be correct and
are of great value to the application. Lower priority ones maybe in
error and will be suitably handled. The key observation is that the
higher priority bits are, thus, successfully extracted out of the sym-
bols, even if in error, through this mechanism, without requiring
re-transmissions.
This differential protection is in contrast to the traditional com-
munication method used in 802.11a/b/g, where I-frame bits occupy
both MSB and LSB positions of a symbol, the same as P- and B-
frame bits, and there is no difference in the level of protection for
bits of different video frames.
To validate that our approach of approximate communication is,
indeed, possible, we need to identify one or more constellation
maps that provide unequal error protection among different bit po-
sitions, across a range of wireless conditions — different transmit
power levels, different degrees of interference at the receiver, and
with and without PHY layer convolutional codes. Such conﬁrma-
tion of unequal protection will provide further evidence that our
approximation property holds true for a range of common scenar-
ios, where approaches such as Apex can be quite worthwhile.
Given a constellation diagram of k points, each symbol will rep-
resent a bit-sequence of length log2(k) bits. Overall, there are no
more than k! different constellation maps possible, although some
of them can be identical due to rotation and reﬂection based sym-
metries. Each constellation map is likely to protect individual bit
positions differently. The above property can be leveraged by al-
tering the constellation map during an ongoing transmission, based
on the channel conditions and the relative priority of the application
data-bits.
In this section, we present results for two constellation maps,
each of which offer varying amount of error protection for different
bit positions.
Both are, therefore, suited for approximate communication. We
note that our contribution is not in designing these constellation
maps, but in identifying suitable ones and in exploiting them to im-
plement approximate communication for media applications. We
ﬁrst brieﬂy describe the schemes, and then evaluate their error pro-
tection properties in the rest of this section.
1816 and 64 QAM
Gray, Block
2.4 GHz
Modulation schemes
Encoding schemes
Frequency
Convolutional codes Generator polynomials: g0(133)
(when used)
Base data rate
g1(171), Rate = 1/2, 2/3, 3/4
485 Kbps (at rate 1/2)
Table 2: Properties of our implemented system.
WARP
radio
Laptop
Transmitter
Interferer
Receiver
Figure 6: Setup for communication between the two WARP
SDR radios. The relative position, transmit power levels, and
degree of external interference varied during different experi-
ments.
2.2 Example constellation maps
We evaluate the following two constellation maps for use in ap-
proximate communication.
Gray code: In Gray code [12], symbols that are immediate neigh-
bors either along the I-axis or the Q-axis of the I/Q space differ in
exactly one bit position; the rest of the bits are identical between
the two neighbors. An example of a Gray code is shown in Fig-
ure 4, for a 16-QAM system. Gray codes can be constructed for any
QAM scheme in a systematic manner based on the above observa-
tion. Gray code is widely used in many popular communication
systems, including in 802.11 a/g/n and 802.16 based systems.
Block code: In block code [23], the constellation points on the
same side of the I (Q) axis have the same value for the ﬁrst (sec-
ond) bit position. Hence, all points in a given I-Q quadrant have
the same value for the ﬁrst two bit positions. For each of these
quadrants, the symbols are partitioned into four sub-quadrants, and
the same process is repeated to assign bit values for the next two
bit positions. The process is repeated iteratively for the remaining
positions.
Both of these schemes can be implemented on different QAM
based modulation schemes. While we have implemented and ex-
perimented with different QAM schemes in our SDR radio plat-
form, for sake of uniform comparison, in this section we focus on
the 64-QAM scheme. In 64-QAM, each symbol encodes 6-bit se-
quences, and in diverse experiments we observe how the different
schemes differentially protect the two most signiﬁcant bits (MSBs),
the two middle bits (MID), and the two least signiﬁcant bis (LSBs).
2.3 Experiment conﬁgurations
We use the following experiment parameters.
Hardware and software: We implemented our system on the WARP
SDR radio platform [6]. In our implementation we used the WARP
boards as RF front-end to transmit the packets over air and carried
out the digital layer PHY signal processing activities in the con-
nected laptop. The laptops also acted as the trafﬁc source and sink.
The setup for our experiments is depicted in Figure 6. We summa-
rize various aspects of our implementation in Table 2.
Frequency and phase synchronization between the sending and re-
ceiving side was achieved using a 11 symbol barker sequence sent
as a preamble along the packet. We experimented by varying the
transmit power levels of the transmitter, adding external source of
interference and by changing the location of the nodes. The re-
ceiver sensitivity of WARP hardware in our implementation is -70
dBm for 64-QAM and at lower RSSI values (< -70 dBm) 3 it be-
comes difﬁcult to derive any meaningful results. Hence, for all of
transmit power variations, we report on RSSI values that varied be-
tween -30 and -70 dBm.
Metrics: In this section, we are interested in the relative bit error
rates (BERs) experienced by different bit positions of a symbol.
Hence, we compare the two constellation maps by examining the
BERs of the MSBs, MIDs, and LSBs across different conditions.
In certain plots, we report BER gain which is the ratio of the BER
of Block code to that of Gray code, for speciﬁc bit positions. BER
gain can, thus, be a number greater than 1.
Experiment parameters: In each experiment we sent 10 million
randomly generated symbols. For each symbol received, we de-
code its value using both maps, and calculate the error rates for
different bit positions.
A typical 802.11 PHY layer (optionally) applies convolution code
(a PHY layer FEC) to further protect the data-bits. In order to eval-
uate the effect of such PHY layer convolution codes, we have also
experimented with (and without) different convolution codes (rates
include 1/2, 2/3, and 3/4) as well. Our results show that unequal
error protection property holds both with and without convolution
codes. In this paper, we show the error resilience of different bit
positions in presence of PHY layer convolution coding only for a
convolution code of rate 1/2.
2.4 Experimental results
We describe our experiments and associated observations below.
With and without PHY convolution codes: We plot the error
rate at the MSBs, MIDs, and LSBs for the two constellation maps at
an intermediate transmit power level (RSSI -55 dBm) in Figure 7,
both with and without PHY convolution codes. Each constellation
map provides different levels of protection to these bit positions.
In both cases, Block provides the greatest error protection to the
MSBs at the cost of lower protection to the LSBs. The use of con-
volution codes clearly reduce the BERs suitably, but the effect of
unequal error protection exists both with and without use of convo-
lution codes. Hence, in the rest of this paper, we focus on results
with PHY convolution codes applied.
Ambient noise, varied transmit power levels, with PHY con-
volution codes: We present the performance of the Gray and Block
constellation maps for an entire range of received power (varied by
changing the transmit power levels as well as the separation be-
tween nodes and their locations), when using a convolution rate of
1/2 in Figure 8. Instead of the BER, we plot the BER gain. With
decreasing RSSI, symbol errors increase. As a consequence, the
BER of Block shrink in comparison to BER of Gray for MSBs,
i.e., Block protects MSBs even better compared to Gray as RSSI
decreases. For the range of operating parameters the relatively
greater protection of MSBs using Block changes from a factor of
2 (at -30 dBm) to a factor 15(at -70 dBm). The increased protec-
tion of MSBs comes at a cost of decreased protection for MIDs and
LSBs in Block.
Varied external interference: We next examine the behavior of
different encoding schemes in presence of an explicit source of
external interference (Figure 9). We had used a laptop sending
3We calculate the RSSI values by reading the MAX2829 ADC out-
put register value and mapping it to corresponding RSSI value from
the Data-sheet [7].
19l
)
e
a
c
s
g
o
l
n
i
(
R
E
B
10-3
10-4
10-5
10-6
MSBs
MIDs
LSBs
Gray
Block
Encoding Scheme
l
)
e
a
c
s
g
o
l
n
i
(
R
E
B
10-2
10-3
10-4
10-5
MSBs
MIDs
LSBs
Gray
Block
Encoding Scheme
(a) With PHY convolution
code, Rate=1/2.