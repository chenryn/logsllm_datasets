## Page 138
if type perl &>/dev/null; then
coMPRepLY=($( compgen =W '$( perl =e """'while (($gid)=(getgrent][2]) ( print
“$eur”））;
else
coMPREPLY=($( compgen -W'$( cut-d：-f3 /etc/group )'…"$cur")）；
fi;
fi
have()
PATH=$PATH: /usr/sbin:/sbin:/usr/local/sbin type $1 &>/dev/nu11
_init_completion ()
local exclude= flag outx errx inx OPrIND=1;
op 1.es, beg ,sitrotaiu, sdoab att
case $flag in
n)
exclude+=$OPTARG
e )
errx=$OPTARG
(o
outx=$OPTARG
i)
inx=$OPTARG
S )
split=false;
exclude+==
F
esac;
done;
CONPREPLY=():
(g([6=0】),=p[eo
_get_comp_words_by_ref =n "$exclude<>&" cur prev words cword;
_variables && return 1;
if [I $cur == $redir+||$prev == $redir 1]; then
local xspec;
case $cur in
2">'*)
xspec=$errx
F
+'>'+)
xspec=$outx
F
+''+)
xspec=$errx
+'>'+)
xspec=$outx
+'T↑=））xog
op
if [[ ${words[i]) == $redir* j]: then
[[ ${words[i]} == $redir 1] &s skip=2 |] skip=1;
:(,(dx≤+:[a1spzon)s{=o:[@1spro)s,)=spon
[[ $i -le $cword j] &s cword=s[( cword - skip );
else
i=$(（ ++± ）};
fi;
done;
[[ $cword =eg 0 1] s& return 1;
prev=${words[cword-1]}:
[[=n ${split=} 1] 6& _split_longopt &6 split=true;
return 0
_installed_modules ()
UTId (T =i HN) JT). XMD
（TS--.，（TS
_ip_addresses ()
1ocal PATH=$PATH:/sbin;
COMPREPLY+=($( COmPgen =M
"$( ( IC_ALL=c ifeonfig -a ll ip aedr show; ） 2>/dev/null
s|.+inet[[+space]](1,)([*[space+]/]*).*|1|p'"
"$cur”}）
_ipa()
cur=$ {COHP_WORDS [ COMP_CWORD]) :
prev=${COMP_NORDS[COMP_CHORD-1]} :
if I $COMP_CWORD =eg 1 1; then
---
## Page 140
if [ scOMP_cWoRD -eg 2 ]; then
case *$prev" in
help)
ioesa
fi;
fi
_ipa_commands ()
ipa help commands 2> /dev/nul1 | sed =r 's/~([-[:alnum:]]*).*/\1/' |grep *^[[:alnum:]]
_itwebsettings ()
local cur prev opts base;
cur=*${COMP_WORDS[CONP_CHORD] }";
opts=*-help -list =get =info =set =reset =reset =headless =check =verbose”;
COMPREPLY=($(compgen=W$(opts)--${cur})）;
return 0
.javaws ()
local cur prev opts base;
cur=*${COMP_WORDS[COMP_CWORD]}";
opts=*=version =arg =param =property =update =verbose =nosecurity =noupdate -headless =
strict =xml =allowredirect =Xnofork =Xignoreheaders =Xoffline =Xtrustnone =jnlp =html -browser
if [[ $prev == **=jnlp" || $prev == +"=html* 1]; then
if [=d*$COMPREPLY” ]; then
COMPREPLY="$COMPREPLY/";
fi;
return 0;
fi;
if [[ $eur =* "" l]; then 
coMPREPLY=($(compgen =W"aa_file_or_url ${opts} zz_file_or_url' -= ${cur}));
return 0;
fi;
if [[ $cur == "*+ ]]; then
COMPREPLY=($(ccmpgen=W${opts)--$(cur}））;
return 0;
else
"( (±ns)s -- *i. X- J- ua6dmos)s)=xmaaadnoo
COMPREPLY="$COMPREPLY/";
fi;
return 0;
fi
---
## Page 141
kernel_versions ()
==“$cur”}}
_knovn_hosts ()
local cur prev words cword;
_init_completion =n : |l return;
local options;
==suodo  [[ = ==,$。1|g= ==$1]
,a= ,=+suodo  [[ o= == $. ll o= == t$ 1]
knovn_hosts_real ()
local configfile flag prefix;
local cur curd avkeur user suffix aliases i host;
1ocal =a kh khd config;
local OPTIND=1;
op i,i$. 6vty ,=digo, sqdoab atTua
case $flag in
a )
aliases='yes'
C)
suffix=':'
F)
configfile=$oPTARG
P)
prefix=$OPTARG
esac;
done1
cur=${1OPTIND):
T=+.
[[ $# =ge $OPTIND ]] && echo "error: $FUNcNAME(*$e"): unprocessed arguments:" $[while [I $#
ge $oPTIND Jl; do printf ‘tshn′ ${loPTIND); shift; done];
[[$cur == *@*1]6 user=${curee*}es cur=${cur#*@};
kh=();
if [[ =n $configfile ]]; then
[[ =r $configfile 1] && config+=("$configfile");
else
for i in /ete/ssh/ssh_config -/ -ssh/config -/ .ssh2/config;
do
（$。）=+bguo  [[$ = ]]
done;
fi;
if [[ ${#config[]} =gt 0 ]]; then
---
## Page 142
OIFS=$IFS
local =a tmpkh;
tmpkh=($( awk 'sub("*( \t]*([Cg][Ll][Oo][Bb][Aa][Ll]l(Uu][Ss][Ee][Rr])[Kk][Nn][Oo][Ww]
[Nn][Hh][Oo][Ss][Tt][Ss][Ff][Ii][Ll][Ee][ t]+', "") { print $o }’ "$(config[e])" | sort =u )):
IFS=$OIFS;
([aluxdu)s. uT  xog
do
op[[ $(·)\(+[、1)(+{\1)、-=T$ 1]T
i=${BASH_REHATCH[ 1]}$ {BASH_REMATCH[3]} ;
j=${BASH_REMATCH[2]} :
_expand_tilde_by_ref j;
（。）=+ [ =1]
done;
for j in $i;
do
_expand_tilde_by_ref j;
[[ =r $j 1] && kh+=（*$j）;
done;
done;
fi;
if [[ =z $configfile l]; then
for i in /etc/ssh/ssh_known_hosts /etc/ssh/ssh_knovn_hosts2 /etc/known_hosts
/etc/knovn_hosts2 -/ -ssh/knoum_hosts -/ -ssh/knowm_hosts2;
do
(T$。）=+  [[ T$ =]]
done;
for i in /etc/ssh2/knownhosts -/.ssh2/hostkeys;
do
(qnd/$）=+pux [[ $ p=]]
done;
fi;
uau[[ 0 6=([@1pux)s 110 6={[alux)s 11
awkcur=$(cur//\//\\\/);
avkcur=$(awkeur//\./\\1.);
curd=$awkcur;
if [[ "$awkeur" = [0-9]*[=]* ]]; then
awkcur="*$awkcur[ +]*";
else
if [[ "$awkcur" == [0-9]* ]]; then
awkcur="*$avkeur.*[.:]”;
eIse
if [[ =z $awkeur 1]; then
[+*z=],=nxA
else
awkcur=**$avkeur";
fi;
fi;
fi;
if [[ ${#kh[]} =gt 0 1]: then
/\s*[|\#]/{
---
## Page 143
sub(*"e
（.$）qns
for (i=1; i/dev/null; then
DsMoig-fyRAe Is.
cpr _workstation-_tcp 2>/dev/null |
awk =F';''/^=/ ( print $? }" | sort =u )"
:(lamos
fi;
COMPREPLY+=($( conPgen =V
"$( ruptime 2>/dev/null | awk '!/^ruptinei/ { print $1 )"
"-“$cur" ）};
if [[ -n ${COMP_KNOWW_HOSTS_WITH_HOSTFILE-1) 1]: then
fi;
_ltrim_colon_completions "$prefix$user$cur*;
return 0
_11dpad_options ()
local cur prev opts;
COMPREPLY=() ;
cur=*${COMP_WORDS[COMP_CWORD]}";
opts=*-h =f =d =k =s =v =v";
uT .{1no)s. seo
*)
COMPREPLY=($(conpgen=W“${opts)"--$(cur}）)
F F
---
## Page 144
case “${prev}* in
=f)
_filedir;
return 0
esac;
return 0
_11dptool_options ()
local cur prev opts cmds opts_and_cnds;
COMPREPLY=();
cUr=*${COMP_NORDS[CONP_CHORD]}";
cnds=*license =h help =v version =g quit =s stats =t get=tlv =T set=tlv =1 get=lldp =L set=
1ldp* ;
opts=*-i -V =n =a =d =r =R";
opts_and_cmds="$opts $cnds";
uT .{no)s. aseo
*）
11
esac;
case “${prev}* in
=i)
_available_interfaces;
return 0
F
esac;
return 0
()dobuo
local cur prev words cvord split;
_init_completion =s l| return;
case “$(prev,*)" in
--help | ==usage | ==version)
return 0
F
==*dir*)
_filedir =d;
return 0
=*file*]
=*path*)
_filedir;
return 0
F
==+( [=a=z09_1) )
local argtype=$( $1 -=help 2>51 | sed =ne
[1>]=ds+|
(0,1)([-A-2a=0-9_1{1,).*|1|P'1=
case ${argtype,r} in
---
## Page 145
_filedir =d;
return 0
file* |*path*)
F F
_filedir;
return 0
csac
esac;
$split s& return 0;
if [[ "$cur" == =* ]]; then 
Z==y=+=5
9](1,}={0,1}).*/1/p'|sort-u j"
$cur”））;
[[ $COMPREPLY == *= 1] && compopt =o nospace;
else
if [[ "$1* == @(mk|rm)dir 1]; then
_filedir =d;
else
_filedir;
fi;
fi
nac_addresses ()
1ocal re=*{[A=Fa=f0=9{2}={5}[A=Fa=f0=9]{2} ′;
coMPREPLY+=(s( ( ifconfig =a 丨l ip link show; } 2>/dev/null | sed =ne
[[1space:]jHNaddr[[+space1j](1,)($re^)t[:space!]].*/\1/p' =ne
5/.+
[[=space:]]HMaddr[[ispace!]](1,)($re)[[:space!]]+$/\1/p' =ne
's|.*[[+space:]]
[link/A{0,1}ether[[1space]](1,)($re)([+space+]]-*|2|p
"s|.*[[space:]]
[link/{0,1}ether[[1space]]{1,)($re)([space+]]+$|2|p
coMPREPLY+=($( ( arp =an ll ip neigh show; ) 2>/dev/null | sed =ne
"5/.*
[1space:]]($re)t+space1]].*/\1/p'=ne
"s/.*[[+space1]]($re/[[1space+]]+$/\i/p
"s/^[[1space:]]*\($re[[ispaee:]].*/\1/p" /etc/ethers
2>/dev/null ):
COMPREPLY=(S( co=Pgen -N‘$(COMPREPLY[1)'--$cur）
_1trim_colon_completions "$cur*
minimal ()
local cur prev words cword split;
_init_completion =s 1| return;
$split s& return;
_filedir
nodules ()
local modpath;
---
## Page 146
nodpath=/1ib/modules/$1 ;
(（/$[x]]
_ncpus ()
local var=NPROCESSORS_ONLN;
[[ $osTyPE == *linux* 1] && var=_$var;
local n=$( getconf $var 2>/dev/null );
printf ts ${n:=1}
parse_help ()
eval local cnd=$( quote “$1 1;
1ocal line;
case $cmd in
）
cat
* )
LC_ALL=c "$( dequote "$cmd")" ${2==-=help} 2>&1
esac
)| while read =r line; do
fonutauoo |l [I -(f, . 1)+ == utt$ 1]
while [I $line =- ((~|t~])-[A=Za=z09?][[=space:]]+)\[?[Az09]+]? 11: do
done;
(*/ xo //aut)s.suodosxed
done
parse_usage ()
eval local cnd=$( quote $1');
local line match option i char;
case $cmd in
)
cat
* )
esac
)|while read =r line; do
while [[ $line == \[[[:space:”]*(-[ ~1]+)[[:space: ]]*\] 1]: do
natch=$ {BASH_REMATCH[ 0]} :
option=$(EASH_REMATCH[1]);
case $option in
=2([)+{[a=zA209? ]] ]
{（++{udo}>=)) xog
---
## Page 147
char=${option:i:1);
o=u\，gu[[,1.= x1]
done
11
*）
parse_options *$option"
esac;
line=${line#+"$natch*};
1auop
done
_pci_ids ()
COMPREPLY+=($( comPgen =H
"$cur"})
_pgids ()
(Iamos. -- .( -pThd oxr ad purures )s. N- uabduoo 1s)=xlaaadnoo
_pids ()
COMPREPLY=($( conpgen -W '$( coenand Pe axo pid= )' --"$cur" ))
pnanes ()
11 =puruoo oxe sd purumoo 1s. M cpoungap>, x- uabduoo 1s/=xaaatanoo
/-)11,/s.=//$1/1/+*15.//+/s=pas
=e"s/[]>]$//"丨sort=u]′==“$cur")
_polieyeditor ()
local cur prev opts base;
cUr=*${CONP_NORDS[COMP_CHORD] }";
opts=*-help =file =defaultfile =codebase =signedby =principals =verbose";
return 0
_quote_readline_by_ref ()
1
if [[ $1 == \** ]]; then
printf =v $2 &s *${1:1}*;
else
printf =v $2 q *$1°;
fi;
{z)s=s   [[s\={）s ]]
_realcommand ()
---
## Page 148
-YP6
waua ittnu/aap/  /dev/null; then
( Is. d= ad)s J= xuTtpea1b
else
if type =p readlink > /dev/null; then
（ TS.d=ad]s。 J= xuTprax
else
type =P *$1*;
fi;
fi;
i
_r1_enabled ()
[["$( bind =v )* = *$1+([[=space1]])on* ]]