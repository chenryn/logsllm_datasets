title:BGP Route Propagation Between Neighboring Domains
author:Renata Teixeira and
Steve Uhlig and
Christophe Diot
BGP Route Propagation Between Neighboring Domains
Renata Teixeira1, Steve Uhlig2, and Christophe Diot3
1 Univ. Pierre et Marie Curie, LIP6-CNRS
PI:EMAIL
2 Delft University of Technology
PI:EMAIL
3 Thomson Paris Lab
PI:EMAIL
Abstract. We propose a methodology to match detailed BGP updates from two
neighboring Autonomous Systems (ASes). This methodology allows us to char-
acterize route propagation and measure the route propagation time. We apply this
methodology to two months of all BGP updates from Abilene and GEANT to
perform the ﬁrst thorough characterization of BGP route propagation between
two neighbor ASes. Our results show that the propagation time of BGP rout-
ing changes is very different depending on the network that initiates the routing
change. This difference is due to engineering and connectivity issues such as the
number of preﬁxes per BGP session, the number of BGP sessions per router, and
BGP timer conﬁgurations.
1 Introduction
Although Autonomous Systems (ASes) in the Internet are independent management
entities, events such as equipment failures or router misconﬁgurations in one AS can
trigger BGP routing changes that propagate to other ASes. During routing convergence,
user trafﬁc may encounter loops or loss of reachability. Besides these transient disrup-
tions, BGP routing changes can also lead to persistent reachability problems, because
there may be no route to the destination or because the new route may be incorrect
(in case of a misconﬁguration). A detailed characterization of the dynamics of BGP
route propagation can help reduce the impact of routing changes in one AS on neigh-
boring ASes and reduce convergence delay. Such a characterization can also play an
important role in diagnosing the root cause of persistent problems. To troubleshoot the
problem operators often need to pinpoint the AS responsible for the routing change.
In this paper, we make a major step toward understanding BGP route propagation
between neighboring ASes. We introduce a methodology for correlating BGP rout-
ing changes in two neighboring networks based on BGP updates collected in each of
the ASes. We use this methodology, together with two months of BGP updates from
Abilene and GEANT (the research backbones in the U.S. and Europe, respectively) to
analyze BGP route-propagation time. Our results show that although the types of BGP
routing changes that propagate between these two networks are similar, the propaga-
tion time is signiﬁcantly different depending on which of the two networks initiates the
S. Uhlig, K. Papagiannaki, and O. Bonaventure (Eds.): PAM 2007, LNCS 4427, pp. 11–21, 2007.
c(cid:2) Springer-Verlag Berlin Heidelberg 2007
12
R. Teixeira, S. Uhlig, and C. Diot
routing change. We show how this disparity is based on each network’s design and en-
gineering decisions, including factors such as the number of preﬁxes per BGP session,
the number of BGP sessions per router, and the conﬁguration of BGP timers.
This is the ﬁrst time that BGP update measurements from every router in two neigh-
boring ASes have been used to evaluate the impact of BGP routing changes on neigh-
bors. Previous studies of BGP dynamics either analyzed BGP update messages from
multiple routers in the same AS [1,2,3,4] or a single router in each of multiple ASes,
as available from RouteViews or RIPE, combined with beacon updates [5,6,7]. Analyz-
ing BGP updates in one AS can reveal how routing changes propagate within a single
network, but does not shed light on how these changes affect neighboring domains.
Studies of multiple ASes can characterize the BGP convergence process in the wide
area, without shedding light on the effects of intra-AS topology and conﬁguration. In
this paper, we ﬁnd that per-router BGP measurements and knowledge of the network
design and conﬁguration details are essential for understanding the factors that affect
route-propagation time.
The remainder of the paper is structured as follows. Section 2 presents background
on BGP routing between neighboring ASes. After presenting Abilene and GEANT in
Section 3, we introduce our methodology for correlating BGP routing changes that
propagate between neighboring ASes in Section 4. Section 5 quantiﬁes the BGP routing
changes that propagate between them and their propagation time. We end in Section 6
with a summary of our main ﬁndings and a discussion of their implications.
2 BGP in Neighboring ASes
Neighboring ASes connect in one or more physical locations, which we call intercon-
nection points. Figure 1 illustrates two neighboring ASes X and Y , where x1, x2, x3, x4
and y1, y2, y3, y4 are routers in X and Y , respectively, and p1, p2, p3, p4 are destina-
tion preﬁxes. X and Y have two interconnection points (y1, x3) and (y2, x4).
Routers at interconnection points exchange reachability information to destination
preﬁxes using external BGP (eBGP). We use the notation PX→Y to refer to the set of
preﬁxes that X announces to Y (even if Y is not using the route learned from X to that
AS W
p1
p4
x1
x3
AS X
x2
x4
p3
y4
Y   XP     = {p2,p3}
p2
AS Y
y3
y1
y2
AS V
X   YP     = {p1,p3,p4}
Fig. 1. Route propagation between two neighboring ASes X and Y
BGP Route Propagation Between Neighboring Domains
13
preﬁx). In the example, PX→Y = {p1, p3, p4}, even though Y might use the path to p3
it receives from elsewhere, instead of the route from X. BGP routing changes in X for
preﬁxes that belong to PX→Y may propagate to Y via the interconnection points.
A router can also learn a BGP route for a destination preﬁx from other routers in
its own AS using internal BGP (iBGP). For example, router y3 learns the route to p3
from router y1. Each router selects the best route to reach this preﬁx using a multi-step
decision process [8], which compares routes based on local policy preferences for path
attributes (to a destination) such as AS-path length. Routes learned at all interconnection
points to a neighboring AS often have the same AS path length, and other identical
attributes. For example, X may learn equally-good routes to p1 at x1 and x2. We call
each border router that receives a best route to reach a preﬁx p from eBGP an egress
router for p, and the set containing all the egress routers for p as the egress set for p. For
example, the egress set for p1 at AS X is composed of x1 and x2. Routers inside the AS
break the tie among the routes learned from each router in the egress set by selecting
the BGP route from the closest (in an intra-domain sense) egress router. This decision
is commonly called hot-potato routing.
3 Abilene and GEANT
Abilene and GEANT are quite different networks. GEANT is an Internet service prov-
ider dedicated to academic institutions, whereas Abilene is a private academic network
that is not connected to the commercial Internet. As we will see, these differences allow
us to illustrate the impact of engineering decisions and network connectivity on route
propagation.
3.1 Inter-connectivity
Abilene and GEANT have a peer relationship to exchange trafﬁc between their respec-
tive customers. Since Abilene is not an Internet provider, all networks that connect to
Abilene must have a separate connection to the Internet, by which they can also reach
GEANT’s customers. GEANT, on the other hand, has six connections to the commer-
cial Internet. GEANT routers have BGP tables with approximately 170, 000 destination
preﬁxes, whereas the BGP tables for Abilene routers have slightly under 10, 000 preﬁxes.
Research and academic institutions in Europe connect to GEANT through national
or regional research networks. Some of these national academic networks have their
own connectivity to commercial ISPs. On the other hand, Abilene connects directly to
individual institutions. Because of its connection policy, GEANT has many more op-
portunities for route aggregation, which explains why Abilene announces to GEANT
twice as many BGP preﬁxes than GEANT to Abilene (|PA→G| = 5, 770 whereas
|PG→A| = 2, 200).
Abilene and GEANT have two peering links: between Washington DC (WA) and
Frankfurt (DE2), and between New York (NY) and Amsterdam (NL). Abilene and
GEANT announce BGP routes with equal AS-path length in both peering locations,
and use the same local preference value in both locations as well. Consequently, each
router selects between the two interconnection points using hot-potato routing. Neither
of the two networks use BGP’s Multi-Exit Discriminator (MED) attribute.
14
R. Teixeira, S. Uhlig, and C. Diot
3.2 Measurement Infrastructure
Both Abilene and GEANT use Juniper routers running a full-mesh of iBGP sessions.
BGP monitors in both networks are NTP synchronized. However, their measurement in-
frastructure differs signiﬁcantly. Abilene has one Zebra BGP monitor per PoP. Given that
there is only one router per PoP in Abilene, each monitor establishes an iBGP session as
a client of the router and collect periodic table dumps as well as all BGP messages report-
ing changes to the best route to each preﬁx. The union of BGP messages from all routers
gives a global view of each router’s choice of best routes for each preﬁx. GEANT uses a
single Zebra BGP monitor that participates in the iBGP full mesh. This monitor is conﬁg-
ured as an iBGP peer and thus only receives BGP messages reporting routes learned from
eBGP. It does not receive BGP update messages triggered by internal routing changes.
4 Measurement Methodology
This section describes our methodology to correlate BGP update measurements in
neighboring ASes. For these correlated BGP changes, we also compute the time it takes
until the BGP change in X causes a change in Y , and vice-versa.
4.1 Classiﬁcation of BGP Changes
First, we classify BGP routing changes from the vantage point of each AS according to
the three categories described below, which are inspired from [3]. The main distinction
between our work and [3] is that they evaluate the impact of routing changes at X on
X’s trafﬁc, whereas we classify the BGP routing changes in an AS X that propagate to
a neighboring AS Y 1.
Preﬁx down in X. When X looses connectivity to a preﬁx p ∈ PX→Y , each border
router sends a message reporting the withdrawal of p. This withdrawal may impact Y
in two different ways: routers in Y also withdraw p or shift to another route that does
not use X.
Preﬁx up in X. Similarly, when X gains connectivity to a preﬁx p ∈ PX→Y , each
border router x sends an announcement of p. Routers in Y may experience a preﬁx up
as well, in the case Y did not have a route to p before receiving the update message; or
an egress-set change to use the route from X.
Egress-set change in X. We deﬁne an egress-set change as a BGP event that changes
the composition of the egress set for a given preﬁx. Routers in X can still reach p, but
decide to change routes because the previous route was withdrawn or a new (better)
route came up. There are three different types of egress-set changes in X: a change to
a worse, equivalent, or better route. For example, suppose that the link between AS W
and p1 fails in Figure 1. X would then replace this route with the one through AS V ,
which is worse than the previous route because it has an AS-path length of two, instead
of a length of one via W . This change would not trigger an egress-set change in Y ,
because even though the new route via X is worse, Y does not have a better alternative.
1 Although intra-domain routing changes can also impact neighboring ASes because of hot-
potato routing [1] or cold-potato routing [8], we do not consider these type of changes here.
BGP Route Propagation Between Neighboring Domains
15
In the case that Y has another route to p1 that is better than the new route via X, then
Y would change routes to p1.
The collection of BGP update messages from all routers in an AS contains a lot of
redundancy. Indeed, multiple routers report the same routing change, and a single router
may also send multiple messages for the same preﬁx in a very short period of time
because of path exploration [5]. The main classiﬁcation challenge is therefore to extract
one instance of each BGP routing change from all BGP update messages. We extract
BGP routing changes using the methodology described in [3]. For each preﬁx, we group
all BGP routing changes that happen close in time [1,3]. For the results presented in this
paper, we select a 70-second threshold to eliminate redundant BGP update messages
(approximately 75% of the BGP updates, which is consistent with [3]). We use the
timestamp of the ﬁrst BGP update in the group of updates that leads to a BGP routing
change as the timestamp for the change.
4.2 Correlating BGP Routing Changes
Given a time series of labeled BGP routing changes and a time window T , we determine
which of the BGP routing changes at Abilene propagate to GEANT, and vice-versa. We
call an AS X the source of a change, if the routing change happens ﬁrst at X, and
then propagates to Y (which we call the destination). We develop a routing correlation
algorithm that proceeds in two steps:
Selection of relevant BGP routing changes. We measure PA→G using BGP table
snapshots and BGP messages collected at GEANT. Since we want PA→G to contain
any preﬁx that might be announced by Abilene to GEANT during our analysis, we
search for any destination preﬁx that has at least one BGP message with next-hop AS
equal to Abilene’s. Similarly, we search Abilene’s BGP messages to extract PG→A.
PG→A (cid:3)= ∅, then the causal relationship between BGP routing changes
to a destination preﬁx p ∈ PA→G
PG→A is not clear. In fact, each AS should use its
direct route to p most of the time, except for transient periods of failures. Therefore, we
exclude all preﬁxes in PA→G
PG→A from our analysis to focus on the set of distinct
destination preﬁxes that Abilene announces to GEANT, and vice-versa.
If PA→G
(cid:2)
(cid:2)
(cid:2)
Matching related BGP routing changes. Our algorithm ﬁrst reads the stream of BGP
routing changes of Y and creates a list of time-ordered changes per destination preﬁx.
Then, we identify whether each BGP routing change of X triggered a change in Y .
For each BGP routing change for a preﬁx p in X of type c at time t, we search the list
Table 1. Compatibility of BGP routing changes at neighboring ASes
Type at source AS Type at destination AS
preﬁx down
preﬁx up
egress-set change
preﬁx down
egress-set change
preﬁx up
egress-set change
egress-set change
16
R. Teixeira, S. Uhlig, and C. Diot
(cid:3)
(cid:3)
, if t ≤ t
at time t
of changes to p in increasing time order. We say that a change in X triggered another
in Y of type c
is compatible with c. We
deﬁne compatibility as follows. Two routes are compatible if the type of BGP routing
change at the source and destination ASes falls into one of the categories in Table 1.
This algorithm returns the list of BGP routing changes of X, where each change is
annotated with the corresponding change in Y or a null value.
(cid:3) ≤ t + T (p) and c
(cid:3)
Given the frequent churn of BGP messages caused by events at several locations in
the Internet, any heuristic to match BGP routing changes at neighboring ASes has the
risk of mistakenly correlating two BGP routing changes that did not propagate between
the neighbors in question. Take the example in Figure 1 and suppose that Y uses another
neighbor (not shown in the ﬁgure) to route to p1. A failure at p1’s network could cause
a preﬁx down both at X and Y , even though the BGP routing change did not propa-
gate from X to Y . Our algorithm would mistakenly correlate these routing changes.
Although we leave a detailed study of these false matches for future work, we include
some tests in our algorithm to reduce the likelihood of these false matches:
– Selection of the preﬁxes to consider. We search BGP tables from both networks to
determine PA→G and PG→A and remove preﬁxes in the intersection, which could
lead to false matches.
– Classiﬁcation of BGP routing changes. We ensure that only compatible routing
changes are correlated.
– Selection of time window T . The time window guarantees that events that hap-
pen too far apart do not get correlated. We set this time window to the worst-case
propagation time between the two neighbors. By using the worst-case propagation
time, we guarantee to ﬁnd all truly correlated BGP routing changes while limiting
the number of false matches. The next section explains the procedure to ﬁnd the
worst-case propagation time from network conﬁguration data and BGP tables.
4.3 Worst-Case Time Propagation
Our correlation algorithm searches for BGP routing changes that happen close in time
at both networks, where close means within a time window T . Since routing conﬁgu-
rations are different in Abilene and GEANT, we choose a different time window TA,G
from Abilene to GEANT and TG,A from GEANT to Abilene. We deﬁne the time win-
dow as the worst-case BGP propagation time among all the interconnection links.