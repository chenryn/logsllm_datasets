### Title: Paging All Windows Geeks â€“ Uncovering Malware in Windows 10 Compressed Memory

The FireEye FLARE team has conducted an in-depth analysis of the memory compression implementation in Windows 10, enabling access to data stored in the newly introduced (and undocumented) virtual store. This breakthrough helps to close a significant gap that previously allowed malware to evade detection during memory forensic analysis. We are open-sourcing and presenting this work to advance the state of the art in computer forensics.

Traditionally, a comprehensive Windows memory inspection involved parsing physical memory and filling in any missing gaps from the page file. Each page in memory, whether it resided in physical memory or the page file, could be inspected by simply viewing its contents. The introduction of the virtual store, which contains compressed pages, has disrupted this well-understood paradigm. To inspect pages in the virtual store, forensic tools must now identify which pages are compressed, locate them, and decompress their contents for analysis.

The results of our research have been open-sourced in the form of Volatility and Rekall plugins, providing invaluable support to incident response (IR) investigators and forensic analysts. This presentation delves into the details of the memory compression implementation in Windows 10, exploring the undocumented structures and algorithms involved in the process. The information provided will enable the community to support new Windows 10 builds in their preferred forensic tools.

To further assist the community, the FLARE team is releasing a tool that automates the extraction of these undocumented structures from new Windows builds. This tool leverages the FLARE-EMU emulation framework to automatically generate the necessary structures, streamlining the process and enhancing the effectiveness of forensic analysis.