[root@1vs~]#ipvsadm-A-t124.126.147.169:80 -swrr
[root@1vs Desktop]# ipvsadm -E -t 124.126.126.147:80 -s wrr
修改虚拟服务的调度算法：
[root@lvs~]#
服务器名称
etho
etho
etho
etho
ethl
网络接口
192.168.0.3
192.168.0.2
192.168.0.1
192.168.0.254
124.126.147.168
IP地址
第8章集群及高可用
385
2
---
## Page 402
服务。为了使内容结构简单、突出重点，本例仅生成一个测试用网页文件index.html。
®
务器设置网络参数，通过修改ifcfg-eth0即可实现。
应该提供相同的页面内容）。与LVS调度器主机一样，
每个真实Web服务器的页面内容设置为不同的内容，而真实生产环境中所有的Web服务器都
机和虚拟服务的调度算法。
Linux运维之道
386
由于LVS 调度器会将请求转发给后端真实服务器，所以所有的后端服务器都需要配置Web
[root@webl ~]#yum -y install httpd
ONBOOT=yes
BOOTPROTO=static
[root@webl ~]#vim /etc/sysconfig/network-scripts/ifcfg-etho
后端真实Web服务器设置（这里为了可以验证调度器每次选取的是不同的服务器，我们将
使用ipvsadm 命令工具添加一个虚拟服务，并为该虚拟服务设置一组具体的后端服务器主
GATEWAY=192.168.0.254
NETMASK=255.255.255.0
IPADDR=192.168.0.1
TYPE=Ethernet
DEVICE=eth0
[root@lvs~]#ipvsadm-A-t 124.126.147.168:80-srr
[root@lvs
[root@lvs
[root@lvs~]# service networkrestart
DNS1=202.106.0.20
GATEWAY=124.126.147.169
NETMASK=255.255.255.240
IPADDR=124.126.147.168
TYPE=Ethernet
root@lvs
root@lvs
[root@lvs
ONBOOT=yes
BOOTPROTO=static
DEVICE=eth1
[root@lvs ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth1
root@lvs
root@lvs
root@lvs
root@lvs
root@lvs
~]#
1#
#
~#
~]#
#[~
~]#
~]#ipvsadm
serviceiptablessave
sed-1/ip_forward/s/0/1//etc/sysctl.conf#开启路由转发功能
iptables
iptables
service ipvsadm save
ipvsadm
ipvsadm
n-a-t124.126.147.168:80
-a
-a
-F
-t124.126.147.168:80-r 192.168.0.2:80
-t124.126.147.168:80-r
，首先需要根据实际的网络环境为真实服
-r192.168.0.3:80
192.168.0.1:80-m
#重新加载sysctl.conf
#保存调度规则
---
## Page 403
稍作修改。
角色，所以操作步骤与web1主机基本一致，IP地址等细致问题需要读者根据自己的实际需要
验证：
[root@web3~]#
GATEWAY=192.168.0.254
NETMASK=255.255.255.0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
DEVICE=eth0
GATEWAY=192.168.0.254
NETMASK=255.255.255.0
ONBOOT=yes
BOOTPROTO=static
DEVICE=ethO
下面是web2和web3服务器主机的具体操作步骤。因为都承担着后端真实Web服务器的
[root@web3
[root@web3
[root@web3
[root@web3
[root@web3
[root@web3
IPADDR=192.168.0.3
[root@web3
[root@web2
[root@web2
[root@web2
[root@web2
[root@web2
[root@web2
[root@web2
IPADDR=192.168.0.2
TYPE=Ethernet
[root@webl
[root@webl
root@webl
root@webl
[root@webl
[root@webl
~]
~1
~1
~
~]
~]
u  #
~]# service iptables save
~
~]#
#
#
#
#
service iptables save
iptables -x
echo"192.168.0.3">/var/www/html/index.html
service httpd start
vim /etc/sysconfig/network-scripts/ifcfg-etho
service iptables save
iptables -x
iptables -F
service network restart
service httpd start
iptables
iptables -F
echo
service network restart
service httpd start
第8章集群及高可用
387
---
## Page 404
web2.example.com
web1.example.com
表8-2
所有服务器均为Linux操作系统，我们使用Linux来承担软路由的功能。
器都设置了VIP地址，所以要求真实服务器在Non-ARP设置上配置VIP 地址。本例所使用的
端，这里要求所有真实服务器的网关地址指向 Router 的内网 IP 地址，由于调度器与真实服务
web3.example.com
真实的服务器在收到调度器转发过来的请求包后直接通过Router路由器发送响应数据给客户
这台主机的VIP地址（124.126.147.168）的80端口都将被均衡地调度到三台真实的服务器上。
将得到不同的页面内容。
器上。本例中由于所有的页面内容都不相同，所以不同的客户端访问http://124.126.147.168后
内容，由于LVS采用RR（轮询）算法，所以不同的连接请求将被平均分配到不同的后端服务
Linux运维之道
lvs.example.com
Router
388
DNS1=202.106.0.20
BOOTPROTO=static
LVS 负载均衡调度器设置，首先部署网络拓扑环境，修改网卡配置文件。
基于DR工作模式的结构如图8-4所示，服务器IP地址设置见表8-2。所有访问Ivs.example.com
IPADDR=124.126.147.168
ONBOOT=yes
案例2：基于DR工作模式的负载均衡
客户端使用浏览器访问http://124.126.147.168，最终可以访问到真实服务器所提供的页面
NETMASK=255.0.0.0
DEVICE=eth0
[root@lvs ~]#vim/etc/sysconfig/network-scripts/ifcfg-etho
服务器名称
1o:0（VIP)
etho
1o:0（VIP)
etho
10:0(VIP)
etho
eth1
etho（VIP)
内网接口（etho）
外网接口（eth1）
网络接口
124.126.147.168
192.168.0.3
124.126.147.168
192.168.0.2
124.126.147.168
192.168.0.1
192.168.0.254
124.126.147.168
192.168.0.253
124.126.147.169
IP地址
---
## Page 405
来实现的：
求所有的真实服务器要禁止对VIP 地址的ARP 响应，方法是通过 arp_ignore与 arp_announce
应该提供相同的页面内容）。注意，因为调度器与真实服务器都设置了VIP地址，所以这里要
每个真实Web服务器的页面内容设置为不同的内容，而真实生产环境中所有的Web服务器都
当的调度算法。
NETMASK=255.255.255.255
IPADDR=124.126.147.168
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=Static
NETMASK=255.255.255.0
TYPE=Ethernet
BOOTPROTO=static
DEVICE=eth0
[root@webl~]# vim/etc/sysconfig/network-scripts/ifcfg-etho
真实Web服务器设置如下（这里为了可以验证调度器每次选取的是不同的服务器，我们将
接下来安装ipvsadm 管理工具，创建虚拟服务，添加真实服务器组，并为虚拟服务设置适
DEVICE=1o:0
[root@webl~]#vim/etc/sysconfig/network-scripts/ifcfg-lo:0
GATEWAY=192.168.0.253
IPADDR=192.168.0.1
ONBOOT=yes
[root@lvs
[root@lvs ~]# service network restart
DNS1=202.106.0.20
[root@lvs
NETMASK=255.255.255.0
IPADDR=192.168.0.254
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
[root@lvs
DEVICE=etho
root@lvs
[root@lvs
[root@lvs
root@lvs
[root@lvs
root@lvs
~]#
~1
~】#
~】#
~]#yum-y install ipvsadm
#
#
service iptables save
iptables -X
iptables
service ipvsadm save
ipvsadm-A -t 124.126.147.168:80 -swrr
ipvsadm
-F
真8
集群及高可用
389
3
2
---
## Page 406
Linux运维之道
390
net.ipv4.conf.all.arp_announce
net.ipv4.conf.eth0.arp_ignore = 1
[root@web2 ~]#vim /etc/sysctl.conf
GATEWAY=192.168.0.253
NETMASK=255.255.255.255
IPADDR=124.126.147.168
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
DEVICE=10:0
[root@web2 ~]#vim /etc/sysconfig/network-scripts/ifcfg-1o:0
GATEWAY=192.168.0.253
NETMASK=255.255.255.0
IPADDR=192.168.0.2
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
DEVICE=etho
net.ipv4.conf.all.arp_announce =
net.ipv4.conf.all.arp_ignore=1
net.ipv4.conf.eth0.arp_announce =
net.ipv4.conf.eth0.arp_ignore =1
[root@webl~]#vim/etc/sysctl.conf
GATEWAY=192.168.0.253
[root@web2
[root@web2
[root@web2
[root@webl
root@webl
root@webl
root@webl
root@webl
root@webl
root@webl
[root@webl
~]#
~
~]#
~1
#
#
#
#
#
#
#
service httpd start
vim/etc/sysconfig/network-scripts/ifcfg-etho
service iptables save
iptables
iptables
x
service network restart
service httpd start
K-um人
sysctl
install httpd
-P
-X
-F
1
2
2
---
## Page 407
ONBOOT=yes
BOOTPROTO=static
DEVICE=etho
[root@router ~]# vim /etc/sysconfig/network-scripts/ifcfg-etho
路由器（Router）采用Linux作为软件路由来实现本例，具体操作如下。
net.ipv4.conf.all.arp_announce=
net.ipv4.conf.all.arp_ignore=1
net.ipv4.conf.eth0.arp_announce =
net.ipv4.conf.eth0.arp_ignore =1
[root@web3~]#vim/etc/sysctl.conf
GATEWAY=192.168.0.253
NETMASK=255.255.255.255
IPADDR=124.126.147.168