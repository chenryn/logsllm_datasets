e.g. HTTP, NNTP FTP, POP or SMTP
Options header
Identiﬁer: IPv4 ‘Identiﬁer’, TCP ISN (similar)
Type: IPv4 ‘Option Number’
Value: IPv4 ‘Option Data’; ressource records in DNS
Dummy: same as in case of the main header
Table 1. Relation of CCEAP header ﬁelds to header ﬁelds in
common network protocols
4. ADDRESSING HIDING PATTERNS
Hiding patterns are classiﬁed into those that establish network
covert storage channels and those that establish network covert tim-
ing channels. Timing channels can either be dependent on a partic-
ular network protocol (protocol-aware) or they can be independent
of a network protocol (protocol-agnostic) [2]. The implementation
covers all patterns that either establish covert storage channels or
protocol-aware covert timing channels and that are not speciﬁc for
lower OSI layers (≤ 2). Table 2 explains the known hiding patterns
and describes how CCEAP is vulnerable against each pattern.
Size Modulation (Modulate size of a PDU or particular header
element): Modulation of address length or number of options
Sequence Modulation (Alternation of header ﬁeld order in a
PDU): Alternation of order in which n options are encapsulated
Add Redundancy (Creation of space within a PDU/PDU ﬁeld
by addition of redundant bits): Adding a new option of type X
Random Value (Modiﬁcation of a random value ﬁeld): Placing
covert data in the initial sequence number
Value Modulation (Selection of allowed PDU element values):
Change the case of ASCII letters used for the destination address
Reserved/Unused (Utilization of reserved/unused bits in PDU
ﬁelds): Overwriting the reserved main header ﬁeld ‘dummy’
Artiﬁcial Message/Pkt Loss (Artiﬁcial loss of network packets):
Messages are sent with incremental sequence values. The user
can force the program to exclude a selected sequence number,
indicating a message loss
Artiﬁcial Retransmission (Introduction of artiﬁcial message du-
plications): The user can select the sequence number of a packet
to be duplicated and that will thus be sent twice
Manipulated Message Ordering (Modulation of message se-
quences): Deﬁne the order of sequence numbers with which mes-
sages are sent (instead of the default incremental values)
Table 2. How CCEAP addresses selected hiding patterns of [2].
 Bit 0                     8                         16                         24                        32   Sequence         Number of       Destination       Dummy    Number            Options             Length           (Unused)Word 012               Destination Address and Padding (Word 1)               Destination Address and Padding (Word 2) Bit 0                     8                         16                         24                        32      Identifier            Type                Value           Dummy                                                                             (Unused)Word 0CCEAP Main Header:Options Header:17405. WORKFLOW AND EXERCISES
We now explain the foreseen workﬂow for teaching CCEAP with
a tool that implements the protocol and present sample exercises.
5.1 Teaching Workﬂow
We ﬁrst describe the tasks that need to be performed by the lec-
turer, followed by the tasks that must be fulﬁlled by the students.
Lecturer: Initially, the lecturer has to teach the functioning,
structure and syntax of CCEAP and of the hiding patterns. Due
to the simplicity of CCEAP, this task can be achieved in little time.
It is up to the lecturer to decide how CCEAP is taught. Teaching
could be done in form of a lecture, via handout or by providing the
students with a link to the protocol description. Next, the lecturer
assigns a pattern-related exercise to the students (cf. Section 5.2).
These exercises are structured in the form of a sentence, e.g.: ‘Find
a way to establish a covert channel that uses the pattern X using
CCEAP. Verify your approach with the CCEAP tool.’ Alternatively,
the exercise can be reversed by showing a sample execution of the
tool and let the student determine the represented pattern. After a
student submitted a solution, the lecturer veriﬁes the answer and
can – if necessary – guide the student to a better or correct answer.
Students: The students, on the other hand, study CCEAP and
the command-line options of the CCEAP tool. The tool’s client
sends the data to its server that evaluates the received message and
displays the received content. The tool’s command line options
allow to highly inﬂuence the header structure and ﬁeld values of
CCEAP. After the students received the exercise, they try to ﬁnd
a way to create a covert channel with the tool that represents the
pattern selected by the teacher. If the exercise was reversed, the
students analyze the behavior of CCEAP using the tool and match
it to the description of the hiding patterns. This step can be re-
peated to address different hiding methods. The students submit
their solutions to the lecturer to receive feedback (and help).
5.2 Sample Exercises
The goal of exercises is to learn how a covert channel can be
created and to understand the idea behind a pattern to such an
extent that students can apply it. In a reversed scenario, the stu-
dents must be able to tell which hiding pattern was used for a given
covert channel. While the ﬁrst scenario reﬂects the covert channel
analysis of protocols, the reversed scenario reﬂects scenarios like
malware/data leakage analysis. In real-world scenarios, students
would similarly analyze the behavior of data packets sent by a mal-
ware and then determine what type of covert channel was applied.
However, the fundamental aspects would not differ to the CCEAP
approach from the exercise. The following four exercises underpin
the concept of both, the standard and the reversed scenario.
Ex. 1: Value Modulation. The students are asked to create a
covert channel that represents a Value Modulation. First, the stu-
dents verify the deﬁnition of the pattern as taught or via available
descriptions from a handout, website (http://ih-patterns.blogspot.
com/) or papers [2, 3]. Second, they determine how CCEAP can be
used to represent the pattern. A typical scenario for a Value Mod-
ulation mentioned in publications is the alternation between upper
and lower case characters in protocols headers. CCEAP contains
the ‘Destination Address’ ﬁeld and the students decide to send data
either to address ‘ABC’ (or ‘abc’) to signal a covert ‘0’ (or ‘1’)
bit. Third, to test their idea, the students check the parameters pro-
vided by the CCEAP tool and detect the parameter -d that speci-
ﬁes the destination. The students start the server and let the client
send two packets to the server, once with the former and once with
the latter destination address: $ client -D 127.0.0.1 -P
3333 -d ABC ; client -D 127.0.0.1 -P 3333 -d
abc, where -D and -P indicate the address and port of the server
to be used. Both, -D and -P are left out in the reminder to increase
readability. On the server, the students can check the output that
displays the received packets and submit the answer.
Ex. 2: Sequence Modulation. The students are asked to use
a Sequence Modulation pattern. They analyze CCEAP to deter-
mine whether a header element represents a deﬁnable sequence of
elements. The analysis reveals that the order of options can be
freely deﬁned. The students deﬁne the option types 6 and 7 and
signal a ‘0’ bit if the order is 6, 7 and a ‘1’ bit if the order is 7, 6.
They use the ‘identiﬁer’ ﬁeld in an incremental way, starting with
0 and set the ‘value’ ﬁeld to 0 as both ﬁelds are not of relevance
for the exercise. To signal a ‘0’ bit followed by a ‘1’ bit, they call
the client as follows: client -o 0,6,0/1,7,0 ; client
-o 0,7,0/1,6,0.
Ex. 3: Reverse Scenario. This exercise lists a command that
was used to create a covert channel: client -i 10 -p 11
-c 20. The students are asked to name the represented hiding pat-
tern and – if possible – conclude what hidden bits were transferred.
The students ﬁnd out that this command sets the initial sequence
number to 10, duplicates the packet with the sequence number 11
and transfers 20 packets. By default the client uses an incremental
message order and transfers 10 packets instead of 20. Searching for
a matching pattern, the students ﬁnd the Artiﬁcial Retransmission
pattern in which packets are duplicated. So, the hidden code that
was transferred is 20 bits of which one bit was sent twice, resulting
in the message ‘0100...0000’ or ‘1011...1111’.
Ex. 4: Hybrid Patterns. In an extended scenario, an exercise
can feature hybrid patterns in which the students have to combine
multiple hiding patterns simultaneously (e.g. by overwriting the
‘dummy’ ﬁeld (Reserved/Unused pattern) and at the same time ma-
nipulating the number of options in the packet to inﬂuence the PDU
size (Size Modulation pattern). The correct combination of com-
mand line parameters for sending a packet with dummy value 1 or 2
and transferring either zero or one options would be: client -u
1 and client -u 2 -o 1,2,3, and any possible variation of
the two commands and their two parameters.
6. CONCLUSION AND OUTLOOK
CCEAP (http://ih-patterns.blogspot.com/) can be used to teach
pattern-based covert channel analysis with a single network pro-
tocol instead of several protocols. We currently perform an eval-
uation phase with the tool at two universities. Future work com-
prises to develop an educational approach for teaching low-level
and protocol-agnostic covert channels in a single tool.
7. REFERENCES
[1] B. Carrara and C. Adams. A survey and taxonomy aimed at
the detection and measurement of covert channels. In Proc.
IH&MMSec’16, pages 115–126. ACM, 2016.
[2] W. Mazurczyk, S. Wendzel, S. Zander, et al. Information
Hiding in Communication Networks: Fundamentals,
Mechanisms, and Applications. Wiley-IEEE, 2016.
[3] S. Wendzel, S. Zander, B. Fechner, and C. Herdin.
Pattern-based survey and categorization of network covert
channels. ACM Computing Surveys, 47(3):50:1–50:26, 2015.
[4] S. Zander and G. Armitage. CCHEF – covert channels
evaluation framework: Design and implementation. Technical
Report TR 080530A, 2008.
[5] T. Zseby, F. I. Vazquez, V. Bernhardt, et al. A network
steganography lab on detecting TCP/IP covert channels. IEEE
Transactions on Education, 2016.
1741