mented with soft decoding since SoftRate uses it for BER estimation
at the receiver. Further, for both Strider and Softrate, the emulator
implements a 802.11 style MAC with ACKs, CSMA and exponential
backoff with the default parameters.
Simulating Mobility: To vary mobility, we replay the trace at dif-
ferent speeds. For example, 4(cid:2) mobility implies the channel mea-
surements that spanned T seconds now span T =4 seconds. When a
packet is transmitted at time t in simulation, the symbols in the packet
are distorted using the corresponding channel measurement from the
trace at time t. If the trace has been sped up 4(cid:2) to simulate mobil-
ity, the channel measurement at time t in the new trace will be the
channel measurement in the original trace at time 4t.
Simulating Contention: To vary contention, we pick different sub-
sets of the 10 nodes from the contention trace and let them send
packets whenever the simulated 802.11 MAC lets them. If a node
is allowed to transmit at time t, then we look up the channel mea-
surements from its trace at time t and distort its transmitted symbols
accordingly.
If two nodes concurrently transmit and collide, their
symbols are individually distorted according to their respective chan-
nel traces, and the distorted symbols are added up at the receiver.
10.0.1 Performance with Mobility
We compare the performance of Strider under varying mobility
0.40.60.811.2StriderCumulative FractionThroughput Comparison: TestbedCollision Scenarios00.2012345OmniscientNetwork Throughput (b/s/Hz)Cumulative Fraction12345StriderOmniscientNetwork Throughput (b/s/Hz)Throughput Comparison: Alice moved closer to the AP01-5-3-1135791113OmniscientSNR Difference between Alice and Bob’s links (dB)Network Throughput (b/s/Hz)(A)
(B)
(C)
the ﬁndings of the SoftRate paper [33]. The SoftRate authors present
evaluations over slow and very fast fading scenarios, but mention that
in intermediate mobility where the channel changes every 2(cid:0)3 pack-
ets, their scheme suffers. 2
Figure 6: A) Strider outperforms SotfRate with increasing mobility. B) Strider provides gains because of better medium utilization at low contention.
C) Strider outperforms both omniscient and SoftRate due to better medium utilization and ability to decode collisions in high contention scenarios.
by playing the trace at increasing speeds, from 1(cid:2) walking speed
( 3mph) to 20(cid:2) corresponding to vehicular speeds (60-80mph) to
100(cid:2) corresponding to 300mph. Note that the omniscient scheme
has advance knowledge of all the channel states that affect each packet
transmission, and picks the highest bitrate that can be correctly de-
coded at every instant. The other schemes are implemented as de-
scribed before. The performance metric is the average throughput
achieved by each scheme over a trace. We run the simulation for each
trace and for each compared approach and for each speed. We com-
pute the normalized throughput (i.e. throughput divided by through-
put of omniscient scheme) achieved by each approach for all traces
and for each speed, and then calculate the average normalized through-
put at each speed. Fig. 6(A) plots the average normalized throughputs
for the two schemes vs simulated speeds, along with error bars.
Analysis: Strider performs excellently, though it does exhibit some
dropoff with increasing mobility compared to the omniscient scheme.
At high mobility, Strider is around 15% off the omniscient scheme’s
rate. However, Strider still outperforms SoftRate by nearly 70% in
vehicular mobility scenarios, and by 50% in very fast fading scenar-
ios.
10.0.2 Low Contention
Method: We compare Strider’s performance with the omniscient
scheme and SoftRate under low contention scenarios.In these exper-
iments, we randomly pick two nodes from the contention traces, and
simulate a 802.11 network with both of them communicating to an
AP. We let both nodes transmit, with the 802.11 MAC scheduling ac-
cess for Strider and SoftRate and run the simulation for 100 seconds.
If these two nodes are hidden terminals according to our testbed mea-
surements, then they cannot carrier sense each other in the simulation.
Among the C 10
2 pairs in our traces, only 12 pairs are hidden termi-
nals. The omniscient scheme however uses a collision-free scheduler,
and concurrent transmissions will be scheduled one after the other to
eliminate collisions. We compute the average total throughput for
each two node scenario, and then repeat for a different two node
scenario. Fig. 6(B) plots the CDF of the throughputs for the three
compared schemes.
Analysis: Surprisingly, Strider outperforms even the omniscient scheme
in the low contention scenario. The median rate gain over omniscient
is around 25% and around 35% over SoftRate. With SoftRate ap-
proximately 15% of the simulations perform quite badly (shown in
the ﬁrst quartile of the CDF) because these topologies correspond to
the hidden terminals in our set. However, given that hidden terminals
are relatively rare and the omniscient scheme uses a collision free
scheduler, where do Strider’s gains come from?
All schemes do fairly well at low mobility, which is expected. At
human speeds, we do not see large ﬂuctuations, the channel coher-
ence time in our trace is around 100ms, a relatively long time given
that a 802.11 sender would manage to transmit around 50 packets at
the lowest bitrate, and probably more. Hence, once a rate adaptation
algorithm locks on to the correct bitrate (which SoftRate achieves
within one packet transmission time), bitrate adaptations are rela-
tively infrequent. Therefore SoftRate performance is also close to
the omniscient scheme.
SoftRate exhibits interesting behavior at higher mobilities. First, as
mobility increases, channel coherence times drop, and bitrate adapta-
tion decisions have to be made more frequently. Hence, the likelihood
of a packet being transmitted at the incorrect bitrate increases, lead-
ing to the loss in performance. However, the surprising fact is that
SoftRate performance drops and then recovers at very high mobility,
corresponding to very fast fading scenarios. We speculate that the
reason is the timescale at which Softrate adapts rate, which is every
packet. Hence if a wireless channel has a coherence time which is
on the order of 1 (cid:0) 2 packet transmission times, SoftRate is likely to
make a mistake in the bitrate decision every second or third transmis-
sion. The coherence time in the vehicular mobility scenarios is on
the order of a few milliseconds in our trace, just sufﬁcient to transmit
1 (cid:0) 4 packets. Consequently SoftRate is constantly playing catchup,
and often makes wrong bitrate decisions, leading to lower normal-
ized average rate. However, as mobility increases further, the chan-
nel changes several times within a packet. Here SoftRate manages to
average the channel over the packet transmission and accurately esti-
mate BER. If the average around which the channel ﬂuctuates stays
the same across packets, then SoftRate ﬁnds the correct bitrate de-
cision, and performance improves. This behavior is consistent with
The key reason for Strider’s performance is better medium utiliza-
tion. Consider what happens when the 802.11 MAC schedules con-
tending nodes for transmission. If the nodes are within carrier sense
range, the MAC ensures that all nodes get equal number of opportu-
nities to transmit a packet. However, if the contending nodes have
differing channel qualities to the AP, then the node with the weaker
channel monopolizes the channel time because the same sized packet
requires a larger transmission time (since it has to use a lower bi-
trate). Hence the stronger node is unfairly penalized, which hurts
overall network performance. As prior work has observed [30], the
right MAC policy in such scenarios is to ensure “time based fairness",
i.e. give all nodes equal amount of channel time regardless of their
respective channel strengths.
In Strider, due to its rateless nature, all transmissions occupy the
same amount of channel time. Since the 802.11 MAC ensures equal
number of transmission opportunities for all contending nodes, Strider
ensures that every node gets equal time on the channel. Thus the
stronger node is not unfairly penalized. This leads to better medium
utilization and consequently higher overall throughputs. Thus, un-
2please see Sec. 3:4 of the SoftRate [33] paper for a discussion.
Simulated Speed (mph)Human SpeedsVehicular SpeedsVery Fast FadingPerformance Comparison: Varying MobilityNormalized Avg. Throughput00.20.40.60.811.231020406080160300StriderSoftRatePerformance Comparison: Low ContentionAvg. Rate (Mbps)Cumulative Fraction 00.20.40.60.811.20102030405060OmniscientStriderSoftRatePerformance Comparison: High ContentionNumber of contending nodesGain frombetter mediumutilizationGain fromdecoding collisionsNormalized Avg. Throughput00.20.40.60.811.21.41.61.822345678StriderSoftRate[5] U. Erez, M. Trott, and G. Wornell. Rateless coding and perfect rate-compatible
codes for gaussian channels. In Information Theory, 2006 IEEE International
Symposium on, pages 528 –532, july 2006.
[6] Free Software Foundation. Gnuradio. http://gnuradio.org.
[7] P. Frenger, S. Parkvall, and E. Dahlman. Performance comparison of harq with
chase combining and incremental redundancy for hsdpa. In IEEE VTC, 2001.
[8] R. Gallagher. Low density parity check codes. In PhD thesis, MIT, 1962.
[9] S. Gollakota and D. Katabi. ZigZag decoding: combating hidden terminals in
wireless networks. In SIGCOMM ’08: Proceedings of the ACM SIGCOMM 2008
conference on Data communication, pages 159–170, New York, NY, USA, 2008.
ACM.
[10] D. Halperin, T. Anderson, and D. Wetherall. Taking the sting out of carrier sense:
interference cancellation for wireless lans. In MobiCom ’08: Proceedings of the
14th ACM international conference on Mobile computing and networking, pages
339–350, New York, NY, USA, 2008. ACM.
[11] D. Halperin, A. Sheth, W. Hu, and D. Wetherall. Predictable 802.11 packet
delivery from wireless channel measurements. In ACM SIGCOMM, 2010.
[12] K. Jamieson and H. Balakrishnan. Ppr: Partial packet recovery for wireless
networks. In ACM SIGCOMM, 2007.
[13] G. Judd, X. Wang, and P. Steenkiste. Efﬁcient channel-aware rate adaptation in
dynamic environments. In ACM MOBISYS, 2008.
[14] T. Kailath, H. Vikalo, and B. Hassibi. Mimo receive algorithms. Space-Time
Wireless Systems: From Array Processing to MIMO Communications, 2005.
[15] A. Kamerman and L. Monteban. Wavelan r-ii: A high-performance wireless lan
for the unlicensed band. Bell Labs Technical Journal, 2, 1997.
[16] S. Katti, S. Gollakota, and D. Katabi. Embracing wireless interference: analog
network coding. In SIGCOMM ’07: Proceedings of the 2007 conference on
Applications, technologies, architectures, and protocols for computer
communications, pages 397–408, New York, NY, USA, 2007. ACM.
[17] L. E. Li, K. Tan, Y. Xu, H. Viswanathan, and Y. R. Yang. Remap decoding:
Simple retransmission permutation can resolve overlapping channel collisions. In
ACM MOBICOM, Sep 2010.
[18] S. Lin and P. Yu. A hybrid arq scheme with parity retransmission for error control
of satellite channels. IEEE Trans. on Communications, 1982.
[19] M. Luby. Lt codes. In Proc. of FOCS 2002, 2002.
[20] D. Mackay. Information Theory, Inference and Learning Algorithms. Cambridge
University Press, 2003.
[21] MadWiFi. Onoe rate control.
http://madwifi.org/browser/trunk/ath_rate/onoe.
[22] G. V. L. J. N. Czink, B. Bandemer and A. Paulraj. Stanford july 2008 radio
channel measurement campaign. In COST 2100, October 2008.
[23] R. Palanki and J. Yedidia. Rateless codes on noisy channels. In ISIT, 2004.
[24] A. Sarwate and M. Gastpar. Rateless codes for avc models. Information Theory,
IEEE Transactions on, 56(7):3105 –3114, july 2010.
[25] T. Schmidl and D. Cox. Robust frequency and timing synchronization for ofdm.
IEEE Transactions on Communications, Dec. 1997.
[26] S. Sen, R. R. Choudhury, and S. Nelakuditi. Csma/cn: Carrier sense multiple
access with collision notiﬁcation. In Mobicom, 2010.
[27] S. Sen, N. Santhapuri, R. R. Choudhury, and S. Nelakuditi. Accurate:
Constellation based rate estimation in wireless networks. In NSDI, 2010.
[28] A. Shokrollahi. Raptor codes. IEEE/ACM Trans. Netw., 14(SI):2551–2567, 2006.
[29] E. Soljanin, R. Liu, and P. Spasojevic. Hybrid arq in wireless networks. In
DIMACS Workshop on Networking, 2003.
[30] G. Tan and J. Guttag. Time-based fairness improves performance in multi-rate
wlans. In Usenix Annual Technical Conference, 2004.
[31] D. Tse and P. Vishwanath. Fundamentals of Wireless Communications. Cambridge
University Press, 2005.
[32] J. Van de Beek, O. Edfors, M. Sandell, S. Wilson, and P. Borjesson. On channel
estimation in ofdm systems. 1995.
[33] M. Vutukuru, H. Balakrishnan, and K. Jamieson. Cross-layer wireless bit rate
adaptation. In ACM SIGCOMM, Barcelona, Spain, August 2009.
[34] D. Warrier and U. Madhow. On the capacity of cellular cdma with successive
decoding and controlled power disparities. In Proc. 48th IEEE Vehicular
Technology Conf., 1998.
[35] S. H. Y. Wong, H. Yang, S. Lu, and V. Bharghavan. Robust rate adaptation for
802.11 wireless networks. In Proceedings of the 12th annual international
conference on Mobile computing and networking, New York, NY, USA, 2006.
like prior work which used mechanisms such as regulating per node
queues to ensure time-based fairness, Strider achieves it for free.
10.0.3 High Contention
Method: The experiment is conducted similar to the low contention
scenario, except we pick increasing numbers of contending nodes
from our contention traces. We normalize the throughput of each
experiment by dividing it with the throughput achieved by the om-
niscient scheme. We calculate the average normalized throughput
across all experiments that have the same number of contending nodes
and plot it in Fig. 6(C) with increasing contention.
Analysis: Strider signiﬁcantly outperforms both the omniscient scheme
and SoftRate as contention increases. When 8 nodes are contending,
Strider is nearly 60% better than the omniscient scheme, and 2:8(cid:2)
better than SoftRate. There are three reasons for this outperformance:
(cid:15) First, Strider does better because of efﬁcient medium utiliza-
tion, and the gain increases with higher contention. The reason
is that with more nodes, the problem of weaker channel nodes
dominating channel time becomes even more acute. Strider’s
rateless property ensures that every node gets an equal amount
of channel time regardless of its channel quality, and hence
performs better.
(cid:15) Second, in high contention collisions are more frequent. Sof-
tRate’s performance suffers since it cannot decode from colli-
sions and has to resort to expensive backoffs to ensure nodes
don’t collide. Strider decodes from collisions and also elim-
inates all hidden terminal problems. We note that the colli-
sions we observed in our simulations were typically between
two transmissions, it was quite rare to see collisions between
higher number of transmissions because the required node ge-
ometry (three pairwise hidden terminals) as well as synchro-
nization in channel access inspite of three independent random
backoffs are quite unlikely.
(cid:15) Finally, SoftRate relies on feedback from a previous packet’s
ACK to pick the bitrate for the next transmission. However,
in high contention scenarios, a node may not get to transmit
a packet for several milliseconds, and its bitrate estimate from
the previous measurement gets stale. This leads to inaccurate
bitrates and a loss in throughput.
11. CONCLUSION
Strider provides a rateless and collision-resilient design, that con-
sistently achieves very good performance across a wide variety of
scenarios, ranging from low mobility to high mobility, from low con-
tention to high contention and unknown channels to hidden terminals.
We believe Strider can greatly simply wireless PHY design by elim-
inating the need for complicated rate adaptation protocols. Strider
suggests a number of avenues for future work, including redesigning
the MAC to take advantage of Strider’s collision resilient code and
extending it to 802.11n MIMO scenarios.
12. REFERENCES
[1] V. Bharghavan, A. Demers, S. Shenker, and L. Zhang. MACAW: Media access
protocol for wireless lans. In Proceedings of the international conference on
Applications, technologies, architectures, and protocols for computer
communications (SIGCOMM), 1994.
[2] J. Bicket. Bit-rate selection in wireless networks. MS Thesis, Massachusetts
Institute of Technology, 2005.
[3] G. Caire, S. Guemghar, A. Roumy, and S. VerdÃž. Maximizing the spectral
efﬁciency of coded cdma under successive decoding. IEEE Transactions on
Information Theory, Jan 2004.
[4] J. Camp and E. Knightly. Modulation rate adaptation in urban and vehicular
environments:cross-layer implementation and experimental evaluation. In ACM
MOBICOM, 2008.