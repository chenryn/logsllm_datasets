vi /data0/mysql/3306/my.cnf
log_long_format
long_query_time =
transaction_isolation = READ-COMMITTED
thread_stack =
2
sort_buffer_size =
max_allowed_packet 
external-locking = FALSE
table_cache = 614 
max_connections = 3000
socket = /tmp/mysql.sock
oort=
[mysqld]
[mysq]]
[client]
ax_connect_errors = 6000
ack_1og = 600 
oen_files_limit
输入代码4-7的内容如下：
：3306
mysql
= /tmp/mysql.sock
192K
1
32M
=32M
300
= 10240
246M
e = MyISAM
4.2安装 PHP 5.2.10（FastCGI模式）
2k
Www.TopSag实bnginx：取代 Apache 的高性能 Web 服务器
5
---
## Page 42
实战 Nginx：取代 Apache 的高性能 Wet殿务器TopSage.com
function_stop_mysql()
function_start_mysql()
mysql_password="12345678"
mysql_username="admin"
mysql_port=3306
#!/bin/sh
代码4-8
vi /data0/mvysa1/3306/mysql/
max_allowed_packet
quick
[mysqldump]
06 = aod sabed Axtp xeu qpouuT
innodb_log_file
innodb_flush_log_at_trx_commit = 2
innodb_data_file_path = ibdata1:1024M:autoextend
innodb_buffer_pool_size = 2048M
innodb_additional_mem_pool_size = 16M
server-id = 1
slave-skip-errors = 1032,1062,126,1114,1146,1048,1396
master-connect-retry = 10 
/data0/mysql/$(mysql_port}/my.cnf 2>&1 > /dev/null & 
innodb_lock_wait_timeout = 120
skip-name-resolve
myisam_recover
myisam_repair_threads = 1
myisam_max_extra_sort_file_size = 10G
myisam_max_sort_file_size = 10G
myisam_sort_buffer_size = 128M
bulk_insert_buffer_size =
read_rnd_buffer_size = 16M
 /bin/sh /usr/local/webserver/mysql/bin/mysqld_safe --defaults-file=
 printf "Starting MySQL...\n"
4）创建管理 MySQL 数据库的 shell 脚本;
输入代码 4-8的内容（这里的用户名 admin 和密码12345678接下来的步骤会创建）如下：
es_in_group = 3
第4章Nginx与 PHP（FastCGI）的安装、配置与优化
= 32M
16M
64M
---
## Page 43
/data0/mysql/3306/mysqlstop
GRANT ALL PRIVILEGES ON **TO'admin'@'1ocalhost'IDENTIFIED BY'12345678';
/usr/local/webserver/mysql/bin/mysql-urootp-s/tmp/mysql:sock
/data0/mysql/3306/mysqlstart
chmod+x/data0/mysql/3306/mysql
else
function_kill_mysql
function_restart_mysql
elif["$1"="restart"];then
elif["$1"="stop"];then
if["$1"="start"];then
function_kill_mysql()
function_restart_mysql()
-p$(mysql_password)-s/tmp/mysql.sockshutdowm
9）（可选）停止MySQL：
7）通过命令行登录管理MySQL服务器（提示输入密码时直接回车）：
printf "Usage:/data0/mysql/$(mysql_port)/mysql (start|stoplrestart|kill)\n"
function_stop_mysql
function_start_mysql
kill-9 $(ps -ef| grep'bin/mysqld_safe'| grep $(mysql_port)| awk'(printf $2)')
function_start_mysql
function_stop_mysql
printf"Restarting MySQL...\n"
/usr/local/webserver/mysql/bin/mysqladmin-u $(mysql_username)
printf "Stoping MysQL...\n"
8）输入以下SQL语句，创建一个具有root权限的用户（admin）和密码（12345678）
6）启动MySQL：
5）赋予shell脚本可执行权限：
sleep5
（3）编译安装PHP（FastCGI模式），代码如4-9所示：
];then
4.2
安装PHP5.2.10（FastCGI模式）
IDENTIFIEDBY12345678;
---
## Page 44
实战 Nginx: 取代 Apache 的高性能 Web 服炙器w.TopSage.com
cd ../
make install
make
tar zxvf PDO_MYSQL-1.0.2.tgz
make install
. /configure --enable-eaccelerator=shared
cd eaccelerator-0.9.5.3/
tar jxvf eaccelerator-0.9.5.3.tar.bz2
make install
/usr/local/webserver/php/bin/phpize
tar zxvf memcache-2.2.5.tgz
代码4-10
curl http://pear.php.net/go-pear 1 /usr/local/webserver/php/bin/php
cd php-5.2.10/
tar zxvf php-5.2.10.tar.gz
代码4-9
 htyuos-dud/ua/dud/xaarasqam/tesot/sn/=6tguos-dud-uatm-- aan6tguoo/ 
cd PDO_MYSQL-1.0.2/
cd
make
/usr/local/webserver/php/bin/phpize
make
cd memcache-2.2.5/
make install 
make ZEND_EXTRA_LIBS='-liconv1
--with-xmlrpc --enable-zip --enable-soap --without-pear
--with-mhash --enable-pcntl --enable-sockets --with-1dap "-with-ldap-sasl
gzip-cd
48
/usr/local/webserver/php/bin/phpize
-with-php-config=/usr/local/webserver/php/bin/php-config
，
-enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf --with-openssl
-with-zlib --with-libxml-dir=/usr --enable-xml 
-with-mysqli=/usr/local/webserver/mysql/bin/mysgl_config 
-with-mysql=/usr/local/webserver/mysql
-with-config-file-path=/usr/local/webserver/php/etc
../
enable-discard-path --enable-safe-mode --enable-bcmath --enable-shmop
../
（4）编译安装PHP5扩展模块，如代码4-10所示：
 php-5.2.10-fpm-0.5.11.diff.gz l patch -d php-5.2.10 -p1
第 4章Nginx与 PHP（FastCGI）的安装、配置与优化
 --disable-rpath 
---
## Page 45
vi /usr/local/webserver/php/etc/php.ini
mkdir. -p /usr/1ocal/webserver/eaccelerator_cache
/usr/local/webserver/php/etc/php.ini
sed -i "s#; always_populate_raw_post_data = On#always_populate_raw_post_data = On#g"
/usr/local/webserver/php/etc/php.ini
sed
sed -i 's#extension_dir = "./"#extension_dir = 
"imagick.so"\n#′
\nextension = 
代码4-12
代码4-12所示：
再查找 output_buffering = Off 
extension:
extension =
代码4-11
debug-non-zts-20060613/"
手工修改: 查找/usr/local/webserver/php/etc/php.ini 中的extension_dir“="./"
make install
make
. /configure --with-php-config=/usr/local/webserver/php/bin/php-config
/usr/local/webserver/php/bin/phpize
cd imagick-2.2.2/
tar zxvf imagick-2.2.2.tgz
cd
make install
make
./configure
cd ImageMagick-6.5.1-2/
自动修改：若嫌手工修改麻烦，可执行以下 shell 命令，自动完成对 php.ini 文件的修改，如
..
按 shift+g 键跳到配置文件的最末尾，加上以下配置信息，如代码 4-13 所示:
并在此行后增加以下几行，然后保存，如代码4-11所示：
（6）配置eAccelerator 加速 PHP:
（5）修改 php.ini 文件：
："pdo_mysql.so"
"memcache.so"
4.2安装 PHP 5.2.10（FastCGI 模式）
www.TopSage密链iMginx：取代 Apache 的高性能 Web 服务器
.........
6
---
## Page 46
代码4-15
否则，Nginx会报状态为500的空白错误页），如代码4-15所示：
rm-f/usr/local/webserver/php/etc/php-fpm.conf
更 php.ini 配置而无须重启php-cgi）。
chown-Rwww:www/data0/htdocs/www
chown
代码4-14
的目录，如代码4-14所示：
eaccelerator.compress_level="9"
"display_errors">0改为1，以便显示PHP错误信息，
mkdir
chmod+w/data0/htdocs/blog
mkdir-p/data0/htdocs/blog
/usr/sbin/groupaddwww
eaccelerator.shm_only="0"
eaccelerator.shm_tt1="3600"
eaccelerator.shm_max="0"
eaccelerator.debug="0"
eaccelerator.check_mtime="1"
eaccelerator.optimizer="1"
eaccelerator.enable="1"
eaccelerator.cache_dir="/usr/local/webserver/eaccelerator_cache"
eaccelerator.shm_size="64"
no-debug-non-zts-20060613/eaccelerator.so"
代码4-13
chmod
/usr/sbin/useradd-gwwwwww
[eaccelerator]
All relative paths in this config are relative to php's install prefix
输入以下内容（如果您安装Nginx+PHP用于程序调试，请将以下的
sa
 ud bnqap o :ou， 0 as
5s
Time limit on waiting child's reaction on signals from master
Useful
l0
... Snanis ro Anasois uatm penixa sassaooid dud go zunoue stun uaum
notice
Log level
/usr/local/webserver/php/logs/php-fpm.log
Error log file
/usr/local/webserver/php/logs/php-fpm.pid
Pid file 
Address to accept fastcgi requests on.
default
Name of pool. Used in logs and stats
Many BSD-derrived systems allow connections regardless of permissions.
-1
Set listen(2) backlog 
 in a less than this interval of time, a graceful restart will be initiated.
Set permissions for unix socket,
from web server.
: name="mode">0666
'ip.ad.re.ss:port'
4.2安装 PHP 5.2.10（FastCGi 模式）
www.TopSage.c安铺Nginx：取代 Apache 的高性能 Web 服务器
 if one used.
 or just 'port' or'/path/to/unix/socket'
---
## Page 48
实战 Nginx： 取代 Apache 的高性能 Web 服器w.TopSage.com
The timeout (in seconds) for serving of single request after which a php
Should be used when 'max_execution_time' ini option does not stop script 
The timeout (in seconds) for serving a single request after which the worker
Process manager settings
Unix group of processes
Unix user of processes
Additional php.ini defines, specific to this pool of workers.
0s
'Os' means 'off'
mmm
www
 l
35
Used only when 'apache-like' pm_style is selected 
Sets the desired maximum number of idle server processes.
5
Used only when 'apache-like' 
Sets the desired minimum number of idle server processes.
20
Used only when 'apache-like' pm_style is selected 
Sets the number of server processes created on startup.
a[Aas wd ,axtI-auoede, roy dnorb sbutanas
128
Equivalent
Equivalent to Apache MaxClients directive.
Sets the limit on the number of simultaneous requests that will be served.
Sets style of controling worker process count.
/usr/sbin/sendmail -t -i
Jsed with any pm_style.
 backtrace will be dumped to slow.log file
 execution for some reason 
to
第4章Nginx与 PHP（FastCGI）的安装、配置与优化
 PHP_FCGI_CHILDREN environment in original php.fcgi
 pm_style is selected 
---
## Page 49