#### 第二步：估算时间任务分解完之后，你就需要对每一个任务估算时间。就像下面这样。![](Images/a0a5f79fba362e695842947fa06dc1fc.png){savepage-src="https://static001.geekbang.org/resource/image/a3/10/a3548ca342418c4029f6ee64bde80210.png"}估算时间这事，有很多方法可以参考，主要还是得依靠以前的经验。要想估算准确，需要从两个方面入手：-   任务拆分的越细致，想的越清楚，就能估算的越准确。-   要让负责这个任务的人员参与估算。举例来说，让你直接给出一个"留言飞语"这样项目的估算时间，是很难的，但对于某个具体功能模块的实现，就可以比较准确了。当把"留言飞语"这样大的项目拆分成足够小的任务时，你就可以很容易的对小的任务进行准确的估算，从而让整体的时间估算变得准确起来。为什么要让开发人员参与估算呢？我们来对比一下。假如说，一个任务，项目经理估计需要 3天，但是实际执行的时候，这个任务可能要 5天，结果导致开发人员加班。这时候开发人员心中肯定会有不满的情绪，认为是项目经理的错误估算导致了他的加班。如果这个任务所需的时间，是由项目经理和开发人员一起估算出来的，结果最终发现错误估算了任务的难度，这时候开发人员多半会主动加班加点，努力在3 天之内完成，也不会轻易怪罪到项目经理头上。但这不意味着项目经理对估算不需要控制，通常来说，项目经理需要自己有一个估算，然后再请开发人员一起评估。如果结果和自己的估算差不多，那就可以达成一致，如果估算不一致，那怎么办呢？其实很简单，**就是要双方一起沟通，消除偏差。**特别要注意的是，开发人员预估工作量通常会很乐观，所以最后时间会偏紧，这种情况一样要去沟通消除偏差。估算的主要目的是尽可能得到准确的时间。但是在沟通中也要注意技巧，不要采用质问的方式："这么简单一个模块居然要 5天？"这只会让听者产生逆反心理，无法有效的沟通。可以恰当的提一些问题来达到有效沟通的目的，比如我通常会问两个问题：-   "能不能把你这个任务再细化一下？"-   "能不能简单介绍一下这个模块你是打算如何实现的？"估算出现偏差，可能是由于开发人员没想清楚，或者是项目经理自己低估了其难度。**提问可以帮助双方搞清楚真实的情况是什么样的，而且也不会招致反感。**同时项目经理还可以给予一些建议和支持。沟通最好的方式就是倾听和恰当的提问。如果任务的粒度太粗，就需要进行细化，细化后就能更准确的知道结果。对于估算的结果，通常还要考虑增加一些余量，因为实际项目执行过程中，并没办法保证是100%投入，有可能并行还有其他事情，或者一些突发事情、事先没有考虑到的任务都有可能影响进度。至于加多少余量，还是要根据项目的情况和经验来判断。
#### 第三步：排路径我们知道，项目中有些任务是可以并行做的，而有些任务之间则是有依赖关系的。比如说"留言飞语"项目中，编码和测试方案是可以同时进行的，而Code Review，要在编码完成后进行。所以，**排路径就是要根据任务之间的关系，资源的占用情况，排出合适的顺序。**例如下图。![](Images/ba630d5167a3b7e66789befec7bb92b7.png){savepage-src="https://static001.geekbang.org/resource/image/62/ad/62cb0d16d486b8a0b8084d23262e01ad.png"}排路径是一个相对比较复杂的任务，比如要注意任务的依赖关系，要注意路径的长度，尽可能让几个任务可以并行的进行，避免相互等待。如果借助像Project这种工具会让这个过程相对容易些，可以直观的看出来哪些任务是相互依赖的，哪些是同时进行的。没有MS Project 这类软件，也可以用一些替代手段，例如 Excel 上画表格。制定计划时不要担心不够准确，先有一个基本的计划，可以粒度比较粗，不那么准确，让事情先推进起来。
## 设置里程碑不知道你有没有参加过那种周期很长的项目，一直看不到结果，时间一长会很疲惫。所以有经验的项目经理会在项目启动后，根据制订好的初步计划，确定几个关键的里程碑。里程碑的时间点确定后，计划可以灵活调整，但里程碑一般不会轻易改变，因为里程碑代表着一份承诺。这对于项目成员来说，有两个重要的影响，一方面，成员会有很明显的来自DeadLine 的进度压力，自古 DeadLine就是第一生产力；另一方面，就是在里程碑完成后，大家会获得一种正面激励。里程碑的设置，并没有特别的规则，可以是项目生命周期的特定主要时间，也可以是一些关键的时间点。拿"留言飞语"这个项目来说，有三个时间点非常关键：-   第一个时间点就是确定和 PC 客户端的通信协议，这样 PC    客户端可以根据这个协议开始开发功能了；-   第二个时间点就是服务端开发完成，PC 客户端可以服务端联调了；-   第三个时间点就是测试验收通过，可以上线了。最终这三个时间点被定义为里程碑。在项目的推进过程中，根据里程碑完成的情况，你就可以很直观地知道项目的进展如何。如果发现不能如期完成里程碑，就需要进行适当的调整了，例如加班，或者砍掉一些功能需求。当然，设置好的里程碑也不是不能调整，但是要注意调整次数不宜过多，不然就会变成"狼来了"，以后就没有人相信你的时间点了。
## 计划需要跟踪和调整项目管理中，并不是计划制定好了就完事了，还需要跟踪和调整。就好比你要开车去什么地方，设置好导航还不够，还需要沿着导航前进，如果遇到障碍或者走错路了，得要及时调整。项目的跟踪是很必要的，可以了解计划的执行情况，了解成员的工作情况，是否能按时完成，需要什么样的帮助。跟踪进度的方式主要有两种，一种是项目经理定期收集跟踪，一种是项目成员主动汇报。项目经理挨个收集的话，会有一个沟通确认的过程，对进度会了解的更准确；项目成员主动汇报，可以减少项目经理的收集工作，但有可能不准确。在这方面，我觉得敏捷开发的两个实践特别值得借鉴和推广。第一个就是每日站立会议，在每天的站立会议上，每个项目成员都需要说一下自己昨天做了什么，明天计划做什么，有没有什么阻碍。通过这种方式，可以非常好的了解每个人的任务进展情况，同时对于成员遇到的困难，其他人也可以及时给予支持。第二个就是看板，通过看板，可以非常直观的看到每个人在干什么，进展如何。通过对项目计划的跟踪，可以很容易的看出来执行的情况，也会发现偏差，计划出现偏差是很常见的，所以需要定期进行调整，也不需要太频繁，例如可以每周一对计划做一次调整。
## 总结项目计划是保障软件项目成功非常重要的手段，制定计划的过程，可以让你对项目有全面的了解，跟踪计划让你知道项目进展情况，出现问题也可以及时调整。将任务分解、估算时间、排路径，三步就可以制定出一个项目计划，制定计划不要追求完美，制定好一个初步计划后，就可以先按照计划推进起来，进行过程中还可以继续调整细化。设置里程碑可以有效的保证项目的按时交付。最后，并不需要当项目经理才能去制定计划，生活中每件事都可以当作一个项目，都可以去制定计划来帮助你实现目标。
## 课后思考你现在项目的计划制定的如何？如果你是项目经理，你会如何改进？你日常生活中，会有制定计划的习惯吗？欢迎在留言区与我分享讨论。感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。![](Images/da183fec69b316d65c37d6f003a9f298.png){savepage-src="https://static001.geekbang.org/resource/image/31/af/315c3c753591fbaf480f39cdc9e0f3af.jpg"}