title:On the invisibility of designated confirmer signatures
author:Fubiao Xia and
Guilin Wang and
Rui Xue
Chaum’s Designated Conﬁrmer Signature
Revisited
Jean Monnerat? and Serge Vaudenay
EPFL, Switzerland
http://lasecwww.epfl.ch
Abstract. This article revisits the original designated conﬁrmer signa-
ture scheme of Chaum. Following the same spirit we naturally extend the
Chaum’s construction in a more general setting and analyze its security
in a formal way. We prove its security in the random oracle model by
using a random hash function and a random permutation. We notably
consider the conﬁrmer as an attacker against the existential forgery un-
der an adaptive chosen-message attack. This security property is shown
to rely on the hardness of forging signatures in a universal way of a classi-
cal existentially forgeable signature scheme. Furthermore, we show that
the invisibility of the signatures under a non-adaptive chosen-message
(aka lunchtime) attack relies on some invisibility properties of an ex-
istentially forgeable undeniable signature scheme. The existence of this
cryptographic primitive is shown equivalent to the existence of public-
key cryptosystems. It is also interesting to see that this article conﬁrms
the security of Chaum’s scheme since our construction is a natural gen-
eralization of this scheme.
Key words: Designated conﬁrmer signatures, random oracle model.
1 Introduction
Undeniable signatures [7] are some signature schemes which allow to authenticate
a message in such a way that the recipient has to interact with the signer in
order to be convinced of its validity. Otherwise the recipient cannot learn any
information on the validity of the signature by its own. This kind of signature is
useful for privacy protection when the signer would like to keep control on the
spread of proofs of his signing. Some further applications such as the authenticity
of software or auctions have been mentioned or presented in [5,8,9,15,25].
One drawback of such a signature scheme is that the physical integrity of
the signer can be threatened to make him collaborate to the conﬁrmation or
denial protocol. This motivated Chaum in 1994 [6] to introduce designated con-
ﬁrmer signatures in which the ability to conﬁrm/deny a signature is shifted to
a delegate. The principal idea of this scheme is to mix an undeniable signature
related to the conﬁrmer with the hash of the message to be signed and then to
? Supported by a grant of the Swiss National Science Foundation, 200021-101453/1.
sign the result by using a classical existentially forgeable signature. In the same
year, Okamoto [19] presented a generic construction based on some three move
identiﬁcation protocols and proved that the existence of conﬁrmer signatures is
equivalent to that of public-key cryptosystems. Since then, several new schemes
have been proposed and some security issues have been explored [3,4,12,16].
The goal of this paper is to review the original scheme of Chaum [6] as well
as the underlying ideas of his construction in a formal and more general setting.
Namely, his original article neither presents a formal model nor a security proof.
Our principal motivation is that the scheme of Chaum remains at this time one
of the most simple and elegant construction of designated conﬁrmer signature
scheme. One motivation is to study the possibility to use an undeniable signature
scheme in the construction of a designated conﬁrmer signature, in particular
reusing the conﬁrmation and denial protocol.
As far as we know, the only generic constructions of designated conﬁrmer sig-
natures which are based on an undeniable signature scheme are that of Chaum [6]
and the one of Okamoto [19]. The security of the latter was only proved in 2001
in [20] and its resistance against existential forgery under an adaptive chosen-
message attack holds only against a classical adversary, i.e., anybody but the
conﬁrmer. To our best knowledge, the security of the Chaum’s construction has
not been proved yet. Moreover, the only known security ﬂaw of this scheme is
mentioned in [3]. The authors presented an attack against the invisibility of sig-
natures in the adaptive scenario against the scheme of Michels and Stadler [16]
and argued that the same kind of attack holds against the scheme of Chaum.
In this attack, the attacker is able to transform a given message-signature pair
in a new one such that the latter pair is valid only if the original pair is valid.
Hence, the attacker breaks the invisibility of the ﬁrst signature by sending the
second pair to the conﬁrmer for a conﬁrmation (or denial) protocol.
Contributions of this paper. We extend the Chaum’s construction based on
an undeniable signature in a very natural way and formally study its security.
To this end, we assume we have the two following cryptographic primitives at
disposal: a classical existentially forgeable signature scheme and an existentially
forgeable undeniable signature scheme. We then introduce the model of security
and prove the security of this construction in the random oracle model. The
main security result concerns the resistance against existential forgery under
an adaptive chosen-message attack. This property is proved assuming that the
underlying existentially forgeable signature scheme is resistant against a uni-
versal forgery under a no-message attack and holds even when the attacker is
the conﬁrmer. We furthermore show that the invisibility holds under a lunchtime
chosen-message attack provided that the underlying undeniable signature scheme
satisﬁes invisibility under a lunchtime known-message attack. This generalized
Chaum construction does not satisfy invisibility against an adaptive attacker.
We explain why this property certainly cannot be achieved without considerably
changing the basic construction and its spirit. We also present a practical real-
ization of this generalized Chaum construction. Finally, we dedicate a section
of this paper to show that the existence of an existentially forgeable undeniable
2
signature scheme which is invisible under a lunchtime known-message attack is
equivalent to the existence of a public-key encryption scheme. This conﬁrms that
this construction is consistent with the result of Okamoto [19] and that depend-
ing on the required properties, an undeniable signature can lie in two classes of
cryptographic primitives, those of public-key encryption and digital signatures.
2 Designated Conﬁrmer Signature Scheme
We recall in this section the diﬀerent algorithms of a designated conﬁrmer sig-
nature scheme. In such a scheme we need to consider three entities that are the
signer (S), the conﬁrmer (C) and the veriﬁer (V). They all possess a pair of
public/secret key KU := (KU
s ) for U ∈ {S, C, V}. The set of the message
space is denoted by M and the set of the signature space is denoted by Σ. A
designated conﬁrmer signature is composed of the following algorithms.
p ,KU
s ,KC
p ) of m (which lies in Σ).
p ) outputs σ. Otherwise, we say (m, σ) is invalid.
Sign Let m ∈ M be a message. On the input of the signer’s secret key KS
s and
p , the (probabilistic) polynomial time algorithm
Setup Let k be a security parameter. The setup is composed of three probabilis-
tic polynomial time algorithms SetupU for U ∈ {S, C, V} producing keys
KU ← SetupU(1k). Furthermore, we assume that public keys are exchanged
in an authenticated way.
conﬁrmer’s public key KC
Sign generates a signature σ ← Sign(m,KS
We say that the pair (m, σ) is valid if there exists a random tape such that
Sign(m,KS
Conﬁrm Let (m, σ) ∈ M × Σ be a supposedly valid message-signature pair.
Conﬁrm is an interactive protocol between C and V i.e., a pair of interactive
probabilistic polynomial time algorithms ConﬁrmC and ConﬁrmV such that
m, σ, KC
p , KS
is the auxiliary input of ConﬁrmC
and KV
is the auxiliary input of ConﬁrmV. At the end of the protocol,
ConﬁrmV outputs a boolean value which tells whether σ is accepted as a
valid signature of m.
Deny Let (m, σ0) ∈ M × Σ be an alleged invalid message-signature pair. Deny
is an interactive protocol between C and V i.e., a pair of interactive proba-
bilistic polynomial time algorithms DenyC and DenyV such that m, σ0, KC
p ,
p , KV
KS
is the auxiliary input of DenyC and KV
is
the auxiliary input of DenyV. At the end of the protocol, DenyV outputs a
boolean value which tells whether σ0 is accepted as an invalid signature.
p are input of both, KC
s
p , KV
p are input of both, KC
s
s ,KC
s
s
3 Security Requirements
Existential Forgery This notion protects the signer S from an attacker A which
would like to forge a signature on a (possibly random) message m ∈ M without
knowing the signer’s secret key KS
s . In this paper, we will consider the stan-
dard security notion of existential forgery under adaptive chosen-message attack
3
deﬁned by Goldwasser et al. [11] for classical digital signatures. We adapt this
notion in our context as follows.
p ,KS
p , KV
p ,KV
p , KS
s ) ← SetupS(1k), (KV
Deﬁnition 1. The designated conﬁrmer signature Sign is secure against an ex-
istential forgery under adaptive chosen-message attack if there exists no proba-
bilistic polynomial time algorithm A which wins the following game with a non-
negligible probability.
p (possibly KC
Game: A receives KC
s ) ← SetupC(1k),
s ) ← SetupV(1k), generated randomly and de-
(KS
pending on a security parameter k. Then, A can query some chosen messages to
a signing oracle, some chosen pairs (m∗, σ∗) ∈ M × Σ to a conﬁrmation (and
denial) protocol oracle and interact with it in a conﬁrmation (denial) protocol
where the oracle plays the role of the prover. All these queries must be polyno-
mially bounded in k and can be sent adaptively. A wins the game if it outputs a
valid pair (m, σ) ∈ M × Σ such that m was not queried to the signing oracle.
We denote this probability of success by Succef−cma
s ) from (KC
p ,KC
Sign,A (k).
Invisibility of Signatures We present here a deﬁnition which is adapted from [3].
p ,KS
p ,KS
p ,KC
s ) from (KC
p (possibly KS
p ,KV
p ,KV
s ) ← SetupS(1k), (KV
Deﬁnition 2. We say that Sign satisﬁes the invisibility property under a lunch-
time chosen (resp. known)-message attack if there exists no probabilistic polyno-
mial time algorithm D called invisibility distinguisher which wins the following
game with a non-negligible probability.
Game: D receives KC
s ) ← SetupC(1k),
(KS
s ) ← SetupV(1k). It can query some chosen
messages to a signing oracle and some message-signature pairs (m, σ) ∈ M× Σ
to some oracles running the conﬁrmation and denial protocol. After a given time
(a lunch time), D does not have access to the oracles anymore. Then, it chooses
two messages m0, m1 ∈ M and submits them to a challenger (resp. gets two
messages m0, m1 ∈ M with uniform distribution). The challenger picks a ran-
p ). D receives σ. Finally, D outputs a
dom bit b. He sets σ = Sign(mb,KS
guess bit b0. D wins the game if b0 = b.
The advantage of such a distinguisher D is ε, where the probability that b0 = b
is 1
2 + ε.
Note that this deﬁnition is a little weaker than the deﬁnition of [3] in which
D can continue to send queries to the oracles after the selection of m0, m1. We
will discuss this point in Subsection 5.2.
s ,KC
Non-Coercibility This notion prevents that the signer S is coerced by anybody
who would like to get a proof that a given signature was really generated by
S after the signature is released. As far as the signer erases his intermediate
computations, this notion can be regarded as an extension of the invisibility
property in which the attacker is given KS
s . Indeed a signer who would keep in
memory the random values needed to generate a signature could be coerced to
prove later how this one was generated. Note also that we should distinguish the
non-coercibility from the receipt-freeness where the signer would be unable to
4
keep a proof that he really generated a given signature even if he meant to. This
extends the non-coercibility to the non-corruptibility.
As additional security properties related to the conﬁrmation and denial pro-
tocols, we have the completeness, the soundness and the non-transferability. The
completeness ensures that a protocol always passes when the prover and the veri-
ﬁer follow it correctly. The soundness of the conﬁrmation (resp. denial) protocol
prevents from a malicious prover to prove that an invalid (resp. valid) signa-
ture is valid (resp. invalid). The non-transferability of the conﬁrmation (resp.
denial) protocol prevents a veriﬁer from transferring the proof of the validity
(resp. invalidity) of a signature to any third party. This concept was ﬁrst stated
in [14]. Moreover, a generic construction based on trapdoor commitments [2] is
also given in this article. Formal deﬁnitions of these notions are given in [3].
4 The Generalized Chaum’s Construction
4.1 Building Blocks
Existentially Forgeable Signature We consider an existentially forgeable signa-
ture ExSign such as the plain RSA or plain DSA1 scheme. We have a setup which
s ) ← SetupS(1k)
generates the keys associated to this scheme (that of S), (KS
which depends on a security parameter k. Let Mex denote the message space
and Σex denote the signature space of this scheme. We have
p ,KS
σex ← ExSignKS
s
(mex),
0 or 1 ← ExVerifyKS
p
(mex, σex)
depending on whether (mex, σex) ∈ Mex × Σex is a valid message-signature
pair. We also have a probabilistic algorithm (mex, σex) ← ExForge(KS
p ) which
existentially forges a valid message-signature pair such that mex is uniformly
distributed in Mex.
For proving the security of Sign, we will need to assume that ExSign satisﬁes
universal unforgeability under a no-message attack.
Deﬁnition 3. We say that the signature scheme ExSign resists against a univer-
sal forgery under a no-message attack if there exists no probabilistic polynomial
time algorithm B that wins the following game with a non-negligible probability.
s ) ← SetupS(1k) generated
Game: B ﬁrst receives the public key KS
randomly and depending on the security parameter k. Then, B receives a chal-
lenged message mex ∈ Mex which is uniformly picked at random. At the end, B
wins this game if it outputs a signature σex such that ExVerifyKS
(mex, σex) = 1.
p from (KS
p ,KS
p
Our deﬁnition of universal forgery is slightly weaker than usual as in [22],
where a successful attacker should be able to forge a valid signature to every
challenged message of the message space. In many situations such as plain RSA
or plain DSA where messages can be blinded, the two notions are equivalent.
1 Plain DSA is DSA without a hash function.
5
Group Structure We need Mex to form a group with an internal operation ﬂ.
The inverse of an element mex ∈ Mex with respect to this group operation is