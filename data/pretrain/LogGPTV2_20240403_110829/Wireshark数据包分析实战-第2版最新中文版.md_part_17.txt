e2
图8-12
Conversations窗口显示了多个不同的连接
49
1221
7735
盗家装
Utoilei
一确切地说是956个。但若是手工滚动分
2141
第8章基础的现实世界场景159
5624
1052
6629
1354830000
0.806357000
0.751189000
0579210000
0156174000
0O1S1000
20.000000000
0.346
---
## Page 175
8.2.2
使用协议分层统计窗口
Frame
rotoco
WiresharnkProtocol Herarchy Statista
Ethemet
TransmissonContiol Protocol
②User DatagamProtocol
BIntemet Protocol
③HypertetTransferProtocol
Hierarchy)
Help
Domin Name Sece
传输的文件类型进行细分。
为了更好地观察情形，
Line-based tet data
etensble Markup Language
Compuserve GlF
Portable Network Graphics
IPEGFile Interchange Formuat
%Packets
100.00%
Display filter none
12.66%
100.00%
100.00
0.21%
0.94%
146%
146
97.07
1.78%
293%
2.03%
0.31%
PacketBytesMit/sEndPacketsEndBytesEndMbits
9157191259966
121
928648988
28
956652181
9566521812548
17
2
10587
12156
81185
3193
3193
2332
7778
9761
0.041
2.548
0.004
0.009
0.030
0.047
0.038
0.317
2336
0.012
0.012
14
28
D
EO8L9S
12156
37579
10587
3193
9761
0
0
Close
0.00
---
## Page 176
8.2.3
查看DNS流量
UDP标题下面看，那里的确显示14个会话，代表14个DNS事务，这验证了我
总数除以2，表示成对的请求与响应，就得到了这个数字，如果你往会话窗口的
Service条目旁边的Packets列）意味着我们有14个DNS事务。我们将数据包
DNS事务很少，所以28个DNS数据包（如图8-13所示，列在DomainName
从而导致执行多个查询。
这告诉我们，ESPN网站的HTML代码有可能通过域名引用了其他域或子域
Wireshark窗口内的filter栏里输入dns，将显示所有的DNS流量。
们的猜想
Selected.
板中选择一个查询，然后在Packet Details面板中展开数据包的DNS头部，
查询的域名，我们创建一个只显示查询数据包的过滤器。在PackctList面
与它主页显示的内容有关。
更容易读取我们正在分析的记录。而且，如图8-14所示，那里的确有14个独
然而DNS查询并不会独自发生，而捕获记录中的其他流量就只有HTTP
单独依据这些信息，我们可以做些归纳。首先，我们从前面的例子知道，
图8-14中的DNS流量全部以查询/响应的形式出现、为了更好地查看被
查看DNS流量的一个简单方法是创建一个过滤器。如图8-14所示，在
让我们看看是否能找到一些证据来证实我们的推测
EE
二
图8-14DNS流量以标准的查询／响应形式出现
第8章基础的现实世界场果161
---
## Page 177
8.2.4查看HTTP请求
你已经清除了刚才创建的过滤器）。
一个与特定域名的连接）解释了DNS请求代表的所有域名。
这是完全可以接受的。
HTTP RequestsbyHTTP Host
Topic/ltem
a2.espncdn.com
a.espncdn.com
espn.go.com
www.espn.com
wB8.go.com
assets.espn.go.com
adsatt.espn.go.com
www.masters.com
gamesak.espn.go.com
streak.espn.go.com
content.dl-rms.com
log.go.com
broadband.espn.go.com
61
Count Rate
品
0.000506154%
0.030873
0.0005061.54%
0.0010123.28%
0.0005061.64
0:0010123.28%
0.0005061.64%
0.002024
0.000506 1.64%
0.002024656%
0.001012 3.28%
0.015689 50.82%
0.0005061.64%
Percent
6.56%
---
## Page 178
8.3.1
8.3现实世界问题
无法访问 Internet：配置问题
可以访问所有内网资源，包括其他工作站的共享内容，以及运行在本地服务器
接入问题，以及类似打印机故障、从分支机构连接等经典问题。
上的应用程序。
第一个问题的场景相当简单：用户不能访问Intemet。我们已经确认该用户
这个网络架构非常简单，所有客户机和服务器都连接到一系列的简单交换
现在，我们将讨论存在问题的流量的例子。让我们来看看各种各样的Intemet
图8-16文件的Summary窗口显示全过程在2s内完成
WineshareSurmay
Diplay
Teaffic
Firnt packst
Packet ie imit
Avg.packets/sec
ackets
Ignored pacoets
Display filter
Capturefilter,
Intertace
apture
Elapsed
Format:
Hc
spaciett
Jatian
CapturedDiplyedMaled
6535byes
Wietar/tpump/--lipap
65217
682.196byte
456.915
318528.317
956
R音
基础的现实世界场景163
---
## Page 179
30.000105172.160.84222DN55tandarqueyAwwwg0ge.com
西
Doa1n.ame
Ethernet
听线路的最佳办法）。最后得到捕获记录文件nowebacces1.pcap。
来决定放置嗅探器的最佳方法。
888
Timie
172.16.0.10的MAC地址。
的计算机发送一个ARP广播数据包给网络上的所有计算机，试图得到默认网关
机的MAC地址是00:05:b3:bf:91:ee，IP地址是172.16.0.8。在数据包1中，用户
oxo1oo (standard query)
关应该可以引导它接入Internet。
为了找出问题的原因，
1.侦听线路
RRS:0
如图8-17所示，流量捕获记录文件以一个ARP请求和响应开始。用户计算
2.分析
RRSA
D
图8-17针对计算机默认网关的ARP请求和响应
172.
0001
图8-18发送到4.2.2.2的DNS查询
，我们可以一边用噢探器监听线路，
ff:ff:ff:ff
ARP
lnto
一边让用户尝试
---
## Page 180
日
国
user
Lritel
Queries
Flags:
ww.google.com:typeA,classIN
bat
4.2.2.2。如图8-20所示，这个过程不断重复，在接下来的几秒钟，交替向配置
DNS服务器4.2.2.10
如图8-19所示，在数据包4中，第二个DNS查询被发送到预先配置好的备用
我们没有看到任何响应，却发现同样的DNS查询再次发送到不同的目的地址。
这正是用户的Intermet浏览器报告该页无法访问之前所花的时间。
好的首选DNS服务器O和备用DNS服务器9发送请求。整个过程大概花了8s
我们可以假设本机的协议栈没有问题。显然当进行DNS请求时，问题就发生了。
sors
备在线并且能连接。我们也知道用户的计算机确实在网络上传输数据包，所以
正常情况下，DNS服务器会很快响应DNS查询，但在这个例子中并非如此
由于计算机仍然没有从DNS服务器收到响应，1s后，查询被再次发送到
172:
10:
:25:b3
P
图8-20直到通信结束，重复的DNS查询才停止
bf:9
图8-19发送到4.2.2.1的第二个DNS壹询
（39251t5)
0001
8
2
:25:h
60
ee)
Protocul
2.1
第8章基础的现实世界场景165
---
## Page 181
8.3.2
注意
168
用HTTP请求Web页面。
无法访问Internet：意外重定向
址并不是一台路由器，它不能将DNS查询数据包转发到网络之外。
据包的人而言，排除这么简单的配置错误将花费相当长的时间。你可以看到，
但它却严重影响了用户。对于缺少网络知识或者不能像我们这样能快速分析数
别问题，但它可以告诉我们去哪里找，从而节省了宝贵时间。如果我们先与ISP
数据包分析并不局限于大型和复杂的问题。
器，我们就能将注意力集中到计算机本身，实际也就是问题的原因上。
分析少量的数据包，通常都能快速解决。
注意到由于我们不知道网络上默认网关的IP地址，Wireshark不能准确地识
在这个情景中，问题出自一台错误配置的客户端。虽然这个问题相当简单，
3.学到的知识
这个问题只影响她一个人。
的小型网络。
1.侦听线路
---
## Page 182
国
300039116017210210456304577W1914
Time
sourceport
段上的所有计算机发送一个ARP广播数据包，试图获得主机172.16.0.102的
得到nowebacces2.pcap文件。
数据包。它设置了SYN标志，表明这是两台主机间建立TCP连接时握手的第
示，下一个数据包并不是DNS请求，而是从172.16.0.8到172.16.0.102的TCP
通过这个地址数据包可以被再次转发到外部DNS服务器。然而，如图8-22所
00:21:70:c0:56:f0。根据之前的情形，我们也许会猜测这是网关路由器的地址，
MAC地址。我们目前还不认识这个地址。
中，用户计算机的MAC地址是00:25:b3:bE91:ee，IP地址是172.16.0.8，它向网
一个数据包0。
区
显然，试图连接到172.16.0.102的80端口的TCP连接通常与HTTP流
在数据包2中，用户的计算机了解到IP地址172.16.0.102的MAC地址是
如图8-21所示，捕获记录文件以一个ARP请求和响应开始。在数据包
2.分析
图8-22从一台内网主机发往另一台内网主机的TCPSYN数据包
1074
9
4061304577
80（80)
5JS
01074)
图8-21对网络上另一个设备的ARP请求和响应
00:25:b3:bf:91:ee
ed
00
:ff:ff:ff:ff:ff
880
880
888
X.....
ARP
16.0.102
ARP
Protocol
0:21:70:20:56:0(00:21:70:0:56:0)
第8章基础的现实世界场景167
172.16.0.102 15at00:21:70:c0:56:0