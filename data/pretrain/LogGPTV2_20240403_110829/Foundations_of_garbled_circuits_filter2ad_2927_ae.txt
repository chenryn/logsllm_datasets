A,B(P ) = FA[1:k−1](T) ⊕ FB[1:k−1](T) ⊕ P . This dual-
E via E
key cipher has tweak length τ and is denoted E[F]. During
evaluation, token types are revealed, but the entire key of F
remains secret.
The following result establishes that E[F] is a good DKC
when F is a good PRF. The reduction is tight and explicit.
More speciﬁcally, the proof provides a blackbox reduction
such that for any adversary A(1k) attacking E[F] there is
(cid:3)
T
an adversary B(1k) attacking F for which Adv
F (B, k) =
E[F](A, k). If A makes Q queries to Encrypt then B
0.5 Advdkc
also makes Q queries to the PRF oracle Fn. The running
time of B is about that of A, where the meaning of “about”
is manifest in the proof that appears in the full version of
this paper [11].
prf
Theorem 2. Let F be a PRF. Then E[F] is a secure dual-
key cipher.
The instantiation of a DKC E by way of E[F] is by no
means the only reasonable instantiation, nor the only one
that can be proven secure. We now investigate further in-
stantiations, going all the way to a blockcipher.
Dual-key ciphers from double encryption. We also
prove the dkc-security of the instantiation E[E] in which
T
A,B(X) = EA(EB(X)), with E being an ideal cipher.
In
E
the theorem below, we will show that if an adversary A
makes Q queries to the Encrypt oracle, and qE queries to
E[E](A, k) ≤ (10Q2 + 4Q + 8qE)/2k.
E and E
The above assumes that Q + qE ≤ 2k−3.
−1 then Advdkc
Theorem 3. Let E be an ideal cipher. Then E[E] is a
secure dual-key cipher.
The proof is found in the full version of this paper [11].
Unwinding the results.
One needs to be careful in
combining Theorems 1 and 3 to obtain a good bound on
the security of Garble1 when instantiated with a DKC made
by double encryption. Let adversary A attack Gb1[E[E]]
and assume A(1k) outputs circuits of at most r ≤ 2τ (k)−2
wires and fan-out at most ν. Suppose it makes at most qE
−1 and that 2ν + qE ≤ 2k−3. Then, from
queries to E and E
Theorems 1 and 3, there is a random variable 0 < Q ≤ 2ν
such that E[Q] < 4 and
Adv
prv.ind, Φtopo
Garble1[E[E]] (A, k)
2
≤ r
2k
≤ r
2k
· (20E[Q
] + 8E[Q] + 16qE )
· (20E[2νQ] + 8E[Q] + 16qE)
< 160rν/2k + 32r/2k + 16rqE /2k .
prv.ind, Φtopo
G
The bound is quite satisfactory. Above, the expectation
E[Q] appears in the ﬁrst inequality because our advantage
if an ad-
notion satisﬁes the following linearity condition:
versary A behaves as adversary A1 with probability p, and
behaves like A2 otherwise, then Adv
(A, k) =
prv.ind, Φtopo
G
(A2, k).
(A1, k) + (1 − p)Adv
prv.ind, Φtopo
G
p Adv
AES-based instantiations. We now consider concrete
instantiations. This means we ﬁx a value k of the security
parameter and suggest ways to realize E on k-bit keys based
on blockciphers, speciﬁcally AES. Security for these instan-
tiations can be derived via the concrete security bounds that
we stated above following Theorem 1. Diﬀerent choices of
instantiation lead to diﬀerent tradeoﬀs between assumptions
and eﬃciency. We begin with ways to instantiate F on (k−1)-
bit keys:
792Let FK(T) be the ﬁrst k bits of EK(T(cid:13) 0) (cid:13) EK(T(cid:13) 1) for
a blockcipher E having block length and key length of
(k − 1); to be concrete, E = AES128, k = 129, |K| = 128,
and τ = |T| = 127. This construction is a good PRF
under the standard assumption that E is a good PRP.
With this instantiation, evaluating a garbled gate costs
four AES operations.
Let FK(T) be EK(cid:4)0(T) for a blockcipher having a k-bit key
and block size, say E = AES128 and k = τ = |T| =
128 and |K| = 127. Assuming that E is a good PRP is
not enough to prove that F is a good PRF, as zeroing
out a bit of the key does not, in general, preserve PRF
security [42]. Still, it seems reasonable to directly assume
this F is a good PRF. Costs are halved compared to the
above; now, evaluating a garbled gate requires two AES
operations.
Next we suggest some further ways to make the dual-key ci-
pher E directly, meaning not via a PRF. The ﬁrst follows the
double-encryption realization of garbled gates attributed to
Yao by Goldreich [18] (which would have been understood
that primitive to be probabilistic, not a blockcipher). The
second method is extremely eﬃcient—the most eﬃcient ap-
proach now known. Implementation work is currently un-
derway to measure the magnitude of the gain:
T
T
A,B(P) = EA(EB(P)) (the tweak is ignored), where
Let E
E : {0, 1}k × {0, 1}k → {0, 1}k is a blockcipher, say
AES128. For a proof we would model E as an ideal ci-
pher. Composition of encryption schemes is understood
by many researchers to be Yao’s original approach, al-
though the earliest expositions make this seem doubtful.
A,B(P) = Econst(K) ⊕ K ⊕ P where K = A ⊕ B ⊕ T
Let E
and E = AES128, say, and const is a ﬁxed 128-bit string.
Here k = τ = 128. With this instantiation evaluating a
gate costs only 1 AES operation. Even more important,
all AES operations employ a single, ﬁxed key. This allows
one to take full advantage of AES-NI hardware support
to get extremely high speeds. For a proof, we would
model Econst(·) as a random permutation π, giving the
adversary access to oracles for π and its inverse.
Other one-call, ﬁxed-key schemes are possible, for oblivious-
ness, authenticity, and dynamic security, and adjustments to
allow the free-xor and row-reduction optimizations [31, 44].
Basing garbled-circuit evaluation on AES and employing
AES-NI in an implementation was also suggested by Kreuter,
Shelat, and Shen [32]. They use AES-256, rekeying with gate
evaluation.
6. AUTHENTICITY & OBLIVIOUSNESS
We now describe a scheme Garble2 that satisﬁes not only
privacy but also obliviousness and authenticity. The scheme
is like Garble1 except, ﬁrst, the last bit of a token is always
uniform, even for output wires. This will give obliviousness.
Next, the string encoding the decoding function is made to
list all the tokens for all the output wires, ordered to make
clear which tokens have what semantics. This engenders
authenticity. See Fig. 7.
Talking through some of the pseudocode, line 202 now
assigns a token with random semantics to each and every
wire. Lines 203–207 compute the garbled function F and
encoding function e exactly as with Garble1. Line 208 now
records the vector of tokens for each of the m output wires.
(Recall that, under our conventions, the last m of the r total
wires are the output wires, these providing the m output
bits, in order.) At lines 230–235 decoding procedure De,
when presented a 2m-vector d and an m-vector Y , veriﬁes
that each component of the latter is in the corresponding
set of two allowed values.
If so, we determine the correct
semantics for this output bit using our convention that Y b
i
has semantics b.
Scheme Garble2 simultaneously achieves privacy, oblivi-
ousness, and authenticity if instantiated in the same manner
as we instantiated Garble1. This is captured by the following
result; the proof appears in the full version of the paper [11].
Again, as per Corollary 2 it does not matter whether we
consider ind or sim, and for simplicity we pick the former.
Theorem 4. Let E be a secure dual-key cipher. Then
G = Garble2[E] ∈ GS(prv.ind, Φtopo) ∩ GS(obv.ind, Φtopo) ∩
GS(aut).
Again this asymptotic claim is underlain by concrete black-
box reductions and concrete bounds as follows. There are
blackbox reductions Uxxx for xxx ∈ {prv.ind, obv.ind, aut}
s.t. if A(1k) outputs circuits of at most r wires and fan-out
at most ν, and then D = U
achieves xxx-advantage of
at least ε, then D = U
A
xxx achieves dkc-advantage at least
ε/2r − 21−k, makesQ ≤ 2ν oracle queries, with E[Q] < 4.
It runs in time about that of A plus the time for 4r compu-
tations of E on k-bit keys.
A
Acknowledgments
This research was supported under NSF grant CNS 0904380;
many thanks to the NSF for their continuing support. The
paper was reﬁned and ﬁrst presented when Rogaway vis-
ited the Isaac Newton Institute for Mathematical Sciences,
a program co-arranged by Nigel Smart. Thanks to Shaﬁ
Goldwasser, Kenny Patterson, and Thomas Schneider for
comments and pleasant interactions.
7. REFERENCES
[1] M. Abadi and J. Feigenbaum. Secure circuit
evaluation. Journal of Cryptology, 2(1):1–12, 1990.
[2] B. Applebaum. Key-dependent message security:
Generic ampliﬁcation and completeness.
EUROCRYPT 2011, volume 6632 of LNCS, pages
527–546. Springer, 2011.
[3] B. Applebaum, Y. Ishai, and E. Kushilevitz.
Computationally private randomizing polynomials and
their applications. Computational Complexity,
15(2):115–162, 2006.
[4] B. Applebaum, Y. Ishai, and E. Kushilevitz.
Cryptography in NC0. SIAM J. Comput.,
36(4):845–888, 2006.
[5] B. Applebaum, Y. Ishai, and E. Kushilevitz. From
secrecy to soundness: Eﬃcient veriﬁcation via secure
computation. ICALP 2010, Part I, volume 6198 of
LNCS, pages 152–163. Springer, 2010.
[6] B. Applebaum, Y. Ishai, and E. Kushilevitz. How to
garble arithmetic circuits. 52nd FOCS, pages 120–129.
IEEE Computer Society Press, 2011.
[7] Y. Aumann and Y. Lindell. Security against covert
adversaries: Eﬃcient protocols for realistic adversaries.
TCC 2007, volume 4392 of LNCS, pages 137–156.
Springer, 2007.
793(n, m, q, A, B, G) ← f
for i ∈ {1, . . . , n + q} do t (cid:2){0, 1}, X 0
for (g, i, j) ∈ {n + 1, . . . , n + q} × {0, 1} × {0, 1} do
i (cid:2) {0, 1}k−1t, X 1
i (cid:2){0, 1}k−1t
a, a ← lsb(A), B ← X j
b , b ← lsb(B), T ← g (cid:13) a(cid:13) b, P [g, a, b] ← E
(cid:2)
X Gg (i,j)
g
(cid:3)
T
A,B
n, X 1
n)
n+q−m+1, . . . , X 0
n+q, X 1
n+q)
200 proc Gb(1k, f )
201
202
203
204
205
206 F ← (n, m, q, A, B, P )
e ← (X 0
1 , X 1
1 , . . . , X 0
207
208 d ← (X 0
n+q−m+1, X 1
209
a ← A(g), b ← B(g)
A ← X i
return (F, e, d)
(X 0
220 proc En(e, x)
221
222 X ← (X x1
return X
223
1 , X 1
1 , . . . , X 0
n) ← e
n, X 1
1 , . . . , X xn
n )
240 proc ev(f, x)
241
242
243
244
245
(n, m, q, A, B, G) ← f
for g ← n + 1 to n + q do
a ← A(g), b ← B(g)
x ← Gg(xa, xb)
return xn+q−m+1 . . . xn+q
(Y1, . . . , Ym) ← Y , (Y 0
for i ∈ {1, . . . , m} do
230 proc De(d, Y )
231
232
233
234
235
return y ← y1 ···y m
if Yi = Y 0
else if Yi = Y 1
1 , Y 1
i then yi ← 0
1 , . . . , Y 0
m, Y 1
m) ← d
i then yi ← 1 else return ⊥
250 proc Ev(F, X)
251
252
253
254
255
256
(n, m, q, A, B, P ) ← F
for g ← n + 1 to n + q do
a ← A(g), b ← B(g)
A ← Xa, a ← lsb(A), B ← Xb, b ← lsb(B)
T ← g (cid:13) a(cid:13) b, Xg ← D
return (Xn+q−m+1, . . . , Xn+q)
(cid:2)
(cid:3)
P [g, a, b]
T
A,B
Figure 7: Garbling scheme Garble2. Its components are (Gb, En, De, Ev, ev) where ev, shown for completeness, is
canonical circuit evaluation. We assume a dual-key cipher E with tweak length τ and let D denote its inverse.
[8] B. Barak, I. Haitner, D. Hofheinz, and Y. Ishai.
Bounded key-dependent message security.
EUROCRYPT 2010, volume 6110 of LNCS, pages
423–444. Springer, 2010.
[9] M. Barni, P. Failla, V. Kolesnikov, R. Lazzeretti,
A.-R. Sadeghi, and T. Schneider. Secure evaluation of