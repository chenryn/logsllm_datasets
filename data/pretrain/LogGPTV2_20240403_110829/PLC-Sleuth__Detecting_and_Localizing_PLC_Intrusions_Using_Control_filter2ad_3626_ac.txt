### Intrusion Detection and Localization

An alarm is triggered whenever the stability index \( S_t \) exceeds a predefined threshold \( \mu \), as defined by:
\[
\nu_t = w_{uk} y_j(t), \quad \text{if} \quad S_t > \mu,
\]
at which point, the detection system resets with \( S_t = 0 \).

#### Intrusion Localization

Localizing a forged command is straightforward if only one abnormal edge is detected, indicating that the command responsible for that edge is compromised. When multiple anomalies are detected, PLC-Sleuth localizes the forged command as the one that first triggers the anomaly alarm. This greedy strategy is intuitive because cascaded anomalies take longer to cause instability in control systems compared to directly forged commands. For example, in the SEDS system, a forged \( u_a^2 \) in Equation (2) first degrades the stability of the ethanol reflux in Loop-#2, causing alarms at edge \( e_{u2y2} \). Subsequently, it further oscillates the liquid level \( y_3 \) in Loop-#3 through fluid transportation, potentially triggering additional alarms at edge \( e_{u3y3} \). Thus, PLC-Sleuth identifies the forged command as the one controlling Loop-#2.

### Coupled Feedback Control Schemes

In coupled feedback control schemes, a transfer node \( r_m \in R \) (where \( R \subset U \)) is introduced to construct the control graph. These nodes are responsible for transferring control commands from master to slave loops. Most transfer nodes also act as setpoints for the slave loops. Nodes that do not act as setpoints are referred to as transmit nodes. PLC-Sleuth identifies the set \( R \) from \( U \). Specifically, each control loop of a PLC generates a corresponding command, forming the set \( U \). Only a subset of \( U \) is sent to actuators in the coupled feedback control, and the remaining commands form the transfer node set \( R \).

#### Constructing the Control Graph

1. **Step-IV: Constructing the Master Loops**
   - Master loops are those containing a setpoint node in \( S \).
   - A control graph for the master loops is constructed from the node set \(\{S, Y, R\}\).
   - The identification of error edges in \( E_y^s \) of master loops is done similarly to Step-I.
   - Command edges in \( E_r^y \) in master loops are identified by replacing node \( u_k \in U \) with node \( r_m \in R \).

2. **Step-V: Constructing the Slave Loops**
   - The control graph for slave loops is constructed from the node set \(\{R, Y, U - R\}\).
   - Error edges in \( E_y^r \) of slave loops are identified similarly to Step-I, using the modified equation:
     \[
     w(y_1, \ldots, y_d) = \min \left\{ \left| \sum_{t=1}^L (r_m - f(y_1, \ldots, y_d)) \right|, \left| \sum_{t=1}^L (r_m \cdot r_n - f(y_1, \ldots, y_d)) \right| \right\}.
     \]
   - This step identifies the sensor node \( \tilde{y}_j \) (and \( \tilde{r}_n \) if the ratio control scheme exists) for the transfer node \( \tilde{r}_m \).
   - Transfer nodes that are not matched with a sensor node are treated as transmit nodes.
   - Based on the identified edges from set \( R \) to set \( Y \), command edges in \( E_u^y \) of slave loops are identified using the same approach as in Step-II and III.

3. **Step-VI: Combining the Control Loops**
   - Master and slave loops are combined using transfer nodes in \( R \).
   - When a sensor node \( \tilde{y}_j \) in the master loop is matched to a transmit node \( \hat{r}_n \), which transfers the control command but does not act as a slave setpoint, we match \( \hat{r}_n \) with a slave setpoint node \( \tilde{r}_m \) with the maximal \( w_{\tilde{r}_m} \) calculated with \( \hat{r}_n \) in all \(\{\hat{r}_n, r_m\}\) pairs.

### Evaluation

#### Accuracy of Graph Construction

Using a 2-hour training data, Table 1 compares the weights of \( e_{u_k y_j} \) (i.e., \( w_{u_k y_j} \)) of SEDS obtained with PLC-Sleuth and other weighting metrics (K2, LL, MDL, and MI), showing:

- PLC-Sleuth accurately identifies SEDS’s command edges \( e_{u y} \) without repeated edges.
- K2 and MDL fail to identify the command edges correctly due to falsely matched edges.
- Although LL and MI successfully match sensor nodes to their corresponding command nodes, they cannot accurately characterize the correlation strength between nodes \( u_1 \) and \( y_1 \).

Further evaluation with varying volumes of training data (Fig. 11) shows that PLC-Sleuth outperforms other weighting schemes, achieving 100% accuracy with a 0.5-hour training log.

#### Intrusion Detection/Localization

We evaluate PLC-Sleuth's intrusion detection/localization under two attack scenarios: command injection attacks and cooperative stealthy attacks. Each control loop is attacked 10 times, resulting in 30 attacks. Additionally, 30 cooperative stealthy attacks are mounted by replaying normal sensor logs.

- **Detection/Localization Accuracy**: Table 2 lists the evaluation results, showing that PLC-Sleuth achieves an average of 98.33%/0.85‰ true/false positive (TP/FP) alarm rate and localizes the forged command with 93.22% (i.e., 55 out of 59) positive predictive value (PPV).

- **Detection Latency**: PLC-Sleuth detects these attacks with a short latency, e.g., {50, 12.5, 10.5}s for attacks in Fig. 12(a), 12(b), and 12(c), respectively. A larger detection threshold increases the detection latency, while a larger detection window decreases it.

### Evaluation with TE Process

To evaluate PLC-Sleuth on a large-scale control system, we implement it on a realistically simulated Tennessee Eastman (TE) process. The TE process contains 12 setpoint variables in \( S \), 41 measurement variables in \( Y \), 12 terminal command variables in \( U \), and 14 transfer variables in \( R \), forming 17 feedback loops.

#### Constructing TE’s Control Graph

- **Data Collection**: Simulating the TE process with MATLAB, we obtained a 72-hour training data logged at 1.8Hz.
- **Accuracy of Graph Construction**: PLC-Sleuth achieves a high accuracy of 95.76% even with a 2-hour training trace, which increases with a larger volume of training data (Fig. 15).

This comprehensive evaluation demonstrates the effectiveness and reliability of PLC-Sleuth in both small and large-scale control systems.