PostgreSQL
递归查询
Objectives
• 语法
• 造数
• 层级查询
• 最短路径查询
递归语法
递归语法
递归语法
造数
https://github.com/digoal/blog/blob/master/201801/20180102_04.md
造数
https://github.com/digoal/blog/blob/master/201801/20180102_04.md
造数
• create table a(
• c1 int, -- 点1
• c2 int, -- 点2
• prop jsonb, -- 点1,2对应的边的属性，使用JSON存储，包括权重，关
系等等。
• primary key (c1,c2) -- 主键
• );
•
• create index idx_a_2 on a(c1, COALESCE(((prop ->> 'weight'::text))::float8, 0));
造数
• vi test.sql
•
• \set id random(1,10000000)
• insert into a select :id, ((width_bucket(:id,1,10000000,2000)-1)*50000 +
(random()*50000)::int) from generate_series(1,1000) on conflict (c1,c2) do
nothing;
• pgbench -M prepared -n -r -P 5 -f ./test.sql -c 50 -j 50 -t 100000
N度搜索
最短路径
总结
• 语法
• 造数
• 层级查询
• 最短路径查询
练习
• 1、设计一张表用来存储传感器上报的日志数据, 字段包括传感器ID, 上报时间, 上报数据
(JSON字段存储).
• 2、写入1000个传感器的测试数据1440条, 总共144万条记录.
• 3、使用一般方法查询每个传感器的最新数据.
• 4、使用递归查询每个传感器的最新数据.
• 5、对比这个CASE中, 使用递归查询的性能相比一般方法的提升, 思考原因是什么?