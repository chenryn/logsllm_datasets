User: 请使用Python或其他编程语言编写一个处理CSV文件的程序，实现读取、处理、修改和导出操作。
Assistant: 以下是Python处理CSV文件的示例程序，实现读取、处理、修改和导出操作：

```python
import csv

# 读取CSV文件
with open('input.csv', 'r', encoding='utf-8') as f:
    reader = csv.reader(f)
    header = next(reader)  # 获取表头
    rows = list(reader)    # 获取数据行

# 处理CSV数据
new_rows = []
for row in rows:
    # 将性别中的1和2转换为男和女
    if row[2] == '1':
        row[2] = '男'
    elif row[2] == '2':
        row[2] = '女'
    new_rows.append(row)

# 修改CSV数据
new_rows[0][1] = '新姓名'

# 导出CSV文件
with open('output.csv', 'w', encoding='utf-8', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(header)     # 写入表头
    writer.writerows(new_rows)  # 写入数据行
```

该示例程序使用Python标准库中的csv模块实现对CSV文件的读取、处理、修改和导出操作。具体步骤如下：

1. 使用open函数打开CSV文件，设置文件打开模式为读取模式（'r'）并指定编码方式（'utf-8'）。
2. 使用csv.reader函数读取CSV文件内容，获取表头和数据行，并存储到变量中。
3. 进行数据处理操作，例如将性别中的1和2转换为男和女，并将处理后的结果存储到新列表中。
4. 对CSV数据进行修改操作，例如将第一行的第二列修改为新名称。
5. 使用open函数打开CSV文件，设置文件打开模式为写入模式（'w'）并指定编码方式（'utf-8'），并设置newline=''参数以避免写入空行。
6. 使用csv.writer函数创建写入器，并依次写入表头和数据行。注意，需使用writerows函数写入多行数据。