### Zero-Effort Attacks
An attack is considered successful if any of the attempts pass the authentication. Table 5 shows the success rate of zero-effort attacks, which directly corresponds to the False Acceptance Rate (FAR) of our mechanism. According to the statistical results shown in Figure 15, most beat-PINs, more than 95%, have lengths between 6 and 10. Therefore, we conducted tests on beat-PINs within this length range. The length of the beat-PIN significantly affects the attacker's success rate. The longer the beat-PIN, the more resistant it is to zero-effort attacks.

Specifically, when the length is 6, the success rate is 8.2%. When the length increases to 8, only one attacker succeeds. Furthermore, with even longer beat-PINs, the success rate drops to 0. Therefore, in practical implementations of Beat-PIN, the system can impose a hard constraint on the minimum valid beat-PIN length, such as 8, to effectively counter zero-effort attacks.

### Shoulder Surfing Attacks
Shoulder surfing [13, 23, 28, 31] is a targeted attack that exploits the visual aspect of a specific user authentication method. There are two types of shoulder surfing attacks: direct observation, where an attacker monitors the authentication sequence, and recording, where the attacker records the authentication process for later analysis. In our experiment, we evaluated the robustness of Beat-PIN against both types of shoulder surfing attacks.

First, we considered the milder form, where attackers learn a beat-PIN through direct visual observation. We grouped 20 volunteers into 10 pairs. Each participant was asked to replay their partner's beat-PIN. One user in each pair acted as the attacker, while the other acted as the legitimate user, and then they switched roles. During the experiment, the legitimate user repeated the same beat-PIN three times with pauses in between. The attacker observed the entire process, acquired the rhythm information, and attempted to reproduce it. Each attacker made three access attempts. An attacker was considered successful if any one of the three trials passed the authentication.

Additionally, we conducted a controlled experiment to illustrate the errors and biases in the experiment, captured by the False Rejection Rate (FRR), i.e., the percentage of legitimate users' beat-PINs that were denied.

Figure 8(a) plots the attacker's performance based on their distance from the legitimate user. Specifically, FAR represents the success rate of shoulder surfing. As shown in the figure, the success rate decreases as the distance increases. This is intuitive, as a shorter distance allows the attacker to observe the legitimate user's login more closely, thus increasing the chance of correctly reproducing the beat-PIN. However, when the distance exceeds 2 meters, this advantage diminishes, indicating that the rhythm is difficult to mimic through vague visual observation.

As a control measurement, we also show the FRR of legitimate users in shoulder surfing attack experiments. The FRR remains consistently low at 2.1% across all distances, as the distance does not affect the classification of legitimate beat-PINs. This result indicates that the experiment imposes limited errors and biases on the measurement of the attacker's performance. These errors and biases mainly come from the error in our proposed vector comparison-based classification and the inconsistency in the legitimate user's beat-PIN entry across different trials.

Figure 8(b) illustrates the impact of beat-PIN length on shoulder surfing attacks. Similar to zero-effort attacks, it is more difficult to compromise a beat-PIN with a larger length. The FRR is also provided for control measurement, ranging from 3.2% for a beat-PIN length of 6 to 1.8% for a length of 10. This complies with the observation from Figure 8(a) that errors and biases in our experiments are well confined. Additionally, FRR slightly decreases as the beat-PIN length increases, as a longer beat-PIN has richer features, reducing the chance of misclassification.

The resistance of Beat-PIN to type-II shoulder surfing attacks is discussed in Appendix C.

### Statistical Attacks
This type of attacker uses knowledge obtained from the statistics of a group of users to generate authentication attempts. The basic approach is to estimate the distribution of features from a group of users and then use the most probable feature values to create forgeries. In our case, we used all samples from the 119 subjects collected in our phase-I user study as input, simulating the worst-case scenario where the attacker has full knowledge of the population's statistics.

A forged beat-PIN under statistical attacks is generated as follows: First, the beat-PIN length is randomly chosen based on the distribution in Figure 15. Second, for each beat-duration and space-duration, the value is randomly chosen following the distributions in Figures 16(c) and 16(b), respectively. We generated 10,000 forged beat-PINs to attack all 119 legitimate ones. Performance against statistical attacks is given in Figure 9, showing the tuning parameters of the vector comparison classifier. The red dashed line represents the points where FAR equals FRR. The crossover of the red dashed line and the FAR-FRR curve is the Equal Error Rate (EER), which is 9.6%. This means that when the attacker's success rate is 9.6%, the chance that a legitimate user is blocked is also 9.6%.

Although our system is slightly more vulnerable to statistical attacks than zero-effort attacks, the attacker's success rate is still within an acceptable range. It is worth noting that even recently proposed touch dynamics plus hand geometry-based authentication schemes [29] have an EER of about 13%, which is higher than ours.

From the above experimental results, we observe that Beat-PIN is most robust against zero-effort attacks. An adversary benefits marginally from mimicking the legitimate user's login patterns via visual observation or fabricating a synthetic one via statistical analysis.

### Usability
In addition to security, usability is another critical criterion in evaluating the performance of a user authentication mechanism. We measure the usability of Beat-PIN in terms of time consumption, energy consumption, impact of user motions, and memorability (Appendix D). A comprehensive survey result based on volunteer feedback is presented in Appendix E.

#### Enrollment Time and Login Time
We examined the enrollment time and login time required for Beat-PIN. The enrollment time is the total duration for the user to provide training samples and for the system to derive the classifier, while the login time is the total duration for the user to enter a test beat-PIN and for the system to make an authentication decision. These two parameters directly determine the convenience of using Beat-PIN.

Figures 10(a) and 10(b) depict the distribution of enrollment time and login time, respectively, based on our dataset. The enrollment time ranges from 5.0 seconds to 23.1 seconds, with an average of 12.3 seconds. Ninety percent of the collected beat-PINs have an enrollment time shorter than 17.4 seconds. The login time ranges from 0.6 seconds to 3.6 seconds, with an average of 1.7 seconds. Ninety percent of the collected beat-PINs have a login time shorter than 2.6 seconds. Thus, the most time-consuming part is the enrollment stage, but it can be completed relatively quickly.

We compared the time consumption of Beat-PIN with other recently proposed authentication schemes, including "pattern" [16], "gesture" [35], "graphical password" [15], "touch dynamics" [30], and "touch dynamics + hand geometry" [29]. Beat-PIN has the lowest average enrollment time because it only requires 7 training samples. It ranks third in terms of login time and is much faster than "pattern," "gesture," and "graphical password" based authentications. This is because these schemes use computationally complex algorithms like neural networks and random forests, which are time-consuming in both training and testing.

In conclusion, Beat-PIN is time-efficient during both the enrollment and login stages.

#### Energy Consumption
Wearable devices typically have a much shorter battery life compared to regular mobile devices. For example, the Apple Watch Series 3 has a battery life of about 18 hours after an overnight charge under normal use, including 90 time checks, 90 notifications, 45 minutes of app use, and a 30-minute workout with music playback via Bluetooth. Therefore, designing energy-efficient authentication for wearable devices is desirable, especially since users may access their wearables dozens of times daily.

In our in-field experiments, we extensively tested the energy consumption of Beat-PIN to validate its usability. Such evaluations are less common in existing works on authentication design for regular mobile devices, as their batteries can last for several days, making energy consumption a less critical issue.

Due to the lack of software-based approaches for wearables, this kind of study has rarely been conducted [14, 17, 24, 25, 32, 34, 36]. To address this, we measured the precise power consumption of our system using the Monsoon power monitor [7]. To facilitate the measurement, we carved out a compatible battery interface circuit from the same smartwatch and used it as an adapter between the watch and the power monitor. During the measurement, we kept other components offline (e.g., Wi-Fi and Bluetooth).

Figure 11 shows the power measurement setup for a Moto 360 smartwatch.