standard deviation 0.00577. When we say “diﬀerent”, we
mean Gabor bit sequences in each pair correspond to speckle
images taken from diﬀerent regions of either the same pa-
per or diﬀerent paper. The least FHD value is 0.47. Each
Speckle 1
Speckle 2
Speckle 3
Speckle 4
Level 1 Level 2 Level 3 Level 4 Level 5
0.4573
0.4789
0.4649
0.4844
0.4691
0.4941
0.4888
0.4657
0.4737
0.4803
0.4662
0.4876
0.4625
0.4686
0.4520
0.4690
0.4591
0.4410
0.4706
0.4608
Table 2: Fractional Hamming Distance of candidate speckle with
diﬀerent speckles across various levels.
OrientationsLevels103Figure 5: Fractional Hamming Distance of 200 “like” speckle bits
with mean = 0.16751 and standard deviation = 0.05948.
Figure 7: Singular value diﬀerence as the Gabor binary matrix
is perturbed.
Singular value perturbation
3.2.1
We empirically examine the singular values of a Gabor
binary matrix SG as it is varied or perturbed. We consider
one Gabor binary matrix SG of size 512 × 384, and perturb
the matrix randomly by modifying 10i bits in each step i of
the experiment. In each step i, we perturb (ﬂip) 10 × i bits,
where i is varied from 1000 to 196000. We conduct 20 trials
in each step, compute mean and standard deviation and plot
the results with error bars. Figure 7 shows the diﬀerence in
the Euclidean distance between singular values of SG and
the singular values of the perturbed SG, as the number of
bits are modiﬁed. There is almost a linear increase in the
diﬀerence of singular values as the perturbation of SG in-
creases. If the perturbation is small then the singular value
diﬀerence is small, and if the perturbation is large, then the
singular value diﬀerence is large. The diﬀerence in singular
values of “same” Gabor bit sequences tend to be small as the
change in bits is small (2000 bits). While the diﬀerence in
singular values of “diﬀerent” Gabor bit sequences tend to be
large as the change in bits is large (20000 bits). Based on
these results, we can distinguish ﬁngerprints of “same” and
“diﬀerent” speckles and we show the detailed results in Sec-
tion 5. Another important property that needs to be fulﬁlled
is that the ﬁngerprint has to be compact. To achieve this
property, we analyze the scree plots of the singular values of
large number of Gabor binary matrices. (Scree plot helps to
analyze the relative importance of the singular values and a
sharp drop in the plot signals that subsequent singular val-
ues can be ignored.) Figure 8, shows the singular values of
one representative Gabor binary matrix, and it is clear from
the scree plot that the “energy” or magnitude of singular val-
ues is clustered in the ﬁrst few singular values. We choose
the 64 and 128 largest singular values as the ﬁngerprints of
the speckle pattern. These 64 and 128 singular values hold
88% and 96% of the magnitude of the entire set of singular
values respectively. The size of the ﬁngerprint would be 768
digits if we use 128 singular values (using 6 digits of each
singular value).
The evaluation of ﬁngerprints across various types of pa-
per are provided in Section 5.
Figure 6: The probability of a bit being set in a Gabor bit se-
quence of the paper speckle image.
eigenvalues of SGST
G are real and well conditioned. Pertur-
bations in SGST
G lead to perturbations of the same size in its
eigenvalues (The proof is due to Stewart [26] and Papadim-
itriou et. al. [21] and states that if some large k singular
values are suﬃciently away from rest of the singular val-
ues, then the subspace spanned by the singular vectors are
preserved if a small perturbation is added to SG.)
Let S1G and S2G be Gabor bit sequences of the same re-
gion (where S1G is the Gabor bit sequence of the speckle
image extracted in the ﬁrst trial and S2G is the Gabor bit
sequence of the same region extracted in the next trial) and
S3G be a Gabor bit sequence of a diﬀerent region. When we
compare S1G and S2G, we know that the Fractional Ham-
ming Distance (FHD) between these are small (less than 4%
of the total number of bits) as evidenced from the analysis
of the FHDs Gabor bit sequences of “same” speckles. Hence,
the diﬀerence in singular values of S1G and S2G would be
a small number, indicating that S1G and S2G are the same
speckle pattern. When we compare S1G and S3G (or S2G
and S3G), their FHDs would diﬀer by a large amount (more
than 20%) as evidenced from the analysis of FHDs of Gabor
bit sequences of “diﬀerent” speckles. Hence, the diﬀerence in
singular values of S1G and S3G would be large, indicating
that these are not the same speckles.
Next, we discuss the variation of singular values of SG as
the number of bits are varied.
010203040020406080100120Bits ( in thousands)Singular value difference (Euclidean distance)104Figure 8: Scree plot of singular values. The ﬁrst 64 and 128
singular values, which are inside the rectangles, contain 88% and
96% of the magnitude of the set of singular values respectively.
4.
IMPLEMENTATION
We have implemented PaperSpeckle on two kinds of setup.
One is a desktop/laptop attached with a USB microscope
and another is a Google Nexus One mobile phone with a
microscope attached to its camera.
In the laptop version we have tested the system with two
types of microscopes: Digital Blue QX5 TMand PC Gears
AM2011 TM. The detailed evaluation of speckles based on
this system are presented in Section 5.
For the mobile phone version, we developed our applica-
tion on the Android 2.1 platform on the Nexus One. We
use standard image capture routines to capture the speckle
patterns from the mobile device camera. The mobile phone
camera is attached with a consumer grade microscope (Car-
son MM-200) that has a variable magniﬁcation from 10x to
100x, to extract speckles. (We ﬁxed our resolution to 100x).
These portable microscopes are low cost devices typically
ranging from anywhere between $10 to $50. The ﬁngerprint
generation algorithm consists of two mathematically heavy
operations: (a) computing Gabor transforms; (b) computing
SVD of a large matrix. We implemented a lot of speciﬁc op-
timizations to reduce the compute time of these operations
on the Android platform. Speciﬁcally, Android is relatively
slow for ﬂoating point operations in comparison to integer
operations; many of the previous Android phone hardware
(1.5,1.6 phones) did not even support a hardware ﬂoating
point unit. We implemented a lightweight ﬂoating point li-
brary using integer based calculations. While our initial un-
optimized version took over 180 seconds of processing time
to compute a ﬁngerprint per image, our optimizations re-
duced the compute time to less than 5 seconds per image. In
addition, our code can be easily ported to any Java enabled
phone with an inbuilt camera. To support applications in
emerging regions, making the system work on low-end mo-
bile devices is essential.
Figure 9a shows the speckle pattern with a menu to gen-
erate the ﬁngerprint (menu option: Compute Code) and
the corresponding barcode (menu option: Build Barcode).
Figure 9b shows the QR code with the corresponding ﬁn-
gerprint. This QR code can be scanned using any stan-
dard barcode scanner application on any cellphone to reveal
the ﬁngerprint. This ﬁngerprint is compared for a match
(a)
(b)
Figure 9: (a) A speckle image taken on the cellphone and the
ﬁngerprint of the speckle image; menu options: i) Compute
Code, or ii) Build Barcode. (b) QR code of the ﬁngerprint
which is shown on the right side.
with the candidate speckle ﬁngerprint that is computed af-
ter reading the speckle pattern. Our implementation can be
used for: (a) generating ﬁngerprints (2D barcodes) of new
speckle images; (b) comparing a ﬁngerprint of a new speckle
pattern with a database ﬁngerprints of speckle patterns; (c)
reading a new speckle pattern and a barcode separately and
comparing the ﬁngerprint of the speckle pattern and the
barcode to see if they both match.
The mobile phone is attached with a microscope with a
diﬀerent magniﬁcation (100x) and ﬁeld of view than the mi-
croscope attached to the laptop. So, the ﬁngerprints gener-
ated by this setup would be diﬀerent than the laptop setup.
The microscopes used with the laptop can be varied to ex-
tract speckles at 100x magniﬁcation, and we use a reduced
ﬁeld of view that is equal in dimensions to the ﬁeld of view
of the mobile microscope, to obtain the same ﬁngerprint as
the mobile version.
5. EVALUATION
We evaluate the ﬁngerprints across diﬀerent types of paper
in both ideal and non-ideal conditions.
We considered four completely diﬀerent categories of pa-
per in our analysis: (a) Letter size print paper; (b) thin note-
book style paper (ruled notebooks); (c) Thick print poster-
style paper; (d) brown-colored binding/package paper. Also,
we tested our results on three diﬀerent microscopes; two by
Digital BlueTMand one by Dino-LiteTMAM2011. The rea-
son for considering diﬀerent microscopes is to ensure better
validity of our results across diﬀerent microscopes. In this
section, we provide important evaluations that stress test
the ﬁngerprint under varied conditions. Due to space lim-
itations, we have only presented the results for the ﬁnger-
prints that represent the 64 singular values. The results for
ﬁngerprints that represent 128 singular values are similar to
0100200300400500600051015202530CountSingular value12864105the ﬁngerprints that represent 64 singular values. The eval-
uations shown here are done on the laptop version of the
system (with 200x magniﬁcation). We have also evaluated
mobile phone version on the four diﬀerent types of paper
(which are stated above) and have found that the results
are similar to the laptop version.
5.1 Ideal conditions
In ideal conditions, where the paper was not tampered, we
extracted 300 speckles from each type of paper, totalling up
to 1200 diﬀerent speckles. To analyze the variation in ﬁn-
gerprints of speckles of diﬀerent paper (or region), we made
(cid:1) = 44850 comparisons. To analyze the variation in ﬁn-
(cid:0)300
2
gerprints of “same” speckles , we made 300 pairs of com-
parisons of each type of speckle. The results are presented
in Figures 10a, 10c, 10e. In each ﬁgure, the distribution to
the left represents the diﬀerence in the Euclidean distance of
ﬁngerprints of “same” speckles. “Same” speckle means pairs
of speckles are compared, where each pair represents two
speckle patterns that is extracted from the same region of
the paper (multiple measurement of the same speckle pat-
tern). In each ﬁgure, the distribution to the left represents
the diﬀerence in the Euclidean distance of ﬁngerprints of
“diﬀerent” speckles. “Diﬀerent” speckle means pairwise com-
parison of speckle patterns extracted from regions of diﬀer-
ent papers. The two distributions are well separated and any
value that is in between the two distributions (greater than
the maximum of the left distribution and lesser than the
minimum of the right distribution) can be used as a thresh-
old to provide no false positives in identifying or matching
two ﬁngerprints. The mean for “same” ﬁngerprints across
various types of paper is around 1.5 and the mean for “dif-
ferent” ﬁngerprints across various types of paper is around
85. Based on our analysis in Section 3.2, we know that if the
diﬀerence (of Euclidean distance of singular values) between
a Gabor binary matrix and a randomly perturbed Gabor
binary matrix is around 1.5, then the number of bits they
disagree is less than 1000. If the diﬀerence is above 85, then
the number of bits that they disagree is more than 20000.
By applying the same analysis to this context, we could say
that for the mean of two distributions to meet at least 19000
bits of a Gabor binary matrix have to be modiﬁed. Simi-
larly, for a single false positive to occur, at least 9200 bits
of a Gabor binary matrix have to be modiﬁed.
5.2 Non-ideal conditions
To simulate non-ideal conditions, we tampered the paper
in four ways: crumpling, printing or scribbling, soaking in
water and aging.
5.2.1 Crumpling
We extracted speckles from 50 pieces of paper and then
crumpled each paper thoroughly. Since, the scale at which
we operate is around 1 micron, most of the region of inter-
est was not tampered. On an average, 5% of each of the
speckle images were modiﬁed. This statistic was found out
by extracting the 50 speckles again from the same regions
and comparing it with the original 50 speckles. Figure 10b,
shows the result of comparing “same” speckle on the left and
“diﬀerent” speckle on the right. As we can observe, the two
distributions are well separated and the ﬁngerprints can be
distinguished with no false positives. For a single false pos-
itive to occur, at least 12000 bits of a Gabor binary matrix
Soaking in water
need to be modiﬁed. This shows that PaperSpeckle is able
to distinguish ﬁngerprints even when the paper is crumpled.
5.2.2 Printing
Once a speckle is extracted from a region, if the entire
region is scribbled or printed, the speckle from the same re-
gion would be diﬀerent when speckle is extracted in the next
trial. Ink on the surface of the paper scatters the light in
unexpected ways and changes the original speckle pattern.
(On the other hand speckle pattern can be extracted after
the text is printed or written). In spite of this limitation,
our approach sustains printing or scribbling up to 6% to the
speckle region. We extracted speckles from 50 papers and
then printed or scribbled near the region of extraction. On
an average, 6% of each of the speckles were modiﬁed. Fig-
ure 10d, shows the results of comparing “same” ﬁngerprints
(on the left) and “diﬀerent” ﬁngerprints (on the right). The
two distributions are well separated and the ﬁngerprints can
be distinguished with no false positives. For a single false
positive to occur, the at least 7000 bits of a Gabor binary
matrix need to be modiﬁed. This shows the even if there is
printing or scribbling on the paper, PaperSpeckle is able to