which we call DIV, for “double IV”. DIV takes an IV-based
MAC ivM = (𝒦, Mac, Vrfy) and an IV-based encryption
scheme ivE = (𝒦, Enc, Dec), and produces a scheme AEDIV =
(𝒦2, DIV.Enc, DIV.Dec), defined as follows:
∙ DIV.Enc𝑘𝑀 ,𝑘𝐸 (𝐼𝑉, 𝑚) returns 𝜏 ← Mac𝑘𝑀(𝐼𝑉, 𝑚) and
𝑐 ← Enc𝑘𝐸(𝜏, (𝐼𝑉, 𝑚)).
∙ DIV.Dec𝑘𝑀 ,𝑘𝐸(𝜏, 𝑐) computes (𝐼𝑉, 𝑚) ← Dec𝑘𝐸(𝜏, 𝑐) and
returns 𝑚 if Vrfy𝑘𝑀
(𝐼𝑉, 𝑚, 𝜏 ) succeeds. The error sym-
bol ⊥ is returned otherwise.
The differences with SIV are:
∙ the use of an IV-based MAC, which offers the possibility
to perform re-keying already in the MAC part of the
computation (as in PSV-MAC for instance), and
∙ the encryption of the IV used in the MAC, which
mitigates the leakage matching attacks described for
SIV.
In terms of efficiency, and compared to SIV, DIV requires
to encrypt one more block (the IV), but does not increase
the size of the ciphertext. We show, in the full version of this
paper, that AEDIV is a MR AE as long as (1) ivM is chosen-IV
pseudorandom (2) ivE is IV-sec-secure [10].
When considering the relative costs of F and F*, the differ-
ence of efficiency becomes considerably more important. If
we assume that F has a cost 𝑎 and F* a cost 𝑏, then the DIV
composition applied to PSV-MAC and PSV-ENC comes at
a cost of (3ℓ + 2)𝑎 + 2𝑏 for a message of ℓ blocks, and the
SIV mode requires (2ℓ + 1)𝑏 with each block protected. If
we assume that 𝑏 = 100𝑎 (which is consistent with the table
given in [37]), then the DIV composition is already cheaper
for a single message block and, for long messages, the DIV
composition will be ≈ 67 times cheaper.
Given that PSV-MAC and PSV-ENC satisfy these security
notions and are LR taken individually, one may hope that
PSV-AE = DIV(PSV-MAC, PSV-ENC) = (𝒦2, PSVAEnc, PSVADec)
would offer CIML security. This is unfortunately not the case.
A CIML attacker can proceed as follows. First, select a
random 𝐼𝑉 , and query PSVAEnc𝑘𝑀 ,𝑘𝐸 (𝐼𝑉, 𝑚) with various
messages of ℓ > 1 blocks. Keeping 𝐼𝑉 constant ensures
that the same 𝑘0 ← F*
𝑘𝑀 (𝐼𝑉 ) is computed every time, and
to mount a DPA attack that recovers 𝑘0 when F𝑘0 (𝑚1) is
computed with the first block of each message.
The rest of the attack is similar to the one against SIV. Let
(𝜏, 𝐶) ← PSVAEnc𝑘𝑀 ,𝑘𝐸 (𝐼𝑉, 𝑚) for the same 𝐼𝑉 as above
and a chosen ℓ block message 𝑚. The adversary can (i) select
ℓ − 1 blocks 𝑚*
ℓ−1 that were not part of a previous
encryption query, (ii) define 𝑘*
𝑖 =
𝑖 ) for 𝑖 ∈ [1, 𝑙−1], (iii) compute 𝑚*
𝐹𝑘*
(𝜏 ). This
guarantees that (𝐼𝑉, 𝑚) and (𝐼𝑉, 𝑚* = 𝑚*
ℓ ) have
the same MAC 𝜏 . Now, the adversary can define 𝐶* = 𝐶 ⊕
(𝐼𝑉 ‖𝑚) ⊕ (𝐼𝑉 ‖𝑚*) and return (𝜏, 𝐶*) as a fresh ciphertext
that decrypts to 𝑚*, hence violating the CIML security.
0 = 𝑘0, and compute 𝑘*
ℓ = 𝐹
1‖ . . .‖𝑚*
1,··· , 𝑚*
−1
𝑘′
ℓ−1
(𝑚*
𝑖−1
In the full version of this paper, we additionally show that
the alternative LR MAC proposed in [37] could be broken
by similar (though slightly more elaborate) attacks [10].
These negative results for CIML security lead us to the
design of new schemes, which we present and analyze in the
following sections.
5 DIGEST, TAG AND ENCRYPT
In this section, we build a MR AE scheme that provably
achieves CIML security in a very permissive leakage model,
which we call the unbounded leakage model. As previously
mentioned, the confidentiality analysis with leakage is de-
ferred to Section 7 (and will have to rely on a less permissive
leakage assumption).
Conference’17, July 2017, Washington, DC, USA
5.1 Specification of DTE
The attacks against the CIML property in the previous sec-
tion essentially result from the fact that revealing a (long-term
or ephemeral) key is sufficient to break the collision resis-
tance of the tags. Hence, a natural way to address them is to
combine PSV-ENC with a modified IV-based MAC that first
hashes the IV with the plaintext and then runs a leak-free
PRF on the hash value to compute the tag 𝜏 (see Figure 2,
where long-term secrets are in red, ephemeral ones in orange
and public values in green).
Figure 2: DTE leakage-resilient AE: Authentication
part.
Then, PSV-ENC encrypts both the IV and the plaintext using
the tag as its own IV (see Figure 3). As a result our scheme
produces a digest from its input, generates the tag from it,
and encrypts, hence the name DTE.
Note that our presentation explicitly uses a hash function
here, because we need collision resistance and preimage re-
sistance. However, from an implementation point of view, it
is not necessary to use a different functionality, and a hash
function based on the block cipher F could be used.
Figure 3: DTE leakage-resilient AE: Encryption part
(PSV-ENC).
The full description of DTE is given in Figure 4. As before,
the values 𝑝𝐴 and 𝑝𝐵 are two public distinct constants in
ℬ = {0, 1}𝑛. The key 𝑘 is drawn at random over 𝒦 as usual.
In order to stress that the IV used in the MAC part of the
scheme is not public, we refer to it with the letter 𝑟.
We point that DTE is the result of the DIV composition
(see Section 4.2) applied to the IV-based MAC of Figure 2
and PSV-ENC, with the important difference that the same
Francesco Berti, Fran¸cois Koeune, Olivier Pereira,
Thomas Peters, Fran¸cois-Xavier Standaert.
DTE
Enc𝑘(𝑟, 𝑚), where 𝑚 = (𝑚1, 𝑚2, . . . , 𝑚ℓ):
𝑘(ℎ)
𝑘(𝜏 )
∙ ℎ ← H(𝑟||𝑚)
∙ 𝜏 ← F*
∙ 𝑘0 ← F*
∙ 𝑐0 ← F𝑘0 (𝑝𝐵) ⊕ 𝑟
∙ 𝑘𝑖 ← F𝑘𝑖−1 (𝑝𝐴), 𝑐𝑖 ← F𝑘𝑖 (𝑝𝐵) ⊕ 𝑚𝑖 ∀𝑖 ∈ [1, ℓ]
∙ return 𝐶 ← (𝜏, 𝑐0, 𝑐1, 𝑐2, . . . , 𝑐ℓ)
// digest
// tag
// ...and encrypt
// 𝑦𝑖 := F𝑘𝑖 (𝑝𝐵)
Dec𝑘(𝐶), where 𝐶 = (𝜏, 𝑐0, 𝑐1, 𝑐2, . . . , 𝑐ℓ):
𝑘(𝜏 )
∙ 𝑘0 ← F*
∙ 𝑟 ← F𝑘0 (𝑝𝐵) ⊕ 𝑐0
∙ 𝑘𝑖 ← F𝑘𝑖−1 (𝑝𝐴), 𝑚𝑖 ← F𝑘𝑖 (𝑝𝐵) ⊕ 𝑐𝑖 ∀𝑖 ∈ [1, ℓ]
∙ ℎ ← H(𝑟||𝑚)
∙ if 𝜏 = F*
𝑘(ℎ) return (𝑚1, ..., 𝑚ℓ), else return ⊥.
Figure 4: DTE - Full description.
key 𝑘 is used in the authentication part as well as in the
encryption part (which either reduces the length of the key,
or avoids a key expansion step).
5.2 Efficiency of DTE
Ignoring the cost of the protection against leakages, the com-
putational costs of DTE are increased by 50% compared to
the original MR AE SIV scheme of Rogaway and Schrimpton:
both perform two passes on the message, but DTE’s itera-
tions are slightly more expensive due to the leakage-resilient
encryption, which requires two block cipher executions per
message block instead of one. However, as soon as leakage
is included in the game, protecting the SIV MR AE scheme
would require to have all block cipher executions equally well
protected (i.e., as F*), since they all compute with the same
long-term key. Denoting the overhead factor of F* compared
to F by 𝛼 and the number of blocks to be encrypted by ℓ,
this roughly implies an approximate cost of 2𝛼 + 3ℓ for DTE
and 2𝛼ℓ for SIV. This means that the encryption cost of
DTE is favorable against the one of SIV as soon as we need
to encrypt ℓ ≥ 2 message blocks and 𝛼 ≥ 3, and that the
gain will tend to 2𝛼/3 when ℓ increases. So, given that 𝛼
typically ranges from hundreds to thousands (as discussed in
the introduction), the performance of an implementation of
DTE is expected to gradually outperform SIV by two or three
orders of magnitude when the size of the messages increases,
if security against side-channel attacks has to be guaranteed.
Similar improvement factors can be obtained when compar-
ing with recent improvements/refinements on the original
SIV scheme, and similar gains will also be obtained for the
DCE scheme that will be discussed in the next section.
5.3 Misuse resistance without leakage
As a first security analysis we show that DTE is a MR AE,
in the sense of Definition 2.9.
Theorem 5.1. Let H : {0, 1}𝑛 × {0, 1}⋆ → {0, 1}𝑛 be
a (0, 𝑡1, 𝜀𝑐𝑟)-collision resistant and (0, 𝑡1, 𝜀𝑝𝑟)-range-oriented
preimage resistant hash function. Let F⋆ : {0, 1}𝑛×{0, 1}𝑛 →
Ciphertext Integrity with Misuse and Leakage
Conference’17, July 2017, Washington, DC, USA
{0, 1}𝑛 be a (2𝑞, 𝑡1, 𝜀F⋆ )-pseudorandom function and F : {0, 1}𝑛×
{0, 1}𝑛 → {0, 1}𝑛 be a (2, 𝑡2, 𝜀F)-pseudorandom function.
Then the DTE authenticated encryption scheme which en-
crypts ℓ-block messages is (𝑞, 𝑡, 𝜀)-MR as long as 𝑡 ≤ min{𝑡1−
𝑞(𝑡H +(2ℓ+1)𝑡F), 𝑡2−𝑞𝑒(𝑡H +(2ℓ+1)𝑡F)} with 0 ≤ 𝑞𝑒 +𝑞𝑑 ≤ 𝑞,
where 𝑞𝑒 (resp. 𝑞𝑑) is the number of encryption (resp. decryp-
tion) queries, where 𝑡H and 𝑡F are the time needed to evaluate
H and F, and we have
𝜀 ≤ 𝜀F⋆ + 𝜀𝑐𝑟 + 2𝑞 · 𝜀𝑝𝑟 + 𝑞(ℓ + 1) · 𝜀F
𝑒 + 𝑞2
+(︀𝑞𝑑 + 𝑞2
𝑒 (ℓ + 1)2)︀ · 2
−𝑛.
(1)
The guideline of the proof is as follows: first, we start by
arguing that all decryption queries can be answered by ⊥.
Then, proceeding block by block, we gradually show that the
answers to encryption queries can be replaced by random
outputs.
The easiest transition relies on the pseudorandomness of
F*, which is replaced by a truly random function f. There-
from, we can move to show the invalidity of the first fresh
decryption query 𝐶 = (𝜏, 𝑐), where 𝑐 = (𝑐0, 𝑐1, . . . , 𝑐ℓ). Since
(𝜏, 𝑐) is fresh, we will see that the decrypted tuple (𝑟, 𝑚 =
(𝑚1, . . . , 𝑚ℓ)) is fresh. Thereby, the collision resistance en-
sures that ℎ = H(𝑟‖𝑚) is not the output of any previous
evaluation of H during the encryption queries. If ℎ never
appeared until the first decryption query, then f(ℎ) ̸= 𝜏 ex-
cept by chance. However, we must also consider the event
by which ℎ = 𝜏′, where 𝜏′ is the returned tag associated
to a previous fresh encryption query. Hence the need of the
range-oriented preimage resistance of H since 𝜏′ = 𝑓 (ℎ′) is
random over {0, 1}𝑛, for some ℎ′ ̸= ℎ. As a side note on the
proof, the unlikelihood of ℎ = 𝜏′ also plays an important
role to ensure the random-looking of the ciphertexts. Indeed,
if the adversary managed to query an encryption on the a
pair (𝑟, 𝑚) such that 𝜏′ = H(𝑟‖𝑚), the answer (𝜏, 𝑐) of the
(modified) encryption oracle would reveal the ephemeral key
𝑘′
0 = 𝜏 = 𝑓 (ℎ′) of the ciphertext containing the tag 𝜏′.
The proof of Theorem 5.1 is available in the full version of
the paper [10].
5.4 The Unbounded Leakage Model
Before turning to our proof of the CIML security of DTE,
we need to introduce a leakage model. For this proof, we can
adopt a very permissive leakage model, which we call the
unbounded leakage model.
Definition 5.2. An implementation of a scheme with leak-
age function L is said to offer a security property in the
unbounded leakage model if that property is satisfied even if L
yields all the internal states produced during each execution
of the scheme, including all keys and random coins, at the
exclusion of the internal state of leak-free components if there
are any.
In the case of DTE, this means that, on each encryption
query, everything is leaked except for the long-term key 𝑘
used by the leak-free component. Or, in an equivalent way,
and in the context of CIML security, we can just assume
that 𝑘0 is leaked, since 𝑟 and 𝑚 are known to the adversary
anyway, and all the internal variables can be recomputed
from 𝑘0. Indeed, given 𝑘0 the adversary is able to derive all
the ephemeral keys (𝑘1, . . . , 𝑘ℓ) used during each encryption
query, which in turns gives him all the (𝑦0, 𝑦1, . . . , 𝑦ℓ) values
from Fig. 3.
5.5 CIML Security of DTE
We now prove that DTE satisfies the CIML notion in the
unbounded leagage model.
Theorem 5.3. Let H : {0, 1}𝑛 × {0, 1}⋆ → {0, 1}𝑛 be
a (0, 𝑡′, 𝜀𝑐𝑟)-collision resistant and (0, 𝑡′, 𝜀𝑝𝑟)-range-oriented
preimage resistant hash function. Let F* : {0, 1}𝑛×{0, 1}𝑛 →
{0, 1}𝑛 be a (2𝑞 + 2, 𝑡′, 𝜀F* )-pseudorandom function. Then