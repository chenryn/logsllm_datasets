expense of larger performance overhead. The idea is to em-
bed the location of a node into its id such that a compro-
mised node cannot lie about its location. The scheme makes
the security assumption that a sensor node will not be com-
promised before it obtains its coordinate through GPS after
its deployment. Given this assumption, we can adapt, for in-
stance, the Blundo scheme [4] in the following way. First,
the key server pre-loads every node u with a bivariate poly-
nomial f(x, y) of degree-k for both x and y (not f(u, y), as
in the original scheme). After its deployment, node u gener-
ates a new id u(cid:1)
, which combines its id u and its coordinate
(e.g., by simply concatenating them or hashing the concate-
nation into a shorter id). Then node u evaluates f(u(cid:1), y) it-
self, and then erases f(x, y). Thus, when it is compromised
later, it will not reveal any information about the polynomi-
als which other nodes possess. When two nodes want to es-
tablish a pairwise key, they have to provide to each other the
authentic information of their locations. Based on the coor-
dinates and as well as the default transmission range, they
will know the minimum number of hops between them. Fur-
thermore, if the base station broadcasts its own coordinate,
every node will know roughly the direction of the path it is
located on. As a result, the adversary cannot use the a com-
promised node that is located between a node u and the base
station or is more than t hops away from node u as a lower
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
association of node u. To this end, a compromised node nor-
mally can only deceive one noncompromised node; there-
fore, the upper bound is t or slightly larger than t.
Note that although this variation is very effective at pre-
venting false data injection attacks, we do not consider t as
the upper bound for our scheme mainly due to performance
considerations. First, a node u needs to store k2 + 1 coefﬁ-
cients for f(x, y). Second, it needs to compute k2+k modu-
lar multiplications. Third, the exchange of coordinates may
consume a nontrivial portion of the bandwidth. Therefore,
to trade off security for performance, we only consider this
in the least resource constrained case.
3.3. Other Security Issues
A compromised yet undetected node can always drop or
alter every packet going through it. There is no way to pre-
vent it from doing so. The only solution is to detect the
compromised node and then bypass it. Compromise detec-
tion in a sensor network is a very difﬁcult issue, because a
sensor network is usually deployed in an unattended envi-
ronment. Due to the difﬁculty of compromise detection, the
security bottom line of a security protocol for sensor net-
works is that the impact of a node compromise must be lo-
calized so as to provide the basis for later compromise de-
tection. If a compromised node can only mount such attacks
on its own behalf and the attacks can only occur around its
initial deployment location, the node will take a great risk
of being detected. Our scheme does meet the above secu-
rity bottom line. Recall that our scheme starts with a node
initialization and deployment process. After this phase, ev-
ery node knows the authentic set of its direct neighbors and
establishes a pairwise key with each of them, and it will
only accept packets authenticated by one of the nodes from
its neighbor set. This implies that a compromised node can
only mount an attack locally and on its own behalf. Note
that, on the other hand, since the primary design goal of our
scheme is to prevent false data injection attacks, the above
attacks actually do not conﬂict with our design goal because
these attacks also lead to early packet dropping.
4. Performance Evaluation
In this section, we analyze the computational and com-
munication overheads of our basic scheme.
4.1. Computational Cost
The computational overhead of our scheme arises mostly
due to two operations – establishing pairwise keys and re-
port authentication.
Establishing Pairwise Keys In our scheme, two association
nodes need to establish a multi-hop pairwise key on the ﬂy,
based on one of the id-based schemes [3, 4, 6, 14, 15]. All
these schemes have similar computational overhead. For ex-
ample, in the Blundo scheme, a node needs to compute k
modular multiplications and k modular additions for a poly-
nomial of degree k. Let k = 100, and the size of a secret
key be 64 bits and the size of a node id be 16-bits (assum-
ing there are no more than 64K sensor nodes in a network).
The cost of computing a pairwise key is about 1/10000 of
that of creating a RSA signature, which is of the same or-
der as that of an AES encryption. Moreover, in our scheme
normally a cluster node computes one pairwise key and an
en-route node computes two. In the case of node failure or
a path change, a node has to compute a pairwise key shared
with a new node; however, this situation does not happen
very frequently.
Report Authentication In our scheme, a cluster node com-
putes three MACs for one report. One uses its individual key
as the MAC key, the second uses a pairwise key shared with
its association node as the MAC key, and the third uses the
pairwise key shared with its cluster head as the MAC key.
An en-route node normally computes four MACs — it ver-
iﬁes one pairwise MAC (over E) from its lower association
and generates one pairwise MAC (over E) for its upper as-
sociation if it is more than t hops away from BS; it veriﬁes
one MAC (over R) from its downstream neighbor and gen-
erates one MAC (over R) for its upstream neighbor. Note
that although in our scheme a forwarding node computes
two more MACs (over E) than that in a hop-by-hop au-
thentication scheme [19], the security it achieves is much
stronger. Since the energy for computing a MAC is about
the same as that for transmitting one byte [18], by ﬁltering
false data as early as possible, our scheme reduces the over-
all energy expenditure of a node even though it entails ad-
ditional computational costs.
4.2. Communication Cost
The communication overhead of our scheme arises from
two sources. First, every authentic report contains one com-
pressed MAC and t + 1 pairwise MACs. In practice, we can
choose a larger size for an individual MAC, while select-
ing a smaller size for a pairwise MAC. The size of the com-
pressed MAC must be large enough because the authentic-
ity of an reported event is security critical. Since the size of
a pairwise MAC only impacts the capability of en-route ﬁl-
tering, we can make it smaller as a tradeoff between per-
formance and security. For example, if we use 4 bytes for
pairwise MACs, and t = 3, the size of a pairwise MAC
will be 1 byte. Compared to a standard hop-by-hop authen-
tication scheme [19], our scheme introduces the additional
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
message overhead of 4 bytes in this example, but it also pro-
vides much stronger security.
Second, during association discovery and maintenance, a
node adds its own id to a beaconing message when its path
changes. Thus, this component of the communication over-
head depends on path dynamics.
Finally, we mention that the choice of t should be based
on both security and node density. A large t makes it more
difﬁcult for the adversary to launch a false data injection at-
tack, but it also requires more nodes to form a cluster.
5. Related Work
Perrig et al [17] presented µTESLA for base station
broadcast authentication, based on one-way key chains [13]
and delayed key disclosure. Zhu et al [19] presented a
scheme that is also based on one-way key chains for lo-
cal (one-hop) broadcast authentication with the goal of
enabling authenticated passive participation in sensor net-
works. Although this scheme is robust against outsider at-
tacks, it is vulnerable to insider attacks in which an adver-
sary only needs to compromise a single node to inject false
data. In contrast, our interleaved hop-by-hop authentication
scheme is robust to insider attacks involving a certain num-
ber of compromised nodes.
Hu and Evans [9] propose a secure hop-by-hop data ag-
gregation scheme that works if one node is compromised
(i.e., t = 1). Ye et al [18] propose a statistical en-route de-
tection scheme called SEF, which allows both the base sta-
tion and en-route nodes to detect false data with a certain
probability. With an overhead of 14 bytes per report, SEF is
able to drop 80−90% of the injected false reports by a com-
promised node (i.e., t = 1) within 10 forwarding hops. In
our scheme, when t = 1, a false data packet will be dropped
immediately. Moreover, the packet overhead of our scheme
is also smaller.
Przydatek et al [16] present SIA, a secure information
aggregation scheme for sensor networks. As discussed in
the introduction, both SIA and our work aim to defend
against false data injection. The main difference between
these two schemes is in the focus. SIA focuses on the accu-
racy of query results reported from the base station, whereas
our scheme focuses on the authenticity of the reports from
sensor nodes and provides a means to ﬁlter out any injected
false data as early as possible. We believe the combination
of our scheme with SIA would make a sensor network more
robust to false data injection attacks.
Other work on sensor network security include studies
on key management [5, 6, 7, 15, 19]. The polynomial-based
pairwise key establishment scheme [4] has been recently
extended [15] to enable a sensor network to sustain more
node compromises under the same memory constraints. The
idea is to use probabilistic polynomial pre-deployment (in a
manner similar to probabilistic key pre-deployment [7]) so
that every node is loaded with a random subset of polyno-
mials from a large pool of polynomials.
6. Conclusion and Future Work
In this paper, we presented a simple but effective authen-
tication scheme to prevent false data injection attacks in sen-
sor networks. The scheme guarantees that the base station
can detect a false report when no more than t nodes are
compromised, where t is a security threshold. In addition,
our scheme guarantees that t colluding compromised sen-
sors can deceive at most B noncompromised nodes to for-
ward false data they inject, where B is O(t2) in the worst
case. Our performance analysis shows this scheme is efﬁ-
cient with respect to the security it provides and allows a
tradeoff between security and performance.
Recently, we have improved the scheme presented in this
paper such that a false data packet injected into the network
will be detected within one hop, i.e., B = 0. This improve-
ment is achieved at the expense of additional computational
overhead per node, although the communication overhead
of both schemes is identical. We refer the reader to [20] for
a description of the improved scheme and an analysis of its
security and performance in comparison to the scheme pre-
sented in this paper.
As future work, several directions are worth investigat-
ing. In particular, we plan to study the use of interleaved
hop-by-hop authentication for preventing or mitigating at-
tacks against sensor network routing and data collection
protocols, such as those pointed out in [12]. Another topic
that we plan to address is how our scheme can be adapted
for sensor networks with mobile data sinks.
Acknowledgements
We thank Fan Ye for valuable discussions during the
early stages of this work, and thank Jing Deng, Leijun
Huang, and Sankardas Roy for their helpful comments. We
also thank the anonymous reviewers for their valuable com-
ments and suggestions.
References
[1] M. Bellare, R. Guerin, and P. Rogaway. XOR MACs: New
Methods for Message Authentication Using Finite Pseudo-
random Functions. in Proc. of Crypto’95.
[2] S. Basagni, K. Herrin, E. Rosti, D. Bruschi. Secure Peb-
blenets. In Proc. of MobiHoc 2001.
[3] R. Blom. An Optimal Class of Symmetric Key Generation
Systems. Advances in Cryptology, EUROCRYPT’84, LNCS
209, 335338, 1984.
[4] C. Blundo, A. Santis, A. Herzberg, S. Kutten, U. Vaccaro,
and M. Yung. Perfectly-secure key distribution for dynamic
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
[20] S. Zhu, S. Setia, S. Jajodia and P. Ning. An Interleaved Hop-
by-hop Authentication Scheme for Filtering of Injected False
Data in Sensor Networks. Technical Report, Dept. of Infor-
mation and Software Engineering, George Mason University,
March 2004.
Appendix A: The Blundo Scheme
The Blundo scheme was originally proposed by Blundo
et al. [4] to allow any group of m parties to compute a com-
mon key while being secure against collusion between some
of them. Here we use a special case of this scheme for es-
tablishing pairwise keys between two sensor nodes in the
context of sensor networks.
(cid:1)k
The scheme works as follows. The key server ﬁrst ran-
domly generates a symmetric bivariate k-degree polynomial
f(x, y) =
i,j=0 aij xiyj over a ﬁnite ﬁeld Fq, where q is a
prime number that is large enough to accommodate a cryp-
tographic key. A polynomial f(x, y) is said to be symmet-
ric if f(x, y) = f(y, x). The key server computes f(i, y) for
node i, and then loads node i with all the k + 1 coefﬁcients
(as a function of y). When two nodes i and j want to estab-
lish a pairwise key, they compute f(i, j) (or f(j, i), which
is the same) by evaluating f(i, y) at point j and f(j, y) at
point i, respectively. f(i, j) serves as their pairwise key.
The above scheme has been proved to be uncondition-
ally secure and k-collusion resistant [4]; that is, an adver-
sary knows nothing about the pairwise key between any two
non-compromised nodes if the number of sensor nodes it
has compromised is no more than k. However, if the adver-
sary compromises more than k nodes, it will know all the
pairwise keys in the network. Therefore, it is important to
choose a large enough degree k for the polynomial for the
application under consideration. For the current generation
sensor nodes, k can be around 200.
conferences.
LNCS 740, pages 471486, 1993.
In Advances in Cryptology CRYPTO 92,
[5] H. Chan, A. Perrig, and D. Song. Random Key Predistribu-
tion Schemes for Sensor Networks. In Proc. of the IEEE Se-
curity and Privacy Symposim 2003, May 2003.
[6] W. Du, J. Deng, Y. Han, and P. Varshney. A Pairwise Key
Pre-distribution Scheme for Wireless Sensor Networks.
In
Proc. of 10th ACM Conference on Computer and Commu-
nications Security (CCS), Washington DC, October 27-31,
2003.
[7] L. Eschenauer and V. Gligor. A Key-Management Scheme
for Distributed Sensor Networks. In Proc. of 9th ACM Con-
ference on Computer and Communications Security (CCS),
Washington DC, 2002.
[8] O. Goldreich, S. Goldwasser, and S. Micali. How to Con-
struct Random Functions. Journal of the ACM, Vol. 33, No.
4, 1986, pp 210-217.
[9] L. Hu and D. Evans. Secure aggregation for wireless net-
works. In Workshop on Security and Assurance in Ad hoc
Networks. Jan. 2003.
[10] J. Hill, R. Szewczyk, A. Woo, S. Hollar, D. Culler, and K.
Pister. System architecture directions for networked sensors.
In Proc. of ASPLOS IX, 2000.
[11] B. Karp and H. Kung. GPSR: A Geographic Hash Table for
Data-Centric Storage. In Proc. of ACM International Work-
shop on Wireless Sensor Networks and Applications, Sept.
2000.
[12] C. Karlof and D. Wagner. Secure Routing in Sensor Net-
works: Attacks and Countermeasures. In Proc. of First IEEE
Workshop on Sensor Network Protocols and Applications,
May 2003.
[13] L. Lamport. Password authentication with insecure com-
munication communication. Communications of the ACM,
24(11):770-772, Nov., 1981.
[14] D. Liu and P. Ning. Location-Based Pairwise Key Establish-
ments for Static Sensor Networks. In 2003 ACM Workshop
on Security in Ad Hoc and Sensor Networks (SASN ’03),
October 2003.
[15] D. Liu and P. Ning. Establishing Pairwise Keys in Dis-
tributed Sensor Networks. In Proc. of the 10th ACM Confer-
ence on Computer and Communications Security (CCS ’03),
Washington D.C., October, 2003.
[16] B. Przydatek, D. Song, and A. Perrig. SIA: Secure Informa-
tion Aggregation in Sensor Networks. In Proc. of ACM Sen-
Sys 2003.
[17] A. Perrig, R. Szewczyk, V. Wen, D. Culler, and J. Tygar.
SPINS: Security Protocols for Sensor Networks.
In Proc.
of Seventh Annual ACM International Conference on Mo-
bile Computing and Networks(Mobicom 2001), Rome Italy,
July 2001.
[18] F. Ye, H. Luo, S. Lu, and L. Zhang. Statistical En-route De-
tection and Filtering of Injected False Data in Sensor Net-
works. To appear in Proc. of IEEE INFOCOM 2004.
[19] S. Zhu, S. Setia and S. Jajodia. LEAP: Efﬁcient Security
Mechanisms for Large-Scale Distributed Sensor Networks.
In Proc. of the 10th ACM Conference on Computer and
Communications Security (CCS ’03), Washington D.C., Oc-
tober, 2003.
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE