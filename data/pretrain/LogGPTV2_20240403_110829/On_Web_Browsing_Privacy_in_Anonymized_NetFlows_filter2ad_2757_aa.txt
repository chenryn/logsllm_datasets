title:On Web Browsing Privacy in Anonymized NetFlows
author:Scott E. Coull and
Michael P. Collins and
Charles V. Wright and
Fabian Monrose and
Michael K. Reiter
On Web Browsing Privacy in Anonymized NetFlows
∗
†
M. P. Collins
C. V. Wright
∗
F. Monrose
†
M. K. Reiter
∗
†
S. E. Coull
∗
{coulls,cwright,fabian}@cs.jhu.edu
Johns Hopkins University
Carnegie Mellon University
PI:EMAIL, PI:EMAIL
Abstract
Anonymization of network traces is widely viewed as a
necessary condition for releasing such data for research
purposes. For obvious privacy reasons, an important goal
of trace anonymization is to suppress the recovery of
web browsing activities. While several studies have ex-
amined the possibility of reconstructing web browsing
activities from anonymized packet-level traces, we ar-
gue that these approaches fail to account for a number
of challenges inherent in real-world network trafﬁc, and
more so, are unlikely to be successful on coarser Net-
Flow logs. By contrast, we develop new approaches that
identify target web pages within anonymized NetFlow
data, and address many real-world challenges, such as
browser caching and session parsing. We evaluate the
effectiveness of our techniques in identifying front pages
from the 50 most popular web sites on the Internet (as
ranked by alexa.com), in both a closed-world experiment
similar to that of earlier work and in tests with real net-
work ﬂow logs. Our results show that certain types of
web pages with unique and complex structure remain
identiﬁable despite the use of state-of-the-art anonymiza-
tion techniques. The concerns raised herein pose a threat
to web browsing privacy insofar as the attacker can ap-
proximate the web browsing conditions represented in
the ﬂow logs.
1 Introduction
Recently, signiﬁcant emphasis has been placed on the
creation of anonymization systems to maintain the pri-
vacy of network data while simultaneously allowing
the data to be published to the research community
at large [23, 24, 17, 9, 22].
the goals
of anonymization are (i) to hide structural information
about the network on which the trace is collected, so that
disclosing the anonymized trace does not reveal private
information about the security posture of that network,
In general,
and (ii) to prevent the assembly of behavioral proﬁles for
users on that network, such as the web sites they browse.
Our goal in this paper is to evaluate the strength of
current anonymization methodology in achieving goal
(ii). Speciﬁcally, we focus on providing a realistic as-
sessment of the feasibility of identifying individual web
pages within anonymized NetFlow logs [4]. Our work
distinguishes itself from prior work by operating on ﬂow-
level data rather than packet traces, and by carefully
examining many of the practical concerns associated
with implementing such identiﬁcation within real net-
work data. Previous work has focused on methods for
web page identiﬁcation within encrypted or anonymized
packet trace data utilizing various packet-level features,
such as size information, which cannot be readily scaled
to ﬂow-level data. Rather than assume the presence of
packet-level information, our work instead focuses on the
use of ﬂow-level data from NetFlow logs to perform sim-
ilar identiﬁcation. Since NetFlow data contains a small
subset of the features provided in packet traces, we are
able to provide a general method for identifying web
pages within both packet trace and NetFlow data. Also,
use of NetFlow data is becoming more commonplace in
network and security research [13, 21, 33, 5].
More importantly, our primary contribution is a rigor-
ous experimental evaluation of the threat that web page
identiﬁcation poses to anonymized data. Though pre-
vious work has provided evidence that such identiﬁca-
tion is a threat, these evaluations do not take into ac-
count several signiﬁcant issues (e.g., dynamic web pages,
browser caching, web session parsing, HTTP pipelining)
involved with the application of deanonymizing tech-
niques in practice. To overcome these obstacles to practi-
cal identiﬁcation of web pages, we apply machine learn-
ing techniques to accommodate variations in web page
download behavior1. Furthermore, our techniques can
parse and identify web pages even within multiple inter-
leaved ﬂows, such as those created by tabbed browsing,
with no additional information. The crux of our identiﬁ-
USENIX Association
16th USENIX Security Symposium
339
cation method lies in modeling the web servers which
participate in the download of a web page, and using
those models to ﬁnd the corresponding servers within
anonymized NetFlow data. Since the behavior of each
server, in terms of the ﬂows they serve, is so dynamic,
we apply kernel density estimation techniques to build
models that allow for appropriate variations in behavior.
Simply ﬁnding web servers is not enough to accurately
identify web pages, however. Information such as the or-
der in which the servers are contacted, and which servers
are present can have signiﬁcant impact on the identiﬁ-
cation of web pages. In fact, the ordering and presence
of these servers may change based on various download
scenarios, such as changes in browser cache or dynamic
web page content. To capture these behaviors, we for-
malize the game of “20 Questions” as a binary Bayes be-
lief network, wherein questions are asked to narrow the
possible download scenarios that could explain the pres-
ence of a web page within the anonymized data. As such,
our approach to web page identiﬁcation begins with iden-
tifying likely servers and then employs the binary Bayes
belief network to determine if those servers appropriately
explain the presence of the targeted web page within the
data.
Lastly, the evaluation of our techniques attempts to
juxtapose the assumptions of closed world scenarios
used in previous work to the realities of identifying web
pages in live network data. The closed world evalua-
tion of data collected through automated browsing scripts
within a controlled environment was found to perform
well — detecting approximately 50% of the targeted web
pages with less than 0.2% false detections. In more re-
alistic scenarios, however, true detection and false de-
tection rates varied substantially based upon the type of
web page being identiﬁed. Our evaluation of data taken
through controlled experiments and live network cap-
tures shows that certain types of web pages are easily
identiﬁable in real network data, while others maintain
anonymity due to false detections or poor true detec-
tion rates. Additionally, we show the effects of locality
(i.e., different networks for collecting training and test-
ing data) on the detection of web pages by examining
three distinct datasets taken from disparate network en-
vironments. In general, our results show that information
leakage from anonymized ﬂow logs poses a threat to web
browsing privacy insofar as an attacker is able to approx-
imate the basic browser settings and network conditions
under which the pages were originally downloaded.
2 Background and Related Work
Network trace anonymization is an active area of re-
search in the security community, as evidenced by
the ongoing development of anonymization methods
(e.g., [9, 23, 30]) and releases of network data that they
enable (e.g., [26, 7]). Recently, several attacks have been
developed that illustrate weaknesses in the privacy af-
forded by these anonymization techniques. In particu-
lar, both passive [6] and active attacks [2, 3] have shown
that deanonymization of public servers and recovery of
network topology information is possible in some cases.
Until now, however, an in-depth examination of the ex-
tent to which the privacy of web browsing activities may
also be at risk has been absent.
It would appear that existing approaches for infer-
ring web browsing activities within encrypted tunnels
[19, 32, 11, 1, 18, 8]) would be directly applicable to the
case of anonymized network data—in both cases, pay-
load and identifying information (e.g., IP addresses) for
web sites are obfuscated or otherwise removed. These
prior works, however, assume some method for unam-
biguously identifying the connections that constitute a
web page retrieval. Unfortunately, as we show later, this
assumption substantially underestimates the difﬁculty of
the problem as it is often nontrivial to unambiguously
delineate the ﬂows that constitute a single page retrieval.
The use of NetFlow data exacerbates this problem. Fur-
thermore, as we show later, there are several challenges
associated with the modern web environment that exac-
erbates the problem of web page identiﬁcation under re-
alistic scenarios.
To our knowledge, Koukis et al.
[14] present the
only study of web browsing behavior inference within
anonymized packet traces, which anticipates some of
the challenges outlined herein. In their work, however,
the authors address the challenges of parsing web page
downloads from packet traces by using packet inter-
arrival times to delineate complete sessions. Though this
delineation can be successful in certain instances, there
are several cases where time-based delineation alone will
not work (e.g, for interleaved browsing). In this paper,
we address several challenges beyond those considered
by Koukis et al. and provide a more in-depth evalua-
tion that goes further than their exploratory work. More-
over, our work differs from all prior work on this problem
(of which we are aware) in that it applies to ﬂow traces,
which offer far coarser information than packet traces.
3 Identifying Web Pages in Anonymized
NetFlow Logs
The anonymized NetFlow data we consider consists of
a time-ordered sequence of records, where each record
summarizes the packets sent from the server to the
client within a TCP connection. These unidirectional
ﬂow records contain the source (server) and destination
(client) IP addresses, the source and destination port
340
16th USENIX Security Symposium
USENIX Association
numbers, timestamps that describe the start and end of
each TCP connection, and the total size of the trafﬁc
sent from the source to the destination in the ﬂow (in
bytes). The NetFlow format also contains a number of
other ﬁelds that are not utilized in this work. For our pur-
poses, we assume that the anonymization of the NetFlow
log creates consistent pseudonyms, such as those created
by preﬁx-preserving anonymization schemes [9, 23], for
both the source and destination IP addresses in these
records. Furthermore, we assume that the NetFlow data
faithfully records TCP trafﬁc in its entirety.
The use of consistent pseudonym addresses allows us
to separate the connections initiated from different hosts,
thereby facilitating per host examination. Additionally,
we assume that port numbers and sizing information are
not obfuscated or otherwise altered to take on inconsis-
tent values since such information is of substantial value
for networking research (e.g., [10, 29, 12]). The unal-
tered port numbers within the ﬂows allow us to ﬁlter the
ﬂow records such that only those ﬂows originating from
port 80 are examined2.
Initially, we also assume that web browsing sessions
(i.e., all ﬂows that make up the complete download of a
web page) can be adequately parsed from the NetFlow
log. A similar assumption is made by Sun et al. [32]
and Liberatore et al. [18]. Though previous work has
assumed that web browsing session parsing algorithms
are available, accurate web session parsing is, in fact,
difﬁcult even with packet traces and access to payload
information [31, 15]. In
6, we return to the difﬁculty
of parsing these sessions from real anonymized network
data. By adopting the assumption (for now) that accurate
web browsing session parsing can be done, it becomes
possible to parse the complete NetFlow data into non-
overlapping subsequences of ﬂow records, where each
subsequence represents a single, complete web brows-
ing session for a client. Given the subsequent client web
browsing sessions, our goal is to extract features that
uniquely identify the presence of target web pages within
the anonymized NetFlow data, and model their behavior
in a manner that captures realistic browsing constraints.
§
3.1 Feature Selection
notice that the front page of msn.com is fairly inconsis-
tent in the number and size of ﬂows, and there is a sig-
niﬁcant amount of overlap even among only these three
examples. Since we are examining ﬂows, the number
of ﬂows and their associated sizes are dependent on the
manner in which the client requests objects, such as pic-
tures or text. In many cases, the sequence in which the
objects are downloaded may change due to dynamic web
content, or the state of the client’s browser cache may
cause certain objects to be excluded. These changes to
the client’s download behavior cause object drift within
the ﬂows, where web page objects are downloaded in
different ﬂows or not downloaded at all. As a result,
the number of ﬂows and their respective sizes can vary
widely, and are therefore a poor indicator of the identity
of the web page in question.
An important observation regarding this inconsistency
is that the size of any ﬂow is regulated by the cumula-
tive size of all the objects downloaded for the web page,
less the size of all objects downloaded in prior ﬂows.
If a large ﬂow early in the browsing session retrieves a
signiﬁcant number of objects, then the subsequent ﬂows
must necessarily become smaller, or there must be fewer
ﬂows overall. Conversely, a session of many small ﬂows
must necessarily require more ﬂows overall.
In fact,
if we examine the cumulative perspective of web page
downloads in Figure 1(b), we ﬁnd that not only are these
sites distinguishable, but that they take consistent paths
toward their target cumulative size.
The existence of such paths and the inherent connec-
tion between ﬂow size, index number, and cumulative
size motivates the use of all three features in identify-
ing web pages. These three features can be plotted in 3-
dimensional space, as shown in Figure 2(a), and the path
taken in this 3-dimensional space indicates the behavior
exhibited by the download of objects for a complete web
browsing session. Figure 2(b) shows an example of web
browsing session paths for the front pages of both ya-
hoo.com and msn.com overlaid on the set of points taken
over many web browsing sessions of msn.com’s front
page. Clearly, the path taken by yahoo.com is distinct
from the set of points generated from web browsing ses-
sions of msn.com, while the msn.com path remains simi-
lar to past web browsing sessions.
The most intuitive feature for discovering web pages in
the anonymized NetFlow data is the sequence of ﬂow
sizes observed during a complete web browsing session.
Each ﬂow in the web browsing session is represented by
an index number indicating its ordering in the session,
and an associated ﬂow size indicating the amount of data
transferred during the ﬂow. Na¨ıvely, one would expect
that the use of ﬂow size, index pairs would sufﬁce as a
good distinguisher for web page identiﬁcation. However,
as Figure 1(a) shows, this is not the case. For instance,
Server sessions The use of ﬂow size, index number,
and cumulative size information can be further reﬁned
by considering the sequence of ﬂows created from each
web server in the web browsing session, which we de-
note as a server session. Notice that when we sepa-
rate the ﬂows for msn.com by the server that produced
them, each server occupies a very distinct area of the
3-dimensional space, as shown in Figure 3. This re-
ﬁnement offers two beneﬁts in identifying web pages.
USENIX Association
16th USENIX Security Symposium
341
)
s
e
t
y
b
o
l
i
k
(
i
e
z
s
w
o
l
f
 400
 350
 300
 250
 200
 150
 100
 50
 0