2𝑛−𝑝 . As 𝑝 ≤ 2𝑛−1, then 2𝑘
2𝑘
1
(𝑦

Pr[𝐸4] ≤ 2−(𝑛−𝑘−1) .
(cid:104)(𝑦
(32)+ 𝑥]𝑟 ∥([𝑦
Pr𝑦 ←$ Prim(𝑥)
(15)
For any 𝐴𝐷, 𝐶 ∈ {0, 1}∗, let Throw(𝐴𝐷, 𝐶) be the throwing ex-
periment, where we view each forward ideal permutation Prim(𝑥)
(32)+ 𝑥]𝑠 (𝑡)+𝐻𝑟 (𝐴𝐷, 𝐶)),
with answer 𝑦, as throwing a ball [𝑦
where 𝑟 = [𝑦
(32)+ 𝑥]𝑟 into one of 22𝑡 possible bins. For any bin
𝑟∥𝑇 ∈ {0, 1}2𝑡, each throw has a conditional probability of at most
(32)+ 𝑥) = 𝑟∥(𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶))∥𝑊(cid:105)
𝑊 ∈{0,1}𝑛−2𝑡
Pr𝑦 ←$ Prim(𝑥)
(32)+ 𝑥) = 𝑟∥(𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶))∥𝑊
≤ ∑︁
𝑊 ∈{0,1}𝑛−2𝑡
≤ 2𝑛−2𝑡
2𝑛 − 𝑝
Therefore, each throw has a conditional probability of at most
2𝑛−𝑝 . As 𝑝 ≤ 2𝑛−1, then 2𝑛−2𝑡
2𝑛−2𝑡
1
22𝑡−1 . If we consider
all forward ideal permutation queries, we throw at most 𝑝 balls
with conditional probability at most 2−(2𝑡−1) into 22𝑡 bins. Using
Lemma B.1, with 𝑄 = 𝑝 and 𝐵 = 2−(2𝑡−1), the probability that
the heaviest bin of Throw(𝐴𝐷, 𝐶) contains 𝑚5 or more balls is at
most 2−(2𝑡−1). If 𝐸5 happens, then the bin 𝑟∗∥𝑇∗ in experiment
Throw(𝐴𝐷∗, 𝐶∗) contains 𝑚5 or more balls, therefore, the number
of balls in the heaviest bin of Throw(𝐴𝐷∗, 𝐶∗) contains 𝑚5 or more
balls. Thus, the probability of 𝐸5 is also bounded by 2−(2𝑡−1):
2𝑛−𝑝 ≤ 2𝑛−2𝑡
2𝑛−1 =
.
Pr(cid:104)𝐸5
(cid:105) ≤ 2−(2𝑡−1) .
(cid:12)(cid:12)(cid:12) 𝐸4∧𝐸5
Pr[Tideal ∈ Bad5] ≤ Pr(cid:104)Tideal ∈ Bad5
(cid:105) +
Combining (14), (15) and (16), we can bound the probability of a
transcript being in Bad5:
(16)
1
2𝑛−𝑘−1 +
1
22𝑡−1 .
(17)
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1998(32)+ 𝑥]𝑠 (𝑡)+ 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 , where 𝑟 = [𝑦
Note that 𝐸4 is the event that for all 𝑤 ∈ {0, 1}𝑛−𝑘, there are
strictly less than 𝑚4 inverse ideal permutation queries such that
[𝑥]𝐾- = 𝑤 and 𝐸5 is the event that for any 𝐴𝐷, 𝐶 ∈ {0, 1}∗ and
𝑇 ∈ {0, 1}𝑡, the number of forward ideal permutation queries veri-
fying [𝑦
(32)+ 𝑥]𝑟 , is strictly less
than 𝑚5. To bound the remaining term, we now consider the case
where A is just about to query Reveal, but has already made
all its other oracle queries. In the following, we mean by Prim
and Vf, a primitive and verification query already done by A. The
verification queries already done by A.
unionVf,Prim and sumVfPrim are over all primitive and
A transcript is in Bad5, if there exists a verification and primitive
(32)+ 𝑥]𝑠 = 𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶),
query such that 𝑥 = (𝑍∥𝐾𝑖∥0∥𝑁) and [𝑦
where 𝑟 = [𝑦
(32)+ 𝑥]𝑟 . To bound the probability of this event, we
split it into two, one for the event that the key part of 𝑥 is equal
to the key of the verification query and a second one for the rest
of the event that doesn’t depend on the key. Let 𝐸6(Vf, Prim)
be the event that when querying the Reveal oracle, the key
𝐾𝑖 of the verification query Vf is equal to the value [𝑥]𝐾+ as-
sociated to the primitive query Prim, and 𝐸7(Vf, Prim) be the
event that [𝑥]𝐾- = (𝑍∥0∥𝑁) and [𝑦
(32)+ 𝑥]𝑠 = 𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶), where
𝑟 = [𝑦
(32)+ 𝑥]𝑟 , (𝑁 , 𝐴𝐷, 𝐶,𝑇) are the values associated to the verifica-
tion query Vf, and (𝑥, 𝑦) are the values associated to the primitive
query Prim. Then, using a union bound,
(cid:105)
≤ Pr
(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5
Pr(cid:104)Tideal ∈ Bad5
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5

Pr(cid:104)𝐸6(Vf, Prim)(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5 ∧ 𝐸7(Vf, Prim)(cid:105)
∑︁
≤∑︁
· Pr(cid:104)𝐸7(Vf, Prim)(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5
𝐸6(Vf, Prim) ∧ 𝐸7(Vf, Prim)
(cid:105) .
Vf,Prim
Prim
Vf
(18)
When querying Reveal, the users’ keys are uniformly sampled,
independently from any previous queries and parameters. Thus,
for any pair Vf, Prim, the probability that 𝐾𝑖 = [𝑥]𝐾+ is 1
2𝑘 . This
event is also independent from 𝐸4, 𝐸5 and 𝐸7(Vf, Prim), which
both depend only on parameters already fixed before querying
Reveal. Thus
Pr(cid:104)𝐸6(Vf, Prim)(cid:12)(cid:12)(cid:12) 𝐸4∧𝐸5∧𝐸7(Vf, Prim)(cid:105)
= Pr[𝐸6(Vf, Prim)]
(19)
.
=
1
2𝑘
Note that conditioned on event 𝐸4 ∧ 𝐸5, for any verification query
Vf there are strictly less than 𝑚4 + 𝑚5 primitive queries Prim
such that [𝑥]𝐾- = (𝑍∥0∥𝑁) and [𝑦
(32)+ 𝑥]𝑠 = 𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶), where
𝑟 = [𝑦
(32)+ 𝑥]𝑟 , (𝑁 , 𝐴𝐷, 𝐶,𝑇) are the values associated to Vf, and
(𝑥, 𝑦) are the values associated to Prim. Hence, for a fix verification
query Vf, there are strictly less than 𝑚4 + 𝑚5 primitive queries
Vf
Vf
Prim
Moreover,
∑︁
2(𝑛 − 𝑘 − 1)
(𝑚4 + 𝑚5)
≤ 𝑞𝑣 · (𝑚4 + 𝑚5) .
Prim such that Pr(cid:104)𝐸7(Vf, Prim)(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5
(cid:105) is not zero. Thus
Pr(cid:104)𝐸7(Vf, Prim)(cid:12)(cid:12)(cid:12) 𝐸4 ∧ 𝐸5
(cid:105)
<∑︁
∑︁
(cid:24)
(cid:25)
(cid:24)
(cid:24)
(cid:24)
(cid:25)
Pr[Tideal ∈ Bad5] ≤ 𝑞𝑣 · 2(cid:16)(𝑛 − 𝑘) 𝑝 + 2𝑡 𝑝(cid:17)
and in combination with (17), (18), (19) and (20), we obtain
≤ 2 ·
= 2 · (𝑛 − 𝑘) 𝑝
max(1, 𝑛−𝑘−1− log2(𝑝))
max(1, 2𝑡 − 1 − log2(𝑝))
≤ 2 ·
= 2 · 2𝑡 𝑝
max(1, 2𝑡 − log2(2𝑝))
max(1, 𝑛−𝑘− log2(2𝑝))
2(2𝑡 − 1)
(𝑛 − 𝑘)
𝑚4 =
𝑚5 =
2𝑡
+
(20)
(cid:25)
(cid:25)
2𝑘
1
2𝑛−𝑘−1 + 1
22𝑡−1 . □
B.2.7 Bounding Bad6 transcripts probability.
.
2𝑡
2𝑘
+ 1
22𝑡
+ 𝑞𝑣 · 2 · 2𝑡 𝑑
2𝑡 + 𝑞𝑣 · 𝑐 · ℓ𝑚
Lemma B.7 (Bad6).
Pr[Tideal ∈ Bad6] ≤ 𝑞𝑣
Proof. Bad6 is the set of all transcripts 𝜏 that contain two entries
(enc, 𝑗, 𝑁 , 𝐴𝐷′, 𝑀′, 𝐶′∥𝑇 ′,
(vf, 𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇 , false)
𝑢) such that 𝐾𝑗 = 𝐾𝑖 and ∃𝑟 ∈ {0, 1}𝑡 ,𝑊 ∈ {0, 1}𝑛−2𝑡
0 ∥ · · · ∥𝑉 ′
𝑉 ′
such that 𝑉 ′
0 = (𝑟∥(𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶))∥𝑊 ).
Recall that for an entry (enc, 𝑗, 𝑁 , 𝐴𝐷′, 𝑀′, 𝐶′∥𝑇 ′, 𝑉 ′
𝑢), in
0 = (𝑟∥(𝑇 ′ (𝑡)− 𝐻𝑟 (𝐴𝐷′, 𝐶′))∥𝑊 ), with 𝑟 ←$ {0, 1}𝑡
the ideal world, 𝑉 ′
and 𝑊 ←$ {0, 1}𝑛−2𝑡. Two cases are possible. The first one is when
the two queries are made to the same user, i.e., 𝑖 = 𝑗, and the second
one is when the two queries are made to different users, i.e., 𝑖 ≠ 𝑗.
0 ∥ · · · ∥𝑉 ′
and
Bad6-1: case 𝑖 = 𝑗.
0 ∥ · · · ∥𝑉 ′
In the ideal world, Bad6 for this case could be redefined as the set
of all transcripts 𝜏 that contain two entries (vf, 𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇 , false)
and (enc, 𝑖, 𝑁 , 𝐴𝐷′, 𝑀′, 𝐶′∥𝑇 ′, 𝑉 ′
𝑢) such that 𝑇 (𝑡)−𝐻𝑟 (𝐴𝐷, 𝐶)
= 𝑇 ′ (𝑡)− 𝐻𝑟 (𝐴𝐷′, 𝐶′), where 𝑟 = [𝑉 ′
0]𝑟 . To bound the probability
of this case, we are going to use the 𝑐-almost Δ-universal prop-
erty of the function 𝐻. However, this property require for (𝐴𝐷, 𝐶)
and (𝐴𝐷′, 𝐶′) to be distinct. We are therefore first going to bound
the probability of transcripts verifying this case when (𝐴𝐷, 𝐶) =
(𝐴𝐷′, 𝐶′).
When (𝐴𝐷, 𝐶) = (𝐴𝐷′, 𝐶′), if a transcript is in this case then
𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 ′ (𝑡)− 𝐻𝑟 (𝐴𝐷′, 𝐶′), i.e. 𝑇 = 𝑇 ′. Depending on the
order of the queries, we consider two subcases for when (𝐴𝐷, 𝐶) =
(𝐴𝐷′, 𝐶′). The first one is for when the verification query is done
after the encryption query, and the second one is for the inverse
order. For the first subcase, when the verification query is done after
the encryption query and (𝐴𝐷, 𝐶) = (𝐴𝐷′, 𝐶′), we cannot have that
𝑇 = 𝑇 ′, as it would result in a non valid query. Thus the probability
of this subcase is zero. For the second subcase, when the encryption
query is done after the verification query and (𝐴𝐷, 𝐶) = (𝐴𝐷′, 𝐶′),
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1999the probability that 𝑇 ′ = 𝑇 is 1
2𝑡 , as encryption queries return uni-
form random strings. For each of the at most 𝑞𝑣 verification queries
Vf(𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇), there can be at most one following encryption
query Enc(𝑖, 𝑁 , 𝐴𝐷′, 𝑀′) with answer 𝐶′∥𝑇 ′ and the same (𝑖, 𝑁),
and the probability that 𝑇 ′ = 𝑇 is 1
2𝑡 . Thus the probability of this
subcase is bounded by 𝑞𝑣2𝑡 .
When (𝐴𝐷, 𝐶) ≠ (𝐴𝐷′, 𝐶′), if a transcript generated by the
adversary A in the ideal augmented game is in this case, then A
has made a verification query Vf(𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇), an encryption
query Enc(𝑖, 𝑁 , 𝐴𝐷′, 𝑀′) with answer 𝐶′∥𝑇 ′, and finally a query
to Reveal that returned a 𝑉 ′
0 associated to the previous encryption
query such that 𝑟 = [𝑉 ′
0]𝑟 is a uniform random string. Hence the
probability that a transcript generated by A in the ideal augmented
game is in this case is bounded by the probability that A makes
the previously described queries. We are going to consider the case
where A is just about to query Reveal, but has already made all
its other oracle queries.
For each of the at most 𝑞𝑣 verification queries Vf(𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇)