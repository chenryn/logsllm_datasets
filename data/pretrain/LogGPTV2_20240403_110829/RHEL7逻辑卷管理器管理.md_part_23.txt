# [⁠]{#troubleshooting.html#troubleshooting}第 6 章 LVM 故障排除 {.title}
:::
[]{#troubleshooting.html#idm140426151857040 .indexterm}
::: para
本章提供了对不同 LVM 问题进行故障排除的操作方法。
:::
::: section
::: titlepage
# [⁠]{#troubleshooting.html#troubleshoot_diags}6.1. 故障排除诊断 {.title}
:::
::: para
如果某个命令没有按照预期执行，则可以使用以下方法收集诊断信息：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    使用任意命令的 `-v`{.option}、`-vv`{.option}、`-vvv`{.option} 或者
    `-vvvv`{.option} 参数提高输出信息的详细程度。
    :::
-   ::: para
    如果问题与逻辑卷激活有关，请在配置文件的'log'部分设定'activation＝1'，并在运行命令时使用
    `-vvvv`{.option} 选项。检查输出结果后，确定将此参数重新设为
    0，以防止在机器可用内存较少时出现机器锁定现象。
    :::
-   ::: para
    运行 `lvmdump`{.command} 命令可为诊断提供信息转储。有关详情请参考
    `lvmdump`{.command}(8) man page。
    :::
-   ::: para
    执行 `lvs -v`{.command}、`pvs -a`{.command} 或者
    `dmsetup info -c`{.command} 命令以获得额外的系统信息。
    :::
-   ::: para
    检查 `/etc/lvm/backup`{.filename} 文件中最后的元数据备份和
    `/etc/lvm/archive`{.filename}\> 中的归档版本。
    :::
-   ::: para
    运行 `lvm dumpconfig`{.command} 命令检查现有配置信息。
    :::
-   ::: para
    检查 `/etc/lvm`{.filename} 目录中的 `.cache`{.filename}
    文件，了解包含物理卷设备的记录。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#troubleshooting.html#partial_output}6.2. 在失败的设备中显示信息。 {.title}
:::
[]{#troubleshooting.html#idm140426149634544 .indexterm}
::: para
可以使用 `lvs`{.command} 或者 `vgs`{.command} 命令的 `-P`{.option}
参数显示那些没有出现在输出结果中的失败卷的信息。该参数甚至允许一些内部元数据不完全统一时的操作。例如：如果组成卷组
`vg`{.literal} 的某个设备失败，`vgs`{.command}
命令可能会显示以下输出信息。
:::
``` screen
# vgs -o +devices
  Volume group "vg" not found
```
::: para
如果已为 `vgs`{.command} 指定了 `-P`{.option}
选项，那么该卷组虽仍然不可用，但可以看到更多有关失败设备的信息。
:::
``` screen
# vgs -P -o +devices
  Partial mode. Incomplete volume groups will be activated read-only.
  VG   #PV #LV #SN Attr   VSize VFree Devices
  vg     9   2   0 rz-pn- 2.11T 2.07T unknown device(0)
  vg     9   2   0 rz-pn- 2.11T 2.07T unknown device(5120),/dev/sda1(0)
```
::: para
在这个示例中，失败的设备导致卷组中的线性和条带逻辑卷均失败。不带
`-P`{.option} 选项的 `lvs`{.command} 命令会显示以下输出结果。
:::
``` screen
# lvs -a -o +devices
  Volume group "vg" not found
```
::: para
使用 `-P`{.option} 选项显示失败的逻辑卷。
:::
``` screen
# lvs -P -a -o +devices
  Partial mode. Incomplete volume groups will be activated read-only.
  LV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Devices
  linear vg   -wi-a- 20.00G                               unknown device(0)
  stripe vg   -wi-a- 20.00G                               unknown device(5120),/dev/sda1(0)
```
::: para
下面的例子显示在镜像逻辑卷的一个分支出错时，带 `-P`{.option} 选项的
`pvs`{.command} 和 `lvs`{.command} 命令的输出结果。
:::
``` screen
#  vgs -a -o +devices -P
  Partial mode. Incomplete volume groups will be activated read-only.
  VG    #PV #LV #SN Attr   VSize VFree Devices
  corey   4   4   0 rz-pnc 1.58T 1.34T my_mirror_mimage_0(0),my_mirror_mimage_1(0)
  corey   4   4   0 rz-pnc 1.58T 1.34T /dev/sdd1(0)
  corey   4   4   0 rz-pnc 1.58T 1.34T unknown device(0)
  corey   4   4   0 rz-pnc 1.58T 1.34T /dev/sdb1(0)
```
``` screen
# lvs -a -o +devices -P
  Partial mode. Incomplete volume groups will be activated read-only.
  LV                   VG    Attr   LSize   Origin Snap%  Move Log            Copy%  Devices
  my_mirror            corey mwi-a- 120.00G                    my_mirror_mlog   1.95 my_mirror_mimage_0(0),my_mirror_mimage_1(0)
  [my_mirror_mimage_0] corey iwi-ao 120.00G                                          unknown device(0)
  [my_mirror_mimage_1] corey iwi-ao 120.00G                                          /dev/sdb1(0)
  [my_mirror_mlog]     corey lwi-ao   4.00M                                          /dev/sdd1(0)
```
:::
::: section
::: titlepage
# [⁠]{#troubleshooting.html#mirrorrecover}6.3. 恢复 LVM 镜像错误 {.title}
:::
[]{#troubleshooting.html#idm140426157150384 .indexterm}
::: para
本小节提供一个恢复示例，即从由于物理卷底层设备宕机，同时将
`mirror_log_fault_policy`{.literal} 参数设定为
`remove`{.literal}，从而造成 LVM
镜像卷的一支失败，需要手动恢复的情况。有关设定
`mirror_log_fault_policy`{.literal} 参数的详情，请查看 [第 6.3 节 "恢复
LVM 镜像错误"](#troubleshooting.html#mirrorrecover){.xref}。
:::
::: para
当一个镜像分支失败时，LVM
将镜像卷转换成线性卷，此时可和以前一样继续操作但没有镜像冗余。此时可以在系统中添加新磁盘来替换物理设备，并重建该镜像。
:::
::: para
以下命令创建将作为镜像使用的物理卷。
:::
``` screen
# pvcreate /dev/sd[abcdefgh][12]
  Physical volume "/dev/sda1" successfully created
  Physical volume "/dev/sda2" successfully created
  Physical volume "/dev/sdb1" successfully created
  Physical volume "/dev/sdb2" successfully created
  Physical volume "/dev/sdc1" successfully created
  Physical volume "/dev/sdc2" successfully created
  Physical volume "/dev/sdd1" successfully created
  Physical volume "/dev/sdd2" successfully created
  Physical volume "/dev/sde1" successfully created
  Physical volume "/dev/sde2" successfully created
  Physical volume "/dev/sdf1" successfully created
  Physical volume "/dev/sdf2" successfully created
  Physical volume "/dev/sdg1" successfully created
  Physical volume "/dev/sdg2" successfully created
  Physical volume "/dev/sdh1" successfully created
  Physical volume "/dev/sdh2" successfully created
```
::: para
以下命令创建卷组 `vg`{.literal} 和镜像卷 `groupfs`{.literal}。
:::
``` screen
# vgcreate vg /dev/sd[abcdefgh][12]
  Volume group "vg" successfully created
[root@link-08 ~]# lvcreate -L 750M -n groupfs -m 1 vg /dev/sda1 /dev/sdb1 /dev/sdc1
  Rounding up size to full physical extent 752.00 MB
  Logical volume "groupfs" created
```
::: para
可以使用 `lvs`{.command}
命令验证作为镜像分支的镜像卷及底层设备布局，以及镜像日志。请注意：在第一个示例中，镜像还没有被完全同步。应该在
`Copy%`{.literal} 字段显示 100.00 之后才继续操作。
:::
``` screen
# lvs -a -o +devices
  LV                 VG   Attr   LSize   Origin Snap%  Move Log          Copy% Devices
  groupfs            vg   mwi-a- 752.00M                    groupfs_mlog 21.28 groupfs_mimage_0(0),groupfs_mimage_1(0)
  [groupfs_mimage_0] vg   iwi-ao 752.00M                                       /dev/sda1(0)
  [groupfs_mimage_1] vg   iwi-ao 752.00M                                       /dev/sdb1(0)
  [groupfs_mlog]     vg   lwi-ao   4.00M                                       /dev/sdc1(0)
[root@link-08 ~]# lvs -a -o +devices
  LV                 VG   Attr   LSize   Origin Snap%  Move Log          Copy%  Devices
  groupfs            vg   mwi-a- 752.00M                    groupfs_mlog 100.00 groupfs_mimage_0(0),groupfs_mimage_1(0)
  [groupfs_mimage_0] vg   iwi-ao 752.00M                                        /dev/sda1(0)
  [groupfs_mimage_1] vg   iwi-ao 752.00M                                        /dev/sdb1(0)
  [groupfs_mlog]     vg   lwi-ao   4.00M     i                                  /dev/sdc1(0)
```
::: para
在这个示例中，镜像 `/dev/sda1`{.literal}
的主要分支失败。任何镜像卷的写入操作都会让 LVM
探测失败的镜像。出现这种情况后，LVM
会将镜像转换成单一线性卷。在这个示例中是因为执行了 `dd`{.command} 命令。
:::
``` screen
# dd if=/dev/zero of=/dev/vg/groupfs count=10
10+0 records in
10+0 records out
```
::: para
可以使用 `lvs`{.command}
命令确定该设备现在已经是线性设备了。因为是失败的磁盘，所以会发生 I/O
错误。
:::
``` screen
# lvs -a -o +devices
  /dev/sda1: read failed after 0 of 2048 at 0: Input/output error
  /dev/sda2: read failed after 0 of 2048 at 0: Input/output error
  LV      VG   Attr   LSize   Origin Snap%  Move Log Copy%  Devices
  groupfs vg   -wi-a- 752.00M                               /dev/sdb1(0)
```
::: para
此时应该仍然可以使用逻辑卷，但没有镜像冗余。
:::
::: para
要重建镜像卷，则需要替换坏的驱动器，并重新创建该物理卷。如果使用同一个磁盘而不是换一个新磁盘，则在运行
`pvcreate`{.command} 命令时将看到"inconsistent"的警告提示。执行
`vgreduce --removemissing`{.command} 命令即可避免出现该警告。
:::
``` screen
# pvcreate /dev/sdi[12]
  Physical volume "/dev/sdi1" successfully created
  Physical volume "/dev/sdi2" successfully created
[root@link-08 ~]# pvscan
  PV /dev/sdb1   VG vg   lvm2 [67.83 GB / 67.10 GB free]
  PV /dev/sdb2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdc1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdc2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdd1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdd2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sde1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sde2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdf1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdf2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdg1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdg2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdh1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdh2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdi1           lvm2 [603.94 GB]
  PV /dev/sdi2           lvm2 [603.94 GB]
  Total: 16 [2.11 TB] / in use: 14 [949.65 GB] / in no VG: 2 [1.18 TB]
```
::: para
下面可以使用新的物理卷扩展原来的卷组。
:::
``` screen
# vgextend vg /dev/sdi[12]
  Volume group "vg" successfully extended
# pvscan
  PV /dev/sdb1   VG vg   lvm2 [67.83 GB / 67.10 GB free]
  PV /dev/sdb2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdc1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdc2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdd1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdd2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sde1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sde2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdf1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdf2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdg1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdg2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdh1   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdh2   VG vg   lvm2 [67.83 GB / 67.83 GB free]
  PV /dev/sdi1   VG vg   lvm2 [603.93 GB / 603.93 GB free]
  PV /dev/sdi2   VG vg   lvm2 [603.93 GB / 603.93 GB free]
  Total: 16 [2.11 TB] / in use: 16 [2.11 TB] / in no VG: 0 [0   ]
```
::: para
将线性卷转换回其原始镜像状态。
:::
``` screen
# lvconvert -m 1 /dev/vg/groupfs /dev/sdi1 /dev/sdb1 /dev/sdc1
  Logical volume mirror converted.
```
::: para
可以使用 `lvs`{.command} 命令验证已恢复到镜像状态。
:::
``` screen
# lvs -a -o +devices
  LV                 VG   Attr   LSize   Origin Snap%  Move Log          Copy% Devices
  groupfs            vg   mwi-a- 752.00M                    groupfs_mlog 68.62 groupfs_mimage_0(0),groupfs_mimage_1(0)
  [groupfs_mimage_0] vg   iwi-ao 752.00M                                       /dev/sdb1(0)
  [groupfs_mimage_1] vg   iwi-ao 752.00M                                       /dev/sdi1(0)
  [groupfs_mlog]     vg   lwi-ao   4.00M                                       /dev/sdc1(0)
```
:::
::: section
::: titlepage
# [⁠]{#troubleshooting.html#mdatarecover}6.4. 恢复物理卷元数据 {.title}
:::
[]{#troubleshooting.html#idm140426145627376 .indexterm}
::: para
如果不小心覆盖或者破坏了卷组物理卷元数据区域，则会看到出错信息显示元数据区域不正确，或者系统无法使用特定的
UUID
找到物理卷。此时可能需要通过在物理卷的元数据区域写入新的元数据来恢复物理卷数据，指定相同的
UUID 作为丢失的元数据。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
在正常的 LVM 逻辑卷中应该不会进行这个操作过程。如果指定了不正确的
UUID，则会丢失您的数据。
:::
:::
:::
::: para
下面的例子显示排序的输出结果，可以看到您的元数据是丢了还是被破坏了。
:::
``` screen
# lvs -a -o +devices
  Couldn't find device with uuid 'FmGRh3-zhok-iVI8-7qTD-S5BI-MAEN-NYM5Sk'.
  Couldn't find all physical volumes for volume group VG.
  Couldn't find device with uuid 'FmGRh3-zhok-iVI8-7qTD-S5BI-MAEN-NYM5Sk'.
  Couldn't find all physical volumes for volume group VG.
  ...