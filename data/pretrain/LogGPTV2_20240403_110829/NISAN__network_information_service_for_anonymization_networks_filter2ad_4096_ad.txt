ger tables that is potentially higher than f , especially when we al-
low for arbitrary attacker positioning as discussed in Section 6.3.
Let p f (l) = 1 − ps(l) be the probability of selecting a colluded
node after l steps. Obviously, p f (1) = f . Moreover, for l > 1,
p f (l) ≥ gp f (l − 1) + f ps(l − 1). Solving this recurrence relation
using geometric series yields p f (l) ≥ f 1−(g− f )l+1
1−g+ f
, which can eas-
ily be checked by using induction.
We observe that with growing path length, this probability rapidly
1−g+ f . Figure 9 plots this predicted attacker success rate
f
becomes
for increasing g with f = 0.2.
Unfortunately, this strong dependency on g turns out to be prob-
lematic in the real world, because it compounds with another prop-
erty of RWs. Figure 10 displays the results of our simulations.
Speciﬁcally, we look at the impact of the tolerance factor, when
the attackers know this factor and try to modify as many ﬁngers as
possible without being detected. Unlike aggregated greedy search,
where it is important for the attacker to change FT entries close to
x, with RW, every FT entry is equally important and so it becomes
a good adversarial strategy to adapt as many entries as possible,
which translates into making small changes ﬁrst. We can see that
already with a factor of 3, the attackers can modify about 12 out
of 16 FT entries on average, which, consistent with our prediction,
translates to almost 50 percent attacker success for f = 0.2. The
sweet spot seems to be at a lower factor here, but even at factor 2
we get a failure rate of about 0.35, with already signiﬁcant false
positives.
Influence of the factor (100,000 Peers, 20% malicious)
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
Malicious peers found (%)
FTs of honest peers rejected (%)
Number of FT entries changed by malicious peers (#)
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
Factor
Figure 10: Tolerance factor inﬂuence with random walk
This shows that using RWs for network information is only ad-
visable when the active attacker ratio is low and information leak-
age is a serious issue. On the other hand, the results highlight the
effective protection against an active adversary that is provided by
our improved aggregated greedy search scheme with ﬁnger table
checking.
We have been thinking of a combined approach that might bring
together the advantages of both aggregated greedy search (secu-
rity against active attacks) and RWs (security against passive at-
tacks). Unfortunately, the straightforward idea of searching for a
few rounds and then randomly switching the goal x seems to have
limited applicability, as Figure 11 suggests. It makes clear that dur-
ing the search process, the ratio of colluding nodes in the total set
of nodes surveyed, as well as in the closest nodes top list is rising
rather quickly in the ﬁrst few steps, a ﬁnding echoed in Figure 8.
It is mitigated only later on, when the search converges towards x.
By this time, however, the attacker already has a pretty good idea
of the search direction.
 50
 40
]
%
[
n
o
i
t
c
a
r
F
 30
 20
 10
 0
Combined search (100,000 Peers, 20% malicious, Factor=2)
Malicious nodes found
Fraction of malicious nodes in the last round
Number of possibly searched−for peers
 500
 400
 300
 200
 100
]
#
[
s
r
e
e
P
f
o
r
e
b
m
u
N
 2
 4
 8
 6
# of rounds with the same search ID
 10
 12
 14
 16
 18
 0
 20
Figure 11: Combined: random walk and search
6.2 Bootstrapping Process
So far in our analysis we have assumed a correct bootstrapping
of the network. Under this assumption we have shown that our
148approach NISAN is able to provide an adequate protection to its
users: the fraction of malicious nodes found in random look-ups is
not signiﬁcantly larger than the overall fraction of malicious nodes
in the system. Additionally, sampling a signiﬁcant fraction of the
network considerably hardens bridging and ﬁngerprinting attacks.
In this section we discuss how the users can overcome the problem
of malicious nodes while joining the network, i.e. bootstrapping.
We assume that before joining the network a user knows a few
DHT members and at least one of them is not colluding. This as-
sumption is meaningful since it is unlikely that any approach would
work if only malicious nodes are known to the user. The user gen-
erates its ID (which might be a hash of its DHT public key, say),
and asks the known DHT members to execute the bootstrapping
for this ID. Each of these nodes executes the lookups (in the way
we proposed before) for the entries in the new nodes’ FT and com-
municate them to the new node. The new node selects the entries
closest to the optimum values. Notice that even a majority of evil
nodes could not break this process, as long as there is one honest
node whose searches succeed. After the stabilization protocol run
[16] the new node is a regular member of the network. By basing
bootstrapping (and maintenance, which can be conducted in a sim-
ilar manner) on our secure routing primitive, we are conﬁdent not
to introduce additional security hazards.
6.3 Arbitrary Positioning of Malicious Nodes
So far we have considered the case where malicious nodes are
uniformly distributed along the ID space. It is beyond the scope
of this paper to discuss the realism of this assumption and possi-
ble measures for enforcing it. Still, we brieﬂy look at a stronger
adversarial scenario: what if the colluded nodes could arbitrarily
position themselves within the whole ID space of the Chord ring?
Clearly, if this were to work instantly, or the DHT remained very
stable for a long time, the adversaries could eclipse a single user if
they knew his ID. We consider the case where they do not have a
concrete victim but are rather interested to be in as many paths in
the system as possible, thus trying to get as much information as
possible about the whole system.
At this point, the asymmetry of our DHT distance metric comes
into play: It assures that, typically, a (colluded) node is not a neigh-
bor of its neighbors. Thus, it is a nontrivial feat for the adversary
to construct positions for its nodes such that their FTs may contain
many of their own while still being plausible. Again, a presumably
hard problem arises for the attacker, and we can only give a sim-
ple solution that we believe close to optimal, without being able to
prove this conjecture.
From our point of view, the so-called bisection would be a very
good attacker positioning strategy in this case: recursive division of
the ID space into two equal parts (halves) and placing the malicious
nodes on the dividing points. This would lead to “perfect” FTs in
the sense that the mean distance would rapidly approach zero with
an increasing number of malicious nodes. Figure 12 shows the sim-
ulation results for this scenario. Even though the results are worse
than in the regular case when the arbitrary positioning is not pos-
sible, the rate of found colluding nodes in random searches is still
ﬁxed with increasing network size, while non-linearly dependent
on the total attacker rate. Therefore, when the attackers are able to
mount this kind of attack, we can say that NISAN – as it is – still
scales, yet is more vulnerable to high attacker rates.
However, having perfect ﬁnger tables is also conspicuous and
can be detected by the honest users. Note that malicious nodes
cannot easily improve their positioning by being only close to the
optimal value – this would work only for a few of them. The rest
would have “regular” FTs.
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
]
%
[
d
n
u
o
f
s
e
d
o
n
s
u
o
i
c
i
l
a
m
f
o
n
o
i
t
c
a
r
F
 0
 0
Malicious nodes found
1% malicious
10% malicious
20% malicious
40% malicious
 20000
 40000
 60000
 80000
 100000
Network size
Figure 12: Arbitrary positioning of malicious nodes
It is not hard to come up with slight modiﬁcations to our DHT
scheme that foil the simple bisection attacker plan. For example,
we might think of requiring the ith FT entry of node m to be strictly
greater than m + 2i−1, instead of just greater or equal. This already
breaks symmetry. However, it seems much harder to come up with
a DHT structure that can actually be shown to allow for no or not
much advantage through any chosen positioning. We have to leave
this fascinating research topic for future work, yet remark that it is
a standard problem in security research that unknown attacks can
never be ruled out in general. In light of our ﬁndings, we therefore
propose NISAN as the most secure and scalable approach to truly
distributed network information distribution that we know of; and
while we cannot guarantee the absence of unthought-of attacks, the
above considerations inspire us with conﬁdence that NISAN will
defend against them gracefully, or at the very least can be adapted
to do so easily.
7. CONCLUSIONS
Although peer discovery and anonymization are two disjoint tasks,
the network information distribution has a direct impact on the
anonymization. Therefore, during the design of new anonymization
systems the network information distribution has to be addressed as
well.
In this paper we proposed a DHT-based practical approach for
distribution of network information. Our scheme prevents mali-
cious nodes from biasing the node look-ups, while requiring each
node to know only a small subset of the network. The approach is
highly scalable and does not require to trust any third party.
Just like every other known approach that does not lead to a full
network view, our approach is still susceptible to bridging and ﬁn-
gerprinting attacks. Even though their practical seriousness and im-
pact are under research, we hardened NISAN against these attacks
by hiding the searched goal and learning a signiﬁcantly large part
of the network. If information leakage is intolerable in a given sce-
nario, we propose the alternative approach of random walks, while
acknowledging that this method does not feature equally strong
protection against active attacks. In practice, a more typical way of
dealing with the problem would be to adjust the number of searches
before actually selecting a router. This way, a greater part of the
network is known over time, making ﬁngerprinting-type inference
signiﬁcantly harder for the attacker.
In the limit, this poses the
question if gossiping-like alternatives that lead to discovery of the
entire network can be made scalable, and adversarial exploitation
of a full network view as in intersection attacks can be prevented.
149[15] P. Mittal and N. Borisov. Information leaks in structured
peer-to-peer anonymous communication systems. In
P. Syverson, S. Jha, and X. Zhang, editors, Proceedings of
the 15th ACM Conference on Computer and
Communications Security (CCS 2008), pages 267–278,
Alexandria, Virginia, USA, October 2008. ACM Press.
[16] R. Morris, D. Karger, F. Kaashoek, and H. Balakrishnan.
Chord: A Scalable Peer-to-Peer Lookup Service for Internet
Applications. In ACM SIGCOMM 2001, San Diego, CA,
September 2001.
[17] A. Nambiar and M. Wright. Salsa: A structured approach to
large-scale anonymity. In Proceedings of ACM CCS 2006,
Alexandria, VA, USA, October 2006. ACM Press.
[18] P. Palfrader. Number of running tor routers.
http://www.noreply.org/tor-running-routers/.
[19] A. Panchenko, B. Westermann, L. Pimenidis, and
C. Andersson. Shalon: Lightweight anonymization based on
open standards. In Proceedings of the 19th International
Conference on Computer Communications and Networks
(IEEE ICCCN 2009), San Francisco, CA, USA, August
2009. IEEE Press.
[20] M. Rennhard and B. Plattner. Introducing MorphMix:
Peer-to-Peer based Anonymous Internet Usage with
Collusion Detection. In Proceedings of the Workshop on
Privacy in the Electronic Society (WPES 2002), Washington,
DC, USA, November 2002.
[21] A. Singh, T.-W. Ngan, P. Druschel, and D. S. Wallach.
Eclipse attacks on overlay networks: Threats and defenses.
In INFOCOM. IEEE, 2006.
[22] P. F. Syverson, D. M. Goldschlag, and M. G. Reed.
Anonymous connections and onion routing. In Proceedings
of the IEEE Symposium on Security and Privacy, pages
44–54, Oakland, California, USA, 1997. IEEE Computer
Society.
[23] P. Tabriz and N. Borisov. Breaking the collusion detection
mechanism of morphmix. In G. Danezis and P. Golle,
editors, Proceedings of the Sixth Workshop on Privacy
Enhancing Technologies (PET 2006), pages 368–384,
Cambridge, UK, June 2006. Springer.
[24] Tor Documentation.
https://www.torproject.org/documentation.html.
[25] B. Westermann, A. Panchenko, and L. Pimenidis. A
kademlia-based node lookup system for anonymization
networks. In Advances in Information Security and
Assurance: Proceedings of the Third International
Conference on Information Security and Assurance (ISA
2009), volume 5576 of LNCS, pages 179–189, Seoul, South
Korea, Jun 2009. Springer.
These alternatives have to be further researched in order to ﬁnd the
most appropriate solution for the addressed problem.
8. REFERENCES
[1] B. Awerbuch and C. Scheideler. Towards a scalable and
robust DHT. In SPAA ’06: Proceedings of the eighteenth
annual ACM symposium on parallelism in algorithms and
architectures, pages 318–327, New York, NY, USA, 2006.
ACM.
[2] I. Baumgart and S. Mies. S/Kademlia: A practicable
approach towards secure key-based routing. In Proceedings
of the 13th International Conference on Parallel and
Distributed Systems (ICPADS ’07), Hsinchu, Taiwan,
volume 2, Dec. 2007.
[3] O. Berthold, H. Federrath, and S. Köpsell. Web MIXes: A
system for anonymous and unobservable Internet access. In
H. Federrath, editor, Proceedings of Designing Privacy
Enhancing Technologies: Workshop on Design Issues in
Anonymity and Unobservability, pages 115–129.
Springer-Verlag, LNCS 2009, Jul 2000.
[4] N. Borisov, G. Danezis, P. Mittal, and P. Tabriz. Denial of
service or denial of security? In CCS ’07: Proceedings of the
14th ACM conference on Computer and communications
security, pages 92–102, New York, NY, USA, 2007. ACM.
[5] M. Castro, P. Druschel, A. J. Ganesh, A. I. T. Rowstron, and
D. S. Wallach. Secure routing for structured peer-to-peer
overlay networks. In Symposium on Operating Systems
Design and Implementation (OSDI 02), Boston, MA, USA,
December 2002.
[6] G. Danezis and P. Syverson. Bridging and ﬁngerprinting:
Epistemic attacks on route selection. In N. Borisov and
I. Goldberg, editors, Proceedings of the Eighth International
Symposium on Privacy Enhancing Technologies (PETS
2008), pages 151–166, Leuven, Belgium, July 2008.
Springer.
[7] R. Dingledine and N. Mathewson. Tor Directory Protocol
Speciﬁcation.
https://www.torproject.org/svn/trunk/doc/spec/dir-spec.txt.
[8] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The
second-generation onion router. In Proceedings of the 13th
USENIX Security Symposium, 2004.
[9] M. J. Freedman and R. Morris. Tarzan: A peer-to-peer
anonymizing network layer. In Proceedings of the 9th ACM
Conference on Computer and Communications Security
(CCS 2002), Washington, DC, November 2002.
[10] A. Kapadia and N. Triandopoulos. Halo: High-assurance
locate for distributed hash tables. In NDSS. The Internet
Society, 2008.
[11] C. Lesniewski-Laas. A sybil-proof one-hop DHT. In
Workshop on Social Network Systems, Glasgow, Scotland,
April 2008.
[12] G. S. Manku, M. Naor, and U. Wieder. Know thy neighbor’s
neighbor: the power of lookahead in randomized p2p
networks. In In Proceedings of the 36th ACM Symposium on
Theory of Computing (STOC), pages 54–63, 2004.
[13] P. Maymounkov and D. Mazieres. Kademlia: A Peer-to-Peer
Information System Based on the XOR Metric. 2002.
[14] A. Mislove, G. Oberoi, A. Post, C. Reis, and P. Druschel.
AP3: Cooperative, decentralized anonymous
communication. In In Proc. of SIGOPS European Workshop,
2004.
150