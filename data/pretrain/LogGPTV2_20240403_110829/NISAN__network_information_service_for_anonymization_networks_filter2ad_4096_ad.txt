### Probability of Selecting a Colluded Node

Let \( p_f(l) = 1 - p_s(l) \) be the probability of selecting a colluded node after \( l \) steps. Clearly, \( p_f(1) = f \). For \( l > 1 \), we have:
\[ p_f(l) \geq g p_f(l-1) + f p_s(l-1) \]

Solving this recurrence relation using geometric series, we get:
\[ p_f(l) \geq \frac{f (1 - (g - f)^{l+1})}{1 - g + f} \]
This can be verified by induction.

As the path length increases, this probability rapidly approaches:
\[ \frac{f}{1 - g + f} \]

Figure 9 plots the predicted attacker success rate for increasing \( g \) with \( f = 0.2 \).

### Dependency on \( g \)

The strong dependency on \( g \) is problematic in real-world scenarios because it compounds with another property of random walks (RWs). Figure 10 shows the results of our simulations, specifically focusing on the impact of the tolerance factor when attackers know this factor and attempt to modify as many finger table (FT) entries as possible without being detected.

Unlike aggregated greedy search, where it is crucial for the attacker to change FT entries close to \( x \), in RWs, every FT entry is equally important. Thus, a good adversarial strategy is to make small changes first. With a tolerance factor of 3, attackers can modify about 12 out of 16 FT entries on average, leading to an almost 50% attacker success rate for \( f = 0.2 \). The optimal factor seems to be lower, but even at a factor of 2, the failure rate is about 0.35, with significant false positives.

### Influence of Tolerance Factor

Figure 10 illustrates the influence of the tolerance factor on malicious peers found, FTs of honest peers rejected, and the number of FT entries changed by malicious peers.

### Combined Approach

We considered a combined approach that might leverage the advantages of both aggregated greedy search (security against active attacks) and RWs (security against passive attacks). However, the straightforward idea of searching for a few rounds and then randomly switching the goal \( x \) has limited applicability, as shown in Figure 11. During the search process, the ratio of colluding nodes in the total set of nodes surveyed, as well as in the closest nodes top list, rises quickly in the first few steps. This issue is mitigated only later when the search converges towards \( x \). By then, the attacker already has a good idea of the search direction.

### Bootstrapping Process

In our analysis, we assumed a correct bootstrapping of the network. Under this assumption, our approach, NISAN, provides adequate protection: the fraction of malicious nodes found in random lookups is not significantly larger than the overall fraction of malicious nodes in the system. Sampling a significant fraction of the network hardens bridging and fingerprinting attacks.

To overcome the problem of malicious nodes during bootstrapping, we assume that before joining the network, a user knows a few DHT members, at least one of whom is not colluding. The user generates its ID (e.g., a hash of its DHT public key) and asks the known DHT members to execute the bootstrapping for this ID. Each node performs lookups for the new node's FT entries and communicates them to the new node. The new node selects the closest entries. Even if a majority of nodes are malicious, the process remains secure as long as there is one honest node whose searches succeed. After the stabilization protocol, the new node becomes a regular member of the network.

### Arbitrary Positioning of Malicious Nodes

We have so far assumed that malicious nodes are uniformly distributed along the ID space. A stronger adversarial scenario involves arbitrary positioning of malicious nodes within the Chord ring. If this were possible, adversaries could eclipse a single user if they knew their ID. We consider the case where adversaries aim to be in as many paths as possible to gather information about the entire system.

The asymmetry of our DHT distance metric ensures that a (colluded) node is typically not a neighbor of its neighbors. Constructing positions for malicious nodes such that their FTs contain many of their own while remaining plausible is nontrivial. Bisection, where the ID space is recursively divided into two equal parts and malicious nodes are placed at the dividing points, would lead to "perfect" FTs. Figure 12 shows simulation results for this scenario. Although the results are worse than in the regular case, the rate of found colluding nodes in random searches is still fixed with increasing network size, though non-linearly dependent on the total attacker rate. Thus, NISAN still scales but is more vulnerable to high attacker rates.

However, having perfect finger tables is conspicuous and can be detected by honest users. Slight modifications to our DHT scheme, such as requiring the \( i \)-th FT entry of node \( m \) to be strictly greater than \( m + 2^{i-1} \), can break symmetry. Future work should explore DHT structures that allow no or minimal advantage through any chosen positioning.

### Conclusions

Peer discovery and anonymization are distinct tasks, but network information distribution impacts anonymization. Our DHT-based approach, NISAN, prevents malicious nodes from biasing node lookups while requiring each node to know only a small subset of the network. It is highly scalable and does not require trusting third parties. While NISAN is susceptible to bridging and fingerprinting attacks, we hardened it by hiding the searched goal and learning a significant part of the network. For scenarios where information leakage is intolerable, we propose the alternative of random walks, acknowledging that this method offers weaker protection against active attacks. In practice, adjusting the number of searches before selecting a router can make fingerprinting-type inference harder for attackers.

### References

[1] B. Awerbuch and C. Scheideler. Towards a scalable and robust DHT. In SPAA '06: Proceedings of the eighteenth annual ACM symposium on parallelism in algorithms and architectures, pages 318–327, New York, NY, USA, 2006. ACM.
[2] I. Baumgart and S. Mies. S/Kademlia: A practicable approach towards secure key-based routing. In Proceedings of the 13th International Conference on Parallel and Distributed Systems (ICPADS '07), Hsinchu, Taiwan, volume 2, Dec. 2007.
[3] O. Berthold, H. Federrath, and S. Köpsell. Web MIXes: A system for anonymous and unobservable Internet access. In H. Federrath, editor, Proceedings of Designing Privacy Enhancing Technologies: Workshop on Design Issues in Anonymity and Unobservability, pages 115–129. Springer-Verlag, LNCS 2009, Jul 2000.
[4] N. Borisov, G. Danezis, P. Mittal, and P. Tabriz. Denial of service or denial of security? In CCS '07: Proceedings of the 14th ACM conference on Computer and communications security, pages 92–102, New York, NY, USA, 2007. ACM.
[5] M. Castro, P. Druschel, A. J. Ganesh, A. I. T. Rowstron, and D. S. Wallach. Secure routing for structured peer-to-peer overlay networks. In Symposium on Operating Systems Design and Implementation (OSDI 02), Boston, MA, USA, December 2002.
[6] G. Danezis and P. Syverson. Bridging and fingerprinting: Epistemic attacks on route selection. In N. Borisov and I. Goldberg, editors, Proceedings of the Eighth International Symposium on Privacy Enhancing Technologies (PETS 2008), pages 151–166, Leuven, Belgium, July 2008. Springer.
[7] R. Dingledine and N. Mathewson. Tor Directory Protocol Specification. https://www.torproject.org/svn/trunk/doc/spec/dir-spec.txt.
[8] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The second-generation onion router. In Proceedings of the 13th USENIX Security Symposium, 2004.
[9] M. J. Freedman and R. Morris. Tarzan: A peer-to-peer anonymizing network layer. In Proceedings of the 9th ACM Conference on Computer and Communications Security (CCS 2002), Washington, DC, November 2002.
[10] A. Kapadia and N. Triandopoulos. Halo: High-assurance locate for distributed hash tables. In NDSS. The Internet Society, 2008.
[11] C. Lesniewski-Laas. A sybil-proof one-hop DHT. In Workshop on Social Network Systems, Glasgow, Scotland, April 2008.
[12] G. S. Manku, M. Naor, and U. Wieder. Know thy neighbor's neighbor: the power of lookahead in randomized p2p networks. In In Proceedings of the 36th ACM Symposium on Theory of Computing (STOC), pages 54–63, 2004.
[13] P. Maymounkov and D. Mazieres. Kademlia: A Peer-to-Peer Information System Based on the XOR Metric. 2002.
[14] A. Mislove, G. Oberoi, A. Post, C. Reis, and P. Druschel. AP3: Cooperative, decentralized anonymous communication. In In Proc. of SIGOPS European Workshop, 2004.