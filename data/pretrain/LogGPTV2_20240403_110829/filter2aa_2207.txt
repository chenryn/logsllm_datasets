#BHUSA @BlackHatEvents

### Glitched on Earth by Humans: A Black-Box Security Evaluation of the SpaceX Starlink User Terminal
**Presenter: Lennert Wouters (@LennertWo, COSIC)**

---

## Overview
This presentation provides a detailed security evaluation of the SpaceX Starlink User Terminal (UT). The talk covers teardowns, hardware revisions, and various attack vectors, including fault injection and UART access.

---

## Starlink 101
- **Laser Link**: Communication between satellites.
- **Lower Earth Orbit (LEO)**: Satellites in orbit closer to Earth.
- **User Terminal (UT)**: Device for end-users.
- **Gateway**: Ground stations connecting the satellite network to the internet.
- **Internet**: Final destination for data.
- **Satellite**: Spacecraft in LEO.

---

## Hardware Revisions
- **Circular UT**
  - Dimensions: 59 cm (23.23") diameter
  - Usage: Residential
  - Revisions: rev1_pre_production, rev1_production, rev1_proto1/2/3, rev2_proto0/1/3, rev2_proto2 (SoC cut 3), rev2_proto4 (SoC cut 4)
- **Square UT**
  - Dimensions: 57 x 51 cm (22" x 20")
  - Usage: Business and Maritime
  - Revisions: hp1_proto0, hp1_proto1
- **High Performance UT**
  - Dimensions: 50 x 30 cm (19" x 12")
  - Usage: Residential and RV
  - Revisions: rev3_proto0, rev3_proto1, rev3_proto2

---

## Teardowns
- **YouTube Channels**
  - [Ken Keiter](https://youtube.com/c/KenKeiter) @kenkeiter
  - [Mike On Space](https://youtube.com/c/MikeOnSpace) @mikeonspace
  - [The Signal Path](https://youtube.com/c/Thesignalpath) @TheSignalPath
  - [Colin O'Flynn](https://youtube.com/c/ColinOFlynn) @colinoflynn
  - [Dan Murray](https://danmurray.net) @DanJMurray
  - [Oleg Kutkov](https://olegkutkov.me) @olegkutkov

---

## Transceiver
- **External Phased Array**: Used for communication.
- **Revisions**: transceiver_rev2p0/5

---

## Connectors on V2*
- **Ethernet + Power**
- **Motors**
- **UART**
- **Accessible Connectors**
  - UT RX: JST BM10B-ZPDSS-TF(LF)(SN)
  - UT TX: JST BM05B-ZESS-TBT(LF)(SN)

*Note: V1 hardware had an extra connector, and V3 does not have easily accessible connectors.

---

## UART Access
- **U-Boot**: No longer accepts serial input on non-development/fused hardware.
- **Login Prompt**: Available for interaction.

---

## Clock Generation
- **GPS Receiver**: STM STA8089, GLLBLU
- **Clock**: SoC, POE
- **PCB Overview**
  - (A) Digital BeamFormer (DBF): STM GLLBSUABBBA (Codename: SHIRAZ)
  - (B) Front-End Module (FEM): Codename: PULSAR(AD)
  - V2 hardware and up: 1 DBF → 16 FEMs

---

## RF Components
- **Siliconpr0n**: Thanks to John McMaster! [@johndmcmaster]
  - [SHIRAZ](https://siliconpr0n.org/archive/doku.php?id=mcmaster:spacex:gllbsuabbba-shiraz)
  - [PULSAR(AD)](https://siliconpr0n.org/archive/doku.php?id=mcmaster:spacex:gea-aa12-109d-tg02-pulsarad)

- **System-on-Chip (SoC)**
  - Custom quad-core ARM Cortex-A53
  - ST Microelectronics: GLLCCOCA6BF (cut 3?), GLLCCODA6BF (cut 4?)
  - Codename: CATSON
- **Secure Element**: STM STSAFE-A110
- **eMMC**: 4GB
- **DDR3**: 2 x 4Gbit

---

## SoC Through Substrate Image
- **GLLCCOCA6BF (cut 3?)**
- **Thorlabs NIR Camera**
- **Mitutoyo NIR Objective 50x**
- **Full Resolution Version**: Available on siliconpr0n.org

---

## Identifying eMMC Test Points
- **CMD, CLK, D0**

---

## SD Card Reader
- **TXS0202EVM**: Level shifter

---

## Reading eMMC In-Circuit
- **Low Voltage eMMC Adapter**

---

## Extracting the eMMC Dump
- **Split the dump into:**
  - TF-A Bootstages: Firmware Image Packages (unpack with TF-A fiptool)
  - Flattened uImage Tree (FIT): Unpack with U-Boot dumpimage
  - SpaceX Runtime (dm-verity, error correcting codes)
  - SpaceX Calibration (dm-verity)
  - SpaceX EDR (LUKS)
  - SpaceX dish config (LUKS)
- **More Details**: [esat.kuleuven.be/cosic/blog/dumping-and-extracting-the-spacex-starlink-user-terminal-firmware]

---

## Temperature and RF Channels
- **Development Geofences**
- **Obtaining Root**

---

## Fault Injection
- **Flip-chip Packaging**: Exposes die backside
- **Methods**: Laser Fault Injection, Body Bias Injection, Electromagnetic Fault Injection
- **Challenges**: PCB size, no development kits, differential clock input, reset line, voltage fault injection

---

## Crowbar VFI
- **NewAE ChipWhisperer-Lite (~ $250)**
- **Glitch Port**: Connected to the SoC core voltage
- **Momentarily Shorts Core Voltage to GND**
- **Core Voltage**: ~1V, generated by TI TPS56C230
- **Triggering**: Oscilloscope triggers on serial data
- **Controlled from Python**: Offset from trigger point, glitch width

---

## Example Output
- **Results**
  - Proof-of-Concept works
  - Reproduced by SpaceX PSIRT
  - Easy to produce (undesirable) faults
  - Slow: 1 attempt every 12 seconds
  - Low success rate: many hours for one good attempt
  - Unreliable: successful glitch often results in other errors

---

## STM/SpaceX ARM TF-A
- **BL1**
  - Loads BL2 certificate from eMMC
  - Verifies the certificate’s signature
  - Loads the BL2 firmware from eMMC
  - Verifies that SHA512(BL2) matches the hash in the certificate

---

## BL1 Glitch Setup
- **Try to boot with (in)valid signature, hash, and firmware**
- **Try to glitch a valid certificate into a signature verification failure**

---

## Normal Boot
- **UART**: x 10e6 samples
- **EM Side-Channel**: Signature verification

---

## Glitched Boot
- **UART**: x 10e6 samples
- **EM Side-Channel**: Signature verification skipped

---

## ROM Bootloader (BL1)
- **Mapped at 0x30000000 and readable from BL2!**
- **BSEC eFuses mapped at 0x22400000 (shadow registers)**
- **Emulated using Unicorn Engine**
- **Fuzzed using AFL++ in Unicorn mode**
- **Simulated instruction skip faults in Unicorn Engine**
- **Code has control flow checks and redundant operations**

---

## BL1 Glitch Detection Example
- **BL1 UART Output**
  - Authentication error detected
  - Certificate loaded with invalid signature but valid digest of BL2 firmware
  - Signature verification succeeded
  - Loaded BL2 firmware and verified hash digest
  - Final control flow check detects glitch

---

## Enabling Decoupling Capacitors
- **Experimented with:**
  - N-channel MOSFETS
  - P-channel MOSFETS
  - High/Low side switching
  - Gate voltage
  - MOSFET drivers
  - Capacitor sizes
  - Timing

---

## Researcher Access
- **Demonstrated a full attack in the lab!**
- **Setup too bulky for practical use (e.g., on the roof)**
- **SpaceX offered SSH access through a Yubikey**

---

## Creating a Mobile Setup
- **Replacing Lab Equipment with Low-Cost Off-the-Shelf Components**
  - RPI Pico replaces oscilloscope and ChipWhisperer
  - Works but still messy

---

## PCB Design
- **Scanner @ 600 DPI**
- **Draw board outline at real size in Inkscape**
- **Load in KiCad and use in the edgecuts layer**

---

## Modchip
- **RP2040 @250MHz**
- **PIO for triggering and glitch generation**
- **2 channel MOSFET driver**
- **Glitch/crowbar MOSFET**
- **Decoupling MOSFETs**
- **Castellated holes to mount to the UT PCB**
- **Dimensions**: 6 cm (2.36"), 0.8 mm
- **Available on GitHub!**

---

## SpaceX Strikes Back
- **Firmware Update**
  - Previously unused eFuse is now blown and disables UART output
  - Modchip was designed to trigger on UART

---

## Adapt
- **Trigger on eMMC D0 instead of UART**
- **Modchip could be easily adapted**
- **Disconnect UT UART TX**
- **Connect to eMMC D0**
- **Update glitch parameters from Python**
- **Alternative: new PCB revision**

---

## Network Exploration
- **All interesting communication uses mutually authenticated TLS (STSAFE)**
- **Added STSAFE support to the tlslite-ng TLS implementation**
- **Python script to download the latest firmware updates**
- **Mostly IPv6 2620:134:b000::1:0:0**
- **Open ports (nmap): 8001-8012, 9000, 9003, 9005, 9010, 9011**

---

## What's Next?
- **Make your own modchip and use it to:**
  - Further explore the network infrastructure
  - Integrate the STSAFE with GRPC
  - Interact with the Digital BeamFormers and update their firmware
  - Repurpose your terminal?

---

## Conclusion
- **Bypass secure boot using voltage fault injection in BL1**
- **Quad-core Cortex-A53 in a black box scenario**
- **No documentation, no open development kits**
- **Enabling and disabling of decoupling capacitors**
- **Fault injection countermeasures are only as good as the fault model used**
- **Well-designed product (from a security standpoint)**
- **No obvious low-hanging fruit**
- **Root shell challenging to obtain and does not immediately lead to scalable attacks**
- **SpaceX PSIRT was very responsive and helpful!**
- **Bugcrowd: [https://bugcrowd.com/spacex](https://bugcrowd.com/spacex)**

---

## Contact
- **COSIC**
- **@LennertWo**
- **[github.com/KULeuven-COSIC/Starlink-FI](https://github.com/KULeuven-COSIC/Starlink-FI)**

---

## Demo!

---

## Thanks!
- **Arthur Beckers**
- **Gert Van Beneden**
- **Tim Ferrell**
- **John McMaster**
- **Dan Murray**
- **Colin O'Flynn**

---

#BHUSA @BlackHatEvents