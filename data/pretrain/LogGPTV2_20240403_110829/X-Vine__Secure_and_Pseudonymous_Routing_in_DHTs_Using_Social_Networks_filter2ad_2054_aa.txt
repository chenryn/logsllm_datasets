title:X-Vine: Secure and Pseudonymous Routing in DHTs Using Social Networks
author:Prateek Mittal and
Matthew Caesar and
Nikita Borisov
X-Vine: Secure and Pseudonymous Routing Using Social Networks
Prateek Mittal, Matthew Caesar, Nikita Borisov
University of Illinois at Urbana-Champaign
{mittal2,caesar,nikita}@illinois.edu
Abstract
Distributed hash tables suffer from several security and
privacy vulnerabilities, including the problem of Sybil at-
tacks. Existing social network-based solutions to mitigate
the Sybil attacks in DHT routing have a high state require-
ment and do not provide an adequate level of privacy. For
instance, such techniques require a user to reveal their so-
cial network contacts. We design X-Vine, a protection mech-
anism for distributed hash tables that operates entirely by
communicating over social network links. As with tra-
ditional peer-to-peer systems, X-Vine provides robustness,
scalability, and a platform for innovation. The use of social
network links for communication helps protect participant
privacy and adds a new dimension of trust absent from pre-
vious designs. X-Vine is resilient to denial of service via
Sybil attacks, and in fact is the ﬁrst Sybil defense that re-
quires only a logarithmic amount of state per node, mak-
ing it suitable for large-scale and dynamic settings. X-Vine
also helps protect the privacy of users social network con-
tacts and keeps their IP addresses hidden from those outside
of their social circle, providing a basis for pseudonymous
communication. We ﬁrst evaluate our design with analysis
and simulations, using several real world large-scale so-
cial networking topologies. We show that the constraints
of X-Vine allow the insertion of only a logarithmic number
of Sybil identities per attack edge; we show this mitigates
the impact of malicious attacks while not affecting the per-
formance of honest nodes. Moreover, our algorithms are
efﬁcient, maintain low stretch, and avoid hot spots in the
network. We validate our design with a PlanetLab imple-
mentation and a Facebook plugin.
1 Introduction
Peer-to-peer (P2P) networks have, in a short time, rev-
olutionized communication on the Internet. One key fea-
ture of P2P networks is their ability to scale to millions
of users without requiring any centralized infrastructure
support. The best scalability and performance is offered
by multi-hop distributed hash tables (DHTs), which offer
a structured approach to organizing peers [37, 52, 56, 59].
Multi-hop DHTs are the subject of much research and are
also used in several mainstream systems [2, 7, 25].
Securing DHTs has always been a challenging task [16,
57, 63], especially in the face of a Sybil attack [22], where
one node can pretend to have multiple identities and thus in-
terfere with routing operations. Traditional solutions to this
attack require participants to obtain certiﬁcates [16], prove
possession of a unique IP address [43, 46], or perform some
computation [12]. This creates a barrier to participation,
limiting the growth of the P2P user base, and at the same
time does not fully address the problem of Sybil attacks.
To address this, recent research proposes to use social
network trust relationships to mitigate Sybil attacks [21, 68,
69]. However, these systems share some key shortcomings:
High control overhead: These systems rely on ﬂooding or
large numbers of repeated lookups to maintain state. For
example, Whanau [34] is the state-of-art design that secures
routing in DHTs, but it is built upon a one-hop DHT routing
mechanism, and has high overheads: state and control over-
head increases with O(√n log n), where n is the number
of participants in the social network. As networked sys-
tems become increasingly deployed at scale (e.g., in the
wide area, across service providers), in high-churn envi-
ronments (e.g., developing regions, wireless, mobile social
networks [40]), and for applications with stronger demands
on correctness and availability (e.g., online storage, content
voting, reputation systems) the problem of high overhead
in existing works stands to become increasingly serious;
multi-hop DHT routing mechanisms are going to be nec-
essary.
Lack of privacy: These systems require a user to reveal
social contact information (friend lists). Some of these
schemes require global distribution of this contact informa-
tion. This is unfortunate, as social contacts are considered
to be private information: leading real-world systems like
Facebook [3] and LiveJournal [4] provide users with a func-
tionality to limit access to this information. Forcing users
to reveal this private information could greatly hinder the
adoption of these technologies.
A second privacy concern, common to both traditional
DHTs and ones that use social networking information, is
that users must communicate directly with random peers,
revealing their IP addresses. This provides an opportunity
for the attacker to perform trafﬁc analysis and compromise
user privacy [9, 35]. Prior work [42, 65]has demonstrated
that a colluding adversary can associate a DHT lookup with
its lookup initiator, and thus infer the activities of a user. A
pseudonymous routing mechanism can defend against such
attacks, and would be especially beneﬁcial for privacy sen-
sitive DHT applications [19, 43].
To address these shortcomings, we propose X-Vine, a
protection mechanism for large-scale distributed systems
that leverages social network trust relationships. X-Vine has
several unique properties. X-Vine protects privacy of social
relationships, by ensuring that a user’s relationship infor-
mation is revealed only to the user’s immediate friends. At
the same time, X-Vine also protects correctness of DHT
routing, by mitigating Sybil attacks while requiring only
logarithmic state and control overhead. To the best of our
knowledge, X-Vine is the ﬁrst system to provide both prop-
erties, which may serve to make it a useful building block
in constructing the next generation of social network based
distributed systems. Finally, X-Vine also provides a basis
for pseudonymous communication; a user’s IP address is
revealed only to his/her trusted social network contacts.
X-Vine achieves these properties by incorporating social
network trust relationships in the DHT design. Unlike tradi-
tional DHTs, which route directly between overlay partici-
pants (e.g., [34]), X-Vine embeds the DHT directly into the
social fabric, allowing communication through the DHT to
leverage trust relationships implied by social network links.
This is done by using mechanisms similar to network layer
DHTs like VRR [14]. We leverage this structure for two
purposes. First, communication in X-Vine is carried out
entirely across social-network links.The use of social net-
work links enables pseudonymous communication; while
the recipient may know the opaque identiﬁer (pseudonym)
for the source, the IP address of the source is revealed only
to his/her friends. Second, recent work has shown that so-
cial networks can be used to detect Sybil attacks by iden-
tifying a bottleneck cut that connects the Sybil identities to
the rest of the network [21, 68, 69]. X-Vine enables com-
parable Sybil resilience by bounding the number of DHT
relationships that can traverse a particular edge. With this
multi-hop approach, we can limit the number of Sybil iden-
tities per attack edge (attack edges illustrated in Figure 1)
to logarithmic in the size of the network with logarithmic
control and routing state, a dramatic reduction from previ-
ous Sybil defense approaches. This allows X-Vine to scale
to large user bases and high-churn environments.
We evaluate X-Vine both analytically and experimen-
tally using large scale real-world social network topologies.
Since recent work [62, 66] has advocated the use of interac-
tion networks as a more secure realization of social trust, we
also demonstrate the performance of X-Vine on interaction
graphs. From our evaluation, we ﬁnd that X-Vine is able
to route using 10–15 hops (comparable to other DHTs) in
topologies with 100 000 nodes while using only O(log n)
routing state. In particular, we show that the overhead of
X-Vine is two orders of magnitude smaller than Whanau.
With respect to Sybil resistance, we found that honest nodes
are able to securely route to each other with probability
greater than 0.98 as long as the number of attack edges is
g ∈ o(n/(log n)). Using an implementation on PlanetLab,
we estimate the median lookup latency in a 100 000 node
topology to be less than 1.2 seconds. Even when 20% of
the nodes fail simultaneously, the lookups still succeed with
a probability greater than 95%. Finally, we also implement
a plugin for DHT designers that can enable them to easily
integrate social network contacts with a DHT by leveraging
existing online social networks like Facebook.
Our proposed techniques can be applied in a wide variety
of scenarios that leverage DHTs:
• Large scale P2P networks like Vuze/Kad/Overnet are
popularly used for ﬁle sharing and content distribution.
However, these networks are vulnerable to attacks on
the routing protocol [64] and do not protect the pri-
vacy of the user [42]. X-Vine protects against attacks
that target the DHT mechanisms and provides a basis
for pseudonymous communication. Moreover, X-Vine
is also robust to the high churn prevalent in these net-
works.
• Applications like Coral [25], Adeona [54], and Van-
ish [27] are built on top of DHTs. The security prop-
erties of these applications can often be compromised
by exploiting vulnerabilities in the DHT. As an exam-
ple, the security of Vanish was recently compromised
by a low-cost Sybil attack on the Vuze network [67].
Our proposed techniques protect these applications by
bounding the number of Sybil identities in the DHT.
• Decentralized P2P anonymous communication sys-
tems
like Tarzan [26], Salsa [46] and Shad-
owWalker [43] assume an external Sybil defense
mechanism. X-Vine is particularly suitable for design-
ing Sybil-resilient P2P anonymous communication
systems, since it provides secure as well as pseudony-
mous routing.
• Freenet [19] is a widely used censorship resistant over-
lay network, but its routing algorithm has been shown
to be extremely vulnerable in presence of even a few
malicious nodes [23]. X-Vine can enable peers to resist
censorship by securely and pseudonymously retrieving
data objects from the Freenet network.
• Membership
overlay
concealing
networks
(MCONs) [61] hide the identities of the peers partic-
ipating in a network (different from pseudonymity).
Our proposed techniques can provide a substrate for
designing fully decentralized membership concealing
networks.
Roadmap:
The rest of the paper describes and evalu-
ates X-Vine. We start by giving a high-level overview of
the problem we address and our approach (Section 2), fol-
lowed by a detailed description of our routing algorithm
(Section 3) and its security mechanisms (Section 4). We
then describe our experimental results (Section 5). Finally,
we summarize related work (Section 6), discuss X-Vine’s
limitations (Section 7), and conclude (Section 8).
2 X-Vine Overview
2.1 Design Goals
We start by deﬁning the goals for our design.
1. Secure routing: if an honest node X performs a lookup
for an identiﬁer ID, then the lookup mechanism must return
the global successor of ID (present in the routing tables of
honest nodes).
2. Pseudonymous communication: an adversary should not
be able to determine the IP address corresponding to a user.
3. Privacy of user relationships: an adversary should not be
able to infer a user’s social contacts.
4. Low control overhead: the control overhead of the sys-
tem should be small to enable a scalable design. This ex-
cludes ﬂooding-based and single-hop mechanisms.
5. Low latency: the length of the path used to route to an
arbitrary identiﬁer should be small, in order to minimize
lookup latency.
6. Churn resilience: even when a signiﬁcant fraction of
nodes fail simultaneously, lookup queries should still suc-
ceed.
7. Fully decentralized design: we target a fully decentral-
ized architecture without any central points of trust/failure.
We note that requirements 2, 3 and 4 distinguish us
from prior work—state-of-the-art approaches do not pro-
vide pseudonymous routing, do not preserve privacy of user
relationships, and have high control overhead.
2.2 Threat Model and Assumptions
We assume that a fraction of real users are compromised
and colluding. Recent work [21,68,69] has leveraged the in-
sight that it is costly for an attacker to establish many trust
relationships. Following this reasoning, we assume that the
Figure 1. Illustration of honest nodes, Sybil
nodes, and attack edges between them.
number of attack edges, denoted by g, is bounded. Simi-
lar to prior work, we assume that the attack edges are not
specially chosen.
Recent work has challenged the assumption that it is
costly for an attacker to create attack edges with honest
nodes in friendship graphs [10, 13, 29, 66], and proposed
the use of interaction graphs as a more secure realization of
real world social trust. In this work, we will evaluate X-Vine
with both traditional friendship graphs as well as topologies
based on interaction graphs. Other mechanisms to infer the
strength of ties between user [28] may also be helpful in
creating resilient social graphs, but are not the focus of this
paper.
We also assume that the set of colluding compromised
nodes is a Byzantine adversary, and can deviate from the
protocol in arbitrary ways by launching active attacks on
the routing protocol. In particular, the set of compromised
nodes can launch a Sybil attack by trying to insert multiple
fake identities in the system. The key assumption we make
about the adversary is that Sybil identities are distributed
randomly in the DHT identiﬁer space. We note that this
assumption is a limitation of the X-Vine protocol, as dis-
cussed in Section 7. An exploration of defenses against ad-
versaries who concentrate their nodes in a particular region
of the overlay is beyond the scope of this paper.
2.3 Solution Overview
We start by describing our algorithm in the context of
an abstract, static network. Suppose we have a graph G,
where nodes correspond to users of the social network, and
edges correspond to social relationships between them. Our
approach runs a DHT-based routing scheme over the graph
that embeds path information in the network. We ﬁrst de-
scribe how routing is performed, and then describe how the
path information it creates can be used to mitigate Sybil at-
tackers.
Pseudonymous routing in the social network: We con-
struct a DHT on top of the social network, using mecha-
nisms similar to network layer DHTs [14]. Each node in
the network selects a random numeric identiﬁer, and main-
tains paths (trails) to its neighbors in the identiﬁer space in
a DHT-like fashion. To join the network, a node performs a
discovery process to determine a path to its successors in the
DHT. Then, the node embeds trails in the network that point
back to the joining node’s identiﬁer. To route messages,
packets are forwarded along these trails. By maintaining
trails to each of the node’s successors, a node can forward
a message to any point in the namespace. Users that are
directly connected by a social network link simply commu-
nicate via the IP layer. All communication performed by a
node is done only with its friends, and this communication
is done in a manner that does not reveal the node’s local
topology, preventing leakage of friendship list information
to non-friends. Routing over social links also enables a user
to communicate pseudonymous with respect to non-friends.
Protecting against Sybils: The scheme described above
does not mitigate the Sybil attack, as a malicious node can
repeatedly join with different identiﬁers, and thereby “take
over” a large portion of the identiﬁer space. Malicious
nodes can in fact pretend that there is an entire network
of Sybil nodes behind themselves (Figure 1). To protect
against the Sybil attack, we constrain the number of paths
between honest nodes and malicious nodes. Since Sybil
nodes by their very nature are likely to be behind a small
“cut” in the graph, by constraining the number of paths that
may be set up, we can constrain the impact that a Sybil node
can have on the entire network. In particular, honest nodes
rate-limit the number of paths that are allowed to be con-
structed over their adjacent links, thereby limiting the abil-
ity of Sybil nodes to join the routing scheme, and hence
participate in the network. When a joining node attempts to
establish a trail over an edge that has reached its limit, the
node adjacent to the full link sends the joining node a mes-
sage indicating failure of the join request. This limits Sybil
nodes from constructing very many paths into the network.
Since Sybil nodes cannot construct many trails, they can-
not place many identiﬁers into the DHT. Hence, an honest
node can send trafﬁc to another honest node by forwarding
trafﬁc over the DHT, as trails are unlikely to traverse Sybil-
generated regions of the network.
3 X-Vine Protocol
The key feature of our design is that all DHT communi-
cation happens over social network links.1 By ensuring that
all communication takes place over social network links,
1Applications such as Vuze may optionally choose to beneﬁt only from
X-Vine’s Sybil resilience, and can forgo pseudonymity by directly trans-
ferring ﬁles between overlay nodes after the lookup operation.
Figure 2. Overview of X(cid:173)Vine.
we can leverage the trust relationships in the social network
topology to enforce security properties. A trivial security
property of our design is that an adversary needs to be con-
nected to honest users via a series of social network links
to communicate with them. Moreover, the IP address of the
nodes only needs to be revealed to their contacts, enhanc-
ing privacy for users. Most importantly, our design is able
to effectively resist Sybil attacks even when the number of
attack edges is large.
3.1 Routing Over Social Networks
Figure 2 illustrates the design of X-Vine. Our design
uses a VRR-like [14] protocol to construct and maintain
state at the overlay layer. Here, we ﬁrst describe the state
maintained by each node, and then describe how that state
is constructed and maintained over time.
State maintained by each node: X-Vine constructs a so-
cial overlay on top of the social network, where a node has
direct links to friends, but also maintains “overlay links” to
remote nodes. These remote nodes (overlay endpoints) are
selected in a manner similar to Chord [59]: each node is as-
signed an identiﬁer from a ring namespace, and forms over-
lay links to nodes that are successors (immediately adjacent
in the namespace), and (optionally) ﬁngers (spaced expo-
nentially around the ring). Unlike Chord however, a node is
not allowed to directly send packets to its overlay neighbor:
for security reasons, nodes only receive packets from their
social network links. Hence, to forward a packet from a
node to one of its overlay endpoints, the packet will have to
traverse a path in the social network graph. To achieve this,
corresponding to each of its overlay endpoints, a node main-
tains a trail through the social network. Each node along
the trail locally stores a record consisting of four ﬁelds: the
identiﬁers of the two endpoints of the trail, and the IP ad-