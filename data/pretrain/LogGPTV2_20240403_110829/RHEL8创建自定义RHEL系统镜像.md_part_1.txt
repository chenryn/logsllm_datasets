[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [8]{.productnumber}
:::
# []{#index.html#idm140524612908240}创建自定义 RHEL 系统镜像 {.title}
## 在 Red Hat Enterprise Linux 8 上使用镜像构建程序创建自定义系统镜像 {.subtitle}
::: authorgroup
[Red Hat]{.orgname} [Customer Content Services]{.orgdiv}
:::
::: legalnotice
[]{#index.html#idm140524608177296}
Copyright []{.trademark}© 2021 Red Hat, Inc.
The text of and illustrations in this document are licensed by Red Hat
under a Creative Commons Attribution--Share Alike 3.0 Unported license
(\"CC-BY-SA\"). An explanation of CC-BY-SA is available at
`http://creativecommons.org/licenses/by-sa/3.0/`{.uri}. In accordance
with CC-BY-SA, if you distribute this document or an adaptation of it,
you must provide the URL for the original version.
Red Hat, as the licensor of this document, waives the right to enforce,
and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent
permitted by applicable law.
Red Hat, Red Hat Enterprise Linux, the Shadowman logo, the Red Hat logo,
JBoss, OpenShift, Fedora, the Infinity logo, and RHCE are trademarks of
Red Hat, Inc., registered in the United States and other countries.
[Linux]{.trademark}® is the registered trademark of Linus Torvalds in
the United States and other countries.
[Java]{.trademark}® is a registered trademark of Oracle and/or its
affiliates.
[XFS]{.trademark}® is a trademark of Silicon Graphics International
Corp. or its subsidiaries in the United States and/or other countries.
[MySQL]{.trademark}® is a registered trademark of MySQL AB in the United
States, the European Union and other countries.
[Node.js]{.trademark}® is an official trademark of Joyent. Red Hat is
not formally related to or endorsed by the official Joyent Node.js open
source or commercial project.
The [OpenStack]{.trademark}® Word Mark and OpenStack logo are either
registered trademarks/service marks or trademarks/service marks of the
OpenStack Foundation, in the United States and other countries and are
used with the OpenStack Foundation\'s permission. We are not affiliated
with, endorsed or sponsored by the OpenStack Foundation, or the
OpenStack community.
All other trademarks are the property of their respective owners.
:::
::: abstract
**摘要**
镜像构建器是创建部署就绪自定义系统镜像的工具：安装磁盘、虚拟机、云厂商镜像等。镜像构建器允许您比手动步骤更快地创建这些镜像,因为它提取了每种输出类型的具体内容。了解如何设置镜像构建器并使用它创建镜像。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}使开源包含更多 {.title}
:::
红帽承诺替换我们的代码、文档和网页属性中存在问题的语言。我们从这四个术语开始：
master、slave、blacklist 和
whitelist。这些更改将在即将发行的几个发行本中逐渐实施。如需了解更多详细信息，请参阅
[CTO Chris Wright
信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_composing-a-customized-rhel-system-image.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_composing-a-customized-rhel-system-image.html#proc_providing-feedback-on-red-hat-documentation_composing-a-customized-rhel-system-image}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。要做到这一点：
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
-   要提交更复杂的反馈，请创建一个 Bugzilla ticket：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%208){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#composer-description_composing-a-customized-rhel-system-image.html}
::: chapter
::: titlepage
# []{#composer-description_composing-a-customized-rhel-system-image.html#composer-description_composing-a-customized-rhel-system-image}第 1 章 镜像构建器描述 {.title}
:::
::: section
::: titlepage
# []{#composer-description_composing-a-customized-rhel-system-image.html#introduction-to-composer_composer-description}Image Builder 简介 {.title}
:::
您可以使用镜像构建器（Image Builder）创建 Red Hat Enterprise Linux
的自定义系统镜像，包括准备在云平台上部署的系统镜像。镜像构建器自动处理每种输出类型的设置详情,因此比手动创建镜像方法更容易使用且更快。您可以使用
`composer-cli`{.literal} 工具中的命令行界面或 RHEL 8 web
控制台中的图形用户界面访问 Image Builder 功能。
从 Red Hat Enterprise Linux 8.3 开始, `osbuild-composer`{.literal}
后端替换了 `lorax-composer`{.literal}。新服务为镜像构建提供 REST
API。因此，用户可从更可靠的后端及更可预测的输出镜像中受益。
镜像构建器作为系统服务 `osbuild-composer`{.literal}
运行。您可以通过两个接口与这个服务交互：
::: itemizedlist
-   在终端中运行命令的 CLI 工具
    `composer-cli`{.literal}。这个方法是首选的。
-   RHEL 8 web 控制台的 GUI 插件。
:::
:::
::: section
::: titlepage
# []{#composer-description_composing-a-customized-rhel-system-image.html#composer-terminology_composer-description}镜像构建器术语 {.title}
:::
::: variablelist
[蓝图（Blueprint）]{.term}
:   蓝图通过列出将属于系统一部分的软件包和自定义来定义自定义系统镜像。蓝图可以被编辑并被版本化。从蓝图创建系统镜像时,镜像与
    RHEL 8 web 控制台 Image Builder 界面中的蓝图关联。
    蓝图以纯文本形式显示,采用 Tom 的 Obvious, Minimal
    Language(TOML)格式。
[组合（Compose）]{.term}
:   组合(Compose)是基于特定蓝图的特定版本的系统镜像的独立构建。作为一个术语，Compose
    代表系统镜像以及来自其创建、输入、元数据和进程本身的日志。
[自定义（Customizations）]{.term}
:   自定义是系统规格,它们不是软件包。这包括用户、组和 SSH 密钥。
:::
:::
::: section
::: titlepage
# []{#composer-description_composing-a-customized-rhel-system-image.html#composer-output-formats_composer-description}镜像构建器输出格式 {.title}
:::
镜像构建器可以使用下表中显示的多个输出格式创建镜像。
::: table
[]{#composer-description_composing-a-customized-rhel-system-image.html#idm140524602018016}
**表 1.1. 镜像构建器输出格式**
::: table-contents
  描述                      CLI 名称                          文件扩展
  ------------------------- --------------------------------- --------------------
  QEMU QCOW2 镜像           `qcow2`{.literal}                 `.qcow2`{.literal}
  TAR 归档                  `tar`{.literal}                   `.tar`{.literal}
  Amazon Machine 镜像磁盘   `ami`{.literal}                   `.raw`{.literal}
  Azure 磁盘镜像            `vhd`{.literal}                   `.vhd`{.literal}
  VMware 虚拟机磁盘         `vmdk`{.literal}                  `.vmdk`{.literal}
  Openstack                 `openstack`{.literal}             `.qcow2`{.literal}
  RHEL for Edge Commit      `rhel-edge-commit`{.literal}      `.tar`{.literal}
  RHEL for Edge Container   `rhel-edge-container`{.literal}   `.tar`{.literal}
  RHEL for Edge Installer   `rhel-edge-installer`{.literal}   `.iso`{.literal}
:::
:::
:::
::: section
::: titlepage
# []{#composer-description_composing-a-customized-rhel-system-image.html#composer-system-requirements_composer-description}镜像构建器系统要求 {.title}
:::
在创建系统镜像时，底层镜像构建器的 `osbuild-composer`{.literal}
工具会执行一些存在潜在的不安全因素的操作。因此，使用虚拟机来运行 Image
Builder。
Image Builder 运行的环境（如虚拟机）必须满足下表中列出的要求。
::: table
[]{#composer-description_composing-a-customized-rhel-system-image.html#idm140524501202608}
**表 1.2. 镜像构建器系统要求**
::: table-contents
  参数       最低要求值
  ---------- ------------------
  系统类型   专用虚拟机
  处理器     2 个内核
  内存       4 GiB
  磁盘空间   20 GiB
  访问权限   管理员级别(root)
  网络       连接至互联网
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
不支持在 UEFI 系统中直接安装的虚拟机中创建镜像。
:::
:::
:::
[]{#installing-composer_composing-a-customized-rhel-system-image.html}
::: chapter
::: titlepage
# []{#installing-composer_composing-a-customized-rhel-system-image.html#installing-composer_composing-a-customized-rhel-system-image}第 2 章 安装镜像构建器 {.title}
:::
在使用 Image Builder 之前,您必须在虚拟机上安装 Image Builder。
::: section
::: titlepage
# []{#installing-composer_composing-a-customized-rhel-system-image.html#installing-composer-in-a-virtual-machine_installing-composer}在虚拟机中安装镜像构建器 {.title}
:::
要在专用虚拟机上安装镜像构建器,请按照以下步骤执行：
::: itemizedlist
**先决条件**
-   连接到虚拟机。
-   Image Builder 的虚拟机必须被安装、订阅并正在运行。
:::
::: orderedlist
**流程**
1.  在虚拟机上安装 Image Builder 和其他必要的软件包：
    ::: itemizedlist
    -   `osbuild-composer`{.literal} - 随后从 RHEL 8.3 支持
    -   `composer-cli`{.literal}
    -   `cockpit-composer`{.literal}
    -   `bash-completion`{.literal}
    :::
    ``` screen
    # yum install osbuild-composer composer-cli cockpit-composer bash-completion
    ```
    Web 控制台作为 [*cockpit-composer*]{.emphasis} 软件包的依赖项安装。
2.  在每次重启后启动镜像构建器：
    ``` screen
    # systemctl enable --now osbuild-composer.socket
    # systemctl enable cockpit.socket
    ```
    `osbuild-composer`{.literal} 和 `cockpit`{.literal}
    服务在第一次访问时自动启动。
3.  将系统防火墙配置为允许访问 Web 控制台：
    ``` screen
    # firewall-cmd --add-service=cockpit && firewall-cmd --add-service=cockpit --permanent
    ```