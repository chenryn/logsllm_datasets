counted  correctly.  As  a  by-product,  the  integrity  of  the 
election is strengthened as each voter verifies his own vote. 
The main issue is in all the ways the verification process can 
be  abused.  We  believe  reliable  verification  to  be  an  open 
problem.  We  have  voting  receipts  in  our  system,  but  many 
attacks,  including  forged  receipts,  remain.  Someone  could 
make  a  fake  receipt.  Election  officials  may  not  know  if  a 
machine malfunctioned, or if the voter is cheating. As a last 
defense  against  forged  receipts,  a  random  paper  trail  audit 
that  identifies  legitimate  receipts  (e.g.,  a  receipt  must  share 
the  same  ballot  number  as  found  on  the  paper  trail)  could 
reveal possible malfeasance. We will investigate these issues 
in future work. 
5.  Related Work 
     Karlof  et  al.  conducted  a  systems  analysis  [21]  of 
Chaum’s visual cryptography receipt scheme [6] and Neff’s 
VoteHere [30] scheme. Although this work was primarily on 
515
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:11:35 UTC from IEEE Xplore.  Restrictions apply. 
the system implementation of cryptographic voting protocols, 
they showed many different areas of weaknesses in these vot-
ing  systems  including  subliminal  channels,  social  engineer-
ing, denial of service, and other human factors. Our work al-
so  concentrates  on  the  systems  aspects  of  a  voting  system, 
but our voting system provides election integrity using sim-
pler methods. 
     Some  of  the  main  functionality  of  an  electronic  voting 
system  may  be  entrusted  to  a  machine  including  printing  a 
ballot, validating a ballot, and storing cryptographic keys. To 
protect against machine threats, other types of voting systems 
advocate the use of trusted hardware [10, 21, 39], and some 
suggest  verification  of  software  integrity  [13].  Because  a 
trusted platform module (TPM) is a hardware device that can 
be  used  to  store  secrets,  we  use  this  device  in  our  voting 
system to make an attack on voter privacy and forged ballots 
more difficult than an attack on an unprotected machine. 
     Our  attestation  approach  is  inspired  by  Kauer  [22]  who 
first created an authenticated boot loader using  skinit on an 
x86 AMD processor. Because the hardware and software of a 
voting  machine  is  known,  once  we  get  a  machine  into  a 
known  state,  we  can  similarly  verify  a  meaningful  configu-
ration. Later work by McCune et al. discuss applications us-
ing  the  TPM  to  protect  data  (sealed  storage)  that  can  be 
combined with the dynamic root of trust [27]. In our imple-
mentation, we plan to experiment with sealed storage to dis-
allow execution of the voting software unless machine-based 
attestation is successful. Although some voters may still want 
to attest the machine, this could provide additional assurance 
about the  machine’s configuration even  when voters choose 
not to attest. 
     The OVC voting system [23] is similar to our work in its 
use of open-source code, but there are  many differences.  In 
the OVC system, the voter has the option to verify the ballot 
by using another verification machine in the polling station. 
Unfortunately, there is no possibility for a voter to verify his 
vote actually counted. This system is incompatible  with our 
goal of protecting election integrity and allowing  individual 
voter verification. 
6.  Conclusion 
     The  procedures  and  techniques  described  above  using 
open-source  software  and  shared  keys  provide  a  basis  for 
elections  that  people  can  have  confidence  in  and  which  are 
much harder to tamper with. In particular, the entire system 
has  to  be  made  secure,  starting  at  the  top  of  the  election 
chain.  From  election  key  generation  to  the  final  count,  re-
dundant  safeguards  are  built  in  at  various  places  to  prevent 
tampering at various places in the process. 
     By  addressing  the  lessons  of  past  elections  with  a  more 
auditable registration system and better voter ID cards, elec-
tion integrity is bolstered. The fully audited registration pro-
cess  helps  record  each  voter’s  registration.  For  election  day 
authentication, voters have a relatively strong authentication 
516
token (Si1 on a voter ID card). When the voter goes to vote, 
they  now  have  (Si2)  and  know  (a  password)  secrets  that  no 
one else has in order to vote. After the voter has  voted, the 
voter  can  use  their  human-readable  verification  receipt  to 
confirm their vote was included in the final tally, and statisti-
cal  paper-based  audits  provide  an  additional  defense  of  the 
reported result’s integrity. 
     Protections  that  preserve  election  integrity  should  help 
guide  designers  of  voting  systems  in  avoiding  potential  at-
tacks.  We  mitigate  several  attacks  with  our  use  of  open-
source code, through open and public design of the election 
procedures,  and  by  hardware  protection  for  cryptographic 
keys. By using these mechanisms to defend election integrity, 
a system like this may begin to approach a situation in which 
electronic voting systems can begin to be trusted. 
Acknowledgement.  We  thank  Thomas  Quillinan,  Martijn 
Warnier,  Jeff  Napper,  Srijith  K.  Nair,  and  the  anonymous 
reviewers for their valuable comments. 
7.  References 
[1]  AMD64  Architecture  Programmer’s  Manual.  Volume  2:  System 
Programming. AMD Corp., Sept. 2007. 
[2] A. Aviv, et al. Security Evaluation of ES&S Voting Machines and 
Election  Management  System.  In  Proceedings  of  the  2008 
USENIX/ACCURATE Electronic Voting Technology Workshop, Jul. 
2008. 
[3] J. Benaloh. Administrative and Public Verifiability: Can We Have 
the  2008  USENIX/ACCURATE 
Both?  In  Proceedings  of 
Electronic Voting Technology Workshop, Jul. 2008. 
[4]  D.  Bowen.  Secretary  of  State  Debra  Bowen  Moves  to  Strengthen 
Voter  Confidence  in  Election  Security  Following  Top-to-Bottom 
Review of Voting Systems. Press Release. Aug. 3, 2007. 
[5] K. Butler, et al. Systemic Issues in the Hart InterCivic and Premier 
Voting Systems: Reflections on Project EVEREST. In Proceedings 
of  the  2008  USENIX/ACCURATE  Electronic  Voting  Technology 
Workshop, Jul. 2008. 
[6] D. Chaum. Secret-ballot Receipts: True Voter-verifiable Elections. 
In  IEEE  Security  &  Privacy  Magazine,  2(1):38—47,  Jan.—Feb. 
2004. 
[7]  D.  Chaum  and  P.  Ryan.  A  Practical,  Voter-Verifiable  Election 
Scheme.  In  Proceedings  of  the  10th  European  Symposium  on 
Research in Computer Security. Sept. 2005. 
[8] D. Chaum, et al. Scantegrity II: End-to-End Verifiability for Optical 
Scan Eleection Systems using Invisible Ink Confirmation Codes. In 
Proceedings  of  the  2008  USENIX/ACCURATE  Electronic  Voting 
Technology Workshop, Jul. 2008. 
[9]  H.  Clark.  Democratic  Primary:  Voter  Lists  Called  into  Question. 
Santa Fe New Mexican, Feb. 25, 2008. 
[10]  M.  Clarkson,  S.  Chong,  A.  Myers.  Civitas:  Toward  a  Secure 
Voting  System.  In  Proceedings  of  the  28th  IEEE  Symposium  on 
Security and Privacy, May 2008. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:11:35 UTC from IEEE Xplore.  Restrictions apply. 
[11] M. Doig.  Analysis Points to Bad Ballot Design.  Herald  Tribune. 
Dec. 5, 2006. 
[12] A Master List of 70+ Voting Machine Failures and Miscounts by 
State. http://www.commoncause.org/VotingMachine-
FailuresMasterList. 
[13] A. Feldman, J. Halderman, and E. Felten. Security Analysis of the 
Diebold Accuvote-TS Voting Machine. In Proceedings of the 2007 
USENIX/ACCURATE  Electronic  Voting  Technology  Workshop, 
Aug. 2007.  
[14] K. Fisher, R. Carback, and A. Sherman. Punchscan: Introduction 
and  System  Definition.  In Proceedings  of  the  2006  Workshop  on 
Trustworthy Elections (WOTE), Jun. 2006. 
 [15] L. Gong, M. Lomas, R. Needham, and J. Saltzer. Protecting Poorly 
Chosen  Secrets  from  Guessing  Attacks.  In  IEEE  Journal  on 
Selected Areas in Communications, 11(5):648-656, June 1993. 
In  Proceedings 
 [16]  R.  Gonggrijp  and  W.  Hengeveld.  Stichting  “Wij  vertrouwen 
2007 
stemcomputers 
USENIX/ACCURATE  Electronic  Voting  Technology  Workshop, 
Aug. 2007. 
[17]  J.  Hall.  Transparency  and  Access  to  Source  Code  in  Electronic 
the  2006  USENIX/ACCURATE 
Voting.  In  Proceedings  of 
Electronic Voting Technology Workshop, Aug. 2006. 
[18]  Honolulu  Hosts  Nation’s  First  All-Digital  Election.  Associated 
niet.” 
the 
of 
Press. May 24, 2009. 
[19]  Intel  64  and  IA-32  Architectures  Software  Developer’s  Manual 
Volume 2B: Instruction Set Ref., N-Z. March 2009. 
[20] D. Jones. Misassessment of Security in Computer-Based Election 
Systems. In RSA Lab 
Cryptobytes, 7, 2 (Fall 2004) 9-13. 
http://www.rsasecurity.com/rsalabs/cryptobytes/Crypto
Bytes_Fall2004.pdf. 
[21]  C.  Karlof,  N.  Sastry,  and  D.  Wagner.  Cryptographic  Voting 
Protocols:  A  Systems  Perspective.  In  the  14th  USENIX  Security 
Symposium, August 2005. 
[22] B. Kauer. OSLO: Improving the Security of Trusted Computing. In 
Proceedings of the 16th USENIX Security Symposium, Aug. 2007. 
[23] A. Keller, et al. A PC-Based Open-Source Voting Machine with an 
Accesssible  Voter-Verifiable  Paper  Ballot.  In  Proceedings  of  the 
2005  Free  and  Open  Source  Software  (FREENIX)  Annual 
Technical Conference, Aug. 2007. 
[24]  A.  Kiayias,  et  al.  Tampering  with  Special  Purpose  Computing 
Devices: A Case Study in Optical Scan E-Voting. In Proceedings of 
the  23rd  Annual  Computer  Security  Applications  Conference 
(ACSAC), Dec. 2007. 
[25] T. Kohno, A. Stubblefield, A. Rubin, D. Wallach. Analysis of an 
Electronic  Voting  System.  In  the  Proceedings  of  the  25th  IEEE 
Symposium on Security and Privacy, May 2004. 
[26]  S.  Majors.  Voting  Machine  Maker  Discloses  Program  Error. 
Associated Press, Aug. 21, 2008. 
[27] J. McCune, B. Parno, A. Perrig, M. Reiter, and H. Isozaki. Flicker: 
An Execution Infrastructure for TCB Minimization. In Proceedings 
of 
the  ACM  European  Conference  on  Computer  Systems 
(EUROSYS), Apr. 2008. 
[28] M. McDonald. (Nearly) Final 2008 Early Voting Statistics. Jan. 11, 
2009. http://elections.gmu.edu/Early_Vo-
ting_2008_Final.html. 
[29]  L.  Minnite.  An  Analysis  of  Voter  Fraud  in  the  United  States. 
Demos. Nov. 19, 2007. 
[30] C. Neff. Practical High Certainty Intent Verification for Encrypted 
http://www.votehere.net/old/vhti/-
Votes. 
documentation/vsv-2.0.3638.pdf. 
[31]  L.  Norden  and  J.  Allen.  Final  Report  2008-2009  Ohio  Election 
2009. 
Conference. 
Apr. 
8, 
and 
Summit 
http://www.brennancenter.org/page/-
/publications/Ohio.Final.Report.pdf. 
[32] N. Paul and A. Tanenbaum. Trustworthy Voting: From Machine to 
System. IEEE Computer, pp. 23-29,  May 2009. 
[33] R. Pierre. Botched Name Purge Denied Some the Right to Vote. 
The Washington Post, May 31, 2001. 
[34]  W.  Pieters.  La  Volonté  Machinale.  PhD  Thesis.  Radboud 
Universiteit Nijmegen, 2007. 
[35]  S.  Popoveniuc  and  B.  Hosp.  An  Introduction  to  Punchscan.  In 
Proceedings  of  the  2006  Workshop  on  Trustworthy  Elections 
(WOTE), Jun. 2006. 
[36] E. Proebstel, et al. An Analysis of the Hart Intercivic DAU eSlate. 
In Proceedings of the 2007 USENIX/ACCURATE Electronic Voting 
Technology Workshop, Aug. 2007. 
[37] R. Rivest and J. Wack. On the Notion of “Software Independence” 
2006.  
in  Voting  Systems.  Draft 
version, 
http://vote.nist.gov/SI-in-voting.pdf. 
[38]  R.  Rivest  and  W.  Smith.  Three  Voting  Protocols:  ThreeBallot, 
VAV, and Twin. In Proceedings of the 2007 USENIX/ACCURATE 
Electronic Voting Technology Workshop, Aug. 2007. 
[39] D. Sandler and D. Wallach. Casting Votes in the Auditorium. In 
Proceedings  of  the  2007  USENIX/ACCURATE  Electronic  Voting 
Technology Workshop, Aug. 2007. 
[40]  C.  Thompson.  Can  You  Count  on  Voting  Machines?  New  York 
July 
28, 
Times, Jan. 6, 2008. 
[41] T. Bibbetts and S. Mullis. Challenged Ballots: You be the Judge – 
Round 
2008. 
http://minnesota.publicradio.org/features/2008/11/19_c
hallenged_ballots/round1/. 
[42] I. Urbina. States’ Actions to Block Voters Appear Illegal. New York 
Dec. 
1. 
1, 
Times, Oct. 8, 2008. 
[43] A. Yasinsac, et al. Software Review and Security Analysis of the 
ES&S  iVotronic  8.0.1.2  Voting  Machine  Firmware.  Feb.  2007. 
http://www.cs.berkeley.edu/~daw/papers/-
sarasota07.pdf. 
517
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:11:35 UTC from IEEE Xplore.  Restrictions apply.