Computer、COMPUTER或computer，三者是不一样的。
● 28 第1章 数据库和SQL
■常数的书写方式是固定的
SQL语句常常需要直接书写字符串A、日期或者数字。例如，书写向
注A
一个以上的连续字符。 表中插入字符串、日期或者数字等数据的SQL语句。
KEYWORD 在SQL语句中直接书写的字符串、日期或者数字等称为常数。常数
●常数 的书写方式如下所示。
●单引号（'）
SQL语句中含有字符串的时候，需要像'abc'这样，使用单引号（'）
将字符串括起来，用来标识这是一个字符串。
SQL语句中含有日期的时候，同样需要使用单引号将其括起来。日期
的格式有很多种（'26 Jan 2010'或者'10/01/26'等），本书统
一使用'2010-01-26'这种'年-月-日'的格式。
在SQL语句中书写数字的时候，不需要使用任何符号标识，直接写
成1000这样的数字即可。
法则1-7
字符串和日期常数需要使用单引号（'）括起来。
数字常数无需加注单引号（直接书写数字即可）。
■单词需要用半角空格或者换行来分隔
KEYWORD SQL语句的单词之间需使用半角空格或换行符来进行分隔。如下这
●错误 种未加分隔的语句会发生错误，无法正常执行。
由程序不匹配、故障、输入错误
等多种原因造成的系统或者程序
○ CREATE TABLE Product
未按照预定处理执行或者无法执
行的状况。通常出错时，处理会 × CREATETABLE Product
被强制终止，并显示错误信息。
× CREATE TABLEProduct
但是不能使用全角空格作为单词的分隔符，否则会发生错误，出现无
法预期的结果。
法则1-8
单词之间需要使用半角空格或者换行符进行分隔。
1-3 SQL概要 29 ●
专 栏
标准SQL和特定的SQL
每隔几年，ANSI（美国国家标准协会）或ISO（国际标准化组织）等便会修
订SQL的标准，进行语法的修订并追加新功能。
1986年，ANSI首次制定了SQL的标准，之后又进行了数次修订。本书编写
时（2016年5月）使用的是2011年修订的最新版本（SQL：2011）。修订后的标
准以修订年份来命名，例如SQL:1999、SQL:2003、SQL:2008等。以这些标准为
基准的SQL就是标准SQL。
但是，SQL的标准并不强制“每种RDBMS都必须使用”。虽然支持标准SQL
的RDBMS越来越多，但还是存在标准SQL无法执行的情况。这时就需要使用只
能在特定RDBMS中使用的特殊SQL语句。
其实，这也是没有办法的事情，起初（大约在20世纪80年代到90年代），
标准SQL能够实现的功能非常有限，无法完全满足实际需要。RDBMS的供应商
为了弥补这些不足，不得不再单独追加所需要的功能。
尽管如此，这些特定的SQL所带来的并不都是负面的影响。标准SQL将一些
独特的功能收录其中，对其自身的发展起到了积极的推进作用。过去，各个供应
商为了展现本公司的优势和独特性，也曾不遗余力地开发各自特定的SQL。
目前的标准SQL经过多次修订，功能已经十分完善。准备学习SQL的读者
们，就让我们先从牢记标准SQL的书写方法开始吧。
● 30 第1章 数据库和SQL
第1章 数据库和SQL
1-4
表的创建
● 表通过CREATE TABLE语句创建而成。
学习要点
● 表和列的命名要使用有意义的文字。
● 指定列的数据类型（整数型、字符型和日期型等）。
● 可以在表中设置约束（主键约束和NOT NULL约束等）。
表的内容的创建
我们将从第2章开始学习针对表的查询，以及数据变更等SQL语句。
本节将会创建学习这些SQL语句所需的数据库和表。
表1-2是1-2节举例时使用的商品表。
表1-2 商品表
商品编号 商品名称 商品种类 销售单价 进货单价 登记日期
0001 T恤衫 衣服 1000 500 2009-09-20
0002 打孔器 办公用品 500 320 2009-09-11
0003 运动T恤 衣服 4000 2800
0004 菜刀 厨房用具 3000 2800 2009-09-20
0005 高压锅 厨房用具 6800 5000 2009-01-15
0006 叉子 厨房用具 500 2009-09-20
0007 擦菜板 厨房用具 880 790 2008-04-28
0008 圆珠笔 办公用品 100 2009-11-11
该表是某家小商店销售商品的一览表。商品的数量不多，不过我们可
以把它想象成大量数据中的一部分（毕竟这只是为了学习SQL而创建的
表）。像0003号商品的登记日期以及0006号商品的进货单价这样的空
白内容，我们可以认为是由于店主疏忽而忘记输入了。
memo
1-4 表的创建 31 ●
大家可以看到表1-2由6列8行所组成。最上面一行是数据的项目名，
真正的数据是从第2行开始的。
备忘
接下来，我们会逐步学习创建数据库和表所使用的SQL语句的书写方式。还
没有准备好学习环境（PostgreSQL）的读者，请按照第0章的内容进行准备。
数据库的创建（ 语句）
CREATE DATABASE
KEYWORD 前面提到，在创建表之前，一定要先创建用来存储表的数据库。运行
●CREATE DATABASE语句
CREATE DATABASE语句就可以在RDBMS上创建数据库了。CREATE
DATABASE语句的语法如下所示A。
注A
语法1-1 创建数据库的CREATE DATABASE语句
这里我们仅指定了使用该语法所
需的最少项目，实际开发数据库
CREATE DATABASE ;
时还需要指定各种其他项目。
这里我们将数据库命名为shop，然后执行代码清单1-1中的SQL
语句B。
注B
第0章中介绍了在PostgreSQL中
运行SQL语句的方法。执行了第0 代码清单1-1 创建数据库shop的CREATE DATABASE语句
章内容的读者应该已经创建好了
CREATE DATABASE shop;
名为shop的数据库。接下来请继
续完成创建表的工作。
此外，数据库名称、表名以及列名都要使用半角字符（英文字母、数
KEYWORD 字、符号），具体内容随后会进行介绍。
●CREATE TABLE语句
表的创建（ 语句）
CREATE TABLE
创建好数据库之后，接下来我们使用CREATE TABLE语句在其中
注C
这里我们仅指定了使用该语法 创建表。CREATE TABLE语句的语法如下所示C。
所需的最少项目，实际开发数据
库时还需要指定各种其他项目。
● 32 第1章 数据库和SQL
语法1-2 创建表的CREATE TABLE语句
CREATE TABLE 
（  ，
  ，
  ，
  ，
.
.
.
， ，……）；
该语法清楚地描述了我们要创建一个包含、、 ……
的名称为的表，非常容易理解。每一列的数据类型（后述）是必
须要指定的，还要为需要的列设置约束（后述）。约束可以在定义列的时
注A 候进行设置，也可以在语句的末尾进行设置A。
但是NOT NULL约束只能以列为
在数据库中创建表1-2中的商品表（Product表）的CREATE
单位进行设置。
TABLE语句，如代码清单1-2所示。
代码清单1-2 创建Product表的CREATE TABLE语句
CREATE TABLE Product
(product_id CHAR(4) NOT NULL,
product_name VARCHAR(100) NOT NULL,
product_type VARCHAR(32) NOT NULL,
memo
sale_price INTEGER ,
purchase_price INTEGER ,
regist_date DATE ,
PRIMARY KEY (product_id));
备忘
本书将陆续创建出Product表等学习中用到的一些示例表。创建这些表的
SQL语句保存在本书示例程序\Sample\CreateTable\文件夹
下的CreateTable.sql文件中。例如在PostgreSQL中创建Product
表所使用的SQL语句，就保存在本书示例代码\Sample\CreateTable\
PostgreSQL文件夹下的CreateTableProduct.sql文件中。
CreateTableProduct.sql文件包含了创建Product表时用到的SQL
语句（代码清单1-2），以及向Product表中插入数据的SQL语句（代码清单
1-6）。这样就可以在创建表的同时向表中预先插入数据了。
1-4 表的创建 33 ●
命名规则
我们只能使用半角英文字母、数字、下划线（_）作为数据库、表和
列的名称 。例如，不能将product_id写成product-id，因为标
准SQL并不允许使用连字符作为列名等名称。$、#、?这样的符号同样
不能作为名称使用。
尽管有些RDBMS允许使用上述符号作为列的名称，但这也仅限于在
该RDBMS中使用，并不能保证在其他RDBMS中也能使用。虽然大家可
能会觉得限制有点太多了，但还是请遵守规则使用半角英文字母、数字和
下划线（_）吧。
法则1-9
数据库名称、表名和列名等可以使用以下三种字符。
● 半角英文字母 ● 半角数字 ● 下划线（_）
此外， 名称必须以半角英文字母开头 。以符号开头的名称并不多见，
但有时会碰到类似1product或者2009_sales这样以数字开头
的名称。虽然可以理解，但这在标准SQL中是被禁止的。请大家使用
product1或者sales_2009这样符合规则的名称。
法则1-10
名称必须以半角英文字母作为开头。
最后还有一点，在同一个数据库中不能创建两个相同名称的表，在同
一个表中也不能创建两个名称相同的列。如果出现这样的情况，RDBMS
会返回错误信息。
法则1-11
名称不能重复。
接下来我们根据上述规则，使用代码清单1-2中的CREATE TABLE语
句来创建表1-2中的商品表。表名为Product，表中的列名如表1-3所示。
● 34 第1章 数据库和SQL
表1-3 商品表和Product表列名的对应关系
商品表中的列名 Product表定义的列名
商品编号 product_id
商品名称 product_name
商品种类 product_type
销售单价 sale_price
进货单价 purchase_price
登记日期 regist_date
数据类型的指定
Product表所包含的列，定义在CREATE TABLE Product( )
KEYWORD 的括号中。列名右边的INTEGER或者CHAR等关键字，是用来声明该
●数据类型
列的数据类型的，所有的列都必须指定数据类型。
●数字型
●字符型 数据类型表示数据的种类，包括数字型、字符型和日期型等。每一列
●日期型
都不能存储与该列数据类型不符的数据。声明为整数型的列中不能存
储'abc'这样的字符串，声明为字符型的列中也不能存储1234这样的数字。
数据类型的种类很多，各个RDBMS之间也存在很大差异。根据业务
需要实际创建数据库时，一定要根据不同的RDBMS选用最恰当的数据类
型。在学习SQL的时候，使用最基本的数据类型就足够了。下面我们就
来介绍四种基本的数据类型。
KEYWORD ●INTEGER型
●INTEGER型
用来指定存储整数的列的数据类型（数字型），不能存储小数。
KEYWORD ●CHAR型
●CHAR型
CHAR是CHARACTER（字符）的缩写，是用来指定存储字符串的列
的数据类型（字符型）。可以像CHAR(10)或者CHAR(200)这样，在
括号中指定该列可以存储的字符串的长度（最大长度）。字符串超出最大
注A
长度的部分是无法输入到该列中的。RDBMS不同，长度单位也不一样，
字节是计算机内部的数据单位。
一个字符通常需要1到3个字节 既存在使用字符个数的情况，也存在使用字节长度A的情况。
来表示（根据字符的种类和表现
方式有所不同）。
1-4 表的创建 35 ●
字符串以 定长字符串 的形式存储在被指定为CHAR型的列中。所谓
定长字符串，就是当列中存储的字符串长度达不到最大长度的时候，使用半
角空格进行补足。例如，我们向CHAR(8)类型的列中输入'abc'的时候，
KEYWORD
●定长字符串 会以'abc '（abc后面有5个半角空格）的形式保存起来。
另外，虽然之前我们说过SQL不区分英文字母的大小写，但是表中
存储的字符串却是区分大小写的。也就是说，'ABC'和'abc'代表了两
个不同意义的字符串。
KEYWORD ●VARCHAR型
●VARCHAR型
同CHAR类型一样，VARCHAR型也是用来指定存储字符串的列的
●可变长字符串
数据类型（字符串类型），也可以通过括号内的数字来指定字符串的长度（最
注B 大长度）。但该类型的列是以 可变长字符串 的形式来保存字符串的B。定
VARCHAR中的VAR是VARING 长字符串在字符数未达到最大长度时会用半角空格补足，但可变长字符串
（可变的）的缩写。
不同，即使字符数未达到最大长度，也不会用半角空格补足。例如，我们
向VARCHAR(8)类型的列中输入字符串'abc'的时候，保存的就是字
符串'abc'。
该类型的列中存储的字符串也和CHAR类型一样，是区分大小写的。
特定的SQL
KEYWORD Oracle中使用VARCHAR2型（Oracle中也有VARCHAR这种数据类型，但并不推荐使用）。
●VARCHAR2型
KEYWORD ●DATE型
●DATE型
用来指定存储日期（年月日）的列的数据类型（日期型）。
特定的SQL
除了年月日之外，Oracle中使用的DATE型还包含时分秒，但在本书中我们只学
习日期部分。
约束的设置
KEYWORD 约束是除了数据类型之外，对列中存储的数据进行限制或者追加条件
●约束
的功能。Product表中设置了两种约束。
● 36 第1章 数据库和SQL
Product 表的 product_id 列、product_name 列和
product_type列的定义如下所示。
product_id CHAR(4) NOT NULL,