-   虚拟机性能
-   虚拟化主机性能
:::
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_syntax_of_profile_configuration_2}配置集配置的语法
`tuned.conf`{.literal} 文件可以包含一个 `[main]`{.literal}
部分，其他部分用于配置插件实例。但是，所有部分都是可选的。
以 hash 符号(`#`{.literal})开头的行是注释。
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页.
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#the-default-tuned-profile_customizing-tuned-profiles}默认 TuneD 配置集 {.title}
:::
在安装过程中，将自动选择您的系统的最佳配置集。目前，会根据以下自定义规则选择默认配置集：
::: informaltable
  环境           默认配置集                           目标
  -------------- ------------------------------------ ----------------------------------------------------------------------------------------------------------------------
  Compute 节点   `throughput-performance`{.literal}   最佳吞吐量性能
  虚拟机         `virtual-guest`{.literal}            最佳的性能。如果实现最佳性能并不是您最需要考虑的，可以将其改为 `balance`{.literal} 或 `powersave`{.literal} 配置集。
  其他情况       `balanced`{.literal}                 平衡性能和能源消耗
:::
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页.
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#merged-tuned-profiles_customizing-tuned-profiles}合并的 TuneD 配置集 {.title}
:::
作为实验性功能，可以一次性选择更多配置集。[**tuned**]{.strong}
将尝试在负载期间合并它们。
如果存在冲突，则最后指定的配置集的设置会优先使用。
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048842649904}
**例 2.1. 虚拟客户端中低功耗**
::: example-contents
以下示例优化了在虚拟机中运行的系统，以获得最佳性能，并同时将其调优以实现低功耗，低功耗比高性能有更高优先级：
``` screen
# tuned-adm profile virtual-guest powersave
```
:::
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
合并会在不检查生成的参数组合是否有意义的情况下自动进行。因此，该功能可能会以相反的方式调整一些参数，这么做可能会影响生产效率。例如，使用
`throughput-performance`{.literal}
配置集针对高吞吐量设置磁盘，但当前通过 `spindown-disk`{.literal}
配置集将磁盘旋转设置为低值。
:::
::: title
**其他资源**
:::
\*`tuned-adm`{.literal} man page. \* `tuned.conf(5)`{.literal} man page.
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#the-location-of-tuned-profiles_customizing-tuned-profiles}TuneD 配置集的位置 {.title}
:::
[**TuneD**]{.strong} 配置集存储在以下目录中：
::: variablelist
[`/usr/lib/tuned/`{.literal}]{.term}
:   特定于分发的配置文件存储在目录中。每个配置集都有自己的目录。该配置集由名为
    `tuned.conf`{.literal}
    的主配置文件以及其他文件（如帮助程序脚本）组成。
[`/etc/tuned/`{.literal}]{.term}
:   如果您需要自定义配置集，请将配置集目录复制到用于自定义配置集的目录中。如果同一名称有两个配置集，则使用位于
    `/etc/tuned/`{.literal} 中的自定义配置集。
:::
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页.
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#inheritance-between-tuned-profiles_customizing-tuned-profiles}TuneD 配置集之间的继承 {.title}
:::
[**TuneD**]{.strong}
配置集可以基于其他配置集，仅修改其父级配置集的某些方面。
[**TuneD**]{.strong} 配置集的 `[main]`{.literal} 部分可以识别
`include`{.literal} 选项：
``` screen
[main]
include=parent
```
[*[父]{.replaceable}*]{.emphasis} 配置集中的所有设置都会加载到此
[*子*]{.emphasis} 配置集中。在以下小节中，[*child*]{.emphasis}
配置集可以覆盖从 [*[parent]{.replaceable}*]{.emphasis}
配置集继承的特定设置，或者添加 [*[parent]{.replaceable}*]{.emphasis}
配置集中没有的新设置。
您可以基于 `/usr/lib/tuned/`{.literal} 中预安装的配置集，在
`/etc/tuned/`{.literal} 目录中创建自己的 [*child*]{.emphasis}
配置集并调整了一些参数。
如果对 [*[parent]{.replaceable}*]{.emphasis} 配置集（如
[**TuneD**]{.strong} 升级后）进行了更新，则更改会反映在
[*child*]{.emphasis} 配置集中。
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048719921776}
**例 2.2. 基于均衡的节能配置集**
::: example-contents
以下是一个可扩展 `balanced`{.literal}
配置集的自定义配置集，并将所有设备的主动链路电源管理(ALPM)设置为最大节能项。
``` screen
[main]
include=balanced
[scsi_host]
alpm=min_power
```
:::
:::
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#static-and-dynamic-tuning-in-tuned_customizing-tuned-profiles}TuneD 中的静态和动态性能优化 {.title}
:::
这部分解释了 [**TuneD**]{.strong}
应用的两个系统性能优化类别之间的差别：[*静态*]{.emphasis}和[*动态*]{.emphasis}。
::: variablelist
[静态调整]{.term}
:   主要由预定义的 `sysctl`{.literal} 和 `sysfs`{.literal}
    设置的应用程序组成，以及激活多个配置工具（如 `ethtool`{.literal}
    ）的一次性激活。
[动态调整]{.term}
:   监视如何在系统正常运行时间期间使用各种系统组件。[**tuned**]{.strong}
    根据监控信息动态调整系统设置。
    例如，硬盘驱动器在启动和登录期间大量使用，但当用户主要可能与 Web
    浏览器或电子邮件客户端等应用程序工作时，通常使用。同样，CPU
    和网络设备在不同时间上有所不同。[**TuneD**]{.strong}
    监控这些组件的活动，并对使用中的更改做出反应。
    默认情况下禁用动态性能优化。要启用它，请编辑
    `/etc/tuned/tuned-main.conf`{.literal} 文件并将
    `dynamic_tuning`{.literal} 选项改为 `1`{.literal}。然后
    [**TuneD**]{.strong}
    会定期分析系统统计信息，并使用它们更新您的系统调优设置。要在这些更新之间配置时间间隔（以秒为单位），请使用
    `update_interval`{.literal} 选项。
    目前实施了动态调优算法，尝试平衡性能和节能，因此在性能配置集中禁用。可以在
    [**TuneD**]{.strong} 配置集中启用或禁用各个插件的动态性能优化。
:::
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048853763616}
**例 2.3. 工作站上的静态和动态调优**
::: example-contents
在典型的办公室工作站上，以太网网络接口在大多数时间都不活跃。通常只会发送和接收一些电子邮件，或载入一些网页。
对于这些负载，网络接口不必像默认情况那样始终全速运行。[**TuneD**]{.strong}
为网络设备有一个监控和调优插件，可检测此低活动，然后自动降低该接口的速度，通常会实现较低的功耗。
如果在较长的时间内接口上的活动增加，例如：因为下载了 DVD
镜像或打开了带有大量附加的电子邮件，则 [**TuneD**]{.strong}
会检测到这个信息，并设置接口速度的最大速度，以便在活动级别高时提供最佳性能。
这个原则还用于 CPU 和磁盘的其他插件。
:::
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#tuned-plug-ins_customizing-tuned-profiles}TuneD 插件 {.title}
:::
插件是 [ **[**TuneD**]{.strong}** ]{.strong}
配置集中的模块，用于监控或优化系统上的不同设备。
[**TuneD**]{.strong} 使用两种类型的插件：
::: variablelist
[监控插件]{.term}
:   监控插件用于从正在运行的系统中获取信息。通过调优插件进行动态调优，可以使用监控插件的输出。
    当任何已启用的调优插件需要指标时，监控插件会自动实例化。如果两个调优插件需要相同的数据，则只创建一个监控插件的实例，并且数据会被共享。
[调优插件]{.term}
:   每个调优插件对单个子系统进行调优，并会获取从调优配置集填充的多个参数。每个子系统可以有多个设备，如多个
    CPU
    或网卡，这些设备由调优插件的单个实例处理。还支持单个设备的具体设置。
:::
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_syntax_for_plug_ins_in_tuned_profiles}TuneD 配置集中的插件语法
描述插件实例的部分采用以下格式：
``` screen
[NAME]
type=TYPE
devices=DEVICES
```
::: variablelist
[NAME]{.term}
:   是插件实例的名称，在日志中使用。它可以是一个任意字符串。
[TYPE]{.term}
:   是调优插件的类型。
[DEVICES]{.term}
:   是此插件实例处理的设备列表。
    `devices`{.literal}
    行可以包含一个列表、通配符(`*`{.literal})和负效果(`!`{.literal})。如果没有
    `devices`{.literal} 行，则插件实例处理所有在
    [*[TYPE]{.replaceable}*]{.emphasis} 系统中附加的所有设备。这与使用
    `devices=*`{.literal} 选项相同。
    ::: example
    []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048824187312}
    **例 2.4. 使用插件匹配块设备**
    ::: example-contents
    以下示例与以 `sd`{.literal} 开头的所有块设备（如 `sda`{.literal} 或
    `sdb`{.literal} ）匹配，且不禁用这些块设备：
    ``` screen
    [data_disk]
    type=disk
    devices=sd*
    disable_barriers=false
    ```
    以下示例与 `sda1`{.literal} 和 `sda2`{.literal}
    以外的所有块设备匹配：
    ``` screen
    [data_disk]
    type=disk
    devices=!sda1, !sda2
    disable_barriers=false
    ```
    :::
    :::
:::
如果没有指定插件的实例，则不会启用插件。
如果插件支持更多选项，也可以在插件部分中指定它们。如果没有指定选项，且之前未在
included 插件中指定，则使用默认值。
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_short_plug_in_syntax}简短插件语法
如果您的插件实例不需要使用自定义名称，且配置文件中只有一个定义，则
[**TuneD**]{.strong} 支持以下短语法：
``` screen
[TYPE]
devices=DEVICES
```
在这种情况下，可以省略 `type`{.literal}
行。然后，实例使用名称来指代，与类型相同。然后，前面的示例可重写为：
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048718938800}
**例 2.5. 使用简短语法匹配块设备**
::: example-contents
``` screen
[disk]
devices=sdb*
disable_barriers=false
```
:::
:::
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_conflicting_plug_in_definitions_in_a_profile}配置集中的冲突插件定义
如果使用 `include`{.literal}
选项指定同一部分，则会合并设置。如果因为冲突而无法合并它们，则最后冲突的定义会覆盖上一个设置。如果您不知道之前定义的内容，您可以使用
`replace`{.literal} 布尔值选项并将其设置为
`true`{.literal}。这会导致之前带有相同名称的定义被覆盖，且不会出现合并。
您还可以通过指定 `enabled=false`{.literal}
选项来禁用插件。这与实例从未定义的影响相同。如果您从 `include`{.literal}
选项重新定义之前定义，且不想在自定义配置集中激活插件，则禁用插件会很有用。
::: variablelist