getLocalName getAttribute getAttributeNames getLocalAddr 
getAuthType getRemoteUser getCookies isSecure 
HttpServletRequest getQueryString getHeaderNames getHeaders 
getPrincipal getUserPrincipal isUserInRole getInputStream 
getOutputStream getWriter addCookie addHeader 
setHeader setAttribute putValue javax.servlet.http.Cookie 
getName getPath getDomain getComment 
getMethod getPath getReader getRealPath 
getRequestURI getRequestURL getServerName getValue 
getValueNames getRequestedSessionId 
308 
5.5.2.3 跨站点脚本 
这些应用编程接口调用应该在代码审计中审计，因为它们可能是跨站点脚本漏洞的来源。 
要搜索的字符串 
javax.servlet.ServletOutputStream.print strcpy 
5.5.2.4  响应分割 
响应拆分允许攻击者通过在报头中添加额外的 CRLFs 来控制响应体。在 HTTP 中，报
头和正文由 2 个 CRLF 字符分隔，因此，如果攻击者的输入用于响应报头，并且该输入包含
2 个 CRLFs，则 CRLFs 之后的任何内容都将被解释为响应正文。在代码审计中，确保功能
正在净化任何被放入标题的信息。 
要搜索的字符串 
 javax.servlet.http.HttpServletResponse.sendRedirect strcpy setHeader 
5.5.2.5 重定向 
每当应用程序发送重定向响应时，都要确保所涉及的逻辑不会被攻击者的输入所操纵。
尤其是当使用输入来确定重定向的目的地时。 
要搜索的字符串 
309 
sendRedirect setStatus addHeader etHeader 
5.5.2.6 SQL &数据库 
搜索与 Java 数据库相关的代码应该有助于查明被审计的应用程序的持久层中涉及的类
/方法。 
要搜索的字符串 
java.sql.Connection.prepareStatement java.sql.ResultSet.getObject select insert 
java.sql.Statement.executeQuery java.sql.Statement.execute delete update 
java.sql.Connection.prepareCall 
createStatement 
java.sql.ResultSet.getString 
executeQuery 
jdbc 
java.sql.Statement.executeUpdate 
java.sql.Statement.addBatch execute executestatement 
5.5.2.7  加密套接字协议层 
寻找利用 SSL 作为点对点加密媒介的代码。下面的片段应该指出 SSL 功能是在哪里开
发的。 
要搜索的字符串 
com.sun.net.ssl SSLContext SSLSocketFactory TrustManagerFactory 
HttpsURLConnection KeyManagerFactory  
5.5.2.8 会话管理 
当下列应用编程接口控制会话管理时，应在代码审计中审计它们。 
310 
要搜索的字符串 
getSession invalidate getId 
5.5.2.9  系统命令交互 
在这里，我们可能容易受到命令注入攻击或操作系统注入攻击。Java 链接到本机操作
系统可能会导致严重问题，并可能导致服务器整体受损。 
要搜索的字符串 
java.lang.Runtime.exec java.lang.Runtime.getRuntime getId 
5.5.2.10 Logging 
通过审计应用程序中包含的以下代码，我们可能会遇到一些信息泄漏。 
要搜索的字符串 
java.io.PrintStream.write log4j jLo Lumberjack JDLabAgent MonoLog qflog 
just4log log4Ant 
5.5.2.11  Ajax 和 JavaScript 
查找 Ajax 的用法和可能的 JavaScript 问题: 
要搜索的字符串 
document.write 
eval 
document.cookie 
window.location 
document.URL 
document.URL 
311 
5.5.3 在经典 ASP 中搜索代码 
ASP 中的输入 API 通常用于从请求中检索输入，因此代码审计应该确保这些请求(和相
关逻辑)不会被攻击者操纵。ASP 使用输出应用编程接口来编写将发送给最终用户的响应主
体，因此代码审计应该审计这些请求是否以正确的方式使用，并且不能返回敏感信息。
Cookies 也可能是信息泄漏的来源。 
要搜索的字符串 
Request 
Request.QueryString 
Request.Form 
Request.ServerVariables 
Response.Write Response.BinaryWrite <%= .cookies Query_String hidden 
include .inc 
5.5.3.1 错误处理 
确保应用程序中的错误得到正确处理，否则攻击者可能会使用错误条件来操纵应用程序。 
要搜索的字符串 
 err. Server.GetLastError On Error Resume Next On Error GoTo 0 
5.5.3.2 网址中的信息 
这些应用编程接口用于从请求中的网址对象中提取信息。代码审计应该审计从网址中提
312 
取的信息是否经过清理。 
要搜索的字符串 
 location.href  location.replace  method=”GET”  On Error GoTo 0 
5.5.3.3 数据库 
这些 API 可用于与数据库交互，这可能导致 SQL 攻击。代码审计可以使用净化的输入
来审计这些应用编程接口调用。 
要搜索的字符串 
commandText select from update insert into .open ADODB. Commandtype 
ICommand delete from where IRowSet execute .execute 
5.5.3.4 Session 
这些应用编程接口调用可以控制 ASP 应用程序中的会话。 
要搜索的字符串 
session.timeout session.abandon session.removeall 
5.5.3.5 拒绝服务预防和日志记录 
以下 ASP 应用编程接口可以帮助防止对应用程序的拒绝服务攻击。向日志中泄漏信息
可能对攻击者有用，因此可以在代码审计中审计以下 API 调用，以确保没有敏感信息被写
入日志。 
313 
要搜索的字符串 
server.ScriptTimeout IsClientConnected WriteEntry 
5.5.3.6 重定位 
不要让攻击者输入来控制拒绝发生的时间和地点。 
要搜索的字符串 
 Response.AddHeader 
Response.AppendHeader 
Response.Redirect 
Response.Status 
Response.StatusCode Server.Transfer Server.Execute 
在 Javascript 和 AJAX 中搜索代码 
Ajax 和 JavaScript 将功能带回了客户端，这将许多旧的安全问题带回了前台。以下关
键字与用于操纵用户状态或浏览器控件的 API 调用相关。AJAX 和其他 Web 2.0 范例的出
现将安全问题推回到客户端，但不排除传统的服务器端安全问题。寻找 Ajax 的用法，以及
可能的 JavaScript 问题。 
要搜索的字符串 
eval document.cookie document.referrer document.attachEvent 
314 
document.body 
document.body.innerHtml 
document.body.innerText 
document.close 
document.create 
document.execCommand 
document.forms[0].action 
document.location 
document.open document.URL document.URLUnencoded document.write 
document.writeln location.hash location.href location.search 
window.alert window.attachEvent window.createRequest window.execScript 
window.location window.open window.navigate window.setInterval 
window.setTimeout XMLHTTP 
5.5.4 在 C++和 Apache 中搜索代码 
通常，当 C++开发人员构建 web 服务时，他们会构建一个由 web 服务器调用的 CGI
程序(尽管这并不高效)，或者他们会使用 Apache httpd 框架并编写一个处理程序或过滤器
来处理 HTTP 请求/响应。为了帮助这些开发人员，本节将讨论在处理 HTTP 输入和输出时
使用的通用 C/C++函数，以及处理程序中使用的一些常见 Apache APIs。 
5.5.4.1 传统的 C/C++方法 
对于任何与 web 请求交互的 C/C++代码，应该审计处理字符串和输出的代码，以确保
逻辑没有任何缺陷。 
要搜索的字符串 
315 
 exec sprint document.referrer fprintf cerr System popen stringstream 
fstringstream Malloc free strncpy Strcat cout cin printf Stdio FILE strcpy  
5.5.4.2 请求处理 
在 Apache 中编码时，可以使用以下 API 从 HTTP 请求对象中获取数据。 
要搜索的字符串 
headers_in ap_read_request post_read_request 
5.5.4.3 响应处理 
根据要发送给客户端的响应类型，可以使用以下 Apache APIs。 
要搜索的字符串 
headers_out ap_rprintf ap_send_error_response ap_send_fd ap_vprintf 
 Cookie 处理 
Cookie 可以从请求头列表中获得，也可以从专门的 Apache 函数中获得。 
要搜索的字符串 
headers_in 
headers_out 
headers_out 
ap_cookie_write2 
ap_cookie_read 
ap_cookie_check_string 
5.5.4.4 Logging 
日志消息可以使用模块中包含的自定义日志程序来实现(例如。log4cxx 等)，通过使用
316 
Apache 提供的日志 API，或者通过简单地编写标准输出或标准错误。 
要搜索的字符串 
cout cerr ap_open_stderr_log ap_error_log2stderr ap_log_error ap_log_perror 
ap_log_rerror 
5.5.5 超文本标记语言 
5.5.5.1  HTML 编码 
当团队在 C/C++处理程序中获得了 HTML 输入或输出的句柄时，可以使用以下方法来
确保/审计 HTML 编码。 
 要搜索的字符串 
 ap_unescape_all 
ap_unescape_url 
ap_unescape_url_keep2f 
ap_unescape_urlencoded 
ap_escape_path_segment