统
在GNU/Linux和IRIX上用xfsdump(8)和xfsrestore(8)命
xfsdump V:0,I:7 848
令来备份和恢复XFS文件系统
backupninja V:2,I:3 360 轻量的可扩展的meta-backup系统
bacula-common V:9,I:10 2119 Bacula: 网络数据备份，恢复和核查-常见的支持文件
bacula-client V:0,I:2 154 Bacula: 网络数据备份，恢复和核查-客户端元软件包
bacula-console V:0,I:3 104 Bacula: 网络数据备份，恢复和核查-文本终端
bacula-server I:0 154 Bacula: 网络数据备份，恢复和核查-服务器端元软件包
amanda-common V:0,I:2 9904 Amanda: 马里兰大学开发的高级自动化网络磁盘归档器（库）
Amanda: 马里兰大学开发的高级自动化网络磁盘归档器（客户
amanda-client V:0,I:2 1091
端）
Amanda: 马里兰大学开发的高级自动化网络磁盘归档器（服务器
amanda-server V:0,I:0 1076
端）
backup-manager V:0,I:1 566 命令行备份工具
backup2l V:0,I:0 115 用于可挂载媒介(基于磁盘的)的低维护的备份/恢复工具
BackupPC是用于备份PC机数据（基于磁盘）的高性能的企业
backuppc V:2,I:2 3178
级工具
duplicity V:29,I:49 1892 (远程)增量备份
flexbackup V:0,I:0 243 (远程)增量备份
rdiff-backup V:4,I:10 1198 (远程)增量备份
restic V:2,I:5 21325 (远程)增量备份
slbackup V:0,I:0 151 (远程)增量备份
Table10.5: 实用备份程序套件列表
10.2.3 个人备份
对于运行testing套件的个人Debian桌面系统来说，只需要保护个人数据和关键数据。我不管怎样每年都会重新安
装一次系统。因此没理由去备份整个系统或者安装全功能的备份实用程序。
与此同时，有一定频率的最近的个人数据和系统配置快照的备份，加上偶尔个人数据的全备份，是非常有价值的。
我经常使用一个简单的shell脚本bss来制作这些快照和备份。这个脚本是一个短小的shell，使用标准工具：btrfs
子卷快照、rsync。对于加密的数据，磁盘镜像由fallocate(1)创建并由cryptsetup(8)配置。
提示
你能够用”debconf-set-selections debconf-selections” 命令恢复 debconf 配置数据，可以用”dpkg
--set-selection 1.2.1-2)软件包
能够处理这些中断的子键。参见gpg(1)下的”--repair-pks-subkey-bug”选项.
10.3.2 在文件上使用 GnuPG
这里有一些在文件上使用GNU隐私卫士命令的例子。
命令 说明
gpg -a -s file ASCII封装的签名文件file.asc
gpg --armor --sign file 同上
gpg --clearsign file 生成明文签字信息
gpg --clearsign file|mail
发送一份明文签字到PI:EMAIL
PI:EMAIL
gpg --clearsign
明文签名的补丁文件
--not-dash-escaped patchfile
gpg --verify file 验证明文文件
gpg -o file.sig -b file 生成一份分离的签字
gpg -o file.sig --detach-sign
同上
file
gpg --verify file.sig file 使用file.sig验证文件
gpg -o crypt_file.gpg -r name
公钥加密，从文件里面获取名字，生成二进制的crypt_file.gpg
-e file
gpg -o crypt_file.gpg
同上
--recipient name --encrypt file
gpg -o crypt_file.asc -a -r
公钥加密，从文件中获取名字，生成ASCII封装的crypt_file.asc
name -e file
gpg -o crypt_file.gpg -c file 将文件对称加密到crypt_file.gpg
gpg -o crypt_file.gpg
同上
--symmetric file
gpg -o crypt_file.asc -a -c
对称加密，从文件到ASCII封装的crypt_file.asc
file
gpg -o file -d crypt_file.gpg
解密
-r name
gpg -o file --decrypt
同上
crypt_file.gpg
Table10.9: 在文件上使用的GNU隐私卫士的命令列表
10.3.3 在 Mutt 中使用 GnuPG
增加下面内容到”~/.muttrc”，在自动启动时，避免一个慢的GnuPG，在索引菜单中按”S”来允许它使用。
Debian参考手册 190/233
macro index S ”:toggle pgp_verify_sig\n”
set pgp_verify_sig=no
10.3.4 在 Vim 中使用 GnuPG
gnupg插件可以让你对扩展名为”.gpg”,”.asc”,和”.pgp”的文件可靠的运行GnuPG。3
$ sudo aptitude install vim-scripts
$ echo ”packadd! gnupg” >> ~/.vim/vimrc
10.3.5 MD5 校验和
md5sum(1)提供了制作摘要文件的一个工具,它使用rfc1321里的方式制作摘要文件.
$ md5sum foo bar >baz.md5
$ cat baz.md5
d3b07384d113edec49eaa6238ad5ff00 foo
c157a79031e1c40f85931829bc5fc552 bar
$ md5sum -c baz.md5
foo: OK
bar: OK
注意
MD5校验和的CPU计算强度是比GNUPrivacyGuard(GnuPG)加密签名要少的.在通常情况下,只有顶级的摘要
文件才需要加密签名来确保数据完整性.
10.3.6 密码密钥环
在GNOME系统，GUI（图形用户界面）工具seahorse(1)管理密码，安全的在密钥环~/.local/share/keyrings/*
里面保存它们。
secret-tool(1)能够从命令行存储密码到钥匙环。
让我们存储LUKS/dm-crypt加密磁盘镜像用到的密码
$ secret-tool store --label=’LUKS passphrase for disk.img’ LUKS my_disk.img
Password: ********
这个存储的密码能够被获取并给到其它程序，比如cryptsetup(8)。
$ secret-tool lookup LUKS my_disk.img | \
cryptsetup open disk.img disk_img --type luks --keyring -
$ sudo mount /dev/mapper/disk_img /mnt
提示
无论何时，你需要在一个脚本里面提供密码时，使用secret-tool来避免将密码直接硬编码到脚本里面。
10.4 源代码合并工具
这里有许多源代码合并工具。如下的是我感兴趣的工具。
3如果你使用”~/.vimrc”代替”~/.vim/vimrc”，请进行相应的取代。
Debian参考手册 191/233
软件包 流行度 大小 命令 说明
patch V:78,I:699 248 patch(1) 给原文件打补丁
vim V:95,I:373 3742 vimdiff(1) 在vim中并排比较两个文件
imediff V:0,I:0 169 imediff(1) 全屏交互式两路/三路合并工具