50x: 45 mW. The optical path is as follows: Photons with a wave-
length of 1330 nm are emitted by the light source. The emitted light
is deflected by galvanometric mirrors, and then focused through
the objective lens into the DUT. The reflected light from the DUT
is passed on to a detector, and the detector signal is fed into the
preamplifier. The output of the preamplifier can then be fed into
the oscilloscope for averaging and EOP waveform acquisition with
a stationary beam. Alternatively, the signal is fed into the spectrum
analyzer for generation of EOFM activity maps by scanning the
optical beam.
4.4 Fake Bitstream Generation
To automate the generation of manipulated bitstreams as discussed
in Sect. 3, we implemented a Python script with about 400 lines of
code. This script uses the “pycrypto” package [4] to provide encryp-
tion and decryption with AES-CBC. The basic structure and fields of
a regular encrypted Kintex 7 bitstream can be seen in Fig. 6a. In this
section, we will only explain the fields relevant to our experiments
Figure 6: Xilinx Kintex 7 bitstream structure. (a) Regular bit-
stream [24, 28]. (b) Manipulated bitstream for EOFM funda-
mental frequency generation.
and refer the reader to [24, 28] for more details. Using the Python
script, the ciphertext portion of a regular bitstream can be extracted
and decrypted, see Fig. 6a. In this decrypted portion, the “FDRI”
block contains the actual configuration data, which makes up most
of the bitstream size. This block is then replaced with a user-defined
pattern, see Fig. 6b. Additionally the “footer commands” block is
overwritten with "no operation" (NOP, 0x20000000) commands. As
the footer commands would trigger FPGA startup, this prevents
the device from enabling operation with the fake data after the con-
figuration is done, avoiding potential device damage. Afterwards,
this data is re-encrypted and the fake ciphertext placed back into
the regular bitstream structure, see Fig. 6b. This data can then be
loaded into the on-board flash of the board and will be used by the
FPGA for configuration. For all of our experiments we set the same
AES key. Besides, the script performs some helper functions like
looking up bitstream commands documented in the datasheet [28]
and generating a human readable bitstream analysis. It can also
preview the wraparound of the configuration data pattern under
the assumption of different bus widths.
5 RESULTS
This section presents the results achieved applying the approach
presented in Sect. 3 with the setup of Sect. 4. For visualizing EOFM
activity maps, we have chosen to overlay the EOFM data onto
reflected light images to aid orientation, (e.g., Fig. 8). The EOFM
data is encoded in green, while the reflected light image is grayscale
encoded, although with reduced brightness. This is to allow readers
with a black and white representation to still distinguish EOFM
and reflected light data by intensity. The threshold of EOFM data
has been set slightly above the noise level to remove background
noise and only show locations generating a signal at the set EOFM
filter frequency.
SYNCNOPCTLCBC IVDWCCiphertext(a)AKEYHeaderCommandsWrite FDRIFDRIFooterCommandsAKEYMACALIGNSYNCNOPCTLCBC IVDWCFakeCiphertext(b)AKEYHeaderCommandsWrite FDRIFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF…2000000020000000…AKEYMACALIGNSession H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1666Figure 7: Reflected light image of the configuration logic area. The image is 90 degrees tilted with regard to Fig. 5a.
(a)
(b)
(a)
(b)
Figure 8: Comparison of CCLK activity for different bit-
stream settings in the region that always showed activity. (a)
Unencrypted bitstream. (b) Encrypted bitstream. Only mi-
nor changes in activity can be observed. As this region is
always active, it is a candidate for the main configuration
logic.
Figure 9: Comparison of CCLK activity for different bit-
stream settings in the region that only showed activity when
encryption was enabled. (a) Unencrypted bitstream. (b) En-
crypted bitstream. Because of this behavior this region is as-
sumed to be the AES decryption core.
5.1 Localization of the Configuration
Logic
Fig. 5a shows a reflected light overview image of the whole die
acquired with 1.3 µm wavelength. The image has been composed
of multiple 5x objective measurements using image stitching soft-
ware [18]. As the chip is not thinned, the die markings are also
visible. The text is mirrored in this case, as the PHEMOS software
automatically flips the image data in through-silicon observation
mode. The image shows differences in the general layout of the
appearing structures. On the one hand, there are very regular struc-
tures which consist of identical elements, see Fig. 5b left. These
appear as regular vertical bars in the overview image of Fig. 5a and
can be seen in most of the die image. As the FPGA logic fabric con-
sists of many identical configurable logic and memory blocks (CLBs
and RAM), we can assume that the highly ordered areas contain
these elements, and thus, do not contain the configuration logic. On
the other hand, there are blocks which contain more irregular pat-
terns, see Fig. 5b right. For instance, in the overview image of Fig. 5a
these can be seen in the center strip and the upper right hand corner
of the die. Comparison with Xilinx data sheets [29] shows the upper
right hand corner blocks to be the GTH/GTX transceivers available
in some Xilinx’s 7-Series FPGAs. The same data sheet also shows
the configuration logic as a block placed roughly in the middle of
the FPGA die. Therefore, this area seems to be the best candidate
for the location of the configuration logic. Fig. 7 shows a detailed
image of this area, which has been acquired with the 20x lens and
stitching. To confirm this assumption, EOFM at the configuration
clock (CCLK) frequency was performed, to reveal logic operating on
the serial input bitstream data. This measurement indeed revealed
activity in the area of Fig. 7, and consequently, confirmed that it
contains the configuration logic. Further experiments with different
frequencies introduced into an unencrypted bitstream also allowed
us to identify and probe the input logic for the serial bitstream
data.
5.2 Localization of the AES Core
After the general configuration logic area was identified, the AES
decryption core needed to be localized inside it. A standard IC de-
sign technique is to disable logic parts that are not used currently,
either by clock gating or by completely powering them down. A
comparison of activity with encrypted and unencrypted bitstreams
175 μm310 μm140 μm560 μmSession H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1667(a)
(b)
Figure 10: Activity map at the 32-bit word frequency
(CCLK/64) revealing logic gates potentially connected to the
32-bit data bus. (a) "Main" logic area. (b) "AES" logic area.
Although an unencrypted bitstream is used, the AES input
logic is visible in (b).
should help to identify logic parts that are active only for encrypted
bitstreams. These logic areas would then be strong candidates for
the AES decryption core. To perform this comparison, EOFM mea-
surements were acquired at the CCLK frequency in all of the con-
figuration logic area shown in Fig. 7. For these measurements, the
CCLK frequency was set to the "3 MHz" standard value. This indeed
revealed an area which was always active, as well as an area that
became active only for encrypted bitstreams.
A comparison for encrypted and unencrypted bitstreams is shown
in Fig. 8 for the always active region and in Fig. 9 for the region
only active for enabled encryption. As the region of Fig. 8 is always
active, it probably contains the basic configuration logic and is
therefore named the "main core". The region of Fig. 9 on the other
hand is assumed to be the AES core.
5.3 Determination of the Bus Width
To identify the logic gates carrying actual data, as opposed to logic
simply connected to the clock, the bitstream data was filled with
alternating ones and zeroes. This would lead to all logic gates carry-
ing the serial bitstream data to have a fundamental frequency of half
the configuration clock (CCLK/2). However, EOFM measurements
at this frequency showed only very minor activity. Hence, it was
suspected that the data is parallelized and loaded onto a bus at some
early stage in the configuration logic. The parallelization would
change the fundamental frequency of the data, and would also
require different data inserted into the manipulated bitstream for
successful frequency generation, see Sect. 3. As the datasheet states
(a)
(b)
(c)
(d)
(e)
Figure 11: Comparison of activity at the 32-bit word fre-
quency (CCLK/64) for a different number of active bits on
the data bus. Suspected "main" logic output bus: (a) 32 bit
active, (b) 16 bit active, (c) 8 bit active. Suspected "AES" logic
input bus: (d) 32 bit active, (e) 8 bit active. This measurement
has been acquired with decryption disabled to show only the
input logic in the AES core.
that the bitstream data uses 32-bit words as its basic format [28],
this was the first bus width that was considered. An unencrypted
bitstream was prepared that contained a repeating pattern of 32 "1"
bits and 32 "0" bits. This bitstream should then cause every bus line
to flip its logic state for every word. The fundamental frequency of
the bus lines would then be CCLK/2/32 or CCLK/64, which could
then be detected by EOFM. Since the preamplifiers lower frequency
limit is 100 kHz, we increased CCLK to the "12 MHz" setting. Note
that this is not a limitation for the attacker, as at this stage she is
working on the "training" device, and therefore, has full control
of the bitstream, see Sect. 3. Additionally, to avoid damaging the
FPGA by starting it with this manipulated bitstream, the startup
commands at the end of the bitstream data were replaced with "no
operation" (NOP) commands.
The resulting EOFM measurement for the main core can be seen
in Fig. 10a. It is evident that there are a many logic gates active
in the main core at this frequency. This suggests that the 32-bit
bus assumption is correct. Further test with different bus widths
considered also supported the 32-bit bus hypothesis. It should also
be noted that at the right hand side of Fig. 10a there is a rectangular
area of activity directly at the edge of the active structure. Because
of its placement and ordered appearance, this activity is a poten-
tial candidate for an input/output port. Curiously, even though
encryption was disabled for this measurement, there was activity at
this frequency in the AES core, see Fig. 10b. It is assumed that this
activity is caused by the data input gates in the AES. The reasoning
behind this is that if the data bus is directly connected to the AES,
the data signal is always present in the very first stages of the input
logic. Even if encryption is disabled, the data signal path would
always be visible up to the first gate in the AES that requires a clock
or enable signal for operation.
To further confirm the 32-bit bus hypothesis, the measurements
were repeated with only some of the bus lines being active. For
this, a portion of the bits in the 32-bit words was simply set to
"always zero" while the others still were active with CCLK/64 as
their fundamental frequency. The results of these measurements
can be seen in Fig. 11, which all indicate a 32-bit bus. From this
we concluded that the basic data bus width in the main core is
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1668(a)
(b)
Figure 12: Activity map at the plaintext data frequency
(CCLK/256) revealing gates potentially carrying the de-
crypted bitstream data. (a) "Main" logic area. (b) "AES" logic
area. The leftmost edge of the AES area shows activity that
might indicate an output port.
32-bit. It is also plausible that this bus width is the same for the
AES input.
5.4 Localization of the Plaintext Output
To finally localize the logic gates carrying the decrypted plaintext
data, the approach discussed in Sect. 3 was used. To this end, a
bitstream with a data pattern containing the desired fundamental
frequencies was generated, then encrypted, and finally transferred
to the on-board flash memory. As these frequencies are absent in
the ciphertext because of the encryption (see Sect. 3), they are only
present in the plaintext after the AES decryption core. If the con-
siderations regarding the influence of the bus width from Sect. 3
are observed, the plaintext gates should be visible in an EOFM
measurement at the corresponding frequency. A first measurement
assuming a 32-bit wide AES output demonstrated no activity. As
AES is a cipher that operates on 128-bit blocks, another likely candi-
date for the AES output width was 128 bits. An EOFM measurement
was performed using a repeating 128 "1" bits and 128 "0" bits pat-
tern in the plaintext with an EOFM frequency of CCLK/2/128 or
CCLK/256. As previously, because of the preamplifier, we increased
CCLK, this time to the "33 MHz" setting.
The results of this measurement are shown in Fig. 12. There is a lot
of activity in both the main core and the AES core which suggested
that the 128-bit bus width assumption was correct. The activity at
the plaintext data frequency in the main core also suggests that the
data is fed back into the main core after decryption. This makes
sense, as the Xilinx data sheets [28] indicate that the decrypted
(a)
(b)
(c)
(d)
Figure 13: Detailed activity map of the AES plaintext output
area at the plaintext data frequency (CCLK/256). (a) Zoomed
in measurement showing ordered "output port" logic (left)
as well as unordered gates inside the logic mesh (right). Fur-
ther zoomed in view of only the "port" area: (b) 32 bits active.
(c) Bit 25 inactive. (d) Bit 13 inactive.
bitstream data is actually almost identical to an unencrypted bit-
stream. Hence, it would be efficient to use the same command and
configuration data logic for all bitstreams, and simply route the
input data through the AES core in case of an encrypted bitstream.
To allow actual data extraction, the next step was the selection
of a suitable AES output port candidate and the determination of
probing locations for every bit line of the bus. At the leftmost edge of
Fig. 12b there is an area that bears similarity to the main core output
port already shown in Fig. 11a. This area is also placed at the edge
of the active structure and also has an ordered appearance, which
is especially apparent in a zoomed-in measurement, see Fig. 13a
left. Therefore, it was chosen as the best candidate to determine the
location mapping of the bit lines of the suspected 128-bit bus. To
achieve this, fundamental frequency generation on the respective
bus lines was activated or deactivated by modifying the plaintext
bitstream data as in the previous experiments. Surprisingly, these