·Interface port
Telnet username
SSH private key
SSH public key
SSHusermame
SNMPOID
InterfaceIP/DNS
第8章
Users和Macros
·139°
---
## Page 155
·140°
务的例子。
Zabbix对于IT service（即服务），提供了树状结构的定义来解决这些问题。下面看一个简单服
个简单的监控，它是一个树状结构，比如一个服务依赖于多个机房中的多个机器，或者依赖于
9.1Services服务监控
ITservices服务监控与
第9章
一组服务器，就算其中一些服务器出了问题，服务还会是正常的。
一些监控外，还可以自定义脚本。而对于服务层，情况就稍微有点复杂了，因为服务并不是一
设备层，即各类基础监控，比如CPU负载、磁盘空间等，对于应用服务，除了Zabbix自带的
PPTV中的点播服务、评论服务等。Zabbix除了支持设备层和应用层外，还支持服务层的监控。
即各种应用，如MySQL、Resin等开源工具；第三层是服务层，这在各个公司是不同的，比如
必要性，再介绍Zabbix中如何设置服务层监控。
否跑满，他关心的是公司的服务是否正常。本章，首先从运维角度，介绍服务层本身和监控的
经理的，但对于老板来说，他可能并不关心某台服务器是否正常，或者说某个网络设备流量是
Webmonitoring网络监控
通过上面这一段简单的介绍，相信各位已经明白，“服务”的内涵以及监控的困难点。
运维架构由下而上来看，第一层是设备层，即服务器、网络交换机等；第二层是应用层
在上面几个章节，我们讲解了Zabbix如何对Host进行监控，这是面对一线工程师和一线
---
## Page 156
9.2服务配置
正常时，“Workstations”节点才能是正常的。
正常时，节点“Workstations”就是正常的；也可以定义“Workstation1”和“Workstation2”
“Workstation1”和“Workstation2"，那么可以定义当“Workstation1”和“Workstation2”有一台
个节点都有自己的状态。对于节点之间的依赖关系，可以进行定义。比如“Workstations”依赖
Service”、“Workstations”、“Workstation1"、“Workstation2”和“Servers”都被称为节点，每一
又依赖于两台Workstation：“Workstation1”和“Workstation2"。在Zabbix 中，这里的“IT
|-Servers
Passport Service
代码如下：
下面会将上一节的例子具体化，然后使用Zabbix来实现。
上面的代码中，“ITService”是一个服务，它依赖着“Workstations"，
-Servers
I-Workstations
IT Service
-MySQL
|-Slave2
1- Slavel
I-Workstation2
I-Workstationl
第9章IT services服务监控与Webmonitoring网络监控
，而“Workstations"
·141°
---
## Page 157
142°
方法新建好整个树状结构。如图9-1所示。
要记住单击的节点，就是新建的节点的父节点（当然，也可以在新建时选择）。按照（1）中的
Service”。如图9-1所示。
作为父节点的。
一个叫做“root”的Service存在。这个和Zabbix本身的设置有关，所有的服务都是以“root”
是正常的。
是正常的。而对于“Servers”来说，只有当“Serverl”和“Server2”都正常的情况下，它才
个Slave实例：“Slavel”和“Slave2"，这两台Slave只要有一台是正常的，那么“MySQL”就
Zabbix监控系统深度实践
下面看看对于一个 service，Zabbix可以配置的参数，如图9-2所示。
（2）创建“MySQL”和“Slave1"、“Slave2"，以及“Servers"、“Serverl"、“Server2"。大家
首先建立“Passport Service"，步骤如下。
首先从菜单栏“Configuration”→IT services“进入。如果是第一次进人，会发现已经有了
整个服务叫做“Passport Service"，它依赖“MySQL”和“Servers”，“MySQL”依赖于两
接下来开始逐步去完成这个ITservice的监控。
I-Server2
|-Serverl
Passport Service
root
Service
图9-1
Service
MYSOL
—Slave2
—Serverl
slave1
—server2
---
## Page 158
Dependency”和“Hard Dependency”两项，即“软依赖”和“硬依赖”，这名字是不是让人觉
那么就配置它的“Trigger”参数，将它和一个Trigger 绑定在一起即可。
它就有问题了，所以选择的算法是“Problem,if at least one child has a problem"。
的算法就是“Problem,ifall children have problems";而对于“Servers"，只要子节点有一个出问题，
在只要把出问题的规则配置一下即可。
在Dependencies 标签，可以看到该节点的所有子节点，另外,在“Sof”的选择框下，有“Soft
对于最底层的节点（比如“Slave1"），如果要配置它什么情况下异常，什么情况下正常，
服务已经完全配置好了，整个过程比较简单。接下来一起学习下更复杂的配置。
“Slavel”和“Slave2”只要有一台正常，“MySQL”就是正常的，那么在“MySQL”中配置
基本配置介绍完了，接下来要继续完善服务。前面已经把树状结构在Zabbix建好了，现
 Sort order：显示的顺序，数字小的优先。
 Trigger：该节点的异常状态所依赖的 Trigger。在最底层的服务，一定要依赖Trigger，否
Calculate SLA，acceptable SLA（in %）：是否计算 SLA的百分比，在Report 中使用。
◎ Status calculation algorithm：这是个比较重要的参数，表示的是这个节点的状态，是如何
 Parent service ：父节点。
OName：服务的名字。
则节点状态会显示不对。
·Do not calculate：不计算节点的状态。
·Problem,if allchildren have problems：当且仅当所有子节点都异常，该节点才异常。
·Problem,if as least one child has a problem：只要有一个子节点异常，该节点就异常。
依赖于子节点的。
Calculate SLA,acceptable SLA (in %)
Sort order(0->99)
SaveCancel
Parent service
enciesTime
Trigger
Name
99.9000
Passport Service
root
m.if at least one chiid has a problem
图9-2
第9章ITservices服务监控与Webmonitoing网络监控
select
Change
·143°
---
## Page 159
·144@
的节点，删除它之前不需要删除其软依赖的目标节点。
的可以具体到某一天的维护时间，仅此一次。
对于所有服务，默认是7×24小时，这个会影响到计算SLA的可用性。
示灰色的线。比如在“root”下新建一个服务“IDC"，然后“Passport Service”软依赖于它。
赖关系。简单来说就是：“你可以不是我的子节点，但是我要依赖你”。在界面中，软依赖是显
赖于它的子节点的，这个就是“硬依赖”的定义。而软依赖表示的是一种和树状结构无关的依
之前添加的子节点，都是“硬连接”。估计大家已经猜到了，在整个树状结构中，节点是硬依
得和Linux 中的“软连接”“硬连接”很像？其实它们的含义确实类似。Linux中，默认我们在
Zabbix监控系统深度实践
另外，当我们要删除一个节点的时候，首先需要删除它的所有子节点。但是对于有软依赖
（3）One-time downtime：一次性的维护时间。和Downtime不同，One-time downtime 设置
（2）Downtime：设置维护时间，以后每周这段时间内的异常，不会计算人SLA百分比。
（1）Uptime：设置服务何时应该正常。
有三种方式可以设置Time标签。
对于Time标签，这个就比较简单了，它的用处是设置该节点的工作时间或者维护时间。
图9-3所示 IDC依然是root 的子节点，但是Passport Service到 IDC 有灰色的软依赖。
IDC
Passport Service
Service
IDC
Servers
MySOL
slave2
Server2
slave1
图9-3
Server1
---
## Page 160
scenario中，还会保存cookie，
甚至还可以模拟登录动作，模拟鼠标单击。Zabbix同时支持HTTP和HTTPS。在一个Web
目前Zabbix对所有Web scenario，会收集下列数据。
顺序执行，然后Zabbix会定期按照设置的顺序来执行这些“步骤”。
中被统称为“步骤”。定义了一个Web scenario，我们需要定义其中有什么步骤，以及按照什么
络场景”，在其中的每一步操作—打开页面、发起登录请求、登录成功或者失败，在Zabbix
为了完成某个目标，在网络上进行的一系列操作的过程”。比方说，要登录微博，就是一个“网
何判断这个服务是否正常，由Java 应用自己去做。Zabbix 的Web monitoring 也是类似的功能。
Java 应用，我们需要有个ok.jsp，只要能curl 到这个ok.jsp，就认为这个服务是正常的。而如
9.3
在 Zabbix 2.2中，Web scenario 和 Items、Triggers 等一样，是依附在 Hosts/Templates 上的。
随便找一个 Host或者Template，在上面新建一个 Web scenario，配置界面如图9-4所示。
下面具体讲解如何配置。
除此之外，Zabbix还支持获取指定URL的HTML内容，看其中是否存在某个字符串。
（3）HTTP状态码。
（2）相应时间。
（1）平均下载速度。
对Web scenario中的所有步骤，都会收集下列数据。
（3）最后一次出错信息。
（2）失败的“步骤”。
（1）所有“步骤”的平均下载速度。
在开始之前，先介绍Zabbix的一个概念一
如果要使用这个功能，必须在编译Zabbix的时候加人libcurl的支持。
在这一节，我们会介绍如何使用Zabbix进行URL监控，即专门针对URL的监控。比如
Web monitoring网络监控配置
，做到真实地模拟一次完整的访问。
“Web scenarios”，即网络场景，就是“用户
第9章ITservices服务监控与Webmonitoring网络监控
●145°
---
## Page 161
·146°
Zabbix监控系统深度实践
HTTP proxy:如果使用HTTP代理，可以使用这个。书写的格式是:http:/[usermame[:password]
Agent:这里的Agent就是Nginx日志中的Agent，可以设置模拟使用某种浏览器发起请求。
Retries：Web scenario中每一个步骤执行的重试次数。由于网络波动（在我国错综复杂
Update interval(in sec)：执行的时间间隔。
Authentication:验证。如果URL需要身份验证，Zabbix同样支持三个下拉选项，除了None外，
New Application：新建一个Application，并且这个Web scenario属于它。
Application：和 Item的Application一样，作为一个分类。
Name：Web scenario的名字，支持宏。
①Host：这个不能改，是Web scenario所属的 Host 或者 Template。
做复杂了，甚至可以实现类似基调workbench的各个IDC对某个URL的监控。比如，
@Jproxy.mycompany.com[:port]，默认使用1080端口。这里粗看是个HTTP代理，其实，
对某种浏览器出问题的URL。
选择“other…·）”则可以手动输入Agent。这是个非常有用的参数，特别是针对那些只
要错误的HTTP状态码（比如404）或者期望的字符串没有出现就会触发这个重试的。
Web scenario中的每一个步骤都有效，最大是10，默认是1。需要注意的是，并不是只
的网络情况下尤其常见）造成某一个步骤执行出错（或者超时等）。这里的设置对于
个对话框，需要输入登录验证时的用户名和密码，在这两个对话框中，是支持宏的。
另外两个为Basic authentication和NTLM authentication。选择非None的选项时，会多出两
Uprdatetl(n sc)
New appicaon
ATTProxy
Applicaon
Save
Agernt
Fletres
Name
Hrst
MzFfx 8.0
Web check
AvaaahiRly
医
Cance!
图9-4
---
## Page 162
URL编码将“=”变为了“%3D”。
为非特殊字符。“%”就是URL 编码后的产物。比如“a=b”在URL 编码后,就变成“a%3Db",
正则表达上至少有一个组。regex 语法，不只针对变量支持，对于宏，也是支持的。
内容复制给hostid这个变量，如果HTML里有“hostid is 12345"，那么变量hostid就是12345。
意思是在返回的HTML中搜索符合“hostid is（[O-9]）”的字符串，并把匹配到的字符串组里的
切换到“Steps”标签，单击“Add”按钮，可以看到弹出的窗口如图9-5所示。
讲解了Web scenario的基本设置后，接下来看看关键的“步骤”是怎么设置的。
Enabled：是否启用这个web scenario
什么是“URL编码”呢？这里简单解释一下，它就是将一些网页地址保留的特殊字符转换
要注意的是，这些变量，并没有经过URL编码处理。
这里有一个特殊的地方，即支持 regex 语法。比如{hostid)=regex:hostid is（[0-9]+），表达的
 Variables：定义 Web scenario 级别的变量，或者宏。可以在URL、Post 等参数中使用。
·针对变量：{username}=Alexei
·针对宏：{macrol}=valuel
使用如下的格式设置。
可以使用广东机房的代理去访问某个URL，那么获取到的QOS数据就是广东的了。
status codes
Teneout
Varabies
Neme
200
Hoe
图9-5
第9章ITservices服务监控与Webmonitoring网络监控
·147°
---
## Page 163
·1480
或者Latest data中查看到的界面如图9-6所示。
9.4监控百度示例
在“步骤”这里设置了很多，但是没有在Web scenario中保存，那就白费工夫了。
Zabbix监控系统深度实践
首先新建一个Web scenario 和它的 step。step 很简单，有两个，只要分别写上URL 就行了，
Web scenario的配置在前面已经介绍完了，下面一起做一个监控百度的例子。
注意，关于“步骤”的任何修改，只有当它属于的Web scenario 保存了才可以生效，如果
 Required status codes：设置期望的 HTTP 状态码，这里可以写多个，比如 200,201,210-
@ Required string：这里需要配置一个正则表达式。当获取到这个URL的返回内容时，
 Timeout：URL的超时时间。这里设置的超时时间，并不是检查这个URL的总时间，而
Variables：和web scenario的Variables类似，不同的是这里设置的变量，只在这个步骤
Post:POST请求中的 post 的变量，格式为：“name=frank&age=25&home={home)”，{home}
◎URL：需要检查的URL，支持 HTTP 和HTTPs，GET参数可以直接写在URL中。比如
Name：唯一的名字，可以使用宏。
其中各项的具体内涵如下。
299这种书写格式。
Zabbix会根据这个正则表达式在返回的HTML中寻找。
中有效，并且只在GET、POST参数中使用有效。
是在Web scenario中设置的宏。同样，这些数据也是没有经过URL 编码的。
http://zabbix.com?time=10。
时间。
请求得到反馈的超时时间。也就是说，一个URL检查最多会耗费两倍这里设置的超时
是分两部分：一部分是在连接这个URL时会使用的超时时间，另一部分是发起HTTP
’→“Web”
---
## Page 164
我们在设置 Trigger的时候和其他 Item 是一样的，如图9-8所示。
Items 的30天history 和90天 trends。当然，设置了监控，肯定还是要报警的，对于这些Items,
所显示的信息如图9-7所示。
Latest Data 中看，另一个是Web monitoring 特有的，在菜单栏中的“Monitoring”→“Web”中,
的平均值。
对于每一个 scenario 和 step，都会自动生成Items。对于 scenario有以下几种。
Download speed for step “vip home page” of scenario“web test”
Response code for stepbaidu home page”of scenario web test
Download speed for scenarioweb test"
（1）Download speed for scenario：整个 scenario的下载速度，是每一步下载速度
Response time for stepbaidu home page”of scenario”
Failed step of scenario"web test".
图9-7显示的 Items，不能像其他 Items一样设置属性，Zabbix会保存Web scenario类型的
已经都设置完了，看下成果吧。查看这个数据有两个方法：一是和其他Items一样，在
其中“”是不同的 Scenario 的名字，“”是不同的 step 的名字。
(3）Response code for step of scenario： step 的返回码。
(2）Response time for step of scenario： step的响应时间。
对于 step有以下几种。
（2）Failed step of scenario：scenario中失败的 step个数。
这里我们什么都没有定义，怎么就多出来几个 Items 呢？因为在Zabbix 的Web scenario 中，
"web test"
图9-6
09 Feb201410:39:30
09 Feb201410:39:20