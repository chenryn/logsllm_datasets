# 接口端口
- Telnet 用户名
- SSH 私钥
- SSH 公钥
- SSH用户名
- SNMP OID
- 接口 IP/DNS

## 第8章 用户和宏

---

## 第155页
### 9.1 IT服务监控概述
Zabbix提供了一种树状结构来定义IT服务，以解决复杂的依赖关系。例如，一个服务可能依赖于多个机房中的多台机器或一组服务器。即使其中一些服务器出现问题，整体服务仍然可以正常运行。

#### 监控层次
从运维架构的角度来看，监控可以分为三个层次：
1. **设备层**：包括服务器、网络交换机等基础硬件设施的监控，如CPU负载、磁盘空间等。
2. **应用层**：涉及各种应用程序和服务的监控，如MySQL、Resin等开源工具。
3. **服务层**：这是在不同公司中定义各异的一层，例如PPTV中的点播服务和评论服务。

对于一线工程师而言，他们关注的是具体的主机监控；而高层管理者更关心的是整体服务是否正常运行，而不是某个具体设备的状态。

### Web监控
除了上述各层的监控外，Zabbix还支持Web监控功能，能够对URL进行专门的监测。

---

## 第156页
### 9.2 服务配置实例
假设有一个名为“Passport Service”的服务，它依赖于“MySQL”数据库和两台服务器“Server1”与“Server2”。在这个例子中，“MySQL”又进一步依赖于两个Slave实例：“Slave1”和“Slave2”。

#### 配置步骤
1. 在Zabbix的“Configuration”菜单下选择“IT services”，首次进入时会看到一个默认的根节点“root”。
2. 创建所需的各个节点（服务），并设置它们之间的依赖关系。
3. 对每个节点配置其状态计算算法和其他参数，比如触发器绑定等。

#### 节点状态计算
- **硬依赖**：如果所有子节点都出现问题，则该节点也出问题。
- **软依赖**：类似于Linux文件系统中的符号链接，表示一种非直接的依赖关系。

通过这种方式，可以构建出复杂的服务依赖图，并且根据实际需求灵活调整。

---

## 第157页
### 9.3 时间标签设置
- **Uptime**：设定服务应处于正常工作的时间段。
- **Downtime**：定期维护时间，在此期间内发生的异常不会影响SLA计算。
- **One-time Downtime**：一次性的维护时段。

此外，当删除具有软依赖关系的节点时，不需要先移除其目标节点。

---

## 第158页
### 9.4 Web场景配置
Zabbix的Web监控功能允许用户模拟真实用户的访问行为，从而检测网站或特定URL的可用性。这包括支持HTTP/HTTPS协议以及自定义请求头信息等功能。

#### 主要配置项
- **Name**：场景名称。
- **URL**：待测试网页地址。
- **Required status codes**：预期返回的HTTP状态码。
- **Required string**：期望出现在响应内容中的字符串或正则表达式模式。
- **Timeout**：超时限制。
- **Variables**：可复用变量定义。

完成以上设置后，即可创建一系列按顺序执行的操作步骤，实现对整个Web流程的全面监测。

---

## 第162页
### 9.5 实践案例：百度监控
作为示例，我们将演示如何使用Zabbix来监控百度首页及其VIP页面。首先需要创建一个新的Web场景，并为其添加相应的步骤，每个步骤对应一个要检查的URL。接着，为这些步骤定义期望的结果，如正确的HTTP状态码或页面内容中的关键字。最后，保存所有更改并在Zabbix界面中查看结果。

通过这样一个简单的例子，大家可以更好地理解如何利用Zabbix的强大功能来进行有效的Web性能监测。