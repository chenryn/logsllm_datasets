on the company’s core business activities, its mission and vision, and legal
requirements.
Identifying all critical business processes, data, and data flows inside
a company is one of the first steps in risk management. This step includes
compiling a detailed inventory of all IT systems (equipment, networks,
applications, interfaces, and so on) that support the company’s critical busi-
ness processes and data from an IT perspective. The task is time consuming
and it’s very easy to forget about certain systems that at first don’t seem to
be directly related to supporting critical business processes and data, but
that are nonetheless critical because other systems depend on them. This
inventory is fundamentally important and is the perfect starting point for a
risk-assessment exercise.
One of the goals of an information-security program is to define what
is necessary to preserve the desired level of confidentiality, integrity, and
availability of a company’s IT systems and data. Business process owners
should be able to define their goals, and our job as information-security
professionals is to implement measures to make sure we meet these goals
and to test how effective these measures are.
There are a few ways to determine the actual risk to the confidentiality,
integrity, and availability of a company’s systems. One way is to perform a
technical assessment to see how easy it would be for an adversary to under-
mine the desired level of confidentiality, break the integrity of systems, and
interfere with the availability of systems, either by attacking them directly
or by attacking the users with access to these systems.
That’s where a penetration tester (pentester, ethical hacker, or what-
ever you want to call it) comes into play. By combining knowledge of how
systems are designed, built, and maintained with a skillset that includes
finding creative ways around defenses, a good pentester is instrumental in
identifying and demonstrating the strength of a company’s information-
security posture.
If you would like to become a penetration tester or if you are a systems/
network administrator who wants to know more about how to test the
security of your systems, this book is perfect for you. You’ll learn some of
the more technical phases of a penetration test, beginning with the initial
information-gathering process. You’ll continue with explanations of how to
exploit vulnerable networks and applications as you delve deeper into the
network in order to determine how much damage could be done.
This book is unique because it’s not just a compilation of tools with
a discussion of the available options. It takes a very practical approach,
xx Foreword
designed around a lab—a set of virtual machines with vulnerable applica-
tions—so you can safely try various pentesting techniques using publicly
available free tools.
Each chapter starts with an introduction and contains one or more
hands-on exercises that will allow you to better understand how vulner-
abilities can be discovered and exploited. You’ll find helpful tips and tricks
from an experienced professional pentester, real-life scenarios, proven tech-
niques, and anecdotes from actual penetration tests.
Entire books can be written (and have been) on the topics covered in
each chapter in this book, and this book doesn’t claim to be the Wikipedia
of pentesting. That said, it will certainly provide you with more than a first
peek into the large variety of attacks that can be performed to assess a tar-
get’s security posture. Thanks to its guided, hands-on approach, you’ll learn
how to use the Metasploit Framework to exploit vulnerable applications and
use a single hole in a system’s defenses to bypass all perimeter protections,
dive deeper into the network, and exfiltrate data from the target systems.
You’ll learn how to bypass antivirus programs and perform efficient social-
engineering attacks using tools like the Social-Engineer Toolkit. You’ll see
how easy it would be to break into a corporate Wi-Fi network, and how to use
Georgia’s Smartphone Pentest Framework to assess how damaging a com-
pany’s bring your own device policy (or lack thereof) could be. Each chap-
ter is designed to trigger your interest in pentesting and to provide you with
first-hand insight into what goes on inside a pentester’s mind.
I hope this book will spark your creativity and desire to dive deeper into
certain areas; to work hard and learn more; and to do your own research
and share your knowledge with the community. As technology develops,
environments change, and companies increasingly rely on technology
to support their core business activities, the need for smart pentesters
will increase. You are the future of this community and the information-
security industry.
Good luck taking your first steps into the exciting world of pentesting.
I’m sure you will enjoy this book!
Peter “corelanc0d3r” Van Eeckhoutte
Founder of Corelan Team
Foreword xxi
aCknowleDgments
Many thanks go to the following people and organizations (in no particular
order).
My parents, who have always supported my career endeavors—including
paying for me to go to my first conference and get my first certifications when
I was still a broke college student.
Collegiate Cyber Defense Competition, particularly the Mid-Atlantic
region Red Team, for helping me find what I wanted to do with my life.
ShmooCon for accepting my first talk ever and also being the first con-
ference I ever attended.
Peiter “Mudge” Zatko and everyone who involved in the DARPA Cyber
Fast Track program for giving me the opportunity to start my own company
and build the Smartphone Pentest Framework.
James Siegel for being my lucky charm and making sure I get on stage
on time at events.
Rob Fuller for taking the time to come to James Madison University
and visit the CCDC team after the competition. That day I decided to make
a career of infosec.
John Fulmer for helping me with the crypto details in the wireless chapter.
Rachel Russell and Micheal Cottingham for being my first infosec buddies.
Jason and Rachel Oliver for technical and content review, and also for
making the perfect smoky eye look at ShmooCon and Black Hat.
Joe McCray, my infosec big brother, for being my mentor as I learn to
navigate the infosec business.
Leonard Chin for giving me my first big international conference expe-
rience and the confidence to become a conference trainer.
Brian Carty for helping me build my online lab.
Tom Bruch for letting me live in his house when I had no job and my
DARPA money hadn’t come through yet.
Dave Kennedy for providing introductions for several great opportunities.
Grecs for helping me market my classes on his website.
Raphael Mudge for getting me in touch with the DARPA Cyber Fast
Track program and many other great opportunities.
Peter Hesse and Gene Meltser for forcing me to have the courage to
move up at key junctures in my career.
Jayson Street for being a pickier eater than me so I almost pass as nor-
mal at speaker dinners in foreign countries. You are the best.
Ian Amit for recommending me for some great speaking slots when I
was just starting out.
Martin Bos for being awesome. You know what I mean.
Jason Kent for all those global premier upgrades and wonderful tau-
tologies for definitions, some of which appear herein.
My professors at James Madison University, particularly Samuel T.
Redwine—you inspired me more than you will ever know.
The people at No Starch Press for their help and support in developing
this book, including Alison Law, Tyler Ortman, and KC Crowell. Special
thanks to my editor and No Starch’s publisher, Bill Pollock.
xxiv Acknowledgments
introDuCtion
I decided to write this book because it was the sort
of book I wish I had had when I was starting out in
information security. Though there are certainly
more informative websites out there than when I
first started, I still find it’s difficult for a beginner to
know what to read first and where to get the expected prerequisite skills.
Likewise, there are a lot of books on the market—several great ones on
advanced topics, which require some background knowledge, and many
good books aimed at beginners, which cover a significant amount of theory.
But I haven’t found anything that says everything I want to say to the aspiring
pentester who emails me looking for a place to start in information security.
In my teaching career I’ve always found that my favorite course to
teach is Introduction to Pentesting. The students always have a thirst for
knowledge that is lots of fun to be around. Thus, when I was approached
by No Starch Press to write a book, this was the book I proposed. When I
announced it, many people assumed I was writing a mobile security book,
but while I considered that, I thought an introduction to pentesting would
make the biggest impact on the audience I most wanted to reach.
a note of thanks
A book like this would not be possible without many years of dedicated
work on the part of the information security community. The tools and
techniques discussed throughout this book are some of the ones my col-
leagues and I use regularly on engagements, and they’ve been developed
through the combined efforts of pentesters and other security experts all
over the world. I’ve contributed to some of these open source projects (such
as Mona.py, which we’ll use in the exploit development chapters), and I hope
this book will inspire you to do the same.
I want to take this opportunity to thank Offensive Security for creating
and maintaining the Kali Linux pentesting distribution used widely in the
field and throughout this book. A huge amount of credit also goes to the
core developers of the Metasploit Framework, as well as its numerous com-
munity contributors. Thanks too to all the pentesters and researchers who
have shared their knowledge, discoveries, and techniques with the com-
munity so that we can use them to assess the security posture of our clients
more effectively, and so that teachers like me can use them with our students.
Thanks as well to the creators of the great books, blog posts, courses,
and so on that have helped me achieve my goal of becoming a professional
pentester. I now hope to share the knowledge I’ve gained with other aspir-
ing pentesters.
You’ll find a list of additional resources (including courses and blogs)
at the end of this book. These are some of the resources that I have found
helpful on my own journey in infosec, and I encourage you to use them to
learn more about the many penetration testing topics covered in this book.
I hope you enjoy your journey as much as I have.
about this Book
To work through this book, you will need to know how to install software
on your computer. That’s it. You don’t need to be a Linux expert or know
the nitty-gritty of how networking protocols work. When you encounter
a topic that is not familiar to you, I encourage you to do some outside
research beyond my explanations if you need to—but we will walk step-by-
step through all the tools and techniques that may be new to you, starting
with the Linux command line. When I started in information security, the
closest thing I’d ever done to hacking was making the Windows XP pre-SP2
Start menu say Georgia instead of Start. And I was pretty proud of myself at
the time.
And then I went to the Collegiate Cyber Defense Competition and all
the Red Team members were using the command line at rapid speed and
making pop-up windows appear on my desktop from across a crowded
room. All I knew was that I wanted to be like them. There was a lot of hard
work between then and now, and there will be much more hard work as I
endeavor to reach the highest level of information security. I only hope that
with this book I can inspire more people to follow the same path.
xxvi Introduction
Part I: The Basics
In Chapter 0, we start out with some basic definitions of the phases of pene-
tration testing. In Chapter 1, we build our small practice laboratory, which we
will use to work through the exercises in this book. With many books, it’s pos-
sible to just download a few programs onto your existing platform, but to sim-
ulate a penetration test, our approach is a bit more involved. I recommend
that you take the time to set up your lab and work through the hands-on
examples with me. Though this book can serve as a reference and reminder
in the field, I believe it is best to first practice your pentesting skills at home.
In Chapter 2, we start with the basics of using Kali Linux and Linux
operating systems in general. Next, Chapter 3 covers the basics of program-
ming. Some readers may already have a working knowledge in these areas
and can skip past them. When I first started out, I had some programming
experience in C and Java, but I didn’t have a background in scripting, and
I had practically no background in Linux—a skillset that was assumed by
most of the hacking tutorials I encountered. Thus, I have provided a primer
here. If you are new to these areas, please do continue your studies outside
of this book. Linux-based operating systems are becoming more and more
prevalent as the platforms for mobile devices and web services, so skills in
this area will benefit you even if you don’t pursue a career in information
security. Likewise, knowing how to script your common tasks can only make
your life easier, regardless of your career.
We look at the basics of using the Metasploit Framework, a tool we will
leverage throughout this book, in Chapter 4. Though we will also learn to
perform many tasks without Metasploit, it is a go-to tool for many pentest-
ers in the field and is constantly evolving to include the latest threats and
techniques.
Part II: Assessments
Next we start working through a simulated penetration test. In Chapter 5,
we begin by gathering data about our target—both by searching freely
available information online and by engaging our target systems. We then
start searching for vulnerabilities using a combination of querying the sys-
tems and research in Chapter 6. In Chapter 7, we look at techniques to cap-
ture traffic that might include sensitive data.
Part III: Attacks
Next, in Chapter 8, we look at exploiting the vulnerabilities we found on
the network with a variety of tools and techniques, including Metasploit and
purely manual exploitation. We then look at methods for attacking what is
often the weakest link in a network’s security—password management—in
Chapter 9.
We next look at some more advanced exploitation techniques. Not
all vulnerabilities are in a service listening on the network. Web browsers,
PDF readers, Java, Microsoft Office—they all have been subject to security
issues. As clients work harder to secure their networks, attacking client-
side software may be the key to getting a foothold in the network. We look
Introduction xxvii
at leveraging client-side attacks in Chapter 10. In Chapter 11, we combine
client-side attacks with a look at social engineering, or attacking the human
element—the part of the environment that cannot be patched. After all, with
client-side attacks, the software in question must open a malicious file of
some sort, so we must convince the user to help us out. In Chapter 12, we
look at some methods of bypassing antivirus software, as many of your cli-
ents will deploy it. If you have high enough privileges on a system, you may
be able to just turn antivirus programs off, but a better solution is to breeze
right past antivirus programs undetected, which can be done even if you
are saving malicious programs to the hard drive.
In Chapter 13, we pick up with the next phase of our penetration test,
post exploitation. Some say the pentest truly begins after exploitation. This
is where you leverage your access to find additional systems to attack, sensi-
tive information to steal, and so on. If you continue your penetration test-
ing studies, you will spend a good deal of time working on the latest and
greatest post-exploitation techniques.
After post exploitation, we look at a few additional skills you will need
to be a well-rounded penetration tester. We will take a brief look at assess-
ing the security of custom web applications in Chapter 14. Everyone has a
website these days, so it’s a good skill to cultivate. Next we will look at assess-
ing the security of wireless networks in Chapter 15, looking at methods for
cracking commonly deployed cryptographic systems.
Part IV: Exploit Development
Chapters 16, 17, 18, and 19 discuss the basics of writing your own exploits.
We will look at finding vulnerabilities, exploiting them with common tech-
niques, and even writing our own Metasploit module. Up until these chap-
ters, we have relied on tools and publicly available exploits for a lot of our
exercises. As you advance in infosec, you may want to find new bugs (called
zero-days) and report them to vendors for a possible bounty. You can then
release a public exploit and/or Metasploit module to help other pentesters
test their customers’ environments for the issue you discovered.
Part V: Mobile Hacking
Finally, in Chapter 20, we close with a relatively new area of penetration test-
ing—assessing the security of mobile devices. We look at my own tool, the
Smartphone Pentest Framework. Perhaps after mastering the skills in this
book, you will endeavor to develop and release a security tool of your own.
Of course, this book doesn’t cover every single facet of information
security, nor every tool or technique. If it did, this book would have been
several times longer and come out a good deal later, and I need to get back
to my research. So here you have it: a hands-on introduction to hacking. It is
an honor to be with you on this important step on your journey into informa-
tion security. I hope that you learn a lot from this book and that it inspires
you to continue your studies and become an active member of this exciting
and rapidly developing field.
xxviii Introduction
0
Pene tr ation testing Primer
Penetration testing, or pentesting (not to be confused