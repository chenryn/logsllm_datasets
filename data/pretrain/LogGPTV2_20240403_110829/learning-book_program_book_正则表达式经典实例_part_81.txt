([bi]|em|big)\b
把标签名称捕获到第2个向后引用中
L
把任意属性与其他内容捕获到第3个向后引用中
(？：[^>"]
除了入、”或之外的任意字符
1”[”] *”
#
双引号引起来的属性值
|*[]*
单引号引起来的属性值
)*
#
)
#
>
#
正则选项：不区分大小写、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
我们使用了字符类同时匹配标签和，而不是像我们处理和
一样采用多选操作元字符（1)。字符类的执行速度比多选结构要快许多，这是因为它们
不需要回溯就可以完成任务。如果两个选项之间的区别只是单个学符，那么应当使用
字符类。
我们还为标签名称添加了一个捕获分组，这样就使得匹配属性和其他内容的分组把它
的匹配保存在了第3个向后引l用中。虽然如果你只是要把所有匹配都替换为
标签，就没有必要对标签名称采用向后应用，但是把标签名称保存到自己的向后引用
中会有助于你在有必要的时候检查所匹配到的标签种类。
如果要在替换标签名称的同时保留所有的属性，只需要使用如下的替代文本：
替代文本流派：.NET、Java、JavaScript、Perl、PHP
替代文本流派：Python、Ruby
在替代字符事中把第3个向后引用去掉，你就可以在相同的处理过程中把匹配到的标
签中的属性丢掉：
替代文本流派：.NET、Java、JavaScript、Perl、PHP
普代文本流派：Python、Ruby
参见
实例8.1讲解了如何匹配所有XML风格的标签，并且讨论了如何进行利擎权衡，其中
包括如何容忍不合法的标记。
实例8.3与本实例正好相反，它会讲解如何匹配除了一个指定标签列表之外的所有
标签。
418第8章
www.TopSage.com
---
## Page 435
8.3
删掉除和之外的
所有XML风格标签
问题描述
你想删除一个字符串中除了和之外的所有标签。
另外一个单独的任务是，你不仅要去掉除了和之外的所有标签，你还想
要去掉包含属性的所有和标签。
解决方案
这里正好可以利用否定型的顺序环视（参考实例2.16中的讲解）。把否定型顺序环视应
用到这个问题之上，它可以让你匹配到貌似标签的内容，但是会排除掉在起始的
和之外的所有标签
"+]I"["]*"|*[^'] **） *>
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
下面是宽松排列模式：
]
#
除了>、”或、之外的任意字符
1”["] *
#
双引号引起来的属性值
1'[]*
鲁
单引号引起来的属性值
#
正则选项：不区分大小写、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
解决方案2:匹配除了和，以及包含属性的所有标签
只需要一个很小的修改（把b替换为心s*>），就可以使上面的正则式也能匹配到包含
属性的任意和标签：
)[a-z](?:[^>"']1"["] *"|*[']*') *
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
标记语言和数据交换
419
www.TopSage.com
---
## Page 436
下面我们依然给出了同一正则式的宽松排列形式：
#
只避开包含属性的标签
[a=z]
#标签名称的首字母必须是a~z
(？：[^>"]
#
除了>、”或、之外的任意字符
1"["] *"
双引号引起来的属性值
1'[*] *
#
单引号引起来的属性值
) *
#
>
#
正则选项：不区分大小写、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
讨论
本实例中的正则表达式与在本章前面所讲的用来匹配XML风格标签的正则表达式拥
有很多相同之处。除了添加了否定型顺序环视以避免匹配到某些标签，这些正则表达
式几乎是同实例8.1中所给的“(X)HTML标签（灵活方案）”中的正则式是等同的。另
外一个主要区别是我们没有把标签名称捕获到第1个向后引用中。
下面仔细审视一下这个实例中引人的新内容。解决方案1永远不会匹配到
或标签，无论它们是否包含属性，但是会匹配到所有其他的标签。解决
方案2能匹配到解决方案1中匹配到的所有标签，并且还能匹配到包含一个或多
个属性的和标签。表8-2中给出了一些示例目标字符串，用来对此
加以解释。
表8-2几个目标字符串实例
目标字符串
解决方案1
解决方案2
匹配
匹配
匹配
匹配
匹配
匹配
不能匹配
不能匹配
不能匹配
不能匹配
不能匹配
匹配
因为这些正则式的最终目的是为了把所有匹配都替换为空字符串（也就是说把这些标
签删掉），所以解决方案2更加不会滥用允许的和标签来造成不可预期的
格式或其他怪异的效果。
420
第8章
www.TopSage.com
---
## Page 437
提示
到目前为止，本实例在介绍最后只剩下几种标签的情形时，故意避免了
要使用这个模式来限制使用人工注入的恶意HTML字符，会有许多种不
同的方式。如果你担心会遇到恶意HTML和跨站点脚本（XSS）攻击的
话，那么最好的选择是把所有的和&字符都转变成它们对应的字
符实体引用（和&amp；），然后再把已知是安全的标签加进来（前
提是它们不包含属性，或者只包含一个批准过的列表中的属性）.style是
一个不安全属性的例子，因为有些浏览器允许把脚本语言代码嵌入到你
的CSS中.举例来说，要想在把和&替换为字符实体引用之后
把标签再加回来，可以先使用正则式（）查找，再把所有匹配都
替换为《》（如果在Python和Ruby中，替换为《》）。
变体
白名单对应的特定属性
考虑这样的新需求：你需要匹配除了、和之外的所有标签，但是有两
个例外。你应当能够匹配包含除了href或title之外的其他属性的任意标签，以及
LR
换句话说，除了在白名单上的标签（、和），你想要删除所有其他的
标签。在白名单上的属性则只包括href和title，并且它们只允许出现在标签之内。
如果在任意标签中出现没有进人白名单的属性，那么整个标签都应当被删除。
c.com
下面是用来完成这个任务的一个正则表达式，分别给出了不使用和使用宽松排列模式
的形式：
)
..
1strong
或者...
Ia
#
或者..
(？：
#
避免匹配标签，如果其中只包含.
\s+
#
href和/或title属性
(?:href!title)
\s*=\s*
(*[.] .1*[]:)
#双引号或单引号引起来的属性值
) *
标记语言和数据交换
421
www.TopSage.com
---