下载 [SampleCaptures/s7comm_varservice_libnodavedemo.pcap](https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=s7comm_varservice_libnodavedemo.pcap)
下载后双击用 wireshark 打开。
*S7Comm*
- 读取值（Read Var [0x04]）
    - 读值操作的作业请求
        ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/24.png)
    - 响应
        ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/25.png)
- 写入值（Write Var [0x05]）
    - 向地址为 0×000020 的 Flags（M）写入 0×0103 的作业请求
        ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/26.png)
    - 向地址为 0×000020 的 Flags（M）写入 0×0103 的确认响应
        ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/27.png)
    图中的 item1，说明向地址为 0×000020 的Flags（M）写入 0×0103 成功！
**PLC STOP [0x29]**
192.168.141.1(WIN10)——>192.168.141.128(WIN2019)
snap7 client --> snap7 server
- 请求
    ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/36.png)
- 响应
    ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/37.png)
**Userdata 协议拓展**
192.168.100.56(WIN10)——>192.168.100.56(WIN10)
snap7 client --> snap7 server
*S7Comm*
- 块功能（Block functions [0x3]）
    - 列举所有块（List blocks）
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/38.png)
        - 响应
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/39.png)
    - 列举块类型（List blocks of type）
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/40.png)
        - 响应
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/41.png)
    - 读取模块的信息（Get block info）
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/42.png)
- CPU功能（CPU functions [0x4]）
    - 系统状态列表（SZL）
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/43.png)
        - 响应
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/44.png)
- 安全功能（Security [0x5]）
    - PLC密码（PLC password）
        ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/45.png)
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/46.png)
            Data 是 64 67 02 06 62 65 17 10
            - 第 1 位：0x64 ^ 0x55 = 0x31，则值是‘1’；
            - 第 2 位：0x67 ^ 0x55 = 0x32，则值是‘2’；
            - 第 3 位：0x02 ^ 0x55 ^ 0x64 = 0x33，则值是‘3’；
            - 第 4 位：0x06 ^ 0x55 ^ 0x67 = 0x34，则值是‘4’；
            - 第 5 位：0x62 ^ 0x55 ^ 0x02 = 0x35，则值是‘5’；
            - 第 6 位：0x65 ^ 0x55 ^ 0x06 = 0x36，则值是‘6’；
            - 第 7 位：0x17 ^ 0x55 ^ 0x62 = 0x20，则值是‘ ’；
            - 第 8 位：0x10 ^ 0x55 ^ 0x65 = 0x20，则值是‘ ’；
        - 响应
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/47.png)
- 时间功能（Time functions [0x7]）
    - 读时间（Read clock）；
        - 请求
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/48.png)
        - 响应
            ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/49.png)
---
### Ethernet/IP
下载 [ICS-Security-Tools/pcaps/EthernetIP/enip_test.pcap](https://github.com/ITI/ICS-Security-Tools/blob/master/pcaps/EthernetIP/enip_test.pcap)
- 请求
    ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/56.png)
    - Command: 命令，list identify 表示检测到 Ethernet/IP 列表身份的命令。
    - Length: 长度为 0，因为这个是一个请求包，没有数据长度。
    - Session Handle：记住这里为 0，后续的返回包我们看看是不是一样的。
    - Status: Success(0×00000000)
    - Max Response Delay:0, 这个包发送是实时的。
    - Sender Context:0000c1debed1, 正好 6 个字节的内容，等看看是不是一样的。
    - Options:0, 这里为始终为 0。
- 响应
    ![](../../../../assets/img/Security/BlueTeam/实验/流量分析/57.png)
    - Length: 长度不是 0 了，因为后面有了数据内容。
    - Session Handle: 还是 0，和请求包是一样的。
    - Sender Context: 和请求包一样，证明是对应的返回包。
    - Command Specific Data: 数据内容，这部分不需要细看了，里面是一些设备信息，这些在工控渗透时可能会用到。
---
## Malware
**学习资源**
- [Malware-Traffic-Analysis](https://www.malware-traffic-analysis.net/index.html) - 自 2013 年夏季以来，该网站已发布 1,600 多个有关恶意网络流量的博客条目。 该网站上几乎所有帖子都包含 pcap 文件或恶意软件样本（或两者）。
**Tips**
- 恶意流量包建议直接放到 VirusTotal 跑一遍
    - 利用 virustotal 可以在线扫描流量包, 但是 virustotal 需要登录才能匹配 Snort 和 Suricata 的规则, 如果无法无任何扫描结果，把流量包另存为 pcap 格式再扫描试试。
### 2014-11-16-traffic-analysis-exercise
- https://www.malware-traffic-analysis.net/2014/11/16/index.html
下载 https://www.malware-traffic-analysis.net/2014/11/16/2014-11-16-traffic-analysis-exercise.pcap.zip , 密码是 infected
---
## USB
### 鼠标流量
USB 协议的数据部分在 Leftover Capture Data 块中
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/63.png)
鼠标发送 00 03 0b 00 ,表示鼠标右移 03 像素，垂直向上移动 11 像素.
> 注意 : 有线鼠标和无线鼠标流量是不一样的
### 键盘流量
USB 协议的数据部分在 Leftover Capture Data 块中
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/64.png)
键盘发送 00 00 17 00 00 00 00 00，表示按下了 T。
---
## 蓝牙
过滤语法 : `obex`
---
## wifi
过滤语法 : `eapol`
如果确定是握手包可以用 Aircrack 爆破
---
## 其他
### TeamViewer
**相关文章**
- [一次私有协议的流量分析](https://mp.weixin.qq.com/s/6pmJsWYKa5vPM_EApIX2dg)
- [TeamViewer authentication protocol (part 1 of 3)](http://bennysecurity.blogspot.com/2014/02/rawtech-blog-teamviewer-authentication.html)
- [TeamViewer authentication protocol (part 2 of 3)](http://bennysecurity.blogspot.com/2014/02/rawtech-blog-teamviewer-authentication_5536.html)
- [TeamViewer authentication protocol (part 3 of 3)](http://bennysecurity.blogspot.com/2014/02/rawtech-blog-teamviewer-authentication_10.html)
- [Security Analysis: TeamViewer](https://awakesecurity.com/blog/analyzing-teamviewer/)
- [入侵检测系列1（上）：基于私有协议的加密流量分析思路（Teamviewer篇）](https://www.anquanke.com/post/id/223106)
- [入侵检测系列1（中）基于私有协议的加密流量分析思路（Teamviewer篇）](https://www.anquanke.com/post/id/225394)
- [入侵检测系列1（下）：基于私有协议的加密流量分析思路（Teamviewer篇）](https://www.anquanke.com/post/id/226531)
**lua插件**
- https://docs.google.com/file/d/0B3tHnfnS08GyWjJUOXE3UGFJRnc/edit
### CobaltStrike
**相关文章**
- [Cobalt Strike: Using Known Private Keys To Decrypt Traffic - Part 2](https://blog.nviso.eu/2021/10/27/cobalt-strike-using-known-private-keys-to-decrypt-traffic-part-2/)
    - [破解版密钥相同，部分CobaltStrike加密流量可解](https://mp.weixin.qq.com/s/AcIFSjyqn9gzyRkyx3sRIQ)
**相关工具**
- https://blog.didierstevens.com/2021/10/22/new-tool-cs-decrypt-metadata-py/
- https://blog.didierstevens.com/2021/10/11/update-1768-py-version-0-0-8/
- https://github.com/DidierStevens/Beta/blob/master/cs-parse-http-traffic.py
**案例**
用 1768.py 分析 beacon.exe 源文件
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/85.png)
抓包,用 cs-decrypt-metadata.py 解密 cookie
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/86.png)
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/87.png)
用 cs-parse-http-traffic 解密
![](../../../../assets/img/Security/BlueTeam/实验/流量分析/88.png)
### Shiro反序列化数据
**相关文章**
- [蓝队第3篇：Shiro反序列化数据包解密及蓝队分析工具，提供下载](https://mp.weixin.qq.com/s/5VQ4KHrgFDzkif3bcVAIcA)