使用命令行测试，从上面的结果可以看出，LVS服务器已经成功运行。
[root@LD_192_168_32_100~]#
welcome to192.168.32.2
[root@LD_192_168_32_100~]#curl http://192.168.32.150
基于DR模式的LVS的安装与配置
collisions:0 txqueuelen:0
RX packets:0errors:0 dropped:0 overruns:0 frame:0
UP RUNNING NOARPMTU:1480 Metric:1
inetaddr:192.168.32.150 Mask:255.255.255.255
Link encap:IPIP Tunnel HWaddr
packets:0
errors:0 dropped:0 overruns:0 carrier:0
---
## Page 241
255.255.255.255up
步骤如【示例8-7】所示。
听在0.0.0.0或VIP上，然后设置真实服务器的VIP。设置VIP的网络接口可以选择eth0或tunl0。
的方法安装和部署。
加真实的服务器，各个真实服务器权重指定为1，其他参数说明可参考表8.2。
192.168.32.2:80-g-W1
192.168.32.1:80-g -W1
tunlo
设置路由
【示例8-7】
如需LVS代理到后端的真实服务器，后端真实服务器需要启动服务，并确认服务端口监
4.真实服务器设置
Apache 服务需要在真实服务器上部署，部署完毕后需要做一些设置并启动，可以按上节
上述示例首先清除ipvsadm表，然后添加LVS 虚拟服务，并指定用直接路由DR 模式添
[root@LD_192_168_32_100 ~]#/sbin/ipvsadm -a -t 192.168.32.150:80
#增加第2台realserver
[rooteCentos]#cat-ntun.sh
3.Apache服务搭建
[root@LD_192_168_32_100~)#/sbin/ipvsadm -a -t 192.168.32.150:80
#增加第1台realserver
[root@LD_192_168 32_100~]#/sbin/ipvsadm-A
#使用ipvsadm安装LVS服务
[root@LD 192 168_32100~]# ipvsadm
#清除ipvsadm表
#启用路由转发功能
【示例8-6】
检查相关设置
echo2
echo1
#设置IP转发
设置VIP
OUE
inetaddr:192.168.32.150Mask:255.255.255.255
Link
>/proc/sys/net/ipv4/conf/all/arp_announce
/proc/sys/net/ipv4/conf/all/arp_ignore
/proc/sys/net/ipv4/conf/tunl0/arp_ignore
encap:IPIP Tunnel
播问题
cunlo up
/net/
HWaddr
192.168.32.150:80
第8章集群
229
---
## Page 242
CentOS7系统管理与运维实战
230
上，服务器处理这个报文，
个数据帧，从中可以获得该IP报文。当服务器发现报文的目标地址VIP是在本地的网络设备
器组的局域网上发送。因为数据帧的MAC地址是选出的服务器，所以服务器肯定可以收到这
台服务器，将数据帧的MAC地址改为选出服务器的MAC地址，再将修改后的数据帧在服务
负载均衡器已经添加了虚拟服务，然后进行LVS的测试，测试过程如【示例8-8】所示。
的arp 广播请求。
机器响应自己是VIP，因此为了达到负载均衡的目的，需让真实服务器忽略来自客户端计算机
器RS都设置了VIP，此时集群内的真实服务器会尝试回答来自客户端的请求，从而导致多台
VS/DR的工作流程如图8.6所示，负载均衡器根据各个服务器的负载情况，动态地选择
welcome to192.168.32.2
welcome
[root@LD_192_168_32_100~]#curl http://192.168.32.150
【示例8-8】
确认真实后端服务器已经启动并监听在0.0.0.0，并且真实服务器上设置了VIP，LVS前端
5.LVS测试
当客户端访问VIP时，会产生arp 广播，由于前端负载均衡器LD 和Apache真实的服务
使用浏览器或命令行测试，从上面的结果可以看出，LVS服务器已经成功运行。
[root@LD
to192.168.32.1
Rxbytes:0(0.0b)Txbytes:0(0.0b)
collisions:0 txqueuelen:0
UP RUNNING NOARP MTU:1480 Metric:1
IP数据包
192
RX
packets:0
SNMACVIP
32_100~]#cur1http://192.168.32.150
，然后根据路由表将响应报文直接返回给客户。
errors:0
VIP
VIP
图8.6LVS DR报文流程
dropped:0 overruns:0carrier:0
处返
然
1
---
## Page 243
步骤如【示例8-10】所示。
听在0.0.0.0或VIP上，然后设置真实服务器的VIP。设置VIP的网络接口可以选择eth0或tunl0。
的方法安装和部署。
服务器，各个真实服务器权重指定为1，其他参数说明可参考表8.2。
192.168.32.2:80-i-W1
192.168.32.1:80-1-W1
务器并添加真实服务器。操作步骤如【示例8-9】所示。
在其中隧道都是静态建立的，隧道一端有一个IP地址，另一端也有唯一的IP地址。
术（IPencapsulation）。IP 隧道主要用于移动主机和虚拟私有网络（Virtual Private Network），
为一个 IP地址的数据报文能被封装和转发到另一个IP地址。IP隧道技术亦称为IP 封装技
8.4.3
#增加第2台realserver
“IP隧道（IP tunneling）是将一个IP 报文封装在另一个IP 报文的技术，这可以使得目标
如需LVS代理到后端的真实服务器，后端真实服务器需要启动服务，并确认服务端口监
4.真实服务器设置
Apache 服务需要在真实服务器上部署，部署完毕后需要做一些设置并启动，可以按上节
上述示例首先清除ipvsadm表，然后添加LVS虚拟服务，并指定IP隧道模式添加真实的
[root@LD_192_168_32_100 ~1#/sbin/ipvsadm-a
3.Apache服务搭建
[root@LD_192_168_32_100~]#/sbin/ipvsadm-a-t192.168.32.150:80-r
#增加第l台realserver
#使用ipvsadm安装LvS服务
[root@LD_192_168 32 100~]#ipvsadm
#清除ipvsadm表
#启用路由转发功能
【示例8-9】
首先在前端负载均衡器192.168.32.100做相关设置，包含设置VIP，并添加LVS的虚拟服
2.LVS配置
首先可以按上节提供的方法安装ipvsadm软件。
1.ipvsadm软件安装
Iroot@LD 192 16832100
基于IP隧道模式的LVS的安装与配置
~1#/sbin/ipvsadm-A-t192.168.32.150:80
-C
-t 192.168.32.150:80-r
第8章集群
231
---
## Page 244
232
负载均衡器已经添加了虚拟服务，然后进行LVS的测试，测试过程如【示例8-11】所示。
的 arp 广播请求。
机器响应自己是VIP，因此为了达到负载均衡的目的，需让真实服务器忽略来自客户端计算机
器RS都设置了VIP，此时集群内的真实服务器会尝试回答来自客户端的请求，从而导致多台
255.255.255.255up
Centos7系统管理与运维实战
台服务器，将请求报文封装在另一个IP报文中，再将封装后的IP报文转发给选出的服务器；
VS/TUN的工作流程如图8.7所示：负载均衡器根据各个服务器的负载情况，动态地选择
使用浏览器或命令行测试，从上面的结果可以看出，LVS服务器已经成功运行。
welcome to192.168.32.2
[root@LD_192 168_32_100~]#curl http://192.168.32,150
welcome to192.168.32.1
[root@LD_192 168_32_100~]#cur1 http://192.168.32.150
【示例8-11】
确认真实后端服务器已经启动并监听在0.0.0.0，并且真实服务器上设置了VIP，LVS前端
5. LVS测试
当客户端访问VIP 时，会产生arp 广播，由于前端负载均衡器LD 和Apache 真实的服务
tunl0
[root@Centos-]# ifconfig tunl0
#检查相关设置
[root@Centos ~]# /sbin/route add -host 192.168.32.150 dev tun10
#设置路由
10 echo 2>/proc/sys/net/ipv4/conf/all/arp_announce
6
8
5
3
2
[root@Centos~]# cat-n tun.sh
【示例8-10】
echo2
echo1
#避免arp广播问题
/sbin/ifconfig tun10 192.168.32.150 broadcast 192.168.32.150 netmask
/sbin/ifconfig tunl0 up
#设置VIP
echo "o" >/proc/sys/net/ipv4/ip_forward
设置IP转发
RXbytes:0 (0.0b)Txbytes:0(0.0b)
collisions:0 txqueuelen:0
TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
RX packets:0 errors:0 dropped:0 overruns:0 frame:0
UP RUNNING NOARPMTU:1480 Metric:1
inet addr:192.168.32.150 Mask:255.255.255.255
Link encap:IPIP Tunnel
L
/proc/sys/net/ipv4/conf/tunl0/arp_announce
/proc/sys/net/ipv4/conf/tun10/arp_ignore
HWaddr
---
## Page 245
但不可避免地存在数据库慢查询，开启慢查询日志是必要的，同时需要对慢查询日志做按天的
服务或耗时增加，SQL审核尤其是数据库变更需要制定规范和流程保证。尽管有了SQL审核，
给开发使用。
的管理和审计需要有流程化的运维工具支撑，同时DROP、ALTER等高级权限应该避免分配
名，可按需分配增删改查或更高级的权限，当MySQL实例增至上百或上千的规模，日常权限
备数据的恢复需要做定期演练以便确认冷备有效和恢复流程。
据丢失或恶意篡改，在热备的基础上定期冷备是必要的，以便在突发情况下恢复数据，同时冷
迟等都需要及时了解，结合Web化的管理系统是一个有效手段。为避免一些危险操作导致数
发现系统中的问题，如主从同步状态、实例吞吐量、使用空间、慢查询数量、数据平均访问延
8.5.1
方面的应用。
客户。
配置在本地的IP隧道设备上，所以就处理这个请求，然后根据路由表将响应报文直接返回给
服务器收到报文后，先将报文解封获得原来目标地址为VIP的报文，服务器发现VIP地址被
由于实例的增长，
当 MySQL实例增多时，需要有效的权限管理，MySQL 权限管理一般基于用户名和主机
随着MySQL实例的增长，统一的监控系统是必要的，有效及时的监控告警可以保证及时
本节主要以高可用MySQL平台为例介绍负载均衡软件LVS 和高可用软件HA在MySQL
高可用MySQL平台的功能
利用集群搭建高可用MySQL平台
IP数据
，需要支撑的应用越来越多，如何避免应用开发者的SQL拖垮MySQL
SvIP
SrvIP
VIP
VIP
VIP
图8.7LVSTUN模式报文流程
ounensdeoep
MAN
真实服务收到数据包后解开数
用户
据包，发现是发给自己的包，
里，完成后将数据直接返回给
（DIP）作为目的地址对
第8章集群
233
---
## Page 246
8.5.2
Centos7系统管理与运维实战
234
衡。对于开发者来说是完全透明的，应用则只需要连接到MySQLProxy的监听端口即可。
据库，并且可以通过使用Lua脚本实现复杂的连接控制和过滤，从而实现读写分离和负载平
过滤和修改等功能。MySQL Proxy为一个连接池，负责将开发者应用层的连接请求转发给数
变客户端与服务器端的通信。使用灵活，没有限制，并且可以实现负载平衡、查询分析、查询
接该MySQL 示例，对于数据安全造成比较大的隐患。结合iptables 防火墙可以缓解此问题。
是应用层代理，需要对HAProxy的主机分配权限，这样任何知道用户名密码的用户都可以连
合进你当前的业务架构中，HAProxy可以使Web服务器不被暴露到公网上。
样可以代理MySQL等服务，HAProxy可以支持数以万计的并发连接，并且它可以很简单地整
是一种免费、快速并且可靠的解决方案。HAProxy比较适用于那些负载特大的Web 站点，同
各有优缺点，在不同的场合可以使用不同的代理方案，本节主要对比这几种方案的优缺点。
选方案。
急剧增长，完善的扩容和数据迁移工具是需要考虑的。
MySQL实例的细节，由MySQL存储层完成切换，以便及时完成故障切换。同时由于访问量
必须考虑的问题，一种是通知应用层切换，此种方法成本较高而且耗时较长，另外一种是屏蔽
审计，通过此方法可以及时发现系统中的异常SQL，以便及时优化。
MySQL主要使用了权限管理失效代理，MySQL的权限管理基于用户名和主机名，由于
目前开源社区有很多优秀的代理方案，如 HAProxy、MySQL Proxy和域名等，每种方案
MySQLProxy是一个处于客户端和MySQL服务端之间的代理程序，可以监测、分析或改
HAProxy 提供高可用性、负载均衡以及基于TCP和HTTP应用的代理，支持虚拟主机，
由于实例的增长，服务器故障的可能性增加，如何在故障的情况下实现应用的快速切换是
当然，这样Proxy机器可能成为单点失效，但完全可以使用多个Proxy机器作为冗余，开
2.MySQLProxy
1.HAProxy
基于以上需求，建设高可用MySQL平台是必要的，限于篇幅本章主要介绍容灾方面的可
综上所述，完善的高可用MySQL平台应该包含以下功能：
（7）扩容、迁移自动化
（6）Web化的管理系统
（5）
（4）
（3）SQL审核，慢查询审计
（2）完善的容灾及故障切换
（1）有效的监控
可选方案对比
权限管理与审计
有效的权限管理
---
## Page 247
8.5.4搭建MySQL集群
千的MySQL应用中采用端口区分不同的应用，iptables实现权限的控制与异常请求来源处理。
代理方案。
且无须修改客户端和服务器端的程序。在MySQL代理方面有不俗的表现，不失为一种优秀的
器构成一个高性能的、高可用的虚拟服务器集群。整个服务器集群的结构对客户是透明的，
请求均衡地转移到不同的服务器上执行，且调度器自动屏蔽掉服务器的故障，从而将一组服务
LVS+HA+PORT+iptables，其中iptables是可选的步骤。
种方案各有优缺点，在不同的场合可以使用不同的代理方案，本项目实现的方案为：
8.5.3
决问题的方法。需要注意的是切换后要注意MySQL长链接的切换。
件的统一配置管理，通过相关程序实现自动监控和hosts的自动修改，可以作为一种可选的解
DNS服务需要主备部署以便应对突发情况。
应用切换到其他的 MySQL 服务器，此方案需要维护一套DNS系统，增加了维护成本，同时
库。其最新版本可以在http://dev.mysql.com/downloads/mysql-Proxy/获取。
事务性查询，让从库处理查询。数据库复制被用来把事务性查询导致的变更同步到集群中的从
发者应用负责故障时的切换。MySQL Proxy可以实现读写分离，基本原理是让主数据库处理
rep.sh
rep.conf
genInstance.sh
mysql.conf
my.cnf
本方案中LVS主要解决负载均衡和调度管理，HA负责前端代理服务的高可用，在成百上
LVS 集群采用IP 负载均衡技术和基于内容请求分发技术。调度器具有很好的吞吐率，将
参数
MySQL集群涉及的资源信息如表8.3所示。
上节介绍了目前几种优秀的MySQL代理方案，如HAProxy、MySQL Proxy和域名等，每
本方法可以在主机上配置一系列的 hosts，通过批量管理工具如 puppet 可以实现 hosts 文
4.hosts配置管理
域名方式类似本机配置hosts的方式，在出现故障时通过更改域名指向可以快速将开发者
3.域名
高可用MySQL平台实现方案
根据rep.conf自动给对应的从库分配热备需要的用户名和密码
MySQL实例主从配置，每行代表一对主从配置
对应的管理账户
根据mysql.conf和my.cnf生成每个实例需要的配置文件并启动对应实例，分配
MySQL实例配置文件模板需要的参数设置，每行表示一个实例需要的参数
MySQL实例启动时需要的配置文件模板
说明
表8.3MySQL集群资源信息说明
第8章集群
235
---
## Page 248
CentOS7系统管理与运维实战
236
本节主要采用源码安装的方法，如【示例8-13】所示。
文件，然后完成MySQL实例的配置。
板，模板中设定了一些有关每个MySQL实例个性化的设置，然后通过主执行脚本读取该配置
其基本信息如【示例8-12】所示。
分表，则直接可以向上累加，一直到99。为便于演示，本节主要搭建两对MySQL主从实例，
两位表示每个应用对应的MySQL实例编号，如01表示该应用的第1个数据库，如应用分库
连接在第1级从库后面的从库，其他数值依次类推。后面两位用于标识每个开发者应用，最后
位表示是主数据库还是从数据库，1表示主数据库，2表示是主数据库的第1级从库，3表示
VIP理论上可以容纳5万多个端口应用10000-65535，可以满足绝大多数应用场景。其中第
rebei.conf
参数
192.168.3.103
192.168.3.102
192.168.3.100
192.168.3.200
rebei.sh
#编译
主：192.168.3.10010101从192.168.3.10120101
192.168.3.101
1root@centos mysql-5.1.49]#make