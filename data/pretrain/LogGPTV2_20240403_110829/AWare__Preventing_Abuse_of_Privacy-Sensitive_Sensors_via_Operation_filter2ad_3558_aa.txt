# AWare: Preventing Abuse of Privacy-Sensitive Sensors via Operation Bindings

**Authors:**
- Giuseppe Petracca, The Pennsylvania State University, US
- Ahmad-Atamli Reineh, University of Oxford, UK
- Yuqiong Sun, Symantec Research Labs, US
- Jens Grossklags, Technical University of Munich, DE
- Trent Jaeger, The Pennsylvania State University, US

**Publication:**
This paper was presented at the 23rd USENIX Security Symposium, August 16â€“18, 2017, in Vancouver, BC, Canada. It is included in the Proceedings of the 26th USENIX Security Symposium, ISBN 978-1-931971-40-9. Open access to the proceedings is sponsored by USENIX.

**Abstract:**
System designers face the challenge of controlling when untrusted applications can perform operations using privacy-sensitive sensors. Current systems request user authorization once (e.g., during installation or first use), but malicious applications can abuse these authorizations to collect data stealthily. Proposed methods enable systems to infer the operations associated with user input events, but malicious applications can still trick users into allowing unexpected, stealthy operations. To address this, we propose binding applications' operation requests to the associated user input events and their context, enabling users to authorize operations on privacy-sensitive sensors unambiguously and reuse such authorizations. We implement the AWare authorization framework for Android, extending the Android Middleware to control access to privacy-sensitive sensors. Our evaluation shows that:
1. In a laboratory-based user study, only 7% of users were tricked by four types of attacks, compared to 85% on average with prior approaches.
2. In a field study, user authorization effort increased by only 2.28 decisions on average per application.
3. A compatibility study with 1,000 most-downloaded Android applications demonstrated effective operation under AWare.

**1. Introduction**
Modern desktop, web, and mobile operating systems increasingly support applications that access privacy-sensitive sensors like cameras, microphones, and touch-screens. For example, insurance and banking apps use mobile cameras for claim processing and check depositing. However, once an application is granted access, it can use the sensor at will, leading to potential abuse. Cybercriminals have developed malware, such as Remote Access Trojans (RATs), to exfiltrate audio, video, and screen content. Since 75% of operations requiring permissions occur when the screen is off or the app is in the background, these attacks often go unnoticed. Examples include Dendroid and Krysanec, which led to significant legal actions.

Researchers have proposed methods to infer which operation requests are associated with user input events, such as Input-Driven and User-Driven access control. However, these methods can still be circumvented by malicious applications. In this work, we propose the AWare authorization framework to prevent abuse of privacy-sensitive sensors. AWare binds each operation request to a user input event and its context, ensuring explicit and reusable authorizations.

**2. Background**
Mobile platforms require user authorization for untrusted applications to perform sensitive operations, typically requested once during installation or first use. Malicious applications can abuse these authorizations to perform sensitive operations stealthily. Research has shown that more than 78% of users could be subject to such attacks. Real-world examples include malware apps like Judy, FalseGuide, and Skinner, which reached millions of devices. Previous defenses, such as Input-Driven and User-Driven access control, have limitations that can be exploited by malicious applications.

**3. Problem Definition**
Despite raised security measures, malicious applications can still leverage user errors to bypass protection mechanisms. Users often fail to identify the application requesting sensor access, the user input widget, or the actual operation. This can be due to phishing, subtle interface changes, or misunderstanding the operations. We identify four types of attacks that can still circumvent existing defenses:

- **Operation Switching:** A malicious application changes the mapping between a widget and the associated operation, tricking the user into authorizing an unintended operation.
- **Bait-and-Context-Switch:** A malicious application presents a widget in a misleading display context, tricking the user into authorizing an unintended operation.
- **Bait-and-Widget-Switch:** A malicious application presents the same widget multiple times and then substitutes another widget, hoping the user will not notice the change.
- **Application Spoofing:** A malicious application replicates the look-and-feel of a legitimate application's interface to gain unauthorized access to sensors.

**4. AWare Authorization Framework**
AWare addresses these issues by binding each operation request to the user input event and its context, creating an "operation binding." The user's authorization decision for an operation binding is recorded and can be reused as long as the application uses the same operation binding. AWare leverages various features of the user interface to monitor how user input events are elicited, reducing attack options. It is designed to be transparent to applications, requiring no modifications to run under AWare control.

**5. Implementation and Evaluation**
We implemented a prototype of the AWare authorization framework by modifying a recent version of the Android operating system. A study of 1,000 most-downloaded Android applications showed that they can operate effectively under AWare with less than 4% performance overhead. A laboratory-based user study involving 90 participants found that only 7% were tricked by four types of attacks, compared to 85% with alternative approaches. A field-based user study involving 24 participants found that users made only 2.28 additional decisions on average per application.

**6. Contributions**
- Identification of four types of attacks that can circumvent existing defenses.
- Proposal of the AWare authorization framework to prevent abuse of privacy-sensitive sensors.
- Implementation and testing of AWare, demonstrating its effectiveness and compatibility with popular Android applications.

**Conclusion**
The AWare authorization framework provides a robust solution to prevent the abuse of privacy-sensitive sensors by malicious applications. By binding operation requests to user input events and their context, AWare ensures that users can authorize operations unambiguously and reuse such authorizations, significantly reducing the risk of stealthy attacks.