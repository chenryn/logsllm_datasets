User: I'm trying to set up a barcode scanner object that will capture anything input from the scanner itself. The barcode scanner is recognized as a standard input (stdin) and therefore whenever I scan a barcode, I get standard input text. There will also be a keyboard attached to the system, which is another standard input. In order to differentiate between a barcode scan input and keyboard input, I will be using a prefix for any barcode information. In other words, if my barcodes will be 16 characters in length total, the first 4 would a predetermined character string/key to indicate that the following 12 characters are barcode inputs. This is pretty standard from what I've read. 
Now most examples I've seen will recognize the barcode input by capturing the character input event in a GUI application. This event callback method then builds a buffer to check for the 4 character prefix and redirects barcode input as necessary. The event callback method also will skip any character input events that are not barcode related and allow them to interact with the GUI as a standard input normally would (type into a text box or what have you). 
I want to do this same thing except without using a GUI application. I want my barcode scanner object to be independent of the GUI application. Ideally I would have a callback method, within the barcode scanner object, that stdin would call every time a character is input. From there I would grab any barcode input by checking for the 4 character prefix and would pass along any characters not apart of the barcode input. So in other words, I'd like stdin to pipe through my barcode scanner callback method, and then have my barcode scanner call back method be able to pipe non barcode characters back out as a standard input as though nothing had happened (still standard input that would go to a text box or something). 
Is this possible without a while loop constantly monitoring stdin? Even if I had a while loop monitoring stdin, how would I pump characters back out as stdin if they weren't barcode input? I looked into using pyusb to take over the barcode scanner's USB interface, but this requires root privileges to interact with the hardware (not an option for my project). Any help would be greatly appreciated. I have not been able to find an example of this yet. 
Edit: This project will be run in CentOS or some flavor of Linux.
Assistant: The normal way of intercepting standard input in Unix is pipes and multiple processes.  If you have a multi-process application, then one process can receive the "raw" standard input, capture barcode input, and pass on the rest to its standard output.  That output would then be the standard input of your UI process which would only receive non-barcode data.  To set this up initially, have a single launch process that sets up the pipes, starts the other two processes, and exits.
If you're new to these concepts, you have a long and interesting learning process ahead of you :-)
All this assumes that you really are receiving "keyboard" data through standard input, and not through X11 events as you seem to imply.  If you are developing within X11 (or GTK, etc.) then what I have described will almost certainly not work.