### MSIEXEC: Command-Line Tool for Windows Installer Operations

**Overview:**
`msiexec` is a command-line utility that allows you to install, modify, and perform various operations on Windows Installer packages. This tool is essential for both administrators and developers who need to manage software installations programmatically.

### Installation Options

**Description:**
Use these options to specify the type of installation when launching an installation package.

**Syntax:**
```sh
msiexec.exe [/i][/a][/j{u|m|/g|/t}][/x] <package_path>
```

**Parameters:**

- **/i**: Specifies a normal installation.
- **/a**: Specifies an administrative installation.
- **/ju**: Advertises the product to the current user.
- **/jm**: Advertises the product to all users.
- **/j/g <language_id>**: Specifies the language identifier used by the advertised package.
- **/j/t <transform>**: Applies a transform to the advertised package.
- **/x**: Uninstalls the package.
- **<package_path>**: Specifies the location and name of the installation package file.

**Examples:**
- To install a package named `example.msi` from the C: drive using a normal installation process:
  ```sh
  msiexec.exe /i "C:\example.msi"
  ```

### Display Options

**Description:**
Configure the user interface (UI) level during the installation process based on your target environment. For example, use a full UI for manual installations or no UI for Group Policy deployments.

**Syntax:**
```sh
msiexec.exe /i <package_path> [/quiet][/passive][/q{n|b|r|f}]
```

**Parameters:**

- **/quiet**: Specifies quiet mode, with no user interaction required.
- **/passive**: Specifies unattended mode, which shows only a progress bar.
- **/qn**: Specifies no UI during the installation process.
- **/qn+**: Specifies no UI during the installation process, except for a final dialog box at the end.
- **/qb**: Specifies a basic UI during the installation process.
- **/qb+**: Specifies a basic UI during the installation process, including a final dialog box at the end.
- **/qr**: Specifies a reduced UI experience during the installation process.
- **/qf**: Specifies a full UI experience during the installation process.

**Examples:**
- To install `C:\example.msi` with no UI:
  ```sh
  msiexec.exe /i "C:\example.msi" /qn
  ```

### Restart Options

**Description:**
Control whether the system should restart after the installation completes, especially if files are overwritten or in use.

**Syntax:**
```sh
msiexec.exe /i <package_path> [/norestart][/promptrestart][/forcerestart]
```

**Parameters:**

- **/norestart**: Prevents the system from restarting after the installation completes.
- **/promptrestart**: Prompts the user if a reboot is required.
- **/forcerestart**: Forces the system to restart after the installation completes.

**Examples:**
- To install `C:\example.msi` with no reboot at the end:
  ```sh
  msiexec.exe /i "C:\example.msi" /norestart
  ```

### Logging Options

**Description:**
Enable logging to create a log file with specific information, useful for debugging.

**Syntax:**
```sh
msiexec.exe [/i][/x] <package_path> [/L{i|w|e|a|r|u|c|m|o|p|v|x+|!|*}] <log_file_path>
```

**Parameters:**

- **/li**: Logs status messages.
- **/lw**: Logs non-fatal warnings.
- **/le**: Logs all error messages.
- **/la**: Logs information about when an action started.
- **/lr**: Logs action-specific records.
- **/lu**: Logs user request information.
- **/lc**: Logs initial UI parameters.
- **/lm**: Logs out-of-memory or fatal exit information.
- **/lo**: Logs out-of-disk-space messages.
- **/lp**: Logs terminal properties.
- **/lv**: Logs verbose output.
- **/lx**: Logs extra debugging information.
- **/l+**: Appends the information to an existing log file.
- **/l!**: Flushes each line to the log file.
- **/l***: Logs all information except verbose or extra debugging information.
- **<log_file_path>**: Specifies the location and name for the output log file.

**Examples:**
- To install `C:\example.msi` with all logging information, including verbose output, and store the log at `C:\package.log`:
  ```sh
  msiexec.exe /i "C:\example.msi" /L*V "C:\package.log"
  ```

### Update Options

**Description:**
Apply or remove updates using an installation package.

**Syntax:**
```sh
msiexec.exe [/p][/update][/uninstall[/package]] <patch_path>
```

**Parameters:**

- **/p**: Installs a patch. If installing silently, set `REINSTALLMODE` to `ecmus` and `REINSTALL` to `ALL`.
- **/update**: Installs patches. Separate multiple updates with a semicolon (`;`).
- **/uninstall**: Uninstalls a patch.
- **/package**: Specifies the product code to which the patch was applied.
- **<patch_path>**: Specifies the location and name of the patch file.

**Examples:**
- To install a patch `C:\MyPatch.msp`:
  ```sh
  msiexec.exe /p "C:\MyPatch.msp"
  ```
- To install a patch with silent reinstallation:
  ```sh
  msiexec.exe /p "C:\MyPatch.msp" /qb REINSTALLMODE="ecmus" REINSTALL="ALL"
  ```
- To uninstall a patch:
  ```sh
  msiexec.exe /uninstall {1BCBF52C-CD1B-454D-AEF7-852F73967318} /package {AAD3D77A-7476-469F-ADF4-04424124E91D}
  ```

### Repair Options

**Description:**
Repair an installed package.

**Syntax:**
```sh
msiexec.exe [/f{p|o|e|d|c|a|u|m|s|v}] <product_code>
```

**Parameters:**

- **/fp**: Repairs the package if a file is missing.
- **/fo**: Repairs the package if a file is missing or an older version is installed.
- **/fe**: Repairs the package if a file is missing or an equal or older version is installed.
- **/fd**: Repairs the package if a file is missing or a different version is installed.
- **/fc**: Repairs the package if a file is missing or the checksum does not match.
- **/fa**: Forces all files to be reinstalled.
- **/fu**: Repairs all required user-specific registry entries.
- **/fm**: Repairs all required computer-specific registry entries.
- **/fs**: Repairs all existing shortcuts.
- **/fv**: Runs from source and recaches the local package.
- **<product_code>**: Specifies the MSI product code to be repaired.

**Examples:**
- To force all files to be reinstalled for the product code `{AAD3D77A-7476-469F-ADF4-04424124E91D}`:
  ```sh
  msiexec.exe /fa {AAD3D77A-7476-469F-ADF4-04424124E91D}
  ```

### Set Public Properties

**Description:**
Set public properties through the command line. For more information about available properties and how to set them, refer to the documentation on [Public Properties](https://docs.microsoft.com/en-us/windows/win32/msi/public-properties).

This comprehensive guide should help you effectively use `msiexec` for managing Windows Installer packages.