TS 1.7.5, Target ES6, Environment Windows 8.1, Node 5.6
Since switching the "target" to ES 6, "target.name" is empty in class
decorators. With ES5 ist worked as expected.
I'm decorating my classes with class and property decorators:
The decorated TS class:
    @sg.DMClass
    export class User implements IUser {
        @sg.DMProperty
        firstName: string;
        @sg.DMProperty
        lastName: string;
        @sg.DMProperty
        friends: User[];
        @sg.DMProperty
        blogPosts: BlogPost[];
        @sg.DMProperty
        test: User;
    }
The TS decorator:
    export function DMClass(target: any) {
        var t = Reflect.getMetadata("design:paramtypes", target);
        var om = Reflect.getOwnMetadataKeys(target);
        console.log("schemaGen.DMClass: target: %s: %O", target.name, target);
        var schema = target.prototype[Schema];
        target[IsDomainClass] = true;
        target[Schema] = target.prototype[Schema];
        schema.class = target.name;
        console.log("schemaGen.DMClass: schema: %O", schema);
    }
**Current (faulty) behaviour:**  
So "target.name" is empty. Having a look at the generated js file seems to
reveal the problem:
    var gq = require("./gq");
    var sg = require("./schemaGen");
    var cons = console;
    let User = class {
    };
    __decorate([
        sg.DMProperty, 
        __metadata('design:type', String)
    ], User.prototype, "firstName", void 0);
    __decorate([
        sg.DMProperty, 
        __metadata('design:type', String)
    ], User.prototype, "lastName", void 0);
    __decorate([
        sg.DMProperty, 
        __metadata('design:type', {name: 'Array', type:'Array', elemType:'User'})
    ], User.prototype, "friends", void 0);
    __decorate([
        sg.DMProperty, 
        __metadata('design:type', {name: 'Array', type:'Array', elemType:'BlogPost'})
    ], User.prototype, "blogPosts", void 0);
    __decorate([
        sg.DMProperty, 
        __metadata('design:type', User)
    ], User.prototype, "test", void 0);
    User = __decorate([
        sg.DMClass, 
        __metadata('design:paramtypes', [])
    ], User);
    exports.User = User;
**Expected behaviour:**  
So TS generates class without name. I think it should generate following:
    let User = class User {
    };
Manually adding "User" as class name of course solves the problem, because
then "target.name"( == "class.name") is just accessing an ES 6 property.
Any help ist appreciated,  
best Mind