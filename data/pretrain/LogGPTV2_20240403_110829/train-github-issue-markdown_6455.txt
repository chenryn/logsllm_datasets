I have a simple Angular2 Application, which contains `App`, `P1`, `P2`,
`Child` in total 4 components, where `App` uses `P1` and `P2`, and both `P1`
and `P2` uses `Child`.
Here is the code:
    @Component({ 
      selector: 'child',
      template: ' child ',
    })
    export class ChildCmp {}
    @Component({ 
      selector: 'p1',
      template: ' P1: ',
      directives:[ChildCmp],
    })
    export class P1Cmp {}
    @Component({ 
      selector: 'p2',
      template: ' P2: ',
      directives:[ChildCmp],
    })
    export class P2Cmp {}
    @Component({ 
      selector: 'my-test',
      template: '',
      directives:[P1Cmp, P2Cmp],
    })
    export class TestApp {}
    bootstrap(TestApp);
The **index.html** to trigger the app is plain `` with all
required libs of Angular2.
You can check the demo in Plunker, console log shows
    EXCEPTION: TypeError: viewFactory_ChildCmp0 is not a function
Why it breaks?
This only happen when I put the `Child` into the both `P1` and `P2`, where
they are in the same parent component.
I think it is normal for developer to buildup some reusable component like
`child` then use it all around?
The Angular version is beta.01 and I tried this in Chrome and Firefox in both
Ubuntu and Mac.