User: 利用以下代码片段实现一个基于Python语言的Redis分布式锁
import redis\n\n\nclass RedisLock:\n    def __init__(self, redis_client, lock_key, expire=10):\n        self.redis = redis_client\n        self.lock_key = lock_key\n        self.expire = expire\n        self.locked = False\n\n    def acquire(self):\n        success = self.redis.set(self.lock_key, '1', ex=self.expire, nx=True)\n        if success:\n            self.locked = True\n        return success\n\n    def release(self):\n        if self.locked:\n            self.redis.delete(self.lock_key)\n            self.locked = False
Assistant: import redis


class RedisLock:
    def __init__(self, redis_client, lock_key, expire=10):
        self.redis = redis_client
        self.lock_key = lock_key
        self.expire = expire
        self.locked = False

    def acquire(self):
        success = self.redis.set(self.lock_key, '1', ex=self.expire, nx=True)
        if success:
            self.locked = True
        return success

    def release(self):
        if self.locked:
            self.redis.delete(self.lock_key)
            self.locked = False


if __name__ == '__main__':
    redis_client = redis.Redis(host='localhost', port=6379)
    lock = RedisLock(redis_client, 'my_lock')
    
    if lock.acquire():
        try:
            # do something while holding the lock
            print('lock acquired')
        finally:
            lock.release()