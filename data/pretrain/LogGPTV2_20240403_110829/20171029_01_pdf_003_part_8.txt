# Conditional Branching in psql

The psql command now supports conditional branching using the `\if`, `\elif`, `\else`, and `\endif` commands. These commands allow you to perform conditional logic within your psql scripts. The commands between `\if` and `\endif` are treated as a block, and the conditions for the `\if` and `\elif` commands must evaluate to `True` or `False`.

### Example 99: Using the `\if` Command
```sql
SELECT
    EXISTS(SELECT 1 FROM customer WHERE customer_id = 123) AS is_customer,
    EXISTS(SELECT 1 FROM employee WHERE employee_id = 456) AS is_employee;
\gset

\if :is_customer
    SELECT * FROM customer WHERE customer_id = 123;
\elif :is_employee
    SELECT * FROM employee WHERE employee_id = 456;
\endif
```

## pg_ctl Enhancements

The following enhancements have been added to the `pg_ctl` command:

- **Wait for Promotion**: The `-w` option can be used to wait for the standby instance to be promoted. Previously, it was necessary to check the trigger file to confirm promotion.
- **Option Aliases**: The options `--wait` and `--no-wait` can be used as aliases for `-w` and `-W` respectively. Additionally, `--options` can be used as an alias for `-o`.
- **Default Wait for Startup**: By default, all operations now wait for completion (`--wait`). In the past, the default behavior for instance startup and promotion did not wait for operation completion.

## pg_basebackup Changes

The `pg_basebackup` command has been updated with the following changes:

- **Default WAL Transfer Mode**: The default Write-Ahead Log (WAL) transfer mode is now `Stream`, which uses multiple wal sender processes by default.
- **Discontinued -x Option**: The `-x` option (or `--xlog` option) has been deprecated.
- **Changed -X Option**: The `-X` option now accepts the value `none`, which excludes transaction logs from the backup. The long option name has been changed from `--xlog-method` to `--wal-method`.
- **Renamed --xlogdir Option**: The `--xlogdir` option has been renamed to `--waldir`.
- **Combination of -Ft and -Xstream Options**: The `-Ft` and `-Xstream` options can now be used together to output backup data to a tar file, including the `pg_wal.tar` file in the directory specified by the `-D` option.

### Example 100: Using -Ft and -Xstream Options
```sh
$ pg_basebackup -D back1 -v -Ft -Xstream
pg_basebackup: initiating base backup, waiting for checkpoint to complete
pg_basebackup: checkpoint completed
...
pg_basebackup: waiting for background process to finish streaming ...
pg_basebackup: base backup completed
$ ls back1/
base.tar pg_wal.tar
$ tar tvf back1/pg_wal.tar
-rw------- postgres/postgres 16777216 2017-05-20 16:36 0000001000000000000002F
-rw------- postgres/postgres 0 2017-05-20 16:36 archive_status/00000001000000000000002F.done
$
```

- **Temporary Replication Slots**: When the slot name (`-S`) is not specified (and `--no-slot` is not used), a temporary replication slot is created. The log when `log_replication_commands` is set to `on` will show the creation of temporary slots with names starting with `pg_basebackup_`.

### Example 101: Temporary Replication Slot Creation Log
```sh
LOG: received replication command: IDENTIFY_SYSTEM
LOG: received replication command: BASE_BACKUP LABEL 'pg_basebackup base backup' NOWAIT
LOG: received replication command: IDENTIFY_SYSTEM
LOG: received replication command: CREATE_REPLICATION_SLOT "pg_basebackup_12889" TEMPORARY PHYSICAL RESERVE_WAL
LOG: received replication command: START_REPLICATION SLOT "pg_basebackup_12889" 0/49000000 TIMELINE 1
```

- **Error Handling**: If the replication slot is full, the `pg_basebackup` command will fail. Ensure that the `max_replication_slots` parameter has sufficient free space.

### Example 102: Error When No Replication Slots Are Available
```sh
$ pg_basebackup -D back
pg_basebackup: could not connect to server: FATAL: number of requested standby connections exceeds max_wal_senders (currently 0)
pg_basebackup: removing contents of data directory "back"
$ echo $?
1
```

- **Cleanup on Error**: When an error occurs during the `pg_basebackup` command or a signal is received, the files in the directory specified by the `-D` parameter will be deleted. To prevent this, use the `--no-clean` (or `-n`) option.
- **Verbose Mode**: More detailed information is displayed when the `--verbose` (or `-v`) option is specified.

### Example 103: Verbose Mode Output
```sh
$ pg_basebackup -D back --verbose
pg_basebackup: initiating base backup, waiting for checkpoint to complete
pg_basebackup: checkpoint completed
pg_basebackup: write-ahead log start point: 0/35000028 on timeline 1
pg_basebackup: starting background WAL receiver
pg_basebackup: write-ahead log end point: 0/35000130
pg_basebackup: waiting for background process to finish streaming ...
pg_basebackup: base backup completed
$
```

## pg_dump Enhancements

The `pg_dump` command now includes the following options:

- **-B (--no-blobs)**: Exclude large objects.
- **--no-subscriptions**: Exclude SUBSCRIPTION objects used for Logical Replication.
- **--no-publications**: Exclude PUBLICATION objects used for Logical Replication.
- **--no-sync**: Do not execute the `sync` system call after writing the file. By default, the `sync` call is executed to ensure a reliable write operation.

## pg_dumpall Enhancements

The `pg_dumpall` command now includes the following options:

- **--no-sync**: Do not execute the `sync` system call after writing the file.
- **--no-role-passwords**: Do not dump role passwords.
- **--no-subscriptions**: Exclude SUBSCRIPTION objects used for Logical Replication.
- **--no-publications**: Exclude PUBLICATION objects used for Logical Replication.

## pg_recvlogical Enhancements

The `-E` (or `--endpos`) option has been added to terminate the program after receiving the specified LSN.

## pgbench Enhancements

The `--log-prefix` parameter has been added to change the prefix string of the log file. The default value remains `pgbench_log` as in previous versions. Some new functions have been added to the `pgbench` command, but they have not yet been verified.

## initdb Enhancements

The `--noclean` and `--nosync` options have been renamed to `--no-clean` and `--no-sync`.

## pg_receivexlog Renamed

The `pg_receivexlog` command has been renamed to `pg_receivewal`. The `--compress` parameter can now be specified to compress the output WAL file. The compression ratio can be set from 0 to 9. To use this feature, the libz library must be installed in the environment.

## pg_restore Enhancements

The `pg_restore` command now includes the following options:

- **-N (--exclude-schema)**: Specify the name of the schema not to be restored.
- **--no-subscriptions**: Exclude SUBSCRIPTION objects used for Logical Replication.
- **--no-publications**: Exclude PUBLICATION objects used for Logical Replication.

## pg_upgrade Enhancements

Internally, `pg_upgrade` now treats tables and sequences as separate objects.

## createuser Deprecation

The `--unencrypted` option (or `-N` option) has been deprecated.

## createlang and droplang Deprecation

The `createlang` and `droplang` commands have been deprecated.

## Contrib Modules

This section describes the new features of the Contrib modules.

### postgres_fdw Enhancements

The `postgres_fdw` module now includes the following enhancements:

- **Push-Down of Aggregation Processing**: It is now possible to push down aggregation processing for FULL JOIN between remote tables.

#### Example 104: SQL for Local Execution
```sql
postgres=# SELECT COUNT(*), AVG(c1), SUM(c1) FROM datar1 ;
 count |        avg         |   sum
-------+--------------------+---------
 1000 | 500.50000000000000 | 500500
(1 row)
```

The above SQL statement is converted to the following SQL statement at the FOREIGN SERVER.

#### Example 105: Remote Execution SQL
```sql
statement: START TRANSACTION ISOLATION LEVEL REPEATABLE READ
execute : DECLARE c1 CURSOR FOR
SELECT count(*), avg(c1), sum(c1) FROM public.datar1
statement: FETCH 100 FROM c1
statement: CLOSE c1
statement: COMMIT TRANSACTION
```

- **Push-Down of FULL JOIN**: Push-down is now supported for FULL JOIN between remote tables.

#### Example 106: FULL JOIN Between Remote Tables
```sql
postgres=> EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM (SELECT * FROM remote1 WHERE c1 < 10) AS s4 FULL JOIN (SELECT * FROM remote2 WHERE c1 < 10) AS s5 ON s4.c1 = s5.c1;
 Foreign Scan
 Output: remote1.c1, remote1.c2, remote2.c1, remote2.c2
 Relations: (public.remote1) FULL JOIN (public.remote2)
 Remote SQL: SELECT s4.c1, s4.c2, s5.c1, s5.c2 FROM ((SELECT c1, c2 FROM public.remote1 WHERE ((c1 < 10))) s4 FULL JOIN (SELECT c1, c2 FROM public.remote2 WHERE ((c1 < 10))) s5 ON ((s4.c1 = s5.c1)))
```

### GIST Index Enhancements

GIST indexes now support UUID and ENUM types.

#### Example 107: Creating GIST Indexes
```sql
CREATE TYPE type1 AS ENUM ('typ1', 'typ2', 'typ3');
CREATE TABLE gist1(c1 UUID, c2 type1);
CREATE INDEX idx1_gist1 ON gist1 USING gist (c1);
CREATE INDEX idx2_gist1 ON gist1 USING gist (c2);
```

### pg_stat_statements Format Change

The format of the SQL statement stored in the `query` column of the `pg_stat_statements` view has been changed. The literal value of the `WHERE` clause, which was previously output as a question mark (?), is now output as `${N}` (where N = 1, 2, ...).

#### Example 112: pg_stat_statements View
```sql
postgres=> SELECT query FROM pg_stat_statements WHERE query LIKE '%part1%';
 query
--------------------------------------------------
 SELECT COUNT(*) FROM part1 WHERE c1=$1
 SELECT COUNT(*) FROM part1 WHERE c1=$1 AND c2=$2
(2 rows)
```

### tsearch2 Module Removal

The `tsearch2` module has been removed.

## References

The following websites were referenced to create this material:

- [Release Notes](https://www.postgresql.org/docs/devel/static/release-10.html)
- [Commitfests](https://commitfest.postgresql.org/)
- [PostgreSQL 10 Beta Manual](https://www.postgresql.org/docs/devel/static/index.html)
- [GitHub](https://github.com/postgres/postgres)
- [Open Source Developer Based in Japan (Michael Paquier)](http://paquier.xyz/)
- [Hibino Kiroku Bekkan (Nuko@Yokohama)](http://d.hatena.ne.jp/nuko_yokohama/)
- [Qiita (Nuko@Yokohama)](http://qiita.com/nuko_yokohama)
- [pgsql-hackers Mailing List](https://www.postgresql.org/list/pgsql-hackers/)
- [Announce of PostgreSQL 10 Beta 1](https://www.postgresql.org/about/news/1749/)
- [PostgreSQL 10 Roadmap](https://blog.2ndquadrant.com/postgresql-10-roadmap/)
- [PostgreSQL 10 Roadmap](https://wiki.postgresql.org/wiki/PostgreSQL10_Roadmap)
- [Slack - postgresql-jp](https://postgresql-jp.slack.com/)

## Change History

| Version | Date       | Author                | Description |
|---------|------------|-----------------------|-------------|
| 0.1     | Apr 4, 2017| Noriyoshi Shinoda      | Create internal review version |
| 0.9     | May 21, 2017| Noriyoshi Shinoda      | Recheck completed to respond to PostgreSQL 10 Beta 1 |
| 1.0     | May 22, 2017| Noriyoshi Shinoda      | Create a public version |

Reviewers:
- Satoshi Nagayasu (Uptime Technologies, LCC.)
- Tomoo Takahashi (HPE)

© 2016-2017 Hewlett-Packard Enterprise Japan Co, Ltd.