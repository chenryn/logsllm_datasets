title:A nationwide study on cellular reliability: measurement, analysis,
and enhancements
author:Yang Li and
Hao Lin and
Zhenhua Li and
Yunhao Liu and
Feng Qian and
Liangyi Gong and
Xianlong Xin and
Tianyin Xu
A Nationwide Study on Cellular Reliability:
Measurement, Analysis, and Enhancements
Yang Li†∗, Hao Lin†∗, Zhenhua Li†, Yunhao Liu†
Feng Qian§, Liangyi Gong†, Xianlong Xin‡, Tianyin Xu¶
†Tsinghua University
§University of Minnesota, Twin Cities
‡Xiaomi Technology Co. LTD
¶University of Illinois at Urbana-Champaign
ABSTRACT
1
INTRODUCTION
With recent advances on cellular technologies (such as 5G) that push
the boundary of cellular performance, cellular reliability has become
a key concern of cellular technology adoption and deployment. How-
ever, this fundamental concern has never been addressed due to the
challenges of measuring cellular reliability on mobile devices and
the cost of conducting large-scale measurements. This paper closes
the knowledge gap by presenting the ﬁrst large-scale, in-depth study
on cellular reliability with more than 70 million Android phones
across 34 different hardware models. Our study identiﬁes the crit-
ical factors that affect cellular reliability and clears up misleading
intuitions indicated by common wisdom. In particular, our study
pinpoints that software reliability defects are among the main root
causes of cellular data connection failures. Our work provides ac-
tionable insights for improving cellular reliability at scale. More
importantly, we have built on our insights to develop enhancements
that effectively address cellular reliability issues with remarkable
real-world impact—our optimizations on Android’s cellular imple-
mentations have reduced 40% cellular connection failures for 5G
phones and 36% failure duration across all phones.
CCS CONCEPTS
• Networks → Mobile networks; Network reliability; Network
measurement; Network performance analysis;
KEYWORDS
Cellular Network; 5G Network; Reliability; Measurement; Mobile
Operating System; Cellular Connection Management
ACM Reference Format:
Yang Li, Hao Lin, Zhenhua Li, Yunhao Liu, Feng Qian, Liangyi Gong, Xi-
anlong Xin, Tianyin Xu. 2021. A Nationwide Study on Cellular Reliability:
Measurement, Analysis, and Enhancements. In ACM SIGCOMM 2021 Con-
ference (SIGCOMM ’21), August 23–27, 2021, Virtual Event, USA. ACM,
New York, NY, USA, 13 pages. https://doi.org/10.1145/3452296.3472908
∗Co-primary authors. Zhenhua Li and Yunhao Liu are the corresponding authors.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior speciﬁc permission and/or a
fee. Request permissions from permissions@acm.org.
SIGCOMM ’21, August 23–27, 2021, Virtual Event, USA
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8383-7/21/08. . . $15.00
https://doi.org/10.1145/3452296.3472908
Cellular technologies have been the keystone of mobile systems and
applications that empower our daily lives, all the way from wireless
telephony and mobile Internet, to emerging applications such as ultra
high-deﬁnition (UHD) video streaming and AR/VR [24]. The rise
of 5G technologies has started to realize even higher-bandwidth and
lower-latency cellular networks, driving the grand vision of AI, IoT,
and self-driving vehicles. Speciﬁcally, 5G cellular networks support
up to 10 Gbps bandwidth (100× faster than 4G), 1 ms latency (cf.
30-50 ms for 4G), and connection density of 1000 devices per square
kilometer (100× more than 4G) [14].
While we have been mainly focusing on the performance of
cellular network technologies and the availability of cellular net-
work services, the cellular reliability of mobile devices has been
largely overlooked—without reliable cellular connections, perfor-
mance would be a mirage. From a mobile device’s perspective, cellu-
lar data connections can fail mostly in the following three ways1:
• Data_Setup_Error [4]2: The mobile device can receive signals
from a nearby base station (BS) but cannot establish a data con-
nection with the BS.
• Out_of_Service [8]: The data connection has been established,
but the mobile device cannot receive cellular data.
• Data_Stall [5]: The mobile device can receive cellular data, but
the data connection abnormally stalls (for longer than one minute
as suggested in Android).
However, cellular reliability is rarely studied or measured, but con-
stantly acts as an X-factor in discussion or decision making [14, 36].
Certainly, understanding cellular reliability at large is challenging.
First, as we will discuss in §2, existing mobile systems do not pro-
vide sufﬁcient tracing and logging support for low-level cellular
connection components, creating signiﬁcant barriers to precisely
capturing failure events and effectively diagnose their root causes.
Second, it is difﬁcult and expensive to conduct large-scale reliability
measurements on real-world mobile devices; controlled lab studies
could help but hardly yield representative characteristics [59].
To close the knowledge gap, we collaborate with a major Android
phone vendor, Xiaomi Co. LTD, which serves hundreds of millions
of mobile users in China, to conduct a large-scale, in-depth study
on cellular reliability from the device perspective. Speciﬁcally, our
1We use Android terminologies throughout the paper.
2Strictly speaking, some Data_Setup_Error events deﬁned in Android are not true
failures since they occur rationally due to BS overloading. Such false positives will be
carefully removed in our study.
goal is to measure the prevalence and severity of cellular reliabil-
ity problems perceived by user devices and reveal the root causes
of cellular (data connection) failures, including Data_Setup_Error,
Out_of_Service, Data_Stall, and so forth. Interestingly, understand-
ing cellular reliability turns out to be well aligned with the business
need of Xiaomi, as cellular connection issues were a major con-
tributor to their customer reports, but had been elusive problems
for Xiaomi engineers. Therefore, we have the common interests in
understanding cellular failures and improving cellular reliability.
Measurement. We build a continuous monitoring infrastructure on
top of a customized Android system called Android-MOD. Android-
MOD records system-level traces (without requiring root privileges)
upon the occurrence of suspicious cellular failure events. To extract
true failure events and collect diagnostic information, we instrument
relevant system services to record detailed device/network state
information and carefully ﬁlter out false positives.
We invited all users of Xiaomi to participate in the measurement
study by installing Android-MOD on their phones, and ﬁnally 70M
users opted in and shared data with us for eight months (Jan.–Aug.
2020). The dataset involves 34 different models of Android phones, 3
mobile ISPs (referred to as ISP-A: China Mobile, ISP-B: China Tele-
com, and ISP-C: China Unicom), and 5.3M BSes. All the data were
collected with informed consent of opt-in users, and no personally
identiﬁable information (PII) was collected during the measurement.
Analysis. Our measurement reveals that cellular failures are preva-
lent on all the 34 models of devices. For each model, 0.15%–45%
(averaging at 23%) of the devices have experienced at least one
cellular failure. On average, as many as 33 failures occur to a device
during the measurement, and a failure lasts for as long as 3.1 minutes.
Newer OS versions (e.g., Android 10) and communication modules
(e.g., 5G modules) substantially aggravate the situation, while better
hardware does not seem to relieve the situation. In particular, our
results indicate that cellular failures are mainly caused by software
reliability defects rather than inexpensive hardware, e.g., the im-
plementation that blindly prioritizes 5G connection in Android 10
greatly impairs the stability of cellular connections.
Moreover, we ﬁnd that most (94%) failure duration is owing to
Data_Stall failures. To recover a cellular connection from Data_Stall
failures, Android implements a three-stage progressive mechanism
which sequentially tries light (cleaning up and restarting the current
connection), moderate (re-registering into the network), and heavy
(restarting the radio component) recovery techniques based on one-
minute probations. Our data show that for the majority of Data_Stall
failures, either the user device can automatically ﬁx them in less
amount of time, or the user would manually reset the connection
after ∼30 seconds. Thus, the three-stage design is not efﬁcient.
From the viewpoint of ISPs, cellular failures occur more preva-
lently (27.1%) on ISP-B users than on ISP-A users (20.1%) and
ISP-C users (14.7%) due to the inferior signal coverage of ISP-B.
Counter-intuitively, while both the number and overall signal cov-
erage of 3G BSes are smaller than those of 2G or 4G BSes, the
prevalence of failures on 3G BSes is lower than that on 2G or 4G
BSes. This can be ascribed to the fact that 3G access is usually not
preferred when 4G access is available and its signal coverage is
worse than that of 2G when 4G access is unavailable, and thus is
confronted with less resource contention.
With respect to BSes, common wisdom suggests a positive corre-
lation between cellular reliability and received signal strength (RSS).
However, our measurement shows the opposite when there is excel-
lent (level 5) RSS—failures are in fact more likely to happen in this
case than when there is weaker (level 1 to 4) RSS. We clear up the
mystery—most of the excellent-RSS failures come from densely-
deployed BSes around public transport hubs; while such BSes offer
excellent RSS, they increase the control-channel overhead of LTE
mobility management [12, 29], causing frequent failures tagged with
EMM_ACCESS_BARRED, INVALID_EMM_STATE, etc. [3].
Enhancements. Our study provides insights to improve cellular re-
liability at scale 1) for mobile phone vendors to roll out 5G modules
and new OS versions, 2) for mobile ISPs to make use of radio re-
sources, e.g., utilizing “idle” 3G BSes and planning BS deployment
density in public areas, and 3) for promoting cross-ISP infrastructure.
More importantly, some of our enhancements have been practi-
cally deployed with real-world impact. First, instead of aggressively
pursuing the potential high data rate of 5G, we optimize the radio
access technology (RAT) selection policy in Android 10 by judi-
ciously considering the likelihood of cellular failures and meanwhile
utilizing the novel 4G/5G dual-connectivity mechanism [47].
Second, we optimize the three-stage cellular-connection recovery
mechanism in Android by replacing its ﬁxed-time trigger with a ﬂex-
ible and dynamic trigger based on a time-inhomogeneous Markov
process [49] (TIMP). TIMP advances the traditional Markov process
that can only model a stationary process, to model complex state
transitions in a time-sensitive manner. The TIMP-based recovery
helps most user devices recover more quickly (the three probations
are adaptively tuned as 21, 6 and 16 seconds, each being much
shorter than one minute) and effectively with negligible overhead.
Since the release of the patched Android-MOD system with the
above two-fold optimizations (adopted by 40% of the 70M opt-in
users in late Oct. 2020), we have successfully reduced 40% cellular
failures for 5G phones (without sacriﬁcing the data rate) and 38%
Data_Stall duration (equivalent to 36% total failure duration) for all
phones during Nov.–Dec. 2020.
Code Release. The failure diagnosis and ﬁxing code involved in
the study is publicly available at https://CellularReliability.github.io.
2 STUDY METHODOLOGY
We conducted a large-scale measurement study on cellular failures
based on continuously monitoring 70M opt-in user devices over
eight months. The study is enabled by Android-MOD, a customized
Android system that provides lightweight, privacy-preserving tracing
and analysis beyond the capability of the vanilla Android system.
2.1 Limitations of Vanilla Android
Cellular connection management exists as a system service in An-
droid, where the life cycle of a cellular data connection is modeled
by a state machine [2] as shown in Figure 1: a total of ﬁve states are
used to represent different stages of a cellular connection, including
Inactive, Activating, Retrying, Active, and Disconnect. As one state
changes to another, Android provides quite a few facilities to moni-
tor various problems during the process, most of which are related
to our targeted cellular failures.
the occurrence of a failure event without capturing other important
in-situ information, such as the desired BS information, received
signal strength (RSS), protocol error code, and network state.
2.2 Continuous Monitoring Infrastructure
To practically address the above-described multifold challenges, we
customize the vanilla Android system for continuously acquiring
ﬁne-grained system-level traces upon the occurrence of suspicious
cellular failure events, which are otherwise impossible to obtain but
are crucial to our study requirements. The resulting system is called
Android-MOD, in which we focus on modifying the Framework-
layer programs. We do not make modiﬁcations to the hardware
abstract layer (HAL) or the kernel layer—while HAL/kernel modiﬁ-
cations can help us collect more underlying and detailed data, they
can easily impair the system stability and robustness in practice
(even with careful testing) [16].
At a high level, our modiﬁcations are made to realize three goals:
1) system service instrumentation, 2) concerned information logging,
and 3) failure recovery monitoring. Speciﬁcally, we ﬁrst instrument
the Android system service of cellular connection management by
registering our developed monitoring service as its event listener,
so that all the occurrences of Data_Setup_Error, Out_of_Service,
Data_Stall, and other concerned failure events can be captured in
real time. It is worth noting that when instrumenting the service,
we carefully rule out a variety of false failure events (a.k.a., false
positives), such as connection disruption by incoming voice calls,
service suspension due to insufﬁcient account balance, and manual
disconnection of the network.
Second, we need to record important radio- and BS-related infor-
mation upon the occurrence of a cellular failure for in-depth analysis.
Such information includes the current radio access technology (RAT,
e.g., 4G LTE or 5G NR), received signal strength (RSS), access point
names (APNs), and BS ID that consists of Mobile Country Code
(MCC), Mobile Network Code (MNC), Location Area Code (LAC),
and Cell Identity (CID)3. All these information can be accessed
via the APIs provided by the Android TelephonyManager and Ser-
viceState services. Besides, we record the protocol error codes for
Data_Setup_Error events to facilitate our uncovering the root causes,
and to further rule out possible false positives such as rational setup
rejection due to BS overloading. In particular, we have carefully
analyzed all the 344 cellular connection-related error codes deﬁned
in Android [3], and recognized tens of error codes that are highly
correlated with false positives as critical auxiliary information.
Third, we note that the existing Data_Stall detection mechanism
in Android cannot provide an accurate measurement of a Data_Stall
failure’s duration, given its ﬁxed detection time (as long as one
minute). According to our observations (detailed later in §3.1), in
most (>80%) cases a Data_Stall failure lasts for <300 seconds, so the
incurred measurement error is non-trivial relative to the Data_Stall
duration. Also, detection results of this mechanism may contain false
positives for lack of crucial knowledge regarding the current states
of network stack and Internet connectivity.
To address these issues, we build a network-state probing com-
ponent in Android-MOD. Once a suspicious Data_Stall failure is
3For some CDMA BSes, System Identity (SID), Network Identity (NID), and Base
Station Identity (BID) are recorded instead of MNC, LAC, and CID.
Figure 1: The state machine that models the life cycle of a cellu-
lar data connection in Android.
First of all, if a user device fails to establish a data connection to
a nearby base station (BS), a Data_Setup_Error [4] failure event will
be reported to relevant system services (but not to user-space apps);
then, a retry attempt will be initiated, trying to establish the data
connection once again. Here the failure may occur at the physical
layer (e.g., radio signal loss), the data link or MAC layer (e.g., device
authentication failure), and/or the network layer (e.g., IP address
allocation failure). Upon any failure, an error code will be gener-
ated by the underlying radio interface, based on either the received
responses to the issued connection-setup negotiation requests (if
any) or the return values of the modem commands executed by the
underlying radio interface.
Further, if the data connection is successfully established but the
user device still cannot access the cellular network, i.e., the user
device cannot send/receive data to/from outside, Android will mark
its current service state as Out_of_Service [8]. Worse still, even if