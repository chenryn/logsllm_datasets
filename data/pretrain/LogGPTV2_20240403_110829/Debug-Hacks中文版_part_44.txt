(no symbols)
symbol name
HACK#60解决性能问题|339
---
## Page 358
349
我们来看看详细信息。
约 7.97%。
后面 L2 缓存未命中发生较多的有 ruby 的 gc_mark(),约 11.56%;garbage_collect(),
340 1
gc_mark
08064790 22364 11.5554 gc.c:1273
(no symbols)
0000000 67373 34.8114 (no location information)
ma samples
attributions
warning: some functions compiled without debug information may have incorrect source line
mask of 0x100 (read 2nd level cache miss) count 3000
Counted BSO_CACHE_REFERENCE events (cache references seen by the bus unit) with a unit
$ sudo opreport -d 
080647db 1
080647d5 169 0.7557 gc.c:1282
080647d2 20
080647ce
080647ca 21697 97.0175 gc.c:1278
080647c2
080647cl
080647bf
080647b7 43
080647b4
080647b2
080647ac
080647a8
080647a2
0806479c
08064799
08064796
080647914
08064790 45
c0102020 1
080647d0
080647cc
80647c8
第6章高手们的调试技术
9
39
29
4
3
16
L
8
7
6
51
8
h
0.0015 (no location information)
0.0045 gc.c:1280
0.0894 gc.c:1280
0.0268 gc.c:1279
0.1744 gc.c:1279
0.1297 gc.c:1278
0.0179 gc.c:1278
0.0134 gc.c:1295
0.0715 gc.c:1295
0.0045
0.1923
0.0447
0.0805
0.2593
0.1654
0.1967
0.0850
0.0313
0.2280
0.1789
0.2012 gc.c:1273
%linenr info
5gc.c:1295
gc.c:1295
gc.c:1295
一
gc.c:1273
gc.c:1273
gc.c:1273
gc.c:1273
gc.c:1273
(no location information)
(no location information)
(no location information)
www.TopSage.com
ruby
 image name
ruby
no-vmlinux no-vmlinux
app name
symbol name
---
## Page 359
08064f23 38
08064f20 234
08064f19 27
08064f16 61
08064f14 2
08064f11 36
08064fof 305
08064f0c 11
08064f09
08064f071
08064f05 305
08064f02 13205
08064f00
08064efe 105
08064ef8
08064ef5 102
08064ef2
08064eef 24
08064eec
08064ee6
08064ee0
08064eda
08064ed8
08064ebf
08064e09
08064df0 1
08064de9 1
08064cb2 1
08064c6b
08064c4c
08064c4a
08064c41
08064c29
08064b10 15421 7.9680 gc.c:1919
0806484b 1
08064845 1
080648402
0806480b 2
080647df 1
41
39
W
3170
3
10
8
11
13
0.0045 gc.c:1295
0.0045 gc.c:1295
0.0089 gc.c:1294
0.0089
0.0045 gc.c:1282
0.2464
1.5174 (no location information)
0.1751
0.3956
0.0130
0.2334
1.9778
0.0713
0.4539
85.6300
0.2659
0.6809
0.0584
0.6614
0.0195
0.1556
0.4734
0.0843
0.8689
1.0505
0.0519
0.0065
0.0065
0.0065
0.0065
0.0065
0.0195
0.0065
0.0065
0.0065
1.2580
1.9778
1.1024
9 gc.c:1282
4 (no location information)
gc.c:1961
gc.c:1962
gc.c:1957
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
gc.c:1975
(no location information)
gc.c:1962
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
(no location information)
www.TopSage.com
ruby
HACK#60解决性能问题| 341
ruby
 garbage_collect
---
## Page 360
351
接下来，garbage_collect（）内的地址（0x08064f02）发生了13205次（约85.63%）
位于gc_mark（）内，还可以知道发生位置（gc.c文件的1278行）①。
gc_mark()的地址（0x080647ca）上缓存未命中发生较多（21697次），大约有97.02%
格式：地址事件发生次数在函数内发生的比例（100%）发生地点
opreport-d的显示格式如下。
我们来分析一下。我们不管vmlinux的部分，先来看看ruby实现中的内容。
342丨第6章高手们的调试技术
展开到了调用函数中。
缓存未命中，但没有源代码信息（nolocationinformation）②。很有可能是内联
来看看源代码（1278行）。可知是obj->as.basic.flags发生了缓存未命中。
08065019
08065010
08064fde
08064fc2
08064faa
08064f8e
1918 garbage_collect(rb_objspace_t *objspace)
1917 staticint
08064f87
08064f59
08064f2b
08064f25
1272gc_mark（rb_objspacetobjspace,VALUEptr,intlev)
1271staticvoid
register RVALUE*obj;
obj->as.basic.flags |=FL_MARK;
if(obj->as.basic.flags&FL_MARK)return;/*already marked*/
if（obj->as.basic.flags=0)return;
if（rb_special_const_p(ptr))return;/*special const not marked*/
obj=RANY(ptr);
0.0130
0.0065
0.0130
0.0065
0.0259
0.0065
0.0065
0.0065
0.0519
0.0065
www.TopSage.com
（nolocation information）
（nolocation information）
（nolocation information）
（nolocation information）
（nolocation information）
（nolocation information)
（no location information）
（nolocation information）
（nolocation information）
（nolocation information)
/*freecell*/
---
## Page 361
注4：
用 objdump 反汇编试试看注4。
来看看 gc_mark_all()。
$ objdump -Cxs ruby
8064efb:
1105
1103
1102
00
8
8
1090{
1089 gc_mark_all(rb_objspacet *objspace)
568
59
1975
1974
1919 {
1982
objdump 命令可以显示目标文件中的各种信息。
while (p as.basic.flags & FL_MARK) &
gc_mark_ rest(objspace);
gc_mark_all(objspace);
p++;
 gc_mark_children(objspace, (VALUE)p, 0);
(p->as.basic.flags I= FL_MARK)) {
www.TopSage.com
cmp %ebx,-0x7c(%ebp)
HACK#60解决性能问题
|343
352