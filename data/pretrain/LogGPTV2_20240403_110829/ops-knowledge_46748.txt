User: 如何使用Python编写一个简单的脚本，来检查一个Web服务器的可用性，并在服务器出现故障时发送通知？
Assistant: 下面是一个简单的 Python 脚本，使用 requests 库检查一个 Web 服务器的可用性，以及如果服务器出现故障时发送电子邮件通知：

```python
import requests
import smtplib
from email.mime.text import MIMEText
from email.header import Header

# 设置要检查的服务器 URL
url = "https://example.com"

# 设置发送通知的电子邮件地址和 SMTP 服务器信息
sender = "example@gmail.com"
recipient = "admin@example.com"
smtp_server = "smtp.gmail.com"
smtp_port = 587
smtp_username = "example@gmail.com"
smtp_password = "password"

# 发送邮件通知的函数
def send_notification(email_subject, email_body):
    message = MIMEText(email_body, "plain", "utf-8")
    message["From"] = Header(sender, "utf-8")
    message["To"] = Header(recipient, "utf-8")
    message["Subject"] = Header(email_subject, "utf-8")
    
    smtp_conn = smtplib.SMTP(smtp_server, smtp_port)
    smtp_conn.starttls()
    smtp_conn.login(smtp_username, smtp_password)
    smtp_conn.sendmail(sender, recipient, message.as_string())
    smtp_conn.quit()

# 检查服务器的可用性
response = requests.get(url)
if response.status_code != 200:
    email_subject = "Web 服务器故障"
    email_body = f"Web 服务器 {url} 无法访问，返回状态码 {response.status_code}"
    send_notification(email_subject, email_body)
```

这个脚本使用 requests 库发送 HTTP 请求，检查服务器的可用性。如果服务器返回状态码不是 200，说明服务器出现了故障，就会发送电子邮件通知给管理员。发送电子邮件通知的功能使用了 smtplib 和 email 库来实现。在实际使用时，需要将脚本中的 URL、SMTP 服务器信息、电子邮件地址、SMTP 验证信息等按照实际情况进行配置。