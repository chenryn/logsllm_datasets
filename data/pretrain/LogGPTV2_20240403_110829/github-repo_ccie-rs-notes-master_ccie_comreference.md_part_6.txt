int Se0/0.1
 service-policy output shape-all
```
### Shaping by bandwidth percent
**shape average 50 125 ms** - 50 is shaper rate, 125 ms is the Bc with ms after. The ms required otherwise command rejected
### CB Shaping to peak rate
**shape peak ***mean-rate*
### Adaptive shaping
Just use **shape adaptive ***min-rate *under shape command in class configuration.
## Policing
**police ***bps burst-normal burst-max ***conform-action ***action ***exceed-action ***action *[ **violate-action ***action *]
### Single rate three colour
```
policy-map police-all
 class class-default
  police cir 96000 bc 12000 be 6000 conform-action transmit exceed-action set-dscp-transmit 0 violate-action drop
```
### Policing subset
```
class-map match-all match-web
 match protocol http
policy-map police-web
 class match-web
  police cir 80000 bc 10000 bc 5000 conform-action transmit exeed-action transmit violate-action drop
 class class-default
  police cir 16000 bc 2000 be 1000 conform-action transmit exceed-action set-dscp-transmit 0 violate-action set-dscp-transmit 0
```
### Dual rate Policing
**police **{ **cir ***cir *] [ **bc ***conform-burst *] { **pir ***pir*} [ **be ***peak-burst *] [**conform-action ***action ***exceed-action ***action *[ **violate-action ***action *]]
### Multi-action Policing
```
policy-map testpol1
 class class-default
  police 128000 256000
   conform-action transmit
   exceed-action transmit
   violate-action set-dscp-transmit0
   violate-action set-frde-transmit
```
### Policing by percentage
```
policy-map test-pol6
 class class-default
    police cir percent 25 bc 500 ms pir percent 50 be 500 ms conform transmit exceed transmit violate-drop
```
## Committed Access Rate
**rate-limit **{ **input | output **} [ **access-group **[ **rate-limit **] *acl-index *] *bps burst-normal burst-max ***conform-action ***action ***exceed-action ***action*
```
int Se0/0
 rate-limit input 496000 62000 62000 conform-action continue exceed-action drop
 rate-limit input access-group 101 400000 50000 50000 conform-action transmit exceed-action drop
 rate-limit input access-group 102 160000 20000 20000 conform-action transmit exceed-action drop
 rate-limit input access-group 103 200000 25000 25000 conform-action transmit exceed-action drop
```
The continue action means packets that conform continue through, and then potentially match against other services.
## Hierarchical Queuing Framework (HQF)
```
policy-map class
 class c1
  bandwidth 14
 class c2
  bandwidth 18
policy-map map1
 class class-default
  shape average 64000
  service-policy class
policy-map map2
 class class-default
  shape average 96000
map-class frame-relay fr1
 service-policy output map1
map-class frame fr2
 service-policy output map2
interface Se4/1
 encapsulation frame-relay
 frame-relay interface-dlci 16
  class fr1
 frame-relay interface-dlci 17
  class fr2
```
```
policy-map class
 class c1
  bandwidth 14
 class c2
  banwidth 18
policy-map map1
 policy-map child
 class child-c1
  bandwidth 400
 class child-c2
  bandwidth 400
policy-map parent
 class parent-c1
  bandwidth 1000
  service-policy child
 class parent-c2
  bandwidth 2000
  service-policy child
```
## Verification commands
Can verify response time with IP SLA between source and destination. Run **show ip sla statistics** to verify.
**show policy-map** - shows configured policy maps
**show class-map ** - displays associated class maps
**show policy-map interface** - what policies on an itnerface and actions being taken
** show mls qos**
** show mls qos input-queue**
** show mls qos maps cos-input-q**
** show mls qos maps cos-output-q**
** show mls qos maps cos-dscp**
** show mls qos maps dscp-cos**
- Troubleshooting QoS misconfig - Verify QoS is enabled, class map config, policy map config, and service policy operation - **show mls qos, show class-map, show policy-map, show policy-map interface**
- Pssible switch QoS misconfig - show commands to determine how input/egress queueing configured - **show mls qos input-queue, show mls qos interface ***interface ***queueing, show mls qos maps cos-input-q, show mls qos maps cos-output-q, show mls qos maps cos-dscp, show mls qos maps dscp-cos**
- Possible router Qos - show commands to determine how queueing configured - **show mls qos maps, show traffic-shape**
# Wide Area networks
## HDLC
With back-to-back serial, router connected to DCE (Data Communications Equipment) end of cable provides clock signal for serial link. This done with **clockrate** command. To see which end of cable interface is on, use **show controllers.**
## PPP
```
username R4 password 0
rom 838
int Se0/1/0
 ip address 10.1.34.3 255.255.255.0
 encapsulation ppp
 ppp quality 80
 ppp authentcation chap
```
## MLPPP
```
int Multilink1
 ip address 10.1.34.3 255.255.255.0
 encapsulation ppp
 ppp multilink
 ppp multilink group 1
int Se0/1/0
 no ip address
 encapsulation ppp
 ppp multilink group 1
int Se0/1/1
 no ip address
 encapsulation ppp
 ppp multilink group 1
```
Use show int multilink1 to show if multilink open
## MLPPP LFI
```
int Multilink 1
 bandwidth 256
 ip address 10.1.34.3 255.255.255.0
 encapsulation ppp
 ppp multilink group 1
 ppp multilink fragment-delay 10
 ppp multilink8 interleave
 service-policy output queue-on-dscp
```
## PPP Compression
### Payload
Use a matching **compression **command under each interface on each end of link.
### Header
Legacy commands are **ip tcp header-compression **[ **passive **] and **ip rtp header-compression **[ **passive **].
For MQC
```
policy-map cb-compression
 class voice
  bandwidth 82
  compress header ip rtp
 class critical
  bandwidth 110
  compression header ip tcp
int Multilink1
 bandwidth 256
 service-policy output cb-compression
```
## PPPoE
### Server config
BBA (broadband aggregation) group created to handle incoming PPPoE config
```
bba-group pppoe BBA-GROUP
 virtual-template 1
 sessions per-mac limit 2
```
The limit means not allow many macs to use the session (would allow a new session to be established immediately if prior session dropped when using 2 as the limit)
```
int virtual-template 1
 ip address 10.0.0.1 255.255.255.0
 peer default ip address pool PPPOE_POOL
```
When PPPoE client initiates a session with router, router dynamically creates virtual interface. Interface acts as placeholder for P2P connection spawned by this process.
The virtual template needs two components, an IP address and pool of IP addresses that is used to negotiate addresses to clients.
Pool needs defining to issues addresses in the pool.
```
ip local pool PPPOE_POOL 10.0.0.2 10.0.0.254
```
Final step to enable PPPoE group on interface facing the client: -
```
interface Fa0/0
 no ip address
 pppoe enable group MyGroup
 no shutdown
```
### Client config
Need to create dialer and then associate it with physical interface
```
int dialer1
 dialer pool 1
 encapsulation ppp
 ip address negotiated
```
PPP header adds 8 bytes of overhead to each frame. If ethernet using 1500 byte MTU, need to set MTU of diuialer to 1492 to avoid fragging
```
int dialer 1
 mtu 1492
int fa0/0
 no ip address
 pppoe-client dial-pool-number 1
 no shutdown
```
Verify with show ip int brief
show pppoe session  - Shows details of the PPPoE session
### Authentication
PPP can use PAP or CHAP to authentication clients, with latter preferred.
```
username PPP password PPPpassword
int virtual-template 1
 ppp authentication chap callin
int dialer 1
 ppp chap password MyPassword
```
# Introduction to IP Multicasting
## CGMP
```
int Fa0/1
 ip cgmp
```
## IGMP Snooping
```
ip igmp snooping
no ip igmp snooping vlan 20
ip igmp snooping last-member-query-interval 500
ip igmp snooping vlan 22 immediate-leave
```
## RGMP
Interface config of **ip rgmp**
## IGMP Proxy
Config on upstream: -
```
int Gi0/0
 ip address 10.1.1.1 255.255.255.0
 ip pim dense-mode
int Gi1/0/0
 ip address 10.2.1.1 255.255.255.0
 ip igmp unidrectional-link
 ip pim dense-mode
```
Config on downstream
```
ip pim rp-address 10.5.1.1 5
access-list 5 permit 239.0.0.0 0.255.255.255
int lo0
 ip address 10.7.1.1 255.255.255.0
 ip pim dense-mode
 ip igmp help-address udl ethernet 0
 ip igmp proxy-service
int Gi0/0/0
 ip address 10.2.1.2 255.255.255.0
 ip pim dense-mode
 ip igmp unidirectional-link
int Gi1/0/0
 ip address 10.5.1.1 255.255.255.0
 ip pim sparse-mode
 ip igmp mroute-proxy lo0
```
# Multicast Routing
## Dense Mode
Config required to enable is **ip multicast-routing** and **ip pim dense-mode** on all interfaces it is required on.
## Sparse Mode
```
ip multicast-routing
ip pim sparese-mode
ip pim rp-address X.X.X.X
```
## SPT to source-specific SPT
CXisco routers witch over from SPT to source-specific SPT after they receive first packet from shared tree.
Can change this with **ip pim spt-threshold ***rate*. Can be done on any router in a group, traffic exceeds rate in kbps to switch over.
## AutoRP
Normal router: -
```
ip multicast-routing
int Se0
 ip pim sparse-mode
ip pim autorp listener
```
Auto-RP Mapping Agent
```
ip multicast-routing
ip pim send-rp-discovery scope 10 (can designate a source intercace)
int Se0
 ip pim sparse-mode
```
Auto-RP RP
```
ip multicast routing
 ip address 10.1.10.3 255.255.255.255
 ip pim sparse-mode
int Se0
 ip pim sparse-mode
ip pim send-rp-announce loopback0 scope 10
```
## BSR
BSR
```
ip multicast-routing
int lo0
 ip pim sparse-mode
int Se0
 ip pim sparse-mode
ip pim bsr-candidate Lo0 0 (0 priority, the default)
```
On RP
```
ip multicast-routing
int lo2
 ip address 10.1.10.3 255.255.255.255
 ip pim sparse-mode
ip pim rp-candidate Lo2
```
## Anycast RP with MSDP
Configure multiple routers with same address and use as RP address, anycasted
## Interdomain Multicast Routing with MSDP
```
int Lo2
 ip address 10.1.10.3 255.255.255.255
 ip pim sparse-mode
ip multicast-routing
ip pim rp-candidate Lo2
ip msdp peer 172.16.1.1
```
```
int lo0
 ip address 172.16.1.1 255.255.255.255
 ip pim sparse-mode
ip multicast-routing
ip pim rp-candidate Lo0
ip msdp peer 10.1.10.3 connect-source Lo0
```
**show ip msdp peer**
## SSM
SSM uses IGMPv3. Enable globally with **ip pim ssm { default | range ***access-list* **}. **Address range of 232.0.0.0/24 is SSM range (decreed by IANA)
```
ip multicast-routing
int Fa0/0
 ip pim sparse-mode
 ip igmp version 3
ip pim ssm default
```
## v6 PIM
Need to enable mcast routing for v6 through global config, **ipv6 multicast-routing.** his enables it on all interfaces. Default config of an in ipv6 interfaces assumes v6 pim, and does not appear in interface config. Always operates in sparse mode.
### DR Priority manipulation
```
int F0/0
 ipv6 pim dr-priority  - Higher is better
```
### v6 Static RP
```
ipv6 pim rp-address 2001:2:2:2::2