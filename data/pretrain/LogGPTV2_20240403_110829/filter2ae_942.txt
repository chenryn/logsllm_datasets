### 介绍

2017年3月，黑客组织ShadowBrokers（影子经纪人）发布了一大批被窃取的数据，其中包括美国国家安全局（NSA）的黑客工具。这批数据中包含了两个重要的框架：`DanderSpritz`和`FuzzBunch`。

### DanderSpritz 框架

`DanderSpritz` 是一个用Java编写的框架，提供了类似僵尸网络管理面板的图形化界面。该框架包含多种插件，可用于收集情报、利用漏洞以及检查受控设备。`DanderSpritz` 还集成了自己的后门和插件。

#### DanderSpritz 接口
- **功能**：提供图形化界面，支持多种插件。
- **特点**：类似于僵尸网络管理面板，具备丰富的管理和监控功能。

### FuzzBunch 框架

`FuzzBunch` 提供了一个交互和协作的框架，其中包含多种类型的插件，用于分析受害者、进行漏洞利用及计划任务等。每个插件由以下三个文件组成：

1. **%pluginName%-version.fb**
   - **描述**：实用文件，从XML中复制了header，并包含插件的ID。
2. **%pluginName%-version.exe**
   - **描述**：当FuzzBunch接收到命令时，可执行文件会启动。
3. **%pluginName%-version.xml**
   - **描述**：配置文件，描述了插件的输入和输出参数，包括参数名、类型和作用描述。这些信息以弹窗形式在FuzzBunch中展示，有助于用户理解和使用插件。

#### FuzzBunch 插件分类

- **ImplantConfig**：包含通过植入来控制受害者机器的插件。例如，`DarkPulsar` 是一个用于控制被动后门 `sipauth32.tsp` 的管理模块，后者负责提供远程控制功能。

##### DarkPulsar 命令
- **Burn**
- **RawShellcode**
- **EDFStagedUpload**
- **DisableSecurity**
- **EnableSecurity**
- **UpgradeImplant**
- **PingPong**

这些命令可以移除植入、运行任意代码、升级植入并检查远程机器上是否安装有后门。其他命令的作用尚不明确，泄露的框架只包含一个与 `DarkPulsar` 后门协作的管理模块。

### DarkPulsar 技术细节

`DarkPulsar` 是一个动态库注入型后门，其有效载荷应用于输出函数中。这些函数可分为三组：

1. **系统中两个用来安装后门的函数**。
2. **与TSPI操作相关的函数**：确保后门在自动运行列表中并可以自动运行。
3. **与SSPI操作相关的函数**：实现主恶意负载。

#### 注入过程

- **安装**：通过无名导出函数安装在系统中。以管理员权限调用 `Secur32.AddSecurityPackage` 可以启动后门，`lsass.exe` 会以 SSP/AP 加载 `DarkPulsar`。
- **初始化**：`DarkPulsar` 通过导出函数 `SpLsaModeInitialize` 初始化后门，并通过 `AddSecurityPackage` 向 `lsass.exe` 中注入代码。
- **注册表修改**：在注册表 `HKLM\Software\Microsoft\Windows\CurrentVersion\Telephony\Providers` 中添加库名。
- **启动**：Telephony API (TapiSrv) 与 Remote Access Connection Manager (RasMan) 服务一起启动，在加载电话服务提供商库时调用 `TSPI_lineNegotiateTSPIVersion`，从而注入 `lsass.exe`。

#### 认证过程

- **Hook 安装**：通过为认证函数 `SpAcceptLsaModeContext` 安装 hook 来应用有效载荷。
- **协议支持**：
  - Msv1_0.dll – NTLM 协议
  - Kerberos.dll – Kerberos 协议
  - Schannel.dll – TLS/SSL 协议
  - Wdigest.dll – Digest 协议
  - Lsasrv.dll – Negotiate 协议

#### 功能

- **嵌入流量**：将恶意流量嵌入到系统协议中，使其仅反映在系统进程中，不影响正常操作。
- **绕过认证**：发送 `DisableSecurity` 命令后，后门会在 `SpAcceptLsaModeContext` 函数中返回有效的凭证，从而绕过用户名和密码验证，访问需要认证的对象。

### 与 DarkPulsar 协作

`Darkpulsar-1.1.0.exe` 是遵循 `one command – one launch` 的管理接口。命令必须在配置文件 `Darkpulsar-1.1.0.9.xml` 中指定或以命令行参数的形式执行，包括：

- 目标机器的系统位数（32位或64位）
- 传输命令和端口号的协议
- 用于解密会话 AES 密钥的私有 RSA 密钥

### DanderSpritz 与 FuZZbuNch 的区别

`DanderSpritz` 是一个用于控制受感染机器的框架，与 `FuZZbuNch` 不同。`DanderSpritz` 为不同的后门服务，在受害者机器上使用 `PeedleCheap` 启用插件。`PeddleCheap` 是 `DanderSpritz` 的一个插件，用于配置植入和连接受感染的机器。

#### 使用方案

1. **通过 FuZZbuNch 运行命令 EDFStagedUpload 来启动 DarkPulsar**。
2. **在 DanderSpritz 中，运行命令 pc_prep (PeedelCheap Preparation) 来准备在植入端启动的有效载荷和库**。
3. **在 DanderSpritz 中，运行命令 pc_old，等待 Pcdlllauncher 的 socket**。
4. **通过 FuZZbuNch 启动 Pcdlllauncher，指定有效载荷的路径**。

### 结论

`FuzzBunch` 和 `DanderSpritz` 框架是灵活且功能强大的工具，每个框架都包含用于不同任务的插件。`FuzzBunch` 负责监听和攻击受害者，而 `DanderSpritz` 用于管理受感染的设备。`DarkPulsar` 后门的发现揭示了它在这两个框架之间的桥接作用，展示了其驻留和静默的能力，以及将恶意流量封装到合法协议中和绕过认证的方法。

### IOCs

- **植入**：`96f10cfa6ba24c9ecd08aa6d37993fe4`
- **文件路径**：`%SystemRoot%\System32\sipauth32.tsp`
- **注册表**：`HKLM\Software\Microsoft\Windows\CurrentVersion\Telephony\Providers`