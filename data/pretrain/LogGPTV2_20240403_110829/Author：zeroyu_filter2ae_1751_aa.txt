## Author：zeroyu
### 概念
Docker镜像：一个只读模板，是创建Docker容器的基础。镜像文件是由多个层组成的。
Docker容器：一个轻量级沙箱，来运行和隔离应用
Docker仓库：用来存储Docker镜像文件的地方
Docker中用于区分的方式是id或者name:tag
### 安装
官方文档：
### 操作镜像
#### 1.获取镜像（默认是从docker hub网站进行镜像的获取）
    docker pull kalilinux/kali-linux-docker
    #如果想使用非官方仓库需要指定仓库完整的地址
    docker pull hub.c.163.com/public/ubuntu:14.04
建议：使用中科大镜像源 `https://docker.mirrors.ustc.edu.cn`
附带：[在国内 docker build 的正确姿势](https://segmentfault.com/a/1190000006146697)
#### 2.列出镜像
    ➜  ~ docker images
    REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE
    kalilinux/kali-linux-docker   latest              8ececeaf404d        9 months ago        1.56GB
REPOSITORY:来自哪个仓库
TAG:镜像的标签信息，能标示来自同一仓库的不同镜像
IMAGE ID:镜像的ID，此字段唯一标示了镜像
CREATED:创建时间
SIZE:镜像的大小
#### 3.添加镜像标签
    #对kalilinux/kali-linux-docker:latest添加新的标签kalilinux:latest
    ➜  ~ docker tag kalilinux/kali-linux-docker:latest kalilinux:latest
    #别名不一样但是两者的镜像文件是一样的（id相同）
    ➜  ~ docker images
    REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE
    kalilinux/kali-linux-docker   latest              8ececeaf404d        9 months ago        1.56GB
    kalilinux                     latest              8ececeaf404d        9 months ago        1.56GB
#### 4.查看详细信息
    ➜  ~ docker inspect kalilinux:latest
    [
        {
            "Id": "sha256:8ececeaf404d5d63d4e9bf870f4340516f3be040e5db6c005ac8cf96d2c43536",
            "RepoTags": [
                "kalilinux/kali-linux-docker:latest",
                "kalilinux:latest"
            ],
            "RepoDigests": [
                "kalilinux/kali-linux-docker@sha256:2ebc75f51fa4937340a0d3b4fe903c60aad23866b8c9e1fae80ad7372e01b71d"
            ],
            ......
            "Metadata": {
                "LastTagTime": "2017-12-02T04:56:53.8185955Z"
            }
        }
    ]
#### 5.查看镜像历史
    ➜  ~ docker history kalilinux:latest
    IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
    8ececeaf404d        9 months ago        /bin/sh -c #(nop)  CMD ["/bin/bash"]            0B
               9 months ago        /bin/sh -c apt-get -y update && apt-get -y...   251MB
               9 months ago        /bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=non...   0B
               9 months ago        /bin/sh -c echo "deb http://http.kali.org/...   134B
               9 months ago        /bin/sh -c #(nop)  MAINTAINER PI:EMAIL    0B
               11 months ago       /bin/sh -c #(nop)  CMD ["/bin/bash"]            0B
               11 months ago       /bin/sh -c apt-get -y update && apt-get -y...   286MB
#### 6.搜索镜像
    #搜索所有自动创建的评价为1+的带kali关键字的镜像
    ➜  ~ docker search --automated -s 3 kali
    Flag --automated has been deprecated, use --filter=is-automated=true instead
    Flag --stars has been deprecated, use --filter=stars=3 instead
    NAME                           DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
    kalilinux/kali-linux-docker    Kali Linux Rolling Distribution Base Image      361                                     [OK]
    linuxkonsult/kali-metasploit   Kali base image with metasploit                 54                                      [OK]
    jasonchaffee/kali-linux        Kali Linux Docker Container with the kali-...   8                                       [OK]
    brimstone/kali                                                                 6                                       [OK]
    adamoss/kali2-metasploit       Kali2 Automated Build                           4                                       [OK]
    wsec/kali-metasploit           Official Kali Base image + Metasploit           3                                       [OK]
    kalinon/comicstreamer          ComicStreamer is a media server app for sh...   3                                       [OK]
#### 7.删除镜像
    #如果同一个标签有多个tag，那么docker rmi只是删除tag而已
    #如果docker rmi id的话，会先删除所有的tag然后删除镜像
    #但是若该镜像的容器存在，也是无法删除的，如果想强制删除可以使用docker rmi -f id
    ➜  ~ docker images
    REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE
    kalilinux/kali-linux-docker   latest              8ececeaf404d        9 months ago        1.56GB
    kalilinux                     latest              8ececeaf404d        9 months ago        1.56GB
    ➜  ~ docker rmi kalilinux/kali-linux-docker:latest
    Untagged: kalilinux/kali-linux-docker:latest
    Untagged: kalilinux/kali-linux-docker@sha256:2ebc75f51fa4937340a0d3b4fe903c60aad23866b8c9e1fae80ad7372e01b71d
    ➜  ~ docker images
    REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
    kalilinux           latest              8ececeaf404d        9 months ago        1.56GB
#### 8.创建镜像
1）基于已有镜像的容器创建
    #我们先创建容器并安装metasploit-framework
    ➜  ~ docker run -it kalilinux:latest /bin/bash
    root@de573c5f5dc6:/# apt update && apt install metasploit-framework
    root@de573c5f5dc6:/#exit
    #记住id为de573c5f5dc6
    #docker commit -m "改动信息" -a "作者名称" id REPOSITORY:TAG
    ➜  ~ docker commit -m "install msf" -a "zeroyu" de573c5f5dc6 kalilinux:0.1
    sha256:66a6770d79d88c826b2e4a38b98037c14de0b9d2ce897307dc30afbf675ce51a
    ➜  ~ docker images
    REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
    kalilinux           0.1                 66a6770d79d8        21 seconds ago      2.54GB
    kalilinux           latest              8ececeaf404d        9 months ago        1.56GB
2）基于本地模板导入
    docker import ...
#### 9.存出和载入镜像
1）存出镜像
    docker save -o docker_for_msf.tar kalilinux:0.1
2）载入镜像
    docker load --input docker_for_msf.tar
    #或则
    docker load < docker_for_msf.tar
#### 10.上传镜像
    docker push kalilinux:0.1
### 操作容器
#### 1.创建容器
1）新建容器
    #docker create新建的容器处于静止，可以使用docker start来启动它
    #-i 保持标准输入打开   -t分配一个伪终端
    ➜  ~ docker create -it kalilinux:0.1
    2bc48b88a424c8056fe9e6311848d5850c4e46008feec99ee095bc341ae9adaf
    #查看处于终止状态的容器
    ➜  ~ docker ps -a
    CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                   PORTS               NAMES
    2bc48b88a424        kalilinux:0.1       "/bin/bash"         7 seconds ago       Created                                      frosty_poitras
    de573c5f5dc6        kalilinux:latest    "/bin/bash"         5 hours ago         Exited (0) 5 hours ago                       happy_goldberg
2）启动容器
    #docker start id 启动相应的容器
    #docker ps 查看运行中的容器