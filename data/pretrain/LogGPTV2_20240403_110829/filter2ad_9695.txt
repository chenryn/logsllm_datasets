# 漏洞描述
GitLab 是一个用于仓库管理系统的开源项目，使用 Git 作为代码管理工具，可通过 Web 界面访问公开或私人项目。
在GitLab
CE/EE版本14.7(14.7.7之前)、14.8(14.8.5之前)和14.9(14.9.2之前)中使用OmniAuth提供商(如OAuth、LDAP、SAML)注册的帐户设置了硬编码密码，允许攻击者潜在地控制帐户。
# 漏洞版本
|  
---|---  
Gitlab CE/EE | >=14.7,=14.8,=14.9, 发起POST请求。
2、
会重定向到
    client_id :       在gitlab.rb 中填写的app_id
    redirect_uri:     授权后重定向到项目的地址，必须和Github OAuth App时的callback url相同
    response_type:    表示授权类型，此处的值固定为"code"
    Scope: user:email 希望得到的权限范围.
    state:            不可猜测的随机字符串。它用于防止跨站点请求伪造攻击。
3、Gitlab发起的 redirect_uri 与在GitHub中填写的callback中不相同时。报了错。  
    我们在Github填写的Callback 为  http://127.0.0.1:8080/users/auth/github/callback
    此时的redirect_uri为。http://gitlab/users/auth/github/callback
在我去想着如何修改 redirect_uri ，做了很多尝试没有用。
4、没有办法的办法下、因为redirect_uri 与callback不同、然后我尝试将Github 的
Callback修改为redirect_uri，将redirect_url (
) 填到 Callback 看起来太荒谬了。怎么会有这种url。
5、没什么办法，只能先试试吧。先将 Github
的Callback修改为  
6、回到gitlab登陆页，点击GitHub登陆、跳转到授权页面。红框标注的是认证后将会跳转到 
,这肯定不对。先往下走吧。再看看这次请求的参数。  
7、最后会向GitHub中填写的Callback跳转 发起GET请求参数为
[http://gitlab/users/auth/github/callback?code=xxxxxxx&state=xxxxxxxx,碰到了糟糕的502。但是，有的好消息是、他有code参数和state参数。](http://gitlab/users/auth/github/callback?code=xxxxxxx&state=xxxxxxxx,碰到了糟糕的502。但是，有的好消息是、他有code参数和state参数。)  
8、当我再翻看OAuth2 的数据流程时，我注意到在第六步时会将 Access Token 发送到Resource Server
，只要将这个请求发到
,就已经接近完成了。既然GitHub不能自己跳转、我尝试能不能自己去修改。  
9、将gitlab 修改为  ,然后又被跳转到登陆页。出现了以下错误，  
您的帐户正在等待您的GitLab管理员的批准，因此被阻止。如果您认为这是一个错误，请联系您的GitLab管理员  
登陆root账号查看，存在一个没有激活的账户。  
最后利用管理员权限、将用户激活、测试。
    注意注册的用户 账户名是 GitHub用户名、
    密码就是123qweQWE!@#000000000
# 修复建议
目前官方已经对该漏洞进行了修复，在做好数据备份之后升级到安全版本。
# 参考材料