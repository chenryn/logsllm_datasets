---
title:  bag_has_key()
description: Learn how to use the bag_has_key() function to check if a dynamic property bag object contains a given key. 
ms.reviewer: afridman
ms.topic: reference
ms.date: 11/23/2022
---
# bag_has_key()
Checks whether a dynamic property bag object contains a given key.
## Syntax
`bag_has_key(`*bag*`,`*key*`)`
[!INCLUDE [syntax-conventions-note](../../includes/syntax-conventions-note.md)]
## Parameters
| Name | Type | Required | Description |
| -- | -- | -- | -- |
| *bag* | `dynamic` |  :heavy_check_mark: | The property bag to search. |
| *key* | `string` |  :heavy_check_mark: | The key for which to search.  Search for a nested key using the [JSONPath](jsonpath.md) notation. Array indexing isn't supported. |
## Returns
True or false depending on if the key exists in the bag.
## Examples
> [!div class="nextstepaction"]
> Run the query
```kusto
datatable(input: dynamic)
[
    dynamic({'key1' : 123, 'key2': 'abc'}),
    dynamic({'key1' : 123, 'key3': 'abc'}),
]
| extend result = bag_has_key(input, 'key2')
```
**Output**
|input|result|
|---|---|
|{  "key1": 123,  "key2": "abc"}|true|
|{  "key1": 123,  "key3": "abc"}|false|
### Search using a JSONPath key
> [!div class="nextstepaction"]
> Run the query
```kusto
datatable(input: dynamic)
[
    dynamic({'key1': 123, 'key2': {'prop1' : 'abc', 'prop2': 'xyz'}, 'key3': [100, 200]}),
]
| extend result = bag_has_key(input, '$.key2.prop1')
```
**Output**
|input|result|
|---|---|
|{  "key1": 123,  "key2": {    "prop1": "abc",    "prop2": "xyz"  },  "key3": [    100,    200  ]}|true|