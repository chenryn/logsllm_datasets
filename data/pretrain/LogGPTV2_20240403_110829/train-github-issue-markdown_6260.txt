### Elasticsearch Version
- **Version**: 5.0 RC1

### Installed Plugins
- discovery-ec2
- repository-s3

### Environment
- Using the Docker image on ArchLinux

### Problem Description
**Expected Behavior:**
- The `discovery-ec2` plugin should be able to discover and connect to other nodes in the AWS EC2 environment using the IAM role.

**Actual Behavior:**
- The `discovery-ec2` plugin is not working with the IAM role, and the following error is observed:

```
[2016-10-22T07:10:59,764][DEBUG][c.a.a.AWSCredentialsProviderChain] Unable to load credentials from InstanceProfileCredentialsProvider: Unable to parse JSON string.
[2016-10-22T07:10:59,764][INFO ][o.e.d.e.AwsEc2UnicastHostsProvider] [J7uy4gr] Exception while retrieving instance list from AWS API: Unable to load AWS credentials from any provider in the chain
[2016-10-22T07:10:59,764][DEBUG][o.e.d.e.AwsEc2UnicastHostsProvider] [J7uy4gr] Full exception:
com.amazonaws.AmazonClientException: Unable to load AWS credentials from any provider in the chain
    at com.amazonaws.auth.AWSCredentialsProviderChain.getCredentials(AWSCredentialsProviderChain.java:131) ~[aws-java-sdk-core-1.10.69.jar:?]
    at com.amazonaws.services.ec2.AmazonEC2Client.invoke(AmazonEC2Client.java:11117) ~[aws-java-sdk-ec2-1.10.69.jar:?]
    at com.amazonaws.services.ec2.AmazonEC2Client.describeInstances(AmazonEC2Client.java:5403) ~[aws-java-sdk-ec2-1.10.69.jar:?]
    at org.elasticsearch.discovery.ec2.AwsEc2UnicastHostsProvider.fetchDynamicNodes(AwsEc2UnicastHostsProvider.java:116) [discovery-ec2-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.discovery.ec2.AwsEc2UnicastHostsProvider$DiscoNodesCache.refresh(AwsEc2UnicastHostsProvider.java:234) [discovery-ec2-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.discovery.ec2.AwsEc2UnicastHostsProvider$DiscoNodesCache.refresh(AwsEc2UnicastHostsProvider.java:219) [discovery-ec2-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.common.util.SingleObjectCache.getOrRefresh(SingleObjectCache.java:54) [elasticsearch-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.discovery.ec2.AwsEc2UnicastHostsProvider.buildDynamicNodes(AwsEc2UnicastHostsProvider.java:102) [discovery-ec2-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing.sendPings(UnicastZenPing.java:358) [elasticsearch-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing$1.doRun(UnicastZenPing.java:272) [elasticsearch-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [elasticsearch-5.0.0-rc1.jar:5.0.0-rc1]
    at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-5.0.0-rc1.jar:5.0.0-rc1]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]
    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]
```

### Additional Information
- I made a `curl` request to the metadata endpoint, and I received a valid JSON string, indicating that the IAM role is correctly configured and accessible.

### Conclusion
The issue seems to be related to the `discovery-ec2` plugin's inability to parse the JSON string from the AWS metadata service, despite the IAM role being properly set up. This could potentially be a downstream issue or a bug in the plugin.