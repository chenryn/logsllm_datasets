### Inter-Process Communication and Watchdog Mechanism in IRIS

In the Windows 2000 environment, inter-process communication (IPC) between the IRIS application and the watchdog process is facilitated through a named pipe. Each time the imaging loop, as detailed in Algorithm 1, is executed, the application sends a heartbeat message to the watchdog process. The watchdog process, upon receiving this message, signals the watchdog relay and resets its internal timer.

If the timer in the watchdog process is not reset before it expires, it is assumed that the IRIS application has failed or become corrupted, leading to a missed reset of the watchdog. In such a scenario, the watchdog relay (as shown in Figure 3) is opened, and an alert is sent to the operator to notify them of the fault.

### Relay Configuration and Timeout Mechanisms

Independent of the watchdog relay, the IRIS application also controls two functional relays. At the end of each imaging loop, the application signals both relays to either open or close, depending on the position of the tumor. Each of the three relays (the watchdog relay and the two functional relays) is equipped with a built-in timeout circuit, as illustrated in Figure 3. To remain operational, these relays must receive an open or close signal within a predetermined timeout period. If no signal is received within this period, the relay automatically opens, and the circuit must be reset before further operation can continue.

The relay configuration in Figure 3 is designed to be conservative. Given that the functional relay circuits and timers are third-party components, their failure modes cannot be determined with high confidence based solely on the available schematic and specification documents. Therefore, we have added additional relays, including one controlled by the watchdog process. This triple-redundant configuration can tolerate up to two relay failures (where they are stuck in the closed position) or two timer failures.

### Data and Result Checking

The fault coverage provided by the watchdog process and the timers is limited because they do not check the critical results of the application software. The application may only partially fail and still be able to reset its timer. To enhance fault coverage, we continuously monitor key aspects of the application's behavior that are crucial for treatment quality. This online monitoring technique detects hazardous system conditions by analyzing runtime data against predefined safety constraints [3].

A critical failure in the IRIS application occurs when the pattern recognition software fails to locate the marker due to poor signal quality or background clutter that mimics the target. To address this, we include an online monitoring system to automatically detect and respond to such failures.

### Tracking Failure Detection and Classification

We classify tracking failures into two categories: recoverable and unrecoverable. A recoverable failure is a transient or intermittent loss of tracking where automatic recovery is expected. In contrast, an unrecoverable failure is characterized by a continuous degradation in tracking quality, necessitating manual reinitialization of the tracking software.

The purpose of this dual classification is to improve treatment efficiency while maintaining safety. During a recoverable failure, the treatment is temporarily halted by the linac beam hold-off mechanism and resumes automatically once tracking is deemed satisfactory. In the case of an unrecoverable failure, a tracking interlock is enabled, and the treatment beam is permanently halted until the tracking failure is cleared by the operator.

### Indicators for Tracking Failures

Several indicators are used to detect tracking failures:

1. **Pattern Recognition Score (PRS):** This score measures the certainty with which the tracking software can find the target within a single image. For the IRIS system, it is the highest correlation of the template within an image sub-window. The PRS provides a measure of the match quality. In stereo tracking, the correlation score is computed for both images, but only the lower score is considered, as 3D accuracy is generally limited by the imager with the poorer performance.

2. **Distance Between Rays (DBR):** This is a measure of the consistency of tracking between the two imagers. Once the marker's location is determined in both images, the 3D position is reconstructed by intersecting the corresponding rays. The DBR refers to the gap between these rays, which is small when the marker is being tracked properly but becomes large if one or both imagers identify the wrong location.

3. **Instantaneous Velocity (IV) and Instantaneous Acceleration (IA):** These measures assess tracking stability over a short period. Poor localization of the target often causes sudden jumps in the computed target location, whereas good tracking should result in smooth motion. The IV and IA at time \( k \) are calculated as:
   \[
   v(k) = |x(k) - x(k - 1)|
   \]
   \[
   a(k) = |x(k) - 2x(k - 1) + x(k - 2)|
   \]
   where \( x(k) \) is the position of the marker. Both \( v(k) \) and \( a(k) \) are compared against predefined threshold values to detect a tracking failure.

### Operator Interaction

Anecdotal evidence suggests that a trained operator typically takes between 2 and 10 seconds to respond to a tracking error. Online monitoring significantly improves the response rate, often detecting failures within one or two images. However, not all tracking failures can be detected automatically. Early studies indicate that about 65% of tracking failures can be automatically detected within 1.5 seconds [4]. Thus, combining online monitoring with operator intervention enhances overall safety.

Figure 5 provides an overview of the complete procedure. The operator initiates tracking, and the online monitor attempts to detect tracking failures. If a recoverable error is detected, the software pauses treatment for the current image frame. If the error is unrecoverable, the software interlocks the system and waits for the operator to clear the error. The operator also has the option to engage a manual interlock at any time during the treatment.

### Summary

This paper describes design techniques aimed at ensuring the safe operation of IRIS, a respiratory-gated imaging and radiation therapy system. Key safety features include watchdog processes and timers to detect control-flow failures, and an online monitoring scheme to detect and classify tracking failures. We discussed several indicators for detecting tracking failures and highlighted the role of both automated and manual monitoring in enhancing patient safety.

### References

[1] R. Berbeco, S. Jiang, G. Sharp, G. Chen, H. Mostafavi, and H. Shirato. Integrated Radiotherapy Imaging System (IRIS): Design considerations of tumor tracking with linac gantry-mounted kV x-ray systems. Phys Med Biol, 49(2):243–55, 2004.

[2] G. Mageras and E. Yorke. Deep inspiration breath hold and respiratory gating strategies for reducing organ motion in radiation treatment. Seminars in Radiation Oncology, 14(1):65–75, Jan 2004.

[3] B. A. Schroeder. On-line monitoring: A tutorial. IEEE Computer, 28(6):72–78, June 1995.

[4] G. C. Sharp, S. B. Jiang, S. Shimizu, and H. Shirato. Tracking errors in a prototype real-time tumour tracking system. Phys Med Biol, 49(23):5347–56, Dec 7 2004.

[5] H. Shirato, Y. Seppenwoolde, K. Kitamura, R. Onimura, and S. Shimizu. Intrafractional tumor motion: Lung and liver. Seminars in Radiation Oncology, 14(1):10–18, Jan 2004.

[6] H. Shirato, S. Shimizu, T. Kunieda, K. Kitamura, M. van Herk, K. Kagei, T. Nishioka, S. Hashimoto, K. Fujita, H. Aoyama, K. Tsuchiya, K. Kudo, and K. Miyasaka. Physical aspects of a real-time tumor-tracking system for gated radiotherapy. Int J Radiat Oncol Biol Phys, 48(4):1187–95, 2000.

[7] D. Siewiorek and S. Swarz. Reliable Computer Systems. A K Peters, Natick, MA, 1998.