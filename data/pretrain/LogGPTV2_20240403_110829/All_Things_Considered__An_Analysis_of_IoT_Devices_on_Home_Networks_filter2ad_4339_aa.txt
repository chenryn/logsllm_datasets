title:All Things Considered: An Analysis of IoT Devices on Home Networks
author:Deepak Kumar and
Kelly Shen and
Benton Case and
Deepali Garg and
Galina Alperovich and
Dmitry Kuznetsov and
Rajarshi Gupta and
Zakir Durumeric
All Things Considered: 
An Analysis of IoT Devices on Home Networks
Deepak Kumar, University of Illinois at Urbana-Champaign; Kelly Shen and Benton Case, 
Stanford University; Deepali Garg, Galina Alperovich, Dmitry Kuznetsov, and Rajarshi 
Gupta, Avast Software s.r.o.; Zakir Durumeric, Stanford University
https://www.usenix.org/conference/usenixsecurity19/presentation/kumar-deepak
This paper is included in the Proceedings of the 28th USENIX Security Symposium.August 14–16, 2019 • Santa Clara, CA, USA978-1-939133-06-9Open access to the Proceedings of the 28th USENIX Security Symposium is sponsored by USENIX.All Things Considered: An Analysis of IoT Devices on Home Networks
Deepak Kumar‡ Kelly Shen† Benton Case† Deepali Garg(cid:47)
Galina Alperovich(cid:47) Dmitry Kuznetsov(cid:47) Rajarshi Gupta(cid:47) Zakir Durumeric†
†Stanford University (cid:47)Avast Software
‡University of Illinois Urbana-Champaign
Abstract
In this paper, we provide the ﬁrst large-scale empirical anal-
ysis of IoT devices in real-world homes by leveraging data
collected from user-initiated network scans of 83M devices
in 16M households. We ﬁnd that IoT adoption is widespread:
on several continents, more than half of households already
have at least one IoT device. Device types and manufac-
turer popularity vary dramatically across regions. For ex-
ample, while nearly half of North American homes have an
Internet-connected television or streaming device, less than
three percent do in South Asia where the majority of devices
are surveillance cameras. We investigate the security posture
of devices, detailing their open services, weak default cre-
dentials, and vulnerability to known attacks. Device security
similarly varies geographically, even for speciﬁc manufac-
turers. For example, while less than 17% of TP-Link home
routers in North America have guessable passwords, nearly
half do in Eastern Europe and Central Asia. We argue that
IoT devices are here, but for most homes, the types of devices
adopted are not the ones actively discussed. We hope that
by shedding light on this complex ecosystem, we help the
security community develop solutions that are applicable to
today’s homes.
1 Introduction
The weak security posture of many popular IoT devices
has enabled attackers to launch record-breaking DDoS at-
tacks [4], compromise local networks [43, 57], and break into
homes [22, 41]. However, despite much attention to IoT in
the security community [22, 23, 29, 33, 55], there has been
little investigation into what devices consumers are adopting
and how they are conﬁgured in practice. In this work, we
provide a large-scale empirical analysis of 83M IoT devices
in 16M real-world homes. We partner with Avast Software,
a popular antivirus company, whose consumer security soft-
ware lets customers scan their local network for IoT devices
that support weak authentication or have remotely exploitable
vulnerabilities. Leveraging data collected from user-initiated
network scans in 16M households that have agreed to share
data for research and development purposes, we describe the
current landscape of IoT devices and their security posture.
IoT devices are widespread. More than half of households
have at least one IoT device in three global regions and in
North America more than 70% of homes have a network-
connected device. Media devices like smart televisions are
most common in seven of eleven global regions, but there
is signiﬁcant variance otherwise. For example, surveillance
cameras are most popular in South and Southeast Asia, while
work appliances prevail in East Asia and Sub-Saharan Africa.
Home assistants are present in more than 10% of homes in
North America but have yet to see signiﬁcant adoption in
other markets. There is a long tail of 14K total manufacturers,
but surprisingly we ﬁnd that 90% of devices worldwide are
produced by only 100 vendors. A handful of companies
like Apple, HP, and Samsung dominate globally, but there
also exist a set of smaller vendors with signiﬁcant regional
adoption. For example, Vestel, a Turkish manufacturer, is the
third largest media vendor in North Africa and the Middle
East, but has negligible broader adoption.
A surprising number of devices still support FTP and Telnet
with weak credentials. In Sub-Saharan Africa, North Africa,
the Middle East, and Southeast Asia, around half of devices
support FTP and in Central Asia, nearly 40% of home routers
use Telnet. Similar to the regional differences in device type
and manufacturer popularity, there are dramatic differences
in the use of weak credentials. For example, while less than
15% of devices with FTP allow weak authentication in Eu-
rope and Oceania, more than half do in Southeast Asia and
Sub-Saharan Africa. Interestingly, this is not entirely due to
manufacturer preference. While less than 20% of TP-Link
home routers allow access to their administration interface
with a weak password in North America, nearly half do in
Eastern Europe, Central Asia, and Southeast Asia. About 3%
of homes in our dataset are externally visible and more than
half of those have a known vulnerability or weak password.
Our results indicate that IoT is not a security concern of the
USENIX Association
28th USENIX Security Symposium    1169
(a) Data Sharing Consent
(b) WiFi Inspector Drawer
(c) WiFi Inspector Initiation
Figure 1: WiFi Inspector—WiFi Inspector allows users to scan their local network for insecure IoT devices. Data sharing back
to Avast for research purposes is an explicit part of the installation process, and presented to the user in plain English. For ease of
reading, we duplicate the text shown in panel (a) in Appendix A.
future, but rather one of today. We argue that there already
exists a complex ecosystem of Internet-connected embedded
devices in homes worldwide, but that these devices are of
different than the ones considered by most recent work. We
hope that by shedding light on the types of devices consumers
are purchasing, we enable the security community to develop
solutions that are applicable to today’s homes.
2 Methodology and Dataset
Our study leverages several network vantage points, including
data collected from Avast, a passive network telescope, and
active Internet-wide scans. In this section, we discuss these
datasets and the role they play in our analysis.
2.1 WiFi Inspector
Avast Software is a security software company that provides
a suite of popular antivirus and consumer security software
products like Avast Free Antivirus. Avast software is sold on
a freemium model: the company provides a free basic version
of their product and charges for more advanced versions.
Avast estimates that their software runs on 160 M Windows
and 3 M Mac OS computers, and makes up approximately
12% of the antivirus market share [45].
As of 2015, all antivirus products from Avast include a
tool called WiFi Inspector that helps users secure IoT devices
and other computers on their home networks. WiFi Inspector
runs locally on the user’s personal computer and performs
network scans of the local subnet to check for devices
that accept weak credentials or have remotely exploitable
vulnerabilities. Scans can also be manually initiated by the
end user. WiFi Inspector alerts users to security problems
it ﬁnds during these scans and additionally provides an
inventory of labeled IoT devices and vulnerabilities in the
product’s main interface (Figure 1). We next describe how
WiFi Inspector operates:
Network Scanning
To inventory the local network, WiFi
Inspector ﬁrst generates a list of scan candidates from entries
in the local ARP table as well through active ARP, SSDP, and
mDNS scans. It then probes targets in increasing IP order
over ICMP and common TCP/UDP ports to detect listening
services.1 Scans terminate after the local network has been
scanned or a timeout occurs. After the discovery process
completes, the scanner attempts to gather application layer
data (e.g., HTTP root page, UPnP root device description,
and Telnet banner) from listening services.
Detecting Device Types
To provide users with a human-
readable list of hosts on their network, WiFi Inspector runs a
classiﬁcation algorithm against the application-and transport-
layer data collected in the scan. This algorithm buckets de-
vices into one of fourteen categories:
1. Computer
2. Network Node (e.g., home router)
3. Mobile Device (e.g., iPhone or Android)
4. Wearable (e.g., Fitbit, Apple Watch)
5. Game Console (e.g., XBox)
6. Home Automation (e.g., Nest Thermostat)
7. Storage (e.g., home NAS)
8. Surveillance (e.g., IP camera)
9. Work Appliance (e.g., printer or scanner)
10. Home Voice Assistant (e.g., Alexa)
11. Vehicle (e.g., Tesla)
12. Media/TV (e.g., Roku)
13. Home Appliance (e.g., smart fridge)
14. Generic IoT (e.g., toothbrush)
1WiFi Inspector scans several groups of TCP/UDP ports: common TCP
ports (e.g., 80, 443, 139, 445); TCP ports associated with security problems
(e.g., 111, 135, 161); common UDP ports (e.g., 53, 67, 69); and ports
associated with services that provide data for device labeling (e.g., 20, 21,
22). When hosts are timely in responding, the scanner will additionally probe
a second set of less common ports (e.g., 81–85, 9971). In total, the scanner
will target up to 200 ports depending on host performance. The scanner will
identify devices so long as they are connected to the network.
1170    28th USENIX Security Symposium
USENIX Association
Protocol
DHCP
UPnP
HTTP
mDNS
Field
Class ID
Device Type
Title
Name
Search Pattern
(?i)SAMSUNG[- :_]Network[- :_]Printer
.*hub2.*
(?i)Polycom - (?:SoundPoint IP )?(?:SoundStation IP )?
(?i)_nanoleaf(?:api|ms)?\._tcp\.local\.
Device Type Label Conﬁdence
Printer
IoT Hub
IP Phone
Lighting
0.90
0.90
0.85
0.90
Table 1: Example Device Classiﬁcation Rules—Our device labeling algorithm combines a collection of 1,000 expert rules and
a supervised classiﬁer, both of which utilize network and application layer data. Here, we show a few examples of these expert
rules, which provide 60% coverage of devices in a random sample of 1,000 devices.
We consider devices in the latter eleven categories to be IoT
devices for the remainder of this work. Because the classi-
ﬁer greatly affects the results of this work, we describe the
algorithm in detail in Section 2.2.
Manufacturer Labeling
To generate a full device label,
WiFi Inspector combines device type with the device’s man-
ufacturer (e.g., Nintendo Game Console). Avast determines
manufacturer by looking up the ﬁrst 24 bits of each device’s
MAC address in the public IEEE Organizationally Unique
Identiﬁer (OUI) registry [32]. We note that at times, the ven-
dor associated with a MAC address is the manufacturer of
the network interface rather than the device. For example,
MAC addresses associated with some Sony Playstations be-
long to either FoxConn or AzureWave, two major electronic
component manufacturers, rather than Sony. In this work,
we manually resolve and document any cases that required
grouping manufacturers together.
Checking Weak Credentials WiFi Inspector checks for
devices that allow authentication using weak credentials by
performing a dictionary-based attack against FTP and Telnet
services as well as web interfaces that use HTTP basic authen-
tication. When possible, WiFi Inspector will also try to log
into HTTP-based administration interfaces that it recognizes.
The scanner attempts to log in with around 200 credentials
composed of known defaults (e.g., admin/admin) and com-
monly used strings (e.g., user, 1234, love) from password
popularity lists, leaks, vendor and ISP default lists, and pass-
words checked by IoT malware. WiFi Inspector immediately
notiﬁes users about devices with guessable logins.
Checking Common Vulnerabilities
In addition to check-
ing for weak credentials, WiFi Inspector checks devices for
vulnerability to around 50 recent exploits that can be veriﬁed
without harming target devices (e.g., CVE-2018-10561, CVE-
2017-14413, EDB-ID-40500, ZSL-2014-5208, and NON-
2015-0211). Because there is bias towards more popular
manufacturers in these scans, we do not provide ecosystem-
level comparisons between different vulnerabilities.
2.2 Device Identiﬁcation Algorithm
A signiﬁcant portion of our work is based on identifying the
manufacturers and types of IoT devices in homes. We de-
scribe the algorithm that Avast has developed in this section:
Classiﬁer WiFi Inspector labels device type (e.g., com-
puter, phone, game console) through a set of expert rules
and a supervised classiﬁcation algorithm, both of which run
against network and application layer data. Classiﬁcation is
typically possible because manufacturers often include model
information in web administration interfaces as well as in FTP
and Telnet banners [4]. Additionally, devices broadcast de-
vice details over UPnP and mDNS [14]. WiFi Inspector uses
expert rules—regular expressions that parse out simple ﬁelds
(e.g., telnet banner or HTML title)— to label hosts that follow
informal standard practices for announcing their manufacturer
and model. This approach, while not comprehensive, reliably
identiﬁes common devices [4, 21]. WiFi Inspector contains
approximately 1,000 expert rules that are able to identify de-
vices from around 200 manufacturers. We show a sample of
these rules in Table 1. However, these rules only identify 60%
of devices from a random sample of 1,000 manually-labeled
devices. To categorize the remaining devices, WiFi Inspector
leverages an ensemble of four supervised learning classiﬁers
that individually classify devices using network layer-data,
UPnP responses, mDNS responses, and HTTP data. There-
fore, when identifying a device, WiFi Inspector ﬁrst tries the
expert rules, and in the case of no match, next applies the
ensemble of four supervised classiﬁers.
The network classiﬁer is built using a random forest, which
aggregates the following network features of a device:
1. MAC address
2. Local IP address
3. Listening services (i.e., port and protocol)
4. Application-layer responses on each port
5. DHCP class_id and hostname
The UPnP, mDNS and HTTP classiﬁers leverage raw text
responses. The classiﬁer treats each response as a bag-of-
words representation, and uses TF-IDF to weight words across
all responses. This representation is fed as input to a Naïve
Bayes classiﬁer.
Training and Evaluation
To train the supervised algo-
rithm, Avast collected data on approximately 500K random
devices from real-world scans. 200K of these were manu-
ally classiﬁed through an iterative clustering/labeling process,
where experts clustered devices based on network properties
USENIX Association
28th USENIX Security Symposium    1171
Classiﬁer
Supervised Ensemble
Network
UPnP
mDNS
HTTP
Final Classiﬁer
Coverage Accuracy Macro F1
0.78
0.79
0.37
0.25
0.23
0.80
0.95
0.96
0.91
0.94
0.98
0.96
0.91
0.89
0.27
0.05
0.14
0.92
Table 2: Device Classiﬁer Performance—Our ﬁnal classi-
ﬁer combines the supervised classiﬁer and expert rules, and
achieves 92% coverage and 96% accuracy against a manually
labeled set of 1,000 devices.
Region
North America
South America
Eastern Europe
Western Europe
East Asia
Central Asia
Southeast Asia
South Asia
N. Africa, Middle East
Oceania
Sub-Saharan Africa
Homes
Devices
1.24 M (8.0%)
3.2 M (20.9%)
4.2 M (27.2%)
2.9 M (19.1%)
(3.5%)
543 K
(0.7%)
107 K
813 K
(5.3%)
824 K
(5.3%)
1.2 M (7.5%)
(0.8%)
124 K
266 K
(1.7%)
9.2 M (11.1%)
18 M (21.6%)
18.8 M (22.6%)
15 M (18.0%)
3 M (3.7%)
500 K
(0.6%)
3.6 M (4.3%)
6.6 M (7.7%)
6.1 M (7.3%)
680 K
(0.8%)
1.8 M (2.2%)
Regional Distribution of Homes—The
Table 3:
15.5M homes and 83M devices in our dataset are from
geographically diverse regions. Because this breakdown
is representative of Avast market share rather than organic
density of homes and devices, we limit our analysis to within
individual regions.
and labeled large clusters, winnowing and re-clustering until
all devices were labeled. The remaining 300K devices were
labeled using the expert rules. To tune model parameters,
we performed ﬁve-fold cross-validation across the original
training set. However, because the initial clustering was used
to help identify devices in the clustering/labeling step, the
dataset is not used for validation. Instead, Avast curated a
validation set of 1,000 manually labeled devices, whose la-
bels were never used for training. The ﬁnal classiﬁer achieves
96% accuracy and 92% coverage with a 0.80 macro average
F1 score (Table 2). We mark devices we cannot classify as
“unknown”.
2.3 Avast Dataset
Avast collects aggregate data about devices, vulnerabilities,
and weak credentials from WiFi Inspector installations of con-
senting users for research and development purposes. Users
are informed about this data collection in simple English
when they install the product (Figure 1) and can opt out at any
time. We worked with Avast to analyze aggregate data about
the types of devices in each region. No individual records
or personally identiﬁable information was shared with our
team. Although WiFi Inspector supports automatic vulnera-
bility scans, we only use data from user-initiated scans in this
paper so that we can guarantee that users knowingly scanned
their networks. In addition, we exclude scans of public net-
works by only analyzing networks that were marked as home
networks in Windows during network setup. We detail the
ethical considerations and our safeguards in Section 2.6.
We speciﬁcally analyze data about devices found in scans
run between December 1–31, 2018 on Windows installations.
This dataset consists of data about 83 M devices from 15.5 M
homes spanning 241 countries and territories, and 14.3 K
unique manufacturers. For installations with multiple scans
during this time period, we use the latest scan that found the
maximum number of devices. We aggregate each country
into 11 regions, deﬁned by ISO 3166-2 [56]. As shown in
Table 3, WiFi Inspector is more popular in Europe and South
America than in North America. Because of this market share,
as well as signiﬁcant regional differences in IoT deployment,
we discuss regions separately.
Threats to Validity While WiFi Inspector is installed in a
signiﬁcant number of homes, the dataset is likely colored by
several biases. First, the data is predicated on users installing
antivirus software on their computers. There is little work that
indicates whether users with antivirus software have more or
less secure practices. Second, we only analyzed data from in-
stallations on Windows machines due to differences between
Mac and Windows versions of the software. This may skew
the households we study to different socioeconomic groups
or introduce other biases. Third, WiFi Inspector actively no-
tiﬁes users about problems it ﬁnds. As a result, users may
have patched vulnerable hosts, changed default passwords, or
returned devices to their place of purchase. This may skew
our results to indicate that homes included in this study are
more secure than in practice.
2.4 Network Telescope
While WiFi Inspector scans can identify the types of devices
present in home networks, the data does not provide any
insight into whether devices have been compromised. To
understand whether devices are infected and scanning to com-
promise other devices (e.g., as was seen for Mirai [4]), we
consider the IP addresses scanning in a large network tele-
scope composed of approximately 4.7 million IP addresses.
We speciﬁcally analyze the trafﬁc for a 24 hour period on
January 1, 2019 for scan activity using the methodology dis-
cussed by Durumeric et al. [17]: we consider an IP address to
be scanning if it contacts at least 25 unique addresses in our
telescope on the same port within a 480 second window. In
total, we observe 1.7 M scans from a total of 529 K unique IP
addresses from 1.4 billion packets during our measurement
1172    28th USENIX Security Symposium
USENIX Association
period. Of the 500,716 homes scanned by WiFi Inspector on
this day, 1,865 (0.37%) were found scanning on the network
telescope.
2.5
Internet-Wide Scanning
We further augment the WiFi Inspector data with data col-
lected from Internet-wide scans performed by Censys [16] to
understand whether the vulnerabilities present on gateways
(i.e., home routers) could be remotely exploitable. Similarly