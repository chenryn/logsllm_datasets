User: A python script need to spawn multiple sub-processes via fork(). All of those child processes  should run simultaneously and the parent process should be waiting for all of them to finish. Having an ability to set some timeout on a "slow" child would be nice.
The parent process goes on processing the rest of the script after all kids are collected.
What is the best way to work it out? Thanks.
Assistant: The traditional, UNIX-y way to communicate with sub-processes is to open pipes to their standard input/output, and use the select() system call to multiplex the communications in the parent process (available in Python via... the select module).
If you need to kill a slow-running child process, you can just save its process ID (returned by the os.fork() call) and then use os.kill() to kill it when not needed anymore.  Of course, it would probably be cleaner to be able to communicate with the child process explicitly and tell it to shut itself down.