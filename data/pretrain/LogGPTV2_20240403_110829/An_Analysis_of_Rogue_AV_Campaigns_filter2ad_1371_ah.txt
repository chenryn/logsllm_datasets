categories. Address records marked as L[0], L[1] and L[2] will cause the detection
algorithm to exit without producing a poisoning alert. Simultaneously, the detection al-
gorithm will update the Anax database. For address records that will be placed in the
L[3] category by the CIDR analysis module, a poisoning alert will be generated for the
corresponding RR. RRs that falls into the L[4] category will be forwarded to the 2-Class
classiﬁer, which will make the ﬁnal detection decision based on statistical models from
known benign and poisonous RRs proﬁles.
5.3 Anax 2-Class Classiﬁer
RRs in category L[4] that cannot be directly checked with our limited white and black
listing. Therefore, we use a 2-class K-nearest neighbors (IBK) classiﬁer to make the
ﬁnal detection decision on them. This statistical classiﬁer differentiates between benign
and poisonous RRs based on benign and malicious RR proﬁles built using passive DNS
information. Passive DNS data collection is a very common technique that gathers his-
toric DNS resolutions. We use such passive DNS data traces (pDNS) to produce six
statistical features for Anax’s 2-class classiﬁer.
In order to compute these features, Anax requires a resource record (RR) as an input.
An RR of A-type, as we already mentioned in previous sections, is composed of a
A Centralized Monitoring Infrastructure for Improving DNS Security
31
domain name d and an IP dip. We deﬁne BGP (dip) as the set of all IPs in the same
BGP preﬁx of dip. Each domain name present in our list of “domains of interest” is
composed of two parts: the top level domain or TLD (e.g., .com, .org) and the second
level domain or 2LD (e.g., ebay, google). We represent every domain name d in our
list as d2ld.dtld. Using the same logic, when we query the pDNS against an IP, the
pDNS will report back to us a list of domain names that are historically linked with
this particular IP. We refer to each returned domain name from the pDNS DB as AD.
Each returned domain name can also be represented as AD = adnld.....ad2ld.adtld,
assuming that it is a nth level domain.
(cid:2)
The set of all unique domain names returned from a passive DNS query on dip is
AP DN Sdip =
k=1..m ADk, where m is the number of unique domain names (AD)
that historically can be linked with the dip in the passive DNS database (22). Also, we
deﬁne AP DN SBGP (dip) =
k=1..m ADk, where m is the number of unique domain
names (AD) that historically can be linked with any IP in the BGP preﬁx of dip in
the passive DNS DB. Next we deﬁne AD3ld.2ld.tld = ad3ld.ad2ld.adtld, AD2ld.tld =
ad2ld.adtld and AD2ld = ad2ld.
(cid:2)
=
Now we can deﬁne the set AP DN S3ld.2ld.tld
k=1..m AD3ld.2ld.tld(k) which in-
clude all AD3ld.2ld.tld domains (e.g., www.example.com) from all domain names in the
set AP DN Sdip. We also can deﬁne the set AP DN S2ld.tld
k=1..m AD2ld.tld(k)
which include all AD2ld.tld domains (e.g., example.com) from all domain names in the
set AP DN Sdip. We deﬁne as AP DN S2ld
k=1..m AD2ld(k) the set of strings
which include all AD2ld (e.g., example) from all domain names in the set AP DN Sdip.
k=1..m AD2ld.tld(k) and
k=1..m AD2ld(k) that include all second level domain names
AP DN S2ld
(AD2ld.tld) and all strings (AD2ld) from all domain names in the set AP DN SBGP (dip)
respectively.
Similarly, we deﬁne the two sets AP DN S2ld.tld
BGP (dip) =
BGP (dip) =
dip =
dip
(cid:2)
=
dip
(cid:2)
(cid:2)
(cid:2)
(cid:2)
Finally, we deﬁne a list of popular second level domains (2LD) that belong to content
delivery networks (CDN) like Akamai, CoralCDN, Limelight and Redcondor. We refer
to this list as ACDN =
k=1..n cdnk, where cdnk is a distinct fully qualiﬁed second
level domain name (e.g., akamai.net, akamaiedge.net, coralcdn.net). We now elaborate
on how we compute the six statistical features based on each newly received resource
record:
(cid:2)
[Φ1] - Domain Name Diversity: The number of unique domains in the set AP DN Sdip
that historically have been mapped with the dip in the RR.
[Φ2] - 2LD Diversity: The number of unique AD2ld.tld present
in the set
AP DN S2ld.tld
dip
and have been historically mapped with the dip in the RR.
dip
[Φ3] - 3LD Diversity: The number of unique AD3ld.2ld.tld present in the set in the set
and have been historically mapped with the IPs in dip.
AP DN S3ld.2ld.tld
[Φ4] - Relative BGP CDN Occurrence: The frequency of the AD2ld.tld that histori-
cally are present in the set AP DN SBGP (dip) and at the same time the AD2ld.tld ∈
ACDN .
[Φ5] - Relative BGP d2ld.dtld Occurrence: The frequency of the d2ld.dtld in the set
BGP (dip) that historically have been mapped with any IP present in the
AP DN S2ld.tld
set BGP (dip).
32
M. Antonakakis et al.
[Φ6] - Relative BGP d2ld String Occurrence: The frequency of the string d2ld in the
BGP (dip) that historically have been mapped with any IP present in
set AP DN S2ld
the BGP (dip).
The statistical features Φ1, Φ2 and Φ3 will provide us with historic DNS information
based only on the dip in the RR. The statistical feature Φ4 will capture the participation
of commonly used CDN second level domains that historically have been mapped with
any IP in the same BGP preﬁx as the dip. Finally, the statistical features Φ5 and Φ6 will
capture the participation of all other domain names that point into the same BGP preﬁx
with the dip and at the same time match with the 2ld.tld and the 2ld of the domain d.
If the 2-Class classiﬁer labels the IP as poisonous, a poisoning alert will be created
for the corresponding RR. Otherwise, it will be marked as benign and it will be added
into Anax DB.
5.4 Model Selection and Detection Results
We evaluate the 2-Class classiﬁer in two modes: standalone mode and “in-line” with the
CIDR analysis module. In the standalone mode we seed the classiﬁer with any new RRs
directly, while in the in-line mode we feed the RRs to the CIDR analysis module and
the classiﬁer receives only RRs that belong solely to the L[4] (unknown) category. We
evaluated our modules with this process to better justify our decision of assembling the
detection ﬂow the way we did. It is straightforward, from an efﬁciency-minded point of
view, that placing the CIDR module in-front of the classiﬁer should lessen the workload
on the classiﬁer (since IPs labeled L[0] - L[3] need no further processing). The question
we try to answer in this section is the following: will the classiﬁer perform better in
in-line or in standalone mode?
We start by carrying out the model selection, a very common technique from the
machine learning community. Model selection is used in order to select the optimal
machine learning method for solving a given classiﬁcation problem (18). We select one
classiﬁer for each major family of commonly used classiﬁers:
I. Simple Logistic Regression - SLR; a classiﬁer for building linear logistic regres-
sion models.
II. K-nearest neighbors classiﬁer - IBK; a “lazy” K-nearest neighbors classiﬁer.
III. LAD Decision Tree; a classiﬁer for generating a multi-class alternating decision
tree using the LogitBoost strategy.
IV. Support Vector Machine - SVM; a SVM based classiﬁer with radial basis function
kernel.
V. Neural Network - MLP; a classiﬁer that uses back-propagation to classify in-
stances.
We used several different classiﬁers, and found that with a 2-Class K-nearest neigh-
bors IBK classiﬁer we obtain the best detection results with F Prate = 0.6% and
T Prate = 91.9%. This is not an unusual phenomenon in machine learning, that a sim-
ple classiﬁer like the IBK performs signiﬁcantly better than more sophisticated and
complex classiﬁcation methods like neural networks (18; 40). The Receiver Operating
A Centralized Monitoring Infrastructure for Improving DNS Security
33
Table 2. Model Selection for Anax 2-Class Classiﬁer in two modes; standalone and “in-line”
with the CIDR analysis module
Classiﬁer only
CIDR and Classiﬁer
T P % / F P % / P reci. T P % / F P % / P reci.
Families
NBayes (Poi) 94.1% / 63.4% / 15.1% 95.0% / 28.9% / 55.4%
91.9% / 0.6% / 94.6% 96.4% / 2.7% / 93.1%
IBK (Poi)
57.0% / 0.9% / 88.6% 81.9% / 5.9% / 83.9%
SVM (Poi)
MLP (Poi)
34.4% / 0.8% / 83.8% 54.2% / 3.7% / 84.8%
73.9% / 3.6% / 70.8% 81.5% / 7.4% / 80.7%
LAD (Poi)
Characteristic (ROC) curves for the poison class while using the IBK classiﬁer can be
seen in Figure 8.
The reader should note that the F Prate = 0.6% and T Prate = 91.9% are not packet
rates. ROC analysis usually works on rates of detection over network traces, but doing
so would unfairly bias the classiﬁcation results in Anax’s favor because the vast ma-
jority of the packets are benign. By the deﬁnition of the false positive rate (incorrectly
classiﬁed negatives over total negatives), the number of negatives (or benign packets)
is signiﬁcantly higher than the very sporadic cases of poisoning. Therefore, we decided
to instead conservatively calculate the F Prate and the ROC curve based on the unique
RRs. In this case, the 0.6% of false positive rate means that for every 1000 unique be-
nign RRs Anax observes for a zone, the poisoning detection system will misclassify six
of them as poisonous. To further place the F Prate results into real world context we can
look into the domain name “ebay.com”, where Anax classiﬁed 137 unique RRs over the
period of eight months, which means that over an eight month period of time it would
misclassify less than a single RR. This indicates that Anax is able to produce low false
positive rates due not to the relative volume of the negatives, but due to the accuracy of
the 2-Class classiﬁer.
The goal of the 2-Class classiﬁer is to lower the F Prate inherent to the CIDR analy-
sis module due to the limitations of white and black lists. At the same time, we need to
e
t
a
R
e
v
i
t
i
s
o
P
e
u
r
T
 1
 0.98
 0.96
 0.94
 0.92
 0.9
 0.88
 0.86
 0.84
 0.82
 0.8
i
i
n
o
s
c
e
r
P
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0  0.1  0.2  0.3  0.4  0.5  0.6
Threshold
 0
 0.05
 0.1
 0.15
 0.2
False Positive Rate
Poison [with CIDR Module]
Poison [without CIDR Module]
Fig. 8. The ROC curve for poisoning detection in Anax
34
M. Antonakakis et al.
keep T Prate as high as possible. We observe that when the modules are “in-line”, both
the F Prate and T Prate are typically better. The only exception is the case of the Naive
Bayes (NBayes) classiﬁer where the T Prate decreases in the “in-line” mode. Unfortu-
nately, NBayes cannot be considered as a candidate for our modeling due to the very
high F Prate that exhibits in both modes. The “in-line” mode is typically better since
the majority of RRs escaping the CIDR analysis module will have the following two
characteristics.
First, they are not commonly seen in RRs for the monitored zones. Our whitelist will
have very small visibility of the whitelisted address space because we do not risk re-
probing and re-verifying correct answers from a small set of trusted recursive servers. In
general, maintaining a whitelist has proven to be a very inefﬁcient task. Instead, we use
the classiﬁer to leverage the task of identifying other whitelisted RRs. This is possible
because the classiﬁcation features we used to compute the statistical vectors from the
passive DNS database will place these uncommon legitimate RRs closer to legitimate
trained vectors due to the history of the given IP (present in the newly observed RR)
within the passive DNS database.
The second category of RRs that will escape the CIDR analysis module will in-
evitably contain IPs that belong to CDNs and mainly serve news sites. CDNs tend to
ﬂuctuate the network addresses that they use to ensure better quality of service to the
end-user of the domain. Static whitelisting cannot keep up with these frequently chang-
ing addresses so the CIDR analysis module will not be able to whitelist all CDN ad-
dresses. Anax successfully addresses this issue in the 2-Class classiﬁcation module. IPs
from CDN networks produce vectors that are very distinct. Such IPs tend to be mapped
to a large number of distinct domain names historically. This list of domain names also
shows very small diversity in the number of unique 2LDs and large participation of
typical domain names (2LDs) directly correlated with CDNs (e.g., akamai.net, cloud-
front.net, llnwd.net). A portion of some CDN related vectors will always be present in
the training dataset and the classiﬁer will have no problem correctly classifying similar
statistical patterns in the testing dataset.
Anax utilizes passive DNS data for computing its statistical features, therefore it
is sensitive to the relative passive DNS window (how long are retained passive DNS
data) and how the passive DNS data are aggregated. Operators should collect passive
DNS data below the resolver in order to protect their database against out-of-Bailiwick
RRs. Furthermore, the utilization of past-CDN IP address space for poisoning could
be a signiﬁcant evasion threat for Anax if the passive DNS window is more than a
few weeks. If the window is on the order of several months, then any past-CDN IP
address space will still contain past-CDN signal, (considered benign by Anax). This
increases the difﬁculty in identifying poisoning attempts with IPs originating from such
addresses.
6 Conclusion
Recently discovered ﬂaws in the DNS protocol require new, innovative techniques to
detect poisoning. We have suggested and explored a new area for such research: the
detection of DNS poisoning using network observations. We built a system, Anax, that
A Centralized Monitoring Infrastructure for Improving DNS Security
35
aims to examine the nature of cache poisoning attacks. Anax is able to detect cache
poisoning locally and in a fully automated manner.
Leveraging the fact that DNS poisoning is an inherently localized attack, Anax pro-
vides useful insights into attacks, based largely on limited whitelisting and statistical IP
and domain name metrics. Anax’s detection engine shows that these heuristics can be
reﬁned, and placed in order to yield a low (RR-based) F Prate (0.6%), high (RR-based)
T Prate (91.9%). Our work has focused on “zones of interest” that are historically tar-
gets of phishing attacks.
Anax relies on a fundamental observation about DNS: benign DNS records from
major zones generally direct users to a known, usually stable set of NS-type and
A-type records. Poisonings on the other hand generally point victims to new IP ad-
dresses. Anax utilizes detection heuristics based on historic passive DNS observations
and is able to accurately model benign and malicious RRs. The eight month, real world
evaluation shows that Anax is an effective and efﬁcient real-time poisoning detection
system.
Acknowledgments
We thank Robert Edmonds and Paul Royal for their valuable comments. This mate-
rial is based upon work supported in part by the National Science Foundation under
grant no. 0831300, the Department of Homeland Security under contract no. FA8750-
08-2-0141, the Ofﬁce of Naval Research under grants no. N000140710907 and no.
N000140911042. Any opinions, ﬁndings, and conclusions or recommendations ex-
pressed in this material are those of the authors and do not necessarily reﬂect the views
of the National Science Foundation, the Department of Homeland Security, or the Of-
ﬁce of Naval Research.
References
[1] Nessus: The network vulnerability scanner, http://www.nessus.org/nessus/
[2] OzymanDNS: Kaminsky DNS tunnel (2005), http://www.doxpara.com
[3] DNS multi vendor patch: CVE-2008-1447 (March 2008),
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1447
[4] CERT Advisory. Vulnerability Note VU-23495 - DNS implementations vulnerable to
denial-of-service attacks via malformed DNS queries (August 2001)
[5] Antonakakis, M., Perdisci, R., Dagon, D., Lee, W., Feamster, N.: Building a Dynamic Repu-
tation System for DNS. In: Proceedings of the 19th USENIX Security Symposium (August
2010)
[6] Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4033 - DNS Security Intro-
duction and Requirements
[7] Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4034 - Resource Records for
the DNS Security Extensions (2005), http://www.ietf.org/rfc/rfc4034.txt
[8] Bellis, R., Phifer, L.: Test report: DNSSEC impact on broadband routers and ﬁrewalls (2008),
http://download.nominet.org.uk/dnssec-cpe/
DNSSEC-CPE-Report.pdf
[9] Bernstein, D.J.: Introduction to DNSCurve (2008), http://dnscurve.org/
36
M. Antonakakis et al.
[10] Ccais/RNP (Brazilian Research Network CSIRT) and Vagner Sacramento. Vulnerability in
the sending requests control of Bind versions 4 and 8 allows DNS spooﬁng (November
2002)
[11] Callaway, D.: PorkBind - Recursive multi-threaded nameserver security scanner (2008),
http://innu.org/˜super/#tools
[12] Computer Academic Underground. bailiwicked domain.rb (2008),
http://www.caughq.org/exploits/CAU-EX-2008-0003.txt
[13] Team Cymru. The Darknet Project (2004),
http://www.team-cymru.org/Services/darknets.html
[14] Dagon, D., Antonakakis, M., Day, K., Luo, X., Lee, C., Lee, W.: Recursive DNS Archi-
tectures and Vulnerability Implications. In: Proceedings of the 16th NDSS, San Diego, CA
(2009)
[15] Dagon, D., Antonakakis, M., Vixie, P., Jinmei, T., Lee, W.: Increased DNS Forgery Resis-
tance Through 0x20-Bit Encoding. In: Proceedings of the 15th ACM CCS, Alexandria, VA
(2008)
[16] Dagon, D., Provos, N., Lee, C., Lee, W.: Corrupted DNS Resolution Paths: The Rise of a
Malicious Resolution Authority. In: Proceedings of 15th NDSS, San Diego, CA (2008)
[17] DNSstufff. DNS Network Tools: Network Monitoring and DNS Monitoring (2008),
http://www.dnsstuff.com/