### Policy Recognition and Evaluation

#### Recognition and False Positives/Negatives
The time required to recognize the policy is critical. Additional false positives occur outside the intended region, while additional false negatives occur within it. Neither of these include the start or finish lag. Figure 6 visually represents these values. These metrics depend on the specific characteristics of the trace; we aimed to create realistic evaluation scenarios to assess the practical effectiveness of these policies.

#### Experimental Setup
We conducted our experiments using an outward-facing Kinect attached to a Lenovo W520 laptop (Core i7, 16 GB RAM, 160 GB SSD). This setup allowed us to log traces without affecting event rates, leveraging large memory to buffer all events until trace completion. Without logging, we achieved similar event rates on a less powerful Samsung tablet (Core i5, 2 GB RAM). We anticipate that continuous sensing devices will approach the capabilities of these more powerful machines.

### Evaluation Results

#### Lessons Learned
We describe the lessons learned from our experience, supported by policy-specific evaluations (Figures 8–9).

- **Adding Policy Memory Reduces Jitter**: Certain policy technologies exhibit high variability in detection. For example, QR codes are detected only about every third RGB frame when present, WiFi signals are unreliable at a building’s perimeter, and audio frequency is sensitive to ambient noise. By adding memory to the policy, we can minimize this jitter. For instance, in the "QR code with memory" policy, we consult up to five recent QR code events, applying the most recent policy found (if any). This change makes the QR code policy more robust, as long as at least one of five RGB frames results in a correctly detected QR code, the policy will not jitter in the interim. The trade-off is that too much memory may lead to longer finish lags or more false positives.

- **Hybrid Techniques Improve Performance**: Combining different technologies can exploit their respective strengths. For example, in the Person trace, we used Bluetooth (which has a wider range) to bootstrap person removal using color or the Kinect’s person detection. This result challenged our initial intuition that policies should be detectable via the same sensor as the events to which the policy applies. However, this proposal fails due to differences in the characteristics of different policy technologies.

- **Bootstrap Remote Policies Early with Passports**: We experimented with passports in the Person trace, using Bluetooth and QR codes to load person removal policies. Passports allow us to easily extend our system without rebuilding it. Additionally, the latency incurred by loading policy code can be hidden by bootstrapping it as early as possible. It took an average of 227.6 ms (10 trials) to load and install a passport, increasing the start lag by 5-6 RGB frames if the policy is to be used immediately. Communicating a person’s opt-out via BLE, rather than in a QR code on the person, would thus allow enough time to load the policy before the person is encountered.

- **Accuracy and Latency Trade-offs**: We trade off policy accuracy with performance in our implementation. Rather than waiting to dispatch an RGB event until the corresponding QR event arrives, we dispatch all RGB events immediately, relying on the most recent (possibly out of date) QR code event to detect a policy. Start lag consists of two components: (1) the time to be in range of the policy, and (2) the number of unmodified events after the policy comes into range but the trigger is not yet recognized. Our choice to trade off accuracy for performance potentially affects the second component. In the Bathroom trace, the difference is just one frame (40 ms), and in the Person trace, the lag is four frames (160 ms). These accuracy differences are not discernible in Figure 9. However, the same performance lag may noticeably impact the user in some cases, such as in augmented reality where sensor input events must be dispatched in near real-time.

- **Better Technology Improves Accuracy**: Because the Kinect has a relatively low RGB resolution, we simultaneously collected additional video using a GoPro camera (1280x1080, up to 60 fps) affixed to the Kinect. We synchronized Kinect and GoPro frames, downsampling the GoPro points and marking the policy as enforced if any collapsed frames were blocked or modified. The barcode library could decode QR codes up to one second earlier in the GoPro traces, with fewer false negatives. The GoPro’s wide-angle lens also allowed it to decode QR codes in the periphery that the Kinect did not see. As mobile cameras improve, so will their ability to detect world-driven policies. Similarly, the speech keyword recognizer is slow, resulting in large start and finish lags. The start lag is long for all person removal policies because the trace involves approaching the person down a hall, and no method is effective until the camera is close enough.

### Reflections and Future Work

Continuous sensing applications will become increasingly prevalent as technologies like Google Glass and Microsoft Kinect become more ubiquitous and capable. World-driven access control provides a new alternative to controlling access to sensor streams. Important challenges arise when attempting to instantiate this approach in a real system, including the trade-off between policy detection accuracy and enforcement latency, and the need to verify the authenticity of signals communicated from real-world objects. We highlight these challenges, hoping to provide targets for future researchers focused on access control for continuous sensing.

A separate challenge is the tension between the specificity of the information broadcast in a policy and an object’s privacy. While specific object descriptions are valuable for policy verification and extending the system’s object recognition capabilities, they reveal information to anyone receiving the broadcast. Policy creators must balance policy accuracy and description privacy, considering evolving social norms. Since specific object descriptions in passports are valuable for verifying that a policy has not been moved by an adversary, we encourage future work on privacy-preserving, expressive policies (e.g., encrypted policies accessible only by trusted policy modules).

A separate privacy issue arises with the use of cryptographic signatures on policies: if the signatures on each object are unique, they can be used to track objects. However, there are many other methods to address this issue.