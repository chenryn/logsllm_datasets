presumably due to the WFQ behavior.
If a public BGP view of the AS hosting a VP is provided
to RouteViews or RIPE’s RIS, then identifying interdomain
links and paths where their border routers can be found is
relatively simple. While some large access ISPs (including
Verizon and AT&T) provide a public view, most large ac-
cess ISPs (including Comcast, Time Warner, Cox, and RCN)
do not, so we must infer AS links and corresponding border
routers with traceroute, which is known to be diﬃcult [8,39].
For each VP, we tracerouted to the ﬁrst (.1) address in each
of the 465,944 non-overlapping preﬁxes observed by Route-
Views collector rv2, used BGP data to map the encountered
IP addresses to ASes, and inferred an interdomain link when
we observed the ﬁrst address in a traceroute path that maps
to an AS outside the VP’s hosting network. However, this
method may not correctly identify the border routers, or
their owners, depending on how interfaces are numbered.
Figure 3 illustrates the variety of things that can go wrong.
In ﬁgure 3a, when we observe traceroute path x1, x2, a1, a
simple IP-AS mapping incorrectly suggests the interdomain
link is between R2 and R3, when it is between R1 and R2.
More generally, the interdomain hop could be either the hop
at which the IP-AS mapping changed, or one hop before.
The convention in a customer-provider interconnection is to
number the customer router interface from the provider’s
address space, which identiﬁes R2 as the customer border
router and the interdomain link as between R1 and R2, but
there is no address assignment convention for peers.
It is usually simple to identify a border router connect-
ing multiple peers as owned by the VP’s network. However,
some addresses observed after a border router may cause
false interdomain link inferences because they map to third-
party ASes, a well known challenge in AS topology map-
ping [39]. Figure 3b illustrates the danger: R4, owned by
AS C, may respond with address d1 which maps to AS D.
We can improve the robustness of our inferences in the pres-
ence of third party addresses with two heuristics. First, if
we require interface d1 to have been observed in a tracer-
oute path toward a preﬁx announced by D, d1 is unlikely
to be a third-party address. However, this ﬁlter discards
many true adjacencies if no paths toward a preﬁx in B cross
a speciﬁc interconnection with B. A second heuristic can re-
17tain some of these adjacencies by proving b1 is not a third-
party address: b1 represents the incoming interface on R3
and a point-to-point interdomain link between X and B if
b2 is in the same /30 or /31 subnet and is an alias of x4.
We used this heuristic to prove that most addresses in a
traceroute path represent the inbound interface on a point-
to-point link [26]. Finally, if the interfaces used to infer
an adjacency with D were x4 and d1, and address d1 was
probed, we have learned to be skeptical of the x4 - d1 ad-
jacency, as a router with d1 conﬁgured will reply to probes
to d1 with that address; d1 might be conﬁgured on R3 and
connect a subnet one hop away. When we receive a response
directly from d1, we try to discern the router it is connected
to by probing another address in the same preﬁx as d1 to
solicit a TTL-exceeded response from the router on the path.
We have encountered related cases where we only observed
the neighbor’s border router and no further hops owned by
the neighbor network. Figure 3c illustrates the implications
of this challenge: R2 is owned by E, but we observe only
x6 on the router, and subsequent interfaces f1 and g1 could
falsely imply interdomain links between X and F, G. We
resolve these ambiguities by ﬁnding a common provider AS
E for both F and G which we derive from CAIDA’s AS
relationship inferences [25].
In some cases we never observed an address in a neighbor
network. Figure 3d illustrates this challenge: R2 is owned
by H but R2’s address x8 is the last address we observed
in the traceroute. To infer R2 is owned by H, we infer a
common origin AS to the preﬁxes probed.
Chen et al. [8] used traceroute and BGP data to derive
AS links from traceroute paths using heuristics more robust
than a simple IP-AS mapping. Their work addressed the
third-party address (ﬁgure 3b) and one-hop in neighbor net-
work (ﬁgure 3c) problems by comparing AS paths inferred
with traceroute to AS paths observed in BGP for the cor-
responding preﬁx.
If they found an extra AS hop (D in
X-D-C in ﬁgure 3b) they removed D from the traceroute-
inferred AS path.
If they found a missing AS hop (E in
X-E-F in ﬁgure 3c) they added E to the traceroute-inferred
path. However, they do not adjust IP-AS mappings or as-
sign owners to routers. Integration of their techniques would
likely improve our router ownership heuristics.
Mao et al. [29] adjusted IP-AS mappings by changing the
owner of /24 preﬁxes to make traceroute-inferred AS paths
congruent with BGP AS paths collected in the same AS.
However, individual addresses (x2 and x8 in ﬁgure 3) are not
mapped to diﬀerent owner ASes. Zhang et al. [38] adjusted
IP-AS mappings using the same approach as Mao et al. [29]
but at /32 granularity; they did not use AS relationship data
(customer relationships) to infer owners of border routers so
did not adjust x2 unless it made traceroute AS paths more
congruent. Huﬀaker et al. [19] evaluated heuristics using
router alias, AS relationships, and AS degrees. For routers
with addresses from multiple ASes, assigning ownership to
the AS with most addresses on the router yielded the most
accurate results.
3.3 Asymmetric paths
A TTL-limited response from the far border router might
not return via the near router, because the far router is
operated by a diﬀerent AS that might have a more preferred
path toward our VP. In general, we hypothesize that a peer
will respond via the near router, a provider will respond
via the near router except in cases where the VP’s AS (i.e.,
the customer) is doing traﬃc engineering, and a customer
will respond via the near router unless it has a lower-cost
path. We evaluated two methods to gain conﬁdence that an
increase in measured RTT from a near to a far router is due
solely to traﬃc on the link connecting the two routers; that
is, the link behavior was isolated. Katz-Bassett et al. used
these two methods in reverse traceroute [22].
Pre-speciﬁed timestamps (PSTS): The PSTS IP op-
tion allows a host to request other hosts embed a timestamp
in the packet. Using the notation in [33], G|BCDE denotes
a probe to destination G that requests hosts with addresses
B, C, D, and E to include timestamps. The option includes
a pointer to the next timestamp slot in the packet, which
advances when a router embeds a timestamp; if the packet
visits C but not B ﬁrst, then C will not embed a timestamp.
Using the topology in ﬁgure 3a, to test if R3 returns packets
to our VP via R2, we send an ICMP echo request packet in
the form a1|a1x2. If both a1 and x2 embed a timestamp, we
infer the packet was returned across the R2-R3 link.
Record Route (RR): The RR IP option allows a host
to request that up to nine hosts embed an IP address as they
forward the packet. To test if R3 returns packets to our VP
via R2, we send an ICMP echo request packet with the RR
option set to R3. If we observe an address belonging to R3
in the RR option in the response, and an address belonging
to R2 immediately after, we infer the packet returned across
the R2-R3 link.
Preliminary Evaluation: Both the PSTS and RR op-
tions are known to have limitations due to routers that ei-
ther do not implement the functionality, discard packets that
contain options, or (in the case of RR) do not have suﬃcient
space to embed the addresses of interest. Of the 599 inter-
domain router links involving Comcast that we assembled
from our Ark VP (mry-us) deployed in Monterey, California
we use either PSTS or RR to infer that 179 (29.9%) returned
over the targeted link; 72 (12.0%) were isolated only with
RR, and 78 (13.0%) were isolated with only PSTS. We could
not isolate 71 (11.9%) because all nine slots were used, and
the remainder (58.2%) were unresponsive to these IP op-
tions or inconclusive; diﬀerent addresses in traceroute and
RR may belong to the same router but resist alias resolu-
tion. We manually checked a few paths that RR suggests
did not return over the targeted link; we observed, for ex-
ample, Comcast’s provider Tata forwarding packets that it
received in Los Angeles to the San Jose interconnection.
3.4 Other challenges
ICMP queuing behavior: A concern with using ICMP
TTL-exceeded responses is that routers may delay these re-
sponses (process them through the slow path), especially
during periods of high load; we may thus measure load on
the router and not congestion on a speciﬁc link. But it is un-
likely that slow path processing would induce the same delay
for each probe response, so using the minimum RTT during
a given time window will more likely reﬂect the queue size,
improving TSLP’s robustness to potential idiosyncrasies in
ICMP behavior. In some routers, the ICMP response gener-
ation delay spikes every 60 seconds due to periodic mainte-
nance activity [27]. This behavior will mislead TSLP when
our 5-minute samples synchronize with the maintenance ac-
tivity. To avoid this problem we could randomize the send
time of our probes in each 5-minute measurement round.
18Figure 4: FFT analysis of time series data from the
Comcast-Cogent interdomain link in ﬁgure 2. The
sharp peak at f =1/day implies a strong diurnal pat-
tern in the time series.
Determining the direction of congestion: Even when
we are conﬁdent that the TTL-exceeded response from the
far end of the router returns via the target link, we do not
know whether the congestion on that link is in the forward
or reverse direction (from the perspective of our VP). To
determine the direction of congestion on the targeted link
we could use the prespeciﬁed timestamp option, sending a
sequence of probes toward the target link, soliciting times-
tamp t1
n from the near router, tf from the far interface,
and t2
n from the near router again. Clock skew between the
routers prevents use of the diﬀerence in these timestamps to
estimate queuing delay; however, if tf - t1
n shows a diurnal
pattern, then we can infer that the link is congested in the
forward direction. If t2
n - tf shows a diurnal pattern, then
the link is congested in the reverse direction.
Adapting to change: Our probing setup infers interdo-
main links from traceroutes, and notes the distance from the
VP at which each target is seen. However, network routing
may change over time; the path to a destination may tra-
verse a diﬀerent interdomain link, or the same interdomain
link may be seen at a a diﬀerent distance from the VP. To
adapt to change, each VP runs a topology discovery process
in the background to continuously map interdomain links
and their distance from the VP. We then adapt our probing
to respond to changes in the measured topology.
Automated trace processing: A VP that tests every
interconnection link out of its AS can yield hundreds (ac-
cess) or thousands (tier-1) of interdomain links, requiring
some automated method to detect evidence of congestion.
In our initial study, a repeating diurnal pattern with a con-
sistent duration of RTT change, such as that presented in
the Comcast-Cogent interdomain link in ﬁgure 2, manifested
clearly in a frequency domain transformation using a Fast
Fourier Transform (FFT) with power density at f = 1/day in
ﬁgure 4. A time series of RTT samples that contains a power
density at 1 can be automatically identiﬁed as interdomain
congestion. However, some RTT patterns imply congestion
is present for only part of the week or weekend. In this case
a wavelet transform may reveal the structure of frequencies
across time. In the limit, there is a decision as to whether
these cases represent noteworthy congestion, which is not an
issue any classiﬁer will resolve.
4. CASE STUDIES
We present ﬁve case studies showing the potential of the
TSLP method to provide empirical data on peering disputes.
Evolution of congestion on Comcast links: A resi-
dential Ark monitor in Comcast’s network in Monterey, Cal-
ifornia continuously performs ICMP Paris traceroutes to-
ward randomly chosen destinations in all routed IPv4 /24
Figure 5:
Inferred congestion duration (using
CUSUM-based [36] level shift detection) for links
connecting three major networks to Comcast. By
February 2014, the Cogent and Level3 links were
congested up to 18 and 14 hours per day, respec-
tively. After Netﬂix and Comcast signed a peering
agreement in February 2014, congestion on those
links disappeared.
preﬁxes [20]. Large transit networks that are in the path
to many destinations have their interdomain links sampled
frequently. Our packets traversed interdomain links with
Cogent, Level3, and Tata, which also transited Netﬂix traf-
ﬁc. To discover elevated RTTs in this data we used a level
shift detection method that relies on the rank-based non-
parametric statistical test CUSUM [36], which is robust to
outliers and makes no assumptions about the distribution of
underlying RTTs. Figure 5 shows the inferred duration of
congestion on these links (in hours per day) from February
2013 to April 2014. Both the Cogent and Level3 links grow
from being congested 4-6 hours per day in February 2013
to a maximum of 18 hours (Cogent) and 14 hours (Level3)
in February 2014. From mid-May to mid-July, the conges-
tion signal on the Level3 link is replaced with congestion on
the TATA link, suggesting a signiﬁcant volume of traﬃc was
shifted from the Level3 to the TATA link. In late February
2014, Netﬂix and Comcast agreed to peer directly, and then
congestion on the Cogent and Level3 links disappeared.
Netﬂix and Comcast direct peering: After the Febru-
ary 2014 agreement between Comcast and Netﬂix, our TSLP
probes from the Comcast network started traversing direct
peering links toward Netﬂix preﬁxes. For most interconnec-
tions, there was no level shift in RTT values that indicated
a queue was always close to full. However, the peering link
between Comcast and Netﬂix in San Jose, CA still appeared
congested for 2-3 hours per day in April 2014 (ﬁgure 6a). We
asked Netﬂix about it and learned that they had not fully
deployed their peering with Comcast at San Jose.
Google and Free: Inspired by customer reports of poor
performance of Youtube videos on Free’s network [1], we
used our Ark monitor in Free’s network to measure the near
and far end of a link between Google and Free with TSLP.
Figure 6b shows a link that appears congested for 4-6 hours
at peak time on weekdays, and more than 12 hours on the
weekends (March 22nd and 23rd).
Level3 and AT&T, Verizon:
In April 2014, Level3
published an article on their persistently congested links
with six large broadband consumer networks: ﬁve were in
the US and one in Europe [35]. They published an MRTG
graph of their interconnect with an unnamed peer in Dallas,
19)
s
m
(
T
T
R
 160
 140
 120
 100
 80
1st
Tues
(a)