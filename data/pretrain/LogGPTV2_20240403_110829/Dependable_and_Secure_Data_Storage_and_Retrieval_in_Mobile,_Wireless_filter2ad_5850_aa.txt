# Dependable and Secure Data Storage and Retrieval in Mobile, Wireless Networks

## Authors
Stefano Chessa and Piero Maestrini  
Dipartimento di Informatica, Università di Pisa, via Buonarroti 2, 56127 Pisa, Italy  
Istituto di Scienza e Tecnologie dell’Informazione “A. Faedo”, Area della Ricerca CNR, via Moruzzi 1, 56124 Pisa, Italy  
e-mail: {chessa, maestrini}@iei.pi.cnr.it

## Abstract
This paper introduces a distributed data storage system for mobile, wireless networks based on a peer-to-peer paradigm. The distributed storage supports the creation and sharing of files under a write-once model, ensuring both data confidentiality and dependability by encoding files using a Redundant Residue Number System (RRNS). Specifically, files are partitioned into records, and each record is encoded as (h+r)-tuples of data residues using h+r moduli. These residues are then distributed among the mobile devices in the network. Dependability is ensured as data can be reconstructed even with up to s ≤ r residue erasures and up to \(\left\lfloor \frac{r-s}{2} \right\rfloor\) corrupted residues. Confidentiality is maintained since recovering the original information requires knowledge of the entire set of moduli.

## 1. Introduction
Mobile, wireless ad hoc networks [1] are particularly well-suited for environments where wired networks or base stations supporting mobile terminals are unavailable or impractical. Examples include communication in remote or hostile environments, emergency management, disaster recovery, and ad-hoc commercial installations. Ad hoc networks typically consist of a heterogeneous mix of different wireless and mobile devices, ranging from small hand-held devices to laptops. These devices rely on on-board batteries for power, making energy efficiency a critical concern [2]. Battery depletion can lead to device failure, similar to a crash fault, from which the device may or may not recover depending on the availability of battery replacement or recharging. Since mobiles may lack permanent storage, failures can result in data loss or corruption.

Ad hoc networks operate in a distributed, peer-to-peer environment. Given the limited range of wireless communication and the mobility of nodes, network connectivity is variable and somewhat unpredictable. This makes routing and communication protocols major challenges [3-5].

Another significant challenge is implementing dependable and secure data storage in ad hoc networks. This is essential in applications where mobiles cooperate by sharing information and need to create and access shared files. The system must prevent data loss or corruption due to network disconnections, mobile failures, or malicious attacks from untrustworthy mobiles. File owners should also prevent unauthorized access to shared files through secure distribution of access privileges.

These issues are related to those addressed in recent literature [6-13]. For example, the distributed file systems Petal [6,7] and Coda [8] are based on the client-server paradigm, where the servers are assumed to be secure and trusted. Both systems ensure data availability through replication, and Petal uses encryption for data confidentiality. Coda supports mobility by allowing disconnected mode operations, and while connected, clients generally operate in hoarding mode to upload necessary data for offline use. Extensions of Coda for weak connectivity scenarios have been proposed [9], but these solutions are unsuitable for the peer-to-peer environment of ad hoc networks. Additionally, Coda does not address data confidentiality, and the memory and bandwidth requirements of hoarding are challenging in ad hoc networks.

A serverless file system has been proposed [10], but it is designed for fast, wired networks and does not support node mobility and disconnections. A fault-tolerant file server (IDA) based on a peer-to-peer paradigm [11] fragments files and disperses them using erasure codes, achieving reliability in storage and data transmission. However, it does not address confidentiality issues.

Other approaches [12,13] focus on data availability but do not consider intrusion tolerance. These schemes use distributed authentication/authorization servers and majority voting to grant user access, employing cryptography, data fragmentation, and replication to enforce data availability and confidentiality. However, the communication overhead required for user authentication and data fragmentation may be prohibitive in resource-constrained wireless ad hoc networks.

In this paper, we reconsider the approach of [11] using RRNS to encode data. Compared to [11], RRNS encoding allows uniform coverage of both erasures and errors, providing dependable storage and inherent confidentiality. This encoding may also be used to construct sophisticated intrusion-tolerant environments, similar to those described in [12,13]. This is the subject of ongoing research.

The rest of the paper is organized as follows. Section 2 defines the system model, Section 3 provides an overview of Redundant Residue Number Systems, Section 4 presents the file management procedures, Section 5 offers a simple example, and Section 6 concludes with a discussion and future directions.

## 2. System Model
We consider a set of n mobile hosts (also called mobiles), each assigned a unique identifier ranging from 0 to n–1. The concise notation ui will sometimes be used to denote mobile i. The mobiles communicate with each other via radio transceivers and use a MAC protocol to resolve contentions over the wireless channel. Generally, the network is multi-hop, meaning that when mobiles communicate with destinations outside their transmission range or hidden by obstacles, they rely on other mobiles to forward messages. We assume that the network layer provides message delivery services by running suitable routing algorithms. However, mobile failures or network disconnections can impair service dependability, leading to undelivered messages.

Due to node mobility, the network topology changes over time. At any given instant, the topology is described by the graph G(V,E), where link (ui,uj)∈E if and only if ui and uj are within each other's transmission range and direct communication is not obstructed by obstacles. Depending on the positions of the mobiles, their transmission ranges, and the presence of obstacles, the graph G may be temporarily disconnected, meaning groups of mobiles may be unreachable to each other. An example of an ad hoc network and its corresponding graph G is shown in Figure 1.

During the network's lifetime, mobiles may fail and possibly resume operation after some time. Failures can occur due to hardware faults, system crashes, or battery depletion. If the fault is not permanent, the mobile may reconnect to the network, but the failure may have caused data loss or corruption. Due to mobility, a mobile may remain disconnected from the network for extended periods, during which it appears faulty to other mobiles.

As mobiles in the network cooperate by sharing information, information dependability and security must be enforced. Consider a mobile i owning confidential data d, which needs to be shared with other mobiles. Storing d solely on i is inadequate for dependability and availability, as i's failures can result in data loss or damage, and network disconnections can prevent other mobiles from accessing d. Therefore, to ensure data dependability and availability, the storage must be distributed and redundant. However, distributed storage in ad hoc networks introduces issues related to data security and confidentiality, as data transferred via multi-hop protocols can be easily intercepted or altered. Thus, the distributed data storage must be both dependable and secure.

## 3. Redundant Residue Number Systems
Given h pairwise prime, positive integers \(m_1, \ldots, m_h\) called moduli, let \(M = \prod_{p=1}^{h} m_p\), and without loss of generality, \(m_p > m_{p-1}\) for each \(p \in [2, h]\). For any non-negative integer X, let \(x_p = X \mod m_p\) be the residue of X modulo \(m_p\). The h-tuple \((x_1, \ldots, x_h)\) is called the residue representation of X with the given moduli; \(x_p\) is called the pth residue digit in this representation. There exist M distinct residue representations, and each representation corresponds to a unique integer in \([0, M)\) [21]. For every h-tuple \((x_1, \ldots, x_h)\), the corresponding integer X can be reconstructed using the Chinese Remainder Theorem:

\[
X = \left( \sum_{p=1}^{h} x_p \cdot M/m_p \cdot b_p \right) \mod M
\]

where, for each \(p \in [1, h]\), \(b_p\) is the multiplicative inverse of \(M/m_p\) modulo \(m_p\), that is,

\[
b_p \equiv (M/m_p)^{-1} \mod m_p = 1
\]

The number system representing integers in \([0, M)\) with the h-tuples of their residues modulo \(m_1, \ldots, m_h\) is called a Residue Number System (RNS) of moduli \(m_1, \ldots, m_h\), and M is said to be the range of the RNS.

Given \(h + r\) moduli \(m_1, \ldots, m_h, m_{h+1}, \ldots, m_{h+r}\), the Redundant Residue Number System (RRNS) extends the RNS to provide additional redundancy and error correction capabilities.