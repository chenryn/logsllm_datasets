# WEP Chaffing: Analysis and Countermeasures

## Table of Contents
1. Evolution of WEP Cracking
2. What is WEP Chaffing? What are Chaff Packets?
3. WEP Chaffing Example
4. Techniques to Counter Different Types of Chaff
   - Random Frames
   - Single Key
   - Multiple Keys
   - Random Keys
5. Implementation Problems with WEP Chaffing
6. Final Verdict on WEP Chaffing
7. Q&A

## 1. Evolution of WEP Cracking
Wired Equivalent Privacy (WEP) has been known to be insecure for many years. Various vulnerabilities and cracking techniques have been discovered, leading to the development of more secure protocols like WPA and WPA2.

## 2. What is WEP Chaffing? What are Chaff Packets?
WEP chaffing is a technique where additional, fake packets (chaff) are inserted into the network traffic to confuse attackers and slow down the key-cracking process. These chaff packets are designed to appear as legitimate traffic but are actually intended to disrupt the attacker's efforts.

## 3. WEP Chaffing Example
- **Naive Approach**: Inject random frames.
- **Sophisticated Approach**: Use specific patterns or techniques to make the chaff indistinguishable from real traffic.

## 4. Techniques to Counter Different Types of Chaff

### 4.1. Random Frames
- **Aircrack-ng Default**: Weak IV frames of fixed size.
- **Frame Size Filter**: Filter out frames based on their size.
- **Chaff using Single Key**: Aircrack-ng visual inspection.
- **Chaff using Multiple Keys**: Sequence Number analysis.
- **Chaff using Random Keys**: Initialization Vector (IV) analysis.

### 4.2. Sequence Number and IV Based Chaff Filtering
- **Strengths**:
  - Works with all three kinds of chaff: single key, multiple keys, and random keys.
  - Passive, off-line method.
  - Combination of sequence number and IV analyses creates a robust filter.
  - An independent chaff separator can be built.
- **Weaknesses**:
  - Reduced filtering efficiency when IVs are generated randomly.
  - Most legacy WEP devices do not use random IVs.

### 4.3. Active Frame Replay
- **Basic Idea**:
  - WEP has no replay protection.
  - The header of WEP frames can be modified.
  - Upon receiving a correctly encrypted WEP frame, the receiver will forward the frame as directed by its header.
  - Upon receiving an incorrectly encrypted WEP frame, the receiver will drop the packet.
- **Building a Practical Frame Re-player**:
  - Pick a frame whose authenticity is to be verified.
  - Change the destination address to `ff:ff:ff:ff:ff:ff` or a chosen multicast address and transmit.
  - If the AP relays the broadcast frame, the frame is authentic.
  - If the AP drops the frame, it is a chaff frame.
  - Replay packets can be identified by looking at the transmitter address (addr3) of packets transmitted by the AP.
  - Optionally, a signature can be added to identify the replay packets (e.g., specific multicast as the destination).
  - The packet size is another parameter that can be used to identify the replayed packet.
- **Strengths**:
  - 100% accurate chaff separation.
  - Oblivious to the sequence number or IV progression of a device.
  - Can be done in real-time.
  - Frame replay tools are already available in the public domain.
- **Weaknesses**:
  - WEP cracker cannot be totally passive; active frame injection is required.
  - This has to be done "online" and at least one client needs to be associated with the network, whose source MAC we can forge and use for packet replays.

### 4.4. Replay and Fingerprinting Chaff
- **Implementation of Chaffing**:
  - There will be an identifiable fingerprint in the chaff.
  - The Wireless Intrusion Prevention System (WIPS) needs to identify its own chaff packets from the real network data.
  - Finding a usable fingerprint is a one-time job.
  - Check packet header fields for any abnormality.
  - Packet is fixed length?
  - Something appended, prepended to the packet?
  - Once found, simply write a filter to weed out all the chaff, then release the fingerprint to the community.

## 5. Implementation Problems with WEP Chaffing
- **Passive key cracking tools cannot be detected**.
- **Chaffing needs to be done 24/7/365**.
- **Chaffing needs to be done on all channels on which WEP devices operate**.
- **Imagine the load on the WIPS and the bandwidth wasted**.
- **Chaffing needs to be done for all APs and clients connected to the authorized network**.
- **Achieving a reliable confusion for the attacker requires continual generation of chaff frames**.
- **Difficult (almost impossible) to achieve the above unless dedicated devices are installed for chaffing on each channel**.
- **The chaffer has to spend significantly high resources to win all the time**.
- **If chaffing stops even for a brief period, the attacker might crack the key**.
- **The chaffer has to win always, while the attacker only needs to win once**.
- **Increasing sophistication of attacks on chaffing is possible; the attacker can go offline, take a lot of time, and try a gamut of techniques and possibilities to break the key**.
- **Increasing sophistication of chaffing is more difficult; it has to be done continuously, as newer countermeasures are discovered**.

## 6. Final Verdict on WEP Chaffing
- **Even if chaff frames were made indistinguishable by an oracle, WEP can still be cracked**.
- **WEP has so many other vulnerabilities which can be easily exploited**.
- **128-bit key, suppress weak IV generation, ARP filtering, and WEP chaff frame insertion are all insufficient**.
- **Final Verdict**: WEP chaffing was indeed too good to be true. It can at best slow down a cracker by a couple of minutes but cannot stop them from breaking the key.
- **Though our talk only includes Aircrack-ng, the chaff separation techniques we have outlined can be easily added to the functionality of any WEP cracking tool, without much additional work**.
- **Chaffing is another attempt at providing security through obscurity**.
- **Chaffing cannot provide robust protection against WEP key cracking. WEP was broken, it is broken, and it will remain broken. PERIOD.**

## 7. Open Challenge
- **If you believe you have a WEP chaffing implementation that works very differently and is unbeatable, we request you send it to us, and we will break it within 72 hours**.
- **Demo Setup**: We will provide you with an AP and clients – you can bring the WEP chaffer to protect them.

## Questions?

## References
1. Vendor aims to ‘cloak’ WEP: [Link](http://www.networkworld.com/news/2007/032907-air-defense-wep-wireless-devices.html?page=1)
2. The TJX breach using Wireless: [Link](http://www.emailthis.clickability.com/et/emailThis?clickMap=viewThis&etMailToID=2131419424)
3. RC4 stream Cipher basics: [Link](http://en.wikipedia.org/wiki/RC4)
4. Wired Equivalent Privacy (WEP): [Link](http://en.wikipedia.org/wiki/Wired_Equivalent_Privacy)
5. Weaknesses in the Key Scheduling Algorithm of RC4, Selected Areas in Cryptography, 2001 - Fluhrer, Mantin, and Shamir: [Link](http://www.wisdom.weizmann.ac.il/~itsik/RC4/Papers/Rc4_ksa.ps)
6. Korek’s post on Netstumbler: [Link](http://www.netstumbler.org/showpost.php?p=89036)
7. WEP Dead Again: Part 1 – Infocus, Securityfocus.com: [Link](http://www.securityfocus.com/infocus/1814)
8. WEP Dead Again: Part 2 – Infocus, Securityfocus.com: [Link](http://www.securityfocus.com/infocus/1824)
9. Aircrack-ng: WEP Cracker: [Link](http://www.aircrack-ng.org/)
10. Airsnort: WEP Cracker: [Link](http://airsnort.shmoo.com/)
11. Pcap2air: Packet replay tool: [Link](http://www.802.11mercenary.net/pcap2air/)
12. Chop-Chop: Packet decoder using WEP ICV flaw: [Link](http://www.netstumbler.org/showthread.php?t=12489)
13. Intercepting Mobile Communications: The Insecurity of 802.11 – N. Borisov: [Link](http://www.isaac.cs.berkeley.edu/isaac/mobicom.pdf)
14. Your 802.11 Wireless Network has No Clothes – William Arbaugh: [Link](http://www.cs.umd.edu/~waa/wireless.pdf)
15. Detecting Detectors: Layer 2 Wireless Intrusion Analysis – Joshua Wright: [Link](http://home.jwu.edu/jwright/papers/l2-wlan-ids.pdf)
16. Detecting WLAN MAC address spoofing – Joshua Wright: [Link](http://home.jwu.edu/jwright/papers/wlan-mac-spoof.pdf)
17. WPA/WPA2 the replacement for WEP: [Link](http://en.wikipedia.org/wiki/WPA2)
18. AirDefense Perpetuates Flawed Protocols – Joshua Wright: [Link](http://edge.arubanetworks.com/blog/2007/04/airdefense-perpetuates-flawed-protocols)