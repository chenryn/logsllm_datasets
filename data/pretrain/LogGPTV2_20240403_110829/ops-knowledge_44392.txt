I understand that you are developing an Android application and are using Google App Engine (GAE) and Google Compute Engine (GCE) as your backend. You have initially based your application on Google's demo code in Python, but since you are more familiar with Java, you are considering switching the GAE backend to Java. Here are some points to consider:

1. **Language Proficiency**: Your comfort and proficiency with a programming language are crucial, especially when dealing with critical applications or tight deadlines. If you are more comfortable with Java, it may be more efficient and less error-prone for you to use Java.

2. **Google Support and Demos**: While it is true that Google provides many demo codes and resources in Python, both Python and Java are well-supported on Google Cloud Platform. The availability of resources and support should not be the sole deciding factor.

3. **Web Services and Integration**: Both Python and Java are capable of hosting web services and integrating with Android applications. Google Cloud Endpoints can generate client-side bindings (client libraries) for Android, making it easier to integrate with your backend, regardless of the language used.

4. **Future Maintenance and Scalability**: Consider the long-term maintenance and scalability of your application. If you foresee needing to scale or maintain the application over a long period, using a language you are proficient in will be beneficial.

5. **Community and Ecosystem**: Both languages have strong communities and ecosystems. However, if you find that one language has a more active community or better tools for your specific use case, that might also influence your decision.

### Recommendation
Given that you are more familiar with Java, it would be advisable to switch your GAE backend to Java. This will likely make development, debugging, and maintenance more straightforward for you. Additionally, the integration with your Android application should be seamless, as both Python and Java environments are capable of hosting web services and generating client-side bindings.

If you have the time and interest, learning Python could be a valuable skill, but for the current project, sticking with Java seems like the more practical choice. 

Feel free to reach out if you need further assistance!