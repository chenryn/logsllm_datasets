法 ， 如有可能， 应当尽量避免使用这种算法。
第 7 章 PKI 和密码学应用
7.2.4 MD5
1991 年 ， 因vest 发布了 其消 息摘要算法的下一个版本， 也就是 扎在05 。 这个算法还是处理 512
位的消息分组， 但是使用 4 轮明显不同的计算生成与 MD2 和 MD4 算法一样长度的消息摘要(1 28
位)0 MD5 与 MD4 具有同样的填充要求， 即 消息长度必须 比 5 1 2 位 的倍数短 64 位 。
h在05 实现了额外的安全特性， 显著降低了消息摘要的生成速度。 遗憾的是， 近来的密码分析攻
击 己经证明 MD5 协 议会产生冲突， 这表明它不是一种单向函数。 特别地， Aiien Lenstra 和其他一些
人在 2005 年证明 了 使用不同 的公钥能够创 建两个具有相 同 MD5 散列 的数字证书。
表 7.2 列 出 了 知名 的散列 函 数及其生成散列值的长度。 请记住这张表。
表 7.2 散列算法记忆表
算法名称 晗希值的长度(单位为位)
HAVAL 一种 MD5 变种 1 28、 1 60 、 1 92 、 224 丰日 256
HMAC 可变
MD2 1 28
MD4 1 28
MD5 1 28
SHA-1 1 60
SHA-224 224
SHA-256 256
SHA-384 384
SHA-5 12 5 1 2
7.3 数 字签名
一旦选择足够安全的散列算法， 那么就能够使用其实现数字签名系统。 数字签名基础结构具有
两个明显的 目 标:
• 数字化的签名消息可以向接收方保证: 消息确实来 自 己声 明 的发送者， 并且实施了 不可否
认性(也就是说 ， 排除 了 发送者之后声称消息是伪造的情况)。
• 数字化的签名消息可以向接收方保证: 消息在发送方和接收方之间进行传输的过程中不会
被改变。 这种方法确保消息不会受到恶意的修改(第三方想要修改消息的含义)以及无意识的
修改(由通信过程中 的故障造成 ， 如 电磁干扰)。
数字签名算法的基础是本章 已 经介绍过的两个重要概念 : 公钥密码学和散列 函数。
如 果 Alice 想要数字化签名一条发送给 Bob 的消息， 那么她会执行下列动作 :
(1) Alice 使用一种足够安全的散列 算法(如 SHA-5 1 2)生成原始明文消息的消息摘要。
(2) 然后 ， A1ice 使用她的私钥只 对消 息摘要进行加密。 加密的消息摘要便是数字签名 。
(3) Alice 将签名 的消息摘要添加到明文消 息 中 。
(4) Alice 将完成添加的 消息传送给 Bob。
1 65
1 66
CISSP 官方学 习指南(第 7 版)
当 Bob 接收到数字化签名 的消息时， 他会逆向 完成如下过程:
(1) Bob 使用 Alice 的 公钥解密数字签名 。
(2) Bob 使用相同的散列函数， 生成从 Alice 那里接收到 的完整明文消息的消息摘要。
(3) 然后， Bob将从剧i臼 那里接收到的 己解密的消息摘要与 自 己计算得到的消息摘要进行比较。
如果两个消息摘要匹配， 那么 Bob 就能够确认接收到的消息是由 Alice 发送的 。 如果这两个消息摘
要不匹配， 那么这条消息有可能不是 Alice 发送的 ， 也有可能在传输过程中 被修改了 。
注意 :
数字签名 不仅仅用 于消息， 软件供应商经常使用数字签名技术对从互联网 上下载的编码分发(例
如 ， applet 和软件补丁)进行身份认证。
需要注意的是， 数字签名过程本身并不提供任何隐私保护。 数字签名 只是确保满足加密 目 标中
的完整性和不可否认性。 然而， 如果 Alice 想保证发送给 Bob 的消息的隐私性， 那么她就要在消息
生成的过程中增加额外的步骤。 在将己签名 的消息摘要添加到明文消 息中 以后， Ali臼 可 以用 Bob
的公钥加密整条消息。 当 Bob 接收到消息时 ， 他会用 自 己的私钥在上述所列的步骤之前对消息进行
解密 。
7.3.1 HMAC
HMAC 算法实现了 部分的数字签名功能， 即保证了消息在传输过程中 的完整性， 但是不提供不
可否认性。
@ 真实场景
应当使用 哪一种密钥 ?
如果对公钥密码学不是很熟悉， 那么就会对针对各种不同的应用 情况选择适当的密钥感到相 当
困 惑。 力口密 、 解密、 消 息签名和签名验证者问却有具有不 同 密钥输入值的相同 算法。 下面列 出 的一些
简 单规则 能够帮助读者在 准备 CISSP 考试时记住这些概念:
• 如果想要加 密 消息， 那么就使用 发送者的公钥 。
• 如果想要解密友送给你的消息， 那么就使用 自 己 的 私钥 。
• 如果想要数字 化签名 发送给其他人的 消息， 那么就使用 自 己 的 私钥 。
• 如果想要验证由 其他人发送过来的 消息中的签名 ， 那么就使用 发送者的公钥 。
这 4 条规则是公4月密码学和生文字签名 的核心原则。 只要对每一条规则都有 了 深刻 的理解， 就有
了 一个 良好的开端。
通过使用一个共享的密钥， HMAC 可 以与任何标准的消息摘要生成算法(如 SHA-2)组合在一起。
因此， 只有知道此密钥的通信双方能够产生或验证数字签名 。 如果接收方解密消息摘要， 但是无法
将这个消息摘要与明文消息产生的消息摘要进行成功比较， 那么就说明这条消息在传输过程中被更
改了。
第 7 章 PKI 和密码学应用
因 为HMAC依赖于一个共享的密钥， 所以它无法提供任何的不可否认性功能(正如前面提到的)。
然而， 与下面将要介绍的数字签名标准相比， HMAC 以一种更加有效的方式进行操作， 并且可能更
适合于使用对称密码学的应用 。 简而言之， 在不使用加密的消息摘要算法与基于公钥密码学的采用
计算方式 的 昂贵数字签名 算法之间， 出<1AC 能够起到折中 的作用 。
7.3.2 数字签名标准
在美国联邦信息处理标准σIPS)1 86-4 中 ， 美 国 国家标准和技术协会指定了联邦政府可以使用 的
数字签名算法， 该标准也被称为数字签名标准(DSS)。 这个文档指定美国联邦政府批准的所有数字签
名 算法都必须使用 SI-L斗2 散列 函数。
DSS 还指定了 可以被用于支持数字签名基础结构的加密算法。 目 前存在下面三种经过批准的标
准加密算法:
• 数字签名算法(DSA)， 在 FIPS 1 86-4 中指定。
• RSA 算法， 在 ANSI X9.3 1 中指定。
• 椭圆曲线数字签名算法(ECDSA)， 在 ANSI X9.62 中指定。
提示 :
你还应当了 解其他两种数字签名 算法， 至少要知道它们的名字: Schnorr 签名 算法和 NybergRueppel 签名 算法。
7 .4 公钥基础设施(PKI )
公钥加密的主要优点是使原本互不认识的双方之间 的通信变得容易。 受信任的公钥基础设施
σ阻)层次使得这一点成为可能。 这种信任允许结合非对称和对称算法以及哈希和数字证书， 为我们
提供混合加密方式。
在下面的 内容中 ， 你将了解公钥基础设施的基本组件， 以及使全球安全通信成为可能的密码学
概念。 你将学习 数字证书的组成 、 证书授权的作用 、 生成和销毁证书的过程。
7.4. 1 证书
数字证书为通信双方提供了 保证， 保证正在与之通信的人确实具有他们所宣称的身份。 数字证
书本质上是个人公钥的认可副本。 当用户验证证书确实是由可信证书颁发机构(CA)发布时， 他们就
相信这个公钥是合法的 。
数字证书包含特定的身份标识信息， 并且其结构归国际标准 X.S09 决定。 遵循 X.S09 标准的证
书包含下列数据 :
• 证书遵循的 X.S09 版本。
• 序列号(来 自 证书建立者)。
• 签名 算法标识符(指定证书授权机构对证书的 内 容进行数字签名 时使用 的技术)。
• 发布者姓名(发布证书的证书授权机构的 身份标识)。
1 67
1 68
CISSP 官方学 习指南(第 7 版)
• 有效期(指定证书有效的 日 期和 时间 : 开始的 日期、 时间， 以及结束的 日 期 、 时间)。
• 主体的名字(包括区 分实体身份的唯一名字或 DN ， 相应实体拥有证书中 包含的公钥)。
• 主体的公钥(证书的内容: 证书拥有者用于建立安全通信的 实际公钥)。
当前版本的 X.509(.版本 3)支持证书扩展: 定制变量， 这些变量包含为支持对证书或各种应用程
序进行跟踪而 由证书授权机构插入到证书 中 的数据。
注意 :
如果对建设 自 己的 X.509 证书感兴趣或只是想探究公钥基础设施的 内 部工作， 可以从国 际电信
联盟(Intemational Telecommunications Union， ITU)购 买完整的官方 X.509 标准。 它是通信标准的开
放 系统互连(Open System Interconnection， OSI) 系 列 的一部分， 可以在 ITU 网 站www.itu.int 购买电
子版。
X.509 尚未正式接受为标准， 因此不同厂商的实现有所不同。 然而， 微软和 Mozilla 在他们的
Web 客户端和服务器之间采用 X.509 作为事实上的安全套接字层(SSL)通信标准。 SSL 协议的细节部
分将在本章后面的 " 密码学应用 " 中进行阐述。
7.4.2 证书授权机构
证书授权机构(CA)将公钥基础设施绑定在一起。 这些中 立的组织机构为数字证书提供公证服
务。 为了从著名的CA 处获得数字证书， 必须亲 自 前往其代理机构， 并且出示适当的身份识别文档。
下面的列表中 包括一些主要的 CA:
• Symantec
• Tha\\吨巳
• GeoTrust
• GlobalSign
• Comodo Limited