---
title: Kusto Java SDK
description: This article provides an overview of the Kusto Java SDK.
ms.reviewer: vladikbr
ms.topic: reference
ms.date: 04/19/2023
---

# Kusto Java SDK

The Kusto Java client library enables you to query your Kusto cluster using Java. This SDK is available in the [azure-kusto-java](https://github.com/Azure/azure-kusto-java) repository on GitHub.

## Key Features
- **Query Execution:** Execute Kusto queries and retrieve results.
- **Authentication:** Support for various authentication methods, including Azure Active Directory (AAD).
- **Streamlined API:** Simple and intuitive API for interacting with Kusto clusters.

## Getting Started
To get started with the Kusto Java SDK, follow these steps:

1. **Add the Dependency:** Add the Kusto Java SDK as a dependency in your project. You can find the latest version and dependency information in the [GitHub repository](https://github.com/Azure/azure-kusto-java).

2. **Set Up Authentication:** Configure the appropriate authentication method for your application. The SDK supports AAD tokens, managed identities, and more.

3. **Execute Queries:** Use the provided API to execute Kusto queries and process the results.

For detailed documentation and examples, refer to the [Kusto Java SDK documentation](https://docs.microsoft.com/en-us/azure/data-explorer/kusto/api/java/kusto-java-client-library).

## Example Code
Here is a simple example to demonstrate how to use the Kusto Java SDK to execute a query:

```java
import com.microsoft.azure.kusto.data.Client;
import com.microsoft.azure.kusto.data.auth.ConnectionStringBuilder;
import com.microsoft.azure.kusto.data.exceptions.DataClientException;
import com.microsoft.azure.kusto.data.exceptions.DataServiceException;

public class KustoJavaExample {
    public static void main(String[] args) {
        try {
            // Create a connection string
            ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder()
                    .withAadUserPromptAuthentication("https://<cluster-name>.<region>.kusto.windows.net");

            // Create a client
            Client client = ClientFactory.createClient(connectionStringBuilder);

            // Execute a query
            String kustoQuery = "Your Kusto Query Here";
            ClientRequestProperties properties = new ClientRequestProperties();
            ClientResult result = client.execute("<database>", kustoQuery, properties);

            // Process the results
            for (Row row : result) {
                System.out.println(row);
            }
        } catch (DataClientException | DataServiceException e) {
            e.printStackTrace();
        }
    }
}
```

For more advanced usage and additional features, please refer to the [Kusto Java SDK documentation](https://docs.microsoft.com/en-us/azure/data-explorer/kusto/api/java/kusto-java-client-library).

## Support and Feedback
If you encounter any issues or have feedback, please open an issue in the [GitHub repository](https://github.com/Azure/azure-kusto-java/issues). Our team is committed to providing support and continuously improving the SDK.

## Conclusion
The Kusto Java SDK is a powerful tool for integrating Kusto query capabilities into your Java applications. With its robust features and straightforward API, you can efficiently interact with Kusto clusters and leverage the full power of Kusto's data analytics capabilities.

---