dition, 6% 2 for the redesigned). Nevertheless, the differences were
not statistically significant (Mann-Whitney-U test for each case).
As for the resources used, roughly the same proportion of par-
ticipants browsed the Internet in both conditions (79%, 34 for the
original condition, 68%, 21 for the redesigned). Inspecting the dif-
ferences by case (Fig. 4), there was a significant decrease in the name
constraints case for the redesigned condition (72% to 45%, Fisher’s
exact test, p =0.029). There was also a difference in the online search
behavior – significantly fewer people used online search in the re-
designed condition (only 62% of those who browsed online, while
2(1) = 10.72, p = 0.001).
it was 100% in the original condition, χ
Original condition (43   )Redesigned condition (31   )orig., redesig.0%25%75%50%100%12%, 13%OK16%, 10%Expired40%, 23%Self-signed35%, 26%Hostnamemismatch72%, 45%Name constraintsWill You Trust This TLS Certificate?
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
Both these results support the hypothesis that the redesigned er-
ror messages and documentation positively influence resource use.
Participants in the redesigned condition had to spend less effort to
achieve similar trust assessment and comprehension for the expired,
hostname mismatch and OK case. Furthermore, they even achieved
better results for the self-signed case (trust assessment) and the name
constraints case (comprehension).
As detailed in Section 2.2, there was a link to the new documen-
tation website x509errors.cz embedded directly in the re-worded
validation messages. The link in the message was followed by 71%
of the participants in the redesigned condition who browsed online
(15 ). It is important to mention that all the participants browsing
online who did not use online search (8 ) visited only the linked
documentation page. People opening x509errors.cz usually did so for
multiple cases (mean 4.2±1.27,median 5). Everybody consulting the
page at least once did so for the name constraints case. Incorporating
a documentation link directly into the error message thus turned
out to be highly influential – the page was visited by the majority
of browsing participants, often in multiple cases.
5 RELATED WORK
In this section, we focus on the interaction of IT professionals with
TLScertificatesandtheperceptionofTLSwarningsbyendusers.Fur-
thermore, we briefly discuss the general influence of documentation
and error messages on system security.
5.1 IT Professionals and TLS Certificates
In general, the environment of X.509 certificates and TLS infrastruc-
ture is rather complicated, allowing for a wide variety of things that
can go wrong [12]. As shown by Krombholz et al. [26], TLS seems
to be complicated to set up and configure even for IT professionals.
In a conducted usability study on the deployment of TLS on Apache
servers, even people with network security knowledge struggled to
configure the server correctly. When being asked about the usabil-
ity shortcomings of the deployment process, participants noted the
unavailability of best practice tutorials, misleading terminology and
error messages, as well as a weak default configuration.
Apart from the server configuration, there are deficiencies in pro-
gramming APIs as well. Georgiev et al. [19] showed that options,
parameters, and return values of widely used TLS implementations
can be easily misunderstood by developers, often leading to certifi-
cate validation in non-browser software done incorrectly or not at all.
Ukrop and Matyas present another usability study [39], in which
participants were to generate and validate certificates with the
OpenSSL command line interface. Almost half of the participants in
the experiment assumed that they had succeeded in creating a valid
self-signed certificate, although they had not. Only a fraction (19%) of
participants were able to correctly validate the provided certificates,
suggesting the usability of OpenSSL is also far from optimal.
Usability issues, as described above, are a major obstacle in get-
ting TLS configurations and certificate handling right for developers,
testers and administrators alike. However, security issues are not
only the result of poor usability – they may be caused by institutional
or organizational factors out of control of the administrators [14]. In
the context of TLS certificates, Fahl et al. [17] found that almost two-
thirds of the non-validating certificates were deployed deliberately.
One reason included the websites were never supposed to be publicly
accessible (this manifested itself also in our study, see Section 3.2).
Another reason for deploying self-signed certificates was to save
money (also mentioned in our interviews, but only marginally).
However, even being able to deploy TLS correctly does not tell
us much about IT professionals’ perception of certificate flaws they
encounter when connecting to other servers. In this respect, our
work complements the previous research mentioned above.
5.2 End Users and TLS Certificates
In contrast to IT professionals, the perceptions of end users with
respect to TLS warnings have been thoroughly investigated. Studies
indicate that a considerable portion of end users does not understand
the causes of certificate warnings. Sunshine et al. [38] surveyed 400
browser users in 2008 to investigate reactions and understanding of
TLS warnings (expired, unknown issuer, domain name mismatch).
They found that the majority of users did not understand the warn-
ings. Interestingly, those users who understood the warning chose
more often to adhere to name mismatch warnings but considered
warnings for expired certificates as low risk (a similar trend is also
present in our study in trust assessment, see Section 3.6).
A study by Felt et al. [18] investigated whether users can un-
derstand the threats they might be facing when seeing TLS warn-
ings. The most users misidentified the threat source (more than 50%
thought it was malware) and less than 20% understood what data
was actually at risk (most overestimated the risk).
Reeder et al. [32] conducted a study on browser warnings to find
out why users do not adhere to warnings. The most common reasons
to ignore a TLS warning was connecting to a known trusted website,
e.g., company-internal or their own (both opinions also arose in our
study, see Section 3.2). Whereas warning adherence rates increased
over time for major browsers, comprehension rates remain low and
misconceptions are still a problem [18].
In summary, research shows that end users seem to lack the un-
derstanding of certificate warnings and their security implications.
In most cases, IT professionals could set the appropriate decision al-
ready during system development. However, to do so, it is crucial that
they understand the errors and security consequences themselves
– which is why we decided to focus on IT professionals.
5.3 Documentation and Error Messages
Ourattemptstoimprovetheunderstandingofsecurityconsequences
of certificate validation errors were based on re-worded error mes-
sages and redesigned documentation. Bralo-Lillo et al. [9] found
that when end-user security dialogues get appropriately adjusted,
significantly fewer people ignore clues indicating they may be at risk.
The importance of usable documentation is discussed by Georgiev
et al. [19], stressing the importance of clean and consistent error
reporting. Error handling is also seen as vital by Gorski and Lo Ia-
cono [21]. In further work [22], they prototyped an API-integrated
security advice system successfully nudging developers towards
secure decisions.
Moreover, several works emphasized the crucial role of documen-
tation for security API usability. Robillard argues [33] that documen-
tation and code examples are an essential information source for
developers to learn how to use an API. Concerning documentation in
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
Ukrop and Kraus, et al.
the security context, Acar et al. [2] have shown that IT professionals
resort to online forums and tutorials on the Internet, often helping
them get the code functional but not necessarily secure. Therefore,
providingeasilyaccessibledocumentationwithsecurityinformation
and examples of secure code is of crucial importance [1, 2].
6 DISCUSSION AND CONCLUSIONS
We conducted a study with 75 people working in IT to understand
how they perceive flawed TLS certificates. Even though similar stud-
ies had been conducted for end users before, this is the first such
study for IT professionals. We further investigated how we can in-
fluence comprehension and resource use by re-wording the error
messages and redesigning documentation.
6.1 Trust Decisions Are Not Binary
From a security point of view, the decision to trust a certificate de-
ployed by someone else is binary: if the certificate does not validate,
it should not be trusted. Our study results show that the trust deci-
sions of IT professionals are not necessarily binary and depend on
the particular flaw and its context.
For example, for a majority of participants, the trust in expired
certificates heavily depends on the time elapsed from the expiry date,
indicating the expiration time may be used as a proxy to determine
whether it was a misconfiguration or an attack. This was also evident
in the qualitative results, where many participants mentioned that
expired certificates are likely a mistake and rather common. This
perceptionmaybeinfluencedbytheactualrealityoftheInternet:25%
ofwebsiteswithexpiredcertificatesareaccessedamaximumofseven
days after the expiration date, indicating that the problem is often
fixed within one week [5]. Moreover, several participants suggested
that the reputation of the certificate subject also plays a role.
Besides the fuzzy trust in the expired certificate, IT professionals
seem to overly trust the self-signed and the name constrained cer-
tificates: both were rated similarly to the expired case even though
the security implications are rather worse. Furthermore, we have to
keep in mind that this may be only a lower bound on the trust in the
broader population due to a social desirability bias (see Section 2.6).
The trust evaluation of the name constraints case is especially wor-
rying, as this case was also poorly understood. For the self-signed
case, the context was important: expecting a self-signed certificate
on a (known) server or using it for internal or testing purposes is
seen as a less severe problem.
6.2 Security Implications
The security implications of trusting flawed certificates are different
in different cases. For example, it may be acceptable for the system
administrator to trust a flawed certificate deployed deliberately on
their own server for testing purposes (the potential security conse-
quences concern only themselves). However, for IT professionals
developing applications used by (potentially) millions of end users,
the situation is different as their decision impacts all the end users.
Delegating the decision to the end users is generally a bad idea
since they tend to make uninformed decisions due to the lack of un-
derstanding (see Section 5.2). Moreover, given that certificate flaws
are common, but mostly benign, end users could further lose their
trust in the security of the TLS ecosystem [25, 36]. In most cases, IT
professionals should, therefore, make security decisions during the
development, testing and deployment process as they are capable
of better-informed decisions.
Even though IT professionals have a better potential to make
appropriate security decisions than end users, our study shows some
still fairly trust invalid certificates: 21% of the participants (16 ) say
the self-signed certificates ‘looks OK’ or better; for name constraints
certificateitis20%(15 ).Thus,certificateswitherrorsarestilltrusted
by some of the IT professionals working with them.
While our work presents valuable insights into IT professionals’
perceptions of flawed certificates, further research is needed to in-
vestigate the coping strategies people in IT use when encountering
such certificates in the wild.
6.3 Error and Documentation Design Matters
We show that even a simple content redesign of the error messages
and documentation matters: It positively influenced the compre-
hension of the errors and trust assessment of the certificates (see
Sections 4.1 and 4.2). Both over-trusted cases (self-signed and name
constraints) were rated lower and the comprehension in the name
constraints case improved considerably (expressed by more frequent
comprehension codes, less frequent incomprehension codes, lower
task times and less Internet browsing).
The majority of participants with the opportunity (71%, 15 ) fol-
lowed the link provided in the re-worded error message, pointing
to an excellent and cost-effective design opportunity to lead users
to a trusted unified documentation source.
6.4 Future Work
While we obtained new insights into participants’ perceptions of
flawed TLS certificates, more work is needed to investigate what
influences these perceptions and what coping behavior they cause.
Nonetheless, we should design systems embracing the complexity
of trust decisions IT professionals make instead of forcing them to
choose a binary option. We should pay more attention to error mes-
sage and error documentation design as it turns out that even simple
content changes can have significant effects. The name constraints
extension seems to be very poorly understood, suggesting its wider
deployment might be problematic without extra educational efforts.
We plan to propose a few simple patches to OpenSSL (and possibly
other libraries), re-wording name constraints error message and the
accompanying documentation. More significant changes, such as
error messages linking to good documentation or rewriting the docu-
mentation to clearly state the security implications, may also be ben-
eficial but would require a discussion with the developer community.
In conclusion, the TLS certificate ecosystem proves to be compli-
cated enough to produce a wide variety of attitudes, opinions and
misconceptions even among IT professionals. To improve the situa-
tion,designersneedtoknowinglystriveforgooddeveloperusability.
ACKNOWLEDGMENTS
We appreciate the support of Red Hat Czech and DevConf. We are
particularlygratefultoNikosMavrogiannopoulos,MatúšNemecand
Tobias Fiebig for insightful comments and to Vlasta Šťavová, Agáta
Kružíková and Martina Olliaro for their help with the experiment.
We also thank all experiment participants.
Will You Trust This TLS Certificate?
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
REFERENCES
[1] Yasemin Acar, Michael Backes, Sascha Fahl, Simson Garfinkel, Doowon Kim,
Michelle Mazurek, and Christian Stransky. 2017. Comparing the usability of cryp-
tographic APIs. In Proceedings of the 2017 IEEE Symposium on Security and Privacy
(S&P). IEEE, Piscataway, NJ, USA, 154–171. https://doi.org/10.1109/sp.2017.52
[2] Yasemin Acar, Michael Backes, Sascha Fahl, Doowon Kim, Michelle Mazurek,
and Christian Stransky. 2016. You get where you’re looking for: The impact
of information sources on code security. In Proceedings of the 2016 IEEE
Symposium on Security and Privacy (S&P). IEEE, Piscataway, NJ, USA, 289–305.
https://doi.org/10.1109/sp.2016.25
[3] Yasemin Acar, Christian Stransky, Dominik Wermke, Michelle Mazurek, and
Sascha Fahl. 2017. Security Developer Studies with GitHub Users: Exploring
a Convenience Sample. In Proceedings of the 13th USENIX Conference on Usable
Privacy and Security (SOUPS). USENIX Association, Berkeley, CA, USA, 81–95.
[4] Mustafa Acer, Emily Stark, Adrienne Felt, Sascha Fahl, Radhika Bhargava, Bhanu
Dev, Matt Braithwaite, Ryan Sleevi, and Parisa Tabriz. 2017. Where the Wild
Warnings Are: Root Causes of Chrome HTTPS Certificate Errors. In Proceedings of
the 24th ACM Conference on Computer and Communications Security (CCS). ACM
Press, New York, NY, USA, 1407–1420. https://doi.org/10.1145/3133956.3134007
[5] Devdatta Akhawe, Bernhard Amann, Matthias Vallentin, and Robin Sommer.
2013. Here’s my cert, so trust me, maybe?: Understanding TLS errors on the web.
In Proceedings of the 22nd International Conference on World Wide Web (WWW).
ACM Press, New York, NY, USA, 59–70. https://doi.org/10.1145/2488388.2488395
[6] Devdatta Akhawe and Adrienne Felt. 2013. Alice in Warningland: A Large-Scale
Field Study of Browser Security Warning Effectiveness. In Proceedings of the 22nd
USENIX Security Symposium. USENIX Association, Berkeley, CA, USA, 257–272.
[7] Lujo Bauer, Cristian Bravo-Lillo, Lorrie Cranor, and Elli Fragkaki.
Technical Report CMU-CyLab-13-
2013.
002. CyLab, Carnegie Mellon University.
Retrieved 2019-06-01 from
https://www.cylab.cmu.edu/_files/pdfs/tech_reports/CMUCyLab13002.pdf
Warning design guidelines.
[8] Robert Biddle, Paul van Oorschot, Andrew Patrick, Jennifer Sobey, and
Tara Whalen. 2009. Browser Interfaces and Extended Validation SSL Cer-
tificates: An Empirical Study. In Proceedings of the 2009 ACM Workshop on
Cloud Computing Security (CCSW). ACM Press, New York, NY, USA, 19–30.
https://doi.org/10.1145/1655008.1655012
[9] Cristian Bravo-Lillo, Saranga Komanduri, Lorrie Faith Cranor, Robert W. Reeder,
Manya Sleeper, Julie Downs, and Stuart Schechter. 2013. Your Attention Please: De-
signing Security-decision UIs to Make Genuine Risks Harder to Ignore. In Proceed-
ings of the 9th USENIX Conference on Usable Privacy and Security (SOUPS). USENIX
Association, Berkeley, CA, USA, 1–12. https://doi.org/10.1145/2501604.2501610
Baseline Requirements for the Issuance and
Retrieved 2019-05-01 from
Management of Publicly-Trusted Certificates.
https://cabforum.org/baseline-requirements-documents/
[10] CA/Browser Forum 2018.
[11] Taejoong Chung, Yabing Liu, David Choffnes, Dave Levin, Bruce MacDowell
Maggs, Alan Mislove, and Christo Wilson. 2016. Measuring and Applying
Invalid SSL Certificates: The Silent Majority. In Proceedings of the 16th ACM
Internet Measurement Conference (IMC). ACM Press, New York, NY, USA, 527–541.
https://doi.org/10.1145/2987443.2987454
[12] Jeremy Clark and Paul van Oorschot. 2013. SoK: SSL and HTTPS: Revisiting Past
Challenges and Evaluating Certificate Trust Model Enhancements. In Proceedings
of the 2013 IEEE Symposium on Security and Privacy (S&P). IEEE, Piscataway, NJ,
USA, 511–525. https://doi.org/10.1109/sp.2013.41
[13] D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, and W. Polk. 2008.
Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List
(CRL) Profile. RFC 5280. RFC Editor.
[14] Constanze Dietrich, Katharina Krombholz, Kevin Borgolte, and Tobias Fiebig.
2018.
Investigating System Operators’ Perspective on Security Miscon-
figurations. In Proceedings of the 25th ACM Conference on Computer and
Communications Security (CCS). ACM Press, New York, NY, USA, 272–1289.
https://doi.org/10.1145/3243734.3243794
[15] Zakir Durumeric, David Adrian, Ariana Mirian, Michael Bailey, and Alex Halder-
man. 2015. A Search Engine Backed by Internet-Wide Scanning. In Proceedings of
the 22nd ACM Conference on Computer and Communications Security (CCS). ACM
Press, New York, NY, USA, 542–553. https://doi.org/10.1145/2810103.2813703
[16] Serge Egelman and Eyal Peer. 2015. Scaling the security wall: Developing a
security behavior intentions scale (SeBIS). In Proceedings of the 33rd Annual ACM
Conference on Human Factors in Computing Systems (CHI). ACM Press, New York,