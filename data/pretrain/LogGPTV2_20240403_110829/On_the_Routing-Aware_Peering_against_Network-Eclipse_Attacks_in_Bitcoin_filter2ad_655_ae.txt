### Optimized Text

#### Tweaks T1–T3 and Their Combinations
Tweaks T1–T3 generally yield promising results when combined with other tweaks. However, a few combinations result in even worse defense performance compared to the individual tweaks (e.g., (T1, T2) versus T2). This highlights the non-monotonic nature of these countermeasures. Additionally, the protocol tweak T6 reduces the effectiveness of all other tweaks except T5.

#### Example: Bitcoin Node Operator's Decision
Consider a hypothetical Bitcoin node operator who is willing to experiment with various simple countermeasures. The operator may discover that the performance of T6 alone is worse than the baseline and decide not to activate T6. The operator then evaluates all possible combinations of the remaining five tweaks (T1–T5) and compares their defense effectiveness, as shown in Figure 11.

In particular, the combination of three tweaks (T3, T4, T5) results in the lowest attack success rate of 20.9% (see the right-most blue bar in Figure 11). Adding T1 or T2 to this combination (T3, T4, T5) only marginally improves the defense, with attack success rates of 20.4% and 20.6%, respectively. The combination of all five tweaks (T1, T2, T3, T4, T5) achieves a success rate of 20.2%, which is only slightly better than (T3, T4, T5). Given this small performance gain, the operator may find the best operating point with the three tweaks (T3, T4, T5). It is important to note that this decision is provided as an example, and Bitcoin node operators with varying preferences may find other combinations more suitable.

#### Location-Based Customization of RAP
When implementing the RAP defense (§4), a Bitcoin node operator must decide how strictly to enforce the RAP policy. The threshold τ (1 ≤ τ ≤ 10) controls this: a low τ value enforces strict peer connections, allowing a small number (or zero if τ = 1) of common intermediate ASes, while a high τ value allows many peer connections to share the same AS on their paths.

Choosing the appropriate τ value is not straightforward. A lower τ value is expected to provide a more effective defense, but our experiments show that the proper threshold selection is non-trivial.

#### Effect of Different τ Values
To understand how different τ values affect RAP effectiveness, we extended our experiment in Section 5.2 to evaluate RAP with all values of τ (i.e., 1 ≤ τ ≤ 10) against Erebus attacks. Figure 12a shows the attack success rates in nearly 6,000 scenarios. The overall attack success rates do not change significantly across different τ values, and the rates even increase for τ values in the range 1 ≤ τ ≤ 3. This counterintuitive result can be explained by Figure 12b, which presents the average number of established outgoing connections of the target nodes. When τ is set to a low value, the victim nodes may avoid choosing many peers aggressively, leading to reduced connectivity. For example, with τ = 1, the victim nodes in our experiments can make only five connections on average, making it easier to hijack all of them.

#### Bitcoin Node’s Location and τ
The results in Figure 12a indicate that strict enforcement of RAP (e.g., τ = 1) yields suboptimal defense performance when averaged across all 59 target Bitcoin nodes in our evaluation. We conjecture that the defense performance of RAP may vary depending on the route diversity of a specific Bitcoin node, and thus the choice of τ should consider the node's location in the Internet topology. Some well-connected nodes may establish most of the ten outgoing connections even with a low τ value.

To explore how different locations of Bitcoin nodes affect the choice of τ, we selected three examples where the victims are located at different topological positions on the Internet (i.e., two at cloud providers, one at a university network). Figure 13 shows the attack success rates and the number of established connections for these three specific Bitcoin nodes against Erebus attacks from the top-100 large ASes. The optimal τ values that yield the lowest attack success rates are τ = 1, τ = 5, and τ = 9 for the three Bitcoin nodes, respectively. These optimal τ values coincide with the smallest τ values that ensure the victims are fully connected with all ten outgoing connections in most cases. These results confirm that the choice of τ significantly depends on the node's location in the AS topology.

#### Finding the Optimal τ
From the above experiments, we conclude that it is desirable to choose the minimum possible τ value that ensures all ten outgoing connections are established. To simplify this, we define the desired lower-bound for available IPs, κ, set by each Bitcoin node operator. Algorithm 1 outlines an efficient computation for selecting an optimal τ value for RAP, given the topology of a Bitcoin node and its operator’s desired κ value.

At a high level, we test all τ values and consider the lowest threshold that satisfies κ as optimal. A threshold τ is said to satisfy κ if the IP availability for the last connection in the worst connectivity scenario (i.e., the lowest IP availability possible) is still sufficient. We construct the worst-case scenario based on two intuitions. First, we group all available IPs based on the first-hop AS on the paths from the victim node to them, ensuring that at most τ IPs can be chosen from each group during connection establishments. Second, to minimize the IP availability for the last connection, we prefer larger groups when establishing the other connections because all but τ IPs from those groups will become unavailable.

In Algorithm 1, we start with setting τ = 1 for RAP (Line 3) and establish nine connections while preferring peers from bigger IP groups (Lines 7–16). We then check if the availability of IPs for the tenth connection satisfies κ (Lines 17–20). If it does, the current τ value is optimal. Otherwise, we repeat the process with a higher τ value until the constraint regarding κ is satisfied.

This approach ensures that the chosen τ value is optimal for the specific topological and operational context of the Bitcoin node.