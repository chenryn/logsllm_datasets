# 07｜快速读写文件：如何实现跨文件的字数统计？你好，我是尹会生。这节课，我们来学习下统计多个文件字数的方法。之前我在出版图书的时候，每个章节都写入了一个单独的 Word中，这就导致我无法使用 Word自带的字数统计功能，一次性统计所有章节的字数，自然也就不能分别统计多文件的汉字、英语和标点符号的字数了。如果你在工作中也遇到过类似的情况，需要一次性统计大量的文本文件的字数，应该怎么解决呢?今天我就来教你，**怎样使用 Python来批量统计多个文件的字数和标点符号。**首先呢，我们先学习一下简单的操作：统计单个文件的字数。掌握了 Python统计字数的基本操作，批量统计也就不在话下了。怎样实现单个文件字数统计统计单个文件的字数，需要用到 Python的文件读写函数和变量这两个功能。Python的读写函数是对文件内容的读取操作，变量呢，用来存储统计好的文件字数。我把统计单个文件字数的操作分为三个步骤，分别为：1.       先把要统计的文件读入内存；        2.       再对读入到内存的字数数量进行统计，并用变量保存；        3.       最后是将结果写入统计字数的专用文件中。        我先来带你学习一下用 Python读取文件需要使用哪些函数和语法。1. 把文件内容读取到内存中Python实现读取文件内容到内存的函数有三个，这三个函数原理相同，但是读取的内容多少有些不同，分别为：1.  read()    ，逐个字符读取，一直读取到文件全部内容结束；        2.  readline()，读取一行内容；        3.  readlines()，读取多行内容。        对于统计单个文件字数的需求，选择哪个读取函数更合适呢？由于统计字数需要逐个字读取再对字数进行累加，因此，我使用read()函数将文件中所有的文字读入到内存中，相比按行读取，实现起来更加简单。将文件内容读入变量后，变量中的文字内容和保存在文件中的文字内容相同，接下来我再通过统计字数的函数对变量进行统计，就能统计出一个文件里的文字有多少字数了。具体如何实现呢？我给你举一个例子。例如，我这里有一个需要统计字数的文件e.txt，它的内容为：    e约等于2.718281828核心实现代码如下：    import pathlib     file_name = "e.txt"    
# 取得脚本所在目录    current_path = pathlib.PurePath(__file__).parent    
# 和脚本同目录下的文件绝对路径    file = current_path.joinpath(file_name)    
# 打开文件    with open(file, encoding='utf-8') as f:          