# 服务级别目标的艺术与科学
Theo Schlossnagle, Circonus
  如果没有人同意期望，你就无法达到或超过预期。在每项工作中，必须了解自己的目标，以衡量到底何为成功。在本章中，我们将了解
SRE 设定目标时的样子。
# 为什么要设定目标？
 SRE 的主要目标是保持系统的可靠性。服务级别目标（SLO）是 SRE
用来确定此目标成功与否的主要机制。我相信，你可以看出，如果不明确界定什么是"好"，就很难"做好你的工作"。SLO
提供了我们用来定义什么是"好"的语言。
 你可能更熟悉服务级别协议 （SLA），因此让我们从开始。SLA
被一些人认为是黑暗深渊，另一些人则认为是救赎之光。为什么有这么大的差距？我相信这是因为它们是如何定义的。其定义方式使生产者和消费者能够设定期望值，当然它们也可能是让人绝望的虚假保证或使某人面临危险财务责任的工具。让我们不要在黑暗面花太多时间。
通常，我们更愿意使用 SLO 一词。就这一章而言，SLA
只是获得两个或多个当事方"同意"的 SLO。SLO 和 SLA
在这里可自由换用，但我们努力将 SLA 视为"外部"多方协议，并将 SLO
视为"内部"单方目标。
尽管 SLA
的概念相当通用，并且只是清楚地概述了如何向消费者交付服务（至少在计算领域如此），它们往往侧重于两个特定标准：可用性和 服务质量（QoS）。现在，QoS
可以而且应该根据服务类型的含义不同。请注意，*生产者*和*消费者*最终分别指*业务*和*客户*，但通常情况下，当我们在体系结构中定义组件之间的
SLO
时，它可能意味着*生成组件*和*消耗组件*。生产组件的例子包括网络可访问的块存储系统和授权微服务
API；每个服务都有许多不同的客户，并承诺向其他服务提供可用性、性能，有时甚至是安全性。
SLA，实际上很简单，它的目标在于提供保证，让用户放心地使用你的服务来规避供应方的风险，而不必过度承诺来吸引客户。虽然这个概念很简单，但需要艺术性的做出抉择，看看承诺什么，并科学的量化承诺的细节，且不要过度追求细节而扰乱自己的心态。
在 SLA
中，你总是会按照时间跨度做出承诺。这个时间通常是月度，有时是每天的。承诺的时间段往往与你的标准计费周期保持一致，但肯定要与你的退款政策完全匹配。最后一部分很重要。如果你在一天内承诺了某件事，但未能兑现，你很可能会为当天的服务退款来回报这一承诺。若这个承诺是一个月时，其影响就肯定更大了。
显然，许多 SLA
会使用多个时间跨度来达到受关注程度和保证服务之间的平衡。例如，如果 SLA
在给定一天内被违反 1 分钟，则该日服务需要退款，如果 SLA 在给定月份中违反
1 小时，则该月的整个帐单将豁免。我不会再谈论 SLA
违反导致的退款后果，而是专注于违规本身。若你关心如何选择对一个无法达成的承诺进行补偿，这本书不能帮你更多，只能祝你好运。
 这里的要点是，SLA
只有在固定时间跨度（术语称为*保证窗口*）中考虑时才有意义。根据目前服务的发展趋势，以及主要服务提供商如何披露其服务中断（SLA
违规的简化术语），这里我们往往以日为时间跨度。如果该窗口不同，可以应用此处的所有概念，但在更改该保证窗口时应该进行数学计算并了解你的受关注情况。
现在，让我们在目前的大环境中（而不是抽象的）来看待这个问题。我会在 QoS
之前讨论可用性问题，因为这更容易说明。
# 可用性
  可用性只是意味着你的服务可供使用。它只在最基本的意义上起作用，并不意味着消费者在使用时肯定能得到他们期望的答案。我将举几个可用性的例子来说明这一点。
如果你通过快递公司发送包裹，只要司机来拿起你的包裹，并且送到目的地，就可以认为可用。司机取包括可能迟到，因此包裹里的东西可能会暴露在极端温度下，从而被损坏，并且它可能会在三周后送到，而不是按要求两天内送到。这样的服务是可用的，但完全不满意。想象一下相反的保证：每次发货时，你的包裹都会按时准备好，但快递公司却不能接收包裹。现在我们有完美的
QoS，但完全不满意的体验，因为它是不可用的。
计算系统中的可用性似乎很容易量化，但测量可用性的方法有很多种，如果衡量方法不正确，您要么导致很差的评价，要么实际上没有向消费者承诺做出任何信息。后者听起来可能很棒，但你肯定会有后悔的那一天：更高的标准导致成功，因为消费者是聪明的。
测量可用性的最常见方法包括时间计量或计数失败。经典的 SLA 语言"99.9%
的停机时间"可以放入这些术语中。
## 时间计量
  时间计量的想法是把你的保证窗口（一天）并将其分成许多段。
如果我们选择分钟，那么当天我们最终会得到 1440
个时间段（除非夏令时开始或结束的日子，因为那天会多一个小时或少一个小时）。
在每个时间计量单位中，你可以测量失败。如果检测到任何故障，则特定时间量程被标记为错误。在一天结束时，你的可用性只是无标记（良好）时间单位占整个时间单位数的比例：1439/1440
= 99.930% 或 1438/1440 = 99.861%。因此，在 99.9%
的停机时间保证下，可以在这一天停机 1 分钟，但 2 分钟的停顿会搞砸了你的
SLA。
这似乎很简单，但它有一些缺陷，可能会不必要地招致关注，或无法向您的消费者提供可接受的保证（或两者兼而有之）。我将使用
API 服务来阐明这一点。假设我们有一个运费计算器的 API
服务，该服务接受包裹重量、来源和目标邮政编码并提供价格。
如果我们每天接受1亿次查询，那将平均达到每分钟近 7
万次计算。如果我们每分钟有一次计算失败，那么每个 SLA
的计量单位都有失败，会算出 100% 的停顿时间。但是要知道，在 1
亿笔交易中，我们仅失败了 1440 个，实际成功率为 99.998%。所以说我们 100%
服务停顿是不公平的！
另一方面，如果某个用户在安排所有包裹计费时，选择在上午 10 点到 10:30
之间使用该计算服务，而 10:20 到 10:21
的所有计算恰好都失败了（但仍然满足我们的
SLA）。从客户的角度来看，这是双重糟糕的。首先，我们达到了认定的
SLA，但让更多的用户失望（3333333 次失败的交易，而不是 1440
次），另外对于那个特定用户来说，30
分钟的使用时间中就有一分钟可感知问题的时间，因此我们的服务可用率仅为
96.666%。
如果你的使用量全天均匀分布，则此方法可以工作且易于理解。但大多数服务在一天内没有均匀的事务分布，因此虽然这样的
SLA 因为统计方法的简洁非常容易实施，但此方法的缺陷太大，无法使用。
## 交易
  另一种常见方法是使用原始事务计数。在我们的保证时间窗口中，只需要计算所有尝试的事务和成功执行的事务数。在许多方面，这为客户提供了更强有力的保证，因为这个指标更清楚地表明了他们应该期望的服务可用性。
在前面的示例中，如果我们有 1 亿次交易，并且有 99.9%
的在线时间保证，则在不破坏 SLA 的情况下，我们的服务可以忍受 100000
次交易失败。请记住，这听起来可能很多，但以每分钟 70000
次的交易速度，这相当于导致 SLA 允许的连续 2
分钟服务中断。最大的优势应该是明显的；它允许我们在保证整体服务质量的过程中包容那些影响极少数用户的交易异常，而不至于违反
SLA（双方的最佳利益）。
一个重要的挑战是，它要求你能够测量尝试的事务。在网络领域，这是不可能的：如果数据包不送到，我们怎么知道他们曾经被发送过？关于在线服务，它们依赖于易于出现故障的网络连接。这意味着我们不可能实际测量尝试的交易。因此，尽管这显然是一个优雅的解决方案，但它允许生产者有太多的理由为自己辩解，因此无法向消费者提供强有力的保证。我们如何解决这个问题？
## 时间跨度的交易统计
 最好的结合互补了伴侣的长处，弥补了他们的弱点。前两种办法的结合尤其美满。我喜欢称之为"量子的数量"，只是因为它听起来很吸引人。
通过将时间量重新引入事务分析，我们对事物个词的真正意义进行补充。事务量化有个致命缺陷，即如果"系统已崩溃"，导致尝试的交易甚至无法计数，这时我们可以将相应的时段标记为失败来进行弥补。这样做有效的补足了事务统计方法的致命缺陷。另一方面，事务方法的优雅性得到保留：在整个保证窗口中允许微不足道的故障，只会导致有效性降低（其精度取决于保证窗口中的时间量）。
现在，在前面的每天 1 亿个事务示例中，我们不只是每日最多允许 100000
次失败，现在我们还有一个额外的约束：每分钟不能超过 69
个事务失败（假设我们保留 99.9% 以应用于时间量交易保证）。
此 SLA 的表述如下：
> 该服务接受每天 99.9% 的分钟数（1440 分钟的 1439
> 分钟）可用。可用性是每分钟测量的，并且通过至少为 99.9%
> 的事务提供服务来实现。如果系统故障（在我们的控制范围内）导致无法测量尝试的事务，则那一分钟被视为不可用。
所有这一切只是一种权衡，这也是 SLA 的艺术。虽然实现此 SLA
比较困难，但当未能达到这个标准时，可以做出诸如"我们违规 8
分钟"之类的声明，而不是"我们周三违反了
SLA"。把一整天标为失败，这对生意不好，对士气也有害。SLA
在激发消费者信心方面做了许多工作，但不要忘记，它们也有助于激励员工提供出色的服务。
多年来，我们已经确定"离线"并不意味着"不可用"。"速度问题才是真问题"的说法是非常恰当的。大多数好的
SLA
现在认为服务响应时间低于阈值是"违反"约定的。前面讨论的所有方法仍然适用，但需要第二个参数来指示何为"太慢"。  
# 关于评估 SLO
 改善任何事情的第一个，也是最重要的规则是，你不能改进你无法衡量的东西；因为你不能表明你已经改进了它。
我们已经讨论了如何设计 SLO 的前提。我个人属于 SLO