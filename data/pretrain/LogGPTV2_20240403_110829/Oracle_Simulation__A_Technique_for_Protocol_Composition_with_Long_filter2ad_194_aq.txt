We then deﬁne v(cid:48)
m
and θ(cid:48)
m
82
We deﬁne Ov,ρA
O
such that Ov,ρA
O = O(πn(ρs, η), ρA
Pρs,ρr1 ,ρr2 ,ρO{u1
[[n]]η
m = y, [[n]]η
m+1 = ym+1| θ1
m+1 = x, φ1
=1 Pρs,ρr1 ,ρr2 ,ρO{AO
O (Mf , ρr1, x, η) = ym+1| θ1
v,ρA
O = rB, ρr2 = r2}
ρs = v, ρB
=2 Pρs,ρr1 ,ρr2 ,ρO{AO
O (Mf , ρr1, θ1(cid:48)
v,ρA
O = rB, ρr2 = r2}
ρs = v, ρB
=3 Pρs,ρr1 ,ρr2 ,ρO{AO
O (Mf , ρr1, θ1(cid:48)
v,ρA
×(Pρs,ρr1 ,ρr2 ,ρO{θ1
m+1 = x, φ1
[[n]]η
O) when [[n]]η
ρs = v, ρB
ρs = v. We then have:
O = rB, ρr2 = r2}
m+1 = x, φ1
m = y,
m+1 = x, φ1
×(Pρs,ρr1 ,ρr2 ,ρO{θ2
×(Pρs,ρr1 ,ρr2 ,ρO{θ1
×Pρs,ρr1 ,ρr2 ,ρO{ρB
=4 Pρs,ρr1 ,ρr2 ,ρO{OP (ρs, θ2(cid:48)
×Pρs,ρr1 ,ρr2 ,ρO{ρB
=5 Pρs,ρr1 ,ρr2 ,ρO{OP (ρs, θ2(cid:48)
×Pρs,ρr1 ,ρr2 ,ρO{ρB
=6 Pρs,ρr1 ,ρr2 ,ρO{OP (ρs, θ2(cid:48)
O = rB, ρr2 = r2}
ρB
=7 Pρs,ρr1 ,ρr2 ,ρO{OP (ρs, x) = ym+1| θ2
O = rB, ρr2 = r2}
ρB
=8 Pρs,ρr1 ,ρr2 ,ρO{u2
O = rB, ρr2 = r2}
ρB
m+1 = ym+1| θ2
m+1 = x, φ2
m+1, η) = ym+1| θ1
m+1, η) = ym+1| [[n]]η
m = y| [[n]]η
O = rB, ρr2 = r2| [[n]]η
ρs = v})−1
m+1) = ym+1| [[n]]η
m = y,| [[n]]η
O = rB, ρr2 = r2| [[n]]η
m+1) = ym+1| [[n]]η
m = y,| [[n]]η
O = rB, ρr2 = r2| [[n]]η
m+1) = ym+1| θ2
ρs = v, ρB
ρs = v}
ρs = v, ρB
ρs = v}
ρs = v, ρB
ρs = v})−1
ρs = v})−1
m+1 = x, φ2
m = y,
m+1 = x, φ1
ρs = v}
O = rB, ρr2 = r2}
O = rB, ρr2 = r2}
O = rB, ρr2 = r2}
m = y, [[n]]η
ρs = v,
m+1 = x, φ2
m = y, [[n]]η
ρs = v,
m+1 = x, φ2
m = y, [[n]]η
ρs = v,
Justiﬁed with:
1. using the conditional probabilities;
2. by deﬁnition of B which produces x under the conditional events;
3. using conditional probabilities, as θm (cid:54)= x ∨ φm (cid:54)= y ⇒ B = ⊥;
4. by O simulatability on B;
5. using (i);
6. using conditional probabilities, as θm (cid:54)= x ∨ φm (cid:54)= y ⇒ B = ⊥;
7. by deﬁnition of B which produces x under the conditional events;
8. using the conditional probabilities.
Combining the previous equality with equation (i) ﬁnally yields through conditional prob-
abilities:
Pρs,ρr1 ,ρr2 ,ρO{θ1
m+1 = x, φ1
= Pρs,ρr1 ,ρr2 ,ρO{θ2
m+1 = y| [[n]]η
m+1 = x, φ2
ρs = v, ρB
m+1 = y| [[n]]η
O = rB, ρr2 = r2}
ρs = v, ρB
O = rB, ρr2 = r2}
83
F.4 Autocomposition Results
Proposition 18. Let O be an oracle, two parameterized processes P (x), Q(x), a set of names
n = Ng(P, Q) and fresh names k0, l. We assume that Nl(P, Q) is disjoint of the support of O.
If:
• νn.in(cP , x); P (x)(cid:107)in(cQ, x); Q(x) is O-simulatable, and
• P (k0); out(cP , x)(cid:107)Q(k0); out(cQ, x) ∼=O P (k0); out(cP , l)(cid:107)Q(k0); out(cQ, l)
then, for any N,
P (k0); P (x);N ; out(cP , x)(cid:107)Q(k0); Q(x);N ; out(cQ, x)
∼=O P (k0); P (x);N ; out(cP , l)(cid:107)Q(k0); Q(x);N ; out(cQ, l)
Proof. We proceed by induction on N. The result is exactly the ﬁrst hypothesis for N = 0.
Given some N > 1, we assume that
P (ki);N−1; out(k)(cid:107)Q(ki);N−1; out(k) ∼=O P (ki);N−1; out(l)|Q(ki);N−1; out(l)
(i)
In the following, we will write P (ki);N−1 for P (ki); P (k);N−2 and we will omit to mention
the α-renaming made over the local names in Nl(P, Q) between the diﬀerent copies of P and Q.
The renaming is however essential so that we may for instance have Nl(P N−1(k))∩Nl(P ) = ∅
when we wish to apply Theorem 4. This silent renaming is possible because Nl(P, Q) is not
contained in the support of O.
We obtain by application of Theorem 4 with A = P (ki);N−1, B = Q(ki);N−1, P1(x) :=
P (x);0; out(k) and P2(x) := Q(x);0; out(k):
P ;N (ki); out(k)(cid:107)Q;N (ki); out(k) ∼=O P ;N−1(ki); P (l);0; out(k)(cid:107)Q;N−1(ki); Q(l);0; out(k)
Now, with Theorem 2 applied on P (l);0; out(k)(cid:107)Q(l);0; out(k) ∼=O P (l);0; out(l(cid:48))(cid:107)Q(l);0; out(l(cid:48))
with l(cid:48) a fresh name, with P := P (ki);N−1 and Q := Q(ki);N−1, we obtain:
(I)
P (ki);N−1; P (l);0; out(k)(cid:107)Q;N−1(ki); Q(l); out(k) ∼=O P (ki);N−1; P (l);0; out(l(cid:48))(cid:107)Q(ki);N−1; Q(l);0; out(l(cid:48))
(II)
We also perform an application of Theorem 4 on (i) with A = P (ki);N−1, B = Q(ki);N−1,
P1(k) := P (ki);0; out(l) and P2(k) := Q(ki);0; out(l) :
P (ki);N−1; P (l);0; out(l(cid:48))|Q(ki);N−1; P (l);0; out(l(cid:48)) ∼=O P (ki);N ; out(l)(cid:107)Q(ki);N ; out(l)
(III)
We conclude by transitivity with (I),(II) and (III).
Simulatability is stable by binding names that do not appear in the protocol, which means
that we will be able simulate at the same times two simulatable protocol who do not share
long term secret.
Lemma 37. Given a cryptographic library Mf , a sequence of names n, an oracle O with
support n and a sequence of terms t, if νn.t is O-simulatable , then for any sequence of names
m such that m ∩ N (t1, . . . , tn) = ∅, νn ∪ m.t is O-simulatable.
84
Proof. Let there be a cryptographic library Mf , a sequence of names n, an oracle O with
support n and a sequence of terms t O-simulatable. As the names of m do not appear in t,
the probability of any event regarding t is independent from an event regarding m so we have
for any PTOM AO, η, sequences c, v, w ∈ {0, 1}∗,
Pρs,ρr1 ,ρr2 ,ρO{AO(ρs,ρO)(Mf , m1, . . . , mk, ρr2, η) = c | [[n]]η
Pρs,ρr1 ,ρr2 ,ρO{AO(ρs,ρO)(Mf , m1, . . . , mk, ρr2, η) = c | [[n]]η
= Pρs,ρr,ρO{[[t1, . . . , tn]]η
= Pρs,ρr,ρO{[[t1, . . . , tn]]η
ρs,ρr,ρO = c|[[n]]η
ρs,ρr,ρO = c|[[n]]η
ρs = v}
ρs = v, [[m]]η
ρs = w}
ρs = v, [[m]]η
ρs = v}
ρs = w}
Thus νn ∪ m.t is O-simulatable.
Proposition 17. Let Or be an oracle parameterized by a sequence of names s, and O an
oracle. Let p be a sequence of names, P (x), R1
i (x, y) and Q(x) be protocols,
such that Nl(R1
i ) is disjoint of the oracle support. If we have, for sequences of names
1
lsid
i , . . . , Rk
k, with s = {lsid
i (x, y), . . . , Rk
, . . . , lsid
i}1≤j≤k,i∈N :
j
j
i .Rj
j
i (p, lsid
1. ∀i, j ∈ N, νp, lsid
2. P (p) ∼=Or Q(p)
3. s is disjoint of the support of O.
i ) is Or-simulatable.
Then, for any integers N1, . . . , Nk:
P (p)(cid:107)i≤N1(R1
1
i (p, lsid
i )(cid:107) . . .(cid:107)i≤Nk Rk
∼=O,Or Q(p)(cid:107)i≤N1R1
1
i (p, lsid
k
i )
i (p, lsid
i )(cid:107) . . .(cid:107)i≤Nk Rk
k
i (p, lsid
i )
Speciﬁcally, there exists a polynomial pS (independent of all Rj) such that if pRj is the
polynomial bound on the runtime of the simulator for Rj, we have,
AdvP (p)(cid:107)i≤N1 (R1
≤ AdvP (p)∼=O,Or Q(p)(cid:16)
i (p,lsid
(cid:0)t, N1,|R1|, . . . , Nk,|Rk|, pR1(t), . . . , pRk (t)(cid:1)(cid:17)
i )∼=OQ(p)(cid:107)i≤N1 R1
i )(cid:107)...(cid:107)i≤Nk Rk
i (p,lsid
i (p,lsid
i (p,lsid
k
1
pS
1
i )(cid:107)...(cid:107)i≤Nk Rk
k
i )(t)
Rather than proving the previous Theorem, where we recall that the protocols may depend
on a predicate T (x) whose interpretation depends on s, we prove the version where P directly
depends on s.
Proposition 38. Let Or be an oracle parameterized by a sequence of names s. Let p be
a sequence of names, P (x), R1
i (x, y, z) and Q(x, y) be protocols, such that
Nl(R1
i , . . . , Rk
with s = {lsid
i ) is disjoint of the oracle support. If we have, for sequences of names lsid
i}i,j∈N :
1. ∀i, j ∈ N, νp, lsid
2. P (p) ∼=O Q(p, s)
i , s) is Or-simulatable.
i (x, y, z), . . . , Rk
j
i (p, lsid
i .Rj
1
j
j
, . . . , lsid
k,
85
Then, for any integers N1, . . . , Nk:
P (p)(cid:107)i≤N1(R1
1
i (p, lsid
i , s)(cid:107) . . .(cid:107)i≤Nk Rk
∼=Or Q(p, s)(cid:107)i≤N1R1
1
i (p, lsid
k
i , s)
i (p, lsid
i , s)(cid:107) . . .(cid:107)i≤Nk Rk
k
i (p, lsid
i , s)
Speciﬁcally, there exists polynomial pS (independent of all Rj)such that if pRj is the poly-
nomial bound on the runtime of the simulator for Rj, we have,
AdvP (p)(cid:107)i≤N1 (R1
≤ AdvP (p)∼=OQ(p,s)(cid:16)
1
i (p,lsid
i ,s)(cid:107)...(cid:107)i≤Nk Rk
k
i (p,lsid
(cid:0)t, N1,|R1|, . . . , Nk,|Rk|, pR1(t), . . . , pRk (t)(cid:1)(cid:17)
i ,s)∼=Or Q(p,s)(cid:107)i≤N1 R1
i ,s)(cid:107)...(cid:107)i≤Nk Rk
1
i (p,lsid
pS
k
i (p,lsid
i ,s)(t)
simulatable.
Proof. We prove the result for k = 1, denoting R1 as R, as the generalization is immediate.
Let there be an integer n.
Hypothesis 1 with Lemma 37 gives us that for 1 ≤ i ≤ N, νlsidi, p.Ri(p, lsidi, s) is OR-
Moreover, with δ = {p, s}, N (Ri(p, lsidi, s)) ∩ δ = {p, lsidi}, so thanks to Theorem 1, for
1 ≤ i ≤ N, νδ.R(p, lsidi, s) is OR-simulatable.
Now, up to renaming of the local names of R (which is possible as they do not appear in
the oracle support), we have that ∀1 ≤ i < j ≤ N.N (Ri(p, lsidi, s)) ∩ N (Rj(p, lsidj, s)) ⊂ δ,
so with Theorem 1 we have that (cid:107)i≤N Ri(p, lsidi, s) is OR-simulatable.
Note that if R is simulatable by a simulator bounded by a polynomial pR(t) on an input
of size t, then (cid:107)i ≤ N R(p, lsidi, s) is simulatable by a simulator bounded by a polynomial
q(n, pR(t)), where q is uniform in n and R.
Finally, we have that (cid:107)i≤N Ri(p, lsidi, s) is OR-simulatable and P (p, lsidn) ∼=O Q(p, s), so
Instantiating the bound on the advantage from Theorem 2 with |C| = n|R| and pC(t) =
we conclude with Theorem 2.
q(n, pR(t)) yields the desired result.
Theorem 5. Let Or, O be oracles both parameterized by a sequence of names s. Let p be
a sequence of names, Pi(x, y) and Qi(x, y) be parameterized protocols, such that Nl(P, Q) is
Q, with s =
disjoint of the oracles support.
{lsid
P
If we have, for sequences of names lsid
, lsid
P
i , lsid
Q
i }i∈N:
P
P
i .Pi(p, lsid
Q
i .Qi(p, lsid
1. ∀ i ≥ 1, νp, lsid