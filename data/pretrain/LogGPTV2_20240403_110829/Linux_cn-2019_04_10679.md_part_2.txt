```
from PIL import Image,ImageFilter
#Read image
im = Image.open('image.jpg')
#Display image
im.show()
from PIL import ImageEnhance
enh = ImageEnhance.Contrast(im)
enh.enhance(1.8).show("30% more contrast")
```
![Enhancing an image in Pillow using ImageFilter](/data/attachment/album/201904/03/113911l2klvtypay0vxtlv.png "Enhancing an image in Pillow using ImageFilter")
* [源码](http://sipi.usc.edu/database/)
### 5、OpenCV-Python
OpenCV（Open Source Computer Vision 库）是计算机视觉领域最广泛使用的库之一，[OpenCV-Python](https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_setup/py_intro/py_intro.html) 则是 OpenCV 的 Python API。OpenCV-Python 的运行速度很快，这归功于它使用 C/C++ 编写的后台代码，同时由于它使用了 Python 进行封装，因此调用和部署的难度也不大。这些优点让 OpenCV-Python 成为了计算密集型计算机视觉应用程序的一个不错的选择。
#### 资源
入门之前最好先阅读 [OpenCV2-Python-Guide](https://github.com/abidrahmank/OpenCV2-Python-Tutorials) 这份文档。
#### 示例
使用 OpenCV-Python 中的 金字塔融合   Pyramid Blending 将苹果和橘子融合到一起：
![Image blending using Pyramids in OpenCV-Python](/data/attachment/album/201904/03/113912jz8qw8rp6wtzzefp.jpg "Image blending using Pyramids in OpenCV-Python")
* [源码](https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_pyramids/py_pyramids.html#pyramids)
### 6、SimpleCV
[SimpleCV](http://simplecv.org/) 是一个开源的计算机视觉框架。它支持包括 OpenCV 在内的一些高性能计算机视觉库，同时不需要去了解 位深度   bit depth 、文件格式、 色彩空间   color space 之类的概念，因此 SimpleCV 的学习曲线要比 OpenCV 平缓得多，正如它的口号所说，“将计算机视觉变得更简单”。SimpleCV 的优点还有：
* 即使是刚刚接触计算机视觉的程序员也可以通过 SimpleCV 来实现一些简易的计算机视觉测试
* 录像、视频文件、图像、视频流都在支持范围内
#### 资源
[官方文档](http://examples.simplecv.org/en/latest/)简单易懂，同时也附有大量的学习用例。
#### 示例
![SimpleCV](/data/attachment/album/201904/03/113914m8mg2208kknztmmf.png "SimpleCV")
### 7、Mahotas
[Mahotas](https://mahotas.readthedocs.io/en/latest/) 是另一个 Python 图像处理和计算机视觉库。在图像处理方面，它支持滤波和形态学相关的操作；在计算机视觉方面，它也支持 特征计算   feature computation 、 兴趣点检测   interest point detection 、 局部描述符   local descriptors 等功能。Mahotas 的接口使用了 Python 进行编写，因此适合快速开发，而算法使用 C++ 实现，并针对速度进行了优化。Mahotas 尽可能做到代码量少和依赖项少，因此它的运算速度非常快。可以参考[官方文档](https://openresearchsoftware.metajnl.com/articles/10.5334/jors.ac/)了解更多详细信息。
#### 资源
[文档](https://mahotas.readthedocs.io/en/latest/install.html)包含了安装介绍、示例以及一些 Mahotas 的入门教程。
#### 示例
Mahotas 力求使用少量的代码来实现功能。例如这个 [Finding Wally](https://blog.clarifai.com/wheres-waldo-using-machine-learning-to-find-all-the-waldos) 游戏：
![Finding Wally problem in Mahotas](/data/attachment/album/201904/03/113915bo76fif7ob1ygy9o.png "Finding Wally problem in Mahotas")
![Finding Wally problem in Mahotas](/data/attachment/album/201904/03/113916evwafw4hvwhq8rqb.png "Finding Wally problem in Mahotas")
* [源码](https://mahotas.readthedocs.io/en/latest/wally.html)
### 8、SimpleITK
[ITK](https://itk.org/)（Insight Segmentation and Registration Toolkit）是一个为开发者提供普适性图像分析功能的开源、跨平台工具套件，[SimpleITK](http://www.simpleitk.org/) 则是基于 ITK 构建出来的一个简化层，旨在促进 ITK 在快速原型设计、教育、解释语言中的应用。SimpleITK 作为一个图像分析工具包，它也带有[大量的组件](https://itk.org/ITK/resources/resources.html)，可以支持常规的滤波、图像分割、 图像配准   registration 功能。尽管 SimpleITK 使用 C++ 编写，但它也支持包括 Python 在内的大部分编程语言。
#### 资源
有很多 [Jupyter Notebooks](http://insightsoftwareconsortium.github.io/SimpleITK-Notebooks/) 用例可以展示 SimpleITK 在教育和科研领域中的应用，通过这些用例可以看到如何使用 Python 和 R 利用 SimpleITK 来实现交互式图像分析。
#### 示例
使用 Python + SimpleITK 实现的 CT/MR 图像配准过程：
![SimpleITK animation](/data/attachment/album/201904/03/113931lfirzfq3z7eqypq3.gif "SimpleITK animation")
* [源码](https://github.com/InsightSoftwareConsortium/SimpleITK-Notebooks/blob/master/Utilities/intro_animation.py)
### 9、pgmagick
[pgmagick](https://pypi.org/project/pgmagick/) 是使用 Python 封装的 GraphicsMagick 库。[GraphicsMagick](http://www.graphicsmagick.org/) 通常被认为是图像处理界的瑞士军刀，因为它强大而又高效的工具包支持对多达 88 种主流格式图像文件的读写操作，包括 DPX、GIF、JPEG、JPEG-2000、PNG、PDF、PNM、TIFF 等等。
#### 资源
pgmagick 的 [GitHub 仓库](https://github.com/hhatto/pgmagick)中有相关的安装说明、依赖列表，以及详细的[使用指引](https://pgmagick.readthedocs.io/en/latest/)。
#### 示例
图像缩放：
![Image scaling in pgmagick](/data/attachment/album/201904/03/113932lavabuxxnvud84uv.png "Image scaling in pgmagick")
* [源码](https://pgmagick.readthedocs.io/en/latest/cookbook.html#scaling-a-jpeg-image)
边缘提取：
![Edge extraction in pgmagick](/data/attachment/album/201904/03/113933mroouhu2fnrfxx00.png "Edge extraction in pgmagick")
* [源码](https://pgmagick.readthedocs.io/en/latest/cookbook.html#edge-extraction)
### 10、Pycairo
[Cairo](https://cairographics.org/) 是一个用于绘制矢量图的二维图形库，而 [Pycairo](https://pypi.org/project/pycairo/) 是用于 Cairo 的一组 Python 绑定。矢量图的优点在于做大小缩放的过程中不会丢失图像的清晰度。使用 Pycairo 可以在 Python 中调用 Cairo 的相关命令。
#### 资源
Pycairo 的 [GitHub 仓库](https://github.com/pygobject/pycairo)提供了关于安装和使用的详细说明，以及一份简要介绍 Pycairo 的[入门指南](https://pycairo.readthedocs.io/en/latest/tutorial.html)。
#### 示例
使用 Pycairo 绘制线段、基本图形、 径向渐变   radial gradients ：
![Pycairo](/data/attachment/album/201904/03/113934to6waz70p67i7u6u.png "Pycairo")
* [源码](http://zetcode.com/gfx/pycairo/basicdrawing/)
### 总结
以上就是 Python 中的一些有用的图像处理库，无论你有没有听说过、有没有使用过，都值得试用一下并了解它们。
---
via: 
作者：[Parul Pandey](https://opensource.com/users/parul-pandey) 选题：[lujun9972](https://github.com/lujun9972) 译者：[HankChow](https://github.com/HankChow) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出