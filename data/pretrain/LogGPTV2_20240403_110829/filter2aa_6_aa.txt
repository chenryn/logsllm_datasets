目 录
版权信息
作者简介
封面介绍
版权声明
内容提要
译者简介
要感谢的人：
对本书的赞誉
前言
阅前须知
本书读者对象
未涵盖内容
本书结构
本书使用的JavaScript版本
阅前建议
本书的四部分内容
JavaScript命令行
符号说明
快速查询文档
Safari® Books Online
联系我们
致谢
审稿人
第1部分 JavaScript快速上手
第1章 基础JavaScript
1.1 背景
1.1.1 JavaScript与ECMAScript
1.1.2 JavaScript的影响和本质
1.2 语法
1.2.1 语法概述
1.2.2 语句和表达式
1.2.3 分号
1.2.4 注释
1.3 变量和赋值
1.3.1 赋值
1.3.2 复合赋值运算符
1.3.3 标识符与变量名
1.4 值
1.4.1 原始值和对象
1.4.2 原始值
1.4.3 对象
1.4.4 undefined和null
1.4.5 使用typeof和instanceof对值分类
1.5 布尔值
1.5.1 真值与假值
1.5.2 二元逻辑运算符
1.5.3 等式运算符
1.6 数字
1.7 运算符
1.8 字符串
1.8.1 字符串运算符
1.8.2 字符串方法
1.9 语句
1.9.1 条件语句
1.9.2 循环语句
1.10 函数
1.10.1 函数声明的提升特性
1.10.2 特殊的变量arguments
1.10.3 参数太多或太少
1.10.4 可选参数
1.10.5 强制参数长度
1.10.6 将arguments转换为数组
1.11 异常捕获
1.12 严格模式
1.13 变量作用域和闭包
1.13.1 变量是函数作用域的
1.13.2 变量的提升特性
1.13.3 闭包
1.13.4 IIFE模式：引入一个新的作用域
1.14 对象和构造函数
1.14.1 单一对象
1.14.2 任意属性名
1.14.3 提取方法
1.14.4 方法中的函数
1.14.5 构造函数：对象工厂
1.15 数组
1.15.1 数组字面量
1.15.2 数组方法
1.15.3 遍历数组
1.16 正则表达式
1.16.1 test()方法：匹配吗
1.16.2 exec()方法：匹配以及捕获分组
1.16.3 replace()方法：搜索和替换
1.17 Math
1.18 标准库的其他功能
第2部分 背景
第2章 为什么选择JavaScript
2.1 JavaScript可以自由使用吗
2.2 JavaScript优雅吗
2.3 JavaScript有用吗
2.3.1 图形用户界面
2.3.2 其他技术补充完善JavaScript
2.4 JavaScript有什么好用的工具吗
2.5 JavaScript是否足够快
2.6 JavaScript是广泛使用的吗
2.7 JavaScript有前途吗
2.8 结论
第3章 JavaScript的性质
3.1 古怪和非官方特性
3.2 优雅部分
3.3 影响
第4章 JavaScript是如何创造出来的
第5章 标准化：ECMAScript
第6章 JavaScript的历史里程碑
第3部分 深入JavaScript
第7章 JavaScript的语法
7.1 语法概览
7.2 注释
7.3 表达式与语句
7.3.1 表达式
7.3.2 语句
7.4 控制流语句和块
7.5 使用分号的规则
7.5.1 以块结束的语句后面没有分号
7.5.2 空语句
7.5.3 自动分号插入
7.6 合法标识符
7.7 数字字面量的方法调用
7.8 严格模式
7.8.1 启用严格模式
7.8.2 严格模式：建议与注意事项
7.8.3 严格模式中，变量必须被声明
7.8.4 严格模式下的函数
7.8.5 严格模式中，设置或者删除不可改变的属性会抛出异常
7.8.6 严格模式中的不合格标识符不能删除
7.8.7 严格模式中，eval更加简洁
7.8.8 严格模式中禁用的特性
第8章 值
8.1 JavaScript中的类型体系
8.1.1 JavaScript类型
8.1.2 静态与动态
8.1.3 静态类型与动态类型
8.1.4 静态类型检查和动态类型检查
8.1.5 强制转换
8.2 原始值和对象
8.2.1 原始值
8.2.2 对象
8.3 undefined和null
8.3.1 undefined和null的出现场景
8.3.2 检测undefined和null
8.3.3 undefined和null的历史
8.3.4 修改undefined
8.4 原始值的包装对象
8.4.1 包装对象不同于原始值
8.4.2 原始值的包装与去包装
8.4.3 原始值从包装器借调方法
8.5 强制类型转换
8.5.1 强制类型转换会隐藏bug
8.5.2 转换成布尔值、数字、字符串和对象的函数
8.5.3 算法：ToPrimitive()——将值转换为原始值
第9章 运算符
9.1 运算符和对象
9.2 赋值运算符
复合赋值运算符
9.3 等号运算符：===和==