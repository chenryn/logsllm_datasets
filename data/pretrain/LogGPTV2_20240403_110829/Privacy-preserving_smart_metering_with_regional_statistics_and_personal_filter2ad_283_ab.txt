Given a reading r (consumption rate ω) at time t, we merge
the information leakage w.r.t. “appliance ax is ON” from the
consumption rate ω and time t using their union:
I[(ω, t) → ax] =I[(ω → ax) ∪ (t → ax)]
=I[ω → ax] + I[t → ax]
(6)
− I[(ω → ax) ∩ (t → ax)]
Notice that both the consumption rate ω and time t leak
private information regarding ax’s status. Nevertheless, in our
privacy model, the joint information leakage I[(ω, t) → ax]
should be bounded in any case, and I[(ω, t) → ax] achieves its
maximum value when the two correlated information leakage
from the consumption rate ω and time t individually leak
information – two ﬁxed amounts of leakage from ω and t
have the least overlap, and thus make the joint leakage (the
union) achieve the maximum value. Then, we only need to
bound max{I[(ω, t) → ax]} in our privacy notion:
max{I[(ω, t) → ax]} =I[ω → ax] + I[t → ax]
(7)
− I[ω → ax] · I[t → ax]
where ω and t individually leak privacy w.r.t. “ax is ON”.
In summary,
the information leakage ω → ax to the
adversaries based on the observations of the consumption
rate ω is similar to the information leakage in the datasets
applied with k-anonymity [36]. Each possible combination of
the appliances in the candidate appliance set has an equal risk
to be linked to the overall consumption rate ω, and thus the
information leakage I[ω → ax] can be obtained. Furthermore,
the information leakage from the consumption time in the
reading I[t → ax] can increase the joint information leakage
of each appliance’s ON status via the union of two leakages.
the appliances are not necessarily unique in
A (e.g., multiple lights) and an appliance may have more
than one consumption rate for different running modes (e.g.,
Microwave). For the former case, we consider such appliances
as different appliances in A to calculate the candidate rate
set and the candidate appliance set. For the latter case, we
consider such appliance as a single appliance (with multiple
possible consumption rates) in A to calculate the candidate
rate set and candidate appliance set as well as measure the
information leakage.
Note that
2) Leakage in a Reading Stream
First, given a reading stream ~R, the sequential patterns [35]
of appliances in multiple readings can also help adversaries
identify the usage of appliances. A typical sequential pattern
can be stated as “if an appliance ax is ON at time t, it is likely
to be ON at time t+1, . . . , t+N ”. For instance, the information
leakage w.r.t. “dishwasher is ON” is 0.5 at 7pm, and also
0.5 at 7:05pm and 7:10pm, respectively. Since a dishwasher
typically runs for an hour (its sequential pattern) without
interruption, its information leakage may increase from 0.5 to
0.8 by correlating the information leakage in multiple readings.
Second, another type of sequential patterns result from the
correlation between the usage of multiple appliances. For
instance, if a washer runs at time t, a dryer will frequently run
at a later time; if a microwave runs at time t, a dishwasher
will be very likely to run at a later time.
Third, many appliances not only have usage patterns within
a sequence of readings (as described above), but also fre-
quently run at the same time, e.g., TV and stereo system.
In sum,
the above usage patterns (for one or multiple
appliances) could correlate information leakage from multiple
readings and appliances to pose additional privacy risks.
3) Summary of Information Leakages
As described above, adversaries may easily obtain any of
the following common background knowledge:
• The reading frequency φ.
• A list of common appliances, their consumption rates and
temporal usage patterns (e.g., TV frequently runs at 8pm,
microwave rarely runs at 3am).
• Single appliances’ sequential usage patterns (e.g., dish-
washer continuously runs for one hour).
• The usage patterns of multiple appliances (in sequence),
e.g., washer runs ﬁrst and then dryer runs.
• The usage patterns of multiple appliances (at the same
time), e.g., TV and stereo system.
Then, we formally illustrate three kinds of information
leakages based on the above background knowledge:
Information Leakage (1). For any reading r in a reading
stream h ~Rin[1], . . . , ~Rin[K]i, its consumption rate ω and time
t could leak the information of the appliances’ status (per
Equation 6, the worst case of information leakage occurs as
both ω and t individually leak information with the least
overlap). Then, adversaries can learn the status of many
appliances as ON at different times with a high I[(ω, t) → ax].
Information Leakage (2). Appliances may have sequential
usage patterns (e.g., dishwasher, and oven), which occur in
some consecutive readings in the stream. Without loss of
generality, assuming that appliance ax has a sequential pattern
to run in N consecutive readings, the information leakage w.r.t.
“ax is ON” in consecutive readings can be obtained:
• I[(ω1, t + 1) → ax]
• I[(ω2, t + 2) → ax]
• . . .
• I[(ωN , t + N ) → ax]
Then, the information leakage can be higher than any of the
above due to their correlation (correlating multiple leakage in
sequential readings).
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015
5
Information Leakage (3). Multiple appliances may frequently
run in sequence or simultaneously (e.g., washer and dryer).
Speciﬁcally, assuming that two appliances ax and ay fre-
quently run in sequence, if the following are relatively high:
• I[(ω1, t + 1) → ax]
• I[(ωN , t + N ) → ay]
Then, the information leakage w.r.t. each of ax and ay’s
status (at t + 1 and t + N , respectively) can be higher than
their original
information leakage due to their correlation
(correlating two leakages in sequential readings). Similarly, if
ax and ay frequently run simultaneously and if the following
are relatively high:
• I[(ω, t) → ax]
• I[(ω, t) → ay]
Therefore, the information leakage w.r.t. each of ax and ay’s
status at time t can be higher than their original information
leakage due to their correlation (correlating two leakages in
the same reading).
⊡
C. Privacy Notions
To prevent the information leakage illustrated in Section
III-B3, we ﬁrst deﬁne a privacy notion for quantifying and
bounding such risks in any single reading as below:
Deﬁnition 5 (ǫ-Uncertainty): Given an appliance set A, we
say a meter reading r satisﬁes ǫ-Uncertainty if ∀ax ∈ A,
I[(ω, t) → ax] ≤ ǫ holds, where ω = r
φ and t represent
the reading r’s consumption rate and consumption time re-
spectively, and 0 ≤ ǫ ≤ 1.
Thus, if any given reading r satisﬁes ǫ-Uncertainty (or say r
is ǫ-Uncertain), the information leakage of all the appliances’
ON status is no greater than ǫ. Note that ǫ-Uncertainty can
only bound the Information Leakage (1) in any single reading.
To bound the Information Leakage (2) and (3) in a reading
stream ~R = hr1, . . . , rK i (denoting the number of readings in
the stream as K), we deﬁne the following privacy model:
Deﬁnition 6 ((ǫ, δm)-Uncertainty): A reading stream ~R
satisﬁes (ǫ, δm)-Uncertainty if the following conditions hold:
1) All the readings in ~R are ǫ-Uncertain;
2) The information leakage of any appliance’s ON status
in any m consecutive readings in ~R is bounded by δ;
3) The information leakage of any combination of appli-
ances’ ON status in any m consecutive readings in ~R is
bounded by δ.
Note that meeting the three conditions would mitigate
the risks of three categories of information leakages. Two
additional privacy parameters δ and m are deﬁned: δ limits
the information leakage from any usage pattern (of single
or multiple appliances) in any m consecutive readings in
~R. Smaller ǫ or δ and larger m provides stronger privacy
protection.
D. Utility Measures
We deﬁne three different utility measures for our approach.
We ﬁrst consider the billing accuracy. In real world, besides
the standard energy plan (constant tariff), two other popular
plans are widely used (1) time-of-use (TOU) plan, and (2)
tiered base (TB) plan [2], [27], [20]. In these two plans, the
electricity tariff may vary at different times (e.g., in TOU plan,
peak vs. off-peak) or for different tiered consumption amounts
(e.g., in TB plan, < 1000 kWh/month vs. ≥ 1000 kWh/month).
Thus, the billing error rate is deﬁned as below:
Deﬁnition 7 (Billing Error Rate): Given an input reading
stream ~Rin, an equal-length output reading stream ~Rout and
a billing function f (·) of an energy plan, if ~Rout is utilized to
calculate the billed amount, the billing error rate is deﬁned as
errb =
|f ( ~Rout) − f ( ~Rin)|
f ( ~Rin)
(8)
Note that f (·) can be a constant tariff, or a function given
in the TOU or TB plan.
In addition, for some aggregation based smart grid appli-
cations [12] (e.g., regional statistics [7]), we deﬁne another
measure to quantify the utility of our output reading streams:
Deﬁnition 8 (Aggregation Error Rate): Given an input read-
ing stream ~Rin with K readings and an equal-length output
reading stream ~Rout, the aggregation error rate is deﬁned as
erra =
PK
i=1
(cid:12)(cid:12)(cid:12)
~Rout[i] − PK
i=1
PK
~Rin[i]
i=1
~Rin[i](cid:12)(cid:12)(cid:12)
(9)
where ~Rin[i] and
~Rout[i] are the ith reading in ~Rin and
~Rout, respectively.
Furthermore, since the output reading stream ~Rout might be
used to function some real-time services (e.g., load monitoring
[15]), the difference between two reading streams ~Rin and
~Rout should also be measured. Then, we deﬁne the reading
error rate to quantify such difference:
Deﬁnition 9 (Reading Error Rate): Given an input reading
stream ~Rin with K readings and an equal-length output
reading stream ~Rout, the reading error rate is deﬁned as
errr = PK
i=1 | ~Rout[i] − ~Rin[i]|
PK
i=1
~Rin[i]
(10)
where ~Rin[i] and
~Rout, respectively.
~Rout[i] are the ith reading in ~Rin and
IV. PRIVACY PRESERVING ALGORITHM
In this section, we ﬁrst derive the conditions for deciding
whether a reading is safe to stream or not in Section IV-A,
and then present our algorithms in Section IV-B and IV-C.
A. Safe Readings
Given any appliance set A, the candidate rate set can be
derived per Deﬁnition 2 as G and then we can derive:
Deﬁnition 10 (Candidate Reading Set R): A set of all the
possible readings R = {r : ∀ω ∈ G, r = ωφ}
Among all the possible readings in R, we deﬁne a safe
reading as below:
Deﬁnition 11 (Safe Reading): Given an (ǫ, δm)-Uncertain
reading stream ~R, a reading r is a safe reading, if adding
r (with a speciﬁc time t) into ~R also results in an (ǫ, δm)-
Uncertain reading stream.
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015
6
Information leakage w.r.t. appliances’ ON/OFF status results
from the reading r’s consumption rate ω, candidate rate set
c(ω) and also the consumption time t, thus r might be a
safe reading at time t but not a safe reading at time t′ (e.g.,
some appliances in c(ω) may have high information leakage
at t′ caused by the temporal usage patterns). As a result, safe
readings cannot be determined/precomputed before loading the
input reading stream with timestamps. Therefore, we develop
a privacy preserving algorithm to stream safe readings in
sequence. The basic idea is – while incrementally generating
every safe reading, the algorithm checks the new reading
and previous m − 1 readings whether (ǫ, δm)-Uncertainty is
still satisﬁed: if yes, then outputs it in the reading stream;
otherwise, iteratively checks the next reading in R.
Conditions for Safe Readings. We now explore the conditions
for generating a new safe reading in addition to an existing
reading stream. W.l.o.g., we denote m consecutive readings
as r1, . . . , rm at
time t + 1, . . . , t + m respectively and
consider rm as the new reading, and the consumption rates
∀i ∈ [1, m], ωi = ri
φ . Denoting any arbitrary appliance as ax,
the new reading rm should satisfy ǫ-Uncertainty, thus we have:
∀ax ∈ c(ωm), max{I[(ωm, t + m) → ax]} ≤ ǫ
(11)
Second, we denote the information leakage of ax’s ON
status from multiple readings in the m consecutive readings
as I[ax], which is bounded by δ. For simplicity of notations,
we denote ∀i ∈ [1, m], I[(ωi, t + i) → ax] as I1, . . . , Im.
Then, we consider the worst case that information leakages of
ax’s ON status from the m consecutive readings have the least
overlap (which leads to the highest union of the information
leakages from multiple readings), discussed as below:
• Correlating the information leakages of ax’s ON status
from multiple readings clearly increases the joint infor-
mation leakage (which is the union of multiple individual
leakages). As all the information leakages (e.g., Ii and
Ii+1) are ﬁxed, the union of them achieves the maximum
value when the individual leakages (e.g., Ii and Ii+1) are
independent to have the least overlap.
Then, we need to bound the information leakage w.r.t. “ax is
ON in multiple readings”. Speciﬁcally, since ∀i ∈ [1, m], Ii ∈
[0, 1] (normalized), the information leakage of ax’s OFF status
in all the m readings can be represented as Qm
i=1(1 − Ii), and
the information leakage w.r.t. “ax is ON in exactly one out of
i=1[Ii Qm
the m consecutive readings” is Pm
j=1;j6=i(1 − Ij)].
Thus, the maximum I[ax] can be derived and bounded as:
max{I[ax]} =1 −
m
Y
i=1
(1 − Ii) −
m
X
[Ii
m
Y
(1 − Ij)]
= 1−
m
Y
i=1
[(1 − Ii) + Ii
j=1;j6=i
(1 − Ij)] ≤ δ (12)
i=1
m
Y
j=1;j6=i
Third, similarly, letting ay be another appliance other than
ax, we denote the information leakage w.r.t. ax and ay’s ON
status from one or multiple readings out of the m consecutive
readings as I[ax, ay], which is also bounded by δ. Again, we
denote ∀i ∈ [1, m], I[(ωi, t + i) → ay] as I ′
m. Then,
we also consider the worst case that information leakages of
ax or ay’s ON status from all the m consecutive readings have
the least overlap (which also leads to the highest union of the
information leakages of ax or ay’s ON status from multiple
readings), discussed as below:
1, . . . , I ′
• Correlating the information leakages of ax and ay’s ON
status from one or multiple readings clearly increases the
joint information leakage (which is the union of multiple
individual leakages); as all the information leakages (e.g.,
Ii and I ′
i) are ﬁxed, the union of them achieves the
maximum value when the individual leakages (e.g., Ii
and I ′
i) are independent to have the least overlap.
Again, we need to bound the information leakage w.r.t. “ax
and ay are ON in one or multiple reading”. Speciﬁcally, the
information leakage w.r.t. “both ax and ay are OFF in all the
m readings” can be represented as Qm
i), the
information leakage w.r.t. “ax is ON and ay is OFF in the
m consecutive readings” is Pm
j)], and the
information leakage w.r.t. “ay is ON and ax is OFF in the
m consecutive readings” is Pm
j=1(1 − Ij)]. Thus, the
maximum I[ax, ay] can be derived and bounded as:
i=1[Ii Qm
i Qm
i=1(1 − Ii)(1 − I ′
j=1(1 − I ′
i=1[I ′
max{I[ax, ay]} =1 −
Y
(1 − Ii)(1 − I ′
i)
m
−
m
X
i=1
[Ii
m
Y
j=1
i=1
m
m
(1 − I ′
j )] −
X
[I ′
i
Y
(1 − Ij)] ≤ δ
(13)
i=1
j=1
Notice that the information leakage w.r.t. “any combination
of appliances including ax and ay (w.l.o.g. ax, ay, az, . . . ) can
be ON in m consecutive readings” is no greater than I[ax, ay]
(simply because leakage w.r.t. “ax and ay are ON” and leakage
w.r.t. “az,. . . are ON” should concur to leak information of
ax, ay, az, . . . ’s ON status). Hence, such information leakage
is also bounded by δ if Equation 13 holds.
In summary, while examining the current reading rm (safe
or not) along with the previous m − 1 readings, if three
conditions hold (Equation 11, 12 and 13), then rm is safe since
the reading stream (with rm) still satisfy (ǫ, δ)m-Uncertainty.
Such three conditions will be adopted by our stream algorithm
to check whether a reading is safe or not.
B. Initializing the Smart Meter (Ofﬂine)
Before running the streaming algorithm, the smart meter
should be initialized to recursively traverse all the 2|A| subsets
of A and then identify the candidate rate set G, candidate read-
ing set R as well as candidate appliance sets ∀ω ∈ G, c(ω).
Notice that the initialization is a one-time ofﬂine process.
Most real-life households typically have a small or medium
number of appliances (e.g., |A| ≤ 40). Thus, it is feasible
to ﬁnd the exact candidate rate set G by traversing every
element in the power set 2A. In case that a large number
of appliances are attached to a smart meter of a community,
building or factory (e.g., |A| = 1000), the exponential number
of possible appliance combinations (in A’s power set 2A)
cannot be enumerated in polynomial time. To resolve this,
JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015
7