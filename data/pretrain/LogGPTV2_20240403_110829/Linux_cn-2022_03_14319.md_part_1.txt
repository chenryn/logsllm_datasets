---
author: Mike Calizo
category: 容器与云
comments_data:
- date: '2022-03-02 11:26:29'
  message: 哈哈，很多 Linux 教程第一步就是关闭 SELinux。
  postip: 117.175.116.227
  username: 来自四川的 Chrome 86.0|Windows 10 用户
count:
  commentnum: 1
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5061
date: '2022-03-02 09:36:24'
editorchoice: false
excerpt: 黑掉你的系统，了解为什么配置 SELinux 作为你的第一道容器防线是很重要的。
fromurl: https://opensource.com/article/20/11/selinux-containers
id: 14319
islctt: true
largepic: /data/attachment/album/202203/02/093614t53cfb857841qzzk.jpg
permalink: /article-14319-1.html
pic: /data/attachment/album/202203/02/093614t53cfb857841qzzk.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 黑掉你的系统，了解为什么配置 SELinux 作为你的第一道容器防线是很重要的。
tags:
- SELinux
- 容器
thumb: false
title: 用 SELinux 保护你的容器
titlepic: true
translator: wxy
updated: '2022-03-02 09:36:24'
---
> 
> 黑掉你的系统，了解为什么配置 SELinux 作为你的第一道容器防线是很重要的。
> 
> 
> 
![](/data/attachment/album/202203/02/093614t53cfb857841qzzk.jpg "Three closed doors")
当有些事情在你的 Linux 环境中不能正常工作时，最简单的方法就是禁用 安全增强型 Linux   Security-Enhanced Linux （[SELinux](https://en.wikipedia.org/wiki/Security-Enhanced_Linux)）。而当它突然可以工作了，你就会忘记了禁用这件事 —— 这是一个常见的陷阱，意味着你已经失去了一个非常强大的安全工具。
随着容器、微服务和分布式架构的兴起，威胁也在上升。这是由于一个老的、众所周知的问题：速度。容器的优势在于它们能让你快速行动，做更多的事情，并迅速改变。这意味着容器的采用已经飞速发展，但它所提供的速度也意味着你会遇到更多的问题和漏洞。当你越来越快地做更多的事情时，这自然会发生。
### 如何减轻威胁
正如孙子所说，“不战而屈人之兵”。当涉及到容器的基本防御时，这句话真的很有共鸣。为了避免问题（战斗），确保你的容器主机是安全的，你可以使用 SELinux 作为你的第一道防线。
SELinux 是一个开源项目，于 2000 年发布，2003 年集成到 Linux 内核中。根据 [红帽公司的解释](https://www.redhat.com/en/topics/linux/what-is-selinux)，“SELinux 是 [Linux 系统](https://www.redhat.com/en/topics/linux/what-is-linux) 的一个安全架构，允许管理员对谁可以访问系统有更多的控制。它最初是由美国国家安全局（NSA）开发的，是使用 Linux 安全模块（LSM）对 [Linux 内核](https://www.redhat.com/en/topics/linux/what-is-the-linux-kernel) 的一系列补丁。”
### 开始吧
当你想到容器时，首先想到的可能是 [Docker](https://opensource.com/resources/what-docker)。Docker 在 2013 年出现后掀起了一场容器采用革命。它是容器爆炸性流行的主要原因之一，但如上所述，大量采用增加了用户对安全风险的脆弱性。
在你用 SELinux 保护你的 Docker 容器之前，你需要设置一些东西。
#### 前置条件
* 安装并配置了 CentOS 8/RHEL 8。
* 安装并配置好 Docker CE
* 创建两个账户：root 和 非 root 用户（下面的例子中是 `mcalizo`）。
如果你需要在你的 RHEL 8/CentOS 8 服务器上设置 Docker，你可以按照这些 [说明](https://www.linuxtechi.com/install-docker-ce-centos-8-rhel-8/)。如果你运行的是 RHEL 8，你需要在开始之前删除预装的 Podman 和 runc 包。
首先，确保 SELinux 被启用：
```
[mcalizo@Rhel82 ~]$ sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Memory protection checking:     actual (secure)
Max kernel policy version:      31
[mcalizo@Rhel82 ~]$
```
然后，验证你的操作系统版本和 Docker 正在运行。以 root 身份登录并运行：
```
[root@rhel82 ~]# cat /etc/redhat-release
Red Hat Enterprise Linux release 8.2 (Ootpa)
[root@rhel82 ~]#
[root@rhel82 ~]# systemctl status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
   Active: active (running) since Wed 2020-10-28 19:10:14 EDT; 15s ago
     Docs: https://docs.docker.com
 Main PID: 30768 (dockerd)
    Tasks: 8
   Memory: 39.0M
   CGroup: /system.slice/docker.service
           └─30768 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
Oct 28 19:10:13 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:13.889602941-04:00" level=error msg=">
Oct 28 19:10:13 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:13.903413613-04:00" level=warning msg>
Oct 28 19:10:13 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:13.903427451-04:00" level=warning msg>
Oct 28 19:10:13 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:13.903538271-04:00" level=info msg="L>
Oct 28 19:10:14 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:14.132060506-04:00" level=info msg="D>
Oct 28 19:10:14 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:14.308943088-04:00" level=info msg="L>
Oct 28 19:10:14 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:14.319438549-04:00" level=info msg="D>
Oct 28 19:10:14 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:14.319570298-04:00" level=info msg="D>
Oct 28 19:10:14 rhel82.home.labs.com dockerd[30768]: time="2020-10-28T19:10:14.333419209-04:00" level=info msg="A>
Oct 28 19:10:14 rhel82.home.labs.com systemd[1]: Started Docker Application Container Engine
```
检查你的 Docker 版本：
```
[root@rhel82 ~]# docker --version
Docker version 19.03.13, build 4484c46d9d
```
### 黑掉主机
了解一个问题的最好方法之一就是去体验它。因此，我将告诉你，如果你的安全设置不当，向 Docker 主机注入恶意代码是多么容易。
为了能够在 Docker 主机上做坏事，“恶意”的非 root 用户（本教程中为 `mcalizo`）必须是可以实例化 Docker 容器的组的成员。
首先，确认 `mcalizo` 用户属于哪个组：
```
[root@Rhel82 ~]# groups mcalizo
mcalizo : mcalizo
```
输出显示，`mcalizo` 只属于它自己的组。这意味着 `mcalizo` 不能实例化 Docker 容器，如果它试图这样做，将会得到这个错误：
```
[mcalizo@Rhel82 ~]$ docker run -it --rm centos:latest /bin/sh