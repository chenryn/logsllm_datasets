https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-pta
Sean Metcalf | @PyroTek3 | PI:EMAIL
Attacking Microsoft PTA 
•Managed by Azure AD Connect
•Compromise server hosting PTA (typically Azure AD 
Connect server)
•Azure AD sends the clear-text password (not hashed!) 
to authenticate the user.
•Inject DLL to compromise credentials used for PTA
https://blog.xpnsec.com/azuread-connect-for-redteam/
Sean Metcalf | @PyroTek3 | PI:EMAIL
Azure AD Seamless Single Sign-On
https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-sso
Sean Metcalf | @PyroTek3 | PI:EMAIL
Azure AD Seamless Single Sign-On
https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-sso
Sean Metcalf | @PyroTek3 | PI:EMAIL
Attacking Azure AD Seamless Single Sign-On
• Managed by Azure AD Connect
• “Azure AD exposes a publicly available endpoint that accepts 
Kerberos tickets and translates them into SAML and JWT 
tokens”
• Compromise the Azure AD Seamless SSO Computer Account 
password hash (“AZUREADSSOACC “)
• Generate a Silver Ticket for the user you want to 
impersonate and the service ‘aadg.windows.net.nsatc.net ‘
• Inject this ticket into the local Kerberos cache
• Azure AD Seamless SSO computer account password doesn’t 
change
https://www.dsinternals.com/en/impersonating-office-365-users-mimikatz/
Sean Metcalf | @PyroTek3 | PI:EMAIL
Attacking Azure AD Connect
DEF CON 25 
(July 2017)
On-Prem: Acme’s Azure AD Connect
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem: Acme’s Azure AD Connect
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem: Acme’s Azure AD Connect
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem: Acme’s Azure AD Connect
Sean Metcalf | @PyroTek3 | PI:EMAIL
Cloud Administration
Identity Access Management (IAM)
Sean Metcalf | @PyroTek3 | PI:EMAIL
Cloud Administration & Roles
•Administrative groups are called Roles
•Each role has specifically delegated access. 
•Depending on the cloud provider, custom roles can be 
created with custom delegation and rights.
•Azure and Amazon AWS each have their own methods 
for this, but the concepts are the same.
Sean Metcalf | @PyroTek3 | PI:EMAIL
Azure IAM – Role Types
•Owner
• Has full access to all resources including the right to 
delegate access to others.
•Contributor
• Can create and manage all types of Azure resources but 
can't grant access to others.
•Reader
• Can view existing Azure resources.
Sean Metcalf | @PyroTek3 | PI:EMAIL
Azure IAM – Privileged Roles
•Tenant Admins
• Owner Role on the Tenant
• Full control over the tenant and all subscriptions
•Subscription Admin 
• Owner Role on the Subscription
• Full control over the subscription
Sean Metcalf | @PyroTek3 | PI:EMAIL
Sean Metcalf | @PyroTek3 | PI:EMAIL
AWS IAM (Organizations)
• Root Account (Payer Account) – organization primary account 
(often the first account)
• Account Admins
• Full control over the Account and everything in the account (account 
services)
• If Root Account (admin) AND Account Admin = Full organizational 
control 
• No real “subscription” concept
• Organizational Unit concept that provides granular 
administration of instances (EC2)
Sean Metcalf | @PyroTek3 | PI:EMAIL
AWS IAM Privilege Escalation Methods
•
Creating a new policy version (iam:CreatePolicyVersion)
•
This privilege escalation method could allow a user to gain full administrator access of the AWS account.
•
Creating an EC2 instance with an existing instance profile (iam:PassRole and ec2:RunInstances )
•
This attack would give an attacker access to the set of permissions that the instance profile/role has, which again could range from no privilege escalation to full administrator access of the AWS account.
•
Creating a new user access key (iam:CreateAccessKey)
•
This method would give an attacker the same level of permissions as any user they were able to create an access key for, which could range from no privilege escalation to full administrator access to the 
account.
•
Create/update new login profile (iam:CreateLoginProfile / iam:UpdateLoginProfile)
•
This method would give an attacker the same level of permissions as any user they were able to create a login profile for, which could range from no privilege escalation to full administrator access to the 
account.
•
Attaching a policy to a user (iam:AttachUserPolicy)
•
An attacker would be able to use this method to attach the AdministratorAccess AWS managed policy to a user, giving them full administrator access to the AWS environment.
•
Attaching a policy to a group (iam:AttachGroupPolicy)
•
An attacker would be able to use this method to attach the AdministratorAccess AWS managed policy to a group, giving them full administrator access to the AWS environment.
•
Attaching a policy to a role (iam:AttachRolePolicy)
•
An attacker would be able to use this method to attach the AdministratorAccess AWS managed policy to a role, giving them full administrator access to the AWS environment.
•
Creating/updating an inline policy for a user (iam:PutUserPolicy)
•
Due to the ability to specify an arbitrary policy document with this method, the attacker could specify a policy that gives permission to perform any action on any resource, ultimately escalating to full 
administrator privileges in the AWS environment.
•
Creating/updating an inline policy for a group (iam:PutGroupPolicy)
•
Due to the ability to specify an arbitrary policy document with this method, the attacker could specify a policy that gives permission to perform any action on any resource, ultimately escalating to full 
administrator privileges in the AWS environment.
•
Creating/updating an inline policy for a role (iam:PutRolePolicy)
•
Due to the ability to specify an arbitrary policy document with this method, the attacker could specify a policy that gives permission to perform any action on any resource, ultimately escalating to full 
administrator privileges in the AWS environment.
•
Adding a user to a group (iam:AddUserToGroup)
•
The attacker would be able to gain privileges of any existing group in the account, which could range from no privilege escalation to full administrator access to the account.
•
Updating the AssumeRolePolicyDocument of a role  (iam:UpdateAssumeRolePolicy)
•
This would give the attacker the privileges that are attached to any role in the account, which could range from no privilege escalation to full administrator access to the account.
https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/
https://github.com/RhinoSecurityLabs/Security-Research/blob/master/tools/aws-pentest-tools/aws_escalate.py
Sean Metcalf | @PyroTek3 | PI:EMAIL
Cloud API Keys
• Provide permanent access, often with privileged rights.
• Often provides additional authentication access method 
(other than username/password)
• API keys are frequently exposed in code (Github), including 
private repositories.
• Compromised API keys need to be regenerated.
Sean Metcalf | @PyroTek3 | PI:EMAIL
Compromise Cloud 
Hosted DCs
Via AWS /Federation
https://aws.amazon.com/blogs/security/aws-federated-authentication-with-active-directory-federation-services-ad-fs/
AWS Federated Authentication with Active 
Directory Federation Services (AD FS)
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
AD Group:
AWS EC2 Admins
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
AD Group:
AWS EC2 Admins
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
AD Group:
AWS EC2 Admins
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
AD Group:
AWS EC2 Admins
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem 
AD
AWS EC2
AD Group:
AWS EC2 Admins
Federation
On-Prem
AD 
Domain
Controller
On-Prem
AD 
Domain
Controller
AWS IAM Role:
AWS EC2 Administration
Sean Metcalf | @PyroTek3 | PI:EMAIL
On-Prem AD Account -> AWS Federation -> 
Compromise On-Prem AD Summary
• On-prem AD Domain Controllers are hosted in AWS EC2
• On-prem AD groups are added to AWS Roles
• Compromise on-prem AD user account to compromise AWS EC2 
instances (VMs) to run stuff on DCs
• Amazon SSM installed by default on most Amazon provided 
instances (template) – need role to execute
• Hopefully you are logging this and looking at the logs (CloudTrail)
And the Logs can’t be deleted.
Sean Metcalf | @PyroTek3 | PI:EMAIL
From Azure AD 
to Azure
An Unanticipated Attack Path