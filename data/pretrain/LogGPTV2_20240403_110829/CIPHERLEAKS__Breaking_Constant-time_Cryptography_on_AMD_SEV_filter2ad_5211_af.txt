### Mapping of Guest Physical Addresses and Memory Leaks

In the context of Secure Encrypted Virtualization (SEV), a guest physical address is expected to contain network data before the guest VM responds to a request. However, if the mapping is incorrect, unauthorized memory pages may be sent back, potentially leaking sensitive information to an adversary. SEV-SNP (Secure Nested Paging) addresses this issue by imposing restrictions on unauthorized NPT (Nested Page Table) remapping.

### Unprotected I/O Operations

Li et al. [23] identified a vulnerability in SEV and SEV-ES related to unprotected I/O operations. Specifically, they demonstrated that both SEV and SEV-ES rely on a shared region within the guest VM called the Software I/O Translation Lookaside Buffer (SWIOTLB) for I/O activities. This design allows the hypervisor to alter parts of the I/O traffic, enabling the construction of encryption and decryption oracles that can manipulate arbitrary memory with the victim’s VEK (Virtual Encryption Key). Although SEV-SNP does not fully resolve the unprotected I/O problem, it mitigates the attack by restricting the hypervisor's write permissions.

### ASID Abuses

Li et al. [22] investigated the "Security-by-Crash" principle and ASID (Address Space Identifier) management in SEV. They presented a series of attacks known as CROSSLINE, which exploit these vulnerabilities. ASIDs are used as indices for encryption keys in AMD firmware, as well as TLB (Translation Lookaside Buffer) tags and cache tags. Despite the hypervisor being untrusted, SEV delegates ASID management to the hypervisor, relying on the "Security-by-Crash" principle, where incorrect ASIDs cause VM crashes to protect the guest VM's integrity and confidentiality. In CROSSLINE attacks, the adversary can extract memory blocks from the guest VM in a stealthy manner, conforming to the PTE (Page Table Entry) format. These attacks can succeed as long as the target VM’s memory encryption key is not deactivated by the hypervisor, even after the VM is terminated.

### CIPHERLEAKS Attack on SEV-SNP

The CIPHERLEAKS attack on SEV-SNP has two key requirements:
1. **Stable Mapping of Plaintext-Ciphertext Pairs**: The memory encryption mode in SEV-SNP must preserve the mapping between plaintext and ciphertext throughout the VM's lifetime. SEV-SNP uses the XEX mode of encryption, which satisfies this requirement.
2. **Hypervisor Read Access to Ciphertext**: The hypervisor must have read access to the ciphertext of the guest VM's memory. According to [4], although RMP (Restricted Memory Protection) limits the hypervisor's write access to the VM's private memory, it still retains read access, including to the VMSA (Virtual Machine Save Area).

AMD has confirmed that SEV-SNP is vulnerable to the CIPHERLEAKS attack, and a CVE (Common Vulnerabilities and Exposures) number will be assigned to the discovered vulnerability. A hardware patch will be available to protect the VMSA during VM exits.

### Related Work

#### Known Attacks against SEV

Under the assumption of an untrustworthy hypervisor, SEV has faced numerous attacks due to various vulnerabilities:
- **Unencrypted VMCB (Virtual Machine Control Block)**: During VM exits, the VMCB is not encrypted, exposing the guest VM's register state to the hypervisor. Hetzelt and Buhren [15] demonstrated that an untrusted hypervisor could manipulate the guest VM's registers to perform return-oriented programming (ROP) attacks.
- **Unauthenticated Encryption**: Attacks such as those described by Brumley and Boneh [8] and Du et al. [11] exploit unauthenticated encryption to break the confidentiality and integrity of SEV.
- **Unprotected NPT**: Morbitzer et al. [26, 27] showed how unprotected NPTs can be exploited to extract secrets from encrypted virtual machines.
- **Unprotected I/O**: Li et al. [23] demonstrated that unprotected I/O operations allow the hypervisor to alter I/O traffic and construct encryption/decryption oracles.
- **Unauthorized Key Use**: Li et al. [22] highlighted the risks associated with ASID management and the "Security-by-Crash" principle, leading to the CROSSLINE attacks.

### Side-Channel Attacks

Architectural side-channel attacks, such as cache side channels [25, 38–41], performance counter tracking, and TLB side channels [13], are common in cloud environments. While SEV's design increases the difficulty of some architectural side-channel attacks, it remains vulnerable to page-fault side-channel attacks. For example, Hetzelt et al. [15] and Li et al. [23] used page faults to track the execution of SEV-enabled VMs and identify specific memory pages.

### Conclusion

This paper describes the ciphertext side channel on SEV (including SEV-ES and SEV-SNP) processors. The root causes of the side channel are twofold:
1. **XEX Mode of Encryption**: SEV uses the XEX mode with a tweak function of the physical addresses, preserving the one-to-one mapping between ciphertext and plaintext.
2. **Hypervisor Read Access**: The VM memory is readable by the hypervisor, allowing it to monitor changes in ciphertext blocks.

The paper demonstrates the CIPHERLEAKS attack, which exploits the ciphertext side-channel vulnerability to break the constant-time cryptography of OpenSSL when executed in SEV-ES VMs.

### References

[References are listed as provided, with no changes made.]

---

This revised text aims to provide a clear, coherent, and professional overview of the security issues and attacks related to SEV and SEV-SNP, along with the necessary references.