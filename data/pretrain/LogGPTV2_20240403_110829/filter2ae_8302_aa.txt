文/ **SuperHei（知道创宇404安全实验室）** 2016.4.11
注：文章里“0day”在报告给官方后分配漏洞编号：CVE-2016-1843
### 一、背景
在前几天老外发布了一个在3月更新里修复的iMessage xss漏洞（CVE-2016-1764）细节 ：
https://www.bishopfox.com/blog/2016/04/if-you-cant-break-crypto-break-the-client-recovery-of-plaintext-imessage-data/
https://github.com/BishopFox/cve-2016-1764
他们公布这些细节里其实没有给出详细触发点的分析，我分析后也就是根据这些信息发现了一个新的0day。
### 二、CVE-2016-1764 漏洞分析
CVE-2016-1764 里的最简单的触发payload： `javascript://a/research?%0d%0aprompt(1)`
可以看出这个是很明显javascript协议里的一个小技巧 %0d%0 没处理后导致的 xss ，这个tips在找xss漏洞里是比较常见的。
这个值得提一下的是 为啥要用`prompt(1)` 而我们常用的是`alert(1)`
，我实际测试了下发现alert确实没办法弹出来，另外在很多的网站其实把alert直接和谐过滤了，所以这里给提醒大家的是在测试xss的时候，把 prompt
替换 alert 是有必要的～
遇到这样的客户端的xss如果要分析，第一步应该看看location.href的信息。这个主要是看是哪个域下，这个漏洞是在`applewebdata://`协议下，这个原漏洞分析里有给出。然后要看具体的触发点，一般在浏览器下我们可以通过看html源代码来分析，但是在客户端下一般看不到，所以这里用到一个小技巧：
    javascript://a/research?%0d%0aprompt(1,document.head.innerHTML)  
这里是看html里的head代码
继续看下body的代码：
    javascript://a/research?%0d%0aprompt(1,document.body.innerHTML)
    与“PI:EMAIL”进行 iMessage 通信今天 23:23javascript://a/research?%0d%0aprompt(1,document.body.innerHTML)javascript://a/research?%0d%0aprompt(1,document.body.innerHTML)javascript://a/research?%0d%0aprompt(1,document.head.innerHTML)已送达javascript://a/research?%0d%0aprompt(1,document.head.innerHTML)
那么关键的触发点:
    <a href="javascript://a/research?%0d%0aprompt(1,document.head.innerHTML)" title="javascript://a/research?