It's good to directly run WebAssembly files in **deno** like `.js` and `.ts`
files. If so then I can run:  
`deno run myTask.wasm`  
without any additional files and steps. (it exports a common function like
`main` or `start` or ...)
Also it's good to directly import these files to project with simple and
readable syntax:  
`import { task1 } from ".../myLib.wasm"`
Like this code in dev.to, it writes a simple library function called `square`
and import it in `.ts` file and run that `.ts` file with deno.
Example above can be very simpler:
    const wasmCode = await Deno.readFile("./target/wasm32-unknown-unknown/debug/wasm_deno_example.wasm");
    const wasmModule = new WebAssembly.Module(wasmCode);
    const wasmInstance = new WebAssembly.Instance(wasmModule);
    const {
        square,
    } = wasmInstance.exports;
can write somthing like:
    import { square } from "./target/wasm32-unknown-unknown/debug/wasm_deno_example.wasm";
It's much more readable, clean, easy to use, and also do not dirty the global
context.
This simple feature enables more comfortable journey to publish **libraries**
and write cross-platform deno **apps**.