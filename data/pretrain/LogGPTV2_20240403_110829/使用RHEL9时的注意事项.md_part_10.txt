软件包中获得对各种语言的支持。您可以使用以下软件包名称自定义要安装的语言支持级别，其中
`code`{.literal} 是该语言的简短 ISO 代码，例如 `es`{.literal}
代表西班牙语：
::: variablelist
[`langpacks-core-code`{.literal}]{.term}
:   提供基本语言支持，包括：
    ::: itemizedlist
    -   `glibc`{.literal} 区域设置
    -   默认字体
    -   默认输入法（如果语言需要）
    :::
[`langpacks-core-font-code`{.literal}]{.term}
:   仅提供语言的默认字体。
[`langpacks-code`{.literal}]{.term}
:   提供完整的语言支持，除了基本语言支持外，还包括以下内容：
    ::: itemizedlist
    -   翻译
    -   拼写检查器字典
    -   其他字体
    :::
:::
::: title
**Motif 已被删除**
:::
Motif 小部件工具包已从 RHEL 中删除，因为上游 Motif 社区中的开发不活跃。
以下 Motif 软件包已被删除，包括其开发和调试变体：
::: itemizedlist
-   `motif`{.literal}
-   `motif-static`{.literal}
-   `openmotif`{.literal}
-   `openmotif21`{.literal}
-   `openmotif22`{.literal}
:::
红帽建议使用 GTK 工具包作为替换。GTK 更易于维护，提供与 Motif
相比的新功能。
:::
:::
[]{#assembly_dotnet_considerations-in-adopting-RHEL-9.html}
::: chapter
::: titlepage
# []{#assembly_dotnet_considerations-in-adopting-RHEL-9.html#assembly_dotnet_considerations-in-adopting-RHEL-9}第 19 章 .NET {.title}
:::
本章列出了 RHEL 8 和 RHEL 9 之间 .NET 的最显著更改。
::: section
::: titlepage
# []{#assembly_dotnet_considerations-in-adopting-RHEL-9.html#ref_changes-to-dotnet_assembly_dotnet}对 .NET 的显著变化 {.title}
:::
::: title
**RHEL 9.0 Beta .NET 版本支持**
:::
RHEL 9.0 Beta 支持 .NET Core 3.1.计划的在 RHEL 9.0 GA 中删除，并替换为
.NET 6。
:::
:::
[]{#assembly_edge_considerations-in-adopting-RHEL-9.html}
::: chapter
::: titlepage
# []{#assembly_edge_considerations-in-adopting-RHEL-9.html#assembly_edge_considerations-in-adopting-RHEL-9}第 20 章 Edge {.title}
:::
本章列出了 RHEL 8 和 RHEL 9 之间 RHEL Edge 的最显著更改。
::: section
::: titlepage
# []{#assembly_edge_considerations-in-adopting-RHEL-9.html#ref_changes-to-edge_assembly_edge}RHEL for Edge {.title}
:::
::: title
**支持的 RHEL for Edge 镜像类型**
:::
使用 RHEL for Edge，您可以使用 Image Builder 编写自定义
RHEL(rpm-ostree)镜像，然后在 Edge 服务器上远程安装和管理镜像。
RHEL 9 Beta 中支持以下镜像类型：
::: itemizedlist
-   RHEL for Edge Commit(.tar)
-   RHEL for Edge Container(.tar)
-   RHEL for Edge Installer(.iso)
:::
::: title
**支持的 RHEL for Edge 镜像名称**
:::
在以前的版本中，镜像类型使用 `rhel-`{.literal}
前缀。这个前缀已被删除，但之前的镜像名称，如
`rhel-edge-container`{.literal} 和 `rhel-edge-installer`{.literal}
仍然作为新名称的别名工作。这些名称被视为已弃用，并可能在以后的发行版本中完全删除。RHEL
9 Beta 中支持以下 RHEL for Edge 镜像名称：
::: itemizedlist
-   edge-commit
-   edge-container
-   edge-installer
:::
:::
:::
[]{#assembly_performance_considerations-in-adopting-RHEL-9.html}
::: chapter
::: titlepage
# []{#assembly_performance_considerations-in-adopting-RHEL-9.html#assembly_performance_considerations-in-adopting-RHEL-9}第 21 章 性能 {.title}
:::
本章列出了 RHEL 8 和 RHEL 9 之间性能的最显著更改。
::: section
::: titlepage
# []{#assembly_performance_considerations-in-adopting-RHEL-9.html#ref_changes-to-performance_assembly_performance}性能的显著变化 {.title}
:::
::: title
**sadf(1)工具现在从原生 sadc(1)归档生成 PCP 归档**
:::
从 RHEL 9 开始，`sysstat`{.literal} 软件包提供的 `sadf(1)`{.literal}
工具可以从原生 `sadc(1)`{.literal} 存档生成 PCP 存档。
默认情况下，当 `'-`{.literal} 标志与 `sadc(1)`{.literal}
一起使用时，`sadc(1)`{.literal} 将数据写入每天标准系统活动中。此文件名为
`saDD`{.literal}，默认情况下位于 `/var/log/sa`{.literal}
目录中。相反，如果没有指定输入数据文件，`sadf(1)`{.literal}
工具将使用标准系统活动每日数据文件来生成归档。传递数字作为参数，以告知
`sadf(1)`{.literal} 从过去指定天数记录的数据生成存档。
::: itemizedlist
-   要从记录的 2 天前 `sadc(1)`{.literal} 归档生成 PCP 存档，请运行：
    ``` screen
    # sadf -l -O pcparchive=/tmp/recording -2
    ```
-   要显示 PCP 存档中从 `sadc(1)`{.literal} 归档生成的指标列表，请运行：
    ``` screen
    $ pminfo --archive /tmp/recording
    Disk.dev.avactive
    Disk.dev.read
    Disk.dev.write
    Disk.dev.blkread
    [...]
    ```
-   显示 `sadc(1)`{.literal} 归档生成的 PCP 存档和主机名的时间范围
    ``` screen
    $ pmdumplog --label /tmp/recording
    Log Label (Log Format Version 2)
    Performance metrics from host shard
            commencing Tue Jul 20 00:10:30.642477 2021
            ending     Wed Jul 21 00:10:30.222176 2021
    ```
-   然后，您可以使用 PCP 命令分析 `sadc(1)`{.literal} 归档生成的 PCP
    存档，例如：
    ``` screen
    $ pmchart --archive /tmp/recording
    ```
:::
:::
:::
[]{#assembly_system-roles_considerations-in-adopting-RHEL-9.html}
::: chapter
::: titlepage
# []{#assembly_system-roles_considerations-in-adopting-RHEL-9.html#assembly_system-roles_considerations-in-adopting-RHEL-9}第 22 章 系统角色 {.title}
:::
本章列出了 RHEL 8 和 RHEL 9 间的系统角色的最显著更改。
::: section
::: titlepage
# []{#assembly_system-roles_considerations-in-adopting-RHEL-9.html#ref_system-roles_assembly_system-roles}使用 RHEL 系统角色执行系统管理任务 {.title}
:::
::: title
**可用的系统角色**
:::
从 Red Hat Enterprise Linux 9.0 Beta 开始，RHEL 系统角色包括
`ansible-core 2.11`{.literal} 软件包。这是仅具有核心功能的 Ansible
版本 - 也就是说，它不包括 `firewalld`{.literal} 等模块，以及