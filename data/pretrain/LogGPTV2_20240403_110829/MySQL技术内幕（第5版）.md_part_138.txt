n个字符长的CHAR字符串，可以使用AS CHAR（n）。如有必要，可在该字符串的尾部月
REVERSE))
区间里的第二个级别如果小于第一个级
→20120806163317.000000
→20120826
↑
↓
20120806163317
434241
414243
2012-08-26
Today is 2012-08-26
'BEBDBC
00480045004C004C004F
48656C6C6F
48454C4C4F
别
用
---
## Page 605
先验证参数。
日期部分的格式说明符也是如此。
DAYOFMONTH（）函数在遇到参数+2013-00-00·的时候都将返回0。用在DATE_FORMAT（）函数里的
如果提供给日期/时间函数的日期值或时间值不合法，就不能指望能够得到合理的结果。一定要
有几个用来提取日期部分的函数，在遇到“不完整的”日期时会返回0。例如，MONTH（)和
口
CURRENT_TIME（[fSp]）
 CURRENT_DATE()
coNVERT_TZ(date,from_zone,to_zone)
ADDTIME(exprl,expr2)
CAST(CURTIME() AS UNSIGNED)
CURTIME()+0
之前，所有的参数都会被忽略。
可以给出可选参数fsp来指定返回值应该拥有的小数秒精度（0到6位）。在MySQL5.6.4
返回会话时区的当前时间，它是一个·hh:mm:ss'格式的TIME值。自MySQL5.6.4开始，
CURTIME([fsp]）
它等价于NOW（）函数。那对括号是可选的，除非指定了fsp参数。
CURRENT_TIMESTAMP([fSp])
它等价于CURTIME（）函数。那对括号是可选的，除非指定了fsp参数。
它等价于CURDATE（）函数。那对括号是可选的。
CURDATE()
返回会话时区的当前日期，它是一个'CCYY-MM-DD'格式的DATE值。
CURDATE(）
CONVERT_TZ(*2019-02-11','+00:00',*-03:00)
CONVERT_TZ(*2019-02-11 00:00:00′,US/Central','US/Eastern')
作，转换结果必须落在TIMESTAMP数据类型的表示范围内。
非法的，就返回NULL。在指定时区值时可以参考12.6.1节的描述。为了让此函数正确工
值，把它转化为 to_zone 时区里的一个值，最后返回转换结果。只要这些参数里有一个是
给定日期值或日期/时间值date，CONVERT_TZ（）函数把它视为from_zone时区里的一个
ADDTIME('2004-01-0100:00:00′,'12:30:00)
该是一个时间值。
把两个表达式相加并返回其结果。expr1应该是一个时间值或一个日期/时间值，expr2应
ADDDATE(date,expr)=ADDDATE(date,INTERVALexprDAY）
第二种语法可以改写为第一种语法，如下所示：
ADDDATE('2004-12-01',365)
它加上一个天数，最后返回计算的结果。
对于第二种语法，ADDDATE（）函数通过date 参数读入一个日期值或一个日期/时间值，给
ADDDATE('2004-12-01′,INTERVAL 1YEAR)
它加上一段时间间隔，最后返回计算的结果。它等价于ADD_DATE（)函数。
对于第一种语法，ADDDATE（）函数通过date 参数读入一个日期值或一个日期/时间值，给
ADDDATE (date, expr)
→163317
→163317.000000
→'2005-12-01
'2012-08-26
'2005-12-01*
2019-02-1021:00:00
2004-01-0112:30:00
19:00:00.900000
2019-02-1101:00:00
C.2函数
585
---
## Page 606
586
DATE_ADD(date,INTERVAL expr interval)
DATE(expr)
表达式 expr 的各组成部分将按 interval限定的输入格式从右向左进行匹配。例如，
添加到日期的表达式expr既可以指定为数值，也可以指定为字符串；但如果它里面包含有非数
YEAR_MONTH
YEAR
QUARTER
MONTH
WEEK
DAY_MICROSECOND
DAY_SECOND
DAY_MINUTE
DAY_HOUR
DAY
HOUR_MICROSECOND
HOUR_SECOND
HOUR_MINUTE
HOUR
MINUTE_MICROSECOND
MINUTE_SECOND
MINUTE
SECOND_MICROSECOND
SECOND
DATE_ADD(2005-12-01',INTERVAL
DATE_ADD('2005-12-01',INTERVAL2:3YEAR_MONTH)
字的字符，那就必须指定为一个字符串。表达式expr中的分隔符可以是任何一种标点符号。
用的格式。
下表格列出了interval的各种可取值、它们的含义，以及为每种间隔类型指定具体值时使
解释这段时间间隔。如果 date是一个DATE值，则返回值也将是一个 DATE 值，有关参数
date值进行加减（若expr为负，则减去；否则就加上）的数值，
返回日期值或日期/时间值 date 加上一段时间间隔后得到的结果。
DATE_ADD(2009-12-0108:30:00′,INTERVAL12HOUR)
DATE('2008-03-12')
返回expr的日期部分，
的
CURTIME(2)
CURTIME()
附录C操作符与函数参考
间隔类型
日期值，结果将为NULL。
的时间部分不参加计算。
应该是一个日期表达式或日期/时间表达式。
,INTERVAL
否则，返回值将是一个 DATETIME 值。如果date不是一个合法
年和月
年
季
月
周
日、小时、分和秒
日、小时和分
日和小时
日
小时、分、秒和微秒
小时、分和秒
小时和分
小时
分、秒和微秒
分和秒
分
秒和微秒
微秒
度
小时、分、秒和微秒
2-3YEAR_MONTH)
含义
→'2008-03-12
→'2008-03-01
一
→'2008-03-01
一
2008-03-12
15:01:02.20
15:01:02
2009-12-0120:30:00
'YY-MM'
8
'hh:mm:ss.uuuuuu'
'hh:mm:ss"
hh
'mm:ss.uuuuuu'
mm
'ss.uuuuuu"
nnnnnn
2009-09-01
'2010-01-30
'2010-12-01'
'DDhh"
DD
hh:mm'
'mm:ss'
hh:mm:ss.uuuuuu'
hh:mm:ss'
hh:mm
其中，
interval表明了如何
值格式
expr给出了将与
---
## Page 607
口1
这张表里，那么它们会被原封不动地复制到输出结果里。
每种格式代码的前面必须要有“”字符。如果那些包含在格式化字符串里的字符未出现在
统变量1c_time_names决定了用于生成月名和日名的说明符的语言。
始，因为不完整的日期需要用零来表示其月或日，如'2004-00-13+或'1998-12-00＇。系
下表格列出了允许在格式化字符串里使用的说明符。月、日说明符的数值表示范围从零开
DATE_FORMAT(2014-12-01',*%M%e,%Y')
数能把MySQL所支持的日期值或日期/时间值重新格式化为其他所需的格式。
按格式字符串 format 对日期或日期/时间值 date进行格式化，返回一个结果字符串。此函
DATE_FORMAT(date,format)
日期加法还支持使用下面这种语法格式：
数，那么DATE_ADD（）函数将把日自动调整为当月的最大日期值。
如果interval是YEAR、MONTH或YEAR_MONTH，而计算结果中的日部分大于结果月的天
DATE_ADD('2003-12-0112:00:00*,INTERVAL*15:21′HOUR_SECOND)
被解释为*00:15：21·而不是+15:21：00′。
HOUR_SECOND 限定的输入格式是"hh:mm:ss"。如果表达式expr的值是'15:21'，那它将
'2003-12-31'
DATE_ADD('2003-12-31',INTERVAL2MONTH)
l
S或%s
说明符
或
+INTERVAL2MONTH
简写形式的月名（Jan，Feb，…，Dec）
月名（January，February，…，December)
周（01，…，53），以Monday（星期一）作为每周的第一天
周
周
三位数字形式的天数（001，002，，366）
数值形式的星期（O=Sunday，1=Monday，，6=Saturday）
带英语后缀的日（0th，1st，2nd，3rd，…….）
数值形式的日（0，1，2，，31）
两
简
AM或者PM
12小时制的时间（hh:m:ssAM或者hh:mm:ss PM)
24小时制的时间
数值形式的小时，12小时制（0，1，，12)
数值形式的小时，24小时制（0，1，，23）
两
两位数字形式的小时，24小时制（00，01，，
两位数字形式的分（00，01，，
两位数字形式的秒（00，01，，59）
六位数字形式的微秒（000000，000001，.）
（01，"，
1（00，…，53），以Sunday（星期日）作为每周的第一天
位数字形式的日
写形式的星期名（Sun，Mon，，Sat）
期名（Sunday，Monday，，Saturday）
位数字形式的小时，12小时制
（00，
53)，
53)，
(hh:mm:ss)
以Sunday（星期日）作为每周的第一天
以Monday（星期一）作为每周的第一天
（00，01，…，
含义
59）
→'The 1st of December
+
→*2004-02-29
'December 1,2014
2004-02-29
2004-02-29
2003-12-0112:15:21'
，23)
C.2函数
天
587
---
## Page 608
8