title:Analyzing Locality of Mobile Messaging Traffic using the MATAdOR Framework
author:Quirin Scheitle and
Matthias Wachs and
Johannes Zirngibl and
Georg Carle
Analyzing Locality of Mobile Messaging Traﬃc
using the MATAdOR Framework
Quirin Scheitle(B), Matthias Wachs, Johannes Zirngibl, and Georg Carle
Department of Informatics, Chair for Networking Services and Architectures,
Technical University of Munich (TUM), Munich, Germany
{scheitle,wachs,carle}@net.in.tum.de, PI:EMAIL
Abstract. Mobile messaging services have gained a large share in
global telecommunications. Unlike conventional services like phone calls,
text messages or email, they do not feature a standardized environ-
ment enabling a federated and potentially local service architecture. We
present an extensive and large-scale analysis of communication patterns
for four popular mobile messaging services between 28 countries and ana-
lyze the locality of communication and the resulting impact on user pri-
vacy. We show that server architectures for mobile messaging services are
highly centralized in single countries. This forces messages to drastically
deviate from a direct communication path, enabling hosting and trans-
fer countries to potentially intercept and censor traﬃc. To conduct this
work, we developed a measurement framework to analyze traﬃc of such
mobile messaging services. It allows to carry out automated experiments
with mobile messaging applications, is transparent to those applications
and does not require any modiﬁcations to the applications.
Keywords: Mobile messaging · Security · WhatsApp · WeChat ·
Threema · TextSecure
1 Introduction
Mobile messaging services like WeChat or WhatsApp see a steady increase in
both active users and messages sent, with a particular success in emerging mar-
kets like China, Brazil or Malaysia [18,30]. Some researchers predict a shift in
communication paradigms with mobile messaging services eradicating classical
forms of electronic communication like email or text messages. As an example,
the number of text messages sent in Germany shrunk by 62 % from 2012 to 2014
[6], after it had been growing exponentially for over a decade.
Mobile messaging services and their design strongly diﬀer from classic Inter-
net communication services: established means of communication—like email,
internet telephony or instant messaging—often rely on federated or decentral-
ized architectures, with operators providing services to their customers and from
within their domain.
Mobile messaging services tend to abandon established principles of openness
and federation: messaging services are often realized in a closed, non-federated,
c(cid:2) Springer International Publishing Switzerland 2016
T. Karagiannis and X. Dimitropoulos (Eds.): PAM 2016, LNCS 9631, pp. 190–202, 2016.
DOI: 10.1007/978-3-319-30505-9 15
Analyzing Locality of Mobile Messaging Traﬃc
191
cloud-centric environment built upon proprietary communication and security
protocols neither standardized nor disclosed to the public.
This paradigm shift puts at risk the user’s freedom and access to secure, con-
ﬁdential and privacy-preserving communication. With such services, the user—
relating to her social network through such applications—strongly depends on
the service provider to not modify or restrict the service. The user’s privacy also
depends on the legislation the operating company is subject to: governments
are often interested in controlling Internet services [14,31] and accessing mes-
sages [9] as well as metadata. The matters of security and privacy move along the
same lines and generally involve a full trust into a closed system, a misleading
assumption as we saw with WhatApp’s announced end-to-end-encryption, which
is supported on Android, but not Apple devices [1], without giving feedback on
encryption status to the user. First attempts to analyze the security properties
of mobile messaging services have for example been made by the EFF with its
Secure Messaging Scorecard [4].
In this work, we analyze the implications of mobile messaging services on the
users and their privacy. Similar to the discussion about a “nation-centric Inter-
net” [32], we set out to understand the communication behavior and patterns
of mobile messaging service by analyzing how local messaging traﬃc is from a
geographic and legal point of view. We analyze how messaging traﬃc is routed
through the Internet and which countries could therefore access this traﬃc. We
compare this path with the direct communication path which could have been
taken between communication partners to quantify the impact of mobile mes-
saging services. For this analysis, we developed an analysis platform and testbed
for mobile applications, called MATAdOR (Mobile Application Traﬃc Analysis
plattfORm). We use MATAdOR to exchange messages between a large num-
ber of communication partners distributed over the world using diﬀerent mobile
messaging applications and automatically extract information about the network
path the messages used.
Highlights of our results include: (a) Mobile messaging services largely dis-
tort traﬃc locality. (b) For Asian users (except Israel), Threema traﬃc is routed
through the U.S. and hence 5 Eyes accessible. (c) Even South American internal
traﬃc is routed through North America. (d) Europe-based users can reduce
5 Eyes access by routing messages through Threema’s Switzerland servers.
(e) Except WeChat, mobile messaging services showed globally uniform behavior.
2 Related Work
Several projects worked on analyzing the behavior and communication patterns
of mobile messaging services and the challenges arising when conducting auto-
mated experiments with mobile devices and applications.
Fiadino et al. [7] investigated characteristics of WhatsApp communication
based on a set of mobile network trace data from February 2014. In this set, they
identiﬁed every DNS request to WhatsApp and resolved them in a distributed
way through the RIPE Atlas service. They found the corresponding address to
192
Q. Scheitle et al.
be exclusively located in the U.S. and focussed further on Quality of Experience
analysis. Huang et al. [10] did similar work on WeChat, using network traces as
well as controlled experiments. For the latter, they connected phones through
WLAN, but relied on heavy manual work for message sending and traﬃc analy-
sis. They do not mention a capability to proxy traﬃc out through remote nodes.
On the collected data, they heavily focus on dissecting the protocol and archi-
tecture. Mueller et al. [16] researched security for a wide set of mobile messaging
services and found many weaknesses, e.g. on the authentication bootstrapping
process. They used a testbed similar to MATAdOR, but had to explicitly con-
ﬁgure the mobile device’s proxy settings. Frosch et al. [8] provided a detailed
protocol analysis for TextSecure based on its source code. The life cycle of net-
work experiments, automated experimentation and testbed management is in
the focus of several related projects. The OpenLab Project1 focuses on improv-
ing network experimentation for future distributed and federated testbeds and
to provide tools to researchers. Various tools for supporting testbed setup and
experimentation exist [19], but many are outdated or unavailable. None of these
tools support experimentation with mobile devices or geographic diversion of
network traﬃc.
[33] provides an extensive list of commercial platforms aiming to integrate
functional mobile application testing in the software development cycle. Many
platforms support the use of real devices and some even provide testing over
mobile carrier networks to ensure functionality. Many solutions are only provided
as a paid service.
3 Analyzing Communication of Mobile Messaging
Applications
In order to analyze the impact of mobile messaging services on traﬃc locality,
our approach is to compare the network path, deﬁned as direct network path
between communication partners obtained with forward path measurements,
and the application path, deﬁned as the forward path measurements from both
partners to the mobile messaging service’s backend infrastructure.
We use the MATAdOR testbed to send a large number of messages using dif-
ferent mobile messaging services between communication partners distributed all
over the globe. To do so, we use MATAdOR equipped with two mobile devices
and the mobile messaging application under test. MATAdOR tunnels the appli-
cation traﬃc to PlanetLab nodes as depicted in Fig. 1. We intercept the applica-
tions’ communication and extract the communication endpoints. Based on this
information, we conduct forward path measurements to the mobile messaging
service’s backend servers to obtain the application path and between the nodes
to obtain the network path.
We map the hops in both application path and network path to countries
and analyze which jurisdictions and political frameworks the traﬃc traverses on
1 http://www.ict-openlab.eu
Analyzing Locality of Mobile Messaging Traﬃc
193
its way between communication partners. As a result, we can give a qualiﬁed
analysis how much the application path and the network path diﬀer and if traﬃc
is conﬁned to a geographic region when both partners are located in this region.
3.1 Experimental Setup
The experimental setup of MATAdOR consists of a dedicated controller node,
two WLAN routers, two Android mobile phones and the PlanetLab proxy nodes
as depicted in Fig. 1. The controller node orchestrates the overall experimenta-
tion process, conﬁgures the WLAN routers, conﬁgures the Android devices and
instruments them to send messages. Device instrumentation is realized using
the Android Debug Bridge to conﬁgure network connections, start applications,
and issue input events to the devices to automate message sending. The routers
spawn two wireless networks and establish tunnels to the respective PlanetLab
nodes. The router’s task is to route, intercept and modify traﬃc as well as to
automatically parse network traces and start path measurements to targets. To
leverage PlanetLab for this experiment, we use a tool currently under develop-
ment at our chair. This tool is able to transparently proxy traﬃc over PlanetLab
nodes. It is currently in beta status and pending public release.
WLAN
USB USB
WLAN
Controller
Router
Router
Tunnel
Proxy
Node
Tunnel
Proxy
Node
Phone 1
Phone 2
send message 1
send message 3
0s
5s
10s
15s
send message 2
send message 4
0s
5s
10s
15s
30-620s
end of experiment
30-620s
Fig. 1. Overall experiment design.
Fig. 2. Overview of messaging timers
Mobile Phone Conﬁguration. To run the mobile messaging applications, we