# Analyzing Locality of Mobile Messaging Traffic Using the MATAdOR Framework

**Authors:**
- Quirin Scheitle
- Matthias Wachs
- Johannes Zirngibl
- Georg Carle

**Affiliation:**
Department of Informatics, Chair for Networking Services and Architectures, Technical University of Munich (TUM), Munich, Germany

**Contact:**
- {scheitle, wachs, carle}@net.in.tum.de
- PI: EMAIL

## Abstract
Mobile messaging services have become a significant part of global telecommunications. Unlike traditional services such as phone calls, text messages, or email, these services do not operate in a standardized environment that supports a federated and potentially local service architecture. This paper presents an extensive, large-scale analysis of communication patterns for four popular mobile messaging services across 28 countries, focusing on the locality of communication and its impact on user privacy. Our findings indicate that the server architectures for mobile messaging services are highly centralized, often in single countries. This centralization forces messages to travel through indirect routes, potentially enabling hosting and transit countries to intercept and censor traffic. To conduct this study, we developed the MATAdOR (Mobile Application Traffic Analysis plattfORm) framework, which allows for automated, transparent experiments with mobile messaging applications without requiring any modifications to the applications.

**Keywords:** 
- Mobile messaging
- Security
- WhatsApp
- WeChat
- Threema
- TextSecure

## 1. Introduction
Mobile messaging services like WeChat and WhatsApp have seen a steady increase in both active users and message volume, particularly in emerging markets such as China, Brazil, and Malaysia [18,30]. Some researchers predict that these services will eventually replace traditional forms of electronic communication, such as email and text messages. For example, in Germany, the number of text messages sent decreased by 62% from 2012 to 2014 [6], following decades of exponential growth.

Mobile messaging services differ significantly from classic Internet communication services like email, internet telephony, or instant messaging, which often rely on federated or decentralized architectures. In contrast, mobile messaging services typically operate in a closed, non-federated, cloud-centric environment using proprietary communication and security protocols that are neither standardized nor publicly disclosed.

This paradigm shift poses risks to users' freedom and access to secure, confidential, and privacy-preserving communication. Users depend heavily on the service provider to maintain the integrity and accessibility of the service. Additionally, user privacy is subject to the legal frameworks of the operating company's jurisdiction. Governments often seek to control and monitor Internet services [14,31] and access messages and metadata [9]. The security and privacy concerns in these services generally require full trust in a closed system, which can be misleading, as seen with WhatsApp’s end-to-end encryption, which is supported on Android but not on Apple devices [1].

In this work, we analyze the implications of mobile messaging services on user privacy. Similar to discussions about a "nation-centric Internet" [32], we aim to understand the geographic and legal aspects of mobile messaging traffic. We examine how messaging traffic is routed through the Internet and which countries could potentially access this traffic. We compare this routing with the direct communication path to quantify the impact of mobile messaging services. For this analysis, we developed the MATAdOR framework, which allows us to exchange messages between a large number of globally distributed communication partners using different mobile messaging applications and automatically extract information about the network paths used.

Key findings include:
- Mobile messaging services significantly distort traffic locality.
- For Asian users (excluding Israel), Threema traffic is routed through the U.S., making it accessible to the Five Eyes intelligence alliance.
- Even internal South American traffic is routed through North America.
- Europe-based users can reduce Five Eyes access by routing messages through Threema’s servers in Switzerland.
- Except for WeChat, mobile messaging services exhibit globally uniform behavior.

## 2. Related Work
Several projects have analyzed the behavior and communication patterns of mobile messaging services and the challenges of conducting automated experiments with mobile devices and applications.

Fiadino et al. [7] investigated WhatsApp communication characteristics using mobile network trace data from February 2014. They identified DNS requests to WhatsApp and resolved them using the RIPE Atlas service, finding that all corresponding addresses were located in the U.S. They focused on Quality of Experience analysis. Huang et al. [10] conducted similar work on WeChat, using network traces and controlled experiments. They connected phones via WLAN and manually sent messages and analyzed traffic. They did not mention the capability to proxy traffic through remote nodes and focused on dissecting the protocol and architecture.

Mueller et al. [16] researched security for a wide range of mobile messaging services and found numerous weaknesses, such as in the authentication bootstrapping process. They used a testbed similar to MATAdOR but had to explicitly configure the mobile device’s proxy settings. Frosch et al. [8] provided a detailed protocol analysis for TextSecure based on its source code. The OpenLab Project [1] focuses on improving network experimentation for future distributed and federated testbeds and providing tools to researchers. Various tools support testbed setup and experimentation, but many are outdated or unavailable, and none support experimentation with mobile devices or geographic diversion of network traffic.

[33] provides an extensive list of commercial platforms aimed at integrating functional mobile application testing into the software development cycle. Many platforms support the use of real devices and some even provide testing over mobile carrier networks to ensure functionality. However, most solutions are only available as paid services.

## 3. Analyzing Communication of Mobile Messaging Applications
To analyze the impact of mobile messaging services on traffic locality, we compare the direct network path between communication partners with the application path, defined as the forward path measurements from both partners to the mobile messaging service’s backend infrastructure.

We use the MATAdOR testbed to send a large number of messages using different mobile messaging services between communication partners distributed globally. MATAdOR is equipped with two mobile devices and the mobile messaging application under test. It tunnels the application traffic to PlanetLab nodes, as shown in Figure 1. We intercept the applications’ communication and extract the communication endpoints. Based on this information, we conduct forward path measurements to the mobile messaging service’s backend servers to obtain the application path and between the nodes to obtain the network path.

We map the hops in both the application path and the network path to countries and analyze the jurisdictions and political frameworks the traffic traverses. This allows us to provide a qualified analysis of how much the application path and the network path differ and whether traffic is confined to a geographic region when both partners are located in that region.

### 3.1. Experimental Setup
The experimental setup of MATAdOR consists of a dedicated controller node, two WLAN routers, two Android mobile phones, and PlanetLab proxy nodes, as depicted in Figure 1. The controller node orchestrates the overall experimentation process, configures the WLAN routers, configures the Android devices, and instruments them to send messages. Device instrumentation is realized using the Android Debug Bridge to configure network connections, start applications, and issue input events to automate message sending. The routers create two wireless networks and establish tunnels to the respective PlanetLab nodes. The routers route, intercept, and modify traffic, and automatically parse network traces and start path measurements to targets. To leverage PlanetLab for this experiment, we use a tool currently under development at our chair. This tool can transparently proxy traffic over PlanetLab nodes and is currently in beta status, pending public release.

**Figure 1.** Overall experiment design.

**Figure 2.** Overview of messaging timers

**Mobile Phone Configuration:**
To run the mobile messaging applications, we...