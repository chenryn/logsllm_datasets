Invocation behavior
Mediation
Composition
Trading Partner Management
Service level guarantees
37
Truth & Vision
Data Definitions
Open Application Group (http://www.openapplications.org)
RosettaNet (http://www.rosettanet.com)
EDI (http://www.x12.org)
SWIFT (http://www.swift.com)
UBL (http://www.oasis-open.org/committees/ubl)
Many, many more in all major application domains
See The XML Cover Pages :
http://www.oasis-open.org/cover/sgml-xml.html
Not yet using ontology languages, but XML schema or
equivalent syntax to define documents
38
Truth & Vision
Example OAGIS PO
39
Truth & Vision
Example EDI 850 ( Purchase Order )
GS~PO~ERPTEST~IMPEXP~20000512~1352~142~X~004010
ST~850~0001
BEG~00~NE~616000000096~~20000420
PER~BD~JACKSON, DEBBIE
FOB~DF~ZZ~Road Freight
N1~SU~SUPPLIER NAME INC~92~999888
N2~SUPPLIER REP
PO1~0001~2~EA~~~PN~BOEING PART NUMBER 19
CTP~~~0~2~EA
PID~F~~~~Burns Part
TD5~~GA~RD
TXI~LS~~100~CD~46020106~~~~178 000 010
SCH~2~EA~~~002~20000420
N9~55~0000
N9~TX~R&D EX
N9~C7~0000
40
Vision & Truth
Invocation Behavior
No related work for synchronous invocations
RPC Would be a stretch
P2P approach for asynchronous invocations
RosettaNet (http://www.rosettanet.org)
Partner Interface Process (PIPs) defining the behavior of both
interaction trading partner
Domain specific behavior definition
Web-services conversation language (WSCL)
http://www.w3.org/TR/wscl10
Specification language for behavior
41
Vision & Truth
Example RosettaNet PIP 3A4
START : Buyer : Seller
[ TRANSACTION = CREATE ]
PO Transaction?
Create Purchase Order
Purchase Order Acceptance
[ FAIL ] [ SUCCESS ]
FAILED END
Purchase Order Process
Request Purchase Order
[ TRANSACTION = CHANGE ]
Change Purchase Order
Purchase Order Acceptance
[ FAIL ] [ SUCCESS ]
FAILED END
Purchase Order Process Purchase
[ TRANSACTION = Change Order Change 42
CANCEL ]
Vision & Truth
WSCL
43
Vision & Truth
Mediation
Problem definition
Matching internal and external
Data definition
Event exchange behavior
Data definition example
EDI purchase order to be matched with RosettaNet
purchase order
Behavior Example
EDI behavior ( No acknowledgements ) to be matched with
RosettaNet partner interface process ( with
acknowledgements )
44
Vision & Truth
Composition
So far unclear definition of “Composition” :
Composition in the part-of sense, i.e. larger part encapsulates
web-services and exposes itself as a web-service
Analogy : method invocations as part of method definition
Composition in the sequencing sense, i.e. definition of
the invocation order of web-services
Behavior as discussed earlier
Proposed language for “composition”
WSFL (Web Services Flow Language)
BPML (Business Process Modeling Language)
ebXMl BPSS (Business Process Specification Schema)
BPEL4WS (Business Process Execution Language for
Web Services)
45
Vision & Truth
Composition (Continued)
WSFL
http://www-3.ibm.com/software/solutions/webservices/pdf/WSFL.pdf
Message Definitions
Port types
Set of operations with their input and output messages
Service Provider
Set of Port types
Flow Model
Flow model for each service provider. Defines invocation sequence of operations
of port types
Global Model
Relates operations of all service providers.
Page 85, ticket order example gives good insight into the workings of
WSFL
46
Vision & Truth
WSFL Example
47
Vision & Truth
Composition (Continued)
BPML (http://www.bpmi.org)
BPML is a workflow definition language with no references
to web services or their composition
Data format is XML since process language contains
XPATH expressions
Very elaborate process model that includes concepts for
Inter-workflow communication (message exchange between
ongoing workflow instances )
Participants
Closed and open transactions
Compensation
recovery
48
Vision & Truth
BPML example
…
 49
Vision & Truth
BPML example (Continued)
50
Vision & Truth
Composition (Continued)
ebXML BPSS (http://www.ebxml.org)
Look under “Specifications”
ebXML BPSS is a Process Specification Language
Specific emphasis on document exchange
Business data messages
Acknowledgement messages
Message activities
Non-repudiation
Confidential
Encrypted
51
Vision & Truth
ebXML BPSS example
Please refer to the specification; language (XML) is chatty ;-)
52
Vision & Truth
Composition(continued)
XLANG
www.gotdotnet.com/team/xml_wsspecs/xlang-c/default.htm
Extension of WSDL for behavior definition
Main constructs (block structured)
Activation operation, i.e WSDL operation that starts the
behavior
Operation, delayFor, delayUntil, raise
Empty, Sequence, Switch, While, All, Pick
Correlation
Context
53
Vision & Truth
XLANG Example
54
Vision & Truth
Trading partner management
ebXML
CPP:Collaboration partner profile: Properties of collaboration
partners
CPA : Collaboration partner agreement.Agreement between
collaboration partners about the rules of engagement
EDI
Document type 838 that allows the communication of trading
partner attributes
ERPs
ERP internal management of trading partner information that is
available and accessible
55
Vision & Truth
Service level guarantees
Reliable message transmission over unreliable network
RosettaNet
Time-outs for expected delays in responses (“time to perform”)
Retry counter
Resending of messages
Agreement in which state interaction considered failure or success, no
explicit message sent to indicate failed or succeeded behavior
Emerging : business transactions
Security
Signatures, encryption, non-repudiation
Emerging: web services security (see earlier)
56
Vision & Truth
DAML-S - An overview
DAML (DARPA Agent Markup Language)
DAML-S: Upper ontology of web services
provides
Resource Service
presents supports
describedBy
Service
ServiceProfile ServiceModel
Grounding
what the how the how to access
service does service works the service
. input types . communication protocol
. output types (RPC, HTTP, …)
. preconditions . port number
. postconditions . marshalling/serialization
. binding patterns 57
Truth & Vision
Trading partner management
www.daml.org/services
Subclass Of Service Model : ProcessModel
Process (defined in Process Ontology)
Process control (defined in process Control Ontology)
Process Ontology
Process
Atomic, simple process and composite process
Control constructs
Sequence, Spit, Unordered, Split+Join, Choice, If-Then-Else, Iterate,
Repeat_Until
Process Control Ontology, Time, Resources
Section 2 of the tutorial will introduce DAML-S in more detail
58
Vision & Truth
Questions ?
59
Web Services
Composition
Jorge Cardoso1, Christoph Bussler2, Amit Sheth1, 4, Dieter Fensel3
1LSDIS Lab, Computer Science, University of Georgia
2Oracle Corporation
3 Universität Innsbruck
4 Semagix, Inc
Objective
The Internet provides a valuable infrastructure to
support new business models such as
E-services, E-commerce, Business-to-Business
(B2B), Business-to-Customer (B2C), Customer-to-
customer (C2C), Virtual Organizations, etc.
To support these models, research and new
solutions need to be explored.
One important aspect is the composition of
processes.
61
Requirements for Making Web
Services a Working Technology
UDDI, WSDL, and SOAP are important steps into the
direction of a web populated by services.
However, they only address part of the overall stack
that needs to be available in order to achieve the
above vision eventually.
There are many layer required to achieve automatic
web service discovery, selection, mediation and
composition into complex services.
62
Requirements for Making Web
Services a Working Technology
Document Structure
Semantics
Process Definition
Message layer (receiving, understanding)
Packaging
Transport binding
Security ...
63
Requirements for Making Web
Services a Working Technology
Document Structure
Document types describe the content of business
documents like purchase orders or invoices.
The content is defined in terms of elements like an order
number or a line item price.
Document types are instantiated with actual business
data when a service requester and a service provider
exchange data.
The payload of the messages sent back and forth are
structured according to the document types defined.
64
Requirements for Making Web
Services a Working Technology
Semantics
The elements of document types must be populated
with correct values so that they are semantically
correct and are interpreted correctly by the service
requesters and providers.
This requires that vocabulary is defined that
enumerates or describes valid element values.
For example, a list of product names or products that
can be ordered from a manufacturer. Further
examples are unit of measures as well as country
codes.
65
Requirements for Making Web
Services a Working Technology
Process definition
Based on the assumption that messages can be exchanged the
business logic has to be defined in terms of the business
message exchange sequence.
For example, a purchase order might have to be confirmed with
a purchase order acknowledgment. Or, a request for quotation
can be responded to by one or more quotes.
These processes define the required business message logic in
order to derive to a consistent business state. For example,
when good are ordered by a purchase order and confirmed by a
purchase order acknowledgment they have to be shipped and
paid, too.
66
Requirements for Making Web
Services a Working Technology
Exchange sequence definition
Communication over networks are currently
inherently unreliable.
It is therefore required that service requester and
service provider make sure themselves through
protocols that messages are transmitted exactly
once.
The exchange sequence definition achieves this
by defining a sequence of acknowledgment
messages in addition to time-outs, retry logic and
upper retry limits.
67
Requirements for Making Web
Services a Working Technology
Transport binding
Several transport mechanisms are available like
HTTP/S, S/MIME, FTP or EDIINT.
A service requester as well as service provider
have to agree on the transport to be used when
service requests are executed.
For each available transport the layout of the
message must be agreed upon and how the
document sent is represented in the message
sent.
68
Web Services
Composition
Composition is the task of combining and linking existing
Web Services and other components to create new
processes.
It adds value to the collection of services, by
orchestrating them according to the requirement of the
problem.
Types of Composition
Static Composition - services to be composed are decided at
design time
Dynamic Composition - services to be composed are decided at
run-time
69
Web Service Composition
Issues
 Representation of an Abstract Web Process
Representing/specifying the abstract process in a proper form
 Discovery and Interoperability of Services
Need to manually or automatically search for appropriate services
The discovered services should interoperate
 Efficiency of a Composed Web Process
Need to compose processes which are efficient in terms of performance
Process Execution
Adopting a suitable technique for executing the composed concrete
process
Process Monitoring