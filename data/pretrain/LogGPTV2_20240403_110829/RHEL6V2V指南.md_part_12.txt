|                   |                                                  |
|                   | :   ::: para                                     |
|                   |     指定只有一个可用的 root                      |
|                   |     设备。如果                                   |
|                   | 检测到多于一个设备，[**virt-v2v**]{.application} |
|                   |     将会失败。                                   |
|                   |     :::                                          |
|                   |                                                  |
|                   | [``{.literal}]{.term}                      |
|                   |                                                  |
|                   | :   ::: para                                     |
|                   |     指定使用特定的 root                          |
|                   |     设备。例如，`--root=/dev/sda2`{.literal}     |
|                   |     代表第一个硬盘中的第                         |
|                   | 二个分区。如果所指定的设备不存在，或没有被检测为 |
|                   |     root 设备，[**virt-v2v**]{.application}      |
|                   |     将失败。                                     |
|                   |     :::                                          |
|                   | :::                                              |
+-------------------+--------------------------------------------------+
| ::: para          | ::: para                                         |
| `--list-pr        | 显示配置文件中的目标配置集名列表。               |
| ofiles`{.literal} | :::                                              |
| :::               |                                                  |
+-------------------+--------------------------------------------------+
| ::: para          | 显示帮助信息。                                   |
| `                 |                                                  |
| --help`{.literal} |                                                  |
| :::               |                                                  |
+-------------------+--------------------------------------------------+
| ::: para          | 显示版本号后退出。                               |
| `--v              |                                                  |
| ersion`{.literal} |                                                  |
| :::               |                                                  |
+-------------------+--------------------------------------------------+
:::
:::
::: section
::: titlepage
# [⁠]{#chap-V2V_Guide-References.html#sect-V2V_Guide-References-Configuration_Changes}7.2. 配置改变 {.title}
:::
::: para
除了正确配置 libvirt 外，`virt-v2v`{.command}
还会对虚拟机做特定的改变来使它在 KVM 虚拟机监控程序上运行（使用或不使用
virtIO 驱动）。这些改变取决于虚拟机的操作系统，这里的信息适用于支持的
Red Hat Enterprise Linux 版本和 Windows.
:::
::: section
::: titlepage
## [⁠]{#chap-V2V_Guide-References.html#References_Virtualization__virt-v2v_Configuration_Changes_Linux}7.2.1. Linux 虚拟机的配置改变 {.title}
:::
::: table
[⁠]{#chap-V2V_Guide-References.html#References_Virtualization__virt-v2v_Configuration_Changes_Linux_changes-to-vm}
**表 7.1. virt-v2v 对 Linux 虚拟机进行的改变**
::: table-contents
  改变             描述
  ---------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  内核             不能引导的内核（如 Xen 准虚拟化内核）将会被卸载。如果剩下的内核支持 VirtIO，则不会安装新内核。如果剩下的内核不支持 VirtIO，配置文件指定了一个新内核，这个新内核会被安装并被配置为默认内核。
  X 重新配置       如果虚拟机配置了 X，它的显示驱动将会被更新。如需了解哪些驱动要被使用，请参阅 [表 7.2 "在 Linux 虚拟机上配置驱动"](#chap-V2V_Guide-References.html#References_Virtualization__virt-v2v_Configuration_Changes_Linux_drivers){.xref}。
  重新命名块设备   如果重新配置会导致块设备改变它的名字，这些改变会反应在 `/etc/fstab`{.filename} 中。
  配置设备驱动     无论使用 VirtIO 还是非 VirtIO 驱动，`virt-v2v`{.command} 都会保证正确的网络和块设备驱动出现在 modprobe 配置中。
  initrd           无论使用还是不使用 VirtIO，`virt-v2v`{.command} 都将会保证默认内核的 initrd 支持引导 root 设备。
  SELinux          `virt-v2v`{.command} 将会在虚拟机下一次引导时进行重新标识（relabel），这可以保证所做的任何改变都可以根据虚拟机的本地策略被正确标识。
:::
:::
::: para
`virt-v2v`{.command} 将会在 Linux 虚拟机上配置以下驱动：
:::
::: table
[⁠]{#chap-V2V_Guide-References.html#References_Virtualization__virt-v2v_Configuration_Changes_Linux_drivers}
**表 7.2. 在 Linux 虚拟机上配置驱动**
::: table-contents
  准虚拟化驱动类型                          驱动模块
  ----------------------------------------- ------------
  显示                                      cirrus
  存储                                      virtio_blk
  网络                                      virtio_net
  另外，initrd 会预先加载 virtio_pci 驱动    
  其它驱动    
  ---------- ----------------
  显示       cirrus
  块设备     虚拟化的 IDE
  网络       虚拟化的 e1000
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-V2V_Guide-References.html#sect-V2V_Guide-Configuration_Changes-Configuration_Changes_for_Windows_Virtual_Machines}7.2.2. Windows 虚拟机的配置改变 {.title}
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
在转换 Windows 虚拟机前，请确认运行 `virt-v2v`{.command}
的主机上已经安装了 [libguestfs-winsupport]{.package} 和
[virtio-win]{.package} 软件包。这些软件包提供了对 NTFS 和 Windows
准虚拟化块设备和网络的驱动。如果您在没有安装
[libguestfs-winsupport]{.package} 软件包的情况下转换使用 NTFS
的虚拟机，转换过程将会失败。如果您在没有安装 [virtio-win]{.package}
软件包的情况下转换 Windows 虚拟机，转换过程同样会失败。请参阅
[第 4.3.1.2 节 "为转换一个运行 Windows
的虚拟机做准备"](#chap-V2V-VMS_To_Run_on_RHEV.html#sect-Preparing_to_convert_a_virtual_machine_running_Windows){.xref}
来获得更多相关信息。
:::
:::
:::
::: para
[**virt-v2v**]{.application} 可以转换运行 Windows XP、Windows
Vista、Windows 7、Windows Server 2003 和 Windows Server 2008
的虚拟机。转换 Windows 虚拟机的过程与转换 Linux
虚拟机的过程稍有不同。Windows 虚拟机的映像会以以下方式转换：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    [**virt-v2v**]{.application} 安装 VirtIO 块驱动。
    :::
2.  ::: para
    [**virt-v2v**]{.application} 安装 CDUpgrader 应用程序。
    :::
3.  ::: para
    [**virt-v2v**]{.application} 把 VirtIO 块设备和网络驱动复制到
    `%SystemRoot%\Drivers\VirtIO`{.filename}。[virtio-win]{.package}
    软件包不包括 Windows 7 和 Windows XP
    的网络驱动。对于这些操作系统，使用 rtl8139
    网络驱动。虚拟机需要已经具备了对 rtl8139 支持的能力。
    :::
4.  ::: para
    [**virt-v2v**]{.application} 把
    `%SystemRoot%\Drivers\VirtIO`{.filename} 添加到
    `DevicePath`{.systemitem}
    中，这意味着当检测到新设备时，这个目录会被自动作为搜索目录来在其中寻找设备的驱动。
    :::
5.  ::: para
    [**virt-v2v**]{.application} 对注册表进行修改，把 VirtIO
    块设备驱动包括在注册表的 `CriticalDeviceDatabase`{.systemitem}
    项中，并保证在下一次引导时启动 CDUpgrader 服务。
    :::
:::
::: para
到目前为止，[**virt-v2v**]{.application}
已经完成了转换过程。被转换的虚拟机可以正常工作。如果转换的虚拟机运行于由
libvirt 管理的 KVM 中，整个转换过程已经结束；如果转换的虚拟机运行于 Red
Hat Enterprise Virtualization，Red Hat Enterprise Virtualization Manager
将会进行一些额外的操作来完成整个转换过程。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    虚拟机被导入并运行在 Manager 上。请参阅 *Red Hat Enterprise
    Virtualization 管理指南* 来获得更详细的信息。
    :::
    ::: important
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    第一次引导过程会需要几分钟来完成，在这个过程中系统不能被中断。在启动虚拟机后，这个引导过程将不需要管理员的操作。为了保证这个过程不被中断，用户在这个过程完成前不要登录到虚拟机。您可以通过
    Manager GUI 来查看这个过程的进度。
    :::
    :::
    :::
2.  ::: para
    如果 guest 工具程序 ISO 已经被上传到 Manager（如 [第 4.3.1.2 节
    "为转换一个运行 Windows
    的虚拟机做准备"](#chap-V2V-VMS_To_Run_on_RHEV.html#sect-Preparing_to_convert_a_virtual_machine_running_Windows){.xref}
    所述），Manager 会把 guest 工具程序 CD 附加到虚拟机。
    :::
3.  ::: para
    CDUpgrader 会检测到 guest 工具程序 ISO 并从其中安装所有的 VirtIO
    驱动（包括 [virtio-win]{.package} 中没有的工具程序）。如果 guest
    工具程序 ISO 所包括的 VirtIO 驱动比以前从 [virtio-win]{.package}
    中安装的驱动版本更高，这个驱动会被重新安装。这可以保证工具程序都是最新的。
    :::
:::
:::
:::
:::
[]{#Appendix_Additional_Procedures.html}
::: appendix
::: titlepage
# [⁠]{#Appendix_Additional_Procedures.html#Appendix_Additional_Procedures}附录 A. 额外步骤 {.title}
:::
::: section
::: titlepage
# [⁠]{#Appendix_Additional_Procedures.html#Creating_Bootable_Media}A.1. 创建可引导介质 {.title}
:::
::: para
P2V Client 可以通过 PXE、可引导 USB 设备或光驱设备来引导。LiveOS
目录中的 [**rhel-6.x-p2v.iso**]{.application} ISO
包括了为引导做准备所需的脚本。
:::
::: section
::: titlepage
## [⁠]{#Appendix_Additional_Procedures.html#From_CD}A.1.1. 创建一个 P2V client 引导 CD {.title}
:::
::: para
不同计算机使用映像文件创建 CD
的实际操作步骤有很大不同，这和操作系统以及安装的刻录软件有关。这里介绍了使用在
Red Hat Enterprise Linux 6 上安装的 [**Brasero**]{.application}
把映像文件刻录到光盘的方法。
:::
::: para
请确定您的磁盘刻录软件可以使用映像文件刻录。虽然大多数磁盘刻录软件都有此功能，但也确有例外。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    把一张可写的空白 CD 插入到计算机的 CD 或 DVD 刻录机中。
    :::
2.  ::: para
    打开 [**Applications**]{.guilabel} 菜单，选择 [**Sound and
    Video**]{.guimenuitem} 子菜单，点 [**Brasero Disk
    Burner**]{.guimenuitem}。
    :::
3.  ::: para
    点 [**Burn Image**]{.guibutton} 按钮。
    :::
4.  ::: para
    点 [**Click here to select a disc image**]{.guibutton} 按钮。
    :::
5.  ::: para
    找到并选择 [**rhel-6.x-p2v.iso**]{.application}。
    :::
6.  ::: para
    点 [**Burn**]{.guibutton}。
    :::
:::
::: para
您可能需要修改 BIOS 的设置来允许从 DVD/CD-ROM 驱动引导。
:::
:::
::: section
::: titlepage
## [⁠]{#Appendix_Additional_Procedures.html#From_USB}A.1.2. 创建一个可引导的 P2V USB 介质 {.title}
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    以 root 的身份挂载 [**rhel-6.x-p2v.iso**]{.application}：
    :::
    ``` screen
    mkdir /mnt/p2vmount
    ```
    ``` screen
    mount -o loop rhel-6.x-p2v.iso /mnt/p2vmount
    ```
2.  ::: para
    把 USB 设备插入到您的计算机。为了使
    [**livecd-iso-to-disk**]{.application} 脚本可以正常工作，USB
    的文件系统[*必须*]{.emphasis}格式化为 vfat、ext\[234\] 或 btrfs。
    :::
3.  ::: para
    在一个终端中以 root 身份运行 [**livecd-iso-to-disk**]{.application}
    脚本：
    :::
    ``` screen
    bash /mnt/p2vmount/LiveOS/livecd-iso-to-disk /PATH/TO/rhel-6.x-p2v.iso /dev/YOURUSBDEVICE
    ```
4.  ::: para
    当脚本成功运行完成后，弹出 USB 设备。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#Appendix_Additional_Procedures.html#From_PXE}A.1.3. 创建一个 PXE 引导映像 {.title}
:::