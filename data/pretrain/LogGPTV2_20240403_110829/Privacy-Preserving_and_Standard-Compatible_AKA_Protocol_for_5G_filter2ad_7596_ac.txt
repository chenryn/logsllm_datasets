• Increase SQNHN by 1.
Then, the HN sends AV to SN. Upon receiving AV, the SN
stores HXRES, RAND and Kseaf , and sends (RAND, AUTN)
to the UE. Next, the UE checks the message and calculates the
response by calling the SIM card’s AUTHENTICATE command
with (RAND,AUTN). This command is shown in Figure 5,
and also described as follows:
• The SIM card calculates AK with k and RAND via f5, parses
AUTN as {CONC,MAC}, and de-conceals SQNHN.
• Then, it checks the validity of RAND and SQNHN with MAC.
If this check fails, the SIM card responds with a failure mes-
sage (denoted by ⊥). Then, the UE sends a Mac_Failure
message to SN (See Case i in Figure 4).
• Next, it checks the freshness of AV with SQNHN. If this
check fails, the SIM card responds with an AUTS message
which conceals SQNUE. Then, the UE re-synchronizes with
HN by sending Sync_Failure and AUTS to the SN (See
Case ii in Figure 4).
• If all checks hold, the SIM card sets SQNUE by SQNHN,
derives Kseaf with k, RAND, IDSN and SQNHN, calculates
a response RES using k and RAND. and ﬁnally returns
(Kseaf ,RES). The UE stores Kseaf , and sends RES to the
SN (See Case iii in Figure 4).
Upon receiving RES, the SN checks its validity by calcu-
lating the hashed value of RES and RAND, and comparing it
with HXRES. It then forwards RES to the HN. Next, the HN
authenticates UE by comparing RES with its stored XRES,
and sends SUPI to the SN if they are matching. The SN con-
tinues the protocol only when both checks hold, and rejects
the authentication otherwise.
When all checks pass, the SN and UE communicate with
the session keys derived from anchor keys (i.e., Kseaf ) in
subsequent 5G procedures. TS 33.501 [20] also speciﬁes
that the UE and SN should conﬁrm the keys agreed and the
identities of each other implicitly through the successful use
of keys in subsequent procedures, which can be expressed by
a key-conﬁrmation round trip with Kseaf .
Re-synchronization between UE and HN. In the following,
we give a more detailed description on the re-synchronization
mechanism of sequence numbers between the UE and HN. It
allows the UE to verify the freshness of message and reject a
replayed message.
A UE checks the freshness of (RAND,AUTN) via verifying
SQNUE < SQNHN, and optionally checks SQNHN < SQNUE +
∆. The former condition ensures that a replayed message can
be detected and rejected, and the latter is designed to prevent
the wrap around of SQNUE. Moreover, 3GPP also provides
a recommended value of ∆ = 228 in TS 33.102 [19] so as to
decrease the failure rate due to synchronization failure.
If this check fails, the UE re-synchronizes with the HN
by sending a concealed SQNUE in an authenticated man-
ner with an AUTS, where RAND is used to generate AK∗
and MAC∗ as shown by Figure 5. Upon the reception of
UE’s re-synchronization message, the SN and HN interact
as in Figure 4. In particular, the SN sends (Sync_Failure,
AUTS,RAND,SUCI) to the HN. Then, the HN de-conceals
SQNUE with the anonymity key derived from k and RAND,
and checks its authenticity with MAC∗. If the check holds, the
HN re-sets SQNHN by SQNUE + 1.
3.3 The Linkability Attacks in 5G-AKA.
Currently, three types of linkability attacks have been found
in 5G-AKA, which are described as follows:
• Failure Message Linkability Attack [22, 24]. In this attack,
the attacker records a (RAND,AUTN) message that the HN
sends to the target UE, and replays it to all UEs in the attack
area. Upon receiving such a message, the target UE passes
the check on MAC as it is generated with the correct k,
but fails the next check on freshness since the message is
replayed, and replies with a Sync_Failure message, while
the other UEs all fail the check on MAC and reply with
MAC_Failure messages.
USENIX Association
30th USENIX Security Symposium    3601
• Sequence Number Inference Attack [26]. This attack is
performed in the same way as the ﬁrst attack, where a
(RAND,AUTN) is replayed. But it furthermore enables the
attacker to obtain the increase pattern or even particular
digits of the target UE’s SQNUE. In particular, the attacker
replays a (RAND,AUTN) several times, where each time
the target UE replies with a synchronization failure mes-
sage containing CONC_SQNUE ← SQNUE ⊕ f(cid:48)
5(k,RAND).
Then, denoting the target UE’s SQNUE in two differ-
ent tests by SQN1
UE, the attacker can learn
UE ⊕ CONC_SQN2
SQN1
UE,
as SQN1
UE and SQN2
UE are concealed with the same key
via the XOR operation.
UE with CONC_SQN1
UE and SQN2
UE ⊕ SQN2
• Encrypted SUPI Replay Attack [35, 43]. In this attack, the
attacker records an SUCI sent by the target UE and replays
it to the HN in all UEs’ sessions, and waits for the UEs
to reply to the HN’s challenge messages. The target UE
will reply without failure message (i.e., both checks hold),
while the others will all send MAC_Failure messages as
the HN uses the k shared with the target UE to calculate
their MACs.
4 Threat Model and Security Goals
In this section, we present the threat model that we consider in
this paper as well as the desired goals for the AKA protocol in
5G system. In particular, the threat model is based on previous
works by Basin et al. [24], Borgaonkar et al. [26] and Cremers
and Dehnel-Wild [31]. For the security goals, we give out a
speciﬁed goal for privacy by a mean of indistinguishability,
and follow Basin et al. [24] and Cremers and Dehnel-Wild
[31] for the goals of secrecy and authentication.
4.1 Threat Model
The presented threat model does not only include the require-
ments according to TS 33.501 [20], but also contains the
supplementary assumptions provided by Basin et al. [24] and
Cremers and Dehnel-Wild [31], since they have been formally
proved to be necessary for the security of 5G-AKA, and sub-
mitted to 3GPP for future standardization.
Assumptions on Channels. We next present the assumptions
on both channels in 5G network. For the radio channel, we
allow the existence of both passive and active attackers, as TS
33.501 [20] does not present any security assumption or re-
quirement for this channel. In particular, an active attacker can
eavesdrop, manipulate, and inject messages on this channel,
and is also allowed to command UEs to identify themselves
by actively starting new AKA sessions.
For the wired channel on which an SN communicates with
an HN, TS 33.501 [20] explicitly speciﬁes its security require-
ments as “e2e core network interconnection” channel. This
channel guarantees the conﬁdentiality and integrity of mes-
sages transferred in a mutually authenticated manner, and is
resistant to message replay. Besides the requirements spec-
iﬁed by TS 33.501 [20], we furthermore assume that this
channel is binding, where each message is bound to a session
identiﬁed by an unique session ID, since previous works of
Basin et al. [24] and Cremers and Dehnel-Wild [31] have
shown the necessity of such an assumption in 5G-AKA.
Assumptions on Functions. The attacker is allowed to exe-
cute all functions involved in 5G-AKA with its chosen inputs.
We assume that f1, f2, f3, f4, f5, f∗
5 protect both conﬁden-
tiality and integrity of their inputs following Basin et al. [24],
and K EM ECIES and DEM ECIES are secure w.r.t., the stan-
dard security deﬁnitions of KEM and DEM by Shoup [52].
Assumptions on Components. We do not allow the attacker
to compromise any component that resides within 5GC (i.e.,
SNs and HNs) according to TS 33.501 [20], which implies
that the attacker can neither steal their long term secrets (e.g., k
and skHN) nor temporary secrets (e.g., Kseaf ). Furthermore, we
do not allow the attacker to steal the long-term key k as well
as SQNUE from an honest user’s UE, and also assume that the
UE can protect all temporary secret information established
in an AKA session such as Kseaf . We only allow the attacker
to compromise the keys and secrets of UEs in its possession.
1 and f∗
4.2 Security Goals
In the following, we ﬁrst provide a more speciﬁc goal for
privacy, as 3GPP’s speciﬁcations only present weak, or "un-
derspeciﬁed" privacy goals [24,26], which are unable to cover
the cases of linkability attacks or protect the users’ privacy in
practice. Then we present the goals of secrecy and authenti-
cation by reusing the ones proposed by Basin et al. [24] and
Cremers and Dehnel-Wild [31].
Privacy. We ﬁrst review the privacy goals desired by 3GPP
for 5G-AKA in order to ﬁnd out their drawbacks, and then
give out a more speciﬁed goal from the view of practical at-
tack scenarios. In TS 33.102 [19], 3GPP has identiﬁed three
privacy requirements related to the privacy of mobile users
including user Identity conﬁdentiality, user location conﬁden-
tiality and user untraceability, but only in the presence of
passive attackers. Basin et al. [24] interprets these privacy
requirements into three individual goals:
• The SUPI must remain secret.
• The values of SQNUE and SQNHN must remain secret.
• The untraceability of user must be provided.
However, these goals overlap with each other, and are not
strong enough to protect the privacy of users in practice. If
the attacker is able to obtain the SUPI for a 5G-AKA session,
then it can naturally trace a UE with every AKA session it par-
ticipates by stealing their SUPIs. The attacker can also trace a
UE once the value of SQNUE or SQNHN is leaked, since it can
3602    30th USENIX Security Symposium
USENIX Association
determine the linkability between two AKA sessions with the
variation of counters as shown by Borgaonkar et al. [26]. Fur-
thermore, it is necessary to take active attacker into account,
as active attackers have been commonly regarded as practical
threats in 4G and forthcoming 5G systems [22, 24, 26, 55].
Hence, it is necessary to explore a reasonable way to de-
ﬁne the privacy of users for the AKA protocol in 5G. A ﬁrst
approach is directly applying the notion of unlinkability from
linkability attacks, which requires that the attacker cannot
link the sessions participated by the same UE. Such a prop-
erty is able to cover the untraceability of users as well as the
other privacy goals as speciﬁed above. However, it is hard
to deﬁne the action of “linking” sessions in a formal way,
let along checking whether such a property is actually sat-
isﬁed. Thus, we leverage the notion of indistinguishability,
which is the standard way for anonymous authentication sys-
tems [29, 30, 57] to claim privacy-preserving properties. It
deﬁnes privacy in a strong sense which does not allow the
attacker to determine which UE it is interacting with from two
UEs. Furthermore, in the case of 5G AKA protocols, it is use-
ful to explicitly allow the attacker to interact with one of the
UEs to be distinguished before it actually begins the “game of
indistinguishability”. It covers the cases of linkability attacks
and is convenient to be formally modelled. If an attacker is
able to distinguish a target UE with the others using the data
form its previously attended AKA session, then the attacker
can link the UE with that session, which is actually the case
of linkability attack in practice [22, 24, 26, 43]. We deﬁne the
privacy goal as follows:
Goal 1 (UE Indistinguishability) : Given two UE entities
denoted by UE1 and UE2, and an AKA session attended by
UE1 (or UE2), no active attacker can determine whether it is
interacting with UE1 or UE2
Secrecy. We mainly focus on the secrecy of Kseaf , as the
privacy goal has implied the secrecy of long-term user iden-
tiﬁers and secrets. This goal is essentially identical to the
secrecy goals reﬁned by Basin et al. [24] and Cremers and
Dehnel-Wild [31], and is presented in a simpliﬁed way:
Goal 2 (Key Secrecy) : Kseaf must be kept secret.
Authentication. We next list the desired goals for authenti-
cation following Basin et al. [24] and Cremers and Dehnel-
Wild [31]. These goals are reﬁned from TS 33.501 [20] in the
form of agreement following Lowe’s taxonomy [46] of au-
thentication properties, and are provided with corresponding
formal deﬁnitions with Tamarin Prover.
Goal 3 (Agreement between UE and SN) : By the end of
protocol execution, the UE and SN must both obtain injective
agreement on Kseaf , and weak agreement with each other.
Goal 4 (Agreement between UE and HN) : By the end of
protocol execution, the UE and HN must both obtain injective
agreement on Kseaf and weak agreement with each other. They
also must both obtain non-injective agreement on IDSN with
each other.
Goal 5 (Agreement between SN and HN) : By the end of
protocol execution, the SN and HN must both obtain injective
agreement on Kseaf and weak agreement with each other. The
SN must obtain non-injective agreement on SUPI with HN.
By weak agreement, we mean that a participant of the pro-
tocol has actually executed the protocol with its partner, but
they do not have to agree on any data transferred or secret
established in this session. Non-injective agreement implies
that the participant should agree on the data or secrets with its
partner on the basis of weak agreement. Injective agreement
furthermore requires that there only exists one partner for the
protocol execution and agree on the data or secrets, on the top
of non-injective agreement.
5
5G-AKA(cid:48)
In this section, we present our proposal for the AKA proto-
col of 5G system (i.e., 5G-AKA(cid:48)). It is able to protect the
privacy of users in the presence of active attackers, and only
introduces minimal modiﬁcations on 5G-AKA in a way of
compatible with legacy SIM cards and SNs’ implementations.
Moreover, 5G-AKA(cid:48) does not involve additional bandwidth
cost than 5G-AKA as it reuses the terms of messages, and
only raises additional computational cost of less than 0.03%.
In a nutshell, 5G-AKA(cid:48) uses the shared keys that are estab-
lished in ECIES-KEM to encrypt and decrypt RAND at the
HN and UE side (See Figure. 7). In this section, we begin
with the exploration of the root cause of the linkability attacks
via checking the logic of UE, and then propose a targeted ﬁx
according to the cause. Such an approach makes our solution
more reasonable, and also resistant to the undiscovered at-
tacks raised by the same cause. Next, we describe 5G-AKA(cid:48)
in detail and evaluate its performance. We do not only present
the full message ﬂow of the protocol, but also explain its
difference with 5G-AKA and why it is standard compatible.
5.1 Design Idea
We ﬁrst reason about the root cause of linkability attacks in
5G-AKA, and then present a speciﬁc countermeasure against
the root cause and explain its rationale. This approach makes
it possible to avoid all existing linkability attacks "in one
shot", as well as to prevent undiscovered privacy issues raised
by the same cause.
Root Cause of Linkability Attacks. In the typical scenario
of linkability attacks, an active attacker distinguishes the tar-
get UE from a set of UEs when they behave differently to the
same attack vector, and then links the target UE to its previ-
ously attended session via the association between the vector
and the session. To trigger such distinguishable behaviors, the
only way is to utilize the conditional statements in the pro-
cess of a UE’s execution. Thus, it is reasonable to locate the
root cause at the AUTHENTICATE SIM command, as it is the
USENIX Association
30th USENIX Security Symposium    3603
UE
(k,PKHN,SUPI,SQNUE)
SN