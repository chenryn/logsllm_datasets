---
author: Sergio Mijatovic
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 1495
date: '2023-12-12 11:09:46'
editorchoice: false
excerpt: Vely 可让你在网络应用程序中利用 C 语言的强大功能。
fromurl: https://opensource.com/article/22/11/build-your-own-saas-vely
id: 16462
islctt: true
largepic: /data/attachment/album/202312/12/110902myyfcm3hdmwqv3zy.jpg
permalink: /article-16462-1.html
pic: /data/attachment/album/202312/12/110902myyfcm3hdmwqv3zy.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: Vely 可让你在网络应用程序中利用 C 语言的强大功能。
tags:
- Vely
- SaaS
thumb: false
title: 利用 Vely 在 Linux 构建你自己的 SaaS
titlepic: true
translator: Drwhooooo
updated: '2023-12-12 11:09:46'
---
![](/data/attachment/album/202312/12/110902myyfcm3hdmwqv3zy.jpg)
> 
> Vely 可让你在网络应用程序中利用 C 语言的强大功能。
> 
> 
> 
[Vely](https://opensource.com/article/22/5/write-c-appplications-vely-linux) 将 C 语言的高性能和低内存占用与 PHP 等语言的易用性和安全性相结合。作为自由开源软件，它以 GPLv3 和 LGPL 3 授权，所以你甚至可以用它来构建商业软件。
### 利用 Vely 构建 SaaS
你可以使用 Vely 创建一个多租户网络应用程序，它可以作为软件即服务模式（SaaS）在互联网上运行。每个用户都有一个完全独立的数据空间。
在这个网络应用程序示例中，用户可以注册一个笔记本服务来创建笔记，然后查看和删除它们。它仅用了 7 个源文件，310 行代码，就展示了如何集成多项技术:
* MariaDB
* 网络浏览器
* Apache
* Unix 套接字
#### 运作原理
以下是从用户的角度来看应用程序是如何工作的。下图是代码演示。
该应用允许用户通过指定电子邮件地址和密码创建新的登录名。你可以用任何你喜欢的方式设置它们，例如运用 CSS：
![创建一个用户账户](/data/attachment/album/202312/12/110946trmkfsf1l1m6ylr1.png)
验证用户的电子邮件:
![验证用户的电子邮件地址](/data/attachment/album/202312/12/110946vow5z3f1qpsvxqpv.png)
每个用户使用自己独有的用户名和密码登录：
![用户登录](/data/attachment/album/202312/12/110946qsntseszsji9xies.png)
一旦登录，用户就可以添加笔记：
![用户可以添加笔记](/data/attachment/album/202312/12/110947be001fcv110een44.png)
用户可以获取笔记列表：
![用户列举笔记](/data/attachment/album/202312/12/110947ffc1f6vcbefpcfp8.png)
删除笔记之前，应用会申请确认信息：
![删除笔记之前，应用会申请确认信息](/data/attachment/album/202312/12/110947o70sv2jxqb0sk0kj.png)
用户确认后，笔记被删除：
![用户确认后，笔记被删除](/data/attachment/album/202312/12/110948p13ha0s2281zm44u.png)
#### 设置先决条件
遵照 [Vely.dev](https://vely.dev/) 上的安装指示。这是一个使用 DNF、APT、Pacman 或者 Zypper 等标准工具包的快速流程。
由于它们都是这个范例的一部分，你必须安装 Apache 作为网络服务器，安装 MariaDB 作为数据库。
安装 Vely 后，如使用 Vim，打开里面的“语法高亮显示”：
```
vv -m
```
#### 获取源代码
这个演示 SaaS 应用程序的源代码是 Vely 安装的一部分。为每个应用程序创建一个单独的源代码目录不失为一个好主意（而且你可以按自己喜好命名）。在这种情况下，解包源代码会帮你完成这些工作:
```
$ tar xvf $(vv -o)/examples/multitenant_SaaS.tar.gz
$ cd multitenant_SaaS
```
默认情况下，该应用程序以 `multitenant_SaaS` 命名，但你可以将其命名为任何内容（如果这么做，其他每个地方你都需要改一下）。
### 创建应用程序
第一步是创建一个应用程序。使用 Vely 的 `vf` 工具就可以轻松完成：
```
$ sudo vf -i-u $(whoami) multitenant_SaaS
```
这个命令创建了一个新的应用程序主目录（`/var/lib/vv/multitenant_SaaS`），并帮你执行应用程序设置。通常，这意味着在该主目录中创建各种子目录并分配权限。在这种情况下，只有当前用户（`whoami` 的结果）拥有目录，具有 `0700` 权限，这确保了其他人没有访问文件的权限。
### 创建数据库
在你键入任何代码之前，你需要一个能够存储该应用程序所用信息的空间。首先，创建一个名为 `db_multitenant_SaaS` 的 MariaDB 数据库，由用户名为 `vely` 的用户所有，密码为 `your_password` 。你可以修改刚才提到的任何值，但得记住，在这个示例里，你需要将包含这些内容的每个地方都得修改一遍。
在 MySQL 中以 root 身份登录：
```
create database if not exists db_multitenant_SaaS;
create user if not exists vely identified by 'your_password';
grant create,alter,drop,select,insert,delete,update on db_multitenant_SaaS.* to vely;
```
然后在数据库内创建数据库对象（表，记录等等）：
```
use db_multitenant_SaaS;
source setup.sql;
exit
```
### 将 Vely 连接至数据库
为了让 Vely 知晓你数据库的位置以及如何登录进去，创建一个名为 `db_multitenant_SaaS` 的数据库配置文件。（该名称用于在源代码中的数据库声明，所以如果你改了它，确保在它存在的每个地方都改一遍。）
Vely 使用原生的 MariaDB 数据库连接，因此你可以指定给定的数据库所能允许的任何选项:
```
$ echo '[client]
user=vely
password=your_password
database=db_multitenant_SaaS
protocol=TCP
host=127.0.0.1
port=3306' > db_multitenant_SaaS
```
### 构建应用程序
使用 `vv` 工具构建应用程序，利用 `--db` 选项指定 MariaDB 数据库和数据库配置文件：
```
$ vv -q--db=mariadb:db_multitenant_SaaS
```
### 启用应用服务器
启动你的网络应用程序的服务器，需要使用 `vf` FastCGI 进程管理器。应用程序服务器使用 Unix 套接字与网络服务器（创建反向代理）通信：
```
$ vf -w3 multitenant_SaaS
```
这么做会启用三个守护进程，为接收到的请求提供服务。你也可以启动一个自适应服务器，它会增加进程的数量从而服务更多的请求，并在不需要他们时减少进程的数量：
```
$ vf multitenant_SaaS
```
请参阅 `vf` 了解更多选项，以帮助你实现最佳性能。
当你需要停止你的应用程序服务器，使用 `-m quit` 选项：
```
$ vf -m quit multitenant_SaaS
```
### 创建网络服务器
这是一个网络应用程序，那么应用程序就得需要一个网络服务器。该示例通过一个 Unix 套接字监听器使用 Apache。
#### 1、设置 Apache
将 Apache 配置为一个反向代理，并将你的应用程序与之连接，你需要启用 FastCGI 代理支持，这通常使用 `proxy` 和 `proxy_fcgi` 模块。
对于 Fedora 系统（或者其它的，比如 Arch）来说，通过在 Apache 配置文件 `/etc/httpd/conf/httpd.conf` 中添加（或取消注释）适当的 `LoadModule` 指令，就可启用 `proxy` 和 `proxy_fcgi` 模块。
以下指令适用于 Debian，Ubuntu 以及类似的系统，启用 `proxy` 和 `proxy_fcgi` 模块：