dl( j) := dl (i) + cl,i j , ∀l = 1, 2;
wq
pred( j) := i;
l dl ( j) ;
l
begin
end
end
end
end
retrieve optimal solution x and its attribute set z;
if s ∈ S then
begin
conclude x is a nondominated solution and return
it to the main routine as x∗
;
end
otherwise
begin
conclude no nondominated solution is found;
end
end
It is readily seen that the key algorithmic steps of
the constrained shortest path subroutine include a fea-
sibility check and a dominance check. The feasibil-
ity check guarantees any chosen partial path satisfying
the problem’s constraint; the dominance check chooses
the optimal partial path from the candidate feasible
partial path set. We call the parametric method plus
its subroutine—the constrained label-setting method—
a constrained parametric method. As we have com-
mented, this constrained parametric method is capa-
ble of potentially ﬁnding both extreme and nonextreme
nondominated solutions, as a result of the imposition
of the objective constraints as well as the use of a con-
strained shortest path solution procedure. The remain-
ing concern with this algorithm is its solution efﬁciency
and completeness.
It is observed that the constrained parametric method
has two major changes compared to existing paramet-
ric methods: ﬁrst, a shortest path tree from the desti-
nation node to all other nodes in the network is cre-
ated at the initial stage for each objective; second, a
constrained shortest path problem needs to be solved
at each iteration, instead of a simple standard short-
est path problem. These added algorithmic components
only slightly increase the computational cost and mem-
ory requirement. The computation of a shortest path
tree for each objective can be accomplished by an
84
Xie & Waller
ordinary labeling method, which is an efﬁcient, one-
time task and does not add a signiﬁcant increase of the
computing time to the whole algorithmic process. The
computing time for solving the constrained problem by
the approximate label-setting method is also maintained
at the polynomial-time level. Compared to the label-
setting method for the standard shortest path problem,
the only added operations in the approximate label-
setting method are two additions and two comparisons
at each label updating.
Though the approximate label-setting algorithm en-
sures the feasibility of solutions, it does not always guar-
antee the solution optimality. Suboptimality may occur
when the optimal path is dominated (in terms of the pa-
rameterized objective) by an infeasible path (which has
at least one of the single objectives violating the corre-
sponding constraint) at some node j when the status of
the infeasible path reaching this node is feasible, that is,
dl(i) + cl,i j + d
(cid:7)
l ( j)  zl (x) (in the
case of a minimization problem). Thus, we can con-
(x) =
struct an m-dimensional partial objective set z(cid:7)
(. . . , zl (x) , . . .), where 2 ≤ m ≤ n and zl(x) ∈ z(cid:7)
(x).
Such a condition ensures that solution x is nondomi-
nated in terms of these m objectives. The necessity is
(cid:2)
proved.
Therefore, combing the sufﬁcient and necessary con-
ditions, we can conclude that a solution to an n-
objective minimization problem x with its objective set
z(x) = (z1 (x) , . . . , zl (x) , . . . , zn (x)) is nondominated if
and only if there exists at least such an m-dimensional
(x) = (. . . , zl (x) , . . .), where 2 ≤
partial objective set z(cid:7)
m ≤ n and zl(x) ∈ z (x), ∀l, that the solution is nondom-
inated in terms of its m objectives.
Furthermore, it is readily known that the nondomi-
nated solution set of an n-objective problem in terms of
its n objectives is a union set of all the nondominated
solution sets of the same problem in terms of its m ob-
jectives, where 2 ≤ m ≤ n, given that each m-objective
set is a subset of the n-objective set and each objec-
tive in the n-objective set exists in at least one of the
m-objective sets.
Optimal routing with multiple objectives
85
It is clear that the above conclusion provides a prob-
lem decomposition and solution combination method
to dealing with a higher dimensional multiobjective op-
timization problem by solving a number of lower di-
mensional problems. All solution points of each lower
dimensional problem in its objective space are a pro-
jection of those of the higher dimensional problem
in the higher dimensional objective space. Under this
projection scheme, we know that if we decompose
an n-objective optimization problem into a set of m-
objective problems, where m ≤ n, the complete set con-
tains n!/m!(n − m)! m-objective problems. In this case,
as we have developed an efﬁcient algorithm for biobjec-
tive shortest path problems, any multiobjective short-
est path problem can be indirectly tackled by solving a
number of decomposed biobjective problems. For ex-
ample, we can decompose a triobjective problem into
three biobjective problems.
3 NUMERICAL EVALUATION AND EXAMPLE
APPLICATION
In this section, we present a comparative evaluation for
the proposed constrained parametric method against
a labeling method—the classic multiobjective label-
correcting method—and an illustrative case study of a
multiobjective hazardous materials routing problem in
the U.S. northeastern highway network. In particular,
the main purpose of the following analysis is twofold:
(1) numerically evaluate the solution quality and ef-
ﬁciency of the proposed algorithm over a set of syn-
thetic networks of different problem sizes and attribute
sets; (2) empirically analyze the algorithm’s solution-
generating behavior as well as its practical implications
through a real-world routing example.
3.1 Numerical evaluation
3.1.1 Experiment design. The benchmark algorithm we
choose for the numerical evaluation is the Brumbaugh-
Smith and Shier’s (1989) version of the classic biob-
jective label-correcting method. This
is an exact
solution method that can generate the complete non-
dominated solution set, and in the authors’ opinion,
Brumbaugh-Smith and Shier’s implementation scheme
is the most efﬁcient one among all the available ver-
sions of this type of algorithm in the literature. Both
the label-correcting algorithm and the constrained para-
metric algorithm are coded in C++. In our exper-
iments, all the tests discussed are run on a com-
puter equipped with a Dual-Core 3.40GHz CPU and
2GB RAM.
A set of 10 random networks of grid-like topology are
generated, whose size ranges from 78 to 3,920 nodes and
from 240 to 12,480 arcs (see Table 1). As we will see be-
low, this range is sufﬁciently wide to exhibit the varia-
tion of the relative computation performance between
the labeling method and the parametric method. The
ratio of the number of arcs over the number of nodes
in these networks is approximately equal to 3, which
is the typical arc/node ratio of most surface transporta-
tion networks (see, e.g., Van Vliet (1978)). We also as-
sign 10 random arc attribute sets to each of these net-
works, where each arc attribute set consists of a set
of two-attribute vectors for all arcs. All these arc at-
tribute values are uniformly distributed between 0 and
100 in an independent and identical manner. Follow-
ing this network generation procedure, we obtain 100
topology-attribute network scenarios in total. We arbi-
trarily select the node at the top left corner as the ori-
gin node and the node at the bottom right corner as
the destination node in each of these network-attribute
scenarios.
Performance comparison of the label-correcting method and the constrained parametric method
Table 1
Label-correcting method
Constrained parametric method
Network
1
2
3
4
5
6
7
8
9
10
Number of Number of Average number of Average computation Average number of
nondominated paths
nondominated paths
time (seconds)
nodes
arcs
78
280
462
688
1,061
1,512
2,044
2,822
3,348
3,920
240
880
1,456
2,716
3,360
4,800
6,496
8,976
10,656
12,480
9.4
23.1
29.3
40.7
49.5
80.9
115.0
142.5
156.0
211.5
0.009
0.117
0.247
0.707
3.119
7.973
14.382
42.364
70.160
173.396
7.7
16.7
23.9
34.5
47.8
67.8
100.1
126.1
127.3
166.7
Average computation
time (seconds)
0.036
0.238
0.373
0.754
1.328
3.180
5.560
9.107
11.933
17.714
86
s
h
t
a
p
i
t
d
e
a
n
m
o
d
n
o
n
f
o
r
e
b
m
u
N
Label-setting method
Constrained parametric method
300
250
200
150
100
50
0
0
2000
4000
6000
8000
Number of arcs
10000
12000
14000
Fig. 2. Number of generated nondominated paths over
network size.
3.1.2 Result analysis. Two performance measures are
used to assess the computational results in the follow-
ing evaluation: (1) solution quality or completeness (i.e.,
the number of nondominated solutions); (2) solution
efﬁciency (i.e., the computation time). First, we eval-
uate the solution quality by counting the numbers of
generated nondominated paths in these network sce-
narios with varying size. In Figure 2, we plot the aver-
age, highest and lowest numbers of nondominated paths
identiﬁed by the labeling method for each network sce-
nario over its 10 different attribute sets. It is shown
that the number of nondominated paths in the com-
plete solution set increases in an approximately linear
manner with the network size increasing. In contrast, we
also depict the average number of nondominated paths
generated by the parametric method for each network
case, as shown in Figure 2. It can be seen that the para-
metric method maintains a rather high solution iden-
tiﬁcation rate (i.e., the ratio of the number of identi-
ﬁed nondominated solutions over the total number of
nondominated solutions) over all the network cases, in
which its average solution identiﬁcation rate varies from
0.70 to 0.96.