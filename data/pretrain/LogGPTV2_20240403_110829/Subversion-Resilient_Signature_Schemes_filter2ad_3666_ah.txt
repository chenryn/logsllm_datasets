each j ∈ [n], let (cid:101)Qj = {m1,j, . . . , mq,j} be the set of messages queried to oracle Patch(δ,
(·,(cid:101)Aj(sk ,·))).
m∗ (cid:54)∈ Q ∪ (cid:101)Q, where (cid:101)Q :=(cid:83)n
j=1 (cid:101)Qj.
5. Finally, B outputs a pair (m∗, σ∗); we say that B wins iﬀ Vrfy(vk , (m∗, σ∗)) = 1 and
If for all t, n, q = poly(κ) there exists ε = negl (κ) such that FW (t, n, q, ε)-preserves EUF-CMA
for SS, we simply say that FW preserves EUF-CMA for SS. Furthermore, in case B speciﬁes
all of its queries {(cid:101)Aj, mi,j}j∈[n],i∈[q] at the same time we say that FW non-adaptively preserves
EUF-CMA.
We observe that Deﬁnition 18 is very similar to Deﬁnition 7, except that the above deﬁnition
considers arbitrary classes of SAs instead of SAs within a given class A; this is possible because
the output of each invocation of the subverted signing algorithm is patched using the ﬁrewall
(which is assumed to be un-tamperable).
Looking ahead, no RF can preserve unforgeability (even non adaptively) without keeping
state.
In fact, as we show in Section 6.2, there exist simple generic attacks that allow for
complete security breaches in case of a stateless RF. On the positive side, in Section 6.3, we
show how to design an unforgeability preserving RF for any re-randomizable signature scheme by
using a single bit of public state that is used to implement the so-called self-destruct capability:
Whenever the ﬁrewall returns ⊥, all further queries will result in ⊥. Let us stress, however,
that assuming self-destruct does not make the problem of designing an unforgeability preserving
reverse ﬁrewall trivial: The biased-randomness attacks of Section 4 allow to break all randomized
schemes without ever provoking a self-destruct.
On exﬁltration resistance. More generally, one might require a stronger security property
from a RF. Namely, we could ask that patched signatures are indistinguishable from real signa-
tures to the eyes of an attacker. This property, which is called exﬁltration resistance in [MS15],
would be similar in spirit to our deﬁnition of indistinguishability w.r.t. continuous SAs (see
Deﬁnition 6).
It is not hard to see that exﬁltration resistance against arbitrary SAs is impossible to achieve
in the case of signature schemes; this is because the attacker could simply set the subverted
signing algorithm to always output the all-zero string, in which case the RF has no way to patch
its input to a valid signature (and thus the adversary can easily distinguish subverted patched
signatures from real signatures).21
6.2 Necessity of Keeping State
We show that no RF can preserve both functionality and unforgeability, without maintaining
state. This is achieved via a generic (non-adaptive) attack that allows to extract the secret key
in case the RF does not self-destruct. The attack itself is a generalization of a similar attack
by Gennaro et al. [GLM+04], in the context of memory tampering.
21We note, however, that our techniques from Section 5 can be extended to design a RF that is weakly exﬁl-
tration resistant, namely it is exﬁltration resistant against restricted SAs that satisfy the veriﬁability condition.
31
Theorem 6. Let SS be an EUF-CMA signature scheme with perfect correctness. No stateless
RF FW can, at the same time, be functionality maintaining and non-adaptively (poly(κ), 1,
poly(κ), negl (κ))-preserve EUF-CMA for SS.
Proof. Let FW = (Setup, Patch) be a stateless RF; formally, this means that the state δ is ﬁxed
by algorithm Setup and never updated by algorithm Patch. Consider the following adversary B
playing the game of Deﬁnition 18.
 Upon input the veriﬁcation key vk , and the initial state δ, initialize τ := 1.
 Let (cid:101)Aτ be the following algorithm. Upon input a message mi, set j = τ mod (cid:96) (where
(cid:96) := |sk|) and
– If sk [j] = 1, output(cid:101)σi ← Sign(sk , mi).
– Else, output 0|σ| (where |σ| is the length of the signatures produced by the signing
algorithm).
Update τ ← τ + 1.
 Forward ((cid:101)Aτ , m1, . . . , m(cid:96)) to the challenger, where m1, . . . , m(cid:96) ∈ M. Let ((cid:101)σ(cid:48)
i ← Patch(δ, (mi,(cid:101)Aτ (sk , mi))).
the answers computed by the challenger, where(cid:101)σ(cid:48)
 Deﬁne sk(cid:48)[i] = Vrfy(vk , (mi,(cid:101)σ(cid:48)
i)) and return sk(cid:48) := (sk(cid:48)[1], . . . , sk(cid:48)[(cid:96)]).
1, . . . ,(cid:101)σ(cid:48)
(cid:96)) be
Notice that B speciﬁes its queries non-adaptively, and moreover, it only uses one subversion
which is queried upon the sequence of messages m1, . . . , m(cid:96) ∈ M. We will show that the
extracted key sk(cid:48) is equal to the original secret key sk with overwhelming probability, which
clearly implies the statement. Deﬁne the following events, parametrized by an index i ∈ [(cid:96)]:
(i) Event E(cid:48)
i becomes true if
i becomes true if sk [i] = 1 and Vrfy(vk , (mi,(cid:101)σ(cid:48)
i ∨ E(cid:48)(cid:48)
i .
sk [i] = 0 and Vrfy(vk , (mi,(cid:101)σ(cid:48)
i)) = 0; (ii) Event E(cid:48)(cid:48)
i)) = 1. Let Ei := E(cid:48)
i] ≤ ν(cid:48)(κ), for all
Claim 6.1. There exists a negligible function ν(cid:48) : N → [0, 1] such that P [E(cid:48)
i ∈ [(cid:96)].
Proof. Follows directly by the fact that SS satisﬁes (perfect) correctness, and moreover FW is
stateless and functionality maintaining.
Claim 6.2. There exists a negligible function ν(cid:48)(cid:48) : N → [0, 1] such that P [E(cid:48)(cid:48)
i ∈ [(cid:96)].
Proof. Intuitively, whenever E(cid:48)(cid:48)
i happens, the RF forged a signature on message mi by patching
the all-zero string using only public information, which contradicts EUF-CMA security of SS.
More formally, assume there exists an index i ∈ [(cid:96)], a polynomial p(·), and an adversary B
i with probability at least 1/p(κ) for inﬁnitely many values of κ ∈ N. Consider
provoking event E(cid:48)(cid:48)
the following adversary A(cid:48) attacking EUF-CMA of SS:
i ] ≤ ν(cid:48)(cid:48)(κ), for all
Adversary A(cid:48):
1. Receive the target vk from the challenger.
2. Run δ ←$ Setup(vk , 1κ), and forward (vk , δ) to B.
3. Whenever B outputs ((cid:101)Aτ , m1, . . . , m(cid:96)), pick a random j ←$ [(cid:96)], compute(cid:101)σ(cid:48)
(mj, 0|σ|)), and return (mj,(cid:101)σ(cid:48)
j) as the forgery.
j ←$ Patch(δ,
32
Alice
m ∈ M(cid:101)σ ←(cid:101)A(sk , m)
m,(cid:101)σ−−−−→
RAlice’s Firewall R
Read δ = (vk , β)
If β = 1 set(cid:101)σ(cid:48) = ⊥
Else if Vrfy(vk , (m,(cid:101)σ)) = 1
(cid:101)σ(cid:48) ←$ ReRand(vk , m,(cid:101)σ)
Else set(cid:101)σ(cid:48) = ⊥ and β = 1
Forward (m,(cid:101)σ(cid:48))
Figure 4: A cryptographic reverse ﬁrewall preserving unforgeability of any re-randomizable
signature scheme against arbitrary SAs.
By assumption, with probability at least 1/p(κ), we have that Vrfy(vk , (mi,(cid:101)σ(cid:48)
i)) = 1, and
moreover A(cid:48) guesses the index i (i.e., j = i) with probability 1/(cid:96). Thus P [A(cid:48) wins] ≥ 1/(cid:96)·1/p(κ),
which is non-negligible. This concludes the proof.
Putting together the above two claims, we conclude that
P(cid:2)sk(cid:48) = sk(cid:3) = 1 − P(cid:2)sk(cid:48) (cid:54)= sk(cid:3) = 1 − P(cid:2)∃i ∈ [(cid:96)] : E(cid:48)
(cid:3)
≥ 1 − (cid:96)(cid:88)
P(cid:2)E(cid:48)
i ∨ E(cid:48)(cid:48)
i
i
i ∨ E(cid:48)(cid:48)
(cid:3) ≥ 1 − (cid:96) · (ν(cid:48)(κ) + ν(cid:48)(cid:48)(κ)) ≥ 1 − ν(κ),
which implies the theorem.
i=1
6.3 Patching Re-Randomizable Signatures
We design a RF preserving unforgeability of so-called re-randomizable signature schemes (that
include unique signatures as a special case).
Deﬁnition 19 (Re-randomizable signatures [HJK12]). A signature scheme SS = (KGen, Sign,
Vrfy) is eﬃciently re-randomizable if there exists a PPT algorithm ReRand such that, for all
κ ∈ N, for all (vk , sk ) output by KGen(1κ), for all messages m ∈ M, and for all strings σ such
that Vrfy(vk , (m, σ)) = 1, we have that the output distribution of ReRand(vk , m, σ) is identical
to the output distribution of Sign(sk , m).
The original formulation of re-randomizability (as deﬁned in [HJK12]) is slightly diﬀerent
from the one deﬁned above, in that the output distribution of ReRand is required to be identical
to the uniform distribution over the set Σ(vk , m) of all strings σ that verify for message m under
the veriﬁcation key vk , even if vk was maliciously generated. However, the variant considered
above suﬃces for our purpose. Note that unique signatures are eﬃciently re-randomizable,
for ReRand(vk , m, σ) = σ; Waters’ signature scheme [Wat05], and its variant by Hofheinz et
al. [HJK12], are also eﬃciently re-randomizable as per the deﬁnition above.
Our ﬁrewall, which is formally described in Fig. 4, ﬁrst checks if σ is a valid signature on
message m under key vk (provided that a self-destruct was not provoked yet). If not, it self-
destructs and returns ⊥; otherwise it re-randomizes σ and outputs the result. The self-destruct
capability is implemented using a one-time writable bit β (which is included in the public state).
33
Theorem 7. Let SS be a (t, (q + 1)n, ε)-EUF-CMA signature scheme that is eﬃciently re-
randomizable and that satisﬁes perfect correctness. Then, the RF of Fig. 4 maintains function-
ality and (t(cid:48), q, ε(cid:48))-preserves EUF-CMA for SS, where t(cid:48) ≈ t and ε(cid:48) ≤ qn · ε.
Proof. The fact that the ﬁrewall maintains functionality follows directly by correctness of SS.
We now proceed to show that the ﬁrewall preserves unforgeability. Let G be the game of
Deﬁnition 18. Consider the modiﬁed game H that is identical to G, except that tampered
signature queries (j, mi,j) are answered as follows:
If such query is speciﬁed before a self-
destruct happens in G (if any), return σi,j ← Sign(sk , mi,j) and δ(cid:48) = (vk , 0), else return ⊥ and
δ(cid:48) = (vk , 1). In what follows, we write (i∗, j∗) ∈ [q] × [n] for the pair of indexes in which the
ﬁrewall self-destructs; notice that such a pair depends on the randomness of the game, but is
the same for both G and H.
Claim 7.1. P [B wins in G] = P [B wins in H].
Proof. For an index k ∈ [0, n], consider the hybrid game Hk that answers each query (j, mi,j)
such that j ≤ k as in game G, while all queries (j, mi,j) such that j > k are answered as in H.
We note that H0 ≡ H and Hn ≡ G. Abusing notation, let us write Hk for the distribution of
the random variable corresponding to B’s view in game Hk.
We will show that SD (Hk−1, Hk) = 0 for all k. Fix a particular k ∈ [0, n], and for an index
l ∈ [0, q] consider the hybrid game Hk,l that is identical to Hk except that it answers queries
(k, mi,k) with i ≤ l as in game G, while all queries (k, mi,k) with i > l are treated as in H.
Observe that Hk,0 ≡ Hk−1, and Hk,q ≡ Hk.
We now argue that for each l ∈ [q], one has that SD(Hk,l−1, Hk,l) = 0. Observe that, since
for k > j∗ both games always return ⊥, we can assume without loss of generality that k ≤ j∗.
Note that the only diﬀerence between Hk,l−1 and Hk,l is how the two games answer the query
l,k ←$ Patchδ(ml,k,(cid:101)σl,k),
(k, ml,k): Hk,l−1 returns σl,k ←$ Sign(sk , ml,k), whereas Hk,l returns (cid:101)σ(cid:48)
for (cid:101)σl,k ←$(cid:101)Ak(sk , ml,k). Now, since (cid:101)σl,k is valid, the fact that signatures are re-randomizable
directly implies that the Hk,l−1 and Hk,l are identical. The statement follows.
Claim 7.2. P [B wins in H] ≤ qn · ε.
Proof. Towards a contradiction, assume B wins in game H with probability larger than qn · ε.
Wlog. we assume that B always outputs its forgery after provoking a self-destruct.22 We build
an adversary B(cid:48) (using B) that breaks EUF-CMA of SS. Adversary B(cid:48) is described below.
Adversary B(cid:48):
 Receive the veriﬁcation key vk from the challenger, sample a random pair
(j∗, i∗) ←$ [n] × [q], and return vk to B.
 Upon input the i-th signature query mi, forward this value to the signing oracle
receiving back a signature σi ← Sign(sk , mi). Return σi to B.
 Upon input a query of the form (j, mi,j) answer as follows:
– In case j  j∗ answer with (⊥, δ(cid:48) = (vk , 1)).
 Whenever B outputs (m∗, σ∗), output (m∗, σ∗).
For the analysis, note that B(cid:48) runs in time similar to that of B and asks a total of at most q + qn
signing queries. Moreover, deﬁne the event E that B(cid:48) guesses correctly the query (j∗, i∗) where
B provokes a self-destruct. Clearly, in case E happens, we have that B(cid:48) perfectly simulates the
distribution of game H. Hence P [B(cid:48) wins] ≥ (qn · ε)/(qn) = ε, a contradiction.
The proof follows by combining the above two claims.
7 The Multi-User Setting
In this section, we consider the multi-user setting for all the deﬁnitions of Section 3. We also
provide a complete picture of relationships between the diﬀerent deﬁnitions, as shown in Fig. 5
and Fig. 6.
7.1 Multi-User Security
Analogous to the single-user setting, we consider two security deﬁnitions corresponding to dif-
ferent adversarial goals.
Indistinguishability.