in latency 
increase 
a slight 
decreases 
LCR de­
as more acceptors 
size (payload) 
put (top left graph) increases 
messages, 
We attribute 
up to 8 kbyte messages, 
Ring Paxos 
with the size of application 
after which it decreases. 
this to the fact that in our prototype 
ip-multicast 
Figure 6 quantifies 
on the performance 
the effects of application 
message 
of Ring Paxos. Through­
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
534 
DSN 2010: Marandi et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:56:19 UTC from IEEE Xplore.  Restrictions apply. 
between protocols 
the graph and the other group at the middle of the graph. 
The difference 
groups is about one order of magnitude. 
cols based on a ring only (LCR), on 
and on both (Ring Paxos) present 
constant 
multiple 
throughput 
with the number of receivers. 
ip-multicast 
Because it relies 
Libpaxos 
has lower 
ip-multicast 
Notice that proto­
throughput 
(c.f. Section 
1). 
streams, 
however, 
in the two 
8 kbytes 
Protocol MTE Message size 
LCR 
95%  32 kbytes 
RingPaxos 90% 
Spread  18%  16 kbytes 
Paxos4sb 4%  200 bytes 
Libpaxos 3%  4 kbytes 
Table 2. Atomic broadcast protocols (MTE is 
6.3. Impact of processes in the ring 
the Maximum Throughput Efficiency) 
affects 
of Ring Paxos and LCR (Fig­
now how the number of processes 
and latency 
We consider 
the throughput 
ure 5). LCR does not distinguish 
cesses must be in the ring. Ring Paxos places a majority 
of acceptors 
used in case offailure. 
tal number of processes 
are spare, 
The x-axis of the graph shows the to­
in the ring of LCR and Ring Paxos. 
in the ring; the remaining 
acceptors 
roles: all pro­
process 
Ring Paxos has constant 
throughput 
with the number of 
on 
0.. ..c 
00 :::l 2 ..c 
approximately 
U . 
(,) c  
f-
0 0 40 
30 
20 
10 
0 
5  10 
Ring Paxos -+-LCR X 
15  20  25 
30 
... X 
X--------34
6 
.
18.7 .. ······
28.4 
__ -----X'" 
15.6 . .x-
CIS 
...J 
.' 
4.6 /,-
5  10 
30 
in the ring 
Number of processes 
15  20  25 
Figure 5. Varying number of processes 
of each message is sent n  -1 
are placed in the ring, however, 
(i.e., in the range of 4.2 and 6.2 msec). The main difference 
between the rings in the two protocols 
of information 
minimal. 
times, where n is the number of processes 
sage content 
ip-multicast). 
in the range of 65%-70% (see Section 
only once in Ring Paxos (using 
CPU usage per process 
is propagated 
The average 
6.4. Impact of message size 
in the ring of Ring Paxos is 
6.6 for Ring Paxos). 
In LCR, the content 
that circulates 
is that the amount 
values remain low 
in the ring. Mes­
latency 
in LCR is 
0.. 
.D 
Systems & Networks (DSN) 
:; 
6 
   '" 
Figure 7. Impact of socket buffer size 
5.-1-
, 
, <.J  4 
c: 2 '" 
learners 
values. 
cally allocated. 
6 :; 600 
  12  packet size: : {.'". 
6  80  70 
 8 
}  I 
8' 14  n. 
6  10  8 kbytcs  , 
7. Conclusions 
Figure 6. Impact of application 
g : 
 2 "----Ii  .......... 
6.5. Impact of socket buffer sizes 
This paper presents 
  6 
<U -tj  4 
message size 
0.2k Ik 2k 4k 8k 
0.2k Ik 2k 4k 8k 
0.2k Ik 2k 4k 8k 
6' 
E 
'  ',/. 
0 
, 
Ring Paxos, a Paxos-like 
algorithm 
with the numer of  receivers, 
have the property 
Our selection 
typically 
used 
that both Ring 
it and com­
In order to show that 
a variety 
includes 
It revealed 
in clustered 
atomic broadcast. 
for high throughput. 
Ring Paxos is based on char­
of modern interconnects. 
we implemented 
protocols. 
of techniques 
designed 
acteristics 
Ring Paxos can be effective, 
pared it to other atomic broadcast 
of protocols 
to implement 
based and ip-multicast-based 
of 
protocols 
providing  constant  throughput 
It points out 
an important 
the tradeoffs 
in 
latency, 
increasing 
as­
sumptions. 
Protocols 
only have low latency, 
gests that a combination 
to the best of both: high throughput 
weak synchronous 
download 
feature 
with pure Ring based protocols, 
8. Acknowledgements 
based on unicast 
but poor throughput. 
Ring Paxos, can lead 
and low latency, 
with 
for 
environments. 
of techniques, 
assumptions. 
additional 
and possibly 
The study sug­
which result 
at [22]. 
Ring Paxos is available 
synchronous 
only or ip-multicast 
The authors would like to thank Antonio Carzaniga, 
and Robbert van Renesse for the valuable 
Leslie Lamport, 
discussions 
suggestions 
about Ring Paxos; and the reviewers 
to improve the paper. 
for their 
and ip-multicast 
depends on the 
to communication. 
Lost mes­
impact on Ring Paxos, as they re­
Figure 7 shows the effect 
of socket 
throughput 
(left graph) and la­
The reliability 
of unicast 
size of the buffers allocated 
sages have a negative 
sult in retransmissions. 
buffer sizes on the maximum 
tency (right 
as socket buffer sizes in all previous 
provide 
6.6. CPU and memory  usage 
the best tradeoff 
graph) of Ring Paxos. We have used 16 Mbytes 
experiments, 
as they 
between throughput 
and latency. 
Table 3 shows the CPU and memory usage of Ring Paxos 
we isolated 
In the experiments 
Ring Paxos in a single processor 
for peak throughput. 
cess running 
its usage. Not surprisingly, 
with the maximum load since it should both receive 
stream of values from the proposers 
values. 
a large 
these 
acceptors 
and measured 
is the process 
Memory consumption 
at coordinator, 
and ip-multicast 
the coordinator 
the pro­
and 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
535 
DSN 2010: Marandi et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:56:19 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
References 
[18] L. Lamport. Time, clocks, and the ordering of events 
[1] Y. Amir, C. Danilov, M. Miskin-Amir, 
J. Schultz, and 
J. Stanton. The Spread toolkit: Architecture 
mance. Technical report, Johns Hopkins University, 
CNDS-2004-1. 
and perfor­
2004. 
[2] Y. Amir, L. Moser, P. Melliar-Smith, 
D. Agarwal, and P. Cia­
membership protocol. ACM 
rfella. The Totem single-ring 
Trans. Comput. Syst., 
13(4):311-342, 
1995. 
in a distributed 
21(7):558-565, 
1978. 
system. Communications 
of the ACM, 
[19] L. Lamport. The part-time 
ACM Transactions 
on Computer Systems, 
parliament. 
16(2):133-169, 
May 1998. 
[20] L. Lamport and M. Massa. Cheap P ax os. In International 
Conference 
pages 307-314,2004. 
on Dependable 
Systems and Networks (DSN), 
[21] R. Levy. The complexity 
of reliable 
distributed 
storage. P hD 
thesis, EPFL, 2008. 
[3] K. P. Birman, A. Schiper, and P. Stephenson. 
Lightweight 
causal and atomic group multicast. ACM Trans. Comput. 
Syst., 
9(3):272-314, 
Aug. 1991. 
[22] http:/nibpaxos.sourceforge.net. 
[23] T. Ng. Ordered broadcasts 
for large applications. 
In Sym­
Systems (SRDS), pages 188-
Distributed 
[4] T. Chandra, R. Griesemer, 
and J. Redstone. P axos made live: 
of the twenty­
of distributed 
on principles 
In Proceedings 
perspective. 
An engineering 
sixth annual ACM symposium 
computing 
(PODC), pages 398-407, 2007. 
[5] T. D. Chandra and S. Toueg. Unreliable 
[6] J.-M. Chang and N. Maxemchuk. Reliable broadcast 
systems. J. ACM, 43(2):225-267,
failure detectors 
for 
1996. 
proto­
reliable 
distributed 
cols. ACM Trans. Comput. Syst., 
[7] F. Cristian and S. Mishra. The P inwheel asynchronous 
2(3):251-273, 
1984. 
atomic broadcast 
Autonomous 
zona, USA, 1995. 
protocols. 
In International Symposium 
Systems (ISADS), 
on 
P hoenix, Ari­
Decentralized 
[8] X. Defago, A. Schiper, and P. Urban. Total order broad­
cast and multicast 
Computing 
Surveys" 
36(4):372-421, 
Dec. 2004. 
algorithms: 
Taxonomy and survey. ACM 
[9] C. Dwork, N. Lynch, and L. Stockmeyer. Consensus in 
the presence of partial synchrony. J. ACM, 35(2):288-323, 
1988. 
[10] R. Ekwall, A. Schiper, and P. Urban. Token-based 
atomic 
using unreliable 
broadcast 
of the International 
tems (SRDS), pages 52-65, 2004. 
Symposium 
failure detectors. 
on Reliable 
In Proceedings 
Distributed 
Sys­
[11] M. J. Fischer, N. A. Lynch, and M. S. P aterson. Impossibility 
of distributed 
32(2):374-382, 
1985. 
consensus with one faulty processor. 
J. ACM, 
broadcasts 
chapter 5. 
[12] U. Fritzke, 
P. Ingels, A. Mostefaoui, 
total order multicast 
tolerant 
Proceedings 
tributed 
of International 
[13] V. Hadzilacos and S. Toueg. Fault-tolerant 
Systems (SRDS), pages 578-585,1998. 
and M. Raynal. Fault­
groups. In 
on Reliable 
Dis­
to asynchronous 
Symposium 
Systems, 
and related problems. In Distributed 
Addison-Wesley, 
2nd edition, 
1993. 
[14] M. F. Kaashoek and A. S. Tanenbaum. Group communica­
system. In 11 th In­
operating 
tion in the Amoeba distributed 
ternational 
(ICDCS), 
Conference 
pages 222-230, Washington, 
on Distributed 
Computing 
USA, 1991. 
Systems 
[15] J. Kim and C. Kim. A total ordering protocol using a dy­
namic token-passing 
ing, 4(2):87-95,1997. 
scheme. Distributed 
Systems Engineer­
[16] J. Kirsch and Y. Amir. P axos for system builders: An 
overview. In Proceedings 
Scale Distributed 
1-6,2008. 
Systems and Middleware 
of the 2nd Workshop on Large­
(LADIS), pages 
[17] L. Lamport. The implementation 
of reliable 
tiprocess 
systems. Computer Networks, 
distributed 
mul­
2:95-114, 1978. 
a decision message with 
posium on Reliable 
197,1991. 
[24] F. B. Schneider. 
W hat good are models and what models are 
chap­
Systems, 
editor, Distributed 
good? In S. Mullender, 
ter 2. Addison-Wesley, 
2nd edition, 
1993. 
A. Correctness 
Proof (Sketch) 
decide different values. 
(ii) and (iii) of consensus. 
We provide 
a proof sketch of the correctness 
of Ring 
c (c/) 
or picking 
a decision 
ip-multicast 
(i) holds trivially 
from the algorithm. 
/+1 messages of the form 
In Ring Paxos, c ip-multicasts 
1 (ii) No two processes 
Paxos. We focus on properties 
Property 
Proposition 
Proof sketch: 
Let v and v' be two decided values, 
and v-id 
We prove that v-id = v'-
and v' -id their unique identifiers. 
id. Let r (r') be the round in which some coordinator 
message with v-id (v'-id). 
v-id after: (a) c receives 
(Phase lB, r, *, *); (b) c selects 
the value Vval = v with the 
round number Vrnd among the set MlB of phase 
a value v if Vrnd =  0; 
(Phase 2A, r, v, v-id); 
r, v-id) from the second last process 
/+1 (Phase 2B, r, v-id) messages 
Let M2B be 
MIB and M2B 
fiers. In this case, c would send a decide message with v-id 
v-id = v' -id. D 
highest 
lB messages 
received, 
(c) c ip-multicasts 
(Phase2B, 
say q. When c receives 
to c receiving 
cause the ring is composed of /+1 acceptors. 
the set of /+1  phase 
Now consider 
dinator 
in a system where all processes 
2 (iii) If one (or more) process proposes a 
as well. Since the same reasoning 
nator c', and Paxos implements 
Proposition 
value and does not crash then eventually 
cided by all correct 
Proof sketch: 
rect coordinator 
tirely 
form (Phase lA, *, c-ring) 
c. c considers 
acceptors, 
a cor­
a ring c-ring composed en­
and c sends a message of the 
to the acceptors 
in c-ring. 
the same set of messages 
After GST, processes 
ran Paxos on value identi­
2B messages. 
processes. 
can be applied 
consensus, 
eventually 
some value is de­
c received 
of correct 
directly 
to coordi­
that coor­
select 
be­
Be­
and (d) c receives 
this message from q, it is equivalent 
in the ring, 
cause after GST, all processes 
exchanged 
rect processes 
between correct 
eventually 
processes 
are received, 
all cor­
decide some value.  D 
are correct 
and all messages 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
536 
DSN 2010: Marandi et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:56:19 UTC from IEEE Xplore.  Restrictions apply.