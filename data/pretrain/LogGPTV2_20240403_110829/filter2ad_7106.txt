# Title: Towards Identifying Early Indicators of a Malware Infection

## Authors
- Sareena Karapoola
- Chester Rebeiro
- Unnati Parekh
- Kamakoti Veezhinathan

## Abstract
Malware typically progresses through multiple stages in its lifecycle before launching an attack, which can span from a few weeks to several months. Network communications during the initial phase may serve as the earliest indicators of a malware infection. While previous research has utilized network traffic for detection, none have focused on the temporal analysis to determine how early malware can be detected. The primary challenge lies in differentiating benign-looking malware communications in the early stages of the lifecycle. In this work, we aim to build an early warning system by analyzing malware communications to identify such early indicators.

## CCS Concepts
- Security and privacy → Malware and its mitigation; Network security; Firewalls.

## ACM Reference Format
Sareena K P, Chester Rebeiro, Unnati Parekh, and Kamakoti V. 2019. POSTER: Towards Identifying Early Indicators of a Malware Infection. In ACM Asia Conference on Computer and Communications Security (AsiaCCS '19), July 9–12, 2019, Auckland, New Zealand. ACM, New York, NY, USA, 3 pages. https://doi.org/10.1145/3321705.3331006

## 1. Introduction
The increasing scale and sophistication of cyber-attacks against critical infrastructures have become a major concern for the industry. These attacks are often triggered using malware such as worms, viruses, and trojans. Securing these infrastructures is essential because malware can trigger sophisticated attacks that can potentially bring down infrastructures, exfiltrate sensitive data, and create Distributed Denial of Service (DDoS) attacks, among other threats. The complexity of these attacks underscores the need for quick detection and isolation of malicious behaviors in these networks.

Malware detection primarily relies on two approaches: signature-based and heuristic-based. Signature-based methods use previously observed unique identification features in the malware binary or during execution. While these methods offer high precision, they can be easily evaded by modern polymorphic and metamorphic malware. Heuristic-based methods, on the other hand, use rules to differentiate malicious behavior from benign ones. Although these rules can detect zero-day malware, they suffer from high false positives and only detect malware after the infected program is executed.

The lifecycle of most malware involves multiple stages before the actual attack. At each stage, the malware communicates with external command-and-control (C&C) servers to receive updated code and instructions. This communication facilitates polymorphic behaviors and allows the malware to stage the actual attack after thorough reconnaissance. For example, the Mirai malware (Figure 1) triggers a DDoS attack in step 7, but it is active in the system much earlier, looking for new targets, reporting infections, and receiving instructions.

Recent studies on malware communications highlight the potential of network traffic as early warning signals of a malware infection, often several weeks or months before the malware is discovered by detection mechanisms. Early identification of a compromise enables quick and effective attack mitigation by allowing network defenders to restrict the scope of infection and reduce damage.

In this work, we analyze malware network communications to identify early indicators of infection. Such indicators facilitate automated malware analysis for building early warning and detection systems. However, the main challenge is differentiating these early indicators from benign communications while ensuring invariance to the polymorphic behaviors of the malware.

## 2. Related Works
Several prior works have analyzed malware communications. Notably, [7] provides an extensive study highlighting the potential of malware communications as early indicators of infection. Other works employ machine learning to analyze network traffic for malware detection. For instance, [4] proposes a feature representation for HTTP traffic that is invariant to certain polymorphic behaviors, while [6, 8] address HTTPS traffic and detect malware by identifying protocols, applications, and infected servers. Although these solutions address encrypted traffic and polymorphism, they do not focus on the temporal behaviors and lifecycle of the malware to build early warning systems.

## 3. Early Indicators
### 3.1 Challenges
Early identification of malware behavior faces several challenges. First, it is crucial to detect early behaviors of malware before the target attack is executed. This requires extensive long-term data capture of the malware lifecycle, which is currently lacking. We perform our initial studies on an available malware dataset [1] and consider features that pertain to the early stages of any malware lifecycle.

Second, the identified indicators should be invariant to the dynamic threat landscape, including polymorphic and metamorphic malware. Modern malware uses techniques like domain generation algorithms (DGA) and server-side polymorphism to make their behaviors dynamic. Table 1 highlights the polymorphic behavior in the malware dataset we used. For example, the Neris malware in a 6-hour capture involving 5942 flows exhibited 40+ patterns of packet length difference and 7212 DNS queries, indicating polymorphism in packet features and DGAs.

Finally, a growing proportion of malware uses encrypted HTTPS protocol to evade detection by network traffic analysis. Therefore, the features should also include Secure Socket Layer (SSL) and Transport Layer Security (TLS) features.

### 3.2 Features
Table 2 lists the features we evaluated for the analysis, categorized into source-based and connection-based features:

- **Source-based features** capture behavior specific to each host in the network. These include the number of DNS failures and error codes, which are indicative of polymorphic behaviors.
- **Connection-based features** are specific to each connection in a host. These include SSL handshake features, duration, established connection states, and the number and size of packets. We also assess the periodicity of communications, as malware often maintains a heartbeat to communicate its presence and activity to C&C servers.

## 4. Methodology and Results
We extract DNS, connection, and SSL features using Zeek [2] scripts on PCAPs and ARGUS logs from the labeled dataset [1]. We run principal component analysis (PCA) and Kullback-Leibler (KL) Divergence to identify features with higher variance. We then plot the cumulative frequency distribution (CDF) of important features for both malware and benign distributions over time to quantify how early they can contribute to malware detection. Finally, we implement ML models to detect malware and analyze if the trained model can detect malware even when presented with a minimal sequence of packets in the traffic.

### 4.1 DNS Failures
Figures 2(a) and 2(b) show the number of DNS failures observed from a host running the Neris malware and a benign host, respectively, over time. The number of DNS failures is significantly higher in malware traffic, with the SERVFAIL error code being predominant. This indicates that DNS SERVFAIL error codes can be used as potential early indicators in malware detection.

### 4.2 Connection-based Features
Figure 2(c) plots the variance across all connection-based features derived from PCA. The results show that malware and benign traffic differ considerably in features related to periodicity and flow duration. Figure 2(d) shows the cumulative ratio of flows containing certificates to the total number of SSL flows, indicating that almost all malware flows use certificates similar to benign flows, making this feature less useful for detection. Figure 2(e) plots the cumulative standard deviation of periodicity, suggesting that periodicity can be a potential indicator of malware communication.

### 4.3 Early Detection
Figure 2(f) plots the training and cross-validation scores of the ML model trained using the first 50% of flows in the PCAP file. The model achieves >90% accuracy when trained with fewer than 100 flows, indicating its potential for early detection.

## 5. Conclusion
Malware exhibits characteristic patterns in its network communications. In this poster, we highlighted potential early indicators and proposed leveraging them to build an early warning system. The evaluated ML model showed promise in detecting malware early. However, further evaluation of long-term malware communications is necessary to differentiate benign-looking behaviors with higher accuracy. To adapt to the changing threat landscape, we propose building an automated feature extraction system to identify malware-specific indicators of compromise in the future.

## Acknowledgments
This work is supported by the DST-FIST program Grant 2016, Department of Science and Technology, India.

## References
[1] [n. d.]. The CTU-13 Dataset. https://www.stratosphereips.org/datasets-ctu13
[2] [n. d.]. The Zeek Network Security Monitor. https://www.zeek.org/ Accessed: 2019-02-17.
[3] Manos Antonakakis, Tim April, Michael Bailey, Matt Bernhard, Elie Bursztein, Jaime Cochran, Zakir Durumeric, J Alex Halderman, Luca Invernizzi, Michalis Kallitsis, et al. 2017. Understanding the Mirai botnet. In USENIX Security Symposium. 1092–1110.
[4] Karel Bartos, Michal Sofka, and Vojtech Franc. 2016. Optimized Invariant Representation of Network Traffic for Detecting Unseen Malware Variants.. In USENIX security symposium. 807–822.
[5] Yehonatan Cohen and Danny Hendler. 2018. Scalable Detection of Server-Side Polymorphic Malware. Knowledge-Based Systems 156 (2018), 113–128.
[6] Jan Kohout and Tomáš Pevn`y. 2015. Automatic discovery of web servers hosting similar applications. In Integrated Network Management (IM), 2015 IFIP/IEEE International Symposium on. IEEE, 1310–1315.
[7] Chaz Lever, Platon Kotzias, Davide Balzarotti, Juan Caballero, and Manos Antonakakis. 2017. A Lustrum of malware network communication: Evolution and insights. In IEEE Symposium on Security and Privacy (SP), 2017. IEEE, 788–804.
[8] Jakub Lokoč, Jan Kohout, Přemysl Čech, Tomáš Skopal, and Tomáš Pevn`y. 2016. k-NN classification of malware in HTTPS traffic using the metric space approach. In Pacific-Asia Workshop on Intelligence and Security Informatics. Springer, 131–145.