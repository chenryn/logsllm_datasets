-0.958
-0.955
-0.967
Under these policies, Skeptic produces α-values that correlate
very strongly with the percentage of passwords guessed by Weir
et al. [36] in proportional, extraneous, and null reselection modes
(see Table 7). The α-values for the LinkedIn dataset under each
policy and macrobehaviour studied are plotted against percentages
of passwords cracked by Weir et. al [36] in Figure 14.
In convergent reselection mode, Skeptic is much less accurate
for the Yahoo and LinkedIn datasets, but retains a strong correlation
for the RockYou set. We speculate that this is for the same dataset-
specific reasons as presented in Section 5.2 but more pronounced
due to the use of the same dataset in both that work, and this one.
Findings. Skeptic produces α-values and policy rankings that
are very strongly correlated with results obtained by Weir et al. [36]
from large sets of revealed password data.
4We used WebPlotDigitizer: https://github.com/ankitrohatgi/WebPlotDigitizer
Figure 13: Percentage of passwords cracked by Shay et
al. [31] at 106 guesses against α-values yielded by Skeptic
for the LinkedIn dataset in each reselection mode.
these represents a net increase (rather than decrease) in the unifor-
mity of the password distribution on the system. This leads us to the
conclusion that implementation of stricter password composition
policies does, in general, lead to an increase in the resistance of a
system to password guessing attacks. Noteworthy, however, are the
outlying ρ values for the convergent macrobehaviour on the Rock-
You dataset (see Tables 4 and 5), which seem to indicate that user
password reselection behaviour for this dataset more closely resem-
bles the convergent macrobehaviour. This is possibly due to the age
of this dataset in comparison to the others (2009 vs. 2012) and con-
sequently less secure password reselection behaviours by users of
that system. This may be demographics and use-case-related, with
RockYou being an online gaming service that may have had a higher
proportion of younger users less adept at picking secure passwords,
or users who place comparatively little value on online gaming
accounts compared to those tied directly to their professional or
social lives (e.g. the LinkedIn professional social networking site or
Yahoo Voice social media and telecommunications service).
Findings. Overall, Skeptic produces α-values, and therefore
password composition policy rankings, that are strongly correlated
with the results obtained by Shay et al. [31] from real human users
recruited to create passwords under various password composi-
tion policies. This is particularly true when attack magnitude is
greater (e.g. offline attacks) as opposed to smaller attacks in the
online range which are more sensitive to the specific password
distribution they are conducted against. Because Skeptic takes
password distribution uniformity as a measure of security, and thus
is attack-independent, this is to be expected. This uniformity-based
methodology employed by Skeptic is an accurate measure of gen-
eral resistance to password guessing attacks, but a considerably
poorer measure of resistance to specific, targeted attacks tailored
with a specific password distribution in mind.
5.3 Replication of Results: Weir et al.
We next turn our attention to a study by Weir et al. [36] which
draws on leaked password datasets in order to attempt to determine
123456789% Cracked at 106 Guesses (Shay et al.)0.80.60.40.20.0 (Skeptic)proportionalconvergentextraneousnullASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
S. Johnson, J. F. Ferreira, A. Mendes, and J. Cordry
Table 8: All 28 policies investigated in this work, ranked ac-
cording to their α-values given by Skeptic in proportional
reselection mode for each of the 3 datasets studied. Policy
ranking performed by Pacpal.
Policy
3class16
basic20
2word16
2class16
3class12
symbol10
2word12
symbol9
2class12
basic14
comp8
basic16
upper9
upper10
basic12
symbol8
upper7
symbol7
digit10
upper8
basic10
digit9
digit7
digit8
basic9
dictionary8
basic7
basic8
Yahoo
1
3
2
7
4
9
8
5
15
18
6
19
11
12
20
14
10
16
17
13
21
22
24
25
23
26
27
28
RockYou
1
5
4
3
2
8
7
15
6
12
9
13
10
11
14
18
17
16
20
19
21
23
22
24
26
25
28
27
LinkedIn
2
1
5
3
8
9
11
7
12
4
19
6
18
17
10
14
20
16
13
22
15
21
24
23
25
26
27
28
Average
1.33
3
3.67
4.33
4.67
8.67
8.67
9
11
11.33
11.33
12.67
13
13.33
14.67
15.33
15.67
16
16.67
18
19
22
23.33
24
24.67
25.67
27.33
27.67
(* The `basic14` policy is immune to Mirai. *)
Example basic14_mirai_immune :
immune "basic14" mirai_dict.
Proof.
simulate.
Qed.
Figure 15: Examples of a proof in Coq, showing that the pol-
icy named basic14 renders a system immune to a guessing
attack by the Mirai malware.
5.5.1 Mirai. Mirai is a piece of malware that targets network-
enabled devices running Linux, recruiting them into a botnet that
has been used in several high-profile and extremely disruptive dis-
tributed denial-of-service (DDoS) attacks to date [23]. In order to
propagate, Mirai scans IP address ranges for devices with Telnet
enabled. Upon locating a potentially vulnerable device, the mal-
ware will try a dictionary of 62 username/password combinations
(containing 46 unique passwords) containing the factory defaults
of a number of common internet-of-things (IoT) devices including
CCTV cameras, home routers, and network-enabled printers [1].
Using Coq, at the level of the Authority, we modelled the attack
used by Mirai to gain access to a device—a dictionary attack con-
sisting of 46 specific guesses. From here, we were able to determine
for a selection of the password composition policies by Shay et
al. [31] whether or not they render a device immune to Mirai when
enforced by prohibiting the creation of any vulnerable password.
Figure 14: Percentage of passwords cracked in Weir et
al. [36] at 5×104 guesses against α-values yielded by Skeptic
for the LinkedIn dataset in each reselection mode.
5.4 Policy Ranking
If we wish to make an informed choice of password composition
policy, one way we might go about this is to rank our candidates
in order from most to least secure and use the resulting ranking to
make our decision. Output from Pyrrho (see Section 4.2) enables
us to do this already if we manually extract α-values from each
equation file produced and perform additional processing in, for
example, spreadsheet software. This introduces a high potential for
human error, however, and requires considerable additional data
processing work that can be readily automated using the Pacpal
DSL (see Figure 11).
Rankings obtained using Pacpal are shown in Table 8. Crucially,
we do not require any access to the password data itself to produce
these rankings, and thus we avoid the ethical issues involved in
propagating user password data while retaining our ability to justify
and reproduce these rankings as-needed. We make the Pacpal
scripts and equation files necessary to reproduce these results freely
available5.
Findings. We demonstrate that it is possible to use the Skeptic
toolchain to inform password composition policy choice, and that
using the Pacpal DSL this can be done without any additional
manual data processing step.
5.5 Policy Immunity
In this section, we demonstrate the utility of encoding password
composition policies in the Coq proof assistant using Authority
(see Section 4.1) by formally verifying the immunity or vulnera-
bility of 14 password composition policies to the password guess-
ing attacks utilised by the Mirai and Conficker botnet worms. We
achieve this by encoding the notion of vulnerability or immunity
to concrete dictionaries of password guesses in Coq and devising a
simple simulate tactic to prove, by dynamic simulation, assertions
that a password composition policy either does or doesn’t confer
immunity to a guessing attack (see Figure 15).
5Access these here: https://github.com/sr-lab/skeptic-example-results
510152025% Cracked at 5×104 Guesses (Weir et al.)0.80.70.60.50.40.3 (Skeptic)proportionalconvergentextraneousnullSkeptic: Automatic, Justified and Privacy-Preserving Password Composition Policy Selection
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
We are confident that these results (see Table 9) would be useful
to any company producing Linux-based network-enabled devices.
By configuring their devices with a password policy immune to
compromise by Mirai (such as basic16) before shipping, they are
granted assurance that their product cannot be configured to be-
come vulnerable.
Table 9: Whether or not each password composition policy
provides immunity to the dictionary attack used by the Mi-
rai worm, as verified from within Coq.
Immune
Vulnerable
basic14, basic16, basic20, 2class16, 2word16,
3class16, comp8
basic7, basic8, basic9, basic12, 2class12, 2word12,
3class12
5.5.2 Conficker. Another botnet worm, Conficker [32], which first
emerged in 2008, remains a considerable threat even today through
its use of several different propagation vectors to spread. One of
these is a dictionary attack on password-protected administrative
shares on Windows systems, which if successful allows the worm
to write itself to disk on the remote machine and infect it. The
dictionary used by Conficker for this purpose is, again, quite small
containing only 182 passwords (including the empty password). By
encoding our password composition policies from within Coq, we
can ascertain whether each password policy from Shay et al. [31]
confers immunity against this attack as we did for Mirai. The results
of this analysis are shown in Table 10.
Table 10: Whether or not each password composition policy
provides immunity to the dictionary attack used by the Con-
ficker worm, as verified from within Coq.
Immune
Vulnerable
basic14, basic16, basic20, 2class12,
2word12, 2word16, 3class12, 3class16, comp8
basic7, basic8, basic9, basic12
2class16,
Interestingly, if any of the policies analysed here are immune
to Mirai, they are also immune to Conficker (i.e. the set of policies
here that confer immunity to Mirai are a subset of those that confer
immunity to Conficker). We anticipate that researchers will be able
to use Skeptic like this to discover policies immune to attack from
a wide range of malware.
6 CONCLUSION
In this work, we have demonstrated a new methodology for auto-
matically, rigorously and justifiably selecting the most appropriate
choice of password composition policy from a list of candidates.
We achieve this by using a user behaviour model and password
composition policy to induce a change in password probability
distributions derived from large leaked password databases. We
then take the uniformity of these distributions as a proxy for their
security, demonstrating the validity of this approach by using it
to closely reproduce results from two previous studies, one which
collected passwords from users under specific password compo-
sition policies [31] and one which made use of large breached
password datasets [36]. We find that our approach has the advan-
tage of being attack-independent and broadly applicable, with its
only assumption being that the attacker attempts to guess more
common passwords first, but also that this comes at the expense
of the ability to reason accurately about more attacks specifically
tailored to target a particular system.
We have also described and presented Skeptic, an implemen-
tation of this methodology as a software toolchain consisting of:
Authority, a metaprogramming utility for encoding policies in
arbitrary representations; Pyrrho a user behaviour model to re-
distribute probability according to these policies under different
assumptions about user password reselection behaviour; and finally
Pacpal, a straightforward DSL to make the results of this process
accessible to professionals working in the field. In addition, we have
used this tool to obtain new results, including: a ranking of all 28
password composition policies studied in this work according to
their expected effectiveness at mitigating password guessing at-
tacks, under various assumptions about user password reselection
behaviour; a demonstration that under some user behaviour models,
certain password composition policies can have a negative effect on
password security; and formal verification of the immunity of some
password composition policies to the password guessing attacks
employed by the Mirai and Conficker malware.
6.1 Future Work
We are excited about the future of this project, with the design
of machine learning-based user behaviour models for password
reselection representing a particularly promising potential future
research direction. We also plan to expand the capabilities of Pacpal
to increase its utility, and explore the possibility of employing the
power-law equations fitted by Pyrrho in conjunction with existing
password strength estimation algorithms to estimate the success
probability of concrete password guessing attacks given as lists of
strings.
We are also interested in devising tools and techniques to allow
the synthesis of formally verified password composition policy en-
forcement software such as that by Ferreira et al. [13] from models
of password guessing attacks, informed by policy rankings pro-
duced by Skeptic. Attack-defence trees in particular [25] appear
promising as an intuitive formal representation of password guess-
ing attacks and their mitigation measures from which password
composition policies might be synthesised. We have taken some
steps towards producing a user-friendly software interface for non-
expert users to interact with Skeptic and its satellite tooling with
the Passlab project [20], and we believe with further implementa-
tion work we will be able to realise a fully-fledged graphical tool
for defensive password security.
Acknowledgements. The authors would like to thank the
anonymous reviewers, whose expertise and insight was invalu-
able in shaping it.
REFERENCES
[1] Manos Antonakakis, Tim April, Michael Bailey, Matt Bernhard, Elie Bursztein,