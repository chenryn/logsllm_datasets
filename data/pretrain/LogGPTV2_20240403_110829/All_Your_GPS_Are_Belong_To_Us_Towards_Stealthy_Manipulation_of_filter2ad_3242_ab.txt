Portable GPS Spoofer. We implemented a portable
GPS spoofer to perform controlled experiments. As
shown in Figure 1. The spoofer consists of four com-
ponents: a HackRF One-based frontend, a Raspberry
Pi, a portable power source and an antenna. The whole
spoofer can be placed in a small box and we use a pen
as a reference to illustrate its small size. HackRF One
is a Software Deﬁned Radio (SDR). We connect it to
an antenna with frequency range between 700 MHz to
2700 MHz that covers the civilian GPS band L1 (1575.42
MHz). A Raspberry Pi 3B (Quad Core 1.2GHz Broad-
com BCM2837 64bit CPU, 1GB RAM) is used as a cen-
tral server. It runs an SSH-enabled Raspbian Jessie op-
erating system with a LAMP stack server. GPS satellite
signals are generated by an open-source software called
Wireless Attack Launch Box (WALB) [6] running on
Raspberry Pi. The Raspberry Pi has a cellular network
connection and supports remote access through SSH (Se-
USENIX Association
27th USENIX Security Symposium    1529
Distance (m)
Takeover Time (s)
Failure Rate
10
59.2
0
20
37.6
0
30
41.2
0
40
62.4
0
50
35.0
0.2
60
-
1.0
Table 1: Average takeover time and the failure rate.
average takeover time. The result shows that the average
takeover time is slightly higher from the trunk (48 sec-
onds) than that from the backseat (35 seconds), but the
difference is minor. Note that the takeover is a one-time
effort. Once the fake signal is locked in, the connection
can sustain throughout the attack.
Two-Car Setting.
Then we test to place the spoofer
and the smartphone in two different cars, and examine
the impact of distance d. We increase d by a step of 10
meters and measure the takeover time. Cars remain static
during the measurement. As shown in Table 1, the dis-
tance does not signiﬁcantly impact the takeover time, but
it does affect the takeover success rate. When the dis-
tance is longer, the takeover is more likely to be unsuc-
cessful. The effective spooﬁng range is 40–50 meters.
We performed additional tests to examine the potential
blockage effect of other cars on the road. More speciﬁ-
cally, we placed the spoofer and the smartphone in two
different cars. Between these two cars, we placed three
additional cars as the blockage. The result shows the av-
erage takeover time remains similar (41.2 seconds). To
further examine the sustainability of the signal lock-in,
we ﬁx the location of the spoofer’s car, and let the vic-
tim’s car drive in circles (about 10 mph) while keeping
a distance for 15 meters. After driving non-stop for 15
minutes, we did not observe any disconnections, which
conﬁrms the sustainability. Overall, the results demon-
strate the possibility of performing the GPS spooﬁng at-
tack in practice.
4 GPS Spooﬁng Attack Method
The measurement results demonstrate the initial feasibil-
ity, and the next question is how to make the attack more
stealthy. Intuitively, if the attacker randomly changes the
GPS information of the navigation device, the driver can
easily notice the inconsistency between the routing in-
formation and physical road condition. For example, the
spoofed GPS location may trigger the navigation system
to instruct a “left turn”, but there is no way to turn left
on the actual road. In order to make the driver believe
he is driving on the original route, the key is to ﬁnd a
virtual route that mimics the shapes of the real roads. In
this way, it is possible for the navigation instructions to
remain consistent with the physical world. Another con-
tributing factor is that navigation systems typically dis-
play the ﬁrst person view. The driver does not see the
whole route, but instead, focuses on the current route and
Figure 1: A low-cost portable GPS spoofer.
Figure 2: Measurement setups.
cure Shell). By controlling the Raspberry Pi, we can in-
ject the real-time GPS location information either manu-
ally or using scripts. We use a 10000 mAh power bank
as a power source for the entire system. All the compo-
nents are available off-the-shelf. The total cost is about
223 US Dollars ($175+$35+$10+$3).
Measurement Setups. We seek to examine the GPS
spooﬁng range, the takeover time delay, and the poten-
tial blockage effect from the car body. Before and during
the measurements, we have taken active steps to ensure
the research ethics and legality. First, the measurement
was exclusively conducted in China. We obtained a tem-
porary legal permission from the local radio regulation
authority in Chengdu, China for conducting the exper-
iments. Second, we performed the measurements in a
large outdoor parking lot after midnight when there were
no people or cars around (with the permission). Third,
we have carefully tested the GPS signal strength at the
edge of the parking lot to make sure the signals did not
affect the outside areas.
Our measurement focuses on two possible attacking
cases to spoof the GPS device in a moving car (Figure 2).
First, the attacker can place the small spoofer in victim’s
car or stick the spoofer under the car. The attacker then
can remotely login to the spoofer via SSH to perform
the attack through a cellular connection. Second, if the
spoofer cannot be attached to the victim’s car, then the
attacker may tailgate the victim’s car by driving or ﬂying
a drone that carries the spoofer.
Same-Car Setting.
In the same car setting, we place
the smartphone (XIAOMI MIX2 with Android 8.0) as
the victim GPS device in the dashboard area. Then we
place the spoofer under the backseat, or in the trunk. At
each position, we SSH the spoofer to take over the GPS
lock of the phone. We repeat 10 times and calculate the
1530    27th USENIX Security Symposium
USENIX Association
Mobile Charger($10)Raspberry Pi($35)A Pen (for size reference)Antenna($3)HackRF One SDR($175) (a) Same-car Test(b) Two-car TestSpoofer PhoneSpoofer Phoned(a) Original navigation route Γ : P → D
(b) Ghost location B
(c) Actual path of the victim A → C
Figure 3: An attack example: the victim’s original navigation route is P → D; At location A, the spoofer sets the GPS
to a ghost location B which forces the navigation system to generate a new route B → D. Following the turn-by-turn
navigation, the victim actually travels from A to C in the physical world.
the next turn, which is likely to increase the attacker’s
chance of success.
4.1 The Walk-through Example
The victim is a traveler to the New York City who is not
familiar with the area and thus relies on a GPS app to
navigate. Figure 3a shows the victim is driving from
Hamilton Park in New Jersey (P) to Empire State Build-
ing in Manhattan (D). Assume that an attacker takes over
the victim’s GPS receiver at the exit of the Lincoln Tun-
nel (A) as shown in Figure 3c. The attacker creates false
GPS signals to set the GPS location to a nearby “ghost”
location B. To cope with the false location drift, the nav-
igation system will recalculate a new route between B
and D. We call the new route ghost route. On the phys-
ical road, the victim is still at location A and starts to
follow the turn-by-turn navigation from the app. At the
same time, the navigation app is constantly receiving the
spoofed GPS signals. Eventually, the victim will end up
at a different place C. Note that the shape of the B → D
route is similar with that of the A → C route. Depending
on the purpose of the attack, the attacker may pre-deﬁne
the target destination C or simply aims to divert the vic-
tim from arriving the original destination D.
In practice, when the attacker changed the GPS in-
formation from A to B, it may or may not trigger the
“recalculating” voice prompt in the navigation system.
This depends on where B is positioned. If B still remains
on the original route (but at a different location from A),
then there will be no voice prompt. Otherwise, the voice
prompt could be triggered. This turns out to be less of
a problem. Our user study (Section 7) shows that users
often encounter inaccurate GPS positioning (e.g., urban
canyon effect in big cities) and don’t treat the one-time
“recalculating” as an anomaly.
Deﬁnition
A geographic area.
Road segments set.
Road segment connection set. ci = (ri,ri+1).
Road segment length set. li = |ri|.
Connection turning angle set. φi = φ (ri,ri+1).
The merged segment Sk =(cid:2)ri, ...ri+ j
(cid:3).
Symbol
G
R = {ri}
C = {ci}
L = {li}
Φ = {φi}
S
P, D, Γ
Γo,Γg,Γv
Loca,Locg
Ωdri f tDis
vg, va
Ωspeed
Starting point, destination, navigation route.
Original route, ghost route, victim route.
actual location, ghost location.
Max. drifted distance between Locg and Loca.
Ghost speed, actual speed.
Max. speed scale factor |(vg − va)|/va ≤ Ωspeed.
Table 2: Notation and deﬁnition.
4.2 Attack Formulation
A successful spooﬁng attack relies on a careful choice
of the ghost location B. The ghost route B → D should
ﬁt the road map starting from A. In addition, the ghost
location B should be close to A so that there will not be an
obvious location change on the navigation map screen.
In the following, we describe our attack objectives and
constraints. Key notations are listed in Table 2.
Road Model.
As shown in Figure 4, a geographic
area G is represented by a set of road segments and
connection points. R is a set of road segments, and
C = {ci = (ri,ri+1)} is a set of connection points. Road
segments are inter-connected through connection points.
L deﬁnes road segment length. Φ quantiﬁes a connection
point’s turning angle. More speciﬁcally, φi = φ (ri,ri+1),
φi ∈ [−π,π). We use the counterclockwise convention to
calculate the angle [4]. φi > 0 and φi < 0 indicate a left
and right turn respectively.
Navigation Route.
Given a starting point and a des-
tination point, a navigation route Γ is calculated by the
navigation system represented by road segments: Γ =
(r1,r2, ...,rn). In practice, navigation systems typically
tell people to keep driving along the road crossing mul-
tiple segments before a turn is required. To this end, we
USENIX Association
27th USENIX Security Symposium    1531
Figure 4: Road model example.
further merge adjacent road segments. If the turning an-
gle at connection point (ri,ri+1) is below a certain thresh-
old θ (say 30◦), these two road segments can be merged.
After merging such road segments, the navigation route
is rewritten as Γ = (S1,S2, ...,Sm).
Consider a victim is following an original route Γo
to a destination D. At some point, an attacker launches
the spooﬁng attack to change the victim’s GPS from its
actual location Loca to a nearby ghost location Locg.
This will trigger the navigation system to recalculate
a new route from Locg to D as the ghost route Γg =
(Sg1,Sg2, ...,Sgm). Consequently, the victim will follow
navigation instructions from Γg and will end up travers-
ing a victim route Γv = (Sv1,Sv2, ...,Svm). In our attack, Γv
should match Γg in terms of road segments and connec-
tions. Note that Γv might contain wrong-way segments
(if Svi’s direction is against the trafﬁc) or loops (if Sv has
the same starting and ending point).
Attack Objective.
Given the victim’s current lo-
cation Loca and destination D, the attack AT K aims
to identify feasible victim routes and the associated
location Locg and ghost route Γg. We de-
ghost
ﬁne O = AT K(G,D,Loca) = {o1,o2, ...,ok}, where oi =
(Γvi,Γgi,Locgi) such that Γvi matches Γgi. If the attacker
aims to divert the victim to a pre-deﬁned destination area
C, then the attacker only needs to search the oi where Γvi
bypasses C.
Constraints.
The constraint Ω includes two ele-
ments. (1) Location drift constraint Ωdri f tDis which de-
ﬁnes the maximum drifted distance between Locg and
Loca at the beginning of the attack, i.e., ||Locg−Loca|| ≤
Ωdri f tDis. This is to avoid obvious location change on the
navigation map screen. (2) Speed scale factor constraint
Ωspeed that limits the ghost speed vg within a reasonable
range, i.e., |(vg − va)|/va ≤ Ωspeed. The above practical
constraints can be set to different values by attackers in
different situations, e.g., depending on the awareness of
the human users and the navigation system.
5 Detailed Attack Algorithm Design
Next, we describe the detailed design of our attack al-
gorithm. The attack algorithm contains two key com-
ponents: road network construction and attack route
search. For any target geographic area, we construct the
road network from public map data. This is a one-time
effort and can be computed ofﬂine. In our study, we use
the data from OpenStreetMap to build a road network
G. Based on the graph, we introduce two algorithms to
search the attack routes. The algorithms will return a
list of potential attack-launching positions and the corre-
sponding victim routes. Using the searching algorithms,
the attacker can also specify a target destination (area) to
divert the victim to.
5.1 Basic Attack Design
Given graph G, victim’s current location Loca, destina-
tion D and constraints Ω, we design a basic search algo-
rithm for the ghost locations and victim routes. Before
introducing the algorithm, we clarify on a few assump-
tions. First, given a starting point and a destination, the
attacker needs to compute a navigation route Γ similar
to what the victim has. by querying the navigation ser-
vice that the victim is using (e.g., Google Maps APIs). In
addition, the attacker knows the victim’s actual location
Loca. For the same-car setting (e.g., spoofer is attached
under the victim car), our spoofer is able to tell the fake
GPS signals and the real signals apart, and send the vic-
tim’s actual location back to the attacker. For the tailgat-
ing model, the victim is within the sight of the attacker,
and thus Loca is known.
Regarding the victim’s destination D, it is not neces-
sarily the ﬁnal destination. It can be simply a rough area