在 `nmtui`{.literal} 中修改了连接后，您必须重新激活连接。请注意，在
`nmtui`{.literal} 中重新激活连接会暂时取消激活连接。
::: orderedlist
**流程**
1.  在主菜单中选择 `Activate a connection`{.literal} 菜单条目：
    ::: informalfigure
    ::: mediaobject
    ![nmtui 激活连接](images/nmtui_Activate_a_Connection.png)
    :::
    :::
2.  选择修改的连接。
3.  在右侧，选择 `Deactivate`{.literal} 按钮，然后按
    [**Enter**]{.keycap}：
    ::: informalfigure
    ::: mediaobject
    ![nmtui
    取消激活修改的连接](images/nmtui_Deactivate_a_Modified_Connection.png)
    :::
    :::
4.  再次选择连接。
5.  在右侧，选择 `Activate`{.literal} 按钮，然后按
    [**Enter**]{.keycap}：
    ::: informalfigure
    ::: mediaobject
    ![nmtui
    激活修改的连接](images/nmtui_Activate_a_Modified_Connection.png)
    :::
    :::
:::
:::
:::
[]{#getting-started-with-nmcli_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#getting-started-with-nmcli_configuring-and-managing-networking}第 5 章 nmcli 入门 {.title}
:::
本节描述了有关 `nmcli`{.literal} 工具的一般信息。
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#the-different-output-formats-of-nmcli_getting-started-with-nmcli}nmcli 输出格式的不同 {.title}
:::
`nmcli`{.literal} 工具支持不同的选项来修改 `nmcli`{.literal}
命令的输出。通过使用这些选项，您可以只显示所需的信息。这简化了处理脚本中输出的过程。
默认情况下，`nmcli`{.literal} 工具以类似表的格式显示其输出：
``` literallayout
# nmcli device
DEVICE  TYPE      STATE      CONNECTION
enp1s0  ethernet  connected  enp1s0
lo      loopback  unmanaged  --
```
使用 `-f`{.literal}
选项，您可以按自定义顺序显示特定列。例如，如果只需要显示
`DEVICE`{.literal} 和 `STATE`{.literal} 列，输入：
``` literallayout
# nmcli -f DEVICE,STATE device
DEVICE  STATE
enp1s0  connected
lo      unmanaged
```
`-t`{.literal} 选项允许您以冒号分隔格式显示输出的每个字段：
``` literallayout
# nmcli -t device
enp1s0:ethernet:connected:enp1s0
lo:loopback:unmanaged:
```
如果使用脚步来处理输出时，可以使用 `-f`{.literal} 和 `-t`{.literal}
的组合来只显示特定字段（以冒号分隔不同字段）：
``` literallayout
# nmcli -f DEVICE,STATE -t device
enp1s0:connected
lo:unmanaged
```
:::
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#using-tab-completion-in-nmcli_getting-started-with-nmcli}在 nmcli 中使用 tab 自动完成 {.title}
:::
如果在您的主机上安装了 `bash-completion`{.literal} 软件包，则
`nmcli`{.literal} 程序支持 tab
自动完成功能。这可让您自动完成选项名称，并识别可能的选项和值。
例如：如果您输入 `nmcli con`{.literal} 并按 [**Tab**]{.keycap} 键，则
shell 会自动完成命令到 `nmcli connection`{.literal}。
您所输入的选项或值必须是唯一的。如果它不是唯一的，那么 `nmcli`{.literal}
会显示所有可能。例如：如果您输入 `nmcli connection d`{.literal} 并按
[**Tab**]{.keycap} 键，则命令会显示命令 `delete`{.literal} 和
`down`{.literal} 作为可能的选项。
您还可以使用 tab
自动完成来显示连接配置集中可以设置的所有属性。例如，如果您输入
`nmcli connection modify connection_name`{.literal} 并按
[**Tab**]{.keycap} 键，该命令会显示可用属性的完整列表。
:::
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#ref-frequent-nmcli-commands_getting-started-with-nmcli}频繁使用的 nmcli 命令 {.title}
:::
下面是一个经常使用的 `nmcli`{.literal} 命令的概述。
::: itemizedlist
-   要显示列表连接配置集，请输入：
    ``` literallayout
    # nmcli connection show
    NAME    UUID                                  TYPE      DEVICE
    enp1s0  45224a39-606f-4bf7-b3dc-d088236c15ee  ethernet  enp1s0
    ```
-   要显示特定连接配置集的设置，请输入：
    ``` literallayout
    # nmcli connection show connection_name
    connection.id:             enp1s0
    connection.uuid:           45224a39-606f-4bf7-b3dc-d088236c15ee
    connection.stable-id:      --
    connection.type:           802-3-ethernet
    ...
    ```
-   要修改连接的属性，请输入：
    ``` literallayout
    # nmcli connection modify connection_name property value
    ```
    如果您将多个 `property value`{.literal}
    组合传递给命令，则可以使用单个命令来修改多个属性。
-   要显示网络设备列表、其状态以及使用该设备的连接配置集，请输入：
    ``` literallayout
    # nmcli device
    DEVICE  TYPE      STATE         CONNECTION
    enp1s0  ethernet  connected     enp1s0
    enp8s0  ethernet  disconnected  --
    enp7s0  ethernet  unmanaged     --
    ...
    ```
-   要激活连接，请输入：
    ``` literallayout
    # nmcli connection up connection_name
    ```
-   要取消激活连接，请输入：
    ``` literallayout
    # nmcli connection down connection_name
    ```
:::
:::
:::
[]{#getting-started-with-configuring-networking-using-the-gnome-gui_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#getting-started-with-configuring-networking-using-the-gnome-gui_configuring-and-managing-networking.html#getting-started-with-configuring-networking-using-the-gnome-gui_configuring-and-managing-networking}第 6 章 使用 GNOME GUI 配置网络入门 {.title}
:::
您可以在 GNOME 中使用以下方法管理和配置网络连接：
::: itemizedlist
-   桌面右上角的 GNOME Shell 网络连接图标
-   GNOME [**[control-center]{.application}**]{.strong} 应用程序
-   GNOME [**[nm-connection-editor]{.application}**]{.strong} 应用程序
:::
::: section
::: titlepage
# []{#getting-started-with-configuring-networking-using-the-gnome-gui_configuring-and-managing-networking.html#connecting-to-a-network-using-the-gnome-shell-network-connection-icon_getting-started-with-configuring-networking-using-the-gnome-gui}使用 GNOME Shell 网络连接图标进行网络连接 {.title}
:::
如果使用 GNOME GUI，可以使用 GNOME Shell 网络连接图标进行网络连接。
::: itemizedlist
**先决条件**
-   已安装 `GNOME`{.literal} 软件包组。
-   您已登录到 GNOME。
-   如果网络需要特定的配置，如静态 IP 地址或 802.1x
    配置,则需要已创建了连接配置集。
:::
::: orderedlist
**流程**
1.  点击桌面右上角的网络连接图标。
    ::: informalfigure
    ::: mediaobject
    ![网络连接图标](images/network-connection-icon.png)
    :::
    :::
2.  根据连接类型，选择 `Wired`{.literal} 或 `Wi-Fi`{.literal} 条目。
    ::: informalfigure
    ::: mediaobject
    ![扩展网络连接图标](images/network-connection-icon-expanded.png)
    :::
    :::
    ::: itemizedlist
    -   对于有线连接，选择 `Connect`{.literal} 以连接网络。
    -   对于 Wi-Fi 连接，击
        `Select network`{.literal}，选择您要连接的网络，然后输入密码。
    :::
:::
:::
:::
[]{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html#assembly_introduction-to-nmstate_configuring-and-managing-networking}第 7 章 Nmstate 简介 {.title}
:::
nmstate 是一个声明性网络管理器 API。`nmstate`{.literal} 软件包提供
`libnmstate`{.literal} Python 库和命令行工具
`nmstatectl`{.literal}，以管理 RHEL 上的 NetworkManager。使用 Nmstate
时，您可以使用 YAML 或 JSON 格式的说明描述预期的网络状态。
使用 Nmstate 具有许多益处。例如，它：
::: itemizedlist
-   提供稳定且可扩展的接口来管理 RHEL 网络功能
-   支持主机和集群级别的原子和事务操作
-   支持对大多数属性进行部分编辑，并保留未在说明中指定的现有设置
-   提供插件支持，使管理员能够使用自己的插件
:::
::: section
::: titlepage
# []{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html#con_using-the-libnmstate-library-in-a-python-application_assembly_introduction-to-nmstate}在 Python 应用程序中使用 libnmstate 库 {.title}
:::
`libnmstate`{.literal} Python 库可让开发人员在自己的应用程序中使用
Nmstate
要使用库，请在源代码中导入它：
``` literallayout
import libnmstate
```
请注意，您必须安装 `nmstate`{.literal} 软件包才能使用此库。
::: example
[]{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html#idm140430986223056}
**例 7.1. 使用 libnmstate 库查询网络状态**
::: example-contents
以下 Python 代码导入 `libnmstate`{.literal}
库，并显示可用的网络接口及其状态：
``` literallayout
import json
import libnmstate
from libnmstate.schema import Interface
net_state = libnmstate.show()
for iface_state in net_state[Interface.KEY]:
    print(iface_state[Interface.NAME] + ": "
          + iface_state[Interface.STATE])
```
:::
:::
:::
::: section
::: titlepage
# []{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html#proc_updating-the-current-network-configuration-using-nmstatectl_assembly_introduction-to-nmstate}使用 nmstatectl 更新当前的网络配置 {.title}
:::
您可以使用 `nmstatectl`{.literal}
工具将一个或多个接口的当前网络配置存储在文件中。然后您可以使用此文件：
::: itemizedlist
-   修改配置并将其应用到同一系统。
-   将 文件复制到其他主机上，并使用相同或修改的设置配置主机。
:::
这个步骤描述了如何将 `enp1s0`{.literal}
接口的设置导出到文件中，修改配置，并将设置应用到主机。
::: itemizedlist
**先决条件**
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  将 `enp1s0`{.literal} 接口的设置导出到
    `~/network-config.yml`{.literal} 文件中：
    ``` literallayout