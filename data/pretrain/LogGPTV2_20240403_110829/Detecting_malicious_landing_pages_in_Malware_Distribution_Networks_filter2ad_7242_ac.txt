### Feature Selection and Pruning

From the 53 MDNs, feature selection yielded a total of 538 individual strings. An example of these strings is shown in Table II. As detailed in Section III-E, we submitted these candidate features to a 10% sub-sample of the daily crawl results from the static crawler. This process generated over 2.9 million URLs, which were initially flagged as potentially suspicious.

To refine this list, we discarded features that returned fewer than 60% detections on pages marked as malicious by the dynamic crawler. This pruning step reduced the candidate feature list to a final set of 128 high-precision features. These features were then resubmitted to the static crawler to identify all web pages scanned on January 20, 2012, that contained at least one of these features. This final step produced a list of 289,087 URLs, which we suspect to be landing pages belonging to 24 MDNs. The distribution of landing pages per MDN is illustrated in Figure 3, showing that the number of landing pages varies significantly, with the largest MDN having over 100,000 pages.

### Validation

The final step is to validate the effectiveness of the system. We compared our method to three existing systems: the production dynamic crawler, the Nozzle [11] system, and the Zozzle [12] system. A subset of the discovered URLs was submitted to the production dynamic crawler for validation. The results for the rule-based system are provided in Table IV for the datasets from August 25, 2011, and January 2, 2012.

Due to resource constraints, we were only able to submit a portion of the newly detected URLs to the production dynamic crawler. Specifically, we submitted 48,189 pages from the August dataset and 88,503 pages from the January dataset. The dynamic crawler detected 57.2% of the webpages as malicious for the August 25, 2011 dataset and 58.1% for the January 2, 2012 dataset. This indicates that the proposed system has very high precision, given that malicious webpages constitute a small fraction of the total internet content and random sampling is not effective.

In a production environment, an automated detection system is considered actionable if 1% of the predicted malicious pages are confirmed. However, we cannot fully analyze the system's recall due to the computational costs of scanning the entire web-scale dataset. Of the 58.1% verified as malicious, 42.6% had not been previously discovered. This suggests that the expected number of new landing pages for these MDNs is approximately 123,071, expanding the verified footprint of the MDNs by about 17.1%.

Additionally, we evaluated the same webpages using the Nozzle and Zozzle systems. Nozzle, which detects heap sprays in runtime, did not find any of the webpages identified by our method. Zozzle, a classification system for detecting malicious JavaScript, detected four pages for the first dataset and 350 for the second. These results indicate that our rule-based detection system is highly effective and complementary to the Nozzle and Zozzle systems.

### Classifier-Based MDN Detection

The rule-based method for detecting MDN landing pages demonstrated high precision, with over 57% of the flagged pages being confirmed as hosting drive-by download attacks. We now explore a classifier-based approach to see if it can produce even better results.

#### A. Classifier Features and Regular Expression Generation

The classifier builds upon the rule-based system, including the preprocessing step (identifying MDNs from DCTraces, described in Section III-F1) and the string cluster features (Section III-C). Additionally, we investigate two new types of features: individual string features in isolation and regular expression features. The regular expression generator, based on the algorithm proposed in [13], generates expressions that match the input strings, potentially capturing more generic forms of features. The three types of features are labeled as STRING MATCH, STRING CLUSTER, and REGEX CLUSTER in the evaluation figures.

#### B. Classifier Training

We used the 60-day DCTraces ending on August 25, 2011, to train the classifiers and evaluate the performance of different feature sets. After MDN labeling and feature selection, we constructed labeled, sparse binary datasets for each feature set. Each dataset consists of 64,000 rows, half from benign webpages and half from known MDN landing pages. An element in the dataset is set to true if the webpage contains the corresponding feature.

#### C. Classifier Performance Evaluation

Figure 4 shows the 5-fold cross-validation DET curves for the STRING MATCH, STRING CLUSTER, and REGEX CLUSTER classifiers. The low false positive region is highlighted in Figure 5, demonstrating that the three algorithms are comparable, with a minor improvement offered by the STRING MATCH algorithm.

Further analysis of the DET curves is provided in Figure 6, which shows the histogram of the STRING CLUSTER classifier's score, representing the log odds that a landing page is malicious. The separation between malicious and benign pages is clear, with five false positives noted in this fold. The false positive rate increases as we sweep a threshold from right to left in the log odds histogram.

Figure 7 displays the distribution of the STRING CLUSTER classifier probabilities for a random sample of one million URLs, indicating many distinct sets of URLs containing string cluster features. This suggests that the classifier will either identify a large number of truly malicious webpages or a large number of false positives.

#### D. Classifier Validation

We also evaluated the STRING CLUSTER classification system, submitting only the URLs produced by this system to the production dynamic crawler. The validation results for the January 2012 dataset are provided in Table IV. We conducted two experiments: Highest Probability and Random Sampling. For the Highest Probability experiment, we selected URLs predicted to be malicious by the classifier, and for the Random Sampling experiment, we randomly selected URLs.