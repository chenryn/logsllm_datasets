### Optimized Text

**Table 5: Forged PCR Values After the SRTM Attack**

| PC No. | TPM Ver. | PCR No. | Original System | Compromised System |
|--------|----------|---------|-----------------|--------------------|
| 1-7, 9-11 | 1.2, 2.0 | 4, 9    | 1C2549F2...     | 7767E9EB...        |
| 8      | 1.2      | 4, 9    | 849162AD...     | 7767E9EB...        |
| 1-7, 9-11 | 1.2, 2.0 | 4, 9    | DF5AD048...     | DA28F689...        |
| 8      | 1.2      | 4, 9    | 9966FE5A...     | DA28F689...        |

**Observations:**
- The Lenovo m93p machine (PC #8) has a different value for PCR #4, even though it uses the same bootloader.
- The m93p machine uses a hash of 0xFFFFFFFF as the event separator (EV_SEPARATOR), while all other devices use 0x00000000.
- 0xFFFFFFFF is used when the firmware is BIOS, and 0x00000000 is used for UEFI, provided the TPM version is 1.1 or 1.2.
- For TPM 2.0, both values are allowed. The m93p machine, which uses TPM 1.2 and UEFI, should use 0x00000000.
- This non-conformity does not immediately compromise security but may complicate resource management in an enterprise setting.

**Table 4: Reset and Replay Attack Vulnerability**

- All devices with TPM 2.0 are vulnerable to the reset and replay attack, regardless of the manufacturer.
- All TPM 1.2 devices, except for the Dell Optiplex 7040 mini PC (PC #9), handle the exception by entering failure mode, where reset and replay are not possible.
- The Dell Optiplex 7040 machine with TPM 2.0 (PC #3) is exploitable, while the same machine with TPM 1.2 is not, indicating that different branches of the same binary are executed based on the TPM version.

**Figure 14: Event Log Summary for PCR #0 and PCR #2 in the GIGABYTE Q170-MK**

- The GIGABYTE Q170-MK desktop PC (PC #4) successfully resets the TPM state but fails to replay the measurements.
- The event logs show that the SRTM of the PC does not extend the digest of type 0x8 (EV_S_CRTM_VERSION) and 0x80000008 (EV_EFI_PLATFORM_FIRMWARE_BLOB), which does not comply with the TCG standard [39].

**Table 6: Forged PCR Values After the DRTM Attack**

| PC No. | TPM Ver. | PCR No. | Before Intrusion | After Intrusion | After DRTM Attack |
|--------|----------|---------|------------------|-----------------|-------------------|
| 1, 3   | 2.0      | 17, 18, 19 | 821701E9...     | 257B1024...     | 2E3DC497...       |
| 8, 9   | 1.2      | 17, 18, 19 | F443F487...     | FC8AD796...     | E90F27EC...       |
| 1, 3   | 2.0      | 17, 18, 19 | 3DC85583...     | E4C61D2A...     | 821701E9...       |

**Discussion and Solutions**

**5.1 Discussion**

- **Condition 1:** The CRTM must be trustworthy. In S-CRTM, the code is stored in ROM and initializes the chain of measurements. For D-CRTM, the measurement environment is initialized and started by special hardware instructions.
- **Condition 2:** The PCRs should be resettable only by trusted code.
- **Condition 3:** The chain has to be contiguous.

Our SRTM attack falsifies Condition 2 by resetting the TPM without rebooting the system, enabled by the TPM 2.0 specification [37]. The vulnerability occurs when TPM2 Startup(STATE) is called with no preceding TPM2 Shutdown(STATE) command, allowing the attacker to reset the PCRs by sending TPM2 Startup(CLEAR) command.

The DRTM attack raises questions about the correctness of the software in the trust chain. It is difficult to make software free of vulnerabilities, and even with secure designs, there is room for bugs.

**5.2 Solutions**

- **SRTM Vulnerability:** Prohibit the platform from entering the S3 sleeping state, or revise the TPM 2.0 specification to mandate entering failure mode if there is no state to restore.
- **DRTM Vulnerability:** Patch the tboot project to remove exposed function pointers and protect APIs inside the measured environment from unauthorized access.

**6. Related Work**

- **SRTM Attacks:** Previous work includes physical attacks, such as wiretapping and resetting the TPM chip, and software-based attacks that disable SRTM.
- **DRTM Attacks:** Exploits against Intel TXT, SMM, and hypervisors, demonstrating the need for secure coding standards and careful auditing.

**7. Conclusion**

The TPM is a critical hardware component for providing the root of trust in modern computers. Ensuring its security requires adherence to TCG specifications and robust implementation practices.

---

This optimized text provides a clear, coherent, and professional presentation of the information, making it easier to understand and follow.