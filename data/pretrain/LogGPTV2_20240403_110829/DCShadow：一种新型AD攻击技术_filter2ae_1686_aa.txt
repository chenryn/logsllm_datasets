# DCShadow：一种新型AD攻击技术
|
##### 译文声明
本文是翻译文章，文章原作者 Luc Delsalle，文章来源：blog.alsid.eu
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 一、前言
2018年1月24日，[Benjamin Delpy](https://twitter.com/gentilkiwi)和[Vincent Le
Toux](https://twitter.com/mysmartlogon)这两名安全研究人员在[BlueHat
IL](http://www.bluehatil.com/)安全会议期间公布了针对活动目录（AD，Active
Directory）基础架构的一种新型攻击技术：[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)。利用这种技术，具有适当权限的攻击者可以创建恶意域控制器，将恶意对象复制到正在运行的[Active
Directory](https://technet.microsoft.com/en-us/library/cc977985.aspx)基础架构中。
在本文中我们会介绍这种攻击方法所依赖的基础技术，顺便讨论其对现有AD基础架构所造成的安全影响。最后，我们也会分析红蓝对抗中蓝队如何检测这类攻击活动。
## 二、DCShadow的创新点
红队或者攻击者之所以想突破AD基础架构，主要是想在不引起安全检测告警的情况下获取用户及主机凭据。
为了实现这一目标，随着时间的推移，人们开发出了多种攻击技术，如LSASS注入、滥用Shadow
Copy功能、解析NTFS卷、ESENT操作、敏感属性操作等。大家可以访问[ADSecurity.org](https://adsecurity.org/?p=2398)了解更多细节，这个网站已经归纳的非常好了。
在这些攻击方法中，有一种方法与[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击有关。[DCSync](https://adsecurity.org/?p=1729)攻击方法于2015年推出，这种攻击需要依靠域管理员（Domain
Admins）或者域控制器（Domain
Controllers）组中的成员实现对域控制器（DC）的数据复制操作（为了完成这一任务，攻击者需要掌握GetChangeAll权限，默认情况下管理员账户以及DC都具备该权限）。实际上，根据[MS-DRSR规范](https://msdn.microsoft.com/en-us/library/cc228086.aspx)中关于域控制器数据复制的描述，这些组可以通过[GetNCChanges
RPC](https://msdn.microsoft.com/en-us/library/dd207691.aspx)向DC请求复制AD对象（包括用户凭据信息）。大家可以阅读ADSecurity.org上的这篇[文章](https://adsecurity.org/?p=1729)了解更多攻击细节。
图1. 使用mimikatz工具发起DCSync攻击
[DCSync](https://adsecurity.org/?p=1729)攻击也有不足之处，比如攻击者无法在目标AD域中注入新的对象。当然，攻击者依然可以使用Pass-The-Hash（哈希传递）技术接管管理员账户，然后再注入对象，但这个过程更加麻烦、步骤繁琐，因此蓝队很有可能会捕捉到这个攻击行为。[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击方法对[DCSync](https://adsecurity.org/?p=1729)做了些改进，因此能够弥补这些缺点。
在[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击中，攻击者无需复制数据，只需要在目标基础架构中注册新的域控制器，以便注入AD对象或者修改已有的对象（替换该对象的属性内容）。使用恶意域控制器并不是一个新的点子，人们之前已经[多次](https://www.blackhat.com/docs/us-16/materials/us-16-Beery-The-Remote-Malicious-Butler-Did-It-wp.pdf)提到过这种方法，但这些方法需要较“粗鲁”的一些技术的配合（比如安装Windows
Server虚拟机），同时还需要登录到正常的域控制器上以便虚拟机能升级为目标域的DC，这些方法并不是特别理想。
图2. 升级为DC过程中生成的日志事件
为了理解[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)背后的天才想法，我们需要理解DC到底是什么，以及DC在AD基础架构中具体的注册过程。
## 三、域控制器（DC）
根据[MS-ADTS（Active Directory Technical
Specification，活动目录技术规范）](https://msdn.microsoft.com/en-us/library/cc223122.aspx)中的描述，AD是依赖于某些专用服务的一种multi-master（多主）架构。其中，DC负责托管与AD对象有关的数据，你可以将DC看成一种服务或者提供该服务的服务器。多个DC之间可以协同工作，以确保在本地对AD对象的修改能正确同步到所有的DC上。
当DC以RW DC角色运行时， DC中包含域配置（Configuration）的完整命名上下文（naming
context，NC）副本、schema（架构）、以及该域对应的森林（forest）的一个域名上下文。这样一来，每个RW
DC就会拥有域的所有对象，包括凭据数据以及各种秘密数据（如私钥或者会话密钥）。因此在红蓝对抗中，是个人都知道DC是蓝队应重点保护唯一元素（有各种方法可以访问DC，管理员账户或者权限只是其中的两种方式）。
## 四、DC所提供的服务
如果我们从技术原理角度详细描述DC，这个过程可能会比较复杂，对理解[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击而言帮助不大。简单起见，如果某台服务器可以提供如下4个关键组件，那么我们就可以称之为域控制器：
1、能够复制自身信息的一个数据库引擎（也就是说，我们可以通过LDAP协议访问该数据库，并且该数据库实现了符合[MS-DRSR](https://msdn.microsoft.com/en-us/library/cc228086.aspx)以及[MS-ADTS](https://msdn.microsoft.com/en-us/library/cc223122.aspx)规范的几种RPC）。
2、可以通过[Kerberos](https://en.wikipedia.org/wiki/Kerberos_%28protocol%29)、[NTLM](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749%28v=vs.85%29.aspx)、[Netlogon](https://technet.microsoft.com/fr-fr/library/cc962284.aspx)或者[WDigest](https://technet.microsoft.com/en-us/library/cc778868%28v=ws.10%29.aspx)协议访问的身份认证服务器。
3、依赖于[SMB](https://msdn.microsoft.com/fr-fr/library/hh831795%28v=ws.11%29.aspx)协议以及[LDAP](https://www.ietf.org/rfc/rfc2251.txt)协议的[GPO](https://en.wikipedia.org/wiki/Group_Policy)配置管理系统。
4、支持认证的[DNS服务器](https://msdn.microsoft.com/en-us/library/cc448821.aspx)（可选），客户端可以通过该服务器来定位相关资源。
图3. DC提供的各种服务
## 五、活动目录复制
除了这些服务外，我们的域控制器必须在目录基础架构中注册，以便另一个DC将其当成支持数据复制的一台源服务器。[NTDS](https://technet.microsoft.com/en-us/library/cc772829%28v=ws.10%29.aspx)服务上运行着名为[Knowledge Consistency
Checker（KCC，知识一致性检查）](https://technet.microsoft.com/en-us/library/cc961781.aspx?f=255&MSPPError=-2147217396)的一个进程，可以完成数据复制任务。
KCC的主要功能是生成并维护站点内复制以及站点间复制的拓扑。也就是说，KCC进程可以决定DC之间的链接关系，以创建有效的复制过程。对于站点内复制，每个KCC会生成自己的复制链接。对于站点间复制，每个站点上的KCC会生成所有的复制链接。这两种复制模式如下图所示：
图4. 两类复制过程
默认情况下，每隔[15分钟](https://technet.microsoft.com/en-us/library/cc961781.aspx)KCC就会启动AD复制拓扑的绘制过程，以实现一致性和定时传播。KCC通过每个AD对象所关联的USN来识别活动目录中出现的改动，确保复制拓扑中不会出现被孤立的域控制器。有趣的是，在这之前Windows可能已经通过RPC（如DrsAddEntry）或者SMTP（仅适用于Schema以及Configuration）完成AD复制过程。
图5. 注册表中关于复制时间间隔的键值
为了将新的服务器注入复制拓扑中，[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)背后的研究人员做了许多工作，其中最关键的就是成功识别出完成该任务所需的最少改动，这样就可以滥用这一过程，悄悄实现恶意信息的注入。
## 六、DCShadow的工作过程
[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击的目的是注册一个新的域控制器，实现恶意AD对象的注入，以便创建后门或者获取各种类型的非法访问渠道及权限。为了实现这一目标，[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击必须修改目标AD基础架构的数据库，授权恶意服务器成为复制过程中的一员。
###  6.1 注册新的域控制器
根据 [MS-ADTS规范](https://msdn.microsoft.com/en-us/library/cc223122.aspx)中的描述，AD数据库中使用nTDSDSA类的对象来表示域控制器，该对象始终位于域的配置（configuration）命名上下文中。更确切地说，每个DC都存储在站点容器内（objectclass为sitesContainer），是server对象的子节点。
图6. 蓝色框中为存储NTDS-DSA对象的容器，红色框中为NTDS-DSA对象
经过简单查看，我们发现NTDS-DSA对象只能是server对象的子对象，而server对象只能是organization或者server对象的子对象：
1、server对象只能存储在serversContainer对象中，而后者只能在Configuration NC中找到。
2、organization对象只能存放在locality、country或者domainDNS对象中，这些对象可以在域的NC中找到。
图7. 可以创建ntds-dsa对象的位置
这样一来，域控制器（nTDSDSA对象）只能在Configuration或者Domain
NC中创建。在实际环境中，貌似只有站点容器（sitesContainer对象）中会存储nTDSDSA对象。由于KCC依靠站点信息来计算复制拓扑，因此只使用这些对象也符合常理。需要注意的是，我们无法使用LDAP协议来创建nTDSDSA对象。
说到这里你可能已经猜到，[DCShadow](https://www.dropbox.com/s/baypdb6glmvp0j9/Buehat%20IL%20v2.3.pdf)攻击的主要步骤是在schema的Configuration区中创建一个新的server及nTDSDSA对象。做到这一点后，攻击者就可以生成恶意复制数据，并将这些数据注入到其他域控制器中。