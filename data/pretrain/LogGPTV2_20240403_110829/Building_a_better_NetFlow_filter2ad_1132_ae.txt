HTTP
Unclassiﬁed TCP
ALL UDP Traﬃc
AS 2914 src
AS 2914 dst
NNTP
SMTP
HTTPS
DNS
Aggregate
ALL Traﬃc
HTTP
Unclassiﬁed TCP
AS 2914 src
NNTP
ALL UDP Traﬃc
AS 2914 dst
SMTP
HTTPS
DNS
ANF
% of
total
100
48.
18.
9.1
7.6
4.9
3.5
2.2
1.6
1.5
st.dev
0.20
0.30
0.48
0.51
0.64
0.80
0.73
1.59
1.99
2.10
Table 2(a): Packet errors
bias
0.03
-0.02
0.11
0.00
0.21
-0.09
0.09
-0.07
-0.08
0.34
st.dev.
ANF
% of
total
100
46.
24.
10.
6.4
3.6
3.6
1.3
0.8
0.3
bias
0.02
0.02
0.08
0.20
0.08
0.00
-0.13
-0.28
-0.18
-0.05
0.28
0.31
0.64
0.72
0.80
0.79
1.03
2.11
2.77
2.36
Table 2(b): Byte errors
“Psychic NF”
st.dev
bias
0.00
0.00
-0.01
0.23
0.55
-0.00
0.81
-0.02
1.34
-0.10
0.87
0.20
0.00
1.38
2.11
0.97
2.30
-0.70
-0.36
2.42
“Psychic NF”
st.dev
bias
0.32
-0.02
0.50
-0.01
0.04
0.79
1.76
-0.08
1.65
-0.33
1.60
-0.13
1.68
0.44
4.31
1.11
-0.38
3.52
3.38
-0.30
Table 2: The bias and standard deviation of errors
for various applications as produced by ANF are not
much diﬀerent than those of “Psychic NetFlow”.
tions. And FCE does equally well on aggregates containing
non-TCP ﬂows, where SYN-based estimation does not work.
4.3 Performance under extreme trafﬁc mixes
Finally we show that the memory and bandwidth usage of
ANF and FCE are essentially unaﬀected by extreme traﬃc
mixes by testing with a simulated denial of service attack.
We mix from 16 thousand to 6 million packets per second (1
to 360 million packets per minute) into a trace. The Decem-
ber 2003 attack on SCO was 1 million packets per second.
The results presented in the technical report [14] conﬁrm
that the memory and bandwidth usage stay constant for
ANF while increasing signiﬁcantly for NetFlow.
Figure 10 shows how the errors for the estimates of cer-
tain aggregates change with various levels of DoS for a ﬁxed
conﬁguration of ANF. While the relative errors for most
applications have an increasing trend this does not contra-
dict our theoretical results, because as the size of the at-
tack increases, the legitimate traﬃc represents a smaller and
smaller percentage of the total traﬃc.
5. CONCLUSIONS
NetFlow is the traﬃc measurement solution most widely
used by ISPs to determine the composition of the traﬃc mix
on network links. However, NetFlow has several important
problems that we address with the improvements proposed
in this paper. We make no claim to have exhausted all the
opportunities for improvement and we express conﬁdence
that the networking community will soon ﬁnds further ways
of advancing the state of ﬂow level traﬃc measurement.
Our Adaptive NetFlow, deployable by a simple software
update to routers, achieves robustness lacking in NetFlow by
apps(.*)
apps(HTTP|HTTPS)
srcAS(2914)
apps(DNS)
apps(IRC)
apps(NETBIOS)
100
)
s
t
k
p
(
r
o
r
r
e
%
10
1
0.1
128
256
512
1024
2048
4096
packet rate (1024’s of pkts/s)
Figure 10: Error for the estimates for the number
of packets sent by aggregates as DDoS increases.
adapting the sampling rate to the traﬃc mix. ANF provably
stays within a ﬁxed memory and reporting bandwidth bud-
get for all possible traﬃc mixes. Our fast renormalization
method is a key component of Adaptive NetFlow that allows
us to also guarantee that the processor performing NetFlow
at the router can keep up with any traﬃc mix. Further ad-
vantages of ANF over NetFlow are easy conﬁguration as the
network operator does not need to statically set the sampling
rate, but only the rate at which ﬂow records are produced,
and simpler and more accurate analysis because we match
the time bin model used in traﬃc analysis.
From sampled NetFlow and ANF data one can give ac-
curate ﬂow counts for the TCP ﬂows in the traﬃc based on
the SYN ﬂags recorded in the ﬂow entries. To enable con-
sistently accurate counts for non-TCP ﬂows, we propose the
optional Flow Counting Extension that requires the addition
of new hardware to high speed routers.
An important new feature of both ANF and FCE is that
they can easily provide progressively smaller but less accu-
rate summaries which can be transmitted to the collection
station with progressively higher levels of reliability as dis-
cussed by IETF’s IPFIX working group. For both ANF
and FCE we present theoretical analyses that upper bound
the relative error of the estimates produced for large aggre-
gates measured in packets, bytes and respectively ﬂows. We
also prove that these estimates are unbiased. Measurements
on multiple traces of traﬃc conﬁrm our theoretical analy-
sis. Measurements on traces with synthetic DoS attacks of
various sizes conﬁrm the robustness of our solutions.
6. ACKNOWLEDGEMENTS
Support for this work was provided by NSF Grant ANI-
0137102, DARPA FTN Contract N66001-01-1-8933, and
CAIDA members.
7. REFERENCES
[1] IPMON - packet trace analysis.
http://ipmon.sprintlabs.com/packstat/
packetoverview.php.
[2] Personal conversation with Dave Plonka.
Aggregate
ALL Traﬃc (*)
ALL TCP Traﬃc
HTTP
ALL UDP Traﬃc (*)
DNS (*)
Netbios (*)
AS 2914 src (*)
Unclassiﬁed TCP
SMTP
ALL ICMP Traﬃc (*)
POP
IRC (*)
% of
total
100
78.
58.
20.
8.0
7.9
7.2
5.1
2.3
1.5
0.3
0.3
FCE
bias
0.02
0.10
0.27
-0.13
0.03
-1.97
0.92
2.19
-0.54
-2.12
4.23
-9.01
st.dev.
0.96
1.16
1.29
2.26
3.94
3.90
5.43
5.60
5.96
8.54
19.01
18.32
cM1
cM2
bias
-35.55
-17.39
-19.24
-100.00
-99.26
-39.27
-15.66
-47.07
0.56
-100.00
17.71
-71.48
st.dev.
35.55
17.41
19.26
100.00
99.26
39.35
16.06
47.17
5.74
100.00
26.85
71.94
bias
-25.57
-5.78
-8.50
-96.01
-95.31
-37.37
-5.70
-27.43
13.50
-95.45
32.35
-56.20
st.dev.
25.58
5.83
8.54
96.01
95.31
37.45
6.69
27.59
14.52
95.45
38.17
56.80
Table 3: The ﬂow count errors and biases in trace1 for various applications. The report sizes are 8K entries
for FCE and 64K entries for cM1 and cM2. Aggregates marked with (*) may contain non-TCP ﬂows.
[3] Paul Barford, Jeﬀrey Kline, David Plonka, and Amos Ron.
[18] Nicolas Hohn and Darryl Veitch. Inverting sampled traﬃc.
In Internet Measurement Conference, 2003.
[19] Ken Keys, David Moore, Ryan Koga, Edouard Lagache,
Michael Tesch, and k claﬀy. The architecture of CoralReef:
an Internet traﬃc monitoring software suite. In PAM2001.
CAIDA, RIPE NCC, April 2001.
http://www.caida.org/outreach/papers/2001/CoralArch/.
[20] Steven McCanne, Van Jacobson, and Martin Vetterli.
Receiver-driven layered multicast. In ACM SIGCOMM,
volume 26,4, pages 117–130, New York, August 1996. ACM
Press.
[21] Keith McCloghrie and Marshall T. Rose. RFC 1213, March
1991.
[22] David L. Mills. RFC 1305: Network time protocol (version
3) speciﬁcation, implementation, March 1992.
[23] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford,
and N. Weaver. The spread of the sapphire/slammer worm.
Technical report, 2003.
[24] Cisco netﬂow. http://www.cisco.com/warp/public/732/
Tech/netflow.
[25] Vern Paxson. Bro: a system for detecting network intruders
in real-time. In Computer Networks (Amsterdam,
Netherlands: 1999), volume 31, pages 2435–2463, 1999.
[26] Peter Phaal, Sonia Panchen, and Neil McKee. RFC 3176:
sFlow, September 2001.
[27] David Plonka. Flowscan: A network traﬃc ﬂow reporting
and visualization tool. In USENIX LISA, pages 305–317,
December 2000.
[28] Martin Roesch. Snort - lightweight intrusion detection for
networks. In Proceedings of the 13th Systems
Administration Conference. USENIX, 1999.
[29] Sampled NetFlow. http://www.cisco.com/univercd/cc/
td/doc/product/software/ios120/120newft/120limit/
120s/120s11/12s sanf.htm.
A signal analysis of network traﬃc anomalies. In Internet
Measurement Workshop, November 2002.
[4] Andy Bierman and Juergen Quittek. Packet sampling
(psamp). IETF working group.
[5] N. Brownlee, C. Mills, and G. Ruth. Traﬃc ﬂow
measurement: Architecture. RFC 2722, October 1999.
[6] Nevil Brownlee and Dave Plonka. IP ﬂow information
export (ipﬁx). IETF working group.
[7] J. Lawrence Carter and Mark N. Wegman. Universal
classes of hash functions. In Journal of Computer and
System Sciences, volume 18, April 1979.
[8] S. Chaudhuri, R. Motwani, and V. Narasayya. Random
sampling for histogram construction: How much is enough?
In Proceedings of the ACM SIGMOD, 1998.
[9] Baek-Young Choi, Jaesung Park, and Zhi-Li Zhang.
Adaptive random sampling for load change detection. In
SIGMETRICS, 2002. (extended abstract).
[10] Chuck Cranor, Theodore Johnson, Oliver Spatschek, and
Vladislav Shkapenyuk. Gigascope: A stream database for
network applications. In Proceedings of the ACM
SIGMOD, June 2003.
[11] Nick Duﬃeld and Carsten Lund. Predicting resource usage
and estimation accuracy in an IP ﬂow measurement
collection infrastructure. In Internet Measurement
Conference, October 2003.
[12] Nick Duﬃeld, Carsten Lund, and Mikkel Thorup.
Properties and prediction of ﬂow statistics from sampled
packet streams. In SIGCOMM Internet Measurement
Workshop, November 2002.
[13] Nick Duﬃeld, Carsten Lund, and Mikkel Thorup.
Estimating ﬂow distributions from sampled ﬂow statistics.
In Proceedings of the ACM SIGCOMM, August 2003.
[14] Cristian Estan, Ken Keys, David Moore, and George
Varghese. Building a better NetFlow: Technical report,
2004. http://www.caida.org/outreach/papers/2004/
tr-2004-03/.
[15] Cristian Estan, George Varghese, and Mike Fisk. Bitmap
algorithms for counting active ﬂows on high speed links. In
Internet Measurement Conference, October 2003.
[16] Anja Feldmann, Albert Greenberg, Carsten Lund, Nick
Reingold, Jennifer Rexford, and Fred True. Deriving traﬃc
demands for operational IP networks: Methodology and
experience. In Proceedings of the ACM SIGCOMM, pages
257–270, August 2000.
[17] Philippe Flajolet. On adaptive sampling. COMPUTG:
Computing (Archive for Informatics and Numerical
Computation), Springer-Verlag, 43, 1990.