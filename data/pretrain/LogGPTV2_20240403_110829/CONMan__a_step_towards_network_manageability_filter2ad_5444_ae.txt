0
18
6
8
2
VLAN
C
T
2
3
4
0
14
3
5
1
Table 5: Commands and state variables in Today’s (T) and
CONMan (C) scripts. The table and the scripts are color/font
coded; for instance, the ﬁrst occurrence of a “Generic Com-
mand” in each script appears in Red/Italics and so on.
the protocol parameters. While we admit that these repre-
sent very coarse metrics, we see this as a naive yet important
step towards quantifying the advantages of having manage-
ment applications generate CONMan primitives instead of
device-level conﬁguration.
4. RELATED WORK
There is a tremendous amount of past work in network
management, the most relevant of which we brieﬂy cite here.
On the commercial side, SNMPLink [31] lists many existing
management tools, from low-end tools like packet analyzers
(eg, Wireshark [47]), traﬃc monitors (eg, MRTG [35]), and
SNMP agents (eg, ITM [7]) to high-end managers like Open-
View [43].
Zeroconf [51] (and similar eﬀorts like UPnP [46], DLNA [50],
etc.)
enable “local communication in networks of limited
scale” without any conﬁguration [15]. CONMan is more gen-
eral but there are networks, such as ad-hoc networks, that we
don’t deal with. Further, with CONMan, the human manager
does need to specify a conﬁguration goal, albeit at a high-
level. However, there are a number of Zeroconf features, such
as address auto-conﬁguration using link-local addresses, that
CONMan could gain from. Policy-based management [16]
tries to reduce the amount of intricate knowledge required by
human managers by allowing management of QoS [2,32] and
security [37] based on high-level policies. There are eﬀorts
in both research [48] and industry [42–45] with the similar
goals. While steps in the right direction, some entity still has
to map these policies to the individual device conﬁgurations.
The complexity of this translation was the major impediment
in the adoption of policy-based networking [17].
CONMan does not dictate how data-plane protocols should
be implemented. However, there is the vast body of literature
that does deal with protocol implementation, i.e. through ab-
stractions [1], speciﬁcation languages (Estelle, LOTOS,
SDL [38]), implementation languages [10,24,25], and modu-
larization (Click [19], [5]). The 4D proposal [14] recognizes
the complexity of the Internet’s control and management
plane and hence, argues for restructuring them. We were
motivated by, among other things, 4D’s discovery plane. Re-
cently, there has been a spurt of research detailing the reasons
for outages and anomalies in IP backbones [22,27], Internet
services [28] and BGP routing [11,26]. These studies point
to conﬁguration errors as a major culprit. CONMan can re-
duce these errors, particularly the ones impacting data plane
operation. Finally, we believe that CONMan can simplify
the cross-layer database and interface proposed in [20], and
indeed may provide the basis for the Knowledge Plane objec-
tives laid out by Clark et. al. [9].
# put module0 port 9 into VLAN22
# ensure MTU is set properly
set vlan 22 name C1 mtu 1504
set vlan 22 gigabitethernet0/9
# ensure module 0 port 7 is access port
interface gigabitethernet0/7
switchport access vlan 22
switchport mode dot1q-tunnel
exit
vlan dot1q tag native
end
(a) Conﬁguration “Today” on Cisco CatOS
Customer 1
Site 1
Router D 
Switch A
Switch B 
Switch C
VLAN  (d)   
VLAN  (e)   
Eth  (a)   
Eth  (b)   
Customer 1 
Site 2
Router E
VLAN  (f)   
Eth  (c)   
Phy Pipe (P0)
Phy Pipe (P4)
P1 = create (pipe, , , ,
)
P2 = create (pipe, , , , )
create (switch, , [P0, Tagged ⇒ P1])
create (switch, , [P1 ⇒ P0])
create (switch, , P1, P2)
create (switch, , P2, P4)
Figure 10: VPN connectivity between sites S1 and S2 of customer C1 through VLAN tunneling between A and C.
(b) CONMan conﬁguration
5. DISCUSSION AND FUTURE WORK
In this paper we have presented a network architecture that
is amenable to management. Implementation of a few proto-
cols according to the CONMan model and their use in VPN
conﬁguration scenarios shows that the approach is worth con-
sidering. Though it is too early for us to claim that the ab-
straction presented here suﬃces for all data plane protocols
and for tasks beyond basic conﬁguration, we do not envi-
sion the module abstraction expanding much beyond its cur-
rent state. As with OSs where we rely on ioctls and special-
purpose interfaces for things that cannot be accomplished
with the ﬁle system interface, in cases where protocol features
are not captured by the abstraction (some were mentioned in
the paper but we hope they will be few and far between), the
low-level parameters will have to explicitly be set. Hence, we
allow for the possibility of management applications accessing
low-level details and provide the relevant hooks. However, we
necessitate that any direct changes to the low-level details be
appropriately reﬂected in the protocol’s CONMan abstrac-
tion. There are many other avenues for future work, some of
which we mention below:
– Scalability: This paper tests the extent to which manage-
ment interfaces can be made protocol agnostic. However, it
does not address concerns regarding the scalability and the
robustness of the proposed approach. For instance, an im-
portant concern is the amount of traﬃc and processing load
imposed on the NM, especially as a result of changes in high-
level goals or even the network itself. Also, while our cur-
rent implementation is restricted to lower layer modules and
mostly static conﬁguration tasks, scaling would be much more
challenging if CONMan were to account for applications too.
An extreme resulting scenario would be one where the NM
conﬁgures modules across the network whenever an applica-
tion initiates a connection. Note that in such a set-up, the
message overhead imposed on the NM(s) would be similar to
that imposed on domain controllers in the SANE project [8]
and one could use their results to claim that even this can
scale.
However, for a lot of tasks, the NM can use existing con-
trol protocols. For instance, our current path-ﬁnder could
easily be modiﬁed to use a hierarchical two-step traversal
wherein the ﬁrst step ﬁnds paths between devices that have
been pre-established using a routing algorithm while the next
step ﬁnds the complete module-level path given the device-
level path. Apart from this, CONMan would certainly beneﬁt
from many of the proposals to improve the scalability of au-
tomated agents within today’s SNMP framework [13,23,30].
Further, as discussed below, the NMs themselves may do spe-
cialized jobs and hence, scale by divide-and-conquer.
– Multiple NMs: Our current attempt has focussed on a single
NM managing a given network. However, multiple NMs may
exist. Primary and secondary NMs will be needed for robust-
ness. We can also imagine multiple simultaneously operating
NMs. One reason for this might be that NMs do special-
ized jobs. For example, one is responsible for tunnel creation
while another monitors for security violations. Another rea-
son might be that NMs are administratively nested. For ex-
ample, a high-level NM creates VLANs, but each VLAN has
its own NM. Diﬀerent domains will have their own NM and
these may need to communicate.
– Management Channel: The aforementioned possibilities pr-
-esent a number of challenges such as the need for scoped
management channels, extending the management channel
beyond a single domain, the possibility of conﬂicting conﬁg-
urations and so on. Consequently, the notion of a manage-
ment channel needs more thought. However, we would still
like to keep the management channel as simple as possible so
we don’t run into the problem of managing the management
channel. Further, the robustness and scalability questions re-
garding this channel suggest that it should only be used as the
basis for low-level conﬁguration. Higher-level management
tasks should then rely on the data-plane for communication.
Beyond this, the NM design requires more work. On the
user-side, we illustrated a simple high-level goal involving
connectivity between two devices. However, we would like
to evaluate other high-level goals and their impact on the al-
gorithmic complexity of the NM. An exercise worth pursuing
would be to come up with a simple yet precise language for
such goals. Challenges for the NM on the the network-side
include being able compare the quality of multiple low-level
goals that satisfy a given high-level goal, ensuring that the
translation process can scale to large networks, etc. Another
important question is how to deploy CONMan. It is likely to
share IPv6’s conundrum: namely that complexity has to be
increased over the short-term in order to arrive at reduced
complexity over the long-term. However, there is still a lot of
work to be done before we can worry about the widespread
adoption of CONMan and hence, the path of least resistance
towards a manageable, much less a self-managing network.
Acknowledgements
We would like to thank our shepherd, David Maltz, and the
anonymous reviewers for their useful feedback. This work was
partially supported by NSF Grants 0338750 and 0626978.
6. REFERENCES
[1] M. B. Abbott and L. L. Peterson, “A language-based
approach to protocol implementation,” in Proc. of ACM
SIGCOMM, 1992, pp. 27–38.
[2] K. Amiri, S. Calo, and D. Verma, “Policy based management
of content distribution networks,” IEEE Network Magazine,
March 2002.
[3] L. Andersson and T. Madsen, “RFC 4026 - Provider
Provisioned Virtual Private Network (VPN) Terminology,”
March 2005.
[4] H. Ballani and P. Francis, “Complexity Oblivious Network
Management: A step towards network manageability,”
Cornell University, Ithaca, NY, US, Tech. Rep.
cul.cis/TR2006-2026, 2006.
[5] E. Biagioni, “A structured TCP in standard ML,” in Proc.
of ACM SIGCOMM, 1994.
[6] M. Caesar, D. Caldwell, N. Feamster, J. Rexford, A. Shaikh,
and J. van der Merwe, “Design and Implementation of a
Routing Control Platform ,” in Proc. of Symp. on Networked
Systems Design and Implementation (NSDI), 2005.
[7] Carsten Schmidt, “Interface Traﬃc Monitor Pro,”
http://software.ccschmidt.de/.
[8] M. Casado, T. Garﬁnkel, A. Akella, M. Freedman, D. Boneh,
N. McKeown, and S. Shenker, “SANE: A Protection
Architecture for Enterprise Networks,” in Proc. of Usenix
Security, 2006.
[9] D. D. Clark, C. Partridge, J. C. Ramming, and J. T.
Wroclawski, “A knowledge plane for the internet,” in Proc.
of ACM SIGCOMM, 2003.
[10] T. Condie, J. M. Hellerstein, P. Maniatis, S. Rhea, and
T. Roscoe, “Finally, a Use for Componentized Transport
Protocols,” in Proc. of the Fourth Workshop on Hot Topics
in Networking, 2005.
[11] N. Feamster and H. Balakrishnan, “Detecting BGP
Conﬁguration Faults with Static Analysis,” in Proc. of
Symp. on Networked Systems Design and Implementation
(NSDI), 2005.
[12] B. Ford, “Unmanaged Internet Protocol: taming the edge
network management crisis,” SIGCOMM Comput. Commun.
Rev., vol. 34, no. 1, 2004.
[13] G. Goldszmidt, Y. Yemini, and S. Yemini, “Network
management by delegation: the MAD approach,” in Proc. of
the conference of the Centre for Advanced Studies on
Collaborative research (CASCON), 1991.
[14] A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. Meyers,
J. Rexford, G. Xie, H. Yan, J. Zhan, and H. Zhang, “A clean
slate 4D approach to network control and management,”
ACM SIGCOMM Computer Communications Review,
October 2005.
[15] E. Guttman, “Autoconﬁguration for ip networking: Enabling
local communication,” IEEE Internet Computing, vol. 5,
no. 3, 2001.
[16] J. Halpern and E. Ellesson, “The IETF Policy Framework
Working Group,” Online Charter,
http://www.ietf.org/html.charters/OLD/policy-charter.html.
[17] M. Jude, “Policy-based Management: Beyond The Hype,”
Business Communication Review, pp. 52–56, 2001,
http://www.bcr.com/bcrmag/2001/03/p52.php.
[18] Z. Kerravala, “Enterprise Networking and Computing : the
Need for Conﬁguration Management,” Yankee Group report,
January 2004.
[19] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F.
Kaashoek, “The Click modular router,” ACM Transactions
on Computer Systems, vol. 18, no. 3, pp. 263–297, August
2000.
[20] R. R. Kompella, A. Greenberg, J. Rexford, A. C. Snoeren,
and J. Yates, “Cross-layer Visibility as a Service,” in Proc. of
workshop on Hot Topics in Networks, 2005.
[21] R. R. Kompella, J. Yates, A. Greenberg, and A. C. Snoeren,
“ IP Fault Localization Via Risk Modeling ,” in Proc. of 2nd
Symp. on Networked Systems Design and Implementation
(NSDI), 2005.
[22] C. Labovitz, A. Ahuja, and F. Jahanian, “Experimental
Study of Internet Stability and Backbone Failures,” in Proc.
of Symposium on Fault-Tolerant Computing (FTCS), 1999.
[23] K.-S. Lim and R. Stadler, “Developing Pattern-Based
Management Programs,” in Proc. of Conference on
Management of Multimedia Networks and Services
(MMNS), 2001.
[24] B. T. Loo, T. Condie, J. M. Hellerstein, P. Maniatis,
T. Roscoe, and I. Stoica, “Implementing Declarative
Overlays,” in Proc. of ACM SOSP, 2005.
[25] B. T. Loo, J. M. Hellerstein, I. Stoica, and R. Ramakrishnan,
“Declarative Routing: Extensible Routing with Declarative
Queries,” in Proc. of ACM SIGCOMM, 2005.
[26] R. Mahajan, D. Wetherall, and T. Anderson,
“Understanding BGP misconﬁguration,” in Proc. of ACM
SIGCOMM, 2002, pp. 3–16.
[27] A. Markopoulou, G. Iannaccone, S. Bhattacharyya,
C. Chuah, and C. Diot, “Characterization of Failures in an
IP Backbone,” in Proc. of IEEE INFOCOMM, 2004.
[28] D. Oppenheimer, A. Ganapathi, and D. Patterson, “Why do
Internet services fail, and what can be done about it,” in
Proc. of USENIX Symposium on Internet Technologies and
Systems, 2003.
[29] P. Bahl et. al., “Discovering Dependencies for Network
Management,” in Proc. of workshop on Hot Topics in
Networks, 2006.
[30] V. A. Pham and A. Karmouch, “Mobile Software Agents: An
Overview,” IEEE/ACM Trans. Netw., vol. 36, no. 7, 1998.
[31] Pierrick Simier, “SNMPLink,”
www.snmplink.org/Tools.html.
[32] R. Rajan, D. Verma, S. Kamat, E. Felstaine, , and
S. Herzog, “A policy framework for integrated and
diﬀerentiated services in the internet,” IEEE Network
Magazine, vol. 13, no. 5, September 1999.
[33] E. Rosen and Y. Rekhter, “RFC 4364 - BGP/MPLS IP
Virtual Private Networks (VPNs),” February 2006.
[34] J. Schonwalder, “Characterization of SNMP MIB Modules,”
in Proc. of International Symposium on Integrated Network
Management, 2005.
[35] Tobias Oetiker and Dave Rand, “MRTG : Multi Router
Traﬃc Grapher,” http://mrtg.hdl.com.
[36] H. Uijterwaal and M. Zekauskas, “IP Performance Metrics
(ippm),” Online Charter, Jan 2006,
http://www.ietf.org/html.charters/ippm-charter.html.
[37] D. Verma, “Simplifying Network Administration using Policy
based Management,” IEEE Network Magazine, March 2002.
[38] G. von Bochmann, “Usage of Protocol Development Tools:
The Results of a Survey,” in Proc. of Conference on Protocol
Speciﬁcation, Testing and Veriﬁcation, 1987.
[39] G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, and
G. Hjalmtysson, “Routing design in operational networks: a
look from the inside,” in Proc. of ACM SIGCOMM, 2004,
pp. 27–40.
[40] E. R. Y. Rekhter, R. Bonica, “Use of PE-PE GRE or IP in
BGP/MPLS IP Virtual Private Networks,”
draft-ietf-l3vpn-gre-ip-2547-05, February 2006.
[41] “CISCO 802.1Q Tunneling,”
http://www.cisco.com/univercd/cc/td/doc/product/lan/
c3550/1219ea1/3550scg/swtunnel.htm.
[42] “CISCO Network Management Products,” http://www.
cisco.com/en/US/products/sw/netmgtsw/index.html.
[43] “HP OpenView,” www.openview.hp.com/.
[44] “IBM’s Autonomic Computing,”
http://www-03.ibm.com/autonomic/.
[45] “Microsoft Dynamic Systems Initiative,” http://www.
microsoft.com/windowsserversystem/dsi/default.mspx.
[46] “UPnP Forum,” http://www.upnp.org/.
[47] “Wireshark: A Network Protocol Analyzer,”
http://www.wireshark.org/.
[48] “IBM Research: Policy-based Networking,” , Dec 2006,
http://www.research.ibm.com/policy/.
[49] “SNMP MIB Search Engine,” , January 2006,
www.mibdepot.com.
[50] “Digital Living Network Alliance,” Jan 2007,
http://www.dlna.org/.
[51] “Zeroconf Working Group,” Jan 2007,
http://www.zeroconf.org/.