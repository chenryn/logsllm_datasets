 **TypeScript Version:**
1.8.0
**Code**
    interface A {
        name: string;
        age: number;
    }
    interface AExtension {
        name?: string;
        age?: number;
    }
    interface B {
        key: string;
        value: boolean;
    }
    interface BExtension {
        key?: string;
        value?: boolean;
    }
    function extend(base: A, extension: AExtension);
    function extend(base: B, extension: BExtension);
    function extend(base: T, extension: any) {
    }
    const b : B = { key: '...', value: true };
    extend(b, { key: '' });
**Expected behavior:**  
Code completion for second parameter of `extend` shows properties of
`BExtension`.
**Actual behavior:**  
Code completion for second parameter of `extend` shows properties of
`AExtension`.
![image](https://cloud.githubusercontent.com/assets/2046557/14424547/fbd37a88-ffe1-11e5-9c66-8ebc8be160e8.png)