First constraint     (C1)  Neighbors in Hello messages must be reciprocal 
Second constraint (C2)  MPRs must reach all 2-hop neighbors 
Third constraint   (C3)  MPR selectors must match corresponding MPRs 
Fourth constraint  (C4)  Fidelity of forwarded TC messages must be maintained 
Fig. 4. Four detection constraints in the specification-based intrusion detection model 
[14] shows that this model can detect attacks using the four attack methods in 5.1 
against  OLSR.  However,  the  model  in  [14]  assumes  that  detectors  can  collect 
sufficient  routing-related  information  in  real  time  to  validate  consistency  among 
related  routing  packets  using  the  four  constraints.  DEMEM  helps  [14]  resolve  this 
assumption  with  a  practical  message  exchange  technique.  In  5.3,  we  show  how  to 
apply DEMEM in OLSR with three tailored ID messages for OLSR.  
5.3   Implementing DEMEM in OLSR 
To make the intrusion detection in OLSR [14] practical and effective, three Intrusion 
Detection  (ID)  messages  are  tailored  for  OLSR:  ID-Evidence,  ID-Forward,  and  ID-
258 
C.H. Tseng et al. 
Request  messages.  We  also  present  the  mechanisms  handling  three  ID  messages, 
especially within the Evidence Manager and the Forwarding Manager. Four practical 
assumptions make DEMEM realizable in OLSR. 
ID-Forward  
_ID-Evidence
B 
A
S
Fig. 5. Three ID Messages of DEMEM Implementation in OLSR 
ID-Request 
ID  Message.  ID-Evidence  is  designed  for  each  pair  of  2-hop-away  detectors  to 
exchange  their  evidence  (1-hop  neighbors,  and  MPRs)  as  the  data  supply  to  the 
Validation  Manager.  ID-Forward  is  designed  for  a  detector  to  request  its  selected 
neighbors, called forwarders, to broadcast its ID-Evidence message. An ID-Forward 
message  is  sent  only  when  the  detector  observes  new  evidence  (new  1-hop 
neighbors, MPR, or 2-hop neighbors) in its outgoing Hello message. ID-Request is 
designed to tolerate message loss of ID-Evidence that will cause false positives and 
negatives due to insufficient detection evidence supplied to the Validation Manager. 
We present the detailed design of these three ID messages in section 5.4, 5.5, and 
5.6 respectively. 
DEMEM FSM for OLSR. In OLSR, the Evidence Manager handles Hello, TC and 
ID-Evidence  messages  and  records  three  types  of  evidence  in  these  messages.  The 
Forwarding  Manager  sends  three  types  of  ID  messages  in  three  conditions, 
respectively.  The  Validation  Manager  validates  incoming  Hello  and  TC  messages 
based on the three constraints and related evidence from the Evidence Manager. If the 
Validation Manager detects message inconsistencies that violate these constraints and 
the lasting time of inconsistencies exceeds the alarm thresholds of the constraints, the 
Response Manager will perform proper attack recovery. 
Evidence Manager. Evidence in OLSR is 1-hop neighbors and MPRs of a node. The 
Evidence Manger gathers evidence from three groups (nodes, 1-hop neighbors, and 
2-hop  neighbors)  from  three  types  of  messages  (incoming  Hello,  outgoing  Hello, 
and  incoming  ID-Evidence  message).  These  groups  of  evidence  are  the  essential 
routing information for the  Validation Manager to validate incoming Hello and TC 
messages. 
Forwarding  Manager.  Three  conditions  trigger  the  Forwarding  Manager  to  send 
messages.  First, if the Validation Manager does not have sufficient evidence from an 
expected  ID-Evidence  message,  it  assumes  that  the  message  is  lost.  The  Validation 
Manager then triggers the Forwarding manager to broadcast an ID-Request message 
to  request  the  lost  ID-Evidence  message.  Second,  while  the  Evidence  Manager 
observes  new  evidence  in  an  outgoing  Hello  message,  the  Forwarding  Manager 
broadcasts  an  ID-Forward  message.  Third,  if  the  Forwarding  Manager  receives  an 
ID-Forward or ID-Request message and observes that it is a forwarder selected by its 
neighbors, then it broadcasts an ID-Evidence message for the requesting node. 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
259 
Monitor
Manger
Update Ev 
of 1-hop  
Update Ev 
of 2-hop 
Update Ev 
of Self 
Evidence 
Manger 
Ingoing
Hello & TC
ID-Evidence 
Outgoing 
Hello & TC 
ID-Forward 
ID-Request 
Validate    
Hello & TC
Validation 
Manager 
Violation 
Detected  
Long 
Evidence 
Absence
New
Evidence
Send ID- 
Request
Send ID- 
Forward
Send ID-
Evidence 
Forwarding 
Manger
Response 
Manager 
Attack 
Recovery  
Fig. 6. DEMEM Implementation FSM within a detector 
Four Practical Assumptions Based on Existing Works: 
1.  Each node has one network interface, and OLSR is the routing protocol. Multiple 
Interface Declaration (MID) and Host and Network Association (HNA) messages 
are not used here. 
2.  The content of forwarded routing messages and node identity of all routing and 
ID messages are authenticated by a cryptographic technique. Thus, Constraint 4 
in  5.2  used  to  detect  attack  method  4  in  5.1  is  covered  here.  Because  of  lower 
computation  requirements  than  public  key  techniques,  DEMEM  assumes  that 
TESLA  has  been  integrated  as  an  authentication  layer.  We  discuss  this 
integration work in detail in 7.1.  
3.  No  intentionally  packet  dropping.  Several  reputable  works  [8][9]  have  been 
developed  for  detecting  normal  unicast  data  packet  drop  attacks  as  well  as  for 
broadcasting  routing  messages.  We  assume  that  detectors  have  been  utilized  to 
detect  intentionally  packet  dropping.  DEMEM  can  also  tolerate  normal  packet 
loss or drop. 
4.  No  colluding  attackers.  Colluding  attacks  can  create  virtual  links  to  perform 
worm-hole  attacks.  Several  works  [25]  address  this  type  of  attack.  Also,  added 
virtual links do not affect the existence of other normal routing links, so DEMEM 
does not cover this issue. 
5.4   ID-Evidence Message 
DEMEM utilizes ID-Evidence message in OLSR to provide the Validation Manager 
with  sufficient,  up-to-date  evidence.  While  the  Validation  Manager  uses  three 
constraints to validate OLSR messages coming from its 1-hop neighbors, it may also 
require  evidence  from  its  2-hop  neighbors.  Thus,  ID-Evidence  message  is  designed 
for 2-hop neighbors to exchange  their evidence  with each  other for their Validation 
Manager.  Fig.  7  describes  this  procedure:  the  ID-Evidence  message  provides 
sufficient evidence for the Validation Manager to use first constraint (C1) to validate 
Hello messages coming from neighboring nodes. 
260 
C.H. Tseng et al. 
Example  of  supporting  C1. ID-Evidence  message consists of 1-hop neighbors and 
MPRs, which are essential inputs for three constraints in message validation. In Fig. 
7,  S’s  detector  uses  C1  to  validate  the  1-hop  neighbor  list  contained  in  a  Hello 
message sent from node A. Node A’s 1-hop neighbor list  is {S, B}. According to C1, 
the 1-hop neighbor lists in S’s and B’s Hello messages must both include A. Clearly, 
S’s detector contains S’s Hello message by intercepting S’s outgoing Hello message. 
Thus, S’s detector requires B’s Hello message from B. 
ID-Forward
B 
A
ID-Evidence 
(B) = {A} 
S
Hello (B) ={A} 
Hello (A) ={S,B}
Hello(S) ={A}
Fig. 7. Example of validating neighbor’s Hello message (C1) 
B’s detector broadcasts an ID-Forward message (see 5.5 for details) to request A to 
broadcast B’s ID-Evidence message. While A receives B’s ID-Forward indicating that 
A is the selected forwarder, A generates B’s ID-Evidence message and broadcasts B’s 
ID-Evidence  message.    Lastly,  S  receives  B’s  expected  ID-Evidence  message 
containing A as B’s 1-hop neighbor and finishes validating A’s Hello message by C1. 
Supporting  C2.  Similarly,  B’s  ID-Evidence  satisfies  the  requirements  of  message 
validation by C2 and C3. While S validates MPRs contained in A’s Hello messages 
by C2, A’s 2-hop neighbor set, computed from A’s MPRs, must equal the union set of 
A’s 1-hop neighbors. There are three different categories of A’s 1-hop neighbors in 
S’s point of view: S itself, S’s 1-hop neighbors, and S’s 2-hop neighbors. In order to 
have sufficient data, the detector residing on S requires 1-hop neighbor lists of nodes 
in all of these three categories. S’s detector has 1-hop neighbor lists of the following 
categories:  S’s detector has S’s 1-hop neighbor list; from incoming Hello messages 
of  S’s  1-hop  neighbors,  S’s  detector  has  1-hop  neighbor  lists;  and  S’s  2-hop 
neighbors,  such  as  B,  provide  their  1-hop  neighbor  lists  by  ID-Evidence  to  allow  S 
complete validation of C2.  
Supporting  C3.  Since  S’s  detector  can  receive  A’s  TC  message  containing  B  as  a 
MPR selector and also knows B’s MPRs from B’s ID-Evidence, S’s detector can use 
C3  to  determine  if  the  relationship  between  A  and  B  is  reciprocal.  Thus,  with  ID-
Evidence messages, the Validation Manger of each detector has sufficient evidence to 
validate incoming Hello and TC messages according to the constraints in 5.2. 
5.5   ID-Forward Message 
Reducing  message overhead. ID-Forward messages are used to trigger the selected 
forwarder  to  forward  ID-Evidence  messages.  To  reduce  message  overhead,  the 
detector sends ID-Forward messages to trigger the forwarder instead of sending ID-
Evidence messages ,because an ID-Evidence message is usually much larger than an 
ID-Forward message: an ID-Evidence message contains 1-hop neighbors’ and MPRs’ 
addresses but an ID-Forward message only contains forwarders’ addresses. In order to 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
261 
protect  the  integrity  of  forwarded  ID-Evidence  messages,  the  sender  of  the  ID-
Forwarder signs an expected ID-Evidence message by TESLA (see 7.1 for detail) to 
allow the receivers to authenticate the ID-Evidence message.  
Conditions  triggering  ID-Forward  messages  to  be  sent.  While  the  detector 
intercepts  a  new  outgoing  Hello  message  from  OLSR  routing  layer,  the  detector 
searches one of the following new evidence: New MPRs, New Neighbors, or New 2-
hop  Neighbors.  New  evidence  includes  2-hop  neighbors  because  evidence  is 
exchanged between 2-hop neighbors. In other words, if a detector observes a new 2-
hop  neighbor,  that  new  2-hop  neighbor  should  require  that  detector’s  evidence. 
Similarly,  if  the  detector  observes  a  new  MPR  or  1-hop  neighbor,  the  detector  also 
sends an ID-Forward message to transmit its updated evidence to its 2-hop neighbors. 
An ID-Forward message is sent after a random jitter time (<0.5 sec) to avoid colliding 
with  other  broadcasting  messages.  This  evidence-driven  mechanism  produces  much 
less message overhead than periodical mechanisms. 
Determining Forwarders. Forwarders are the minimum set of detector’s MPRs that 
connect  all  2-hop  neighbors  requiring  the  ID-Evidence  message.  To  determine  the 
forwarders,  a  detector  first  computes  2-hop  neighbors  requiring  detector’s  updated 
evidence,  which  can  be  new  2-hop  neighbors  or  neighbors  of  new  MPRs  and  new 
neighbors.  Then  the  detector  determines  the  set  of  the  forwarders,  which  is  the 
minimum set of detector’s MPRs connecting all of these 2-hop neighbors. 
Forwarding  ID-Evidence  Message.  As  the  forwarder  receives  the  ID-Forward 
message,  it  will  generate  the  ID-Evidence  message.  Because  the  forwarder  and  the 
ID-Forwarder’s sender are neighbors, the forwarder must receive the sender’s Hello 
message  and  buffer  the  latest  message  in  2  seconds  in  order  to  generate  an  ID-
Evidence  message for the sender. Then the forwarder waits for a random jitter time 
(<0.5 sec) and broadcasts the ID-Evidence message. Thus, all 2-hop neighbors of the 
ID-Forward’s sender can have up-to-date evidence in time. 
5.6   Tolerate Message Lost 
802.11 is the most common MAC protocol in wireless networks. In 802.11, broadcast 
messages lead to more  message collisions than unicast  messages, because broadcast 
messages  lack  additional  CTS.  Since  all  routing  and  ID  messages  are  broadcast 
messages,  DEMEM  has  to  tolerate  message  loss,  especially  for  broadcast  message 
collisions.  
1.  Tolerate  Hello  message  loss.  If  the  buffered  Hello  message  expires  due  to 
message loss, the forwarder waits for the next newest Hello message to ensure that the 
message is up-to-date and that ID-Evidence can be generated correctly.  
2.  Tolerate ID-Forward message lost. The sender of the ID-Forward message waits 
for  its  expected  ID-Evidence message  to  be  sent  from  the  forwarders.  If  the  sender 
does not hear it while it has a new outgoing Hello message, the sender will resend the 