return p;
}
int getnum(char **pp, int priority)
{
char *p = *pp;
int i = INVALID, j;
p = skipspace(p);
/*单项运算符*/
if (*p == '+') {
p = skipspace(p + 1);
i = getnum(&p, 0);
} else if (*p == '-') {
p = skipspace(p + 1);
i = getnum(&p, 0);
if (i != INVALID) {
i = - i;
}
} else if (*p == '~') {
p = skipspace(p + 1);
i = getnum(&p, 0);
if (i != INVALID) {
i = ~i;
}
} else if (*p == '(') { /*括号*/
p = skipspace(p + 1);
i = getnum(&p, 9);
if (*p == ')') {
p = skipspace(p + 1);
} else {
i = INVALID;
图灵社区会员 metorm 专享 尊重版权
1 命令行计算器（harib27a） …… 661
}
1
} else if ('0'  2) {
p = skipspace(p + 1);
j = getnum(&p, 2); 21
if (j != INVALID) {
i += j;
} else { 22
i = INVALID;
}
} else if (*p == '-' && priority > 2) {
p = skipspace(p + 1); 7
j = getnum(&p, 2);
if (j != INVALID) {
i -= j;
8
} else {
i = INVALID;
}
} else if (*p == '*' && priority > 1) { 9
p = skipspace(p + 1);
j = getnum(&p, 1);
if (j != INVALID) {
26
i *= j;
} else {
i = INVALID;
} 27
} else if (*p == '/' && priority > 1) {
p = skipspace(p + 1);
j = getnum(&p, 1);
if (j != INVALID && j != 0) { 28
i /= j;
} else {
i = INVALID;
29
}
} else if (*p == '%' && priority > 1) {
p = skipspace(p + 1);
j = getnum(&p, 1); 30
if (j != INVALID && j != 0) {
i %= j;
} else {
30
i = INVALID;
}
} else if (*p == ' 3) {
p = skipspace(p + 2); 16
j = getnum(&p, 3);
图灵社区会员 metorm 专享 尊重版权
662 …… 第30天：高级的应用程序
if (j != INVALID && j != 0) {
i ' && p[1] == '>' && priority > 3) {
p = skipspace(p + 2);
j = getnum(&p, 3);
if (j != INVALID && j != 0) {
i >>= j;
} else {
i = INVALID;
}
} else if (*p == '&' && priority > 4) {
p = skipspace(p + 1);
j = getnum(&p, 4);
if (j != INVALID) {
i &= j;
} else {
i = INVALID;
}
} else if (*p == '^' && priority > 5) {
p = skipspace(p + 1);
j = getnum(&p, 5);
if (j != INVALID) {
i ^= j;
} else {
i = INVALID;
}
} else if (*p == '|' && priority > 6) {
p = skipspace(p + 1);
j = getnum(&p, 6);
if (j != INVALID) {
i |= j;
} else {
i = INVALID;
}
} else {
break;
}
}
p = skipspace(p);
*pp = p;
return i;
}
如果以前没有编写过类似的计算器程序的话，估计不太容易看懂上面这段程序。这段程序本
来就已经偏离了“编写操作系统”这个主题，因此笔者也没打算逼着大家看懂，不过如果你对这
段程序很感兴趣，不妨先运行一下玩玩看，然后再仔细阅读下面的讲解，一定能慢慢看明白的。
在这段程序中使用了strtol(s, endp, base)这样一个函数，这个函数的功能基本上和sprintf是相
图灵社区会员 metorm 专享 尊重版权
1 命令行计算器（harib27a） …… 663
反的，它可以将字符串形式的数值转换为整数。字符串的地址由s指定，base表示进制，例如10
1
代表十进制，16代表十六进制，0则代表自动识别（以0x开头则识别为十六进制）。
endp一般可以指定为0，也可以指定一个变量的地址，如果指定了地址，则函数会返回在转
18
换字符串时所读取到的字符串末尾地址。字符串末尾地址是一个char *型的变量，这个变量的地
址由endp指定，地址的地址，也就是一个char **型的变量。
3
strtol是一个只要include了就可以使用的标准函数，不过笔者在“纸娃娃系统”用的
tolset中没有包含，因此在程序中直接进行了声明。
20
getnum中也使用了char **型的参数，和strtol一样，也是为了将当前解析到算式中的位置返回
给相应的变量。
21
函数getnum的功能是将字符串形式的算式进行解释，并获取一个数值。除了进入字符串开始
地址的变量地址外，还需要指定计算到哪个等级的运算符（“+”、“/”等用于表示各种运算的符
22
号）。在HariMain中我们指定了9，这代表“无论多么低优先级的运算符，全部需要计算出来”的
意思。
7
用作运算符的字符包括+ - * / % & | ^ ~ > ( )，结果同时显示十进制和十六进制。不过计
算都是以整数进行，比如：10 / 3 = 3，可以使用负数。计算的优先级和C语言的规定相同，因此
8
1 + 2 * 3 + 4 = 11，如果单纯从左往右按顺序计算的话结果应该是13，但我们的计算器不会这样计
算，当然，如果输入（ 1 + 2 ） * 3 + 4的话就可以计算出13了哦。
9
由于使用了和C语言相同的语法规则，因此^是代表XOR运算的运算符，2^3可不是“2
的3次方”的意思，而是“2 XOR 3”的意思哦。另外，和C语言一样，我们可以直接输入十
26
六进制的数字进行计算，只要在数字前面加上0x就可以了。
■■■■■ 27
我们来“make run”看看吧，关于使用方法，可以输入如 “calc 1+2”。
28
29
30
30
尝试进行了各种计算 又尝试了更多种类的计算
16
图灵社区会员 metorm 专享 尊重版权
664 …… 第30天：高级的应用程序
怎么样，还挺有意思的吧？这样一来，一些比较简单的计算用“纸娃娃系统”就可以胜任了
哦，可喜可贺。对了，calc.hrb只有1688字节哦，短小精悍吧！
22 文本阅览器（harib27b）
“纸娃娃系统”中已经有了type.hrb，可以显示出文本文件的内容。不过由于屏幕滚动的速度
太快，而且没有办法往回滚动，用起来挺不方便的，而且命令行窗口也太小了。
于是，我们来做一个用来查看文本文件内容的文本阅览器吧。
首先来看程序……话说每次都一上来就先拿一大段程序出来好像挺无聊的，从现在起就先给
大家展示一下完成后的运行画面好了。如果事先知道要做出来的程序是什么样，再去看程序的话
应该会更容易理解吧。
输入“tview ipl20.nas –w100 –h30”，运行结果如下图。
咚！显示出来了
用光标键可以上下左右进行滚动，在QEMU中可能速度不是很快，这是由于模拟器性能不佳
造成的，在真机环境下速度还是相当快的哦。
滚动的速度也是可以调节的。按“b”可以将纵向滚动的速度设为每次2行，“c”则每次4行，
图灵社区会员 metorm 专享 尊重版权
2 文本阅览器（harib27b） …… 665
“d”则每次8行。以此类推，可以一直用到“f”，按“a”则恢复为初始状态，每次滚动1行。同
1
样地，用“A”～“F”可以改变横向滚动的速度。
关于启动时的命令行选项，-w和-h代表窗口的大小。-w表示打开一个宽度为100个半角字符
18
的窗口，最大可以指定为126。-h表示行数，最大可以指定为45。如果不指定-w和-h，则默认为-w30、
-h10。
3
此外，用-t选项可以指定制表符的大小，省略的话则按照笔者的习惯默认为-t4。制表符的大
小在程序启动后也可以通过“”键来进行调节。
20
按“q”或者“Q”可以退出程序。其实这个键倒没那么重要。即便忘记了，点击“×”按
钮或者按Shift+F1强制结束也没什么问题。
21
■■■■■
22
下面我们来看程序吧。
tview.c 7
#include "apilib.h"
8
#include 
int strtol(char *s, char **endp, int base); /*标准函数(stdlib.h) */
9
char *skipspace(char *p);
void textview(int win, int w, int h, int xskip, char *p, int tab, int lang);
char *lineview(int win, int w, int y, int xskip, unsigned char *p, int tab, int lang);
26
int puttab(int x, int w, int xskip, char *s, int tab);
void HariMain(void)
{ 27
char winbuf[1024 * 757], txtbuf[240 * 1024];
int w = 30, h = 10, t = 4, spd_x = 1, spd_y = 1;
int win, i, j, lang = api_getlang(), xskip = 0;
28
char s[30], *p, *q = 0, *r = 0;
/*命令行解析*/
api_cmdline(s, 30); 29
for (p = s; *p > ' '; p++) { } /*一直读到空格为止*/
for (; *p != 0; ) {
p = skipspace(p); 30
if (*p == '-') {
if (p[1] == 'w') {
w = strtol(p + 2, &p, 0);
30
if (w  126) { 16