赚钱潜力
从“为一个老板服务”变成了“为许多老板服务”
选择3：创业者
创业之路可能是你职业生涯中最难、最不确定但却最具回报潜力的选择。尽管有许多形容词来描述这一职业选择，每一个都有很好的理由。我还是认为创业者等同于职业赌徒。作为创业者几乎没有稳定可言，不过一旦你真的成功了，那可真的就是大获全胜。
那么，“创业者”到底意味着什么呢？你的猜想可能和我的一样。它的定义相当模糊，蕴含着很多不同的含义。不过，我认为最核心的就是：软件开发创业者使用自己的软件技能开发自己的产品、拓展自己的业务。雇员和独立咨询师都在以时间换金钱，而创业者尽管换不来预付好的报酬，但是他却有机会在未来获得更大的收益。
我认为我自己现在就属于“创业者”这一类。我把大部分时间都花在开发我销售的培训课程和其他产品上，直接或间接地通过合作伙伴把它们销售出去以维持生计。我仍然会写代码，但是我通常不会为任何特定的客户写代码。我要么为某个特定产品写代码，要么为我自己创建和开发的培训服务写代码，给别人传道授业。
事实上，这本书恰恰正是一个创业者努力奋斗的例子。我下了相当大的赌注，花费大量的时间撰写这本书。我会从出版商那里得到一点预付款，但这笔预付款与我写这本书所花费的时间不能相提并论。我希望这本书有足够高的销量，以使我获得的版税足以补偿我的劳动，或者我可以用它来作为宣传材料，帮我吸引其他领域的客户。也有可能这本书会一败涂地，所有努力都是白费的（考虑到你正在读本书，所以这不大可能）。
其他软件开发创业者的做法与我截然不同。有的成立创业公司，从外部风险投资人（Venture Investment，VC）那里获得大笔投资，有的则构建小型的“软件即服务”（SaaS）公司，通过订阅的方式销售服务赚钱。例如，广受欢迎的开发人员培训公司Pluralsight的创始人最初以课堂培训起家，但是后来他们发现通过提供纯在线培训服务会做得更好，于是他们就转向SaaS模式，开始提供订阅的服务。
我相信你现在一定猜得出作为创业者的两大优势了：完全的自由和完全不封顶的赚钱潜力。作为一名创业者，你没有老板，虽然你可能会是最严厉的老板。你完全可以来去自由，随心所欲，你也对自己的未来负全部责任。如果你的产品非常成功，你可以赚到百万美元，甚至赚的更多。你也可以举债经营，使未来回报以指数级增长。
但是，作为一个创业者，并不总是宝马香车、灯红酒绿。创业可能是你从事过的最艰难、最冒险的职业抉择——完全没有任何收入保障，可能会为了实现光辉理想而负债累累。创业者的生活如同坐过山车一般：今天顾客购买你的产品，你感觉仿佛屹立在世界之巅，明天你的项目急转直落，你可能要为如何付房租而愁肠百结。
作为一个创业者，你还得为其他技能投入颇多，而作为为他人或客户工作的软件开发人员时，你就无需担心这些。创业者必须要学习销售、市场营销，以及商业和理财等诸多方面的技能，这些都是成功的关键。（我会在本书后半部分介绍这些内容。在第二篇中我会讨论如何自我营销，这一概念与“产品营销”类似，在第五篇中我会讨论一些理财话题，即使你不打算成为创业者，这些话题也很有用。）
表6-3列出了创业的好处和弊端。
表6-3 创业的好处和弊端
好处
弊端
完全自由
风险很大
巨大的赚钱潜力
完全依靠自己
做你想要做的工作
需要许多其他技能
没有老板
可能需要长时间工作
到底应该选哪个
对大多数软件开发人员而言，特别是在职业生涯的起步阶段，做一名雇员是明智的选择。这个选择的风险最小，你不需要具备大量的经验。我倾向于认为：做一名雇员就像当学徒一样。即使你已经树立了“为自己工作”的志向，做雇员是学习并锤炼技能的良好起点。
换句话说，如果你的职业生涯刚刚起步就有机会成为独立咨询师或创业者，并且你能接受随之而来的可能的风险，那么你就能够避免那些无可避免的失败和错误，给以后美好的职业生涯打好基础。
选择什么完全取决于你自己，并且你也可以随时切换路径。事实上，在第11章中，我会告诉你如何从雇员过渡为自雇者。这并不容易，但是有可能的。
采取行动
列一个名单，列出你认识或者听说过的对应上述三种类型的软件开发人员。
如果你有兴趣成为独立咨询师或者创业者，那么安排与你认识的已经走上这条路的朋友会面，向他们了解一下这条路到底怎么样。（太多的开发人员在对此懵懂无知的时候就投身其中了。）
第7章 你是哪类软件开发人员
你曾经聘请过律师吗？当时你做的第一件事是什么？如果你还没有聘请过律师，那你觉得自己要做的第一件事会是什么？
如果你认为你需要明确指出自己需要哪种类型的律师，你是对的。你不想抓起电话随便打给一位律师，你肯定想打给能够解决自己问题的专业律师。律师这一行术业有专攻，他们通常在从业一开始就走上了专业之路，成为刑事律师、交通事故律师或者房地产律师等。
你不会想找打离婚官司的律师代理自己的税务或房地产方面的事务，所以专业化是非常重要的。律师并不是从法学院毕业的那一刻才决定自己要当律师的。但是，遗憾的是，大多数软件开发人员是在干起了软件开发行当时才决定自己要当程序员的。
专业化很重要
有大量的软件开发人员并没有具体的专业方向。事实上，大部分软件开发人员完全以自己使用的编程语言来定义自己的专业性。你经常会听到有人说“我是C#开发人员”，或者“我是Java开发人员”，等等。这种专业分工太宽泛了，并不足以说明你能胜任哪种类型的软件开发工作。一门编程语言并不能让我了解你是哪类软件开发人员，也不能告诉我你真正能做什么。它只是让我知道你在工作中使用哪一种工具。
你可能会害怕专攻软件开发的某一领域，担心自己陷入很窄的专业领域，从而与其他的工作和机会绝缘。虽然专业化确实会把你关在一些机会的大门之外，但与此同时它将打开的机会大门要比你用其他方式打开的多得多。
再拿前文的律师场景打比方。如果你成为了一名律师，但并无专业方向，那么理论上每个要找律师的人都会是你的客户。但问题是，只有少数人才想雇一个“通才式”的律师。大多数潜在客户都倾向于聘请“专才”。
尽管看起来你有一大拨潜在客户，但现实上，身为一个“通才式”的律师，你的客户群会大幅缩减，只剩下那些没有精明地能意识到自己需要“专才”的那些人。
从表面上看，身为“专才”后，潜在雇主和客户群都变小了，但是实际上你对他们更具吸引力了。只要你专业能力雄厚，市场没有过渡饱和，与那些自称为“软件开发人员”的人相比，你能更轻松地找到工作或者赢得客户。
在一个专业方向上拥有专长
如果称自己是“C#开发人员”或者“Java开发人员”不够明确的话，那该怎么称呼呢？这可不是一个容易回答的问题，因为真正的答案是“那得看情况了”。这取决于你所要达成的目标是什么，这个领域的市场有多大。
让我给你举个例子吧。在我职业生涯的早期，我把自己定位为专攻打印机驱动软件和打印机语言开发的软件开发人员。这个专业很偏门，只可能在数得着的几家大公司找到工作。不过你也能想象得出，打印机制造商要想找到专攻打印机和打印机语言的开发人员有多难。
我的偏门专业让我对小范围内的潜在雇主极具价值。这些雇主并不会在大多数城市存在，所以如果我的市场是美国甚至全球的话，那在这个庞大的市场上，我的专长格外有用。但是，如果我不想搬离现在生活的地方的话，那我的专长并无用武之地。（有多少本地公司需要一位专攻打印机的软件开发人员？）幸运的是，当时的我愿意去美国的任何地方工作，所以这个专长挺适合我的。
注意
 专业化的规则是：专业化程度越深，潜在的机会就越少，但获得这些机会的可能性越大。
让我们回到你的情况。假设你正在你所在地寻求一份工作，并且你是一个Java开发人员。很多大都市对Java开发人员都有相当大的需求，所以开始的时候你会拥有一个很棒的大水池——你可以得到很多工作机会。但其实你并不需要所有的这些工作机会，只要一个就够了。
让我们假设一下，在任何给定的时间内，你所在的地区都有500个Java开发工作岗位空缺。现在，假设你决定走专业化路线，限定自己的市场但提高或者这些工作的机会，那你的专长就是做Java Web开发人员。或许这一决定减少了250个工作机会，但是还有250个工作机会。仍然很多，不是吗？记住，你只需要一份工作。
通过有针对性地缩小“工作机会池”，提高被录用的机会
现在你决定更专业化一点，选择专攻Java Web开发栈（我们不在这里牵扯过多具体Java Web开发栈的细节）。也许这会将你的工作机会降到50个，但可供挑选的工作机会依然很多，同时因为你现有的技能和知识都是针对这些工作的，于是你获得这50个工作中的某一个的机会增加了。
软件开发人员的专业类别