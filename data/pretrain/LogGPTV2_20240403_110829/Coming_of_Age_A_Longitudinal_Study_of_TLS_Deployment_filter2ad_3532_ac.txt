### Attacks on CBC-Mode and Their Countermeasures

There are three well-known attacks against the Cipher Block Chaining (CBC) mode: BEAST (2011), Lucky 13 (2013), and POODLE (2014). Each of these attacks requires specific countermeasures.

#### BEAST Attack
- **Countermeasure**: The BEAST attack could only be mitigated on the client side, for example, by using record splitting. However, it was also recommended to switch to newer TLS versions (TLS 1.1 is immune to this attack) or to avoid using CBC-mode on the server side.
- **Challenges**: At the time, widespread support for TLS 1.1 and TLS 1.2 was limited, leading to a recommendation to switch to RC4 cipher suites, despite their known vulnerabilities.

#### Lucky 13 Attack
- **Countermeasure**: Complex patches were rolled out for both clients and servers to address the Lucky 13 attack. However, since TLS 1.2 was not widely available, switching to authenticated encryption (AEAD) was not practical.
- **Impact**: The combination of Lucky 13 and the subsequent RC4 attacks (e.g., RC4 biases, RC4 no more, Sweet32) further complicated the situation, as RC4 was no longer a viable alternative.

### Impact on CBC-Mode Usage

Despite the attacks, CBC-mode usage did not show a clear shift in traffic patterns. This may be because major implementations patched against the attacks, which was considered sufficient mitigation. The rise in TLS 1.2 traffic and the use of AEAD cipher suites can be seen as a longer-term reaction to the series of attacks on CBC-mode and RC4.

### Client-Side Support for CBC-Mode

During our observation period, nearly all TLS clients in our dataset supported CBC-mode. However, while clients continued to support CBC-mode, they gradually reduced their support over time. Table 3 outlines the changes in the TLS configurations of four major browsers regarding their support for CBC-mode cipher suites.

| Browser | Date | Version | Number of CBC Ciphersuites |
|---------|------|---------|---------------------------|
| Chrome  | 02/04/2014 | 33 | Reduced from 29 to 17 |
|         | 14/10/2014 |     | Reduced to 10            |
|         | 31/03/2015 |     | Reduced to 9             |
|         | 14/03/2018 | 60 beta | Reduced to 5             |
| Firefox | 20/08/2013 | 29 | Reduced from 29 to 16    |
|         | 12/11/2013 |     | Reduced to 10            |
|         | 03/03/2015 | 41 | Reduced to 9             |
|         | 02/03/2016 | 49 | Reduced to 7             |
|         | 25/01/2017 | 56 | Reduced to 5             |
| Opera   | 02/07/2013 | 15 | Increased from 2 to 6    |
|         | 27/08/2013 |     | Reduced to 4             |
|         | 09/06/2015 | 16 | Removed completely       |
| Safari  | 18/09/2014 | 7.1 | Increased from 25 to 29  |
|         | 01/09/2016 | 9   | Reduced to 15            |
|         | 19/07/2017 | 10.1 | Reduced to 12            |

While clients reduced the number of CBC-mode cipher suites they offered, Figure 5 shows that they still placed CBC-mode high in their list of preferences, with little change in the relative position of the first offered CBC-mode cipher suite over time.

### Server-Side Support for CBC-Mode

According to Censys, server-side support for CBC ciphers has also dropped significantly. The percentage of servers choosing CBC-mode cipher suites over other cipher suites decreased from 54% in September 2015 to 35% in May 2018, with the highest drop occurring between late 2016 and mid-2017.

### Transition to TLS 1.2 and AEAD

Figure 1 shows that TLS 1.0 remained in use for years after the BEAST attack became public, though there was a steady decline from nearly 100% in January 2012 to 2.8% in February 2018. There was a period from mid-2012 to late 2013 where TLS 1.1 gained traction, possibly in response to BEAST. However, TLS 1.1 traffic dropped off quickly as TLS 1.2 took off in late 2013. Figure 2 shows that RC4 traffic did not increase significantly post-BEAST, and CBC-mode remained popular until August 2015, when its usage began to decline.

### SSL 3.0 and POODLE

We also observed a drop in SSL 3.0 traffic, but this predates the publication of the POODLE attack, which is often referred to as the "SSL 3 killer." Thus, we cannot directly attribute the decline in SSL 3.0 usage to POODLE, although it is possible if information about the attack was circulating before its official publication.

### RC4 Attacks and Their Impact

Multiple attacks targeting RC4 have been discovered in recent years, leading to recommendations that RC4 should no longer be used. Figure 2 shows the percentage of connections negotiating an RC4 cipher suite, capturing the drop in RC4 usage from 60% in August 2013 to almost zero in March 2018. Table 4 outlines the dates at which each browser reduced and completely removed their support for RC4.

| Browser | Date | Version | Number of RC4 Ciphersuites |
|---------|------|---------|---------------------------|
| Firefox | 04/12/2014 | 36 | Reduced from 6 to 4        |
|         | 24/02/2015 | 38 | Only available for whitelist |
|         | 26/01/2016 | 44 | Removed completely         |
| Chrome  | 20/08/2013 | 29 | Reduced from 6 to 4        |
|         | 19/05/2015 | 43 | Removed completely         |
| Opera   | 02/07/2013 | 15 | Increased from 2 to 6      |
|         | 27/08/2013 |     | Reduced to 4               |
|         | 09/06/2015 | 16 | Removed completely         |
| IE/Edge | 20/05/2015 | 30 | All RC4 ciphersuites removed |
| Safari  | 25/02/2012 | 13 | Reduced from 7 to 6        |
|         | 30/09/2015 | 6   | Reduced to 4               |
|         | 20/09/2016 | 9   | Removed completely         |

A significant drop in clients advertising RC4 connections was observed at the beginning of 2015, correlating with the decision of Chrome, Firefox, and IE/Edge to completely remove support for RC4. However, some clients continued to advertise RC4 for some time after the official removal, indicating a user population that does not quickly update.

### Heartbleed Vulnerability

Heartbleed was an OpenSSL vulnerability in the processing of the Heartbeat extension that could leak process memory, including private keys. The group that discovered Heartbleed estimated that over 66% of servers on the Internet might have been vulnerable before disclosure. However, this estimate was based on the number of Apache and NGinx servers, and some sites might have deactivated the feature. Durumeric et al. [44] estimated that at least 23.7% of servers were vulnerable at the time of Heartbleed's public disclosure. In their first scan in 2014, they found 5.9% of servers to be vulnerable and 11.4% of servers supporting the Heartbeat extension.

Heartbleed received extensive media coverage and a quick response from server operators, with the number of vulnerable servers dropping to less than 2% within a month. According to Censys scans, 0.32% of servers were still vulnerable in May 2018, indicating a long tail effect. While 34% of servers now support the Heartbeat extension, 3% of observed TLS connection negotiations still use it, which is surprising given that the Heartbeat extension is a DTLS-specific feature not needed in TCP-based TLS connections.

### FREAK, Logjam, and Export Ciphers

FREAK and Logjam are additional vulnerabilities that affected the security of TLS connections. These vulnerabilities, along with the use of export-grade ciphers, further highlight the need for robust and up-to-date security practices in TLS deployment.