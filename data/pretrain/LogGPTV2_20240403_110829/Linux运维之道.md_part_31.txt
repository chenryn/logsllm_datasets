#exclude= test/
~]#service iptables save
~]#
rsync--daemon
chmod 600/etc/rsyncd.secrets
---
## Page 239
下载数据
上传数据
下载数据
rsync[选项] SRC...[DEST]
表4-6
上传数据
D
--specials
--devices
-g,--group
-O,--owner
-X,--xattrs
-A,--acls
H,--hard-links
-1,--links
-u,--update
--suffix
--back-dir
-b,--backup
-r,--recursive
-a,--archive
-q,--quiet
rsync[选项]SRC...rsync:/[USER@]HOST[:PORT]/DEST
rsync [选项] SRC...[USER@]HOST:DEST
rsync[选项]rsync://[USER@]HOST[：PORT]SRC.[DEST]
rsync[选项][USER@]HOST:SRC.[DEST]
rsync [选项]SRC...[USER@]HOST:DEST
rsync [选项][USER@]HOST:SRC.[DEST]
保留修改时间属性。
等同于--devices-specials。
保留特殊文件。
保留设备文件。
保留文件所属组属性。
保留文件所有者属性
保留硬链接。
保留文件权限属性。
保留符号链接。
也就是说，不会用旧的文件覆盖新的文件。
如果目标地址中的文件比将要下载的文件新，则不执行同步。
指定备份文件前缀。
将备份文件保存至指定目录。
可以使用--suffx指定不同的备份前缀。
如果目标路径已经存在同名文件，将I旧的文件重命名为~filename，
递归。
归档模式，
静默模式，无错误信息。
显示详细信息。
留文件附加属性。
留ACL权限。
通过rsync 进程复制
通过远程 shell复制
本地复制
，主要保留文件属性，
等同于-rlptgoD。
第4章搭建网络服务
223
---
## Page 240
下载至本地test3目录。
/data/tmp目录下不会创建bar目录。
Linux运维之道
224
显示192.168.0.254服务器所有的模块名称，需要服务器端配置list=true才会显示。
匿名下载192.168.0.254服务器的common模块至本地/dest目录。
使用 tom账户连接远程192.168.0.254主机的 rsync 进程，将common模块定义的path 路径
#]
[root@centos6 ~]# rsync -avz PI:EMAIL::common /test3
将本机/src/foo目录复制至/dest目录。
[root@centos6~]# rsync -avz/src/foo/dest
从 foo主机上以递归方式将 src/bar 目录下的所有内容复制至本机/data/tmp目录，但在
[root@centos6~]# rsync-avz foo:src/bar//data/tmp
从foo主机上以递归方式将src/bar目录复制至本机/data/tmp目录。
[root@centos6 ~]#rsync-avz foo:src/bar/data/tmp
将本机当前目录下的以.c结尾的文件复制至foo主机的src目录下。
[root@centos6 ~]# rsync -t*.c foo:src/
实例：
--list-only
--password-file-FILE指定密码文件，将密码写入文件，实现非交互式数据同步。
--partial
--progress
--exclude=PATTERN
--include=PATTERN
-Z,--compress
--delete
--existing
-e,--rsh=COMMAND指定远程shell。
-W,--whole-file
仅列出服务器模块列表，需要rsync服务器设置list=true。
等同于--progress-partial。
保留因故障未传输完成的文件。
显示数据传输的进度信息。
匹配需要排除的文件。
匹配不排除的文件。
传输过程中对数据进行压缩。
删除那些仅在目标路径中存在的文件（源路径中不存在）。
仅同步目标路径中已经有的文件，不下载源路径下新的文件。
不做增量检查，直接复制全部文件。
---
## Page 241
行 Rsync 连接，对比客户端与服务器之间的数据差异，这样的机制在当前大数据时代背景下是
改变，在不知道什么时候会发生数据改变的情况下，为了同步1KB的数据，我们需要不停地进
进行对比，然后进行差异数据同步，然而我们的数据可能只是1TB数据中的IKB数据发生了
+Ymd)
实现数据的定期备份工作。下面的脚本为精简版数据备份脚本范例。
数据同步机制。
智能化的处理机制，这可以考虑使用 Shell脚本来解决这样的问题。下面的 rsync_bask.sh 脚本
就可以省去每次输入密码的烦恼。
rsync.pass，在该文件中仅包含密码，最后使用rsync 命令的--password-file参数指定密码文件，
0.254::common/dest
4.6.3
如果仅使用Rsync进行数据同步，只能满足企业对数据实时性要求不高的环境，即使使用
如果客户端需要定期对Rsync服务器的数据进行备份，可以编写Shell脚本，通过计划任务
每次同步数据都需要手动输入命令是非常麻烦的一件事，作为一名运维人员，我们需要更
客户端主机每次连接服务器都需要输入密码显得非常麻烦，为此，我们可以创建密码文件
[root@centos6 ~]# vim rsync_bak.sh
#If the DEsT directory not found, then create one.
Passfile=/root/rsync.pass
User=tom
Server=192.168.0.254
DEST=/data
SRC=common
exportPATH=/bin:/usr/bin:/usr/local/bin
#Version:1.0 beta
#Date:2012-10-1
#!/bin/bash
[root@centos6 ~]# rsync -avz --delete --password-file=rsync.pass tom@192.168.
Rsync+Inotify实现文件自动同步
-d$DEST]
&&mkdir$DEST
]&&exit2
other-accessible.
第4章
搭建网络服务
。
225
。
---
## Page 242
Linux从2.6.13版本的内核以后全部集成了Inotify功能。
yum 方式安装这两个依赖软件包，系统会将编译 inotify-tool 时所需要的 gcc 软件也一起安装。
件来创建configure安装脚本。而此步骤需要依赖于automake以及libtool软件包，如果采用的是
INSTALL安装说明文档，根据新版本的文档说明，需要使用autogen.sh脚本读取configure.ac文
https://github.com/rvoicilas/inotify-tools中下载。
在CentOS6.3系统中可以使用inotify-tools来实现文件系统的实时监控，该软件可以从
而Inotify仅是内核提供的一种系统功能，用户如果需要使用该功能，还需要安装用户态软件，
表4-7
表4-7是Inotify可以监控的部分常见文件系统事件。
事件时，可以立刻通告给用户态应用程序，通过Inotify可以实时了解文件系统发生的所有变化。
为用户态应用程序提供了文件系统事件通告机制，比如，当发生文件的访问、修改以及删除等
时同步，就需要结合Inotify（inode notify）工具。目前Inotify已经被集成到Linux内核²中，Inotify
低效的。往往数据的变化随时都有可能发生，如果多台主机之间要求当数据发生变化后进行实
Linux运维之道
IN_DELETE_SELF
INCREATE
IN_DELETE
IN_MOVED_TO
IN_MOVED_FROM
IN_CLOSE_NOWRITE
IN_CLOSE_WRITE
INOPEN
IN_ATTRIB
INMODIFY
IN_ACCESS
226
我们可以去官网下载源码包安装部署该软件，下载源码文件解压后，可以查看对应的
利用Inotify的这种事件通知机制，用户态的应用程序就可以实时监控文件系统的变化，然
[root@centos6 inotify-tools-master]#make && make
[root@centos6 inotify-tools-master]#./configure
：源码安装软件
事件名称
自删除事件
文件或目录创建事件
文件或目录删除事件
文件移动或重命名事件
不可写文件被关闭事件
可写文件被关闭事件
文件打开事件
文件属性修改事件
文件修改事件
文件访问事件
描述
install
---
## Page 243
开启一个终端窗口运行命令cat/test/fo，验证当发生查看文件事件时，是否会有事件通知。
...
令的描述和用法如下。
实例2：编写一个脚本实时监控NetworkManager相关日志信息，内容如下。
实例1：创建测试目录/test和测试用文件/etc/foo，运行inotifywait命令监控/test目录，然后
选项：-h,--help
用法：inotifywait [-hcmrq][-e][-t][-format ][--timefmt ]
描述：使用inotify 机制等待文件系统事件，该命令非常适合实时监控文件系统的变化。
inotify-tol提供了两个应用程序，分别为inotifywait与inotifywatch。其中，inotifywait 命
/test/OPENfoo
Watches established.
2.
监控数据
--format
--timefmt
-C,--CsV
-t,--timeout
--excludei
--exclude
-q,--quiet
-r,--recursive
-S,--syslog
-0,--outfile
-d,--daemon
-m,--monitor
--fromfile
@
指定输出信息格式，具体格式参考man手册。
设置时间格式，即--format指定的%T格式。
使用CSV 格式输出。
使用正则表达式匹配例外文件，不区分大小写。
使用正则表达式匹配例外文件，区分大小写。
静默模式，不输出信息。
递归监控。
将错误信息输出至syslog系统日志，默认输出至标准错误输出。
将事件信息输出至文件，默认输出至标准输出。
指定事件信息的输出文件。
与--monitor类似，但程序会进入后台执行，需要通过--outfile
接收到事件后不退出，默认程序在接收一个事件信息后会退出。
如果文件名称以@开头，则表示例外文件。
从文件中读取需要监控与例外的文件名称，每行一个文件名，
指定监控路径中的例外文件，应用于不需要监控的文件。
显示帮助信息。
仅监控指定的事件。
在指定的时间没有发生事件，则退出程序。
第4章搭建网络服务
227
---
## Page 244
所示，最终我们只要在192.168.0.254主机上修改数据，就可以实时推送数据至两台Web服务器，
传功能，以实现客户端主机将数据推送至Rsync 服务器，实现数据的实时同步功能。如图4-16
供Web服务的Web服务器。
当数据发生变化后调用Rsync 命令上传数据至多个Rsync 服务器，这里的Rsync服务器就是提
端建立一个数据发布服务器，该服务器作为Rsync客户端，通过Inotify机制实时监控网站数据，
些主机之间同步那些随时可能发生改变的网站数据简直就是一场噩梦。我们的解决方案是在后
术，整合多台服务器处理能力实现负载均衡，从而满足不断增加的并发访问量。
户访问量的增加，单台服务器已经满足不了大量的并发访问。因此，ABC公司决定使用集群技
流程，图4-16为案例结构图。在这个案例中，ABC公司需要部署一套Web服务，然而随着用
的结合将能满足企业对数据中心实时数据同步的要求。接下来我们用案例说明两者结合部署的
Linux运维之道
228
首先需要在多台Web 服务器上部署Rsync 服务器，这些Rsync 服务器要能够提供客户端上
由于Web服务器所提供的网站数据需要保持一致，但当服务器越来越多时，公司发现在这
单一的 Rsync 工具仅可以进行数据同步，单一的 Inotify 仅可以实现实时文件监控，而两者
3.Rsync与Inotify双剑合璧
done
fi
then
while inotifywait -e modify/var/log/messages
#!/bin/bash
[root@centos6~]#catmonitor.sh
echo Love
var/
/var/www/001
/002
图4-16
192.168.0.254
Rsync客户端+Inotify
数据发布服务器
---
## Page 245
际需求进行修改)：
Web服务器（主机192.168.0.102）配置如下（案例中所涉及的账户和密码信息可根据自己的实
pid file
transfer logging = yes
#/etc/rsyncd.conf
Web服务器（主机192.168.0.103）配置如下：
[root@centos6~]#
list = false
hosts deny=*
hosts a11ow=192.168.0.254
secrets file=/etc/rsyncd.secrets
auth users = tom
path=/var/www/001
comment=Web content
read only = no
ignore errors
use chroot= no
gid=nobody
uid = nobody
lock file =/var/run/rsync.lock
log file =/var/log/rsyncd.log
[root@centos6~]#
[root@centos6
[root@centos6~]#yum-yinstallrsync
[root@centos6
[webl]
transfer logging=yes
#/etc/rsyncd.conf
[root@centos6~]#
[root@centos6
[root@centos6
[root@centos6~]
[root@centos6
[root@centos6
[root@centos6
[root@centos6~]#vim/etc/rsync.conf
root@centos6
5~]#chmod660/var/www/002
~]
~]# yum -y install rsync
~1#
~1
~1
#
#
#
#
chownnobody.nobody/var/www/002
#
vim /etc/rsync.conf
mkdir-p/var/www/002
rsync --daemon
chmod 600 /etc/rsyncd.secrets
chown nobody.nobody/var/www/001
chmod
mkdir
660/var/www/001
-p/var/www/001
--dport 873 -j ACCEPT
第4章搭建网络服务
229
---
## Page 246
自动进行数据同步操作，将数据推送至Web服务器。
里的脚本名称为 notify_rsync.sh（该脚本具体的内容见下文方框中）。当监控到数据发生改变时，
Linux运维之道
230
Client2=192.168.0.103
Client1=192.168.0.102
DEST2=web2
DEST1=web1
SRC=/web_data/
export PATH=/bin:/usr/bin:/usr/local/bin
#Date:2012-10-1
#This Rsync script based on inotify.
在数据发布服务器（192.168.0.254）上需要下载inotify-tool软件包，
#Version:1.0 beta
#!/bin/bash