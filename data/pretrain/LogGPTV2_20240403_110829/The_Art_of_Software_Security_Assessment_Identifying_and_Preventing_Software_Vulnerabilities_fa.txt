            protection="All" 
            timeout="1200" 
            path="/" /> 
This code causes a request from an unauthenticated user to be redirected to 
login.aspx. This page can then process the login and, if needed, forwards the user to 
the original URL on success. 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1129 
The login page is generally the first page you want to examine in an ASP.NET 
application. Often, developers include backdoor mechanisms for testing purposes or 
Web service requests, or the login could simply have vulnerabilities of its own. 
Authorization 
The authorization section of the web.config file can also contain useful information 
and be used to restrict request methods, users, groups, and roles. Typically, you see 
a small number of roles to separate normal and administrative users. Here's a typical 
authorization section for a Web application's administrative interface: 
The location tag can also be used to limit the scope of the authorization section. For 
example, you could wrap this section in a location tag that includes only the 
administrative page or directory. 
AppSettings 
The appSettings section of the web.config file can be used to provide 
application-specific parameters. They are passed as simple key value pairs and 
retrieved later by using ConfigurationSettings.AppSettings(). These parameters can 
be important to how the application performs, so make note of them and see where 
they're used in the code. In particular, database and middleware connection 
information is often stored in this section. Here's an example of an appSettings 
section of the web.config file: 
8.5.10 Summary 
This chapter has given you an overview of the current direction of Web technologies 
and some details of common platforms. You should be able to use this information as 
a starting point in reviewing Web applications. However, keep in mind that all these 
platforms are quite complex; an entire book could be devoted to a detailed 
exploration of the security aspects of each one. Make sure you supplement this 
chapter's coverage with detailed information from platform developers and other 
security resources. 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1130 
9. Bibliography 
Berners-Lee, T., Fielding, R., and Frystyk, H. "Request for Comments (RFC) 1945: 
Hypertext Transfer Protocol HTTP/1.0." Internet Engineering Task Force (IETF), 
1996. 
Bishop, M. Computer Security: Art & Science. Addison-Wesley, 2003. 
Brown, K. Programming Windows Security. Addison-Wesley, 2000. 
Brown, K. The .NET Developer's Guide to Windows Security. Addison-Wesley, 2005. 
Chen, H., Wagner, D., and Dean, D. "Setuid Demystified." In Proceedings of the 
Eleventh Usenix Security Symposium. San Francisco, 2002. 
Eddon, G. and Eddon, H. Inside Distributed COM. Microsoft Press, 1998. 
Ferguson, N. and Schneier, B. Practical Cryptography. Wiley Publishing, Inc., 2003. 
Fielding, R., et al. (1999). "Request for Comments (RFC) 2616: Hypertext Transfer 
Protocol HTTP/1.1." Internet Engineering Task Force (IETF), 1999. 
Hart, J. Windows System Programming, Third Edition. Addison-Wesley, 2005. 
Hoglund, G. and McGraw, G. Exploiting Software. Addison-Wesley Professional, 2004. 
Howard, M. and LeBlanc, D. Writing Secure Code, Second Edition. Microsoft Press, 
2002. 
Howard, M., LeBlanc, D., and Viega, J. 19 Deadly Sins of Software Security. 
McGraw-Hill Osborne Media, 2005. 
ISO/IEC. ISO/IEC International Standard 9899-1999: Programming LanguagesC. 
International Organization for Standardization (ISO), 1999. 
ITU-T. Recommendation X.690, ISO/IEC 8825-1, ASN.1 encoding rules: Specification 
of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) & Distinguished 
Encoding Rules (DER). International Organization for Standardization (ISO), 2002. 
ITU-T. Recommendation X.691, ISO/IEC 8825-2, ASN.1 encoding rules: Specification 
of Packed Encoding Rules (PER). International Organization for Standardization (ISO), 
2003. 
ITU-T. Recommendation X.693, ISO/IEC 8825-4, ASN.1 encoding rules: XML 
Encoding Rules (XER). International Organization for Standardization (ISO), 2004. 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1131 
Kernighan, B. W. and Ritchie, D. M. The C Programming Language, 2nd Edition. 
Prentice Hall, 1988. 
Koziol, J., et al. The Shellcoder's Handbook: Discovering & Exploiting Security Holes. 
Wiley Publishing, Inc., 2004. 
Lopatic, T., McDonald, J., and Song, D. A Stateful Inspection of FireWall-1. Blackhat 
Briefings, 2000. 
Maughan, D., et al. "Request for Comments (RFC) 2408: Internet Security 
Association & Key Management Protocol (ISAKMP)." Internet Engineering Task Force 
(IETF), 1998. 
McConnell, S. Code Complete: A Practical Handbook of Software Construction. 
Microsoft Press, 2004. 
Menezes, A., van Oorschot, P., and Vanstone, S. Handbook of Applied Cryptography. 
CRC Press, 2000. 
Microsoft Developer Network (MSDN) Library. http://msdn.microsoft.com/library/, 
2006. 
Mockapetris, P. "Request for Comments (RFC) 1035: Domain NamesImplementation 
& Specification." Internet Engineering Task Force (IETF), 1987. 
Moore, B. "Shattering By Example." Security-Assessment.com 
(http://blackhat.com/presentations/bh-usa-04/bh-us-04-moore/bh-us-04-moore-w
hitepaper.pdf), 2003. 
NGSSoftware Insight Security Research Papers. Next Generation Security Software. 
http://www.nextgenss.com/research/papers/. 
OpenBSD Project. OpenBSD Manual (www.openbsd.org/cgi-bin/man.cgi), 2006. 
Paxon, V. Personal Web site (www.icir.org/vern/). 
Postel, J. "Request for Comments (RFC) 0768: User Datagram Protocol." Internet 
Engineering Task Force (IETF), 1980. 
Postel, J. "Request for Comments (RFC) 0791: Internet Protocol." Internet 
Engineering Task Force (IETF), 1981. 
Postel, J. "Request for Comments (RFC) 0793: Transmission Control Protocol." 
Internet Engineering Task Force (IETF), 1981. 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1132 
Quinlan, D., Russell, P. R., and Yeoh, C. "Filesystem Hierarchy Standard." 
www.pathname.com/fhs/, 2004. 
Ranum, M. Personal Web site (www.ranum.com/). 
Russinovich, M. and Cogswell, B. Sysinternals (www.sysinternals.com/). 
Russinovich, M. and Solomon, D. Microsoft Windows Internals: Microsoft Windows 
Server 2003, Windows XP, & Windows 2000, Fourth Edition. Microsoft Press, 2005. 
Schneier, B. Applied Cryptography: Protocols, Algorithms, & Source Code in C, 
Second Edition. Wiley Publishing, Inc., 1995. 
Schrieber, S. Undocumented Windows 2000 Secrets: A Programmer's Cookbook. 
Addison-Wesley, 2001. 
Sommerville, I. Software Engineering, Seventh Edition. Addison-Wesley, 2004. 
SPI Labs Whitepapers. SPI Dynamics 
(www.spidynamics.com/spilabs/education/whitepapers.html). 
St. Johns, M. "Request for Comments (RFC) 1413: Identification Protocol." Internet 
Engineering Task Force (IETF), 1993. 
Stevens, W. R. Advanced Programming in the UNIXâ„¢ Environment. Addison-Wesley, 
1992. 
Stevens, W. R. TCP/IP Illustrated, Volume 1: The Protocols. Addison-Wesley, 1994. 
Stewart, R. and Dalal, M. Improving TCP's Robustness to Blind In-Window Attacks. 
Internet Engineering Task Force (IETF), 2006. 
Swiderski, F. and Snyder, W. Threat Modeling. Microsoft Press, 2004. 
The Open Group. The Single UNIX Specification. The Austin Group 
(www.unix.org/version3/), 2004. 
van der Linden, P. Expert C Programming. Prentice-Hall, 1994. 
Wheeler, D. A. "Secure Programming for Linux and Unix HOWTO." 
www.dwheeler.com/secure-programs, 2003. 
Zalewski, M. "Delivering Signals for Fun & Profit." Symantec (BindView publication, 
acquired by Symantec; 
www.bindview.com/Services/Razor/Papers/2001/signals.cfm), 2001. 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1133 
Zalewski, M. Personal Web site (http://lcamtuf.coredump.cx/). 
10. Index 
Index 
[SYMBOL(? [????.])] [A(? [????.])] [B(? [????.])] [C(? [????.])] [D(? [????.])] [E(? [????.])] [F(? 
[????.])] [G(? [????.])] [H(? [????.])] [I(? [????.])] [J(? [????.])] [K(? [????.])] [L(? [????.])] [M(? 
[????.])] [N(? [????.])] [O(? [????.])] [P(? [????.])] [Q(? [????.])] [R(? [????.])] [S(? [????.])] [T(? 
[????.])] [U(? [????.])] [V(? [????.])] [W(? [????.])] [X(? [????.])] [Y(? [????.])] [Z(? [????.])]  
10.1 SYMBOL 
Index 
[SYMBOL(? [????.])] [A(? [????.])] [B(? [????.])] [C(? [????.])] [D(? [????.])] [E(? [????.])] [F(? 
[????.])] [G(? [????.])] [H(? [????.])] [I(? [????.])] [J(? [????.])] [K(? [????.])] [L(? [????.])] [M(? 
[????.])] [N(? [????.])] [O(? [????.])] [P(? [????.])] [Q(? [????.])] [R(? [????.])] [S(? [????.])] [T(? 
[????.])] [U(? [????.])] [V(? [????.])] [W(? [????.])] [X(? [????.])] [Y(? [????.])] [Z(? [????.])]  
/bin directory (UNIX)(? [????.]) 
/etc directory (UNIX)(? [????.]) 
/home directory (UNIX)(? [????.]) 
/sbin directory (UNIX)(? [????.]) 
/var directory (UNIX)(? [????.]) 
10.2 A 
Index 
[SYMBOL(? [????.])] [A(? [????.])] [B(? [????.])] [C(? [????.])] [D(? [????.])] [E(? [????.])] [F(? 
[????.])] [G(? [????.])] [H(? [????.])] [I(? [????.])] [J(? [????.])] [K(? [????.])] [L(? [????.])] [M(? 
[????.])] [N(? [????.])] [O(? [????.])] [P(? [????.])] [Q(? [????.])] [R(? [????.])] [S(? [????.])] [T(? 
[????.])] [U(? [????.])] [V(? [????.])] [W(? [????.])] [X(? [????.])] [Y(? [????.])] [Z(? [????.])]  
AASP (Active Server Pages)(? [????.]) 
Abstract Syntax Notation (ASN.1) [See ASN.1 (Abstract Syntax Notation)(? [????.]).] 
Abstraction, software design(? [????.]) 
ACC (allocation-check-copy) logs(? [????.]) 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1134 
     auditing(? [????.]) 
     data assumptions(? [????.]) 
     order of action(? [????.]) 
     unanticipated conditions(? [????.]) 
Accept header field (HTTP)(? [????.]) 
Accept-Charset header field (HTTP)(? [????.]) 
Accept-Encoding header field (HTTP)(? [????.]) 
Accept-Language header field (HTTP)(? [????.]) 
Accept-Ranges header field (HTTP)(? [????.]) 
access control(? [????.]) 
     ASP.NET(? [????.]) 
     DCOM (Distributed Component Object Model)(? [????.]) 
     vunerabilities(? [????.]) 
access control entries (ACEs) [See ACEs (access control entries)(? [????.]).] 
access control policy(? [????.]) 
access masks, Windows NT, security descriptors(? [????.]) 
access tokens, Windows NT sessions(? [????.]) 
     contexts(? [????.]) 
     group lists(? [????.]) 
     impersonation(? [????.]) 
     privileges(? [????.]) 
     restricted tokens(? [????.]) 
     SAFER (Software Restriction Policies) API(? [????.]) 
access( ) function(? [????.]) 
accountability, common vulnerabilities(? [????.]) 
accuracy, software design(? [????.]) 
ACEs (access control entries)(? [????.]) 
     flags(? [????.]) 
     orders(? [????.]) 
ACFs (application configuration files), RPCs (Remote Procedure Calls)(? [????.]) 
ACLs (access control lists)(? [????.]) 
     low-level ACL control(? [????.]) 
     permissions, auditing(? [????.]) 
     Windows NT, inheritance(? [????.]) 
activation records, runtime stack(? [????.]) 
activation, DCOM objects(? [????.]) 
active FTP(? [????.]) 
Active Server Pages (ASP) [See ASP (Active Server Pages)(? [????.]).] 
Active X controls(? [????.]) 2nd(? [????.]) 
     COM (Component Object Model), security(? [????.]) 
     kill bit(? [????.]) 
     signing(? [????.]) 
     site-restricted controls(? [????.]) 
     threading(? [????.]) 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1135 
ActiveX Data Objects (ADO)(? [????.]) 
address space layout randomization (ASLR) [See ASLR (address space layout 
randomization)(? [????.]).] 
addresses 
     IP addresses(? [????.]) 
         maintaining state with(? [????.]) 
     subnet addresses(? [????.]) 
AdjustTokenGroups( ) function(? [????.]) 
AdjustTokenPrivileges( ) function(? [????.]) 
ADO (ActiveX Data Objects)(? [????.]) 
ADT (abstract data type), stacks(? [????.]) 
Age header field (HTTP)(? [????.]) 
Aitel, Dave(? [????.]) 
AIX(? [????.]) 
AJAX (Asynchronous JavaScript and XML)(? [????.]) 
algorithms 
     analyzing, CC (code comprehension)(? [????.]) 
     encryption(? [????.]) 
         block ciphers(? [????.]) 
         common vunerabilities(? [????.]) 
         exchange algorithms(? [????.]) 
         IV (initialization vector)(? [????.]) 
         stream ciphers(? [????.]) 
     hashing algorithms(? [????.]) 
     software design(? [????.]) 
alloc( ) function(? [????.]) 
allocating 0 bytes(? [????.]) 
allocation functions, auditing(? [????.]) 
allocation-check-copy (ACC) logs [See ACC (allocation-check-copy) logs(? [????.]).] 
allocator scorecards(? [????.]) 
Allocator with Header Data Structure listing (7-39)(? [????.]) 
Allocator-Rounding Vulnerability listing (7-38)(? [????.]) 
Allow header field (HTTP)(? [????.]) 
Allowed header field (HTTP)(? [????.]) 
analysis phase, code review(? [????.]) 2nd(? [????.]) 
     findings summary(? [????.]) 
analyzing 
     algorithms, CC (code comprehension)(? [????.]) 
     classes, CC (code comprehension)(? [????.]) 
     modules, CC (code comprehension)(? [????.]) 
     objects, CC (code comprehension)(? [????.]) 
Anderson, J.S.(? [????.]) 
anonymous pipes, Windows NT(? [????.]) 
antimnalware applications(? [????.]) 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1136 
antisniff tool, vunerabilities(? [????.]) 
Antisniff v1.0 Vulnerability listing (6-8)(? [????.]) 
Antisniff v1.1 Vulnerability listing (6-9)(? [????.]) 
Antisniff v1.1.1 Vulnerability listing (6-10)(? [????.]) 
Antisniff v1.1.2 Vulnerability listing (6-11)(? [????.]) 
Apache 1.3.29/2.X mod_rewrite Off-by-one Vulnerability listing (7-19)(? [????.]) 
Apache API(? [????.]) 
Apache mod_dav CDATA Parsing Vulnerability listing (7-1)(? [????.]) 
Apache mod_php Nonterminating Buffer Vulnerability listing (7-18)(? [????.]) 
Apache, Struts framework(? [????.]) 
APCs (asynchronous procedure calls)(? [????.]) 
APIs (application programming interfaces) 
     Apache API(? [????.]) 
     ISAPI (Internet Server Application Programming Interface)(? [????.]) 
     NSAPI (Netscape Server Application Programming Interface)(? [????.]) 
Appel, Andrew W.(? [????.]) 
AppID keys(? [????.]) 
application access, categories(? [????.]) 
application architecture modeling(? [????.]) 
application identity, DCOM (Distributed Component Object Model)(? [????.]) 
application IDs, COM (Component Object Model)(? [????.]) 
application layer, network segmentation(? [????.]) 
application manifests(? [????.]) 
application protocols(? [????.]) 
     ASN.1 (Abstract Syntax Notation)(? [????.]) 
         BER (Basic Encoding Rules)(? [????.]) 
         CER (Canonical Encoding Rules)(? [????.]) 
         DER (Distinguished Encoding Rules)(? [????.]) 2nd(? [????.]) 
         PER (Packed Encoding Rules)(? [????.]) 
         XER (XML Encoding Rules)(? [????.]) 
     auditing(? [????.]) 
         data type matching(? [????.]) 
         data verification(? [????.]) 
         documentation collection(? [????.]) 
         identifying elements(? [????.]) 
         system resource access(? [????.]) 
     DNS (Domain Name System)(? [????.]) 2nd(? [????.]) 
         headers(? [????.]) 
         length variables(? [????.]) 
         name servers(? [????.]) 
         names(? [????.]) 
         packets(? [????.]) 
         question structure(? [????.]) 
         request traffic(? [????.]) 
The Art of Software Security Assessment - Identifying and Preventing Software Vulnerabilities 
1137 
         resolvers(? [????.]) 
         resource records(? [????.]) 2nd(? [????.]) 3rd(? [????.]) 
         spoofing(? [????.]) 
         zones(? [????.]) 
     HTTP (Hypertext Transfer Protocol)(? [????.]) 
         header parsing(? [????.]) 
         posting data(? [????.]) 
         resource access(? [????.]) 
         utility functions(? [????.]) 
     ISAKMP (Internet Security Association and Key Management Protocol)(? [????.]) 
         encryption vunerabilities(? [????.]) 
         headers(? [????.]) 
         payloads(? [????.]) 
application review(? [????.]) 
     application review phase(? [????.]) 2nd(? [????.]) 3rd(? [????.]) 
         bottom-up approach(? [????.]) 
         hybrid approach(? [????.]) 
         iterative process(? [????.]) 
         peer reviews(? [????.]) 
         planning(? [????.]) 