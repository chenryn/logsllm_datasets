t
c
a
r
F
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
100
300
500
700
900
1100
Time of Day (h)
1300
1500
1700
1900
2100
2300
Figure 7: A simulation of 9056 people in Chicago and 2988
in Dallas. Tracking network comprises only 1% of the pop.
Broadcast radius is 45m.
rates by following our methodology and simply replacing the
simulated traces of individuals’ positions with actual traces.
Unfortunately, creating such a dataset is extremely dif-
ﬁcult at best and unrealistic or exorbitantly expensive at
worst. A useful dataset needs to include the full number of
individuals in a given region for simulation results to give
us some meaningful indication of the ability to track phones
over a given area. A dataset of the geolocated traces of a tiny
sample of the population cannot be used in simulations to
determine tracking rates for larger populations, as it is not
known how to extrapolate from the area covered by the sam-
pled individuals, their clustering, and interactions to that of
a large population size. Further, peoples’ behavior and thus
movements are dependent on social and natural processes
(e.g., rush and lunch hours), which means the dynamics of
the individuals changes during the day, making any likely
extrapolation process dependent on the time of day; it is
clear that the relationship is far from linear.
Thus, to acquire a dataset for our modeling, we would
need to get a substantial fraction of a large number of people
in a metropolitan downtown core to participate in a tracking
study. The task of creating this study seems unimaginable
and those costs of giving them all sensors is exorbitant. Pri-
vacy concerns, mean we would be unlikely to get voluntary
subject participation in the rates required. The ability to
get data without their permissions (say from a mobile phone
company) to the resolution necessary in the US, even if eth-
as opposed to the m
There are current data sets that have mobility and geolo-
cation data for large groupings of people over large metropoli-
tan and campus environments. In particular, the cellphone
data set used by P.Wang et al. [55] and Gonzalez et al. [20]
has the cellular phone positions of a 100,000 users in a large
European city over a 6-month period. Seemingly perfect
for our application, unfortunately the dataset’s positional
accuracy is only to the nearest cellular tower, measuring in
2
accuracy we need. It also does not
km
contain altitudinal data, something early simulations showed
necessary. Finally, the locations in the dataset are only re-
vealed when the phone placed calls or text-messages, mak-
ing the timeline of the trace not continuous enough to use
in simulations. The Reality Mining [15,16] data set also has
detailed logs of individual activity, but they lack the high
ﬁdelity geographic information that is required by our sim-
ulation: positioning is only to the nearest cellular towers.
The data set lacks the population size is also too small at
only 100 participants.
2
In contrast, the CRAWDAD [1] data repository has sev-
eral high-resolution geolocated mappings of individuals and
detections in its dataset. However, these datasets are ei-
ther too sparse in population samples, not of high-enough
ﬁdelity in their positioning or not eﬀective continuous traces
through time. Further, because some of the datasets rep-
resent students or volunteer subjects performing speciﬁed
tasks, many datasets do not represent natural movement
patterns of a population in a metropolitan area. For exam-
ple, no individuals go in to oﬃce buildings and reside there
all day while they perform work.
Human Social Patterns and their Effect on Tracking.
The movement of people carrying phones is not easily sta-
tistically/deterministically modeled. While there has been
work at developing a coarse granularity statistical modeling
based on long time periods, such as those based on L´evy
ﬂight [9], and that of Truncated L´evy ﬂights based on radial
gyrations [20], there is little that is known over short periods
of time at a high-resolution of positioning. Speciﬁcally, the
authors are aware of none. However, it is essential to cap-
ture, to the best of our ability, the movements and behaviors
of humans, as this greatly eﬀects the expected coverage of
91the sensor network. Speciﬁcally, assuming brownian-motion
over the plane is not a reasonable simulation strategy, as has
been show in other contexts such as the physical placement
of routers for wireless worms [28].
5.2 The UDelModels Simulator
The UdelModels simulator is part of the UDel Models
project [4]. This mobility simulator attempts to recreate
accurate human mobility, both micro and macro, by pro-
ducing traces that match a number of key observed statis-
tics from a number of data sources. A comprehensive re-
view is found in [34, 35], but we provide a very high-level
overview. The UDel Mobility simulator simulates the move-
ment of both cars and pedestrians. To accurately represent
the locations of movement, the simulator uses accurate Ge-
ographic Information Systems (GIS) data to create a graph
that models locations as nodes and edges as paths between
locations. Human activity behavior is recreated based on
information gathered from sources on topics such as urban
planning, meeting analysis, and the 2003 Bureau of Labor
Statistics (BLS) use of time study. Pedestrian mobility is
based on research discussing worker meetings. This research
determines how nodes move within buildings and between
building clusters. To simulate how individuals traverse path-
ways between their destinations, urban planning research is
used.
6. PHYSICAL REALIZATION OF A TRACK-
ING NETWORK
In order to physically enact a tracking network, one needs
to control a large number of smartphones and have them
scan for appropriate BSSIDs of the targets being tracked. In
order to realize such a system one needs: i) tracking software
installed on a large number of smartphones in a given region;
ii) a control mechanism for smartphones to monitor BSSIDs;
and iii) a central system to accumulate the data. We assume
the reader has a certain familiarity with 802.11 networks.
6
One example of a system that meets these criteria is a mo-
bile botnet (malnet) [52]. Each device in the malnet would
have to be set to a monitoring mode so that it could promis-
cuously detect all the WiFi users in the vicinity. This is
feasible. It is in principle possible for most smartphones to
promiscuously sniﬀ traﬃc while in normal operation, with
many hackers looking to create drivers for popular phones.
For many windows mobile phones promiscuous mode soft-
While promiscuously monitoring
ware has been written.
wireless traﬃc, the malnet will look for probe request frames
(and potentially other wireless frames), record the BSSID
address of those frames, the Received Signal Strength Indi-
cation (RSSI) value associated with that frame, and the time
the frame arrived. RSSI measures the strength of the radio
signal detected and has historically been used as a proxy for
distance in wireless positioning. This record would then be
sent to a central data collection server that would process
the records and triangulate the location of an individual.
The amount of strain the data transfer from mobile nodes
would put on the cellular data network should be negligi-
ble because the only time information would be sent to the
6
Further, new phones, such as the Droid X, can function as
802.11 APs. Therefore, they can be detected by phones not
in promiscuous mode, as APs broadcast a beacon visible to
all 802.11 nodes
central server is when a targeted BSSID is seen. In the case
of blanket surveillance that seeks to record everyone’s posi-
tion, the smartphones in the tracking network could collect
the data and send it in batches to ensure that network con-
gestion is kept to a minimum. This makes an attack more
viable then one that could be limited by the bandwidth in
the voice portion of the cellular network such as the attack
in [17, 52]. The proliferation of 3G and 4G cellular networks
in major metropolitan areas makes this concern even less
signiﬁcant.
Another example of a system that meets the realization
criteria is a geolocating advertisement network. This ad-
vertisement hosting network would provide incentives for its
members to install software so that the network can track
non-members. This ad hosting network now would have the
ability to send geo-speciﬁc ads via various means to non-
members of the network, determining their position without
their consent. An Amber Alert application could be used
to search for known BSSIDs of devices a missing child is
known to posses and frequently carry with them, such as
video-game devices, or music players. A theft retrieval net-
work could search for the BSSIDs of stolen laptops. Ap-
ple and Google already have infrastructure in place in their
smartphone operating systems to collect personal location
data. Apple has even reserved the right to share location
data with partners [53] while Google reserves the right to
use the data internally. It would be very simple for them to
modify their phone software to detect nearby probe frames
as well.
Power Saving Mode Effects.
Our assumptions on 802.11n tracking performance still
hold even when taking into consideration power saving modes
such as PSMP, U-APSD, and S-APSD. These technologies
work by buﬀering packets to batch send, but they are only
useful when stationary. Stationary people need to be ob-
served relatively infrequently by trackers. Spatial Multi-
plexing Power Saving turns oﬀ all but the 802.11a/g radios
and thus are less likely to be used while in transit.
7. MITIGATING PRIVACY ATTACKS
While there may be beneﬁcial aspects of such tracking
networks, overall we think the privacy concerns make mit-
igation a positive strategy. The easiest ways to minimize
such tracking is to ensure that the radios do not broadcast
except in those cases in which they are actually being used.
This has usability drawbacks, as the user will no longer be
able to automatically connect to devices such as APs with-
out explicitly initiating the connection. Yet, the less time
the phone is transmitting its location, the less the potential
for detection.
For more involved mitigation strategies we look towards
previous solutions to other wireless location systems.
In
particular, Jiang et al. [31] mentions three speciﬁc defenses.
The ﬁrst defense is a BSSID pseudonym that changes every
time a client connects to a mobile access point. The second
defense is an opportunistic silent period. An opportunistic
silent period is a period in time in which the client does
not send any information, and after that period of time is
reached, the client asks the access point for a diﬀerent BSSID
pseudonym. The ﬁnal solution posed in the paper is decreas-
ing the transmit power of the wireless device dynamically so
that it only transmits the distance to the AP it is currently
92connected to, preventing APs that are further away from
detecting it.
Dynamically modifying the transmit power of the client
may help in minimizing the eﬀectiveness of a tracking net-
work as proposed herein, as it will reduce the tracked’s
broadcast radius. However, we have considered scenarios
where the broadcast radius is 15m, and still show high po-
tential for tracking.
It is not frequent that one is consis-
tently less than 15m away from a known AP. Further, in
cases where no known friendly APs are known, the broad-
cast power will be maximized. Thus we suspect there is a
signiﬁcant possibility that for the vast majority of cases this
will have little to no eﬀect on the ability of the tracking
network.
Opportunistic silent periods and pseudonyms appear as if
they will be an eﬀective countermeasure against small num-
bers of probe attacks. However, if the user is under constant
surveillance, and travels between known endpoints, then it
is not clear if the intermittent locations cannot be reestab-
lished through statistical analysis. This requires auxiliary
information, that a tracker may learn or have, but which
is not considered in Jiang [31]. Therefore, we are unclear
as to how eﬀective this countermeasure is in many practical
cases.
The most in-depth solution is the SlyFi protocol developed
by Greenstein et al [21]. It develops a network link layer that
is identiﬁer free. While SlyFi would be the best suited to
prevent positioning attacks, the protocol was meant for ac-
tively managed networks (i.e. corporate networks). SlyFi,
as discussed in [21], states that modern smartphones would
have to support the traditional 802.11 link-layer protocol if
the smartphones were to connect to personal routers, coﬀee
shop routers, and other devices that are not actively man-
aged. This support of the traditional link-layer protocol
opens up SlyFi enabled smartphones to positioning attacks.
8. RELATED WORK
There is a large body of research discussing the location
tracking of wireless nodes. Many systems [7, 8, 13, 19, 23,
50, 57, 58] require a radio map of the area in which the re-
searchers were trying to track users.
Traditional methods for location tracking in wireless net-
works include the use of Centroids and Kalman Filters. Kim
et al. [37] modiﬁed traditional techniques for positioning in
cellular systems [12,24,25] to track users in the 802.11 wire-
less network at Dartmouth. Their system is able to repli-
cate the paths of a human being through the campus with
a high degree of accuracy. Hightower and Borriello outline
a number of these techniques in “Location Sensing Tech-
niques” [26].
A number of other novel positioning schemes have been
developed. Vu and Li [54] use Delaunay triangulation to ﬁnd
node locations in a wireless network. Savarese et. al. [46]
provide an overview of the triangulation problem of wire-
less networks and provide an overview of a triangulation
method. They propose an algorithm called TERRAIN to
use information from neighboring nodes in an ad-hoc net-
work to triangulate the node positions. Kim et al. [38] use
round-trip travel time and angle-of-arrival information to
generate a location estimation algorithm.
With the increase in research on wireless location ﬁnd-
ing techniques, there has been an increase in research on
location privacy and attacks on location privacy. Hu and
Wang [29] designed a framework for location privacy. Tip-
penhauer et al. [43] actually devise a number of spooﬁng
and false-information attacks on current publicly available
wireless location positioning systems. Gruteser and Grun-
wald [22] as well as Jiang et al. [31] provide techniques for
link layer privacy in wireless networks. Gruteser and Grun-
wald focus on a quantitative analysis of the eﬀects of BSSID
pseudonyms. Jiang et al. discuss BSSID pseudonyms, op-
portunistic silent periods, and a modiﬁcation of wireless
transmission power. Wong and Stajano [56] discuss the use
of pseudonyms when maintaining location privacy in Blue-
tooth networks. Akritidis et al. bring up the idea of a metr-
politan tracking network as well, but only consider access
points and the coverage problem [6].
Sensor Networks.
The surveillance we propose is similar to research done
in sensor network coverage. However there are considerable
diﬀerences. The coverage problem focuses on maximizing
the detection area of each sensor given deterministic or non-
deterministic placement, independent of the subjects being
detected. Early sensor research dealt with the coverage prob-
lem [11, 30, 40]. Our network need only cover the locations
where the vast majority of people are at any given time, and
not locations where individuals are unlikely to be. A second
set of research in sensor coverage looked at how directed
mobile sensors would be able to improve the coverage in a
traditional network [41, 42]. In our work we do not have de-
terministic control over any of our “sensors” (i.e. individuals
with smartphones). Our “sensors” are oblivious individu-
als that move in their own complex patterns following their
daily routine.
The latest research in sensor networks has focused on
“People-centric urban sensing”, or sensor networks in an
urban environment using individuals as sensors [10]. One
such urban sensing network is the MetroSense network con-
structed and discussed in [10]. Another example is the Anony-
Sense network discussed in [14] which attempts to add pri-
vacy elements at the application level to a MetroSense style
network. MetroSense creates an architecture for an urban
sensor network that uses individuals as sensors. It’s goal is to