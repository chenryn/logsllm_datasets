通过观察，发现text段开始的指令，应该就是添加了垃圾指令的shellcode，这时候为了避免IDA⾃动识别
对分析的⼲扰，将text段开始所在的指令通过010Editor复制到shellcode.bin⽂件当中，这⾥⻓度笔者设
置为到PE⽂件⼊⼝点start处。⽂件起始偏移为0x400，⻓度为0xc7150。 
IDA中载⼊保存的shellcode.bin⽂件，以64 bit code反编译，在shellcode⾸地址创建函数，之后借助
IDA F5⼤法反编译代码。 
15
虽然作者在⽣成shellcode时采⽤填充了垃圾指令，但由于是jmp直接跳转的⽅式，在IDA中反编译过程当
中，直接被优化掉了，这样也起不到⼲扰分析⼈员的作⽤了。
⾸先是函数sub_37DD，作⽤是动态获取⼀些函数的地址，并将函数地址存放到函数地址数组中，将该函
数命名为init_functions，参数为function_tables。 
16
跟进继续分析，经过动态调试分析发现，sub_3FC9函数为获取内存加载的模块基址，sub_4609函数为
在模块内部搜索对应的函数。
17
对上层调⽤函数进⾏注释。接着作者⾃⼰实现了strlen函数，然后对字符串最后⼀个字节置0，这⾥没有
什么实质的作⽤，这⾥GetCommandLineA相当于获取了当前程序的路径。
18
然后读取当前程序的⽂件内容到内存当中。
接着从偏移0x145C0C处，前0x400字节使⽤0xEE异或解码，最后复制MZ头到头部前2字节。这⾥操作
为解码保存在当前程序当中的PE⽂件。 
19
函数sub_1339经过调试，其作⽤为保存解码后的PE⽂件到⽂件当中，并执⾏该EXE⽂件。 
接下来需要对解码出来的EXE⽂件进⾏分析，⾸先提取从偏移0x145C0C到⽂件末尾的所有数据，并对数
据的前0x400个字节进⾏0xEE异或解码，然后复制MZ头到⽂件头部，得到⼀个新的EXE⽂件，称之为
stage.exe。 
将stage.exe载⼊到IDA当中，反编译main函数，IDA提示 function size too large。这⾥需要修改IDA安
装所在⽬录下的cfg\hexrays.cfg⽂件，将MAX_FUNCSIZE从64修改到10240，再次反编译即可。 
20
⾸先调⽤函数ShowWindow隐藏当前程序窗⼝，再解码编码后的实际地址，传⼊到作者⾃⼰实现的
http_download函数当中，获取远程的⽂件，最后以"POLICE"字符串为解码key，循环异或解码样本3的
数据，并将解码后的数据保存到C:\ProgramData\TU.IO⽂件当中，将样本1保存到
C:\ProgramData\WhitLog⽂件中，样本2保存到C:\ProgramData\BlacLog⽂件中。 
由此知道了样本3的上⼀层编码⽅法，对下载到本地的样本3进⾏两次解码，两次解码key分别
为"POLICE"和"kuailele"，得到⼀个beacon.bin⽂件，该⽂件即公鸡队⽣成的stageless shellcode⽂件。 
21
紧接着还要执⾏⼀段shellcode，⾸先作者通过单字节赋值的⽅式⽣成⼤⻓度的函数体，以此⼲扰分析⼈
员和达到shellcode静态免杀的效果。 
22
之后调⽤sub_140001110函数执⾏shellcode，这⾥执⾏shellcode的⽅式为通过SetPropA和
PostMessageA实现，对于通过该回调函数执⾏shellcode的⽅式⻅到的并不是很多。 
下⾯展开对函数sub_140001110的分析。⾸先获取粘贴板窗⼝进程ID。 
23
函数sub_140001070的作⽤是判断⽬标进程是否为32位程序。 
如果是32位程序，将会结束⽬标程序，什么也不⼲，并返回0。 
24
否则将会在⽬标进程通过WriteProcessMemory写⼊shellcode的数据，并通过SetPropA函数设置回调函
数地址为shellcode的地址，并通过PostMessageA函数触发shellcode执⾏。 
通过动态调试，将内存当中的shellcode dump到⽂件shellcode_inject.bin⽂件当中，IDA中载⼊，以64 
bit mode分析。 
25
可以发现，与shellcode.bin的结构很相似，分析步骤相同，这⾥主要关注所做的动作。⾸先是从⽂件
c:\programdata\WhitLog和c:\programdata\BlacLog中读取前⾯stage.exe下载保存的样本1、样本2的
数据，再解码头部前0x400字节数据，再重新写⼊数据到⽂件当中。 
然后注册表添加⾃启动，重命名⽩加⿊⽂件，确保在执⾏⽩⽂件后能执⾏loader所在DLL。 
26
最后是调⽤函数CreateProcessA执⾏C:\ProgramData\MpCmdRun.exe加载恶意DLL执⾏stageless 
beacon shellcode上线CS。 
⾄此，钓⻥⽊⻢的所有流程已全部分析完成。
给作者的DLL做下⼿脚，修改编码密钥为"ikun0x00"，并且修复作者留下的"bug"，使⽤全部的8个字节
解码数据，⽽不是只使⽤前7个字节，修改loader读取的⽂件路径为C:\ProgramData\i.kun。 
娱乐⼀下
27
使⽤修改后的算法和key对beacon.bin进⾏编码，复制到C:\ProgramData\i.kun，双击MpCmdRun.exe
观察上线情况。
28
可以看到成功上线。
远程HTTP⽂件服务器：http://112.74.109.76:5559/ 
⽊⻢IOC 
29
C2 腾讯云API地址：https://service-baw5g4iz-1309608249.bj.apigw.tencentcs.com 
sha256： 
1：abf4a58e2410c9f2ff44b46d6b0fd4c0ef1c87cd2f92b54110b48c6bac58bdd7 
2：4b911039f73805932ee8b71e0995e7abd67fb19032a04a25f4bb40f83cbc44a8 
3：40df318615a24046c0a20e96b728db4dfc000b126e8cf2f186fcf61cadd5dcf0 
钓⻥⽊⻢.exe: 4de7883c5527dab617a70af7d76bc34d1f73ebfe50bf29c40f883ec8db3f2b32 
加⼊社区