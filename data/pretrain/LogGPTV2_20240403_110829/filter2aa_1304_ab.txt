### 分析与优化

**1. 通过观察发现，`text`段起始处的指令可能为添加了垃圾指令的shellcode。为了避免IDA自动识别对分析的干扰，我们将从`text`段开始到PE文件入口点`start`之间的指令复制到`shellcode.bin`文件中。该文件起始偏移量为0x400，长度为0xc7150字节。**

**2. 在IDA中加载保存的`shellcode.bin`文件，并以64位代码模式进行反编译。在shellcode首地址创建函数后，使用IDA F5功能进行反编译。**

**3. 尽管作者在生成shellcode时填充了垃圾指令，但由于直接跳转的方式，在IDA反编译过程中这些垃圾指令被自动优化掉了，未能起到干扰分析的作用。**

**4. 首先分析的是`sub_37DD`函数，其作用是动态获取一些函数的地址，并将这些地址存储到一个数组中。我们将其命名为`init_functions`，参数为`function_tables`。**

**5. 继续深入分析，通过动态调试发现`sub_3FC9`函数用于获取内存中加载模块的基址，而`sub_4609`则是在该模块内部搜索指定的函数。**

**6. 对上层调用函数进行注释。接下来，作者实现了自己的`strlen`函数，然后将字符串最后一个字节置零（此操作无实际意义）。`GetCommandLineA`等同于获取当前程序路径。**

**7. 程序随后读取自身文件内容至内存。从偏移0x145C0C处，前0x400字节使用0xEE异或解码，并将MZ头复制到头部前两字节，从而解码嵌入在程序中的PE文件。**

**8. 函数`sub_1339`经过调试，其功能是将解码后的PE文件保存并执行。**

**9. 接下来需要对解码出的EXE文件进行进一步分析。首先提取从偏移0x145C0C到文件末尾的所有数据，对前0x400个字节进行0xEE异或解码，再将MZ头复制到文件头部，得到新的EXE文件，命名为`stage.exe`。**

**10. 将`stage.exe`载入IDA进行反编译，遇到`function size too large`错误提示。解决方法是修改IDA安装目录下的`cfg\hexrays.cfg`文件，将`MAX_FUNCSIZE`从64调整至10240，再次尝试反编译即可。**

**11. `main`函数首先调用`ShowWindow`隐藏当前程序窗口，接着解码实际地址并通过自定义的`http_download`函数下载远程文件。最后使用"POLICE"作为密钥对样本3的数据进行循环异或解码，并将结果分别保存到不同路径下。**

**12. 根据上述信息得知样本3的编码方式，对其进行两次解码（密钥分别为"POLICE"和"kuailele"），最终获得`beacon.bin`文件，即公鸡队生成的无阶段shellcode。**

**13. 接着执行一段shellcode，作者通过单字节赋值方式生成大量冗余代码以干扰静态分析并实现免杀效果。**

**14. 调用`sub_140001110`函数执行shellcode，采用`SetPropA`与`PostMessageA`组合方式触发，这是一种相对少见的技术手段。**

**15. 函数`sub_140001070`负责判断目标进程是否为32位程序。若是，则结束该进程；否则，通过`WriteProcessMemory`向进程中写入shellcode，并设置回调函数地址指向shellcode位置，最后通过`PostMessageA`触发执行。**

**16. 动态调试过程中，将内存中的shellcode导出为`shellcode_inject.bin`文件，并以64位模式在IDA中进行分析。**

**17. 新shellcode结构与之前类似，主要关注其具体行为：从特定路径读取先前保存的样本1和样本2的数据，解码头部前0x400字节后再重新写回文件。**

**18. 此外还涉及注册表自启动项设置、重命名黑白文件确保白文件执行后能够加载恶意DLL等操作。**

**19. 最终调用`CreateProcessA`运行`MpCmdRun.exe`来加载恶意DLL并执行无阶段beacon shellcode上线至控制服务器。至此，钓鱼木马的整个流程分析完毕。**

**20. 为了娱乐一下，给原作者的DLL做了一些改动，比如将加密密钥改为"ikun0x00"，修复仅使用前7个字节解码的问题，以及更改loader读取文件的路径为`C:\ProgramData\i.kun`。**

**21. 使用新算法及密钥对`beacon.bin`进行编码后存放到指定位置，双击`MpCmdRun.exe`测试成功上线情况。**

**22. 远程HTTP文件服务器地址为`http://112.74.109.76:5559/`。相关IOC如下：**
- **C2腾讯云API地址:** `https://service-baw5g4iz-1309608249.bj.apigw.tencentcs.com`
- **SHA256哈希值:**
  - 样本1: `abf4a58e2410c9f2ff44b46d6b0fd4c0ef1c87cd2f92b54110b48c6bac58bdd7`
  - 样本2: `4b911039f73805932ee8b71e0995e7abd67fb19032a04a25f4bb40f83cbc44a8`
  - 样本3: `40df318615a24046c0a20e96b728db4dfc000b126e8cf2f186fcf61cadd5dcf0`
  - 钓鱼木马.exe: `4de7883c5527dab617a70af7d76bc34d1f73ebfe50bf29c40f883ec8db3f2b32`

**加入社区交流更多技术细节！**