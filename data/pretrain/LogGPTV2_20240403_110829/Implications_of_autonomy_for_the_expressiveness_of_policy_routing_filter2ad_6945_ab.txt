An AS may always choose the empty path,
, which is equiv-
alent to total disconnection from the destination node 0. Thus,
. Furthermore, we assume that
we have
every AS strictly prefers connectivity to disconnectivity, so that
for all and
for all
.
All paths may not be available to node , due to both topo-
logical constraints and ﬁltering by other nodes. We will use
to denote the set of paths actually available for use
by node . The empty path is always available; i.e.,
.
A routing system is speciﬁed by the rankings of the individual
nodes, together with the paths available to the individual nodes.
Observe that we have decoupled the “routing policy” of each
AS into two components: the rankings
of AS over route
advertisements received; and a determination of which paths are
ﬁltered from other ASes. The ﬁltering decisions of all nodes,
together with physical constraints on the network, yield the sets
. We thus have the following formal deﬁnition of a
routing system.
Deﬁnition 3 (Routing System): A routing system is a tuple
, where node
has ranking
, and
over the set
is the set of paths available to node .
A routing system speciﬁes the input to any interdomain
routing protocol we might consider. Given this input, the pro-
tocol should converge to a “routing tree”: that is, an assignment
of a path to each AS, such that the routes taken together form a
tree rooted at 0. To formalize this notion, we must deﬁne path
assignments and consistent paths.
Deﬁnition 4 (Path Assignment): A path assignment for the
is a vector of
routing system
paths
such that, for all
,
.
is the ﬁrst node traversed on
Thus, a path assignment is an assignment of a feasible path to
each node , where feasibility is determined by the set of paths
. Even though each node has a path assigned, these paths may
,
is a path
may not be the same as the
; in fact, may
. For example, a node
may experience a failure, causing the
has heard such a
not be consistent: node may be assigned a path
where
from to 0. However, the path
path
not even be in the set of feasible paths
or link along the path
routing protocol to withdraw the path; if
withdrawal but
assigned to in the path assignment
has not, then it is possible that
, and where
Deﬁnition 5 (Consistent Path): Given a path assignment
,
if one of the following
a path
holds:
for node is consistent with
; or
; or
1)
2)
3)
Deﬁnition 6 (Consistent Path Assignment): A consis-
, for some
.
tent path assignment for the routing system
such that for all
is a path assignment vector
.
is consistent with
,
A routing protocol where packets are forwarded based solely
on destination should ultimately assign paths that are consistent
with each other.
B. Stability and Safety
Informally, a path assignment is stable if it is consistent, and
no node has a more preferred consistent path available.
Deﬁnition 7 (Stable Path Assignment): Given a routing
, and a consistent path
is stable if for all nodes , and
, we say that
system
assignment
all other paths
that are consistent with
,
.
Deﬁnition 8 (Stable Routing System): The routing system
is stable if there exists at least
one stable path assignment
.
The stability of a routing system does not indicate whether
a routing protocol will converge regardless of the initial path
assignment. The safety property, which states that a protocol
eventually converges, regardless of the initial path assignment
and ordering of the routing messages, captures this notion.
In deﬁning safety, we will consider a simpliﬁed abstraction
of BGP. We model the process by which nodes receive route
advertisements from other nodes and subsequently update their
own route decisions. We will consider a protocol dynamic where
at each time step only a single AS is activated; when activated,
an AS immediately processes all pending incoming route ad-
vertisements, and then makes a route decision. Formally, this
model will translate into a path assignment sequence where ex-
actly one node (the “activated” node) changes its route at any
given time step.
A routing system is safe if no oscillation occurs regardless of
the order in which nodes are activated.
Deﬁnition 9 (Fair Activation Sequence): The sequence
is a fair activation sequence if each node
appears inﬁnitely often in the sequence.
This deﬁnition of fair activation sequence is similar to that
presented by Gao and Rexford [9], except that in our deﬁnition
we only activate one node at a time. For our paper, this distinc-
tion is minor: we can interpret the Gao and Rexford dynamics
as a model where outstanding routing messages may be in ﬂight
when a particular node is activated.
We now deﬁne our simpliﬁed model of the routing protocol
dynamics: that is, starting from an initial path assignment
,
what is the resulting observed sequence of path assignments
? To formalize the dynamics of our model, we
, and given a fair activation sequence of nodes
1270
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 15, NO. 6, DECEMBER 2007
known as stability under ﬁltering and safety under ﬁltering. In-
formally, a routing system is stable (respectively, safe) under
ﬁltering if, under any choices of ﬁlters made by the ASes, the
resulting routing system is always stable (respectively, safe).
Deﬁnition 11 (Stable Under Filtering): The routing system
is stable under ﬁltering if, for
, the
for
all choices of available paths
routing system
is stable.
Fig. 3. The routing protocol dynamics, given an activation sequence i ; i ; . . ..
The process starts from an initial path assignment PPP .
consider an abstraction of the BGP decision process described
in Fig. 3. At each time , a node
is activated, and chooses its
most preferred available path consistent with the path assign-
. All other nodes’ paths remain unchanged. It is clear
ment
that this decision process yields a sequence of path assignments
. Note that this model assumes a very speciﬁc timing
of message delivery and processing at the nodes; we discuss
this issue further in Section V-A, where we compare our model
to the dynamics of the Simple Path Vector Protocol (SPVP)
model [14].
, a node
After any given activation step , the overall path assignment
may not be consistent. Inconsistencies reﬂect the fact that a
node only updates its path assignment in response to the receipt
is using a path
of a route advertisement. If, at time
that has since changed paths,
that traverses some other node
then node would obliviously continue to use (and advertise)
that inconsistent path until it receives a routing update that re-
ﬂects that the path through has disappeared or changed. When
, node would discover that the path
activated, say, at time
and would then select its
it was using was inconsistent with
highest-ranked path that was consistent with
. The activation
corresponds to that node receiving all
of a node at some time
available routing information in the system up to that time.
With the deﬁnition of our protocol dynamics in hand, we can
deﬁne protocol safety. Given a routing system and an activation
sequence, we say that the system has converged if, after some
ﬁnite time, the path assignment remains invariant for all future
time. A protocol is safe if it converges to a stable path assign-
ment, regardless of the initial path assignment and fair activation
sequence.
Deﬁnition 10 (Safety): A routing system
is safe if, for any initial path assignment
, there exists a ﬁnite
and
such
fair activation sequence
that
for all
.
Because the activation sequences are fair in the preceding def-
, then the resulting
inition, if a routing system converges to
path assignment to which the system converges must be both
consistent and stable. If not, at least one node would change its
path assignment eventually.
C. Filtering
We are interested in the stability and safety of systems that
result when nodes are allowed to ﬁlter routes from other nodes.
We thus require conditions stronger than stability and safety,
Deﬁnition 12 (Safe Under Filtering): The routing system
is safe under ﬁltering if, for all
, the
for
choices of available paths
routing system
is safe.
We interpret these deﬁnitions as follows: The set of available
denotes the set of paths that are physically possible
paths
to use, given the current network topology. Once all
for node
gives the set of paths
nodes have chosen their route ﬁlters,
in route advertisements. Be-
that can ever be used by node
cause we allow arbitrary choice of ﬁlters, the resulting routing
system should be stable and safe regardless of the choices of
that are made.
IV. RANKING CLASSES AND SAFETY
In this section, we study two natural ranking classes under
which ASes retain autonomy in setting rankings over paths.
First, in Section IV-A, we study the rankings where each AS is
allowed to rank paths solely based on the immediate next-hop
AS, called “next-hop rankings”. We show that 1) there are
routing systems where each node has only a next-hop ranking
that are not safe, and 2) even though all routing systems where
nodes have next-hop rankings are stable, there exist some
routing systems of this form that are not stable under ﬁltering.
In Section IV-B, we study the properties of routing systems
where each node is allowed to choose a weight for all its out-
going links, and rankings are derived from a “total” weight asso-
ciated to each path. The total weight of a path is deﬁned as the
weight of the ﬁrst link on that path, plus a discounted sum of
the weights of all remaining links on that path. We show that if
the discount factor is anything other than 1 (which corresponds
to shortest path routing), then there exist weight conﬁgurations
that yield a routing system that is not safe.
A. Next-Hop Rankings
One natural set of rankings for a routing system is one where
each AS can express rankings over paths solely based on the
next-hop AS in the path. Such a class of rankings makes sense
because an AS establishes bilateral contracts with its immediate
neighbors and, as such, will most often wish to conﬁgure its
rankings based on the immediate next-hop AS en route to the
destination. For example, an AS will typically prefer sending
trafﬁc via routes through its neighboring customer ASes over
other ASes, since those customer ASes are paying based on
trafﬁc volume. We formally deﬁne next-hop rankings as follows:
is a
distinct, we
Deﬁnition 13 (Next-Hop Ranking): Given
with
next-hop ranking if, for all nodes
have
,
(1)
FEAMSTER et al.: IMPLICATIONS OF AUTONOMY FOR THE EXPRESSIVENESS OF POLICY ROUTING
1271
Fig. 4. Next-hop rankings are not safe in this routing system. AS 1 prefers all
paths through AS 3 over the direct path to the destination 0 (with ties broken
deterministically) and prefers the direct path over all paths through AS 2. Sim-
ilarly, AS 3 prefers all paths via AS 2, and so forth. (a) Routing system. (b)
Activation sequence.
for all
.) Thus,
. (Here we interpret
, and
ranks paths based only on the ﬁrst hop of
each path.
Such a restriction on policy would still be sufﬁciently rich to
achieve most trafﬁc engineering goals, since most policies are
based on the immediate next-hop AS [4]. Additionally, this class
of rankings is expressive enough for most current policy goals,
because most current routing policies are dictated according to
the AS’s business relationship with its immediate neighbor. In
this section, we show that while systems with next-hop rankings
are generally stable, there exist examples that are unsafe, as well
as systems that are unstable under ﬁltering.
In the following proposition, we consider routing systems
with next-hop rankings, provided that no ﬁltering is employed.
The proof is straightforward, using a construction due to Feigen-
baum et al. [7].
Proposition 1: Suppose
routing system such that
is a
is a next-hop ranking for each , and
for all
. Then there exists a stable path assignment
for this routing system.
We now show that
for all
there may exist
, where
, such that even though the system
is stable, the ﬁltered system
is unstable. That is, there exist
routing systems with next-hop rankings for which a stable path
assignment exists, but introducing ﬁltering can yield a system
where no stable path assignment exists.
Observation 1: A routing system where each node has only
a next-hop ranking may not be safe (even without ﬁltering).
Example 3: Consider Fig. 4. In this example, each AS ranks
every one of its neighboring ASes. For example, AS 1 prefers
all paths that traverse AS 3 as the immediate next hop over all
paths that traverse AS 0 as the immediate next hop, regardless of
the number of ASes each path traverses; similarly, AS 1 prefers
paths that traverse AS 0 as the immediate next hop over paths
that traverse AS 2. Each AS readvertises its best path to the
destination to all of its neighbors (i.e., the system has no ﬁl-
tering). Now consider the activation sequence in Fig. 4(b); if in-
ﬁnitely repeated, this activation sequence would be fair, and the
routing system would oscillate forever. Thus, the routing system
is not safe.
This system is not safe, but it is stable: for example, the path
assignment (10, 210, 3210) is stable. Nodes 2 and 3 are using
paths through their most preferred nodes. Node 1’s most pre-
ferred node, node 3, is using a path that already goes through
Fig. 5. This routing system is stable without ﬁltering but unstable under ﬁl-
tering. The ﬁgure shows a routing system with next-hop rankings and ﬁltering
that is equivalent to the unstable routing system with the rankings over paths
shown in Fig. 1.
node 1, so node 1 is also using its most preferred consistent
path. As every node is using its most preferred consistent path,
no node will change paths when activated, so the path assign-
ment is stable.
A routing system where each node has a next-hop ranking
may not be safe, but Feigenbaum et al. showed that there is
always guaranteed to be at least one stable path assignment
for such routing systems [7]. However, allowing nodes to ﬁlter
paths from each other can create routing systems for which there
is no stable path assignment.
Observation 2: There exist routing systems with next-hop
rankings for which a stable path assignment exists, but intro-
ducing ﬁltering can yield a system where no stable path assign-
ment exists.
Example 4: Consider Fig. 5. As before, each AS ranks every
one of its neighboring ASes. Additionally, each AS may also de-
clare arbitrary ﬁltering policies. In this example, each AS (other
than the destination) does not readvertise any indirect path to
the destination. For example, AS 1 does not advertise the path
130 to AS 2, and thus the path 2130 is not available to AS 2.
, and
Formally, we deﬁne
,
.
The resulting routing system is equivalent to the system in
Fig. 1, once the ﬁltered paths are removed from each node’s
ranking. Thus, the ﬁltered routing system is unstable by the
same reasoning as that from the example shown in Fig. 1: for
any path assignment in this routing system, at least one AS will
have a higher ranked consistent path (and, hence, has an incen-
tive to deviate from the path assignment).
The example demonstrates the complex interaction between
ﬁltering and rankings—a class of rankings that guarantees sta-
bility without ﬁltering can be unstable under certain ﬁltering
conditions.
B. Edge Weight-Based Rankings
There exists at least one routing system that preserves au-
tonomy and yet ensures safety under ﬁltering: if each provider
is allowed to choose edge weights for its outgoing links, and
each provider ranks paths based on the sum of edge weights,
the resulting “shortest paths” routing system is guaranteed to
be safe [14]. Since this result holds for any
, any
routing system built in this way is guaranteed to be safe under
ﬁltering. In this section, we will formulate a generalized model