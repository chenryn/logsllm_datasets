**附件下载**
1\. F130233: [test.tar.gz](https://hackerone-attachments.s3.amazonaws.com/production/000/130/233/1a62bf87c15a273b1ff8f5a5b257169a8e44e88e/test.tar.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJFXIS7KJADBA4QQA%2F20161104%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20161104T033745Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=0d2f6533be8abaab0deb2e35019c1e59f81af476bc58e1909f1a4cb00cc023bb)
2\. F130234: [Screen_Shot_2016-10-25_at_20.55.36.png](https://hackerone-attachments.s3.amazonaws.com/production/000/130/234/3835c6918f985b21fee93e9f9c3401a399c0fd06/Screen_Shot_2016-10-25_at_20.55.36.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJFXIS7KJADBA4QQA%2F20161104%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20161104T033745Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=53c6698fbe58fc990fcde3fe88273fd8108b17ce6a9e0f8467391e112ce93365)
3\. F130235: [Screen_Shot_2016-10-25_at_19.28.51.png](https://hackerone-attachments.s3.amazonaws.com/production/000/130/235/eda5af808482da6f95d04416ba92d08c11f516d1/Screen_Shot_2016-10-25_at_19.28.51.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJFXIS7KJADBA4QQA%2F20161104%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20161104T033745Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=26d18a1be9a00c6123d2e32f1fee717fcdfabe0b1a2dcff68a59bc670673cd95)
**  
**
**漏洞修复情况**
下面给出的是我们所采用的漏洞修复代码，感兴趣的用户可以自己动手实现一下：
    diff --git a/lib/gitlab/import_export/file_importer.rb b/lib/gitlab/import_export/file_importer.rb
    index 113895b..ffd1711 100644
    --- a/lib/gitlab/import_export/file_importer.rb
    +++ b/lib/gitlab/import_export/file_importer.rb
    @@ -43,6 +43,14 @@ module Gitlab
             raise Projects::ImportService::Error.new("Unable to decompress #{@archive_file} into #{@shared.export_path}") unless result
    +        remove_symlinks!
    +      end
    +
    +      def remove_symlinks!
    +        Dir["#{@shared.export_path}/**/*"].each do |path|
    +          FileUtils.rm(path) if File.lstat(path).symlink?
    +        end
    +
             true
           end
         end
    diff --git a/lib/gitlab/import_export/project_tree_restorer.rb b/lib/gitlab/import_export/project_tree_restorer.rb
    index 7cdba88..c551321 100644
    --- a/lib/gitlab/import_export/project_tree_restorer.rb
    +++ b/lib/gitlab/import_export/project_tree_restorer.rb
    @@ -9,8 +9,14 @@ module Gitlab
           end
           def restore
    -        json = IO.read(@path)
    -        [@tree_hash](/tree_hash) = ActiveSupport::JSON.decode(json)
    +        begin
    +          json = IO.read(@path)
    +          [@tree_hash](/tree_hash) = ActiveSupport::JSON.decode(json)
    +        rescue => e
    +          Rails.logger.error("Import/Export error: #{e.message}")
    +          raise Gitlab::ImportExport::Error.new('Incorrect JSON format')
    +        end
    +
             [@project_members](/project_members) = [@tree_hash](/tree_hash).delete('project_members')
             ActiveRecord::Base.no_touching do
    diff --git a/lib/gitlab/import_export/version_checker.rb b/lib/gitlab/import_export/version_checker.rb
    index fc08082..bd3c3ee 100644
    --- a/lib/gitlab/import_export/version_checker.rb
    +++ b/lib/gitlab/import_export/version_checker.rb
    @@ -24,12 +24,19 @@ module Gitlab
           end
           def verify_version!(version)
    -        if Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)
    +        if different_version?(version)
               raise Gitlab::ImportExport::Error.new("Import version mismatch: Required #{Gitlab::ImportExport.version} but was #{version}")
             else
               true
             end
           end
    +
    +      def different_version?(version)
    +        Gem::Version.new(version) != Gem::Version.new(Gitlab::ImportExport.version)
    +      rescue => e
    +        Rails.logger.error("Import/Export error: #{e.message}")
    +        raise Gitlab::ImportExport::Error.new('Incorrect VERSION format')
    +      end
         end
       end
     end
我们已经发布了针对该漏洞的修复补丁和安全公告，感兴趣的用户可以访问并了解详情。地址：[https://about.gitlab.com/2016/11/02/cve-2016-9086-patches/](https://about.gitlab.com/2016/11/02/cve-2016-9086-patches/)
我们强烈建议使用了上述版本GitLab的用户尽快安装更新补丁。请注意，GitLab
8.9.x版本目前还没有可用的更新补丁。使用了8.9.0-8.9.11版本的用户虽然没有可用的更新补丁，但是可以通过下面给出的解决方案来缓解这个漏洞的影响。
**  
**
**漏洞缓解方案**
**禁用项目的导入/导出功能**
使用管理员账号登录GitLab，然后执行下列操作：
1\. 选择“Admin Area”；
2\. 点击“Settings”
3\. 在“Import Sources”面板中禁用“GitLab export”选项
4\. 点击“保存”
**验证操作是否成功** ：
1\. 使用浏览器以普通用户身份登录GitLab；
2\. 点击“Projects”；
3\. 点击“New Project”
4\. 输入项目名称；
5\. 确保界面中没有显示“GitLab export”选项