F
D
C
 0
 1
 10
 100
 1000
File Length (sec)
 10000  100000
 0
 0.01
 0.1
 1
 10
 100
 1000  10000
Playback Duration (sec)
 0
 0.01
 1
Playback Duration (sec)
 100
 10000
(a) On-demand audio ﬁle length
(b) On-demand audio playback duration
(c) Live audio playback duration
Figure 1: On-demand and live audio distributions in the home and business user workloads
Biz
Home
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
Biz
Home
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
Biz
Home
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
 0
 1
 10
 100
 1000
File Length (sec)
 10000  100000
 0
 0.01
 0.1
 1
 10
 100
 1000  10000
Playback Duration (sec)
 0
 0.01
 0.1
 1
 10
 100
 1000  10000
Playback Duration (sec)
(a) On-demand video ﬁle length
(b) On-demand video playback duration
(c) Live video playback duration
Figure 2: On-demand and live video distributions in the home and business user workloads
objects with longer ﬁle lengths. Speciﬁcally, for audio ob-
jects, as shown in Figure 1(a), more than 70% of sessions in
the business user workload request objects with a ﬁle length
between 200–400 seconds, the typical duration of a pop song;
in contrast, for home users, more than 50% of audio sessions
request ﬁles with a length around 30 seconds, most of which
are music preview samples.
Figure 1(b) and Figure 2(b) further compare user play-
back durations of on-demand audio/video sessions in the
home and business user workloads. As shown in Figure 1(b),
for more than half of on-demand audio sessions in the busi-
ness user workload, the user playback duration is about 200–
400 seconds, corresponding to the length of a typical pop
song as in Figure 1(a). Figures 1(c) and 2(c) show the play-
back duration of live audio/video sessions in the home and
business user workloads. From these ﬁgures, we can see that
for both live and on-demand audio/video sessions, the play-
back duration of business users is much longer than that of
home users (note that the x-axis is in log scale).
The above results indicate that business users tend to lis-
ten more audio on the Internet and tend to stick to the
media content being played longer than home users. How-
ever, looking into the URLs and the Referer headers of
RTSP commands in the trace, we found that the major-
ity of streaming media accessed by home users and business
users are both from news and entertainment sites. Thus, the
diﬀerent access pattern of business users is not due to the
accesses of business related media content, but rather due to
the working environments of business users—audio is more
preferred possibly because it attracts less attention when
they are working, and the long playback duration might be
because their business work prevents them from frequently
changing media programs.
Table 3: Traﬃc by diﬀerent hosting services
Business User
Home User
Vol. (GB)
13.82
126.24
11.41
95.33
Req.
27,896
54,136
12,188
26,939
Vol. (GB)
10.19
13.71
7.64
16.00
Req.
9,810
3,820
2,056
3,085
Hosting Content
Service
Third
Party
Self
Type
audio
video
audio
video
Hosting
3.2 Streaming trafﬁc by media hosting ser-
vices
In general, there are two approaches that a content
provider can use to deliver its streaming media. The ﬁrst
is that a content provider can host the streaming server it-
self. We call this self-hosting. The second is that a content
provider can ask help from a third party, such as a com-
mercial content delivery network (CDN) or media delivery
network (MDN), to avoid service management and hard-
ware/software investments. We call this third-party hosting.
For both self-hosting and third-party hosting, the portals
of streaming media are usually on the Web sites of their
content providers.
We identiﬁed service providers in our workloads by their
host names and IP addresses. The host names are extracted
from the URLs of media objects encoded in RTSP/MMS
packets. We have identiﬁed 24 third-party media services,
including 22 CDNs/MDNs and 2 media services hosted by
ISPs (we anonymize the company names due to customer
privacy concerns).
Table 3 shows the volume and number of requests of
streaming traﬃc served by third-party media services and
self-hosting media services in the home and business user
workloads, respectively. In the home user workload, third-
party media services serve 56.8% of the traﬃc and 67.7%
)
B
G
(
c
i
f
f
a
r
T
 100
 10
 1
 0.1
 0.01
 0.001
 1e-04
Biz
Home
 0
 5
 10
 15
Domain Rank
 20
 25
)
B
G
(
c
i
f
f
a
r
T
 100
 10
 1
 0.1
 0.01
 0.001
 1e-04
 1e-05
 1e-06
Home
 0
 40
 80
 120
Domain Rank
 160
 200
)
B
G
(
c
i
f
f
a
r
T
 10
 1
 0.1
 0.01
 0.001
 1e-04
 1e-05
 1e-06
Biz
 0
 10
 20
 30
 40
 50
 60
 70
Domain Rank
(a) Third-party media services
(b) Self-hosting media services in the
home user workload
(c) Self-hosting media services in the
business user workload
Figure 3: Service providers ranked by traﬃc volume
of the requests. In the business user workload, third-party
media services serve 50.3% of the traﬃc and 72.6% of the
requests. The percentages of audio traﬃc served by third-
party services are similar for home and business users, but
business users request more video from self-hosting media
services. Our further investigation ﬁnds that a substantial
amount of such video traﬃc comes from a news site and a
sports site outside United States, which might be due to the
foreign employees in these business companies. In general,
more than half streaming traﬃc is served by third-party
hosting services in both workloads.
Figure 3(a) and Figures 3(b), 3(c) further show the rank
of traﬃc volume served by diﬀerent service providers in the
home and business user workloads, for third-party hosting
services and self-hosting services, respectively. Most stream-
ing traﬃc is served by the top ﬁve CDNs/MDNs and the top
two self-hosting commercial sites (one video site and one
well-known search engine site).
4. PROTOCOL ROLLOVER AND USER
STARTUP LATENCY
Although traditionally UDP is the default transport pro-
tocol for streaming media data transmission, in practice,
UDP is often shielded at the client side. Therefore, today
streaming media data are often delivered over TCP or even
HTTP. Among the three options, generally UDP is tried ﬁrst
upon a client request. If UDP is not supported due to either
server side or client side reasons, TCP can be used instead.
If TCP is not supported either, HTTP will be used. Such
a procedure is called protocol rollover, which is conducted
automatically by the media player.
Due to the wide deployment of NAT routers/ﬁrewalls in
home user networks and small business networks, protocol
rollover plays an important role in the user perceived startup
latency and may have aﬀected the way that media is served
by content providers. In this section, we ﬁrst analyze the
impact of protocol rollover on the user perceived startup la-
tency, then investigate rollover avoidance in these streaming
media services.
4.1 Startup latency due to protocol rollover
Protocol rollover in RTSP works as follows (protocol
rollover in MMS is similar). Upon a client request, the me-
dia player sends a SETUP command with a Transport header,
specifying the transport protocol it prefers. If UDP is sup-
ported, the port numbers for receiving data and sending
feedback are also speciﬁed. Then in the Transport header
of the SETUP reply message, the streaming server returns the
protocol it selects. If it selects UDP, the port numbers for
sending data and receiving feedback are also returned.
If
the player requests UDP but the server does not support it,
the server responds with the protocol it supports (i.e., TCP)
directly, and the protocol switches without additional over-
head. However, if the server supports UDP but the player is
shielded by a NAT router/ﬁrewall, the incoming UDP traﬃc
may not be able to go through the router. After a timeout,
the player has to terminate the current RTSP connection
and sends a new RTSP request in a new TCP connection,
specifying TCP as the transport protocol in the SETUP com-
mand. As a result, such a negotiation procedure for protocol
rollover takes a non-trivial time.
Thus, the startup latency of a user session can be further
decomposed into three parts: (1) protocol rollover time is
the duration from the beginning of the ﬁrst RTSP/MMS re-
quest to the beginning of the last RTSP/MMS request in
the user session; (2) transport setup time is the duration
from the the beginning of the last RTSP/MMS request (or
the ﬁrst request if no protocol rollover) to the time when
the transport protocol setup succeeds; (3) startup buﬀer-
ing time is the time to ﬁll the play-out buﬀer of the media
player, starting from the transport setup success time to the
playback start time. In our workloads, we have found that
although most user sessions with protocol rollover try UDP
only once, some sessions may try UDP up to 3 times before
switching to TCP. As the negotiation process of protocol
rollover may take a non-trivial time, the protocol rollover
increases the startup latency a user perceives.
Assuming a ﬁve-second play-out buﬀer [1] is used, Fig-
ure 4(a) and Figure 4(b) show the distribution of startup
latency in Windows and RealNetworks media services, re-
spectively, for RTSP sessions with protocol rollover in the
home user workload (the distribution for business user work-
load is similar). In Windows media services, more than 22%
of the streaming sessions have a rollover time longer than
5 seconds, in addition to the normal startup latency due
to the transport setup and the initial buﬀering. Figure 4(b)
shows that RealNetworks media services have an even longer
rollover time—more than 67% of the streaming sessions have
a rollover time longer than 5 seconds. We also observe that
in general the Windows Media service has a much shorter
buﬀering time than the RealNetworks Media service. This
is probably due to the higher buﬀering rate of Windows me-
dia streaming (see Fast Start in Section 5), since the object
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
 0
 0
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
 0
 0
Rollover
Rollover+setup
Rollover+setup+buffer
 5
 10
 15
 20
 25
 30
Time (sec)
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
 0
 0
Rollover
Rollover+setup
Rollover+setup+buffer
 5
 10
 15
 20
 25
 30
Time (sec)
Rollover+setup (session w/ rollover)
Setup (session w/o rollover)
 5
 10
 15
 20
 25
 30
Time (sec)
(a) Startup time of rollover sessions in
Windows media services
(b) Startup time of rollover sessions in
RealNetworks media services
(c) Startup comparison of sessions with
and without rollover in Windows media
services
Figure 4: Protocol rollover increases startup latency of streaming sessions
encoding rates of Windows and RealNetworks media in our
workloads are comparable. Figure 4(c) further compares
the delay from the session beginning time to the transport
setup completion time for sessions with and without pro-
tocol rollover in Windows media services in the home user
workload. As shown in the ﬁgure, about 37% of the sessions
with protocol rollover have a delay longer than 5 seconds.
In contrast, only about 13% of the sessions without protocol
rollover have a delay longer than 5 seconds.
4.2 Protocol selection and rollover avoidance
In most client side media players, although the transport
protocol of streaming media can be speciﬁed by a user man-
ually, the default protocol is usually UDP. In Section 3, we
have also found that the majority of streaming traﬃc in our
workloads is delivered over TCP. Thus, it is reasonable to
expect that a large portion of the user sessions experience
protocol rollover.
However, in the home user workload, we found that there
are only about 7.37% of streaming sessions trying UDP ﬁrst
and then switching to TCP. In the business user workload,
only about 7.95% streaming sessions switch from UDP to
TCP. These results imply that TCP is directly used with-
out protocol rollover in most streaming sessions, despite the
default protocol setting in the player. We analyze this phe-
nomenon as follows.
The Windows streaming service allows the speciﬁcation
of the transport protocol in the URL modiﬁer at either the
client side or the server side.
In Windows media stream-
ing, the URL passed to a media player is either input by a