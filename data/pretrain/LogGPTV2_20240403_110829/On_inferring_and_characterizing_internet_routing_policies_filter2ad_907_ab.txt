99.99
99.994
2578
513
6762
559
12859
8262
6539
99.9982
100
100
100
100
100
100
with preference 1. In a real router conﬁguration the prefer-
ence can be done by setting a local preference 2.
However, some ASs shown in IRR do not appear in Ore-
gon BGP table. Hence, we cannot infer their AS relation-
ships. Therefore, we only consider those ASs which have
more than 50 neighbors and most of their AS relationships
can be inferred. Finally, we infer the typical local preference
for 62 ASs from IRR, shown in Table 3. Those ASs include
5 Tier-1 ASs, and others are Tier-2 or Tier-3 ASs. Even
though those ASs (15 ASs from BGP tables, 62 ASs from
IRR) are a small fraction of ASs in the Internet, we believe
that the chosen ASs are representative for studying import
policies in the Internet. Therefore, we conclude that local
preference value for a customer is typically higher than for
a provider and peer, and that local preference for a peer is
higher than that for a provider.
4.2 Consistency of Local Preference with Next
Hop ASs
As mentioned above, operators may set local preference
value on network preﬁx or next hop AS. It is easy for network
operators to maintain local preference conﬁguration based
on next hop AS. This motivates us to study the consistency
of local preference values with next hop ASs. We use 14 ASs
in our dataset to study the consistency. Fig. 2(a) shows that
most of the ASs assign a unique local preference value for
each next hop AS.
All routing tables that we use are collected from only one
or several routers at each AS. In order to understand if local
preference values are consistent within an AS, we use AT&T
routing tables (Jan. 4, 2002) combined from 30 backbone
routers to study the consistency. Fig. 2(b) shows that most
local preference values assigned in AT&T are based on its
next hop ASs. ASs tend to assign local preference values
based on next hop AS instead of on preﬁx.
4.3 Potential Error Introduced by Inferred AS
Relationships
Since studying routing policies relies on AS relationships,
a large number of ASs with incorrectly inferred AS rela-
tionships will aﬀect our conclusion about import policies.
We use BGP community to verify some inferred AS rela-
tionships. One of the most common usages of community
values is to tag the routes received from speciﬁc neighbor
ASs. In this case, an AS deﬁnes diﬀerent community values
Policy actions in RPSL can assign a preference to a route.
This example states that all routes are accepted from AS2
2Preference is opposite to local preference in that the smaller
values are preferred over larger values.
100
80
60
40
20
s
e
c
n
e
r
e
f
e
r
p
l
a
c
o
l
e
s
o
h
w
s
e
x
i
f
e
r
p
f
o
e
g
a
t
n
e
c
r
e
P
S
A
p
o
h
t
x
e
n
n
o
d
e
s
a
b
e
r
a
100
80
60
40
20
s
e
c
n
e
r
e
f
e
r
p
l
a
c
o
l
e
s
o
h
w
s
e
x
i
f
e
r
p
f
o
e
g
a
t
n
e
c
r
e
P
S
A
p
o
h
t
x
e
n
n
o
d
e
s
a
b
e
r
a
0
12359
577 5511 6667 2578
1
6762 3549 7474 513 7018
AS Number
559
8262
6539
0
1
5
10
15
Routers
20
25
30
(a) 14 ASs
(b) AT&T
Figure 2: Consistency of local preference with next hop ASs.
for its customers, peers, and transit providers. When bor-
der routers of the AS receive a route from its neighbors, they
tag the route with a community indicating the relationship
with those neighboring ASs. Details about this method are
described in the Appendix.
Table 4 shows that the AS relationships between 9 ASs
and their neighboring ASs are veriﬁed. As shown in the
table, for those 9 ASs, most of their AS relationships are
correctly inferred. Therefore, the potential error introduced
by inferred AS relationship is so small that it will not aﬀect
our results.
5.
INFERRING EXPORT POLICIES
How to announce preﬁxes to a customer, peer, or provider
is an important component of export policies. For a provider,
it has to announce all of its preﬁxes, or default routes to its
customers depending on their agreements. However, a cus-
tomer may advertise its preﬁxes to either all of its providers,
or a subset of providers. In the latter case, customers can
control their inbound traﬃc on a heavy traﬃc link by switch-
ing announcements of some preﬁxes away from the link.
Peers also have control over their preﬁx announcements to
other peers. Here, we focus on two problems in export poli-
cies:
1. Export to provider: strategies a customer uses to ex-
port preﬁxes to its provider.
2. Export to peer: strategies a peer uses to export pre-
ﬁxes to its peers.
5.1 Export to Provider
In this section, we ﬁrst describe an algorithm to infer ex-
port policies which customers use to advertise their preﬁxes
to direct or indirect providers. Then we characterize those
export policies.
5.1.1 Algorithm for Inferring Export Policies to Providers
The direct way to infer a customer’s export policies is to
use the BGP table from its provider. After searching pre-
ﬁxes originated by the customer in the table, if those preﬁxes
have customer routes, which we deﬁned above, we know that
  D
B
E
C
p
p
A
Provider−to−customer
Peer−to−peer
Figure 3: The selective announcement routing poli-
cies employed by its customers can be observed
at provider D. Customer A announces preﬁx p to
provider C but not to B. In the BGP table of
provider D, preﬁx p is received from its peer E.
the customer exports those preﬁxes to the provider. On the
contrary, if those preﬁxes do not exist or do not have cus-
tomer routes, it implies that the customer does not export
them to the provider directly.
Therefore, we infer the export policies for customers from
the viewpoint of a provider. As we described above, a cus-
tomer can export preﬁxes to all of its providers or a subset
of providers. For a given provider, if it receives a preﬁx
originated by a customer via a peer path instead of a cus-
tomer path, we call this preﬁx as a selective announced preﬁx
(SA preﬁx) with respect to the provider. Here, we use our
analysis result that customer’s selective announcement poli-
cies give rise to SA preﬁxes. We will discuss the causes of
SA preﬁxes in Section 5.1.5. As a result, the selective an-
nouncement used by customers can be observed from the
viewpoint of a provider. For example, in Fig. 3, customer A
exports preﬁx p to a selected subset of providers, provider
C. In D’s BGP routing table, preﬁx p is received from D’s
peer, E. No customer route to p is received from customer
B.
Note that from the point of view of a provider, the best
routes to customers’ preﬁxes, instead of all routes, are suf-
ﬁcient to infer the selective announcement policies. From
Section 4.1, we know that a customer route is typically pre-
Table 3: Typical local preference assignment for 62
ASs (ASs are sorted according to their AS degree in
non-decreasing order) which are selected from IRR.
It shows the prevalence of typical local preference.
AS
number
12635
15498
4004
6863
12322
12779
12626
2518
8650
20646
5539
5615
12573
1140
6873
12781
8365
852
8527
5551
3313
12731
15435
3216
2118
1103
21392
9013
5571
3344
5503
% of typical
local preference
AS
number
% of typical
local preference
100
100
99.86
99.90
99.92
100
99.94
100
91.66
100
89
100
96
98
100
98
100
100
100
100
97.8
97.8
98.9
100
88.6
88.9
100
96.9
98
90.4
98
5611
8608
12306
5400
3215
3300
1740
8341
293
6705
8434
12390
5607
5427
4000
1901
15290
3320
13127
9191
5466
5597
6453
12868
5594
13129
6830
1299
3292
4513
3561
98
100
93.5
100
100
94.7
100
100
83.2
80
100
98
95
99
100
97
100
83
93
100
94
98
100
99
96
99.23
100
99.1
86
100
99.46
ferred over other routes.
In a provider’s BGP table, if a
customer route to a preﬁx exists, the route is the best route
as well. Otherwise, if a customer route does not exist, the
best routes are peer routes or provider routes.
The ﬁrst step of the algorithm for inferring export poli-
cies to provider is to ﬁnd if an AS is a customer of a given
provider. This can be solved by using Depth First Search
(DFS) algorithm in a directed graph to ﬁnd a customer path
from the provider to the AS. If there is a customer path, the
AS is a customer of the provider. Not all paths found by
DFS can be customer paths, however, those paths should
obey export rules described in Section 2.2. That is, from
the direction of provider down to customer, each pair of ASs
in the path should have provider-to-customer relationship.
In an annotated AS graph G = (V, E), we use modiﬁed
DFS which satisﬁes path relationship constrains to ﬁnd a
customer path between a pair of ASs.
The next step is to investigate if the best routes to the
customer’s preﬁxes are peer or provider routes. If the best
routes are peer or provider routes, those preﬁxes are not
exported from the customer to the provider, or some inter-
mediate customers who receive those preﬁxes do not export
them.
Fig. 4 shows the algorithm in detail. Given an AS, we use
this algorithm repeatedly for all of the AS’s customers to
infer those customers’ export policies.
Table 4: The AS relationships between 9 ASs listed
below and their neighbors are veriﬁed as shown in
the Appendix.
AS
number
AS1
AS577