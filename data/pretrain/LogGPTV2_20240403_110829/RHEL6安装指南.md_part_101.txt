:::
[]{#ch-partitions-x86.html#idm139817181377872 .indexterm}
::: para
在这种情况下，可能会有一个或多个不再使用的分区。您可能之前添加过其他操作系统和分区，但已不再使用了。[图 A.9
"带有未使用分区的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unused-partition-x86){.xref}
演示了这种情况。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-unused-partition-x86}
::: figure-contents
::: mediaobject
![带有未使用分区的磁盘驱动器](images/partitions/unused-partition.png){width="444"}
:::
:::
**图 A.9. 带有未使用分区的磁盘驱动器**
:::
::: para
在 [图 A.9
"带有未使用分区的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unused-partition-x86){.xref}
中，*1* 代表未使用的分区，*2* 代表为 Linux 重新分配的未使用过的分区。
:::
::: para
如果处于这种情况，可以将该空间分配给未使用的分区。首先必须删除该分区，然后在它的位置上创建适当的
Linux 分区。可以删除未使用分区，并在安装过程中手动创建新分区。
:::
:::
::: section
::: titlepage
### [⁠]{#ch-partitions-x86.html#s3-partitions-active-part-x86}A.1.5.3. 使用激活分区中的剩余空间 {.title}
:::
[]{#ch-partitions-x86.html#idm139817196186224 .indexterm}
::: para
这是最常见的情况。遗憾的是这也是最难控制的方法。主要问题是即使有足够的剩余空间，不久它就可被分配给某个已经在使用中的分区。如果购买的计算机有预装软件，该硬盘应该会有一个拥有操作系统和数据的大分区。
:::
::: para
除了在系统中添加新硬盘外，还有两个选择：
:::
::: variablelist
[ []{#ch-partitions-x86.html#idm139817210610960 .indexterm} [*破坏性分区*]{.emphasis}]{.term}
:   ::: para
    通常，删除单一大分区并创建几个较小的分区。如您所知，原始分区中的所有数据都会被破坏。就是说完全备份是必要的。为安全起见，生成两个备份，使用验证（如果您的备份软件可进行验证），并在删除分区[*前*]{.emphasis}尝试从备份中读取数据。
    :::
    ::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **警告**
    :::
    ::: admonition
    ::: para
    如果该分区上装有某类操作系统，该操作系统也需要被重新安装。需要注意的是，那些带有预装操作系统售出的计算机可能没有包括重装该系统所需的光盘介质。最好在破坏原有分区及原有操作系统[*之前*]{.emphasis}意识到这一点。
    :::
    :::
    :::
    ::: para
    在为当前操作系统创建较小分区后，可以重新安装任何软件，恢复数据并启动
    Red Hat Enterprise Linux 安装。[图 A.10
    "破坏性地对磁盘驱动器重新分区"](#ch-partitions-x86.html#fig-partitions-dstrct-reprt-x86){.xref}
    演示了这种情况。
    :::
    ::: figure
    [⁠]{#ch-partitions-x86.html#fig-partitions-dstrct-reprt-x86}
    ::: figure-contents
    ::: mediaobject
    ![破坏性地对磁盘驱动器重新分区](images/partitions/dstrct-reprt.png){width="444"}
    :::
    :::
    **图 A.10. 破坏性地对磁盘驱动器重新分区**
    :::
    ::: para
    在 [图 A.10
    "破坏性地对磁盘驱动器重新分区"](#ch-partitions-x86.html#fig-partitions-dstrct-reprt-x86){.xref}
    中，*1* 代表之前的情况，*2* 代表之后的情况。
    :::
    ::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **警告**
    :::
    ::: admonition
    ::: para
    如 [图 A.10
    "破坏性地对磁盘驱动器重新分区"](#ch-partitions-x86.html#fig-partitions-dstrct-reprt-x86){.xref}
    所示，在最初的分区中的数据都因没有正确备份而丢失！
    :::
    :::
    :::
[[]{#ch-partitions-x86.html#idm139817192345264 .indexterm} [*非破坏性分区*]{.emphasis}]{.term}
:   ::: para
    在此要运行一个看似不可能的程序：它会将大分区变小，却不会丢失该分区中的原有文件。许多人都发现这个办法既可靠又简单可行。但是哪一个软件可以帮助您达到这一目的呢？在软件市场上有好几种磁盘管理软件。请研究一下找到适合您的软件。
    :::
    ::: para
    非破坏性分区过程是非常直捷了当的，它包括以下几个步骤：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        压缩和备份现有数据
        :::
    -   ::: para
        重新划分现存分区大小
        :::
    -   ::: para
        创建新分区
        :::
    :::
:::
::: para
接下来，我们将详细说明每一步骤。
:::
::: section
::: titlepage
#### [⁠]{#ch-partitions-x86.html#s4-partitions-compress-data-x86}A.1.5.3.1. 压缩现有数据 {.title}
:::
::: para
如 [图 A.11
"磁盘驱动器被压缩"](#ch-partitions-x86.html#fig-partitions-compression-x86){.xref}
所示，第一步是压缩现有分区中的数据。这样做的原因是可以重新安排数据，以便最大限度使用分区\"末端\"的可用空间。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-compression-x86}
::: figure-contents
::: mediaobject
![磁盘驱动器被压缩](images/partitions/compression.png){width="444"}
:::
:::
**图 A.11. 磁盘驱动器被压缩**
:::
::: para
在 [图 A.11
"磁盘驱动器被压缩"](#ch-partitions-x86.html#fig-partitions-compression-x86){.xref}
中，*1* 代表之前的情况，*2* 代表之后的情况。
:::
::: para
这一步骤至关重要。不执行这一步，您的数据所在位置可能会阻止分区被重新划分为想要的大小。还要注意的是，由于某种原因，某些数据不能被移动。如果情况如此（这会严重地限制您的新分区的大小），可能会被迫在您的磁盘中进行破坏性重新分区。
:::
:::
::: section
::: titlepage
#### [⁠]{#ch-partitions-x86.html#s4-partitions-resize-x86}A.1.5.3.2. 重新划分现存分区大小 {.title}
:::
::: para
[图 A.12
"分区大小被重新划分的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-part-resize-x86){.xref}
演示了重新划分区大小的实际过程。这一过程的结果要依您所使用的软件而定。多数情况下，新空出的闲置空间被用来创建一个与原有分区同类的未格式化的分区。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-part-resize-x86}
::: figure-contents
::: mediaobject
![分区大小被重新划分的磁盘驱动器](images/partitions/part-resize.png){width="444"}
:::
:::
**图 A.12. 分区大小被重新划分的磁盘驱动器**
:::
::: para
在 [图 A.12
"分区大小被重新划分的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-part-resize-x86){.xref}
中，*1* 代表之前的情况，*2* 代表之后的情况。
:::
::: para
理解所使用的重新分区软件对新空出的空间的作业是很重要的，只有这样才能正确地采取相应措施。在我们的示范中，最佳措施是删除新建的
DOS 分区，然后创建恰当的 Linux 分区。
:::
:::
::: section
::: titlepage
#### [⁠]{#ch-partitions-x86.html#s4-partitions-create-new-x86}A.1.5.3.3. 创建新分区 {.title}
:::
::: para
如前面的步骤所示，不一定需要创建新分区。但除非用来调整大小的软件是 Linux
软件，否则很可能必须删除在调整大小过程中创建的分区。[图 A.13
"带有最终分区分配的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-nondestruct-fin-x86){.xref}
中演示了这种情况。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-nondestruct-fin-x86}
::: figure-contents
::: mediaobject
![带有最终分区分配的磁盘驱动器](images/partitions/nondestruct-fin.png){width="444"}
:::
:::
**图 A.13. 带有最终分区分配的磁盘驱动器**
:::
::: para
在 [图 A.13
"带有最终分区分配的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-nondestruct-fin-x86){.xref}
中，*1* 代表之前的情况，*2* 代表之后的情况。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
下列信息只用于使用 x86 构架的计算机。
:::
:::
:::
[]{#ch-partitions-x86.html#idm139817118521488 .indexterm}
::: para
为了方便用户，我们提供了 `parted`{.command}
工具。它是一个可免费获得的重新划分区大小的程序。
:::
::: para
如果决定使用 `parted`{.command}
重新为硬盘驱动器分区，则必须熟悉磁盘贮存区，并备份计算机中的数据。这一点至关重要。应该为计算机中重要的数据做两个备份。这些备份应该存储在可移介质中（如磁盘、光盘或磁带），而且应该在继续操作前确定可读取这些数据。
:::
::: para
如果决定要使用 `parted`{.command}，请留意在 `parted`{.command}
运行后，会有[*两个*]{.emphasis}分区：一个是重新划分大小的分区，另一个是
`parted`{.command}
用新空出的空间创建的新分区。如果目的是使用新空出的空间安装 Red Hat
Enterprise
Linux，则应该删除新分区。既可以使用在目前操作系统中的分区工具删除它，也可以在安装过程中设置分区时删除它。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#s2-partitions-part-name-x86}A.1.6. 分区命名方案 {.title}
:::
[]{#ch-partitions-x86.html#idm139817168478320
.indexterm}[]{#ch-partitions-x86.html#idm139817169385792 .indexterm}
::: para
Linux
使用字母和数字的组合来指代磁盘分区。这可能有些使人迷惑不解，特别是如果以前使用
\"C 驱动器\"这种方法指代硬盘及其其分区。在 DOS/Windows
的世界里，分区使用下列方法命名：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    检查每个分区的类型以便判定它是否可被 DOS/Windows 读取。
    :::
-   ::: para
    如果分区类型是兼容的，则会分配给它会一个\"驱动器字母\"。驱动器字母从\"C\"开始，然后依据要标记的分区数量而按字母顺序推移。
    :::
-   ::: para
    驱动器字母可以用来指代那个分区，也可以用来指带分区所含的文件系统。
    :::
:::
::: para
Red Hat Enterprise Linux
使用一种更灵活的命名方案。它所传达的信息比其他操作系统采用的命名方案更多。该命名方案是基于文件的，文件名的格式类似
`/dev/xxyN`{.filename}。
:::
::: para
下面说明了解析分区命名方案的方法：
:::
::: variablelist
[`/dev/`{.filename}]{.term}
:   ::: para
    这个是所有设备文件所在的目录名。因为分区位于硬盘中，而硬盘是设备，所以这些文件代表了在
    `/dev/`{.filename} 中所有可能的分区。
    :::
[`xx`{.filename}]{.term}
:   ::: para
    分区名的前两个字母标明分区所在设备的类型。通常是 `hd`{.filename}
    （IDE 磁盘）或 `sd`{.filename}（SCSI 磁盘）。
    :::
[`y`{.filename}]{.term}
:   ::: para
    这个字母标明分区所在的设备。例如，`/dev/hda`{.filename}（第一个 IDE
    磁盘）或 `/dev/sdb`{.filename}（第二个 SCSI 磁盘）
    :::
[`N`{.filename}]{.term}
:   ::: para
    最后的数字代表分区。前四个分区（主分区或扩展分区）是用数字从
    `1`{.filename} 排列到 `4`{.filename}。逻辑分区从 `5`{.filename}
    开始。例如，`/dev/hda3`{.filename} 是在第一个 IDE
    硬盘上的第三个主分区或扩展分区；`/dev/sdb6`{.filename} 是在第二个
    SCSI 硬盘上的第二个逻辑分区。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
该命名协议中没有任何部分是根据分区类型命名的；与 DOS/Windows 不同， Red
Hat Enterprise Linux 可识别[*所有*]{.emphasis}分区。当然，这并不是说 Red
Hat Enterprise Linux
能够访问每一类分区中的数据，但是在许多情况下，访问专用于另一操作系统的分区中的数据是可能的。
:::
:::
:::
::: para
请记录以上信息；它会帮助您在设置 Red Hat Enterprise Linux
所需分区时更容易地理解许多步骤。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#s2-partitions-other-os-x86}A.1.7. 磁盘分区以及其他操作系统 {.title}
:::
[]{#ch-partitions-x86.html#idm139817198354576 .indexterm}
::: para
如果 Red Hat Enterprise Linux
分区要与其他操作系统所用的分区共享一个硬盘，多数情况下，应该没什么问题。不过，某类
Liunx 和其他操作系统的组合需要特别加以注意。
:::
:::
::: section
::: titlepage