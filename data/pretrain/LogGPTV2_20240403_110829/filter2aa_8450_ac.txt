.It Fl 6
强制
.Nm
只使用 IPv6 地址.
.El
.Sh "配置文件 (CONFIGURATION FILES)"
.Nm
可以从用户级配置文件和系统级配置文件中获取更多的配置数据.
配置文件的格式及其内容参见
.Xr ssh_config 5 .
.Sh "环境变量 (ENVIRONMENT)"
.Nm
一般将设置下面的环境变量:
.Bl -tag -width Ds
.It Ev DISPLAY
环境变量
.Ev DISPLAY
指出 X11 服务器的位置. 
.Nm
自动设置这个变量, 变量指向
.Dq hostname:n
格式的数据, 其中 hostname 指出运行 shell 的主机, 而 n 是大于等于 1 的整数.
.Nm
根据这个数据, 用安全通路转发 X11 连接. 用户一般不需要主动设置
.Ev DISPLAY
变量, 否则会导致 X11 连接不安全 (而且会导致用户手工复制所需的授权 cookie).
.It Ev HOME
设置为用户根目录的路径.
.It Ev LOGNAME
等于
.Ev USER ;
用来兼容使用这个变量的系统.
.It Ev MAIL
设置为用户邮箱的路径.
.It Ev PATH
设置为默认的
.Ev PATH ,
如同编译
.Nm ssh 
时要求的一样.
.It Ev SSH_ASKPASS
如果
.Nm
需要一个密语(passphrase), 只要它是终端上启动的, 它会从当前终端上读取. 如果
.Nm
没有联接终端, 但是设置了
.Ev DISPLAY
和
.Ev SSH_ASKPASS
变量,
.Nm
就运行
.Ev SSH_ASKPASS
指定的程序, 打开一个 X11 窗口读取密语. 当从
.Pa .Xsession
或类似的 script 中调用
.Nm
时, 这个功能特别有用. (注意, 某些机器上可能需要将输入重定向为
.Pa /dev/null
才能工作.)
.It Ev SSH_AUTH_SOCK
标识某个 UNIX 域 socket 的路径, 用于和代理通信.
.It Ev SSH_CONNECTION
标识连接的客户端和服务器端. 变量包含四个用空格隔开的字段: 客户端IP地址,
客户端端口号, 服务器IP地址, 服务器端口号.
.It Ev SSH_ORIGINAL_COMMAND
如果强制执行了某条命令, 该变量就保存了最初的命令行. 可以用它获取初始参数.
.It Ev SSH_TTY
设置为关联当前 shell 或命令的终端名字(设备的路径).
如果会话没有终端, 就不设置这个变量.
.It Ev TZ
如果启动后台进程(daemon)时设置了时区, 就设置这个时区变量, 指出现在的时区
(就是说, 后台进程会把这个变量传给新建连接).
.It Ev USER
设置为登录的用户名.
.El
.Pp
另外, 如果允许用户改变他们的环境数据, 而且有
.Pa $HOME/.ssh/environment
这个文件,
.Nm
将读取其中数据, 把
.Dq VARNAME=value
这种格式的数据行添加进环境数据区. 另见
.Xr sshd_config 5 
的
.Cm PermitUserEnvironment
选项.
.Sh "文件 (FILES)"
.Bl -tag -width Ds
.It Pa $HOME/.ssh/known_hosts
主机密钥的记录, 记录有用户登录上来, 但是没有列在 
.Pa /etc/ssh/ssh_known_hosts 
中的主机. 参见
.Xr sshd 8 .
.It Pa $HOME/.ssh/identity, $HOME/.ssh/id_dsa, $HOME/.ssh/id_rsa
包含了用户的身份信息. 它们分别是协议第一版的 RSA, 协议第二版的 DSA,
协议第二版的 RSA. 这些文件存有敏感信息, 只应由该用户读取, 不允许其他用户
访问(读/写/执行). 注意, 如果一个私钥文件能够让其他用户访问,
.Nm
将忽略这个文件. 在生成密钥的时候可以指定一个密语(passphrase), 用这个密语和
3DES 加密文件的敏感部分.
.It Pa $HOME/.ssh/identity.pub, $HOME/.ssh/id_dsa.pub, $HOME/.ssh/id_rsa.pub
包含认证用的公钥 (以文本格式保存的身份文件的公开部分).
如果用户希望用协议第一版的 RSA 认证登录这些机器,
.Pa $HOME/.ssh/identity.pub
的内容应该添加到所有机器的
.Pa $HOME/.ssh/authorized_keys
中. 如果用户希望用协议第二版的 DSA/RSA 认证登录这些机器,
.Pa $HOME/.ssh/id_dsa.pub
和
.Pa $HOME/.ssh/id_rsa.pub
的内容应该添加到所有机器的
.Pa $HOME/.ssh/authorized_keys
中. 这些文件没有敏感数据, 可以(但不是必须)让任何人读取. 
ssh 绝不会自动访问这些文件, 它们也不是不可或缺; 
只是为了用户方便才提供这些文件.
.It Pa $HOME/.ssh/config
用户级配置文件. 
.Xr ssh_config 5
描述了文件格式及其配置选项.
.It Pa $HOME/.ssh/authorized_keys
存放 RSA/DSA 公钥, 用户通过它登录机器. 
.Xr sshd 8
手册页描述了这个文件的格式. 最简单的文件格式和 .pub 身份文件一样.
文件内容并非高度敏感, 但是仍然建议仅让此文件的用户读写, 而拒绝其他用户的访问.
.It Pa /etc/ssh/ssh_known_hosts
已知的主机密钥的系统级列表. 系统管理员应该准备好这个文件, 把所需主机的公钥
保存在文件里面. 这个文件应该能够全局读取. 文件中一行一支公钥, 格式是
(字段用空格隔开): 系统名字, 公钥, 可选的注释域. 如果同一个机器使用了多个名字,
所有名字都应该(用逗号隔开)列出来. 文件格式在
.Xr sshd 8
手册页中有描述.
.Pp
登录的时候,
.Xr sshd 8
用规范的系统名字(名字服务器返回的)确认客户机; 其他名字也需要, 因为校验密钥前
.Nm
不会把用户提供的名字转换为规范名字, 防止能够操作名字服务器的人欺骗主机认证.
.It Pa /etc/ssh/ssh_config
系统级配置文件. 
.Xr ssh_config 5 
描述了文件格式和配置选项.
.It Pa /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_dsa_key, /etc/ssh/ssh_host_rsa_key
这三个文件包含了主机密钥的私有部分, 它们用于
.Cm RhostsRSAAuthentication
和
.Cm HostbasedAuthentication .
如果使用了协议第一版的
.Cm RhostsRSAAuthentication
方法,
.Nm
必须是 setuid root, 因为只有 root 才能读取主机密钥. 而对于协议第二版的
.Cm HostbasedAuthentication
方法,
.Nm
使用
.Xr ssh-keysign 8
访问主机密钥. 这样消除了验证身份时对
.Nm
setuid root 的要求. 默认情况下
.Nm
不是 setuid root.
.It Pa $HOME/.rhosts
该文件用于
.Pa \&.rhosts
认证, 里面列出允许登录的主机/用户对. 
(注意 rlogin 和 rsh 也使用这个文件, 导致这个文件的应用变得不安全)
文件中的每一行包括一个主机名字(用名字服务器返回的规范名字), 和主机上的
用户名字, 用空格隔开. 某些机器上, 如果用户根目录位于 NFS 分区, 
这个文件可能需要全局可读, 因为
.Xr sshd 8
以 root 身份读它. 此外, 该文件必须属于这个用户, 其他人不允许持有写权限.
对大多数机器推荐的访问权限是, 它的用户可以读写, 而不让其他人访问.
.Pp
注意, 默认情况下会安装
.Xr sshd 8 
, 因此在允许 \s+2.\s0rhosts 认证前, 
.Xr sshd 8 
要求成功进行了 RSA 主机验证. 如果没有
.Pa /etc/ssh/ssh_known_hosts
文件存放客户的主机密钥, 密钥可以存放在
.Pa $HOME/.ssh/known_hosts 
中. 最简单的做法是用 ssh 从服务器回连客户机; 这样会自动把主机密钥添加到
.Pa $HOME/.ssh/known_hosts .
.It Pa $HOME/.shosts
这个文件的用法和
.Pa \&.rhosts
完全一样. 它的目的是允许
.Nm
做 rhosts 认证的同时防止
.Nm rlogin
或
.Xr rsh 1
登录.
.It Pa /etc/hosts.equiv
.Pa \&.rhosts 认证
使用这个文件. 它包含规范的主机名字, 一行一个(
.Xr sshd 8
手册页描述了完整的格式). 如果文件中发现了客户机的名字, 
而且客户机和服务器的用户名相同, 则自动允许登录.
另外, 一般情况下要求 RSA 主机认证成功. 这个文件只应该让 root 可写.
.It Pa /etc/ssh/shosts.equiv
这个文件的用法和
.Pa /etc/hosts.equiv
完全一样. 用于允许
.Nm
登录, 但不允许 rsh/rlogin 的时候.
.It Pa /etc/ssh/sshrc
当用户登录后, 运行 shell (或命令)前, 
.Nm
执行这个文件中的命令. 详见
.Xr sshd 8
手册页.
.It Pa $HOME/.ssh/rc
当用户登录后, 运行 shell (或命令)前, 
.Nm
执行这个文件中的命令. 详见
.Xr sshd 8
手册页.
.It Pa $HOME/.ssh/environment
含有关于环境变量的附加定义, 另见前面的
.Sx ENVIRONMENT
节.
.El
.Sh "诊断 (DIAGNOSTICS)"
.Nm
结束时的状态码就是远端命令结束时的返回码, 如果发生了错误就返回255.
.Sh "作者 (AUTHORS)"
OpenSSH 源自最初 Tatu Ylonen 发表的自由 ssh 1.2.12.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt 和 Dug Song 消除了许多 BUGS, 增加新的特征, 从而创建了 OpenSSH.
Markus Friedl 贡献了对 SSH 协议1.5版和2.0版的支持.
.Sh "另见 (SEE ALSO)"
.Xr rsh 1 ,
.Xr scp 1 ,
.Xr sftp 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr ssh-keygen 1 ,
.Xr telnet 1 ,
.Xr ssh_config 5 ,
.Xr ssh-keysign 8 ,
.Xr sshd 8
.Rs
.%A T. Ylonen
.%A T. Kivinen
.%A M. Saarinen
.%A T. Rinne
.%A S. Lehtinen
.%T "SSH Protocol Architecture"
.%N draft-ietf-secsh-architecture-12.txt
.%D January 2002
.%O work in progress material
.Re
.Sh "[中文版维护人]"
徐明 
.Sh "[中文版最新更新]"
2004/06/11 第一版
.Sh "《中国Linux论坛man手册页翻译计划》"
http://cmpp.linuxforum.net