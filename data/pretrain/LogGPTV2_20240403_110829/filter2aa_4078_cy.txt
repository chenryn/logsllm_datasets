本。 随着在工作中使用个人移动设备， 将增加信息泄露、 信息分发以及不适当的内容访问的风险。
员 工们应该保持清醒的 意识 ， 在工作 中 的首要 目 标是完成生产任务。
1 3. 机载摄像头/视频
BYOD 策略需要解决移动设备的机载摄像头问题。 一些环境不允许任何类型的相机， 这就要求
BYOD 设备没有相机。 如果相机是允许的， 应当清晰地在文档中说明可以使用或不可以使用的范围
第9章 安全脆弱性、 威胁和对施
并向员工进行解释。 移动设备可以作为存储设备， 向外部供应商或服务提供一条备用的无线连接通
路 ， 也可用于 图像采集并通过视频泄露机密信息或设备。
9.9 评估和缓解嵌入式设备和物联网系统的脆弱性
嵌入式系统是通过计算机实现的一个更大系统的一部分。 嵌入式系统通常围绕与更大的产品相
关的一系列有限和特定的功能而进行设计， 井成为它的一个组成部分。 嵌入式系统可能由在典型计
算机系统中找到的相 同组件组成， 也可能是一个微控制器(集成芯片与主板上的 内 存和外设端口)。
嵌入式系统的例子包括网络连接打印机、 智能电视、 空调控制 、 智能家电、 智能恒温器、 福特 SYNq一
个车辆终端的微型嵌入式系统) 以及医疗器械。
关于嵌入式系统的另一个类似的概念是静态系统(又名静态环境)。 静态环境是一组不改变条件、
事件和周边的环境。 理论上， 一旦理解， 就知道静态环境不提供新的或令人惊讶的元素。 静态的 IT
环境可以是任何系统， 其用户和管理员 的 目 的是保持环境不变。 整个 目 标是防止或最大程度减少用
户 可能导致降低安全性或操作功能性的实施变更。
在技术上， 静态环境是应用手到芋、 操作系统、 硬件设置或网络被配置为满足特定的需要、 能力
或功能， 然后保持设置不变。 然而， 尽管使用 了 " 静态 " 这个术语， 但没有真正的静态系统。 因 为
总是存在改变环境的情况， 如硬件故障、 硬件配置变更、 软件缺陷、 软件设置的变更或漏洞， 最终
导致不希望的操作参数和实际上的安全入侵。
9.9. 1 嵌入式系统和静态系统的示例
支持网络功能的设备是那些本身有网络功能的便携或非便携设备。 通常假定存在问题的网络是
无线网络， 主要是由移动通信公司 提供。 然而， 也可以指连接 Wi-Fi 的设备(特别是当它们可以自动
连接时)、 可以通过无线电信服务共享数据连接的设备(如移动热点)， 以及拥有可插入标准以太网 电
缆的 RJ-45 有线连接插孔的设备。 支持网络功能的设备， 包括智能手机、 平板电脑、 智能电视、 机
顶盒或 HDMI 流媒体播放器(如 Roku 播放器、 亚马逊 Fire TV 或谷歌 灿droid Chromecast) ， 网络
连接的打印机、 游戏系统 以及其他更多 的设备 。
注意 :
在某些情况下 ， 支持网络功能的设备可能支持蓝牙 、 NFC 等无线连接技术。 此外， 一些供应商
提供的设备， 可以在本身 不具备网络支持的情况下添加网络功能。 这些附加的设备可能被视为 支持
网络功 能的设备(或者更具体地说， 支持网 络的设备)， 它们的合力增强设备也可被视为 支持网 络的
设备。
网络物理系统指的是提供一种计算手段来控制物理世界中某样东西 的设备。 在过去， 这些可能
被称为嵌入式系统， 但网络物理的类别似乎更侧重于物理世界的结果， 而不是计算方面 。 网络物理
设备和系统本质上是机器人技术和传感器网络中 的关键要素。 基本上 ， 可 以便运动发生在现实世界
中 的任何计算装置都是机器人元素， 而任何这样可 以检测物理条件。日温度 、 光、 运动、 湿度)的设
备被称为传感器。 网络物理系统的例子包括增强或协助人类能力的假肢、 车辆碰撞躲避、 空中交通
管制协调、 精密机器人手术、 危险条件下的远程操作 ， 以及车辆、 设备、 移动设备和建筑物的节能。
251
252
CISSP 官方学习指南(第 7 版)
网络物理系统、 嵌入式系统和具备网络功能的设备的一种新扩展是物联网(loT)。 物联网是设备
的集合， 可 以通过互联网与其他设备或通过控制台来影响和监视真实世界。 物联网设备可能被标记
为智能设备或智能家居设备。 许多办公建筑物内 的工业环境控制思路是找到 自 己的方式为小型办公
室或个人家庭消费者提供更多可用 的解决方案。 物联网不仅限于静态定位设备， 也可以用于土地、
空气、 水上车辆或移动设备的关联方面。
大型机是高端计算机系统并用于执行高度复杂的计算和提供大容量的数据处理。 老式的大型机
可 以被认为是静态环境， 因为它们通常围绕单一的任务进行设计或支持单一的关键任务应用 。 这些
配置没有提供显著的灵活性， 但它们确实提供了 高稳定性井能长期运行。 许多主机能够运营数十年。
现代大型机更灵活， 通常用于为支持众多的虚拟机提供高速计算能力。 每个虚拟机都可以拥有
一个独特的操作系统并反过来支持广泛的应用。 如果一个现代大型机为操作系统或应用幸自芋提供固
定或静态的支持， 它就可被认为是静态环境。
游戏机， 无论是家庭系统还是便携式系统， 都是潜在的静态系统的例子。 游戏控制台 的操作系
统一般是固 定的 ， 只 有当供应商发布系统升级时才会改变。 这样的升级往往混合了 操作系统、 应用
程序和固件的改进。 虽然游戏控制台功能一般都集中在玩游戏和媒体， 但现代控制台可能会提供对
一系列改善和第三方应用程序的支持。 更灵活和对开放式应用程序的支持， 将使成为静态系统的可
能性减小 。
车辆计算系统可以包括用于监视发动机性能和优化制动、 转 向及悬挂的组件， 也可包含和驾驶、
环境控制及娱乐相关的内置元素。 早期的车辆系统是静态环境， 很少或根本没有能力进行调整或改
变， 尤其是由车主/司机进行调整。 现代车辆系统可提供更广泛的功能， 包括连接移动设备或运行自
定义的应用程序 。
9.9.2 安全方法
嵌入式系统和静态系统的安全问题包括以下事实: 大多数集中在如何最大限度地降低成本和无
关的功能上。 这往往会导致缺乏安全性且难于升级或安装补丁。 由于嵌入式系统在真实世界中是一
种控制机制 ， 因 此一个安全漏洞可能会造成对人和财产的损害 。
静态环境、 嵌入式系统和其他有限或单一用途的计算环境需要安全管理。 虽然它们可能没有广
泛 的攻击面 ， 并且没有暴露过多 的风险， 但作为通用 的计算机， 它们仍然需要适当 的安全治理。
1 网络分隔
网络分隔涉及控制网络设备之间的流量。 完整或物理的网络分隔发生在网络与所有外部通信完
全隔离时， 这时传输仅限于处于分隔网络的设备之间。 可 以在交换机上通过VLAN 或其他通信控制
手段， 包括 MAC 地址、 E 地址、 物理端 口 、 TCP 或 UDP 端口 、 协议、 应用程序过滤、 路由和访
问控制管理来实现逻辑网络的分隔 。 网络分隔可以用来隔离静态环境， 以防止变更和/或因可到达而
被利用 。
2. 安全层
当不同级别分类或灵敏度不同的设备被分组在一起时， 就存在安全层， 从而对不同级别的分组
进行隔离。 这种隔离可以是无条件或单向的。 例如， 较低级别可能无法启动与更高级别的通信， 但
更高级别可以初始与较低级别的通信。 隔离也可以是逻辑上或物理上的 。 逻辑隔离要求对数据包使
第 9 章 安全脆弱性、 威胁和对施
用 分类标签， 它们必须被尊重并在网络管理、 操作系统和应用上进行强制实施。 物理隔离需要实现
不 同安全级别网络之间的 网络分隔 或空间隔断。
3 应用 防火墙
应用防火墙是设备、 服务器插件、 虚拟服务或系统过滤器， 定义了在服务和所有用户 之间严格
的 通信规则 。 目 的是成为服务器端防火墙特定的应用程序 ， 以 防止特定应用协议和载荷攻击。
网络防火墙是一种硬件设备， 通常被称为专为一般网络过滤而设计的装置。 网络防火墙的 目 的
是提供全 网 的广泛保护 。
这两种类型的防火墙十分重要并在多个情况下是相关的。 每一个网络都需要一道网络防火墙。
许多应用程序服务器需要一道应用防火墙。 然而， 有了应用防火墙的位置并非不需要网络防火墙。
应该使用两个防火墙来进行相互补充， 而不是把它们视为竞争性解决方案。
4. 手动升级
手动更新应该用在静态环境下以确保只实施测试和授权更改。 使用 自动更新系统将允许未检测
的更新 引 进未知的安全性降级 。
5. 圄件版本控制
类似于手动更新软件， 在静态环境中严格控制固件是十分重要的 。 固件更新应该在手动的基础
上实现， 并且只有通过测试和审查才能进行。 对固件版本控制的监督应着眼于保持稳定的操作平台 ，
同 时尽量减少危险暴露和停机时间 。
6. 包装
包装是指用来封闭或包含其他东西。 包装在安全社区是众所周知的， 往往被关联到木马恶意软
件 。 这种包装用来将一 台 良性主机与恶意的有效载荷结合起来。
包装也可作为封装解决方案。 一些静态环境可能被配置为拒绝更新、 更改或软件安装， 除非它
们通过一条控制信道引入。 控制信道可以是特定的包装器。 该包装器可以包括完整性和认证功能，
以确保只 有预期和授权的更新被应用于系统中。
7. 控制冗余和多样性
与任何安全解决方案一样， 依靠单一的安全机制是不明智的。 深度防御以同心圆或平面层方式
使用多层访问控制。 这种分层的安全形式有助于组织避免整体单一的安全状态。 整体的心态是相信
单一的安全机制可完全提供所需的足够安全性。 通过冗余和多样性的安全控制 ， 静态环境可以避免
单一安全功能失效的陆阱， 使得环境有多个机会转移、 拒绝、 检测并阻止任何威胁。 遗憾的是， 没
有任何安全机制是完美的。 每一个单独的安全机制都有漏洞或变通方案， 在等待着被黑客发现和
滥用 。
9. 10 基本安全保护机制
操作系统内对安全机制的需求来自 于如下简单的事实: 软件是不可信的 。 无论来自 何人或何处，
253
254
CISSP 官方学 习指南(第 7 版)
第三方软件总是不可信的 。 这并不是说所有软件都是恶意的， 而是说明一种保护观点: 所有第三方
软件都是 os 创建者之外的人编写的， 这样的软件可能导致问题。 因此， 将所有非 os 软件都视为
存在潜在危害性， 这允许操作系统通过使用软件管理保护机制来阻止许多灾难的发生。 os 必须利
用保护机制来保持计算环境的稳定并且进程间彼此隔离。 如果没有这些努力， 那么数据的安全性永
远是不可靠的， 甚至是不可能的 。
在设计安全系统时， 计算机系统设计人员应当遵守许多种通用的保护机制。 这些原则是更通用
的安全规则的特定实例 ， 用于管理安全计算实践。 在开发的早期阶段就在系统中 引入安全设计， 将
有助于确保整个安全架构 的成功和可靠。 接下来将把保护机制分为两个方面加以讨论， 即技术机制
和策略机制 。
9. 1 0.1 技术机制
技术机制是系统设计人员针对系统建立的控制措施。 我们将介绍下列 5 种机制: 分层法、 抽象、
数据隐藏、 进程隔离和硬件分隔。
1 分层法