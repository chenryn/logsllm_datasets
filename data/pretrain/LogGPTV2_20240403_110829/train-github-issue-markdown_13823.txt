In the swagger api spec, in the proxy methods:
https://github.com/kubernetes/kubernetes/blob/master/api/swagger-
spec/v1.json#L6670
There are many such entries like this:
           {
            "type": "string",
            "paramType": "query",
            "name": "path",
            "description": "Path is the URL path to use for the current proxy request to pod.",
            "required": false,
            "allowMultiple": false
           },
           {
            "type": "string",
            "paramType": "path",
            "name": "namespace",
            "description": "object name and auth scope, such as for teams and projects",
            "required": true,
            "allowMultiple": false
           },
           {
            "type": "string",
            "paramType": "path",
            "name": "name",
            "description": "name of the Pod",
            "required": true,
            "allowMultiple": false
           },
           {
            "type": "string",
            "paramType": "path",
            "name": "path",
            "description": "path to the resource",
            "required": true,
            "allowMultiple": false
           }
As you can see, the name "path" is used twice here. Despite the `paramType`
being different, this causes `swagger-codegen` to create invalid code:
    ConnectOptionsNamespacedPodProxy_6 (string _namespace, string name, string path, string path);
As the name is there twice, path is a duplicate variable, causing errors.
Although this isn't necessarily a kubernetes issue - duplicate names should be
handled properly in swagger-codegen - I think it would be wise to not use the
same name twice in these methods.