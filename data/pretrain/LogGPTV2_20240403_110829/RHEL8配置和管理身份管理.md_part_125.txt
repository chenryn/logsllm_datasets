    安全设置添加共享：
    ``` literallayout
    /export  *(rw,sec=krb5:krb5i:krb5p)
    /home  *(rw,sec=krb5:krb5i:krb5p)
    ```
    这个示例在启用了 Kerberos 身份验证的情况下以读写模式共享
    ` /export`{.literal} 和 /home``{=html} 目录。
10. 重启并启用 nfs-server：
    ``` literallayout
    [root@nfs-server ~]# systemctl restart nfs-server
    [root@nfs-server ~]# systemctl enable nfs-server
    ```
11. 重新导出共享目录：
    ``` literallayout
    [root@nfs-server ~]# exportfs -rav
    ```
12. （可选）将 NFS 服务器配置为 NFS 客户端。请参阅 ["设置 Kerberos
    感知的 NFS
    客户端"一节](#using-automount_configuring-and-managing-idm.html#setting-up-a-kerberos-aware-nfs-client_using-automount "设置 Kerberos 感知的 NFS 客户端"){.xref}。
:::
:::
::: section
::: titlepage
# []{#using-automount_configuring-and-managing-idm.html#setting-up-a-kerberos-aware-nfs-client_using-automount}设置 Kerberos 感知的 NFS 客户端 {.title}
:::
这个步骤描述了如何设置 kerberos 感知 NFS 客户端。
::: itemizedlist
**先决条件**
-   IdM 域设置。如需更多信息，请参阅
    [安装身份管理](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-idm){.link}。
-   安装了 IPA 客户端。如需更多信息，请参阅 [安装 ipa-client
    软件包](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-ipa-client-packages-from-the-idm-client-stream){.link}。
:::
::: orderedlist
**流程**
1.  如果 NFS 客户端只支持弱加密（如 Red Hat Enterprise Linux 5
    客户端），请在服务器的 `/etc/krb5.conf`{.literal}
    文件中设置以下条目以允许弱加密：
    ``` literallayout
    allow_weak_crypto = true
    ```
2.  如果 NFS 客户端没有注册为 IdM 域中的客户端，请设置所需的主机条目，如
    [从 IdM CLI 添加 IdM
    主机条目](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#adding-host-entry-cmd_managing-hosts-cli){.link}
    所述。
3.  安装 [**[nfs-utils]{.package}**]{.strong} 软件包：
    ``` literallayout
    [root@nfs-client ~]# yum install nfs-utils
    ```
4.  在运行 IdM 工具前获取 Kerberos 票据。
    ``` literallayout
    [root@nfs-client ~]# kinit admin
    ```
5.  运行 `ipa-client-automount`{.literal} 工具来配置 NFS 设置：
    ``` literallayout
    [root@nfs-client ~] ipa-client-automount
    Searching for IPA server...
    IPA server: DNS discovery
    Location: default
    Continue to configure the system with these values? [no]: yes
    Configured /etc/idmapd.conf
    Restarting sssd, waiting for it to become available.
    Started autofs
    ```
    默认情况下，这会在 `/etc/sysconfig/nfs`{.literal} 文件中启用安全
    NFS，并在 `/etc/idmapd.conf`{.literal} 文件中的 `Domain`{.literal}
    参数中设置 IdM DNS 域。
6.  在 `/etc/fstab`{.literal} 文件中添加以下条目，以便在系统引导时挂载
    `nfs-server.example.com`{.literal} 主机中的 NFS 共享：
    ``` literallayout
    nfs-server.example.com:/export  /mnt   nfs4  sec=krb5p,rw
    nfs-server.example.com:/home    /home  nfs4  sec=krb5p,rw
    ```
    这些设置将 Red Hat Enterprise Linux 配置为将 `/export`{.literal}
    共享挂载到 `/mnt`{.literal}，并将 `/home`{.literal} 共享挂载到
    `/home`{.literal} 目录。
7.  如果挂载点不存在，请创建挂载点。在我们的案例中，两者都应存在。
8.  挂载 NFS 共享：
    ``` literallayout
    [root@nfs-client ~]# mount /mnt/
    [root@nfs-client ~]# mount /home
    ```
    命令使用 `/etc/fstab`{.literal} 条目中的信息。
9.  配置 SSSD 以续订 Kerberos 票据：
    ::: orderedlist
    1.  在 `/etc/sssd/sssd.conf`{.literal} 文件的 IdM
        域部分设置以下参数，以将 SSSD 配置为自动续订票据：
        ``` literallayout
        [domain/EXAMPLE.COM]
        ...
        krb5_renewable_lifetime = 50d
        krb5_renew_interval = 3600
        ```
    2.  重启 SSSD：
        ``` literallayout
        [root@nfs-client ~]# systemctl restart sssd
        ```
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`pam_oddjob_mkhomedir`{.literal} 模块不支持在 NFS
共享上自动创建主目录。因此，您必须在包含主目录的共享的根目录的服务器上手动创建主目录。
:::
:::
:::
[]{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm}第 93 章 从 NIS 迁移到身份管理 {.title}
:::
网络信息服务(NIS)服务器可以包含有关用户、组、主机、网络组和自动挂载映射的信息。作为系统管理员，您可以将这些条目类型、身份验证和授权从
NIS 服务器迁移到身份管理(IdM)服务器，以便在 IdM
服务器上执行所有用户管理操作。从 NIS 迁移到 IdM
还允许您访问更为安全的协议，如 Kerberos。
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis}在 IdM 中启用 NIS {.title}
:::
要允许 NIS 和 Identity Management(IdM)服务器之间的通信，您必须在 IdM
服务器中启用 NIS 兼容性选项。
::: itemizedlist
**先决条件**
-   在 IdM 服务器中具有 root 访问权限。
:::
::: orderedlist
**流程**
1.  在 IdM 服务器中启用 NIS 侦听程序和兼容性插件：
    ``` literallayout
    [root@ipaserver ~]# ipa-nis-manage enable
    [root@ipaserver ~]# ipa-compat-manage enable
    ```
2.  [*可选*]{.emphasis} ：对于更严格的防火墙配置，请设置固定的端口。
    例如，将端口设置为未使用的端口 `514`{.literal} ：
    ``` literallayout
    [root@ipaserver ~]# ldapmodify -x -D 'cn=directory manager' -W
    dn: cn=NIS Server,cn=plugins,cn=config
    changetype: modify
    add: nsslapd-pluginarg0
    nsslapd-pluginarg0: 514
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    为避免与其他服务冲突，请勿使用任何 1024 以上的端口号。
    :::
3.  启用并启动端口映射器服务：
    ``` literallayout
    [root@ipaserver ~]# systemctl enable rpcbind.service
    [root@ipaserver ~]# systemctl start rpcbind.service
    ```
4.  重启目录服务器：
    ``` literallayout
    [root@ipaserver ~]# systemctl restart dirsrv.target
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#nis-import-users}将用户条目从 NIS 迁移到 IdM {.title}
:::
NIS `passwd`{.literal}
映射包含有关用户的信息，如名称、UID、主组、GECOS、shell
和主目录。使用此数据将 NIS 用户帐户迁移到身份管理(IdM)：
::: itemizedlist
**先决条件**
-   在 NIS 服务器中具有 root 访问权限.
-   [在 IdM 中启用了
    NIS。](#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis "在 IdM 中启用 NIS"){.link}
-   NIS 服务器已加入 IdM。
:::
::: orderedlist
**流程**
1.  安装 `yp-tools`{.literal} 软件包：
    ``` literallayout
    [root@nis-server ~]# yum install yp-tools -y
    ```
2.  在 NIS 服务器中 `创建包含以下内容的 /root/nis-users.sh`{.literal}
    脚本：
    ``` literallayout
    #!/bin/sh
    # $1 is the NIS domain, $2 is the NIS master server
    ypcat -d $1 -h $2 passwd > /dev/shm/nis-map.passwd 2>&1
    IFS=$'\n'
    for line in $(cat /dev/shm/nis-map.passwd) ; do
    	IFS=' '
    	username=$(echo $line | cut -f1 -d:)
    	# Not collecting encrypted password because we need cleartext password
    	# to create kerberos key
    	uid=$(echo $line | cut -f3 -d:)
    	gid=$(echo $line | cut -f4 -d:)
    	gecos=$(echo $line | cut -f5 -d:)
    	homedir=$(echo $line | cut -f6 -d:)
    	shell=$(echo $line | cut -f7 -d:)
    	# Now create this entry
    	echo passw0rd1 | ipa user-add $username --first=NIS --last=USER \
    	     --password --gidnumber=$gid --uid=$uid --gecos='$gecos' --homedir=$homedir \
    	     --shell=$shell
    	ipa user-show $username
    done
    ```
3.  以 IdM `admin`{.literal} 用户身份进行身份验证：
    ``` literallayout
    [root@nis-server ~]# kinit admin
    ```
4.  运行脚本。例如：
    ``` literallayout
    [root@nis-server ~]# sh /root/nis-users.sh nisdomain nis-server.example.com
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    此脚本对名字和姓氏使用硬编码的值，并将密码设置为
    `passw0rd1`{.literal}。用户在下次登录时必须更改临时密码。
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#nis-import-groups}将用户组从 NIS 迁移到 IdM {.title}
:::
NIS `组`{.literal} 映射包含有关组的信息，如组名称、GID
或组成员。使用此数据将 NIS 组迁移到身份管理(IdM)：
::: itemizedlist
**先决条件**
-   在 NIS 服务器中具有 root 访问权限.
-   [在 IdM 中启用了
    NIS。](#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis "在 IdM 中启用 NIS"){.link}
-   NIS 服务器已加入 IdM。
:::
::: orderedlist
**流程**
1.  安装 `yp-tools`{.literal} 软件包：
    ``` literallayout
    [root@nis-server ~]# yum install yp-tools -y
    ```
2.  在 NIS 服务器中使用以下内容创建 `/root/nis-groups.sh`{.literal}
    脚本：
    ``` literallayout
    #!/bin/sh
    # $1 is the NIS domain, $2 is the NIS master server
    ypcat -d $1 -h $2 group > /dev/shm/nis-map.group 2>&1
    IFS=$'\n'
    for line in $(cat /dev/shm/nis-map.group); do
    	IFS=' '
    	groupname=$(echo $line | cut -f1 -d:)
    	# Not collecting encrypted password because we need cleartext password
    	# to create kerberos key
    	gid=$(echo $line | cut -f3 -d:)
    	members=$(echo $line | cut -f4 -d:)
    	# Now create this entry
    	ipa group-add $groupname --desc=NIS_GROUP_$groupname --gid=$gid
    	if [ -n "$members" ]; then