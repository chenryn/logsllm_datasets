title:Survivability Architecture of a Mission Critical System: The DPASA
Example
author:Jennifer Chong and
Partha P. Pal and
Michael Atighetchi and
Paul Rubel and
Franklin Webber
Survivability Architecture of a Mission Critical System: The DPASA1 Example 
Jennifer Chong, Partha Pal, Michael Atigetchi, Paul Rubel, Franklin Webber 
BBN Technologies, Cambridge, MA 
{jchong, ppal, matiget, prubel, fwebber}@bbn.com 
Abstract 
Many  techniques  and  mechanisms  exist  today,  some 
COTS,  others  less  mature  research  products  that  can  be 
used to deflect, detect, or even recover from specific types 
of cyber attacks. None of them individually is sufficient to 
provide  an  all  around  defense  for  a  mission  critical  dis-
tributed  system.    A  mission  critical  system  must  operate 
despite  sustained  attacks  throughout  the  mission  cycle, 
which  in  the  case  of  military  systems,  can  range  from 
hours to days. A comprehensive survivability architecture, 
where  individual  security  tools  and  defense  mechanisms 
are  used  as  building  blocks,  is  required  to  achieve  this 
level of survivability. We have recently designed a surviv-
ability  architecture,  which  combined  elements  of  protec-
tion, detection, and adaptive reaction; and applied it to a 
DoD  information  system.  The  resulting  defense-enabled 
system  was  first  evaluated  internally,  and  then  deployed 
for external Red Team exercise.  In this paper we describe 
the  survivability  architecture  of  the  system,  and  explain 
the rationale that motivated the design. 
1  Introduction 
 Previous investments in cyber security, information as-
surance,  and  intrusion  tolerance  research  resulted  in  sev-
eral  solutions  for  particular  cyber  threats.  For  instance, 
firewalls effectively block unwanted traffic, digital signa-
tures detect modification of data in transit, and redundancy 
and Byzantine protocols tolerate corrupt or compromised 
application components. However, these technologies are 
point  solutions  and  are  not  adequate  by  themselves  to 
build a system that can withstand a wide range of threats. 
Experience  shows  that  protecting  a  system  against  all 
possible  cyber  attacks  is  not  currently  feasible  when  the 
system is composed of COTS components with unknown 
or unverified security properties. The increasing demands 
for  systems  to  interconnect  and  interoperate  with  each 
other  exacerbate  the  situation.  It  must  be  assumed  that 
some  attacks  will  be  successful,  causing  undesirable  ef-
fects such as loss of availability, integrity, and confidenti-
ality  (LOA,  LOI,  and  LOC  respectively)  in  parts  of  the 
system.  Detection  complements  protection,  but  detection 
alone  has  known  problems  such  as  false  positives,  false 
negatives,  late  detection,  missing  sensors,  difficulties  in 
interpreting alerts, and not having a course of action to fix 
the problem.  
Knowing that attacks will occur and detection could be 
incorrect  or  happen  too  late,  we  have  been  investigating 
how  to  allow  mission  critical  systems  to  be  cyber-attack 
tolerant so that they can recover from attack induced fail-
ures or to continue to operate in a degraded mode.   
Building a system that is resilient, despite a wide range 
of  sustained  attacks,  requires  integration  of  tools  and 
mechanisms that provide protection and detection, as well 
as adaptive tolerance.  This  integration of  solutions from 
each  category  provides  complimentary,  defense-in-depth 
coverage  protecting  all  layers  and  aspects  of  the  system. 
We define this integration as a ‘survivability architecture’, 
which  denotes  the  well-defined  organization,  placement, 
and interconnection of the multiple layers of these security 
solutions  and  how  they  are  integrated  with  the  original 
components of the undefended system.  
  Continuing with our history of research in dynamic se-
curity,  adaptive  intrusion  tolerance,  and  survivability  [1] 
[2], we recently designed a survivability architecture for a 
DoD information system, and used the design to build the 
survivable  version  of  the  system  in  the  DPASA  project 
under the DARPA OASIS Dem/Val program. 
In this paper, we first present the principles that moti-
vated the design of the survivability architecture. Then we 
describe the survivable system, explaining how the archi-
tecture  integrated  with  and  transformed  the  undefended 
system.  Next,  we  describe  how  the  system  counters  at-
tacks.   After a short discussion of related work, the paper 
concludes with a brief summary of the technical contribu-
tions of this paper, and a few areas for future research. 
1 DPASA stands for Designing Protection and Adaptation into a Survivability Architecture. 
This work has been supported by DARPA under contract number F30602-02-C-0134. 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
1 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:31 UTC from IEEE Xplore.  Restrictions apply. 
2  Motivating Principles  
The high level strategy underlying our approach to de-
signing  a  survivable  system  is  to  strategically  combine 
elements of protection, detection, and adaptive reaction in 
the architecture of the system, such that  
•  Protection is the first line of defense, employing 
techniques to fortify key aspects of the system to 
deny  the  attacker  easy  or  undetected  access  to 
targets 
•  Detection  provides  insight  into  the  status  of  the 
system and allows the system to detect attacks 
•  Adaptive  reaction  enables  the  system  to  cope 
with  (undesirable)  changes  caused  by  attackers 
exploiting  gaps  in  the  protection  or  circumvent-
ing it, to support recovery and graceful degrada-
tion 
The  need  to  combine  protection,  detection,  and  adap-
tive reaction is based on the understanding that protection 
cannot be perfect, some attacks will succeed (at least par-
tially),  and  some  of  the  attacks  will  not  be  detected  in 
time.  
When  combined  with  the  collective  experience  of  our 
team members [1][2][3][10], this high level strategy led to 
a number of design principles that influenced the surviv-
ability architecture. These are explained in the remainder 
of this section.   
Multiple Layers of Protection: To maximize the level 
of protection, a high barrier of entry against break-in to the 
system needed to be built. A single layer of protection is 
not sufficient to provide a high barrier, thus multiple lay-
ers of protection are needed. Techniques that are grounded 
in the hardware are suited for providing multiple layers of 
protection.  Autonomic  Distributed  Firewall  (ADF)  [3] 
Network Interface Card (NIC) based distributed firewalls 
that  filter  packets,  or  smart  card  based  mechanisms  that 
control  physical  access  to  sensitive  data  such  as  private 
keys  are  good  examples  of  these  techniques.  Combining 
hardware,  cryptography,  operating  system  protection  do-
mains, and application level session and quorum checking 
provide multiple layers of protection. This will deter script 
kiddies, and will also force serious attackers to spend more 
time and resources to gain entry into the system.  
  Redundancy  and  Static  Diversity:  A  secure  system 
cannot  have  single  points  of  failure  in  either  its  critical 
functionality  or  its  key  defensive  infrastructure.  Redun-
dancy is a fundamental technique used to eliminate single 
points of failure, but homogeneous redundancy incurs the 
risk  of  correlated/common  mode  vulnerabilities.  These 
vulnerabilities  can  lead  to  rapid  deterioration  of  the  sys-
tem, with little recourse. Diversity can be used to manage 
this risk.  
Physical  Constraints  in  the  Architecture  to  Impose 
Modular  Isolation  and  Containment:  A  system  should 
make use of architectural constraints and design constructs 
that will slow the attacker’s progress through the system. 
Even  if  he  manages  to  gain  access  to  some  parts  of  the 
system  (i.e.,  overcomes  the  multiple  layers  of  protective 
barriers  to  that  part  of  the  system),  his  privileges  in  the 
system and his ability to see and reach other parts of the 
system  should  remain  severely  constrained.  Techniques 
such as Demilitarized Zones (DMZs) can be used to force 
the attackers to compromise several perimeters before they 
get  to  a  core  asset.  Network  architecture  connecting  key 
resources  inside  the  organizational  firewall  can  be  made 
more  compartmental,  allowing  physical  connection  only 
where needed.  
Detection and Correlation: When COTS components 
with unverified security properties are deployed, it is not 
always possible to detect intrusions in a timely and accu-
rate  manner.  A  system  must  strive  to  increase  the  at-
tacker’s  risk  of  being  detected.    Forcing  an  attacker  to 
spend more time executing his attack, in conjunction with 
instrumenting the architecture to sense anomalies and pol-
icy  violations  can  significantly  raise  the  attacker’s  risk. 
Correlating policy violation reports yield higher accuracy 
and lower false alarm rates.  For example, the absence of 
heartbeats from component X does not always mean that 
X has failed or is corrupt.  Correlating that absence with 
the file system corruption of X or a violation of an appli-
cation-level protocol by X gives  much higher confidence 
that an attack has corrupted X. 
Adaptive  Response:  Adaptive  reaction,  entailing  dy-
namic response (autonomic and human assisted) to secu-
rity events is an essential enabler for reaching high surviv-
ability. Improved detection and awareness can lead to bet-
ter  reaction—which  means  better  response  to  observed 
events and anomalies. Adaptive responses can be used to 
mask or recover from the effects of attacks or to degrade 
gracefully, retaining some service for the longest possible 
time. Examples of adaptive response are managing redun-
dancy and protection mechanisms, adding run time diver-
sity  by  changing  system  configuration  or  behavior,  dy-
namically  isolating  and  containing  attack  effects,  and  re-
covering  from  attack  effects  by  replacing  or  restarting 
failed or compromised components. 
Design Based on Weak  Assumptions:  A system that 
makes strong assumptions about the environment is more 
vulnerable [4].   For example, if a system’s correct behav-
ior depends on the assumption that the communication en-
vironment  always  delivers  a  request  for  service  exactly 
once,  then  the  attacker  has  a  number  of  ways  to  put  the 
system  in  a  bad  state:  he  can  block  the  request  or  send 
multiple  copies  of  the  request  by  manipulating  the  com-
munication environment, without having to attack the ser-
vice requester or service provider components of the sys-
tem.  On the other hand, a system that makes weaker as-
2 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:31 UTC from IEEE Xplore.  Restrictions apply. 
sumptions  about  the  communication  environment  will  be 
designed to handle a missing request, multiple requests, a 
missing  response,  multiple  responses,  a  corrupted  re-
sponse,  as  well  as  the  desired  response.  Such  a  system 
minimizes  the  attacker’s  opportunity  to  harm  the  system 
by simple manipulation of the operating environment. 
In  the  next  section  we  explain  how  these  principles 
were applied in the creation of the survivability architec-
ture. In addition to these principles, it is important to note 
that the survivability architecture has incorporated a num-
ber of tunable parameters (for instance, amount of redun-
dancy,  amount  of  diversity,  number  of  defensive  layers). 
These tunable parameters allow for cost-benefit trade-offs, 
making  the  survivability  architecture  applicable  to  con-
texts  that  have  different  survivability  and  cost  require-
ments from the DoD information system described. 
3  Survivability Architecture: The DPASA 
Example 
In the DPASA project we developed the survivability 
architecture for a Joint Battlespace Infosphere  (JBI) ex-
emplar. The JBI concept is being developed at the Air 
Force Research Laboratory.  More details about the JBI 
concept and implementation can be found on the JBI home 
page [5]. The JBI’s objective is to facilitate quick integra-
tion of disparate Air Force applications to support specific 
missions. JBI uses publish/subscribe communication for 
flexible integration of distributed applications.    
In this section we introduce the JBI exemplar, the mis-
sion it supports and its survivability requirements. Then 
we present a summary of the key aspects of the survivabil-
ity architecture we designed. Finally, we describe the de-
fense-enabled or survivable version of the JBI exemplar.    
3.1 
The Undefended JBI Exemplar and Survivabil-
ity Requirements   
The exemplar JBI shown in Figure 12 integrates appli-
cations  for  selecting  proper  targets,  monitoring  environ-
mental conditions, and creating air-tasking orders (ATOs).  
A successful mission would involve making the go- no-go 
decision on an ATO that may have, among other targets, 
weapons  of  mass  destruction  (WMD)  sites.  The  factors 
that  could  influence  the  go  or  no  go  decision  include 
whether the  ATO had any WMD sites among its targets, 
the  predicted  weather  condition  in  the  targeted  area,  the 
presence of friendly forces nearby, the possibility of other 
air traffic (such as logistic support) in the theater, and ul-
timately the possibility of collateral damage (for instance, 
2  The  dashed  line  delineates  the  system  boundary.  
Only  the  elements  that  are  in  the  system  boundary  were 
selected to be defense-enabled.   
the chemical plume from the hit WMD site spreading into 
civilian areas) resulting from executing the ATO. 
The undefended system consists of clients connected to 
a JBI core (platform). The JBI core is shown as a network 
cloud  representing  a  public  IP  networking  infrastructure 
like the SIPRNet3. The clients interact with each other ex-
changing  Information  Objects  (IOs)  using  publish,  sub-
scribe  and  query  (PSQ)  operations  submitted  to  the  JBI 
core. Besides providing PSQ, the JBI core allows informa-
tion flows to be managed and access by clients to be con-
trolled. 
Theater Air Planner
Theater Air Planner
client
client
Theater Weather Server
Theater Weather Server
IO
IO
client
client
IO
IO
Squadron Combat Operations
Squadron Combat Operations
client
client
IO
IO
JBI “Platform” 
JBI “Platform” 
Rome, NY  
Rome, NY  
IO
IO
IO 
IO 
CAF-MAF Client 
CAF-MAF Client 
client
client
client 
client 
IO 
IO 
client
client
Joint Environmental 
Joint Environmental 
Exploitation Segment
Exploitation Segment
IO 
IO 
client
client
Intelligent Adaptive 
Intelligent Adaptive 
Communications Controller
Communications Controller
IO 
IO 
Hazard Prediction and 
Hazard Prediction and 
Assessment Capability (legacy)
Assessment Capability (legacy)
client
client
Bio - environmental
Bio - environmental
MM5(legacy)
MM5(legacy)
Environmental Data Cube
Environmental Data Cube
Figure 1 Exemplar JBI - undefended 
The defense-enabled JBI is required to survive at least 
an order of magnitude longer than previous defended sys-
tems  such as  APOD [6] [7].  Additional survivability re-
quirements are: provide 100% of JBI critical functionality 
under  sustained  attack  by  a  “Class  A”  Red  Team,  detect 
95%  of  attacks  in  the  given  time,  and  ultimately  survive 
12 hours to finish the JBI mission.  
3.2  Overview of DPASA Survivability Architecture 
Before  we  describe  the  defense-enabled  JBI,  we  give 
an overview of the key concepts and elements of DPASA 
architecture. 
3.2.1 
Zones and Quadrants (Quads) 
The  DPASA  architecture  extends  the  notion  of  the 
DMZ using three zones. It replicates the service provider 
part of the JBI (i.e., the part offering the key services, such 
as  the  PSQ  service),  commonly  known  as  the  Core,  and 
protects it by organizing the replicas in quads. As shown 
in Figure 2, there are four quads and each quad has three 
zones:  crumple,  operations,  and  executive.    The  crumple 
3  SIPRNet  stands  for  Secret  Internet  Protocol  Router 
Network. It is the DoD’s classified version of the civilian 
Internet. 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
3 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:31 UTC from IEEE Xplore.  Restrictions apply. 
zone, which acts as the region of first impact, buffers the 
core assets in the operations zone. The executive zone sits 
behind  the  operations  zone  and  hosts  the  functions  that 
manage the overall security and survivability. 
Quad A 
Quad A 
Quad 1 
Executive 
Executive 
Executive 