# [⁠]{#virtual-file-systems-disk-management.html#exposing-gvfs}15.6. 向所有其它应用程序显示 GNOME 虚拟文件系统 {.title}
:::
::: para
除了内置 ``{=html}GIO``{=html}
库的应用程序可以访问 GVFS
装载之外，"`GVFS`{.systemitem}"还提供了一个显示活跃 GVFS
装载的"`FUSE`{.systemitem}"守护程序。这意味着，任何应用程序都可以使用标准
POSIX API
访问活跃的"`GVFS`{.systemitem}"装载，就好像它们是常规文件系统一样。
:::
::: para
尽管如此，在某些应用程序中，附加库的依赖性和
``{=html}VFS``{=html}
子系统的新特性可能并不匹配，或者过于复杂。出于这些原因，以及为了提高兼容性，"`GVFS`{.systemitem}"提供了一个"`FUSE`{.systemitem}"（"`用户空间的文件系统`{.systemitem}"）守护程序，它通过自身用于标准
``{=html}POSIX``{=html}（便携式操作系统界面）访问的装载显示活跃装载。该守护程序透明转换传入请求，来为应用程序模拟一个本地文件系统。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
来自不同设计的转换并非 100%
功能兼容的，您可能在某些特定应用程序与"`GVFS`{.systemitem}"后端的组合中遇到困难。
:::
:::
:::
::: para
"`FUSE`{.systemitem}"守护程序随着"`GVFS`{.systemitem}"主控守护程序自动启动，并将其装载作为后备放置在
`/run/user/UID/gvfs`{.filename} 文件或 `~/.gvfs`{.filename}
文件中。手动浏览显示每个"`GVFS`{.systemitem}"装载都有单独的目录。当您使用非本地应用程序打开来自"`GVFS`{.systemitem}"位置的文件时，经过了一条作为参数的转换路径。请注意，本地
``{=html}GIO``{=html}
应用程序自动将这条路径转回本地
``{=html}URI``{=html}。
:::
:::
::: section
::: titlepage
# [⁠]{#virtual-file-systems-disk-management.html#pswd-management}15.7. GVFS 装载的密码管理 {.title}
:::
::: para
除非资源允许匿名身份验证，否则根本不要求身份验证，典型的"`GVFS`{.systemitem}"装载在激活时会要求身份凭证。在标准的
GTK+ 对话中，用户可以选择是否保存密码。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#virtual-file-systems-disk-management.html#authentication-while-mounting-gvfs}
**过程 15.5. 示例：已进行身份验证的装载过程**
1.  ::: para
    打开[**文件**]{.application}，并通过按
    [**Ctrl**]{.keycap}+[**L**]{.keycap} 激活地址栏。
    :::
2.  ::: para
    输入需要身份验证的服务的 URI 字符串，要求结构良好（例如，
    **`sftp://localhost/`**）。
    :::
3.  ::: para
    出现一个要求用户名、密码，以及密码存储选项的身份凭证对话。
    :::
4.  ::: para
    填入身份凭证并确认。
    :::
:::
::: para
如果选择了永久保存，密码会被存储在用户 keyring
中。"`GNOME Keyring`{.systemitem}"是存储机密的中心位置。它是加密的，并通过登录时默认提供的密码在桌面会话开始时自动解锁。如果有另一个不同的密码保护它，那么该密码是在首次使用时设置。
:::
::: para
为了管理存储的密码和"`GNOME Keyring`{.systemitem}"本身，系统提供了应用程序
[**Seahorse**]{.application}，它允许移除个别记录或更改密码。关于[**Seahorse**]{.application}的更多信息，请查阅直接安装在桌面上的
Seahorse 帮助手册。
:::
:::
::: section
::: titlepage
# [⁠]{#virtual-file-systems-disk-management.html#gvfs-tools-xdg-utils}15.8. GNOME 中的 GVFS 工具和 xdg-utils {.title}
:::
::: para
"`GVFS`{.systemitem}"与一些可能有助于脚本编制或测试的命令一起推出。提供一组
POSIX 命令的对应命令：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `gvfs-cat`{.command}
    :::
-   ::: para
    `gvfs-less`{.command}
    :::
-   ::: para
    `gvfs-mkdir`{.command}
    :::
-   ::: para
    `gvfs-mount`{.command}
    :::
-   ::: para
    `gvfs-rename`{.command}
    :::
-   ::: para
    `gvfs-set-attribute`{.command}
    :::
-   ::: para
    `gvfs-copy`{.command}
    :::
-   ::: para
    `gvfs-ls`{.command}
    :::
-   ::: para
    `gvfs-move`{.command}
    :::
-   ::: para
    `gvfs-rm`{.command}
    :::
-   ::: para
    `gvfs-trash`{.command}
    :::
-   ::: para
    `gvfs-info`{.command}
    :::
-   ::: para
    `gvfs-save`{.command}
    :::
-   ::: para
    `gvfs-tree`{.command}
    :::
:::
::: para
为了更好地控制"`GVFS`{.systemitem}"的特性，提供了一些附加命令：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `gvfs-monitor-dir`{.command}
    :::
-   ::: para
    `gvfs-monitor-file`{.command}
    :::
-   ::: para
    `gvfs-mime`{.command}
    :::
-   ::: para
    `gvfs-open`{.command}
    :::
:::
::: para
所有这些命令都是本机 GIO
客户端，不需要运行后备守护程序"`FUSE`{.systemitem}"。它们的目的是不要成为
POSIX
命令的插入式替代，实际上，它们支持很小范围内的交换。在基本形式之下，一条
URI 字符串（而非一条本地路径）看成一个参数。
:::
::: para
这些都使得 GNOME 在"`xdg-tools`{.systemitem}"（一个 freedesktop.org
互操作性项目）中得到很好的支持。例如，当检测到一个正在运行的 GNOME
会话时，经常使用的"`xdg-open`{.systemitem}"实际上会调用"`gvfs-open`{.systemitem}"，并从正确的位置读取文件类型关联。
:::
::: para
以下是 GVFS 命令使用情况的一些例子：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    如需在 `/tmp`{.filename} 中列出本地文件系统上的所有文件，请执行：
    :::
    ``` programlisting
      $ gvfs-ls file:///tmp
    ```
-   ::: para
    以下命令列出了来自远程计算机的文本文件的内容：
    :::
    ``` programlisting
      $ gvfs-cat ssh://PI:EMAIL/home/joe/todo.txt
    ```
-   ::: para
    如需将引用的文本文件复制到本地目录 `/tmp`{.filename} 中，请运行：
    :::
    ``` programlisting
      $ gvfs-copy ssh://PI:EMAIL/home/joe/todo.txt /tmp/
    ```
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
为了方便用户，提供"`bash`{.systemitem}"自动完成功能作为软件包的一部分：
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#virtual-file-systems-disk-management.html#using-gvfs-metadata}15.9. 使用 GVFS 元数据 {.title}
:::
::: para
"`GVFS`{.systemitem}"将元数据存成一组与特定文件绑定的简单键值/值对信息。因此，用户或应用程序可以使用工具保存一些小数据，它们是为运行时间信息设计的，例如图标位置，最后使用位置，文档、徽标、笔记中的位置等等。
:::
::: para
一旦移动文件或目录，相应的元数据也会移动，以保证它和对应文件保持联系。"`GVFS`{.systemitem}"私下存储所有元数据，以便它仅在该计算机上可用。但是也会追踪"`GVFS`{.systemitem}"装载和可移动媒体。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
可移动媒体现在安装在 `/run/media/`{.filename} 目录下，而非
`/media`{.filename} 目录下。
:::
:::
:::
::: para
如需查看和操作元数据，您可以使用：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `gvfs-info`{.command} 命令；
    :::
-   ::: para
    `gvfs-set-attribute`{.command} 命令；
    :::
-   ::: para
    或其它任何处理属性的本机
    ``{=html}GIO``{=html} 方式。
    :::
:::
:::
::: para
下例对某个自定义元数据属性进行了设置。请注意在移动或重命名之后，特定的
`gvfs-info`{.command} 调用与数据持久性之间的差异（注意
`gvfs-info`{.command} 命令的输出）：
:::
::: example
[⁠]{#virtual-file-systems-disk-management.html#idm139838620174304}
**例 15.5. 设置自定义的元数据属性**
::: example-contents
``` programlisting
$ touch /tmp/myfile
$ gvfs-info -a 'metadata::*' /tmp/myfile
attributes:
$ gvfs-set-attribute -t string /tmp/myfile 'metadata::mynote' 'Please remember to delete this file!'
$ gvfs-info -a 'metadata::*' /tmp/myfile
attributes:
  metadata::mynote: Please remember to delete this file!
$ gvfs-move /tmp/myfile /tmp/newfile
$ gvfs-info -a 'metadata::*' /tmp/newfile
attributes:
  metadata::mynote: Please remember to delete this file!
```
:::
:::
:::
::: section
::: titlepage
# [⁠]{#virtual-file-systems-disk-management.html#virtual-file-systems-disk-management-troubleshooting}15.10. 疑难解答 {.title}
:::
::: section
::: titlepage
## [⁠]{#virtual-file-systems-disk-management.html#active-vfs-mounts-invisible}15.10.1. 活跃的 VFS 装载不可见 {.title}
:::
::: para
如果您的活跃 VFS 装载不可见，这意味着您的应用程序不是本机 GIO
客户端。通常，本机 GIO 客户端是指所有使用 GNOME 库的 GNOME
应用程序（glib、gio）。对于非 GIO
客户端，提供"`gvfs-fuse`{.systemitem}"服务作为后备。
:::
::: para
如需找出 VFS
装载活跃但不可见的原因，请核查"`gvfs-fuse`{.systemitem}"过程是否在运行。由于"`gvfs-fuse`{.systemitem}"自动运行，我们也不建议您自己启动它，请尝试退出和登录作为首选。
:::
::: para
另一种选择是，您可以在终端手动开启 VFS 兼容性装载：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    通过运行 `id`{.command} 命令找出 `/run/user/UID/gvfs/`{.filename}
    路径的系统用户
    ID"`UID`{.systemitem}"（守护程序"`gvfsd-fuse`{.systemitem}"需要一条用于显示其服务的路径）。
    :::
    ::: para
    或者，如果 `/run/user/UID/gvfs/`{.filename}
    路径不可用，"`gvfsd-fuse`{.systemitem}"会使用您家目录下的
    `.gvfs`{.filename} 路径。
    :::
2.  ::: para
    通过运行 `/usr/libexec/gvfsd-fuse -f /run/user/UID/gvfs`{.command}
    命令，来启动"`gvfsd-fuse`{.systemitem}"守护程序。
    :::
3.  ::: para
    现在，``{=html}VFS``{=html}
    装载可供使用，且您可以在应用程序中手动浏览路径。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#virtual-file-systems-disk-management.html#connected-disk-invisible}15.10.2. 连接的 USB 磁盘不可见 {.title}
:::
::: para
在某些情况下，当您连接了一个闪存驱动器时，GNOME
桌面并没有将它显示出来。如果驱动器不可见，这意味着：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    您无法在[**磁盘**]{.application}应用程序中看到该设备。
    :::
-   ::: para
    您运行了 `udisksctl dump`{.code}
    命令，它会列出守护程序"`udisks`{.systemitem}"的当前状态，并显示除您的闪存驱动器之外所有对象的信息。
    :::
-   ::: para
    您运行了 `dmesg`{.command} 命令。在记录末端有一些关于 USB
    设备检测的消息，以及一张除您的闪存驱动器之外的已检测到分区的列表。
    :::
:::
::: para
如果您的闪存驱动器不可见，您可以尝试设置[**磁盘**]{.application}中的"[**在用户界面显示**]{.guimenuitem}"标志：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    通过按 [**Super**]{.keycap} 键进入"`活动概览`{.systemitem}"，并输入
    **`Disks`**，然后按
    [**Enter**]{.keycap}，来打开"[**磁盘**]{.guilabel}"。
    :::
2.  ::: para
    在"[**卷**]{.guimenu}"操作菜单中，点击"[**编辑装载选项\...**]{.guimenuitem}"。
    :::
3.  ::: para
    点击"[**在用户界面显示**]{.guilabel}"。
    :::
4.  ::: para
    通过点击"[**OK**]{.guibutton}"确认。
    :::
:::
::: para
如果仍不显示闪存驱动器，您可以尝试移除驱动器再重新连接。
:::