title:Chosen-ciphertext secure proxy re-encryption
author:Ran Canetti and
Susan Hohenberger
Chosen-Ciphertext Secure Proxy Re-Encryption
Ran Canetti∗
IBM T.J. Watson Research Center
Susan Hohenberger†
The Johns Hopkins University
ABSTRACT
In a proxy re-encryption (PRE) scheme, a proxy is given spe-
cial information that allows it to translate a ciphertext under
one key into a ciphertext of the same message under a diﬀer-
ent key. The proxy cannot, however, learn anything about
the messages encrypted under either key. PRE schemes
have many practical applications, including distributed stor-
age, email, and DRM. Previously proposed re-encryption
schemes achieved only semantic security; in contrast, ap-
plications often require security against chosen ciphertext
attacks. We propose a deﬁnition of security against chosen
ciphertext attacks for PRE schemes, and present a scheme
that satisﬁes the deﬁnition. Our construction is eﬃcient
and based only on the Decisional Bilinear Diﬃe-Hellman as-
sumption in the standard model. We also formally capture
CCA security for PRE schemes via both a game-based def-
inition and simulation-based deﬁnitions that guarantee uni-
versally composable security. We note that, simultaneously
with our work, Green and Ateniese proposed a CCA-secure
PRE, discussed herein.
Categories and Subject Descriptors: E.3 [Data En-
cryption]: Public Key Cryptosystems.
General Terms: Security, Algorithms, Theory.
Keywords: Encryption, Re-encryption, Chosen-Ciphertext
Security, Obfuscation.
1.
INTRODUCTION
Encryption is one of the most fundamental cryptographic
functions, and yet its practical adoption is often hampered
by key management problems. Suppose pk1 and pk 2 are
two independently chosen encryption keys. As pointed out
by Mambo and Okamoto [23], it is a common situation in
∗Supported by NSF grants CT-0430450 and CFF-0635297,
and a US-Israel Binational Science Foundation Grant.
†Research partially performed at IBM Zurich Research Lab-
oratory and supported by NSF grant CT-0716142.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’07, October 29–November 2, 2007, Alexandria, Virginia, USA.
Copyright 2007 ACM 978-1-59593-703-2/07/0010 ...$5.00.
practice that data is encrypted under pk 1 and an applica-
tion requires that it be encrypted under pk 2. When the
holder of sk 1 is online, this translation is easy: E1(m) is
decrypted using sk 1 to obtain m, then m is encrypted under
pk 2, resulting in E2(m). Yet in many applications— such as
encrypted email forwarding [6, 5], distributed ﬁle systems [1,
2], or the DRM of Apple’s iTunes [26] —this translation is
being performed by an untrusted party! As a demonstration
of the email forwarding scenario, imagine that Alice is going
on vacation and wishes to have her mail server forward all
of her encrypted email to Bob, without giving her secret key
to either the mail server or Bob.
In 1998, Blaze, Bleumer and Strauss (BBS) proposed a
solution to this widely-encountered key management prob-
lem [6, 5]. They introduced proxy re-encryption, where a
(potentially untrusted) proxy is given a re-encryption key
rk 1,2 that allows it to translate a message m encrypted un-
der public key pk 1 into an encryption of the same message
m under a diﬀerent public key pk 2 – without being able
to learn anything about the encrypted messages! I.e., the
CPA-security of encryptions under pk 1 and pk 2 hold even
against an adversary possessing rk 1,2.
BBS categorize two types of re-encryption schemes. If the
re-encryption key rk 1,2 necessarily allows the proxy to trans-
late ciphertexts under pk 1 into ciphertexts under pk 2 and
vice versa, then the scheme is called bidirectional. If the re-
encryption key rk 1,2 allows the proxy to translate only from
pk 1 to pk 2, then the scheme is called unidirectional. (Any
unidirectional scheme can be easily transformed to a bidirec-
tional one, setting the bidirectional key rk 1,2 to be the two
unidirectional keys between pk 1 and pk 2. We do not know
if the converse holds.) BBS propose the ﬁrst bidirectional
CPA-secure scheme, leaving the construction of a unidirec-
tional scheme as an open problem. In 2005, Ateniese, Fu,
Green, and Hohenberger [1, 2] presented a unidirectional
CPA-secure scheme. Capturing this useful property comes
at a price: the re-encryption algorithm is single-hop; that is,
a re-encrypted ciphertext cannot be further re-encrypted.
In contrast, the BBS scheme is multi-hop, namely a cipher-
text can be re-encrypted from Alice to Bob to Carol and so
on. Constructing a multi-hop unidirectional PRE scheme
remains open. Both of these PRE algorithms are only CPA-
secure, and CPA security is often not suﬃcient to guarantee
security in general protocol settings.
1.1 Our Contributions
We address the problem of obtaining PRE schemes that
are secure in arbitrary protocol settings, or in other words
are secure against chosen ciphertext attacks. The concept of
185a CCA secure PRE scheme sounds almost self-contradictory,
since on the one hand we want the ciphertexts to be non-
malleable, and on the other hand we want to allow the proxy
to “translate” the ciphertext from one public key to another.
Still, we formulate a meaningful deﬁnition of CCA-secure
PRE schemes, along with a construction that meets the def-
inition in the standard model and under relatively mild hard-
ness assumptions for bilinear groups.
Definitions. We formalize deﬁnitions of security against
CCA attacks for re-encryption schemes. In fact, we provide
three deﬁnitions: a game-based deﬁnition and two simulation-
based deﬁnitions that guarantee universally composable se-
curity. We then demonstrate that the game-based deﬁnition
lies in between the two simulation-based deﬁnitions.
The game-based deﬁnition gives the adversary access to
the standard encryption and decryption oracles, in addi-
tion to a re-encryption oracle (which translates ciphertexts)
and a re-encryption key oracle (which returns re-encryption
keys). For the deﬁnition to make sense, one needs to deﬁne
the game so as to disallow decryption queries not only on
the challenge ciphertext (as usual), but also on any trivial
derivative of the challenge ciphertext (e.g., derivatives ob-
tained from a re-encryption).
The simulation-based deﬁnitions are formulated within
the universally composable (UC) framework [9]. They ex-
tend the ideal functionality for CCA-secure encryption [9]
to the case of re-encryption, using ideas from the UC def-
inition of replayable CCA (RCCA) security [13]. (Indeed,
PRE security is somewhat reminiscent of RCCA security, in
that both notions aim at guaranteeing illegitimate “mauling”
of ciphertexts, while permitting legitimate “re-encrypting”
without modifying the hidden message.) The need to pro-
vide two separate UC formulations (one that implies the
game-based deﬁnition and one that follows from it) stems
from the diﬃculty in capturing the adaptive nature of re-
encryption queries. See more details within.
Constructions. We present a re-encryption scheme se-
cure against chosen-ciphertext attacks. Our scheme is bidi-
rectional and multi-hop. Moreover, our scheme is eﬃcient
enough to be used in practice. We prove it secure under the
Decisional Bilinear-Diﬃe Hellman assumption. For clarity,
we present two constructions. First we present and analyze
a scheme in the random oracle model. This scheme is sim-
pler and provides intuition into the techniques used. Next
we modify the scheme to work in the standard model. The
modiﬁed scheme and its analysis are somewhat more com-
plicated, but only slightly less eﬃcient.
As in other re-encryption schemes [6, 5, 1, 2, 21, 18], we
work in a static adversary model and require that users pub-
licize public keys only if they have the corresponding secret
keys. To make this second requirement rigorous, we can
either work in the trusted key generation model (where a
trusted party generates and distributes all key-pairs), or al-
ternatively in a model where the parties have to demonstrate
knowledge of their secret keys when registering their public
keys (such as the key registration model of Barak et al. [3]).
We prove that the schemes satisfy the game-based deﬁni-
tion. The proof turns out to be non-trivial; in particular, in
some cases, one must correctly answer re-encryption queries
without knowing the corresponding re-encryption key.
In
fact, the technique we use in the analysis of the scheme is
new and may be useful elsewhere.
We leave open many interesting problems in this area,
such as designing: (1) unidirectional CCA-secure schemes
(without random oracles), (2) any construction that is si-
multaneously unidirectional and multi-hop, (3) any unidi-
rectional or CCA-secure scheme without bilinear groups,
(4) schemes that satisfy the notion of secure obfuscation for
CCA-secure re-encryption or other key translation schemes,
(5) a CCA-secure PRE scheme that provides unlinkability
for re-encrypted ciphertexts, and (6) a deﬁnition of secu-
rity that is equivalent to our game-based deﬁnition and also
guarantees secure composability properties.
Practical Impact.
In 2005, the digital rights manage-
ment (DRM) of Apple’s iTunes was compromised partially
due to the fact that an untrusted party (i.e., the client’s
resource) could obtain the plaintext during a naive decrypt-
and-encrypt operation, albeit with symmetric encryption [26].
This ﬂaw could be prevented by using a secure PRE scheme.
Ateniese et al. [1, 2] built a secure distributed ﬁle system,
using unidirectional PRE, where a server can re-encrypt and
send ﬁles to many diﬀerent clients without ever gaining ac-
cess to the plaintext.
However, plain CPA-security is clearly not enough for
some applications, such as encrypted email forwarding. For
instance, an adversary might hope to gain access to a “de-
cryption oracle” by mangling ciphertexts, emailing them to
Alice, and then hoping that she responds with, “Did you
send the following to me? [Decrypted attachment.]” The
present work ﬁlls this gap.
Theoretical Impact. Recently, the notion of re-encryption
was considered in the more general framework of program
obfuscation. Hohenberger, Rothblum, shelat, and Vaikun-
tanathan [21] presented a unidirectional, CPA-secure re-
encryption scheme, where the re-encryption key allows the
proxy to learn nothing more than black-box access to such a
program. This positive result for obfuscating an encryption
functionality stands in contrast to a series of impossibility
results [4] for general obfuscation and negative improbabil-
ity [20, 16] results for obfuscation of many cryptographic
functionalities. Here we relax this obfuscation notion and
only require that the proxy learn nothing about the en-
crypted messages (but the proxy might learn other things
not exposed by black-box access.) In particular, our notion
of security allows for a deterministic re-encryption proce-
dure, whereas the obfuscation notion of [21] mandates that
the re-encryption process be randomized.
1.2
Intuition Behind the Construction
The idea behind our construction begins with the Canetti,
Halevi, and Katz [11] paradigm for transforming any selective-
identity, CPA-secure identity-based encryption (IBE) scheme
into a CCA-secure cryptosystem. Recall the CHK transfor-
mation. Let (G,S,V) be a strongly-unforgeable one-time sig-
nature scheme. Let (G, E, D) be a semantically-secure IBE
scheme. Then a CCA-secure cryptosystem can be created as
follows. A user’s public key corresponds to the master public
key output by G. To encrypt a message m, an encryptor ﬁrst
runs G to obtain a signature keypair (svk , ssk ). The encryp-
tor then generates the ciphertext c = E(svk , m), using svk as
the identity, and signs this ciphertext as s = S(ssk , c). The
output of the encryption algorithm is the tuple (svk , c, s).
To decrypt, a user ﬁrst checks that V(svk , c, s) veriﬁes, and
if so, proceeds to decrypt c using the master secret key.
Now, there are many similarities between the Boneh and
Franklin IBE [8] and the Ateniese et al. PRE [1]. Can we
simply apply the CHK paradigm to achieve CCA security?
Unfortunately, applying the CHK paradigm to the Boneh-
Franklin IBE looks unwieldy at ﬁrst. These IBE ciphertexts
have two parts: let c = (X, Y ). If the encryptor signs (X, Y )
in the CHK transformation, then the proxy can’t re-encrypt
(X, Y ) without invalidating the signature. But if the encryp-
tor only signs, say, Y , then the adversary can arbitrarily mu-
tate X, thus changing the decryption value. Our solution is
to add an element Z to the ciphertext, such that (Y, Z) will
be signed and Z allows anyone to check that the unsigned
value X wasn’t mutated in any meaningful way.
The primary technical challenge is to prove this scheme
secure via a reduction that can successfully answer the nu-
merous oracle queries allowed to the re-encryption adver-
sary.
In Section 3.2, we ﬁrst show how to navigate these
queries in the random oracle model, which simpliﬁes the