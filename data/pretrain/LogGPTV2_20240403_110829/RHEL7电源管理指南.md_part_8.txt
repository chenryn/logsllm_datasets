::: para
`cpupower frequency-info`{.command} 有以下可用选项：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `--freq`{.command} --- 根据 CPUfreq 核显示该 CPU 的当前速度，单位为
    KHz。
    :::
    []{#Core_Infrastructure.html#idm139882398276192
    .indexterm}[]{#Core_Infrastructure.html#idm139882412978992
    .indexterm}[]{#Core_Infrastructure.html#idm139882399253392
    .indexterm}
-   ::: para
    `--hwfreq`{.command} --- 根据硬件显示 CPU 的当前速度，单位为
    KHz（仅限 root 用户）。
    :::
    []{#Core_Infrastructure.html#idm139882414130048
    .indexterm}[]{#Core_Infrastructure.html#idm139882384794416
    .indexterm}[]{#Core_Infrastructure.html#idm139882419486208
    .indexterm}
-   ::: para
    `--driver`{.command} --- 显示这个 CPU 中用来设定频率的 CPUfreq
    驱动器。
    :::
    []{#Core_Infrastructure.html#idm139882411961600
    .indexterm}[]{#Core_Infrastructure.html#idm139882384900352
    .indexterm}[]{#Core_Infrastructure.html#idm139882362294208
    .indexterm}
-   ::: para
    `--governors`{.command} --- 显示此 kernel 上可用的 CPUfreq
    调控器。若您想要使用此文件中未列出的 CPUfreq
    调控器，请查看〈[第 3.2.2 节 "CPUfreq
    设置"](#Core_Infrastructure.html#cpufreq_setup){.xref}〉。
    :::
    []{#Core_Infrastructure.html#idm139882401548624
    .indexterm}[]{#Core_Infrastructure.html#idm139882416395392
    .indexterm}[]{#Core_Infrastructure.html#idm139882400676944
    .indexterm}
-   ::: para
    `--affected-cpus`{.command} --- 列出需要频率协调软件的 CPU。
    :::
    []{#Core_Infrastructure.html#idm139882412270000
    .indexterm}[]{#Core_Infrastructure.html#idm139882400740784
    .indexterm}[]{#Core_Infrastructure.html#idm139882414283376
    .indexterm}
-   ::: para
    `--policy`{.command} --- 显示当前 CPUfreq 策略范围，单位为
    KHz，以及当前活跃的调控器。
    :::
    []{#Core_Infrastructure.html#idm139882384852416
    .indexterm}[]{#Core_Infrastructure.html#idm139882384850496
    .indexterm}[]{#Core_Infrastructure.html#idm139882384901120
    .indexterm}
-   ::: para
    `--hwlimits`{.command} --- 列出该 CPU 的可用频率，单位为 KHz。
    :::
    []{#Core_Infrastructure.html#idm139882407514864
    .indexterm}[]{#Core_Infrastructure.html#idm139882384849840
    .indexterm}[]{#Core_Infrastructure.html#idm139882384847920
    .indexterm}
:::
::: para
`cpupower frequency-set`{.command} 有以下可用选项：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `--min `{.command} 和 `--max `{.command} --- 设定 CPU 的
    "*策略限制*"，单位为 KHz。
    :::
    []{#Core_Infrastructure.html#idm139882415751552
    .indexterm}[]{#Core_Infrastructure.html#idm139882416208496
    .indexterm}[]{#Core_Infrastructure.html#idm139882416206576
    .indexterm}
    ::: important
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    []{#Core_Infrastructure.html#idm139882414131328
    .indexterm}[]{#Core_Infrastructure.html#idm139882407536176
    .indexterm}[]{#Core_Infrastructure.html#idm139882413533152
    .indexterm}
    ::: para
    当设定策略限制时，您应该在设定 `--min`{.filename} 前设定
    `--max`{.filename}。
    :::
    :::
    :::
-   ::: para
    `--freq `{.command} --- 为 CPU 设定具体时钟速度，单位为
    KHz。您只能选择一个在 CPU 策略限制范围内的速度（即
    `--min`{.filename} 和 `--max`{.filename} 之间的数值）。
    :::
    []{#Core_Infrastructure.html#idm139882400593376
    .indexterm}[]{#Core_Infrastructure.html#idm139882400591456
    .indexterm}[]{#Core_Infrastructure.html#idm139882360347392
    .indexterm}
-   ::: para
    `--governor `{.command} --- 设定新的 CPUfreq 调控器。
    :::
    []{#Core_Infrastructure.html#idm139882414180336
    .indexterm}[]{#Core_Infrastructure.html#idm139882363158432
    .indexterm}[]{#Core_Infrastructure.html#idm139882363156512
    .indexterm}
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
如果您没有安装 [cpupowerutils]{.package} 软件包，则可在
`/sys/devices/system/cpu/[cpuid]/cpufreq/`{.filename} 的可微调部分查看
CPUfreq 设置。通过写入这些 tunables 即可更改设置和数值。例如：要将 cpu0
的最低时钟速度设定为 360 KHz，请使用：
``` screen
echo 360000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
```
:::
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#cpu_monitors}3.3. CPU 监视器 {.title}
:::
::: para
[**cpupower**]{.application}
包括一组提供闲置和休眠状态统计和频率信息的监视程序，同时还报告处理器拓扑。有些监视程序是具体应用到处理器中，而另一些可与其他处理器兼容。有关监视程序测量哪些处理器及其兼容的系统，请参考
`cpupower-monitor`{.command} man page。
:::
::: para
请在 `cpupower-monitor`{.command} 命令中使用以下选项：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `-l`{.command} --- 列出您系统中的所有可用监视程序。
    :::
-   ::: para
    `-m , `{.command} --- 显示具体的监视程序。可运行
    `-l`{.command} 命令查找其识别符号。
    :::
-   ::: para
    `command`{.command} --- 显示闲置统计数据以及 CPU 所需的具体命令。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#cpu_power_saving}3.4. CPU 节电策略 {.title}
:::
::: para
[**cpupower**]{.application} 提供管理处理器节电策略的方法。
:::
::: para
请在 `cpupower-set`{.command} 命令中使用以下选项：
:::
::: variablelist
[\--perf-bias *\*]{.term}
:   ::: para
    可让所支持的英特尔处理器中的软件更多参与如何确定最佳性能和节电之间的平衡。这不会覆盖节电策略。可分配数值的范围为
    0 到 15，其中 0 为最佳性能，15 为最佳用电效率。
    :::
    ::: para
    默认在所有核中应用这个选项。要只在某一个核中应用它，请添加
    `--cpu `{.command} 选项。
    :::
[\--sched-mc \]{.term}
:   ::: para
    在从其他 CPU 软件包中提取前，将系统进程使用的电源限制在一个 CPU
    软件包的核中。0 代表没有限制，1 代表开始只使用单一 CPU 软件包，2
    代表除了使用单一 CPU 软件包之外，另外还使用半闲置 CPU
    软件包处理唤醒的任务。
    :::
[\--sched-smt \]{.term}
:   ::: para
    在从其它的核中提取前，将系统进程使用的电源限制在一个 CPU
    核的同级线程中。0 代表没有限制，1 代表开始只使用单一 CPU 软件包，2
    代表除了使用单一 CPU 软件包之外，另外还使用半闲置 CPU
    包处理唤醒的任务。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#Suspend_and_Resume}3.5. 挂起和恢复 {.title}
:::
::: para
当系统挂起时，kernel
会调用驱动程序保存其状态然后将其卸载。当系统恢复时，它会载入这些试图重新编程其设备的驱动程序。驱动程序完成这个任务的能力决定了系统是否可以被成功恢复。
:::
::: para
就这一点而言，视频驱动程序是最成问题的，这是因为"*高级配置和电源界面*"（ACPI）规范不要求系统固件能够重新编程视频硬件。因此，除非视频驱动程序可以从完全非启动状态编程硬件，否则它们可能会阻止系统恢复。
:::
::: para
Red Hat Enterprise Linux 7
包括对新图形芯片组的更大支持，这个支持可确保挂起和恢复功能在大量平台中正常工作。此版本特别对
NVIDIA 芯片组进行了大量改进，也特别针对 GeForce 8800 系列进行了改进。
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#ASPM}3.6. 活动状态电源管理 {.title}
:::
::: para
*ASPM*（Active-State Power Management，活动状态电源管理）能节省 *PCI
Express*（PCIe，Peripheral Component Interconnect
Express）子系统的电量，其原理为当 PCIe
连接没有处于使用状态时将其设定为低功率状态。ASPM
可以同时控制连接两端的电源状态，并且在连接终端的设备处于满电状态的情况下，仍然可以节电。
:::
::: para
启用 ASPM
时，在不同电源状态间转换连接时需要时间，因此会增加设备延迟。ASPM
有三种决定电源状态的策略：
:::
::: variablelist
[默认（default）]{.term}
:   ::: para
    根据系统固件（例如：BIOS）指定的默认设置设定 PCIe
    连接的电源状态。这是 ASPM 的默认状态。
    :::
[节电（powersave）]{.term}
:   ::: para
    将 ASPM 设定为尽可能节电，不考虑性能损失。
    :::
[性能（performance）]{.term}
:   ::: para
    禁用 ASPM 使 PCIe 链接以最佳性能操作。
    :::
:::
::: para
使用 *`pcie_aspm`* kernel 参数可以启用或者禁用 ASPM，其中
`pcie_aspm=off`{.literal} 会禁用 ASPM，而 `pcie_aspm=force`{.literal}
会启用 ASPM，即使在不支持 ASPM 的设备中也可以。
:::
::: para
ASPM 策略在 `/sys/module/pcie_aspm/parameters/policy`{.filename}
中设置，但还可以使用 *`pcie_aspm.policy`* kernel 参数在启动时指定，其中
`pcie_aspm.policy=performance`{.literal} 将设定 ASPM 性能策略。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告 --- `pcie_aspm=force`{.literal} 可导致系统停止响应**
:::
::: admonition
::: para
如果设定了 `pcie_aspm=force`{.literal}，不支持 ASPM
的硬件可导致系统停止响应。请在设定 `pcie_aspm=force`{.literal}
前确定系统中的所有 PCIe 硬件都支持 ASPM。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#ALPM}3.7. 主动连接电源管理 {.title}