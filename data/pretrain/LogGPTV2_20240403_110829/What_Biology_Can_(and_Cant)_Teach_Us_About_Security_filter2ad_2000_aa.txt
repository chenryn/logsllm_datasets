title:What Biology Can (and Can't) Teach Us About Security
author:David Evans
What Biology 
Can (and Can’t) 
Teach us about 
Security
USENIX Security Symposium
San Diego, CA
12 August 2004
David Evans
University of Virginia
Computer Science
Nature vs. the Real World
(Computer Systems)
• Competition for 
limited resources
• Parasites that can’t 
reproduce on their 
own steal resources 
from others
• Can take millions of 
years to evolve 
solutions to known 
security problems
• Competition for limited 
•
resources
“The next geeky kid frustrated about not 
getting a date on Saturday night will come 
along and do the same thing without really 
understanding the consequences. So either 
we should make it a law that all geeks have 
dates – I’d have supported such a law when I 
was a teenager - or the blame is really on the 
companies who sell and install the systems 
that are quite that fragile.” Linus Torvalds, 
NYT Sept 2003
• 25 years later, buffer 
overflows are still the 
main problem
www.cs.virginia.edu/evans/usenix04
2
Brute Force Attacks
Image courtesy Leeson Photography
www.cs.virginia.edu/evans/usenix04
3
Communication Integrity Attacks
• Emits chemicals that mimic 
pheromones of female 
moth
• Eats the male moths
• Very specialized: moth 
pheromones are species-
unique blends of chemicals
– Bolas can attract 2 different 
species
Image © Australian Museum
Bolas Spider
– Adjusts its emissions based 
on time of night each moth is 
active
www.cs.virginia.edu/evans/usenix04
4
Critter-in-the-Middle Attacks (CITM)
Blister beetle (Meloefranciscanus)
Beetle larvae
aggregate to 
look (and 
smell!) like a 
female bee
Male bee tries to 
have sex with it; 
fails, but beetle 
larvae stick to 
him
Male bee finds 
real female bee, 
beetle larvae 
transferred
Beetles get fat 
eating pollen female 
bee brings for her 
children
Hafernik and Saul-Gershenz (2000) 
Images from IzikoMuseums of Cape Town
www.cs.virginia.edu/evans/usenix04
5
Outline
(cid:57)Nature has security problems and 
solutions
• Process
– Evolution
• Programs (what results): genotype
• Executions (what they produce): phenotype
www.cs.virginia.edu/evans/usenix04
6
Let’s set the existence-of-God issue aside for a 
later volume, and just stipulate that in some way, 
self-replicating organisms came into existence on 
this planet and immediately began trying to get rid 
of each other, either by spamming their 
environments with rough copies of themselves, or 
by more direct means which hardly need to be 
belabored.  Most of them failed, and their genetic 
legacy was erased from the universe forever, but a 
few found some way to survive and to propagate. 
After about three billion years of this sometimes 
zany, frequently tedious fugue of carnality and 
carnage, Godfrey Waterhouse IV was born... 
Neal Stephenson, Cryptonomicon
www.cs.virginia.edu/evans/usenix04
7
Like every other creature on the face of the earth, 
Godfrey was, by birthright, a stupendous badass, 
albeit in the somewhat narrow technical sense 
that he could trace his ancestry back up a long 
line of slightly less highly evolved stupendous 
badasses to the first self-replicating gizmo ---
which, given the number and variety of its 
descendants, might justifiably be described as the 
most stupendous badass of all time.  Everyone 
and everything that wasn't a stupendous badass 
was dead.
Neal Stephenson, Cryptonomicon
www.cs.virginia.edu/evans/usenix04
8
Remarkable Existence
• Every one of your ancestors survived long 
enough to reproduce!
• Probability of surviving to reproduce ~ 0.8 
• Number of human generations ~ 3000
(0.8)3000 = 1/10291
1
• But, don’t stop with humans…
www.cs.virginia.edu/evans/usenix04
9
Two Important Clarifications
• Its all about reproduction:
Survival is necessary but not sufficient
• Unit is gene, not organism
– An animal is just a vessel for propagating 
genes
– An organism may appear to act unselfishly, 
but genes are always selfish (even if 
cooperating in groups is a good strategy) 
Richard Dawkins, The Selfish Gene
www.cs.virginia.edu/evans/usenix04
10
Evolutionary Computing
• Genetic Algorithms
– Very impressive results on optimization 
problems
• Genetic Programming
– Demonstrated inventiveness 
• 2 patentable inventions, 21 infringing [Koza]
www.cs.virginia.edu/evans/usenix04
11
Why the process won’t help us
• Really slow
– 3 Billion years of evolution on Earth
• Almost always fails
– ~99.9% of species become extinct
• Can’t reason about results
– Happened to thrive in this particular 
environment…no idea what will happen in 
a different one
www.cs.virginia.edu/evans/usenix04
12
…but the Results Can
• Process
– Evolution
• Programs (what results)
– Genotype
• Executions (what they produce)
– Phenotype
www.cs.virginia.edu/evans/usenix04
13
Brief History of Biology
1850
1950
2000
Life is
about
magic.
(“vitalism”)
Life is
about
chemistry.
Life is
about
information.
Life is
about
computation.
Most biologists work on Classification
Aristotle (~300BC) - genera and species
Descartes (1641)
explain life mechanically
Schrödinger (1944)
life is information
crack the information code
Oswald Avery (1944)
information separate from 
proteins
Watson and Crick (1953)
DNA structure, replication
www.cs.virginia.edu/evans/usenix04
14
CC
TT
GG
AA
DNA
• Sequence of nucleotides: 
adenine (A), guanine 
(G), cytosine (C), and 
thymine (T)
• Groups of three 
nucleotides (codons) 
encode amino acids (20) 
and stop/start
• Two strands, A must 
attach to T and G must 
attach to C
– Enables copying and 
transcription
www.cs.virginia.edu/evans/usenix04
15
Central Dogma of Biology
(Crick, 1957)
Transcription
Translation
RNA
DNA
• DNA makes RNA
• RNA leaves nucleus and makes proteins
• Proteins make people
Protein
Image from http://www.umich.edu/~protein/
www.cs.virginia.edu/evans/usenix04
16
Shortest (Known) Life Program 
• Nanoarchaeum equitans
– 490,885 bases (522 genes) ≈ 40 KB
– Parasite: no metabolic capacity, 
must steal from host (smallest
autonomous ~ 1.6 million bases)
http://www.mediscover.net/Extremophiles.cfm
KO Stetter and Dr Rachel Reinhard
– Complete components for information processing: 
transcription, replication, enzymes for DNA repair
• Size of compiling C++ “Hello World”: 
Windows (bcc32): 112,640 bytes
11,358 bytes
Linux (g++): 
www.cs.virginia.edu/evans/usenix04
17
The Make-Human Program
• 3 Billion Base Pairs
– Each nucleotide is 2 bits (4 possibilities)
– 3B bases * 1 byte/4 pairs = 750 MB 
– Highly redundant encoding (21/64) ~ 250 MB 
• Only ~5% is transcribed (exons) ~ 12 MB
– 95% junk (introns): genomes from viruses  
reverse transcribed into human genome, but 
inactive
www.cs.virginia.edu/evans/usenix04
18
Expressiveness of DNA
Genetic sequence for 2 humans differs 
in only 2 million bases
My Favorite
Genomes
1. D. Evans
2. M. Hamm
3. T. Jefferson
< 1/2 of a floppy disk
<1% of Windows 2000
www.cs.virginia.edu/evans/usenix04
19
2004 Projected Budgets
s
n
o
i
l
l
i
B
$
30
25
20
15
10
5
0
NIH
NSF
DARPA
Why Haven’t We Cured Cancer Yet?
www.cs.virginia.edu/evans/usenix04
20
Gene Interactions
• Not so simple: cells in an organism have 
the same DNA, but do different things
– Structural genes: make proteins that make us
– Regulator genes: control rate of transcription 
of other genes
The genome contains not only a series of blue-prints,
but a coordinated program of protein synthesis and
the means for controlling its execution.
François Jacob and Jacques Monod, 1961
www.cs.virginia.edu/evans/usenix04
21
SaccharomycesCerevisiae
(Yeast) Protein Interactions,
4825 proteins, ~15,000 interactions
Bader and Hogue, Nature 2002
www.cs.virginia.edu/evans/usenix04
22
Split Genes
• Richard Roberts and Phillip Sharp, 1977 
• Not so simple – genome is spaghetti 
code (exons) with lots of 
noops/comments (introns)
• Exons can be spliced together in 
different ways before transcription
• Possible to produce 100s of different 
proteins from one gene
www.cs.virginia.edu/evans/usenix04
23
Why Biologists Haven’t Done Much 
Useful with the Human Genome Yet
They are trying to debug highly 
concurrent, asynchronous, type-unsafe, 
multiple entry/exit, self-modifying 
programs that create programs that create 
programs running on an undocumented, 
unstable, environmentally-sensitive OS by 
looking at the bits (and figuring out what 
any instruction does is an NP-hard 
problem) 
www.cs.virginia.edu/evans/usenix04
24
Observations About 
Nature’s Programs
• Expressive
• Redundant
• Aware of Surroundings
• Localized
• Cannot be rebooted, install patches, 
etc. (except for humans with medicine)
www.cs.virginia.edu/evans/usenix04
25
Need for Robustness
• Evolution selects based on phenotype
• For natural selection to work, there 
must be a stable, reliable mapping 
between genotypes and phenotypes
– Organism must develop successfully
– Environment is variable
– Transcription errors will occur
www.cs.virginia.edu/evans/usenix04
26
Redundancy
• Gene: Multiple ways to encode one amino acid
• Genome: Multiple copies of genes
• Genetic pathways: multiple regulators
• Metabolic pathways
• Cells: trillions of cells (billions of yours have died 
since I started talking) 
• Organs: multiple organs (2 kidneys)
• Function: different organs can assume same 
function
www.cs.virginia.edu/evans/usenix04
27
Awareness of Self and Surroundings
www.cs.virginia.edu/evans/usenix04
28
Scalable
Segmentation in Drosophilia (Fruit Fly)
Hunchback
Even-Skipped
Images from FlyEx, 
© David Kosman
and John Reinitz
www.cs.virginia.edu/evans/usenix04
29
Mimicking Nature’s Programs
• If we can build programs that are:
– Redundant
– Aware of Surroundings
– Localized
will they share nature’s scalability, 
robustness, survivability properties?
www.cs.virginia.edu/evans/usenix04
30
Foundations
Cellular Automata
von Neumann [1940s]
Conway’s Game of Life [1970]
Reaction-Diffusion
Turing [1952]
Recent Work
• Amorphous Computing 
[Abelson, Nagpal, 
Sussman]
• IBM’s Autonomic 
Computing
• Embryonics [Mange, 
Sipper]
• Ant Colony 
Optimization, Swarm 
Intelligence
www.cs.virginia.edu/evans/usenix04
31
Origami Shape Language
www.cs.virginia.edu/evans/usenix04
Radhika Nagpal, 2001
32
Swarm Programming
Behavioral 
Description
Environment
Model
Device
Model
Behavior and primitives 
defined over groups
Device
Programs
Swarm
Program 
Generator
Device
Units
Programmed
Device
Units
Primitives 
Library
Selvin George, David Evans and 
Steven Marchette. A Biological 
Programming Model for Self-Healing.  
Workshop on Survivable and Self-
Regenerative Systems, 2003.
www.cs.virginia.edu/evans/usenix04
33
Long-Range Goal
Cement
10 TFlop
www.cs.virginia.edu/evans/usenix04
34
Mickey Mouse Program
• 20 states
• 50 transition rules