进位或借位
PF（Parity Flag） 2
当计算结果的最低字节中包含偶数个1时，该标志为1
AF（Adjust
Flag）
4
辅助进位标志，当位3（半个字节）处有进位或借位时该标志
为1
ZF（Zero Flag）
6
计算结果为0时，该标志为1，否则为0
SF（Sign Flag）
7
符号标志，结果为负时为1，否则为0
TF（Trap Flag）
8
陷阱标志，详见4.3节
IF（Interrupt
enable Flag）
9
中断标志，为0时禁止响应可屏蔽中断，为1时打开
OF（Overflow
Flag）
11 溢出标志，结果超出机器的表达范围时为1，否则为0
DF（Direction
Flag）
10 方向标志，为1时使字符串指令每次操作后递减变址寄存器
（ESI和EDI），为0时递增
IOPL（I/O
Privilege Level)
12
和
13
用于表示当前任务（程序）的I/O权限级别
NT（Nested Task
flag）
14 任务嵌套标志，为1时表示当前任务是链接到前面执行的任务
的，通常是由于中断或异常触发了IDT表中的任务门
RF（Resume
Flag）
16
控制处理器对调试异常（#DB）的响应，为1时暂时禁止由于
指令断点（是指通过调试寄存器设置的指令断点）导致的调
试异常，详见4.2.5节
VM（Virtual-
8086 Mode flag） 17 为1时启用虚拟8086模式，清除该位返回到普通的保护模式
AC（Alignment
Check flag）
18 设置此标志和CR0的AM标志可以启用内存对齐检查
VIF（Virtual
Interrupt Flag）
19 与VIP标志一起用于实现奔腾处理器引入的虚拟中断机制
VIP（Virtual
Interrupt Pending
flag）
20 与VIF标志一起用于实现奔腾处理器引入的虚拟中断机制
ID（Identification
flag）
21 用于检测是否支持CPUID指令，如果能够成功设置和清除该
标志，则支持CPUID指令
其中，CF位可以由STC和CLC指令来设置和清除，DF位可以由STD
和CLD指令来设置和清除，IF位可以通过STI和CLI指令来设置和清除
（有权限要求），而其他大多数标志都是不可以直接设置和清除的。
2.4.3 MSR寄存器
MSR（Model Specific Register）的本意是指这些寄存器与CPU型号
有关，还没有正式纳入IA-32架构中，也有可能不会被以后的CPU所兼
容。但尽管如此，某些MSR寄存器因为已经被多款CPU所广泛支持也已
经逐渐成为IA-32架构的一部分，比如第6章将介绍的用于机器检查架构
（MCA）的MSR寄存器。MSR寄存器的默认大小是64位，但是有些
MSR的某些位保留不用。每个MSR寄存器除了具有一个简短的帮助记
忆的代号外，还具有一个整数ID用作标识，有时也把MSR寄存器的ID
称为该寄存器的地址。例如，用于控制IA-32e模式的EFER寄存器的地
址是0xC0000080。
RDMSR指令用于读取MSR寄存器，首先应该将要读的MSR的ID放
入ECX寄存器，然后执行RDMSR指令，如果操作成功，返回值会被放
入EDX:EAX中（高32位在EDX中，低32位在EAX中）。WRMSR指令
用来写MSR寄存器，也是先把要写的MSR的ID放入ECX寄存器，并把
要写入的数据放入EDX:EAX寄存器中，然后执行WRMSR指令。
2.4.4 控制寄存器
IA-32 CPU设计了5个控制寄存器CR0～CR4（见图2-4），用来决定
CPU的操作模式以及当前任务的关键特征。其中CR0和CR4包含了很多
与CPU工作模式关系密切的重要标志位，详见表2-2。CR1自从386开始
就一直保留未用。CR2和CR3都与分页机制有关，是实现虚拟内存的基
础。简单来说，CR3用来切换和定位当前正在使用的页表。当软件访问
某个内存地址时，CPU会通过页表做地址翻译，当访问的内存不在物理
内存中而报告缺页异常时，CPU会通过CR2向操作系统报告访问失败的
线性地址。在一个多任务的系统中，通常每个任务都有一套相对独立的
页表。最早引入分页机制的386 CPU定义的页表结构为两级，第一级称
为页目录，第二级称为页表。当前任务的页目录位置便记录在CR3中，
因此CR3又称为页目录基地址寄存器（Page-Directory Base Register，
PDBR）。根据图2-4，CR3包含了页目录的基地址（物理地址）以及两
个用来控制页目录缓存（caching）的标志PCD和PWT。页目录基地址的
低12位被假定为0，因此页目录所在的内存一定是按照页（4KB）边界
对齐的。在2.7节中，我们会详细介绍虚拟内存技术和分页机制。
图2-4 控制寄存器
表2-2 控制寄存器中的标志位
标  志
位
含  义
PE（Protection Enable）
CR0[0]
为1时启用保护模式，为0时代表实地址模式
MP（Monitor Coprocessor） CR0[1]
用来控制WAIT/FWAIT指令对TS标志的检
查，详见2.11节有关设备不可用异常（#NM）
的介绍
EM（Emulation）
CR0[2]
为1时表示使用软件来模拟浮点单元（FPU）
进行浮点运算，为0时表示处理器具有内部的
或外部的FPU
TS（Task Switched）
CR0[3]
当CPU在每次切换任务时设置该位，在执行
x87 FPU和MMX/SSE/SSE2/SS3指令时检查该
位，主要用于支持在任务切换时延迟保存x87
FPU和MMX/SSE/SSE2/SS3上下文
ET（Extension Type）
CR0[4]
对于386和486的CPU，为1时表示支持387数
学协处理器指令，对于486以后的IA-32
CPU，该位保留（固定为1）
NE（Numeric Error）
CR0[5]
用来控制x87 FPU错误的报告方式，为1时启
用内部的本位（native）机制，为0时启用与
DOS兼容的PC方式
WP（Write Protect）
CR0[16] 为1时，禁止内核级代码写用户级的只读内存
页；为0时允许
AM（Alignment Mask）
CR0[18] 为1时启用自动内存对齐检查，为0时禁止
NW（Not Write-through）
CR0[29] 与CD标志共同控制高速缓存有关的选项
CD（Cache Disable)
CR0[30] 与NW标志共同控制高速缓存有关的选项
PG（Paging ）
CR0[31] 为1时启用页机制（paging），为0时禁止
PCD（Page-level Cache
Disable）
CR3[4]
控制是否对当前页目录进行高速缓存
（caching），为1禁止，为0时允许
PWT（Page-level Writes
Transparent）
CR3[3]
控制页目录的缓存方式，为1时启用write-
through方式缓存；为0时启用write-back方式
缓存
VME（Virtual-8086 Mode
Extensions）
CR4[0]
为1时启用虚拟8086模式下的中断和异常处理
扩展：将中断和异常重定向到8086程序的处
理例程以减少调用虚拟8086监视程序
（monitor）的开销
PVI（Protected-Mode
Virtual Interrupts）
CR4[1]
为1时启用硬件支持的虚拟中断标志
（VIF），为0时禁止VIF标志
TSD（Time Stamp
Disable）
CR4[2]
为1时只有在0特权级才能使用RDTSC指令，
为0时所有特权级都可以使用该指令读取时间
戳
DE（Debugging
Extensions）
CR4[3]
为1时引用DR4和DR5寄存器将导致无效指令
（#UD）异常，为0时引用DR4和DR5等价于
引用DR6和DR7
PSE（Page Size
Extensions）
CR4[4]
为1时启用4MB内存页，为0时限制内存页为
4KB
PAE（Physical Address
Extension）
CR4[5]
为1时支持36位或36位以上的物理内存地址，
为0时限定物理地址为32位
MCE（Machine-Check
Enable）
CR4[6]
为1时启用机器检查异常，为0时禁止
PGE（Page Global Enable）
CR4[7]
为1时启用P6处理器引入的全局页功能，为0
时禁止
PCE（Performance-
Monitoring Counter Enable） CR4[8]
为1时允许所有特权级的代码都可以使用
RDPMC指令读取性能计数器，为0时只有在0
特权级才能使用RDPMC指令
OSFXSR（Operating System
Support for FXSAVE and
FXRSTOR instructions）