    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp1s0
    ...
    ```
    如果磁盘中的配置与设备中的配置不匹配，则启动或重启 NetworkManager
    会创建一个代表该设备的配置的内存连接。有关详情以及如何避免此问题，请参阅
    [NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}。
    ::: itemizedlist
    **其他资源**
    -   [测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 44 章 测试基本网络设置"){.link}
    -   `nmtui(1)`{.literal} 手册页
    :::
:::
:::
::: section
::: titlepage
# []{#using-nmtui-to-manage-network-connections-using-a-text-based-interface_configuring-and-managing-networking.html#applying-changes-to-a-modified-connection-using-nmtui_using-nmtui-to-manage-network-connections-using-a-text-based-interface}使用 nmtui 对修改的连接应用更改 {.title}
:::
在 `nmtui`{.literal} 中修改了连接后，您必须重新激活连接。请注意，在
`nmtui`{.literal} 中对连接进行响应会临时取消激活连接。
::: itemizedlist
**先决条件**
-   连接配置集没有启用 auto-connect 设置。
:::
::: orderedlist
**步骤**
1.  在主菜单中选择 `Activate a connection`{.literal} menu entry:
    ::: informalfigure
    ::: mediaobject
    ![nmtui 激活连接](images/nmtui_Activate_a_Connection.png)
    :::
    :::
2.  选择修改的连接。
3.  在右侧，选择\" `取消激活`{.literal} \"按钮，然后按
    [**Enter**]{.keycap} 键：
    ::: informalfigure
    ::: mediaobject
    ![nmtui
    取消激活修改的连接](images/nmtui_Deactivate_a_Modified_Connection.png)
    :::
    :::
4.  再次选择连接。
5.  在右侧，选择 `激活按钮`{.literal}，然后按 [**Enter**]{.keycap} 键：
    ::: informalfigure
    ::: mediaobject
    ![nmtui
    激活修改的连接](images/nmtui_Activate_a_Modified_Connection.png)
    :::
    :::
:::
:::
:::
[]{#getting-started-with-nmcli_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#getting-started-with-nmcli_configuring-and-managing-networking}第 5 章 nmcli 入门 {.title}
:::
本节介绍 `nmcli`{.literal} 实用程序的常规信息。
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#the-different-output-formats-of-nmcli_getting-started-with-nmcli}nmcli 输出格式的不同 {.title}
:::
`nmcli`{.literal} 实用程序支持不同的选项来修改 `nmcli`{.literal}
命令的输出。通过使用这些选项，您可以只显示所需的信息。这简化了处理脚本中输出的过程。
默认情况下，`nmcli`{.literal} 工具以类似表的格式显示其输出：
``` literallayout
# nmcli device
DEVICE  TYPE      STATE      CONNECTION
enp1s0  ethernet  connected  enp1s0
lo      loopback  unmanaged  --
```
使用 `-f`{.literal} 选项，您可以按自定义顺序显示特定的列。例如，要只显示
`DEVICE`{.literal} 和 `STATE`{.literal} 列，请输入：
``` literallayout
# nmcli -f DEVICE,STATE device
DEVICE  STATE
enp1s0  connected
lo      unmanaged
```
`t`{.literal} 选项允许您以冒号分隔格式显示输出的每个字段：
``` literallayout
# nmcli -t device
enp1s0:ethernet:connected:enp1s0
lo:loopback:unmanaged:
```
当您以脚本处理输出时，组合 `-f`{.literal} 和 `-t`{.literal}
仅显示以冒号分隔的特定字段：
``` literallayout
# nmcli -f DEVICE,STATE -t device
enp1s0:connected
lo:unmanaged
```
:::
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#using-tab-completion-in-nmcli_getting-started-with-nmcli}在 nmcli 中使用 tab 自动完成 {.title}
:::
如果您的主机上安装了 `bash-completion`{.literal}
软件包，`nmcli`{.literal} 实用程序支持 tab
补全功能。这可让您自动完成选项名称，并识别可能的选项和值。
例如，如果您键入 `nmcli con`{.literal} 并按 [**Tab**]{.keycap} 键，则
shell 会自动完成命令 `nmcli 连接`{.literal}。
您所输入的选项或值必须是唯一的。如果它不是唯一的，则 `nmcli`{.literal}
会显示所有可能。例如，如果您键入 `nmcli connection d`{.literal} 并按
[**Tab**]{.keycap} 连接，则命令将显示命令 `删除`{.literal}
`和关闭`{.literal} 可能的选项。
您还可以使用 tab
自动完成来显示连接配置集中可以设置的所有属性。例如，如果您键入
`nmcli connection modify connection_name`{.literal} 并按
[**Tab**]{.keycap}，命令可显示可用属性的完整列表。
:::
::: section
::: titlepage
# []{#getting-started-with-nmcli_configuring-and-managing-networking.html#ref-frequent-nmcli-commands_getting-started-with-nmcli}频繁使用的 nmcli 命令 {.title}
:::
以下是经常使用的 `nmcli`{.literal} 命令的概述。
::: itemizedlist
-   要显示列表连接配置集，请输入：
    ``` literallayout
    # nmcli connection show
    NAME    UUID                                  TYPE      DEVICE
    enp1s0  45224a39-606f-4bf7-b3dc-d088236c15ee  ethernet  enp1s0
    ```
-   要显示特定连接配置集的设置，请输入：
    ``` literallayout
    # nmcli connection show connection_name
    connection.id:             enp1s0
    connection.uuid:           45224a39-606f-4bf7-b3dc-d088236c15ee
    connection.stable-id:      --
    connection.type:           802-3-ethernet
    ...
    ```
-   要修改连接的属性，请输入：
    ``` literallayout
    # nmcli connection modify connection_name property value
    ```
    如果您将多个 ` 属性值 `{.literal}
    组合传递给命令，则可以使用单个命令来修改多个属性。
-   要显示网络设备列表、其状态以及使用该设备的连接配置集，请输入：
    ``` literallayout
    # nmcli device
    DEVICE  TYPE      STATE         CONNECTION
    enp1s0  ethernet  connected     enp1s0
    enp8s0  ethernet  disconnected  --
    enp7s0  ethernet  unmanaged     --
    ...
    ```
-   要激活连接，请输入：
    ``` literallayout
    # nmcli connection up connection_name
    ```
-   要取消激活连接，请输入：
    ``` literallayout
    # nmcli connection down connection_name
    ```
:::
:::
:::
[]{#configuring-an-ethernet-connection_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-an-ethernet-connection_configuring-and-managing-networking}第 6 章 配置以太网连接 {.title}
:::
这部分论述了如何使用静态和动态 IP 地址配置以太网连接的不同方法。
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection}使用 nmcli 配置静态以太网连接 {.title}
:::
这个步骤描述了使用 `nmcli`{.literal}
实用程序在以下设置中添加以太网连接：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
::: orderedlist
**流程**
1.  为以太网连接添加新的 NetworkManager 连接配置集：
    ``` literallayout
    # nmcli connection add con-name Example-Connection ifname enp7s0 type ethernet
    ```
    可以进一步修改您创建的 `Example-Connection`{.literal} 连接配置集。
2.  设置 IPv4 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.addresses 192.0.2.1/24
    ```
3.  设置 IPv6 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv6.addresses 2001:db8:1::1/64
    ```
4.  将 IPv4 和 IPv6 连接方法设置为 `manual`{.literal}：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.method manual
    # nmcli connection modify Example-Connection ipv6.method manual
    ```
5.  设置 IPv4 和 IPv6 默认网关：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.gateway 192.0.2.254
    # nmcli connection modify Example-Connection ipv6.gateway 2001:db8:1::fffe
    ```
6.  设置 IPv4 和 IPv6 DNS 服务器地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns "192.0.2.200"
    # nmcli connection modify Example-Connection ipv6.dns "2001:db8:1::ffbb"
    ```
    要设置多个 DNS 服务器，以空格分隔并用引号括起来。
7.  为 IPv4 和 IPv6 连接设置 DNS 搜索域：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns-search example.com
    # nmcli connection modify Example-Connection ipv6.dns-search example.com
    ```
8.  激活连接配置集：
    ``` literallayout
    # nmcli connection up Example-Connection
    Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/13)
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    程序来验证这个主机是否可以向其它主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:1::2
        ```
        如果命令失败，请验证 IP 和子网的设置。
    -   在远程子网中查找 IP 地址。