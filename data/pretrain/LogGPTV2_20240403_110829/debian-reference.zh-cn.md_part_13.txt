上面的“e”标志是为了防止“Nomatch”错误中断替换。
$ perl -i -p -e ’s/FROM_REGEX/TO_TEXT/g;’ file1 file2 file3
Debian参考手册 33/233
在perl(1)例子中,”-i”是在每一个目标文件的原处编辑，”-p”是表示循环所有给定的文件。
提示
使用参数“-i.bak”代替“-i”，可以在文件名后添加“.bak”再保存。对于复杂的替换，这使得从错误中恢复变
得容易。
注意
ed(1)和vim(1)使用BRE；perl(1)使用ERE。
1.6.5 从文本文件的表格中提取数据
下面有一个文本文件“DPL”，里面含有2004年以前Debian项目的领导者名字和起始日期，并以空格分隔。
Ian Murdock August 1993
Bruce Perens April 1996
Ian Jackson January 1998
Wichert Akkerman January 1999
Ben Collins April 2001
Bdale Garbee April 2002
Martin Michlmayr March 2003
提示
参见“Debian简史”获取最新的Debian领导阶层历史。
Awk经常被用来从这种类型的文件中提取数据。
尝试下列例子
$ awk ’{ print $3 }’  input to main shell
Sat 23 Aug 2003 08 30 36 +0200
$ unset IFS # reset IFS to the default
$ echo $(date -R)
Sat, 23 Aug 2003 08:30:50 +0200
1.6.6 用于管道命令的小片段脚本
下面的脚本作为管道的一部分，可以做一些细致的事情。
脚本片段（在一行内输入） 命令效果
find /usr -print 找出”/usr”下的所有文件
seq 1 100 显示1到100
| xargs -n 1 command 把从管道过来的每一项作为参数，重复执行命令
| xargs -n 1 echo 把从管道过来的，用空格隔开的项，分隔成多行
| xargs echo 把从管道过来的所有行合并为一行
| grep -e regex_pattern 从管道过来，包含有regex_pattern的行，提取出来
| grep -v -e regex_pattern 把从管道过来，不包含有regex_pattern的行，提取出来
| cut -d: -f3 - 把从管道过来，用”:”分隔的第三列提取出来(passwd文件等。)
| awk ’{ print $3 }’ 把用空格隔开的第三列提取出来
| awk -F’\t’ ’{ print $3 }’ 把用tab键隔开的第三列提取出来
| col -bx 删除退格键，扩展tab键为空格键
| expand - 扩展tab键到空格键
| sort| uniq 排序并删除重复行
| tr ’A-Z’ ’a-z’ 将大小字母转换为小写字母
| tr -d ’\n’ 将多行连接为一行
| tr -d ’\r’ 删除换行回车符
| sed ’s/^/# /’ 在每行行首增加一个”#”符
| sed ’s/\.ext//g’ 删除”.ext”
| sed -n -e 2p 显示第二行
| head -n 2 - 显示最前面两行
| tail -n 2 - 显示最后两行
Table1.27: 管道命令的小片段脚本列表
Debian参考手册 35/233
使用find(1)和xargs(1)，单行shell脚本能够在多个文件上循环使用，可以执行相当复杂的任务。参见第 10.1.5 节
和第 9.4.9 节.
当使用shell交互模式变得太麻烦的时候，请考虑写一个shell脚本(参见第 12.1 节).
Debian参考手册 36/233
Chapter 2
Debian 软件包管理
注意
这一章假定最新的稳定版的代号为：bookworm。
在 本 文 档 中，APT 系 统 的 数 据 源 总 称 为 源 列 表。 能 够 在”/etc/apt/sources.list” 文 件、
”/etc/apt/sources.list.d/*.list” 文件或”/etc/apt/sources.list.d/*.source” 文件的任何地
方定义。
2.1 Debian 软件包管理的前提
2.1.1 Debian 软件包管理
Debian是一个志愿者组织，它建立一致的自由软件的预编译二进制包并从档案库中分发它们。
许多远程镜像站提供了HTTP和FTP的方式来访问Debian档案库。也可以使用CD-ROM/DVD。
目前Debian的软件包管理系统是高级软件包工具(APT)，它能够使用所有这些资源。
Debian软件包管理系统，当使用适当时，可以让用户从档案库安装统一设置的二进制软件包到系统中。现在，有71141
个可用于amd64架构的软件包。
Debian软件包管理系统有丰富的历史，有许多可供选择的前端用户程序和后端访问方式。现在，我们推荐下列的这些。
• apt(8)用于所有的交互式命令行操作，包含软件包的安装、移除和版本升级。
• apt-get(8)用于从脚本中调用Debian软件包管理系统。它在apt不可用时也可作为一个备选选项（常见于较旧的
Debian系统）。
• aptitude(8)使用一个交互式的文本界面来管理已安装的软件包和搜索可用的软件包。
2.1.2 软件包配置
下面是Debian系统软件包配置的一些要点。
• Debian尊重系统管理员的手动配置。换句话说，软件包配置系统不会为了方便而去更改那些配置。
• 每个软件包都带有自己的配置脚本，它使用标准用户接口debconf(7)来帮助软件包初始化安装过程。
• Debian开发者通过软件包配置脚本，尽力使你能有一个完美的升级体验。
• 系统管理员可以使用软件包工具的全部功能。但在默认的安装中会禁用那些具有安全风险的。
• 如果你手动激活了一些具有安全隐患的服务，你有责任遏制风险。
• 高深的配置可以由系统管理员手动启用。这可能会对用于系统配置的通用流行帮助程序造成干扰。
Debian参考手册 37/233
软件包 流行度 大小 说明
dpkg V:915,I:999 6447 用于Debian的底层软件包管理系统（基于文件的）
使用命令行管理软件包的APT前端：
apt V:872,I:999 4311
apt/apt-get/apt-cache
aptitude V:49,I:264 4268 使用全屏控制台交互式管理软件包的APT前端：aptitude(8)
tasksel V:36,I:980 347 用来安装选择的任务的APT前端: tasksel(8)
unattended-upgrades
V:194,I:301 301 用于APT的增强软件包，会自动安装安全更新
gnome-software V:152,I:260 3032 GNOME软件中心(图形化的APT前端)
synaptic V:46,I:372 7627 图形化的软件包管理工具（GTK的APT前端）
APT实用程序：apt-extracttemplates(1)、
apt-utils V:377,I:998 1062
apt-ftparchive(1)和apt-sortpkgs(1)
apt-listchanges
V:351,I:869 398 软件包历史更改提醒工具
apt-listbugs V:6,I:9 477 在每次APT安装前列出严重的bug
apt-file V:17,I:69 89 APT软件包搜索工具——命令行界面
apt-rdepends V:0,I:5 39 递归列出软件包依赖
Table2.1: Debian软件包管理工具列表
2.1.3 基本的注意事项
警告
不要从任何的混合套件中安装软件包。它可能会打破软件包的一致性，这需要你要深厚的系统管理知识，例
如ABI编译器、库版本和解释器特性等等。
Debian系统管理员中的新手应该保持在只进行安全更新的stable版本。直到你十分了解Debian系统前，你应当遵
循下列的预防措施。
• 在源文件中不要包含testing或unstable。
• 在源文件里不要在标准的Debian中混合使用其它非Debian的档案库，例如Ubuntu。
• 不要建立“/etc/apt/preferences”。
• 不了解会造成的全部影响，就不要通过配置文件改变软件包管理工具的默认行为。
• 不要使用“dpkg -i random_package”安装任何软件包。
• 绝不使用“dpkg --force-all -i random_package”安装任何软件包。
• 不要删除或修改“/var/lib/dpkg/”中的文件。
• 不要让从源码直接安装的程序覆盖系统文件。
– 如果需要的话，将它们安装到“/usr/local”或“/opt”中。
对Debian软件包管理系统，违背上面的预防措施，会导致不兼容影响，可能会使你的系统无法使用。
运行关键任务服务器的严谨的Debian系统管理员，应该使用额外的预防措施。
• 没有在安全的条件下使用你特定的配置进行彻底地测试，就不要从Debian安装任何软件包（包含安全更新）。
– 你作为系统管理员要对你的系统负责到底。
– Debian系统长久的稳定史并无法保证什么。
Debian参考手册 38/233
2.1.4 持续升级的生活
小心
对于你的生产服务器，建议使用带有安全更新的stable套件。对于你只进行有限管理的桌面PC也是同样
如此。
尽管我在上面进行了警告，我知道本文档的许多读者希望可以运行更新的testing或unstable版。
菩萨使用下面的内容拯救一个人，使他从挣扎于持续升级地狱的因果报应中脱困，并让他达到Debian的极乐世界。