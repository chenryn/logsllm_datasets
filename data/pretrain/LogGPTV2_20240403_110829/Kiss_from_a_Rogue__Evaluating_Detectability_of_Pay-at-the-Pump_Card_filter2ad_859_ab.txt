1) Check if the Bluetooth device’s name is HC-05. If this
check passes and any subsequent check fails, the app
warns that a suspicious device is present.
2) The app attempts to pair with the device using PIN 1234.
3) The app creates a Bluetooth serial socket to the device.
4) The app sends a single byte, 0x50, to the device.
5) The app checks the returned data; if the data begins with
byte 0x4D, the app warns that a skimmer may be present.
ATM Skimmer Detector (B). This app’s description identiﬁes
it as being capable of detecting both ATM and gas pump
skimmers (and speciﬁcally identiﬁes the HC-05 skimmer).
This app’s functionality is similar to Skimmer Scanner (A).
In Step 1, however, the device’s name can be either HC-05 or
HC-06 (case insensitive). The remaining steps are identical.
Skim Plus (C). Like Skimmer Scanner (A),
this app is
a C# Xamarin app except the source code is not publicly
available. Xamarin apps package the compiled application with
portions of the Mono framework inside an Android app. After
unpacking the Android APK, we extracted the compiled DLL
and decompiled it with JetBrains dotPeek.
Skim Plus detects apps solely on MAC address matching.
For each discovered Bluetooth device, the app checks to see
if its MAC address begins with:
ics Technology Co., Ltd)
• 00:0B:CE (assigned to Free2move AB)
• EC:E9:F8 (assigned to Guang Zhou TRI-SUN Electron-
• 00:06:66 (assigned to Roving Networks)
• 20:16 (multiple assignees)
• 20:17 (unassigned)
We checked each MAC preﬁx with the IEEE Stan-
dards Registration Authority [5] and noted its assignee. The
20:16:00–20:16:FF block has multiple assignees,
in-
cluding Intel (20:16:B9) and Liteon Technology Corpora-
tion (20:16:D8). At the time of writing, the 20:17:00–
20:17:FF block has no assignees. Aside from the fragility of
this approach, the appearance of these two-byte MAC preﬁxes
greatly increases the risk of false positives. Furthermore, since
20:17 is not assigned, the manufacturers of any devices using
this preﬁx are arbitrarily selecting MAC addresses. We discuss
this in greater detail in Section IV.
The app does not attempt to connect to any device, instead
alerting if it discovers any matching Bluetooth device. The
“Possible Skimmers Found!” alert is displayed with an icon
indicating the matching device’s signal strength. The app is ca-
pable of sending the location of the skimmer to ronzoo.com
via HTTP (this is presumably how the app produces mapping
data for other users). Furthermore, this API does not appear
to have any authentication capabilities; as a result, an attacker
could ﬂood the server with false reports of skimmers.
1002
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:50:21 UTC from IEEE Xplore.  Restrictions apply. 
Skimmer Protection Scanner/Dark Skimmer Protector
(D/E). Finally,
these two apps are Apache Cordova apps
which display a rendered HTML/JavaScript view to the
user. We examined both the decompiled bytecode and the
HTML/JavaScript elements unpacked from the APK. There
are no functional differences between these two apps; the icon,
logo, splash screen, background color, and advertising ID are
the only code differences.
These apps do not detect skimmers. Once the user activates
the scan, the apps display an ad and a progress bar, sleep for
ﬁve seconds, and display a list of the phone’s bonded Bluetooth
devices. Once this process completes, the user is shown the
message “NO SKimmer found this scan not found any device
use skimmer hardward plz be bhide some device skimmer !!”
[sic] and a chart with random values is displayed.
Soon after our analysis, these two apps were both removed
from the Google Play store. We captured the apps’ full
descriptions before they were removed; both apps are non-
obviously described as a simulation of skimmer detection. The
apps do not appear to be simulations once installed or running;
accordingly, we believe few users would realize that these apps
perform no checks.
Skimmer Map (F) To understand the application’s behavior,
we ﬁrst ran it on our iOS 10 device. The application displays
a map and current location, and it appears as though it should
overlay locations of reported gas pump skimmers. During
testing, however, we conﬁrmed that the map was not being
populated with any results. It does not appear to contain
any functionality for detecting skimmers on its own (e.g., via
Bluetooth).
We decrypted the IPA ﬁle using a jailbroken device, which
allowed us to perform static analysis on the application binary
using IDA Pro. We discovered a single URL in the string refer-
ences: http://skimmermap.gaspumpsentry.com/.
At the time of analysis, this domain name did not resolve to a
valid IP using DNS. Although www.gaspumpsentry.com
still resolves to a related site, we suspect that this app is aban-
doned by the developer. Without access to the crowdsourced
skimmer data, this application is effectively broken.
Card Skimmer Locator (G) This application claims to scan
for skimmers that use Bluetooth Low Energy (BLE). It either
displays a list of suspicious device names or a checkmark
and “None Found”. In practice, the application immediately
displays “None Found” even in the presence of an HC-05
skimmer. To better understand this behavior, we decrypted it
and performed static analysis using IDA Pro. We found proper
code to listen for discovered BLE devices, but during our
dynamic analysis using Frida and LLDB, we observed that
the app would immediately display “None Found” if a device
was detected with a NULL device name. We examined the
application code but could not ﬁnd any hardcoded suspicious
device names like we discovered with other apps. More reverse
engineering yielded that the app displays any detected BLE
device with a name greater than 14 characters as “suspicious.”
None of the skimmers we have examined use BLE, limiting
the effectiveness of this application. The skimmers in our
possession use Bluetooth Classic, for which iOS does not
provide public scanning APIs. Therefore, it is not possible to
publish an application to the App Store that scans for Bluetooth
Classic skimmers on iOS [10], limiting the use of this platform
for skimmer detection.
C. Lessons Learned
In theory, tools designed to help consumers detect gas
pump skimmers are ideal solutions. However, from our tear-
down of these skimmer detection apps, we see that
their
ability to detect skimmers is limited. Some of the apps we
examined do not actually detect skimmers at all, but advertise
themselves as such. These apps provide users with a false sense
of security and make it a challenge for users to identify which
apps actually work at all. The only non-abandoned skimmer
detection app for iOS does not function properly, limiting
even the possibility of detecting skimmers via smartphones
to Android users. The apps that are not clearly broken are
all similar in their detection methods and rely on speciﬁc
characteristics as well as historical data of skimmers to identify
them. Although these apps are limited, their current use is
evidence that the assistance of effective skimmer detection
technology is needed.
Furthermore, we are concerned by the apps that establish
connections to candidate devices. These connections may run
afoul of laws that prohibit access to others’ electronic devices
(e.g., the Computer Fraud and Abuse Act - 18 USC § 1030).
Since the Bluetooth serial adapters these apps are designed to
detect can be used in legitimate, non-skimming devices, the
issuance of a command to these devices may have ill effects.
IV. HARDWARE ANALYSIS
We partnered with four law enforcement agencies (the
Florida Department of Agriculture and Consumer Services, the
Gainesville Police Department, the Alachua County Sheriff’s
Ofﬁce, and the NYPD Financial Crimes Task Force) and
received six internal gas pump skimmers that had been released
from evidence. In this section, we characterize the skimmers
and evaluate whether smartphone apps appropriately leverage
these characteristics for detection. After analyzing the initial
state of the skimmers, we test with the apps, discuss evasion
techniques, and demonstrate evasion is possible.
A. Hardware Teardown
Table II lists each skimmer and its hardware composition.
We assign an identiﬁcation number to each skimmer and
discuss the general operation of the devices as well as speciﬁc
aspects of each skimmer.
Each skimmer has similar hardware components and func-
tionality. Figure 2 shows the major common hardware compo-
nents. The skimmer is inserted between the magnetic stripe
card reader and the pump’s mainboard, allowing it
to in-
tercept the card data. To do this, the existing card reader
is disconnected and a ﬂat ribbon cable on the skimmer is
connected to the reader. The skimmer is then connected to
the mainboard using another set of pins, re-establishing the
connection through the skimmer. The microcontroller on the
skimmers then processes the data as it is received and stores
it in ﬂash memory. Each skimmer is equipped with a data
retrieval feature (e.g., a Bluetooth module is shown in Figure
2) that allows a criminal to obtain the data on the ﬂash memory
at a later occasion.
1003
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:50:21 UTC from IEEE Xplore.  Restrictions apply. 
Skimmer
ID
S-01
S-02
S-03
S-04
S-05
S-06
Connection
Cables
Card Reader
Card Reader and
PIN Pad
Card Reader and
PIN Pad
Card Reader
Card Reader and
PIN Pad
Card Reader
Microcontroller
PIC 18F4550
PIC 18F4550
PIC 18F4550
AT Mega 8515
PIC 18F4550
PIC 18F4550
Flash Memory
ST 25P16VP
ST 25P16VP
Communication
Method
Bluetooth
Bluetooth
MXIC
25V8006EM
PCT 25VF040B
MXIC
25V8006EM
ST 25P16VP
Bluetooth
USB
Bluetooth
GSM
Radio
Module
HC-05
HC-05
RN42
N/A
RN42
SIM800
BT
Name
HC-05
HC-05
RNBT
N/A
RNBT
N/A
BT
PIN
1234
1234
1234
N/A
1234
N/A
BT MAC Address
20:17:01:09:24:37
20:16:11:21:06:07
00:06:66:81:E9:FB
N/A
00:06:66:E7:CA:C1
N/A
TABLE II: The breakdown of each skimmer’s hardware components, connects to gas pumps, and their method of transmitting
data. Each skimmer is assigned an ID number for reference. The table also provides some of the settings on each skimmer’s
communication module when we received them.
regulator on this module had burned out and damaged the cable
that attaches the card reader. Due to this, we needed to apply
voltage directly to the microcontroller to power the device on.
This skimmer is also able to capture PIN pad data.
Skimmer S-06 is similar is design to Skimmers S-01, S-02,
S-03, and S-05, but is equipped with a cellular communication
module as opposed to Bluetooth. The cellular module is a
SIMCom SIM800 GSM module that transmits voice and SMS
over the GSM network. The processor and ﬂash memory
chips are identical
to those in Skimmers S-01 and S-02.
This skimmer only has a cable for intercepting card readers;
the PCB has unused pads that can accommodate a cable to
intercept PIN pad data.
Of the six skimmers we received, four use Bluetooth (two
with HC-05 modules and two with RN42 modules) as their
data retrieval mechanism and one uses cellular communication
over the GSM network. The sixth uses a USB connector which
requires a criminal to physically retrieve the skimmer in order
to obtain card data. Accordingly. Bluetooth based detection
apps can not ﬁnd all of the devices currently being used to
skim gas pumps.
B. Bluetooth Modules
As discussed in Section III, smartphone skimmer detection
apps indicate the presence of skimmers based on character-
istics of their Bluetooth communications. We discovered in
that section that apps use four main criteria to determine
if a Bluetooth module belongs to a skimmer: the name the
module broadcasts, the password to connect to the module,
the operation of the device once connected to the Bluetooth
module, and the module’s MAC address.
Both the HC-05 module and the RN42 module accept
AT-style reconﬁguration commands via serial communication.
The manufacturers of both modules provide documentation
that lists the valid command set, however many commands
are unavailable wirelessly; the devices must have a physical
conﬁguration pin set in order to accept most critical commands
(e.g., name and PIN conﬁguration).
All four Bluetooth-enabled skimmers in our possession
provide direct pinouts to the serial pins on the Bluetooth
modules as is shown in Figure 2. Using these pins we were
able to dump the initial conﬁguration and alter existing settings