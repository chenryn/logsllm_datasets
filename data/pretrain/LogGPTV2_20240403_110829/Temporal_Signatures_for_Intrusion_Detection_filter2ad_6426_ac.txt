between clusters and a normal database. The database Pv
is  the  percentage  of  valid  cases  in  a  normal  database
compared  to  the  total  number  of  cases  in  the  raw
database.  The  comparison  Pv  is  the  percentage  of  valid
cases in a monitored behavior of an application compared
to the number in the  normal database of the application.
Whenever the cluster Pv is lower than a threshold due to
the  above  exclusions,  we  mark  the  cluster  as  unusable.
We call this threshold as Tv.   It is empirically defined.
3.2 Put it all together
After all high variance exclusions are made, the cluster
is typically found to be usable. It is referred to as being a
qualified cluster summary. The normal database consists
of  all  qualified  cluster  summaries  for  the  application.
Recall that each cluster summary has a distinct title. Each
database 
following
parameters:
then  characterized  by 
the 
is 
sequence length characterizing the database
-    set of unique titles
-
- database Pv
- Cs, criteria for excluding invalid cases
Table 5 shows three different example cluster summaries
for wu.ftpd.  The annotation,  “*”, on open  indicates  that
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:42 UTC from IEEE Xplore.  Restrictions apply. 
5
the  system  call  open  is  a  high  variance  system  call.
During intrusion detection no  comparisons  will  be  made
to the mean and standard deviation values for open in the
summary;  they  are  non-numeric.  The  third  summary
shows  the  cluster  for  a  cluster  that  has  been  marked
unusable.    Note  that  the  title  of  the  unusable  cluster  is
maintained for comparison purposes.
Table 5. Three cluster summaries from the normal
database for application wu.ftpd.
system calls
open* fstat
seteuid socket setsockopt
bind
m
s
system
calls
m
s
system
calls*
m
s
x
x
23.7
23.7
0.786 0.539
40.4
2.16
22.1
1.044
27.6
0.809
fstat
seteuid read read
30.4
32.3
23.7 22.5
1.786 1.539 0.16
1.02
write
52.1
2.02
msgg
et
x
x
read
x
x
sbrk
x
x
write
open
x
x
x
x
fcntl
22.8
0.34
dup
x
x
the  properties 
Table  6  shows  a  summary  of 
that
characterize  four  different  normal  databases  for  the
application  wu.ftpd.    We  used  different  z-scores  and
sequence lengths.  The database  Pv  values indicate that
fewer high variances are encountered when the z-score  is
larger and when sequence lengths are shorter.
Table 6. Summary of a normal database for
application wu.ftpd.
Sequence length
6
10
6
10
za
2.33
2.33
2.58
2.58
Time
interval
class
r
r
r
r
Database
Pv
93.4%
78.8%
95.1%
84.2%
4. Intrusion detection systems
At  this  point  we  have  defined  the  temporal  signature
and described in detail how the normal database might be
constructed  to  be  a  robust,  usable  signature  for  the
application.  We  next  experimented  with  database
construction  and  then  with  building  an  experimental
intrusion  detection  system  (IDS)  in  order  to  test  its
efficacy 
temporal
signature.
intrusions  using 
in  detecting 
the 
the 
k  with 
The  IDS  consists  of  two  major  parts:  the  normal
database  builder  and  the  run-time  monitor.  The  normal
database  builder  creates  the  normal  database  for  future
comparison  as  described  earlier.  The  run-time  monitor
observes  the  execution  of  the  application  much  in  the
same way that the application was monitored in order to
build the normal database.  When it  finds a  sequence  of
length 
timing
measurements,  the  monitor  has  (effectively)  a  case.      It
compares the case to the database to see if there exists a
sequence summary whose title is the same as the k-length
sequence.  For the full or partial title match, the monitor
computes the difference between the monitored case and
the  most  relevant  cluster  summary.      Based  on  that
comparison, 
it  makes  a  decision  whether  or  not
anomalistic  behavior  is  occurring.    We  will  discuss  the
details  of 
context  of
experimentation.
comparison 
associated 
inter-call 
this 
the 
in 
5. Experiments and results
The major objective of our experiments is to  validate
the hypotheses stated in previous sections: we can build a
normal  temporal  signature  database;  and  we  can  detect
intrusions. We also discuss the effects of the environment
on our experiments, the effectiveness of our system, and
the selection of parameter settings.
The  first  step  is  to  actually  construct  the  normal
database. There are two construction methods: “synthetic”
normal and “real” [12]. A “synthetic” normal database is
generated by exercising the application in as many normal
modes  as  possible  while  tracing  its  behavior.  A  “real”
normal  database  is  generated  by  tracing  the  normal
behavior  of  the  application  in  a  live  user  environment
[12].
A synthetic normal database is quite useful when there
is a need to replicate results and to compare performance
using different parameter settings. A real normal database
is more problematic to collect and evaluate because of the
difficulties  of  avoiding  abnormal  sequences  (intrusions
during  construction)  and  determining 
traced
behavior  is  sufficiently  comprehensive.  However,  we
need a real normal database to determine how our system
is likely to perform in realistic environments.
Our experiments were performed using FreeBSD. We
built  both  synthetic  and  real  normal  databases.  We
experimented with the  following applications: wu-ftpd, a
server  implementing  FTP,  the  File  Transfer  Protocol;
popper, a mail server implementing POP3, the Post Office
Protocol;  delegate,  a  proxy  server;  and  htdig,  a  html
search engine.
In  our  experiments,  we  must  select  settings  for  the
the 
if 
following adjustable parameters:
- Tv,  threshold  of  the  percentage  of  valid  cases  in  a
cluster.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:42 UTC from IEEE Xplore.  Restrictions apply. 
6
- Cs, criteria of high variance system call.
-
-
z-score, criteria for the high variance cases.
sequence  length,  the  length  of  the  sequence  cut
from the stream of system calls.
Database  Pv  serves  as  an  indicator  whether  our
database  is  acceptable  for  IDS  use.  Because  no  other
criterion is available at this time, we judge the goodness
of a normal database based on empirical analysis. Besides
these parameters, we also measured the database Pv when
we  build  the  normal  database  and  then  use  it  as  the
criterion for intrusion detection
z-score:  2.33 or 2.58
sequence length: 6~10;
All  these  parameters  were  defined  and  discussed  in
detail  in  previous  sections.  Typical  settings  of  the
parameters are:
- Tv,:  85%;
- Cs:  0.1~0.3;
-
-
The first parameter value was determined based on the
experiments  we  performed.  The  z-score  was  determined
based on our assumption that no more than 5%-10% high
variance  data  was  to  be  allowed.      That  is,  we  assumed
that  less  than  5%  (for  z-score  2.33)  or  10%  (for  z-score
2.58)  high  variance  data  deviate  from  the  mean  by  this
value (after database normalization).
The selection of sequence length is also an  important
issue. Some early works showed that sequence lengths of
6  to  10  are  effective  choices  [2,  17].  We  adopted  these
suggestions and develop our own preference in following
sections.
5.1 Results of building normal databases
We built both the “synthetic” normal database and the
“real”  normal  database  for  the  applications,  wu-ftpd  and
popper. We generated the synthetic normal databases by
building  a  script  that  invoked  every  command  that  the
application  defines.  Each  command  is  invoked  multiple
times  with  parameters  designed  to  exercise  the  full
functionality of the application. wu-ftpd has 23 commands
and  popper  has  10  commands.  The  summaries  for  the
several  generated  normal  databases  for  wu-ftpd  and
popper are discussed in detail in the next section.
5.1.1  Building  normal  databases 
in  a  synthetic
environment.    Table 7  summarizes  the  qualities  of  four
slightly  different  normal  databases  for  wu-ftpd.  As
mentioned  earlier  we  timed  different  kinds  of  time
intervals  –  e.g.  between  system  calls  and  within  system
calls.  All data in this paper are for the measurements of r,
between system calls.  All were generated using the same
(synthetic)  script.  Each  line  in  the  table  represents  a
database using different parameter settings.   Database  Pv
values  are  higher  for  the  shorter  sequence  length,  and
when the z-score is higher and admits more case variance.
The  database  Pv’s  are  the  percentage  of  retained  cases
after  the  qualification  of  cluster  summaries.  High  Pv
values indicate the quality of the databases.  Database Pv’s
using  time  interval  class  r  were  higher  than  when
measuring time elapsed during system calls.
Table 7.  Synthetic normal database of wu-ftpd using
time interval classes r, Cs = 2.0, Tv = 85%.
Sequence
length
6
10
6
10
za
2.33
2.33
2.58
2.58
Time interval
class
Database
Pv
r
r
r
r
93.4%
78.8%
95.1%
84.2%
Our  second  set  of  database  construction  experiments
involves  the  application  popper.  It  runs  as  a  daemon.
popper  (based  on  POP3,  the  Post  Office  Protocol)
performs  many  fewer  commands  than  those  of  the  wu-
ftpd.  However,  each  command  has  a  variety  of
parameters.  To  explore  all  the  commands  with  different
parameters, we use two kinds of clients, MS Outlook and
Netscape  Messenger,  to  logon,  quit,  receive,  retrieve
attachment,  list,  and  delete  mail  on  the  server.  The
following list suggests the ranges of parameter settings:
- mail size: less than 10bytes – 1Mbytes;
- with/without attachment;
- with/without subject;
-
amount of mail on the server: 0-1000;
- delete/keep the mail when retrieving;
-
correct/incorrect logon on the server.
Table 8 describes the qualities of 4 different synthetic
databases for popper. Each line  in  the  table  represents  a
database.  Again  we  explored  all  time  interval  classes
although they are not shown here.
Table 8. Synthetic normal database for popper using
time interval class r, Cs = 2.0, and Tv = 85%
Sequence
length
6
10
6
10
za
2.33
2.33
2.58
2.58
r
r
r
r
Time interval
Database
class
Pv
90.1%
80.8%
96.4%
88.2%
The results in Table 8 are similar to those for wu-ftpd;
all  the  Pv’s    in  Table  8  show  a  good  quality  normal
database.
5.1.2 Building normal databases in a real environment.
We  generated  the  “real”  normal  databases  for  the
7
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:42 UTC from IEEE Xplore.  Restrictions apply. 
application  wu-ftpd  by  executing  the  application  in  an
actual, open environment (the computing environment in
the  Computer  Science  Department,  University  of
Virginia),  while  monitoring the environment carefully to
ensure  that  no  intrusions  occurred  during  our  data
collection.
Table 9. Statistics for four real normal database of
wu-ftpd using time interval class r, Cs = 2.0, andTv =
85%
Time interval
Database
class
Table 10. Statistics for four real normal database of
popper using time interval class r, Cs = 2.0, and Tv =
85%
Time interval
Database
class
Sequence
length
6
10
6
10
za
2.33
2.33
2.58
2.58