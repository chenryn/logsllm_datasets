e
a
a
o
rl
d
rt
n
g
n
h
k
u
d
e
c
h
o
o
l
.
cl
.ic
.
s
o
e
 50  100  150  200  250  300  350  400  450
New gTLDs ranked by protected WPAD query %
Fig. 15: Protected leaked WPAD query percentage CDF for
partial deployment of new gTLD registry level defense. The
ﬁgure inset lists the top 18 new gTLDs which can protect 80%
of total leaked queries if the defense is deployed.
another direction is to prevent their leaks at the victim AS
level. Each victim AS can distribute a black list of vulnerable
domains to their DNS resolvers, and ﬁlter the queries to these
domains before sending them to the public namespace. To
create such a list for all ASes, one quick approach is to ﬁnd the
common vulnerable domains using the intersection set of the
attack surface domains for the victim ASes. We estimate the
effectiveness of this approach using the HVD intersection set
for 10 highly-vulnerable ASes, which contains 90 domains as
shown in Table V. We ﬁnd that if all ASes adopt this black list,
approximately 36.4% of the leaked WPAD queries globally
in our 2-year dataset can be ﬁltered. Thus, even though the
creation of the black list is convenient without AS-speciﬁc
customizations, this approach has limited effectiveness, mainly
because many HVDs are AS-speciﬁc as characterized in §VI.
To increase the effectiveness, each victim AS should cus-
tomize its black lists based on their own query trafﬁc patterns.
This can be enabled by DNS trafﬁc monitoring and ﬁltering
in the recently-proposed name collision risk management
framework [26]. One candidate approach to create such list is
to use the attack surface quantiﬁcation method proposed in §V
based on NXD query data, which can be obtained either by
collecting DNS queries on their own, or collaborating with
DNS root server operators. The deployment locations are the
ASes with HVDs, including 11,305 ASes globally according
to our quantiﬁcation results. If every AS deploys this,
it
is capable of ﬁltering 97.4% of the leaked WPAD queries
globally in our dataset. Compared to the new gTLD registry
level defense, this approach can achieve the same level of
high effectiveness, but may have higher deployment challenges
due to signiﬁcantly more deployment locations. Thus, we also
evaluate partial deployment strategy, shown in Fig. 16. In this
ﬁgure, the X-axis is the 11,305 victim ASes ranked by their
leaked WPAD query percentages. As shown, deploying at the
top 143 (1.2%) ASes can effectively ﬁlter more than 80% of
the leaked queries. Thus, similar to new gTLD registry level
 100
 80
 60
 40
 20
F
D
C
%
y
r
e
u
q
D
A
P
W
d
e
r
e
t
l
i
F
 0
 0
 100
 80
 60
 40
 20
 0
 0
 100  200  300  400  500
 2000
 10000
AS ranked by filtered WPAD query %
 4000
 6000
 8000
Fig. 16: Filtered leaked WPAD query percentage CDF for
partial deployment of AS level defense. The ﬁgure inset shows
the CDF for the top 524 ASes.
defense, it is not entirely necessary to cover all 11,305 victim
ASes, and targeting the top 1–5% ASes can already achieve a
relatively high level of effectiveness.
Victim AS level ﬁltering can also be IP based. In the WPAD
discovery process, the leaked WPAD queries are intended to
get internal proxy server IP addresses, while in the WPAD
name collision attack the attacker needs to return public proxy
IP addresses. Thus, victim AS resolvers can prevent the attack
by ﬁltering the DNS responses with public IP addresses. The
effectiveness of this approach cannot be evaluated using our
root NXD dataset, which is left as future work.
End user level remediation. As shown in §IV, the ma-
jor cause of the WPAD query leaks is using devices with
internal domains outside of the internal network. Thus, to
fundamentally solve this problem, this unintended client-side
behavior needs to be ﬁxed. If WPAD proxy discovery service
is not actually used in the internal network, we suggest that
the local network administrator, e.g., the IT department in
a company, disable this feature in the supported browsers
and OSes (Table I) during corporate device setup process.
To more efﬁciently enforce this policy without the need of
enumerating the conﬁgurations of all installed browsers or
other related software, the administrator can change OS-level
domain name mapping ﬁles such as /etc/hosts to map all
permutations of WPAD URLs within the internal namespace to
127.0.0.1. In this paper, the effectiveness of this approach
is not evaluated since it is difﬁcult to measure the amount of
leaked WPAD queries belonging to local networks that do not
use WPAD service internally.
For the corporate devices depending on WPAD for internal
network proxy discovery, the WPAD feature in OSes and
browsers still needs to be enabled. To prevent WPAD query
leaks for these devices, leveraging our insights of the device-
side causes found in §IV, companies or other entities with
internal domains need to stop hardcoding the internal domain
search list on their devices. If Windows OS is used, they need
688688
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
to stop setting the Windows PC domain, and also upgrade their
OSes. As we mentioned before, these causes may just be the
tip of the iceberg, and there might exist plenty of other causes
under different conditions. Moreover, considering the large
variety of software on the device, new causes, for example
domain hardcoding behavior in certain applications, can be
created at any point in the future. Thus, these are only short-
term solutions and not future proof.
As a long-term solution, we propose to design an OS-
level daemon which can ﬁlter queries based on the network
environment. This daemon is a background process which
intercepts DNS queries issued by all applications on the
device, and can correctly tell and ﬁlter queries with domains
not belonging to current network environment. In order to dis-
tinguish unintended queries, it tracks the network environment
at each network status change, and stores a list of intended
domains sufﬁxes for each network environment, either by
learning from DHCP conﬁguration messages, or directly being
conﬁgured by the user. To realize this approach, there are still
some design challenges, for example how to accurately tell
network environments apart when they use same IP address
preﬁxes, which we leave as future work.
For the short-term and long-term device-side solution above,
in theory they can fundamentally solve the problem; thus, we
consider its maximum effectiveness as 100% in Table VII.
However, the downside is that it is extremely difﬁcult to reach
and apply these solutions to all end user devices, which is
estimated to have at least 6.6 million deployment points using
the number of distinct (cid:2)IP, sld.tld(cid:3) pairs in our 2-year root
NXD WPAD dataset, where IP is the resolver IP sending
WPAD queries, and sld.tld is the WPAD query domain. This
is only a lower bound estimation as there might be more than
one user device with domain sld.tld behind a resolver, but it
is already at least 2 orders of magnitude larger than the new
gTLD registry and victim AS level defenses described above.
To help facilitate the deployment process, OSes and
browsers can displaying warning messages when detecting
potential name collision risks. For example,
if the issued
WPAD query is leaked to the public namespace, the response
will include a special IP address, 127.0.53.53, during
the 90-day “controlled interruption” period [3]. Browsers
and OSes can thus leverage this to display risk warnings
and recommend the users to consult
their IT department
immediately to resolve the problem. Note that the 90-day
“controlled interruption” period [3] was ineffective to mitigate
such issue since the victim machines automatically perform
the vulnerable operations even without user awareness [33].
With more support from OS and browser sides, end users
can be better notiﬁed of the imminent threat to help with the
mitigation progress.
To summarize, no single defense approach discussed here
can easily solve the problem. To maximize the chance of
preventing the attack in practice, the best choice would be
using these approaches jointly. Considering the serious and
disseminated nature of this vulnerability as shown in this
paper, actions need to be taken as soon as possible.
VIII. RELATED WORK
DNS spooﬁng attacks. Like the WPAD name collision attack
studied in this paper, some previous DNS spooﬁng attacks
also try to deceive victims using malicious DNS response.
One attack category assumes that the attacker is MitM and
thus replies forged response when observing a query. This can
be achieved through attacking the network conﬁgurations of
the victim devices. For example, prior work [2], [35] show
that scripts on web pages can change home routers’ DNS
conﬁgurations and point the client resolver IP to attacker’s
servers. Another category of attacks assumes that the attacker
is off path. One such example is DNS cache poisoning
attack [29], [34], which corrupts the resolver’s cache with
spoofed DNS responses, causing all downstream devices to
be redirected to the attacker’s IP addresses. These previous
attacks exist since the victim cannot determine whether the
received DNS responses are legitimate or manipulated, which
can be solved by DNSSEC protocol [18], [19]. Compared
to them, the attacker in the WPAD name collision attack is
actually authoritative for the request domains. This means that
she can legitimately give malicious response and launch MitM
attack without the need of spooﬁng, making it exploitable even
if DNSSEC is used.
New TLD delegation study. The addition of new gTLDs
into the DNS root zone usually requires considerable debate
about the extent to which new TLDs will actually serve a real
need. Before the New gTLD Program, the growth of gTLD
set maintained a very slow and steady rate. Some previous
work studied the impact of certain early gTLD delegation, e.g.,
for .biz [25] and .xxx [24], and recently Halvorson et al.
perform the ﬁrst study targeting the New gTLD Program [23].
These studies mostly focus on characterizing the registration
intent, and in comparison, our work targets the security
problem exposed by the new gTLD delegation.
Name collision from new gTLD delegation. Before our
work, concerns from the domain name industry have already
been raised about potential name collision problem from new
gTLD delegation [30]. Several studies have measured the
leaked DNS queries to the DNS root servers and shown the
potential risks of information leakage, denial of service, and
MitM attack [31], [33]. The discussions resulted in a name
collision management framework from ICANN in 2013 [4],
which allows the majority of new gTLD strings to be delegated
by following an Alternate Path to Delegation (APD). In APD,
the new gTLD registries are required to block large numbers of
high-risk SLDs according to measurement of DITL (Day in the
Life of the Internet) dataset. Later on in 2014 a new framework
allows releasing these blocked names after a 90-day period
called “controlled interruption” for testing and resolving name
collision problem [3]. However, previous studies have shown
that the block list is ineffective due to the statistical limitation
of DITL dataset [36]. In addition, the controlled interruption
period is unlikely to change anything for problems similar to
the WPAD name collision attack, since the victim machines
automatically perform the vulnerable operations even without
689689
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
[13] Use
a
Custom
Tld
for
Local
Development.
http://blog.bfontaine.net/2013/08/26/use-a-custom-tld-for-local-
development, 2013.
[14] What
a Windows Domain
fect
what-is-a-windows-domain-and-how-does-it-affect-my-pc , 2014.
PC?
and How Does
It Af-
http://www.howtogeek.com/194069/
is
My
[15] Centralized Zone Data Service. https://czds.icann.org/en, 2015.
[16] New delegated
TLD strings.
http://newgtlds.icann.org/en/
program-status/delegated-strings, 2015.
[17] Root Zone Database. http://www.iana.org/domains/root/db, 2015.
[18] R. Arends, R. Austein, M. Larson, D. Massey, and S. Rose. Protocol
Modiﬁcations for the DNS Security Extensions. rfc4035, 2005.
[19] R. Arends, R. Austein, M. Larson, D. Massey, and S. Rose. Resource
Records for the DNS Security Extensions. rfc4034, 2005.
[20] C. Deccio. Whats in a Name (Collision)? Modeling and Quantifying
In Workshop and Prize on Root Causes and
Collision Potential.
Mitigation of Name Collisions (WPNC), 2014.
[21] D. Eastlake 3rd and A. Panitz. Reserved Top Level DNS Names.
rfc2606, 1999.
[22] Gavron, Ehud. A Security Problem and Proposed Correction With
Widely Deployed DNS Software. rfc1535, 1993.
[23] T. Halvorson, M. F. Der, I. Foster, S. Savage, L. K. Saul, and G. M.
Voelker. From .academy to .zone: An Analysis of the New TLD Land
Rush. In ACM IMC, 2015.
[24] T. Halvorson, K. Levchenko, S. Savage, and G. M. Voelker. XXXtortion?
Inferring Registration Intent in the .XXX TLD. In ACM WWW, 2014.
[25] T. Halvorson, J. Szurdi, G. Maier, M. Felegyhazi, C. Kreibich,
N. Weaver, K. Levchenko, and V. Paxson. The BIZ Top-Level Domain:
Ten Years Later. In Passive and Active Measurement, 2012.
[26] B. S. Kaliski Jr. and A. Mankin.
cation 20150256424: Name Collision Risk Manager.
freepatentsonline.com/y2015/0256424.html.
United States Patent Appli-
http://www.
[27] P. Mockapetris and K. J. Dunlap. Development of the Domain Name
System. In SIGCOMM ’88, 1988.
[28] Mockapetris, Paul. Domain Names Implementation and Speciﬁcation.
rfc1035, 2004.
[29] B. Muller. Whitepaper: Improved DNS Spooﬁng Using Node Re-
delegation. https://www.sec-consult.com/
fxdata/seccons/prod/downloads/whitepaper
-dns-node-redelegation.pdf.
[30] E. Osterweil and D. McPherson. New gTLD Security and Stability
Considerations. Technical Report 1130007 version 1, 2013. http://
techreports.verisignlabs.com/docs/tr-1160018-1.pdf.
[31] E. Osterweil, M. Thomas, A. Simpson, and D. McPherson. New gTLD
Security, Stability, Resiliency Update: Exploratory Consumer Impact
Analysis. Technical Report 1130008 version 1, 2013. http://techreports.
verisignlabs.com/docs/tr-1130008-1.pdf.
[32] E. Osterweil and L. Zhang. Interadministrative Challenges in Managing
DNSKEYs. IEEE Security and Privacy, 7(5):44–51, 2009.
[33] A. Simpson. Detecting Search Lists in Authoritative DNS. In Workshop
and Prize on Root Causes and Mitigation of Name Collisions (WPNC),
2014.
[34] S. Son and V. Shmatikov. The Hitchhiker’s Guide to DNS Cache
Poisoning. In Security and Privacy in Communication Networks, pages
466–483. Springer, 2010.
[35] S. Stamm, Z. Ramzan, and M. Jakobsson. Drive-by pharming.
In
Information and Communications Security, pages 495–506. Springer,
2007.
[36] M. Thomas, Y. Labrou, and A. Simpson. The Effectiveness of Block
Lists to Prevent Collisions. In Workshop and Prize on Root Causes and
Mitigation of Name Collisions (WPNC), 2014.
user awareness [33]. This indicates the lack of a systematic
approach to understand and ﬁnd effective solutions for the
newly-exposed name collision problem. Our work uses in-
depth cause analysis and attack surface quantiﬁcation to ﬁll
this critical gap.
IX. CONCLUSION
In this work, we perform a systematic study of the underly-
ing problem cause and the vulnerability status for WPAD name
collision attack in the new gTLD era. We ﬁrst characterize
the severity of the problem, and uncover that the major cause
of the fundamental leakage problem is very likely devices
used in their non-intended network, such as work laptops
at home. Then, using a candidate attack surface deﬁnition
and a quantiﬁcation method, we systematically assess the
vulnerability of the attack in the wild. We ﬁnd that even though
some attack surface domains have already been registered,
the overall registration and exploitation status are still in the
early stage, indicating that proactive protection strategies are
still feasible. Based on these insights, we discuss remediation
strategies at the new gTLD registry, AS, and end user levels,
and estimate their effectiveness and deployment difﬁculties.
Our work demonstrates the importance of addressing known
security vulnerabilities, which might become more exploitable
as assumptions change. This work also serves as the ﬁrst in-
depth study of one type of name collision problem in the new
gTLD era, hopefully inspiring other follow-up studies.
ACKNOWLEDGMENTS
We would like to thank Danny McPherson, Nick Feam-
ster, Andy Simpson, Yannis Labrou, Aziz Mohaisen, Shumon
Huque, Duane Wessels, Burt Kaliski, Yunhan Jack Jia, our
shepherd, Sam King, and the anonymous reviewers for provid-
ing valuable feedback on our work. The University of Michi-
gan authors were supported in part by the National Science
Foundation under grants CNS-1345226, CNS-1318306, and
CNS-1526455, as well as by the Ofﬁce of Naval Research
under grant N00014-14-1-0440.
REFERENCES
[1] BestWhois service. https://www.whoisxmlapi.com/terms-of-service.php.
[2] Home routers come under attack from new DNS redirection tool. http://
www.enyo.de/fw/notes/the-great-corp-renaming. html.
[3] ICANN: Mitigating the Risk of DNS Namespace Collisions Phase One.
https://www.icann.org/news/announcement-2-2014-06-10-en.
[4] ICANN: Proposal to Mitigate Name Collision Risks. https://www.icann.
org/public-comments/name-collision-2013-08-05-en.
[5] Naming an internal (private) Active Directory LAN. http://arstechnica.
com/civis/viewtopic.php?f=17&t=394734.
[6] Root server distribution. http://root-servers.org.
[7] Second Level Domain (SLD). http://icannwiki.com/SLD.
[8] The DNS Operations, Analysis, and Research Center (DNS-OARC).
https://www.dns-oarc.net/.
[9] Top Level Domain (TLD). http://icannwiki.com/TLD.
[10] WHOIS database. http://whois.icann.org/en.
[11] Setting
Proxy
Web
(WPAD)
setting-up-web-proxy-autodiscovery-protocol-wpad-using-dns , 2012.
DNS.
Autodiscovery
Protocol
http://tektab.com/2012/09/26/
up
using
[12] The New gTLD Program. https://newgtlds.icann.org/en/about/program,
2013.
690690
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply.