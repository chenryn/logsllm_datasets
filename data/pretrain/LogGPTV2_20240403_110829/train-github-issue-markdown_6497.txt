### Preflight Checklist
  * I have read the Contributing Guidelines for this project.
  * I agree to follow the Code of Conduct that this project adheres to.
  * I have searched the issue tracker for an issue that matches the one I want to file, without success.
### Issue Details
  * **Electron Version:**
    * 10.1.3
  * **Operating System:**
    * macOS 10.15.7
  * **Last Known Working Electron version:**
    * 8.5.2
### Expected Behavior
In my project I am loading ReactDevTool.
    app.whenReady().then(async () => {
      await createWindow();
      await session.defaultSession.loadExtension(path.join(os.homedir(), extPath));
    });
In the terminal for version 10.1.3 we see warnings:
    (node:6207) ExtensionLoadWarning: Warnings loading extension at /Users/foobar/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/4.8.2_0:
    Unrecognized manifest key 'browser_action'. 
    Unrecognized manifest key 'minimum_chrome_version'. 
    Unrecognized manifest key 'update_url'. 
    Manifest contains a differential_fingerprint key that will be overridden on extension update. 
    Cannot load extension with file or directory name _metadata. 
    Filenames starting with "_" are reserved for use by the system.
And the extension doesn't work.
### Actual Behavior
With warnings: `ExtensionLoadWarning`, no extension working.
### To Reproduce
    $ git clone PI:EMAIL:electron/electron-quick-start.git
    $ cd electron-quick-start
    $ npm install
and edit `main.js`
    // Modules to control application life and create native browser window
    const { app, BrowserWindow, session } = require('electron');
    const os = require('os');
    const path = require('path');
    const extPath =
      '/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/4.8.2_0';
    async function createWindow() {
      // Create the browser window.
      const mainWindow = new BrowserWindow({
        width: 800,
        height: 600,
        webPreferences: {
          preload: path.join(__dirname, 'preload.js'),
        },
      });
      // and load the index.html of the app.
      await mainWindow.loadFile('index.html');
      // Open the DevTools.
      mainWindow.webContents.openDevTools({ mode: 'detach' });
    }
    // This method will be called when Electron has finished
    // initialization and is ready to create browser windows.
    // Some APIs can only be used after this event occurs.
    app.whenReady().then(async () => {
      await createWindow();
      await session.defaultSession.loadExtension(path.join(os.homedir(), extPath));
    });
    // Quit when all windows are closed, except on macOS. There, it's common
    // for applications and their menu bar to stay active until the user quits
    // explicitly with Cmd + Q.
    app.on('window-all-closed', function () {
      app.quit();
    });