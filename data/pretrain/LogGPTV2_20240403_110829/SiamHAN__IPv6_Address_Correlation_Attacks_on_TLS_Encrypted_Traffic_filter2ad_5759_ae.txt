User
Correlation Tracking Discovery
User
0.855
0.878
0.871
0.893
0.705
0.905
0.897
0.922
0.910
0.769
0.808
0.810
0.823
0.830
0.643
which indicates that defending against IPv6 address correla-
tion attacks requires strict limitations for address-based and
trafﬁc characteristic correlation.
7.2 Attack Chance Reduction
Another countermeasure against IPv6 address correlation at-
tacks is reducing an adversary’s attack chances: (1) Since the
adversary requires long-term monitoring to form the back-
ground knowledge, IPv6 users could escape the measurement
on malicious IXPs by using proxies or Tor system. (2) To
protect the meta-information exposed in the TLS handshake,
applications like encrypted VPN could fundamentally render
the attack impracticable. (3) We argue that designing address-
user relation protection techniques like NAT is a promising
avenue to defend against IPv6 address correlation attacks.
8 Conclusion
In this work, we explore the implementation of user activity
correlation on IPv6 networks. We propose IPv6 address corre-
lation attacks, which leverage an attack model SIAMHAN to
learn the correlation relationship between two arbitrary IPv6
addresses based on the background knowledge of TLS trafﬁc.
Through multi-level attention and metric learning on pairwise
heterogeneous knowledge graphs, SIAMHAN could perform
strong address correlation even on the long-term correlation
tasks, including user tracking and user discovery. Numerous
experiments indicate that SIAMHAN’s performance and prac-
ticality outperform state-of-the-art algorithms by signiﬁcant
margins. We hope that our work demonstrates the serious
threat of IPv6 address correlation attacks and calls for effec-
tive countermeasures deployed by the IPv6 community.
Acknowledgment
We sincerely appreciate the shepherding from Matthew
Wright and the writing help from Xinyu Xing. We would
USENIX Association
30th USENIX Security Symposium    4343
also like to thank the anonymous reviewers for their con-
structive comments and input to improve our paper. This
work is supported by The National Key Research and De-
velopment Program of China (No.2020YFB1006100, No.
2018YFB1800200 and No. 2020YFE0200500) and Key re-
search and Development Program for Guangdong Province
under grant No. 2019B010137003.
References
[13] Oliver Gasser, Quirin Scheitle, Pawel Foremski, Qasim
Lone, Maciej Korczynski, Stephen D. Strowes, Luuk
Hendriks, and Georg Carle. Clusters in the expanse:
In IMC,
Understanding and unbiasing IPv6 hitlists.
pages 364–378, 2018.
[14] Fernando Gont. A method for generating semantically
opaque interface identiﬁers with IPv6 stateless address
autoconﬁguration (SLAAC). RFC 7217, pages 1–19,
2014.
[1] John B. Althouse, Jeff Atkinson, and Josh Atkins. JA3.
https://github.com/salesforce/ja3, 2020.
[15] Fernando Gont and Tim Chown. Network reconnais-
sance in IPv6 networks. RFC 7707, pages 1–38, 2016.
[2] Blake Anderson and David A. McGrew. OS ﬁngerprint-
ing: New techniques and a study of information gain
and obfuscation. In CNS, pages 1–9, 2017.
[16] Roberto Gonzalez, Claudio Soriente, and Nikolaos
In
Laoutaris. User proﬁling in the time of HTTPS.
IMC, pages 373–379, 2016.
[3] Blake Anderson, Subharthi Paul, and David A. McGrew.
Deciphering malware’s use of TLS (without decryption).
Journal of Computer Virology and Hacking Techniques,
pages 195–211, 2018.
[4] Alireza Bahramali, Amir Houmansadr, Ramin Soltani,
Dennis Goeckel, and Don Towsley. Practical trafﬁc
analysis attacks on secure messaging applications. In
NDSS, 2020.
[5] Jonathan Berger, Amit Klein, and Benny Pinkas. Flaw
label: Exploiting IPv6 ﬂow label. In S&P, pages 1259–
1276, 2020.
[6] Leo Breiman. Random forests. Machine Learning,
pages 5–32, 2001.
[7] Lee Brotherston. FingerprinTLS. https://github.c
om/LeeBrotherston/tls-fingerprinting, 2020.
[8] Sumit Chopra, Raia Hadsell, and Yann LeCun. Learning
a similarity metric discriminatively, with application to
face veriﬁcation. In CVPR, pages 539–546, 2005.
[9] Alissa Cooper, Fernando Gont, and David Thaler. Secu-
rity and privacy considerations for IPv6 address genera-
tion mechanisms. RFC 7721, pages 1–18, 2016.
[10] Tianyu Cui, Gang Xiong, Gaopeng Gou, Junzheng Shi,
and Wei Xia. 6VecLM: Language modeling in vector
space for ipv6 target generation. In ECML/PKDD, pages
192–207, 2020.
[11] Jakub Czyz, Matthew J. Luckie, Mark Allman, and
Michael Bailey. Don’t forget to lock the back door!
A characterization of IPv6 network security policy. In
NDSS, 2016.
[17] Google. IPv6. https://www.google.com/intl/en
/ipv6/statistics.html, 2020.
[18] William L. Hamilton, Zhitao Ying, and Jure Leskovec.
Inductive representation learning on large graphs. In
NIPS, pages 1024–1034, 2017.
[19] Anfeng He, Chong Luo, Xinmei Tian, and Wenjun Zeng.
A twofold siamese network for real-time object tracking.
In CVPR, pages 4834–4843, 2018.
[20] Dominik Herrmann, Christian Banse, and Hannes Feder-
rath. Behavior-based tracking: Exploiting characteristic
patterns in DNS trafﬁc. Computer Security, pages 17–
33, 2013.
[21] Robert M. Hinden and Stephen E. Deering. IP version 6
addressing architecture. RFC 4291, pages 1–25, 2006.
[22] Martin Husák, Milan Cermák, Tomás Jirsík, and Pavel
Celeda. Network-based HTTPS client identiﬁcation
using SSL/TLS ﬁngerprinting. In ARES, pages 389–
396, 2015.
[23] Geoff Huston, Anne Lord, and Philip Smith. IPv6 ad-
dress preﬁx reserved for documentation. RFC 3849,
pages 1–4, 2004.
[24] Anil K. Jain. Data clustering: 50 years beyond K-means.
In ECML/PKDD, pages 3–4, 2008.
[25] Diederik P. Kingma and Jimmy Ba. Adam: A method
for stochastic optimization. In ICLR, 2015.
[26] Thomas N. Kipf and Max Welling. Semi-supervised
In
classiﬁcation with graph convolutional networks.
ICLR, 2017.
[12] Pawel Foremski, David Plonka, and Arthur W. Berger.
Entropy/IP: Uncovering structure in IPv6 addresses. In
IMC, pages 167–181, 2016.
[27] Marek Kumpost and Vashek Matyas. User proﬁling
and re-identiﬁcation: Case of university-wide network
analysis. In TrustBus, pages 1–10, 2009.
4344    30th USENIX Security Symposium
USENIX Association
[28] Frank Li and David Freeman. Towards A user-level
understanding of IPv6 behavior. In IMC, pages 428–
442, 2020.
[29] Chang Liu, Longtao He, Gang Xiong, Zigang Cao, and
Zhen Li. FS-Net: A ﬂow sequence network for en-
crypted trafﬁc classiﬁcation. In INFOCOM, pages 1171–
1179, 2019.
[30] Marek Majkowski. SSL ﬁngerprinting for p0f. https:
//idea.popcount.org/2012-06-17-ssl-fingerp
rinting-for-p0f/, 2012.
[31] Christopher D. Manning, Prabhakar Raghavan, and Hin-
Introduction to information retrieval.
rich Schütze.
Cambridge University Press, 2008.
[32] Tomek Mrugalski, Marcin Siodelski, Bernie Volz, An-
drew Yourtchenko, Michael C. Richardson, Sheng Jiang,
Ted Lemon, and Timothy Winters. Dynamic host conﬁg-
uration protocol for IPv6 (DHCPv6). RFC 8415, pages
1–154, 2018.
[33] Thomas Narten, Richard Draves, and Suresh Krishnan.
Privacy extensions for stateless address autoconﬁgura-
tion in IPv6. RFC 4941, pages 1–23, 2007.
[34] Milad Nasr, Alireza Bahramali, and Amir Houmansadr.
DeepCorr: Strong ﬂow correlation attacks on tor using
deep learning. In CCS, pages 1962–1976, 2018.
[35] Xichuan Niu, Bofang Li, Chenliang Li, Rong Xiao,
Haochuan Sun, Hongbo Deng, and Zhenzhong Chen. A
dual heterogeneous graph attention network to improve
long-tail performance for shop search in e-commerce.
In KDD, pages 3405–3415, 2020.
[36] Eric Rescorla. The transport layer security (TLS) proto-
col version 1.3. RFC 8446, pages 1–160, 2018.
[37] Nadi Sarrar, Gregor Maier, Bernhard Ager, Robin Som-
mer, and Steve Uhlig. Investigating IPv6 trafﬁc - what
happened at the world IPv6 day? In PAM, pages 11–20,
2012.
[38] Chuan Shi, Yitong Li, Jiawei Zhang, Yizhou Sun, and
Philip S. Yu. A survey of heterogeneous information
network analysis. IEEE Transactions on Knowledge
and Data Engineering, pages 17–37, 2017.
[39] Payap Sirinam, Mohsen Imani, Marc Juárez, and
Matthew Wright. Deep ﬁngerprinting: Undermining
website ﬁngerprinting defenses with deep learning. In
CCS, pages 1928–1943, 2018.
[41] Internet Society. World IPv6 launch. https://www.wo
rldipv6launch.org, 2020.
[42] Yixin Sun, Anne Edmundson, Laurent Vanbever, Oscar
Li, Jennifer Rexford, Mung Chiang, and Prateek Mittal.
RAPTOR: routing attacks on privacy in Tor. In USENIX
Security, pages 271–286, 2015.
[43] Yizhou Sun and Jiawei Han. Mining heterogeneous in-
formation networks: a structural analysis approach. Acm
Sigkdd Explorations Newsletter, pages 20–28, 2012.
[44] Yizhou Sun, Jiawei Han, Xifeng Yan, Philip S. Yu, and
Tianyi Wu. PathSim: Meta path-based top-k similarity
search in heterogeneous information networks. VLDB,
pages 992–1003, 2011.
[45] Yaniv Taigman, Ming Yang, Marc’Aurelio Ranzato, and
Lior Wolf. DeepFace: Closing the gap to human-level
performance in face veriﬁcation. In CVPR, pages 1701–
1708, 2014.
[46] Susan Thomson, Thomas Narten, and Tatuya Jinmei.
IPv6 stateless address autoconﬁguration. RFC 4862,
pages 1–30, 2007.
[47] Johanna Ullrich and Edgar R. Weippl. Privacy is not an
option: Attacking the IPv6 privacy extension. In RAID,
pages 448–468, 2015.
[48] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser,
and Illia Polosukhin. Attention is all you need. In NIPS,
pages 5998–6008, 2017.
[49] Petar Velickovic, Guillem Cucurull, Arantxa Casanova,
Adriana Romero, Pietro Liò, and Yoshua Bengio. Graph
attention networks. In ICLR, 2018.
[50] Shen Wang, Zhengzhang Chen, Xiao Yu, Ding Li,
Jingchao Ni, Lu-An Tang, Jiaping Gui, Zhichun Li,
Haifeng Chen, and Philip S. Yu. Heterogeneous graph
matching networks for unknown malware detection. In
IJCAI, pages 3762–3770, 2019.
[51] Tao Wang. High precision open-world website ﬁnger-
printing. In S&P, pages 152–167, 2020.
[52] Xiao Wang, Houye Ji, Chuan Shi, Bai Wang, Yanfang
Ye, Peng Cui, and Philip S. Yu. Heterogeneous graph
attention network. In WWW, pages 2022–2032, 2019.
[40] Payap Sirinam, Nate Mathews, Mohammad Saidur Rah-
man, and Matthew Wright. Triplet ﬁngerprinting: More
practical and portable website ﬁngerprinting with n-shot
learning. In CCS, pages 1131–1148, 2019.
[53] Xinyuan Wang and Douglas S. Reeves. Robust correla-
tion of encrypted attack trafﬁc through stepping stones
by manipulation of interpacket delays. In CCS, pages
20–29, 2003.
USENIX Association
30th USENIX Security Symposium    4345
[54] Kilian Q. Weinberger, John Blitzer, and Lawrence K.
Saul. Distance metric learning for large margin near-
est neighbor classiﬁcation. In NIPS, pages 1473–1480,
2005.
C Discovery Algorithm
The detailed discovery algorithm is shown in Algorithm 2,
which exploits SIAMHAN to discover the unique users in the
discovery candidate set.
Algorithm 2 The discovery algorithm applied by SIAMHAN
Require: Pre-trained SIAMHAN ρ; Discovery candidate
set S; Background knowledge κt; Task threshold η.
Calculate distance D for (cid:104)Si, S j(cid:105) using ρ
for Address S j in group Gk, where j ≤ |Gk| do
Ensure: User groups G under the discovery candidate set S
1: Build knowledge graphs for each Si
2: Initialize user group set G = {G1}
3: Initialize S1 into the ﬁrst user group G1
4: for Si in discovery candidate set S, where 1  η then
Initialize a new user group G|G|+1 into G
Initialize Si into the new user group G|G|+1
end for
Calculate average distance ¯Dk for Si to Gk
Classify Si into Gk with the minimum ¯Dk
for Gk in user group set G do
else
Appendix
A Analysis of Users without Plaintext Cookies
The analysis of TLS users without plaintext cookies is shown
in Table 7. Comparing with Table 3, results indicate that the
source and online habits of the users with plaintext cookies
are similar to the users without plaintext cookies.
Table 7: The analysis of TLS users without plaintext cookies
with 2 dimensions including the top ASes of client addresses
and the top SNI accessed by users.
AS Name
CSTNET
China Unicom
CNGI-CERNET2
CERNET
Reliance Jio
TSINGHUA6
Cloudﬂare
PKU6-CERNET2
ZZU6-CERNET2
SNI
%Hits
75.2% *.google.com
10.3% *.adobe.com
5.1%
3.0%
1.3%
0.7%
0.6%
0.5%
0.5%
%Hits
18.3%
14.6%
13.2%
*.microsoft.com
7.8%
*.facebook.com
4.3%
*.cloudﬂare.com
4.0%
*.icloud.com
*.exoclick.com
2.8%
*.macromedia.com 2.3%
*.ﬂurry.com
1.4%
B Tracking Algorithm
The detailed tracking algorithm is shown in Algorithm 1,
which exploits SIAMHAN to search for addresses in the test
set that belong to the same user as the tracking candidates.
Algorithm 1 The tracking algorithm applied by SIAMHAN
Require: Pre-trained SIAMHAN ρ; Tracking candidate
Initialize target address set TSi = {}
for Tj in test address set T , where j ≤ |T| do
set S; Test address set T ; Background knowledge κt.
Ensure: Address sets TSi link to the same user with each Si
1: for Si in tracking candidate set S, where i ≤ |S| do
2:
3:
4:
5:
6:
7:
8: end for
9: return TSi for each Si
Build pairwise knowledge graphs for (cid:104)Si, Tj(cid:105)
Test relationship R of (cid:104)Si, Tj(cid:105) using pre-trained ρ
end for
Append Tj in address set TSi if relationship R = 1
4346    30th USENIX Security Symposium
USENIX Association