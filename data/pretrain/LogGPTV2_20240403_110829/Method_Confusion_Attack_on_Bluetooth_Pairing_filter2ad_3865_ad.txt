Method Confusion, the user is shown Fig. 8a on Android
device I and Fig. 8c on Android device R.
We assume that the user would transfer the value between
the devices and conﬁrm both dialogues.
B. Chances of Detection
One may argue that under certain circumstances a user could
realize that two different Association Models are performed.
Users may spot this based on the expectations communicated
to them.
We argue though,
that the user would be typically un-
able to notice the Method Confusion Attack. Foremost, a
regular user cannot be expected to know which actions a
speciﬁcation-compliant Bluetooth implementation may request
from them. Furthermore, Method Confusion is based on a
so far undisclosed design ﬂaw in the pairing method; it was
never intended that the user may need to verify consistent
use of Association Models. Therefore, implementations do not
speciﬁcally highlight the Association Model they employ.
Our examples demonstrate, that it is difﬁcult to distinguish
the dialogue for NC and the dialogue for PE (on a display-
device). More importantly, the difference between a legitimate
and an attacked pairing attempt is sometimes even impossible
to spot: When comparing the example attack from the above
section, i.e., Fig. 8a and Fig. 8c, with a legitimate benign
(i.e., not attacked) PE dialogue combination for Android (i.e.,
Fig. 8b and Fig. 8c), it is apparent that the user has only a
negligible chance to realize any differences between Fig. 8a
and Fig. 8b. Some interfaces (e.g. iOS) may be more intuitive
and rather raise awareness with the user.
We have conducted a survey of over 35 popular devices
(cf. Section VIII-A). None of these devices differentiated their
PE-display dialogues signiﬁcantly from their NC dialogues.
It is, therefore, unlikely that the user recognizes any irreg-
ularities. To further strengthen that assumption, we conducted
a user study in which none of the 40 participants recognized
the attack.
TAN Generator
(d)
-
Passkey Enter (Translation:
”Enter Pairing-Code:“)
(b) Android 10.0 - Passkey Display.
(c) Android 10.0 - Passkey Enter.
(e) Samsung Galaxy Smart
Watch - Numeric Compari-
son.
Fig. 8. Examples of common pairing dialogues.
VII. USER STUDY
To further investigate the chances of attack detection, we
performed a user study to determine whether participants
recognize irregularities in the pairing dialogs when a Method
Confusion Attack is performed.
A. Study Preliminaries
The study was conducted at the campus of a major research
university, where participants were recruited at a public social
event. Due to the location, a rather technically-experienced
participant group was recruited. We argue that a higher ed-
ucated and technical audience provides a stricter evaluation
for our attack. Any individuals known to the experimenters
like family members or friends were excluded from the
study to avoid acquaintance bias. As compensation for their
participation, participants were granted a food voucher.
Our institution does not require IRB approval for user
studies, but we carefully designed our study to adhere to
common standards in the security and usability community
[16]. All participants signed a consent form and had to read
and accept a privacy disclaimer before data collection was
performed. To account for the priming effect, subjects were
told that they were participating in a ‘user study about wireless
connectivity’. We offered a debrieﬁng option to participants
after conclusion of the study. The data collected in the study
was safely stored and only accessible to the participating
researchers. The appendix provides an overview of the par-
ticipant demographics.
B. Experimental Procedure
The target of the study was to evaluate how users would
behave when confronted with a Method Confusion Attack
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1340
DirectwithMitMPayloadSizeThroughputRTTthroughputRTT200B392kbps165ms384kbps350ms100B400kbps80ms380kbps273ms50B296kbps52ms280kbps110mson everyday devices. The subjects were provided with three
common Bluetooth-capable devices (A–C) and a Bluetooth-
enabled smartphone (D):
• A. Wireless Headphones: Sony WH-1000XM3; capable
of OOB (NFC) pairing.
• B. Wireless In-Ear-Headphones: SoundPeats TrueCap-
sule; capable of JW pairing.
• C. Mobile TAN Generator: Reiner SCT tanJack Blue-
tooth; capable of PE pairing.
• D. Android Smartphone: Samsung Galaxy S8 Edge -
Android 9.0; capable of all LESC pairing methods.
The devices were provided together with their vendor-supplied
manuals.
The subjects were asked to pair the devices (A–C) with
the smartphone (D). This was described as preparation to
subsequently ﬁll out a short survey about their user experience
with those wireless devices (given in the Appendix). There
was no time limit imposed. Instead, the participants were told
that they were free to stop their attempts whenever they felt it
suitable. For instance, if they grew frustrated with repeatedly
failed pairing attempts or bad UI design.
After explanation of the procedure, the participants were
left alone with the task. This way, we prevented that any
cues from the experimenter would be “picked up” by the
participants [17]. We addressed the “helpful participant” bias
by two additional measures that were clearly communicated
to all participants beforehand. It was urged that the main
objective of the study would be to collect user experience,
and that failed attempts had the same value to our research as
successful ones. The participants were also made aware that
they would receive the compensation either way; even if a
pairing attempt did not succeed and they would move on to
another device.
After they attempted the pairing, the survey was conducted
as announced irrespective of whether they were able to pair
with all the devices or not.
C. Hidden Attack
The users were not made aware of the fact that the pairing
between devices C and D was attacked using Method Con-
fusion. To strike a reasonable balance between simple study
design and realism, we did not conduct the jamming process
in the background, but simulated it. As preparation for that
the devices C and D were once paired with each other in
advance. After successful pairing, device C was showing up
under the ’Paired Devices’ section in the Bluetooth menu of
D. C was not shown anymore under ’Available Devices’ even
if C was advertising. Finally, we renamed the device C in D’s
Bluetooth menu from its original name of ’tanJackXXXX’ to
the inconspicuous designator ’Audi Q6’ (i.e., a well-known
car manufacturer). Therefore, the user was now unable to ﬁnd
the original device when it began advertising.
Instead,
the BThack MitM application advertised itself
under the name ’Reiner SCT*’, which was the device name
printed prominently over the device’s screen. If the user
Fig. 9. Mapping victim IOCap to MitM IOCap
initiated the pairing to the attacker’s MitM application, the
attack would be performed as described in Section III-C.
D. User Study Results
The study showed that 37 (92.5%) of the participants
eventually entered the NC-value shown in device D into the PE
ﬁeld of device C. Through that action, the MitM attacker was
able to complete pairing with both devices. In turn, 3 (7.5%) of
the participants were not able to conduct the pairing. Since the
situation presented to the participants was virtually identical
to a valid PE pairing, none of the participants suspected an
attack. Instead, all of the failed attempts were assumed to be
their own mistakes or Bluetooth connectivity issues.
In conclusion, the study lends substantial support to our
argumentation in Section VI-A.
VIII. DISCUSSION
In this subsection, we present data on the applicability of
the Method Confusion Attack to the Bluetooth device market.
Next, we discuss possible short-term and long-term ﬁxes.
Finally, we provide information on the applicability of the
attack for BT Classic.
A. Applicability, Restrictions, and Impact
As a reminder, we summarized the attack requirements
in the matrix in Fig. 9. Further, we already successfully
demonstrated our attack with several popular devices (see Sec-
tion V). While many attacks exist which target the Bluetooth
pairing process (cf. Section IX) none of them are applicable
when MitM protection is used. Relevant organizations in the
standards space like NIST ofﬁcially strongly recommend that
all vendors that use Bluetooth should utilize the strongest
Bluetooth security modes, as those enable MitM protection
[18]. Our attack speciﬁcally targets devices that rely on that
protection feature.
While MitM protection may not be common for the average
Bluetooth device, security critical device classes are enforcing
MitM protection more regularly.
The Bluetooth SIG’s Launch Studio lists 22,757 Declaration
IDs for “previously qualiﬁed designs and declared products”
for the time period of January 2015 - April 2020 [19]. Of
these, 17,154 are speciﬁcally for end products including many
devices from popular brands with large numbers of users.
Further, many of the IDs are bulk listings for dozens or even
hundreds of different products. For example, ID D049484
(February 27, 2020) contains 592 Toyota car models and
details about the associated car multimedia system. While
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1341
InitiatorDisplayYesNoKeyboardOnlyKeyboardDisplayAttacknotapplicableNumericonPasskeyNumericonPasskeyDisplayYesNoPasskeyonNumericAttacknotapplicablePasskeyonNumericKeyboardOnlyPasskeyonNumericNumericonPasskeyBothvariantsapplicableResponderKeyboardDisplaythe public part of Launch Studio does not provide a detailed
enough search functionality to determine which devices actu-
ally rely on MitM protection, it allows to identify potentially
sensitive device categories. For example, one can quickly
identify devices that likely communicate highly sensitive in-
formation such as heart rate/pressure monitors, blood glucose
monitors, or smart baby monitors. Access for SIG members
even includes data that indicates support of MitM protection,
but also does not state whether it is actually employed. Internet
search (for manuals and setup videos) can then help to verify
if a device actually uses MitM protection.
We investigated two sensitive device classes to better un-
derstand the distribution of MitM-protected devices. First, we
researched which devices of their class are making up the
relevant part of their market. Then, we determined whether
these devices rely on the MitM protection of Bluetooth pairing.
1) Smartwatches: These devices are using Bluetooth to
transfer notiﬁcations, messages, health data and location-
tracking information to users’ smartphones. For 2019, the
overall number of shipped devices increased to 92.4 Million
(up from 75.3 Million in 2018) [20]. “Major players” are
Apple, Samsung, Fitbit, Garmin, and Fossil in a relatively
“fragmented” global market [21]. We examined manuals and
setup videos of these vendor’s smartwatch device to determine
their method of pairing (links to the manuals are provided in
the Appendix). We found that all examined Samsung, Garmin
and Fossil smartwatch devices are utilizing either NC or PE
Bluetooth pairing, and are, therefore, enforcing Bluetooth’s
MitM protection. Apple watches perform OOB pairing and
do, therefore, not rely on Bluetooth’s MitM. Fitbit uses JW
combined with application layer encryption. In summary, of
the total market, at least 12.3% (ﬁrst quarter 2018) – 15.1%
(ﬁrst quarter 2019), e.g., data for Samsung, Garmin, and Fossil,
likely rely on Bluetooth’s MitM protection [22].
2) Car Multimedia: Multimedia systems in cars interact
with smartphones to provide hands-free telephony, GPS track-
ing and access control. We determined the best selling car
models of 2019 [23]. Again, we examined setup manuals of
the most recent entertainment system of these models (see
Table in the Appendix) and determined that all of them are
utilizing Bluetooth’s MitM protection feature (i.e., either PE
or NC for pairing). The 2019 sales of these cars amount to
over 8.3 Million vehicles [23]. Note our Toyota example from
above, which strongly suggests that the entire current range of
products is using Bluetooth’s MitM protection feature.
In summary, we assume that a sizable percentage of the
markets for smartwatches and car entertainment systems is
vulnerable to our attack.
B. Proposed Fix
In the following, we discuss possible countermeasures that
can be implemented against the attack. For every ﬁx, we
discuss how it would affect
the current device base and
standards and how it inﬂuences other security aspects.
1) Enforcing Pairing Method: In some cases a vendor of
a product can assume certain properties of the devices the
product will be paired with.
This might be the case if the product is just to be paired
with another device that is also issued by the vendor. In this
case the pairing method can just be ﬁxed by setting IOCaps
on both products that restrict the Association Model to one
speciﬁc method (cf. Section II-C).
2) User Interface Design Hotﬁx: The Bluetooth speciﬁca-
tion does not dictate a speciﬁc wording or UI design for user
dialogues required for NC and PE. Therefore every device
manufacturer and OS vendor chooses visual presentation and
wording independently. Typically, these design decisions are
dictated by device restrictions like screen size as well as qual-
ity and design premises like creating an intuitive uninterrupted
user experience.
As a hotﬁx / ﬁrst mitigation to the attack, vendors can
warn the user against misusing the information presented.
For instance, a NC dialogue box could warn the user of not
entering the shown number anywhere, comparable to a credit
card PIN. Colors and different text styles can be utilized to
improve effectiveness. Uzun et al. [24] conducted a user study
on the Bluetooth dialog in which they proved that a clearer
wording can lead to drastically improved user awareness.
3) Authenticating Association Model: We argue that relying
on the user to be aware of the Association Model is not a
sustainable practice.
Primarily, the pairing methods of Bluetooth were designed
with the goal to ease the pairing process and allow average
users to conduct a secure pairing with minimal, simple interac-
tion. The average user is typically also not aware that attacks
like Method Confusion are a threat and special attention on
the used Association Model is required. In fact, the only duty
the user is made aware of is the task of comparing or entering
numbers.
Secondly, a user often has none or no clear indication
which Association Model is performed by the device and
is not able to decide whether a pairing is under attack (cf.
dialogue examples in Section VI-A).
We argue that Method Confusion needs to be prevented
through the protocol itself. We suggest embedding the infor-
mation on which Association Model is used into the informa-
tion that is compared or transferred by the user. Speciﬁcally,
we propose that a passkey used by PE has to be distinctly
distinguishable to a value displayed in NC. For instance, a
PE-passkey may always have its least signiﬁcant bit set to
1 while a NC-value has its least signiﬁcant bit set to 0. The
application expecting a PE-passkey would therefore be able to
detect and abort Method Confusion Attacks when it receives a
NC value. This solution has the beneﬁt of being fairly easy to
amend to the existing protocol. Primarily, devices attempting
to support this would not be required to implement new input
methods. Secondly, the protocol would not require changes.
By using one bit of the 20-bit value to signal the Association
Model, we reduce the space of possible values from 1.000.000
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1342
Fig. 10. BC: Mapping victim IOCap to MitM IOCap
to 500.000. Therefore, a MitM attacker has better chances of
correctly brute-forcing the passkey during pairing. However,
given recent hardware capabilities this is still sufﬁciently large
to prevent an attacker from guessing the correct PE-passkey
/ NC-value during the pairing process. Therefore, we argue
that the beneﬁts of this method may outweigh that drawback.
As the Bluetooth SIG pointed out, another concern with this
solution is its backward compatibility. Devices that do not
follow these updated guidelines can cause the connection
attempt to fail in 50% of the cases.
An alternative to reutilizing the existing value space is to