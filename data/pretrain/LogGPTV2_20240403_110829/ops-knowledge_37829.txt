User: 如何在Linux系统上安装和使用Docker容器，包括镜像管理、容器创建和启动等方面的基本操作。
Assistant: 安装Docker

1. 安装Docker的依赖库和工具，执行以下命令：

   ```
   sudo apt-get update
   sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
   ```

2. 添加Docker的官方GPG密钥，执行以下命令：

   ```
   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   ```

3. 添加Docker的官方APT源，执行以下命令：

   ```
   sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   ```

4. 更新APT源并安装Docker：

   ```
   sudo apt-get update
   sudo apt-get install docker-ce
   ```

   安装完成后，执行以下命令验证Docker是否正常运行：

   ```
   sudo systemctl status docker
   ```

   若输出类似于以下信息即为安装成功：

   ```
   docker.service - Docker Application Container Engine
   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)
   Active: active (running) since Mon 2018-04-09 22:05:43 CST; 2min 13s ago
      ...
   ```

镜像管理

- Docker镜像是由Dockerfile构建（或从其他Docker镜像拉取）得到的，它包含了能用于构建容器的文件系统、应用程序和指令。（类似于虚拟机中的镜像文件）。
- 通过Docker镜像，我们可以直接构建出一个容器。如果Docker镜像不包含所需应用程序，则需要自己编写Dockerfile进行构建。

1. 拉取镜像

   Docker官方提供了大量的镜像，我们可以直接从Docker Hub上拉取对应的镜像：

   ```
   docker pull [imageName]
   ```

   例如，拉取官方的Ubuntu镜像：

   ```
   docker pull ubuntu
   ```

2. 查看镜像列表

   ```
   docker images
   ```

3. 删除镜像

   ```
   docker rmi [imageName]
   ```

   例如，删除Ubuntu镜像：

   ```
   docker rmi ubuntu
   ```

容器管理

- Docker容器是Docker镜像的实例，类似于虚拟机中的实例（也可以理解为进程）。
- 当我们通过Docker命令启动容器时，Docker会创建一个文件系统、读写层和网络；并在文件系统上运行该容器的应用程序。
- 可以通过指令对容器进行管理。

1. 创建容器

   ```
   docker run [imageName]
   ```

   例如，在本地创建一个Ubuntu容器：

   ```
   docker run -it ubuntu /bin/bash
   ```

   - `-it`：表示以交互模式运行容器；
   - `ubuntu`：表示使用Ubuntu镜像创建容器；
   - `/bin/bash`：表示指定容器启动后默认运行的命令。

2. 查看容器列表

   ```
   docker ps
   ```

   若想查看所有容器（包括已停止的容器），添加参数`-a`：

   ```
   docker ps -a
   ```

3. 启动和停止容器

   - 启动容器：

     ```
     docker start [containerName|containerID]
     ```

   - 查看容器运行状态：

     ```
     docker ps [containerName|containerID]
     ```

     参数：

     - `-a`：查看所有容器（包括已停止的容器）；
     - `-q`：只显示容器ID。

   - 停止容器：

     ```
     docker stop [containerName|containerID]
     ```

4. 删除容器

   ```
   docker rm [containerName|containerID]
   ```

   例如，删除名为my-ubuntu的容器：

   ```
   docker rm my-ubuntu
   ```

参考链接：

- Docker官方文档：https://docs.docker.com/
- 阮一峰的Docker教程：http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html