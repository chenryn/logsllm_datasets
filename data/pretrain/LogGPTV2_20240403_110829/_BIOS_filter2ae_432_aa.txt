# 【技术分享】利用符号执行和虚拟平台查找BIOS漏洞

**译文声明**
本文为翻译文章，原文来源于 intel.com。译文仅供参考，具体内容及含义以原文为准。

**翻译者**：lfty89  
**预估稿费**：200 RMB  
**投稿方式**：发送邮件至 linwei#360.cn 或登录网页版在线投稿

---

## 前言
在网络安全攻防对抗中，寻找代码中的漏洞已成为关键环节。防御方需要全面定位并修补系统中的所有潜在漏洞，而攻击方只需找到一个切入点即可取得成功。因此，防御方通常需要更有效的工具来应对这一挑战。

模糊测试（Fuzzing）是一种通过向系统发送随机输入来发现漏洞的技术。然而，由于测试目的不明确等原因，单纯的盲测效率较低。防御方可以通过结合源代码、攻击背景等信息，并利用静态分析、符号执行（Symbolic Execution）等方法，提高模糊测试的效率，从而精准地定位并修复漏洞。

Intel 的 Excite 项目采用了一种结合符号执行、模糊测试和具体化测试的方法，在敏感代码中寻找漏洞。研究发现，将符号执行与具体化技术相结合，其执行效率优于单独使用任何一种技术。自2015年启动以来，Excite 已在多个场合展示成果（如 USENIX Workshop on Offensive Technologies (WOOT) 2015 和 ZeroNights 2016），现已成为自动化挖掘 BIOS 漏洞的有效工具。

Excite 是一种结合多种技术的自动化工作流，具体包括：
- 结合动态选择性符号执行技术和模糊测试生成测试用例；
- 利用 Wind River*Simics* 虚拟平台导出与平台相关的数据和代码；
- 通过重放测试等方式检测和研究发现的安全问题；
- 评估代码覆盖率以准备下一次的测试用例。

图1展示了 Excite 如何将符号执行、模糊测试和虚拟平台技术结合起来。

## 目标：系统管理模式
目前，Excite 项目重点研究系统管理模式（SMM: System Management Mode）中的系统管理中断（SMI: System Management Interrupt）处理程序。近年来，针对 BIOS 的攻击日益增多，Intel 采取了代码开发指南、安全设计指南、代码复检和静态分析等措施逐步提高 BIOS 的安全性。Excite 以其自动化测试生成能力，成为 BIOS 安全技术领域的新成员。

在 Intel 处理器中，SMM 是权限最高的执行状态（相当于运行在 Ring -2 层，操作系统在 Ring 0 层，应用程序在 Ring 3 层）。这使得 SMM 成为 rootkit 藏匿的理想位置。操作系统无法感知 SMM 的运行时间，也无法阻止 SMM 代码的执行。因此，从整体平台安全的角度来看，SMM 的安全性至关重要。

SMM 使用的代码和数据存储在系统管理内存（SMRAM: System Management RAM）中，这是系统 RAM 的一部分，专门分配给 SMM 使用，并受到处理器保护机制的保护。进入 SMM 执行上下文通常需要特定事件触发 SMI 调用。

发生 SMI 后，通信缓存（Communications Buffer）用于传递来自外界的参数。该缓存存储在普通 RAM 中，可能被攻击者控制。因此，SMI 处理程序必须谨慎验证通信缓存中的数据，以防止被利用。

由于 SMI 处理程序可以访问机器的任意内存区域，从安全角度来看，它们更具危险性。UEFI BIOS 中有一个组件表定义了 SMI 处理程序可以访问和不能访问的内存区域。

SMM 是 UEFI BIOS 的一部分，因此它不是静态组件。在系统启动过程中，BIOS 会动态加载 SMM 驱动和相关 SMI 处理程序到 SMRAM 中。安装完成后，SMRAM 会被处理器锁定。

## 在 SMM 中应用 Excite
目前，Excite 计划捕获 UEFI SMI 处理程序中的两个主要安全问题：外部调用 SMRAM 和访问禁止的内存区域。为了实现这一目标，Excite 工具集采用了以下组合技术：

1. **构建和加载 UEFI BIOS**：首先以标准化方式构建 UEFI BIOS，然后将其加载到 Simics 虚拟平台中并启动。Simics 可以模拟真实的 Intel 平台，使 UEFI 运行真实环境中的所有代码。
2. **导出 SMRAM 镜像**：在 SMM 驱动初始化到 SMRAM 锁定之间的阶段，Simics 导出一份用于符号执行的 SMRAM 镜像。这种方法的好处在于，导出的数据包括 SMM 模块的初始状态，避免了额外开发复杂 SMM 模型的工作。
3. **生成测试框架**：接下来，开始生成测试框架，进行进一步的测试和分析。

通过这些步骤，Excite 能够高效地在 SMM 中发现并修复潜在的安全漏洞。