## Page 138
128
后一屏的截图）。
步时就可以和服务器端单独通信了，如图6-33所示（因为信息量比较大，所以只有最
同步到相对应的服务器上。
6-32所示。如果不是同步所有服务器，就可以使用salt'minion id'state.slshosts.install命令
于在list中添加一个元素。所以说在extending时，是附加的内容，而不是覆盖。
Python中的dict（当然dict中会嵌套dict和list）。在修改include模块的watch内容时，相当
是全部符合要求，这时就需要用extend来重写这部分内容，这里是追加而不是覆盖。
所以简单地和你说一下它的作用，就不举例子了。在includ文件中，里面的内容也许并不
企业互联网自动化之SaltStack
第6章
salt*state.highstate命令可以把top.sls文件中包含的模块应用到所有服务器上，如图
因为SLS中的文件仅仅是结构化的数据而已，在处理SLS时就会将其中的内容解析成
如果是新添加的minion端，可以使用salt-callstate.highstate命令，这样客户端同
在Salt中，除了include外还有一个extend。因为我这里没有复杂到要使用extend，
图6-32
---
## Page 139
目录，所以会有makedirs选项，这样可以保证这些目录是存在的。
的KEY文件相关属性。因为有些系统或者其他的设置，在创建用户的时候不会存在宿主
6.2.2
条件，如图6-34所示。
接下来和你说一下用户方面的配置，如图6-35所示。SLS文件首先要定义一个SSH
另外，如果你公司需要依据各种条件来定制的话，可以使用Grains的相关选项来作为
SaltStack实例详解（二）：用户的添加
INFO
++
]Completed state [/etc/hosts] at time 14:41:29.676565
(endif8)
elif grains['osfinger
tmp/test:
27.0.0.0
ge
by S=1
图6-34
图6-33
ated
main
n10
galho
CentOs-6'}
ma
6.2
SaltStack实例详解
129
---
## Page 140
130
pkg.installed：表示定义包的状态，这里的状态是要安装。
6.2.3
他服务器端了。
添加liuxin用户必须先存在liuxin组。
wheel这个组里。
入另一个组里，即Debian 系列的系统是加入 sudo这个组里，RedHat系列的系统是加入
面介绍定义用户吧。添加 liuxin用户，它的uid和gid都是1982，然后根据不同的系统加
企业互联网自动化之SaltStack
第6章
安装软件包还是挺简单的，如图6-36所示。其中，htop：表示定义要安装的包名；
运行后就可以根据不同的系统增加 liuxin用户，然后就可以通过ssh无密码登录到其
require 的意义相信你也知道，它和 Puppet一样都是依赖条件。这里的意思就是，要
如果没有Yum这类的源且无公网IP的话，可能需要直接安装rpm包了。只需要加上
上面的命令中定义了 liuxin这个用户和组的存在，且定义 liuxin组的gid为1982。
SaltStack实例详解（三）：安装软件包
iuxin:
/home/liuxin/.ssh/authorized_keys:
endif）
if grains[
user.present:
require:
groups:
gid:
gid:
group:
group:liuxin
'os_family']==Debian8)
htop:
udo
liuxin
/bin/bash
salt://user/authorized_keys
pkg.installed
图6-36
图6-35
---
## Page 141
来观察选择。
统版本来安装不同的软件包。可以根据不同的筛选条件来判断，这个可以通过grains.items
这里的unless和Puppet类似，也是一个判断。要不然，每次执行 Salt 都要安装一次…
Centos.sls文件，内容如图6-39所示。因为没有做源，所以只是来确定rpm包位置及安装。
6.2.4
例如增加uid、pkg等。
函数。在这里如果/tmp/java.tgz有更改，就会重新解压到/opt下。当然这里可以watch多个，
还有其他的作用。在被监视的state发生变化时，定义watch语句的state会执行自己的watch
了。第二段代码是对java.tgz包的操作，要把java.tgz包解压到/opt下，然后watch 这个包。
然通过Salt安装rpm包时会报错。
一条命令 skip_verify:True，如图6-37所示。这条命令的意思是跳过GPG的验证检查，不
Debian.sls文件内容如图6-40所示，首先要安装包libcurl3-gnutls，然后根据不同的系
结合上面的各项说明，再看看Zabbix客户端的安装。因为我这是两种系统，首先是
watch和require类似，都能保证被监视或需要的state在自己之前执行，但是watch
另外一种就是tar包的安装，如图6-38所示。第一段代码是文件的管理，这里就不多说
SaltStack实例详解（四）：安装Zabbix客户端
java.tgz:
watch:
file:/tmp/java.tgz
mc:salt://mc/mc.rpm
图6-38
root
图6-37
salt://java/java.tgz
rify: True
6.2SaltStack实例详解
131
---
## Page 142
132
是监听IP和Hostname，如图6-41和图6-42所示。
企业互联网自动化之SaltStack
第6章
配置文件files.sls，这里用了 jinja的模板，所以需要在conf文件里配置。这里配置的
(endif8）
pm
cpm
endif&
elif
ana
LX-4
2.2
:byd
backiateminiona
source: Balt://zabbix/zabbix_agentd.conf
2.5-1.el6.x86_64.rpm:
salt://zabbix/zabbix-2.2.5-1.e16.x86_64.rpm
se'
图6-41
图6-40
图6-39
gen
64
64
---
## Page 143
里，
然有的是需要来判断系统类型的。这样Zabbix一个模块就整理好了。一个是可以加到top.sls
户、组及权限，你可以根据自己的情况来设置。
停止或者配置文件有所发动就重新启动。还有启动文件，这里没有对启动文件设置所属用
模板的配置。
个词是否包含在完整主机名里来确定（这边的完整主机名包含应用的名称），最后是使用
置文件。因为MySQL要监控的比较特殊，所以会有配置文件不同。这里通过MySQL这
，另一个是单独推送都可以。
配置Zabbix的服务选项如图6-43所示，包括它的服务状态要保证它是运行的，如果
最后就是Zabbix的初始化文件了，如图6-44所示。包含了刚才写的一些sls文件，当
这里首先根据不同系统的类型（不是版本）来配置启动文件，然后配置Zabbix的配
if grai
nc
cunning
elif
L
de:
za
ins[fgdn_ip4'][0]}}
图6-44
图6-43
图6-42
‘]=='Centos'8}
6.2
SaltStack实例详解
133
---
## Page 144
134
file.absent是删除文件，注意别弄错了。删除新加的行可以使用file.sed，如图6-47所示。
方便的，所以如果想添加内容的话，可以使用file.append，如图6-46所示。
服务器同一个文件的内容是不同的，这个时候我们用替换的方法去统一这个文件显然是不
和sed吧。
net/uid-10915175-id-4395259.html。
cmd命令，这个时候就需要用到cmd.wait了。
的情况，当然你可以试试其他命令。
minion执行什么样的命令，而常用的就是cmd.run，如图6-45所示。这只是显示硬盘空间
user 等。当然Salt还有一些自己独有的，比如针对 git、svn的 state 模块。
部分必要的模块，比如 cron、file、host、exec（Salt是cmd）、group、package（Salt是pkg）
6.3
企业互联网自动化之SaltStack
第6章
相应地，如果不需要那行内容的时候可以使用file的state。不过不是file.absent，
file.append是把要添加的内容添加到指定文件的最底部。因为有时候我们接手的每台
还有一个常用的模块是file，它包含的内容非常多。除了上面说的file.managed，还有
cmd模块还有几个其他的用法及条件，你可以参考网址http://blog.chinaunix.
接下来介绍cmd模块，cmd模块管理可执行命令的执行过程。State模块可以告诉
cmd模块常用的不仅仅是cmd.run，像上面说过的watch，是要等到条件满足才去执行
虽然说 Salt是后起之秀，但是它的内置模块并不比Puppet少。它包含了Puppet 中大
部分Salt内置state模块简介
#saltBJ
图6-45
一介绍了，下面主要介绍append
---
## Page 145
不是一定要安装）和 salt-api（一定要安装），在yum下安装即可。
6.4
用的都熟悉以后，如果有其他的需要我们可以再一起研究，比如Jinja模板等。
添加用户及增加配置文件后，重启Salt-master。
然后在目录/etc/salt/master.d/下创建文件saltui.conf，文件内容如图6-48所示。
接下来添加用户Salt，密码设置成Salt。
git clone https://github.com/SaltStack/halite
cd/var/www/
它的安装也不复杂，需要在系统中安装apache、git（这两个可以用其他软件替代，并
Salt除了使用命令行外，还可以使用Web-UI来运行及查看它的情况。
常用的我都和你介绍了，当然 Salt本身还有一个Pillar没有和你详细说明。等你把常
/etc/init.d/salt-master restart
cd halite/halite
file的其他方法我就不多说了，你可以登录我的博客或者去官网看看相关资料。
/genindex.py-C
Web-UI
/root/.bashrc:
file.sed:
after:
ber
Eore:
PD
图6-47
"alias sr=sudo su -
图6-46
nd
6.4Web-UI
135
---
## Page 146
136
SALTSTACK
企业互联网自动化之SaltStack
第6章
图6-50为Console端的情况，执行一些命令后会显示命令记录。
图6-49为master端的情况。
当然也可以放在后台或者使用tmux重启另一个终端来启动。
cd/var/www/halite/halite
接下来是启动Web，也就是salt-UI。
altAp
Preferences
BaseUrt
Dale 2014-04-07
Versin0116
About
Reset
scheme
updale
saltApi.host
externl_auth:
saltApi.port
app:/var/www/halite/halite/index.html
pam:
salt:
true
/var/www/halite/halite
saltApi.prefix
True
图6-49
图6-48
Logou
---
## Page 147
SALTSTACK
SALTSTACK
图6-52显示了安装的客户端的情况。
图6-51为执行命令后显示job是否成功，打开enevt会显示详细信息。
Doc Search ResultsLve Doc Search
cmdrunopenstacx01bfdac.comdin/ashtue
Giob
TargetFormat
Glob
Search ResultsLive Doc Search
ConsoleProject
Console
action
Job=
Macro
Project
Event
falsetrue infofalse tuetalsebsse
basteftseutrenulintaisenultrueflsee
Target
miniontargetpaf
Resut+
Resut
taget
Even
Event
patte
图6-51
图6-50
Monitor
Enter
ntermodule.ftnclion
module
func
6.4Web-UI
Logout
137
---
## Page 148
138
倾向于自行开发相应的 Web 页面。这些其实都是调用 Salt 的api，因此自己开发将更为灵活。
SALTSTACK
企业互联网自动化之SaltStack
第6章
SALTSTACK
个人感觉这个框架还是不错的，用户可以根据自己的需要进行二次开发。不过，还是更
DocSearch ResultsLiveDocSearch
图6-53是所有的Event情况。
2014-05-12164456783915
201
CommandJobMinionEvent-
Etecte
rget
Format
Format
Console
Action
Console
Jobi
LiveDocSearti
Minlon
Macro
Grain
Projecl
Pioject
salt
saltjob
Event:
Find
stack01bfdab
Enter
Highstate
flle
erstring
Highistate
图6-52