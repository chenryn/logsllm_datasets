actly n tuples (xi, yi) ∈ S
∗
0 (xi) = yi. The
it holds that f
error-correction algorithm of Ar et al. can thus be used to
recover f
∗
0 . (The rest of the attack proceeds as before.)
∗
0 (xi) = yi or else f
it holds that either f
(cid:3)
(cid:3)
All the parameters in Table 1 satisfy 3t + 1 
∗
∗
, h
∗−h
∗
are uniform in [0, r]n(cid:2)
Denote by (cid:7)1, (cid:7)2 the two shortest (independent and non-
zero) vectors in Λ. As we said above, with high probability
one of these vectors is ±(g
) and the other is the shorter
∗
or h
of g
. In other words, with high probability the original
belong to the set {(cid:7)1, (cid:7)2,±((cid:7)1 ± (cid:7)2)}. We can
∗
∗
vectors g
, h
∗
∗
identify g
using the fact that g
, h
. (In fact,
∗
since the polynomials g, h are
g
random and the xi’s are chosen subject to the constraint
g(xi), h(xi) ∈ [0, r]. Thus, with high probability the only
vectors in the set {(cid:7)1, (cid:7)2,±((cid:7)1 ± (cid:7)2)} that belong to [0, r]n(cid:2)
.) So, given (cid:7)1, (cid:7)2 the original
are the original g
vectors g
2.8 Solving for F
can be easily found.
∗ ∈ [0, r]n(cid:2)
∗
and h
∗
, h
, h
∗
∗
∗
Once we have recovered g and h, we can solve for F itself.
Recall that each of the si obtained from a compromised node
satisﬁes
(cid:6)si = (cid:6)fi + αi · (cid:6)g + βi · (cid:6)h ,
n
2
(3)
where αi, βi ∈ [−u, u]. Using the fact that F is symmetric,
we have
si(xj) − αi · g(xj) − βi · h(xj ) = fi(xj)
= fj (xi) = sj (xi) − αj · g(xi) − βj · h(xi)
´
`
for all i (cid:3)= j. Having compromised n = t+3 nodes, this gives
`
linear equations in the 2n unknowns {αi, βi}n−1
a set of
i=0 .
Naively, one would expect this system to have full rank when
n
2
´ ≥ 2n, in which case one could solve for all the αi, βi
and then recover the fi and F itself. However, this is not
the case: the system is under-deﬁned, even if we add to
the system the constraints from Eq. (1). In fact, the space
of solutions to this system of equations turns out to have
dimension three, irrespective of t or n. (See Appendix A.2
for an explanation.)
Since we know that αi, βi ∈ [−u, u] for all i, we can ex-
haustively search for the desired solution as follows: Set the
values of three of the α’s and β’s to values in [−u, u]; then
solve the linear system for the rest of the α’s and β’s and
check whether they also lie in the desired range. (Heuris-
tically, we expect that will overwhelming probability there
will be a unique solution to the system of linear equations
that also satisﬁes ∀i : αi, βi ∈ [−u, u], and this is conﬁrmed
4p
r
t
232 − 5
236 − 5
222
224
76
77
u
2
2
setup
(min.)
attack
(min.)
successes/
attempts
60
1060
10
8
7/7
2/2
Successful attacks on the scheme of
Table 2:
Zhang et al. Timings reﬂect an implementation in
Sage, running on an Intel R(cid:2) Xeon R(cid:2) CPU X7460 @
2.66GHz with 128GB RAM.
time O`
(in time O`
´
´
t3 + t · (2u)3
by our experiments.) This exhaustive search can be done in
by solving the system parametrically
) and then enumerating through (2u)3 set-
tings of the ﬁrst three α’s and β’s until the desired solution
is found.
t3
For large u, one could also use lattice-reduction techniques
to eliminate the exhaustive search for the α’s and β’s. This
follows from the observation that the set of solutions to our
linear system forms a dimension-three integer lattice, and
the desired solution of α’s and β’s is a short vector in that
lattice.
2.9 Experimental Veriﬁcation
We implemented our attack both in C++ using NTL1,
and in Sage [4] using Damien Stehl´e’s fpLLL implemen-
tation2 to carry out the LLL reduction. The source code
of our attack (in Sage) is available on-line at http://www.
bitbucket.org/malb/algebraic_attacks/noise_poly.py.
Our attack ran quickly, and was successful the vast majority
of the time; see Table 2 for representative results. Note that
what prevented us from carrying out our attack on larger
parameter sets was not the time required for the attack, but
the time required to initialize the system!
2.10 Adding More Noise in The Free Term
A further generalization of the scheme of Zhang et al.
would be to add more noise in the free term of the secret