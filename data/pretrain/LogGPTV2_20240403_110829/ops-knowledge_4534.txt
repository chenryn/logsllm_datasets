User: It is written in a documentation:

Such extension modules can do two things that canâ€™t be done directly
  in Python: they can implement new built-in object types, and they can
  call C library functions and system calls.

Syscalls
I cannot see why "system calls" are special here. I know what it is syscall. I didn't see why it is special and why it cannot be done directly in Python.
Especially, we can use open in Python to open a file. It must be a underlying syscall to get descriptor for file ( in Unix systems). 
It was just open. Besides that we can use: call(["ls", "-l"]) and it also must use syscall like execve or something like that.
Functions
Why is calling C library function is special? After all:

ctypes is a foreign function library for Python. It provides C
  compatible data types, and allows calling functions in DLLs or shared
  libraries. It can be used to wrap these libraries in pure Python.
Assistant: Essentially system calls interact with the underlying system services(that is the Kernel for Linux). C functions on the other hand run on user space exclusively. To that sense system call is more "special".