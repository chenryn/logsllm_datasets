文件系统。ext4 文件系统是 ext3 文件系统的可扩展扩展。使用 Red Hat
Enterprise Linux 9，它可以支持的最大的文件大小为 `16`{.literal}
TB，支持的最大的文件系统大小为 `50`{.literal} TB。
::: section
::: titlepage
# []{#getting-started-with-an-ext4-file-system_managing-file-systems.html#features-of-an-ext4-file-system_getting-started-with-an-ext4-file-system}ext4 文件系统的特性 {.title}
:::
以下是 ext4 文件系统的特性：
::: itemizedlist
-   使用扩展：ext4
    文件系统使用数据块，这可在使用大型文件时提高性能，并减少大型文件的元数据开销。
-   Ext4 相应地标记未分配的块组和 inode
    表部分，这允许在文件系统检查期间跳过块组和表部分。它可快速进行文件系统检查，随着文件系统大小的增加，该检查将变得更加有益。
-   元数据校验和：默认情况下，这个功能在 Red Hat Enterprise Linux 9
    中被启用。
-   ext4 文件系统的分配特性：
    ::: itemizedlist
    -   持久性预分配
    -   延迟分配
    -   多块分配
    -   条带感知分配
    :::
-   扩展属性(`xattr`{.literal})：这允许系统为每个文件关联几个额外的名称和值对。
-   配额日志：这可避免在崩溃后进行冗长的配额一致性检查。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    ext4 中唯一支持的日志模式是 `data=ordered`{.literal}
    （默认）。如需更多信息，请参阅 [RHEL 是否支持 EXT journaling 选项
    \"data=writeback\"?](https://access.redhat.com/solutions/424073){.link}知识库文章。
    :::
-   次秒时间戳 - 这为次秒提供时间戳。
:::
::: itemizedlist
**其他资源**
-   `ext4`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-an-ext4-file-system_managing-file-systems.html#creating-an-ext4-file-system_getting-started-with-an-ext4-file-system}创建 ext4 文件系统 {.title}
:::
作为系统管理员，您可以使用 `mkfs.ext4`{.literal} 命令在块设备上创建 ext4
文件系统。
::: itemizedlist
**先决条件**
-   您磁盘中的一个分区。有关创建 MBR 或 GPT 分区的详情，请参阅
    [在磁盘上创建分区表](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_creating-a-partition-table-on-a-disk_managing-file-systems){.link}。
    另外，还可使用 LVM 或者 MD 卷。
:::
::: orderedlist
**流程**
1.  要创建 ext4 文件系统：
    ::: itemizedlist
    -   对于常规分区设备、LVM 卷、MD 卷或者类似的设备，使用以下命令：
        ``` screen
        # mkfs.ext4 /dev/block_device
        ```
        使用到块设备的路径替换 /dev/[*block_device*]{.emphasis}。
        例如：`/dev/sdb1`{.literal}、`/dev/disk/by-uuid/05e99ec8-def1-4a5e-8a9d-5945339ceb2a`{.literal}
        或
        `/dev/my-volgroup/my-lv`{.literal}。一般说来，默认选项适用于大多数使用场景。
    -   对于条带块设备（如 RAID5
        阵列），可以在创建文件系统时指定条带几何结构。使用正确的条带几何结构可提高
        ext4 文件系统的性能。例如，要在 4k-块文件系统上创建跨距为
        64k（即 16 x 4096）的文件系统，请使用以下命令：
        ``` screen
        # mkfs.ext4 -E stride=16,stripe-width=64 /dev/block_device
        ```
        在给定示例中：
        ::: itemizedlist
        -   stride=value:指定 RAID 块大小
        -   stripe-width=value:指定 RAID
            设备中数据磁盘的数量，或者条带中条带单位的数量。
        :::
    :::
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    ::: itemizedlist
    -   在创建文件系统时指定 UUID:
        ``` screen
        # mkfs.ext4 -U UUID /dev/block_device
        ```
        使用您要设置的 UUID 替换
        [*UUID*]{.emphasis}：例如，`7cd65de3-e0be-41d9-b66d-96d749c02da7`{.literal}。
        使用 ext4 文件系统的路径替换
        /dev/[*block_device*]{.emphasis}，来将 UUID 添加给它：例如
        `/dev/sda8`{.literal}。
    -   在创建文件系统时指定标签：
        ``` screen
        # mkfs.ext4 -L label-name /dev/block_device
        ```
    :::
    :::
2.  查看创建的 ext4 文件系统：
    ``` screen
    # blkid
    ```
:::
::: itemizedlist
**其他资源**
-   `ext4`{.literal} 手册页。
-   `mkfs.ext4`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-an-ext4-file-system_managing-file-systems.html#mounting-an-ext4-file-system_getting-started-with-an-ext4-file-system}挂载 ext4 文件系统 {.title}
:::
作为系统管理员，您可以使用 `mount`{.literal} 工具挂载 ext4 文件系统。
::: itemizedlist
**先决条件**
-   ext4 文件系统。有关创建 ext4 文件系统的详情，请参考 [创建 ext4
    文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#creating-an-ext4-file-system_getting-started-with-an-ext4-file-system){.link}。
:::
::: orderedlist
**流程**
1.  要创建一个挂载点来挂载文件系统：
    ``` screen
    # mkdir /mount/point
    ```
    使用创建分区挂载点的目录名替换 [*/mount/point*]{.emphasis}。
2.  挂载 ext4 文件系统：
    ::: itemizedlist
    -   要挂载一个没有额外选项的 ext4 文件系统：
        ``` screen
        # mount /dev/block_device /mount/point
        ```
    -   要永久挂载文件系统，请参阅
        [永久挂载文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/assembly_persistently-mounting-file-systems_managing-file-systems){.link}。
    :::
3.  查看挂载的文件系统：
    ``` screen
    # df -h
    ```
:::
::: itemizedlist
**其他资源**
-   `mount`{.literal} 手册页。
-   `ext4`{.literal} 手册页。
-   `fstab`{.literal} 手册页。
-   [挂载文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/assembly_mounting-file-systems_managing-file-systems){.link}
    。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-an-ext4-file-system_managing-file-systems.html#resizing-an-ext4-file-system_getting-started-with-an-ext4-file-system}重新定义 ext4 文件系统大小 {.title}
:::
作为系统管理员，您可以使用 `resize2fs`{.literal} 工具调整 ext4
文件系统的大小。`resize2fs`{.literal}
工具以文件系统块大小为单位读取大小，除非使用后缀表示特定的单位。以下后缀表示特定的单位：
::: itemizedlist
-   s（扇区）- `512`{.literal} 字节扇区
-   K(KB)- `1,024`{.literal} 字节
-   M（兆字节）- `1,048,576`{.literal} 字节
-   G(GB)- `1,073,741,824`{.literal} 字节
-   T(TB)- `1,099,511,627,776`{.literal} 字节
:::
::: itemizedlist
**先决条件**
-   ext4 文件系统。有关创建 ext4 文件系统的详情，请参考 [创建 ext4
    文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#creating-an-ext4-file-system_getting-started-with-an-ext4-file-system){.link}。
-   调整大小后可保留文件系统的基本块设备。
:::
::: orderedlist
**流程**
1.  要重新定义 ext4 文件系统大小，请执行以下步骤：
    ::: itemizedlist
    -   要缩小并增大卸载的 ext4 文件系统的大小：
        ``` screen
        # umount /dev/block_device
        # e2fsck -f /dev/block_device
        # resize2fs /dev/block_device size
        ```
        使用块设备的路径替换 [*/dev/block_device*]{.emphasis}，例如
        `/dev/sdb1`{.literal}。
        使用 `s`{.literal}、`K`{.literal}、`M`{.literal}、`G`{.literal}
        和 `T`{.literal} 后缀将 [*size*]{.emphasis}
        替换为所需的调整大小的值。
    -   可以使用 `resize2fs`{.literal} 命令在挂载时增大 ext4 文件系统：
        ``` screen
        # resize2fs /mount/device size
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        扩展时 size 参数是可选的（通常是多余的）。`resize2fs`{.literal}
        会自动扩展来填充容器的可用空间，通常是逻辑卷或分区。
        :::
    :::
2.  查看重新定义大小的文件系统：
    ``` screen
    # df -h
    ```
:::
::: itemizedlist
**其他资源**
-   `resize2fs`{.literal} 手册页。
-   `e2fsck`{.literal} 手册页。
-   `ext4`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-an-ext4-file-system_managing-file-systems.html#comparison-of-tools-used-with-ext4-and-xfs_getting-started-with-an-ext4-file-system}和 ext4 和 XFS 一起使用的工具比较 {.title}
:::
这部分比较用于完成 ext4 和 XFS 文件系统中常用任务的工具。
::: informaltable
  任务                   ext4                                   XFS
  ---------------------- -------------------------------------- -------------------------------------------------------
  创建文件系统           `mkfs.ext4`{.literal}                  `mkfs.xfs`{.literal}
  文件系统检查           `e2fsck`{.literal}                     `xfs_repair`{.literal}
  重新定义文件系统大小   `resize2fs`{.literal}                  `xfs_growfs`{.literal}
  保存文件系统的镜像     `e2image`{.literal}                    `xfs_metadump`{.literal} 和 `xfs_mdrestore`{.literal}
  标签或者调整文件系统   `tune2fs`{.literal}                    `xfs_admin`{.literal}
  备份文件系统           `tar`{.literal} 和 `rsync`{.literal}   `xfsdump`{.literal} 和 `xfsrestore`{.literal}
  配额管理               `quota`{.literal}                      `xfs_quota`{.literal}
  文件映射               `filefrag`{.literal}                   `xfs_bmap`{.literal}
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您需要通过网络进行备份的完整客户端-服务器解决方案，您可以使用 RHEL 9
中提供的 `bacula`{.literal} 备份实用程序。有关 Bacula 的更多信息，请参阅
[Bacula
备份解决方案](https://www.bacula.org/documentation/documentation/){.link}。
:::
:::
:::
[]{#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems.html}
::: chapter
::: titlepage
# []{#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems.html#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems}第 45 章 使用 RHEL 系统角色创建并挂载 ext4 文件系统 {.title}
:::
这部分描述了如何在磁盘上创建带有给定标签的 ext4 文件系统，并使用
`存储`{.literal} 角色永久挂载文件系统。
::: itemizedlist
**先决条件**
-   包含 `存储`{.literal} 角色的 Ansible playbook 已存在。
:::
有关如何应用此类 playbook 的信息，请参阅
[应用角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_basic_system_settings/index#applying-a-role_getting-started-with-rhel-system-roles){.link}。
::: section
::: titlepage
# []{#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems.html#an-example-playbook-to-create-mount-an-ext4-file-system_creating-mounting-ext4-file-system-using-rhel-system-roles}创建和挂载 Ext4 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色来创建和挂载 Ext4 文件系统。
::: example
[]{#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems.html#idm139895617714528}
**例 45.1. 在 /dev/sdb 上创建 Ext4 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext4
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 永久将文件系统挂载在 `/mnt/data`{.literal} 目录。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#creating-mounting-ext4-file-system-using-rhel-system-roles_managing-file-systems.html#_additional_resources_10}其他资源 {.title}
:::
::: itemizedlist
-   有关 `存储`{.literal} 角色的更多信息，请参阅
-   [存储角色简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/managing-local-storage-using-rhel-system-roles_managing-file-systems#storage-role-intro_managing-local-storage-using-rhel-system-roles){.link}
:::
:::
:::