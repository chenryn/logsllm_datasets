In pull request #11616, I made the test cases more verbose than necessary. This presents an opportunity to reassess and refine our approach to writing tests.

There are a few specific issues that need to be addressed:

1. **Asserting on Warning Messages:**
   - The current method of asserting warning messages is overly verbose. It requires a `DEV` block, calling `spyOnDev`, normalizing the stack trace, and other steps.
   - Ideally, we should have a higher-level helper function that allows us to "push" expected warning assertions and validate them as they occur. This helper should automatically handle component stacks without the need to repeatedly copy-paste the normalization helper code.

2. **Handling Development-Only Errors:**
   - In some instances, I introduced duplication in #11616, particularly for cases where errors are thrown in development but not in production.
   - A potential solution could be to introduce a `toThrowInDev()` function. However, this pattern needs to be highly visible, so another option might be to extract common code into a closure, which would also achieve the desired visibility and reduce redundancy.

By addressing these issues, we can make our test cases more concise, maintainable, and easier to understand.