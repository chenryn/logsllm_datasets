在渗透测试过程中，我遇到了一个运行在Linux+Tomcat环境下的网站。该服务器不能连接外部网络，但允许执行大多数Shell命令，并且我的权限不是root。目前仅有一个jspspy shell可用，而Web目录被挂载到一个类似NAS的网络磁盘上，且此磁盘只读不可写。此外，jspspy的文件上传功能也无法正常使用（虽然显示上传成功，但实际上并未生成任何文件；据专家分析，这可能是由于jsp上传组件关闭所致）。

在这种情况下，能够写入文件的唯一方法是通过shell创建文本文件并将其保存到/tmp等可写目录下。我的目标是利用此服务器作为跳板进入内部网络。但由于无法写入webshell并通过jsp进行代理、以及无法访问外部网络，使得使用Metasploit Framework (MSF) 等工具变得不可能。因此，唯一的希望寄托于DNS隧道技术。尽管最终成功部署了dnscat，但仍然无法建立有效的DNS隧道。

鉴于jspspy的上传功能失效，尝试将二进制文件上传至服务器成为一个挑战。幸运的是，在一位同行的帮助下，我发现可以采用Base64编码的方式来解决这个问题。以下是我总结的方法步骤，希望能够帮助遇到相似问题的朋友少走弯路：

1. 在本地机器上对所需上传的二进制文件进行Base64编码。例如，对于Netcat (nc) 工具：
   ```
   base64 /root/nc > /root/nc_enc.txt
   ```

2. 将编码后的字符串通过已有的shell会话写入服务器上的某个临时位置，如`/tmp`目录。
   
3. 在目标系统中解码Base64字符串以恢复原始二进制文件：
   ```
   base64 -d -i /tmp/nc_enc.txt > /tmp/nc
   ```
   这里需要注意的是，必须包含`-i`参数来忽略非字母数字字符，比如换行符。因为在通过POST请求提交数据时，可能会自动插入换行符，从而导致解码失败。实际上，我在这一环节就花费了一整天时间才找到解决方案。

如果各位同仁对此类受限环境有任何独到见解或技巧，请不吝赐教，共同探讨更优策略。