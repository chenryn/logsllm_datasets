title:Quantifying the security of graphical passwords: the case of android
unlock patterns
author:Sebastian Uellenbeck and
Markus D&quot;urmuth and
Christopher Wolf and
Thorsten Holz
Quantifying the Security of Graphical Passwords:
The Case of Android Unlock Patterns
Sebastian Uellenbeck, Markus Dürmuth, Christopher Wolf, and Thorsten Holz
Horst Görtz Institute for IT-Security, Ruhr-University Bochum, Germany
{ﬁrstname.lastname}@rub.de
ABSTRACT
Graphical passwords were proposed as an alternative to over-
come the inherent limitations of text-based passwords, in-
spired by research that shows that the graphical memory of
humans is particularly well developed. A graphical password
scheme that has been widely adopted is the Android Unlock
Pattern, a special case of the Pass-Go scheme with grid size
restricted to 3 × 3 points and restricted stroke count.
In this paper, we study the security of Android unlock pat-
terns. By performing a large-scale user study, we measure
actual user choices of patterns instead of theoretical consid-
erations on password spaces. From this data we construct a
model based on Markov chains that enables us to quantify
the strength of Android unlock patterns. We found empiri-
cally that there is a high bias in the pattern selection process,
e. g., the upper left corner and three-point long straight lines
are very typical selection strategies. Consequently, the en-
tropy of patterns is rather low, and our results indicate that
the security oﬀered by the scheme is less than the security
of only three digit randomly-assigned PINs for guessing 20%
of all passwords (i. e., we estimate a partial guessing entropy
G0.2 of 9.10 bit).
Based on these insights, we systematically improve the
scheme by ﬁnding a small, but still eﬀective change in the
pattern layout that makes graphical user logins substantially
more secure. By means of another user study, we show that
some changes improve the security by more than doubling
the space of actually used passwords (i. e., increasing the
partial guessing entropy G0.2 to 10.81 bit).
Categories and Subject Descriptors
K.6.5 [Security and Protection]: Authentication; D.4.6
[Operating Systems]: Security and Protection
General Terms
Security; Human Factors
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2477-9/13/11 . . . $15.00.
http://dx.doi.org/10.1145/2508859.2516700.
Keywords
Passwords; Mobile Security; Android
1.
INTRODUCTION
Authenticating a user is one of the central tasks in com-
puter security, and it forms the basis for several other tasks
as well. Text-based passwords are a common approach for
authentication, but it is well-known (see for example [7])
that users typically choose weak passwords, and have prob-
lems to recall strong ones. As an alternative to text-based
passwords, graphical passwords [4] have been proposed. These
schemes are motivated by psychology research results sug-
gesting that the human brain is particularly well-suited to
remember graphical information [33].
In practice, very few graphical password schemes have
been adopted and presumably the most widely deployed one
is used in Android systems. Main reason is that Android is
the most popular OS for modern smartphones.
In the so
called Android Unlock Pattern scheme, the user is presented
a 3×3 grid and the secret (password) of a user is a drawing on
that grid (i. e., a sequence of lines connecting the dots). Dur-
ing enrollment, a user has to choose a pattern and during the
authentication phase, he has to recall his pattern and draw
it on the screen. Android’s Unlock Pattern is a modiﬁed ver-
sion of Pass-Go [35] with minor adoptions to accommodate
for the size of typical mobile devices.
In general, the us-
ability of graphical password schemes is well understood [4].
However, security aspects of such schemes are hardly stud-
ied, with only a few exceptions (e. g., [18,20,23,36]). As such,
the question remains how secure graphical passwords are in
practice in comparison to a theoretical analysis of password
spaces. The latter is usually the far more impressive num-
ber, but not that meaningful as a metric for the strength of
the corresponding scheme.
In this paper, we conduct the ﬁrst (to the best of our
knowledge) large-scale user study on Android Unlock Pat-
terns, with a total of 584 participants and approximately
2,900 patterns. By means of a pen-and-paper study, we
interviewed 105 people to ﬁnd out their strategy to chose
patterns on an Android phone. Furthermore, we performed
a study with 113 participants as part of a game in which
people were asked to chose a pattern for a phone provided
by us, and also to guess patterns used by other participants
of the study. The collected data enables us to analyze how
people pick patterns and to attack them in order to evaluate
their strength. We performed an analysis based on Markov
chains to quantify their security and found that Android
Unlock Patterns oﬀer less security than a three digit (deci-
161mal) PIN. As our study only provides an upper limit on the
entropy, the situation should be slightly worse in practice.
During our study, we found several typical strategies used
by the participants for the pattern generation process (e. g.,
people often picked the top left corner as a starting point
and prefer straight lines in their pattern). Drawing from
this knowledge, we strive to improve the security of the
scheme: by systematically changing the pattern layout in
such a way that these typical strategies are thwarted, we
encourage users to chose patterns in a more diverse way.
However, we concentrate on small modiﬁcations that allow
us to keep the overall design of the patterns to foster the
roll-out of a potentially better graphical password scheme.
Speciﬁcally, we experimented with diﬀerent arrangements of
the patterns, such as removing the top left point, arranging
them in form of a circle, or a (seemingly) random pattern.
We performed another user study with 366 participants to
empirically verify which eﬀect such changes in the pattern
layout have in practice, and found that the entropy esti-
mate for some patterns increases signiﬁcantly. In one mod-
iﬁed pattern, we removed the upper left corner as it is the
source for most of the bias. However, it turned out that
people simply started from the point to the right of it, so
this modiﬁcation did actually worsen the security and the
entropy estimate decreased. We got a slightly better result
by switching to a 4 × 3 grid and removing the left upper
and right lower corner. We pursued a diﬀerent approach
with the two new patterns Random and Circle. In the ﬁrst,
a (seemingly) random pattern was presented that excluded
straight lines between any 3-points, a clear top/left position,
and also allowed easy transition from all 9 points to any of
the remaining 8 points. In the second, we arranged the nine
points in a circle instead of a grid. While the initial bias
was in the same range as for Android Unlock Patterns, it
turned out that the following transitions were more diverse:
we found that people prefer the directly neighboring point,
but also include a point slightly further away. In addition,
the Circle pattern does not allow to stay “on one line” as op-
posed to a quadrangle. In particular, for the circle patterns
this increased the overall entropy estimate.
In summary, we make the following contributions:
• We performed a user study on Android Unlock Pat-
terns to ﬁnd out how users typically chose patterns.
While it is not surprising that Android Unlock Pat-
terns fall short of reaching their theoretical strength,
we are the ﬁrst to actually quantify the strength of
user chosen patterns on the Android platform.
• Based on the insights obtained during this study, we
systematically change the pattern layout to remove
bias in the pattern selection process to improve the se-
curity of the scheme. In another user study, we found
that this simple re-ordering can greatly improve the
entropy estimate of the patterns at basically no cost.
• Overall, we collected more than 2,800 patterns chosen
by users. In total, more than 580 people participated
in our study. On a broader scale, this work teaches us
valuable lessons about user choice in selecting graphi-
cal passwords.
Paper Outline
The rest of this paper is structured as follows. In Section 2,
we discuss related work, in particular on graphical password
schemes. In Section 3 we consider the unmodiﬁed Android
Unlock Patterns and provide details on the user study we
used to collect a large number of patterns. We describe an
attack based on Markov models in Section 4 and quantify the
security given by those patterns. In Section 5, we identify
several weak points of the original patterns, test a number
of alternative (but similar) constructions, and quantify their
security. We conclude this paper with a discussion of the
results and an overview of future work in Section 6.
2. RELATED WORK
The security of (text-based) passwords has been studied
as early as 1979 [27], and it has been realized early that pass-
words are susceptible to so called dictionary attacks as many
users choose passwords from a small subset of all possible
passwords that can be collected in a dictionary. Popular
password guessers that perform dictionary attacks are John
the Ripper [32] and HashCat [1], advanced password guessers
are based on Markov models [28]. Several approaches have
been tested to prevent users from choosing weak passwords.
Best known are so-called password rules, which are deployed
by most websites today, but have been shown to have lim-
ited eﬀect [25]. More recent techniques use Markov models
to measure password strength [13]. A good overview of pass-
words is given by Bonneau [7].
Numerous alternatives to text-based passwords have been
proposed. One particularly interesting class is graphical pass-
words, which have the potential to oﬀer better usability
because the human brain is particularly well-suited to re-
member graphical information [33]. Graphical passwords
are typically classiﬁed as recall-based, recognition-based, or
cued recall-based, where Android Unlock Patterns fall into
the ﬁrst category. In the following we review some of the
work on graphical passwords, and refer to the recent survey
by Biddle, Chiasson, and van Oorschot [4] for more details.
Recall-based schemes.
The ﬁrst recall-based graphical password scheme Draw-A-
Secret (DAS) was proposed in 1999 by Jermyn et al. [24].
Users select one or more strokes on a 2D grid, and need to
reproduce these strokes when logging in. BDAS [21] aug-
ments this scheme by adding a background image, which
helps the user to choose more complex and in particular
longer patterns. Robustness to small errors is improved with
YAGP [22] and Passdoodles [38].
Most relevant for our work is the Pass-Go scheme [35],
which uses the intersections of a 2D grid instead of the cells.
To evaluate the strength and usability, the authors con-
ducted an informal user study with 167 participants which
showed that users chose passwords with an average length
of approximately 17, which leads to an estimation for the
size of the password space of 2109. The participants attend-
ing to the study were students from two university courses.
Therefore, the authors had chosen a very homogeneous set
for their study. In contrast to this, we asked people from all
faculties (engineering, humanities, medicine, and science) of
the university to participate. As a result, we belief that our
results better model reality. Furthermore, we asked more
than two times as much people to participate in our study.
Variants of the Pass-Go scheme are PassShape [41], which
use a diﬀerent input interface and coding of the patterns,
and a variant that additionally uses haptic input [29] in
an attempt to counter shoulder-surﬁng attacks. GrIDsure
employed patterns on a grid to implement one-time PINs
162(see [6, 10]). The Android Unlock Patterns are a special
case of the Pass-Go scheme with restricted grid size and re-
stricted stroke count, see Section 3.1 for more details.
An attack speciﬁc to implementations on devices with
touch screen are so-called smudge attacks [2], where residue
from using the touchscreen reveals information about the
pattern. While this was originally studied for the Android
Unlock Patterns, similar problems should arise for most au-
thentication schemes on touch-screens.
Recognition-based schemes.
The classical example for recognition-based schemes are
PassFaces [30]. Users choose a set of (images of) faces, and
need to select those among a number of decoy images for lo-
gin. Their usability is well studied [11]. However, [18] found
that the PassFaces scheme with user-chosen faces, which is
the proposed standard, is quite insecure: user’s choices of
faces are very biased, basically towards the user’s race and
towards female faces.
The scheme Story [18] is similar to PassFaces, but users
learn images of more general persons and objects. The
scheme Deja Vu [19] uses images displaying “random art”. A
further interesting concept was proposed by Weinshall [39],
where the user learns a (relatively large) set of images, and
for login he solves a “graphical puzzle” based on these im-
ages, in an attempt to counter shoulder-surﬁng attacks. Un-
fortunately, the resistance to shoulder-surﬁng was proven
false [23].
Cued-recall based schemes.
Cued-recall systems are based on the idea that picto-
rial help can simplify the task of recall for a user. The
prime example is the PassPoint scheme, which goes back
to a patent of Blonder [5]. Wiedenbeck et al. [43], [44],
[42] and Chiasson et al. [14] studied mostly the usability of
the PassPoint scheme. However, a number of later papers
showed [20, 31, 36] that the click points are far from being
uniformly distributed which substantially weakens the secu-
rity of the PassPoint scheme. An attempt to point users to
more secure passwords can be found in a paper by Chiasson
et al. [15].
Suo et al. [34] proposed a variant which is somewhat resis-
tant to shoulder-surﬁng, further variants include cued click
points (CCP) [17], where images are changed after each click
based on that click, and persuasive CCP (PCCP) [15], where
while initially selecting the click points the system suggests a
speciﬁc image region. Estimations for the eﬀective key sizes
for PassPoints, CCP, and PCCP are given by Chiasson et
al. [16]. Frequent passwords in graphical password schemes
have been identiﬁed by van Oorschot and Thorpe [37] and
we complement this kind of analysis via our user studies.
Under the name Windows 8 Picture Passwords (W8PP),
a cued-recall scheme is used in Windows 8 for graphical lo-
gin. Here, the user can use gestures, a mouse, a stylus, or an
alternative input device to enter some password based on his
picture. All in all, this gives a wider variety than Android
unlock patterns. As Windows 8 is marketed as “one OS
for all platforms”, we can expect to see W8PP at a variety
of systems: For desktops, laptops and tablets, the security
of W8PP is clearly higher than any Android login scheme
could achieve. Even correlation attacks between the picture
and the password drawn [31] do not change this evaluation.
Here we exploit that people simply follow the most promi-
Figure 1: Android’s graph-
ical
login mechanism and
it’s reachable points starting
from the upper left point.
Figure 2: Bias of the ini-