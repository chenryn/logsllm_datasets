# 系统故障排除和性能调优
> 原文：
## 先决条件
*   [Linux 基础知识](https://linkedin.github.io/school-of-sre/level101/linux_basics/intro/)
*   [系统设计](https://linkedin.github.io/school-of-sre/level101/systems_design/intro/)
*   [基本联网](https://linkedin.github.io/school-of-sre/level101/linux_networking/intro/)
*   [指标和监控](https://linkedin.github.io/school-of-sre/level101/metrics_and_monitoring/introduction/)
## 从本课程中可以期待什么
这个简短的课程试图提供一个关于如何解决系统问题的一般性介绍，例如分析 api 故障、资源利用、网络问题、硬件和操作系统问题。本课程还简要介绍了用于测量整体系统性能的分析和基准测试。
## 本课程不包括哪些内容
本课程不包括以下内容:
*   系统设计和架构。
*   编程实践。
*   度量和监控。
*   操作系统基础。
## 课程内容
*   [简介](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/introduction)
*   [故障排除](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/troubleshooting)
    *   [故障排除流程图](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/troubleshooting/#troubleshooting-flowchart)
    *   [一般惯例](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/troubleshooting/#general-practices)
    *   [一般主机问题](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/troubleshooting/#general-host-issues)
*   [需要了解的重要工具](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/important-tools)
    *   [重要的 linux 命令](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/important-tools/#important-linux-commands)
    *   [日志分析工具](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/important-tools/#log-analysis-tools)
*   [性能提升](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/performance-improvements)
    *   [性能分析命令](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/performance-improvements/#performance-analysis-commands)
    *   [剖析工具](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/performance-improvements/#profiling-tools)
    *   [基准测试](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/performance-improvements/#benchmarking)
    *   [缩放](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/performance-improvements/#scaling)
*   [故障排除示例](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/troubleshooting-example)
*   [结论](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/conclusion)
    *   [进一步阅读](https://linkedin.github.io/school-of-sre/level102/system_troubleshooting_and_performance/conclusion/#further-readings)
## 介绍
故障排除是运营和开发的重要组成部分。它不能通过阅读一篇文章或完成一门在线课程来学习，它是一个持续的学习过程，一个人在以下过程中学习:-
*   日常运营和开发。
*   查找和修复应用错误。
*   发现并修复系统和网络问题。
*   性能分析和改进。
*   还有更多。
从 SRE 的角度来看，他们应该预先了解某些主题，以便能够解决单个或分布式系统的问题。
*   充分了解您的资源，了解主机规格，如 CPU、内存、网络、磁盘等。
*   理解系统设计和架构。
*   确保正确收集/呈现重要指标。
惠普创始人有一句名言- **“被测量的就被固定”**
如果彻底捕获了系统组件和性能指标，那么就很有可能尽早成功地解决问题。
### 范围
对不同类型的应用或服务没有通用的故障排除方法，故障可能发生在 it 的任何一层。我们将把这项工作的范围保持在 web api 服务类型上。
**注意-:** Linux 生态系统非常广泛，有数百种工具和实用程序可以帮助进行系统故障排除，每种工具和实用程序都有自己的优点和功能。我们将介绍一些已知的工具，或者是 Linux 中已经有的，或者是开源世界中已经有的。对本文档中提到的工具的详细解释超出了范围，请浏览互联网或手册页以获得更多的示例和相关文档。