### Remote Management Service (RMS) and Open TCP Ports

The following table lists the open TCP ports and their associated services:

| Service | Port | Enabled |
|---------|------|---------|
| RMS     | 8001 | Yes     |
| SIU     | 8003 | Yes     |
| IDC     | 8004 | Yes     |
| CDM     | 8006 | Yes     |
| PIN     | 8010 | Yes     |
| PTR     | 8012 | Yes     |

**Table 3: Open TCP Ports**

Initially, the purpose of these ports was unclear. However, a registry scan provided valuable insights. The HKEY_USERS registry hive contains several XFS configuration keys. An example for the cash dispenser (CDM) device class is shown below:

- **CashDispenser\Provider**: CashDispenser (String)
- **CashDispenser\port**: 8004 (DWord)
- **CashDispenser\Class**: CDM (String)
- **CashDispenser\Type**: CDM (String)

**Listing 2: Excerpt of registry entries for one peripheral under HKEY_USERS\.DEFAULT\XFS\LOGICAL_SERVICES**

Initial attempts to interact with these ports were unsuccessful. Any unexpected message caused the port to reject further input, and messages in an incorrect format put the IPC mechanism into an unknown state. The lack of documentation on the message format further complicated integration efforts. Capturing network traffic on the loopback interface could help decipher the required message format, but this process was not straightforward.

### Dumping Network Traffic – The Hard Way

Working with Windows CE 6.0 presents significant challenges. As of 2019, the initial release of this version was 13 years old, and the latest major release was 10 years old. This age makes it difficult to source the necessary tools. Additionally, the ATM's lack of keyboard and mouse drivers, while a positive security feature, made general interaction frustrating. Capturing network traffic on the device is possible but hindered by these complications and the fact that the device image lacks built-in support for such operations.

The most practical approach is to identify where the IPC mechanism calls the socket, recv, and send functions of Winsock 2. Since Address Space Layout Randomization (ASLR) is not active on this platform, the loading addresses of these functions remain consistent across reboots.

Tracing calls to the socket function reveals which underlying service owns a given socket handle used in the recv and send functions, thus exposing the messages sent and received by each service. Further analysis showed that each message contains command data in the XFS standard format, wrapped by a header. The partially-deciphered format is as follows:

| Length | Description |
|--------|-------------|
| 1 byte | XFS command type (GetInfo, Execute, etc.) |
| 1 byte | Unknown1 |
| 2 bytes | Unknown2 |
| 4 bytes | Zero (0x00000000) |
| 2 bytes | Service handle |
| 2 bytes | Unknown3 |
| 4 bytes | Window handle |
| 4 bytes | Unique request ID |
| 4 bytes | Timeout |
| 4 bytes | Timestamp |
| 4 bytes | XFS command |
| Command-dependent | XFS command data |

**Table 4: XFS IPC Packet Structure**

For example, to set the cash dispenser lights to flash quickly, the XFS command field would be set to `WFS_CMD_SIU_SET_GUIDLIGHT`, and the command-dependent data would be populated using the `WFSSIUSETGUIDLIGHT` structure. The values `WFS_SIU_NOTESDISPENSER` and `WFS_SIU_QUICK_FLASH` would indicate that the cash dispenser should flash quickly.

```c
#define WFS_SERVICE_CLASS_SIU (8)
#define SIU_SERVICE_OFFSET (WFS_SERVICE_CLASS_SIU * 100)
#define WFS_CMD_SIU_SET_GUIDLIGHT (SIU_SERVICE_OFFSET + 6)

typedef struct _wfs_siu_set_guidlight {
    WORD wGuidLight;
    WORD fwCommand;
} WFSSIUSETGUIDLIGHT, *LPWFSSIUSETGUIDLIGHT;

#define WFS_SIU_NOTESDISPENSER (2)
#define WFS_SIU_QUICK_FLASH (0x0010)
```

**Listing 3: Referenced SIU definitions as they appear in the latest CEN/XFS standard [16]**

With knowledge of the packet structure and a dump of all messages sent over the IPC sockets obtained via JTAG, it is possible to find messages with commands of interest (e.g., cash dispensing via `WFS_CMD_CDM_DISPENSE`), update the timeout and timestamp fields, and replay the message to trigger the action.

### XFS Attack Implications

This attack enables command injection over the XFS message sockets, which are visible to any device on the same local network. While this does not necessarily lead to arbitrary code execution, it exposes a large surface area in the form of the unauthenticated XFS API, which includes commands of immediate interest to an attacker, such as dispensing cash.

### Conclusions

Despite its robust physical design, the ATM discussed in this paper is vulnerable to two network-accessible attacks: a pre-authentication buffer overflow allowing for arbitrary code execution (and persistence) with user interaction, and an unauthenticated XFS command injection. Although only one commonly found ATM is the subject of this paper, the issues identified are likely not unique. The high monetary barrier to entry for legal penetration testing remains one of the most compelling defenses for these devices.

### Acknowledgment

We would like to thank Red Balloon Security for providing the resources to investigate and reverse engineer the ATM. We also thank Nautilus Hyosung for being proactive in the vulnerability disclosure process and responsive in developing a fix.

### References

[1] HALO II - Hyosung America. Hyosung America. [Online]. Available: https://hyosungamericas.com/atms/halo-ii/

[2] Happy save banking corporation and laundry service. Red Balloon Security. [Online]. Available: http://happysavebankingcorporation.com/index.html

[3] “Triton terminal and communication protocol,” Triton. [Online]. Available: https://www.completeatmservices.com.au/assets/files/triton-comms-msg%20format-pec 5.22.pdf

[4] Joe Grand. Jtagulator — grand idea studio. Grand Idea Studio. [Online]. Available: http://www.grandideastudio.com/jtagulator/

[5] Software updates — atm parts pro. ATM Parts Pro. [Online]. Available: https://www.atmpartspro.com/software

[6] Terminal management - hyosung america. Hyosung America. [Online]. Available: https://hyosungamericas.com/softwares/terminal-management/

[7] Barnaby Jack, “IOActive Security Advisory - Authentication Bypass In Tranax Remote Management Software.” [Online]. Available: https://ioactive.com/wp-content/uploads/2018/05/Tranax Mgmt Software Authentication Bypass.pdf

[8] Cen/xfs. Wikipedia. [Online]. Available: https://en.wikipedia.org/wiki/CEN/XFS#XFS middleware

[9] Extensions for financial services (xfs) interface specification release 3.30 - part 1: Application programming interface (api) -service provider interface (spi) - programmer’s reference. European Committee for Standardization. [Online]. Available: ftp://ftp.cen.eu/CWA/CEN/WS-XFS/CWA16926/CWA%2016926-1.pdf

[10] Extensions for financial services (xfs) interface specification release 3.30 - part 10: Sensors and indicators unit device class interface - programmer’s reference. European Committee for Standardization. [Online]. Available: ftp://ftp.cenorm.be/CWA/CEN/WS-XFS/CWA16926/CWA%2016926-4.pdf

[11] Meet greendispenser: A new breed of atm malware. Proofpoint. [Online]. Available: https://www.proofpoint.com/us/threat-insight/post/Meet-GreenDispenser

[12] Ripper atm malware and the 12 million baht jackpot. FireEye. [Online]. Available: https://www.fireeye.com/blog/threat-research/2016/08/ripper-atm-malwarea.html

[13] A study on ipc options on wince and windows. Few of my technology ideas. [Online]. Available: https://blogs.technet.microsoft.com/vanih/2006/05/01/a-study-on-ipc-options-on-wince-and-windows/

[14] How to capture network traffic on windows embedded ce 6.0. Windows Developer 101. [Online]. Available: https://blogs.msdn.microsoft.com/dswl/2010/03/02/how-to-capture-network-traffic-on-windows-embedded-ce-6-0/

[15] Winsock functions. Windows Dev Center. [Online]. Available: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-functions

[16] Extensions for financial services (xfs) interface specification release 3.30 - part 10: Sensors and indicators unit device class interface - programmer’s reference. European Committee for Standardization. [Online]. Available: ftp://ftp.cenorm.be/CWA/CEN/WS-XFS/CWA16926/CWA%2016926-10.pdf