No
Remote Management Service (RMS)
8001
Yes
SIU (Sensors, Indicators, etc.)
8003
Yes
IDC (Card Reader)
8004
Yes
CDM (Cash Dispenser)
8006
Yes
PIN (PIN Pad)
8010
Yes
PTR (Receipt Printer)
Table 3: Open TCP Ports
While the purpose of these ports was not initially under-
stood, a scan of the registry provided a strong hint. A number
of XFS conﬁguration keys are stored in the HKEY_USERS
registry hive. An excerpt of the conﬁguration for the cash
dispenser device class is shown in Listing 2.
CashDispenser\Provider:CashDispenser (String)
CashDispenser\port:8004 (DWord)
CashDispenser\Class:CDM (String)
CashDispenser\Type:CDM (String)
Listing 2: Excerpt of registry entries for one peripheral under
HKEY_USERS\.DEFAULT\XFS\LOGICAL_SERVICES
Attempts to obtain output from these ports was initially
unsuccessful - any unknown message causes the port to refuse
further input. Further analysis revealed that messages outside
the expected format caused the IPC mechanism to be put in
an unknown state. Complicating efforts to integrate with the
sockets in this manner was a lack of any documentation on
the message format used here. Capturing network trafﬁc on the
loopback interface would help with deciphering the message
format required to successfully send an XFS message, but this
sort of packet capture was not straightforward.
3
C. Dumping Network Trafﬁc – The Hard Way
Working with Windows CE 6.0 is a complicated affair.
As of 2019, the initial release of this version was 13 years
ago, and the latest major release was 10 years ago. As
such, any tools required becomes more difﬁcult to source.
Interfacing with the ATM in general was frustrating, though a
positive note for security, due to the fact that this device ships
without any keyboard or mouse drivers. Capturing network
trafﬁc on the device, while possible [14], is hindered by
these complications and the fact that the image shipped on
the device isn’t built with this support. As such, the most
straightforward method for proceeding is to identify locations
where the IPC mechanism makes calls to the socket, recv,
and send functions of Winsock 2 [15]. Since Address Space
Layout Randomization (ASLR) is not active on this platform,
knowledge of the loading address of these functions can be
utilized across device reboots.
Tracing calls to the socket function exposes which under-
lying service owns a given socket handle used in the recv and
send functions, revealing what messages are being sent and
received by each service. Further analysis revealed that each
message contains command data in the format deﬁned by the
XFS standard, wrapped by a header. The partially-deciphered
format is shown in Table 4.
Length
Description
1 byte
XFS command type (GetInfo, Execute, etc.)
1 byte
Unknown1
2 bytes
Unknown2
4 bytes
Zero (0x00000000)
2 bytes
Service handle
2 bytes
Unknown3
4 bytes
Window handle
4 bytes
Unique request ID
4 bytes
Timeout
4 bytes
Timestamp
4 bytes
XFS command
Command-dependent
XFS command data
Table 4: XFS IPC Packet Structure
As
an
example,
consider
the
action
of
setting
the
cash dispenser lights to ﬂash quickly. Using the SIU
speciﬁcation [16] as a guide, the XFS command ﬁeld would
be
set
to
WFS_CMD_SIU_SET_GUIDLIGHT,
and
the
command-dependent data would be populated by ﬁlling in
the
corresponding
structure,
WFSSIUSETGUIDLIGHT.
The
values
(WFS_SIU_NOTESDISPENSER)
and
(WFS_SIU_QUICK_FLASH) would be used to indicate
that the cash dispenser should now be set to ﬂash quickly.
The values and structures referenced are reproduced in Listing
3.
Using the knowledge of the packet structure, and with
a dump of all messages sent over the IPC sockets ob-
tained via JTAG, it is possible to ﬁnd messages with
commands of interest (for example, cash dispensing via
WFS_CMD_CDM_DISPENSE), ﬁx up the timeout and times-
tamp ﬁelds of the packet, and replay it to trigger the action.
#define WFS_SERVICE_CLASS_SIU (8)
#define SIU_SERVICE_OFFSET (WFS_SERVICE_CLASS_SIU * 100)
#define WFS_CMD_SIU_SET_GUIDLIGHT (SIU_SERVICE_OFFSET + 6)
typedef struct _wfs_siu_set_guidlight
{
WORD
wGuidLight;
WORD
fwCommand;
} WFSSIUSETGUIDLIGHT, *LPWFSSIUSETGUIDLIGHT;
#define WFS_SIU_NOTESDISPENSER (2)
#define WFS_SIU_QUICK_FLASH (0x0010)
Listing 3: Referenced SIU deﬁnitions as they appear in the latest
CEN/XFS standard [16]
D. XFS Attack Implications
This attack enables the ability to perform command in-
jection over the XFS message sockets, which are visible to
any device on the same local network. While this does not
necessarily lead to arbitrary code execution, it does expose
a large surface area over a network in the form of the
unauthenticated XFS API, which has commands that are of
immediate interest to an attacker (such as dispensing cash).
V. CONCLUSIONS
Despite the tough physical exterior, the ATM referenced in
this paper readily gave way to two network-accessible attacks:
one pre-authentication buffer overﬂow allowing for arbitrary
code execution (and persistence) with user interaction, and
one unauthenticated XFS command injection. Although only
one commonly found ATM is the subject of this paper, the
problems found here are likely not unique. A high monetary
barrier to entry to perform legal penetration testing on these
devices remains one of their most compelling defenses.
ACKNOWLEDGMENT
We would like to thank Red Balloon Security for providing
us the resources to investigate and reverse engineer the ATM.
We would also like to thank Nautilus Hyosung for being
proactive in the vulnerability disclosure process and responsive
in developing a ﬁx.
REFERENCES
[1] HALO II - Hyosung America. Hyosung America. [Online]. Available:
https://hyosungamericas.com/atms/halo-ii/
[2] Happy
save
banking
corporation
and
laundry
ser-
vice.
Red
Balloon
Security.
[Online].
Available:
http://happysavebankingcorporation.com/index.html
[3] “Triton
terminal
and
communication
protocol,”
Triton.
[Online].
Available:
https://www.completeatmservices.com.au/assets/ﬁles/triton-
comms-msg%20format-pec 5.22.pdf
[4] Joe Grand. Jtagulator — grand idea studio. Grand Idea Studio. [Online].
Available: http://www.grandideastudio.com/jtagulator/
[5] Software updates — atm parts pro. ATM Parts Pro. [Online]. Available:
https://www.atmpartspro.com/software
[6] Terminal
management
-
hyosung
america.
Hyosung
America.
[Online].
Available:
https://hyosungamericas.com/softwares/terminal-
management/
[7] Barnaby
Jack,
“IOActive
Security
Advisory
-
Authentication
Bypass In Tranax Remote Management Software.” [Online]. Avail-
able:
https://ioactive.com/wp-content/uploads/2018/05/Tranax Mgmt
Software Authentication Bypass.pdf
[8] Cen/xfs.
Wikipedia.
[Online].
Available:
https://en.wikipedia.org/wiki/CEN/XFS#XFS middleware
4
[9] Extensions for ﬁnancial services (xfs) interface speciﬁcation release
3.30 - part 1: Application programming interface (api) -service provider
interface (spi) - programmer’s reference. European Committee for
Standardization. [Online]. Available: ftp://ftp.cen.eu/CWA/CEN/WS-
XFS/CWA16926/CWA%2016926-1.pdf
[10] Extensions
for
ﬁnancial
services
(xfs)
interface
speciﬁcation
release 3.30 - part 10: Sensors and indicators unit device class
interface - programmer’s reference. European Committee for Stan-
dardization. [Online]. Available: ftp://ftp.cenorm.be/CWA/CEN/WS-
XFS/CWA16926/CWA%2016926-4.pdf
[11] Meet
greendispenser:
A
new
breed
of
atm
malware.
Proofpoint. [Online]. Available: https://www.proofpoint.com/us/threat-
insight/post/Meet-GreenDispenser
[12] Ripper
atm
malware
and
the
12
million
baht
jackpot.
FireEye.
[Online].
Available:
https://www.ﬁreeye.com/blog/threat-
research/2016/08/ripper atm malwarea.html
[13] A
study
on
ipc
options
on
wince
and
win-
dows.
Few
of
my
technology
ideas.
[Online].
Avail-
able:
https://blogs.technet.microsoft.com/vanih/2006/05/01/a-study-on-
ipc-options-on-wince-and-windows/
[14] How
to
capture
network
trafﬁc
on
windows
em-
bedded
ce
6.0.
Windows
Developer
101.
[Online].
Available:
https://blogs.msdn.microsoft.com/dswl/2010/03/02/how-to-
capture-network-trafﬁc-on-windows-embedded-ce-6-0/
[15] Winsock
functions.
Windows
Dev
Center.
[Online].
Available:
https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-
functions
[16] Extensions
for
ﬁnancial
services
(xfs)
interface
speciﬁcation
release 3.30 - part 10: Sensors and indicators unit device class
interface - programmer’s reference. European Committee for Stan-
dardization. [Online]. Available: ftp://ftp.cenorm.be/CWA/CEN/WS-
XFS/CWA16926/CWA%2016926-10.pdf
5