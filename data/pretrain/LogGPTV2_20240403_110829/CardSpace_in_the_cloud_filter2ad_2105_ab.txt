### 1. 账户创建与属性存储

当接收到未知用户的信息时，系统会在其内部数据库中为该用户创建一个新账户，并将从身份提供商 (IdP) 返回的所有属性类型存储在用户的卡片中。这些属性类型用于动态确定在服务提供时可选择的 IdP。当 LIS（身份链接服务）接收到已存在的 PId（个人标识符）时，它会在数据库中查找该用户的现有账户。如果用户希望将其额外的 IdP 账户与其现有的 LIS 账户关联，则她可以选择或提交另一张 IdP 卡片，并被重定向到相应的 IdP。LIS 会向此 IdP 请求另一个 PId 和一组属性类型，并将这些信息添加到同一个 LIS 账户中。

我们还在概念模型中加入了对 NIST 安全保证级别 (LoA) 的支持，如 [4] 中所述，但由于篇幅限制，此处不再详细说明。

### 2. 服务提供

为了提供一个与现有 CardSpace 服务提供商 (SP) 兼容的基于 Web 的身份选择器，我们引入了一个可以插入用户浏览器中的轻量级客户端模块。该模块用于发现用户的 LIS，将用户重定向到 LIS，并最终将（可能聚合的）声明返回给 SP，类似于现有的 CardSpace 系统。与当前系统唯一的不同之处在于，现在可以向 SP 提供来自多个 IdP 的多条加密链接的声明。

#### 服务提供协议交互

1. 用户导航到 SP 网站上的 InfoCard 启用 HTML 页面，并使用浏览器点击 InfoCard 图标（步骤 1）。
2. 返回的页面（步骤 2）包含一个嵌入的 InfoCard MIME 对象，这会导致浏览器调用我们的新插件模块，而不是 Microsoft 的完整身份选择器。
3. 模块下载 SP 的安全策略，并解析以确定访问服务所需的属性类型集合。我们定义了一种增强的安全策略，允许指定具有不同属性声明的多个 IdP。这是对 CardSpace 框架的重要增强。
4. 模块接下来通过以下两种方式之一发现用户的 LIS 位置：
   - 用户可以在模块可以访问的保留书签文件夹中保存其 LIS 主页的书签。模块随后显示这些书签供用户选择其首选的 LIS。
   - 或者，用户可以直接在模块中输入 URL（见图 2）。这使得我们的系统可以在任何互联网咖啡厅的计算机上使用，而不会泄露个人信息给其他用户。我们的系统还防止了网络钓鱼攻击，因为欺诈性的 SP 无法将用户重定向到其选择的 LIS。

5. 当用户选择了其 LIS 后，模块与之建立 SSL 连接，以保护浏览器和 LIS 之间的所有未来通信（步骤 3）。
6. 模块请求 SP 所需的一组声明，并要求这些属性以加密形式返回给 SP。当 LIS 收到此消息时，它充当“你来自哪里”(WAYF) 服务，并向用户显示一个页面，列出所有与其有信任关系的 IdP。用户选择其中一个 IdP 并被重定向到那里（步骤 4）。
7. 在本例中，用户选择了她的信用卡 IdP。
8. 用户现在被邀请使用 IdP 支持的机制进行身份验证（步骤 5）。在我们开发的 IdP 中，用户在此页面上输入她的电子邮件地址，IdP 在其数据库中查找该地址，然后拨打注册的手机号码并要求用户说出一句话。我们的 IdP 使用语音生物识别技术来强认证用户。
9. IdP 通过返回一个包含随机会话 ID 和一个“引用”属性的身份验证断言来响应 LIS（步骤 6），其中包含用户 PId 加密后的数据。LIS 可以解密 PId 并访问用户的账户。
10. LIS 显示一个类似身份选择器的页面，展示用户的所有卡片（步骤 7）。该页面由三个窗口组成：顶部窗口包含已经选择的卡片；中间窗口显示以前发送给此 SP 但尚未选择的卡片；底部窗口显示从未发送给此 SP 的卡片。这告诉用户在决定向 SP 发送这些卡片时要格外小心。符合 SP 要求的卡片会被点亮，不符合要求的卡片则会被灰化（不可选）。顶部窗口最初只包含一张卡片，即认证 IdP 的卡片。当用户点击下方两个窗口中的卡片时，会发生两件事：首先，该卡片从下方窗口移至顶部窗口；其次，任何不再需要满足 SP 策略的卡片在下方窗口中被灰化。例如，如果 SP 的策略要求来自 Visa、Mastercard 或 Amex 的信用卡，且用户点击了她的 Visa 卡，则她的其他信用卡图标将在下方窗口中被灰化。直到所选卡片的组合集完全匹配 SP 请求的所有属性类型，“使用所选卡片”按钮才会启用，以防止用户不完全授权自己。一旦用户选择了足够的卡片，按钮将被启用，LIS 将记住此选择，以便下次联系同一 SP 时它们出现在中间窗口中。由于 LIS 在云端而非桌面上，当用户更换设备时，她不会像在当前 CardSpace 系统中那样不断被告知她之前未向某个 SP 发送过卡片。
11. LIS 将查询每个选定的 IdP 以获取用户的属性（步骤 8）。所有选定的 IdP，包括自断言 IdP 和认证 IdP，都以相同的方式被联系。查询包括：一个属性查询，请求 SP 所需的选定属性子集；一个包含指向 IdP 处用户账户的 PId 的引用，以及原始包含随机会话 ID 的身份验证令牌。接收方 IdP 使用后者来确定是否信任认证 IdP 的初始认证行为。如果不信任，接收方 IdP 会向 LIS 返回错误。如果信任，则生成一条包含用户属性的声明，该声明已加密给 SP（步骤 9）。用户在该声明中由身份验证令牌中包含的随机会话标识符识别。LIS 存储返回的声明，直到所有查询的 IdP 都回复为止。
12. 一旦 LIS 收集到所有属性断言，它就会生成对浏览器插件模块原始请求的响应。该响应包含身份验证断言和每个 IdP 返回的加密属性声明。当浏览器收到响应时，它将封装的声明返回给 SP（步骤 10）。SP 收到的消息包含单个身份验证令牌和来自多个 IdP 的多个属性声明，所有这些声明都包含相同的随机会话标识符。由于 SP 信任所有 IdP 对其属性的权威性，因此它可以确信返回的所有属性属于同一个用户，并且该用户已被成功认证到特定的安全保证级别。

### 3. 致谢

本研究得到了欧盟 FP7 计划下的 TAS³（可信架构以确保共享服务的安全性）项目资助，资助协议编号为 216287。

### 4. 参考文献

[1] David Chappell. “Introducing Windows CardSpace”. MSDN. April 2006. Available from http://msdn.microsoft.com/en-us/library/aa480189.aspx

[2] OASIS. “Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) V2.0”, OASIS Standard, 15 March 2005

[3] William E. Burr, Donna F. Dodson, Ray A. Perlner, W. Timothy Polk, Sarbari Gupta, Emad A. Nabbus. “Electronic Authentication Guideline”, NIST Special Publication 800-63-1, Feb 2008

[4] David W Chadwick, George Inman. “Attribute Aggregation in Federated Identity Management”. IEEE Computer, May 2009, pp 46-53