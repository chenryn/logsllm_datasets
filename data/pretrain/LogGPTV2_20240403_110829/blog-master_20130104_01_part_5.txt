  and pdate <> '22220101'::date   
  and lag_pdate is not null   
) t  
where rn=1;  
EOF  
CNT=0  
CNT=`wc -l /tmp/inherit_day_monitor.log|awk '{print $1}'`  
if [ $CNT -gt 3 ]; then  
  echo -e "partition table abnormal.\n"|mutt -s "partition table abnormal" -a /tmp/inherit_day_monitor.log $EMAIL  
fi  
```  
每月非法表名检查 :   
```  
vi ~/inherit_month_invalidname_monitor.sh   
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql9.1.2  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export PATH=$PGHOME/bin:$PATH:.  
TODAY=`date +%Y%m%d`  
EMAIL="PI:EMAIL"  
HOST=127.0.0.1  
PORT=1921  
ROLE=digoal  
DBNAME=digoal  
psql -t -A -h $HOST -p $PORT -U $ROLE $DBNAME /tmp/inherit_month_invalidname_monitor.log  
select '-- 每月非法表名检查,过滤白名单(mon_inherits_white): ' as monitor;  
select server_ip,server_port,dbname,name_inhrelid  
  from mon_inherits   
  where mon_part_conv_to_date(name_inhrelid)='22220101'::date  
  and name_inhrelid not in (select name_inhrelid from mon_inherits_white)  
  order by server_ip,server_port,dbname,name_inhparent,name_inhrelid;  
EOF  
CNT=0  
CNT=`wc -l /tmp/inherit_month_invalidname_monitor.log|awk '{print $1}'`  
if [ $CNT -gt 3 ]; then  
  echo -e "partition table 每月非法表名检查.\n"|mutt -s "partition table 每月非法表名检查" -a /tmp/inherit_month_invalidname_monitor.log $EMAIL  
fi  
```  
非法表明确认不是按日期分表的, 并且不需要气泡,过期检查的. 写到白名单表中.  
例如 :   
```  
insert into mon_inherits_white select name_inhrelid from (select server_ip,server_port,dbname,name_inhrelid  
  from mon_inherits   
  where mon_part_conv_to_date(name_inhrelid)='22220101'::date  
  and name_inhrelid not in (select name_inhrelid from mon_inherits_white)  
  order by server_ip,server_port,dbname,name_inhparent,name_inhrelid) t group by name_inhrelid;  
```  
以后定期维护这个白名单表.  
每月人工检查 :   
```  
vi ~/inherit_month_human_monitor.sh   
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql9.1.2  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export PATH=$PGHOME/bin:$PATH:.  
TODAY=`date +%Y%m%d`  
EMAIL="PI:EMAIL"  
HOST=127.0.0.1  
PORT=1921  
ROLE=digoal  
DBNAME=digoal  
psql -t -A -h $HOST -p $PORT -U $ROLE $DBNAME /tmp/inherit_month_human_monitor.log  
select '-- 每月人工检查:' as monitor;  
select server_ip,server_port,dbname,name_inhparent,name_inhrelid,crt_time   
  from mon_inherits   
  order by server_ip,server_port,dbname,name_inhparent,name_inhrelid;  
EOF  
CNT=0  
CNT=`wc -l /tmp/inherit_month_human_monitor.log|awk '{print $1}'`  
if [ $CNT -gt 3 ]; then  
  echo -e "partition table 每月人工检查.\n"|mutt -s "partition table 每月人工检查" -a /tmp/inherit_month_human_monitor.log $EMAIL  
fi  
```  
mutt环境 :   
```  
vi ~/.muttrc   
set envelope_from=yes  
set from=PI:EMAIL  
set realname="德哥"  
set use_from=yes  
set charset="UTF-8"  
```  
定时任务 :   
```  
crontab -e  
1 8 * * * /home/pg91/inherit_day_monitor.sh  
1 9 1 * * /home/pg91/inherit_month_invalidname_monitor.sh  
1 9 1 * * /home/pg91/inherit_month_human_monitor.sh  
```  
## 注意  
1\. 如果存在IP,端口,库名相同的情况(例如公司存在多个IDC, 这些IDC中用了同样的内网网段), 以上脚本将不适用. 那请使用多个监控库来区分, 或者多个监控表来区分.  
2\. 集中监控时为什么acl字段改成了text呢, 因为在监控库中不存在生产库中的用户, 存储不存在的角色时, aclitem[]类型将出错.  
3\. 权限比较可能出现父表和子表赋权时顺序不一致造成的假象, 这个需要手工调整一下.  
例如 :   
```  
digoal=> create table tbl(id int);  
CREATE TABLE  
digoal=> create table tbl_child(id int);  
CREATE TABLE  
digoal=> grant select on tbl to postgres;  
GRANT  
digoal=> grant select on tbl to skycac;  
GRANT  
digoal=> grant select on tbl_child to skycac;  
GRANT  
digoal=> grant select on tbl_child to postgres;  
GRANT  
```  
虽然实际的权限是一致的, 但是这样得到的权限比较将不一致 :   
```  
digoal=> select relacl from pg_class where relname='tbl';  
                          relacl                             
-----------------------------------------------------------  
 {digoal=arwdDxt/digoal,postgres=r/digoal,skycac=r/digoal}  
(1 row)  
digoal=> select relacl from pg_class where relname='tbl_child';  
                          relacl                             
-----------------------------------------------------------  
 {digoal=arwdDxt/digoal,skycac=r/digoal,postgres=r/digoal}  
(1 row)  
```  
要解决这个问题, 需要对数组进行排序, 我们可以用unnest将数组转成setof rec,然后再按顺序聚合(PostgreSQL 9.0开始支持聚合顺序).  
如果不是9.0请自行写聚合函数, 聚合函数范例可参看 :   
http://blog.163.com/digoal@126/blog/static/16387704020121118112533410/  
下面针对PostgreSQL 9.0+ 举例如下 :  
```  
digoal=> create or replace function mon_array_sort(i_arr text[]) returns text[] as $$  
declare  
  result text[];  
begin  
  select array_agg(arr order by arr) into result from unnest(i_arr) t(arr);  
  return result;  
end;  
$$ language plpgsql;   
```  
排序后 :   
```  
digoal=> select mon_array_sort('{h1,b,b,c,g,e}'::text[]);  
 mon_array_sort   
----------------  
 {b,b,c,e,g,h1}  
(1 row)  
```  
4\. 一般还需要监控的项目,  
父表和继承表的表结构一致性.  
父表和继承表的索引一致性.  
父表和继承表的列权限一致性(pg_attribute.attacl).  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")