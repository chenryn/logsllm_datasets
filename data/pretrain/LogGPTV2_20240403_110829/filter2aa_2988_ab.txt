attack.!
  We!analyzed!the!source!and!process!of!replay!attack!to!expound!
the!feasibility!of!replay!attack!in!principle.!!!
  We!verified!the!replay!attack!based!on!the!signature!
vulnerability.!!
  We!proposed!defense!strategy!to!prevent!this!problem.!!
Our Contribution 
•  Judging whether the contract is accord with the 
ERC20 standard.  
we set three scanning standards to discovery  the 
smart contracts which  have the VULNERABILITY. 
!!!!!require!(!totalsupply>0)!
Vulnerability Scanning  
•  Get! the! name! of! the! contract! to! determine!
whether!the!name!is!valid.!
Vulnerability Scanning  
• 
Filter!smart!contracts!vulnerable!to!replay!attack.!!
Scanning!Result:!52!risky!targets!!
Vulnerability Scanning  
●  It! has! been! confirmed(proved)! that! there! are! two! smart!
contracts!allow!proxy!transactions..!
●  If!the!two!smart!contracts!use!a!similar!mechanism!and!share!
the!same!transaction!format.!!
●  When!a!transaction!happens!in!one!contract,!this!transaction!
will! be! also! legal! in! another! contract,! and! the! replay! attack!
will!be!successfully!executed.!
Why does the replay attack occur? 
The issue lies in this line: bytes32 h = keccak256(_from,_to,_value,_fee,nonce); 
Example 
Attack Process 
●  we!chose!two!ERC20!smart!contracts,!the!UGT!contract!
and!the!MTC!contract.!
●  we!created!two!accounts,!Alice!and!Bob!
●  we! deposit! some! tokens! in! the! two! accounts! in! UGT!
contracts!and!MTC!contracts.!
●  at!least!one!Ethereum!full!node!
Experiment condition 
Step! one:! transaction! records! on! the! Ethereum! were!
scanned!to!find!out!accounts!which!had!both!UGT!tokens!
and!MTC!tokens(we!use!two!accounts,!Alice!and!Bob)!.!!
Verification of the replay attack process 
Step!two:!Bob!induced!Alice!to!send!him!2!UGT!tokens.!The!transaction!input!data!
is!shown!as!below:!
Function:! transferProxy(address! _from,! address! _to,! uint256! _value,! uint256!
_feeUgt,!uint8!_v,!bytes32!_r,!bytes32!_s)!
MethodID:!0xeb502d45!
Verification of the replay attack process 
Step! three:! Bob! take! out! the! input! data! of! this! transaction! on! the!
blockchain.!The!parameters!“from,!to,!value,!fee,!v,!r,!s”!were!extracted!
from! [0]-! [6]! in! step! two.! The! following! is! the! implementation! of! the!
transfer!function.!
Verification of the replay attack process 
Step!four:!Bob!use!the!input!data!in!step!2!to!execute!another!transfer!in!
the! smart! contract! of! MTC.! The! result! of! this! transaction! is! shown! as!
below.!
Verification of the replay attack process 
Step!five:!Bob!got!not!only!2!UGT!tokens!but!also!2!MTC!tokens!from!
Alice.!In!this!process,!the!transfer!of!2!MTC!tokens!was!not!authorized!
by!Alice.!
Verification of the replay attack process 
Part!4
Demonstration 
Select contract 
Account setting
genesis.json
the UGT contract and the MTC contract 
!
• 
Alice!and!Bob!
• 
Alice(the!sender):!0x8e65d5349ab0833cd76d336d380144294417249e!
• 
Bob(the!receiver):!0x5967613d024a1ed052c8f9687dc74897dc7968d6!
• 
Both!own!some!tokens!for!transferring.!
UGT!Token!:0x43eE79e379e7b78D871100ed696e803E7893b644
MTC!Token:0xdfdc0D82d96F8fd40ca0CFB4A288955bECEc2088!
Core code 
Demo 
Demo
By!April!27th,!2018,!loophole!of!this!replay!attack!risk!exists!in!52!
Ethereum!smart!contracts.!
according!to!the!vulnerability!of!the!replay!attack:
l  High-risk!group!(10/52):!no!specific!information!is!contained!in!the!signature!of!
smart!contract,!which!the!signature!can!be!fully!reused.!
l  moderate-risk!group!(37/52):!fixed!string!is!contained!in!the!signature!of!smart!
contract,!which!the!probability!of!reusing!the!signature!is!still!high.!
l  Low! -risk! group! (5/52):! the! address! of! the! contract! (1! in! 5)! or! the! address! of!
sender!(4!in5)!is!contained!in!the!signature!of!smart!contract.!There!are!strong!
restrictions,!but!there!is!still!!own!the!possibility!of!replay!attacks.
Statistics and Analysis 
l  Replay!in!the!same!contract!(5/52)
MiracleTeleRoyalForkTokenFirstBloodKarmaTokenKarmaToken2
l  Cross-contracts!replay!(45/52)
Besides,!we!divided!these!45!contracts!into!3!groups,!for!the!specific!prefix!
data!used!in!the!signatures.!Cross-contracts!replays!may!happen!among!any!
contracts!as!long!as!they!are!in!a!same!group.!
!According!to!feasible!replay!attack!approaches:
Statistics and Analysis 
ü  Group!1the!specific!prefix!data!1!used!in!the!signatures!(28/52)
     ARCCoin,BAF,!Claes!CashClaes!Cash2CNF,CWC,DET,!Developeo,!
Envion,!FiCoin,!!!GoldCubJaroCoinmetax,!metax2!NODE,!NODE2,!NPLAY,!
SIGMA,! solomex,! Solomon! Exchange,! Solomon! Exchange2,! Trump! Full! Term!
Token,!Trump!Impeachment!Token,!X,!ZEUS!TOKENZEUS!TOKEN2!,cpay.!
ü  Group2the! specific! prefix! data! 2! used! in! the! signatures! (7/52)
"\x19Ethereum!Signed!Message:\n32" 
      AcoreCLCCLOUTCNYToken,!CNYTokenPlus,!GigBitThe!4th!
Pillar!!Token,
Statistics and Analysis 
!According!to!feasible!replay!attack!approaches:
ü  Group3no!specific!prefix!data!!used!in!the!signatures!(10/52)
BlockchainCutiesFirst(smt),!GG!TokenM2C!Mesh!NetworkM2C!
Mesh! Network2! MJ! comeback,! MJ! comeback2,! MTC! Mesh! Network,!
SmartMesh!Token,!UG!Token
l  Replay!between!test!chain!and!main!chain!(2/52)!
MeshBox!!!MeshBox2!
l  Replay!between!different!main!chain!(0/52)
!According!to!feasible!replay!attack!approaches:
Statistics and Analysis 
!According!to!!the!trading!frequency!of!above-mentioned!
contracts!
!By!9:00!April!30th,!2018,!
•  !24!contracts!were!found!which!have!the!transaction!records!within!
one!week,!The!proportion!is!46.15%!of!the!total!number!of!contracts.!!
•  9!contracts!were!found!which!have!the!transaction!records!from!one!
week!to!one!month,!The!proportion!is!17.31%!of!the!total!number!of!
contracts.!
Statistics and Analysis 
! According! to! ! the! trading! frequency! of! above-mentioned!
contracts!
!By!9:00!April!30th,!2018,!
•  16!contracts!were!found!which!have!the!transaction!records!beyond!
one!month,!The!proportion!is!30.77%!of!the!total!number!of!contracts.!!
•  3!contracts!Only!have!the!records!for!deployment.!The!proportion!is!
5.77%!of!the!total!number!of!contracts.!!
According! to! the! comprehensive! analysis,! 63.46%! of! the!
contract!transactions!are!still!active.!
Statistics and Analysis 
Ø The!designers!of!smart!contract!should!always!confirm!the!
suitable! range! of! digital! signature! when! designing! smart!
contracts.!
Ø The!smart!contracts!deployed!on!public!chain!should!add!in!
the! specific! information! of! the! public! chain! such! as! the!
chainID!and!the!name!of!the!public!chain.!
Ø The!users!of!smart!contracts!need!to!pay!attention!to!news!
and!reports!concerning!the!loophole!disclosures.!
Countermeasures 
p The! security! problems! of! smart! contracts! have! been!
widely!concerned.!
!
p As!long!as!the!signature!was!not!limited!by!the!smart!
contracts,!there!is!possibility!of!replay!attack.!
p We! believe! that! loopholes! on! the! Ethereum! smart!
contracts!have!not!totally!come!to!light.
!
 Conclusion