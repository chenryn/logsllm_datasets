### Optimized Text

#### Listing 384 - Routing Table on CLIENTWK220
Listing 384 does not show any routes to previously unknown networks. However, it is always advisable to check the routing table on a target system to ensure no information is overlooked.

To list all active network connections, we can use the `netstat` command with the following arguments:
- `-a` to display all active TCP connections and ports (both TCP and UDP).
- `-n` to disable name resolution.
- `-o` to show the process ID for each connection.

```powershell
PS C:\Users\dave> netstat -ano
```

**Active Connections:**

| Proto | Local Address     | Foreign Address   | State       | PID  |
|-------|-------------------|-------------------|-------------|------|
| TCP   | 0.0.0.0:80        | 0.0.0.0:0         | LISTENING   | 6824 |
| TCP   | 0.0.0.0:135       | 0.0.0.0:0         | LISTENING   | 960  |
| TCP   | 0.0.0.0:443       | 0.0.0.0:0         | LISTENING   | 6824 |
| TCP   | 0.0.0.0:445       | 0.0.0.0:0         | LISTENING   | 4    |
| TCP   | 0.0.0.0:3306      | 0.0.0.0:0         | LISTENING   | 1752 |
| TCP   | 0.0.0.0:3389      | 0.0.0.0:0         | LISTENING   | 1084 |
| TCP   | 0.0.0.0:5040      | 0.0.0.0:0         | LISTENING   | 3288 |
| ...   | ...               | ...               | ...         | ...  |
| TCP   | 192.168.50.220:139| 0.0.0.0:0         | LISTENING   | 4    |
| TCP   | 192.168.50.220:3389 | 192.168.119.4:33060 | ESTABLISHED | 1084 |
| TCP   | 192.168.50.220:4444 | 192.168.119.3:51082 | ESTABLISHED | 2044 |

#### Listing 385 - Active Network Connections on CLIENTWK220
The output of Listing 385 indicates that ports 80 and 443 are listening, which typically suggests the presence of a web server. Additionally, an open port 3306 indicates that a MySQL server is running on the system.

The output also shows our Netcat connection on port 4444 and an RDP connection from 192.168.119.4 on port 3389, indicating that another user is currently connected to the system. Once we elevate our privileges, we could use Mimikatz to attempt to extract the credentials of the connected user.

#### Installed Applications
Next, we will check all installed applications by querying the Windows Registry. We can use the `Get-ItemProperty` cmdlet to list both 32-bit and 64-bit applications, and then pipe the output to `Select-Object` with the `DisplayName` argument to display only the application names.

**32-bit Applications:**
```powershell
PS C:\Users\dave> Get-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*" | Select-Object DisplayName
```
**Output:**
- KeePass Password Safe 2.51.1
- Microsoft Edge
- Microsoft Edge Update
- Microsoft Edge WebView2 Runtime
- ...
- Microsoft Visual C++ 2015-2019 Redistributable (x86) - 14.28.29913
- Microsoft Visual C++ 2019 X86 Additional Runtime - 14.28.29913
- Microsoft Visual C++ 2019 X86 Minimum Runtime - 14.28.29913

**64-bit Applications:**
```powershell
PS C:\Users\dave> Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" | Select-Object DisplayName
```
**Output:**
- 7-Zip 21.07 (x64)
- ...
- XAMPP
- VMware Tools
- Microsoft Visual C++ 2019 X64 Additional Runtime - 14.28.29913
- Microsoft Visual C++ 2019 X64 Minimum Runtime - 14.28.29913

#### Listing 386 - Installed Applications on CLIENTWK220
Apart from standard Windows applications, the following are installed on CLIENTWK220:
- KeePass Password Manager
- 7-Zip
- XAMPP

After completing the situational awareness process, we can search for public exploits for these identified applications. Additionally, we can attempt password attacks to retrieve the master password of the password manager, potentially gaining access to other passwords and enabling us to log in as a privileged user.

However, the listed applications may not be complete due to incomplete or flawed installation processes. Therefore, it is important to check the 32-bit and 64-bit Program Files directories located in `C:\` and review the contents of the Downloads directory for potential additional programs.

#### Running Processes
It is equally important to identify which applications are currently running. We can use the `Get-Process` cmdlet to review the running processes on the system.

```powershell
PS C:\Users\dave> Get-Process
```

**Output:**
- Access (PID: 2044)
- httpd (PID: 49, 6824)
- mysqld (PID: 1752)
- powershell (PID: 6332)
- xampp-control (PID: 2272)

#### Listing 387 - Running Processes on CLIENTWK220
The output of Listing 387 includes our bind shell (PID: 2044) and the PowerShell session (PID: 6332). The process IDs 1752 and 6824 correspond to `mysqld` and `httpd`, respectively, indicating that both Apache and MySQL were started through XAMPP.

#### Summary of Findings
- **System Information:** 64-bit Windows 11 Pro Build 22000
- **Services:**
  - Web server on ports 80 and 443
  - MySQL server on port 3306
  - Bind shell on port 4444
  - RDP connection on port 3389 from 192.168.119.4
- **Installed Applications:**
  - KeePass Password Manager
  - 7-Zip
  - XAMPP

#### Hidden in Plain View
Based on the information gathered, we can assume that users on CLIENTWK220 use a password manager. However, users often store sensitive information in plain text files. We should search for such files in the home directory and publicly accessible folders.

**Search for Password Manager Databases:**
```powershell
PS C:\Users\dave> Get-ChildItem -Path C:\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue
```

**Search for Sensitive Information in XAMPP Directory:**
```powershell
PS C:\Users\dave> Get-ChildItem -Path C:\xampp -Include *.txt,*.ini -File -Recurse -ErrorAction SilentlyContinue
```

**Output:**
- my.ini (MySQL configuration file)
- passwords.txt (default XAMPP passwords)

**Contents of passwords.txt:**
```plaintext
### XAMPP Default Passwords ###
1) MySQL (phpMyAdmin):
User: root
Password: (no password!)
...
Postmaster: Postmaster (postmaster@localhost)
Administrator: Admin (admin@localhost)
User: newuser
Password: wampp
...
```

**Search for Documents and Text Files in User's Home Directory:**
```powershell
PS C:\Users\dave> Get-ChildItem -Path C:\Users\dave\ -Include *.txt,*.pdf,*.xls,*.xlsx,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue
```

**Output:**
- asdf.txt (meeting notes)

**Contents of asdf.txt:**
```plaintext
notes from meeting:
- Contractors won't deliver the web app on time
- Login will be done via local user credentials
- I need to install XAMPP and a password manager on my machine
- When beta app is deployed on my local PC:
  Steve (the guy with long shirt) gives us his password for testing
  password is: securityIsNotAnOption++++++
```

**Check Group Memberships for User 'steve':**
```powershell
PS C:\Users\dave> net user steve
```

**Output:**
- Last logon: 6/16/2022 1:03:52 PM
- Local Group Memberships: *helpdesk, *Remote Desktop Users, *Remote Management Users, *Users

While the user 'steve' is not a member of the Administrators group, they are a member of the Remote Desktop Users group. We can now connect to CLIENTWK220 with RDP as 'steve' and open PowerShell.

---

**References:**
- [Microsoft Documentation: Route](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/route_ws2008)
- [Microsoft Documentation: Netstat](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/netstat)
- [MySQL](https://www.mysql.com/)
- [Microsoft Devblog: Use PowerShell to Find Installed Software](https://devblogs.microsoft.com/scripting/use-powershell-to-find-installed-software/)
- [Microsoft Documentation: Get-ItemProperty](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-itemproperty?view=powershell-7.2)
- [KeePass](https://keepass.info/)
- [7Zip](https://www.7-zip.org/)
- [Apache Friends](https://www.apachefriends.org/)
- [Microsoft Documentation: Get-Process](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-process?view=powershell-7.2)
- [Apache Friends: FAQ for Windows](https://www.apachefriends.org/faq_windows.html)
- [Microsoft Documentation: Get-Content](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-content?view=powershell-7.2)

**Copyright:**
PWK - Copyright Â© 2023 OffSec Services Limited. All rights reserved.  
Made in Morocco  
Penetration Testing with Kali Linux