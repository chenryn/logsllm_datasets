    ```html
    ```
* ``: specifies the base URL and/or target for all relative URLs in
    a page. The `` tag must have either an href or a target attribute
    present, or both.
    ```html
    ```
## [Favicon](https://www.w3schools.com/html/html_favicon.asp)
A favicon image is displayed to the left of the page title in the browser tab.
To add a favicon to your website, either save your favicon image to the root
directory of your webserver, or create a folder in the root directory called
images, and save your favicon image in this folder. A common name for a favicon
image is "favicon.ico".
Next, add a `` element to your "index.html" file, after the `` element, like this:
```html
  My Page Title
```
# [Styles](https://www.w3schools.com/html/html_styles.asp)
The HTML `style` attribute is used to add styles to an element, such as color, font, size, and more.
```html
```
The property is a [CSS](css.md) property. The value is a CSS value.
## [Formatting](https://www.w3schools.com/html/html_formatting.asp)
Formatting elements were designed to display special types of text:
* ``: Bold text.
* ``: Important text.
* ``: Italic text.
* ``: Emphasized text.
* ``: Marked text.
* ``: Smaller text.
* ``: Deleted text.
* ``: Inserted text.
* ``: Subscript text.
* ``: Superscript text.
# [Layout](https://www.w3schools.com/html/html_layout.asp)
Websites often display content in multiple columns (like a magazine or
a newspaper).
HTML has several semantic elements that define the different parts of a web page:
HTML5 Semantic Elements
* ``: Defines a header for a document or a section.
* ``: Defines a set of navigation links.
* ``: Defines a section in a document.
* ``: Defines an independent, self-contained content.
* ``: Defines content aside from the content (like a sidebar).
* ``: Defines a footer for a document or a section.
* ``: Defines additional details that the user can open and close on
    demand.
* ``: Defines a heading for the  element.
## Layout elements
### Section
A section is a thematic grouping of content, typically with a heading.
Examples of where a `` element can be used:
* Chapters
* Introduction
* News items
* Contact information
```html
WWF
The World Wide Fund for Nature (WWF) is an international organization working on issues regarding the conservation, research and restoration of the environment, formerly named the World Wildlife Fund. WWF was founded in 1961.
WWF's Panda symbol
The Panda has become the symbol of WWF. The well-known panda logo of WWF originated from a panda named Chi Chi that was transferred from the Beijing Zoo to the London Zoo in the same year of the establishment of WWF.
```
### article
The `` element specifies independent, self-contained content.
An article should make sense on its own, and it should be possible to distribute
it independently from the rest of the web site.
Examples of where the `` element can be used:
* Forum posts
* Blog posts
* User comments
* Product cards
* Newspaper articles
```html
Google Chrome
Google Chrome is a web browser developed by Google, released in 2008. Chrome is the world's most popular web browser today!
Mozilla Firefox
Mozilla Firefox is an open-source web browser developed by Mozilla. Firefox has been the second most popular web browser since January, 2018.
Microsoft Edge
Microsoft Edge is a web browser developed by Microsoft, released in 2015. Microsoft Edge replaced Internet Explorer.
```
### header
The `` element represents a container for introductory content or a set
of navigational links.
A `` element typically contains:
* one or more heading elements (`` - ``)
* logo or icon
* authorship information
```html
    What Does WWF Do?
    WWF's mission:
  WWF's mission is to stop the degradation of our planet's natural environment,
  and build a future in which humans live in harmony with nature.
```
### footer
The `` element defines a footer for a document or section.
A `` element typically contains:
* authorship information
* copyright information
* contact information
* sitemap
* back to top links
* related documents
```html
  Author: Hege Refsnes
  PI:EMAIL
```
## Layout Techniques
There are four different techniques to create multicolumn layouts. Each
technique has its pros and cons:
* CSS framework
* CSS float property
* CSS flexbox
* CSS grid
### Frameworks
If you want to create your layout fast, you can use a CSS framework, like
[W3.CSS](https://www.w3schools.com/w3css/default.asp) or
[Bootstrap](https://www.w3schools.com/bootstrap/default.asp).
### Float layout
It is common to do entire web layouts using the CSS `float` property. Float is
easy to learn - you just need to remember how the `float` and `clear` properties
work.
Disadvantages: Floating elements are tied to the document flow, which may harm the flexibility.
### Flexbox layout
Use of flexbox ensures that elements behave predictably when the page layout must accommodate different screen sizes and different display devices.
### Grid layout
The CSS Grid Layout Module offers a grid-based layout system, with rows and
columns, making it easier to design web pages without having to use floats and
positioning.
# [Responsive](https://www.w3schools.com/html/html_responsive.asp)
Responsive web design is about creating web pages that look good on all
devices.
A responsive web design will automatically adjust for different screen sizes and
viewports.
## Setting the viewport
To create a responsive website, add the following `` tag to all your web pages:
```html
```
This gives the browser instructions on how to control the page's dimensions and
scaling.
The `width=device-width` part sets the width of the page to follow the
screen-width of the device (which will vary depending on the device).
The `initial-scale=1.0` part sets the initial zoom level when the page
is first loaded by the browser.
## Responsive images
Using the `max-width` property: If the CSS `max-width` property is set to
`100%`, the image will be responsive and scale up and down, but never scale up
to be larger than its original size:
```html
```
## Responsive text size
The text size can be set with a "vw" unit, which means the "viewport width".
That way the text size will follow the size of the browser window:
```html
Hello World
```
Viewport is the browser window size. `1vw = 1%` of viewport width. If the viewport
is 50cm wide, 1vw is 0.5cm.
## Media queries
In addition to resize text and images, it is also common to use media queries in responsive web pages.
With media queries you can define completely different styles for different browser sizes.
The next example will make the three div elements display horizontally on large
screens and stacked vertically on small screens:
```html
```
# [Code Style](https://www.w3schools.com/html/html5_syntax.asp)
* Always declare the document type as the first line in your document.
    ```html
    ```
* Use lowercase element names:
    ```html
    This is a paragraph.
    ```
* Close all HTML elements.
* Use lowercase attribute names
* Always quote attribute values
* Always Specify alt, width, and height for Images.
* Don't add spaces between equal signs: ``
* Avoid Long Code Lines
* Do not add blank lines, spaces, or indentations without a reason.
* Use two spaces for indentation instead of tab
* Never Skip the `` Element
* Always add the ``, `` and `` tags.
* Always include the `lang` attribute inside the `` tag
    ```html
    ```
* Set the character encoding: ``
* [Set the viewport](#setting-the-viewport).
# Tips
## HTML beautifier
If you encounter html code that it's not well indented  you can use [html
beautify](https://htmlbeautify.com).
# References
* [W3 tutorial](https://www.w3schools.com/html/default.asp)