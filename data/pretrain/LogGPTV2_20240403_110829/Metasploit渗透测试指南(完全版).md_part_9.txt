=SQLEXPRESS
[*]
IsClustered
No
③[*]
Version
=10.0.1600.22
[*]
tcp
=1433
如你所见，扫描器不仅定位了MSSQL服务器地址O，它还确定了MSSQL实例名?、服务
器的版本号③以及服务器监听的TCP端口·。可以想象一下，在一个有大量主机的子网中去查
找MSSQL的监听端口，使用这种方法的速度比起用nmap对所有主机的所有端口进行扫描要快
得多。
3.3.3SSH服务器扫描
如果在扫描过程中遇到一些主机运行着SSH（安全Shell)，你应当对SSH的版本进行识别。
SSH是一种安全的协议，但这里的安全仅指数据传输的加密，很多SSH的实现版本中均被发现
了安全漏洞。不要认为你永远不会遇到一台没有安装补丁程序的老机器，这种幸运的事很有可
能就会落在你的头上。可以使用Metasploit框架的ssh_version模块来识别目标服务器上运行的
SSH版本。
msf>use scanner/ssh/ssh_version
msf auxiliary(ssh_version)>set THREADS 50
THREADS => 50
msf auxiliary(ssh_version) > run
[*] 192.168.1.1:22, SSH server version: SSH-2.0-dropbear_0.52
[*]Scanned 044 of 256 hosts (017% complete)
[*] 192.168.1.101:22, SSH server version: SSH-2.0-OpenSSH_5.1p1 Debian-3ubuntu1
[*]Scanned 100 of 256 hosts(039% complete)
[*] 192.168.1.153:22, SSH server version: SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1
[*]192.168.1.185:22,SSH server version:SSH-2.0-0penSSH_4.3
这个输出结果告诉我们，一些不同的服务器安装了不同补丁等级的版本。如果你想要攻击
一个特定版本的OpenSSH服务程序，那么这些使用ssh_version扫描得到的结果可能对你非常
有价值。
28
---
## Page 56
第3章情报搜集
3.3.4FTP扫描
FTP是一种复杂且缺乏安全性的应用层协议。FTP服务器经常是进入一个目标网络最便捷的
途径。在渗透测试工作中，你总是应当对目标系统上运行的FTP服务器进行扫描、识别和查点。
下面我们使用Metasploit框架的ftp_version模块对我们的WindowsXP虚拟机的FTP服务
进行扫描：
msf>use scanner/ftp/ftp_version
msfauxiliary(ftp_version)>show options
Module options:
Name
Current Setting
Required Description
FTPPASS
PI:EMAIL
no
The password for the specified username
FTPUSER
anonymous
no
The usernameto authenticate as
RHOSTS
yes
The target address range or CIDR identifier
RPORT
21
yes
The target port
THREADS
1
yes
The number of concurrent threads
WORKSPACE
no
The name of the workspace to report data into
msf auxiliary(ftp_version) > set RH0STS 192.168.1.0/24
RHOSTS => 192.168.1.0/24
msf auxiliary(ftp_version) > set THREADS 255
THREADS => 255
msf auxiliary(ftp_version) > run
O[*]192.168.1.155:21FTPBanner:Minftpd ready
扫描器成功地识别出FTP服务器O。现在我们使用Metasploit框架的scanner/ftp/anonymous
模块检查一下这台FTP服务器是否允许匿名用户登录：
msf>useauxiliary/scanner/ftp/anonymous
msf auxiliary(anonymous）>set RH0sTS192.168.1.0/24
RHOSTS => 192.168.1.0/24
msf auxiliary(anonymous）>set THREADS 50
THREADS => 50
msf auxiliary(anonymous）>run
[*] Scanned 045 of 256 hosts (017% complete)
①[*] 192.168.1.155:21 Anonymous READ/WRITE (220 Minftpd ready)
话说，我们对远程的FTP系统具有完全的访问权限，可以上传任何文件或下载FTP服务器中共
享的所有文件。
29
---
## Page 57
Metasploit渗透测试指南
3.3.5简单网管协议扫描
简单网管协议（SNMP）通常用于网络设备中，用来报告带宽利用率、冲突率以及其他信
息。然而，一些操作系统也包含SNMP服务器软件，主要用来提供类似CPU利用率、空闲内
存以及其他系统状态信息。
SNMP本是为系统管理员提供方便之举，但它却成了渗透测试者的金矿。可访问的SNMP
服务器能够泄漏关于特定系统相当多的信息，甚至会导致设备被远程攻陷。例如，如果你能得
到具有可读/写权限的Cisco路由器SNMP团体字符串，便可以下载整个路由器的配置，对其进
行修改，并把它传回到路由器中。
专门设计的。开始扫描之前请留意，如果能够获取只读（RO）或读/写（RW）权限的团体字符
串，将对你从设备中提取信息发挥重要作用。基于Windows操作系统的设备中，如果配置了
SNMP，通常可以使用RO或RW权限的团体字符串，提取目标的补丁级别、运行的服务、用
户名、持续运行时间、路由以及其它信息，这些信息对于渗透测试工作非常有价值。（团体字符
串基本上等同于查询设备信息或写入设备配置参数时所需的口令。）
猜解出团体字符串后，SNMP（并非所有版本）可以允许你做其管理范围内的任何事情，
可能会导致大量的信息泄露或整个系统被攻陷。SNMPv1和v2天生便有安全缺陷，SNMPv3
中添加了加密功能并提供了更好的检查机制，增强了安全性。为了获取管理一台交换机的权限，
首先你需要找到它的SNMP团体字符串。利用Metasploit框架中的scanner/snmp/snmp_login模
块，你可以尝试对个IP或一段IP使用字典来猜解SNMP团体字符串。
msf>use use scanner/snmp/snmp_login
msfauxiliary(snmp_login)>set RH0STS192.168.1.0/24
RHOSTS => 192.168.1.0/24
msf auxiliary(snmp_login) > set THREADS 50
THREADS=>50
msf auxiliary(snmp_login) > run
[*] >> progress (192.168.1.0-192.168.1.255) 0/30208...
?[*] 192.168.1.2'private′'GSM7224 L2 Managed Gigabit Switch'
[*] Auxiliary module execution completed
msf auxiliary(snmp_login)>
对输出中的GSM7224字样在Google中进行快速检索我们发现，扫描器已经发现了一台
Netgear交换机公用O和私有·的SNMP团体字符串。不论你是否相信，这样的结果并非为本书
特意安排的，网络中的大量交换机的确使用了出厂时的默认设置。
30
---
## Page 58
第3章情报搜集
在你的渗透测试职业生涯中，你会遇到许多类似这样令人目结舌的情况，因为许多系统
部的未做配置的设备能够在Intermet上访问时，这种情况会变得尤其危险。
3.4编写自己的扫描器
在Metasploit中缺少很多针对特定应用和服务的扫描模块。不过值得庆幸的是，Metasploit
框架拥有很多建立自定义扫描器所需的实用功能。自定义扫描器可以使用Metaspioit框架中全
部的渗透攻击类和方法，框架还内建了代理服务器支持、安全套接字层（SSL）支持、报告生
成以及线程设置等。在安全评估工作中编写自定义的扫描器非常有用，例如可以编写一个快速
定位目标系统上的每一个弱口令或者未打补丁服务的自定义模块。
Metasploi框架软件的扫描器模块包括各种mixin（混入类），如用于TCP、SMB的渗透攻
击mixin，以及集成在Metasploit框架中的辅助扫描mixin。Mixin是为你预定义的函数和调用
的代码模块。Auxiliary:Scannermixin重载了Auxiliary基类的run方法，在运行时可以使用
run_host（IP）、run_range（地址范围），或run_batch（IP列表文件）调用模块的方法，然后对
IP地址进行处理。我们可以利用Auxiliary:Scanner调用额外的Metasploit内置功能。①
下面是一个简单的TCP扫描器的Ruby脚本，它默认将连接到远程主机的12345端口，连
接后，发送“HELLOSERVER”字符串，收到服务器的响应后，将服务器响应消息和服务器IP
地址一同输出到屏幕上。
#Metasploit
require 'msf/core'
class Metasploit3`My custom TCP scan'，
'Version'
=>'$Revision:1 $',
'Description'
=>‘My quick scanner'，
'Author
=>'Your name here'，
'License'
=> MSF_LICENSE
register_options(
[
③Opt::RPORT(12345)
],self.class)
end
①译者注：Minix（混入类）是一个面向对象编程语言中的概念，它是指提供一些特定功能只能被继承或
只被子类所重用的类，而不能直接创建实例对象。从一个mixin类继承并非一种特殊化形式，而被看
成集合一些功能。一个类可以从一个或者多个mixin通过多重继承来获得它的多样化功能。
31
---
## Page 59
Metasploit渗透测试指南
def run_host(ip)
connect()
SOck.putS('HELLO SERVER')
data = sock.recv(1024)
print_status("Received: #{data} from #{ip}")
disconnect()
end
end
这个简单的扫描器使用Msf:Exploit:Remote:TcpmixinO处理TCP通信，使用
Msf:Auxiliary:Scannermixin·继承扫描器所需的各个参数与执行方法。这个扫描器默认的远程
端口被设定为12345③，一旦连接到服务器，它发送一个消息?，接收到来自服务器的响应后，
将响应消息内容和服务器地址一同输出到屏幕上。
我们把这段自定义的脚本保存在module/auxiliary/scanner/路径下，命名为simple_tcp.rb。在
Metasploit中，模块保存的位置非常重要。举例来说，如果这个模块保存在了
modules/auxiliary/scanner/http/路径下，它在在模块列表中将显示为scanner/http/simple_tcp，而
不再是scanner/simple_tcp。
为了对这个简单的扫描器进行测试，我们使用netcat在端口12345进行监听，并通过管道
输入一个文本文件模拟服务器的响应。
root@bt:/# echo "Hello Metasploit" > banner.txt
root@bt:/#nc-1vnp12345use auxiliary/scanner/simple_tcp
msf auxiliary(simple_tcp)>show options
Module options:
Name
Current Setting Required Description
RHOSTS
yes
The target address range or CIDR identifier
RPORT
12345
yes
The target port
THREADS1
yes
The number of concurrent threads
msf auxiliary(simple_tcp)>set RH0STS 192.168.1.101
RHOSTS=> 192.168.1.101
msf auxiliary(simple_tcp)> run
[*]Received:Hello Metasploit from 192.168.1.101
[*]Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
msf auxiliary(simple_tcp)>
32
---
## Page 60
第3章情报搜集
以提高工作效率的时候，Metasploit框架所提供的多种功能对你有很大的帮助。但愿这个简单的
例子能够展示出Metasploit框架和模块化代码的强大威力。不过，你在渗透测试中并不是做任
何事情都需要手工编写代码的。
3.5小结
本章中你学习了如何利用Metasploit框架进行情报搜集，这些方法在PTES 标准中亦有描
述。情报搜集工作需要大量实践，需要对渗透目标组织的运作模式有深入的了解，需要能够确
定最佳的攻击目标。贯穿你渗透测试职业生涯的一件事情是适应和改善渗透测试方法。记住，
这个阶段你最需要关注的是熟悉你的渗透目标并细致记录下你的探索足迹。不管你的工作是通
过互联网、内部网、无线网甚至是社会工程学哪种媒介进行的，情报搜集的目标始终如一。
在第4章中，我们将话题转移到渗透测试的另一个重要步骤：漏洞分析阶段中的自动化漏
洞扫描。在后面的章节中，我们将深入探讨如何创建自己的渗透攻击模块和Meterpreter脚本。
33
---
## Page 61
PDG
---
## Page 62
第
章
漏洞扫描
漏洞扫描器是一种能够自动在计算机、信息系统、网络以及应用软件中寻找和发现安全弱
点的程序。它通过网络对目标系统进行探测，向目标系统发送数据，并将反馈数据与自带的漏
洞特征库进行匹配，进而列举出目标系统上存在的安全漏洞。
各种操作系统网络模块的实现原理不同，因此它们对于接收到的探测数据往往会有不同响
应。漏洞扫描器可以将这些独特的响应看作是目标系统的“指纹”，用以确定操作系统版本，甚
至确定出补丁安装等级。漏洞扫描器也可以使用一个预先设定的登录凭据登录到远程系统上，
列举出远程系统上安装的软件和运行的服务，并判定它们是否已经安装了补丁程序。漏洞扫描
器能够根据扫描结果生成报告，对系统上经检测发现的安全漏洞进行描述，这份报告对于网络
管理员和渗透测试者意义重大。
---
## Page 63