# Detail
When I run script, Deno always panics.
    import $ from "https://deno.land/x/dax@0.17.0/mod.ts";
    const cmds = [];
    for (let i = 0; i ::fmt::h2990a6f24ccff6db
       1:        0x101288d7c - core::fmt::write::h91497fd291c8b104
       2:        0x101ab2a24 - std::io::Write::write_fmt::h23fa41342cffacf4
       3:        0x101ae0b94 - std::panicking::default_hook::{{closure}}::hb41cdb784f4c17ac
       4:        0x101ae0858 - std::panicking::default_hook::hdfe992d5fb29a991
       5:        0x1011d2fe8 - deno::setup_panic_hook::{{closure}}::h5e935c84e6e3da4b
       6:        0x101ae10f0 - std::panicking::rust_panic_with_hook::h2eb0e4b718773521
       7:        0x101ae0eb8 - std::panicking::begin_panic_handler::{{closure}}::h06a693206403b4d5
       8:        0x101ae0e4c - std::sys_common::backtrace::__rust_end_short_backtrace::h8998defd518dbcad
       9:        0x101ae0e28 - _rust_begin_unwind
      10:        0x101286f0c - core::panicking::panic_fmt::ha46aa9af97eb193d
      11:        0x101288a5c - core::panicking::panic::h5713e7735cef5fa8
      12:        0x10158348c - deno_runtime::errors::get_io_error_class::h77396f967b032c77
      13:        0x101582fa0 - deno_runtime::errors::get_error_class_name::h42dd95fe507b1825
      14:        0x100fdb3b0 - deno::errors::get_error_class_name::h2a9918ddd642a50a
      15:        0x10131b200 - deno_core::error::to_v8_error::h406ecfc9d61f68bb
      16:        0x10167e340 - deno_runtime::ops::process::op_run::v8_func::h56971477b8014cd2
      17:        0x10167940c -  R as v8::support::CFnFrom>::mapping::c_fn::h78d0641241932d68
## How to reproduce
At first, please clone this repository.
    $ git clone https://github.com/skanehira/deno_runtime_example
    $ cargo build
And add this script at project root directory.
    import $ from "https://deno.land/x/dax@0.17.0/mod.ts";
    const cmds = [];
    for (let i = 0; i < 5000; i++) {
      cmds.push($`./target/debug/deno_runtime_example`.text());
    }
    await Promise.all(cmds);
Run script and we got panic.
    deno run -A main.ts