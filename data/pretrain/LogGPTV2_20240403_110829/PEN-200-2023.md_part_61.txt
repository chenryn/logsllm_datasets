### Additional Examples
For more examples, refer to the manual: [Exploit-DB Searchsploit](https://www.exploit-db.com/searchsploit)

#### Listing 357 - Searchsploit Command Examples
The `searchsploit` command offers various options to refine your search, modify output formats, update the Exploit-DB package, and more.

##### Options

###### Search Terms
- **-c, --case [Term]**: Perform a case-sensitive search. (Default is case-insensitive)
- **-e, --exact [Term]**: Perform an exact and ordered match on the exploit title. (Default is an AND match on each term)  
  Example: `"WordPress 4.1"` would not match `"WordPress Core 4.1"`.
- **-s, --strict**: Perform a strict search, ensuring input values must exist exactly as provided, disabling fuzzy search for version ranges.  
  Example: `"1.1"` would not match in `"1.0 qdPM 9.1 Copyright &copy; 2022 qdpm.net"`.

### Finding and Using Exploits

#### Listing 364 - Version Discovery in Source Code
The web application and its version are typically found near the bottom of the source code page. Further investigation reveals that it is a free, web-based project management software, specifically `qdPM 9.1`.

With this information, we can search Exploit-DB for a remote exploit for `qdPM 9.1`, which returns several relevant exploits.

#### Figure 234: Exploit Details
Upon inspecting the latest exploit, we find that it is verified, remote, and allows for remote code execution. We will review the exploit to gain a basic understanding before executing it.

The exploit requires a username and password for the project management web application. The username field on the login page is an email address. We have found several emails but no exposed passwords. If we have valid credentials, the exploit will upload a command web shell, allowing us to execute commands on the target.

#### Alternative Methods for Credential Retrieval
If we do not have working credentials, another method is to use a list generator on the website. After generating a word list, we can try it as-is or modify it to create more complex passwords.

Using a dictionary attack on the login portal with the four discovered emails, we can verify that `PI:EMAIL:AIDevCorp` are valid credentials for George’s account.

#### Figure 235: Logged In with George’s Account
With valid login credentials, we can enumerate tasks, projects, and some configurations of the project management system. Since we have an exploit that requires working credentials, we can now execute it against our target.

We will copy the exploit to our current working directory using `searchsploit`.

```bash
kali@kali:~$ searchsploit -m 50944
Exploit: qdPM 9.1 - Remote Code Execution (RCE) (Authenticated) (v2)
URL: https://www.exploit-db.com/exploits/50944
Path: /usr/share/exploitdb/exploits/php/webapps/50944.py
File Type: Python script, Unicode text, UTF-8 text executable
Copied to: /home/kali/50944.py
```

#### Listing 365 - Exploit Copied to Current Working Directory
With the exploit in our current working directory, we can now execute it against the target path using the necessary credentials.

---

**References:**
- [qdPM](https://qdpm.net/)
- [Exploit DB](https://www.exploit-db.com/exploits/50944)

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.**

**Made in Morocco**

**Penetration Testing with Kali Linux**