虽然这些输出很容易遗漏，但它也为我们提供了部分有价值的
最后，dig 程序的输出也提供了一些关于查询本身的信息：
;; Query time: 3 msec
ns2.example.net.
；> DiG 9.7.0-P1<>> example.net NS
nsl.example.net.
ADDITIONAL SECTION:
ANSWER SECTION:
::QUESTION SECTION:
:;flags: qr aa rd ra; QUERY:1,ANSWER:2，AUTHORITY:0,ADDITIONAL: 2
example.net.
example.net.
;global options: +cmd
:; MSG SIZE rcvd: 118
:; WHEN: Mon Mar 19 20:48:27 2012
; SERVER: 192.168.0.1#53(192.168.0.1)
example.net.
;;Query time:2 msec
二
->>HEADER> DiG 9.7.0-P1> web1.example.net +trace
它能帮你完成完整、
172800
172800
172800
172800
172800
172800
143557
172800
172800
172800
172800
172800
172800
143557
143557
143557
143557
143557
143557
143557
172800
172800
172800
143557
143557
143557
143557
143557
IN
IN
IN
N
M
N
N
N
M
N
N
N
N
、无缓存、
NS
S
N
N
N
N
N
N
nsl.example.net.
c.gtld-servers.net.
g.gtld-servers.net
a.gtld-servers.net.
j.gtld-servers.net.
m.gtld-servers.net.
f.gtld-servers.net.
d.gtld-servers.net.
1.root-servers.net.
e.root-servers.net
m.root-servers.net.
ns2.example.net.
h.gtld-servers.net.
e.gtld-servers.net
b.gtld-servers.net.
i.root-servers.net.
h.root-servers.net
g.root-servers.net.
f.root-servers.net
d.root-servers.net
b.root-servers.net
i.gtld-servers.net.
k.gtld-servers.net.
c.root-servers.net
a.root-servers.net
1.gtld-servers.net.
j.root-servers.net
递归的 DNS 请求，并显
---
## Page 104
仅看以；开头的行，就会发现请求中涉及了什么服务器：
6.2.3
作的即时信息，如果你在自己的域上运行，它会运行得非常好，如
而且在任何你可能经常访问的域上。这个输出中提供了递归解析工
求发送到ns2.example.net，这个服务器返回了我们想要查找的信息。
net，后者会为 example.net返回一个名称服务器列表。最后一个请
对平衡。列表中下面的请求被发送到.net 名称服务器e.gtld-servers.
的。这样你就可以选择列表中的第一个服务器，同时负载也会相
中的一个字母开头，但是默认情况下，名称服务器的应答是随机
然 DNS服务器可能保存了一些区域的信息，但是作为一个递归名
在Linux机器上，这些名称服务器都配置在/etc/resolv.conf中。虽
装DNS 服务器，相反所有的DNS查询都会发往递归名称服务器。
们要学习下一个知识点：递归名称服务器。大多数电脑上都没有安
果出现什么问题，可以用它作为参照。
表。顺便说一句，你可能会注意到所有的根名称服务器都用字母表
会返回根名称服务器列表。下一个请求会发送到c.root-servers.net
我强烈建议你尝试一下+trace 这个参数，不仅在你拥有的域上
现在我们已经大概了解了一般情况下 DNS 请求的工作原理，我
上面所有以；开头的行都是发送到服务器的请求的输出。如果
第一个服务器是IP地址为192.168.0.1的本地DNS服务器，它
::Received 512 bytes from 192.168.0.1#53(192.168.0.1) in 3 ms
example.net.
;Received 102 bytes from 192.12.94.30#53(e.gt1d-servers.net) in 153 ms
webl.example.net.
example.net.
递归名称服务器的问题
M
N
nsl.example.net.
10.1.2.5
ns2.example.net.
6.2DNS服务器故障排除·97
---
## Page 105
98
·第6章为什么主机名无法解析？解决DNS服务器的问题
www.google.com和www.yahoo.com，仅需确保在查询的后面添加你
conf文件中），然后按照本章开始时介绍的方法执行 DNS 客户端
(接下来的章节会讨论这个内容）。
称服务器，它会收到来自客户端的DNS查询，然后执行递归解析
想要测试的名称服务器IP地址，如下所示：
回。主要是使用 nslookup 来尝试解析一些非常知名且稳定的网站如
故障查询，看看列表中的名称服务器是否已经启动并且能正常返
常直接。检查主机中配置的名称服务器列表（Linux 中在/etc/resolv.
常明显，在载人完成之前，它花费的时间大约为30秒。
行中进行DNS 查询，那么当你在浏览器中载人一个网页的时候非
的现象可能是 DNS 解析过程超过了 30秒。如果你不是直接在命令
服务器可以使用，大多数办公场所和其他组织也一样。在这些情况
IP地址。除非你记住了这些网站的IP，否则Intermet对你来说都是
的客户端都会出现问题。因为我们都依赖于DNS 将主机名转化为
下，当列表中的第一个名称服务器出现问题的时候，首先你会看到
毫无意义的。
IP地址，
如果你怀疑一台递归DNS 服务器岩机了，那么确认的方法非
因为递归 DNS 解析如此重要，所以 ISP 为客户提供了多个名称
当递归名称服务器出现问题的时候，所有使用这个名称服务器
$ nslookup ww.google.com 10.1.1.4
Address:74.125.224.146
Name:www.1.google.com
Address:74.125.224.145
Address:74.125.224.144
www.google.comcanonical
Non-authoritative answer:
Address:
Server:
Name:www.1.google.com
Name:www.1.google.com
，如果没有递归名称服务器，我们就无法查询喜欢的网站的
10.1.1.4
10.1.1.4#53
al name = www.1.google.com.
---
## Page 106
之前还能正常运作，更可能是这种情况。很多组织为了安全起见，
那么会看到如下的错误信息：
已经启动并可以访问。一旦确定了这一点，但仍然无法解析站点，
都严格限制了允许向它们发起递归查询的主机，所以你会看到如果
绝是因为递归请求不可用。
的请求被拒绝了。在dig 的输出中可以看到，这个请求之所以被拒
这种问题可能是由错误的配置引起的，尤其是如果名称服务器
在这两种情况中，DNS 服务器已经启动并能正常响应，不过你
dig 命令的输出中能提供更直接的错误消息：
$ns1ookupwww.example.net 10.1.1.4
如果你按照6.1节介绍的步骤操作，你能知道 DNS 服务器是否
$dig ww.example.net 10.1.1.4
*server can't find www.example.net:REFUSED
Address:74.125.224.148
Name:www.1.google.com
Address:74.125.224.147
；;MSG SIZE rcvd:33
;;WHEN: Sat Mar 24 20:15:17 2012
:: Query time: 1492 msec