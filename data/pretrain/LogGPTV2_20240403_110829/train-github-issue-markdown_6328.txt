I have encountered an issue with the `requests` library (or possibly `oreos`?) regarding its cookie handling. When using `requests` to authenticate with a particular server, the response includes a cookie whose value contains an equals sign ("="). According to the `_LegalChars` definition in `monkeys.py`, the equals sign is not considered a legal character. As a result, `requests` quotes the entire cookie value when it is included in subsequent requests. However, the server treats the quoted cookie as different from the original, unquoted cookie, leading to authentication failure.

Here is a detailed flow of the issue:

1. **Session Initialization and Authentication:**
    ```python
    session = requests.session(headers=_default_headers)
    data = {
        'userID': 'myuser',
        'password': 'mypassword',
    }
    resp = session.post('https://www.discovercard.com/cardmembersvcs/loginlogout/app/signin', data=data)
    ```

2. **Response Headers and Cookies:**
    ```python
    resp.headers
    # Output:
    {'cache-control': 'no-cache="set-cookie, set-cookie2"',
     'connection': 'Keep-Alive',
     'set-cookie': 'v1st=6B2AF394DCD43A57; path=/; expires=Wed, 19 Feb 2020 14:28:00 GMT; domain=.discovercard.com,
     dfsedskey=62689366; Expires=Sun, 17 Feb 2013 17:25:06 GMT; Path=/; Domain=.discovercard.com,
     PMData=PMV3EKKwYWpRB0ZAh7NnXgngf+fGUH7/c6RfKfa7Hiv5v2h1S1iS4MjexZtrnrPMErcNR0eyCzoWUfNFrj6bUkqxR0aQ==; Expires=Sun, 17 Feb 2013 17:25:06 GMT; Path=/; Domain=.discovercard.com; Secure,
     dcsession=E7dc4gmtmOk9LkTB4xeTjRs82g8=; Path=/; Domain=.discovercard.com; Secure,
     ACLOGIN=incntvtyp1=CBB; Expires=Sun, 17 Feb 2013 17:25:06 GMT; Path=/; Domain=.discovercard.com,
     ACHASH=1338528939; Expires=Sun, 17 Feb 2013 17:25:06 GMT; Path=/; Domain=.discovercard.com, dcuserid=***CLEARED***; Path=/; Domain=.discovercard.com,
     JSESSIONID=0001cT7y8RWiiQDuizJpy2gjQWw:16cfscb3m; Path=/',
    }
    ```

3. **Cookie Values:**
    ```python
    session.cookies['dcsession']
    # Output: 'E7dc4gmtmOk9LkTB4xeTjRs82g8='

    resp.cookies['dcsession']
    # Output: 'E7dc4gmtmOk9LkTB4xeTjRs82g8='
    ```

4. **Subsequent Request:**
    ```python
    resp = session.get('https://www.discovercard.com/cardmembersvcs/achome/homepage')
    ```

5. **Response Indicating Session Timeout:**
    The response indicates "session timed out or not established" because the cookie was sent with quotes:
    ```python
    resp.request.headers['Cookie']
    # Output: 'ACHASH=1338528939;  ACLOGIN="incntvtyp1=CBB";  JSESSIONID="0001cT7y8RWiiQDuizJpy2gjQWw:16cfscb3m";
    PMData="PMV3EKKwYWpRB0ZAh7NnXgngf+fGUH7/c6RfKfa7Hiv5v2h1S1iS4MjexZtrnrPMErcNR0eyCzoWUfNFrj6bUkqxR0aQ==";
    dcsession="E7dc4gmtmOk9LkTB4xeTjRs82g8=";  dcuserid=***CLEARED***;  dfsedskey=62689366;  v1st=6B2AF394DCD43A57'
    ```

The server considers the quoted cookie as different from the original, unquoted cookie, resulting in the session being invalidated. This issue is consistent and not intermittent, and it does not occur in web browsers like Chrome or Safari, which do not quote the cookie values.

**Possible Solutions:**
- Add "=" to `_LegalChars` in `monkeys.py`.
- Prevent `SimpleCookie` from quoting values.
- Use `BaseCookie` instead of `SimpleCookie`.
- Reconstruct the cookie header in the application before making subsequent requests.

This issue seems to be a bug that should be addressed in the main branch of `requests`. I am willing to contribute a fix but would like to hear opinions from Kenneth and others on the best approach.