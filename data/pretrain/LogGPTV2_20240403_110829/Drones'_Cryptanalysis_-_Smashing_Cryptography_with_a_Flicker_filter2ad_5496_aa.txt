title:Drones' Cryptanalysis - Smashing Cryptography with a Flicker
author:Ben Nassi and
Raz Ben-Netanel and
Adi Shamir and
Yuval Elovici
2019 IEEE Symposium on Security and Privacy
Drones’ Cryptanalysis - Smashing Cryptography
with a Flicker
Ben Nassi1, Raz Ben-Netanel1, Adi Shamir2, Yuval Elovici1
Video 1 - https://youtu.be/4icQwducz68 Video 2 - https://youtu.be/9PVaDpMsyQE
1 Ben-Gurion University of the Negev, 2 Weizmann Institute of Science
PI:EMAIL, PI:EMAIL, PI:EMAIL, and PI:EMAIL
ABSTRACT
In an "open skies" era in which drones ﬂy among us, a
new question arises: how can we tell whether a passing drone
is being used by its operator for a legitimate purpose (e.g.,
delivering pizza) or an illegitimate purpose (e.g., taking a peek
at a person showering in his/her own house)? Over the years,
many methods have been suggested to detect the presence
of a drone in a speciﬁc location, however since populated
areas are no longer off limits for drone ﬂights, the previously
suggested methods for detecting a privacy invasion attack
are irrelevant. In this paper, we present a new method that
can detect whether a speciﬁc POI (point of interest) is being
video streamed by a drone. We show that applying a periodic
physical stimulus on a target/victim being video streamed by a
drone causes a watermark to be added to the encrypted video
trafﬁc that is sent from the drone to its operator and how
this watermark can be detected using interception. Based on
this method, we present an algorithm for detecting a privacy
invasion attack. We analyze the performance of our algorithm
using four commercial drones (DJI Mavic Air, Parrot Bebop 2,
DJI Spark, and DJI Mavic Pro). We show how our method can
be used to (1) determine whether a detected FPV (ﬁrst-person
view) channel is being used to video stream a POI by a drone,
and (2) locate a spying drone in space; we also demonstrate
how the physical stimulus can be applied covertly. In addition,
we present a classiﬁcation algorithm that differentiates FPV
transmissions from other suspicious radio transmissions. We
implement this algorithm in a new invasion attack detection
system which we evaluate in two use cases (when the victim
is inside his/her house and when the victim is being tracked
by a drone while driving his/her car); our evaluation shows
that a privacy invasion attack can be detected by our system
in about 2-3 seconds.
I. INTRODUCTION
The proliferation of consumer drones over the last few years
[1], [2] has created a new privacy threat [3], [4], [5], [6], [7].
We are living in an era in which anyone with a drone equipped
with a video camera can use it to perform a privacy invasion
attack by ﬂying the drone in order to: detect a cheating
spouse [3], spy on people [4], [5] or celebrities [6], or video
stream a neighbor’s sunbathing daughter [7]. The president of
the United States signed a memo allowing drones to ﬂy in
Fig. 1. Legitimate and illegitimate use of a drone from the same location:
(a) A drone (framed in yellow), two people (framed in green), and a window
of an organization (framed in red), (b) Illegitimate use of the drone camera
to ﬁlm an organization, and (c) Legitimate use for selﬁe purposes.
populated/urban areas in 2017 [8] as part of the new "open
skies" policy, an act which is expected to make the detection
of privacy invasion attacks more challenging, as increasing
numbers of business and companies begin to adopt drones for
various legitimate purposes. Drones are now being used for
pizza delivery [9], the shipment of goods [10], ﬁlming [11],
and many other legitimate purposes [12], and their presence is
no longer restricted in populated areas. Given that, how can
we tell whether a drone that is passing near a house is
being used for a legitimate purpose (e.g., delivering pizza)
or an illegitimate purpose (e.g., taking a peek at a person
showering in his/her own house)?
Geofencing methods for drone detection based on the
drone’s location have been suggested in recent years [13], [14],
[15], [16], [17], [18], [19] as a means of detecting drones used
for malicious purposes in restricted areas (e.g., in order to drop
weapons and drugs into prison yards [20], smuggle goods and
drugs between countries over borders [21], and crash on the
White House lawn [22], [23]). However, the use of a traditional
geofencing method as a means of detecting a privacy invasion
attack in non-restricted areas (e.g., residential neighborhoods)
will fail to distinguish between the legitimate use of a nearby
drone and illegitimate use that invades a subject’s privacy, a
distinction that depends on the orientation of the drone’s video
camera rather than on the drone’s location. Differentiation
© 2019, Ben Nassi. Under license to IEEE.
DOI 10.1109/SP.2019.00051
1397
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:43:45 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 2.
(a) Secured FPV channel scheme, and (b) GOP structure - I, B, and P-frames.
between illegitimate and legitimate use of a drone can only be
accomplished by determining the exact POI (point of interest)
being streamed over the video channel and not according to
the drone’s location, as demonstrated in Figure 1.
The detection of a POI that is being video streamed by
a drone/unmanned aerial vehicle (UAV) from an FPV (ﬁrst-
person view) channel has interested armies and militaries
for many years. There are several known cases in which an
army managed to detect the streamed POI from an intercepted
unencrypted FPV channel of a rival’s drone [24], [25], [26],
[27]. However, there is only one known case in which a
video stream was extracted from encrypted UAV trafﬁc [28].
In general, detecting whether a target POI is being streamed
from an intercepted encrypted video stream, without prior
knowledge about the keys, remains a challenge.
In this paper, we present a new method that can detect
whether a speciﬁc POI is being video streamed by a drone.
We show that applying a periodic physical stimulus on a
target/victim that is being video streamed by a drone causes a
watermark to be added to the video trafﬁc that is sent from the
drone to its operator, a watermark that can be detected using
interception. Based on this method, we present algorithms
for (1) detecting a privacy invasion attack, and (2) locating
a spying drone in space. We evaluate their performance using
four commercial drones (DJI Mavic Air, Parrot Bebop 2, DJI
Spark, and DJI Mavic Pro) in two use cases (when the victim
is inside his/her house and when the victim is being tracked
by a drone while driving his/her car) and show that a privacy
invasion attack can be detected in about 2-3 seconds.
In this paper, we make the following contributions: First, we
(1) present an improved method for classifying a suspicious
transmission as an FPV channel and show that it can be used to
distinguish between a drone and other moving IoT devices in
just a few seconds. Then, we prove that the watermark added
after applying a periodic physical stimulus (ﬂickering) on an
object for just two seconds enables us to (2) detect a spying
drone (from a distance of 100 meters) and (3) identify its
GPS coordinates and altitude (using a single Wi-Fi receiver),
and can be used to (4) distinguish between the legitimate
use of a drone that does not invade a subject’s privacy and
illegitimate use, even (5) when the target is moving. In contrast
to the anti-drone market (expected to grow to a $1.85 billion
[29] by 2024) which offers very expensive hardware solutions
[30], we present a method that can be implemented using (6)
inexpensive devices: a single Wi-Fi receiver and LED strips. In
addition, we show how to (7) disguise the ﬂickering so it will
be invisible to the drone’s operator. Finally, we (8) shatter the
commonly held belief that the use of encryption to secure an
FPV channel prevents a passive eavesdropper from extracting
the POI that is being video streamed.
II. FIRST-PERSON VIEW CHANNEL
Modern drones provide video piloting capabilities (FPV
channel), in which a live video stream is sent from the drone to
the pilot (operator) on the ground, enabling the pilot to ﬂy the
drone as if he/she was onboard (instead of looking at the drone
from the pilot’s actual ground position). This allows a pilot to
control a drone using a remote controller, as demonstrated in
Figure 2a. A typical FPV channel is intended to be used for
two purposes: video streaming using data that is captured
by the drone’s camera and sent to the pilot’s controller, and
maneuvering and controlling the drone using commands sent
from the controller to the drone. In the following subsections,
we describe the stages of video streaming.
A. Video Encoding Algorithms
Video encoding [31], [32], [33], [34] begins with a raw
image captured from a camera. The camera converts analog
signals generated by striking photons into a digital image
format. Video is simply a series of such images generally
captured ﬁve to 120 times per second (referred to as frames
per second or FPS). The stream of raw digital data is then
processed by a video encoder in order to decrease the amount
of trafﬁc that is required to transmit a video stream. Video
encoders use two techniques to compress a video: intra-frame
coding and inter-frame coding.
Intra-frame coding creates an I-frame, a time periodic
reference frame that is strictly intra-coded. The receiver de-
codes an I-frame without additional information. Intra-frame
prediction exploits spatial redundancy, i.e., correlation among
pixels within a frame, by calculating prediction values through
extrapolation from already coded pixels, for effective delta
coding (the process is described in Appendix XIV). Inter-
frame coding exploits temporal redundancy by using a buffer
of neighboring frames that contains the last M number of
frames and creates a delta frame. A delta frame is a description
of a frame as a delta of another frame in the buffer. The
receiver decodes a delta frame using a previously received
reference frame. There are two main types of delta frames:
P-frames and B-frames. P-frames can use previous frames as
data in the decompressing process and are more compressible
1398
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:43:45 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I
PURE WI-FI DRONES
INFORMATION LEAKAGE FROM VBR STREAMS - RELATED WORK
TABLE II
Manufacturer
Models
DJI
Go-Pro
Parrot
Xiro
Husban
Spark
Phantom 3 SE
Karma
Bebop 2 FPV
Disco
Xplorer 2
Xplorer V
H501A X4
H507A
Wi-Fi
Video
Downlink
2.4/5.8 GHz
2.4/5.8 GHz
2.4 GHz
2.4/5.8 GHz
2.4/5.8 GHz
2.4 Ghz
2.4 GHz
2.4 Ghz
2.4 Ghz
Distance
(FCC
compliance)
4 KM
4 KM
3 KM
2 KM
2 KM
1 KM
0.5 KM
0.4 KM
0.3 KM
Weight
Price
300 g
1236 g
1006 g
500 g
750 g
1400 g
1202 g
500 g
450 g
$399
$555
$899
$499
$499
$1,499
$500
$209
$109
than I-frames. B-frames can use both previous and upcoming
frames for data reference to obtain the greatest amount of data
compression (the process is described in Appendix XIV).
The order in which I, B, and P-frames are arranged is
speciﬁed by a GOP (group of pictures) structure. A GOP is a
collection of successive pictures within a coded video stream.
It consists of two I-frames, one at the beginning and one at
the end. In the middle of the GOP structure, P and B-frames
are ordered periodically. An example of a GOP structure can
be seen in Figure 2b. Occasionally B-frames are not used in
real-time streaming in order to minimize delays.
Video compression techniques were integrated into the
MPEG-1 standard in the 1990s and boosted the transmission
rate from 1.5 Mbps (MPEG-1) to 150 Mbps (MPEG-4).
Naturally, integrating these techniques into the protocol creates
a variable bitrate (VBR) in the transmission of a video which
is inﬂuenced by changes between frames and the content of
the frame itself. A frame that can be represented as a set of
prediction blocks of a similar neighboring frame (that belongs
to the same GOP) requires a smaller amount of data to be
represented. On the other hand, a frame with less similarity
to other neighboring frames (e.g., as a result of the movement
of several objects) necessitates that a larger amount of data be
represented as a set of prediction blocks of other frames.
Transmitter
Purpose
Publication
Video
Hosting
Services
(Netﬂix,
YouTube,
etc..)
IPTV
IP
Camera
PC
Drone
Classify
video
stream
Classify
video stream
Lights on/off,
Hand movement
Detecting hidden
camera
Language extraction,
Phrase detection,
Transcripts
Detecting
streamed POI
Required
Stream
Duration
Analyzed
Protocols
Interception
Minutes
DASH
Internal
[43] - USENIX 07
[44] - ISC 10
[45] - USENIX 17
[46] - CODASPY 17
[47] - CCNC 16
[48] - GLOBECOM 08 Minutes
RTP
Internal
[49] - GLOBECOM 15
[50] - MobiSys 18
Immediate
RTP
Internal
[51] - USENIX 07
[52] - S&P 08
[53] - S&P 11
S&P 19
Varies
VoIP
Internal
2 seconds
RTP
External
In order to boost the ﬂight range of Wi-Fi FPV drones,
manufacturers sell a dedicated controller (without a screen)
that broadcasts/receives the signal with a much more powerful
transceiver (25-27 dB) than the one that is integrated into
smartphones/tablets (10-15 dB). When Wi-Fi communication
is sent from the drone to the smartphone via the dedicated
controller and vice versa, the controller is used as a proxy
between the drone and the smartphone (which is used mainly
as a screen). In this study, we focus on Wi-Fi FPV drones.
Table I lists various types of pure commercial Wi-Fi FPV
drones and their properties and prices.
Wi-Fi communication between the drone and the controller
(dedicated controller/smartphone) is sent over a secured access
point (WPA 2) that is opened by either the drone or the
controller (both parties are connected to the access point) and
follows the OSI model. The video that is captured by the drone
camera is streamed to its controller using real-time end-to-end
media streaming protocols (RTP) through UDP packets. The
last layer of encryption is applied on layer 2 of the OSI model
according to IEEE 802.11 standards.
B. Wi-Fi FPV
There are two types of technologies dominating the FPV
market: Wi-Fi FPV and analog FPV [35]. Wi-Fi FPV is, by far,
the most popular method used to include FPV in budget RC
drones (according to [35], [36]) because: (1) any Android/iOS
smartphone (or tablet) on the market can be used to operate
the drone; (2) the only additional hardware required is a Wi-
Fi FPV transmitter (which is connected to the camera of the
drone), instead of an additional controller with a screen that is
equipped with a dedicated radio transceiver which is required
by other types of FPV (e.g., 2.4/5.8 GHz analog FPV); (3)
drone manufacturers were able to boost the Wi-Fi FPV drone
ﬂight range to four kilometers using dedicated hardware [37],
[38], [39]; and (4) Wi-Fi FPV drones support 4K resolution.
Some types of drones are considered pure Wi-Fi FPV drones
(e.g., DJI Spark, DJI Phantom 3 SE, Parrot Bebop 2), and other
kinds contain Wi-Fi FPV along with their dedicated analog
FPV (e.g., DJI Mavic pro, DJI Mavic Air). Almost every FPV-
enabled drone selling for less than $100 uses Wi-Fi FPV [35],
and there are dozens of kinds of Wi-Fi FPV drones available
for purchase [40], [41], [42], ranging from $30 to hundreds
and thousands of dollars.
III. RELATED WORK
In this section, we describe: (1) methods that exploit in-
formation leakage of an encrypted video stream to extract
insights about the stream, and (2) methods for nearby drone
detection. In the area of video hosting services and IPTV,
several studies exploited variable bitrate (VBR) protocols of
video streams to classify a video stream sent from a video
hosting service (e.g., YouTube, Netﬂix , etc.) [45], [47], [46],
[43], [54], [44]. In the area of VoIP, several studies showed
that VBR leakage in encrypted VoIP communication can be
used for the detection of the speaker’s language [51] and
phrases [52], and to extract conversation transcripts [53]. In
terms of the attack model, the abovementioned studies [45],
[47], [46], [43], [54], [44], [51], [52], [53] require the attacker
to: (1) create a large dictionary of video streams that must
be classiﬁed before classiﬁcation is applied, (2) intercept a
few minutes of video stream in order to obtain good results,
and (3) compromise a computer in the targeted network in
order to capture network trafﬁc. Our study does not require
the abovementioned conditions, since we watermark a video
stream and observe the changes instead of comparing the
video stream to an existing dictionary. In addition, only a
1399
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:43:45 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 3.
(a) Detection scheme, and (b) Creating a Bitrate Signal using interception.
few seconds of interception are required to determine whether
the captured video stream is watermarked or not. In research
using IP cameras, a recent study analyzed VBR video streams
and showed that it is possible to detect hand movement and
ambient light changes [49]. Two studies which were performed
in parallel to our work showed a method to detect hidden
Wi-Fi cameras using probing [50] and trafﬁc analysis [55].
Table II summarizes studies on information leakage from VBR
streams.
In the area of drone detection, various methods were
introduced over the last few years to detect a nearby consumer
drone. These methods are widely used for geofencing purposes
such as detecting the presence of a drone in restricted areas
(e.g., drones that were used for purposes of dropping weapons
and other contraband into prison yards [20], smuggling goods
and drugs between countries over borders [21], and crashing
on the White House lawn [22], [23]). Active radar is a
traditional method of detecting drones, however the detection
of small consumer drones requires expensive high frequency
radar systems [13], in order to prevent drones from evading
such systems [23]. Two other methods suggested using passive
radar (i.e., a Wi-Fi receiver) to detect a consumer/civilian
drone controlled using Wi-Fi signals. The ﬁrst method [18],
[56] analyzes the protocol signatures of the Wi-Fi connection
between the drone and its controller. The second method [19]
analyzes the received signal strength (RSS) using a Wi-Fi re-
ceiver. Several studies suggested computer vision techniques
that use a camera to analyze motion cues [14], [15], in order
to detect a drone. However, these methods suffer from false
positive detection due to: (1) the increasing number of drone
models, and (2) similarities between the movements of drones
and birds [15]. Several studies used sound techniques to
analyze the noise of the rotors captured by microphones [16],
[15]. However, very expensive equipment is required in order
to address the challenges arising from the ambient noise and
the distance between the drone and the microphone [16]. A
hybrid method was suggested by [17], however this method is
very expensive to deploy. A recent study [30] from DEF CON
25 that reviewed 33 commercial products that implement the
abovementioned methods [13], [14], [15], [16], [17], [18], [19]
called these systems "overkill" due to their expensive price
compared to the price of a drone.
Populated areas are no longer considered restricted for
drones; in 2017, the president of the United States signed a
memo allowing drones to ﬂy in urban areas [8]. As a result,
applying geofencing methods as a means of detecting privacy
invasion attacks is irrelevant. All of the methods for drone
detection described in this section [13], [14], [15], [16], [17],
[18], [19] fail to distinguish between the act of taking a selﬁe
and spying on an organization, as demonstrated in Figure 1. In
contrast to the abovementioned drone detection mechanisms,
our method does not have this weakness. In this research, we
demonstrate a method for determining whether a speciﬁc POI
is being ﬁlmed, that comparing to other commercial drone
detection mechanisms does not require an expensive hardware.
IV. ADVERSARY MODEL & DETECTION SCHEME
There are four parties involved in a privacy invasion attack
perpetrated by drones: a malicious operator that controls the
drone, a target/victim, an interceptor, and a watermarker. In
this study, we deﬁne the malicious operator as any person
who uses a drone for the illegitimate purpose of streaming a
victim for any reason. We assume that the malicious operator
is using a Wi-Fi FPV drone and is located up to four kilometers
from the victim. We consider the target/victim any subject,
building, or facility that is of interest to a malicious operator
and being video streamed by the drone, and consider the
interceptor an automated model (described in Algorithm 1)
for privacy invasion attack detection that runs on a PC/lap-
top/smartphone with a connected RF scanner (e.g., network in-
terface card, software-deﬁned radio) and an adequate antenna
and ampliﬁer. The watermarker is a laptop/microcontroller
that controls a device that can launch a periodic physical
stimulus (ﬂickering) and turn it on and off. In practical de-
ployment, the victim/target may decide to activate the physical
stimulus (ﬂickering) only when needed, e.g., when a drone
is detected (based on the drone’s RF transmission) and it is
unclear whether the drone is being used to spy on the victim. In
addition, ﬂickering can be launched using a variety of devices,
including LED strips, smart bulbs, a portable projector, smart
ﬁlm, and other devices that can be programmed to change their
color and force pixel changes between consecutive frames.
The watermarker can be deployed inside or outside the target
house/car. In cases in which the watermarker is deployed
inside a house/car, infrared lighting can be used for ﬂickering,
so it will be invisible to people in the house/car (in Section IX
we show that a drone’s camera is sensitive to infrared lighting,
meaning that infrared ﬂickering can be used to watermark the
1400
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:43:45 UTC from IEEE Xplore.  Restrictions apply. 
FPV channel). In cases in which the watermarker is deployed
outside the target house/car, there is likely no need for an
additional device given existing visible programmable lighting
and its infrastructure. One example of this involves the use
of exterior building lights, commonly used these days for
decoration in many buildings (residential, ofﬁces, government)
and facilities (stadiums); often such existing lighting uses a
changing lighting pattern which can be leveraged.
if isFpvChannel(network) then
enableMonitoringMode()
suspiciousNetworkList = getNetworksInRange()
for (network : suspiciousNetworkList) do
Algorithm 1 Detecting Privacy Invasion Attack
1: procedure UNDERDETECTION?
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
// Draw stimulus frequency and duration
fs = getRandomFloat(1,6)
duration = getRandomFloat(1,10)*1000
// Store stimulus beginning time
time = currentTimeInMillis()
// Launch watermarker and determine spying
watermarker(fs,duration)
if isTargetFilmed?(network,fs,time) then
notifyVictim()
Figure 3a presents the proposed target detection scheme
and the parties involved. The interceptor’s model for detecting
a privacy invasion attack is presented in Algorithm 1. First,
suspicious transmissions are intercepted (line 3) and extracted
to a suspiciousNetworkList. For each suspicious transmission
network, we apply the Boolean function isFpvChannel
to
determine whether the network is an FPV channel (line 5).
If the network is classiﬁed as an FPV channel, the algorithm
triggers a periodic physical stimulus at a given frequency
for a given duration (in milliseconds) by calling the method
watermarker. Finally, the method isTargetFilmed? is called to
determine whether the FPV channel network is being used to
ﬁlm the target/victim, and a notiﬁcation is sent to the victim
upon detection of a privacy invasion attack (line 14).
V. INTERCEPTION & CREATING BITRATE SIGNAL
We used four types of drones in our experiments: two pure
Wi-Fi FPV drones (DJI Spark and Parrot Bebop 2) and two
drones which support Wi-Fi and analog FPV (DJI Mavic Pro
and DJI Mavic Air). These drones were among the top 10
most sold drones when this research was performed [57]. All
of the drones’ access points are secured by WPA 2, in order to
guarantee that the transmitted video stream is only available
for watching by the connected parties (controller).
We applied interception as follows: we used a laptop (Dell
Latitude 7480) that runs Kali Linux with a standard NIC (Intel
Dual Band Wireless-AC 8265 Wi-Fi) as the Wi-Fi receiver.
1) We enabled "monitor mode" on the Wi-Fi receiver (used
by the interceptor) using Airmon-ng [58].
2) We detected Wi-Fi networks within the range of the Wi-
Fi receiver used.
3) We used a Wi-Fi sniffer (Airodump-ng) [59] to intercept
packets of a speciﬁc Wi-Fi network.
interception,
We consider this process external
i.e., we
intercept a speciﬁc network’s transmissions without being
connected to the network. By intercepting packets this way,
we cannot observe encrypted layers of captured packets (since
we do not have the required key). The interception range can
be extended to detect transmissions from drones up to a few
kilometers from the victim using additional hardware such
as a dedicated antenna or ampliﬁer, however we did not use
additional hardware to extend the range in this study.
The process of creating an intercepted bitrate signal from
the captured packets is as follows:
4) From each captured packet we extracted the following
information: (a) Packet’s arrival time in nanoseconds - infor-
mation added to each captured packet by Airodump-ng, and
(b) Packet’s size - information that was extracted from the
unencrypted meta-data (PLCP header) from the data link layer.
5) Finally, we changed the signal’s resolution from nanosec-
onds to milliseconds by aggregating all packets captured in
each millisecond.
The two bash scripts that implement stages 1-3 and 4-5 are
presented in Appendix XV. In the rest of this paper we refer to
the output of this process as the intercepted bitrate signal.
The FFT graphs and spectrograms (power spectral density)
presented in this paper were extracted from the intercepted
bitrate signal. Figure 3b depicts this process.
VI. DETECTING FPV CHANNEL
In this section, we show how a suspicious transmission can
be classiﬁed as an FPV channel and how to extract details
about its quality. We present an improved passive radar method
that relies on two detection stages: (1) moving object detection,
and (2) video channel detection. Two additional beneﬁts from
using our method are that unlike similar passive radar methods,
we can distinguish between a drone and other moving IoT
devices, and we are able to extract the FPV channel quality
(FPS and resolution) as well.
A. Detecting Moving Objects
Passive radar methods for classifying an intercepted trans-
mission as an FPV channel were suggested by [18], [56],
[19]. These methods analyzed RSSI (received signal strength
indicator) measurements that are added by a static radio
receiver (e.g., NIC, SDR, etc.) in order to detect a moving
drone. These studies presented classiﬁcation methods based
on unique RSSI patterns that are the result of a drone’s
movement. However, these studies did not validate the quality
of their methods against other ubiquitous moving IoT devices
that transmit radio signals such as robotic vacuum cleaners,
smartwatches, smartphones, etc. In this paper, we show that
a drone’s RSSI behavior can be similar to other moving IoT
devices and argue that moving object detection is not adequate
for distinguishing a drone from other moving IoT devices.
1) Experimental Setup: In this experiment, a laptop was
placed on the ground and used as passive radar. One of the
authors walked a distance of 25 meters from the laptop for 100
seconds (at a very slow speed) with a smartphone (Galaxy S8)
in his pocket and a smartwatch (LG smartwatch Urbane 2nd
1401
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:43:45 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 4.
signal of a drone access point when the FPS was changed, and (c) Classiﬁcation results of Algorithm 2.
(a) Similar RSSI patterns obtained from smartwatch, smartphone, and drone, (b) A spectrogram (power spectral density) of the intercepted bitrate
Edition) on his wrist. After 100 seconds, he returned to the
laptop on the same path. We ﬂew a drone (DJI Mavic Pro), at
an altitude of two meters from the ground, along the same path
(the operator stood near the laptop). In addition, we intercepted
the trafﬁc sent by the smartwatch, smartphone, and drone via
the laptop (as described in Section V).