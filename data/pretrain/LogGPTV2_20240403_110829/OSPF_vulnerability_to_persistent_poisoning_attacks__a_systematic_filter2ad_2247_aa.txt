title:OSPF vulnerability to persistent poisoning attacks: a systematic
analysis
author:Gabi Nakibly and
Adi Sosnovich and
Eitan Menahem and
Ariel Waizel and
Yuval Elovici
OSPF Vulnerability to Persistent Poisoning Attacks:
A Systematic Analysis
Gabi Nakibly
CS Department
Technion - IIT
PI:EMAIL
Adi Sosnovich
CS Department
Technion - IIT
PI:EMAIL
∗
Eitan Menahem
Cyber Security Labs
Ben-Gurion University
PI:EMAIL
Ariel Waizel
Cyber Security Labs
Ben-Gurion University
PI:EMAIL
Yuval Elovici
Cyber Security Labs
Ben-Gurion University
PI:EMAIL
ABSTRACT
Open Shortest Path First (OSPF) is one of the most widely
deployed interior gateway routing protocols on the Internet.
The most common attack vector against OSPF is spooﬁng of
routing advertisements on behalf of a remote router. OSPF
employs a self-defense “ﬁght-back” mechanism that quickly
reverts the eﬀects of such attacks. Nonetheless, some attacks
that evade the ﬁght-back mechanism have been discovered,
making it possible to persistently falsify routing advertise-
ments. This type of attacks are the most serious threat
to a routing protocol since they allow an attacker to gain
persistent control over how traﬃc is routed throughout the
network. This shows that despite its maturity, the OSPF
speciﬁcation is not without security ﬂaws and may have still-
unknown vulnerabilities. In this work we systematically ana-
lyze – manually and by formal veriﬁcation – the OSPF speci-
ﬁcation for additional vulnerabilities in the ﬁght-back mech-
anism. Our analysis uncovered a fundamental security ﬂaw
in OSPF that allows a simple means for an attacker to evade
the ﬁght-back mechanism. Most major router vendors ac-
knowledged the existence of this vulnerability in their prod-
ucts. Fortunately, our analysis strongly indicates that no
other vulnerabilities in the ﬁght-back mechanism are likely
to exist.
Categories and Subject Descriptors
C.2.2 [Computer Systems Organization]: Computer Com-
munications Networks—Network Protocols, Routing Proto-
cols; C.2.0 [Computer Systems Organization]: Gen-
eral—Security and Protection; D.2.4 [Software]: Software
Engineering—Software Veriﬁcation, Model Checking
∗Eitan is currently at IBM’s Cyber Security Center of Ex-
cellence, Israel.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. To copy otherwise, to republish, to post on servers or to redistribute
to lists, requires prior speciﬁc permission and/or a fee.
ACSAC December 08 - 12 2014 New Orleans, Louisiana USA
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
Copyright 2014 ACM 978-1-4503-3005-3/14/12
http://dx.doi.org/10.1145/2664243.2664278 ...$15.00
General Terms
Security, Veriﬁcation
Keywords
Routing Security, OSPF, Formal Veriﬁcation
1.
INTRODUCTION
Open Shortest Path First (OSPF) is one of the most pop-
ular interior gateway routing protocols on the Internet. Its
aim is to allow routers within a single autonomous system
(AS) to construct their routing tables, while dynamically
adapting to changes in the autonomous system’s topology.
OSPF is currently used within many autonomous systems
on the Internet. It was developed and standardized by the
IETF’s OSPF working group. This work is concerned with
version 2 of the protocol [15], which was speciﬁcally designed
for IPv4 networks; hence, it is essentially the only version
used today. Version 3 [8] has been standardized to accommo-
date IPv6 networks but has seen little deployment to date.
OSPF is a link-state routing protocol, which means that
each router advertises its links (and their costs) to neighbor-
ing routers and networks. These advertisements are termed
Link State Advertisements (LSAs). The cost of a link is
usually statically conﬁgured by the network administrator.
Each LSA is ﬂooded throughout the AS, where a router re-
ceiving an LSA from one of its neighbors resends it to all its
other neighbors. Each router compiles an identical database
of the LSAs of all the routers in the AS and uses it to ob-
tain a complete view of the AS topology. It can thus employ
Dijkstra’s algorithm [9] to calculate the least cost paths be-
tween it and every other advertised network or router. As
a result, a next hop is derived for each destination, thus
forming the router’s routing table.
Figure 1 illustrates the ﬂooding of an LSA throughout the
AS while the routers build their LSA database to construct
their view of the AS topology.
The most common attack vector against OSPF is LSA
falsiﬁcation, in which an attacker advertises an LSA with
false link information. This allows an attacker to poison
the routers’ view of the AS topology, thereby aﬀecting their
routing tables. The simplest attack of this type is to falsify
the LSA of a router the attacker already controls. However,
such an attack may have limited eﬀectiveness since only one
Net-1
Ra
Rb LSA
Rb
R3
LSA DB:
Net-1
Net-1
Ra
Rb
2
2
3
1
1
3
1
Figure 1: An example of LSA ﬂooding (taken from
[16])
LSA is falsiﬁed, thereby poisoning a small part of the AS
topology – its immediate neighborhood. It would thus be
diﬃcult for an attacker to gain real control over the routing
tables of other routers.
A much more powerful attack is falsifying an LSA on be-
half of routers the attacker does not control (e.g., [19]). Us-
ing this technique, the attacker can poison a large portion
of the view routers have of the AS topology, thereby chang-
ing their routing tables so that traﬃc ﬂow is controlled by
the attacker. Since the false LSA is ﬂooded throughout the
AS, it will eventually be received by the router on whose
behalf the false LSA has been advertised. Once that router
receives this LSA, it immediately triggers what is known as
the “ﬁght-back” mechanism. This mechanism advertises a
newer instance of the LSA, which cancels out the false one,
thereby reversing the eﬀects of the attack. Hence, although
such attacks cause instability and performance degradation
to the AS, they do not have a lasting eﬀect.
However, were a vulnerability to be found in the speciﬁ-
cation of the ﬁght-back mechanism that would allow it to
be circumvented, an attacker could persistently control the
routing tables of all the routers in the AS. The attacker
could thus gain complete control over the routing of traf-
ﬁc within the AS. The attacker could, for example, divert
remote traﬃc to pass through a router or a network the at-
tacker has access to in order to eavesdrop on the traﬃc or
alter it. Furthermore, such an attack could also aﬀect the
routing of external traﬃc of other ASes routed through the
current AS. In some cases, a well-crafted attack on a high
volume transit AS may have a devastating eﬀect on the net-
work connectivity of many ASes throughout the Internet.
Two such vulnerabilities in the design of the ﬁght-back
mechanism were indeed discovered in the last few years.
The details are given in Section 4. These discoveries show
that the OSPF speciﬁcation, despite its maturity, is still not
without security weaknesses. We believe that a systematic
and thorough analysis is called for in order to vet out other
possible vulnerabilities.
In this work we present the results of a systematic search
to uncover vulnerabilities in the OSPF speciﬁcation that
would allow an attacker to evade the ﬁght-back mechanism.
The search was conducted in two stages: manual analysis
followed by a formal veriﬁcation. The manual stage began
by characterizing the general properties a vulnerability must
have to allow an attacker to successfully evade the ﬁght-
Vendor
Brocade
Check Point
Cisco
D-Link
IBM
Juniper
NEC
Oracle
Advisory
TSB 2013-165
sk94490
cisco-sa-20130801-lsaospf
DLINK-2013-VUL0213
N1010309
PSN-2013-08-987
NV13-006
CPU-Oct2013
Table 1: The major vulnerable vendors and the ad-
visories they published.
back mechanism. This was followed by a targeted manual
analysis of the speciﬁcation to ﬁnd such properties. This
analysis uncovered a new security weakness in the design of
the ﬁght-back mechanism. In the second stage we aim to
formally validate that no other ﬁght-back evasion vulnera-
bilities exist in OSPF. We formally modeled the ﬁght-back
mechanism. Then we used a model checker to search for the
same properties we found in the manual stage. The model
checker was able to ﬁnd all the previously known vulnera-
bilities as well as the newly discovered one. Moreover, no
other vulnerabilities were found. This gives a strong indi-
cation (albeit not a complete proof) that there are no other
weaknesses in the OSPF speciﬁcation that allow an attacker
to evade the ﬁght-back mechanism.
The newly discovered attack. The weakness uncov-
ered by our analysis turns out to be even more powerful and
simpler than the previously discovered vulnerabilities (see
comparison in Section 5.1). We have successfully veriﬁed the
vulnerability on Cisco and RouterOS (a software router). It
has been reported to CERT/CC, who relayed it to all known
OSPF router vendors in the market. Consequently, many
router vendors acknowledged the existence of this vulnera-
bility in their products. In most cases, the ﬂaw was found
in their entire line of OSPF-related products. The aﬀected
vendors are some of the most popular on the Internet. Ta-
ble 1 lists the major aﬀected vendors and the advisories they
published. All these vendors released appropriate patches.
The vulnerability is identiﬁed by CVE-2013-0149.
The paper is organized as follows. Section 2 gives a brief
overview of the OSPF speciﬁcation and principal function-
ality. Section 3 discusses the threat model we consider. Sec-
tion 4 reviews known attacks that exploit vulnerabilities in
the design of OSPF’s ﬁght-back mechanism. Section 5 dis-
cusses our manual analysis, presents the newly found vulner-
ability, evaluates its severity, and proposes mitigation mea-
sures. Section 6 reviews our formal veriﬁcation analysis and
its results. Finally, Section 7 concludes the paper.
2. OSPF BASICS
We begin with a brief overview of the OSPF protocol as
speciﬁed in [15]. OSPF is a link state routing protocol: each
router advertises an LSA containing the links to neighboring
networks and routers and their associated costs. Each LSA
is ﬂooded throughout the AS. Routers construct a complete
view of the AS topology by compiling all the LSAs they
receive into a single database. From this global view routers
compute their routing tables. Each router is identiﬁed by
a parameter called router ID. A router ID is usually the IP
address of one of the router’s interfaces.
• Length – The length in bytes of the LSA.
The standard speciﬁes (Sec. 12.1 of [15]) that an LSA is
identiﬁed by the three ﬁelds: LS type, Link State ID, and
Advertising Router.
2.1 OSPF’s Security Strengths
We next discuss the dominant security strengths of OSPF
and explain why it is diﬃcult for an attacker to persistently
and signiﬁcantly poison the routing table of a router it does
not control. In order for an attacker to substantially alter
a router’s routing table, the attacker needs to poison large
portions of the LSA database of that router. Since an LSA
holds only a small part of the AS topology – only a single
router and the links to its immediate neighbors – an attacker
needs to falsify LSAs of multiple routers. In most cases the
attacker have no control over the routers it wishes to falsify
their LSAs.
In the following we list the properties of OSPF that make
it impossible, in the general case, for an attacker to falsify
LSAs of routers it does not control.
1. Flooding – Every LSA is ﬂooded throughout the AS. In
particular, this means that a false LSA advertised by
the attacker will eventually be received by the router
on whose behalf the false LSA has been advertised.
2. ﬁght-back – Once a router receives a false instance of
its own LSA, it immediately advertises a newer in-
stance which cancels out the false one.
The ﬁght-back mechanism, combined with the ﬂooding
property, should prevent an attacker from persistently and
stealthily falsifying an LSA of a router the attacker does not
control. Due to the ﬂooding property we are assured that in
the general case the ﬁght-back LSA will be received by all
routers in the AS.
3. THREAT MODEL
We adopt the common threat model found in the litera-
ture ([18, 19, 11, 16]). This model assumes the attacker has
the ability to send LSAs to at least one valid router in the
AS and that router processes them as valid LSAs. This as-
sumption can be trivially achieved by an insider, namely an
attacker who gained control over just a single router in the
AS. We assume nothing about the location of the compro-
mised router. In particular, we do not assume the attacker
compromised a core or a centrally located router.
The attacker can gain control of a router, for example, by