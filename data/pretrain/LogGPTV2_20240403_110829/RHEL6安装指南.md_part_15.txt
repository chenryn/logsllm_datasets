使用 [**802.1x 安全性**]{.guilabel}标签配置 802.1X
的*使用端口的网络访问控制*（PNAC）。选择 [**在这个连接中使用 802.1X
安全性**]{.guilabel} 启用访问控制，然后指定网络详情。配置选项包括：
:::
::: variablelist
[[**验证**]{.guilabel}]{.term}
:   ::: para
    选择以下验证方法之一：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        用于*传输层安全性*的 [**TLS**]{.guilabel}
        :::
    -   ::: para
        用于*管道传输层安全性*的 [**管道 TLS**]{.guilabel}，也称 TTLS
        或者 EAP-TTLS
        :::
    -   ::: para
        用于*保护的扩展验证协议*的 [**保护的 EAP（PEAP）**]{.guilabel}
        :::
    :::
[[**身份识别**]{.guilabel}]{.term}
:   ::: para
    提供这台服务器的身份识别。
    :::
[[**用户证书**]{.guilabel}]{.term}
:   ::: para
    浏览内嵌在*特异编码规则*（DER）或者*增强保密邮件*（PEM）中的个人
    X.509 证书文件。
    :::
[[**CA 证书**]{.guilabel}]{.term}
:   ::: para
    浏览内嵌在*特异编码规则*（DER）或者*增强保密邮件*（PEM）中的个人
    X.509 *证书验证*。
    :::
[[**私钥**]{.guilabel}]{.term}
:   ::: para
    浏览内嵌在*特异编码规则*（DER）、*增强保密邮件*（PEM）或者*个人信息交换语法标准*（PKCS#12）中的*私钥*文件。
    :::
[[**私钥密码**]{.guilabel}]{.term}
:   ::: para
    在 [**私钥**]{.guilabel} 字段为私钥指定的密码。选择
    [**显示密码**]{.guilabel}，则可在输入密码时看到它。
    :::
:::
::: figure
[⁠]{#ch-guimode-x86.html#idm139817135386176}
::: figure-contents
::: mediaobject
![802.1x
安全性标签](images/netconfig/network-connections-802.1x.png){width="444"}
:::
:::
**图 9.27. 802.1x 安全性标签**
:::
:::
::: section
::: titlepage
### [⁠]{#ch-guimode-x86.html#idm139817214225712}9.7.1.4. IPv4 设置标签 {.title}
:::
::: para
使用 [**IPv4 设置标签**]{.guilabel} 为之前选择的网络连接配置 IPv4 参数。
:::
::: para
使用
[**方法**]{.guilabel}下拉菜单指定系统应该从网络中运行的*动态主机配置协议*（DHCP）服务中获取那些设置。请在以下选项中选择：
:::
::: variablelist
[[**自动（DHCP）**]{.guilabel}]{.term}
:   ::: para
    使用网络中的 DHCP 服务配置 IPv4 参数。
    :::
[[**只使用自动（DHCP）地址**]{.guilabel}]{.term}
:   ::: para
    使用该网络中的 DHCP 服务配置 IPv4
    地址、子网掩码和网关地址，但必须手动配置 DNS 服务器和搜索域。
    :::
[[**手动**]{.guilabel}]{.term}
:   ::: para
    手动为静态配置配置 IPv4 参数。
    :::
[[**只使用本地链接**]{.guilabel}]{.term}
:   ::: para
    为该接口分配 169.254/16 范围内的*本地链接*地址。
    :::
[[**与其他计算机共享**]{.guilabel}。]{.term}
:   ::: para
    将该系统配置为为其他计算机提供网络访问。为该接口分配 10.42.x.1/24
    范围内的地址，启动 DHCP 服务器和 DNS
    服务器，将该接口连接到使用*网络地址转换*（NAT）系统的默认网络连接中。
    :::
[[**禁用**]{.guilabel}]{.term}
:   ::: para
    这个连接禁用 IPv4。
    :::
:::
::: para
如果选择的方法需要提供手动参数，请为这个接口输入 IP
地址详情，子网掩码并在 [**地址**]{.guilabel} 字段输入网关。请使用
[**添加**]{.guibutton} 和 [**删除**]{.guibutton}
按钮添加或者删除地址。在 [**DNS servers**]{.guilabel}
字段输入用逗号隔开的 DNS 服务器列表，并在 [**搜索域**]{.guilabel}
字段输入用逗号分开的域列表，包括要包含在名称服务器搜索的所有域。
:::
::: para
另外，还可在 [**DHCP 客户端 ID**]{.guilabel}
字段输入这个网络连接的名称。这个名称在子网中必须是唯一的。如果为某个连接分配一个有意义的
DHCP 客户端 ID，会在进行网络问题故障排除时方便识别这个连接。
:::
::: para
取消选择 [**需要 IPv4 地址完成此连接**]{.guilabel} 复选框，可让系统在
IPv4 配置失败而 IPv6 配置成功时，在启用 IPv6 的网络中建立这个连接。
:::
::: figure
[⁠]{#ch-guimode-x86.html#idm139817118290112}
::: figure-contents
::: mediaobject
![IPv4
设置标签](images/netconfig/network-connections-ipv4-manual.png){width="444"}
:::
:::
**图 9.28. IPv4 设置标签**
:::
::: section
::: titlepage
#### [⁠]{#ch-guimode-x86.html#idm139817189179040}9.7.1.4.1. 编辑 IPv4 路由 {.title}
:::
::: para
Red Hat Enterprise Linux 配置了很多自动使用某个设备 IP
地址的路由。要编辑附加路由，请点击 [**路由**]{.guibutton}
按钮。此时会出现 [**编辑 IPv4 路由**]{.guilabel} 对话框。
:::
::: figure
[⁠]{#ch-guimode-x86.html#idm139817136470720}
::: figure-contents
::: mediaobject
![编辑 IPv4
路由对话框](images/netconfig/network-connections-ipv4-manual-routes.png){width="444"}
:::
:::
**图 9.29. 编辑 IPv4 路由对话框**
:::
::: para
点击 [**添加**]{.guibutton} 为新的静态路由添加 IP
地址、子网掩码、网关地址以及单位。
:::
::: para
选择 [**忽略自动获得的路由**]{.guibutton}
让接口只使用在此为其指定的路由。
:::
::: para
选择 [**只将这个连接用于其网络中的资源**]{.guibutton}
来将这个连接限制在只能用于本地网络。
:::
:::
:::
::: section
::: titlepage
### [⁠]{#ch-guimode-x86.html#idm139817190855120}9.7.1.5. IPv6 设置标签 {.title}
:::
::: para
使用 [**IPv6 设置标签**]{.guilabel} 标签为之前选择的网络连接配置 IPv6
参数。
:::
::: para
使用
[**方法**]{.guilabel}下拉菜单指定系统应该从网络中运行的*动态主机配置协议*（DHCP）服务中获取那些设置。请在以下选项中选择：
:::
::: variablelist
[[**忽略**]{.guilabel}]{.term}
:   ::: para
    这个连接忽略 IPv6。
    :::
[[**自动**]{.guilabel}]{.term}
:   ::: para
    [**NetworkManager**]{.application} 使用 *Router
    Advertisement（RA）*来创建自动的、无状态的配置。
    :::
[[**自动，只有地址**]{.guilabel}]{.term}
:   ::: para
    [**NetworkManager**]{.application} 使用 RA
    创建自动的、无状态的配置，但 DNS
    服务器和搜索域将被忽略且必须手动配置。
    :::
[[**自动，只使用 DHCP**]{.guilabel}]{.term}
:   ::: para
    [**NetworkManager**]{.application} 不使用 RA，但从直接从 DHCPv6
    请求信息以创建有状态的配置。
    :::
[[**手动**]{.guilabel}]{.term}
:   ::: para
    为静态配置手动配置 IPv6 参数。
    :::
[[**只用于本地链接**]{.guilabel}]{.term}
:   ::: para
    为这个接口分配前缀为 fe80::/10 的*本地链接*地址。
    :::
:::
::: para
如果选择的方法需要提供手动参数，请为这个接口输入 IP
地址详情，子网掩码并在 [**地址**]{.guilabel} 字段输入网关。请使用
[**添加**]{.guibutton} 和 [**删除**]{.guibutton}
按钮添加或者删除地址。在 [**DNS servers**]{.guilabel}
字段输入用逗号隔开的 DNS 服务器列表，并在 [**搜索域**]{.guilabel}
字段输入用逗号分开的域列表，包括要包含在名称服务器搜索的所有域。
:::
::: para
另外，还可在 [**DHCP 客户端 ID**]{.guilabel}
字段输入这个网络连接的名称。这个名称在子网中必须是唯一的。如果为某个连接分配一个有意义的
DHCP 客户端 ID，会在进行网络问题故障排除时方便识别这个连接。
:::
::: para
取消选择 [**需要为这个连接分配 IPv6 地址完成**]{.guilabel}
复选框，允许系统可在 IPv6 配置设备而 IPv4 配置成功时，在启用 IPv4
的网络中生成这个连接。
:::
::: figure
[⁠]{#ch-guimode-x86.html#idm139817200476320}
::: figure-contents
::: mediaobject
![IPv6
设置标签](images/netconfig/network-connections-ipv6-ignore.png){width="444"}
:::
:::
**图 9.30. IPv6 设置标签**
:::
::: section
::: titlepage
#### [⁠]{#ch-guimode-x86.html#idm139817112387008}9.7.1.5.1. 编辑 IPv6 路由 {.title}
:::
::: para
Red Hat Enterprise Linux 配置了很多自动使用某个设备 IP
地址的路由。要编辑附加路由，请点击 [**路由**]{.guibutton}
按钮。此时会出现 [**编辑 IPv6 理由**]{.guilabel} 对话框。
:::
::: figure
[⁠]{#ch-guimode-x86.html#idm139817135612656}
::: figure-contents
::: mediaobject
![编辑 IPv6
路由对话框](images/netconfig/network-connections-ipv6-manual-routes.png){width="444"}
:::
:::
**图 9.31. 编辑 IPv6 路由对话框**
:::
::: para
点击 [**添加**]{.guibutton} 为新的静态路由添加 IP
地址、子网掩码、网关地址和单位。
:::
::: para
选择 [**这个连接只用于其网络中的资源**]{.guibutton}
将这个连接限制在只用于本地网络。
:::
:::
:::
::: section
::: titlepage
### [⁠]{#ch-guimode-x86.html#restart-network-device-x86}9.7.1.6. 重启网络设备 {.title}
:::
::: para
如果重新配置安装期间已在使用的网络，则必须在
[**anaconda**]{.application}
中断开连接并重新连接设备以使改变生效。[**Anaconda**]{.application}
使用*接口配置（ifcfg）*文件和 [**NetworkManager**]{.application}
通讯。当设备的 ifcfg 文件被删除时，设备将断开连接；而当 ifcfg
文件恢复时，只要设置了
`ONBOOT=yes`{.literal}，就将重新连接。关于接口配置文件的更多信息，请参考
 中的*《Red Hat
Enterprise Linux 6 部署指南》*。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    按 [**Ctrl**]{.keycap}+[**Alt**]{.keycap}+[**F2**]{.keycap}
    切换到虚拟终端 `tty2`{.systemitem}。
    :::
2.  ::: para
    将接口配置文件移到一个临时位置：
    :::
    ``` screen
    mv /etc/sysconfig/network-scripts/ifcfg-device_name /tmp
    ```
    ::: para
    其中 *device_name*
    是刚才重新配置的设备。例如，`ifcfg-eth0`{.filename} 是
    `eth0`{.systemitem} 的 ifcfg 文件。
    :::
    ::: para
    设备现在在 [**anaconda**]{.application} 里已经断开连接了。
    :::
3.  ::: para
    在 [**vi**]{.application} 编辑器里打开接口配置文件：
    :::
    ``` screen
    vi /tmp/ifcfg-device_name
    ```
4.  ::: para
    验证接口配置文件包含一行
    `ONBOOT=yes`{.literal}。如果这个文件没有包含这行内容，请添加并保存文件。
    :::
5.  ::: para
    退出 [**vi**]{.application} 编辑器。
    :::
6.  ::: para
    将接口配置文件移回 `/etc/sysconfig/network-scripts/`{.filename}
    目录：
    :::