A
(|L
(5,8)
(4,6)
|) (# of controlled partners and compromised readers)
(7,10) (8,12) (9,14) (10,15)(11,16)(12,18)(13,19)(14,20)
(6,9)
 TPR   
 FPR   
 R−TAIL   
 R−SYNCH   
PROC
(0,0)
(1,2)
(2,4)
(3,5)
|,|V
A
A
(|L
(5,8)
(4,6)
|) (# of controlled partners and compromised readers)
(7,10) (8,12) (9,14) (10,15)(11,16)(12,18)(13,19)(14,20)
(6,9)
(a)
(b)
Figure 11. Detection rate (TPR) and false(cid:173)alarm rate (FPR) as a function of detection threshold DT for
robust 1bit(cid:173)tailing (R-TAIL), robust synchronization (R-SYNCH), and process(cid:173)based (PROC) schemes
in the baseline scenario (Section 6.1), but considering adversary A2 that controls |LA| locations
(partners) and compromises |VA| readers. Graphs show rates for (a) the highest detection rate
(DT = 1) and (b) the lowest false(cid:173)alarm rate (F P R = 0).
process and location information in tag events (attributes S
and L). In particular, it veriﬁes: (1) That a product shipped
from location A (event ei with S = shipping and L = A)
is received at some location B (ei+1 with S = receiving
and L = B), or (2) that a product received at location A
(ei with S = receving and L = A) is then shipped from
the same location (ei+1 with S = shipping and L = A).
If neither condition is met, an alarm is raised. Unlike tail-
ing and SYNCH, this approach involves no modiﬁcation of
tag memory or attribute extension to tag events. Like tail-
ing, though, tag events are stored in local databases and col-
lected later for rule evaluation and clone detection. We refer
to this scheme as process-based (or PROC).
As in Section 6, we consider EPC C1G2 tags operating
on 16-bit data blocks. R-TAIL thus uses a tail and symbol
size of 12 symbols and 1 bit respectively, while SYNCH uses
a 16-bit synchronized value (nominally 32 bits in [24]).
8.1 Security and Robustness
Figure 10(a) shows clone-detection and false-alarm rates
(TPR and FPR) across schemes (R-TAIL, SYNCH, and
PROC), as a function of detection threshold DT in the base-
line scenario (Section 6.1). R-TAIL and SYNCH achieve
comparable TPRs, but both somewhat outperform PROC
(93% vs. 89% for DT = 1). R-TAIL, however, achieves
substantially lower FPR than SYNCH and PROC: 0.95% vs.
35% and 32% respectively (DT = 1).
Like TAIL, SYNCH is affected by misevents and mis-
writes, which lead to false alarms.
In contrast, it lacks
linkage between non-time-consecutive tag observations (as
provided by the pointer in tailing), which implies no mit-
igation for misevents. We can introduce a miswrite ﬂag
to mitigate miswrites, however, yielding a reﬁned scheme
that we call robust synchronization (R-SYNCH). As in R-
TAIL, the two-rule system of PROC can be relaxed to al-
low em missing events; for example, a pair of events ei
and ei+1 having, respectively, (L = A, S = receiving)
and (L = B, S = receiving) will not raise an alarm if an
event with (L = A, S = shipping) is assumed to be miss-
ing between them. This would mitigate both misevents and
misreads leading to false alarms. We call this new scheme
robust process-based (R-PROC). Figure 10(b) shows the ef-
fect of robustness in these new schemes. It yields a lower
FPR in the synchronization scheme of Lehtonen et al. (16%
vs. 35% for DT = 1), although still higher than for tail-
ing (16% vs. 0.95% for DT = 1); the impact on TPR
Table 3. Comparison between detection schemes. FN and FP stand for False Negatives and False
Positives respectively. Tag speeds are nominal (see Section 7 for discussion).
Baseline scenario (Section 6.1) Misreads Misevents Miswrites
(TPR, FPR)
(TPR, FPR)
impact
impact
impact
Event-size
overhead
Tag memory
Tag speed
[bits]
[tags/s]
PROC [36]
(89%, 32%)
(34%, 0%)
FN, FP
FN, FP
R-PROC
(38%, 0.95%)
(22%, 0%)
SYNCH [24]
(94%, 35%)
(38%, 0%)
R-SYNCH (ofﬂine)
(93%, 16%)
(37%, 0%)
R-TAIL
(93%, 0.95%)
(80%, 0%)
FN
FN
FN
FN
FN
FN, FP
FN, FP
FN
-
-
FP
FN
FN
0%
0%
14%
14%
10%
-
-
16
16
16
24.4–1838
24.4–1838
3.3–4.5
9.6–44.5
9.6–44.5
is negligible. In contrast, for the process-based scheme of
Zanetti et al., robustness lowers both FPR and TPR, such
that PROC presents better tradeoffs than R-PROC; e.g., for
F P R = 0%, R-PROC achieves T P R = 22% compared
with T P R = 34% for PROC. Thus, we henceforth use R-
SYNCH and PROC in our experimental comparisons.
Figure 10(c) compares the three schemes R-TAIL, R-
SYNCH, and PROC in a highly adverse scenario, with
the simulation settings yielding pessimal performance in
Section 6: High misread, miswrite, and misevent prob-
abilities (pmr = pmw = pme = N (10%, 2%)), long
transport time (Ttr = N (6, 1) days), short stocking time
(Tst = N (1, 0.25) days), counterfeit products injected at
retailers, and a 4-level quaternary tree. Here,
tailing
achieves the best performance, with a better FPR than R-
SYNCH (2.8% vs. 25% for DT = 1) and globally better
TPR and FPR than PROC.
Figure 11(a) explores a stronger adversary A2 (as in Sec-
tion 6.2 above).
It shows the TPR and FPR as a func-
tion of the number |LA| of adversarially controlled supply-
chain locations (partners) and the number |VA| of compro-
mised readers; here, we choose DT = 1, which yields
the highest detection rates. Tailing has the lowest TPR
(e.g., 27%, vs. 42% for PROC and 35% for R-SYNCH for
(|LA| = 7, |VA| = 10)—but uniformly with substantially
lower FPR (0.95% vs. 17% and 31%). A more balanced
comparison is achieved with a normalized FPR, for which
tailing achieves the highest TPRs. Figure 11(b) compares
the three schemes for FPR = 0%.
8.2 Cost Comparison
All three schemes impose asymptotic storage, computa-
tion, and communication costs linear in the number of trace
events n evaluated by the detector. Storage costs are a func-
tion of the number of tag observations, as is communication
between readers and the back-end detector, while compu-
tation is dominated by the execution of rule evaluation se-
quentially over events.
Synchronization requires extending each event with old
and fresh synchronization values, 32 bits in total, while tail-
ing requires 3 bytes (16 bits for the tail and pointer, 8 bits
for the ﬂags), leading to event size increases of 14% and
10% respectively (see Section 7).
Unlike tailing and synchronization, PROC requires no
tag writes, and thus has no impact on tag processing speeds.
In an EPC-compliant implementation, it can reach the nom-
inal values of 24.4/1838 tags/s. Tailing and synchroniza-
tion require tag writes. Synchronization further requires
online interaction with the centralized entity, imposing net-
work latency of about 200 ms [24] and limiting process-
ing speed to a mere 4.5 tags/s.
It is possible, though, to
modify R-SYNCH (to resemble R-TAIL) so that readers gen-
erate random values and detection occurs ofﬂine. Both
schemes then have a nominal top tag processing speed of
about 44.5 tags/s. (Higher performance is likely in practice:
See Section 7.)
8.3 Summary
Table 3 summarizes our key results and presents the dis-
tinct vulnerabilities of the various schemes to misreads, mi-
sevents, and miswrites, further illuminating their respective
performance. R-TAIL outperforms other approaches, with a
high detection rate for a relatively low false-alarm rate, and
a distinctly high detection rate for FPR = 0%.
9 Related Work
Anti-counterfeiting solutions based on track-and-trace
data within RFID-enabled supply chains were initially dis-
cussed by Kuh et al. [18] and Staake et al. [33], who high-
lighted the negative impact on counterfeit detection of in-
complete traces when partners do not record or share track-
ing data. More recently, several solutions based on ver-
ifying the (in)correctness of event traces and tag behav-
iors have been proposed [3, 9, 17, 22–24, 27, 36]. These
solutions rely on intrusion detection, classifying activity
based on pre-deﬁned models of suspicious patterns (misuse)
and normal tag/product behaviors (anomaly). Mirowski
et al. [27] apply statistical anomaly detection to identify
RFID tag ownership changes indicative of theft or cloning
of tags based on reader operations, tag and reader IDs, and
event timestamps. Similarly, Lehtonen et al. [22, 23] ex-
plore anomaly and anomaly/misuse intrusion detection, ac-
commodating incomplete traces caused by tag misreads and
partners not sharing tag observations. Kerschbaum and Oer-
tel [17] propose a pattern-matching approach to detect illicit
transactions between supply-chain partners. Blass et al. [3]
and Elkhiyaoui et al. [9] leverage tag memory to store ver-
iﬁable tag paths (visited readers). While all of these mech-
anisms are suitable for low-cost (EPC C1G2) tags, they re-
quire training or deep knowledge of supply-chain structures
and product ﬂows, causing fragility in the face of supply-
chain changes, product recalls, and product misdeliveries.
Moreover, only Lehtonen et al. [22,23] consider incomplete
(but still not faulty) traces.
Closest to our work are Lehtonen et al. [24] and Zanetti
et al. [36]. These schemes do not rely on pre-deﬁned infor-
mation about chain structures and product ﬂows, but have
the limitations demonstrated in Section 8. Thus tailing
proves the most effective for typical supply-chain scenarios
in which inconsistent information (due to blind zones and
reader failures) complicates clone detection. Additionally,
other solutions do not consider adversarial abilities beyond
injection of cloned tags (e.g., reader compromise).
Other approaches to detect/prevent
tag cloning in-
clude physical-layer ﬁngerprinting techniques, authentica-
tion based on low-cost primitives or cryptographic ones,
and Physical Unclonable Functions (PUFs). As shown
in [29, 35], EPC C1G2 tags can be ﬁngerprinted with
high accuracy over the air at the physical layer, without
added tag hardware. Such ﬁngerprinting is sensitive to
environmental factors, though, limiting its use in supply-
chain scenarios. Low-cost authentication protocols that ex-
ploit native EPC C1G2 computation have also been pro-
posed [5,6,19], but follow-up work has identiﬁed signiﬁcant
weaknesses [26, 30, 31]. Use of native EPC C1G2 storage
and access control is a complementary approach [16], but
is vulnerable to eavesdropping attacks. PUFs [13] are low-
complexity (hundreds of gates), purpose-built circuits that
exploit manufacturing variations for authentication. Sev-
eral low-cost PUF-based security solutions have been pro-
posed [8, 21, 34], but recent attacks highlight the need for
better understanding of tradeoffs among PUF circuit size,
security level, and stability [32]. Several solutions leverag-
ing symmetric- and public-key cryptography have been pro-
posed for RFID tags [2]. High-security crypto primitives,
though, are prohibitively expensive for low-cost tags today,
requiring a few thousand gate-equivalents for symmetric-
key primitives as in, e.g., [7], and more for public-key prim-
itives, e.g., [14]. Additionally, most of these cryptographic
solutions introduce non-trivial key-management challenges.
10 Conclusion
As the use of RFID as an anti-counterfeiting technology
in supply chains grows, cloning attacks against tags, exacer-
bated by blind zones, are a pressing systemic vulnerability.
We have shown that tailing is a simple and a practical coun-
termeasure and is effective even across blind zones, where
the centralized detector lacks visibility into tag emissions.
Tailing outperforms previous anti-cloning schemes. In
a 4-level supply-chain simulation, for instance, we ob-
serve detection rates (93%) equal to the next best approach
(synchronization), but with much better false positive rates
(0.95% vs. 16%). In addition, tailing requires limited tag re-
sources and no extra infrastructure resources and introduces
minimal overhead on supply-chain processes.
We believe that tailing is a potent new tool meriting ex-
ploration in other settings. For instance, tailing may help
detect cloning of post-supply-chain goods carried by con-
sumers, such as luxury goods. (An interesting new RFID
privacy challenge then arises: Abuse of tails as “cookies.”)
Similarly, tailing might supplement cryptographic and other
anti-cloning protections. RFID-enabled payment devices
and travel documents, both shown vulnerable to cloning at-
tacks [4, 15, 20], are attractive potential beneﬁciaries.
References
[1] http://www.impinj.com/.
[2] http://www.avoine.net/.
[3] E.-O. Blass, K. Elkhiyaoui, and R. Molva. Tracker: Security
and privacy for RFID-based supply chains. In NDSS, 2011.
[4] S. Bono, M. Green, A. Stubbleﬁeld, A. Juels, A. Rubin, and
M. Szydlo. Security analysis of a cryptographically-enabled
RFID device. In USENIX Security Symposium, 2005.
[5] C.-L. Chen and Y.-Y. Deng. Conformation of EPC Class 1
Generation 2 standards RFID system with mutual authenti-
cation and privacy protection. Engineering Applications of
Artiﬁcial Intelligence, 22, 2009.
[6] H.-Y. Chien and C.-H. Chen. Mutual authentication proto-
col for RFID conforming to EPC Class 1 Generation 2 stan-
dards. Computer Standards & Interfaces, 29, 2007.
[7] M. David. Lightweight cryptography for passive RFID tags.
PhD thesis, Aalborg University, 2011.
[8] S. Devadas, E. Suh, S. Paral, R. Sowell, T. Ziola, and
V. Khandelwal. Design and implementation of PUF-based
”unclonable” RFID ICs for anti-counterfeiting and security
applications. In IEEE RFID, 2008.
[9] K. Elkhiyaoui, E.-O. Blass, and R. Molva. CHECKER: On-
site checking in RFID-based supply chains. In ACM WiSec,
2012.
[10] EPCglobal. EPCIS Standard v. 1.0.1. Standard, 2007.
[11] EPCglobal. UHF Class 1 Gen 2 standard v. 1.2.0. Standard,
2008.
[12] F. Gandino, B. Montrucchio, and M. Rebaudengo. Tam-
pering in RFID: A survey on risks and defenses. Mobile
Networks and Applications, 15(4), 2010.
[13] B. Gassend, D. Clarke, M. van Dijk, and S. Devadas. Silicon
physical random functions. In ACM CCS, 2002.
[14] D. Hein, J. Wolkerstorfer, and N. Felber. ECC is ready for
RFID - A proof in silicon. In SAC, 2008.
[15] T. S. Heydt-Benjamin, D. V. Bailey, K. Fu, A. Juels, and
T. O’Hare. Vulnerabilities in ﬁrst-generation RFID-enabled
credit cards. In FC, 2007.
[16] A. Juels. Strengthing EPC tags against cloning.
In ACM
WiSe, 2005.
[17] F. Kerschbaum and N. Oertel. Privacy-preserving pattern
matching for anomaly detection in RFID anti-counterfeiting.
In RFIDSec, 2010.
[18] R. Koh, E. W. Schuster, I. Chackrabarti, and A. Bellman. Se-
curing the pharmaceutical supply chain. White paper, Auto-
ID Labs, MIT, 2003.
[19] D. M. Konidala, Z. Kim, and K. Kim. A simple and cost-
effective RFID tag-reader mutual authentication scheme. In
RFIDSec, 2007.
[20] K. Koscher, A. Juels, V. Brajkovic, and T. Kohno. EPC
RFID tag security weaknesses and defenses: Passport cards,
enhanced drivers licenses, and beyond. In ACM CCS, 2009.
[21] L. Kulseng, Z. Yu, Y. Wei, and Y. Guan. Lightweight mutual
authentication and ownership transfer for RFID systems. In
IEEE INFOCOM, 2010.
[22] M. Lehtonen, F. Michahelles, and E. Fleisch. Probabilistic
approach for location-based authentication. In IWSSI, 2007.
[23] M. Lehtonen, F. Michahelles, and E. Fleisch. How to detect
cloned tags in a reliable way from incomplete RFID traces.
In IEEE RFID, 2009.
[24] M. Lehtonen, D. Ostojic, A. Ilic, and F. Michahelles. Se-
curing RFID systems by detecting tag cloning. In Pervasive,
2009.
[25] T. Mackey and B. Liang. The global counterfeit drug trade:
Patient safety and public health risks. Journal of Pharma-
ceutical Sciences, 100(11), 2011.
[26] J. Melia-Segui,
J. Garcia-Alfaro,
and J. Herrera-
Joancomarti. A practical implementation attack on weak
pseudorandom number generator designs for EPC Gen2
tags. Wireless Personal Communications, 59(1), 2011.
[27] L. Mirowski and J. Hartnett. Deckard: A system to detect
change of RFID tag ownership. IJCSNS, 7(7), 2007.
[28] Y. Oren and A. Shamir. Remote password extraction from
RFID tags. IEEE Transaction on Computers, 56(9), 2007.
[29] S. C. G. Periaswamy, D. R. Thompson, and J. Di. Finger-
printing RFID tags. IEEE TDSC, 8(6), 2011.
[30] P. Peris-Lopez, J. C. Hernandez-Castro, J. M. Estevez-
Tapiador, and J. C. A. van der Lubbe. Cryptanalysis of
an EPC C1G2 standard compliant authentication protocol.
Engineering Applications of Artiﬁcial Intelligence, 24(6),
2011.
[31] P. Peris-Lopez, T. Li, T.-L. Lim, J. C. Hernandez-Castro, and
J. M. Estevez-Tapiador. Vulnerability analysis of a mutual
authentication scheme under the EPC Class-1 Generation-2
standard. In RFIDSec, 2008.
[32] U. R¨uhrmair, F. Sehnke, J. S¨olter, G. Dror, S. Devadas, and
J. Schmidhuber. Modeling attacks on physical unclonable
functions. In ACM CCS, 2010.
[33] T. Staake, F. Thiesse, and E. Fleisch. Extending the EPC
In
network: The potential of RFID in anti-counterfeiting.
ACM SAC, 2005.
[34] P. Tuyls and L. Batina. RFID-tags for anti-counterfeiting. In
CT-RSA, 2006.
[35] D. Zanetti, B. Danev, and S. Capkun. Physical-layer identi-
ﬁcation of UHF RFID tags. In ACM Mobicom, 2010.
[36] D. Zanetti, L. Fellmann, and S. Capkun. Privacy-preserving
In IEEE
clone detection for RFID-enabled supply chains.
RFID, 2010.