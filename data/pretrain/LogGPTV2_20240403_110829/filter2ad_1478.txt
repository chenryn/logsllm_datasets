# Workshop on Compiler and Architectural Techniques for Application Reliability and Security (CATARS)

## Authors
- Karthik Pattabiraman, University of Illinois at Urbana-Champaign
  - Address: 1308 W Main St, Urbana, IL 61801
  - Email: [PI:EMAIL]
- Shuo Chen, Microsoft Research
  - Address: One Microsoft Way, Redmond, WA 98052
  - Email: shuochen@microsoft.com
- Zbigniew Kalbarczyk, University of Illinois at Urbana-Champaign
  - Address: 1308 W Main St, Urbana, IL 61801
  - Email: kalbar@crhc.uiuc.edu

## Conference
- International Conference on Dependable Systems & Networks
- Location: Anchorage, Alaska
- Dates: June 24-27, 2008

## Abstract
Compiler and architectural techniques play a vital role in enhancing the dependability of applications. Traditionally, these techniques have focused on performance enhancement. However, as reliability and security become increasingly important constraints in application design, this trend is shifting. The goal of the workshop is to provide a common platform for researchers in the dependability community to interact with those in the compiler and computer architecture communities, fostering effective cross-pollination of ideas.

## Themes, Goals, and Objectives
As computer systems grow more complex, ensuring their reliable and secure operation becomes increasingly challenging, especially at the application level due to the diversity of software platforms and the demand for new features. Manual addition of ad-hoc techniques to ensure fault and attack tolerance can be error-prone and may overlook critical reliability and security vulnerabilities, leading to catastrophic failures and attacks. Compiler and architectural techniques can automate the detection and recovery from errors and attacks in applications.

### Goal
The primary goal of this workshop is to facilitate interaction between researchers in the dependability and security communities and those in the compiler and computer architecture fields, promoting the exchange of ideas. Additionally, the workshop will emphasize the importance of designing for reliability and security in the computer architecture and compiler communities, where the traditional focus has been on performance enhancement.

### Objectives
- **Define Core Issues**: Identify key dependability issues that can be effectively addressed by the compiler and architecture communities to improve application resilience. For example, "How do we implement compiler transformations that are safe in the presence of transient and permanent hardware errors?" or "How do we ensure that microprocessors provide transparent error containment and recovery to applications?"
- **Leverage Advances**: Discuss how recent advances in computer architecture (e.g., multi-core platforms, reconfigurable computing) and compiler technology (e.g., dynamic code generation, proof-carrying code transformations) can enhance application dependability.
- **Evaluation Metrics**: Develop methods for evaluating compiler and architectural techniques in terms of their costs and the dependability benefits they provide to applications, creating a "ready reckoner" for engineers.

## List of Topics
The workshop is open to all researchers working on dependability, security, computer architecture, and compilers. We encourage submissions on, but not limited to, the following topics:
- Architectural support for diagnosing and understanding application failures/compromises
- Automated derivation and runtime enforcement of application invariants
- Automated generation of fault-tolerant and attack-tolerant programs
- Compiler and runtime techniques for developing distributed, fault-tolerant programs
- Compile-time techniques for detecting programming errors and security violations
- Design and implementation of reconfigurable hardware for executing application checks
- Memory organization schemes for detecting and recovering from errors/attacks
- Metrics for assessing application vulnerability to errors and security attacks
- Micro-architectural techniques for runtime error detection and containment
- Novel application-level code and data duplication techniques (in hardware or software)
- Novel programming language constructs for building fault-tolerant applications
- Reliability and security issues in multi-core processors and their mitigation
- Software obfuscation and hardware tamper-resistance
- Static analysis to ensure conformance to reliability and security properties
- Verifiable byte-code/intermediate language and secure runtime infrastructures

## Organizers
- **Program Co-Chairs**: Karthik Pattabiraman, Shuo Chen, Zbigniew Kalbarczyk
- **Program Committee**:
  - Todd Austin, University of Michigan (Ann Arbor)
  - Emery Berger, University of Massachusetts (Amherst)
  - Michael Hicks, University of Maryland (College Park)
  - Subhasish Mitra, Stanford University
  - Shubu Mukherjee, Intel Corporation
  - Onur Mutlu, Microsoft Research (Redmond)
  - Priya Narasimhan, Carnegie Mellon University
  - Sanjay Patel, University of Illinois (Urbana-Champaign)
  - Josyula Rao, IBM T J Watson Research Center
  - Zhendong Su, University of California (Davis)
  - Timothy Tsai, Hitachi Corporation
  - Dongyan Xu, Purdue University (West Lafayette)
  - Jun Xu, Google Inc

## Submission Information
- **Regular Contributions**: 5-6 pages, refereed based on novelty and technical content.
- **Position Papers and Work-in-Progress Reports**: Refereed based on novelty and ability to generate discussion.

## Workshop Format
- **Day-Long Series of Presentations**: Regular papers (20 minutes including Q&A), short papers (5 minutes, optional poster presentation).
- **Panel Discussion**: Featuring industry experts in dependable and secure computing, soliciting their views on advancing the state of the art in dependable and secure computing.

---

This revised version aims to provide a clear, coherent, and professional structure for the workshop description.