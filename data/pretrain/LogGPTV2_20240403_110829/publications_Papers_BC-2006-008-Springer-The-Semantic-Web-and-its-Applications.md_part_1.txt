Chapter 1
THE SEMANTIC WEB AND ITS APPLICATIONS
Jorge Cardoso1 and Amit Sheth2
1Department of Mathematics and Engineering,University of Madeira, 9000-390, Funchal,
Portugal – PI:EMAIL
2Large Scale Distributed Information Systems (LSDIS) Lab, Department of Computer Science,
University of Georgia, GA, USA. – PI:EMAIL
1. INTRODUCTION
Currently, the World Wide Web is primarily composed of
documents written in HTML (Hyper Text Markup Language), a
language that is useful for publishing information. HTML is a set of
“markup” symbols contained in a Web page intended for display on a
Web browser. During the first decade of its existence, most of the
information on the Web is designed only for human consumption.
Humans can read Web pages and understand them, but their inherent
meaning is not shown in a way that allows their interpretation by
computers
The information on the Web can be defined in a way that it can be
used by computers not only for display purposes, but also for
interoperability and integration between systems and applications.
One way to enable machine-to-machine exchange and automated
processing is to provide the information in such a way that computers
can understand it. This is precisely the objective of the semantic Web
– to make possible the processing of Web information by computers.
“The Semantic Web is not a separate Web but an extension of the
current one, in which information is given well-defined meaning,
better enabling computers and people to work in cooperation.”
2 Semantic Web Processes and Their Applications
(Berners-Lee, Hendler et al. 2001). The next generation of the Web
will combine existing Web technologies with knowledge
representation formalisms (Grau 2004)
The Semantic Web was made through incremental changes, by
bringing machine-readable descriptions to the data and documents
already on the Web. As already stated, the Web was originally a vast
set of static Web pages linked together. Currently the Web is in
evolution, as illustrated in Figure 1-1, and different approaches are
being sought to come up with the solutions to add semantics to Web
resources. On the left side of Figure 1-1, a graph representation of the
syntactic Web is given. Resources are linked together forming the
Web. There is no distinction between resources or the links that
connect resources. To give meaning to resources and links, new
standards and languages are being investigated and developed. The
rules and descriptive information made available by these languages
allow to characterize individually and precisely the type of resources
in the Web and the relationships between resources, as illustrated in
the right side of Figure 1-1.
Figure 1-1. Evolution of the Web
Due to the widespread importance of integration and
interoperability for intra- and inter-business processes, the research
community has tackled this problem and developed semantic
standards such as the Resource Description Framework (RDF) (RDF
2002) and the Web Ontology Language (OWL) (OWL 2004). RDF
and OWL standards enable the Web to be a global infrastructure for
sharing both documents and data, which make searching and reusing
information easier and more reliable as well. RDF is the W3C
standard for creating descriptions of information, describing their
semantics and reasoning (Lassila and Swick 1999), especially
information available on the World Wide Web. What XML is for
The Semantic Web and its Applications 3
syntax, RDF is for semantics. Both share a unified model and together
provide a framework for developing Web applications that deal with
data and semantics (Patel-Schneider and Siméon 2002). Relationships
are at the heart of semantics (Sheth, Arpinar et al. 2002). Perhaps the
most important characteristic of RDF is that it elevates relationships to
first class object, providing the first representational basis for giving
semantic description. RDF evolved from MCF designed by Guha,
which was motivated for representing metadata. Hence RDF is also
well suited for representing metadata for Web resources. OWL
provides a language for defining structured Web-based ontologies
which allows a richer integration and interoperability of data among
communities and domains.
According to TopQuadrant (TopQuadrant 2005), a consulting firm
that specializes in Semantic Web technologies, the market for
semantic technologies will grow at an annual growth rate of between
60% and 70% until 2010. It will grow from its current size of US$2
billion to US$63 billion. According to William Ruh of CISCO, before
the end of 2004, RDF was applied under the covers of well over 100
identified products and over 25 information service providers.
Existing well known applications that add Semantic Web capabilities
include Adobe’s Extensible Metadata Platform, RDF of annotation of
most of the product data that Amazon receives or digital media
content a top mobile carrier receives, and well known infrastructure
support include Creative Commons DF based annotations of license
information and Oracle’s support for RDF data.
Semantic software is being experimentally used by banks to help
them to comply with the U.S. government’s Patriot Act (the Patriot
Act requires banks to track and account for the customers with whom
they do transactions), by European police force to follow crime
patterns, and by telephone service providers to create applications that
provides information about pay-per-view movies (Lee 2005; Sheth
2005). In addition to investment banks, the Metropolitan Life
Insurance Company, the U.S. Department of Defense and the
Tennessee Valley Authority have also used Semantic software to
integrate enterprise data to comply with federal regulations.
4 Semantic Web Processes and Their Applications
2. SEMIOTICS – SYNTAX, SEMANTICS, AND
PRAGMATICS
Semiotics is the general science of signs – such as icons, images,
objects, tokens, and symbols – and how their meaning is transmitted
and understood. A sign is generally defined as something that stands
for something else.
The human language is a particular case of semiotics. A language
is a system of conventional spoken or written symbols by means of
which people communicate. Formal languages, such as logic, are also
based on symbols and, therefore, are also studied by semiotics.
Compared to the human language, formal languages have a precise
construction rules for the syntax and semantics of programs. Semiotics
is composed of three fundamental components: syntax, semantics, and
pragmatics (Peirce 1960). These components are illustrated in Figure
1-2.
Figure 1-2. Semiotics and its components
Syntax. It deals with the formal or structural relations between
signs (or tokens) and the production of new ones. For example,
grammatical syntax is the study of which sequences of symbols are
well formed according to the recursive rules of grammar. The set of
allowed reserved words, their parameters, and the correct word order
in an expression is called the syntax of a language. In computer
science, if a program is syntactically correct according to its rules of
syntax, then the compiler will validate the syntax and will not generate
error messages. This, however, does not ensure that the program is
semantically correct (i.e., return results as expected).
For example, when XML is used to achieve interoperability and
integration of information systems, the data exchanged between
systems must follow a precise syntax. If the rules of the syntax are not
followed, a syntactical error occurs. For example, using a tag spelled
 instead of , omitting a closing tag, or not following
the syntax of a XML Schema (XMLSchema 2004) will generate a
The Semantic Web and its Applications 5
syntactical error. It should be noticed, that syntax does not include the
study of things such as “truth” and “meaning.”
Semantics. It is the study of relations between the system of signs
(such as words, phrases, and sentences) and their meanings. As it can
be seen by this definition, the objective of semantics is totally
different from the objective of syntax. The former concerns to what
something means while the latter pertains to the formal
structure/patterns in which something is expressed. Semantics are
distinct from the concept of ontology (ontologies will be discusses
later in this chapter). While the former is about the use of a word, the
latter is related to the nature of the entity or domain referenced by the
word. One important and interesting question in semantics research is
if the meaning is established by looking at the neighborhood in the
ontology that the word is part of or if the meaning is already contained
in the word itself. Second important and interesting question is the
formal representation language to capture the semantics such that it is
machine processable with consistent interpretation. Third important
question is the expressiveness of this representation language that
balances computability versus capturing the true richness of the real
world that is being modeled. Correspondingly, the following three
forms of semantics have been defined in (Sheth, Ramakrishnan et al.
2005):
• Implicit semantics. "This type of semantics refers to the kind that
is implicit in data and that is not represented explicitly in any
machine processable syntax."
• Formal semantics. "Semantics that are represented in some well-
formed syntactic form (governed by syntax rules) is referred to as
formal semantics."
• Powerful (soft) semantics. "Usually, efforts related to formal
semantics have involved limiting expressiveness to allow for
acceptable computational characteristics. Since most KR
mechanisms and the Relational Data Model are based on set
theory, the ability to represent and utilize knowledge that is
imprecise, uncertain, partially true, and approximate is lacking, at
least in the base/standard models. Representing and utilizing these
types of more powerful knowledge is, in our opinion, critical to the
success of the Semantic Web. Soft computing has explored these
types of powerful semantics. We deem these powerful (soft)
6 Semantic Web Processes and Their Applications
semantics as distinguished, albeit not distinct from or orthogonal to
formal and implicit semantics."
Pragmatics. It is the study of natural language understanding, and
specifically the study of how context influences the interpretation of
meaning. Pragmatics is interested predominantly in utterances, made
up of sentences, and usually in the context of conversations
(Wikipedia 2005). The context may include any social, environmental,
and psychological factors. It includes the study or relations among
signs, their meanings, and users of the signs, and the repercussions of
sign interpretations for the interpreters in the environment. While
semantics deals with the meaning of signs, pragmatics deals with the
origin, uses, and effects of signs within the content, context, or
behavior in which they occur.
3. SEMANTIC HETEROGENEITY ON THE
WEB
Problems that might arise due to heterogeneity of the data in the
Web are already well known within the distributed database systems
community (e. g. (Kim and Seo 1991), (Kashyap and Sheth 1996)).
Heterogeneity occurs when there is a disagreement about the meaning,
interpretation, or intended use of the same or related data. As with
distributed database systems, four types of information heterogeneity
(Sheth 1998; Ouskel and Sheth 1999) may arise in the Web: system
heterogeneity, syntactic heterogeneity, structural or schematic
heterogeneity, and semantic heterogeneity.
• System heterogeneity: Applications and data may reside in
different hardware platforms and operating systems.
• Syntactic heterogeneity: Information sources may use different
representations and encodings for data. Syntactic interoperability
can be achieved when compatible forms of encoding and access
protocols are used to allow information systems to communicate.
• Structural heterogeneity: Different information systems store
their data in different document layouts and formats, data models,
data structures and schemas.
• Semantic heterogeneity: The meaning of the data can be
expressed in different ways leading to heterogeneity. Semantic
The Semantic Web and its Applications 7
heterogeneity considers the content of an information item and its
intended meaning.
Approaches to the problems of semantic heterogeneity should
equip heterogeneous, autonomous, and distributed software systems
with the ability to share and exchange information in a semantically
consistent way (Sheth 1999). In the representation languages to
support the Semantic Web approach, as recommended by the W3C,
XML supports ability to deal with syntactic heterogeneity; XML,
XPath, and XQuery provide ability to transcend certain structural
heterogeneity, while RDF and OWL (or other ontology representation
languages) provide a key approach to deal with semantic
heterogeneity.
One solution is for developers to write code which translates
between the terminologies of pairs of systems. When the requirement
is for a small number of systems to interoperate, this may be a useful
solution. However, this solution does not scale as the development
costs increase as more systems are added and the degree of semantic
heterogeneity increases. Assuming the development of bidirectional
translators, i.e. translators that enable the interoperation of system A
to system B and from system B to system A, to allow the
interoperability of ‘n’ systems we need (n-1)+(n-2)+…+1 translators.
Figure 1-3 shows the translators required to integrate 6 systems.
A
C B
Translator
D F
E
Figure 1-3. Using translators to resolve semantic heterogeneity
A more suitable solution to the problem of semantic heterogeneity
is to rely on the technological foundations of the semantic Web. More
8 Semantic Web Processes and Their Applications
precisely, to semantically define the meaning of the terminology of
each distributed system data using the concepts present in a shared
ontology to make clear the relationships and differences between
concepts.
A
C B
Shared
Ontology
D F
E
Figure 1-4. Using a shared ontology to resolve semantic heterogeneity
Figure 1-4 shows a possible architecture that achieves
interoperability using the semantic Web and ontologies. This solution
only requires the development of ‘n’ links to interconnect systems.
4. METADATA
Metadata can be defined as “data about data.” The goal of
incorporating metadata into data sources is to enable the end-user to
find items and contextually relevant information. Data sources are
generally heterogeneous and can be unstructured, semi-structured, and
structured. In the semantic Web, a data source is typically a document,
such as a Web page, containing textual content or data. Of course,
other types of resources may also include metadata information, such
as records from a digital library.
Metadata can exist in several levels. These “levels of metadata” are
not mutually exclusive; on the contrary, the accumulative combination
of each type of metadata provides a multi-faceted representation of the
data including information about its syntax, structure, and semantic
context (Fisher and Sheth 2004).
The process of attaching semantic metadata to a document or any
piece of content is called semantic. Metadata extraction is the process
of identifying metadata for that document or content. This process
could be manual, semiautomatic (e.g., (Handschuh, Staab et al. 2002))
The Semantic Web and its Applications 9
or fully automatically (e.g., Semantic Enhancement Engine
(Hammond, Sheth et al. 2002) or SemTag (Dill, Eiron et al. 2003)).
Semantic applications are created by exploiting metadata and
ontologies with associated knowledgebase (Sheth 2004). In essence, in
the semantic Web, documents are marked up with semantic metadata
which is machine-understandable about the human-readable content of
documents. Other approaches, which are less expressive, consist on
using purely syntactic or structural metadata.
4.1 Syntactic Metadata
The simplest form of metadata is syntactic metadata. It describes
non-contextual information about content and provides very general
information, such as the document’s size, location, or date of creation.
Syntactic metadata attaches labels or tags to data. The following
example shows syntactic metadata describing a document:
 = “report.pdf”
 = “30-09-2005”
 = “15-10-2005”
 = 2048
Most documents have some degree of syntactic metadata. E-mail
headers provide author, recipient, date, and subject information. While
these headers provide very little or no contextual understanding of
what the document says or implies (assuming value of author is
treated as a string or ordered sets of words, rather than its full
semantics involving modeling of author as a person authoring a
document, etc.), this information is useful for certain applications. For
example, a mail client may constantly monitor incoming e-mail to find
documents, related to a particular subject, the user is interested in.
4.2 Structural Metadata