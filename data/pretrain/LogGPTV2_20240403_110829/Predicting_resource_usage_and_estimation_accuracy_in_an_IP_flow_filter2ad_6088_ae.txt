Rs ≈ τ
−1
min{f (ni, ti; N, T ), bi/z}
(14)
(cid:3)
i
6.2.2 Estimating Resources for Aggregation
In TAP, the smart sampled raw ﬂows are aggregated over a time
interval τ (e.g. over one hour). The key used to aggregate may be
the just the raw ﬂow key, or it may be coarser, e.g. a BGP routing
preﬁx. We want to estimate the number of aggregate ﬂows gener-
ated over the interval τ . Thus we want to determine the number of
unique keys (at the desired aggregation level) presented by ﬂows
that survive smart sampling during the period of length τ .
A given original ﬂow i produced on average f (ni, ti; N, T ) mea-
sured ﬂows with the same key. Suppose we can calculate the prob-
ability qi that at least one of these ﬂows survive smart sampling.
Then the average rate at which aggregate ﬂows are formed is
(cid:7)
(cid:3)
(cid:8)
(cid:9)
Rs,agg = τ
−1
1 −
(1 − qi)
κ
i∈Iκ
(15)
where κ ranges over the set of aggregate ﬂow keys present in the
raw ﬂows, and Iκ is the set of raw ﬂows whose key matches κ.
Instead of calculating qi exactly, we estimate it as follows. If
fi  z for which there will in fact be
no sampling error.
(cid:4)
(cid:4)
We now show that individual components of the variance also
have close upper bounds. We can identify in the variance of The-
orem 1(ii) the component due to smart sampling (the ﬁrst term)
and that due to packet sampling (the last term). The correspond-
ing standard errors can be compared with their respective bounds
(N − 1)bmax/X. We do this for N = 100 and
z = 106 Bytes in Figure 5. Note that the bounds are individu-
ally tight: in each case there are variance points that lie on their
associated bounds.
z/X and
7.3 Application Volumes of Flow Records
A breakdown of trafﬁc by application was conducted on the basis
of well known application ports, as speciﬁed via RFC 3232[19]),
and other identiﬁcation made on the basis of speciﬁc application
knowledge. 2,267 different such applications were identiﬁed. Six
of the applications these each accounted for more than 1% of the
byte total of the trafﬁc; the percentage for each of these applica-
tions, along with the percentage bytes not attributable to an appli-
cation, are displayed in Table 3. Observe that one p2p application
constitutes nearly half the trafﬁc volume.
application
kazaa
gnutella
napster
www
unidentiﬁed
vrml-multi-use
directx-gaming
1
byte vol
30.29
46.6%
68.08
5.9%
5.4%
12.65
2.9% 703.64
2.6% 190.97
1.2%
70.80
1.1% 113.25
Flows per MByte, given N
103
1.03
2.08
1.95
6.35
3.00
1.46
2.48
10
12.18
36.20
11.24
264.33
60.60
29.07
47.55
102
5.67
11.21
8.69
49.07
15.00
8.45
14.70
104
0.12
0.23
0.22
0.70
0.37
0.16
0.28
Table 3: Break down of percentage of byte volume, and by
application, for applications accounting for at least 1% of to-
tal bytes. Predicted volume of raw ﬂows, according to (10), as
function of sampling period.
Using (10) we estimated the number of raw sampled NetFlow
records that would be produced per Mbyte of original trafﬁc, as a
function of the sampling period. For the applications considered,
clearly a considerable reduction in the rate of generation of Net-
Flow records is obtained through packet sampling. There is consid-
erable variation in in the normalized rate of ﬂow records amongst
the applications: note the large rate for www trafﬁc. This is at-
tributable to the fact that users may be expected to run predom-
inantly web clients rather than servers; their inbound trafﬁc will
comprise mainly http requests and ack packets for transfers. Web
ﬂows outbound to users are expected to have a lower rate of bytes
per ﬂow, while the packets per ﬂow would be roughly the same. For
the largest component, kazaa, we expect less asymmetry between
inbound and outbound trafﬁc: independent studies on similar links
have found rough parity between inbound and outbound data vol-
umes. However, it is not clear the extent to which this is due to
individual users acting as bona ﬁde peers, i.e. both downloading
and serving content, as opposed to a balance in the aggregate be-
havior. These results underline the importance of understanding the
application mix when estimate the likely volume of ﬂow records.
7.4 Volume of Smart Sampled Flow Records
We compare the upper bound of Theorem 3 on the rate of pro-
duction of smart sampled records with the corresponding estimate
of (14). Figure 6 shows this comparison as a function of the sam-
pling threshold z for the ﬁve cases of the sampling period for N
from 1 to 10, 000. The bounds we obtained using the total byte
rate B of the raw unsampled ﬂow records, and applying (10) to
determine the rate R of sampled raw ﬂows for each N. Note that
in an application, this number might be available directly from a
collection of sampled NetFlow records. The curves were obtained
by applying (14) to the raw unsampled ﬂow statistics. For each
curve the bounds essentially join projections of the initial and ﬁnal
portions. For large z the curves merge, since then most ﬂows are
subject to the same smart sampling(cid:2)xi < z, and z play the role of
the mean number of bytes represented per sampled ﬂow.
100000
10000
1000
100
x
i
f
e
r
p
P
G
B
t
s
e
d
:
r
u
o
h
/
s
w