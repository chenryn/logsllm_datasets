**Author: Heige (a.k.a. Superhei) of KnownSec 404 Team  
Date: May 25, 2020**

### Introduction
In January 2020, we released the historical data API query interface for ZoomEye 2020. In this article, I will provide examples of using the ZoomEye History API to trace the activities of APT (Advanced Persistent Threat) groups.

### Instructions for Using the Historical Query API Interface
We have also updated our ZoomEye SDK to support the history API. Before diving into the case studies, it is important to understand the data update mode in ZoomEye: it uses an overwrite update method. This means that once a C2 (Command and Control) server is discovered and abandoned by malware or APT teams, the data on ZoomEye may not be updated and overwritten, leading to cached data.

### Case Study 1: Darkhotel APT Group
I previously mentioned this in a [tweet](https://twitter.com/80vul/status/1262295955526713344). There was a minor error in the tweet, which should have referred to CVE-2019-1367 instead of CVE-2020-0674. Thank you to those who pointed this out.

#### Attack Details
In this attack, the Darkhotel APT group targeted an IP website service and implanted an IE 0-day vulnerability to conduct a Watering Hole attack. We queried all historical data for this IP on ZoomEye:

```python
import zoomeye
zm = zoomeye.ZoomEye(username="xxxxx", password="xxxx")
zm.login()
data = zm.history_ip("202.x.x.x")
print(len(data))  # Output: 22
```

List all scan time records and ports for this IP:
```python
for i in data['data']:
    print(i['timestamp'], i['portinfo']['port'])
```
Output:
```
2020-01-28T10:58:02 80
2020-01-05T18:33:17 80
2019-11-25T05:27:58 80
2019-11-02T16:10:40 80
2019-10-31T11:39:02 80
2019-10-06T05:24:44 80
2019-08-02T09:52:27 80
2019-07-27T19:22:11 80
2019-05-18T10:38:59 8181
2019-05-02T19:37:20 8181
2019-05-01T00:48:05 8009
2019-04-09T16:29:58 8181
2019-03-24T20:46:31 8181
2018-05-18T18:22:21 137
2018-02-22T20:50:01 8181
2017-03-13T03:11:39 8181
2017-03-12T16:43:54 8181
2017-02-25T09:56:28 137
2016-11-01T00:22:30 137
2015-12-30T22:53:17 8181
2015-03-13T20:17:45 8080
2015-03-13T19:33:15 21
```

Query the time and port of the IE 0-day implant:
```python
for i in data['data']:
    if "164.js" in i['raw_data']:
        print(i['timestamp'], i['portinfo']['port'])
```
Output:
```
2020-01-28T10:58:02 80
2020-01-05T18:33:17 80
2019-11-25T05:27:58 80
2019-11-02T16:10:40 80
2019-10-31T11:39:02 80
2019-10-06T05:24:44 80
```

The Watering Hole attack lasted from at least '2019-10-06 05:24:44' to '2020-01-28 10:58:02', indicating that the Darkhotel APT group had been attacking this IP website since October 6, 2019.

Analyzing the port services for this IP in 2019:
```python
for i in data['data']:
    if "2019" in i['timestamp']:
        print(i['timestamp'], i['portinfo']['port'], i['portinfo']['service'], i['portinfo']['product'])
```
Output:
```
2019-11-25T05:27:58 80 http nginx
2019-11-02T16:10:40 80 http nginx
2019-10-31T11:39:02 80 http nginx
2019-10-06T05:24:44 80 http nginx
2019-08-02T09:52:27 80 http nginx
2019-07-27T19:22:11 80 http nginx
2019-05-18T10:38:59 8181 http Apache Tomcat/Coyote JSP engine
2019-05-02T19:37:20 8181 http Apache Tomcat/Coyote JSP engine
2019-05-01T00:48:05 8009 ajp13 Apache Jserv
2019-04-09T16:29:58 8181 http Apache httpd
2019-03-24T20:46:31 8181 http Apache Tomcat/Coyote JSP engine
```

This indicates a typical JSP operating environment based on Tomcat, with the 8009 AJP port open. Many attacks exploit weak passwords and security vulnerabilities in Tomcat, making it a common target.

### Case Study 2: APT-C-01 (a.k.a. Green Spot)
The Qi An Xin Threat Intelligence Center published a detailed analysis report on APT-C-01 in 2018. The loader program first attempts to connect to a common URL to check network connectivity. If no connection is established, it retries every five seconds until the network is connected. It then downloads the payload from `hxxp://updateinfo.servegame.org/tiny1detvghrt.tmp`.

Focusing on the payload download URL, we found that the domain name can no longer be resolved:
```bash
heige@404Team ~$ ping updateinfo.servegame.org
ping: cannot resolve updateinfo.servegame.org: Unknown host
```

However, we were able to find the target by searching for "tiny1detvghrt.tmp" on ZoomEye. After the APT attack was discovered, these IPs were abandoned.

We obtained the IP address (165.227.220.223) for the domain `updateinfo.servegame.org` and queried its historical records using the ZoomEye history API:
```python
data = zm.history_ip("165.227.220.223")
print(len(data))  # Output: 9
for i in data['data']:
    print(i['timestamp'], i['portinfo']['port'])
```
Output:
```
2019-06-18T19:02:22 22
2018-09-02T08:13:58 22
2018-07-31T05:58:44 22
2018-05-20T00:55:48 80
2018-05-16T20:42:35 22
2018-04-08T07:53:00 80
2018-02-22T19:04:29 22
2017-11-21T19:09:14 80
2017-10-04T05:17:38 80
```

The deployment of `tiny1detvghrt.tmp` occurred from at least '2017-11-21 19:09:14' to '2018-05-20 00:55:48':
```python
for i in data['data']:
    if "tiny1detvghrt.tmp" in i['raw_data']:
        print(i['timestamp'], i['portinfo']['port'])
```
Output:
```
2018-05-20T00:55:48 80
2018-04-08T07:53:00 80
2017-11-21T19:09:14 80
```

Examining the time node before the deployment of `tiny1detvghrt.tmp` (2017-10-04 05:17:38):
```python
for i in data['data']:
    if "2017-10-04" in i['timestamp']:
        print(i['raw_data'])
```
Output:
```
HTTP/1.1 200 OK
Date: Tue, 03 Oct 2017 21:17:37 GMT
Server: Apache
Vary: Accept-Encoding
Content-Length: 1757
Connection: close
Content-Type: text/html;charset=UTF-8

Index of /
NameLast modifiedSizeDescription
doajksdlfsadk.tmp2017-09-15 08:21  4.9K&nbsp;
doajksdlfsadk.tmp.12017-09-15 08:21  4.9K&nbsp;
doajksdlrfadk.tmp2017-09-27 06:36  4.9K&nbsp;
dvhrksdlfsadk.tmp2017-09-27 06:38  4.9K&nbsp;
vfajksdlfsadk.tmp2017-09-27 06:37  4.9K&nbsp;
wget-log2017-09-20 07:24  572 &nbsp;
```

From the file naming and size, it can be inferred that this time node was likely a drill before the actual attack.

### Final Summary
Cyberspace search engines, like ZoomEye, are invaluable tools for tracking cyberattack threats. They allow us to re-examine the attacker's methods, objectives, and processes through the timeline of historical records. I would like to thank everyone who supports ZoomEye, as it continues to be a leading search engine for cyberspace mapping.