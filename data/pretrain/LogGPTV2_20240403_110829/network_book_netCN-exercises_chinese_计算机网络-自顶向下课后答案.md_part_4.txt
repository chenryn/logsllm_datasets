R1、网址：http；文件传输：ftp；远程登录：Telnet；电子邮件：smtp；BitTorrent文件共享：BitTorrent协议
R2、网络体系结构是指将通信过程组织成多个层次(例如，五层互联网体系结构)。另一方面，应用程序体系结构是由应用程序开发人员设计的，它决定了应用程序的广泛结构(例如，客户机-服务器或P2P)。
R3、发起通信的进程是客户端；等待联系的进程是服务器。
R4、没有。在P2P文件共享应用程序中，接收文件的对等方通常是客户端，发送文件的对等方通常是服务器。
R5、目标主机的IP地址和目标进程中套接字的端口号。
R6、你会用UDP。使用UDP，事务可以在一次往返时间(RTT)内完成--客户端将事务请求发送到UDP套接字，服务器将应答发送回客户端的UDP套接字。对于TCP，至少需要两个RTT--一个用于设置TCP连接，另一个用于客户机发送请求，另一个用于服务器发送回复。
R7、例如，使用Google文档进行远程文字处理就是一个这样的例子。但是，由于Google文档在Internet上运行(使用TCP)，因此没有提供定时保证。
R8、
a)可靠的数据传输TCP在客户端和服务器之间提供可靠的字节流，但UDP没有。
b)保证一定的吞吐量值既不保持，也不保证数据将在规定的时间内交付-既不保密，也不(通过加密)
c)保证数据将在规定的时间内交付-既不保密(通过加密)
d)保密(通过加密)
R9、SSL在应用层运行。SSL套接字从应用层接收未加密的数据，对其进行加密，然后将其传递给TCP套接字。如果应用程序开发人员希望使用SSL增强TCP，则必须在应用程序中包含SSL代码。
R10、如果两个通信实体在相互发送数据之前先交换控制包，则协议使用握手。SMTP在应用层使用握手，而HTTP不使用握手。
R11、与这些协议相关联的应用程序要求以正确的顺序接收所有应用程序数据，并且不存在空白。TCP提供此服务，而UDP不提供此服务。
R12、当用户第一次访问站点时，服务器将创建一个唯一的标识号，在其后端数据库中创建一个条目，并将此标识号作为cookie编号返回。此cookie编号存储在用户的主机上，并由浏览器管理。在每次后续访问(和购买)期间，浏览器将cookie编号发送回站点。因此，站点知道这个用户(更准确地说，是这个浏览器)访问该站点的时间。
R13、网络缓存可以使所需内容与用户“更接近”，可能与用户“更接近” 用户主机连接的局域网。网络缓存可以减少所有人的延迟对象，甚至没有缓存的对象，因为缓存减少了链接上的流量。
R14、默认情况下，Telnet在Windows 7中不可用。若要使其可用，请转到“控制面板”、“程序和功能”、“打开或关闭Windows功能”、“检查Telnet客户端”。要启动Telnet，在Windows命令提示符中，发出以下命令
```
>telnetwebserverver 80
```
其中“webserver”是一些webserver。发出命令后，您已经在客户端telnet程序和Web服务器之间建立了TCP连接。然后输入HTTPGET消息。举例如下：
![avater](./img/17.png)
由于此Web服务器中的index.html页面自2007年5月18日(星期五)09：23：34格林尼治时间(GMT)以来未被修改，上述命令于2007年5月19日在沙特发布，服务器返回“304未修改”。注意，前4行是用户输入的GET消息行和头行，接下来的4行(从HTTP/1.1 304开始，未修改)是来自Web服务器的响应。
R15、几个流行的消息应用程序列表：WhatsApp、FacebookMessenger、微信和Snapchat。这些应用程序使用与SMS不同的协议。
R16、该消息首先通过HTTP从Alice的主机发送到她的邮件服务器。然后，Alice的邮件服务器通过SMTP向Bob的邮件服务器发送消息。然后Bob通过POP 3将消息从他的邮件服务器传输到他的主机。
R17、
|Action | Event|
|-------|------|
|Received: |from 65.54.246.203 (EHLO bay0-omc3-s3.bay0.hotmail.com) (65.54.246.203) by mta419.mail.mud.yahoo.com with SMTP; Sat, 19 May 2007 16:53:51 -0700 |
|Received: |from hotmail.com ([65.55.135.106]) by bay0-omc3-s3.bay0.hotmail.com with Microsoft SMTPSVC(6.0.3790.2668); Sat, 19 May 2007 16:52:42 - 0700 |
|Received:| from mail pickup service by hotmail.com with Microsoft SMTPSVC; Sat, 19 May 2007 16:52:41 -0700 |
|Message-ID: ||
|Received: |from 65.55.135.123 by by130fd.bay130.hotmail.msn.com with HTTP; Sat, 19 May 2007 23:52:36 GMT 
|From:| "prithula dhungel"|  |
|To:| PI:EMAIL|
|Bcc:|| 
|Subject: |Test mail| 
|Date: |Sat, 19 May 2007 23:52:36 +0000| 
|Mime-Version:|1.0| 
|Content-Type: |Text/html; format=flowed |
|Return-Path:| PI:EMAIL|
图：接收到的邮件标题示例：
此标头字段指示SMTP服务器发送和接收邮件的顺序，包括相应的时间戳。
在本例中，有4个“接收：”标题行。这意味着邮件在发送到收件人的邮箱之前通过5个不同的SMTP服务器传递。最后(第四)“接收：”标头指示从发件人的SMTP服务器到服务器链中的第二个SMTP服务器的邮件消息流。发送方的SMTP服务器位于地址65.55.135.123，链中的第二个SMTP服务器为by130fd.bay130.hotmail.msn.com。
第三个“接收：”标头表示从链中的第二个SMTP服务器到第三个服务器的邮件消息流，依此类推。
最后，第一个“接收：”标头指示从第四个SMTP服务器到链中的最后一个SMTP服务器(即接收方的邮件服务器)的邮件消息流。
Message-id：邮件编号为BAY PI:EMAIL(由bay0-omc3-s3.bay0.hotmail.com提供)。Message-id是邮件系统首次创建消息时分配的唯一字符串。
出发地：这表示邮件发件人的电子邮件地址。在给定的示例中，发件人为“PI:EMAIL”，
该字段指示邮件接收方的电子邮件地址。在本例中，接收方为“PI:EMAIL”
主题：这将给出邮件的主题(如果发件人指定的话)。在此示例中，发件人指定的主题为“测试邮件”
日期：发件人发送邮件的日期和时间。在这个例子中，发件人于2007年5月19日(格林尼治时间23：52：36)发送了邮件。
MIME版本：用于邮件的MIME版本。在这个例子中，它是1.0。
内容类型：邮件正文中内容的类型。在这个例子中，它是“text/html”。
返回路径：如果该邮件的接收方希望回复发件人，则指定发送邮件的电子邮件地址。发件人的邮件服务器也使用它来返回邮件守护进程错误消息的不可交付邮件消息。在这个例子中，返回路径是“PI:EMAIL”。
R18、通过下载和删除，用户从POP服务器检索其消息后，消息将被删除。这给游牧用户带来了一个问题，他们可能希望从许多不同的机器(办公PC、家庭PC等)访问消息。在下载和保存配置中，在用户检索消息后不会删除消息。这也可能不方便，因为每次用户从新机器检索存储的消息时，所有未删除的消息都将传输到新机器(包括非常旧的消息)。
R19、是的，组织的邮件服务器和Web服务器可以具有与主机名相同的别名。MX记录用于将邮件服务器的主机名映射到其IP地址。
R20、您应该能够使用.edu电子邮件地址查看发送方的IP地址。但是，如果用户使用Gmail帐户，您将无法看到发件人的IP地址。
R21、鲍勃也没有必要为Alice提供块。Alice必须是Bob的前4位邻居，Bob才能向她发送块；即使Alice在30秒的间隔内向Bob提供块，也可能不会发生这种情况。
R22、回想一下，在BitTorrent中，一个对等点选择一个随机的对等点，并乐观地在短时间内解除该对等点的阻塞。因此，爱丽斯最终会被她的一个邻居放倒，在此期间，她会从邻居那里得到大块的食物。
R23、P2P文件共享系统中的覆盖网络由参与文件共享系统的节点和节点之间的逻辑链接组成。如果A和B之间有一个半永久的TCP连接，则从节点A到节点B有一个逻辑链路(图论术语中的“边缘”)。覆盖网络不包括路由器。
R24、一种服务器布局理念称为EntDep，它通过在全世界的Access ISP中部署服务器集群，深入到Internet服务提供商的接入网中。目标是减少延迟，提高终端用户和CDN服务器之间的吞吐量。另一种理念是将ISP带回家，在较小数量的站点上构建大型CDN服务器集群，并通常将这些服务器集群放置在IXP(Internet Exchange Point)中。这带来了居家设计典型的结果是较低的维护和管理成本，与进入深度的设计理念。
R25、除了与网络相关的因素之外，还有一些重要的因素需要考虑，例如负载平衡(客户端不应指向过载集群)、日变化、网络中DNS服务器之间的变化、很少访问视频的可用性有限以及需要缓解流行视频内容可能产生的热点。
参考文件：Torres，Ruben，等。“在Youtube CDN中剖析视频服务器的选择策略。”第31届IEEE国际会议。分布式计算系统(ICDCS)，2011年。
另一个需要考虑的因素是ISP交付成本--可以选择集群，以便使用特定的ISP来承载CDN到客户端的通信，同时考虑到ISP和集群运营商之间的契约关系中的不同成本结构。
R26、对于UDP服务器，没有欢迎套接字，来自不同客户端的所有数据都通过这个套接字进入服务器。对于TCP服务器，有一个欢迎套接字，每次客户端启动到服务器的连接时，都会创建一个新的套接字。因此，为了支持n个同时连接，服务器需要n个套接字。
R27、对于TCP应用程序，一旦客户端被执行，它就会尝试启动与服务器的TCP连接。如果TCP服务器没有运行，则客户端将无法建立连接。对于UDP应用程序，客户端在执行时不会立即启动连接(或尝试与UDP服务器通信)。
[Back to Index](#目录)
## 问题2
P1、
a) F 
b) T 
c) F 
d) F 
e) F 
P2、短消息服务(SMS)是一种允许移动电话之间通过蜂窝网络发送和接收短信的技术。一个SMS消息可以包含140个字节的数据，它支持国际语言。消息的最大大小可以是160个7位字符、140个8位字符或70个16位字符.SMS通过SS#7协议的移动应用部分(MAP)实现，短消息协议由3 GPP TS 23.040和3 GPP TS 23.041定义。此外，MMS(多媒体消息传递服务)扩展了原始文本消息的功能，并支持发送照片、更长的文本消息和其他内容。
iMessage是苹果公司开发的即时通讯服务。iMessage支持通过蜂窝数据网络或WiFi发送到IOS设备和Mac的文本、照片、音频或视频。苹果的iMessage基于专有的二进制协议APN(ApplePushNotificationService)。WhatsAppMessenger是一种即时通讯服务，支持iOS、Android、手机和黑莓等多种移动平台。WhatsApp用户可以通过蜂窝数据网络或WiFi相互发送无限的图像、文本、音频或视频。WhatsApp使用XMPP协议(可扩展消息传递和存在协议)。
iMessage和WhatsApp与SMS不同，因为它们使用数据计划发送消息，并且在TCP/IP网络上工作，而SMS使用我们从无线运营商购买的短信计划。此外，iMessage和WhatsApp支持发送照片、视频、文件等，而原始短信只能发送短信。最后，iMessage和WhatsApp可以通过WiFi工作，但SMS不能。
P3、应用层协议：DNS和HTTP传输层协议：UDP用于DNS；TCP用于HTTP
P4、
a)文档请求是http://gaia.cs.umass.edu/cs453/index.html.host：字段表示服务器的名称，/cs 453/index.html表示文件名。
b)浏览器正在运行HTTP1.1版本，就像第一对之前所指出的那样。
c)浏览器正在请求持久连接，如连接所示：保持-活动。
d)这是刁钻的问题。此信息不包含在任何地方的HTTP消息中。因此，仅看HTTP消息的交换就无法区分这一点。您需要从IP数据报(承载承载HTTPGET请求的TCP段)中获得信息来回答这个问题。
e)Mozilla/5.0。服务器需要浏览器类型信息将同一对象的不同版本发送到不同类型的浏览器。
P5、
a）状态代码200和短语ok表示服务器能够找到文档成功。答复于2008年3月7日星期二提供格林威治标准时间12:39:45。
b）上一次修改index.html文档是在2005年12月10日星期六18:27:46 格林尼治时间。
c）返回的文档中有3874个字节。
d）返回文件的前五个字节是：<！医生服务器同意持久连接，如connection:Keep Alive字段所示
P6、
a）在RFC 2616的第8节中讨论了持久连接（这一点的真正目的问题是让你检索并阅读一份RFC）第8.1.2和8.1.2.1节
rfc表示客户机或服务器可以向另一个表明它是将关闭永久连接。它通过包含连接令牌来实现“关闭”在http请求/回复的连接头字段中。
b）http不提供任何加密服务。
c)（来自rfc 2616）“使用持久连接的客户端应该限制同时维护到给定服务器的连接。单用户客户端与任何服务器或代理服务器的连接不应超过2个。”
d)是。(来自RFC 2616)“在服务器决定关闭”空闲“连接的同时，客户端可能已经开始发送新请求。从服务器的角度来看，连接是在空闲时关闭的，但从客户端的角度来看，请求正在进行中。“
P7、获取IP地址的总时间为$RTT_1+RTT_2+...+RTT_n$
一旦知道IP地址，$RTT_O$就会经过以建立TCP连接，而另一个$RTT_O$则会经过以请求和接收小对象。总响应时间为$2+RTT_O+RTT_1+RTT_2+...+RTT_n$
P8、
a)$RTT_1+RTT_2+...+RTT_n+2RTT_O+8*2RTT_O=18RTT_O+RTT_1+...+RTT_n$
b)$RTT_1+RTT_2+...+RTT_n+2RTT_O+2*2RTT_O=6RTT_O+RTT_1+...+RTT_n$
c)与流水线的持久连接。这是HTTP的默认模式。$RTT_1+RTT_2+...+RTT_n+2RTT_O+RTT_O=3RTT_O+RTT_1+...+RTT_n$
持续连接，没有流水线，没有并行连接。$RTT_1+RTT_2+...+RTT_n+2RTT_O+8RTT_O=10RTT_O+RTT_1+...+RTT_n$
P9、
a)在链路或速率R上传输大小为L的对象的时间是L/R，平均时间是对象的平均大小除以R：
$\delta$= (850,000 bits)/(15,000,000 bits/sec) = .0567 sec 
链路上的流量强度由$\beta \delta$=(16个请求/秒)(0.567秒/请求)=0.907表示。因此，平均访问延迟为(0.567秒)/(1-0.907)≈0.6秒。因此，总的平均响应时间为0.6秒+3秒=3.6秒。
b)由于60%的请求在机构网络中得到满足，接入链路上的业务强度降低了60%。因此，平均访问延迟为(.0567秒)/[1-(4)(.907)]=.089秒。如果请求由缓存满足(发生概率为6)，则响应时间大约为零；如果缓存丢失，平均响应时间为0.089秒，3秒=3.089秒(40%的时间)。因此，平均响应时间为(6)(0秒)(4)(3.089秒)=1.24秒。因此，平均响应时间从3.6秒缩短到1.24秒。
P10、请注意，每个下载的对象都可以完全放入一个数据包中。让TP表示客户端和服务器之间的单向传播延迟。
首先考虑使用非持久连接的并行下载。并行下载将允许10个连接共享150位/秒带宽，每个带宽仅15个位/秒。因此，接收所有对象所需的总时间由下式给出：
（200/150TP200/150TP200/150TP100,000/150TP）(200/(150/10)TP200/(150/10)TP200/(150/10)TP100,000/(150/10)TP)=737778*TP（秒）
现在请考虑持久的HTTP连接。所需的总时间由下式给出：