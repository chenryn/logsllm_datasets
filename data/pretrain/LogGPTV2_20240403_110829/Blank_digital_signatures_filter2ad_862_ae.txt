(skT ∗
P = ρ∗,T ∗) with (skT
P ,T ∗) such that
P ,T ) (cid:54)= (skT ∗
then
holds. This implies that
VerifyT (T ∗, σT , pp, dpkO, skT ∗
P , dpkP) = true,
e(ρ · t(α)P, P ) = e(ρ∗ · t∗(α)P, P )
e(P, P )ρt(α) = e(P, P )ρ∗t∗(α)
e(P, P )ρt(α)−ρ∗t∗(α) = 1.
Hence, α is a root of the polynomial t(cid:48)(X) = ρt(X)− ρ∗t∗(X). As factoring of t(cid:48)(X) yields α, B can
eﬃciently obtain α and by choosing c ∈R Zp \ {−α}, B can output a solution (c,
1
α+c ) of the t-SDH
(cid:117)(cid:116)
problem in E(Fq).
A.2 Proof of Theorem 2
The proof consists of two parts. The ﬁrst part covers unforgeability of template signatures, whereas
the second part covers the unforgeability of message signatures. Both parts consist of two cases cov-
ering the reuse of queried signatures and existential forgeries of signatures, as detailed in Section 5.3.
In the following, let q and qi be the number of template queries and the number of instantiation
queries for template Ti with 1 ≤ i ≤ q issued by A.
Case T1. This case covers the infeasability of ﬁnding some T ∗ (cid:54)= Ti for all previously queried Ti
such that T ∗ veriﬁes under some queried template signature σTi. If A was able to win the game by
ﬁnding - with non-negligible probability - a T ∗ (cid:54)= Ti for all 1 ≤ i ≤ q such that
Ci = e(ρ∗ · tT ∗ (α)P, P ),
for some 1 ≤ i ≤ q, then A has found a template T ∗ (cid:54)= Ti with deg(tT ∗ ) ≤ t such that either
1. tTi(X) = tT ∗ (X), or
2. tTi(X) (cid:54)= tT ∗ (X) and tTi (α) = tT ∗ (α)
holds. Note that both cases are disjoint.
In case one, A has found second preimages in H with non-negligible probability. More precisely,
P and σTi are ﬁxed. If A is able to generate a T ∗ (cid:54)= Ti with tTi (X) = tT ∗ (X) with non-negligible
skT
probability, then it must have found second preimages in H with non-negligible probability for (cid:96)i
roots of t(Ti), whereas the suﬃx of each preimage must be of the form idT ∗(cid:107)j and only the value of
M is arbitrary.
In the second case, A must have found T ∗ (cid:54)= Ti such that tTi(α) = tT ∗ (α), i.e., the template
encoding polynomials need to have the same evaluation at the unknown point α, for some 1 ≤ i ≤ q.
Then we can construct an adversary B that breaks the t-SDH problem in E(Fq). The reduction
is identical to the reduction in the proof of signature soundness in Appendix A.1 with the only
exception that we have ρ∗ = ρi.
Case T2. This case covers the infeasability of computing a valid signature σT ∗ for some T ∗ giving
C∗, which diﬀers from all previously queried template signatures. If A is able to win the game by
ﬁnding a pair (T ∗, σT ∗ ) (cid:54)= (Ti, σTi) for all 1 ≤ i ≤ q such that
DVerify(τ, idT ∗(cid:107)C∗(cid:107)n∗(cid:107)dpkP, dpkO) = true
then A must be able to forge signatures of the digital signature scheme DSS under dskO.
Case M1. This case covers the infeasability of ﬁnding some M∗ (cid:54)= Mij for all previously queried
Mij such that M∗ veriﬁes under some issued message signature σMij
, pp, dpkP, dpkO) = true.
VerifyM(M∗, σMij
, i.e.,
In particular, in order to win the game, A must be able to ﬁnd M∗ such that either
1. mMij
2. mMij
(X) = mM∗ (X), or
(X) (cid:54)= mM∗ (X) and mMij
(α) = mM∗ (α)
In the ﬁrst case, A needs to ﬁnd - with non-negligible probability - an M∗ (cid:54)= Mij for all 1 ≤ i ≤ q
holds. Note that both cases are disjoint.
and 1 ≤ j ≤ qi such that
|M∗| = |Mij| ∧ deg(mM∗ ) = n ∧ e(CM∗ ,CMij
) = Ci
for some 1 ≤ i ≤ q and 1 ≤ j ≤ qi. Since all values in the veriﬁcation relation are ﬁxed due to µ,
the only way for A to output an M∗ that passes the signature veriﬁcation for an existing signature,
is to ﬁnd an M∗ such that mM∗ (X) = mMij
(X) and |M∗| = |Mij|. A can do so by computing
second preimages in H, i.e.,
(cid:107)idTi(cid:107)l)
l (cid:107)idTi(cid:107)l) = H(Mijl
H(M∗
for all n roots of the polynomial mMij
idTi(cid:107)l and only the value of M∗
In the second case, we show that if A is able to come up with such a forgery, then we can construct
an adversary B against the t-SDH assumption in E(Fq). Adversary B works as follows. B obtains an
instance (P, αP, . . . , αtP ) to the t-SDH problem in E(Fq), sets pp = (H, E(Fq), e, p, P, αP, . . . , αtP )
and gives pp and the DSS public keys of the originator and proxy to A. When A wins the game by
delivering such a forged M∗, we know that:
, whereas the suﬃx of each preimage must be of the form
is arbitrary.
l
e(CM∗ ,CMij
e(CM∗ − CMij
) = e(CMij
,CMij
,CMij
)
) = 1
(cid:54)= O with overwhelming probability, it follows that:
As CMij
mM∗ (α)P = mMij
mM∗ (α)P − mMij
(α)P
(α)P = O
Consequently, α is a root of the polynomial mM∗ (X) − mMij
(X) ∈ Zp[X]. By factoring this poly-
nomial, B can eﬃciently obtain α and solve the instance of the the t-SDH problem in E(Fq) given
by pp by choosing c ∈ Zp \ {−α} and outputting (c,
1
α+c P ).
Case M2. This case covers the infeasability of computing a valid signature σM∗ for some M∗, which
diﬀers from all previously queried signatures. A needs to ﬁnd a pair (M∗, σM∗ ) (cid:54)= (Mij , σMij
) for
all 1 ≤ i ≤ q and 1 ≤ j ≤ qi such that
In both cases M2a and M2b, this implies that A is able to forge DSS signatures under dskP.
(cid:117)(cid:116)
VerifyM(M∗, σM∗ , pp, dpkP, dpkO) = true.
A.3 Proof of Theorem 3
Case T1. The proof for this case is analogous to the proof in Appendix A.2 with the exception that
A knows the proxy private keys corresponding to all templates. Therefore, the reduction is identical
to the one in the proof of signatures soundness in Appendix A.1.
Case T2. The proof for this case is analogous to the one in Appendix A.2, since A has exactly the
same knowledge as in the previous proof.
Case M1. The proof for this case is analogous to the proof in Appendix A.2.
Case M2b. This case covers the infeasability of existentially forging signatures for messages, which
are not instantiations of a template.
Firstly, we show that if A is able to ﬁnd an M∗ such that M∗ (cid:14) Ti for all 1 ≤ i ≤ q and
for all 1 ≤ j ≤ qi and
σM∗ (cid:54)= σMij
VerifyM∗ (M∗, σM∗ , pp, dpkP, dpkO) = true,
then we can construct an eﬃcient adversary B against the t-SDH assumption in E(Fq). Finding
such an M∗ implies that A has found a polynomial mM∗ such that mM∗ does not perfectly divide
tTi, i.e., tTi = mM∗ · mM∗ + ξ with ξ (cid:54)= 0.
Adversary B works as follows. B obtains an instance (P, αP, . . . , αtP ) to the t-SDH problem
in E(Fq), sets pp = (H, E(Fq), e, p, P, αP ) and gives pp and the respective DSS keys to A. B sim-
ulates A’s queries as in the original game. If A wins the game by returning (M∗ = M0, σM∗ =
(µ∗,CM∗ ,I∗ = (|M∗
i=1, σTi),Ti), then B computes mM∗ = mTi(M∗) and tTi = t(Ti). As we have
i |)n
e(CM∗ ,CM∗ ) = C,
CM∗ must have the form CM∗ = ρi(mM∗ (α) + ξ(α)
mM∗ (α) )P . By dividing tTi(X) through mM∗ (X), B
obtains mM∗ (X) and ξ(X). From this B can compute mM∗ (α)P . Since B knows ρi from the query
phase, it can now compute
As deg(tTi) = 1 and deg(mM∗ ) = 1, we have deg(ξ) = 0, i.e., ξ(X) = ω ∈ Z∗
p. Therefore, we obtain
i CM∗ − mM∗ (α)P =
ρ−1
ξ(α)
mM∗ (α)
P.
ξ(α)
mM∗ (α)
P =
ω
α − H(M0(cid:107)idT (cid:107)1)
P
and B can now compute
1
ω
ω
1
α − H(M0(cid:107)idT (cid:107)1)
P =
α − H(M0(cid:107)idT (cid:107)1)
P
1
which gives a solution (−H(M0(cid:107)idT (cid:107)1),
α−H(M0(cid:107)idT (cid:107)1) P ) to the t-SDH problem in E(Fq). It is
immediate that the success probability of B is only negligibly smaller than that of A, due to the
possibility that it could happen that α = H(M0(cid:107)idT (cid:107)1), and the time required is only a small
constant larger than that of B.
Secondly, another strategy, A can follow is to use non-intended perfect divisors of tTi, i.e., con-
structing an M∗ such that deg(mM∗ ) (cid:54)= n and/or the elements of M∗ are not consecutive with
respect to the order deﬁned by template Ti. However, the degree n of all valid message polynomials
as well as the index values i in the message encoding are ﬁxed by the originator. Thus, the veriﬁca-
tion can never be satisﬁed. In the latter case, A would additionally be required to compute second
(cid:117)(cid:116)
preimages for at least one of the unintended factors.
A.4 Proof of Theorem 4
0,C(cid:48)
M(cid:48)
01
, . . . ,C(cid:48)
M(cid:48)
0k
and σT (cid:48)
1
0
) and (C(cid:48)
1,C(cid:48)
M(cid:48)
0 and C(cid:48)
0 and T (cid:48)
The strategy for this proof is as follows. When receiving the template signatures for the challenged
templates T (cid:48)
1 , there is no a priori link between the templates and their signatures as they are
returned in a randomly permuted order. Since the template ids are randomly chosen, both templates
are of the same length n and the proxy public keys are equal, all boils down to deciding correspon-
dence between templates and signatures by inspecting the commitments C(cid:48)
1 contained in the
template signatures σT (cid:48)
. Analogously, all values in the message signatures of an instantia-
tion M(cid:48)
l, except for the commitments to the complementary message polynomials and the comprised
template signatures, are identical. Latter allows the linking of queried message and template sig-
natures and constructing two lists of commitments (C(cid:48)
),
where we assume w.l.o.g that A has queried all k instantiations. Consequently, the only strategy A
can follow to gain an advantage over guessing, is to base its decision upon these two lists. What
remains to show is that A has no advantage in winning the game, when using this information, which
means that A’s success probability for winning the game is exactly 1/2. We do so by showing that
all elements in the above two lists unconditionally hide the respective encoding polynomials.
Let T be a template allowing s instantiations and C = e(ρ · tT (α)P, P ) be the commitment to
its template encoding polynomial. W.l.o.g. we assume that let s − 1 message signatures have been
issued and the corresponding commitments to the complementary message encoding polynomials
are known. Nevertheless, this implies that one monomial factor (X − γ) in the
CM1
template encoding polynomial of T remains unknown. It also implies that (X − γ) is an unknown
factor of all complementary message encoding polynomials in the commitments CMi
(α)P
for i = 1, . . . , s − 1. The only unkown values in C (and in all other commitments), for which we
demand C (cid:54)= O, are ρ and γ. For all these commitments, there are, however, exactly p− 1 valid pairs
(γ, ρ) ∈ (Z∗
p)2. Consequently, all these commitments unconditionally hide the encoding polynomials.
(Note that also in case of a constrained set of a < p possible values for γ - which would for instance
be the case if we are dealing with a constrained message space - the hiding is still unconditional, as
(cid:117)(cid:116)
there are a equally likely pairs of possible values.)
, . . . ,CMs−1
= ρ· mMi
, . . . ,C(cid:48)
11
M(cid:48)
1k