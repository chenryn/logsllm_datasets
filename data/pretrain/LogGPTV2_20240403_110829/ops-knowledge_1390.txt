User: My app maintains the state of a bunch of objects with variables.
I'm using Twisted to accept socket requests and return the properties of an object.
I want to make sure the app can scale for a lot of requests so I'm wondering if I should deliver the object properties directly from the objects, or if I should store those properties in memcached or something similar, and have the requests read from that store.
I just wasn't sure if lots of requests reading the same object values would affect the performance of the part of the app that is managing those objects.
Am I over thinking it?
Assistant: I think either you create an selfCreatedObject or using a memcached once, it will be an instance of python objects, like list or dict or anything else so the two ways are to same destination. 
I prefer to use object so you can make a check the change of the object value or validate it if needed.