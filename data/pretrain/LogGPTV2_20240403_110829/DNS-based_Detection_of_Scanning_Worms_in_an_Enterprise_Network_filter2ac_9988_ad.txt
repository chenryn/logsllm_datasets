
1
(
200 Infected Systems
!$
!$
)"),-!$
1

1

500 Infected Systems
&'$
)"(&'$
&'$
!1

!1
)"(
For example, with a 10,000 entry connection candidate
list and a network that has 500 infected systems, if all of
the systems began scanning at precisely the same time, the
probability that after a single scan at least one of the scans
would match an entry in the connection candidate list is
only .04%. Table 7 contains probabilities, for various pa-
rameters, that a false negative will occur due to a single
scan simultaneously occuring from each infected system
targeting a previously cached IP entry in the connection
candidate list.
5 Detection Circumvention and Current
Limitations
In this section, we give an overview of possible ways
our detection technique can be defeated and its current
limitations.
5.1 Detection Circumvention
Any new worm detection algorithm will be the sub-
ject of scrutiny for both security researchers and mali-
cious actors. The former seeks to validate and improve
new ideas to realize improvements in overall network se-
curity countermeasures. The latter will devise ways to ex-
ploit weaknesses in the algorithm to circumvent detection.
One method a worm writer could employ to evade dection
from our approach is to have the worm do a preemptive
valid DNS query before each infection attempt (i.e. scan).
However, performing valid DNS queries before every in-
fection attempt would have negative consequences for an
attacker, e.g. it would:
1. Require worms writers to adopt a new infection
paradigm to randomly generate valid domain names
instead of numeric IP addresses for targeting.
2. Slow propagation as worms perform DNS queries in
order to spread.
3. Increase DNS activity as every infection attempt will
pose a signi(cid:2)cant and noticeable impact on the DNS
server.
4. Reduce the number of reachable vulnerable systems
because not all systems (e.g. home users, client sys-
tems in an enterprise networks) have quali(cid:2)ed do-
main names being simply clients that do not offer any
services. These client systems could comprise a sig-
ni(cid:2)cant portion of the susceptible Internet population
depending on the exploitable vulnerability (e.g. Win-
dows XP buffer over(cid:3)ow).
One of the limitations of the detection technique is that
it cannot detect intra-cell and R2L attacks. A skilled at-
tacker could use these limitations in concert to remain un-
detected while infecting the network. For example, a R2L
attack is launched against the network and the worm in-
fects a single system within a cell. Using the network
information obtained from the infected system (e.g. net-
mask, broadcast domain), the worm can limit its scans to
within the network cell. In parallel, another R2L attack
could be executed against a system within another net-
work cell and the process repeats.
5.2 Current Detection Limitations
Our approach has limitations. As discussed in Section
2, it cannot detect R2L or intra-cell worm propagation.
Automated attack tool activity (e.g. auto-rooters, network
scanners, Trojan horses scans, etc. ) will be detected but
categorized as worm propagation.
Although it depends on the implementation, a worm
that targets DNS servers may introduce irregularities that
could limit the detection technique. Our detection tech-
nique also assumes that all applications honor TTL values;
this may not be the case for all applications. Topological,
metaserver, and passive worms may not trigger the detec-
tor depending on the behavior of the host programs [24].
Additionally, worm propagation via email/network share
traversal will not be detected.
Finally, the use of whitelists in certain network envi-
ronments could constrain the detection technique, as dis-
cussed in Section 2. Whitelists are used to exempt speci(cid:2)c
network activities and systems from the detection algo-
rithm to reduce the occurence of false positives. Tables
8 and 9 contain the whitelist entries for the Lab and IDN
networks respectively. These exemptions can be applied
to the entire network (e.g. Activity 6, Table 8) or just to
speci(cid:2)c systems (e.g. Activity 5, Table 8). During our
analysis of both networks, the following protocols com-
prised the respective whitelists:
1. Internet Message Access Protocol (IMAP): IMAP is


"

#





%

#


%

#




%

#






%

#


.

%

%


"

#





%

#


%

#




%

#


Table 8. Lab Whitelist
Reason
IMAP
IMAP
# Activity Whitelist Entry
1
2
3 NTP
4 NTP
5
6
7
192.168.1.33:993 - 192.168.200.50:993 TCP Mail server communications
192.168.1.25:993 - 192.168.200.50:993 TCP Mail server communications
192.168.1.12:123 - 192.168.200.2:123 UDP
Server clock synchronization
Server clock synchronization
192.168.1.12:123 - 192.168.200.1:123 UDP
Mail server communications
192.168.1.5:993 TCP
User initiated FTP sessions
192.168.1.0/191:21 TCP
192.168.1.0/191:22 TCP
User initiated SSH sessions
IMAP
FTP
SSH
Table 9. IDN Whitelist
Reason
IMAP
IMAP
# Activity Whitelist Entry
1
2
3 NTP
4 NTP
192.168.200.50:993 - 192.168.1.33:993 TCP Mail server communications
192.168.200.50:993 - 192.168.1.25:993 TCP Mail server communications
Sever clock synchronization
192.168.200.2:123 - 192.168.1.12:123 UDP
192.168.200.1:123 - 192.168.1.12:123 UDP
Server clock synchronization
a TCP based protocol that allows a client to remotely
access email from a server [8].
2. Network TIme Protocol (NTP): NTP is a UDP based
protocol used to synchronize computer clocks over a
network [13].
3. File Transfer Protocol (FTP): FTP is a TCP based
protocol used to remotely exchange (cid:2)les [18].
4. Secure Shell Protocol (SSH): SSH is a TCP based
protocol used to encrypt a data stream to eliminate
eavesdropping [4].
The Lab and IDN networks have a strict security policy
that restricts the type of services allowed within the net-
work. Therefore, the whitelist entries for these networks
were limited to a few systems and protocols.
In a net-
work with a very open security policy, the whitelist may
become so large that maintanence becomes an issue and
the detection algorithm either exempts too much network
activity or creates too many false negatives to be useful. In
this scenario, we believe that the DNS detection technique
would best be used in conjunction with other detection
techniques. For instance, the scan detection and supres-
sion algorithm developed by Weaver et al. [25] could use
our detection technique as another detection signal. In this
scenario, our detection technique could provide a means to
assign connections that did not use DNS a greater anomaly
score than those that used DNS.
6 Extended Applications
Our DNS-based detection approach could be applied to
(cid:2)ve additional areas, which we believe warrant future in-
vestigation: (1) automated attack tool detection; (2) R2L
worm propagation detection; (3) covert channel and re-
mote access Trojan (RAT) detection; (4) mass mailing
worm detection; and (5) integration with other anomaly
based detectors. We discuss these in turn.
Automated Attack Tools. Automated attack tools
share the same exploit methodology as scanning worms.
Their goal is to rapidly identify and compromise as many
systems as possible. A typical con(cid:2)guration parameter
for automated attack tools is a range of numerical IP ad-
dresses that they use as their target information. The faster
they scan, the faster they can compromise vulnerable sys-
tems.
Our DNS-based scanning worm detection technique can
be used to detect automated attack tools. As part of our
analysis during the prototype testing, we determined that
130 false positives were attributed to scanning for vulner-
able services and previously installed malicious software
(i.e. the Optix Trojan).
R2L Worm Propagation. R2L worm propagation
refers to worm propagation attempts that originate from
outside the enterprise network boundary. Our detection
technique relies on observing DNS activity and new con-
nection attempts from systems within the enterprise net-
work. As we can observe all DNS activity initiated by in-
ternal systems, it is easily adapted to correlate this activity
with new connections.
We believe that it would be possible to observe and cor-
relate all DNS requests and new connection attempts ini-
tiated from remote systems. To determine the precision
of the detection algorithm, requires further investigation
of the dif(cid:2)culty of correlating DNS server requests with
individual system connection requests.
Covert Channels. Covert channels are used to provide
a communications method that violates the security policy
of the system or network. Once a system has been com-
promised, an attacker typically requires some means to
access the system to either ex(cid:2)ltrate data or maintain com-
mand and control. RATs typically use covert channels to
communicate with their respective controllers outside the
network. Covert channels are often created through soft-
ware that can tunnel communications through well known
and security policy sanctioned protocols in the network.
For instance, several publicly available tools allow a user
to tunnel data through the HTTP protocol.
Often an attacker uses a previously compromised sys-
tem to attack other systems to evade detection. A large
percentage of Internet systems (e.g. home users) do not
have a fully quali(cid:2)ed domain name associated with their
IP address. Furthermore, it would not (cid:2)t the pro(cid:2)le of be-
ing covert if a compromised system had to perform a DNS
query to identify the system that had surreptitious control
of it. In this scenario, our DNS-based detection approach
would be able to detect covert channel communications.
Mass-mailing Worms. Mass-mailing worms infect
systems by sending infected email messages. The worm
payload is typically contained within an email attachment.
As part of the installed code base, these worms often con-
tain their own Simple Mail Transfer Protocol (SMTP) en-
gine. To avoid the need to detect and then use disparate
email clients on victim systems, worms install their own
fully functional SMTP server, ensuring that they can gen-
erate infected emails regardless of the email client soft-
ware used by the victim. This increases a worms propaga-
tion rate.
In contrast to a normal email message generation, a
mass-mailing worm automatically composes the infected
email message with no human intervention. In fact, unless
a virus scanner or some other malicious code detection
device detects the infection, the system owner is typically
unaware that a worm is resident on the system. Using
its built-in SMTP server, the infected system bypasses the
corporate mail server when it attempts to send infected
emails to the respective recipients.
In this scenario, the SMTP engine of the infected sys-
tem is responsible for propagating the worm and deliver-
ing infected emails. In order to determine the mail server
that services a particular recipient, the infected system, not
the local mail server, queries the local DNS server for the
MX record associated with the email recipient’s address.
Some worms also contain a list of Internet accessible DNS
servers that they can query if communication to the local
DNS server from the infected host fails.
Our approach can be used to monitor for MX record
queries to uncover systems that query the DNS server di-
rectly for MX records. If a local system other than the
mail server requests an MX record, we may consider this
activity to be anomalous. In order to detect mass-mailing
worm propagation, we simply observe all locally gener-
ated MX queries to the local DNS server that originate
from systems other than the network mail servers. This
detection technique can be developed to identify a mass-
mailing worm infected system in a single propagation at-
tempt.
Anomaly Detection Integration. We have identi(cid:2)ed
that this detection technique can be prone to signi(cid:2)cant
amounts of false positives and negatives when used in an
open network environment. In this scenario, we believe
this technique could be useful if integrated into more so-
phisticated anomaly based detectors to avoid false posi-
tives and negatives.
7 Related Work
The observation of network service use, such as DNS,
offers a means to detect anomalous network activity.
Kruegel et al. [12] orginally proposed the use of applica-
tion speci(cid:2)c knowledge of network services to enable de-
tection of malicious content in individual packets. Their
approach was to use statistical anomaly detection to de-
tect R2L attacks targeted at essiential network services.