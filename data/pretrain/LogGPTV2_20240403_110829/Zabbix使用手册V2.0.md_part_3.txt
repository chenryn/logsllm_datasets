Graphs：添加图形
自定义监控，可以在单台机器上面添加，也可以先定义成模板再把模板应用到主机上
面。
首先是创建key值，
比如我想监控/etc/passwd文件的行数，则，首先定义key，
5.2.1，key 的创建
客户端配置文件如下
#grep-v"#"/etc/zabbix/zabbix_agentd.conf|grep-v"^$"
LogFile=/var/log/zabbix/zabbix_agentd.log #修改日志存储路径，非必要修改
EnableRemoteCommands=0 #允许远程执行命令，非必要修改
Server=127.0.0.1,192.168.1.254.200 #允许哪些ip访问本机的key
StartAgents=8 #启动的客户端进程数
ServerActive=192.168.1.254:10051 #主动监控，填服务端的ip和端口
Hostname=zabbixtest.itnihao.cn #客户端的主机名，注意此主机名需要和实际名
称一样，且server端可以解析
Timeout=30 #超时时间
Include=/etc/zabbix/zabbix_agentd.conf.d/ #配置文件，即独立的配置文件
UnsafeUserParameters=1 #开启此项，自定义key时候可以添加特殊字符
#cat/etc/zabbix/zabbix_agentd.conf.d/count_line_passwd.conf
UserParameter=count.line.passwd,wc-l/etc/passwd|awk'{print$1}'
然后重启客户端
#servicezabbix_agentdrestart
Key值创建后是否成功，可以用命令行来检测
#zabbix_get -s 127.0.0.1 -k count.line.passwd
可以看到有返回值，则说明key值创建成功。
关于更多zabbix_get的用法比较简单，查看帮助即可。
Key值创建的更多内容，参考下一章节。
5.2.2，web 页面创建模板
-------- ----------
------- --------------------------------------------------------------------
注意，这里的key就是前面定义的key
此处略去triggers的创建
Graphs的创建
----------- --
至此，一个简单的自定义可以就完成了。
如何查看grahps呢。
Monitor---grahps--group--host-grahps 选择相应的图形查看即可，此处效果略
5.4 如何自定义 key
虽然上一节已经讲过了key如何创建，但这里还是单独列出来详解其他注意事项.
自定义key即Userparameters这个功能，先看一下官方文档
https://www.zabbix.com/documentation/2.0/manual/config/items/userparameters
Key自定义的语法格式
UserParameter=,
例子
在 /etc/zabbix/zabbix_agentd.conf后面添加如下内容
UserParameter=get.os.type,head -1 /etc/issue
然后重启zabbix_agentd
#service zabbix_agentd restart
运行测试命令，查看key
#zabbix_get -s 127.0.0.1 -k get.os.type
当然，UserParameter的内容可以单独写一个配置文件，便于维护
需要做以下设置，修改/etc/zabbix/zabbix_agentd.conf
Include=/etc/zabbix/zabbix_agentd.conf.d/
如果你的UserParameter包含\ ' ” ` * ? [ ] { } ~ $ ! & ; ( )  | # @这些字符，则需要开启下面这个参数
修改/etc/zabbix/zabbix_agentd.conf
UnsafeUserParameters=1
关于key的名称定义注意事项
•所有的数字;
•所有的小写字母;
•所有大写字母;
•下划线;
•破折号;
•点.
2.传递参数
UserParameter=wc[*],grep-c"$2"$1
这里表示把$2,$1的传递给key，测试如下
#zabbix_get -s 127.0.0.1-k wc[/etc/passwd,root]
注意，这里的/etc/passwd为$1,root为$2,则key最终运行的命令为grep-croot /etc/passwd
格式如下
如果[]中括号里面有多个参数选项的值，每一个参数用用逗号隔开，如：
icmpping[,,200,,500]
5.5 添加 Items
从2.0版本起，zabbix支持Agent,SNMP,JMX,andIPMI等4种方式的检查
Agentd支持的itemskey详见
Item是监控项，是监控的基本元素，每一个监控项对应一个被监控端的采集值。
在Configuration->Hosts界面，我们能看到每个host所包含的items总数，点击对应主
机的items项，可以看到具体的每个item信息，这些items可以引用自templates，也可以自
己创建。
注意：当我们需要监控的服务器的时候，一般是链接模板，如需自定义item，则需要在
此处添加Items。
通过点击具体item名字可以修改已有监控项的属性，点击Satus的链接可以禁用/启用
这个监控项。（注：我们可以通过新建一个template，在template中禁用掉所有不需要用到
的items，然后把同一类hostslinkto这个template，就不用一台台主机去更改items）
新增item可以通过点击右上角的createitem来创建
此处的key值来自zabbix_agentd.conf文件自定义的
如不需要自定义key，可以点击select直接选择
关于如何自定义监控脚本，见后文专题叙述。
关于更多item，请参考官方文档
http://www.zabbix.com/documentation/2.0/manual/config/items
5.6 添加 Triggers
5.6.1 如何配置 Triggers
Trigger是触发器，当Items采集值满足triggers的触发条件时，就会产生actions。
每一个 trigger 必须对应一个 item，但一个 item 可以对应多个trigger。通过设置多个
trigger，实现触发条件的不同，从而达到不同级别的报警。默认的模板中只有一个trigger。
同样，通过点击Configuration->Hosts->Triggers中某个trigger的名字，可以修改trigger
的属性。（注意：引用自template的trigger触发值是不能单独修改的，必须在template中修
改，或是复制一个同样的trigger再修改，然后禁用掉之前的）
新增trigger可以通过点击右上角的createtrigger来创建
Expression中选择对应的item、触发方式及触发值，Severity是告警级别，根据trigger
的严重性来选择。
Zabbix 提供多种trigger触发方式供选择，常用的我们可以选择lastvalue/=/#/N(最
近一次采集值),或是选择maximalvalueforperiodoftime(一段时间内的最大值),等等。可以
根据实际需要来设定触发方式。更多的解释请参考：
http://www.zabbix.com/documentation/2.0/manual/config/triggers
5.6.2 触发器的表达式
感谢http://www.linuxmr.com/2012/zabbix2_0614/161.html的翻译
概述
在触发器中使用表达式是非常灵活的。你可以用它们复杂的逻辑来测试关于监控统计。
一个简单有用的触发器可能像下面的情况：
{:.()}
1、function
触发器函数允许参考收集到的数据，当前时间和其他因素。一个已经完成的支持函数表是可
用的。
2、function parameter
大多数数值型函数接受秒数作为一个变量（argument）
你可以使用前缀＃来指定一个变量（argument）有不同的意思：
函数调用（FUNCTION CALL） 意思（MEANING）
sum(600) 600秒内所有值的和
sum(#5) 最近5秒值的和
函数last在用hash标记前缀时有不同的意义 －－ 它返回给定的第n个值，因此给定值3,
7,2, 6, 5，last(#2)将返回第二个值7，last(#5)将返回第五个值5。
要忽略的函数也必须给它一个参数，例如：last（0）
avg,count,last,minandmax支持在某个时间段之前的，例如avg(1h,1d)，表示1小
时之前的1天的平均值。
你可以在触发器表达式中使用支持的单位符号，例如'5m'（分钟）代替'300s'（秒）或
者'15'（天）代表'86400s'秒。
3、运算符
触发器支持下列运算符（优先级渐降）
优先级 运算符
定义（DEFINITION）
（PRIORITY） （OPERATOR）
1 / 整除（division）
2 * 乘（Multiplication）
3 - 减（Arithmeticalminus）
4 + 加（Arithmeticalplus）
小于（Lessthan）运算符可以这样定义:
5 
A>B⇔ (A>=B+0.000001)
不等于（Notequal）.运算符可以这样定义:
7 #
A#B⇔ (A=B+0.000001)
等于（Isequal). 运算符可以这样定义:
8 =
A=B⇔ (A>B-0.000001)&(A5
'{www.zabbix.com:system.cpu.load[all,avg1]'给出了监控参数的名称。它指定
服务器是'www.linuxmr.com'，被监控关键字是'system.cpu.load[all,avg1]'，
通过使用函数'last()'，我们指定最近的值。最后，'>5'表示来自www.linuxmr.com
的最后负载测量大于5则触发器进入PROBLEM状态。
例子二
www.zabbix.com过载了
{www.zabbix.com:system.cpu.load[all,avg1].last(0)}>5|{www.zabbix.
com:system.cpu.load[all,avg1].min(10m)}>2
无论当前处理器负载大于5还是最近10分钟的负载大于2，该表达式的值都是真
例子三
文件/etc/passwd被更改了。
使用函数diff：
{www.zabbix.com:vfs.file.cksum[/etc/passwd].diff(0)}>0
当文件/etc/passwd之前的checksum值于最近的值不同，则该表达式为真
相似的表达式也可以用在监控重要的文件（如/etc/passwd, /etc/inetd.conf, /kernel等）变
更上
例子四
有人从因特网上下载大文件
使用函数min：
{www.linuxmr.com:net.if.in[eth0,bytes].min(5m)}>100K
当最近5分钟内，eth0接收的字节数大于100KB，则该表达式为真。
例子五
两个SMTP服务器的集群节点都停止了
注意在一个表达式中使用两个不同的主机
{smtp1.linuxmr.com:net.tcp.service[smtp].last(0)}=0&{smtp2.linuxm
r.com:net.tcp.service[smtp].last(0)}=0
当SMTP服务器smtp1.linuxmr.com与smtp2.linuxmr.com都停止时，表达式为真
例子六
zabbix客户端代理需要更新
使用函数str():
{zabbix.linuxmr.com:agent.version.str("beta8")}=1
当zabbix客户端代理有版本beta8时该表达式为真。
例子七
服务器不可达
{zabbix.linuxmr.com:icmpping.count(30m,0)}>5
主机zabbix.linuxmr.com在最近30分钟内超过5次不可达该表达式为真
例子八
最近三分钟内没有回应
使用函数nodata（）：
{zabbix.linuxmr.com:tick.nodata(3m)}=1
'tick'必须使用类型'Zabbixtrapper'。为了这个触发器工作，tick必须定义。该主机应该使用
zabbix_sender定期为该参数发送数据。如果180秒都没有收到数据，该触发器的值变为
PROBLEM。
例子九
CPU在夜间活度
使用函数time（）
{zabbix:system.cpu.load[all,avg1].min(5m)}>2&{zabbix:system.cpu.l
oad[all,avg1].time(0)}>000000&{zabbix:system.cpu.load[all,avg1].t
ime(0)}20)|
({TRIGGER.VALUE}=1&{server:temp.last(0)}>15)
注意使用了一个宏{TRIGGER.VALUE}，这个宏返回当前触发器的值
{count.line.passwd:count.line.passwd.last(#3,300)}#35
&{count.line.passwd:count.line.passwd.last(#1,300)}#35
表示300秒内，第1次和第3次取的值同时不为35，则触发规则
更多触发器的内容详细参考http://pengyao.org/zabbix-triggers-functions.html，整理如下
【翻译】Zabbix触发器支持的函数说明
2013-05-06 by pengyao
 原文出处:
https://www.zabbix.com/documentation/2.0/manual/appendix/triggers/functi
ons
 译者: pengyao
abschange
 参数: 直接忽略后边的参数
 支持值类型:float, int,str,text,log
 描述: 返回最近获取到的值与之前的值的差值的绝对值. 对于字符串类型，0表示值
相等，1表示值不同
avg
 参数: 秒或#num
 支持值类型:float, int
 描述: 返回指定时间间隔的平均值. 时间间隔可以通过第一个参数通过秒数设置或
收集的值的数目(需要前边加上#,比如#5表示最近5次的值) 。如果有第二个，则表示时
间漂移(time shift),例如像查询一天之前的一小时的平均值，对应的函数是
avg(3600,86400), 时间漂移是Zabbix 1.8.2加入进来的
change
 参数: 直接忽略掉后边的参数
 支持值类型:float, int,str,text,log
 描述: 返回最近获取到的值与之前的值的差值. 对于字符串类型，0表示值相等，1
表示值不同
count
 参数: 秒或#num
 支持值类型:float, int,str,text,log
 描述: 返回指定时间间隔内的数值统计。 时间间隔可以通过第一个参数通过秒数设
置或收集的值数目（需要值前边加上#）。本函数可以支持第二个参数作为样本(pattern)
数据，第三个参数作为操作(operator)参数，第四个参数作为时间漂移(timeshift)参数. 对
于样本，整数(iteeger)监控项实用精确匹配，浮点型(float)监控项允许偏差0.0000001
支持的操作(operators)类型:
eq: 相等