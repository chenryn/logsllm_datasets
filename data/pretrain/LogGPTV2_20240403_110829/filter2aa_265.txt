the Constructocat by Jason Costello - https://github.com/jsncostello   
gitDigger
Creating useful wordlists from GitHub
By: WiK & Mubix
We suck at “picturing” things, so in order 
for this presentation to be successful you 
must all strip down to your underwear
CENSORED
The Researcher – WiK
@jaimefilson
We weren't the first to go digging…
Link to blog post
Only problem is you need to 
find a service that is “friendly” 
to “research”
02:09  http://www.mavitunasecurity.com/blog/svn-digger-better-lists-for-forced-browsing/
02:11  nice find
02:11  i wish i had thought of it
02:16  Thats awesome
02:16  ive done similar stuff, now i have a font collection that 10gb of unique fonts
02:17  wish they would add bitbucket, and github to their searches
02:19  ive looked at scrapin github.. theres no real good way to do it
The 30 minute 
I CAN DO THIS!
Solution
but there is no “all repos” list…
Usernames & their repositories
Import os
Import urllib
Import urllib2
Import sqlite3
Enter Python WGET
Got it… now what?
Wordlists
Repositories
Lots of manual review 
and headaches
But finally resulted in
os.walk()
sort
grep
awk
Only the “TOP” repositories
17 hours 
of manual kung-fu to process into 
wordlists
Betterwalk.walk() vs os.walk()
Link to project
Initial Thoughts
The Good News
I got the wordlists that I 
wanted and they were useful
The Bad News
Only the “TOP” repositories
Sqlite3 transactions were slow
17 hours of manual labor sucks
My HDD was now full
Lets Get Serious
(well, kinda...)
FIRST PROBLEM: STORAGE
Storage Options
Pros
   Cheap ($99 USD a year)
   Built-in “indexing”
Cons
    Windows Only
    Crashes OFTEN
    Encryption == SLOW
Pros
   Central, local, fast storage
Cons
    Expensive
Remember… I’m already at 3 TB…
Solution
SECOND PROBLEM: PYTHON WGET
GITHUB API
THIRD PROBLEM: SQLITE SUCKS
Solution
PUTTING IT ALL TOGETHER
Upgrades
Added 2 modes
Downloader
Processor
Added Threading
Replaced sqlite3 with mysql
Upgrades
●
Password Table
●
count
●
name
●
Username Table
●
count
●
name
●
Email Table
●
count
●
name
●
Projects Table
●
name
●
project
●
processed
●
grepped
●
Directories Table
●
Files Table
●
Last Seen ID Table
Added
Script to add items to database
Mode: Downloader
Repositories
Repositories
Mode: Processor
Wordlists
Manual Cleanup
grep/egrep
.sh script
add2database.py
Updated Results
The Good News
I'm now getting ALL public repositories
Generating wordlists now takes automated minutes instead of manual hours
I'm able to store the data over multiple USB HDDs
The Bad News
Carving out data such as usernames, passwords, and emails still requires some manual 
work which takes up a bunch of time
Huge amount of storage needed
An estimated 30TB uncompressed
CUE BIG DATA DRINKING GAME
You can buy our product for the 
low low price of 19.95 per MB, 
maxing at 1 TB, each additional 
TB will cost one child or goat. 
Prices and participation may vary, 
see your BIG DATA representative 
at the door for a list of vendors 
who want to take your money. 
all_dirs.txt
751,991
info
686,812 
logs
645,023 
lib
555,954 
src
490,724 
test
all_files.txt
846,524
README
683,848
index.html
408,574
ChangeLog
307,197
README.txt
132,053
license.txt
usernames.txt
166,997 username
75,794  bob
72,360  users
59,595  admin
45,522  user
38,024  name
29,799  rails
25,853  sa
22,981  root
21,293  test
passwords.txt
358,949
password
118,287 
foobar
75,567  
test
53,238  
secret
35,842
user
Link to wordlists
The Attacker – Mubix
@mubix
the Strongbadtocat by 
The obvious stuff...
● Wordlists for "forced" browsing as with the 
SVN digger project
● Small default passwords list
● static_salts.txt: static salts found within github 
projects.
● #22 file "Exception.php"
● #323 is "file.php"
● #4819 is password.txt (wtf?)
OF 19,260,460 
UNIQUE FILES
Burp
The obvious stuff...
● #370848 ssh1_auth_keys
● #185308 ntlmsso_magic.php
keeps going... too much fun.. but how real world 
is this stuff?
coulda woulda shoulda.. SO WHAT!
coulda woulda shoulda.. SO WHAT!
The not so obvious
● Starting to parse every file from the git 
revision history (thought you removed that 
default password did ya?)
● Mass static code analysis for vulnerabilities
● One of the top directories is ".svn", another is 
".settings" ;-)
● Parsing .gitignore of production targets
● Verify directories w/ HTTP 403 on .
empty_directory and .DS_Store files
The not so obvious
● Run OCR on all image files
● Using list of .txt files for intelligence gathering
● Grep out ALL email addresses
STOP you're just giving them ideas
Thank You!
http://github.com/wick2o/gitdigger
PI:EMAIL
@jaimefilson
Link to wordlists