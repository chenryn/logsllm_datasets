### 8.3.6 Adding a Publication Database (addpubdb)

**Description:**
The `addpubdb` command is used to add a publication database definition for a master node in a multi-master replication system, where an initial snapshot is not invoked. This example demonstrates adding a publication database with specific filter rules and a node priority level.

**Note:**
- A publication must be created in the master definition node before creating additional master nodes.
- Refer to Section 8.3.14 for the command to create a publication.

**Example:**
```bash
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype enterprisedb -dbhost 192.168.2.7 -dbport 5444 \
> -dbuser mmruser -dbpassword ygJ9AxoJEX854elcVIJPTw== \
> -database mmrnode \
> -filterrule 8,16 \
> -repgrouptype m \
> -nodepriority 3
```

**Output:**
```
Adding publication database...
Replicating publication schema...
Publication database added successfully. Publication database id:24
```

---

### 8.3.7 Printing Publication Database IDs (printpubdbids)

**Description:**
The `printpubdbids` command prints the publication database IDs of the publication database definitions.

**Synopsis:**
```bash
-printpubdbids -repsvrfile pubsvrfile
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.

**Example:**
```bash
$ java -jar edb-repcli.jar -printpubdbids -repsvrfile ~/pubsvrfile.prop
```

**Output:**
```
Printing publication database ids...
2
1
24
3
```

---

### 8.3.8 Printing Publication Database Details (printpubdbidsdetails)

**Description:**
The `printpubdbidsdetails` command prints the connection information for each publication database definition.

**Synopsis:**
```bash
-printpubdbidsdetails -repsvrfile pubsvrfile
```

**Output Format:**
```
dbid:host:port:dbname:user
```
**Note:**
- The database userâ€™s password is not displayed.

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.
- `dbid`: The publication database ID assigned to the publication database definition.
- `host`: The IP address of the host on which the publication database server is running.
- `port`: The port number on which the database server is listening for connections.
- `dbname`: The Postgres or SQL Server database name, the Oracle SID, or the Oracle service name of the publication database.
- `user`: The publication database user name.

**Example:**
```bash
$ java -jar edb-repcli.jar -printpubdbidsdetails -repsvrfile ~/pubsvrfile.prop
```

**Output:**
```
Printing publication database ids with details...
id:host:port:database|sid:user
2:192.168.2.7:5444:edb:pubuser
1:192.168.2.6:1521:xe:pubuser
24:192.168.2.7:5444:mmrnode:mmruser
3:192.168.2.6:5444:edb:pubuser
```

---

### 8.3.9 Printing the Controller Database ID (printcontrollerdbid)

**Description:**
The `printcontrollerdbid` command prints the publication database ID of the controller database.

**Synopsis:**
```bash
-printcontrollerdbid -repsvrfile pubsvrfile
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.

**Example:**
```bash
$ java -jar edb-repcli.jar -printcontrollerdbid -repsvrfile ~/pubsvrfile.prop
```

**Output:**
```
Printing Controller database id...
1
```

---

### 8.3.10 Printing the Master Definition Node Database ID (printmdndbid)

**Description:**
For MMR only: The `printmdndbid` command prints the publication database ID of the master definition node.

**Synopsis:**
```bash
-printmdndbid -repsvrfile pubsvrfile
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.

**Example:**
```bash
$ java -jar edb-repcli.jar -printmdndbid -repsvrfile ~/pubsvrfile.prop
```

**Output:**
```
Printing MDN Publication database id...
3
```

---

### 8.3.11 Updating a Publication Database (updatepubdb)

**Description:**
The `updatepubdb` command allows you to change the connection information for an existing publication database definition identified by its publication database ID.

**Synopsis:**
```bash
-updatepubdb -repsvrfile pubsvrfile -pubdbid dbid -dbhost host -dbport port -dbuser user { -dbpassword encrypted_pwd | -dbpassfile pwdfile } [ -oraconnectiontype { sid | servicename } ] -database dbname [ -urloptions jdbc_url_parameters ] [ -nodepriority priority_level ]
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.
- `dbid`: The publication database ID of the publication database definition to be updated.
- `host`: The IP address of the host on which the publication database server is running.
- `port`: The port number on which the database server is listening for connections.
- `user`: The publication database user name.
- `encrypted_pwd`: The password of the database user in encrypted form.
- `pwdfile`: The file containing the password of the database user in encrypted form.
- `-oraconnectiontype`: Specify `sid` if the Oracle system ID (SID) is used to identify the publication database in the `database` parameter. Specify `servicename` if the Oracle service name is used to identify the publication database in the `database` parameter. Note: For Oracle 12c, use the service name.
- `dbname`: The Postgres or SQL Server database name, the Oracle SID, or the Oracle service name of the publication database.
- `jdbc_url_parameters`: Extended usage of JDBC URL parameters such as for support of SSL connectivity. (See Section 7.11 for information on SSL connectivity to the publication database.) Specification of the `urloptions` parameter completely replaces any existing JDBC URL parameters that may have previously been specified with this database. Omission of the `urloptions` parameter deletes any existing JDBC URL parameters that may have previously been specified with this database.
- `priority_level`: For MMR only: Integer value from 1 through 10 assigning the priority level to a master node with 1 having the highest priority and 10 having the lowest priority.

**Example:**
```bash
$ java -jar edb-repcli.jar -updatepubdb -repsvrfile ~/pubsvrfile.prop -pubdbid 1 -dbhost 192.168.2.6 -dbport 1521 -dbuser pubuser -dbpassfile ~/pwdfile -oraconnectiontype sid -database xe
```

**Output:**
```
Updating publication database ...
Publication database with ID 1 is updated successfully.
```

---

### 8.3.12 Removing a Publication Database (removepubdb)

**Description:**
The `removepubdb` command removes a publication database definition.

**Synopsis:**
```bash
-removepubdb -repsvrfile pubsvrfile -pubdbid dbid
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.
- `dbid`: The publication database ID of the publication database definition to be removed.

**Example:**
```bash
$ java -jar edb-repcli.jar -removepubdb -repsvrfile ~/pubsvrfile.prop -pubdbid 1
```

**Output:**
```
Removing Publication Database...
Publication Database removed.
```

---

### 8.3.13 Get Tables for a New Publication (gettablesfornewpub)

**Description:**
The `gettablesfornewpub` command lists the tables and views that are available for inclusion in a new publication from a given publication database definition.

**Synopsis:**
```bash
-gettablesfornewpub -repsvrfile repsvrfile -pubdbid dbid
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.
- `dbid`: The publication database ID of the publication database definition whose available tables and views are to be listed.

**Example:**
```bash
$ java -jar edb-repcli.jar -gettablesfornewpub -repsvrfile ~/pubsvrfile.prop -pubdbid 1
```

**Output:**
```
Fetching tables/views list ...
[[EDB.DEPT, TABLE], [EDB.EMP, TABLE], [EDB.JOBHIST, TABLE], [EDB.SALESEMP, VIEW]]
```

---

### 8.3.14 Creating a Publication (createpub)

**Description:**
The `createpub` command creates a new publication.

**Synopsis:**
```bash
-createpub pubname -repsvrfile pubsvrfile -pubdbid dbid -reptype { s | t } -tables schema_t1.table_1 [ schema_t2.table_2 ] ... [ -views schema_v1.view_1 [ schema_v2.view_2 ] ...] [ -tablesfilterclause "ordinal_t1:filtername_t1:filterclause_t1" [ "ordinal_t2:filtername_t2:filterclause_t2" ] ...] [ -viewsfilterclause "ordinal_v1:filtername_v1:filterclause_v1" [ "ordinal_v2:filtername_v2:filterclause_v2" ] ...] [ -conflictresolution ordinal_t1:{ E | L | N | M | C:customhandler_t1 } [ ordinal_t2:{ E | L | N | M | C:customhandler_t2 } ] ...] [ -standbyconflictresolution ordinal_t1:{ E | L | N | M | C:customhandler_t1 } [ ordinal_t2:{ E | L | N | M | C:customhandler_t2 } ] ...] [ -repgrouptype { m | s } ]
```

**Note:**
- The schema names, table names, and view names that you supply as values for the `tables` and `views` parameters are case-sensitive. Unless quoted identifiers were used to build the database objects, Oracle names must be entered using uppercase letters (e.g., `EDB.DEPT`), and Advanced Server names must be entered in lowercase letters (e.g., `edb.dept`). See Section 10.4.5 for additional information on quoted identifiers and case translation.

**Parameters:**
- `pubname`: The publication name to be given to the new publication.
- `pubsvrfile`: The file containing the publication server login information.
- `dbid`: The publication database ID of the publication database definition subordinate to which the new publication is to be added.
- `-reptype`: Specify `s` if the publication is to be a snapshot-only publication. Specify `t` if the publication is to allow synchronization replications.
- `schema_tn`: The name of the schema containing the nth table of the `tables` parameter list. This value is case-sensitive.
- `table_n`: The table name of the nth table in the `tables` parameter list. This value is case-sensitive.
- `schema_vn`: For SMR only: The name of the schema containing the nth view of the `views` parameter list. This value is case-sensitive.
- `view_n`: For SMR only: View name of the nth view in the `views` parameter list. This value is case-sensitive.
- `ordinal_tn`: The ordinal number (that is, the position in the list counting from left to right starting with 1) of a table in the `tables` parameter list to which an attribute is to be applied.
- `filtername_tn`: The filter name to be assigned to the filter rule on the table.
- `filterclause_tn`: The filter clause to be applied to the table in the `tables` parameter list at the position indicated by `ordinal_tn`.
- `ordinal_vn`: For SMR only: The ordinal number (that is, the position in the list counting from left to right starting with 1) of a view in the `views` parameter list to which an attribute is to be applied.
- `filtername_vn`: The filter name to be assigned to the filter rule on the view.
- `filterclause_vn`: For SMR only: The filter clause to be applied to the view in the `views` parameter list at the position indicated by `ordinal_vn`.
- `-conflictresolution`: For MMR only: For the conflict resolution option, specify `E` for earliest timestamp conflict resolution, `L` for latest timestamp conflict resolution, `N` for node priority conflict resolution, `M` for manual conflict resolution, or `C` for custom conflict handling. The specified conflict resolution applies to the table in the position given by `ordinal_tn` counting from left to right in the `tables` parameter list. If omitted, the default is `E`.
- `-standbyconflictresolution`: For MMR only: For the standby conflict resolution option, specify `E` for earliest timestamp conflict resolution, `L` for latest timestamp conflict resolution, `N` for node priority conflict resolution, `M` for manual conflict resolution, or `C` for custom conflict handling. The specified conflict resolution applies to the table in the position given by `ordinal_tn` counting from left to right in the `tables` parameter list. If omitted, the default is `M`.
- `customhandler_tn`: For MMR only: For the conflict resolution option or the standby conflict resolution option, specify `customhandler_tn` as the function name with an optional schema prefix (formatted as `schema.function_name`) as given in the `CREATE FUNCTION` command for the custom conflict handling function created for the table in the `tables` parameter list at the position indicated by `ordinal_tn`. The custom conflict handling function must be added to the master.

**Example:**
```bash
$ java -jar edb-repcli.jar -createpub MyNewPub -repsvrfile ~/pubsvrfile.prop -pubdbid 24 -reptype t -tables EDB.DEPT EDB.EMP -views EDB.SALESEMP -tablesfilterclause "1:dept_filter:DEPTNO > 10" -conflictresolution 1:E -repgrouptype m
```

**Output:**
```
Creating new publication...
Publication 'MyNewPub' created successfully.
```

---

**Copyright Notice:**
Copyright Â© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.