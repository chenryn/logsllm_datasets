The labels escalate privileges and establish foothold were
identiﬁed with zero FPs, as seen in Table V. Also,
obfuscated code injection, maintain presence, malware
dropped, and attack cleanup labels saw low FP counts of
1, 1, 3, and 4, respectively, highlighting TARDIS’s
attack model detection accuracy.
Most importantly, when all of these attack models are
considered together within a single website, TARDIS is
able to prune individual false positives. TARDIS veriﬁes
the logical
the recorded attack labels,
computes the compromise window, and then tags the
website as compromised or not, as discussed §III-C. This
procedure pruned 38 of
in the code
generation capability label, all 4 FPs in attack cleanup,
all 3 FPs in malware dropped, 8 of the 9 FPs in defense
evasion, and the only FP in obfuscated code injection,
eﬀectively removing 94.7% of the FPs listed in Table V.
Another observation is that the attack tactics vary
greatly across CMS platforms, but a few labels are
present
the maintain
presence, malware dropping, and defense evasion labels
are seen in all compromised CMSs. This is conﬁrmed by
our ground truth investigation. This may seem intuitive,
but it conﬁrms our premonition that CMS-targeting
in all attacks.
In particular,
the 39 FPs
sequence of
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1163
TABLE V: Evaluation of the Multi-Stage Attack Phase Models.
CMS
WordPress
Drupal
Joomla
PivotX
Prestastop
TYPO3 CMS
Bourbon
Contao
Contenido
Malware
Dropped
Attack
Cleanup
Establish
Foothold
Defense
Evasion
Maintain
Presence
Code Gen.
Capability
Escalate
Obf. Code
Injection
Privileges
# #FP # #FP # #FP # #FP # #FP # #FP # #FP # #FP
17
6
8
1
0
0
0
0
2
39
15
8
2
0
2
1
0
1
71
18
13
2
1
3
1
1
5
24
4
4
0
1
1
1
1
3
46
13
7
1
0
3
1
0
2
21
9
2
0
0
1
0
0
1
42
12
10
2
0
2
1
0
2
6
2
1
0
0
0
0
0
0
2
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
4
5
2
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
2
0
1
0
0
0
0
0
0
4
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
attacks overwhelmingly exhibit
attack behaviors.
long-lived multi-stage
Notice that TARDIS recorded 115 out of the 163
websites with code generation capabilities (a common
tactic used in multi-stage attacks). However, from the
Column #FP for code generation capability label
in
Table V, we ﬁnd that in 39 of the websites, these labels
were FPs. This can be attributed to the open-source
nature of the CMSs and the varied coding practices
followed
other
signiﬁcantly higher FP (9 out of 71 websites) is defense
evasion; these are due to the presence of obfuscation used
to prevent visibility into paid CMS plugins that appear
like multi-stage attack behaviors at ﬁrst glance.
developers. The
by CMS
plugin
B. Multi-Stage Attack Timeline
Based on our previous runs of TARDIS, we recorded
the compromise window which was reported or “Not
Compromised” for each website. We evaluate TARDIS’s
correctness by comparing these with our manually
recorded compromise labels for the 163 websites. The
results are presented in Table IV.
Table IV shows the CMS platform and its distribution
in Columns 1 and 2, respectively. Column 3 (#GT)
presents
the ground truth number of compromised
websites in this dataset derived by manual investigation.
Columns 4 through 6 show the number of websites for
which TARDIS output a compromise window. Column 4
(#TP) presents the number of websites for which the
TARDIS compromise window output matched the
ground truth, and Column 5 (#FP) presents the number
of false positives produced by TARDIS. Here, FP is
essentially a “false alarm”, meaning that TARDIS
produced a compromise window, but the website was
known to not be compromised (via our ground truth).
Column 6 (#FN) presents the number of websites that
are compromised and not identiﬁed by TARDIS.
Overall, TARDIS found a total of 83 websites infected
with multi-stage attacks. Interestingly, more than 50% of
these attacks targeted WordPress CMS, as seen in
Table IV. In addition to the 70 known-compromised
websites from §II, TARDIS found the 10 additional
attacks in the added set of 93 websites. TARDIS
reported an attack timeline that matched our ground
truth for
these 80 compromised websites. Manual
veriﬁcation conﬁrmed the correctness of this result. To
the best of our knowledge, we did not ﬁnd any websites
that contained an attack that was missed by TARDIS,
thus showing a zero FN count.
Notice that TARDIS produced 3 FPs, i.e. Column 4
from Table IV shows 3 websites (one from WordPress,
Drupal, and TYPO3 CMS). Our manual
investigation
revealed that all 3 websites contained user-developed
security plugins with obfuscated code, similar to the
tactic used by attackers, which caused TARDIS to
output a compromise window for these websites. Note
that there are several publicly available security plugins
that contain obfuscated code (Sucuri, Wordfence, etc.),
but TARDIS can handle
such well-known benign
obfuscation cases by checking if it belongs to a CMS
security plugin with licensing information.
V. Deploying TARDIS in the Wild
the attack labels
After validating that TARDIS’s analysis accurately
captures
in CMS-based website
backups, we worked with CodeGuard to deploy TARDIS
on a signiﬁcant portion of their data set. We leveraged
this access to nightly backups from 306, 830 unique
websites (spanning from March 2014 to May 2019) to
empirically measure the health of CMS-based websites in
the real world. In this section, we document our ﬁndings
from using TARDIS to understand the threat landscape
with respect to CMS-based websites. We are also in the
process of working with CodeGaurd to inform the
website owners of our ﬁndings and remediate the
identiﬁed attacks.
Experimental Setup. We used a ﬂeet of Amazon Web
Services
r5.2xlarge
instances with 8 virtual CPUs and 64 GB of RAM.
These instances are supervised by the AWS Batch job
scheduling engine to run TARDIS on hundreds of
website backups in parallel.
(AWS) Elastic Compute
We used several tools to assist in the investigation:
Our CMS classiﬁcation is built on top of WhatCMS [30]
and CMS Garden [31]. TARDIS is written in Python
(2500 lines of code) and leverages zxcvbn [27] for entropy
(EC2)
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1164
TABLE VI: Overall Distribution of Compromised Websites and Average File Counts per CMS.
CMS
WordPress
Drupal
Joomla
PivotX
Prestashop
TYPO3 CMS
Contenido
Contao
Number of
Websites
295,774
1,340
4,115
509
464
81
4,543
4
# Comp.
Websites
19,260
215
563
27
86
4
436
0
Total Avg.
Files Count
10,981.9
17,760.0
20,950.0
28,739.7
28,665.3
31,044.5
16,709.8
7,634.0
Only Comp.
CMS
19,072.7
22,288.7
32,391.5
42,075.9
43,032.4
71,984.0
25,851.5
NA
Only Benign
CMS
10,418.4
16,894.5
19,136.5
27992.7
25,396.6
28,917.8
15,739.3
7,634.0
estimation
Pandas [32] for data analysis.
injected
the
in
element
names
and
A. The CMS Landscape
Table VI presents the distribution of compromises in
the 306, 830 websites. Columns 1 and 2 show the CMS
platform and its distribution, respectively. Column 3
shows the number of websites marked as compromised by
TARDIS, i.e., the websites for which TARDIS outputs
multi-stage attack labels and a compromise window.
Columns 4 through 6 show the total average number of
ﬁles (“spatial elements”) for each CMS, the average
number of ﬁles in compromised websites, and the average
number of ﬁles in only the benign websites, respectively.
Table VI provides interesting insights into the attack
landscape of CMSs. As seen in Column 2, the majority of
the websites use WordPress as their underlying CMS. In
this dataset, we see that 96% of the total websites use
WordPress, higher than real-world trends [2]. This is due
in
to the high market
share of WordPress users
CodeGuard’s production set. From Column 2
in
Table VI, it is evident that, except for Contao, all CMSs
in this dataset are victims of multi-stage attacks. In
total, we found 20, 591 compromised websites. There
were 19,260 WordPress websites alone infected with
these attacks (6.5% of the total WordPress websites).
Interestingly, more than 16% of Joomla, 13% of Drupal,
18% of Prestashop, and 9% of Contenido websites were
victims to multi-stage attacks. This goes to show that
not only do these attacks target CMSs, but they target
popular and the less popular CMSs alike. In this dataset,
about 5% of PivotX and TYPO CMS3 websites were
compromised by long-lived multi-stage attacks, showing
that these CMSs might not be popular attack targets
due to their smaller market share.
As seen in Column 4 from Table VI, almost all CMSs
contain tens of thousands of ﬁles on an average. However,
an interesting metric is to compare the average number
of ﬁles in compromised CMSs with those in benign CMSs.
Upon comparing Columns 5 and 6, it becomes evident that
invariably the attacks inject an extremely large number of
ﬁles into the CMS (which we also observed during our
manual investigation). As highlighted in Table VI, almost
all the compromised websites see a 50% or more increase
in ﬁles. The highest bloat in the number of ﬁles is seen for
TYPO3 CMS with a 150% increase in the average number
of ﬁles upon compromise. WordPress stands second, which
sees an average increase of 80%.
B. Evolution of Attacks
20, 591 websites
Table VII presents the distribution of attack models in
that TARDIS identiﬁed as
the
compromised. Rows 1 through 8 present these outputs