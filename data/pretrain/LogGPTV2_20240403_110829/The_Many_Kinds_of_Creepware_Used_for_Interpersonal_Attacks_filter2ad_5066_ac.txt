### 文本优化

#### 引用信息
- **来源链接**: <https://www.youtube.com/watch?v=3MB1dVpSuRk>
- **授权使用限制**: 仅限清华大学。下载时间：2021年3月19日，UTC时间10:03:59，来自IEEE Xplore。使用受限制。

#### 应用分类统计
以下是各类应用的数量及其安装次数的统计数据（单位：千）：
- **来电显示** (Caller ID): 46 / 114
- **信息提取** (Info Extraction): 75 / 173
- **控制** (Control): 13 / 80
- **欺骗** (Spoof): 115 / 379
- **防御** (Defense): 42 / 175
- **监控** (Surveillance): 372 / 913
- **规避** (Evasion): 28 / 87
- **教程** (Tutorial): 86 / 205
- **骚扰** (Harassment): 80 / 62
- **其他** (None): 143 / 388

图4展示了在我们代码库中的50个子类别中排名前1,000的应用程序数量。图例显示了高级别应用程序类别以及每个类别的应用程序数量和该类别的应用程序安装数量。

#### 用户评论示例
“你说这是一个玩笑……但我查找了我的前虐待者的位置，发现他离我家只有一个街区远，这让我非常恐慌并报警。警察搜索了该区域但没有找到他。他们回来后……然后我点击了一下，才发现这是一个愚蠢的恶作剧！我希望这些应用被关闭。”

#### 哈拉斯-轰炸机 (Harassment - Bomber) 类应用
我们编码的一些应用程序属于哈拉斯-轰炸机类别，这类应用允许用户向受害者发送大量短信、电话、电子邮件等。例如，“Message Bomber -send 5000+ sms”这样的应用很难想象有非恶意的使用场景。第七部分B节将详细探讨这些应用及其使用背景。

#### 教程类应用
我们编码了86个相关教程应用，其中大部分提供黑客技巧。手动检查确认，这些教程推荐了许多我们编码的攻击应用（见第七部分B节），此外还提供通用黑客技巧、术语词汇表和论坛。还有一些应用提供了手机越狱教程或实际执行越狱操作，这是许多个人攻击应用的关键步骤。

#### 信息提取类应用
在74个被编码为信息提取的应用中，许多与监控应用类似，提取设备和个人信息，但不是持续性的。相反，这些应用通常进行一次性内容导出（如导出和解密WhatsApp数据库、提取取证信息、隐藏或加密的内容缓存、通话记录、社交媒体数据、位置历史、已删除的短信等）。我们还发现了直接提供黑客工具的应用（如渗透测试应用），以及一些主要用于欺诈的应用，特别是与信用卡相关的应用，包括卡号揭示器、细节查找器、验证器和生成器。两个令人担忧的应用是“Bank Card Validator”和“Credit Card Revealer”，它们经常与一个生成假身份证图像的应用（编码为Spoof - Image）一起出现。

#### 防御类应用
我们的编码揭示了一些明确的迹象，表明受害者正在保护自己或寻找逃避限制的方法。虽然许多分配到其他类别的应用可能对攻击者和受害者都有用，但我们只在防御子类别下编码那些专门设计用于防御监视或其他攻击的应用。最常见的防御类应用包含38个反监视应用，这些应用可以防止、阻止或检测远程或物理接近的监视行为。这些应用使用广泛的反监视机制，包括访问控制、失败登录尝试的反监视和肩窥防御。

#### “无”类应用
在CreepRank排名前1,000的应用中，有143个应用虽然与偷窥软件用户和受害者有关，但并不直接涉及攻击或防御。大多数这些应用在前1,000名中排名较低，只有2个进入前200名。其中包括23个实现Android修改或虚拟机的应用，这些应用吸引了黑客社区和反病毒测试人员。还有18个教程应用，主要涉及Android修改和开发，也有一些关于抓包不忠恋人的应用。14个通信应用提供社交平台的群聊功能、本地约会平台或承诺免费烧号机功能。最后，我们发现了9个索引应用和27个按安装付费（PPI）应用，这些应用链接到许多其他应用并激励用户安装它们。

#### CreepRank的有效性分析
上一节强调了CreepRank探索算法识别的各种人际攻击和防御应用。我们现在详细讨论为什么CreepRank能够找到这些应用，通过回答以下两个问题：(1) CreepRank是否优于其他算法，如随机游走重启（RWR）和基于最大似然估计（MLE）或一阶最大后验概率（MAP）方法？(2) 为什么一些无关的应用会出现在CreepRank的结果中？在后续章节中，我们将进一步通过使用CreepRank来促进对偷窥软件生态系统的深入测量研究，从而突出其有效性。

##### CreepRank与其他算法的比较
CreepRank是一种基于GBA原则的单类半监督探索算法。它不同于大多数恶意软件分析算法，因为它不使用任何描述性特征来限制所发现的偷窥软件应用的性质。我们将其与随机游走重启（RWR）进行比较，后者也是一种适用于我们设置的探索性GBA算法，因为它使用单一类别的标记示例。CreepRank的两个主要元素是基于数据驱动的先验信念对稀有偷窥软件应用的MAP估计（CRNMAP），以及其衡量应用安装之间的n阶相关性的能力。为了理解哪个因素对CreepRank贡献最大，我们将其与使用最大似然估计的迭代版本（CRNMLE）和使用最大后验概率估计的一阶相关性（CR1MAP）进行比较（见第四部分C节）。

为了比较这些算法，我们将编码为“无”类别的应用视为假阳性，而将所有其他应用视为真阳性偷窥软件。我们根据每种算法排名前1,000的应用中偷窥软件应用的百分比来衡量算法质量。两位作者分别对每种算法产生的前1,000个应用进行了编码，并在过程中讨论了可能的代码簿更改，但最终发现所有趋势都已被现有代码簿涵盖（第五部分）。我们的编码员在偷窥软件类别上达到了高评分者间一致性，科恩的卡帕值为0.87。

图5显示了每种算法前1,000个结果中应用类别的直方图。CRNMLE和RWR在其前1,000个应用中有最多的“无”应用。在2017年的数据中，CR1MAP和CRNMAP生成的前1,000个应用仅相差67个，但CR1MAP的67个中有25个是“无”应用，而CRNMAP中只有5个。这表明对于像我们这样大型的数据集，运行CreepRank直到收敛会产生适度的排名改进。

更重要的是CreepRank使用的MAP估计。从CRNMLE和CRNMAP的比较中可以看出这一点。CRNMLE给许多由于随机机会而与偷窥软件共现的罕见应用赋予了高分，导致其前1,000个排名中有857个“无”应用，其中853个观察次数少于10次。尽管RWR的表现略好于CRNMLE，但它对罕见应用也缺乏足够的怀疑态度，导致其前1,000个排名中有693个“无”应用。

为了了解不同算法是否检测到不同类型的偷窥软件，我们检查了RWR检测到的307个偷窥软件应用，其中223个不在CRNMAP的前1,000个应用中。这些漏检的应用是典型的偷窥软件应用，适合现有的代码类别，其中有62个防御性反监视应用，比RWR发现的任何其他类型的应用多两倍。与此同时，CRNMLE检测到了143个偷窥软件应用，其中122个是CRNMAP的漏检。这些也是典型的偷窥软件应用，但较为少见。回想一下，我们的MAP估计故意牺牲了检测罕见偷窥软件应用的能力，以避免CRNMLE倾向于误报的情况，这似乎是合理的，因为罕见应用影响的人数较少。

##### 假阳性分析
CreepRank的前1,000个应用中包括143个非偷窥软件应用，我们将其归类为“无”。我们确定了这些应用出现在CreepRank前1,000个排名中的三个原因。首先，与偷窥软件具有相似性的“无”应用的共安装现象几乎是不可避免的。例如，18个应用是技术与软件开发教程，这些应用经常与黑客和偷窥软件相关的教程一起安装。另外14个通信应用要么类似于烧号机应用，要么提供私人通信服务。在杂项应用中，26个与现有的偷窥软件应用相似，而其他26个则更为随机，其存在由其他原因解释。

其次，27个按安装付费（PPI）和9个索引应用在应用商店中充当枢纽[34]，因此几乎任何图传播算法都会将其排名较高。为了评估它们对排名的影响，我们删除了所有包含这27个PPI应用的设备，并重新运行了CreepRank。结果是47个应用（包括27个PPI应用）从排名中消失，其中23个是“无”应用。八个被删除的“无”应用是……

希望这个优化后的文本更加清晰、连贯和专业。如果有更多具体需求，请随时告诉我。