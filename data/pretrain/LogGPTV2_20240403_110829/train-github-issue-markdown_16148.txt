### 问题描述

在使用 Ansible 运行以下命令时，遇到了一个失败的情况：

```sh
$ ansible -m raw localhost -a 'echo connection' --sudo -K -vvvv -c local
```

输出如下：

```sh
Using /etc/ansible/ansible.cfg as config file
SUDO password: 
Loaded callback minimal of type stdout, v2.0
ESTABLISH LOCAL CONNECTION FOR USER: badger
127.0.0.1 EXEC /bin/sh -c 'sudo -H -S  -p "[sudo via ansible, key=dsvxgavwyxalsjrucewuzwdyxmpasolo] password: " -u root /bin/sh -c '"'"'echo BECOME-SUCCESS-dsvxgavwyxalsjrucewuzwdyxmpasolo; echo connection'"'"''
localhost | FAILED | rc=0 >>
ERROR! privilege output closed while waiting for password prompt:
BECOME-SUCCESS-dsvxgavwyxalsjrucewuzwdyxmpasolo
connection
```

然而，当使用 `/bin/echo` 或者通过 SSH 连接到远程主机时，命令成功执行：

```sh
$ ansible -m raw localhost -a '/bin/echo connection' --sudo -K -vvvv -c local
SUDO password: 
localhost | SUCCESS | rc=0 >>
connection
```

```sh
$ ansible -m raw -i 'rhel7-test,' '*' -a 'echo connection' --sudo -K
SUDO password: 
rhel7-test | SUCCESS | rc=0 >>
connection
```

```sh
$ ansible -m raw -i 'rhel7-test,' '*' -a '/bin/echo connection' --sudo -K
SUDO password: 
rhel7-test | SUCCESS | rc=0 >>
connection
```

此外，在 Ansible 1.9.x 中，原始命令也能正常工作：

```sh
$ ansible -m raw localhost -a 'echo connection' --sudo -K
SUDO password: 
localhost | success | rc=0 >>
connection
```

### 分析

从上述现象可以推断出，问题可能与 `echo` 命令的 shell 内置版本有关。当使用 `/bin/echo` 时，命令成功执行，而使用内置 `echo` 时则失败。此外，本地连接和 SSH 连接之间的输出格式差异也可能是一个线索。

### 解决方案

1. **使用完整路径**：始终使用 `/bin/echo` 而不是内置的 `echo`。
2. **启用 Pipelining**：确保在 `ansible.cfg` 中启用了 `pipelining` 选项，这可以提高性能并解决某些权限问题。

在 `ansible.cfg` 中添加或修改以下配置：

```ini
[privilege_escalation]
become_method = sudo
becom_user = root

[defaults]
pipelining = True
```

### 结论

通过使用 `/bin/echo` 和启用 `pipelining`，可以解决该问题。如果问题仍然存在，建议检查 `sudo` 配置和环境变量设置，以确保没有其他因素干扰。