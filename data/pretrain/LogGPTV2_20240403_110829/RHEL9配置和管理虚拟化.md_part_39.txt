      balloon.rss=1005456
    ```
:::
::: itemizedlist
**其他资源**
-   [使用 web
    控制台添加和删除虚拟机内存](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-machine-ram-using-the-web-console_configuring-virtual-machine-ram "使用 web 控制台添加和删除虚拟机内存"){.link}
-   [优化虚拟机 CPU
    性能](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#optimizing-virtual-machine-cpu-performance_optimizing-virtual-machine-performance-in-rhel "优化虚拟机 CPU 性能"){.link}
:::
:::
:::
::: section
::: titlepage
# []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#optimizing-virtual-machine-i-o-performance_optimizing-virtual-machine-performance-in-rhel}优化虚拟机 I/O 性能 {.title}
:::
虚拟机(VM)的输入和输出(I/O)功能可能会显著限制虚拟机的整体效率。要解决这个问题，您可以通过配置块
I/O 参数来优化虚拟机的 I/O。
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#tuning-block-i-o-in-virtual-machines_optimizing-virtual-machine-i-o-performance}在虚拟机中调整块 I/O {.title}
:::
当一个或多个虚拟机正在使用多个块设备时,可能需要通过修改虚拟设备的 I/O
优先级来调整虚拟设备的 [*I/O 权重*]{.emphasis}。
增加设备的 I/O 权重会增加设备的 I/O
带宽的优先级，从而为它提供更多主机资源。同样的，降低设备的权重可使其消耗较少的主机资源。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
每个设备的 `weight`{.literal} 值都必须在 `100`{.literal} 到
`1000`{.literal} 范围内。或者，该值可以是
`0`{.literal}，这会从每个设备列表中删除该设备。
:::
::: title
**步骤**
:::
显示和设置虚拟机的块 I/O 参数：
::: orderedlist
1.  显示虚拟机的当前 ``{.literal} 参数：
    `# virsh dumpxml VM-name`{.literal}
    ``` programlisting
      [...]
        800
          /dev/sda
          1000
          /dev/sdb
          500
      [...]
    ```
2.  编辑指定设备的 I/O 加权：
    ``` literallayout
    # virsh blkiotune VM-name --device-weights device, I/O-weight
    ```
    例如：以下将 [*liftrul*]{.emphasis} 虚拟机中的
    [*/dev/sda*]{.emphasis} 设备的权重改为 500。
    ``` literallayout
    # virsh blkiotune liftbrul --device-weights /dev/sda, 500
    ```
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#disk-i-o-throttling-in-virtual-machines_optimizing-virtual-machine-i-o-performance}虚拟机中的磁盘 I/O 节流 {.title}
:::
当多个虚拟机同时运行时，它们可能会干扰使用过量磁盘 I/O 的系统性能。KVM
虚拟化中的磁盘 I/O 节流提供了设置从虚拟机发送到主机机器的磁盘 I/O
请求的限制。这可以防止虚拟机过度利用共享资源并影响其他虚拟机的性能。
要启用磁盘 I/O
节流，对从附加到虚拟机的每个块设备发送到主机机器时发送的磁盘 I/O
请求设置限制。
::: orderedlist
**步骤**
1.  使用 `virsh domblklist`{.literal}
    命令列出指定虚拟机上所有磁盘设备的名称。
    ``` literallayout
    # virsh domblklist rollin-coal
    Target     Source
    ------------------------------------------------
    vda        /var/lib/libvirt/images/rollin-coal.qcow2
    sda        -
    sdb        /home/horridly-demanding-processes.iso
    ```
2.  找到您要节流的虚拟磁盘挂载的主机块设备。
    例如，如果您想要减慢上一步中的 `sdb`{.literal}
    虚拟磁盘，以下输出表明磁盘已挂载到 `/dev/nvme0n1p3`{.literal} 分区。
    ``` literallayout
    $ lsblk
    NAME                                          MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
    zram0                                         252:0    0     4G  0 disk  [SWAP]
    nvme0n1                                       259:0    0 238.5G  0 disk
    ├─nvme0n1p1                                   259:1    0   600M  0 part  /boot/efi
    ├─nvme0n1p2                                   259:2    0     1G  0 part  /boot
    └─nvme0n1p3                                   259:3    0 236.9G  0 part
      └─luks-a1123911-6f37-463c-b4eb-fxzy1ac12fea 253:0    0 236.9G  0 crypt /home
    ```
3.  使用 `virsh blkiotune`{.literal} 命令为块设备设置 I/O 限制。
    ``` literallayout
    # virsh blkiotune VM-name --parameter device,limit
    ```
    以下示例将 `rollin-coal`{.literal} 上的 `sdb`{.literal}
    磁盘节流为每秒 1000 个读写 I/O 操作，每秒的读写 I/O 操作吞吐量 50
    MB。
    ``` literallayout
    # virsh blkiotune rollin-coal --device-read-iops-sec /dev/nvme0n1p3,1000 --device-write-iops-sec /dev/nvme0n1p3,1000 --device-write-bytes-sec /dev/nvme0n1p3,52428800 --device-read-bytes-sec /dev/nvme0n1p3,52428800
    ```
:::
::: itemizedlist
**附加信息**
-   在各种情况下，磁盘 I/O
    节流非常有用，例如，属于不同客户的虚拟机在同一主机上运行，或者在为不同的虚拟机提供服务质量时。磁盘
    I/O 节流还可用来模拟较慢的磁盘。
-   I/O 节流可以独立于附加到虚拟机的每个块设备应用，并支持对吞吐量和 I/O
    操作的限制。
-   红帽不支持使用 `virsh blkdeviotune`{.literal} 命令在虚拟机上配置 I/O
    节流。如需了解在使用 RHEL 9
    作为虚拟机主机时不支持的功能的更多信息，请参阅 ["RHEL 9
    虚拟化不支持的功能"一节](#assembly_feature-support-and-limitations-in-rhel-9-virtualization_configuring-and-managing-virtualization.html#unsupported-features-in-rhel-9-virtualization_feature-support-and-limitations-in-rhel-9-virtualization "RHEL 9 虚拟化不支持的功能"){.xref}。
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#configuring-multi-queue-virtio-scsi_optimizing-virtual-machine-i-o-performance}启用多队列 virtio-scsi {.title}
:::
在虚拟机(VM)中使用 `virtio-scsi`{.literal} 存储设备时，[*multi-queue
virtio-scsi*]{.emphasis} 功能可提高存储性能和可扩展性。它使每个虚拟
CPU(vCPU)可以有一个单独的队列，并在不影响其他 vCPU 的情况下使用中断。
::: itemizedlist
**流程**
-   要为特定虚拟机启用多队列 virtio-scsi 支持，请将以下内容添加到虚拟机
    XML 配置中，其中 [*N*]{.emphasis} 是 vCPU 队列总数：
    ``` programlisting
    ```
:::
:::
:::
::: section
::: titlepage
# []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#optimizing-virtual-machine-cpu-performance_optimizing-virtual-machine-performance-in-rhel}优化虚拟机 CPU 性能 {.title}
:::
与主机机器中的物理 CPU 类似，vCPU 对于虚拟机(VM)性能至关重要。因此，优化
vCPU 可能会对虚拟机的资源效率产生重大影响。优化 vCPU：
::: orderedlist
1.  调整分配给虚拟机的主机 CPU 数。您可以使用
    [CLI](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance "使用命令行界面添加和删除虚拟 CPU"){.link}
    或 [Web
    控制台](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance "使用 Web 控制台管理虚拟 CPU"){.link}进行此操作。
2.  确保 vCPU 模型与主机的 CPU 型号一致。例如，将
    [*testguest1*]{.emphasis} 虚拟机设置为使用主机的 CPU 型号：
    ``` literallayout
    # virt-xml testguest1 --edit --cpu host-model
    ```
3.  [取消激活内核相同页面合并(KSM)](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#deactivating-ksm_optimizing-virtual-machine-cpu-performance "取消激活内核相同页面合并"){.link}。
4.  如果您的主机使用非一致性内存访问(NUMA)，您也可以为其虚拟机[**配置
    NUMA**]{.strong}。这会尽可能将主机的 CPU 和内存进程映射到虚拟机的
    CPU 和内存进程。实际上，NUMA 调优为 vCPU
    提供更简化的访问分配给虚拟机的系统内存，从而可提高 vCPU 处理效率。
    详情请参阅 [在虚拟机中配置
    NUMA](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#configuring-numa-in-a-virtual-machine_optimizing-virtual-machine-cpu-performance "在虚拟机中配置 NUMA"){.link}
    以及 [Sample vCPU
    性能调优场景](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#sample-vcpu-performance-tuning-scenario_optimizing-virtual-machine-cpu-performance "vCPU 性能调整场景示例"){.link}。
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance}使用命令行界面添加和删除虚拟 CPU {.title}
:::
要增加或优化虚拟机(VM)的 CPU 性能，您可以添加或删除分配给虚拟机的虚拟
CPU(vCPU)。
当在运行的虚拟机上执行时，这也被称为 vCPU 热插和热拔。但请注意，RHEL 9
不支持 vCPU 热拔，红帽不建议使用它。
::: itemizedlist
**先决条件**
-   [**可选：**]{.strong}查看目标虚拟机中的 vCPU 的当前状态。例如，显示
    [*testguest*]{.emphasis} 虚拟机上的 vCPU 数量：
    ``` literallayout
    # virsh vcpucount testguest
    maximum      config         4
    maximum      live           2
    current      config         2
    current      live           1
    ```
    此输出显示 [*testguest*]{.emphasis} 目前使用 1 个 vCPU，另外 1 个
    vCPu 可以热插入以提高虚拟机性能。但是，重新引导后，vCPU
    [*testguest*]{.emphasis} 使用的数量会改为 2，而且能够热插 2 个
    vCPU。
:::
::: orderedlist
**流程**
1.  调整可附加到虚拟机的 vCPU 数量上限，该数量对虚拟机下次引导生效。
    例如，要将 [*testguest*]{.emphasis} 虚拟机的最大 vCPU 数量增加到 8:
    ``` literallayout
    # virsh setvcpus testguest 8 --maximum --config
    ```
    请注意，最大可能受 CPU
    拓扑、主机硬件、虚拟机监控程序和其他因素的限制。
2.  调整附加到虚拟机的当前 vCPU
    数量，最多调整上一步中配置的最大值。例如：
    ::: itemizedlist
    -   将附加到正在运行的 [*testguest*]{.emphasis} 虚拟机的 vCPU
        数量增加到 4:
        ``` literallayout
        # virsh setvcpus testguest 4 --live
        ```
        这会增加虚拟机的性能和主机的 [*testguest*]{.emphasis}
        负载占用，直到虚拟机下次引导为止。
    -   将附加到 [*testguest*]{.emphasis} 虚拟机的 vCPU 数量永久减少至
        1：
        ``` literallayout
        # virsh setvcpus testguest 1 --config
        ```
        这会降低虚拟机的性能和 [*testguest*]{.emphasis}
        的主机负载占用。但是，如果需要可热插入虚拟机以暂时提高性能。
    :::
:::
::: itemizedlist
**验证**
-   确认虚拟机的 vCPU 的当前状态反映了您的更改。
    ``` literallayout
    # virsh vcpucount testguest
    maximum      config         8
    maximum      live           4
    current      config         1
    current      live           4