• Stdout:  The ultimate database abstraction layer
• Allows us to insert data into any number of databases
• API doesn‟t need to be linked with scanrand as a client
• Stdout doesn‟t work too well (if at all) for report generation
• Does work over SSH
– Security issue:  Passing raw SQL allows for injection attacks; may 
want to locally parse packets into SQL for untrusted servers
Copyright© 2003 Avaya Inc. All rights reserved
23
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
State Reconstruction Strategies
• Generic Model (Example:  OS Fingerprinting)
– Identify set of packets that elicits uniquely identifiable 
hosts
• Nmap algorithm
• New xprobe work from Ofir Arkin
• Temporal fingerprinting
– Insert not scan but scan configuration into a table
– Compare scan results to scan config
• No replies on host in range:  Host unreachable (include ICMP 
Unreachable parsing)
• Some replies on host in range:  Host needs more packets – trigger 
retry in background
• All replies on host in range:  Compile results into format assumed 
by nmap/xprobe, pass struct to their evaluation routine.  Add 
results to another table.
Copyright© 2003 Avaya Inc. All rights reserved
24
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 4:  TCP Spoofing
• TCP Spoofing
– Not normally possible – every packet sent (except the 
SYN) contains a token from a window of previously 
received packets
– Some tools exist to blindly spoof – or measure ability for 
blind spoofing of – TCP ISN‟s (the token in question).
• Phentropy + OpenQViz
– Since another node cannot acquire the token, it cannot 
impersonate the server
• But what if the server sent the impersonator the token?
Copyright© 2003 Avaya Inc. All rights reserved
25
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Bandwidth Brokering
• Is it possible for a single host to do load balancing across nearly 
arbitrary network boundries, without any special code on the client?
• Yes – by transforming the server into a mere redirector of client-
provided packets, and having the actual (and anonymous) servers 
spoof the source IP of the redirector when providing the payload
• Global Load Distribution
– Anyone who can spoof themselves as the redirector can serve clients
• Central Traffic Monitoring
– Each forwarded ACK contains, in its ACK#, the number of bytes sent 
by the anonymous server to the client.  As the redirector forwards 
those ACKs, it’s able to monitor and measure the quality of the link.
• Session migration:
– Since the client always believes they‟re receiving packets from the 
redirector, the redirector can (with a little bit of magic to synchronize 
SEQ#‟s) simply start forwarding ACKs to a less overloaded server.
• Works for streams – MP3 Radio Stations, Web Servers, etc.
• Much less bandwidth to move empty ACKs than payloads
Copyright© 2003 Avaya Inc. All rights reserved
26
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Bandwidth Brokering HOWTO
• Redirector
– Upon receiving packet from client to redirected IP/Port, change 
IP Destination to redirector based on rule, recalc checksums, 
and send packet out appropriate interface
• Stateless rules:  TCP Source Port, IP Source (using geo-coding), 
etc.
• Stateful rules:  Who‟s moving the least data, who‟s dropped the 
fewest packets, etc.
• Anonymous Server
– Before sending packet with the source port of an anonymous 
service, change the source IP to that of the redirector, recalc 
checksums, and send packet.
• Client
– Do nothing, except notice the TTL bounce around as your 
stream comes from different sources.
Copyright© 2003 Avaya Inc. All rights reserved
27
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• SSL vs. IDS:  The Eternal Conflict
– SSL Annoys Me.
– Certificate compromise is extraordinarily damaging – all 
past data lost, all future data lost, attacker only needs to 
passively monitor or sniff
• IDS Annoys Me.
– “We‟re under attack!”  “That‟s nice, dear.”
– I respect those who have faith in both
• The conflict between the two annoys me most!
Copyright© 2003 Avaya Inc. All rights reserved
28
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• IDS monitors the network traffic between the trusted 
and the untrusted, watching for attacks
• SSL encrypts the network traffic between the trusted 
and the untrusted, blinding all watchers except for the 
presumably vulnerable endpoint
• Choice:  Suppress passive and suffer active, or 
suppress active and suffer passive.
• Ouch.
Copyright© 2003 Avaya Inc. All rights reserved
29
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• Certificate Transfer
– IDS gets a copy of the cert
– Violates 1st Law of Private Keys:  Thou Shalt Not 
Transport Thy Private Key
– Adds RSA decryption load to IDS, which is already 
scrounging for cycles
– ssldump can be pressed into service today to support 
this for SSL3
• Attack:  Switch to SSL2
Copyright© 2003 Avaya Inc. All rights reserved
30
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• Mix IDS w/ Inline SSL Accelerators
– IDS lives between accel and server farm
– IDS‟s are famously DoSable – use hubbed net
– Servers never see cryptography (can‟t make any 
decisions based on it)
– Issues with HTTP rewriting
– Puts plaintext on a wire
Copyright© 2003 Avaya Inc. All rights reserved
31
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• Master Secret serves six keys:
–
Two handle encryption from client to server and vice versa
–
Two handle authentication from client to server and vice versa
–
Two handle initialization vectors from client to server and vice versa
•
3DES-CBC
–
These keys are completely independent
• Selective Centralized Monitoring of SSL-Encrypted Traffic
–
Since we have independent keys for independent traffic, we can transfer just 
the encryption key from the client to the server to the IDS -- it'll pick up the 
traffic from the insecure side of the network, without being able to intercept 
presumably secure (or at least mandatorily unshareable) content.
–
IDS doesn't need to do RSA -- just pick up keys on an encrypted channel
–
Key transfer occurs before data transfer -- can disauthorize traffic
–
IV may introduce interesting capability -- read traffic *after* highly sensitive 
exchange (authentication credentials)
•
UNVERIFIED
–
Works with Bandwidth Brokering!
Copyright© 2003 Avaya Inc. All rights reserved
32
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 5:  SSL vs. IDS
• Plaintext Forwarding over Encrypted Tunnel
– “I got this message from a user…”
• Optionally:  “Should I respond?”
• Adds latency if each message needs to be authenticated
– Relatively high bandwidth
– Doesn‟t require interfacing with crypto engine, or even web 
server
• Can be built into web applications, which are necessarily passed 
the web request of the client
• Totally immune to dissynchrony
• Can be even more selective about what traffic to expose / verify
– Disadvantage:  Not as cool
Copyright© 2003 Avaya Inc. All rights reserved
33
Avaya - Proprietary (Restricted)   Solely for authorized persons having a need to know pursuant to Company instructions
Layer 7: Generic ActiveX Encapsulation
• Is it possible to use ActiveX to deploy something besides spyware, 
without writing custom applications / wrappers?
• Yes – Any win32 application – any .EXE file! -- can be 
cryptographically signed and used instead of a genuine ActiveX 
object
– Object GUID is not checked; code only needs to be self-signed
– Applications that require multiple files simply require a CAB to 
be generated containing all that is needed, and a simple .INF 
file that describes which executable to launch
– Examples:  http://www.doxpara.com/apps
• Putty, OpenSSH, etc.
• Demo