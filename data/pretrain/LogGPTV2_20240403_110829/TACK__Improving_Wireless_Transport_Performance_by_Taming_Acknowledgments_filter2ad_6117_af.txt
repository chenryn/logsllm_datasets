mechanism, our current experience shows that TACK does
not impact much on the performance of congestion controllers.
However, we believe more substantial investigations are need-
ed in the future, to answer the question of how TACK works
with more congestion controllers such as CUBIC, Vegas, and
Compound TCP.
TCP splitting. TCP splitting is a possible way to reduce the
complexity of the TACK-based protocol design. This is based
on the fact that the last-mile wireless network usually has
a smaller delay and converges fast. However, TCP splitting
uses a proxy access node that divides the end-to-end TCP
connection, which needs further modification on the access
point (router). Another well-known problem of TCP splitting
Figure 15: Evaluation of TCP friendliness. We ran-
domly sample bandwidth between 1 and 100 Mbps,
RTT between 1 and 200 ms, and bottleneck buffer
size between 0.5 and 5 ùëèùëëùëù. The flows are run concur-
rently for 60 seconds. We report the average ratio of
the throughput (Y axis) achieved by each flow to its
ideal fair share for all algorithms being tested.
is that the split TCP connection is no longer reliable or
secure, and a server failure may cause the client to believe
that data has been successfully received when it has not. The
cost performance of TACK with/without TCP splitting is
worth being further studied.
8 CONCLUSION
To the best of our knowledge, this is the first work to give a
full protocol design with minimized ACK frequency required
on the transport layer. The TACK-based acknowledgement
mechanism introduces more types of ACKs and carries more
information in ACKs so as to reduce the number of ACKs
required. In particular, IACKs speed up feedback for different
instant events (e.g., packet losses), and TACK periodically
assures feedback robustness by carrying rich information in
ACKs. The protocols based on TACK are therefore capable to
achieve robust loss recovery, accurate round-trip timing, and
effective send rate control. A TACK-based protocol is a good
replacement of the legacy TCP to compensate for scenarios
where the acknowledgement overhead is non-negligible (i.e.,
WLAN scenarios), and meanwhile, it also works well in WAN
scenarios. This serves as a strong validation of TACK.
This work does not raise any ethical issues.
ACKNOWLEDGMENTS
We thank Yi Zeng, Xinping Chen, Shengjun Chen, and Ruix-
iang Guo from Huawei Computer Network and Protocol Lab
for the work and support over the years. We thank Zhiqiang
Fan, Hua Yu, Xiongzuo Pan, Dong Yang, Tao Bai, and Meng
Luo for helping to build the testbed. We are grateful for
conversations with and feedback from Li Li, Junsen Chen,
Dang Su, and Fanzhao Wang. We thank Feng Gao, Jing Zuo,
and Fang Liu for helping to polish the language. We also
thank the anonymous reviewers and our shepherd, Radhi-
ka Mittal, for their valuable feedback. Ke Xu is supported
by NSFC Project with No. 61825204 and No. 61932016,
Beijing Outstanding Young Scientist Program with No. B-
JJWZYJH01201910003011. Keith Winstein acknowledges
funding from NSF grants CNS-1909212 and CNS-1763256 for
the support on the Pantheon open-source project [33], which
contributes to the horizontal evaluation of this work among
a collection of transport protocols.
BBR  CUBICTACK CUBICTACK  BBR00.511.522.5Average RatioRatio=ThroughputIdealThroughputTCP BBRTCP CUBICTCP-TACKTACK: Improving Wireless Transport Performance by Taming Acknowledgments
SIGCOMM ‚Äô20, August 10‚Äì14, 2020, Virtual Event, NY, USA
REFERENCES
[1] Brian Adamson, Carsten Bormann, Mark Handley, and Joe Mack-
er. 2009. RFC 5740: Nack-oriented reliable multicast (NORM)
transport protocol. IETF (2009).
[2] Amit Aggarwal, Stefan Savage, and Thomas Anderson. 2000.
Understanding the performance of TCP pacing. In Proceedings
of IEEE INFOCOM. 1157‚Äì1165.
[3] Ammar Mohammed Al-Jubari. 2013. An adaptive delayed ac-
knowledgment strategy to improve TCP performance in multi-hop
wireless networks. Springer WPC 69, 1 (2013), 307‚Äì333.
[4] Wi-Fi Alliance. 2019. High-definition content sharing on wi-fi de-
vices everywhere. https://www.wi-fi.org/discover-wi-fi/miracast.
[5] Wi-Fi Alliance. 2019. Wi-Fi direct. https://www.wi-fi.org/
discover-wi-fi/wi-fi-direct.
[6] Mark Allman. 1998. On the generation and use of TCP acknowl-
edgments. ACM SIGCOMM CCR 28, 5 (1998), 4‚Äì21.
[7] Mark Allman, Vern Paxson, and Ethan Blanton. 2009. RFC 5681:
TCP congestion control. IETF (2009).
[8] Eitan Altman and Tania Jim¬¥enez. 2003. Novel delayed ACK
techniques for improving TCP performance in multihop wireless
networks. In Proceedings of IFIP PWC. 237‚Äì250.
[9] Farzaneh Razavi Armaghani, Sudhanshu Shekhar Jamuar, Sabira
Khatun, and Mohd Fadlee A. Rasid. 2011. Performance analysis of
TCP with delayed acknowledgments in multi-hop ad-hoc networks.
Springer WPC 56, 4 (2011), 791‚Äì811.
[10] Venkat Arun and Hari Balakrishnan. 2018. Copa: Practical
delay-based congestion control for the internet. In Proceedings of
USENIX NSDI. 329‚Äì342.
[11] IEEE Standards Association. 2016. Wireless LAN medium access
control (MAC) and physical layer (PHY) specifications. https:
//ieeexplore.ieee.org/document/7786995.
[12] Frank Aurzada, Martin L¬¥evesque, Martin Maier, and Martin
Reisslein. 2014. FiWi access networks based on next-generation
PON and gigabit-class WLAN technologies: A capacity and delay
analysis. IEEE/ACM Transactions on Networking (ToN) 22, 4
(2014), 1176‚Äì1189.
[13] Hari Balakrishnan, Venkata N. Padmanabhan, Godred Fairhurst,
and Mahesh Sooriyabandara. 2002. RFC 3449: TCP performance
implications of network path asymmetry. IETF (2002).
[14] Sumitha Blanton, A. L. Narasimha Reddy, Mark Allman, and
Ethan Blanton. 2006. RFC 4653: Improving the robustness of
TCP to non-congestion events. IETF (2006).
[15] R. Braden. 1989. RFC 1122: Requirements for internet hosts -
communication layers. IETF (1989).
[16] Lawrence S. Brakmo, Sean W. O‚ÄôMalley, and Larry L. Peterson.
1994. TCP Vegas: New techniques for congestion detection and
avoidance. ACM SIGCOMM CCR 24, 4 (1994), 24‚Äì35.
[17] Neal Cardwell, Yuchung Cheng, C. Stephen Gunn, Soheil Has-
sas Yeganeh, and Van Jacobson. 2016. BBR: Congestion-based
congestion control. ACM Queue 14, 5 (2016), 20‚Äì53.
[18] Neal Cardwell, Yuchung Cheng, C. Stephen Gunn, So-
Ian Swett, Jana Iyengar, Victor
heil Hassas Yeganeh,
Vasiliev, and Van Jacobson. 2018.
BBR IETF 101 up-
date. https://datatracker.ietf.org/meeting/101/materials/slides-
101-iccrg-an-update-on-bbr-work-at/-google-00.
[19] Hongyuan Chen, Zihua Guo, Richard Yuqi Yao, Xuemin Shen, and
Yanda Li. 2006. Performance analysis of delayed acknowledgment
scheme in UWB-based high-rate WPAN. IEEE TVT 55, 2 (2006),
606‚Äì621.
[20] Jiwei Chen, Mario Gerla, Yeng Zhong Lee, and M. Y. Sanadidi.
2008. TCP with delayed ack for wireless networks. Elsevier Ad
Hoc Networks 6, 7 (2008), 1098‚Äì1116.
[21] Yuchung Cheng and Neal Cardwell. 2016. RACK: A time-based
fast loss detection algorithm for TCP. Work in progress, IETF
(2016).
[22] Inho Cho, Keon Jang, and Dongsu Han. 2017. Credit-scheduled
delay-bounded congestion control for datacenters. In Proceedings
of ACM SIGCOMM. 239‚Äì252.
[23] Cisco. 2019. Cisco predicts more ip traffic in the next five years
than in the history of the internet. https://newsroom.cisco.com/
press-release-content?type=webcontent&articleId=1955935.
[24] Cisco. 2020. Cisco visual networking index: forecast and trends,
2018-2023. https://www.cisco.com/c/en/us/solutions/collateral/
service-provider/visual-networking-index-vni/white-paper-c11-
741490.html.
[25] Florin Dobrian, Vyas Sekar, Asad Awan, Ion Stoica, Dilip Antony
Joseph, Aditya Ganjam, Jibin Zhan, and Zhang Hui. 2011. Un-
derstanding the impact of video quality on user engagement. In
Proceedings of ACM SIGCOMM.
[26] Mo Dong, Qingxi Li, Doron Zarchy, Philip Brighten Godfrey, and
Michael Schapira. 2015. PCC: Re-architecting congestion control
for consistent high performance. In Proceedings of USENIX NSDI.
395‚Äì408.
[27] Mo Dong, Tong Meng, Doron Zarchy, Engin Arslan, Yossi Gilad,
Brighten Godfrey, and Michael Schapira. 2018. PCC Vivace:
Online-learning congestion control. In Proceedings of USENIX
NSDI. 343‚Äì356.
[28] Ge Fei, Liansheng Tan, and Moshe Zukerman. 2008. Throughput
of FAST TCP in asymmetric networks. IEEE Communications
Letters 12, 2 (2008), 158‚Äì160.
[29] Fillpthepipe. 2019. Ackemu. https://github.com/fillthepipe/
ackemu.
[30] Fillpthepipe. 2020. A Patch to allow changing TCP ACK frequen-
cy. https://github.com/fillthepipe/TcpAckThinning.
[31] Sally Floyd and Eddie Kohler. 2006. RFC 4341: Profile for data-
gram congestion control protocol (DCCP). IETF (2006).
[32] Richard Fox. 1989. RFC 1106: TCP big window and nak options.
IETF (1989).
[33] Y. Yan Francis, Ma Jestin, D. Hill Greg, Raghavan Deepti, S. Wah-
by Riad, Levis Philip, and Winstein Keith. 2018. Pantheon: The
training ground for Internet congestion-control research. In Pro-
ceedings of USENIX ATC. 1‚Äì13.
[34] Cheng P. Fu and Soung C. Liew. 2003. A remedy for perfor-
mance degradation of TCP vegas in asymmetric networks. IEEE
Communications Letters 7, 1 (2003), 42‚Äì44.
[35] Peter X Gao, Akshay Narayan, Gautam Kumar, Rachit Agarwal,
Sylvia Ratnasamy, and Scott Shenker. 2015. pHost: Distributed
near-optimal datacenter transport over commodity network fabric.
In Proceedings of ACM CONEXT.
[36] Mario Gerla, Ken Tang, and Rajive Bagrodia. 1999. TCP perfor-
mance in wireless multi-hop networks. In Proceedings of IEEE
WMCSA. 1‚Äì10.
[37] Google. 2019. Quic cubic implementation. https://github.com/
google/proto-quic.
[38] Yunhong Gu and Robert L. Grossman. 2007. UDT: UDP-based
data transfer for high-speed wide area networks. Computer Net-
works 51, 7 (2007), p.1777‚Äì1799.
[39] Sangtae Ha, Injong Rhee, and Lisong Xu. 2008. CUBIC: A new
TCP-friendly high-speed TCP variant. ACM SIGOPS Operating
Systems Review 42, 5 (2008), 64‚Äì74.
[40] Mark Handley, Costin Raiciu, Alexandru Agache, Andrei Voinescu,
Andrew W Moore, Gianni Antichi, and Marcin Wojcik. 2017. Re-
architecting datacenter networks and stacks for low latency and
high performance. In Proceedings of ACM SIGCOMM. 29‚Äì42.
[41] Eric He, Jason Leigh, Oliver Yu, and Thomas A. DeFanti. 2002.
Reliable Blast UDP: Predictable High Performance Bulk Data
Transfer. In Proceedings of IEEE Cluster Computing. 317.
[42] Cheng Yuan Ho, Cheng Yun Ho, and Jui Tang Wang. 2011. Perfor-
mance improvement of delay-based TCPs in asymmetric networks.
IEEE Communications Letters 15, 3 (2011), 355‚Äì357.
[43] Huawei. 2018. Mate 20 series wireless projection. https://
consumer.huawei.com/en/support/content/en-us00677996/.
[44] Huawei. 2019. Honor smart screen. https://consumer.huawei.
com/en/support/content/en-us00677996/.
[45] Huawei
iLab. 2019. Top 10 traffic killers among Internet
videos. https://www-file.huawei.com/-/media/corporate/pdf/
whitepaper/10.pdf.
[46] Jana Iyengar and Ian Swett. 2020. QUIC loss recovery and
congestion control. IETF draft (2020).
[47] Van Jacobson. 1988. Congestion avoidance and control. ACM
SIGCOMM CCR 18, 4 (1988), 314‚Äì329.
[48] Srikanth Kandula, Dina Katabi, Arthur Berger, and Arthur Berger.
2007. Dynamic load balancing without packet reordering. ACM
SIGCOMM CCR 37, 2 (2007), 51‚Äì62.
[49] Leonard Kleinrock. 1978. On flow control in computer networks.
In Proceedings of IEEE ICC.
[50] Sara Landstr¬®om and Lars-Ake Larzon. 2007. Reducing the TCP
acknowledgment frequency. ACM SIGCOMM CCR 37, 3 (2007),
5‚Äì16.
[51] Adam Langley, Alistair Riddoch, Alyssa Wilk, Antonio Vicente,
Charles Krasic, Dan Zhang, Fan Yang, Fedor Kouranov, Ian Swett,
Janardhan Iyengar, Jeff Bailey, Jeremy Dorfman, Jim Roskind,
Joanna Kulik, Patrik Westin, Raman Tenneti, Robbie Shade,
SIGCOMM ‚Äô20, August 10‚Äì14, 2020, Virtual Event, NY, USA
Tong Li et al.
Ryan Hamilton, Victor Vasiliev, Wan-Teh Chang, and Zhongyi
Shi. 2017. The QUIC transport protocol: Design and internet-scale
deployment. In Proceedings of ACM SIGCOMM. 183‚Äì196.
[52] Li Li, Ke Xu, Tong Li, Kai Zheng, Chunyi Peng, Dan Wang,
Xiangxiang Wang, Meng Shen, and Rashid Mijumbi. 2018. A
measurement study on multi-path TCP with multiple cellular
carriers on high speed rails. In Proceedings of ACM SIGCOMM.
161‚Äì175.
[53] Eugenio Magistretti, Krishna Kant Chintalapudi, Bozidar
Radunovic, and Ramachandran Ramjee. 2011. WiFi-Nano: Re-
claiming WiFi efficiency through 800 ns slots. In Proceedings of
ACM MobiCom. 37‚Äì48.
[54] Linux man-pages project. 2020. BPF helpers. http://man7.org/
linux/man-pages/man7/bpf-helpers.7.html.
[55] Matt Mathis, Jamshid Mahdavi, Sally Floyd, and Allyn Romanow.
1996. RFC 2018: TCP selective acknowledgment options. IETF
(1996).
[56] Behnam Montazeri, Yilong Li, Mohammad Alizadeh, and John
Ousterhout. 2018. Homa: A receiver-driven low-latency trans-
port protocol using network priorities. In Proceedings of ACM
SIGCOMM.
[57] Ruy De Oliveira and Torsten Braun. 2005. A dynamic adaptive
acknowledgment strategy for TCP over multihop wireless networks.
In Proceedings of IEEE INFOCOM. 39‚Äì49.
[58] Ruy De Oliveira and Torsten Braun. 2006. A smart TCP acknowl-
edgment approach for multihop wireless networks. IEEE TMC 6,