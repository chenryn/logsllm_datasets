1 
Hacking US  
Traffic Control Systems 
Cesar Cerrudo  
@cesarcer 
CTO at IOActive Labs 
About me 
 Hacker, vulnerability researcher, created novel exploitation 
techniques, dozens of vulnerabilities found (MS Windows, SQL 
Server, Oracle, etc.). 
 Developed, sold exploits and 0day vulnerabilities (7-10 years ago) 
 Run research and hacking teams, etc. 
 CEO of software company 
 CTO at IOActive labs 
 Live in small city in third world country, far away from everything  
but I can hack US traffic control systems  
2 
Thanks 
 Barnaby Jack 
 Ruben Santamarta 
 Mike Davis 
 Mike Milvich 
 Susan Wheeller 
 Ian Amit 
 Robert Erbes 
3 
How all started 
 Researching different wireless devices used by traffic 
control systems found news that London was going to 
implement wireless devices for traffic detection 
After some research found the devices vendor name 
Vendor ended up being interesting target, widely deployed 
 +250 customers in 45 US States and 10 countries 
 500,000+ Wireless sensors deployed worldwide, most of them on the 
US 
 Countries include US, United Kingdom, China, Canada, Australia, 
France, etc. 
After reading available documentation I had strong feeling the 
devices were insecure 
4 
How all started 
 Getting the devices 
Social engineered vendor 
Ship them to Puerto Rico and traveled with them back and forth 
to the US from Argentina several times without any problems 
5 
The devices: Wireless Sensors 
 Installs in small hole using hammer 
or core drill in less than 10 minutes 
 Rugged mechanical design, 10 years 
of battery life 
 TI CC2430 RF transceiver IEEE 
802.15.4 system-on-chip 2.4-GHz  
 TI MSP430 MCU (microcontroller) 
16-bit RISC CPU , i386 Linux 
(probably TinyOS RTOS) 
The devices: Wireless Sensors 
The devices: Access Point 
 Processes, stores, and/or relays 
sensor data (uCLinux) 
66 MHz 5272 Coldfire processor, 
4 MB of flash memory, and 16 
MB of DRAM. 
Contact closure to traffic 
controller, IP (fiber or cellular) to 
central servers, PoE 
 Supports as many sensors as 
necessary, Can serve as IP router 
for peripherals (video cams, etc.) 
The devices: Repeater 
 Battery-powered unit 
 Supports up to 10 wireless 
sensors 
 Relays detection data back to 
access point, extending range 
The devices: Radio Ranges 
How they work 
11 
Software 
 Windows software to manage and configure access 
points, repeaters and sensors 
decompile 
It connects directly to AP and uses it to send commands to 
sensors and repeaters 
 Server software used to get all information from APs and 
then send them to Traffic control systems 
place in the world 
12 
Vulnerabilities 
 No encryption, all wireless communication in clear text. 
 Vendor claims:  
 radio transmissions never carry commands; 
only data is transmitted. Therefore, while RF communications 
may be subject to local interference, there is no opportunity to 
embed malicious instructions to a network device or 
upstream traffic system 
removed early in the product's life cycle based on customer 
feedback.  There was nothing broken on the system as we did 
not intend the over the air information to be protected. 
13 
Vulnerabilities 
 No authentication 
Sensors and repeaters can be accessed and manipulated over 
the air by anyone, including firmware updates 
 Firmware updates not encrypted nor signed 
Anyone can modify a firmware and get it updated on sensors and 
repeaters 
 Vendor claims: 
14 
Protocol 
 IEEE 802.15.4 PHY, used by ZigBee and other wireless 
systems 
Data rate of 250 kbps, 16 frequency channels in the 2.4 GHz ISM 
band  
 Sensys NanoPower (SNP) protocol  
On top of 802.15.4 PHY as Media Access Protocol (MAC) 
The MAC layer is TDMA based and uses headers very similar 
to IEEE 802.15.4 MAC layer.  
15 
Protocol 
 Sensors stay awake for the minimum amount of time and prevents any 
packet collisions in the network. 
 While sensors will listen and transmit at specific time slot, access point can 
get and process sensor packets at any time  
 Sensors will transmit every 30 seconds if no detection (depends 
configuration) 
 Access point acknowledges reception; each sensor re-transmits data (4-5 
times then sleeps) if unacknowledged 
16 
Protocol 
 Packet  structure:    80 80 55 AA BB 55 55 55 55 55 55 
[frame header (2 bytes)] + [sequence # (1 byte)] + [address (2 bytes)] + [data] 
 Frame header is used to specify the type of packet 
 Sequence # from sensor packets is used by AP to acknowledge 
them 
 Address is used to identify sensors by the AP and 2nd byte in 
 Data can be 4 bytes to 50 bytes long, first 2 bytes is data type 
Sensor data: mode, version, battery level, detection (presence or not 
of traffic), etc. 
AP data: Commands, synchronization, sensor and repeater firmware 
updates, etc. 
17 
Protocol 
 Sample packets 
80 41 69 CA B6 65 00 FF 7F -> sensor to AP, no detection event, 
count mode 
80 41 67 CA B6 65 00 CE E7 -> sensor to AP, detection event, 
count mode 
80 41 C0 CA B6 02 00 4C 00 03 00 03 BA 00 00 00 00 65 00 00 00 
00 02 CA B6 FF 00 -> sensor to AP, sensor info 
80 80 89 F0 FF 01 00 07 1E 40 07 C0 01 1A 00 00 00 00 00 00 40 
40 20 01 00 ->AP to sensor 
18 
Protocol 
 Firmware  file, ldrect proprietary format 
l0012AF10DADAAAE1E60C5A00006A0200301330136C19021B3013A461D0303013301342 
l0088AF10DADAAA6FC60D5A00006A0200308930896C8F02913089A4D7D0A63089308937 
l2012301330133013301330131C1700130012030003004C00FFFFFFFFFFFFFFFFFFFFDF 
l2088308930893089308930891C8D00890088030003004C00FFFFFFFFFFFFFFFFFFFFB9 
 Firmware update packet 
80 00 45 F0 F4 D2 00 00 12 AF 10 DA DA AA E1 E6 0C 5A 00 00 6A 02 00 30 13 
30 13 6C 19 02 1B 30 13 A4 61 D0 30 30 13 30 13 
AP firmware broadcast, data part except first two bytes is a exact line from 
firmware file without the checksum byte 
19 
The tools 
 TI CC2531 USB dongle for IEEE 802.15.4 sniffing 
 TI SmartRF05 evaluation board 
 TI SmartRF Studio 7 
 TI SmartRF Packet Sniffer IEEE 802.15.4 
 IAR Embedded Workbench IDE 
20 
Attack impact 
+50,000 sensors and ? repeaters worldwide that could 
be compromised 
Traffic jams at intersections, at ramps and freeways 
 Rest in green (exceeds max. green time), Red rest (all red 
until detection), flashing, wrong speed limit display, etc.  
Accidents, even deadly ones by cars crash or by traffic 
blocking ambulances, fire fighters, police cars, etc. 
US DOT Federal Highway Administration (Traffic 
Detector Handbook): 
21 
Onsite passive testing 
 Made AP portable 
USB powered instead of PoE with USB battery charger 
WiFi portable router battery powered, connect notebook to AP 
by WiFi 
 Put AP in my backpack and went to Seattle, NY and 
Washington DC 
Took out notebook and start sniffing around in the sidewalk 
while pointing my backpack in the right directions 
Saw some spooks at DC but got no problems 
Video 
22 
The Attacks 
 DoS 
By disabling sensors/repeaters by changing configuration or 
firmware 
By making sensors/repeaters temporary (maybe permanently) 
unusable by changing firmware 
By flooding AP with fake packets 
 Fake traffic detection data 
Send lots of car detections when there is no traffic (intersections, 
ramp meters and highways, etc.) 
Send no detection on stop bar at exit ramps 
Disable sensors/repeaters and send no detection data when 
there is a lot of traffic 
23 
The Attacks 
 Deployments easy to locate 
Vendor and partners PR, presentations, etc. (See DC sample) 
Cities traffic department documents, news, etc. 
Cities approved vendors, RFP, documents, etc. 
Google Street View  
 Need to be a maximum 1000 feet away from devices 
Attacker onsite - Demo 
Attaching attack device with GPS to buses, taxis, cars, etc. 
Attacking from the sky: drones (drones on demand?) - Demo 
24 
The Attacks 
 Sensor malicious firmware update worm 
Just need to compromise one sensor with malicious firmware 
and it can replicate later on other sensors 
Impossible to know if there are already compromised sensors 
since firmware version is returned by firmware itself 
 NSA/Gov/Special forces/terrorist/etc. style attacks 
Locate persons in real time, hack Smartphone, launch attack 
Use sensor car identification data to trigger bomb when car 
target is near, no need to track car, just sniff sensor wireless 
packet (Cadillac One fingerprint?) 
25 
Conclusions 
 Any third world guy can easily get devices used by US 
critical infrastructure, hack them and then attack the US 
 Anyone can build a $100 worth device to cause traffic 
problems on most important cities on US (some other 
world cities too)  
 Smart cities are not so smart when data that feeds them 
is blindly trusted and can be easily manipulated 
 Cyberwar is cheap 
26 
27 
Fin 
28 
attack power. We need to focus more on ideas, on 
innovation, trying to do things in different ways as 
 Questions? 
 Gracias. 
 E-mail: PI:EMAIL 
 twitter: @cesarcer