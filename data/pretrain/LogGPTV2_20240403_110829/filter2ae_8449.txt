# 【技术分享】Linux 攻击面分析与行为记录

##### 译文声明
本文为翻译文章，原文来源：anvilventures.com
原文地址：[链接](需补充)
译文仅供参考，具体内容以原文为准。
译者：[pwnzi](http://bobao.360.cn/member/contribute?uid=1354052025)
预估稿费：130 RMB
投稿方式：发送邮件至 linwei#360.cn 或通过网页版在线投稿

## 前言
在最近的一次应用安全审查项目中，我在安装一些软件前后对 Linux 系统的状态和变化进行了深入分析。这让我意识到，在 Linux 平台上缺少像微软的 [Attack Surface Analyzer](https://technet.microsoft.com/en-us/security/gg749821.aspx) 这样的工具。尽管目前已有许多用于记录安全信息日志和事件管理的监控工具（如 SIEM 工具），但这些工具往往功能复杂且成本高昂，可能并不适合所有场景。

## 工具特性与扩展
市面上常见的 SIEM 类工具，例如 Tripwire，虽然功能强大，但在某些情况下显得过于复杂。我希望有一个既有效又简单灵活的工具，能够适用于大多数 Linux 系统，并且具有良好的可扩展性。因此，我使用 Python 3.x 和其标准库开发了一个这样的工具。该工具无需复杂的后台进程或安装步骤，只需放置几个 Python 脚本即可运行。如果需要自动化部署，可以结合 CI/DevOps 工具如 Puppet 或 Ansible 来实现。

为了便于扩展，我决定依赖于各种命令行工具。当然，不仅仅是简单的解析命令行输出，例如 GNU 的 `ls` 命令。尽管存在一些常见陷阱，如解析文件和处理命令行输出等，但这些问题不应阻碍我们的进展。实际上，在现实场景中完美解析这些输出几乎是不可能的（参考 [这里](https://www.dwheeler.com/essays/filenames-in-shell.html) 和 [这里](https://www.dwheeler.com/essays/fixing-unix-linux-filenames.html)）。尽管某些命令行开发者添加了很多改动或错误，我们仍然希望输出默认的正常结果（参考 [StackExchange 讨论](https://unix.stackexchange.com/questions/258679/why-is-ls-suddenly-wrapping-items-with-spaces-in-single-quotes)）。

## 实际测试
接下来，我们将通过实际测试来展示该工具的功能。测试环境基于 Ubuntu 和 Debian 系统。如果你打算在其他操作系统上进行测试，可能需要针对 BSD 环境添加一些特殊参数（例如 `ls --color=yes` 对应 `ls -G`）。只需少量调整，该工具即可在其他系统中运行。

### 测试示例
首先，我们需要建立一个基线，以便与后续的结果进行比较。以下是一个示例：

```sh
# ./dawgmon -gfA
0 changes detected (0 warnings)

# nc -l -p 4455 &
[1] 12489

# ./dawgmon -gfA
1 change detected (0 warnings)
+ port 4455 tcp opened

# fg
nc -l -p 4455
^C

# ./dawgmon -gfA
1 change detected (0 warnings)
+ port 4455 tcp closed
```

从上面的结果可以看出，我们可以准确地检测到端口的开启和关闭情况。这不需要 hook netlink 库，而是通过转换 `netstat` 的输出并与先前缓存的结果进行比较。

另一个示例是在安装 VirtualBox 后的检测结果：

```sh
# ./dawgmon -gfA
0 changes detected (0 warnings)

# apt install virtualbox-5.1
[...]

# ./dawgmon -gfA
33 changes detected (0 warnings)
+ size of file /etc/group changed from 937 to 954
+ file /etc/group got modified on 2017-09-14 19:29:51.804811 +0200
+ size of file /etc/group- changed from 934 to 937
+ file /etc/group- got modified on 2017-09-14 19:29:14.000000 +0200
+ file /etc/gshadow got modified on 2017-09-14 19:29:51.812811 +0200
+ size of file /etc/gshadow- changed from 777 to 794
+ size of file /etc/mailcap changed from 40777 to 41063
+ file /etc/mailcap got modified on 2017-09-14 19:29:51.632812 +0200
+ file /etc/systemd/system/multi-user.target.wants/vboxautostart-service.service got created (owner=root, group=root, perm=lrwxrwxrwx, size=49)
+ file /etc/systemd/system/multi-user.target.wants/vboxballoonctrl-service.service got created (owner=root, group=root, perm=lrwxrwxrwx, size=51)
+ file /etc/systemd/system/multi-user.target.wants/vboxdrv.service got created (owner=root, group=root, perm=lrwxrwxrwx, size=35)
+ file /etc/systemd/system/multi-user.target.wants/vboxweb-service.service got created (owner=root, group=root, perm=lrwxrwxrwx, size=43)
+ file /etc/udev/rules.d/60-vboxdrv.rules got created (owner=root, group=root, perm=-rw-r--r--, size=747)
+ group vboxusers added
+ package virtualbox-5.1 is to be installed
+ suid binary /usr/lib/virtualbox/VBoxHeadless got created (owner=root, group=root, perm=-r-s--x--x, size=158304)
+ suid binary /usr/lib/virtualbox/VBoxNetAdpCtl got created (owner=root, group=root, perm=-r-s--x--x, size=23144)
+ suid binary /usr/lib/virtualbox/VBoxNetDHCP got created (owner=root, group=root, perm=-r-s--x--x, size=158304)
+ suid binary /usr/lib/virtualbox/VBoxNetNAT got created (owner=root, group=root, perm=-r-s--x--x, size=158304)
+ suid binary /usr/lib/virtualbox/VBoxSDL got created (owner=root, group=root, perm=-r-s--x--x, size=158296)
+ suid binary /usr/lib/virtualbox/VBoxVolInfo got created (owner=root, group=root, perm=-r-s--x--x, size=10472)
+ suid binary /usr/lib/virtualbox/VirtualBox got created (owner=root, group=root, perm=-r-s--x--x, size=158304)
+ i-node for listening UNIX socket /run/systemd/private changed from 3428734 to 3452848
+ systemd property NInstalledJobs changed from 8392199 to 3238035463
+ systemd property NNames changed from 261 to 263
+ systemd unit file vboxautostart-service.service added
+ systemd unit file vboxballoonctrl-service.service added
+ systemd unit file vboxdrv.service added
+ systemd unit file vboxweb-service.service added
+ systemd unit 'vboxautostart-service.service' added
+ systemd unit 'vboxballoonctrl-service.service' added
+ systemd unit 'vboxdrv.service' added
+ systemd unit 'vboxweb-service.service' added
```

需要注意的是，上述行为并不都是错误的，但我们可以通过观察 SUID root 二进制文件等来检查是否存在本地权限提升漏洞。

### 部分命令列表
以下是 dawgmon 1.0 版本的一些命令：

```sh
$ ./dawgmon -E
NAME                DESCRIPTION
check_boot          分析 /boot 目录
check_etc           分析 /etc 目录
check_groups        分析 UNIX 组更改
check_users         分析 UNIX 用户更改
env                 监控环境变量的变化
kernel_version      分析内核版本更改
list_blkdev         分析可用块设备的变化
list_ifaces         分析网络接口的变化
list_mount          分析文件系统挂载点的变化
list_msq            分析 System V 消息队列的变化
list_packages       分析已安装的 Debian 包的变化
list_pipes          列出命名管道
list_processes      监控正在运行的进程的变化（主要用于调试）
list_sem            分析 System V 信号量的变化
list_shm            分析 System V 共享内存段的变化
list_suids          列出示 UID/SGID 可执行文件
list_sysvinit_jobs  分析可用的 System V init 作业的变化
list_tcpudp_ports   列出监听的 TCP/UDP 端口变化（IPv4/IPv6）
list_unix_ports     列出监听的 UNIX 端口变化
lsb_version         分析 Linux Standard Base 发布设置的变化
needs_restart       检查是否需要重启（仅限 Ubuntu）
systemd_props       显示所有 systemd 属性
systemd_sockets     列出 systemd 套接字
systemd_timers      列出 systemd 定时器
systemd_unitfiles   列出所有可用的 systemd 单元文件
systemd_units       列出所有可用的 systemd 单元
uptime              显示系统运行时间并检查是否已重启
```

## 总结与源码
我很乐意听取大家对该工具的各种建议，包括添加新的命令和模块。请通过 GitHub 或电子邮件提交补丁、评论、建议和批评。

你可以在 Anvil Ventures 企业的 GitHub 页面上找到该工具的源代码：[dawgmon](https://github.com/anvilventures/dawgmon)。

联系方式：
- [GitHub](https://github.com/gvb84)
- [Twitter](https://twitter.com/santaragolabs)
- Email: [PI:EMAIL]