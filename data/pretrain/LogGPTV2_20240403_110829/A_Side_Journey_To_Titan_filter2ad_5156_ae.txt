The nonces, which are easier to infer, were crucial to the success of our attack. Specifically, all blocks of 5 consecutive zero bits were found between bit indices 129 and 250 (assuming index 0 corresponds to the least significant bit, or lsb). Given that the elliptic curve used in the FIDO U2F protocol has a structured order \( q \), the bits of \( q \) at these positions consist of long sequences of zeros and ones.

To illustrate this, we conducted an experiment: for every possible bit index \( i \) ranging from 1 to 250, we executed the attack with 5-bit known blocks set at index \( i \) for all nonces. The success rates of these 250 attacks are plotted in red in Figure 13. The dashed blue curve in the same figure represents the function \( \delta_q \), defined as follows:

\[
\delta_q(i) = 
\begin{cases} 
1 & \text{if } q \text{ has 5 consecutive 0s or 1s at bit position } i \\
0 & \text{otherwise}
\end{cases}
\]

The order of the NIST P-256 curve used in our attack contains two runs of 5 consecutive ones in its lower part, specifically at indices 26 and 108. In fact, at index 26, the order contains a run of 6 consecutive ones, so more precisely, there are three runs of 5 consecutive ones at indices 26, 27, and 108. The higher part of the order is decomposed into three long runs of ones and zeros. The first two peaks in Figure 13 correspond exactly to the two runs of ones in the lower part. Starting at index 128 (the first long run of ones), the success rate reaches 100% except when the 5-bit window meets the transitions between runs of ones and zeros. The clear correlation between the success rate and the bit values at these exact locations indicates a strong relationship between \( \delta_q(i) \) and the attack success rate for a known block at position \( i \).

To the best of our knowledge, this phenomenon has not been observed before and opens new research directions. It suggests that structured elliptic curves, whose orders contain long sequences of zeros or ones, may be more vulnerable to lattice-based attacks than unstructured elliptic curves. Interestingly, it is already known that such elliptic curves are not ideal for side-channel analysis, as they require more expensive countermeasures. Structured elliptic curves are a common choice in real-world protocols like FIDO and Bitcoin.

At present, we do not have a theoretical explanation for this observation. We know that finding a short vector in a lattice requires the vector to be sufficiently short relative to the lattice volume. However, we did not observe significant differences in the norms of the short vector solution or the lattice volume in favorable and less favorable cases. Therefore, to understand the influence of the elliptic curve order on the difficulty of solving the Shortest Vector Problem (SVP) in the EHNP lattice, a deeper exploration of the lattice's internal structure is needed. This question remains open.

A clear understanding of this surprising behavior could be key to improving lattice-based attacks on ECDSA. If we can understand the structural differences between favorable and generic cases, we might be able to adapt the lattice structure in the general case and significantly improve the attack success rate.

### Attack Mitigations

Several measures can be implemented to thwart the proposed attack at different levels.

#### 7.1 Hardening the NXP P5x Cryptographic Library

Straightforward ways to harden the NXP P5x cryptographic library include:
- **Blinding of the scalar**: This does not remove the sensitive leakage but makes the attack much harder. For example, by adding a random factor of the curve order (the bit length of the random number should be at least half the bit length of the curve order).
- **Re-randomizing the table lookup of precomputed points in the comb implementation**: This completely removes the sensitive leakage by re-randomizing at each new access.

#### 7.2 Using the FIDO U2F Counter to Detect Clones

As explained in section 8.1 of [10], the counter can be used to detect cloned U2F devices. If a relying party receives a cryptographically correct authentication response message but with a counter value smaller than or equal to the previous recorded value, it indicates that a clone of the U2F device has been created and used. The relying party should then invalidate the authentication request and lock the account.

This countermeasure would reduce the usability of the clone to a single instance after returning the security key to the legitimate user. Once the clone is used (e.g., one month after the attack), the account will be locked by the next access from the legitimate user. Note that this protection must be implemented by each relying party, independently of the FIDO U2F device.

### References

[References listed as provided, with no changes made.]