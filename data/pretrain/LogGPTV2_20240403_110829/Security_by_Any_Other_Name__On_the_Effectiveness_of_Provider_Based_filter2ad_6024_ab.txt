must be veriﬁed using a public key published in the TXT record
of selector.__domainkey.example.net, where selector is
a token provided with the signature. An attacker that can forge the
TXT record retrieved by the verifying server would, thus, be able to
generate a valid signature for another domain.
The integrity of DNS responses can be secured using DNSSEC.
If the sending provider uses DNSSEC, the receiving provider can
obtain the DKIM signing key securely or receive signed conﬁrma-
tion that a record does not exist. The combination of DKIM and
DNSSEC can, thus, be used to defend against forgery of signed
messages. If an attacker omits the DKIM signature, the receiver
must determine whether the message is a forgery, or whether the
legitimate sender for the domain does not use DKIM. Two simi-
lar mechanisms exist for doing so: Author Domain Signing Prac-
tices (ADSP) and Domain-based Message Authentication, Report-
ing, and Conformance (DMARC). Both allow a provider to publish
its message signing policy and requested treatment.
It is also possible to ensure message authenticity using TLS client
authentication. We are not aware of any providers relying on this
mechanism in submission, delivery, or provider-to-provider trans-
port.
3.5 Integrity
In the absence of any protection, an active attacker can modify a
mail message along any of the hops in Figure 1. DKIM signatures
can be used to protect messages from tampering in transit. As dis-
cussed above, this requires DNSSEC if an attacker can tamper with
the receiving provider’s DNS trafﬁc.
3.6 Enforcement
Both SPF and DKIM were developed primarily as a means to
ﬁght spam. By impersonating a user at a large provider, a spam-
mer could improve his delivery rate; DKIM and SPF prevent such
forgery. In this role, both SPF and DKIM are regarded as signals
to a spam ﬁlter that the incoming message is legitimate. All other
things being equal, a message with a DKIM signature should be
less likely to be identiﬁed as spam than one without. It is tempt-
ing, therefore, for senders to regard DKIM and SPF as optional
mechanisms to improve deliverability for some mail, rather than
as security mechanisms. For the receiver too, limited adoption of
DKIM makes it inadvisable to place too great a weight on the re-
sults of DKIM signature veriﬁcation. ADSP and DMARC provide
a means for a provider to advertise its mail authentication policy.
However, ADSP and DMARC are newer additions; until they are
452Property
Conﬁdentiality
Authenticity
Integrity
Active
TLS with Cert Verif.
DKIM* and DNSSEC —
DKIM* and DNSSEC —
Passive
TLS
Peer
—
SPF or DKIM*
—
Table 1: Minimum protocol requirements for conﬁdentiality, authenticity, and integrity
against active, passive, and peer attackers. A “—” entry indicates an inapplicable com-
bination. * Note: while DKIM is theoretically sufﬁcient, as used today, it is also nec-
essary to advertise a strict policy using DMARC.
widely adopted, a receiver will have no way of positively determin-
ing that a message from a provider should be signed.3
An alternative to ADSP and DMARC is for providers to bilater-
ally disseminate their signing policies to each other. With explicit
agreement, DKIM signing policies can be enforced aggressively.
We know of at least one case where this happens already: GMail
will not accept email from eBay or PayPal if it is not signed [6].
3.7 Implications
We have argued that TLS with server certiﬁcate checking and
DKIM with DNSSEC can be used to secure email against even an
active network attacker. Table 1 summarizes the minimum require-
ments for each security property and class of attacker. In particular,
TLS must be used with server certiﬁcate veriﬁcation and DKIM
must be used with DNSSEC to protect against an active adversary.
In the absence of bilateral inter-provider agreements, sending
providers should publish a signing policy and receiving providers
should not accept unsigned or incorrectly signed mail from providers
advertising a policy of signing all outgoing mail.
So far, we have been concerned with the ideal case, what security
guarantees can be made in the presence of a network adversary if
TLS, DKIM, and DNSSEC are used correctly with an aggressive
enforcement policy. In the remainder of this paper, we examine
what actually happens. The following section describes our mea-
surement methodology, and the section following describes out re-
sults. In particular, we report on both the deployment of the above
protocols, whether providers use them correctly, and whether they
enforce their correct use.
4. METHODOLOGY
In this section, we describe our measurement methodology. The
subjects of our study are email providers and major services that
generate email (e.g. e-commerce and online social networks). For
each subject considered, we determined how each of the security
protocols in question were used.
Roughly speaking, our measurement methods can be divided
into two kinds: those that could be fully automated and scaled eas-
ily, and those that required some manual interaction. For the latter,
we used a set of 302938 major email providers and email genera-
tors, while for the former, we used a much larger set of a million
popular providers occurring in the Adobe leak and the Alexa top
million Web sites (as potential email generators).
To determine whether email sent between these services is pro-
tected from a network attacker, we experimentally determine if
each hop along the message path is properly secured. For hops that
are externally accessible, namely MUA to MSA, MTA to MTA,
and MDA to MUA, denoted (a), (c), and (e) in Figure 1, we in-
teract with the endpoints directly to determine their TLS behavior.
For hops internal to a provider, we rely on information reported in
the Received mail headers. Our data consists of two measurement
3A receiver could infer a signing policy based on previous messages from the provider.
However, it cannot be taken as a reliable indication that all mail should be signed.
Domain
hotmail.com
gmail.com
yahoo.com
aol.com
gmx.de
mail.ru
yahoo.co.in
comcast.net
web.de
qq.com
yahoo.co.jp
naver.com
163.com
twc.com
libero.it
yandex.ru
daum.net
cox.net
att.net
wp.pl
pacbell.net
sohu.com
Country
US
DE
RU
IN
US
DE
CN
JP
KR
CN
US
IT
RU
KR
US
US
PL
US
CN
Frequency
29.82%
18.86%
14.22%
2.83%
1.06%
1.05%
0.99%
0.89%
0.88%
0.71%
0.71%
0.47%
0.46%
0.38%
0.34%
0.32%
0.27%
0.26%
0.22%
0.20%
0.08%
0.04%
Cumulative
29.82%
48.68%
62.91%
65.74%
66.80%
67.85%
68.84%
69.73%
70.61%
71.32%
72.02%
72.49%
72.95%
73.33%
73.67%
73.99%
74.26%
74.52%
74.73%
74.93%
75.01%
75.05%
Table 2: The top email hosts from the Adobe list. Rows contain all users who use any
MTA shared by the domain.
experiments about a year apart (March 2014 and February 2015),
giving us a view into the changes in TLS use.
TLS use during a SMTP session requires both client and server
support. In particular, a server must offer the STARTTLS option,
and the client must issue the STARTTLS command. Thus, we can
infer how a client and a server are likely to interact by testing each
separately. If a particular server offers the STARTTLS option to us
when we connect to it, and a particular client issues the STARTTLS
command when it connects to us, we can say that, at least nom-
inally, the two will use TLS with each other. We say nominally,
because either server, client, or both may be conﬁgured to act dif-
ferently when communicating with each other than when commu-
nicating with us, or the two may be using incompatible TLS im-
plementations. To test this premise, we tested how select providers
interaction with each other, as described in Section 4.8.
We ﬁrst describe how we chose the set of services we tested.
4.1 Subject Selection
For our conclusions to be useful, the set of message paths we
analyze should be broadly representative of the message paths seen
in the global email system. The ideal set case would be a set of
paths formed by uniformly sampling message paths on the Inter-
net. Unfortunately, this is impossible in practice. To approximate
the ideal sample, we compiled a list of popular email providers (or
simply providers), email generating services (generators). We then
used fragments of message paths originating or terminating at these
services to piece together a complete picture of possible message
paths between them. For veriﬁcation, a subset of these paths are
materialized explicitly, as described in Section 5.3.
4.1.1 Path Uniqueness
The path taken by a message between a given sender and recip-
ient is not unique due to load balancing and email infrastructure
evolution. However at a given time, we found message paths to be
stable with respect to TLS use characteristics. That is to say, char-
acteristics of TLS use along the path did not change during the
measurement period. We note where this was not the case in our
analysis.
4534.1.2 Provider List
We created the set of popular email providers based on the top 1
million email address domains occurring in the leaked Adobe user
data set of September 2013. (The full list consists of 152 million
email address spanning 9.2 million distinct domains.) A number
of large providers may service more than one domain name; for
example, hotmail.com and outlook.com are domains used by the
same service, namely Microsoft’s Outlook.com. We grouped such
domains into a single service based on the incoming MTAs for the
domain. Speciﬁcally, for each domain, we retrieved its DNS MX
records. Not all domains had MX records, and some had more than
one. (If there was no MX record, we took the domain name itself
as the incoming MTA address, per RFC 5321.) We then resolved
all host names, to arrive at a set of IP addresses of incoming MTAs
servicing a domain. All DNS lookups were done in February 2015.
Any domains with at least one common IP address were grouped
into a single service. We call the resulting list the provider list.4
Some of the experiments required manual interaction with a ser-
vice. For these, we took 22 of the top providers from the Adobe
provider list with which we were able to create an account. In par-
ticular, experiments where we acted as the receiving provider re-
quired us to send a message from a provider to ourselves, a pro-
cess that required non-trivial manual effort. We call this the Se-
lect provider list. Table 2 shows these 22 providers on order of
their popularity in the leaked Adobe user list. As described above,
some of the providers service multiple domains; such providers are
identiﬁed with their primary domain and their indicated popularity
includes the contribution of all the domains they service. For ex-
ample, hotmail.com includes live.com and outlook.com, and
yahoo.com includes many regional Yahoo! domains that are ser-
viced by the main Yahoo! mail servers. We note that yahoo.co.jp
and yahoo.co.in are not served by the same MTAs as yahoo.com.
4.1.3 Generator List
Much of the email we receive in our inboxes is generated auto-
matically, including e-commerce order conﬁrmations, updates from
online social networks, and so on. We created a list of such email
generators by attempting to create an account with each service in
the Alexa Top 100 list. We succeeded in doing so for 61 of these
services. We also created a short list of organizations or services
not on the Alexa 100 that we believed might warrant additional
email conﬁdentiality and from which we were able to generate an
email message. We call these services the Generator list, shown in
Table 4.
4.2 Incoming MTA Behavior
For TLS to be used on a SMTP hop along the message path,
both the client and server must support TLS. We interacted with
the incoming MTAs of providers on the provider list to determine
whether they supported TLS and with what options. Incoming MTAs
were identiﬁed by retrieving the MX records for each provider’s do-
mains. If a domain did not have any MX records, which happened
with 0.43% of domains, we used the domain name itself as the in-
coming MTA, as speciﬁed in RFC 5321. For each incoming MTA
thus identiﬁed, the interaction ran as follows:
1. Connect. We resolved the SMTP server host name to an IPv4
address and opened a connection on port 25. The initial con-
nection step failed for 7.89% servers.
2. EHLO. We issued the EHLO command with the fully qual-
iﬁed domain name (FQDN) of our server per RFC 5321. If
the server did not acknowledge the EHLO then we fell back to
4All merges were validated manually.
the HELO command and noted that the server did not support
ESMTP. 0.85% of the incoming MTAs we contacted did not
support ESMTP, accounting for 0.59% of all domains on the
provider list.
3. ESMTP Options. Upon successful execution of the EHLO
command, servers responded with a list of supported ESMTP
options. For incoming MTAs, 44.98% of servers in this step