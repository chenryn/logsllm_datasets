表里记录一些额外的信息，或者发现表里包含的信息都已过时。有时已有的列可能太小，或者
请参考附录E。
添加或删除列、更改列的数据类型等操作。本节只介绍它的部分功能。有关其语法的更多信息
一些本领（如更改存储引擎、创建和删除索引等)。也可用ALTER TABLE语句来完成重命名表、
2.6.5
索引。
那么也会从该索引里删除这个列。如果你删除了某个索引的所有列，那么MySQL会删除整个
字PRIMARY：
2.6.4.3删除索引
索引里的某个列指定了前缀长度，MySQL也会忽略它。
88
当你发现某个表的结构不再满足需要时，ALTERTABLE 语句就会很有用。有时你会想要在
ALTERTABLE是一条万能型的语句，拥有许多用途。在本章前半部分，我们已见识过它的
口为了获得另一种存储引擎所提供的功能，你想将一个表转换成使用那种引擎的。例如，
当从表里删除列时，索引也会隐式地受到影响。如果删除的列是某个索引的组成部分，
如果不知道表的索引名字，则可以使用 SHOWCREATETABLE或 SHOWINDEX来查询它们。
ALTER TABLEtbl_name DROP INDEXindex_name;
这条语句没有任何歧义，因为一个表只有一个 PRIMARY KEY，其名字也始终为 PRIMARY。
如果要用 DROPINDEX 语句来删除 PRIMARY KEY，则必须以带引号标识符的形式给指定名
DROP INDEX index_name ON tbl_name;
则必须给出那个要被删除的索引的名字：
删除索引的方法是，使用 DROP INDEX 或 ALTER TABLE 语句。如果要使用 DROP INDEX 语
FULLTEXT索引里的列是以满列值方式进行索引的，
口
口7
ALTERTABLEtbl_nameDROPPRIMARYKEY;
DROPINDEXPRIMARYONtbl_name;
MyISAM 表不具备事务安全性，但你有一个应用程序需要事务处理功能。这时，你可
的那些值都没有超过100个字节那么长。这时，你可以缩短该列，或者将它转换为
大小调整也可能会有其他情况。有时，创建了一个CHAR（255)列，但后来却发现表里
想过会有太多经费，
在某个研究项目中，
第2章使用SQL管理数据
VARCHAR（255）类型，以节省空间。
更多的案例编号。
SMALLINTUNSIGNED（它最多只能容纳65535条
列的前250个字符进行索引。
用对其中的几个或全部列的较短部分进行索引的方式来创建索引。例如，可以只为每
字节，所以你无法创建能把4个列的完整内容都包括在内的复合索引。不过，你可以采
个列的索引就会占用1020字节。可是，因为一个MyISAM索引的最大长度是1000
更改表结构
追加，现在足以让你再生成50 000条记录。这时，你就需要一个更大的类型来容纳
，使生成的研究记录超过50000条，因此你将这列的数据类型定为
，你使用了一个AUTO_INCREMENT列来记录研究案例编号。你并没有
，不能进行前缀索引。即使为 FULLTEXT
条唯一值）。可是，项目的研究经费有
---
## Page 109
来指定一个新的存储引擎名字：
时那么快。使用下面两条语句中的任何一条来更改t1.name，
如果t1.name是CHAR(10）,而t2.name是CHAR（15）,那么查询速度将不如它们都是CHAR(15）
话，比较速度会更快。假设要运行如下查询语句：
效率。索引经常可用于两个相似列类型之间的连接比较，但是如果这两个列的类型完全相同的
后面紧跟列的当前定义。
名字和定义。即使不想重新命名那个列，也需要把它的名字写两遍。
类型的同时，把i重新命名为k，可以这样做：
MODIFY子句无法做到的事情，即在更改数据类型的同时将该列重新命名。如果想在改变其数据
UNSIGNED，可以使用下面两条语句中的任意一条：
句。假设在mytbl表里,列i的数据类型为SMALLINTUNSIGNED。如果要把它更改为 MEDIUMINT
提示
TABLE语句带一个动作，但是MySQL支持带上多个动作，以逗号隔开。
ALTER TABLE tbl_name ENGINE =engine_name;
（2）让表改用另一种存储引擎。如果想让表改用另一种存储引擎，则可以使用ENGINE子句
ALTER TABLE t1 MODIFY name CHAR(15);
SELECT...FROM t1 INNER JOIN t2 WHERE t1.name =t2.name;
更改数据类型的一个重要原因，是要提高多表连接（它会对两个表的列进行比较）的查询
如果要更改列的字符集，则可以在列的定义里使用CHARACTER SET 属性：
如果想要在不更改其数据类型的情况下更改列名，则可以使用cHANGEold_name new_name,
ALTER TABLE
请记住，在使用CHANGE子句时，是先给出想要更改的那个列的名字，然后再指定其新的
ALTER TABLE t MODIFY C CHAR(2O) CHARACTER SET UCS2;
ALTER TABLE mytbl CHANGE i k MEDIUMINT UNSIGNED;
在使用CHANGE子句时，
ALTER TABLE mytbl CHANGE ii MEDIUMINT UNSIGNED;
ALTER TABLE mytbl MODIFY i MEDIUMINT UNSIGNED;
（1）更改列的数据类型。如果要更改某列的数据类型，可以使用CHANGE子句或MODIFY子
下面几个示例演示了ALTERTABLE语句的某些功能。
其中的每个动作（action）指的是对表所做的修改。
ALTER TABLE tbl_name action [, action]
下面是ALTER TABLE 语句的语法：
期的那样已对表定义的产生了影响。
语句。在执行完ALTERTABLE之后，也可以用这条语句来验证你所做的改动是否如预
在使用ALTERTABLE之前，如果需要查看表的当前定义，可以执行SHOW CREATETABLE
将FULLTEXT功能支持扩展到了InnoDB。
MyISAM，因为它提供支持 FULLTEXT功能，但是，现在你已升级到MySQL 5.6，它已
以让受到影响的表改用InnoDB，它支持事务处理。或者，你在MySQL 5.5里使用了
t1 CHANGE name
，为何需要把列名写两遍呢？这是因为CHANGE子句能够做到一件
nameCHAR（15);
2.6表的创建、删除、索引和更改
。有些数据库系统只允许一条.ALTER
可以让它们变成一样的：
---
## Page 110
据库内容的变化情况，以及查看有关的表结构。接下来的几个示例演示了SHOW语句的一些常
2.7.1使用SHOW语句获取元数据
2.7获取数据库元数据
见用法。
库移动到另一个数据库的目的。下面两条语句都可以把表t从 sampab 数据库移到test 数据库：
以对多个表进行重新命名。例如，你可以像下面这样交换两个表的名字：
情况。
引擎的，因为MEMORY表不不支持BLOB列。
的功能是否兼容。例如，你有一个包含有一个BLOB列的表，你将无法把它转换成使用MEMORY
机制。MyISAM表不支持事务处理，但你可以让它改用InnoDB，从而让它是事务安全的：
表，并且发现有一个用到这个表的应用程序需要进行事务操作，包括以防失败发生的事务回滚
90
MySQL提供的 SHOW语句，可以显示许多类型的元数据。SHOW语句有助于我们及时了解数
还有一些不应使用ALTER TABLE语句来更改表使用另一种存储引擎的情况。例如以下几种
SHOW CREATE DATABASE db_name;
显示数据库的 CREATE DATABASE 语句：
SHOW DATABASES;
列出可以访问的数据库：
接下来的几节将描述使用这些信息源来访问元数据的一些具体做法。
口命令行程序，如mysqlshow或mysqldump。
MySQL提供了多种获取数据库元数据（即有关数据库的信息与它里面的各种对象)的方式。
重新命名表时不能使用已有的名字。
RENAME TABLE sampdb.t TO test.t;
ALTER TABLE sampdb.t RENAME TO test.t;
如果在表名前面使用了数据库名进行限定，就可以通过对它重新命名达到把它从一个数据
口各种 SHOW 语句，如 SHOW DATABASES 或 SHOW TABLES。
RENAME TABLE t1 TO tmp, t2 TO t1,tmp TO t2;
有一件事情是RENAME TABLE语句可以做、但ALTER TABLE语句无法做到的，即它每次可
RENAME TABLE tbl_name TO new_tbl_name;
另一种重新命名表的办法是使用 RENAME TABLE语句。语法如下：
ALTERTABLE tbl_name RENAME TO new_tbl_name;
口可以让InnoDB 表改用另一种存储引擎。不过，如果这个表定义了外键约束条件，那么
当你打算让表改用另一种存储引擎时，能否达到最终目的，还要取决于新旧两种存储引擎
(3）重新命名表。用RENAME子句可以为表指定一个新的名字：
口MEMORY表存储在内存之中，在服务器退出时会消失。因此，如果你希望某个表的内
ALTERTABLE tbl_name ENGINE=InnoDB;、
其中，engine_name是一个诸如 InnoDB、MyISAM 或 MEMORY 之类的名字。不区分大小写。
容在服务器重新启动后仍然存在，那么就不要让它改用MEMORY引擎。
这些约束条件在转换后将不复存在，因为只有 InnoDB才支持外键。
第2章使用SQL管理数据
---
## Page 111
如果表存在，这两条语句就成功；如果不存在，就失败。第一条语句最适合于MyISAM表，因
一条来确定表是否存在（甚至可用于TEMPORARY表）：
语句可以找出结果（不包括TEMPORARY表）：
语句可以确定哪一列是student表里的主键：
名。如果列名是一个保留字，如KEY，那么它必须以标识符引起来的方式进行指定。
只是WHERE子句在指定要返回哪些行方面更为灵活一点。WHERE子句应该引用SHOW语句的列
常见的情形是匹配字符“
SQL模式。例如，下面这条语句可以把 student 表里名字以“s”打头的所有列显示出来：
是同一个意思。
SELECT * FROM tbl_name WHERE FALSE;
有时候它会非常有用，能在应用程序里识别出某个给定的表是否存在。使用SHOW TABLES
所有支持LIKE子句的SHOW语句，都可以改写为使用WHERE子句。它们显示出的列都一样，
如果 SHOW TABLES 语句列出了表的信息，则说明该表存在。也可以使用下面两条语句中的
SHOW TABLES LIKEtbl_name';
mySql> SHOW COLUMNS FROM student WHERE Key
如果需要在LIKE模式里使用通配符自身，则可以在它的前面加上一个反斜线进行转义，
mySql>SHOW COLUMNS FROM student LIKEs%';
有几种SHOW语句形式还可以带上一条LIKE‘pattern'子句一
Field
SHOW TABLE STATUS FROMdb_name;
SHOW TABLE STATUS;
显示默认数据库或某给定数据库里的表描述信息：
语句 DESCRIBE tbl_name 和 EXPLAIN tbl_name 与语句 SHOW COLUMNS FROM tbl_name
SHOW INDEX FROM tbl_name;
SHOWCOLUMNSFROMtbl_name
显示表里的列或索引信息：
SHOW CREATE TABLE tbl_name;
显示表的CREATETABLE语句：
SHOW TABLES 语句无法显示出 TEMPORARY 表。
SHOW TABLES;
列出默认数据库或给定数据库里的表：
student_id| int(10) unsigned | NO
Field
SHOW
sex
TABLES
FROM db_name;
1Type
|Type
enum（'F,M')
“_”，因为这个字符经常出现在数据库、表和列的名字里。
+----------------+---------+-----+------+---
|Null|Key|Default| Extra
|Null1Key|Default|Extra
NO
PRIINULL
PRIINULL
-+--
`PRI;
NULL
Iauto_increment
2.7
auto_increment
一它可以通过一个模式来限
获取数据库元数据
，下面这条
的
9
---
## Page 112
据的视图。如果想要知道INFORMATION_SCHEMA 库包含了哪些表，可以使用 SHOW TABLES
语
或INSERTINTO...SELECT 把检索结果存储到另一个表，以便进一步处理。
真正需要的信息。不仅如此，你还可以使用连接或子查询，也可以使用CREATETABLE...SELECT
数据库，SELECT语句可以选取特定的输出列，而且WHERE子句可以让你通过各种表达式挑选你
句的输出里，列的个数是固定的，而且无法把输出内容捕获到表里去。利用INFORMATION_SCHEMA
可移植性。
的。这使得INFORMATION_SCHEMA有着优于各种 SHOW语句（它们都是MySQL特有的）的
标准为基础构建的。也就是说，虽然有些内容是MySQL特有的，但对它的访问机制是标准化
2.7.2
TABLE。这两条语句的输出里都会包含有关于存储引擎的指示信息。
不会出现失败。更多相关信息请参考2.7.2节。
意义）。另一种策略是查询INFORMATION_SCHEMA数据库，这种做法可用于任何上下文，同时
任何事情，只有强行终止脚本的运行（或者忽略那个错误，但这时继续运行查询显然已无任何
的动作。它们不太适合用在通过mysql来运行的批处理脚本里，因为当有错误发生时你无法
适合于在像Perl或PHP这样的语言里使用，因为你可以测试查询执行是否成功，然后执行相应
时会要求扫描全表。第二条语句则更为通用，它对于任何存储引擎都执行得很快。这些语句量
为不带WHERE子句的 cOUNT（*）函数已被高度优化过。它不太适合于InnoDB表，因为在行统计
16
句：
通过 SELECT 语句可以访问INFORMATION_SCHEMA 库，并且这种方式非常灵活。在 SHOW 语
如果想要确定各个表所使用的存储引擎，则可以使用SHOW TABLE STATUS或 SHOWCREATE
mySql> SHOW TABLES IN INFORMATION_SCHEMA;
获取数据库信息的另一个办法是访问INFORMATION_SCHEMA库。这个数据库是以SQL
Tables_in_information_schema
+、
STATISTICS
SESSION_VARIABLES
SCHEMA_PRIVILEGES
SCHEMATA
ROUTINES
PROFILING
PROCESSLIST
PLUGINS
GLOBAL_VARIABLES
GLOBAL_STATUS
EVENTS
ENGINES
COLUMN_PRIVILEGES
COLUMNS
COLLATION_CHARACTER_SET_APPLICABILITY
COLLATIONS
CHARACTER_SETS
第2章使用SQL管理数据
ESSION_STATUS
EFERENTIAL_CONSTRAINTS
KEY_COLUMN_USAGE
借助INFORMATION_SCHEMA获取元数据
最
---