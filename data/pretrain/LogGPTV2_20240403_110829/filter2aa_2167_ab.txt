.reloc
filePtr = fopen( "dummy.txt" , "wb")
Process 
(dummy.txt)
WriteFile( filePtr, mimikatz, ... )
WriteFile( filePtr, "AAAAAA..." )
ntdll!ZwCreateThreadEx
ntdll!RtlCreateProcessParametersEx
ü•ù
dummy.txt
"AAAAAAAAAAAAA"
PEB
April&21,&2021
32
Attacker
ntdll!ZwCreateProcessEx( section )
PE Header
.text
.data
.idata
.reloc
filePtr = fopen( "dummy.txt" , "wb")
Process 
(dummy.txt)
WriteFile( filePtr, mimikatz, ... )
WriteFile( filePtr, "AAAAAA..." )
ntdll!ZwCreateThreadEx
ntdll!RtlCreateProcessParametersEx
ü•ù
dummy.txt
"AAAAAAAAAAAAA"
by&this&trick,&&
AV/EDR&always&scan&the&wrong&file&
(not&the&file&run&as&the&process)
miniHerpaderping$
https://github.com/aaaddress1/PR0CESS
April&21,&2021
33
miniHerpaderping$
https://github.com/aaaddress1/PR0CESS
April&21,&2021
34
we're&mspaint.exe&now
April&21,&2021
Process$Doppelganging
‚Ä¢ The&Issue&first&introduced&in&BlackHat&Europe&2017&&
"Lost&in&Transaction:&Process&Doppelg√§nging"&by&@Tal_Liberman&
‚Ä¢ More&variety&following&by&this&attack&vector&
‚Ä¢ Osiris&banking&Trojan&
‚Ä¢ Herpaderping&by&@jxy__s&
‚Ä¢ Process&Ghosting&by&@GabrielLandau&&
‚Ä¢ Not&Sneaky&enough&in&2021,&got&blocked&by&Defender&
‚Ä¢ the&well-known&Minifilter&
‚Ä¢ provide&Defender&with&the&ability&to&scan&written&files&of&NTFS&
‚Üí Find&a&method&to&control&file&data,&but&not&actually&write&it?
35
WriteFile( filePtr, mimikatz, ..
dummy.txt
ü•ù
filePtr = fopen( "dummy.txt" , "wb")
Fileless
Do&we&really&need&a&file&to&run&the&process?
April&21,&2021
37
Attacker
filePtr = fopen( "dummy.txt" , "wb")
FileDispositionInfo.DeleteFile = TRUE 
dummy.txt
#&using&SetFileInformationByHandle,&
#&mark&it&as&a&temporary&(delete-on-close)&file.&
note:&in&practice,&fopen()&should&be&replaced&by&CreateFile
April&21,&2021
38
Attacker
filePtr = fopen( "dummy.txt" , "wb")
WriteFile( filePtr, mimikatz, ... )
FileDispositionInfo.DeleteFile = TRUE 
dummy.txt
ü•ù
As&a&result,&&we're&indeed&writing&malware&payload&in&files&on&NTFS&
but&Defender&cannot&access&or&scan&until&we&close&it&:)
PEB
April&21,&2021
39
Attacker
ntdll!ZwCreateProcessEx( section )
PE Header
.text
.data
.idata
.reloc
filePtr = fopen( "dummy.txt" , "wb")
Process 
(dummy.txt)
WriteFile( filePtr, mimikatz, ... )
ü•ù
FileDispositionInfo.DeleteFile = TRUE 
dummy.txt
ü•ù
PEB
April&21,&2021
40
Attacker
ntdll!ZwCreateProcessEx( section )
PE Header
.text
.data
.idata
.reloc
filePtr = fopen( "dummy.txt" , "wb")
Process 
(dummy.txt)
WriteFile( filePtr, mimikatz, ... )
ntdll!ZwClose( filePtr )
ü•ù
FileDispositionInfo.DeleteFile = TRUE 
dummy.txt
ü•ù
bye&:)&
vanish&from&NTFS
#&it's&temporary,&right?&
#&the&file&vanish,&once&got&closed
April&21,&2021
41
Attacker
ntdll!ZwCreateProcessEx( section )
filePtr = fopen( "dummy.txt" , "wb")
WriteFile( filePtr, mimikatz, ... )
ntdll!ZwClose( filePtr )
FileDispositionInfo.DeleteFile = TRUE 
PEB
PE Header
.text
.data
.idata
.reloc
Process 
(dummy.txt)
ntdll!ZwCreateThreadEx
ntdll!RtlCreateProcessParametersEx
ü•ù
dummy.txt
ü•ù
PEB
Attacker
ntdll!ZwCreateProcessEx( section )
PE Header
.text
.data
.idata
.reloc
filePtr = fopen( "dummy.txt" , "wb")
Process 
(dummy.txt)
WriteFile( filePtr, mimikatz, ... )
ntdll!ZwClose( filePtr )
ntdll!ZwCreateThreadEx
ntdll!RtlCreateProcessParametersEx
ü•ù
FileDispositionInfo.DeleteFile = TRUE 
by&this&trick&&
AV/EDR&*ALWAYS*&scan&a&non-existent&file
?
dummy.txt
ü•ù
miniGhosting$
https://github.com/aaaddress1/PR0CESS
April&21,&2021
43
name?&no,&it's&fileless&:)
April&21,&2021
Process$Ghosting
‚Ä¢ Abuse&Temporary&File,&to&Run&a&Ghost&Process&
"What&you&need&to&know&about&Process&Ghosting,&a&new&executable&
image&tampering&attack"&by&@GabrielLandau&
‚Ä¢ Totally$bypass$Defender$&$The$others$based$on$Minifilter$
‚Üí New&Idea:&Run&ourself&like&a&ghost,&without&Custom-Launcher?
44
Arbitrary$Unlink
Yes,&unlink&all&the&files.&even&a&running&process
April&21,&2021
NTFS$Streams$-$Mark$of$the$Web
46
April&21,&2021
NTFS$Streams$-$Malware
47
April&21,&2021
NTFS$Streams$-$Malware
48
Write&malware&to&arbitrary&stream&of&innocent&files&
&&Run&it&as&a&single&process
even&the&process&is&still&running&&
but&we&can&delete&it&anyway&:)
April&21,&2021
Force$Unlink
‚Ä¢ Windows&does&not&allow&the&deletion&
of&files&from&running&process&
‚Ä¢ Amazing&trick&to&force&unlock&files&
found&by&@jonasLyk&
1. open&the&file&with&the&DELETE&flag&
2. relocate&EXE&data&from&main&
stream&to&another&one&
3. yes.&we&can&delete&it&now&:)
49
April&21,&2021
50
Attacker
Malware Dropping & Run
Malware.exe
::$DATA&&1337&bytes
ü•ù
April&21,&2021
51
Attacker
Malware Dropping & Run
filePtr = CreateFile( "malware.exe" , DELETE )
FILE_RENAME_INFORMATION.FileName = ":dummy" 
ntdll!ZwClose( filePtr )
Malware.exe
::$DATA&&0&bytes
:dummy:$DATA&&1337&bytes
ü•ù
#&using&SetFileInformationByHandle,&relocate&the&data&to&the&dummy&stream
April&21,&2021
52
Attacker
Malware Dropping & Run
filePtr = CreateFile( "malware.exe" , DELETE )
FILE_RENAME_INFORMATION.FileName = ":dummy" 
ntdll!ZwClose( filePtr )
Malware.exe
::$DATA&&0&bytes
:dummy:$DATA&&1337&bytes
kernel32!DeleteFile( "malware.exe" )
ü•ù
April&21,&2021
53
Attacker
Malware Dropping & Run
filePtr = CreateFile( "malware.exe" , DELETE )
FILE_RENAME_INFORMATION.FileName = ":dummy" 
ntdll!ZwClose( filePtr )
Malware.exe
::$DATA&&Signed&Benignware
:dummy:$DATA&&Malware&Runningü•ù
Fill In Payload of Signed EXE
during&AV/EDR&scheduled&scanning,&
always&fetch&the&EXE&data&from&the&main&stream
?
DEMO
File&Unlink&&&Forged&Sign
https://github.com/aaaddress1/Skrull
Skrull:$Anti-Copy$Launcher
Fileless&Malware&Launcher:&to&Armor&Malware&and&Deploy&on&Victim
April&21,&2021
Automatic$Sample$Submission$
‚Ä¢ most&AV/EDR&embedded&the&feature&as&
default&e.g.&Windows&Defender&
‚Ä¢ Invoke&when&attackers&carelessly&do&the&
suspicious&behaviors&
‚Ä¢ AV/EDR&keep&eyes&on&attackers&by&
collecting&those&dropped&files&&&analysis&&
‚Ä¢ Fileless&is&cool.&but&attackers&need&to&
deploy&persistent&trojan&for&long-term&
monitoring&&
‚Üí Find&a&method&to&let&the&files&naturally&
broken&when&submitted?
56
April&21,&2021
üöÄSkrull$DRM:$Anti-Copy$Malware$Launcher
‚Ä¢ Anti-Copy&Malware&Launcher&
‚Ä¢ Running&Malware&by&Process-Ghosting&method&
‚Ä¢ DRM:&The&Launch&couldn't&copied&to&another&environment&&
‚Ä¢ Easy&for&attackers&to&run&malware&persistently&&&evade&AV/EDR&&
‚Ä¢ Anti-Copy&DRM&for&Malware&
‚Ä¢ Obtain&unique&features&on&the&victim's&environment&&
‚Ä¢ User&Name,&System&Version,&CPU&count,&etc.&
‚Ä¢ Should&not&be&reproduced&on&the&different&environment&&
‚Ä¢ Use&those&features,&to&reassemble&our&EXE&file&
‚Ä¢ EXE&files&will&be&naturally&broken&when&copied
57
April&21,&2021
Skrull$
58
Attacker
run launcher
Skrull.exe
Collect Unique Features on victim
Reassemble & Armor itself
(Persistence & Anti-Copy)
*contain malware payload*
April&21,&2021
Skrull$
59
Attacker
Malware.exe
ü•ù
run launcher
Skrull.exe
Decrypt Malware Payload
Collect Unique Features on victim
Reassemble & Armor itself
Launch the Malware by Ghosting Trick
(Persistence & Anti-Copy)
(Fileless)
April&21,&2021
Skrull$
60
Attacker
AV/EDR&Lab
Malware.exe
ü•ù
run launcher
Skrull.exe
Decrypt Malware Payload
Collect Unique Features on victim
Reassemble & Armor itself
Launch the Malware by Ghosting Trick
(Persistence & Anti-Copy)
(Fileless)
always capture broken files
(Auto Sample Submit)
DEMO
Skrull:&Malware&DRM
https://github.com/aaaddress1/Skrull
Conclusion$
April&21,&2021
Conclusion$
‚Ä¢ Process&Ghosting:&Attackers&can&abuse&temporary&files&to&create&processes&that&
will&not&be&scanned&by&AV/EDR&Real-Time&Scan&&
‚Ä¢ File&Unlink:&Delete&running&programs&by&migrating&data&between&NTFS&streams&
‚Ä¢ DRM:&Malware&rebuild&itself&before&being&submitted&by&AV/EDR,&so&it&can&
perfectly&resist&follow-up&analysis&by&researchers&
‚Ä¢ Malware&Scheduled&&&Real-Time&Scan&
A. shouldn't&assume&all&running&process&must&have&EXE&file&on&NTFS&
B. shouldn't&only&scan&for&files&on&NTFS,&but&also&for&running&processes,&to&
prevent&fileless&&&DRM&attacks&
63
¬©&2021