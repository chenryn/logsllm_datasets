# Checklist
  * I have verified that the issue exists against the `master` branch of Celery.
  * This has already been asked to the discussions forum first.
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Optional Debugging Information
  * I have tried reproducing the issue on more than one Python version  
and/or implementation.
  * I have tried reproducing the issue on more than one message broker and/or  
result backend.
  * I have tried reproducing the issue on more than one version of the message  
broker and/or result backend.
  * I have tried reproducing the issue on more than one operating system.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with autoscaling, retries,  
ETA/Countdown & rate limits disabled.
  * I have tried reproducing the issue after downgrading  
and/or upgrading Celery and its dependencies.
## Related Issues and Possible Duplicates
#### Related Issues
  * Created in PR #6838
#### Possible Duplicates
  * None
## Environment & Settings
**Celery version** : 5.2.0
**`celery report` Output:**
    TypeError: a bytes-like object is required, not 'str'
      File "aspiredu/project/celery.py", line 43, in run_command
        sys.stdout.write(line)  # Write all output from the command
      File "celery/utils/log.py", line 227, in write
        data = data.rstrip('\n')
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : 3.9.6
  * **Minimal Celery Version** : 5.2
  * **Minimal Kombu Version** : N/A or Unknown
  * **Minimal Broker Version** : N/A or Unknown
  * **Minimal Result Backend Version** : N/A or Unknown
  * **Minimal OS and/or Kernel Version** : N/A or Unknown
  * **Minimal Broker Client Version** : N/A or Unknown
  * **Minimal Result Backend Client Version** : N/A or Unknown
### Python Packages
**`pip freeze` Output:**
    scout_apm==2.23.3
### Other Dependencies
N/A
## Minimally Reproducible Test Case
Add the following test to t.unit.app.test_log.test_default_logger
What's happening is that the logger is getting a data instance of type bytes,
but can call rstrip with a `str` parameter which breaks.
        @mock.restore_logging()
        def test_logging_proxy_bytes(self):
            logger = self.setup_logger(loglevel=logging.ERROR, logfile=None,
                                       root=False)
            with mock.wrap_logger(logger) as sio:
                p = LoggingProxy(logger, loglevel=logging.ERROR)
                p.close()
                p.write(b'foo')
                assert 'foo' not in str(sio.getvalue())
                p.closed = False
                p.write(b'\n')
                assert str(sio.getvalue()) == ''
                write_res = p.write(b'foo ')
                assert str(sio.getvalue()) == 'foo \n'
                assert write_res == 4
                p.flush()
                p.close()
                assert not p.isatty()
                with mock.stdouts() as (stdout, stderr):
                    with in_sighandler():
                        p.write(b'foo')
                        assert stderr.getvalue()
# Expected Behavior
Calling `ProxyLogger(logger).write(b'value')` should not break when a bytes
instance is passed in.
# Actual Behavior
A `TypeError: a bytes-like object is required, not 'str'` is raised.
I will be creating a PR as a follow-up to this issue.