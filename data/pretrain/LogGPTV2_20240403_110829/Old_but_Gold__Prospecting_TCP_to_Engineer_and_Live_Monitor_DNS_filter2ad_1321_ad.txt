### 1. Introduction to Anycast Latency and BGP Configuration
In our analysis, we observed a limited number of IPv6 queries over TCP between January 1st and 9th, making them non-representative. After depolarizing the network, more TCP queries were observed. Although overall latency improved, omitting the Amsterdam (AMS) site missed an opportunity to provide better latency to data centers in the Netherlands and Denmark. Therefore, we resumed peering over the BGP session and experimented with various policy routing choices, as detailed in Table 6. These experiments included 1x and 2x AS-PATH prepending, no-export, and a Google-specific "try-not-to-use-this-path" community string [18]. Our findings indicated that no-export and the community string had no effect, possibly due to the BGP session, and single prepending was also ineffective. However, double AS-PATH prepending resulted in AMS handling about 10% of the total traffic load. Full details of these experiments are available in our technical report [39].

### 2. Depolarizing Microsoft to .nl Anycast A
#### 2.1 Detection
We discovered Microsoft's anycast polarization through DNS/TCP analysis across ASes (Fig. 6b and Fig. 6d). Microsoft (AS8075) preferred Miami (MIA) for .nl Anycast A, different from Google's (AS15169) preference. This resulted in high latency (median 80 ms) because global traffic was directed to a single location.

#### 2.2 Resolution
We collaborated with operators at .nl Anycast A MIA and Microsoft to diagnose and resolve the issue. We confirmed that Anycast had a peering session with Microsoft in MIA, but not at other sites. This led to a short AS-PATH and a preference for all Microsoft data centers to use the Microsoft WAN to this site rather than other .nl Anycast A sites. Potential solutions included de-peering with Microsoft in MIA, peering with Microsoft at other sites, or BGP-based traffic engineering. Given our limited ability to experiment with BGP and the inability to start new peerings, we recommended de-peering with Microsoft in MIA. Figure 10 shows the latency before and after the solution, with the IQR falling from 80 ms to 13 ms and the median latency dropping from 90 ms to 20 ms.

### 3. Detecting BGP Misconfiguration in Near Real-Time
Passive measurement of anycast latency using DNS/TCP is ideal for continuous, real-time detection of BGP misconfigurations. We developed and deployed Anteater within .nl, a live monitoring system that continuously retrieves DNS/TCP RTT. The Anteater architecture (Fig. 13) involves collecting traffic at authoritative DNS servers, exporting it to ENTRADA [61,70], which extracts RTT for incoming TCP handshakes, and storing the data in a PostgreSQL database. Grafana [19] is used for data visualization and alerting. Anteater has been operational for two years and has proven effective in detecting BGP misconfigurations.

#### 3.1 Case Study: EU Traffic Winding up in Australia
On April 8, 2020, .nl operators received an alert from Anteater about a jump in median DNS RTT for Anycast B from 55 ms to over 200 ms (Fig. 14), affecting only IPv4 traffic. Investigating further, we found an increase in the number of resolvers, queries, and latency, with many ASes and resolvers migrating from Germany (FRA) to Sydney (SYD). This detour caused the latency increase. The operator of .nl Anycast B SYD confirmed a routing change where their SYD prefixes were accidentally propagated through a Tier-1 transit provider, leading to a shorter AS-Path and directing traffic to SYD. This issue was resolved by de-peering with the transit provider.

### 4. Anycast Latency and Traffic
While DNS caching insulates users from latency, lower latency can influence traffic distribution when multiple anycast service addresses are available. We used public RSSAC-002 statistics to analyze the root server system, showing that new sites offering lower latency attract more traffic. For example, B-Root and H-Root, which added new sites, saw their share of traffic rise from about 4% to 6% (Fig. 16).

### 5. Related Work
#### 5.1 Passive TCP Evaluation
Janey Hoe first extracted RTT from the TCP handshake [20], and several groups have since used it. We apply this to DNS RTT estimation and real-time anycast engineering. Czech domain operators [31,32] independently used DNS/TCP RTT for latency evaluation, but our work includes comprehensive validation and tools like dnsanon, Anteater, and a modified KnotDNS.

#### 5.2 Anycast DNS Performance
Previous research has examined the impact of the number of sites on anycast performance and behavior under DDoS [4, 59, 42, 55]. Our discovery of polarization in Google has been validated in subsequent testbed experiments [64]. We are the first to quantify the performance and benefits of BGP-based fixes.

#### 5.3 Anycast Optimization for Large CDNs
McQuistin et al. [34] investigated anycast networks with multiple upstream providers, proposing daily active measurements and operator evaluation of catchment changes. Our work detects catchment changes affecting latency, as seen with Google and Anycast A. Schlinker et al. [57] described Facebook's CDN monitoring, while our focus is on recursive-to-authoritative DNS traffic.

### 6. Conclusions
DNS TCP connections are a valuable source of latency information for anycast services. Although TCP is not the dominant protocol for DNS, there is enough DNS/TCP to provide good coverage for latency estimation. We have used this approach to study three operational anycast services, documenting new classes of latency problems and providing solutions. We release two tools (dnsanon and Anteater) and a modified version of KnotDNS, believing this approach will be useful for other DNS operators.

### Acknowledgments
We thank the operators of .nl Anycast A and B and B-root for their collaboration. Casey Deccio proposed using TCP handshake for DNS latency measurement. We also thank Klaus Darilion and our anonymous reviewers for their suggestions. John Heidemann's research is supported by DHS HSARPA and NWO. His and Wes Haradaker's research are supported by NSF CNS-1925737 (DIINER). Giovane C. M. Moura, Joao Ceron, Jeroen Bulten, and Cristian Hesselman's research is supported by the Concordia Project, an EU Horizon 2020 program under Grant Agreement No 830927.

### Appendices
#### A. Extra Graphs on Temporal Coverage
Figures 17 and 18 show the temporal coverage of Anycast B and A for .nl, indicating consistent coverage across many ASes.

#### B. Anycast Extra Data
Figures 19 and 20 show the latency for the top 10 ASes of Anycast B and B-root top talkers by data size.

#### C. Anycast A and B Top ASes
Table 7 lists the AS names and countries for the top ASes observed for Anycast A and B, as shown in Fig. 6 and discussed in prioritization (Sect. 3).