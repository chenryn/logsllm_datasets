a primary os loader and a secondary os loader; this secondary
os loader may be located within a larger portion of persistent
storage, such as a disk partition.
.pp
in linux, the os loader is often either
.br lilo (8)
or
.br grub (8).
.ss kernel
when the kernel is loaded, it initializes various components of
the computer and operating system; each portion of software
responsible for such a task is usually consider "a \fbdriver\fr" for
the applicable component.
the kernel starts the virtual memory
swapper (it is a kernel process, called "kswapd" in a modern linux
kernel), and mounts some filesystem at the root path,
.ir / .
.pp
some of the parameters that may be passed to the kernel
relate to these activities (for example, the default root filesystem
can be overridden); for further information
on linux kernel parameters, read
.br bootparam (7).
.pp
only then does the kernel create the initial userland
process, which is given the number 1 as its
.b pid
(process id).
traditionally, this process executes the
program
.ir /sbin/init ,
to which are passed the parameters that haven't already been
handled by the kernel.
.ss root user-space process
.tp
note:
the following description applies to an os based on unix system v release 4.
however, a number of widely used systems have adopted a related but
fundamentally different approach known as
.br systemd (1),
for which the bootup process is detailed in its associated
.br bootup (7).
.pp
when
.i /sbin/init
starts, it reads
.i /etc/inittab
for further instructions.
this file defines what should be run when the
.i /sbin/init
program is instructed to enter a particular \firun-level\fr, giving
the administrator an easy way to establish an environment
for some usage; each run-level is associated with a set of services
(for example, run-level \fbs\fr is \fisingle-user\fr mode,
and run-level \fb2\fr entails running most network services).
.pp
the administrator may change the current
run-level via
.br init (1),
and query the current run-level via
.br runlevel (8).
.pp
however, since it is not convenient to manage individual services
by editing this file,
.i /etc/inittab
only bootstraps a set of scripts
that actually start/stop the individual services.
.ss boot scripts
.tp
note:
the following description applies to an os based on unix system v release 4.
however, a number of widely used systems (slackware linux, freebsd, openbsd)
have a somewhat different scheme for boot scripts.
.pp
for each managed service (mail, nfs server, cron, etc.), there is
a single startup script located in a specific directory
.ri ( /etc/init.d
in most versions of linux).
each of these scripts accepts as a single argument
the word "start" (causing it to start the service) or the word
\&"stop" (causing it to stop the service).
the script may optionally
accept other "convenience" parameters (e.g., "restart" to stop and then
start, "status" to display the service status, etc.).
running the script
without parameters displays the possible arguments.
.ss sequencing directories
to make specific scripts start/stop at specific run-levels and in a
specific order, there are \fisequencing directories\fr, normally
of the form  \fi/etc/rc[0\-6s].d\fr.
in each of these directories,
there are links (usually symbolic) to the scripts in the \fi/etc/init.d\fr
directory.
.pp
a primary script (usually \fi/etc/rc\fr) is called from
.br inittab (5);
this primary script calls each service's script via a link in the
relevant sequencing directory.
each link whose name begins with \(aqs\(aq is called with
the argument "start" (thereby starting the service).
each link whose name begins with \(aqk\(aq is called with
the argument "stop" (thereby stopping the service).
.pp
to define the starting or stopping order within the same run-level,
the name of a link contains an \fborder-number\fr.
also, for clarity, the name of a link usually
ends with the name of the service to which it refers.
for example,
the link \fi/etc/rc2.d/s80sendmail\fr starts the sendmail service on
runlevel 2.
this happens after \fi/etc/rc2.d/s12syslog\fr is run
but before \fi/etc/rc2.d/s90xfs\fr is run.
.pp
to manage these links is to manage the boot order and run-levels;
under many systems, there are tools to help with this task
(e.g.,
.br chkconfig (8)).
.ss boot configuration
a program that provides a service is often called a "\fbdaemon\fr".
usually, a daemon may receive various command-line options
and parameters.
to allow a system administrator to change these
inputs without editing an entire boot script,
some separate configuration file is used, and is located in a specific
directory where an associated boot script may find it
(\fi/etc/sysconfig\fr on older red hat systems).
.pp
in older unix systems, such a file contained the actual command line
options for a daemon, but in modern linux systems (and also
in hp-ux), it just contains shell variables.
a boot script in \fi/etc/init.d\fr reads and includes its configuration
file (that is, it "\fbsources\fr" its configuration file) and then uses
the variable values.
.sh files
.ir /etc/init.d/ ,
.ir /etc/rc[s0\-6].d/ ,
.i /etc/sysconfig/
.sh see also
.br init (1),
.br systemd (1),
.br inittab (5),
.br bootparam (7),
.br bootup (7),
.br runlevel (8),
.br shutdown (8)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/pthread_attr_init.3
.\" copyright 2002 walter harms (PI:EMAIL)
.\" and copyright 2008, linux foundation, written by michael kerrisk
.\"     
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" distributed under gpl
.\" %%%license_end
.\"
.\" based on glibc infopages
.\"
.th nextafter 3 2021-03-22 "gnu" "linux programmer's manual"
.sh name
nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl \-
floating-point number manipulation
.sh synopsis
.nf
.b #include 
.pp
.bi "double nextafter(double " x ", double " y );
.bi "float nextafterf(float " x ", float " y );
.bi "long double nextafterl(long double " x ", long double " y );
.pp
.bi "double nexttoward(double " x ", long double " y );
.bi "float nexttowardf(float " x ", long double " y );
.bi "long double nexttowardl(long double " x ", long double " y );
.fi
.pp
link with \fi\-lm\fp.
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br nextafter ():
.nf
    _isoc99_source || _posix_c_source >= 200112l
        || _xopen_source >= 500
.\"    || _xopen_source && _xopen_source_extended
        || /* since glibc 2.19: */ _default_source
        || /* glibc = 200112l
        || /* since glibc 2.19: */ _default_source
        || /* glibc = 600 || _isoc99_source
        || _posix_c_source >= 200112l
.fi
.sh description
the
.br nextafter (),
.br nextafterf (),
and
.br nextafterl ()
functions return the next representable floating-point value following
.i x
in the direction of
.ir y .
if
.i y
is less than
.ir x ,
these functions will return the largest representable number less than
.ir x .
.pp
if
.i x
equals
.ir y ,
the functions return
.ir y .
.pp
the
.br nexttoward (),
.br nexttowardf (),
and
.br nexttowardl ()
functions do the same as the corresponding
.br nextafter ()
functions, except that they have a
.i "long double"
second argument.
.sh return value
on success,
these functions return the next representable floating-point value after
.i x
in the direction of
.ir y .
.pp
if
.i x
equals
.ir y ,
then
.i y
(cast to the same type as
.ir x )
is returned.
.pp
if
.i x
or
.i y
is a nan,
a nan is returned.
.pp
if
.i x
is finite,
.\" e.g., dbl_max
and the result would overflow,
a range error occurs,
and the functions return
.br huge_val ,
.br huge_valf ,
or
.br huge_vall ,
respectively, with the correct mathematical sign.
.pp
if
.i x
is not equal to
.ir y ,
and the correct function result would be subnormal, zero, or underflow,
a range error occurs,
and either the correct value (if it can be represented),
or 0.0, is returned.
.sh errors
see
.br math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.pp
the following errors can occur:
.tp
range error: result overflow
.\" e.g., nextafter(dbl_max, huge_val);
.i errno
is set to
.br erange .
an overflow floating-point exception
.rb ( fe_overflow )
is raised.
.tp
range error: result is subnormal or underflows
.\" e.g., nextafter(dbl_min, 0.0);
.i errno
is set to
.br erange .
an underflow floating-point exception
.rb ( fe_underflow )
is raised.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br nextafter (),
.br nextafterf (),
.br nextafterl (),
.br nexttoward (),
.br nexttowardf (),
.br nexttowardl ()
t}	thread safety	mt-safe
.te
.hy
.ad
.sp 1
.sh conforming to
c99, posix.1-2001, posix.1-2008.
this function is defined in iec 559 (and the appendix with
recommended functions in ieee 754/ieee 854).
.sh bugs
in glibc version 2.5 and earlier, these functions do not raise an underflow
floating-point
.rb ( fe_underflow )
exception when an underflow occurs.
.pp
before glibc version 2.23
.\" https://www.sourceware.org/bugzilla/show_bug.cgi?id=6799
these functions did not set
.ir errno .
.sh see also
.br nearbyint (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/cpu_set.3
.\" copyright (c) 1983, 1987 the regents of the university of california.
.\" all rights reserved.
.\"
.\"	@(#)mailaddr.7	6.5 (berkeley) 2/14/89
.\"
.\" extensively rewritten by arnt gulbrandsen .  my
.\" changes are placed under the same copyright as the original bsd page.
.\"
.\" adjusted by arnt gulbrandsen  in 2004 to
.\" account for changes since 1995. route-addrs are now even less
.\" common, etc. some minor wording improvements. same copyright.
.\"
.\" %%%license_start(permissive_misc)
.\" redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the university of california, berkeley.  the name of the
.\" university may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" this software is provided ``as is'' and without any express or
.\" implied warranties, including, without limitation, the implied
.\" warranties of merchantability and fitness for a particular purpose.
.\" %%%license_end
.\"
.th mailaddr 7 2020-08-13 "linux" "linux user's manual"
.uc 5
.sh name
mailaddr \- mail addressing description
.sh description
.nh
this manual page gives a brief introduction to smtp mail addresses,
as used on the internet.
these addresses are in the general format
.pp
	user@domain
.pp
where a domain is a hierarchical dot-separated list of subdomains.
these examples are valid forms of the same address:
.pp
	PI:EMAIL
.br
	john doe 
.br
	PI:EMAIL (john doe)
.pp
the domain part ("monet.example.com") is a mail-accepting domain.
it can be a host and in the past it usually was, but it doesn't have to be.
the domain part is not case sensitive.
.pp
the local part ("john.doe") is often a username,
but its meaning is defined by the local software.
sometimes it is case sensitive,
although that is unusual.
if you see a local-part that looks like garbage,
it is usually because of a gateway between an internal e-mail
system and the net, here are some examples:
.pp
	"surname/admd=telemail/c=us/o=hp/prmd=hp"@some.where
.br
	user%PI:EMAIL
.br
	machine!machine!PI:EMAIL
.br
	PI:EMAIL
.pp
(these are, respectively, an x.400 gateway, a gateway to an arbitrary
internal mail system that lacks proper internet support, an uucp
gateway, and the last one is just boring username policy.)
.pp
the real-name part ("john doe") can either be placed before
<>, or in () at the end.
(strictly speaking the two aren't the same,
but the difference is beyond the scope of this page.)
the name may have to be quoted using "", for example, if it contains ".":
.pp
	"john q. doe" 
.ss abbreviation
some mail systems let users abbreviate the domain name.
for instance,
users at example.com may get away with "john.doe@monet" to
send mail to john doe.
.i "this behavior is deprecated."
sometimes it works, but you should not depend on it.
.ss route-addrs
in the past, sometimes one had to route a message through
several hosts to get it to its final destination.
addresses which show these relays are termed "route-addrs".
these use the syntax:
.pp
.pp
this specifies that the message should be sent to hosta,
from there to hostb, and finally to hostc.
many hosts disregard route-addrs and send directly to hostc.
.pp
route-addrs are very unusual now.
they occur sometimes in old mail archives.
it is generally possible to ignore all but the "user@hostc"
part of the address to determine the actual address.
.ss postmaster
every site is required to have a user or user alias designated
"postmaster" to which problems with the mail system may be
addressed.
the "postmaster" address is not case sensitive.
.sh files
.i /etc/aliases
.br
.i \(ti/.forward
.sh see also
.br mail (1),
.br aliases (5),
.br forward (5),
.br sendmail (8)
.pp
.ur http://www.ietf.org\:/rfc\:/rfc5322.txt
ietf rfc\ 5322
.ue
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man7/system_data_types.7
.so man2/dup.2
.so man3/tailq.3
.\" copyright (c) 2017, michael kerrisk 
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.th pthread_spin_init 3 2021-03-22 "linux" "linux programmer's manual"
.sh name
pthread_spin_init, pthread_spin_destroy \- initialize or destroy a spin lock
.sh synopsis
.nf
.b #include 
.pp
.bi "int pthread_spin_init(pthread_spinlock_t *" lock ", int " pshared ");"
.bi "int pthread_spin_destroy(pthread_spinlock_t *" lock ");"
.fi
.pp
compile and link with \fi\-pthread\fp.
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br pthread_spin_init (),
.br pthread_spin_destroy ():
.nf
    _posix_c_source >= 200112l
.fi
.sh description
.ir "general note" :
most programs should use mutexes
instead of spin locks.