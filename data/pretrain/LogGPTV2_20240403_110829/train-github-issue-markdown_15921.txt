@tomasteicher: 'When I want to delete a node, i need to delete all its
relationships first. Maybe it would be good when there would be a method that
do all this deletions together.
For example, when I am deleting a node, I am using this my custom method
/**  
* delete all nodes from first parameter with all its relationships from the  
* database  
*  
* @param nodes ArrayList of nodes to delete  
*/  
public static void deleteNodesWithRelationships(ArrayList nodes) {  
if (nodes == null || nodes.size() == 0) {  
return;  
} else {  
Map params = new HashMap();  
params.put("nodes", nodes);  
String query = "START n = node({nodes}) MATCH n-[r]-() DELETE n, r";  
ExecutionResult result = executionEngine.execute(query, params);  
}  
}
I am not sure whether this method is optimal for its task. Therefore it would
be better when this task (remove node with its relationships) would be part of
Neo4j Java API, for example as a method of GraphDatabaseService interface.'