We also give concrete descriptions of these sets and show eﬃcient procedures for generating elements
in them.
1.2 Group Signatures
We now give a high level overview of how one would use the techniques to construct a group
signature scheme. The master group public key of the setup authority will be a public key for the
selectively secure signature scheme from [ABB10] adapted to polynomial rings:
[ a | b ], u = a · s(cid:48)
1 + b · s(cid:48)
2 + a2 · s(cid:48)
3
(4)
5
(cid:20)r1 r2
(cid:21)
where a = [a a(cid:48)] for a uniformly-random a, a(cid:48) and b = [b1 b2] = a ·
where ri, ei are
polynomials in Rq with small coeﬃcients such that (a, b1, b2) are indistinguishable from random
based on the hardness of the Ring-LWE problem. The group member identities are polynomials
i ∈ S ⊆ Rq where the set S is preserved under some set of automorphisms of Rq. The secret key of
a user with identity i consists of vectors s1, s2, s3 that are generated by the setup authority using his
e1 e2
secret trapdoor key R =
. The setup authority ﬁrst picks a short vector s3 from a particular
(cid:20)r1 r2
(cid:21)
e1 e2
distribution, and then “pre-image samples” short vectors s1, s2 such that
[ a | b + i · [ 1
√
q] ] ·
= u + a2 · s3.
(5)
(cid:21)
(cid:20)s1
s2
√
q ] is sometimes referred to as the “gadget matrix”5 that allows for eﬃcient
The matrix [ 1
pre-image sampling of short vectors s1, s2 as in (5) for all i (cid:54)= 0. The procedure for computing
such vectors in a way that produces a distribution independent of the secret key R is described in
[MP12]. When i = 0, the setup authority can output s(cid:48)
3 as the key.6 The purpose of the
a2 · s3 part of the construction is only necessary for the security proof – it’s unclear if it truly adds
any security in practice. The performance downside of including this term is fairly small — one
needs to do an extra sampling of s3 and multiplication by a2 in the key generation, and the size
of the solution to the Ring-SIS problem in the security proof is a small (virtually inconsequential)
additive factor larger. For the following high-level overview, the reader can just take s3, a2 = 0.
2,−s(cid:48)
1, s(cid:48)
Signing. The high level idea for signing is for the user with identity i to prove knowledge of
s1, s2, s3 that satisﬁes (5). If the proof of knowledge is a Σ-protocol, then it can be converted into a
non-interactive proof using the Fiat-Shamir heuristic, which turns the Σ-protocol into a signature
scheme if one inputs the message into the random oracle. The main diﬃculty in all group signature
constructions lies in doing this proof without revealing i.
√
To hide i in our proof, the signer will commit to i and i
q using the commitment scheme from
Section 1.1 and publish his commitments as part of the signature. The main observation is that
(cid:20)(cid:20)0
(cid:21)
a
(cid:20)0
(cid:21)
b
|
√
+ [Com(i; r) Com(i
q; r(cid:48))]
·
(cid:21)
(cid:21)
(cid:20)s1
s2
(cid:20)
=
(cid:21)
+
(cid:20)a1
(cid:21)
a2
0
u + a2 · s3
· ˜r.
(6)
√
q instead of (cid:100)√
The signer will give an approximate ZKPoK of the short randomnesses r, r(cid:48) that open the
q and also that i ∈ S.7 In other words, he’ll prove knowledge of
√
commitments to i, i
5 The gadget matrix for polynomials is more generally deﬁned as [1 q1/b q2/b . . . q(b−1)/b] for some b. In this work,
we take b = 2. Also, we write
6 For i (cid:54)= 0, the setup authority is able to output many possible valid s1, s2, s3 using his trapdoor and the gadget
matrix. For i = 0, however, the gadget matrix disappears and so the setup authority is only able to return one
2,−s3 that he “planted” when creating u in (4). For the security proof, it will be necessary that the distribution
s(cid:48)
1, s(cid:48)
for all i is the same, and so for this reason, we make the pre-image sampling procedure for all i deterministic. In
other words, the randomness used in the sampling will be derived by the setup authority using a keyed PRF whose
input depends on i.
7 Due to the slack in our zero-knowledge protocols, the proofs will be for larger values of r, r(cid:48) than those used in the
commitments. But for simplicity of exposition in the introduction of this paper, we will use the same notation.
q(cid:99) for improved readability.
6
(cid:21)
· [r r(cid:48)] +
(cid:20) 0
√
0
ci ci
= c ·
(cid:34)
(cid:35)
.
t(1)
1
t(1)
2
t(2)
1
t(2)
2
(cid:20)a1
(cid:104)
a2
q
(cid:21)
(cid:21)
(cid:20)s1
q](cid:3) ·
s2
√
(7)
(8)
In parallel, the signer will also prove that
a | b + [t(1)
(cid:105) ·
(cid:2)a | cb + a2 · [r r(cid:48)] + c · [i i
t(2)
2 ]
2
= cu + a2 · r(cid:48)(cid:48).8
(cid:20)cs1
(cid:21)
= c2u + ca2 · r(cid:48)(cid:48).
Multiplying (8) by c and combining with (7) produces the equation
(9)
We can then show that if an Adversary can produce polynomial vectors r, r(cid:48), s1, s2, r(cid:48)(cid:48), c with
small coeﬃcients that satisfy the above equation, then he is able to solve the Ring-SIS problem.
The proof is very similar to the proof of selective security for the signature scheme of [ABB10] .
Intuitively, suppose that the Adversary in the impersonation game produces a solution (i.e. the
extracted values from the PoK) for (9) for i = 0. Then, using the fact that b = aR and u =
a · s(cid:48)
3 and writing R(cid:48) = [r r(cid:48)], (9) can be rewritten as
2 + a2 · s(cid:48)
1 + b · s(cid:48)
s2
a ·(cid:0)cs1 + cRs2 − c2s(cid:48)
1 − c2Rs(cid:48)
2
(cid:1) + a2 ·(cid:0)R(cid:48)s2 − cr(cid:48)(cid:48) − c2s(cid:48)
(cid:1) = 0,
3
(10)
which is a solution to the Ring-SIS problem because the coeﬃcients of all the terms in parentheses
are small relative to q.
Of course, the Adversary is not guaranteed to impersonate on identity i = 0, but may choose an
arbitrary i(cid:48) ∈ S. To handle this, we use the standard “puncturing” technique. In the security proof
“guess” i(cid:48) ∈ S, and set b = aR − [i(cid:48) i(cid:48)√
we would not choose b = aR as part of the public key, but we rather pick a uniformly-random
q] as part of the public key. It’s not hard to see that if
the Adversary produces a solution for (9) with i = i(cid:48), then one again obtains the same Ring-SIS
solution as in (10). If the Adversary cannot tell how b was constructed, even after querying for
preimages s1, s2, s3, then there is exactly a 1/|S| chance that i = i(cid:48). Therefore there is a 1/|S| loss
in the tightness of the security reduction.
For the purposes of allowing opening, the signer will also create a Ring-LWE encryption of
the three polynomials comprising the vector r used in the commitment of i in (7) using the one-
shot veriﬁable encryption / proof of plaintext knowledge from [LN17] combined with the proofs of
knowledge for (7). The reason that we encrypt r rather than i is that the coeﬃcients in r are small,
whereas i comes from a set that is stable under some automorphism, and such sets contain elements
with large coeﬃcients. Once the opener decrypted r, he knows from (7) that a1 · r = c · t(1)
1 , and so
he can recover c. Then using this c, he can recover i from the equality a2 · r + ci = c · t(1)
2 .
Reducing the Commitment Size. To reduce the size of the signature, we can slightly modify the (2)
so that it works over two diﬀerent moduli, one for the top and another for the bottom part (call
them q1 and q2 respectively). In our group signature scheme, the value of q2 needs to be large due
to the fact that the Ring-SIS solution in (10) is fairly large itself. The value of q1, on the other
hand, only needs to be set so that the commitments to i and i
q in (7) are binding and hiding.
8 Notice that we combined the a2 · s3 term with a2 · ˜r term to obtain a2 · r(cid:48)(cid:48). This was the reason that we used
exactly a2 from the commitment scheme in the key generation in (5).
√
7
Since a smaller q1 will result in smaller sizes of t(1)
in the commitment, it is sensible to set it as
small as possible. We show that our proofs of automorphism stability still work if the two moduli
are diﬀerent.
1 , t(2)
1
1.3 Acknowledgements.
We thank the anonymous reviewers for many suggestions and corrections that helped improve the
presentation of the paper. This research has been supported by the SNSF ERC Transfer Grant
CRETP2-166734 FELICITY.
2 Preliminaries
over R in bold lowercase and matrices over R in bold uppercase. e.g. A =(cid:2)a1 | . . . | ak
2.1 Notation
Throughout this paper we will consider a polynomial ring R of the form Z[X]/(Φm(X)), with
Φm(X) the mth cyclotomic polynomial. We will denote elements of R by lowercase letters, vectors
ai = (ai1, . . . , aim)T ∈ Rl, remark that we consider column vectors over R. We will consider the
norm of elements in R to be (cid:107)a(cid:107) = |a| if a ∈ Z, and (cid:107)a(cid:107) =
We extend the notation to vectors and matrices (cid:107)a(cid:107) =
consider the quotient ring Rq = R/qR for which the norm of an element Rq will be the norm of
its unique representative R with coeﬃcient s in
We will also consider the operator norm of matrices in Rl×k deﬁned as s1(A) = max(cid:107)x(cid:107)(cid:54)=0
. For
β ∈ R, we deﬁne the set Sβ to be the set of all polynomials of inﬁnity norm less than beta, i.e.
Sβ = {a ∈ R | (cid:107)a(cid:107)∞ ≤ β}.
(cid:3) ∈ Rl×k with
i if a =(cid:80) aiX i ∈ Z [X] /(X d + 1).
(cid:113)(cid:80)(cid:107)ai(cid:107)2. We will also
(cid:17)
(cid:113)(cid:80) a2
(cid:113)(cid:80)(cid:107)ai(cid:107)2, (cid:107)A(cid:107) =
(cid:105)
(cid:104)− q−1
(cid:16)(cid:107)Ax(cid:107)
(cid:107)x(cid:107)
2 , q−1
2
.
2.2
Invertibility of Challenges
For many of our protocols we will use the challenge set of polynomials
C = {c ∈ R | (cid:107)c(cid:107)1 = κ,(cid:107)c(cid:107)∞ = 1}
and deﬁne ¯C as in Table 2. We will sometimes need the fact that all polynomials in ¯C are invertible
over some particular polynomial ring. The following lemma from [LS18] guarantees such a property
for well chosen power-of-two cyclotomics. A similar theorem holds for general cyclotomics.
Lemma 2.1. [LS18, Corollary 1.2] Let d ≥ k > 1 be powers of 2 and q ≡ 2k + 1(mod 4k) be a
· q1/k has an
prime. Then the polynomial X d + 1 any c in Zq[X]/(X d + 1) such that 0  0, x ← Dσ is likely to be close to σ. Namely, for any k > 0 it holds that
Using the tail bounds for the 0-centered discrete Gaussian distribution (cf. [Ban93]), we can
[|x| > kσ] ≤ 2e−k2/2,
Pr
x←Dσ
and when x is drawn from Dn
σ , we have
[(cid:107)x(cid:107) >
Pr
x←Dn
σ
√
2n · σ] < 2−n/4.
(11)
(12)
We give an important lemma on rejection sampling which will guarantee that the responses used