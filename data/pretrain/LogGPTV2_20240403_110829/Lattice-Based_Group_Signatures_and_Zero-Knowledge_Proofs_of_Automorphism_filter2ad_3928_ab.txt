We also provide concrete descriptions of these sets and demonstrate efficient procedures for generating their elements.

### 1.2 Group Signatures

In this section, we present a high-level overview of how the techniques can be used to construct a group signature scheme. The master group public key, generated by the setup authority, will be a public key for a selectively secure signature scheme adapted to polynomial rings, as described in [ABB10]:

\[ \mathbf{a} | \mathbf{b}, \quad u = \mathbf{a} \cdot s'_1 + \mathbf{b} \cdot s'_2 + \mathbf{a}^2 \cdot s'_3 \]

where:
- \(\mathbf{a} = [a, a']\) with \(a, a'\) being uniformly random.
- \(\mathbf{b} = [b_1, b_2] = \mathbf{a} \cdot \begin{pmatrix} r_1 & r_2 \\ e_1 & e_2 \end{pmatrix}\), with \(r_i, e_i\) being polynomials in \(R_q\) with small coefficients.
- \((a, b_1, b_2)\) are indistinguishable from random based on the hardness of the Ring-LWE problem.

The group member identities are polynomials \(i \in S \subseteq R_q\), where the set \(S\) is preserved under certain automorphisms of \(R_q\). The secret key for a user with identity \(i\) consists of vectors \(\mathbf{s}_1, \mathbf{s}_2, \mathbf{s}_3\), generated by the setup authority using its secret trapdoor key:

\[ \mathbf{R} = \begin{pmatrix} r_1 & r_2 \\ e_1 & e_2 \end{pmatrix} \]

The setup authority first selects a short vector \(\mathbf{s}_3\) from a specific distribution and then pre-image samples short vectors \(\mathbf{s}_1, \mathbf{s}_2\) such that:

\[ [\mathbf{a} | \mathbf{b} + i \cdot \begin{pmatrix} 1 \\ \sqrt{q} \end{pmatrix}] \cdot \begin{pmatrix} s_1 \\ s_2 \end{pmatrix} = u + \mathbf{a}^2 \cdot s_3 \]

The matrix \(\begin{pmatrix} 1 \\ \sqrt{q} \end{pmatrix}\) is referred to as the "gadget matrix," which facilitates efficient pre-image sampling. For \(i \neq 0\), the setup authority can generate multiple valid \(\mathbf{s}_1, \mathbf{s}_2, \mathbf{s}_3\) using its trapdoor and the gadget matrix. For \(i = 0\), the setup authority outputs \(\mathbf{s}'_3\) as the key. The term \(\mathbf{a}^2 \cdot s_3\) is included for the security proof but may not add practical security. Its performance impact is minimal, requiring an extra sampling and multiplication during key generation.

### Signing

The high-level idea for signing is for the user with identity \(i\) to prove knowledge of \(\mathbf{s}_1, \mathbf{s}_2, \mathbf{s}_3\) that satisfy the above equation. If the proof of knowledge is a Σ-protocol, it can be converted into a non-interactive proof using the Fiat-Shamir heuristic, turning the Σ-protocol into a signature scheme by inputting the message into the random oracle.

To hide \(i\) in the proof, the signer commits to \(i\) and \(i \sqrt{q}\) using the commitment scheme from Section 1.1 and publishes the commitments as part of the signature. The main observation is that:

\[ \begin{pmatrix} 0 & a \\ 0 & b \end{pmatrix} \cdot \begin{pmatrix} \text{Com}(i; r) & \text{Com}(i \sqrt{q}; r') \end{pmatrix} \cdot \begin{pmatrix} s_1 \\ s_2 \end{pmatrix} = \begin{pmatrix} a_1 \\ a_2 \end{pmatrix} \cdot \tilde{r} + \begin{pmatrix} 0 \\ u + \mathbf{a}^2 \cdot s_3 \end{pmatrix} \]

The signer provides an approximate zero-knowledge proof of knowledge (ZKPoK) of the short randomnesses \(r, r'\) that open the commitments to \(i\) and \(i \sqrt{q}\), and also proves that \(i \in S\).

### Security Proof

If an adversary can produce polynomial vectors \(\mathbf{r}, \mathbf{r}', \mathbf{s}_1, \mathbf{s}_2, r'', c\) with small coefficients that satisfy the above equation, they can solve the Ring-SIS problem. The proof is similar to the proof of selective security for the signature scheme in [ABB10].

To handle arbitrary \(i' \in S\), we use the standard "puncturing" technique. In the security proof, we "guess" \(i' \in S\) and set \(\mathbf{b} = \mathbf{aR} - [i' i' \sqrt{q}]\) as part of the public key. If the adversary produces a solution for \(i = i'\), we again obtain the same Ring-SIS solution. The tightness of the security reduction has a \(1/|S|\) loss.

### Opening

For allowing opening, the signer creates a Ring-LWE encryption of the three polynomials comprising the vector \(\mathbf{r}\) used in the commitment of \(i\). This uses the one-shot verifiable encryption/proof of plaintext knowledge from [LN17] combined with the proofs of knowledge. Once the opener decrypts \(\mathbf{r}\), they can recover \(c\) and then \(i\).

### Reducing the Commitment Size

To reduce the signature size, we modify the scheme to work over two different moduli, \(q_1\) and \(q_2\). \(q_2\) needs to be large due to the Ring-SIS solution, while \(q_1\) only needs to ensure binding and hiding of the commitments. A smaller \(q_1\) results in smaller commitment sizes, so it is set as small as possible.

### 1.3 Acknowledgements

We thank the anonymous reviewers for their valuable suggestions and corrections. This research was supported by the SNSF ERC Transfer Grant CRETP2-166734 FELICITY.

### 2 Preliminaries

#### 2.1 Notation

Throughout this paper, we consider a polynomial ring \(R\) of the form \(\mathbb{Z}[X]/(\Phi_m(X))\), where \(\Phi_m(X)\) is the \(m\)-th cyclotomic polynomial. We denote elements of \(R\) by lowercase letters, vectors over \(R\) in bold lowercase, and matrices over \(R\) in bold uppercase. For example, \(\mathbf{A} = (\mathbf{a}_1 | \ldots | \mathbf{a}_k)\) with \(\mathbf{a}_i = (a_{i1}, \ldots, a_{im})^T \in R^l\). We consider column vectors over \(R\).

The norm of elements in \(R\) is defined as \(\|a\| = |a|\) if \(a \in \mathbb{Z}\), and \(\|a\| = \sqrt{\sum \|a_i\|^2}\) if \(a = \sum a_i X^i \in \mathbb{Z}[X]/(X^d + 1)\). We extend this notation to vectors and matrices: \(\|\mathbf{a}\| = \sqrt{\sum \|\mathbf{a}_i\|^2}\) and \(\|\mathbf{A}\| = \sqrt{\sum \|\mathbf{a}_i\|^2}\).

We also consider the quotient ring \(R_q = R/qR\) and define the operator norm of matrices in \(R^{l \times k}\) as \(s_1(\mathbf{A}) = \max_{\|\mathbf{x}\| \neq 0} \frac{\|\mathbf{A}\mathbf{x}\|}{\|\mathbf{x}\|}\). For \(\beta \in \mathbb{R}\), the set \(S_\beta\) is defined as the set of all polynomials with infinity norm less than \(\beta\), i.e., \(S_\beta = \{a \in R \mid \|a\|_\infty \leq \beta\}\).

#### 2.2 Invertibility of Challenges

For many of our protocols, we use the challenge set of polynomials:

\[ C = \{c \in R \mid \|c\|_1 = \kappa, \|c\|_\infty = 1\} \]

and define \(\bar{C}\) as in Table 2. All polynomials in \(\bar{C}\) are invertible over some particular polynomial ring. The following lemma from [LS18] guarantees this property for well-chosen power-of-two cyclotomics. A similar theorem holds for general cyclotomics.

**Lemma 2.1.** [LS18, Corollary 1.2] Let \(d \geq k > 1\) be powers of 2 and \(q \equiv 2k + 1 \pmod{4k}\) be a prime. Then any \(c \in \mathbb{Z}_q[X]/(X^d + 1)\) such that \(0 < c < q\) is invertible.

Using the tail bounds for the 0-centered discrete Gaussian distribution (cf. [Ban93]), we have:

\[ \Pr[|x| > k\sigma] \leq 2e^{-k^2/2} \]

for \(x \leftarrow D_\sigma\), and when \(x\) is drawn from \(D_n^\sigma\):

\[ \Pr[\|x\| > \sqrt{2n} \cdot \sigma] < 2^{-n/4} \]

We provide an important lemma on rejection sampling, which guarantees that the responses used in our protocols are appropriately distributed.