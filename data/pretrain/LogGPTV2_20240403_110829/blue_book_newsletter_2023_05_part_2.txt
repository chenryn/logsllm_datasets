          - run: echo "The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."
          - name: Check out repository code
            uses: actions/checkout@v3
          - run: echo "The ${{ gitea.repository }} repository has been cloned to the runner."
          - run: echo "The workflow is now ready to test your code on the runner."
          - name: List files in the repository
            run: |
              ls ${{ gitea.workspace }}
          - run: echo "This job's status is ${{ gitea.status }}."
    ```
    You can upload it as a file with the extension `.yaml` in the directory `.gitea/workflows/` or `.github/workflows` of the repository, for example `.gitea/workflows/demo.yaml`.
    You may be aware that there are tens of thousands of [marketplace actions in GitHub](https://github.com/marketplace?type=actions). However, when you write `uses: actions/checkout@v3`, it actually downloads the scripts from gitea.com/actions/checkout by default (not GitHub). This is a mirror of github.com/actions/checkout, but it’s impossible to mirror all of them. That’s why you may encounter failures when trying to use some actions that haven’t been mirrored.
    The good news is that you can specify the URL prefix to use actions from anywhere. This is an extra syntax in Gitea Actions. For example:
    * `uses: https://github.com/xxx/xxx@xxx`
    * `uses: https://gitea.com/xxx/xxx@xxx`
    * `uses: http://your_gitea_instance.com/xxx@xxx`
    Be careful, the `https://` or `http://` prefix is necessary!
* New: Import organisations into terraform.
    To import organisations and teams you need to use their `ID`. You can see the ID of the organisations in the Administration panel. To get the Teams ID you need to use the API. Go to https://your.gitea.com/api/swagger#/organization/orgListTeams and enter the organisation name.
## Storage
### [OpenZFS](zfs.md)
* New: [Get compress ratio of a filesystem.](zfs.md#get-compress-ratio-of-a-filesystem)
    ```bash
    zfs get compressratio {{ filesystem }}
    ```
## Monitoring
### [Node Exporter](node_exporter.md)
* Correction: Improve how to install it.
## Authentication
### [Authentik](authentik.md)
* Correction: Finish the installation of prometheus.
# Operating Systems
## Linux
### [Jellyfin](jellyfin.md)
* New: [Deceptive site ahead.](jellyfin.md#deceptive-site-ahead)
    It seems that Google is marking the domains that host Jellyfin as deceptive. If it happens to you, your users won't be able to access your instance with Firefox, Chrome nor the Android app. Nice uh? It's kind of scary how google is able to control who can access what in the internet without you signing for it.
    If you search the problem online they suggest that you log in with your google account into the Search Console and see the reasons behind it. Many people did this and reported in the issue that they didn't get any useful information through this process. It's a privacy violation though, as now google is able to tie your identity (as your google account is linked to your phone number) with your Jellyfin domain. Completely disgusting.
    To solve this issue you need [to file a case with google](https://safebrowsing.google.com/safebrowsing/report_error/?tpl=mozilla&hl=en) and wait for them to unban you. It's like asking them for permission so that they let your users access your system. The disgust levels keep on growing. Don't waste your time being creative in the Comments of the request either, it looks like they don't even read them.
    The problem is that until the people from Jellyfin finds a solution, after following this ugly process, you may be flagged again any time in the future (ranging from days to months).
    A mitigation of the problem is to have an alternative domain that your users can use (for example in duckdns.org). You may be lucky that google doesn't block both domains at the same time.
    For more information follow the [Jellyfin issue](https://github.com/jellyfin/jellyfin-web/issues/4076) or the [Jellyfin reddit thread](https://www.reddit.com/r/jellyfin/comments/xqk01i/deceptive_site_ahead/).
* New: [Missing features.](jellyfin.md#missing-features)
    - Hide movie or tv show from my gallery: Tracked by these feature requests [1](https://features.jellyfin.org/posts/1072/let-the-user-hide-a-movie-or-tv-show) and [2](https://features.jellyfin.org/posts/116/add-hide-ignore-for-series-seasons-episodes-as-an-alternative-to-favorite)
### [Vim](vim.md)
* New: [Configure Telescope to follow symbolic links.](vim.md#follow-symbolic-links)
    By default symbolic links are not followed either for files or directories, to enable it use
    ```lua
      require('telescope').setup {
        pickers = {
          find_files = {
            follow = true
          }
        }
      }
    ```
## Android
### [LibreTube](libretube.md)
* New: Introduce Libretube.
    [Libretube](https://github.com/libre-tube/LibreTube) is an alternative frontend for YouTube, for Android.
    YouTube has an extremely invasive privacy policy which relies on using user data in unethical ways. They store a lot of your personal data - ranging from ideas, music taste, content, political opinions, and much more than you think.
    This project is aimed at improving the users' privacy by being independent from Google and bypassing their data collection.
    Therefore, the app is using the [Piped API](https://github.com/TeamPiped/Piped), which uses proxies to circumvent Google's data collection and includes some other additional features.
    Differences to NewPipe:
    With NewPipe, the extraction is done locally on your phone, and all the requests sent towards YouTube/Google are done directly from the network you're connected to, which doesn't use a middleman server in between. Therefore, Google can still access information such as the user's IP address. Aside from that, subscriptions can only be stored locally.
    LibreTube takes this one step further and proxies all requests via Piped (which uses the NewPipeExtractor). This prevents Google servers from accessing your IP address or any other personal data.
    Apart from that, Piped allows syncing your subscriptions between LibreTube and Piped, which can be used on desktop too.
    If the NewPipeExtractor breaks, it only requires an update of Piped and not LibreTube itself. Therefore, fixes usually arrive faster than in NewPipe.
    While LibreTube only supports YouTube, NewPipe also allows the use of other platforms like SoundCloud, PeerTube, Bandcamp and media.ccc.de.
    Both are great clients for watching YouTube videos. It depends on the individual's use case which one fits their needs better.
    Other software that uses Piped:
    -   [Yattee](https://github.com/yattee/yattee) - an alternative frontend for YouTube, for IOS.
    -   [Hyperpipe](https://codeberg.org/Hyperpipe/Hyperpipe) - an alternative privacy respecting frontend for YouTube Music.
    -   [Musicale](https://github.com/Bellisario/musicale) - an alternative to YouTube Music, with style.
    -   [ytify](https://github.com/n-ce/ytify) - a complementary minimal audio streaming frontend for YouTube.
    -   [PsTube](https://github.com/prateekmedia/pstube) - Watch and download videos without ads on Android, Linux, Windows, iOS, and Mac OSX.
    -   [Piped-Material](https://github.com/mmjee/Piped-Material) - A fork of Piped, focusing on better performance and a more usable design.
    -   [ReacTube](https://github.com/NeeRaj-2401/ReacTube) - Privacy friendly & distraction free Youtube front-end using Piped API.
# Arts
## Dancing
### [Shag](shag.md)
* New: Add awesome Shag videos.
    - Sandy Lewis and Martí Gasol:
      - [Warsaw Collegiate Shag Festival 2017](https://yewtu.be/watch?v=CpaicCRacF0)
      - [Warsaw Collegiate Shag Festival 2016](https://yewtu.be/watch?v=8iIEFtoro_Y)
    - Cherry Moreno and Filip Gorski:
      - [BCN Shag Festival 2018](https://yewtu.be/watch?v=Rzi5MUYaRrM)
      - [RTSF 2019](https://yewtu.be/watch?v=Co94T2f3Pw4)
    - Stephen and Chandrae:
      - [Minor Swing](https://yewtu.be/watch?v=dRQ-RsAXdEM)
      - [RTSF 2013](https://yewtu.be/watch?v=uUGsLoZYXb4
      - [RTSF 2016 with Arnas and Egle](https://yewtu.be/watch?v=krEtvtJMbxg)
      - [MBSW 2013](https://yewtu.be/watch?v=pUt3_ybtxoU)
    - Warsaw Shag team
      - [Dragon Swing 2016](https://yewtu.be/watch?v=QGJAIKyW7r4)
      - [Warsaw Shag Festival 2018](https://yewtu.be/watch?v=0DHUfThIrlA)
      - [Warsaw Shag Festival 2017](https://yewtu.be/watch?v=6wasM8nF9gg)