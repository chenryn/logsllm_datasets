without keys. The overview of HlcAuth is shown in Fig. 3.
Challenge-Response. We utilize a challenge-response mecha-
nism to realize the mutual authentication between the gateway and
smart devices. Smart devices require the gateway to prove its trust-
worthiness by answering a correct response. Similarly, the gateway
verifies the identity of smart devices by checking the validity of the
challenge. Both challenge and response messages are transmitted
over HLCs.
Key-free. The main difference between HlcAuth and traditional
secure protocols is key-free, which means the authentication be-
tween smart devices and the gateway does not rely on encryption
(cid:42)(cid:68)(cid:87)(cid:72)(cid:90)(cid:68)(cid:92)
(cid:54)(cid:80)(cid:68)(cid:85)(cid:87)(cid:3)(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)
(cid:11)(cid:20)(cid:12)(cid:3)(cid:38)(cid:82)(cid:80)(cid:80)(cid:68)(cid:81)(cid:71)
(cid:11)(cid:21)(cid:12)(cid:3)(cid:38)(cid:75)(cid:68)(cid:79)(cid:79)(cid:72)(cid:81)(cid:74)(cid:72)
(cid:11)(cid:22)(cid:12)(cid:3)(cid:53)(cid:72)(cid:86)(cid:83)(cid:82)(cid:81)(cid:86)(cid:72)
(cid:11)(cid:23)(cid:12)(cid:3)(cid:36)(cid:38)(cid:46)
(cid:53)(cid:41)(cid:3)(cid:38)(cid:75)(cid:68)(cid:81)(cid:81)(cid:72)(cid:79)
(cid:43)(cid:82)(cid:80)(cid:72)(cid:3)(cid:47)(cid:76)(cid:80)(cid:76)(cid:87)(cid:72)(cid:71)(cid:3)(cid:38)(cid:75)(cid:68)(cid:81)(cid:81)(cid:72)(cid:79)
(cid:11)(cid:43)(cid:47)(cid:38)(cid:12)
Figure 3: The overview of HlcAuth. The command message
is transmitted over the RF channel while the challenge, re-
sponse and ACK message is transmitted over the HLC.
keys. The security of the communication relies on the boundary-
attenuated property of HLCs.
4.1 Protocol Design
Here we describe the detailed protocol of HlcAuth and summarize
notations in Table. 1. HlcAuth includes four phases: RF command
initiation, HLC challenge, HLC response and command execution.
4.1.1 Phase I: Command (RF). HG performs the following
steps to initiate a standard RF command, which is transmitted using
the existing HAN protocol (e.g. Zigbee, Z-Wave), to SDs.
S1. HG first generates a unique short authentication tokenTokencm
and then records its current local timestamp Tд1. Both are
used to prevent replay attacks.
S2. HG sends the command message, which includes the Pcm =
{IDa || IDд || Seqcm || CMD || Tokencm || CRCcm } to Device
A over RF channels.
S3. HG computes Qcm = h(IDa || Seqcm || CMD || Tokencm )
and stores the (Seqcm , Tokencm , Qcm ) into its cache.
4.1.2 Phase II: Challenge (HLC). Upon receiving the com-
mand message from HG, device A sends a challenge message to
authenticate HG.
S4. Device A generates a unique short random authentication
token Tokencl and computes Qcm(cid:2) = h(IDa || Seqcm || CMD
|| Tokencm ). At the same time, it records its current local
timestamp Td 1.
S5. Device A sends a challenge message Pcl = {IDa || IDд || Seqcl
|| Qcm(cid:2) || Tokencl || CRCcl } to HG over HLCs.
S6. Device A computes the hash value Qcl = h(IDд || Seqcl
||
Qcm(cid:2) || Tokencl ) and stores the (Seqcl , Tokencl , Qcl ).
4.1.3 Phase III: Response (HLC). After receiving the chal-
lenge message from the device A, HG first verifies the integrity
of the command message and then sends the response message to
device A over HLCs.
S7. Upon receiving the challenge message from device A, HG
records its current local timestamp Tд2 and checks whether
(Tд2 - Tд1) ≤ Δ T . If it holds then HG retrieves the corre-
sponding Qcm from its cache, else sets Qcl (cid:2) to zero.
Session 1: Embedded System Security ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea31S8. HG verifies whether Qcm(cid:2) = Qcm . If not, HG sets Qcl (cid:2) to
||
zero, else it computes the Qcl (cid:2) = h(IDд || Seqcl
Tokencl ).
|| Qcm(cid:2)
S9. HG sends a response message Pr s = {IDa || IDд || Qcl (cid:2)
||
CRCr s } to device A over HLCs.
4.1.4 Phase IV: Execution (HLC). In this phase, device A ver-
ifies the locality of HG and the integrity of the challenge message.
If the response message passes the verification, the device A exe-
cutes the command and returns an ACK message, which includes
its status to HG over HLCs .
S10. Upon receiving the respond message from HG, device A
records its current local timestamp Td 2 and checks whether
(Td 2
) ≤ Δ T . If it holds then device A retrieves the
corresponding Qcl from own cache, else aborts the process.
S11. Device A verifies whether Qcl (cid:2) = Qcl , if yes then it executes
−Td 1
the command, else aborts the process.
S12. Device A returns an ACK message Pack = {IDa || IDд || DSa
|| CRCack } to HG over HLCs.
4.2 Packet Transmission Scheme
Here we elaborate the packet transmission scheme of HlcAuth,
which includes frame design and modulation scheme of three HLC
candidates.
The goal of the frame design is to minimize the overhead while
ensuring the integrity of the message. The detailed frame design of
the challenge, response and ack message is summarized in Table 2,
Table 3 and Table 4, respectively.
Each challenge frame contains the following information: IDa ,
IDд , Seqcl , Qcm(cid:2), Tokencl and CRCcl . In our scheme, we utilize the
MD5 algorithm to calculate the hash value, and use a half of the
hash result (64 bits) to reduce the size of the payload. Since the
computation complexity of the MD5 is O(n) and the length of each
frame is no more than 150 bits, we can properly apply MD5 on
resource-constrained devices.
For the response and ack frames, we remove the identity of the
frame and secure token to further reduce the overhead. The hash
function applied in the response and ack frames is the same as the
challenge’s. Since the length of the ack frame is limited, we use
CRC-4 rather than CRC-8.
In HlcAuth, we utilize the NEC IR modulation scheme [1] for
infrared, Pulse Position Modulation (PPM) [7] for modulated visible
light (MVL) and Binary Frequency-shift keying (BFSK) [18] for
ultrasound, respectively.
5 SECURITY ANALYSIS
In this section, we analyze the security of HlcAuth against various
types of attacks, including replay, message-forgery and man-in-the-
middle (MiTM) attacks.
5.1 Replay Attack
A local outside attacker can intercept the RF command packet and
further repeat it without modification. However, each valid com-
mand with a unique Tokencm and Seqcm has time effectiveness. In
the phase of RF command initiation, the home gateway will store
the (Seqcm , Tokencm , Qcm ) into its cache, and retrieve them until
receiving the challenge packet. After verifying the validation of the
challenge, home gateway will remove the (Seqcm , Tokencm , Qcm )
locally. Therefore, the replayed command packet cannot pass the
verification since there is no corresponding (Seqcm , Tokencm , Qcm )
in the home gateway’s cache.
5.2 Message-Forgery Attack
Assume that a local outside attacker can capture previous legal
command messages and obtain all possible combinations of the
(IDa , IDд , CMD). Thus, she can forge an arbitrary RF command.
According to the challenge-response mechanism, a potential
message-forgery attack requires the following two steps: i) forge
an RF command; ii) forge an HLC response. After sending the fake
command packet, the attacker will face the following situations.
(1) When device A receives a forged command packet, it will
initiate an HLC challenge to the home gateway. Since this chal-
lenge packet is built on the forged command, it will generate a
fake Qcm(cid:2) which cannot be consistent with any Qcm stored in the
home gateway’s cache. Thus, the challenge message cannot pass
the verification.
(2) One possible way for the attacker to avoid the failure of
the challenge check is sending a forged HLC response before the
home gateway returns the termination signals. To address this issue,
HlcAuth sets two barriers to defend against such attacks. First, both
eavesdropping and transmitting are over HLCs, thus local outside
attackers have extremely low probability to successfully implement
attacks. Second, the time for completely sending a forged response
packet is limited. According to our later experiments, the duration
of sending a response packet over HLCs is more than 300ms while
the interval between legal challenge and response packet is 27ms.
That means the attacker can not send a forged response packet
integrally.
5.3 MiTM Attack
We consider MiTM attackers with two types of goals: 1) modify
the IDa of a command; 2) modify the CMD of a command. Since
we assume RF channels are available to attackers, thus it is feasible
for them to modify (IDa , CMD, CRCcm ) in RF packets. To further
implement MiTM attacks, the attacker needs five steps: 1) intercept
the valid challenge packet; 2) eavesdrop the valid challenge packet;
3) send a forged challenge packet; 4) intercept the valid response
packet; 5) send a forged response packet. In this process, the attacker
will face the following challenges:
First of all, it is hard for attackers to find out when the challenge
packet begins to transmit, since the attacker has extremely low prob-
ability to successfully eavesdrop HLCs. Once he misses the start
point of the packet, he can’t get the unique (Seqcl , Tokencl ) cor-
rectly. Even if the attacker can get the start point, it is still difficult
for him to get the integrated information due to the boundary-
attenuated property of HLCs. Compared to the message-forgery
attack, MiTM attacks need one more HLC transmission, which will
further decrease their success rate.
6 EVALUATION
In this section, we evaluate the performance of HlcAuth from the
aspects of usability and security.
Session 1: Embedded System Security ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea32(cid:20)
(cid:19)(cid:17)(cid:27)
(cid:19)(cid:17)(cid:25)
(cid:19)(cid:17)(cid:23)
(cid:19)(cid:17)(cid:21)
(cid:53)
(cid:51)
(cid:55)
(cid:19)
(cid:19)
(cid:22)(cid:19)
(cid:44)(cid:81)(cid:73)(cid:85)(cid:68)(cid:85)(cid:72)(cid:71)
(cid:56)(cid:79)(cid:87)(cid:85)(cid:68)(cid:86)(cid:82)(cid:88)(cid:81)(cid:71)
(cid:48)(cid:57)(cid:47)
(cid:20)(cid:24)(cid:19)
(cid:20)(cid:27)(cid:19)
(cid:28)(cid:19)
(cid:25)(cid:19)
(cid:36)(cid:81)(cid:74)(cid:79)(cid:72)(cid:3)(cid:11)(cid:71)(cid:72)(cid:74)(cid:85)(cid:72)(cid:72)(cid:12)
(cid:20)(cid:21)(cid:19)
Figure 6: The TPR of infrared, ultrasound, and MVL-based
HLC at various angles at 2m. Both infrared and ultrasound
◦
can achieve over a TPR of 94% within 45
.
6.2 Usability
To measure the usability of HlcAuth, we evaluate the performance
of HLC candidates from the aspects of distances and angles.
Distance: We measure the TPR of infrared, ultrasound and MVL
by varying the distances from 0m to 5m. The device and the gateway
are placed facing each other, i.e., the angle of the device and the
gateway is 0. We test the TPR once every 20cm, and we send the
command 50 times at each point. The results are shown in Fig.5.
Both infrared and MVL can achieve 100% TPR within 4.2m, and
will degrade slightly at a further distance. It is worth mentioning
that the TPR of infrared and MVL is 98% and 96% respectively,
even when the distance reaches 5m. However, ultrasound can only
achieve 100% TPR at a distance between 0.6m and 2.4m, and the
TPR will decline to 0 out of this range. The ultrasound cannot
success in such a short distance because it is modulated by FSK.
The signal is distorted and cannot be demodulated at a further
distance. Considering the application scenarios (e.g., a large living
room), the range of ultrasound is insufficient to guarantee a high
TPR. Thus, we cannot use an ultrasound to transmit HLC.
Angle: Given that the transceiver of the device and the gateway
is not always facing each other, we evaluate the impact of angles
on the TPR. We test the performance of three candidates by placing
◦
at 2m at
the device and the gateway at an angle from 0
an interval of 15
, and each HLC is tested 50 times at each point.
The results are presented in Fig.6. Both infrared and ultrasound
can achieve relatively high TPR within 45
, while MVL can only
because of its high directionality. As the angle
communicate at 0
increases, the TPR of ultrasound decreases to 0 at 75
while the
TPR of infrared decreases slower and reaches the minimum (30%)
at 120
, there is
a small rise as a result of the reflection of wall.
. Interestingly, when the angle is approaching 180
◦
to 180
◦
◦
◦
◦
◦
◦
In conclusion, infrared is the best HLC candidate due to its rela-
tive high TPR at a long distance and a large range of angle, while
ultrasound and MVL are both deficient due to attenuation or high
directionality.
6.3 Security
We further validate the security of HlcAuth experimentally from
the perspective of FPR and time limitation.
Figure 4: Experiment setup.
6.1 Experiment Setup
We build gateways and smart devices using Arduino UNO REV3
Development Boards with ESP8266 WiFi module. Each device is
equipped with a 940nm SOURCEKIT infrared emitter, an HX1838B