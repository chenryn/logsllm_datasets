insnw 
sucuri 
cloudfront 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
√ 
4.2   Cases of forcing HTTPS visiting  
CDN providers should response reasonably to users visiting 
tenants’ sites using HTTPS. If tenant’s site supports HTTPS, 
the  CDN  should  reply  with  the  correct  content.  If  tenant’s 
site  only  supports  HTTP,  the  CDN  should  make  an 
automatic jump from HTTPS to HTTP and provide the web 
content. However, several CDN providers do not properly handle 
the  subsequent  steps,  causing  problems  of  providing  the  wrong 
certificate,  DOS,  even  provide  the  HTTP  web  page  using  a 
mismatched  certificate  which  belongs  to  another  tenant.  The 
responses of CDN are summarized as the three cases below. 
4.2.1  Case of automatic jump 
It  is  a  common  solution  for  CDN  providers  that  website  will 
automatically jump from HTTPS to HTTP to ensure the visibility 
Without SNIWith SNIDefault Cert:cdn.exam1.comcdn.exam2.comStep 1:https://cdn.exam2.comUSERStep 2:CDNDefault:cdn.exam1.com | 1.1.1.1:443cdn.exam2.com | 1.1.1.1:443cdn.exam2.com | 1.1.1.1:443clientCDNHTTPs and HTTPhttps://non-ssl-1.comhttps://ssl.comhttp://non-ssl-1.comhttp://non-ssl-2.comPosterCCS’17, October 30-November 3, 2017, Dallas, TX, USA2472 
of  the  content  of  the  site.  Many  large  CDN  have  adopted  this 
approach, such as Cloudflaressl, and Cloudfront. 
privacy  leakage,  DOS  has  made  progress  by  interrupting  web 
services after decrypting the HTTP request. 
4.2.2  Case of privacy leakage 
Figure  3: Example of host name mismatch error. Using 
HTTPs  to  visit  www.gmw.com  and  return  certificate 
belong to 12306 
The  process  that  CDN  provides  HTTPS  services  includes  an  SSL 
handshake, processing decrypted requests and returning content. 
Any of these steps can cause problems that lead to inconsistencies. 
Our experiment only focuses on the ClientHello and the certificate 
during  TLS  handshake.  In  our  probing,  a  ClientHello  of  TLS 
version  1.2  carrying  the  correct  SNI  is  sent  to  server,  which 
imitates  the  normal  behavior  of  visiting  the  site  by  modern 
mainstream browsers.  
through 
browser 
ignoring 
the  wrong 
the  Chrome  browser, 
such 
that  belongs 
In  Fig.  3,  we  illustrate  this  problem  further  by  an  example. 
When  we  force  to  visit  one  site  by  HTTPS  that  returns 
as 
inconsistency 
www.gmw.cn,  we  receive  a  certificate 
to 
kyfw.12306.cn  (the  official  railway  ticket  selling  site  in  China). 
error  message 
After 
ERR_CERT_COMMON_NAME_INVALID  and  proceed  to  visit, 
web content of www.gmw.cn can still be provided through HTTPS. 
We think there are at least two configuration issues. First, after the 
correct SNI is provided, the server returns the wrong certificate. It 
is  reasonable  to  suspect  that  CDN  provider  does  not  properly 
handle these SNIs in requests, especially considering that the client 
cannot obtain certificates from those servers when the SNI is not 
carried. Second, this is not just a problem with the SNI mechanism, 
because  the  server  gets  the  corresponding  host  after  decrypting 
the HTTPS request. This is the second chance that the CDN server 
can block the wrong service. However, we observe that the servers 
are still providing mismatched content. 
3.2.2  Case of DOS 
DOS can also be understood as a connection rejection on the page 
after  ignoring  browser  certificate  security  alerts.  Compared  to 
4  CONCLUSIONS 
Many websites deliver content through CDN. When multiple sites 
share  the  same  CDN  node,  especially  when  the  HTTPS  site  and 
HTTP  site  are  deployed  together,  the  management  of  CDN 
becomes rather complex. 
We investigate the deployment of multi-tenant CDN providers 
using  different  SSL/TLS  versions  and  SNI  hosts.  By  analyzing 
certificates,  we  find  that  CDN  service  providers  have  different 
strategies  in  dealing  with  SNI  and  TLS  version,  resulting  in 
different compatibility and even practical problems. 
Based on an in-depth analysis of the measurements results, we 
also  find  that  sites  preferring  to  use  SNI  SSL  are  more  likely  to 
have problems with inconsistency in certificates and domains. One 
main reason is that these CDN providers do not take all possible 
SNI scenarios into account and verify whether those sites on the 
CDN can provide HTTPS service and working properly. Especially 
when  SSL  certificate  name  mismatch  error  occurs,  sites  can  still 
continue  to  provide  access.  We  expect  our  work  can  raise  the 
awareness  of  this  problem  in  the  community.  We  believe  our 
study  will  be  useful  for  improving  transparency,  privacy  and 
security, as well as strengthening Robustness of CDN. 
5  SUGGESTIONS AND FUTURE WORK 
The short-term approach is to avoid hybrid deployment of HTTP 
and HTTPS which requires more complex processing mechanisms. 
The  long-term  strategies  are  to  strengthen  CDN's  ability  to  deal 
with all kinds of situations and provide a wider range of HTTPS 
support. 
  We guess that some sites offering both HTTPS and HTTP are 
deployed on CDN nodes that only support HTTP speed up service, 
leading to problems. We will do further study to verify it. 
ACKNOWLEDGMENTS 
This  work  is  supported  by  The  National  Natural  Science 
Foundation  of  China  (No.  61602472,  No.  U1636217)  and  The 
National Key Research and Development Program of China (NO. 
2016YFB0801200). 
REFERENCES 
[1]  Letsencrypt, HTTPS://letsencrypt.org/stats/. July 13, 2017.  
[2]  D.  Eastlake  3rd  and  Huawei,   Transport  Layer  Security  (TLS)  Extensions: 
2011;  www.rfc-
IETF  RFC 
January 
6066, 
Extension  Definitions, 
editor.org/rfc/rfc6066.txt. 
[3]  GB/T 7714 Housley R, Ford W, Polk W, et al. Rfc 5280: Internet x. 509 public key 
infrastructure certificate and crl profile[J]. 2008. 
[4]  Alexa 
Inc., 
Internet 
daily),” 
HTTP://s3.amazonaws.com/alexa-static/top-1m.csv.zip,  2009–2011,  [online;  last 
retrieved inMay 2011]. 
1,000,000 
(updated 
“Top 
sites 
[5]  GB/T  7714  Durumeric  Z,  Kasten  J,  Bailey  M,  et  al.  Analysis  of  the  HTTPS 
certificate  ecosystem[C]//Proceedings  of  the  2013  conference  on  Internet 
measurement conference. ACM, 2013: 291-304. 
[6]  GB/T 7714 Amann B, Vallentin M, Hall S, et al. Revisiting SSL: A large-scale study 
of the internet’s most trusted protocol[J]. ICSI, Tech. Rep., 2012. 
[7]  N. Vratonjic, J. Freudiger, V. Bindschaedler, and J.-P.  Hubaux. The inconvenient 
truth  about  web  certificates.  In  10th  Workshop  on  Economics  in  Information 
Security, 2011. 
[8]  R. Holz, L. Braun, N. Kammenhuber, and G. Carle. The SSL landscape: A thorough 
analysis  of  the  x.509  PKI  using  active  and  passive  measurements.  In  11th  ACM 
Internet Measurement Conference, Nov. 2011. 
PosterCCS’17, October 30-November 3, 2017, Dallas, TX, USA2473