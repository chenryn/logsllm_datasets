### Mitigation Type Frequencies and Analysis

#### Overview
The analysis of mitigation types for non-aging-related Mandelbugs in eight missions reveals that, with the exception of Mission 6, fixes occur more frequently than workarounds (WA) or "use as is" (UAI) dispositions. Table VII presents the frequencies of each mitigation type for these Mandelbugs across all missions. For most missions, the frequencies of WA and UAI are similar to those of fixes. However, for all missions except Mission 8, the combined frequency of WA and UAI is significantly higher than that of fixes.

When considering both non-aging-related Mandelbugs (NAMs) and aging-related bugs (ARBs), the findings remain consistent, as shown in Table VIII. The primary difference between NAMs alone and the combination of NAMs and ARBs is that ARBs are fixed more frequently, leading to a smaller difference between the combined WA and UAI frequencies and the fix frequencies.

#### Detailed Analysis

**Table IX: Mitigation Type Frequencies for Individual Missions (BOH + NAM + ARB)**

| Mission ID | Fix/Patch | WA | UAI | WA+UAI |
|------------|-----------|----|-----|--------|
| 1          | 0.595     | 0.238 | 0.130 | 0.348  |
| 2          | 0.658     | 0.214 | 0.217 | 0.439  |
| 3          | 0.556     | 0.271 | 0.296 | 0.519  |
| 4          | 0.500     | 0.181 | 0.407 | 0.443  |
| 5          | 0.783     | 0.148 | 0.070 | 0.452  |
| 6          | 0.370     | 0.407 | 0.439 | 0.825  |
| 7          | 0.825     | 0.214 | 0.216 | 0.519  |
| 8          | 0.770     | 0.229 | 0.095 | 0.443  |

**Table X: Mitigation Type Frequencies for Early vs. Late Missions**

| Mission Group | Fix/Patch | WA | UAI | WA+UAI |
|---------------|-----------|----|-----|--------|
| BOH           |           |    |     |        |
| Missions 1–4  | 0.753     | 0.222 | 0.103 | 0.340  |
| Missions 5–8  | 0.833     | 0.117 | 0.119 | 0.222  |
| NAM           |           |    |     |        |
| Missions 1–4  | 0.393     | 0.259 | 0.327 | 0.607  |
| Missions 5–8  | 0.462     | 0.366 | 0.288 | 0.615  |
| NAM+ARB      |           |    |     |        |
| Missions 1–4  | 0.417     | 0.265 | 0.327 | 0.583  |
| Missions 5–8  | 0.491     | 0.341 | 0.272 | 0.600  |
| BOH+NAM+ARB  |           |    |     |        |
| Missions 1–4  | 0.602     | 0.241 | 0.218 | 0.449  |
| Missions 5–8  | 0.729     | 0.177 | 0.166 | 0.337  |

**Interpretation of Results:**
- **Mission 6:** This mission stands out as the only one where the combined frequency of WA and UAI is significantly higher than that of fixes.
- **Early vs. Late Missions:** For the first four missions (Missions 1–4), the frequencies of fixes and WA+UAI are roughly equal. In contrast, for the later four missions (Missions 5–8), fixes are more frequent, while the combined frequency of WA and UAI is lower, except for Mission 6.

**Factors Influencing Mitigation Types:**
- **Logging and Analysis:** Improved logging of system parameters over time has likely enhanced the ability of operations personnel to identify and correct faults, leading to a higher frequency of fixes in the later missions.
- **End-of-Mission Considerations:** During the final stages of a mission, proposed patches may be discarded if the effort outweighs the benefit, potentially affecting the observed frequencies of fixes.

#### Discussion and Conclusion

The study of failure reports from eight missions indicates that different types of mitigating actions are taken in response to various fault types. The consistency of these findings across the missions suggests that they may be applicable to future similar missions.

**Key Findings:**
- **Bohrbugs:** Most Bohrbugs are mitigated via fixes, aligning with previous research indicating that Bohrbugs are the most commonly encountered faults during mission operations.
- **Non-Aging-Related Mandelbugs and Aging-Related Bugs:** Despite the difficulty in isolating these faults, fixes are still the most frequent mitigation action. This is likely due to the high priority placed on maintaining full system functionality and the availability of detailed system logs.
- **Aging-Related Bugs:** These are more frequently fixed/patched compared to non-aging-related Mandelbugs, possibly because aging effects are easier to detect from system logs.

**Future Work:**
- **Ground-Based Support Systems:** Further investigation will be conducted to determine if the mitigating actions for ground-based support systems differ from those for flight software.
- **Ongoing Analysis:** As more recent missions continue their operations, the analysis of mitigation types will be extended to assess whether the higher frequency of fixes is a characteristic of the missions or an artifact of their shorter operational periods.

**Acknowledgment:**
This research was conducted at the Jet Propulsion Laboratory, California Institute of Technology, and Duke University, sponsored by NASA's Office of Safety and Mission Assurance Software Assurance Research Program.

**References:**
[1] D. Dvorak, Ed., “NASA study on flight software complexity,” NASA, Tech. Rep. NASA Office of Chief Engineer, 2009. [Online]. Available: http://www.nasa.gov/pdf/418878main FSWC Final Report.pdf
[2] M. Grottke and K. S. Trivedi, “A classification of software faults,” in Supplemental Proc. 16th International IEEE Symposium on Software Reliability Engineering, 2005, pp. 4.19–4.20.
[3] M. Grottke and K. S. Trivedi, “Software faults, software aging and software rejuvenation,” Journal of the Reliability Engineering Association of Japan, vol. 27, no. 7, pp. 425–438, 2005.
[4] M. Grottke and K. S. Trivedi, “Fighting bugs: Remove, retry, replicate, and rejuvenate,” IEEE Computer, vol. 40, no. 2, pp. 107–109, 2007.
[5] A. Avizienis, J.-C. Laprie, B. Randell, and C. Landwehr, “Basic concepts and taxonomy of dependable and secure computing,” IEEE Transactions on Dependable and Secure Computing, vol. 1, pp. 11–33, 2004.
[6] R. Chillarege, “Understanding Bohr-Mandel bugs through ODC triggers and a case study with empirical estimations of their field proportion,” in Proc. 2011 IEEE 3rd International Workshop on Software Aging and Rejuvenation, 2011, pp. 7–13.
[7] J. Gray, “Why do computers stop and what can be done about it?” Tandem Computers, Tech. Rep. 85.7, PN87614, 1985.
[8] M. Grottke, R. Matias, and K. S. Trivedi, “The fundamentals of software aging,” in Proc. 1st International Workshop on Software Aging and Rejuvantion, 2008.
[9] E. Marshall, “Fatal error: How Patriot overlooked a Scud,” Science, vol. 255, no. 5050, p. 1347, 1992.
[10] A. Avritzer and E. J. Weyuker, “Monitoring smoothly degrading systems for increased dependability,” Empirical Software Engineering, vol. 2, no. 1, pp. 59–77, 1997.
[11] V. Castelli, R. E. Harper, P. Heidelberger, S. W. Hunter, K. S. Trivedi, K. Vaidyanathan, and W. P. Zeggert, “Proactive management of software aging,” IBM Journal of Research & Development, vol. 45, no. 2, pp. 311–332, 2001.
[12] K. Chaudhuri, A. Kothari, R. Swaminathan, R. Tarjan, A. Zhang, and Y. Zhou, “Server allocation problem for multi-tiered applications,” HP Labs, Tech. Rep. HPL-2004-151, 2004.
[13] M. Grottke, L. Li, K. Vaidyanathan, and K. S. Trivedi, “Analysis of software aging in a Web server,” IEEE Transactions on Reliability, vol. 55, pp. 411–420, 2006.
[14] M. Grottke, A. P. Nikora, and K. S. Trivedi, “An empirical investigation of fault types in space mission system software,” in Proc. 40th Annual IEEE/IFIP International Conference on Dependable Systems and Networks, 2010, pp. 447–456.
[15] J. Alonso, M. Grottke, A. P. Nikora, and K. S. Trivedi, “The nature of the times to flight software failure during space missions,” in Proc. 23rd IEEE International Symposium on Software Reliability Engineering, 2012, pp. 331–340.
[16] K. S. Trivedi, M. Grottke, and E. C. Andrade, “Software fault mitigation and availability assurance techniques,” International Journal of Systems Assurance Engineering and Management, vol. 1, no. 4, pp. 340–350, 2010.
[17] Y. Huang, C. Kintala, N. Kolettis, and N. D. Fulton, “Software rejuvenation: Analysis, module and applications,” in Proc. 25th International Symposium on Fault-Tolerant Computing, 1995, pp. 381 – 390.
[18] J. Gray, “A census of Tandem system availability between 1985 and 1990.” IEEE Trans. Reliability, vol. 39, no. 4, pp. 409–418, 1990.
[19] M. Kaaniche and K. Kanoun, “Reliability of a commercial telecommunications system,” in Proc. 7th International Symposium on Software Reliability Engineering, 1996, pp. 207–212.
[20] J. Xu, Z. Kalbarczyk, and R. K. Iyer, “Networked Windows NT system field failure data analysis,” in Proc. 1999 Pacific Rim International Symposium on Dependable Computing, 1999, pp. 178–185.
[21] N. Talagala and D. Patterson, “An analysis of error behavior in a large storage system,” EECS Department, University of California, Berkeley, Tech. Rep. UCB/CSD-99-1042, 1999.
[22] A. Chou, J. Yang, B. Chelf, S. Hallem, and D. Engler, “An empirical study of operating systems errors,” in Proc. 18th ACM Symposium on Operating Systems Principles, 2001, pp. 73–88.
[23] P. Enriquez, A. Brown, and D. Patterson, “Lessons from the PSTN for dependable computing - a study of FCC disruption reports,” in Proc. Workshop on Self-Healing, Adaptive, and Self-Managed Systems, 2002.
[24] D. Oppenheimer, A. Ganapathi, and D. A. Patterson, “Why do internet services fail, and what can be done about it?” in Proc. 4th Conference on USENIX Symposium on Internet Technologies and Systems, vol. 4, 2003, pp. 1–16.
[25] A. R. Hoffman, N. H. Green, and H. B. Garrett, “Assessment of in-flight anomalies of long life outer planet missions,” in Environmental Testing for Space Programmes, ser. ESA Special Publication, K. Fletcher, Ed., vol. 558, Aug. 2004, pp. 43–50.
[26] S. Peret and P. Narasimham, “Causes of failure in web applications,” Carnegie Mellon University, Tech. Rep. CMU-PDL-05-109, 2005.
[27] N. W. Green, A. R. Hoffman, and H. B. Garrett, “Anomaly trends for long-life robotic spacecraft,” Journal of Spacecraft and Rockets, vol. 43, no. 1, pp. 218–224, 2006.
[28] N. W. Green, A. R. Hoffman, T. K. M. Schow, and H. B. Garrett, “Anomaly trends for robotic missions to Mars: Implications for mission reliability,” in Proc. 44th AIAA Aerospace Sciences Meeting and Exhibit, 2006, pp. 1–9.
[29] E. Pinheiro, W.-D. Weber, and L. A. Barroso, “Failure trends in a large disk drive population,” in Proc. 5th USENIX Conference on File and Storage Technologies, 2007, pp. 17–28.
[30] W. Jiang, C. Hu, Y. Zhou, and A. Kanevsky, “Don’t blame disks for every storage subsystem failure,” The USENIX Magazine, vol. 33, no. 3, pp. 22–31, 2008.