a trace with three symbols
^ 
t|A
t
A*
trace concatenation
t  restricted to events in the set A
alphabet of a trace t
set of traces with elements in A
^ <>^  = 
|{a,c} = 
L 
= {a1, a2, a3}
A*={s | s|A = s }
interleave(t1,t2)
interleaving of the bunch of traces t1
traces(t )
trace(S)
Blow(t ,S)
Gp(t ,S)
S\a
and t2
is t  a trace of system S
bunch of traces of system S
bunch  of  traces  that  are  consistent
with  observing  t   by  the  low  level
user
Null Event
§s:traces(S)(cid:215)
|L=s|L
p^   ^ s =  p^ s
of 
traces 
bunch 
property  P
guarantees  are  consistent  with  the
observation of t  by the LLU
Removes 
System S
the  event 
  from 
the
- x -
15
15
15
15
15
15
16
16
17
17
27
31
34
57
L
t
e
a
Logic
Notation
=
P(cid:217) Q
P(cid:218) Q
(cid:216) P
P(cid:222) Q
" x:A(cid:215) P
$ x:A(cid:215) P
§x:A(cid:215) P
Meaning
equals
is not equal to
P and Q are both true
one or both are true
P is not true
if P then Q
for all x in bunch A P is true
there  exists  a  x  in  bunch  A
such that P is true
those  x  in  A  such  that  P  is
true
Example
x=x
x„ x+1
x‡ x-1(cid:217) x£ x+1
y£ x (cid:218)
(cid:216) 6>8
x£ y(cid:222)
 y‡ x
x<y
Sets and Bunches
Notation
 B
 B
A ¨
A ˙
A\B
:
A, B
Meaning
is a member of
A union B
A intersect B
Set restriction
is a member of
A union B
Example
a˛ {a,b,c,d}
A¨ B={x|x˛ A(cid:218) x˛ B}
A˙ B={x|x˛ A(cid:217) x˛ B}
x˛ B}
A\B={x|x˛ A(cid:217)
a : a,b,c,d
a,b,c,d
- xi -
„
˛
(cid:216)
1.  Introduction and Overview
Security is a game in which the final goal is never quite in reach.
Laurence Martin (b. 1928)
British author, academic
1.1. 
Introduction
Computers  have  proliferated  throughout  every  aspect  of  today’s  society.    Our
reliance on computers to maintain  and  store  everything  from  our  nation’s  secrets  to  the
number of items an individual purchases is growing rapidly.  Information is becoming the
single  most  important  commodity.    It  is  being  bought  and  sold  to  the  highest  bidder.
Information about individuals, corporations and governments must not  be  allowed  to  be
inappropriately  disclosed,  maliciously  altered,  or  destroyed.    The  threats  that  must  be
protected against are diverse, such as the disgruntled employee, the corporate spy,  even
hackers  whose  only  desire  is  to  inflict  hardship  on  unsuspecting  people.    A  means  for
controlling  these  and  all  other  attacks  is  required.    Without  one  the  damage  to  society
could be immense.  To provide adequate security it must be possible to construct secure
computer systems.
The  ability  to  derive  the  properties  of  an  assembly  of  components  from  the
properties of its individual constituents is central to being able to design secure computer
systems.    A  system  for  which  this  capability  exists  is  said  to  be  a  composable  system.
Unfortunately, an  understanding  of  how  to construct  such  secure  computer  systems  has
been unavailable.  The goal of this work is to provide the necessary foundations so  that
secure computer systems can be built.
The  remainder  of  this  introductory  chapter  will  provide  some  background
information and state the thesis of the work.
- 1 -
1.2.  Security Properties and Systems
The goals of computer security are easily stated; prevent users from accessing or
acquiring information they are not authorized to access or acquire.  Realizing this goal has
been difficult.  To accomplish this goal systems have to be constructed that satisfy security
properties.    Security  properties  specify  the  types  of  acceptable  behaviours  of  a  system.
There has been much work in developing formal models of information flow in the hopes
of  understanding  how  to  prevent  these  flows.    Despite  the  advances  made  to  date  a
complete theory of information flow in secure systems is still missing.
1.3.  Composability
For  many  years  engineers  have  been  designing  systems  using  standard,  pre-
designed components to achieve an economy of design effort and multiple other benefits.
The  system  is  composed  out  of  components  that  have  been  designed  individually  and
separately.  This means that  the designer need not start  with  a  blank  sheet  every  time  a
system  is  to  be  composed,  because  a  repertoire  of  components  exists  that  can  be
incorporated into a new system.
Unfortunately for secure systems this type of system design has not been possible.
The  critical  missing  technology  is  the  ability  to  create  a  composite  trustworthy  system,
using  as  components  a  heterogeneous  collection  of  existing  products  [Hemenway  &
Gambel91].  The following quotation from John McLean clearly states the problem:
A general ability to build composite high-assurance systems presupposes a
general theory of system composition.  Such a theory provides insight into
why certain properties are preserved or not perserved by certain forms of
compostion.  More importantly, for a large class of properties and a variety
of composition constructs, it answers questions of the form:  “if a system
satisfying  property  X  is  composed  with  a  system  satisfying  property  Y
using composition construct Z, what properties will the composite system
satisfy?” [McLean94]
In  this  work  we  examine  security  properties  under  composition  and  propose  a
solution to the problem stated by McLean.
- 2 -
1.4.  This Thesis
This  thesis  is  concerned  with  a  theory  of  the  composition  of  components  into
systems  such  that  the  information  flow  properties  of  the  composed  system  can  be
predicted from the information flow properties of the components and from the nature of
the  interconnections.    As  can  be  seen  from  the  review  in  Chapter  2,  the  problem  has  a
considerable history that has not always resulted in a useful outcome.  Our objective has
been to present a new view of this problem that develops new insight into the control of
information flows by composed systems.
The thesis of this work is that we can predict the security property satisfied by a
composed system from those of its constituent components.  We determine conditions for
a  property  to  emerge  under  composition.    We  also  demonstrate  for  a  large  class  of
security  properties  how  to  determine  if  a  state  machine  representation  of  the    system
satisfies the security property.
1.5.  Overview
Chapter  2  provides  a  brief  review  of  the  relevant  related  research,  including
security modeling, trusted systems and composability.
Chapter 3 introduces the model of the systems that we will be considering in this
work.    We  also  formally  introduce  the  notion  of  composition  of  components  and  other
notation that will be used throughout the work.
In Chapter 4 we define security properties.  We investigate the nature of security
properties and provide a method of specifying security properties.  We also demonstrate
how to compare security properties.  Finally, we demonstrate that the current approaches
to composition of systems are not applicable to security properties.
Chapter  5  presents  our  theory  of  secure  composition. 
  We 
investigate
compositions with and without feedback.  We also provide a means of determining under
what conditions a property may  emerge  under  composition.    That  is,  when  a  composed
system satisfies a property that not all of its constituent parts satisfy.
Chapter  6  compares  our  work  and  results  to  the  other  major  work  on  the
composition of secure components, McLean’s Selective Interleaving Functions (SIF).
- 3 -
Chapter 7 presents  a  method  of  determining  if  a  non-deterministic  state  machine
satisfies a particular property.  We will show that the class of properties for which we can
provide  such  a  result  encompasses  most  of  the  security  properties  presented  in  the
literature.
Finally, Chapter 8 summarizes the work and provides a number of conclusions.  It
also gives a number of directions for future work in the area.
- 4 -
2.  Previous Work
No  great  man  lives  in  vain.    The  history  of  the  world  is  but  the
biography of great men.
Thomas Carlyle (1795-1881)
Scottish writer
2.1. 
Introduction
In  this  chapter  we  introduce  some  of  the  related  research  in  the  area  of
composability  and  formal  modeling  of  systems.    The  emphasis  will  be  placed  on  the
research upon which this thesis was directly based.
2.2.  Event Systems
The  purpose  of  our  work  is  to  predict  the  effects  of  interconnecting  systems.
These systems will be modeled using discrete event systems.  The idea of a discrete event
system is to describe the possible observed behaviour of the system rather than the way it
works.  At the heart of all event system models is the concept of a trace.  A trace is the
temporally ordered series of  events  that  represent  one possible  execution  of  the  system.
We defer a formal introduction to event systems until Chapter 3.
2.3.  Confidentiality Models
We  present  some  of  the  previous  work  in  confidentiality.    Confidentiality  is  the
property  that  information  should  not  be  made  available  or  disclosed  to  an  unauthorized
user.  This work is not intended to be an exposition of security properties.  Therefore, we
will only  present  some  of  the  relevant  previous  work  and  defer  introducing  the  security
properties until they are needed.
- 5 -
2.3.1. Lattice Approaches to Security
Bell and LaPadula [Bell & LaPadula75] introduced a model of security policies for
military  systems.    Their  model  (BLP)  is  one  of  the  earliest  successful  treatments  of
confidentiality, and was subsequently the basis of U.S. Department of Defense criteria to
be discussed in the next section.
The  BLP  model  is  based  upon  requirements  for  access  controls.    Bell  and
LaPadula formalized their model by the axioms of simple security and the *-property (star
property).    These  axioms  define  which  subjects  (active  entities)  are  permitted  to  read
which objects (passive, data-storage entities).
Simple security states that a process may not have read access to any object unless
the security class of the object dominates that of the process.  The *-property states that a
process may not write to an object unless the security class of the object is dominated by
that of the process.
Denning [Denning76] extended the Bell and LaPadula model by pointing out that
the  classification  of  subjects  and  objects  form  a  lattice  of  security  levels.    The  two
properties of the BLP model have straightforward extensions to the lattice model.
Since the introduction of these  models, several  shortcomings  have  been  noted  in
the literature [McCullough87] [McCullough88].  These systems required trusted subjects
to perform vital functions of the system.  Also, not all information can be easily described
using the object representation.  The simple notions of read and write operations do not
adequately represent the often complex behaviour that occurs in real systems.
2.3.2. Formal Criteria
The  formal  criteria  are  the  security  policies  by  which  security  of  systems  are
established and verified.  The issue of composability has not been addressed by any of the
formal criteria release by the United States government, the European Community or the
Canadian  government.    The  Canadian  Trusted  Computer  Product  Evaluation  Criteria
[CTCPEC],  released  in  January  1993  mentions  the  issue  of  composability.    It  indicated
that  the  state  of  current  research  has  not  yielded  adequate  advances  to  include  any
composability requirements in the criteria.
- 6 -
“Efforts  have  begun  to  work  out  methods  of  evaluation  based  on
composable  products.    As  research  continues,  composable  evaluation  of
properly defined composable products will enter the mainstream from  the
research arena.  Composable products and evaluation would allow Vendors
to  modify  existing  trusted  products  and  ratina  or  improve  their  ratings
without having the entire product re-evaluated” [CTCPEC]
A  detailed  discussion  of  the  underlying  requirements  is  not  warranted  here.
However, the production of these criteria has had a significant input on the development
of security policy and practice in various sectors.
2.3.3. Possibilistic Security Properties
In 1982, Goguen and Meseguer introduced the notion of noninterference [Goguen
& Meseguer82] as the basis for confidentiality.  They proposed the following definition:
“One  group  of  users,  using  a  certain  set  of  commands,  is  noninterfering
with  another  group  of  users  if  what  the  first  group  does  with  those
commands  has  no  effect  on  what  the  second  group  of  users  can  see.”
[Goguen & Meseguer82]
Noninterference  was  the  first  possibilistic  security  property.    The  idea  behind  all
possibilistic  properties  is  that  if  information  of  a  given  security  level  interferes  with
information  of  a  different  security  level,  the  interference  should  be  attributable  to  more
than one possible cause.
Numerous  other  security  properties  have  been  proposed.    Each  new  proposed