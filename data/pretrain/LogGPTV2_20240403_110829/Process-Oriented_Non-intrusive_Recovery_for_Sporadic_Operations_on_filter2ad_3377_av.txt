resource  type  has  attributes  (e.g.  instances  have  an  instance  id,  instance  type,  machine  image, 
etc.).  The  dependency  relationships  among  those  resources  are:  1)  an  ASG  is  associated  with 
one LC; 2) an ASG contains a (possibly empty) set of instances; 3) an ELB links to a (possibly 
empty) set of instances; 4) each instance belongs to at most one ASG; and 5) each instance can 
be  linked  to  a (possibly  empty)  set  of  ELBs. The  workload  of  determining  resource space  for 
scale-down operation is shown in Fig. 37, which shows the execution time of the resource space 
determination algorithm based on 30 times of runs. The average execution time is calculated to 
be 45.90ms, and the relative standard deviation is calculated to be 11.98%. The value of the 75th 
percentile point (75% percentile) is also calculated, which is 49ms. 
Fig. 37.  Workload of Resource Space Determination for Scale-down Operation. 
124 
8.4.3  Workload of Expected Resource State Templates Generation 
The workload of generating the expected resource state templates for the scale-down operation 
is  shown  in  Fig.  38,  which  shows  the  execution  time  of  expected  resource  state  templates 
generation algorithm based on 30 times of runs. The average execution time is calculated to be 
50.57ms,  and  the  relative  standard  deviation  is  calculated  to  be  6.51%.  The  value  of  the  75th 
percentile point (75% percentile) is also calculated, which is 52.75ms. 
Fig. 38.  Workload of Expected Resource State Templates Generation for Scale-down Operation. 
8.4.4  Recovery Satisfying Requirements 
POD-Recovery  is  designed  to  achieve  the  goal  of  satisfying  all  of  the  eight  recovery 
requirements  described  in  section  3.5.  Therefore,  experimental  evaluations  are  required  to 
justify  POD-Recovery’s  capability  of  satisfying  all  the  recovery  requirement  The  experiments 
conducted below are constructed in such a way that it can demonstrate how POD-Recovery is 
able to fulfil each of the recovery requirements using the scale-down operation.  
A.  Runtime Recovery (Satisfying Recovery Requirement R1) 
As  should  be  clear  from  the  descriptions  in  chapters  4-7,  our  method  is  inherently  a  runtime 
recovery solution.  
B.  Recovery Satisfying RTO 
1)  Experimental Procedure 
This  recovery  requirement  concerns  the  time  the  recovery  takes  for  the  system  to  go  to  a 
consistent  state.  We  therefore  measure  recovery  time  by  performing  the  scale-down  operation 
on  a cloud  application. There are  initially  24  instances in the cloud  application.  The instances 
are attached to an auto scaling group and are registered in an elastic load balancer. The cloud 
125 
application  running  in  the  instances  is  TPC-W  which  is  a  3-tier  web  benchmark  application 
running  in  Tomcat  service.  The  average  workload  on  each  instance  is  50  query  requests  per 
second.  We  used  our  own  proprietary  fault  injection  tool  to  inject  faults  for  each  of  the  two 
determined  recovery  points  in  the  scale-down  operation,  automatically  determined  the 
applicable  recovery  patterns  based  on  the  applicable  recovery  patterns  filtering  method 
described in section 7.3, and performed recovery using the selected acceptable recovery action 
based on each of the two recovery action selection methods. The selected recovery action by the 
first selection  method is the  optimal  one; the selected  recovery  action  by  the  second  selection 
method  is  not  necessarily  the  optimal  one,  but  it  is  an  acceptable  one.  Therefore,  the  selected 
recovery actions by both of these two optimization methods are both acceptable ones. The faults 
injected  are  described  in  Table  36.  The  selection  of  injected  faults  is  based  on  our  interviews 
with industry and failure reports, and hence representative. The recovery time is calculated by 
summing up the execution time of each function in the recovery action. We ran the experiment 
30 times, measuring the recovery time.  
Table 36.  Faults injected for Scale-down Operation 
Recovery Point 
Fault injected 
Recovery Point 1 (After Step 1) 
3 instances still in ELB  
Recovery Point 2 (After Step 3) 
3 instances not terminated 
2)  Experimental Results 
Table 37 shows the recovery time of the recovery for the scale-down operation. Recovery time 
here  refers  to  exclusively  the  time  for  executing  the  recovery  plan.  The  recovery  time  in  the 
table represents the average value of the recovery time for 30 runs. The highest relative standard 
deviation is 1.6%. For each recovery point, the execution time of the recovery action selected by 
the Pareto set search based optimization method is no greater than the other applicable recovery 
actions;  the  execution  time  of  the  selected  recovery  action  by  the  user  constraints  based 
optimization  method  is  not  necessarily  less  than  all  the  other  ones,  but  it  is  within  the  time 
constraint set by business stakeholders. 
126 
Table 37.  Recovery Time for Scale-down 
Legends 
Recovery Pattern ID  Recovery Pattern 
Recovery Pattern ID 
Recovery Pattern 
RP1 
RP2 
RP3 
RP4 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 
Rewind & Alternative 
RP5 
RP6 
RP7 
RP8 
Reparation 
Direct Redo 
Direct Alternative 
Farther Undo & Redo 
Recovery 
Process 
Point 
Step 
Errors 
Applicable 
Recovery 
Patterns 
Selected 
Recovery 
Action(Pareto 
Set) 
Recovery 
Time 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Recovery 
Time (User 
Constraints) 
3 
instanc
es  still 
in ELB  
RP1, RP3, 
RP5, RP6 
Deregister 3 
instances from 
the elastic load 
balancer; 
6.88 s 
Deregister 12 
instances from 
the elastic load 
balancer; 
22.19 s 
(Reparation) 
 (Direct Redo) 
3 
instanc
es  not 
termina
ted 
RP1, RP2, 
RP3, RP4, 
RP5, RP6, 
RP8 
Terminate 3 
instances again; 
(Reparation) 
64.77 s 
Set auto scaling 
group’s desired 
capacity to be 
12; 
Wait for the 
auto scaling 
group to 
terminate 3 
instances; 
 (Direct Redo) 
70.84 s 
Step 1. 
Deregister 
12 
instances 
from the 
elastic load 
balancer 
Step 2. 
Decrease 
auto scaling 
group’s 
desired 
capacity 
from 24 to 
12 
Step 3. 
Wait for the 
auto scaling 
group to 
terminate 
12 
instances. 
Recovery 
Point 1 
Recovery 
Point 2 
3)  Satisfying Recovery Requirement R2 
From  the  results  we  can  see  that  the  recovery  for  all  the  recovery  points  in  the  scale-down 
operation takes no more than 71 seconds for execution. In addition, for these experiments state 
capturing time was typically around 14s but at most 15s, applicable recovery patterns filtering 
time  was  at  most  43  milliseconds  (ms),  recovery  plan  generation  time  for  each  applicable 
recovery pattern was at most 77 milliseconds (ms), applicable recovery actions evaluation time 
is at most 234 milliseconds (ms), and acceptable recovery action selection time  is at most 279 
milliseconds  (ms).  While  not  part  of  our  scope  here  directly,  error  detection  time  has  to  be 
considered when discussing RTO as well. Detection times reported in the literature ranged from 
10ms to 11 seconds (X. Xu, et al., 2014). The sum of the worst cases of all the above times, i.e. 
the total error detection and recovery time, is around 98s. So, for each recovery point, the total 
recovery time is below 98 seconds, no matter which recovery action selection method is used. 
Normally,  if  the  errors  occur  again,  POD-Diagnosis  service  will  capture  the  errors  again  and 
trigger POD-Recovery again. Hence, POD-Recovery achieves a reasonable RTO. 
127 
C.  Recovery Reducing Negative Impact 
1)  Experimental Procedure 
This recovery requirement concerns the negative impact the recovery incurs on the cloud system. 
We  therefore  measure  recovery  impact  by  performing  the  scale-down  operation  on  a  cloud 
application. There are initially 24 instances in the cloud application. The instances are attached 
to  an  auto  scaling  group  and  are  registered  in  an  elastic  load  balancer.  The  cloud  application 
running  in  the  instances  is  TPC-W  which  is  a  3-tier  web  benchmark  application  running  in 
Tomcat  service.  The  average  workload  on  each  instance  is  50  query  requests  per  second.  We 
used  our  own  proprietary  fault  injection  tool  to  inject  faults  for  each  of  the  two  determined 
recovery points in the scale-down operation, automatically determined the applicable recovery 
patterns based on the applicable recovery patterns filtering method described in section 7.3, and 
performed  recovery  using  the  selected  acceptable  recovery  action  based  on  each  of  the  two 
recovery action selection methods. The faults injected are described in Table 38. The selection 
of  injected  faults  is  based  on  our  interviews  with  industry  and  failure  reports,  and  hence 
representative. The recovery impact is calculated by computing the cross-product of two vectors: 
1) the average response time to user requests in each of the steps of the recovery action; 2) the 
execution time of each step of the recovery action. We ran the experiment 30 times, measuring 
the average recovery impact. 
Table 38.  Faults injected for Scale-down Operation 
Recovery Point 
Fault injected 
Recovery Point 1 (After Step 1) 
3 instances still in ELB  
Recovery Point 2 (After Step 3) 
3 instances not terminated 
2)  Experimental Results 
Table 39 shows the recovery impact of the recovery for the scale-down operation. The recovery 
impact in the table represents the average value of the recovery impact for 30 runs. The highest 
relative standard deviation is 2.4%. For each recovery point, the impact of the recovery action 
selected  by  the  Pareto  set  search  based  optimization  method  is  no  greater  than  the  other 
applicable recovery  actions;  the impact  of the  selected  recovery  action  by  the  user  constraints 
based  optimization  method  is  not  necessarily  less  than  all  the  other  ones,  but  it  is  within  the 
impact constraint set by business stakeholders. 
128 
Table 39.  Recovery Impact for Scale-down 
Legends 
Recovery Pattern ID  Recovery Pattern 
RP1 
RP2 
RP3 
RP4 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 
Rewind & Alternative 
Recovery Pattern ID 
RP5 
RP6 
RP7 
RP8 
Recovery Pattern 
Reparation 
Direct Redo 
Direct Alternative 
Farther Undo & Redo 
Recovery 
Process 
Point 
Step 
Errors 
Applicab
le 
Recovery 
Patterns 
Selected 
Recovery 
Action(Pareto 
Set) 
Recovery 
Impact 
(Pareto Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Recovery 
Impact 
(User 
Constraints) 
3 
instances 
still 
ELB  
in 
RP1, 
RP3, 
RP5, RP6 