商业版本
商业化实践或应用案例
第三方评估结果
用户满意度
070
软件供应链安全解决方案
根据对检查的评估属性和评估指标进行分级定义和分级运算每一级有相应的权重体系，
自下而上计算得出开源软件的量化评分值。
2. 服务商测评
测评范围：对开源软件的直接服务商，包括整体组织机构或某个独立的具体开源技术领
域的系统或部门。
测评内容：内容依据评测模型具有一级评估属性、二级评估属性、评测指标三个层次，
共有 8 项一级评估属性、20 项二级评估属性、118 项评测指标。包括：行业经验、技术能力、
服务质量、开源经验、企业资质、服务交付、运维支持、安全保障。包括但不限于以下内容：
行业经验
项目实施经验
近三年同业服务能力
技术能力
技术人员
核心技术
技术方案和验证
软件服务商评测模型涉及定性评价和定量评价两类评测指标，使用专家评分法对服务商
进行评测：首先根据服务商的评测指标制订评分标准，然后聘请若干代表性专家凭借自己的
经验按此评分标准给出各指标的分值，最后汇总计算得到指标得分和服务商综合得分。
5.2.3 商业软件安全技术检测
5.2.3.1 渗透测试
渗透测试（Penetration Testing）是由具备高技能和高素质的安全服务人员在不同的位置
（比如从内网、从外网等位置）利用各种手段对某个特定网络发起、并模拟常见黑客所使用
的攻击手段对目标系统进行模拟入侵进行测试，以期发现产品中存在的安全隐患。渗透测试
服务的目的在于充分挖掘和暴露系统的弱点，从而让管理人员了解其系统所面临的威胁。
渗透测试是脆弱性评估的一种很好的补充。同时，由于主持渗透测试的测试人员一般都
具备丰富的安全经验和技能，所以其针对性比常见的脆弱性评估会更强、粒度也会更为细致。
另外，渗透测试的攻击路径及手段不同于常见的安全产品，所以它往往能暴露出一条甚至多
条被人们所忽视的威胁路径，从而暴露整个系统或网络的威胁所在。最重要的是，渗透测试
最终的成功一般不是因为某一个系统的某个单一问题所直接引起的，而是由于一系列看似没
有关联而且又不严重的缺陷组合而导致的。日常工作中，无论是进行怎么样的传统安全检查
软件供应链安全技术白皮书
071
工作，对于没有相关经验和技能的管理人员都无法将这些缺陷进行如此的排列组合从而引发
问题，但绿盟科技的渗透测试人员却可以靠其丰富的经验和技能将它们进行串联并展示出来。
5.2.3.2 组件漏洞分析
软件成分，即软件物料清单，通常称为 BOM。高德纳公司也建议企业“持续构建详细的
软件物料清单，以提供对组件的完全可见性”
[31]。通过软件成分分析 SCA 工具，可以生成
BOM 清单，提供详尽的组件版本和许可信息等。维护准确的软件 BOM 可以帮助企业快速查
明易受攻击的组件。
组件的典型风险包括：1. 组件中包括已知的漏洞；2. 组件中包含高危漏洞；3. 组件过期，
多年未运维或已经不维护，可能存在未知风险。
针对开源软件成分分析，可以采取以下步骤：1. 使用 SCA 工具和技术，形成开源软件的
BOM 清单；2. 关注 BOM 中的组件，涉及到中高危漏洞的组件，进行升级或规避修复；3. 定
期更新组件和漏洞知识库，对新发现和暴露的漏洞，及时进行修复。
5.2.3.3 代码审计
代码安全审计，这里指采用静态分析方法的一种白盒安全测试，也称之为静态应用程序
安全测试 SAST。主要用于识别非运行（静态）代码中的编码缺陷。静态测试包括对代码缺
陷检测和代码质量检测。
代码中静态风险包括：1. 开发人员在上线前做 AST 测试交付压力较大，如何在 IDE 编码
阶段处理代码风险；2. 在编码阶段，可能会引入的安全性或代码质量问题；3. 一些编译后的
字节或二进制代码，需要进行分析
[32]。
针对开源代码静态审计，步骤如下：1. 使用 SAST 工具和技术，对开源代码进行审计；2. 针
对不同开发语言，配置相应的检测规则或采用默认检测规则；3. 对检查出代码中的漏洞，参
照修复建议进行修复。
5.2.4 供应商安全风险评估
供应商风险评估是以对标国外先进水平、促进供应商服务持续改进；保障供应链安全稳定；
保障敏感数据为核心。包括协助供应商分级分类、分别针对不同类别的供应商建立供应商风
险度量指标：机房、非驻场开发、鉴证核查、数据处理共 4 类供应商风险度量指标。定期风
[31] Garter, 2019, Technology Insight for Software Composition Analysis
[32] Gartner, 2020, How to Deploy and Perform Application Security Testing.
072
软件供应链安全解决方案
险评估，发现安全风险并要求征整改。重点聚焦威胁防御，数据安全，业务连续性。最终实
现发现并安全隐患、供应商评级参考、保障供应链业务安全。
5.2.4.1 供应商分类分级
供应商分级分类是对供应商进行分级分类管理，对重要供应商和一般供应商采取差异化
管控措施。通过分类分级差异化管控，重点关注重要供应商的高风险等级评估项，对其进行
优先整改，实现精准高效供应链安全管理。属于重要供应商的包括但不限于：核心业务软件
系统开发测试和运行维护的供应商、软件涉及集中存储重要数据和客户个人敏感信息的供应
商、直接影响实时业务和影响账务等重要信息准确性的供应商；其它对组织业务运营具有重
要影响的供应商。
5.2.4.2 建立指标
各级别风险度量指标是对供应商建立服务效能和质量监控指标，并进行相应指标监控。
依据与业务场景相结合的指标，能够准确分析供应商需承担的安全责任和所需的安全能力，
特别是数据保护能力。针对不同类型的软件供应商可定制不同评估项，实现标准化。常见评
估领域包括但不限于：基本情况、制度管理、人员安全、业务连续性管理、服务水平连续管理、
机房管理要求、机房物理要求、办公环境、终端安全、系统安全、数据安全等。
5.2.4.3 风险评估及整改
现状调研：主要以文档调阅、人员访谈、现场勘查的方式进行。文档调阅主要是调阅供
应商管理体系相关文档，包括供应商运维管理文档、信息安全管理策略、业务连续性管理文档、
信息科技外包管理文档、系统设计文档等，以充分了解供应商管理现状。人员访谈包括对相
关部门相关人员的访谈，人员访谈目的为验证管理制度和流程的制定 / 执行 / 监督 / 维护情况，
以及人员对于本岗位相关的管理制度和流程的理解水平。现场勘查主要是对物理机房的现场
走查，实地查看物理环境是否能够承载各信息系统稳定运行。
差距分析：以国家标准为主要依据，结合行业监管机构的相关监管规范的内容，根据实
际情况，形成衡量供应商管理能力检查表、供应商风险评估表。覆盖了机房、非驻场开发、
鉴证核查、数据处理 4 类供应商风险度量指标，涵盖了基本情况、制度管理、人员安全、业
务连续性管理、服务水平连续管理、机房管理要求、机房物理要求、办公环境、终端安全、
系统安全、数据安全等评估项。以完成供应商及供应商管理与国家、行业监管要求之间的差
距合规性分析。
软件供应链安全技术白皮书
073
5.2.5 供应链安全应急体系建设
5.2.5.1 应急预案编制
编制一个适用于企业自身的应急预案应当包含以下步骤：
1. 现状调研
为了使编制的应急预案贴合企业实际情况，在正式编制应急预案之前，应当对企业现状
进行调研，调研内容包括但不限于涉及软件成分信息，软件使用情况，涉及业务的重要程度，
以及软件的部署架构及方式；运行维护涉及到的部门、供应商情况；软件系统的风险评估结
果等。
2. 预案编制
收集完上述内容后，就可以成立相应的应急预案编制组进行应急预案的编制。同时还要
确定应急预案的场景。供应链安全事件与现有安全事件分类标准存在一定的差异。
微软将供应链安全事件主要分为四类：1、损坏的软件生成工具或更新的基础结构；2、
被盗的代码签名证书或使用开发人员公司的标识签名的恶意应用；3、硬件或固件组件中附
带的已泄漏的专用代码；4、在相机、USB、手机等设备上预安装的恶意软件。微软的这个分
类方法主要是从攻击手法的角度来对供应链安全事件进行一个分类。
欧盟在 2021 年 7 月发布的《ENISA THREAT LANDSCAPE FOR SUPPLY CHAIN ATTACKS》
中指出欧盟网络安全事件分类学用于联盟一级的事件响应协调活动和信息共享。由于分类法
在概念上不同，不允许对供应链事件进行详细分析，因此提供了一种对供应链攻击事件分类
的方法，从 4 个要素进行考虑，分别为供应商、供应商资产、客户以及客户资产，这种分类
方法可覆盖供应链攻击的整个过程。我们建议同时使用这两种分类法。
NIST 则在 2021 年 4 月发布的《Defending Against Software Supply Chain Attacks》中
将常见攻击链安全事件分了三类：1、劫持更新：大多数现代软件都会收到常规更新，以解
决错误和安全问题。软件供应商通常将更新从集中服务器分发给客户，作为产品维护的常规
部分。威胁参与者可以通过渗透供应商的网络并将恶意软件插入传出的更新或更改更新以授
予威胁参与者对软件正常功能的控制权来劫持更新。例如，NotPetya 袭击发生在 2017 年，
当时针对乌克兰的俄罗斯黑客通过乌克兰流行的税务会计软件传播恶意软件。后来被称为
NotPetya 的恶意软件蔓延到乌克兰以外，并在国际航运、金融服务和医疗保健等关键行业造
074
软件供应链安全解决方案
成了重大全球破坏。2、破坏共同设计：共同设计用于验证代码作者的身份和代码的完整性。
攻击者通过自签名证书、破坏签名系统或利用配置错误的帐户访问控制来破坏共同设计。通
过破坏共同设计，威胁参与者可以通过冒充受信任的供应商并将恶意代码插入更新来成功劫
持软件更新。例如，总部位于中国的威胁参与者 APT 41 在对美国和其他国家进行复杂的软
件供应链妥协时经常破坏共同设计。3、破坏开源代码：当威胁参与者将恶意代码插入可公
开访问的代码库时，就会发生开源代码妥协，毫无戒心的开发人员⸺ 寻找免费的代码块来
执行特定功能⸺ 然后添加到他们自己的第三方代码中。例如，2018 年，研究人员发现了
12 个恶意 Python 库上传到官方 Python 软件包索引（PyPI）。攻击者使用拼写策略，创建了
名为“diango”、“djago”、“dajngo”等的库，以吸引寻求流行“django”Python 库的
开发人员。恶意库包含与模拟库相同的代码和功能；但它们还包含其他功能，包括在远程工
作站上获得引导持久性和打开反向外壳的能力。开源代码妥协也可能影响私有软件，因为专
有代码开发人员通常在其产品中利用开源代码块。
在编制的过程中可以参考相关法律法规、行业规范、技术规范等，结合企业自身情况和
安全能力，制订相应的应急处置流程和操作规范。
3. 预案评审、发布及培训
编写完成的应急预案，应当邀请相关人员，如内外部专家，预案涉及部门等进行评审，
评审通过后通过企业的文件发布流程对应急预案进行发布，召集所有涉及的人员进行相关
培训。
5.2.5.2 专项应急演练
5.2.5.2.1 应急演练目标
开展供应链安全应急演练的目标主要是为了检验以下能力：
1. 情报收集 / 研判能力