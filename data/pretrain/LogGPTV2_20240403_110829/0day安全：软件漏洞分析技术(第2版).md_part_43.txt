:GDispeyodeOB:Portrait
BZLITMESOURCE (IDD_NELLO_FORLD_BIALOG)):
AKEIHTRESONRCECIDD_MZLLO_WORLD_SIALOG_WIDE)
Dint test (int s, int b, snt e, int d4, int e)
Bundaf
int f=a+b+c+d+e:
id CMelle_Ter1 dlg: :OnbsClickedutteal 0
// Tob0: Add your control not:ficetion handler code bere
BessageBou OL"Mallo Vor14"):
tnt(,2.3,4.5）:
图7.4.8程序中断在我们设置的断点上
231
---
## Page 257
day安全
您可能会说接下来不就是按F10键或者F11键单步调试嘛，但是如果只是简单的按F10键
或F11键进行单步调试函数调用时候的很多细节如寄存器、堆栈等信息我们是看不全的，所以
此时我们需要更为详细的调用过程。我们可以通过菜单“Debug->Windows->Disassembly”来
：
切换到汇编代码窗口，在汇编代码窗口我们可以看到函数调用前的参数传递过程，这时我们可
软件漏
以按F10键单条执行汇编。在这个过程中我们还可以通过菜单“Debug->Windows->Registers”
打开寄存器窗口来观察寄存器的变化状态，如图7.4.9所示。
洞分析技术
dAq
Address:CHelo_WoridDlg:OnBnCldadButton1
x
roid CKello_Wor1dDlg: OnBnClickeduttenl O
通过堆栈和寄
存器传递参数
sp!,
sp1, (r12, 1r1
（第2版
000113320
000113C4
r3.
str
r3,
[p)
X0011300
0001130C
r3,
r2,
00011300
r1,
?
Wessagelor
000113DC
Iorl4):
00011384
00011380
1
通过BL调用函数
000113EC
300113E0
b1
1dr
（3210h）1
000113F0
e6d
00011374
1die
IO
00011378
311000
r12.
图7.4.9汇编代码窗口和寄存器窗口
当程序执行到图7.4.9所示的BL指令时，按F11键跟入这个BL，就可以发现程序保存返
回地址、读取参数、函数结束时根据堆栈中返回地址返回等过程的代码，如图7.4.10所示。
Adress:OHelo_worldDig:OnenClcedButtont
000113601dm1e
.[. p)
int testGiat s int b, int e. int 4
保存返回地址
00011364
BOV
p,
r12,
00011366
D001138C
stad
stadb
Ir12,
r31
0x7e074250
00000111
00011370
M
+b+e+*e:
sub
Dx7e072150
00000000
00011378
00011374
1dr
80x10
#0x14
R14寄存器保
0001137C
2.3
存着返回地址
00011380
0x18
RII
00011364
R12
00011308
0001136C
00011390
0011364
00011398
00011394
f.
str
0001139C
return
1dr
将返回值放入RO
000113A0
str
000113M
1dr
r0,[p.]
000113A8
4dd
根据堆栈中的返
000113AC1die
回地址返回
Thn
0x0000000
eid CHello Tor14Ble:OlnClickeduttoa
图7.4.10
函数的执行过程
232
---
## Page 258
第
7
以结合堆栈中的内存数据来分析程序是不是发生了溢出、溢出点在哪以及哪次操作触发了漏洞
喜
等。将在“7.5手机上的exploitme”一节更为详细的介绍这一过程。
手
机
7.4.3手机上的调试一IDA
里
的
很多的时候我们是在没有程序源代码的情况下进行调试的，这时候我们该怎么调试呢？虽
缓
然VS也有远程进程调试能力，但是它也只能attach到某个进程上，不能从程序启动的时候就
冲
区
开始调试。这时我们就需要请出IDA了，IDA里边包含着一些远程调试组件，其中一个就是为
溢
WindowsCE设计的，我们就可以利用这个组件来调试WindowsMobile上的程序。
出
大家首先要确定IDA是不是支持WindowsCE的调试。以IDA5.5为例，如果IDA支持
WindowsCE的调试，那么打开IDA后在“Debugger->run”菜单下面就可以看到“RemoteWinCE
debugger”选项，如图7.4.11所示。
TDA
FleEdtJumpSearchWiewDebuggerOptionswindowsHelp
oenqep s4qpog jexo1
Local windows debugge
Remote GDe debugger
Remote Linux debugpe
Remote Mac O5 X debugee
lemoteSymbiandebugge
Reoote WinCE dobugue
Remote Windows debuggee
Remote iPhone V1.x debugper
Windbg debugger
图7.4.11支持WinCE调试的IDA
由于这次我们不使用VS了，所以我们要手动启动WindowsMobile模拟器，并将其与
Activesync进行连接，这样IDA才能够将要调试的二进制文件复制到模拟器里进行调试。
虽然我们这次不使用VS，但是我们还要借助它里边的一个小工具来启动WindowsMobile
模拟器。这个小工具就是设备仿真管理器，大家可以通过VS中“Tools->DeviceEmulater
Manager”菜单来启动这个工具。启动该工具后首先右键点击相应型号的模拟器选择Connect，
再次右键点击选择Gradle，如果一切顺利的话就可以看到右下角的Activesync显示连接完成。
如图7.4.12所示。
待模拟器与Activesync连接好后，我们用IDA打开要调试的文件。依然以前面的Hello
World程序为例，我们来观察一下程序调用MessageBox的过程。
首先我们需要确定函数调用MessageBox的位置，现在我们知道MessageBox里面弹出是
字符串“HelloWorld”，所以我们可以通过查找“HelloWorld”来确定MessageBox调用的过程。
我们可以通过菜单“View->Open subviews->strings”就可以打开字符串窗口了，里边显示出程
233
---
## Page 259
0
day
序中所有的字符串，这与OllyDbg中的查找参考字符串的功能是类似的，如图7.4.13所示。
安全
Device Emulator Manager
Fle
Actlors Hep
：
[Windows Moble 6 Professional SDK
先点击Connect
软
件
Windows Moble 6 Classic Emulatoi
wnoMPrsn E
漏
Windows Moble 6 Professional Square Emul
WindowsMoble6ProfessonalSau
Uncradle
7ar3e
洞
Windows Mobile
Windows Mobdel
然后点击Gradle
分
[Shutdown
Wndows Moble 6 Sh
JReset
析
Windows Moble 6 Standard Emulator
Clear Save Sate
技
Windows Moble 6 Standard Landscape QVG
Bring to Front
Windows Moble 6 Standard QVGA Emulator
Recontiqure
术
My Device Emulators
Save-As
（第
2
图7.4.12
连接模拟器与Activesync
版
X IDAVe-PC
Addess
LengthType
Sting
" ndala 000F
0C0004E
uri..
Local Appwizard-Generaled Appications
"* tdsta 000F..
00000018
uni..
Hello Wofd
rdataOOOF
00000022
uni..
Invaid DateTime
rdata 00OF
0000002A
uri.
Invaid DateTimeSpan
*" Idala 0O0F
80000000
uri.
LOC
HelloWord字符串，双击
* idala:000F
81000000
uni..
oenduemnaneegyeseg
coredldl
* * dala:00F.
00000032
uni..
该行可查看详细信息
** dala:00F
00000036
uni..
GeSystenDelauiUILanguage
* dala: 00F.
90000000
uni..
NoClose
** idala: 000F.
00000010
uri.
-.* dale OO0F
00000028
uri.
NoRecenDoctHiatory
* * sdala:000F
0000002E
un
NoNetCornectDiaconnect
 dala 000F.
81000000
uni..
NoDeves
RestrictRun
** rdela 000F.
00000012
adla: 000F
uri..
dala000F
 4
0000000C
uri..
00000020
uri..
NoEnireNetwork
*.* adala 000F
00000014
un.
NoFleMnu
dslaOO0F
0000001A
UFk..
NoB-ackBulton
IdaiaO0OF
00000018
uri.
Salhwarel\Micosal\Windowr\CurenlVersiontVPolcierIComdg32
NoPlacesBar
° xdsia 000F,
00000079
uni..
rdala 000F
00000076
uri..
SofhwaretMicrosofWwindowstCurmenlVersionlVPoiciertWetwork
dala OO0F
00000078
uri..
Sollware\Microsoll\windowr\CurrenVersion\VPoicies\VEapiorer
rdata000F.
00000012
uri..
%%td
** rdala 000F
00000012
uri..
Fegister
Lne 2 of 1269
图7.4.13字符串窗口
我们很容易地就可以找到“HelloWorld”字符串，双击这个字符串所在行，就可以来到字
符串在程序中的位置，如图7.4.14所示。大家注意观察DATAXREF后边的内容，这就是程序
中引用这个字符串的位置，也就是调用MessageBox前参数的布置时引l用，所以MessageBox
就是在这个函数中调用的。我们双击后边的sub_113B0就可以来到这个函数中。
来到这个函数中后，大家看着这些汇编指令是不是很熟悉？对！这些指令包含了调用test
和MessageBox函数指令，如图7.4.15所示。
234
---
## Page 260
第
XDAV
7
-rdata:00F4168BCsub_1E724