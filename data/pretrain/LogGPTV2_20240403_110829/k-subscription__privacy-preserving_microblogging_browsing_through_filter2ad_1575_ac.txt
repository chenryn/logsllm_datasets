disclosure probability PC1,...,CN that a user following all these N
channels is actually interested in them is equal to:
UC1 ,...,CN + (U − UC1 ,...,CN ) × (cid:0)
UC1 ,...,CN
pC1 ,...,CN
pC1 ,...,CN + (1 − pC1 ,...,CN ) × (cid:0)
|S|−N
(k−1)N −N(cid:1)/(cid:0) |S|
(k−1)N(cid:1)
=
(3)
|S|−N
(k−1)N −N(cid:1)/(cid:0)
|S|
(k−1)N(cid:1)
(k−1)N−N(cid:1)/(cid:0) |S|
where (cid:0) |S|−N
(k−1)N(cid:1) is the probability that a user selects
randomly these N channels from the set S with (k − 1) × N ran-
dom choices when using the k-subscription-UNIF approach. We
estimate this probability with a hypergeometric distribution, where
all the successes N in the population S should be drawn with (k −
1) × N attempts. Since we assume that all channels have the same
popularity, the k-subscription-PROP approach has exactly the same
behavior with k-subscription-UNIF in this analysis. pC1,...,CN is
the popularity of the N-tuple of sensitive channels, i.e., the percent-
age of users actually interested in all these C1, ..., CN channels.
We want to explore how the disclosure probability changes with
the number of channels N that a user may be interested in. We
assume that the users interested in N channels are UC1 ,...,CN =
UC /N , i.e., they are reduced by N times. Note that we assume
a hyperbolic decrease of the users as N increases, instead of an
53S=1000, pC=0.001
S=1000, pC=0.01
S=2000, pC=0.01
 1
 0.1
N
C
,
.
.
.
,
1
C
P
y
t
i
l
i
N =   1 channel  
N =   2 channels
N =   3 channels
N =   4 channels
N =   5 channels
N = 10 channels
 1
 0.1
N
C
,
.
.
.
,
1
C
P
y
t
i
l
i
N =   1 channel  
N =   2 channels
N =   3 channels
N =   4 channels
N =   5 channels
N = 10 channels
 1
 0.1
N
C
,
.
.
.
,
1
C
P
y
t
i
l
i
N =   1 channel  
N =   2 channels
N =   3 channels
N =   4 channels
N =   5 channels
N = 10 channels
b
a
b
o
r
P
e
r
u
s
o
c
s
D
i
l
 0.01
 0.001
 0.0001
b
a
b
o
r
P
e
r
u
s
o
c
s
D
i
l
 0.01
 0.001
 0.0001
b
a
b
o
r
P
e
r
u
s
o
c
s
D
i
l
 0.01
 0.001
 0.0001
 0  100  200  300  400  500  600  700  800  900 1000
 0  100  200  300  400  500  600  700  800  900 1000
 0  100  200  300  400  500  600  700  800  900 1000
k: Obfuscation Level (per channel)
k: Obfuscation Level (per channel)
k: Obfuscation Level (per channel)
(a) |S|=1,000, channel popularity=0.1%
(b) |S|=1,000, channel popularity=1%
(c) |S|=2,000, channel popularity=1%
Figure 4: Disclosure Probability as a function of the obfuscation level k when users are interested in one up to ten sensitive channels,
for different size of S and channel popularity pC .
s
r
e
w
o
l
l
o
f
f
o
r
e
b
m
u
N
105
104
103
102
101
100
100
f(x)=x
a
 e
bx
 c
(a=-0.073, b=-0.001, c=505747)
101
102
103
104
Channel rank
r
e
s
u
r
e
p
d
e
w
o
l
l
o
l
f
s
e
n
n
a
h
c
f
o
r
e
b
m
u
N
 35
 30
 25
 20
 15
 10
 5
b
f(x)=a x
(a=55.6, b=-0.37)
C
P
y
t
i
l
i
b
a
b
o
r
P
e
r
u
s
o
c
s
D
i
l
Maximum
Average
 1
 0.1
 0.01
 0
100
101
102
103
104
105
106
 0.001
 0
User rank
 50
 100
 150
 200
k: Obfuscation Level
Figure 5: Distribution of the sensitive
channels popularity.
Figure 6: Distribution of the number of
sensitive channels followed by a user.
Figure 7: Disclosure probability as a func-
tion of k using realistic simulations.
exponential decrease, because we believe that these N channels
will be probably semantically related. We set the size of S to 1, 000
and 2, 000 sensitive channels and we assume that all channels have
the same popularity pC , which is set to 0.1% and 1%.
Figure 4 shows the disclosure probability as a function of k for
different values of N , ranging from 1 up to 10. We see that as the
number of channels N increases, the disclosure probability is in-
creased for low values of k, but it decreases signiﬁcantly for higher
k. The increase for low k values is because the users interested
in N channels are reduced just by N times, following a hyper-
bolic growth, while the probability of randomly selecting these N
channels for the rest users is reduced signiﬁcantly by following a
hypergeometric distribution. Thus, it is unlikely for the rest users
to follow all these N channels at random with low k values. This
means that for users interested in many sensitive channels we need
to use a higher k to achieve a low disclosure probability.
In contrast, for higher values of k, we see a signiﬁcant reduc-
tion of the disclosure probability when users are interested in more
channels. This is because the users interested in N sensitive chan-
nels follow k × N channels in total, so we have more random
selections for higher N values. For instance, when N = 5 and
k = 200, each user follows 1, 000 channels from S, i.e., all the ex-
isting channels in S when |S| = 1, 000. The same happens in case
of N = 10 and k = 100. When the size of S and channel popu-
larity pC increase, the disclosure probability increases respectively,
according to Equation 3. However, a proper selection of a higher k
value results in a much lower disclosure probability, as the users’
interests can be efﬁciently hidden among the random selections of
other users. Our experimental evaluation in Section 6 shows that
the network bandwidth and latency when following few hundreds
of noise channels are negligible, so our approach is able to protect
the users’ privacy even when they are interested in many sensitive
channels that are probably semantically related.
4. SIMULATION-BASED EVALUATION
To evaluate k-subscription in a more realistic setup, where users
are interested in a different number of sensitive channels, and sensi-
tive channels have different popularities, we built a realistic Monte
Carlo simulator. The simulator assigns a random popularity pC to
each channel following a similar distribution to real-world sensitive
channels. First, each user randomly selects the number of channels
N that she is interested in following, based on a distribution simi-
lar to real-world users’ selections. We assume that all N channels
are semantically correlated. Then, the user selects these channels
one-by-one at random, proportionally to channel’s popularity. The
noise selection is performed with k-subscription-PROP.
To simulate a realistic popularity distribution of sensitive chan-
nels, we selected a set S of 7, 000 sensitive channels using Twel-
low [1], a website that categorizes Twitter accounts according to
their subject. The selected channels correspond to Twitter accounts
dealing with health, political, religious, and other sensitive issues.
We estimate the popularity of each channel based on its number
of followers, i.e., UC . Figure 5 shows the distribution of sensitive
channel popularity in our dataset. We see that this distribution can
be approximated very well using a power law with exponential cut-
off model. We use this approximation in the simulator to assign a
popularity pC in each channel. We also see that only a small per-
centage of the sensitive channels exhibit relatively high popularity,
which increases the disclosure probability. In contrast, the major-
ity of sensitive channels have low popularity, which results in low
disclosure probability even for low values of k.
To simulate a realistic distribution of the number of sensitive
channels N that each user is interested in, we used the same real-
word dataset of sensitive channels. From the total 7, 000 channels,
we used the Twitter API to collect the user IDs of the followers of
500 sensitive channels related to disability issues, and we measured