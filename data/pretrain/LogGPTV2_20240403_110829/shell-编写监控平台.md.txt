**编写监控平台**
需求：提前发现服务器故障告警，实现服务器统一硬件监控
思路：
1.  肯定要有一个监控脚本（子程序），用来监控收集各硬件信息
2.  需要邮件告警的话肯定需要一个发邮件脚本，一般是和一个PHP专门发邮件的脚本做联动
3.  输出日志的脚本（作为对监控平台错误日志的收集，更准确的发现监控平台在运行中产生的错误信息）
4.  主程序（用于各脚本之间的调用和相互链接，属于监控平台脚本中的一条主线）
5.  配置文件（可有可无，用于更好的管理和配置脚本）
程序架构：
主目录（mon）
bin conf shares mail log
（主程序） （配置文件）（各个监控脚本）（邮件报警）（日志）
\[mon.sh\] \[mon.conf\] \[local.sh 502.sh\] \[mail.php mail.sh\]
\[mon.log err.log\]
编写步骤：
1、创建目录
cd /usr/local/sbin/ #进入这个目录
mkdir mon #创建主目录
cd mon #进入主目录
mkdir bin conf mail shares log #创建所需要的所有子目录
cd /usr/local/sbin/mon/bin #进入主程序目录
2、编写主程序
vim mon.sh
#！/bin/bash
#written by huwenchao
#是否发送邮件的开关
export send=1
#1代表发送邮件，0代表不发送，这个值的定义是在子脚本中具体定义的
#过滤IP地址
export addr=\`/sbin/ifconfig \|grep --A1 'eth0' \|grep addr: \|awk
'{print \$2}'\|awk --F: '{print \$2}'\`
dir=\`pwd\`
#只需要最后一级目录名
last_dir=\`echo \$dir\|awk --F'/' '{print \$NF}'\` #其中\$NF
是倒数最后一列的意思
#下面判断的目的是保证执行脚本的时候，我们在bin目录下，否则监控脚本、日志和邮件很有可能找不到
if \[ \$last_dir == "bin" \] \|\| \[ \$last_dir == "bin/" \]
then
conf_file="../conf/mon.conf"
else
echo "you shoud cd bin dir"
exit
fi
exec 1\>\>../log/mon.log 2\>\>../log/err.log
echo "\`date +"%F %T"\` load average"
/bin/bash ../shares/load.sh
#先检查配置文件中是否需要监控502
if grep --q 'to_mon_502=1' \$conf_file
then
export log=\`grep 'logfile=' \$conf_file \|awk -F '=' '{print \$2}'
\|sed 's/ //g'\`
/bin/bash ../shares/502.sh
fi
3、编写配置文件
vim ../conf/mon.conf
##to config the options if to monitor
##cdb 主要定义mysql的服务器地址、端口和用户、密码
to_mon_cdb=0 ##0 or 1, default 0,0 not monitor, 1 monitor
cdb_ip=10.20.3.13
cdb_port=3315
cdb_user=username
cdb_pass=password
##httpd 如果为1则监控，为0则不监控
to_mon_httpd=0
##php 如果为1则监控，为0则不监控
to_mon_php_socket=0
##http_code_502 需要定义访问日志的路径
to_mon_502=1
logfile=/data/log/\*\*\*\*.\*\*\*\*.com/access.log
##request_count 定义日志路径及域名
to_mon_request_count=0
req_log=/data/log/www.discuz.net/access.log
domainname= www.discuz.net
4、编写load脚本
vim ../shares/load.sh
#!/bin/bash
##writen by huwenchao##
load=\`uptime \|awk -F 'average:' '{print \$2}' \|cut --d ',' -f1 \|sed
's/ //g' \|cut -d. --f1\`
if \[ \$load -gt 20 \] && \[ \$send --eq "1" \]
then
echo "\$addr \`date +%T\` load is \$load" \>../log/load.tmp
/bin/bash ../mail/mail.sh \$assr\\\_load \$load ../log/load.tmp
fi
echo "\`date +%T\` load is \$load"
5、编写502脚本
#！/bin/bash
d=\`date --d"-l min" +%H:%M\`
c_502=\`grep :\$d: \$log \|grep ' 502 '\|wc -l\`
if \[ \$c_502 -gt 10 \] && \[ \$send == 1 \]
then
echo "\$addr \$d 502 count is \$c_502"\>../log/502.tmp
/bin/bash ../mail.sh \$addr\\\_502 \$c_502 ../log/502.tmp
fi
echo "\`date +%T\` 502 \$c_502"
6、下载一个mail.php 文件放到mail目录下并修改
7、编写mail脚本
vim ../mail/mail.sh
#!/bin/bash
log=\$1
t_s=\`date +%s\`
t_s2=\`date --d "2 hours ago" +%s\`
if \[ ! -f /tmp/\$log \]
then
echo \$t_s2 \> /tmp/\$log
fi
t_s2=\`tail -l /tmp/\$log\|awk '{print \$1}'\`
echo \$t_s\>\>/tmp/\$log
v=\$\[\$t_s-\$t_s2\]
echo \$v
if \[ \$v -gt 3600 \]
then
/dir/to/php ../mail/mail.php "\$1 \$2" "\$3"
echo "0" \> /tmp/\$log.txt
else
if \[ ! -f /tmp/\$log.txt \]
then
echo "0" \> /tmp/\$log.txt
fi
nu=\`cat /tmp/\$log.txt\`
nu2=\$\[\$nu+1\]
echo \$nu2\>/tmp/\$log.txt
if \[ \$nu2 -gt 10 \]
then
/dir/to/php ../mail/mail.php "trouble continue 10 min \$1 \$2" "\$3"
echo "0" \> /tmp/\$log.txt
fi
fi