# OCR Output
## Page 1
实用CommonLisp编程
Practical Common Lisp
人民邮电出版社
[美]   Peter Seibel 
北
田春 
京
译
著
---
## Page 2
后还对一些未介绍内容加以延伸。
圾过滤器、解析二进制文件、构建 ID3 解析器，以及如何编写一个完整的 MP3 Web 应用程序等内容。最
格式、符号与包，等等。而接下来的9个章节则翔实地介绍了几个有代表性的实例，其中包含如何构建垃
准宏与自定义宏、数字与字符以及字符串、集合与向量、列表处理、文件与文件 IO 处理、类、FORMAT
个章节讲述了各种基础知识，主要包括：REPL及Common Lisp 的各种实现、S-表达式、函数与变量、标
序设计 IV.
本书内容适合Common Lisp 初学者及对之感兴趣的相关人士。
这是一本不同寻常的Common Lisp人门书。本书首先从作者的学习经过及语言历史出发，随后用 21
中国版本图书馆CIP数据核字(2011)第191310号
书名原文：
实用Common Lisp编程／（美）
ISBN 978-7-115-26374-2
（图灵程序设计丛书）
图书在版编目（CIP）数据
①实…·
①TP312
 Practical
读者服务热线：（010)51095186转604 印装质量热线：（010)67129223
北京
①塞·…②田··II.①LISP语言一程
印数：1-3500册
字数：678千字
印张：27.25
开本：800×10001/16
北京艺辉印刷有限公司印刷
网址http://www.ptpress.com.cn
人民邮电出版社出版发行
责任编辑傅志红
译
著
 Common Lisp
人民邮电出版社，2011.10
著作权合同登记号图字：01-2010-2360号
反盗版热线：（010)67171154
田春
[美]Peter Seibel
塞贝尔(Seibel,P.)
www.TopSage.com
实用Common Lisp编程
ISBN 978-7-115-26374-2
图灵程序设计丛书
定价：89.00元
内容提要
北京市崇文区夕照寺街14号
2011年10月北京第1次印刷
2011年10月第1版
---
## Page 3
当今程序员日常可能用到的众多问题领域，诸如Web开发和流媒体技术。”
用 Lisp 来讲解真是件令人高兴的事。尤其令人赞叹的是，这本书中包含的如此多的示例涵盖了
著作了。
且你读过并学会了它，接下来就可以继续阅读 Graham、Norvig、Keene 和 Steele 等人的‘经典
其他Lisp 著作中被完全忽略的内容，诸如路径名、状况和再启动等主题。
Lisp 的好书，但它们都不像本书这样务实和与时俱进。况且我们还不要忘了Peter 讲述了一些在
CommonLisp用户，还是其他潜在用户来说都是这样。”
本能够针对实际开发者讲解实现方式及相关原因的好书却是很有价值的，无论是对当前的
大威力。
确地感受到了Common Lisp 在以最小的代价构建复杂而具革命性的软件系统过程中所爆发的强
知道的 Common Lisp 语言特性的角落。Seibel这一示例驱动思路所产生的结果就是，让读者准
程序员们最常使用的CommonLisp特性上，而没有纠缠于那些即便是专家也要通过查询手册才
切人点，通过--系列复杂度递增的编程示例来引导读者。这一思路把重点放在了那些有经验的
少对于那些认为学习新语言很有趣的人来说是这样的。
用于实际工作的人来说，这是一本极佳的人门参考书。这本书写得非常好并且读起来很有趣，至
“在Common Lisp 领域已经有许多采用了更具抽象和比较性的编写思路来创作的好书，但一
“Seibel在书中并未花大量时间来抽象地讨论Lisp 在编程语言界的地位，而是选择了正确的
“有经验的程序员可以从示例中学到极其有用的知识，而 Seibel这本示例丰富的人门教材中
“如果你初学Lisp 并且想要选择一个正确的切人点，那么就不要犹豫，赶快买下本书吧。
“这本书要是在我当初学Lisp 的时候出版该多好。这并不是说当时没有其他关于Common
“Peter Seibel的 Practical Common Lisp 名副其实：对于那些想要学习并开始将 Common Lisp
—Edi Weitz，Common Lisp Cookbook 的维护者和 CL-PPCRE 正则表达式库的编写者
——-Philip Greenspun, Software Engineering for Internet Applications 的作者
对本书的赞誉
—Scott E.Fahlman，Carnegie Mellon 大学计算机科学研究教授
www.TopSage.com
MIT 电子工程和计算机科学学院
---
## Page 4
叙事性内容极其有用，这样的技术书籍更出类拔萃。恭喜你!"
引人宏的时候，我对如此一个简单的例子就让我能真正‘领会’它们的含义而感到震惊。书中的
多，就像在搭建一个最终可以站在上面的平台那样。当 Seibel在构建一个测试框架的过程中顺势
决易于理解的现实问题过程中优雅而精细地体现出了这门语言的威力。
不适合你。Seibel的书是为专业程序员所写的，它更关注工程师和艺术家，而非科学家，并在解
看来学习它，那么这将是一本极佳的入门书。”
也是很有用的。
级程序员。”
这本书，你可以轻松地获取到。仅是阅读那些实践性的示例就足以让我成为能胜任各种语言的高
诉世界，使用Lisp 可以轻松地将字符串和数字组装成树和图。”
Common Lisp 的威力。他包含在书中的许多示例重点关注当代的编程问题，充分说明了Lisp 绝
什么，还说明了为什么每个程序员都应当熟悉Lisp。”
不仅仅是一门学院派编程语言。这本书是该领域的一本极受欢迎的著作。”
一本书让我可以毫无保留地推荐给他们。PeterSeibel那简明直接的风格使读者能够快速地领略
展的实际应用，阐述了Common Lisp许多独一无二的特性。这本书不仅说明了Common Lisp 是
“阅读大多数章节的感受就好像正在编写一个程序，一开始只知道很少的内容，然后越来越
“终于有一本为我们写的Lisp书了。如果你想要学习如何编写一个阶乘函数，那么这本书并
“如果你对Lisp 感兴趣是因为它跟Python或Perl有关系，并且想要通过实际动手而不只是观
“它提供了这门语言的全新视角，并且后面章节里的那些例子在你作为程序员的日常工作中
“学习一门编程语言最重要的一部分就是学习它正确的编程风格。这很难教授，但通过阅读
“我喜欢那些分散在书中描述‘真实’和有用程序的实践性章节。我们需要这样一本书来告
“Maxima 项目经常得到那些想要学习Common Lisp 的潜在贡献者的垂询。我很高兴最终有
“这是一本涵盖了CommonLisp广泛内容的优秀书籍，其中通过演示一些读者可以运行和扩
---Christian Queinnec 教授, Universite Paris 6 (Pierre et Marie Curie)
Frank Buss，Lisp 程序员和 Slashdot贡献者(www.slashdot.org)
-Chris McAvoy, Chicago Python 用户 组 (www.chipy.org)
www.TopSage.com
—James Amundson，Maxima 项目负责人
—John Foderaro，Franz Inc.资深科学家
一Keith Irwin，Lisp 程序员
—Peter Scott，Lisp 程序员
对本书的赞誉 
---
## Page 5
整的单元测试框架；而且还表现在一些全新领域上，诸如解析二进制MP3文件、构建浏览歌曲
介绍。”
CommonLisp程序员了，因为他们已经‘完成”了一个大项目。我认为，Lisp是唯一一门允许采
知识，同时这些项目将会合并成具有相当规模的产品。读完本书，读者会感到他们已经是专业的
后就转向了‘实践”章节。读者会在跟随开发这些‘实用’项目的过程中逐渐学会更多的语言
这就意味着我完全不知道如何使用它。相反，这本书在用最初的几章讲解了最基本的语言概念以
通过阅读一本人门书学习Lisp的，我觉得我理解了这门语言，但也有这样的感觉：‘那又怎样？
初的想法错了。这本书不是‘另一本”书。作者更关注实践方面而非语言的技术细节。我最初是
还要写另一本关于CommonLisp的书？’一年以后，我看到了这本新书的初稿，也意识到我最
书中被实现的几件事。”
编程、Shoutcast服务器、HTML生成解释器和HTML生成编译器等领域，这些只是碰巧在这本
CommonLisp，以应对当今各种复杂的现实问题。”
灵活和最稳定的编程语言正获得广泛关注的原因。这是一本令人期待已久的书，它将帮助你驾驭
书，它是目前在教授编程方式方面最具可读性的来源，而绝不仅仅是平铺直叙。”
洁性、C十+的高效性，以及设计自己语言扩展时无与伦比的灵活性。”
用这种实践方式来介绍的语言。Peter充分利用了这个语言特性，勾勒出对CommonLisp的有趣
现如果只是阅读HyperSpec通常很难‘领会’其含义。当遇到这类问题时，我每次都会翻阅这本
集的Web应用以及在Web上传输音频流。许多读者会很惊讶：Lisp具有Python等脚本语言的简
VI
“本书展示了Lisp的威力，不仅是在传统领域，例如仅使用短短的26行代码就开发出一个完
“当我遇到Peter时，他正在写这本书。我自问：‘为什么已经有了许多很好的入门书籍，他
“不要认为CommonLisp只能用于数据库、单元测试框架、垃圾过滤器、ID3解析器、Web
“在急速发展的IT行业，专业人员需要最强大的工具。这就是CommonLisp这种最强大、最
“在学习Lisp的过程中，人们不知道一个特定函数的用途时会去查询CLHyperSpec，但我发
-PeterNorvig，Google公司搜索质量组负责人，Paradigms ofArtificialIntelligenceProgramming：
对本书的赞誉
Marc Battyani，CL-PDF、CL-TYPESETTING和 mod_lisp 的开发者
www.TopSage.com
—TaiichiYuasa教授，京都大学计算机科学与通信学院
CaseStudiesinCommonLisp的作者
TobiasC.Rittweiler，Lisp程序员
—PhilipHaddad，Lisp程序员
沙网
---
## Page 6
Protocol)。如果要用一句话来描述 Common Lisp 中的 OO 与 C++/Java/SmalITalk 等语言的 OO 有
到的面向对象编程接口CLOS（Common Lisp Object System）和 OO扩展接口MOP（Meta-Object
乎所有的编程范式（面向过程的、函数式的以及面向对象的)，尤其带有一套特性丰富且思想独
遍支持的各种数据类型（包括各种数值类型、字符串、数组、结构体和哈希表在内），还支持几
这本书，就会发现Common Lisp 是一门特性丰富的大型编程语言，不但提供了现代编程语言普
的人还停留在列表（List）是Lisp 语言的唯一复合数据类型的认识上。如果读者从头到尾学完了
也谈到这个问题。当今有太多的人对Lisp 语言存在类似的误解，包括相当多学过早期Lisp 语言
来观察的话，可以说它跟人工智能毫无关系。在PracticalCommon Lisp一书中，作者Peter Seibel
快就发现，CommonLisp是一门通用的编程语言，如果不考虑其历史渊源而只从语言本身的特性
动机基本上是出于对人工智能（传统的逻辑和推理、知识表示等方向）的个人兴趣。不过随后很
缩影。
其他语言编译器的数量。可以说，Lisp 语言家族长达 50 年的发展史就是整个计算机发展史的
平台可以运行在现代计算机上，其中10种还在广泛使用中，远超过它们所在的操作系统上C和
还是间接转译成C语言的，或是运行在 JVM上的。目前至少有 13 种不同的 Common Lisp 语言
任何调整就可能运行在任何一种CommonLisp平台上，无论是带有原生或是字节码编译器的，
码只通过少量修改就可以兼容现代Lisp 平台，而且标准化以后写出的所有新代码也都几乎不经
种语言和平台特性做了一次伟大的总结，从此语言核心不再变化，不但标准化以前的历史遗留代
—-Lisp 机。1994 年，ANSI标准化的Common Lisp 语言将之前历史上的所有现存Lisp厂商的各
算机硬件体系上均有移植，甚至在 20世纪 80 年代还出现过专门用来运行Lisp 程序的硬件
所有主流计算机分支上，都获得了长足的发展。Lisp平台不但在 IBM PC 出现之前的几乎所有计
借助它可以轻松描述当时人工智能领域用到的各种算法。从此，Lisp 语言在包括 AI 领域在内的
介绍了一种运行在古老的IBM 704计算机上的列表处理语言LISP（LISt Processing，列表处理），
Fortran）。那一年，人工智能（AI）专家John McCarthy发表了具有重大历史意义的第一篇LISP
准化以来，国内出版的第一本Common Lisp的中文教材。
我从2003年大学三年级时开始学习CommonLisp 语言，至今已有八个年头。当时学习它的
Lisp 语言家族最早诞生于1959 年，它是人类历史上第二个高级程序设计语言（第一个是
很荣幸，
，我被授权翻译 Practical Common Lisp一书。本书是自1994年Common Lisp 语言标
译
www.TopSage.com
者
序
---
## Page 7
Common Lisp 字样的部分以外，还有最大的也是初学者最容易看到的一点，那就是所有 Lisp 方
会在某个时刻被 GC 系统从内存中清除掉。
任意修改，这对 24x7的服务器端程序的平滑升级尤为有利。顺便说一句，Lisp 也是最早引入垃
更绝的地方：几乎所有Lisp平台都允许用户将加载了用户代码的整个环境从内存中导出（dump）
数，整个程序得以运行。听到这里，读者似乎看到了 Python 或者 Ruby的影子，但Lisp 环境还有
起。换句话说，每一个 Lisp 程序都是对 Lisp 语言本身的某种形式的扩展。然后通过一个启动函
代码以编译或解释的形式加载到Lisp 环境中，然后跟Lisp 语言或平台本身的代码直接融合在-
程序：Lisp 平台本身是一个交互式的环境，它在很大程度上就是用其本身写成的。用户的 Lisp
了，重要的是程序员写出了什么功能，甚至连编译器本身是什么都不重要，因为它只是一个黑箱，
趣的读者应当仔细阅读本书的第16章和第17章，其中介绍了CLOS 的一些入门内容。
何不同，那就是 Common Lisp 对象系统完全不是基于消息传递的，而是基于广义函数的。有兴
题对于 Emacs Lisp（GNU Emacs 文本编辑器的扩展语言）来说也是一样的。Scheme系的 Lisp 方
于AutoLISP。因此我强烈推荐所有 AutoLISP程序员阅读本书以加强自身的 Lisp 素养。同样的问
缺乏效率、滥用内存。AutoLISP在语法上跟Common Lisp 非常接近，本书的大部分内容都适用
作者虽然精通AutoCAD 所提供的Lisp 编程接口，但写出的AutoLISP代码要么极为难看，要么
（AutoCAD计算机辅助设计软件的扩展语言）的各种书籍时，我经常痛心疾首地发现这些图书的