{"@timestamp": {"dashed_name": "timestamp", "description": "Date/time when the event originated.\nThis is the date/time extracted from the event, typically representing when the event was generated by the source.\nIf the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.\nRequired field for all events.", "example": "2016-05-23T08:05:34.853Z", "flat_name": "@timestamp", "level": "core", "name": "@timestamp", "normalize": [], "required": true, "short": "Date/time when the event originated.", "type": "date"}}
{"agent.build.original": {"dashed_name": "agent-build-original", "description": "Extended build information for the agent.\nThis field is intended to contain any build information that a data source may provide, no specific formatting is required.", "example": "metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]", "flat_name": "agent.build.original", "ignore_above": 1024, "level": "core", "name": "build.original", "normalize": [], "short": "Extended build information for the agent."}}
{"agent.ephemeral_id": {"dashed_name": "agent-ephemeral-id", "description": "Ephemeral identifier of this agent (if one exists).\nThis id normally changes across restarts, but `agent.id` does not.", "example": "8a4f500f", "flat_name": "agent.ephemeral_id", "ignore_above": 1024, "level": "extended", "name": "ephemeral_id", "normalize": [], "short": "Ephemeral identifier of this agent."}}
{"agent.id": {"dashed_name": "agent-id", "description": "Unique identifier of this agent (if one exists).\nExample: For Beats this would be beat.id.", "example": "8a4f500d", "flat_name": "agent.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "short": "Unique identifier of this agent."}}
{"agent.name": {"dashed_name": "agent-name", "description": "Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.", "example": "foo", "flat_name": "agent.name", "ignore_above": 1024, "level": "core", "name": "name", "normalize": [], "short": "Custom name of the agent."}}
{"agent.type": {"dashed_name": "agent-type", "description": "Type of the agent.\nThe agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.", "example": "filebeat", "flat_name": "agent.type", "ignore_above": 1024, "level": "core", "name": "type", "normalize": [], "short": "Type of the agent."}}
{"agent.version": {"dashed_name": "agent-version", "description": "Version of the agent.", "example": "6.0.0-rc2", "flat_name": "agent.version", "ignore_above": 1024, "level": "core", "name": "version", "normalize": [], "short": "Version of the agent."}}
{"client.address": {"dashed_name": "client-address", "description": "Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.", "flat_name": "client.address", "ignore_above": 1024, "level": "extended", "name": "address", "normalize": [], "short": "Client network address."}}
{"client.as.number": {"dashed_name": "client-as-number", "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.", "example": 15169, "flat_name": "client.as.number", "level": "extended", "name": "number", "normalize": [], "original_fieldset": "as", "short": "Unique number allocated to the autonomous system.", "type": "long"}}
{"client.as.organization.name": {"dashed_name": "client-as-organization-name", "description": "Organization name.", "example": "Google LLC", "flat_name": "client.as.organization.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "client.as.organization.name.text", "name": "text", "type": "match_only_text"}], "name": "organization.name", "normalize": [], "original_fieldset": "as", "short": "Organization name."}}
{"client.bytes": {"dashed_name": "client-bytes", "description": "Bytes sent from the client to the server.", "example": 184, "flat_name": "client.bytes", "format": "bytes", "level": "core", "name": "bytes", "normalize": [], "short": "Bytes sent from the client to the server.", "type": "long"}}
{"client.domain": {"dashed_name": "client-domain", "description": "The domain name of the client system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.", "example": "foo.example.com", "flat_name": "client.domain", "ignore_above": 1024, "level": "core", "name": "domain", "normalize": [], "short": "The domain name of the client."}}
{"client.geo.city_name": {"dashed_name": "client-geo-city-name", "description": "City name.", "example": "Montreal", "flat_name": "client.geo.city_name", "ignore_above": 1024, "level": "core", "name": "city_name", "normalize": [], "original_fieldset": "geo", "short": "City name."}}
{"client.geo.continent_code": {"dashed_name": "client-geo-continent-code", "description": "Two-letter code representing continent's name.", "example": "NA", "flat_name": "client.geo.continent_code", "ignore_above": 1024, "level": "core", "name": "continent_code", "normalize": [], "original_fieldset": "geo", "short": "Continent code."}}
{"client.geo.continent_name": {"dashed_name": "client-geo-continent-name", "description": "Name of the continent.", "example": "North America", "flat_name": "client.geo.continent_name", "ignore_above": 1024, "level": "core", "name": "continent_name", "normalize": [], "original_fieldset": "geo", "short": "Name of the continent."}}
{"client.geo.country_iso_code": {"dashed_name": "client-geo-country-iso-code", "description": "Country ISO code.", "example": "CA", "flat_name": "client.geo.country_iso_code", "ignore_above": 1024, "level": "core", "name": "country_iso_code", "normalize": [], "original_fieldset": "geo", "short": "Country ISO code."}}
{"client.geo.country_name": {"dashed_name": "client-geo-country-name", "description": "Country name.", "example": "Canada", "flat_name": "client.geo.country_name", "ignore_above": 1024, "level": "core", "name": "country_name", "normalize": [], "original_fieldset": "geo", "short": "Country name."}}
{"client.geo.location": {"dashed_name": "client-geo-location", "description": "Longitude and latitude.", "example": "{ \"lon\": -73.614830, \"lat\": 45.505918 }", "flat_name": "client.geo.location", "level": "core", "name": "location", "normalize": [], "original_fieldset": "geo", "short": "Longitude and latitude.", "type": "geo_point"}}
{"client.geo.name": {"dashed_name": "client-geo-name", "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.", "example": "boston-dc", "flat_name": "client.geo.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "geo", "short": "User-defined description of a location."}}
{"client.geo.postal_code": {"dashed_name": "client-geo-postal-code", "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.", "example": 94040, "flat_name": "client.geo.postal_code", "ignore_above": 1024, "level": "core", "name": "postal_code", "normalize": [], "original_fieldset": "geo", "short": "Postal code."}}
{"client.geo.region_iso_code": {"dashed_name": "client-geo-region-iso-code", "description": "Region ISO code.", "example": "CA-QC", "flat_name": "client.geo.region_iso_code", "ignore_above": 1024, "level": "core", "name": "region_iso_code", "normalize": [], "original_fieldset": "geo", "short": "Region ISO code."}}
{"client.geo.region_name": {"dashed_name": "client-geo-region-name", "description": "Region name.", "example": "Quebec", "flat_name": "client.geo.region_name", "ignore_above": 1024, "level": "core", "name": "region_name", "normalize": [], "original_fieldset": "geo", "short": "Region name."}}
{"client.geo.timezone": {"dashed_name": "client-geo-timezone", "description": "The time zone of the location, such as IANA time zone name.", "example": "America/Argentina/Buenos_Aires", "flat_name": "client.geo.timezone", "ignore_above": 1024, "level": "core", "name": "timezone", "normalize": [], "original_fieldset": "geo", "short": "Time zone."}}
{"client.ip": {"dashed_name": "client-ip", "description": "IP address of the client (IPv4 or IPv6).", "flat_name": "client.ip", "level": "core", "name": "ip", "normalize": [], "short": "IP address of the client.", "type": "ip"}}
{"client.mac": {"dashed_name": "client-mac", "description": "MAC address of the client.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.", "example": "00-00-5E-00-53-23", "flat_name": "client.mac", "ignore_above": 1024, "level": "core", "name": "mac", "normalize": [], "pattern": "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", "short": "MAC address of the client."}}
{"client.nat.ip": {"dashed_name": "client-nat-ip", "description": "Translated IP of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.", "flat_name": "client.nat.ip", "level": "extended", "name": "nat.ip", "normalize": [], "short": "Client NAT ip address", "type": "ip"}}
{"client.nat.port": {"dashed_name": "client-nat-port", "description": "Translated port of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.", "flat_name": "client.nat.port", "format": "string", "level": "extended", "name": "nat.port", "normalize": [], "short": "Client NAT port", "type": "long"}}
{"client.packets": {"dashed_name": "client-packets", "description": "Packets sent from the client to the server.", "example": 12, "flat_name": "client.packets", "level": "core", "name": "packets", "normalize": [], "short": "Packets sent from the client to the server.", "type": "long"}}
{"client.port": {"dashed_name": "client-port", "description": "Port of the client.", "flat_name": "client.port", "format": "string", "level": "core", "name": "port", "normalize": [], "short": "Port of the client.", "type": "long"}}
{"client.registered_domain": {"dashed_name": "client-registered-domain", "description": "The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".", "example": "example.com", "flat_name": "client.registered_domain", "ignore_above": 1024, "level": "extended", "name": "registered_domain", "normalize": [], "short": "The highest registered client domain, stripped of the subdomain."}}
{"client.subdomain": {"dashed_name": "client-subdomain", "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.", "example": "east", "flat_name": "client.subdomain", "ignore_above": 1024, "level": "extended", "name": "subdomain", "normalize": [], "short": "The subdomain of the domain."}}
{"client.top_level_domain": {"dashed_name": "client-top-level-domain", "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".", "example": "co.uk", "flat_name": "client.top_level_domain", "ignore_above": 1024, "level": "extended", "name": "top_level_domain", "normalize": [], "short": "The effective top level domain (com, org, net, co.uk)."}}
{"client.user.domain": {"dashed_name": "client-user-domain", "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.", "flat_name": "client.user.domain", "ignore_above": 1024, "level": "extended", "name": "domain", "normalize": [], "original_fieldset": "user", "short": "Name of the directory the user is a member of."}}
{"client.user.email": {"dashed_name": "client-user-email", "description": "User email address.", "flat_name": "client.user.email", "ignore_above": 1024, "level": "extended", "name": "email", "normalize": [], "original_fieldset": "user", "short": "User email address."}}
{"client.user.full_name": {"dashed_name": "client-user-full-name", "description": "User's full name, if available.", "example": "Albert Einstein", "flat_name": "client.user.full_name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "client.user.full_name.text", "name": "text", "type": "match_only_text"}], "name": "full_name", "normalize": [], "original_fieldset": "user", "short": "User's full name, if available."}}
{"client.user.group.domain": {"dashed_name": "client-user-group-domain", "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.", "flat_name": "client.user.group.domain", "ignore_above": 1024, "level": "extended", "name": "domain", "normalize": [], "original_fieldset": "group", "short": "Name of the directory the group is a member of."}}