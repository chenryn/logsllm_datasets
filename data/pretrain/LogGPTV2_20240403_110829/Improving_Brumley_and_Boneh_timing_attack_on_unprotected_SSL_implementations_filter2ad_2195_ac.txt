2479
1977
4728
0-1 gap
830
11691
12627
15306
17945
22034
19573
22974
Table 2: Average (cid:1) and (cid:1)BB values and 0-1 gaps. The values are given in terms of clock cycles.
(cid:15) Step 2: Comparing (cid:1)j with zero and updating di(cid:11)er-
ence between the number of (cid:1)j values that are less
than zero and the number of (cid:1)j values that are larger
than zero.
(cid:15) Step 3: Repeating (cid:12)rst 2 steps until we reach the target
di(cid:11)erence, D, or a maximum of Nmax times.
(cid:15) Step 4: Making the guess qi = 0, if the target di(cid:11)erence
is reached. Otherwise the guess turns out to be qi = 1.
Note that we normally send only one query in Step 1, al-
though we use a di(cid:11)erence of two timings in our decision.
This is because one of the timings we use to compute the dif-
ference has to be the one used for the decision of the previous
bit. Since we halve the interval, which q is in, in each deci-
sion step, only one of the bounds, either the upper or lower
one, will change. The timings for the bound that does not
change can be reused during the decision process of the next
bit. Therefore sending one query for a particular neighbor
becomes su(cid:14)cient by storing the data of the previous itera-
tion. Of course, there are some cases that we have to send
both queries, speci(cid:12)cally when we exceed the total number
of neighbors used in the previous decision step. However,
just removing the redundant queries, which can also simply
be applied to BB-attack, almost doubles the performance.
7.2.1 The distribution of time differences
We use the distribution of the time di(cid:11)erences for our
decision purposes. Whenever qi = 1, the number of time
di(cid:11)erences lay above and below zero is very close to each
other. However, when qi = 0, the di(cid:11)erence between these
numbers becomes larger(see Figure 4).
7.2.2 Error probabilities and the parameters
When qi = 1, approximately half of the time di(cid:11)erences
If
become positive and the other half become negative.
qi
is 0, the majority of the time di(cid:11)erences becomes ei-
ther positive or negative. We determined the percentage
of that majority in order to calculate the error probability
for a single time di(cid:11)erence. Table 3 shows estimators for
maxffi;(cid:21);0; fi;<;0g and maxffi;(cid:21);1; fi;<;1g. These statistics
were obtained using 10 di(cid:11)erent keys and a neighborhood
size of 50000 for [5; 31] and 5000 for other intervals.
The empirical parameters that yield the intended error
probabilities are shown in Table 4. We present three di(cid:11)er-
ent sets of parameters for each accuracy of 95%, 97.5%, and
99%. We used these parameters to perform our attack on
interval maxffi;(cid:21);0; fi;<;0g maxffi;(cid:21);1; fi;<;1g
[5; 31]
[32; 63]
[64; 95]
[96; 127]
[128; 159]
[160; 191]
[192; 223]
[224; 245]
0:5315
0:6980
0:7123
0:7079
0:7300
0:7349
0:6961
0:6431
0:5040
0:5097
0:5085
0:5079
0:5080
0:5090
0:5077
0:5194
Table 3: The percentage of the majority of time
di(cid:11)erences that are either positive or negative (em-
pirical values)
several di(cid:11)erent keys. Note that inserting the values of Ta-
ble 3 into formula (11) yields the expected values E(Steps)
for qi = 0 and qi = 1, resp. The probabilities for correct
guesses (95%, 97.5%, 99%) were gained empirically.
We employed the concept of ‘con(cid:12)rmed intervals’ (refer to
Section 3) to detect the errors occured during the attack. We
could recover such errors using the same concept and could
expose each bit of q in the interval [5; 245] of any key we
attacked. Brumley and Boneh used 1.4 million queries in [2]
(interprocess attacks) and they indicated that their attack
required nearly 359000 queries in the more favourable case
when the optimizations were turned o(cid:11) by the (cid:13)ag (-g). We
could perform our attack with as low as 47674 queries for a
particular key. The performance of these timing attacks are
highly environment dependent, therefore it is not reliable to
compare the (cid:12)gures of two di(cid:11)erent attacks on two di(cid:11)erent
systems. Despite this fact, it is obvious by the arguments
explained above (improving the signal-to-noise ratio (cf. also
Table 2), reusing previous queries, sequential sampling) that
our attack is signi(cid:12)cantly better than the previous one.
We performed interprocess attacks. Clearly, in network
attacks the noise (caused by network delay times) may be
much larger, and hence an attack may become impractical
even if it is feasible for an interprocess attack under the
same environmental conditions. However, this aspect is not
speci(cid:12)c for our improved variant but a general feature that
a(cid:11)ects BB-attack as well.
8. CONCLUSION
We have presented a new timing attack against unpro-
tected SSL implementations of RSA-CRT. Our attack ex-
e
c
n
e
r
e
f
f
i
d
e
m
i
t
250000(cid:13)
200000(cid:13)
150000(cid:13)
100000(cid:13)
50000(cid:13)
0(cid:13)
0(cid:13)
-50000(cid:13)
-100000(cid:13)
-150000(cid:13)
-200000(cid:13)
-250000(cid:13)
1000(cid:13)
2000(cid:13)
3000(cid:13)
4000(cid:13)
5000(cid:13)
0(cid:13)
1000(cid:13)
2000(cid:13)
3000(cid:13)
4000(cid:13)
5000(cid:13)
Figure 4: The distribution of (cid:1)j in terms of clock cycles for 0 (cid:20) j (cid:20) 5000, sorted in descending order, for the
sample bit q61. The graph on the left shows this distribution when q61 = 1. The distribution on the right is
observed when q61 = 0.
Accuracy = 95%
Accuracy = 97.5%
Accuracy = 99%
E(Steps) for
parameters
interval D Nmax
1850
131
67
70
50
107
126
230
[5; 31]
[32; 63]
[64; 95]
[96; 127]
[128; 159]
[160; 191]
[192; 223]
[224; 245]
63
25
17
18
16
21
24
30
qi = 0
998
63
40
43
34
44
61
104
parameters
qi = 1 D Nmax
1975
163
192
130
271
127
264
259
3667
579
281
315
250
421
551
636
68
29
36
26
31
25
36
31
E(Steps) for
qi = 0
1077
73
84
62
67
53
91
108
qi = 1
4220
761
1154
640
889
585
1179
667
parameters
D Nmax
6720
240
450
250
299
169
333
365
230
34
46
44
41
29
49
43
E(Steps) for
qi = 0
3646
85
108
105
89
61
124
150
qi = 1
27480
1012
1767
1674
1477
771
2033
1032
Table 4: Columns 2 and 3 show the parameters that can be used to yield the intended accuracy. The last
columns give the expected number of steps for Nmax = 1, calculated using Formula (11), to reach the target
di(cid:11)erence D.
(cid:13)
ploits the timing behavior of Montgomery multiplications
performed during table initialization phase of the sliding
window exponentiation algorithm.
It is an improvement
of Brumley and Boneh attack, which exploits Montgomery
multiplication in the exponentiation phase of the same al-
gorithm. Changing the target phase of the attack yields an
increase on the number of multiplications that provide use-
ful information to expose one of the prime factors of RSA
moduli. Only this change alone gives an improvement by a
factor of more than 5 over BB-attack.
We have also presented other possible improvements, in-
cluding employing sequential analysis for the decision pur-
poses and removing the redundant queries that can also be
applied to BB-attack.
If we use only the idea of remov-
ing redundant queries from BB-attack, this will double the
performance by itself. Our attack brings an overall improve-
ment by a factor of more than 10.
9. REFERENCES
[1] D. Bleichenbacher: Chosen Ciphertext Attacks
Against Protocols Based on the RSA Encryption
Standard PKCS #1. In: H. Krawczyk (Ed.): Crypto
1998, Springer, Lecture Notes in Computer Science
1462, 1998, 1{12.
[2] D. Brumley, D. Boneh: Remote Timing Attacks are
Practical. In: Proceedings of the 12th Usenix Security
Symposium, 2003.
[3] B. Canvel, A. Hiltgen, S. Vaudenay, M. Vuagnoux:
Password Interception in a SSL/TSL Channel. In: D.
Boneh (ed.): Crypto 2003, Lecture Notes in Computer
Science 2729, Springer, Heidelberg (2003), 583{599.
[4] D. Coppersmith: Small Solutions to Polynomial
Equations, and Low Exponent RSA Vulnerabilities. J.
Cryptology 10 (no. 4) (1997) 233{260.
[5] J.-F. Dhem, F. Koeune, P.-A. Leroux, P.-A. Mestr(cid:19)e,
J.-J. Quisquater, J.-L. Willems: A Practical
Implementation of the Timing Attack. In: J.-J.
Quisquater and B. Schneier (eds.): Smart Card {
Research and Applications, Springer, Lecture Notes in
Computer Science 1820, Berlin (2000), 175{191.
[6] W. Feller: Introduction to Probability Theory and Its
Applications (Vol. 1). 3rd edition, revised printing,
New York, Wiley (1970).
[7] P. Kocher: Timing Attacks on Implementations of
Di(cid:14)e-Hellman, RSA, DSS and Other Systems. In: N.
Koblitz (ed.): Crypto 1996, Springer, Lecture Notes in
Computer Science 1109, Heidelberg (1996), 104{113.
[8] A.J. Menezes, P.C. van Oorschot, S.C. Vanstone:
Handbook of Applied Cryptography, Boca Raton,
CRC Press (1997).
[9] W. Schindler: Optimized Timing Attacks against
Public Key Cryptosystems. Statist. Decisions 20
(2002), 191{210.
[10] W. Schindler: A Timing Attack against RSA with the
Chinese Remainder Theorem. In: C(cid:24) .K. Ko(cid:24)c, C. Paar
(eds.): Cryptographic Hardware and Embedded
Systems | CHES 2000, Springer, Lecture Notes in
Computer Science 1965, Berlin (2000), 110{125.
[11] W. Schindler, F. Koeune, J.-J. Quisquater: Improving
Divide and Conquer Attacks Against Cryptosystems
by Better Error Detection / Correction Strategies. In:
B. Honary (ed.): Cryptography and Coding | IMA
2001, Springer, Lecture Notes in Computer
Science 2260, Berlin (2001), 245{267.
[12] W. Schindler: On the Optimization of Side-Channel
Attacks by Advanced Stochastic Methods. In: S.
Vaudenay (ed.): Public Key Cryptography | PKC
2005, Springer, Lecture Notes in Computer
Science 3386, Berlin 2005, 85{103.
[13] GNU Project: GMP:
http://www.swox.com/gmp/.
[14] OpenSSL Project: OpenSSL:
http://www.openssl.org.