User: 请解答这个和日志有关的问题Input password to Bitcoin CLI I'm new to bitcoin and I'm very concerned about keeping my wallet secure. As I prefer CLIs over GUIs for many reasons including security, I'm learning how to use the bitcoin-cli command on GNU/Linux. In particular, the command bitcoin-cli walletpassphrase lets you unlock your wallet for a specified amount of time in order to make a transaction. You're expected to run this command like so:

bitcoin-cli walletpassphrase p4$$w0rd 45


Where the last two arguments are the plaintext password and the unlock time in seconds. That's clearly not secure at all because your password is going to be stored in plaintext in ~/.bash_history, and also someone could be watching you type your plaintext unobfuscated password over your shoulder, or also scroll back afterwards.

So, after trying some suggestions in this related post, I came up with a very simple solution. I have to mention that I use pass for storing my passwords:

pass bitcoin | xargs -I '{}' bitcoin-cli walletpassphrase '{}' 45


In other words, I use a pipe and xargs (see this post) to input my password and avoid all the aforementioned security issues.

My question is: is this really secure? Is there any possibility for an attacker to somehow obtain my password while it is travelling from pass to bitcoin-cli? Any other thoughts about this?

Assistant: Ultimately your xargs solution still results in the bitcoin-cli being run with the password as a command line argument. Your solution successfully prevents the password from ending up in your ~/.bash_history file. However, it doesn't prevent the password from showing up in your system's process list while the command is running. Any user on your system running "ps -ef" at the right moment (such as by spamming the command) can see the password.

On a standard single user desktop system, this isn't a big concern. You can disable the ability for users to list other users' processes by following the instructions at https://unix.stackexchange.com/a/244357/94543.

Another possibility to consider is that some system utilities may record the active process list. If you configure an intrusion detection system, then it may record every process started and their arguments. If a program on your computer crashes, a crash logging utility may include a list of your system's running processes in the log. (That would be pretty bad luck to have that run in the same moment that bitcoin-cli is, but consider the case where your system is running low on memory, causing bitcoin-cli to hang and also causing another program to crash, triggering a crash logger...)

The best and foolproof solution would be if bitcoin-cli had a flag to allow you to pass it the password interactively or directly over standard input. And conveniently, it has the -stdin option allowing you to do that:

bitcoin-cli -stdin walletpassphrase