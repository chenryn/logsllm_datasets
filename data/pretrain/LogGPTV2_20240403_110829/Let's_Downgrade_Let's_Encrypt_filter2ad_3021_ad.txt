### Vulnerability to Off-Path Server-Elimination Methodologies

Our automated evaluation has not detected vulnerabilities to our off-path server-elimination methodologies. This is because the automated system is not sensitive to slight variations in behavior or implementation. For example, by manually adjusting the IP ID value prediction (see Appendix, Section E for more details), an attacker can increase the success rate of predicting the correct IP ID value. Automated systems may fail to predict the IP ID correctly, especially if there is a sudden change in the outbound traffic rate from the nameserver.

Nameservers use different methods to limit the rate of incoming queries, such as per-query, per-source IP, or requiring a slightly higher rate of incoming packets. Our evaluation against each domain is performed only once to avoid disrupting the normal functionality of the domain. Any losses or noise are perceived by our attacker host as a failed evaluation, and the test is not repeated.

We do not have false positives. A successful downgrade attack is marked only when all Validation Authorities (VAs) in our setup query a single nameserver selected by the attacker.

### 4. Attacks Against Let's Encrypt

In this section, we combine the off-path downgrade attack with BGP same- and sub-prefix hijacks to obtain fraudulent certificates from Let's Encrypt for victim domains. We developed an ethical 'two-sided' evaluation methodology for these attacks. 

#### 4.1 Experimental Setup

We prepared a control plane setup for the experimental evaluation of all our attacks. The setup, including relevant entities and components, is illustrated in Figure 8. We purchased two Autonomous Systems (ASes) under RIPE NCC: AS 1 and AS 6. AS 1 is assigned prefix 2.2.4.0/22, and AS 6 is assigned 6.6.6.0/24. AS 6 is controlled by our attacker and used for hijacking the prefix of the network where the nameserver of our victim domain is installed. The victim domain has three nameservers: NS2 and NS3 on AWS cloud, and NS1 hosted on 2.2.4.0/22. We also set up an Unbound 1.6.7 DNS resolver on Linux 4.14.11 on 2.2.4.0/22.

From a layer 3 perspective, AS 6 is connected via a BGP router to DE-CIX routeserver in Frankfurt, providing peering with many (mostly) small partners. AS 1 is connected via a different upstream provider to the Internet. Both BGP routers on AS 1 and AS 6 are configured to handle 10Gbps traffic, with NICs prepared for XDP (eXpress Data Path). We installed Bird 2 on both BGP servers for its configurability and MRT file support. The BGP router for AS 1 announces 2.2.4.0/22, and the router for AS 6 announces the attacker’s prefix 6.6.0.0/24. The VAs of Let's Encrypt are located on different network prefixes assigned to AS 16509 and AS 13649. Without the prefix hijack, traffic from AS 1 flows to Let's Encrypt (AS 16509).

#### 4.2 Fraudulent Let's Encrypt Certificate for Our Victim Domain

In this section, we launch attacks against Let's Encrypt using our victim domains.

**Setup:**
- We set up a victim domain with three nameservers: NS2 and NS3 on AWS cloud, and NS1 hosted on 2.2.4.0/22 (Figure 8).

**Attack:**
The attack proceeds in three steps, illustrated in Figure 13 in Appendix, Section B:
1. The adversary forces all VAs of Let's Encrypt to perform lookups and domain validation against a nameserver of their choice (NS1 on prefix 2.2.0.0/16).
2. The adversary uses Certbot to submit a certificate request for the victim domain.
3. The attacker launches BGP prefix hijacks to redirect DNS packets to the attacker’s network (AS 6), completing the validation and receiving a fraudulent certificate for the victim domain.

**Evaluation:**
We ran multiple executions of the attack against our victim domains. As shown in Figure 9, 99% of the evaluations completed within 2 seconds. The duration of the attack is dominated by the propagation of the malicious BGP announcement and routing convergence delays.

**Measurements:**
All VAs of Let's Encrypt are located on prefixes smaller than /24, making them vulnerable to sub-prefix hijack attacks. Figure 10 plots the CAs and domains vulnerable to sub-prefix hijacks. Sub-prefix hijacks succeed deterministically, but they affect the global Internet and can be visible. Short-lived hijacks reduce the risk of exposure. See Appendix, Section A for details on sub-prefix hijacks.

#### 4.3 Attacking Let's Encrypt-Certified Domains

In the previous section, we executed attacks against Let's Encrypt and issued fraudulent certificates for our own victim domains. In this section, we evaluate whether our attacks apply to customer domains of Let's Encrypt.

**Setup:**
- On three VAs, we set up an Unbound 1.6.7 DNS resolver on Linux 4.14.11. The VAs are placed on three distinct prefixes belonging to AS 1.
- We set up an open-source Boulder ACME implementation used by Let's Encrypt. The relevant components are Registration Authority (RA), Validation Authority (VA), and Certificate Authority (CA).

**Dataset:**
- We searched for domains with Let's Encrypt certificates in CT (Certificate Transparency) using crt.sh, checking for CA commonName: R3. We collected certificates issued on a single day, limiting the search to ValidityNotBefore >= 01.04.2021 00:00:00 and < 02.04.2021 00:00:00, resulting in 1,014,056 domains issued by Let's Encrypt on a single day in April.
- We extracted the commonNames in the certificates and looked up the nameservers for each commonName. For each nameserver, we mapped its IP address to the IP prefix and origin AS using BGP updates in BGPStream of CAIDA [20] on 1 April.

**Attack:**
- The adversary receives a list of domains with nameservers as input. For each nameserver in each domain, we include information on which attacks (from Section 3) the nameserver is vulnerable, the latency to each nameserver, and if the nameserver is vulnerable to sub-prefix hijack attacks.
- For each domain, the adversary executes the following steps: (1) submits a certificate request, (2) performs nameserver elimination, (3) hijacks the DNS packet, (4) concludes DV, and (5) obtains a fraudulent certificate for a real victim domain signed by our CA.

**Measurements:**
- To understand the sizes of announced BGP prefixes in the Internet, we used BGPStream of CAIDA [20] and retrieved BGP updates and routing data from the global BGP routing table from RIPE RIS [53] and RouteViews collectors [58]. The dataset was collected in April 2021.
- There are currently 911,916 announced prefixes in the Internet. From these, we extracted announcements with prefixes of ASes hosting nameservers of the domains in our dataset (Table 2).
- We found that 10.6% of Let's Encrypt certified domains and 11.75% of Alexa domains are vulnerable to sub-prefix hijacks. These domains have nameservers on network blocks smaller than /24, making them vulnerable to sub-prefix hijacks (Figure 10; legend explained in Section 4.2.4).
- Additionally, 30% of ASes with victim domains can be intercepted via same-prefix BGP hijacks, causing the network with the VAs to accept the hijacking BGP announcements and send DNS packets through the attacker.

#### 4.4 Comparison to Other Popular CAs

We evaluated our attack methodologies with other CAs controlling more than 95% of the certificate market, listed in Table 4. The results are listed in Table 4. Let's Encrypt requires that multiple vantage points receive the same responses for a successful attack. In contrast, other CAs, even when selecting an IP address from a large prefix, perform validation with a single IP address.

| CA | #Vantage Points | Sub-prefix Attack |
|---|---|---|
| Digicert | 1 | ✗ |
| Sectigo | 1 | ✗ |
| GoDaddy | 1 | ✓ |
| GlobalSign | 1 | ✓ |
| Certum-Google | 20+ | ✓ |
| Certum-Cloudflare | 1 | ✓ |
| Let's Encrypt | 4 | ✓ |
| Actalis | 1 | ✗ |

**Figure 10: Network prefixes of CAs’ resolvers and of domains’ nameservers vulnerable to sub-prefix hijacks.**

### Conclusion

This research demonstrates the vulnerabilities in Let's Encrypt and other popular CAs to off-path downgrade and BGP hijack attacks. By combining these techniques, an attacker can issue fraudulent certificates for victim domains. Ethical considerations were taken into account to ensure that the experiments did not impact real-world systems.