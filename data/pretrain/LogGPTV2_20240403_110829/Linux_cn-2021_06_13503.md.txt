---
**作者**: Jim Hall  
**类别**: 技术  
**评论数据**: []  
**统计信息**:
  - 评论数: 0
  - 收藏次数: 0
  - 点赞数: 0
  - 分享次数: 0
  - 阅读次数: 5747
**日期**: 2021-06-20 14:08:18  
**编辑推荐**: 否  
**摘要**: 概述你的计算机如何引导和启动一个像 FreeDOS 这样的简单操作系统。  
**来源链接**: https://opensource.com/article/21/6/freedos-boots  
**ID**: 13503  
**是否为LCTT翻译**: 是  
**大图**: /data/attachment/album/202106/20/140809fpkrcnow8npnow8p.jpg  
**永久链接**: /article-13503-1.html  
**图片**: /data/attachment/album/202106/20/140809fpkrcnow8npnow8p.jpg.thumb.jpg  
**相关文章**: []  
**审校者**: wxy  
**选题者**: lujun9972  
**总结**: 概述你的计算机如何引导和启动一个像 FreeDOS 这样的简单操作系统。  
**标签**:
  - FreeDOS
  - 引导
  - 启动
**是否有缩略图**: 否  
**标题**: FreeDOS 如何启动  
**是否有标题图片**: 是  
**翻译者**: geekpi  
**更新时间**: 2021-06-20 14:08:18  
---

> 概述你的计算机如何引导和启动一个像 FreeDOS 这样的简单操作系统。

![](/data/attachment/album/202106/20/140809fpkrcnow8npnow8p.jpg "Code going into a computer.")

在使用 DOS 计算机的过程中，我特别欣赏的一点是其引导过程相对容易理解。DOS 中没有太多的变动组件。今天，我想与大家分享一下计算机是如何引导和启动像 FreeDOS 这样的简单操作系统的。

### 初始引导

当你打开计算机电源时，系统会进行一些自我检查，例如验证内存和其他组件。这被称为 **开机自检 (Power On Self Test, POST)**。POST 完成后，计算机会使用一个硬编码的指令，告诉它在哪里找到加载操作系统的指令。这就是“**引导加载程序 (boot loader)**”，通常它会尝试找到硬盘上的 **主引导记录 (Master Boot Record, MBR)**。然后，MBR 加载主操作系统，在这里就是 FreeDOS。

这个定位信息以便计算机能够加载操作系统的下一个部分的过程被称为“**引导 (bootstrapping)**”，来源于“通过你自己的努力振作起来 (picking yourself up by your bootstraps)”的说法。正是从这个用法中，我们采用了“**引导 (boot)**”一词来表示启动计算机。

### 内核

当计算机加载 FreeDOS 内核时，内核首先识别用户指定的任何参数。这些参数保存在一个名为 `FDCONFIG.SYS` 的文件中，该文件与内核位于同一个根目录下。如果 `FDCONFIG.SYS` 不存在，FreeDOS 内核会寻找一个替代文件 `CONFIG.SYS`。

如果你在 20 世纪 80 年代或 90 年代使用过 DOS，你可能对 `CONFIG.SYS` 文件很熟悉。从 1999 年起，FreeDOS 首先查找 `FDCONFIG.SYS`，以防你的 DOS 系统与其他 DOS（如 MS-DOS）做了双启动。请注意，MS-DOS 只使用 `CONFIG.SYS` 文件。因此，如果你用同一个硬盘同时启动 FreeDOS 和 MS-DOS，MS-DOS 使用 `CONFIG.SYS` 来配置自己，而 FreeDOS 则使用 `FDCONFIG.SYS`。这样一来，双方都可以使用自己的配置。

`FDCONFIG.SYS` 可以包含一些配置设置，其中之一是 `SHELL=` 或 `SHELLHIGH=`。任何一个都会指示内核加载这个程序作为用户的交互式 shell。

如果 `FDCONFIG.SYS` 和 `CONFIG.SYS` 都不存在，那么内核就会假定几个默认值，包括在哪里找到 shell。如果你在启动 FreeDOS 系统时看到“Bad or missing Command Interpreter”的信息，这意味着 `SHELL=` 或 `SHELLHIGH=` 指向了一个在你系统中不存在的 shell 程序。

![Bad or missing Command Interpreter](/data/attachment/album/202106/20/140821ivavbphy3r3wy7n4.png "Bad or missing Command Interpreter")

你可以通过查看 `SHELL=` 或 `SHELLHIGH=` 行来调试这个问题。如果做不到这一点，请确保你在 FreeDOS 系统的根目录下有一个名为 `COMMAND.COM` 的程序。它就是 *shell*，接下来我会详细解释。

### Shell

在 DOS 系统中，“shell” 一词通常指一个命令行解释器：一个交互式程序，它从用户那里读取指令并执行它们。在这里，FreeDOS 的 shell 与 Linux 的 Bash shell 类似。

除非你用 `SHELL=` 或 `SHELLHIGH=` 要求内核加载一个不同的 shell，否则 DOS 上的标准命令行 shell 被称为 `COMMAND.COM`。当 `COMMAND.COM` 启动时，它也会寻找一个文件来配置自己。默认情况下，`COMMAND.COM` 会在根目录下寻找一个名为 `AUTOEXEC.BAT` 的文件。`AUTOEXEC.BAT` 是一个“批处理文件”，它包含一组启动时运行的指令，类似于 Linux 上 Bash 启动时读取的 `~/.bashrc` “资源文件”。

你可以在 `FDCONFIG.SYS` 文件中用 `SHELL=` 或 `SHELLHIGH=` 改变 shell 以及 shell 的启动文件。FreeDOS 1.3 RC4 安装程序将系统设置为读取 `FDAUTO.BAT` 而不是 `AUTOEXEC.BAT`。这与内核读取另一个配置文件的原因相同；你可以在硬盘上用另一个 DOS 双启动 FreeDOS。FreeDOS 将使用 `FDAUTO.BAT` 而 MS-DOS 将使用 `AUTOEXEC.BAT`。

如果没有像 `AUTOEXEC.BAT` 这样的启动文件，shell 将简单地提示用户输入日期和时间。

![Without AUTOEXEC.BAT, the shell will prompt for date and time](/data/attachment/album/202106/20/140821vgv8ooo77k5mbio3.png "Without AUTOEXEC.BAT, the shell will prompt for date and time")

就是这样。当 FreeDOS 加载了内核并且内核也加载了 shell 之后，FreeDOS 就准备好让用户输入命令了。

![FreeDOS is ready for you to enter your first command](/data/attachment/album/202106/20/140821s6bvhy3ykzyskhbv.png "FreeDOS is ready for you to enter your first command")

---
**作者**: [Jim Hall](https://opensource.com/users/jim-hall)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**翻译**: [geekpi](https://github.com/geekpi)  
**校对**: [wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出