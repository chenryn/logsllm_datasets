### Optimized Text

#### Packet Distribution and Retransmission Sizes
The retransmit-size distribution focuses on the modes of packet distribution. Fragmented CRC, tuned with a fragment size of 50 bytes, is compared against other methods. The figures below illustrate the cumulative and complementary cumulative distributions of these methods.

**Figure 16: Comparison of Aggregate End-to-End Delivery Rates**
- **Methods Compared:** Packet-level CRC, fragmented CRC, and PP-ARQ.
- **Observations:** Postamble decoding is enabled in this experiment. PP-ARQ shows a long tail of short retransmit sizes, indicating significant performance gains due to the transmission of very small packets (less than 64 bytes).

**Figure 18: End-to-End Delivery Rate in Overload Conditions**
- **Methods Compared:** Same as Figure 16.
- **Observations:** PP-ARQ scales favorably under overload conditions, while packet-level CRC performance degrades substantially. This suggests that only relatively small parts of frames are corrupted in overload conditions in the status quo.

**Fragmentation and Retransmission Patterns**
- **Fragmented CRC:** Breaks retransmissions into fragments of size 50 Ã— k for positive integers k, resulting in a stair-step pattern. It does not transmit fragments smaller than 64 bytes.
- **PP-ARQ:** Transmits a significant fraction of very small packets (less than 64 bytes), leading to its performance gains. PP-ARQ batches retransmissions to avoid preamble overhead on each smaller retransmission.

#### Evaluation in Quiet Channels at Marginal SNR
We evaluate SoftPHY hints in a quiet channel with marginal Signal-to-Noise Ratio (SNR). To perform these experiments, we used a frequency band that does not overlap with 802.11, the dominant source of RF interference in our environment. The experiments utilized a software radio-based DQPSK transmitter and receiver pair, as described in Section 6.

**Figure 19: Bit Error Rate (BER) vs. Received SNR**
- **Experiment Setup:** We modulated the transmit power of a stream of packets between two radios, holding the transmit power constant for each packet. At the receiver, we calculated the average received SNR and checked the correctness of each bit.
- **Results:** The BER-SNR curve shows high BER for relatively high SNR, suggesting that better clock-recovery algorithms and coding would improve the curve, as seen in commercial radio receivers.

**SoftPHY Hints at Low SNRs**
- **Data Partitioning:** We classified transmissions into "good," "grey-zone," and "bad" based on average BER, as shown in Table 2.
- **Figure 20: Distribution of SoftPHY Hints**
  - **Good Regime:** SoftPHY hints are a good predictor of symbol correctness.
  - **Grey-Zone and Bad Regimes:** Predictive accuracy decreases, especially in the bad regime.

#### Undesirable Capture in Wireless Networks
Undesirable capture occurs when the weaker of two packets arrives first at a receiving node, causing the stronger, later packet to corrupt the weaker, earlier packet, resulting in neither being decoded correctly. This can be viewed as a special case of postamble decoding, which we explore in this work.

### Conclusion
We believe that PPR (Partial Packet Recovery) has the potential to change the way PHY, link, and MAC protocol designers think about protocols. Current wireless PHY implementations use significant redundancy to tolerate worst-case channel conditions. If noise during one or more codewords exceeds expected levels, existing PHY layers generate incorrect bits, leading to packet-level CRC failures and requiring full packet retransmission. PPR reduces the penalty of incorrect decoding, allowing for decreased redundancy or increased payload bit-rates. With SoftPHY and PPR, it may be acceptable for a PHY to design for higher BER, as higher layers can decode and recover partial packets correctly.

### Future Work
Our plans for future work include:
- Implementing other ways of obtaining confidence information.
- Developing a PHY-independent SoftPHY interface.
- Showing how a PP-ARQ link layer can use different SoftPHY implementations without change.
- Performing a broader set of experiments in various settings.
- Using SoftPHY information to improve the performance of routing protocols such as opportunistic routing.

### Acknowledgments
We thank Bret Hull, Robert Morris, Stefan Savage, David Wetherall, and the anonymous reviewers for their constructive feedback.

### References
[References listed as provided, with no changes needed.]

This optimized text aims to provide a clear, coherent, and professional presentation of the content.