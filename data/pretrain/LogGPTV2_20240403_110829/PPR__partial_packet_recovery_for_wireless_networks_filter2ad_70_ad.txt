only the modes of the packet distribution in the retransmit-size dis-
tribution. Fragmented CRC tuned with a fragment size of 50 bytes
 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative distribution of linksEquivalent frame delivery ratePacket CRCFragmented CRCSoftPHYFragmented CRC + postambleSoftPHY + postamble10-510-410-310-210-11 1 10 100Complementary cumulative distributionLength of contiguous misses (codewords)η=1η=2η=3Figure 16: Comparison of the aggregate end-to-end delivery
rate between packet-level CRC, fragmented CRC, and the PP-
ARQ implementation. Postamble decoding is on in this experi-
ment.
Figure 18: Comparison of end-to-end delivery rate in overload
conditions; PP-ARQ scales favorably compared to the status
quo. Postamble decoding is enabled in this experiment.
Figure 17: Comparison of the distribution of retransmission
sizes for packet-level CRC, fragmented CRC, and the PP-ARQ
implementation. Note PP-ARQ’s long tail of short retransmit
sizes.
breaks the retransmissions down into fragments of size 50 × k for
positive integers k, resulting in the stair-step pattern in the ﬁgure.
However, fragmented CRC transmits no fragments smaller than
64 bytes. In contrast, PP-ARQ transmits a signiﬁcant fraction of
very small packets (less than 64 bytes), the cause of its signiﬁcant
performance gains. Note from Section 4 that PP-ARQ batches its
retransmissions to avoid preamble overhead on each of the smaller
retransmissions.
Figure 18 shows how end-to-end delivery rate changes when we
increase the offered load to in the network. As well as raw offered
load, we show the percentage of link capacity each node offers in
the ﬁgure. At higher offered loads we see packet-level CRC per-
formance degrading substantially. There have been several recent
studies that attempt to elucidate the causes of this loss [3, 31, 32].
PP-ARQ’s end-to-end throughput increases despite the overload,
suggesting that only relatively-small parts of frames are actually
being corrupted in overload conditions in the status quo.
7.4 SoftPHY hints at marginal SNR
We now turn from networks with signiﬁcant interfering trans-
missions to an evaluation of SoftPHY hints in a quiet channel at
marginal SNR. To perform these experiments, we utilized a fre-
quency band that does not overlap with 802.11 [32], the dominant
source of RF interference in our environment.7 The experiments in
this section use a software radio-based DQPSK transmitter and re-
ceiver pair, whose implementation is described above in Section 6.
7We used GNURadio tools to check for signiﬁcant interference in
our channel between runs of these experiments.
Figure 19: Bit error rate (BER) v. received signal-to-noise ratio
for a DQPSK transmitter-receiver pair in a quiet network.
To simulate links with varying amounts of path loss, we send a
stream of packets between the two radios, modulating the transmit
power of the stream of packets (we hold transmit power constant
for the duration of each packet). At the receiver, we calculate the
average received SNR for each packet and check the correctness
of each bit in the packet. Figure 19 shows the resulting BER-SNR
curve. We note the high BER for relatively-high SNR, hypothe-
sizing that better clock-recovery algorithms and of course coding
would shift the curve left as is commonly seen in commercial radio
receivers.
We are now in a position to examine SoftPHY hints at low SNRs.
We partition the data into “good,” “grey-zone,” and “bad” transmis-
sions according to average BER, as in Table 2. Figure 20 shows the
distribution of SoftPHY hints in each regime. We see that Soft-
PHY hints are a good predictor of symbol correctness in the good
regime, but an increasingly poorer predictor of symbol correctness
Label
Good
Grey-zone
Bad
SNR
SNR ≥ 21
13  21 dB)DQPSK angular error (radians/pi)Cumulative fraction of symbols  Correct symbolsIncorrect symbols00.050.10.150.20.2500.20.40.60.81Grey−zone packets (13 dB < SNR < 21 dB)DQPSK angular error (radians/pi)Cumulative fraction of symbols00.050.10.150.20.2500.20.40.60.81Bad packets (SNR < 13 dB)DQPSK angular error (radians/pi)Cumulative fraction of symbols 0 0.2 0.4 0.6 0.8 1 0 50 100 150 200 250Cumulative distributionSize of partial retransmission (bytes)desirable capture” in packet-based wireless networks in time. Un-
desirable capture occurs when the weaker of two packets arrives
ﬁrst at a receiving node, so that the stronger, later packet corrupts
the weaker, earlier packet, resulting in neither being decoded cor-
rectly. This can be viewed as a special case of postamble decoding,
which we fully explore in the present work.
9. CONCLUSION
We believe that PPR has the potential to change the way PHY,
link, and MAC protocol designers think about protocols. Today’s
wireless PHY implementations employ signiﬁcant amounts of re-
dundancy to tolerate worst-case channel conditions. If noise during
one or more codewords is higher than expected, existing PHY lay-
ers will generate incorrect bits, which will cause packet-level CRCs
to fail and require retransmission of the whole packet. Since noise
ﬂuctuations are often large, and the penalty for incorrect decod-
ing is also large, PHY layers tend to conservatively include lots
of redundancy in the form of a high degree of channel coding or
conservative modulation. Similarly, MAC layers tend to be quite
conservative with rate adaptation because the consequences of er-
rors are considered dire. The mind-set seems to be that bit errors are
bad, and must be reduced (though eliminating them is impossible).
As a result, they operate with comparatively low payload bit-rates.
PPR reduces the penalty of incorrect decoding, and thus for
a given environment allows the amount of redundancy to be de-
creased, or equivalently the payload bit-rate to be increased. Put
another way, with SoftPHY and PPR, it may be perfectly ﬁne for
a PHY to design for one or even two orders-of-magnitude higher
BER, because higher layers need no longer cope with high packet
error rates, but can decode and recover partial packets correctly.
In addition to investigating the above idea, our plans for future
work include implementing other ways of obtaining conﬁdence in-
formation (as outlined in Section 2, developing a PHY-independent
SoftPHY interface and showing how a PP-ARQ link layer can use
different SoftPHY implementations without change, performing a
broader set of experiments in more settings, and using SoftPHY in-
formation to improve the performance of routing protocols such as
opportunistic routing [10].
Acknowledgments
We thank Bret Hull, Robert Morris, our shepherd Stefan Savage,
David Wetherall, and the anonymous reviewers for their construc-
tive feedback.
10. REFERENCES
[1] Boulder, CO, Nov. 2006.
[2] Wireless LAN Medium Access Control and Physical Layer
Speciﬁcations, August 1999. IEEE 802.11 Standard.
[3] D. Aguayo, J. Bicket, S. Biswas, G. Judd, and R. Morris. Link-Level
Measurements From an 802.11b Mesh Network. In Proc. ACM
SIGCOMM Conf., pages 121–132, Portland, OR, Aug. 2004.
[4] J.-S. Ahn, S.-W. Hong, and J. Heidemann. An Adaptive FEC Code
Control Algorithm for Mobile Wireless Sensor Networks. Journal of
Communications and Networks, 7(4):489–499, 2005.
[5] A. Avudainayagam, J. M. Shea, T. F. Wong, and L. Xin. Reliability
Exchange Schemes for Iterative Packet Combining in Distributed
Arrays. In Proc. of the IEEE WCNC Conf., volume 2, pages
832–837, Mar. 2003.
[6] L. Bahl, J. Cocke, F. Jelinek, and J. Raviv. Optimal Decoding of
Linear Codes for Minimizing Symbol Error Rate. IEEE Trans. Info.
Theory, 20(2):284–287, Mar. 1974.
[7] D. Barry, E. Lee, and D. Messerschmitt. Digital Communication.
Springer, New York, NY, 3rd. edition, 2003.
[8] C. Berrou, A. Glavieux, and P. Thitimajshima. Near Shannon Limit
Error-Correcting Coding and Decoding: Turbo Codes. In Proc. of the
IEEE ICC Conf., pages 54–83, May 1993.
[9] J. Bicket. Bit-Rate Selection in Wireless Networks. Master’s thesis,
Massachusetts Institute of Technology, Feb. 2005.
[10] S. Biswas and R. Morris. ExOR: Opportunistic Multi-hop Routing
for Wireless Networks. In Proc. ACM SIGCOMM Conf., pages
133–144, Philadelphia, PA, Aug. 2005.
[11] D. Chase. Code Combining: A Maximum-Likelihood Decoding
Approach for Combining an Arbitrary Number of Noisy Packets.
IEEE Trans. on Comm., 33(5):385–393, May 1985.
[12] S. Eisenman and A. Campbell. Structuring Contention-Based
Channel Access in Wireless Sensor Networks. In Proc. of ACM/IEEE
IPSN Conf., pages 226–234, Nashville, TN, Apr. 2006.
[13] M. Ettus. Ettus Research, LLC. http://www.ettus.com.
[14] R. Ganti, P. Jayachandran, H. Luo, and T. Abdelzaher. Datalink
Streaming in Wireless Sensor Networks. In Proc. of the SenSys
Conf. [1], pages 209–222.
[15] The GNU Radio Project. http://www.gnu.org/software/gnuradio/.
[16] J. Hagenauer and P. Hoeher. A Viterbi Algorithm with Soft-Decision
Outputs and its Applications. In Proc. of the IEEE GLOBECOM
Conf., Dallas, TX, Nov. 1989.
[17] F. Harris. Multirate Signal Processing for Communication Systems.
Prentice Hall PTR, Upper Saddle River, NJ, 2004.
[18] G. Holland, N. Vaidya, and P. Bahl. A Rate-Adaptive MAC Protocol
for Multihop Wireless Networks. In Proc. ACM MobiCom Conf.,
pages 236–251, Rome, Italy, July 2001.
[19] S. Lin and D. J. Costello. Error Control Coding. Prentice Hall, Upper
Saddle River, NJ, 2nd. edition, 2004.
[20] S. Lin and P. S. Yu. A Hybrid ARQ Scheme with Parity
Retransmission for Error Control of Satellite Channels. IEEE Trans.
on Comm., 30(7):1701–1719, July 1982.
[21] D. Mandelbaum. An Adaptive-Feedback Coding Scheme Using
Incremental Redundancy (Corresp.). IEEE Trans. on Information
Theory, 20(3):388–389, May 1974.
[22] J. Metzner. Improvements in Block-Retransmission Schemes. IEEE
Trans. on Comm., 27(2):524–532, Feb. 1979.
[23] A. Miu, H. Balakrishnan, and C. E. Koksal. Improving Loss
Resilience with Multi-Radio Diversity in Wireless Networks. In
Proc. MobiCom Conf., pages 16–30, Cologne, Germany, Aug. 2005.
[24] K. Mueller and M. Müller. Timing Recovery in Digital Synchronous
Data Receivers. IEEE Trans. on Comm., 24(5), May 1976.
[25] S. Pasupathy. Minimum Shift Keying: A Spectrally-Efﬁcient
Modulation. IEEE Communications Magazine, 7(4):14–22, July
1979.
[26] M. Perrott. The CppSim Behavioral Simulator.
http://www-mtl.mit.edu/researchgroups/perrottgroup/tools.html.
[27] N. B. Priyantha. The Cricket Indoor Location System. PhD thesis,
[31] D. Son, B. Krishnamachari, and J. Heidemann. Experimental
Analysis of Concurrent Packet Transmissions in Low-Power
Wireless Networks. In Proc. of the SenSys Conf. [1], pages 237–250.
[32] K. Srinivasan, P. Dutta, A. Tavakoli, and P. Levis. Understanding the
Causes of Packet Delivery Success and Failure in Dense Wireless
Sensor Networks. Technical Report SING-06-00, Stanford Univ.,
2006.
[33] TI/Chipcon Products CC2420 Data Sheet.
http://www.chipcon.com/ﬁles/CC2420_Data_Sheet_1_3.pdf.
[34] K. Whitehouse, A. Woo, F. Jiang, J. Polastre, and D. Culler.
Exploiting the Capture Effect for Collision Detection and Recovery.
In IEEE EmNets Workshop, Sydney, Australia, May 2005.
[35] T. F. Wong, L. Xin, and J. M. Shea. Iterative Decoding in a
Two-Node Distributed Array. In Proc. of the IEEE MILCOM Conf.,
volume 2, pages 1320–1324, Oct. 2002.
MIT, May 2005.
[28] B. Sadeghi, V. Kanodia, A. Sabharwal, and E. Knightly.
Opportunistic Media Access for Multirate Ad Hoc Networks. In
Proc. ACM MobiCom Conf., pages 24–35, Atlanta, GA, Sept. 2002.
[29] T. Schmid. Personal communication.
[30] R. Sinha, C. Papadopoulos, and J. Heidemann. Internet Packet Size
Distributions: Some Observations.
http://netweb.usc.edu/~rsinha/pkt-sizes.