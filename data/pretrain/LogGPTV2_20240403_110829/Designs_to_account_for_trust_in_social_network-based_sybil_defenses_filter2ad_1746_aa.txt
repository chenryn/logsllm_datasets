title:Designs to account for trust in social network-based sybil defenses
author:Abedelaziz Mohaisen and
Nicholas Hopper and
Yongdae Kim
Designs to Account for Trust in Social Network-based
Sybil Defenses
Abedelaziz Mohaisen
University of Minnesota
Minneapolis, MN 55455, USA
PI:EMAIL
Nicholas Hopper
University of Minnesota
Minneapolis, MN 55455, USA
PI:EMAIL
Yongdae Kim
University of Minnesota
Minneapolis, MN 55455, USA
PI:EMAIL
ABSTRACT
Social network-based Sybil defenses exploit the trust exhibited in
social graphs to detect Sybil nodes that disrupt an algorithmic prop-
erty (i.e., the fast mixing) in these graphs. The performance of
these defenses depends on the quality of the algorithmic property
and assuming a strong trust model in the underlying graph. While
it is natural to think of trust value associated with the social graphs,
Sybil defenses have used the social graphs without this considera-
tion. In this paper we study paramagnetic designs to tune the per-
formance of Sybil defenses by accounting for trust in social graphs
and modeling the trust as modiﬁed random walks. Our designs
are motivated by the observed relationship between the algorithmic
property required for the defenses to perform well and a hypothe-
sized trust value in the underlying graphs.
Categories and Subject Descriptors
C.2.4 [Computer-Communication Networks]: Distributed Sys-
tems – Distributed Applications; C.2.0 [Computer-Communication
Networks]: General – Security and Protection
honest subgraph may have some cuts that disrupt the algorithmic
property on which Sybil defenses are based, the trust, though being
a crucial requirement for these designs, was not considered care-
fully. Even worse, these defense [10, 11, 2, 4] — when veriﬁed
against real-world networks — have considered samples of online
social graphs, which are known to possess weaker value of trust.
Recently, we have shown that the mixing time, a concrete mea-
sure of the algorithmic property required in social networks used
for building Sybil defenses, is greater than anticipated and used in
literature [5]. We also relaxed the assumption by showing that a
faster mixing graph not necessary for these designs to work [5].
Most importantly, we have shown “variable” mixing times even for
the same sized social graphs implying that they, even algorithmi-
cally, cannot be taken equally for these designs. Also, the variable
mixing time turned out not to be arbitrary: social graphs that ex-
hibit knowledge (e.g., co-authorship) or intensive interaction (e.g.,
social blogs) are slower mixing than social graphs that require less
interaction or where edges are less meaningful (e.g., wiki-vote and
online social networks). To this end, we study designs to incorpo-
rate information on social graphs to reﬂect their trust value.
General Terms
Security, Design, Algorithms, Experimentation
Keywords
Sybil Attack, Social Networks, Trust
1.
INTRODUCTION
There has been a great interest in the research community for
the potential of defending against Sybil attacks using social net-
works [8]. In these defenses, peers in the network are not merely
computational entities — the human users behind them are tied to
each other to construct a social network. The social network is
then used for bootstrapping the security and detecting Sybils under
two assumptions: algorithmic and sociological. The algorithmic
assumption is the existence of a “sparse cut between the Sybil and
non-Sybil subgraphs” in the social network which implies a limited
number of attacker edges (edges between Sybil to non-Sybil). The
sociological assumption is a constraint on the trust in the underly-
ing social graph: the graph needs to have strong trust as evidenced,
for example, by face to face interaction demonstrating social nodes
knowledge of each other [10, 11]. While the ﬁrst assumption has
been questioned recently in [8], where it is shown that even the
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
1
degree of vi which is deg(vi) =(cid:80)n
2. PRELIMINARIES
Network model: the social network is viewed as an undirected and
unweighted graph G = (V, E) where |V | = n, V = {v1, . . . , vn},
|E| = m, eij = (vi → vj) ∈ E if vi ∈ V is adjacent to vj ∈ V
for 1 ≤ i ≤ n and 1 ≤ j ≤ n. We refer to A = [aij]n×n as the
adjacency matrix where aij = 1 if eij is in E and aij = 0 other-
wise. We also refer to P = [pij]n×n as the transition matrix where
deg(vi) if eij ∈ E and 0 otherwise, where deg(vi) is the
pij =
k=1 Aik. The set of neighbors
of vi is N (vi) and |N (vi)| = deg(vi).
Simple random walks: walking randomly on G is captured by a
Markov Chain (MC), so a simple random walk of length w is a se-
quence of vertices in G beginning from vi and ending at vt using
the transition matrix P. The MC is said to be ergodic if it is irre-
ducible and aperiodic, meaning that the MC has a unique stationary
distribution π and the distribution after random walk of length w
converges to π as w → ∞. The stationary distribution of the MC
is a probability distribution invariant to the transition matrix P (i.e.,
πP = π). For this simple walk π = [πi] where πi = deg vi
2m [5].
The mixing time of the MC parameterized by a variation distance
parameter  is T () = maxi min{t : |π − π(i)Pt|1 
λ2 ≥ ··· ≥ λn−1 ≥ λn > −1 holds. We deﬁne the second largest
eigenvalue µ as µ = max (|λ2|,|λn−1|). Then, the mixing time
T () is bounded by
Social network based sybil defenses: Sybil defenses based on so-
cial networks exploit the trust exhibited in the social graphs. There
has been a constant effort in this direction as reported in SybilGuard
[11], SybilLimit [10], SybilInfer [2], SumUp [7], as well as appli-
cations to DHT in Wh¯anau [4]. In principle, the quality of these
defenses depends on the quality of the algorithmic property of the
underlying graph. For a nice exposition some of these designs, see
the recent work of Viswanath et al. in [8].
3. DESIGNS TO ACCOUNT FOR TRUST
2 ) ≤ T () ≤ log(n)+log( 1
2(1−µ) log( 1
1−µ
 )
µ
.
Most defenses in literature uses the uniform random walk in sec-
tion 2. In this section, we introduce several designs of modiﬁed
random walks that consider a “trust“ parameter between nodes that
inﬂuences the random walk. In all of the proposed modiﬁed ran-
dom walks, the purpose is to assign “trust-driven” weights and thus
deviating from uniform. We do this by either capturing the ran-
dom walk in the originator or current node, as the case of origina-
tor biased random walk and lazy random walk respectively, or by
biasing the random walk probability at each node, as the case of in-
teraction and similarity-based weights assignment over edges, or a
combination of them. The intuition behind the different assignment
mechanisms are similar in essence but motivated by different obser-
vations. For the lazy and originator-biased random walk the main
intuition is that nodes tend to trust “their own selves” and other
nodes within their community (up to some distance) more than
others. On the other hand, interaction and similarity-based trust
assignments try to weigh the natural social aspect of trust levels.
Given the motivation for these designs, we now formalize them by
deriving P and π required for characterizing walks over the graph
they are applied on. We omit the details for lack of space.
Lazy random walks: lazy random walks accommodate for the trust
exhibited in the social graph by assuming the parameter α used for
characterizing this trust level. With the lazy random walk, each
node along the path decides to capture the walk with probability α
or to follow the simple random walk with 1 − α at each time step.
The transition matrix is then deﬁned as P(cid:48) = αI + (1 − α)P. The
stationary distribution of this walk is same like the simple walk in
section 2. In particular, since P(cid:48) = αI + (1− α)P, by multiplying
both sides by π, we get πP(cid:48) = π(αI + (1 − α)P) = απI + (1 −
α)πP = απ + π − απ = π.
Originator-biased random walks: The originator-biased random
walk considers the bias introduced by the random walk initiator
not to be fooled by Sybil nodes in a social graph that lacks quality
of trust. At each time step, each node decides to direct the random
walk back towards the node that initiates the random walk, i.e.,
node vr, with a ﬁxed probability α or follow the original simple
random walk by uniformly selecting among its neighbors with the
total remaining probability 1 − α. The transition probability that
captures the movement of the random walk, initiated by a random
node vr, and moving from node vi to node vj is deﬁned as pij =
deg(vi) if vj ∈ N (vi), pij = α if vj = vr, or 0 otherwise. For
1−α
the α and Ar with all-zero but the rth row, which is 1’s, P(cid:48) for the
random walk originated from vr is given as P(cid:48) = αAr +(1−α)P.
2m = 1.
2m +(cid:80)
2m if vi = vr.
vi∈V /{vr}(1 − α) deg(vi)
Since the “stationary distribution” is not unique among all initial
distributions, it’s called the “bounding distribution" and given for
vr as π = [πi]1×n where πi = (1 − α) deg(vi)