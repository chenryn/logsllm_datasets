(parameter set I), it takes only several milliseconds for both key generation and
encryption, and the decryption takes only 2 microseconds. The running-time
result for the indicates that our primitive is highly eﬃcient, and is capable of
handling large templates of NIST IREX IX report considering the result for the
parameter set II.
6.4 Comparison & Complexity analysis
In this subsection, we compare our performance with known PPBAs secure in
malicious model. More precisely, there are some PPBAs secure in malicious
model in which the server stores encrypted biometric templates, and we arrange
recent eﬃcient methods regarding authentication using HD of binary biometric
to compare with ours.
Karabat et al. [29] proposed a PPBA named THRIVE exploiting Goldwasser-
Micali’s threshold (XOR-) homomorphic encryption [30]. The XOR homomor-
phic encryption enables computing HD of biometrics without revealing their
exact value, and decryption key for the threshold encryption is distributed to
client and server so that the server can not disclose any information from the
5 https://bitbucket.org/malb/lwe-estimator
Table 4: Comparison of various schemes with malicious server model for authen-
tication phase
Protocol
Primitive
Biometric Communication
(bits)
Cost (KB)
Client
(ms)
Server
(ms)
THRIVE [29]a
Gasti et al. [13]b
PassBio [15]d,(cid:63)
Kim et al. [17]e,(cid:63)
Threshold HE
(Outsourced) MPC
TPE
FH-IPE
This Work (I, II)f,(cid:63) FFB-IPE
2048
1600
2000
750
2048
787
490
500(cid:63)(cid:63)
96
24
145832
1177.61
2051
6146
1130 + (1150)c 1010
600 + (600)c
0.3(cid:63)(cid:63)
556
3.12
304
1600
0.0021
0.125
a Benchmarked on “Intel Core 3.2 GHz processor”.
b Benchmarked on
- Client: “Samsung Galaxy S4 smartphone 4-Core 1.9GHz processor (Qualcomm Snapdragon),
2 GB RAM”.
- Server & Cloud: “Intel Xeon E5-2430L v2 6-Core 2.4GHz processor, 64 GB RAM”.
c Oﬄine precomputation.
d Benchmarked on “Intel Core i5 1.60 GHz processor, 4 GB RAM”.
e Benchmarked on “Intel Core i7 4.00 GHz processor, 16 GB RAM”.
f Benchmarked on “Intel Core i5 2.90 GHz processor, 8 GB RAM”.
(cid:63) The performance is measured for the primitive without using TLS: Communication Cost is
the size of a ciphertext, and Client and Server denotes the running times of encryption and
decryption, respectively.
(cid:63)(cid:63) We estimated the expected values from the asymptotic values proposed in [15].
encrypted biometric. However, since biometric is encrypted bitwisely, and signa-
ture is necessary to prevent malicious behavior of each participants, its eﬃciency
is quite doubtful when the size of biometric is large.
Recently, Gasti et al. [13] proposed an outsourced PPBA improving GC and
OT technique in MPC. In their system, computational burden of client (mod-
eled as a smart phone) is mitigated by an (untrusted) cloud with more compu-
tational power. It is secure against malicious participants, and is more eﬃcient
than other state-of-the-art general purpose outsourced MPC [31, 32, 33] oﬀer-
ing security under the presence of malicious participants. The security of [13] is
highly satisﬁable since it is secure even if the server is malicious or client hire
malicious cloud or they collude.
Recently, Zhou and Ren [15] proposed a privacy preserving biometric au-
thentication with a new primitive called Threshold Predicate Encryption (TPE)
which can be applied to authentication based on Euclidean metric or Hamming
distance. It has a remarkable feature that the server can only see the result of
comparison if the distance between two template is bigger than the threshold
or not. The primitive is based on simple matrix randomization, and shows a
simple implementation only composed of matrix multiplication and random per-
mutation. However, it suﬀers ineﬃcient asymptotic complexity on Client, Server,
Communication such as O(k3), O(k2), O(k2l) where k is the dimension of a bio-
metric vector, l is the size of each component, and is only feasible for k near
2000 or a little more.
We can compare our primitive with Kim et al. [17]’s FH-IPE. It oﬀers a
security of biometric by the security of FH-IPE under the presence of malicious
server, and is practical for small-size biometric. Also, it does not have any key
management problem contrary to SHE, since the function key directly reveals
the result of computation. However, it accompanies ineﬃcient decryption process
disclosing computation result by calculating discrete logarithm over a group, and
will be quite hard to be applied in systems regarding biometrics of larger bit size
such as 18KB. It shows the impracticality of the pairing (bilinear map)-based
FH-IPE constructed so far.
On the other hand, our authentication system provides the same security
of biometric as usual FH-IPE, and is highly eﬃcient since it is algorithmically
simple, and is based on simple LWE problem which shows outstanding scalability.
More precisely, we can easily see that the asymptotic complexities for operations
of Client, Server, Communication are O(k), O(k), O(kl), where k is the bit length
of a binary biometric, l is the size of Rq or Zq. Note that n of FFB-IPE is
the dimension of (secret vector of) LWE problem, which depends only on the
security and correctness, is much smaller than k as k increases, and omitted as
a constant. It grants our FFB-IPE an outstanding eﬃciency and scalability for
large biometric as seen by Table 4 where we summarized the performance of
other schemes and ours. Note that other schemes satisfy 80-bit security, ours
satisﬁes 128-bit security for both parameter sets I and II.
7 Related Works
There are many researches related to Privacy Preserving Biometric Authentica-
tion. Since Jarrous and Pinkas [7] ﬁrst used MPC to achieve HD-based PPBA,
there have been similar approaches [8, 10] which improve the performance achiev-
ing eﬃcient MPC for HD in Honest-but-Curious (HBC) model,6 where adversary
follows the protocol honestly but attempts to deduce additional information from
it.7 However, as Simoens et al. [9] pointed out, PPBA secure in HBC model is
not suﬃcient since malicious adversary will try any attempts to get biometric in-
formation stored in a server or to be authenticated by the server. More seriously,
in many previous works regarding PPBA, biometric templates are stored in the
server in plain forms, so they can be leaked in the case of server compromise.
There have been active studies [34, 35, 36, 37, 38, 39] regarding MPC in
malicious model. However, as [13] pointed out, MPC in malicious model accom-
6 It takes only 0.05 seconds or less for 900-bit inputs, and computation time depends
linearly on the bit size.
7 They also proposed theoretic construction and security proof in the malicious model,
but without implementation result.
panies ineﬃciency making it impractical to be applied to biometric authentica-
tion. Recently, outsourcing some computations of MPC [31, 40, 32, 41, 33, 13]
have been proposed to resolve eﬃciency and/or security issues. However, they
achieved practical performance on some small-sized circuits only. In a recent work
of Gasti et al. [13], computing HD of two 1600-bit inputs takes 3.29 seconds.8
On the other hand, Somewhat Homomorphic Encryption (SHE) can be used
in biometric authentication. Yasuda et al. [11, 12] proposed eﬃcient HD-based
biometric authentications in three-party setting and HBC model that exploit
SHE based on ideal lattices [42, 43] or the Ring Learning with Errors prob-
lem [44]. The eﬃciency comes from their packing technique encrypting 2048-bit
biometric into one ciphertext and representation of HD by one multiplication of
ciphertexts. The later one [12] takes only 5.31 ms for 2048-bit matching. How-
ever, the security highly depends on the honest behavior of computation server,
and suﬀers from simple hill-climbing attack [45] which enables malicious compu-
tation server to learn biometric templates. Abidin et al. [14] proposed another
way to use HE with XOR-linear Message Authentication Code, and the proto-
col is held by three parties which are client, service provider, and cloud server,
assuming the former two are semi-honest, but the cloud server is malicious. Im-
plementation result is not reported in the paper, but the performance is expected
to be much worse than those in [11, 12].
Fuzzy extractors or Secure sketches [46] can be used for template protection
and authentication by handling noisy (or fuzzy) property of biometrics with
error correcting techniques. Particularly, fuzzy extractor enables to extract reli-
able key from noisy biometrics. Only legitimate user with similar biometric to
the pre-enrolled biometric can retrieve the valid key. However, due to its power-
ful functionality (both authentication and reliable key extraction), it has some
deﬁciencies. It requires some conditions (e.g. suﬃcient min entropy) on the dis-
tribution of biometric, and has some security issues when used multiple times.
Recently, Canetti et al. [47] mitigated the conditions on the distributions and
resolved the security issues proposing reusable fuzzy extractors. However, the
error correction rate (sublinear in [47]) tolerated by fuzzy extractors are still
quite severe to be applied to some biometrics (especially, for iris which requires
linear error tolerance [48, 49]).
Cancellable biometrics or biohashing [50, 51, 52, 53, 54] have been proposed
to protect biometrics and to deal with the noisy nature of biometrics. It ex-
tracts features from raw biometric using non-invertible transformation with ran-
domized token for cancellability, and provides low error rates and quick au-
thentication process. However, the privacy of biometric in this methods is not
completely provided as cryptographic hash function, and several analysis or at-
tacks [55, 56, 57, 58] are known. Especially, the authentication accuracy (FAR or
FRR) highly depends on the randomized token which is diﬀerent among users,
8 Measured on
client: “Samsung Galaxy S4 smartphone 4-Core 1.9GHz CPU (Qualcomm Snap-
dragon), 2GB RAM.”
server & Cloud: “Intel Xeon E5-2430L v2 6-Core 2.4GHz CPU, 64GB RAM”
and the quality of authentication is deteriorated when the token is leaked [59].
Therefore, each user should keep their own token secretly, which weakens the ver-
satility of biometric authentication. On the contrary, the authentication quality
of our primitive is not deteriorated by an illegitimate user encrypting his/her
biometric template with the same key (msk) as the legitimate user.
Many renowned researches we have not mentioned are classiﬁed to Pri-
vacy Preserving Biometric Identiﬁcation (PPBI). They are usually based on
MPC [60, 61, 62, 63, 64, 65], and enables a client to match his/her biometric
to the database of server without revealing his/her input. We remark that they
should be distinguished from biometric authentication which allows the server
to check the matching result. One major diﬀerence is that authentication system
is highly necessary to be secure under the presence of malicious client, since an
adversary will actively attempt to be accepted by the server as a legitimate user
or to capture the biometric data stored in the server during the authentication
phase. In this sense, many PPBIs which are secure under the HBC model is not
appropriate to be regarded as a solution for PPBA. In addition, many PPBIs
consider that it is allowable for the server to manage biometric database in a
plaintext form, and many PPBIs don’t work eﬃciently if this is not allowed.
However, storing raw biometric data in a server is a serious threat these days as
we pointed out in Section 1.
8 Conclusion
Privacy-preserving biometric authentication is a protocol to authenticate users
with their biometrics while preserving the privacy of biometric information. Due
to the usability and high entropy of biometrics, many of the researches on PPBA
has been done recently. However, currently proposed PPBAs with suﬃcient ac-
curacy have drawbacks especially in speed to be applied in practice. In this
work, we propose a new practical PPBA for Hamming distance matcher, which
is secure against active attack under the standard LWE assumption. Our exper-
imental results support the practical feasibility of our protocol toward the real
world.
A Proof of Lemma 4.8
Dσ1 and Dσ2 , respectively. Let σ =(cid:112)σ2
distribution (Dσ, DLσ2
lemma 4.8. For real numbers σ1, σ2 > 0, let e and f be variables of distributions
2, then (e + f, e|(e + f )) follows the
(cid:32)
− π(cid:0)x − yσ2
1 /σ2, σ1σ2/σ) where L denotes the value of e + f .
Pr[e = x|e + f = y] =
Proof. It is enough to show that
1/σ2(cid:1)2
(cid:33)
1 + σ2
σ
σ1σ2
exp
σ2
1σ2
2/σ2
.
We can check it by a direct computation as follow:
σ1σ2
σ1σ2
=
σ
σ
= exp
= exp
= exp
= exp
= exp
(cid:19)
+
πy2
1 + σ2
σ2
2
x − π(
σ2
2
Pr[e + f = y]
− π(y − x)2
· Pr[e = x|e + f = y]
· Pr[e = x] · Pr[f = y − x]
(cid:18)
(cid:18)
− πx2
σ2
1
(cid:18)