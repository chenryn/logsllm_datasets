compromised 
in ASk can forge a path-identifier 
promised 
{#, ASi, *, ASd, if the domains up to ASi are unprotected. 
its path-markings 
domains and com­
as 
a router can authenticate 
sources in unprotected 
of markings 
routers 
signature 
to the path-markings. 
However, 
prefix that be­
an address 
All BGP routers 
adds an origin authen­
signed with the domain's 
advertises 
the BGP speaker 
number (OAN), which is unique in its domain and 
private-key, 
this route ad­
When a BGP speaker 
longs to its domain, 
tication 
is digitally 
advertisement. 
vertisement 
validate 
and hold the authenticated 
for later path-identifier 
ASN-OAN pairs is at most 65,5353, the space requirement 
for this validation 
4.1.2 Origin Authentication 
ASN (AS Number)-OAN 
pair 
Since the number of 
the OAN with the origin's 
authentication. 
262KB for 4-Byte OANs. 
public-key 
that receive 
is bounded, 
to its route 
i.e., 
the ingress 
of a packet's 
router of a marking AS constructs 
domain of origin writes its 
by the AS path to the destination 
Fig. 2 illustrates 
deployment 
in 
the cases for ori­
of 
scenarios 
no path-identifier 
is present 
The BGP speaker 
ASN-OAN pair followed 
header. 
the path-identifier 
gin authentication 
under different 
the marking scheme. Whenever 
in a packet, 
path-markings 
2). On receiving 
ingress 
OAN and the partial 
valid path-markings 
3 As of 20 I 0, the number of advertised 
ASNs [2] 
4For path validation, 
routers 
AS path as discussed 
can be identified 
with its own ASN-OAN pair (viz., 
constructed 
domains validate 
path-identifiers 
of downstream 
above.4 Thus, in­
of 
as such, the 
the origin's 
@ in Fig. 
even in the presence 
ASNs is about 30,000 out of 
need to keep AS path information  (from 
routers 
65,535 (I6-bit) 
possible 
signature 
computational 
in every packet would impose sig­
and 
for both its generation 
Moreover, 
overhead 
a per-packet 
signature, 
if employed, 
next hop to the destination 
ever, this would not require 
a packet traverses 
from its origin to destination 
is four. 
AS) in their forwarding 
much space since the average number of ASes 
table (i.e., FIB).  How­
In principle, 
by adding a digital 
adding a digital 
nificant 
verification. 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
304 
DSN 2010: Lee et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:01:11 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Meanwhile, 
ASes on the paths and be filtered 
non-marking 
consecutive 
on the way to, or at the destination 
AS. 
a compromised 
router in ASi can still forge 
such as {ASi, OANik, * } 
two types of valid path-identifiers 
and {#, ASi, OANik, *}. However, 
their effects can 
be lim­
ited to at most those of two path-identifiers 
the 
of path-identifiers. 
non-authenticated 
by discarding 
prefixes 
4.2. Preventing Replay Attacks 
(i.e., 
Under partial 
deployment 
of our path-marking 
domains may forge path­
scheme, 
would 
routers 
Path-marking 
ASN-OAN pairs (since 
to end-hosts) 
and use 
ending with authenticated 
attack sources in unprotected 
identifiers 
ASN-OAN pairs are not confidential 
them in flooding a target link. Such replay attacks 
domains. 
significantly 
affect 
via fast OAN 
using a re­
OAN of 
renewals, 
verse hash chain [12]. Let OAN? be the initial 
ASi. ASi constructs 
edly hashing 
of protected 
replay attacks 
implemented 
the requests 
counter 
OAN? with a cryptographic 
OAN =  Hash(OAN-lIIASillk - 1) for 1  k   M), 
gage ASi and k - 1 in generating 
OANr when advertising 
which are efficiently 
a hash chain of OANs by repeat­
and distributes 
hash function 
a route. We en­
OAN to produce dis­
ASes and initial 
OANs 
for different 
uses OAN during a prede­
tinct OAN sequences 
respectively. 
fined interval; 
terval. 
tacker cannot construct 
used. A (ingress) 
A BGP speaker 
and changes it to OAN-l in the next in­
an at­
of OANs to be 
breaking 
the valid sequence 
router can authenticate 
ing Hash(OANIIASillk) and comparing 
OAN by comput­
it with OAN+l. 
the hash function, 
Hence, without 
once for every 
for replaying 
OANs, replay attacks 
is performed only 
This OAN authentication 
OAN renewal. 
Note that if the OAN renewal period is less than the time 
required 
will be effec­
The length of a OAN hash chain (M) is 
tively prevented. 
determined 
of the OAN renewal period to 
avoid frequent OAN distribution. 
sequence 
period are used, a domain needs to advertise 
in every six days. We also note that routers 
mains need not be time-synchronized 
sequence 
to the domain. 
its OAN once 
in different 
do­
its 
as an OAN carries 
For example, 
if a 20-bit 
and 500ms OAN renewal 
number (M  1 million) 
in consideration 
number that is specific 
5. Dynamic Virtual Queueing 
Once OAN is used, OAN+l is invalidated. 
fairness 
buffer-slot 
from the longest 
policy. 
it preempts 
for Ls;ESNs;(t) 
EsNs;(t) 
by the following 
the buffer; i.e., (Si, N s; (t), AsJ. Given these tuples and 
the buffer size LQ, queue-length 
on path-identifiers 
=  LQ) can be 
(minmaxs;
described 
preemption 
If a packet finds the buffer full on its arrival, 
a buffer-slot 
rived packet belongs 
emption  produces  another  longest  virtual  queue, 
be dropped. This preemption 
buffer-slots 
path-identifiers 
buffered path-identifiers 
tically 
bandwidth 
queue. If the ar­
or its pre­
it would 
policy  ensures 
bounded by ISlmax 
We assume that the number of 
can be statistically 
to the longest  virtual  queue, 
or determinis­
the minimum 
to each path-identifier 
if the number of buffered 
can be determined). 
path-identifier 
to a legitimate 
at a router (i.e., 
guaranteed 
is bounded. 
virtual 
5.1. Implementing Buffer-slot Preemption 
For efficient 
and scalable 
accounting 
of virtual 
queue 
Bloom Filter (CBF) that 
lookup, 
by path-identifiers 
occupied 
we use a new Counting 
add and remove operations 
of CBF [6]). CBF consists 
in 0(1) 
of m 
arrays of size 2b (aI, a2, . . .  ,am) and m hash func-
lengths, 
holds the number of buffer-slots 
and provides 
time (a modified version 
counter 
tions of b-bit output (HI, H2, . . .  ,Hm), where ai is asso-
ciated with Hi. For an input  to 
maps its output to the corresponding 
adHi(Sl)] corresponds 
to the input Sl for 1  i  m. 
CBF, each hash function 
array position; 
e.g., 
All 
Path-identifier 
in CBF works as follows. 
to zero. When a packet is added 
m array positions 
accounting 
array values are initialized 
to the buffer, its path-identifier 
locates 
creases 
to a packet removal from the buffer, yet the counter 
val­
ues are decreased. 
hash out­
is fed into CBF. Then, CBF 
and in­
for the path-identifier, 
The same applies 
array values. 
In this scheme, the limited 
the corresponding 
put size (i.e., 2b) could cause hash-output 
collisions 
among 
However, 
would make corresponding 
we can compute the count of 
path-identifiers, 
Such collisions 
by multiple 
hence 
unless all of the array values associ­
path-identifiers. 
array values increased 
corrupted. 
ated with Si are corrupted, 
buffered Si'S by taking the minimum of the array values; 
i.e., min{al[Hl(Si)], 
the probability 
corrupted 
identifiers 
increasing 
SI)m 
is (1 -(1 -(1/2b))I
or the number of arrays (m). 
the array size (2b) 
amount (i.e., l fSI J) should be kept track of for 
for lSI buffered path­
... , am [Hm(Si)]}. 
that all m array values of a path-identifier 
that occupy more buffer slots than the 
a2[H2(Si)], 
Path-identifiers 
Since 
are 
[7], we can make the probability  negligible 
by 
on path-identifiers. 
queueing 
mechanism 
guarantees 
a dynamic virtual 
In this section, 
we describe 
for link-access 
queueing 
mechanism 
Our dynamic virtual 
assign a separate 
vide queue length fairness 
max manner. For these purposes, 
tual queues rather than physically 
distinguished 
t (Ns; (t)) and packet location 
separate 
by the path-identifier 
to 
and pro­
in a min­
a router manages vir­
that are 
(Si), its count at time 
queue to active path-identifiers 
to the path-identifiers 
(memory address) 
is designed 
queues, 
(AsJ in 
preemption. 
guaranteed 
possible 
ble, named Path-Identifier 
buffered path-identifiers, 
packet locations. 
concatenation 
signature." 
the preempted 
of m hash outputs 
This enables 
packet's 
In PIR, a path-identifier 
is stored as the 
of it, defined as "path­
fast buffer-slot 
path-signature 
preemption 
would directly 
because 
locate 
To this end, a router maintains 
Record (PIR) , that holds over­
their counts and corresponding 
a ta­
978-1-4244-7501-8/1 0/$26. 00 ©20 lO IEEE 
305 
DSN 2010: Lee et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:01:11 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Si are modeled as 
to Si, the 
are allocated 
lower bound of S/s link access (denoted 
by 
array values that need to be decreased 
in CBF. 
5.2. Probabilistic 
Guarantees 
If the packet arrivals 
of path-identifier 
process 
and k buffer-slots 
as follows. 
a Poisson 
probabilistic 
9(151, k, Si)) is provided 
k, 8i) = { ", k-1 (kps;)j -kps. 
9(151, 
L,j=O j! e  • 
_1_(1 _  g )(1 _  ",00  (kps;lj e-kPSi ( j )gk-l) 
PSi  £  L,J=k J! 
k-1 £ 
(5. 1) 
PSi 'Si is the request 
width utilization 
(kP;Y e-kpSi. 
of Si, and 9.c =  L;: 
that the 
J. 
requests 
sessions 
We justify 
guarantee 
that need to be es­
only if its queue 
to be serviced 
are defined (i.e., 
of Si has occurred 
the Poisson arrival 
of Si is guaranteed 
of Si is guaranteed 
of Si'S link-access 
model of capability 
for most Web applications. 
re­
(1) during the short interval 
the maximum queueing 
by different 
can 
Under this model, if 
if less 
to be serviced 
in !:l.Q. If PSi  1, an 
delay 
clients 
and (2) a single capability 
quests with two reasons: 
guarantees 
of a router !:l.Q), the capability 
can be assumed independent; 
be used for multiple 
correlated 
tablished 
PSi < 1, an arrival 
than k arrivals 
arrival 
length is less than k. Thus, Eq. (5.1) can be easily proved. 
is provided 
The probabilistic 
by setting 151 =  ISlmax and k =  l,Sf::ax 
5.3. Resource Requirements 
5.3.1 Request Packet Buffer 
A large buffer (LQ) for capability 
is prefer­
able since it would not only improve the guarantees 
Eq. (5.1)) 
created, 
should be bounded in consideration 
lowed queueing 
sources. 
mum queueing 
2.5 Gbps link 6, a router requires 
of link bandwidth 
and with which it can provide 
to 3.75K path-identifiers. 
the size of the buffer 
of the maximum al­
retries 
at flow 
if we assume 0.25 second maxi­
packet size, for a 
4.0 MB buffer (when 5% 
for capability 
8 guaranteed 
delay to avoid unnecessary 
requests 
buffer slots up 
Accounting 
The memory requirement 
get false-positive 
5.3.2 Path-Identifier 
m R:j  (l_e-II)m = 
is determined by (l_(l_)ISI)
(1 - e-{;% ) m since LQ =  k· 151. Hence, for a desired 
for CBF is determined 
by a tar­
ratio of a CBF 
but also handle the requests 
ratio. The false positive 
delay and 128B5 request 
paths. However, 
short-lived 
is allocated 
For example, 
request 
packets 
(viz., 
[21]), 
ratio, 
the size of each counter 
array in CBF, 
of hash output (2b), is linear 
with 
a CBF with 8 
false positive 
which is same as the  size 
the buffer size (i.e., 8(LQ)). 
outputs 
hash functions 
outputs) 
=  131KB memory space while pro­
ducing a reasonably 
in the presence 
8 x 214 (hash 
ratio (3.07 x 10-4%) 
For example, 
would require 
of 3.75K path-identifiers. 
low false positive 
x28 (counter) 
of 14-bit 
for possible 
preemption. 
PIR holds the path-identifiers 
whose count exceeds l fs1 J 
is bounded by LQ/(k + l)x (16B (path-signature) 
Hence, the memory requirement 
+ 4B 
60KB for the above example), 
since 
in PIR has its maximum when 
(e.g., 
(address 
the number of path-signatures 
have k + 1 packets 
all path-identifiers 
the memory requirement 
for both CBF and PIR is 8 (LQ ). 
in the buffer. 
pointer)) 
Hence, 
6. Path Aggregation 
In this section, 
we first describe 
of legitimate 
a mechanism 
for estimat­
of individual 
requests 
and then, a path-identifier 
ing the proportion 
identifiers, 
nism that maximizes 
portion 
congested 
optimal 
anism maximizes 
path­
aggregation 
mecha­
the good put ratio, defined as the pro­
requests 
at a 
in all serviced 
requests, 
path-identifiers 
an 
produces 
our queueing 
mech­
link. 
goodput ratio at the congested 
traffic tree to which applying 
link. Aggregating 
of legitimate 
6.1. Goodput Estimation 
In absence 
origin of attack sources 
them, the request 
as a unique measure 
We define the bandwidth 