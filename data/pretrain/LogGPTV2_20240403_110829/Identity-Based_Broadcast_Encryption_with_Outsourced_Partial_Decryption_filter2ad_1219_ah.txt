algorithms in our scheme. The data is measured by the benchmark tool provided
by Charm. The average time cost is recorded after running each program using
the MNT224 curve and other related parameter for 100 times. We perform the
experiment in the following way: ﬁrst setup the system with the maximum size
of privileged set m and the total number of system users N , then generate a
secret key, update key periodically via a public channel for the revocation list
RL, generate the decryption key, encrypt a message given a privileged set S and
decrypt the ciphertext.
Figure 2 (left) plots the inﬂuence of the maximum size of privileged set
m on the eﬃciency of our scheme, where m ∈ {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, the
total number of system users is set to be N = 64, and there is no users is
revoked (i.e., RL = ∅). For the Encap algorithm, the privileged identity is set as
S = {PI:EMAIL, ..., PI:EMAIL} for m = 1, 2, ..., 10. The user with
identity PI:EMAIL that is not revoked can always correctly decrypt during
this experiment. Note that for m = 1, this is an adaptively secure revocable IBE
scheme, which is proven in Lemma 4. As we see in Figure 2(a), SKGen algorithm
consumes the most computation costs. This is because (3m+3)∗(log2N ) elements
are needed for each private key, which will take O(m∗ (log2N )) exponentiations
of G2. The operations on group G2 are more expensive than that of G1, about 11
times for exponentiations according to [1]. Note that the private key is generated
only one time from PKG via a secure channel for each user in the system. For
26
the more frequent activity of KeyUp algorithm in the PKG side, the average
time cost is bounded by just 0.14s.
Figure 2 (right) plots the time taken by the total number of system users
N ∈ {22, 23, 24, 25, 26, 27, 28, 29, 210, 211, 212}, in which case the maximum size of
privileged set for one encryption is set to be m = 10, and the revocation list RL =
∅. One can see that the time cost of the Setup algorithm grows exponentially
in the depth d of the binary tree, which means the computation overhead is
still linear in the number of system users N , where N = 2d. The reason is that
PKG should assign each identity into a random leaf node in the binary tree,
and maintain the state information ST . It is worth mentioning that PKG can
use a pseudorandom generator instead of storing the random values for each
node in the binary tree, which is suggested in the Libert-Vergnaud scheme [25].
In terms of secret key generation algorithm SKGen, the compution overhead
is linear in the depth of the binary tree, as the secret key is associated with
the path from root to the leaf node. The compution overhead of the DKGen,
Decap and KeyUp algorithms are all under 1 second, which are independent
of the number of system users. Sepciﬁcally, the average time cost of the Encap
algorithm is just 31.2 ms, which makes our revocable IBBE scheme very eﬃcient.
Fig. 3. Average time cost of KeyUp algorithm for diﬀerent numbers of r
Figure 3 (left) demonstrates the time cost of KeyUp algorithm for diﬀerent
numbers of users to be revoked r from 1 to 50, where the total number of system
users is set to be N = 64. Note that the random leaf node assignment tech-
nique [33] is used in our scheme. When a new user joins the system, it is assigned a
random leaf node in the tree. In our implementation, each identity is pre-assigned
a random leaf node via the built-in function random.shuffle () in the system
setup phase. The revocation list is RL = {PI:EMAIL, ..., PI:EMAIL}
for j = 1, 2, ..., 50. We can see that the time overhead of this KeyUp algorithm
in all cases is upper bounded by 2.5s. More speciﬁcally, if each identity is assigned
a leaf node in sequence without the random leaf node assignment technique [33],
the average time costs of the KeyUp algorithm would be present in Figure 3
(right). We can say that r = 32 will have the least computation overhead, as
there will be only one node in the KUNode algorithm of the KeyUp algorithm.
27
7 Conclusion
Providing an eﬃcient revocation mechanism is necessary in the IBE setting and
BE setting where a large number of users are involved, especially when consid-
ering practical deployments of these cryptosystems. It is more desirable that the
sender does not need to know the revocation list, and only the receiver needs to
check the revocation list of his credential to decrypt ciphertext. We further ex-
pand the study of scalable revocation methodology in the setting of IBBE, and
then present a concrete instantiation of revocable IBBE scheme with DKER,
which is motivated by a new revocable IBE scheme recently proposed in [38]. To
build our revocable IBBE scheme, we ﬁrst propose an adaptive IBBE scheme de-
rived from [31]. Then we can construct a revocable IBBE scheme with a security
reduction to the aforementioned IBBE scheme. The proposed scheme is very ef-
ﬁcient both in terms of computation costs and communication overheads, as the
ciphertext size is constant, independent of the number of recipients. Our scheme
can withstand decryption key exposure, which is proved its semi-adaptive secu-
rity under mild variants of the SXDH assumption. As a side contribution, we
also present an adaptive secure revocable IBE scheme with DKER, which can
be seen as a complementary of Watanabe et al.’s revocable IBE scheme [38].
Acknowledgment. Part of this work was done while Aijun Ge was visiting
Institute for Advanced Study, Tsinghua University. The authors would like to
thank Jianghong Wei and Jie Zhang for their helpful discussions on the Charm
framework. We also thank anonymous reviewers of PKC 2019 for their insightful
comments. The work is partially supported by the National Natural Science
Foundation of China (No.61502529 and No.61502276) and the National Key
Research and Development Program of China (No.2017YFA0303903).
References
1. Agrawal S., Chase M.: FAME: fast attribute-based message encryption. In Proc.
of the 24th ACM Conference on Computer and Communications Security (CCS
2017 ), New York, NY, USA, pp.665-682. ACM (2017)
2. Attrapadung N. and Imai H.: Attribute-based encryption supporting direc-
t/indirect revocation modes. In IMA International Conference on Cryptography
and Coding (IMCC 2009 ), LNCS 5921, pp.278-300. Springer, Heidelberg (2009)
3. Akinyele J.A., Garman C., Miers I., et al.: Charm: a framework for rapidly proto-
typing cryptosystems. Journal of Cryptographic Engineering, 3: 111-128, 2013
4. Boneh D., Boyen X.: Eﬃcient selective-ID secure identity-based encryption without
random oracles. In Advances in Cryptology-EUROCRYPT 2004, LNCS 3027, pp.
223-238. Springer, Heidelberg (2004)
5. Boneh D., Franklin M.: Identity-based encryption from the Weil pairing. In Ad-
vances in Cryptology-CRYPTO 2001, LNCS 2139, pp. 213-229. Springer, Heidel-
berg (2001)
6. Boldyreva A., Goyal V., Kumar G.: Identity-based encryption with eﬃcient revo-
cation. In Proc. of the 15th ACM Conference on Computer and Communications
Security (CCS 2008 ), New York, NY, USA, pp.417-426. ACM (2008)
28
7. Chang D., Chauhan A., Kumar S., Sanadhya S.: Revocable identity-based encryp-
tion from codes with rank metric. In Int. Conf. of Cryptographers’ Track at the
RSA (CT-RSA 2018), LNCS 10808, pp. 435-451. Springer, Heidelberg (2018)
8. Chen J., Lim H., Ling S., Su L., Wang H. Nguyen K.: Revocable identity-based en-
cryption from lattices. In Int. Conf. of Information Security and Privacy (ACISP
2012 ), LNCS 7372, pp.390-403. Springer, Heidelberg (2012)
9. Chatterjee S., Menezes A.: On cryptographic protocols employing asymmetric
pairings-the role of ϕ revisited. Discrete Applied Mathematics, 159(13): 1311-1322,
2011
10. Chen J., Wee H.: Semi-adaptive attribute-Based encryption and improved delega-
tion for boolean formula. In Int. Conf. of Security and Cryptography for Networks
(SCN 2014 ), LNCS 8642, pp.277-297. Springer, Heidelberg (2014)
11. Delerabl´ee C.: Identity-based broadcast encryption with constant size ciphertexts
and private keys. In Advances in Cryptology -ASIACRYPT 2007, LNCS 4833,
pp.200-215. Springer, Heidelberg (2007)
12. Emura K., Seo J.H., Youn T.: Semi-generic transformation of revocable hierarchical
identity-based encryption and its DBDH instantiation. IEICE Trans, 99(A(1)): 83-
91, 2016
13. Fiat A., Naor M.: Broadcast encryption. In Advances in Cryptology-CRYPTO
1993, LNCS 773, pp. 480-491. Springer, Heidelberg (1994)
14. Galbraith S., Paterson K., Smart N.: Pairings for cryptographers. Discrete Applied
Mathematics, 156(16): 3113-3121, 2008
15. Gentry C., Waters B.: Adaptive security in broadcast encryption systems (with
short ciphertexts). In Advances in Cryptology-EUROCRYPT 2009, LNCS 5479,
pp. 171-188. Springer, Heidelberg (2009)
16. Jutla C., Roy A.: Shorter quasi-adaptive NIZK proofs for linear subspaces. In: Sako
K. and Sarkar P. (Eds.) In Advances in Cryptology -ASIACRYPT 2013, LNCS
8269, pp.1-20. Springer, Heidelberg (2013)
17. Katsumata S., Matsuda T., Takayasu A.: Lattice-based revocable (hierarchical)
identity-based encryption with decryption key exposure resistance. Cryptology
ePrint Archive, Report 2018/420, 2018
18. Katz J., Sahai A., Waters B.: Predicate encryption supporting disjunctions, poly-
nomial equations and inner products. In Advances in Cryptology-EUROCRYPT
2008, LNCS 4965, pp. 146-162. Springer, Heidelberg (2008)
19. Kogan N., Shavitt Y., Wool Avishai.: A Practical revocation scheme for broad-
cast encryption using smart cards. ACM Transactions on Information and System
Security, 9(3): 325-351, 2006
20. Lee Kwangsu: Revocable hierarchical identity-based encryption with adaptive se-
curity. Cryptology ePrint Archive, Report 2016/749, 2016
21. Lee K., Lee D., Park J.: Eﬃcient revocable identity-based encryption via subset
diﬀerence methods. Design Codes Cryptography 85: 39-76, 2017
22. Lai J., Mu Y., Guo F., et al.: Full privacy-preserving and revocable ID-based
broadcast encryption for data access control in smart city. Pers Ubiquit Comput,
21: 855-868, 2017.
23. Ling S., Nguyen K., Wang H., Zhang J.: Server-aided revocable predicate encryp-
tion: Formalization and lattice-based instantiation. CoRR, abs/1801.07844, 2018.
24. Lee K., Park S.: Revocable hierarchical identity-based encryption with shorter
private keys and update keys. Design Codes Cryptogrphy, doi: 10.1007/s10623-
017-0453-2, 2018
29
25. Libert B., Vergnaud D.: Adaptive-ID secure revocable identity-based encryption.
In Int. Conf. of Cryptographers’ Track at the RSA (CT-RSA 2009 ), LNCS 5473,
pp.1-15. Springer, Heidelberg (2009)
26. Miyaji A., Nakabayashi M., Takano S.: Characterization of elliptic curve traces
under FR-reduction. In Int. Conf. of Information Security and Cryptology (ICISC
2000 ), LNCS 2015, pp.90-108. Springer, Heidelberg (2000)
27. Nieto J., Manulis M., Sun D.: Fully private revocable predicate encryption. In Int.
Conf. of Information Security and Privacy (ACISP 2012 ), LNCS 7372, pp.350-
363. Springer, Heidelberg (2012)
28. Naor D., Naor M., Lotspiech J.: Revocation and tracing schemes for stateless
receivers. In Advances in Cryptology-CRYPTO 2001, LNCS 2139, pp. 41-62.
Springer, Heidelberg (2001)
29. Nguyen K., Wang H., Zhang J.: Server-aided revocable identity-based encryption
from lattices. In Int. Conf. on Cryptology and Network Security (CANS 2016 ),
LNCS 10052, pp. 107-123. Springer, Heidelberg (2016)
30. Qin B., Deng R., Li Y., Liu S.: Server-aided revocable identity-based encryption. In
Proc. the 20th European Symposium on Research in Computer Security (ESORICS
2015 ), LNCS 9326, pp.286-304. Springer, Heidelberg (2015)
31. Ramanna C. Somindu: More eﬃcient construction for inner product encryp-
tion. In Int. Conf. of Applied Cryptography and Network Security. (ACNS
2016 ), LNCS, 9696, pp. 231-248. Springer, Heidelberg (2016) The full version,
http://eprint.iacr.org/2016/356
32. Susilo W., Chen R., Guo F., et al.: Recipient rovocable identity-based broadcast
encryption, or how to revoke some recipient in IBBE without knowledge of the
plaintext. In Proc. of the 11th ACM on Asia Conference on Computer and Com-
munications Security (AsiaCCS 2016 ), Xi’an, China, pp.201-210. ACM (2016)
33. Seo J. Hong and Emura Keita: Revocable identity-based encryption revisited: Se-
curity model and construction. In Proc. the 16th Int. Conf. on Public Key Cryp-
tography (PKC 2013 ), LNCS 7778, pp. 216-234. Springer, Heidelberg (2013)
34. Seo J. Hong and Emura Keita: Eﬃcient delegation of key generation and revocation
functionalities in Identity-Based encryption. In Int. Conf. of Cryptographers’ Track
at the RSA (CT-RSA 2013), LNCS 7779, pp. 343-358. Springer, Heidelberg (2013)
35. Seo J. Hong and Emura Keita: Revocable hierarchical identity-based encryption:
History-free update, security against insiders, and short ciphertexts. In Int. Conf.
of Cryptographers’ Track at the RSA (CT-RSA 2015), LNCS 9048, pp. 106-123.
Springer, Heidelberg (2015)
36. Seo J. Hong and Emura Keita: Adaptive-id secure revocable hierarchical identity-
based encryption. In Int. Conf. on Information and Computer Security (IWSEC
2015 ), LNCS 9241, pp. 21-38. Springer, Heidelberg (2015)
37. Waters B.: Dual system encryption: realizing fully secure IBE and HIBE under
simple assumptions. In Advances in Cryptology-CRYPTO 2009, LNCS 5677, pp.
619-636. Springer, Heidelberg (2009)
38. Watanabe Y., Emura K., Seo J.: New revocable IBE in prime order group-
s: adaptively secure, decryption key exposure resistant and with short pub-
lic parameters. In Int. Conf. of Cryptographers’ Track at the RSA (CT-RSA
2017), LNCS 10159, pp. 432-449. Springer, Heidelberg (2017) The full version,
http://eprint.iacr.org/2016/1094
39. Yang B., Yang K., Qin Y., Zhang Z., Feng D.: DAA-TZ: an eﬃcient DAA scheme
for mobile devices using ARM trustzone. In Int. Conf. on Trust and Trustworthy
Computing (Trust 2015 ), LNCS 9229, pp.209-227. Springer, Heidelberg (2015)
30
A Proof of Lemma 3 in Section 3.2
Proof. Given a PPT adversary A achieving a non-negligible diﬀerence ε in advan-
tage between Gameq and GameFinal, we will create a PPT algorithm C to break
,Z = gµα2+η
the ADDH1 assumption. Let (g1,gµ
1 , gα2
)
be the instance of ADDH1 problem in G that C has to solve, i.e., to decide
whether η = 0 or a random value in Z∗
p. Note that in Gameq, all the user keys
returned to A are semi-functional and so is the challenge header and session key.
C will simulate either Gameq or GameFinal with A, depending on the value of η.
Setup: At the beginning, C chooses random exponents u1 = (u1,0,··· , u1,m),
u2 = (u2,0,···,u2,m),w1,w2
p, and sets the public parameters P P :
R←−Zp and b R←−Z∗
1 , g2, gα
2 , gβα2
1 ,gβα
2 ,gβα
,g1/β
2
2
1
g1 := g1, gb
g2 := g2, gu1
1, U 1 := gu1+bu2
2 , gu2
2 , gw2
2 , gw1
1
2 , gβα
, W1 := gw1+bw2
1 , gβα1
:= gβα
, gT := e(g1, gα
)b, gβα2
2 /(gβα2
2 ),
, g1/β
1
2
2
2
2
.
Note that this implicitly sets α1 := α−bα2, and the secret exponents (α1, α2) in
M SK are not available to C.
Key Extraction: When the adversary A requests a secret key extract query
for an identity ID ∈ Zp, C creates a semi-functional key. It does this by choosing
random exponents r, γ(cid:48), ktag1,··· , ktagm
R←− Zp, which implicitly sets γ := γ(cid:48) +
bα2. The semi-functional key elements are computed as:
2 )r/gγb−1
2 )rgγ
K1 = gα1
2 = gα
For i = 1, 2, ..., m:
2 )ktagi · gu1,i
K4,i = ((gw1
)r.
This is a properly distributed semi-functional key, which can be easily veriﬁed.
Challenge: Once the public parameters P P and the keys for all key extrac-
tion queries are given, A provides a challenge privileged set S∗ ={ID1,ID2, ...,IDn}.
C ﬁrst computes the vector y = (y0, y1,··· , ym) according to S∗ as the coeﬃ-
IDj∈S∗ (Z − IDj). It then picks randomly s, ctag ∈ Zp,
cient from PS∗ [Z] =(cid:81)
2 = (gw2
2 )ktagi · gu2,i
2 )r/gγ(cid:48)b−1
/(gu2,0
2 )rgγ(cid:48)
/(gu1,0
)r, K5,i = ((gw2
2 , K2 = gα2
, K3 = gr
2.
2 (gw2
2 (gw1
2 (gw1
)(ID)i
)(ID)i
2
2
2
2
2
and computes the challenge header Hdr = (C1, C2, C3, ctag) as follows:
1 )yi)s · gµ((cid:104)y,u1(cid:105)+ctag·w1)
C1 = gs
tion, the challenge session key K is set to be: K = gT
1 , C3 = (W ctag
1 , C2 = gsb
s · e(gµ
i=0 (gui
1 · gµ
1 , gα
2 )/e(Z, gb
1
1
2).
). In addi-
1
p, which means Z = gµα2+η
One can verify that the challenge header Hdr = (C1, C2, C3, ctag) has proper
semi-functional forms. Furthermore, if Z = gµα2
(i.e., η = 0), then K is a
properly distributed semi-functional session key. In this case, C has properly
simulated Gameq. If η is a random value in Z∗
is a
random element in G1, then K is uniformly distributed and is independent of
all other components. In this case, C has properly simulated GameFinal.
Guess: Eventually, the adversary A will output a guess β(cid:48) of β. The chal-
lenger C then outputs 0 to guess that Z = gµα2
if β(cid:48) = β; otherwise, it outputs
is a random element of G1. Also, C simulates
1 to indicate that Z = gµα2+η
Gameq if η = 0 and GameFinal if η ∈ RZ∗
p. Therefore, C can use A’s output
from random with the same advantage that A has in
to distinguish Z = gµα2
distinguishing Gameq from GameFinal.
(cid:117)(cid:116)
This completes the proof of Lemma 3.
1
1
1
1
·(cid:81)n
31