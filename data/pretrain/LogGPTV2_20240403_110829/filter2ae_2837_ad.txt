  * [Escape and Evasion Egressing Restricted Networks - Tom Steele (@_tomsteele) and Chris Patten](https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks)
  * [Red Team Insights on HTTPS Domain Fronting Google Hosts Using Cobalt Strike](https://www.cyberark.com/threat-research-blog/red-team-insights-https-domain-fronting-google-hosts-using-cobalt-strike/) \- [Will Vandevanter and Shay Nahari of CyberArk](https://www.cyberark.com)
  * [SSL Domain Fronting 101 - Steve Borosh (@424f424f)](http://www.rvrsh3ll.net/blog/offensive/ssl-domain-fronting-101/)
  * [How I Identified 93k Domain-Frontable CloudFront Domains - Chris Myers (@SWIZZLEZ_) and Barrett Adams (@PEEWPW)](https://www.peew.pw/blog/2018/2/22/how-i-identified-93k-domain-frontable-cloudfront-domains)
  * [Domain Fronting: Who Am I? - Vincent Yiu (@vysecurity)](https://medium.com/@vysec.private/domain-fronting-who-am-i-3c982ccd52e6)
  * [Validated CloudFront SSL Domains - Vincent Yiu (@vysecurity)](https://medium.com/@vysec.private/validated-cloudfront-ssl-domains-27895822cea3)
  * [CloudFront Hijacking](https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/) \- [Matt Westfall (@disloops)](https://twitter.com/disloops)
  * [CloudFrunt GitHub Repo](https://github.com/MindPointGroup/cloudfrunt) \- [MindPointGroup](https://github.com/MindPointGroup)
  * [Metasploit Domain Fronting With Microsoft Azure (@ch1gg1ns)](https://chigstuff.com/blog/metasploit-domain-fronting-with-microsoft-azure/)
### 6.2 PaaS 转向器
许多`PaaS`和`SaaS`提供商为应用实例提供了一个静态子域或 URL 的功能。
如果此服务商的域是高度可信的，则可购买的此域的`VPS`为您的`C2`基础架构提供服务。
要设置重定向，您需要确定将静态子域或URL作为实例的服务一部分发布。 然后，实例将需要使用网络或基于应用程序的重定向进行配置。
该实例将充当代理，之后与此文与上讨论的其他转向器类似。
根据服务的具体实施可能会有很大差异; 然而，对于使用Heroku的示例，请查看[Alex Rymdeko-Harvey
(@Killswitch_GUI)](https://twitter.com/Killswitch_GUI)博客文章[Expand Your Horizon
Red Team – Modern SaaS C2](https://cybersyndicates.com/2017/04/expand-your-horizon-red-team/)。
另一个值得进一步研究的有趣技术是使用`Amazon S3`的 buckets 存储用于`C2`。 可查看[Andrew Luke
(@Sw4mp_f0x)](https://twitter.com/Sw4mp_f0x)）的帖子 [S3 Buckets for Good and
Evil](https://pentestarmoury.com/2017/07/19/s3-buckets-for-good-and-evil/)）。
这种技术可以与`Empire`的第三方`C2`功能结合使用。
### 6.3 其他第三方 C2
过去，一些第三方服务已经被利用于`C2`(译者注：如dropbox.com、pastebin.com)。
这种方式是利用允许用户快速发布或修改内容来帮助你逃避基于信用检测的监控系统，尤其是在第三方网站普遍受到信任的情况下。
查看其他第三方C2选项的资源：
  * [A stealthy Python based Windows backdoor that uses Github as a C&C server](http://securityblog.gr/4434/a-stealthy-python-based-windows-backdoor-that-uses-github-as-a-cc-server/) \- [maldevel at securityblog.gr](http://securityblog.gr/author/gkarpouzas/)
  * [External C2 (Third-Party Command and Control) - Cobalt Strike Documentation](https://www.cobaltstrike.com/help-externalc2)
  * [Cobalt Strike over external C2 – beacon home in the most obscure ways](https://outflank.nl/blog/2017/09/17/blogpost-cobalt-strike-over-external-c2-beacon-home-in-the-most-obscure-ways/) \- [Mark Bergman at outflank.nl](https://outflank.nl/blog/author/mark/)
  * [“Tasking” Office 365 for Cobalt Strike C2](https://labs.mwrinfosecurity.com/blog/tasking-office-365-for-cobalt-strike-c2) \- [William Knowles (@william_knows)](https://twitter.com/william_knows)
  * [External C2 for Cobalt Strike](https://github.com/ryhanson/ExternalC2/) \- [Ryan Hanson (@ryhanson)](https://twitter.com/ryhanson)
  * [External C2 framework for Cobalt Strike](http://www.insomniacsecurity.com/2018/01/11/externalc2.html) \- [Jonathan Echavarria (@Und3rf10w)](https://twitter.com/und3rf10w)
  * [External C2 framework (GitHub Repo)](https://github.com/Und3rf10w/external_c2_framework) \- [Jonathan Echavarria (@Und3rf10w)](https://twitter.com/und3rf10w)
  * [Hiding in the Cloud: Cobalt Strike Beacon C2 using Amazon APIs](https://rhinosecuritylabs.com/aws/hiding-cloudcobalt-strike-beacon-c2-using-amazon-apis/) \- [Rhino Security Labs](https://rhinosecuritylabs.com)
  * [Exploring Cobalt Strike's ExternalC2 framework](https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/) \- [Adam (@ _xpn_ )](https://twitter.com/_xpn_)
## 七、隐蔽基础设施
用来攻击的基础架构通常易于识别，要让它看起来想一个合法的服务器，我们需要采取一些措施来增强与目标组织或目标可能使用的服务之间的迷惑性。
转向器(Redirectors)可以通过[redirecting invalid
URIs](https://bluescreenofjeff.com/2016-03-29-invalid-uri-redirection-with-apache-mod_rewrite/)、[expiring phishing payload
links](https://bluescreenofjeff.com/2016-04-19-expire-phishing-links-with-apache-rewritemap/)或[blocking common incident responder
techniques](https://bluescreenofjeff.com/2016-04-12-combatting-incident-responders-with-apache-mod_rewrite/); 但是，还应该注意潜在的主机及其指标。
例如，在[Fall of an Empire](http://securesql.info/hacks/2017/4/5/fall-of-an-empire)文章中 John
Menerick（[@Lord_SQL](https://twitter.com/Lord_SQL)）罗列了在互联网上检测`Empire`服务器的方法。为了对抗这些容易被识别的指标，最好的办法就是采用修改`C2`流量模式(见本文“修改
C2 流量”部分)，修改服务器入口页面、限制打开的端口并修改默认的响应头。
有关如何为多种攻击框架执行这些和其他策略的更多详细信息，请查看这些帖子： _[Empire – Modifying Server C2
Indicators](http://threatexpress.com/2017/05/empire-modifying-server-c2-indicators/) \- [Andrew Chiles](https://twitter.com/andrewchiles) _
[Hunting Red Team Empire C2
Infrastructure](http://www.chokepoint.net/2017/04/hunting-red-team-empire-c2.html) \- [chokepoint.net](http://www.chokepoint.net/) _[Hunting Red
Team Meterpreter C2 Infrastructure](http://www.chokepoint.net/2017/04/hunting-red-team-meterpreter-c2.html) \- [chokepoint.net](http://www.chokepoint.net/)
_ [Identifying Empire HTTP Listeners (Tenable
Blog)](https://www.tenable.com/blog/identifying-empire-http-listeners) \-[Jacob Baines](https://www.tenable.com/profile/jacob-baines)
## 八、保护基础设施
攻击基础架构也可能会受到与任何其他联网主机相同的攻击，并且由于正在使用的数据和连接到目标环境中，这些都被视为高度敏感的。
在2016年，远程代码执行漏洞被披露在最常见的攻击工具上：
  * [2016 Metasploit RCE Static Key Deserialization](https://github.com/justinsteven/advisories/blob/master/2016_metasploit_rce_static_key_deserialization.md)
  * [2017 Metasploit Meterpreter Dir Traversal Bugs](https://github.com/justinsteven/advisories/blob/master/2017_metasploit_meterpreter_dir_traversal_bugs.md)
  * [Empire Fails - Will Schroeder](http://www.harmj0y.net/blog/empire/empire-fails/)
  * [Cobalt Strike 3.5.1 Important Security Update - Raphael Mudge](http://blog.cobaltstrike.com/2016/10/03/cobalt-strike-3-5-1-important-security-update/)
**iptables**
应该用于过滤不需要的流量并限制所需基础架构模块之间的流量。 例如，如果`Cobalt
Strike`服务器仅将资产提供给`Apache`转向器，那么`iptables`规则应该只允许来自转向器源`IP`的 80 端口。
这对于任何运维管理都尤为重要，如`SSH`或`Cobalt Strike`的默认端口50050 还要考虑阻止非目标国家 IP。 作为替代，请考虑使用由
VPS 提供商提供的管理程序防火墙。 如：Digital Ocean提供可以保护一个或多个资产的 [Cloud
Firewalls](https://www.digitalocean.com/community/tutorials/an-introduction-to-digitalocean-cloud-firewalls)云防护。
**chattr**
可以在团队服务器上使用，以防止修改`cron`目录。 使用`chattr`你可以限制任何用户（包括root）在修改文件之前删除`chattr`属性。
**SSH**
应仅限于公钥认证，并配置为使用受限权限的用户进行初始登录。 为了增加安全性，请考虑将双因子验证添加到 SSH。
**更新升级**
定期更新系统升级漏洞补丁也是非常重要的。
当然，这份清单并不详尽，你可以做什么来保护团队服务器。 可参考下面的常见强化实践：
  * [Red Hat Enterprise Linux 6 Security Guide](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/pdf/Security_Guide/Red_Hat_Enterprise_Linux-6-Security_Guide-en-US.pdf)
  * [Debian Documentation on Hardening](https://wiki.debian.org/Hardening)
  * [Securing Debian Manual](https://www.debian.org/doc/manuals/securing-debian-howto/)
  * [20 Linux Server Hardening Security Tips - nixCraft](https://www.cyberciti.biz/tips/linux-security.html)
  * [SANS Linux Security Checklists](https://www.sans.org/score/checklists/linux)
  * [Docker Your Command & Control (C2)](https://blog.obscuritylabs.com/docker-command-controll-c2/) \- [Alex Rymdeko-Harvey (@killswitch_gui)](https://twitter.com/killswitch_gui)
### 特定的加固资源
网上有许多可用的资源来讨论基础设施的安全配置和设计。 并非每种设计考虑都适合每种攻击基础架构，但了解可用选项和其他测试人员正在做什么很有用。
以下是其中一些资源：
  * [Responsible Red Teams - Tim MalcomVetter (@malcomvetter)](https://medium.com/@malcomvetter/responsible-red-teams-1c6209fd43cc)
  * [Safe Red Team Infrastructure - Tim MalcomVetter (@malcomvetter)](https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac)
  * [Red Team Infrastructure - AWS Encrypted EBS - @_rastamouse](https://rastamouse.me/2018/02/red-team-infrastructure---aws-encrypted-ebs/)
## 九、自动部署
本文所讲的红队基础设施建设，真正建设时这需要耗费大量的时间来设计和实施。 而自动化可用于大大缩短部署时间，使你能够在更短的时间内部署更复杂的设置。
查看有关攻击基础架构自动化的这些资源:
  * [Automated Red Team Infrastructure Deployment with Terraform - Part 1](https://rastamouse.me/2017/08/automated-red-team-infrastructure-deployment-with-terraform---part-1/) \- [@_RastaMouse](https://twitter.com/_RastaMouse)
  * [Automated Red Team Infrastructure Deployment with Terraform - Part 2](https://rastamouse.me/2017/09/automated-red-team-infrastructure-deployment-with-terraform---part-2/) \- [@_RastaMouse](https://twitter.com/_RastaMouse)
  * [Mod_Rewrite Automatic Setup](https://blog.inspired-sec.com/archive/2017/04/17/Mod-Rewrite-Automatic-Setup.html) \- [Julian Catrambone (@n0pe_sled)](https://twitter.com/n0pe_sled)
  * [Automated Empire Infrastructure](https://bneg.io/2017/11/06/automated-empire-infrastructure/) \- [Jeremy Johnson (@beyondnegative)](https://twitter.com/beyondnegative)
  * [RTOps: Automating Redirector Deployment With Ansible](http://threat.tevora.com/automating-redirector-deployment-with-ansible/) \- [Kevin Dick](http://threat.tevora.com/author/e0x70i/)
  * [Automating Gophish Releases With Ansible and Docker](https://jordan-wright.com/blog/post/2018-02-04-automating-gophish-releases/) \- [Jordan Wright (@jw_sec)](https://twitter.com/jw_sec)
  * [Red Baron GitHub Repo](https://github.com/Coalfire-Research/Red-Baron) \- [Marcello (@byt3bl33d3r)](https://twitter.com/byt3bl33d3r)
  * [Automating Apache mod_rewrite and Cobalt Strike Malleable C2 for Intelligent Redirection](http://threatexpress.com/2018/02/automating-cobalt-strike-profiles-apache-mod_rewrite-htaccess-files-intelligent-c2-redirection/) \- [Joe Vest (@joevest)](https://twitter.com/joevest)
## 十、提示&建议
  * **记录一切** \- 运行复杂的红色团队基础设施意味着许多移动部件, 务必记录每项资产的功能以及其流量的发送位置。
  * **在不同服务提供商和地区之间分割资产** \- 基础设施资产应分布在多个服务提供商和地理区域。 蓝队成员可能会针对被确认为主动攻击的提供商提高监控门槛，甚至可能彻底阻止给定的服务提供商。 注意：如果跨边界发送加密或敏感数据，请记住国际隐私法。
  * **不要过度设计** \- 人们很容易对先进技术感到兴奋，并想把一切都应用到目标上。 如果你正在模拟特定的敌对威胁，只能假扮利用真正的威胁使用的技术或技能。 如果你的红队会长期攻击同一目标，在你的评估中应该考虑“简单”的通过更先进的谍报工作。 红队应该循序渐进的推动蓝队向前发展，而不是将所有火力开到最大来攻击蓝队，这可能会打垮蓝队并延缓蓝队学习与向前发展的进程。
  * **监控日志** \- 在整个参与过程中应监视所有日志：SMTP日志、Apache日志、socat转向器上的tcpdump、iptables日志（特定于流量转发或目标过滤）、weblogs、Cobalt Strike/Empire/MSF日志。 将日志转发到日志服务器，例如[rsyslog](https://bluescreenofjeff.com/2017-08-08-attack-infrastructure-log-aggregation-and-monitoring/)，以便于监控。 操作员终端数据保留可能会在操作过程中用于检查历史命令的使用情况。 @Killswitch_GUI 创建了一个名为 [lTerm](https://github.com/killswitch-GUI/lterm) 的易于使用的程序，它将所有 bash 终端命令记录到一个中心位置。 [Log all terminal output with lTerm](https://github.com/killswitch-GUI/lterm)
  * **设置高价值事件告警** \- 配置攻击基础架构以生成高价值事件的警报，例如新的 C2 会话或凭证捕获匹配。 实现警报的一种流行方式是通过聊天平台的API，比如 Slack，查看以下关于 Slack 警报的相关文章: [Slack Shell Bot - Russel Van Tuyl (@Ne0nd0g)](https://www.swordshield.com/2016/11/slackshellbot/), [Slack Notifications for Cobalt Strike - Andrew Chiles (@AndrewChiles)](http://threatexpress.com/2016/12/slack-notifications-for-cobalt-strike/), [Slack Bots for Trolls and Work - Jeff Dimmock (@bluscreenfojeff)](http://bluescreenofjeff.com/2017-04-11-slack-bots-for-trolls-and-work/)
  * **指纹事件响应** \- 如果可能的话，在评估开始前尝试被动或主动地指定 IR 操作。 例如，向目标发送平庸的网络钓鱼电子邮件（使用不相关的基础架构）并监视基础架构收到的流量。 IR 团队调查可以披露关于团队如何运作以及他们使用何种基础架构的大量信息。 如果这可以在评估之前确定，则可以对其进行过滤或直接重定向。
## 感谢列表
感谢所有以下人员(按字母顺序排列)，他们贡献了包括此文中的工具、提示或链接，还有人感谢任何编写本维基引用的工具或帖子的人！
  * [@andrewchiles - Andrew Chiles](https://twitter.com/andrewchiles)
  * [@armitagehacker - Raphael Mudge](https://twitter.com/armitagehacker)
  * [@beyondnegative - Jeremy Johnson](https://twitter.com/beyondnegative)
  * [@bspence7337](https://twitter.com/bspence7337)
  * [@domchell - Dominic Chell](https://twitter.com/domchell)
  * [@jivoi - EK](https://twitter.com/jivoi)
  * [@joevest - Joe Vest](https://twitter.com/joevest)
  * [@killswitch_gui - Alex Rymdeko-Harvey](https://twitter.com/killswitch_gui)
  * [@ne0nd0g - Russel Van Tuyl](https://twitter.com/ne0nd0g)
  * [@n0pe_sled - Julian Catrambone](https://twitter.com/n0pe_sled)
  * [@_RastaMouse](https://twitter.com/_RastaMouse)
  * [@tifkin_ - Lee Christensen](https://twitter.com/tifkin_)
  * [@Und3rf10w - Jonathan Echavarria](https://twitter.com/und3rf10w)
  * [@vysecurity - Vincent Yiu](https://twitter.com/vysecurity)
  * [@xorrior - Chris Ross](https://twitter.com/xorrior)
* * *