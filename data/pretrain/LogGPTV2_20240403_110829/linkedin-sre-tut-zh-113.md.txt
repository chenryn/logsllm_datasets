# 介绍
> 原文：
## 先决条件
1.  [软件开发和维护](https://en.wikibooks.org/wiki/Introduction_to_Software_Engineering/Implementation/Documentation)
2.  [去](https://linkedin.github.io/school-of-sre/level101/git/git-basics/)
3.  [Docker 工人](https://linkedin.github.io/school-of-sre/level102/containerization_and_orchestration/containerization_with_docker/)
## 从本课程中可以期待什么？
在本课程中，您将学习 CI/CD 的基础知识，以及它如何帮助推动组织中的 SRE 规则。它还讨论了 CI/CD 实践中的各种 DevOps 工具，以及一个关于基于 [Jenkins](https://www.jenkins.io/) 的管道的动手实验会议。最后，它将通过解释在不断发展的 SRE 哲学中的作用来结束。
## 本课程不包括哪些内容？
本课程不全面涵盖 DevOps 元素，如基础架构代码、持续监控应用和基础架构。
## 目录
*   [什么是 CI/CD？](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/introduction_to_cicd)
*   [CI/CD 和 DevOps 简史](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/cicd_brief_history)
*   [持续集成](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/continuous_integration_build_pipeline)
*   [连续交付和部署](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/continuous_delivery_release_pipeline)
*   [基于 Jenkins 的 CI/CD 流水线-实践](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/jenkins_cicd_pipeline_hands_on_lab)
*   [结论](https://linkedin.github.io/school-of-sre/level102/continuous_integration_and_continuous_delivery/conclusion)