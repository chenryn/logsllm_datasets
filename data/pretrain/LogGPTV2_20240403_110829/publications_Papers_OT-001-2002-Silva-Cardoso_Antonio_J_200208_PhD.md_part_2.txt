functionalities that manage and streamline business processes. Yet, organizations
operating in e-commerce and in global economies that include competitive and constantly
changing markets have a new set of requirements that have not been answered by current
workflow technologies. One important missing requirement is the management of quality
of service. Organizations operating in modern markets, such as e-commerce, require
quality of service management. Products and services with well-defined specifications
must be made available to customers. An appropriate control of quality leads to the
creation of quality products and services; these, in turn, fulfill customer expectations and
achieve customer satisfaction.
While QoS has been a major concern in the areas of networking (Cruz 1995;
Georgiadis, Guerin et al. 1996), real-time applications (Clark, Shenker et al. 1992) and
middleware (Zinky, Bakken et al. 1997; Frolund and Koistinen 1998; Hiltunen,
Schlichting et al. 2000), few research groups have concentrated their efforts on enhancing
workflow systems to support workflow QoS management.
For organizations, being able to characterize workflows based on QoS has four
distinct advantages. First, it allows organizations to translate their vision into their
business processes more efficiently, since workflow can be designed according to QoS
specifications. Second, it allows for the selection and execution of workflows based on
their QoS, to better fulfill customer expectations. As workflow systems carry out more
complex and mission-critical applications, QoS analysis serves to ensure that each
application meets user requirements. For e-commerce processes, it is important to know
the QoS an application will exhibit before making the service available to customers.
Third, it makes possible the monitoring of workflows based on QoS. Workflows must be
6
rigorously and constantly monitored throughout their life cycles to assure compliance
both with initial QoS requirements and targeted objectives. QoS monitoring allows
adaptation strategies to be triggered when undesired metrics are identified or when
threshold values are reached. Fourth, it allows for the evaluation of alternative strategies
when adaptation becomes necessary. The unpredictable nature of the surrounding
environment has an important impact on the strategies, methodologies, and structure of
business processes. Thus, in order to complete a workflow according to initial QoS
requirements, it is necessary to expect to adapt, replan, and reschedule a workflow in
response to unexpected progress, delays, or technical conditions. When adaptation is
necessary, a set of potential alternatives is generated, with the objective of changing a
workflow as its QoS continues to meet initial requirements. For each alternative, prior to
actually carrying out the adaptation in a running workflow, it is necessary to estimate its
impact on the workflow QoS. For example, when a workflow managing e-commerce
services becomes unavailable due to the malfunction of its components, it is esesntial to
evaluate adaptive strategies that can be applied to correct the process.
It is furthermore essential that the services rendered follow customer specifications,
in order to meet their expectations and ensure satisfaction. Customer expectations and
satisfaction can be translated into the quality of service rendered. Organizations have
realized that quality of service management is an important factor in their operations.
Quality models, such as ISO9000 (ISO9000 2002) have been created to help
organizations and their individual performers meet customer needs.
Workflow QoS is composed of different dimensions that are used to characterize
workflow schema and instances. The effort of developing a comprehensive QoS model
specification and its computation, covering various quality dimensions, is innovative.
Most of the research carried out in order to extend workflow system capabilities to
include project management features has mainly been done for the time dimension( Kao
and GarciaMolina 1993; Bussler 1998; Eder, Panagos et al. 1999; Marjanovic and
7
Orlowska 1999; Dadam, Reichert et al. 2000; Sadiq, Marjanovic et al. 2000; Son, Kim et
al. 2001); this is only one of the dimensions under the workflow QoS umbrella. Even
though some WfMSs currently offer time management support, the technology available
is still rudimentary (Eder, Panagos et al. 1999). Research on workflow reliability issues
has also been conducted, but the work has mostly concerned system implementation
(Kamath, Alonso et al. 1996; Tang and Veijalainen 1999; Wheater and Shrivastava
2000). The Crossflow project (Klingemann, Wäsch et al. 1999; Damen, Derks et al.
2000; Grefen, Aberer et al. 2000) is the one that most closely resembles our work. Not
only is time considered, but also the cost associated with workflow executions is taken
into account. In Crossflow, the information about past workflow execution is collected in
a log. From this information, a continuous-time Markov chain (CTMC) is derived. Since
Markov chains do not directly support the concept of parallel executions introduced by
the and-split/and-join structure, the power set of the parallel activities of the tasks inside
an and-split/and-join structure needs to be constructed. While for small workflows the
computation of a power set is affordable, this may not be the case for large workflows
with a parallel nature, for which the power set can reach millions of states. Our approach
uses a different concept to compute quality of service dimensions, one which does not
suffer from exponential complexity.
Our goal is to develop both a model for the specification of workflow QoS and
methods for computing, estimating, and analyzing QoS. We investigate the relevant
quality of service dimensions which are necessary to correctly characterize workflows.
We not only target the time dimension, but also investigate other dimensions required to
develop a real and usable workflow QoS model. Once the QoS and associated dimensions
are selected, it is necessary to develop methods and algorithms to compute workflow
QoS. In workflows, quality metrics are associated with tasks, and tasks, in turn, compose
workflows. The computation of workflow QoS is done based on the QoS of the tasks that
compose a workflow.
8
1.5 SEMANTIC WORKFLOW COMPOSITION
E-services have been heralded as the next wave of Internet-based business applications
that will dramatically change the use of the Internet (Fabio Casati, Ming-Chien Shan et
al. 2001). With the development and maturation of infrastructures and solutions that
support e-services, we expect organizations to incorporate Web services into their
business processes. Workflow management systems are capable of integrating business
objects for setting up e-services in an amazingly short time and with impressively little
cost (Shegalov, Gillmann et al. 2001). Workflows play a major role in architectures such
as dynamic trading processes (Sheth, Aalst et al. 1999), dynamic value chains (Lee and
Whang 2001), virtual organizations, and virtual web organizations (Ulrich 2001) .
The emergent need of workflows to model e-service applications makes it
indispensable that workflow tasks be associated with Web services. As a result,
workflows are currently being enhanced to also include and manage Web services
(Shegalov, Gillmann et al. 2001).
The modeling of e-services using workflows raises two challenges for workflow
systems. First, Web services must be located that might contain (a) the desired
functionality and (b) operational requirements needed to carry out the realization of a
given task. It is necessary to efficiently discover Web service sfrom the potentially
thousands of services available on the Internet. Second, once the desired Web services
have been found, mechanisms are needed to (c) facilitate the resolution of structural and
semantic differences. This is because the heterogeneous Web services found in the first
step need to interoperate with other components present in a workflow host.
The design of traditional workflow applications involves the selection of appropriate
tasks to compose a workflow and the establishment of connections among tasks (control
and data flow). Tasks are selected from a workflow repository (I.B.Arpinar, Miller et al.
2001; Song 2001) which typically contains only a few hundred of tasks. Since the
9
number of tasks to choose from is modest, the search process is humanly manageable; it
does not require sophisticated discovery mechanisms. When a workflow is employed to
model e-services, the number of Web services available on the Internet for the
composition process can be extremely large. Thus, we are no longer searching for a task
from a set of a few hundred, but we are searching for a service from a set that can
potentially contain millions of Web services. One cannot expect a designer to manually
browse through all the Web services available .
The interoperability problems that the composition of workflows involving Web
services face are already well known within the distributed database systems community
(Kashyap and Sheth 1996). When Web services are put together, their interface (inputs
and outputs) need to interoperate; therefore, structural and semantic heterogeneity need to
be resolved. Structural heterogeneity exists because Web services use different data
structures and class hierarchies to define their interfaces. Semantic heterogeneity
considers the intended meaning of the terms employed to label input and output variables.
The data that is interchanged among Web services has to be understood. Semantic
conflicts occur when a Web service output connected to another service input does not
use the same interpretation of the information being transferred. To achieve
interoperability it is necessary to address the problem of semantic integration – the
identification of semantically similar objects that belong to different systems and the
resolution of their schematic differences (Kashyap and Sheth 1996). The general
approach to semantic integration has been to map the local terms onto a shared ontology.
Even though a shared ontology ensures total integration, constructing such an ontology is
costly, if not impractical, because autonomous systems are required to commit to a shared
ontology and compromises are difficult to maintain when new concepts are added
(Rodríguez and Egenhofer 2002). Therefore, this approach cannot be employed to assist
and facilitate the resolution of semantic and schematic differences when Web services are
involved.
10
The main motivation for this work is the need to enhance workflow systems with
better mechanisms for Web service discovery and integration. Our approach relies on the
use of ontologies that describe Web service interfaces. Ontology-based approaches have
proved to be an important solution for information integration in order to achieve
interoperability (Uschold and Gruninger 1996). Our main objective is to assess the
similarity of terms and concepts that are employed to specify Web service interfaces. Our
solution relies on Tversky’s feature-based similarity model (Tversky 1977), which is
arguably the most powerful similarity model to date (Richardson and Smeaton 1995).
The model is based on the idea that common features tend to increase the perceived
similarity of two concepts, and that feature differences tend to diminish perceived
similarity. Tversky’s model states that feature commonalities tend to increase perceived
similarity more than feature differences can diminish it .
1.6 MAJOR RESULTS
This dissertation represents one of the earliest comprehensive studies on quality of
service and semantic workflow composition. We propose a detailed QoS framework and
its implementation in a workflow prototype system; further, we show the experimental
results obtained from executing a real-world application. For the workflow composition,
we describe a methodology and an algorithm based on semantics to assist users during
the workflow design phase. This includes the development of mechanisms to discover
and assist workflow designers in resolving interoperability issues among Web services .
Our efforts on workflow QoS management have resulted in the following advances :
a) Development of a comprehensive and predictive QoS model for workflows.
b) Development of a QoS mathematical model.
c) Development of an algorithm (the SWR algorithm) to automatically compute and
estimate workflow QoS.
d) Implementation of the above elements in the METEOR workflow system .
11
In the area of process composition, our research has resulted in the following advances:
a) Development of a methodology for semantic workflow composition .
b) Development of an algorithm to compute the syntactic, operational, and semantic
similarity of Web services and to assist designers in resolving interoperability
issues among Web services.
c) Development of a prototype incorporating the above concepts.
1.7 INTENDED AUDIENCE
The intended audience of this dissertation is any person interested in workflow systems in
general and in quality of service and the semantic composition of workflows in particular.
This dissertation is of particular interest to workflow systems architects and workflow
designers, as well as to researchers from the fields of business process re-engineering, e-
service applications, and the interoperability of Web services .
1.8 DISSERTATION ORGANIZATION
This dissertation is structured as follows. The first chapter presents our QoS model for
workflows. To better explain the emergent need for QoS management, we describe a
real-word scenario (from the genetics area) from which we enumerate the new challenges
for workflow systems and portray their current limitations. The chapter describes a
mathematical model which computes the quality of service of workflows basde on atomic
elements (tasks). We present an algorithm and describe how simulation techniques can be
used to automatically compute and estimate workflow QoS. The chapter ends with an
example, based on the initial scenario, which illustrates the computationo f workflow
QoS.
The second chapter describes the implementation of the concepts introduced in the
first chapter to the METEOR workflow management system. The support of QoS
management requires the modification and extension of most workflow system
12
components. This includes the enactment system, the workflow builder, the monitor, the
code generator, the repository, the workflow model, and the task model.
Finally, the last chapter discusses the composition of workflows involving Web
services. We present an algorithm that workflow systems and discovery mechanisms can
use to find Web services with desired interfaces and to assist designers in resolving
heterogeneity issues among Web services. The algorithm proposed uses syntactic,
operational, and semantic information to establish the degree of similarity between a Web
service template and Web service objects. A prototype is also described to illustrate how
the discovery mechanism and interoperability are achieved .
13
1.9 REFERENCES
Alonso, G. (1996). Advanced Transaction Models in Workflow Contexts. Proceedings of
the International Conference on Data Engineering. pp. 574-581.
Anyanwu, K., A. P. Sheth, J. A. Miller, K. J. Kochut and K. Bhukhanwala (1999).
"Healthcare Enterprise Process Development and Integration.," LSDIS Lab,
Department of Computer Science, University of Georgia, Athens, GA, Technical
Report.
Bussler, C. (1998). Workflow Instance Scheduling with Project Management Tools. 9th
Workshop on Database and Expert Systems Applications DEXA'98, Vienna,
Austria, IEEE Computer Society Press. pp. 753-758.
CAPA (1997). "Course Approval Process Automation (CAPA)," LSDIS Lab, Department
of Computer Science, University of Georgia, Athens, GA. July 1, 1996 - June 30,
1997.
Cardoso, J., A. Sheth and J. Miller (2002). Workflow Quality of Service. International
Conference on Enterprise Integration and Modeling Technology and International
Enterprise Modeling Conference (ICEIMT/IEMC’02), Valencia, Spain, Kluwer
Publishers.
Chen, Q., U. Dayal, M. Hsu and M. L. Griss (2000). Dynamic-Agents, Workflow and
XML for E-Commerce Automation. EC-Web. pp. 314-323.
Clark, D., S. Shenker and L. Zhang (1992). Supporting Real-Time Applications in an
Integrated Services Packet Network: Architecture and Mechanism. Proceedings of
ACM SIGCOMM. pp. 14-26.
14
Cruz, R. L. (1995). "Quality of service guarantees in virtual circuit switched networks."
IEEE J. Select. Areas Commun. 13(6): 1048-1056.
Dadam, P., M. Reichert and K. Kuhn (2000). Clinical Workflows: the Killer Application
for Process Oriented Information Systems. 4th International Conference on
Business Information Systems (BIS 2000), Poznan, Poland. pp. 36-59.
Damen, Z., W. Derks, M. Duitshof and H. Ensing (2000). Business-to-business E-
Commerce in a Logistics Domain. The CAiSE*00 Workshop on Infrastructures for
Dynamic Business-to-Business Service Outsourcing, Stockholm, Sweden.
Eder, J., E. Panagos, H. Pozewaunig and M. Rabinovich (1999). Time Management in
Workflow Systems. BIS'99 3rd International Conference on Business Information
Systems, Poznan, Poland, Springer Verlag. pp. 265-280.
Edward, A. S. and J. L. Zhao (2001). "Workflow Automation: Overview and Research
Issues." Information Systems Frontiers 3(3): 281-196.
Ellis, C. A. (1979). Information Control Nets: A Mathematical Model of Office
Information Flow. Conference on Simulation, Measurement and Modelling of
Computer Systems, ACM, New York. pp. 225-239.
Ellis, C. A. and M. Bernal (1982). "OfficeTalk-D: An experimental office information
system." SIGOA Newsletter 3(1): 131-140.
Ellis, C. A. and G. J. Nutt (1996). Workflow: The Process Spectrum. NSF Workshop on
Workflow and Process Automation in Information Systems, Athens, Georgia. pp.
140-145.
Fensel, D. and C. Bussler (2002). The Web Service Modeling Framework. Vrije
Universiteit Amsterdam (VU) and Oracle Corporation,
http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf.
15
Frlund, S. and J. Koistinen (1998). "Quality-of-Service Specification in Distributed
Object Systems." Distributed Systems Engineering Journal 5(4).
Georgiadis, L., R. Guerin, V. Peris and K. Sivarajan (1996). "Efficient Network QoS
Provisioning Based on Per Node Traffic Shaping." IEEE ACM Transactions on
Networking 4(4): 482-501.
German Shegalov, Michael Gillmann and G. Weikum (2001). "XML-enabled workflow
management for e-services across heterogeneous platforms." The VLDB Joumal 10:
91-103.
Grefen, P., K. Aberer, Y. Hoffner and H. Ludwig (2000). "CrossFlow: Cross-
Organizational Workflow Management in Dynamic Virtual Enterprises."
International Journal of Computer Systems Science & Engineering 15(5): 227-290.
Hall, D., J. A. Miller, J. Arnold, K. J. Kochut, A. P. Sheth and M. J. Weise (2000).
"Using Workflow to Build an Information Management System for a
Geographically Distributed Genome Sequence Initiative," LSDIS Lab, Department
of Computer Science, University of Georgia, Athens, GA, Technical Report .
Hammer, M. (1984). The OA Mirage. Datamation. 30: 36-46.
Hiltunen, M. A., R. D. Schlichting, C. A. Ugarte and G. T. Wong. (2000). Survivability
through Customization and Adaptability: The Cactus Approach. DARPA
Information Survivability Conference and Exposition (DISCEX 2000). pp. 294-307.
ISO9000 (2002). ISO9000. International Organization for Standardization,
http://www.iso.ch/iso/en/iso9000-14000/iso9000/iso9000index.html.
Kamath, M., G. Alonso, R. Guenthor and C. Mohan (1996). Providing High Availability
in Very Large Workflow Management Systems. Proceedings of the 5th
16
International Conference on Extending Database Technology, Avignon. pp. 427-
442.
Kang, M. H., J. N. Froscher, A. P. Sheth, K. J. Kochut and J. A. Miller (1999). A
Multilevel Secure Workflow Management System. Proceedings of the 11th
Conference on Advanced Information Systems Engineering, Heidelberg, Germany,