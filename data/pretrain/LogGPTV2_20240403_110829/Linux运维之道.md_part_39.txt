mysql> INSERT INTO employees (employee_id,first_name,last_name,
演示案例：往employees数据表中插入数据，数据的具体值跟在VALUES后面的括号内，
[WHERE where_condition]
SETcol
UPDATE[LOW PRIORITY]
语法格式：
命令描述：
2.UPDATE
mysql> SELECT * FROM hr.employees;
->(001,"eric","wi11iam","PI:EMAIL",01065103488,"tech",20120112);
mysql> INsERT INTO employees (employee_id,first_name,last_name)
语法格式：
命令描述：该语句的作用是向数据表中插入一行新的数据。
1.INSERT
V
mysql> INSERT INTO employees ()
>
V
>
(col_name,
[INTO]tbl_name
INSERT [LOW_PRIORITY
/Sql> INSERT INTO employees
ON DUPLICATE KEY UPDATE
VALUESIVALUE}
VALUES
（001,"eric",
VALUES
(001,"eric","william");
VALUES
(001,"eric","wi11iam"，"PI:EMAIL",01065103488,"tech",20110112);
VALUES
col_name=expr
数据库操作语言
_name={exprel|DEFAULT} [,col_name2={expr2|DEFAULT}] .
该语句用来更新数据表中现有的数据值（仅修改满足where条件的数据记录）。
[,col_name=expr] .]
）1
"william"),（002,
(expre
丨DELAYED | HIGH_PRIORITY] [IGNORE]
[IGNORE]
DEFAULT}，…），（).…·
(employee_id,first_name,last_name)
table_reference
"jack","smith")，(003,"lucy","black");
第4章
搭建网络服务
283
---
## Page 300
TERMINATEDBY设置列分隔符，通过LINES STARTINGBY设置行分隔符。
修改last_name的值为hope。
Linux 运维之道
284
演示案例：提前创建数据文件/tmp/txt与 txt2,通过LOAD语句加载数据至employees 数据表。
分隔符：文件默认使用Tab键为列分隔符，行分隔符为换行符。可以使用FIELDS
语法格式：
命令描述：
4.
004,berry,john,PI:EMAIL,01065103488,admin,20110302
[root@cenos6]#cat/tmp/txt2
mySql>LOAD DATA INFILE'/tmp/txt'
003ellis
语法格式：
命令描述：
3.LOAD DATA INFILE
mysql> UPDATE employees SET hire_date=hire_date + 1;
[root@cenos6~]#cat/tmp/txt
DELETE
[SET col_name = expr,...]
[LINES
[{FIELDSICOLUMNS}
[CHARACTER SET charset_name]
INTO TABLE tbl_name
[REPLACEI
(col_name_or_user_var,...)]
[IGNORE number{LINES|ROWS}]
[TERMINATED BY'string']
[STARTING BY 'string']
：该语句用来把满足条件的数据记录删除并返回删除的记录数量。
[ESCAPED BY'char']
]
[TERMINATED BY'string']
该语句用来快速从文本文件中读取数据到数据表中。
jim PI:EMAIL
IGNORE]
INTO TABLE hr.employees;
01065103488sale
20130102
---
## Page 301
4.11.6
查询 last_name为 willian的所有记录，并显示出相应的 first_name记录：
如果有多条相同的e_mail记录，DISTINCT可以去除重复的记录：
mysql> SELECT coUNT(employee_id) FROM employees;
统计有多少条employee_id记录，显示最终统计个数：
mySql> SELECT AVG(score) FROM test;
查询test 数据表中 score列数据的所有平均值：
mysql> SELECT employee_id,first _name,department FROM employees;
查询employees数据表中的employee_id、first_name、department记录：
mySql> SELECT*FROM employees;
查询employees数据表中所有的数据记录：
演示案例如下。
SELECT
语法格式：
命令描述：该语句用来查询数据表中的数据记录。
数据库查询用SELECT语句实现，
->WHEREa1.id=a2.id;
mySql> DELETE a1,a2 FROM t1 AS a1 INNER JOIN t2 AS a2
mysql> DELETE FROM employees WHERE employee_id=5;
mysql> USE hr;
演示案例：
[LIMIT]
[ORDER BY (col_name | expr| position} [ASC | DESC]]
[WHERE where_condition]
[FROM table_references
select_expr [, select_expr...]
[ALLIDISTINCTIDISTINCTROW
数据库查询语言
该语句的描述和用法如下。
第4章搭建网络服务
285
---
## Page 302
表4-21
示账户的创建与删除。
访问信息需要包含主机信息，如默认root是不允许通过远程主机登录的。下面通过若干实例演
mysqladmin或使用 SQL 语句添加、删除、修改账户与密码信息。需要注意的是，MySQL 账号
限列表见表4-21。所有的账户及密码被保存在mysql数据库下的user数据表中，我们可以通过
进行概括性描述。
Linux运维之道
EVENT
LOCKTABLES
GRANTOPTION
DROP
CREATE
4.11.7MySQL与安全
286
MySQL数据库系统基于访问控制列表（ACLs）进行连接、查询以及其他操作，MySQL权
说到MySQL 数据库的安全性，你可能会联想到大量的相关话题，下面将对几个关键问题
mysql> SELECT *FROM employees LIMIT 2;
限制仅显示数据记录中的前两行记录：
mysql> SELECT * FROM employees ORDER BY hire_date DESC;
查询数据表中的所有记录，并按照hire_date列排序，DESC为降序，AES 为升序：
安全的一般性因素。包括使用强密码，禁止给用户分配不必要的权限，防止SQL注入
的备份。完善的备份机制是数据安全的前提条件。
数据安全。确保已经对MySQL数据库文件、配置文件、日志文件进行了充分且可靠
MySQL网络安全。限制仅允许有效的主机可以连接服务器，并且需要账户权限。
访问控制安全。包括在数据库中定义账户及相关权限设置。
存储在安全的地方，未经授权的人均无法读取或写入数据。
安装步骤的安全性。确保安装MySQL时指定的数据文件、日志文件、程序文件均被
攻击。
权限
执行EVENT的权限
允许用户使用LOCKTABLES语句锁定数据表
允许为其他账户添加和删除权限
删除数据库、数据表、视图的权限
创建数据库、数据表、索引的权限
描述
---
## Page 303
hr数据库中的所有数据表拥有所有权限：
ALL
SUPER
SHUTDOWN
SHOWDATABASES
REPLICATIONSLAVE
REPLICATIONCLIENT
RELOAD
PROCESS
CREATEUSER
CREATETABLESPACE
FILE
EXECUTE
CREATEROUTINE
ALTER ROUTINE
SHOWVIEW
CREATEVIEW
TRIGGER
CREATETEMPORARYTABLES
UPDATE
SELECT
INSERT
INDEX
DELETE
ALTER
创建tomcat账户，账户仅可以从主机192.168.0.88连接到MySQL服务器，账号密码为pass，
创建tomcat 账户，账户仅可以通过本机连接MySQL服务器，账号密码为pass，该账户对
通过GRANT命令创建账户并赋予权限
权限
代表所有可用的权限
允许执行关闭服务器进程之类的管理操作
允许用户关闭MySQL服务
允许使用SHOWDATABASES查看数据库信息
允许从服务器连接当前服务器
允许使用SHOWMASTERSTATUS以及SHOWSLAVESTATUS
允许用户使用FLUSH语句
显示服务器运行进程信息的权限
创建修改MySQL账户的权限
创建表空间的权限
赋予读写服务器主机文件的权限
执行存储过程或函数的权限
创建存储过程的权限
修改或删除存储过程的权限
执行SHOWCREATEVIEW的权限
创建视图的权限
执行触发器的权限
创建临时表的权限
更新数据记录的权限
对数据库进行数据查询的权限
向数据表中插入数据的权限
创建删除索引的权限
删除数据记录的权限
修改数据的权限
描
述
第4章搭建网络服务
287
续表
---
## Page 304
以忽略：
对密码进行加密存储，最后使用FLUSHPRIVILEGES更新该权限数据表。
账户可以从任何主机连接服务器：
连接MySQL服务器：
该账户对hr数据库中所有的数据表仅拥有查询权限：
Linux运维之道
288
修改root登录服务器的密码为centos，-p 的作用是提示输入旧的密码，若没有旧密码，可
更新mysql数据库下的user数据表，修改root密码为newpwd，PASSWORDO的作用用来
mysql> GRANT ALL ON hr.* to'jacob'@'%'
创建jacob 账户，赋予 jacob 对 hr 数据库中所有数据表的所有权限，账户密码为 pass，该
创建admin账户，赋予该账户对所有数据库的管理权限，该账号不需要密码，即可从本机
mySql> GRANT SELECT ON hr.*to'tomcat'@'192.168.0.88'IDENTIFIED BY'PaSs';
设置root从172.16.0.22主机连接MySQL服务器的账户密码：
mySql> SET PASSWORD FOR'root'@'localhost'
设置root从本地连接服务器的密码：
[root@centos6~]#mysql -uroot-p
4.通过SETPASSWORD命令设置密码
3.通过mysqladmin设置账户密码
mySql> FLUSH PRIVILEGES;
->WHERE User
mysql> UPDATE mysql.user SET Password = PASSWORD(newpwd’)
N
mysql>SHOW GRANTS FOR PI:EMAIL
通过SHOWGRANTS语句可以查看账户权限信息：
直接修改数据库权限数据表mysql.user
`root';
IDENTIFIED BY 'pass';
=PASSWORD（'newpwd'）;
---
## Page 305
日志记录数据的改变，从而实现增量差异备份。
由于是以逻辑格式存储的，所以这种备份与系统、硬件无关。
的资料。逻辑备份的优势在于不管是服务层面、数据库层面还是数据表层面的备份都可以实现，
式，所以相对于物理备份而言比较慢。逻辑备份不会备份日志、配置文件等不属于数据库内容
MySQL服务器获得数据结构及内容信息，因为需要查询数据库信息并将这些信息转换为逻辑格
及添加数据内容的SQL语句，这种备份方式适用于少量数据的备份与还原。逻辑备份需要查询
也可以使用文件系统级别的 cp、scp、tar、rsync等命令。
用mysqlbackup对InnoDB数据进行备份，使用mysqlhotcopy对MyISAM数据进行备份。另外，
处于关闭状态或者对数据库进行锁操作，防止在备份的过程中改变发送数据。物理备份可以使
数据库的部分或全部目录，物理备份还可以备份相关的配置文件。但采用物理备份需要MySQL
的大规模数据进行备份，并且要求实现快速还原的生产环境。典型的物理备份就是复制MySQL
及增量备份，你可以选择最适合自己使用的方式备份数据。
速解决以上所有的问题。MySQL提供了多种备份方案，包括：逻辑备份、物理备份、全备份以
核崩溃、计算机硬件损坏或者数据被误删等事件时，使用一种有效的数据备份方案，就可以快
全备份将备份某一时刻所有的数据，增量备份仅备份某一段时间内发生过改变的数据。通
物理备份通过直接复制包含有数据库内容的目录与文件实现，这种备份方式适用于对重要
4.11.8
逻辑备份通过保存代表数据库结构及数据内容的描述信息实现，如，保存创建数据结构以
由于物理备份是系统层面的操作，具体工具可以参考本书前面相关章节的数据复制及数据
备份对于数据库而言是至关重要的。当数据文件发生损坏、MySQL服务出现错误、系统内
mysql> DROP USER jerry@'172.16.0.253';
6.DROP语句删除账户
mySql> REVOKE SELECT ON *,* FROM jacob@'%';
撤销jacob对所有数据库的查询权限。
mysql> REVOKE ALL ON hr.* FROM tomcat@'%';
撤销tomcat对hr数据库的所有权限。
5.使用REVOKE语句撤销账户权限
MySQL数据库备份与还原
第4章搭建网络服务
289
---
## Page 306
运行两个不同的网站平台，论坛的域名为bbs.example.com，博客的域名为blog.example.com。
系统。图4-20 为网站架构案例结构图，通过基于域名的虚拟主机实现在一台 Apache 服务器上
的实际应用，两个开源项目均采用PHP代码编写，分写是Discuz!论坛系统以及WordPress博客
的网站而言，Apache仍然是目前的首选产品。本节将通过实际部署两个开源网站项目讲解LAMP
件的响应能力要远远高于Apache服务器，所以近几年也兴起了LNMP的架构。但对于负载PHP
时，我们也需要看到Nginx在国内的应用越来越成熟，相对于Apache而言，Nginx对于静态文
框架具有通用、跨平台、高性能、高负载、稳定等特性，是目前企业部署网站的首选平台。同
是多个开源项目的首字母缩写，LAMP网站架构主要应用于动态网站的Web架构，这种Web
4.12动态网站架构案例
如果该数据库不存在，必须先创建该数据库。
DATABASE或USE语句。不使用--databases选项备份的数据文件，在后期进行数据还原操作时，
以通过重定向将输出保存至文件：
同步工具的使用，下面将通过一些案例介绍如何使用MySQL提供的工具命令进行逻辑备份。
Linux运维之道
290
LAMP（Linux+Apache+MySQL+PHP/Python/Perl）架构是一套强大的网站解决方案，LAMP
使用mysqldump 备份所有的数据库，默认该工具会将 SQL 语句信息导出至标准输出，可
使用mysql命令读取备份文件，实现数据还原功能：
两者之间的差别在于不使用--databases 选项，则备份输出信息中不会包含CREATE
[root@centos6~]#mysqlbak.sql
--databases db4>bak.sql
---
## Page 307
即可)。
包（版本要求在4.3.0以上）、MySQL数据库（版本要求在3.23及以上）。这里将采用LAMP
开放源代码，所以Discuz!也是PHP 编程人员学习PHP 代码的模板。
熟度、稳定性及负载能力都是值得信赖的。另外，由于Discuz!采用的是PHP语言开发，并且
务，Discuz!从2001年发布至今已经历了12年的发展历史，大量的应用案例证明了该系统的成
部署Discuz!论坛所需软件环境包括：WwW服务器（如，Apache、Nginx等）、PHP 软件
4.12.1论坛系统应用案例
Discuz!是目前国内应用最广泛的社区论坛建站平台，使用Discuz!可以实现一站式建站服
将所有的源码包软件解压到特定的目录下：
2.部署AMP环境
[root@centos6 ~]# tar -xzf apr-uti1-1.5.2.tar.gz-C/usr/src/
1．下载软件包
root@centos6
root@centos6
root@centos6
[root@centos6
[root@centos6
~]#wget http://cdn.mysql.com/Downloads/MysQL-5.6/mysql-5.6.11.tar.gz
5~]#wget http://mirror.bit.ecdu.cn/apache/httpd/httpd-2.4.4.tar.gz
~]#wgethttp://cn2.php.net/get/php-5.4.14.tar.gz/from/this/mirror
~]#wgethttp://mirror.bjtu.edu.cn/apache/apr/apr-1.4.6.tar.gz
Internet
图4-20
服务器架构图
IP:
第4章搭建网络服务
291
---
## Page 308
Linux运维之道
292
Discuz 是基于PHP的动态网站，很多数据都需要被保存在数据库中。因此，我们需要在
[root@centos6 mysql-5.6.11]#1dconfig