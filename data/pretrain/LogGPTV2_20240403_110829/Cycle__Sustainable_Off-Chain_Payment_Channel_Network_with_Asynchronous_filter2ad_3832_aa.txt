title:Cycle: Sustainable Off-Chain Payment Channel Network with Asynchronous
Rebalancing
author:Zicong Hong and
Song Guo and
Rui Zhang and
Peng Li and
Yufeng Zhan and
Wuhui Chen
2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)
7
1
0
0
0
.
2
2
0
2
.
5
0
4
3
5
N
S
D
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
1
-
3
9
6
1
-
4
5
6
6
-
1
-
8
7
9
|
)
N
S
D
(
s
k
r
o
w
t
e
N
d
n
a
s
m
e
t
s
y
S
e
l
b
a
d
n
e
p
e
D
n
o
e
c
n
e
r
e
f
n
o
C
l
a
n
o
i
t
a
n
r
e
t
n
I
P
I
F
I
/
E
E
E
I
l
a
u
n
n
A
d
n
2
5
2
2
0
2
CYCLE: Sustainable Off-Chain Payment Channel
Network with Asynchronous Rebalancing
Zicong Hong1, Song Guo*1,2, Rui Zhang1, Peng Li3, Yufen Zhan4, and Wuhui Chen5
1Department of Computing, The Hong Kong Polytechnic University, Hong Kong, China
2The Hong Kong Polytechnic University Shenzhen Research Institute, Shenzhen, China
3School of Computer Science and Engineering, The University of Aizu, Aizuwakamatsu, Japan
4School of Automation, Beijing Institute of Technology, Beijing, China
5School of Data and Computer Science, Sun Yat-sen University, Guangzhou, China
PI:EMAIL, PI:EMAIL, PI:EMAIL
PI:EMAIL, PI:EMAIL, PI:EMAIL
*Corresponding author: Song Guo
Abstract—Payment channel network (PCN) is a promising
off-chain technology for blockchain scalability, but it suffers
from poor sustainability in practice. In other words, due to the
imbalanced transfer in channels, the balance in one direction
of channels gradually becomes exhausted until
the PCN is
rebalanced via a consensus-based rebalancing protocol, during
which the involved channels must be suspended. This paper
presents CYCLE, the ﬁrst off-chain protocol for a sustainable
PCN. It not only keeps the PCN at a balanced level consistently
but also avoids the channel freeze incurred by the rebalancing
protocol, leading to minimum failed payments and sustained PCN
service, respectively. CYCLE achieves these beneﬁts based on a
novel idea of asynchronous rebalancing. During the normal off-
chain running, the participants share the information about their
payments and asynchronously rebalance the PCN following the
principle that payments along circular channels can cancel each
other out. To guarantee security, the protocol resolves the disputes
resulting from network latency or malicious participants by a
message mechanism for synchronization and a smart contract for
arbitration. Moreover, to address the privacy concern during the
information sharing, a truncated Laplace mechanism is designed
to achieve differential privacy. Finally, we provide a proof-of-
concept implementation in Ethereum, over which a real data-
based simulation shows that CYCLE satisﬁes 31% more payments
than the state-of-the-art technique.
Index Terms—off-chain; payment channel network; rebalanc-
ing; scalability; smart contract
I. INTRODUCTION
The scalability limitation is a major open problem in the
current development of blockchains. Speciﬁcally, the popular
cryptocurrencies such as Bitcoin and Ethereum achieve 7 and
15 transactions per second (TPS), respectively, while most
established payment systems such as Visa can achieve up
to tens of thousands of TPS [8]. Payment channel network
(PCN) is one of the most promising off-chain technologies to
improve the scalability of blockchains. Each channel between
two nodes can allow their payments to be performed locally
without touching the blockchain. The technology has been
deployed in many blockchains including Bitcoin and Ethereum
[17]. For example, Lightning Network, a PCN built on top of
Bitcoin, is currently able to provide a network capacity of
about 200 million dollars, which is doubling every year [1].
Although PCN is beneﬁcial to blockchain scalability, the
existing PCNs suffer from poor sustainability in practice, i.e.,
the balance of channels cannot be kept at a steady level. In
particular, the balance of a party will be transmitted to that
of the other party in the channel as payments ﬂow over one
direction of a channel. Thus, due to the imbalanced transfer
in channels, the balance in one direction of channels can
gradually become exhausted over a period of time as illustrated
from State (a) to (b) in Fig. 1. After that, the PCN fails to
process any further payments. The PCNs can be rebalanced
via a rebalancing protocol [4], [14], [23], [28]. For each
rebalancing, a set of nodes can collectively agree on a list
of payments along circular paths to rebalance the skewed
channels in an off-chain manner. The circular topology ensures
that the nodes make a set of outgoing payments that can
be compensated by another set of incoming payments. These
payments used to rebalance apply a global offset to the skew
channels. Depending on this global offset, a new balanced state
of channels can be reached. For example, as shown in Fig. 1,
Alice, Carol and Bob can agree on three payments in a loop
Alice 100−→ Bob 100−→ Carol1 and the global offset in the cycle
is 100, so that the PCN can change from State (b) back to (a).
Besides the failed payments during the PCN in exhaustion,
the rebalancing protocol needs to freeze the channels, i.e., to
reject any new payments, during the rebalancing operation. Al-
though invoking rebalancing frequently is expected to reduce
the exhaustion chances, it also interrupts the running of chan-
nels and signiﬁcantly degrades the transaction throughput of
the network. Consider an example of 100 nodes participating
in a rebalancing protocol with a frequency of one rebalancing
per minute. The consensus adopted by the rebalancing protocol
[23] takes at least 10 seconds for each round [24], resulting in
one-sixth of their running time unavaiable to receive any new
payments. Moreover, the downtime of the network increases
with the frequency of rebalancing.
The reason for the channel freezing in the rebalancing proto-
1In this paper, for simpliﬁcation, we adopt an arrow to denote a payment
and the value below the arrow to denote the payment amount.
2158-3927/22/$31.00 ©2022 IEEE
DOI 10.1109/DSN53405.2022.00017
41
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:49 UTC from IEEE Xplore.  Restrictions apply. 
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)