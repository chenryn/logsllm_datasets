postgres=# create rule r1 as on insert to d where (exists (select 1 from d where d.id=NEW.id)) do instead update d set info=NEW.info,crt_time=NEW.crt_time where id=NEW.id;
postgres=# insert into d values (1,'test',now());
INSERT 0 1
postgres=# select * from d;
 id | info |          crt_time          
----+------+----------------------------
  1 | test | 2017-08-10 14:12:20.053353
(1 row)
postgres=# insert into d values (1,'test123',now());
INSERT 0 0
postgres=# select * from d;
 id |  info   |          crt_time          
----+---------+----------------------------
  1 | test123 | 2017-08-10 14:12:26.964074
(1 row)
```
存在则不插入（忽略），不存在则更新。实现幂等写入（断点续传写入不出问题）。  
```
postgres=# create table d(id int primary key, info text, crt_time timestamp);
postgres=# create rule r1 as on insert to d where (exists (select 1 from d where d.id=NEW.id)) do instead nothing;
CREATE RULE
postgres=# insert into d values (1,'test123',now());
INSERT 0 0
postgres=# insert into d values (1,'test123',now());
INSERT 0 0
postgres=# insert into d values (1,'test123',now());
INSERT 0 0
postgres=# insert into d values (0,'test123',now());
INSERT 0 1
```
注意，HDB for PG请不要使用以上2种方法MERGE，因为HDB的所有DML都是2PC的，单条单条的处理性能不好，如果使用了列存则有一个更加严重的问题。  
HDB的列存是每次事务结束记录列存BLOCK级别偏移量作为事务结束标记，需要调用系统的FSYNC接口进行持久化，一个事务不管多大，凡是事务结束时，每个列对应的数据文件的最后一个追加的BLOCK是需要被冻结的，下次事务就会使用新追加的BLOCK。
由于HDB的列存储持久化机制的问题，如果我们使用类似PostgreSQL的insert on conflict或function合并的方法，会导致非常严重的性能问题。  
建议HDB for PG的数据合并，采用三步走的方法。  
1、需要合并的数据写入临时表。  
2、采用delete from xx using tmp where xx.pk=tmp.pk;删除重复数据。    
3、采用insert into xx select * from tmp;写入。   
以上三步可以在事务中完成。   
### 调度系统  
将以上的调度事务，写入调度平台，设置好依赖关系，就可以实现增量、准实时的数据写入到HybridDB for PostgreSQL了。  
[《使用D2工作流在ODPS和HybridDB for PG（Greenplum）间自动同步数据》](https://www.atatech.org/articles/87003)  
## 阿里云HybridDB for PostgreSQL的内核进化  
HybridDB for PostgreSQL作为一款支持冷热分离、线性扩展的分析型数据库，除了具备最基本的数据分析能力，阿里云数据库内核团队还对其进行了功能、性能方面的扩展？  
1、OSS 海量外部存储。  
通过OSS海量存储，打通了云端所有的数据源，同时通过OSS支持冷热数据分离。  
2、HLL估值插件。  
在分析场景中，估值计算是一个非常常见的需求，通过HLL估值插件，HDB PG支持了海量数据的高效估值查询。  
3、MADlib机器学习插件。  
通过MADlib机器学习插件，用户可以使用pivotalR和R语言连接HDB PG，实现R的并行计算。  
4、开放plpython编程接口。  
用户可以在HDB PG中编写python程序，实现复杂的业务处理逻辑或UDF。  
5、PostGIS插件  
支持地理位置海量数据的挖掘，例如时间、空间维度的数据挖掘。  
6、JSON  
采用JSON类型，支持更加灵活数据来源的数据挖掘。  
7、SORT KEY  
通过SORT KEY，用户可以在不建索引的情况下，实现高效的数据过滤和检索。特别适合分析业务中的历史静态数据。对常用的查询列或排序列进行CLUSTER操作后，通过METASCAN，可以在没有索引的情况下，实现比全表扫描快千倍的性能提升。  
8、LLVM  
静态编译，用户在对大量数据进行访问或运算时，降低数据库内核层面的开销。（类似电池充电或放电时的内阻开销），内耗降低后，性能有3到5倍的提升。  
9、向量计算。（开发中）  
利用CPU的向量计算指令，批量处理数据，有10倍左右的性能提升。  
10、METASCAN  
结合SORT KEY，STATS等元信息，实现页级、存储级的WHERE,PROJECTION等下推。从而减少计算层的数据接收量或处理开销。  
11、数据写入支持三角模式，开放式驱动包。（开发中）  
利用三角模式，用户可以直接写数据到HDB PG的数据节点，减少MASTER节点的开销，消除直接写入的瓶颈。（现有技术通过OSS消除写入瓶颈）  
12、支持云生态圈。包括 ETL云服务、BI云服务 等。  
简化用户的开发成本，利用云生态，打造智能的企业数据BI平台，作为企业大数据分析的运算和存储的核心引擎。  
13、内置高可用、备份调度。扩容、缩容 一键完成。降低用户的使用成本。  
## 达到的效果  
通过这个架构，用户实现了流计算、在线业务、数据分析的业务数据闭环。  
将分析时间从天的频率提升到了分钟级别。  
## 小结  
利用阿里云的云生态，RDS PostgreSQL，HybridDB for PostgreSQL，对象存储OSS，QuickBI，流计算平台，消息队列，中间件服务等一系列云服务，帮助企业打造智能的企业数据BI平台，HybridDB for PostgreSQL也企业大数据实时分析运算和存储的核心引擎。  
实现了企业在云端从流计算、在线业务、到数据实时分析的业务数据闭环。  
## 参考  
[《从人类河流文明 洞察 数据流动的重要性》](../201707/20170706_01.md)    
[阿里云 RDS PostgreSQL](https://www.aliyun.com/product/rds/postgresql)  
[阿里云 HybridDB for PostgreSQL](https://www.aliyun.com/product/gpdb)  
[《Greenplum 性能评估公式 - 阿里云HybridDB for PostgreSQL最佳实践》](../201707/20170725_01.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")