### Evaluation of Bottlenecks in Process Performance Analysis

In this evaluation, we conduct experiments by applying various techniques to perform analysis at a coarser granular level of a process. The techniques are compared based on the following questions:
- How much manipulation of an event log is required to analyze the process performance at a coarser granular level?
- How much domain knowledge is required for the abstraction of an event log?
- How reliable are the resulting performance metrics?

To the best of our knowledge, the stage performance evolution proposed is the only visualization that supports our goal for such analysis. Therefore, we conduct the experiments using various event abstraction techniques, with our visualization applied on top. Table 2 lists the implementations of the techniques evaluated, along with their abbreviations for convenience. Except for the proposed approach, other techniques are available in ProM [24]. This section presents the evaluation from the aspects of ease of use and reliability by analyzing two event logs: PermitLog [23] and BPIC15 1 [22].

**Figure 7. A schematic overview of analyzing performance at a coarser granular level using different event abstraction techniques.**

**Table 2. Overview: Techniques used for Experiments.**

| Techniques | Abbreviation |
|------------|--------------|
| - Proposed Approach | PA |
| - Abstract Event Labels using linear chaining [18,19] | CRF (Conditional Random Field) |
| - Log Abstraction - Abstract Log based on Patterns [16] | PNP |
| - Session-based Log Abstraction [12] | SESS |
| - Stage Mining (SM) [15] | SM |

The implementation and the datasets used for experiments are available at: https://github.com/chiaoyunli/spm.

### 4.1 Evaluation on Ease of Use

The ease of use of a tool is evaluated based on two aspects: the amount of domain knowledge required and the necessity of manipulating the event log. The inputs and outputs of the event abstraction techniques vary. Therefore, for each technique, we manipulate the event logs for performance analysis at the abstracted level if necessary.

**External Effort Required.** Figure 7 presents the overview of the steps to analyze the performance at the coarser granularity level using the techniques. The dashed line indicates the data flow, and the solid line refers to the control flow. Each box represents a step, and the steps that require human intervention are emphasized with a green outline. We further group the steps and annotate the groups with the corresponding techniques. Since existing event abstraction techniques are not specifically designed for performance analysis, we manipulate the output of the event abstraction techniques to compute the performance metrics (Transform step). If the output does not contain the attribute to indicate the instance of a concept at a coarser level of a process, we consider the continuous events with the same targeting instance at a coarser granularity level as an instance, i.e., the duration between the first and the last event of such an instance corresponds to the cycle time in our approach. For other metrics, we apply the same definition in our approach, e.g., the flow time of an instance of a higher-level concept is the duration from the first to the last event of which the activities are contained in the high-level concept identified. As shown in Figure 7, the proposed approach, i.e., PA, requires the least number of steps and does not require any transformation for the performance visualization. Note that other performance analysis techniques can be applied to analyze other aspects of the performance. In this case, our approach can alternatively generate an event log consisting of the events in the stage instances, and the Transform step should be applied like the other techniques.

**Domain Knowledge Required.** The domain knowledge required for each technique varies. For example, to train a prediction model, CRF requires an event log with every event being labeled; for PNP, a coarse-granular instance is extracted with a pattern of the activities. To compare the domain knowledge quantitatively, we calculate the percentage of the activities required to extract a coarse-granular instance. Table 3 shows how much domain knowledge is required for each technique evaluated and the corresponding number of activities in the input of the techniques in the experiments. Our approach outperforms CRF and PNP but is inferior to SESS and SM since the latter two techniques are unsupervised. Nevertheless, SESS requires exhaustive tuning of parameters, and the results are non-deterministic. SM, as presented in the next section, cannot guarantee the availability of the results.

**Table 3. Domain Knowledge Required and Number of Activities Required.**

| Techniques | Domain Knowledge Required | #Activities Required (%) (PermitLog/BPIC15 1) |
|------------|---------------------------|-----------------------------------------------|
| CRF | All events labeled with the coarse-granular instance for training | 1/1 |
| PNP | Behavior of the activities of every concept at a coarser granular level | 0.71/0.9 |
| PA | Start and end activities of a stage class | 0.37/0.78 |
| SESS | Parameters tuning | 0/0 |
| SM | Minimum number of activities in a concept at a coarser granular level | 0/0 |

### 4.2 Evaluation on Metrics Reliability

We perform the analysis using the methods based on the steps illustrated in Figure 7. Generally speaking, accuracy is an ideal indicator of the reliability of the results. However, due to the assumptions of different techniques (e.g., some are supervised while others are unsupervised), it is unfair to compare the accuracy for reliability. Therefore, the experiments are conducted on a best-effort basis, and we consider the number of measurements included as the indicator for the reliability of the metrics, i.e., the more measurements and cases used to compute a performance metric, the more reliable the results. Note that, except for SM, where the results are unavailable, all the techniques require a user to determine the number of concepts at a coarser granular level, i.e., the number of stage classes in terms of the proposed approach. Therefore, for the concepts at a coarser granular level, we define four concepts for a travel reimbursement management process for PermitLog [8] and nine phases implied in activity code in a Dutch municipality for BPIC15 1 [6]. The quality of the results is examined from two perspectives: whether the number of concepts identified matches the number of concepts defined and the amount of measurements.

**Table 4. Number of measurements per high-level concept identified using PermitLog and BPIC15 1. NaN indicates that the results are unavailable.**

| High-Level Concept Identified (#ct/#ft) | CRF | PNP | PA | SESS | SM |
|-----------------------------------------|-----|-----|----|------|----|
| **[PermitLog]**                         |     |     |    |      |    |
| -Apply (7911/7062)                      | 7911/7062 | 7911/7062 | 7911/7062 | 5406/3965 | NaN |
| -Claim (1715/1336)                      | 1715/1336 | 1605/1296 | 2026/1314 | PermitFINALAPPROVED | NaN |
| -Travel (7843/7065)                     | 7843/7065 | 6331/633 | 7065/7065 | Travel+bySUPERVISOR (5715/4095) | NaN |
| -Declare (5980/5718)                    | 5980/5718 | 5043/4963 | 7401/5569 | RequestPayment (10512/5856) | NaN |
| -None (1276/1276)                       | 1276/1276 | - | - | - | - |
| **[BPIC15 1]**                          |     |     |    |      |    |
| -Phase1 (29/29)                         | 29/29 | NaN | 1992/1199 | registersubmissiondate | NaN |
| -Phase2 (29/29)                         | 29/29 | 3967/1119 | 2727/969 | request+complete (901/670) | NaN |
| -Phase3 (193/178)                       | 193/178 | 2727/969 | 2573/1028 | entersenddatedecisionenvironmentalpermit+complete (1498/948) | NaN |
| -Phase4 (200/178)                       | 200/178 | 3397/925 | 3397/925 | registrationdatepublication+complete (105/102) | NaN |
| -Phase5 (180/176)                       | 180/176 | 2054/899 | 2054/899 | entersenddateprocedureconfirmation+complete (100/97) | NaN |
| -Phase8 (1027/1027)                     | 1027/1027 | 2054/899 | 2054/899 | generatespublicationdocumentdecisionenvironmentalpermit+complete (154/147) | NaN |
| -Phase6 (1/1)                           | 1/1 | - | - | - | - |
| -Phase7 (138/138)                       | 138/138 | - | - | - | - |
| -Phase8 (156/153)                       | 156/153 | - | - | - | - |
| -createsubcasescompleteness+complete (18/18) | - | - | - | - | - |

For both event logs, CRF and SESS cannot extract the exact number of concepts defined. CRF identifies too many concepts, including events that the technique fails to predict (None) using PermitLog, and too few concepts using BPIC15 1. SESS extracts fewer clusters despite the fact that the numbers of clusters desired are specified with the parameter. Therefore, only PNP generates the same number of concepts at a coarser granular level as specified. However, only the results using PermitLog are available, and they are inferior to the proposed approach in terms of the number of measurements included. To conclude, the proposed approach provides the most reliable metrics compared with the other techniques in the experiments.

### 4.3 Experiments Summary

We perform a comparative evaluation by analyzing stage performance using various techniques. We compare the ease of use of the techniques and the reliability of the resulting performance metrics. In terms of ease of use, our approach requires the least effort from a user. However, we still require some domain knowledge in comparison with the unsupervised techniques. The reliability of the metrics is based on whether the number of concepts at a coarser granular level is the same as specified and the number of measurements. The proposed approach outperforms all the other techniques evaluated. To conclude, the results show that our approach meets the balance between the ease of use and the reliability of the metrics.

### 4.4 Threats to Validity

The existing techniques are not designed for analyzing the performance at a high level of a process. Therefore, some information required to compute the duration of a coarse-granular instance, i.e., the start and complete time of the instance, is left for users to determine. Consider two interleaving instances of two concepts at a coarser granular level. Such behavior may result in multiple cycle times for each instance in the Transform step. However, in fact, only two measurements should be extracted. Thus, despite the best effort to apply the techniques, the results may not be accurate due to the manipulation.

For the proposed approach, the implementation allows an analyst to define only the stage classes with the distance and the mapping of events configured as default. However, there may be some scenarios where the parameters may not be defined easily and, thus, require further effort to configure the parameters to obtain reliable results. Additionally, the performance of stage instances is aggregated at the case level. Which metrics make sense for the analysis depends on the context. For example, in terms of stage instances of a stage class executed in parallel, the average cycle time may not be a reasonable choice for some processes. Nevertheless, consider the scenario in Figure 3, the average can be used to compute the costs for hiring staff in laboratories. Such decisions require analysts to be aware of the context.

### 5. Conclusion

The diagnosis of inefficiencies requires performance metrics provided based on interpretable results. We elevate the analysis to the stage level and visualize the performance accordingly. Existing techniques are insufficient for stage performance analysis. The evaluation shows that combining existing techniques requires additional manipulation of an event log and domain knowledge from a user. Moreover, the results may be unreliable or unavailable. We propose an approach that supports performance analysis at the stage level by extracting events that are critical for the metrics. As such, our approach minimizes the effort from users while providing the most reliable results compared to the existing works. Meanwhile, the technique can be flexibly combined with other visualizations to analyze other aspects of a process. To facilitate the analysis at the stage level, further research aims at automatic identification of stage classes.

### References

1. van der Aalst, W., Unterberg, D.T.G., Denisov, V., Fahland, D.: Visualizing token flows using interactive performance spectra. In: International Conference on Applications and Theory of Petri Nets and Concurrency (2020).
2. Denisov, V., Belkina, E., Fahland, D., van der Aalst, W.: The performance spectrum miner: visual analytics for fine-grained performance analysis of processes. In: BPM (Dissertation/Demos/Industry) (2018).
3. Denisov, V., Fahland, D., van der Aalst, W.: Unbiased, fine-grained description of processes performance from event data. In: International Conference on Business Process Management (2018).
4. Dumas, M., La Rosa, M., Mendling, J., Reijers, H.A.: Fundamentals of Business Process Management (2018).
5. Günther, C.W., Rozinat, A.: Disco: Discover your processes. BPM (Demos) (2012).
6. van der Ham, U.: Benchmarking of five Dutch municipalities with process mining techniques reveals opportunities for improvement (2015).
7. Haziza, D., Rapin, J., Synnaeve, G.: Hiplot, interactive high-dimensionality plots. https://github.com/facebookresearch/hiplot (2020).
8. Hobeck, R., et al.: Performance, variant, and conformance analysis of an academic travel reimbursement process (2020).
9. Hornix, P.T.: Performance analysis of business processes through process mining. Master’s thesis, Eindhoven University of Technology (2007).
10. Kasim, T., Haracic, M., Haracic, M.: The improvement of business efficiency through business process management. Econ. Rev. J. Econ. Bus. 16(1), 31–43 (2018).
11. Leemans, S.J., Fahland, D., van der Aalst, W.: Discovering block-structured process models from event logs containing infrequent behavior. In: International Conference on Business Process Management (2013).
12. de Leoni, M., Dünder, S.: Event-log abstraction using batch session identification and clustering. In: Proceedings of the 35th Annual ACM Symposium on Applied Computing (2020).
13. Li, C.Y., van Zelst, S.J., van der Aalst, W.: A generic approach for process performance analysis using bipartite graph matching. In: International Conference on Business Process Management (2019).
14. Mannhardt, F., Tax, N.: Unsupervised event abstraction using pattern abstraction and local process models. arXiv preprint arXiv:1704.03520 (2017).
15. Nguyen, H., Dumas, M., ter Hofstede, A.H., La Rosa, M., Maggi, F.M.: Stage-based discovery of business process models from event logs. Inf. Syst. (2019).
16. Nguyen, H., Dumas, M., ter Hofstede, A., La Rosa, M., Maggi, F.: Business process performance mining with staged process flows. In: International Conference on Advanced Information Systems Engineering (2016).
17. Song, M., van der Aalst, W.: Supporting process mining by showing events at a glance. In: Proceedings of the 17th Annual Workshop on Information Technologies and Systems (2007).
18. Tax, N., Sidorova, N., Haakma, R., van der Aalst, W.: Mining process model descriptions of daily life through event abstraction. In: Proceedings of SAI Intelligent Systems Conference (2016).
19. Tax, N., Sidorova, N., Haakma, R., van der Aalst, W.: Event abstraction for process mining using supervised learning techniques. In: Proceedings of SAI Intelligent Systems Conference (2016).
20. van der Aalst, W.: Process Mining: Data Science in Action. Springer, Heidelberg (2016). https://doi.org/10.1007/978-3-662-49851-4.
21. van der Aalst, W., Adriansyah, A., van Dongen, B.: Replaying history on process models for conformance checking and performance analysis. Data Mining and Knowledge Discovery, Wiley Interdisciplinary Reviews (2012).
22. van Dongen, B.: BPI challenge 2015 municipality 1 (2015). https://doi.org/10.4121/uuid:a0addfda-2044-4541-a450-fdcc9fe16d17.
23. van Dongen, B.: BPI challenge 2020: Travel permit data (2020). https://doi.org/10.4121/uuid:ea03d361-a7cd-4f5e-83d8-5fbdf0362550.
24. van Dongen, B., de Medeiros, A.K.A., Verbeek, H., Weijters, A., van der Aalst, W.: The ProM framework: a new era in process mining tool support. In: International conference on application and theory of Petri nets (2005).

---

**AudioLens: Audio-Aware Video Recommendation for Mitigating New Item Problem**

**Mohammad Hossein Rimaz¹, Reza Hosseini², Mehdi Elahi³, Farshad Bakhshandegan Moghaddam⁴**

¹ Technical University of Kaiserslautern, Erwin-Schrödinger-Str 52, 67663 Kaiserslautern, Germany
² Vaillant Group Business Services, Berghauser Str. 63, 42859 Remscheid, Germany
³ University of Bergen, Fosswinckelsgt. 6, 5007 Bergen, Norway
⁴ University of Bonn, Regina-Pacis-Weg 3, 53113 Bonn, Germany