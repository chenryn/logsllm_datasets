TCP out-of-sequence
TCP non-monotonic
Flowlet size
histogram
High E2E latency
Count concurrently
active connections
TCP incast
Lossy connections
TCP timeouts
if lastseq != tcpseq: cnt = cnt + 1
lastseq = tcpseq + payload_len
oos_q = groupby(pktstream, [5tuple], oos);
def nonmt([maxseq, cnt], [tcpseq]):
if maxseq > tcpseq: cnt = cnt + 1
else: maxseq = tcpseq
nm_q = groupby(pktstream, [5tuple], nonmt);
def fl_detect([last_time, size], [tin]):
if tin - last_time > delta:
emit(); size = 1
else: size = size + 1
last_time = tin
R1 = groupby(pktstream, [5tuple], fl_detect);
fl_hist = groupby(R1, [size], count);
def sum_lat([e2e_lat], [tin, tout]):
e2e_lat = e2e_lat + tout - tin
e2e = groupby(pktstream, [uid], sum_lat);
high_e2e = filter(e2e, e2e_lat > 10);
def new_flow([cnt], []):
if cnt == 0: emit(); cnt = 1
R1 = map(pktstream, [tin/128], [epoch]);
R2 = groupby(R1, [5tuple, epoch], new_flow);
num_conns = groupby(R2, [epoch], count);
R3 = zip(num_conns, pktstream);
ic_q = filter(R3, qin > 100 and cnt  p*total.cnt);
def timeout([cnt], [last_time, tin]):
timediff = tin - last_time
if timediff > 280ms and timediff  800000:
nbursts++;
emit();