77, 515, 521, 435 + 108
840, 261, 910, 995 + 108
5, 257, 211, 409, 450 + 108
23, 342, 337, 775, 350 + 108
As stated earlier, the practical strength also needs to be explained. A study of how 
users select cells as their password in each grid size was conducted. Figures 4-6 to 4- 11  
display how the cells were selected by approximately two hundred volunteers that 
participated in the study. Each figure shows a heat map that represents the frequency 
of cell selection. The darker color (red) represents the cells that were selected by a 
higher percentage of users, whereas the lighter color (green) represents the cells that 
were selected by very few or none. The numbers represent the percentage of users who 
selected that particular cell.
Figure 4-6.  Cell Selection in a 30-Cell Grid
93
Chapter 4 
 password-Based authentiCation
Figure 4-7.  Cell Selection in a 60-Cell Grid
Figure 4-8.  Cell Selection in a 90-Cell Grid
94
Chapter 4 
 password-Based authentiCation
Figure 4-9.  Cell Selection in a 120-Cell Grid
95
Chapter 4 
 password-Based authentiCation
Figure 4-10.  Cell Selection in a 150-Cell Grid
96
Chapter 4 
 password-Based authentiCation
Figure 4-11.  Cell Selection in a 180-Cell Grid
From the heat maps of cell selection, it can be observed that the participants tended 
to choose the cells toward the left-hand side of the grid, especially in the top left area. 
The right-hand side, especially in the bottom right area of the grid, was significantly less 
popular. Many of them remained unchosen. In more detail, the figures show that 26 cells 
were not picked by any of the users in the 120-cell grid. Exactly 57 cells and 63 cells were 
not of anyone’s choice in the 150-cell grid and 180-cell grid, respectively. These account 
for 21.67%, 38.00%, and 35.00% of all the available cell positions in the 120-cell, 150-cell, 
and 180-cell grids, respectively.
97
Chapter 4 
 password-Based authentiCation
The way that the users selected the cells, as seen in the figures, directly affects the 
strength or security of the grids. In other words, when there are many unselected cells, 
the combination space or the number of all possible cell selection combinations, based 
only on the number of the chosen cells, becomes smaller. Hence, it is now relatively 
easier for an adversary to attempt a brute-force attack on the grid-based authentication 
mechanism.
In order to confirm what is explained previously, Table 4-5 shows the physical 
strength of the 60-cell, 90-cell, 120-cell, 150-cell, and 180-cell grids. It can be seen 
that the combination space or the number of possible cell selection combinations has 
decreased when being compared with the theoretical strength in Table 4-4.
Table 4-5.  Physical Strength of Each Grid to Withstand Brute Force
Grid Size (Number 
of Cells)
Strength (Number of Possible 
Combinations)
Percentage of Strength 
Reduction
60
90
120
150
180
1, 652, 411, 475 + 108
48, 124, 511, 370 + 108
111, 315, 063, 717 + 108
101, 841, 441, 273 + 108
681, 927, 413, 310 + 108
35.42
37.92
86.75
98.06
97.08
It should now be obvious from Figures 4-6 to 4-11 that the larger the grid size, the 
higher the number the unchosen cells will be. This, in turns, means that the strength 
to withstand a brute-force attack has also been reduced. Table 4-5 shows that with the 
sizes of 150 and 180 cells, the strength has been reduced by almost 100%, physically, with 
the strength of the 120-cell grid being decreased by almost 90%. This implies that there 
would be nearly twice less work for an attacker who would attempt to carry out a brute- 
force attack on those grids than it claimed theoretically.
 Recall-Based Systems
A recall-based grid password system is sometimes known as a drawmetric system. This is 
because it requires users to draw, recall, and reproduce a secret drawing. In this type of 
system, users usually draw their secret diagram on a grid.
98
Chapter 4 
 password-Based authentiCation
The first recall-based system is called Draw a Secret or DAS which was designed and 
created in 1999. It works by asking a user to draw on a 2D grid using either a stylus or, 
more commonly, a mouse. The drawing done by the user can consist of one continuous 
line or any number of lines within the provided cells in the grid. This drawing is then 
used as the graphical password template for this particular user.
When attempting to authenticate themselves, the user simply “recalls” and re- 
draws their picture to match the template. An example of the Draw-a-Secret graphical 
password scheme can be seen in Figure 4-12.
Please draw your secret image in the grid.
Figure 4-12.  Draw-a-Secret System
Let us get into the detail of the Draw-a-Secret system. First of all, the usability 
issue has not really been studied much. However, a study found that users tended to 
draw simple images with only one to three strokes or lines. The authentication success 
rate was also found to be only between 57 and 80%. Another aspect of Draw a Secret 
that cannot be overlooked is, of course, the number of possible passwords. This is 
also known as the size of the theoretical password space. It is said that the theoretical 
password space is related to the coarseness of the given 2D grid and the maximum 
password length. The creator of the Draw-a-Secret scheme stated that for a 5 x 5 grid and 
maximum length 12, the theoretical password space has a cardinality of 258.
It can be seen that this particular graphical password scheme provides a theoretical 
password space comparable to text passwords. However, there is a high possibility that users 
would make their graphical passwords predictable with only one, two, or three simple lines.
The Draw-a-Secret or DAS graphical password scheme has formed a basis for many 
other similar schemes. The first to make an improvement on DAS was the BDAS scheme, 
which added a background image to DAS in order to encourage users to draw more 
99
Chapter 4 
 password-Based authentiCation
complex passwords. Another interesting recall-based system is called Passdoodle, which 
again was created based on the DAS scheme. However, not only Passdoodle allows 
users to create freehand drawing passwords, but it also uses a more complex password 
matching method, which takes into account the number of lines, line colors, and even 
the drawing speed.
One of the most well-known recall-based graphical password scheme is known as 
the Pass-Go scheme, which was proposed in 2008. The scheme was inspired by an old 
Chinese board game in which players place tokens on the intersection points of the grid. 
In the Pass-Go scheme, when registering, users select intersections on the grid as a way 
to enter their passwords. When the users want to authenticate themselves, all they have 
to do is to select the correct intersection points. A typical Pass-Go authentication scheme 
can be seen in Figure 4-13.
Username:
Please select your secret password.
Figure 4-13.  Pass-Go Scheme
For the security aspect, it is claimed that this particular graphical password scheme 
offers a very large theoretical password space that is similar to that of a 256-bit password 
for the most basic Pass-Go scheme. Different colors also add to the complexity of its 
security. However, the Pass-Go scheme is still susceptible to a shoulder surfing attack.
In the case of usability, the Pass-Go method gives a better result than the original 
Draw-a-Secret scheme. In other words, the Pass-Go method was tested with over 160 
users. The success rate of authentication was approximately 78%, which on average was 
considerably higher than what the original Draw-a-Secret method has achieved.
100
Chapter 4 
 password-Based authentiCation
 Android Pattern Lock
Another graphical password which falls under the recall-based system and is familiar 
to many users today is the Android pattern lock or the pattern screen lock method on 
a smart phone. This type of graphical password was introduced by Google in 2008 with 
the launch of its Android mobile operating system as an alternative to the screen lock 
password. The pattern lock method is still widely used on Android smart phones until 
these days.
This pattern lock method provides users with nine dots in a 3 x 3 grid formation. The 
users draw lines to connect any number of dots to create a pattern, usually between four 
and nine dots. The pattern is then used as the password for unlocking the smart phone. 
An example of the Android lock pattern interface is shown in Figure 4-14.
Draw Your Password
Draw Your Password
Figure 4-14.  Android Lock Pattern
It is important to provide an analysis of this type of authentication. The first to be 
shown is the pattern space or the number of possible combinations of the lock patterns. 
As mentioned, the Android pattern lock consists of nine dots in a 3 x 3 grid formation. 
The rules for the pattern to be valid are as follows. The minimum number of dots of 
the chosen pattern is four and the maximum is nine. There can be no jumps from one 
dot to another. However, if a dot has already been selected, a jump over that particular 
dot is allowed. From the number of dots and the rules, the number of possible pattern 
combinations based on the number of selected dots is shown in Table 4-6.
101
Chapter 4 
 password-Based authentiCation
The problem with the Android pattern lock is not different from that of traditional 
password. In other words, research has shown that they are also easy to guess. The 
following is what a research found from an analysis of around four thousand lock 
patterns. The researcher found that 44% of the patterns were started at the top left dot 
and 77% of all the patterns were started at one of the four corners. The average number 
of dots used in a lock pattern was five, which means there are only 7,152 combinations 
for an attacker to work with. The researcher also discovered that a significant portion of 
the studied patterns only contained four dots, which would leave the number of possible 
combinations of 1,624. This is massively fewer than the strength of the four- character 
passwords, which has 232 or over four billion possible combinations. Moreover, the 
ways the patterns were drawn were mostly from left to right and top to bottom, which 
contributes to the easiness of guessing. Therefore, it can be conclusively said that the 
Android pattern lock is actually worse than the traditional password of the same length 
in terms of theoretical strength or number of possible combinations. This is especially 
true when taking into account of how users tend to choose simple lock patterns.
Table 4-6.  Theoretical Strength of Android Pattern Lock
Length
(Number of Dots)
Theoretical Strength
(Number of Possible Combinations)
4
5
6
7
8
9
total
1,624
7,152
26,016
72,912
140,704
140,704
389,112
In addition, a form of attack on the Android pattern lock that cannot be overlooked is 
the shoulder surfing attack. One research even suggested that it was possible to film from 
a distance and video process what was recorded in order to learn what the lock pattern of 
that user was. The result of the research showed that it was possible to crack that pattern 
lock in five attempts 95% of the time, provided that the video quality was decent enough.
102
Chapter 4 
 password-Based authentiCation
One reason, as mentioned previously, that the Android pattern lock is not difficult 
to crack is the fact that users tend to choose simple and common patterns. This is 
equivalent to users choosing such weak passwords as 123456, password, or letmein. 
Many of the lock patterns that are frequently chosen by users are fashioned after an 
alphabet letter. In many cases, they are even the first letter or an initial of the name of the 
user, their spouse, or their child. The implication is that the number of guesses could be 
drastically reduced if an attacker knew the name of the user or anyone close to them. A 
few examples of commonly used lock patterns that mimic a letter of the English alphabet 
are shown in Figure 4-15.
Figure 4-15.  Examples of Weak Android Lock Patterns
In order to make the Android pattern lock more secure, it is recommended that users 
choose more complex patterns. This would make it harder for an adversary to trace 
the precise sequences and patterns. However, similar to the traditional text passwords, 
more complex patterns could also mean that users cannot remember what the patterns 
are. Examples of the Android lock patterns that can be categorized as more complex are 
shown in Figure 4-16.
Figure 4-16.  Examples of More Complex Android Lock Patterns
103
Chapter 4 
 password-Based authentiCation
 Summary
Passwords, the something-you-know method, are considered the most popular way for 
carrying out authentication. This chapter, therefore, explains how stronger passwords 
can be generated and how to store them more securely. Although currently there is 
one password storage technique which makes use of randomly generated salt values to 
assist in making the password storing procedure more secure, this chapter still provides 
an improved process. The dynamic salt generation and placement is consequently 
explained and illustrated.
In addition to the traditional text passwords, this chapter describes and discusses 
an alternative known as the grid-based passwords. These consist of two main 
techniques, which are the recognition based and recall based. Both of them can also be 
considered as graphical passwords and have been the basis of several commonly used 
authentication systems, including the popular Android pattern locks that are on all the 
Android smart phones today.
 Bibliography
Andriotis, P., Tryfonas, T., Oikonomou, G., & Yildiz, C. (2013). A Pilot Study on the 
Security of Pattern Screen-LockMethods and Soft Side Channel Attacks. Proceedings 
of the Sixth ACM Conference on Security and Privacy in Wireless and Mobile Networks. 
Budapest, Hungary: ACM.
Belk, M., Pamboris, A., Fidas, C., Katsini, C., Avouris, N., & Samaras, G. (2017). Sweet- 
Spotting Security and Usability for Intelligent Graphical Authentication Mechanisms. 
Proceedings of the International Conference on Web Intelligence (pp. 252–259). Leipzig, 
Germany: ACM.
Biddle, R., Chiasson, S., & Van Ooorschot, P. C. (2012, August). Graphical Passwords: 
Learning from the First Twelve Years. ACM Computing Surveys, 44(4), 19–41.
Boonkrong, S. (2012, December). Security of Passwords. Journal of Information 
Technology, 8(2), 112–117.
Boonkrong, S. (2014). The Art of Protecting Networks and Information. Bangkok, 
Thailand: King Mongkut's University of Technology North Bangkok Press.
Boonkrong, S. (2019). An Analysis of Numerical Grid-Based Authentication. 
Proceedings of the Ninth International Conference on Information Communication and 
Management. Prague, Czech Republic: ACM.
104
Chapter 4 
 password-Based authentiCation
Boonkrong, S., & Somboonpattanakit, C. (2016, February). Dynamic Salt Generation 
and Placement for Secure Password Storing. IAENG Journal of Computer Science, 43(1), 
26–37.
Loge, M. D. (2015). Tell Me Who You Are and I Will Tell You Your Unlock Pattern. 
Norwegian University of Science and Technology, Department of Computer and 
Information Science. Norway: Norwegian University of Science and Technology.
Ma, W., Campbell, J., Tran, D., & Kleeman, D. (2010). Password Entropy and 
Password Quality. Proceedings of the Fourth International Conference on Network and 
System Security. Melbourne, Australie: IEEE.
Todorov, D. (2007). Mechanics of User Identification and Authentication: 
Fundamentals of Identity Management. New York, USA: Auerbach Publications, Taylor & 
Francis Group.
Ye, G., Tang, Z., Fang, D., Chen, X., Kim, K. I., Taylor, B., & Wang, Z. (2017). Cracking 
Android pattern lock in five attempts. Proceedings of the 2017 Network and Distributed 
System Security Symposium (NDSS). San Diego, CA, USA: Internet Society.
105