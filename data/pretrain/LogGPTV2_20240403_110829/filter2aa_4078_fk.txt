变更往往会产生意想不到的可能导致中 断的副作用 。 管理员可以通过变更系统来解决问题， 但
会在其他系统中产生未知问题。 如 图 16.3 所示， 该 Web 服务器可以从互联网访问， 并可访问 内 部
网络上的数据库。 管理员 己在防火墙 l 和防火墙 2 上配置适当的端 口来允许网络流量通过， 进而允
许 Web 服务器访 问 数据库服务器。
内部网络
互联网
防火墙 2
Web 服务器 数据库服务器
图 1 6.3 Web 服务器和数据库服务器
有能力的防火墙管理员可能会在防火墙 2 上看到一个无法识别的开放端口， 并出于安全考虑决
定将其关闭 。 遗憾的是， Web 服务器需要此端口打开来与数据库服务器进行通信， 所以当端口 被关
闭时， Web 服务器将出现问题。 很快， 帮助台如洪水般的请求打开， 人们开始修复服务器。 他们 向
Web 服务器的程序员寻求帮助， 并在一些故障排除后， 开发人员意识到数据库服务器无响应。 然后，
他们呼叫数据库管理员来对数据库服务器进行故障排除。 在一阵大喊大叫 、 指责和责骂后， 有人意
识到防火墙 2 的一个需要开放的端口 被关闭 了 。 他们打开端口 并解决了这个问题。 至少直到这个端
口 被再次关闭或者有人开始研究防火墙 l 之前 ， 这个问 题解决 了 。
提示 :
组织 不断寻求安全性和易 用 性之间 的最佳平衡。 有 实例证明 ， 组织会做出这样的决定: 想要通
过削弱 系统的安全性来提高性能。 然而， 变更管理有助于确保组织花时间坪估削弱安全性带来的风
险 ， 并与 由 此增加 的 易用性回报进行比较。
未授权的变更直接影响到 CIA 三要素中 的可用性。 然而， 变更管理过程给不同的 IT 专家提供
了 机会， 让他们在技术人员做出变更之前审查意料之外的副作用 的变化。 同时， 它们给了管理员时
间 ， 在 生产环境变化之前检查其工作是否在可控范围 内 。
此外， 一些变更可能会削弱安全性。 例如， 如果组织没有使用有效的访问控制机制来授予用户
访问权限， 管理员可能会无法跟上额外的访问请求。 技术差的管理员可能会决定将一组用户添加到
网络的管理员组中 。 用户将拥有他们需要的所有访问权， 并且他们的网络使用能力提高了， 不用再
向管理员提出访问请求。 然而， 以这种方式授予管理员访问权直接违反了最小特权原则， 并明显削
弱 了 安全性。
第 1 6 章 管理安全运营
注意 :
如今使用 的许多 配直和变更管理概念 已经不同 于最初发表的英国信息技术基础架构库(lTIL).
ITIL 的核心 包括 5 个出版物 ， 阐述了 系 统的整个生命周期。 盯且 作为整体定义了 组织确定可以采取
的用 于提高整体可用 性的最佳实践， 并且出 版物 Service Transition 说明 了 配置管理和变更管理tvflo
虽 然许多 概念来 自 ITIL， 但组织 不需要采用 ITIL 末实施支史和配直管理。
1 6.4. 1 安全影响分析
变更管理过程确保人员可以进行安全影响分析。 在生产环境中 ， 专家对变更进行评估并识别安
全影响之后 ， 工作人员才开始实施变更。
变更管理控制提供一个过程来控制 、 文档化、 跟踪和审计所有系统的变化。 其中包括系统任何
一方面的变更， 包括硬件和软件配置。 组织在任何系统的生命周期中都能够实现变更管理过程。
变更管理过程中的常见任务如下:
1) 请求变更。 一旦所需变更确定下来， 工作人员就会请求变更 。 一些组织使用 内部网站， 允许
员 工通过网页提交变更请求。 内部网站 自动记录数据库中的请求， 并允许工作人员跟踪更改 。 任何
人都可查看更改请求的状态。
2) 审查变更。 单位内 的专家会审查变更。 审查变更的人员通常来 自 同一单位的不同领域。 在某
些情况下， 他们可能会很快完成审查并决定批准或拒绝变更。 在其他情况下， 通过广泛的测试之后 ，
变更可能需要正式的变更审查委员会批准。
3) 批准片巨绝变更 。 在审查的基础上， 这些专家随后批准或拒绝变更 。 他们还记录了变更管理
文档的响应。 例如， 如果组织使用 内部网站， 有人会在网站的数据库中记录结果。 在某些情况下，
变更审查委员会可 能需要创建回漆或退出计划。 这将确保如果变更失败， 管理人员可以将系统还原。
4) 计划和实施变更。 变更是有时间计划的， 以确保变更对系统及用户 产生的影响能够降到最小。
这可能需要将变更时间 调整到下班时间 或非高峰期。
5) 记录变更。 最后一步是记录变更以确保所有相关人员熟悉变更。 这往往需要改变配置管理文
档 。 如果不相关的灾难需要管理员重建系统， 变更管理文档为他们提供相关信息。 这确保他们可以
还原系统。
有一些需要紧急变更的情况。 例如， 如果攻击或恶意软件感染了一个或多个系统， 管理员可能
需要做出变更来处理该事件 。 在这种情况下， 管理员仍然需要记录变更。 这确保变更审查委员会可
以观察潜在问题的变化。 此外， 记录的紧急情况下的变更也可确保系统在需要重建时有最新配置。
在执行变更管理的过程中 ， 将为系统的所有变更创建文档。 如果技术人员需要修改变更， 这就
为其提供 了相关信息。 如果人员需要在其他系统上实现相同 的变更， 文档还提供了 一个流程图以供
遵循。
在 ISO 通用标准中变更管理控制对于一些安全保证要求是强制性元素。 然而， 在许多组织中实
现变更管理控制都不需要符合 ISO 标准。 它提高了环境的安全性， 预防了因未授权的变更而导致的
损失。
1 6.4.2 版本控制
版本控制通常是指软件配置管理中使用 的版本控制。 标签或编号系统将多台机器上或处于不同
479
480
CISSP 官方学习 指南(第 7 版)
时间点的软件集与配置在一台机器上区分出来。 例如， 应用程序的第一个版本可能被标记为 1 .0。 第
一次小更新将被标记为 1.1， 第一个主要的更新将被标记为 2.0。 这有助于随着时间的推移跟踪变更。
虽然大多数软件开发商都意识到对应用程序版本进行识别与控制的重要性， 但许多新的 Web 开
发人员没有认识到这一点。 这些 Web 开发者己经掌握了能够创建优秀网站的技能， 但他们总是意识
不到一些基本原则 ， 比如版本控制的重要性。 如果他们不能通过某种类型的版本控制系统来控制变
更 ， 就可能引发由于变更导致的网站瘫痪。
1 6.4.3 配置文档
配置文档确定当前系统的配置。 它定义了系统负责人及系统 目 标， 并且列出 了所有应用于基线
的变更。 几年之前， 许多组织使用简单的纸笔记本记录这些服务器信息， 但如今， 将这些信息存储
在文件或数据库中更常见 。 当然， 将信思存储在数据队列中面临的一个问题就是断 电时没办法获得
信息。
1 6.5 补丁管理和减少漏洞
补丁管理和漏洞管理同时用于保护企业的系统免受威胁。 在操作系统和应用程序中经常发现错
误和安全漏洞 。 一经发现， 供应商就会编写和测试补丁去消除该漏洞。 补丁管理能够确保应用适 当
的补丁， 并且漏洞管理有助于验证系统免受己知威胁的干扰。
1 6.5. 1 补丁管理
补丁是用于任何类型代码编写的笼统术语， 写补丁能够纠正错误或修复漏洞， 或提高现有软件
的性能。 软件可以是操作系统或应用程序。 补丁有时被称为更新、 快速修复或热修复。 在系统安全
的状态下， 管理员主要关心的是安全补丁， 这是影响系统漏洞的补丁。 服务包是补丁的集合， 携带
着系统当前最新的补丁。
即使供应商经常发布补丁， 这些补丁也只有在被应用时才是有用的 。 这个道理显而易见， 但是
仍然会发生很多安全事件， 这是由于很多组织并不执行补丁管理策略。 有效的补丁管理ÆJ芋能够确
保系统安装当前最新的补丁。 如下是有效补丁管理程序中共同的步骤:
评估补丁 : 当供应商发布补丁后， 管理员会进行评估， 以确定补丁适用于他们的系统。 例如，
用 于修复配置 了 DNS 服务器的 Unix. 系 统漏洞的补丁， 经评估不适用于配置 了 DNS 服务器的
Windows 系统。 类似地， 如果 Windows 系统中 的某个功能被禁用 ， 则用于修补该功能的补丁也同样
不 需要了。
测试补丁: 管理员随时都要测试单一系统的补丁， 以确定该补丁不会带来其他副作用。 最糟糕
的情况就是， 当使用补丁后， 系统无法启动 。 例如， 修补程序经常会引起系统开始无休止的重新启
动周期。 它们引发一个停止错误， 并重复尝试重新启动后从错误中恢复。 如果在单一系统上进行测
试， 那么只影响一个系统。 然而， 如果组织将未测试的补丁程序应用到一千台计算机上， 就可能会
有灾难性的结果 。
第 16 章 管理安全运营
注意 :
较小的组织往往不会 自 行评估 、 测试和批准补丁 ， 而是采用 一种 自 动化的方法来应用补丁 。
Windows 系统包括 Wmdows 更新， 这使得 自 动史新补丁变得简单。 然而， 更大的组织通常选择 自 己
控制 整个过程 ， 以 防止更新过程的意外 中 断。
批准补丁: 管理员测试补丁并确定其安全性后 ， 就会批准补丁的部署。 批准程序中 常用到变更
管理过程(在本章前面叙述过)。
部署补丁: 经过测试和批准， 管理员部署补丁。 许多组织使用 自动化的方法部署补丁。 自动化
方法可 以 是第三方产品或由软件供应商提供。
确认补丁己部署 : 部署补丁后， 管理员定期测试和审计系统， 以确保系统补丁仍然有效。 许多
部署工具都有审计系统的功能。 此外， 许多漏洞评估工具也具有检查系统的功能， 以确保随时有合
适的补丁。
补丁星期二和漏洞星期三
微软经常在每月 的第二个星期二发布补丁 ， 通常被称为补丁 星期二。 固 定的时间 能够帮助管理
员 做计划 ， 以使他们有足够的 时间去测试和部署补丁。 许多 与微软有合作的组织在星期二友布补丁
之前收到补丁版本通知。 一些补丁很重要， 微软会有 "例外"。 换句话说， 微软会提早发布补丁， 而
不是等到 下 个星期二。
攻击者发现很多 组织并没有立即修补补丁。 一些攻击者会逆向补丁 ， 用 来确定有潜在的漏洞 ，
然后使用 某些方法来利用 漏洞。 这些攻击者一般会在星期二发布补丁之后的一天之内 完成动作， 所
以 就有了词组 "漏洞 星期二"
然而， 许多 攻击者都是在厂商发布补丁之后 的几周 、 几月 甚至几年之后才破解未安装补丁的 系
统。 换句话说， 许多 系 统仍然没有安装补丁 ， 攻击者也是在供应商发布补丁之后超过一天的时间之
后 才破解补丁。例如， 衍生软在 2008 年 10 月 份发布 了 一个修补名 为 Conficker 的漏洞的补丁。 Conficker
含有许多 恶意功能， 是很大的威胁。 然而， 到 2011 年， 在全球范 围 内 ， 仍有 1 80 多 万 台 电脑感染 了
Conficker ， 这意味着至少这些计算机都没有 更新补丁 以修补漏洞。
1 6.5.2 漏洞管理
漏洞管理是指定期检测漏洞， 评估并采取相应措施来减少相关风险。 但消除风险是不可能的。
同样， 也不可能消除漏洞 。 然而， 有效的漏洞管理程序能够帮助组织定期检测评估漏洞， 并及时修