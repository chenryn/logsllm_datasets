Blockchain Security:  
From Curves to Contracts 
Dr. Jimmy Chen, IKV & NTU 
Alex Liu, AMIS & MaiCoin 
HITCON Pacific 2016 
Aspects of Security 
• ECDSA for Transaction Signing (including hardware signing) 
• Hash Function Collision Resistance  
• Privacy Preserving Features (Zero-Knowledge Proofs) 
• Consensus Algorithms 
• Smart Contract Correctness 
2 
Introduction to Blockchain 
3 
Source: http://technews.tw/2016/04/10/blockchain-applied-on-wall-street 
4 
Source: http://finance.technews.tw/2016/04/12/blockchain-bank-fintech 
5 
Source: https://kknews.cc/tech/m4kmbp.html 
6 
7 
http://coinmarketcap.com 
Elliptic Curve  椭圆曲线 
• The rich and deep theory of Elliptic Curves has been studied by 
mathematicians over 150 years 
• Elliptic Curve over R : y2 = x3 + ax + b  
Point Addition 
Image Courtesy:  http://www.embedded.com/design/safety-and-security/4396040/An-Introduction-to-Elliptic-Curve-Cryptography  
Point Doubling 
8 
Curves over Prime Fields  质数体上的曲线 
9 
Addition:  
  (x3, y3) = (x1, y1) + (x2, y2) 
Doubling:  
  (x3, y3) = [2] (x1, y1)  
2
1
2
1
2
1
1
2
3
1
2
3
1
3
1
mod
3
mod
2
  mod 
(
)
  mod 
y
y
p
x
x
s
x
a
p
y
x
s
x
x
p
y
s x
x
y
p
(addition)
(doubling)
9 
G(5,6) 
2G 
3G 
4G 
5G 
6G 
7G 
8G 
9G 
10G 
11G 
12G 
13G 
14G 
15G 
16G 
17G 
18G 
19G 
20G 
21G 
22G 
23G 
24G 
25G 
27G 
26G 
30G 
28G 
29G 
The Curve used by Bitcoin  and  Ethereum 
椭圆曲线 secp256k1 
https://en.bitcoin.it/wiki/Secp256k1 
256-bit prime 
256-bit prime 
10 
Key Pairs 金钥对 
• The base point G is fixed on the given Elliptic Curve 
• P = [m] G 
• Given m, it is easy and fast to find the point P 
• Using “double and add” for scalar multiplication 
• Given P, it is extremely hard to find the integer m 
• Elliptic Curve Discrete Logarithm Problem (椭圆曲线离散对数问题) 
• A randomly generated integer m is a private key 
• A private key is used to sign Bitcoin transactions with ECDSA 
• The point  P is the public key corresponding to m 
• A public key is used by other nodes to verify Bitcoin transactions 
• A Bitcoin address is the hash value of a public key P 
11 
Bitcoin Transactions 交易 
12 
Must be protected very well!!! 
http://bitcoin.org/bitcoin.pdf  中本聪 
Hash Functions  杂凑函数 
• An efficient function mapping binary strings of arbitrary length to 
binary strings of fixed length, called the hash-value or hash-code 
(also fingerprint or checksum) 
13 
Cryptographic Hash Functions  密码杂凑函数 
• H  is a function with one-way property 
(pre-image resistance) if given any  y, it is 
computationally infeasible to find any value  
x  in the domain of  H  such that  H(x) = y 
• H  is collision free (resistant) if it is 
computationally infeasible to find  x'  x  
such that  H(x' ) = H(x) 
• H  is a cryptographic hash function if 
• H  has one-way property 
• H  is collision free 
14 
SHA: Secure Hash Algorithm 
• Cryptographic hash functions published by the National Institute of Standards 
and Technology (NIST) as a U.S. Federal Information Processing Standard (FIPS) 
15 
Algorithm and variant 
Output size 
(bits) 
Internal state 
size (bits) 
Block size 
(bits) 
Rounds 
Bitwise 
operations 
Security (bits) 
SHA-1     FIPS 180 
160 
160 
512 
80 
and, or, add, 
xor, rot 
Theoretical 
attack (261) 
SHA-2 
FIPS 180 
SHA-224 
SHA-256 
224 
256 
256 
(8  32) 
512 
64 
and, or, xor, 
shr, rot, add 
112 
128 
SHA-384 
SHA-512 
SHA-512/224 
SHA-512/256 
384 
512 
224 
256 
512 
(8  64) 
1024 
80 
and, or, xor, 
shr, rot, add 
192 
256 
112 
128 
SHA-3 
FIPS 202 
SHA3-224 
SHA3-256 
SHA3-384 
SHA3-512 
224 
256 
384 
512 
1600 
(5  5  64) 
1152 
1088 
832 
576 
24 
and, xor,   
rot, not 
112 
128 
192 
256 
https://en.wikipedia.org/wiki/Secure_Hash_Algorithm 
Bitcoin 
Ethereum 
(Keccak 256) 
Merkle Tree / Hash Tree 
16 
Block 
Merkle 
Root 
http://commons.wikimedia.org/wiki/File:MerkleTree1.jpg  
Block Chain 
17 
Mining 挖矿 
http://bitcoin.org/bitcoin.pdf  中本聪 
Cryptowise Security 
18 
ECDSA: Choice of Two Curves  
• Secp256k1 (Bitcoin and Ethereum) 
• Secp256r1 (NIST P-256; parameters chosen by NSA) 
Source: http://blog.enuma.io/update/2016/11/01/a-tale-of-two-curves-hardware-signing-for-ethereum.html 
19 
Possible Back Doors (per IEEE P1363) 
Source: Bernstein, Daniel J., Lange, Tanja, “Security Dangers of the NIST Curves.” 
20 
ECDSA Signing  签章 
21 
k : ephemeral key 
http://en.wikipedia.org/wiki/Elliptic_Curve_DSA  
ECDSA Verification  验章  
22 
http://en.wikipedia.org/wiki/Elliptic_Curve_DSA  
Ephemeral Key & RNG 
• The entropy, secrecy, and uniqueness of the DSA / ECDSA random 
ephemeral key k is critical  
• Violating any one of the above three requirements can reveal the entire private key to 
an attacker 
• Using the same value twice (even while keeping k secret), using a predictable value, or 
leaking even a few bits of k in each of several signatures, is enough to break DSA / ECDSA 
• [December 2010]  The ECDSA private key used by Sony to sign 
software for the PlayStation 3 game console was recovered, 
because Sony implemented k as static instead of random 
23 
Ephemeral Key & RNG 
• [August 2013]  Bugs in some implementations of the Java class SecureRandom 
sometimes generated collisions in k, allowing in stealing bitcoins from the 
containing wallet on Android app 
• [August 2013] 158 accounts had used the same signature nonces r  value in 
more than one signature. The total remaining balance across all 158 accounts 
is only 0.00031217 BTC. The address, 1HKywxiL4JziqXrzLKhmB6a74ma6kxbSDj, 
appears to have stolen bitcoins from 10 of these addresses. This account made 
11 transactions between March and October 2013. These transactions have 
netted this account over 59 bitcoins. 
• This issue can be prevented by deriving k deterministically from the private key 
and the message hash, as described by RFC 6979 
24 
http://www.theregister.co.uk/2013/08/12/android_bug_batters_bitcoin_wallets      http://eprint.iacr.org/2013/734.pdf 
Side-Channel Attacks  旁通道攻击 
25 
D (double) or A (add) depends on the bits of Private Key 
Image Courtesy  https://eprint.iacr.org/2015/354.pdf 
ECDSA Key Extraction from Mobile Devices  
26 
Sourse: https://www.tau.ac.il/~tromer/mobilesc 
Fully extract secret signing keys from OpenSSL and CoreBitcoin running on iOS devices. 
CoolWallet for Hardware Signing 
27 
英飞凌  Infineon  
SLE97 安全晶片 
Quantum Resistant Suite 
• In August, 2015, NSA announced that it is planning to transition "in 
the not too distant future" to a new cipher suite that is resistant to 
quantum attacks.  
• NSA advised: "For those partners and vendors that have not yet 
made the transition to Suite B algorithms, we recommend not 
making a significant expenditure to do so at this point but instead to 
prepare for the upcoming quantum resistant algorithm transition.“ 
• Prediction: Post-Quantum blockchains are appearing soon 
28 
https://en.wikipedia.org/wiki/NSA_Suite_B_Cryptography 
Collision Resistance of SHA-2, -3 Hash Functions 
• Blockchains depend on collision-resistant hash functions such as 
SHA-2 and SHA-3 for consensus (proof of work), wallet generation, 
and transaction signing. A successful pre-image attack would be a 
serious problem. 
• What is the chance of a successful pre-image attack on SHA-2 and 
SHA-3 with the help of quantum computation? 
• Attacks on both functions require on the order of 2128 queries in a 
quantum block-box model, hence suggesting than an attack is 275 
billion times more expensive than a simple query analysis would 
suggest.  
Source: Amy, Di Matteo, Gheorghiu, et. al., “Estimating the Cost of Generic Quantum Pre-Image Attacks on SHA-2 and SHA-3.”  
29 
Zero-Knowledge Proofs for Blockchain Privacy  
Source: Ben-Sasson, Chiesa, Garman, et. al., “Zerocash: Decentralized Anonymous Payment from Bitcoin.” 
30 
Non-Crytpowise Security 
31 
Consensus Algorithms  
• Consensus tolerating Byzantine failures must satisfy: 
• Termination – every correct process decides some value. 
• Validity – if all correct processes propose the same value v, then all correct 
processes decide v. 
• Integrity – if a correct process decides v, then v must have been proposed by 
some correct process. 
• Agreement – every correct process must agree on the same value. 
Sources:  Lamport, L., Shostak, R., Pease, M., “The Byzantine Generals Problem.” 
Castro, M., Liskov, B., “Practical Byzantine Fault Tolerance and Proactive Recovery.” 
32 
A Comparison of Consensus Algorithms 
• Decentralized Control – anyone is able to participate and no central authority dictates whose 
approval is required for consensus. 
• Low Latency – consensus can be reached in a few seconds. 
• Flexible Trust – users have the freedom to trust any combination of parties they see fit. 
• Asymptotic Security – safety rests on digital signatures and hash families whose parameters can 
be tuned to protect against adversaries with unlimited computing power. 
Algorithm 
Decentralized 
Control 
Low Latency 
Flexible Trust 
Asymptotic 
Security 
Proof of Work 
✔ 
Proof of Stake 
✔ 
maybe 
maybe 
PBFT 
✔ 
✔ 
✔ 
Tendermint 
✔ 
✔ 
✔ 
Source: Mazieres, David, “The Stellar Consensus Protocol: A Federated Model for Internet-level Consensus.” 
33 
Smart Contract Failures 
34 
The DAO Reentrancy Bug 
Source: Jentzsch, Christoph, “Smart Contract Security and Decentralized Governance.” 
35 
Establishing Security Patterns 
36 
Smart Contract Governance 
37 
Smart Contract Security Conclusions 
• Practice prudent design (invariants, coverage, formal verification) 
• Defense in depth (cap transaction amount, time delays, circuit 
breakers) 
• Design escape hatches (updateable contracts, multisig rescue) 
 Keep smart contracts simple (only decentralize what absolutely 
needs to be decentralized). We are still in the early days. 
38 
Miscellaneous Blockchain Exploits 
• DAO Reentrancy Bug (>$60 million loss) – mitigated by hard fork, time 
delays 
• Bitfinex Compromise (>$60 million loss) – advanced persistent threat 
• Mt. Gox (>$400 million loss) – insider incompetence/fraud 
• Bitstamp ($5 million loss) – social engineering 
• Bitcoinica ($2 million loss) – insider incompetence/fraud 
• Many others totaling over $1 billion in losses 
39 
Thank you! 
40 
Image Courtesy  https://www.ethereum.org/ether