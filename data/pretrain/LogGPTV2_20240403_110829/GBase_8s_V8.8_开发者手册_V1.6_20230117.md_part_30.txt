"1234@abc";
针对该用户的对象，系统管理员和拥有CREATEROLE属性的安全管理员在未经其授权
前，只能进行控制操作（DROP、ALTER、TRUNCATE），无权进行INSERT、DELETE、
SELECT、UPDATE、COPY、GRANT、REVOKE、ALTEROWNER操作。
PG_STATISTIC系统表和PG_STATISTIC_EXT系统表存储了统计对象的一些敏感信息，
如高频值MCV。系统管理员仍然可以通过访问这两张系统表，得到私有用户所属表的统计
信息里的这些信息。
永久用户
GBase8s提供永久用户方案，即创建具有PERSISTENCE属性的永久用户。
gbase=#CREATEUSERuser_persistenceWITHPERSISTENCEIDENTIFIEDBY
"1234@abc";
只允许初始用户创建、修改和删除具有PERSISTENCE属性的永久用户。
7.2.5 角色
角色是一组用户的集合。通过GRANT把角色授予用户后，用户即具有了角色的所有权
南大通用数据技术股份有限公司
165
GBase 8s V8.8开发者手册
限。推荐使用角色进行高效权限分配。例如，可以为设计、开发和维护人员创建不同的角色，
将角色GRANT给用户后，再向每个角色中的用户授予其工作所需数据的差异权限。在角色
级别授予或撤消权限时，这些更改将作用到角色下的所有成员。
GBase8s提供了一个隐式定义的拥有所有角色的组PUBLIC，所有创建的用户和角色默
认拥有PUBLIC所拥有的权限。关于PUBLIC默认拥有的权限请参考《GBase8sV8.8_SQL
手册》GRANT。要撤销或重新授予用户和角色对PUBLIC 的权限， 可通过在GRANT和
REVOKE指定关键字PUBLIC实现。
要查看所有角色，请查询系统表PG_ROLES：
SELECT*FROM PG_ROLES;
创建、修改和删除角色
非三权分立时，只有系统管理员和具有CREATEROLE属性的用户才能创建、修改或删
除角色。三权分立下，只有初始用户和具有CREATEROLE属性的用户才能创建、修改或删
除角色。
 要创建角色，请使用《GBase8sV8.8_SQL手册》 CREATEROLE。
 要在现有角色中添加或删除用户，请使用《GBase8sV8.8_SQL手册》 ALTERROLE。
 要删除角色，请使用《GBase8sV8.8_SQL手册》DROPROLE。DROPROLE只会删除
角色，并不会删除角色中的成员用户帐户。
内置角色
GBase8s提供了一组默认角色，以gs_role_开头命名。它们提供对特定的、通常需要高
权限的操作的访问，可以将这些角色GRANT给数据库内的其他用户或角色，让这些用户能
够使用特定的功能。在授予这些角色时应当非常小心，以确保它们被用在需要的地方。表
7-11描述了内置角色允许的权限范围：
表 7-11 内置角色权限描述
角色 权限描述
gs_role_copy_files 具有执行 copy … to/from filename 的权限，但需要先打开
GUC参数enable_copy_server_files。
gs_role_signal 具有调用函数 pg_cancel_backend、pg_terminate_backend 和
pg_terminate_session来取消或终止其他会话的权限，但不能
_backend
操作属于初始用户和PERSISTENCE用户的会话。
南大通用数据技术股份有限公司
166
GBase 8s V8.8开发者手册
gs_role_tablespace 具有创建表空间（tablespace）的权限。
gs_role_replication 具有调用逻辑复制相关函数的权限，例如 kill_snapshot、
pg_create_logical_replication_slot 、
pg_create_physical_replication_slot、pg_drop_replication_slot、
pg_replication_slot_advance 、
pg_create_physical_replication_slot_extern 、
pg_logical_slot_get_changes、pg_logical_slot_peek_changes、
pg_logical_slot_get_binary_changes 、
pg_logical_slot_peek_binary_changes。
gs_role_account_lock 具有加解锁用户的权限，但不能加解锁初始用户和
PERSISTENCE用户。
gs_role_pldebugger 具有执行dbe_pldebugger下调试函数的权限。
gs_role_directory_create 具有执行创建directory对象的权限，但需要先打开GUC参
数enable_access_server_directory。
gs_role_directory_drop 具有执行删除directory对象的权限，但需要先打开GUC参
数enable_access_server_directory。
关于内置角色的管理有如下约束：
 以gs_role_开头的角色名作为数据库的内置角色保留名，禁止新建以“gs_role_” 开头的
用户/角色，也禁止将已有的用户/角色重命名为以“gs_role_”开头；
 禁止对内置角色的ALTER和DROP操作；
 内置角色默认没有LOGIN权限，不设预置密码；
 gsql元命令\du和\dg不显示内置角色的相关信息，但若显示指定了pattern为特定内置
角色则会显示。
 三权分立关闭时，初始用户、具有 SYSADMIN 权限的用户和具有内置角色 ADMIN
OPTION权限的用户有权对内置角色执行GRANT/REVOKE管理。三权分立打开 时，
初始用户和具有内置角色 ADMIN OPTION 权限的用户有权对内置角色执行
GRANT/REVOKE管理。例如：
GRANTgs_role_signal_backendTOuser1;
REVOKEgs_role_signal_backendFROMuser1;
南大通用数据技术股份有限公司
167
GBase 8s V8.8开发者手册
7.2.6 Schema
Schema又称作模式。通过管理Schema，允许多个用户使用同一数据库而不相互干 扰，
可以将数据库对象组织成易于管理的逻辑组，同时便于将第三方应用添加到相应的Schema
下而不引起冲突。
每个数据库包含一个或多个Schema。数据库中的每个Schema包含表和其他类型的对
象。数据库创建初始，默认具有一个名为public的Schema，且所有用户都拥有此Schema
的usage权限，只有系统管理员和初始化用户可以在public Schema下创建函数、存储过程
和同义词对象，其他用户即使赋予create权限后也不可以创建上述三种对 象。可以通过
Schema分组数据库对象。Schema类似于操作系统目录，但Schema不能嵌套。默认只有初
始化用户可以在pg_catalog模式下创建对象。
相同的数据库对象名称可以应用在同一数据库的不同Schema中，而没有冲突。例如，
a_schema和b_schema都可以包含名为mytable的表。具有所需权限的用户可以访问数据库
的多个Schema中的对象。
通过CREATEUSER创建用户的同时，系统会在执行该命令的数据库中，为该用户创
建一个同名的SCHEMA。
数据库对象是创建在数据库搜索路径中的第一个Schema内的。有关默认情况下的第一
个Schema情况及如何变更Schema顺序等更多信息，请参见搜索路径。
创建、修改和删除Schema
要创建Schema，请使用《GBase8sV8.8_SQL手册》 CREATESCHEMA。默认初始用
户和系统管理员可以创建Schema，其他用户需要具备数据库的CREATE权限才可以在该数
据库中创建Schema，赋权方式请参考《GBase8sV8.8_SQL手册》 GRANT中将数据库的
访问权限赋予指定的用户或角色中的语法。
 要更改Schema名称或者所有者，请使用《GBase8sV8.8_SQL手册》ALTERSCHEMA。
Schema所有者可以更改Schema。
 要删除Schema及其对象，请使用《GBase8sV8.8_SQL手册》DROPSCHEMA。Schema
所有者可以删除Schema。
 要在Schema内创建表，请以schema_name.table_name格式创建表。不指定schema_name
时，对象默认创建到搜索路径中的第一个Schema内。
 要查看Schema所有者，请对系统表PG_NAMESPACE和PG_USER执行如下关联查询。
语句中的schema_name请替换为实际要查找的Schema名称。
南大通用数据技术股份有限公司
168
GBase 8s V8.8开发者手册
gbase=#SELECTs.nspname,u.usenameASnspownerFROMpg_namespaces,pg_useru
WHEREnspname='schema_name'ANDs.nspowner=u.usesysid;
 要查看所有Schema的列表，请查询PG_NAMESPACE系统表。
gbase=#SELECT*FROMpg_namespace;
 要查看属于某Schema下的表列表，请查询系统视图PG_TABLES。例如，以下查询会
返回SchemaPG_CATALOG中的表列表。
gbase=#SELECT*FROMpg_namespace;
搜索路径
搜索路径定义在search_path参数中，参数取值形式为采用逗号分隔的Schema名称列表。
如果创建对象时未指定目标Schema，则该对象会被添加到搜索路径中列出的第一个Schema
中。当不同Schema中存在同名的对象时，查询对象未指定Schema的情况 下，将从搜索路
径中包含该对象的第一个Schema中返回对象。
 要查看当前搜索路径，请使用《GBase8sV8.8_SQL手册》 SHOW。
gbase=#SHOWSEARCH_PATH;
search_path
----------------
"$user",public(1row)
search_path参数的默认值为："$user",public。$user表示与当前会话用户名同名的Schema
名，如果这样的模式不存在，$user将被忽略。所以默认情况下，用户连接数据库后，
如果数据库下存在同名Schema，则对象会添加到同名Schema 下，否则对象被添加到
PublicSchema下。
 要更改当前会话的默认Schema，请使用SET命令。
执行如下命令将搜索路径设置为myschema、public，首先搜索myschema。
gbase=#SETSEARCH_PATHTOmyschema,public;
SET
7.2.7 用户权限设置
 给用户直接授予某对象的权限，请使用《GBase8sV8.8_SQL手册》 GRANT。
将Schema中的表或者视图对象授权给其他用户或角色时，需要将表或视图所属Schema
的USAGE权限同时授予该用户或角色。否则用户或角色将只能看到这些对象的名称，
并不能实际进行对象访问。
南大通用数据技术股份有限公司
169
GBase 8s V8.8开发者手册
例如，下面示例将Schematpcds的权限赋给用户joe后，将表tpcds.web_returns的select
权限赋给用户joe。
gbase=#GRANTUSAGEONSCHEMAtpcdsTOjoe;
gbase=#GRANTSELECTONTABLEtpcds.web_returnstojoe;
 给用户指定角色，使用户继承角色所拥有的对象权限
 创建角色。
新建一个角色lily，同时给角色指定系统权限CREATEDB：
gbase=#CREATEROLElilyWITHCREATEDBPASSWORD"xxxxxxxxx";
 给角色赋予对象权限，请使用《GBase8sV8.8_SQL手册》 GRANT。
例如，将模式tpcds的权限赋给角色lily后，将表tpcds.web_returns的select权限赋给角
色lily。
gbase=#GRANTUSAGEONSCHEMAtpcdsTOlily;
gbase=#GRANTSELECTONTABLEtpcds.web_returnstolily;
 将角色的权限赋予用户。
gbase=#GRANTlilytojoe;
当将角色的权限赋予用户时，角色的属性并不会传递到用户。
 回收用户权限，请使用《GBase8sV8.8_SQL手册》 REVOKE。
7.2.8 行级访问控制
行级访问控制特性将数据库访问控制精确到数据表行级别，使数据库达到行级访问控制
的能力。不同用户执行相同的SQL查询操作，读取到的结果是不同的。
用户可以在数据表创建行访问控制(RowLevelSecurity)策略，该策略是指针对特定数据
库用户、特定SQL操作生效的表达式。当数据库用户对数据表访问时，若SQL满足数据表
特定的 Row Level Security 策略，在查询优化阶段将满足条件的表达式，按照属性
(PERMISSIVE|RESTRICTIVE)类型，通过AND或OR方式拼接，应用到执行计划上。
行级访问控制的目的是控制表中行级数据可见性，通过在数据表上预定义Filter，在查
询优化阶段将满足条件的表达式应用到执行计划上，影响最终的执行结果。当前受影响的
SQL语句包括SELECT，UPDATE，DELETE。
南大通用数据技术股份有限公司
170
GBase 8s V8.8开发者手册
示例：某表中汇总了不同用户的数据，但是不同用户只能查看自身相关的数据信息，不
能查看其他用户的数据信息。
--创建用户alice,bob,peter
gbase=#CREATEUSERalicePASSWORD'xxxxxxxxx';
gbase=#CREATEUSERbobPASSWORD'xxxxxxxxx';
gbase=#CREATEUSERpeterPASSWORD'xxxxxxxxx';
--创建表all_data，包含不同用户数据信息
gbase=#CREATETABLEall_data(idint,rolevarchar(100),datavarchar(100));
--向数据表插入数据
gbase=#INSERTINTOall_dataVALUES(1,'alice','alicedata');
gbase=#INSERTINTOall_dataVALUES(2,'bob','bobdata');
gbase=#INSERTINTOall_dataVALUES(3,'peter','peterdata');
--将表all_data的读取权限赋予alice，bob和peter用户
gbase=#GRANTSELECTONall_dataTOalice,bob,peter;
--打开行访问控制策略开关
gbase=#ALTERTABLEall_dataENABLEROWLEVELSECURITY;
--创建行访问控制策略，当前用户只能查看用户自身的数据
gbase=#CREATEROWLEVELSECURITYPOLICYall_data_rlsONall_dataUSING(role=
CURRENT_USER);
--查看表详细信息
gbase=#\d+all_data
Table"public.all_data"
Column| Type|Modifiers|Storage|Statstarget|Description
--------+------------------------+-----------+----------+--------------+-------------
USING(((role)::name="current_user"()))HasOIDs:no
LocationNodes:ALLDATANODES
Options:orientation=row,compression=no,enable_rowsecurity=true
--切换至用户alice，执行SQL"SELECT*FROMpublic.all_data"
gbase=>SELECT*FROMpublic.all_data;
id|role|data
----+-------+------------
1|alice|alicedata(1row)
gbase=>EXPLAIN(COSTSOFF)SELECT*FROMpublic.all_data;QUERYPLAN
----------------------------------------------------------------
Streaming(type:GATHER)Node/s:Alldatanodes
->SeqScanonall_data
Filter:((role)::name='alice'::name)
Notice:Thisqueryisinfluencedbyrowlevelsecurityfeature(5rows)
--切换至用户peter，执行SQL"SELECT*FROMpublic.all_data"
gbase=>SELECT*FROMpublic.all_data;
id|role|data
南大通用数据技术股份有限公司
171
GBase 8s V8.8开发者手册
----+-------+------------
3|peter|peterdata(1row)
gbase=>EXPLAIN(COSTSOFF)SELECT*FROMpublic.all_data;QUERYPLAN
----------------------------------------------------------------
Streaming(type:GATHER)Node/s:Alldatanodes
->SeqScanonall_data
Filter:((role)::name='peter'::name)
Notice:Thisqueryisinfluencedbyrowlevelsecurityfeature(5rows)
PG_STATISTIC系统表和PG_STATISTIC_EXT系统表存储了统计对象的一些敏感信息，
如高频值MCV。若创建行级访问控制后，将这两张系统表的查询权限授予普通用户，则普
通用户仍然可以通过访问这两张系统表，得到统计对象里的这些信息。
7.2.9 设置安全策略
7.2.9.1 设置账户安全策略
背景信息
GBase8s为帐户提供了自动锁定和解锁帐户、手动锁定和解锁异常帐户和删除不再使用
的帐户等一系列的安全措施，保证数据安全。
自动锁定和解锁账户
 为了保证帐户安全，如果用户输入密码次数超过一定次数（failed_login_attempts），系
统将自动锁定该帐户，默认值为10。次数设置越小越安全，但是在使用过程中会带来
不便。
 当帐户被锁定时间超过设定值（password_lock_time），则当前帐户自动解锁， 默认值
为1天。时间设置越长越安全，但是在使用过程中会带来不便。
说明
 参数password_lock_time的整数部分表示天数，小数部分可以换算成时、分、秒。
 当 failed_login_attempts 设 置 为 0 时 ， 表 示 不 限 制 密 码 错 误 次 数 。 当
password_lock_time设置为0时，表示即使超过密码错误次数限制导致帐户锁定，
也会在短时间内自动解锁。因此，只有两个配置参数都为正数时，才可以进行常规
的密码失败检查、帐户锁定和解锁操作。
南大通用数据技术股份有限公司
172
GBase 8s V8.8开发者手册
 这两个参数的默认值都符合安全标准，用户可以根据需要重新设置参数，提高安全
等级。建议用户使用默认值。
配置failed_login_attempts参数。
1. 以操作系统用户gbase登录数据库主节点。
2. 使用如下命令连接数据库。
gsql-dpostgres-p15432
postgres为需要连接的数据库名称，15432为数据库主节点的端口号。连接成功后，系
统显示类似如下信息：
gsql((GBase8s3.0.0BXXbuildd28887c9)compiledat2022-05-1311:31:40commit0lastmr
55)
Non-SSLconnection(SSLconnectionisrecommendedwhenrequiringhigh-security)Type
"help"forhelp.
gbase=#
3. 查看已配置的参数。
gbase=#SHOWfailed_login_attempts;
failed_login_attempts
-----------------------
10