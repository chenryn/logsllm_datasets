title:Network level footprints of facebook applications
author:Atif Nazir and
Saqib Raza and
Dhruv Gupta and
Chen-Nee Chuah and
Balachander Krishnamurthy
Network Level Footprints of Facebook Applications
Atif Nazir, Saqib Raza, Dhruv Gupta,
{anazir,sraza,dhgupta,chuah}@ucdavis.edu
Chen-Nee Chuah
University of California–Davis
CA, USA
Balachander Krishnamurthy
AT&T Labs–Research
NJ, USA
PI:EMAIL
ABSTRACT
With over half a billion users, Online Social Networks (OSNs) are
the major new applications on the Internet. Little information is
available on the network impact of OSNs, although there is every
expectation that the volume and diversity of trafﬁc due to OSNs is
set to explode. In this paper, we examine the speciﬁc role played by
a key component of OSNs: the extremely popular and widespread
set of third-party applications on some of the most popular OSNs.
With over 81,000 third-party applications on Facebook alone, their
impact is hard to predict and even harder to study.
We have developed and launched a number of Facebook appli-
cations, all of which are among the most popular applications on
Facebook in active use by several million users monthly. Through
our applications, we are able to gather, analyze, correlate, and re-
port their workload characteristics and performance from the per-
spective of the application servers. Coupled with PlanetLab exper-
iments, where active probes are sent through Facebook to access a
set of diverse applications, we are able to study how Facebook for-
warding/processing of requests/responses impacts the overall de-
lay performance perceived by end-users. These insights help pro-
vide guidelines for OSNs and application developers. We have also
made the data studied here publicly available to the research com-
munity. This is the ﬁrst and only known study of popular third-
party applications on OSNs at this depth.
Categories and Subject Descriptors
C.2.0 [Computer - Communication Networks]: General; H.4.3 [In-
formation Systems Applications]: Communications Applications
General Terms
Measurement
Keywords
Online Social Networks, Social Games, Facebook, Applications,
Platform, Delays
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
1.
INTRODUCTION
Online social networking sites command over half a billion users.
Sites such as Facebook, LinkedIn, MySpace, Flickr, and Twitter al-
low users to seek out friends and interact with them in different
ways. Besides providing basic communication capabilities (email,
instant messaging, and bulletin board writing), some sites also pro-
vide other genre of applications such as sharing documents, send-
ing virtual gifts, or gaming. The type and number of applications
became unbounded, as popular sites such as Facebook and MyS-
pace opened up their Developer Platforms, allowing external devel-
opers to create and launch their own applications. Facebook alone
has over 81,000 third-party applications [14].
The open-API model on OSN sites, and the increasing popular-
ity of these third-party applications, can have a profound impact
on the Internet. OSNs act as distribution platforms that re-direct
trafﬁc between their users and third-party application servers. Each
application generates additional trafﬁc between existing users and
increases workload ﬂowing through the associated OSNs. This
may be compounded by potential upsurge in the number of new
users, contributing to a spiral growth. Facebook’s site trafﬁc in-
creased by 30% in the week following the launch of its developer
platform [10], while Twitter observed trafﬁc increase by a factor
of twenty after opening up its API [7]. Although OSN trafﬁc vol-
ume in bytes is still relatively small compared to P2P networks,
new OSN applications that allow uploading of videos would eas-
ily change the Internet trafﬁc landscape again. These factors pose
new challenges in managing trafﬁc growth from a network infras-
tructure perspective, especially considering server costs are a major
source of headache for large social sites such as Facebook1. A bet-
ter understanding of OSN applications as a new workload is thus
critical and overdue.
Last year, we studied application-level user behavior on third-
party applications and their users on Facebook [8]. This paper
focuses exclusively on the network-level effects of popular third-
party applications on Facebook, which has over 150 million monthly
active users (MAU)2, and is thus an ideal candidate for just such a
study. We perform a comprehensive measurement study from the
perspective of third-party applications—an unstudied, interesting,
rapidly growing, and diverse part of the OSN landscape. We shed
light on the components of interactions between OSN users and
third-party applications through the OSN platform, which is treated
as a black box due to the lack of access to proprietary information
about their internal design details. The key performance metric is
end-to-end delay perceived by users, which depends on three main
components: (a) the geographical distribution of users and their ac-
1http://gigaom.com/2008/05/11/the-rising-cost-of-facebook-
infrastructure/
2http://www.insidefacebook.com/2009/01/23
63cess speeds, (b) processing speed and overhead of OSNs, and (c)
bandwidth and processing speed of application servers. One open
question we seek to answer is whether the overheads incurred by
Facebook and application developers constitute a signiﬁcant por-
tion of the end-to-end delays. The answer is needed by both Face-
book and application developers for design decisions (e.g., provi-
sioning strategies), given that their main revenue source is adver-
tisements, which are added into the pages rendered to users, intro-
ducing further overheads.
We use an integrated measurement methodology, which com-
bines active tracing from client side with passive measurements at
application servers, to infer interactions through Facebook and esti-
mate various network-level as well as data processing and queuing
delays in user-application interactions. Designing such a measure-
ment study is a challenging task: unlike the typical run-of-the-mill
client-server interaction study on the Web, this involves correlating
observations at multiple intermediary components. To better ap-
preciate the complexity and challenges involved, consider the OSN
framework shown in Figure 1. There are three main players: the
client, the OSN, and the third-party application server. The client
can be an OSN user anywhere on the globe, with varying access
speed and browser rendering capabilities. The OSN may serve the
client’s requests from a server farm or CDNs. The third-party ap-
plication servers are also geographically distributed with different
server capabilities. No single entity controls how users running
an OSN application are served. This makes predictions of perfor-
mance impact very difﬁcult.
Our ﬁrst contribution is a detailed and thorough measurement
methodology that encompasses all angles, by collecting data at the
application server, and by sending probes through an OSN from
numerous vantage points (synthetic clients). We exploit the Face-
book open developer platform by becoming one of the players and
launching a set of third-party applications. We managed to amass
a considerable user-base for all of the applications we launched, of
which three applications have achieved more than 1 million MAU
at the time of this study, which the other three achieved between 10
thousand to 500 thousand MAU. To provide a reference point, we
characterize how our applications are similar to or different from
the 200 most used Facebook applications. We analyze network
traces, as well as application server logs, which are then correlated
to perform self-validations of phenomena observed at application
servers. We also conduct a large number of experiments using Plan-
etLab nodes to model the popular usage cases (as observed in our
traces), as well as hypothetical scenarios, where users request con-
tent with varying properties. Our comprehensive data allows us
to make inferences on the dynamic interactions between users and
Facebook through the third-party applications.
The second contribution of the paper is the characterization of
various delays involved in user and Facebook third-party applica-
tion interactions—the ﬁrst-of-its-kind large-scale study. We demon-
strate how the proposed methodology allows us to test our hypoth-
esis about various provisioning strategies at Facebook and applica-
tion servers. In particular, we address the following questions:
∙ Do external developers of popular and viral applications need
exorbitantly high resources to serve content to users? While on-
server processing requirements may vary for different applications,
we report our ﬁndings with regards to other constituents of delays
at application servers. For example, request queuing delays are
small and stable, response sizes do not vary across time-of-day, etc.
For our applications, even non-exorbitant resources are sufﬁcient to
support viral application growth.
∙ How much do Facebook request forwarding and response pro-
cessing delays affect user experience? How is this overhead af-
fected by the type and size of user content? We found that Face-
book processing contributes a signiﬁcant portion of the overall de-
lay experienced by a typical user accessing third-party applications,
ranging from 44.4% of 1.7s total delay in case of a less-popular ap-
plication to 68.8% of 2.21s total delay for the most popular one
that we study. We measured how this overhead varies with dif-
ferent type and amount of content that needs to be rendered using
PlanetLab experiments. For example, the presence of Javascript in
application responses adds substantial delay as Facebook performs
additional checks to ﬁlter malicious content.
∙ What are the possible provisioning strategies at OSNs like
Facebook? Does Facebook segregate user data according to user
characteristics such as country, network or number of friends? Does
it provision resources differently for third-party applications, or
differentiate user requests based on properties such as geographi-
cal locations? Given the vast amount of resources at Facebook, and
especially due to the extensive use of caching, our results showed
that Facebook serves user requests generally without preferential
treatment (even by locality of request origin).
Based on our study, we conclude that Facebook is well provi-
sioned, even for viral applications. However, signiﬁcant impact ex-
ists on user experiences due to geographical location, which can be
resolved by either locating the data center and application servers
closer to users, and/or avoiding frequent setup and tear down of
HTTP connections that incurs multiple long RTTs. The technical
accuracy of this paper has been veriﬁed through high-ranking mem-
bers of the Facebook Platform team through private conversations,
and recent actions by the same team serve as a public acknowl-
edgement of the issues highlighted in this paper3. We also provide
insights aimed to improve resource utilization for application de-
velopers, and have made the data studied here publicly available to
the research community4.
The rest of the paper is structured as follows. Section 2 out-
lines related work, and Section 3 describes the Facebook developer
platform architecture and a typical session invoking third-party ap-
plications. The proposed measurement methodology is described
in Section 4.
In Section 5, we present the characteristics of the
workload from the perspective of the application server and analyze
how load impacts the queuing/processing delays. In Section 6, we
analyze delay perceived by Facebook clients based on PlanetLab
experiments and infer the Facebook forwarding/processing delays.
Section 7 discusses lessons learnt from our measurement study and
implications of our ﬁndings on third-party application design and
for Facebook. Section 8 concludes the paper.
2. RELATED WORK
Online social networks have become increasingly popular over
the last few years. Accordingly, there has also been an increase in
research on analysis of OSNs [6]. While some researchers have fo-
cused on graph theoretic properties of social networks [4,8,9], oth-
ers have analyzed the usage patterns of individual networks [1, 3].
Another recent work [9] focused on the graph theoretic properties
of large OSNs such as YouTube, Flickr, and Orkut. Some works
have also focused on privacy and security in OSNs [5].
Retention of users and virality are crucial to growth and survival
of large online social networks, and consequently there has been
great momentum towards social third-party applications. Facebook
pioneered this space by opening its Platform to third-party develop-
ers for on-site applications, and has most recently expanded itself
to mobile platforms such as the iPhone through Facebook Connect.
3http://developers.facebook.com/news.php?blog=1&story=222
4http://www.ece.ucdavis.edu/rubinet/data.html
641. Login
2 *. I n
u t
u t p
u t/ O
p
3*. Input/Output
4. Logout
User
#. Input/Output
OSN
Internal
OSN Application
2a*. Store/Retrieve
r
* .  S t o
b
3
Third Party
OSN Application
e / R
#a. Store/Retrieve
External 
Application
e
v
e tri e
3b*. Store/Retrieve
OSN Database
3a*. Store/Retrieve
Third Party OSN
Application Server(s)
Figure 1: An OSN framework illustrating interactions between users, OSN, and external as well as third-party applications.
It was imperative, then, that several recent studies focused on one
particular OSN, namely Facebook.
A newly published study on characterization of Facebook appli-
cations [2] uses proﬁle crawling to explore the high-level character-
istics of application users on Facebook, as well as growth patterns
of applications using publicly available usage statistics from Ado-
nomics. Another important study [3] on messaging activity inside
Facebook highlights Facebook-speciﬁc characteristics such as reg-
ularities in daily and weekly trafﬁc, and its relation to the use of
Facebook by a select demographic (college students).
We previously studied a number of user behavior-related mea-
surements on three of our highly popular gaming and non-gaming
Facebook third-party applications [10]. In particular, we empha-
sized the distinction between user behavior on gaming versus non-
gaming applications.
Note that all known previous works that analyze OSN-based ap-
plications (especially [10]) have mainly focused on studying user
behavior and trafﬁc patterns. We go one step beyond these existing
studies by analyzing activity data from several third-party applica-
tions on Facebook that we have access to. Given the increasing
popularity of OSN applications, it is crucial to understand their im-
pact on the current Internet. We believe that this work is a ﬁrst at-
tempt to measure and characterize this new Internet workload, and
the components of interactions between users and these third-party
applications. We focus on investigating factors that impact end-
user experience, thus providing insights to third-party application
developers and OSNs.
3. OSN APPLICATION FRAMEWORK
The OSN application framework is depicted in Figure 1, show-
ing the three different types of applications, i.e., internal, external,
and third-party applications. Third-party applications are charac-
terized by the presence of the OSN server as an intermediary for
all communication (shown by the solid lines in Figure 1) between
the client and the application server. A client forwards a request to
the OSN server, which forwards it to the application server. The
application server then sends the response back to the OSN server,
which then relays to the client. The focus of our paper is to investi-
gate network level effects of such third-party applications.
The sequence of interactions in a typical user session is shown in
Client
OSN Server
APP Server
Page View Request Sent
Page View Request
Forwarded
P a g e   V i e w   R e s p o n s e   S e n t
P a g e   V i e w   R e s p o n s e  
F o r w a r d e d
HTTP Ping
OSN Request 
Forwarding Delay (df)
App. Server Request 
Queuing Delay (dq)
App. Server Request 
Processing Delay (dp)
OSN Response 
Processing Delay (dg)
Client Response 
Rendering Delay (dr)
Response 
Wait 
Time (dw)
t1
t2
t3
t4
t5
t6
t7
t8
t9
t10
t11
Figure 2: Sequence of interactions between Client-OSN-
Application, along with delays incurred at each step.
Figure 2. In addition to the network transmission and propagation
delays, there are two major categories of delays: a) those seen at
the application server, and b) those seen at the OSN server.
The application server delays consist of two components:
1. App. Server Request Queuing Delay (𝑑𝑞 = 𝑡5 − 𝑡4): 𝑑𝑞 is
the amount of time a request is queued at the network layer
before being passed to the application layer for processing.
2. App. Server Request Processing Delay (𝑑𝑝 = 𝑡6 − 𝑡5): 𝑑𝑝 is
the amount of time the application server takes to generate
a response for a request. Typically, a major constituent of
𝑑𝑝 is delay incurred in executing database queries to gener-
ate dynamic HTML content. Also, note that while 𝑑𝑞 may
decrease with an increase in number of web servers, 𝑑𝑝 will
remain unaffected.
The OSN server delays include the following:
1. OSN Server Request Forwarding Delay (𝑑𝑓 = 𝑡3 − 𝑡2): 𝑑𝑓
is the amount of time the OSN server takes to pre-process
the request received from the user and convert it to be for-
warded to the application server. The OSN server will typi-
cally process a request to add user-related information to it.
65For instance, Facebook includes a list of IDs for the user’s
friends in the forwarded request. The OSN server may also
perform certain bookkeeping tasks and security checks. We,
however, are not privy to all the tasks undertaken before a
request is forwarded by an OSN.
2. OSN Server Response Processing Delay (𝑑𝑔 = 𝑡8 − 𝑡7): 𝑑𝑔
is the amount of time the OSN server takes to post-process
a response sent by the application server and convert it to a
response that can be forwarded to the user. A response for-
warded by the application server typically has placeholders
for content that the OSN server populates by retrieving in-
formation from the OSN database. As for 𝑑𝑓 , 𝑑𝑔 is likely to
include time taken for additional bookkeeping and security
tasks that we are not privy to.
The delay components 𝑡2 − 𝑡1, 𝑡4 − 𝑡3, 𝑡7 − 𝑡6, and 𝑡9 − 𝑡8 rep-
resent connection setup overheads, and network transmission and
propagation delays for interactions between the user, OSN server,
and the application server.
4. MEASUREMENT METHODOLOGY
Section 1 discussed the need for data from multiple vantage points
to study them, while Section 3 discussed the different intermediate
stages of interaction between a client and a third-party OSN ap-
plication. We developed and launched a set of third party appli-
cations on Facebook (Section 4.1), and carried out extensive pas-
sive and active measurements using these applications. Section 4.2
describes the information extracted from the network traces and
application-layer logs collected at the application servers. We also
designed and implemented several PlanetLab experiments to col-
lect data from the clients’ perspective (Section 4.3).
4.1 Selected Third Party Applications
We launched six Facebook applications5 that achieved varying
popularity and maturity (i.e., duration of deployment and user base).