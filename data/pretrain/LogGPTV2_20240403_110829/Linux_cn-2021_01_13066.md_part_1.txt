---
author: Redhat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 10226
date: '2021-01-30 11:08:04'
editorchoice: false
excerpt: C 语言和 UNIX 是现代计算的根基。我们这一季介绍的许多语言都与 C 语言有关，或者至少受到 C 语言的影响。但是 UNIX 和 C 都只是贝尔实验室Bell
  Labs的几个开发人员作为秘密计划项目创造出来两个成果而已。
fromurl: https://www.redhat.com/en/command-line-heroes/season-3/the-c-change
id: 13066
islctt: true
largepic: /data/attachment/album/202101/30/110804k0doyzrqjqfoybny.png
permalink: /article-13066-1.html
pic: /data/attachment/album/202101/30/110804k0doyzrqjqfoybny.png.thumb.jpg
related:
- displayorder: 0
  raid: 13027
reviewer: Northurland, wxy
selector: bestony
summary: C 语言和 UNIX 是现代计算的根基。我们这一季介绍的许多语言都与 C 语言有关，或者至少受到 C 语言的影响。但是 UNIX 和 C 都只是贝尔实验室Bell
  Labs的几个开发人员作为秘密计划项目创造出来两个成果而已。
tags:
- C语言
- UNIX
- 代码英雄
thumb: false
title: 《代码英雄》第三季（8）：C 语言之巨变
titlepic: true
translator: QwQ2000
updated: '2021-01-30 11:08:04'
---
> 
> 代码英雄讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
> 
> 
> 
> 
> **什么是《代码英雄》**
> 
> 
>  代码英雄   Command Line Heroes 是世界领先的企业开源软件解决方案供应商红帽（Red Hat）精心制作的原创音频播客，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。该音频博客邀请到了谷歌、NASA 等重量级企业的众多技术大牛共同讲述开源、操作系统、容器、DevOps、混合云等发展过程中的动人故事。
> 
> 
> 
![](/data/attachment/album/202101/30/110804k0doyzrqjqfoybny.png)
本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[《代码英雄》第三季（8）：C 语言之巨变](https://www.redhat.com/en/command-line-heroes/season-3/the-c-change)的[音频](https://cdn.simplecast.com/audio/a88fbe/a88fbe81-5614-4834-8a78-24c287debbe6/3d99eb43-d06f-489e-928b-d73157459e67/CLH_S3_E8_The_C_Change_v0_1_tc.mp3)脚本。
> 
> 导语：C 语言和 UNIX 是现代计算的根基。我们这一季介绍的许多语言都与 C 语言有关，或者至少受到 C 语言的影响。但是 UNIX 和 C 都只是 贝尔实验室   Bell Labs 的几个开发人员作为秘密计划项目创造出来两个成果而已。
> 
> 
> 贝尔实验室是二十世纪中期的一个创新中心。Jon Gertner 将其描述为一个“创意工厂”。他们在二十世纪 60 年代最大的项目之一是帮助建立一个名为 Multics 的 分时   time-sharing 操作系统。Joy Lisi Rankin 博士解释了当时关于分时系统的一些宣传，它被描述为有可能使计算成为一种公共服务。大型团队投入了数年的精力来构建 Multics —— 但这并不是他们所希望的成果。贝尔实验室在 1969 年正式远离了分时系统。但正如 Andrew Tanenbaum 所描述的那样，一个由英雄组成的小团队还是坚持了下来。C 语言和 UNIX 就是这样的结果。他们并不知道他们的工作会对技术的发展产生多大的影响。
> 
> 
> 
> 
> **00:00:00 - 发言人 1**：
> 
> 
> 我们掀起了新一波的研究浪潮。我们的创造力正在延伸。
> 
> 
> **00:00:10 - 发言人 2**：
> 
> 
> 噪音、噪音。
> 
> 
> **00:00:13 - 发言人 1**：
> 
> 
> 这些人是贝尔电话实验室的设计工程师。
> 
> 
> 
**00:00:16 - Saron Yitbarek**：
在上世纪 60 年代，坐落于新泽西州默里山的贝尔实验室，是科技革新的中心。在那里，我们的未来科技迈出了第一步。在那里，贝尔实验室发明了激光与晶体管，它还是信息论的摇篮。在 1968 年，贝尔实验室的四名程序员创造了一种极具开拓性的工具，它根本地改变了我们世界运行的方式，也标志着贝尔实验室的种种创新达到了新的高峰。
**00:00:53**：
我是 Saron Yitbarek，这里是《代码英雄》—— 一款来自红帽公司的原创播客。在一整季的节目中，我们追寻着编程语言世界中最具影响力的一些故事，现在，我们终于迎来了这一季的结尾。我认为，我们把最好的故事留到了最后。这个故事中的编程语言使本季中提到的其他编程语言成为了可能。在正好 50 年以前，C 语言在贝尔实验室被设计出来，这是一种非常基础的通用程序设计语言。它是如此的基础，以至于我们有时候都会忘记，C 语言的发明是多么意义深远的成就。
**00:01:35**：
为了得到事件的全貌，我们需要回到上世纪 60 年代，正好在 C 语言的诞生之前。那是一个一切似乎都有可能的时代。
**00:01:46 - Jon Gertner**：
在上世纪 60 年代，贝尔实验室简直是研究人员的世外桃源。在今天，已经很难找到与贝尔实验室相似的企业研发实验室了。
**00:01:56 - Saron Yitbarek**：
这是 Jon Gertner，他是《 创意工厂：贝尔实验室与美国革新大时代   The Idea Factory: Bell Labs and the Great Age of American Innovation 》的作者。我们采访了 Jon，让他大家解释当时贝尔实验室的情况。为什么在上世纪 60 年代，贝尔实验室能够成为他所说的“创意工厂”呢？
**00:02:15 - Jon Gertner**：
我想今天我们都相信——“竞争带来伟大的科技革新”，但是我不能确定这种观点的正确性，并且，其实，贝尔实验室的成就在一定程度上是与这种观点相悖的。贝尔实验室的工程师和科学家们并没有特别大的压力，但是与此同时，由于贝尔实验室在诸多的研究实验室中的地位，它又确实可以雇佣到最优秀、最聪明的研究者，并给他们足够的时间去研究感兴趣的问题，同时提供大量的资助。如果你能证明你的研究项目符合这家电话公司（LCTT 译注：指 AT&T）的目标和理念，你就能够得到经费。
**00:03:00 - Saron Yitbarek**：
而 Jon 强调，虽然贝尔实验室是一个商业公司的产物，但它的价值观还是比较接近学术界的。通过让员工自行决定工作方式及内容，贝尔实验室实践了类似于开源社区的开放式领导原则。
**00:03:19 - Jon Gertner**：
这是诸如苹果、谷歌与微软这样的大公司出现前的时代。计算机的历史更多的聚焦在西海岸，聚焦于 自制计算机俱乐部   Homebrew Computer Clum 这样的组织，以及从其中发展而出的企业；但是我认为贝尔实验室和那些企业一样重要。贝尔实验室坐落于一个现在看来几乎不可思议的地方：新泽西的郊区。但是，这里曾聚集了对科技突破做出了巨大贡献的科学家、研究者和计算机工程师，他们的研究成果对全世界都有惊天动地般的显著影响。
**00:03:54 - Saron Yitbarek**：
“ 分时   time-sharing ”就是这些惊天动地的项目之一。它的核心概念很简单，实现难度却极大。他们能构建一个能够同时由成百上千的用户使用的操作系统吗？这样的发明将会使当时的计算机领域为之震动。从 1964 年起，贝尔实验室的天才们，与 通用电气   General Electric 和麻省理工学院（MIT）合作，试图集体推进这项工作的进展。实际上，麻省理工学院在一年前已经有了相关的研究项目，即 MAC 计划   Project MAC ；但是现在，所有这些顶级团队已经团结起来，开始着手钻研大型主机分时操作系统的构建方式。
**00:04:40**：
实际上早在 1959 年， 约翰·麦卡锡   John McCarthy 就提出了分时操作系统的概念。请收听我们 [第七集](/article-13027-1.html) 的节目获知更多细节。他设想了一种可以在多个用户之间切换其“注意力”的大型计算机。麦卡锡认定，这样的一种机器有潜力极大地拓展现有的计算机文化。让我们来设想一下吧，如果一千名用户能够同时在一台机器上工作，你就完成了对整个编程与计算机世界的民主化。现在，这支群星荟萃的团队准备着手将麦卡锡的梦想变成现实，并为他们想象中的操作系统起了一个名字 —— Multics（LCTT 译注：Multi- 前缀代表“多人的”）。
**00:05:23**：
Multics 团队为分时操作系统进行了多年的工作，但是该项目遇到了严重的资金困难，并且在十年之后，项目仍然看不到尽头。雪上加霜的是，项目的领导者 Bill Baker 是一个化学家，对贝尔实验室的计算机科学部门并不感兴趣。除此之外，我们仍然能找到一个新的问题 —— 自尊心问题。
**00:05:46 - Jon Gertner**：
在贝尔实验室，人们每天习以为常的一件事情就是独自工作。我的意思是，贝尔实验室的人们有一种感觉：他们认为自己拥有一切他们所需要的的人才和构思，并且拥有最先进的科技，当他们遇到值得解决的问题时，他们有能力去解决这样的问题。这种看法可能有一定合理性；但是 Multics 项目在贝尔实验室没有进展，在某种程度上也可能是因为像这样更加复杂的、合作性的工作在贝尔实验室的体系中运转不良，也不能让那里的高管们满意。
**00:06:20 - Saron Yitbarek**：
Jon Gertner 是 《创意工厂》   The Idea Factory 一书的作者，他刚刚发表的新书是 《世界尽头的冰》   The Ice at the End of the World 。
**00:06:32**：