www.TopSage.com
---
## Page 16
公网
做这类工作时你会寻求更专门的工具，例如铁趟、锯子、夹钳或创刀等，同理，当你在○m1
解决程序化问题时，使用专门的软件工具会比较好。
这是给谁看的书
这本书是写给那些在UNIX环境下发现必须写些ShelI脚本，以利于工作进行的计算机
用户与软件开发人员。例如，你可能是正在念计算科学的学生，手上有学校给你的第一
个UNIX系统账号，你想知道在UNIX下更多的东西，例如你的Windows个人计算机无
法处理的那些工作（这种情况下，你通常得写几个脚本来定制个人环境）。或者，你可
能是个系统管理新手，需要为公司或学校写几个专用程序（可能是处理事件日志文件，
账号、账单管理之类的事情）.你也可能是MacOS的开发老手，但转到薪新的MacOS
X的世界，它的安装程序是以Shell脚本写成。不管你来自哪里，如果你想学Shell脚本，
这本书就是写给你的，在这本书里你能学到：
软件工具设计概念与原则
一些好的软件工具设计与实例上的实践规则，我们会解释这些原则，还会在这本书
里贯彻执行。
UNIX工具是什么
UNIX的核心工具组会在我们编写Shel1脚本时不断地重复使用。我们会介绍Shell
与正则表达式的基本概念，并在解决特定问题时展现各种核心工具的用法。除了
介绍工具能做什么之外，我们还会告诉你，为什么要使这个工具，为什么它有这些
特殊选项。
《LearningUNIX》这本书是在介绍UNIX系统，让你从对UNIX毫无经验成长为
会基本操作的用户。《UNIXinaNutshell》这本书则是广泛地介绍UNIX工具包，
对于使用时机与特定工具用法的介绍很少。我们的目的就在弥补这两本书之间的鸿
沟：如何灵活运用这些UNIX提供的工具包，让工作更顺畅，更有效率，也更从容
（我们的期望）。
如何结合所有工具，完成工作
编写Shell脚本时，其实会是“整体的功能比各部分加起来的总和还强大”。Shell
的使用就像整合个别工具的黏着剂，让你只要花点心思，就能得到惊人的效果。
标准工具几个常见的扩展
如果你已经是GNU/Linux或BSD系统的用户，很可能你的工具还有其他额外的、
好用的功能或选项。这部分我们也会介绍。
不可或缺的非标准工具
有些程序，在大部分传统的UNIX系统里并非“标准的”，但我们又不能没有它。我
们会在适当的地方介绍它们，也会提供使用时机的相关信息。
www.TopSage.com
---
## Page 17
前言
对长期使用UNIX的开发人员与管理者来说，软件工具的设计原则一直没有什么改变。
因此，推广的书籍虽然还算堪用，但已经20年未更新了，甚至更久！UNIX系统在这些
书写成之后，有了许多变动。因此，我们觉得是更新这些想法的时候了，我们利用这些
工具的现行版本、在现行系统下展示范例。下面是我们将要强调的部分：
所有的呈现是以POSIX为基础，POSIX为一系列描述可移植操作系统环境的标准
正式名称的缩写。POSIX标准是开发人员的挑战，他们必须兼顾程序与Shell脚本
在不同厂商所提供的各种平台上的可移植性，我们将在最新的POSIX标准下展现
Shell语言、各个工具程序及其选项。
该标唯的官方名称为IEEEStd.1003.1-2001（注3），它包括数个可选用的部分，
最重要的一个就是X/Open SystemInterface.（XSI）规格。这些功能文件详细描述
了UNIX系统长久以来的行为模式，我们会介绍现行标准与早期1992标准间的差
异，也会提供与XSI相关的特点。要了解UNIX相关标准，hrtp://www.UNIX.org/
（注4）是一个很好的起点。
Single UNIX Specification 的官方网站为hrrp://www.UNIX.org/version3/。该标准
可在线访问，不过得先到hrzp://www.UNIX.org/version3/online.html注册。
有时，该标准会将特殊行为模式保留为未定义（unspecified）。这是为了能让厂商
以扩展的方式支持该行为，例如：额外的功能与标准本身未做成文件的部分。
除了告诉你如何执行特定程序外，我们还会强调这些程序存在的原因，及它们能解
决什么问题。了解为什么会有这样的程序，有助于你进一步了解它的使用时机与方
式。
大部分的程序都提供了相当多的选项组合，但通常只有一小部分是日常工作用得上
的。这类程序，我们会让你知道它的哪些选项较方便好用。事实上，我们无法追及
每个程序的所有选项，未提及的部分，你可以通过程序的使用手册或其他参考书
籍, 例如 {UNIX in a Nutshell) (O'Reilly) 与 《Linux in a NutShel1) (O'Reilly),
来了解它。
在你看完这本书之后，你不仅能了解UNIX工具集，还能吸收到UNIX的中心思想与软
件工具设计的原则。
注 31
该标准的2004版在本书内文点定后才发表，对季习Shel1脚本而言，2001与2004间的
差异并不重要。
注4：有美IEEEStd.1003.1-2001的常元技术性问著（FAQ）文件，你义评可以在hrtp:/
www.opengroup.org/austin/papers/posix_faq.htmi 找到。与标准有美的后台如识，则在
http://ww.opengroup.org/austin/papers/backgrounder.html 中 
www.TopSage.com
---
## Page 18
D
前言
你应该先有什么基础
我们认为读者应该了解以下背最知识：
如何登录UNIX系统
如何在命令行上执行程序
如何做一个简单的命令管道，与使用简单的输出/入重定向，例如
·如何以&将程序放到后台执行
·如何建立与编辑文件
如何使用chmod，将脚本设为可执行权限
再者，如果你想试着操作本书范例，在你的终端机（或终端机模拟器）下达命令时，我
们建议你使用POSIX兼容的Shell，例如ksh93的最新版本，或bash的近期版本。请
特别注意：商用UNIX系统上的/bin/sh可能并非完全兼容于POSIX。
ksh93、bash与zsh的下载网址请见第14章。
各章介绍
我们建议你依序阅读本书，因为每个章节都与前面章节息息相关。我们在此逐章介绍如
下。
第1章，背景知识
此处提供简短的UNIX历史沿革。特别是贝尔实验室的运算环境，也就是UNIX开
发的地方，激发了许多软件工具设计上的暂学。该章还会介绍这些原则，并在本书
中贯得执行。
第2章，人门
该章从编译语言与脚本语言间的取舍开始讨论。之后再介绍两个相当简单但很实用
的Shell脚本程序。涵盖范围包括了命令、选项、参数、Shell变量、echo与printf
的输出、基本输入/输出重定向、命令查找、从脚本里访问参数以及执行跟踪。最
第3章，查找与替换
这里会介绍以正则表达式进行文字查找（或比对）.我们还会说明修改与提取文字
的操作。这些都是最基本的Shell脚本编写的操作。
www.TopSage.com
---
## Page 19
前言
第4章，文本处理工具
Sage.com
该章介绍的是一些文字处理的软件工具，这些在Shell脚本编写时，都会一再地使
用。其中最重要的两个就是sort与uniq，在重组与降低数据量上，它们扮演很重
要的角色。本章还会带你看看如何重新编排段落、计算文字单位、显示文件以及取
出文件的前几行、后几行数据。
第5章，管道的神奇魔力
该章以几个小型脚本为例，展示结合简单的UNIX工具程序能够产生更强大、更灵
活的工具。本章的内容采取cookbook（问题描述与解决方案）的形式，它们共同
第6章，变量、判断、重复动作
这章介绍Shell语言里不可或缺的部分。包含了Shell变量与算法、退出状态的重要
概念、如何判断，以及Shell循环的处理。最后以Shell的函数作结束。
第7章，输入/输出、文件与命令执行
该章为Shell描述的另一章，也是结尾，重点放在输人/输出、Shell所执行的各种
替换、加引1号、命令行执行顺序，以及Shell内置命令上。
第8章，产生脚本
我们在这里会示范如何结合UNIX的工具以处理更复杂的文本处理工作，本章的程
序比第5章的还大，但仍是几分钟便能消化掉。甚至它们所完成的工作，如果使用
传统的程序语言，例如C、C++或Java来做，会很困难。
第9章，awk的惊人表现
该章介绍的是awk语言必备的组成部分。awk是一套功能强大且自给自足的语言。
而awk程序更可用来与其他软件工具箱里的其他程序相结合，以执行简单的数据提
取、处理与格式编排工作。
第10章，文件处理
该章介绍了处理文件的几个主要工具。包括列出文件、产生临时文件，以及利用指
定标准寻找文件的find命令，另外还有两个与磁盘空间有关的重要命令，以及比
较文件间异同的几个程序。
第11章，扩展实例：合并用户数据库
将所有东西串起来，解决既有趣又难易适中的挑战性工作。
第12章，拼写检查
该章利用拼写检查的问题，展现如何以数种方式解决它，这里展现了原始的UNIX
Shell脚本管道以及两个小型的脚本：ispel1与aspell命令，可自由下载，它们
更适用于批处理的拼写检查工作。我们以awk写了一个大小适当的拼写检查程序，
充分展现使用该语言的简单利落。
www.TopSage.com
---
## Page 20
前言
第13章，进程
该章将重点从文本处理的领域转到工作（job）与系统管理上。我们介绍了几个用
于管理进程的必备工具，还有sleeD命令，这在脚本需要等待某些事发生时很有
用，另外则是其他一些用于延迟的标准工具，或修正日期时间命令的处理。最重要
的是，该章也包括了trap命令，它可以让Shell脚本控制UNIX的信号。
第14章，Shell可移植性议题与扩展
这里介绍的是一些更有用的扩展，可使用于ksh与bash之下，而非POSIX。一
般情况下，你都能安心地将这些护展套用在你的脚本里。该章还会带你看几个
“gotchas”，这是等待粗心大意的Shell脚本编写者跳入的陷阱。内容包括了在编写
脚本时该注意的事项，还有在执行时可能出现的矛盾。除此之外，还包括有ksh与
bash的下载与安装。该章最后会探讨各种不同的Shell实现间，Shell初始化与终
结的差异，
第15章，安全的Shell脚本：起点
该章会租略介绍编写Shel1脚本时的安全性议题。
附录A，编写手册页
该附录讲的是如何编写手册页，这个必备的技术，在传统的UNIX的书籍里常被忽
路，
附录B，文件与文件系统
这个附录会介绍UNIX的字节数据流文件系统模型，并与较复杂的文件系统对照，
然后解释其简洁的好处。
附录C，重要的UNIX命令
该附录提供了许多UNIX命令的列表。建议你了解这些命令，它们可以增强你的能
力。
参考书目
这是UNIX的Shell脚本编写的其他资料来源，
本书惯例
我们假设你已经知道，输人Shell命令时，最后会按下Enter。Enter在某些键盘上被表
示为Return。
提到Ctrl-X时，X指的是任意字母，是在你按住Ctrl（或Ctl，或Control）之后，接着
按下的键。虽然我们这里用的是大写，不过你在按这个字每的时候无须按住Shift键。
其他特殊字符有换行符号（同于Ctrl-J）、Backspace（同于Ctrl-H）、Esc、Tab，与Del
（有时被标示为Delete或Rubout）。
www.TopSage.com
---
## Page 21
前言
本书使用下列字体惯例：
斜体（Italic）
用在电子邮件地址、IntermetURL、使用手册的引用。还用以表示参数，表示你在
使用时，可以将它置换为你要的实际值，以及为范例提供说明性文字。
等宽字体（ConstantWidth）
提及UNIX文件名、扩展与内置命令、命令选项时，我们就会用到这个字体。除此
之外，变量名称、Shell关键字、选项、函数、文件名结尾、范例中显示文件内容
或命令的输出，以及当命令行或输入范例存在于正规文字中时，我们也会以等宽字
体表示。简而言之，任何与计算机使用相关的，我们都用这个字体。
粗体等宽字体（ConatantWidth Bold）
这种字体用以区分比对文字中的正则表达式与Shell通配字符样式，在范例中，显
示用户与Shell间的互动，我们也会使用这个字体，所有用户应键人的，我们都以
粗体等宽字体显示，像这样：
$ pud
/home/tolatoy/novela/w+p
用户输人这个
系统显示这个
斜体等宽字体（Constantwidthitalic)
这个字体是用在范例与内文中，需置换为正确值的命令行参数上。例如：
$ od directory
注章：表示快窍、建议或一般注意事项，
警告：表示馨告与提踢。
参照UNIXUser's Manual时，我们会使用标准形式：nGme(N），name为命令名称，而
N为 section编号（通常是1），也就是寻找信息的地方。例如grep（1）即grep的Section
1的手册页。参考文件我们使用man page，或直接简写为manpage。
UNIX系统调用与C程序库，我们都这么写：open（）、Drintf（）。你可以使用man命
令，查看这两者的manpage：
$ nan open
查看open(2)的manpage
$ san printf
查看 printf (3)的 manpage
当我们要介绍一个程序时，就使用下面的方式，显示在正文附近，说明该工具程序与它
的重要选项、语法与用途。
www.TopSage.com
---
## Page 22
10
前高
范例
OP
Sage
语泌
vhizprog (options ... 1 [arguments ...]
说明如何执行这里指出的whizprog命令。
用途
说明此程序存在的目的。
主要选项
列出此程序每天要用到的重要选项。
行为模式
概括程序所做的事。
营告
所有要注意的事全在这。
程序码范例
于用户或程序员直接应用于日常工作上，我们非常鼓励你修改与强化这些范例。
本书所提供的程序代码，都公开在GNU General PublicLicense（GPL）条款下，允许
程序复制、再利用与编修，请参阅范例包括的COPYING文件，了解许可权的实际条款。
代码可从原书网站获得：hrrp:/www.oreilly.com/catalog/shellsrpig/index.html。
我们会感谢你在使用程序码范例时注明出处，但这并非必要。这通常包括标题、作者、
出版商与 ISBN,例如：《Classic Shell Scripting》，作者Arnold Robbins 与 Nelson H.F.
Beebe。版权所有2005O'Reilly Media,Inc.，ISBN为0-596-00595-4。
Windows系统下的UNIX工具程序
很多的程序员初次接触UNIX系统后，再回到个人计算机的世界，常会希望也有一个像
UNIX那样好用的环境（特别是在面对难以处理的MS-DOS命令行时），所以会有UNIX
Shell式的界面出现在一些小型计算机的操作系统上，也不是什么奇怪的事。