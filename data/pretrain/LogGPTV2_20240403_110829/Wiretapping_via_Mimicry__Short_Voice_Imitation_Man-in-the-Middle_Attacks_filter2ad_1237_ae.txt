sion and group count conversion, we did not evaluate group count
conversion, and rely on the result of Numeric SAS morphing and
reordering attack to prove effectiveness of this attack.
Open-Ended Feedback: As part of the survey, we also requested
the participants to provide open ended feedback as to how they
found the experiment overall. Majority of the participants felt that
recognizing even a familiar voice is difﬁcult and confusing. Some
of them believed it is the background noise in the recordings that
makes the recognition task difﬁcult. The answers to the open-
ended question in these series of question such as, “In noisy data,
it is more difﬁcult to compare the tracks.”, or “Challenging” and
“Confusing” show that people ﬁnd it difﬁcult to recognize familiar
voices especially in the presence of some background noise, which
may be common in telephonic VoIP conversion.
Video-Audio Synchronization Test: Our ﬁnal question in the
survey was designed to test the effectiveness of video SAS, i.e.,
whether users can detect the asynchrony between the forged ver-
bal SAS and the lip movement associated with the original SAS
in the video stream. For example, under our voice MITM attacks,
the audio SAS may be “1234” but the lip movement in the video
may correspond to “8604”. If the users can detect the presence of
this asynchrony, the attack could be detected. We recorded a one-
minute video of a person and later replaced part of the audio on this
recording with a different SAS from another recording of the same
speaker. We asked participants to watch the video and provide their
opinion about the quality and the genuineness of the video. Only
two participants, recognized the mismatch between the audio and
video, while others found the video to be "genuine", "excellent",
and "good". This experiments shows that even the use of the video
channel would be vulnerable to the audio MITM attack.
Study Limitations: Two attack variants, three SAS types, and
Yes/No conversions, and video SAS, had to be included in the sur-
vey. Moreover, in our speaker identiﬁcation questionnaire, partici-
pants had to listen to three additional recordings of a person (prob-
ably multiple times) to get familiar with the voice. Therefore, to
keep the survey concise, we limited ourselves to play one or two
samples of each of the attacks. While ideally more samples would
give a better judgment, it would also make the survey long, and may
reduce the user experience and accuracy. Furthermore, in quality
test, results seem biased due to the deﬁnition of “quality”. The core
idea was to rate “genuineness” of the recordings, while peoples’
answers seemed affected by the parameters such as noise and loud-
ness. Finally, all the samples were drawn from US English, while
the ﬁrst language of a majority of participants was not English (Ta-
ble 2). The familiarity with English might affect the result. To our
knowledge, most Cfone applications are developed in English, so
we did not perform a language-centric study.
5.3 Delay of the Attack
The voice MITM attack naturally introduces a delay associated
with the MITM attack on the non-voice, non-SAS channel com-
munication, and with the voice impersonation on the SAS channel
communication. Prior work [54] shows that MITM attack on non-
voice channel can be efﬁciently performed and therefore we focus
on the delay related to the SAS voice impersonation. The dominat-
ing delay in voice impersonation could be because of the keyword
spotting procedures Therefore it is critical to analyze the spotting
delay in our attack implementation (discussed in Section 4).
Using simpler grammars (i.e. the SAS conﬁrmation phrases) can
improve the keyword spotting method. In ofﬂine keyword spotting
(such as the one that we used), duration of each stored audio ﬁle
can affect the performance, since we are running the RTP receiver
and the keyword spotter in parallel. So if the duration of the stored
audio ﬁle is less than the execution of keyword spotting method, no
delay would be introduced by the keyword spotter.
We evaluated execution time of the attack with different keyword
spotting grammar sizes and different duration of the audio ﬁle in
ofﬂine keyword spotting. Table 5 summarizes our attack timing ex-
Table 4: Results of subjective evaluation for different attacks and SAS types. TP (row 1, column 1) and TN (row 2, column 1) show answers to
benign setting (instances that are successful or not successful in detecting a familiar voice). FP (row 1, column 2-4) and FN (row 2, column 2-4) show
effectiveness of each attack (naive different voice attack; reordering and morphing attacks). Higher FP (lower FN) shows more powerful attack.
Accuracy is the accuracy of Cfones under different attacks (lower values show the system is not working well under the attack). FDR represents the
overall effectiveness of the attacks (higher values mean better attack).
Detected as: Yes
Detected as: No
Accuracy
FDR
Detected as: Yes
Detected as: No
Accuracy
FDR
Presented Numeric SAS voice
Original Different Morphed
61.25%
57.50%
14.52%
85.48% 38.75%
42.50%
48.13%
71.49%
20.16%
51.58%
Reordered
87.50%
12.50%
35.00%
60.34%
Presented 16-Bit Madlib SAS voice
Original Different Morphed
51.39%
21.67%
50.83%
78.33% 48.61%
49.17%
49.72%
64.58%
29.89%
50.27%
Reordered
81.67%
18.33%
34.58%
61.64%
Detected as: Yes
Detected as: No
Accuracy
FDR
Detected as: Yes
Detected as: No
Accuracy
FDR
Presented 16-Bit PGP SAS voice
Original Different Morphed
50.00%
51.67%
17.71%
82.29% 50.00%
48.33%
50.83%
66.98%
25.53%
49.18%
Reordered
68.75%
31.25%
41.46%
57.09%
Aggregated Rates on All SAS Types
Original Different Morphed
50.58%
17.96%
55.42%
82.87% 49.42%
44.58%
52.42%
68.86%
24.48%
47.72%
Reordered
78.23%
21.77%
38.59%
58.53%
Table 5: Attack Timing (highlighted cells denote only cases where delay is introduced by the attack: ﬁle duration < attack duration)
# Words in Grammar
Audio File Duration (s)
Average Attack Duration (s)
10
1
1.28
10
3
1.63
10
5
2.04
10
10
2.08
20
1
1.48
20
3
1.86
20
5
2.26
20
10
2.35
256
1
3.15
256
3
4.5
256
5
6.59
256
10
9.38
periment. Number of words in the grammar is deﬁned as 10 words
for numerical SAS, 256 for 16-bit PGP word list and Madlibs, and
20 words for SAS conﬁrmation phrases. For an audio recording
with an average length of 3 and 5 seconds, and a grammar of 10
and 20 words, the attack duration is computed to be less than the
audio recording duration itself, and therefore the attack does not
introduce any delay in such cases. For a longer grammar of 256
words, the keyword spotting produces an average delay of less than
2 seconds, for an audio ﬁle of 1, 3 and 5 seconds. However, im-
portantly, for all tested grammar sizes, the attack does not produce
any delay if the ofﬂine keyword spotter stores and processes 10 sec-
ond audio ﬁle. Grey-colored columns show the combinations that
introduce delay.
As mentioned earlier, in cases the delay exists in our attack, it is
mostly due to keyword spotting, particularly because the keyword
spotter is looking for the SAS in the current ﬁle as well as a 1s ﬁle
created by concatenating the current ﬁle and the previous ﬁle (to
ﬁnd those SAS that are distributed in two ﬁles). Real-time keyword
spotters such as [21, 48] might be helpful in further improving the
performance of the attack in such cases.
6. DISCUSSION AND SUMMARY
Evaluation Summary: Our objective evaluation shows that the
distortion between the original SAS and morphed SAS increases
with the size of the SAS. In other words, shorter SAS values show
less distortion, which means that shorter forged SAS are more sim-
ilar to the original SAS, and they would be more difﬁcult to distin-
guish (and more prone to our attacks). This supports our hypothesis
that short voice impersonation is easier for the attacker (harder for
the users to detect) compared to long speech impersonation. We
also observed that if attacker voice is similar to the victim voice,
the result of conversion would be better.
Our subjective evaluation shows that in a non-attack scenario, al-
most only 50% of the times participants can detect familiar voices
and 50% of the times they can not detect familiarity of a voice
(played in a different background noise). This means that partic-
ipant are making almost random guesses in normal, benign situa-
tion. However, people can distinguish a different voice from a fa-
miliar voice with about 80% success, and therefore a naive attack,
where the attacker simply inserts her own voice (or that of another
user), is not successful, and more complex attack is needed. This
is where our reordering and morphing attacks are a good candi-
dates, as 50-80% of observed instances can not detect such attacks,
which means that, in the worst case, our attack works as good as
the non-attack condition. Unlike our evaluation, in real-life, users
may not pay due diligence when asked to validate the identity of
the other speaker (secondary task) when making a call with Cfone
(primary task). It would result in higher true negatives (i.e., fewer
rejections in non-attack cases, or better usability) than what we ob-
served, but would also lead to higher false positives (i.e., weaker
security) especially when a reordered/morphed SAS is inserted. In
other words, the Cfone system may be more usable in practice but
less secure against our attacks.
Both evaluations support that a reordered SAS is more effective
for the attacker (harder to detect) compared to a morphed SAS.
Acquiring Training Data: Our attacks require collecting prior au-
dio samples from the victim. While the reordering attack requires
previously spoken SASs to build a dictionary, the morphing attacks
only require a few previously spoken sentences from which vic-
tim’s voice features can be derived. Building training sets for the
latter case is quite easy. The attacker can eavesdrop prior unpro-
tected VoIP sessions of a victim. Since only a few sentences are
needed, eavesdropping only a few minutes of conversation would
be sufﬁcient. The attacker can also record such samples from a
victim by being physically close to the victim while the victim is
talking in a public place or giving a public presentation.
As far as building training sets for reordering attack is concerned,
the difﬁculty depends on the underlying SAS encoding type. While
eavesdropping all (10) digits for numeric SAS is relatively easy
(e.g., waiting for the victim to speak phone numbers, zip codes,
and other numeric utterances), learning all PGP words or Madlib
words might be challenging given these words may not be com-
monly spoken in day to day conversations. However, it is possible
for the attacker to use social engineering techniques to address this
challenge. Number of possibilities exists to this end. For exam-
ple, the attacker can create crowd sourcing tasks on online websites
(e.g., freelancer or Amazon Mechanical Turk) which asks the users
to auditize proses which contain all PGP words or Madlib phrases.
Similarly, the attacker can create audio CAPTCHAs, and use them
on its own websites or other compromised sites, that challenge the