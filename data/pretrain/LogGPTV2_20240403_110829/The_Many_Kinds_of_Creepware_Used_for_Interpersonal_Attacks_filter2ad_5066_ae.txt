Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
636
No Device Filtering
Count
19
1
Malware
Not Found
Code
AV Device Filtering
Count
4
3
11
1
1
Code
Malware
Not Found
Surveillance
Spoof Social Media
Anti-Surveillance
Table V: Coding of top 20 apps for which we lacked market-
place data, with and without AV-test device ﬁltering
AV-Testing Devices and Offstore Apps: To identify devices
used in AV-testing, we examined apps coded as None - Android
Mods / VM that may be used for AV testing. Seven of these
apps (e.g., apps that emulate Linux or Chromium or enable
software development) seemed unlikely to be installed on
typical user devices. We also noticed that the Appium Mobile
App Automation toolkit [36] often appeared on devices with
malware and other Android-modiﬁcation apps, which suggests
its use in AV testing. Thus, we added Appium to the other
seven AV-testing apps, removed devices containing any of
these eight apps from the data, and re-ran CreepRank. The ef-
fects on the overall rankings of apps that appeared in Norton’s
marketplace data were modest, except for a few additional
Android-modiﬁcation apps that dropped precipitously in the
rankings, likely because they were also used in testing.
We expected that ﬁltering out AV-test devices would have
a large impact on CreepRank’s rankings of malware apps.
To analyze this, we compared the top 20 ranked apps, both
with and without ﬁltering, for which Norton did not have
marketplace data (see Table V). We found that ﬁltering devices
with apps indicative of AV testing has a dramatic impact on
the rankings, with no overlapping apps between its top 20
list and the unﬁltered top 20 list. The unﬁltered top 20 list
consists primarily of malware apps on devices where Appium
automation apps appear. By contrast, CreepRank’s top 20 list
for ﬁltered devices consists of apps that appear to have existed
on the Google Play store at one time, but probably only brieﬂy,
as few of the sites that scrape the Google Play store have
records of these apps. Most were surveillance apps, a few
were malware, and there was one defense and one spooﬁng
app. We could not ﬁnd any useful information about 3 apps.
E. Creepware over Time
We now examine how creepware evolves over time by
running CreepRank on the 2018/19 dataset (spanning May 1st
2018 to May 1st 2019) and comparing the results to the 2017
dataset. As noted above, CreepRank tends to perform better
as the number of devices infected by its seed set increases.
However, the 18 surveillance apps used as the original seed
set on the 2017 data had declined in popularity by 2018/19. To
compensate, we added another 32 thorough surveillance apps
that CreepRank identiﬁed in the 2017 data, selecting apps that
were prevalent in 2018/19. This resulted in a seed set of 50
apps installed on 32,719 devices in 2018/19, compared to 18
apps installed on 35,811 devices in 2017.
Category Counts
Largest Sub-Category Change
Category
2017
2018/19
Sub-Category
2017
2018/19 Δ
CallerID
Control
Defense
Evasion
Harassment
Info extraction
Spoof
Surveillance
Tutorial
None
46
13
42
28
80
75
115
372
86
143
11
1
58
16
39
164
54
445
72
140
Location
Hide Icon
Anti-Surveil
Steganography
Fake-Surveil
Hack-Tools
Burner-Phone
Social-Media
Hacking
Pay-Per-Install
40
9
38
15
56
11
41
105
63
27
11
0
51
0
24
70
15
179
44
1
29
9
13
15
32
59
26
74
19
26
Table VI: Count of app categories in CreepRank’s top 1,000
for 2017 and 2018/19 data and, within each category, the sub-
category with the greatest change (growth in bold).
We ran CreepRank on the 2018/19 data and following the
same procedures as before, three authors coded the 2018/19
top 1,000 ranked apps. We then reviewed the top 1,000
to identify trends and determine if any new categories of
creepware had emerged, but found that the existing codebook
covered all common cases. Many 2017 apps fell out of use
in 2018/19 and the two top 1,000 lists overlap by only 110
apps, suggesting there are signiﬁcant changes to the creepware
ecosystem over time.
Table VI shows the total number of apps in each category
across 2017 and 2018/19, as well as, for each category, the
sub-category with the largest change between the time periods.
From the table, it is clear that the privacy of creepware victims
is still under assault. The information extraction category more
than doubled, with hacking tools the largest area of growth.
The number of surveillance apps also grew substantially, with
increases in social media, microphone, SMS, and thorough
surveillance apps more than making up for a nearly 50% drop
in location surveillance apps. Interestingly, we did not ﬁnd
many new spooﬁng apps, although 21 apps from the 2017
data were still active and among the most popular apps, by
installation count, in 2018/19.
On a more positive note, although the number of social
media surveillance apps grew in 2018/19, our analysis of
these new spying apps suggests that new security precautions
by WhatsApp in particular have curtailed access to message
content, leaving these apps to report on usage statistics and
little else. We also noticed an increase in the fraction of
surveillance apps that are recommended for child safety use
relative to intimate partner surveillance, which could indicate
a change in how developers are advertising their surveillance
apps, perhaps in response to Google’s policy and enforcement
changes as a consequence of recent studies [5].
VIII. DISCUSSION
Practical impact. The analyses described in previous sections
suggest that CreepRank is a valuable tool for discovering and
making sense of a broad range of apps used in interpersonal
attacks and, to a lesser extent, defense. These ﬁndings have
already proven practically useful. Thus far, Norton has begun
to scan and warn customers about CreepRank-identiﬁed apps
that were veriﬁed as creepware by our manual coding. These
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
637
apps are also now ﬂagged as potentially dangerous by the
IPV Spyware Discovery tool, which is used in Cornell Tech’s
computer security clinic for IPV survivors [9], [10].
We also went through a responsible disclosure process with
Google to report 1,095 apps we discovered that may have
been on the Google Play store in violation of their policies.
Google Play provides policies designed to prevent abusive
apps like creepware. Its Potentially Harmful Applications
policy [37] focuses mostly on malware prevention. More
related is the “Privacy, Security, and Deception” portion of
Google’s Developer Policy Center [38], whose sub-policies
on “Device and Network Abuse”, “Malicious Behavior”, and
“Deceptive Behavior” contain many rules that prohibit creep-
ware functionality. Particularly prohibited are spooﬁng and
fake-surveillance apps that “attempt to deceive users or enable
dishonest behavior”; fraud-based fake-ID apps that “generate
or facilitate the generation of ID cards”; hacking tools and
tutorials that “facilitate or provide instructions on how to
hack services, software or hardware, or circumvent security
protections”; and surveillance and commercial spyware apps.
The policy also states that “Any claim that an app is a
‘prank’, ‘for entertainment purposes’ (or other synonym) does
not exempt an app from application of our policies.” Google
ultimately determined that 813 of the 1,095 creepware apps we
reported violate their policies, and those have been removed.
The creepware problem moving forward. CreepRank en-
abled the ﬁrst measurement study of the broad creepware
ecosystem, and this measurement study has, in turn, already
had positive practical impact by surfacing a large set of veriﬁed
creepware. Our results suggest that creepware is a widespread
problem and this raises a number of tricky questions about
how to mitigate their harms moving forward.
Keeping creepware out of app stores will be challenging.
New apps tend to rise in the place of removed apps, and
developers attempt to obfuscate their app’s purpose in order to
evade policy enforcement. For example, recent bombing apps
use the term “text repeater” and avoid direct references to
bombing. While this may make these apps harder for attackers
to ﬁnd, it also makes it harder to enforce policy at scale.
A next step would be to create and deploy a system capable
of detecting creepware in a (semi-)automated fashion. Creep-
Rank provides a starting point and could be used as a ﬁrst step
to identify candidate creepware apps, manually verify them to
generate labeled training data, and then use this data to train
machine learning classiﬁers to detect surveillance, spooﬁng,
harassment, and other pernicious app categories. Further work
is needed to develop and evaluate such an approach, including
gauging how often one would need to update CreepRank’s
output, how many labeled apps are needed, what types of
features are effective to use, and more.
A particular challenge facing such an approach would
be dealing with data poisoning attacks, in which attackers
attempt to evade detection by, for example, gaming an app’s
CreepRank. This is related to the challenge of detecting
emulated testing and research devices, since such emulation
could be used to inject malicious co-installation patterns. As
discussed in Section VII-D, we observed in our dataset some
devices that could fall into this category. While we do not
believe these affected our measurement study results thus
far, should CreepRank or similar approaches be put to use
moving forward, we may have to contend with deployment
of malicious emulation or research devices that pollute data.
Ancillary measures such as the detection of cloned devices
may help, and we leave exploring these issues to future work.
Even with good detection capabilities, deploying detection
tools raises a host of questions. In addition to screening of app
stores, we would like to directly integrate creepware detection
into a commercially available anti-virus software. But making
creepware detection actionable for users remains a challenge.
Much of the creepware we discovered are harassment apps
that are installed on abuser devices, and issuing creepware
notiﬁcations to abusers may not be useful. Whether and how
one can craft messaging to deter interpersonal attackers are
important questions for future work.
For creepware that is installed on a victim’s device, ques-
tions remain regarding how and when to notify them. For
instance, if the AV notiﬁes the user immediately (as done
currently), an abuser with physical access to the device might
dismiss or ignore the warnings and disable the detection
software. But if the detection software attempts to wait until
it is more certain that the original owner has possession of
the device, there are still issues of victim safety. For instance,
removal of creepware could result in escalation of interper-
sonal attacks to physical violence in cases of IPV. This threat
might be mitigated by designing notiﬁcations that attempt to
take safety planning into consideration, which would require
additional exploration.
IX. CONCLUSION
We explored the landscape of apps that are likely to be
used in interpersonal attacks, called creepware. We created
CreepRank, an exploratory algorithm based on the principle
of guilt by association, and ran it on a dataset of billions of
app installations. We discovered and explored many categories
of apps that enable surveillance, harassment, impersonation,
information theft, concealment, and more. Our methods and
analysis of creepware are useful for app stores and anti-virus
vendors seeking to improve safety for mobile device users.
ACKNOWLEDGEMENTS
The authors would like to thank our shepherd Emily Stark
and the anonymous reviewers of our study for their feedback
and suggestions to improve the quality of our manuscript.
We acknowledge funding support under NSF award numbers
1717062, 1916096, 1916126, and gifts from Google.
REFERENCES
[1] D. Freed, J. Palmer, D. Minchala, K. Levy, T. Ristenpart, and N. Dell,
“Digital technologies and intimate partner violence: A qualitative anal-
ysis with multiple stakeholders,” PACM: Human-Computer Interaction:
Computer-Supported Cooperative Work and Social Computing (CSCW),
vol. 1, no. 2, p. Article 46, 2017.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
638
[2] ——, “A Stalker’s Paradise: How Intimate Partner Abusers Exploit
Technology,” in Proceedings of the 2018 CHI Conference on Human
Factors in Computing Systems (CHI). New York, NY, USA: ACM,
2018, pp. 667:1–667:13.
[3] T. Matthews, K. O’Leary, A. Turner, M. Sleeper, J. P. Woelfer, M. Shel-
ton, C. Manthorne, E. F. Churchill, and S. Consolvo, “Stories from
survivors: Privacy & security practices when coping with intimate part-
ner abuse,” in 2017 CHI Conference on Human Factors in Computing
Systems (CHI), 2017, pp. 2189–2201.
[4] N. Sambasivan, A. Batool, N. Ahmed, T. Matthews, K. Thomas, L. S.
Gaytan-Lugo, D. Nemer, E. Bursztein, E. F. Churchill, and S. Consolvo,
““They Don’t Leave Us Alone Anywhere We Go”: Gender and Digital
Abuse in South Asia,” in CHI Conference on Human Factors in
Computing Systems (CHI), 2019.
[5] R. Chatterjee, P. Doerﬂer, H. Orgad, S. Havron, J. Palmer, D. Freed,
K. Levy, N. Dell, D. McCoy, and T. Ristenpart, “The spyware used in
intimate partner violence,” in IEEE Symposium on Security and Privacy
(S&P), 2018, pp. 441–458.
[6] Y. Ye, T. Li, S. Zhu, W. Zhuang, E. Tas, U. Gupta, and M. Abdulhayoglu,
“Combining ﬁle content and ﬁle relations for cloud based malware
detection,” in International Conference on Knowledge Discovery and
Data Mining (KDD), 2011, pp. 222–230.
[7] B. J. Kwon, J. Mondal, J. Jang, L. Bilge, and T. Dumitras¸, “The
dropper effect: Insights into malware distribution with downloader graph
analytics,” in Conference on Computer and Communications Security
(CCS), 2015, pp. 1118–1129.
[8] A. Tamersoy, K. A. Roundy, and D. H. Chau, “Guilt by association: large
scale malware detection by mining ﬁle-relation graphs,” in International
Conference on Knowledge Discovery and Data Mining (KDD), 2014,
pp. 1524–1533.
[9] S. Havron, D. Freed, R. Chatterjee, D. McCoy, N. Dell, and T. Ris-
tenpart, “Clinical computer security for victims of intimate partner
violence,” in USENIX Security Symposium, 2019, pp. 105–122.
[10] D. Freed, S. Havron, E. Tseng, A. Gallardo, R. Chatterjee, T. Ristenpart,
and N. Dell, ““Is my phone hacked?” Analyzing clinical computer
security interventions with survivors of intimate partner violence,”
PACM: Human-Computer Interaction: Computer-Supported Cooperative
Work and Social Computing (CSCW), vol. 3, pp. 202:1–202:24, 2019.
[11] L. Grady, “Random walks for image segmentation,” IEEE Transactions
on Pattern Analysis & Machine Intelligence, no. 11, pp. 1768–1783,
2006.
[12] J.-Y. Pan, H.-J. Yang, C. Faloutsos, and P. Duygulu, “Automatic mul-
timedia cross-modal correlation discovery,” in International Conference
on Knowledge Discovery and Data Mining (KDD), 2004, pp. 653–658.
[13] SpoofBox, “Spoof text message trailer,” https://www.spoofbox.com/en/
preview/spoof-text, 2019, online; accessed 18 Nov 2019.
[14] N. E. Willard, Cyberbullying and cyberthreats: Responding to the
challenge of online social aggression, threats, and distress. Research