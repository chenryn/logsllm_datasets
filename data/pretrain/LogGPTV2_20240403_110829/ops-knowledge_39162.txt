User: I often find a need to put paths in my code in order to find data or in some cases tool-specific modules.  I've so far always used autotools because of this--it's just so easy to call sed to replace a few strings at build time.  However, I'd like to find a more Pythonic way of doing this, i.e. use distutils or some other blessed way of building/installing.  I've never managed to find anything relating to this in distutils documentation though so how do other people solve this problem?
Assistant: The OP here, I've not finally managed to log in using my OpenID.
@S.Lott
Point well taken, but for some Linux distros it seems to be standard to install application-specific data and application-specific modules in specific locations.  I think that making these locations configurable at build/install time is a nice thing to do for people packaging my application.  AFAICS “the pythonic way” in this case would force these packagers to apply patches to my code.
I'm also in the habit of writing applications where the executable part is a tiny wrapper around a main function in an application-specific module.  To me it doesn't seem right to stick this application-specific module in /usr/lib/python2.5/site-packages.