程序的调试过程中具有非常重要的作用，需上机多加练习。
83
第 4 章
路由管理
对于Linux系统而言网络至关重要，这是因为大多数Linux服务器都依赖于网络。而数据
包在网络中从主机出发，经过传输、转发最终到达目标主机所依赖的是网络中的路由器。路由
器是根据路由条目转发数据包，因此路由管理的实质是路由条目管理。路由管理是运维人员的
重要工作之一，本章将介绍Linux系统中的路由管理。
本章涉及的主要知识点有：
 路由的基本知识
 路由的分类
 配置Linux路由
 策略路由
4.1
认识路由
路由不仅存在于路由器中，也存在于操作系统中，不仅Linux系统有，Windows中也存在。
本节将简单介绍路由的概念。
4.1.1 路由的基本概念
路由器传递数据包的方法与现代邮政系统工作机制相似，先按行政区域划分设立邮局。如
果信件传递仅发生在邮局内部，直接分拣投递即可，例如北京市东城区某小区发往东城区另一
小区的信件，只需在东城区邮政局分拣投递即可。如果信件发往外埠则需要借助邮政局间的运
输网络，例如由北京市东城区发往四川省成都市成华区的邮件，则需要东城区邮政局将邮件交
由北京市邮政局，再由北京市邮政局通过运输网络发往四川省，然后层层下发直到邮件到达收
件人手中。
数据包的传递过程与邮政系统类似，也是先将计算机分组划分成不同子网，然后通过子网
间的路由器传递数据包，如图4.1所示。
第4章 路由管理
图4.1 子网拓扑
在图4.1中共有2个交换机、路由器及3台计算机，共包含192.168.0.0/24、192.168.1.0/24、
192.168.2.0/24 3个子网，本例中各设置的IP地址等信息均已在图中。需要特别说明的是图4.1
中所示的 MAC 地址正确格式应为“00-51-5B-C0-00-08”或“00:51:5B:C0:00:08”，此处为方
便说明简写为A、B、C等格式。
与邮政系统类似，当数据包发送的目标地址为同一子网时，数据包由交换机直接传送给目
标主机。例如，当PC1发送数据包给PC2时，PC1会首先发送ARP广播寻找PC2的MAC地
址，ARP 广播会发送给子网 192.168.0.0/24 中的所有计算机。图 4.1 中所示的 PC2 和 IP 地址
为192.168.0.1的路由器接口均会收到广播，但只有PC2会回应PC1的广播并将其MAC地址
反馈给PC1。当PC1收到PC2的MAC地址后，将目的IP、MAC地址正确写入数据包，然后
交由交换机发送给PC2，数据包传输过程完成了。
另一种情况是PC1发送的数据包目的地址与PC1不在同一子网时，这时就与邮政系统类
似，PC1会将数据包交给自己的“上级”默认网关。例如，在图4.1中PC1发送数据包给PC3，
数据包发送过程如下：
（1）由于PC1与PC3的地址不在同一子网，因此PC1会将数据包的MAC地址修改为D
发送出去，交换机会将数据包交给192.168.0.1，即路由器。
（2）与路由器相连的网络分别为 192.168.0.0/24 和 192.168.1.0/24，因此路由器并不知道
网络 192.168.2.0/24 位于何处，此时就需要借助路由条目的帮助。为了能将数据包成功发往
PC3，路由器中就需要一条指向 192.168.2.0/24 的路由条目，这个条目指明数据包的下一跳地
址为192.168.1.2。
（3）根据路由条目指示，路由器会将数据包目的 MAC 地址修改为 F，将数据包发送给
路由器2。
（4）路由器2与192.168.2.0/24直接相联，因此收到数据包后，路由器2会将目的MAC
修改为C发送给交换机，交换机再将数据包交给PC3，数据包传输完成。
纵观上述过程，无论是数据包发送给默认网关，还是由一个路由器发送给另一个路由器，
都离不开路由的参与。
85
CentOS 7.5系统管理与运维实战
4.1.2 路由的原理
在4.1.1节中介绍了路由的基本作用，但路由运作的机制比较复杂，本小节将简要介绍路
由的基本原理。
一个路由条目至少包含3个要素：子网，子网掩码和下一跳地址（在有些设备中使用的是
下一跳设备），其主要含义如下：
 子网：目标子网的网络号，默认路由的子网号为0.0.0.0。
 子网掩码：目标子网的子网掩码，默认路由的子网掩码为0.0.0.0。
 下一跳地址：目标子网数据包的转发地址。在有些路由器中可以使用下一跳设备，设
备通常是本地接口。
通常计算机中会有多条路由条目，计算机发出数据包时会进行计算，将目标 IP 地址与路
由条目中的子网掩码按位与，即二进制按位做乘法。如果按位与的结果与路由条目的子网相
同，就采用此路由条目的下一跳地址作为转发目的地。例如在图4.1中，路由器发往PC3的数
据包地址为192.168.2.2，与192.168.2.0/24网络的子网掩码按位与的结果为192.168.2.0，与子
网相同，因此就会将数据包转发给192.168.1.2。
无论是计算机还是路由器，在计算路由时都遵循精确匹配原则，即如果多条路由条目都匹
配目标地址，则使用最精确的条目作为转发路径。例如 IP 地址 192.168.2.2 能同时匹配
192.168.0.0/16 和 192.168.2.0/24，但基于精确匹配原则，最终将使用 192.168.2.0/24 这条路由
条目。
4.1.3 Linux 系统中的路由表
在计算机中通常不止一个路由条目，能正常通信的计算机至少有两个路由条目，而路由器
中的路由条目可能会更多。这些路由条目存储于路由表中，如果要在Linux系统中查看路由表，
可以使用route命令，如【示例4-1】所示。
【示例4-1】
[root@localhost ~]# route
Kernel IP routing table
Destination Gateway Genmask Flags Metric Ref Use Iface
default 172.16.45.1 0.0.0.0 UG 0 0 0 eno16777736
172.16.45.0 0.0.0.0 255.255.255.0 U 0 0 0 eno16777736
在示例4-1中，命令输出了两个路由条目，第一条是指向默认网关的默认路由，第二条是
与计算机直接相连的子网路由。命令输出中Flags字段中的U表示路由条目可用，G表示正在
使用的网关。
86
第4章 路由管理
4.1.4 静态路由和动态路由
在 4.1.1 小节中介绍了数据包如何从 PC1 发送到 PC3 的整个过程，当数据包到达
192.168.0.1后，路由器将会计算下一步的路径，其依据就是路由器中保存的路由条目。本小节
将介绍这些路由条目的来源及分类。
路由的来源有三种，第一种是路由器和计算机根据自身的网络连接自动生成的直联路由，
即与自身所在同一子网的路由，只要网络持续连接直联路由就会一直存在并生效；第二种是由
管理员手动添加的静态路由，静态路由仅适合于网络运作简单的环境，Linux系统中添加的路
由多为静态路由；最后一种是由动态路由协议生成的动态路由。
静态路由的缺点很明显，当路由器数量增加时，子网数量也增多，这时就需要在每个路由
器上为每个子网添加路由，否则就会出现无法访问的问题。如果其中一台路由器出现问题，路
由条目就会失效，也会造成无法访问的问题。
为了解决静态路由的这些问题，动态路由协议应运而生。动态路由协议会根据网络状况调
整各路由器的路由条目，最大程度上保持网络通畅。常见的动态路由协议有RIP、OSPF、BGP、
IGRP等。
（1）RIP（Routing Information Protocol，路由信息协议）是最简单的路由协议，RIP协议
要求路由器以30秒为周期，向相邻的路由器交换信息，从而让每个路由器都建立路由表。RIP
建立的路由表以距离为单位，通过一个路由器称为一跳，RIP总是希望数据包通过最少的跳数
到达目的地。RIP 最大的优点是配置简单，但仅适用于小型网络，如果跳数超过 15，数据包
将不可达。由于路由器每30秒向相邻路由器交换信息，因此RIP协议的收敛时间相对较长（收
敛时间是指路由协议让每个路由器建立精确并稳定的路由表的时间长度，时间越长，网络发生
变化后，路由表生成得越慢，网络稳定需要的时间也越长）。
（2）OSPF（Open Shortest Path First，开放最短路径优先）是一个相对比较复杂的动态路
由协议。OSPF一般用于一个路由域内，称为自治系统（Autonomous System）。在这个自治系
统内部，所有加入到OSPF的路由器都会通过路由协议相互交换信息，以维护自治系统的结构
数据库，最后路由器会通过数据库计算出OSPF路由表。与RIP相比，OSPF协议根据链路状
态计算路由表，更适合于大型网络，其收敛速度也更快。
（3）BGP（Border Gateway Protocol，边界网关协议）是一个用来处理自治系统之间的路
由关系的路由协议，最适合处理像Internet这样十分巨大的网络。BGP既不完全是距离矢量协
议，也不完全像OSPF那样使用链路状态，BGP使用的是通路向量路由协议。BGP使用TCP
协议进行可靠的传输，同时还使用了路由汇聚、增量更新等功能，极大地增加了网络可靠性和
稳定性。
（4）IGRP（Interior Gateway Routing Protocol，内部网关路由协议）是由Cisco公司设计
的专用于Cisco设备上的一种路由协议。IGRP是一种距离向量路由协议，其要求路由器以90
秒为周期向相邻的路由器发送路由表的全部或部分，由此区域内的所有路由器都可以计算出所
有网络的距离。由于使用网络延迟、带宽、可靠性及负载等都被用作路由选择，因此IGRP的
稳定性相当不错。
87
CentOS 7.5系统管理与运维实战
动态路由协议除了上面介绍的4种之外，还有许多例如IS-IS等，此处不再赘述，感兴趣
的读者可自行参考相关资料了解。
4.2
配置 Linux 静态路由
与其他操作系统不同，Linux系统作为常见的服务器操作系统，其可能会遇到更多样的网
络环境。除了常见服务器使用的Internet网络连接外，通常还会有公司内部网络、远程访问相
关的网络等，此时就需要正确设置路由，否则无法正确访问。本节将简要介绍如何在 Linux
系统中设置静态路由。
4.2.1 配置网络接口地址
设置静态路由的前提是网络接口上配置有 IP 地址等信息，否则路由条目无法生效。在网
络接口上配置单个IP地址的相关知识已在第3章中介绍过，此处介绍如何在同一接口上配置
多个IP地址的方法。
（1）使用子接口
使用子接口在网络接口上配置多个 IP 地址是一个比较常见的做法，子接口名字形如
eno16777736:1，其中eno16777736是网络接口的名称，“:1”表示这是一个子接口。配置过程
如【示例4-2】所示。
【示例4-2】
[root@localhost ~]# ifconfig eno16777736:1 172.16.45.134/24 up
[root@localhost ~]# ifconfig
……
eno16777736:1: flags=4163 mtu 1500
inet 172.16.45.134 netmask 255.255.255.0 broadcast 172.16.45.255
ether 00:0c:29:23:7c:d2 txqueuelen 1000 (Ethernet)
……
使用以上命令配置的子接口将在重启后消失，若要重启后继续生效则需要将上述命令写入
文件/etc/ec.local中。
（2）使用多配置
CentOS 7.5允许在一个网络接口上配置多个不同IP地址、子网掩码、网关和DNS服务器
地址等，但同时只能激活一个配置。多配置在图形界面中可以单击“Applications”，然后在弹
出的菜中依次单击“System tools”→“Settings”，打开设置界面，如图4.2所示。
88
第4章 路由管理
图4.2 设置界面
在设置界面中可以找到CentOS 7.5中几乎所有的常规设置，此时单击“Network”弹出网
络设置界面，如图4.3所示。
图4.3 网络设置界面
在网络设置界面中可以看到网络接口相关设置，此时可以单击“Add Profile”按钮为已连
接网络连接添加配置文件。添加配置文件的界面如图4.4所示。
89
CentOS 7.5系统管理与运维实战
图4.4 添加配置文件
在新配置中可以添加诸如802.1x、IPv4等类型网络，以常见的IPv4网络为例，可以在左
侧选择IPv4，然后在右侧的“Addresses”中选择“Manual”。之后就可以在下面填入IP地址、
子网掩码、网关、DNS、静态路由等信息了。
多次添加即可在同一个网络连接上添加多个配置文件，这些配置文件可以在网络设置界面
的右侧看到，如图4.5所示。
图4.5 网络连接的多配置文件
添加了多配置文件后，接下来的任务就是切换配置文件让不同的配置文件在不同的网络环
境中生效。切换配置文件需要单击桌面右上角的联网图标菜单，将弹出所有的配置文件列表，
如图4.6所示。
90
第4章 路由管理
图4.6 网络配置文件列表
此时只需要单击对应的配置文件名称，就可以让相应的配置文件生效，如果系统重启就采
用上一次生效的配置文件。
4.2.2 接口 IP 地址与直联路由
无论使用哪种方式为网络接口配置 IP 地址等信息，只要网络接口接入某个子网，路由表