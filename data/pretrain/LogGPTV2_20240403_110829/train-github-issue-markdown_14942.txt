## Bug report
### Is your feature request related to a problem?
Yes
### Describe the feature you would like.
#### First, I started a local zk cluster via docker.
create a file docker-compose.yml
    version: '2'
    services:
        zoo1:
            image: zookeeper
            restart: always
            container_name: zoo1
            ports:
                - "2181:2181"
            environment:
                ZOO_MY_ID: 1
                ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
        zoo2:
            image: zookeeper
            restart: always
            container_name: zoo2
            ports:
                - "2182:2181"
            environment:
                ZOO_MY_ID: 2
                ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
        zoo3:
            image: zookeeper
            restart: always
            container_name: zoo3
            ports:
                - "2183:2181"
            environment:
                ZOO_MY_ID: 3
                ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
Then run
    COMPOSE_PROJECT_NAME=zk_test docker-compose up
#### second I start proxy
Proxy server.ymal
    mode:
      type: Cluster
      repository:
        type: ZooKeeper
        props:
          namespace: agent
          server-lists: 127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183
          retryIntervalMilliseconds: 500
          timeToLiveSeconds: 60
          maxRetries: 3
          operationTimeoutMilliseconds: 30000
      overwrite: true
    #
    rules:
      - !AUTHORITY
        users:
          - root@%:root
          - sharding@:sharding
        provider:
          type: ALL_PRIVILEGES_PERMITTED
    props:
      max-connections-size-per-query: 1
      executor-size: 16  # Infinite by default.
      proxy-frontend-flush-threshold: 128  # The default value is 128.
      proxy-opentracing-enabled: false
      proxy-hint-enabled: true
      sql-show: false
      check-table-metadata-enabled: false
      lock-wait-timeout-milliseconds: 50000 # The maximum time to wait for a lock
      # show-process-list-enabled: true
      # show-process-list-async-thread-num: 100
      # Proxy backend query fetch size. A larger value may increase the memory usage of ShardingSphere Proxy.
      # The default value is -1, which means set the minimum value for different JDBC drivers.
      proxy-backend-query-fetch-size: -1
      check-duplicate-table-enabled: false
#### Errors
    [INFO ] 2022-03-23 12:10:50.174 [_finished_check_Worker-1-EventThread] o.a.c.framework.imps.EnsembleTracker - New config event received: {server.1=zoo1:2888:3888:participant;0.0.0.0:2181, version=0, server.3=zoo3:2888:3888:participant;0.0.0.0:2181, server.2=zoo2:2888:3888:participant;0.0.0.0:2181}
    [ERROR] 2022-03-23 12:10:50.174 [_finished_check_Worker-1-EventThread] o.a.c.f.imps.CuratorFrameworkImpl - Background exception was not retry-able or retry gave up
    java.lang.NullPointerException: null
    	at org.apache.curator.utils.Compatibility.getHostAddress(Compatibility.java:116)
    	at org.apache.curator.framework.imps.EnsembleTracker.configToConnectionString(EnsembleTracker.java:185)
    	at org.apache.curator.framework.imps.EnsembleTracker.processConfigData(EnsembleTracker.java:206)
    	at org.apache.curator.framework.imps.EnsembleTracker.access$300(EnsembleTracker.java:50)
    	at org.apache.curator.framework.imps.EnsembleTracker$2.processResult(EnsembleTracker.java:150)
    	at org.apache.curator.framework.imps.CuratorFrameworkImpl.sendToBackgroundCallback(CuratorFrameworkImpl.java:892)
    	at org.apache.curator.framework.imps.CuratorFrameworkImpl.processBackgroundOperation(CuratorFrameworkImpl.java:649)
    	at org.apache.curator.framework.imps.WatcherRemovalFacade.processBackgroundOperation(WatcherRemovalFacade.java:152)
    	at org.apache.curator.framework.imps.GetConfigBuilderImpl$2.processResult(GetConfigBuilderImpl.java:222)
    	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:630)
    	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:551)