B
1 
Region II 
Figure 5.    Verifiers.    Node C cannot act as 
a verifier for the link A↔B since the wormhole 
attacker could make a node on the other end 
of the wormhole appear.    Node D could act as 
a  verifier,  since 
the  verifier 
properties. 
it  satisfies 
relative  positions,  but  do  not  establish  that  they  are 
communicating without going through a wormhole.    Next, 
the protocol uses a verifier node to confirm the link is not 
being created through a wormhole: 
4.    N → Region   INQUIRY | IDN | IDA | zone(N, A)   
All  neighbor  nodes  that  hear  the  HELLO  message 
broadcast  an  inquiry  in  directions  except  for  the 
received  direction  and  opposite  direction.    So,  if  N 
received  the  announcement  in  zone  1,  it  will  send 
inquiries to find verifiers to zones 2, 3, 5 and 6.    The 
message includes zone (N, A), so prospective verifiers 
can  determine 
the  verification 
properties by having heard A in a different zone.     
they  satisfy 
if 
5.    V → N   
IDV | EKNV (IDA | zone (V, N))     
Nodes  that  receive  the  inquiry  and  satisfy  the 
verification  properties  respond  with  an  encrypted 
message.    This  message  confirms  that  the  verifier 
heard  the  announcement  in  a  different  zone  from  N 
and  has  completed  steps  1-3  for  the  protocol  to 
authenticate A and its relative position.   
To  continue  the  protocol,  N  must  receive  at  least  one 
verifier response.    If it does, it accepts A as a neighbor, 
and sends a message to A:   
6.  N → A 
IDN | EKAN (IDA | ACCEPT) 
After  receiving 
announcer adds N to its neighbor set.   
the  acceptance  messages, 
the 
The  verified  neighbor  discovery  protocol  depends  on 
both  neighbor  and  verifier  nodes  receiving  correct 
challenge responses from the announcer before either node 
will  accept  the  announcer  as  a  neighbor.    Likewise,  the 
announcer will not accept any neighbors until they have 
been mutually confirmed.    The protocol is secure against 
wormhole attacks that involve two distant endpoints, since 
a wormhole can only deceive nodes to accept a particular 
neighbor if they are in the same relative direction from the 
wormhole, while the verified neighbor discovery protocol 
requires that a node receives confirmation from a verifier 
node  in  a  different  direction  before  accepting  a  new 
neighbor.    Without  acquiring  key  material,  an  attacker 
cannot create a wormhole since it must rely on forwarding 
messages  to  legitimate  nodes  through  the  wormhole  to 
decrypt the nonce challenges. Those nodes will determine 
that the reception direction is inconsistent, and refuse to 
complete the protocol. 
The verified neighbor discovery protocol is vulnerable, 
however, to a wormhole attack in which a single endpoint 
node acts as both a receiver and a retransmitter to deceive 
two nodes that are close to each other (but not within one 
hop) that they are neighbors.    The next section describes 
this attack, and a variant of the protocol that prevents it.   
5.4 Strict neighbor discovery protocol 
Figure  6  shows  the  verifier  region  of  two  neighbor 
nodes.    If there is a node in the shaded region, it can act as 
a verifier for A and B.    However, the verifier region may 
still exist when two nodes are slightly out of radio range, 
and  a  smart  adversary  can  use  this  to  make  them  to  be 
neighbors.   
Figure 7 depicts the Worawannotai attack in which the 
adversary  convinces  two  nearby  (but  not  neighboring) 
nodes they are neighbors.    Node B is located just beyond 
the  transmission  range  of  node  A.    There  will  be  two 
areas that could have valid verifier for this protocol.    If 
there is a valid verifier in those areas, the attacker can just 
put one node in between A and B (node X in Figure 7) and 
use it to listen to and retransmit messages between A and B.   
Nodes A and B will mistakenly confirm they are neighbors 
using verifier V, but the attacker will have control over all 
messages between A and B.   
The Worawannotai attack will succeed only if the victim 
nodes (A and B in the figure) are unable to communicate 
directly, but are close enough to have a verifier that can 
hear  both  A  and  B.  Assuming  perfect  transmission 
distances, this means A and B must be more than r distance 
apart, but less than   
r
2
cos
=π
6/
r
3
after which the size of the false verification region is zero. 
If A and B are aligned horizontally, the size of the areas 
that could contain false verifiers is 
r
3
1
−
2
x
−
dx
x
3
4
2
∫
ar
+
2
less 
where  r  +  a  is  the  distance  between  A  and  B.    The 
maximum  area 
the 
transmission area in the worst case where A and B are just 
over r distance apart (a is 0), and decreases substantially 
as the distance increases.     
than  15%  of 
is  slightly 
Another  mitigating  factor  is  that  nodes  A  and  B  are 
within  two  hops  through  legitimate  nodes (including  the 
false  verifier).    This  means  if  the  data  communication 
protocol  uses  acknowledgements,  A  will  discover 
Figure 7.    Worawannotai attack.   
messages  are  not  reaching  B  and  can  retransmit  them 
through  another  node.    This  approach  would  not  work 
against  the distant  wormhole  attack,  since A’s neighbors 
are  likely  to  also  forward  packets  directed  towards  B 
towards the wormhole endpoint. 
To prevent the Worawannotai attack, we need to place 
additional  constraints  on  verifiers.    The  strict  neighbor 
discovery  protocol  exchanges  the  same  messages  as 
verified  neighbor  discovery  protocol  but  has  stricter 
requirements  on  verifiers.    In  strict  protocol,  a  valid 
verifier  V  for  the  link  A  ↔  B  must  satisfy  these  three 
properties: 
zone(B, A) ≠ zone (B, V).     
zone(B, A) ≠ zone (V, A).   
zone(B, V) cannot be both adjacent to   
zone(B, A) and adjacent to zone(V, A). 
1. 
2. 
3. 
The  first  two  conditions  are  the  same  as  previous 
protocol,  and  they  guarantee  that  the  adversary  cannot 
replay the confirmation message from verifiers. The third 
condition  ensures  that  the  verifier region  is  empty  when 
two nodes are out of radio range, so the adversary cannot 
use this to conduct Worawannotai attack. 
Figure 8 shows the verifier region of the strict protocol. 
Compared  with  Figure  6,  we  can  see  that  the  region 
between A and B is no longer contains verifiers.    We next 
show that the shaded areas cannot contain any verifiers if 
A and B are further than r distance apart, and hence, the 
Worawannotai attack cannot succeed. 
We consider the region above and left of A; the proof for 
Figure 6.    Verifier Region. The shaded area 
is the verifier region of node A and B in verified 
neighbor discovery protocol.   
Figure  8.    Strict  Verifier  Region.  The 
shaded area is the verifier region of node A 
and B in strict neighbor discovery protocol 
all other regions is equivalent.    All potential verifiers V in 
that region have zone (V, A) = 2 and zone (V, B) = 2. 
Let xN denote the x coordinate of node N, dNM the actual 
distance  between  nodes  N  and  M,  and  θNM  the  angle 
between nodes N and M relative to the horizontal axis.   
xV  =  xA   + dAV   cos  θAV   
xV  =  xB   + dBV  cos  θBV   
xB  =  xA   +  dAB   cos  θAB 
For a verifier V in the above left region, we have: 
Because zone(V, A) = 2 and zone (V, B) = 2, we know 
θAV  and  θBV  are  between  π/2  and  5π/6.    Hence,  the 
minimum value of cos θAV is 0 for π/2. So, we know xV ≤ 
xA and xV ≤ xB.    This makes sense since V must be to the 
left  of  both  A  and  B.    Substituting  the  expansion  of  xB 
from the third equation into the second equation, we have, 
xV  =   xA   +  dAB   cos θAB + dBV  cos θBV   
Since  zone  (A,  B)  =  1, θAB  is  between  −π/6  and  π/6.   
Minimizing the values of the cosines, we have     
xV  ≥   xA   +  dAB   cos  π/6 + dBV  cos  5π/6.   
The Worawannotai attack is possible only if dAB>r and 
dBV ≤ r.    So, this implies xV  >  xA which contradicts xV ≤ xA 
and  proves  that  no  false  verifier  could  exist.    Similarly, 
we can prove that all other three shaded regions are also 
empty if A and B are further than one hop apart. 
5.5 Discussion 
The  strict  neighbor  discovery  protocol  prevents 
wormhole  attacks  when  the  adversary  has  only  two 
endpoints.    An  attacker  with  multiple  endpoints  could 
selectively forward packets through different endpoints to 
establish false neighbors.    In the extreme, an attacker who 
can  surround  a  particular  target  node  with  wormhole 
endpoints  can  make  messages  arrive  in  any  zone  by 
transmitting  them  through  a  different  endpoint.    Our 
defense  does  not  prevent  multiple  endpoint  attacks, 
although it should be noted that the resources necessary to 
carry out such an attack are substantial. 
The overhead associated with our protocol is minimal, 
the main cost is the potential loss of valid links (discussed 
in  the  next  section).    For  pairwise  key  distribution,  the 
typical  process  to  securely  discover  one  link  (without 
resistance 
involves  node 
announcement, challenge and response (3 messages). Our 
protocol adds additional messages for inquiry, verification 
and acceptance. 
to  wormhole 
attacks) 
One possible, but unrealistic, attack is to use magnets to 
attempt  to  disorient  nodes.    An  attacker  could  use  a 
magnet  to  control  the  orientation  of  a  node  to  make  it 
receive  messages  in  the  appropriate  zone.    This  would 
require 
the  wormhole 
retransmitting packets and the magnet controller.    For the 
tight  coordination  between 
example  in  Figure  4,  an  enterprising  attacker  could 
retransmit node A’s announcement through the wormhole.   
Before transmitting B’s response, the attacker would use a 
magnet to disorient A one half rotation so its east zone is 
now facing west.    Hence, A would accept B’s response as 
coming  from  the  opposite  direction  (even  though  it 
actually  came  from  the  same  direction).    Note  that  the 
attacker would have to reorient A correctly before it sends 
out  the  next  message.    In  practice,  it  is  unlikely  that  a 
magnet attack could be done successfully because of the 
physical  intrusiveness  and  timing  precision  needed.    In 
most  cases,  it  would  be  easier  for  an  attacker  to  set  up 
multiple endpoints.     
6. Analysis 
Our  protocols  have  low  overhead,  but  may  effect  the 
the  network  by  preventing 
overall  performance  of 
legitimate  links  from  being  established.    In  this  section 
we  analyze  the  impact  of  our  protocols  on  node 
connectivity  and  routing  performance.    In  both  the 
verified protocol and the strict protocol, it is possible that 
in step 3, there are no potential verifier nodes.    Without a 
verifier  node,  N  cannot  distinguish  legitimate  neighbors 
from  neighbors  through  a  wormhole.    Nodes  near  the 
perimeter of the network are especially prone to having no 
verifier  nodes.    In  this  case,  an  optimistic  strategy  will 
continue  the  protocol  and  accept  the  announcer  without 
verification, while a conservative strategy will reject the 
announcer and stop the protocol.    The first choice permits 
successful wormhole attacks while the second choice may 
prevent some legitimate nodes from joining the network.   
Because  the  damage  a  successful  wormhole  attack  can 
cause  is  substantial,  we  adopt  the  more  conservative 
choice: a node will only accept another node as a neighbor 
if it can be verified by at least one verifier.   
  Losing 
links  diminishes 
Hence, our protocol prevents some legitimate links from 
being  established. 
the 
effectiveness  and  efficiency of  the network.    If all  links 
for a particular node are lost, it will be disconnected from 
the network and provide no value.    The probability that a 
link  is  lost  depends  on  the  likelihood  that  a  satisfactory 
verification  node  cannot  be  found.    This  probability 
scales  inversely  with  the  density  of  the  network.    For 
reasonably dense networks, there is a high probability that 
a legitimate link will be verified.     
Figure  9  shows  typical  results  from  simulating  a  low 
density network with an average of 3 neighbors within the 
omnidirectional  communication  distance  and  9.72 
neighbors  within  the  directional  transmission  distance.   
Under 14% of all links are lost, and only 1.3% of nodes are 
completely  disconnected  due  to  the  verified  neighbor 
protocol.    The number of links lost increases substantially 
with the strict neighbor discovery protocol because of the 
reduced  area  for  possible  verifiers:  the  lost  link  and 
 500
 450
 400
 350
 500
 450
 400
 350
 300
 250
)
s
r
e
t
e
m
(
y
 200
 150
 100
 50
 0
 0
 50  100  150  200  250  300  350  400  450  500
 300
 250
)
s
r
e
t
e
m
(
y
 200
 150
 100
 50