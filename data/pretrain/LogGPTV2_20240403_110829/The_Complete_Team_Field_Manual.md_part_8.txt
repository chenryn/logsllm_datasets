--script default Same as -sC
--script= Scan with 
-f Requested scan (including ping scans) use tiny fragmented IP
packets.
-mtu Set your own offset size
-D Send scans from spoofed IPs
-S   Scan  from 
-g Use given source port
--proxies  route  through 
7.3.9 Wireshark
Wireshark Logical Operators
Operator Description
and or && Logical AND
or or || Logical OR
xor or ^^ Logical XOR
not or ! not equal to
[n] or […] Specific string
Wireshark Filtering Packets
eq or == Equal
ne or != Not Equal
gt or > Greater than
lt or = Greater than or equal to
le or  -p; Access mysql from terminal
Access database directly from
mysql -u  -p 
terminal
mysqldump -u  -p  >
Export a database dump
db_backup.sql
show databases; Show all databases
create database ; Create new database
DROP DATABASE ; Delete database
use ; Select and use database
select database(); Determine what database is in use
NOW() MySQL function for datetime input
show tables; Show all tables
DELETE FROM ; Delete all records from a table
truncate table ; Delete all records in a table
DROP TABLE ; Delete table
describe ; Show table structure
show index from ; List all indexes on a table
CREATE TABLE  ( Create new table with columns of
VARCHAR(120),  DATETIME); characters and datetime
ALTER TABLE  ADD COLUMN Add a column
 VARCHAR(120);
ALTER TABLE  ADD COLUMN
Add a column with a unique, auto-
 int NOT NULL AUTO_INCREMENT
incrementing ID
PRIMARY KEY;
INSERT INTO  (,
Insert a record
) VALUES ('', ');
SELECT * FROM ; Select records
SELECT ,  FROM
Select parts of records
;
SELECT ., .
, . FROM
Select from multiple tables
, ;
SELECT COUNT() FROM
Count records
;
UPDATE  SET  = ''
WHERE  =
Update records
;
DELETE FROM  WHERE
Delete records
 = ;
SELECT User,Host FROM mysql.user; List all users
CREATE USER 'username'@'localhost' IDENTIFIED
Create new user
BY 'password';
GRANT ALL ON database.* TO 'user'@'localhost'; Grant ALL access to user for * tables
9.2 POSTGRESQL
Command Description
psql -U  -d  -h
Connect to database
\q or \! Disconnect from database
\copy  TO '' CSV Export database to csv
\l Show all databases
CREATE DATABASE  WITH OWNER
Create new database
;
DROP DATABASE IF EXISTS
Delete database
;
\c  Select and use database
Determine what database is in
SELECT current_database();
use
Postgres function for datetime
current_timestamp
input
\dt Show all tables
DELETE FROM ; Delete all records in a table
DROP TABLE IF EXISTS  CASCADE; Delete table
\d+  Show table structure
\d  List all indexes on a table
CREATE TABLE (  Create new table with columns
VARCHAR(216),  timestamp); of characters and datetime
ALTER TABLE  IF EXISTS ADD
Add a column
[];
ALTER TABLE  ADD COLUMN Add a column with an unique,
 SERIAL PRIMARY KEY; auto-incrementing ID
INSERT INTO  VALUES(
Insert a record
,  );
SELECT * FROM  WHERE
Select records
 = ;
SELECT COUNT(*) FROM table_name WHERE condition; Count records
UPDATE  SET 
= ,  =  WHERE Update records
 = ;
DELETE FROM  WHERE
Delete records
 = ;
\du List all users
CREATE USER  WITH PASSWORD
Create new user
'';
GRANT ALL PRIVILEGES ON Grant ALL access to user for
DATABASE  TO ; * tables
9.3 MS SQL
Command Description
Access mssql cmd from
sqlcmd -S localhost -U  -P ''
terminal
BACKUP DATABASE  TO DISK =
Export a database dump
'';
SELECT name FROM master..sysdatabases; Show all databases
CREATE DATABASE  Create new database
DROP DATABASE databasename; Delete database
USE  Select and use database
Determine what database is in
SELECT DB_NAME()
use
MS SQL function for date and
SELECT getdate();
time
SELECT name FROM ..sysobjects WHERE xtype
Show all tables
= ‘U’;
DELETE FROM ; Delete all records from a table
TRUNCATE TABLE ; Delete all records in a table
DROP TABLE table_name; Delete table
select * from INFORMATION_SCHEMA.COLUMNS where
Show table structure
TABLE_NAME=''
EXEC sp_helpindex '[[[SCHEMA-NAME.
List all indexes on a table
]]]'
Create new table with columns
CREATE TABLE  ( 
of characters
varchar(255),  DATETIME ); and datetime
ALTER TABLE  ADD 
Add a column
;
ALTER TABLE  ADD  int IDENTITY(1,1) Add a column with a unique,
PRIMARY KEY auto- incrementing ID
INSERT INTO  () VALUES (''); Insert a record
SELECT * FROM  WHERE
Select records
;
SELECT DISTINCT ,  FROM ; Select parts of records
SELECT COUNT() FROM  WHERE
Select from multiple tables
;
SELECT COUNT(*) FROM ; Count records
UPDATE  SET  = '' WHERE
Update records
;
DELETE
Delete records
FROM  WHERE ;
SELECT name FROM master..syslogins List all users
CREATE USER  WITH PASSWORD =
Create new user
'';
Grant ALL access to user for *
GRANT ALL PRIVILEGES ON *.* TO 
tables
10 S
CRIPTING
10.1POWERSHELL
Command Result
creates variable $arg and assigns
$arg=
remove-variable arg removes variable $arg
#comment single line comment
 multiple line comment
help  searches for cmdlet with  in the name
gives SYNTAX, ALIASES and REMARKS for
help 
$arr = @() initialize empty array
$arr = 1,2,3 initialize array of integers
$arr = "A", "B", "C" initialize array of strings
$arr = 1..10 initialize array of integers with values 1 - 10
$arr[0] access first index of array
$arr[$value] access $value index of array
$hash = @{name1=1; name2=2} initialize hash table
$hash = @{} initialize empty hash table
this is
PS >$string = "this is a string" PS >$split =
#prints "this is" to the screen, output of -split is
$string -split "a" PS >$split[0]
array of value before and after
10.2PYTHON
Command Result
arg= creates variable arg and assigns 
print(arg) prints value of arg
del arg removes variable arg
#comment single line comment
/*  */ multiple line comment
arr = [] initialize empty array
arr = ['A','B','C'] initialize array of strings
arr = [1,2,3] initialize array of integers
arr[0] access first index of array
arr[value] access value index of array
arr = [i for i in range(1, 10)] initialize array of integers with values 1 - 10
arr.append('') add  to array
user=input("Input value") takes user input and assigns to variable user
dict = {} initialize empty dictionary
dict = {'name1':1,'name2':2} creates a dictionary
var == value checks if var is equal to value
var != value checks if var is not equal to value
var > value checks if var is greater than value
var >= value checks if var is greater than or equal to value
var  creates variable arg and assigns 
print(arg) prints value of arg
del arg removes variable arg
#comment single line comment
/*  */ multiple line comment
declare -a  initialize empty array
arr=(A B C) initialize array of strings
arr=(1 2 3) initialize array of integers
echo ${arr[0]} access first index of array
echo ${arr[X]} access X index of array
arr+=(D E) add new elements to the array
for i in ${arr[@]} loop through array
read -p "Enter Value: " arg takes user input and assigns to variable arg
dict=( ["Name1"]="1"
create a dictionary
["Name2"]="2")
dict = {'name1':1,'name2':2} creates a dictionary
var == value checks if var is equal to value
var != value checks if var is not equal to value
var > value checks if var is greater than value
var >= value checks if var is greater than or equal to value
var < value checks if var is less than value
var <= value checks if var is less than or equal to value
-z val true if the string length is zero
-n val true if the string length is non zero
10.4ASCII TABLE
11 W
EB
11.1USER AGENTS
Browser User Agent
Mozilla/5.0 (Windows NT 10.0; Win64; x64)
Google Chrome AppleWebKit/537.36 (KHTML, like Gecko)
Chrome/58.0.3029.110 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0)
Mozilla Firefox
Gecko/20100101 Firefox/53.0
Mozilla/5.0 (Windows NT 10.0; Win64; x64)
Microsoft Edge AppleWebKit/537.36 (KHTML, like Gecko)
Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393
Microsoft Internet Explorer
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)
6 / IE 6
Microsoft Internet Explorer
Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)
7 / IE 7
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Microsoft Internet Explorer Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET
8 / IE 8 CLR 3.0.4506.2152;
.NET CLR 3.5.30729)
Microsoft Internet Explorer Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0;
9 / IE 9 Trident/5.0; Trident/5.0)
Microsoft Internet Explorer Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2;
10 / IE 10 Trident/6.0; MDDCJS)
Microsoft Internet Explorer Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;
11 / IE 11 rv:11.0) like Gecko
Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS
Apple iPad X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0
Mobile/12H321 Safari/600.1.4
Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1
like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko)
Apple iPhone
Version/10.0 Mobile/14E304 Safari/602.1
Googlebot (Google Search Mozilla/5.0 (compatible; Googlebot/2.1;
Engine Bot) +http://www.google.com/bot.html)
Bing Bot (Bing Search Mozilla/5.0 (compatible; bingbot/2.0;
Engine Bot) +http://www.bing.com/bingbot.htm)
Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y
Build/MMB29K)
Samsung Phone AppleWebKit/537.36 (KHTML, like Gecko)
SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile
Safari/537.36
Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900
Samsung Galaxy Note 3 Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko)
SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36
Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-N910F
Build/MMB29M)
Samsung Galaxy Note 4 AppleWebKit/537.36 (KHTML, like Gecko)
SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile
Safari/537.36
Mozilla/5.0 (Linux; U; Android-4.0.3; en-us; Galaxy Nexus
Google Nexus Build/IML74K) AppleWebKit/535.7 (KHTML, like Gecko)
CrMo/16.0.912.75 Mobile Safari/535.7
Mozilla/5.0 (Linux; Android 7.0; HTC 10 Build/NRD90M)
HTC AppleWebKit/537.36 (KHTML, like Gecko)
Chrome/58.0.3029.83 Mobile Safari/537.36
Curl curl/7.35.0
Wget Wget/1.15 (linux-gnu)
Lynx/2.8.8pre.4 libwww-FM/2.14 SSL- MM/1.4.1
Lynx
GNUTLS/2.12.23