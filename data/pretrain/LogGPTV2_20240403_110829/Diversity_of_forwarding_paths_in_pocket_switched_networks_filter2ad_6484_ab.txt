1. Let T = cΔ such that t1 ∈ [T − Δ, T ).
2. Let s = i such that xi = σ.
3. Let Pij = ∅ for all i, j.
4. Let Ps1 = ((σ, T )).
5. While (true)
(a) Let X = ∅.
(b) For i = 1, . . . , N
i. For j = 1, . . . , k
• If Pij (cid:6)= ∅:
A. Let X(cid:2)
= all distinct extensions
of path Pij to vertices reachable
from (xi, T + Δ) via paths of zero
weight.
B. Let X = X ∪ X(cid:2)
.
(c) Remove the invalid paths from X.
(d) Output all paths in X reaching δ.
(e) If there are k or more paths in X reaching
δ, stop.
(f) For i = 1, . . . , N
i. Select the (up to) k shortest paths from
X that terminate at node xi and place
them in Pij , j = 1, . . . , k.
(g) Let T = T + Δ.
Figure 2: Algorithm for k shortest paths enumera-
tion.
To make the notion concrete, we deﬁne the time that path
explosion occurs to be the time by which 2000 paths in total
have reached the destination, i.e., T2000. We would like to
point out that there is nothing sacrosanct about the number
2000; we believe that by enumerating 2000 paths (; a large
number of paths) we can develop a concrete picture of the
set of paths available. Note that we can always identify
this time accurately (to within an error of Δ) as long as
we set k in our algorithm to be 2000 or greater. We refer
to the ‘time to explosion’ (TE) as the elapsed time between
the arrival of the ﬁrst path and the arrival of the 2000th
path, i.e., TE = T2000 − T1. We would also like to point
out that there is a possibility that some messages might not
have 2000 paths, but may still have a fairly large number of
paths between them. We do not consider such messages.
In Figure 3(a) we show the CDFs for optimal path dura-
tion in datasets Infocom ’06 9-12 and Infocom ’06 3-6. The
ﬁgure shows that optimal path duration can be quite long;
in fact, a large fraction of messages (over 25%) require over
1000 seconds before the ﬁrst path reaches the destination.
On the other hand, Figure 3(b) shows CDFs for the time to
explosion. Here the story is quite diﬀerent: almost half the
messages see an explosion with little or no delay, and 97%
of them have TE less than or equal to 150 secs.
These ﬁgures show the surprising fact that optimal path
duration can be an order of magnitude or more greater than
time to explosion. That is, in many cases, the ﬁrst path
takes a long time to reach the destination, after which many
paths reach the destination in relatively short order.
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
]
x
 0 and j ≥ 0, transitions
of the type (i, j) as deﬁned above occur with the following
intensity:
βi,j =
{ λn,m | n (cid:6)= m s.t. Sn(t) = i , Sm(t) = j } .
Proposition 1. The rate of transition βi,j is a function
X
of the density of nodes in each state U (t)/N .
„
«
βi,j = N · λ
Ui(t)
N
Uj(t)
N = N ˜βi,j
U (t)
N
Proof. Let us ﬁx an n such that Sn = i. Then we have
X
λn,m = λ
Uj(t)
N
,
{ xm | Sm(t)=j }
since we have assumed that the contact process for each
node xn has rate λ and is homogeneous with regard to other
nodes.
Summing for all nodes xn having state i we obtain
βi,j = Ui(t)λ
Uj(t)
N = N · λ
Ui(t)
Uj (t)
N
N
We can describe the process U (t) taking on values in
NN as a Markov jump process, with transitions indexed by
{ (i, j) | i > 0 , j ≥ 0 }.
The rate of transition (i, j) is a function ˜βi,j only of the
density U (t)/N of nodes having states i and states j, multi-
plied by N . In other words, the process U (t) may be written
as
„
««
U (s)
N
(ei+j − ej) ·
Ni,j
0
ds
i>0,j≥0
U (0) +
where, for all i > 0, j ≥ 0, Ni,j denotes a Poisson counting
process with intensity 1, and ek denotes the inﬁnite vector
with all entries null except for 1 at position k.
N ˜βi,j
When one considers the density process U (t)/N in the
case where N is large, Kurtz’s limit theorem [12] shows that
one can replace the Poisson counting process in the above
expression by the process mean. This means that the tra-
jectory of the density process for large N closely approaches
the solution of a deterministic ordinary diﬀerential equation.
Z t
„
X
Proposition 2. As N goes to inﬁnity, if we assume that
U (0)/N → u(0) > 0, then we have for all K ≥ 0:
sup
0≤s≤t , 0≤k≤K
− uk(s)
˛˛˛˛ Uk(s)
X
N
˛˛˛˛ → 0 a.s.
Z t
where u : [0; ∞[→ RN is the solution of the ODE
u(t) = u(0) +
i>0,j≥0
(ei+j − ej) ·
˜βi,j (u(s)) ds
0
Proof. A priori the process U (t)/N evolves in a space
with an inﬁnite number of dimensions NN, hence Kurtz’s
limit theorem [12] does not immediately apply to it. How-
ever, one can consider for any K > 0 a threshold process
where all nodes in states { k | k > K } are collapsed into a
collection of nodes in a single sink state. This threshold pro-
cess has a ﬁnite number of dimensions, and satisﬁes all the
assumptions of the Kurtz limit theorem. To complete the
proof we note that the threshold process deﬁnes exactly the
same dynamics for states in { 0,··· , K } as in the inﬁnite
process.
Proposition 3. For any k ≥ 0, we have
uk(t) = uk(0) + λ
ui(s)uk−i(s) − uk(s)ds
(1)
Z t
kX
0
i=0
The ﬁrst case above allows us to derive closed form expres-
sion for the evolution with time of the mean number of paths
per node (see below), as well as the other moments. In the
second case, for any x > 1 the series φx becomes inﬁnite in
ﬁnite time TC (x) = 1
. In other words, if the
initial distribution for the number of paths per node is light-
tailed for a given coeﬃcient, it loses this property within a
ﬁnite time.
φx(0)
φx(0)−1
“
”
p ln
Proof. From the deﬁnition of u found in Proposition 2,
we obtain that uk(t)− u0(t) may be written for all k ≥ 0 as:
X
Z t
˜βi,j (u(s)) ds −
˜βi,j (u(s)) ds
X
Z t