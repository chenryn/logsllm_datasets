# Persistent OSPF Attacks

**Authors:**
- Gabi Nakibly<sup>1,2</sup>
- Alex Kirshon<sup>2</sup>
- Dima Gonikman<sup>2</sup>
- Dan Boneh<sup>3</sup>

**Affiliations:**
- <sup>1</sup> National EW Research & Simulation Center, Israel
- <sup>2</sup> CS Department, Technion, Israel
- <sup>3</sup> CS Department, Stanford University

**Conference:**
- Network & Distributed System Security 2012

## Overview
- These attacks allow remote control of a router's routing table without the need to compromise the router itself.
- A single compromised router within an Autonomous System (AS) can compromise the entire AS's routing.
- Potentially, every OSPF implementation is vulnerable.
- The attacks have been verified against Cisco's IOS.

## Who is Vulnerable?
- All commercial routers are potentially vulnerable.
- The vulnerabilities were found in the specification of the OSPF protocol [RFC 2328].
- The attacks have been verified against Cisco IOS 15.0(1)M, the latest stable release at the time.

## Outline
1. OSPF Primer
2. OSPF Security Strengths
3. Newly Found Vulnerabilities and Attacks
4. Effectiveness of the Attacks

## Internet Routing – The Big Picture
- **Inter-AS Routing:** BGP
- **Intra-AS Routing:** OSPF, RIP, IS-IS

### How OSPF Works?
- **Network Example:**
  - Router `Ra` advertises Link State Advertisements (LSAs) to its neighbors.
  - Router `Rb` receives and processes these LSAs, updating its LSA database.
  - The LSA database contains information about the network topology, such as `Net-1`, `Ra`, and `Rb`.

### LSA Details
- Each LSA is advertised periodically.
- **Sequence Number:** Differentiates between instances of the same LSA.
- **Age:** Allows a specific instance of an LSA to expire.

## The Attacker
- **Location:** Inside the AS
- **Control:** A single router
- **Goal:** Persistent control over the routing tables of other routers in the AS

## OSPF Security Strengths
- **Per-link Authentication:** Each link has its own shared secret.
- **LSA Flooding:** Every LSA is flooded throughout the AS.
- **Fight Back Mechanism:** Ensures that false LSAs are detected and rejected.

## Known Attacks
- **Falsify LSAs:**
  - **Attacker’s Router:** Limited impact.
  - **Other Routers:** Examples include Seq++, MaxSeq, etc.
  - **Trigger Immediate Fight Back:** Non-persistent attack.
  - **Phantom Routers:** Do not affect the routing table.

- **Summary:**
  - Commonly believed that even if the attacker is an insider, they cannot persistently falsify the LSA of a router they do not control.
  - Therefore, they cannot significantly poison the routing tables of other routers.

## New Attacks
- **Attack #1 – Remote False Adjacency:**
  - Make a remote router include a non-existing link in its LSA.

- **Attack #2 – Disguised LSA:**
  - Falsify the entire LSA of a remote router.

### Attack #2 – Disguised LSA
- **Vulnerability:**
  - Two different instances of an LSA are considered identical if they have the same:
    - Sequence number
    - Checksum
    - Age (±15 minutes)
  - The actual payload of the LSAs is not considered.

- **The Attack:**
  - Advertise a false LSA with the same values for these three fields as a valid LSA.
  - No fight back is triggered since the victim views the false LSA as a duplicate.

- **Problem:**
  - All other routers in the AS will also consider the false LSA as a duplicate and will not install it in their LSA DB.

- **Solution:**
  - Disguise the LSA to the next valid instance of the LSA.
  - Use the fight-back mechanism to trigger the next valid instance.

### Application
- **Steps:**
  - Flood the trigger LSA followed by the disguised LSA.
  - The fight back LSA is rejected as a duplicate.
  - The disguised LSA is accepted as the next valid instance.

### Crafting the Disguised LSA
- **Age:** Advertise the disguised LSA within 15 minutes of the valid (fight back) LSA.
- **Sequence:** Increment the sequence number by one.
- **Checksum:** Add a dummy link entry to the payload and calculate its value to achieve the desired checksum.

## Attack Effectiveness
- **Simulation:**
  - Conducted on real ISP topologies inferred from the RocketFuel project.
  - Measured the percentage of poisoned routers for each pair of attacker-victim locations.

## Conclusions
- Until now, it was commonly believed that an insider attacker could not persistently poison the routing table of a router they do not control.
- The new attacks debunk this misconception.
- Using these attacks, one can control the entire routing domain from a single router.

## Summary
- These attacks enable control of the entire routing domain from a single router.