#### Description
Output of SVC.decision_function for one observation depends on the other
observations --> it is not independant.
#### Steps/Code to Reproduce
    import numpy
    from sklearn.svm import SVC
    from sklearn.datasets import load_iris
    iris = load_iris()
    X = iris.data[:, :3]
    y = iris.target
    model = SVC()
    model.fit(X, y)
    X1 = X[:1] * 0.10
    X2 = X[1:2]
    X3 = X[2:3]
    X1X2 = numpy.vstack([X1, X2])
    X2X3 = numpy.vstack([X2, X3])
    X1X3 = numpy.vstack([X1, X3])
    X1X2X3 = numpy.vstack([X1, X2, X3])
    print('X1')
    print(model.decision_function(X1))
    print('X2')
    print(model.decision_function(X2))
    print('X3')
    print('')
    print('X1 X2')
    print(model.decision_function(X1X2))
    print('X2 X3')
    print(model.decision_function(X2X3))
    print('')
    print('X1 X2 X3')
    print(model.decision_function(X1X2X3))
#### Expected Results
decision_function should verify:
decision_function(X1) == decision_function(X1X2)[:1]
#### Actual Results
    X1
    [[-0.49153396  0.99153396  2.5       ]]
    X2
    [[ 2.5         0.77197248 -0.27197248]]
    X3
    X1 X2
    [[-0.04698652  0.99919072  2.0477958 ]
     [ 2.5         0.77197248 -0.27197248]]
    X2 X3
    [[ 2.48614274  0.77829215 -0.26443489]
     [ 2.5         0.75104163 -0.25104163]]
    X1 X2 X3
    [[-0.04568431  0.99921315  2.04647116]
     [ 2.48614274  0.77829215 -0.26443489]
     [ 2.5         0.75104163 -0.25104163]]
#### Reasons
decision_function calls _ovr_decision_function which normalizes outputs based
on the whole set of observations.
https://github.com/scikit-learn/scikit-
learn/blob/master/sklearn/utils/multiclass.py#L432
#### Versions
Windows-10-10.0.17134-SP0  
Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit
(AMD64)]  
NumPy 1.15.3  
SciPy 1.1.0  
Scikit-Learn 0.20.0