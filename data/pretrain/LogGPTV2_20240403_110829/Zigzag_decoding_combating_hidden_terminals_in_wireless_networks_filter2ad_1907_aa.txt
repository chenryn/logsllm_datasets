title:Zigzag decoding: combating hidden terminals in wireless networks
author:Shyamnath Gollakota and
Dina Katabi
ZigZag Decoding: Combating Hidden Terminals in Wireless
Networks
Shyamnath Gollakota and Dina Katabi
MIT CSAIL
ABSTRACT
This paper presents ZigZag, an 802.11 receiver design that combats
hidden terminals. ZigZag’s core contribution is a new form of in-
terference cancellation that exploits asynchrony across successive
collisions. Speciﬁcally, 802.11 retransmissions, in the case of hidden
terminals, cause successive collisions. These collisions have different
interference-free stretches at their start, which ZigZag exploits to
bootstrap its decoding.
ZigZag makes no changes to the 802.11 MAC and introduces no
overhead when there are no collisions. But, when senders collide,
ZigZag attains the same throughput as if the colliding packets were
a priori scheduled in separate time slots. We build a prototype of
ZigZag in GNU Radio. In a testbed of 14 USRP nodes, ZigZag
reduces the average packet loss rate at hidden terminals from 72.6%
to about 0.7%.
Categories and Subject Descriptors C.2.2 [Computer Sys-
tems Organization]: Computer-Communications Networks
General Terms Algorithms, Design, Performance, Theory
Keywords Wireless, Hidden Terminals, Interference Cancellation
1
Introduction
Collisions and hidden terminals are known problem in 802.11 net-
works [8, 21, 18, 26, 33]. Measurements from a production WLAN
show that 10% of the sender-receiver pairs experience severe packet
loss due to collisions [8]. Current 802.11 WLANs rely on carrier
sense (CSMA) to limit collisions–i.e., senders sense the medium and
abstain from transmission when the medium is busy. This approach
is successful in many scenarios, but when it fails, as in the case of
hidden terminals, the impact on the interfering senders is drastic; the
senders either repeatedly collide and their throughputs plummet, or
one sender captures the medium preventing the other from getting
packets through [21, 18, 33]. The 802.11 standard proposes the use
of RTS-CTS to counter collisions, but experimental results show
that enabling RTS-CTS signiﬁcantly reduces the overall through-
put [18, 33, 36, 26], and hence WLAN deployments and access point
(AP) manufacturers disable RTS-CTS by default [1, 2]. Ideally, one
would like to address this problem without changing the 802.11 MAC
or affecting senders that do not suffer from hidden terminals.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 . . . $5.00.
We introduce ZigZag, a new 802.11 receiver that increases
WLAN’s resilience to collisions. ZigZag requires no changes to
the 802.11 MAC and introduces no overheard in the case of no colli-
sion. In fact, in the absence of collisions, ZigZag acts like a typical
802.11 receiver. But, when senders collide, ZigZag achieves the
same performance as if the colliding packets were a priori scheduled
in separate time slots.
ZigZag exploits a subtle opportunity for resolving collisions, an
opportunity that arises from two basic characteristics of 802.11:
1. An 802.11 sender retransmits a packet until it is acked or timed
out, and hence when two senders collide they tend to collide again
on the same packets.
2. 802.11 senders jitter every transmission by a short random inter-
val,1 and hence collisions start with a random stretch of interfer-
ence free bits.
To see how ZigZag works, consider the hidden terminal scenario
in Fig. 1, where Alice and Bob, unable to sense each other, transmit
simultaneously to the AP, causing collisions. When Alice’s packet
collides with Bob’s, both senders retransmit their packets causing
a second collision, as shown in Fig. 2. Further, because of 802.11
random jitters, the two collisions are likely to have different offsets,
i.e., ∆1 6= ∆2. Say that the AP can compute these offsets (as explained
in §5.1), the AP can then ﬁnd a chunk of bits that experience inter-
ference in one collision but is interference-free in the other, such
as chunk 1 in Fig. 2. A ZigZag AP uses this chunk to bootstrap its
decoder. In particular, since chunk 1 is interference-free in the ﬁrst
collision, the AP can decode it using a standard decoder. The AP
then subtracts chunk 1 from the second collision to decode chunk 2.
Now, it can go back to the ﬁrst collision, subtract chunk 2, decode
chunk 3, and proceed until both packets are fully decoded.
ZigZag’s key contribution is a novel approach to resolving interfer-
ence, different from prior work on interference cancellation [31, 16]
and joint decoding [29]. Basic results on the capacity of the multi-
user channel show that if the two hidden terminals transmit at the
rate supported by the medium in the absence of interference, i.e.,
rate R in Fig. 3, the aggregate information rate in a collision, being
as high as 2R, exceeds capacity, precluding any decoding [29, 11].
Thus, state-of-the-art interference cancellation and joint decoding,
designed for cellular networks with non-bursty trafﬁc and known
users [31, 4], have a fundamental limitation when applied in 802.11
networks: they require a sender to change the way it modulates and
codes a packet according to whether the packet will collide or not.
This leaves 802.11 senders with the following tradeoff: either they
tune to a suboptimal rate that works in the presence of collision,
though not every packet will collide, or they send at the best rate
in the absence of collision, but accept that the network cannot use
these methods to resolve collisions. In contrast, with ZigZag, the
senders need not make such a tradeoff. ZigZag allows the senders
1Each transmission picks a random slot between 0 and CW [34].
Alice
AP
Bob
Figure 1: A Hidden Terminals Scenario.
1
∆1
3
2
Pa
4
Pb
1
3
2
4
∆2
Pa
Pb
Figure 2: ZigZag Decoding. ZigZag decodes ﬁrst chunk 1 in the ﬁrst
collision, which is interference free. It subtracts chunk 1 from the second
collision to decode chunk 2, which it then subtract from the ﬁrst collision
to decode chunk 3, etc.
to transmit at the best rate supported by the medium in the absence
of collisions. However, if collisions occur, ZigZag decodes pairs of
collisions that contain the same packets. The average information
rate in such a collision pair is 2R/2 = R. This rate is both decodable
and as efﬁcient as if the two packets were scheduled in separate time
slots.
ZigZag has the following key features.
• It is modulation-independent: In ZigZag, every chunk is ﬁrst
rid of interference then decoded. Hence, ZigZag can employ a
standard 802.11 decoder as a black-box, which allows it to work
with collisions independent of their underlying modulation scheme
(i.e., bit rate), and even when the colliding packets are modulated
differently.
• It is backward compatible: A ZigZag receiver can operate with
unmodiﬁed 802.11 senders and requires no changes to the 802.11
protocol (see §7 for how to send acks).
• It generalizes to more than a pair of colliding packets, as explained
in §8 and experimentally demonstrated in §10.6.
We have implemented a ZigZag prototype in GNU Radio, and
evaluated it in a 14-node testbed, where 10% of the sender-receiver
pairs are hidden terminals, 10% sense each other partially, and 80%
sense each other perfectly. Our results reveal the following ﬁndings.
• The loss rate averaged over scenarios with partial or perfect hidden
terminals decreases from 72.6% to less than 0.7%, with some
severe cases where the loss rate goes down from 100% to zero.
• Averaging over all sender-receiver pairs, including those that do
not suffer from hidden terminals, we ﬁnd that ZigZag improves the
average throughput by 25.2% when compared to current 802.11.
• Our BPSK GNURadio implementation and our 4-QAM and 16-
QAM simulations show that ZigZag and collision-free decoding
achieve the same bit error (BER) for comparable SNRs. Surpris-
ingly, at BPSK and 4-QAM, ZigZag has a slightly lower BER than
if the two packets were collision-free. This is because, in ZigZag,
every bit is received twice, once in every collision, improving its
chances of being correctly decoded.
2 Related Work
Related work falls in the following two areas.
(a) Collisions in WLAN and Mesh Networks. Recent work [14,
15] advocates the use of successive interference cancellation (SIC)
and joint decoding to resolve 802.11 collisions. As explained in §1,
these schemes work only when the colliding senders transmit at a
R
e
t
a
R
.
g
v
A
s
b
o
B
’
Rmax
(R,R)
Alice’s Avg. Rate
R
Rmax
Figure 3: Standard Interference Cancellation and Joint Decoding Re-
quire Inefﬁcient Rates. The ﬁgure shows the capacity region of the multi-
user channel. If Alice and Bob transmit close to the best rate supported
by the medium in the absence of interference, R, their combined rates
will be (R, R), which is outside the capacity region, and hence cannot be
decoded.
bit rate (i.e., information rate) signiﬁcantly lower than allowed by
their respective SNRs and code redundancy. The authors have built a
Zigbee prototype of successive interference cancellation [15]. Since
ZigBee has no rate adaptation and employs a high redundancy code
(every 4 bits are expanded to 32 bits), it experiences scenarios in
which the bit rate is signiﬁcantly below what can be supported by the
SNR and the code rate. In such scenarios, SIC could signiﬁcantly
improve the throughput. In contrast, ZigZag works even when a
sender uses a bit rate that matches its channel’s SNR and the redun-
dancy of its code (as would be the case for systems with proper rate
adaptation). In that respect, ZigZag provides an attractive alternative
to SIC.
Our work is also related to analog network coding (ANC) [20].
An ANC receiver however can decode collisions only if it already
knows one of the two colliding packets. It cannot deal with general
collisions or hidden terminals. In principle, one can combine ANC
and ZigZag to create a system both addresses hidden terminals, and
collects network coding gains.
Additionally, prior works have studied wireless interference [27,
13, 8, 21, 18, 26, 33], and proposed MAC modiﬁcations to increase
resilience to collisions [37, 10, 19, 5, 25]. In comparison, this paper
presents mechanisms that decode collisions rather than avoiding
them, and works within the 802.11 MAC rather than proposing a new
MAC.
(b) Communication and Information Theory: The idea of decod-
ing interfering users has received much interest in information and
communications theories [29, 31, 7, 30, 32]. The main feature that
distinguishes ZigZag from prior works in those areas is that ZigZag
resolves 802.11 collisions without requiring any scheduling, power
control, synchronization assumptions, or coding.
Among the deployed systems, CDMA receivers decode a user by
treating all other users as noise [7]. A CDMA solution for hidden
terminals in WLANs, however, would require major changes to
802.11 including the use of power control and special codes [4, 7].
Furthermore, CDMA is known to be highly suboptimal in high SNR
regimes (e.g., worse than TDMA [29]), which are typical in WLANs.
Finally, successive interference cancellation (SIC) has been used to
decode interfering users in CDMA cellular networks [4]. SIC requires
the interfering senders to have signiﬁcantly different powers [31], or
different levels of coding [16, 29]. It also requires tight control from
the base station to ensure that the total information rate stays below
capacity. Conceptually, SIC may be perceived as a special case of
ZigZag, in which a chunk is a full packet, i.e., a full packet is decoded
and subtracted from the collision signal to decode the other packet.
However, by iterating over strategically-picked chunks, ZigZag can
resolve interference even when the colliding senders have similar
SNRs, are not coordinated, and do not use special codes.
1
Pa
∆1
2
Pb
1
2
Pa
Pb
∆2
(a) Overlapped Collisions
2
Pa
∆1
1
Pb
2
∆2
1
Pa
Pb
(b) Flipped Order
1
Pa
∆1
2
Pb
1
2
∆2
Pa
Pb
(c) Different Packet Sizes
Pa1
1
3
Pa2
Pb1
2
3
Pb1
(d) Alice’s Packets Enjoy the Capture Effect
Pa
1
2
Pb
(e) Single Decodable Collision; Inefﬁcient Choice of Bit Rates
3
Pa
2
2
Pc
Pc
1
4
4
Pb
Pd
Pd
3
Pa
4
4
P
Pd
1
2
2
Pb
P
Pc
(f) Nodes A and B are hidden from C and D
Figure 4: ZigZag applies to various collision patterns. Subscripts refer
to a packet’s sender and id, e.g., Pa1 is Alice’s ﬁrst packet. The top three
patterns are decoded chunk-by-chunk. The forth pattern may occur
when Alice’s SNR is signiﬁcantly higher than Bob’s. The ﬁfth pattern
occurs when Alice’s SNR is higher than Bob’s, and the bit rates are too
low for the SNRs. The last pattern occurs when two groups of nodes are
hidden from each other.
3 Scope
ZigZag is an 802.11 receiver design that decodes collisions. It focuses
on hidden terminals in WLANs. ZigZag’s beneﬁts extend to mesh
networks, where having receivers that can decode collisions could
enable more concurrent transmissions and hence higher spatial reuse.
Exploring mesh beneﬁts is, however, beyond the scope of this paper.
ZigZag adopts a best effort design; in the absence of collisions it
acts like current 802.11 receivers, but when collisions occur it tries
to decode them. Of course there are collision patterns that ZigZag
cannot decode and there are cases where, though the pattern is decod-
able, decoding may fail because of insufﬁcient SNR. However, since
ZigZag does not introduce any overhead for the case of no collision,
its presence can only increase the throughput of the WLAN. In §7,
we explain how one can deploy ZigZag in a WLAN by changing
only the access points and without modifying the clients.
ZigZag resolves a variety of collision patterns. The main idea
underlying its decoding algorithm is to ﬁnd a collision free chunk,
which it exploits to bootstrap the decoding process. Once the decoder
is bootstrapped the process is iterative and at each stage it produces
a new interference-free chunk, decodable using standard decoders.
For example, as explained in §1, ZigZag can decode the pattern in
Fig. 2 by decoding ﬁrst chunk 1 in the ﬁrst collision, and subtracting
it from the second collision, obtaining chunk 2, which it decodes
and subtracts from the ﬁrst collision, etc. Using the same principle,
ZigZag can decode other patterns like those in Fig. 4. In particular, it
can decode patterns where the collisions overlap as in Fig. 4a, and
patterns in which colliding packets change order as in Fig. 4b, or
even patterns where the packets have different sizes, as in Fig. 4c.
fects. Say that Alice’s power at the AP is signiﬁcantly higher than
Bob’s, and hence her packets enjoy the capture effect [33]. Currently
such a scenario translates into signiﬁcant unfairness to Bob whose
packets do not get through [21, 18, 33]. Like current APs, a ZigZag
AP decodes every packet from Alice, the high power sender. Un-
like current APs however, ZigZag subtracts Alice’s packet from the
collision signal and try to decode Bob’s packet. However, if Alice’s
power is excessively high, even a small imperfection in subtracting
her signal would contribute a signiﬁcant noise to Bob’s, prevent-
ing correct decoding of his packets. In this case, the next collision
will involve a new packet from Alice and Bob’s retransmission of
the same packet, as shown in Fig. 4d. ZigZag decodes Alice’s new
packet and subtracts it to obtain a second version of Bob’s packet,
which may also contain errors. ZigZag however combine the two
faulty versions of Bob’s packet to correct the errors. This is done
using Maximal Ratio Combining (MRC) [6], a classic method for
combining information from two receptions to correct for bit errors.
In addition, whenever the powers permit, ZigZag decodes patterns
that involve a single collision like those in Fig. 4e. This occurs when
Alice’s power is signiﬁcantly higher than Bob’s, and both senders
happen to transmit at a bit rate lower than the best rate supported
by the channel. In this case, ZigZag can apply standard successive
interference cancellation [31], i.e., ZigZag decodes Pa and subtracts
it from the received signal to decode Pb, decoding both packets
using a single collision. As explained in §2, successive interference
cancellation is a special case of ZigZag, in which a chunk is a full
packet. This special case applies only when the bit-rate is too low
given the senders’ SNRs, and one of the senders has signiﬁcantly
more SNR than the other.
ZigZag can also decode patterns that involve more than two nodes,
like that in Fig. 4f. This pattern may occur when two groups of nodes
cannot sense each other. For example, nodes A and B, which are in
the same room, can sense each other, but cannot sense nodes C and
D, which happen to be in a different room.
ZigZag can also decode collisions that involve more than a pair of
packets, which we discuss in detail §8.
4 A Communication Primer