encoding of an extra bit in TCAM: set the bit to 1 when the range
speci(cid:2)cation in the rule encompasses the range R, and 0 otherwise.
Furthermore, the extra bit in the search key is set to 1 if the key
falls in the range R, and 0 otherwise. This encoding reduces the
expansion of all rules that contain the range R to 1.
The simple scheme described above requires an extra bit for each
distinct range that appears in the database to achieve a worst-case
expansion of 1. To scale to databases with several unique ranges,
region-based range encoding schemes have been proposed [11,22].
These schemes divide the ranges into many regions and use a hier-
archical encoding; they (cid:2)rst encode the regions and then the ranges
within the regions. Since the encoding depends on the database,
incremental updates of the rules are expensive.
Furthermore, to append the search key with the appropriate bits,
the packet processor needs logic with a certain number of com-
parators. While the overhead on the processor is small for databases
with a few unique ranges, as the number of unique ranges increases,
the logic gets prohibitively large. Since Table 1 shows a trend of in-
creasing number of unique ranges, we expect this problem to only
worsen. An alternative to using the logic with comparators is to
have a precomputed table that maps each possible key value into
the appropriate extra bits. While precomputation is feasible today
for 16-bit range (cid:2)elds (corresponds to a table with 64K entries), for
larger widths, the table would get prohibitively large. For example,
even a 24-bit (cid:2)eld would require a table size of 16M entries.
3.1.3 Modifying TCAMs to Accommodate Ranges
TCAM modi(cid:2)cations to accommodate range matching better(cid:151)
such as implementing comparators at each entry level(cid:151)have been
proposed [16]. Experimenting with such approaches is important.
However, since TCAMs are massively parallel, circuit-intensive de-
Range
(cid:21) 0
(cid:21) 1
(cid:21) 2
(cid:21) 3
Pre(cid:2)xes DIRPE with 1 extra bit
xx
01; 1x
1x
11
xx x
xx 1
1x x
11 x
Table 2: Expansion of “(cid:21)” ranges on a 2-bit ﬁeld using preﬁx expan-
sion and DIRPE. Notice that the representation is in ternary and not
preﬁx format. The search key b1b0 would be replaced by b1b0c where
c = b0 OR b1)
vices, even small changes at a per-entry circuit level can, besides re-
quiring several million dollars of investment, suffer from long lead
times (of at least a few years) before they can be produced at ac-
ceptable speed, cost and power. Hence, while modifying TCAMs
is not impossible, changing the ternary nature of the entries has
many barriers; software-based algorithms that use existing TCAMs
to better represent range rules are often preferred.
3.2 Database Independent Range PreEncod-
ing (DIRPE)
3.2.1 Basic Ideas behind DIRPE
DIRPE is based on two simple ideas. First, instead of represent-
ing a range as a set of pre(cid:2)xes, we can represent it as a set of arbi-
trary ternary values. (For example, 0xx1x0 is a ternary value that
is not a pre(cid:2)x.) Second, additional unused bits in a TCAM array
can be used to encode the ternary strings. Hence, the ternary val-
ues would be wider than the pre(cid:2)xes, but the total number of them
would be less than the number of pre(cid:2)xes, even in the worst case.
Since TCAMs have pre-de(cid:2)ned widths, extra bits are available in
each row (cid:147)for free(cid:148) after storing the bits corresponding to the rule.
We illustrate these ideas using a simple encoding for ranges of
the form (cid:147)(cid:21)(cid:148) on a 2-bit (cid:2)eld. Using pre(cid:2)x expansion, the worst-
case expansion of any range is 2. By using three (instead of two)
bits in the TCAM to represent a range, the worst-case can be re-
duced to one TCAM entry (see Table 2). The search key for the
range (cid:2)eld b1b0 is augmented with the third bit using the equation
b1 OR b0. Logically, the third bit encodes whether the search key
is a member of either 01 or 1x.
3.2.2 DIRPE: Encoding Closed Ranges
We now describe a generic instantiation of DIRPE for encoding
closed ranges on a W -bit range (cid:2)eld. For now, let us assume that
there is no restriction on the number of extra bits in the TCAM that
we can use. Consider the following encoding, which we term as
fence encoding, that maps a W -bit (cid:2)eld to 2W (cid:0)1 bits: the encoding
of a number i consists of i ones preceded by 2W (cid:0)1(cid:0)i zeros.
As shown in Table 3, any closed range can be represented using
fence encoding using a single ternary entry. In other words, 2W (cid:0)1
bits are suf(cid:2)cient for an encoding to reduce the worst-case expan-
sion to 1. However, the following result shows that 2W (cid:0)1 bits are
necessary. This result is surprising at (cid:2)rst since 2W bits are suf(cid:2)-
cient to represent arbitrary subsets, not just ranges.
THEOREM 1. For achieving a worst-case row expansion of 1
for a W -bit range, 2W (cid:0)1 bits are necessary.
We prove a simple lemma before we present the proof of the theo-
rem. Let f (R) denote the ternary encoding of a range R.
LEMMA 1. Let R1 be a completely contained subrange of R2,
then f must satisfy the following properties: (a) if a bit position i is
speciﬁed (as 0 or 1) in f (R2), then it must be speciﬁed identically
in f (R1), (b) there must be at least one don’t-care bit in f (R2)
that is speciﬁed (as 0 or 1) in f (R1).
Range
= i
(cid:21) i
=s portion of last chunk:(cid:13)
000  0000001  xxxx111(cid:13)
Entry corresponding to(cid:13)
 j
If no such j is found
else for (i = c + 1 to j)
Adjust Split Chunk TCAM Entry to include vsc
Form TCAM entry corresponding to this chunk
that covers the range vsi ; : : : ; 2ki (cid:0) 1
// Form entries corresponding to (cid:20) e portion
Find j such that for c  j
If no such j is found
Adjust Split Chunk TCAM Entry to include vec
else for (i = c + 1 to j)
Form TCAM entry corresponding to this chunk
that covers the range 0; : : : ; vei
return all TCAM entries formed
Form Search Key (Key)
Split Key into l chunks, Key0, : : :, Keyl(cid:0)1 of sizes
k0; : : : ; kl(cid:0)1 respectively
for (i = 0 to l(cid:0)1)
Ei   Fence encoding of Keyi
// concatenate the fence encodings of the key chunks
return E1E2 : : : El(cid:0)1
number of levels l increases, the worst-case expansion increases,
and since the chunk widths decrease, the width of the encoded
range also decreases.
The pseudocode for forming the TCAM entries and the search
key is presented above. Let R=[s; e] denote the range, vsi and vei
denote the values of the chunk i of s and e respectively. We use the
same example as above to illustrate the algorithm.
Note that the pre(cid:2)xes needed to represent R are f0001xxxx,
001100xx,
000011xx,
0011010x, 00110110g(cid:151)a total of 8 pre(cid:2)xes.
0010xxxx,
0000101x,
00001001,
Recall that l=3, k0=2, k1=3, and k2=3. Then, W 0=22 (cid:0)
1+23 (cid:0) 1+23 (cid:0) 1=17, vs0 =0, vs1 =1, vs2 =3 and ve0 =0, ve1 =6,
ve2 =6. Note that R can be written as R=[013 (cid:0) 066], with the
leading digit being a 2-bit number, and the trailing two digits be-
ing 3-bit octal numbers. The split chunk is 1. Following the al-
gorithm, the ternary entries needed to represent R are f02x(cid:0)05x
= 000 00xxx11 xxxxxxx, 013(cid:0)017 = 000 0000001 xxxx111,
060(cid:0)066 = 000 0111111 0xxxxxxg(cid:151)a total of 3 ternary entries.
3.3 Comparative Analysis and Evaluation of
Range Encoding Schemes
Table 4 presents a summary of an analytical comparison of the
different range encoding schemes based on the metrics (described
in Section 2.1). We consider an ACL with N rules, with each rule
having F range (cid:2)elds that are W bits wide. As mentioned in Sec-
tion 3.1.1, the pre(cid:2)x expansion scheme expands to (2W (cid:0)2)F en-
tries in the worst-case.
For each range (cid:2)eld, DIRPE with k-bit chunks results in W=k