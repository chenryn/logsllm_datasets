    ```
    ![](img/8-4-16.jpg)
## 8.5 使用 John the Ripper 破解 Windows 密码
这个秘籍中，我们会使用 John the Ripper 来破解 Windows 安全访问管理器（SAM）文件。SAM文件储存了目标系统用户的用户名和密码的哈希。出于安全因素，SAM文件使用授权来保护，并且不能在 Windows 系统运行中直接手动打开或复制。
### 准备
你将会需要访问 SAM 文件。
这个秘籍中，我们假设你能够访问某台 Windows 主机。
### 操作步骤
让我们开始使用 John the Ripper 破解 Windows SAM 文件。我们假设你能够访问某台 Windows 主机，通过远程入侵，或者物理接触，并且能够通过 USB 或 DVD 驱动器启动 Kali Linux。
1.  看看你想挂载哪个硬盘：
    ```
    Fdisk -l
    ```
2.  挂载该硬盘，并将`target`设为它的挂载点。
    ```
    mount /dev/sda1 /target/ 
    ```
3.  将目录改为 Windows SAM 文件的位置：
    ```
    cd /target/windows/system32/config 
    ```
4.  列出目录中所有内容。
    ```
    ls –al
    ```
5.  使用 SamDump2 来提取哈希，并将文件放到你的 root 用户目录中的一个叫做`hashes`的文件夹中。
    ```
    samdump2 system SAM > /root/hashes/hash.txt
    ```
6.  将目录改为 John the Ripper 所在目录。
7.  运行 John the Ripper：
    ```
    ./john /root/hashes/hash.txt 
    ./john /root/hashes/hash.txt–f:nt  (If attacking a file on a NTFS System) 
    ```
## 8.6 字典攻击
这个秘籍中，我们会进行字典或单词列表的攻击。字典攻击使用事先准备的密码集合，并尝试使用单词列表爆破与指定用户匹配的密码。所生成的字典通常由三种类型：
    +   只有用户名：列表只含有用户名。
    +   只有密码：列表只含有密码。
    +   用户名和密码：列表含有生成的用户名和密码。
出于演示目的，我们使用 Crucnch 来生成我们自己的密码字典。
### 准备
需要在 Kali 上安装 Crunch。
### 操作步骤
Kali 的好处是已经安装了 Crunch，不像 BackTrack。
1.  打开终端窗口，并输入`crunch`命令来查看 Crunch 的帮助文件。
    ```
    crunch
    ```
    ![](img/8-6-1.jpg)
2.  使用 Crunch 生成密码的基本语法是，`[minimum length] [maximum length] [character set] [options] `。
3.  Crunch 拥有几种备选选项。一些常用的如下：
    +   `-o`：这个选项允许你指定输出列表的文件名称和位置、
    +   `-b`：这个选项允许你指定每个文件的最大字节数。大小可以以 KB/MB/GB 来指定，并且必须和`-o START`触发器一起使用。
    +   `-t`：这个选项允许你指定所使用的模式。
    +   `-l`：在使用`-t`选项时，这个选项允许你将一些字符标识为占位符（`@`，`%`，`^`）。
4.  下面我们执行命令来在桌面上创建密码列表，它最少 8 个字母，最大 10 个字符，并且使用字符集`ABCDEFGabcdefg0123456789`。
    ```
    crunch 8 10 ABCDEFGabcdefg0123456789 –o /root/Desktop/ generatedCrunch.txt
    ```
    ![](img/8-6-2.jpg)
5.  一旦生成了文件，我们使用 Nano 来打开文件：
    ```
    nano /root/Desktop/generatedCrunch.txt
    ```
### 工作原理
这个秘籍中我们使用了 Crunch 来生成密码字典列表。
## 8.7 使用彩虹表
这个秘籍中我们会学到如何在 Kali 中使用彩虹表。彩虹表是特殊字典表，它使用哈希值代替了标准的字典密码来完成攻击。出于演示目的，我们使用 RainbowCrack 来生成彩虹表。
### 操作步骤
1.  打开终端窗口并将目录改为`rtgen`的目录：
    ```
    cd /usr/share/rainbowcrack/
    ```
    ![](img/8-7-1.jpg)
2.  下面我们要启动`rtgen`来生成基于 MD5 的彩虹表。
    ```
    ./rtgen md5 loweralpha-numeric 1 5 0 3800 33554432 0
    ```
    ![](img/8-7-2.jpg)
3.  一旦彩虹表生成完毕，你的目录会包含`.rt`文件。这取决于用于生成哈希的处理器数量，大约需要 2~7 个小时。
4.  为了开始破解密码，我们使用`rtsort`程序对彩虹表排序，使其更加易于使用。
### 工作原理
这个秘籍中，我们使用了 RainbowCrack  攻击来生成、排序和破解 MD5 密码。RainbowCrack 能够使用彩虹表破解哈希，基于一些预先准备的哈希值。我们以使用小写字母值生成 MD5 彩虹表来开始。在秘籍的末尾，我们成功创建了彩虹表，并使用它来破解哈希文件。
## 8.8 使用英伟达统一计算设备架构（CUDA）
这个秘籍中，我们会使用英伟达统一计算设备架构（CUDA）来破解密码哈希。CUDA 是一个并行计算平台，它通过利用 GPU 的能力来提升计算性能。随着时间的流逝，GPU 的处理能力有了戏剧性的提升，这让我们能够将它用于计算目的。出于演示目的，我们使用  CudaHashcat-plus 来破解密码。
### 准备
需要 CUDA 所支持的显卡来完成这个秘籍。
### 操作步骤
1.  打开终端窗口并将目录改为  OclHashcat-plus 所在目录。
    ```
    cd /usr/share/oclhashcat-plus
    ```
    ![](img/8-8-1.jpg)
2.  执行下列命令来启动  CudaHashcat-plus 的帮助文件：
    ```
    ./cudaHashcat-plus.bin –help 
    ```
3.  运行 CudaHashcat 的语法是`cudaHashcat-plus.bin [options] hash [mask]`。
    > 使用  OclHashcat 的重点之一是理解它的字符集结构。
4.  在我们开始攻击之前，让我们先看看一些可用的攻击向量。CudaHashcat 在攻击中使用左右掩码。密码的字符按照掩码划分，并且被均分为左和右掩码。对于每个掩码，你可以为其指定字典或字符集。出于我们的目的，我们会使用定制的字符集。
5.  为了指定自定义字符集，我们使用`–1`选项。我们可以设置任意多的自定义字符集，只要为它们指定一个数值（`1-n`）。每个自定义字符都由问号（`?`）来表示，并且随后是字符类型。可用的选择是：
    +   `d`指定数字（0~9）
    +   `l`指定小写字母
    +   `u`指定大写字母
    +   `s`指定特殊字符
    +   `1-n`指定用做占位符的自定义字符集。
6.  这样将它们组合起来，我们就指定了一个自定义字符集，它包括特殊字符（`s`），大写字母（`u`），小写字母（`l`）和数字（`d`），生成长度为 8 的密码。我们打算指定叫做`attackfile`的哈希表。
    ```
    ./cudaHashcat-plus.bin attackfile -1 ?l?u?d?s ?1?1?1?1 ?1?1?1?1
    ```
7.  我们可以将这个命令这样拆分：
    +   ` ./cudaHashcat-plus.bin `调用了 CudaHashcat 。
    +   `attackfile`是我们的攻击文件。
    +   `-1 ?l?u?d?`指定了自定义字符集`1`，它包含小写字母、大写字母、数字和特殊字符。
    +   `?1?1?1?1`是使用字符集`1`的左掩码。
    +   `?1?1?1?1`是使用字符集`1`的右掩码。
    这就结束了。
## 8.9 使用 ATI Stream
这个秘籍中，我们会使用 ATI Stream 来破解密码哈希。ATI Stream 类似于 CUDA，因为它是一个并行计算平台，它可以通过利用 GPU 的能力来提升计算性能。随着时间的流逝，GPU 的处理能力有了戏剧性的提升，这让我们能够将它用于计算目的。出于演示目的，我们使用  OclHashcat-plus 来破解密码。OclHashcat 有两种版本：plus 和 lite。两个都包含在 Kali 中。
### 准备
需要支持 ATI Stream 的显卡来完成这个秘籍。
### 操作步骤
让我们开始使用 OclHashcat-plus。
1.  打开终端窗口并将目录改为  OclHashcat-plus 所在目录。
    ```
    cd /usr/share/oclhashcat-plus
    ```
    ![](img/8-9-1.jpg)
2.  执行下列命令来启动  OclHashcat-plus 的帮助文件：
    ```
    ./oclHashcat-plus.bin –help 
    ```
3.  运行 OclHashcat 的语法是`oclHashcat-plus.bin [options] hash [mask]`。
    > 使用  OclHashcat 的重点之一是理解它的字符集结构。
4.  在我们开始攻击之前，让我们先看看一些可用的攻击向量。OclHashcat 在攻击中使用左右掩码。密码的字符按照掩码划分，并且被均分为左和右掩码。对于每个掩码，你可以为其指定字典或字符集。出于我们的目的，我们会使用定制的字符集。
5.  为了指定自定义字符集，我们使用`–1`选项。我们可以设置任意多的自定义字符集，只要为它们指定一个数值（`1-n`）。每个自定义字符都由问号（`?`）来表示，并且随后是字符类型。可用的选择是：
    +   `d`指定数字（0~9）
    +   `l`指定小写字母
    +   `u`指定大写字母
    +   `s`指定特殊字符
    +   `1-n`指定用做占位符的自定义字符集。
6.  这样将它们组合起来，我们就指定了一个自定义字符集，它包括特殊字符（`s`），大写字母（`u`），小写字母（`l`）和数字（`d`），生成长度为 8 的密码。我们打算指定叫做`attackfile`的哈希表。
    ```
    ./oclHashcat-plus.bin attackfile -1 ?l?u?d?s ?1?1?1?1 ?1?1?1?1
    ```
7.  我们可以将这个命令这样拆分：
    +   ` ./oclHashcat-plus.bin `调用了 OclHashcat 。
    +   `attackfile`是我们的攻击文件。
    +   `-1 ?l?u?d?`指定了自定义字符集`1`，它包含小写字母、大写字母、数字和特殊字符。
    +   `?1?1?1?1`是使用字符集`1`的左掩码。
    +   `?1?1?1?1`是使用字符集`1`的右掩码。
    这就结束了。
## 8.10 物理访问攻击
这个秘籍中，我们会使用 SUCrack 来执行物理访问密码攻击。 SUCrack 是个多线程的工具，能够通过`su`来执行本地用户账户的暴力破解。Linux 的`su`命令允许你作为替代用户来运行命令。这个攻击，虽然在你不能通过其他手段提权 Linux 系统时非常有用，但是会填满日志文件，所以请确保在完成之后清理这些日志。
SUCrack 拥有几种备选的可用命令：
+   `--help`允许你查看它的帮助文档。
+   `-l`允许你修改我们尝试绕过登录的用户。
+   `-s`允许你设置展示统计信息的秒数间隔。默认值为 3 秒。
+   `-a`允许你设置是否使用 ANSI 转义代码。
+   `-w`允许你设置工作线程的数量。由于 SUCrack 是多线程的，你可以运行任意多的线程。我们推荐你只使用一个线程，因为每次失败的登录尝试在尝试下个密码之前通常有三秒的延迟。
### 操作步骤
1.  为了使用 SUCrack，你需要在启动时指定单词列表。否则，你会得到一条搞笑的信息。打开终端窗口并执行`sucrack`命令。出于我们的目的，我们会使用之前创建的自定义单词列表文件，它由 Crunch 生成。但是，你可以指定任何希望的单词列表。
    ```
    sucrack /usr/share/wordlists/rockyou.txt
    ```
2.  如果你打算设置两个工作线程，以及每 6 秒显示一次统计信息，并且使用 ANSI 转义代码，你可以使用下列命令：
    ```
    sucrack –w 2 –s 6 –a /usr/share/wordlists/rockyou.txt 
    ```
    这就结束了。
### 工作原理
这个秘籍中，我们使用 SUCrack 来对系统的 root 用户执行物理访问密码攻击。使用单词列表的攻击可以对管理员（默认）或特定用户指定。我们运行`sucrack`命令，它为我们执行攻击。