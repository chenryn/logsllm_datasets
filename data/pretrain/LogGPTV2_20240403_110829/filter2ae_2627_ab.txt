            result = re.findall(regexp, html, re.I)
            if not result:
                return set()
            deal = map(lambda s: s.lower(), result)
            if distinct:
                return set(deal)
            else:
                return list(deal)
        else:
            regexp = r'(?:\>|\"|\'|\=|\,)(?:http\:\/\/|https\:\/\/)?' \
                     r'(?:[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?\.){0,}' \
                     + domain.replace('.', r'\.')
            result = re.findall(regexp, html, re.I)
        if not result:
            return set()
        regexp = r'(?:http://|https://)'
        deal = map(lambda s: re.sub(regexp, '', s[1:].lower()), result)
        if distinct:
            return set(deal)
        else:
            return list(deal)
### 泛解析处理
通过DNS泛解析域名时返回的TTL相同。
参考的 
> 泛解析一直都是域名爆破中的大问题，目前的解决思路是根据确切不存在的子域名记录（md5(domain).domain）获取黑名单 IP，对爆破
> 过程的结果进行黑名单过滤。 但这种宽泛的过滤很容易导致漏报，如泛解析记录为 1.1.1.1，但某存在子域名也指向
> 1.1.1.1，此时这个子域名便可能会被黑名单过 滤掉。 胖学弟提到，可以将 TTL 也作为黑名单规则的一部分，评判的依据是：在权威 DNS
> 中，泛解析记录的 TTL 肯定是相同的，如果子域名 记录相同，但 TTL 不同，那这条记录可以说肯定不是泛解析记录。最终的判断代码如下：
>  
>  
>     // IsPanDNSRecord 是否为泛解析记录
>     func IsPanDNSRecord(record string, ttl uint32) bool {
>         _ttl, ok := panDNSRecords[TrimSuffixPoint(record)]
>         // 若记录不存在于黑名单列表，不是泛解析
>         // 若记录存在，且与黑名单中的 ttl 不等但都是 60（1min）的倍数，不是泛解析
>         if !ok || (_ttl != ttl && _ttl%60 == 0 && ttl%60 == 0) {
>             return false
>         }
>         return true
>     }
这个方法是否好，我也不知道。
### 爆破流程
`brute.py`简写版爆破流程
    wildcard_ips = list()  # 泛解析IP列表
    wildcard_ttl = int()  # 泛解析TTL整型值
    ns_list = query_domain_ns(self.domain) # 查询域名NS记录
    ns_ip_list = query_domain_ns_a(ns_list)  # DNS权威名称服务器对应A记录列表
    self.enable_wildcard = detect_wildcard(domain, ns_ip_list) # 通过域名指定NS查询是否有泛解析
    if self.enable_wildcard:
        wildcard_ips, wildcard_ttl = collect_wildcard_record(domain,
    ns_ip_list)
      # 收集泛解析范围，当大部分泛解析记录(80%)达到同一IP出现两次以上，则返回该IP以及TTL
    ns_path = get_nameservers_path(self.enable_wildcard, ns_ip_list)
    # 生成字典
    dict_set = self.gen_brute_dict(domain)
    dict_len = len(dict_set)
    dict_name = f'generated_subdomains_{domain}_{timestring}.txt'
    dict_path = temp_dir.joinpath(dict_name)
    save_brute_dict(dict_path, dict_set)
    del dict_set
    # 调用massdns进行扫描
    output_name = f'resolved_result_{domain}_{timestring}.json'
    output_path = temp_dir.joinpath(output_name)
    log_path = result_dir.joinpath('massdns.log')
    check_dict()
    logger.log('INFOR', f'Running massdns to brute subdomains')
    utils.call_massdns(massdns_path, dict_path, ns_path, output_path,
    log_path, quiet_mode=self.quite,
    process_num=self.process_num,
    concurrent_num=self.concurrent_num)
### 域名接管
OneForAll的域名接管主要是针对一些公共服务的域名接管，根据其指纹识别的内容
    [
        {
            "name":"github", 
            "cname":["github.io", "github.map.fastly.net"], 
            "response":["There isn't a GitHub Pages site here.", "For root URLs (like http://example.com/) you must provide an index.html file"]
        },
        {
            "name":"heroku", 
            "cname":["herokudns.com", "herokussl.com", "herokuapp.com"], 
            "response":["There's nothing here, yet.", "herokucdn.com/error-pages/no-such-app.html", "No such app"]
        },
        {
            "name":"unbounce",
            "cname":["unbouncepages.com"],
            "response":["Sorry, the page you were looking for doesn’t exist.", "The requested URL was not found on this server"]
        },
        {
            "name":"tumblr",
            "cname":["tumblr.com"],
            "response":["There's nothing here.", "Whatever you were looking for doesn't currently exist at this address."]
        },
        {
            "name":"shopify",
            "cname":["myshopify.com"],
            "response":["Sorry, this shop is currently unavailable.", "Only one step left!"]
        },
        {
            "name":"instapage",
            "cname":["pageserve.co", "secure.pageserve.co", "https://instapage.com/"],
            "response":["Looks Like You're Lost","The page you're looking for is no longer available."]
        },
        {
            "name":"desk",
            "cname":["desk.com"],
            "response":["Please try again or try Desk.com free for 14 days.", "Sorry, We Couldn't Find That Page"]
        },
        {
            "name":"campaignmonitor",
            "cname":["createsend.com", "name.createsend.com"],
            "response":["Double check the URL", "Trying to access your account?"]
        },
        {
            "name":"cargocollective",
            "cname":["cargocollective.com"],
            "response":["404 Not Found"]
        },
        {
            "name":"statuspage",
            "cname":["statuspage.io"],
            "response":["Better Status Communication", "You are being redirected"]
        },
        {
            "name":"amazonaws",
            "cname":["amazonaws.com"],
            "response":["NoSuchBucket", "The specified bucket does not exist"]
        },
        {
            "name":"bitbucket",
            "cname":["bitbucket.org"],  
            "response":["The page you have requested does not exist","Repository not found"]
        },
        {
            "name":"smartling",
            "cname":["smartling.com"],
            "response":["Domain is not configured"]
        },
        {
            "name":"acquia",
            "cname":["acquia.com"],
            "response":["If you are an Acquia Cloud customer and expect to see your site at this address","The site you are looking for could not be found."]
        },
        {
            "name":"fastly",
            "cname":["fastly.net"],
            "response":["Please check that this domain has been added to a service", "Fastly error: unknown domain"]
        },
        {
            "name":"pantheon",
            "cname":["pantheonsite.io"],
            "response":["The gods are wise", "The gods are wise, but do not know of the site which you seek."]
        },
        {
            "name":"zendesk",
            "cname":["zendesk.com"],
            "response":["Help Center Closed"]
        },
        {
            "name":"uservoice",
            "cname":["uservoice.com"],
            "response":["This UserVoice subdomain is currently available!"]
        },
        {
            "name":"ghost",
            "cname":["ghost.io"],
            "response":["The thing you were looking for is no longer here", "The thing you were looking for is no longer here, or never was"]
        },
        {
            "name":"pingdom",
            "cname":["stats.pingdom.com"],
            "response":["pingdom"]
        },
        {
            "name":"tilda",
            "cname":["tilda.ws"],
            "response":["Domain has been assigned"]
        },
        {
            "name":"wordpress",
            "cname":["wordpress.com"],  
            "response":["Do you want to register"]
        },
        {
            "name":"teamwork",
            "cname":["teamwork.com"],
            "response":["Oops - We didn't find your site."]
        },
        {
            "name":"helpjuice",
            "cname":["helpjuice.com"],
            "response":["We could not find what you're looking for."]
        },
        {
            "name":"helpscout",
            "cname":["helpscoutdocs.com"],
            "response":["No settings were found for this company:"]
        },
        {
            "name":"cargo",
            "cname":["cargocollective.com"],
            "response":["If you're moving your domain away from Cargo you must make this configuration through your registrar's DNS control panel."]
        },
        {
            "name":"feedpress",
            "cname":["redirect.feedpress.me"],
            "response":["The feed has not been found."]
        },
        {
            "name":"surge",
            "cname":["surge.sh"],
            "response":["project not found"]
        },
        {
            "name":"surveygizmo",
            "cname":["privatedomain.sgizmo.com", "privatedomain.surveygizmo.eu", "privatedomain.sgizmoca.com"],
            "response":["data-html-name"]
        },
        {
            "name":"mashery",
            "cname":["mashery.com"],
            "response":["Unrecognized domain "]