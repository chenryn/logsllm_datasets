```bash
#!/bin/bash
# 该脚本用于快速获取系统信息

# 检查互联网连接
if ping -c 1 www.baidu.com &> /dev/null; then
    echo "Internet: Connected"
else
    echo "Internet: Disconnected"
fi

# 获取操作系统类型
os=$(uname -o)
echo "Operating System Type: $os"

# 获取操作系统发行名称与版本号
# 注意：此部分代码主要针对CentOS 7，其他发行版可能需要调整
os_name=$(cat /etc/os-release | grep "^NAME=" | cut -d"=" -f2-)
os_version=$(cat /etc/os-release | grep "^VERSION=" | cut -d"=" -f2-)
echo "OS Name: $os_name"
echo "OS Version: $os_version"

# 获取架构信息
architecture=$(uname -m)
echo "Architecture: $architecture"

# 获取内核版本
kernel_release=$(uname -r)
echo "Kernel Release: $kernel_release"

# 获取主机名
hostname=$HOSTNAME
echo "Hostname: $hostname"

# 获取内部IP地址
internal_ip=$(hostname -I | awk '{print $1}')
echo "Internal IP: $internal_ip"

# 获取外部IP地址（使用ipecho.net服务）
external_ip=$(curl -s ipecho.net/plain; echo)
echo "External IP: $external_ip"

# 获取DNS服务器
name_servers=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}' | tr '\n' ' ')
echo "Name Servers: $name_servers"

# 显示当前登录用户
echo "Logged In Users:"
who

# 显示内存使用情况
echo "RAM Usage:"
free -h | grep -v "Swap"

# 显示交换分区使用情况
echo "Swap Usage:"
free -h | grep -v "Mem"

# 显示磁盘空间使用情况
echo "Disk Usage:"
df -h | grep '^/dev'

# 显示平均负载
load_average=$(top -n 1 -b | grep "load average:" | awk '{print $10, $11, $12}')
echo "Load Average: $load_average"

# 显示系统运行时间
uptime_days=$(uptime | awk '{print $3 $4}' | cut -f1 -d,)
echo "System Uptime (Days HH:MM): $uptime_days"
```

### 改进说明：
1. **逻辑优化**：将`ping`命令的结果判断改为`if-else`结构，使代码更清晰。
2. **变量命名**：对变量进行了更具描述性的命名，如`os_name`、`os_version`等。
3. **字符串处理**：使用`cut`和`awk`来处理字符串，使其更加简洁。
4. **注释**：增加了注释，解释了每一步的操作。
5. **格式化输出**：对输出进行了一定的格式化，使其更加易读。

希望这些改进能让脚本更加清晰、连贯和专业。