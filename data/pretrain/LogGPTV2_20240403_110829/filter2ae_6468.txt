# 漏洞分析：CVE-2017-4918 - VMware Horizon macOS 客户端中的代码注入漏洞

## 译文声明
本文为翻译文章，原文来源于 [bogner.sh](http://bogner.sh)。译文仅供参考，具体内容及含义以原文为准。

## 译者信息
- 译者：[myswsun](http://bobao.360.cn/member/contribute?uid=2775084127)
- 预估稿费：80 RMB
- 投稿方式：发送邮件至 linwei#360.cn 或登录网页版在线投稿

---

## 前言
本文将讨论 VMware Horizon macOS 客户端（版本 4.4.0，构建号 5164329）中的一个代码注入漏洞。该漏洞可以被利用以获取本地 root 权限。幸运的是，此问题已在最新版本中得到修复。详情请参阅 VMware 的安全公告 [VMSA-2017-0011](https://www.vmware.com/us/security/advisories/VMSA-2017-0011.html)。

---

## 分析
在对我的 Mac 上的“Open VMware View Client Services” SUID 二进制文件进行调查时，我发现了这个漏洞。我认为它是在 Horizon 远程 USB 服务内部使用的，并且只有在启动后输入管理员凭据后才能被利用。

为了进一步调查此二进制文件，我使用了 FireEye 的应用程序 [Monitor.app](https://www.fireeye.com/services/freeware/monitor.html)。这是一个 macOS 上的进程监控工具，类似于 Windows 上的 procmon。

通过 Monitor.app 捕获的所有行为显示，“Open VMware View Client Services” 是 services.sh 脚本的一个封装。对于脚本文件，SUID 位是被忽略的。

仔细检查该脚本后，我发现下图中高亮的部分是代码注入漏洞的起始点。尽管我不了解 ./vmware-usbarbitrator 的内部工作原理，但我立即注意到需要深入研究这个二进制文件。作为一个非管理员用户，我可以设置环境变量 `VMWARE_VIEW_USBARBITRATOR_LOG_OPTIONS`，并在 SUID 执行脚本中使用它。

进一步查看命令行选项后，我确定可以使用 `-kext` 标志加载自定义的内核扩展。然而，有两个主要问题：
1. 内核扩展只能由具有 root:wheel 权限的用户加载。
2. KEXT 必须有苹果的签名。

在本例中，我忽略了第二个问题，并禁用了系统完整性保护 (SIP)。接下来，我们需要解决第一个问题。为了成功加载内核扩展，二进制文件必须具有 root:wheel 权限。然而，普通用户无法对任何本地文件设置这些权限。幸运的是，我对 Tools On Air 文件系统的了解帮助我找到了解决方案。唯一可行的方法是利用 NFS（网络文件系统）。NFS 允许服务器指定文件系统权限，即使是由用户挂载的。

因此，下一步是在我的 Kali Linux 上导出一个远程文件夹，并使用 Finder 的“连接到服务器”功能将其挂载到 Mac 上。然后创建一个简单的 KEXT 并更新其 info.plist 文件以满足需求（添加字典 `IOKitPersonalities`）。将 KEXT 复制到 NFS 服务器上，并确保其权限为 root:wheel。最后，我们可以通过设置 `VMWARE_VIEW_USBARBITRATOR_LOG_OPTIONS` 环境变量并运行“Open VMware View Client Services”来实现真正的利用。

这样，我们就能在普通用户账户权限下，在内核上下文中执行代码。

---

## 建议的解决方案
建议过滤或清除以下环境变量：
- `VMWARE_VIEW_USBARBITRATOR_LOG_OPTIONS`
- `VMWARE_VIEW_USBD_LOG_OPTIONS`

---

## 时间线
- 2017-04-21：报告问题
- 2017-04-24：VMware 开始调查
- 2017-06-06：问题修复
- 2017-06-08：发布更新后的 Horizon 版本 4.5 及安全公告 [VMSA-2017-0011](https://www.vmware.com/us/security/advisories/VMSA-2017-0011.html)

---