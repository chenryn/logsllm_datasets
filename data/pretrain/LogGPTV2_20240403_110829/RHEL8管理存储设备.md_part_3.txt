:::
::: itemizedlist
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#an-example-playbook-to-create-mount-an-ext4-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 Ext4 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来创建和挂载 Ext4 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531403010528}
**例 2.5. 在 /dev/sdb 上创建 Ext4 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext4
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 会永久将文件系统挂载到 `/mnt/data`{.literal} 目录中。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#an-example-ansible-playbook-to-create-mount-ext3-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 ext3 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来创建和挂载 Ext3 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531402992992}
**例 2.6. 在 /dev/sdb 上创建 Ext3 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext3
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 会永久将文件系统挂载到 `/mnt/data`{.literal} 目录中。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#example-ansible-playbook-to-resize-an-existing-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色重新定义现有 Ext4 或 Ext3 文件系统大小的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal} 角色来调整块设备中现有 Ext4 或 Ext3 文件系统的大小。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531402974752}
**例 2.7. 在磁盘上设置单个卷的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 12 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
:::
:::
::: itemizedlist
-   如果上例中的卷已存在，若要调整卷的大小，您需要运行同一个
    playbook，这与参数 `size`{.literal} 的值不同。例如：
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531402966800}
**例 2.8. 调整 `ext4`{.literal} 大小的 playbook `/dev/sdb`{.literal}**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 10 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中为barefs）当前是任意卷。存储角色根据 disk:
    属性中列出的磁盘设备识别卷。
:::
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在其它文件系统中使用 `Resizing`{.literal}
操作可能会破坏您要使用的设备中的数据。
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#example-ansible-playbook-to-resize-an-existing-lvm-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色在 LVM 上调整现有文件系统大小的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用存储 RHEL
系统角色来重新定义带有文件系统的 LVM 逻辑卷的大小。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在其它文件系统中使用 `Resizing`{.literal}
操作可能会破坏您要使用的设备中的数据。
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531402948720}
**例 2.9. 调整 myvg 卷组中现有 mylv1 和 myvl2 逻辑卷大小的 playbook**
::: example-contents
``` screen
---
- hosts: all
   vars:
    storage_pools:
      - name: myvg
        disks:
          - /dev/sda
          - /dev/sdb
          - /dev/sdc
        volumes:
            - name: mylv1
            size: 10 GiB
            fs_type: ext4
            mount_point: /opt/mount1
            - name: mylv2
            size: 50 GiB
            fs_type: ext4
            mount_point: /opt/mount2
- name: Create LVM pool over three disks
  incude_role:
    name: rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `mylv`{.literal} 逻辑卷中创建 Ext4 文件系统，并在
    `/mnt`{.literal} 挂载点永久挂载文件系统。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#example-ansible-playbook-to-create-a-swap-partition-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色创建交换分区的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用
`storage`{.literal}
角色来创建交换分区（如果不存在），或使用默认参数在块设备中修改交换分区（如果已存在）。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#idm140531402933264}
**例 2.10. 在 /dev/sdb 上创建或修改现有 XFS 的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device with swap
- hosts: all
  vars:
    storage_volumes:
      - name: swap_fs
        type: disk
        disks:
          - /dev/sdb
	size: 15 GiB
        fs_type: swap
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中为`swap_fs`{.literal}
    ）目前是任意卷。`storage`{.literal} 角色根据在 `disks:`{.literal}
    属性中列出的磁盘设备识别卷。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-storage-devices.html#configure-raid-volume-using-storage-system-role_managing-local-storage-using-rhel-system-roles}使用存储系统角色配置 RAID 卷 {.title}
:::
使用 `storage`{.literal} 系统角色，您可以使用 Red Hat Ansible Automation
Platform 在 RHEL 上配置 RAID
卷。在本小节中，您将了解如何使用可用参数设置 Ansible playbook，以配置
RAID 卷以满足您的要求。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `storage`{.literal} 解决方案的系统中安装 Red Hat
    Ansible Automation Platform。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
-   您有一个清单文件详细描述了您要使用 `storage`{.literal} 系统角色部署
    RAID 卷的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_safe_mode: false
        storage_volumes:
          - name: data
            type: raid
            disks: [sdd, sde, sdf, sdg]
            raid_level: raid0
            raid_chunk_size: 32 KiB
            mount_point: /mnt/data
            state: present
      roles:
        - name: rhel-system-roles.storage
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    设备名称在某些情况下可能会改变，例如：当您在系统中添加新磁盘时。因此，为了避免数据丢失,我们不建议在
    playbook 中使用特定的磁盘名称。
    :::
2.  可选。验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 RAID 的详情，请参阅[管理
    RAID](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/managing-raid_managing-storage-devices){.link}。
-   有关存储系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::