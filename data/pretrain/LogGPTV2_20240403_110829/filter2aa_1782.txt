~ Jay Turla @shipcod3
CAR INFOTAINMENT HACKING 
METHODOLOGY AND ATTACK 
SURFACE SCENARIOS
WHOAMI 
▸ Jay Turla @shipcod3
▸ app security engineer 
@Bugcrowd
▸ ROOTCON goon
▸ contributed to some 
security tools
▸ I love PS4
▸ Not the creator of Turla malware
▸ Loves to party
BEFORE ANYTHING ELSE….. WE NEED AN INSPIRATIONAL QUOTE
…SCOPE  & LIMITATIONS
▸ Infotainment bugs and its attack surfaces
▸ No Canbus Hacking
▸ Methodologies, Security Bugs But Not Full Takeover of the Car 
(because infotainments have limitation)
▸ Kinda similar to Jason Haddix’s “The Bug Hunters Methodology” 
(in fact inspired by it)
▸ Probably miss out some attack surfaces (only common ones with known 
vulnerabilities or proof of concept)
COMMON ATTACK SURFACES 
BY CRAIG SMITH IN HIS BOOK 
“THE CAR HACKER’S 
HANDBOOK”
COMMON ATTACK SURFACES LINKED TO THE 
INFOTAINMENT CONSOLE 
▸ Bluetooth
▸ Wi-Fi
▸ USB Ports
▸ SD Card Ports
▸ CD-ROM / DVD-ROM
▸ Touch screen and other inputs that allow you to control the console
▸ Audio Jack (hmmm maybe?)
▸ Cellular Connection, GPS, etc.
BLUETOOTH 
▸ Bluetooth vulnerabilities
▸ Bluetooth jamming
▸ Code execution 
(haven’t seen a PoC on an infotainment yet)
▸ Default bluetooth pairing numbers: “0000," “1111”, “1234"
▸ Malformed or Format String Vulnerabilities (Brick the Device)
▸ Memory corruption - send malformed packages to the head unit
BLUETOOTH CASE - FORMAT STRING 
VULNERABILITIES THAT COULD LEAD TO 
APPLICATION CRASH OR BRICKING OF YOUR 
DEVICE 
▸ Some Bluetooth stacks on infotainment systems can be crashed via %x
or %c format string specifiers in a device name, address book name,
song title, etc.
▸ CVE-2017-9212 was assigned to a BMW 330i 2011 car wherein a
researcher from IOActive renamed his device with format string
specifiers & connected his device via Bluetooth to his car which
eventually crashed his system.
▸ Warning! Bricks your system so test at your own risk
▸ WHAT IF it takes you to the desktop environment or debug options?
HERE ARE SOME PAYLOADS 
YOU CAN TRY
WI-FI
▸ Wi-Fi deauthentication attacks
▸ Does the firmware update work 
over the Internet? Try sniffing the traffic / replace it with a malicious 
firmware
▸ Connect to WiFi -> Fetch DHCP IP Address -> Nmap -> what services does 
it have? FTP, Telnet, SSH?
▸ Insecure Transmission of Credentials: Telnet and FTP for example
▸ Some of these interfaces have no auth: yes netcat is your friend :)
▸ Exploits for these services
WI-FI CASE: THOSE SERVICES!!!!
▸ Try brute forcing the credentials
- most of these have weak passwords
▸ Get to know the default password
of accessing the system
▸ ROOT pass?
▸ Mazda
- jci : root
- root : jci
- user : jci
WI-FI CASE: THOSE SERVICES!!!!
▸ Daan Keuper and Thijs Alkemade from Computest gained access to the 
IVI system's root account for Volkswagen and Audi: 
https://www.computest.nl/wp-content/uploads/2018/04/connected-car-
rapport.pdf
KEY TAKEAWAYS ABOUT THE RESEARCH 
FROM COMPUTEST
WI-FI CASE: THOSE SERVICES!!!!
▸ Ian Tabor also showed an analysis of the IVI system within the 2015 DS5 
1955 Limited Edition. He connected to the device over TCP port 23 (telnet) 
without any authentication and executed commands.
USB
▸ Install apps or malicious apps
▸ Update the firmware via USB
▸ Remote Code Execution via the USB stack to IVI
▸ Killer USB - one that destroys your files 
▸ Some systems support USB-to-ETHERNET adapters by default (another 
way for your device to have an IP address) 
USB CASE: MY CASE
▸ Owners of Mazda cars have been modding and installing apps to their 
infotainment using MZD-AIO-TI (MZD All In One Tweaks Installer) in the 
Mazda3Revolution forum since 2014.
USB CASE: MY CASE
▸ Got curious so read one of the details from a pdf that allows you to pull up data from CMU and 
also analyze the app from Trez
▸ Reference: 
https://github.com/shipcod3/mazda_getInfo/blob/master/cmu_pull_up_details/CMU%20data%20
pull%20tool%20instructions.pdf
USB CASE: MY CASE
USB CASE: MY CASE
USB CASE: MY CASE
▸ Our main focus is the text file
USB CASE: MY CASE
▸ Putting it all together for a PoC: https://github.com/shipcod3/mazda_getInfo/
USB CASE: MY CASE
USB CASE
▸ Researchers from Keen Security Lab also found local code execution via 
the USB through an update
SD CARD SLOT & CD-ROM / DVD 
ROM
▸ Basically the same thing with what’s discussed on the USB Port = load 
something
SD CARD SLOT CASE
▸ For Mazda, using the known cmu bug, you can deploy apps via the SD 
card: https://github.com/flyandi/mazda-custom-application-sdk
TOUCH SCREEN / INTERFACE
▸ Connect to WI-FI to establish IP address
▸ PRESS anything, multitask - cause an overflow
▸ Picture below from my uncle
IS THIS TRUE?
▸ NOPE! It’s just a joke
GSM, CELLULAR CONNECTION, 
PHONE APP TO CAR, ETC
▸ Do you have an app that connects to your car? Time for some mobile app 
testing
▸ Test the URLs you intercepted while testing the app: 
https://www.troyhunt.com/controlling-vehicle-features-of-nissan/
▸ Eavesdrop on the connections
▸ Reverse engineer the app -> get the API keys?
RESPONSIBLE DISCLOSURE & BUG 
BOUNTY PROGRAMS
▸ Fiat Chrysler Automobiles - https://bugcrowd.com/fca
▸ Tesla Motors - https://bugcrowd.com/tesla
▸ General Motors - https://hackerone.com/gm
AS REQUESTED…
VIDEO DEMO
REFERENCES
▸ The Car Hacker’s Handbook by Craig Smith: http://opengarages.org/handbook/ebook
▸ Memes from Google lol
▸ http://openmzdc.wikia.com/wiki/Getting_started
▸ https://mazdatweaks.com/
▸ Volkswagen and Audi Cars Vulnerable to Remote Hacking https://www.computest.nl/wp-
content/uploads/2018/04/connected-car-rapport.pdf
▸ https://www.bleepingcomputer.com/news/security/volkswagen-and-audi-cars-vulnerable-to-
remote-hacking/
▸ https://www.mintynet.com/
▸ https://github.com/shipcod3/mazda_getInfo/
▸ https://keenlab.tencent.com/en/Experimental_Security_Assessment_of_BMW_Cars_by_KeenLab.
pdf
▸ https://github.com/jaredthecoder/awesome-vehicle-security