  UI	
IMDb	
  App	
Handles	
  Ac@ons:	
willUpdateShow?mes,	
show?mesNoLoca?onError	
Implicit	
  Intent	
Ac@on:	
willUpdateShow?mes	
32	
Show@me	
Search	
Malicious	
Receiver	
IMDb	
  App	
Handles	
  Ac@on:	
willUpdateShow?mes,	
show?mesNoLoca?onError	
Implicit	
  Intent	
Ac@on:	
willUpdateShow?mes	
Eavesdropping	
  App	
  Sending	
  Implicit	
  Intents	
  makes	
  communica@on	
  public	
Intent i = new Intent(); 
i.setClassName(“some.pkg.name”, 
 “some.pkg.name.TestDestination”); 
or	
Intent i = new Intent(); 
i.setAction(“my.special.action”); 
sendBroadcast(i, “my.special.permission”); 
§  Broadcast	
  Intent	
– One-­‐to-­‐many	
  message	
– Delivered	
  to	
  all	
  components	
  registered	
  to	
  receive	
them	
§  “S@cky”	
  Broadcast	
  Intents	
  are	
  broadcasts	
  that	
persist	
– Remain	
  accessible	
  aHer	
  they	
  are	
  delivered	
– Re-­‐broadcast	
  to	
  future	
  Receivers	
§  Cannot	
  be	
  restricted	
  to	
  a	
  certain	
  set	
  of	
receivers	
  (cannot	
  require	
  a	
  receiver	
  to	
  have	
  a	
permission)	
§  Accessible	
  to	
  any	
  receiver,	
  including	
  malicious	
receivers	
§  Can	
  compromise	
  sensi@ve	
  program	
  data	
§  Stays	
  around	
  aHer	
  it	
  has	
  been	
  sent	
– But	
  anyone	
  with	
  BROADCAST_STICKY	
  permission	
can	
  remove	
  a	
  s@cky	
  Intent	
  you	
  create	
36	
Requests	
  BROADCAST_STICKY	
Permission	
S@cky	
  broadcasts:	
Malicious	
  App	
  Newly	
  connected	
  receiver	
  will	
  be	
  unaware	
  of	
  the	
  change	
S@cky	
  broadcast	
  1	
S@cky	
  broadcast	
  2	
S@cky	
  broadcast	
  3	
Vic@m	
  app	
?	
Receiver	
(expects	
  s@cky	
broadcast	
  2)	
§  Use	
  regular	
  broadcasts	
  protected	
  by	
  the	
receiver	
  permission	
  instead,	
  if	
  possible	
§  Thoroughly	
  scru@nize	
  data	
  in	
  broadcasted	
messages	
§  Files	
  on	
  the	
  SD	
  Card	
  are	
  world-­‐readable	
§  Files	
  stay	
  even	
  aHer	
  applica@on	
  that	
  wrote	
them	
  is	
  uninstalled	
§  Can	
  compromise	
  sensi@ve	
  program	
  data	
– Passwords	
– Loca@on	
– SMS	
– Etc.	
§  Skype	
  for	
  Android	
  exposes	
  your	
  name,	
  phone	
number,	
  chat	
  logs	
  and	
  more	
§  Ci@bank	
  iPhone	
  app	
  “accidentally”	
  saved	
account	
  numbers,	
  bill	
  payments	
  and	
  security	
access	
  codes	
  in	
  a	
  secret	
  ﬁle	
§  iPhone	
  loca@on	
  ﬁle	
  contains	
  informa@on	
about	
  your	
  loca@on	
§  Write	
  to	
  an	
  applica@on’s	
  SQLite	
  database	
§  Write	
  to	
  the	
  device’s	
  internal	
  storage	
  and	
  use	
Context.MODE_PRIVATE	
§  Be	
  careful	
  of	
  leaking	
  sensi@ve	
  data	
  through	
HTTP	
  connec@ons	
§  When	
  using	
  WebViews,	
  connect	
  to	
  HTTPS	
when	
  possible	
§  Treat	
  your	
  mobile	
  app	
  as	
  you	
  would	
  a	
  web	
app	
§  Don’t	
  send	
  passwords	
  in	
  the	
  clear	
§  TwiFer:	
  Tweets	
  are	
  sent	
  in	
  the	
  clear	
§  Google	
  Calendar:	
  Calendar	
  traﬃc	
  is	
  sent	
  in	
  the	
clear	
§  Facebook:	
  Despite	
  having	
  a	
  fully	
  encrypted	
traﬃc	
  op@on	
  on	
  the	
  web	
  app,	
  the	
  mobile	
  app	
sends	
  everything	
  in	
  the	
  clear	
Courtesy:	
  hFps://freedom-­‐to-­‐@nker.com/blog/dwallach/things-­‐overheard-­‐wiﬁ-­‐my-­‐android-­‐smartphone	
§  Overprivileged	
  applica@ons	
  –	
  applica@ons	
  that	
request	
  more	
  permissions	
  than	
  the	
  app	
actually	
  requires	
§  Violates	
  the	
  principle	
  of	
  least	
  privilege	
§  Any	
  vulnerability	
  may	
  give	
  the	
  aFacker	
  that	
privilege	
§  Users	
  may	
  get	
  accustomed	
  to	
  seeing	
  and	
accep@ng	
  unnecessary	
  permission	
  requests	
from	
  third	
  party	
  applica@ons	
§  Common	
  causes	
– Confusing	
  permission	
  names	
– Tes@ng	
  ar@facts	
– Using	
  depu@es	
– Error	
  propaga@on	
  through	
  message	
  board	
  advice	
– Related	
  methods	
46	
Wants	
  Picture	
Takes	
Picture	
App	
  1	
Handles	
  Ac@on:	
IMAGE_CAPTURE	
Implicit	
  Intent	
Ac@on:	
  IMAGE_CAPTURE	
Camera	
  App	
Do	
  not	
  need	
  CAMERA	
permission	
Needs	
  CAMERA	
permission	
GOOGLE	
  ANDROID	
Empirical	
  Results	
  Analyzing	
Applica)ons	
  Built	
  on	
Vulnerability	
  Type	
%	
  of	
  Apps	
  that	
  are	
  Vulnerable	
Intent	
  Spooﬁng	
40%	
Unauthorized	
  Intent	
  Receipt	
50%	
Overprivileged	
  Applica@ons	
31%	
§  Obtaining	
  applica@on	
  source	
  code	
– Dedexers	
  available	
  fail	
  to	
  generate	
  valid	
  Java	
– Many	
  applica@ons	
  are	
  not	
  open	
  source	
§  Coding	
  conven@ons	
– Callbacks	
  and	
  other	
  implicit	
  control	
  ﬂow	
  are	
  a	
challenge	
  for	
  tradi@onal	
  sta@c	
  analysis	
  techniques	
§  Documenta@on	
– Google	
  provides	
  liFle	
  documenta@on,	
  which	
  is	
oHen	
  incomplete	
  or	
  out-­‐of-­‐date	
§  Analysis	
  of	
  overprivileged	
  applica@ons	
  showed	
that:	
– Android	
  2.2	
  documents	
  permission	
  requirements	
for	
  only	
  78	
  out	
  of	
  1207	
  API	
  calls	
– 6	
  out	
  of	
  78	
  are	
  incorrect	
– 1	
  of	
  the	
  documented	
  permissions	
  does	
  not	
  exist	
§  Of	
  the	
  7	
  vulnerabili@es	
  presented:	
– 5	
  vulnerability	
  categories	
  currently	
  can	
  be	
iden@ﬁed	
  by	
  For@fy’s	
  SCA	
  tools	
– 4	
  vulnerability	
  categories	
  currently	
  can	
  be	
iden@ﬁed	
  by	
  UC	
  Berkeley’s	
  tools	
– 6	
  categories	
  will	
  be	
  integrated	
  into	
  the	
  current	
tools	
§  Adrienne	
  Porter	
  Felt,	
  David	
  Wagner,	
  UC	
Berkeley	
  [’11]	
  -­‐	
  Overprivilege	
§  Will	
  Enck,	
  Penn	
  State	
  [’09]	
  –	
  informa@on	
leakage	
  through	
  Broadcast	
  Intents	
§  Jesse	
  Burns	
  [’09]	
  –	
  other	
  common	
  developers’	
errors	
§  Dan	
  Wallach	
  –	
  WiFi	
  leaks	
§  Android	
  has	
  its	
  own	
  set	
  of	
  security	
  piealls	
§  Sta@c	
  analysis	
  can	
  help	
  developers	
  avoid	
  these	
problems	
§  UC	
  Berkeley	
  and	
  For@fy	
  are	
  working	
  to	
incorporate	
  state-­‐of-­‐the-­‐art	
  sta@c	
  analysis	
  into	
For@fy’s	
  tools	
Seven	
  Ways	
  to	
Hang	
  Yourself	
  with	
Google	
  Android	
Yekaterina Tsipenyuk O'Neil 
Principal Security Researcher 
Erika Chin 
Ph.D. Student at UC Berkeley