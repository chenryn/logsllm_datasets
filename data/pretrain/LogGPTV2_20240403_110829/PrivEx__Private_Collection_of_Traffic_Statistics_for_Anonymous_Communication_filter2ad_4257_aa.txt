title:PrivEx: Private Collection of Traffic Statistics for Anonymous Communication
Networks
author:Tariq Elahi and
George Danezis and
Ian Goldberg
PrivEx: Private Collection of Trafﬁc Statistics for
Anonymous Communication Networks∗
Tariq Elahi
Cheriton School of
Computer Science
University of Waterloo,
Waterloo, ON, Canada
PI:EMAIL
George Danezis
Dept. of Computer Science
University College London
London, United Kingdom
PI:EMAIL
Ian Goldberg
Cheriton School of
Computer Science
University of Waterloo,
Waterloo, ON, Canada
PI:EMAIL
ABSTRACT
In addition to their common use for private online communication,
anonymous communication networks can also be used to circum-
vent censorship. However, it is difﬁcult to determine the extent to
which they are actually used for this purpose without violating the
privacy of the networks’ users. Knowing this extent can be useful
to designers and researchers who would like to improve the perfor-
mance and privacy properties of the network. To address this issue,
we propose a statistical data collection system, PrivEx, for collect-
ing egress trafﬁc statistics from anonymous communication net-
works in a secure and privacy-preserving manner. Our solution is
based on distributed differential privacy and secure multiparty com-
putation; it preserves the security and privacy properties of anony-
mous communication networks, even in the face of adversaries that
can compromise data collection nodes or coerce operators to reveal
cryptographic secrets and keys.
Categories and Subject Descriptors
K.4.1 [Computing Milieux]: Computers and Society—Privacy;
C.2.0 [Computer-Communication Networks]: General—Security
and protection
General Terms
Security
Keywords
Distributed Networks; Differential Privacy; Secure Multiparty Com-
putation; Anonymity
1.
INTRODUCTION
Anonymity on the Internet provides the means to dissociate one’s
network identity from one’s online activities and communications.
Anonymity is not offered by default on today’s Internet and re-
quires the use of overlay anonymity networks. The most popular
∗An extended version of this paper is available. [12].
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2957-6/14/11...$15.00.
http://dx.doi.org/10.1145/2660267.2660280.
such service today is Tor [8], but others include JAP [19] (com-
mercially offered as JonDonym [16]), i2p [17] and Anonymizer
Universal (AU) [2].
All those designs employ relays to form a communication path
between a client and a destination that hides information about who
is connecting to whom from network observers, and from the desti-
nation itself. While they have been improved upon and have grown
in popularity, anonymity networks remain notorious for being dif-
ﬁcult to study [21, 36]. This is partly due to their inherent privacy
properties, but also due to ethical considerations: they are live sys-
tems, and any data collection about their use may put in danger real
users by compromising their anonymity.
Data collection systems, in this context, must be mindful of four
main risks:
1. The network is run by volunteers and anyone with resources
may join the network by contributing nodes with bandwidth
or computation cycles to relay trafﬁc. This limits the trust-
worthiness of nodes.
2. The data that may be collected at nodes is sensitive and di-
rectly publishing it may break the non-collusion assumption
required by relay-based anonymity networks to maintain user
anonymity.
3. The nodes that collect or process statistical information should
not become targets of compulsion attacks by making them
more attractive targets of miscreants and authorities.
4. Low-latency anonymity networks are vulnerable to correla-
tion attacks [26,27] that observe trafﬁc volumes entering and
leaving the network. Published statistics must hide informa-
tion that would allow a client-side adversary with a partial
view of the network (an ISP, for example) to mount such at-
tacks.
To mitigate these risks, we propose PrivEx, a system for collect-
ing aggregated anonymity network statistics in a privacy-preserving
manner.
PrivEx collects aggregated statistics to provide insights about
user behaviour trends by recording aggregate usage of the anonymity
network. To further reduce the risk of inadvertent disclosures, it
collects only information about destinations that appear in a list of
known censored websites. The aggregate statistics are themselves
collected and collated in a privacy-friendly manner using secure
multiparty computation primitives, enhanced and tuned to resist a
variety of compulsion attacks and compromises. Finally, the gran-
ularity of the statistics is reduced, through a noise addition method
providing (,δ)-differential privacy, to foil correlation attacks.
The novel contributions in PrivEx are:
1. A safe mechanism to collect client statistics from anonymity
network egress nodes;
2. Two secure multiparty protocols that protect the intermediate
values of a distributed differential privacy (DDP) computa-
tion, optimized for the problem at hand;
3. Reduced noise in the results of the DDP computation leading
to higher utility while still maintaining the desired level of
privacy, both as tunable parameters;
4. A security analysis detailing the resistance to compulsion,
compromise and correlation attacks; and
5. An evaluation of the overhead and performance of a proof-
of-concept implementation of PrivEx.
There are three main motivations behind PrivEx. The ﬁrst is
that developers of anonymity networks have so far been unable
to inspect egress trends. This information can guide designs that
enhance performance and provide features that better address the
needs of users. For example, network designers would like to be
able to determine how much of the network’s trafﬁc is for the pur-
pose of protecting the user’s identity from the website she visits,
and how much is for the purpose of censorship circumvention—
protecting the identity of the website she visits from the censor.
These different user bases have different security and privacy re-
quirements, and knowledge of the prevalence of each set can help
tune the network appropriately. The second motivation is to in-
form the research community with realistic information about us-
age trends to guide research in censorship resistance mechanisms,
performance tuning, and resource allocation, to name a few. Fi-
nally, one of the important open questions in any anonymity net-
work is how to model client behaviour since this is exactly the in-
formation that needs to remain conﬁdential. With realistic statistics
we can shed light not only on client behaviour but also use it to
ensure that when we test novel designs or system changes we can
model their effects on clients in a more realistic manner, leading to
more ecologically valid results.
Unfortunately, previous research on client behaviour [22] led to
controversy due to private client information being gathered—even
though it was destroyed and never exposed [33]. This set a prece-
dent that client information, no matter how it is collected, is off-
limits for legitimate research, which had a chilling effect on re-
search in this area. Mindful of the risks to clients and respecting
the fears of the privacy research community, PrivEx is a proposal
that aims at resolving this deadlock by providing a means of safely
collecting client trafﬁc statistics in anonymity networks.
2. BACKGROUND
Anonymous Communication Networks.
Anonymous communication networks (ACNs) allow clients to
hide their accesses to web pages and other Internet destinations
from certain network observers (typically ones who can view net-
work trafﬁc on at most a small portion of the Internet).
Low-latency networks, such as Tor, JAP/JonDonym, or i2p ob-
fuscate network trafﬁc by routing it through multiple nodes: an
ingress node, some number of middle nodes, and an egress node.
The routing can be predetermined by the network, as in JAP/JonDo-
nym, or source-routed subject to some constraints, as in Tor and
i2p. To achieve security against network observers, trafﬁc is en-
crypted so that the contents and metadata, including the destination,
are only seen by the egress node and the client.
Simpler anonymizing networks, such as AU use only a single
node and as a result are extremely susceptible to legal compulsion
attacks (through court orders, for example) [29, 32]; hence, they
will not feature in our discussions further.
Tor. Tor [8] is a popular ACN that provides anonymity by de-
coupling the routing information between the client and the desti-
Figure 1: An overview of the Tor network and typical trafﬁc
ﬂow (dotted line), highlighting Tor circuits, which use telescop-
ing nested encryption.
nation. Clients use three intermediary nodes to route their trafﬁc
using onion routing. This prevents the destination from learning
who the client is, and it also prevents an observer local to the client
from learning which destination the client has connected to.
Tor, by default, uses three intermediate nodes in a connection
between a client and destination (Figure 1). The client uses a tele-
scoping mechanism to construct a circuit between herself and the
last node, known as the exit node, which is the egress point of the
client’s trafﬁc. As this is the location where PrivEx will perform
its privacy-preserving data collection, we will refer to this node as
the data collector (DC) in the remainder of the paper. Each client
circuit has a unique identiﬁer to help the DC manage the ﬂow of
trafﬁc for multiple clients at once. The default behaviour is for the
Tor client software to switch to a new circuit every 10 minutes.
The DC node knows the destination but not the originator of a
connection. This is necessary to prevent it from relating the ob-
served destination to any client and hence learn about her habits, ac-
tivities or interests. Traditionally, exit nodes are required to delete
any information about the connections that exit the Tor network
through them. Publishing such information may be combined by
an adversary (such as an ISP or national ﬁrewall) with a client-side
view of the network to correlate exit activity with client activity to
deanonymize the network trafﬁc.
Thus, to not introduce any new attack vectors, any effort to col-
lect trafﬁc data at exit nodes, even in aggregate, will have to mini-
mize the information leaked to the adversary. This must hold even
in the case that the adversary is able to compromise the node or
compel the node operator to reveal the state of the node.
We will use Tor as a model ACN in which to integrate PrivEx
in the discussions that follow. This should aid in clarifying the de-
scriptions and to help the reader relate PrivEx to real-world ACNs,
but does not restrict the generality and applicability of PrivEx to
other systems.
Differential Privacy.
Traditional differential privacy [9] protects a central database—a
table where rows hold sensitive data about individuals—that is to
be kept private. This central database holds raw records that are
only to be released to the public in noisy or aggregated form. The
database allows multiple queries from clients who spend from a
privacy budget for each query.
Established differential privacy mechanisms add noise to the re-
sults of client queries to ensure that personal information—i.e., in-
ClientDestinationCircuit with Telescoping Nested EncryptionDataformation about a particular entity that contributes to the results of
a query—cannot be gleaned from those results. Intuitively, given
any two “neighbouring” databases, one containing an entity’s data
and another without that entity’s data, but otherwise equal, then the
probability of observing any particular output to a given query will
be close for the two databases.
PrivEx implements a privacy mechanism based on adding noise
from a Gaussian distribution.1 Adding an appropriate amount of
Gaussian noise to the results of queries produces (, δ)-differential
privacy: if D and D(cid:48) are two neighbouring databases (as described
above), then the probabilities PD(x) and PD(cid:48) (x) that a given query
outputs x when using the databases D and D(cid:48) respectively, are re-
lated by PD(x) ≤ e · PD(cid:48) (x) + δ. [10].
In our setting, the database consists of one row for each censored
website whose visits we wish to count, and queries will simply be
of the form “output the counts in each row of the database (plus
noise)”.
3. THREAT MODEL
PrivEx maintains its security properties against an adversary that
is local to the client or the website servers they visit. The adversary
is able to monitor trafﬁc between the client and the ingress of the
anonymity network, or trafﬁc between the egress of the network
and the client’s destination, but not both at the same time. This
assumption is similar to the one required to argue Tor is secure.
As a result, this adversary is presumed to be unable to defeat the
anonymity system. However, if any information is also revealed by
the DC node, such as client usage statistics, that data could possibly
be used to correlate trafﬁc. A secure statistics gathering system,
like PrivEx, should prevent any such attacks.
We allow the adversary to operate nodes in PrivEx; i.e., deploy
or compromise ingress nodes in the network and be part of the ag-
gregation service itself. The adversary may also use the anonymity
network to relay its own trafﬁc in order to induce desired statistics
into the aggregation process. Malicious nodes can report spurious
data without generating or processing the corresponding trafﬁc.
PrivEx is secure when there is at least one honest data collector
and at least one honest-but-curious tally key server (described in
§4). While dishonest data collectors can report “junk” statistics and
malicious servers can disrupt the protocol, the security requirement
in PrivEx is that no client trafﬁc pattern information from honest
data collectors is ever exposed: neither while it is stored on the data
collectors, while it is in transit in the network, nor while it is being
processed by the aggregating service. That is, malicious parties can
disrupt the statistics reported by PrivEx, but cannot expose private
data. In the distributed-decryption variant of PrivEx (see §4.2), we
can further detect misbehaving servers. We discuss the security
implications of malicious actors and publishing client statistics in
further detail later in §5.1.
4. THE PrivEx SCHEMES
The goal of PrivEx is to count how many clients are visiting
each of a list of particular known censored websites.2 These statis-
tics are gathered and reported in a privacy-sensitive manner so that
the outputs of PrivEx cannot be used to perform trafﬁc correlation
attacks. Note that it is trivial to adapt PrivEx to collect statistics for
any type of event that the egress nodes can count, such as the trafﬁc
volume per circuit, variance in circuit-management statistics, client
navigation behaviour, and so on.
1We discuss later why we use Gaussian instead of Laplacian noise.
2This list can optionally have an “Other” entry to count the total
number of visits to non-censored websites as well.
Figure 2: PrivEx variant based on secret sharing
The DC nodes in PrivEx run on the same machines as the egress
nodes of the underlying ACN. The DC listens for events of interest
from the egress node, and securely aggregates them. In our setting,
an event will consist of the ACN egress node reporting that a par-
ticular circuit has asked to perform a DNS lookup of a particular
website.
PrivEx collects and aggregates statistics over a ﬁxed period of