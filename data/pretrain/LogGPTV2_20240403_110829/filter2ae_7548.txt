# 一次反制追踪与溯源记录
##### 译文声明
本文为翻译文章，具体内容及含义以原文为准。

## 前言
朋友反映其服务器运行异常缓慢，并且该服务器上存放了大量项目资料和集成环境。作为他的技术支持人员，我义不容辞地帮助他排查问题。原本以为只是简单的杀毒和清理文件就能解决问题，没想到花费了较长时间才彻底解决。因此决定撰写此文，记录整个过程。

## 清除病毒
首先询问朋友是否下载过任何可疑软件或进行了不寻常的操作，但他表示并不知情。于是，我通过任务管理器查看到几个占用率较高的PowerShell进程。为了进一步确认这些进程的命令行参数，使用了WMIC工具进行检查。参数包括：
- Caption：进程名
- CommandLine：命令行参数
- ParentProcessId：父进程PID
- Process：进程PID

经检查发现，其中一个PowerShell进程正在执行一段经过混淆处理的代码，这显然是恶意行为。接着，我利用火绒剑、ProcExp以及ProcessHacker等工具对这些进程进行了更详细的分析，并终止了相关子进程。然而，由于存在守护进程，单纯结束子进程并不能完全解决问题。因此，需要找到并终止所有相关的进程树才能彻底清除威胁。

## 审计日志
在解决了病毒问题后，下一步是查明攻击者是如何入侵系统的。通过对RDP日志（事件ID 4624代表登录成功，4625则表示失败尝试）的审查，确实发现了非法登录成功的记录。此外，在注册表中也找到了一个隐藏账户，随即删除了这个账户及其关联的所有启动项和计划任务。

为了确保没有遗漏，我还计算了某些关键文件的MD5值以验证一致性。在此过程中，意外地在一个未被注意到的phpstudy目录下发现了WebShell。使用WebShellKiller进行全面扫描但未能检测出任何异常，最终还是通过手动逐个检查文件的方式找到了名为news.php的后门脚本。同时，从Apache访问日志中提取到了疑似攻击者的IP地址。

## 反查追踪
确定了入侵点并对系统进行了彻底清理之后，接下来就是尝试追溯攻击源头。根据获取到的IP信息，发现该地址早在2018年就被标记为僵尸网络的一部分，位于日本境内。考虑到直接定位攻击者难度较大，转而关注挖掘程序样本本身。将样本放入沙箱环境中运行，并分析了其中包含的批处理文件和Windows命令脚本。

此外，还注意到目标机器上的Redis服务存在未授权访问漏洞。利用这一弱点成功获得了远程登录权限，并通过/var/log/wtmp日志进一步确认了曾有外部用户通过SSH连接至该主机。结合Whois查询结果，甚至能够将某个特定QQ邮箱与攻击活动联系起来。不过遗憾的是，尽管找到了可能的嫌疑人账号，却无法获得更多个人信息。

## 总结
1. 首先明确问题所在，识别出木马感染。
2. 对受感染的进程、启动项、计划任务、后门文件以及新增账户进行全面清理。
3. 利用主机及Web服务器日志来定位初始入侵点。
4. 逆向追踪并获取控制权于另一台被黑客操控的“肉鸡”设备上。
5. 尝试追根究底寻找幕后黑手（尽管未必能完全确定）。