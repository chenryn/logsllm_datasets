    ```
    或者
    ``` screen
    # {PackageManagerCommand} remove @group-name
    ```
    使用组群的全名替换 [*group-name*]{.emphasis}。
-   要通过 groupID 删除软件包组，请使用：
    ``` screen
    # {PackageManagerCommand} group remove groupID
    ```
    使用组 ID 替换 [*groupID*]{.emphasis}。
:::
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#specifying-global-expressions-in-yum-input_managing-software-package-groups}在 yum 输入中指定全局表达式 {.title}
:::
`yum`{.literal} 命令允许您将一个或多个 [*glob 表达式*]{.emphasis}
作为参数过滤。当作为参数传递给 `yum`{.literal}
命令时，全局表达式必须被转义。要确定将全局表达式传递给
`yum`{.literal}，请使用以下方法之一 :
::: itemizedlist
-   使用双引号或单引号包括整个全局表达式。
    ``` screen
    # {PackageManagerCommand} provides "*/file-name"
    ```
    用文件名替换 [*file-name*]{.emphasis}。
-   在它们前面使用反斜杠(`\`{.literal})符号转义通配符字符。
    ``` screen
    # {PackageManagerCommand} provides \*/file-name
    ```
    用文件名替换 [*file-name*]{.emphasis}。
:::
:::
:::
::: section
::: titlepage
# []{#managing-software-packages_configuring-basic-system-settings.html#handling-package-management-history_managing-software-packages}处理软件包管理历史记录 {.title}
:::
`yum history`{.literal} 命令允许您查看有关
[**[yum]{.application}**]{.strong}
事务时间表、日期和时间、受影响的软件包数量、这些事务是成功还是被中止，以及是否在事务间更改了
RPM 数据库的信息。`yum history`{.literal} 命令也可用于撤销或重做事务。
下面的部分描述了如何使用 [**yum**]{.strong}:
::: itemizedlist
-   列出事务。
-   恢复事务。
-   重复事务。
-   在 yum 输入中指定全局表达式。
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#listing-transactions-with-yum_handling-package-management-history}使用 yum 列出事务 {.title}
:::
::: itemizedlist
-   要显示所有最新的 [**[yum]{.application}**]{.strong}
    事务列表，请使用：
    ``` screen
    # {PackageManagerCommand} history
    ```
-   要显示所选软件包的最新操作列表，请使用：
    ``` screen
    # {PackageManagerCommand} history list package-name
    ```
    使用软件包名称替换
    [*package-name*]{.emphasis}。您可以通过附加全局表达式来过滤命令输出。详情请查看
    ["在 yum
    输入中指定全局表达式"一节](#managing-software-packages_configuring-basic-system-settings.html#specifying-global-expressions-in-yum-input_handling-package-management-history "在 yum 输入中指定全局表达式"){.xref}。
-   要检查特定的事务，请使用：
    ``` screen
    # {PackageManagerCommand} history info transactionID
    ```
    用事务的 ID 替换 [*transactionID*]{.emphasis}。
:::
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#reverting-transactions-with-yum_handling-package-management-history}使用 yum 恢复事务 {.title}
:::
::: itemizedlist
-   要恢复特定的事务，请使用：
    ``` screen
    # {PackageManagerCommand} history undo transactionID
    ```
    用事务的 ID 替换 [*transactionID*]{.emphasis}。
-   要恢复到最后的事务，请使用：
    ``` screen
    # {PackageManagerCommand} history undo last
    ```
:::
请注意，`yum history undo`{.literal}
命令只恢复事务期间执行的操作步骤。如果事务安装了一个新的软件包，`yum history undo`{.literal}
命令会卸载它。如果事务卸载了软件包，`yum history undo`{.literal}
命令会重新安装它。`yum history undo`{.literal}
还会尝试将所有更新的软件包降级到之前的版本（如果旧包仍然可用）。
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#repeating-transactions-with-yum_handling-package-management-history}使用 yum 重复事务 {.title}
:::
::: itemizedlist
-   要重复特定的事务，请使用：
    ``` screen
    # {PackageManagerCommand} history redo transactionID
    ```
    用事务的 ID 替换 [*transactionID*]{.emphasis}。
-   要重复最后的事务，请使用：
    ``` screen
    # {PackageManagerCommand} history redo last
    ```
:::
请注意， `yum history redo`{.literal} 命令只重复事务期间执行的步骤。
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#specifying-global-expressions-in-yum-input_handling-package-management-history}在 yum 输入中指定全局表达式 {.title}
:::
`yum`{.literal} 命令允许您将一个或多个 [*glob 表达式*]{.emphasis}
作为参数过滤。当作为参数传递给 `yum`{.literal}
命令时，全局表达式必须被转义。要确定将全局表达式传递给
`yum`{.literal}，请使用以下方法之一 :
::: itemizedlist
-   使用双引号或单引号包括整个全局表达式。
    ``` screen
    # {PackageManagerCommand} provides "*/file-name"
    ```
    用文件名替换 [*file-name*]{.emphasis}。
-   在它们前面使用反斜杠(`\`{.literal})符号转义通配符字符。
    ``` screen
    # {PackageManagerCommand} provides \*/file-name
    ```
    用文件名替换 [*file-name*]{.emphasis}。
:::
:::
:::
::: section
::: titlepage
# []{#managing-software-packages_configuring-basic-system-settings.html#managing-software-repositories_managing-software-packages}管理软件存储库 {.title}
:::
[**[yum]{.application}**]{.strong} 及相关工具的配置信息保存在
`/etc/yum.conf`{.literal} 文件中。此文件包含一个或多个
`[repository]`{.literal} 部分，用于设置特定存储库选项。
建议您在
`/etc/yum.repos.d/ 目录的新的或现有 `{.literal}.repo``{=html}
文件中定义单独的库。
请注意：您在 `/etc/yum.conf`{.literal} 文件的单独
`[repository]`{.literal} 部分定义的值会覆盖 `[main]`{.literal}
部分中设置的值。
下面的部分描述了如何：
::: itemizedlist
-   设置 `[repository]`{.literal} 选项。
-   添加 [**[yum]{.application}**]{.strong} 软件仓库。
-   启用 [**[yum]{.application}**]{.strong} 软件仓库。
-   禁用 [**[yum]{.application}**]{.strong} 软件仓库。
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#setting-yum-repository-options_managing-software-repositories}设置 yum 软件仓库选项 {.title}
:::
`/etc/yum.conf`{.literal} 配置文件包含 `[repository]`{.literal}
部分，其中 [*repository*]{.emphasis} 是唯一的软件仓库
ID。`[repository]`{.literal} 项可以用来定义独立的
[**[yum]{.application}**]{.strong} 软件仓库。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
不要给出红帽软件仓库使用的自定义软件仓库名称以避免冲突。
:::
有关可用 `[repository] 选项`{.literal} 的完整列表，请查看
[**yum.conf**]{.strong}(5)手册页中的 `[repository] OPTIONS`{.literal}
部分。
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#adding-a-yum-repo_managing-software-repositories}添加 yum 软件仓库 {.title}
:::
要定义新软件仓库，您可以：
::: itemizedlist
-   在 `/etc/yum.conf`{.literal} 文件中添加 `[repository]`{.literal}
    部分。
-   在 `/etc/yum.repos.d/`{.literal} 目录中的 `.repo`{.literal}
    文件中添加 `[repository]`{.literal} 部分。
    [**[yum]{.application}**]{.strong} repositories 通常提供它们自己的
    `.repo`{.literal} 文件。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
建议您在 `.repo`{.literal} 文件中而不是 `/etc/yum.conf`{.literal}
中定义您的程序仓库，因为在这个目录中的所有带有 `.repo`{.literal}
文件扩展名的文件都被 [**yum**]{.strong} 读取。
:::
::: itemizedlist
-   要在您的系统中添加库并启用该程序，请使用：
    ``` screen
    # {PackageManagerCommand}-config-manager --add-repo repository_URL
    ```
    使用指向库的 URL 替换 [*repository_url*]{.emphasis}。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
从红帽基于证书 `的内容交付网络`{.literal}
([**CDN**]{.strong})以外的未验证或不受信任的来源获取和安装软件包构成了潜在的安全风险，并可能导致安全性、稳定性、兼容性和可维护性问题。
:::
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#enabling-a-yum-repo_managing-software-repositories}启用 yum 软件仓库 {.title}
:::
::: itemizedlist
-   要启用存储库，请使用：
    ``` screen
    # {PackageManagerCommand}-config-manager --enable repositoryID
    ```
    使用唯一的存储库 ID 替换 [*repositoryID*]{.emphasis}。
    要列出可用的存储库 ID，请参阅 ["使用 yum
    列出软件包"一节](#managing-software-packages_configuring-basic-system-settings.html#listing-packages-with-yum_searching-for-software-packages "使用 yum 列出软件包"){.xref}。
:::
:::
::: section
::: titlepage
## []{#managing-software-packages_configuring-basic-system-settings.html#disabling-a-yum-repository_managing-software-repositories}禁用 yum 软件仓库 {.title}
:::
::: itemizedlist
-   要禁用 yum 软件仓库，请使用：
    ``` screen
    # {PackageManagerCommand}-config-manager --disable repositoryID
    ```
    使用唯一的存储库 ID 替换 [*repositoryID*]{.emphasis}。
    要列出可用的存储库 ID，请参阅 ["使用 yum
    列出软件包"一节](#managing-software-packages_configuring-basic-system-settings.html#listing-packages-with-yum_searching-for-software-packages "使用 yum 列出软件包"){.xref}。
:::
:::
:::
::: section
::: titlepage
# []{#managing-software-packages_configuring-basic-system-settings.html#configuring-yum_managing-software-packages}配置 yum {.title}
:::
[**[yum]{.application}**]{.strong} 及相关工具的配置信息保存在
`/etc/yum.conf`{.literal} 文件中。这个文件包含一个必须的
`[main]`{.literal} 部分,它可让您设置具有全局效果的 [**yum**]{.strong}
选项。
下面的部分描述了如何：