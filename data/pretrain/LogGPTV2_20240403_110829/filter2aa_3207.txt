# Truck Hacking: Tools and Techniques

## Overview
The latest version of this slide deck and other related materials can be found at [truckhacking.github.io](http://truckhacking.github.io/).

### Presentation by:
- Haystack
- Six Volts

### Agenda
1. Heavy Trucks: Similarities and Differences from Cars
2. R&D Challenges: The Cost of Trucks and Workarounds
3. Networking Protocols and Standards
4. Adventures in Truck Hacking
5. New Hardware Tools

## Quick Notes
- We assume you are familiar with basic vehicle networking concepts, such as the presence of computers and networks in vehicles.
- We also assume you understand that accessing these networks can enable malicious activities.
- Due to time constraints, many details will be omitted.
- Visit our GitHub for more information.
- **Safety Disclaimer:** Moving vehicles are dangerous. Do not perform any hacking or testing on a rental vehicle while driving, or engage in any other unsafe behavior.

## Trucks vs. Cars
- "Trucks" refer to heavy vehicles including, but not limited to, Over-the-Road Semis, Vocational Trucks, Fire Engines, Buses, some Armored Personnel Carriers, Ambulances, Armored Cars, Boats, Diesel Generators, and Agricultural Equipment.
- Exception: Diesel Pickup Trucks (these behave more like cars).
- Most heavy vehicles use diesel engines.
- Different On-Board Diagnostic and Networking Standards (J1939/J1708).
- RP1210 governs the workstation-to-adapter interface.

## Truck Economics
- Many components from different manufacturers are interchangeable (e.g., engines, brakes).
- Example: Navistar/International Trucks can be equipped with either a Cummins or International/Navistar engine (and previously CAT).
- This interoperability is essential for products from different manufacturers.
- Many trucks operate in fleets, which are typically as homogeneous as possible.
- The industry is data-hungry, with large amounts of data stored and transmitted.
- High mileage and frequent connections to diagnostic computers mean trucks spend more time connected to diagnostic systems.

## Trucks are EXPENSIVE
- A new truck can cost over $100,000.
- For aspiring hackers, they are large, hard to store, difficult to drive, and expensive to operate.
- Since we didn't have one (and still don't), we needed a workaround.

## Truck-In-A-Box (TIB)
- We purchased an Engine Control Module (ECM) and built the necessary electronics around it to function sufficiently for analysis (Key-On, engine off).
- The first TIB took 6+ months and cost over $10,000, but it was still cheaper than a full truck.
- Since then, we've built over a dozen full-size versions.
- Later, we compressed the concept into a small box with one or two PCBs that connect to the ECM for each make/model.

## Truck-In-A-Box Concepts
- Recreate the Vehicle Networks: J1939 (CAN) and J1708 (RS485-like).
- Simulate passive sensor signals (usually just a set voltage or resistance).
- Simulate simple active signals (e.g., PWM for the accelerator pedal).
- Generate complex analog signals (e.g., vehicle speed).

## Networking Protocols and Standards
- Two main protocols: SAE J1939 and J1708.
- J1708 is the older protocol (1985) based on 9600 baud UART.
- J1587 operates on top of J1708 (transport layer).
- J1939 is the newer protocol, using 250K CAN (with 500K in the near future).
- Physical and data link layers, addressing, transport, etc.
- ISO15765 is used for diagnostics communication (details in the whitepaper).

### J1708 Basics
- 9600 baud serial communication.
- Can be read with a TTY with some effort.
- Messages are time-delimited.
- MIDs and PIDs.
- Mostly found in older trucks, though some newer ones still use it.
- Data link escape for proprietary communications (PID 0xFE).
- Message fragmentation and reliable delivery (J1587).

### J1939 Basics
- 250k CAN (500k in the near future).
- Extended CAN ID broken into source, (maybe) destination, etc.
- Address management, transport, message fragmentation.
- Numerous J1939 standards.
- PGNs reserved for proprietary communications.

### VDA Basics
- Vehicle Diagnostics Adapters (VDAs) are similar to OBD-II scan tools.
- They bridge USB/Serial/Ethernet to J1939/J1708.
- Governs functions exposed by VDAs.
- Best VDAs for reverse engineering are Dearborn Group DPA.
- Robust logging facilities allow for easy dynamic analysis.
- We aim to write an RP1210 driver forâ€¦

## Truck Hacking Tools: Truck Duck
- A cape for a BeagleBone.
- Hardware for CAN and J1708 (two of each for potential filtering/modification).
- Software stack for communication.
- J1939 kernel extensions (plus J1939-enabled Python build).
- Homegrown J1708 implementation using AM335x PRU (it's not pretty).

## Adventures in Truck Hacking
### Modifying Engine Parameters
- Most engine parameter configuration is done over proprietary protocol extensions.
- Relatively easy to reverse.
- Most OEM software is un-obfuscated .NET linked to some legacy C.
- We promised not to provide too many specifics.
- Demonstration of what is possible with TruckDuck.

### ECM Impersonation
- Useful for reversing proprietary communications parameters.
- Details to follow.

### Bad Crypto A-Go-Go
- Disclosed at the conference.
- More demos to come!

## Heads Up
- There is a wealth of related material on our GitHub, including a white paper, schematics, assembly instructions, code, and embedded OS image.
- Visit [truckhacking.github.io](http://truckhacking.github.io/) for more.

---

This revised version should be clearer, more professional, and easier to follow.