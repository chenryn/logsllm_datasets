### The bug
Let's say I have these two files
#### foo.ts
    export default class Foo { }
#### bar.ts
    import Foo from './foo';
    let foo = new Foo();
If I compile these files with
    tsc -t es6 -m commonjs foo.ts bar.ts
I get this output
#### foo.js
    class Foo {}
    exports.Foo = Foo;
#### bar.js
    var foo_1 = require('./foo');
    let foo = new foo_1.default();
Obviously this code will not work.
### Solutions
  1. converting module type to `ES6`, this seems to be the definite solution
  2. converting imports to `import * as Foo from './foo'` this fixes the produced code but show this error during compile
> bar.ts(3,11): error TS2351: Cannot use 'new' with an expression whose type
> lacks a call or construct signature.
### Confusion
Above code works without any workaround when targetting `ES5`. Is this the
intended behavior? If so, shouldn't this be documented somewhere? Also instead
of producing a code that does not work, maybe it should just say
> commonjs modules cannot be used when targeting ES6
Sorry if this was already reported or was already documented.