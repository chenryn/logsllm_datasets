title:On the Security and Performance of Proof of Work Blockchains
author:Arthur Gervais and
Ghassan O. Karame and
Karl W&quot;ust and
Vasileios Glykantzis and
Hubert Ritzdorf and
Srdjan Capkun
On the Security and Performance of Proof of Work
Blockchains
Arthur Gervais
ETH Zurich, Switzerland
PI:EMAIL
Ghassan O. Karame
NEC Laboratories, Europe
PI:EMAIL
Karl Wüst
ETH Zurich, Switzerland
PI:EMAIL
Vasileios Glykantzis
ETH Zurich, Switzerland
PI:EMAIL
Hubert Ritzdorf
ETH Zurich, Switzerland
PI:EMAIL
Srdjan ˇCapkun
ETH Zurich, Switzerland
PI:EMAIL
ABSTRACT
Proof of Work (PoW) powered blockchains currently account for
more than 90% of the total market capitalization of existing digi-
tal cryptocurrencies. Although the security provisions of Bitcoin
have been thoroughly analysed, the security guarantees of variant
(forked) PoW blockchains (which were instantiated with different
parameters) have not received much attention in the literature.
In this paper, we introduce a novel quantitative framework to
analyse the security and performance implications of various con-
sensus and network parameters of PoW blockchains. Based on
our framework, we devise optimal adversarial strategies for double-
spending and selﬁsh mining while taking into account real world
constraints such as network propagation, different block sizes, block
generation intervals, information propagation mechanism, and the
impact of eclipse attacks. Our framework therefore allows us to
capture existing PoW-based deployments as well as PoW blockchain
variants that are instantiated with different parameters, and to objec-
tively compare the tradeoffs between their performance and security
provisions.
1.
INTRODUCTION
Since its inception in 2009, Bitcoin’s blockchain has fueled inno-
vation and a number of novel applications, such as smart contracts,
have been designed to take advantage of the blockchain. Bitcoin
has been forked a number of times in order to ﬁne-tune the con-
sensus (i.e., the block generation time and the hash function), and
the network parameters (e.g., the size of blocks and the information
propagation protocol) and to increase the blockchain’s efﬁciency.
For instance, Litecoin and Dogecoin—Bitcoin’s most prominent
forks—reduce the block generation time from 10 to 2.5 and 1 minute.
Parallel to these efforts, alternative decentralised blockchain-based
networks (such as Ethereum) emerged with the ambition to optimize
the consensus and network parameters and to ease the deployment
of decentralised applications on top of the blockchain.
Although a number of consensus protocols (PBFT [5], Proof of
Stake [30], Proof of Elapsed Time [22]) have been proposed, most
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24 - 28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978341
existing blockchains leverage the computationally expensive Proof
of Work (PoW) consensus mechanism—which currently accounts
for more than 90% of the total market capitalization of existing
digital cryptocurrencies [6]. While the security provisions of Bit-
coin have been thoroughly analysed [15, 23, 31, 33], the security
guarantees of variant PoW blockchains have not received much
attention in the literature. Recent studies hint that the performance
of PoW based blockchains cannot be enhanced without impacting
their security. However, the relationship between performance and
security provisions of PoW blockchains has so far not been studied
in much detail.
In this paper, we address this problem and provide a novel quan-
titative framework to analyse the security and performance im-
plications of various consensus and network parameters of PoW
blockchains. Leveraging our framework, we capture the security
properties of existing PoW instantiations (e.g., Bitcoin, Ethereum,
Litecoin, and Dogecoin) as well as other possible instantiations
subject to different consensus and network parameters.
Our framework (cf. Figure 1) consists of two key elements:
(i) a blockchain instance and (ii) a blockchain security model. A
blockchain instance is a PoW blockchain instantiated with a given
set of consensus and network parameters, such as network delays,
block generation times, block sizes, information propagation mech-
anisms, etc. For example, Bitcoin, Litecoin, and Ethereum corre-
spond to 3 different blockchain instances. To realistically capture
any other blockchain instance, we design a simulator that mim-
ics the blockchain consensus and network layer by implementing
advertisement-based information propagation, unsolicited block
pushes, the relay network, the sendheader propagation mechanism,
among others.1 The main output of the blockchain instance is the
(measured or simulated) stale (orphan) block rate, which is fed as
input into our security model. On the other hand, our security model
is based on Markov Decision Processes (MDP) for double-spending
and selﬁsh mining and allows us to reason about optimal adver-
sarial strategies while taking into account the adversarial mining
power, the impact of eclipse attacks, block rewards, and real world
network and consensus parameters—effectively captured by the
stale block rate.
Given the current discussions in the Bitcoin community about a
suitable maximum block size that ensures the scalability and growth
in the system [1], our work provides a way to holistically compare
the security and performance of PoW blockchains when subject
to different parameters—-including the block size. For instance,
we ﬁnd that increasing the block size from the current Bitcoin
1Our simulator is accessible at http://arthurgervais.github.io/
Bitcoin-Simulation/index.html.
32.1 Consensus Layer
The proof of work (PoW) consensus mechanism is the widest
deployed consensus mechanism in existing blockchains. PoW was
introduced by Bitcoin [28] and assumes that each peer votes with
his “computing power” by solving proof of work instances and
constructing the appropriate blocks. Bitcoin, for example, employs
a hash-based PoW which entails ﬁnding a nonce value, such that
when hashed with additional block parameters (e.g., a Merkle hash,
the previous block hash), the value of the hash has to be smaller
than the current target value. When such a nonce is found, the
miner creates the block and forwards it on the network layer (cf.
Section 2.2) to its peers. Other peers in the network can verify the
PoW by computing the hash of the block and checking whether it
satisﬁes the condition to be smaller than the current target value.
Block interval: The block interval deﬁnes the latency at which
content is written to the blockchain. The smaller the block interval is,
the faster a transaction is conﬁrmed and the higher is the probability
of stale blocks. The block interval adjustment directly relates to
the difﬁculty change of the underlying PoW mechanism. A lower
difﬁculty results in a larger number of blocks in the network, while
a higher difﬁculty results in less blocks within the same timeframe.
It is therefore crucial to analyse whether changing the difﬁculty
affects the adversarial capabilities in attacking the longest chain—
which is the main pillar of security of most PoW-based blockchains.
This also implies the adjustment of the required number of con-
ﬁrmations that a merchant should wait in order to safely accept
transactions (and avoid double-spending attacks) (cf. Section 3).
2.1.1 PoW security
PoW’s security relies on the principle that no entity should gather
more than 50% of the processing power because such an entity can
effectively control the system by sustaining the longest chain. We
now brieﬂy outline known attacks on existing PoW-based blockchains.
First, an adversary can attempt to double-spend by using the same
coin(s) to issue two (or more) transactions—thus effectively spend-
ing more coins than he possesses. Recent studies have shown that
accepting transactions without requiring blockchain conﬁrmations
is insecure [23]. The more conﬁrmations a transaction obtains, the
less likely this transaction will be reversed in the future.
Second, miners might attempt to perform selﬁsh mining [15] at-
tacks in order to increase their relative mining share in the blockchain,
by selectively withholding mined blocks and only gradually pub-
lishing them [15, 32]. Recent studies show that, as a result of these
attacks, a selﬁsh miner equipped with originally 33% mining power
can effectively earn 50% of the mining power.
Double-spending attacks and selﬁsh mining can be alleviated if
all nodes in the blockchain system are tightly synchronised. Note
that, in addition to network latency, synchronisation delays can be
aggravated due to eclipse attacks [18,19] where an adversary creates
a logical partition in the network, i.e., provides contradicting block
and transaction information to different blockchain network nodes.
2.2 Network Layer
On the network layer, we identify two main parameters that are
of particular importance for PoW-based blockchains, namely: the
block size, and the information propagation mechanism.
2.2.1 Block size
The maximum block size indirectly deﬁnes the maximum number
of transactions carried within a block. This size therefore controls
the throughput attained by the system. Large blocks incur slower
propagation speeds, which in turn increases the stale block rate (and
weaken the security of the blockchain as stated earlier).
Figure 1: Components of our quantitative framework.
transaction load (average 0.5MB) to up to 4 MB, does not signiﬁ-
cantly affect the selﬁsh mining and double-spending resilience of
the blockchain—provided that the block propagation mechanism en-
sures a low stale block rate. We summarize our ﬁndings as follows.
Summary of ﬁndings
• We show that selﬁsh mining is not always a rational strat-
egy. To capture rational adversaries, we therefore quantify the
double-spending resilience of PoW blockchains and objec-
tively compare the security of different PoW blockchains with
respect to the required number of transaction conﬁrmations.
By doing so, we provide merchants with the knowledge to
decide on the required number of conﬁrmations for a given
transaction value to ensure security against double-spending.
• Our results show that, due to the smaller block rewards and
the higher stale block rate of Ethereum2 compared to Bitcoin
(from 0.41% to 6.8% due to the faster conﬁrmation time),
Ethereum (block interval between 10 and 20 seconds) needs
at least 37 conﬁrmations to match Bitcoin’s security (block
interval of 10 minutes on average) with 6 block conﬁrmations
against an adversary with 30% of the total mining power.
Similarly, Litecoin would require 28, and Dogecoin 47 block
conﬁrmations respectively to match the security of Bitcoin.
• We show that the higher the block reward of a blockchain (in
e.g., USD) the more resilient it is against double-spending.
• Finally, we analyze the impact of changing the block size
and/or the block interval on selﬁsh mining and double-spending.
Our results surprisingly show that setting the block size to
an average 1 MB, and decreasing the block interval time to
1 minute do not considerably penalize security. Our results
therefore suggest that PoW blockchains can attain an effec-
tive throughput above 60 transactions per second (tps) (which
implies that the current throughput of Bitcoin of 7 tps can be
substantially increased) without compromising the security
of the system.
The remainder of the paper is organized as follows. In Section 2,
we overview the basic concepts behind PoW blockchain. In Sec-
tion 3, we introduce our MDP model to quantitatively analyze the
security of PoW blockchains. In Section 4, we present our simulator
and evaluate the security and performance of a number of variant
PoW-based blockchain instances. In Section 5, we overview related
work, and we conclude the paper in Section 6.
2. BACKGROUND
In this section, we brieﬂy recap the operations of the consensus
layer and the network layer of existing PoW blockchains.
2We show that, contrary to common beliefs, Ethereum does not
apply GHOST’s principle to include the contributions of “uncles” in
the main chain and therefore currently resembles Bitcoin.
PoW BlockchainOptimal adversarial strategyStale block rateBlock propagation timesThroughputConsensus & NetworkParametersSecurity ProvisionsStaleblock rateSecurityParametersSecurity Model4Information propagation mechanism
2.2.2
The block request management system dictates how information
is delivered to peers in the network. Eventually, since all peers
are expected to receive all blocks, a broadcast protocol is required.
The choice of the underlying broadcast protocol clearly impacts the
robustness and scalability of the network (cf. Section 4). In what
follows, we brieﬂy describe well-known network layer implementa-
tions of existing PoW-based blockchains.
Advertisement-based information dissemination: Most PoW
blockchains propagate messages with the help of an advertisement-
based request management system. If node A receives information
about a new object (e.g., a transaction or a block) from another node,
A will advertise this object to its other connections (e.g. node B) by
sending them an inv message (the hash and type of the advertised
object). Only if node B has not previously received the advertised
object, B will request the object from A with a getdata request.
Node A will subsequently respond with a Bitcoin object, e.g., the
contents of a transaction or a block.
Send headers: Peers can alternatively issue a sendheaders mes-
sage in order to directly receive block headers in the future from
their peers—skipping the use of inv messages. This reduces the
latency and bandwidth overhead of block message propagation and
is adopted by Bitcoin since version 0.12.
Unsolicited block push: This mechanism enables miners to broad-
cast their generated blocks without advertisement (i.e., since they
mined the block). Note that this push system is recommended3, but
not implemented in Bitcoin.
Relay networks: Relay networks [7] primarily enhance synchro-
nization of miners that share a common pool of transactions. Trans-
actions are typically only referenced in relayed blocks with a trans-
action ID (2 bytes per transaction instead of an average of 250
bytes per transaction). As a consequence, the resulting block size is
smaller than the regular block (cf. Bitcoin Relay Network [7]).
Hybrid Push/Advertisement Systems: A number of systems, such
as Ethereum, combine the use of push and advertisement dissemina-
√
tion. Here, a block is directly pushed to a threshold number of peers
(e.g., Ethereum directly pushes blocks to
n peers, where n is the
total number of neighbors connected to the peer). Concurrently, the
sender advertises the block hash to all of its neighbors.
2.3 Stale blocks
Stale blocks refer to blocks that are not included in the longest
chain, e.g., due to concurrency, conﬂicts. Stale blocks are detrimen-
tal to the blockchain’s security and performance because they trigger
chain forks—an inconsistent state which slows down the growth of
the main chain and results in signiﬁcant performance and security
implications. On the one hand, stale blocks increase the advantage
of the adversary in the network (e.g., double-spending). On the
other hand, stale blocks result in additional bandwidth overhead and
are typically not awarded mining rewards (except in Ethereum).
In an experiment that we conducted, we measure the stale block
rate in the Bitcoin (block generation time = 10 minutes, average
block size = 534.8KB), Litecoin (block generation time = 2.5 min-
utes, average block size = 6.11KB) and Dogecoin (block generation
time = 1 minute, average block size = 8KB) network. All three
blockchains rely on a PoW-based blockchain (with different gen-
eration times) and the same information propagation system (with
different block sizes).
We crawled the available nodes in Litecoin and Dogecoin [3] in
3https://bitcoin.org/en/developer-reference#data-messages
Block interval
Public nodes
Mining pools
tM BP
rs
sB
Bitcoin
10 min
6000
16
8.7 s [9]
0.41%
534.8KB 6.11KB
Litecoin Dogecoin Ethereum
2.5 min
800
12
1.02 s
0.273% 0.619%
1 min
600
12
0.85 s
10-20 seconds
4000 [12]
13
0.5 - 0.75 s [13]
6.8%
1.5KB
8KB
Table 1: Comparison of different Bitcoin forks, Ethereum and the
impact of parameter choices on the network propagation times. Stale
block rate (rs) and average block size (sB) were measured over the
last 10000 blocks. tM BP stands for median block propagation time.
February 2016 and found about 800 and 600 IP addresses respec-
tively. We then measured the block propagation times by registering
the times at which we receive the block advertisements from a par-
ticular block from all our connections in the respective network [10].
We operated one node for Litecoin and Dogecoin, which we con-
nected to 340 and 200 peers, respectively. Once one of these peers
advertises block information in form of either (i) a new hash of a
block (inv message) or (ii) a block header (headers message), we
registered the time this block information appeared. Every sub-
sequent reception of a particular piece of block information then
provides information about the propagation of the block.
Our results (cf. Table 1) suggest that the stale block rate indeed
largely depends on the block interval and the block sizes. For
instance, unlike Dogecoin and Litecoin, Bitcoin features larger block
sizes due to a higher transaction load (of up to 1MB which results
in a higher stale block rate (0.41% vs. 0.273%)—although the block
interval of Bitcoin is 4 times longer than that of Litecoin. Moreover,
the stale block rate differences between Litecoin and Dogecoin are
mainly due to the difference in the block interval (2.5 minutes vs.
1 minute), since their average block sizes are comparable (6.11KB
and 8KB). Given a conﬁrmation time reduction of 60%, the stale
block rate increased by 127% from Litecoin to Dogecoin.
Notice that in Ethereum, uncle blocks correspond to stale blocks
that are referenced in the main chain. The uncle block rate in
Ethereum is almost 6.8%, compared to a stale block rate of 0.41%
in Bitcoin. In Section 3, we study the impact of the stale block rate
on the security of PoW blockchains.
3. POW SECURITY MODEL
In this section, we introduce our blockchain security model that
we leverage to quantify the optimal adversarial strategies for double-