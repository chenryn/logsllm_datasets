### Describe your issue.
There is a serious bug in the implementation of Kummer's hypergeometric
function. If the first two parameters a, b are real, we have that hyp1f1(a, b,
z) should be the conjugate of hyp1f1(a, b, np.conj(z)). This is not always the
case. Examples are provided below.
Mathematica is one of the industry standards for doing scientific
computations. For many arguments hyp1f1(a, b, z) does not agree with
Mathematica's output given the same input. Examples are provided below.
If one does not have Mathematica installed, one can go to
https://www.wolframalpha.com/. There one can generate the output for one of
the examples below by entering  
`z = (5+10*Pi*I); N[Hypergeometric1F1[1/3,1+1/3,z], 10]`  
in the input cell.
    """
    EXAMPLE NUMBER 1:
    Code Mathematica:
    s =  (-4.559190954155+51.659216953928I);
    sconj=Conjugate[s];
    Hypergeometric1F1[1/2,3/2,-s]
    Hypergeometric1F1[1/2,3/2,-sconj]
    Output Mathematica:
    Out[12]= 1.\[VeryThinSpace]+1.99922*^-11 \[ImaginaryI]
    Out[13]= 1.\[VeryThinSpace]-1.99922*^-11 \[ImaginaryI]
    For the given value of s we see that Mathematica computes that the function 
    value equals 1 for all practical purposes.
    """
    # Code Python:
    import scipy.special as sc
    import numpy as np
    # Parameters, arguments etc:
    p=2 
    s = -4.559190954155 + 51.659216953928*1j
    # Evaluation:
    result = sc.hyp1f1(1/p, 1/p + 1, -s) 
    tol = 1e-6
    msg = f'The above  output of {result} from scipy is far from 1, i.e. in large disagreement with Mathematica'
    assert abs(result - 1) in 
         40 tol = 1e-6
         41 msg = f'The above  output of {result} from scipy is far from 1, i.e. in large disagreement with Mathematica'
    ---> 42 assert abs(result - 1)<tol, msg
         43 
         44 # print(f'sc.hyp1f1(1/p, 1/p + 1, -s) = {result}')
    AssertionError: The above  output of (0.833788272795157+0.18152681828629416j) from scipy is far from 1, i.e. in large disagreement with Mathematica
### SciPy/NumPy/Python version information
import sys, scipy, numpy; print(scipy. **version** , numpy. **version** ,
sys.version_info)