### Cross-Network Boundaries and Security Considerations

In many instances, we observe that there is often little to no internal network encryption, which significantly differentiates this scenario from the one described in [11]. The standard allows for other channels to be implemented by session-bound local instances, thereby preventing the attack outlined in [11]. However, the AUSF ↔ ARPF channel could be implemented using a long-running connection that does not provide similar binding. As we will demonstrate later, there is a potential attack based on underspecified assumptions regarding the AUSF ↔ ARPF channel. This attack would not be mitigated by following the recommendations from [11] because their work did not model the AUSF ↔ ARPF channel.

### Modelling Limitations

1. **5G-AKA Counter 'Resync' Mode**: We do not model the counter 'resync' mode of 5G-AKA, which is addressed by Basin et al. in [11].
2. **Key Hierarchy Derivation**: We do not consider the subsequent derivation of keys within the key hierarchy after 5G-AKA has completed.
3. **Network Layers**: We do not differentiate between the User Plane, Control Plane, Radio Resource Control, Access Stratum, and Non-Access Stratum, except where these distinctions impact the 5G-AKA protocol's behavior.
4. **EAP-AKA' Protocol**: We do not model the EAP-AKA' protocol (described in [5, §6.1.3.1] and RFC 5448 [10]) as it and the closely related EAP-AKA protocol have been extensively studied elsewhere [8], [14], [22]. Integrating a model of EAP-AKA' into our 5G-AKA models would be valuable future work, as analyzing their composition would be both useful and non-trivial, given that EAP-AKA' also uses the same long-term key K.

### Formalisation of Security Properties

Having modeled 5G-AKA in TAMARIN’s multiset rewriting rules, we now formalize the desired security properties as (temporal) first-order logic formulae. These formulae are then evaluated over runs of the protocol generated by the model.

#### Informal Security Properties

As detailed in Section IV and referenced in Figures 5 and 7, TS 33.501 requires the informally described security properties S1, S2, A1–A7. These lead us to believe that 5G-AKA should uphold the more traditionally defined properties of session key secrecy (which here implies long-term key secrecy), non-injective agreement on the parties involved, and injective agreement on the session key, KSEAF.

#### Secrecy Properties

We consider both session key secrecy (of KSEAF and KAUSF) and long-term key secrecy (of K) for 5G-AKA.

- **Session Key Secrecy Lemmas**: These lemmas state that for all traces where there was no long-term key reveal action by the adversary for the UE/SUPI in question, the adversary never learns or derives the resultant session key, KSEAF (or in the case of the ARPF, KAUSF). As defined in TS 33.501 Annex A.6, KSEAF = KDFA(KAUSF, SNID); this is calculated at the AUSF. If the adversary possesses KAUSF, they can derive KSEAF, but not vice versa. The ARPF can derive KSEAF, but from the ARPF's perspective, we consider the secrecy of KAUSF to pinpoint any compromise precisely: adversarial knowledge of KAUSF implies knowledge of KSEAF, but the reverse is not true.

- **Session Key Secrecy Example**:
  ```lemma
  lemma secrecy_UE:
  "All UE t #i. Secret(, t) @ #i
  & not(Ex SUPI HN #r. RevealKforSUPI(SUPI) @ #r
  & Honest() @ #i )
  ==> not (Ex #j. K(t) @ #j )"
  ```
  Intuitively, for all traces such that a Secret action fact occurs at the UE at time point #i for term t (the session key), and there is no adversary key-reveal action for the same SUPI as in use at point #i, then there does not exist a time point #j such that the adversary learns or can derive that same term t. We discuss the use of the ‘RevealKforSUPI(...)’ action fact in more depth in Section VII. We consider session key secrecy properties of this form for all four of the protocol’s parties.

- **Long-Term Key Secrecy Lemma**:
  ```lemma
  lemma secrecy_Ki:
  "All SUPI Ki #i. LongTermKey(SUPI,Ki) @ #i
  & not(Ex #r. RevealKforSUPI(SUPI) @ #r)
  ==> not (Ex #j. K(Ki) @ #j)"
  ```
  This lemma states that for all long-term keys (each bound to a specific SUPI), where that key Ki (= K) was not revealed directly by the adversary, there is no time point such that the adversary learns the long-term key. We believe these lemmas model the informal properties S1 and S2. Full results for session key secrecy and long-term key secrecy are provided in Section VIII.

#### Authentication Properties

Given that 5G-AKA involves four parties (each with different roles), it is insufficient to consider only traditional two-party authentication properties defined between the components in possession of the long-term secret key, i.e., the UE and ARPF. The authentication properties described below systematically cover the range of pairwise authentication properties that we believe the 5G-AKA protocol could be expected to provide.

- **Serving and Home Networks**: For properties in the serving and home networks, we do not expect 5G-AKA to create confidentiality, integrity, or authentication guarantees between 5G core network parties. The standard describes properties that must be guaranteed by the underlying network connections, and we explore this further in Sections III-A and VII-B.

- **Action Facts**: To analyze authentication properties, we place Action Facts within protocol rules. We consider pairwise agreement properties from the points of view of each of the UE, serving network, and home network ('Commit' Action Facts). These properties are then considered in relation to each one of the four parties (UE, SEAF, AUSF, and ARPF), who generate the relevant 'Running' Action Facts.

- **ARPF Role**: We do not consider agreement properties from the point of view of the ARPF alone because: 
  - The ARPF's role is to initiate the cryptographic section of the protocol (generating RAND, AUTN, XRES*, and KAUSF).
  - None of the messages before the Auth-Info Request message involve any keys, randomness, state, or other cryptographic elements.
  - No messages are returned to the ARPF.

- **Combining Pairwise Properties**: We can combine the results from these pairwise properties (agreeing on single terms) together to achieve the more traditional properties of, for example, non-injective or injective agreement over the identities involved in the protocol run and a term such as the session key, as described in [20]. Performing the analysis systematically helps us to pinpoint precisely which terms (if any) cause any violations of agreement.

- **Example Lemma**:
  ```lemma
  lemma agreement_UE_SEAF_ARPF:
  "All a b c d t #i.
  (Commit(a,,t,) @ #i
  & not(Ex #r.
  RevealKforSUPI(a)@r & Honest()@ #i))
  ==>(Ex a2 b2 c2 t2 #j .
  Running(b2,,t2, ) @ #j )"
  ```
  This lemma models agreement from the UE’s point of view with a SEAF on the identity of the ARPF. In more detail, it states: For all traces such that there was a 'Commit(...)' Action Fact at the UE, where the UE believes the parties involved in the protocol are a, b, c, and d (instantiating as the unique IDs of the UE, SEAF, AUSF, and ARPF respectively), and the UE believes that the session key KSEAF is term t, and there was no adversary key reveal against the UE’s long-term key K, then there must exist at least one 'Running(...)' Action Fact from a SEAF which agrees with the UE on the identity of the ARPF.

- **Injective Agreement**: Achieving injective agreement requires agreement on the same terms (and/or parties) as before, but now also requires that there must be precisely one Commit(...) Action Fact with the specified term. As all of the identities of the parties involved may reasonably be used in repeated protocols, the only terms where we can hope to achieve injectivity are the 'data' terms, e.g., KSEAF and KAUSF.

- **Serving Network (SEAF)**: From the informal authentication properties defined in Section IV, we believe the properties directly concerning the point of view of the serving network are A1–A3, A6, and A7. The serving network shares privileged, authentic, and non-replayable access to the 5G core network through which it can communicate with the home network. Before the protocol run, the SEAF does not share any secrets relevant to the 5G-AKA protocol with any other parties, nor does it generate any randomness or maintain state beyond each run of the protocol.

- **Home Network (AUSF and ARPF)**: From the informal authentication properties defined in Section IV, we believe the properties directly concerning the point of view of the home network are A3–A7. Achieving all of these properties would be similar to achieving the traditional property of injective agreement on the identities of the UE, serving network, and home network, in combination with the term KSEAF, as described in [20].

- **AUSF and ARPF Relationship**: While we separate the components of the home network into the AUSF and ARPF for the sake of modeling the protocol, we consider them to be much more closely related than, for example, the relationship between the AUSF and SEAF. The ARPF receives and sends only one pair of messages, and the contents of the received Auth-Info Request message only indicate that a party wants to start a protocol run; it does not contain any cryptographically generated or signed terms, or any randomness generated by the initiator. As the ARPF does not participate in the protocol after sending the Auth-Info Response message, it cannot know whether the UE responded to its challenge correctly or not. Since the AUSF has sufficient information to determine the correctness of the response from the UE and is part of the home network, we consider the AUSF and ARPF as a pair for the high-level properties regarding authentication.

- **Full Range of Authentication Properties**: We analyze the full range of authentication properties for each party communicating (directly or indirectly) with each other party, and for the terms over which they might meaningfully agree. Full results are provided in Section VIII.

### Formalisation of Threat Model

We now consider how we formalized the threat model described in Section III. As this threat model does not allow the compromise of components apart from other UEs (i.e., no SEAF, AUSF, or ARPF compromise is allowed), we only need to consider adversary key reveal (of other UEs’ long-term keys) and secure channel modeling.

#### Adversary Key Reveal

Distinct from other adversary actions, we include a rule allowing the adversary to compromise the long-term key K of UEs other than the 'honest' UE we consider directly. When the adversary triggers it, this rule outputs a user’s long-term key K to the public network channel, allowing the adversary to learn it. When we specify security properties, we include restrictions on the allowed events within protocol executions, such as when the adversary may perform key reveals. We achieve this by clauses preventing certain actions. To prevent the adversary from revealing an honest actor’s long-term K, we require that there are no events (recorded by 'Action Facts') revealing the key to the adversary. These Action Facts are parameterized by the ID of the party the key is for, so we can allow the compromise of any other long-term Ks, i.e., for other UEs.

#### Secure Channel Modeling

Within our 5G-AKA TAMARIN models, we model the secure channels within the 5G Core Network using the standard secure channel abstraction, as used and described in [12]. This construction replaces TAMARIN’s adversary-controlled Dolev-Yao-style channels with secure channels where desired. This takes the adversary-controlled In(msg) and Out(msg) facts and replaces them with secure channels. These facts are similar to the form SndS(A,B,msg) and RcvS(A,B,msg), sending the term msg from A to B, who are explicitly named parties. We augment the standard construction very simply by including a 'channel name', 'SendType', 'ReceiveType', and associated parameters.