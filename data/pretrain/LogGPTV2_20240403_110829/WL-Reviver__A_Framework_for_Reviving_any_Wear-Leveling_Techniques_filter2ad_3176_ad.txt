Name
Description
blackscholes Option pricing
streamcluster Online clustering of
swaptions
mg
fft
ocean
radix
water-
spatial
an input stream
Pricing of a portfo-
lio of swaptions
Multi-Grid on com-
munication
fast
fourier
form
large-scale
movements
integer radix sort
molecular dynam-
ics N-body problem
ocean
trans-
Benchmark
Suite
PARSEC
PARSEC
PARSEC
NPB
Write
CoV
8.88
11.30
13.17
40.87
SPLASH-2
13.87
SPLASH-2
4.15
SPLASH-2
SPLASH-2
5.54
5.44
Table I
SUMMARY OF THE BENCHMARKS.
with a normal distribution and a lifetime CoV of 0.2. The
memory block is 64B, which is also the cacheline size for the
last-level of cache. The OS page size is 4KB. We simulate
a 1GB PCM chip.
B. Impact of Wear Leveling on PCM’s Reliability
WϲͲ^'
WϲͲ^'Ͳt>Z
ϭϬϬϬ
ϴϬϬ
ϲϬϬ
ϰϬϬ
ϮϬϬ
Ϭ
Ϳ
Ɛ
Ŷ
Ž
ŝ
ů
ů
ŝ
ƌ
d
;

Ɛ
Ğ
ƚ
ŝ
ƌ
t

Ĩ
Ž

ƌ
Ğ
ď
ŵ
Ƶ
E
Figure 5. Number of writes required to fail 30% memory blocks of the
PCM when different benchmarks and PCM life-extending schemes are used.
We ﬁrst observe how the wear-leveling scheme (Start-
Gap) responds to variation of the benchmarks’ write CoVs.
In the experiment we choose ECP6, an ECP scheme that
can correct up to six errors in a 512b bit group, as the
base error correction scheme within each bit group. Figure 5
shows how many writes each of the benchmarks has to
issue to fail 30% of memory blocks of the PCM. Here we
assume an entire memory is considered unavailable when it
loses 30% of its space. In this sense this number of writes
represents the PCM’s lifetime. As shown, if only Start-Gap
is used with ECP6 (see the ”ECP6-SG” bars in the ﬁgure)
the PCM’s lifetime is highly related to benchmarks’ write
CoVs. A benchmark with a highly biased write distribution,
such as mg with a CoV of 40.87, causes the ﬁrst block failure
to occur much earlier than that with a more uniform write
distribution, such as ocean with a CoV of 4.15. Without
236236236
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:52 UTC from IEEE Xplore.  Restrictions apply. 
ϭϬϬй
ϵϱй
ϵϬй
ϴϱй
ϴϬй
ϳϱй
ϳϬй
Ɛ
Ŭ
Đ
Ž

ů

ů

Ă
ǀ
ŝ
ǀ
ƌ
Ƶ
^

Ĩ
Ž
Ğ
Ő
Ă
ƚ
Ŷ
Ğ
Đ
ƌ
Ğ
W
Ϭ
ϭϬϬй
ϵϱй
ϵϬй
ϴϱй
ϴϬй
ϳϱй
ϳϬй

Ɛ
Ŭ
Đ
Ž

ů

ů

Ă
ǀ
ŝ
ǀ
ƌ
Ƶ
^

Ĩ
Ž
Ğ
Ő
Ă
ƚ
Ŷ
Ğ
Đ
ƌ
Ğ
W
Wϲ
WϲͲ^'
WϲͲ^'Ͳt>Z
Wz'
Wz'Ͳ^'
W'zͲ^'Ͳt>Z
ϭϬϬ ϮϬϬ ϯϬϬ ϰϬϬ ϱϬϬ ϲϬϬ ϳϬϬ ϴϬϬ ϵϬϬ
dŚĞEƵŵďĞƌŽĨtƌŝƚĞƐ;dƌŝůůŝŽŶƐͿ
;ĂͿ
Ϭ
ϭϬϬ ϮϬϬ ϯϬϬ ϰϬϬ ϱϬϬ ϲϬϬ ϳϬϬ ϴϬϬ ϵϬϬ
EƵŵďĞƌŽĨtƌŝƚĞƐ;dƌŝůůŝŽŶƐͿ
;ďͿ
Figure 6. Percentage of survival memory blocks after certain numbers of
writes from benchmarks (a) ocean and (b) mg under different life-extending
schemes.
WL-Reviver, the ﬁrst failure cripples Start-Gap. Once wear
leveling is suspended, writes of higher CoV apparently can
fail the remaining healthy blocks more quickly, or fewer
writes are needed to make the PCM unavailable. With WL-
Reviver (see the ”ECP6-SG-WLR” bars in the ﬁgure) PCM’s
lifetime is signiﬁcantly improved for all the benchmarks
(from 36% to 325%). In fact, this lifetime shows much
less variation across the benchmarks because it is much
less sensitive to the write distribution when wear leveling
is consistently available. Below we will use ocean and
mg to represent benchmarks with moderately non-uniform
and highly non-uniform write distributions, respectively, to
present our experiment results.
To see when the ﬁrst failure occurs and the failure rate
after the ﬁrst failure, we show percentage of memory blocks
still alive (or block survival rate) after a certain number
of writes from benchmarks ocean and mg in Figures 6
(a) and (b), respectively. The ﬁgures only include results
for a survival rate of 70% or higher as a more severely
faulted PCM is less likely to be usable in practice. In the
comparison,
in addition to ECP6 we include PAYG, an
error correction scheme making efforts on fending off the
ﬁrst block failure by dynamically allocating error-correction
metadata. In the experiments, we adopt a PAYG’s default
setting, in which ECP1 is its local error correction method
237237237
and by average 19.5-bit metadata per bit group is used [18].
This space overhead is less than 1/3 of ECP6’s overhead,
which is 61 bits per bit group.
As shown in the ﬁgures, without wear leveling the ﬁrst
failure appears at very early time for both ECP6 and PAYG
due to PCM cells’ lifetime variation and non-uniform write
distribution. With ECP6 and Start-Gap, survival rate can
be signiﬁcantly improved for ocean, but not for mg (see
”ECP6-SG” curves) because mg’s highly non-uniform write
distribution makes the ﬁrst failure occur pretty early. As
PAYG can effectively postpone the ﬁrst failure’s occurrence,
the survival rate is substantially improved (see ”PAYG-
SG” in Figure 6 (a)). With WL-Reviver, the rate can be
further signiﬁcantly improved. The improvement is much
more signiﬁcant for mg than that for ocean (see ”ECP6-SG-
WLR” and ”PAYG-SG-WLR” in the ﬁgures) as WL-Reviver
makes write distribution much less inﬂuential on PCM’s
lifetime. Meanwhile, the improvement of ECP6-SG-WLR
over ECP6-SG is much larger than that of PAYG-SG-WLR
over PAYG-SG. Note that in the setup PAYG uses only about
1/3 of the metadata used by ECP6 for error protection. With
PAYG’s dynamical metadata allocation and wear leveling,
most of the blocks have been close to depletion of their
metadata at the time when the ﬁrst failure occurs. So the
continued wear-leveling enabled by WL-Reviver does not
substantially further extend the lifetime. But even so, with
highly biased write distribution, such as those with mg and
malicious attacks, including birthday paradox attack [19],
the beneﬁt of WL-Reviver is still substantial.
In general, WL-Reviver not only keeps the survival rate
nearly 100% for a longer time period, but also allows the rate
to drop at a less radical speed to extend a PCM’s lifetime.
C. Comparison to FREE-p on Use of Pre-reserved Space
FREE-p, as designed as a fault-tolerance scheme to
incrementally acquire free slots (equivalent to spaces for
shadow blocks in WL-Reviver) via OS’s support, cannot
work together with a wear-leveling scheme, because the
free slots’ DAs are directly recorded in their respective
failed blocks and data migration by the scheme can lead
to loss of data stored in the slots. We adapt FREE-p by pre-
reserving a certain percentage of PCM space as its remap
region to supply free slots. Because these free slots are not
visible to the software and out of scope of wear-leveling
operations, the adapted FREE-p can work together with
the wear-leveling scheme until pre-reserved slots are used
up. Figure 7 shows the percentage of user-usable space, or
PCM space excluding pre-reserved and failed blocks, with
different amount of pre-reserved space for FREE-p, namely,
0%, 5%, 10%, and 15% of PCM space. As expected, as soon
as FREE-p uses up the pre-reserved space and has to expose
the ﬁrst failure to Start-Gap, the PCM space is quickly
lost because Start-Gap ceases to perform wear leveling.
Interestingly, while smaller pre-reservations, such as the 5%
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:52 UTC from IEEE Xplore.  Restrictions apply. 
ϭϬϬй
ϵϱй
ϵϬй
ϴϱй
ϴϬй
ϳϱй
ϳϬй
ϭϬϬй
ϵϱй
ϵϬй
ϴϱй
ϴϬй
ϳϱй
ϳϬй
Ϭ
Ϭ

ů
Ɛ
Ŭ
Đ
Ž

Ğ
ď
Ă
Ɛ
h
ů


Ĩ
Ž
Ğ
Ő
Ă
ƚ
Ŷ
Ğ
Đ
ƌ
Ğ
W

ů
Ɛ
Ŭ
Đ
Ž

Ğ
ď
Ă
Ɛ
h
ů