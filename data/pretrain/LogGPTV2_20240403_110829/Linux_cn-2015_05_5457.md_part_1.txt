---
author: Aun Raza
category: 技术
comments_data:
- date: '2015-05-18 13:21:34'
  message: "Ubuntu 14.04 自己没有做任何配置，现在好像已经用systemd启动了，有/lib/systemd/systemd-logind之类的进程。\r\n其实我想说，该文可能有点过时了"
  postip: 220.248.213.104
  username: zansy
- date: '2015-05-18 20:49:38'
  message: "确实是的，我也奇怪，这篇文章是说的过去一点的事情了，但是确实英文发布的时间是最近。。汗。\r\n不过这篇文章确实提到了一些别处没怎么讲到的细节，这些比较有价值。\r\n另外，我记得是1504才正式用的systemd ?"
  postip: 123.120.68.28
  username: linux
- date: '2015-05-18 21:51:36'
  message: 14.04貌似是之后通过补丁支持的，14.04目前最新版是14.04.2
  postip: 60.8.44.168
  username: unknow_future
- date: '2016-06-24 08:19:59'
  message: "“我们需要进入坏人的头脑和网络，这就是国家使命组的任务：在坏人的头脑和他的网络里。” ---- 进入德国“人”的基因碱基卐-Base-Pairs的频率密码Enigma里
    。。。。。。\r\nGerman MK-ultra-Genocide (WWⅢ): Attacking human hypothalamus and
    pituitary gland (24h/7d) by means of Electromagnetic Weapons leads to neuroendocrine
    disorder consisting of sterilization. D在德国代表Deutschland(德国)，同战前相似，只是更加隐蔽更加复杂了。德国思想控制(MK-ultra):
    blog.sina.com.cn/germany4"
  postip: 39.162.47.52
  username: 来自河南郑州的 Firefox 47.0|Fedora 用户
- date: '2016-09-17 12:18:37'
  message: 其实感觉这个init进步还是很大的。
  postip: 114.93.68.38
  username: 来自上海的 Firefox 48.0|GNU/Linux 用户
count:
  commentnum: 5
  favtimes: 8
  likes: 0
  sharetimes: 0
  viewnum: 53934
date: '2015-05-17 20:33:00'
editorchoice: false
excerpt: Linux系统的启动方式有点复杂，而且总是有需要优化的地方。传统的Linux系统启动过程主要由著名的init进程（也被称为SysV init启动系统）处理，而基于init的启动系统被认为有效率不足的问题，systemd是Linux系统机器的另一种启动方式，宣称弥补了以传统Linux
  SysV init为基础的系统的缺点。在这里我们将着重讨论systemd的特性和争议，但是为了更好地理解它，也会看一下通过传统的以SysV init为基础的系统的Linux启动过程是什么样的。友情提醒一下，systemd仍然处在测试阶段，而未来发布的Linux操作系统也正准备用systemd启动管理程序替代当
fromurl: http://linoxide.com/linux-how-to/systemd-boot-process/
id: 5457
islctt: true
largepic: /data/attachment/album/201505/17/203724enh95nh9idhkyglc.jpg
permalink: /article-5457-1.html
pic: /data/attachment/album/201505/17/203724enh95nh9idhkyglc.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: Linux系统的启动方式有点复杂，而且总是有需要优化的地方。传统的Linux系统启动过程主要由著名的init进程（也被称为SysV init启动系统）处理，而基于init的启动系统被认为有效率不足的问题，systemd是Linux系统机器的另一种启动方式，宣称弥补了以传统Linux
  SysV init为基础的系统的缺点。在这里我们将着重讨论systemd的特性和争议，但是为了更好地理解它，也会看一下通过传统的以SysV init为基础的系统的Linux启动过程是什么样的。友情提醒一下，systemd仍然处在测试阶段，而未来发布的Linux操作系统也正准备用systemd启动管理程序替代当
tags:
- systemd
thumb: false
title: 走进Linux之systemd启动过程
titlepic: false
translator: zpl1025
updated: '2015-05-17 20:33:00'
---
Linux系统的启动方式有点复杂，而且总是有需要优化的地方。传统的Linux系统启动过程主要由著名的init进程（也被称为SysV init启动系统）处理，而基于init的启动系统被认为有效率不足的问题，systemd是Linux系统机器的另一种启动方式，宣称弥补了以[传统Linux SysV init](http://0pointer.de/blog/projects/self-documented-boot.html)为基础的系统的缺点。在这里我们将着重讨论systemd的特性和争议，但是为了更好地理解它，也会看一下通过传统的以SysV init为基础的系统的Linux启动过程是什么样的。友情提醒一下，systemd仍然处在测试阶段，而未来发布的Linux操作系统也正准备用systemd启动管理程序替代当前的启动过程（LCTT 译注：截止到本文发表，主流的Linux发行版已经有很多采用了 systemd）。
### 理解Linux启动过程
在我们打开Linux电脑的电源后第一个启动的进程就是init。分配给init进程的PID是1。它是系统其他所有进程的父进程。当一台Linux电脑启动后，处理器会先在系统存储中查找BIOS，之后BIOS会检测系统资源然后找到第一个引导设备，通常为硬盘，然后会查找硬盘的主引导记录（MBR），然后加载到内存中并把控制权交给它，以后的启动过程就由MBR控制。
主引导记录会初始化引导程序（Linux上有两个著名的引导程序，GRUB和LILO，80%的Linux系统在用GRUB引导程序），这个时候GRUB或LILO会加载内核模块。内核会马上查找/sbin下的“init”程序并执行它。从这里开始init成为了Linux系统的父进程。init读取的第一个文件是/etc/inittab，通过它init会确定我们Linux操作系统的运行级别。它会从文件/etc/fstab里查找分区表信息然后做相应的挂载。然后init会启动/etc/init.d里指定的默认启动级别的所有服务/脚本。所有服务在这里通过init一个一个被初始化。在这个过程里，init每次只启动一个服务，所有服务/守护进程都在后台执行并由init来管理。
关机过程差不多是相反的过程，首先init停止所有服务，最后阶段会卸载文件系统。
以上提到的启动过程有一些不足的地方。而用一种更好的方式来替代传统init的需求已经存在很长时间了。也产生了许多替代方案。其中比较著名的有Upstart，Epoch，Muda和Systemd。而Systemd获得最多关注并被认为是目前最佳的方案。
### 理解Systemd
开发Systemd的主要目的就是减少系统引导时间和计算开销。Systemd（系统管理守护进程），最开始以GNU GPL协议授权开发，现在已转为使用GNU LGPL协议，它是如今讨论最热烈的引导和服务管理程序。如果你的Linux系统配置为使用Systemd引导程序，它取替传统的SysV init，启动过程将交给systemd处理。Systemd的一个核心功能是它同时支持SysV init的后开机启动脚本。
Systemd引入了并行启动的概念，它会为每个需要启动的守护进程建立一个套接字，这些套接字对于使用它们的进程来说是抽象的，这样它们可以允许不同守护进程之间进行交互。Systemd会创建新进程并为每个进程分配一个控制组（cgroup）。处于不同控制组的进程之间可以通过内核来互相通信。[systemd处理开机启动进程](http://0pointer.de/blog/projects/self-documented-boot.html)的方式非常漂亮，和传统基于init的系统比起来优化了太多。让我们看下Systemd的一些核心功能。
* 和init比起来引导过程简化了很多
* Systemd支持并发引导过程从而可以更快启动
* 通过控制组来追踪进程，而不是PID
* 优化了处理引导过程和服务之间依赖的方式
* 支持系统快照和恢复
* 监控已启动的服务；也支持重启已崩溃服务
* 包含了systemd-login模块用于控制用户登录
* 支持加载和卸载组件
* 低内存使用痕迹以及任务调度能力
* 记录事件的Journald模块和记录系统日志的syslogd模块
Systemd同时也清晰地处理了系统关机过程。它在/usr/lib/systemd/目录下有三个脚本，分别叫systemd-halt.service，systemd-poweroff.service，systemd-reboot.service。这几个脚本会在用户选择关机，重启或待机时执行。在接收到关机事件时，systemd首先卸载所有文件系统并停止所有内存交换设备，断开存储设备，之后停止所有剩下的进程。
![](/data/attachment/album/201505/17/203724enh95nh9idhkyglc.jpg)
### Systemd结构概览
让我们看一下Linux系统在使用systemd作为引导程序时的开机启动过程的结构性细节。为了简单，我们将在下面按步骤列出来这个过程：
**1.** 当你打开电源后电脑所做的第一件事情就是BIOS初始化。BIOS会读取引导设备设定，定位并传递系统控制权给MBR（假设硬盘是第一引导设备）。
**2.** MBR从Grub或LILO引导程序读取相关信息并初始化内核。接下来将由Grub或LILO继续引导系统。如果你在grub配置文件里指定了systemd作为引导管理程序，之后的引导过程将由systemd完成。Systemd使用“target”来处理引导和服务管理过程。这些systemd里的“target”文件被用于分组不同的引导单元以及启动同步进程。
**3.** systemd执行的第一个目标是**default.target**。但实际上default.target是指向**graphical.target**的软链接。Linux里的软链接用起来和Windows下的快捷方式一样。文件Graphical.target的实际位置是/usr/lib/systemd/system/graphical.target。在下面的截图里显示了graphical.target文件的内容。
![](/data/attachment/album/201505/17/203329njlvc2p3c12el22p.png)
**4.** 在这个阶段，会启动**multi-user.target**而这个target将自己的子单元放在目录“/etc/systemd/system/multi-user.target.wants”里。这个target为多用户支持设定系统环境。非root用户会在这个阶段的引导过程中启用。防火墙相关的服务也会在这个阶段启动。
![](/data/attachment/album/201505/17/203329k5cv7y6cl6rsfofz.png)
"multi-user.target"会将控制权交给另一层“**basic.target**”。
![](/data/attachment/album/201505/17/203330e173g84w17qkg3kc.png)
**5.** "basic.target"单元用于启动普通服务特别是图形管理服务。它通过/etc/systemd/system/basic.target.wants目录来决定哪些服务会被启动，basic.target之后将控制权交给**sysinit.target**.
![](/data/attachment/album/201505/17/203330av1cz6zs3us8cyzs.png)
**6.** "sysinit.target"会启动重要的系统服务例如系统挂载，内存交换空间和设备，内核补充选项等等。sysinit.target在启动过程中会传递给**local-fs.target**。这个target单元的内容如下面截图里所展示。
![](/data/attachment/album/201505/17/203331k66nojnty66466na.png)