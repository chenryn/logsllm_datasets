### 招聘启事

#### 1. 狗仔摄影师
- **公司简介**：顶级名人摄影公司现正招聘经验丰富的狗仔摄影师。
- **工作内容**：跟踪并拍摄易怒且假唱的流行歌手。
- **地点**：加州（CA）
- **发布日期**：2008-03-24

#### 2. 鲨鱼训练师
- **公司简介**：新水上乐园正在招募鲨鱼训练师。
- **工作内容**：训练鲨鱼为观众表演可爱的特技。
- **地点**：佛罗里达州（FL）
- **发布日期**：2008-04-28

#### 3. 消防员
- **公司简介**：数据市正在招聘消防员。
- **工作内容**：无需经验，公司将提供培训。不招收吸烟者。
- **地点**：俄亥俄州（OH）
- **发布日期**：2008-05-22

#### 4. 电压检测员
- **公司简介**：电力公司在招聘现场电压检测员。
- **工作内容**：在野外检查交流和直流电压，范围从3伏到250伏及以上。
- **地点**：北卡罗来纳州（NC）
- **发布日期**：2008-06-28

---

Ernesto已经找到了最理想的高风险职位。请不要忘记，RiskyJobs应用的完整源代码可以从HeadFirstLabs网站下载：[www.headfirstlabs.com/books/hfphp](http://www.headfirstlabs.com/books/hfphp)

你现在的位置: 559

---

## Page 596

### PHP & MySQL工具箱

RiskyJobsSearch脚本需要一些新的PHP和MySQL技术。以下是一些关键技术的回顾：

- **substr()**: 这个PHP函数根据提供的参数提取字符串的一部分。可以抽取字符串的开始部分、结尾部分或中间部分。
- **LIKE**: 在SQL查询中使用LIKE查找数据而不需要完全匹配。可以在搜索项前后加“%”，使LIKE知道该搜索项前后可能有其他字符。
- **explode(), implode()**: PHP的explode()函数将一个字符串分解成由公共定界符（如空格或逗号）分隔的子串数组。implode()则相反——它由一个子串数组构建一个字符串，并在各个子串之间插入一个定界符。
- **自定义函数**: 这是一个命名的可重用PHP代码块。其目的是将完成特定任务的代码隔离出来，以减少代码重复并方便重用。
- **str_replace()**: 调用这个PHP函数可以对一个文本字符串完成“查找-替换”操作，将一个字符或字符序列替换为另一个字符或字符序列。
- **switch-case**: PHP的一种决策结构，允许根据一个值执行一组代码之一。如果遇到一组嵌套的if-else语句，将其改写为switch语句可能会更高效。
- **LIMIT**: SQL的LIMIT子句允许精确控制一个查询返回多少行。此外，LIMIT还可以跳过结果集中的某些行来抽取一个结果子集。

---

## Page 597

### 正则表达式

**串函数虽然强大但也有局限性**。它们可以告诉你字符串的长度，截断字符串或将一些字符替换为其他字符。但在处理更复杂的文本时，正则表达式会更有帮助。正则表达式可以根据一组规则而不是单一条件准确地修改字符串。

---

## Page 598

### RiskyJobs收到有问题的数据

RiskyJobs允许用户提交简历。Riskyjobs.biz已经成长壮大，现在允许求职者在一个Web表单中输入他们的简历和联系信息，以便雇主更容易找到他们。然而，输入到表单中的数据不能完全信任。例如，有些求职者没有提供电话号码或电子邮件地址格式错误。

**示例**：
- **姓名**: Four Fingers McGraw
- **电子邮件**: four@gregs-listnet
- **电话**: 555-098
- **期望职位**: 刀具杂耍演员

由于缺少电话号码，我们无法联系到这位刀具杂耍演员。我们需要一种方法来验证这些数据的有效性。

---

## Page 599

### registration.php脚本的问题

以下是registration.php脚本的一些代码，用于显示和处理表单输入的新求职者数据。请指出其中的问题并提出改进意见。

```php
if (empty($first_name)) {
    echo 'You forgot to enter your first name.';
    $output_form = 'yes';
}
if (empty($last_name)) {
    // $last_name is blank
    $output_form = 'yes';
}
if (empty($email)) {
    // $email is blank
    echo 'You forgot to enter your email address.';
    $output_form = 'yes';
}
if (empty($phone)) {
    // $phone is blank
    echo 'You forgot to enter your phone number.';
    $output_form = 'yes';
} else {
    $output_form = 'yes';
}
if ($output_form == 'yes') {
    ?>
    <!-- 显示表单 -->
    <?php
}
```

**问题**：
- 仅检查了字段是否为空，未验证电子邮件和电话号码的格式。
- 未验证其他字段（如期望职位和简历）是否非空。

**改进**：
- 使用正则表达式验证电子邮件和电话号码的格式。
- 确保所有必填字段都已填写。

---

## Page 600

### 练习答案

以下是registration.php脚本的一些代码，用于显示和处理表单输入的新求职者数据。请指出其中的问题并提出改进意见。

```php
if (empty($first_name)) {
    echo 'You forgot to enter your first name.';
    $output_form = 'yes';
}
if (empty($last_name)) {
    // $last_name is blank
    $output_form = 'yes';
}
if (empty($email)) {
    // $email is blank
    echo 'You forgot to enter your email address.';
    $output_form = 'yes';
}
if (empty($phone)) {
    // $phone is blank
    echo 'You forgot to enter your phone number.';
    $output_form = 'yes';
} else {
    $output_form = 'yes';
}
if ($output_form == 'yes') {
    ?>
    <!-- 显示表单 -->
    <?php
}
```

**问题**：
- 仅检查了字段是否为空，未验证电子邮件和电话号码的格式。
- 未验证其他字段（如期望职位和简历）是否非空。

**改进**：
- 使用正则表达式验证电子邮件和电话号码的格式。
- 确保所有必填字段都已填写。

---

## Page 601

### 为什么不能使用字符串函数修正数据？

虽然字符串函数可以修正一些数据，但对于特定格式的数据，它们并没有太大帮助。例如，对于电子邮件地址和电话号码，我们需要确保它们符合特定模式。这需要使用正则表达式来验证。

---

## Page 602

### 定义数据的样式

**电话号码的规则**：
- 只包含数字。
- 必须是10位数字。
- 可以包含括号、连字符和点号作为分隔符。

**示例**：
- 5556364652
- (555)636-4652
- 555.636.4652

通过定义这些规则，我们可以编写正则表达式来验证电话号码的有效性。

---

希望这些优化后的文本能够更加清晰、连贯和专业。如果有任何进一步的修改需求，请告诉我！