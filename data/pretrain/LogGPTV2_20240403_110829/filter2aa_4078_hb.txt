### 第21章 恶意代码与应用攻击

#### 21.3.4 权限提升和 Rootkit

一旦攻击者在系统中站稳脚跟，他们通常会迅速将访问权限从普通用户账户扩展到更全面的管理权限。这种攻击称为权限提升攻击。

**Rootkit 攻击**

- **定义**: Rootkit 是一种可以从互联网上免费获取的工具，能够利用各种操作系统已知漏洞。
- **攻击过程**: 攻击者通过密码攻击或社会工程学手段获取标准系统用户账号后，使用 rootkit 将其访问权限提升至管理员级别。
- **预防措施**: 系统管理员应密切关注针对其环境所使用的操作系统的补丁发布，并始终及时应用这些更新。这是防止大多数 rootkit 攻击和其他潜在漏洞的一种简单有效的方法。

#### 21.4 Web 应用的安全性

Web 应用程序极大地便利了日常生活中的许多事务处理，如在线购票、邮件查看及账单支付等。然而，随着这些便利而来的是一系列新的安全威胁。接下来我们将讨论两种常见的 Web 应用攻击类型：跨站脚本（XSS）攻击和 SQL 注入攻击。

##### 21.4.1 跨站脚本 (XSS) 攻击

当 Web 应用程序未能正确验证用户输入时，就可能遭受 XSS 攻击。例如，一个简单的用户名输入框如果直接反射回给用户而不进行适当过滤，恶意用户可以注入 JavaScript 代码来欺骗其他用户执行非预期的操作。

- **防御方法**:
  - **输入验证**: 不允许在可反射字段中输入 HTML 标签。
  - **模式匹配**: 明确定义允许的输入格式并严格验证实际输入是否符合该格式。
  - **更多详细信息** 可参考 [OWASP XSS 过滤器规避指南](https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet)。

##### 21.4.2 SQL 注入攻击

SQL 注入是一种针对数据库驱动网站的常见攻击形式，攻击者通过向应用程序发送恶意 SQL 语句以获得对数据库的未授权访问。

- **动态 Web 应用程序背景**: 随着 Web 技术的发展，静态页面逐渐被能够根据用户需求生成内容的动态应用程序取代。这要求服务器端软件能即时处理请求并返回个性化结果。
- **攻击原理**: 如果 Web 应用程序没有充分验证用户提交的数据，攻击者可以通过构造特定输入使服务器执行任意 SQL 命令。
- **防御策略**:
  - **输入验证**: 限制可接受的字符集，特别是移除可能导致命令终止或分隔符失效的符号。
  - **最小权限原则**: 为连接数据库的应用程序配置具有最少必要权限的账户。
  - **使用存储过程**: 通过预编译 SQL 语句减少注入风险。

通过实施上述安全措施，可以显著提高 Web 应用程序的安全性，降低被成功攻击的风险。