**Migrated Issue, Originally Created by Wichert Akkerman (@wichert)**

After upgrading from version 0.9.4 to 0.9.5 or 0.9.6, I am encountering an error in my tests. The error occurs in the `factory` function at line 51 of `src/lets_lynk/factory.py` and is related to a `TypeError` in the SQLAlchemy library.

### Error Details

```python
Traceback (most recent call last):
  File "src/lets_lynk/factory.py", line 51, in factory
    return query.first()
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/query.py", line 2334, in first
    ret = list(self[0:1])
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/query.py", line 2201, in __getitem__
    return list(res)
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/query.py", line 2404, in __iter__
    self.session._autoflush()
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/session.py", line 1188, in _autoflush
    self.flush()
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/session.py", line 1907, in flush
    self._flush(objects)
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/session.py", line 2025, in _flush
    transaction.rollback(_capture_exception=True)
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/util/langhelpers.py", line 57, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/session.py", line 1989, in _flush
    flush_context.execute()
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/unitofwork.py", line 350, in execute
    postsort_actions = self._generate_actions()
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/unitofwork.py", line 324, in _generate_actions
    for rec in cycles
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/unitofwork.py", line 324, in <genexpr>
    for rec in cycles
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/unitofwork.py", line 541, in per_state_flush_actions
    dep.per_state_flush_actions(uow, states_for_prop, False)
  File "/../../Library/buildout/eggs/SQLAlchemy-0.9.5-py2.7-macosx-10.9-x86_64.egg/sqlalchemy/orm/dependency.py", line 166, in per_state_flush_actions
    else attributes.PASSIVE_NO_INITIALIZE)
TypeError: get_all_pending() takes exactly 3 arguments (4 given)
```

### Summary

The error indicates that the `get_all_pending` method in the SQLAlchemy library is being called with an incorrect number of arguments. This issue appears to be introduced in versions 0.9.5 and 0.9.6, as it was not present in version 0.9.4.

### Steps to Reproduce

1. Upgrade SQLAlchemy from 0.9.4 to 0.9.5 or 0.9.6.
2. Run the affected tests.

### Expected Behavior

The tests should pass without any errors.

### Actual Behavior

A `TypeError` is raised, indicating that `get_all_pending` is being called with 4 arguments instead of the expected 3.

### Environment

- **Python Version:** 2.7
- **SQLAlchemy Version:** 0.9.5 or 0.9.6
- **Operating System:** macOS 10.9

Please let me know if you need any additional information or if there are any steps I can take to help resolve this issue.