title:Anonymous Identification for Ad Hoc Group
author:Xingye Lu and
Man Ho Au
Anonymous Identiﬂcation in Ad Hoc Groups
Yevgeniy Dodis1, Aggelos Kiayias2, Antonio Nicolosi1, and Victor Shoup1
1 Courant Institute of Mathematical Sciences, New York University, NY, USA
2 Department of Computer Science and Eng., University of Connecticut, CT, USA
{dodis,nicolosi,shoup}@cs.nyu.edu
PI:EMAIL
Abstract. We introduce Ad hoc Anonymous Identiﬂcation schemes, a
new multi-user cryptographic primitive that allows participants from
a user population to form ad-hoc groups, and then prove membership
anonymously in such groups. Our schemes are based on the notion of
accumulator with one-way domain, a natural extension of cryptographic
accumulators we introduce in this work. We provide a formal model
for Ad hoc Anonymous Identiﬂcation schemes and design secure such
schemes both generically (based on any accumulator with one-way do-
main) and for a speciﬂc e–cient implementation of such an accumulator
based on the Strong RSA Assumption. A salient feature of our approach
is that all the identiﬂcation protocols take time independent of the size of
the ad-hoc group. All our schemes and notions can be generally and ef-
ﬂciently amended so that they allow the recovery of the signer’s identity
by an authority, if the latter is desired.
Using the Fiat-Shamir transform, we also obtain constant-size, signer-
ambiguous group and ring signatures (provably secure in the Random
Oracle Model). For ring signatures, this is the ﬂrst such constant-size
scheme, as all the previous proposals had signature size proportional to
the size of the ring. For group signatures, we obtain schemes comparable
in performance with state-of-the-art schemes, with the additional feature
that the role of the group manager during key registration is extremely
simple and essentially passive: all it does is accept the public key of the
new member (and update the constant-size public key of the group).
1
Introduction
Anonymous identiﬂcation is an oxymoron with many useful applications. Con-
sider the setting, for a known user population and a known set of resources,
where a user wants to gain access to a certain resource. In many cases, accessing
the resource is an action that does not mandate positive identiﬂcation of the
user. Instead, it would be su–cient for the user to prove that he belongs to the
subset of the population that is supposed to have access to the resource. This
would allow the user to lawfully access the resource while protect his real identity
and thus \anonymously identify" himself.
Given the close relationships between identiﬂcation schemes and digital sig-
natures, one can easily extend the above reasoning to settings where a user
produces a signature that is \signer-ambiguous" i.e., such that the veriﬂer is
not capable of distinguishing the actual signer among a subgroup of potential
signers. In fact, it was in the digital signature setting that such an anonymous
scheme was presented for the ﬂrst time, with the introduction of the group signa-
ture model [19], which additionally mandates the presence of a designated party
able to reveal the identity of the signer, were the need to arise.
Subsequent work on group signatures and on anonymous identiﬂcation in
general [20, 24, 13, 18, 16, 23, 3, 1, 11, 14, 6, 2] allowed for more e–cient designs
and formal modelling of the primitive, with the current state of the art being
the scheme by Ateniese et al. [1]. In general, existing group signature schemes
are derived from their interactive counterpart (ID Escrow schemes [32]) via the
Fiat-Shamir transform [28].
A related notion, but of slightly diﬁerent nature, is that of ring signatures,
introduced by Rivest, Shamir and Tauman in [34] and further studied in [12, 33].
Ring signatures diﬁer from group signatures in that they allow group formation
to happen in an ad-hoc fashion: group must be formed without the help of a
group manager; in fact, a user might not even know that he has been included
in a certain group. This is in sharp contrast to the group signature setting where
the user must execute a Join protocol with the group manager and obtain a
group-membership certiﬂcate that cannot be constructed without the help of
the group manager. Note that ad-hoc group formation in the context of ring
signatures is always understood within the context of a user population and an
associated PKI. Based on the PKI, ad-hoc subsets of the user population can be
formed without the help of a \subset manager"|but it is assumed that every
user has a registered public key.
While ring signatures are attractive because they have simple group for-
mation procedures that can be executed by any user individually, they have
the shortcoming that the length of the signature is proportional to the group
size. For large groups, the length of a ring signature (growing linearly with the
group size) will become impractical. To the contrary, schemes with constant-size
signatures have been successfully designed in the group signature setting [1].
We remark that in the setting of anonymous identiﬂcation, the counterpart of
\signature size" is the bandwidth consumed by the protocol, which is thus an
important complexity measure to minimize.
Based on the above discussion, an important open question in the context of
anonymous identiﬂcation and signature schemes, recently posed by Naor in [33],
is the following:
Is it possible to design secure anonymous identiﬂcation schemes that
enable ad-hoc group formation in the sense of ring signatures and at the
same time possess constant-size signature (or proof) length?
Our contribution. In this work we provide an a–rmative answer to the above
question. Speciﬂcally, we introduce a new primitive called Ad hoc Anonymous
Identiﬂcation schemes; this is a family of schemes where participants from a
user population can form groups in ad-hoc fashion (without the help of a group
manager) and then get anonymously identiﬂed as members of such groups.
Our main tool
in the construction of Ad hoc Anonymous Identiﬂcation
schemes is a new cryptographic primitive, accumulator with one-way domain,
which extends the notion of a collision-resistant accumulator [7, 4, 15]. In simple
terms, in an accumulator with one-way domain, the set of values that can be ac-
cumulated are associated with a \witness space" such that it is computationally
intractable to ﬂnd witnesses for random values in the accumulator’s domain.
First, we demonstrate the relationship between such accumulators and Ad hoc
Anonymous Identiﬂcation schemes by presenting a generic construction based on
any accumulator with one-way domain. Second, we design an e–cient implemen-
tation of accumulator with a one-way domain based on the Strong RSA Assump-
tion, from which we obtain a more e–cient construction of Ad hoc Anonymous
Identiﬂcation scheme whose security rests upon the Strong RSA Assumption.
We remark that previous work on anonymous identiﬂcation that allowed
subset queries was done by Boneh and Franklin [8]. They deﬂne a more limited
security model, and show a protocol which imposes on both parties a computa-
tional load proportional to the subset size at each run. Moreover, their scheme
is susceptible to collusion attacks (both against the soundness and against the
anonymity of the scheme) that do not apply to our setting.
In our Strong-RSA-based Ad hoc Anonymous Identiﬂcation scheme, the com-
putational and communication complexity on both ends is constant in the size
of the group. Thus, the signature version of our ad-hoc anonymous identiﬂca-
tion scheme yields a ring signature with constant size signatures (over a dedi-
cated PKI). Other applications of our scheme include \ad-hoc" group signatures
(group signature schemes where the group manager can be o†ine during the
group formation) and identity escrow over ad-hoc groups.
Recently, work by Tsudik and Xu [35], building on the work by Camenisch
and Lysyanskaya [15], investigated techniques to obtain more (cid:176)exible dynamic
accumulators, on which to base group signature schemes (which is one of our
applications). The speciﬂc method used by [35] bears many similarities with our
Strong-RSA-based instantiation, with some important diﬁerences. Namely, in
their solution anonymity revocation takes time proportional to the user popu-
lation, due to subtle problems concerning the accumulation of composite values
inside the accumulator. Our work resolves this technical problem. Moreover, we
present a new notion of Ad hoc Anonymous Identiﬂcation scheme, which has
more applications than those speciﬂc to group signature schemes: for example,
they allow us to build the ﬂrst constant-size ring signature schemes. We present
a general construction for our primitives from any accumulator and not just the
one of [15]. Last, our formal deﬂnitional framework is of independent interest.
2 Preliminaries
2.1 NP-Relations and §-Protocols
Throughout the paper, we assume familiarity with the GMR notation [30].
An NP-relation R is a relation over bitstrings for which there is an e–cient
algorithm to decide whether (x; w) 2 R in time polynomial in the length of x.
:
= fx j (9w)[(x; w) 2 R]g
The NP-language LR associated to R is deﬂned as LR
A §-protocol [22, 21] for an NP-relation R is an e–cient 3-round two-party
protocol, such that for every input (x; w) to P and x to V , the ﬂrst P -round yields
a commitment message, the subsequent V -round replies with a random challenge
message, and the last P -round concludes by sending a response message. At
the end of a run, V outputs a 0=1 value, functionally dependent on x and the
transcript … only. Additionally, a §-protocol satisﬂes Special Soundness, meaning
that for any (x; w) 62 R and any commitment message, there is at most one pair
of challenge/response messages for which V would output 1; and Special Honest-
Veriﬂer Zero-Knowledge, meaning that there is an e–cient algorithm (called a
Simulator ) that on input x 2 LR and any challenge message, outputs a pair of
commitment/response messages for which V would output 1.
The main result we will need about §-protocols is the following:
Theorem 1 ([29, 27]). A §-protocol for any NP-relation can be e–ciently
constructed if one-way functions exist.
2.2 Accumulators
An accumulator family is a pair (fF‚g‚2N; fX‚g‚2N), where fF‚g‚2N is a se-
quence of families of functions such that each f 2 F‚ is deﬂned as f : Uf £X ext
f !
Uf for some X ext
f ¶ X‚ and additionally the following properties are satisﬂed:
{ (e–cient generation) There exists an e–cient algorithm G that on input a
security parameter 1‚ outputs a random element f of F‚, possibly together
with some auxiliary information af .
{ (e–cient evaluation) Any f 2 F‚ is computable in time polynomial in ‚.
{ (quasi-commutativity) For all ‚ 2 N, f 2 F‚, u 2 Uf , x1; x2 2 X‚,
f (f (u; x1); x2) = f (f (u; x2); x1)
We will refer to fX‚g‚2N as the value domain of the accumulator. For any
‚ 2 N; f 2 F‚ and X = fx1; : : : ; xsg ‰ X‚, we will refer to f (: : : f (u; x1) : : : ; xs)
as the accumulated value of the set X over u: due to quasi-commutativity, such
value is independent of the order of the xi’s and will be denoted by f (u; X).
Deﬂnition 1. An accumulator is said to be collision resistant if for any ‚ 2 N
and any adversary A:
P r[f
R
ˆ F‚; u
R
ˆ Uf ; (x; w; X)
R
ˆ A(f; Uf ; u)
j
(X (cid:181) X‚) ^ (w 2 Uf ) ^ (x 2 X ext
f n X) ^ (f (w; x) = f (u; X))] = ”(‚)
For ‚ 2 N and f 2 F‚, we say that w 2 Uf is a witness for the fact that
x 2 X‚ has been accumulated within v 2 Uf (or simply that w is a witness for x
in v) whenever f (w; x) = v. We extend the notion of witness for a set of values
X = fx1; : : : ; xsg in a straightforward manner.
Accumulators with One-Way Domain. An accumulator with one-way do-
main is a quadruple (fF‚g‚2N; fX‚g‚2N; fZ‚g‚2N; fR‚g‚2N), such that the pair
(fF‚g‚2N; fX‚g‚2N) is a collision-resistant accumulator, and each R‚ is a rela-
tion over X‚ £ Z‚ with the following properties:
{ (e–cient veriﬂcation) There exists an e–cient algorithm D that on input
(x; z) 2 X‚ £ Z‚, returns 1 if and only if (x; z) 2 R‚.
{ (e–cient sampling) There exists a probabilistic algorithm W that on input
1‚ returns a pair (x; z) 2 X‚ £ Z‚ such that (x; z) 2 R‚. We refer to z as a
pre-image of x.
{ (one-wayness) It is computationally hard to compute any pre-image z 0 of an
x that was sampled with W . Formally, for any adversary A:
P r[(x; z) Rˆ W (1‚); z0 Rˆ A(1‚; x) j (x; z0) 2 R‚] = ”(‚)
2.3 The Strong RSA Assumption
We brie(cid:176)y review some deﬂnitions [7, 4] regarding the computational assumption
underlying our e–cient construction in Section 5.
A number n is an RSA integer if n = pq for distinct primes p and q such that
jpj = jqj. For ‚ 2 N, let RSA‚ be the set of RSA integers of size ‚. A number p
is a safe prime if p = 2p0 + 1 and both p and p0 are odd primes. A number n is
a rigid integer if n = pq for distinct safe primes p and q such that jpj = jqj. For
‚ 2 N, let Rig‚ be the set of ‚-bit rigid integers.
Deﬂnition 2 (Strong RSA Assumption, [4]).
For any integer ‚ and for any adversary A:
R
P r[n
ˆ Rig‚; z
· z(n)¢]  1¢ ^ ¡(x0)y0
R
ˆ Z⁄
n; (x0; y0)
R
3 Ad hoc Anonymous Identiﬂcation scheme
3.1 Syntax
An Ad hoc Anonymous Identiﬂcation scheme is a six-tuple of e–cient algorithms
(Setup, Register, Make-GPK, Make-GSK, Anon-IDP, Anon-IDV), where:
{ Setup initializes the state of the system: on input a security parameter 1‚,
Setup creates a public database DB (that will be used to store information
about the users’ public keys), and then generates the system’s parameters
param; its output implicitly deﬂnes a domain of possible global parameters.
{ Register, the registration algorithm, allows users to initially register with the
system. On input the system’s parameters param and the identity of the
new user u (from a suitable universe of users’ identity U), Register returns
a secret key/public key pair (sk; pk). To complete the subscription process,
the user then sends his public key to a bulletin board for inclusion in a public
database DB.
The Register algorithm implicitly deﬂnes a domain SK of possible user secret
keys and a domain PK of possible user public keys; its output induces a
relation over user secret key/public key pairs, that we will denote by ›. We
also require a superset PK0 ¶ PK to be speciﬂed, such that membership to
PK0 can be tested in polynomial time.
{ Make-GPK, the group public key construction algorithm, is a deterministic
algorithm used to combine a set of user public keys S into a single group
public key gpkS, suitable for use in the Anon-ID protocol described below.
Syntactically, Make-GPK takes as input param and a set S (cid:181) PK0; its output
implicitly deﬂnes a domain GPK of possible group public keys. We also