# MySQL性能监控与诊断
作者：苏普@Taobao DBA

## 目录
- 监控系统架构
  - 群组和Dashboard
- 监控架构概述
- 其他辅助工具
- MySQL监控告警架构
- 常见故障排查方法

## 监控系统架构
### 监控组件介绍
- **DB With Agent**：数据库代理，用于收集数据并发送至服务器。
- **北斗展现**：提供图形化展示界面。
- **数据Server**：存储从各个代理收集来的数据。
- **数据分析**：对收集到的数据进行处理分析。
- **数据报表**：生成基于分析结果的报告。

### Dashboard设计
- **天机 ==> Dashboard**：通过天机平台访问Dashboard。
- **性能指标趋势图**：在Dashboard中查看性能指标的趋势变化。
- **Top SQL查询**：Dashboard上显示执行时间最长或最频繁的SQL语句。
- **群组KPI趋势**：监控特定群组的关键性能指标(KPI)的变化情况。
- **实时趋势**：展示当前时刻各项指标的状态。
- **告警管理**：查看已发送的告警信息及设置主机级别的告警阈值。

## 告警机制
- **合并告警**：将多次触发相同条件的告警合并为一条。
- **确认发送**：确保重要告警能够被及时注意到。

## 故障排查技巧
### 慢日志分析
使用`mk-query-digest`工具来解析慢查询日志：
```bash
mk-query-digest --type=slowlog \
--since="2011-11-02 15:14:00" \
--until="2011-11-02 15:16:25" \
--filter '($event->{host} || $event->{ip} || "") =~ m/192.168.0.1/' slow.log | more
```

### 内部调试
- **GDB**：用于获取MySQL进程的堆栈跟踪。
  ```bash
  sudo sh -c 'gdb -ex "set pagination 0" -ex "thread apply all bt" --batch -p $(pidof mysqld) > bt.log'
  ```
- **tcpdump**：捕获网络流量以识别客户端或服务器端瓶颈。
  ```bash
  nohup tcpdump -n -nn -tttt -i bond0 -s 65535 'port 3306' -w tcpdump.ret -C 100 &
  ```
- **oprofile**：性能分析工具，帮助定位CPU密集型任务。
  ```bash
  sudo yum install binutils-devel
  ./configure --with-kernel-support && make
  make install
  sudo opcontrol --deinit
  sudo modprobe oprofile timer=1
  dmesg|grep oprofile|tail -n 1
  sudo opcontrol --reset
  sudo opcontrol --separate=lib --no-vmlinux --start --image=/opt/mysql/bin/mysqld
  sudo opcontrol --dump
  sudo opcontrol --shutdown
  opreport -l /opt/mysql/bin/mysqld
  ```

## 数据查询工具
- **WebSQLPlus**：支持分库分表查询。
- **云梯（Hive）**：大数据量下的统计查询示例：
  ```sql
  SELECT count(1)
  FROM s_xxx
  WHERE user_id = 452751208 AND pt = 20111226000000;
  ```

希望以上内容能帮助您更好地理解和使用MySQL性能监控与故障诊断技术。如有任何疑问，请随时提问。