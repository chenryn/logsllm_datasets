### 4.4 Case Studies

#### Sparse Traffic
Several IoT devices, such as the Orvibo plug and TP-Link plug, generate low traffic volumes. Consequently, their packets can be overwhelmed by those from other devices in the same traffic window. For instance, the Orvibo plug generates a three-TCP-packet sequence multiple times, with frame lengths of 224, 54, and 240 bytes within two seconds. However, these packet sizes are not unique. Our analysis reveals that other devices also generate packets of the same size, leading to potential confusion for our classification models. Specifically, the 360 camera frequently produces UDP packets of 224 bytes, while the Xiaomi hub and Xiaomi tablet consistently generate TCP packets of 54 bytes at a high rate (15 packets in 0.1 seconds). As a result, the consecutive packets from the Orvibo plug may be interspersed with packets from other devices, leading to incorrect classification, especially in a VPN environment where protocol information is missing. This explains why LSTM-RNN models perform poorly in identifying IoT devices with small traffic volumes in a VPN configuration.

#### Effectiveness of Bidirectional LSTM
Section 4 demonstrates that the bidirectional LSTM model generally outperforms the basic LSTM model. To illustrate this, we manually inspected the traffic from different devices and found that both Echo Dot and Google Home commonly send packets of 66 bytes to the server. However, the server responses differ between the two devices. For Echo Dot, most responses are 1388 bytes, while for Google Home, they are TLS packets of 108 or 105 bytes. A bidirectional LSTM can leverage the later packets (1388-byte or 105-byte) to help classify the earlier packets (66-byte), thereby improving the accuracy of packet classification by incorporating "future" information.

### 5 Discussion and Limitations

#### Packet-Level Identification
Unlike previous work that identifies devices based on network flows or traffic windows, our approach assigns device labels to every packet generated within a period. This packet-level classification allows for more accurate identification of the running status of IoT devices and more prompt acquisition of device information. For example, sparse packets might indicate that the device is in sleep or standby mode, while a dense packet sequence suggests the device is busy. This is particularly critical in scenarios like camera monitoring, where an intruder could infer whether the camera is active and decide the best time to enter. Additionally, combining the predicted labels of all packets in a time window can enhance the overall inference of IoT device behavior.

#### VPN Connections
In our experiments, we used only UDP protocols to establish our VPN connections. We did not test TCP (TLS) connections. The primary reason is that UDP is the default protocol for OpenVPN and is widely adopted by VPN providers due to its lower latency compared to TCP [6]. Using TCP would require modifications to our packet labeling algorithm (Section 3.3), which we plan to address in future work.

#### Behavior Identification
Our focus was on device identification, whereas previous studies have explored user behavior identification [9]. We did not experiment with behavior identification due to the high labeling cost associated with large datasets containing millions of IoT packets. However, we believe our models could be applied to behavior identification if sufficient training samples were available. Future work will explore efficient methods for generating labeled behavioral datasets.

### 6 Conclusion
In this paper, we systematically evaluated the effectiveness of traffic analysis in a smart home environment, even when traffic fusion mechanisms like NAPT and VPN are enabled, and both non-IoT and IoT devices are active. By leveraging the dependencies between packets through DNN models like LSTM-RNN, we demonstrated that high accuracy in device identification is achievable, even in complex network environments.

Our results suggest that the network communications of IoT devices have serious privacy implications, even under encryption and traffic fusion. Further research is needed to better understand and mitigate these privacy issues in smart home networks. To facilitate this research, we will release our data and models.

### References
[References remain unchanged]