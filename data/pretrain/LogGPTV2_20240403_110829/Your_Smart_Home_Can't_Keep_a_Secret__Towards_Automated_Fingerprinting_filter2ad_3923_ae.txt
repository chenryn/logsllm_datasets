4.4 Case Studies
Scarce traffic. Several IoT devices have a low traffic volume, such as
orvibo plug and tplink plug. Therefore, the packets generated
by them may be “overwhelmed” by other devices in the same traffic
window. Take orvibo plug as an example. It has a three-TCP-
packet sequence appearing multiple times. Their frame lengths
are 224, 54, 240 bytes in two seconds correspondingly. But those
Conference’17, July 2017, Washington, DC, USA
Shuaike Dong, Zhou Li, Di Tang, Jiongyi Chen, Menghan Sun, and Kehuan Zhang
numbers are not unique. According to our analysis, packets with
the same sizes are generated by other devices so our classification
models could be confused. In particular, 360 camera produces
UDP packet of 224 bytes very frequently. xiaomi hub and xiaomi
tablet generate TCP packets of 54 bytes consistently at high speed
(15 packets in 0.1 second). As such, the three consecutive packets of
orvibo plug are likely to be separated by those packets from other
devices, leading to wrong classification results, especially in VPN
configuration when protocol information is missing. This could
explain why LSTM-RNN models perform worse in identifying IoT
devices of small traffic volume in VPN environment.
Effectiveness of bidirectional LSTM. Section 4 shows the accu-
racy of bidir LSTM model is better than the basic LSTM model in
most cases. Below we use one example to explain this performance
difference. Through our manual check of traffic from different de-
vices, we find packets of the size 66 bytes are commonly sent to
the server in a sequence by Echo Dot and Google Home. However,
the responses from the server are different between two devices.
For Echo Dot, most of the responses are of a size 1388 bytes while
for Google Home, most of them are TLS packets with the size of
108 bytes and 105 bytes. Compared to a basic LSTM, a bidirectional
LSTM can utilize the later packet (1388-byte or 105-byte) to help
classify the previous packets (66-byte). As such, adding the informa-
tion from “future” could improve the chance of correctly classifying
packets.
5 DISCUSSION AND LIMITATION
Packet-level identification. Different from previous work that
identifies devices based on network flows or traffic windows, we
assign the device label to every packet generated within a period.
The motivation for doing packet-level classification is that the run-
ning status of IoT devices can be more accurately identified and the
device information can be obtained more promptly. For example, if
packets are observed sparsely, the device might be in sleeping or
standby mode. Otherwise, a dense packet sequence indicates the
device is busy running a task. This is critical in some cases like
camera monitoring, if a thief knows when a network camera is
transmitting bulk data, he can infer whether the host is monitoring
the house and decide the best time to sneak into the house. Ad-
ditionally, we can combine the predicted labels of all packets in a
time window to make better inference of IoT devices.
VPN connections. During the experiment, we only establish our
VPN connection using UDP protocols. Another option – TCP(TLS)
is not tested. The main reason is that UDP is the default protocol
adopted by the openVPN service and is the most-widely protocol
used by VPN providers due to its low latency [6] compared with
TCP. VPN using TCP requires modification of our packet labeling
algorithm in Section 3.3 and we decide to leave it as our future
work.
Behavior identification.We focused on device identification dur-
ing evaluation, while previous works also explored user behavior
identification [9]. We did not experiment with behavior identifi-
cation because the labeling cost is high given that we have large
datasets with millions of IoT packets. On the other hand, we believe
our models can be applied to this scenario if we have enough train-
ing samples. We will explore approaches that can generate labeled
behavioral datasets efficiently.
6 CONCLUSION
In this paper, we systematically evaluated the effectiveness of traffic
analysis in a smart home environment, even when traffic fusion
like NAPT and VPN are enabled and non-IoT and IoT devices are
both active. By exploiting the dependency between packets through
DNN models like LSTM-RNN, we show it is possible to achieve high
accuracy in device identification, even under the complex network
environment as described above.
Our result suggests the network communications of IoT devices
do have serious privacy implications, even under encryption and
traffic fusion. We believe more research should be done to better
understand the privacy issues in smart home network and mitigate
such issues. To facilitate the research in this domain, we will release
the data and our models.
REFERENCES
[1] Accessed: March 2019.
Internet Of Things Fore-
casts. https://www.forbes.com/sites/louiscolumbus/2017/12/10/2017-roundup-
of-internet-of-things-forecasts/.
2017 Roundup Of
[2] Accessed: March 2019. AWS IoT Core. https://aws.amazon.com/cn/iot-core/.
[3] Accessed: March 2019. Can a MAC address be traced? https://askleo.com/can_a_
mac_address_be_traced/.
[4] Accessed: March 2019. Digital Ocean Droplets. https://www.digitalocean.com/
[5] Accessed: March 2019. Monkeyrunner. https://developer.android.com/studio/
[6] Accessed: March 2019. OpenVPN over TCP vs. UDP: Which should I choose?
https://www.bestvpn.com/guides/openvpn-tcp-vs-udp-difference-choose/.
[7] Accessed: March 2019.
Raspberry Pi.
https://www.raspberrypi.org/
products/droplets.
test/monkeyrunner.
documentation/.
[8] Accessed: March 2019.
SmartThings Motion Sensor
(2015 model).
https://support.smartthings.com/hc/en-us/articles/205957580-SmartThings-
Motion-Sensor-2015-model-.
[9] Abbas Acar, Hossein Fereidooni, Tigist Abera, Amit Kumar Sikder, Markus Miet-
tinen, Hidayet Aksu, Mauro Conti, Ahmad-Reza Sadeghi, and A. Selcuk Uluagac.
2018. Peek-a-Boo: I see your smart home activities, even encrypted! CoRR
abs/1808.02741 (2018).
[10] Ahmet Aksoy, Sushil J. Louis, and Mehmet Hadi Gunes. 2017. Operating system
fingerprinting via automated network traffic analysis. In 2017 IEEE Congress on
Evolutionary Computation, CEC 2017, Donostia, San Sebastián, Spain, June 5-8,
2017. 2502–2509. https://doi.org/10.1109/CEC.2017.7969609
[11] Noah Apthorpe, Dillon Reisman, and Nick Feamster. 2017. A Smart Home is No
Castle: Privacy Vulnerabilities of Encrypted IoT Traffic. CoRR abs/1705.06805
(2017). arXiv:1705.06805 http://arxiv.org/abs/1705.06805
[12] Noah Apthorpe, Dillon Reisman, Srikanth Sundaresan, Arvind Narayanan, and
Nick Feamster. 2017. Spying on the Smart Home: Privacy Attacks and Defenses
on Encrypted IoT Traffic. CoRR abs/1708.05044 (2017). arXiv:1708.05044 http:
//arxiv.org/abs/1708.05044
[13] George Dean Bissias, Marc Liberatore, David D. Jensen, and Brian Neil Levine.
2005. Privacy Vulnerabilities in Encrypted HTTP Streams. In Privacy Enhancing
Technologies, 5th International Workshop, PET 2005, Cavtat, Croatia, May 30-June
1, 2005, Revised Selected Papers. 1–11. https://doi.org/10.1007/11767831_1
[14] Tomasz Bujlow, Valentín Carela-Español, and Pere Barlet-Ros. 2015. Independent
comparison of popular DPI tools for traffic classification. Computer Networks 76
(2015), 75–89. https://doi.org/10.1016/j.comnet.2014.11.001
[15] Zhitang Chen, Ke He, Jian Li, and Yanhui Geng. 2017. Seq2Img: A sequence-to-
image based approach towards IP traffic classification using convolutional neural
networks. In 2017 IEEE International Conference on Big Data, BigData 2017, Boston,
MA, USA, December 11-14, 2017. 1271–1276. https://doi.org/10.1109/BigData.2017.
8258054
[16] Min Du, Feifei Li, Guineng Zheng, and Vivek Srikumar. 2017. DeepLog: Anomaly
Detection and Diagnosis from System Logs through Deep Learning. In Proceedings
of the 2017 ACM SIGSAC Conference on Computer and Communications Security,
CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017. 1285–1298. https:
//doi.org/10.1145/3133956.3134015
Your Smart Home Can’t Keep a Secret:
Towards Automated Fingerprinting of IoT Traffic with Neural Networks
Conference’17, July 2017, Washington, DC, USA
2008, Seoul, Korea, September 21-24, 2008, Proceedings. 202–211. https://doi.org/
10.1145/1409635.1409663
[39] Pyda Srisuresh and Matt Holdrege. 1999. IP Network Address Translator (NAT)
Terminology and Considerations. RFC 2663 (1999), 1–30. https://doi.org/10.
17487/RFC2663
[40] Qixiang Sun, Daniel R. Simon, Yi-Min Wang, Wilf Russell, Venkata N. Padman-
abhan, and Lili Qiu. 2002. Statistical Identification of Encrypted Web Browsing
Traffic. In 2002 IEEE Symposium on Security and Privacy, Berkeley, California, USA,
May 12-15, 2002. 19–30. https://doi.org/10.1109/SECPRI.2002.1004359
[41] Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014. Sequence to sequence learning
with neural networks. In Advances in neural information processing systems. 3104–
3112.
[42] Vincent F. Taylor, Riccardo Spolaor, Mauro Conti, and Ivan Martinovic. 2016.
AppScanner: Automatic Fingerprinting of Smartphone Apps from Encrypted
Network Traffic. In IEEE European Symposium on Security and Privacy, EuroS&P
2016, Saarbrücken, Germany, March 21-24, 2016. 439–454. https://doi.org/10.1109/
EuroSP.2016.40
[43] Luca Vassio, Danilo Giordano, Martino Trevisan, Marco Mellia, and Ana
Paula Couto da Silva. 2017. Users’ Fingerprinting Techniques from TCP Traffic.
In Proceedings of the Workshop on Big Data Analytics and Machine Learning for
Data Communication Networks, Big-DAMA@SIGCOMM 2017, Los Angeles, CA,
USA, August 21, 2017. 49–54. https://doi.org/10.1145/3098593.3098602
[44] Nino Vincenzo Verde, Giuseppe Ateniese, Emanuele Gabrielli, Luigi Vincenzo
Mancini, and Angelo Spognardi. 2014. No NAT’d User Left Behind: Fingerprint-
ing Users behind NAT from NetFlow Records Alone. In IEEE 34th International
Conference on Distributed Computing Systems, ICDCS 2014, Madrid, Spain, June
30 - July 3, 2014. 218–227. https://doi.org/10.1109/ICDCS.2014.30
[45] Charles V. Wright, Scott E. Coull, and Fabian Monrose. 2009. Traffic Morphing: An
Efficient Defense Against Statistical Traffic Analysis. In Proceedings of the Network
and Distributed System Security Symposium, NDSS 2009, San Diego, California,
USA, 8th February - 11th February 2009. http://www.isoc.org/isoc/conferences/
ndss/09/pdf/14.pdf
[46] Jishen Yu, Feng Liu, Wenli Zhou, and Hua Yu. 2014. Hadoop-based network
traffic anomaly detection in backbone. In IEEE 3rd International Conference on
Cloud Computing and Intelligence Systems, CCIS 2014, Shenzhen, China, November
27-29, 2014. 140–145. https://doi.org/10.1109/CCIS.2014.7175718
Appendix A TRAFFIC PATTERNS OF IOT
DEVICES
Figure 11 and figure 12 show the traffic patterns when waking Echo
Dot and Google Home up.
Appendix B PERFORMANCE IN NOISY
ENVIRONMENT
Figure 13 and Figure 14 show the performance of random forest in
NAPT and VPN configurations in noisy environment. Figure 15 and
Figure 16 show the performance of bidirectional LSTM in NAPT
and VPN configurations within noisy environment.
[17] Kevin P. Dyer, Scott E. Coull, Thomas Ristenpart, and Thomas Shrimpton. 2012.
Peek-a-Boo, I Still See You: Why Efficient Traffic Analysis Countermeasures Fail.
In IEEE Symposium on Security and Privacy, SP 2012, 21-23 May 2012, San Francisco,
California, USA. 332–346. https://doi.org/10.1109/SP.2012.28
[18] Chuck Fraleigh, Sue Moon, Bryan Lyles, Chase Cotton, Mujahid Khan, Deb
Moll, Rob Rockell, Ted Seely, and S Christophe Diot. 2003. Packet-level traffic
measurements from the Sprint IP backbone. IEEE network 17, 6 (2003), 6–16.
[19] Bryan Gleeson, Arthur Lin, Juha Heinänen, Grenville Armitage, and Andrew G.
Malis. 2000. A Framework for IP Based Virtual Private Networks. RFC 2764
(2000), 1–62. https://doi.org/10.17487/RFC2764
[20] Ian Goodfellow, Yoshua Bengio, and Aaron Courville. 2016. Deep Learning. MIT
Press. http://www.deeplearningbook.org.
[21] Alex Graves, Navdeep Jaitly, and Abdel rahman Mohamed. 2013. Hybrid speech
recognition with Deep Bidirectional LSTM. 2013 IEEE Workshop on Automatic
Speech Recognition and Understanding (2013), 273–278.
[22] Alex Graves and Jürgen Schmidhuber. 2005. Framewise phoneme classification
with bidirectional LSTM and other neural network architectures. Neural networks
: the official journal of the International Neural Network Society 18 5-6 (2005), 602–
10.
[23] Paul E. Hoffman and Patrick McManus. 2018. DNS Queries over HTTPS (DoH).
RFC 8484 (2018), 1–21. https://doi.org/10.17487/RFC8484
[24] Zi Hu, Liang Zhu, John S. Heidemann, Allison Mankin, Duane Wessels, and
Paul E. Hoffman. 2016. Specification for DNS over Transport Layer Security
(TLS). RFC 7858 (2016), 1–19.
[25] Hong Huang, Hussein Al-Azzawi, and Hajar Brani. 2014. Network Traffic Anom-
aly Detection. CoRR abs/1402.0856 (2014). arXiv:1402.0856 http://arxiv.org/abs/
1402.0856
[26] Zhiheng Huang, Wei Xu, and Kai Yu. 2015. Bidirectional LSTM-CRF Models for
Sequence Tagging. CoRR abs/1508.01991 (2015).
[27] Marc Liberatore and Brian Neil Levine. 2006. Inferring the source of encrypted
HTTP connections. In Proceedings of the 13th ACM Conference on Computer and
Communications Security, CCS 2006, Alexandria, VA, USA, Ioctober 30 - November
3, 2006. 255–263. https://doi.org/10.1145/1180405.1180437
[28] Zachary Chase Lipton, David C. Kale, Charles Elkan, and Randall C. Wetzel.
2016. Learning to Diagnose with LSTM Recurrent Neural Networks. CoRR
abs/1511.03677 (2016).
[29] Manuel López Martín, Belén Carro, Antonio Sánchez-Esguevillas, and Jaime
Lloret. 2017. Network Traffic Classifier With Convolutional and Recurrent
Neural Networks for Internet of Things.
IEEE Access 5 (2017), 18042–18050.
https://doi.org/10.1109/ACCESS.2017.2747560
[30] Markus Miettinen, Samuel Marchal, Ibbad Hafeez, N Asokan, Ahmad-Reza
Sadeghi, and Sasu Tarkoma. 2017. IoT Sentinel: Automated device-type identifi-
cation for security enforcement in IoT. In Distributed Computing Systems (ICDCS),
2017 IEEE 37th International Conference on. IEEE, 2177–2184.
[31] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. 2013. Efficient
estimation of word representations in vector space. arXiv preprint arXiv:1301.3781
(2013).
[32] Yisroel Mirsky, Tomer Doitshman, Yuval Elovici, and Asaf Shabtai. 2018. Kitsune:
An Ensemble of Autoencoders for Online Network Intrusion Detection. In 25th
Annual Network and Distributed System Security Symposium, NDSS 2018, San Diego,
California, USA, February 18-21, 2018. http://wp.internetsociety.org/ndss/wp-
content/uploads/sites/25/2018/02/ndss2018_03A-3_Mirsky_paper.pdf
[33] Andriy Panchenko, Fabian Lanze, Jan Pennekamp, Thomas Engel, Andreas
Zinnen, Martin Henze, and Klaus Wehrle. 2016. Website Fingerprint-
ing at Internet Scale. In 23rd Annual Network and Distributed System Se-
curity Symposium, NDSS 2016, San Diego, California, USA, February 21-24,
2016. http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2017/09/
website-fingerprinting-internet-scale.pdf
[34] Vera Rimmer, Davy Preuveneers, Marc Juarez, Tom van Goethem, and Wouter
Joosen. 2018. Automated Website Fingerprinting through Deep Learning. In
25th Annual Network and Distributed System Security Symposium, NDSS 2018, San
Diego, California, USA, February 18-21, 2018. https://arxiv.org/abs/1708.06376
[35] Sandra Siby, Rajib Ranjan Maiti, and Nils Ole Tippenhauer. 2017.
IoTScan-
ner: Detecting and Classifying Privacy Threats in IoT Neighborhoods. CoRR
abs/1701.05007 (2017). arXiv:1701.05007 http://arxiv.org/abs/1701.05007
[36] Payap Sirinam, Mohsen Imani, Marc Juárez, and Matthew Wright. 2018. Deep Fin-
gerprinting: Undermining Website Fingerprinting Defenses with Deep Learning.
In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communi-
cations Security, CCS 2018, Toronto, ON, Canada, October 15-19, 2018. 1928–1943.
https://doi.org/10.1145/3243734.3243768
[37] Arunan Sivanathan, Daniel Sherratt, Hassan Habibi Gharakheili, Adam Radford,
Chamith Wijenayake, Arun Vishwanath, and Vijay Sivaraman. 2017. Characteriz-
ing and classifying IoT traffic in smart cities and campuses. In 2017 IEEE Conference
on Computer Communications Workshops, INFOCOM Workshops, Atlanta, GA,
USA, May 1-4, 2017. 559–564. https://doi.org/10.1109/INFCOMW.2017.8116438
[38] Vijay Srinivasan, John A. Stankovic, and Kamin Whitehouse. 2008. Protecting
your daily in-home activity information from a wireless snooping attack. In
UbiComp 2008: Ubiquitous Computing, 10th International Conference, UbiComp
Conference’17, July 2017, Washington, DC, USA
Shuaike Dong, Zhou Li, Di Tang, Jiongyi Chen, Menghan Sun, and Kehuan Zhang
Figure 11: Echo dot.
Figure 12: Google Voice Assistant
Figure 13: Confusion matrix of RF (noisy+NAPT).
Figure 14: Confusion matrix of RF (noisy+VPN).
Figure 15: Confusion matrix of BLSTM (noisy+NAPT).
Figure 16: Confusion matrix of BLSTM (noisy+VPN).
echogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTPredicted labelechogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTTrue label0.6710.0120.0130.0000.0000.0000.0000.0050.0000.0000.2980.0090.6050.0080.0000.0000.0000.0000.0000.0000.0000.3770.0080.0080.5490.0050.0000.0000.0000.0920.0010.0000.3370.0010.0000.0200.8260.0000.0000.0000.0880.0160.0000.0490.0000.0000.0010.0000.9810.0000.0000.0000.0000.0000.0170.0000.0010.0000.0000.0000.9960.0030.0000.0000.0000.0010.0000.0010.0000.0000.0000.0000.9990.0000.0000.0000.0000.0010.0000.0150.0310.0000.0000.0000.8940.0040.0000.0530.0000.0000.0010.0060.0000.0000.0000.0060.9700.0000.0180.0000.0000.0000.0000.0000.0000.0000.0000.0000.9940.0060.0130.0340.0260.0050.0060.0000.0000.0250.0050.0000.887Confusion matrix0.00.20.40.60.8echogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTPredicted labelechogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTTrue label0.3660.0170.0090.0030.0440.0000.0010.0170.0300.0010.5110.0280.4310.0100.0040.1260.0020.0010.0040.0410.0020.3510.0260.0340.2910.0060.0890.0010.0020.1040.0700.0020.3750.0150.0230.0140.5430.0810.0000.0110.0550.1010.0040.1530.0110.0150.0070.0040.8150.0000.0010.0310.0340.0000.0820.0570.1360.0580.0000.0680.4260.0000.0020.0310.0000.2220.0200.0170.0140.0270.0440.0000.6400.0440.0220.0000.1710.0080.0020.0160.0080.1050.0000.0030.7290.0430.0000.0840.0050.0090.0060.0070.0480.0000.0000.0140.8460.0020.0630.0150.0280.0240.0190.0180.0010.0000.0060.1400.6200.1290.0390.0260.0090.0060.0700.0000.0030.0220.0470.0010.776Confusion matrix0.00.10.20.30.40.50.60.70.8echogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTPredicted labelechogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTTrue label0.8270.0050.0210.0000.0000.0000.0000.0010.0000.0000.1450.0030.9400.0060.0010.0000.0000.0000.0000.0000.0000.0500.0140.0150.8560.0030.0000.0000.0000.0040.0000.0000.1060.0010.0170.0110.7550.0030.0000.0000.0400.0230.0000.1500.0010.0010.0000.0020.9730.0000.0000.0000.0000.0000.0230.0020.0010.0000.0000.0000.9910.0030.0010.0000.0000.0010.0020.0010.0000.0000.0000.0010.8870.0000.0000.0000.1070.0010.0010.0020.0050.0000.0000.0000.9320.0020.0000.0560.0000.0000.0000.0080.0000.0000.0000.0030.9750.0000.0130.0000.0010.0000.0000.0000.0000.0000.0000.0020.9860.0110.0280.0220.0150.0060.0090.0000.0080.0050.0030.0000.904Confusion matrix0.00.20.40.60.8echogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTPredicted labelechogoogletmallxiaomi360tplinkorvibomituxiaobaibroadlinknon-IoTTrue label0.7020.0060.0070.0010.0080.0000.0000.0080.0040.0000.2630.0090.7220.0060.0040.0120.0000.0000.0060.0130.0020.2270.0170.0270.5220.0080.0270.0010.0000.0210.0300.0020.3460.0140.0320.0120.3620.0720.0000.0010.0300.0540.0000.4240.0020.0020.0020.0010.9160.0000.0000.0020.0450.0000.0310.0080.0390.0930.0160.0270.2020.0000.0150.0620.0000.5380.0040.0200.0050.0470.0760.0000.1340.0050.0380.0030.6670.0020.0040.0010.0010.0170.0000.0000.8930.0220.0000.0590.0000.0030.0020.0010.1280.0000.0000.0100.8090.0000.0460.0060.2390.0210.0010.0090.0000.0040.0010.0010.1490.5670.0280.0190.0110.0070.0320.0000.0010.0120.0290.0000.861Confusion matrix0.00.20.40.60.8