# Title: End-to-End Secure Mobile Group Messaging with Conversation Integrity and Minimal Metadata Leakage

## Authors:
- Michael Schliep, University of Minnesota, Email: [EMAIL]
- Nicholas Hopper, University of Minnesota, Email: [EMAIL]

## Abstract
In this paper, we present Mobile CoWPI, a deployable, end-to-end secure mobile group messaging application that ensures conversation integrity and deniability. Mobile CoWPI allows dynamic groups of users to participate in, join, and leave private, authenticated conversations without requiring simultaneous online presence or reliable network connectivity. We identify the limitations of mobile messaging and their impact on conversational integrity and deniability. We define strong models for these security properties, prove that Mobile CoWPI satisfies them, and argue that no protocol meeting these requirements can be more scalable. We also describe an implementation of Mobile CoWPI and demonstrate through experiments that it is suitable for real-world messaging conditions.

## 1. Introduction
Texting and social media-based messaging applications have become nearly as common as face-to-face communications for both individual and group conversations. Their popularity stems from the convenience they offer, allowing users to communicate even in mobile and asynchronous settings where network availability may be unreliable and participants may come online and go offline at different times. In response to growing privacy concerns, many widely deployed messaging applications, such as WhatsApp, Google Allo, Facebook, and Signal, have implemented end-to-end encryption to protect the confidentiality and integrity of messages.

However, message confidentiality and integrity alone are insufficient to fully protect a conversation. While current applications ensure the integrity of individual messages—preventing an adversary from modifying a message in transit—they do not guarantee the integrity of the entire conversation. Consider the following example:

**Alice's View:**
- Alice: Are you going to the protests?
- Alice: Have you had lunch yet?
- Bob: No... Yes.

**Bob's View:**
- Alice: Have you had lunch yet?
- Alice: Are you going to the protests?
- Bob: No... Yes.

We refer to the security property that ensures consistent display of a conversation to all participants as **conversation integrity**. This is an essential additional security property for any future end-to-end secure messaging protocols.

Another important property is **deniability**, which ensures there is no cryptographic proof to a third party that a participant authored a specific message. For example, consider the following conversation:

- Reporter: What is your company doing illegally?
- Whistleblower: They are dumping poison into the water.

Message deniability guarantees that there is no cryptographic evidence that the whistleblower authored the message. Now consider a more complex scenario:

- Whistleblower: My SSN is 123-45-6789.
- Reporter: What is your company doing illegally?
- Whistleblower: They are dumping poison into the water.

A protocol providing message deniability allows the whistleblower to deny authorship. However, since only the whistleblower knows their Social Security Number (SSN), the protocol must also provide **message unlinkability**, ensuring that there is no cryptographic proof to a third party that both messages were authored by the same participant.

Most deployed secure messaging applications, based on the Signal two-party protocol, struggle to extend to group settings. Recent vulnerabilities in these applications have allowed adversaries to drop or reorder messages in both two-party and group conversations. Other messaging applications ignore the end-to-end security of group conversations entirely. We believe that group conversations are just as important as two-party conversations and that future deployable protocols must address this.

Secure messaging protocols in the research literature often make unrealistic assumptions about modern mobile internet environments, making them impractical for deployment. Most of these works require synchronous communication or provide limited guarantees for conversation integrity.

In this paper, we address the challenge of designing a deployable, end-to-end secure mobile group messaging application. Our contributions include:

- Identifying key constraints of the mobile end-to-end secure messaging model and defining the security properties a protocol should provide. We also outline a real-world threat model under which a protocol must operate (Section II).
- Describing a simple and provably secure protocol for Mobile Conversations With Privacy and Integrity (Mobile CoWPI) in Section III. We show in Section IV that Mobile CoWPI meets the desired security properties.
- Analyzing the security properties of our mobile messaging model and demonstrating the restrictions they impose on any mobile end-to-end secure messaging protocol (Section VI). We argue that under these restrictions, Mobile CoWPI is within a constant factor of optimal in terms of message size.
- Implementing Mobile CoWPI as a Java server and library and showing that it performs well in a realistic internet environment (Section V).

## 2. Background
In this section, we outline the system model of modern secure messaging applications and highlight how this model is insufficient for providing conversation integrity. We then detail our system model and discuss how it enforces conversation integrity. We also overview the security properties provided by our protocol and the threat model used for each property.

### A. Mobile Messaging Model
Popular mobile messaging applications share a consistent system model that provides core features such as enabling conversations for two or more participants. These applications allow participants to start new conversations and send messages even when other participants are offline. When offline participants return, they are updated with all missed messages. To improve conversation flow, participants are notified when others have received their messages, informing the sender not to expect a response until the recipients have seen the message.

To support these features, the service provider handles routing and caching of messages. Messages are cached for delivery to offline participants. All popular secure messaging applications rely on a single service provider for message routing and caching. This centralization can break conversation integrity if the service provider forks the conversation after a target message, partitioning the group into multiple views of the same conversation. For example, consider a conversation between Alice, Bob, Charlie, and Dave. The service provider forks the conversation after Alice’s second message, resulting in two different views:

**Alice's and Bob's View:**
- Alice: Let's go to the protest if 3 people want to?
- Alice: I want to go.
- Bob: I cannot make it.

**Charlie's and Dave's View:**
- Alice: Let's go to the protest if 3 people want to?
- Alice: I want to go.
- Charlie: I am in.
- Dave: Yes, me too.

To avoid this, Mobile CoWPI uses a routing/caching service provider with multiple mirror service providers. Users register with the service providers out-of-band, registering long-term and single-use pre-keys. Single-use pre-keys enable conversation setup even when some users are offline. When sending a message, the user uploads it to the routing service provider, which then distributes it to the mirror providers. The routing and mirror providers send the message to the participants, who process it only after receiving it in the same order from all providers. This ensures conversation integrity, as long as at least one provider sends all messages in the same order to all participants.

### B. Service Availability
Service availability is not a primary security goal of Mobile CoWPI. While we describe multiple service providers, we do not assume each service is provided by a single machine but require each service to be provided by a separate entity. Standard techniques for achieving high availability can be deployed to ensure the service is reliably available.

Denial of Service (DoS) protection is also not a goal of Mobile CoWPI. A malicious service provider can easily deny service by not forwarding messages. This type of DoS attack is a risk for all messaging applications that rely on a service provider. If any participants are offline or unable to process a message, the conversation can still progress among the remaining participants.

### C. Security Properties
In addition to supporting offline users and message receipts, Mobile CoWPI aims to achieve several security goals for secure mobile messaging. We relate our security goals to those discussed by Unger et al. [23]. In Section IV, we provide sketches of the security proofs for these properties and the full proofs in Appendix A.

- **Message Confidentiality**: Only conversation participants can read a message.
- **Message Integrity**: Messages are guaranteed to not have been modified in transit.
- **Message Authentication**: Participants can verify the author of a message. Message authentication implies message integrity.
- **Forward Secrecy**: Past messages remain confidential even if future key material is revealed.
- **Backward Secrecy**: Future messages remain confidential even if past key material is revealed, also known as future secrecy or post-compromise secrecy.
- **Participant Authentication**: Participants can verify the identity of other participants.
- **Participant Consistency**: All participants agree on the list of participants in the conversation.
- **Conversation Integrity**: All participants see the same conversation, including the order of messages and participant changes. This goal includes speaker consistency, causality preservation, and a global transcript.
- **Deniability**: Participants can deny taking part in a conversation. This includes message repudiation and message unlinkability.
- **Anonymity Preservation**: The protocol does not undermine the anonymity features of the underlying transport.
- **Computation and Trust Equality**: All users perform similar computations, and no user is trusted more than any other.
- **Untrusted Service Provider**: No individual service provider is trusted to provide any of the security properties.
- **Dynamic Groups**: Participants can be added and removed from conversations without restarting the protocol.

### D. Threat Model
The security provided by Mobile CoWPI must withstand strong adversaries. We consider an adversary that may compromise multiple service providers and users, has full network control, and can drop, modify, and reorder network traffic. Each security property is provided under the strongest adversary that cannot trivially break the property. The exact capabilities of the adversary for each security property are detailed below.

- **Message Confidentiality**: The adversary has full network control and can insert, drop, and reorder network messages. The adversary can compromise any or all service providers and any participant in a non-target session. The adversary cannot compromise any participant in the target session, as this would trivially reveal the plaintext of the message.
- **Message Integrity and Authentication**: The adversary considered for message integrity and authentication is the same as for message confidentiality.
- **Forward and Backward Secrecy**: The adversary for forward and backward secrecy is similar to the message confidentiality adversary. The adversary can also compromise any or all participants in the target conversation but cannot impersonate a participant in the target conversation. The adversary cannot compromise a participant at the time a target message is being processed, as this would trivially break the secrecy.
- **Participant Authentication**: The adversary can compromise the service providers and has full network control. The adversary can compromise non-target participants. We assume there is an authenticated side-channel between the target participants, such as pre-shared secrets or in-person face-to-face communication.
- **Participant Consistency**: The adversary has full network control and can compromise all service providers and any participant in any session. The adversary cannot compromise all service providers and a participant in the target session, as this would allow the adversary to forge and deliver inconsistent participant changes.
- **Conversation Integrity**: The adversary has full network control and can compromise any participant in any session. The adversary can compromise all but one of the service providers. If the adversary compromised all service providers, they could fork the conversation.
- **Anonymity Preservation**: The adversary is a passive network adversary, such as an Internet Service Provider. The adversary cannot compromise any service providers or users of the messaging service. The goal of the adversary is to link a session to the long-term key or identity of a participant. The goal of Mobile CoWPI is to not reduce the anonymity provided by the underlying transport, such as Tor [22].
- **Deniability**: We model deniability similarly to Di Raimondo et al. [6]. A protocol is deniable if a distinguisher cannot distinguish between a real protocol transcript and a simulated transcript. The protocol is deniable if any user can produce a simulated transcript indistinguishable from a real transcript. The simulator must only use information known to a user, such as identities, long-term public keys, and secret keys. The distinguisher has access to the long-term private information of users, i.e., long-term secret keys.

For message unlinkability, the distinguisher and simulator are given a part of a real transcript and ephemeral state related to a single message. The simulated transcript must contain this partial information and still be indistinguishable from the real transcript.

## 3. Design
At a high level, Mobile CoWPI is designed as follows. Users register with the routing service provider out-of-band, linking a user identity, a long-term public key, and multiple single-use pre-keys. The routing provider shares this registration information with the mirror service providers. When messages are sent as part of a conversation, they are uploaded to the routing provider and distributed to the mirror providers. All service providers then send the messages to the participants, who do not process a message until it has been received from the routing service provider and all mirror providers in the same order. As long as a single provider is honest, conversation integrity and participant consistency are enforced.

Users of Mobile CoWPI communicate with each provider using a two-party secure channel, which provides all the security properties described in the previous section. We describe this channel in Section III-K.

When Alice wishes to set up a new conversation with Bob and Charlie, she first fetches Bob’s and Charlie’s long-term public keys and a single-use public pre-key for each. She then uploads a setup message of the form:

```
Sid, "SETUP", Alice, P, cab, cac, authas1, ..., authasm
```

where `Sid` is a unique session identifier, `P` is the set of participants, `ca*` are per-user ciphertext blocks that authenticate the message and contain future key material for Bob and Charlie, and `autha*` are authentication blocks for the providers. The providers then distribute the following to Alice, Bob, and Charlie, respectively:

- Alice: `Sid, "SETUP", Alice, P`
- Bob: `Sid, "SETUP", Alice, P, cab`
- Charlie: `Sid, "SETUP", Alice, P, cac`

Alice, Bob, and Charlie do not process a message until they have received it from every provider. All protocol messages have a similar form, with a data block followed by per-user and per-provider blocks, allowing the data block and a single per-user block to be sent to the participants.