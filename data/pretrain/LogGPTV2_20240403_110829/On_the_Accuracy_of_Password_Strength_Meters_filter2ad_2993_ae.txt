can observe that the majority of websites did change their PSM
over time. (During our crawler development and data collection
we observed how reddit changed its meter from a simple LUDS
approach to zxcvbn.)
one can see increasing password count numbers. This way, strong
(less common) passwords are on the left; weak (more common)
passwords are on the right.
While none of the approaches outperforms the others in terms
of accuracy, other factors become more critical. For example to
decrease the dependency of accuracy on the password distribution.
We chose the different password evaluation sets to show the varying
performance based on the (trained) distribution. A representative
example for this is ID: 7B RNN Generic (Web) (0.421 − 0.777) vs.
ID: 7C RNN Target (0.860 − 0.965). It shows the generic meter
performance (using a different composition policy) in comparison
to a targeted (distribution matching) trained variant.
Also relevant are the storage requirements of the meters: While
the inaccurate and straightforward LUDS meters can fit into a cou-
ple of bytes, the (uncompressed) n-gram databases of meters based
on Markov models can occupy hundreds of megabytes to gigabytes
of disk space. The current database underlying the Have I Been
Pwned? meter requires 30 GB (or enough trust to send partial pass-
word hashes to a third-party service). Optimized variants fit into
860 MB of memory using a Bloom filter [57]. zxcvbn has a size
of around 800 KB. Decreasing the size of meters while maintain-
ing high accuracy seems a worthwhile research goal. The RNN
approach by Melicher et al. [46] is a first good example that reason-
able accurate meters can fit into a couple of megabytes [46].
Furthermore, we need to better understand and mitigate the
negative effects of quantization. While the non-binned academic
proposals perform well, we need to find a way to transfer their
accuracy to quantized output that is required for users. In the set
of evaluated password strength meters we found score-based (i. e.,
> 42), percentage-based (i. e., > 75 %), and logarithmic (i. e., ≥ 106)
binning approaches, equal sized and unequal sized bins, magic
constants, and rule-based binning.
Finally, what we have learned from the success of zxcvbn (which
is implemented at several sites according to our findings) is that
providing implementations in multiple programming languages
that are readily deployable helps adoption.
7.4 Recent Proposals and Future Directions
Recent academic proposals are among the best-scoring approaches.
Specifically, instances of Markov models, PCFGs, RNNs, as well as
zxcvbn, score excellently. Figure 3 shows the distribution of the
strength estimations for the LinkedIn offline dataset. On the x-axis,
7.5 Limitations
Albeit we carefully selected the datasets for our evaluation, we only
simulated real-world password choice using breached passwords.
As mentioned in Section 4 password distributions are influenced by
many factors, thus the three evaluated sets only reflect a small set
100101102103104105Password Count10-3010-2010-101Markov (Probability)100101102103104105Password Count10-3010-2010-101PCFG (Probability)100101102103104105Password Count10010101020RNN (Guesses)100101102103104105Password Count10101020zxcvbn (Guesses)of passwords. In particular, they reflect mostly an English speaking
community. The impact of password-composition policies was not
studied, primarily, because constraining the passwords in each
leak to those that satisfy a given policy does not reflect real user
behavior [40].
While weighted Spearman correlation was the best in our set
of tested metrics for quantized strength estimations, it still is not
perfectly accurate. Thus, results for quantized meters need to be
interpreted carefully. In general, the lower the number of bins, the
less precise the results, as explained in Section 5. Furthermore, dif-
ferent application contexts may place different demands on meters,
thus may require different choices of similarity metrics.
Finally, measuring the accuracy alone is not enough to asses the
overall performance of a meter. Usability and deployability aspects
are vital for a complete assessment but are not presented in our
analysis.
8 CONCLUSIONS
In this work, we considered the accuracy of password strength
meters. We have demonstrated that the currently used measures
to determine the accuracy of strength meters (such as Pearson and
Kendall correlation) are not precise. We conducted a large com-
parison of different similarity measures and argued that weighted
Spearman correlation is best suited to precisely and robustly esti-
mate the accuracy of strength meters.
We applied this measure to 45 different strength meters and
determined their accuracy for an online and offline use case. We
found that the academic PSM proposals based on Markov models,
PCFGs, and RNNs perform best. We also found several websites
and password managers to have quite accurate strength meters.
However, the strength meters used in practice are less accurate
than academic proposals, and we see no significant improvement
of meter accuracy when comparing with meters from 5 years ago.
High accuracy is one important aspect that impacts the security
of a password strength meter. Also vital are usability and deploy-
ability aspects, those are independent of the presented work. We
hope our work aids further improvements of PSMs and provides
helpful guidance and a metric for the selection of accurate PSMs
and thus helps to improve the situation of password-based user
authentication.
REFERENCES
[1] 8bit Solutions, LLC. 2018. bitwarden (Web) – Free Open Source Password Manager.
https://bitwarden.com, as of September 10, 2018.
[2] AgileBits, Inc. 2018. 1Password (Web) – Password Manager. https://1password.
com, as of September 10, 2018.
[3] Fabian Angelstorf and Franziska Juckel. 2017. OMEN v0.3.0 - C Implementation
of a Markov Model-based Password Guesser. https://github.com/RUB-SysSec/
OMEN, as of September 10, 2018.
[4] Daniel V. Bailey, Markus Dürmuth, and Christof Paar. 2014. Statistics on Password
Re-use and Adaptive Strength for Financial Accounts. In Security and Cryptogra-
phy for Networks (SCN ’14). Springer, Amalfi, Italy, 218–235.
[5] Adam Beautement, M. Angela Sasse, and Mike Wonham. 2008. The Compli-
ance Budget: Managing Security Behaviour in Organisations. In New Security
Paradigms Workshop (NSPW ’08). ACM, Lake Tahoe, California, USA, 47–58.
[6] Sebastian Benvenuti. 2012. Ubiquity – Ubuntu Should Encourage Stronger Pass-
words. https://bugs.launchpad.net/ubuntu/+source/ubiquity/+bug/1044868, as
of September 10, 2018.
[7] Matt Bishop and Daniel V. Klein. 1995. Improving System Security via Proactive
Password Checking. Computers & Security 14, 3 (1995), 233–249.
[8] Joseph Bonneau. 2012. The Science of Guessing: Analyzing an Anonymized
Corpus of 70 Million Passwords. In IEEE Symposium on Security and Privacy
(SP ’12). IEEE Computer Society, San Francisco, California, USA, 538–552.
[9] Joseph Bonneau, Cormac Herley, Paul C. van Oorschot, and Frank Stajano. 2012.
The Quest to Replace Passwords: A Framework for Comparative Evaluation of
Web Authentication Schemes. In IEEE Symposium on Security and Privacy (SP ’12).
IEEE Computer Society, San Jose, California, USA, 553–567.
[10] Mark Burnett. 2015. Today I Am Releasing Ten Million Passwords. https://xato.
net/today-i-am-releasing-ten-million-passwords-b6278bbe7495, as of September
10, 2018.
[11] William E. Burr, Donna F. Dodson, and W. Timothy Polk. 2004. Electronic
Authentication Guideline: NIST SP 800-63 Ver. 1.0 (2004) to 800-63-2 (2013).
https://csrc.nist.gov/publications/detail/sp/800-63/ver-10/archive/2004-06-30, as
of September 10, 2018.
[12] Javier Carranza and Contributors. 2018. Ubiquity – Ubuntu Live CD Installer.
https://launchpad.net/ubuntu/+source/ubiquity, as of September 10, 2018.
[13] Claude Castelluccia, Markus Dürmuth, and Daniele Perito. 2012. Adaptive
Password-Strength Meters from Markov Models. In Symposium on Network and
Distributed System Security (NDSS ’12). The Internet Society, San Diego, California,
USA.
[14] Dashlane, Inc. 2018. Dashlane (Windows) – Password Manager. https://www.
dashlane.com, as of September 10, 2018.
[15] “dcopi”. 2013. NIST - Password Strength Meter Example. https://github.com/
dcopi/PWStrength, as of September 10, 2018.
[16] Xavier de Carné de Carnavalet and Mohammad Mannan. 2014. From Very Weak
to Very Strong: Analyzing Password-Strength Meters. In Symposium on Network
and Distributed System Security (NDSS ’14). ISOC, San Diego, California, USA.
[17] Xavier de Carné de Carnavalet and Mohammad Mannan. 2014. Password Multi-
Checker Tool. https://madiba.encs.concordia.ca/software/passwordchecker/, as
of September 10, 2018.
[18] Matteo Dell’Amico and Maurizio Filippone. 2015. Monte Carlo Strength Evalua-
tion: Fast and Reliable Password Checking. In ACM Conference on Computer and
Communications Security (CCS ’15). ACM, Denver, Colorado, USA, 158–169.
[19] Matteo Dell’Amico, Pietro Michiardi, and Yves Roudier. 2010. Password Strength:
An Empirical Analysis. In Conference on Information Communications (INFO-
COM ’10). IEEE, San Diego, California, USA, 983–991.
[20] Dropbox, Inc. and Contributors. 2017. zxcvbn v4.4.2 – JavaScript Implementa-
tion of the zxcvbn Strength Meter. https://github.com/dropbox/zxcvbn, as of
September 10, 2018.
[21] Markus Dürmuth, Fabian Angelstorf, Claude Castelluccia, Daniele Perito, and
Abdelberi Chaabane. 2015. OMEN: Faster Password Guessing Using an Ordered
Markov Enumerator. In International Symposium on Engineering Secure Software
and Systems (ESSoS ’15). Springer, Milan, Italy, 119–132.
[22] Serge Egelman, Andreas Sotirakopoulos, Ildar Muslukhov, Konstantin Beznosov,
and Cormac Herley. 2013. Does My Password Go Up to Eleven?: The Impact of
Password Meters on Password Selection. In ACM Conference on Human Factors
in Computing Systems (CHI ’13). ACM, Paris, France, 2379–2388.
[23] Dinei Florencio and Cormac Herley. 2007. A Large-scale Study of Web Password
Habits. In Conference on World Wide Web (WWW ’07). ACM, Banff, Alberta,
Canada, 657–666.
[24] Dinei Florêncio, Cormac Herley, and Paul C. van Oorschot. 2014. An Admin-
istrator’s Guide to Internet Password Research. In Large Installation System
Administration Conference (LISA ’14). USENIX, Seattle, Washington, USA, 44–61.
[25] Dinei Florêncio, Cormac Herley, and Paul C. van Oorschot. 2014. Password
Portfolios and the Finite-Effort User: Sustainably Managing Large Numbers
of Accounts. In USENIX Security Symposium (SSYM ’14). USENIX, San Diego,
California, USA, 575–590.
[26] Dinei Florêncio, Cormac Herley, and Paul C. van Oorschot. 2016. Pushing on
String: The “Don’t Care” Region of Password Strength. Commun. ACM 59, 11
(Oct. 2016), 66–74.
[27] Maximilian Golla, Benedict Beuscher, and Markus Dürmuth. 2016. On the Security
of Cracking-Resistant Password Vaults. In ACM Conference on Computer and
Communications Security (CCS ’16). ACM, Vienna, Austria, 1230–1241.
[28] Maximilian Golla, Theodor Schnitzler, and Markus Dürmuth. 2018. “Will Any
Password Do?” Exploring Rate-Limiting on the Web. In Who Are You?! Adventures
in Authentication Workshop (WAY ’18). USENIX, Baltimore, Maryland, USA.
[29] Maximilian Golla, Ibrahim Sertkaya, and Markus Dürmuth. 2018. Password
Strength Meter Comparison Website. https://password-meter-comparison.org,
as of September 10, 2018.
[30] Jeremi M. Gosney. 2017. Nvidia GTX 1080 Ti Hashcat Benchmarks.
https:
//gist.github.com/epixoip/ace60d09981be09544fdd35005051505, as of September
10, 2018.
[31] Paul A. Grassi, James L. Fenton, and William E. Burr. 2017. Digital Identity
Guidelines – Authentication and Lifecycle Management: NIST SP 800-63B (2017).
[32] Yimin Guo and Zhenfeng Zhang. 2018. LPSE: Lightweight Password-Strength
Estimation for Password Meters. Computers & Security 73 (March 2018), 507–518.
[33] Hana Habib, Jessica Colnago, William Melicher, Blase Ur, Sean Segreti, Lujo Bauer,
Nicolas Christin, and Lorrie Cranor. 2017. Password Creation in the Presence
of Blacklists. In Workshop on Usable Security (USEC ’17). Internet Society, San
Diego, California, USA.
[34] Shiva Houshmand and Sudhir Aggarwal. 2012. Building Better Passwords Using
Probabilistic Techniques. In Annual Computer Security Applications Conference
(ACSAC ’12). ACM, Orlando, Florida, USA, 109–118.
[35] Jason Huggins and SeleniumHQ Contributors. 2017. Selenium - Web Browser
Automation. http://www.seleniumhq.org, as of September 10, 2018.
[36] Troy Hunt. 2018. 500m Pwned Passwords List. https://haveibeenpwned.com/
Passwords, as of September 10, 2018.
[37] Markus Jakobsson and Mayank Dhiman. 2012. The Benefits of Understanding
Passwords. In USENIX Workshop on Hot Topics in Security (HotSec ’12). USENIX,
Bellevue, Washington, USA.
[38] JS Foundation. 2018. Appium – Automation Made Awesome. http://appium.io,
as of September 10, 2018.
[39] Keeper Security, Inc. 2018. Keeper (Web) – Password Manager.
https:
//keepersecurity.com, as of September 10, 2018.
[40] Patrick Kelley, Saranga Kom, Michelle L. Mazurek, Rich Shay, Tim Vidas, Lujo
Bauer, Nicolas Christin, Lorrie Faith Cranor, and Julio López. 2012. Guess Again
(and Again and Again): Measuring Password Strength by Simulating Password-
Cracking Algorithms. In IEEE Symposium on Security and Privacy (SP ’12). IEEE
Computer Society, San Jose, California, USA, 523–537.
[41] Daniel V. Klein. 1990. “Foiling the Cracker”: A Survey of, and Improvements to,
Password Security. In USENIX Security Workshop. USENIX, Berkeley, California,
USA, 5–14.
[42] Saranga Komanduri, Richard Shay, Patrick Gage Kelley, Michelle L. Mazurek,
Lujo Bauer, Nicolas Christin, Lorrie Faith Cranor, and Serge Egelman. 2011. Of
Passwords and People: Measuring the Effect of Password-Composition Policies.
In ACM Conference on Human Factors in Computing Systems (CHI ’11). ACM,
Vancouver, British Columbia, Canada, 2595–2604.
[43] LogMeIn, Inc. 2018. LastPass (Web) – Password Manager. https://www.lastpass.
com, as of September 10, 2018.
[44] Jerry Ma, Weining Yang, Min Luo, and Ninghui Li. 2014. A Study of Probabilistic
Password Models. In IEEE Symposium on Security and Privacy (SP ’14). IEEE, San
Jose, CA, USA, 689–704.
[45] William Melicher. 2017. Source Code – Cracking Passwords with Neural Net-
works. https://github.com/cupslab/neural_network_cracking, as of September
10, 2018.
[46] William Melicher, Blase Ur, Sean M. Segreti, Saranga Komanduri, Lujo Bauer, Nico-
las Christin, and Lorrie Faith Cranor. 2016. Fast, Lean, and Accurate: Modeling
Password Guessability Using Neural Networks. In USENIX Security Symposium
(SSYM ’16). USENIX, Austin, Texas, USA, 175–191.
[47] Robert Morris and Ken Thompson. 1979. Password Security: A Case History.
Commun. ACM 22, 11 (1979), 594–597.
[48] Arvind Narayanan and Vitaly Shmatikov. 2005. Fast Dictionary Attacks on
Passwords Using Time-Space Tradeoff. In ACM Conference on Computer and
Communications Security (CCS ’05). ACM, Alexandria, VA, USA, 364–372.
[49] Ronald Oussoren. 2018. PyObjC – The Python Objective-C Bridge.
https:
//pythonhosted.org/pyobjc/, as of September 10, 2018.
[50] Sarah Pearman, Jeremy Thomas, Pardis Emami Naeini, Hana Habib, Lujo Bauer,
Nicolas Christin, Lorrie Faith Cranor, Serge Egelman, and Alain Forget. 2017.
Let’s Go in for a Closer Look: Observing Passwords in Their Natural Habitat.
In ACM Conference on Computer and Communications Security (CCS ’17). ACM,
Dallas, Texas, USA, 295–310.
[51] Dominik Reichl. 2018. KeePass (Windows) – Password Manager. http://keepass.
info/help/kb/pw_quality_est.html, as of September 10, 2018.
[52] Dominik Reichl. 2018. KPScript (Windows) – Scripting KeePass. http://keepass.
info/help/v2_dev/scr_index.html, as of September 10, 2018.
[53] Stuart Schechter, Cormac Herley, and Michael Mitzenmacher. 2010. Popularity Is
Everything: A New Approach to Protecting Passwords from Statistical-Guessing
Attacks. In USENIX Workshop on Hot Topics in Security (HotSec ’10). USENIX,
Washington, District of Columbia, USA.
[54] Sinew Software Systems. 2016. Enpass Release Notes – Use of the zxcvbn Strength
Meter. https://www.enpass.io/release-notes/windowspc/, as of September 10,
2018.
[55] Sinew Software Systems. 2018. Enpass (Windows) – Password Manager. https:
//www.enpass.io, as of September 10, 2018.
[56] Eugene H. Spafford. 1992. Observing Reusable Password Choices. In USENIX
Security Symposium (SSYM ’92). USENIX, Berkeley, California, USA, 299–312.
[57] Richard Tilley. 2018. Blooming Password. https://www.bloomingpassword.fun,
as of September 10, 2018.
[58] Blase Ur. 2017. Source Code – Data-Driven Password Meter. https://github.com/
cupslab/password_meter, as of September 10, 2018.
[59] Blase Ur, Felicia Alfieri, Maung Aung, Lujo Bauer, Nicolas Christin, Jessica Col-
nago, Lorrie Faith Cranor, Henry Dixon, Pardis Emami Naeini, Hana Habib, Noah
Johnson, and William Melicher. 2017. Design and Evaluation of a Data-Driven
Password Meter. In ACM Conference on Human Factors in Computing Systems
(CHI ’17). ACM, Denver, Colorado, USA, 3775–3786.
[60] Blase Ur, Jonathan Bees, Sean M. Segreti, Lujo Bauer, Nicolas Christin, and
Lorrie Faith Cranor. 2016. Do Users’ Perceptions of Password Security Match
Reality?. In ACM Conference on Human Factors in Computing Systems (CHI ’16).
ACM, Santa Clara, California, USA, 3748–3760.
[61] Blase Ur, Patrick Gage Kelley, Saranga Komanduri, Joel Lee, Michael Maass,
Michelle L. Mazurek, Timothy Passaro, Richard Shay, Timothy Vidas, Lujo Bauer,
Nicolas Christin, and Lorrie Faith Cranor. 2012. How Does Your Password
Measure Up? The Effect of Strength Meters on Password Creation. In USENIX
Security Symposium (SSYM ’12). USENIX, Bellevue, Washington, USA, 65–80.
[62] Blase Ur, Sean M. Segreti, Lujo Bauer, Nicolas Christin, Lorrie Faith Cranor,
Saranga Komanduri, Darya Kurilova, Michelle L. Mazurek, William Melicher, and
Richard Shay. 2015. Measuring Real-World Accuracies and Biases in Modeling
Password Guessability. In USENIX Security Symposium (SSYM ’15). USENIX,
Washington, D.C., USA, 463–481.
[63] Ashlee Vance. 2010. If Your Password Is 123456, Just Make It HackMe. http:
//www.nytimes.com/2010/01/21/technology/21password.html, as of September
10, 2018.
[64] Rafael Veras, Christopher Collins, and Julie Thorpe. 2014. On the Semantic
Patterns of Passwords and their Security Impact. In Symposium on Network and
Distributed System Security (NDSS ’14). The Internet Society, San Diego, California,
USA.
[65] Ding Wang, Debiao He, Haibo Cheng, and Ping Wang. 2016. fuzzyPSM: A New
Password Strength Meter Using Fuzzy Probabilistic Context-Free Grammars.
In Conference on Dependable Systems and Networks (DSN ’16). IEEE Computer
Society, Toulouse, France, 595–606.
[66] Ding Wang, Zijian Zhang, Ping Wang, Jeff Yan, and Xinyi Huang. 2016. Targeted
Online Password Guessing: An Underestimated Threat. In ACM Conference on
Computer and Communications Security (CCS ’16). ACM, Vienna, Austria, 1242–
1254.
[67] Miranda Wei, Maximilian Golla, and Blase Ur. 2018. The Password Doesn’t Fall
Far: How Service Influences Password Choice. In Who Are You?! Adventures in
Authentication Workshop (WAY ’18). USENIX, Baltimore, Maryland, USA.
[68] Matt Weir, Sudhir Aggarwal, Michael Collins, and Henry Stern. 2010. Testing
Metrics for Password Creation Policies by Attacking Large Sets of Revealed Pass-
words. In ACM Conference on Computer and Communications Security (CCS ’10).
ACM, Chicago, Illinois, USA, 162–175.
[69] Matt Weir, Sudhir Aggarwal, Breno de Medeiros, and Bill Glodek. 2009. Password
Cracking Using Probabilistic Context-Free Grammars. In IEEE Symposium on
Security and Privacy. IEEE Computer Society, Oakland, California, USA, 391–405.
[70] Matt Weir, Sudhir Aggarwal, Breno De Medeiros, and Bill Glodek. 2009. Password
Cracking Using Probabilistic Context-Free Grammars. In IEEE Symposium on
Security and Privacy (SP ’09). IEEE, Berkeley, CA, USA, 391–405.
[71] Daniel Lowe Wheeler. 2016. zxcvbn: Low-Budget Password Strength Estimation.
In USENIX Security Symposium (SSYM ’16). USENIX, Austin, Texas, USA, 157–173.
A METER COMPARISON
In the following, we list the full results of our data collection. We separated the five categories Academic Proposals, Password Managers,
Operating Systems, Websites, and Previous Work into two tables. A colorful version that allows easier comparison can be found online [29].
A.1 Academic Proposals, Password Managers, and Operating Systems
Table 5: We computed the weighted Spearman correlation as the best similarity score (cf. Section 5). The table lists the online
use case on the left, the offline use case on the right. We highlighted if and on how many bins a meter quantized its output.
Additionally, we list whether a meter runs on client- or server-side and how the meter visualizes the strength to the user.
ID Meter
Type Quant.
Visu.
RockYou LinkedIn 000Webhost RockYou LinkedIn 000Webhost
Online Attacker
Offline Attacker
Eleven [22]
LPSE [32]
1A Comprehensive8 [61]
1B Comprehensive8 [61]
2
3
4A Markov (OMEN) [13]
4B Markov (Single) [27]
4C Markov (Multi) [27]
5A NIST [11]
5B NIST (w. Dict.) [11]
6
7A RNN Generic [46]
7B RNN Generic (Web) [59]
7C RNN Target [46]
7D RNN Target (w. Bloom) [46]
8A zxcvbn (Guess Number) [71]
8B
PCFG (fuzzyPSM) [65]
zxcvbn (Score) [71]
9A 1Password (Web)
9B
1Password (Web)
10A Bitwarden (Web)
10B Bitwarden (Web)
11 Dashlane 5.5 (Windows)
Enpass 5.6.8 (Windows)5
12
13A KeePass 2.38 (Windows)
13B KeePass 2.38 (Windows)
14A Keeper (Web)
14B Keeper (Web)
15
LastPass (Web)
16A LogMeOnce (Web)
16B LogMeOnce (Web)
17A RoboForm 8.4.8.8 (Chrome)
17B RoboForm 8.4.8.8 (Chrome)
17C RoboForm Business (Web)
18
True Key 2.8.5711 (Chrome)
19A Zoho Vault (Web)
19B Zoho Vault (Web)
20A macOS High Sierra 10.13.4
20B macOS High Sierra 10.13.4
20C macOS High Sierra 10.13.4
21A Ubuntu 18.04 (Ubiquity)
21B Ubuntu 18.04 (Ubiquity)
C
C
C
C
S
S
S
C
C
S
C
C
C
C
C
C
C
C
C
C
C
C