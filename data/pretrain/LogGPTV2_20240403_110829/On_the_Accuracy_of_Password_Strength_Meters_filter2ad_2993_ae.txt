### Observations and Analysis of Password Strength Meters

#### Evolution of Password Strength Meters
We observed that the majority of websites have updated their password strength meters (PSMs) over time. For example, during our data collection, Reddit transitioned from a simple LUDS (Length, Uppercase, Lowercase, Digits, Special characters) approach to the more sophisticated zxcvbn meter.

#### Distribution of Password Strength
The increasing count of passwords can be visualized on a graph, with stronger (less common) passwords positioned on the left and weaker (more common) passwords on the right.

#### Performance and Accuracy
None of the PSMs outperformed the others in terms of accuracy. However, other factors, such as reducing the dependency of accuracy on password distribution, became more critical. We used different password evaluation sets to demonstrate varying performance based on the trained distribution. For instance, the generic RNN meter (ID: 7B, 0.421 - 0.777) was compared to a targeted RNN meter (ID: 7C, 0.860 - 0.965), which showed the impact of using a distribution-matching training policy.

#### Storage Requirements
The storage requirements for PSMs vary significantly. Simple and inaccurate LUDS meters can fit into a few bytes, while n-gram databases for Markov model-based meters can occupy hundreds of megabytes to gigabytes. The current database for the Have I Been Pwned? meter requires 30 GB, or users must trust sending partial password hashes to a third-party service. Optimized variants, like those using Bloom filters, can fit into 860 MB. Zxcvbn, for example, has a size of around 800 KB. Reducing the size of PSMs while maintaining high accuracy is a worthwhile research goal. The RNN approach by Melicher et al. [46] is a good example, achieving reasonable accuracy with a size of a few megabytes.

#### Quantization and Binning
Quantization is another critical aspect. While non-binned academic proposals perform well, we need to find ways to transfer this accuracy to quantized outputs that are user-friendly. In our evaluation, we found score-based (e.g., > 42), percentage-based (e.g., > 75%), and logarithmic (e.g., â‰¥ 106) binning approaches, along with equal and unequal sized bins, magic constants, and rule-based binning.

#### Adoption and Implementation
The success of zxcvbn, which is implemented on several sites, highlights the importance of providing implementations in multiple programming languages that are readily deployable.

### Recent Proposals and Future Directions

Recent academic proposals, including Markov models, PCFGs, RNNs, and zxcvbn, have shown excellent performance. Figure 3 illustrates the distribution of strength estimations for the LinkedIn offline dataset, with the x-axis representing password counts and the y-axis showing the probability or guess numbers.

### Limitations

Despite careful selection of datasets, our evaluation only simulated real-world password choices using breached passwords. These datasets primarily reflect an English-speaking community, and the impact of password-composition policies was not studied, as constraining passwords to specific policies does not reflect real user behavior [40].

While weighted Spearman correlation was the best metric for quantized strength estimations, it is not perfectly accurate. Results for quantized meters should be interpreted carefully, as the lower the number of bins, the less precise the results. Different application contexts may also require different similarity metrics.

Measuring accuracy alone is not sufficient for a complete assessment of a PSM. Usability and deployability aspects are vital but were not covered in our analysis.

### Conclusions

In this work, we evaluated the accuracy of various PSMs and demonstrated that commonly used measures like Pearson and Kendall correlation are not precise. We conducted a large comparison of different similarity measures and argued that weighted Spearman correlation is the most suitable for accurately and robustly estimating the accuracy of PSMs.

We applied this measure to 45 different PSMs and determined their accuracy for both online and offline use cases. Academic PSM proposals based on Markov models, PCFGs, and RNNs performed the best. Several websites and password managers also had quite accurate PSMs. However, PSMs used in practice are generally less accurate than academic proposals, and there has been no significant improvement in meter accuracy over the past five years.

High accuracy is crucial for the security of PSMs, but usability and deployability are equally important. We hope our work will aid in further improvements of PSMs and provide guidance for selecting accurate PSMs, thereby enhancing the security of password-based user authentication.

### References

[References listed here as provided in the original text]

### Appendix: Meter Comparison

In the following, we list the full results of our data collection, separating the categories into two tables: Academic Proposals, Password Managers, Operating Systems, Websites, and Previous Work. A colorful version for easier comparison is available online [29].

#### Table 5: Weighted Spearman Correlation

| ID | Meter Type | Quant. | Visu. | RockYou | LinkedIn | 000Webhost |
|---|---|---|---|---|---|---|
| Online Attacker | Offline Attacker | | | | | |
| Eleven [22] | LPSE [32] | 1A Comprehensive8 [61] | 1B Comprehensive8 [61] | 2 | 3 | 4A Markov (OMEN) [13] |
| 4B Markov (Single) [27] | 4C Markov (Multi) [27] | 5A NIST [11] | 5B NIST (w. Dict.) [11] | 6 | 7A RNN Generic [46] | 7B RNN Generic (Web) [59] |
| 7C RNN Target [46] | 7D RNN Target (w. Bloom) [46] | 8A zxcvbn (Guess Number) [71] | 8B PCFG (fuzzyPSM) [65] | zxcvbn (Score) [71] | 9A 1Password (Web) | 9B 1Password (Web) |
| 10A Bitwarden (Web) | 10B Bitwarden (Web) | 11 Dashlane 5.5 (Windows) | Enpass 5.6.8 (Windows)5 | 12 | 13A KeePass 2.38 (Windows) | 13B KeePass 2.38 (Windows) |
| 14A Keeper (Web) | 14B Keeper (Web) | 15 LastPass (Web) | 16A LogMeOnce (Web) | 16B LogMeOnce (Web) | 17A RoboForm 8.4.8.8 (Chrome) | 17B RoboForm 8.4.8.8 (Chrome) |
| 17C RoboForm Business (Web) | 18 True Key 2.8.5711 (Chrome) | 19A Zoho Vault (Web) | 19B Zoho Vault (Web) | 20A macOS High Sierra 10.13.4 | 20B macOS High Sierra 10.13.4 | 20C macOS High Sierra 10.13.4 |
| 21A Ubuntu 18.04 (Ubiquity) | 21B Ubuntu 18.04 (Ubiquity) | C | C | C | S | S |

This table lists the weighted Spearman correlation for the online and offline use cases, highlighting the quantization and visualization methods used by each meter.