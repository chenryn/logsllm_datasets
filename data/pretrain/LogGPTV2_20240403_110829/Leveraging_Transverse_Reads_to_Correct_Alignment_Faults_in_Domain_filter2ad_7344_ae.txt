# Performance Overhead

| DECC Latency | DECC IPC |
|--------------|-----------|
| 1.1          | 1.05      |
| 1.0          | 1.0       |
| 0.95         | 0.95      |
| 0.9          | 0.9       |
| 0.85         | 0.85      |
| 0.8          | 0.8       |

**Figure 15: Performance Overhead**

## D. Power and Energy

According to our device simulations (Section IV), a transverse read consumes 1.67 times more energy than a normal read. As detailed in Section V, computing DECC requires two transverse reads and one normal read when reaching the expected destination. Additionally, to check for errors, all STT-MRAM cells must be read. For DECC with 64/72 column ECC, 832 cells are required for LCL = 512 and n = 32, while 704 cells are needed for n = 16. In contrast, p-ECC-O shifts only by one domain at a time to ensure system integrity. However, this characteristic significantly impacts power consumption and performance due to the repeated use of extra heads. P-ECC uses the extra heads less frequently to check auxiliary information, but the energy required to shift additional domains for auxiliary information still penalizes the scheme from a power perspective.

**Figure 16** compares the energy consumed by our scheme with p-ECC and p-ECC-O. The static power, determined using a modified version of NVSIM [32–34], did not differ significantly between the schemes (e.g., within 1%), making dynamic power the primary factor in energy differences. On average, the energy consumed by DECC with 64/72 column ECC for n = 32 and LCL = 512 is 52% lower than that of p-ECC and 75% lower than p-ECC-O.

Thus, the DECC approach provides significant savings in area/density and energy while maintaining similar performance to the leading fault-tolerance approach for shift faults in DWM.

### Figure 16: Energy Consumption
- **DECC with 64/72 column ECC vs p-ECC**
- **DECC with 64/72 column ECC vs p-ECC-O**

| Normal Read Energy |
|--------------------|
| 0.55               |
| 0.45               |
| 0.35               |
| 0.25               |
| 0.15               |

- **DEC64/p-ECC-S adaptive**
- **DEC64/p-ECC-O**

## VII. Related Work

Domain Wall Memory (DWM) has been proposed for various computer architecture components due to its near SRAM access speeds, low static power, and high density. DWM has been studied for use in main memory [38] and at various cache levels [8–10] in general-purpose processor architectures. A full implementation of a DWM stack-based CPU was constructed based on DWM [39]. DWM has also been proposed for GPU register files [40–42] and cache hierarchies [43, 44]. It has been suggested for buffers used in on-chip networks [45] and to construct content-addressable memory [46]. Most architectural studies of DWM have focused on enhancing performance and reducing dynamic energy through new shifting policies and data placement policies by utilizing knowledge of data access frequency [47–49].

Several solutions have been proposed to increase the feasibility of DWM by improving its resiliency against pinning and shifting faults. Vahid et al. proposed using Varshamov-Tenegolts, an algorithm primarily used to detect packet loss in internet transmissions, to resolve pinning issues [50]. Additionally, [51, 52] proposed reading the same data multiple times through different heads, separated by a specific interval, to detect disruptions in the case of over- or under-shift. However, these previous studies required many consecutive shifts and reads to verify the memory state, during which data could not be written. These solutions performed worse than HIFI [11], which is why we used HIFI as our comparison in this work.

## VIII. Conclusion

Domain wall memory prototypes exhibit a significant probability of positional shift faults, which can discourage DWM's potential usage despite its area and energy advantages over traditional and emerging memory technologies. To overcome this reliability limitation and allow the intrinsic benefits of domain-wall memory to shine, we developed DECC, an efficient correction methodology. DECC is unique in its design, as it corrects potential errors in the primary data due to shifting faults by protecting a smaller derived set of data (the signature) extracted from the original data. Our novel access technique, transverse reading, is used to calculate the number of ones in the nanowire.

Using these concepts, we achieve a Data Unavailability Error (DUE) Mean Time to Failure (MTTF) of 15 years, fulfilling the requirement of 10 years set by [37]. In addition, while maintaining similar performance and static power to the state-of-the-art HIFI technique [11], our scheme decreases the area overhead by 3.7 times and the dynamic energy by 52% on average for a nanowire length of 32 data bits in a memory sub-array consisting of 512 nanowires.

**Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 13:37:28 UTC from IEEE Xplore. Restrictions apply.**

## References

[References listed here]

---

This revised text is more structured, clear, and professional, with improved readability and coherence.