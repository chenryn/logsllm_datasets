186
匹配IP地址
187
处理文件名..
061
匹配对称的括号，
193
防备不期望的匹配，
... 194
匹配分隔符之内的文本
196
了解数据，做出假设..
198
去除文本首尾的空白字符。
199
HTML相关范例.
200
匹配HTMLTag.
.200
匹配HTMLLink
201
检查HTTPURL
203
验证主机名
203
在真实世界中提取URL，
.206
扩展的例子..
..208
保持数据的协调性
209
解析CSV文件，
..213
第6章：打造高效正则表达式
.221
典型示例.
222
稍加修改—先迈最好使的腿
223
效率vs准确性
.223
继续前进-
-限制匹配优先的作用范围
.225
实测..
..226
全面考察回溯
228
POSIXNFA需要更多处理
229
无法匹配时必须进行的工作
. 230
看清楚一点.
.231
多选结构的代价很高
.231
---
## Page 22
目录
xvii
性能测试.
232
理解测量对象
234
PHP测试
234
Java 测试....
235
VB.NET 测试
237
Ruby测试..
238
Python测试
238
Tcl测试
239
常见优化措施.
240
有得必有失..
240)
优化各有不同，
241
正则表达式的应用原理，
241
应用之前的优化措施，
242
通过传动装置进行优化
.246
优化正则表达式本身，
247
提高表达式速度的诀窍，
252
常识性优化
254
将文字文本独立出来。
255
将锚点独立出来
256
忽略优先还是匹配优先？具体情况具体分析
256
拆分正则表达式，
257
模拟开头字符识别
258
使用固化分组和占有优先量词
259
主导引擎的匹配
260
消除循环.
261
方法1：依据经验构建正则表达式
262
真正的“消除循环”解法
264
方法2：自顶向下的视角.
266
方法3：匹配主机名..
267
观察..
268
使用固化分组和占有优先量词
268
简单的消除循环的例子
.270
消除C语言注释匹配的循环
272
流畅运转的表达式.
277
引导匹配的工具，
277
引导良好的正则表达式速度很快
279
281
总结：开动你的大脑.
281
---
## Page 23
xvi
目录
第7章：Perl.
283
作为语言组件的正则表达式
.285
Perl的长处
....
.286
Perl的短处
..286
Perl的正则流派
.286
正则运算符和正则文字
.288
正则文字的解析方式，
.292
正则修饰符.
.292
正则表达式相关的Perl教义.
.293
表达式应用场合，
..294
动态作用域及正则匹配效应，
.295
匹配修改的特殊变量
.299
qr.../运算符与regex对象，
303
构建和使用regex对象
.303
探究regex对象..
..305
用regex对象提高效率..
.306
Match运算...
...306
Match的正则运算元
.307
指定目标运算元
.308
Match运算符的不同用途
.309
选代匹配：ScalarContext，使用/g.….
..312
Match运算符与环境的关系..
..316
Substitution运算符...
.318
运算元replacement，
.319
le修饰符.
..319
应用场合与返回值
..321
Split运算符
...321
Split基础知识
..322
返回空元素
.324
Split中的特殊Regex运算元.
..325
Split中带捕获型括号的match运算元.
..326
巧用Perl的专有特性.
..326
用动态正则表达式结构匹配嵌套结构
...328
使用内嵌代码结构
...31
在内嵌代码结构中使用local函数
..335
关于内嵌代码和my变量的忠告
...338
使用内嵌代码匹配嵌套结构
..340
正则文字重载.
..341
正则文字重载的问题
..344
ill
---
## Page 24
目录
xix
模拟命名捕获.
... 344
效率..
.347
办法不只一种...
348
表达式编译、lo修饰符、qr/··/和效率
..348
理解“原文”副本.
.. 355
Study函数
.359
性能测试..
..360
正则表达式调试信息
.361
结语.
.363
第8章：Java.
.365
Java的正则流派
366