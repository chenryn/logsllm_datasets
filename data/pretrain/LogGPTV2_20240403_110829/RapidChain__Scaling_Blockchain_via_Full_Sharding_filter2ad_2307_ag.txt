the possible adversarial choices to ﬁnd the probability that all the groups in any subset of size |R(cid:48)|
being corrupted:
(cid:32) 
(cid:33)
Pr
T ⊆L,S ⊆R
≤ 2|L|2|R|(e
−µb(eµb/x)x + e
−µ❕(eµ❕/x)x)|R(cid:48)|
.
(7)
Tighter Bound. Not all the choices of the adversary gives him the same probability of success.
Thus, we can consider strategies that are strictly worst than another strategy and remove them from
the union bound since it is not beneﬁcial for the adversary to choose such strategies. We consider
the following random process:
1. All good parties are assigned randomly to groups.
2. The adversary assign α fraction of all its bad parties to the groups such that the assignment
corrupts maximum number of groups.
3. The adversary assigns remaining 1 − α bad parties such that each party assigned to at least
one good group.
We claim that any strategy who does not follow the previous process i.e. it assigns a bad party
to all bad committees at step (3) is a strictly worst since assigning bad parties to the groups that
are already bad will not increase the chance of adversary to corrupt a new group.
30
Similar to the previous analysis, we can calculate the probability that a set of size |R(cid:48)| has only
bad committees in it after throwing all good parties and α fraction of the bad parties that is,
(e
−µα b(eµαb/x)x + e
−µ❕(eµ❕/x)x)|R(cid:48)|
.
(8)
Now, we can calculate the fraction of strategies that the adversary ignores due to the step three
rule,
|R(cid:48)|!(|R(cid:48)| − log n)!
|R|!(|R| − log n) .
β =
(9)
(cid:32) 
(cid:33)
Pr
T ⊆L,S ⊆R
Thus, in our union bound, we can ignore this fraction,
≤ β2|L|2|R|(e
−µb(eµb/x)x + e
−µ❕(eµ❕/x)x)|R(cid:48)|
.
6.5 Security of Reconﬁguration
We now prove that the reconﬁguration protocol that we use maintains the balancing and honesty
properties of the committees. The proof is an extension of the proof in [8]. We ﬁrst deﬁne two
conditions for a committee.
Deﬁnition 3 (Honesty). A committee satisﬁes the honesty condition if the fraction of corrupt nodes
in the committee is strictly less than 1/2.
Deﬁnition 4 (Balancing). A committee satisﬁes the balancing condition if the number of nodes in
the committee is bounded by O(log n).
In the following, we let nodes join and leave one-by-one in each round. Moreover, we assume
that at any time during the protocol, the fraction of corrupt nodes to honest nodes is . We also
assume the protocol starts from a stable state with n nodes partitioned into m committees which
satisﬁes the balancing and honesty conditions. Recall that we deﬁned the set of active committees
as the m/2 committees with highest number of nodes in them.
Lemma 5. For any ﬁxed active committee C and at any time, the age of any active committee C
is within (1 ± δ) nc log n
Proof. We deﬁne yi as the age of k-region called Ri and Y =i =c log n
, with high probability.
2k
n (1 − 2k
and E[Y] = nc
. Thus, E[yi] = n
yi as the age of C. At any point
during the protocol, half of the committees are active so we choose the region for the new node from
n )t−1 is geometrically distributed with probability
half of the k regions. Thus, Pr[yi = t] = 2k
2k c log n. It is easy to show that Y is concentrated around E[Y],
meaning that Y is between (1 ± δ)E[Y] and we omit the proof here.
Lemma 6. Any k-region in active committees has age at most λ(n/2k) log n.
Proof. The probability that a k-region Ri is evicted at any round is 2k/n since at any round we have
m/2 active committees and as a result half of the k-regions will accept a new join. Conditioned on
the event that the committee does not get inactive during this time, we can assume this probability
is independent of other rounds. Note that this condition considers the worst case scenario since
otherwise the committee gets inactive during this time. Hence, the probability that Ri has age at
least λ(n/2k) log n is (1 − 2k/n)λ(n/k) log n ≤ e−2k/nλ(n/2k) log n = n−λ.
2k
n
i =1
2k
31
Protocol
ID Genera-
tion
O(n2)
Elastico [47]
OmniLedger [42] O(n2)
O(n2)
RapidChain
Bootstrap
Ω(n2)
Ω(n2)
√
n)
O(n
Consensus
Storage
Node
O(|B|)
O(m2/b + n)
O(m·|B|/n)
Ω(m2/b + n)
O(m2/b + m log n) O(m·|B|/n)
per
Table 3: Complexities of previous sharding-based blockchain protocols
Lemma 7. Any ﬁxed node v in an active committee, it gets replaced at most (1 + δ)λ log n times
within λ(n/2k) log n rounds.
Proof. We prove this lemma conditioned on the fact that the node is placed in an active committee
with probability 1/2, i.e., half of the committees get to be active after one node joins them. This
condition is considers the worst case scenario in which we assume that half of the inactive committees
have numbers of nodes very close to being active in the next round. Let the indicator random
variable zt = 1 if node p is replaced in t, otherwise it is 0. Pr[zt = 1] = 1/2 2k
since at any time we
zt . We can compute
log n = 1/2λ log n. Using the Chernoﬀ bound, we can show that Z  0 denote
the total number of input and output UTXOs in tx, and v > 0 denote the number of committees
that stores at least one of the input UTXOs of tx. The probability that tx is cross-shard is equal to
1 − F(u, v, k), where
(10)
F(u, v, k) =
1,
(1/k)u ,
k−v
k
k−v
k
· F(u − 1, v − 1, k),
· F(u − 1, v − 1, k)+
k · F(u − 1, v, k),
v
if u = v = 1
if v = 1
if u = v
otherwise.
For our target network of 4,000 nodes, where we create k = 16 committees, almost all transactions
are expected to be cross-shard because 1− F(3, 1, 16) = 99.98%. In comparison, for a smaller network
of 500 nodes where we create only 3 committees, this probability is equal to 1 − F(3, 1, 3) = 96.3%.
6.8 Estimating Unreported Overheads
We estimate the bandwidth overhead of an epoch of OmniLedger using the numbers reported in [42]:
a total of 1,800 nodes, transaction size of 500 B, throughput of 3,500 tx/sec, and a probability of
1A similar calculation is done in [42] but the presented formula is, unfortunately, incorrect.
33
3.7% for a transaction to be intra-shard. OmniLedger requires at least three gossip-to-all invo-
cations per cross-shard transaction. Therefore, the bandwidth required by each node is at least
3,500 tx/sec · 0.967 · 500 B · 3 ≈ 45 Mbps.
To estimate the throughput of Elastico, we use the reported transaction conﬁrmation latency of
800 seconds for n =1,600, m =16, and 1 MB blocks. Assuming 500 B/tx, the throughput of Elastico
can be calculated as 16 · 2,000 / 800 = 40 tx/sec.
7 Conclusion
We present RapidChain, the ﬁrst 1/3-resilient sharding-based blockchain protocol that is highly scal-