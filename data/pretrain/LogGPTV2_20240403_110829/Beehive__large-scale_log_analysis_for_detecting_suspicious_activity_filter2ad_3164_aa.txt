# Beehive: Large-Scale Log Analysis for Detecting Suspicious Activity in Enterprise Networks

## Authors
- Ting-Fang Yen, RSA Laboratories, Cambridge, MA, USA
- Alina Oprea, RSA Laboratories, Cambridge, MA, USA
- Kaan Onarlioglu, Northeastern University, Boston, MA, USA
- Todd Leetham, EMC Corp, Hopkinton, MA, USA
- William K. Robertson, Northeastern University, Boston, MA, USA
- Ari Juels, RSA Laboratories, Cambridge, MA, USA
- Engin Kirda, Northeastern University, Boston, MA, USA

## Abstract
As the frequency and sophistication of Internet-based attacks increase, organizations are deploying a variety of security products to generate situational intelligence in the form of logs. These logs contain valuable information about network activities and are often the first data sources consulted by security specialists during suspected attacks. However, the logs generated by these products, which come from different vendors, are often inconsistent, incomplete, and voluminous, making them difficult to analyze.

We present Beehive, a novel system designed to automatically mine and extract knowledge from the log data produced by various security products in large enterprises. Unlike signature-based approaches, Beehive identifies suspicious host behaviors that can be reported as potential security incidents. These incidents can then be further analyzed by incident response teams to determine if a policy violation or attack has occurred. We evaluated Beehive on log data collected over two weeks at EMC, comparing its findings with Security Operations Center reports, antivirus alerts, and feedback from security specialists. Our results show that Beehive can detect malicious events and policy violations that would otherwise go undetected.

## 1. Introduction
Protecting computing infrastructure in large organizations is becoming increasingly challenging. Both generic malware and targeted attacks (e.g., Advanced Persistent Threats) are growing in sophistication, outpacing traditional defenses like antivirus software. Additionally, the use of personal devices for business applications and the breakdown of traditional organizational perimeters due to business complexities and geographical distribution have eroded administrators' visibility into host behavior.

To address this, many organizations deploy a range of security products that enforce policies and generate situational intelligence in the form of logs. These logs contain high volumes of useful information about network activities and are often the first data sources consulted by security specialists during an attack. For example, authentication logs might indicate a compromised employee account, while web proxy logs might record a victim's visit to a malicious site before a drive-by download attack.

Despite the value of these logs, their analysis remains largely manual and relies on signatures of known threats. The challenge is that security products from different vendors produce logs in varying formats, often incomplete, contradictory, and very large (e.g., terabytes per day). Thus, while the collected information is useful, it is often "dirty."

In this paper, we tackle the problem of automatically mining and extracting knowledge from such dirty log data. Our goal is to improve on signature-based detection by identifying suspicious host behaviors that signal potential security incidents. These incidents can then be further analyzed by incident response teams. A key insight is that behaviors in enterprise settings are more constrained by policy and typical employee behavior than those on the open Internet, allowing us to effectively identify suspicious activities.

Beehive, our automated approach, consists of three layers:
1. Parsing, filtering, and normalizing log data using network-specific configuration information.
2. Generating features from normalized log data to produce fifteen distinct features for each host per day.
3. Clustering these features to identify outlying, suspicious periods of host activity, which are reported as incidents.

We evaluated Beehive on log data collected over two weeks at EMC, comparing its findings with Security Operations Center reports, antivirus alerts, and feedback from security specialists. Our results show that Beehive can detect malicious events and policy violations that go unnoticed by existing state-of-the-art security tools and personnel.

### Contributions
- We propose Beehive, an automated approach that analyzes large volumes of disparate log data to detect malicious activity and policy violations, leveraging unique features of enterprise networks.
- We evaluated Beehive on more than 6 terabytes of log data, correctly identifying suspicious activities that went unnoticed by existing security tools and personnel.
- To the best of our knowledge, this is the first exploration of the challenges of big data security analytics for large volumes of real-world log data.

## 2. Problem and Challenges
### 2.1 Threat Model
Beehive aims to detect threats in two scenarios:
1. **Infected Hosts**: Hosts that exhibit malicious behaviors such as contacting attack websites, communicating with C&C servers, or exfiltrating data.
2. **Policy Violations**: Host-based user activities that violate enterprise policies, such as peer-to-peer file sharing, instant messaging, multimedia streaming, viewing adult content, online gaming, and using proxies to bypass security mechanisms.

### 2.2 Data
Beehive uses a wide range of logs generated by various network devices, including web proxies, DHCP servers, VPN servers, Windows domain controllers, and antivirus software. These logs are stored in a commercial SIEM system. Web proxy logs are particularly useful as they include all fields in HTTP headers, providing insights into users' browsing behavior and detecting suspicious connections.

### 2.3 Challenges
- **Big Data Problem**: The massive volume of logs (e.g., 1.4 billion log messages daily) requires efficient data-reduction algorithms and strategies to focus on security-relevant information.
- **Semantic Gap**: Identifying meaningful security incidents from logs that lack the necessary context (e.g., IP addresses instead of hostnames) and require correlation across different logs.
- **Lack of Ground Truth**: Evaluating Beehive's effectiveness is challenging due to the absence of known malicious traffic, as most threats are resolved by existing security measures. Manual evaluation of Beehive's findings is necessary.

## 3. The Beehive System
### 3.1 Data Normalization
Beehive preprocesses log data to remove noise and inconsistencies. This includes:
- **Timestamp Normalization**: Standardizing timestamps to UTC, addressing the issue of different time zones and time representations.
- **IP Address Correlation**: Determining statically and dynamically assigned IP addresses and constructing bindings between hosts and IP addresses to attribute logged events to specific hosts.

### 3.2 Feature Generation
Beehive generates fifteen distinct features for each host per day, capturing enterprise-specific behaviors. These features are used to cluster hosts with similar suspicious behaviors, identifying outlying clusters as potential incidents.

### 3.3 Unsupervised Learning
Beehive employs unsupervised learning to generate incidents of anomalous host behavior. This involves clustering the generated features to identify outlying, suspicious periods of host activity, which are then reported for further analysis.

By addressing the challenges of big data security analytics, Beehive provides a robust solution for detecting and analyzing suspicious activities in large enterprise networks.