# assembly-2
Reversing, 250 points
## Description:
> What does asm2(0x7,0x28) return? Submit the flag as a hexadecimal value (starting with '0x').  
```assembly
.intel_syntax noprefix
.bits 32
.global asm2
asm2:
	push   	ebp
	mov    	ebp,esp
	sub    	esp,0x10
	mov    	eax,DWORD PTR [ebp+0xc]
	mov 	DWORD PTR [ebp-0x4],eax
	mov    	eax,DWORD PTR [ebp+0x8]
	mov	DWORD PTR [ebp-0x8],eax
	jmp    	part_b
part_a:	
	add    	DWORD PTR [ebp-0x4],0x1
	add	DWORD PTR [ebp+0x8],0x76
part_b:	
	cmp    	DWORD PTR [ebp+0x8],0xa1de
	jle    	part_a
	mov    	eax,DWORD PTR [ebp-0x4]
	mov	esp,ebp
	pop	ebp
	ret
```
## Solution:
This is how the stack looks like after performing the `sub esp,0x10` command:
```
+---------+
|         |  0xa1de, then return local1.
In python, this is equal to:
```python
>>> local1 = 0x28
>>> local2 = 0x7
>>> while local2 >> print(local1)
392
```
So the flag is 392 = 0x188.