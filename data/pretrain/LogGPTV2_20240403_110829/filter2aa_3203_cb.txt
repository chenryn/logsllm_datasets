List and describe the types of tunneling configurations. 
Define the differences between configured and automatic tunneling. 
Describe ISATAP in terms of its purpose, requirements, and addresses. 
Describe 6to4 in terms of its purpose, requirements, and addresses. 
Describe Teredo in terms of its purpose, requirements, and addresses. 
List and describe the steps in migrating from IPv4 to IPv6. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 437 
Introduction to IPv6 Transition Technologies 
Protocol transitions are typically done by installing and configuring the new protocol on all nodes within 
the network and verifying that all node and router operations work successfully. Although this might be 
possible in a small or medium sized organization, the challenge of making a rapid protocol transition in 
a large organization is very difficult. Additionally, given the scope of the Internet, rapid protocol 
transition is an impossible task.  
The designers of IPv6 recognized that the transition from IPv4 to IPv6 would take years and that there 
might be organizations or hosts within organizations that will continue to use IPv4 indefinitely. 
Therefore, while migration is the long-term goal, equal consideration must be given to the interim 
coexistence of IPv4 and IPv6 nodes. 
RFC 2893 defines the following node types: 
IPv4-only node  
A node that uses only IPv4 and has only IPv4 addresses assigned. This node type does not 
support IPv6. Most hosts and routers installed today are IPv4-only nodes. 
IPv6-only node 
A node that uses only IPv6 and has only IPv6 addresses assigned. This node type is only able to 
communicate with IPv6 nodes and applications. This type of node is not common today, but will 
become more prevalent as smaller devices such as cellular phones and handheld computing 
devices use only the IPv6 protocol. 
IPv6/IPv4 node 
A node that uses both IPv4 and IPv6. 
IPv4 node 
A node that uses IPv4. An IPv4 node can be an IPv4-only node or an IPv6/IPv4 node. 
IPv6 node 
A node that uses IPv6. An IPv6 node can be an IPv6-only node or an IPv6/IPv4 node. 
For coexistence to occur, all nodes (IPv4 or IPv6 nodes) can communicate using an IPv4 infrastructure, 
an IPv6 infrastructure, or an infrastructure that is a combination of IPv4 and IPv6. True migration is 
achieved when all IPv4 nodes are converted to IPv6-only nodes. However, for the foreseeable future, 
practical migration is achieved when as many IPv4-only nodes as possible are converted to IPv6-only 
nodes. IPv4-only nodes can communicate with IPv6-only nodes through an IPv4-to-IPv6 proxy or 
translation gateway. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 438 
IPv6 Transition Mechanisms 
To coexist with an IPv4 infrastructure and to provide an eventual transition to an IPv6-only 
infrastructure, the following mechanisms are used: 
Dual stack or dual IP layer architectures 
DNS infrastructure 
IPv6 over IPv4 tunneling 
Dual Stack or Dual IP Layer Architectures 
IPv6/IPv4 hosts can be based on a dual IP layer or dual stack architecture. In either architecture, the 
following types of traffic are possible: 
IPv4 
IPv6 
IPv6 traffic sent with an IPv4 header (IPv6 over IPv4 tunneling) 
A dual IP layer contains a single implementation of Transport layer protocols such as TCP and UDP. 
Figure 15-1 shows a dual IP layer architecture. 
Figure 15-1  The dual IP layer architecture 
The IPv6 protocol for Windows Vista and Windows Server 2008 uses the dual IP layer architecture. The 
TCP/IP protocol driver in Windows Vista and Windows Server 2008, Tcpip.sys, contains both IPv4 and 
IPv6 Internet layers.  
Figure 15-2 shows the dual stack architecture. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 439 
Figure 15-2  The dual stack architecture 
The IPv6 protocol for Windows Server 2003 and Windows XP uses the dual stack architecture. The 
IPv6 protocol driver in Windows Server 2003 and Windows XP, Tcpip6.sys, contains a separate 
implementation of TCP and UDP.  
Both dual stack and dual IP layer architectures provide the same functionality for IPv6 transition. 
DNS Infrastructure 
A Domain Name System (DNS) infrastructure is needed for successful coexistence because of the 
prevalent use of names rather than addresses to refer to network resources. Upgrading the DNS 
infrastructure consists of populating the DNS servers with records to support IPv6 name-to-address and 
address-to-name resolutions. 
For name-to-address resolutions, the DNS infrastructure must be able to store AAAA records for IPv6 
nodes that are populated either manually or dynamically. 
For address-to-name resolutions (reverse queries), the DNS infrastructure must be able to store PTR 
records in the IP6.ARPA domain for IPv6 nodes, populated either manually or dynamically. 
Address Selection Rules 
For name-to-address resolution, after the querying node obtains the set of addresses corresponding to 
the name, the node must determine the set of addresses to choose as source and destination for 
outgoing packets.  
This is not an issue in today’s prevalent IPv4-only environments. However, in an environment in which 
IPv4 and IPv6 coexist, the set of addresses returned in a DNS query may contain both IPv4 and IPv6 
addresses. The typical querying IPv6/IPv4 host is configured with at least one IPv4 address and 
multiple IPv6 addresses. Deciding which type of address (IPv4 vs. IPv6) and, for IPv6 addresses, a 
source and the destination address that is matched in scope and purpose is not an easy task. For more 
information, see Source and Destination Address Selection for IPv6. Default address selection rules are 
defined in RFC 3484.  
The default address selection rules for the IPv6 protocol in Windows are stored in the prefix policy 
table, which you can view with the netsh interface ipv6 show prefixpolicy command. You can modify 
the entries in the prefix policy table using the netsh interface ipv6 add|set|delete prefixpolicy 
commands. By default, IPv6 addresses in DNS query responses are preferred over IPv4 addresses. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 440 
IPv6 Over IPv4 Tunneling 
IPv6 over IPv4 tunneling is the encapsulation of IPv6 packets with an IPv4 header so that IPv6 packets 
can be sent over an IPv4 infrastructure. Within the IPv4 header: 
The IPv4 Protocol field is set to 41 to indicate an encapsulated IPv6 packet. 
The Source and Destination fields are set to IPv4 addresses of the tunnel endpoints. The tunnel 
endpoints are either manually configured or are automatically derived from the sending tunnel 
interface and the next-hop address of the matching route for the destination IPv6 address in the 
tunneled packet. 
Figure 15-3 shows IPv6 over IPv4 tunneling. 
Figure 15-3  IPv6 over IPv4 tunneling 
Note  IPv6 over IPv4 tunneling only describes an encapsulation of IPv6 packets with an IPv4 header so that IPv6 nodes are 
reachable across an IPv4 infrastructure. Unlike tunneling for the Point-to-Point Tunneling Protocol (PPTP) and Layer Two Tunneling 
Protocol (L2TP), there is no exchange of messages for tunnel setup, maintenance, or termination. Additionally, IPv6 over IPv4 
tunneling does not provide security for tunneled IPv6 packets. For more information about PPTP and L2TP, see Chapter 14, "Virtual 
Private Networking." 
Tunneling Configurations 
RFC 2893 defines the following tunneling configurations with which to tunnel IPv6 traffic between 
IPv6/IPv4 nodes over an IPv4 infrastructure: 
Router-to-router 
In the router-to-router tunneling configuration, two IPv6/IPv4 routers connect two IPv6-capable 
infrastructures over an IPv4 infrastructure. The tunnel endpoints span a logical link in the path 
between the source and destination. The IPv6 over IPv4 tunnel between the two routers acts as a 
single hop. Routes within each IPv6-capable infrastructure point to the IPv6/IPv4 router on the 
edge. 
Host-to-router or router-to-host 
In the host-to-router tunneling configuration, an IPv6/IPv4 node that resides within an IPv4 
infrastructure creates an IPv6 over IPv4 tunnel to reach an IPv6/IPv4 router. The tunnel endpoints 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 441 
span the first segment of the path between the source and destination nodes. The IPv6 over IPv4 
tunnel between the IPv6/IPv4 node and the IPv6/IPv4 router acts as a single hop.  
In the router-to-host tunneling configuration, an IPv6/IPv4 router creates an IPv6 over IPv4 tunnel 
across an IPv4 infrastructure to reach an IPv6/IPv4 node. The tunnel endpoints span the last 
segment of the path between the source node and destination node. The IPv6 over IPv4 tunnel 
between the IPv6/IPv4 router and the IPv6/IPv4 node acts as a single hop.  
Host-to-host 
In the host-to-host tunneling configuration, an IPv6/IPv4 node that resides within an IPv4 
infrastructure creates an IPv6 over IPv4 tunnel to reach another IPv6/IPv4 node that resides within 
the same IPv4 infrastructure. The tunnel endpoints span the entire path between the source and 
destination nodes. The IPv6 over IPv4 tunnel between the IPv6/IPv4 nodes acts as a single hop.  
On each IPv6/IPv4 node, an interface representing the IPv6 over IPv4 tunnel is created. IPv6 routes are 
added that use the tunnel interface. Based on the sending tunnel interface, the route, and the 
destination address, the sending node tunnels the IPv6 traffic to the next hop or to the destination. The 
IPv4 address of the tunnel endpoint can be manually configured or automatically determined from the 
next-hop address for the destination and the tunnel interface. 
Types of Tunnels 
RFC 2893 defines the following types of tunnels: 
Configured 
A configured tunnel requires manual configuration of tunnel endpoints. In a configured tunnel, the 
IPv4 addresses of tunnel endpoints are not derived from the next-hop address corresponding to the 
destination address. 
Typically, router-to-router tunneling configurations are manually configured. The tunnel interface 
configuration, consisting of the IPv4 addresses of the tunnel endpoints, must be manually specified 
along with routes that use the tunnel interface. 
To manually create configured tunnels for the IPv6 protocol for Windows, use the netsh interface 
ipv6 add v6v4tunnel command. 
Automatic 
An automatic tunnel is a tunnel that does not require manual configuration. Tunnel endpoints are 
determined by the use of logical tunnel interfaces, routes, and destination IPv6 addresses.  
The IPv6 protocol for Windows Vista, Windows XP, Windows Server 2008, and Windows Server 2003 
supports the following automatic tunneling technologies: 
Intra-site Automatic Tunnel Addressing Protocol (ISATAP) 
6to4 
Teredo 
The IPv6 protocol for Windows Server 2003 and Windows XP also supports automatic tunneling using 
IPv6-compatible addresses and 6over4. For more information, see IPv6 Transition Technologies. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 442 
ISATAP 
ISATAP is an address assignment and host-to-host, host-to-router, and router-to-host automatic 
tunneling technology that provides unicast IPv6 connectivity between IPv6 hosts across an IPv4 
intranet. ISATAP is described in RFC 4214. ISATAP hosts do not require any manual configuration and 
create ISATAP addresses using standard address autoconfiguration mechanisms. 
ISATAP can be used for communication between IPv6/IPv4 nodes on an IPv4 intranet. ISATAP 
addresses use the interface identifier ::200:5EFE:w.x.y.z (in which w.x.y.z is a unicast public IPv4 
address) or ::0:5EFE:w.x.y.z (in which w.x.y.z is a unicast private IPv4 address). The ISATAP interface 
identifier can be combined with any 64-bit subnet prefix that is valid for IPv6 unicast addresses, 
including global, unique local, and link-local prefixes. An example of a link-local ISATAP address is 
FE80::5EFE:10.107.4.92. 
By default, the IPv6 protocol for Windows Vista with no service packs installed, Windows Server 2003, 
and Windows XP automatically configures link-local ISATAP addresses (with the address prefix 
FE80::/64) on an ISATAP tunneling for each IPv4 address that is assigned to the node. Link-local 
ISATAP addresses allow two hosts to communicate over an IPv4 network by using each other's link-
local ISATAP address. Windows Vista with Service Pack 1 and Windows Server 2008 do not 
automatically configure link-local ISATAP addresses. 
For example, Host A is configured with the IPv4 address of 10.40.1.29 and Host B is configured with 
the IPv4 address of 192.168.41.30. Host A automatically configures the ISATAP address of 
FE80::5EFE:10.40.1.29 and Host B automatically configures the ISATAP address of 
FE80::5EFE:192.168.41.30. Figure 15-4 shows this example configuration. 
Figure 15-4  An example ISATAP configuration 
When Host A sends IPv6 traffic to Host B by using Host B's link-local ISATAP address, the source and 
destination addresses for the IPv6 and IPv4 headers are as listed in Table 15-1.  
Table 15-1    Example of IPv4 and IPv6 addresses for ISATAP 
Field 
Value 
IPv6 Source Address 
FE80::5EFE:10.40.1.29 
IPv6 Destination Address 
FE80::5EFE:192.168.41.30 
IPv4 Source Address 
10.40.1.29 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 443 
IPv4 Destination Address 
192.168.41.30 
To test connectivity, a user on Host A can use the following command to ping Host B with its link-local 
ISATAP address: 
ping FE80::5EFE:192.168.41.30%2 
Because the destination of the ping command is a link-local address, the %ZoneID portion of the 
command must be used to specify the interface index of the interface from which traffic is sent. In this 
case, %2 specifies interface 2, which is the interface index assigned to the ISATAP tunneling interface 
on Host A. The ISATAP tunneling interface uses the last 32-bits of the destination IPv6 address as the 
destination IPv4 address and the locally assigned IPv4 address as the source IPv4 address. 
Using an ISATAP Router 
The use of link-local ISATAP addresses allows IPv6/IPv4 hosts on the same logical ISATAP subnet to 
communicate with each other, but link-local addresses are not registered in DNS and cannot be used to 
communicate with other IPv6 hosts on other subnets. To obtain additional subnet prefixes, ISATAP 
hosts must perform router discovery and address autoconfiguration with an ISATAP router. To 
communicate outside the logical subnet using non-link-local ISATAP-based addresses, ISATAP hosts 
must tunnel their packets to an ISATAP router. Figure 15-5 shows an ISATAP router. 
Figure 15-5  An ISATAP router 
An ISATAP router is an IPv4/IPv6 router that performs the following: 
Advertises subnet prefixes assigned to the logical ISATAP subnet on which ISATAP hosts are 
located. ISATAP hosts use the advertised subnet prefixes to configure global ISATAP addresses. 
Forwards packets between ISATAP hosts and hosts on other IPv6 subnets (optional). 
The other subnets can be subnets in an IPv6-capable portion of the organization's network or the 
IPv6 Internet. 
When an ISATAP host receives a router advertisement from an ISATAP router, it performs address 
autoconfiguration and configures additional IPv6 addresses on the ISATAP interface with the 
appropriate interface ID. 
If the ISATAP router advertises itself as a default router, the ISATAP host adds a default route (::/0) 
using the ISATAP interface with the next-hop address set to the link-local ISATAP address of the 
ISATAP router. When an ISATAP host sends packets destined to locations outside the logical ISATAP 
subnet, they are tunneled to the IPv4 address of the ISATAP router. The ISATAP router then forwards 
the IPv6 packet. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 444 
The IPv6 protocol for Windows Vista, Windows XP, Windows Server 2008, and Windows Server 2003 
obtains the IPv4 address of the ISATAP router through one of the following: 
The successful resolution of the name "ISATAP" to an IPv4 address. 
The  netsh interface isatap set router or netsh interface ipv6 isatap set router commands. 
Resolving the ISATAP Name 
When the IPv6 protocol for Windows starts, it attempts to resolve the name "ISATAP" to an IPv4 
address using the following TCP/IP name resolution techniques: 
Check the local host name. 
Check the DNS client resolver cache, which includes the entries in the Hosts file in the 
SystemRoot\system32\drivers\etc folder. 
Form a fully qualified domain name and sending a DNS name query. For example, if the computer 
running Windows is a member of the example.com domain (and example.com is the only domain name 
in the search list), the computer sends a DNS query to resolve the name isatap.example.com. 
Use Link-Local Multicast Name Resolution (LLMNR) to resolve the single-label name “ISATAP” 
(Windows Vista and Windows Server 2008 only). 
Convert the ISATAP name into the NetBIOS name "ISATAP         " and check the NetBIOS 
name cache. 
Send a NetBIOS name query to the configured Windows Internet Name Service (WINS) servers. 