I suspect most of the plugins don't work with noconflict mode, but I haven't
tested them.
I have bootstrap and jquery ui on the same page. jQuery ui starts, and creates
$.fn.tooltip. Then bootstrap starts and overwrites it, then I do:
    $.fn.bsTooltip = $.fn.tooltip.noConflict();
    $('.my-element').bsTooltip()
But, because of this:
    $.fn.tooltip = function ( option ) {
      return this.each(function () {
        var $this = $(this)
          , data = $this.data('tooltip') // HARDCODED TOOLTIP STRING
          , options = typeof option == 'object' && option
        if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))
        if (typeof option == 'string') data[option]()
      })
    }
and this:
    var Tooltip = function (element, options) {
        this.init('tooltip', element, options) // HARDCODED TOOLTIP STRING
    }
It fails, because the getOptions function is getting everything based on the
this.type, which is set by the Tooltip class as 'tooltip'...including the
tooltip data, but that's hardcoded to 'tooltip' in the first code block.