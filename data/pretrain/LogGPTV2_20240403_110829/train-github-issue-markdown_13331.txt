I would love to start using Babel to develop apps but I really need AMD
support. Everything works great until I want to use the `--optional runtime`
flag on my build.
Here is a sample file.
    import Foo from 'foo';
    export default "bar";
And the compiled output.
    "use strict";
    define(["exports", "module", "foo", "babel-runtime/helpers"], function (exports, module, _foo, _babelRuntimeHelpers) {
      var _babelHelpers = _babelRuntimeHelpers["default"];
      var Foo = _babelHelpers.interopRequire(_foo);
      module.exports = "bar";
    });
This all looks good and everything loads fine once I add a package called
`babel-runtime` to my config.
          var dojoConfig = {
            packages: [
              {
                name: 'babel-runtime',
                location: '/node_modules/babel-runtime'
              }
            ]
          };
But none of the runtime modules are actually AMD modules so they cant be
loaded. For example helpers.js looks like this.
    "use strict";
    var _core = require("babel-runtime/core-js")["default"];
    var helpers = exports["default"] = {};
    exports.__esModule = true;
Would it be possible to convert the runtime files to UMD so they could support
AMD loaders and build systems?