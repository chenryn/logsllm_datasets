---
## User options
**Plaform Authentication**
通过这些设置，可以配置 Burp 自动对目标 Web 服务器平台进行认证。可以为各个主机配置不同的身份验证类型和凭证。
支持的认证类型有：basic 基本认证、NTLMv1、NTLMv2 和摘要认证。域名和主机名字段仅用于 NTLM 身份验证。
"Prompt for credentials on platform authentication failure" 选项会使 Burp 在遇到身份验证失败时显示一个交互式弹出窗口。
例如遇到需要 NTLM 认证后，才能访问系统的目标
添加新的配置，认证方式选择 NTLMv2，然后重新发送请求就 ok 了
**Upstream Proxy Servers**
上面描述了需要 burp 走代理的使用情况，同样，在使用一些被动漏扫工具时也可以使用该功能将 burp 的流量转发至被动漏扫工具。
---
## 通过 proxifier 分流 burp
在渗透测试时，我们常遇到出现浏览器自己本身的包，以及一些不相干的网站流量的情况，如何避免，或者一劳永逸的解决呢？
在 Intercept Client Requests 配置忽略是一个方法,但是这个选项不支持批量导入
TLS Pass Through 支持批量导入,但又不是我需要的功能
不如换一种思路, 如果 burp 不能做到这种操作，我在流量到达 burp 前做个分流不就可以了嘛。
proxifier 是我们平时常用的 windows 端全局代理工具，通过配置 rule 可以轻松获得干净的 burp 流量
要求做到
- 命中规则的走 1080，就是在 burp 中看不到这个流量
- 未名字规则的 走 8080,burp 上可以看到
先创建代理服务器
然后创建规则
再创建一个默认的发给 burp
顺序如下,注意,顺序从上至下执行，非常重要，不能乱!!!!
如果这里面 rule burp 在上面那么,any 优先匹配, rule 1080就永远不会执行了
同样,Defalut 规则也尽量不要做修改。
这时候,chrome浏览器中默认所有流量全部发向 8080 口,而命中规则的流量发给 1080 ，再规则里配置你不想看到的域名即可，我个人的规则如下
- https://github.com/ffffffff0x/AboutSecurity/blob/master/Payload/Burp/Proxifier_filter.txt
效果
google 命中规则，发向 1080
freebug 未命中规则，发向 8080
完美, 一劳永逸的解决了所有问题, 更换 burp 版本也不受影响
---
## linux 命令行抓包
按教程测试一些poc，突然有抓脚本流量的需求，想到linux可以用 proxychains 把流量代理到 burp,测试下
```
vim /etc/proxychains.conf
http 192.168.1.xxx 8080
```
改成宿主机的地址,端口指向 burp 的端口
在 burp 里修改默认监听的网卡,不然虚拟机无法访问到
运行脚本测试下
可以在 burp 中查看相应的流量了
---
## 蓝队反制
**相关文章**
- [【技术分享】反制爬虫之Burp Suite RCE](https://mp.weixin.qq.com/s/FHvvUOLskvQ9QqVMboU8ng)
- [HTML Injection in Swing can disclose netNTLM hash or cause DoS](https://hackerone.com/reports/1054382)
### 特征识别
**相关文章**
- [Burpsuite 特征识别及其对抗措施](https://rmb122.com/2022/08/14/burpsuite-%E7%89%B9%E5%BE%81%E8%AF%86%E5%88%AB%E5%8F%8A%E5%85%B6%E5%AF%B9%E6%8A%97%E6%8E%AA%E6%96%BD/)
**favicon**
```html
Loading...
```
**导出证书接口**
```html
Loading...
```
在 Proxy -> Options -> Miscellaneous 中勾选 Disable web interface at http://burp
**报错页面**
```html
Loading...
```
在 Proxy -> Options -> Miscellaneous 中勾选 Suppress Burp error messages in browser