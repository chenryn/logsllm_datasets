title:On the Security and Usability of Crypto Phones
author:Maliheh Shirvanian and
Nitesh Saxena
When SIGNAL hits the Fan:
On the Usability and Security of State-of-the-Art
Secure Mobile Messaging
Svenja Schr¨oder
University of Vienna
Email: PI:EMAIL
Markus Huber, David Wind, Christoph Rottermanner
Email: {markus.huber, is121030, is121023}@fhstp.ac.at
St. P¨olten University of Applied Sciences
Abstract—In this paper we analyze the security and usability
of the state-of-the-art secure mobile messenger SIGNAL. In the
ﬁrst part of this paper we discuss the threat model current
secure mobile messengers face. In the following, we conduct a
user study to examine the usability of SIGNAL’s security features.
Speciﬁcally, our study assesses if users are able to detect and deter
man-in-the-middle attacks on the SIGNAL protocol. Our results
show that the majority of users failed to correctly compare keys
with their conversation partner for veriﬁcation purposes due to
usability problems and incomplete mental models. Hence users
are very likely to fall for attacks on the essential infrastructure of
today’s secure messaging apps: the central services to exchange
cryptographic keys. We expect that our ﬁndings foster research
into the unique usability and security challenges of state-of-the-
art secure mobile messengers and thus ultimately result in strong
protection measures for the average user.
I.
INTRODUCTION
Tools to securely communicate over the Internet, using
end-to-end (e2e) encryption, have been available for decades.
End-to-end encryption ensures that sensitive encryption keys
never leave users’ devices, and communication providers are
therefore unable to read exchanged messages. The ﬁrst gener-
ation of end-to-end encryption tools, such as PGP, however
lacks widespread adoption due to their bad usability [1],
[2], [3], [4]. Since the ﬁrst release of PGP three decades
ago,
two important aspects of secure messaging changed:
everyday communication via mobile devices continued to grow
as smartphones replace PCs [5] and the general awareness for
privacy and security increased.
The trend of communication via mobile devices and the
growing awareness for online privacy led to a number of new
secure mobile messengers. The Electronic Frontier Foundation
(EFF) provides an overview on the security properties of
current mobile messengers [6]. From a security perspective,
state-of-the-art mobile messengers can be split into two cat-
egories: messengers that provide client to server encryption
Permission to freely reproduce all or part of this paper for noncommercial
purposes is granted provided that copies bear this notice and the full citation
on the ﬁrst page. Reproduction for commercial purposes is strictly prohibited
without the prior written consent of the Internet Society, the ﬁrst-named author
(for reproduction of an entire paper only), and the author’s employer if the
paper was prepared within the scope of employment.
EuroUSEC ’16, 18 July 2016, Darmstadt, Germany
Copyright 2016 Internet Society, ISBN 1-891562-45-2
http://dx.doi.org/10.14722/eurousec.2016.23012
and messengers with end-to-end encryption. The ﬁrst category
of messengers allows service providers to read exchanged
messages, while the second group ensures that messages
can not be read by service providers. State-of-the-art end-
to-end encrypted mobile messengers only require users to
authenticate via their mobile number;
the generation and
exchange of cryptographic keys is handled transparently by
the applications. The transparent end-to-end encryption of
messages makes strong encryption accessible to the masses
but also creates new security challenges. As compared to PGP,
state-of-the-art secure mobile messenger applications rely on
centralized services to provide the cryptographic identities of
its users. This modus operandi results in the following security
challenge: if the key-exchange service is tampered with, either
willingly or by an attacker, the overall security of systems is
subverted. In order to account for the compromise of the key-
exchange service, mobile messaging apps therefore offer the
possibility to verify the cryptographic identities of other users
ultimately to establish the trust of exchanged encryption keys.
To the best of our knowledge we are the ﬁrst to study
the unique usability challenges of mobile end-to-end encrypted
messengers. Speciﬁcally, we perform a user study on SIGNAL
for Android [7]. SIGNAL originated from two separate mobile
applications [8] — TextSecure (encrypted instant messaging)
and RedPhone (encrypted phone calls). Due to its strong en-
cryption protocols and the availability of its source code under
an open source license, SIGNAL has become an important tool
for users who face surveillance [9]. In April 2016, the currently
most popular messenger app WHATSAPP [10], rolled out end-
to-end encrypted messaging, based on SIGNAL’s protocol, to
more than one billion users [11]. SIGNAL’s encryption protocol
thus became the de facto standard for end-to-end encrypted
mobile messaging. In this paper we present a usability study
of the messaging app SIGNAL including an exploration of
the users’ abilities to notice, handle and mitigate man-in-
the-middle (MITM) attacks during usage. Our MITM attack
simulates a compromised key-exchange service to ultimately
evaluate the usability of SIGNAL regarding the detection and
mitigation of such attacks. Our paper makes the following main
contributions:
• We performed a user study with 28 participants on the
usability of SIGNAL’s security features, the state-of-
the-art application for secure mobile messaging.
•
Our results showed that 21 of 28 participants failed to
compare encryption keys to verify the identity of other
users. The majority of these users however believed
they succeeded while in reality they failed.
Finally, we suggest improvements for the usability of
SIGNAL to better counter attacks on SIGNAL.
•
II. BACKGROUND
SIGNAL offers forward secrecy at the same time as asyn-
chronous message exchange. As such SIGNAL combines the
PGP-like asynchronous messaging with the security properties
of the OTR protocol [12]. Figure 1 shows a simpliﬁed de-
scription of the SIGNAL protocol, which is divided into three
phases (registration, session setup, and message exchange). We
point the interested reader to Frosch et al. [13] for a detailed
analysis of SIGNAL’s protocol.
Alice and Bob want to use SIGNAL to exchange end-to-end
encrypted messages.  Alice installs SIGNAL and veriﬁes her
mobile number at the SIGNAL Server with either a veriﬁcation
text message (SMS) or a voice call. Once veriﬁed, Alice
creates different sets of keys: a longtime asymmetric key-
pair called Identity Key Pair, 100 ephemeral key pairs
called One-Time Pre Keys as well as one Signed Pre
Key which is signed with the Identity Key. SIGNAL au-
tomatically uploads Alice’s Signed Pre Key as well as the
100 One-Time Pre Keys to its server.  Alice attempts
to establish a session with Bob and therefore requests a Pre
Key Bundle for Bob and Bob’s Identity Key from
SIGNAL’s central service. The Pre Key Bundle consists
of a single public One-Time Pre Key and the Signed
Pre Key of Bob. Based on the One-Time Pre Key and
the Signed Pre Key, Alice derives a symmetric Master
Key for future communication, and stores Bob’s Identity
Key.  Based on the Pre Key Bundles of each other,
both Alice and Bob derive the same Master Key, which
is used to create ephemeral Message Keys for the actual
message exchange.
The unique long-term Identity Key pair remains the same as
long as the user does not delete it by for example re-installing
the SIGNAL application. These Identity Keys are essential to
verify the identity of communication partners. The SIGNAL
application therefore stores the Identity Keys of other users as
soon as a secure session has been successfully established.
SIGNAL allows users to view this Identity Key within the
application. In order to make sure that communicating parties
received the correct Identity Keys, both parties have to verify
the public Identity Keys via an out-of-bound channel (e.g.
meet in person or via phone). This can be done by comparing
the hexadecimal representation of the key byte per byte or by
scanning the QR code of each other’s Identity Keys in person.
A. Threat Model
Our threat model accounts for the compromise of SIGNAL’s
central services. This compromise can be the result of targeted
attacks on SIGNAL’s service infrastructure or assistance of
SIGNAL’s team to a subpoena request. The compromise of
SIGNAL’s key server results in two different possible attacks:
 Attacks on the ﬁrst session setup do not result in direct
user feedback. This attack can only be detected by manually
Fig. 1. Exchange of encrypted message with SIGNAL: a central service is
used to exchange the public encryption keys — this service is critical for
SIGNAL’s security.
Fig. 2. Veriﬁcation of Identity Keys by scanning the each other’s QR codes.
On the left: a successful veriﬁcation. On the right: Warning because Identity
Keys did not match.
verifying e.g. over the phone or face-to-face via scanning
the QR codes. Consider Bob wants to initialize a secure
session with Alice, and Bob receives the attacker’s Identity
Key (Mallory’s Identity Key) instead of Alice’s Identity Key
which is then stored by SIGNAL as Alice’s identity.
 Attacks on established sessions where Bob has previ-
ously established a secure session with Alice and stored Alice’s
correct Identity Key. An attacker (Mallory) could force both
parties to re-negotiate a new communication session. In this
scenario the compromised SIGNAL server would respond with
the attacker’s Pre Key Bundle including the Signed Pre Key of
the attacker, and thus establishes a man-in-the-middle attack.
SIGNAL accounts for both of the attack scenarios of our
threat model. First, SIGNAL provides a feature to manually
verify established Identity Keys, outlined in Figure 2. Second,
SIGNAL warns users when it detects that long-term keys of
users change, see Figure 3. In our paper we study exactly how
usable and effective these two countermeasures of SIGNAL are.
III. EXPERIMENTAL DESIGN
We conducted a user study in a laboratory setting in
order to explore the usability of SIGNAL regarding its security
features. Our study consisted of two parts: a usability study
of the SIGNAL app with focus on SIGNAL’s instant messaging
and security features, and the execution of an actual MITM
attack with a subsequent assessment of the users’ reactions. To
gain insights into the participants’ motivations, strategies and
goals they were asked to constantly comment aloud on their
actions with the Think Aloud method [14], which facilitated
to understand the users’ mental models. User interaction and
voice were recorded with a camcorder. Participants had to
ﬁll out a consent form before the start of the study, as well
as a short questionnaire including demographics and general
attitude towards privacy and security regarding smartphones
and especially messaging apps. The study took place in the
usability lab of the COSY Research Group at the University
2
of Vienna, which provides two lab rooms for usability exper-
iments and an operator room. Two tests were conducted in
parallel, thus four operators (two in the operator room and
two in the respective test rooms) had to be present to conduct
the study in parallel.
A. Study Design
At
the beginning of the study, participants received a
set of instructions including all tasks and questionnaires, as
well as an Android device with SIGNAL pre-installed. Each
phone (Alice) had a contact entry for the conversation partner
(Bob), handled by an operator. The detailed technical set-
up is described in the next subsection. In the following we
describe the tasks participants had to complete as part of our
study. The ﬁrst part of the study focused on SIGNAL’s general
usability related to messaging and security features. In the ﬁrst
task users had to participate in a brief chat conversation with
Bob. Bob was simulated by an operator in the operator room.
In a second task, participants had to create a password and
subsequently export and import a backup of their messages
from the ﬁrst
task. With this task we aimed at covering
another basic security feature of SIGNAL. In-between the two
study parts the MITM attack was initiated by the operator.
In the second part, participants again had to exchange a few
more messages with Bob. Due to the MITM attack of our
simulated compromised SIGNAL server, this triggered an error
message about Bob’s mismatching key (see Figure 3). The task
description also asked users to verify Bob’s identity, after the
message exchange. Our instructions informed participants that
they could ask their chat partner Bob into the room at any
time. Bob (simulated by an operator) was instructed to play
a completely passive role and not to reveal any information
on the veriﬁcation task. Following the veriﬁcation task, the
participants had to ﬁll-in a debrieﬁng questionnaire aimed at
assessing the users’ mental model of the MITM attack, as
well as possible mitigation strategies, by using quantitative and
qualitative questions.
B. Technical Set-Up
In order to conduct our study with two persons in parallel,
two identical setups were used which were each adminis-
tered by one operator. One working setup consists of three
smartphones and one computer which was responsible for
intercepting the trafﬁc and for creating a WLAN hotspot for
the smartphone’s internet connectivity. All smartphones were
rooted and had Cydia Substrate [15] and SSLTrustKiller [16]