**Title: On the Security and Usability of Crypto Phones**

**Authors: Maliheh Shirvanian and Nitesh Saxena**

**When SIGNAL Hits the Fan: On the Usability and Security of State-of-the-Art Secure Mobile Messaging**

**Authors:**
- Svenja Schröder, University of Vienna, Email: [PI:EMAIL]
- Markus Huber, David Wind, Christoph Rottermanner, St. Pölten University of Applied Sciences, Email: {markus.huber, is121030, is121023}@fhstp.ac.at

**Abstract:**
In this paper, we analyze the security and usability of the state-of-the-art secure mobile messaging application, SIGNAL. We begin by discussing the threat model that current secure mobile messengers face. Subsequently, we conduct a user study to evaluate the usability of SIGNAL’s security features, specifically focusing on users' ability to detect and deter man-in-the-middle (MITM) attacks on the SIGNAL protocol. Our results indicate that the majority of users failed to correctly compare keys with their conversation partners for verification purposes, due to usability issues and incomplete mental models. Consequently, users are highly susceptible to attacks on the essential infrastructure of today’s secure messaging apps: the central services used to exchange cryptographic keys. We anticipate that our findings will stimulate further research into the unique usability and security challenges of state-of-the-art secure mobile messengers, ultimately leading to robust protection measures for the average user.

**I. Introduction**
Tools for secure communication over the Internet using end-to-end (e2e) encryption have been available for decades. End-to-end encryption ensures that sensitive encryption keys never leave users’ devices, making it impossible for communication providers to read exchanged messages. However, the first generation of e2e encryption tools, such as PGP, suffered from poor usability, which hindered widespread adoption [1], [2], [3], [4]. Since the initial release of PGP three decades ago, two significant changes have occurred in secure messaging: the increasing use of mobile devices for everyday communication and the growing awareness of privacy and security.

The trend towards mobile communication and the heightened concern for online privacy have led to the development of several new secure mobile messengers. The Electronic Frontier Foundation (EFF) provides an overview of the security properties of current mobile messengers [6]. From a security perspective, these messengers can be categorized into two groups: those that provide client-to-server encryption and those that offer end-to-end encryption. The former allows service providers to read exchanged messages, while the latter ensures that messages cannot be read by service providers. Modern end-to-end encrypted mobile messengers only require users to authenticate via their mobile number; the generation and exchange of cryptographic keys are handled transparently by the applications. This transparency makes strong encryption accessible to the masses but also introduces new security challenges. Unlike PGP, these messengers rely on centralized services to provide the cryptographic identities of users. If the key-exchange service is compromised, either willingly or by an attacker, the overall security of the system is undermined. To address this, mobile messaging apps offer the possibility to verify the cryptographic identities of other users, thereby establishing trust in the exchanged encryption keys.

To the best of our knowledge, this is the first study to examine the unique usability challenges of mobile end-to-end encrypted messengers. Specifically, we conducted a user study on SIGNAL for Android [7]. SIGNAL originated from two separate mobile applications—TextSecure (encrypted instant messaging) and RedPhone (encrypted phone calls). Due to its strong encryption protocols and open-source code, SIGNAL has become a crucial tool for users facing surveillance [9]. In April 2016, WHATSAPP, the most popular messenger app, rolled out end-to-end encrypted messaging based on SIGNAL’s protocol to over one billion users [10], [11]. Thus, SIGNAL’s encryption protocol has become the de facto standard for end-to-end encrypted mobile messaging. In this paper, we present a usability study of the SIGNAL messaging app, including an exploration of users’ abilities to notice, handle, and mitigate MITM attacks during usage. Our MITM attack simulates a compromised key-exchange service to evaluate the usability of SIGNAL regarding the detection and mitigation of such attacks. The main contributions of our paper are:

- We performed a user study with 28 participants to assess the usability of SIGNAL’s security features, the state-of-the-art application for secure mobile messaging.
- Our results showed that 21 out of 28 participants failed to correctly compare encryption keys to verify the identity of other users. The majority of these users believed they had succeeded when, in fact, they had not.
- We suggest improvements for the usability of SIGNAL to better counter attacks on the platform.

**II. Background**
SIGNAL offers forward secrecy while supporting asynchronous message exchange. It combines the PGP-like asynchronous messaging with the security properties of the OTR protocol [12]. Figure 1 provides a simplified description of the SIGNAL protocol, which is divided into three phases: registration, session setup, and message exchange. For a detailed analysis of SIGNAL’s protocol, we refer the reader to Frosch et al. [13].

Alice and Bob want to use SIGNAL to exchange end-to-end encrypted messages. Alice installs SIGNAL and verifies her mobile number at the SIGNAL server using either a verification text message (SMS) or a voice call. Once verified, Alice generates different sets of keys: a long-term asymmetric key pair called the Identity Key Pair, 100 ephemeral key pairs called One-Time Pre Keys, and one Signed Pre Key, which is signed with the Identity Key. SIGNAL automatically uploads Alice’s Signed Pre Key and the 100 One-Time Pre Keys to its server. Alice then attempts to establish a session with Bob by requesting a Pre Key Bundle for Bob and Bob’s Identity Key from the SIGNAL server. The Pre Key Bundle consists of a single public One-Time Pre Key and the Signed Pre Key of Bob. Based on these keys, Alice derives a symmetric Master Key for future communication and stores Bob’s Identity Key. Both Alice and Bob derive the same Master Key, which is used to create ephemeral Message Keys for the actual message exchange.

The long-term Identity Key pair remains the same as long as the user does not delete it, for example, by re-installing the SIGNAL application. These Identity Keys are essential for verifying the identity of communication partners. The SIGNAL application stores the Identity Keys of other users once a secure session has been successfully established. Users can view this Identity Key within the application. To ensure that communicating parties have received the correct Identity Keys, both parties must verify the public Identity Keys via an out-of-band channel (e.g., meeting in person or via phone). This can be done by comparing the hexadecimal representation of the key byte per byte or by scanning each other’s QR codes in person.

**A. Threat Model**
Our threat model accounts for the compromise of SIGNAL’s central services. This compromise can result from targeted attacks on SIGNAL’s service infrastructure or from the assistance of SIGNAL’s team in response to a subpoena request. The compromise of SIGNAL’s key server can lead to two types of attacks:

1. **Attacks on the First Session Setup:** These attacks do not result in direct user feedback and can only be detected by manually verifying, for example, over the phone or face-to-face via scanning QR codes. If Bob wants to initialize a secure session with Alice and receives the attacker’s Identity Key (Mallory’s Identity Key) instead of Alice’s, SIGNAL will store Mallory’s Identity Key as Alice’s identity.

2. **Attacks on Established Sessions:** If Bob has previously established a secure session with Alice and stored Alice’s correct Identity Key, an attacker (Mallory) could force both parties to re-negotiate a new communication session. In this scenario, the compromised SIGNAL server would respond with the attacker’s Pre Key Bundle, including the Signed Pre Key of the attacker, thus establishing a MITM attack.

SIGNAL addresses both attack scenarios in our threat model. First, it provides a feature to manually verify established Identity Keys, as shown in Figure 2. Second, SIGNAL warns users when it detects that long-term keys of users change, as illustrated in Figure 3. In this paper, we study the usability and effectiveness of these two countermeasures in SIGNAL.

**III. Experimental Design**
We conducted a user study in a laboratory setting to explore the usability of SIGNAL regarding its security features. The study consisted of two parts: a usability study of the SIGNAL app, focusing on its instant messaging and security features, and the execution of an actual MITM attack, followed by an assessment of the users’ reactions. To gain insights into the participants’ motivations, strategies, and goals, we asked them to comment aloud on their actions using the Think Aloud method [14]. User interactions and voice were recorded with a camcorder. Participants filled out a consent form before the study and a short questionnaire about demographics and their general attitude towards privacy and security regarding smartphones and messaging apps. The study took place in the usability lab of the COSY Research Group at the University of Vienna, which provides two lab rooms for usability experiments and an operator room. Two tests were conducted in parallel, requiring four operators (two in the operator room and two in the respective test rooms).

**A. Study Design**
At the beginning of the study, participants received a set of instructions, including all tasks and questionnaires, and an Android device with SIGNAL pre-installed. Each phone (Alice) had a contact entry for the conversation partner (Bob), who was simulated by an operator. The detailed technical setup is described in the next subsection. The tasks participants had to complete were as follows:

1. **General Usability of SIGNAL:**
   - **Task 1:** Participants engaged in a brief chat conversation with Bob, who was simulated by an operator in the operator room.
   - **Task 2:** Participants created a password and subsequently exported and imported a backup of their messages from Task 1. This task covered another basic security feature of SIGNAL.

2. **MITM Attack Simulation:**
   - **Task 3:** Participants again exchanged messages with Bob. Due to the MITM attack initiated by the operator, this triggered an error message about Bob’s mismatching key (see Figure 3). Participants were instructed to verify Bob’s identity after the message exchange. They could ask their chat partner Bob into the room at any time, but Bob (simulated by an operator) was instructed to play a passive role and not reveal any information about the verification task.
   - **Debriefing Questionnaire:** Following the verification task, participants filled out a debriefing questionnaire to assess their mental model of the MITM attack and possible mitigation strategies, using both quantitative and qualitative questions.

**B. Technical Setup**
To conduct the study with two participants in parallel, two identical setups were used, each administered by one operator. Each setup consisted of three smartphones and one computer responsible for intercepting traffic and creating a WLAN hotspot for the smartphones’ internet connectivity. All smartphones were rooted and had Cydia Substrate [15] and SSLTrustKiller [16] installed.