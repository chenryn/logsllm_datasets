### NFC Emulation and Fuzzing Test Results

#### Emulation Capabilities
- **Type 1 (Topaz)**
  - **Status**: Cannot emulate at this time.
- **Type 3 (FelCa)**
  - **Status**: Cannot emulate at this time.

#### LLCP (Logical Link Control Protocol) Testing
- **LLCP - Connect**
  - **Test Cases**: 2000
  - **Results/Notes**: 19 bytes of header information, with some crashes observed.
- **LLCP - I**
  - **Test Cases**: 2000
  - **Results/Notes**: 13 bytes of header information, with some crashes observed.

#### Application Layer Testing
A total of 52,362 test cases were performed against the Nexus S. The results are detailed below:

- **Nexus S**
  - **NDEF - Bitflip**
    - **Test Cases**: 9000
    - **Method**: Mutation-based
  - **NDEF - Short Text**
    - **Test Cases**: 1626
    - **Method**: Generation-based
  - **NDEF - Short URI**
    - **Test Cases**: 538
    - **Method**: Generation-based
  - **NDEF - Short SMS**
    - **Test Cases**: 1265
    - **Method**: Generation-based
  - **NDEF - Short SP**
    - **Test Cases**: 3675
    - **Method**: Generation-based
  - **NDEF - Short BT**
    - **Test Cases**: 1246
    - **Method**: Generation-based
  - **NDEF - Long Text**
    - **Test Cases**: 2440
    - **Method**: Generation-based
  - **NDEF - Long vCard**
    - **Test Cases**: 32,572
    - **Method**: Generation-based

#### Crash Analysis
- **Most Common Crash: Tags Application**
  - The default Android NFC tag reader application, written in Java, frequently crashed. These crashes correspond to Java exceptions rather than memory corruption.
  - **Example Log**:
    ```
    E/NfcService(17875): failed to parse record
    E/NfcService(17875): java.lang.ArrayIndexOutOfBoundsException
    E/NfcService(17875): at com.android.nfc.NfcService$NfcServiceHandler.parseWellKnownUriRecord(NfcService.java:2570)
    E/NfcService(17875): at com.android.nfc.NfcService$NfcServiceHandler.setTypeOrDataFromNdef(NfcService.java:2616)
    E/NfcService(17875): at com.android.nfc.NfcService$NfcServiceHandler.dispatchTagInternal(NfcService.java:2713)
    ```

- **NFC Service Crashes**
  - During low-level fuzzing, the NFC Service, which is the default Android NFC processing service, also crashed.
  - **Example Log**:
    ```
    D/NdefPushServer(3130): java.io.IOException
    D/NdefPushServer(3130): at com.android.internal.nfc.LlcpSocket.receive(LlcpSocket.java:193)
    D/NdefPushServer(3130): at com.android.nfc.ndefpush.NdefPushServer$ConnectionThread.run(NdefPushServer.java:70)
    W/dalvikvm(3130): threadid=8: thread exiting with uncaught exception (group=0x40015560)
    E/AndroidRuntime(3130): FATAL EXCEPTION: NdefPushServer
    E/AndroidRuntime(3130): java.lang.NegativeArraySizeException
    E/AndroidRuntime(3130): at com.android.nfc.ndefpush.NdefPushProtocol.(NdefPushProtocol.java:97)
    E/AndroidRuntime(3130): at com.android.nfc.ndefpush.NdefPushServer$ConnectionThread.run(NdefPushServer.java:86)
    ```

- **Native Code Crashes**
  - Several native code crashes were observed during the handling of LLCP packets.
  - **Example Log**:
    ```
    D/NdefPushServer(13178): starting new server thread
    D/NdefPushServer(13178): about create LLCP service socket
    D/NdefPushServer(13178): created LLCP service socket
    D/NdefPushServer(13178): about to accept
    D/NFC JNI (13178): Discovered P2P Target
    D/NfcService(13178): LLCP Activation message
    E/NFC JNI (13178): phLibNfc_Llcp_CheckLlcp() returned 0x00ff[NFCSTATUS_FAILED]
    I/DEBUG (73): Build fingerprint: 'google/sojua/crespo:2.3.3/GRI54/105536:user/release-keys'
    I/DEBUG (73): pid: 13178, tid: 13178 >>> com.android.nfc
    I/DEBUG (73): #01 pc 00013e08 /system/lib/libc.so
    I/DEBUG (73): #02 pc 0001423e /system/lib/libc.so
    I/DEBUG (73): #03 pc 000142ac /system/lib/libc.so
    I/DEBUG (73): #04 pc 0001451a /system/lib/libc.so
    I/DEBUG (73): #05 pc 0001abf0 /system/lib/libbinder.so
    I/DEBUG (73): #06 pc 0001ad0c /system/lib/libbinder.so
    I/DEBUG (73): #07 pc 0001ae68 /system/lib/libbinder.so
    I/DEBUG (73): #08 pc 0001aea8 /system/lib/libbinder.so
    I/DEBUG (73): #09 pc 0001aed4 /system/lib/libbinder.so
    I/DEBUG (73): #10 pc 0001aef8 /system/lib/libbinder.so
    ```

- **Heap Corruption**
  - A crash was observed due to a call to `abort` from `dlfree()`, indicating potential heap corruption.
  - **Example Log**:
    ```
    D/NFC JNI (27180): phLibNfc_Mgt_UnConfigureDriver() returned 0x0000[NFCSTATUS_SUCCESS]
    I/DEBUG (73): #00 pc 00015ca4 /system/lib/libc.so
    I/DEBUG (73): #01 pc 00013614 /system/lib/libc.so
    I/DEBUG (73): #02 pc 000144da /system/lib/libc.so
    I/DEBUG (73): #03 pc 0004996e /system/lib/libdvm.so
    I/DEBUG (73): #04 pc 00053fda /system/lib/libdvm.so
    I/DEBUG (73): #05 pc 000494da /system/lib/libdvm.so
    I/DEBUG (73): #06 pc 00005310 /system/lib/libnfc_jni.so
    I/DEBUG (73): #07 pc 000118e4 /system/lib/libc.so
    ```

- **Initialization Crashes**
  - A final call to `abort` from `dlmalloc` was observed during initialization.
  - **Example Log**:
    ```
    I/DEBUG (73): #00 pc 00015ca4 /system/lib/libc.so
    I/DEBUG (73): #01 pc 00013e08 /system/lib/libc.so
    I/DEBUG (73): #02 pc 000144be /system/lib/libc.so
    I/DEBUG (73): #03 pc 000509c8 /system/lib/libdvm.so
    I/DEBUG (73): #04 pc 000533f8 /system/lib/libdvm.so
    ```

This comprehensive analysis provides insights into the vulnerabilities and potential security issues in the NFC implementation on the Nexus S device.