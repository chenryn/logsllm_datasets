  连接类型     默认指标值
  ------------ ------------
  VPN          50
  Ethernet     100
  MACsec       125
  InfiniBand   150
  Bond         300
  Team         350
  VLAN         400
  Bridge       425
  TUN          450
  Wi-Fi        600
  IP tunnel    675
:::
::: itemizedlist
**其他资源**
-   [配置基于策略的路由以定义其他路由](#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html "第 22 章 配置基于策略的路由以定义其他路由"){.link}
-   [多路径 TCP
    入门](#getting-started-with-multipath-tcp_configuring-and-managing-networking.html "第 30 章 多路径 TCP 入门"){.link}
:::
:::
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting}配置 NetworkManager 以避免使用特定配置集提供默认网关 {.title}
:::
您可以配置
NetworkManager，使其不会使用特定配置集提供默认网关。对于没有连接到默认网关的连接配置集，请按照以下步骤操作。
::: itemizedlist
**先决条件**
-   存在未连接到默认网关的连接的 NetworkManager 连接配置集。
:::
::: orderedlist
**流程**
1.  如果连接使用动态 IP 配置，请配置 NetworkManager 不使用连接作为 IPv4
    和 IPv6 连接的默认路由：
    ``` literallayout
    # nmcli connection modify connection_name ipv4.never-default yes ipv6.never-default yes
    ```
    请注意，将 `ipv4.never-default`{.literal} 和
    `ipv6.never-default`{.literal} 设置为
    `yes`{.literal}，自动从连接配置集为对应协议删除默认网关的 IP 地址。
2.  激活连接：
    ``` literallayout
    # nmcli connection up connection_name
    ```
:::
::: itemizedlist
**验证步骤**
-   使用 `ip -4`{.literal} 路由和 `ip -6 route`{.literal} 命令，验证
    RHEL 是否在 IPv4 和 IPv6 协议的默认路由中使用网络接口。
:::
:::
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_fixing-unexpected-routing-behavior-due-to-multiple-default-gateways_managing-the-default-gateway-setting}修复因为多个默认网关导致的意外路由行为 {.title}
:::
只有在很少情况下（比如使用多路径 TCP
时），在主机上需要多个默认网关。在大多数情况下，您只配置一个默认网关以避免意外路由行为或异步路由问题。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要将流量路由到不同的互联网供应商，请使用基于策略的路由而不是多个默认网关。
:::
::: itemizedlist
**先决条件**
-   主机使用 NetworkManager 管理网络连接，这是默认设置。
-   主机有多个网络接口。
-   主机配置了多个默认网关。
:::
::: orderedlist
**流程**
1.  显示路由表：
    ::: itemizedlist
    -   对于 IPv4，请输入：
        ``` literallayout
        # ip -4 route
        default via 192.0.2.1 dev enp1s0 proto static metric 101
        default via 198.51.100.1 dev enp7s0 proto static metric 102
        ...
        ```
    -   对于 IPv6，请输入：
        ``` literallayout
        # ip -6 route
        default via 2001:db8:1::1 dev enp1s0 proto static metric 101 pref medium
        default via 2001:db8:2::1 dev enp7s0 proto static metric 102 pref medium
        ...
        ```
    :::
    以 `default`{.literal} 开头的条目代表默认路由。记下 `dev`{.literal}
    旁边显示这些条目的接口名称。
2.  使用以下命令显示使用您在上一步中获得的接口的 NetworkManager 连接：
    ``` literallayout
    # nmcli -f GENERAL.CONNECTION,IP4.GATEWAY,IP6.GATEWAY device show enp1s0
    GENERAL.CONNECTION:      Corporate-LAN
    IP4.GATEWAY:             192.168.122.1
    IP6.GATEWAY:             2001:db8:1::1
    # nmcli -f GENERAL.CONNECTION,IP4.GATEWAY,IP6.GATEWAY device show enp7s0
    GENERAL.CONNECTION:      Internet-Provider
    IP4.GATEWAY:             198.51.100.1
    IP6.GATEWAY:             2001:db8:2::1
    ```
    在这些示例中，名为 `Corporate-LAN`{.literal} 和
    `Internet-Provider`{.literal}
    的配置集设置了默认网关。因为在本地网络中，默认网关通常是一个与互联网更接近互联网的主机，所以此流程的其余部分假设
    enterprise `-LAN`{.literal} 中的默认网关不正确。
3.  配置 NetworkManager 不使用 enterprise `-LAN`{.literal} 连接作为 IPv4
    和 IPv6 连接的默认路由：
    ``` literallayout
    # nmcli connection modify Corporate-LAN ipv4.never-default yes ipv6.never-default yes
    ```
    请注意，将 `ipv4.never-default`{.literal} 和
    `ipv6.never-default`{.literal} 设置为
    `yes`{.literal}，自动从连接配置集为对应协议删除默认网关的 IP 地址。
4.  激活 enterprise `-LAN`{.literal} 连接：
    ``` literallayout
    # nmcli connection up Corporate-LAN
    ```
:::
::: itemizedlist
**验证步骤**
-   显示 IPv4 和 IPv6 路由表，并确认每个协议都只有一个默认网关：
    ::: itemizedlist
    -   对于 IPv4，请输入：
        ``` literallayout
        # ip -4 route
        default via 192.0.2.1 dev enp1s0 proto static metric 101
        ...
        ```
    -   对于 IPv6，请输入：
        ``` literallayout
        # ip -6 route
        default via 2001:db8:1::1 dev enp1s0 proto static metric 101 pref medium
        ...
        ```
    :::
:::
::: itemizedlist
**其他资源**
-   [配置基于策略的路由以定义其他路由](#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html "第 22 章 配置基于策略的路由以定义其他路由"){.link}
-   [多路径 TCP
    入门](#getting-started-with-multipath-tcp_configuring-and-managing-networking.html "第 30 章 多路径 TCP 入门"){.link}
:::
:::
:::
[]{#configuring-static-routes_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-static-routes_configuring-and-managing-networking}第 21 章 配置静态路由 {.title}
:::
默认情况下，如果配置了默认网关，Red Hat Enterprise Linux
会将没有直接连接到主机的网络流量转发到默认网关。使用静态路由，您可以配置
Red Hat Enterprise Linux
将特定主机或网络的流量转发到不同于默认网关的不同路由器。本节论述了配置静态路由的不同选项。
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#how-to-use-the-nmcli-command-to-configure-a-static-route_configuring-static-routes}如何使用 nmcli 命令配置静态路由 {.title}
:::
要配置静态路由，请使用以下语法使用 `nmcli`{.literal} 工具：
``` literallayout
$ nmcli connection modify connection_name ipv4.routes "ip[/prefix] [next_hop] [metric] [attribute=value] [attribute=value] ..."
```
该命令支持以下路由属性：
::: itemizedlist
-   `cwnd=n`{.literal} ：设置拥塞窗口(CWND)大小，以数据包数量定义。
-   `lock-cwnd=true|false`{.literal} ：定义内核是否能够更新 CWND 值。
-   `lock-mtu=true|false`{.literal} ：定义内核是否可以将 MTU 更新为路径
    MTU 发现。
-   `lock-window=true|false`{.literal} ：定义内核是否可更新 TCP
    数据包的最大窗口大小。
-   `mtu=n`{.literal}
    ：设置要与目的地的路径一起使用的最大传输单元(MTU)。
-   `onlink=true|false`{.literal}
    ：定义下一个跃点是否直接附加到此链接，即使它与任何接口前缀都不匹配。
-   `scope=n`{.literal}: 对于 IPv4
    路由，此属性设置路由前缀所涵盖的目的地范围。将值设为整数(0-255)。
-   `src=address`{.literal}
    ：将源地址设置为偏好将流量发送到路由前缀所涵盖的目的地。
-   `table=table_id`{.literal} ：设置路由应添加到的表的
    ID。如果省略此参数，NetworkManager 将使用 `main`{.literal} 表。
-   `tos=n`{.literal} ：设置服务(TOS)密钥类型。将值设为整数(0-255)。
-   `type=value`{.literal} ：设置路由类型。NetworkManager 支持
    `单播`{.literal}、`本地`{.literal}、`黑色`{.literal}、`不可访问`{.literal}
    且 `禁止`{.literal} 路由类型。默认为 `unicast`{.literal}。
-   `window=n`{.literal} ：设置 TCP
    的最大窗口大小，以字节形式播发这些目的地。
:::
如果使用 `ipv4.routes`{.literal} 子命令，`nmcli`{.literal}
会覆盖这个参数的所有当前设置。要添加额外路由，请使用
`nmcli connection modify connection_name +ipv4.routes "…​"`{.literal}
命令。类似地，您可以使用
`nmcli connection modify connection_name -ipv4.routes "…​"`{.literal}
来删除特定的路由。
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-an-nmcli-command_configuring-static-routes}使用 nmcli 命令配置静态路由 {.title}
:::
您可以使用 `nmcli connection modify`{.literal}
命令在网络连接配置中添加静态路由。
本节中的步骤论述了如何将路由添加到 `192.0.2.0/24`{.literal}
网络，该网络使用 `198.51.100.1`{.literal} 上运行的网关，该网关可通过
`示例`{.literal} 连接访问。
::: itemizedlist
**先决条件**
-   网络已配置
-   静态路由的网关必须在接口上直接访问。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，命令需要
    `root`{.literal} 权限。
:::
::: orderedlist
**步骤**
1.  在 `示例连接中添加静态路由`{.literal} ：
    ``` literallayout
    $ sudo nmcli connection modify example +ipv4.routes "192.0.2.0/24 198.51.100.1"
    ```
    要在一个步骤中设置多个路由，使用逗号分隔单个路由传递给该命令。例如，要将路由添加到
    `192.0.2.0/24`{.literal} 和 `203.0.113.0/24`{.literal}
    网络，两个都通过 `198.51.100.1`{.literal} 网关进行路由，请输入：
    ``` literallayout
    $ sudo nmcli connection modify example +ipv4.routes "192.0.2.0/24 198.51.100.1, 203.0.113.0/24 198.51.100.1"
    ```
2.  （可选）验证路由是否已正确添加到配置中：
    ``` literallayout
    $ nmcli connection show example
    ...
    ipv4.routes:        { ip = 192.0.2.1/24, nh = 198.51.100.1 }
    ...
    ```
3.  重启网络连接：
    ``` literallayout
    $ sudo nmcli connection up example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    重启连接会破坏那个接口的连接。
    :::
4.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
::: itemizedlist
**其他资源**
-   `nmcli(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-control-center_configuring-static-routes}使用 control-center 配置静态路由 {.title}
:::
您可以在 GNOME 中使用
`control-center`{.literal}，为网络连接配置添加静态路由。
本节中的步骤论述了如何将路由添加到 `192.0.2.0/24`{.literal}
网络，该网络使用在 `198.51.100.1`{.literal} 上运行的网关。
::: itemizedlist
**先决条件**
-   网络已配置。
-   静态路由的网关必须在接口上直接访问。
-   连接的网络配置在 `control-center`{.literal}
    应用程序中打开。请参阅[使用 nm-connection-editor
    配置以太网连接。](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-an-ethernet-connection-using-nm-connection-editor_configuring-an-ethernet-connection "使用 nm-connection-editor 配置以太网连接"){.link}
:::
::: orderedlist
**步骤**
1.  打开 `IPv4`{.literal} 选项卡。
2.  （可选）通过单击 `IPv4`{.literal} 标签 `的路由`{.literal} 部分中的
    [On]{.guibutton}
    按钮来禁用自动路由，以仅使用静态路由。如果启用了自动路由，Red Hat
    Enterprise Linux 将使用静态路由和从 DHCP 服务器接收的路由。
3.  输入地址、子网掩码、网关和可选的指标值：
    [![IPv4 static route in control