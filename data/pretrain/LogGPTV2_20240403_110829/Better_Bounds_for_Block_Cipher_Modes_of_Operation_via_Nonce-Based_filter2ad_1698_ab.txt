multi-key claim on AES via reduction to the single key case, and
it is this reduction that is meaningless. (The reduction states that
X implies Y, and is supposed to prove that X is false since Y is
false. However, the resulting Y is clearly true, and thus this implies
nothing about X.)
As such, in this section, we will provide a direct formalization of
multi-instance security and state the accepted assumption regarding
the security of AES.
Block cipher – single instance. A block cipher E = Ek with block
size n and key size κ is a family of permutations over {0, 1}n, indexed
by the key k ∈ {0, 1}κ. Denote by AdvPRPE (t, B) the advantage of
distinguishing E (with a key chosen uniformly at random) from
a random permutation over {0, 1}n, for all adversaries running
in at most t steps and making at most B queries to the oracle
O(·) = Ek (·). Note that each query is a single block, and thus B
denotes the number of blocks queried to the oracle.
Specifying the multi-instance adversary. Informally, we wish to
consider adversaries that interact with N di(cid:29)erent instances of the
block cipher (each with an independent key). In order to analyze
security, we need to consider two parameters: how many times
each instance was queried, and the maximum number of di(cid:29)erent
instances that the same block was queried to. We now formalize
this.
We consider an adversary A given access to a series of block
cipher instances. Formally, the adversary is given a single oracle,
and de(cid:27)ning that the adversary’s oracle query includes an index
saying which of the instances in the series it is querying, together
with the actual input to that instance. We assume that the adversary
makes distinct queries to every instance (i.e., A does not make
super(cid:30)uous queries), and we denote by Bi the number of queries
made by A to the ith instance. Let N be the number of di(cid:29)erent
instances and let (cid:126)B = (B1, . . . , BN). Let Ni be the set of queries
made to the ith instance (and thus |Ni| = Bi). Then, the frequency
of an input x is the number of sets Ni such that x ∈ Ni, and the
maximum frequency is the maximum over the frequencies of all
inputs. We say that A is a (t, N, (cid:126)B, µ)-adversary if:
• A runs in at most t steps,
• A interacts with at most N instances,
• A queries the ith instance at most Bi times, and
• The maximum query frequency is µ.
De(cid:27)ning multi-instance security. The most straightforward way
of de(cid:27)ning the security of a block cipher in the multi-instance
setting is simply as a standard pseudorandom function experiment,
but with a series of oracles, as above. (Note that we are interested
in the distance of the block cipher from a pseudorandom function
and not from a permutation.) A (cid:27)rst attempt at the de(cid:27)nition is as
follows:
– (cid:27)rst attempt:
Experiment ExptPRFNA,E
(1) Choose a random b ← {0, 1}, random keys
k1, . . . , kN ← {0, 1}κ and random functions
f1, . . . , fN from {0, 1}n to {0, 1}n.
(2) If b = 0 then set O(i, x ) = fi (x ); if b = 1 then
set O(i, x ) = Eki (x ).
(3) Obtain b(cid:48) ← AO(·,·) (λ).
(4) Output 1 if and only if b(cid:48) = b.
Although natural as a de(cid:27)nition, this actually is not su(cid:28)cient in
the case that N is very large. This is because in such a case, an
adversary can carry out the following attack which has nothing
to do with the security of the block cipher: for every i = 1, . . . , N,
query O(i, 0n ) and O(i, 1n ). If there exist distinct i, j such that
O(i, 0n ) = O(j, 0n ) and O(i, 1n ) = O(j, 1n ), then output 1; else,
output 0. Now, if b = 1, then the probability that ki = kj for
some i, j is N2
2n+1 . In contrast, if b = 0, then the probability that
fi (0n ) = fj (0n ) and fi (1n ) = fj (1n ) for some i, j is N2
22n . Thus, if
N = 2n/2, then it follows that an adversary can distinguish with
very high probability. Although this attack works, it actually does
not represent any real attack on the block cipher. Rather, if ki = kj
then this just means that e(cid:29)ectively the ith instance is queried
Bi + Bj times and it makes no di(cid:29)erence (there may be settings
where it does makes a di(cid:29)erence, but this is not the case here). We
therefore modify the experiment so that if ki = kj then fi = fj as
well. We have:
:
Experiment ExptPRFNA,E
(1) Choose a random b ← {0, 1}, random keys
k1, . . . , kN ← {0, 1}κ, and random functions
f1, . . . , fN from {0, 1}n to {0, 1}n, under the
constraint that if ki = kj then fi = fj.
(2) If b = 0 then set O(i, x ) = fi (x ); if b = 1 then
set O(i, x ) = Eki (x ).
(3) Obtain b(cid:48) ← AO(·,·) (1n )
(4) Output 1 if and only if b(cid:48) = b.
(cid:102)
As above, we de(cid:27)ne the advantage of the adversary to be
− 1.
= 2 · Prob
ExptPRFNA,E
= 1
(cid:103)
AdvPRFNA,E
An analogous de(cid:27)nition regarding distinguishing E from a random
permutation in a multikey setting can be formalized. We denote
the experiment and the associated advantage by ExptPRPNA,E
and
AdvPRPNA,E
, respectively.
2κ +1
Multi-instance security of ideal ciphers. We follow [18, Theorem
2] that discusses the ideal block cipher multi-key security. They
show that if E is an ideal cipher, then for every (t, N, (cid:126)B, µ)-adversary
trying to distinguish E from a random permutation, it holds that
AdvPRPNA,E ≤ N2+2N·TE
, where TE is the number of queries that
the adversary makes to the cipher with adversarially chosen keys.1
We extend their result to consider pseudorandom functions. In
addition, we provide a stronger result with better bounds, which is
based on the fact that in the analysis of [18], the adversary “wins” as
soon as two keys in two di(cid:29)erent instances are the same. However,
in our game, two keys in two di(cid:29)erent instances does not result in
the adversary succeeding, as discussed above. This enables us to
obtain a better bound, as in the following theorem:
Theorem 2.2. Let E be an ideal cipher with key of length k and
domain {0, 1}n. Then, for every (t, N, (cid:126)B, µ)-adversary making at most
1As shown in [6], an adversary can compute E on TE di(cid:29)erent keys with some (cid:27)xed
input x (independently of the oracle), and can then query x to all of the function
instances. If the adversary computed E on one of the actual keys, then it will distinguish.
The probability that an actual key was queried in the (cid:27)rst phase is TE /2κ and thus
overall this attack succeeds with probability N·TE2κ .
TE queries to E with adversarially chosen keys, it holds that
AdvPRFNA,E
≤ min
+ N · Bmax2
where Bmax = max{B1, . . . , BN}.
 N3
N2
2κ +1 +
 +
i =1 (Bi )
2n+1
(cid:80)N
6 · 22κ
2n
2
,
µ · TE
2κ
Proof. We use the terminology and setup of [18]. The proof
extends the considerations in [18, Theorem 2]. Let A be an ad-
versary in ExptPRFN, who makes queries to the oracle O(i, x ) of
the experiment, as well as queries to the ideal cipher E. Note that
the queries to the ideal cipher are of the form (k, x ), and the value
returned is Ek (x ).
Let Λ be the event that either:
(1) There is a 3-collision in the keys k1, . . . , kN chosen in
ExptPRFN; i.e., there are at least three indexes i, j, (cid:96) ∈ [N]
for which ki = kj = k(cid:96), or
(2) The adversary made a query to E (or its inverse) with a
chosen key ¯k, such that ¯k is one of k1, . . . , kN.
Before proceeding, we remark that there is nothing special about
considering a 3-collision and we could have considered the proba-
bility of a 4-collision or even higher. We simply use this to say that
if Λ has not happened, then each key appears at most twice in the
list (since there is no 3-collision). We are then able to analyze the
probability that A succeeds in such a case. (We do not de(cid:27)ne Λ via
a 2-collision since it yields a poor bound.)
We (cid:27)rst claim that the probability that Λ happens is bounded
from above by
.
+
µ · TE
2κ
Prob[Λ] ≤ N3
6 · 22κ
(2)
This follows from the fact that by Theorem 2.1, the probability that
there is a 3-collision is at most N3
6·22κ . Furthermore, as shown in [18],
the probability that the adversary makes a query as in condition (2)
is at most µ·TE2κ .
Assuming now that Λ does not happen. In this case, we can
divide the list k1, . . . , kN to two categories: s1 keys that appear only
once, and s2 (distinct) pairs of colliding keys that appear twice;
observe that s1 + 2s2 = N (since Λ does not occur, there are no
3-collisions, so these are all possibly categories).
Each pair ki , kj = k(cid:48) in the second category can be viewed as a
single key k(cid:48) which was used for at most Bi + Bj ≤ 2Bmax distinct
queries. Accordingly, there are, e(cid:29)ectively, N(cid:48) = s1 + s2 ≤ N keys.
Consequently, given that Λ does not happen, the queries to EK
(with N(cid:48) keys) plus the chosen key queries to the ideal cipher E,
are identical to queries to N(cid:48) random permutations plus the ideal
cipher queries. It therefore follows that
AdvPRPNA,E
= Prob[Λ].
Accounting for the standard advantage for distinguishing a random
function from a random permutation, which is
2n+1 for (cid:96) oracle
queries to a single key, we obtain
(cid:96)
2
AdvPRFNA,E ≤ Prob(Λ) + s1 · Bmax2
2n+1 + s2 · (2Bmax)
2n+1
2
.
This follows because the maximum number of queries to the in-
stances of keys that appear only once is Bmax, and the maximum
number to the queries appearing twice is 2Bmax. Eq. (3) is maxi-
mized (over all possible choices of s1, s2) when s1 = 0 and s2 = N/2
(although this event is highly unlikely). Thus,
AdvPRFNA,E ≤ Prob(Λ) + N
2
2 · (2Bmax)
2n+1
= Prob(Λ) + N · Bmax2
≤
2n
µ · TE
+ N · Bmax2
2κ
N3
6 · 22κ
+
(cid:80)N
.
2n
(3)
Finally, observe that the event where there are no key collisions
(i.e., s1 = N, s2 = 0) occurs with probability N2
2κ +1 . In this case, the
distinguishing probability between a random function and random
2n+1 , in the ith instance. Using the same arguments
permutation is (Bi )
as above, and a union bound over the di(cid:29)erence between a random
function and permutation for each instance, we have that
2
.
2
+
µ · TE
2κ
AdvPRFNA,E ≤ N2
i =1 (Bi )
2n+1
2κ +1 +
(4)
We can choose the minimum between the bounds in Eq. (3) and
Eq. (4), and this completes the proof.
(cid:3)
Remark 1. Observe that in the case that all Bi ’s are approximately
the same, the bound of Eq. (3) is almost certainly smaller than the
bound in Eq. (4). However, if Bi is very small for most values of i, and
only larger for a few, then the bound of Eq. (4) may be signi(cid:27)cantly
smaller. Thus, we include both bounds in the theorem statement.
Nevertheless, for the parameters that we are typically interested in, it
holds that N3
. Thus, in the sequel,
we will use the bound
i =1 (Bi )
2n+1
2κ +1 +
(cid:80)N
2
(5)
Assumption on AES. We make the following assumption on AES
2n
+
.
+ N · Bmax2
µ · TE
2κ
2n
6·22κ + N·Bmax2
< N2
AdvPRFNA,E ≤ N3
6 · 22κ
in the multi key scenario.
Assumption 1. AES behaves like the ideal cipher E in the multi-
instance setting. Thus, Eq. (5) holds for AES, with the addition of
N · AdvPRPAES (t, 2Bmax), which is assumed to be extremely small,
even for very large t and L.
This is merely an assumption that AES (with a uniform random
key) meets its design goals to be indistinguishable from a random
permutation even after viewing a large amount of outputs. This also
re(cid:30)ects the current state-of-the-art cryptanalysis of AES. We note
that AES is weaker than an ideal cipher in the context of related-key
attacks, which is outside the scope of its design goals. However,
in the setting that we consider here, no weakness is known. The
addition of N · AdvPRPAES (t, 2Bmax) is due to the fact that in our
analysis in the proof of Theorem 2.2, at most 2Bmax queries are
made per AES instance.
2.4 Encryption Security
Black-box encryption game. Our main theorem can be applied
to many di(cid:29)erent settings: CPA security, authenticated encryption,
nonce misuse-resistant authenticated encryption, and more. In or-
der to be able to apply the theorem in a general way, we begin by
de(cid:27)ning the notion of a black-box encryption game. Informally,
this is an encryption experiment that can be de(cid:27)ned via an oracle
given to the adversary, and can be run using only black-box access
to the block cipher. As we will show, all standard encryption games
are of this type.
Formally, consider the following experiment outline. Let O be
an oracle, let A be an adversary, and let Π = (Gen, Enc, Dec) be
an encryption scheme. We de(cid:27)ne:
Experiment ExptEncA,Π,O:
(1) Choose a random b ← {0, 1} and a random
(2) Compute b(cid:48) ← AO(b,k,·) (1κ ).
(3) Output 1 if and only if b(cid:48) = b.
key k ← Gen(1κ ).
De(cid:27)nition 2.3. An encryption experiment is called black box if
it is of the form ExptEnc with a speci(cid:27)ed (possibly stateful) oracle
O, and O can be computed using black-box access to a function or
series of functions.
1
E , . . . , QN
1
D , . . . , QN
E ), (cid:126)QD = (Q
By instantiating the oracle appropriately, it is possible to de-
(cid:27)ne standard eavesdropping adversaries, CPA-security (via an LR
oracle), CCA-security, nonce-misuse resistance and more. See Ap-
pendix A for these speci(cid:27)cations and the formal de(cid:27)nition of se-
curity using them. We say that A is a (t, N, (cid:126)QE , (cid:126)QD , (cid:126)B, a, m)-nonce
D ) and
adversary, with (cid:126)QE = (Q
(cid:126)B = (B1, . . . , BN), if it runs in at most t steps, queries its encryption
and decryption oracle with at most N di(cid:29)erent nonces, queries the
ith nonce with at most Qi
de-
E
cryption queries, the number of blocks processed with the ith nonce
in both encryption and decryption queries is Bi, the longest AAD is
less than 2a blocks and the longest message is less than 2m blocks.
We say that an adversary is a (t, N, QE , (cid:126)QD , (cid:126)B, a, m)-IV adversary if
it is as above, except that N refers to the number of di(cid:29)erent nonces