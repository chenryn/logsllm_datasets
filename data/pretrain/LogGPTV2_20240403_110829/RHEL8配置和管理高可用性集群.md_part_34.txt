## []{#assembly_configuring-node-placement-strategy-configuring-and-managing-high-availability-clusters.html#_node_preference}节点首选项 {.title}
:::
Pacemaker 根据以下策略决定在分配资源时首选哪个节点。
::: itemizedlist
-   节点权重最高的节点会首先被消耗。节点 weight
    是集群维护的分数，以表示节点健康状况。
-   如果多个节点具有相同的节点权重：
    ::: itemizedlist
    -   如果 `placement-strategy`{.literal} 集群属性是
        `default`{.literal} 或 `utilization`{.literal} ：
        ::: itemizedlist
        -   分配的资源最少的节点会首先被消耗。
        -   如果分配的资源数量相等，在 CIB
            中列出的第一个有资格的节点会首先被消耗。
        :::
    -   如果 `placement-strategy`{.literal} 集群属性是
        `balanced`{.literal} ：
        ::: itemizedlist
        -   具有最多可用容量的节点会首先被消耗。
        -   如果节点的空闲容量相等，首先消耗分配的资源数量最少的节点。
        -   如果节点的空闲容量相等，并且分配的资源数量相等，在 CIB
            中列出的第一个有资格的节点会首先被消耗。
        :::
    -   如果 `placement-strategy`{.literal} 集群属性是
        `minimal`{.literal}，则 CIB
        中列出的第一个有资格的节点会首先被使用。
    :::
:::
:::
::: section
::: titlepage
## []{#assembly_configuring-node-placement-strategy-configuring-and-managing-high-availability-clusters.html#_node_capacity}节点容量 {.title}
:::
Pacemaker 根据以下策略决定哪个节点拥有最多的可用容量。
::: itemizedlist
-   如果只定义了一种类型的使用属性，那么空闲容量就是一个简单的数字比较。
-   如果定义了多个类型的使用属性,那么在最多属性类型中数字最高的节点具有最大的可用容量。例如：
    ::: itemizedlist
    -   如果 NodeA 有更多可用 CPU，而 NodeB
        拥有更多可用内存，则它们的可用容量是相等的。
    -   如果 NodeA 有更多可用 CPU，而 NodeB 有更多可用内存和存储，则
        NodeB 具有更多可用容量。
    :::
:::
:::
::: section
::: titlepage
## []{#assembly_configuring-node-placement-strategy-configuring-and-managing-high-availability-clusters.html#_resource_allocation_preference}资源分配首选项 {.title}
:::
Pacemaker 根据以下策略决定优先分配哪些资源。
::: itemizedlist
-   优先级最高的资源会首先被分配。您可以在创建资源时设置资源优先级。
-   如果资源优先级相等，运行该资源的节点中分数最高的资源会首先被分配，以防止资源
    shuffling 的问题。
-   如果资源在运行资源的节点中的分数相等，或者资源没有运行，则首选节点上具有最高分数的资源会被首先分配。如果首选节点上的资源分数相等，则
    CIB 中列出的第一个可运行资源会首先被分配。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-node-placement-strategy-configuring-and-managing-high-availability-clusters.html#resource-placement-strategy-guidelines-configuring-node-placement-strategy}资源放置策略指南 {.title}
:::
为确保 Pacemaker
对资源放置策略最有效的工作，在配置系统时请考虑以下事项。
::: itemizedlist
-   请确定您有足够的物理容量。
    如果节点在通常情况下使用的物理容量接近近似的最大值，那么在故障切换过程中可能会出现问题。即使没有使用功能，您仍可能会遇到超时和二级故障。
-   在您为节点配置的功能中构建一些缓冲。
    假设 Pacemaker 资源不会使用 100% 配置的 CPU
    和内存量，所以所有时间都比您的物理资源稍多。这种方法有时被称为过量使用。
-   指定资源优先级。
    如果集群需要牺牲一些服务，则这些服务应该是对您最不重要的。确保正确设置资源优先级，以便首先调度最重要的资源。
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-node-placement-strategy-configuring-and-managing-high-availability-clusters.html#node-utilization-resource-agent-configuring-node-placement-strategy}NodeUtilization 资源代理 {.title}
:::
`NodeUtilization`{.literal} 重新配置代理可以检测可用
CPU、主机内存可用性和虚拟机监控程序内存可用性的系统参数，并将这些参数添加到
CIB 中。您可以将代理作为克隆资源运行，使其在每个节点上自动填充这些参数。
有关 `NodeUtilization`{.literal}
资源代理和此代理的资源选项的信息，请运行
`pcs resource describe NodeUtilization`{.literal} 命令。
:::
:::
[]{#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters.html#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters}第 24 章 将虚拟域配置为资源 {.title}
:::
您可以使用 `pcs resource create`{.literal} 命令将 `libvirt`{.literal}
虚拟化框架管理的虚拟域配置为集群资源，并将 `VirtualDomain`{.literal}
指定为资源类型。
当将虚拟域配置为资源时，请考虑以下事项：
::: itemizedlist
-   在将虚拟域配置为集群资源之前，应停止它。
-   一旦虚拟域是集群资源，除了通过集群工具外，它不应该启动、停止或迁移。
-   不要配置您已配置为集群资源的虚拟域，使其在主机引导时启动。
-   所有允许运行虚拟域的节点都必须有权访问该虚拟域所需的配置文件和存储设备。
:::
如果您希望集群管理虚拟域本身中的服务，可以将该虚拟域配置为客户机节点。
::: section
::: titlepage
# []{#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters.html#ref_virtual-domain-resource-options-configuring-virtual-domain-as-a-resource}虚拟域资源选项 {.title}
:::
下表介绍了您可以为 `VirtualDomain`{.literal} 资源配置的资源选项。
::: table
[]{#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters.html#tb-virtdomain-options-HAAR}
**表 24.1. 虚拟域资源资源选项**
::: table-contents
  项                                          默认值             描述
  ------------------------------------------- ------------------ ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `config`{.literal}                                             （必需）到此虚拟域的 `libvirt`{.literal} 配置文件的绝对路径。
  `hypervisor`{.literal}                      依赖系统           要连接的虚拟机管理器 URI。您可以通过运行 `virsh --quiet uri`{.literal} 命令来确定系统的默认 URI。
  `force_stop`{.literal}                      `0`{.literal}      在停止时总是强制关闭（\"destroy\"）域。默认的行为是仅在安全关闭尝试失败后强制关闭。只有在您的虚拟域（或您的虚拟化后端）不支持安全关闭时，才应将其设置为 `true`{.literal}。
  `migration_transport`{.literal}             依赖系统           迁移时用来连接到远程管理程序的传输。如果省略此参数，资源将使用 `libvirt`{.literal} 的默认传输连接到远程 hypervisor。
  `migration_network_suffix`{.literal}                           使用专用的迁移网络。迁移 URI 由在节点名称末尾添加此参数的值组成。如果节点名称是一个完全限定域名（FQDN），在 FQDN 的第一个句点（.）前插入后缀。确定由此组成的主机名可在本地被解析，相关的 IP 地址可以通过网络被访问。
  `monitor_scripts`{.literal}                                    要额外监控虚拟域中的服务，请使用要监控的脚本列表添加这个参数。[*注意*]{.emphasis} ：当使用监控脚本时，只有所有监控脚本都成功完成时，`start`{.literal} 和 `migrate_from`{.literal} 操作才会完成。请确定设置这些操作的超时时间，以适应这个延迟
  `autoset_utilization_cpu`{.literal}         `true`{.literal}   如果设置为 `true`{.literal}，代理将通过 `virsh`{.literal} 检测 `domainU`{.literal} 的 `vCPU`{.literal} 数，并在执行监控时将其置于资源的 CPU 使用率中。
  `autoset_utilization_hv_memory`{.literal}   `true`{.literal}   如果设置为 true，代理会通过 `virsh`{.literal} 检测 `Max memory`{.literal} 的数量，并在执行监控将其置于源的 `hv_memory`{.literal} 使用率中。
  `migrateport`{.literal}                     随机高端口         此端口将用在 `qemu`{.literal} 迁移 URI 中。如果未设置，则端口将是一个随机高端口。
  `snapshot`{.literal}                                           保存虚拟机镜像的快照目录的路径。设定此参数后，虚拟机的 RAM 状态将在停止后保存在快照目录中的文件。如果启动了某个域的状态文件，域将在最后停止之前恢复到正确的状态。此选项与 `force_stop`{.literal} 选项不兼容。
:::
:::
除了 `VirtualDomain`{.literal} 资源选项外，您还可以配置
`allow-migrate`{.literal}
元数据选项，以允许将资源实时迁移到另一节点上。当此选项设为
`true`{.literal} 时，可以迁移资源，而且不丢失状态。当此选项设为
`false`{.literal}
时（这是默认状态），虚拟域将在第一节点上关闭，然后在其从一个节点移到另一个节点时，在第二个节点上重新启动。
:::
::: section
::: titlepage
# []{#assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters.html#proc_creating-virtual-domain-resource-configuring-virtual-domain-as-a-resource}创建虚拟域资源 {.title}
:::
以下流程在集群中为之前创建的虚拟机创建 `VirtualDomain`{.literal} 资源：
::: orderedlist
**流程**
1.  要创建 `VirtualDomain`{.literal} 资源代理来管理虚拟机，Pacemaker
    需要将虚拟机的 `xml`{.literal}
    配置文件转储到磁盘上的一个文件中。例如，如果您创建了名为
    `guest1`{.literal} 的虚拟机，`请将xml`{.literal} 文件转储到允许运行
    guest
    的一个群集节点上的某个文件中。您可以使用您选择的文件名；本例使用
    `/etc/pacemaker/guest1.xml`{.literal}。
    ``` literallayout
    # virsh dumpxml guest1 > /etc/pacemaker/guest1.xml
    ```
2.  将虚拟机的 `xml`{.literal}
    配置文件复制到允许运行该客户机的所有其他群集节点（在每个节点上位于同一位置）。
3.  请确定所有允许运行虚拟域的节点都可访问该虚拟域所需的存储设备。
4.  单独测试虚拟域是否可以在每个运行虚拟域的节点中启动和停止。
5.  如果正在运行，请关闭该客户机节点。Pacemaker
    会在集群中配置时启动节点。不应该将虚拟机配置为在主机引导时自动启动。
6.  使用 `pcs resource create`{.literal} 命令配置
    `VirtualDomain`{.literal} 资源。例如，以下命令配置名为
    `VM`{.literal} 的 `VirtualDomain`{.literal} 资源：由于
    `allow-migrate`{.literal} 选项被设置为
    `true`{.literal}，`pcs resource move VM nodeX`{.literal}
    命令将作为实时迁移进行。
    在本例中，`migration_transport`{.literal} 设置为
    `ssh`{.literal}。请注意，要使 SSH
    迁移正常工作，无密钥日志记录必须可以在节点间正常工作。
    ``` literallayout
    # pcs resource create VM VirtualDomain config=/etc/pacemaker/guest1.xml migration_transport=ssh meta allow-migrate=true
    ```
:::
:::
:::
[]{#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters.html#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters}第 25 章 配置集群仲裁 {.title}
:::
Red Hat Enterprise Linux 高可用性附加组件集群使用 `votequorum`{.literal}
服务，并结合隔离，以避免脑裂的情况。为集群中的每个系统分配一组投票机制，只能在大多数投票机制都存在时才允许执行集群操作。该服务必须被加载到所有节点或无节点
; 如果服务被载入到集群节点的一个子集，则结果将无法预计。有关
`votequorum`{.literal} 服务的配置和操作的详情，请查看
`votequorum`{.literal}(5)手册页。
::: section
::: titlepage
# []{#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters.html#ref_quorum-options-configuring-cluster-quorum}配置仲裁选项 {.title}
:::
使用 `pcs cluster setup`{.literal}
命令创建集群时，可以设置仲裁配置的一些特殊功能。下表总结了这些选项。
::: table
[]{#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters.html#tb-quorumoptions-HAAR}
**表 25.1. 仲裁选项**
::: table-contents
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
+:=================================+:=================================+
| `auto_tie_breaker`{.literal}     | 启                               |
|                                  | 用后，集群可能会以确定的方式达到 |
|                                  | 50%                              |
|                                  | 个节                             |
|                                  | 点同时失败的情况。集群分区或仍与 |
|                                  | `                                |