```  
./duckdb --help  
Usage: ./duckdb [OPTIONS] FILENAME [SQL]  
FILENAME is the name of an DuckDB database. A new database is created  
if the file does not previously exist.  
OPTIONS include:  
   -append              append the database to the end of the file  
   -ascii               set output mode to 'ascii'  
   -bail                stop after hitting an error  
   -batch               force batch I/O  
   -box                 set output mode to 'box'  
   -column              set output mode to 'column'  
   -cmd COMMAND         run "COMMAND" before reading stdin  
   -c COMMAND           run "COMMAND" and exit  
   -csv                 set output mode to 'csv'  
   -echo                print commands before execution  
   -init FILENAME       read/process named file  
   -[no]header          turn headers on or off  
   -help                show this message  
   -html                set output mode to HTML  
   -interactive         force interactive I/O  
   -json                set output mode to 'json'  
   -line                set output mode to 'line'  
   -list                set output mode to 'list'  
   -lookaside SIZE N    use N entries of SZ bytes for lookaside memory  
   -markdown            set output mode to 'markdown'  
   -memtrace            trace all memory allocations and deallocations  
   -mmap N              default mmap size set to N  
   -newline SEP         set output row separator. Default: '\n'  
   -nofollow            refuse to open symbolic links to database files  
   -no-stdin            exit after processing options instead of reading stdin   -nullvalue TEXT      set text string for NULL values. Default ''  
   -pagecache SIZE N    use N slots of SZ bytes each for page cache memory  
   -quote               set output mode to 'quote'  
   -readonly            open the database read-only  
   -s COMMAND           run "COMMAND" and exit  
   -separator SEP       set output column separator. Default: '|'  
   -stats               print memory stats before each finalize  
   -table               set output mode to 'table'  
   -version             show DuckDB version  
   -vfs NAME            use NAME as the default VFS  
```  
5、命令行帮助  
```  
D .help  
.auth ON|OFF             Show authorizer callbacks  
.backup ?DB? FILE        Backup DB (default "main") to FILE  
.bail on|off             Stop after hitting an error.  Default OFF  
.binary on|off           Turn binary output on or off.  Default OFF  
.cd DIRECTORY            Change the working directory to DIRECTORY  
.changes on|off          Show number of rows changed by SQL  
.check GLOB              Fail if output since .testcase does not match  
.clone NEWDB             Clone data into NEWDB from the existing database  
.databases               List names and files of attached databases  
.dbconfig ?op? ?val?     List or change sqlite3_db_config() options  
.dbinfo ?DB?             Show status information about the database  
.dump ?TABLE?            Render database content as SQL  
.echo on|off             Turn command echo on or off  
.eqp on|off|full|...     Enable or disable automatic EXPLAIN QUERY PLAN  
.excel                   Display the output of next command in spreadsheet  
.exit ?CODE?             Exit this program with return-code CODE  
.expert                  EXPERIMENTAL. Suggest indexes for queries  
.explain ?on|off|auto?   Change the EXPLAIN formatting mode.  Default: auto  
.filectrl CMD ...        Run various sqlite3_file_control() operations  
.fullschema ?--indent?   Show schema and the content of sqlite_stat tables  
.headers on|off          Turn display of headers on or off  
.help ?-all? ?PATTERN?   Show help text for PATTERN  
.import FILE TABLE       Import data from FILE into TABLE  
.imposter INDEX TABLE    Create imposter table TABLE on index INDEX  
.indexes ?TABLE?         Show names of indexes  
.limit ?LIMIT? ?VAL?     Display or change the value of an SQLITE_LIMIT  
.lint OPTIONS            Report potential schema issues.  
.log FILE|off            Turn logging on or off.  FILE can be stderr/stdout  
.mode MODE ?TABLE?       Set output mode  
.nullvalue STRING        Use STRING in place of NULL values  
.once ?OPTIONS? ?FILE?   Output for the next SQL command only to FILE  
.open ?OPTIONS? ?FILE?   Close existing database and reopen FILE  
.output ?FILE?           Send output to FILE or stdout if FILE is omitted  
.parameter CMD ...       Manage SQL parameter bindings  
.print STRING...         Print literal STRING  
.progress N              Invoke progress handler after every N opcodes  
.prompt MAIN CONTINUE    Replace the standard prompts  
.quit                    Exit this program  
.read FILE               Read input from FILE  
.restore ?DB? FILE       Restore content of DB (default "main") from FILE  
.save FILE               Write in-memory database into FILE  
.scanstats on|off        Turn sqlite3_stmt_scanstatus() metrics on or off  
.schema ?PATTERN?        Show the CREATE statements matching PATTERN  
.selftest ?OPTIONS?      Run tests defined in the SELFTEST table  
.separator COL ?ROW?     Change the column and row separators  
.sha3sum ...             Compute a SHA3 hash of database content  
.shell CMD ARGS...       Run CMD ARGS... in a system shell  
.show                    Show the current values for various settings  
.stats ?on|off?          Show stats or turn stats on or off  
.system CMD ARGS...      Run CMD ARGS... in a system shell  
.tables ?TABLE?          List names of tables matching LIKE pattern TABLE  
.testcase NAME           Begin redirecting output to 'testcase-out.txt'  
.testctrl CMD ...        Run various sqlite3_test_control() operations  
.timeout MS              Try opening locked tables for MS milliseconds  
.timer on|off            Turn SQL timer on or off  
.trace ?OPTIONS?         Output each SQL statement as it is run  
.vfsinfo ?AUX?           Information about the top-level VFS  
.vfslist                 List all available VFSes  
.vfsname ?AUX?           Print the name of the VFS stack  
.width NUM1 NUM2 ...     Set minimum column widths for columnar output  
```  
6、元命令  
https://duckdb.org/docs/guides/meta/explain  
7、读取PostgreSQL的数据  
https://duckdb.org/docs/extensions/overview  
postgres_scanner  
```  
D INSTALL 'postgres_scanner';  
Run Time: real 0.000 user 0.000192 sys 0.000165  
D load 'postgres_scanner';  
Run Time: real 0.001 user 0.000697 sys 0.000395  
Error: Invalid Input Error: Initialization function "postgres_scanner_init" from file "/Users/digoal/.duckdb/extensions/da9ee490d/osx_amd64/postgres_scanner.duckdb_extension" threw an exception: "Catalog Error: Table Function with name "postgres_scan" already exists!"  
postgres=# create table t1 (id int, info text);  
CREATE TABLE  
postgres=# insert into t1 select generate_series(1,1000), 'test';  
INSERT 0 1000  
D SELECT * FROM POSTGRES_SCAN('host=127.0.0.1 user=postgres dbname=postgres port=1921', 'public', 't1') limit 10;  
┌────┬──────┐  
│ id │ info │  
├────┼──────┤  
│ 1  │ test │  
│ 2  │ test │  
│ 3  │ test │  
│ 4  │ test │  
│ 5  │ test │  
│ 6  │ test │  
│ 7  │ test │  
│ 8  │ test │  
│ 9  │ test │  
│ 10 │ test │  
└────┴──────┘  
Run Time: real 0.034 user 0.016557 sys 0.001078  
```  
8、插件  
https://duckdb.org/docs/extensions/overview  
```
install安装
load加载
安装后, 直接load加载.
IT-C02YW2EFLVDL:osx_amd64 digoal$ ll
total 89472
drwxr-xr-x  3 digoal  staff    96B Aug 26 14:20 ..
-rw-r--r--  1 digoal  staff    15M Aug 26 14:20 fts.duckdb_extension
-rw-r--r--  1 digoal  staff    14M Aug 26 14:20 postgres_scanner.duckdb_extension
drwxr-xr-x  5 digoal  staff   160B Aug 26 14:22 .
-rw-r--r--  1 digoal  staff    15M Aug 26 14:22 tpch.duckdb_extension
IT-C02YW2EFLVDL:osx_amd64 digoal$ pwd
/Users/digoal/.duckdb/extensions/da9ee490d/osx_amd64
```
9、web shell  
https://shell.duckdb.org/  
10、查询duckdb支持的所有函数  
```
D select * from duckdb_functions() where function_name like '%db%';
┌─────────────┬─────────────────────┬───────────────┬─────────────┬─────────────┬─────────────────────────────────┬─────────────────────────────────────┬─────────┬──────────────────┬──────────────────┐
│ schema_name │    function_name    │ function_type │ description │ return_type │           parameters            │           parameter_types           │ varargs │ macro_definition │ has_side_effects │
├─────────────┼─────────────────────┼───────────────┼─────────────┼─────────────┼─────────────────────────────────┼─────────────────────────────────────┼─────────┼──────────────────┼──────────────────┤
│ main        │ duckdb_columns      │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_constraints  │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_functions    │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_keywords     │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_indexes      │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_schemas      │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_dependencies │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_sequences    │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_settings     │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_tables       │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_types        │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ duckdb_views        │ table         │             │             │ []                              │ []                                  │         │                  │                  │
│ main        │ dbgen               │ table         │             │             │ [suffix, schema, overwrite, sf] │ [VARCHAR, VARCHAR, BOOLEAN, DOUBLE] │         │                  │                  │
│ main        │ roundbankers        │ macro         │             │             │ [x, n]                          │ [NULL, NULL]                        │         │ round_even(x, n) │                  │
└─────────────┴─────────────────────┴───────────────┴─────────────┴─────────────┴─────────────────────────────────┴─────────────────────────────────────┴─────────┴──────────────────┴──────────────────┘
D select * from duckdb_functions() where function_name like '%tpc%';
┌─────────────┬───────────────┬───────────────┬─────────────┬─────────────┬────────────┬─────────────────┬─────────┬──────────────────┬──────────────────┐
│ schema_name │ function_name │ function_type │ description │ return_type │ parameters │ parameter_types │ varargs │ macro_definition │ has_side_effects │
├─────────────┼───────────────┼───────────────┼─────────────┼─────────────┼────────────┼─────────────────┼─────────┼──────────────────┼──────────────────┤
│ main        │ tpch_queries  │ table         │             │             │ []         │ []              │         │                  │                  │
│ main        │ tpch_answers  │ table         │             │             │ []         │ []              │         │                  │                  │
│ main        │ tpch          │ pragma        │             │             │ [col0]     │ [BIGINT]        │         │                  │                  │
└─────────────┴───────────────┴───────────────┴─────────────┴─────────────┴────────────┴─────────────────┴─────────┴──────────────────┴──────────────────┘
```
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB for PostgreSQL云原生分布式开源数据库](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")