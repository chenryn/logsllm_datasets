### Title: AEPIC Leak: Architectural Vulnerability Exposing Uninitialized Data from the Microarchitecture

CPU vulnerabilities pose a significant threat to the security enhancements provided by both software and hardware. While transient-execution attacks have garnered increased attention, architectural CPU vulnerabilities remain underexplored. In this presentation, we systematically analyze existing CPU vulnerabilities, demonstrating that CPUs are susceptible to flaws similar to those found in complex software. We highlight that transient-execution attacks and architectural vulnerabilities often stem from the same type of bug and identify areas that require further investigation.

Our research focuses on architecturally improperly initialized data locations, leading to the discovery of AEPIC Leak. This is the first architectural CPU vulnerability that leaks stale data directly from the microarchitecture without relying on a side channel. AEPIC Leak affects all recent Intel CPUs based on the Sunny Cove architecture (i.e., Ice Lake and Alder Lake) and does not require hyperthreading to be enabled. The vulnerability arises from the incorrect return of stale data when reading undefined APIC-register ranges, allowing it to leak data transferred between the L2 and last-level cache, including SGX enclave data, from the superqueue.

AEPIC Leak targets both data in use, such as register values and memory loads, and data at rest, such as SGX-enclave data pages. Although AEPIC Leak is a sampling-based attack, we have developed techniques to precisely control the page and offset from which the data is leaked. Our end-to-end attack can extract AES-NI, RSA, and even Intel SGX attestation keys from enclaves within a few seconds.

We discuss potential mitigations and conclude that, in the short term, the only effective measures to counter AEPIC Leak are to disable APIC MMIO or to avoid relying on SGX for sensitive operations.