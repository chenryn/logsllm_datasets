宏 可以 在 宏的边界 扩展 参数列表. 如果 某个宏 要求 所有的参数 在 一行上 
出现, 则 参数列表 不能 在 这儿 被 扩展. 例如
.Ql \&.Op .
.Pp
这里有
.Ql \&.Xo
宏的一个示例, 用 空格模式宏 把 空格 去掉:
.Bd -literal -offset indent
\&.Sm off
\&.It Xo Sy I Ar operation
\&.No \een Ar count No \een
\&.Xc
\&.Sm on
.Ed
.Pp
产生
.Bd -filled -offset indent
.Bl -tag -width flag -compact
.Sm off
.It Xo Sy I Ar operation
.No \en Ar count No \en
.Xc
.Sm on
.El
.Ed
.Pp
还有一个:
.Bd -literal -offset indent
\&.Sm off
\&.It Cm S No \&/ Ar old_pattern Xo
\&.No \&/ Ar new_pattern
\&.No \&/ Op Cm g
\&.Xc
\&.Sm on
.Ed
.Pp
产生
.Bd -filled -offset indent
.Bl -tag -width flag -compact
.Sm off
.It Cm S No \&/ Ar old_pattern Xo
.No \&/ Ar new_pattern
.No \&/ Op Cm g
.Xc
.Sm on
.El
.Ed
.Pp
另一个示例用
.Ql \&.Xo
和 引用宏:
测试一个变量的值.
.Bd -literal -offset indent
\&.It Xo
\&.Ic .ifndef
\&.Oo \e&! Oc Ns Ar variable
\&.Op Ar operator variable ...
\&.Xc
.Ed
.Pp
产生
.Bd -filled -offset indent
.Bl -tag -width flag -compact
.It Xo
.Ic .ifndef
.Oo \&! Oc Ns Ar variable
.Op Ar operator variable ...
.Xc
.El
.Ed
.Pp
上面 所有的例子 都在
.Ql \&.It
(list-item) 宏 的 参数列表 中 使用了
.Ql \&.Xo
宏. 扩展宏 不经常 使用, 一般用来 扩展 list-item 宏 的 参数列表.
这也 不幸的 是 扩展宏 最苛刻的 地方. 前两个例子里 空格 被去掉; 第三个 例子中, 
希望 能 输出 部分 空格, 而不是 全部. 在 这种情况下 用 这些宏, 要 确保
.Ql \&.Xo
和
.Ql \&.Xc
宏 摆放到 第三个例子 中 示范的位置. 如果
.Ql \&.Xo
宏 没有 单独 出现在
.Ql \&.It
的 参数表 中, 则 无法预测 空格 情况. 这种情况下,
.Ql \&.Ns
(no space macro) 一定 不能 作为 一行的 第一个宏 或 最后一个宏. 当前
.Bx
发布的 超过 900个 手册页 (事实上大约1500个) 中,
只有 十五个 用到了
.Ql \&.Xo
宏.
.Sh 页结构宏宏域 PAGE STRUCTURE DOMAIN
.Ss 小节首部 Section Headers
每个 手册页 里 都用到了 下面 列出的 三个
.Ql \&.Sh
小节首部宏. 作者 写 手册页 时 可以 酌情考虑 其他 建议使用的 小节首部.
.Ql \&.Sh
宏 最多 带 九个 参数. 它 可以 被 (其他宏) 分析, 但不能 被调用.
.Bl -tag -width ".Sh SYNOPSIS"
.It \&.Sh 名称 NAME
.Ql \&.Sh 名称 NAME
宏是 必不可少的. 否则 无法设置 页头, 页脚 和 缺省的 页布局, 样子 会 很难看.
.Sx 名称 NAME
小节 至少 由 三项 组成. 第一个 是
.Ql \&.Nm
名称宏, 命名 手册页的 主题. 第二个 是 名称描述宏
.Ql \&.Nd ,
它 把 主题名称 和 第三项, 描述, 分离开来.
描述 应该 尽可能的 精简易懂, 少占空间.
.It \&.Sh 总览 SYNOPSIS
.Sx SYNOPSIS
总览小节 描述 该 手册页对象 的 典型用途.
请求的宏 是 下面 的 任意一个,
.Ql ".Nm" ,
.Ql ".Cd" ,
.Ql ".Fn" ,
(也可能是
.Ql ".Fo" ,
.Ql ".Fc" ,
.Ql ".Fd" ,
.Ql ".Ft"
宏). 函数名称宏
.Ql ".Fn"
用在 手册页 的 第二第三部分, 命令 和 基本名称宏
.Ql \&.Nm
用在 手册页 的 1, 5, 6, 7, 8 部分. 手册 第四部分 需要
.Ql ".Nm" , 
.Ql ".Fd"
或
.Ql ".Cd"
配制设备用途宏. 其他一些 宏 可能 用来 产生 概要行, 象下面的:
.Pp
.Bd -filled -offset indent
.Nm cat
.Op Fl benstuv
.Op Fl
.Ar
.Ed
.Pp
下面 用到的 宏
.Pp
.Dl \&.Nm cat
.Dl \&.Op \&Fl benstuv
.Dl \&.Op \&Fl
.Dl \&.Ar
.Pp
.Sy 注意 :
宏
.Ql \&.Op ,
.Ql \&.Fl ,
和
.Ql \&.Ar
能够 识别 管道符
.Ql \*(Ba ,
因此 命令行 如:
.Pp
.Dl ".Op Fl a | Fl b"
.Pp
的 表现 会 出轨.
.Xr Troff
一般把 \*(Ba 当做 特殊符号. 参见
.Sx 预定义串 PREDEFINED STRINGS ,
在 其他情况下 \*(Ba 的使用.
.It \&.Sh 描述 DESCRIPTION
大多数 情况下
.Sx 描述 DESCRIPTION
小节 的 第一段话 是 关于 这个 命令, 函数 或 文件 的 摘要, 后跟 字典式的
选项 以及 相应的解释. 创建 这样的 列表, 应该 使用
.Ql \&.Bl
列表开始,
.Ql \&.It
列表项和
.Ql \&.El
列表结束宏 (参见下面的
.Sx 列表和栏目 Lists and Columns
).
.El
.Pp
下面的
.Ql \&.Sh
小节首部 是 手册页 编排的 常见内容, 为了 保证 连续性, 应 适当 使用.
它们 按照 应该 出现 的 顺序 排列.
.Bl -tag -width SYNOPSIS
.It \&.Sh 环境 ENVIRONMENT
.Sx 环境 ENVIRONMENT
小节 用来 揭示 相关的 环境变量 和 线索, 它们的 行为, 表现, 用法.
.It \&.Sh 示例 EXAMPLES
有 很多 办法 创建 示例, 详见 下面的
.Sx 示例 EXAMPLES
小节.
.It \&.Sh 文件 FILES
由 手册页的 主题对象 创建 或 使用 的 文件, 应该 通过
.Ql \&.Pa
宏在
.Sx 文件 FILES
小节 陈列 出来.
.It \&.Sh 另见 SEE ALSO
如果 提及 其他 手册页 或 参照 相应的 手册, 应 把它们 放在
.Sx 另见 SEE ALSO
小节. 参照主题 由
.Ql \&.Xr
宏指定. 在
.Sx 另见 SEE ALSO
小节 的 参照主题 应该按 手册节号 排序, 按 字母顺序 陈列, 并用 逗号 隔开, 
例如:
.Pp
.Xr ls 1 ,
.Xr ps 1 ,
.Xr group 5 ,
.Xr passwd 5 .
.Pp
这时候 不太适合 用
.Xr refer 1
风格 的 参考引用.
.It \&.Sh 遵循 CONFORMING TO
如果 那些 命令, 库函数 或 文件 遵循 一定的 标准 实现, 如
.St -p1003.2
或
.St -ansiC ,
那就 不需要 这一小节. 如果 命令 不符合 任何标准, 应该 把 它的历史 放在
.Sx 历史 HISTORY
小节.
.It \&.Sh 历史 HISTORY
任何 不属于 已知标准 的 命令 应该 在 这一节 给出 它的 大致历史.
.It \&.Sh 作者 AUTHORS
如果 有 必要, 把 致谢名单 也 列这儿.
.It \&.Sh 诊断 DIAGNOSTICS
应该 把 诊断命令 放在 这一节.
.It \&.Sh 错误 ERRORS
特定的 错误处理, 尤其是 库函数 (手册页第二第三部分), 放这儿.
.Ql \&.Er
宏 用来 指定 一个 errno.
.It \&.Sh BUGS
明显的 问题 放这儿...
.El
.Pp
可以 增加一些 用户 制定的
.Ql \&.Sh
小节, 例如, 这样 设 小节:
.Bd -literal -offset 14n
\&.Sh PAGE STRUCTURE DOMAIN
.Ed
.Ss 段落和空行 Paragraphs and Line Spacing.
.Bl -tag -width 6n
.It \&.Pp
.Ql \&.Pp
把 段落命令 放在 所需的位置, 可以 产生 一个空行. 在
.Ql \&.Sh
或
.Ql \&.Ss
宏 后面 不需要 这个 宏, 
.Ql \&.Bl
宏 的 前面 也不需要. (
.Ql \&.Bl
声明了 垂直方向 的 距离, 除非 给出 -compact 标志).
.El
.\" This worked with version one, need to redo for version three
.\" .Pp
.\" .Ds I
.\" .Cw (ax+bx+c) \ is\ produced\ by\ \&
.\" .\".Cw (ax+bx+c) \&.Va_by_) \&_and_\& \&[?/]m_b1_e1_f1[?/]\&
.\" .Cl Cx \t\t
.\" .Li \&.Cx\ (
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va ax
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy \+
.\" .Cx
.\" .Cl Cx \&(\&
.\" .Va ax
.\" .Cx +
.\" .Va by
.\" .Cx +
.\" .Va c )
.\" .Cx \t
.\" .Em is produced by
.\" .Cx \t
.\" .Li \&.Va by
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy \+
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va c )
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx
.\" .Cx
.\" .Cw
.\" .De
.\" .Pp
.\" This example shows the same equation in a different format.
.\" The spaces
.\" around the
.\" .Li \&+
.\" signs were forced with
.\" .Li \e :
.\" .Pp
.\" .Ds I
.\" .Cw (ax\ +\ bx\ +\ c) \ is\ produced\ by\ \&
.\" .\".Cw (ax+bx+c) \&.Va_by_) \&_and_\& \&[?/]m_b1_e1_f1[?/]\&
.\" .Cl Cx \t\t
.\" .Li \&.Cx\ (
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va a
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy x
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx \e\ +\e\ \e&
.\" .Cx
.\" .Cl Cx \&(\&
.\" .Va a
.\" .Sy x
.\" .Cx \ +\ \&
.\" .Va b
.\" .Sy y
.\" .Cx \ +\ \&
.\" .Va c )
.\" .Cx \t
.\" .Em is produced by
.\" .Cl Cx \t\t
.\" .Li \&.Va b
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Sy y
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx \e\ +\e\ \e&
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Va c )
.\" .Cx
.\" .Cl Cx \t\t
.\" .Li \&.Cx
.\" .Cx
.\" .Cw
.\" .De
.\" .Pp
.\" The incantation below was
.\" lifted from the
.\" .Xr adb 1
.\" manual page:
.\" .Pp
.\" .Ds I
.\" .Cw \&[?/]m_b1_e1_f1[?/]\& is\ produced\ by
.\" .Cl Cx \t\t
.\" .Li \&.Cx Op Sy ?/
.\" .Cx