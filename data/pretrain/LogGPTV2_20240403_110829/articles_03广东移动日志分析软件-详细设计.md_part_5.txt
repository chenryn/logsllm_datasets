字段过滤：字段过滤快速显示用户所有结构化/半结构化特殊字段的统计聚合，点击其中的字段值进行过滤操作，可快速缩小事件的查询范围。
5\.
高级搜索：运用transction、eval等命令进行关联分析等高级搜索。详情请参阅高级搜索
（2）搜索组件
在进行搜索之前，请先了解日志分析软件的几个重要概念。
一个搜索框核心由四个部分构成：
1.日志分组
日志数据的逻辑分组。搜索日志中的源数据必须通过上传日志中定义的主机名（hostname）、应用程序（appname）、标签（tag）进行组合定义。
2.查询语句
搜索框中的查询语句。
3.时间范围
使用下拉菜单快速挑选预设时间方案或设置一个自定义的时间范围。
4.字段过滤
使用字段过滤可以快速增加搜索条件
上述每一项都链接到一个章节单独详细描述，会针对日志分析软件相关设置的每个参数深入剖析。
（3）搜索策略比较
1.结构化 vs. 非结构化日志搜索
支持结构化和非结构化日志。结构化日志如JSON，可自动解析日志中相关字段和对应值；对主流非结构化日志（如Apache日志）也实现了自动解析。
2.搜索查询 vs. 字段过滤
##### 10. 数据字典动态更新
原始日志中往往包含了大量具有特殊意义的代码字符，即使是专业人员也无法迅速理解日志内容，造成日志分析工作难以进行，利用字典功能可以对日志内容进行自定义的对应转换，使日志更易读，分析更容易。
通过日志分析软件数据处理系统的关联字典功能，提取出数据间的有关联的字段值，并根据新接入的数据进行实时更新。通过动态字典，能够使得不同来源的有关联的数据实现关联。支持根据新增的日志，自动更新已提取的字典信息，可加载新字典到服务中
对于终端数据，有如下定义的字典；
dicts = \[
{
key_field = uiddevrecordid
field_names = \[strdevip\]
dict_name = id_ip.csv
domain = ops
schedule_interval_in_sec = 60
scan_period = 60 d
es_fetch_size = 100000
query = \"{ \\\"wildcard\\\": { \\\"tag\\\": { \\\"value\\\":
\\\"\*devbaseinfo\\\" } } }\"
},
{
key_field = dimensions.IP
field_names = \[dimensions.cookie_Login_Cookie\]
dict_name = ip_cookie.csv
domain = ops
schedule_interval_in_sec = 60
scan_period = 30 d
es_fetch_size = 100000
query = \"{ \\\"term\\\": { \\\"appname\\\": { \\\"value\\\":
\\\"userinfo\\\" } } }\"
}
\]
static_dicts = \[
{
key_field = cookie_Login_Cookie
field_names = \[depart_id, area_id\]
dict_name = cookie_office.csv
domain = ops
schedule_interval_in_sec = 60
scan_period = 30 d
es_fetch_size = 100000
}
\]
即从id_ip, ip_cookie,
cookie_office三个动态字典中提取出的有用字段，依序关联完成从终端的id到营业厅的关联关系。
##### 11. OPENAPI支持
日志分析软件RESTful
API提供对日志分析软件系统的调用接口，便于用户以灵活的方式集成日志分析软件系统。
访问日志分析软件RESTful API服务器需要进行签名验证。签名验证的目的是：
1.  验证用户身份：只有拥有表明用户身份的key，用户才能够访问API服务。
2.  保护网络传输过程中用户请求不被篡改：API会验证用户使用key为每次请求计算出的签名，以防止在网络传输过程中用户的请求被篡改。
3.  防止重复请求攻击(Replay
    attack)：当API使用者的HTTP请求记录被窃取（如：访问API的日志文件泄露），导致窃取者可以重复发送此的请求，从API服务器窃取对应的查询结果。
通过给用户分发access_key、secure_key，API服务提供了基于MD5的签名验证机制。其中针对重复请求攻击，API服务承诺会接受当前时间一分钟之内的请求，对于签名时间到被API服务端接收之间时延超过一分钟的请求则直接拒绝。
**获取签名需要的key**
请从API服务提供者处获取一对access_key和secure_key。key的形式为长度为32的字符串。举例如下：
-   access_key：e31429454b845ae95ece2cbeae06a3a6
-   secure_key：535479d978359bf4975acf7e7f3f0147
**使用签名**
签名计算过程：
1.  将原始请求构造成Hash形式origin_params，hash的key与value均为字符串。
2.  将origin_params的key按照字母顺序排序后，key与value之间用=进行字符串链接，每对key之间用&进行字符串链接，构造一个用来生成签名的字符串sorted_query_str
3.  将以毫秒计的当前Unix时间戳query_time和从API提供者处获得的secure_key跟sorted_query_str进行字符串链接获得字符串进行MD5计算，其结果截取前32个字符即为本次请求的sign
在原始请求之上，添加 { \'qt\': query_time, \'ak\'=access_key, \'sign\':
sign } 作为额外参数即可使用签名访问API服务。
**接口手册**
API服务使用HTTP GET方式，返回数据格式为json格式。当前支持如下查询：
-   搜索(search)
**返回码**
  ---------------------------------------------------------------------------------------------------------------------------
  状态码   含义                     详述
  -------- ------------------------ -----------------------------------------------------------------------------------------
  200      成功                     请求成功执行。
  400      用户请求内容错误         可能请求的参数缺少qt,ak,sign；可能使用了错误的ak；可能请求URL没有encode。
  403      用户没有权限访问该资源   可能是计算错了签名sign；可能这是一次重复的请求被认为是replay attack。
  404      找不到请求的资源         可能是传入了不支持的参数或者参数给定了非法的值，比如传入了order=\'\'但值不为desc和asc。
  408      用户请求过期             可能是qt参数标明的时间戳为服务器时间的一分钟之前，考虑需要同步客户端与服务端时间。
  500      服务端错误               API服务没有处理到的服务端异常；如果出现感谢用户能反馈给日志分析软件。
  ---------------------------------------------------------------------------------------------------------------------------
**搜索接口**
日志分析软件产品的搜索功能可从搜索章节了解。API搜索接口提供通过搜索语句和字段过滤,搜索结果有如下三个查询接口：
-   events:
    输出搜索和过滤后的event具体内容，包括event的原始内容、appname、tag、logtype和分析后的fields。
-   timeline: 输出搜索和过滤后的event按照时间段的统计计数。
-   fields:
    输出搜索和过滤后的events所含有的fields的名字和指定filed的值的统计计数。
**timeline**
路径 /search/timeline/
参数
+-------------+----+------------------------------------------+-------+
| 参数        | 含 | 合法值                                   | 默    |
|             | 义 |                                          | 认值  |
+=============+====+==========================================+=======+
| s           | 日 | all和其他日志分组                        | all   |
| ource_group | 志 |                                          |       |
|             | 分 |                                          |       |
|             | 组 |                                          |       |
+-------------+----+------------------------------------------+-------+
| time_range  | 搜 | -   以逗号分隔的两个以毫秒计的unix时间戳 | -3    |
|             | 索 |                                          | d,now |
|             | 的 | -   第二个值可用字符串now表示当前时间    |       |
|             | 时 |                                          |       |
|             | 间 | -   第一个值可用负号加数字加d            |       |
|             | 范 | 或m表示距当前时间几天或几分钟，如-1d,-1m |       |
|             | 围 |                                          |       |
+-------------+----+------------------------------------------+-------+
| query       | 搜 | 日志分析软件的搜索                       | \*    |
|             | 索 | 语句支持全文检索、逻辑运算、正则表达式等 |       |
|             | 语 |                                          |       |
|             | 句 |                                          |       |
+-------------+----+------------------------------------------+-------+
| f           | 使 | 使用字符串 \|-\$!\|分隔的f               | 空    |
| ilter_field | 用 | ield名和值；每个field的name和value之间用 |       |
|             | 字 | 冒号分隔,value用双引号括起来；包括tag、  |       |
|             | 段 | appname、                                |       |
|             | 过 | l                                        |       |
|             | 滤 | ogtype也可通过此参数过滤：样例如logtype: |       |
|             |    | \"apache\"\|-\$!\|appache.status:\"200\" |       |
+-------------+----+------------------------------------------+-------+
参数样例
http://yottaapi.test:7001/v0/search/timeline/?ak=535479d978359bf4975acf7e7f3f0147&qt=1418386108&query=\*&sign=91e00c9dd2102e412bf580ecea53af77
返回结果说明
-   result：表示请求是否成功，为Boolean。
-   buckets：按时间统计计数的值，为Object的Array。
    -   from,to：以毫秒计的unix时间戳,为Integer。
    -   doc_count：在时间区内含有的事件数，为Integer。
{
\"result\": true,
\"total\": 4775,
\"buckets\": \[
{
\"from\": 1418441361493,
\"doc_count\": 345,
\"to\": 1418454320993
},
{
\"from\": 1418454320993,
\"doc_count\": 16,
\"to\": 1418467280493
},
\...\...
\]
}
**Fields**
路径/search/fields/
参数
+-------------+----+------------------------------------------+-------+
| 参数        | 含 | 合法值                                   | 默    |
|             | 义 |                                          | 认值  |
+=============+====+==========================================+=======+
| s           | 日 | all和其他日志分组                        | all   |
| ource_group | 志 |                                          |       |
|             | 分 |                                          |       |
|             | 组 |                                          |       |
+-------------+----+------------------------------------------+-------+
| time_range  | 搜 | -   以逗号分隔的两个以毫秒计的unix时间戳 | -3    |
|             | 索 |                                          | d,now |
|             | 的 | -   第二个值可用字符串now表示当前时间    |       |