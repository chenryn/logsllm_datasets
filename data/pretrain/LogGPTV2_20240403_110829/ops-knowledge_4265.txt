User: 请回答以下运维开发问题使用yaml锚点的Kubernetes配置我有一个deployment.yaml文件，我想为我的所有部署重用该环境，如下所示：
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beat
spec:
  selector:
    matchLabels:
      app: beat
  template:
    metadata:
      labels:
        app: beat
    spec:
      containers:
      - name: beat
        image: myimage
        command: [&quot;celery&quot;, &quot;-A&quot;, &quot;wsgi.celery&quot;, &quot;beat&quot;]
        env: &amp;default
        - name: FIRST_ENV
          value: my-value
        - name: SECOND_ENV
          value: another-value
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
spec:
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
      - name: flower
        image: myimage
        command: [&quot;celery&quot;, &quot;flower&quot;, &quot;-A&quot;, &quot;wsgi.celery&quot;]
        env: *defaultenv

但kubectl apply-f deployment.yaml似乎无法使用yaml锚。
错误：分析部署时出错。yaml:将yaml转换为JSON时出错：yaml:引用了未知锚“defaultenv”
是否有可能使用YAML锚点，或者是否有另一种首选方法来重用k8s配置的重复块？

Assistant: 支持YAML锚点，但仅适用于相同的YAML文件。不能在部署文件上创建锚点（&amp；）并在另一个部署文件上引用值（*）。
如果要在多个部署中共享ENV值，可以使用ENV创建ConfigMap并使用envFrom规范。示例：
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  FIRST_ENV: my-value
  SECOND_ENV: another-value
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beat
spec:
  selector:
    matchLabels:
      app: beat
  template:
    metadata:
      labels:
        app: beat
    spec:
      containers:
      - name: beat
        image: myimage
        command: [&quot;celery&quot;, &quot;-A&quot;, &quot;wsgi.celery&quot;, &quot;beat&quot;]
        envFrom:
        - configMapRef:
            name: my-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
spec:
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
      - name: flower
        image: myimage
        command: [&quot;celery&quot;, &quot;flower&quot;, &quot;-A&quot;, &quot;wsgi.celery&quot;]
        envFrom:
        - configMapRef:
            name: my-configmap