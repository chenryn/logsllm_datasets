title:You Are What You Broadcast: Identification of Mobile and IoT Devices
from (Public) WiFi
author:Lingjing Yu and
Bo Luo and
Jun Ma and
Zhaoyu Zhou and
Qingyun Liu
You Are What You Broadcast: Identification of 
Mobile and IoT Devices from (Public) WiFi
Lingjing Yu, Institute of Information Engineering, Chinese Academy of Sciences; 
School of Cybersecurity, University of the Chinese Academy of Sciences; Bo Luo, 
The University of Kansas; Jun Ma, Tsinghua University; Zhaoyu Zhou and 
Qingyun Liu, Institute of Information Engineering, Chinese Academy of Sciences
https://www.usenix.org/conference/usenixsecurity20/presentation/yu
This paper is included in the Proceedings of the 29th USENIX Security Symposium.August 12–14, 2020978-1-939133-17-5Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.You Are What You Broadcast:
Identiﬁcation of Mobile and IoT Devices from (Public) WiFi
Lingjing Yu†‡, Bo Luo§, Jun Ma(cid:93)(cid:92), Zhaoyu Zhou†‡, Qingyun Liu†‡
† National Engineering Lab for Information Security Technologies
Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China
‡ School of Cyber Security, University of Chinese Academy of Sciences, Beijing, China
§ EECS/ITTC, The University of Kansas, Lawrence, KS, USA
(cid:93) Tsinghua University, Beijing, China; (cid:92) Pi2star Technology, Beijing, China
PI:EMAIL, PI:EMAIL, PI:EMAIL, {zhouzhaoyu,liuqingyun}@iie.ac.cn
Abstract
With the rapid growth of mobile devices and WiFi hotspots,
security risks arise. In practice, it is critical for administrators
of corporate and public wireless networks to identify the type
and/or model of devices connected to the network, in order
to set access/ﬁrewall rules, to check for known vulnerabili-
ties, or to conﬁgure IDS accordingly. Mobile devices are not
obligated to report their detailed identities when they join a
(public) wireless network, while adversaries could easily forge
device attributes. In the literature, efforts have been made to
utilize features from network trafﬁc for device identiﬁcation.
In this paper, we present OWL, a novel device identiﬁcation
mechanism for both network administrators and normal users.
We ﬁrst extract network trafﬁc features from passively re-
ceived broadcast and multicast (BC/MC) packets. Embedding
representations are learned to model features into six inde-
pendent and complementary views. We then present a new
multi-view wide and deep learning (MvWDL) framework that
is optimized on both generalization performance and label-
view interaction performance. Meanwhile, a malicious device
detection mechanism is designed to assess the inconsistencies
across views in the multi-view classiﬁer to identify anoma-
lies. Finally, we demonstrate OWL’s performance through
experiments, case studies, and qualitative analysis.
1 Introduction
Over the past decade, we have observed a steady growth in
the number and types of portable devices. WiFi and cellular
network remain the two major options for mobile devices
to connect to the Internet. Although cellular networks have
improved speed and coverage, and reduced costs in recent
years, WiFi still has the edge in lower cost, better support from
devices, and less capacity limits. Cisco predicts that the role
L. Yu, Z. Zhou, and Q. Liu were supported in part by the Youth Inno-
vation Promotion Association of the Chinese Academy of Sciences, and the
Key Technical Talents Project of CAS (Y8YY041101); B. Luo was supported
in part by NSF-1565570, NSA Science of Security (SoS) Initiative, and the
Ripple University Blockchain Research Initiative.
and coverage of WiFi will continue to expand, and WiFi trafﬁc
will account for 50% of total IP trafﬁc by 2022. Meanwhile,
the number of public WiFi hotspots will grow 4-fold globally,
from 124 million (2017) to 549 million (2022) in a ﬁve-year
span [11]. With the signiﬁcant growth of public Wiﬁ support
and usage, security and privacy concerns naturally arise.
The administrators of corporate and public WiFi services
are concerned with malicious devices connecting to their net-
works, which may potentially harm the platform or other users
in the network, e.g., [4, 45]. The security challenges are pri-
marily caused by the diversity of devices, potential access to
critical/core services, lack of proper security management by
their owners, and limited auditing capability. On the other
hand, users of public WiFi also express concerns about the
security of their devices, data, and personal information. How-
ever, they do not always exercise proper privacy protection
while connecting to unknown networks [5, 9, 30].
For system administrators, whenever a new mobile device
connects to the network, it is critical to identify its manu-
facturer, type, and model, so that proper security precautions
could be taken, e.g., conﬁgure ﬁrewall rules accordingly, ver-
ify if known vulnerabilities are patched, or inform IDS. In
practice, identifying the type of mobile/IoT devices is of par-
ticular interest, since devices of the same or similar types are
often managed under similar access control and ﬁrewall poli-
cies. For instance, when employees connect smart tea kettles
or coffee makers to the network, the corporate security policy
may place them in the same group that is limited from access-
ing any internal resource, while smartphones are expected
to be governed by completely different policies. Meanwhile,
the manufacturer1 attribute also provides important informa-
tion in device management. The same manufacturer tends to
share the design and implementation of hardware and soft-
ware components across products. As a result, they often have
similar vulnerabilities and are patched simultaneously. For
example, the ﬁrmware vulnerability reported in CVE-2006-
6292 affects Apple’s Mac mini, MacBook, and MacBook Pro
1In the rest of the paper, we use manufacturer and make interchangeably.
USENIX Association
29th USENIX Security Symposium    55
products. Meanwhile, regular users also have the need to dis-
cover potentially harmful devices, such as hidden cameras or
a virtual machine with spoofed identity [10, 60], when they
connect to WiFi hotspots. While active reconnaissance poses
the risk of being detected and denied, users have the option
of passive reconnaissance, where they receive and examine
broadcast/multicast (BC/MC) messages to identify other de-
vices in the same network, and looks for potential threats.
Efﬁcient and accurate identiﬁcation of mobile devices is
challenging, especially when the features are limited and often
incomplete. There is no standard protocol to actively query
devices for their identities. Even if there were one, devices
do not have to provide faithful answers. Existing researches
on IoT device identiﬁcation utilize a small set of network
features and were only tested on approximately 20 to 50 de-
vices in controlled environments, e.g., [43, 64]. With relatively
small feature space, scalability becomes a concern. That is,
detection accuracy may drop dramatically with the increasing
quantity and diversity of devices in real-world applications.
In this paper, we attempt to answer three questions: (1)
When a mobile/IoT device connects to a wireless network,
what protocol(s) would broadcast information that may be re-
ceived by other devices connected to the same WiFi? (2) What
information or features contained in the broadcast messages
are unique to a device, and how could system administrators or
normal users make use of such information to accurately iden-
tify the important attributes: manufacturer, type, and model, of
the devices? And (3) How can we utilize subtle hints caught
during device identiﬁcation to discover malicious devices?
To answer these questions, we present OWL: overhearing
on WiFi for device identiﬁcation. The key idea is to utilize the
unique features in network packets that are introduced by the
subtle differences in the implementations of network modules
on mobile/IoT devices. OWL examines and utilizes all the
features that could be passively collected from broadcast and
multicast protocols such as DHCP, DHCPv6, SSDP, mDNS, LLMNR,
BROWSER, NBNS, IGMP, etc. Distinct features extracted from
related protocols naturally form a view. Multi-view learning is
then employed to utilize views constructed from all available
protocols for device classiﬁcation. With ﬁngerprints collected
from more than 30,000 mobile/IoT devices, we demonstrate
outstanding performance of the proposed mechanism.
Moreover, malicious devices may attempt to forge their
identities and hide their presence to avoid being identiﬁed
or tracked. For instance, in our dataset, we found a virtual
machine running on a laptop that claimed to be an open WiFi
hotspot. We argue that it is difﬁcult for adversarial devices
to completely forge the complex set of features from the en-
tire stack of essential network protocols. We observed that
fabricated or forged devices often behave inconsistently in dif-
ferent views, e.g., the fake WiFi hotspot demonstrated features
of a real WiFi access point on some views, while showing
features of its host laptop on other views. Therefore, we fur-
ther attempt to discover malicious devices by examining the
inconsistency across views in the multi-view classiﬁer.
The technical contributions of this paper are: (1) We pro-
pose a multi-view wide and deep learning model to identify
mobile/IoT devices using features from BC/MC packets col-
lected through passive reconnaissance over WiFi; (2) Through
large-scale experiments, we demonstrate the performance of
the proposed mechanism in identifying the manufacturer, type,
and model of mobile/IoT devices; and (3) OWL is also able to
effectively detect forged or fabricated devices by identifying
the abnormal inconsistencies across views.
The rest of the paper is organized as follows: we deﬁne
the problem in Section 2, and explain the data collection pro-
cesses in Section 3. We present the OWL algorithm, followed
by implementation and experiments in Sections 4 and 5. We
present case studies of abnormal devices in Section 6. We
discuss other important issues and review the literature in
Sections 8 and 9, and ﬁnally conclude the paper.
2 Problem Statement and the Threat Model
In this section, we formally present the objectives of OWL,
followed by an adversary model of abnormal devices.
Device Identiﬁcation. The primary goal of OWL is to iden-
tify devices on a WiFi network through packets they broad-
cast/multicast (BC/MC). Formally, device identiﬁcation is
a classiﬁcation problem: given a set of labeled samples
{(Di,li)}, ﬁnd a classiﬁer c : D → L, which assigns a label
lx = c(Dx) to a new sample Dx. In OWL, Di is a device
represented by features extracted from BC/MC packets. De-
vices are identiﬁed at three granularity levels: {manufacturer},
e.g., “amazon”; {manufacturer-type}, e.g., “amazon-kindle”;
{manufacturer-type-model}, e.g., “amazon-kindle-v2.0”. Last,
we design OWL to only rely on unencrypted passive trafﬁc
that could be sniffed without any special privilege.
Abnormal Device Detection. It is beneﬁcial to the adminis-
trators/users if OWL could tell if a device appears abnormal,
besides labeling it. Therefore, another objective of OWL is
to identify devices whose BC/MC trafﬁc appears to deviate
from known benign patterns. This abnormal sample could be a
previously unknown device, or a fabricated/forged device. For-
mally, function d : D → {“benign”,“malicious”} is designed
to assign a label d(Di) for each new device Di. Initially, d
is only trained with benign samples. When new malicious
samples are conﬁrmed, they are used to re-train d to improve
the detection accuracy for future samples of this type.
Assumptions and Adversary Model. We assume that OWL
could connect to the to-be-measured WiFi network–the net-
work is open, or the WiFi security key is known. This is true
for network administrators who measure their own networks.
This is also true for users who attempt to detect suspicious
devices when they connect to public WiFi. We also assume
that the network infrastructure we connect to is benign, so
that they faithfully forward/route packets as deﬁned by the
protocols, and OWL is able to collect those packets. Finally,
56    29th USENIX Security Symposium
USENIX Association
we start with a clean model in the ﬁrst task, where adversaries
are not considered. Hence, we assume that the overwhelming
majority of the devices in the training dataset are benign.
In the task of abnormal device detection, we employ a
simple threat model as follows: the adversaries attempt to
connect (unauthorized) devices to (public) wireless networks.
The abnormal/malicious device could be: (1) devices that
do not forge their own identities (so that they are unaltered,
genuine devices), however, they are forbidden in the network,
such as hidden cameras; (2) devices that attempt to hide their
true identities. This includes fabricated or altered devices that
connect to the network with malicious purposes, such as fake
access points or DHCP servers, spoofed IoT device identities
[60, 65]. This also includes devices that are counterfeit or
forged at manufacturing, such as the fake Apple TVs we
discovered (please see Section 6). This threat model only
applies to the second task of the OWL approach.
3 Data Collection and Feature Extraction
3.1 Data Collection and Initial Analysis
Data was collected through a fully passive approach from
three types of WiFi networks: (1) Open (unencrypted) pub-
lic networks at coffee shops, restaurants, retail stores, some
airports, etc. We directly connected to the hotspots without
providing any credentials. (2) Open public WiFi with cap-
tive portals at airports, hotels, corporate guest networks, etc.
We connected to these networks but did not provide infor-
mation on landing pages. Hence, we were usually blocked
from accessing the Internet, but we were able to sniff BC/MC
packets. (3) Secure WiFi networks, including organization
networks, home WiFi, and some public WiFi. We only col-
lected data from networks that we were granted access to,
such as university networks and retail stores that give pass-
words to customers. We connected the snifﬁng laptop to the
networks, and employed Wireshark or tcpdump to download
all BC/MC messages. The process was completely passive
and non-intrusive. We did not turn on promiscuous or monitor
mode. We did not actively send any message or make any
spooﬁng attempt. The packets were all in plaintext and were
also accessible to any other user on the same network.
With the help of our collaborators, we collected wireless
network trafﬁc from seven countries: US, Portugal, Sweden,
Norway, Japan, Korea, and China. From January 2019 to July
2019, we collected data from 176 WiFi networks, among
which 12 networks disabled BC/MC. Each data collection
session lasted approximately 20 to 30 minutes. The WiFi net-
works we sniffed were very diverse in terms of ownership,
including university, airport and hotel WiFi, restaurant, retail
store, and volunteers’ household WiFi. In total, we collected
BC/MC packets from 31,850 distinct devices, which were
identiﬁed by MAC addresses. Figure 1 (a) shows the distri-
bution of WiFi networks (allowed BC/MC) and devices. The
number of devices per network is higher in Korea and China,
mostly due to higher population density. In particular, we
collected data from an airport in Korea and a student dorm in
China, which contributed large volumes of devices. We statis-
tically analyzed the collected data and found the following:
1. In total, we have identiﬁed 275 distinct protocols in the data.
Note that we treat UDP packets to different ports as distinct
protocols. Figure 1 (b) shows the distribution of the top 10
most frequently used protocols, led by ARP, ICMPv6 and mDNS.
2. 69.5% of devices sent BC/MC packets using more than
2 protocols and 46.1% of devices sent BC/MC packets us-
ing more than 3 protocols. Intuitively, the more protocols
devices use for broadcasting, the more information they leak.
51.9% of the devices sent mDNS packets, which may convey
semi-identiﬁable attributes of the devices. Application layer
protocols like DHCP, SSDP and LLMNR are also wildly used.
3. Protocol popularity appears to be consistent across coun-
tries, with a few exceptions. For instance, mDNS is the most fre-
quently used BC/MC protocol in the US, Japan, and Sweden,
but is ranked lower in the other countries. This is explained
by the fact that these countries have higher density of Ap-
ple devices2, which intensively use mDNS to discover services
in the network. Meanwhile, Dropbox LAN Sync Discovery
(DLSD) is not found in China, because DLSD is a proprietary
protocol of Dropbox, which is blocked in China.
4. Some protocols are only used by one type of devices. For
instance, the KINK protocol is only found in packets sent from
Samsung TVs. This observation implies two perspectives:
(1) the proprietary protocols are good identiﬁers of hard-