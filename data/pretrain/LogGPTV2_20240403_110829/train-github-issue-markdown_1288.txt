by **nautigar** :
    In the section on Variable Declarations, the spec says:
    If the type is absent and the corresponding expression evaluates to an untyped constant,
    the type of the declared variable is as described in Â§Assignments.
    In the Assignments Section, the only relevant paragraph on types says: 
    If an untyped constant is assigned to a variable of interface type or the blank
    identifier, the constant is first converted to type bool, rune, int, float64, complex128
    or string respectively, depending on whether the value is a boolean, rune, integer,
    floating-point, complex, or string constant.
    Example 1
    const a = 100
    var i interface{} = a
    According to the spec cited above, the dynamic type of i is int. No problem.
    Example 2
    const a = 100
    var v = a
    The spec does not cover this case. How is the type of v determined?
    Example 3
    const a = 5000000000
    var v = a
    More serious problem here: Is this allowed? (playground experiment says no).
    If yes, what should be the type of v (int64, uint64?). The spec does not cover this case.