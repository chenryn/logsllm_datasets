logtype:apache | eval time= formatdate(timestamp)
5. parsedate (x) 将日期字符串转成unix格式，常用于计算时延
Spl:
logtype:apache | eval time=parsedate("2016-06-17 22:52:22.000","yyyy-MM-dd
HH:mm:ss.SSS")|eval diff=timestamp-time
6.数据统计分析－SPL语法－stats 14
1. sum(x), max(x), min(x), dc(x), count(x)，avg(x)
Spl:
(1)logtype:apache | stats count(appname) as event_time,sum(apache.resp_len) as
sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len
(2) logtype:apache | stats count(appname) as event_time,sum(apache.resp_len) as
sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len by apache.clientip
6.数据统计分析－SPL语法－stats 14
1. sum(x), max(x), min(x), dc(x), count(x)
Spl:
(3) logtype:apache | stats count(appname) as event_time,sum(apache.resp_len) as
sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len by apache.clientip |
sort by sum_len | limit 5
(4) logtype:apache | stats count(appname) as event_time,sum(apache.resp_len) as
sum_len,max(apache.resp_len) as max_len,min(apache.resp_len) as min_len by apache.clientip|sort
by sum_len | limit 5 | eval agv_len=if(event_time==0,0,sum_len/event_time)
备注：目前stats语法后面，不能再接stats统计，预计10月份可以实现
6.数据统计分析－SPL语法－transaction 14
Spl:
logtype:apache | transaction apache.clientip maxopenevents=10 maxevents=10
_count:表示分组的事件数
_duration:第一条事件与最后一条事件之间时间差，可用于线程聚合后，计算业务处理时长
备注：该语法比较消耗性能
6.数据统计分析－SPL语法－bucket 14
1. bucket  span= [as ] 按时间区间分桶，常用于计算变化趋势
Spl:
(1)logtype:apache | bucket timestamp span=1m as ts | stats sum(apache.resp_len) as sum_len by
ts | eval time=formatdate(ts)
6.数据统计分析－SPL语法－bucket 14
1. bucket  span= [as ] 按时间区间分桶，常用于计算变化趋势
Spl:
(2)logtype:apache | bucket timestamp span=1m as ts | stats sum(apache.resp_len) as sum_len by
ts,apache.status | eval time=formatdate(ts) 常用于做分组对比
6.数据统计分析－SPL语法－bucket 14
1. bucket  ranges= [as ] 按数值范围分桶，常用于计算数值分布
Spl:
(1) logtype:apache | bucket apache.status ranges=((0, 200), (200, 300), (300, MAX)) as rs | stats
count(apache.status) by rs 左闭右开，相当于[0, 200)
6.数据统计分析－SPL语法－子查询 14
Spl:
logtype:apache AND [[logtype:apache | stats count(apache.clientip) as count_ by
apache.clientip,apache.method | where count_>5 | fields apache.clientip,apache.method ]]
查询相同源ip（clientip）和请求方法（method）请求数量大于5次的 事件
子查询结果
(apache.clientip:119.129.209.5 AND apache.method:GET) OR (apache.clientip:139.217.26.103 AND apache.method:P
OST) OR (apache.clientip:222.130.179.82 AND apache.method:GET)
6.数据统计分析－SPL语法－starttime，endtime [startime, endtime) 14
指定查询时间范围，常用于进行精确时间统计，比如，昨天一天，上周一周等
Spl:
starttime="-1d/d" endtime="now/d" logtype:apache | bucket timestamp span=1h as ts | stats
sum(apache.resp_len) as sum_len by ts | eval time=formatdate(ts)
昨天24小时，每小时请求长度总和趋势
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（1）按照运营商isp，统计总数
Spl：
logtype:"apache"|stats count(logtype) as count_all by apache.geo.isp | sort by count_all |
limit 5
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（2）status:400-499的数量
Spl：
logtype:"apache" AND apache.status:[400 TO 499]|stats count(logtype) as count_400 by
apache.geo.isp
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（3）status:500-599的数量
Spl：
logtype:"apache" AND apache.status:[500 TO 599]|stats count(logtype) as count_500 by
apache.geo.isp
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（4）请求长度大于1000的数量
Spl：
logtype:"apache" AND apache.resp_len:>1000|stats count(logtype) as len_1000 by apache.geo.isp
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（5）join
Spl：
logtype:"apache"|stats count(logtype) as count_all by apache.geo.isp|sort by count_all|limit
5|join type=left apache.geo.isp[[logtype:"apache" AND apache.status:[400 TO 499]|stats
count(logtype) as count_400 by apache.geo.isp]]|join type=left apache.geo.isp
[[logtype:"apache" AND apache.status:[500 TO 599]|stats count(logtype) as count_500 by
apache.geo.isp]]|join type=left apache.geo.isp [[logtype:"apache" AND
apache.resp_len:>1000|stats count(logtype) as len_1000 by apache.geo.isp]]
6.数据统计分析－SPL语法－join 14
场景：按照运营商isp，统计总数，status:400-499的数量及占比，status:500-599的数量及占比，请求长
度大于1000的数量及占比，形成一张统计报表
（6）统计占比，eval
Spl：
logtype:"apache"|stats count(logtype) as count_all by apache.geo.isp|sort by count_all|limit
5|join type=left apache.geo.isp[[logtype:"apache" AND apache.status:[400 TO 499]|stats
count(logtype) as count_400 by apache.geo.isp]]|join type=left apache.geo.isp
[[logtype:"apache" AND apache.status:[500 TO 599]|stats count(logtype) as count_500 by
apache.geo.isp]]|join type=left apache.geo.isp [[logtype:"apache" AND
apache.resp_len:>1000|stats count(logtype) as len_1000 by apache.geo.isp]]|eval
rate_400=if(empty(count_400),0,count_400/count_all)|eval
rate_500=if(empty(count_500),0,count_500/count_all)|eval
rate_len_1000=if(empty(len_1000),0,len_1000/count_all)
6.数据统计分析－SPL语法－movingavg／rollingstd 14
常用于做变化率统计
Spl：
logtype:"apache"|bucket timestamp span=1m as ts | stats sum(apache.resp_len) as sum_resp_len
by ts | eval time=formatdate(ts)
6.数据统计分析－SPL语法－movingavg／rollingstd 14
常用于做变化率统计
Spl：
logtype:"apache"|bucket timestamp span=1m as ts | stats sum(apache.resp_len) as sum_resp_len
by ts | eval time=formatdate(ts)| movingavg sum_resp_len,3 as moving_avg_resp_len
如果参数为2，可以作为拐点告警
(7047+1309204)/2
(803457+1309204+7047)/3
(2159+803457+1309204)/3
6.数据统计分析－SPL语法－top 14
Spl：
logtype:"apache"|top 10 apache.status
7.仪表盘 14
用户通过spl语法统计出所需要的图形后，可以将图形保存成趋势图，之后就可以再仪表盘界
面添加该趋势图
8.定时任务与报表 14
用户通过spl语法统计出所需要的图形后，可以将图形保存成定时任务或报表元素。（定时任
务用户组内可见，报表属于个人，目前一个人最多10个报表）定时任务会定时运行一个spl统
计结果，并将结果永久保存；报表有一个或多个报表元素构成，并可以发送到用户邮箱。
1.输入spl语法
2.配置出所需要统计图形
3.保存成
定时任务
8.定时任务与报表 14
报表配置
定时任务配置
8.定时任务与报表
实现效果－定时任务
灵活的SPL语法，实现各种统计功能
定时统计结果
8.定时任务与报表
实现效果－定时任务
对于突变的情况引起管理员注意
各台机器的业务请求响应时长对比情况
9.告警
用户可以对搜索结果，配置告警