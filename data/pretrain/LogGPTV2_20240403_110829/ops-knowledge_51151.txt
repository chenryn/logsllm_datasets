I have recently installed a new version of Python and would like to ensure that this version is prioritized when I invoke Python from the command line. Currently, on my 'C' drive, I have two directories: "Python27" (the older version) and "Python32" (the newer version). When I type "python" in the command line, the system launches "Python 2.7". 

To address this, I have updated both the "PATH" and "PYTHONPATH" user environment variables, changing the paths from 'C:\Python27' to 'C:\Python32'. After making these changes, I restarted my system to apply them, but the issue persists. Does anyone have any suggestions for how I can configure my system to use the new version of Python by default?

**Additional Information:**
When I navigate to the 'Python32' directory and execute the "python" command from there, it does indeed launch the new version.

---

**Response:**

One effective method to manage multiple Python versions is to include all the Python installation directories in the %PATH% environment variable but rename the executable files for each version except the one you want to be the default. For example, you could have:

- `C:\Python26\python.exe` (default version)
- `C:\Python27\python27.exe`
- `C:\Python32\python32.exe`

By doing this, you can easily run any specific version of Python from the command line by typing its respective executable name. For instance, `python27` or `python32`. This approach allows you to keep the default `python` command pointing to the version you use most frequently while still providing easy access to other versions.