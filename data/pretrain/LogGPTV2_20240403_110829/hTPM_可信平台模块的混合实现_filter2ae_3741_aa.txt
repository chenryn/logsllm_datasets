# hTPM:可信平台模块的混合实现
|
##### 译文声明
本文是翻译文章，文章原作者 doi，文章来源：doi.org
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 摘要
​
基于硬件的TPM为各种任务关键型应用程序提供了硬件支持的安全解决方案和信任基础。但是，基于硬件的TPM具有一些固有的问题，例如极低的性能，片外安全漏洞以及事件响应敏捷性不足。在即将到来的量子计算时代，至关重要的是要提供抗量子（QR）加密功能而不损害性能。不幸的是，基于硬件的TPM严格的硬件和软件体系结构模型使基于硬件的TPM过渡以适应未来的QR密码系统极为困难。另一方面，基于软件的TPM（例如，基于固件的TPM）提供了基于CPU的片上安全解决方案。他们利用ARMTrustZone或IntelSoftwareGuardExtensions（SGX）等芯片组提供的低级片上基元来构建具有高级别信任计算环境的系统。基于软件的TPM解决方案可提供更高的性能，片上安全性和事件响应敏捷性。但是，它缺少硬件支持的保护和一些重要功能，例如安全密钥存储，针对边信道攻击的鲁棒性，真正的随机数生成等。另外，它的实现高度依赖于每个硬件供应商提供的低级原语，这使得很难将其作为通用解决方案提供。在本文中，我们提出了混合TPM（hTPM），它充分利用了基于硬件的TPM的优势，并通过安全容器内部的基于软件的TPM解决方案来消除了基于硬件的TPM的弱点，例如基于虚拟化的安全性（VBS）。
​
我们将hTPM实施为完全双模式TPM，即让最终用户根据他们的需求在硬件TPM模式和软件TPM模式之间进行完全控制。我们进行了并将对提议的hTPM进行全面的风险分析，以显示如何在实现hTPM时最好地克服安全挑战。最后，我们对提议进行了性能分析，以显示加密操作的显著改进。
## 简介
​ 可信平台模块（TPM）是一种物理或虚拟密码协处理器，可为各种关键任务应用程序提供广泛的安全功能和信任根。TPM的基本安全功能可以总结如下：
  * 安全密钥存储：TPM设计带给设备的一大优势是确保良好的密钥（尤其是免受软件攻击）的安全性。
  * 设备身份验证：TPM可以使用其唯一的每设备RSA或ECC密钥进行安全的设备身份验证。
  * 设备证明：TPM可以通过获取和存储软件状态的安全性度量来确保平台完整性。TPM中的平台配置寄存器（PCR）与身份密钥一起可用于证明系统的运行状况。
  * 秘密绑定：通过使用TPM绑定密钥加密数据，可以使用从设备唯一存储密钥派生的唯一RSA或ECC密钥，因此可以将其安全地绑定到设备。
  * 秘密密封：秘密可以使用特定的设备状态进行密封，并且只有当设备满足密封状态条件时，TPM才能进行数据解密。
​
TPM提供关键功能的应用程序很多种。例如，Bitlocker可以选择在驱动器解密中使用TPM。通过使用TPM，Bitlocker可以为需要基线数据保护级别以满足安全策略的组织提供最透明的用户体验。Bitlocker中TPM的使用可总结如下。BIOS启动并初始化TPM。可信/已测量的组件与TPM交互以将组件的测量结果存储在TPM的PCR中。如果PCR值符合预期值，TPM使用存储根密钥（SRK）来解密卷主密钥（VMK）。从卷中读取已加密的全卷加密密钥（FVEK），并使用解密的VMK对其进行解密。磁盘扇区在访问时用FVEK解密。然后，将明文数据提供给应用程序和进程。TPM提供了关键功能，有助于安全地将VMK密封并绑定到特定设备。TPM还用于系统完整性测量和设备认证。在系统引导过程中，可以测量已加载的引导代码（包括固件和操作系统组件）并将其记录在TPM中。完整性测量与设备专用证明密钥相结合可用于设备证明。远程服务器可以配置访问控制，以根据提供的TPM的设备运行状况来限制对关键资源的访问。
​
从历史上看，TPM是焊接到计算机母板上的分立芯片，称为分立TPM（dTPM）。这种实施方式使计算机的原始设备制造商（OEM）可以与系统的其余部分分开评估和认证TPM。尽管离散TPM实施仍然很常见，但是它们存在一些严重的弱点，这些弱点危及了系统的安全性。首先，dTPM最初并不是设计为加密加速器，而是有意将其设计为低成本设备，以便OEM可以轻松采用它们。因此，自然不可能为应用程序提供及时的密码服务。不幸的是，加密操作是TPM功能的核心部分，不能免除大多数现代安全应用程序的性能要求。TPM应用程序需要在其软件生命周期的某个时刻依赖加密操作，包括密钥生成，加密/解密和签名/验证。因此，dTPM的性能低下会严重损害其应用质量。在将来的TPM中，性能问题可能会变得更加严重，因为QR密码操作将成为强制性措施以抵御基于量子计算的攻击，这不可避免地会导致更加复杂和昂贵的密码算法和操作。其次，由于基于硬件的TPM是一种隔离的硬件解决方案，因此遭受片外攻击。dTPM通过串行总线与CPU的连接打开了攻击面，使攻击者可以通过物理方式访问主板。Jeremy指出了TPM和主机之间嵌入的中介程序可能造成的各种攻击，例如伪造的PCR扩展攻击，低熵随机数生成攻击以及触发主机端TPM驱动程序中的解析错误。第三，它不会在安全事件期间提供响应敏捷性。如今，针对安全漏洞的敏捷反应非常重要，因为在当前的安全形势下，完美的预防已不再是可行的策略。由于dTPM是基于硬件的解决方案，因此很难及时应用安全补丁。
​
一些更新的TPM实现将TPM功能与其他平台组件集成到同一芯片组中，同时仍提供类似于dTPM芯片的逻辑分离。一个典型的例子是基于固件的TPM（fTPM）。fTPM是基于TPM的软件，利用商用CPU的内置安全功能进行信任计算。例如，fTPM在ARM上使用了TrustZone。TrustZone提供了与平台其他软件（包括OS，应用程序和固件）高度隔离的运行时环境。通过这些功能，fTPM为平台提供了一组TPM安全功能，类似于专用安全硬件提供的功能。它试图通过引入诸如新硬件组件之类的低级原语来克服诸如安全存储，安全计数器，时钟和熵之类的挑战。但是，基于纯软件的TPM不能提供基于硬件的信任根，这在现代安全领域中非常重要。缺乏硬件安全支持意味着在基于软件的攻击和旁道攻击中存在固有的漏洞。此外，基于纯软件的解决方案在预引导阶段限制了其适用性，并可能导致合规性问题。
​
在本文中，我们提出了混合TPM（hTPM），它有效地结合了硬件TPM和软件TPM的优点，并提供了一种复杂的设计来克服将基于硬件的TPM和基于软件的TPM结合在一起时遇到的安全挑战。与dTPM相比，我们的hTPM实施显示出显着的性能改进，并且比纯硬件或纯软件的TPM解决方案保证了更强的安全性。
## 现有的信任平台模块架构
​ 在本章中，我们将更深入地研究基于硬件的TPM和软件TPM解决方案，并分析它们的弱点。
###  2.1基于硬件的TPM
​
基于硬件的TPM是提供可信平台功能的主要方式。它是一种专用的低成本芯片，在自己的防篡改半导体封装中实现TPM功能。从理论上讲，硬件TPM是最安全的，因为它没有与软件相关的漏洞，并且硬件本质上提供了一种强大的方式来提供避免侧通道攻击的安全功能。但是，硬件TPM具有许多固有的问题，这些问题在交付高质量应用程序时引起了巨大挑战。
  * 低性能由于硬件TPM最初不是为加密加速而设计的，因此会遭受严重的性能下降。图1显示了从各种TPM命令收集的性能数据。它是在商用HP设备（英特尔至强CPUE3-1505Mv63GHz，300Mhz，4核，8个逻辑处理器和具有TPM规范版本2.0的英飞凌（IFX）TPM版本7.61.2785.0）中进行测量的。时间是使用C++11中的chrono库以纳秒粒度测量的。如图1所示，在RSA签名，解密，引用和密钥生成中观察到明显的性能问题。延迟数百毫秒（例如RSA2048解密时间超过500毫秒）对于大多数应用程序来说是完全不可接受的，因为它会严重破坏用户的体验。