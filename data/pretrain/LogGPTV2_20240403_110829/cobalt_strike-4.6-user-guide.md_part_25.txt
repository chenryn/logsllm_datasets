OpenthedialogtosetupthePowerShellWebDeliveryAttack
Example
openPowerShellWebDialog();
openPreferencesDialog
Openthepreferencesdialog
Example
openPreferencesDialog();
openProcessBrowser
OpenaprocessbrowserforoneormoreBeacons
UserGuide www.helpsystems.com page:286
AggressorScript/Functions
Arguments
$1-theidforthebeacon.ThismaybeanarrayorasingleID.
Example
item "Processes" {
openProcessBrowser($1);
}
openSOCKSBrowser
OpenthetabtolistSOCKSproxyservers
Example
openSOCKSBrowser();
openSOCKSSetup
opentheSOCKSproxyserversetupdialog
Arguments
$1-theBeaconIDtoapplythisfeatureto
Example
item "SOCKS Server" {
local('$bid');
foreach $bid ($1) {
openSOCKSSetup($bid);
}
}
openScreenshotBrowser
Openthescreenshotbrowsertab
Example
openScreenshotBrowser();
openScriptConsole
OpentheAggressorScriptconsole.
Example
openScriptConsole();
UserGuide www.helpsystems.com page:287
AggressorScript/Functions
openScriptManager
Openthetabforthescriptmanager.
Example
openScriptManager();
openScriptedWebDialog
OpenthedialogtosetupaScriptedWebDeliveryAttack
Example
openScriptedWebDialog();
openServiceBrowser
Openservicebrowserdialog
Arguments
$1-anarrayoftargetstoshowservicesfor
Example
openServiceBrowser(@("192.168.1.3"));
openSiteManager
Openthesitemanager.
Example
openSiteManager();
openSpawnAsDialog
Opendialogtospawnapayloadasanotheruser
Arguments
$1-theBeaconIDtoapplythisfeatureto
Example
item "Spawn As..." {
local('$bid');
foreach $bid ($1) {
UserGuide www.helpsystems.com page:288
AggressorScript/Functions
openSpawnAsDialog($bid);
}
}
openSpearPhishDialog
Openthedialogforthespearphishingtool.
Example
openSpearPhishDialog();
openSystemInformationDialog
Openthesysteminformationdialog.
Example
openSystemInformationDialog();
openSystemProfilerDialog
Openthedialogtosetupthesystemprofiler.
Example
openSystemProfilerDialog();
openTargetBrowser
Openthetargetsbrowser
Example
openTargetBrowser();
openWebLog
Opentheweblogtab.
Example
openWebLog();
openWindowsDropperDialog
REMOVEDRemovedinCobaltStrike4.0.
UserGuide www.helpsystems.com page:289
AggressorScript/Functions
openWindowsExecutableDialog
OpenthedialogtogenerateaWindowsexecutable
Example
openWindowsExecutableDialog();
openWindowsExecutableStage
OpenthedialogtogenerateastagelessWindowsexecutable
Example
openWindowsExecutableStage();
payload
ExportsarawpayloadforaspecificCobaltStrikelistener
Arguments
$1-thelistenername
$2-x86|x64thearchitectureofthepayload
$3-exitmethod:'thread'(leavethethreadwhendone)or'process'(exittheprocesswhen
done).Use'thread'ifinjectingintoanexistingprocess.
Returns
Ascalarcontainingposition-independentcodeforthespecifiedlistener.
Example
$data = payload("my listener", "x86", "process");
$handle = openf(">out.bin");
writeb($handle, $data);
closef($handle);
payload_bootstrap_hint
GettheoffsettofunctionpointerhintsusedbyBeacon'sReflectiveLoader.Populatethesehints
withtheasked-forprocessaddressestohaveBeaconloaditselfintomemoryinamoreOPSEC-
safeway.
Arguments
$1-thepayloadposition-independentcode(specifically,Beacon)
$2-thefunctiontogetthepatchlocationfor
UserGuide www.helpsystems.com page:290
AggressorScript/Functions
Notes
l CobaltStrike'sBeaconhasaprotocoltoacceptartifact-providedfunctionpointersfor
functionsrequiredbyBeacon'sReflectiveLoader.Theprotocolistopatchthelocationof
GetProcAddressandGetModuleHandleAintotheBeaconDLL.Useofthisprotocol
allowsBeacontoloaditselfinmemorywithouttriggeringshellcodedetectionheuristics
thatmonitorreadsofkernel32'sExportAddressTable.Thisprotocolisoptional.Artifacts
thatdon'tfollowthisprotocolwillfallbacktoresolvingkeyfunctionsviatheExport
AddressTable.
l TheArtifactKitandResourceKitbothimplementthisprotocol.Downloadthesekitsto
seehowtousethisfunction.
Returns
TheoffsettoamemorylocationtopatchwithapointerforaspecificfunctionusedbyBeacon's
ReflectiveLoader.
payload_local
ExportsarawpayloadforaspecificCobaltStrikelistener.Usethisfunctionwhenyouplanto
spawnthispayloadfromanotherBeaconsession.CobaltStrikewillgenerateapayloadthat
embedskeyfunctionpointers,neededtobootstraptheagent,takenfromtheparentsession's
metadata.
Arguments
$1-theparentBeaconsessionID
$2-thelistenername
$3-x86|x64thearchitectureofthepayload
$4-exitmethod:'thread'(leavethethreadwhendone)or'process'(exittheprocesswhen
done).Use'thread'ifinjectingintoanexistingprocess.
Returns
Ascalarcontainingposition-independentcodeforthespecifiedlistener.
Example
$data = payload_local($bid, "my listener", "x86", "process");
$handle = openf(">out.bin");
writeb($handle, $data);
closef($handle);
pe_insert_rich_header
InsertrichheaderdataintoBeaconDLLContent. Ifthereisexistingrichheader
information,itwillbereplaced.
UserGuide www.helpsystems.com page:291
AggressorScript/Functions
Arguments
$1-BeaconDLLcontent
$2-Richheader
Returns
UpdatedDLLContent
Note
Therichheaderlengthshouldbeona4byteboundaryforsubsequentchecksumcalculations.
Example
# -------------------------------------
# Insert (replace) rich header
# -------------------------------------
$rich_header = "";
$temp_dll = pe_insert_rich_header($temp_dll, $rich_header);
pe_mask
MaskdataintheBeaconDLLContentbasedonpositionandlength.
Arguments
$1-BeaconDLLcontent
$2-Startlocation
$3-Lengthtomask
$4-Bytevaluemaskkey(int)
Returns
UpdatedDLLContent
Example
#
===========================================================================
# $1 = Beacon DLL content
#
===========================================================================
sub demo_pe_mask {
local('$temp_dll, $start, $length, $maskkey');
local('%pemap');
local('@loc_en, @val_en');
$temp_dll = $1;
# -------------------------------------
# Inspect the current DLL...
UserGuide www.helpsystems.com page:292
AggressorScript/Functions
# -------------------------------------
%pemap = pedump($temp_dll);
@loc_en = values(%pemap, @("Export.Name."));
@val_en = values(%pemap, @("Export.Name."));
if (size(@val_en) != 1) {
warn("Unexpected size of export name value array: " . size(@val_en));
} else {
warn("Current export value: " . @val_en[0]);
}
if (size(@loc_en) != 1) {
warn("Unexpected size of export location array: " . size(@loc_en));
} else {
warn("Current export name location: " . @loc_en[0]);
}
# -------------------------------------
# Set parameters (parse number as base 10)
# -------------------------------------
$start = parseNumber(@loc_en[0], 10);
$length = 4;
$maskkey = 22;
# -------------------------------------
# mask some data in a dll
# -------------------------------------
# warn("pe_mask(dll, " . $start . ", " . $length . ", " . $maskkey .
")");
$temp_dll = pe_mask($temp_dll, $start, $length, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# un-mask (running the same mask a second time should "un-mask")
# (This would normally be done by the reflective loader)
# -------------------------------------
# warn("pe_mask(dll, " . $start . ", " . $length . ", " . $maskkey .
")");
# $temp_dll = pe_mask($temp_dll, $start, $length, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# All Done! Give back edited DLL!
# -------------------------------------
return $temp_dll;
}
pe_mask_section
MaskdataintheBeaconDLLContentbasedonpositionandlength.
UserGuide www.helpsystems.com page:293
AggressorScript/Functions
Arguments
$1-BeaconDLLcontent
$2-Sectionname
$3-Bytevaluemaskkey(int)
Returns
UpdatedDLLContent
Example
#
===========================================================================
# $1 = Beacon DLL content
#
===========================================================================
sub demo_pe_mask_section {
local('$temp_dll, $section_name, $maskkey');
local('@loc_en, @val_en');
$temp_dll = $1;
# -------------------------------------
# Set parameters
# -------------------------------------
$section_name = ".text";
$maskkey = 23;
# -------------------------------------
# mask a section in a dll
# -------------------------------------
# warn("pe_mask_section(dll, " . $section_name . ", " . $maskkey . ")");
$temp_dll = pe_mask_section($temp_dll, $section_name, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# un-mask (running the same mask a second time should "un-mask")
# (This would normally be done by the reflective loader)
# -------------------------------------
# warn("pe_mask_section(dll, " . $section_name . ", " . $maskkey . ")");
# $temp_dll = pe_mask_section($temp_dll, $section_name, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# All Done! Give back edited DLL!
# -------------------------------------
return $temp_dll;
}
UserGuide www.helpsystems.com page:294
AggressorScript/Functions
pe_mask_string
MaskastringintheBeaconDLLContentbasedonposition.
Arguments
$1-BeaconDLLcontent
$2-Startlocation
$3-Bytevaluemaskkey(int)
Returns
UpdatedDLLContent
Example
#
===========================================================================
# $1 = Beacon DLL content
#
===========================================================================
sub demo_pe_mask_string {
local('$temp_dll, $location, $length, $maskkey');
local('%pemap');
local('@loc);
$temp_dll = $1;
# -------------------------------------
# Inspect the current DLL...
# -------------------------------------
%pemap = pedump($temp_dll);
@loc = values(%pemap, @("Sections.AddressOfName.0."));
if (size(@loc) != 1) {
warn("Unexpected size of section name location array: " . size
(@loc));
} else {
warn("Current section name location: " . @loc[0]);
}
# -------------------------------------
# Set parameters
# -------------------------------------
$location = @loc[0];
$length = 5;
$maskkey = 23;
# -------------------------------------
# pe_mask_string (mask a string in a dll)
# -------------------------------------
UserGuide www.helpsystems.com page:295
AggressorScript/Functions
# warn("pe_mask_string(dll, " . $location . ", " . $maskkey . ")");
$temp_dll = pe_mask_string($temp_dll, $location, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# un-mask (running the same mask a second time should "un-mask")
# we are unmasking the length of the string and the null character
# (This would normally be done by the reflective loader)
# -------------------------------------
# warn("pe_mask(dll, " . $location . ", " . $length . ", " . $maskkey .
")");
# $temp_dll = pe_mask($temp_dll, $location, $length, $maskkey);
# dump_my_pe($temp_dll);
# -------------------------------------
# All Done! Give back edited DLL!
# -------------------------------------
return $temp_dll;
}
pe_patch_code
PatchcodeintheBeaconDLLContentbasedonfind/replacein'.text'section'.
Arguments
$1-BeaconDLLcontent
$2-bytearraytofindforresolveoffset
$3-bytearrayplaceatresolvedoffset(overwritedata)
Returns
UpdatedDLLContent
Example
#
===========================================================================
# $1 = Beacon DLL content
#
===========================================================================
sub demo_pe_patch_code {
local('$temp_dll, $findme, $replacement');
$temp_dll = $1;
# ====== simple text values ======
$findme = "abcABC123";
UserGuide www.helpsystems.com page:296
AggressorScript/Functions
$replacement = "123ABCabc";
# warn("pe_patch_code(dll, " . $findme . ", " . $replacement . ")");
$temp_dll = pe_patch_code($temp_dll, $findme, $replacement);
# ====== byte array as a hex string ======
$findme = "\x01\x02\x03\xfc\xfe\xff";
$replacement = "\x01\x02\x03\xfc\xfe\xff";
# warn("pe_patch_code(dll, " . $findme . ", " . $replacement . ")");
$temp_dll = pe_patch_code($temp_dll, $findme, $replacement);
# dump_my_pe($temp_dll);
# -------------------------------------