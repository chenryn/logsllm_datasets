-p**。
### 管理内核模块
Linux至少有两种方法来管理内核模块。较旧的方法是使用围绕insmod
suite-insmod构建的一组命令代表插入模块，用于处理模块。第二种方法，使用**modprobe**命令，我们将在本章稍后使用。在这里，我们使用insmod套件中的**lsmod**命令列出内核中已安装的模块：
kali \>lsmod
Module Size Used by
nfnetlink_queue 20480 0
nfnetlink_log 201480 0
nfnetlink 16384 2 nfnetlink_log, nfnetlink_queue
bluetooth 516096 0
rfkill 0 2 bluetooth
­­snip­­
如你所见，lsmod命令列出了所有内核模块，以及有关它们的大小和其他模块可能使用它们的信息。因此，举个简单的例子——nf
netlink模块（一种用于内核和用户空间之间通信的基于消息的协议）是16384字节且由nf
netlink_日志模块和nf_netlink_队列模块使用。
从insmod套件中，我们可以使用insmod加载或插入模块，并使用rmmod删除模块，该模块代表remove模块。这些命令并不完美，可能没有考虑模块依赖性，因此使用它们会使内核不稳定或无法使用。因此，Linux的现代发行版现在添加了modprobe命令，该命令自动加载依赖项并使加载和删除内核模块的风险降低。我们马上就会介绍modprobe。首先，让我们看看如何获得有关我们模块的更多信息。
#### *使用modinfo查找更多信息*
要进一步了解任何内核模块，我们可以使用**modinfo**命令。这个命令的语法很简单：modinfo后加入你想要了解的模块的名称。举个例子，如果要检索先前运行lsmod命令时看到的蓝牙内核模块的基本信息，可以输入以下内容：
kali \>modinfo bluetooth
filename: /lib/modules/4.6.0­kali­amd64/kernel/net/bluetooth/bluetooth.ko
alias: net­pf­31
license: GPL
version: 2.21
description: Bluetooth Core ver 2.21
author: Marcel Holtman \
srcversion: FCFDE98577FEA911A3DAFA9
depends: rfkill, crc16
intree: Y
vermagic: 4.6.0­kali1­amd64 SMP mod_unload modversions
parm: disable_esco: Disable eSCO connection creation (bool)
parm: disable_ertm: Disable enhanced retransmission mode (bool)
如你所见，modinfo命令显示有关此内核模块的重要信息，这是在系统上使用蓝牙所必需的。
请注意，在许多其他事情中，它列出了模块依赖项：rfkill和crc16。
依赖项是必须安装的模块才能使蓝牙模块正常运行。
通常，在排除特定硬件设备无法正常工作的原因时，这是有用的信息。除了注意依赖项之外，还可以获取有关模块版本和模块开发内核版本的信息，然后确保它们与您运行的版本相匹配。
#### *使用modprobe添加和删除模块*
Linux的大多数新版本，包括Kali
Linux，都包含用于LKM管理的modprobe命令。要将模块添加到内核，可以将modprobe命令加-a（add）选项一起使用，如下所示：
kali \>modprobe -a \
要删除模块，请使用modprobe的-r（remove）选项，并在其后加入模块名称：
kali \>modprobe -r \
使用modprobe而不是insmod的一个主要优点是modprobe了解依赖项，选项以及安装和删除过程，并且在进行更改之前会考虑所有这些因素。因此，使用modprobe添加和删除内核模块更容易，更安全。
#### *插入和删除内核模块*
让我们尝试插入和移除测试模块，以帮助你熟悉此过程。让我们设想一下，你刚刚安装了一个新的显卡，并且需要为它安装驱动程序。记住，设备的驱动程序通常直接安装在内核中，以便为它们提供正确运行所需的访问权限。这也为恶意黑客安装rootkit或其他监听设备提供了肥沃的土壤。
让我们假设出于演示目的（不要实际运行这些命令），我们要添加一个名为HackersAriseNewVideo的新视频驱动程序。你可以通过输入以下内容将其添加到内核中：
kali \>modprobe -a HackersAriseNewVideo
要测试新模块是否正确加载，你可以通过运行dmesg命令来知道，该命令从内核打印出消息缓冲区，然后过滤“video”内容，并查找任何指示问题的警报：
kali \>dmesg \| grep video
如果有任何内核信息中包含“video”一词，它们将显示在这里。如果没有显示任何内容，则没有包含该关键字的信息。
然后，要删除相同的模块，可以输入相同的命令，但使用-r（remove）选项：
kali \>modprobe -r HackersAriseNewVideo
请记住，可加载的内核模块对Linux用户/管理员来说是一种便利，但它们也是一个主要的安全漏洞，也是专业黑客应该熟悉的漏洞。
正如我之前所说，LKM可以成为让你的rootkit进入内核并造成严重破坏的完美工具！
### 总结
内核对于操作系统的整体操作至关重要，因此，它是一个受保护的区域。
任何无意中添加到内核中的东西都可能破坏操作系统甚至控制它。
LKM使系统管理员能够将模块直接添加到内核中，而不必每次添加模块时都重新构建整个内核。
如果黑客可以诱使系统管理员添加恶意LKM，则黑客可以完全控制系统，通常这不会让系统管理员意识到。
16
--
使用作业调度自动化任务
----------------------
AUTOMATING TASKS WITH JOB SCHEDULING
![](media/451fdbee142e8cd4684d71b24707d050.jpg)
像任何使用Linux的人一样，黑客经常有他们想要定期运行的任务、脚本或其他任务。例如，你可能希望为你的系统设置一个自动文件备份，
或者你希望像我们在第11章做的那样转存日志文件。另一方面，黑客可能希望每天晚上或者在他们工作或上学的时候让他们的系统运行第8章里的
MySQLscanner.sh脚本。这些都是调度自动化作业的例子。调度任务允许你在无须考虑的情况下运行任务，并且你可以在不使用系统的时候运行调度任务，这样你就有了大量的空闲资源。
Linux系统管理员，或者是黑客，可能希望在系统启动时自动启动特定的脚本或服务。在第12章，我们讲述了使用PostgreSQL
数据库和黑客/渗透测试框架 Metasploit 关联。比起每次启动Metasploit
前手动启动PostgreSQL数据库，你可以让PostgreSQL（或者是任何服务或脚本）在系统启动时自动启动。
在本章节，你将学到如何使用**cron**守护进程和**crontab**设置一个脚本，让其甚至在系统无人操作时自动运行。你还将学到如何设置开机时自启动脚本，从而为你提供运行黑客攻击时所需的必要服务。
### 任务调度或使其自动运行
cron守护程序和crontab是用于调度常规任务的最有用的工具。
第一个是crond，它是一个在后台运行的守护进程。cron守护程序检查cron列表以在指定时间运行哪些命令。
我们可以更改cron列表，以安排任务或工作在特定日期或时间，每天特定时间或每隔这么多周或几个月定期执行。
想要调度一个任务或作业，需要在/etc/crontab
目录下的crontab文件里输入它们。crontab列表有七个字段：前五个字段用于计划运行任务的时间，第六个字段指定用户，第七个字段用于要执行的命令的绝对路径。如果我们使用crontab来调度脚本，我们可以将脚本的绝对路径放在第七个字段里。
五个时间字段中的每一个都代表一个不同的时间元素：按顺序来是分钟、小时、日、月、周。时间的每一个元素都必须用数字表示，所以3月表示为3（你不能直接输入“March”）。周从0开始，就是代表周日，到7结束，也是代表周日。表16­1总结了这个。
表 16­1: crontab里的时间表示
| 时间单位         | 表示 |
|------------------|------|
| Minute           | 0-59 |
| Hour             | 0-23 |
| Day of the month | 1-31 |
| Month            | 1-12 |
| Day of the week  | 0-7  |
因此，如果我们编写了一个扫描全球易受攻击的开放端口的脚本，并希望它在周一到周五的凌晨2:30运行，我们可以在crontab文件中调度它。我们将简要介绍如何将这些信息输入crontab，但首先让我们讨论需要遵循的格式，如代码清单列表16-1所示。
M H DOM MON DOW USER COMMAND
30 2 \* \* 1­5 root /root/myscanningscript
清单16­1: 调度命令的格式
crontab文件已经帮助您标记了列。注意第一个字段提供分钟(30)，第二个字段提供小时(2)，第五个字段提供周(1-5,
周一到周五)，第六个字段定义了用户(root)，第七个字段是脚本的路径。第三个和第四个字段包含了星号
(\*)，因为我们希望这个脚本在每周一至周五启动，而不在意是几月几日。
在配置列表16-1
中，第五个字段使用数字间的短横杠（-）定义了周的范围。如果你希望在非连续的周执行脚本，你可以用逗号（,）将值分开。例如周二和周四就是2,4。
要编辑crontab，可以运行crontab命令，后面接 **-e**（编辑）选项：
kali \>crontab -e
Select an editor. To change later, run 'select­editor'.
1. /bin/nano \leafpad /etc/crontab
我已经使用命令用Leafpad打开了crontab。你可以在清单16-2中看到文件片段。
\# /etc/crontab: system­wide crontab
\# Unlike any other crontab, you don't have to run the 'crontab'
\# command to install the new version when you edit this file
\# and files in /etc/cron.d. These files also have username fields,
\# which no other crontabs do.
SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
\# m h dom mon dow user command
17 \* \* \* \* root cd / && run­parts ­­report /etc/cron.hourly
25 6 \* \* \* root test ­x /usr/sbin/anacron II ( cd / && run­parts
47 6 \* \* 7 root test ­x /usr/sbin/anacron II ( cd / && run­parts
52 6 1 \* \* root test ­x /usr/sbin/anacron II ( cd / && run­parts
\#
清单16­2: 使用文本编辑器打开crontab文件
现在，要设置一个新的定期计划任务，只需新输入一行并保存文件。
#### *设置一个备份计划任务*
让我们从系统管理员的角度看这个工具。作为一个系统管理员，作为系统管理员，你经常希望在当系统未被使用，资源随时可用时，每小时备份所有文件。（系统备份往往需要工作时间无法提供的系统资源。）理想的时间可能是周末的午夜。而不是必须在周六晚上/周日早上2点登录（我确定你当时还有其他优先事项），你可以安排备份在那个时候自动启动，即使你不在你的电脑旁。
注意小时字段使用24小时制而不是AM和PM制，所以例如下午1点是13：00。并且注意周字段（DOW）从周日开始（0）到周六结束（6）。
要想创建任务，你只需要编辑crontab文件，添加固定格式的一行。所以，假设你想要创建一个使用一个叫“backup”的用户运行的备份任务。你需要写一个用于备份系统的脚本并保存为/bin目录下的systembackup.sh，然后让这个备份脚本每周六晚上/周日早上2点启动，在crontab中添加下行：
00 2 \* \* 0 backup /bin/systembackup.sh
注意 \* 通配符是用来表示
“任何”，并且使用在日，月，或周里使用它将读作每日或每月。如果你阅读这行，它表示：
1. 在0分，每个小时的开始 (00)，
2. 在2点(2)，
3. 在每日 (\*)，
4. 在每月 (\*)，