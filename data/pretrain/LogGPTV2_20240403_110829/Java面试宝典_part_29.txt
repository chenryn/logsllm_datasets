>db.collectionName.insert({"key":"value"})
>db.collectionName.save({"key":"value"})
75、在MongoDB中如何除去一个数据库Collection Methods24.在MongoDB中如何除去一
个数据库
MongoDB 的dropDatabase()命令用于删除已有数据库。
>db.dropDatabase()
76、在MongoDB中如何创建一个集合。
在 MongoDB 中，创建集合采用db.createCollection(name, options)方法。options是一个用来指定集合配置的文档。
>db.createCollection("collectionName")db.createCollection() - MongoDB Manual>db.createCollection("
77、在MongoDB中如何查看一个已经创建的集合
可以使用show collections 查看当前数据库中的所有集合清单
>show collections
78、在MongoDB中如何删除一个集合
MongoDB 利用db.collection.drop()来删除数据库中的集合。
>db.CollectionName.drop()
79、为什么要在MongoDB中使用分析器
数据库分析工具(Database Profiler)会针对正在运行的mongod实例收集数据库命令执行的相关信息。包括增删改查的命令以及配置和管理
命令。分析器(profiler)会写入所有收集的数据到 system.profile集合，一个capped集合在管理员数据库。分析器默认是关闭的你能通过per
数据库或per实例开启。
80、MongoDB支持主键外键关系吗
默认MongoDB不支持主键和外键关系。 用Mongodb本身的API需要硬编码才能实现外键关联，不够直观且难度较大。可以参考以下链接
81、MongoDB支持哪些数据类型
String
Integer
Double
Boolean
Object
Object ID
Arrays
Min/Max Keys
Datetime
Code
Regular Expression等
82、为什么要在MongoDB中用"Code"数据类型
"Code"类型用于在文档中存储 JavaScript 代码。
83、为什么要在MongoDB中用"Regular Expression"数据类型
"Regular Expression"类型用于在文档中存储正则表达式
84、为什么在MongoDB中使用"Object ID"数据类型
"ObjectID"数据类型用于存储文档id
85、如何在集合中插入一个文档
要想将数据插入 MongoDB 集合中，需要使用insert()或save()方法。
>db.collectionName.insert({"key":"value"})
>db.collectionName.save({"key":"value"})
86、"ObjectID"有哪些部分组成
一共有四部分组成:时间戳、客户端ID、客户进程ID、三个字节的增量计数器
_id是一个 12 字节长的十六进制数，它保证了每一个文档的唯一性。在插入文档时，需要提供_id。如果你不提供，那么 MongoDB 就会
为每一文档提供一个唯一的 id。_id的头 4 个字节代表的是当前的时间戳，接着的后 3 个字节表示的是机器 id 号，接着的 2 个字节表示
MongoDB 服务器进程 id，最后的 3 个字节代表递增值。
87、在MongoDb中什么是索引
索引用于高效的执行查询.没有索引MongoDB将扫描查询整个集合中的所有文档这种扫描效率很低，需要处理大量数据。索引是一种特殊的
数据结构，将一小块数据集保存为容易遍历的形式。索引能够存储某种特殊字段或字段集的值，并按照索引指定的方式将字段值进行排序。
88、如何添加索引
使用db.collection.createIndex()在集合中创建一个索引
>db.collectionName.createIndex({columnName:1})
89、用什么方法可以格式化输出结果
使用pretty() 方法可以格式化显示结果
>db.collectionName.find().pretty()
90、如何使用"AND"或"OR"条件循环查询集合中的文档
在find()方法中，如果传入多个键，并用逗号(,)分隔它们，那么 MongoDB 会把它看成是AND条件。
>db.mycol.find({key1:value1, key2:value2}).pretty()
若基于OR条件来查询文档，可以使用关键字$or。
>db.mycol.find(
{
$or: [
{key1: value1}, {key2:value2}
]
}
).pretty()
91、在MongoDB中如何更新数据
update()与save()方法都能用于更新集合中的文档。update()方法更新已有文档中的值，而save()方法则是用传入该方法的文档来替
换已有文档。
>db.collectionName.update({key:value},{$set:{newkey:newValue}})
92、如何删除文档
MongoDB 利用 remove() 方法 清除集合中的文档。它有 2 个可选参数：
deletion criteria：（可选）删除文档的标准。
justOne：（可选）如果设为 true 或 1，则只删除一个文档。
>db.collectionName.remove({key:value})
93、在MongoDB中如何排序
MongoDB 中的文档排序是通过sort()方法来实现的。sort()方法可以通过一些参数来指定要进行排序的字段，并使用 1 和 -1 来指定排
序方式，其中 1 表示升序，而 -1 表示降序。
>db.connectionName.find({key:value}).sort({columnName:1})
94、什么是聚合
聚合操作能够处理数据记录并返回计算结果。聚合操作能将多个文档中的值组合起来，对成组数据执行各种操作，返回单一的结果。它相当
于 SQL 中的 count(*) 组合 group by。对于 MongoDB 中的聚合操作，应该使用aggregate()方法。
>db.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)
95、在MongoDB中什么是副本集
在MongoDB中副本集由一组MongoDB实例组成，包括一个主节点多个次节点，MongoDB客户端的所有数据都写入主节点(Primary),副节
点从主节点同步写入数据，以保持所有复制集内存储相同的数据，提高数据可用性。
String面试题
1、不同版本的 Spring Framework 有哪些主要功能？
Version Feature
Spring
发布于 2007 年。这是第一个支持注解的版本。
2.5
Spring
发布于 2009 年。它完全利用了 Java5 中的改进，并为 JEE6 提供了支 持
3.0
Spring
发布于 2013 年。这是第一个完全支持 JAVA8 的版本。
4.0
Spring Spring Framework 5.0的最大特点之一是响应式编程（Reactive Programming）。 响应式编程核心功能和对响应式
5.0 endpoints的支持可通过Spring Framework 5.0中获得。
2、什么是 Spring Framework？
Spring 是一个开源应用框架，旨在降低应用程序开发的复杂度。它是轻量级、松散耦合的。它具有分层体系结构，允许用户选择组件，同
时还为 J2EE 应用程序开发提供了一个有凝聚力的框架。它可以集成其他框架，如 Structs、Hibernate、EJB 等，所以又称为框架的框架。
3、列举 Spring Framework 的优点。
由于 Spring Frameworks 的分层架构，用户可以自由选择自己需要的组件。Spring Framework 支持 POJO(Plain Old Java Object) 编程，
从而具备持续集成和可测试性。由于依赖注入和控制反转，JDBC 得以简化。它是开源免费的。
4、Spring Framework 有哪些不同的功能？
轻量级 - Spring 在代码量和透明度方面都很轻便。IOC - 控制反转 AOP - 面向切面编程可以将应用业务逻辑和系统服务分离，以实现高内
聚。容器 - Spring 负责创建和管理对象（Bean）的生命周期和配置。MVC - 对 web 应用提供了高度可配置性，其他框架的集成也十分方
便。事务管理 - 提供了用于事务管理的通用抽象层。Spring 的事务支持也可用于容器较少的环境。JDBC 异常 - Spring的 JDBC 抽象层提供
了一个异常层次结构，简化了错误处理策略。
5、Spring Framework 中有多少个模块，它们分别是什么？
Spring 核心容器 – 该层基本上是 Spring Framework 的核心。它包含以下模块：
 Spring Core
 Spring Bean
 SpEL (Spring Expression Language)
 Spring Context
数据访问/集成 – 该层提供与数据库交互的支持。它包含以下模块：
 JDBC (Java DataBase Connectivity)
 ORM (Object Relational Mapping)
 OXM (Object XML Mappers)
 JMS (Java Messaging Service)
 Transaction
Web – 该层提供了创建 Web 应用程序的支持。它包含以下模块：
Web
Web – Servlet
Web – Socket
Web – Portlet
AOP
该层支持面向切面编程
Instrumentation
该层为类检测和类加载器实现提供支持。
Test
该层为使用 JUnit 和 TestNG 进行测试提供支持。
几个杂项模块:
Messaging – 该模块为 STOMP 提供支持。它还支持注解编程模型，该模型用于从 WebSocket 客户端路由和处理 STOMP 消息。Aspects –
该模块为与 AspectJ 的集成提供支持。
6、什么是 Spring 配置文件？
Spring 配置文件是 XML 文件。该文件主要包含类信息。它描述了这些类是如何配置以及相互引入的。但是，XML 配置文件冗长且更加干
净。如果没有正确规划和编写，那么在大项目中管理变得非常困难
7、Spring 应用程序有哪些不同组件？
Spring 应用一般有以下组件：
 接口 - 定义功能。
 Bean 类 - 它包含属性，setter 和 getter 方法，函数等。
 Spring 面向切面编程（AOP） - 提供面向切面编程的功能。
 Bean 配置文件 - 包含类的信息以及如何配置它们。
 用户程序 - 它使用接口。
8、使用 Spring 有哪些方式？
使用 Spring 有以下方式：
 作为一个成熟的 Spring Web 应用程序。
作为第三方 Web 框架，使用 Spring Frameworks 中间层。
 用于远程使用。
 作为企业级 Java Bean，它可以包装现有的 POJO（Plain Old Java Objects）。
9、什么是 Spring IOC 容器？
Spring 框架的核心是 Spring 容器。容器创建对象，将它们装配在一起，配置它们并管理它们的完整生命周期。Spring 容器使用依赖注入来