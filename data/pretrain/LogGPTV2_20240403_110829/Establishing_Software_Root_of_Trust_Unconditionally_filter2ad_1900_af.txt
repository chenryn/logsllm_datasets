off, the slowdown increases to 53.13x. This shows that the
adversary can gain a real advantage by cache pre-fetching.
VIII. RELATED WORK
A. Past Attestation Protocols
Past attestation protocols, whether software-based [7], [33],
[39], [63], [64], [66], cryptographic-based [8], [18], [21], [31],
[38], [53], or hybrid [43], [78], have different security goals
than those of RoT requirements deﬁned here: some are weaker
and some are stronger. For example, whether these protocols
are used for single or multiple devices, they typically aim
to verify a weaker property, namely the integrity of software
– not system – state. However, they also satisfy a stronger
property: in all cryptographic and hybrid attestation protocols
veriﬁcation can be remote and can be repeated after boot, rather
than local and limited to pre-boot time.
Given their different goals,
is unsurprising that past
attestation protocols fail to satisfy some RoT establishment re-
quirements deﬁned in Section II even for bounded adversaries
it
and secret-key protection in trusted hardware modules. For ex-
ample, these protocols need not be concerned with the content
of system registers (e.g., general processor and I/O registers),
since they cannot contain executable code. Furthermore, they
need not satisfy the concurrent-transaction order and duration
requirements (see Section II-C) of the veriﬁer’s protocol since
they need not establish any system state properties, such as
secure initial state in multi-device systems. Finally, none of
these protocols aims to satisfy security properties provably
and unconditionally. Beyond these common differences, past
protocols exhibit some speciﬁc differences.
Software-based attestation. Some applications in which
software-based attestation can be beneﬁcially used do not re-
quire control-ﬂow integrity [58], and naturally this requirement
is not always satisﬁed [11], [42]. A more subtle challenge
arises if one uses traditional checksum designs with a ﬁxed time
bound in a multi-device system since scalable time bounds
are important. As shown in Section II-C, these checksums
cannot scale time bounds by repeated checksum invocation
with different nonces and retain optimality. Software-based
attestation models [7], [33] also face this challenge.
their
Despite
differences
from RoT establishment,
software-based attestation designs met their goals [63], [64],
and offered deep insights on how to detect malware on
peripheral controllers [43], embedded devices [11],
[42],
mobile phones [33], and special processors; e.g., TPMs [39].
Cryptographic attestation. Cryptographic protocols for re-
mote attestation typically require a trusted hardware module in
each device, which can be as simple as a ROM module [38],
to protect a secret key for computing digital signatures or
MACs. If used in RoT establishment, the signature or MAC
computations must veriﬁably establish control-ﬂow integrity.
Otherwise, similar control-ﬂow vulnerabilities as software-
based attestation would arise. Furthermore, the trusted hard-
ware module must protect both the secret key and the signa-
ture/MAC generation code.
More importantly, cryptographic attestation relocates the
root of trust to the third parties who install the cryptographic
keys in each device controller and those who distribute them
to veriﬁers. However, the trustworthiness of these parties can
be uncertain; e.g., a peripheral-controller supplier operating in
jurisdictions that can compel the disclosure of secrets could
not guarantee the secrecy of the protected cryptographic key.
Similarly,
the integrity of the distribution channel for the
signature-veriﬁcation certiﬁcate established between the device
supplier/integrator and veriﬁer can be compromised, which
enables known attacks; e.g., see the Cuckoo attack [55]. Thus,
these protocols can offer only conditional security.
Nevertheless if the risk added when third parties manage
one’s system secrets is acceptable and protocol atomicity
requirements are met, then cryptographic protocols for remote
attestation could be used in RoT establishment.
B. Polynomial Evaluation
If the only operations allowed for polynomial evaluation
are the addition and multiplication, Horner rule’s bound of 2d
operations for degree-d polynomials was shown to be uniquely
optimal in one-time evaluations [9], [61]. However, this bound
does not hold in ﬁnite ﬁelds, where the minimum number of
modular additions and multiplications is Ω((cid:112)(d + 1)) [35].
Furthermore, these bounds do not hold in any WRAM models
or any real computer where many more operations are imple-
mented by the ISA.
For WRAM models with
variable word widths,
polynomial-evaluation lower bounds are typically obtained in
the cell probe model. Here the polynomial is assumed to be
already initialized in memory. The evaluation consists of the
reading (probing) a number of cells in memory, and after of
all read operations are ﬁnished, it must output the result. The
cell probed by each read operation may be any function of
the previously probed cells and read operations, and thus all
computations on the already read data take no time.
Using the cell-probe model, G´al and Miltersen [22] showed
that the size r of any additional data structure needed for the
evaluation of a degree-d polynomial beyond the information
theoretical minimum of d + 1 words must satisfy r · t = Ω(d),
where t is the number of probes, d ≤ p/(1 + ), p is a prime,
and  > 0. For linear space data structures (i.e., w-bit words
and memory size |M| = O(d·log p/w)), Larsen’s lower bound
of Ω(log p) is the highest [40], but it is not close to the lowest
known upper bound [36]. Neither bound holds in cWRAM or
in a real computer.
IX. CONCLUSIONS
RoT establishment is a necessary primitive for a variety of
basic system security problems, including starting a system
in a secure initial state [24], [25] and performing trusted
recovery [51]. These problems have not been demonstrably
resolved since their identiﬁcation decades ago. They only
became harder in the age of persistent malware attacks. RoT
establishment is also necessary for veriﬁable boot – a stronger
notion than secure and trusted boot [23].
In this paper we showed that, with a proper theory foun-
dation, RoT establishment can be both provable and uncon-
ditional. We know of no other software security problem that
has had such a solution, to date. Finally, the security of time
measurements on untrusted systems has been a long-standing
unsolved engineering problem [39], [42], [43], [63]. Here, we
also showed that this problem can be readily solved given the
provable atomicity of the veriﬁer’s protocol.
ACKNOWLEDGMENT
Comments received from Pompiliu Donescu, Bryan Parno,
Adrian Perrig, Vyas Sekar, Gene Tsudik, Osman Ya˘gan, and
Jun Zhao helped improve the clarity of this paper substantially.
REFERENCES
Static dictionaries on AC0 RAMs: query time Θ((cid:112)log n/log log n)
[1] ANDERSSON, A., MILTERSEN, P. B., RIIS, S., AND THORUP, M.
is necessary and sufﬁcient. In in Proc 37th FOCS (1996), pp. 441–450.
[2] ANTHONY, S. Massive, undetectable security ﬂaw in USB: It’s time
to get your PS/2 keyboard out of the cupboard. Extreme Tech, July 31
(2014).
[3] APPLEBAUM, B., HARAMATY, N., ISHAI, Y., KUSHILEVITZ, E., AND
VAIKUNTANATHAN, V. Low-complexity cryptographic hash functions.
In Proc. 8th ITCS, Berkeley, CA (2017), pp. 7:1–7:31.
[4] APPLEBAUM, B., AND MOSES, Y. Locally computable UOWHF with
linear shrinkage. J. Cryptology 30, 3 (2017), 672–698.
[5] APPLEBAUM, J., HORCHERT, J., AND STOCKER, C.
In Catalog
Reveals NSA Has Back Doors for Numerous Devices (2013), vol. Dec.
29, Springer Online.
[6] ARM. Cortex-A8 Technical Reference Manual. Rev.:r3p2, May 2010.
12
[7] ARMKNECHT, F., SADEGHI, A.-R., SCHULZ, S., AND WACHSMANN,
C. A security framework for the analysis and design of software
attestation. In Proc. of ACM CCS, Berlin, Germany (2013), pp. 1–12.
IBRAHIM, A., SADEGHI, A.-R.,
SHUNTER, M., TSUDIK, G., AND WACHSMANN, C. SEDA: scalable
In Proc. of 2015 ACM CCS, Denver,
embedded device attestation.
Colorado (2015), ACM.
[8] ASOKAN, N., BRASSER, F.,
[9] BORODIN, A. Horner’s rule is uniquely optimal.
In Proc. of the
International Symposium on the Theory of Machines and Computations
(1971), Z. Kohavi and A. Paz, Eds., Elsevier Inc, pp. 47–57.
[10] CAMPBELL, H. God does play dice with the universe (and the dice are
fair). Science 2.0, July (2012).
[11] CASTELLUCCIA, C., FRANCILLON, A., PERITO, D., AND SORIENTE,
C. On the difﬁculty of software-based attestation of embedded devices.
In Proc. of the 16th ACM CCS (2009), pp. 400–409.
[12] CHRISTIANI, T., AND PAGH, R. Generating k-independent variables in
constant time. In 2014 IEEE 55th IEEE FoCS (Oct 2014), pp. 196–205.
[13] CHRISTIANI, T., PAGH, R., AND THORUP, M. From independence to
expansion and back again. In Proc. of the ACM Symp. on Theory of
Computing (2015), STOC ’15, pp. 813–820.
[14] COSTAN, V., AND DEVADAS, S.
Intel SGX explained. Cryptology
ePrint Archive, Report 2016/086, 2016. https://eprint.iacr.org/2016/086.
[15] CUI, A., COSTELLO, M., AND STOLFO, S. When ﬁrmware modiﬁca-
tions attack: A case study of embedded exploitation. In Proc. of the
2013 NDSS (2013), ISOC.
[16] DELUGRE, G. Closer to metal: Reverse engineering the broadcom
NetExtreme’s ﬁrmware. In Sogeti ESEC Lab (2010).
[17] DUFLOT, L., PEREZ, Y.-A., AND MORIN, B. What if you can’t trust
your network card? In Proc.of the 14th RAID (2011), Springer.
[18] ELDEFRAWY, K., PERITO, D., AND TSUDIK, G. SMART: Secure and
minimal architecture for (establishing a dynamic) root of trust. In NDSS,
San Diego, CA (2012).
[19] ENGBLOM, J., ERMEDAHL, A., AND SJODIN, M. Worst-case
In Interna-
execution-time analysis for embedded real-time systems.
tional Journal on Software Tools for Technology Transfer (2003), vol. 4,
pp. 437–455.
[20] ERDOS, P., AND RENYI, A. On a classical problem of probability
In Proc. of Magyar Tudomanyos Akad. Matematikai Kutato
theory.
Intezetenek Kozlemenyei (1961), pp. 215–220.
[21] FRANCILLON, A., NGUYEN, Q., RASMUSSEN, K. B., AND TSUDIK,
In Proc. of the
G. A minimalist approach to remote attestation.
Conference on Design, Automation & Test in Europe, Dresden, Germany
(2014), pp. 244:1–244:6.
[22] G ´AL, A., AND MILTERSEN, P. B. The cell probe complexity of succinct
data structures. Theoretical Computer Science 379, 1 (2007), 405–417.
[23] GLIGOR, V. Dancing with the adversary – A tale of wimps and giants.
In Proc. of the 22nd Security Protocols Workshop, Cambridge, UK
(2014), vol. 8809 of LNCS, Springer, pp. 116–129.
[24] GLIGOR, V., AND GAVRILA, S. Application-oriented security policies
In Proc. of the Security Protocols Workshop,
and their composition.
Cambridge, UK (1998), vol. 1550 of LNCS, Springer, pp. 67–74.
[25] GLIGOR, V., GAVRILA, S., AND FERRAIOLO, D. On the formal
deﬁnition of separation of duty policies and their composition. In Proc.
of the IEEE Symp. on Security and Privacy (1998), pp. 172–183.
[26] GLIGOR, V. D., AND WOO, M. Establishing Software Root of Trust
Unconditionally. CMU - CyLab - Technical Report 18-003, Nov. 2018.
[27] GRANLUND, T., AND MONTGOMERY, P. L. Division by invariant
integers using multiplication. ACM SIGPLAN Notices 29, 6 (1994),
61–72.
[28] H. IBARRA, O., MORAN, S., AND E. ROSIER, L. On the control power
of integer division. Theoretical Computer Science 24 (06 1983), 3552.
[29] HAGERUP, T. Searching and sorting in the Word RAM. In Proc. of the
15th Symp. on Theoretical Aspects of Computer Science (STACS 98)
(1998), Springer.
[30] HERRERO-COLLANTES, M., AND GARCIA-ESCARTIN, J. C. Quantum
random number generators. Reviews of Modern Physics 89, 1 (2017).
IBRAHIM, A., SADEGHI, A.-R., TSUDIK, G., AND ZEITOUNI, S.
In Proc.
DARPA: Device Attestation Resilient to Physical Attacks.
[31]
[32]
[33]
of 9th ACM Conf. on Sec. & Priv. in Wireless and Mobile Networks
(2016), WiSec ’16, pp. 171–182.
INTEL CORP. Intel 64 and I-32 architecture optimization – Reference
Manual. p. 340.
JAKOBSSON, M., AND JOHANSSON, K.-A. Retroactive detection of
malware with applications to mobile platforms. In Proc. of 5th USENIX
HoTSec Workshop (2010).
[34] KASPERSKY LAB. The Duqu 2.0 - Technical Details (ver. 2.1), 2015.
[35] KAYAL, N., AND SAPTHARISHI, R. A selection of lower bounds for
In Perspectives in Computational Complexity –
arithmetic circuits.
Progress in Computer Science and Applied Logic (2014), M. Agrawal
and V. Arvind, Eds., International Publishing Switzerland, pp. 77–115.
[36] KEDLAYA, K. S., AND UMANS, C. Fast polynomial factorization and
modular composition. SIAM J. on Comput. 40, 6 (2011), 1767–1802.
[37] KLEIN, G., ELPHINSTONE, K., HEISER, G., ANDRONICK, J., COCK,
D., DERRIN, P., ELKADUWE, D., ENGELHARDT, K., KOLANSKI, R.,
NORRISH, M., SEWELL, T., TUCH, H., AND WINWOOD, S.
sel4:
Formal veriﬁcation of an os kernel. In Proc. of the 22nd ACM SOSP
(2009), pp. 207–220.
[38] KOEBERL, P., SCHULZ, S., SADEGHI, A.-R., AND VARADHARAJAN,
V. Trustlite: A security architecture for tiny embedded devices.
In
Proceedings of the Ninth European Conference on Computer Systems
(2014), EuroSys ’14, pp. 10:1–10:14.
[39] KOVAH, X., KALLENBERG, C., WEATHERS, C., HERZOG, A., ALBIN,
M., AND BUTTERWORTH, J. New results for timing-based attestation.
In Proc. of the 2012 IEEE Symposium on Security and Privacy (2012),
pp. 239–253.
[40] LARSEN, K. G. Models and techniques for proving data structure lower
bounds. PhD Dissertation, University of Aahrus, Denmark, 2013.
[41] LEE, H., MOON, H., HEO, I., JANG, D., JANG, J., KIM, K., PAEK,
Y., AND KANG, B. Ki-mon ARM: A hardware-assisted event-triggered
monitoring platform for mutable kernel object. IEEE Transactions on
Dependable and Secure Computing PP, 99 (2017), 1–1.
[42] LI, Y., CHENG, Y., GLIGOR, V., AND PERRIG, A.
Establishing
software-only root of trust on embedded systems: facts and ﬁction. In
Proc. of the Security Protocols Workshop (2015), vol. 9379 of LNCS,
Springer, pp. 50–68.
[43] LI, Y., MCCUNE, J. M., AND PERRIG, A. VIPER: Verifying the
In Proc. of the 18th ACM CCS,
Integrity of PERipherals’ ﬁrmware.
Chicago, IL (2011), pp. 3–16.
[44] LONE-SANG, F., NICOMETTE, V., AND DESWARTE, Y. I/O attacks in
Intel-PC architectures and countermeasures. In Symp. for the Security