### Introduction to the Gertboard

The Raspberry Pi GPIO headers provide a vast array of input/output options. The Gertboard, an expansion board for the Raspberry Pi, serves as an activity center or toybox, enabling experimentation with motors, switches, buttons, and even an onboard Arduino microcontroller. Essentially, the Gertboard extends the Raspberry Pi's capabilities to interact with the real world, allowing you to sense temperatures, detect sounds, drive motors, and more.

Refer to Figure 20.1 and the following descriptions for a detailed overview of the Gertboard's major components.

**Figure 20.1: The Gertboard is a multipurpose expansion board for the Raspberry Pi.**

1. **12 LEDs**
2. **3 Momentary Button Switches**
3. **Motor Controller (L6203)**
4. **6 Open Collector Driver Inputs (ULN2803a)**
5. **GPIO Interface**
6. **Atmel ATmega 328P AVR Microcontroller**
7. **10-bit Analog-to-Digital (MCP3002) and 8-bit Digital-to-Analog (MCP4801) Converters**

#### Key Components

- **L6203 Motor Controller**: Drives brushed DC physical motors, including servos and steppers.
- **ULN2803a Open Collector Drivers**: Enable you to control devices that operate at different voltages or require more current than the Gertboard can supply.
- **Atmel ATmega 328P AVR Microcontroller**: Provides built-in Arduino prototyping capability, running at 3.3V instead of the standard 5V Arduino voltage.
- **Analog-to-Digital (A2D) and Digital-to-Analog (D2A) Converters**: Process both analog and digital audio signals, useful for applications like detecting input volume for an alarm system.

#### Purchasing and Assembly

Originally, the Gertboard was sold in an unassembled state, requiring soldering. However, Farnell/Element 14 now offers an assembled model for $49 USD. You can purchase it at [this link](http://is.gd/mnQiHJ).

The assembled Gertboard, known as "revision 2," has significant improvements over the original "revision 1." For example, revision 2 includes an Arduino-compatible Atmel controller and a cleaner, more organized layout. Gert himself provides a detailed walkthrough of the changes in a video on his YouTube channel, available [here](http://is.gd/ArQfMK).

### Anatomy of the GPIO

The Raspberry Pi General Purpose Input/Output (GPIO) is a 26-pin expansion header marked as P1 on the PCB, using a 2x13 copper pin strip. Refer to Figure 20.2 for the GPIO pinout.

**Figure 20.2: The Raspberry Pi GPIO Pinout**

The pins are categorized into four groups:
- **2 +3.3V Voltage Pins**
- **2 +5V Voltage Pins**
- **5 Ground Pins**
- **17 GPIO Pins (I2C, SPI, and UART)**

Raspberry Pi boards manufactured after September 2012 are called "revision 2" boards. The Foundation changed the function of three GPIO pins between revisions 1 and 2. For more information, see the article at the Embedded Linux Wiki [here](http://is.gd/CNl2JC).

The GPIO represents the primary interface for connecting the Raspberry Pi to other hardware, offering flexible and reprogrammable pins. Note that while the GPIO has two 5V pins, it is only tolerant of 3.3V signals, and there is no built-in overvoltage protection. The 5V pins (P1-02 and P1-04) on the Model B board support a maximum current draw of 300mA.

### Connecting the Gertboard to the Raspberry Pi

The Gertboard connects to the Raspberry Pi via the GPIO headers. You can either mount the Gertboard directly on top of the Pi or use a 26-pin ribbon cable. Refer to Figure 20.3 for a visual guide.

**Figure 20.3: The Gertboard connected to the Raspberry Pi using the GPIO header.**

Ensure that each male GPIO pin on the Pi aligns with the corresponding female socket on the Gertboard. Plastic standoffs can be used to create a more stable connection. If using a ribbon cable, you will also need a female-to-male converter, available [here](https://www.modmypi.com/gpio-accessories/gpio-header-extenders/26-Pin-GPIO-Shrouded-Box-Header).

### Power Considerations

As long as your Raspberry Pi power supply can provide at least 1A, you can power the Gertboard directly from the Pi. The incoming power operates at 5V, and the Gertboard uses either 5V or 3.3V depending on the components in use.

### Installing the Testing Software

Gert wrote a suite of C programs to test various Gertboard components. However, we will focus on Python, using the Python Gertboard code modules. Alex Eames of Raspi.TV created these Python scripts, which require the RPi.GPIO and WiringPi libraries. Raspbian includes RPi.GPIO by default, but you need to install WiringPi manually. Run the following commands:

```sh
sudo apt-get update && sudo apt-get upgrade
sudo apt-get install python-dev python-pip
sudo pip install wiringpi
```

Some scripts, such as `atod.py`, `dtoa.py`, and `dad.py`, require enabling Serial Peripheral Interface (SPI) on the Pi. Follow these steps:

1. Open the `raspi-blacklist.conf` file:
   ```sh
   sudo nano /etc/modprobe.d/raspi-blacklist.conf
   ```
2. Comment out the line `blacklist spi-bcm2708`:
   ```sh
   #blacklist spi-bcm2708
   ```
3. Save, close the file, and reboot:
   ```sh
   sudo reboot
   ```
4. Install Git and the Python SPI wrapper:
   ```sh
   sudo apt-get install git
   git clone git://github.com/doceme/py-spidev
   cd py-spidev
   sudo python setup.py install
   ```

### Installing the Python Gertboard Test Suite

1. Download and extract the library from Raspi.tv:
   ```sh
   cd
   wget http://raspi.tv/download/GB_Python.zip
   unzip GB_Python.zip
   cd GB_Python
   ```
2. View the list of Python scripts and the README file:
   ```sh
   ls -l *.py
   nano README.txt
   ```
3. Run a script, such as the LED testing script, with sudo privileges:
   ```sh
   sudo python leds-rg.py
   ```

Each script has two versions: one for RPi.GPIO and one for WiringPi. Here is a brief rundown of the scripts:

- **atod.py**: Tests the analog-to-digital converter
- **butled-xx.py**: Tests button switches and LEDs
- **buttons-xx.py**: Tests button switches
- **dad.py**: Tests both A-to-D and D-to-A converters
- **dtoa.py**: Tests the digital-to-analog converter
- **leds-xx.py**: Tests the LED switches
- **motor-xx.py**: Tests the motor
- **ocol-xx.py**: Tests the relay switches
- **potmot.py**: Tests the A-to-D switch and the motor

### Testing the LEDs

To test the LEDs, use the `leds-rg.py` or `leds-wp.py` script. The script documentation includes wiring instructions. For example, the `leds-rg.py` script requires the following connections:

```sh
jumpers in every out location (U3-out-B1, U3-out-B2, etc)
GP25 in J2 --- B1 in J3
GP24 in J2 --- B2 in J3
GP23 in J2 --- B3 in J3
GP22 in J2 --- B4 in J3
GP21 in J2 --- B5 in J3
GP18 in J2 --- B6 in J3
GP17 in J2 --- B7 in J3
GP11 in J2 --- B8 in J3
GP10 in J2 --- B9 in J3
GP9 in J2 --- B10 in J3
GP8 in J2 --- B11 in J3
GP7 in J2 --- B12 in J3
```

Refer to the Gertboard user manual for detailed diagrams, or see Figure 20.6.

**Figure 20.6: Wiring diagram for the Gertboard LED test**

### Testing Input/Output

The `butled-rg.py` script tests the Gertboardâ€™s ability to send the output of a button press to an LED. The wiring is simpler and is shown in Figure 20.8.

**Figure 20.8: Wiring diagram for the Gertboard Input/Output test**

Run the test with:
```sh
sudo python butled-rg.py
```

### Breadboarding Exercises

In Chapter 3, you learned about breadboards and their importance in hardware prototyping. Here are two simple breadboarding exercises to light an LED using the Raspberry Pi GPIO pins and the Adafruit Pi Cobbler.

#### Accessing the GPIO Pins Directly

**Materials:**
- 1 Standard breadboard
- 1 LED
- 1 Resistor (270-330 ohms)
- 2 Male-to-female jumper straps

You can find these parts at electronics stores or online. Adafruit also offers the Pi Dish, a convenient package for securing the Raspberry Pi and a breadboard, available [here](http://is.gd/n4TmjO).

**Task: Lighting an LED Directly from the GPIO**

1. Turn off your Raspberry Pi.
2. Carefully press the resistor and jumper straps into place. Refer to Figure 20.9 for the wiring diagram.

**Figure 20.9: Wiring diagram for the first breadboarding experiment**

3. The LED has a longer leg (positive terminal) and a shorter leg (negative terminal). Connect the longer leg to the positive side of the circuit and the shorter leg to the negative side.

By following these steps, you can successfully light an LED using the Raspberry Pi GPIO pins.