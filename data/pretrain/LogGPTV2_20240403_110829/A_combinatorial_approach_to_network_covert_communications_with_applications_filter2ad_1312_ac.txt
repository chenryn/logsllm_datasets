combinations, integer partitions, and set partitions extracted
from the observed riders and carriers through the function
ExtractArrange. It is worth noting that the number of
Γs/Θs/Λs/Πs depends on the adopted method.
Given a set of (Γs, Θs, Λs, Πs) and m, we ﬁrst apply the
corresponding building blocks’ ranking algorithms to compute
the rank (i.e., V al in Figure 3) for a certain I. We then use
function IterateT to sum up the values of F(R, i, m) for
i = 1 . . . , I − 1 and obtain the ﬁnal rank (i.e., A in Figure 3).
III. WEBLEAKS
WebLeaks exploits the relationships among network objects
on both HTTP and TCP layers. WebLeaks does not modify any
network object, thus evading content based detection schemes
against HTTP-based covert channels and TCP-based covert
channels [15], [16], [28]. Moreover, WebLeaks mimics the
normal user behavior of browsing web pages and therefore
can circumvent detection systems based on HTTP’s and TCP’s
timing patterns [8], [15], [17], [18].
On the HTTP layer, WebLeaks regards web pages that
contain at least R URLs located in the same web server as
carriers. It is not difﬁcult to ﬁnd such web pages (e.g., portal
web sites’ front pages), and in each web page we select R
URLs in the same web server as riders. Web pages and URLs
are distinguishable according to their hash values. They are
also sequence detectable based on the visit sequence (i.e., the
sequence of HTTP requests sent by the encoder).
1
0.8
0.6
0.4
0.2
F
D
C
0
0
5
Normal HTTP traffics
Number=1
10
15
20
Number of simultaneous connections to a server
25
30
35
40
45
Fig. 4: CDF of the number of simultaneous TCP connections
to a web server.
On the TCP layer, if WebLeaks visits Ri (where 1 
Flow i
Web Server
specials.msn.com
Client
(i.e., Encoder)
Web server
www.bbc.co.uk
TCP Layer
TCP Flows as Carriers in TCP layer
Fig. 5: An example of WebLeaks.
Evading detection The existing detection schemes, most of
which are based on the content of HTTP trafﬁc [15], [16],
[28], cannot discover WebLeaks, because WebLeaks does
not change the packet content. Although the latest detection
scheme employs the referer ﬁeld to correlate an HTTP
request with its previous URLs [28], it still cannot detect
WebLeaks, because all the URLs visited by WebLeaks have
the correct referer values (i.e., the web page serving as the
carriers). Other detection methods employ the timing informa-
tion related to HTTP requests (i.e., inter-request delays (IRD))
and TCP/IP packets (i.e., inter-packet delays (IPD)) as features
to discover HTTP-based and TCP-based covert channels [8],
[15], [17], [18], [28]. To evade such detection, WebLeaks
mimics the normal browsing behavior by dispatching HTTP
requests according to the IRD and IPD distribution extracted
from traces of normal web sessions.
WebLeaks may induce anomalies in the number of visits to
a URL, if it keeps on using the same set of web pages and
URLs. To eliminate such anomalies, we propose a web group
hopping (WGH) method, which is motivated by WebShare’s
site-hopping algorithm [29]. Using this approach, the encoder
and the decoder agree on a set of web pages that can be divided
into NW groups, each of which includes R web pages. The
web pages in different groups may be overlapped, depending
on the frequency of a web page occurring in the normal trace.
For example, if Google.com is visited many times by a
normal user, it will appear in many groups. After using one
group to send a covert message, the encoder will employ a
new group to send the next message. To avoid using a ﬁxed
sequence of group indices, we let the index of the (i + 1)th
group be Gi+1 = H(Gi, M sg), where H is a keyed hash
function that generates the pseudo-random value in the range
of [1, NW ]. Gi is the index of the ith group, M sg is the covert
message sent through the ith group of web pages, and the key
is pre-shared by the encoder and decoder.
The encoder and the decoder can update those web pages
after a period of time (e.g., several days) to avoid the un-
availability of some web pages. They also pre-agree on a set
of popular and long-lasting web sites (e.g., MSN, CNN, etc.)
and the method to select the web pages. More precisely, the
encoder and decoder use the pervasive random beacon [30] in
the Internet to agree on a random integer and then employ a
keyed hash chain to generate a sequence of random integers.
Part of the random integers are mapped to the indices of web
sites using a hash function. The remaining random integers
are mapped to the indices of web pages in the selected web
sites. Since both encoder and decoder use the same criteria to
verify whether the web pages are properly selected, they will
ﬁnally agree on a set of new web pages.
Figure 6 shows the CDF of the number of visits to a URL in
1000 successive HTTP requests compiled from a 4-week (Aug.
7 to Sept. 3, 2006) web access log collected by IRCaches [31].
It also includes the CDFs for WebLeaks with and without
using the WGH method. WebLeaks uses method  and
R = 10 to transmit 10,000 covert messages. It is clear from
the ﬁgure that the URL visit pattern from WebLeaks channel
without WGH could be classiﬁed as anomalies, because more
than 60% of the URLs appear more than ten times in the
1000 successive URL requests. In contrast, the pattern from
the WebLeaks channel with WGH displays almost the same
distribution as that for the normal HTTP trafﬁc.
An advanced detection scheme may proﬁle a sequence of
URLs (i.e., several URLs and the traversal probabilities from
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
4801
0.8
0.6
0.4
0.2
F
D
C
0
0
5
irCache HTTP Trace
WebLeaks with WGH
WebLeaks without WGH
20
10
Number of visits to a URL
15
25
30
Fig. 6: CDF of the number of times of visiting a URL for
normal HTTP requests and WebLeaks with and without WGH.
one URL to another URL) to detect anomalies. WebLeaks
can evade such detection scheme by using a normal sequence
of URLs to represent one bit of information. Although such
mapping may decrease the capacity, WebLeaks can compen-
sate it through several ways, such as (1) using multiple types
of riders and carriers, (2) increasing R, and (3) selecting riders
and carriers that are distinguishable or sequence detectable and
are not regarded as anomalies by the warden.
IV. ACKLEAKS
Unlike Clack [32] that modiﬁes the acknowledge numbers
in TCP ACK packets and other TCP-based covert channels
affecting data packets [14], ACKLeaks embeds messages in a
sequence of pure TCP ACK packets. The distinct advantage
of this approach is to allow web clients to communicate with
others covertly simply by requesting legitimate data from
web servers. Moreover, ACKLeaks can evade content-based
detection methods and can be implemented by exploiting the
existing TCP connections established by legitimate users.
(a) Single-ﬂow scheme.
(b) Multi-ﬂow scheme.
Fig. 7: Two encoding schemes of ACKLeaks.
The encoding method In the simplest form, ACKLeaks
embeds messages into the number of consecutive ACKs sent
in a single TCP connection. Although the basic idea seems
simple, there are many challenges to tackle before it can
be in practice. We ﬁrst introduce the basic design and then
elaborate on the mechanisms to enhance the performance
of ACKLeaks, such as increasing capacity, correcting errors,
avoiding deadlock, and evading detection.
Figure 7(a) gives an example of a single-ﬂow ACKLeaks,
in which the encoder acknowledges data packets P 1, P 2, and
P 3 by replying with three ACKs, one for each data packet,
but does not acknowledge P 4. After that, it acknowledges
P 5 and P 6 but not P 7. In this case, each ACK is a rider,
and each sequence of contiguous ACKs is a carrier, and the
absence of each ACK serves as a delimiter for two consecutive
carriers. Since ACK values are generally not unique, we
regard them as indistinguishable riders. But the carriers are
distinguishable. Each covert message is represented by the
arrangement of riders in carriers. The single-ﬂow ACKLeaks
actually implements the binary (d,k)-constraint sequence code
[33].
When multiple TCP connections are available, we can
design ACKLeaks with TCP connections as carriers. Figure
7(b) shows a multi-ﬂow ACKLeaks using method x with
R = 10. To send a covert message “12,” the encoder ﬁrst
unranks the message to obtain the corresponding rider-carrier
arrangement: four riders each in the ﬁrst and second carriers,
and two riders in the third carrier. She then dispatches the
ACKs to the connections according to the arrangement output.
Error detection and correction Since ACK losses introduce
errors to the ACKLeaks channel, we propose a coding scheme,
denoted by (R, m, n), to detect and correct errors. The basic
idea is to use m consecutive ACKs to represent a single
rider and n consecutive unacknowledged TCP data packets
to denote a delimiter. Consequently, the minimum Hamming
distance for each rider representation is m,
thus allowing
ACKLeaks to detect m− 1 ACK losses and correct m−1
2 ACK
losses for each rider [34]. Moreover, using n unacknowledged
data packets as a delimiter can help detect and correct at most
n − 1 ACK losses which are wrongly decoded as a delimiter.
Avoiding deadlock We implement ACKLeaks by discarding
ACKs from a local host’s TCP connection to a remote sender
and inserting additional ACKs. Dropping ACKs, however, can
cause the remote sender to retransmit the unacknowledged data
packet, which in turn elicits the local host to send a duplicate
ACK for the retransmitted packet. If such ACK is used as
a delimiter, a deadlock will occur and the TCP ﬂow will
stall. We therefore propose an R-shift algorithm to address
this issue. When the encoder detects a duplicate ACK from
the local host, she lets it go and drops the (m × R)th ACK
after the duplicate ACK. The decoder can extract the message
by applying mod m × R to the observed ACK sequence,
because the longest ACK sequence must not exceed m × R
in ACKLeaks.
Evading detection We deﬁne correspondency for TCP data
packets and ACKs as the number of consecutive TCP data
packets required to trigger an ACK. We denote a corre-
spondency of K by χK . ACKLeaks may induce anomalous
correspondency. Speciﬁcally, the (R, m, n) scheme will cause
two kinds of correspondency—χ1 and χn+1—because the
encoder acknowledges m× R data packets (i.e., χ1) and then
skips n packets before acknowledging a new data packet (i.e.,
χn+1). Let P(R,m,n)(K) be the probability of inducing χK
in a ﬂow for ACKLeaks. For example, given m = n = 1,
R = 5, and method x, a covert message “2” is encoded as
“1110110” that contains three χ1s and two χ2s. We therefore
have P(5,1,1)(1) = 3/5 and P(5,1,1)(2) = 2/5.
Generally, P(R,m,n)(K) is different from P (K), the prob-
ability in the normal trafﬁc. To evade detection, we propose
a new algorithm, referred to as Fixed Carrier Quantity with
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
481y
t
i
l