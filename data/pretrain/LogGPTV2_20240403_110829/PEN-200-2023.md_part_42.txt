is a good source of metadata.
The Author section reveals the name of an internal employee. We could use our knowledge of this
person to better establish a trust relationship by dropping their name casually into a targeted
email or phone conversation. This is especially helpful if the author maintains a relatively small
public profile.
The output further reveals that the PDF was created with Microsoft PowerPoint for Microsoft 365.
This is crucial information for us to plan our client-side attack since we now know that the target
uses Microsoft Office and since there is no mention of “macOS” or “for Mac” in any of the
metadata tags, it’s very probable that Windows was used to create this document.
We can now leverage client-side attack vectors ranging from Windows system components to
malicious Office documents.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 318
Made in Morocco
Penetration Testing with Kali Linux
11.1.2 Client Fingerprinting
In this section we will discuss Client Fingerprinting, also known as Device Fingerprinting,481 to
obtain operating system and browser information from a target in a non-routable internal
network. For example, we may be tasked with establishing an initial foothold on a target’s
network for a penetration test. Let’s assume we previously extracted an email address of a
promising target with the tool theHarvester.482 As a client-side attack we could use an HTML
Application (HTA)483 attached to an email to execute code in the context of Internet Explorer and
to some extent, Microsoft Edge. This is a very popular attack vector to get an initial foothold in a
target’s network and is used by many threat actors and ransomware groups.484
Before we do this, we need to confirm that our target is running Windows and that either Internet
Explorer or Microsoft Edge are enabled.
We’ll use Canarytokens,485 a free web service that generates a link wyith an embedded token that
we’ll send to the target. When the target opens the link in a browser, we will get information about
their browser, IP address, and operating system. With this information, we can confirm that the
k
target is running Windows and verify that we should attempt an HTA client-side attack.
Before we create our tracking link, let’s briefly discuss spretexts486 we can use in a situation like
this. A pretext frames a situation in a specific way. In a majority of situations, we can’t just ask the
target (a stranger) to click a link in an arbitrary emoail. Therefore, we should try to create context,
perhaps by leveraging the target’s job role.
For example, let’s assume our target is wonrking in a finance department. In this case, we could
say we received an invoice, but it contains a financial error. We then offer a link that we say opens
a screenshot of the invoice with the error highlighted. This is, of course, the Canarytoken link.
i
When the target clicks the link, the IP logger creates a fingerprint of the target providing us the
z
necessary information to prepare our client-side attack. The target will always receive a blank
page when they click the link.
D
With our pretext in place, let’s create our link in Canarytokens by loading the token generation
page487 in our browser. Figure 166 shows the landing page for the site.
481 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Device_fingerprint
482 (Github, 2022), https://github.com/laramies/theHarvester
483 (Microsoft, 2013), https://msdn.microsoft.com/en-us/library/ms536496(VS.85).aspx
484 (The Hacker News, 2021), https://thehackernews.com/2021/04/lazarus-apt-hackers-are-now-using-bmp.html
485 (Canarytokens, 2022), https://canarytokens.com
486 (Imperva, 2022), https://www.imperva.com/learn/application-security/pretexting/
487 (Canarytokens, 2022), https://canarytokens.org/generate
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 319
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
Figure 166: Canarytokens Landing Page
The web form provides us with a dropdown menu to select the kind of tracking token we want to
o
create. We must enter an email address to get alerts about the tracking token or provide a
webhook URL. For this example, we’ll select Web bug / URL token from the dropdown menu, enter
https://example.com as webhook URL, thenn enter Fingerprinting as the comment. After we enter
this information, we’ll click on Create my Canarytoken.
i
z
D
Figure 167: Enter example.com in web form
A new page with a blue window appears stating that our web token is now active:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 320
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
Figure 168: Activoe Canarytoken
This page contains the tracking link we can use to fingerprint targets. It also provides ideas on
how to get a target to click the link. n
Next, let’s click on Manage this token, which is located on the upper-right corner of the page. This
i
will bring us to the token settings.
z
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 321
Made in Morocco
Penetration Testing with Kali Linux
Figure 169: Management of Canarytoken
The token has not been triggered yet, but this is to be expected since we just created it. For this
example, we’ll keep the default settings, since we are simply fingerprinting the target and not
embedding the token in a web application or web page.
Next, let’s click on History in the upper right corner. The History page shows us all visitors that
clicked our Canarytoken link and the information about the victim’s system. As of now the list is
empty.
y
k
s
o
Figure 170: Canarytoken History
Let’s assume we have convinced our victim, in the context of our pretext, to visit the Canarytoken
n
link via email. As soon as the victim clicks our link, they get a blank page in their browser. At the
same time, a new entry appears in our history list:
i
z
D
Figure 171: Canarytoken with Entry
A map on the left side shows us the geographical location of the victim. We can click on the entry
to get more information.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 322
Made in Morocco
Penetration Testing with Kali Linux
y
k
Figure 172: Detailed Information of Csanarytoken Entry
The upper-half of the detailed view provides us information about the victim’s location and
attempts to determine the organization name. Theo user agent sent by the victim’s browser is also
displayed. From the user agent itself we can infer the target’s operating system and browser.
However, the user agent can be modified and is not always a reliable source of information.
n
In this example, the victim’s user agent implies that they use the Chrome browser on a 64-bit
Windows 10 system. We could alsoi use an online user agent parser,488 which interprets the user
agent for us and offers us a morez user-friendly result.
Let’s scroll down to the Browser area.
D
488 (WhatIsMyBrowser, 2022), https://developers.whatismybrowser.com/useragents/parse/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 323
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
Figure 173: Detailed Browser Information
n
Figure 173 shows us additional information about the victim’s browser. This information does not
come from the user agent, but from JavaScript fingerprinting code embedded in the Canarytoken
web page. This information is more iprecise and reliable than the information from the user agent.
This again suggests that the targezt is running Chrome on Windows.
The Canarytoken service also offers other fingerprint techniques. Let’s navigate back to the
D
Canarytokens main page to discuss these.
Figure 174: Other Canarytoken Methods
The dropdown menu provides options to embed a Canarytoken in a Word document or PDF file,
which would provide us information when a victim opens the file. Furthermore, we could also
embed it into an image, which would inform us when it is viewed.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 324
Made in Morocco
Penetration Testing with Kali Linux
We could also use an online IP logger like Grabify489 or JavaScript fingerprinting
libraries such as fingerprint.js.490
In this section, we demonstrated an effective fingerprinting technique that revealed critical
information about our target’s system. This is a crucial first step for a client-side attack. While our
goal was to determine if the target runs Windows and has Internet Explorer or Microsoft Edge
enabled, we could only identify that the victim runs Chrome on Windows. In a situation like this,
we should either use a different client-side attack vector or change our pretext to, for example,
suggest that the screenshot is only viewable in Internet Explorer or Microsoft Edge.
11.2 Exploiting Microsoft Office
y
This Learning Unit covers the following Learning Objectives:
• Understand variations of Microsoft Office client-side attackks
• Install Microsoft Office
s
• Leverage Microsoft Word Macros
Ransomware attacks have increased dramaticaloly in recent years.491 In most cases, the initial
breach involved a malicious Microsoft Office macro. This is a common attack vector since Office
is ubiquitous and Office documents are commonly emailed between colleagues.
n
In this Learning Unit, we’ll first discuss various considerations of malicious Office documents in a
client-side attack scenario. Next, we’ll walk through the Office installation process and finally, we’ll
i
create a malicious Word document with embedded macros to obtain a reverse shell.
z
11.2.1 Preparing the Attack
D
Before we jump into the more hands-on elements of this Learning Unit, let’s discuss three
important considerations when we use malicious Office documents in a a client-side attack.
First, we must consider the delivery method of our document. Since malicious macro attacks are
well-known, email providers and spam filter solutions often filter out all Microsoft Office
documents by default. Therefore, in a majority of situations we can’t just send the malicious
document as an attachment. Furthermore, most anti-phishing training programs stress the
danger of enabling macros in an emailed Office document.
To deliver our payload and increase the chances that the target opens the document, we could
use a pretext and provide the document in another way, like a download link.
If we successfully manage to deliver the Office document to our target via email or download link,
the file will be tagged with the Mark of the Web (MOTW).492 Office documents tagged with MOTW
489 (Grabify, 2022), https://grabify.link/
490 (Github, 2022), https://github.com/fingerprintjs/fingerprintjs
491 (Comparitech, 2022), https://www.comparitech.com/antivirus/ransomware-statistics/
492 (MITRE ATT&CK, 2022), https://attack.mitre.org/techniques/T1553/005/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 325
Made in Morocco
Penetration Testing with Kali Linux
will open in Protected View,493 which disables all editing and modification settings in the
document and blocks the execution of macros or embedded objects. When the victim opens the
MOTW-tagged document, Office will show a warning with the option to Enable Editing.
Figure 175: Protected View in action
When the victim enables editing, the protected view is disabled. Therefore, the most basic way to
overcome this limitation is to convince the target to click the Enable Editing button by, for
example, blurring the rest of the document and instructing them to click the button to “unlock” it.
We could also rely on other macro-enabled Microsoft Office programs that lack Protected View,
y
like Microsoft Publisher, but this is less frequently installed.
Finally, we must consider Microsoft’s announcement thakt discusses blocking macros by
default.494 This change affects Access, Excel, PowerPoint, Visio, and Word. Microsoft
implemented this in a majority of Office versions such sas Office 2021 all the way back to Office
2013. The implementation dates for the various channels are listed in the corresponding
Microsoft Learn page.495
o
The announcement states that macros in files delivered via the Internet may no longer be
activated by the click of a button, but by following a more tedious process. For example, when a
n
user opens a document with embedded macros, they will no longer receive the Enable Content
message:
i
z
FigurDe 176: Possibility to execute Macros by clicking one Button
Instead, they will receive a new, more ominous message with a Learn More button:
Figure 177: Changed message after opening the document
If users click on Learn More, the resulting Microsoft web page496 will outline the dangers of
enabling macros.
Additionally, Microsoft provides instructions on how to unblock the macro by checking Unblock
under file properties.
493 (Microsoft, 2019), https://support.office.com/en-us/article/what-is-protected-view-d6f09ac7-e6b9-4495-8e43-2bbcdbcb6653
494 (Microsoft Techcommunity, 2022), https://techcommunity.microsoft.com/t5/microsoft-365-blog/helping-users-stay-safe-blocking-
internet-macros-by-default-in/ba-p/3071805
495 (Microsoft Learn, 2023), https://learn.microsoft.com/en-us/deployoffice/security/internet-macros-blocked
496 (Microsoft Support, 2022), https://support.microsoft.com/en-us/topic/a-potentially-dangerous-macro-has-been-blocked-0952faa0-
37e7-4316-b61d-5b5ed6024216
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 326
Made in Morocco
Penetration Testing with Kali Linux
This means that after this change, we must convince the user to unblock the file via the checkbox
before our malicious macro can be executed.
This section provided an overview of important considerations for attacks leveraging Microsoft
Office. Additionally, we discussed a Microsoft announcement outlining a change in how macros
in files delivered over the Internet may be opened. This may further complicate vectors involving
malicious Office documents. However, if we enumerate our target thoroughly and consider the
information from this section, we can tremendously increase our probability of success.
Before we head into the next section, let’s zoom out here for a moment. Even after adding all
these mitigations and creating general awareness, malicious Microsoft Office macros are still one
of the most commonly used client-side attacks. This example reveals an underlying dynamic
between defenders and attackers. For every implemented security technology or component,
attackers are forced to come up with novel attack vectors and bypasses. This leads to a spiral, in
which both sides need to consistently come up with more sophisticayted approaches over time to
be successful. We as penetration testers should therefore never be discouraged by new defensive
mechanisms, but treat them as opportunities to create more sophisticated attacks.
k
11.2.2 Installing Microsoft Office
s
In this section we’ll install Microsoft Office on the OFFICE machine (VM #1). We’ll use RDP to
connect to the system with a username of offsec aond a password of lab.
n
On Windows 11, Network Level Authentication (NLA)497 is enabled by default for
RDP connections. Because OFFICE is not a domain-joined machine, rdesktop
won’t connect to it. We can iuse xfreerdp instead, which supports NLA for non
domain-joined machines.z
D
Once connected, we’ll navigate to C:\tools\Office2019.img via Windows Explorer and double-click
the file. A popup window asks if we want to open this file, and we’ll respond by clicking Open. This
will load the file as a virtual CD and allow us to start the installation process by clicking on
Setup.exe.
497 (Wikipedia, 2021), https://en.wikipedia.org/wiki/Network_Level_Authentication
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 327
Made in Morocco
Penetration Testing with Kali Linux
y
Figure 178: Microsoft Office 2019 installer
Once the installation is complete, we’ll click on Close on the splash screen to exit the installer and
k
open Microsoft Word from the start menu. Once Microsoft Word opens, a popup will appear. We
can close it by clicking the highlighted x in the upper-right corner to start the 7-day trial.
s
o
n
i
z
D
Figure 179: Product Key popup
Next, a license agreement popup will appear and we must accept it by clicking Accept:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 328
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
Figure 180: License Agreement
Next, a privacy popup is displayed. We’ll click Next on the splash screen. In the next window, we’ll
n
then select No, don’t send optional data and click on Accept.
i
z
D
Figure 181: Privacy Settings