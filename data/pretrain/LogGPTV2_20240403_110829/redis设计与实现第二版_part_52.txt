图 21-8执行降序排序的数组
numbers链表
---
## Page 355
的值从小到大排序的数组，如图 21-11 所示：
u.score属性里面，如图 21-10所示：
5）以数组项u.score 属性的值为权重，对数组进行排序，得到一个按u.score 属性
6）遍历数组，依次将数组项的obj指针所指向的集合元素返回给客户端。
口 权重为8.0的"apple"元素位于数组的索引2位置上。
权重为 7.0 的“cherry"元素位于数组的索引 1位置上。
口权重为5.5的"banana"元素位于数组的索引0位置上。
"cherry”元素的权重键“cherry-price"的值转换之后为7.0。
4）将各个权重键的值转换成一个 double 类型的浮点数，然后保存在相应数组项的
对于"cherry"元素，查找程序返回权重键"cherry-price"。
array[l)
array
array
array
图 21-10根据权重键的值设置数组项的u.score 属性
图21-11
obj
7.0
obj
Cqo
obj
obj
obj
fao
obj
图 21-9将obj指针指向集合的各个元素
根据 u.score 属性进行排序之后的数组
Stringobject
Stringobject
atdde,
+
Stringobject
"ruits集合
fruits集合
Stringobject
"cherry
'cherry'
Stringobject
Stringobject
"banana"
第21章
+ -++ +*+- *
排
序
· 351
---
## Page 356
352·第四部分独立功能的实现
21-13 所示。
模式*-id，查找相应的权重键：
21-12所示。
就需要在使用 BY 选项的同时，配合使用 ALPHA 选项。
21.5
对于"apple"元素，查找程序返回权重键"apple-id"。
3）遍历数组，根据各个数组项的 obj 指针所指向的集合元素，以及 BY 选项所给定的
2）遍历数组，将各个数组项的 obj 指针分别指向 fruits 集合的各个元素，如图
举个例子，如果fruits 集合包含的三种水果都有一个相应的字符串编号：
BY选项默认假设权重键保存的值为数字值，如果权重键保存的是字符串值的话，那么
6）遍历数组，依次将数组项的obj指针所指向的集合元素返回给客户端。
权重为"FRUIT-13”的"cherry"元素位于数组的索引位置上。
5）以各个数组项的权重键的值为权重，
对于"cherry”元素，查找程序返回权重键"cherry-id"。
口
口对于"banana”元素，查找程序返回权重键“banana-id"。
1）创建一个 redisSortObject 结构数组，数组的长度等于 fruits 集合的大小。
服务器执行 SORT fruits BY*-id ALPHA 命令的详细步骤如下：
3) "banana"
1)"cherry"
redis> SORT fruits BY *-id ALPHA
那么我们可以使用水果的编号为权重，对fruits 集合进行排序:
(integer)3
"Airauo. "eueuea. "oidde, satniy Gavs  BY ALPHA命令的执行步骤也和这里给出的步骤类似。
redisSortobject
redisSortobject
redissortobject
5
E
redis>
(integer) 6
redis> SADD alphabet a b c d e f
redisSortobject
redisSortobject
 array[2]
array[2]
 array[1]
"d"
array[l]
array[0]
"c"
array[0]
LIMIT选项的实现
 SMEMBERS alphabet
array
array
图21-14
u.cmpobj
u.cmpobj
u.cmpobj
u.cmpobj
u.cmpobj
u.cmpobj
fqo
fao
Fao
obj
按u.cmpobj 所指向的字符串对象进行排序之后的数组
fqo
Fao
图21-13
Stxingobject
 Stringobject
Stringobject
Stringobject
"FRUIT-13"
—-- - -- -
将u.cmpobj指针指向权重键
"FRUIT-79"
"FRUIT-25"
Stringobject
 Stringobject
"apple"
"FRUIT-79"
"FRUIT-25"
"FRUIT-13"
"apple"
1
Stringobject
fruits集合
Stringobject
fruits集合
"cherry"
"cherry"
1
二
1
1
Stringobject
Stringobject
第21章
"banana"
"banana"
业
序353
---
## Page 358
354·第四部分独立功能的实现
第4步如下：
SORT alphabetALPHA LIMITO4 命令时的步骤一样，只是第四步有所不同，上面的
"a"、"b"、"c"、"d"返回给客户端。
array[1]、array[2]、array[3] 这4 个数组项，并将数组项的 obj 指针所指向的元素
21-16所示。
21-15所示。
后返回3个已排序元素：
后返回4个已排序元素：
服务器执行 SORTalphabetALPHALIMIT23命令时的第一至第三步都和执行
3）根据obj 指针所指向的集合元素，对数组进行字符串排序，排序后的数组如图
4）根据选项LIMIT〇4，将指针移动到数组的索引上面，然后依次访问 array［O］、
2）遍历数组，将各个数组项的 obj 指针分别指向 alphabet 集合的各个元素，如图
1）创建一个 redisSortObject 结构数组，数组的长度等于 alphabet 集合的大小。
服务器执行 SORT alphabetALPHALIMITO4命令的详细步骤如下：
2
与此类似，以下代码首先对 alphabet 集合进行排序，接着跳过2个已排序元素，然
redis> SORT alphabet ALPHA LrMIT 0 4
举个例子，以下代码首先对alphabet 集合进行排序，接着跳过0个已排序元素，然
口count 参数表示跳过给定数量的已排序元素之后，要返回的已排序元素数量。
offset 参数表示要跳过的已排序元素数量。
LIMIr 选项的格式为LIMIT：
但是，通过LIMIT 选项，我们可以让 SORT命令只返回其中一部分已排序的元素。
5
#对集合进行排序，并返回所有排序后的元素
9
6)"e"
""
"d"
"c"
"d"
"b"
"fn
向的元素“c"、“d"、"e"返回给客户端。
array[2]、array[3]、array[4] 这 3 个数组项，并将数组项的 obj 指针所指
"e"
"a"
4）根据选项LIMIT23，将指针移动到数组的索引2上面，然后依次访问
---
## Page 359
序之后的 students 集合的元素：
21.7
骤类似。
"wot myoelu srazad, shuapnas aavs  SORT students ALPHA GET *-name
redis> SET tom-name "Tom Smith"
设置 peter、jack、tom 的全名
但是，通过使用 GET 选项，我们可以让 SORT命令在对键进行排序之后，根据被排序
redis> SORT students ALPHA