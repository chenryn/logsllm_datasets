  environment 
Not 
  to 
  be 
  taken 
  out 
  of 
  context 
12 
Index-­‐Timeof 
  context 
12 
Index-­‐Time 
  Pipeline 
  Results 
| Default  | 0  | 51  | 40  | 105  | ~4X  | 80  | 190  | 190  | 190  | 190  | 190  | 190  |
|---|---|---|---|---|---|---|---|---|---|---|---|---|
| MLA  |0  |51  |40  |105  |~4X  |80  |179  |179  |179  |179  |179  |179  |
| MLA    +    LM  |0  |51  |40  |105  |~4X  |80  |179  |179  |179  |179  |179  |179  || MLA    +    LM    +    TP  |0  |51  |40  |105  |~4X  |80  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  || MLA    +    LM    +    TF  |0  |51  |40  |105  |~4X  |80  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  |MLA:    MAX_TIMESTAMP_LOOKAHEAD    =    30  || MLA    +    LM    +    TF    +    TP  |0  |51  |40  |105  |~4X  |80  |TP:        TIME_PREFIX    =    ^  |TP:        TIME_PREFIX    =    ^  |TP:        TIME_PREFIX    =    ^  |TP:        TIME_PREFIX    =    ^  |TP:        TIME_PREFIX    =    ^  |TP:        TIME_PREFIX    =    ^  || MLA    +    LM    +    TF    +    TP  |0  |51  |40  |105  |~4X  |80  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  |TF:        TIME_FORMAT    =    %a,    %d    %b    %Y    %H:%M:%S    %Z  || MLA    +    LM    +    TF    +    AP  |0  |44  |40  |105  |60  |80  |LM:        SHOULD_LINEMERGE    =    false  |LM:        SHOULD_LINEMERGE    =    false  |LM:        SHOULD_LINEMERGE    =    false  |LM:        SHOULD_LINEMERGE    =    false  |LM:        SHOULD_LINEMERGE    =    false  |LM:        SHOULD_LINEMERGE    =    false  || MLA    +    LM    +    TF    +    AP  |0  |44  |40  |105  |60  |80  |AP:        ANNOTATE_PUNCT    =    false  |AP:        ANNOTATE_PUNCT    =    false  |AP:        ANNOTATE_PUNCT    =    false  |AP:        ANNOTATE_PUNCT    =    false  |AP:        ANNOTATE_PUNCT    =    false  |AP:        ANNOTATE_PUNCT    =    false  |
| MLA    +    LM    +    TF    +    AP  |0  |20  |40  |105  |60  |80  |100  |120  |140  |160  |180  |200  |Time 
  (s) 
13 
  All 
  pre-­‐indexing 
  pipelines 
are 
  expensive 
  at 
  default 
sejngs 
Flexibility   Avoid 
  unnecessary 
  steps and 
  generality 
–LINE_BREAKER 
–SHOULD_LINEMERGE 
–
	MAX_TIMESTAMP_LOOKA
HEAD 
–TIME_PREFIX 
–TIME_FORMAT 
  Think 
  about 
  performance 
	vs. 
  flexibility 
Performance Time 
  (s) 
14 
Next: 
  Let’s 
  Index 
  a 
  Dataset 
  B 
  Generatea 
  Dataset 
  B 
  Generate 
  a 
  much 
  larger 
  dataset 
  (1TB) 
	–High 
  cardinality, 
  ~380 
  Bytes/event, 
  2.86B 
  events   Forward 
  to 
  indexer 
  (v6.1) 
  as 
  fast 
  as 
  possible 	–Indexer 
  (DL380 
  G7): 
	ê12 
  PI:EMAIL 
  HT 
	ê12GB 
  RAM, 
	ê14x15KRPM 
  @146GB/ea 
	–No 
  other 
  load 
  on 
  the 
  box 
  Measure  
15 
Indexing: 
  CPU 
CPU15 
Indexing: 
  CPU 
CPU 
Load 
16 
Indexing: 
  IO 
 Writes 
Reads 
17 
	Indexing 
  Test 
  Findings 
  CPU 
  U;liza;on 
	–~35% 
  In 
  this 
  case, 
  4-­‐5 
  Real 
  CPU 
  Cores 
  IO 
  U;liza;on 
	–Characterized 
  by 
  both 
  reads 
  and 
  writes 
  but 
  not 
  as 
  demanding 
  as 
  search. 	Note 
  the 
  splunk-­‐op;mize 
  process. 
  Inges;on 
  Rate 
–22MB/s
–“Speed  Inges;on 
  Rate 
–22MB/s
–“Speed 
  of 
  Light” 
  – 
  no 
  search 
  load 
  present 
  on 
  the 
  server 
18 
Indexing 
  Test 
  Conclusions 
  Distribute 
  as 
  much 
  as 
  you 
  can 
	–Splunk 
  scales 
  horizontally 
  Tune 
  event 
  breaking 
  and 
  &mestamping 
  aWributes 
  in 
  props.conf 	whenever 
  possible 
  Faster 
  disk 
  (ex. 
  SSDs) 
  would 
  not(ex. 
  SSDs) 
  would 
  not 
  have 
  necessarily 
  improved 	indexing 
  throughput 
  by 
  much 
  Faster, 
  but 
  not 
  more 
  than 
  5, 
  CPUs 
  would 
  have 
  improve 
  indexing 	throughput 
19 
Next: 
  Searching 
  Real-­‐life 
  search 
  workloads 
  are 
  extremely 
  complex 
  and 
  very 
  varied 
  to 	be 
  profiled 
  correctly 
  But, 
  we 
  can 
  generate  But, 
  we 
  can 
  generate 
  arbitrary 
  workloads 
  covering 
  a 
  wide 
  spectrum 
of 
  resource 
  u;liza;on 
  and 
  profile 
  those 
  instead. 
  Actual 
  profile 
  will fall 
  somewhere 
  in 
  between. 
IO  
  CPU 
20 
	Search 
  Pseudo-­‐Pipeline 
  (High 
  Level) Some 
  preparatory 
steps 
  here 
Repeat 
  un;lsteps 
  here 
Repeat 
  un;l 
  search 
  completes 
| Find 
  buckets  | For 
  each 
  bucket  | For 
  each 
  bucket  | Process 
  events: 
  st  | Filter 
  events 
  to  | Write 
  temporary  |
|---|---|---|---|---|---|
| Find    buckets  |check    tsidx    for  |For    each    bucket  |rename,    extract,  |match    the    search  |Write    temporary  || Find    buckets  |check    tsidx    for  |read    journal.gz    at  |rename,    extract,  |match    the    search  |Write    temporary  |
| based    on    search  |events    that    match  |read    journal.gz    at  |report,    kv,    alias,  |string    (+  |results    to  |
| based    on    search  |events    that    match  |offsets    supplied  |report,    kv,    alias,  |string    (+  |results    to  || ;merange  |LISPY    and    find  |offsets    supplied  |eval,    lookup,  |evenWyping  |dispatch    directory  |
| ;merange  |LISPY    and    find  |by    previous    step  |eval,    lookup,  |evenWyping  |dispatch    directory  |
| ;merange  |rawdata    offset  |by    previous    step  |subsecond  |tagging)  |dispatch    directory  |
Return 
  progress 
to 
  SH 
  splunkd 
21 
	Searchto 
  SH 
  splunkd 
21 
	Search 
  Pseudo-­‐Pipeline 
  (High 
  Level) Some 
  preparatory 
steps 
  here 
Repeat 
  un;l 
  search 
  completes 
| Find 
  buckets  | For 
  each 
  bucket  | For 
  each 
  bucket  | Process 
  events: 
  st  | Filter 
  events 
  to  | Write 
  temporary  |
|---|---|---|---|---|---|
| Find    buckets  |check    tsidx    for  |For    each    bucket  |rename,    extract,  |match    the    search  |Write    temporary  || Find    buckets  |check    tsidx    for  |read    journal.gz    at  |rename,    extract,  |match    the    search  |Write    temporary  |
| based    on    search  |events    that    match  |read    journal.gz    at  |report,    kv,    alias,  |string    (+  |results    to  |
| based    on    search  |events    that    match  |offsets    supplied  |report,    kv,    alias,  |string    (+  |results    to  || ;merange  |LISPY    and    find  |offsets    supplied  |eval,    lookup,  |evenWyping  |dispatch    directory  |
| ;merange  |LISPY    and    find  |by    previous    step  |eval,    lookup,  |evenWyping  |dispatch    directory  |
| ;merange  |rawdata    offset  |by    previous    step  |subsecond  |tagging)  |Return    progress  |
| ;merange  |IO  |by    previous    step  |subsecond  |tagging)  |Return    progress  || ;merange  |IO  |by    previous    step  |subsecond  |tagging)  |to    SH    splunkd  |
22 
	Search 
  Pseudo-­‐Pipeline 
  (High 
  Level) Some 
  preparatory 
steps 
  here 
Repeat 
  un;l 
  search 
  completes 
| Find 
  buckets  | For 
  each 
  bucket  | For 
  each 
  bucket  | Process 
  events: 
  st  | Filter 
  events 
  to  | Write 
  temporary  |
|---|---|---|---|---|---||---|---|---|---|---|---|
| Find    buckets  |check    tsidx    for  |For    each    bucket  |rename,    extract,  |match    the    search  |Write    temporary  |
| Find    buckets  |check    tsidx    for  |read    journal.gz    at  |rename,    extract,  |match    the    search  |Write    temporary  |
| based    on    search  |events    that    match  |read    journal.gz    at  |report,    kv,    alias,  |string    (+  |results    to  || based    on    search  |events    that    match  |offsets    supplied  |report,    kv,    alias,  |string    (+  |results    to  |
| ;merange  |LISPY    and    find  |offsets    supplied  |eval,    lookup,  |evenWyping  |dispatch    directory  |
| ;merange  |LISPY    and    find  |by    previous    step  |eval,    lookup,  |evenWyping  |dispatch    directory  || ;merange  |rawdata    offset  |by    previous    step  |subsecond  |tagging)  |Return    progress  |
| ;merange  |IO  |by    previous    step  |CPU    +    Memory  |tagging)  |Return    progress  |
| ;merange  |IO  |by    previous    step  |CPU    +    Memory  |tagging)  |to    SH    splunkd  |
23 
Search 
  Types 
  Dense 
	–Characterized 
  predominantly 
  by 
  returning 
  many 
  eventsby 
  returning 
  many 
  events 
  per 
  bucket 	 
  index=web 
  | 
  stats 
  count 
  by 
  clientip 
  Sparse 
	–Characterized 
  predominantly 
  by 
  returning 
  some 
  events 
  per 
  bucket 	 
  index=web 
  some_term 
  | 
  stats 
  count 
  by 
  clientip 
  Rare 
	–Characterized 
  predominantly 
  by 
  returning 
  only 
  a 
  few 
  events 
  per 
  index 	 
  index=webper 
  index 	 
  index=web 
  url=onedomain* 
  | 
  stats 
  count 
  by 
  clientip 
24 
Okay, 
  Let’s 
  Test 
  Some 
  Searches 
  Use 
  our 
  already 
  indexed 
  data 
	–It 
  contains 
  many 
  unique 
  terms 
  with 
  predictable 
  term 
  density 
  Search 
  under 
  several 
  term 
  densi;es 
  and 
  concurrencies 	–Term 
  density: 
  1/100, 
  1/1M, 
  1/100M 
	–Search1/100, 
  1/1M, 
  1/100M 
	–Search 
  Concurrency: 
  4 
  – 
  60 
	–Searches: 
	êRare: 
  over 
  all 
  1TB 
  dataset 
	êDense: 
  over 
  a 
  preselected 
  &me 
  range 
  Repeat 
  all 
  of 
  the 
  above 
  while 
  under 
  an 
  indexing 
  workload 
  Measure 
25 
	Dense 
  Searches % 
  CPU 
  U;l. 
  vs. 