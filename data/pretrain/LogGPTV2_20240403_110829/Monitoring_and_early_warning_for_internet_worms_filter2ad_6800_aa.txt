# Monitoring and Early Warning for Internet Worms

## Authors
- Cliff Changchun Zou
- Lixin Gao
- Weibo Gong
- Don Towsley

### Contact Information
- Email: {czou, lgao, gong}@ecs.umass.edu
- Affiliation: University of Massachusetts at Amherst

## Abstract
The rapid spread of self-propagating worms, as demonstrated by the Code Red incident in 2001 and the SQL Slammer in January 2003, highlights the need for an effective worm monitoring and early warning system. This paper proposes algorithms for the early detection of worm presence and a corresponding monitoring system. By leveraging epidemic models and observed data, we use a Kalman filter to detect worm propagation in its early stages. Our approach focuses on detecting the trend rather than the rate of illegitimate scan traffic. Additionally, we can predict the overall vulnerable population size and correct biases in the observed number of infected hosts. Simulation experiments for Code Red and SQL Slammer show that with observation data from a small fraction of IP addresses, we can detect the presence of a worm when it infects only 1% to 2% of vulnerable computers on the Internet.

## Categories and Subject Descriptors
K.6.5 [Management of Computing and Information Systems]: Security and Protectionâ€”Invasive Software

## General Terms
- Security
- Algorithms

## Keywords
- Monitoring
- Early Detection
- Worm Propagation

## 1. Introduction
Since the Morris worm in 1988, the security threat posed by worms has steadily increased, especially in recent years. In 2001, the Code Red and Nimda worms infected hundreds of thousands of computers, causing millions of dollars in losses. After a relatively quiet period, the SQL Slammer appeared on January 25th, 2003, and quickly spread throughout the Internet, infecting more than 90% of vulnerable computers within 10 minutes. The large volume of scan packets sent by Slammer caused a global-scale denial of service attack, shutting down many networks across Asia, Europe, and America for several hours.

Currently, organizations such as CERT, CAIDA, and SANS Institute monitor the Internet and analyze abnormal traffic. However, no nation-scale malware monitoring and defense center exists. Given the fast-spreading nature of Internet worms and their significant damage, it is essential to establish a nation-scale worm monitoring and early warning system.

To detect unknown (zero-day) worms, threshold-based anomaly detection methods are often used. However, these methods have high false alarm rates. Unlike hacker intrusion attacks, which are complex and target specific computers, worm propagation exhibits simple behaviors and follows dynamic models. Therefore, we do not use threshold-based anomaly detection methods. Instead, we exploit well-studied epidemic models and present a Kalman filter to detect worm propagation in its early stages based on observed illegitimate scan traffic.

The Kalman filter uses the correlation of historical observation data and the dynamic trend of worm propagation. When the estimated infection rate stabilizes around a constant positive value, we can conclude that the illegitimate scan activities are primarily due to a worm. This method reduces false alarms caused by background noise. Our algorithms also provide estimates of the worm's scan rate and vulnerable population size, allowing for appropriate countermeasures. We also present a formula to correct the bias in the number of infected hosts observed by monitors.

### 1.1 Related Work
Recent research has emphasized the importance of monitoring the Internet for malicious activities. Moore introduced the concept of a "network telescope" to observe security incidents using a small fraction of IP space. Yegneswaran et al. noted that there was no obvious addressing bias in this methodology. "Honeynet" is a network of honeypots that gather comprehensive attack information. Symantec Corp. has an "enterprise early warning solution" that collects IDS and firewall attack data from thousands of partners. The SANS Institute's "Internet Storm Center" gathers log data from distributed intrusion detection sensors, collecting over 3,000,000 entries daily. Berk et al. proposed a monitoring system that collects ICMP "Destination Unreachable" messages generated by routers for non-existent IP addresses and presented a threshold-based detection system called TRAFFEN.

Our monitoring system can be integrated into existing systems like the SANS "Internet Storm Center." We highlight the infrastructure specifically for worm monitoring and the data collection required for early detection. We also emphasize the importance of egress monitors, which have been overlooked in previous research. Egress and ingress filters on routers can cover more IP space and gather more comprehensive information than log data from intrusion detection sensors or firewalls.

### 1.2 Discussions
This paper focuses on worms that uniformly scan the Internet, such as Code Red and Slammer. Uniform scanning is the simplest and most efficient way for a worm to propagate without prior knowledge of vulnerable computers. We assume the current IPv4 infrastructure. While IPv6 would make random IP scans futile, we believe IPv6 will not replace IPv4 in the near future, and worms will continue to use random scan techniques.

## 2. Worm Propagation Model
A promising approach for modeling and evaluating malware behavior is the use of fluid models, which are suitable for systems with a large number of vulnerable hosts. The simple epidemic model assumes each host is either susceptible or infectious. Once infected, a host remains infectious. The model is given by:

\[
\frac{dI_t}{dt} = \beta I_t (N - I_t)
\]

where \( I_t \) is the number of infected hosts at time \( t \), \( N \) is the population size, and \( \beta \) is the pairwise rate of infection. At \( t = 0 \), \( I_0 \) hosts are infectious, and the remaining \( N - I_0 \) hosts are susceptible. This model captures the mechanism of uniform scan worms, especially during the initial propagation phase when human counteractions and congestion are negligible.

We study the initial part of worm spreading for early detection. The dynamics of \( I_t \) can be partitioned into three phases: slow start, fast spread, and slow finish. During the slow start phase, the number of infected hosts increases exponentially. As more hosts become infected, the worm enters the fast spread phase, where vulnerable hosts are infected at a near-linear speed. Finally, the worm enters the slow finish phase when most vulnerable computers have been infected. Our task is to detect the presence of a worm in its slow start phase.

### Table 1: Notations in This Paper
| Notation | Definition |
|----------|------------|
| \( N \) | Number of hosts under consideration |
| \( \Delta \) | Length of monitoring interval (time unit in discrete-time model) |
| \( I_t \) | Number of infected hosts at time \( t\Delta \) |
| \( \beta \) | Pairwise rate of infection |
| \( \alpha \) | Infection rate per infected host, \( \alpha = \beta N \) |
| \( C_t \) | Number of infected hosts monitored by time \( t\Delta \) |
| \( Z_t \) | Monitored worm scan rate at time \( t\Delta \) |
| \( \eta \) | Average scan rate per infected host |
| \( p \) | Probability a worm scan is monitored |
| \( y_t \) | Measurement data in Kalman filter |
| \( w_t \) | White noise in observation at time \( t\Delta \) |
| \( \delta \) | Constant in equation \( y_t = \delta I_t + w_t \) |
| \( R \) | Variance of observation error |
| MWC | Malware Warning Center |
| \( \hat{\alpha} \) | Estimated value of \( \alpha \) |
| \( A^T \) | Transpose of a matrix \( A \) |
| \( N(\mu, \sigma^2) \) | Normal distribution with mean \( \mu \) and variance \( \sigma^2 \) |

We use a discrete-time model for worm modeling, dividing time into intervals of length \( \Delta \). The discrete-time version of the simple epidemic model is:

\[
I_t = (1 + \alpha) I_{t-1} - \beta I_{t-1}^2
\]

where \( \alpha = \beta N \). We call \( \alpha \) the infection rate, the average number of vulnerable hosts that can be infected per unit time by one infected host during the early stage of worm propagation.

Before discussing how to use the worm model for detection and prediction, we present the monitoring system design in the next section and discuss data collection issues in Section 4.

## 3. Monitoring System
In this section, we propose the architecture of a worm monitoring system. The system aims to provide comprehensive observation data on a worm's activities for early detection. It consists of a Malware Warning Center (MWC) and distributed monitors.

### 3.1 Monitoring System Architecture
There are two types of monitors: ingress scan monitors and egress scan monitors. Ingress scan monitors are located on gateways or border routers of local networks and log incoming traffic to unused IP addresses. Local network administrators can set up these monitors, as they know how addresses inside their networks are allocated. For example, during the Code Red incident, /8 and /16 networks were used to collect scan traffic.

Egress scan monitors are located at the egress point of a local network and monitor outgoing traffic to infer potential worm scan behavior. Ingress scan monitors listen to global traffic and act as sensors for global worm incidents. However, they cannot capture most scans sent by an infected host. Egress scan monitors, being closer to infected computers, can observe more complete data about the worm's scan behavior.

For real-time early warning, distributed monitors must send observation data to the MWC continuously without significant delay. A tree-like hierarchy of data mixers can be set up between monitors and the MWC. Monitors nearby a data mixer send observed data to the data mixer, which fuses the data and passes it to a higher-level data mixer or directly to the MWC. Data fusion can include removing redundant addresses from the list of infected hosts. However, the tree structure creates single points of failure, requiring a trade-off in designing the hierarchical structure.