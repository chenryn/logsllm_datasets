    [**安装概述**]{.guilabel} 界面。
    :::
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
不支持将 `/boot`{.filename} 分区放到 LVM 卷中。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-installing-using-anaconda-x86.html#sect-create-btrfs-subvolume-x86}6.14.4.4. 创建 Btrfs 子卷 {.title}
:::
::: para
*Btrfs* 是一个文件系统类型，但有一些存储设备的特征。Btrfs
设计要求可以容错，并可以更容易地检测出错误并修复。它使用 checksum
确保数据和元数据的完整性并维护可用来备份或者修复的文件系统快照。
:::
::: para
在手动分区的过程中会生成 Btrfs
子卷而不是多个卷。然后安装程序会自动生成包含这些子卷的 Btrfs
卷。[**手动分区**]{.guilabel} 页面左侧栏中给出的 Btrfs
挂载点大小均一致，这是因为它们代表的是卷的总大小，而不是每个子卷的大小。
:::
::: figure
[⁠]{#chap-installing-using-anaconda-x86.html#idm139805792211280}
::: figure-contents
::: mediaobject
![配置 Btrfs 子卷](images/diskpartitioning/btrfs.png){width="660"}
:::
:::
**图 6.31. 配置 Btrfs 子卷**
:::
::: para
要创建 Btrfs 子卷：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    如 [第 6.14.4.1 节
    "添加文件系统并配置分区"](#chap-installing-using-anaconda-x86.html#sect-partition-configuration-x86){.xref}
    所述生成挂载点。通过配置这个挂载点，您就可以配置 Btrfs 卷。
    :::
2.  ::: para
    点击 [**设备类型**]{.guilabel} 下拉菜单并选择
    [**BTRFS**]{.guilabel}。[**文件系统**]{.guilabel} 下拉菜单中的
    `Btrfs`{.literal} 会自动变灰。出现 [**卷**]{.guilabel}
    下拉菜单并显示新生成卷的名称。
    :::
3.  ::: para
    另外也可以点击该菜单并选择 [**新建卷**]{.guilabel}
    ，或者在需要时点击 [**修改**]{.guibutton}
    配置新生成的卷。[**新建卷**]{.guilabel} 选项和
    [**修改**]{.guibutton} 按钮都会让您进入 [**配置卷**]{.guilabel}
    对话框，在那里可以重命名子卷并为其添加 RAID 级别。
    :::
    ::: figure
    [⁠]{#chap-installing-using-anaconda-x86.html#idm139805856533600}
    ::: figure-contents
    ::: mediaobject
    ![定制 Btrfs 卷](images/diskpartitioning/btrfs-volume-x86.png)
    :::
    :::
    **图 6.32. 定制 Btrfs 卷**
    :::
    ::: para
    可用 RAID 级别为：
    :::
    ::: variablelist
    [[**RAID0（性能）**]{.guilabel}]{.term}
    :   ::: para
        在多个存储设备间分配数据。级别 0 RAID
        提供比标准分区优越的性能，并可用来将多个设备的存储汇集到一个大的虚拟设备中。请注意：级别
        0 RAID 不提供冗余，且阵列中一个设备的失败将破坏整个阵列。RAID 0
        至少需要两个 RAID 分区。
        :::
    [[**RAID1（冗余）**]{.guilabel}]{.term}
    :   ::: para
        将一个存储设备中的数据镜像保存到一个或者多个其他存储设备中。阵列中的附加设备提供增加的冗余级别。RAID
        1 至少需要两个 RAID 分区。
        :::
    [[**RAID10（性能，冗余）**]{.guilabel}]{.term}
    :   ::: para
        兼备 RAID0 和
        RAID1，并同时提供更高性能和冗余。在提供冗余（镜像）的 RAID 1
        阵列中分配数据，且这些阵列呈条带状（RAID0)，提供性能（条状）。至少需要四个
        RAID 分区。
        :::
    :::
    ::: para
    您还可以将该卷标记为加密，并为其设置大小策略。可用策略选项为：
    :::
    ::: itemizedlist
    -   ::: para
        [**自动**]{.guilabel} -
        自动设置卷大小，使其足够容纳配置的子卷。最适合不需要剩余空间的卷。
        :::
    -   ::: para
        [**尽量分配空间**]{.guilabel} -
        为该卷分配最大的可用空间，不考虑其包含的已配置子卷的大小。最适用于要将大多数数据保存到
        Btrfs，且之后需要增大一些现有子卷容积，或者需要在该卷中生成附加子卷的情况。
        :::
    -   ::: para
        [**固定**]{.guilabel} -
        使用这个选项可以设置该卷的具体大小。这个固定的大小必须能够容纳所有配置的子卷。如果您知道该卷的实际大小就很有用。
        :::
    :::
    ::: para
    完成卷配置后点击 [**保存**]{.guibutton}。
    :::
4.  ::: para
    点击 [**更新设置**]{.guibutton}
    保存更改，并继续对其他分区操作，或者点击 [**完成**]{.guibutton} 返回
    [**安装概述**]{.guilabel} 界面。
    :::
:::
::: para
如果包含的磁盘少于 RAID
级别要求，则会在窗口底部显示一条信息，提醒您选择的配置实际需要多少磁盘。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
不支持将 `/boot`{.filename} 分区放到 `Btrfs`{.systemitem} 子卷中。
:::
::: para
同样，也不支持使用 `Btrfs`{.systemitem} 创建独立 `/usr`{.filename}
分区。该系统无法启动。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-installing-using-anaconda-x86.html#sect-recommended-partitioning-scheme-x86}6.14.4.5. 推荐的分区方案 {.title}
:::
[]{#chap-installing-using-anaconda-x86.html#idm139805860866256
.indexterm}[]{#chap-installing-using-anaconda-x86.html#idm139805875414352
.indexterm}[]{#chap-installing-using-anaconda-x86.html#idm139805786832448
.indexterm}[]{#chap-installing-using-anaconda-x86.html#idm139805809893584
.indexterm}[]{#chap-installing-using-anaconda-x86.html#idm139805800117760
.indexterm}
::: para
Red Hat 建议您在 x86、AMD64 和 Intel 64 位系统中创建以下分区：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `/boot/`{.filename} 分区
    :::
-   ::: para
    `/`{.filename} (root) 分区
    :::
-   ::: para
    `/home`{.filename} 分区
    :::
-   ::: para
    `swap`{.systemitem} 分区
    :::
:::
::: variablelist
[`/boot`{.filename} 分区 - 建议大小至少有 500 MB]{.term}
:   ::: para
    挂载到 `/boot`{.filename} 的分区含有操作系统内核，它可让您的系统引导
    Red Hat
    Enterprise Linux，并提供引导过程中要使用的文件。鉴于多数固件的限制，建议生成一个较小的分区来保存这些文件。多数情况下
    500MB 的 boot 分区就足够了。
    :::
    ::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **警告**
    :::
    ::: admonition
    ::: para
    通常安装程序会自动生成 `/boot`{.filename} 分区。但如果
    `/boot`{.filename}（root）分区超过 2 TB，且使用（U)EFI
    引导，则需要生成独立的小于 2 TB 的 `/boot`{.filename}
    分区方可成功引导。
    :::
    :::
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    如果您有 RAID 卡，请注意某些 BIOS 类型不支持使用 RAID
    卡引导。在这种情况下，必须在 RAID 阵列外创建 `/boot/`{.filename}
    分区，如在独立硬盘中。
    :::
    :::
    :::
[`root`{.filename} 分区 - 建议大小为 10 GB ]{.term}
:   ::: para
    这是 \"`/`{.filename}\" 或者 root 目录所在位置。root
    目录位于目录结构的顶端。默认情况下所有文件都写入这个分区除非要写入路径中挂载了不同分区（例如：`/boot`{.filename}
    或者 `/home`{.filename}）
    :::
    ::: para
    虽然 5 GB root 分区满足最低安装条件，但还是建议至少分配 10 GB
    分区以便可以尽可能安装您想要的软件包。
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    不要将 `/`{.filename} 目录与 `/root`{.filename}
    目录混淆。`/root`{.filename} 目录是 root 用户的主目录。有时
    `/root`{.filename} 目录也称 [*斜杠 root*]{.emphasis} 以示其与 root
    目录的区别。
    :::
    :::
    :::
[`/home`{.filename} 分区 - 建议大小至少为 1 GB]{.term}
:   ::: para
    为将用户数据与系统数据分开保存，请在卷组中为 `/home`{.filename}
    目录创建专用分区。这个分区的大小取决于本地保存数据量、用户数量等等。这可让您在不删除用户数据文件的情况下完成升级，或者重新安装
    Red Hat Enterprise Linux。如果您的存储空间超过
    50GB，则会在创建其他分区的同时自动创建 `/home`{.filename} 分区。
    :::
[`swap`{.filename} 分区 - 建议大小至少为 1 GB]{.term}
:   ::: para
    Swap 分区支持虚拟内存。当没有足够的 RAM
    保存系统处理的数据时会将数据写入 swap 分区。Swap
    的大小是系统内存负载而非总系统内存的一个功能，因此不等于总系统内存。所以关键是要分析系统运行的程序以及那些程序要提供的负载，这样方可决定该系统内存负载。应用程序供应商和开发者应该可以提供一些指导。
    :::
    ::: para
    当系统缺乏 swap 空间时，内核会因 RAM 内存耗尽而终止进程。配置过多
    swap 空间会造成存储设备处于分配状态但闲置，这是浪费资源。过多 swap
    空间还会掩盖内存泄露。有关 swap 分区的最大值以及其他附加信息请查看
    `mkswap(8)`{.systemitem} manual page。
    :::
    ::: para
    下表根据系统中的 RAM
    容量以及是否需要足够的内存以便系统休眠来提供推荐的 swap
    分区大小。如果让安装程序自动为系统分区，则会根据这个参考分配 swap
    分区大小。自动化分区设置假设不使用休眠功能，且 swap
    分区最多时能是硬盘总容量的 10%。如果要设置足够大的 swap
    空间以便允许休眠功能，或者要将 swap 分区大小设定为超过系统存储空间
    10%，则必须手动编辑分区布局。
    :::
    ::: table
    [⁠]{#chap-installing-using-anaconda-x86.html#idm139805871329408}
    **表 6.2. 推荐的系统 swap 空间**
    ::: table-contents
      系统 RAM 容量   建议 swap 空间大小          允许休眠的建议 swap 空间大小
      --------------- --------------------------- ------------------------------
      低于  2 GB      RAM 容量的两倍              RAM 容量的三倍
      2 GB - 8 GB     与 RAM 容量相等             RAM 容量的两倍
      8 GB - 64 GB    4 GB 到 RAM 容量的 0.5 倍   RAM 容量的 1.5 倍
      超过 64 GB      独立负载（至少 4GB）        不建议使用休眠功能
    :::
    :::
    ::: para
    在以上列出的每个范围临界点（例如：使用 2 GB、8 GB 或者 64 GB RAM
    的系统），可根据所选 swap
    空间以及休眠支持进行选择。如果系统资源允许此操作，增加 swap
    空间可能会提高性能。
    :::
    ::: para
    注：您可以在多个存储设备间分配 swap 空间 -
    特别是对于那些使用高速驱动器、控制程序和接口的系统 - 同时还可提高
    swap 空间性能。
    :::
:::
::: para
很多系统的分区超过了以上列出的最少分区。请根据系统具体需要选择分区。详情请参考
[第 6.14.4.5.1 节
"分区建议"](#chap-installing-using-anaconda-x86.html#sect-partitioning-advice){.xref}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请只为那些您立即需要的分区分配存储容量。剩余空间可随时分配以满足您的需要。要了解更灵活的存储管理方法，请查看
[附录 C, *了解 LVM*](#appe-lvm-overview.html){.xref}。
:::
:::
:::
::: para
如果您不确定如何为您的计算机进行最佳分区，请接受安装程序提供的自动默认分区布局。
:::
::: section
::: titlepage
#### [⁠]{#chap-installing-using-anaconda-x86.html#sect-partitioning-advice}6.14.4.5.1. 分区建议 {.title}
:::
::: para
最佳分区设置取决于 Linux
系统的用量。下面的提示可帮助您决定如何分配磁盘空间。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    考虑为所有可能包含敏感数据的分区加密。加密可防止对这些分区中数据的未授权访问，即使他们可以访问物理存储设备。在大多数情况下，应该至少对
    `/home`{.filename} 分区加密。
    :::
-   ::: para
    系统中安装的每个内核大约需要占用 20 MB `/boot`{.filename}
    分区。默认的 500 MB `/boot`{.filename}
    分区足以应付大多数常规使用。如果要同时保留多个内核，请增大该分区。
    :::
-   ::: para
    `/var`{.filename} 目录中包含大量应用程序，其中包括
    [**Apache**]{.application}
    网页服务器。同时它还临时保存下载的更新软件包。确定包含
    `/var`{.filename}
    目录的分区中有足够空间可用于保存下载的更新以及其他内容。
    :::