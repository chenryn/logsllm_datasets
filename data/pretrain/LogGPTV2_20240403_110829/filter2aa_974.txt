# 恶意程式与防毒软体之争

## 教学目的
- 为学生提供资安相关的基础知识。
- 激发学生对资安研究的兴趣。

## 致谢
感谢所有为此课程做出贡献的人。特别感谢天赐良机！

## 大纲
- 前言
- 我的电脑中毒了！？
- 什么是恶意程式？
- 恶意程式的三种躲避侦测原理
- 防毒软体的三道防御机制
- 资安相关名词与工具介绍
- 资安防护的迷思
- 补充：JS木马简单分析心得

## 前言
在当今的数字时代，每个人或多或少都有“中毒恐惧症”。即使是像祖克伯和FBI局长这样的公众人物，也会采取额外的安全措施来保护自己的隐私（例如，在摄像头前贴上胶带以防偷窥）。因此，了解如何防范恶意程式变得尤为重要。

## 我的电脑中毒了！？
如果你遇到以下情况，你的电脑可能已经感染了恶意程式：
- 电脑运行速度显著变慢。
- 系统不稳定，经常出现当机现象。
- 屏幕上频繁弹出不明视窗或广告。
- 浏览器首页被篡改。
- 防毒软件发出警告或突然消失。
- 出现要求支付赎金的信息。
- 尽管一切看起来正常，但上述迹象表明可能存在潜在威胁。

## 什么是恶意程式？
恶意程式是一种旨在对用户造成负面影响的软件，包括但不限于：
- 影响用户的计算机系统。
- 危及用户的资料或财产安全。
- 侵犯用户的个人隐私。

### 主要类型
- **病毒**：会自我复制并传播到其他文件或系统中。
- **特洛伊木马**：伪装成合法程序以欺骗用户下载并安装。
- **蠕虫**：利用网络漏洞自动传播自身。
此外还有病毒生成器、病毒下载器、浏览器绑架者、广告软件、键盘记录器以及间谍软件等。

## 恶意程式常见的三种躲避侦测方法
1. **加壳**：通过外壳程序将原始代码包裹起来，使其难以被直接读取或解密。
2. **加花**：向源代码中插入大量无用指令，干扰分析过程。
3. **去除特征**：修改已知的病毒特征码，从而逃避检测。

### 加壳技术详解
- 目的：防止反编译及逆向工程。
- 方法：使用加密或压缩手段。
- 工具示例：UPX, ASPACK。
  
### 加花技术案例
- 在程序内部添加冗余代码。
- 干扰静态分析工具的工作流程。
- 示例：“我的梦想”题目中的递归阅读指示。

### 特征去除策略
- 修改特定部分的代码结构。
- 针对特定杀毒软件进行优化。
- 提高逃避检测的能力。

## 防毒软体的三重防线
1. **已知病毒侦测**：基于预设的病毒特征库识别威胁。
2. **未知病毒侦测**：采用基因比对法和启发式算法预测新威胁。
   - **基因侦测**：从现有样本中提取共性特征作为参考标准。
   - **启发式扫描**：模拟人类学习过程，不断更新规则数据库。
3. **行为侦测 (HIPS)**：监控应用程序的行为模式，阻止异常活动。
4. **白名单制度**：允许预先批准的应用程序执行操作，限制未授权访问。

### 动态与静态分析
- **静态分析**：检查非运行状态下的二进制文件。
- **动态分析**：在受控环境中观察程序的实际表现。

## 资安相关术语及工具
- **防火墙**：过滤进出网络的数据流。
- **社交工程/钓鱼攻击**：利用心理战术诱骗用户提供敏感信息。
- **假防毒软件**：冒充正版产品诱导用户安装。
- **零日漏洞**：尚未公开且没有补丁的安全缺陷。
- **蜜罐**：故意设置易受攻击的目标以吸引黑客。
- **虚拟机/沙箱**：创建隔离环境测试可疑文件而不影响主机系统。
- **在线扫描平台**：如VirusTotal, Payload Security等。

## 结语
记住，“1+1<2”的原则同样适用于网络安全领域——单一措施不足以提供全面保护。养成良好的上网习惯至关重要：
- 不点击来历不明的链接、广告、邮件附件。
- 定期更新操作系统和应用程序。
- 使用可靠的防毒解决方案，并保持其最新状态。