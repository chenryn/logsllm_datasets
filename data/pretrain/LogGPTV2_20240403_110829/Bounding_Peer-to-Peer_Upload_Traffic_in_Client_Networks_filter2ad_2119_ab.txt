9]?|gnutella.*content-type: application/x-gnutella|...................?lime)
http/http-proxy
http/(0\.9|1\.0|1\.1) [1-5][0-9][0-9] [\x09-\x0d -~]*(connection:|content-type:|content-
length:|date:)|post [\x09-\x0d -~]* http/[01]\.[019]
ftp
^220[\x09-\x0d -~]*ftp
Ports
N/A
TCP/UDP: 4662
N/A
N/A
TCP: 80, 3128, 
8080
TCP: 21
Table 2. Summary of Protocol Distributions in
the Trace Data
Protocol
HTTP
bittorrent
gnutella
edonkey
UNKNOWN
Others
Connections Utilizations
2.17%
47.90%
7.56%
22.00%
17.55%
2.82%
5%
18%
16%
21%
35%
5%
tion, we only count the port number that is used by the
service provider, i.e. the destination port of the correspond-
ing TCP-SYN packet. This is because the source ports of
TCP connections are usually randomly generated. We also
gather the same statistics for UDP connections. However,
since there is no explicitly signals to determine the direction
of an UDP connection, for UDP connections, both source
ports and destination ports are counted. Figure 2 and Fig-
ure 3 show the cumulative distributions of TCP and UDP
port numbers, respectively. In Figure 2, we can ﬁnd that
most of the “Non-P2P” connections use several well-know
ports. We also found that besides these well-known peer-to-
peer ports, a great deal of random ports between port 10000
and port 40000 are also used for peer-to-peer communica-
tions. Although there are many unidentiﬁed connections in
our trace, we found that the port distributions of these “UN-
KNOWN” connections are close to “P2P” applications. As
the development of proprietary peer-to-peer protocols and
the use of “protocol encryption” technologies, we believe
that many of those unidentiﬁed connections have a high
probability to also be peer-to-peer trafﬁc.
All
P2P
Non−P2P
UNKNOWN
F
D
C
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
0
10000
30000
50000
Port numbers
Figure 2. The port number CDF plot of TCP
connections. Only ports that used to accept
TCP connections are counted.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:50:17 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007F
D
C
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
All
P2P
Non−P2P
UNKNOWN
0
10000
30000
50000
Port numbers
t
n
u
o
C
6
0
+
e
1
4
0
+
e
1
2
0
+
e
1
0
0
+
e
1
233
99% connections
are shorter than
810 seconds
45
810
0
1000
2000
3000
4000
5000
6000
Time (in seconds)
Figure 3. The port number CDF plot of UDP
connections. Both source ports and destina-
tion ports of UDP connections are counted.
Figure 4. Statistics for connection lifetime.
The average connection lifetime is 45.84 sec-
onds.
Figure 3 shows the results of UDP connections. While
we count both source ports and destination ports for UDP
connections, the result also reﬂects that the port numbers are
almost uniformly distributed. However, we can still identify
several frequently used ports, like DNS (port 53) and the
edonkey ports (port 4661, 4662, 4672, etc).
We have mentioned that 89.8% of the throughput was
contributed by outbound trafﬁc. Among all the outbound
trafﬁc, it should be noticed that 80% are sent along with in-
bound connections while the other 20% are actively sent out
by inner clients. In general, the design of data transmission
protocols can be classiﬁed into two categories. Data can be
delivered either within the same connection to the request
or using a different connections. This statistics show that
most applications prefer the former design.
We also examine the lifetime of connections from the
packet trace. The lifetime of TCP connections are counted
from the ﬁrst TCP-SYN packet to the appearance of a valid
TCP-FIN or TCP-RST packet. The connection lifetime
varies widely from a minimum of several milliseconds to
a maximum of six hours, as shown in Figure 4 (data ex-
ceeding the 6000th second are removed, since there are no
more peaks). However, the lifetime of most connections is
short. The statistics show that 90% of connections are un-
der 45 seconds, 95% are under 4 minutes, and less than one
percent last for more then 810 seconds.
Although the lifetime for each connection varies greatly,
an interesting phenomenon is that the out-in packet delay
is always short. Before introducing out-in packet delay,
we deﬁne two types of packet. An outbound packet
is a packet sent from a client network, while inbound
packet is a packet received by a client network. A packet
always contains a socket pair σ of {protocol , source-
=
pair
be
of
in
its
an
socket
address, source-port, destination-address, destination-
port}. Thus, for an outbound packet with a socket pair
{protocol , saddr , sport, daddr , dport},
of σout
the
inbound
is
packet
that
σin = {protocol , daddr , dport, saddr , sport}.
Note
that for an outbound packet and its corresponding inbound
packet, σin, which is the inverse of the socket pair σin, and
σout should be the same. Based on these deﬁnitions, the
out-in packet delay is then obtained as follows:
corresponding
inverse
form,
should
1. On receipt of an outbound packet with a socket pair
σout = {protocol , saddr , sport, daddr , dport} on an
edge router at time t, the router checks if the socket
pair has been recorded previously. If the socket pair is
new, it is associated with a timestamp of time t and
stored in the edge router’s memory. Otherwise, the
timestamp of the existed socket pair is updated with
the time t.
2. On receipt of an inbound packet with a socket pair
σin = {protocol , daddr , dport, saddr , sport} at time
t, the edge router checks if the inverse socket pair
σin has been recorded before. If it already exists, the
timestamp associated with the inverse socket pair σin
is read as t0 and the out-in packet delay is computed
as t − t0.
3. To avoid the problem of port-reuse, which affects the
accuracy of computing the out-in packet delay, an
expiry timer Te deletes existing socket pairs when
t − t0 > Te.
The out-in packet delay may be caused by network propaga-
tion delay, processing delay, queueing delay, or mechanisms
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:50:17 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007a. Out−In Packet Delay
0
100
200
300
400
500
600
Delay (in seconds)
b. Out−In Packet Delay (CDF)
99% out−in packet delays
are shorter than
3.61 seconds
95% out−in packet delays
are shorter than
0.88 seconds
t
n
u
o
C
8
0
+
e
1
6
0
+
e
1
4
0
+
e
1
2
0
+
e
1
0
0
+
e
1
0
0
1
.
5
9
0
.
F
D
C
0
9
0
.
5
8
0
.
0