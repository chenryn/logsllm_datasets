（LCTT 译注：关于设置静态 IP 地址的更多信息，请参照： ）
### 3. 设置服务器的主机名称
下一步是更改 CentOS 服务器的主机名称。查看当前分配的主机名称。
```
# echo $HOSTNAME
```
![查看系统主机名称](/data/attachment/album/201504/27/151953iyz7224vn46t362r.jpg)
*查看系统主机名称*
要设置新的主机名称，我们需要编辑 ‘/etc/hostsname’ 文件并用想要的名称替换旧的主机名称。
```
# vi /etc/hostname
```
![在 CentOS 中设置主机名称](/data/attachment/album/201504/27/151954ec4q5i5zphsil445.jpg)
*在 CentOS 中设置主机名称*
设置完了主机名称之后，务必注销后重新登录确认主机名称。登录后检查新的主机名称。
```
$ echo $HOSTNAME
```
![确认主机名称](/data/attachment/album/201504/27/151954lb4pd12v448zm4bs.jpg)
*确认主机名称*
你也可以用 ‘hostname’ 命令查看你当前的主机名。
```
$ hostname
```
（LCTT 译注：关于设置静态、瞬态和灵活主机名的更多信息，请参考： ）
### 4. 更新或升级最小化安装的 CentOS
这样做除了更新安装已有的软件最新版本以及安全升级，不会安装任何新的软件。总的来说更新（update）和升级（upgrade）是相同的，除了事实上 升级 = 更新 + 更新时进行废弃处理。
```
# yum update && yum upgrade
```
![更新最小化安装的 CentOS 服务器](/data/attachment/album/201504/27/151955xcnq8vais7vvuys8.jpg)
*更新最小化安装的 CentOS 服务器*
**重要**: 你也可以运行下面的命令，这不会弹出软件更新的提示，你也就不需要输入 ‘y’ 接受更改。
然而，查看服务器上会发生的变化总是一个好主意，尤其是在生产中。因此使用下面的命令虽然可以为你自动更新和升级，但并不推荐。
```
# yum -y update && yum -y upgrade
```
### 5. 安装命令行 Web 浏览器
大部分情况下，尤其是在生产环境中，我们通常用没有 GUI 的命令行安装 CentOS，在这种情况下我们必须有一个能通过终端查看网站的命令行浏览工具。为了实现这个目的，我们打算安装名为 ‘links’ 的著名工具。
```
# yum install links
```
![安装命令行浏览器](/data/attachment/album/201504/27/151955rffl5ihb5s5cjknr.jpg)
*Links: 命令行 Web 浏览器*
请查看我们的文章 [用 links 工具命令行浏览 Web](http://www.tecmint.com/command-line-web-browsers/) 了解用 links 工具浏览 web 的方法和例子。
### 6. 安装 Apache HTTP 服务器
不管你因为什么原因使用服务器，大部分情况下你都需要一个 HTTP 服务器运行网站、多媒体、用户端脚本和很多其它的东西。
```
# yum install httpd
```
![在 CentOS 上安装 Apache](/data/attachment/album/201504/27/151956k9sc9h6quq5jdsb6.jpg)
*安装 Apache 服务器*
如果你想更改 Apache HTTP 服务器的默认端口号(80)为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行：
```
LISTEN 80 
```
把端口号 ‘80’ 改为其它任何端口(例如 3221)，保存并退出。
![在 CentOS 上更改 Apache 端口](/data/attachment/album/201504/27/151956inck0k662l66kc88.jpg)
*更改 Apache 端口*
增加刚才分配给 Apache 的端口通过防火墙，然后重新加载防火墙。
允许 http 服务通过防火墙(永久)。
```
# firewall-cmd –add-service=http
```
允许 3221 号端口通过防火墙(永久)。
```
# firewall-cmd –permanent –add-port=3221/tcp
```
重新加载防火墙。
```
# firewall-cmd –reload
```
（LCTT 译注：关于 firewall 的进一步使用，请参照： ）
完成上面的所有事情之后，是时候重启 Apache HTTP 服务器了，然后新的端口号才能生效。
```
# systemctl restart httpd.service
```
现在添加 Apache 服务到系统层使其随系统自动启动。
```
# systemctl start httpd.service
# systemctl enable httpd.service
```
（LCTT 译注：关于 systemctl 的进一步使用，请参照： ）
如下图所示，用 links 命令行工具 验证 Apache HTTP 服务器。
```
# links 127.0.0.1
```
![验证 Apache 状态](/data/attachment/album/201504/27/151957kcjayjmqrr0czwmw.jpg)
*验证 Apache 状态*
---
via: 
作者：[Avishek Kumar](http://www.tecmint.com/author/avishek/) 译者：[ictlyh](https://github.com/ictlyh) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出