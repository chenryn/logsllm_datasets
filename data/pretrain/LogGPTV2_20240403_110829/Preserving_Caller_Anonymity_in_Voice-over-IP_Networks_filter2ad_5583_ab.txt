if for all other path lengths d, di (cid:9) d for all i and di (cid:10)
dj for all i and j such that i (cid:13)= j and 1 ≤ i, j ≤ m.
Now we sketch a statistical triangulation attack in terms
2), ··· , dm = (µm, σ2
≤ σ2
≥ σ2
1
1
2
p[v]+σ2
d∈distp[v] σ2
∗(cid:2)
∗(cid:2)
is a candidate caller if |((cid:1)dist(src, p)−(cid:1)dist(src, q)) −
node p. We approximate distp[v] by computing a mean
over all statistical distances d ∈ distp[v] as distp[v] =
( 1
d∈distp[v] µd, 1
d). One can now com-
pute the statistical distance distpq[v] = distp[v]−distq[v]
d
d
as (µp[v]−µq[v], σ2
q [v]), where distp[v] = (µp[v],
q [v]). Finally, a node v
p[v]) and distq[v] = (µq[v], σ2
σ2
(µp[v]−µq[v])|  1. We compute the average score for a node v as
σ2
p[v]+σ2
p[v]+σ2
√
q [v]
(cid:2) n
hence, scorepq(v) = Gaussµp[v] −µq[v],σ2
i=2 scorepip1 (v)
n−1
.
D. Topology Discovery
Triangulation based timing analysis attacks require that
the network topology is at least partially known. In this
section we sketch techniques to discover the VoIP net-
work topology by exploiting topology maintenance pro-
tocols. VoIP networks allow a node to discover other
nodes in its neighborhood. This is typically achieved
by ping and pong messages for scoped crawling. A
malicious node p may send a ping message with a
small TTL (time-to-live), say ttl = 2, and discover all
nodes and links that are within ttl hops from node p.
Additionally, the malicious node can use the time elapsed
between sending a ping message and receiving a pong
message from a node to estimate link latencies (mean and
variance). The adversary can combine partial topology
information (using a node’s IP address as its identiﬁer)
from multiple malicious nodes and construct a view of
the overall network topology.
E. Attacks Evaluation
To illustrate the effectiveness of our timing analysis
attacks, we use a synthetic network topology with 1024
nodes. The topology is constructed using the NS-2 topol-
ogy generator (GT-ITM [3], [1], [37]), and our experi-
ments were performed on NS-2 [2]. This topology mod-
els network geography (stub domains and autonomous
systems) and the small world phenomenon [15], [25].
of the three step process. In the candidate caller
detection step, a malicious node p computes a set
of Pareto-optimal set of statistical shortest distances to
all nodes v (distp[v]) in the network. Then, p marks v
as a candidate caller if |(cid:1)dist(src, p) − µd| 
1 are tightly correlated with dist1(s, p), and are thus
not good statistical discriminators. Hence, we do not
consider multi-path triangulation attacks in the rest of
this paper.
Figure 7 shows the number of suspects as we vary
the parameter  with 10 malicious nodes. When  is set
too small, even introducing a small uncertainty in the
network link latencies (say, small jitters) may result in
either an inaccurate candidate caller set. On the other
hand, a large value for  identiﬁes a huge candidate
caller set, thereby making the attack less effective. In the
next set of experiments, we show that using statistical
triangulation attack offers a better approach to capture
uncertainties in network latencies.
Statistical Triangulation. Figure 8 shows that the statis-
tical triangulation attack is more effective than a deter-
ministic triangulation attack when there are uncertainties
in link latencies. We assume that there are ten malicious
nodes in the network. The ﬁgure shows the probability
that the caller appears in the top-10 entries using a Gaus-
sian distribution for link latencies (the x-axis is the link
latency coefﬁcient of variation, σe:µe). The ﬁgure shows
the results for the deterministic triangulation attack using
an optimal setting for the parameter . Note that initially
as  increases, the probability of the deterministic trian-
gulation attack increases; however, after a critical value,
increasing  decreases the effectiveness of the attack.
Figure 9 shows the probability that the caller appears
in the top-10 entries in the ranked list for three com-
monly used link latency distributions: Gaussian, Weibull
and bursty models (using Pareto distribution) [2], by
varying the number of malicious nodes. We set the link
latency coefﬁcient of variation, σe:µe = 0.25. Even for
a small increase in the number of malicious nodes, the
probability of a successful attack increases signiﬁcantly.
For a Gaussian distribution, we use the exact likelihood
estimate; hence, the attack is more accurate. Bursty de-
lays (typically modeled using a heavy tailed Pareto dis-
tribution) reduce the efﬁcacy of the attacks the most
because its higher order moments [26] are larger than
the Weibull distribution. Figure 10 shows the probability
that the caller appears in the top-κ entries in the ranked
list for varying κ under three types of link latency dis-
tributions. Note that the top-1 probability is 0.25 and
the top-10 probability is 0.9; this amply illustrates the
attack’s efﬁcacy.
Differential Triangulation. Figure 11 compares the top-
10 probability of a differential triangulation attack against
a statistical triangulation attack using 10 malicious nodes.
Assuming that the clocks on all nodes are synchronized,
the statistical triangulation attack performs slightly bet-
ter. If the clocks were synchronized, then the differential
triangulation attack indeed discards useful statistical in-
formation. For instance, when the clock skew is zero, the
top-10 probability in a differential triangulation attack is
0.85, while that of that of the statistical triangulation
attack is 0.9. However, the efﬁcacy of statistical trian-
gulation attacks drop signiﬁcantly as the clocks go out
of synch. Figures 12 and 13 show the probability of a
successful attack using three types of link latency distri-
butions. Figure 12 shows the top-10 probability as the
number of malicious proxy nodes increases for different
network latency distributions; and Figure 13 shows the
top-k probability using 10 malicious nodes and different
network latency distributions. These results show that
the differential triangulation attack can achieve a top-10
probability of 0.78 with only 10 malicious nodes even
under a bursty link latency model.
Topology Discovery. Figure 14 shows the fraction of
topology discovered by an adversary using the topology
discovery method described in Section III-D as we vary
ttl and the number of malicious nodes m. We observe
that with m = 20 and ttl = 2, about 75% of the topol-
ogy is discovered by the adversary. Evidently, as ttl
increases, the adversary gets a more complete view of
55
s
e
d
o
N
f
o
n
o
i
t
c
a
r
F
 0.3
 0.25
 0.2
 0.15
 0.1
 0.05
 0
 0
’dist’
 1000
s
r
e
l
l
i
t
a
C
e
a
d
d
n
a
C
f
o
r
e
b
m
u
N
 50
 100
 150
 200
 250
dist (ms)
 100
 10
 1
 1
’shortest-path’
’multi-path’
s
r
e
l
l
t
a
C
e
a
d
d
n
a
C
i
f
o
r
e
b
m
u
N
 10
 100
 1000
Number of Malicious Nodes
 70
 60
 50
 40
 30
 20
 10
 0
’shortest-path’
’multi-path’
 0
 5
 10  15  20  25  30  35  40  45  50
Epsilon
Fig. 5. Distance Distribution
Fig. 6. Deterministic Triangulation:  =
10ms
Fig. 7.
Malicious Nodes
Deterministic Triangulation: 10
 1
 0.9
 0.8
 0.7
 0.6
 0.5
y
t
i
l
i
b
a
b
o
r
P
0
1
-
p
o
T
 0.4
 0.01
’statistical’
’deterministic’
 0.1
 1
Link Latency Coefficient of Variation
Fig. 8. Statistical Vs Deterministic Trian-
gulation Attack
y
t
i
l
i
b
a
b
o
r
P
0
1
-
p
o
t
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1