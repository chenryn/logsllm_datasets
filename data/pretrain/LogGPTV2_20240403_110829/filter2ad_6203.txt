# Designing Router Scheduling Policies: A Privacy Perspective

**Authors:**
- Sachin Kadloor†∗
- Xun Gong†∗
- Negar Kiyavash‡∗
- Parv Venkitasubramaniam§

**Affiliations:**
- † ECE Department and Coordinated Science Lab, University of Illinois at Urbana-Champaign, Urbana, IL, USA.
- ‡ IESE Department and Coordinated Science Lab, University of Illinois at Urbana-Champaign, Urbana, IL, USA.
- § ECE Department, Lehigh University, Bethlehem, PA, USA.

**Emails:**
- {kadloor1, xungong1, kiyavash}@illinois.edu
- PI:EMAIL

## Abstract

We investigate a queuing side channel that arises from the shared use of a resource between two users in packet networks. One user is legitimate, while the other is an attacker attempting to infer the activities of the former. We demonstrate that the waiting time of an adversary sending frequent but small probe streams to the shared resource (e.g., a router) is highly correlated with the traffic pattern of the legitimate user. By precisely modeling the constituent flows and the scheduling policy of the shared resource, we develop a dynamic program to compute the optimal privacy-preserving policy that minimizes the correlation between the user's traffic and the attacker's waiting times. Although the state-space explosion for this problem precludes characterizing the optimal policy, we derive a sub-optimal policy using a myopic approximation. Simulation results show that the sub-optimal policy performs well in high-traffic regimes. Additionally, we compare the privacy-delay trade-offs among various scheduling policies, including some widely deployed ones and others suggested based on the myopic approximation.

## Categories and Subject Descriptors

- C.2.0 [Computer-Communications Networks]: General—Security and protection (e.g., firewalls)
- C.2.3 [Computer-Communications Networks]: Network Operations—Network monitoring
- I.5.4 [Pattern Recognition]: Applications
- K.4.1 [Computers and Society]: Public Policy Issues—Privacy

## General Terms

- Security, Theory, Algorithms

## Introduction

It is well-known that a shared resource in a network can lead to covert channels used for communication between different processes. However, shared resources also create side channels, where information about one process leaks to another without the former's cooperation. In this work, we explore the side channel resulting from the queuing of packets from multiple users at a router.

### Motivating Example

Consider Alice, who uses her home DSL router to connect to the Internet. The ISP sees all of Alice's traffic, but she feels secure because of anti-wiretapping laws and her use of encryption for sensitive data. Bob, located at a different ISP, sends frequent, small probes to Alice's router. These probes share the same queue as Alice's incoming traffic, making the waiting time of Bob's probes correlated with Alice's traffic patterns. This setup allows Bob to create a side channel that leaks information about Alice's traffic. This scenario is illustrated in Figure 1(a).

Bob sends low-bandwidth, high-frequency probes to the router and measures the round-trip time (RTT) of his probe packets. The delays observed by Bob are primarily affected by Alice's traffic because intermediate routers have higher bandwidth and carry multiple traffic flows, making Alice's router the bottleneck. To evaluate the potential for this attack, we observed the traffic of a home DSL user in Illinois while simultaneously sending ping probes from a computer in New Jersey every 10ms. Figure 1(b) shows a clear correlation between the DSL traffic and the RTTs of the ping probes.

### Correlation and Privacy

The high correlation between Bob's waiting times and Alice's traffic pattern allows Bob to reliably fingerprint the websites Alice visits. This correlation is primarily due to the first-come-first-serve (FCFS) queuing policy of the shared DSL router. While FCFS is attractive in terms of delays and utilization, it is highly unattractive for privacy. In this paper, we address the problem of designing router scheduling policies that mitigate this traffic analysis attack.

Another extreme policy, time division multiple access (TDMA), assigns a fixed service time to each user, making Bob's waiting times independent of Alice's traffic pattern. However, TDMA is highly inefficient in terms of throughput and delay. The goal of this paper is to design scheduling policies that balance information leakage and efficiency.

### Main Contributions

- We analyze the router-based side channel by developing a precise queuing model for the router and its constituent flows.
- We propose a correlation metric to measure the extent of information leakage between a target user flow and an attacker's probe for any scheduling strategy.
- We describe a dynamic program to compute the optimal scheduling strategy that minimizes the correlation metric. Due to the large state space, we derive a sub-optimal policy using a myopic approximation and show that it performs well in high-traffic regimes.
- Through extensive experimental evaluation, we compare the privacy-delay trade-offs among various policies, including widely deployed ones and those suggested based on the myopic approximation.

## Optimal Scheduling Policy: Markov Decision Framework

Our system model consists of a router serving two data streams. Each time the router is free and there are packets waiting to be served, the router must decide which packet to serve next. Serving packets from one stream induces delays to the packets from the other stream, indirectly leaking information about the size of the flow in one stream to the other.

### Correlation Metric

From the router's perspective, either stream could belong to a legitimate user, so the correlation metric cannot assume a specific stream to be the attacker. The correlation metric for a router policy \(\psi\) is defined as the maximum correlation coefficient across the streams:

\[
\max\left(\rho\left(\tilde{x}_N^{(1)}, \tilde{T}_N^{(1)}\right), \rho\left(\tilde{x}_N^{(2)}, \tilde{T}_N^{(2)}\right)\right)
\]

where \(\tilde{x}_N^{(k)}\) is a vector of arrival volumes in stream \(k\) between consecutive arrivals of packets in the other stream, and \(\tilde{T}_N^{(k)}\) is the inter-departure times of the packets in the other stream. The correlation metric captures the influence of the traffic pattern in one stream on the delays experienced by packets in the other.

### Markov Decision Process (MDP)

The optimal scheduling policy that minimizes the correlation metric can be formulated using an MDP framework. MDP provides a mathematical framework for decision-making under probabilistic outcomes. For brevity, we do not list the state update equations here. Solving for an optimal policy requires storing a large amount of information due to the high dimensionality of the state space. Instead, we use the MDP framework to provide an approximate solution through a myopic optimization.

### Myopic Policy

We define a myopic policy that performs a greedy optimization at each step. Specifically, at time \(t\), the router serves one packet from the stream that results in the lower correlation metric.

## Experimental Results

### System Model

Our experimental setup involves a single router serving packets from two streams. For the first stream, we used synthetic traffic generated according to a Pareto distribution. The second stream consists of pings sent at regular 10ms intervals. We compare the performance of different scheduling policies using the correlation metric. The policies compared include FCFS, Round Robin (RR), FCFS-shaping, RR-shaping, Myopic policy, Accumulate and Serve, and TDMA. Results are presented in Figure 2.

### Inferences from Simulation Results

- FCFS and TDMA represent the two extremes in terms of correlation, with FCFS having the highest and TDMA the lowest.
- In the high-traffic regime, the myopic policy based on the dynamic program framework provides the least correlation, while the accumulate and serve policy has the least correlation for medium and low-traffic loads.
- At high traffic loads, both the myopic and accumulate and serve policies perform close to TDMA with significantly lower delays.

### Classification Experiment

We conducted a classification experiment to study the efficacy of the accumulate and serve policy in mitigating the remote traffic analysis attack. The attacker, Bob, aims to identify which website Alice is browsing. We simulated the functioning of the router and used real traffic traces captured with tcpdump. The classification results are presented in Table 1. When using FCFS, the attacker correctly identified Alice's website over 70% of the time. In contrast, TDMA resulted in a classification percentage of less than 10%. The AS policy with different accumulate times (10ms, 30ms, and 40ms) showed a classification percentage of less than 25%, demonstrating its effectiveness in preventing the attack relative to FCFS. Table 1 also shows the average delays experienced by Alice's packets for the tested policies, with AS policies having delays within 10% of FCFS, a tolerable trade-off for improved privacy.

## References

[1] X. Gong, N. Kiyavash, and N. Borisov, "Fingerprinting Websites Using Remote Traffic Analysis," in preparation for conference submission. Available online at: http://www.ifp.illinois.edu/~kadloor1/attackdescription.pdf

---

This revised version improves the clarity, coherence, and professionalism of the original text, ensuring it is suitable for an academic audience.