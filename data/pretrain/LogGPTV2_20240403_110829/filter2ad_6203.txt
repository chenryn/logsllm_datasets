title:Designing router scheduling policies: a privacy perspective
author:Sachin Kadloor and
Xun Gong and
Negar Kiyavash and
Parv Venkitasubramaniam
Designing Router Scheduling Policies: A Privacy
Perspective
Sachin Kadloor†∗, Xun Gong†∗, Negar Kiyavash‡∗, Parv Venkitasubramaniam§
† ECE Department and Coordinated Science Lab.
‡ IESE Department and Coordinated Science Lab.
∗University of Illinois at Urbana-Champaign, Urbana, IL, USA.
§ECE department, Lehigh University, Bethlehem, PA, USA.
{kadloor1,xungong1,kiyavash}@illinois.edu, PI:EMAIL
ABSTRACT
We examine a queuing side channel which results from a
shared resource between two users in the context of packet
networks. We consider the scenario where one of them is a
legitimate user and the other is an attacker who is trying
to learn about the former’s activities. We show that the
waiting time of an adversary sending a small but frequent
probe stream to the shared resource (e.g., a router) is highly
correlated with traﬃc pattern of the user. Through precise
modeling of the constituent ﬂows and the scheduling policy
of the shared resource, we describe a dynamic program to
compute the optimal privacy preserving policy that mini-
mizes the correlation between user’s traﬃc and attacker’s
waiting times. While the explosion of state-space for the
problem prohibits us from characterizing the optimal policy,
we derive a sub-optimal policy using a myopic approxima-
tion to the problem. Through simulation results, we show
that indeed the sub-optimal policy does very well in high
traﬃc regime. Furthermore, we compare the privacy/delay
trade-oﬀs among various scheduling policies, some already
widely deployed in scheduling and others suggested by us
based on the intuition from the myopic approximation.
Categories and Subject Descriptors
C.2.0 [Computer-Communications Networks]: General—
Security and protection(e.g., ﬁrewalls); C.2.3 [Computer-
Communications Networks]: Network Operations—Net-
work monitoring; I.5.4 [Pattern Recognition]: Applica-
tions; K.4.1 [Computers and Society]: Public Policy Is-
sues—Privacy
General Terms
Security, Theory, Algorithms
INTRODUCTION
1.
It has long been known that a shared resource in a network
leads to a covert channel that can be used for communica-
tion between diﬀerent processes. However, shared resources
not only lead to covert but also side channels– information
leaks about the activities of one process to another without
the former process’s cooperation. In this work, we propose
to explore the side channel resulting from the queueing of
packets from multiple users at a router.
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
We begin by a motivating example. A user, Alice, is us-
ing her computer at home to connect to the Internet. She
connects by using a home DSL router, which connects to a
router at her Internet service provider (ISP), connecting to
the Internet. The ISP sees all the traﬃc that Alice sends;
however, Alice is not worried because she knows that she is
protected by Anti-wiretapping legislation, and she encrypts
all her most sensitive information.
Along comes Bob, who is located at another ISP entirely,
perhaps even in another country. Bob sends a probe stream
to Alice’s router. The probes are frequent, but small in size.
Most importantly, the probes (and responses) make use of a
shared queue at Alice’s DSL router. As a result, the waiting
time of the probes is correlated with Alice’s traﬃc patterns.
Bob, by carrying out the attack as explained below can make
sure that he shares a resource which is in use by Alice: the
packet queue inside her DSL router. This resource allows
him to create a side channel that will leak information about
Alice’s traﬃc. This scenario is illustrated in Figure 1(a).
Bob sends a low-bandwidth, but high frequency probe to
the router and measures the round-trip time (RTT) of his
probe packets. The DSL has an incoming and an outgoing
port, for the traﬃcs addressed to, and originating from Al-
ice’s computer. Bob’s probe responses and Alice’s incoming
traﬃc share the same queue, hence the delay that Bob ob-
serves would vary based on the pattern of traﬃc addressed
to Alice. Although these pings travel through various inter-
mediate routers, their roundtrip time is primarily aﬀected
by Alice’s traﬃc. This is because of two reasons. One,
the intermediate routers have signiﬁcantly higher bandwidth
compared to the volume of the traﬃc ﬂowing through them
making Alice’s router the bottleneck. Also, the intermedi-
ate routers carry multiple traﬃc ﬂows. Therefore, the delays
incurred at these routers does not change with time.
To evaluate the potential for this type of attack, we observed
traﬃc of a home DSL user in Illinois, while simultaneously
sending a ping probe from a computer in New Jersey every
10ms. Figure 1(b) shows the results: the DSL traﬃc is
shown in green in the bottom half of the graph, and the
round-trip times of the ping probe are shown in red in the
upper half, showing a clear correlation between the two. The
probe traﬃc used less than 50 Kbps of bandwidth and is
unlikely to be noticed. Note that our attack can only reveal
the timing and the volume of the traﬃc, and not the actual
contents of the packets. However, recent research has shown
that signiﬁcant inferences can be drawn by observing just
the traﬃc pattern of a user.
702Due to the high correlation between probe waiting times
and Alice’s traﬃc pattern, Bob can reliably ﬁngerprint the
websites Alice visited. The primary reason for the high cor-
relation is the ﬁrst-come-ﬁrst-serve (FCFS) queuing policy
of the shared DSL router. While FCFS policy is an at-
tractive choice in terms of delays and utilization, the high
correlation between Bob’s waiting times and Alice’s traﬃc
pattern is highly unattractive in terms of preserving privacy.
In this paper, we consider the problem of designing router
scheduling policies that mitigate this traﬃc analysis attack.
Now consider another extreme policy, namely, time division
multiple access (TDMA) where a user is assigned a ﬁx ser-
vice time regardless of whether he has any packets that need
to be serviced. As expected, in this case, Bob’s waiting times
are independent of Alice’s traﬃc pattern. However, TDMA
is a highly ineﬃcient policy in terms of throughput and de-
lay. This trade-oﬀ between the information leakage and ef-
ﬁciency (in terms of delay or throughput) is inherent to the
router policy design, and the goal of this paper is to design
scheduling policies that mitigate the information leakage but
at the same time have good performance guarantees.
The main contribution of this work is that we analyze the
router-based side channel by developing a precise queueing
model for the router and the constituent ﬂows. We propose
a correlation metric based on this model to measure the ex-
tent of information leakage between a target user ﬂow and an
attacker’s probe, for any scheduling strategy. We describe a
dynamic program to compute the optimal scheduling strat-
egy that minimizes the correlation metric. However, the size
of state-space for the problem prohibits us from deriving the
optimal policy. Instead, we propose a sub-optimal policy us-
ing a myopic approximation to the problem and show that
indeed the sub-optimal policy does very well in high traf-
ﬁc regime. Through extensive experimental evaluation, we
compare the privacy/delay trade-oﬀs among various poli-
cies, some already widely deployed in scheduling and others
suggested by us based on the intuition from the myopic ap-
proximation.
2. OPTIMAL SCHEDULING POLICY:
MARKOV DECISION FRAMEWORK
Our system model consists of a router serving two streams
of data. Each time the router is free and there are pack-
ets waiting to be served, the router needs to make a deci-
sion on which packet to serve next. Serving packets from
one stream will induce delays to the packets from the other
stream, which indirectly leaks information about the size of
ﬂow in one stream to the other. As a measure of the leak-
age of information, we will consider the correlation between
the arrival pattern of the packets in one stream and waiting
times of the packets in another stream.
Correlation Metric: From the router’s perspective, either
of the streams could belong to legitimate user and hence,
any metric cannot assume a speciﬁc stream to be the at-
tacker. The correlation metric for a router policy ψ is there-
fore deﬁned as the maximum correlation coeﬃcient across
the streams:
(1)
where ˜x(k)
is a vector of arrival volumes in stream k be-
Ni
tween consecutive arrivals of packets in the other stream,
and ˜T
is the inter-departure times of the packets in the
(k)
Ni
maxρ(˜x(1)
N1
, ˜T
(1)
N1 ),ρ (˜x(2)
N2
, ˜T
(2)
N2 ) ,
queue
Alice's ISP
Alice's trafﬁc
Alice
DSL router
Illinois
New Jersey
Bob's ISP
Internet
Bob's probe
Bob
(a) Side channel setup
(b) Real traﬃc on a DSL line vs. observed probe RTTs.
Figure 1: Queueing Side Channel
other stream. The correlation metric captures the inﬂuence
of the traﬃc pattern in one stream to the delays experienced
by packets in the other. If the router employs a FCFS pol-
icy, then the only reason an incoming packet waits at the
head of its queue is because the router is busy serving all
the packets that have arrived in the other stream between
its arrival time that of the previous packet in its stream.
The value of this correlation is hence, close to one if FCFS
policy is used by the router.
The optimal scheduling policy that minimizes the corre-
lation metric can be formulated using a Markov Decision
Process (MDP) framework. MDP provides a mathematical
framework to model decision making in situations where the
outcomes probabilistically depend on the actions. For the
sake of brevity, we do not list the state update equations
here. We can show that in order to solve for an optimal pol-
icy, the router will have to store a lot of information because
of the high demensionality of the state space. The frame-
work is thus not very useful in solving for an optimal policy,
one can however use it to provide an approximate solution
by considering a myopic optimization.
Myopic policy. We deﬁne a myopic policy in the above
framework which performs a greedy optimization at every
step of the process. More speciﬁcally, at time t, the router
serves one packet from that stream for which the resulting
correlation metric is lower.
703c
i
r
t
e
M
n
o
i
t
l
a
e
r
r
o
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0.3
0.4
0.5
0.6
Traffic load
0.7
0.8
FCFS
RR
FCFS(cid:239)Shaping
RR(cid:239)Shaping
Myopic
TDMA
Accumulate and Serve 10ms,
followed by Random Selection
Table 1: Results of the Classiﬁcation Experiment
Policy Accuracy Correlation Average delay (s)
FCFS
AS 10
AS 30
AS 40
TDMA
71.11%
31.11%
25.78%
22.22%
4.00%
0.9874
0.1514
0.0960
0.0919
0.0118
0.4450
0.4576
0.4843
0.4988
2.6108
(a) Traﬃc load vs correlation in high traﬃc density regime
rr
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
FCFS
FCFS(cid:239)Shaping
Myopic
TDMA
Accumulate and Serve 10ms,
followed by Random Selection
RR
RR(cid:239)Shaping
c
i
r
t
e
M
n
o
i
t
l
a
e
r
r
o
C
0
0.01
0.02
0.03
0.04
0.05
0.06
Traffic load
0.07
0.08
0.09
0.1
(b) Traﬃc load vs correlation in the low traﬃc density
regime
Figure 2: Correlation-traﬃc load for the diﬀerent
policies
3. EXPERIMENTAL RESULTS
The system model for the experiment is that there is a sin-
gle router serving packets from two streams. For the inputs
to stream one, we used synthetic traﬃc which was gener-
ated according to Pareto distribution. The traﬃc in the
second stream is assumed to be a train of pings which are
sent at a regular interval of 10ms. We compare the perfor-
mance of diﬀerent scheduling policies using the correlation
metric. The schemes we compare are FCFS, Round Robin
(RR), FCFS-shaping1, RR-shaping, Myopic policy, Accu-
mulate and Serve2, and TDMA. Results are presented in
Figure 2.
3.1
From our experiments, some of the broad inferences: The
FCFS and the TDMA policies represent two extreme points
in terms of correlation, with FCFS being the largest and
TDMA the least. This follows our previously described in-
tuition that FCFS reveals maximum information about the
Inference from simulation results
1In the shaping schemes, artiﬁcial delays are added to the
input streams.
2Packets from both the streams are buﬀered for a certain
amount of time after which all these buﬀered packets are
served in a random order.
traﬃc pattern whereas with TDMA, the observables and the
arrival information are independent of each other.
In the high traﬃc regime, the myopic policy based on the
dynamic program framework provides the least correlation,
while the accumulate and serve has the least correlation for
medium and low traﬃc loads. In fact at high traﬃc loads,
the correlation performance of both these policies are close
to that of TDMA with signiﬁcantly lower delay3. Since the
myopic policy is directed at optimizing the correlation met-
ric, and the accumulate and serve is an approximation of
the optimal inﬁnite delay policy, the good correlation per-
formance of these policies are as expected.
Classiﬁcation Experiment. Here we describe the results
of the experiment wherein we studied the eﬃcacy of the ac-
cumulate and serve policy in mitigating the remote traﬃc
analysis attack. We consider the situation where the at-
tacker, Bob, is interested in identifying which website Alice
is browsing. We assume that Alice is browsing one of the top
twenty four news websites listed in http://www.alexa.com/
topsites/category/Top/News. We carried out the attack
described above by simulating the functioning of the router,
and by using real traﬃc traces captured using tcpdump. The
attacker is assumed to know which policy Alice’s router is
using. The classiﬁcation results are presented in Table 1. A
detailed account of the attack can be found in [1]. When
FCFS policy was used, the attacker could correctly identify
Alice’s website over 70% of the time. In the other extreme,
the TDMA policy resulted in a classiﬁcation percentage of
less than 10%. We also tested the AS policy with diﬀerent
accumulate times, 10ms, 30ms and 40 ms, the classiﬁcation
percentage for the latter being less than 25%, thus demon-
strating the ability of the AS policy in preventing this attack
to a great extent, relative to the commonly used FCFS pol-
icy. Table 1 also shows the the average delays experienced
by Alice’s packets for the policies tested. The delays for AS
policies are all within 10% of delays for FCFS, hopefully a
tolerable trade-oﬀ in return for improvement in Alice’s pri-
vacy. Furthermore, it can be seen that the policies with
lower correlation metric also have a lower classiﬁcation rate.
This serves as a validation to show that the correlation met-
ric does indeed is nicely tied to the operational performance
metrics such as classiﬁcation error.
4. REFERENCES
[1] X. Gong, N. Kiyavash and N. Borisov, Fingerprinting
Websites Using Remote Traﬃc Analysis, in preparation
for conference submission, Available online at
http://www.ifp.illinois.edu/~kadloor1/
attackdescription.pdf
3The results where we compare the delay performance of
these schemes is not presented here for the sake of brevity.
704