inet addr:127.0.0.1
Link
inet addr:192.168.8.43
RX
col1isions:0 txqueuelen:0 
RX
UP BROADCAST RUNNING MULTICAST MTU:1500 MetriC:1
inet6 addr: fe80::230:48ff:fe34:ff96/64 Scope:Link 
inet addr:192.168.8.42 Bcast:192.168.8.255 Mask:255.255.255.0
 Link encap:Ethernet HWaddr 00:30:48:34:FF:96
Link
Link encap:Ethernet
 packets:1290 errors:0 dropped:0 overruns:0 carrier:0
LOOPBACK RUNNING MTU:16436 MetriC:1
 BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
et addr:192.168.8.44 Bcast:192.168.8.255 Mask:255.255.255.0
bytes:798160555
 packets:2437149 errors:0 dropped:0 overruns:0 carrier:0
 packets:8407611 errors:0 dropped:0 overruns:0 frame:0
BROADCAST RUNNING MULTICAST MTU:1500 MetriC:1
 encap:Local Loopback
encap:Ethernet
192.168.8.43. dev eth0:1
(761.1 MiB)
第3章 
Mask:255.0.0.0
HWaddr
 HWaddr 00:30:48:34:FF:96
Bcast:192.168.8.255 Mask:255.255.255.0
Nginx 的基本配置与优化
TX bytes:151235 (147.6 KiB)
00:30:48:34:FF:96
TX bytes:229521778 (218.8 MiB)
---
## Page 25
http
代码3-6
server
#第一个虚拟主机
server
#第三个虚拟主机
server
第二个虚拟主机
#访问日志文件存放路径
server_name
#主机名称
listen
#监听的IP和端口
#访问日志文件存放路径
server_name
#主机名称
listen
#监听的IP和端口
#访问日志文件存放路径
server_name
#主机名称
listen
#监听的IP和端口
location
access_log
ocation
access_log
ocation
access_log
root/data0/htdocs/server2;
#HTML网页文件存放的目录
index index.html index.htm;
#默认首页文件，顺序从左到右，如果找不到index.html文件，则查找index.htm文件作为
root/data0/htdocs/server1;
#HTML网页文件存放的目录
index index.html index.htm;
#默认首页文件，顺序从左到右，如果找不到index.html文件，则查找index.htm文件作为
首页文件
首页文件
192.168.8.45;
192.168.8.45:80;
192.168.8.44;
192.168.8.44:80;
logs/serverl.access.log combined;
192.168.8.43;
192.168.8.43:80;
1ogs/server3.access.logcombined;
logs/server2.access.log combined;
3.2Nginx的虚拟主机配置
www.TopSage实的mginx：取代Apache的高性能Web服务器
家网
29
---
## Page 26
实战 Nginx：取代 Apache 的高性能 Web双龄.TopSage.com
http
代码3-7
录访问日志，如代码3-7所示。
每个虚拟主机的网页文件分别存放在了不同的目录中，每个虚拟主机使用了不同的日志文件来记
domain.com，以及除了aaa.domain.com之外的所有*.domain.com二级域名的访问都由它来处理。
bbb.otherdomain.com的访问都由它来处理，第三个虚拟主机表示对域名www.domain.com、
表示所有对域名aaa.domain.com 的访问都由它来处理，第二个虚拟主机表示所有对域名
果没有特殊要求使你必须用一个基于 IP 的虚拟主机，最好还是使用基于域名的虚拟主机。
机技术，使很多虚拟主机可以共享同一个IP 地址，有效解决了IP 地址不足的问题。所以，如
映射到正确的 IP 地址，然后配置 Nginx 服务器，令其识别不同的主机名就可以了。这种虚拟主
3.2.3
同的虚拟主机。
把它配置成“listen 80”，则表示监听该服务器上所有IP 的 80 端口，可通过 server_name 区分不
机，建立多段 server{)配置即可，非常方便。监听的 IP 和端口也可以不写 IP 地址，只写端口，
#第一个虚拟主机
server
接下来配置基于域名的虚拟主机。在以下的示例中，配置了三个虚拟主机，第一个虚拟主机
基于域名的虚拟主机是最常见的一种虚拟主机。只需配置你的 DNS 服务器，将每个主机名
从上面的配置文件中可以看出，一段 server..)就是一个虚拟主机，如果要配置多个虚拟主
access_log
#访问日志文件存放路径
#监听的端口
location/
servername
#主机名称
listen
配置基于域名的虚拟主机
#HTML网页文件存放的目录
#默认首页文件，顺序从左到右，如果找不到 index.html文件，则查找index.htm 文件作为
root /data0/htdocs/server3.com;
index index.html index.htm;
首页文件
80;
 logs/aaa.domain.com.access.log combined;
aaa.domain.com;
第 3章Nginx 的基本配置与优化
---
## Page 27
将详细介绍 Nginx 访问日志文件的配置。
3.3Nginx的日志文件配置与切割
在上一节的 Nginx 虚拟主机配置中，
server
#第三个虚拟主机
server
#第二个虚拟主机
#访问日志文件存放路径
#主机名称
listen
#监听的IP和端口
#访问日志文件存放路径
#主机名称
listen
#监听的IP和端口
ocation
access_log
ocation
server.name
root /data0/htdocs/domain.com;
#默认首页文件，顺序从左到右，如果找不到index.html文件，则查找 index.htm文件作为
#HTML网页文件存放的目录
index index.html index.htm;
#HTML 网页文件存放的目录
index index.html index.htm;
#默认首页文件，顺序从左到右，如果找不到index.html文件，则查找index.htm文件作为
root
#HTML 网页文件存放的目录
#默认首页文件，顺序从左到右，如果找不到index.html 文件，则查找 index.htm文件作为
首页文件
root
首页文件
index index.html index.htm;
首页文件
 /data0/htdocs/bbb.otherdomain.com;
 /data0/htdocs/aaa.domain.com;
80;
80;
 logs/bbb.domain.com.access.log combined;
www.domain.com domain.com *.domain.com;
 logs/bbb.otherdomain.com.access.log .combined;
 bbb.otherdomain.com;
3.3Nginx 的日志文件配置与切割
Www.TopSag战Mginx：取代 Apache的高性能 Web 服务器
已经使用 access_log 进行了日志记录，这一节中，笔者
---
## Page 28
面链接访问过来的；Shttp_user_agent用于记录客户端浏览器的相关信息。
Sbody_bytes_sent用于记录发送给客户端的文件主体内容大小；Shttp_referer用于记录是从哪个页
与HTTP协议；$status用于记录请求状态，例如成功时状态为200，页面找到时状态为404；
用于记录远程客户端用户名称：$time_local用于记录访问时间与时区；$request用于记录请求URL
log_format mylogformat'$http_x_forwarded_for - $remote_user [stime_local]
变量记录用户的X-Forwarded-ForIP地址：
地址，即客户的真实IP。例如，创建一个名为mylogformat的日志格式，再用$http_x_forwarded_for
X-Forwarded-For信息，用以记录原有的客户端IP地址和原来客户端请求的服务器地址。
是反向代理服务器的IP地址。但是，反向代理服务器在转发请求的HTTP头信息中，可以增加
间增加了中间层，因此Web服务器无法直接拿到客户端的IP，通过$remote_addr变量拿到的将
就不能获取到客户端的真实IP地址了。原因是经过反向代理后，由于在客户端和Web服务器之
配置文件中是不能重复的。
log_format combined'$remote_addr - Sremote_user [$time_local]
设置的combined日志格式设置，相当于Apache的combined日志格式，其具体参数如下：
其中name表示定义的格式名称，format表示定义的格式样式。log_format有一个默认的、无须
3.3.1
是 access_log，用来指定日志文件的存放路径、格式和缓存大小。两条指令在Nginx 配置文件中
log_format name format[format...]
在日志格式样式中，变量$remote_addr和$htp_x_forwarded_for用于记录IP地址；$remote_user
这时候，就要用log_format指令来设置日志格式，让日志记录X-Forwarded-For信息中的IP
假设将Nginx服务器作为Web服务器，位于负载均衡设备、Squid、Nginx反向代理之后，
采用日志格式combined记录的日志格式如代码3-8所示。
您也可以自定义一份日志的记录格式，不过要注意，log_format指令设置的name名称在Nginx
log_format指令用来设置日志的记录格式，它的语法如下：
用log_format指令设置日志格式
"Sreguest"
""shttp_referer""Shttp_user_agent"
""Srequest" Sstatus Sbody_bytes sent
第3章Nginx的基本配置与优化
$status Sbody_bytes_sent
---
## Page 29
access_log /data1/logs/$server_name.log combined;
access_log
log_format.
式名称：
或者
access_log /datal/logs/filename.log:
access_log off;
buffer=size 表示设置内存缓冲区的大小，例如可以设置 buffer=32k。
其中 path 表示日志文件的存放路径，format 表示使用 log_format 指令设置的日志格式的名称,
access_log path [format [buffer=size l off]]
access_log 指令的语法如下：
3.3.2
302 5 "http://blog.sl35.com/" "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.l;
124.42.4.194 - - [12/Mar/2009:02:18:24 +0800] "GET /attachment.php?fid=2 HTTP/1.1
6.0;Windows NT 5.1; SVl)
"Mozilla/4.0
124.42.4.194
代码3-8
用 log_format 指令设置了日志格式之后，需要用 access_log 指令指定日志文件存放路径。
（4）在Nginx 0.7.4之后的版本中，access_log 指令中的日志文件路径可以包含变量，例如：
（3）如果想使用自定义格式的日志记录，可以使用以下示例，其中的 mylogformat 是日志格
（2）如果想使用默认的combined 格式的日志记录，可以使用以下示例：
（1）如果不想记录日志，可以使用以下指令关闭日志记录：
用 access_log 指令指定日志文件存放路径
. mylogformat '$remote_addr -
 /data1/logs/access.log mylogformat buffer=32k; 
(compatible; MSIE 7.0; Windows NT 5.1; Mozilla/4.0 (compatible; MSIE
[12/Mar/2009:02:18:23 +0800]
I"$http_user_agent" $http_x_forwarded_for';
3.3Nginx 的日志文件配置与切割
CIBA;
.NET CLR 2.0.50727)#
"GET/
/ HTTP/1.1" 200 36179 "-
.NET CLR 2.0.50727)
3
---
## Page 30
实战 Nginx:取代 Apache 的高性能 Web跟务器.TopSage.com 
open_log_file_cache max=1000 inactive=20s min_uses=2 valid=1m;
认时间为 60 秒。
志文件的描述符记入缓存。默认次数为1。
此参数为可选参数，默认的时间为10秒钟。
的数据，将最近未使用的数据移出内存，腾出空间来加载另外的数据。
法的基本概念是：当内存缓冲区剩余的可用空间不够时，缓冲区尽可能地先保留使用者最常使用
open_log_file_cache off;
open_log_file_cache max=N [inactive=timel [min_uses=N] [valid=timel l off .
用的日志文件描述符缓存。
为了提高包含变量的日志文件存放路径的性能，须要使用open_log_file_cache 指令设置经常被使
/data1/logs/test.domain.com.log 将无法被 Nginx 创建；
设置的用户名和用户组都是www，而/datal/logs/目录的用户名和用户组为root，日志文件
问日志记录在/datal/logs/test.domain.com.iog 文件中。
（Least Recently Used）算法清除“较不常使用的文件描述符”。LRU（Least RecentlyUsed）算
如下：
34
valid：设置多长时间检查一次，看一看变量指定的日志文件路径与文件名是否仍然存在。默
min_uses：在参数 inactive 指定的时间范围内，如果日志文件超过被使用的次数，则将该日
open_log_file_cache 指令的设置示例如下：
max:设置缓存中的最大文件描述符数量。如果超过设置的最大文件描述符数量，则采用 LRU
open_log_file_cache 指令主要用来设置含有变量的日志路径的文件描述符缓存，它的语法
off：禁止使用缓存。
open_log_file_cache 指令的各项参数说明如下：
该指令默认是禁止的，等同于：
（1）Nginx 进程设置的用户和组必须有对该路径创建文件的权限。假设 Nginx 的 user 指令
如果日志文件路径中含有变量，将存在以下一些限制：
（3）对于每一条日志记录，日志文件都将先打开文件，再写入日志记录，然后马上关闭。
（2）缓冲将不会被使用；
第 3章Nginx 的基本配置与优化
---
## Page 31
crontab-e..
vi /usr/local/webserver/nginx/sbin/cut_nginx_log.sh
我们可以通过cat这个pid文件获得Nginx的主进程号，命令如下：
Nginx的主进程号，让Nginx重新生成一个新的日志文件/data1/logs/access.log。如果nginx.conf
mv /data1/1ogs/access.1og/data1/1ogs/20090318.1og
割、按天切割、按小时切割等。最常用的是按天切割。
3.3.3Nginx日志文件的切割
kill-USR1
"yesterday"
logs_path="/data1/logs/"
#Nginx日志文件的存放路径
#这个脚本须在每天的00：00运行
#!/bin/bash
代码3-9
份目录存放日志的shell脚本：
kill-USR1Nginx主进程号
文件的切割：
同时，为了方便对日志进行分析计算，须要对日志文件进行定时切割。定时切割的方式有按月切
如果想每天定时切割日志，还须要借助crontab。我们可以写一个按天切割的日志，按年、月
首先通过mv命令将日志文件重命名为/data1/logs/20090318.log，然后发送kill-USR1信号给
Nginx不支持像Apache一样使用cronolog来轮转日志，但是可以采用以下方式来实现日志
输入以下内容并保存：
另外，配置crontab每天凌晨00:00定时执行这个脚本：
生产环境中的服务器，由于访问日志文件增长速度非常快，日志太大会严重影响服务器效率。
输入以下内容并保存（见代码3-9）：
cat/usr/local/webserver/nginx/nginx.pid
3.3Nginx的日志文件配置与切割
www.TopSag实eoMinx：取代Apache的高性能Web服务器
TopSage.com
弘网
---
## Page 32
3.5Nginx 的自动列目录配置
要在某一虚拟主机的 location／‘.)目录控制中配置自动列目录，只须加上如下代码：
Nginx 同样可以实现，前提条件是当前目录下不存在用 index 指令设置的默认首页文件。如果须
gzip_vary on;
压缩输出的相关指令位于http!..)两个大括号之间：
Firefox、Opera、谷歌 Chrome 等绝大多数浏览器都支持解析 gzip 过的页面。
际上就是服务器端压缩，传到浏览器后浏览器解压并解析。浏览器那里不需要我们担心，因为正、
这样，用户浏览页面的时候速度会快得多。gzip 的压缩页面需要浏览器和服务器双方都支持，实
3.4Nginx 的压缩输出配置
gzip_types text/plain application/x-javascript text/css application/xml;
gzip_buffers 
gzip_min_length1k;
日的日志文件。
个新生成的日志文件中。而/data1/logs/2009/05/access_20090519.1log文件，就是2009 年5月19
程号，告诉 Nginx 重新生成一个/data1/logs/access.log 文件，2009年5 月 20 日的日志记录在这
移动并重命名为/data1/logs/2009/05/access_20090519.1log，再发送 kill -USR1信号给 Nginx 主进
cut_nginx_1log.sh脚本首先创建一-个目录/datal/logs/2009/05/，然后将/data1/logs/access.log 文件
当前的日志文件为/data1/logs/access.log，2009 年5月 20日00:00会执行 cut_nginx_log.sh 脚本，
 Us·bot xuthu ans/uTqs/xutbu/IaAtasqam/teoot/1sn/ yseq/uta/ :* * * 00 00