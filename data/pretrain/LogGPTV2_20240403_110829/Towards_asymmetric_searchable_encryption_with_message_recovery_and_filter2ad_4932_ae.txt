(gτ
the BDH problem. The claim now follows.
2 , gr2
2 , gx2·τ
2 , gx2
, gx2
2 , g2, gx1·τ
2
2
Theorem 3. The proposed scheme achieves IND-CCA se-
curity against an outside attacker in the random oracle model
given: (1) (KeyGen′, Encrypt′, Decrypt′) and (Enc, Dec) are
IND-CPA secure; (2) the DLIN and BDH assumptions.
Proof. Under Deﬁnition 2, let Game0 be the attack game
deﬁned in Figure 1. Let the attacker’s advantage be ǫ0.
Next, consider a game Game1, where the challenger per-
forms in the same way as in Game0, except for the follow-
ing. For any TrapGen1 query with the input w and P Ks,
the challenger returns tw,s = (v7, v8), generated as follows:
select v0, v1, v2, v3, v4, v5, k1 uniformly at random from their
corresponding domains, compute
v7 = Enc(v0||v1||v2||v3||v4||v5, k1)
and v8 = Encrypt′(k1, P Ks). In this game, let the attacker’s
advantage be ǫ1. Based on the IND-CPA deﬁnition for en-
cryption schemes, |ǫ1 − ǫ0| is negligible if both (KeyGen′,
Encrypt′, Decrypt′) and (Enc, Dec) are IND-CPA secure.
2, k′′
Next, consider a game Game2, where the challenger per-
forms in the same way as in Game1, except for the follow-
ing. For any TrapGen2 query with the input P Ks, the chal-
lenger returns t∗,s = (u1, u2) which is generated as follows:
select k′
2 ∈R M, γ ∈R Zp and α, β ∈R G1, compute
u1 = Enc(γ||α||β, k′
2 , P Ks). In this
game, let the attacker’s advantage be ǫ2. Based on the IND-
CPA deﬁnition for encryption schemes, |ǫ2 − ǫ1| is negligible
if both (KeyGen′, Encrypt′, Decrypt′) and (Enc, Dec) are IND-
CPA secure.
2) and u2 = Encrypt′(k′′
Next, consider a game Game3, where the challenger per-
forms in the same way as in Game2, except that it answers
the Decrypt oracle as follows. Given a ciphertext c, the chal-
lenger parses it as (c1, c2, c3, c4, c5) and performs as follows.
1. Compute w =
H1(ˆe(g
c2
x1
1 ,
c4
x2
c
3
.
))·
c4
x2
c
3
2. If c1||c2||c3||c4||H2(w)||ˆe(gx1
) has not been queried
1 , c4
x2
3
c
to H3 or w has not been queried to H2, abort by out-
putting an error symbol ⊥. In addition, if there are
diﬀerent inputs to either oracle and result in the same
output, abort by outputting an error symbol ⊥.
3. If c5 = H3(c1||c2||c3||c4||H2(w)||ˆe(gx1
1 , c4
x2
3
c
)) and
ˆe(c1, H2(w)) = ˆe(g1, c4
x2
3
by outputting an error symbol ⊥.
c
)) output w. Otherwise, abort
)
This game is identical to Game2 unless the following event
occurs: there is a ciphertext c, the Decrypt algorithm out-
puts w but the challenger returns ⊥. If H2 and H3 are mod-
eled as random oracles, the event occurs with a negligible
probability. In this game, let the attacker’s advantage be ǫ3.
Based on the Diﬀerence lemma [11], |ǫ3 − ǫ2| is negligible in
the random oracle model.
Next, consider a game Game4, where the challenger per-
forms in the same way as in Game3, except that it answers
the Decrypt oracle as follows. Given a ciphertext c, the chal-
lenger parses it as (c1, c2, c3, c4, c5) and performs as follows.
1. Check whether there is an input c1||c2||c3||c4||α1||α2
to H3, where α1 ∈ G and α2 ∈ GT and there is an
input w′ ∈ G to H2 such that
c5 = H3(c1||c2||c3||c4||α1||α2), H2(w′) = α1.
If there is no such inputs or there are more than one
inputs satisfying the equalities, aborts by outputting
an error symbol ⊥.
2. Compute β =
c2
H1(α2)·w′ .
3. Check whether the following equalities hold.
ˆe(gx1
1 , β) = α2, ˆe(
c4
β
, g2) = ˆe(gx2
2 , c3),
ˆe(c1, H2(w′)) = ˆe(g1, β).
If so, output w′, otherwise aborts by outputting an
error symbol ⊥.
This game is identical to Game3, but the receiver’s private
keys are not required to answer the oracle queries. In this
game, let the attacker’s advantage be ǫ4, so that ǫ3 = ǫ4.
Next, consider a game Game5, where the challenger per-
forms in the same way as in Game4, except that the chal-
lenge cwb = (c1, c2, c3, c4, c5) is generated as follows.
r1, r2 ∈R Zp, R ∈R G2, R′ ∈R {0, 1}λ, c1 = gr1
1 ,
2
2 , c4 = gx2·r2
·H2(wb)r1 , c5 = R′.
c2 = R·H2(wb)r1 ·wb, c3 = gr2
In this game, let the attacker’s advantage be ǫ5. Note the
fact that the challenger answers Decrypt oracle access with-
out the knowledge of the receiver’s private keys (i.e. Decrypt
oracle access gives the attacker no actual privilege), therefore
an outside attacker infact has less privilege than a curious
Type-I server. Based on the analysis from Game3 and the
following games in the proof of Theorem 2, we can conclude
that ǫ5 is negligible based on the the DLIN assumption and
the BDH assumption. The theorem now follows.
Theorem 4. The proposed scheme achieves CI security
against a hybrid server Sh in the random oracle model given:
(1) (KeyGen′, Encrypt′, Decrypt′) and (Enc, Dec) are IND-CPA
secure; (2) the DLIN and BDH assumptions.
Proof. Under Deﬁnition 4, suppose the attacker’s ad-
vantage is ǫ0 in the attack game deﬁned in Figure 3. With
respect to the proposed scheme, it is clear that, given a
master trapdoor t∗,s, an attacker can simulate the TrapGen1
oracle by itself. As a result, ǫ0 can also be regarded as the
attacker’s advantage in distinguishing X0 and X1, where
x1, x2, r1, r2, r′
2, z ∈R Zp, and w0, w1 ∈R G, and any
c1, c2, c3, c4, c′
2, c′
4. Other public parameters are de-
scribed in the game.
1, r′
1, c′
3, c′
·H2(w0)r1 ,
Let this distinguishing problem be denoted as I4.
Reduction step 4d. I4 can be reduced to distinguish U0 and
2, z ∈R Zp and h0, h1 ∈R G. The reduc-
2 , gx2r2
·
U1, where x2, r′
tion is based on the fact that we can construct gr1
hr1
0 based on h0.
1 , gr2
1, r′
2
·H2(w0)r1 ,
• U0 = (g1, g2, gx2
2 , gz
1 , gx2·z
1
• U1 = (g1, g2, gx2
2 , gz
1 , gx2·z
1
, h0, g
r′
1
1 , g
r′
2
2 , g
x2r′
2
2
· h
r′
1
0 )
, h0, g
r′
1
1 , g
r′
2
2 , g
x2r′
2
2
· h
r′
1
1 )
• X0 = (x1, g1, g2, gx1
1 , gx2
2 , gz
1 , gx2·z
1
1 , H2(w0)r1 ))·H2(w0)r1 ·w0, gr2
H1(ˆe(gx1
H3(c1||c2||c3||c4||H2(w0)||ˆe(gx1
1 ))·H2(w0)r′
H1(ˆe(gx1
4||H2(w0)||ˆe(gx1
H3(c′
1||c′
1 , H2(w0)r′
2||c′
3||c′
1 , H2(w0)r1 )), g
r′
2
1 ·w0, g
2 , g
1 , H2(w0)r′
x2r′
2
2
1 )))
, gr1
1 ,
2 , gx2r2
2
r′
1
1 ,
·H2(w0)r′
1 ,
• X1 = (x1, g1, g2, gx1
1 , gx2
2 , gz
1 , gx2·z
1
1 , H2(w0)r1 ))·H2(w0)r1 ·w0, gr2
H1(ˆe(gx1
H3(c1||c2||c3||c4||H2(w0)||ˆe(gx1
1 ))·H2(w1)r′
H1(ˆe(gx1
4||H2(w1)||ˆe(gx1
H3(c′
1||c′
1 , H2(w1)r′
2||c′
3||c′
1 , H2(w0)r1 )), g
r′
2
1 ·w1, g
2 , g
1 , H2(w1)r′
x2r′
2
2
1 )))
, gr1
1 ,
2 , gx2r2
2
r′
1
1 ,
·H2(w1)r′
1 ,
Let the above distinguishing problem be denoted as I1.
Reduction step 4a. I1 is equivalent to distinguish Y0 and
2, z ∈R Zp and w0, w1, h0, h1 ∈R
2, c′
4. Note that H2(w0) is set
Y1, where x1, x2, r1, r2, r′
G, and any c1, c2, c3, c4, c′
to be h0 and H2(w1) is set to be h1.
1, r′
1, c′
3, c′
1 , hr1
• Y0 = (x1, g1, g2, gx1
0 )) · hr1
H1(ˆe(gx1
H3(c1||c2||c3||c4||h0||ˆe(gx1
H1(ˆe(gx1
H3(c′
1||c′
1 , gx2·z
1 , gx2
2 , gz
2 , gx2r2
0 · w0, gr2
r′
1 , hr1
1
0 )), g
1 ,
x2r′
r′
2
2
2 , g
2
r′
1
0 )))
r′
1
0 · w0, g
1 , h
r′
1
0 )) · h
3||c′
4||h0||ˆe(gx1
1 , h
2||c′
1
2
, gr1
1 ,
· hr1
0 ,
· h
r′
1
0 ,
1 , hr1
• Y1 = (x1, g1, g2, gx1
0 )) · hr1
H1(ˆe(gx1
H3(c1||c2||c3||c4||h0||ˆe(gx1
H1(ˆe(gx1
1||c′
H3(c′
1 , gx2·z
1 , gx2
2 , gz
2 , gx2r2
0 · w0, gr2
r′
1 , hr1
1
0 )), g
1 ,
x2r′
r′
2
2
2 , g
2
r′
1
1 )))
r′
1
1 · w1, g
1 , h
r′
1
1 )) · h
3||c′
4||h1||ˆe(gx1
1 , h
2||c′
1
2
, gr1
1 ,