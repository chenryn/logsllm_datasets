PowerShell Runspace Post Exploitation Toolkit”。
然后，攻击者将DLL上传到预期的文件夹后，可以强制重启机器、或等待系统重启。当系统重启时，IKEEXT服务会启动，并会加载该恶意DLL，该DLL会将一个命令和控制隧道反馈给攻击者的系统，并且是系统权限。下图展示了将DLL上传到低权限目录的过程，并且该目录是“%PATH%”变量的一部分。然后，它返回了命令和控制隧道，说明IKEEXT服务已经重新启动了。因为这时已经拥有了高权限，攻击者可以继续，并开始使用强大的Mimikatz模块。首先，他可以通过使用Kerberos命令来获取明文凭据。
**安装和C2**
有很多用于攻击者完成持久化的技术和工具，但是在这个安例中，我们给出一个持久化的例子，该例子使用了[WMI](http://wordpress.redirectingat.com/?id=725X1342&site=countuponsecurity.wordpress.com&xs=1&isjs=1&url=https%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Faa394582\(v%3Dvs.85\).aspx&xguid=56f26e250f4cfe4cd95856f5de625a26&xuuid=31cd8d0e7db73570b8b630e76013879e)，并结合了PowerShell、和Metasploit的一个载荷。
WMI近年来在攻击者中很流行。Matt
Graeber在BlackHat15上给出了一个很好的[演示](https://www.google.ch/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjLwtr56ajSAhWGVxQKHfX2DLgQFggcMAA&url=https%3A%2F%2Fwww.blackhat.com%2Fdocs%2Fus-15%2Fmaterials%2Fus-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build)：使用WMI(Windows
Management Instrumentation)建立一个持久、异步、且无文件的后门。另外，William Ballenthin，Matt
Graeber和Claudiu Teodorescu写了一篇很好的文章，叫做“WMI的攻击与防御”。除此之外，你可以读一下NCCIC/ICS-CERT的“WMI探测与响应”这篇文章。
因此。攻击者为了获得持久性，它可以使用WMI，WMI将会被作为一个媒介物，会在特定的事件下去触发一个载荷，这个事件可以是发生在系统级的一个特殊的计划任务，或是一个事件，如登录或一个WMI支持的事件。该载荷会利用PowerShell去执行一个被称为反射DLL注入技术，从而反弹连接到攻击者的系统，并注入Metasploit
Meterpreter，想了解更多的关于反射DLL注入技术，请读一下Dan
Staples的这篇文章及其参考。和攻击者域名的通信利用了HTTPS。总体而言，攻击者将只使用Windows的内置功能并结合了Metasploit。使用的这些不同工具和技术导致了更强大的攻击，这种攻击很难被探测到。此外，这种技术是在内存中实施的，不会接触硬盘，因为它在内存中使用了一个PE加载者去加载DLL，并且没有使用传统的LoadLibraryA()方法。该持久机制存储在WMI存储库中，这无形之中也阻止了防御者的很多的检测行为。
为了生成载荷，攻击者可以使用msfvenom。下图展示了如何使用msfvenom生成带有PowerShell格式的反射DLL注入载荷：
下一步是将这个载荷武器化，用它生成一个托管对象格式(MOF)脚本
下一步，攻击者将会用到托管对象格式(MOF)编译器，目标机器上的Mofcomp.exe，这个实用程序将会解析包含MOF声明的文件，并将文件中定义的类和类的实例添加到WMI存储库。更多关于MOF的知识请看一下这篇好文章“Playing
with MOF files on Windows, for fun & profit”。然后，一系列的wmic.exe命令可以用来查看不同类的内容。
这些命令是在Meterpreter会话中执行的，Meterpreter会话是由DLL劫持技术建立的。于是，攻击者可以覆盖他的跟踪、删除恶意MOF，并继续前进。当WMI事件被触发时，载荷会被调用，然后一个返回攻击者系统的Meterpreter会话会被建立。此时，攻击者已经有了一个持久化机制，并在目标环境中以一个特权帐户运行着。
**目标上的活动**
传统的横向运动使用了各种命令和工具，如net.exe和wmic.exe。现在，您可以将PowerShell添加到各种组合中，更具体的说，你可以使用William
Schroeder开发的PowerView工具，它是PowerSploit工具的一部分。PowerView是一个用PowerShell编写的高级活动目录枚举工具，允许攻击者收集大量关于企业Windows环境的信息。这里列举了更多PowerView的使用方法。再一次，我们可以从Meterpreter会话中加载PowerView。在这个案例中，该会话已经有了系统权限，并利用WMI获得了持久性，但是PowerView可以运行在普通账户下，如下图所示：
PowerView中的可用函数在这里可以看到，它的速查表可以看这里。攻击者可以利用PowerShell命令来枚举活动目录的不同方面，和不同的系统。为了执行这些操作，攻击者可以利用PowerView中的不同技术和模块。对于它的用法，William
Schroeder写的“I have the power view”对这个问题进行了不错的总结。
黑客也可以利用Kerberoasting技术，该技术是由Tim medin开发的，我推荐你看一下他的演示“Attacking Kerberos –
Kicking the Guard God of
Hades”，这里有利用Kerberos的一些方法。这个技术已经加到了PowerView里面，利用该技术“在包含SPN的活动目录中”列出所有用户账户会很简单，它会请求Kerberos票据和提取加密素材。然后，在离线环境中对它进行破译，并获得明文密码。你可以在William写的两篇文章中了解一下关于该技术的更多情况(1，2)，下图展示的就是Kerberoasting技术：
在获得HASH以后，你可以使用“John the Ripper”去破译它的密码，需要使用Krb5tgs的HASH格式。
另一个攻击方法是在活动目录中找到不需要Kerberos预身份认证的账户，即启用了PreAuthNotRequire
属性。你可以读一下这篇文章(“Kerberos Party Tricks: Weaponizing Kerberos Protocol
Flaws”)了解一下该技术的具体信息。实际上，该技术列出了所有具有该属性的账户，并向这些账户请求了一个Kerberos票据。这个票据包含了加密素材，通过离线破译这个加密素材可以恢复出原始密码。再说一次，这个技术已经添加到了PowerView里面，关于它的更多信息，你可以读一下[这篇文章](http://www.harmj0y.net/blog/activedirectory/roasting-as-reps/)。
最后，如果这个技术没起作用，攻击者可以试试每一个系统，直到找到一个他能获得管理员权限的系统，然后继续渗透，直到拿到域管理员权限。在大网络环境中，这可能是一个艰巨的任务，在这里再说一次，William
Schroeder已经将这些步骤集成在了一系列PowerView模块中，就连它们的名称也采用了猎人的词语，如Invoke-UserHunter、Invoke-StealthUserHunter，以及其它能对搜索高价值目标有帮助的模块。你可以看一下他的演示“[I hunt
sysadmins](http://www.harmj0y.net/blog/penetesting/i-hunt-sysadmins/)”，能帮助你更好的理解这个模块的幕后工作。Justin Warner是PowerShell
Empire的创始人之一，他写了一篇伟大的文章，解释了这些模块是如何工作的，并进一步将他解释的这个技术命名为“[derivative local
admin](http://www.sixdub.net/?p=591)”。这个技术被Andy
Robbins改进的更加的自动化了，起初只是一个概念证明，叫做PowerPath，它利用了“寻找两点之间的最短路径”算法。Andy随后和Rohan
Vazarkar、Will Schroeder一块工作，他们将工作集中在了BloodHound工具上。该工具在DEF CON
24上已经开源了。基于此，这些才华横溢的、使用了不同工具和技术的入侵者很有可能会成功获得一个高权限账户。
于是，攻击者可以利用netsh.exe的端口转发功能，或Meterpreter的端口代理命令，在内部系统之间穿梭。通常，攻击者想利用一个内部系统作为跳板时会使用这种技术，这允许攻击系统访问那些无法直接访问的机器。下图中的命令展示了这个技术，在受害人机器上配置好端口转发命令后，攻击者可以使用wmic.exe去发起远程系统中的PowerShell，然后回连到攻击者的系统上，并建立一个Meterpreter会话：
从此时起，攻击工作就进入了一个循环，列举弱点-利用它们-入侵系统-横向运行-重复。这个循环不断重复，直到攻击者达成了自己的目标。关于这些技术，及其它的一些技术，在[Raphael
Mudge](https://twitter.com/armitagehacker?lang=en)写的[一篇文章](https://blog.cobaltstrike.com/2015/09/30/advanced-threat-tactics-course-and-notes/)里已经列举出来了，这个人是Cobalt Strike的作者。
**总结**
在这篇文章中，我们涵盖了不同攻击阶段使用的不同工具和技术，使用这些技术的不仅有安全专家，也有网络犯罪份子、APT团伙。在此之后，我会问大家：你如何检测、预防和应对每一个在这个攻击场景中描述的步骤呢？