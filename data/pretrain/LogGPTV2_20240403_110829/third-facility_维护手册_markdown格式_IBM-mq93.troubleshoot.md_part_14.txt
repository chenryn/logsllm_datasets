### Related Concepts
#### Monitoring Your IBM MQ Network

**Channel Failure with Return Code ECONNRESET for TCP/IP**

When a channel failure occurs, and on z/OS, you receive the following error message: `CSQX208E TRPTYPE=TCP RC=00000461` or `CSQX208E TRPTYPE=TCP RC=00000461 reason=76650446`.

**Cause**

The return code `ECONNRESET` (connection reset by peer) varies by platform:
- **AIX**: ECONNRESET 73 (hexadecimal 49)
- **Linux**: ECONNRESET 104 (hexadecimal 68)
- **Windows**: WSAECONNRESET 10054 (hexadecimal 2746)
- **z/OS**: 10054 or RC461

This return code typically indicates a problem in the TCP/IP network. Common reasons for a reset include:
- **Unorderly connection termination**: Such as a client reboot.
- **No server listening**: An application tries to connect to a port and IP address where no server is listening.
- **Socket closure with pending data**: An application closes a socket while data remains in the receive buffer.
- **Data for a closed connection**: Any data arriving for a closed connection can cause a reset.
- **Linger option set to zero**: An application closes a socket and sets the linger option to zero, notifying TCP/IP not to linger.
- **Invalid TCP segment**: A bad acknowledgment or sequence number can cause a reset.
- **Connection request timeout**: TCP stops trying to connect and resets the connection.
- **Firewall rules**: A firewall may reset connections if packets do not adhere to its rules.
- **Retransmit timer expiration**: TCP stops retransmitting a packet and resets the connection.
- **Hardware issues**: A faulty hardware device can cause resets.

Note: IBM MQ does not set the linger time to zero, so it does not cause a reset.

**Diagnosing the Problem**

Use TCP/IP packet traces to determine the cause of the reset. For z/OS, refer to the UNIX reason codes for the last two bytes of the reason code in the `CSQX208E` error message.

**Considerations for Retrying a Link**

If a link failure occurs during normal operation, the sender or server channel program will start another instance, provided:
1. Initial data negotiation and security exchanges are complete.
2. The retry count in the channel definition is greater than zero.

For Multiplatforms, a channel initiator must be running to attempt a retry. For IBM MQ for z/OS, the channel initiator must monitor the initiation queue specified in the transmission queue.

**Difficult to Recognize Error Scenarios**

Some errors may be hard to recognize. For example, the link and channel might appear functional, but an issue at the receiving end could stop the receiver. Another scenario is the receiver system running out of memory and unable to complete a transaction. These situations often manifest as a busy system that is not actually moving messages. Collaboration with the counterpart at the far end of the link is necessary to detect and correct the problem.

**Shared Channel Recovery on z/OS**

Queue sharing groups on IBM MQ for z/OS provide shared channel recovery. The table below outlines the types of shared channel failures and their handling:

| Type of Failure | What Happens |
|-----------------|---------------|
| **Channel Initiator** | Channels dependent on the communications subsystem enter channel retry and are restarted on an appropriate queue sharing group channel initiator by a load-balanced start command. |
| **Channel Initiator** | The channel initiator fails, but the associated queue manager remains active. The queue manager monitors the failure and initiates recovery processing. |
| **Queue Manager** | The queue manager fails, failing the associated channel initiator. Other queue managers in the queue sharing group monitor the event and initiate peer recovery. |
| **Shared Status** | Channel state information is stored in Db2. Loss of connectivity to Db2 becomes a failure when a channel state change occurs. Running channels can continue without access to these resources. On failed access to Db2, the channel enters retry. |

**Related Concepts**
- Preparing IBM MQ for z/OS for DQM with queue sharing groups
- Resolving problems where a channel stops running

### Two Possible Solutions to Channel Cessation

**Channel Switching**
- Define two message channels for the same transmission queue with different communication links. One is preferred, and the other is a replacement.
- If triggering is required, ensure process definitions exist for each sender channel end.

**Connection Switching**
- Switch communication connections from the transmission queues.

**Procedure for Switching Message Channels**
1. Set the transmission queue attribute `NOTRIGGER` if the channel is triggered.
2. Ensure the current channel is inactive.
3. Resolve any in-doubt messages on the current channel.
4. Change the process attribute in the transmission queue to name the process associated with the replacement channel.
5. Restart the channel, or if the channel was triggered, set the transmission queue attribute `TRIGGER`.

**Procedure for Switching Communication Connections**
1. Set the transmission queue attribute `NOTRIGGER` if the sender channel is triggered.
2. Ensure the channel is inactive.
3. Change the connection and profile fields to connect to the replacement communication link.
4. Ensure the corresponding channel at the remote end is defined.
5. Restart the channel, or if the sender channel was triggered, set the transmission queue attribute `TRIGGER`.

### Disaster Recovery

Disaster recovery planning involves regular system snapshots stored off-site. In the event of a disaster, you need to understand the impact on messages. 

**System Restart**
- If a system log is available, applications can be regenerated by replaying the system software from a syncpoint forward to the instant of failure. Persistent messages will be recovered and sent again, while nonpersistent messages might be lost.
- If no system log is available, or if system recovery fails, channels and transmission queues might be recovered to an earlier state, leading to inconsistent messages on local queues. Recovery then depends on the specific IBM MQ implementation and channel attributes.

### Troubleshooting IBM MQ Console and REST API Problems

To diagnose issues with the IBM MQ Console and REST API, check the following:

**Procedure**
1. **Status of the mqweb Server**
   - Check the status using `dspmqweb status`.
   - On z/OS, set the `WLP_USER_DIR` environment variable before issuing commands.
   - Start the server with `strmqweb` if it is stopped.
   
2. **Configuration Files**
   - Ensure the following files exist: `jvm.options`, `mqwebuser.xml`, `server.xml`.
   - Use `crtmqdir -a` to check the installation and `crtmqdir -s -f` to recreate missing files.

3. **Log Files**
   - Examine `console.log` and `messages.log` in the `MQ_DATA_PATH/web/installations/installationName/servers/mqweb/logs` directory.
   - On z/OS, check `STDERR` and `STDOUT` in the mqweb server started task output.

4. **Remote Connections**
   - Ensure remote connections are enabled. Use `setmqweb properties -k httpHost -v hostname` to enable them.

5. **Queue Managers in the IBM MQ Console**
   - Only queue managers in the same installation as the mqweb server are listed.
   - On z/OS, only queue managers started at the same version as the mqweb server since the last IPL are listed.

6. **Message Truncation**
   - Adjust the `mqConsoleMaxMsgCharsToDisplay` and `mqConsoleMaxMsgRequestSize` properties using `setmqweb properties`.

7. **Messaging REST API with Remote Queue Managers**
   - Verify the unique name for the queue manager, visibility to the messaging REST API, and the CCDT file location.

8. **Server Configuration**
   - Check STEPLIB libraries, APF authorization, and paths.
   - Use `ls -Eltr PathPrefix/web/bin/dspmq` to verify the sticky bit and APF-authorized attribute.

**What to Do Next**
- For more information on tracing, see “Tracing the REST API” and “Tracing the IBM MQ Console”.

### Troubleshooting IBM MQ Internet Pass-Thru (MQIPT) Problems

**Procedure**
1. **Check for Common Errors**
   - Incorrect HTTP and SSLClient properties.
   - Case-sensitive key ring passwords.

2. **FFST Reports**
   - Check the errors subdirectory for FFST reports. Fix the issues and restart MQIPT.

3. **Installation Verification**
   - If no FFST reports and no trace output, manually start MQIPT and check for configuration and error messages.

4. **Trace Output**
   - Configure MQIPT connections and check for host connections. Treat as a normal channel problem if a connection is not logged.

**Related Tasks**
- Tracing errors in IBM MQ Internet Pass-Thru
- Contacting IBM Support
- Collecting information for MQIPT problems

If you need help with a problem, contact IBM Support through the IBM Support Site. Subscribe to notifications about IBM MQ fixes, troubleshooting, and other news.