API。
:::
::: para
`加密`{.literal}目标的格式如下：
:::
``` screen
start length crypt cipher key IV-offset device offset
```
::: variablelist
[*`start`*]{.term}
:   ::: para
    虚拟设备中的起始块
    :::
[*`length`*]{.term}
:   ::: para
    这个片段的长度
    :::
[*`cipher`*]{.term}
:   ::: para
    Cipher 包含 *`cipher[-chainmode]-ivmode[:iv options]`*。
    :::
    ::: variablelist
    [*`cipher`*]{.term}
    :   ::: para
        可用密码位于
        `/proc/crypto`{.filename}（例如：`aes`{.literal}）。
        :::
    [*`chainmode`*]{.term}
    :   ::: para
        永远使用 `cbc`{.literal}。不要使用
        `ebc`{.literal}，它不使用初始向量（IV）。
        :::
    [*`ivmode[:iv options]`*]{.term}
    :   ::: para
        IV 是一个用来区分加密法的初始向量。IV 模式是
        `plain`{.literal}或者 `essiv:hash`{.literal}。`-plain`{.literal}
        的 *`ivmode`* 使用扇区号码（加 IV 误差）作为
        IV。`-essiv`{.literal} 的 *`ivmode`*
        是一个改进，可避免水印弱点。
        :::
    :::
[*`key`*]{.term}
:   ::: para
    加密密钥，以十六进制提供
    :::
[*`IV-offset`*]{.term}
:   ::: para
    初始向量（IV）偏移
    :::
[*`device`*]{.term}
:   ::: para
    块设备，被该文件系统中的设备名称或者主号码和副号码以
    *`major`*:*`minor`* 的格式参考
    :::
[*`offset`*]{.term}
:   ::: para
    该设备中映射的起始偏移
    :::
:::
::: para
以下是`加密`{.literal}目标示例。
:::
``` screen
0 2097152 crypt aes-plain 0123456789abcdef0123456789abcdef 0 /dev/hda 0
```
:::
:::
::: section
::: titlepage
# [⁠]{#device_mapper.html#dmsetup}A.2. dmsetup 命令 {.title}
:::
::: para
`dmsetup`{.command} 命令是一个用来与 Device Mapper
沟通的命令行封装器（wrapper）。可使用 `dmsetup`{.command} 命令的
`info`{.literal}、`ls`{.literal}、`status`{.literal} 和 `deps`{.literal}
选项查看 LVM 设备的常规信息，如以下小节所述。
:::
::: para
有关 `dmsetup`{.command} 命令的额外选项和功能，请参考
`dmsetup`{.command}(8) man page。
:::
::: section
::: titlepage
## [⁠]{#device_mapper.html#dmsetup-info}A.2.1. dmsetup info 命令 {.title}
:::
::: para
`dmsetup info device`{.command} 命令提供有关 Device Mapper
设备概述。如果没有指定设备名称，则输出所有目前配置的 Device Mapper
设备信息。如果指定了设备，那么这个命令只会生成该设备信息。
:::
::: para
`dmsetup info`{.command} 命令提供以下分类信息：
:::
::: variablelist
[`Name`{.literal}]{.term}
:   ::: para
    设备名称。LVM
    设备以用小横线分隔的卷组名称和逻辑卷名称表示。在源名称中小横线会转换为两个小横线。在标准
    LVM 操作过程中，不应使用这种格式的 LVM 设备名称直接指定 LVM
    设备，而是应该使用 *vg*/*lv* 指定。
    :::
[`State`{.literal}]{.term}
:   ::: para
    可能的设备状态是 `SUSPENDED`{.literal}、`ACTIVE`{.literal} 和
    `READ-ONLY`{.literal}。`dmsetup suspend`{.command}
    命令将设备状态设定为
    `SUSPENDED`{.literal}。当挂起某个设备时，会停止对该设备的所有 I/O
    操作。使用 `dmsetup resume`{.command} 命令可将设备状态恢复到
    `ACTIVE`{.literal}。
    :::
[`Read Ahead`{.literal}]{.term}
:   ::: para
    系统对正在进行读取操作的任意打开文件的预读数据块数目。默认情况下，内核会自动选择一个合适的值。可使用
    `dmsetup`{.command} 命令的 `--readahead`{.option} 选项更改这个值。
    :::
[`Tables present`{.literal}]{.term}
:   ::: para
    这个类型的可能状态为 `LIVE`{.literal} 和
    `INACTIVE`{.literal}。`INACTIVE`{.literal}
    状态表示已经载入了表格，且会在 `dmsetup resume`{.command}
    命令将某个设备状态恢复为 `ACTIVE`{.literal}
    时进行切换，届时表格状态将为 `LIVE`{.literal}。有关详情请参考
    `dmsetup`{.command} man page。
    :::
[`Open count`{.literal}]{.term}
:   ::: para
    打开参考计数表示打开该设备的次数。`mount`{.command}
    命令会打开一个设备。
    :::
[`Event number`{.literal}]{.term}
:   ::: para
    目前收到的事件数目。使用 `dmsetup wait n `{.command}
    命令允许用户等待第 n 个事件，收到该事件前阻断该调用。
    :::
[`Major, minor`{.literal}]{.term}
:   ::: para
    主设备号码和副设备号码
    :::
[`Number of targets`{.literal}]{.term}
:   ::: para
    组成某个设备的片段数目。例如：一个跨三个磁盘的线性设备会有三个目标。线性设备由某个磁盘起始和结尾，而不是中间组成的线性设备有两个目标。
    :::
[`UUID`{.literal}]{.term}
:   ::: para
    该设备的 UUID。
    :::
:::
::: para
以下是 `dmsetup info`{.command} 命令的部分输出示例。
:::
``` screen
# dmsetup info
Name:              testgfsvg-testgfslv1
State:             ACTIVE
Read Ahead:        256
Tables present:    LIVE
Open count:        0
Event number:      0
Major, minor:      253, 2
Number of targets: 2
UUID: LVM-K528WUGQgPadNXYcFrrf9LnPlUMswgkCkpgPIgYzSvigM7SfeWCypddNSWtNzc2N
...
Name:              VolGroup00-LogVol00
State:             ACTIVE
Read Ahead:        256
Tables present:    LIVE
Open count:        1
Event number:      0
Major, minor:      253, 0
Number of targets: 1
UUID: LVM-tOcS1kqFV9drb0X1Vr8sxeYP0tqcrpdegyqj5lZxe45JMGlmvtqLmbLpBcenh2L3
```
:::
::: section
::: titlepage
## [⁠]{#device_mapper.html#dmsetup-ls}A.2.2. dmsetup ls 命令 {.title}
:::
::: para
可以使用 `dmsetup ls`{.command}
命令列出映射的设备的设备名称列表。可以使用
`dmsetup ls --target target_type`{.command}
命令列出至少有一个指定类型目标的设备。有关 `dmsetup ls`{.command}
的其他选项，请参考 `dmsetup ls`{.command} man page。
:::
::: para
以下示例演示了用来列出目前配置的映射设备名称的命令。
:::
``` screen
# dmsetup ls
testgfsvg-testgfslv3    (253:4)
testgfsvg-testgfslv2    (253:3)
testgfsvg-testgfslv1    (253:2)
VolGroup00-LogVol01     (253:1)
VolGroup00-LogVol00     (253:0)
```
::: para
以下示例演示了用来列出目前配置的镜像映射设备名称的命令。
:::
``` screen
# dmsetup ls --target mirror
lock_stress-grant--02.1722      (253, 34)
lock_stress-grant--01.1720      (253, 18)
lock_stress-grant--03.1718      (253, 52)
lock_stress-grant--02.1716      (253, 40)
lock_stress-grant--03.1713      (253, 47)
lock_stress-grant--02.1709      (253, 23)
lock_stress-grant--01.1707      (253, 8)
lock_stress-grant--01.1724      (253, 14)
lock_stress-grant--03.1711      (253, 27)
```
::: para
在多路径或者其它 device mapper 装置中堆叠的 LVM
配置文件可能过于复杂。`dmsetup ls`{.command}
命令提供了一个`--tree`{.option}
选项，可以树形式显示设备间的相依性，如下所示。
:::
``` screen
# dmsetup ls --tree
vgtest-lvmir (253:13)
 ├─vgtest-lvmir_mimage_1 (253:12)
 │  └─mpathep1 (253:8)
 │     └─mpathe (253:5)
 │        ├─ (8:112)
 │        └─ (8:64)
 ├─vgtest-lvmir_mimage_0 (253:11)
 │  └─mpathcp1 (253:3)
 │     └─mpathc (253:2)
 │        ├─ (8:32)
 │        └─ (8:16)
 └─vgtest-lvmir_mlog (253:4)
    └─mpathfp1 (253:10)
       └─mpathf (253:6)
          ├─ (8:128)
          └─ (8:80)
```
:::
::: section
::: titlepage
## [⁠]{#device_mapper.html#dmsetup-status}A.2.3. dmsetup status 命令 {.title}
:::
::: para
`dmsetup status device `{.command}
命令提供指定设备中每个目标的状态信息。如果没有指定设备名称，输出结果是所有目前配置的设备映射器设备信息。可以使用
`dmsetup status --target target_type`{.command}
命令列出那些至少有一个指定类型目标的设备。
:::
::: para
以下示例演示了用来列出在所有目前配置映射设备中目标状态的命令。
:::
``` screen
# dmsetup status
testgfsvg-testgfslv3: 0 312352768 linear 
testgfsvg-testgfslv2: 0 312352768 linear 
testgfsvg-testgfslv1: 0 312352768 linear 
testgfsvg-testgfslv1: 312352768 50331648 linear 
VolGroup00-LogVol01: 0 4063232 linear 
VolGroup00-LogVol00: 0 151912448 linear
```
:::
::: section
::: titlepage
## [⁠]{#device_mapper.html#dmsetup-deps}A.2.4. dmsetup deps 命令 {.title}
:::
::: para
`dmsetup deps device `{.command}
命令为指定设备的映射列表参考的设备提供（major，minor）对列表。如果没有指定设备名称，则输出所有目前配置的设备映射器设备信息。
:::
::: para
以下示例演示了用来列出所有目前配置的映射设备相依性的命令。
:::
``` screen
# dmsetup deps
testgfsvg-testgfslv3: 1 dependencies    : (8, 16)
testgfsvg-testgfslv2: 1 dependencies    : (8, 16)
testgfsvg-testgfslv1: 1 dependencies    : (8, 16)
VolGroup00-LogVol01: 1 dependencies     : (8, 2)
VolGroup00-LogVol00: 1 dependencies     : (8, 2)
```
::: para
以下示例演示了用来只列出设备 `lock_stress-grant--02.1722`{.literal}
相依性的命令：
:::
``` screen
# dmsetup deps lock_stress-grant--02.1722
3 dependencies  : (253, 33) (253, 32) (253, 31)
```
:::
:::
::: section
::: titlepage