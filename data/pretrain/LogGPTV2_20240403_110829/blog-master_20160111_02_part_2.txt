);  
```  
创建表  
```  
$  cd benchmarksql/run  
$  ./runSQL.sh props.ora sqlTableCreates  
```  
导入数据  
```  
$  nohup ./runLoader.sh props.ora numWarehouses 1000 >./load.log 2>&1 &  
```  
单位为50万。1000将写入5亿记录。  
```  
......  
------------- LoadJDBC Statistics --------------------  
     Start Time = Sat Jan 09 01:41:18 CST 2016  
       End Time = Sat Jan 09 05:35:35 CST 2016  
       Run Time = 14057 Seconds  
    Rows Loaded = 499139685 Rows  
Rows Per Second = 35508 Rows/Sec  
------------------------------------------------------  
```  
修改创建索引的脚本ORACLE兼容性。  
删除以下无效SQL  
```  
-- select setval('hist_id_seq', (select max(hist_id) + 1 from benchmarksql.history), false);  
-- vacuum analyze;  
```  
增加  
```  
exec dbms_stats.gather_schema_stats( -   
  ownname          => 'BENCHMARKSQL', -   
  options          => 'GATHER AUTO', -   
  estimate_percent => dbms_stats.auto_sample_size, -   
  method_opt       => 'for all columns size repeat', -   
  degree           => 34 -   
   );  
```  
创建索引   
```  
$  ./runSQL.sh props.ora sqlIndexCreates  
```  
手工修改序列值  
```  
SQL> select max(hist_id) + 1 from benchmarksql.history;  
MAX(HIST_ID)+1  
--------------  
      30000001  
SQL> select benchmarksql.hist_id_seq.nextval from dual;  
   NEXTVAL  
----------  
         1  
SQL> alter sequence benchmarksql.hist_id_seq increment by 30000001;  
Sequence altered.  
SQL> select hist_id_seq.nextval from dual;  
   NEXTVAL  
----------  
  30000002  
SQL>  alter sequence benchmarksql.hist_id_seq increment by 1;  
Sequence altered.  
SQL> select benchmarksql.hist_id_seq.nextval from dual;  
   NEXTVAL  
----------  
  30000003  
```  
benchmark 测试  
修改runBenchmark.sh  
```  
$   vi runBenchmark.sh  
java -cp .:$CLASSPATH:../lib/postgresql-9.3-1101.jdbc41.jar:../lib/log4j-1.2.17.jar:../lib/apache-log4j-extras-1.1.jar:../dist/BenchmarkSQL-4.1.jar -Dprop=$1 jTPCC  
```  
修改props.ora，设置比例。  
```  
$ vi props.ora  
driver=oracle.jdbc.driver.OracleDriver  
conn=jdbc:oracle:thin:@localhost:1521:orcl12c  
user=benchmarksql  
password=benchmarksql  
warehouses=1000  
terminals=96  
//To run specified transactions per terminal- runMins must equal zero  
runTxnsPerTerminal=0  
//To run for specified minutes- runTxnsPerTerminal must equal zero  
runMins=10  
//Number of total transactions per minute  
limitTxnsPerMin=0  
//The following five values must add up to 100  
newOrderWeight=40  
paymentWeight=36  
orderStatusWeight=8  
deliveryWeight=8  
stockLevelWeight=8  
```  
修改log4j，减少日志打印量。priority改成info，只输出最终结果，不输出产生订单的日志。  
```  
$ vi log4j.xml  
```  
压测  
## 阶段1  
```  
TPM：  
$ nohup ./runBenchmark.sh props.ora > ./dev/null 2>./errrun.log &  
 INFO   [2016-01-10 10:35:04.390]       Thread-27       Term-00, Measured tpmC (NewOrders) = 92239.6  
 INFO   [2016-01-10 10:35:04.390]       Thread-27       Term-00, Measured tpmTOTAL = 230538.34  
 INFO   [2016-01-10 10:35:04.390]       Thread-27       Term-00, Session Start     = 2016-01-10 10:25:03  
 INFO   [2016-01-10 10:35:04.390]       Thread-27       Term-00, Session End       = 2016-01-10 10:35:04  
 INFO   [2016-01-10 10:35:04.390]       Thread-27       Term-00, Transaction Count = 2306977  
```  
主机信息，截取压测第9分钟的数据。  
```  
TOP  
top - 10:34:25 up 4 days,  1:27,  3 users,  load average: 19.52, 18.53, 13.60  
Tasks: 775 total,  13 running, 762 sleeping,   0 stopped,   0 zombie  
Cpu(s): 34.7%us, 12.1%sy,  0.0%ni, 50.5%id,  0.2%wa,  0.0%hi,  2.4%si,  0.0%st  
Mem:  264643396k total, 161935616k used, 102707780k free,    52096k buffers  
Swap: 18825200k total,        0k used, 18825200k free, 101708384k cached  
iostat -x  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          35.27    0.00   15.13    0.26    0.00   49.34  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
dfa               0.00     0.00  406.60 5993.40  4667.20 54110.60     9.18     2.49    0.39   0.04  22.78  
dfb               0.00     0.00  401.60 5990.20  4561.60 54016.00     9.16     2.06    0.32   0.03  19.82  
dfc               0.00     0.00  406.40 5961.40  4624.00 53787.40     9.17     2.52    0.39   0.03  21.78  
dm-0              0.00     0.00 1212.60 14448.40 13849.60 161914.00    11.22     5.66    0.36   0.02  31.28  
```  
测试Oracle时，遇到大量(约13万)超出最大打开游标数错误。  
```  
ERROR   [2016-01-10 10:35:00.349]       Thread-20       delivGetCustId() not found! O_ID=3235 O_D_ID=2 O_W_ID=184  
ERROR   [2016-01-10 10:35:00.349]       Thread-20       Term-20, TERMINAL=Term-20  TYPE=DELIVERY  COUNT=23819  
ERROR   [2016-01-10 10:35:00.351]       Thread-5        Term-05, TERMINAL=Term-05  TYPE=ORDER-STATUS  COUNT=23820  
ERROR   [2016-01-09 10:14:31.185]       Thread-3        Term-03, TERMINAL=Term-03  TYPE=ORDER-STATUS  COUNT=2946  
ERROR   [2016-01-09 10:14:31.190]       Thread-3        java.sql.SQLException: ORA-01000: maximum open cursors exceeded  
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:450)  
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:399)  
        at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1059)  
        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:522)  
        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:257)  
        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:587)  
        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:225)  
        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:53)  
        at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:774)  
        at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:925)  
        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1111)  
        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:4798)  
        at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:4845)  