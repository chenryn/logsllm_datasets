F5
F6
F7
F8
F9
F10
A1
A2
A3
A4
A5
A6
A7
A8
A9
A10
P1
P2
P3
P4
P5
P6
P7
P8
P9
P10
“network throughput”
“0ﬀ\0:”
“MINOR=5”
“false”
“AuthenticatorDescription
{type=com.g}”
“com.g”
“.android.quicksearchbox/
com.android.quicksearchbox”
“.android.quicksearchbox/
com.android.quicksearchbox”
“wlan0\n”
“rndis”
“.android.inputmethod
.latin/.”
“\0\0\03”
“wlan0”
“release-keys”
“:user/release-keys”
“/system/lib/libreference-ril.so”
“release-key”
“test-”
E
E
D
E
D
D
D
D
D
E
E
D
D
E
E
D
D
E
D
D
E
D
D
E
E
E
D
D
E
E
F1
F2
F3
F4
F5
F6
F7
F8
F9
F10
A1
A2
A3
A4
A5
A6
A7
A8
A9
A10
P1
P2
P3
P4
P5
P6
P7
P8
P9
P10
9
9
9
9
9
9
9
9
9
9
9
7
5
7
7
9
9
9
6
9
8
8
8
9
9
9
9
8
8
9
0
0
0
0
0
0
0
0
0
0
0
2
4
2
2
0
0
0
3
0
1
1
1
0
0
0
0
1
1
0
2
0
7
4
1
1
7
0
0
8
3
82
24
48
45
37
64
37
72
82
2
17
21
5
2
11
14
10
0
20
126
128
121
124
127
127
121
128
128
120
125
46
104
80
83
91
64
91
56
46
126
111
107
123
126
117
114
118
128
108
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
77.8
55.6
77.8
77.8
100.0
100.0
90.0
66.7
100.0
88.9
88.9
88.9
100.0
100.0
100.0
100.0
88.9
88.9
100.0
98.4
100.0
94.5
96.9
99.2
99.2
94.5
100.0
100.0
93.8
97.7
35.9
81.3
62.5
64.8
71.1
50.0
71.1
43.8
35.9
98.4
86.7
83.6
96.1
98.4
91.4
89.1
92.2
100.0
84.4
98.5
100.0
94.9
97.1
99.3
99.3
94.9
100.0
100.0
94.2
97.8
38.7
79.6
63.5
65.7
73.0
53.3
72.5
45.3
40.1
97.8
86.9
83.9
96.4
98.5
92.0
89.8
92.0
99.3
85.4
match any non-emulator instances, i.e., real devices. Simply
put, we compute the values of the three metrics as follows:
• Sensitivity = T P/(T P + F N );
• Specif icity = T N/(F P + T N ); and
• Accuracy = (T P + T N )/(T P + F N + F P + T N ).
Table 4 demonstrates the measured accuracies of the 30
detection heuristics. We next present our empirical analysis
on the average accuracies from three aspects.
5.2.1 File, API, and Property Heuristics
y
c
a
r
u
c
c
A
File heuristics
API heuristics
Property heuristics
62.9%
97.8%
89.5%
0%
20%
40%
60%
80%
100%
We ﬁrst inspected the average accuracies of the heuristics
according to the categories of their exploited observable ar-
tifacts. As shown in the above bar chart and Table 4, the
ﬁle heuristics enjoyed both high sensitivities and speciﬁci-
ties with an average accuracy of 97.8%. The API heuristics,
despite of their acceptable sensitivities, suﬀered from sig-
niﬁcantly low speciﬁcities. For example, A2, A9, and A10
performed no better than 50/50 guesses as their accuracies
were less than 50%. The property heuristics performed fairly
good with an average accuracy of 89.5%.
One possible explanation for the API heuristics’ low ac-
curacies is that the Android APIs are designed to provide
some sort of hardware/software abstraction. An evidence
is the Android Compatibility Program4, which precisely de-
ﬁnes the behaviors of Android APIs to ensure that Android
applications run in “a consistent and standard environment.”
4https://source.android.com/compatibility
Table 3: Evaluated Emulators and Real Devices
Emulators
(9)
DroidBox [5] 2.3 and 4.1,
Andrubis [6], CopperDroid [23],
SandDroid [3], TraceDroid [4],
Qihu 360, NVISO ApkScan, ForeSafe
Real Devices
(128)
Samsung, HTC, LGE, Huawei,
Motorola, Sony Ericsson, Lenovo,
ZTE, Hisense, Asus, Acer,
OPPO, BBK, Meizu, Gionee,
DOOV, YuLong, Haier, AMOI
We ran this application in 9 emulator-based malware anal-
ysis tools and 128 distinct real devices. As shown in Table 3,
the malware analysis tools covered two versions of an oﬄine
tool called DroidBox and 7 online services. Among the on-
line services, 4 are derived from previous research work and
3 are security products. The 128 real devices were from
AppThwack, TestObject, and Baidu MTC, all of which are
online services that automatically test applications in real
phones and tablets. Note that we did not run our artifact
retriever on them due to their limited device minutes and
bandwidth quota.
5.2 Results and Empirical Analysis
We deem emulators as positive and real devices as neg-
ative. Given the measured true positives (TP), false neg-
atives (FN), false positives (FP), and true negatives (TN),
we attempt to evaluate the detection heuristics with three
metrics, namely sensitivity, speciﬁcity, and accuracy. For ex-
ample, a Type E detection heuristic is sensitive if it matches
all the emulator instances. And, it is speciﬁc if it does not
To build such an environment, the APIs that reveal the un-
derlying details are not necessary, and they are subject to be