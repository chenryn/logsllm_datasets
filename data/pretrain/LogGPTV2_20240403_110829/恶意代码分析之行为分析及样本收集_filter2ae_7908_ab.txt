解压下载回来的fakenet，然后以管理员身份启动fakenet：
此时，fakenet成功启动，此电脑上的所有网络请求都将发送到fakenet中：
接着重新使用火绒剑监控样本行为：
可以看到，此时火绒剑已经成功捕获到网络请求行为，并且在fakenet中也成功记录请求内容，并且模拟服务器返回了对应的数据。
## 0x05 Procmon
procmon是微软官方提供的行为监控工具，打开之后默认会监测所有的进程：
可以选择如下图标或者Ctrl + L 进行过滤
根据个人选择，第一个框可以选择ProcessName对指定的进程进行过滤
第二个下拉框有如下的过滤条件：
然后在输入框中填入需要过滤的ProcessName，点击Add，然后选择OK
此时窗口中将会只剩下我们选择的进程的相关行为
由于是微软自己开发的行为监控工具，Procmon可以说是巨细无遗，检测能力相比其他来说也更全面，这里尴尬的是Procmon检测到了fakenet的流量欺骗，所以网络行为这里显示如下，没有显示真实的请求地址
Procmon在使用的时候，会多出很多系统相关的行为，这里需要分析的时候自行鉴别~
## 0x06 Sysmon
Sysmon是一款轻量级的监视工具。属于Windows
Sysinternals出品的一款Sysinternals系列中的工具,用来监视和记录系统活动,并记录到windows事件日志。
Sysmon相比前面几款工具，安装要稍微麻烦一些，但同时也具备了一些优势。
官网下载地址：
下载好之后，需要根据github上的配置文件进行配置。  
git地址：
安装过程如下  
1 使用管理员启动cmd  
2 进入到下载的sysmon目录下  
3 将git下载下来的配置文件和sysmon放在同一个目录下  
4 执行命令Sysmon64.exe -accepteula -i z-AlphaVersion.xml
将sysmon启动起来之后，win+r 运行eventvwr打开日志管理器
然后在：  
应用程序和服务日志->Microsoft->Windows目录下会有一个SysMon文件夹  
然后就能看到启动sysmon之后的日志。  
新版本的sysmon有了dns查询功能，非常实用
可以看到每个事件之后都有一个事件ID
Event ID 1: Process creation  
Event ID 2: A process changed a file creation time  
Event ID 3: Network connection  
Event ID 4: Sysmon service state changed  
Event ID 5: Process terminated  
Event ID 6: Driver loaded  
Event ID 7: Image loaded  
Event ID 8: CreateRemoteThread  
Event ID 9: RawAccessRead  
Event ID 10: ProcessAccess  
Event ID 11: FileCreate  
Event ID 12: RegistryEvent (Object create and delete)  
Event ID 13: RegistryEvent (Value Set)  
Event ID 14: RegistryEvent (Key and Value Rename)  
Event ID 15: FileCreateStreamHash  
Event ID 17: PipeEvent (Pipe Created)  
Event ID 18: PipeEvent (Pipe Connected)  
Event ID 19: WmiEvent (WmiEventFilter activity detected)  
Event ID 20: WmiEvent (WmiEventConsumer activity detected)  
Event ID 21: WmiEvent (WmiEventConsumerToFilter activity detected)  
Event ID 22: DNSEvent (DNS query)  
Event ID 255: Error
对应解析如下：
Event ID 1: 创建进程  
Event ID 2: 进程更改了文件创建时间  
Event ID 3: 网络连接  
Event ID 4: Sysmon 服务状态已更改  
Event ID 5: 进程终止  
Event ID 6: 驱动程序加载  
Event ID 7: 镜像加载  
Event ID 8: 创建远线程  
Event ID 9: 驱动器读取  
Event ID 10: 进程访问  
Event ID 11: 文件创建  
Event ID 12: 注册表事件(Object create and delete)  
Event ID 13: RegistryEvent (Value Set)  
Event ID 14: RegistryEvent (Key and Value Rename)  
Event ID 15: 文件流创建  
Event ID 17: 管道事件(Pipe Created)  
Event ID 18: PipeEvent (Pipe Connected)  
Event ID 19: WmiEvent (WmiEventFilter activity detected)  
Event ID 20: WmiEvent (WmiEventConsumer activity detected)  
Event ID 21: WmiEvent (WmiEventConsumerToFilter activity detected)  
Event ID 22: dns解析(DNS query)  
Event ID 255: Error
使用一个简单的木马来测试Sysmon的功能.  
启动sysmon之后，启动木马文件Cannon.exe
从图中可以很清楚的看到Cannon.exe调起了cmd.exe执行b.bat文件
包括bat文件的创建：
注册表操作(加入开机自启动以实现本地持久化)：
以及dns查询：
关于Sysmon，还有更多高级和强悍的用法，可参照
## 0x07 总结
通过行为分析，可以让我们从宏观的角度了解样本执行后，会做了哪些行为。  
比如我们只在行为分析中看到样本进行了网络请求，那么我们可以猜测，样本是否是一个简单的Downloader，或是由于未成功建立连接导致样本提前结束运行。  
此外，我们还可以通过各个平台对样本的网络请求地址进行查询，通常来说，只要该域名曾经被攻击者使用过，那么大概率是可以关联到对应的家族的。毕竟域名的申请，还是有一定的成本在里面，大多数情况下，攻击者也不会那么浪费的一个域名只使用一次就舍弃。
比如我们在行为分析中看到创建进程操作，那么我们可以根据样本创建的进程去推测样本大概做了什么操作，是带参数重新启动自身 还是去启动了一个异常的进程。
比如我们在行为分析中看到文件创建操作，那么我们可以根据文件创建的路径去找到对应的文件，看看样本释放的文件到底什么内容，是一个PE 还是 一个vbs脚本。
根据行为检测的内容，我们在调试的时候，也可以针对性的设置断点，大大加快我们的分析速度。