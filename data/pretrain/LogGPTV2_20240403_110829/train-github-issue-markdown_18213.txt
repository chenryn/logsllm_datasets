### Preflight Checklist
  * I have read the Contributing Guidelines for this project.
  * I agree to follow the Code of Conduct that this project adheres to.
  * I have searched the issue tracker for a feature request that matches the one I want to file, without success.
### Problem Description
The current ipcRenderer API appears to be similar to the NodeJS EventEmitter
API. However, the ipcRenderer docs list neither an `addListener()` method nor
a `off()` method. The NodeJS EventEmitter API supports both `addListener()`
and `removeListener()`, as well as respective `on()` and `off()` methods which
act as aliases.
Furthermore, the methods `addListener()` and `off()` appear to be callable on
ipcRenderer despite being undocumented, and no not throw any errors, leading
to additional confusion.
### Proposed Solution
If the `addListener()` and/or `off()` methods are already implemented on
ipcRenderer, The ipcRenderer documentation should be updated to reflect this.
If they are not implemented, they should either be implemented, or
alternatively, some warning should be given to developer that they are either
not implemented or are deprecated (e.g. via a message in the console).
Finally, although it could be argued that the presence of aliased functions in
the NodeJS EventEmitter class causes confusion for developers, I would argue
that having one function for adding listeners in one style (`on`) and one
function for removing listeners in another style (`removeListener`) in
Electron without clear documentation makes for a far less desirable developer
experience.
### Alternatives Considered
If there is really no desire to implement additional/aliased functions
(assuming they do not already exist but are undocumented) in the ipcRenderer
API, the API should at least be made consistent by implementing either `on`
and `off` OR `addListener` and `removeListener` and not both, and deprecating
the function to be removed from the different style with accompanying notices
made available to developers.
### Additional Information
I came across this issue/request while trying to debug a weird issue with
React and Electron ipcRenderer events. The confusion between styles for
adding/removing event listeners has exacerbated time spent debugging this
other problem. For more info, see:
https://stackoverflow.com/questions/60158863/spooky-action-at-a-distance-
electron-react-useeffect-unable-to-unsubscribe