 8
 9
 10
)
F
D
C
(
s
e
h
c
r
a
e
S
l
u
f
s
s
e
c
c
u
S
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
Baseline
RBT(k=30%,n=50)
RBT(k=50%,n=N)
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
Base-2 Logarithm of Guesses
Figure 2: Performance of RBTs with k = 50% and n = N.
Forgeries are taken from trained forgers, and the Concate-
native Synthesis algorithm.
Figure 3: The number of guesses required by the search
algorithm to ﬁnd RBT-derived keys. We compare the RBTs
to a Baseline approach that is designed to resist searches.
RBT (a)
RBT (b)
Baseline
EER
17.7%
27%
Errors EER Errors
1
1
19%
30%
1
0
EER
20.6%
27.4%
Errors
4
3
Forgers
CS
Table 2: Comparison between RBTs and a baseline approach.
RBT (a) operated with parameters (k = 30%, n = 50) and
RBT (b) operated with parameters (k = 50%, n = N).
our approach to this Baseline because we believe it to be a state-of-
the-art handwriting-based BKG. However, it is not possible to di-
rectly compare the overall security afforded by both constructions
because RBTs also use human supplied passwords. Nonetheless,
since our security analysis assumes that an attacker has access to π,
we are able to compare the techniques that both approaches use to
to extract entropy from biometric inputs.
As Table 2 shows, for each BKG, the strongest adversary is the
Concatenative Synthesis algorithm. For both RBTs, the EER under
this type of attacker is approximately 28.5% at no errors corrected
by the BKG. Although trained human forgers have access to the
entire biometric when creating their forgeries, they do not perform
as well as CS, achieving an EER of approximately 18% at 1 error-
corrected for both choices of parameters. The ROC curve in Fig-
ures 2 provides a more detailed point of view of the performance
of RBTs against each of the forgers.
Discussion. These results lead to several observations. Under the
assumption that the attacker has access to π, RBTs are comparable
to the standard approach against trained human forgers and CS.
However, we observe that RBTs increase the difﬁculty for each
type of attacker, because in addition to collecting writing samples,
an attacker must also garner the correct password.
Another important takeaway is where the EERs occur. This in-
dicates how much extra work the BKG must perform to generate a
correct key for legitimate users. An EER that occurs at x errors cor-
rected requires the BKG to perform a search to identify the features
that the user has incorrectly recreated. Assuming a template length
of n, and that each quantized feature takes on at most y values, this
. For reasonable values of
could be a space of up to
y and n, and any value of x > 2, this becomes computationally
prohibitive, rendering the construction infeasible in practice.
Px
i=0 yi
n
i
`
´
The EER for RBTs always occurs at 0 or 1 errors, whereas, as is
the case with many prior constructions, the EERs for the Baseline
occur at 3-4 errors. Thus, RBTs offer more resistance to forgery
against each of type of attacker, and do so in a more practical
manner. We hypothesize that this is because RBTs allow us to
employ stronger features. For a detailed description of the fea-
tures, see the full version of this paper [2]. Since RBTs employ
stronger features, they allow for more error tolerance for each fea-
ture, while maintaing security. This causes the FRR of RBTs to
drop quickly. Observe that at one error corrected, the RBTs with
(k = 30%, n = 50) and (k = 50%, n = N ) had FRRs of 19.4%
and 16%, respectively. By contrast, at one error-corrected, our im-
plementation of the Baseline had a FRR of 57%. If we tune the tol-
erances so that the Baseline achieved similar FRRs, the FAR would
likely also increase.
8.2 Resistance to Searches
Having explored the ability of RBTs to withstand forgeries, we
now focus on their ability to resist search algorithms. Instead of
estimating Shannon entropy, we empirically and estimate the num-
ber of guesses that an adversary would require to ﬁnd a key. This
approach is more feasible in light of real-world data constraints. In
particular, we estimate REQ-BUN against algorithms by applying
the search algorithm described in [3] to RBT-generated templates
and keys. We use only those users who successfully enrolled dur-
ing our forgery experiments, and again tested the system with the
parameters (k = 30%, n = 50) and (k = 50%, n = N ). As be-
fore, we assume that the attacker has access to π, and so the results
we present represent a worst-case point of view.
The results of the tests are shown in Figure 3. Again, we also
plot the results from another Baseline that is based on Vielhauer
and Steinmetz [22], but utilizes a different set of features that are
selected to resist searching attacks. Overall, even with access to the
target user’s password π, the RBT with parameters (k = 50%, n =
N ) is stronger than the baseline approach for 40% of the popula-
tion; for over 30% of the population, this improvement is dramatic.
To be fair, we note that, unfortunately, both instantiations of the
RBT suffer the same difﬁculty as the Baseline for a non-trivial
percent of the population; for ≈ 15% of the users, the algorithm
correctly predicts the target user’s key on the ﬁrst attempt—which
underscores the power of the original search-based attack [3]. The
Baseline then outperforms both variants of the RBTs up until the
60th percentile across the population. After this point, however,
both variants of the RBTs improve, while the baseline construction
remains relatively constant. At 244 guesses the search algorithm is
able to exhaust the complete key space of the Baseline. However,
this success rate does not happen for either of the RBT-based con-
structions until 280 guesses. Indeed, the algorithm required ≈ 280
guesses for about 14.6% of the population.
9. CONCLUSION
We propose a new technique to extract more entropy from bio-
metrics for key generation purposes. A key idea in this work is
to measure biometrics differently for each user. We argue that do-
ing so offers several advantages over classic techniques: Since we
assign only strong features to each user, we are able to reduce er-
ror rates, reduce susceptibility to forgery, and increase the maxi-
mum potential theoretical entropy that can be extracted from the
biometric measurement. More importantly, in addition to guessing
the biometric sample that was used for key generation, adversaries
must now also guess how this sample is measured. We analyze our
construction with recently proposed evaluation techniques and also
provide informal security arguments as to why our construction is
secure. We show that RBTs allow many users to generate keys that
are stronger than passwords alone.
Acknowledgments
We would like to thank Dan Lopresti for helpful discussions through-
out the course of this work. We would also like to thank the anony-
mous reviewers for their comments. This work was funded in part
by NSF Grant CNS-0430338 and the Phillips and Camille Bradford
Fellowship.
10. REFERENCES
[1] A. Alvare. How Crackers Crack Passwords or what
Passwords to Avoid. In Proceedings of the Second USENIX
Security Workshop, pages 103–112, August 1990.
[2] L. Ballard. Robust Techniques for Evaluating Biometric
Cryptographic Key Generators. PhD thesis, The Johns
Hopkins University, 2008. Available at http://www.cs.
jhu.edu/~lucas/papers/thesis.html.
[3] L. Ballard, S. Kamara, and M. K. Reiter. The Practical
Subtleties of Biometric Key Generation. In Proceedings of
the 17th Annual USENIX Security Symposium, pages 61–74,
San Jose, CA, August 2008.
[4] L. Ballard, F. Monrose, and D. Lopresti. Biometric
Authentication Revisited: Understanding the Impact of
Wolves in Sheep’s Clothing. In Proceedings of the 15th
Annual USENIX Security Symposium, pages 29–41,
Vancouver, BC, Canada, August 2006.
[5] S. M. Bellovin and M. Merritt. Encrypted Key Exchange:
Password-Based Protocols Secure Against Dictionary
Attacks. In Proceedings of the 1992 IEEE Symposium on
Security and Privacy, pages 72–84, Washington, DC, USA,
1992. IEEE Computer Society.
[6] X. Boyen. Reusable Cryptographic Fuzzy Extractors. In
ACM Conference on Computer and Communications
Security, pages 82–91. ACM, 2004.
[7] Y.-J. Chang, W. Zhang, and T. Chen. Biometrics-Based
Cryptographic Key Generation. In Proceedings of IEEE
International Conference on Multimedia and Expo (ICME),
volume 3, pages 2203–2206, 2004.
[8] Y. Dodis, L. Reyzin, and A. Smith. Fuzzy Extractors: How to
Generate Strong Keys from Biometrics and Other Noisy
Data. In Proceedings of Advances in Cryptology -
EUROCRYPT 2004, volume 3027 of Lecture Notes in
Computer Science, pages 523–540. Springer-Verlag, 2004.
[9] Y. Dodis and A. Smith. Correcting Errors Without Leaking
Partial Information. In Proceedings of the 37th ACM
Symposium on Theory of Computing, pages 654–663. ACM,
2005.
[10] D. Feldmeier and P. Karn. UNIX Password Security – Ten
Years Later. In Proceedings of Advances in Cryptology –
CRYPTO, pages 44–63, 1990.
[11] F. Hao, R. Anderson, and J. Daugman. Combining Crypto
with Biometrics Effectively. IEEE Transactions on
Computers, 55(9):1081–1088, September 2006.
[12] A. Juels and M. Sudan. A Fuzzy Vault Scheme. Design,
Codes and Cryptography, 38(2):237–257, 2006.
[13] A. Juels and M. Wattenberg. A Fuzzy Commitment Scheme.
In Proceedings of the Sixth ACM Conference on Computer
and Communication Security, pages 28–36, November 1999.
[14] T. M. A. Lomas, L. Gong, J. H. Saltzer, and R. M. Needham.
Reducing risks from poorly chosen keys. In Proceedings of
the 12th ACM Symposium on Operating System Principles,
pages 14–18, Dec. 1989.
[15] F. Monrose, M. K. Reiter, Q. Li, and S. Wetzel.
Cryptographic Key Generation from Voice (Extended
Abstract). In Proceedings of the 2001 IEEE Symposium on
Security and Privacy, pages 12–25, May 2001.
[16] F. Monrose, M. K. Reiter, and S. Wetzel. Password
Hardening based on Keystroke Dynamics. International
Journal of Information Security, 1(2):69–83, February 2002.
[17] J. A. Rice. Mathematical Statistics and Data Analysis.
Duxbury Press, Belmont, CA, 2nd edition, 1995.
[18] C. Soutar, D. Roberge, A. Stoianov, R. Gilroy, and B. V.
Kumar. Biometric EncryptionTM using Image Processing. In
Optical Security and Counterfeit Deterrence Techniques II,
volume 3314, pages 178–188. IS&T/SPIE, 1998.
[19] J. Thorpe and P. van Oorschot. Human-Seeded Attacks and
Exploiting Hot-Spots in Graphical Passwords. In
Proceedings of the 16th Annual USENIX Security
Symposium, Boston, MA, August 2007.
[20] U. Uludag, S. Pankanti, S. Prabhakar, and A. K. Jain.
Biometric Cryptosystems: Issues and Challenges.
Proceedings of the IEEE Special Issue on Multimedia
Security of Digital Rights Management, 92(6):948–960,
2004.
[21] P. van Oorschot and J. Thorpe. On Predictive Models and
User-Drawn Graphical Passwords. ACM Transactions on
Information and System Security, 10(4):1–33, 2007.
[22] C. Vielhauer and R. Steinmetz. Handwriting: Feature
Correlation Analysis for Biometric Hashes. EURASIP
Journal on Applied Signal Processing, 4:542–558, 2004.