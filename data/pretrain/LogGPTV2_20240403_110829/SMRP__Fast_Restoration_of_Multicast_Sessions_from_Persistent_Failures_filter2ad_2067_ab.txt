### 3.2 Survivable Multicast Routing Protocol (SMRP)

In this section, we describe the key features of SMRP, which aims to enhance the disjointness of multicast paths between neighboring nodes. The protocol constructs a multicast tree incrementally by processing explicit join or leave requests from members, while minimizing network bandwidth usage. Additionally, SMRP employs a soft-state mechanism for robustness and dynamically reshapes the multicast tree to improve overall performance.

#### 3.2.1 Data Structure

We introduce a new metric, \( \text{SHRS}_{S,R} \), to quantify the degree of link/node sharing in the path between the source \( S \) and an on-tree node \( R \). The new path should be merged into the current multicast tree at the node \( R \) with the smallest \( \text{SHRS}_{S,R} \). Each on-tree node maintains additional data structures to facilitate the path selection process. The symbols used are defined as follows:

- \( S \): Multicast source.
- \( R \): On-tree node.
- \( R_u \): Upstream node of \( R \) in the multicast tree.
- \( N_R \): Number of members in the subtree rooted at \( R \).
- \( N_{R_i} \): Number of members in the subtree rooted at the \( i \)-th downstream interface of \( R \).
- \( \text{SHRS}_{S,R} \): Measure of link/node sharing along the on-tree path between \( S \) and \( R \); \( \text{SHRS}_{S,S} = 0 \).

As shown in Figure 3, each on-tree node \( R \) maintains the following data structure: \( N_R \), \( N_{R_i} \), and \( \text{SHRS}_{S,R} \). The state of \( N_R \) is implicitly kept at \( R \) since \( N_R = \sum_{1 \leq i \leq n} N_{R_i} \). Therefore, Equation (1) can be transformed to:

\[
\text{SHRS}_{S,R} = \sum_{R' \in P_T(S,R) \setminus \{S\}} N_{R'} = \text{SHRS}_{S,R_u} + N_R
\]

The value of \( \text{SHRS}_{S,R} \) is iteratively calculated by exchanging information between each pair of direct on-tree neighbor nodes, \( R \) and its ancestor \( R_u \).

#### 3.2.2 Member Join/Leave

When a new member \( N_R \) joins the multicast session, it seeks to merge into the current multicast tree via the node \( R \) with the smallest \( \text{SHRS}_{S,R} \), rather than using the shortest path provided by the underlying unicast routing protocol. For simplicity, we assume that \( N_R \) has knowledge of the network topology and can generate all possible paths connecting to the current tree. This assumption is relaxed in Section 3.3.1.

\( N_R \) obtains a set of available path options \( \{P_{R_i}\} \), where \( P_{R_i} \) indicates a multicast path between \( S \) and \( N_R \) that merges into the tree at node \( R_i \). Each candidate path \( P_{R_i} \) has two states: the path length \( D_{S,N_R} \) and the degree of link/node sharing \( \text{SHRS}_{S,R_i} \).

The path selection criterion for a new multicast member \( N_R \) is as follows:

- **Path Selection Criterion**: The selected multicast path \( P_{R^*} \) must satisfy:
  - \( \text{SHRS}_{S,R^*} = \min\{\text{SHRS}_{S,R_i}\} \)
  - \( D_{S,N_R} \leq (1 + D_{\text{thresh}}) \cdot D_{\text{SPF},S,N_R} \)

where \( D_{\text{SPF},S,N_R} \) is the shortest path between \( S \) and \( N_R \) computed by the underlying unicast routing algorithm, and \( D_{\text{thresh}} \) is a parameter to prevent the selection of a path with an arbitrarily large end-to-end delay. If multiple candidate paths meet both conditions, the shortest path among them is chosen.

This criterion ensures that the selected path has the fewest overlapping nodes or links with the current multicast tree, while also bounding the path length. The parameter \( D_{\text{thresh}} \) balances the tradeoff between reduced sharing and increased end-to-end delay and tree cost.

After selecting the path, \( N_R \) sends an explicit `Join Req` message towards \( S \) along the selected path. Each intermediate node updates its local database and data structure as necessary.

For a member's departure, the procedure is straightforward. The departing member sends an explicit `Leave Req` message towards the source along its on-tree path. Each traversed node checks if there are still members underneath. If not, the soft-state routing information is cleared, and resources are released. This process continues until a router with a non-null set of members is reached. Similar join/leave procedures are found in existing multicast protocols like PIM [5].

#### 3.2.3 Tree Reshaping

The shape of the multicast tree influences the disjointness of multicast paths among on-tree neighbor nodes, which affects the efficiency of local recovery. In real networks, members may dynamically join or leave the multicast group. As described earlier, the tree structure is incrementally updated during these events, such as creating a new branch when a new member joins or trimming a branch when a receiver leaves. Over time, the tree may become skewed, making it suboptimal for fast failure recovery.

To address this, we examine how to reshape the tree structure to improve overall performance. Figure 4 illustrates the path selection process during the consecutive arrival of multicast members E, G, and F, with \( D_{\text{thresh}} \) set to 0.3. The tables in Figures 4(a-c) show the available paths for each new member. The join procedure for E is straightforward, and it selects the shortest path as in traditional routing protocols. For member G, after E completes its join process, each on-tree node updates its \( \text{SHRS}_{S,R} \). When G joins, it generates a set of available paths and chooses the path \( G \rightarrow B \rightarrow S \) based on the path selection criterion. Similarly, member F in Figure 4(c) selects the path \( F \rightarrow D \rightarrow A \rightarrow S \). The final multicast tree is shown in Figure 4(d).

### Conclusion

SMRP enhances the disjointness of multicast paths by carefully managing the tree construction and reshaping processes. By using the \( \text{SHRS}_{S,R} \) metric and the path selection criterion, SMRP ensures efficient and robust multicast routing, even in dynamic network environments.