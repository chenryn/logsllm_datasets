项目地址：https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet/
Java 反序列化速记小抄。本页面收集了一些关于 Java 反序列化在渗透测试和一些 Java 应用的实例，以及一些利用工具。
* * *
A cheat sheet for pentesters about Java Native Binary Deserialization
vulnerabilities
Please, use **#javadeser** hash tag for tweets.
### Table of content
  * Overview
  * Main talks & presentations & docs
  * Payload generators
  * Exploits
  * Detect
  * Vulnerable apps (without public sploits/need more info)
  * Protection
  * For Android
  * Other serialization types
### Overview
  * [Java Deserialization Security FAQ](https://christian-schneider.net/JavaDeserializationSecurityFAQ.html)
  * [From Foxgloves Security](http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/)
### Main talks & presentations & docs
##### Marshalling Pickles
by [@frohoff](https://twitter.com/frohoff) & [@gebl](https://twitter.com/gebl)
  * [Video](https://www.youtube.com/watch?v=KSA7vUkXGSg)
  * [Slides](http://www.slideshare.net/frohoff1/appseccali-2015-marshalling-pickles)
  * [Other stuff](http://frohoff.github.io/appseccali-marshalling-pickles/)
##### Exploiting Deserialization Vulnerabilities in Java
by [@matthias_kaiser](https://twitter.com/matthias_kaiser)
  * [Video](https://www.youtube.com/watch?v=VviY3O-euVQ)
##### Serial Killer: Silently Pwning Your Java Endpoints
by [@pwntester](http://twitter.com/pwntester) &
[@cschneider4711](http://twitter.com/cschneider4711)
  * [Slides](https://www.rsaconference.com/writable/presentations/file_upload/asd-f03-serial-killer-silently-pwning-your-java-endpoints.pdf)
  * [White Paper](http://community.hpe.com/hpeb/attachments/hpeb/off-by-on-software-security-blog/722/1/HPE-SR%20whitepaper%20java%20deserialization%20RSA2016.pdf)
  * [Bypass Gadget Collection](https://github.com/pwntester/SerialKillerBypassGadgetCollection)
##### Deserialize My Shorts: Or How I Learned To Start Worrying and Hate Java
Object Deserialization
by [@frohoff](https://twitter.com/frohoff) & [@gebl](https://twitter.com/gebl)
  * [Slides](http://www.slideshare.net/frohoff1/deserialize-my-shorts-or-how-i-learned-to-start-worrying-and-hate-java-object-deserialization)
##### Surviving the Java serialization apocalypse
by [@cschneider4711](http://twitter.com/cschneider4711) &
[@pwntester](http://twitter.com/pwntester)
  * [Slides](http://www.slideshare.net/cschneider4711/surviving-the-java-deserialization-apocalypse-owasp-appseceu-2016)
  * [Video](https://www.youtube.com/watch?v=m1sH240pEfw)
  * [PoC for Scala, Grovy](https://github.com/pwntester/JVMDeserialization)
##### Java Deserialization Vulnerabilities - The Forgotten Bug Class
by [@matthias_kaiser](https://twitter.com/matthias_kaiser)
  * [Slides](http://www.slideshare.net/codewhitesec/java-deserialization-vulnerabilities-the-forgotten-bug-class)
##### Pwning Your Java Messaging With Deserialization Vulnerabilities
by [@matthias_kaiser](https://twitter.com/matthias_kaiser)
  * [Slides](https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities.pdf)
  * [White Paper](https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities-wp.pdf)
  * [Tool for jms hacking](https://github.com/matthiaskaiser/jmet)
##### Defending against Java Deserialization Vulnerabilities
by [@lucacarettoni](https://twitter.com/lucacarettoni)
  * [Slides](http://www.slideshare.net/ikkisoft/defending-against-java-deserialization-vulnerabilities)
##### A Journey From JNDI/LDAP Manipulation To Remote Code Execution Dream
Land
by [@pwntester](http://twitter.com/pwntester) and O. Mirosh
  * [Slides](https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf)
  * [White Paper](https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE-wp.pdf)
### Payload generators
##### ysoserial
RCE (or smth else) via:
  * Apache Commons Collections  \-
##### ACEDcup
File uploading via: \- Apache Commons FileUpload 
Won't fix DoS via default Java classes
##### Universal Heap overflows DoS using Arrays and HashMaps
How it works: \- [Java Deserialization DoS - payloads](http://topolik-at-work.blogspot.ru/2016/04/java-deserialization-dos-payloads.html)
Won't fix DoS via default Java classes
### Exploits
no spec tool - You don't need a special tool (just Burp/ZAP + payload)
##### RMI
  * _Protocol_
  * _Default - 1099/tcp for rmiregistry_
ysoserial (works only against a RMI registry service)
##### JMX
  * _Protocol based on RMI_
  *     * [CVE-2016-3427](http://engineering.pivotal.io/post/java-deserialization-jmx/)
  * partially patched in JRE 
ysoserial
##### JNDI/LDAP
  * When we control an adrress for lookup of JNDI (context.lookup(address))
  * Full info
  * [JNDI remote code injection](http://zerothoughts.tumblr.com/post/137769010389/fun-with-jndi-remote-code-injection)
##### JMS
  * Full info
[JMET](https://github.com/matthiaskaiser/jmet)
##### JSF ViewState
  * if no encryption or good mac
##### T3 of Oracle Weblogic
  * _Protocol_
  * _Default - 7001/tcp on localhost interface_
  * [CVE-2015-4852](https://www.vulners.com/search?query=CVE-2015-4852)
[loubia](https://github.com/metalnas/loubia) (tested on 11g and 12c, supports
t3s)
[JavaUnserializeExploits](https://github.com/foxglovesec/JavaUnserializeExploits)
(doesn't work for all Weblogic versions)
##### IBM Websphere 1
  * _wsadmin_
  * _Default port - 8880/tcp_
  * [CVE-2015-7450](https://www.vulners.com/search?query=CVE-2015-7450)
[JavaUnserializeExploits](https://github.com/foxglovesec/JavaUnserializeExploits)
[serialator](https://github.com/roo7break/serialator)
##### IBM Websphere 2
  * When using custom form authentication
  * WASPostParam cookie
  * [Full info](https://lab.mediaservice.net/advisory/2016-02-websphere.txt)
no spec tool
##### JBoss
  * _http://jboss_server/invoker/JMXInvokerServlet_
  * _Default port - 8080/tcp_
  * [CVE-2015-7501](https://www.vulners.com/search?query=CVE-2015-7501)
[JavaUnserializeExploits](https://github.com/foxglovesec/JavaUnserializeExploits)
[serialator](https://github.com/roo7break/serialator)
##### Jenkins
  * _Jenkins CLI_
  * _Default port - High number/tcp_
  * [CVE-2015-8103](https://www.vulners.com/search?query=CVE-2015-8103)
  * [CVE-2015-3253](https://www.vulners.com/search?query=CVE-2015-3253)
[JavaUnserializeExploits](https://github.com/foxglovesec/JavaUnserializeExploits)
##### Jenkins 2
  * patch "bypass" for Jenkins
  * [CVE-2016-0788](https://www.vulners.com/search?query=CVE-2016-0788)
  * [Details of exploit](https://www.insinuator.net/2016/07/jenkins-remoting-rce-ii-the-return-of-the-ysoserial/)
ysoserial
##### Restlet
  * _< = 2.1.2_
  * _When Rest API accepts serialized objects (uses ObjectRepresentation)_
no spec tool
##### RESTEasy
  * *When Rest API accepts serialized objects (uses @Consumes({"*/*"}) or "application/*" )
  * [Details and examples](https://0ang3el.blogspot.ru/2016/06/note-about-security-of-resteasy-services.html)
no spec tool
##### OpenNMS
  * RMI
ysoserial
##### Progress OpenEdge RDBMS
  * all versions
  * RMI
ysoserial
##### Commvault Edge Server
  * [CVE-2015-7253](https://www.vulners.com/search?query=CVE-2015-7253)
  * Serialized object in cookie
no spec tool
##### Symantec Endpoint Protection Manager
  * _/servlet/ConsoleServlet?ActionType=SendStatPing_
  * [CVE-2015-6555](https://www.vulners.com/search?query=CVE-2015-6555)
[serialator](https://github.com/roo7break/serialator)
##### Oracle MySQL Enterprise Monitor
  * _https://[target]:18443/v3/dataflow/0/0_
  * [CVE-2016-3461](http://www.tenable.com/security/research/tra-2016-11)
no spec tool
[serialator](https://github.com/roo7break/serialator)
##### PowerFolder Business Enterprise Suite
  * custom(?) protocol (1337/tcp)
  * [MSA-2016-01](http://lab.mogwaisecurity.de/advisories/MSA-2016-01/)
[powerfolder-exploit-poc](https://github.com/h0ng10/powerfolder-exploit-poc)
##### Solarwinds Virtualization Manager
  * <= 6.3.1
  * RMI
  * [CVE-2016-3642](https://www.vulners.com/search?query=CVE-2016-3642)
ysoserial
##### Cisco Prime Infrastructure