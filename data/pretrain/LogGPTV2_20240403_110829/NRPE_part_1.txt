NRPE Documentation
Copyright (c) 1999-2007 Ethan Galstad
Last Updated: May 1, 2007
CCOONNTTEENNTTSS
Section Page
1. Introduction ........................................................................................... 2
a) Purpose ............................................................................................ 2
b) Design Overview ............................................................................... 2
2. Example Uses ....................................................................................... 3
a) Direct Checks .................................................................................... 3
b) Indirect Checks ................................................................................. 3
3. Installation ............................................................................................ 4
a) Prerequisites .................................................................................... 4
b) Remote Host Setup .......................................................................... 5
c) Monitoring Host Setup ...................................................................... 9
4. Customizing Your Configuration ........................................................... 13
5. Upgrading ............................................................................................. 15
6. Troubleshooting .................................................................................... 17
NNRRPPEE DDooccuummeennttaattiioonn
11.. IINNTTRROODDUUCCTTIIOONN
a) Purpose
The NRPE addon is designed to allow you to execute Nagios plugins on remote Linux/Unix machines. The main
reason for doing this is to allow Nagios to monitor "local" resources (like CPU load, memory usage, etc.) on
remote machines. Since these public resources are not usually exposed to external machines, an agent like
NRPE must be installed on the remote Linux/Unix machines.
Note: It is possible to execute Nagios plugins on remote Linux/Unix machines through SSH. There is a
check_by_ssh plugin that allows you to do this. Using SSH is more secure than the NRPE addon, but it also
imposes a larger (CPU) overhead on both the monitoring and remote machines. This can become an issue when
you start monitoring hundreds or thousands of machines. Many Nagios admins opt for using using the NRPE
addon because of the lower load it imposes.
b) Design Overview
The NRPE addon consists of two pieces:
– The check_nrpe plugin, which resides on the local monitoring machine
– The NRPE daemon, which runs on the remote Linux/Unix machine
When Nagios needs to monitor a resource of service from a remote Linux/Unix machine:
– Nagios will execute the check_nrpe plugin and tell it what service needs to be checked
– The check_nrpe plugin contacts the NRPE daemon on the remote host over an (optionally) SSL-protected
connection
– The NRPE daemon runs the appropriate Nagios plugin to check the service or resource
– The results from the service check are passed from the NRPE daemon back to the check_nrpe plugin, which
then returns the check results to the Nagios process.
Note: The NRPE daemon requires that Nagios plugins be installed on the remote Linux/Unix host. Without these,
the daemon wouldn't be able to monitor anything.
Last Updated: May 1, 2007 Page 2 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
22.. EEXXAAMMPPLLEE UUSSEESS
a) Direct Checks
The most straight forward use of the NRPE addon is to monitor "local" or "private" resources on a remote
Linux/Unix Machine. This includes things like CPU load, memory usage, swap usage, current users, disk usage,
process states, etc.
b) Indirect Checks
You can also use the NRPE addon to indirectly check "public" services and resources of remote servers that might
not be reachable directly from the monitoring host. For instance, if the remote host that the NRPE daemon and
plugins are installed on can talk to the a remote web server (but the monitoring host cannot), you can configure the
NRPE daemon to allow you to monitor the remote web server indirectly. The NRPE daemon is essentially acting
as proxy in this case.
Last Updated: May 1, 2007 Page 3 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
33.. IINNSSTTAALLLLAATTIIOONN
In order to use the NRPE addon, you'll need to perform some tasks on both the monitoring host and the remote
Linux/Unix host that the NRPE daemon is installed on. I'll cover both of these tasks separately.
Note: These instructions are based on a remote host running Fedora Core 6. Naming conventions, commands,
etc. vary across different Linux distros and UNIX variants, so the instructions provided here may have to be altered
a bit for your situation. If you're having trouble using these instructions, you can find OS/distribution-specific
installation guides, HOWTOs, and other helpful installation documentation on the Nagios Community wiki at
http://www.nagioscommunity.org/wiki/.
a) Prerequisites
In order to complete these installation instructions, you'll need:
– Root access on the remote Linux/Unix host
– Access to the nagios user account on the monitoring host
b) Assumptions
These instructions assume that you are installing the NRPE addon on a system that supports TCP wrappers and
has the xinetd superserver installed. Most modern Linux distributions and Unix variants have these installed by
default. If you have an older system that runs inetd (instead of xinetd) and/or does not support TCP wrappers, or
you want to run the NRPE daemon without inetd or xinetd, read the following files for information on installing the
addon (both are found in the main directory of the NRPE distribution):
– README
– SECURITY
[ Continued on next page ]
Last Updated: May 1, 2007 Page 4 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
c) Remote Host Setup
These instructions should be completed on the remote Linux/Unix host that the NRPE daemon will be installed on.
You'll be installing the Nagios plugins and the NRPE daemon...
i. Create Account Information
Become the root user. You may have to use sudo -s on Ubuntu and other distros.
su -l
Create a new nagios user account and give it a password.
/usr/sbin/useradd nagios
passwd nagios
ii. Install the Nagios Plugins
Create a directory for storing the downloads.
mkdir ~/downloads
cd ~/downloads
Download the source code tarball of the Nagios plugins (visit http://www.nagios.org/download/ for links to the latest
versions). At the time of writing, the latest stable version of the Nagios plugins was 1.4.6.
wget http://osdn.dl.sourceforge.net/sourceforge/nagiosplug/nagios-plugins-1.4.6.tar.gz
Extract the Nagios plugins source code tarball.
tar xzf nagios-plugins-1.4.6.tar.gz
cd nagios-plugins-1.4.6
Compile and install the plugins.
./configure
make
make install
The permissions on the plugin directory and the plugins will need to be fixed at this point, so run the following
commands.
chown nagios.nagios /usr/local/nagios
chown -R nagios.nagios /usr/local/nagios/libexec
iii. Install xinetd
Fedora Core 6 doesn't ship with xinetd installed by default, so install it with the following command:
yum install xinetd
Last Updated: May 1, 2007 Page 5 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
iv. Install the NRPE daemon
Download the source code tarball of the NRPE addon (visit http://www.nagios.org/download/ for links to the latest
versions). At the time of writing, the latest version of NRPE was 2.8.
cd ~/downloads
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
Extract the NRPE source code tarball.
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
Compile the NRPE addon.
./configure
make all
Install the NRPE plugin (for testing), daemon, and sample daemon config file.
make install-plugin
make install-daemon
make install-daemon-config
Install the NRPE daemon as a service under xinetd.
make install-xinetd
Edit the /etc/xinetd.d/nrpe file and add the IP address of the monitoring server to the only_from directive.
only_from = 127.0.0.1 
Add the following entry for the NRPE daemon to the /etc/services file.
nrpe 5666/tcp # NRPE
Restart the xinetd service.
service xinetd restart
Last Updated: May 1, 2007 Page 6 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
v. Test the NRPE daemon locally
Its time to see if things are working properly...
Make sure the nrpe daemon is running under xinetd.
netstat -at | grep nrpe
The output out this command should show something like this:
tcp 0 0 *:nrpe *:* LISTEN
If it does, great! If it doesn't, make sure of the following:
– You added the nrpe entry to your /etc/services file
– The only_from directive in the /etc/xinetd.d/nrpe file contains an entry for "127.0.0.1"
– xinetd is installed and started
– Check the system log files for references about xinetd or nrpe and fix any problems that are reported
Next, check to make sure the NRPE daemon is functioning properly. To do this, run the check_nrpe plugin that
was installed for testing purposes.
/usr/local/nagios/libexec/check_nrpe -H localhost
You should get a string back that tells you what version of NRPE is installed, like this:
NRPE v2.8
vi. Open firewall rules
Make sure that the local firewall on the machine will allow the NRPE daemon to be accessed from remote servers.
To do this, run the following iptables command. Note that the RH-Firewall-1-INPUT chain name is Fedora-
specific, so it will be different on other Linux distributions.
iptables -I RH-Firewall-1-INPUT -p tcp -m tcp –dport 5666 -j ACCEPT
Save the new iptables rule so it will survive machine reboots.
service iptables save
Last Updated: May 1, 2007 Page 7 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
vii. Customize NRPE commands
The sample NRPE config file that got installed contains several command definitions that you'll likely use to
monitor this machine. The command definitions are used to (surprise) define commands that the NRPE daemon
will run to monitor local resources and services. The sample command definitions run some of the plugins that
were installed in step 2. You can edit the command definitions, add new commands, etc, by editing the NRPE
config file:
vi /usr/local/nagios/etc/nrpe.cfg
More information on customizing the commands can be found on page 13 in the section titled "Customizing Your
Configuration".
For the time being, I'll assume you're using the sample commands that are defined. You can test some of these
by running the following commands:
/usr/local/nagios/libexec/check_nrpe -H localhost -c check_users
/usr/local/nagios/libexec/check_nrpe -H localhost -c check_load
/usr/local/nagios/libexec/check_nrpe -H localhost -c check_hda1
/usr/local/nagios/libexec/check_nrpe -H localhost -c check_total_procs
/usr/local/nagios/libexec/check_nrpe -H localhost -c check_zombie_procs
At this point, you are done installing and configuring NRPE on the remote host. Now its time to install a
component and make some configuration entries on your monitoring server...
[ Continued on next page ]
Last Updated: May 1, 2007 Page 8 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
d) Monitoring Host Setup
On the monitoring host (the machine that runs Nagios), you'll need to do just a few things:
– Install the check_nrpe plugin
– Create a Nagios command definition for using the check_nrpe plugin
– Create Nagios host and service definitions for monitoring the remote host
These instructions assume that you have already installed Nagios on this machine according to the quickstart
installation guide. The configuration examples that are given reference templates that are defined in the sample
localhost.cfg and commands.cfg files that get installed if you follow the quickstart.
i. Install the check_nrpe plugin
Become the root user. You may have to use sudo -s on Ubuntu and other distros.
su -l
Create a directory for storing the downloads.
mkdir ~/downloads
cd ~/downloads
Download the source code tarball of the NRPE addon (visit http://www.nagios.org/download/ for links to the latest
versions). At the time of writing, the latest version of NRPE was 2.8.
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
Extract the NRPE source code tarball.
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
Compile the NRPE addon.
./configure
make all
Install the NRPE plugin.
make install-plugin
Last Updated: May 1, 2007 Page 9 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
ii. Test communication with the NRPE daemon
Make sure the check_nrpe plugin can talk to the NRPE daemon on the remote host. Replace "192.168.0.1" in the
command below with the IP address of the remote host that has NRPE installed.
/usr/local/nagios/libexec/check_nrpe -H 192.168.0.1
You should get a string back that tells you what version of NRPE is installed on the remote host, like this:
NRPE v2.8
If the plugin returns a timeout error, check the following:
– Make sure there isn't a firewall between the remote host and the monitoring server that is blocking
communication
– Make sure that the NRPE daemon is installed properly under xinetd
– Make sure the remote host doesn't have local (iptables) firewall rules that prevent the monitoring server from
talking to the NRPE daemon
iii. Create a command definition
You'll need to create a command definition in one of your Nagios object configuration files in order to use the
check_nrpe plugin. Open the sample commands.cfg file for editing...
vi /usr/local/nagios/etc/commands.cfg
and add the following definition to the file:
define command{
command_name check_nrpe
command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}