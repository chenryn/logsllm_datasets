If a bound value can be of more than one type, then HTML Number input fields
are being bound as Strings. My expectation is that they should be bound to the
same type as the input field. In my case, we change the type of the input
field based on value of other fields on the form. This becomes a problem
downstream when REST service is expecting numbers but gets strings. Obviously,
there are a lot of downstream work arounds for this involving parsing the
numbers and changing the types (both the Angular app, and the REST service),
but none the less, it **feels** like a bug. Below is a very contrived example
to demonstrate the problem.
**Current behavior**
Typescript snippet:
    export class Demo {
      value: number | String;
      inputType:String;
      constructor() {
        this.inputType = 'text';
      }
      makeNumber() {
        this.inputType = 'number';
      }
      log() {
        console.log(JSON.stringify(this.value));
      }
    };
HTML:
    Make Number
    Log This
**Expected/desired behavior**
User clicks the "Make Number" button, enters 42 in the what is now a number
input field, and then clicks "Log This". The console should log:
    42
**Other information**
User clicks the "Make Number" button, enters 42 in the what is now a number
input field, and then clicks "Log This". The console actually logs:
    "42"