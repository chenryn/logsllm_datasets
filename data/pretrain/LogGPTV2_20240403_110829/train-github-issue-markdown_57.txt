**I'm submitting a ...** (check one with "x")
    [X] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
A plain element attribute (no syntax sugar) containing a number value is being
bound to the component as a string value.
**Expected behavior**  
The attribute would be converted to the data type of the input variable it's
being bound to... or at the very least the compiler would warn me of the data-
type mismatch.
**Reproduction of the problem**  
Create a component with the following property that uses the Input decorator:  
`@Input('maxlength') public maxLength: number;`  
Use the custom component somewhere like so:  
``  
Note that the "maxLength" property in the JavaScript code contains a string
value despite being defined as a number data type.
**What is the motivation / use case for changing the behavior?**  
I want to be able to use a strict equals (===) to compare "maxLength" to
"length", but that doesn't work if "maxLength" is a string and "length" is a
number.
**Please tell us about your environment:**
Windows 8.1, Visual Studio 2015, npm, IIS Express 10
  * **Angular version:** 2.0.0
  * **Browser:** Chrome 52.0.2743.116
  * **Language:** TypeScript 1.8.10
  * **Node (for AoT issues):** `node --version` = using JIT, not AoT