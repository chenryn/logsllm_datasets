this section. This will practically mean that they will be pointed to
a DNS sinkhole or a domain parking page.
With this behavior in mind, we tried to better understand both
the bipartite graph between the domains in the combosquatting
passive and active DNS datasets, and also in the Cabuse set. With
Figure 7c we observe that domains in the set Cabuse point to hosts
that are spread across more distinct CIDRs than the domains in the
CP and CA set. While the rotation on malicious IP infrastructure
might not be a new observation, in the reduced space of combosquat-
ting domains, this behavior could be used not only as a way to both
track combosquatting domains over time, but also to alert us of
potentially new abusive ones.
4.4 Infrastructure Analysis
So far we have examined how the domains in the combosquatting
passive DNS dataset evolved over time. In this section, we turn our
attention to the various DNS and IP properties that the domains
in the combosquatting passive and active DNS dataset exhibit. We
see that the hosting infrastructure of malicious combosquatting
domains is concentrated in certain autonomous systems and they
are scattered across numerous different CIDRs—which is different
from the behavior of combosquatting domains in general.
Figure 7a shows the distribution of Classless Inter-Domain Rout-
ing (CIDR) networks, Autonomous Systems (AS), and Country
Codes (CC) for the hosting facilities of CP and CA combosquatting
domains. As expected, generic combosquatting activity is spread
across the globe with no obvious concentrations.
We cannot claim the same for the domains in the Cabuse set.
In Figure 7b, we can see a higher concentration of malicious com-
bosquatting domains from the Cabuse set in a single CIDR and AS.
That is, almost 58% of the malicious domains are in one CIDR, where
only 38% of all combosquatting domains live in a single network.
The preference that malicious domains have a single CIDR/AS can
5 COMBOSQUATTING IN THE WILD
So far we have shed light to the combosquatting phenomenon over
a period of almost five years. We have shown the complexity of
the combosquatting problem by studying its lexical, infrastructure,
and temporal properties in Section 4. This section focuses on how
combosquatting domains are being used in the wild. We study
different aspects of combosquatting abuse, at the time of writing,
and show how combosquatting can be used for many different types
of illicit activities.
We show that combosquatting domains are currently being used
for a variety of attacks (e.g. phishing, affiliate abuse, social engineer-
ing, trademark abuse). While we study trademarks spread across
different business categories, these attacks affect almost every cat-
egory. We manually analyze a set of combosquatting domains in
order to further examine their network behavior and the counter-
measures the adversaries take to evade detection.
Session C2:  World Wide Web of WickednessCCS’17, October 30-November 3, 2017, Dallas, TX, USA5775.1 Exploring & Labeling Combosquatting
Domains
In order to understand the current status of combosquatting do-
mains and potential attacks rendered using them, we built an infras-
tructure of 100 scriptable browser instances and used them to crawl
1.3 million combosquatting domains, which were all part of CA
(active DNS dataset). The 1.3 million domains were comprised of
1.13 million initial seed domains (note that we have slightly more
domains than the ones reported in Table 5 since we may crawl
multiple subdomains per e2LD). On top of that, we also crawl 200
thousand domains, which included daily registrations of new com-
bosquatting domains and other domains that switched to unknown
NS server infrastructure (e.g. non-brand protection companies). Our
crawlers were tracking these changes for four weeks and were able
to successfully crawl approximately 1.1 million domains.
Due to the sheer size of the collected data and the need of man-
ual verification by human analysts, we approach the dataset we
collected through crawling in three sequential steps. First, we scan
our entire dataset for evidence of affiliate abuse, i.e., combosquat-
ting domains that redirect users to their intended destination but
add an affiliate identifier while doing so. This check will result in
the scammer earning a commission from the user’s actions [80].
Second, we look in the remainder of the dataset for phishing pages
by identifying login forms (from HTML inspection) and focusing on
the web pages that are “visually similar” to the legitimate websites.
Finally, in order to understand the type of abuse that is neither
phishing nor affiliate abuse, we perform a combination of strati-
fied and simple random sampling on our remaining dataset and
manually label 8.7 thousand web pages.
All this effort will yield two important points for our study. First,
this will help the reader get a sense of how combosquatting is
currently used in social engineering and affiliate abuse. Second, we
augment the Cabuse set of malicious combosquatting domains that
escape the threat feeds we used in our study. The next paragraph
will provide more details about each step and the discovered abuse.
Affiliate abuse. First, we scan all pages of our crawled corpus
focusing on the ones that, through a series of redirections, navigated
our crawlers to the appropriate authoritative domains. By excluding
domains that, through their WHOIS records and name servers,
we identified as clearly belonging to the legitimate owners of the
authoritative domains, we manually investigate the rest of the
redirection chains and identify 2,573 unique domains that were, for
at least one day, involved in affiliate abuse.
Phishing. We scan the HTML code of all the crawled pages that
were neither legitimately owned nor abusing affiliate programs,
and identify 40,299 unique domains that contain at least one login
form. We then proceed to cluster these webpages by their visual
appearance using a hamming distance on the hashes produced by
a perceptual hashing function, a process which resulted in 7,845
clusters. We then focus on the clusters that contain screenshots
that are similar to the look-and-feel of the targeted brands, so as to
remove unrelated pages that happen to have login forms. Through
this process, we identify 174 domains as conducting phishing at-
tacks. Table 6 shows the trademarks that were attacked by four or
Trademark
Facebook
icloud
Amazon
Google
PayPal
Instagram
Baidu
#Phishing Example
56
48
7
8
8
7
4
facebook123[.]cf
icloudaccountuser[.]com
secure5-amazon[.]com
drivegoogle[.]ga
paypal-updates[.]ml
wvwinstagram[.]com
baidullhk[.]com
Table 6: Examples of domains used for phishing, as discovered by our
crawling infrastructure.
more combosquatting domains. Even though this number may ap-
pear to be small, these were short-lived live phishing domains that
we discovered in the wild targeting the users of our investigated
trademarks.
Other types of abuse. Last, we focus on the top two Alexa do-
mains of each of the trademark categories (stratified sampling),
resulting in the selection of 221,292 combosquatting domains tar-
geting the selected trademarks. Using perceptual hashing in the
same way as we did for the identification of phishing pages, we
cluster 351 thousand screenshots of websites (note that many of
the 221 thousand combosquatting domains were crawled multiple
times due to infrastructure changes that were deemed suspicious)
into 50 thousand clusters. The trademark responsible for the largest
number of clusters (8.3 thousand) was Amazon which, due to its
name, “attracts” thousands of combosquatting websites which are
not necessarily related to each other, and thus create clustering
singletons. To label the screenshots, we randomly sample 10% of the
domains of each affected brand and manually label them, resulting
in a manual analysis effort of 8.7 thousand screenshots.
The labeling was performed by the authors where each one chose
among the following labels: social engineering (surveys, scams such
as tech support scam [62], malicious downloads), trademark abuse
(websites capitalizing on the brand of the squatted trademarks), un-
related (seemingly benign and unrelated websites), and error/under
construction. Finally, the resulting labels are then used to label the
entire clusters in which each sampled screenshot belongs. Table 7
shows the overall abuse of the investigated trademarks by consoli-
dating the results of the previous two steps, the manual labeling
of the stratified random sample and removing all the authorative
domains from the list. Table 8 shows the types of abuse for each
category of trademarks by focusing on the abuse of its most popu-
lar domain (grey cells denote the most popular type of abuse per
trademark category). There we see that while trademark abuse is
usually the most popular type of abuse, the exact breakdown varies
across categories. For example, for both amazon and homedepot,
affiliate abuse is the most popular type of abuse, fueled by the fact
that these two services offer affiliate programs to their users.
5.2 Case Studies
On October 30th of 2016, we crawled 505 combosquatting domain
names that were hosted on the same infrastructure. That is, the
domain names were pointing to the same set of IP addresses on that
day according to the active DNS dataset. To better understand how
Session C2:  World Wide Web of WickednessCCS’17, October 30-November 3, 2017, Dallas, TX, USA578Unknown 86.6%
11.23%
88.77%
0.9%
13.62%
15.56%
69.9%
1 Includes under construction, error pages and parking
websites.
Unrelated
Suspicious 1
Phishing
Social Engineering
Affiliate Abuse
Trademark Abuse
Malicious
13.39%
Table 7: Types of combosquatting pages
Trademark
pornhub
wordpress
microsoft
amazon
paypal
netflix
wikipedia
diply
reddit
fedex
craigslist
pinterest
homedepot
google
dropbox
facebook
popads
youtube
xfinity
airbnb
TA
Category
Adult Content
69.11%
96.96%
Blogging
74.39%
Computers
36.50%
E-Shop (Online)
37.79%
Financial
Radio & TV
72.41%
67.14%
E-Learning
98.4%
Lifestyle
News
97.01%
71.87%
Couriers
E-Shop (C2C)
68.89%
Photography
94.23%
25%
E-Shop (Physical)
Search Engines
72.32%
29.72%
File Sharing
Social Networks
69.82%
Software & Web
100%
Streaming
83.47%
Telecom
71.42%
Travel
94.95%
Table 8: Types of combosquatting abuse for the most popular investi-
gated domain within each trademark category (PH = phishing, AB =
affiliate abuse, SE = social engineering, TA = trademark abuse).
AB
5.14%
0.06%
11.0%
61.65%
0.78%
5.74%
0%
0%
0%
3.12%
0%
0%
72.5%
3.58%
16.21%
6.18%
0%
2.02%
14.28%
4.04%
SE
25.73%
2.93%
13.68%
1.47%
55.11%
19.54%
32.58%
1.6%
1.49%
25%
31.10%
5.76%
2.5%
23.49%
51.35%
18.74%
0%
14.5%
11.42%
1%
PH
0%
0%
0.32%
0.36%
6.29%
2.29%
0%
0%
1.49%
0%
0%
0%
0%
0.32%
2.7%
5.24%
0%
0%
2.85%
0%
adversaries take advantage of combosquatting domains, we set up a
headless crawling engine based on the Python requests module, that
collects Layer 7 (in the OSI stack) information. Our experimental
setup had two phases: first we crawled the domains using the default
configuration of the module and then we repeated the process
specifying a Chrome User-Agent. By comparing crawling results
from the two phases, we were able to identify the presence of
evasive behavior against our crawlers based on factors like HTTP
headers, client’s IP address and cookies’ presence.
Redirection Games. Most of the domains were associated with
a form of redirection, either to a parking page, or to an abuse-
related website. A set of 114 domains were performing at least one
redirection irrespective of the User-Agent HTTP header. When the
User-Agent was not set, 28 domains did not redirect and presented
a parking page. This set grew to 127 when User-Agent headers
were used. Redirection to the parking page was performed via a
child label for the same domain name, following the same naming
convention: the child label starts with ww followed by a number (i.e.
starbucksben[.]com redirects to ww1.starbucksben[.]com).
Figure 8: The JavaScript redirection performed by some combosquat-
ting domain names. This example is the result of visiting chevrontex-
acobusinescard[.]com. Line 5 had a 1,838 characters long string.
Moreover, there was a set of 53 domains that was performing
HTTP redirection without User-Agent, but JavaScript redirection
when the User-Agent was set. In the latter case, the HTTP response
contained highly obfuscated JavaScript code similar to the one in
Figure 8.
to
is present,
Malware Drops. One interesting example that shows how
adversaries are hiding the behavior of a domain from auto-
mated systems and crawlers, is http://zillowhomesforsale[.]com.
the domain always redi-
When no User-Agent
rected
which
served us with a parking template. When the User-Agent
was
the afore-
mentioned URL or to a completely different domain (i.e.
http://rtbtracking[.]com/click?data=Mm[...]Q2&id=8c[...]d3), based
on a probabilistic algorithm.
the redirection would be to either
http://ww1.zillowhomesforsale[.]com/,
set,
After we identified the attempt of the domains to hide their real
behavior, we tried to extract further information. We setup two
Virtual Machines (VMs) on a MacBook Pro running Mac OS 10.11.6
and Avast Mac Security 2015 Version 11.18 (46914) with Virus def-
initions version 16103000. The first VM was an Ubuntu 14.04.1
and the second a Mac OS 10.11.6. We started manually browsing
to the domain names mentioned earlier and we identified several
instances of malicious websites and URLs we were redirected to.
For example, zillowhomesforsale[.]com this time redirected us
to http://www.searchnet[.]com/Search/Loading?v=5 which was
blocked by Avast and classified as RedirMe-inf [Trj], a well known
trojan (http://malwarefixes.com/threats/htmlredirme-inf-trj/). Sim-
ilarly, when we browsed to youtubezeneletoltes[.]net we came
across an automatic downloader of a disk image file named “Flash-
Player.dmg”. It contained a binary that we submitted to VirusTo-
tal for analysis. The results pointed to malware, since 15/54 An-
tivirus reports were suggesting some type of Trojan or Adware
(http://bit.ly/2ffwyW1).
the combosquatting domains that we experi-
mented with would redirect us to an authoritative website
(not necessarily the one they were abusing), after appending
Some of
Session C2:  World Wide Web of WickednessCCS’17, October 30-November 3, 2017, Dallas, TX, USA579visiting
an affiliate identifier in the URL, essentially conducting affil-
iate abuse. For instance, visiting jcpenneyoulet[.]com lands
http://www.jcpenney[.]com/?cm_mmc=google%20non-
on
[...]
and
yields
http://www.target[.]com/?clkid=4738[...].
after
visiting one of the websites a cookie would be set on the user’s
browser. If the user attempted to visit another website (from the
same set of domains), she would find herself on a parking page [89].
After clearing cookies and repeating the process, the domain would
reveal its true nature.
toysrusuk[.]com
Interestingly,
related
to
social
engineering
identified was
stapleseaseyrebates[.]com, we were
Social Engineering and Phishing. Another type of abuse
we
and