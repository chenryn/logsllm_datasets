设计一个CSP顺序进程LOBBY，使其满足Q8.1中的描述。
将Q8.1中的单个BUTTON换成三个按钮，每个有不同的标
或者对BUTTON’LIGHT|DOOR施行顺序化，而且在顺
阅读2.8、3.4、3.8和3.9各节。
用一系列类似于Q8.1中的非形式约束条件描远系统的行
序化过程中消去破坏约束条件P2至P9的事件。
不使用的进程，
u: BUTTON  4:BUTTON 1: BUTTON
 LOBBY sat P;
IND=(below-→at-→IND
九、数学理论
|above-→at-→IND)
i=1,.…*,7,9
---
## Page 276
Q9.5在2.8.2节末提到，F的连续性足以保证μX.F(X)为F
于递归式的证明法则L8的正确性，即
Q9.4按3.9节D17中μX:A.F(X)的定义，验证3.7.1节中关
注裁：这是验证3.5.1节L10的一个特例。
的不动点，尽管不能保证F的不动点的唯一性。现证明，当F连
若S(0)，且
提示：证明
不总是成立。
此处αP=αQ={a,b，,c}。抖给出反例说明
Q9.3按3.9节进程定义D0，验证
(2）屏蔽{a}后的P1-P5。
(1) P1-P4
节D15为各组进程排序。
09.2计算下列两组进程的字母表、绝境集和发散集，并按3.9
(P= F(P)),
注意：
2
P3
divergences(a→P|b→Q)\{a}
μX:{a,b].α-→x
P sat S 意为 V(tr，ref)∈failures(P).S 为真。
((a-→P)|(b-→Q))\{a}=P\{a}(P\{a}Db=Q\{a})
=divergences(P\{a}) Udivergences(b-Q\{a})
((a→P)|(b→Q))\{a}=P\{a}[(b-→Q\{a})
有
X sat S(n)→F(X) sat S(n +1)
μX,F(X) sat Vn.S(n)
P=μX.F(X)
253
---
## Page 277
努非确定性为程序语言的健康条件。
母表的有穷性，从而排斥无穷非确定性。EW、Dijkstra规定有
注意：无穷非确定性的引入将破坏算子的连续性，故我们规定字
即一算子不再具有连续性。
构成进程链，但
证明
为A的严格递降子集合序列，即对一切n
推广到无穷字母表，允许无穷非确定性。然后合
到的是有穷非确定性。现删去这一限制：并将3.9节中各项定义
Q9.6在3.9节中规定进程的字母表必须有穷（见D0），这样得
这一事实对确定性和非确定性进程的理论都是成立的。
254
'P.=!
B.,Bi,...,B.....
Po,P....,Pa...
Ba+iCB,CA
]μX:A. x→X
---
## Page 278
A1.5 VMS3
A1.3军衔
A1.2硬币仓
A1.1银行帐万
A1,4换钱机
GENERAL= (enrol-→complete-GENERAL)
CAPTAIN=(enrol-→complete-→CAPTAIN
PRIVATE=(enrol→complete→PRIVATE
 SOLDIER=enlist→PRIVATE
VMS3= V。
X+lisodap)'Xftuado
'ST1P= STa
CH,= (outip-→CH)
CH,= in5p-→CH,
ST,
ST。
CH≤CH。
[ promote-→CAPTAIN)
一，选择和递归
I promote→GENERAL)
=(refill1→STso)
解
|refilll→ST)
[terminate-→STOP)
[withdraw-+X
些2八nK5
255
---
## Page 279
其中CH在A1.4中已定义，
A2.1
（2）添加篱笆后的板如下图
(1)
A1.6篱芭
限
256
ST1P在A1,2中已定义，
带有硬币仓的换钱机
C2=(up-→tight-→up→up-→STOP
C1 =right-→up-=right-→right-→STOP
(dOLs+dn--dn+dn+youl
COUNTER=(up→(right-→STOP
 CHST =CHIST1PIST2P
COUNTER=(up-→up→C1
Vs=(choe-→V)
V=(coin→Valchoc-→V)
V,=(coin→V1choc-V)
V。=coin-→V,
二、
井
|right→(up-+STOP
]right-→right-+C2)
发
|up-=C1) 
性
|right-→C2))
---
## Page 280
(2)
（1）将RANK换成
A2.4军衡（再续）
其中
A2.3
其中
E
(1)
A2.2
(3)
）将COURSE换成
银行帐户（续）
军备（续）
SOLDIER= enlist→(RANK I COURSE)
SH=(x:(oACCU(shut})-
 SOLD3 = enlist-→(RANK | COURSE | RESTR)
COURSE= enrol-→complete-COURSE
 COU RSE2 = enrol-→(complete-→COU RSE2
ACC3 = ACC SH
ACC1 =ACC IμX. (query→X
ACG4 = ACC ‘SH
RANK1 = promote-=promote-promote--
SH=(x:(aACCU(shut})
else μX,(deposit→X
if x≠shut then SH
if x= shut then (reopen-→SH)
ST2P= ST,
promote-STOp
ST。=refill2-→ST
else SH)
[reopen→SH))
(refil2-ST)
[terminate--STOP)
11>u>0
257
---
## Page 281
(1)
A2.5
而 
其中
(4)
其中
A3.1斐波纳契序列
(2）R中，在
其中
(4)
258
可能出现死锁。
aMORTAL =αSOLDIERU{die}
死锁的发现和消除
MORTAL=(x:aMORTAL
RFSTR=(enrol-→complete→RESTR
SOLD4 = enlist-(RANK | COURSE  MORTAL)
R | S=μX.(a-→-→0→X|b→4-→X
R4=PI(2-→Q)
R3= P 1(c→Q)
R2 =(2-→P) I Q
R1=(0-→P) IQ
R=(a-→R1|x-→R2|b-→R3|y-→R4)
PIQ=R 
(Y+0+|d018+-x)=
=(α-=STOP|x-→z-→R)
(d015+A|4+0+9)=
，，或
=(b→STOP|y-→z-→R)
(promote→RESTR)
S=(a-b-S|x-→y-S
if x= die then STOP
(S+x-a|S--ql
三、通
[x-+y-+2-+X[y-+x-+-+x)
eise MORTAL)
信
---
## Page 282
A3.3复制
A3.2杂澳文件
而
（3)
(2)
(1)
A3.4银行帐户（再续）
其中
ACC= open→ACC。
答案见6,4节X5。
 ACC =open-→ACC,
REP(,t)=(left?x-→REP(,t^)
ACC = open-→ACC.
REP(^s,t)=(right!y-→REP(s,t)
withdraw?m-
|terminate-STOP
[terminate-STOP)
|withdraw?m→
REP=REP(,)
[terminate-→STOP)
|-→REP(t,t))
[→REP(t,t))
[queryn-→X))
259
---
## Page 283
（2）每个消息传送两次，即
（1）每个消息都从控制通道上反馈，即
注意：
其中
(2) ROUT=leftm-→Rk(m)
A3.6流控制
其中
(1)
A3.5
其中
A4.1
260
STEP=left?t-→left?x-→rightIt-s
：Fx(m)总是打算在out:上输出m，只在这个输出完成以后
平方根
Rk(y)=left?x-→if x=empty then rightiy→RINk
PRE=lefi?t-→right!t-→right!1-=PRE
RINk=(left?x→tightx→RIN,|inkty→Rx(y))
才打消这一念头。
环形站
Fx(m)=(outx1m→ROUT
Rx(m)=if dest(m)=k
T1=(left?x->mid1x-→mid1x-→T1)
T1=(left?x-→midx→conz-→T1)
R1=(mid?x-→right!x-mid?y-→R1)
R1 =(mid?y→right1y->coniy-→R1)
else rightIm->ROUT:
[left?n-=(right1n-=Fx(m)
then (rightiempty-→Fk(m)
四，导管和附庸进程
|oute1m-→right1empty-→ROUTk)
[outx1m→Re(n)))
eise rightix-→Rk(y)
---
## Page 284
A4.4误传