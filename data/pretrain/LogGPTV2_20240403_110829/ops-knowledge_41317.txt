User: If my script needs to behave differently when it is being piped to versus when it is being called normally, how can I determine whether or not it is being piped to? This is necessary for avoiding hanging. I am not talking about merely checking whether or not stdin is empty or not.
Assistant: You can test if your program's input is connected to a tty, which may help, depending on your use case:

$ python -c 'import sys; print(sys.stdin.isatty())'
True
$ echo hi | python -c 'import sys; print(sys.stdin.isatty())'
False
$ python -c 'import sys; print(sys.stdin.isatty())' < foo
False