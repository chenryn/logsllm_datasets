User veriﬁed
Number of followers
Coef
7.41
−4.07× 10−1
−2.42× 10−4
−5.23× 10−5
–
–
Stat. Sig.
***
***
***
***
-
-
Table 2: Factors affecting post lifetime (child posts)
Factors
(Intercept)
Parent has picture
Parent friends number
Parent posts number
Parent user veriﬁed
Parent followers number
Coef
6.27
−1.01× 10−1
−4.76× 10−5
6.84× 10−6
2.01× 10−1
–
Stat. Sig.
***
***
***
***
*
-
4.2 Hypotheses
As a distributed system with 70,000 posts per minute,
Weibo has above a 10% rate of deletion in the pub-
lic timeline (ﬁrst observed by Bamman et al. [2]; we
have seen similar behavior). This high deletion rate can
be the result of many processes, including anti-spam
features, user deletions, as well as anti-censorship fea-
tures. Within the deletions that we believe are censor-
ship events, we note that 40% of the deletions in our user
timeline data set occur within the ﬁrst hour after a post
has appeared. Clearly, Weibo exerts signiﬁcant controls
over its content.
USENIX Association  
22nd USENIX Security Symposium  231
Before censors deal with the sensitive posts which are
already in the system, are there ﬁlters which do not allow
certain posts to enter the Weibo system? This question
leads to our ﬁrst hypothesis.
Hypothesis 1 Weibo has ﬁltering mechanisms as a
proactive, automated defense.
To ﬁnd out if there are ﬁltering mechanisms, we at-
tempted to post posts containing sensitive words from
the China Digital Times [4] and Tao et al. [41]. Here we
summarize the ﬁltering mechanisms Weibo was found to
apply based on our observations.
• Explicit ﬁltering: Weibo will inform a poster that
their post cannot be released because of sensitive
content.
For example, on 1 August 2012, we tried to post “政
法委书记” (Secretary of the Political and Legisla-
tive Committee). When we submitted a post with
this character string in it, a warning message says
“Sorry, since this content violates ‘Sina Weibo reg-
ulation rules’ or a related regulation or policy, this
operation cannot be processed.
If you need help,
please contact customer service.”
example when we
• Implicit ﬁltering: Weibo sometimes suspends
posts until they can be manually checked, telling
the user that the delay is due to “server data syn-
chronization.”
submitted the post
For
‘youshenmefalundebanfa’ on the same day, 1
August 2012, Weibo responded with the mes-
sage “Your post has been submitted successfully.
Currently, there is a delay caused by server data
synchronization. Please wait for 1 to 2 minutes.
Thank you very much.” This delay, which fre-
quently takes much longer than the 1–2 minutes
suggested by Weibo, was triggered by our use of
the substring “falun”, pertaining to the Falun Gong
religion. In this example, it took more than 5 hours
for the post to appear.
• Camouﬂaged posts: Weibo also sometimes makes
it appear to a user that their post was successfully
posted, but other users are not able to see the post.
The poster receives no warning message in this
case.
On 1 August 2012 we submitted a post contain-
ing the substring “cgc” (Chen Guangcheng [31]),
and received no warning messages, so it seemed
to be published successfully to our user. When we
tried to access that post from another user account,
however, we were redirected to Weibo’s error page
which claimed the post does not exist.
We found these phenomena to be repeatable. Over the
course of our experiments, we selected a number of dif-
ferent subsets of the keyword list published by the China
Digital Times [4], trying to post them to Weibo manually.
We consistently found all of these same phenomena, al-
though the speciﬁc keywords on any list vary over time.
Figure 1 shows that the deletions happen most heav-
ily for a regular post within 5 to 10 minutes of it being
posted. While we believe this process to happen largely
via automation, it is instructive to estimate how much un-
aided human labor would otherwise be necessary. Sup-
pose an efﬁcient worker could read 50 posts per minute,
including the reposts and ﬁgures included in the posts.
Then to read Weibo’s full 70,000 new posts [34] in one
minute, 1,400 simultaneous workers would be needed.
Assuming 8 hour shifts, 4,200 workers would then be
required. We can imagine that such a staff would have
a high error rate, owing to the repetitive nature of their
work. Such a labor force would also be relatively expen-
sive compared to automation. We instead conclude that
Weibo must be using a large amount of automation, per-
haps keyword-based as has been found in other systems
in China such as TOM-Skype [16]. This is likely com-
plemented with human efforts to evolve and reﬁne the
ﬁltering process.
Some of this reﬁnement certainly results from a cen-
tralized list of topics. Other reﬁnement may occur inter-
nally, through a smaller number of censors who look for
users ﬁnding new ways to misspell words or otherwise
work around existing ﬁlters. Our subsequent hypotheses
consider how this reﬁnement occurs and delve into how
Weibo’s automation operates.
Hypothesis 2 Weibo targets speciﬁc users, such as those
who frequently post sensitive content.
Another way to achieve prompt response to sensitive
posts is to track users who are likely to post sensitive
content, using techniques similar to what we are doing.
The posts from those sensitive users could then be read
by moderators more often and more promptly than the
posts of other users.
To test this hypothesis, we plotted Figure 2. We
grouped users together who have the same number of
censorship events occurring to their posts. The x-axis
is the number of such deletions for each cohort of users.
The y-axis shows how long these to-be-censored posts
live. The clear downward trend is evidence that users
with larger deletion frequencies tend to observe faster
censorship of their work, supporting our hypothesis.
Even though this ﬁgure shows us that the more dele-
tion posts a user has, the faster the users’ posts tend to
be deleted, we cannot rule out other features which those
users have in common and that those features may lead to
the fast deletions. For example, they may tend to use the
232  22nd USENIX Security Symposium 
USENIX Association
)
s
e
t
u
n
m
i
(
e
m
i
t
e
f
i
l
t
s
o
P
0
0
2
0
0
1
0
5
y
t
i
s
n
e
D
0
3
.
0
5
2
.
0
0
2
.
0
5
1
.
0
0
1
.
0
5
0
.
0
0
0
.
0
1
2
5
10
20
50
100
200
0
10
20
30
40
50
60
Deletion counts
Standard deviation(miniutes)
Figure 2: Users’ median post lifetime in minutes vs.
the number of deletions for that user on a log-log
scale. Black circles show the median lifetime of posts
in the cohort, and the dotted blue bars show the 25%–
75% range.
same keywords, post from the same geographical area,
use the same kind of client platform, and so on. There is
a clear correlation between post lifetime and post dele-
tion counts, but correlation does not imply causation.
If the surveillance keyword list and targeting of spe-
ciﬁc users were the only mechanisms for removing sen-
sitive posts, then the histograms in Figure 1 would stop
at a certain time, say 1 or 2 days. However, 10% of
the deletions happen after one day, with some deletions
occurring one month or more after the post was posted.
Clearly, other mechanisms are in use for these long-tail
censorship events, which leads to our next hypothesis.
Hypothesis 3 When a sensitive post is found, a moder-
ator will use automated searching tools to ﬁnd all of its
related reposts (parent, child, etc.), and delete them all
at once.
If this hypothesis is true, then the child posts which
repost a censored parent post should all be removed at the
same time. To test this hypothesis, we plot the histogram
of the standard deviation of the deletion time of the posts
sharing the same Repost Identiﬁcation Number (rpid) in
Figure 3. In our system deleted posts dataset, over 82%
of reposted posts have a deletion time standard deviation
of less than 5 minutes, meaning that a sensitive post is
detected and then most of the other posts in a chain of
reposts are immediately deleted.
Figure 3: Reposts standard deviation histogram.
There are outliers with standard deviations as high as 5
days which suggest that the mass deletion strategy men-
tioned here is not the only method Weibo employs to
delete sensitive reposts. This leads to our next hypoth-
esis.
Hypothesis 4 Deletion speed is related to the topic.
That is, particular topics are targeted for deletion based
on how sensitive they are.
We performed topical analysis on the deleted posts.
The topical analysis methods we use are described
in Section 5.1. Here, to save space, we only list the top
topic in Table 3. (For further topical discussion, please
refer to our technical report [42].) The third column is the
response time for the censor to discover a sensitive topic.
Speciﬁcally, the response time here refers to the period
between the time when the ﬁrst post on this topic ap-
peared in our user timeline data set and the time when the
Weibo system starts to delete the posts on this topic heav-
ily. These times were identiﬁed through manual analysis.
Even when a topic is still being actively censored, it does
not necessarily disappear. People may still discuss the
topic only to have their posts deleted. That is why some
topics appear twice or more in the table. When a topic
showed up again, there is no response time for it and we
indicate this with a dash (‘-’).
The main ﬁve topics extracted by Independent Com-
ponent Analysis (ICA, see Section 5) are: Qidong, Qian
Yunhui, Beijing Rainstorm, Diaoyu Island2 and Group
Sex. From Table 3, we can see that these topics have a
2Diaoyu Island is the number 3 top topic on 16 August.
USENIX Association  
22nd USENIX Security Symposium  233
Date
Top 1
Table 3: Blocked topics.
Response
Time (hours)
Judicial independence
Freedom of speech
Support Syrian rebels
Lying of gov. (Jixian)
7-20
7-21
7-22 Beijing rainstorms
7-23 Beijing rainstorms (Subway)
7-24 Beijing rainstormsa
7-25 Beijing rainstorms (Fangshan)
7-27 Beijing rainstorms (37 death)
7-28 Qidong
7-29 Qidong (Japanese reporter)
7-30 Complain gov. (Zhou Jun)
7-31
8-01 Complain gov. (Hongkong)
8-02
8-03 Qidong (Block the village)
8-04 One-Child Policy Abuse
8-05 Human Rights News
8-07 Qian Yunhui Accident
8-08 Qian Yunhui Accident
8-09 Group sex
8-10 RTLb
8-11
Tang Hui
8-12 Group sex
8-13 Corpse Plants in Dalian
8-14 Hongkong
8-15 Corpse Plants in Dalian
8-16 Corpse Plants in Dalian
8-17 Complain gov. (North Korea)
8-18
Zhou Kehua (faked)
21.32
12.20
2.55
1.62
2.65
2.58
0.82
1.18
2.25
5.73
2.00
45.30
7.35
31.58
33.42
24.63
10.87
–
0.78
3.65
33.42
–
532.50
70.98
–
–
19.83
16.37
aRefuse to donate for Beijing rainstorms.
bRe-education through labor.
relatively short lifetime compared to other topics. These
ﬁve topics were also hot topics in our public timeline dur-
ing this period.
This suggests that when sensitive users and a large
number of regular Weibo users are discussing the same
general topic, i.e., the topic is popular in both the user
timeline and public timeline, then extra resources are de-
voted to ﬁnding and deleting such posts3. In Section 5
we will show that the sensitive users in the user time-
line combine topics with common themes related to state
power (Beijing, government, China, country, police, and
people). This suggests that the censors consider the com-
bination of these themes with generally popular topics to
warrant extra resources.
3We have not ruled out other possibilities in our study, however,
such as that such topics are viewed by many users and therefore more
likely to be reported by regular users.
5 Topic extraction
Even though we are following a relatively modest num-
ber of Weibo authors, the volume of text we are capturing
is still too much to process manually. We need automatic
methods to classify the posts that we see, particularly
those which are deleted.
Automatic topic extraction is the process of identify-
ing important terms in the text that are representative of
the corpus as a whole. Topic extraction was originally
proposed by Luhn [19] in 1958. The basic idea is to as-
sign weights to terms and sentences based on their fre-
quency and some other statistical information.
However, when it comes to microblog text, standard
language processing tools become inapplicable [18, 40].
Microblogs typically contain short sentences and casual
language [7]. Unknown words, such as named entities
and neologisms often cause problems with these term-
based models. It can be especially challenging to extract
topics from Asian languages such as Chinese, Korean,
and Japanese, which have no spaces between words.
We applied the Pointillism approach [27] and TF*IDF
to extract hot topics. In the Pointillism model, a corpus
is divided into n-grams; words and phrases are recon-
structed from grams using external information (speciﬁ-
cally, temporal correlations in the appearance of grams),
giving the context necessary to manage informal uses of
the language such as neologisms. Salton’s TF*IDF [10]
assigns weights to the terms of a document based on the
terms’ relative importance to that document compared to
the entire corpus.
We next explain how these techniques work together.
5.1 Algorithm
TF*IDF is a common method to determine the impor-
tance of words to a document in a corpus. The TF*IDF
value in our case is calculated as:
f (t,dday)× log
Total number of posts for the month
f (t,dmonth)
Here, f (t,d) means the frequency of the term t in doc-
ument d. We use trigrams as t, and documents d are sets
of posts over a certain period of time. dday is the deleted
posts we caught on day day. We use the posts of July,
2012 in the public timeline as IDF. f (t,dmonth) is the fre-
quency of term t in the public timeline in July, 2012.
First we calculate TF*IDF scores for all trigrams that
have more than 20 occurrences in a day. The top 1000
trigrams with the highest TF*IDF score will be fed to
our trigram connection algorithm, hereafter “Connector.”
We call these top 1000 trigrams the 1000-TFIDF list.
234  22nd USENIX Security Symposium 
USENIX Association
To connect trigrams back into longer phrases, Connec-
tor ﬁnds two trigrams which have two overlapping char-
acters. For instance, if there are ABC and BCD, Con-
nector will connect them to become ABCD. Sometimes
there is more than one choice for connecting trigrams,
e.g., there could also be BCE and BCF. Sometimes tri-
grams can even form a loop. To solve these problems,
we ﬁrst build directed graphs for the trigrams with a high
TF*IDF score. Each node is a trigram, and edges indi-
cate the overlap information between two trigrams. For
example, if ABC and BCD can be connected to make
ABCD, then there is an edge from ‘ABC’ to ‘BCD’. Af-
ter all trigrams are selected, we use DFT (Depth First
Traversal) to output the nodes. During the DFT we check
to see if a node has been traversed already.
If so we
do not traverse it again. After the graphs have been tra-
versed, we obtain a set of phrases.
For example, the Connector output of the third most
popular topic on 4 August 2012 is:
1.头骨进京鸣冤。河北广平县上坡村76岁的农民冯
虎，其子在19
skull go Beijing to redress an injustice. The son of a 76
year old farmer Fenghu, from Shangpo village, Guang-
ping city, Hebei province, was ... at 19
2.头骨进京鸣冤。冯出示的头骨赴京鸣...
skull go Beijing to redress an injustice. The skull shown
by Feng go Beijing to redress an injustice...
3.头骨进京鸣冤。冯出示的头骨前额有一大窟窿，
他...
skull go Beijing to redress an injustice. There is a big hole
on the skull shown by Feng, he...
4.头骨进京鸣冤。冯出示的头骨前额有一个无罪的公
民...
skull go Beijing to redress an injustice. There is a inno-
cent citizen on the skull shown by Feng, he...
5.头骨进京鸣冤。冯出示的头骨进...
skull go Beijing to redress an injustice. The skull shown
by Feng enter...
6.头骨进京鸣冤。冯出示的头等舱
skull go Beijing to redress an injustice. The ﬁrst class seat
shown by Feng...
7.【华联社电】上访15年 老父携儿头骨...
Chinese Community report: petition 15 years, old father
bring the skull of his son...
In this example, the 7 outputs of Connector are trans-
lated in English, which is written in the next line after the
original Chinese phrase. Outputs 4 and 6 are incorrectly
connected. This is because the same trigrams are shared
by different stories that have high TF*IDF scores on the
same day. This problem can be solved by examining the
cosine similarity of the frequency of occurrence of the
ﬁrst and the last trigram for each result.
Cosine similarity is used to judge whether two tri-
grams have correlated trends.
»(cid:31)n
2 ×»(cid:31)n
cos.Sim =
i=1 Ai
2
i=1 Bi
where  denotes an inner product between two vec-
tors. For details, please refer to Song et al. [27].
From the connected sentences, listed above, we can
begin to understand the general events that are driving
major sensitive topics of discussion on Weibo. Table 3
lists the top topics of the deleted posts from 20 July 2012
to 18 August 2012.
(A computer failure prevented us
from collecting data on 6 August 2012.) Note that we just
translated the posts from each topical cluster, we have not
conﬁrmed the veracity of any of the claims of the Weibo
users’ posts that we translated.
Interestingly, besides named entities, we also extracted
three neologisms. They are 李W阳 (Li Wangyang, from
李 旺 阳), 六 圌 四 (June Fourth, from 六 四), 胡()涛
(Hu Jintao, from 胡锦涛, replacing the middle charac-
ter with open- and close-parentheses), and 启-东, 启\东
and 启/东 (Qidong, from 启东, inserting punctuation be-
tween the two characters). These neologisms became
popular enough that they stood out in our TF*IDF anal-
ysis.
5.2 Hot sensitive topics
Table 3 tells us the top topic for each day in terms of
having the highest TF*IDF scores—however, it does not
tell us which topics among these have been discussed for
the longest period of time by our users. Also, are there
some common themes behind those separate topics?
Here are the top 50 words which have appeared in the
1000-TFIDF list most frequently from 20 July 2012 to
20 August 2013, manually translated to English:
Beijing City, Liu Futang, secretary, Lujiang County,
Guo Jinlong, Qian Yunhui, City Government, Zhou Ke-
hua, Red Cross, Diaoyu Island, subprefect, water drain,
ordinary people, taxpayer, Fangshan district, Hagens, lo-
cal police station, ofﬁce, Beijing, Qidong, government,
China, Japan, citizen, county’s head commissioner, re-
porter, mayor, corrupt ofﬁcial, freedom, country, re-
strain, keyhole report, wrist watch, police, national, rec-
ommend, American, repression, patriotic, democratic,
corpses, people, donation, cancel, opinion, reeducation
through labor, abolition, truck4
We used Independent Component Analysis (ICA) to
extract “independent signals” from those most important
4For clarity, we have elided close variants on China, Japan, and
Beijing from this list.
USENIX Association  
22nd USENIX Security Symposium  235
terms shown above. ICA [14] is a method to separate a
linearly mixed signal, x, into mutually independent com-
ponents, s.
Let X = [x1,x2, ...,xm]T be the observation mixture
matrix, consisting of m observed signals xi. Since X is