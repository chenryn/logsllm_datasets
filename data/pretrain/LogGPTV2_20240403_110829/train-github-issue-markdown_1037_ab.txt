    pluggy==1.0.0
    pre-commit==2.15.0
    promise==2.3
    prompt-toolkit==3.0.20
    psutil==5.5.1
    py==1.10.0
    pycairo==1.16.2
    pycodestyle==2.7.0
    pycrypto==2.6.1
    pycups==1.9.73
    pyelftools==0.27
    pyFirmata==1.1.0
    pyflakes==2.3.1
    pygame==1.9.4.post1
    Pygments==2.3.1
    PyGObject==3.30.4
    pyinotify==0.9.6
    PyJWT==1.7.0
    pylint==2.11.1
    pymata4==1.11
    pymongo==3.12.0
    pyOpenSSL==19.0.0
    pyparsing==2.4.7
    pyserial==3.5
    pysmbc==1.0.15.6
    pytest==6.2.5
    pytest-cov==3.0.0
    pytest-mock-resources==2.1.3
    python-apt==1.8.4.3
    python-dotenv==0.19.0
    python-settings==0.2.2
    pytz==2021.3
    pyudev==0.22.0
    pyxdg==0.25
    PyYAML==5.4.1
    rainbowhat==0.1.0
    regex==2021.9.30
    reportlab==3.5.13
    requests==2.21.0
    requests-oauthlib==1.0.0
    responses==0.9.0
    roman==2.0.0
    RPi.GPIO==0.7.0
    RTIMULib==7.2.1
    Rx==1.6.1
    SCons==4.2.0
    scrollphat==0.0.7
    scrollphathd==1.2.1
    SecretStorage==2.3.1
    semantic-version==2.8.5
    Send2Trash==1.5.0
    sense-hat==2.2.0
    simplejson==3.16.0
    singledispatch==3.7.0
    six==1.12.0
    skywriter==0.0.7
    sn3218==1.2.7
    sniffio==1.2.0
    snowballstemmer==2.1.0
    soupsieve==1.8
    Sphinx==4.2.0
    sphinxcontrib-applehelp==1.0.2
    sphinxcontrib-devhelp==1.0.2
    sphinxcontrib-htmlhelp==2.0.0
    sphinxcontrib-jsmath==1.0.1
    sphinxcontrib-qthelp==1.0.3
    sphinxcontrib-serializinghtml==1.1.5
    spidev==3.5
    SQLAlchemy==1.4.25
    ssh-import-id==5.7
    starlette==0.16.0
    tabulate==0.8.9
    texttable==1.6.0
    thonny==3.3.10
    toml==0.10.2
    tomli==1.2.1
    touchphat==0.0.1
    traitlets==5.1.0
    twython==3.7.0
    typed-ast==1.4.3
    typing-extensions==3.10.0.2
    unicornhathd==0.0.4
    urllib3==1.24.1
    uvicorn==0.15.0
    vine==5.0.0
    virtualenv==20.8.0
    wcwidth==0.2.5
    webencodings==0.5.1
    websocket-client==0.53.0
    Werkzeug==2.0.1
    wrapt==1.12.1
    wsproto==1.0.0
    WTForms==2.3.3
    yapf==0.31.0
    zeroconf==0.36.7
    zipp==3.5.0
### Other Dependencies
N/A
## Minimally Reproducible Test Case
# Expected Behavior
  * Background tasks are defined in a Flask application namespace using Celery and the `@app.task()` decorator
  * The results of each task is routed to a different queue on the broker
Celery is loaded
    app = create_app()
    celery = middleware(
        app=app
    )
    def middleware(
        app: Flask = None,
        mq_host: str = None,
        mq_port: int = None,
        mq_user: str = None,
        mq_password: str = None,
    ) -> Celery:
        mq_host = "127.0.0.1" if mq_host is None else mq_host 
        mq_port = 5726 if mq_port is None else mq_port
        # print(f"import name: {app.import_name}")
        celery = Celery(
           app.import_name,
           backend='rpc://',
           broker=broker_connection_string()
        )
        #celery.conf.task_default_queue = "metrics.system"
        celery.conf.update(app.config)
        class ContextTask(celery.Task):
            def __call__(self, *args, **kwargs):
                with app.app_context():
                    return self.run(*args, **kwargs)
        celery.Task = ContextTask
        return celery
source is located here
tasks are defined in the `app.py` file
    @celery.task(
        bind=True, 
        queue='metrics.system.vmem', 
        reply_to='metrics.system.vmem',
        name='pylibs.sidecars.metrics.app.publish_vmem' 
    )
    def publish_vmem(self):
        metrics = SystemMetrics(interval=30)
        mem = metrics.vmem()
        return dumps(mem)
    @celery.task(
        bind=True, 
        queue='metrics.system.swap', 
        name='pylibs.sidecars.metrics.app.publish_swap'
    )
    def publish_swap(self):
        metrics = SystemMetrics(interval=30)
        swap = metrics.swap()
        return dumps(swap)
    #...
Example:
    In [84]: pylibs.sidecars.metrics.app.celery
    Out[84]: 
    In [91]: pylibs.sidecars.metrics.app.celery.amqp.queues
    Out[91]: 
    {'default':  [default->default]>,
     'metrics.system':  [metrics->metrics.system]>,
     'metrics.system.vmem':  [metrics->metrics.system.vmem]>,
     'metrics.system.swap':  [metrics->metrics.system.swap]>,
     'metrics.system.cputime':  [metrics->metrics.system.cputime]>,
     'metrics.system.cpustats':  [metrics->metrics.system.cpustats]>,
     'metrics.system.temps':  [metrics->metrics.system.temps]>,
     'metrics.system.diskusage':  [metrics->metrics.system.diskusage]>,
     'metrics.system.netio':  [metrics->metrics.system.netio]>}
    In [93]: pylibs.sidecars.metrics.app.celery.conf.task_queues
    Out[93]: 
    ( [default->default]>,
      [metrics->metrics.system]>,
      [metrics->metrics.system.vmem]>,
      [metrics->metrics.system.swap]>,
      [metrics->metrics.system.cputime]>,
      [metrics->metrics.system.cpustats]>,
      [metrics->metrics.system.temps]>,
      [metrics->metrics.system.diskusage]>,
      [metrics->metrics.system.netio]>)
I have defined a beat schedule a follows, these tasks execute with no problem,
however they are not routed to the queues defined in beat schedules.
    celery.conf.update(beat_schedule = {
        'publish-vmem-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_vmem',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.vmem',
                'routing_key': 'metrics.system.vmem',
                # 'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-swap-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_swap',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.swap',
                'routing_key': 'metrics.system.swap',
                # 'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-cputime-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_cputime',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.cputime',
                'routing_key': 'metrics.system.cputime',
                # 'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-cpustats-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_cpustats',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.cpustats',
                'routing_key': 'metrics.system.cpustats',
                #'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-temperature-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_temps',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.temps',
                'routing_key': 'metrics.system.temps',
                # 'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-disk-usage-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_diskusage',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.diskusage',
                'routing_key': 'metrics.system.diskusage',
                # 'exchange': 'metrics',            
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
        'publish-netio-60s': {
            'task': 'pylibs.sidecars.metrics.app.publish_netio',
            'schedule': 60.0,
            'options': {
                'queue': 'metrics.system.netio',
                'routing_key': 'metrics.system.netio',
                # 'exchange': 'metrics',         
                'exchange_type': 'direct',
                'priority': 1,
            },
        },
    })
# Actual Behavior
tasks don't get routed to the queues defined in the beat schedule but instead
are routed to the auto-generated task queue for celery (or hardcoded in
`@app.task(queue=)`
    pi@raspberrypi:~/restart/headunit $ ./dev/rabbitmqadmin list queues
    +-----------------------------------------------+----------+
    |                     name                      | messages |
    +-----------------------------------------------+----------+
    | 2aa4c2ac-4f30-348f-9eec-44103f41a86f          | 535      | <-- wrong queue
    | PI:EMAIL              | 0        |
    | celeryev.4ccf8ffd-cfa4-4143-a0b2-3fc51576d695 | 0        |
    | celeryev.7e381597-0755-4c91-84aa-88faee6d8f7c | 0        |
    | default                                       | 0        |
    | metrics.system                                | 0        |
    | metrics.system.cpustats                       | 0        |
    | metrics.system.cputime                        | 0        |
    | metrics.system.diskusage                      | 0        |
    | metrics.system.netio                          | 0        |
    | metrics.system.swap                           | 0        |
    | metrics.system.temps                          | 0        |
    | metrics.system.vmem                           | 0        |
    +-----------------------------------------------+----------+