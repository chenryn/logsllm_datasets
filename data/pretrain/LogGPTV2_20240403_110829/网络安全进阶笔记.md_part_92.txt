（//isCheckCode=true:）
postStr+=gcollection[1].Value;postStr+=*=*;
postStr += Server.UrlEncode(gcollection[2].Value);
poststr+*;
//从最后确认购买页面的源代码中提取表单数据
*n_prov=3700006n_city-370500un_area-370522s_fna.b._0.w=quicky4_fma.b._0.ac
250&cons1gmment=10x_fma.b._0.au=5s_fma.b._0.c=8s88-;
269
postStr-poatStr.Replace(*quantity=0*,
“quantity-1*）.Replace（_fma.b._0.d=您不必重复省-市-区信息：至少5个字，
_fma.b._0.po230031*).Replace(*_fma.b._0.de=*,
_fma.b._0.de=*+Server.Ur1Encode（**)）.Replace("_fma.b._0.u*,
._fma.b._0.u=o*).Replace(*_fma.b._0.di=1*,
_fma.b._0.di=370522*).Replace(*_fma.b._0.deli=*,
_fma.b._0.deli=13888888888*):
poststr+=*s_fma.b._0.s=2*;
return postStr;
通过类似的方法获取关键的信息。实现上述代码后，秒杀器效果如图9.32所示。
秒杀器
淘宝用户名：
南宝密码：
著
宝员地址：
检测拼抢购
图9.32秒杀器效果
在这个界面中，先输入淘宝的账户和密码，然后贴上宝贝的地址，单击“检测并抢购”按
---
## Page 458
第9章举一反三学语言：以.NET为例
钮即可。不妨在浏览器中设置禁止显示Flash动画和播放声音等，这样在自动刷新时也可以加
快网页加载速度。需要注意的是，代码中Socket获取页面的时候，有时候会存在获取不全的问
题，这就需要进一步研究调整线程的Sleep时间了.
当然，商家如果借虚假“秒杀”活动吸引买家参与，赚取“秒杀点”，消费者则很难发现
其中的猫腻，因此，普通人不使用秒杀器基本不会买到商品的，尽管不少站点宣称封杀秒杀器，
但是服务器端也不可能很准确地判断到底是人还是秒杀器在做这个事情，也许针对低级的抢拍
器是可以的，但是高级点的抢拍器仍然是望海兴叹。当然了，在这种猫腻的此消被长中，我们
也乐意看到更多的秒杀促销活动，这也是网络“秒杀”这一营销模式长远发展的必然要求。
9.3进阶实例：从基本语言到网络应用
9.3.1巧用ASP.NET实现验证码安全登录
如今，在国内外众多的博客发表评论或者在网站登录时，都需要输入验证码，这是为了防
止大量的垃圾回复或者防止个别用户反复登录尝试攻破密码。通过验证码，可以节约大量的服
务器资源。比如，使用十分普遍的QQ登录时，采用的是图片验证码，它是包含无规律字符信
息的图片。普通用户用肉眼就可以辨认其中的字符信息，但通过恶意软件自动登录的行为就会
被有效阻止。因此，了解验证码的实现机制，对于我们的日常安全应用会有很好的帮助作用。
1.解读验证码
顾名思义，所调验证码，就是将服务器端随机产生的一串数字或字母或符号或文字，生成
一幅图片。然后在图片里加上一些干扰像素防止OCR识别，由用户肉眼识别其中的验证码信
息，输入表单提交网站验证，验证成功后才能使用某些功能。例如，盗号者可能会通过被盗用
的号码发送垃圾广告、病毒，转移Q币、游戏点，诈骗用户的好友，甚至删除好友、退群、解
散群等动作，面验证码大大延缓了盗号者的这些伤害行为，将用户损失降到最低。在使用QQ
登录时，验证码的作用就显现出来了，通过验证码，可以及时有效地阻止盗号者大量登录盗取
的QQ号码。
目前验证码有以下几种基本形式：纯数字验证码：数字和字母混合验证码：汉字验证码，
这里采用数字和字母混合验证的形式。因此，使用验证码技术可有效防止利用机器人进行自动
批量注册，并能够阻止对网站使用特定破解程序以暴力破解方式进行不断非法登录尝试和灌水
的行为。通常情况下，使用验证码时，在服务器端会随机生成验证码字符申，保存在内存中，
并写入图片，发送给浏览器端显示：浏览器端输入验证码图片上的字符后，会提交服务器端：
最后，提交的字符和服务器端保存的该字符会比较是否一致，如果两者比较一致，就会继续，
否则将返回提示。
想当年，溯雪是早年大名鼎鼎的黑客神器“刀光雪影”之一，其功能就是暴力破解表单，
并赢得了很多黑客的青味。但是，由于验证码的横空出世，几乎把溯雪推向了死路。对于验证
码机制，网上的攻击手法都是利用数学方法分析图片。很多破解验证码的思路，就是每次登录
的地方访问一个脚本文件，该文件生成含验证码的图片并将值写入到Session里，提交的时候
---
## Page 459
网络安全进阶笔记
验证登录的脚本就会判断提交的验证码是否与Session里的一致。PowerEasy2005的管理员登
录页面就是个很好的实例，只要我们把首次访问的验证码辨认出来，以该会话Cookie值不断
提交就可以实现暴力破解了。一个使用溯雪破解的示例如图9.33所示。
TaerryBltf[//1/aoos//x
选兵存的源目
方A
Tyoe
Ded
品
Code 200302
ror:-sdmmooodoheckcode-3651ms
口%
HTTP Hd N cOCMCac
SOtecaCode-3051pmd
HTTP ead Nct Match OCMTCac.
UserameradrindpasswordevfdgtasCheckCode-365tgnd
UterNane*adtinlpasswordtdasOheckCodo-3i5:pmdA
HTTPHeNt Mc CTCc
HTTP Head Not Motch:OOMTCac.
UserNane-admindpasswordadloss8CheciCode-3651pn&Ac
HTTPNt c CTCac
Hadsr8CheckCode-3651pmActo
HTTPHed N Mat CaTCac
图9.33使用测雪破解的示例
由此可见，了解验证码的安全机制，对于网站的安全具有十分重要的作用。比如，对付上
述漏洞时，密码错误之后Session中的验证码值被置空，且每次检查验证码的时候，可以先检
查验证码值是否为空。
2.一个验证码案例的实现过程
为了增强理解，这里重点讲解一个ASP.NET的验证码实现过程。具体步骤如下。
(1）打开 Visual Studio .NET 软件，建立个Validatelmage.ashx 文件，用来产生验证码图
片。引入命名空间：
7/引入会名空间
using Syatem;
using Syatem.Web;
using System.Drawing:
定义类Validatelmage。其中，IHttpHandler接口定义了HTTP处理程序以同步方式处理一
个HTTP请求需要采取的行动。代码如下：
public class ValidateImage:IHttpHandler,
System.Web.SessionState.IRequiresSessionState
public void ProcessRequest （HttpContext context）（
//更换图片
context,Response.Cache.SetCacheability(HttpCacheability.NoCache);
//定义随机数字
string valid=*;
//生成包括验证码的图片
MemoryStream ms=Create（out valid):
//存储在Session中的验证码，用于验证
context.Session[*ValidateImage*]=valid;
//置空输出流
454.
---
## Page 460
第9章举一反三学语言：以.NET为例
context.Response.ClearContent():
//输出流格式
context.Response.ContentType"image/png*:
//输出
context.Response.BinaryWrite(ns.ToArray()):
context.Response.End():
///设置例子能否被多个请求共享（复用能提高性能）
1
public boolIsReusable（
get(
return false:
）
用来产生两位数的随机数分配的方法，代码如下：
///用来产生两位数的随机数分配的方法
private string RndNun（int VcodeNun)
//验证码可以显示的字符集
string Vchar-*1,2,3,4,5.6,7,8.9,a,b,c,d,e,f,g,h,j.k,m,n,D,q,r,8,
't,U,V,W,x.y.z,A,B,C,D,E,F,G,H,J.K,L,M,N,P.Q.R,S,T,U,V,W,X,Y,Z:
//拆分到一个数组中
string[]VcArray=Vchar.Split（new Char[1（,））;
//收集随机数
string VNum=*
//记录最后随机值，尽量避免同一随机数
int temp=-1:
Random rand=new Random(）:
//通过一个简单的算法，以确保不同的随机编号
for（int i=1;i<VcodeNum+1:i++）
if（tmp1=-1）
//初始化随机类
rand-new Random（1·temp*unchecked(（int)DateTime.Now.Ticks）);
//获得随机数
intt=rand.Next（55）:
if（tenp1-1&stemp-*t）
//如果获得随机数重复，然后递归调用
return RndNum(Vcodelum);
tenpt1
//随机数中位数加1
Vum+VcArray（t];
，
return VNum;
---
## Page 461
网络安全进阶笔记
生成随机数，并将其写入图像文件。代码如下：
publie MemoryStrean Create(out string VNun)
（）Npug-aA
Bitmap Ing-null;
Graphicsg-nul1;
MemoryStream ms-null;
Systen.Random random -new Random（）;
//设置贩色代码
Color(）c=(Color.Black,Color.Red,Color.DarkBlue,Color,Green,
Color.Browm,Color.DarkCyan,Color.Purple):
//代码字体集
stringll fonts.-
(*Verdana*,Microsoft Sans Serif′，*Comic Sans MS′,*Arial，*宋体·）;
//对图像大小的定义，生成图像的例子
Ing=new Bitmap(（int）vNum.Length•18,32）:
//从新的图像对象生成图片
g-Graphics.FromImage(Ing);
//设置白色背景
g.Clear(Color.White);
//在背景的随机位置画图