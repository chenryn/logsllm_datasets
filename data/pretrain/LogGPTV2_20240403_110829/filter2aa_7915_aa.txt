```plaintext
.\"  Copyright (c) 1990-2002 Info-ZIP.  All rights reserved.
.\"
.\"  See the accompanying file LICENSE, version 2000-Apr-09 or later
.\"  (the contents of which are also included in unzip.h) for terms of use.
.\"  If, for some reason, all these files are missing, the Info-ZIP license
.\"  also may be found at:  ftp://ftp.info-zip.org/pub/infozip/license.html
.\"
.\" zipinfo.1 by Greg Roelofs and others.
.\"
.\" =========================================================================
.\" Define .X macro (for long-line ZipInfo output examples; small Courier):
.de X
.nf
.ft CW
.ie n .ti -5
.el \{ .ti +2m
.ps -1 \}
\&\\$1
.ie n .ti +5
.el \{ .ti -2m
.ps +1 \}
.ft
.fi
..
.\" Define .EX/.EE (for multiline user-command examples; normal Courier font)
.de EX
.in +4n
.nf
.ft CW
..
.de EE
.ft
.fi
.in -4n
..
.\" =========================================================================
.TH ZIPINFO 1 "17 February 2002 (v2.4)" "Info-ZIP"
.SH NAME
zipinfo \- List detailed information about a ZIP archive
.PD
.SH "SYNOPSIS"
\fBzipinfo\fP [\fB\-12smlvhMtTz\fP] \fIfile.zip\fP [\fIfile(s)\fP\ .\|.\|.] [\fB\-x\fP\ \fIxfile(s)\fP\ .\|.\|.]
.PP
\fBunzip\fP \fB\-Z\fP [\fB\-12smlvhMtTz\fP] \fIfile.zip\fP [\fIfile(s)\fP\ .\|.\|.] [\fB\-x\fP\ \fIxfile(s)\fP\ .\|.\|.]
.PD
.\" =========================================================================
.SH "DESCRIPTION"
\fBzipinfo\fP lists detailed technical information about the files in a ZIP archive, similar to the output of MS-DOS systems. The information includes file permissions, encryption status, compression type, and the version and operating system of the compression program. By default, it lists one line per file, with summary information at the beginning and end of the listing. The output format is a blend of Unix's ``\fCls \-l\fR'' and ``\fCunzip \-v\fR''. For more details, see the section on \fBDetailed Description\fR below.

Note that \fBzipinfo\fP and \fBunzip\fP are the same program (in Unix, a symlink); however, support for \fBzipinfo\fP may be omitted in some systems.
.PD
.\" =========================================================================
.SH "ARGUMENTS"
.TP
.IR file [ .zip ]
The path to the ZIP archive. If the specified file is a wildcard, each matching file will be processed in the order determined by the operating system or file system. Only the filename can be a wildcard, not the path itself. Wildcard expressions are similar to Unix \fIegrep\fP(1) regular expressions and may include:
.RS
.IP *
Matches any sequence of zero or more characters.
.IP ?
Matches exactly one character.
.IP [.\|.\|.]
Matches any single character within the brackets; ranges can be specified using the first, hyphen, and last characters. If an exclamation mark or caret (`!' or `^') follows the left bracket, the complement of the set is matched (i.e., any character not in the set).
.RE
.IP
(If any characters are modified by the operating system, use quotes, especially in Unix or VMS.) If no matches are found, the specified content is treated as the original filename; if this fails, the \fC.zip\fR suffix is appended. Note that self-extracting ZIP files are supported; simply specify the \fC.exe\fR suffix explicitly.
.IP [\fIfile(s)\fP]
Specifies an optional list of files to process. Regular expressions (wildcards) can be used to match multiple members. As mentioned, use quotes if the expression might be expanded or modified by the operating system.
.IP [\fB\-x\fP\ \fIxfile(s)\fP]
Specifies an optional list of files to exclude from processing.
.\" =========================================================================
.SH "OPTIONS"
.TP
.B \-1
List only filenames, one per line. This option is mutually exclusive; header, footer, and compressed file information will not be output. It is useful in Unix shell scripts.
.TP
.B \-2
List only filenames, one per line, but allow header (\fB\-h\fP), footer (\fB\-t\fP), and compressed file information (\fB\-z\fP) to be output. This option may be useful when filenames are very long.
.TP
.B \-s
List compressed file information in the short format of Unix's ``\fCls \-l\fR''. This is the default; see below for details.
.TP
.B \-m
List compressed file information in the medium format of Unix's ``\fCls \-l\fR''. Similar to \fB\-s\fP, but it includes the compression ratio as a percentage.
.TP
.B \-l
List compressed file information in the long format of Unix's ``\fCls \-l\fR''. Similar to \fB\-m\fP, but the compression ratio is replaced by the size of the compressed file in bytes.
.TP
.B \-v
List compressed file information in a verbose, multi-page format.
.TP
.B \-h
List the header information, including the archive name, actual size in bytes, and number of files.
.TP
.B \-M
Output all information in an internal pager similar to Unix's \fImore\fP(1). At the end of the screen, \fBzipinfo\fP will pause and display a ``\-\-More\-\-'' prompt; press Enter (Return) or Space to view the next page. Press 'q' (or Enter/Return on some systems) to quit \fBzipinfo\fP. Unlike \fImore\fP, \fBzipinfo\fP does not have forward search and editing capabilities, and long lines at the end of the screen may not wrap effectively, causing some text to scroll off the top of the screen. On some systems, the number of visible lines on the screen cannot be determined, in which case \fBzipinfo\fP assumes 24 lines.
.TP
.B \-t
List total information for all or the requested files. Output the number of files, total sizes before and after compression, and the overall compression ratio. If only total information is printed, it gives the information for the entire archive. Note that the total compressed data size is always different from the actual size of the compressed file, as the latter includes all internal headers.
.TP
.B \-T
Sort and output file dates and times in decimal dot format (yymmdd.hhmmss). The default date format is a more standard, human-readable version using abbreviated month names (see below).
.TP
.B \-z
Include the archive description (if any).
.PD
.\" =========================================================================
.SH "DETAILED DESCRIPTION"
\fBzipinfo\fP operates in several modes, and mastering its use can be challenging even for those familiar with Unix's \fIls\fP(1). The default mode lists files in the following format:
.PP
.X "-rw-rws---  1.9 unx    2802 t- defX 11-Aug-91 13:48 perms.2660"
.PP
The last three fields are the file's modification date and time, followed by the filename. Filenames are case-sensitive, so files from MS-DOS PKZIP are always in uppercase. If the compressed file stored a pathname, it is displayed as part of the filename.
.PP
The second and third fields indicate that the file was compressed under Unix using version 1.9 of \fBzip\fP. Since it is from Unix, the file access permissions are displayed in Unix format. The uncompressed file size (2802 in this example) is given in the fourth field.
.PP
The fifth field contains two characters, each of which can take several values. The first character can be `t' or `b', indicating whether the file is text or binary; if the file is encrypted, \fBzipinfo\fP indicates this with an uppercase character (`T' or `B'). The second character can take four values, depending on the presence of a local header and/or an "extra" field associated with the file (see PKWare's APPNOTE.TXT for details). If neither exists, the field is a hyphen (`\-'); if there is an extended local header but no extra field, it is `l'; if there is an extra field but no extended local header, it is `x'; if both exist, it is `X'. Thus, the file in the example above is likely an unencrypted text file with no extra field or local header. The following example shows a binary file with extra information.
.PP
.X "RWD,R,R     0.9 vms     168 Bx shrk  9-Aug-91 19:15 perms.0644"
.PP
Extra fields are used for various purposes (see the discussion of the \fB\-v\fP option below), including the storage of VMS file attributes. Other possible uses include handling different operating systems (more accurately, file systems) such as OS/2 or NT with HPFS, MS-DOS, OS/2, or NT with FAT, and Macintosh. These are indicated as follows:
.PP
.X "-rw-a--     1.0 hpf    5358 Tl i4:3  4-Dec-91 11:33 longfilename.hpfs"
.X "-r--ahs     1.1 fat    4096 b- i4:2 14-Jul-91 12:58 EA DATA. SF"
.X "--w-------  1.0 mac   17357 bx i8:2  4-May-92 04:02 unzip.macr"
.PP
The file attributes in the first two examples are in a Unix-like format, with seven subfields indicating whether the file is (1) a directory, (2) readable (always), (3) writable, (4) executable (guessed based on extensions like \fI.exe\fP, \fI.com\fP, \fI.bat\fP, \fI.cmd\fP, and \fI.btm\fP), (5) has its archive bit set, (6) is hidden, and (7) is a system file. The interpretation of Macintosh files is less reliable, as some Macintosh archiving tools do not store any archive information.
.PP
Finally, the sixth field indicates the compression method and sub-method. There are six known methods: storing (no compression), reducing, shrinking, imploding, tokenizing (never publicly released), and deflating. Further, reducing has four levels (1 to 4); imploding has four types (4K or 8K sliding dictionary, and 2 or 3 Shannon-Fano trees); and deflating has four levels (super fast, fast, normal, maximum compression). \fBzipinfo\fP represents these methods and sub-methods as follows: \fIstor\fP; \fIre:1\fP, \fIre:2\fP, etc.; \fIshrk\fP; \fIi4:2\fP, \fIi8:3\fP, etc.; \fItokn\fP; and \fIdefS\fP, \fIdefF\fP, \fIdefN\fP, and \fIdefX\fP.
.PP
The medium and long list formats are almost identical to the short list, except they add information about file compression. The medium format includes the compression ratio as a percentage, representing the space saved:
.PP
.X "-rw-rws---  1.5 unx    2802 t- 81% defX 11-Aug-91 13:48 perms.2660"
.PP
```