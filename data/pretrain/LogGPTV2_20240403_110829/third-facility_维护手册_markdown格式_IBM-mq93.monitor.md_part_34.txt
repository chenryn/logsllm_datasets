==> EVENTS
An object name is required for Class(CHANNEL) Type(EVENTS)
Enter object name
==> /topic/push_topic_name
Publication received PutDate:20170215 PutTime:14513762 Interval:15.047 seconds
Total Events 1
298 Monitoring and Performance for IBM MQ
Results
You have used the amqsrua program interactively, by entering the class, type and object options in order
to see the total number of events for the specified push topic.
In this example, you can use the amqsrua to check the number of Salesforce push topics:
./amqsrua -m QM1 -p "\$SYS/Application/runmqsfb"
STATUS : Bridge Status
CHANNEL : Salesforce Event Name
Enter Class selection
==> STATUS
PUSHTOPIC : Push Topics
EVENTS : Platform Events
Enter Type selection
==> PUSHTOPIC
Publication received PutDate:20170315 PutTime:10123086 Interval:15.016 seconds
Total PushTopics 6
Unique PushTopics 3
Publication received PutDate:20170315 PutTime:10124588 Interval:15.012 seconds
Total PushTopics 14 1/sec
Unique PushTopics 7
In this example, you can use the amqsrua to check the number of IBM MQ created platform events:
./amqsrua -m QM1 -p "\$SYS/Application/runmqsfb"
STATUS : Bridge Status
CHANNEL : Salesforce Event Name
Enter Class selection
==> STATUS
PUSHTOPIC : Pushtopics
EVENTS : Platform Events
MQPE : MQ-created Platform Events
Enter Type selection
==> MQPE
Publication received PutDate:20170913 PutTime:12201271 Interval:15.018 seconds
Total MQ-created Platform Events 1
Unique MQ-created Platform Events 1
Failed publications of MQ-created Platform Events 0
Related tasks
Configuring IBM MQ for use with Salesforce push topics and platform events
“Monitoring system resource usage by using the amqsrua command” on page 288
You can use the amqsrua command to query performance data that is related to the system resource
usage of a queue manager.
Preparing and running sample programs on Windows
Preparing and running sample programs on UNIX and Linux
Related reference
runmqsfb (run IBM MQ Bridge to Salesforce)
Real-time monitoring
Real-time monitoring is a technique that allows you to determine the current state of queues and
channels within a queue manager. The information returned is accurate at the moment the command
was issued.
A number of commands are available that when issued return real-time information about queues and
channels. Information can be returned for one or more queues or channels and can vary in quantity.
Real-time monitoring can be used in the following tasks:
• Helping system administrators understand the steady state of their IBM MQ system. This helps with
problem diagnosis if a problem occurs in the system.
• Determining the condition of your queue manager at any moment, even if no specific event or problem
has been detected.
• Assisting with determining the cause of a problem in your system.
IBM MQ Monitoring and performance 299
With real-time monitoring, information can be returned for either queues or channels. The amount of
real-time information returned is controlled by queue manager, queue, and channel attributes.
• You monitor a queue by issuing commands to ensure that the queue is being serviced properly. Before
you can use some of the queue attributes, you must enable them for real-time monitoring.
• You monitor a channel by issuing commands to ensure that the channel is running properly. Before you
can use some of the channel attributes, you must enable them for real-time monitoring.
Real-time monitoring for queues and channels is in addition to, and separate from, performance and
channel event monitoring.
Attributes that control real-time monitoring
Some queue and channel status attributes hold monitoring information, if real-time monitoring is enabled.
If real-time monitoring is not enabled, no monitoring information is held in these monitoring attributes.
Examples demonstrate how you can use these queue and channel status attributes.
You can enable or disable real-time monitoring for individual queues or channels, or for multiple queues
or channels. To control individual queues or channels, set the queue attribute MONQ or the channel
attribute MONCHL, to enable or disable real-time monitoring. To control many queues or channels
together, enable or disable real-time monitoring at the queue manager level by using the queue manager
attributes MONQ and MONCHL. For all queue and channel objects with a monitoring attribute that is
specified with the default value, QMGR, real-time monitoring is controlled at the queue manager level.
Automatically defined cluster-sender channels are not IBM MQ objects, so do not have attributes in the
same way as channel objects. To control automatically defined cluster-sender channels, use the queue
manager attribute, MONACLS. This attribute determines whether automatically defined cluster-sender
channels within a queue manager are enabled or disabled for channel monitoring.
For real-time monitoring of channels, you can set the MONCHL attribute to one of the three monitoring
levels: low, medium, or high. You can set the monitoring level either at the object level or at the queue
manager level. The choice of level is dependent on your system. Collecting monitoring data might require
some instructions that are relatively expensive computationally, such as obtaining system time. To reduce
the effect of real-time monitoring, the medium and low monitoring options measure a sample of the
data at regular intervals rather than collecting data all the time. Table 30 on page 300 summarizes the
monitoring levels available for real-time monitoring of channels:
Table 30. Monitoring levels
Level Description Usage
Low Measure a small sample of the data, at For objects that process a high volume of
regular intervals. messages.
Medium Measure a sample of the data, at regular For most objects.
intervals.
High Measure all data, at regular intervals. For objects that process only a few messages
per second, on which the most current
information is important.
For real-time monitoring of queues, you can set the MONQ attribute to one of the three monitoring levels,
low, medium or high. However, there is no distinction between these values. The values all enable data
collection, but do not affect the size of the sample.
Examples
The following examples demonstrate how to set the necessary queue, channel, and queue manager
attributes to control the level of monitoring. For all of the examples, when monitoring is enabled, queue
and channel objects have a medium level of monitoring.
300 Monitoring and Performance for IBM MQ
1.To enable both queue and channel monitoring for all queues and channels at the queue manager level,
use the following commands:
ALTER QMGR MONQ(MEDIUM) MONCHL(MEDIUM)
ALTER QL(Q1) MONQ(QMGR)
ALTER CHL(QM1.TO.QM2) CHLTYPE(SDR) MONCHL(QMGR)
2.To enable monitoring for all queues and channels, with the exception of local queue, Q1, and sender
channel, QM1.TO.QM2, use the following commands:
ALTER QMGR MONQ(MEDIUM) MONCHL(MEDIUM)
ALTER QL(Q1) MONQ(OFF)
ALTER CHL(QM1.TO.QM2) CHLTYPE(SDR) MONCHL(OFF)
3.To disable both queue and channel monitoring for all queues and channels, with the exception of local
queue, Q1, and sender channel, QM1.TO.QM2, use the following commands:
ALTER QMGR MONQ(OFF) MONCHL(OFF)
ALTER QL(Q1) MONQ(MEDIUM)
ALTER CHL(QM1.TO.QM2) CHLTYPE(SDR) MONCHL(MEDIUM)
4.To disable both queue and channel monitoring for all queues and channels, regardless of individual
object attributes, use the following command:
ALTER QMGR MONQ(NONE) MONCHL(NONE)
5.To control the monitoring capabilities of automatically defined cluster-sender channels use the
following command:
ALTER QMGR MONACLS(MEDIUM)
6.To specify that automatically defined cluster-sender channels are to use the queue manager setting for
channel monitoring, use the following command:
ALTER QMGR MONACLS(QMGR)
Related concepts
“Real-time monitoring” on page 299
Real-time monitoring is a technique that allows you to determine the current state of queues and
channels within a queue manager. The information returned is accurate at the moment the command
was issued.
“Using IBM MQ online monitoring” on page 320
You can collect monitoring data for queues and channels (including automatically defined cluster-server
channels) by setting the MONQ, MONCHL, and MONACLS attributes.
Related tasks
“Displaying queue and channel monitoring data” on page 301
To display real-time monitoring information for a queue or channel, use either the IBM MQ Explorer or the
appropriate MQSC command. Some monitoring fields display a comma-separated pair of indicator values,
which help you to monitor the operation of your queue manager. Examples demonstrate how you can
display monitoring data.
Displaying and altering queue manager attributes
Monitoring (MONCHL)
Displaying queue and channel monitoring data
To display real-time monitoring information for a queue or channel, use either the IBM MQ Explorer or the
appropriate MQSC command. Some monitoring fields display a comma-separated pair of indicator values,
IBM MQ Monitoring and performance 301
which help you to monitor the operation of your queue manager. Examples demonstrate how you can
display monitoring data.
About this task
Monitoring fields that display a pair of values separated by a comma provide short term and long term
indicators for the time measured since monitoring was enabled for the object, or from when the queue
manager was started:
• The short term indicator is the first value in the pair and is calculated in a way such that more recent
measurements are given a higher weighting and will have a greater effect on this value. This gives an
indication of recent trend in measurements taken.
• The long term indicator in the second value in the pair and is calculated in a way such that more recent
measurements are not given such a high weighting. This gives an indication of the longer term activity
on performance of a resource.
These indicator values are most useful to detect changes in the operation of your queue manager. This
requires knowledge of the times these indicators show when in normal use, in order to detect increases in
these times. By collecting and checking these values regularly you can detect fluctuations in the operation
of your queue manager. This can indicate a change in performance.
Obtain real-time monitoring information as follows:
Procedure
1.To display real-time monitoring information for a queue, use either the IBM MQ Explorer or the MQSC
command DISPLAY QSTATUS, specifying the optional parameter MONITOR.
2.To display real-time monitoring information for a channel, use either the IBM MQ Explorer or the MQSC
command DISPLAY CHSTATUS, specifying the optional parameter MONITOR.
Example
The queue, Q1, has the attribute MONQ set to the default value, QMGR, and the queue manager that
owns the queue has the attribute MONQ set to MEDIUM. To display the monitoring fields collected for this
queue, use the following command:
DISPLAY QSTATUS(Q1) MONITOR
The monitoring fields and monitoring level of queue, Q1 are displayed as follows:
QSTATUS(Q1)
TYPE(QUEUE)
MONQ(MEDIUM)
QTIME(11892157,24052785)
MSGAGE(37)
LPUTDATE(2005-03-02)
LPUTTIME(09.52.13)
LGETDATE(2005-03-02)
LGETTIME(09.51.02)
The sender channel, QM1.TO.QM2, has the attribute MONCHL set to the default value, QMGR, and the
queue manager that owns the queue has the attribute MONCHL set to MEDIUM. To display the monitoring
fields collected for this sender channel, use the following command:
DISPLAY CHSTATUS(QM1.TO.QM2) MONITOR
The monitoring fields and monitoring level of sender channel, QM1.TO.QM2 are displayed as follows:
CHSTATUS(QM1.TO.QM2)
XMITQ(Q1)
CONNAME(127.0.0.1)
302 Monitoring and Performance for IBM MQ
CURRENT
CHLTYPE(SDR)
STATUS(RUNNING)
SUBSTATE(MQGET)
MONCHL(MEDIUM)
XQTIME(755394737,755199260)
NETTIME(13372,13372)
EXITTIME(0,0)
XBATCHSZ(50,50)
COMPTIME(0,0)
STOPREQ(NO)
RQMNAME(QM2)
Related concepts
“Real-time monitoring” on page 299
Real-time monitoring is a technique that allows you to determine the current state of queues and
channels within a queue manager. The information returned is accurate at the moment the command
was issued.
Related reference
DISPLAYQSTATUS
Monitoring queues
Use this page to view tasks that help you to resolve a problem with a queue and the application that
services that queue. Various monitoring options are available to determine the problem
Frequently, the first sign of a problem with a queue that is being serviced is that the number of messages
on the queue (CURDEPTH) increases. If you expect an increase at certain times of day or under certain
workloads, an increasing number of messages might not indicate a problem. However, if you have no
explanation for the increasing number of messages, you might want to investigate the cause.
You might have an application queue where there is a problem with the application, or a transmission
queue where there is a problem with the channel. Additional monitoring options are available when the
application that services the queue is a channel.
The following examples investigate problems with a particular queue, called Q1, and describe the fields
that you look at in the output of various commands:
Determining whether your application has the queue open
If you have a problem with a queue, check whether your application has the queue open
About this task
Perform the following steps to determine whether your application has the queue open:
Procedure
1.Ensure that the application that is running against the queue is the application that you expect. Issue
the following command for the queue in question:
DISPLAY QSTATUS(Q1) TYPE(HANDLE) ALL
In the output, look at the APPLTAG field, and check that the name of your application is shown. If the
name of your application is not shown, or if there is no output at all, start your application.
2.If the queue is a transmission queue, look in the output at the CHANNEL field.
If the channel name is not shown in the CHANNEL field, determine whether the channel is running.
3.Ensure that the application that is running against the queue has the queue open for input. Issue the
following command:
DISPLAY QSTATUS(Q1) TYPE(QUEUE) ALL
IBM MQ Monitoring and performance 303
In the output, look at the IPPROCS field to see if any application has the queue open for input. If the
value is 0 and this is a user application queue, make sure that the application opens the queue for
input to get the messages off the queue.
Checking that messages on the queue are available
If you have a large number of messages on the queue and your application is not processing any of those
messages, check whether the messages on the queue are available to your application
About this task
Perform the following steps to investigate why your application is not processing messages from the
queue:
Procedure
1.Ensure that your application is not asking for a specific message ID or correlation ID when it should be
processing all the messages on the queue.
2.Although the current depth of the queue might show that there is an increasing number of messages
on the queue, some messages on the queue might not be available to be got by an application,
because they are not committed; the current depth includes the number of uncommitted MQPUTs of
messages to the queue. Issue the following command:
DISPLAY QSTATUS(Q1) TYPE(QUEUE) ALL
In the output, look at the UNCOM field to see whether there are any uncommitted messages on the
queue.
3.If your application is attempting to get any messages from the queue, check whether the putting
application is committing the messages correctly. Issue the following command to find out the names
of applications that are putting messages to this queue:
DISPLAY QSTATUS(Q1) TYPE(HANDLE) OPENTYPE(OUTPUT)
4.Then issue the following command, inserting in appltag the APPLTAG value from the output of the
previous command:
DISPLAY CONN(*) WHERE(APPLTAG EQ appltag) UOWSTDA UOWSTTI
This shows when the unit of work was started and will help you discover whether the application
is creating a long running unit of work. If the putting application is a channel, you might want to
investigate why a batch is taking a long time to complete.
Checking whether your application is getting messages off the queue
If you have a problem with a queue and the application that services that queue, check whether your
application is getting messages off the queue
About this task
To check whether your application is getting messages off the queue, perform the following checks:
Procedure
1.Ensure that the application that is running against the queue is actually processing messages from the
queue. Issue the following command:
DISPLAY QSTATUS(Q1) TYPE(QUEUE) ALL
304 Monitoring and Performance for IBM MQ
In the output, look at the LGETDATE and LGETTIME fields which show when the last get was done from
the queue.
2.If the last get from this queue was longer ago than expected, ensure that the application is processing
messages correctly.
If the application is a channel, check whether messages are moving through that channel
Determining whether the application can process messages fast enough
If messages are building up on the queue, but your other checks have not found any processing problems,
check that the application can process messages fast enough. If the application is a channel, check that
the channel can process messages fast enough.
About this task
To determine whether the application is processing messages fast enough, perform the following tests:
Procedure
1.Issue the following command periodically to gather performance data about the queue:
DISPLAY QSTATUS(Q1) TYPE(QUEUE) ALL
If the values in the QTIME indicators are high, or are increasing over the period, and you have already
ruled out the possibility of long running Units of Work by checking that messages on the queue are
available, the getting application might not be keeping up with the putting applications.
2.If your getting application cannot keep up with the putting applications, consider adding another
getting application to process the queue.
Whether you can add another getting application depends on the design of the application and
whether the queue can be shared by more than one application. Features such as message grouping
or getting by correlation ID might help to ensure that two applications can process a queue
simultaneously.
Checking the queue when the current depth is not increasing
Even if the current depth of your queue is not increasing, it might still be useful to monitor the queue to
check whether your application is processing messages correctly.
About this task
To gather performance data about the queue: Issue the following command periodically:
Procedure
Issue the following command periodically:
DISPLAY QSTATUS(Q1) TYPE(QUEUE) MSGAGE QTIME
In the output, if the value in MSGAGE increases over the period of time, and your application is designed
to process all messages, this might indicate that some messages are not being processed at all.
Monitoring channels
Use this page to view tasks that help you to resolve a problem with a transmission queue and the channel
that services that queue. Various channel monitoring options are available to determine the problem.
Frequently, the first sign of a problem with a queue that is being serviced is that the number of messages
on the queue (CURDEPTH) increases. If you expect an increase at certain times of day or under certain
workloads, an increasing number of messages might not indicate a problem. However, if you have no
explanation for the increasing number of messages, you might want to investigate the cause.
IBM MQ Monitoring and performance 305
You might have a problem with the channel that services a transmission queue. Various channel
monitoring options are available to help you to determine the problem.
The following examples investigate problems with a transmission queue called QM2 and a channel called
QM1.TO.QM2. This channel is used to send messages from queue manager, QM1, to queue manager,
QM2. The channel definition at queue manager QM1 is either a sender or server channel, and the channel
definition at queue manager, QM2, is either a receiver or requester channel.
Determining whether the channel is running
If you have a problem with a transmission queue, check whether the channel is running.
About this task
Perform the following steps to check the status of the channel that is servicing the transmission queue:
Procedure
1.Issue the following command to find out which channel you expect to process the transmission queue
QM2:
DIS CHANNEL(*) WHERE(XMITQ EQ QM2)
In this example, the output of this command shows that the channel servicing the transmission queue
is QM1.TO.QM2
2.Issue the following command to determine the status of the channel, QM1.TO.QM2:
DIS CHSTATUS(QM1.TO.QM2) ALL
3.Inspect the STATUS field of the output from the CHSTATUS command:
• If the value of the STATUS field is RUNNING, check that the channel is moving messages
• If the output from the command shows no status, or the value of the STATUS field is STOPPED,
RETRY, BINDING, or REQUESTING, perform the appropriate step, as follows:
4.Optional: If the value of the STATUS field shows no status, the channel is inactive, so perform the
following steps:
a)If the channel should have been started automatically by a trigger, check that the messages on the
transmission queue are available.
If there are messages available on the transmission queue, check that the trigger settings on the
transmission queue are correct.
b)Issue the following command to start the channel again manually:
START CHANNEL(QM1.TO.QM2)
5.Optional: If the value of the STATUS field is STOPPED, perform the following steps:
a)Check the error logs to determine why the channel stopped. If the channel stopped owing to an
error, correct the problem.