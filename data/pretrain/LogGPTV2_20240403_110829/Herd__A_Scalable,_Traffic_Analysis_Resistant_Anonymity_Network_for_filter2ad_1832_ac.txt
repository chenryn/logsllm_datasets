### 3.5 Join Protocol

When a client wishes to join the system, it selects a zone and is redirected by that zone’s directory (hardcoded in the client software) to a mix within the zone. The client then establishes a symmetric key \( s \) with the mix, which is used for all subsequent communication. This key forms the outer layer of any onion circuit subsequently established by the client. Finally, the mix either adopts the client with a direct link or redirects the client to one or more superpeers (SPs) connected to the mix. The client then establishes either a single padded connection to the mix or \( k \) padded connections to the SPs, each encrypted with the symmetric key \( s \). In the event of a mix or superpeer failure, the client contacts another mix in the same zone and re-joins.

### 3.6 Superpeer Architecture

Herd's superpeer (SP) architecture is an optional component designed to enhance the system's scalability. While Herd can function without SPs, their inclusion can significantly reduce the client-side bandwidth load on mixes by a factor of up to \( n/a \), where \( a \) is the maximum number of active clients (i.e., those making calls) in a zone, and \( n \) is the number of online clients attached to a zone. In Herd, \( n/a \) is likely to be large (above 10) because clients have an incentive to remain online, both to receive calls at unexpected times and to prevent long-term intersection attacks.

SPs are well-connected, highly-available nodes with a public IP address. They invest resources to support the system altruistically or in exchange for free calls or payment. Like clients, SPs are assumed to be continuously available (modulo power/network outages). SPs are expected to perform in a way that keeps them in good standing with their mix; otherwise, they will be blacklisted. However, SPs are not otherwise trusted. An SP cannot decrypt the packets it forwards between clients and mixes, nor can it distinguish chaff packets from VoIP payload packets, thus preventing it from determining whether a client is active.

#### 3.6.1 Routing and Network Coding

An SP with \( c \) attached clients must route information from its mix link with a rate sufficient to carry \( r \) calls to its \( c \) client links, and vice versa, where \( c \geq r \). The goal is to do this without leaking information about clients' activity to the untrusted SPs.

**Downstream:**
The SP receives incoming packets in rounds of \( r \) packets, each containing VoIP payload for one of the \( r \) active clients. The mix forwards these packets so that each active client receives the packet destined for it. Clients attached to an SP are partitioned into \( r \) channels, and each packet in a round of \( r \) is forwarded to a different channel. Each packet includes the initialization vector (IV) used to encrypt it.

Each channel supports at most one active call. The active client can decode the packet it receives, while the remaining clients in the channel discard the packet as chaff. To reduce the risk of call blocking when the channel to which a client attaches is occupied, clients attach to \( k > 1 \) channels (possibly at multiple SPs). Figure 2(a) illustrates the operation of a channel in the downstream direction.

**Upstream:**
In the upstream direction, in each round, the SP receives a packet from each client attached to a channel. Since at most one client can be active in each channel, a simple form of network coding is used. The SP forwards to the mix the XOR of the client packets received in each of the \( r \) channels, of which at most one is a VoIP packet and the rest are chaff. Because the ciphertext of the chaff packets from idle clients is predictable to the mix (the cleartext contains a sequence number and the packets include the IVs), the mix can trivially recover the \( r \) payload packets from the \( r \) XORs it receives.

Along with each XOR packet, the client forwards the packet manifests that were attached to each client packet included in the XOR. Each manifest is 4 bytes long, encrypted with \( s \), and includes the client’s ID within the channel, packet sequence number, and a signaling bit. The information in the manifest enables the mix to quickly decode the XOR even in the case of lost or delayed packets, at the expense of slightly more bandwidth on the mix–SP links for the manifests. Figure 2(b) illustrates the operation of a channel in the upstream direction.

A malicious SP or client could deny service by sending an incorrect manifest or an unexpected chaff packet. In such cases, the mix asks the SP to send the full packets (which the SP is expected to buffer for a couple of rounds) from which the packets were computed, enabling the mix to identify, drop, and blacklist the culprit’s Herd account.

#### 3.6.2 Signaling

Mix and client signaling for incoming and outgoing calls is designed so that the SP does not learn when a call starts or ends, or which client is calling or being called.

**Incoming Call:**
For an incoming call, the mix chooses an available channel to which the callee attaches (if any) and encrypts downstream packets in the channel with the key \( s \) shared with the callee. The callee, like every client, tries to decrypt every incoming packet on each channel, is able to decrypt the information signaling an incoming call, responds on the same channel, and once it has accepted the call, receives VoIP packets for the duration of the call.

**Outgoing Call:**
For an outgoing call, the caller sets the signaling bit in the manifest of the chaff packets it sends to the mix via the SPs. The mix will respond on an available channel to which the caller attaches (if any), as in the case of an incoming call. The caller then provides signaling information for the desired outgoing call on the available channel.

#### 3.6.3 Channel Allocation

Mixes allocate joining clients to channels and incoming/outgoing calls to channels. Each client attaches to \( k \) channels. We find that \( k = 3 \) provides a good balance between blocking probability and client bandwidth overhead. The number of channels \( C \) per zone is chosen to exceed the expected number of active calls \( a \) within the zone during the busiest period, i.e., \( C \geq a \).

Dynamic changes to \( C \) to accommodate diurnal load variations have significant overheads due to clients changing channels and the risk of leaking information that could aid in long-term intersection attacks. Therefore, configuration changes occur infrequently and under administrator control, as necessary to accommodate changes in the client population and call volume.

The mix allocates a new client to \( k \) distinct channels using a greedy algorithm that picks \( k \) distinct channels randomly from the least occupied channels. Figure 3 shows an example configuration with 4 SPs, 6 clients, and \( k = 2 \).

An ideal configuration should enable any subset of \( C \) clients to make concurrent calls, imposing no constraints on the set of active clients. The toy configuration in Figure 3 has this property, but it is infeasible in large configurations for reasonable choices of \( k \) and \( C \). In practical configurations, the maximal number of concurrent calls varies among different subsets of \( C \) clients, depending on how many channels the subset collectively attaches to.

These connectivity limitations could be overcome by dynamically changing the association of clients to channels, but dynamic routing inevitably leaks information related to call activity, which could be used in intersection attacks. Therefore, Herd uses static allocations of clients to channels. Experimentally, we show in Section 4.1.6 that, despite the resulting connectivity constraints, the blocking probability remains good in practice.

**Dynamic Channel Allocation:**
When an outgoing/incoming call starts, the mix must dynamically allocate an available channel (if any) among the \( k \) channels to which the caller/callee attaches. This is an instance of the online bipartite matching problem. A simple, optimal algorithm exists for this problem [36]. It initially ranks all channels randomly and then allocates the available channel with the highest rank in each step.

#### 3.6.4 Superpeer Security

With the routing and coding scheme described above, a set of colluding SPs can learn the static assignment of clients to channels. The channel assignment reveals some constraints on the possible sets of active clients. Clearly, at most \( C \) clients can be active within the zone at any one time. Due to connectivity constraints, the maximal number of active calls for a specific set of \( C \) clients may be lower than \( C \) and known to an adversary. However, without information about call activity, this information is of little use to an adversary.

Call activity cannot be observed directly or indirectly either by the SPs or by an adversary with access to the network. A compromised SP can drop or delay encrypted packets it forwards, but mixes blacklist SPs that fail to meet a high standard of packet loss rate and jitter. Legitimate SPs that fail to meet the standard due to an unreliable network may require their clients to use error-correcting codes on their encrypted channels to the mix, thus reducing the effective loss rate to acceptable levels.

Superpeers maintain security invariant I8: Superpeers do not know which of its clients are active at any time. Moreover, an SP cannot manipulate the encrypted traffic of its clients without being banned.

### 3.7 Security

Next, we argue informally that Herd’s security invariants (summarized below) provide zone anonymity.

- **I1:** The encrypted content on successive links of a circuit is uncorrelated.
- **I2:** The interior mixes on a circuit know only the previous and next hop on the circuit.
- **I3:** The caller’s mix knows only the caller and the next mix on the circuit; the callee’s mix knows only the callee and the previous mix on the circuit.
- **I4:** A circuit includes two (not necessarily distinct) mixes in each of the caller and callee’s zones. Given I2, this implies that, from the perspective of a mix in the caller’s zone, the callee is equally likely to attach to any of the mixes in the callee’s zone, and vice versa.
- **I5:** Any mix in a client’s zone is equally likely to be the client’s rendezvous mix. Thus, knowledge of a client’s rendezvous mix does not reveal any information about which mix the client attaches to.
- **I6:** The time series of encrypted packets on successive links of a circuit is uncorrelated with the VoIP payload carried by the circuit.
- **I7:** Manipulating the time series of encrypted traffic on a network link does not affect the time series of encrypted traffic on downstream links.
- **I8:** Superpeers do not know which of its clients are active at any time. Moreover, an SP cannot manipulate the encrypted traffic of its clients without being banned.

Invariants I2–I5 jointly maintain zone anonymity for a caller even if the callee’s zone is compromised, and vice versa. I1 and I6 maintain zone anonymity in the presence of a global, passive eavesdropper. I7 maintains zone anonymity despite an active network attacker. Invariant I8 maintains zone anonymity despite compromised SPs. A formal analysis of Herd’s security properties remains as future work.

**Specific Attacks and Defenses:**

- **Passive Traffic Analysis Attack:** The traffic rate on links does not depend on individual payload flows. Short-term traffic analysis is therefore unproductive. Furthermore, the overlay topology is independent of the underlying workload, making it impossible for the adversary to determine which clients are communicating, even over long periods.
- **Active Traffic Analysis Attack:** The adversary manipulates the flow of encrypted, chaffed Herd traffic by delaying, dropping, or replaying packets, or by shutting down or causing the intermittent failure of clients, SPs, or mixes. This has no impact on the rate of the downstream chaffed traffic, so it does not help the adversary to trace payload flows. For that, the adversary would need access to a client’s payload flow at the other end of a Herd circuit, which is ruled out by our threat model. Herd’s design makes it hard to exploit SPs for active attacks even if the attacker has access to the payload flow on the other end, because mixes ban SPs that manifest significant jitter or packet loss.
- **Compromised Caller/Callee:** The rendezvous mechanism ensures that compromised callers or callees cannot learn anything other than the zone of their communication partner from the system. A compromised participant could try to estimate the distance to their peer by measuring the round-trip latency on the audio channel. As part of future work, we plan to investigate if such an attack is feasible. If so, it should be possible to add artificial delay up to the boundaries of the call’s MOS quality level, as predicted by the E-Model [34].
- **Long-Term Intersection Attacks:** In Section 4.1.5, we show experimentally the power of long-term intersection attacks against unanonymized voice calls. Herd makes such attacks unproductive because it makes it impossible to observe when a user makes a call. Since users are online virtually all the time, an adversary cannot even observe significant periods during which a client could not make a call.
- **Sybil Attacks:** Like all open anonymous communication systems, Herd is susceptible to Sybil attacks, where an adversary controls a large number of clients or superpeers. SPs cannot observe which of their clients are active, so an adversary who controls SPs can learn only static, weak constraints on the possible sets of concurrently active clients, which are not useful without information about call activity. If the adversary manages to control a large fraction of the clients attached to a zone, they can reduce the anonymity of the remaining legitimate clients proportionally. Since zones serve a large geographic area and user community, such an attack would be difficult even with large amounts of resources. Another approach for an adversary is to control all but one of the clients within an SP channel, leaving the remaining legitimate client as the only possible active user. However, such an attack would be difficult because the mix controls which SPs a client attaches to.

An adversary can also use Sybils to deny service. As described above, a misbehaving client or SP can be detected and blacklisted by the mix. To circumvent the blacklist, the adversary has to register a new account from a new IP address and using a different payment channel, making such attacks costly and impractical.