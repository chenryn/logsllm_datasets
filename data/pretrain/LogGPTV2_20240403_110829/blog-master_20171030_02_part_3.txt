                                                'WHERE NOT EXISTS (SELECT * FROM upsert) ' ||  
                                                        'AND to_attnum(' || relname || ', ' || attname || ') IS NOT NULL '  
                                                        'AND to_atttype(' || relname || ', ' || attname || ') = ' || atttype || ') '  
                                   'INSERT INTO pg_catalog.pg_statistic SELECT * FROM ins;';  
                        for i in 1..ncols loop  
                                in_args := in_args || '%s';  
                                if i != ncols then  
                                        in_args := in_args || ', ';  
                                end if;  
                        end loop;  
                        for j in 1..4 loop  
                                for i in 1..5 loop  
                                        up_args := up_args || format('%s%s = %%s', stacols[j], i);  
                                        if i * j != 20 then  
                                                up_args := up_args || ', ';  
                                        end if;  
                                end loop;  
                        end loop;  
                        cmd := format(cmd, up_args, in_args);   --prepare template for main query  
                        staop := array[format(fstaop, quote_literal(to_schema_qualified_operator(r.staop1))),  
                                                   format(fstaop, quote_literal(to_schema_qualified_operator(r.staop2))),  
                                                   format(fstaop, quote_literal(to_schema_qualified_operator(r.staop3))),  
                                                   format(fstaop, quote_literal(to_schema_qualified_operator(r.staop4))),  
                                                   format(fstaop, quote_literal(to_schema_qualified_operator(r.staop5)))];  
                        stanum := array[r.stanumbers1::text,  
                                                        r.stanumbers2::text,  
                                                        r.stanumbers3::text,  
                                                        r.stanumbers4::text,  
                                                        r.stanumbers5::text];  
                        for i in 1..5 loop  
                                if stanum[i] is null then  
                                        stanum[i] := 'NULL::real[]';  
                                else  
                                        stanum[i] := '''' || stanum[i] || '''::real[]';  
                                end if;  
                        end loop;  
                        if r.stavalues1 is not null then  
                                staval[1] := format(arr_in, quote_literal(r.stavalues1),  
                                                                        quote_literal(  
                                                                                to_schema_qualified_type(  
                                                                                        anyarray_elemtype(r.stavalues1))));  
                        else  
                                staval[1] := 'NULL::anyarray';  
                        end if;  
                        if r.stavalues2 is not null then  
                                staval[2] := format(arr_in, quote_literal(r.stavalues2),  
                                                                        quote_literal(  
                                                                                to_schema_qualified_type(  
                                                                                        anyarray_elemtype(r.stavalues2))));  
                        else  
                                staval[2] := 'NULL::anyarray';  
                        end if;  
                        if r.stavalues3 is not null then  
                                staval[3] := format(arr_in, quote_literal(r.stavalues3),  
                                                                        quote_literal(  
                                                                                to_schema_qualified_type(  
                                                                                        anyarray_elemtype(r.stavalues3))));  
                        else  
                                staval[3] := 'NULL::anyarray';  
                        end if;  
                        if r.stavalues4 is not null then  
                                staval[4] := format(arr_in, quote_literal(r.stavalues4),  
                                                                        quote_literal(  
                                                                                to_schema_qualified_type(  
                                                                                        anyarray_elemtype(r.stavalues4))));  
                        else  
                                staval[4] := 'NULL::anyarray';  
                        end if;  
                        if r.stavalues5 is not null then  
                                staval[5] := format(arr_in, quote_literal(r.stavalues5),  
                                                                        quote_literal(  
                                                                                to_schema_qualified_type(  
                                                                                        anyarray_elemtype(r.stavalues5))));  
                        else  
                                staval[5] := 'NULL::anyarray';  
                        end if;  
                        --DEBUG  
                        --staop := array['{arr}', '{arr}', '{arr}', '{arr}', '{arr}'];  
                        --stanum := array['{num}', '{num}', '{num}', '{num}', '{num}'];  
                        --staval := array['{val}', '{val}', '{val}', '{val}', '{val}'];  
                        result := format(cmd,  
                                                         r.stanullfrac,  
                                                         r.stawidth,  
                                                         r.stadistinct,  
                                                         -- stakind  
                                                         r.stakind1, r.stakind2, r.stakind3, r.stakind4, r.stakind5,  
                                                         -- staop  
                                                         staop[1], staop[2], staop[3], staop[4], staop[5],  
                                                         -- stanumbers  
                                                         stanum[1], stanum[2], stanum[3], stanum[4], stanum[5],  
                                                         -- stavalues  
                                                         staval[1], staval[2], staval[3], staval[4], staval[5],  
                                                         -- first 6 columns  
                                                         format('%s::regclass', relname),  
                                                         format('to_attnum(%s, %s)', relname, attname),  
                                                         '''' || r.stainherit || '''::boolean',  
                                                         r.stanullfrac || '::real',  
                                                         r.stawidth || '::integer',  
                                                         r.stadistinct || '::real',  
                                                         -- stakind  
                                                         r.stakind1, r.stakind2, r.stakind3, r.stakind4, r.stakind5,  
                                                         -- staop  
                                                         staop[1], staop[2], staop[3], staop[4], staop[5],  
                                                         -- stanumbers  
                                                         stanum[1], stanum[2], stanum[3], stanum[4], stanum[5],  
                                                         -- stavalues  
                                                         staval[1], staval[2], staval[3], staval[4], staval[5]);  
                        return next result;  
                end loop;  
                return;  
        END;  
$$ LANGUAGE plpgsql;  
```  
我们甚至可以将Oracle数据库的统计信息，平移到PG数据库，对齐需要的元素即可：    
记录数、占用多少个数据块。每列的空值比例、平均列宽、唯一值比例或个数、高频值以及频率、柱状图分布、存储相关性、多值列（高频元素及比例、元素柱状图分布）。    
好处：在迁移ORACLE数据时，可以关闭autovacuumm（提高导入速度），通过这种方法来导入统计信息。（只要元素对应即可，当然有些元素可能是ORACLE中不采集的，比如多值列的统计信息）。    
## 参考    
https://github.com/postgrespro/postgrespro/tree/PGPRO9_6/contrib/dump_stat    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")