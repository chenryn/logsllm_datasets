Currently, if a static_argnums or static_argname doesn't exist for the
function, nothing happens  
This can be an issue if a function is updated but the jax.jit not being
updated
    import jax
    import functools
    @functools.partial(jax.jit, static_argnames=('b', 'd'))
    def f(a, b, c):
        return a + b + c
    print(f(1., 2., 3.))
    @functools.partial(jax.jit, static_argnums=(1, 3))
    def g(a, b, c):
        return a + b + c
    print(g(1., 2., 3.))
I propose that a warning is raised if an arg num or arg name doesn't exist
such that code will still run if the arg num or name doesn't exist but the
programmer is made aware of the issue (and can silence if necessary)  
Is there a good reason for this not existing already?
[x] I can't find a previous issue on this