o
h
r
e
p
s
t
s
e
u
q
e
R
f
o
#
r
u
o
h
r
e
p
s
t
s
e
u
q
e
R
f
o
#
r
u
o
h
r
e
p
s
t
s
e
u
q
e
R
f
o
#
 0
Sat 11/15
00:00
Sat 11/22
00:00
Sat 11/29
00:00
Sat 12/06
00:00
Sat 12/13
00:00
Time
Sat 12/20
00:00
Sat 12/27
00:00
Sat 01/03
00:00
Sat 01/10
00:00
Figure 4: Per hour application-layer request arrivals for
Hugged, Holiday Cheers and The Streets. All three applica-
tions show a diurnal pattern.
based on our two most popular applications: Hugged and Holiday
Cheers, and the least popular application, The Streets. As we estab-
lished in Section 4.1, these applications are fairly representative of
top Facebook applications, and our ﬁndings from these applications
are therefore relevant to third-party applications on Facebook.
(1) The server loads, measured in terms of number of user re-
quests, follow a diurnal pattern, and show different growth pat-
terns depending on the popularity and seasonal nature of the ap-
plications. Already popular applications attract more new users
— exhibiting preferential attachment phenomena. Figure 4 shows
hourly request arrivals for three applications: Hugged, Holiday
Cheers, and The Streets. We observed a diurnal pattern in the ar-
rival process for all three. However, the request arrival rate, and
its evolution over time, was vastly different due to the different
popularity levels. The Hugged application provides an insight into
the request arrival pattern for an extremely popular application that
has a relatively mature subscription base. Even though Holiday
Cheers and The Streets are examples of recently launched applica-
tions, they have widely different growth patterns. Holiday Cheers,
being a seasonal application, showed viral growth during the holi-
68s
t
s
e
u
q
e
r
n
o
i
t
a
l
l
a
t
s
n
i
f
o
#
s
t
s
e
u
q
e
r
n
o
i
t
a
l
l
a
t
s
n
i
f
o
#
 10000
 1000
 100
 10
 10
 10000
 1000
 100
 10
 1
 1
Hugged
 100
 1000
 10000
# of requests from installed users
Holiday Cheers
 10
 1000
# of requests from installed users
 100
 10000
Figure 5: Installation requests vs. Requests from authorized
application users for Hugged (top) and Holiday Cheers (bot-
tom). A high correlation coefﬁcient between these two signals
some kind of preferential attachment process at work for ap-
plication growth.
day season (Thanksgiving, Christmas, and New Year). The Streets
is essentially a gaming application and did not attain the same level
of popularity as Holiday Cheers. This shows how targeting applica-
tion content to time of the year can play a crucial role in the growth
of an application.
To further understand what contributes to the busy period (high
load) at the application servers, we divided the request arrivals
into two categories: requests from users that have already installed
the application, and new installation requests. Figure 5 shows a
positive correlation between new installation requests and requests
from authorized application users. This suggests that increased us-
age of social network applications begets more users, indicating
some kind of preferential attachment model at work. This con-
tributes to the increased load during busy periods, as there is not
only a higher number of requests from regular users, but also a
larger number of new application installation requests. Another in-
dication of load that we analyzed was the request inter-arrival time
at the application servers. We consider all incoming requests (irre-
spective of their type, or which client they belong to) to get an idea
of the global request inter-arrival pattern seen by the application
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
F
D
C
 0
 0
 0.2
 0.4
 0.6
 0.8
 1
Hugged
Holiday Cheers
The Streets
 1.4
 1.6
 1.2
 1.8
 2
Application Server Processing Delay (sec)
Figure 6: Distribution of application server processing delay.
Hugged, being a more popular application, had a larger 𝑑𝑝.
server. We found that for Hugged, the inter-arrival time follows an
exponential distribution, with a mean of 0.4 seconds.
(2) Queuing delay is negligible, while processing delays correlate
positively with loads and are affected by resource provisioning.
We found that 𝑑𝑞 at the application servers was less than 20ms on
average, and had approximately the same distribution across appli-
cations. Figure 6 shows the distribution of 𝑑𝑝 for various applica-
tions: Hugged had a larger 𝑑𝑝 than the other two. Since Hugged is
more mature, with a larger user base, we expect that higher server
load may be the reason behind the larger processing delay.
Next, we correlated the observed load with the application server
delays. While 𝑑𝑞 was negligible, we did observe a small number of
dropped requests on the application servers. The drop rate peaked
during periods of high load (∼ 2.6%). Figures 7 and 8 show how
the load on the servers impacts 𝑑𝑝. For Hugged, 𝑑𝑝 showed a pos-
itive correlation with load and shows a diurnal pattern. While the
current provisioning at the application server for Hugged seems to
be adequate, an increase in the popularity of the application may
mandate more resources. For Holiday Cheers, we saw an initial in-
crease in 𝑑𝑝, with increasing user base, during the ﬁrst week after
the application was launched (11/15 ∼ 11/22). On Nov 23rd, ap-
plication servers were upgraded: from sharing 4GB memory with
two other applications, Hugged now shared 8GB with one other ap-
plication, while Holiday Cheers had dedicated 4GB memory. The
impact of this is clearly visible in Figure 8 for Holiday Cheers: sub-
sequent to the upgrade, 𝑑𝑝 no longer increased with load or across
time, despite the viral growth of the application.
(3) Request response sizes remain stable across time, indepen-
dent of load. For each application, we extract the response size
associated with each individual request from the OSN server to
the application server as follows. Using the tcpdump logs, we ob-
tain the time stamp for the request arrival and the source IP/port
from which the request was sent. We then look at the packets that
were sent back to this IP/port from the application server follow-
ing the request. These packets constitute the response, and contain
the client data. For example, for Hugged, this data would con-
tain previous hugs that the client has sent and received. The re-
sponse sizes should be larger for more mature applications because
(a) they have a larger user base, and (b) individual users may have
more application-related data (such as activity history). Our results
69)
e
l
a
c
s
g
o
l
(
y
a
l
e
D
g
n
i
s
s
e
c
o
r
P
r
e
v
r
e
S
.
p
p
A
 10
 1
Request Arrivals
Processing Delay
 22000
 20000
 18000
 16000
 14000
 12000
 10000
 8000
 6000
 4000
s
t
s
e
u
q
e
r
f
o
#
 0.1
Sat 11/15
00:00
Sat 11/22
00:00
Sat 11/29
00:00
Sat 12/06
00:00
Sat 12/20
00:00
Sat 12/27
00:00
Sat 01/03
00:00
Sat 12/13
00:00
Time
 2000
Sat 01/10
00:00
Figure 7: Variation of 𝑑𝑝 with load for Hugged. The 𝑑𝑝 showed
a positive correlation with the load on the application server.
)
e
l
a
c
s
g
o
l
(
y
a
l
e
D
g
n
i
s
s
e
c
o
r
P
r
e
v
r
e
S
.
p
p
A
Request Arrivals
Processing Delay
 10
 1
 16000
 14000
 12000
 10000
 8000
 6000
 4000
 2000
s