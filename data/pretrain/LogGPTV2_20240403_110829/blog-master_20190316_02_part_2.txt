当一个QUERY涉及的所有数据(表、...)在单个计算节点时，那么citus可以将这个QUERY下发给这个计算节点。这种情况下可以使用router 执行器。  
Although Citus supports a large percentage of SQL functionality even for cross-node queries, the advantage of router execution is 100% SQL coverage. Queries executing inside a node are run in a full-featured PostgreSQL worker instance. The disadvantage of router execution is the reduced parallelism of executing a query using only one computer.  
router执行器的好处：支持所有SQL（与单节点的PG无异）。坏处，没有了并行能力，同一时刻只能用一个计算节点。  
### Task Tracker Executor  
The task tracker executor is well suited for long running, complex data warehousing queries. This executor opens only one connection per worker, and assigns all fragment queries to a task tracker daemon on the worker. The task tracker daemon then regularly schedules new tasks and sees through their completion. The executor on the coordinator regularly checks with these task trackers to see if their tasks completed.  
任务跟踪执行器，显然它是以任务调度的形式执行QUERY碎片的。适合长时间执行的QUERY，数仓的QUERY。任务跟踪执行器与每一个计算节点建立一个连接，同时任务跟踪执行器需要将QUERY碎片指派给在计算节点中的任务执行后台进程。  
计算节点上的任务执行后台进程，负责调度执行从coordinator上的任务执行器发过来的QUERY碎片，并且更新QUERY碎片的执行状态。coordinator上的任务跟踪执行器，规律性的检查所有计算节点上的任务执行情况，查看query碎片是否执行完毕。  
Each task tracker daemon on the workers also makes sure to execute at most citus.max_running_tasks_per_node concurrently. This concurrency limit helps in avoiding disk I/O contention when queries are not served from memory. The task tracker executor is designed to efficiently handle complex queries which require repartitioning and shuffling intermediate data among workers.  
通过citus.max_running_tasks_per_node参数，可以控制每个计算节点上的任务跟踪后台进程的任务执行并行度，确保不会把资源打爆。（因为通常大的QUERY碎片才会使用任务跟踪执行器执行，都是很耗费资源的QUERY碎片（IO，CPU，MEMORY等），甚至数据重分布等）  
## 小结  
用户与citus集群交互时，连接到citus集群的coordinator节点，coordinator节点存有元数据（表结构，分布键，shard数，co-locate组信息等），coordinator收到用户SQL请求后，分布式planner将SQL请求拆分成两个部分，一个部分在coordinator执行(分布式执行器)，另一个部分包含了query rewrite后的query碎片，它们在计算节点中执行(citus分布式JOIN函数（可选，用于数据重分布），或者直接给到PostgreSQL原生query planner)。  
coordinator分布式执行器负责监测计算节点的执行结果，接收，合并，返回给客户端。如果使用了分片表的副本功能（postgresql logical replication)，如果执行过程中存在异常的shard replica，在有其他正常shard replica的情况下，分布式执行器还会负责做failover(使用正常shard replica)，并将异常的shard replica标记为invalid，用于保证数据一致性。  
所以citus开启多副本时，有一定的容错能力。  
citus有三种分布式执行器：  
1、real-time，这种执行器适合简单SQL，执行器与每个shard建立一个连接，如果table的shard很多，很容易打爆系统资源，数据库连接数。建议加大OS资源限制，同时建议使用连接池连接计算节点。  
2、router，当一个QUERY可下发到单一计算节点执行时，可以启用router 执行器，这个执行器的好处是支持所有SQL，坏处是无法使用CITUS的分布式并行能力（因为只用了单个节点）。  
3、task tracker，每个执行器与每一个计算节点建立连接，每个计算节点上，开启一个task tracker daemo后台进程，后台进程负责调度由coordinator发送过来的QUERY碎片，每个计算节点可同时执行的调度任务的并行度取决于参数citus.max_running_tasks_per_node。 计算节点上的后台进程，负责调度，同时负责更新QUERY碎片执行的结果，状态。coordinator task tracker执行器，会监测计算节点中QUERY碎片的执行状态，当执行完成后，接受结果，合并结果，返回给客户端。task tracker 执行器，适合大的QUERY，例如分析QUERY。  
## 参考    
http://docs.citusdata.com/en/v8.1/develop/reference_processing.html#citus-query-processing  
[《PostgreSQL sharding : citus 系列7 - topn 加速(```count(*) group by order by count(*) desc limit x```) (use 估值插件 topn)》](../201809/20180914_01.md)      
[《PostgreSQL sharding : citus 系列6 - count(distinct xx) 加速 (use 估值插件 hll|hyperloglog)》](../201809/20180913_04.md)      
[《PostgreSQL sharding : citus 系列5 - worker节点网络优化》](../201809/20180905_02.md)      
[《PostgreSQL sharding : citus 系列4 - DDL 操作规范 (新增DB，TABLE，SCHEMA，UDF，OP，用户等)》](../201809/20180905_01.md)      
[《PostgreSQL 11 相似图像搜索插件 imgsmlr 性能测试与优化 3 - citus 8机128shard (4亿图像)》](../201809/20180904_04.md)      
[《Deepgreen(Greenplum) 多机部署测试 , TPC-H VS citus》](../201809/20180903_02.md)      
[《PostgreSQL sharding : citus 系列3 - 窗口函数调用限制 与 破解之法(套用gpdb执行树,分步执行)》](../201809/20180902_01.md)      
[《PostgreSQL sharding : citus 系列2 - TPC-H》](../201808/20180829_01.md)      
[《PostgreSQL citus, Greenplum  分布式执行计划 DEBUG》](../201808/20180828_01.md)      
[《PostgreSQL sharding : citus 系列1 - 多机部署（含OLTP(TPC-B)测试）》](../201808/20180824_02.md)      
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")