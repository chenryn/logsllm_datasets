sales_asia | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(10 rows)
The following command creates a table (n_america) that matches the definition of the
sales table:
CREATE TABLE n_america
(
dept_no number,
part_no varchar2,
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 385
Database Compatibility for Oracle® Developers Guide
country varchar2(20),
date date,
amount number
);
The following command adds data to the n_america table. The data conforms to the
partitioning rules of the americas partition:
INSERT INTO n_america VALUES
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
(30, '7588b', 'CANADA', '14-Dec-2012', '50000'),
(30, '9519b', 'CANADA', '01-Feb-2012', '75000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2012', '4950'),
(40, '4788a', 'US', '23-Sept-2012', '4950'),
(40, '4788b', 'US', '09-Oct-2012', '15000');
The following command swaps the table into the partitioned table:
ALTER TABLE sales
EXCHANGE PARTITION americas
WITH TABLE n_america;
Querying the sales table shows that the contents of the n_america table has been
exchanged for the content of the americas partition:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
----------------+---------+---------+----------+--------------------+--------
sales_americas | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_americas | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_americas | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_americas | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_americas | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_americas | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(17 rows)
Querying the n_america table shows that the row that was previously stored in the
americas partition has been moved to the n_america table:
acctg=# SELECT tableoid::regclass, * FROM n_america;
tableoid | dept_no | part_no | country | date | amount
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 386
Database Compatibility for Oracle® Developers Guide
-----------+---------+---------+---------+--------------------+--------
n_america | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
(1 row)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 387
Database Compatibility for Oracle® Developers Guide
10.3.7 ALTER TABLE… MOVE PARTITION
Use the ALTER TABLE… MOVE PARTITION command to move a partition to a different
tablespace. The command takes two forms.
The first form moves a partition to a new tablespace:
ALTER TABLE table_name
MOVE PARTITION partition_name
TABLESPACE tablespace_name;
The second form moves a subpartition to a new tablespace:
ALTER TABLE table_name
MOVE SUBPARTITION subpartition_name
TABLESPACE tablespace_name;
Description
The ALTER TABLE…MOVE PARTITION command moves a partition from its current
tablespace to a different tablespace. The ALTER TABLE… MOVE PARTITION command
can move partitions of a LIST, RANGE or HASH partitioned table.
The same behavior as previously described applies for the subpartition_name used
with the MOVE SUBPARTITION clause.
You must own the table to invoke ALTER TABLE… MOVE PARTITION or ALTER
TABLE… MOVE SUBPARTITION.
Parameters
table_name
The name (optionally schema-qualified) of the table in which the partition or
subpartition resides.
partition_name
The name of the partition to be moved.
subpartition_name
The name of the subpartition to be moved.
tablespace_name
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 388
Database Compatibility for Oracle® Developers Guide
The name of the tablespace to which the partition or subpartition will be moved.
10.3.7.1 Example - Moving a Partition to a Different Tablespace
The following example moves a partition of the sales table from one tablespace to
another. First, create the sales table with the command:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY RANGE(date)
(
PARTITION q1_2012 VALUES LESS THAN ('2012-Apr-01'),
PARTITION q2_2012 VALUES LESS THAN ('2012-Jul-01'),
PARTITION q3_2012 VALUES LESS THAN ('2012-Oct-01'),
PARTITION q4_2012 VALUES LESS THAN ('2013-Jan-01') TABLESPACE ts_1,
PARTITION q1_2013 VALUES LESS THAN ('2013-Mar-01') TABLESPACE ts_2
);
Querying the ALL_TAB_PARTITIONS view confirms that the partitions reside on the
expected servers and tablespaces:
acctg=# SELECT partition_name, tablespace_name FROM ALL_TAB_PARTITIONS;
partition_name | tablespace_name
----------------+-----------------
Q1_2012 |
Q2_2012 |
Q3_2012 |
Q4_2012 | TS_1
Q1_2013 | TS_2
(5 rows)
After preparing the target tablespace, invoke the ALTER TABLE… MOVE PARTITION
command to move the q1_2013 partition from a tablespace named ts_2 to a tablespace
named ts_3:
ALTER TABLE sales MOVE PARTITION q1_2013 TABLESPACE ts_3;
Querying the ALL_TAB_PARTITIONS view shows that the move was successful:
acctg=# SELECT partition_name, tablespace_name FROM ALL_TAB_PARTITIONS;
partition_name | tablespace_name
----------------+-----------------
Q1_2012 |
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 389
Database Compatibility for Oracle® Developers Guide
Q2_2012 |
Q3_2012 |
Q4_2012 | TS_1
Q1_2013 | TS_3
(5 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 390
Database Compatibility for Oracle® Developers Guide
10.3.8 ALTER TABLE… RENAME PARTITION
Use the ALTER TABLE… RENAME PARTITION command to rename a table partition. The
syntax takes two forms.
The first form renames a partition:
ALTER TABLE table_name
RENAME PARTITION partition_name
TO new_name;
The second form renames a subpartition:
ALTER TABLE table_name
RENAME SUBPARTITION subpartition_name
TO new_name;
Description
The ALTER TABLE… RENAME PARTITION command renames a partition.
The same behavior as previously described applies for the subpartition_name used
with the RENAME SUBPARTITION clause.
You must own the specified table to invoke ALTER TABLE… RENAME PARTITION or
ALTER TABLE… RENAME SUBPARTITION.
Parameters
table_name
The name (optionally schema-qualified) of the table in which the partition or
subpartition resides.
partition_name
The name of the partition to be renamed.
subpartition_name
The name of the subpartition to be renamed.
new_name
The new name of the partition or subpartition.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 391
Database Compatibility for Oracle® Developers Guide
10.3.8.1 Example - Renaming a Partition
The following command creates a list-partitioned table named sales:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
(
PARTITION europe VALUES('FRANCE', 'ITALY'),
PARTITION asia VALUES('INDIA', 'PAKISTAN'),
PARTITION americas VALUES('US', 'CANADA')
);
Query the ALL_TAB_PARTITIONS view to display the partition names:
acctg=# SELECT partition_name, high_value FROM ALL_TAB_PARTITIONS;
partition_name | high_value
----------------+-------------------------------------
EUROPE | FOR VALUES IN ('FRANCE', 'ITALY')
ASIA | FOR VALUES IN ('INDIA', 'PAKISTAN')
AMERICAS | FOR VALUES IN ('US', 'CANADA')
(3 rows)
The following command renames the americas partition to n_america:
ALTER TABLE sales
RENAME PARTITION americas TO n_america;
Querying the ALL_TAB_PARTITIONS view demonstrates that the partition has been
successfully renamed:
acctg=# SELECT partition_name, high_value FROM ALL_TAB_PARTITIONS;
partition_name | high_value
----------------+-------------------------------------
EUROPE | FOR VALUES IN ('FRANCE', 'ITALY')
ASIA | FOR VALUES IN ('INDIA', 'PAKISTAN')
N_AMERICA | FOR VALUES IN ('US', 'CANADA')
(3 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 392
Database Compatibility for Oracle® Developers Guide
10.3.9 DROP TABLE
Use the PostgreSQL DROP TABLE command to remove a partitioned table definition, it's
partitions and subpartitions, and delete the table contents. The syntax is:
DROP TABLE table_name
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
Description
The DROP TABLE command removes an entire table, and the data that resides in that
table. When you delete a table, any partitions or subpartitions (of that table) are deleted
as well.
To use the DROP TABLE command, you must be the owner of the partitioning root, a
member of a group that owns the table, the schema owner, or a database superuser.
Example
To delete a table, connect to the controller node (the host of the partitioning root), and
invoke the DROP TABLE command. For example, to delete the sales table, invoke the
following command:
DROP TABLE sales;
The server will confirm that the table has been dropped:
acctg=# drop table sales;
DROP TABLE
acctg=#
For more information about the DROP TABLE command, please see the PostgreSQL core
documentation at:
https://www.postgresql.org/docs/11/static/sql-droptable.html
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 393
Database Compatibility for Oracle® Developers Guide
10.3.10 ALTER TABLE… DROP PARTITION
Use the ALTER TABLE… DROP PARTITION command to delete a partition definition, and
the data stored in that partition. The syntax is:
ALTER TABLE table_name DROP PARTITION partition_name;
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
partition_name
The name of the partition to be deleted.
Description
The ALTER TABLE… DROP PARTITION command deletes a partition and any data stored
on that partition. The ALTER TABLE… DROP PARTITION command can drop partitions
of a LIST or RANGE partitioned table; please note that this command does not work on a
HASH partitioned table. When you delete a partition, any subpartitions (of that partition)
are deleted as well.
To use the DROP PARTITION clause, you must be the owner of the partitioning root, a
member of a group that owns the table, or have database superuser or administrative
privileges.
10.3.10.1 Example - Deleting a Partition
The example that follows deletes a partition of the sales table. Use the following
command to create the sales table:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
(
PARTITION europe VALUES('FRANCE', 'ITALY'),
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 394
Database Compatibility for Oracle® Developers Guide
PARTITION asia VALUES('INDIA', 'PAKISTAN'),
PARTITION americas VALUES('US', 'CANADA')
);
Querying the ALL_TAB_PARTITIONS view displays the partition names:
acctg=# SELECT partition_name, high_value FROM ALL_TAB_PARTITIONS;
partition_name | high_value
----------------+-------------------------------------
EUROPE | FOR VALUES IN ('FRANCE', 'ITALY')
ASIA | FOR VALUES IN ('INDIA', 'PAKISTAN')
AMERICAS | FOR VALUES IN ('US', 'CANADA')
(3 rows)
To delete the americas partition from the sales table, invoke the following command:
ALTER TABLE sales DROP PARTITION americas;
Querying the ALL_TAB_PARTITIONS view demonstrates that the partition has been
successfully deleted:
acctg=# SELECT partition_name, high_value FROM ALL_TAB_PARTITIONS;
partition_name | high_value
----------------+-------------------------------------
EUROPE | FOR VALUES IN ('FRANCE', 'ITALY')
ASIA | FOR VALUES IN ('INDIA', 'PAKISTAN')
(2 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 395
Database Compatibility for Oracle® Developers Guide
10.3.11 ALTER TABLE… DROP SUBPARTITION
Use the ALTER TABLE… DROP SUBPARTITION command to drop a subpartition
definition, and the data stored in that subpartition. The syntax is:
ALTER TABLE table_name DROP SUBPARTITION subpartition_name;
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
subpartition_name
The name of the subpartition to be deleted.
Description
The ALTER TABLE… DROP SUBPARTITION command deletes a subpartition, and the data
stored in that subpartition. To use the DROP SUBPARTITION clause, you must be the
owner of the partitioning root, a member of a group that owns the table, or have superuser
or administrative privileges.
10.3.11.1 Example - Deleting a Subpartition
The example that follows deletes a subpartition of the sales table. Use the following
command to create the sales table:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY RANGE(date)
SUBPARTITION BY LIST (country)
(
PARTITION first_half_2012 VALUES LESS THAN('01-JUL-2012')
(
SUBPARTITION europe VALUES ('ITALY', 'FRANCE'),
SUBPARTITION americas VALUES ('CANADA', 'US'),
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 396
Database Compatibility for Oracle® Developers Guide
SUBPARTITION asia VALUES ('PAKISTAN', 'INDIA')
),
PARTITION second_half_2012 VALUES LESS THAN('01-JAN-2013')
);
Querying the ALL_TAB_SUBPARTITIONS view displays the subpartition names:
acctg=# SELECT subpartition_name, high_value FROM ALL_TAB_SUBPARTITIONS;
subpartition_name | high_value
-------------------+-------------------------------------
ASIA | FOR VALUES IN ('PAKISTAN', 'INDIA')
AMERICAS | FOR VALUES IN ('CANADA', 'US')
EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
SYS0101 | DEFAULT
(4 rows)
To delete the americas subpartition from the sales table, invoke the following
command:
ALTER TABLE sales DROP SUBPARTITION americas;