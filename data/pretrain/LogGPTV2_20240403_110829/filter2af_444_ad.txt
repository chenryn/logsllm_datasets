>
>   
>  Figure 20 Pth Connection Using Domain Account
`domain_used1`是一个"特权帐户"(privileged
account)。作者使用`local_nonpriv`重复测试，并在`local_nonpriv`能够访问到的一台"目标机器"上，配置了一个共享(而不是用默认的共享`Admin$`)。Figure
21展示了连接的日志。帐户成功连接到"目标机器"，并且payload部署成功，PtH攻击成功了。但是，由于缺乏admin权限，该服务无法启动。
>
>   
>  Figure 21 Pth Using Non-Privileged Account
值得一提的是，可以对已经得到的hashes进行"喷射"(spray)。即使用已经得到的hashes和一些常用密码的hashes，它们可能成功访问多台机器上的多个帐户。Crackmapexec可以用于此目的(Byt3bl33d3r,
2018)。
译者注：hashes
spray可能很快导致帐户被锁定，因为帐户锁定策略常常是：在设定的时间段内只能进行有限次数(如3-5次)的失败尝试。所以，在进行Password
Spraying类型的攻击时必须注意降低尝试登录的频率！
#### 6.2. PtH over WMI
Invoke-TheHash使得通过WMI执行PtH攻击成为可能(Robertson, 2018)。  
这种攻击的前提是需要凭据——被攻击主机上的一个管理员权限的帐户的凭据。执行攻击的用户可以是普通用户。 Figure
22展示了一个成功的连接，它在被攻击的机器上创建了一个文件夹。
>
>   
>  Figure 22 Pth Using WMI
#### 6.3. PtH over Kerberos
甚至Kerberos也可以接受NT hash，而不是明文密码。  
这种攻击被称为`Overpass-the-Hash`,可以使用Mimikatz(Delpy,
2014)的`sekurlsa::pth`命令来执行。在这种攻击中，这个NT hash用于获得一个Kerberos票据(Kerberos
ticket),该票据允许攻击者代表"被冒充的"(impersonated)用户访问网络资源。因为这种攻击使用"进程操纵"(process
manipulation)。因此，正在执行该攻击的用户需要具有admin权限。图23显示了成功冒充了用户`domain_used2`。
>
>   
>  Figure 23 Overpass-the-Hash with Mimikatz
#### 6.4. PtH over RDP
最后，如果企业使用了非默认的RDP配置，攻击者可以使用RDP执行PtH攻击。  
要使这种攻击技术起作用的前提是，企业必须启用了`Restricted Admin`设置。Windows 10默认不允许`Restricted
Admin`的RDP连接，但微软建议激活它们(见Section 7)。  
当使用`Restricted
Admin`模式建立连接时，服务器不会以任何可重用的形式接收用户的凭据。然而，这个配置的负面影响是产生了PtH攻击的可能性。在进行测试时，作者使用`xfreerdp`命令成功地建立一个RDP会话，该命令包含在Pass-the-Hash toolkit中(见Figure 24)。
>
>   
>  Figure 24 Pth Using RDP
### 7\. Protection
前面的小节介绍了许多利用密码hashes的攻击技术，这些技术在今天仍然是可行的。企业应该采用"纵深防御"(defense-in-depth)的方法来降低风险。企业的安全部首先需要防御"hash提取"，需要使hash的利用更难。最后，应该能够及时监测到该类型事件。
#### 7.1. Generic Security Measures
第一步，将操作系统升级到最新版本，并持续打后续的补丁。  
建议使用Windows Enterprise/Education版本而不是Windows Pro版本(见Section 4)。
在实施专门针对PtH攻击的防御措施之前，部署 **通用的安全措施** 是必要的:  
企业应该考虑给应用程序打补丁；  
装上靠谱的杀毒软件；  
设置足够强的密码复杂性策略；  
利用"基于主机的防火墙"(host-based firewall)；  
检测网络上未经授权的设备；  
应用多因素身份验证(Multi-Factor Authentication,MFA)；  
确保用户拥有的权限与他们的需求相对应，尤其是，可行的话，本地管理员(local administrators)不该具有debug权限；  
用户们应该具备安全意识，当使用RDP时主动注销而不应该断开连接，这样就不会在LSASS内存中留下NT hashes；  
...
这些措施使得任何渗透尝试，包括PtH攻击，难度大大提升。
#### 7.2. Hash Protection
防御PtH攻击的最有效方法，首先是防止hashes被窃取。 Section 4.3 中已经分析了WDCG的有效性，展示了它为域账户提供了更高的保护级别。
但是，还有其他方法可以提高hashes的安全性。
有关PtH的终极目标是完全"阻止"(block)网络层面的NTLMv2并且只使用Kerberos进行身份验证。但是，这个"加固"(hardening)方法没有得到广泛应用，因为它会导致许多兼容性问题。
另一方面，Microsoft提供了几种全面的解决方案，试图通过限制用户权限、减少(存储凭据hashes的)系统的数量来解决该问题(Microsoft,
2016; Microsoft, 2019)。
译者注：Active Directory managed environments 即Active Directory administrative
tier model, Enhanced Security Administrative Environment (ESAE)
人们应该考虑在Active Directory managed
environments中引入"分区"(zoning)，通过"限制用户的权限"(restricting privileges of
users)、"加固现有帐户"(hardening existing accounts)可以进一步提高安全性。
  * "加固现有帐户"包括：
    * 权限访问管理 (Privileged Access Management, PAM)
    * 适当的管理(Just Enough Administration, JEA)
    * 受保护的用户安全组 (Protected Users security group)
最后，企业应该加强用于"特权访问"(privileged access)的系统，即"特权访问工作站"(Privileged Access
Workstations,PAWs)。
这些解决方案通过减缓PtH第一步，来有效地阻挡"横向移动"(lateral
movement)。不过，在管理、基础设施和日常运营方面，它们会带来额外的成本，还可能导致兼容性问题。
加固RDP是必要的。企业应该强制执行"网络级身份验证"(Network Level Authentication)来防止密码嗅探。同样，Section
6.4中讨论的`Restricted Admin`功能在用于"远程访问"(remote access)时也显著提高了管理员凭据的安全性。
LSASS进程也需要加固。 启用对LSASS的保护，可防止不受保护的进程与其交互。 但是，此更改可能会导致兼容性问题。
最后，企业可以采取几个步骤来减少中间人攻击的风险。所有内部系统都应该有有效的DNS条目记录，并且应该添加常用搜索系统的条目记录，例如WPAD服务器的条目记录(见Section
5.2)。或者，应该禁用WPAD。企业应该考虑禁用LLMNR和NetBIOS，阻止"外发的"(outgoing)SMB流量，并要求SMB
Packet签名。企业应该在实施任何普遍的变更之前，彻底地测试这些解决方案。
#### 7.3. PtH Prevention
根据Section 6，应该禁用`LocalAccountTokenFilterPolicy`设置，以减少泄漏NT
hashes带来的不良影响。然而在某些情况下，这会产生一些"问题"(issues)。甚至微软也建议将其作为某些problems的解决方案(Schroeder,
2017)。
更好的解决方案是执行"本地管理员密码解决方案"(Local Administrator Password Solution,
LAPS)。此防御措施确保了定期更改本地管理员密码。
此外，"身份验证策略"(Authentication Policies)可用于限制PtH攻击的影响。
使用这些策略，可以限制(使用给定的帐户进行身份验证的)主机，这样，除非从"管理控制台"(admin
console)登录，否则攻击者将无法使用泄漏的管理员的密码hashes。
#### 7.4. PtH Detection
  * 为了有效地检测到PtH攻击，企业应该应用这几种策略：
    * 1.首先，应该监视警报PtH tools的那些日志。存在于网络中的PtH工具当然需要调查。
    * 2.其次，应监测主机上的异常活动。使用Sysmon，可以检测到篡改LSASS进程的尝试、企图(Warren, 2019)。SACL是Windows中的一个进程，可以提供LSASS的高级审计(Metcalf, 2015b)。
    * 3.此外，在主机上搜索异常的"配置更改"(configuration changes)有助于检测攻击。监视的最佳选择是`LocalAccountTokenFilterPolicy`和`WDigest`相关设置。
    * 4.主机之间的异常连接也可以表明攻击。人们应该寻找client-to-client或服务器到服务器的连接，以及来自同一单个IP地址的多个成功或失败的连接。
    * 5."蜜罐"(Honeypots) 和 honeycreds 是有用的。来自意外IP地址的域复制可能表明了DCSync攻击。
    * 6.最后，像Got-Responded之类的工具可被用来检测中间人攻击，如执行了NBT-NS，LLMNR或mDNS投毒的中间人攻击。
### 8\. Future Research
本Paper特别关注了 **"攻击者可获取主机访问权限"** 这种场景的PtH攻击。
未来的研究可以通过测试Section 7中讨论的安全措施的有效性，来扩展研究结果。
未来的研究可以识别针对这些保护的攻击：  
例如绕过SMB Packet签名的攻击;  
在WDCG下可进行的额攻击;  
...
未来的研究可能包括相关的攻击技术:  
例如通过物理访问进行的攻击;  
从域控制器中做hash提取;  
NTLMv2破解;  
对Kerberos的攻击;  
从流行的应用程序中提取凭据;
未来的研究可能包括 更多办法:  
从"凭据管理器"(Credential Manager)中得到明文密码;  
LSA Secrets;  
受保护的存储(Protected Storage);  
组策略首选项文件(Group Policy Preference files);  
...
未来的研究可能包括 更多协议:  
Section 6介绍了使用4种协议的PtH攻击。以后可以使用SQSH，HTTP Negotiate
Authentication/IWA，WinRM执行更多的测试。测试还可以涵盖RDP对中间人攻击的"脆弱性"(vulnerability)。
### 9\. Conclusions
本文分析了PtH攻击在windows 10 v1903环境下的可行性。  
本文展示了几种hash提取技术。  
本文演示了在哪些情况下攻击者可以使用这些hashes进行身份验证(各种协议下执行PtH攻击的条件和方法)。  
本文说明了一个企业可以考虑使用的"安全管控"(security controls)措施，可以最大程度降低PtH攻击的风险。
最终，做了的这些测试证明了PtH攻击仍然是一个真正的威胁，每个企业都需要直面这种风险。
### References
Abraham, J. (2016). Broadcast Name Resolution Poisoning / WPAD attack vector.  
Retrieved August 31, 2019, from
Baggett, M. (2013). SMB Relay demystified and NTLMv2 pwnage with Python.
Retrieved  
September 1, 2019, from 
Berg, L. (2019). What is DCSync? An introduction. Retrieved August 31, 2019,
from  
Byt3bl33d3r. (2017). Practical guide to NTLM Relaying in 2017 (a.k.a getting a
foothold  
in under 5 minutes). Retrieved August 31, 2019, from  
Byt3bl33d3r. (2018). CrackMapExec - SMB command reference. Retrieved  
September 11, 2019, from
Chandel, R. (2017). 4 ways to capture NTLM hashes in network. Retrieved  