           HtmlContent = ReadSoftPic(HtmlContent)
           HtmlContent = ReadArticleList(HtmlContent)
           HtmlContent = ReadSoftList(HtmlContent)
           HtmlContent = ReadFlashList(HtmlContent)
           HtmlContent = ReadFlashPic(HtmlContent)
           HtmlContent = ReadFriendLink(HtmlContent)
           HtmlContent = ReadNewsPicAndText(HtmlContent)
           HtmlContent = ReadSoftPicAndText(HtmlContent)
           HtmlContent = ReadGuestList(HtmlContent)
           HtmlContent = ReadAnnounceList(HtmlContent)
           HtmlContent = ReadPopularArticle(HtmlContent)
           HtmlContent = ReadPopularSoft(HtmlContent)
           HtmlContent = ReadPopularFlash(HtmlContent)
           HtmlContent = ReadStatistic(HtmlContent)
           HtmlContent = ReadUserRank(HtmlContent)
           HtmlContent = Replace(HtmlContent, "{$SkinPath}", Newasp.SkinPath)
           HtmlContent = Replace(HtmlContent, "{$InstallDir}", Newasp.InstallDir)
           If isHtml Then
               ShowIndex = HtmlContent
           Else
               Response.Write HtmlContent
           End If
        End Function
    这就是上面最开始 index.asp
在这个cms我还想提个关键点:
有个很关键的类(Class NewaspMain_Cls),该类的Newasp实例是这个cms的全局核心对象:
我们需要查看它的构造方法,可以看到通过Cookie设置了很多用户属性,(这些先记下来)
           GetUserip = CheckStr(getIP)
           membername = CheckStr(Request.Cookies(Cookies_Name)("username"))
           memberpass = CheckStr(Request.Cookies(Cookies_Name)("password"))
           menbernickname = CheckStr(Request.Cookies(Cookies_Name)("nickname"))
           membergrade = ChkNumeric(Request.Cookies(Cookies_Name)("UserGrade"))
           membergroup = CheckStr(Request.Cookies(Cookies_Name)("UserGroup"))
           memberclass = ChkNumeric(Request.Cookies(Cookies_Name)("UserClass"))
           memberid = ChkNumeric(Request.Cookies(Cookies_Name)("userid"))
           CheckPassword = CheckStr(Request.Cookies(Cookies_Name)("CheckPassword"))
上面演示了如何对单文件不断回溯从而找到相应的处理类和方法,下面我就是通过这种方法,来通读整个cms,鉴于文章篇幅，下面我会从简表述一些挖掘过程。
###  0x4.3 SQL注入
关于挖掘asp程序的SQL注入,我们首先通过上文的通读方法，找到关键的过滤函数,如果没有过滤函数，那么就是任意注入啦，如果有过滤函数，我们就有两条路子
1.过滤函数不严谨导致绕过
2.寻找程序猿粗心忘记过滤的可控点
代码有几个过滤函数,分别如下:
C:\Users\xq17\Desktop\wwwroot\inc\cls_main.asp
    Public Function CheckBadstr(str) ' 246 line
           If IsNull(str) Then
        CheckBadstr = vbNullString 'str为空则转换为vb的空类型
               Exit Function
           End If
      str = Replace(str, Chr(0), vbNullString) '替换截断字符 
      str = Replace(str, Chr(34), vbNullString) '双引号
           str = Replace(str, "%", vbNullString)
           str = Replace(str, "@", vbNullString)
           str = Replace(str, "!", vbNullString)
           str = Replace(str, "^", vbNullString)
           str = Replace(str, "=", vbNullString)
           str = Replace(str, "--", vbNullString)
           str = Replace(str, "$", vbNullString)
      str = Replace(str, "'", vbNullString) '去掉单引号
           str = Replace(str, ";", vbNullString)
           str = Replace(str, "", vbNullString)
      CheckBadstr = Trim(str) '删除字符串两侧的空格,然后返回函数值
        End Function
access数据库没有反斜杠,其他系统可以考虑下,用了这个函数基本大概率没办法注入了。
        Public Function ChkNumeric(ByVal CHECK_ID)
      If CHECK_ID <> "" And IsNumeric(CHECK_ID) Then 'IsNumeric 是vbscript的判断,没漏洞
               If CHECK_ID  2147483647 Then CHECK_ID = 0 '防溢出
               CHECK_ID = CLng(CHECK_ID)
           Else
               CHECK_ID = 0
           End If
           ChkNumeric = CHECK_ID
        End Function
    Public Function CheckStr(ByVal str)
           If IsNull(str) Then
               CheckStr = ""
               Exit Function
           End If
      str = Replace(str, Chr(0), "")'这个特性能用来绕过关键词
      CheckStr = Replace(str, "'", "''")'这个直接替换单引号为双引号
        End Function
    '=============================================================
        '函数名：ChkFormStr
        '作  用：过滤表单字符
        '参  数：str   ----原字符串
        '返回值：过滤后的字符串
        '=============================================================
    Public Function ChkFormStr(ByVal str) '这个函数主要防止xss
           Dim fString
           fString = str
           If IsNull(fString) Then
               ChkFormStr = ""
               Exit Function
           End If
           fString = Replace(fString, "'", "&#39;")
           fString = Replace(fString, Chr(34), "&quot;")
           fString = Replace(fString, Chr(13), "")
           fString = Replace(fString, Chr(10), "")
           fString = Replace(fString, Chr(9), "")
           fString = Replace(fString, ">", "&gt;")
           fString = Replace(fString, "", "")
           str = Replace(str, "|", "")
           str = Replace(str, "and", "")
           str = Replace(str, "chr", "")
           str = Replace(str, "@", "")
           str = Replace(str, "$", "")
           If Len(str) > 0 And strLen > 0 Then
               str = Left(str, strLen)
           End If
           CheckRequest = str
        End Function
总结下: ChkNumeric CheckStr ChkFormStr(xss) CheckRequest CheckBadstr(xsss)
还有很多其他的方,asp程序比较杂,遇到再细跟就行了,都没办法闭合单引号。
所以我们找注入点也是两个思路:
1.找没有单引号包括的可控语句,且没做类型判断
2.没有进行函数消毒的可控参数进入SQL查询
读完了全部文件，发现了作者对这个程序修修补补的痕迹，对一些历史漏洞点进行重复多次过滤，或者补充过滤(asp程序维护成本高)，但是作者一开始的出发习惯还是挺好的,基本都是
SQL = “SELECT TOP 1 * FROM NC_Ca
这样的格式去进行SQL查询,所以作者估计是认真匹配正则然后修补了,所以很遗憾,这个系统我读了2次,还是没找到前台的注入(函数逻辑缝缝补补),又因为是Access数据库,拿到后台注入基本没啥用，除非是那种update的点可能结合getshell来玩下,所以我当时就放弃，欢迎各位师傅继续跟进下这个系统研究一波。
###  0x4.2 逻辑漏洞
一个纯粹出于学习而发现的无限刷票漏洞(鸡肋且垃圾的洞)
wwwroot\vote\vote.asp
    Response.Cookies("vote_"&voteid) = "newaspvote_" &voteid 
    Response.Cookies("vote_"&voteid).expires = Date + 3650
    Response.Cookies("vote_"&voteid).domain = Request.ServerVariables("SERVER_NAME")
    '首先投票的成功的话,会设置Cookie的"newaspvote_" &voteid  来代表已经投过票了
    If Request.Cookies("vote_"&voteid) = "newaspvote_" &voteid Then
        Response.Write("&back=已经参与过投票，谢谢")
        Response.End
    ' -- 这个代码是通过cookie匹配来判断的相等则说明已经投过了,但是因为Cookie可控，我们直接burp，去掉这个字段就可以无限刷票了,一般安全的投票是绑定session来限制的。
###  0x4.3 XSS漏洞
这个系统过滤的挺严格的,但是细心找还是能找到几处有意思的xss。
首先是注册的地方:
user/reg.asp code as
    ElseIf Newasp.CheckStr(Request("action")) = "reg" Then '34 lines
    Call RegNewMember '跟进这个函数
    '----------------------------------------    '--- 下面我会一行一行去读然后删掉那些跟可控无关的语句
    Sub RegNewMember()
        Dim Rs,SQL
        Dim UserPassWord,strUserName,strGroupName,Password
        Dim rndnum,num1
        Dim Question,Answer,usersex,sex
        On Error Resume Next
      '---------- 这里过滤了input框的所以value,省略
       Set Rs = Newasp.Execute("SELECT username FROM NC_User WHERE username='" & strUserName & "'")
      ' --------- 这里是用户名邮箱唯一性验证，省略
        '-----------------------------------------------------------------        '系统整合
        '-----------------------------------------------------------------        Dim API_Newasp,API_SaveCookie,SysKey
        If API_Enable Then
        '---------------------无关代码省略
        '---------------这里是重点---------        Rs.Close:Set Rs = Nothing
        Set Rs = Server.CreateObject("ADODB.Recordset")
      SQL = "select * from NC_User where (userid is null)'这里打开了NC_User表
        Rs.Open SQL,Conn,1,3
        '------- 下面进行了修改表的操作
        Rs.Addnew
        Rs("username") = strUserName '过滤了
           Rs("password") = Password
        Rs("nickname") = Newasp.CheckBadstr(Request.Form("nickname")) '过滤了
           Rs("UserGrade") = 1
        Rs("UserGroup") = strGroupName '不可控
           Rs("UserClass") = 0
           If CInt(Newasp.AdminCheckReg) = 1 Then
               Rs("UserLock") = 1
           Else
               Rs("UserLock") = 0
           End If
           Rs("UserFace") = "face/1.gif"
           Rs("userpoint") = CLng(Newasp.AddUserPoint)
           Rs("usermoney") = 0
           Rs("savemoney") = 0
           Rs("prepaid") = 0
           Rs("experience") = 10
           Rs("charm") = 10
        Rs("TrueName") = Newasp.CheckBadstr(Request.Form("username")) '过滤了
        Rs("usersex") = usersex '不可控
        Rs("usermail") = Newasp.CheckStr(Request.Form("usermail"))'过滤了
           Rs("oicq") = ""
        Rs("question") = Question '过滤了
           Rs("answer") = md5(Answer)
           Rs("JoinTime") = Now()
           Rs("ExpireTime") = Now()
           Rs("LastTime") = Now()
           Rs("Protect") = 0
           Rs("usermsg") = 0
        Rs("userlastip") = Newasp.GetUserIP ' 这是漏洞点跟进这里
           If CInt(Newasp.AdminCheckReg) = 0 And CInt(Newasp.MailInformPass) = 0 Then
               Rs("userlogin") = 1
           Else
               Rs("userlogin") = 0
           End If
           Rs("UserToday") = "0,0,0,0,0,0,0,0,0,0,0"
           Rs("usersetting") = ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
           Rs("ip") = Newasp.GetUserIP
           Rs("Badness") = 0
           Rs("isask") = 0
           Rs.update
           Rs.Close
        '--------------------下面代码省略--------------------
里面有个关键代码:
    Rs("userlastip") = Newasp.GetUserIP选择跟进这个属性
    Path:C:\Users\xq17\Desktop\wwwroot\inc\cls_main.asp
    GetUserip = CheckStr(getIP) '跟进CheckStr函数
        Private Function getIP() 
           Dim strIPAddr 
           If Request.ServerVariables("HTTP_X_FORWARDED_FOR") = "" Or InStr(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), "unknown") > 0 Then 
               strIPAddr = Request.ServerVariables("REMOTE_ADDR") 
           ElseIf InStr(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), ",") > 0 Then 
               strIPAddr = Mid(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), 1, InStr(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), ",")-1)
               Actforip = Request.ServerVariables("REMOTE_ADDR")
           ElseIf InStr(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), ";") > 0 Then 
               strIPAddr = Mid(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), 1, InStr(Request.ServerVariables("HTTP_X_FORWARDED_FOR"), ";")-1)
               Actforip = Request.ServerVariables("REMOTE_ADDR")
           Else 
            strIPAddr = Request.ServerVariables("HTTP_X_FORWARDED_FOR")'这里可以控制
               Actforip = Request.ServerVariables("REMOTE_ADDR")
           End If 
        getIP = Replace(Trim(Mid(strIPAddr, 1, 30)), "'", "") '这里没有过滤双引号
        End Function
    getIP = Replace(Trim(Mid(strIPAddr, 1, 30)), "'", "")
可以看到这里只是限制了长度为30(完全可以写xss啦),但是没有过滤双引号,这样子就很容易出事情啦,在后台目录下搜索
userlastip这个key寻找输出点。
果断跟进去看看有没有啥过滤的。
    Sub EditUser()
        Call PageTop