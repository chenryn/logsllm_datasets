User: How to configure SSH server to ensure system security and user access control?
Assistant: To configure the SSH server to ensure system security and user access control, you can follow the steps below: 1. Disable root user remote login In the SSH configuration file (/etc/ssh/sshd_config), set PermitRootLogin to no, which prevents The attacker uses the root account to log in to the system through SSH. 2. Use SSH keys for authentication It is strongly recommended to use SSH keys for authentication instead of just passwords. Generate a pair of SSH keys (public and private) on the server and copy the public key into the authorized_keys file of each user who will access the server. This way, users can access the server by authenticating with their private key. 3. Modify the SSH port Setting the SSH port to a non-standard port (for example, changing from the default port 22 to another) can prevent attackers from using automated tools to carry out brute force attacks. In the SSH configuration file, set Port to the desired port number. Make sure this port is not used by other services. 4. Enable iptables firewall Using iptables firewall can help protect the server from malicious traffic. An iptables rule can be created to only allow access to the SSH port from a specific IP address. For example, the following command will allow the host with IP address 192.0.2.1 to access the SSH port and deny access from all other hosts: iptables -A INPUT -p tcp -s 192.0.2.1 --dport 22 -j ACCEPT iptables -A INPUT -p tcp --dport 22 -j DROP 5. Restricting SSH user access You can use PAM (Pluggable Authentication Modules) to set restrictions, such as restricting the login time of SSH users, and you can also use TCP Wrappers to restrict which users can access the SSH server. In the /etc/security/time.conf file, you can set the user's login time limit. In the /etc/hosts.allow and /etc/hosts.deny files, TCP Wrappers rules can be set to restrict which IP addresses or users can access the SSH server. These steps above can help to configure the SSH server to ensure system security and user access control. Of course, these steps are just some basic configurations, and you can also perform more configurations to improve the security of the server.