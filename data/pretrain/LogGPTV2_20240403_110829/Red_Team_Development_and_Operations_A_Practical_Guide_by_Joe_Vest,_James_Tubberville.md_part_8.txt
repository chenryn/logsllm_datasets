All visitors to a Red Team space will be escorted.
Target data should be handled only by Red Team personnel with a need to know.
At the conclusion of the engagement, all target information will be returned to the
customer or destroyed using defined procedures.
Software Controls
The following software controls, designed to ensure the confidentiality, anonymity, and safety of
information should be employed:
Each host and guest operating system should be encrypted
Use an effective password policy, and consider (should use) a multifactor protected
password database to store unique passwords for each engagement
Each host and guest operating system should be protected with a “strong” password
Each host and guest operating system should employ a host-based firewall specific to
the engagement
When possible, communications should be encrypted
Note, the Red Team should never use unsecured file systems or communications for
team-developed engagement operations (i.e., FTP, Telnet, HTTP, VNC, WEP, etc.)
Use (more) secure mechanisms for communications (i.e., HTTPS, WebDAV, SSH,
radmin, RDP, etc.)
The data and tools utilized during an engagement should be stored in an encrypted
container and moved to the working directory only when needed
All systems, storage, data, and tools should be encrypted at all times (data in transit,
data at rest)
The use of well-known and community-tested high-strength encryption algorithms is
recommended
All data and tools transferred to or from target systems should be hashed using MD5,
SHA1, or SHA256 and added to the OPLOG as discussed in the Data Collection section
All access, movement, and use of data and tools should be added to the OPLOG
If a tool is no longer needed for a task, it should be removed from the target environment
All Red Team tools and software should be removed from the target environment at the
end of the engagement. If cleanup is not possible, the TA and ECG should be notified and
provided with the appropriate details.
Two Person Integrity (TPI)
A key factor in data collection and execution is two-person integrity (TPI). Two-person integrity
(used to verify activities performed during the engagement) should be maintained at all times. A team
member should review, understand, and provide a “sanity check” for each action/command
performed. That team member should verify the actions of the executing team member as well as
verify the completion of the log entry. TPI helps protect both the Red Team and the target/customer
against the potential release of sensitive information, violation of legal requirements/laws, and
violation of the ROE. More often, TPI prevents the Red Team from making simple errors and
mistakes in operation (this is further explored in the see tradecraft guidance, consult with peers
section).
Key Chapter Takeaways
Engagement Planning is crucial to effectively managing potential engagement risks, successfully
executing to achieve the desired goals and objectives, and providing the information required to
improve both organizational and defensive capabilities. Although all planning elements play an
important role in engagement success, be especially mindful to place additional attention on:
Roles and Responsibilities
Rules of Engagement
Threat Planning
Operational Impacts
Deconfliction
Data Handling
Funding
Homework
1) Create a red team operations charter and methodology guide
2) Create a roles and responsibility document
3) Create a threat profile template
4) Develop a standard ROE template
5) Develop a deconfliction template
6) Develop a data handling guideline
7) Continue adding definitions to the red team lexicon
Engagement Execution
Engagement execution starts when event information and planning documentation is finalized, and
preparatory actions for conducting the engagement begins. The execution phase is simply the practical
application of the "why" and "how" from planning (think infrastructure buildout and engagement
activities).
Data Repository
All data collected during an engagement must be logged, filed according to data type, and stored in an
engagement-specific repository. This repository should be located on an encrypted volume within a
centralized server / NAS /file share that is mountable or accessible only after authentication.
If at an offsite location, and a practical approach is to designate a laptop and create an authenticated
directory for storing engagement data. Ensure this directory is copied to another laptop daily.
Remember, the file system should be stored in accordance with policy, physical, and software
controls, as previously discussed.
As operations begin, the Red Team Lead should mount the engagement-specific volume within the
repository (an encrypted volume requiring authentication). Once completed, each Red Team Operator
will need to mount the directory locally for engagement use (requires user authentication). At end-of-
day, each operator must unmount the directory, and the Red Team Lead should unmount the repository
volume.
A proven and recommended method for secure collaborative access to a common repository is
mounting a remote file system over SSH. This method requires authentication for access and
leverages an encrypted transport mechanism.
There are numerous ways to perform this task. A quick example is shown below:
1) Install SSHFS:
apt-get install sshfs
2) Create a “data” directory to be used for collection:
Mkdir /data
3) Mount the common repository via SSHFS by entering the password. Note: The Red Team Lead
should have created an event hierarchy (as discussed in File Hierarchy) prior to this step.
sshfs -o allow_other,defer_permissions
redteammember1@:/path_to_engagement_repository/ /data
4) Alternatively, mount the common repository via SSHFS using keys:
sshfs -o allow_other,defer_permissions,IdentityFile=~/.ssh/id_rsa
redteammember1@:/path_to_engagement_repository/ /data
5) Utilize:
ls /data
6) To unmount the file system:
unmount /data
More usage guidance on sshfs can be found with the sshfs man page ( man sshfs ) or at
https://linux.die.net/man/1/sshfs.
While the following structure and method are not required for Red Team operations, it is HIGHLY
recommended if other data collection processes or tools do not exist. Leveraging lessons learned, this
structure was designed to facilitate the efficient operational flow of storing data during an engagement
while improving a Red Team lead's ability to control the acquisition, flow, and reporting of
information.
File Hierarchy
//repository/engagement_name/0-admin
Administrative event information—approved IP lists, ROE, briefings, etc.
//repository/engagement_name/1-osint
Pre-event collected OSINT information
//repository/engagement_name/2-recon
Reconnaissance information (DNS lookups, NMAP scans, eyewitness information, etc.)
//repository/engagement_name/3-targets
Per-target specific information (local users, file trees, command output, etc.)
Domain-specific information (DSQUERY, domain users, domain controllers, file shares)
//repository/engagement_name/3-targets/ip_hostname/exfil
● Per-target exfiltrated data (password files, user data, diagrams, etc.). There must be a
separate folder per target (ip_hostname or URL).
● File servers must each have their own EXFIL folder and be treated as separate targets for
the purpose of EXFIL.
//repository/engagement_name/4-screenshots
● Screenshots formatted as YYYYMMDD_HHMM_IP_Description.jpg/png must be stored
here no matter their source. Host-, guest-, application-, tool-, and print-screen-generated
screenshots must all be copied to this location.
//repository/engagement_name/5-payloads
● ALL payloads (EXEs, scripts, phishing emails) must be stored under the appropriate
subdirectory and entered into the OPLOG.
● This allows the team to track all payloads that are created and pushed on a target network
for later cleanup, deconfliction, etc.
//repository/engagement_name/6-logs
● Stores all exported logs in the appropriate directory.
● The final OPLOG is stored here (example: //repository/engagement_name/6-
logs/20190301_170100_OPLOGredteamconsole1.xls|csv|etc.).
//repository/engagement_name/6-logs/redteamconsole1
● Copy all logs to the appropriate Red system directory.
Raw console data (example: //repository/engagement_name/6-
logs/redteamconsole1/20190308_151312_CDT.terminal.log.raw )
● Tool/application logs
Daily OPLOGs are stored here (example: //repository/engagement_name/6-
logs/readteamconsole1/20190308_151820_OPLOG.xls|csv|etc .).
Example of the data
repository file structure
Data Collection
The collection of data drives the value of the engagement itself. Data collection should be complete,
enable the replication of activities and results, and identify items of significant interest to the
operators. Final data sets should include:
● Pre-event data (OSINT, ROE, POC list, etc.)
● Execution data
Operator logs (manual data collection)
Automated data collection and logs
Screenshots
● Post-event data (data archive, closeout brief if performed, and final report)
Activity Logs
All activities related to the Red Team operation should be logged as soon as the engagement begins
and only terminate after all activity related to the engagement is completed.
Examples of events to be logged include:
● Scanning activities
● Exploit events
● Stimulation efforts
● Deconfliction requests
● Target information discovered
● Targets acquired and lost
● System events (outages, downtime, etc.)
● Login attempts
● Credentials captured
● Credentials used
● Files system modifications
● Modifying or disabling security controls
● Modification or suppression of security alerts or logs
● Methods of access
● Methods of persistence employed
● Command and Control channels established
● Requests to increase, decrease, or pause activity
● ROE conflicts, requests, and modifications
All data collected during the engagement should be logged, filed according to data type, and stored in
an engagement-specific file share, preferably in real time. As discussed in the Handling Client Data
section, this file share should be located on a mountable, encrypted volume within a centralized
server or NAS.
Focus Point
It’s important to impose the value of failed actions. Many
operators capture only successful actions performed
during the engagement. In many instances, the failure of a
specific action (and its associated details) provides more
value to the target as well as to the Red Team than many
successes.
Operator Logs
As stated previously, all activities should be logged accurately and concisely. At a minimum, the
following information must be collected and logged for each action performed:
● Start Timestamp (UTC Recommended)
● End Timestamp (UTC Recommended)
● Source IP (Attack/Test System IP address)
● Source Hostname
● Destination IP (Target IP Address)
● Destination Hostname
● Destination Port (Target Port)
● Destination System Name
● Pivot IP (if applicable, list IP of any system used as a pivot, port forwarder, etc.)
● Pivot Hostname
● Pivot Ports (if applicable, list send and receive ports leveraged in pivot system)
● URL (Note, it is important to capture the FULL URL of the Target instance)
● Tool/Application
● Action (What activity or action was performed)
● Command (Full command)
● Output (Command output or response)
● Description (why or for what purpose was the action was performed)
● Result (Success, Failed, Achieved, etc.)
● System Modification (Modified file, dropped binary location, enabled functions, etc.)
● Comments
● Screenshot (File name of screenshot)
● Operator Name
Remember: When creating log entries, documenting actions, uploading/downloading files, dropping
binaries, etc. It is beneficial to record using the YYYYMMDD_HHMM_IP_Description format.
Examples:
● Start Timestamp: Target Action
○ 20170308_151801
● Screenshot of Nmap port 445
○ 20170308_1518_10.10.1.106_nmap445.png
● Screenshot of open smb share
○ 20170308_1519_10.10.1.106_smb_share.png
● Screenshot of password file
○ 20170308_1525_10.10.1.106_smb_share_passwords.txt
Detailed logs provide a snapshot of where an operator is during an engagement and can be used to
derive the status of an engagement as a whole. This type of information is critical to tracing steps
throughout an engagement to properly manage, resolve deconfliction requests, and ensure data is
available to produce a quality deliverable or report. Logs should contain all major steps that provide
the who, what, when, where, why, and how of an action or series of actions. In addition to a text log,
a screenshot is an excellent way to visualize an action. Once an engagement is complete, logs are all
that remain. The quality of an engagement is directly related to the quality of the logs.
Automated Data Collection
Where available, the Red Team should leverage the use of tools and scripts to capture and
consolidate engagement data.
Automated data collection alone will never be sufficient to capture the details required of a well
written final report; however, it can be useful in capturing the raw data needed to validate activities,
reproduce results, and support recommendations. Automated collection, if employed properly,
complements the Red Team workflow and enables the operator to continue operations with the
manual capture of data pertinent to the activity performed.
Terminal Logs
All Red Team engagement systems should have automated collection of raw terminal/console data.
Each command should be prefixed with the operator's IP address and UTC timestamp. While there are
many methods of automating this tagging and collection (TMUX, Script, Screen, etc.), it's more
important that data is accurately captured than be captured in a different manner. Simply saving these
tagged logs to a location such as / root/logs/terminal/ can significantly simplify the consolidation of
terminal logs.
Commercial Tools
Most commercial tools used for penetration testing or Red Teaming inherently have some level of
logging capability. Some have the ability to redirect log outputs to a specific location, while others
require the operator to trigger log generation. In either case, it is recommended that these logs be
captured and stored in a location such as / root/logs/commercial_tool/.
Custom Tools
Any capable Red Team will have custom tools either generated for all events or created for a specific
engagement. These tools should leverage the ability to create logs during execution. When building
these tools, the Red Team should consider capturing all data required of the Operator Log and quite
possibly creating log entries in the process. Each data point should be captured in the same
YYYYMMDD_HHMM_IP_Description format (for example, 20170308_151312_UTC.terminal.log.raw ).
Consolidation
The daily transfer of these logs to the engagement repository is recommended. The preference should
be to create a backup or rollup script that copies each set of logs to the repository when executed at
end-of-day.
Screenshots!
Details concerning Red Team actions are often met with disbelief. Even when the team has
undeniable evidence of access to a highly restrictive application, network, or physical area, target
personnel (management as well as employees) sometimes have issues conceding that access was
obtained. Images provide the visual proof often required.
Screenshots of activities provide validity for the actions that occurred in an assessment. Keep in mind
a Red Team engagement isn’t a vulnerability assessment or penetration test. The engagement is
designed to ”tell a story” as to how a legitimate threat could impact the function of the target
environment. How better to tell that story than to include screenshots of applications, systems, and
commands in the storyline?
During physical assessments, pictures or video of buildings, offices, desks, server rooms, restricted
areas, etc. are generally required for proof of entry. A second recommendation is for the physical
team to generate stickers that contain the Red Team logo. Those stickers (or markers) are placed in
areas of interest and placed within the frame when pictures or video is captured.
Remember: A useful filename includes the date, time, IP, and description in the format of
YYYYMMDD_HHMM_IP_Description.jpg|png (for example, 20170308_1518_server_room_access.png ).
Tradecraft
Term tradecraft is borrowed from the intelligence community. The Merriam-Webster.com dictionary
defines tradecraft as "the techniques and procedures of espionage". Tradecraft in Red Teaming has
become a more general term. It is the how and why a Red Team acts. Basically, a threat's Tradecraft
uses various TTPs to emulate a specific threat. To minimize confusion, Tradecraft, TTPs, and
techniques will be used interchangeably. Threat portrayal requirements directly impact a Red Team's
choice of TTPs. A Red Team may choose custom, highly advanced tools to support an APT (advanced
persistent threat) or use simple, "script kiddie" techniques to emulate an ordinary hacker. This range