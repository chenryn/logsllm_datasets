### Nmap and NSE Scripts for SMB Enumeration

To scan for open SMB ports (139 and 445) on the subnet 192.168.1.0/24, you can use the following Nmap command:

```bash
nmap -p 139,445 192.168.1.0/24
```

Several NSE (Nmap Scripting Engine) scripts can be useful for further enumeration. Here are some examples:

- **smb-brute.nse**: Brute-forces SMB logins.
- **smb-enum-domains.nse**: Enumerates domains and domain controllers.
- **smb-enum-groups.nse**: Enumerates groups and group members.
- **smb-enum-processes.nse**: Enumerates running processes.
- **smb-enum-sessions.nse**: Enumerates active sessions.
- **smb-enum-shares.nse**: Enumerates shared resources.
- **smb-enum-users.nse**: Enumerates users.
- **smb-flood.nse**: Floods the SMB service with requests.
- **smb-ls.nse**: Lists files in a directory.
- **smb-mbenum.nse**: Enumerates Master Browser information.
- **smb-os-discovery.nse**: Detects the OS of the target.
- **smb-print-text.nse**: Prints text to a printer.
- **smb-psexec.nse**: Executes commands on the target.
- **smb-security-mode.nse**: Retrieves the security mode of the SMB service.
- **smb-server-stats.nse**: Displays server statistics.
- **smb-system-info.nse**: Retrieves system information.
- **smbv2-enabled.nse**: Checks if SMBv2 is enabled.
- **smb-vuln-conficker.nse**: Checks for the Conficker vulnerability.
- **smb-vuln-cve2009-3103.nse**: Checks for CVE-2009-3103.
- **smb-vuln-ms06-025.nse**: Checks for MS06-025 vulnerability.
- **smb-vuln-ms07-029.nse**: Checks for MS07-029 vulnerability.
- **smb-vuln-ms08-067.nse**: Checks for MS08-067 vulnerability.
- **smb-vuln-ms10-054.nse**: Checks for MS10-054 vulnerability.
- **smb-vuln-ms10-061.nse**: Checks for MS10-061 vulnerability.
- **smb-vuln-regsvc-dos.nse**: Checks for the regsvc DoS vulnerability.

To run specific NSE scripts, you can use the `--script` option. For example, to enumerate shares and discover the OS, you can use:

```bash
nmap -p 139,445 192.168.1.0/24 --script smb-enum-shares.nse,smb-os-discovery.nse
```

### NBTScan

NBTScan can be used to enumerate NetBIOS names and IP addresses. It can be a bit buggy, so it's recommended to run it multiple times to ensure all users are found.

```bash
nbtscan -r 192.168.1.0/24
```

### Enum4linux

Enum4linux is a tool for enumerating Windows and Linux machines with SMB shares. The `do all` option provides comprehensive information:

```bash
enum4linux -a 192.168.1.120
```

For more information, refer to the official documentation: [Enum4linux Documentation](https://labs.portcullis.co.uk/tools/enum4linux/)

### RPCClient

RPCClient can be used to enumerate SMB shares. You can connect with a null session (without a user), which works for older Windows servers:

```bash
rpcclient -U "" 192.168.1.101
```

Once connected, you can enter commands like:

- `srvinfo`: Displays server information.
- `enumdomusers`: Enumerates domain users.
- `getdompwinfo`: Retrieves domain password information.
- `querydominfo`: Queries domain information.
- `netshareenum`: Enumerates shares.
- `netshareenumall`: Enumerates all shares.

### IMAP (Ports 143/993)

IMAP (Internet Message Access Protocol) allows you to access email stored on a mail server. Unlike POP3, IMAP allows you to access your email from multiple devices. Port 993 is the secure port for IMAP (IMAPS).

### SNMP (Ports 161 and 162)

SNMP (Simple Network Management Protocol) is used to manage devices on a network. SNMP versions 1, 2, and 2c do not encrypt traffic, making them vulnerable to interception. Common community strings include "public" and "private".

#### MIB (Management Information Base)

The MIB is a database organized as a tree, where different branches contain different information. You can use `snmpwalk` to traverse the MIB tree:

```bash
snmpwalk -c public -v1 192.168.1.101
```

For more targeted queries, you can use specific OIDs (Object Identifiers):

- `1.3.6.1.2.1.25.1.6.0`: System Processes
- `1.3.6.1.2.1.25.4.2.1.2`: Running Programs
- `1.3.6.1.2.1.25.4.2.1.4`: Processes Path
- `1.3.6.1.2.1.25.2.3.1.4`: Storage Units
- `1.3.6.1.2.1.25.6.3.1.2`: Software Name
- `1.3.6.1.4.1.77.1.2.25`: User Accounts
- `1.3.6.1.2.1.6.13.1.3`: TCP Local Ports

You can also use `onesixtyone` for brute-forcing community strings and `snmp-check` for a more user-friendly interface:

```bash
snmp-check -t 192.168.1.101 -c public
```

### LDAP (Ports 389/636)

LDAP (Lightweight Directory Access Protocol) is used for directories, similar to a telephone directory or the Windows registry. It is often used for storing user information and can be accessed using anonymous login:

```bash
ldapsearch -h 192.168.1.101 -p 389 -x -b "dc=mywebsite,dc=com"
```

Port 636 is used for SSL-encrypted LDAP.

### HTTPS (Port 443)

Always check for SSL vulnerabilities such as Heartbleed. You can use `sslscan` or Nmap scripts to test for vulnerabilities:

```bash
sudo sslscan 192.168.101.1:443
nmap -sV --script=ssl-heartbleed 192.168.101.8
```

### RTSP (Port 554)

RTSP (Real Time Streaming Protocol) is used for streaming media. Many commercial IP cameras use this port.

### Submission (Port 587)

This is an outgoing SMTP port. If Postfix is running on this port, it may be vulnerable to Shellshock.

### CUPS (Port 631)

CUPS (Common UNIX Printing System) is used for sharing printers on a Linux network. You can log in at `http://localhost:631/admin` and authenticate with OS users.

### MySQL (Port 3306)

Test the default credentials and use `mysql` to connect:

```bash
mysql --host=192.168.1.101 -u root -p
```

If the root user is only allowed to log in from `127.0.0.1`, you may need to configure the MySQL server to allow remote connections.

### VNC (Port 5900)

VNC is used for remote desktop access. You can use `vncviewer` to connect:

```bash
vncviewer 192.168.1.109
```

You can also use Metasploit to scan for VNC logins and no-authentication VNC services:

```bash
use auxiliary/scanner/vnc/vnc_login
set rhosts 192.168.1.109
run

use auxiliary/scanner/vnc/vnc_none_auth
set rhosts 192.168.1.109
run
```

### Port Knocking

Port knocking is an obfuscation technique where ports are opened after a specific sequence of knocks. This is more common in CTFs than in real-life networks. For example, to hide an SSH port and open it after a knock sequence, you can use tools like `knockd`.

This document provides a comprehensive overview of common ports and services, along with the tools and techniques to enumerate and exploit them.