### NewReno and ACK Thinning

**NewReno**
- **ACK Thinning**: A technique used to reduce the frequency of acknowledgments (ACKs) in TCP, which can help in reducing network congestion and improving performance.

**Experiment Results:**

- **Number of Hops:**
  - 4
  - 8
  - 16
  - 32
  - 64

- **Figures:**
  - **Figure 4**: 7-hop chain: TCP Vegas goodput for different bandwidths.
  - **Figure 8**: h-hop chain with 2 Mbit/s: Window size vs. number of hops.

**Goodput and Window Size:**

- **Goodput (Kbps)**
  - 400
  - 350
  - 300
  - 250
  - 200
  - 150
  - 100
  - 50
  - 0

- **Window Size (packets)**
  - 300
  - 250
  - 200
  - 150
  - 100
  - 50
  - 0

**TCP Variants:**
- **Vegas (β = 2)**
- **Vegas (β = 2) ACK Thinning**
- **Vegas (β = 3) ACK Thinning**
- **Vegas (β = 4) ACK Thinning**
- **NewReno**
- **NewReno ACK Thinning**
- **Paced UDP**

**Figures:**
- **Figure 5**: h-hop chain with 2 Mbit/s: TCP Vegas with ACK thinning: Goodput vs. number of hops.
- **Figure 9**: h-hop chain with 2 Mbit/s: Number of false route failures vs. number of hops.

### Experiment Details

**Second Experiment:**
- **Objective**: Determine the optimal value of the parameter β for TCP Vegas with ACK thinning.
- **Results**:
  - For h > 6, TCP Vegas with β = 2 performs slightly better than other variants.
  - The window size for TCP Vegas with β = 2 and ACK thinning often decreases to 3, leading to a lack of acknowledgments at the receiver, which only acknowledges every fourth packet for sequence numbers greater than 8.

**Conclusion:**
- TCP Vegas with β = 2 performs best for most hop counts and a bandwidth of 2 Mbit/s.
- Increasing the bandwidth improves the performance of TCP Vegas with larger values of β due to decreased contention on the MAC layer, but TCP Vegas with β = 2 remains the best choice.

**Third Experiment:**
- **Objective**: Compare TCP NewReno, TCP Vegas, TCP NewReno with ACK thinning, and paced UDP for varying hop counts.
- **Measures**:
  - Goodput
  - Average number of retransmissions
  - Average window size
  - Number of false route failures

**Results:**
- **Figure 6**: TCP Vegas has up to 83% higher goodput than TCP NewReno (about 75% for 8 hops).
- **Figure 7**: TCP Vegas causes up to 99% fewer retransmissions than TCP NewReno.
- **Figure 8**: The average window size of TCP Vegas ranges from 3.5 to 5.5 for increasing hop counts between 4 and 40.
- **Figure 9**: TCP NewReno causes significantly more false route failures than TCP Vegas (93% to 100%).

**Impact of Routing:**
- False route failures result from link layer transmission failures, leading to additional traffic overhead.
- TCP NewReno's larger average window size results in more packet drops and thus more false route failures.

**Further Analysis:**
- **Figure 10**: 7-hop chain with 2 Mbit/s: Goodput vs. packet inter-sending time.
- **Figure 11**: Goodput for different bandwidths.
- **Figure 12**: Average number of retransmissions.
- **Figure 13**: Average window size.
- **Figure 14**: Link layer dropping probability.

**Conclusion:**
- Applying ACK thinning in TCP Vegas does not improve goodput at 2 Mbit/s but reduces link layer drops.
- Reduction in link layer drops does not translate to increased goodput because these drops are not visible to TCP Vegas on the transport layer.
- With increasing network bandwidth, the load on the link layer is moderate, allowing all packets to be sent after a few retries.

### References
- Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05)
- IEEE, 0-7695-2282-3/05 $20.00 © 2005

This optimized text provides a clear and professional summary of the experiments and their results, making it easier to understand the key points and findings.