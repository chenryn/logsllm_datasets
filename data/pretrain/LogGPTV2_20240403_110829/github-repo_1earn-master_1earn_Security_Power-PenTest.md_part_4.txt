- [SET](https://github.com/trustedsec/social-engineer-toolkit/)
    - [SET 笔记](./安全工具/SET.md)
- [gophish/gophish](https://github.com/gophish/gophish) - Open-Source Phishing Toolkit
- [xiecat/goblin](https://github.com/xiecat/goblin) - 一款适用于红蓝对抗中的仿真钓鱼系统
- [Threezh1/SiteCopy](https://github.com/Threezh1/SiteCopy)
---
### 爆破
网络中有需要登陆的地方即需要口令或密码，特别是网站管理后台和邮箱，如果使用弱口令，一旦被人猜到或破解，就如同拿到了钥匙，随意进出，网络资产将面临巨大的风险。当然,不只是后台,一些 api 端点存在的认证，jwt密钥，等等，都存在爆破的可能
#### 字典
**Tips**
1. 按场景来看,敏感的场景,目标或业务量大的场景,字典不是越多越好,力求精简,求快,不要把功夫全放在 fuzz 上,条件允许的话就针对目标专门定制一个字典,这可能涉及到一些社工的技巧.
2. 如果没有安全设备,那就随便搞吧,先来个 [TOP10]*[TOP10000] 再说.
3. 字典还是自己收集整理的最好,有空的话,建议把 github 上的自己分分类,把什么 `Hentai`、`pussy`、`dick` 这种奇奇怪怪的密码早点删了🤣.
4. 数据库是管理字典的好帮手,善用统计、去重功能有奇效.
5. 很多厂商设备默认口令可以在这个网站找到 https://default-password.info/
6. 要想在实战中用好爆破的各种攻击技术一定要学好加密知识,不要 "练拳不练功，到老一场空"
**字典规则**
常见组合 (Common)
- `payload` + 123
- `payload` + 1234
- `payload` + 123456
- `payload` + 12345
- `payload` + @123
- `payload` + @123456
- `payload` + @12345
- `payload` + #123
- `payload` + #123456
- `payload` + #12345
- `payload` + _123
- `payload` + _123456
- `payload` + _12345
- `payload` + 123!@#
- `payload` + !@#$
- `payload` + !@#
- `payload` + ~!@
- `payload` + !@#123
- `payload` + 2017
- `payload` + 2016
- `payload` + 2015
- `payload` + @2017
- `payload` + @2016
- `payload` + @2015
生日组合 (Birthday)
- 19880808
- tony19980808
- tony@19980808
年份列表 (years)
- 1987
- 1988
- 1989
1337模式替换 (leet)
- 1earn
键盘布局 (Keyboard layout)
- qwerty
大小写变换 (case reversal)
- admin
- Admin
- admIn
单位名+`@`+`年份/123/或常见弱口令` (company + sth.)
- Huawei@123
单位名+小写业务名+`@`+`年份/123/或常见弱口令` (company + business + sth.)
- BEIJINGXXyy@2019
大写地名+小写业务名+`@`+`年份/123/或常见弱口令` (Place + business + sth.)
- BEIJINGinfo@2019
大写城市+小写区县+单位名 (Uppercase city + lowercase district/county + unit name + sth.)
- BJ_cy_yey(北京_朝阳_幼儿园)
管理员名+`@`+`年份/123/或常见弱口令` (Administrator + sth.)
- tony@2019
医院工号 (Hospital staff ID)
- 0000-9999
公司相关信息 域名+简称 (Company Information Domain+Abbreviation)
- wy@360buy
- xxx.com@123
拼音
- zhangsan
- zhang.san
- zhangs
中文
- 张三
- 李四
- 张san
**相关文章**
- [关于字典整理的心得分享](https://www.t00ls.net/viewthread.php?tid=58288)
- [强弱密码爆破的姿势](https://www.yuque.com/pmiaowu/bomi9w/ougg6d)
**字典编辑工具**
- [PilotEdit](https://www.pilotedit.com/) - 大文件编辑器 (Large file editor)
- [glogg](https://glogg.bonnefon.org/download.html) - 大文件查看工具(只读) (Large file viewing tool (read only))
**字典生成工具**
- [LandGrey/pydictor](https://github.com/LandGrey/pydictor) - 一个强大实用的黑客暴力破解字典建立工具
- [crunch](https://sourceforge.net/projects/crunch-wordlist/) - 字典生成工具
- [RicterZ/genpAss](https://github.com/RicterZ/genpAss) - 中国特色的弱口令生成器
- [自制弱口令字典 top100](https://gv7.me/articles/2017/making-the-password-top-100/)
- [HongLuDianXue/BaiLu-SED-Tool](https://github.com/HongLuDianXue/BaiLu-SED-Tool) - 白鹿社工字典生成器，灵活与易用兼顾。
- cewl - 可抓取网站信息用于生成密码的工具,kali 自带
    ```
    cewl http://xxx.com -w out.txt
    ```
- [Mebus/cupp](https://github.com/Mebus/cupp)
- [r3nt0n/bopscrk](https://github.com/r3nt0n/bopscrk)
- [ffffffff0x/name-fuzz](https://github.com/ffffffff0x/name-fuzz) - 针对目标已知信息的字典生成工具
- [ffffffff0x/gendict](https://github.com/ffffffff0x/gendict) - 针对目标已知信息的字典生成工具
**杂项字典**
- [AboutSecurity/Dic](https://github.com/ffffffff0x/AboutSecurity)
- [Stardustsky/SaiDict](https://github.com/Stardustsky/SaiDict) - 字典分类的不错
- [rootphantomer/Blasting_dictionary](https://github.com/rootphantomer/Blasting_dictionary) - 爆破字典
- [Weakpass](https://weakpass.com/)
- [danielmiessler/SecLists](https://github.com/danielmiessler/SecLists)
- [r35tart/RW_Password](https://github.com/r35tart/RW_Password) - 此项目用来提取收集以往泄露的密码中符合条件的强弱密码
- [wainshine/Chinese-Names-Corpus](https://github.com/wainshine/Chinese-Names-Corpus) - 中文人名语料库.中文姓名,姓氏,名字,称呼,日本人名,翻译人名,英文人名.成语词典.
- [modood/Administrative-divisions-of-China](https://github.com/modood/Administrative-divisions-of-China) - 中华人民共和国行政区划:省级(省份直辖市自治区)、 地级(城市)、 县级(区县)、 乡级(乡镇街道)、 村级(村委会居委会) ,中国省市区镇村二级三级四级五级联动地址数据 Node.js 爬虫.
- [berzerk0/Probable-Wordlists](https://github.com/berzerk0/Probable-Wordlists)
- [minimaxir/big-list-of-naughty-strings](https://github.com/minimaxir/big-list-of-naughty-strings)
- [k8gege/PasswordDic](https://github.com/k8gege/PasswordDic) - 2011-2019年Top100弱口令密码字典 Top1000密码字典 服务器 SSH/VPS 密码字典 后台管理密码字典 数据库密码字典
- [xnohat/vipasswordict: Vietnamese Password Dicts](https://github.com/xnohat/vipasswordict) - 越南语字典
- [huyuanzhi2/password_brute_dictionary](https://github.com/huyuanzhi2/password_brute_dictionary) - 口令爆破字典，有键盘组合字典、拼音字典、字母与数字混合这三种类型
- [SmithEcon/Fuzz_dic](https://github.com/SmithEcon/Fuzz_dic) - 参数 | 字典 collections
- [Debdut/names.io](https://github.com/Debdut/names.io) - 英文人名大全
- [lutfumertceylan/top25-parameter](https://github.com/lutfumertceylan/top25-parameter)
- [Assetnote Wordlists](https://wordlists.assetnote.io/)
**Web 字典**
- [AboutSecurity/Dic/Web](https://github.com/ffffffff0x/AboutSecurity/tree/master/Dic/Web)
- [H4lo/dictionary](https://github.com/H4lo/dictionary)
- [TheKingOfDuck/fuzzDicts](https://github.com/TheKingOfDuck/fuzzDicts) - Web Pentesting Fuzz 字典
- [Bo0oM/fuzz.txt](https://github.com/Bo0oM/fuzz.txt) - Potentially dangerous files
- [EdOverflow/bugbounty-cheatsheet](https://github.com/EdOverflow/bugbounty-cheatsheet) - A list of interesting payloads, tips and tricks for bug bounty hunters.
- [tennc/fuzzdb](https://github.com/tennc/fuzzdb) - 一个 fuzzdb 扩展库
- [7dog7/bottleneckOsmosis](https://github.com/7dog7/bottleneckOsmosis) - fuzz param,注释,js 字典,ctf
- [boy-hack/wooyun-payload](https://github.com/boy-hack/wooyun-payload) - 从乌云漏洞库中提取的扫描规则
- [DictionaryHouse/Dirpath_List](https://github.com/DictionaryHouse/Dirpath_List)
- [insightglacier/Dictionary-Of-Pentesting](https://github.com/insightglacier/Dictionary-Of-Pentesting)
- [p0dalirius/webapp-wordlists](https://github.com/p0dalirius/webapp-wordlists)
- [f0ng/JavaFileDict](https://github.com/f0ng/JavaFileDict) - Java应用的一些配置文件字典，来源于公开的字典与平时收集
**设备默认口令**
- [Default passwords list - Select manufacturer](https://default-password.info/)
- [Default Router Login, Passwords and IP Addresses](https://www.cleancss.com/router-default/)
- [Default Passwords | CIRT.net](https://cirt.net/passwords)
- [List of Default Passwords](https://datarecovery.com/rd/default-passwords/)
- [Router Passwords](https://portforward.com/router-password/)
- [Router Passwords Community Database - The Wireless Router Experts](https://www.routerpasswords.com/)
- [defaultpassword.us](http://defaultpassword.us/)
- [passwordsdatabase](http://passwordsdatabase.com/)
- [Open Sez Me!](http://open-sez.me/)
---
#### Hash爆破
- https://hashes.org/index.php
**相关工具**
- [moyuwa/toppwdhash](https://github.com/moyuwa/toppwdhash) - 常见密码哈希离线查询工具 , 包含算法类型 'md5', 'md5x2', 'md5x3', 'sha1', 'ntlm', 'mysql', 'mysql5', 'md5_sha1', 'sha1_sha1', 'sha1_md5', 'md5_base64', 'md5_middle'
**Hashcat**
- [Hashcat 笔记](./安全工具/Hashcat.md)
**John the Ripper**
- 官网 : https://www.openwall.com/john/
- 相关工具
    - [Johnny](https://openwall.info/wiki/john/johnny) - GUI 版本的 John the Ripper
- 相关文章
    - [Kali Linux：使用John the Ripper破解密码](http://topspeedsnail.com/John-the-Ripper-learn/)
    - [/etc/shadow文件破解，密码破解，md5，SHA256，SHA512破解](https://blog.csdn.net/NetRookieX/article/details/96431981)
- 跑未加密文件名的 7z 压缩包
    ```bash
    wget https://raw.githubusercontent.com/philsmd/7z2hashcat/master/7z2hashcat.pl
    perl 7z2hashcat.pl file.7z > hash.txt   # https://github.com/philsmd/7z2hashcat
    john --wordlist=pass1.txt hash.txt
    ```
- 跑 linux shadow 文件
    ```bash
    mkdir /root/.john
    cp passwd /root/.john
    cp shadow /root/.john
    cd /root/.john
    unshadow passwd shadow > hash.txt
    gunzip /usr/share/wordlists/rockyou.txt.gz
    john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt
    ```
- 补充
    跑 GPG,用 gpg2john 把它转换成 john 能理解的 hash 值再跑
    ```bash
    gpg2john test.gpg > hash
    john --wordlist=wordlist.txt hash
    ```
---
#### Web爆破
**Tips**
- 目录、文件是一个关键点,别忘了尝试对 GET、POST 参数进行 Fuzz、甚至 user-agent、cookie 都可以 fuzz
- wfuzz 是个神器、一定要会用
**相关工具**
- [wfuzz](./安全工具/Wfuzz.md)
- Burpsuite
- [lijiejie/htpwdScan](https://github.com/lijiejie/htpwdScan) - 一个简单的 HTTP 暴力破解、撞库攻击脚本
    ```
    htpwdScan.py -u https://jigsaw.w3.org/HTTP/Basic/ --auth user.txt passwd.txt
    htpwdScan.py -u https://jigsaw.w3.org/HTTP/Basic/ --auth tests/leaked_db.txt
    htpwdScan.py -u https://jigsaw.w3.org/HTTP/Digest/ --auth user.txt passwd.txt --pass-first