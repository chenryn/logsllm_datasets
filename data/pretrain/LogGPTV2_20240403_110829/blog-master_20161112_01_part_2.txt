```
这个命令等于传统的: route    
### 7.6. ip route flush -- 擦除路由表    
示例1: 删除路由表main中的所有网关路由（示例：在路由监控程序挂掉之后）：    
```
# ip -4 ro flush scope global type unicast    
```
示例2:清除所有被克隆出来的IPv6路由：    
```
# ip -6 -s -s ro flush cache    
```
示例3: 在gated程序挂掉之后，清除所有的BGP路由：    
```
# ip -s ro f proto gated/bgp    
```
示例4: 清除所有ipv4路由cache    
```
# ip route flush cache    
*** IPv4 routing cache is flushed.    
```
### 7.7 ip route get -- 获得单个路由 .缩写：get、g    
使用这个命令可以获得到达目的地址的一个路由以及它的确切内容。    
ip route get命令和ip route show命令执行的操作是不同的。ip route show命令只是显示现有的路由，而ip route get命令在必要时会派生出新的路由。    
示例1: 搜索到193.233.7.82的路由    
```
# ip route get 193.233.7.82    
193.233.7.82 dev eth0 src 193.233.7.65 realms inr.ac cache mtu 1500 rtt 300    
```
示例2: 搜索目的地址是193.233.7.82，来自193.233.7.82，从eth0设备到达的路由（这条命令会产生一条非常有意思的路由，这是一条到193.233.7.82的回环路由）    
```
# ip r g 193.233.7.82 from 193.233.7.82 iif eth0    
193.233.7.82 from 193.233.7.82 dev eth0 src 193.233.7.65 realms inr.ac/inr.ac    
cache  mtu 1500 rtt 300 iif eth0    
```
### 8. ip route -- 路由策略数据库管理命令    
命令    
add、delete、show(或者list)    
注意：策略路由(policy routing)不等于路由策略(rouing policy)。    
在某些情况下，我们不只是需要通过数据包的目的地址决定路由，可能还需要通过其他一些域：源地址、IP协议、传输层端口甚至数据包的负载。    
这就叫做：策略路由(policy routing)。    
### 8.1. ip rule add -- 插入新的规则    
ip rule delete -- 删除规则    
缩写：add、a；delete、del、d    
示例1: 通过路由表inr.ruhep路由来自源地址为192.203.80/24的数据包    
```
ip ru add from 192.203.80/24 table inr.ruhep prio 220    
```
示例2:把源地址为193.233.7.83的数据报的源地址转换为192.203.80.144，并通过表1进行路由    
```
ip ru add from 193.233.7.83 nat 192.203.80.144 table 1 prio 320    
```
示例3:删除无用的缺省规则    
```
ip ru del prio 32767    
```
### 8.2. ip rule show -- 列出路由规则    
缩写：show、list、sh、ls、l    
示例1:   
```
# ip ru ls    
0: from all lookup local    
32762: from 192.168.4.89 lookup fddi153    
32764: from 192.168.4.88 lookup fddi153    
32766: from all lookup main    
32767: from all lookup 253    
```
### 9. ip maddress -- 多播地址管理    
缩写：show、list、sh、ls、l    
### 9.1.ip maddress show -- 列出多播地址    
示例1:   
```
# ip maddr ls dummy    
```
### 9.2. ip maddress add -- 加入多播地址    
ip maddress delete -- 删除多播地址    
缩写：add、a；delete、del、d    
使用这两个命令，我们可以添加／删除在网络接口上监听的链路层多播地址。这个命令只能管理链路层地址。    
示例1: 增加   
```
# ip maddr add 33:33:00:00:00:01 dev dummy    
```
示例2: 查看 
```
# ip -O maddr ls dummy    
```
2: dummy    
```
link 33:33:00:00:00:01 users 2 static    
link 01:00:5e:00:00:01    
```
示例3: 删除 
```
# ip maddr del 33:33:00:00:00:01 dev dummy    
```
### 10. ip mroute -- 多播路由缓存管理    
### 10.1. ip mroute show -- 列出多播路由缓存条目    
缩写：show、list、sh、ls、l    
示例1:查看   
```
# ip mroute ls    
(193.232.127.6, 224.0.1.39) Iif: unresolved    
(193.232.244.34, 224.0.1.40) Iif: unresolved    
(193.233.7.65, 224.66.66.66) Iif: eth0 Oifs: pimreg    
```
示例2:查看   
```
# ip -s mr ls 224.66/16    
(193.233.7.65, 224.66.66.66) Iif: eth0 Oifs: pimreg    
9383 packets, 300256 bytes    
```
### 11. ip tunnel -- 通道配置    
缩写    
tunnel、tunl    
```
ip tunnel add -- 添加新的通道    
ip tunnel change -- 修改现有的通道    
ip tunnel delete -- 删除一个通道    
```
缩写：add、a；change、chg；delete、del、d    
示例1:建立一个点对点通道，最大TTL是32    
```
# ip tunnel add Cisco mode sit remote 192.31.7.104 local 192.203.80.1 ttl 32    
```
### 11.1. ip tunnel show -- 列出现有的通道    
缩写：show、list、sh、ls、l    
示例1:   
```
# ip -s tunl ls Cisco    
```
### 12. ip monitor和rtmon -- 状态监视    
ip命令可以用于连续地监视设备、地址和路由的状态。这个命令选项的格式有点不同，命令选项的名字叫做monitor，接着是操作对象：    
ip monitor [ file FILE ] [ all | OBJECT-LIST ]    
示例1: # rtmon file /var/log/rtmon.log    
示例2: # ip monitor file /var/log/rtmon.log r    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")