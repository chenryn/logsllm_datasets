User: 如何使用Ansible来管理和自动化服务器配置？提供一个基本的Playbook示例。
Assistant: Ansible是一个自动化工具，可以帮助管理员轻松快捷地管理和部署服务器配置。以下是一个基本的Playbook示例，用于安装Nginx并创建一个简单的网页：

```
---
- name: Install and configure Nginx
  hosts: web-servers
  become: yes

  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start Nginx service
      service:
        name: nginx
        state: started

    - name: Create webpage
      copy:
        dest: /usr/share/nginx/html/index.html
        content: "<html><body><h1>Welcome to my page!</h1></body></html>"
```

在这个Playbook示例中，有三个任务：

1. 安装Nginx

2. 启动Nginx服务

3. 创建一个简单的网页

在任务之前，我们声明了这个Playbook将运行在"web-servers"这个主机组中，并且在执行任务时要使用sudo权限。

现在我们运行这个Playbook可以通过以下命令：

```
ansible-playbook install_nginx.yml
```

这个命令将会自动连接到web-servers组中的每台主机，并执行任务。之后，我们就可以在浏览器中访问主机的IP地址，看到一个简单的欢迎页面了。

值得注意的是，这个Playbook示例是非常基础的，仅仅展示了Ansible的部分功能。在实际应用中，Playbook中的tasks和变量会更加复杂和详细，以便自动化更多的任务。