User: BACKGROUND:
I work on a small team in a large company where I'm currently revamping the licensing system for a suite of mixed .Net and Win32 products that I update annually. Each product references a win32 .dll for product validation. I only have the binary file and the header file for the licensing module (so no hash algorithm). Somehow customers are able to purchase software on our website and receive a disk in the mail with a serial key. Keys or product specific and so disks and keys can be easily shared.
GOALS:

Modify the hash input so keys are now based on major version number (done).
Implement a web service using App Engine (it's just me so I don't want to maintain any hardware) whereby a user can purchase a serial that is automatically generated and delivered via email.
Use the existing licensing module or replicate the hash/API (I would like whoever is sending out serial keys to continue to do so except for maybe a minor change to their work flow, like adding the version number).

QUESTIONS:

Is there any way to write wrap this win32 library in a python module and use it on Google's App Engine?
Are there any tools to discover the hashing algorithm being used? The library exports a generatekey function?

Any other comments or suggestions are greatly appreciated.
Cheers,
Tom
Assistant: Nope, App Engine's python runtime only supports pure python modules.  Wrapped native code modules won't work.