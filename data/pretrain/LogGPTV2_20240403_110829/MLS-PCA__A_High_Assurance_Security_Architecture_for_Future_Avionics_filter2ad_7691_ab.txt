### Management, Sensor Processing, Control, and Display Processing

The high-level language software for these functions collectively amounts to millions of source lines of code (SLOC), a figure that continues to grow with new developments. This includes communications processing and control management.

### Exponential Growth in Computer Hardware Logic

Over the past 30 years, the logic capacity per chip has grown exponentially, doubling approximately every 18 months. This trend, first described by Moore's Law, is expected to continue, with a forecast of 12 doublings by 2020, resulting in a 4,000-fold increase in logic capacity. The challenge will be to build a high-assurance Multi-Level Security (MLS) system from an array of 400,000 processors. We are entering an era of unprecedented logic density.

### An AAP Hosted on Its Own Processor

An Avionics Application Process (AAP) is hosted on its own processor, eliminating the need to share resources with other AAPs. This simplifies the system, as there is no requirement for a complex resource manager or operating system. A simple network protocol stack and loader are sufficient. Features such as domain management, context switching, memory sharing, and process scheduling are unnecessary. This simplicity allows for more straightforward hardware and CPU architectures, ideal for high-density, multi-processor chips like those in the DARPA PCA. The greatest security benefit is the dedication of each processor to a single security level, corresponding to the loaded AAP process.

### Example of an MLS-PCA Secure Network

Figure 4 illustrates a small example of an MLS-PCA secure network, showing the pairing of each AAP-EPE, including the NSE-EPE pair in the bottom center of the figure.

### MLS-PCA Functional Model

#### Avionics Components and Ground Support Functions

Avionics components, such as air vehicle controls, navigation systems (e.g., GPS), inertial sensors, targeting systems, weapons control, and communication systems, are well-defined by the mission. Ground support functions, including maintenance, logistics, mission planning, analysis, and training, also influence the avionics configuration. Mission planning determines flight plans, weapons, radio frequencies, cryptographic keys, weather, and targets. These plans are embodied in software programs and databases dynamically loaded into the air vehicle before takeoff via a Portable Memory Device (PMD) carried by the pilot or crew.

#### Avionics Application Process (AAP)

AAPs are the untrusted "subjects" in the Bell-LaPadula access control policy model. They operate at various security levels, often Unclassified or Secret. Mission planning selects the required software, constructs an access matrix specifying security levels and permissions, and defines the avionics system configuration, including network addresses and initial cryptographic keys. The PMD, which contains this classified data, is encrypted to protect against theft, unauthorized modification, and disclosure during transport from the mission-planning center to the air vehicle.

#### Encryption Processing Element (EPE)

Each AAP is protected by an EPE, which performs message encryption/decryption for all Inter-Process Communication (IPC) traffic. There is no bypass of the EPE, ensuring that a cryptographic computing element fronts each computational element. EPEs can be software or hardware and may number in the thousands. They handle key management, such as unwrapping encrypted keys using a wrapper key distributed out-of-band, possibly via a physical ignition key inserted by the pilot or built into each EPE's nonvolatile memory.

#### Network Security Element (NSE)

The NSE distributes encryption keys to the EPEs, enforcing access control of communication paths between AAP pairs. It maintains an access matrix of authorized permissions for each AAP, stored as a database with unique keys for each dimension of the security policy. The NSE creates trusted connections by sending session keys to the EPEs, computed based on the maximum authorized permission of the paired application processes. The NSE access matrix is established by mission planning and transported to the avionics system on a PMD at mission initiation, with dynamic updates allowed by authorized roles.

#### Security Policy Enforced by Encryption

The enforcement mechanism in the MLS-PCA model is the allocation of an encryption key for trusted connections between two AAPs. The NSE computes the session key for each open request based on applicable security policies, such as MAC, DAC, and Mission. AAPs are treated as untrusted subjects, while trusted connections (TCs) are treated as security objects. TCs are simplex (unidirectional), allowing for blind write-up or Append operations. The MLS-PCA model uses Bell-LaPadula for MAC and a DAC matrix for further access control, with coalition keys for multi-party trusted connections.

#### Crypto Issues

The MLS-PCA model does not specify the implementation of the encryption function, whether in software or hardware, but it must be correct, always invoked, and bound to its AAP. The model is also silent on the encryption algorithm, assuming compatibility with DOD Type I and II encryption and commercial algorithms like Triple DES and AES. A Public Key Infrastructure (PKI) scheme is specified for secure key distribution during system boot. Key management is closely tied to the security policy, and the system must have a means to revoke access immediately upon detecting hostile or runaway behavior.

---

This optimized text aims to provide a clearer, more coherent, and professional presentation of the original content.