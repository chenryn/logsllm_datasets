# CVE-2020-17087在野0day分析
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
2020年10月30日，谷歌P0团队[批露](https://bugs.chromium.org/p/project-zero/issues/detail?id=2104)了微软尚未修复的内核在野0day，[CVE-2020-17087,](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-17087)
谷歌称目前已发现在野利用，目前微软尚未发布针对此漏洞的补丁程序，预计本周二（11/10）补丁日进行修复。
目前此漏洞POC已被P0[公开](https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=472684)，预计影响为Win7以后全平台。
当前测试环境：Win10 1903 x64（已安装10月补丁）。
## 漏洞原理
此漏洞为Windows内核加密模块（cng.sys）出现的整数溢出和缓冲区漏洞，在函数cng!CfgAdtpFormatPropertyBlock，由于对传入的第二参数进行乘以6后，出现上溢，造成后续申请缓冲区过小，访问内核无效内存，造成BSOD。
调用栈回溯如下：
    2: kd> !analyze -v
    Connected to Windows 10 18362 x64 target at (Fri Nov  6 20:49:23.242 2020 (UTC + 8:00)), ptr64 TRUE
    Loading Kernel Symbols
    ..................................
    Press ctrl-c (cdb, kd, ntsd) or ctrl-break (windbg) to abort symbol loads that take too long.
    Run !sym noisy before .reload to track down problems loading symbols.
    .............................
    ................................................................
    ...........................................................
    Loading User Symbols
    .....
    Loading unloaded module list
    .....
    ************* Symbol Loading Error Summary **************
    Module name            Error
    SharedUserData         No error - symbol load deferred
    You can troubleshoot most symbol related issues by turning on symbol loading diagnostics (!sym noisy) and repeating the command that caused symbols to be loaded.
    You should also verify that your symbol search path (.sympath) is correct.
    ERROR: FindPlugIns 8007007b
    ERROR: Some plugins may not be available [8007007b]
    *******************************************************************************
    *                                                                             *
    *                        Bugcheck Analysis                                    *
    *                                                                             *
    *******************************************************************************
    PAGE_FAULT_IN_NONPAGED_AREA (50)
    Invalid system memory was referenced.  This cannot be protected by try-except.
    Typically the address is just plain bad or it is pointing at freed memory.
    Arguments:
    Arg1: ffffcf0640665000, memory referenced.
    Arg2: 0000000000000002, value 0 = read operation, 1 = write operation.
    Arg3: fffff8023daa2924, If non-zero, the instruction address which referenced the bad memory
        address.
    Arg4: 0000000000000002, (reserved)
    Debugging Details:
    ------------------    
    *** WARNING: Unable to verify checksum for CVE-2020-17087.exe
    KEY_VALUES_STRING: 1
    PROCESSES_ANALYSIS: 1
    SERVICE_ANALYSIS: 1
    STACKHASH_ANALYSIS: 1
    TIMELINE_ANALYSIS: 1
    DUMP_CLASS: 1
    DUMP_QUALIFIER: 0
    BUILD_VERSION_STRING:  18362.1.amd64fre.19h1_release.190318-1202
    DUMP_TYPE:  0
    BUGCHECK_P1: ffffcf0640665000
    BUGCHECK_P2: 2
    BUGCHECK_P3: fffff8023daa2924
    BUGCHECK_P4: 2
    READ_ADDRESS:  ffffcf0640665000 Special pool
    FAULTING_IP: 
    cng!CfgAdtpFormatPropertyBlock+a8
    fffff802`3daa2924 668901          mov     word ptr [rcx],ax
    MM_INTERNAL_CODE:  2
    IMAGE_NAME:  cng.sys
    DEBUG_FLR_IMAGE_TIMESTAMP:  0
    MODULE_NAME: cng
    FAULTING_MODULE: fffff8023da40000 cng
    CPU_COUNT: 4
    CPU_MHZ: e10
    CPU_VENDOR:  GenuineIntel
    CPU_FAMILY: 6
    CPU_MODEL: 9e
    CPU_STEPPING: 9
    CPU_MICROCODE: 6,9e,9,0 (F,M,S,R)  SIG: 8E'00000000 (cache) 8E'00000000 (init)
    DEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT
    BUGCHECK_STR:  AV
    PROCESS_NAME:  CVE-2020-17087.exe
    CURRENT_IRQL:  0
    ANALYSIS_SESSION_HOST:  
    ANALYSIS_SESSION_TIME:  11-06-2020 20:49:59.0083
    ANALYSIS_VERSION: 10.0.18362.1 amd64fre
    TRAP_FRAME:  ffffe10a83626d10 -- (.trap 0xffffe10a83626d10)
    NOTE: The trap frame does not contain all registers.
    Some register values may be zeroed or incorrect.
    rax=0000000000000020 rbx=0000000000000000 rcx=ffffcf0640665000
    rdx=ffffcf0640664ff0 rsi=0000000000000000 rdi=0000000000000000
    rip=fffff8023daa2924 rsp=ffffe10a83626ea0 rbp=0000000000002aab
     r8=0000000000002aa9  r9=0000000000000002 r10=fffff8023dadce70
    r11=ffffe10a83626df0 r12=0000000000000000 r13=0000000000000000
    r14=0000000000000000 r15=0000000000000000
    iopl=0         nv up ei ng nz ac po nc
    cng!CfgAdtpFormatPropertyBlock+0xa8:
    fffff802`3daa2924 668901          mov     word ptr [rcx],ax ds:ffffcf06`40665000=????
    Resetting default scope
    LAST_CONTROL_TRANSFER:  from fffff8023cb67ef2 to fffff8023ca89b30
    STACK_TEXT:  
    ffffe10a`836262c8 fffff802`3cb67ef2 : ffffcf06`40665000 00000000`00000003 ffffe10a`83626430 fffff802`3c9e32f0 : nt!DbgBreakPointWithStatus
    ffffe10a`836262d0 fffff802`3cb675e7 : fffff802`00000003 ffffe10a`83626430 fffff802`3ca963f0 ffffe10a`83626970 : nt!KiBugCheckDebugBreak+0x12
    ffffe10a`83626330 fffff802`3ca81de7 : fffff802`3cd234f8 fffff802`3cb91a45 ffffcf06`40665000 ffffcf06`40665000 : nt!KeBugCheck2+0x947
    ffffe10a`83626a30 fffff802`3cac719e : 00000000`00000050 ffffcf06`40665000 00000000`00000002 ffffe10a`83626d10 : nt!KeBugCheckEx+0x107
    ffffe10a`83626a70 fffff802`3c95459f : 00000000`00000fff 00000000`00000002 00000000`00000000 ffffcf06`40665000 : nt!MiSystemFault+0x19dcee
    ffffe10a`83626b70 fffff802`3ca8fd5e : ffffcf06`1a5f0080 ffffcf06`40664ff0 ffffcf06`397f7000 fffff802`3c97f1ad : nt!MmAccessFault+0x34f
    ffffe10a`83626d10 fffff802`3daa2924 : 00000000`00000010 00000000`00040200 ffffe10a`83626ec8 00000000`00000018 : nt!KiPageFault+0x35e
    ffffe10a`83626ea0 fffff802`3daa224e : 00000000`00000000 ffffe10a`83626fd0 ffffcf06`397f7000 00000000`00000001 : cng!CfgAdtpFormatPropertyBlock+0xa8
    ffffe10a`83626ed0 fffff802`3daa0282 : 00000000`00000005 ffffe10a`836276a0 ffffcf06`397f7000 ffffcf06`397f6200 : cng!CfgAdtReportFunctionPropertyOperation+0x23e
    ffffe10a`836273f0 fffff802`3da89580 : ffffe10a`836276a0 ffffcf06`397f6100 ffffe10a`83627570 ffffcf06`397f6200 : cng!BCryptSetContextFunctionProperty+0x3a2
    ffffe10a`836274f0 fffff802`3da52e86 : 00000000`00003aab 00000000`00000008 00000000`00003aab ffffcf06`397ef000 : cng!_ConfigurationFunctionIoHandler+0x3bd5c
    ffffe10a`836275e0 fffff802`3da52d22 : 00000000`00003aab fffff802`3da52c64 00000000`00000010 00000000`00040344 : cng!ConfigFunctionIoHandler+0x4e
    ffffe10a`83627620 fffff802`3da51567 : 00000000`00000000 fffff802`00003aab 00000000`00000000 00000000`00010400 : cng!ConfigIoHandler_Safeguarded+0xd2
    ffffe10a`83627690 fffff802`3da4e0ea : 00000000`00000000 ffffcf06`377fbda0 ffffcf06`377fbcd0 00000000`00000008 : cng!CngDeviceControl+0x97
    ffffe10a`83627760 fffff802`3c8eb4e9 : ffffcf06`377fbcd0 00000000`00000000 00000000`00000002 00000000`00000001 : cng!CngDispatch+0x8a
    ffffe10a`836277a0 fffff802`3ce90a55 : ffffe10a`83627b00 ffffcf06`377fbcd0 00000000`00000001 ffffcf06`2db2d930 : nt!IofCallDriver+0x59
    ffffe10a`836277e0 fffff802`3ce90860 : 00000000`00000000 ffffe10a`83627b00 ffffcf06`377fbcd0 ffffe10a`83627b00 : nt!IopSynchronousServiceTail+0x1a5
    ffffe10a`83627880 fffff802`3ce8fc36 : 00000258`88818000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!IopXxxControlFile+0xc10
    ffffe10a`836279a0 fffff802`3ca93555 : 00000000`00000000 00000000`00000000 00000000`00000000 00000072`294ff7e8 : nt!NtDeviceIoControlFile+0x56
    ffffe10a`83627a10 00007ffe`6b65c1a4 : 00007ffe`6930eaa7 00000000`00000000 cccccccc`cccccccc cccccccc`cccccccc : nt!KiSystemServiceCopyEnd+0x25
    00000072`294ffb18 00007ffe`6930eaa7 : 00000000`00000000 cccccccc`cccccccc cccccccc`cccccccc cccccccc`cccccccc : ntdll!NtDeviceIoControlFile+0x14
    00000072`294ffb20 00007ffe`69db6430 : 00000000`00390400 cccccccc`cccccccc cccccccc`cccccccc cccccccc`cccccccc : KERNELBASE!DeviceIoControl+0x67
    00000072`294ffb90 00007ff7`c952e475 : 00000000`00000000 00000000`00000000 00000072`294ffc20 00000000`00000000 : KERNEL32!DeviceIoControlImplementation+0x80
    00000072`294ffbe0 00007ff7`c952ed44 : 00007ff7`c952ea80 00007ff7`c953004d 00000000`00000000 00007ff7`c95dd790 : CVE_2020_17087!main+0x285 [d:\project\c++\cve-2020-17087\cve-2020-17087\cve-2020-17087.cpp @ 55] 
    00000072`294ffde0 00007ff7`c952ebe7 : 00007ff7`c95dd000 00007ff7`c95dd220 00000000`00000000 00000000`00000000 : CVE_2020_17087!invoke_main+0x34 [f:\dd\vctools\crt\vcstartup\src\startup\exe_common.inl @ 65] 
    00000072`294ffe20 00007ff7`c952eaae : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : CVE_2020_17087!__scrt_common_main_seh+0x127 [f:\dd\vctools\crt\vcstartup\src\startup\exe_common.inl @ 253] 
    00000072`294ffe80 00007ff7`c952ed69 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : CVE_2020_17087!__scrt_common_main+0xe [f:\dd\vctools\crt\vcstartup\src\startup\exe_common.inl @ 296] 
    00000072`294ffeb0 00007ffe`69db7c24 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : CVE_2020_17087!mainCRTStartup+0x9 [f:\dd\vctools\crt\vcstartup\src\startup\exe_main.cpp @ 17] 
    00000072`294ffee0 00007ffe`6b62cea1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : KERNEL32!BaseThreadInitThunk+0x14
    00000072`294fff10 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21
    THREAD_SHA1_HASH_MOD_FUNC:  93bb0a37142c095b1b37f11f6eef148b047836ba
    THREAD_SHA1_HASH_MOD_FUNC_OFFSET:  bdcdc47df46b8a0e8d0af92560d7f5cbc351f2ce
    THREAD_SHA1_HASH_MOD:  539b7118e8662a78213df7350439d52c7ac5ea35
    FOLLOWUP_IP: 