# 优化后的文本

## 概述
本文档介绍了FPGate，一种针对函数指针的安全保护方法。通过对比现有的保护技术（如PointGuard、EncodePointer和CFI），FPGate在性能、鲁棒性和易部署性方面表现出色。

## 性能基准测试
下表展示了SPECint2006基准测试中各个程序的运行时间（单位：秒）：

| 程序 | 基准测试结果 |
| --- | --- |
| 400.perlbench | 1,380 |
| 401.bzip2 | 73 |
| 403.gcc | 3,501 |
| 429.mcf | 73 |
| 445.gobmk | 1,967 |
| 456.hmmer | 117 |
| 458.sjeng | 84 |
| 464.h264ref | 185 |
| 471.omnetpp | 4,798 |
| 473.astar | 95 |

此外，还展示了浏览器模块的性能数据：
- mshtml.dll (IE6): 1,526 秒
- xul.dll (FF3.6): 145,224 秒

## 安全性比较
FPGate限制了间接跳转指令只能转移到具有ID的有效目标。尽管FPGate只使用一个ID，因此提供的保护较弱，但由于构建完整的控制流图的复杂性，CFI引入的唯一ID数量也相对较少。因此，FPGate与CFI之间的安全差距并不大。

我们从Metasploit和ExploitDB中选择了7个公开的漏洞，并在运行Windows XP SP3的虚拟机上进行了测试。这些漏洞及其对应的加固应用程序如下表所示：

| ID | CVE编号 | 应用程序 | 漏洞类型 | 受保护模块 | 是否受保护 |
| --- | --- | --- | --- | --- | --- |
| 1 | CVE-2011-0065 | FF 3.6 | Use After Free | xul.dll | 是 |
| 2 | CVE-2010-0249 | IE 6 | Use After Free | mshtml.dll | 是 |
| 3 | CVE-2008-0348 | coolplayer | Stack Overflow | core exe | 是 |
| 4 | CVE-2010-5081 | RM-MP3 | Stack Overflow | core exe | 是 |
| 5 | OSVDB-83362 | urlhunter | Stack Overflow | core exe | 是 |
| 6 | CVE-2007-1195 | XM ftp | Format String | core exe | 是 |
| 7 | OSVDB-82798 | ComSndFTP | Format String | core exe | 是 |

测试结果显示，所有这些保护方案都能有效防止目标浏览器受到攻击。

## 其他信息
FPGate通过解码目标二进制文件并重写它们来实现保护。静态分析时间与目标文件大小成正比，通常较小。例如，对于1,200KB的gcc程序，静态分析时间为63秒；对于80KB的mcf程序，静态分析时间仅为0.16秒。

FPGate为每个编码函数分配16字节的空间，运行时内存开销与函数数量成正比。例如，perlbench约有700个函数，运行时内存开销约为10KB。

## 讨论
FPGate依赖于重定位表来解码二进制文件并重写它们。最近发表的工作REINS利用IDA Pro提供了类似的保护，但IDA Pro存在显著的解码错误。REINS无法识别所有有效的函数指针，因此需要在运行时维护查找表来编码函数指针，从而引入更大的运行时开销。此外，如果计算的跳转目标位于外部模块并通过GetProcAddress等方法检索，REINS将无法保护控制流，导致兼容性问题。

FPGate仅使用一个ID，允许跳转到任何具有ID的有效目标，这使得它容易受到Jump-to-libc攻击。进一步的工作需要防御这种类型的攻击。

## 结论
本文研究了几种针对函数指针的保护方法，包括PointGuard、EncodePointer和CFI。受这些方法启发，提出了一种新的方法FPGate。FPGate限制所有间接调用和跳转只能转移到已知的有效目标，能够阻止各种针对函数指针的攻击。FPGate可以通过现代编译器生成的可执行文件进行二进制重写来应用。与其他现有保护方法相比，FPGate在性能、鲁棒性和兼容性方面取得了良好的平衡。

## 致谢
本研究得到了中国国家自然科学基金、中国发改委信息安全基金、美国国家科学基金会等多个机构的支持。

## 参考文献
[1] M. Abadi, M. Budiu, U. Erlingsson, and J. Ligatti. Control-Flow Integrity: Principles, Implementations, and Applications. In Proceedings of the 12th ACM Conference on Computer and Communications Security, pages 340–353, 2005.
...
[21] C. Zhang, T. Wei, Z. Chen, L. Duan, L. Szekeres, S. McCamant, D. Song, and W. Zou. Practical Control Flow Integrity & Randomization for Binary Executables. In Proceedings of the 34th IEEE Symposium on Security and Privacy, San Francisco, CA, May 2013.

希望这个优化后的版本更清晰、连贯和专业。如有其他需求，请随时告知。