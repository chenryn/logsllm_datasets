Fortify源代码分析器是一款静态分析工具，它能够处理代码并尝试识别漏洞。它使用一种
运行在源代码文件或文件集之上的构建工具并将文件转换成一种中间模型，公司则针对安全分
析对该模型进行优化。
105
---
## Page 120
SQL注入攻击与防御（第2版）
●URL: www.fortify.com/products/hpfssc/source-code-analyzer.html
·语言：超过18种编程语言。
●平台：Windows、Mac、Solaris、Linux、AIX 和 HP-UX.
·IDE：支持多种集成开发环境，比如Microsoft VisualStudio、Eclipse、WebSphere
Application Developer 和I IBM Rational Application Developer。
·价格：联系厂商询价。
3.3.13 Rational AppScan Source Edition
AppScanSource Edition是一款静态分析工具，它通过复查数据和调用流程来识别漏洞.与
Fortify类似，Rational AppScan Source Edition 被设计用于集成到企业开发环境中，但是也可以
单独运行该软件。
● URL: www.ibm.com/software/rational/products/appscan/source/,
·语言：超过15种开发语言。
●平台：Windows、Solaris 和Linux
● IDE: Microsoft Visual Studio、 Eclipse 和 IBM Rational Application Developer
·价格：联系厂商询价。
3.3.14 CodeSecure
CodeSecure用于企业级应用或被用作集群(hosted)软件服务。CodeSecure WorkBcnch可作
为 Microsof Visual Studio、Eclipse 和 IBM Rational Application Developer 集成开发环境(IDE)的
插件。CodeSecure基于自由模式算法，通过计算所有可能的执行路径来确定输入数据的行为输
出。在分析过程中，它会跟踪每个漏洞至原来的输入点和引发该漏润的代码行，并提供一幅漏
洞在应用中的传播图。
●URL: www.armorize.com。
●语言：Java、PHP、ASP 和.NET。
·平台：基于Web的平台。
● IDE: Visual Studio、 Eclipse 和u IBM Rational Application Developer。
·价格：参考报价。
3.3.15 Klocwork Solo
KlocworkSolo是一款独立的源代码分析工具，一些专注于移动和Web应用程序开发的Java
开发人员使用该工具进行源代码分析。KlocworkSolo声称其Eclipse插件可以自动发现一些危
险的问题，比如资源泄露(Resource Lcak)、NULL 指针异常(NULL Pointer Exception)、SQL注
入和被感染的数据（TaintedData)。
●URL: www.klocwork.com/products/solo/。
·语言：Java。
·平台：Windows 32bit。
·IDE: Eclipse。
·价格：联系厂商询价。
106
---
## Page 121
第3章复查代码中的SQL注入
3.4本章小结
本章介绍了如何使用手动静态代码分析技术复查源代码以识别感染型漏洞。在熟练掌握代
码审查技术之前，需要不断练习学到的技术和方法。这些技能有助于读者更好地理解为什么
SQL注入漏洞在引起公众关注多年之后仍广泛存在于代码中。我们讨论的工具、功能和产品可
帮助读者构造一个高效的审查源代码的工具箱，它不仅可用于SQL注入漏洞，还可用于其他
能引发漏洞利用的常见编码错误。
为更好地提高技能，可尝试对一些公开存在漏洞的应用进行测试，这些程序中包含了已发
WebApplications Project，它是以VMware虚拟机的格式发布的。可以从http:/code.google.com/p/
owaspbwa/wiki/ProjectSummary下载该项目。它包含了多种源代码的应用程序和培训资料、故
意逼真设计的易受攻击的应用程序，还包括了很多低版本的真实应用程序。在Google上快速
搜索一下Vulnerable WebApplications，就可以找到大量目标应用程序。
应尽量多地尝试本章列出的自动工具以便找到一款适合自己的工具。不要害怕跟开发人员
联系，大胆地向他们提出建设性的反馈意见，可以谈谈该工具应如何改进，或者给出一些能够
降低工具效能的条件。我发现他们很喜欢听取意见，并且一直在努力改进自已的工具。祝您“
猎”愉快！
3.5快速解决方案
1.复查源代码中的SQL注入
分析源代码漏洞时主要有两种方法：静态代码分析和动态代码分析。静态代码分析是指在
分析源代码的过程中并不真正执行代码，而是在Web应用安全语境中进行。动态代码分析则
是指在代码运行过程中对其进行分析。
易受感染数据是指从不可信源（渗入源，不管是Web表单、cookie还是输入参数）收到的数
据。受感染数据在程序易受攻击的位置点（渗入点）会引发潜在的安全问题。渗入点是一种安全
敏感函数（例如，执行 SQL语句的函数)
为、识别安全敏感函数、定位所有负责处理用户输入的可能方法并借助执行路径或数据流来跟
踪受感染数据至其源头。
配备了全面的搜索字符串列表后，便可以进行手动源代码复查了，最简单、直接的方法是
使用UNIX工具grep（同样适用于Windows系统)。
2.自动复查源代码
截至本书写作时，目动工其集成了三种不同的分析方法：基于字符串的模式匹配、词法标
记匹配以及借助抽象语法树（AST）和或）控制流图CFG）的数据流分析
有些自动工具使用正则表达式字符串匹配来识别渗入点（将受感染数据作为参数传递）和渗
入源（应用程序中产生不可信数据的位置点)。
107
---
## Page 122
SQL注入攻击与防御（第2版）
词法分析接收一个由很多字符构成的输入字符串，并将其经过处理后产生一个符号序列
（称为词法标记）。可以使用工具对源文件进行预处理和分词操作，然后根据渗入点库来匹配这
些词法标志。
AST是一种表示简化的源代码语法结构的树。可以使用AST对源代码元素执行深层分析
以帮助跟踪数据流并识别渗入点和渗入源。
数据流分析是一种负责收集程序中有关数据使用、定义和依赖关系等信息的操作。数据流
分析算法运行在AST产生的CFG上。
可以使用CFG来确定程序中将特定值分配给变量后，该变量所能传播到的代码块。CFG
使用图形标记来表示程序执行过程中可能遍历到的所有路径。
3.6常见问题解答
问题：如果我在开发生命周期中集成了源代码分析套件，我的软件是否安全？
解答：否，套件本身无法保证安全。优秀的质量保证技术可以有效识别并消除开发阶段的
漏洞。高效的质量保证程序应该集成渗透测试、模糊测试(fuzz testing)和源代码审
查技术。使用复合的方法有助于软件产生更少的缺陷和漏洞，工具无法替代人的复
查，手动源代码审查仍然是最终质量保证（QA）的有效组成部分。
问题：X工具向我提供了一份清洁无疫证明。这是否意味着我的代码中不存在漏洞？
解答：否，您不能依赖任何一款工其。百先应保证该工具已正确配置，然后再与其他工具
（至少一款）产生的结果进行比较。当第一次复查时，配置正确且有效的工具很少会
产生安全无漏润的证明。
问题：管理人员对X工具提供的度量报告和趋势分析统计非常满意。这些数据有多大可
信度？
解答：如果该工具生成报告时是基于已被单独确认的真实漏洞，而不是基于产生的警告，
部么该工具对于跟踪投资回报率来说会很有帮助。
问题：grep和awk是GNU 针对经验不足的初级Linux用户推出的薪工具，是否真的有针
对Windows用户的替代产品？
解答：grep和awk也适用于Windows 系统。如果这样还是感觉不太公平，可以使用Win32
系统自带的findstr工具，还可以使用IDE搜索符合字符申模式的源文件，甚至可
以使用插件来扩展IDE的功能。这方面Google会是您的好帮手。
问题：我认为识别出了X应用源代码中的一个漏洞。有个渗入点使用了渗入源的易受感染
数据。通过跟综数据流和执行路径，我非常确信存在一个真正的SQL注入漏润。怎
样才能完全背定该漏润，接下来该怎么做？
解答：选择什么道路完全取决于您自己。您可以选择阴暗的一面一利用该漏润获取利益，
也可以将漏洞报告给厂商并与他们一起合作来修复该漏洞，这样您可以得到名声和
机会，同时展示了您的高超技艺和负责任的态度。如果您是一名软件开发人员或厂
商的审查负，可以会试使用本书介绍的技术和工具来利用该漏润处于测试坏境下并
108
---
## Page 123
第3章复查代码中的SQL注入
且得到了系统和应用所有者的明确许可），这样可以向管理层展示您的才华以期最终
获得提拔。
问题：我没有钱购买商业源代码分析器，在免费工具中是否真的存在好用的替代品？
解答：先试用这些工具，然后视情况而定。这些工具并不完美，它们缺少商业软件所具有
的大量资源，而且肯定缺少很多附加的产品特色，但是仍然非常值得一试，试用时，
记着向开发人员提出您的建设性反馈意见，并与他们一起提高产品的性能，以此来
帮助开发人员改进产品。学会对工具进行扩展以使其符合自已的需求和环境。如果
可能，可以考虑向项目提供经济援助或资源来实现双赢。
109
---
## Page 125
第4章
利用SQL注入
本章目标
·理解常见的利用技术
识别数据库
使用UINON语句提取数据
使用条件语句
枚举数据库模式
·注入INSERT查询
·提升权限
·窃取哈希口令
带外通信
·移动设备的SQL注入
·自动利用SQL注入
4.1概述
找到并确认SQL注入漏洞后，可以利用它做哪些事情呢？读者可能知道可以利用它与数
据库进行交互，但读者并不知道后台数据库的类型，也不知道与正在注入的查询及其所访问的
表相关的内容。通过使用推断技术和应用程序所反馈的有用错误，可以确定上述所有内容甚至
更多信息。
多后面章节要用到的构造块，并学习漏润利用技术读取或返回数据以便浏览器访问、枚举数据
库模式、带外（例如，不通过测览器）返回信息要用到的技术。有些攻击是为了提取远程数据库
中保存的数据，有些攻击则关注于DBMS（数据库管理系统）本身，比如尝试窃取数据库用户的
哈希口令（passwordhash)。由于有些攻击需要在管理员权限下才能成功执行，面很多应用程序
上运行的查询是在普通用户权限下执行的，因而我们还将说明一些获取管理员权限的策略。最
后，为避免依靠手动完成所有内容，我们还将介绍一些能够将很多步骤有效自动化的技术和工
具（其中很多都是由本书作者自己编写的)。
1.译者注：原文此处为“rabbeit hole”。出自电影“黑客帝国”中的台词。不过最初出自于英国人Lewis Carroll 的畅销儿童读
物《爱图丝液游奇境记》。
2.译者注：原文此处为“redpill°，也出白“黑客帝国”中的台词，与blaepil 相对，是Neo 所服的药丸。服用整色药丸会使
人依旧存在于虚幻之中。而服用红色药丸则会让人知道整个事实的真相。
---
## Page 126
SQL注入攻击与防御（第2版）
工具与陷阱
一种巨大的危险：修改实时数据
接下来的示例主要涉及SELECT语句的注入，但不要忘记：易受攻击的参数可用在
更加危险的查询中（如INSERT、UPDATE、DELETE等命令）.虽然SELECT命令只能
从数据库中检索数据，严格遵循了“只看不碰”的原则，但其他命令却可以修改数据库
中正在测试的真实数据，在实时应用中，该操作会引发严重的问题，作为一种通用的方
法，对包含多个易受攻击参数的应用实施SQL注入攻击时，应尽量优先操作在不修改
任何数据的查询中所使用的参数，这样将保证操作更加有效，并且可自由使用喜欢的技
术，而不必担心数据受到感染或者扰乱应用的功能。
此外，如果控制的易受攻击的参数均被用于修改某些数据，那么本章概述的大多数
技术将对利用漏洞很有帮助，不过一定要对注入的内容和数据库产生的影响格外小心。
如果测试的应用正在使用，那么在执行真正的攻击之前，确保数据已备份，这样在结束
对应用的安全测试后，便可以执行完整的回滚操作。
使用本章末尾介绍的自动工具时，一定要按上述内容执行，自动工具很容易在短时
间内执行成百上千条查询，其中包含最少的用户交互，使用这样的工具对UPDATE或
DELETE语句进行注入时，会对数据库服务器造成严重破坏，一定要小心！本章后面将
介绍一些技巧，说明如何处理这些类型的查询。
4.2理解常见的漏洞利用技术
到目前为止，借助第2章介绍的应用测试技术或者第3章介绍的复查源代码技术，读者可
能在所测试的Web应用上发现了一个或多个易受攻击的参数。在尝试的第一个GET参数中插
入一个单引号就可能足以让应用返回一个数据库错误，或者也可能您不辞辛苦地花费数天时间
逐字浏览每个参数后发现了所有不同的外部攻击要素的组合。但不管是哪种情况，现在是时候
去体验一下真正的利用漏洞的乐趣了。
在这个阶段，安装一个与所攻击应用的后台数据库系统完全相同的本地数据库系统会很有
帮助。除非拥有Web应用的源代码，否则SQL注入需采用一种黑盒攻击方法。需要通过观察
目标如何对请求进行响应来构思所要注入的查询。如果能够在本地测试要进行注入的查询以便
查看数据库如何对其进行响应（包括返回的数据和错误消息)，那么将会使这个过程更加容易。
根据当前条件的不同（比如用户执行查询的权限，后台安装的数据库服务器以及是否对提
取数据、修改数据或者在远程主机上运行命令更感兴趣），不同情况下利用SQL注入漏洞会意
味着不同的内容，本阶段最要紧的是应用是否以HTML代码格式展示SQL查询的输出结果（即
便数据库服务器只返回错误消息），如果未收到应用中任何类型的SQL输出显示，就需要执行
SQL盲注，这是一项更加复杂的技术（但也更有趣)。我们将在第5章介绍SQL盲注。在本章中，
除非特别指定，我们假设远程数据库会在一定程度上返回SQL输出。在此基础上，我们会介
绍很多攻击技术。
我们为本章的大多数例子引入了一个易受攻击的电子商务应用，它驻留在victim.com上。
112
---
## Page 127
第4章利用SQL注入
该应用包含一个允许用户测览不同商品的页面，其URL如下所示：hmp://www.victim.com/products
asp?id12。
请求该URL时，应用会返回一个页面，包含id值为12（假设商品是Syngress公司的一本