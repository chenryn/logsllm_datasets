磁盘或存储的RT高对哪些场景的性能有非常明显的影响?   
- a. 计算很复杂大量耗费CPU的慢SQL        
- b. 大量IO都在shared buffer中命中的SQL    
- c. 大量IO都未在shared buffer以及page cache中命中的SQL  
- d. 小事务, 并且申请shared buffer时发现缺少clean page或free page, 需要驱出dirty page腾挪空间.   
- e. 高并发小事务   
- f. 数据库崩溃恢复
答案:            
- cdef       
解释:            
- 参考本文内容       
本期问题3:   
为什么磁盘RT会严重影响vacuum垃圾回收效率?    
- a. vacuum 需要扫描表和索引, 磁盘IO的动作很频繁   
- b. vacuum 回收垃圾是同步IO, 每个页面修改完成后需要同步持久化到磁盘.   
- c. vacuum 时需要把磁盘中的page读到shared buffer, 如果shared buffer没有足够的clean page或free page, 会导致驱出dirty page的动作(PG 社区版本这个动作是异步IO), 产生额外IO.   
- d. vacuum 扫描时每次只读取1个page , 每两个请求之间都夹着一段RT时间.   
答案:            
- acd    
解释:            
- 参考本文内容       
本期问题4:   
社区版本对Vaccum有哪些优化?    
- a. 支持调大vacuum内存空间, 一次性存储一张表所有扫描到的dead tuple id, 避免索引垃圾回收时需要重复扫描索引  
- b. 单个表的多个索引可以开启多个work process执行索引的并行vacuum     
- c. 使用visibility map, 直接跳过干净的page    
- d. 单个表的多个数据文件支持多个work process并行执行vacuum  
答案:            
- abc       
解释:            
- 参考本文内容       
本期问题5:   
社区版本为什么目前无法优化vacuum heap scan的效率?   
- a. 完全clean的heap page在vacuum heap scan时也无法被跳过    
- b. 单个表的多个数据文件不支持开启多个work process并行执行vacuum     
- c. vacuum一次只扫描1个page, 每两个page之间都夹着1个RT的时间片段    
- d. vacuum 进程的逻辑复杂, 大量时间耗费在dead tuple的判断和回收, 无法跑满磁盘带宽.    
答案:            
- bc       
解释:            
- 参考本文内容       
本期问题6:   
对大量顺序IO的场景, 因为RT高引起的性能问题, 操作系统层面有什么高性价比的优化手段?  
- a. 增加内存, 避免访问磁盘    
- b. 更换磁盘, 使用本地SSD  
- c. 设置块设备预读参数, 一次IO请求返回多个连续扇区的内容.       
- d. 使用RDMA网络的云存储  
答案:            
- c       
解释:            
- 参考本文内容       
本期问题7:   
对大量顺序IO的场景, 因为RT高引起的性能问题, 操作系统层面开启块设备预读后有哪些弊端?  
- a. 开启块设备预读仅适合离散IO, 不适合顺序IO的场景.    
- b. 离散IO触发预读时会导致存储带宽浪费, 甚至导致存储带宽瓶颈   
- c. 全局设置, 影响所有的IO行为.    
- d. 当数据库block size大于预读保护机制阈值时, 所有的IO都会产生预读, 导致存储带宽严重浪费.    
答案:            
- bcd       
解释:            
- 参考本文内容       
本期问题8:   
polardb 在内核层面进行了什么优化来提升vacuum的性能, 使得vacuum接近本地盘性能     
- a. 支持通过VM来判断不需要进行垃圾回收的page, 跳过扫描减少IO, 同时可以避免无效的预读    
- b. 支持单一数据文件的并行vacuum    
- c. 支持内核层面的预读配置, 可以在会话层开启, 避免影响所有的IO请求case    
- d. 单个表的多个数据文件支持并行vacuum    
答案:    
- ac    
解释:    
- 参考本文内容    
本期问题9:   
PolarDB 预读对什么场景有加速效果?   
- a. 垃圾回收    
- b. 全表扫描     
- c. 索引扫描    
- d. 创建索引  
答案:            
- abd      
解释:            
- 参考本文内容       
本期问题10:   
PolarDB 预读的加速场景有什么共性?   
- a. 访问的数据量都偏少    
- b. 都是顺序IO     
- c. 几乎都要访问整张表的所有数据     
- d. 几乎都是同步IO   
答案:            
- bcd       
解释:            
- 参考本文内容       
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB for PostgreSQL云原生分布式开源数据库](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")