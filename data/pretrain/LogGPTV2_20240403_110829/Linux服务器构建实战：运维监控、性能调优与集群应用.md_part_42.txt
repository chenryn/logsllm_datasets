通过top命令发现，每个Apache子进程消耗将近6～8MB左右内存，这是不正常的。
（2）原因分析
系统平均负载很高，通过uptime输出的系统“load average”值都在10以上，而CPU
（1）结论描述
通过uptime、vmstat、top、ps等命令的联合使用，得出如下结论：
既然是由系统资源耗尽导致的网站服务失去响应，那么就深入分析系统资源的使用情
3.第一次分析优化
www.Linuxidc.
，网站基本运行正常，但是在访问高峰时偶尔还会出现站点无法访问
系统服务岩机现象出现次数减少很多，但是在访问高峰时网站偶尔
第10章基于Linux服务器的性能分析与优化269
.com
---
## Page 285
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
一会又变得响应缓慢，
采用MySQL数据库，Web和数据库独立部署在两台服务器上。
SCSI磁盘。
10.7.2
高性能、
写压力，
服务器，Web服务器之间进行负载均衡部署，解决前端性能瓶颈。如果在数据库端还存在读
署MySQL数据库。随着访问量的增加，如果前端无法满足访问请求，还可以增加多台Web
上进行优化，也就是将Web和数据库分离部署。可以增加一台专用的数据库服务器，单独部
小。要避免出现服务器岩机现象，并且保证网站稳定、高效、快速的运行，可以从网站结构
运行基本处于正常状态，再也没有出现岩机的现象。
在where和orderby子句的字段上建立索引，并且增加程序缓存机制。通过这次优化，网站
数据库和Apache部署在同一台服务器上，这也是导致服务器消耗CPU资源过高的原因。
表，而大量的表没有建立索引，这样的程序代码导致MySQL数据库负荷过高，而MySQL
where、orderby等子句，同时，数据库查询过多，大部分都是复杂查询，一般都需要遍历全
是与前两次又有所不同。
的现象。继续进行问题分析，通过命令查看系统资源，发现仍是CPU资源耗尽导致的，但
270
首先检查系统资源状态，发现服务出现故障时系统负载极高，CPU满负荷运行，Java进
(2）检查配置
网站访问高峰时
（1）现象描述
2.性能问题现象以及处理措施
网站架构：Web应用是基于J2EE架构的电子商务应用，
操作系统：
硬件环境：两台IBMx3850服务器，单个双核Xeon3.0GCPU，4GB内存，3块72GB
1.网站运行环境说明
通过前面三次优化以后，网站在程序代码、操作系统、Apache等方面的优化空间越来越
6.第四次优化分析
优化程序中的SQL语句，增加where子句上的匹配条件，减少遍历全部的查询。同时
（2）处理措施
通过观察后台日志，发现PHP程序有频繁访问数据库的操作，大量的SQL语句中有
（1）原因分析
高可靠的网站系统就构建起来了。
还可以继续增加一台MySQL服务器，将MySQL进行读写分离部署。这样，一套
基于动态、
第4篇
www
CentOS5.4。
运维监控与性能优化篇
，最后网页彻底无法打开。
网页无法打开，重启Java服务后，网站可以正常运行一段时间，但过
、静态内容结合的网站优化案例
1.Linuxidc .com
：Web端应用服务器是Tomcat，
---
## Page 286
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
看Tomcat日志，综合分析得出如下结论：
常状态。而在高并发访问情况下，Java进程有时还会出现资源上升无法下降的情况，通过查
给Tomcat去处理。通过Apache+JK+Tomcat的整合，可以大幅度提高Tomcat应用的性能。
模块进行通信。使用Mod_JK模块的好处是：它可以定义详细的资源处理规则，根据动态
理静态资源，由Tomcat处理动态请求，Apache服务器和Tomcat服务器之间使用Mod_JK
求链接，这样一个完整的访问过程就结束了。而在高并发访问状态下，很多的请求瞬间都交
访问数据库等操作，然后把信息返回给客户端。客户端接收到信息后，Tomcat就关闭这个请
访问请求来说，服务器接收到请求后，会把请求交给Tomcat去处理，Tomcat接着执行编译、
响应客户端的请求，进而导致请求队列越来越多，直到Tomcat彻底崩溃。对于一个正常的
理Jsp、servlet等动态应用，虽然它也能当作HTTP服务器，但是处理静态资源的效率很低，
源，也无法访问，于是得出如下结论：
量报错信息、日志提示和数据库连接超时，最终无法连接到数据库。同时，访问网站静态资
加长了，不像以前那么频繁，但是Java进程消耗CPU资源还是很严重，网页访问速度极慢。
件的参数，适当加大这几个参数值。修改参数值后，继续观察发现，网站服务岩机时间间隔
中的参数都是默认配置，没有进行任何优化。
有一个Tomcat在运行Java程序。再查看Tomcat配置文件server.xml，发现server.xml文件
程占用了系统99%的CPU资源，但内存资源占用不大。接着检查应用服务器信息，发现只
经过前面的优化措施，Java资源偶尔会增高，但是一段时间后又会自动降低，这属于正
态网站的特点，将静态资源文件全部交给Apache处理，而动态请求通过Mod_JK模块传
要优化Tomcat性能，需要从结构上进行重构。首先，加入Apache支持，由Apache处
就是根本原因。
等。这样越积越多，Tomcat最终失去响应，Java进程就会处于僵死状态，资源无法释放，
Tomcat处理，这样Tomcat还没有完成第一个请求，第二个请求就来了，接着是第三个，
远比不上Apache或Nginx。从前面观察到的现象分析，可以初步判断是Tomcat无法及时
过lsof、netstat命令发现有大量的Java请求等待信息，然后查看Tomcat日志，发现有大
4.第二次分析优化
(2）处理措施
Tomcat本身就是一个Java容器，是使用连接/线程模型处理业务请求的，主要用于处
（1）原因分析
既然Java进程消耗CPU资源严重，那么需要查看到底是什么导致Java消耗资源严重
3.第一次分析优化
server.xml文件的默认参数需要根据应用的特性进行适当的修改，例如可以修改
（3）处理措施
WwW.L
Linuxidc.
第10章
基于Linux
服务器的性能分析与优化
.com
271
---
## Page 287
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
优化系统的过程也将变得十分轻松。
提出了非常高的要求。但是万变不离其宗，只要掌握了分析问题的步骤和思考问题的方法，
系统的优化过程。
见的性能优化分析工具的使用，最后通过两个具体的案例从整体上一步一步演示了Web应用
后分析了常见的几种Web应用系统使用系统资源的特点。接下来详细介绍了Linux下几个常
方法。首先介绍了系统性能分析的目的和意义，接着讲解了影响Linux性能的各种因素，然
10.8本章小结
器，网站的整体性能会有一个质的提升。
调度，后端又多个Tomcat负责动态应用的解析操作。通过将负载均分配给多个Tomcat服务
结合Mod_JK模块运行基于Tomcat的负载均衡系统，这样前端由Apache负责用户请求的
系统优化是个非常大的话题，涉及的知识面广，分析过程也较复杂，这对系统优化人员
本章通过理论与实践相结合的方法，系统地讲述了Linux服务器的性能分析原则和优化
要获得更高、更稳定的性能，单一的Tomcat应用服务器有时会无法满足需求，因此要
www.Linuxidc.com
1年
PDG
---
## Page 288
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
www.Linuxidc.com
第14章
第13章
第12章
第11章
构建MySQL+heartbeat+DRBD+LVS集群应用系统
OracleRAC集群
RHCS集群
构建高可用的LVS负载均衡集群
集群高级应用篇
雅
---
## Page 289
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
的，最终用户只是在使用一个虚拟服务器提供的高性能服务。
（用SharedStorage表示）。在用户看来，整个LVS集群系统的所有内部应用结构都是透明
LoadBalancer表示），中间是服务器群组层（用ServerArray表示），底端是数据共享存储层
11.1.1
Linux操作系统和LVS集群软件实现一个高可用、高性能、低成本的服务器应用集群。
在，已经变得比较成熟，目前广泛应用在各种网络服务和电子商务应用中。
础上开发支持庞大用户数的、可伸缩的、高可用的电子商务应用。LVS自1998年发展到现
利用LVS可以实现高可用的、可伸缩的Web、Mail、Cache和Media等网络服务。并在此基
11.1LVS 集群的组成与特点
有更深的理解和认识。
集群的优缺点。本章实践性强，实例都是真实环境的模拟。学完本章，读者能够对LVS集群
Keepalived及piranha来构建高可用LVS集群，最后，总结通过这3种方式构建高可用LVS
后介绍高可用LVS集群系统的拓扑结构，接着通过3个实例详细介绍如何通过heartbeat，
利用LVS架设的服务器集群系统由3个部分组成：最前端的是负载均衡层（这里用
LVS具有很好的可伸缩性、可靠性和可管理性，通过LVS要实现的最终目标是：利用
口负载均衡层：位于整个集群系统的最前端，由一台或多台负载调度器（Director
下面对LVS的各个组成部分进行详细介绍。
LVS体系结构如图11-1所示。
Linux虚拟服务器（LinuxVirtual Server，LVS），是一个由章文嵩开发的一款自由软件
本章主要介绍高可用LVS负载均衡集群系统的搭建，首先介绍LVS的组成和特点，然
恢复时重新加入。
Server服务的健康状况。在RealServer不可用时可以将其从LVS路由表中剔除，在
Server上还要安装对RealServer的监控模块Ldirectord，此模块用于监测各个Real
把用户的请求分发给服务器群组层的应用服务器（RealServer）。同时，在Director
作用类似于一个路由器，它含有为完成LVS功能所设定的路由表，通过这些路由表
Server）组成。LVS核心模板IPVS就安装在Director Server上，而Director的主要
第11章
LVS集群的组成
www.Linuxidc.com
构建高可用的LVS负载均衡集群
---
## Page 290
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
11.1.2LVS集群的特点
列等都能很好地支持它。
设置就可以支持LVS功能。
的操作系统只有Linux和FreeBSD，Linux2.6内核完全内置了LVS的各个模块，不用任何
负载均衡技术有很多实现方案，有基于DNS域名轮流解析的方法，有基于客户端调度
（1)IP负载均衡技术
1.IP负载均衡与负载调度算法
对于Real Server，儿乎所有的系统平台，如Linux、Windows、Solaris、AIX、BSD系
从整个LVS结构可以看出，DirectorServer是整个LVS的核心。目前，用于DirectorServer
口共享存储层：是为所有RealServer提供共享存储空间和内容一致性的存储区域，
口服务器群组层：由一组实际运行应用服务的机器组成，Real Server可以是Web服务
系统，例如RedHat的GFS文件系统，Oracle提供的OCFS2文件系统等。
享数据，但是NFS在繁忙的业务系统中，性能并不是很好，此时可以采用集群文件
由磁盘阵列设备组成。为了提供内容的一致性，一般可以通过NFS网络文件系统共
DirectorServer也可以同时兼任RealServer的角色。
RealServer之间通过高速的LAN或分布在各地的WAN相连接。在实际的应用中
器、Mail服务器、FTP服务器、DNS服务器、视频服务器中的一个或多个，每个
RealServer
mm
Real Server 2
Www.Linuxidc.com
tor
Serv
数据
图11-1LVS体系结构
Internet
数据
Real Server 3
共享存储层
Real Server N
负载均衡层
275
一般
PDG
---
## Page 291
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
应用户请求。那么动态选择是如何实现呢？其实就是通过这里要说的负载调度算法。根据不
当用户请求越来越多时，调度器的处理能力将成为瓶颈。
衡的方式有3种，分别是NAT、TUN和DR。下面进行详细介绍。
一个服务节点响应用户的请求。
IP。访问的请求首先经过VIP到达负载调度器，然后由负载调度器从RealServer列表中选取
用户必须通过这个虚拟的IP地址访问服务器。这个虚拟IP一般称为LVS的VIP，即Virtual
它的主要作用是：安装在DirectorServer上，同时在Director Server上虚拟出一个IP地址，
调度算法中，执行效率最高的是IP负载均衡技术。
访问的方法，
LVS的IP负载均衡技术是通过IPVS模块来实现的。IPVS是LVS集群系统的核心软件，
前面介绍过，负载调度器是根据各个服务器的负载情况，动态地选择一台RealServer响
(2)负载调度算法
口VS/TUN：即Virtual ServerviaIPTunneling，也就是通过IP隧道技术实现虚拟服务
可以看出，在NAT方式下，用户请求和响应报文都必须经过DirectorServer地址重写
口VS/NAT：即Virtual Server via Network Address Translation，也就是网络地址翻译技
而Real Server节点如何返回数据给用户，是IPVS实现的重点技术。IPVS实现负载均
在用户的请求到达负载调度器后，调度器如何将请求发送到提供服务的RealServer节
段上。
通过改写请求报文的MAC地址，将请求发送到Real Server，而RealServer将响应直
这种方式的连接调度和管理与前两种一样，但它的报文转发方法又有所不同，VS/DR
的吞吐量大大提高。
个RealServer将直接响应用户的请求，不再经过前端调度器。此外，对Real Server
VS/TUN方式中，调度器采用IP隧道技术将用户请求转发到某个RealServer，而这
器。这种方式的连接调度和管理与VS/NAT方式一样，只是报文转发方法不同。在
过程。
Real Server的相应端口，最后将报文请求发送到选定的RealServer。在服务器端得到
术实现虚拟服务器。当用户请求到达调度器时，调度器将请求报文的目标地址（即
能最好的，但是要求DirectorServer与RealServer必须由一块网卡连在同一物理网
返回给客户，免去了VS/TUN中的IP隧道开销。这种方式是3种负载调度方式中
络中。因此，在TUN方式中，调度器将只处理用户的报文请求，从而使集群系统
地域位置没有要求，可以和DirectorServer位于同一个网段，也可以在独立的一个
口源端口改成虚拟IP地址和相应端口，然后把数据发送给用户，完成整个负载调度
据后，RealServer将数据返回给用户时，需要再次经过负载调度器将报文的源地址
拟IP地址）改写成选定的RealServer地址，同时将报文的目标端口也改成选定的
有基于应用层系统负载的调度方法，还有基于IP地址的调度方法。在这些负载
inuxidc.com
---
## Page 292
的高稳定性和高可靠性。
很多由LVS构成的负载均衡系统，运行很长时间，从未进行过重新启动。这些都说明了LVS
键性的Web站点也都采用了LVS集群软件，所以它的可靠性在实践中得到了很好印证。有
1Gbit/s；又如配置千兆网卡，系统的最大吞吐量可接近10Gbit/s。
求。如配置百兆网卡，采用VS/TUN或VS/DR调度技术，整个集群系统的吞吐量可高达
能够实现负载的合理均衡，使应用具有超高负荷的服务能力，可支持上百万个并发连接请
均衡集群系统具有优秀的处理能力，每个服务节点的故障不会影响整个系统的正常使用，又
度策略，可以登录LVS中文站点zh.linuxvirtualserver.org，查阅更详细的信息。
址散列（Destination Hashing）和源地址散列（SourceHashing）。如果想深人了解这4种调
带复制的基于局部性最少连接（Locality-BasedLeast Connections withReplication）、目标地
度在分配新连接请求时尽可能使服务节点的已建立连接数和其权值成正比。
示其处理能力，而系统管理员可以动态地设置相应的权值，默认权值为1。加权最小连接训
群系统的真实服务器具有相近的系统性能，采用“最小连接”调度算法可以较好地均衡负载。
负载情况，并动态地调整其权值。
多的访问流量，充分合理地利用了服务器资源。同时，调度器还可以自动查询RealServer的
处理能力较弱的RealServer，可以设置较低的权值。这样保证了处理能力强的服务器处理更
RealServer设置不同的调度权值，对性能相对较好的RealServer可以设置较高的权值，而对
实际的负载状况和连接状态。
分配到集群中每个RealServer上。这种算法平等地对待每一台RealServer，而不管服务器上
种调度算法。
同的网络服务需求和服务器配置，IPVS实现了8种负载调度算法。这里详细讲述最常用的4
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
LVS负载均衡集群软件已经在企业和学校中得到了很好的普及，国内外很多大型的、关
3.高可靠性
LVS是一个基于内核级别的应用软件，因此具有很高的处理性能。由LVS构建的负载
2.高可用性
其他4种调度算法分别为：基于局部性的最少连接（Locality-BasedLeastConnections）、
“加权最少连接调度”是“最少连接调度”的超集。每个服务节点可以用相应的权值表
口加权最少连接调度（WeightedLeastConnections）。
“最少连接”调度算法动态地将网络请求调度到已建立的连接数最少的服务器上。如果集
“加权轮叫”调度算法根据Real Server的不同处理能力来调度访问请求。可以对每台
“轮叫”调度也叫1:1调度，调度器通过“轮叫”调度算法将外部用户请求按顺序1:1地
口轮叫调度（Round Robin）。
WWW.L
Linuxidc.
第11章
构建高可用的LVS负载均衡集
.com
277
调
---
## Page 293
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
题，就需要保证DirectorServer的高可用性，最常用的方法就是在负载均衡层构建Director
11.2
保证了负载均衡端持续地提供服务。
工作，负责对用户请求进行分发处理。这样就避免了一台Director Server的单点故障问题，
主DirectorServer出现异常或者故障时，备用Director Server马上接过主DirectorServer的
正常状态下主Director Server工作，备用DirectorServer监控主Director Server的状态，当
就是对DirectorServer进行高可用集群，常见的方案就是为DirectorServer做一个双机热备：
的集群系统来说，单点故障是绝对不允许的。要避免这种单点故障，最实用、最简单的办法
出现故障，整个LVS系统将陷入瘫痪状态。
图11-1可以清楚地看出，所有的用户请求都经过DirectorServer将任务分发到各个服务器节
服务的正常运行。这些优点使LVS已经广泛应用在企业、教育行业以及很多知名网站。
并发和高吞吐量下，具有高负荷处理能力，当某个服务节点出现故障时，并不影响整个系统
系统，这二者的组合大大节约了企业的应用成本。同时LVS具有高稳定性和高可靠性，在高
11.1.3
发行。
可以得到软件的源代码，并且可以根据自已的需要进行各种修改，但是修改必须以GPL方式
Windows等。
操作系统上，
和音频流播放协议等。
IMAP4、PROXY、LDAP和SSMTP等；支持UDP协议的应用有：DNS、NTP、ICP、视频
的TCP和UDP协议。支持TCP协议的应用有：HTTP、HTTPS、FTP、SMTP、POP3、
虽然DirectorServer仅完成用户请求的分发处理，负载并不是很大，但是对于一个健壮
，那么，当
单一的DirectorServer可能会造成真个LVS集群系统的单点故障，为了解决这个问
细心的读者可能已经发现了，LVS在具有上述优点的同时，还存在一个致命的缺点，从
LVS是一款自由软件，任何人都可以免费获取并使用它，而且Linux也是一个开源操作
LVS集群软件是按GPL（GNU PublicLicense）许可证发行的自由软件，因此，使用者
LVS对RealServer的操作系统没有任何限制，RealServer可运行在任何支持TCP/IP的
5.开源软件
目前LVS仅支持Linux和FreeBSD系统作为前端Director Server，但是支持大多数
4.适用环境
高可用LVS负载均衡集群体系结构
LVS集群系统的优缺点
当只有一台DirectorServer时，将会出现单点故障点，如果这个DirectorServer
包括Linux，各种UNIX（如FreeBSD、SunSolaris、HPUnix等），MacOS和
6