title:SoK: A Comprehensive Analysis of Game-Based Ballot Privacy Definitions
author:David Bernhard and
V&apos;eronique Cortier and
David Galindo and
Olivier Pereira and
Bogdan Warinschi
2015 IEEE Symposium on Security and Privacy
2015 IEEE Symposium on Security and Privacy
SoK: A comprehensive analysis of game-based
ballot privacy deﬁnitions
David Bernhard∗, V´eronique Cortier†, David Galindo†‡, Olivier Pereira§, Bogdan Warinschi∗
∗University of Bristol, United Kingdom
‡SCYTL Secure Electronic Voting, Spain
§Universit´e Catholique de Louvain, Belgium
†LORIA/CNRS, France
Abstract—We critically survey game-based security deﬁnitions
for the privacy of voting schemes. In addition to known lim-
itations, we unveil several previously unnoticed shortcomings.
Surprisingly, the conclusion of our study is that none of the
existing deﬁnitions is satisfactory: they either provide only weak
guarantees, or can be applied only to a limited class of schemes,
or both.
Based on our ﬁndings, we propose a new game-based deﬁnition
of privacy which we call BPRIV. We also identify a new property
which we call strong consistency, needed to express that tallying
does not leak sensitive information. We validate our security
notions by showing that BPRIV, strong consistency (and an
additional simple property called strong correctness) for a voting
scheme imply its security in a simulation-based sense. This result
also yields a proof technique for proving entropy-based notions
of privacy which offer the strongest security guarantees but are
hard to prove directly: ﬁrst prove your scheme BPRIV, strongly
consistent (and correct), then study the entropy-based privacy of
the result function of the election, which is a much easier task.
I. INTRODUCTION
Privacy of votes was the subject of major debates during
the 19th century, at the time of the progressive introduction
of universal suffrage. Since then, it has become a standard in
all major democracies.
The introduction of electronic technologies as part of the
voting process however raises new challenges and privacy
concerns. Cryptographic voting protocols aim to guarantee
ballot privacy in e-voting by deﬁning security models and
then constructing schemes1to meet these models. Generally,
cryptographic voting schemes may be categorised into the
purely electronic where voters may vote from the privacy
of their own computers (e.g., Helios [1], [2] or Civitas [3])
and hybrid systems which use paper ballots and computers to
facilitate the tally (e.g., ThreeBallot [4], Prˆet-`a-Voter [5] and
Scantegrity [6]).
Modelling privacy: The development of security models for
ballot privacy started with the work of Benaloh [7], [8] and
has recently started to receive more attention with new models
being developed in both symbolic models
[9] and compu-
tational ones [10], [11], [12]. Unlike related privacy notions
such as conﬁdential message transmission, ballot privacy is
not absolute but relative to speciﬁc election bylaws and voter
choices. Consider a voting system that discloses the number
of votes received by each candidate: such a system essentially
reveals how each voter voted in the case where all voters vote
for the same candidate. Classifying such a system as insecure
is clearly undesirable; ballot privacy notions require a more
nuanced classiﬁcation.
One generic approach is to deﬁne vote privacy through
the design of an ideal functionality [13], [14], [15]: a voting
scheme is declared to satisfy privacy if it securely realizes (in
some formal sense) the ideal functionality. While being very
powerful, these deﬁnitions are also quite difﬁcult to prove on
real cryptographic voting protocols. For example, Helios is a
purely cryptographic voting protocol (that does not rely on
paper ballots) which has been used for real elections, and we
are not aware of any security proofs for Helios in a simulation-
based model2.
Another, more general, approach to ballot privacy deﬁni-
tions focuses on entropy [16], [17], used as a measure of
the amount of information that a voting system leaks about
votes. Early works were based on Shannon entropy, but other
entropy notions, based on min-entropy and Hartley entropy
showed to be particularly informative in natural contexts.
The interest of these entropy-based deﬁnitions is that they
capture many possible sources of privacy leakage: the privacy
leakage can be caused by the choice of the cryptographic
primitives but it may also be due to the election result itself
(which is out of the scope of simulation-based models) or
from the distribution of the votes. A voting scheme should
be considered as private under such a notion, if its privacy
leakage is (computationally) close to the privacy leakage of
an associated “ideal protocol” where voters send their vote on
a secure channel to a trusted party that simply computes and
announces the result. Furthermore, the amount of information
that is leaked by this result is precisely measured, making it
possible to compare different election tallying rules in various
contexts.
A third approach, initiated in the early works of Benaloh [8],
considers game-based deﬁnitions of vote privacy. This ap-
1The terms “scheme” and “protocol” can be read interchangeably without
much loss of precision. We use the former to refer to a collection of algorithms
and the latter to include the speciﬁcation of who should execute these
algorithms and when.
2Groth [13] proved a class of protocols to be UC-secure that at a ﬁrst glance
might seem to include Helios. However, Groth requires that the protocols use
voter’s identiﬁers as part of the correctness proofs in ballots — Helios does
not do this.
© 2015, David Bernhard. Under license to IEEE.
© 2015, David Bernhard. Under license to IEEE.
DOI 10.1109/SP.2015.37
DOI 10.1109/SP.2015.37
499
499
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:02:30 UTC from IEEE Xplore.  Restrictions apply. 
proach has been used in the literature to model e.g. Helios.
The literature is actually quite abundant in terms of game-
based deﬁnitions of vote privacy, the differences between them
are poorly understood, and there is little guidance on how
to select one to analyze protocols. This work started as an
attempt to understand the strength and weaknesses of the many
game-based notions (as well as those of several non game-
based ones). In these game-based notions, privacy is described
as the negligible probability of an adversary to distinguish
between two situations, precisely described as games in the
deﬁnition. By only focusing on the information leakage due to
the cryptography, leaving the measurement of the leakages due
the tally to be measured with information theoretic techniques,
this approach typically leads to simpler, more generic and
more modular security proofs.
The boundaries between these three deﬁnition approaches
can of course sometimes become fuzzy, with some works
mixing them into a single deﬁnition. For instance, K¨usters,
Truderung, and Vogt [11] provide a privacy metric that focuses
on the probability that an attacker notices when an (honest)
voter changes her vote, while all of the other (honest) votes
follow a given distribution. These authors show how to analyze
the privacy offered by several paper-based voting protocols
such as ThreeBallot and VAV.
Comparing existing notions of privacy: Our ﬁrst contribu-
tion is to systematically review, compare, and discuss existing
game-based computational notions for vote privacy. In partic-
ular, we present them in a uniﬁed framework which facilitates
their comparison. Our review of the literature shows that none
of the existing deﬁnitions is satisfactory. Some limitations
were already known but we discovered further unnoticed
shortcomings in several of them. In short, based on our
ﬁndings, we classify existing deﬁnitions in three categories:
• too weak [18], [19], [20], [21]: these declare protocols to
be secure which intuitively do not preserve vote privacy.
We give examples which we think should be considered
privacy breaches, despite the examples meeting the given
privacy deﬁnitions.
(e.g. the case whether two voters vote the same is not
covered).
We summarise the limitations of each deﬁnition in Table I
later in the paper. For our classiﬁcation, we designed several
test-case (dummy) protocols that may be used to evaluate a
privacy deﬁnition; these are available in Appendix VIII.
A new notion for privacy: Our second contribution is to
propose a new game-based deﬁnition of privacy, called BPRIV,
that incorporates the lessons learned from our study. Our new
deﬁnition accounts for auxiliary data in the tally (such as
proofs of correct decryption), is compatible with veriﬁability,
and does not suffer from any of the ﬂaws we uncovered. As a
test of our new deﬁnition, we prove the Helios voting protocol
to be BPRIV secure. Speciﬁcally, we analyze what could be
considered the standard version of Helios nowadays (at least,
academically speaking), that uses strong Fiat-Shamir proofs
[19], implements duplicate weeding [27] and homomorphic
tallying. With respect to the threat model, we consider an
honest single trustee, an honest ballot box, and an adversary
that can adaptively corrupt a subset of voters. Apart from the
single trustee (that can be dealt of by adapting BPRIV to a
multi-authority setting), the other adversarial assumptions are
similar to those used in previous ballot privacy analyses of
Helios.
The ﬁrst of two novelties of our deﬁnition is that it accounts
for tallying operations that possibly include revote policies (for
example, only your last vote counts). Understanding tallying
is crucial for the privacy of ballots: not only does the tallying
operation usually disclose auxiliary data in addition to the
result (such as proofs of correct tallying) but it also performs
some cleaning operations such as removing invalid or dupli-
cate ballots or ballots that should be erased due to re-voting,
etc. For example, in Civitas [3], coercion-resistance crucially
relies on the fact that ballots submitted under coercion can be
(anonymously) identiﬁed and removed, without endangering
the voter’s identity. In Helios 2.0, removing duplicates is
necessary for privacy, otherwise the protocol is subject to
replay attack [28]. These operations are often considered
harmless but, perhaps surprisingly, they may be crucial for the
security of a voting system. Since these cleaning operations
may be used to guarantee privacy, they may also damage it
if performed incorrectly. Therefore, a good privacy deﬁnition
should account for these operations too. In this direction,
we identify a second security property, which we call strong
consistency, that ensures that the tally phase counts the votes
properly, even in the presence of an adversary. While this
property is clearly desirable for veriﬁability, it is also crucial
for privacy: otherwise the tally phase could leak information
on honest votes in the result itself or, more subtly, in the choice
of ballots that are removed during the cleaning operations.
A simulation-based notion of security: A natural question
is how to convince ourselves that the new deﬁnition BPRIV is
not ﬂawed as well. The second novelty of our deﬁnition is that
we establish a tight relation between BPRIV and security in a
• too strong [22]: by contrast, this deﬁnition is so strong
that no veriﬁable protocol can meet the privacy constraint.
More precisely, we show that any protocol meeting this
deﬁnition must allow the authorities to announce any
result that is consistent with the number of votes on the
board. Therefore this deﬁnition cannot be used for any
protocol that aims at some veriﬁability, which is the case
of most protocols of the literature.
• too limited [23], [24], [25], [12], [11], [17], [26]: while
we did not identify any ﬂaw in these deﬁnitions, they
restrict the class of protocols or privacy breaches that
can be considered.
For example, they may lead to inconsistent results when
applied to protocols that use some natural result functions
(e.g., the majority function) or may not be applicable to
protocols that output not only a result but also a proof
of correct tallying (such as most cryptographic protocols
do), or they may only detect speciﬁc privacy breaches
500500
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:02:30 UTC from IEEE Xplore.  Restrictions apply. 
simulation-based3 model. Speciﬁcally, any voting scheme that
is BPRIV, strongly consistent (and strongly correct) securely
implements an ideal functionality. The privacy guarantees of
this ideal functionality are simpler to understand compared to
game-based deﬁnitions, but simulation-based security proofs
are harder to carry out. We view the relation with the
simulation-based notion as a validation of our new BPRIV
notion. In addition, we obtain the ﬁrst security proof for Helios
in a simulation-based model.
A potential advantage of simulation-based models is that
their security guarantees are easier to understand intuitively
than game-based ones. Our ideal functionality can be described
in one sentence: it simply collects all votes from the voters,
then computes and announces the result. Any scheme that
securely implements this functionality cannot leak any more
information (in particular about people’s votes) than this
functionality. This result gives us a way to explain the privacy
guarantees of Helios even to non-cryptographers. In addition,
the result provides a bridge towards entropy-based security
notions (similar to [17]), which incorporates, simultaneously,
privacy loss due to cryptography in use and to leaking result
functions.
A potential disadvantage however is that direct simulation-
based proofs are harder to get right; an incorrect proof does not
prove anything, however intuitive the functionality involved
might be. Furthermore, simulation based-deﬁnitions are quite
constraining, as far as security against adaptive corruption is
concerned.
Summary: We review existing game-based privacy notions
and ﬁnd them insufﬁcient. We develop a new privacy notion
BPRIV based on our insights from the reviewed notions and
subject it to three tests to assure its validity: (1) we prove that
Helios meets the new BPRIV notion (2) we check that the new
notion does not fail under any of the counter-examples that we
identiﬁed for existing notions and (3) we prove that BPRIV
(together with strong consistency) implies a simulation-based
notion of security. To our knowledge, BPRIV is the ﬁrst game-
based notion that comes with a justiﬁcation in a simulation-
based model too. As a corollary we obtain the ﬁrst simulation-
based security proof for Helios. In addition, BPRIV is the ﬁrst
notion to capture security requirements for two features found
in real voting systems: (1) revote policies and (2) auxiliary
data output by the tallying algorithm.
II. TERMINOLOGY AND BASIC PROPERTIES
We ﬁrst
introduce some terminology. In particular, we
consider here single-pass voting systems where voters only
have to post a single message to the ballot box to cast their
vote.
3For readers familiar with the Universal Composability (UC) notion of
security: our simulation-based model can be used to show UC security for a
particular functionality. We sketch this in our paper but we do not formally
introduce the UC framework and do not rely on any result holding in this
framework (e.g., composition.)
A. Single-Pass Voting
A voting scheme is relative to a result function ρ : (I ×
∗ → R where I is the set of voters identiﬁers, V is the
V)
set of possible votes, and R is the result space. Depending on
the voting scheme, voters identiﬁers range from voters public
identity (appended to ballots in Helios [29] for example) to
pseudonyms as well as sets of private credentials. For example
in Civitas [30], voters are supposed to use invalid credentials
when under coercion and valid ones when they wish to cast
their true vote.
The result function explains how the election system should
behave. When voters cast their votes, possibly several times,
ρ is in charge of specifying which votes shall be counted and
how. This involves typically two main tasks. First, usually
a revote policy speciﬁes which votes shall be retained. A
typical revote policy consists in keeping the last cast vote
from each voter. However, more complex revote policies can
be considered such as computing the average of the votes
or counting a vote at a polling station in preference to all
online votes4 (for the same voter). Then, once the revote policy