ment and formatting for communicating with the KeyNote
interpreter. For comparison, the rudimentary conﬁgura-
tion ﬁle-based system that the KeyNote-based scheme re-
places took approximately 300 lines of code. The entire
original isakmpd itself was about 27000 lines of code
(not including the cryptographic libraries). The original
isakmpd and the KeyNote extensions to it are written in
the C language.
4. Conclusions, Future Work, Availability
We have demonstrated a practical and useful approach
to managing trust in network-layer security. One of the
most valuable features of trust management for IPsec SA
policy management is its handling of policy delegation,
which essentially uniﬁes remote administration with cre-
dential distribution.
Perhaps the most important contribution of this work
is our use of a two level policy speciﬁcation hierarchy to
control IPsec trafﬁc. At the packet level, we use a spe-
cialized, very efﬁcient, but less expressive ﬁltering lan-
guage that provides the basic control of trafﬁc through the
host. The installation of these packet ﬁlters, in turn, is
controlled by a more expressive, general purpose, but less
efﬁcient trust-management language. Our performance
measurements provide encouraging evidence that this ap-
proach is quite viable, providing a very high degree of
control over trafﬁc without the performance impact nor-
mally associated with highly expressive, general purpose
mechanisms. It is possible that this approach has merit in
applications beyond controlling network-layer security.
Because the KeyNote language on which this work is
based is application-independent, our scheme can be used
as the basis for a more comprehensive policy management
architecture that ties together different aspects of network
security with policies for IPsec and packet ﬁltering. For
example, a general network security policy might specify
the acceptable mechanisms for remote access to a private
corporate network over the Internet; such a policy may, for
example, allow the use of clear-text passwords only if traf-
ﬁc is protected with IPSEC or some transport-layer secu-
rity protocol (e.g., SSH [21]). Multi-application policies
would, of course, require embedding policy controls into
either an intermediate security enforcement node (such as
a ﬁrewall) or into the end applications and hosts [13]. This
approach is the subject of ongoing research.
Finally, if trust-management policies and credentials are
built into the network security infrastructure, it may be
possible to use them as an “intermediate language” be-
tween the lower-level protocol and application policy lan-
guages (e.g., packet-ﬁltering rules) and higher-level policy
speciﬁcation languages and tools. A translation tool might
convert a high-level speciﬁcation to the trust-management
system’s language (and perhaps vice-versa as well). Such
a tool could make use of formal methods to verify or en-
force that the generated policy has certain properties. This
approach is currently under investigation in the STRONG-
MAN DARPA project at the University of Pennsylvania
and AT&T Labs.
The KeyNote trust-management system is available in
an open source toolkit; see the KeyNote web page at
http://www.crypto.com/trustmgt/
for details. The KeyNote IPsec trust-management archi-
tecture is distributed with OpenBSD 2.6 (and later), which
is available from
http://www.openbsd.org/
Because the policy management functionality is imple-
mented entirely in the user-level isakmpd, the system is
readily portable to other IPsec platforms (especially those
based on BSD implementations).
References
[1] C. Alaettinoglu, T. Bates, E. Gerich, D. Karrenberg,
D. Meyer, M. Terpstra, and C. Villamizer. Routing Pol-
icy Speciﬁcation Language (RPSL). Request for Com-
ments (Proposed Standard) 2280, Internet Engineering
Task Force, January 1998.
[2] M. Blaze,
J.
J. Feigenbaum,
Ioannidis, and A. D.
Keromytis. The KeyNote Trust Management System Ver-
sion 2. Internet RFC 2704, September 1999.
[3] M. Blaze, J. Feigenbaum, and J. Lacy. Decentralized Trust
Management.
In Proc. of the 17th Symposium on Secu-
rity and Privacy, pages 164–173. IEEE Computer Society
Press, Los Alamitos, 1996.
[4] M. Blaze, J. Ioannidis, and A. Keromytis. Trust Manage-
ment and Network Layer Security Protocols. In Proceed-
ings of the 1999 Cambridge Security Protocols Interna-
tional Workshop, 1999.
[5] J. Boyle, R. Cohen, D. Durham, S. Herzog, R. Rajan, and
A. Sastry. The COPS (Common Open Policy Service) Pro-
tocol. Request for comments (proposed standard), Internet
Engineering Task Force, January 2000.
[6] R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin.
Resource ReSerVation Protocol (RSVP) – Version 1 Func-
tional Speciﬁcation. Internet RFC 2208, 1997.
[7] P. Calhoun, A. Rubens, H. Akhtar, and E. Guttman. DIAM-
ETER Base Protocol. Internet Draft, Internet Engineering
Task Force, Dec. 1999. Work in progress.
[8] CCITT. X.509: The Directory Authentication Framework.
International Telecommunications Union, Geneva, 1989.
[9] M. Condell, C. Lynn, and J. Zao. Security Policy Speciﬁ-
cation Language. Internet draft, Internet Engineering Task
Force, July 1999.
[10] N. Hallqvist and A. D. Keromytis.
Implementing Inter-
net Key Exchange (IKE).
In Proceedings of the Annual
USENIX Technical Conference, Freenix Track, pages 201–
214, June 2000.
[11] D. Harkins and D. Carrel. The Internet Key Exchange
(IKE). Request for Comments (Proposed Standard) 2409,
Internet Engineering Task Force, Nov. 1998.
[12] J. Ioannidis and M. Blaze. The Architecture and Imple-
mentation of Network-Layer Security Under Unix.
In
Fourth Usenix Security Symposium Proceedings. USENIX,
October 1993.
[13] S. Ioannidis, A. Keromytis, S. Bellovin, and J. Smith. Im-
plementing a Distributed Firewall. In Proceedings of Com-
puter and Communications Security (CCS) 2000, Novem-
ber 2000.
[14] S. Kent and R. Atkinson. IP Encapsulating Security Pay-
load (ESP). Request for Comments (Proposed Standard)
2406, Internet Engineering Task Force, Nov. 1998.
[15] S. Kent and R. Atkinson. Security Architecture for the In-
ternet Protocol. Request for Comments (Proposed Stan-
dard) 2401, Internet Engineering Task Force, Nov. 1998.
[16] A. D. Keromytis, J. Ioannidis, and J. M. Smith. Implement-
ing IPsec. In Proceedings of Global Internet (GlobeCom)
’97, pages 1948 – 1952, November 1997.
[17] S. McCanne and V. Jacobson. A BSD Packet Filter: A New
Architecture for User-level Packet Capture. In Proceedings
of USENIX Winter Technical Conference, pages 259–269,
San Diego, California, Jan. 1993. Usenix.
[18] R. Needham and M. Schroeder. Using Encryption for Au-
thentication in Large Networks of Computers. Communi-
cations of the ACM, 21(12):993–998, December 1978.
[19] C. Rigney, A. Rubens, W. Simpson, and S. Willens. Re-
mote Authentication Dial In User Service (RADIUS). Re-
quest for Comments (Proposed Standard) 2138, Internet
Engineering Task Force, Apr. 1997.
[20] L. Sanchez and M. Condell. Security Policy System. In-
ternet draft, work in progress, Internet Engineering Task
Force, November 1998.
[21] T. Ylonen, T. Kivinen, M. Saarinen, T. Rinne, and S. Lehti-
nen. SSH Protocol Architecture. Internet Draft, Internet
Engineering Task Force, Feb. 1999. Work in progress.
Appendix 1: KeyNote Action Attributes for
IPsec
All the data in the ﬁelds of IKE packets are passed to
KeyNote as action attributes; these attributes are avail-
able to the Conditions sections of the KeyNote asser-
tions. There are a number of attributes deﬁned (the com-
plete list appears in the isakmpd.policy man page in
Authorizer: "POLICY"
Licensees: "passphrase:pedomellonamino"
Conditions: app_domain == "IPsec policy"
&& doi == "ipsec"
&& pfs == "yes"
&& esp_present == "yes"
&& esp_enc_alg != "null"
&& remote_filter ==
"135.207.000.000-135.207.255.255"
&& local_filter ==
"198.001.004.0-198.001.004.255"
&& remote_ike_address ==
"198.001.004.001" ;
Figure 4. Policy for Firewall of 135.207.0.0/16
Network.
OpenBSD 2.6 and later). The most important attributes
include:
app domain is always set to IPsec policy.
pfs is set to yes if a Difﬁe-Hellman exchange will be
performed during Quick Mode, otherwise it is set to
no.
ah present, esp present, comp present are set to yes
if an AH, ESP, or compression proposal was received
in IKE (or other key management protocol), and to
no otherwise. Note that more than one of these may
be set to yes, since it is possible for an IKE proposal
to specify “SA bundles” (combinations of ESP and
AH that must be applied together).
esp enc alg is
set
to one of des, des-iv64,
3des, rc4, idea and so on depending on the
proposed encryption algorithm to be used in ESP.
local ike address, remote ike address are set
to the
IPv4 or IPv6 address (expressed as a dotted-decimal
notation with three-digit, zero-preﬁxed octets (e.g.,
010.010.003.045)) of the local interface used in the
IKE exchange, and the address of the remote IKE
daemon, respectively.
remote ﬁlter, local ﬁlter are set to the IPv4 or IPv6 ad-
dresses proposed as the remote and local User Iden-
tities in Quick Mode. Host addresses, subnets, or ad-
dress ranges may be expressed (and thus controlled
by policy).
Appendix 2: Conﬁguration Examples
Example 1: Setting up a VPN
In this example, two sites are connected over an en-
crypted tunnel. The authentication is done by a sim-
ple passphrase. The policy in Figure 4 is present at one
of the ﬁrewalls.
It speciﬁes that packets between the
135.207.0.0/16 range of addresses and the 198.1.4.0/24
range of addresses have to be protected by ESP using en-
cryption. The remote gateway, with which IKE will nego-
tiate, is 198.1.4.1.
Example 2: Remote Access
Authority to allow remote access through the site ﬁre-
wall is controlled by several security ofﬁcers, each one of
whom is identiﬁed by a public key. A policy entry such
as the one shown in Figure 4 exists for each individual se-
curity ofﬁcer, and is stored in the isakmpd conﬁguration
ﬁle of the ﬁrewall. Note the last line in the Conditions
ﬁeld, which restricts remote users to negotiate only host-
to-ﬁrewall SAs, without placing any restrictions to their
actual address otherwise.
Each portable machine that is to be allowed in must hold
a credential similar to that shown in Figure 4; the creden-
tial is signed by a security administrator. When weak en-
cryption is used, the user can only read and send e-mail;
when strong encryption is used, all kinds of trafﬁc are al-
lowed. During the IKE exchange, the user’s isakmpd
provides this credential to the ﬁrewall, which passes it on
to KeyNote. The policy and the credential, taken together,
express the overall access policy for the holder of key JIK.
A similar policy (and a corresponding credential) is issued
to the user (and ﬁrewall), to authorize the reverse direction
(the ﬁrewall needs to prove to the user that it is authorized
by the administrator to handle trafﬁc to the 139.91.0.0/16
network).
Authorizer: POLICY
Licensees: RAS_ADMIN_Key
Comment: delegate authority to a Remote Access administrator.
Local-Constants:
RAS_ADMIN_Key_A = "rsa-base64:MDgCMQDMiEBn89VCSR3ajxr0bNRC\
Audlz5724fUaW0uyi4r1oSq8PaSC2v9QGS+phGEahJ8CAwEAAQ=="
Conditions: app_domain == "IPsec policy"
&& doi == "ipsec"
&& pfs == "yes"
&& ah_present == "no"
&& esp_present == "yes"
&& esp_enc_alg == "3des" && esp_auth_alg == "hmac-sha"
&& esp_encapsulation == "tunnel"
&& local_filter == "139.091.000.000-139.91.255.255"
&& remote_ike_address == remote_filter ;
Figure 5. Mobile host local policy.
Authorizer: RAS_ADMIN_KEY_A
Licensees: JIK
Local-Constants:
RAS_ADMIN_KEY_A = "rsa-base64:MDgCMQDMiEBn89VCSR3ajxr0bNRC\
Audlz5724fUaW0uyi4r1oSq8PaSC2v9QGS+phGEahJ8CAwEAAQ=="
JIK = "x509-base64:MIICGDCCAYGgAwIBAgIBADANBgkqhkiG9w0BAQQ\
FADBSMQswCQYDVQQGEwJHQjEOMAwGA1UEChMFQmVuQ28xETAPBg\
NVBAMTCEJlbkNvIENBMSAwHgYJKoZIhvcNAQkBFhFiZW5AYWxnc\
m91cC5jby51azAeFw05OTEwMTEyMzA2MjJaFw05OTExMTAyMzA2\
MjJaMFIxCzAJBgNVBAYTAkdCMQ4wDAYDVQQKEwVCZW5DbzERMA8\
GA1UEAxMIQmVuQ28gQ0ExIDAeBgkqhkiG9w0BCQEWEWJlbkBhbG\
dyb3VwLmNvLnVrMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBg\
QDaCs+JAB6YRKAVkoi1NkOpE1V3syApjBj0Ahjq5HqYAACo1JhM\
+QsPwuSWCNhBT51HX6G6UzfY3mOUz/vou6MJ/wor8EdeTX4nucx\
NSz/r6XI262aXezAp+GdBviuJZx3Q67ON/IWYrB4QtvihI4bMn5\
E55nF6TKtUMJTdATvs/wIDAQABMA0GCSqGSIb3DQEBBAUAA4GBA\
MaQOSkaiR8id0h6Zo0VSB4HpBnjpWqz1jNG8N4RPN0W8muRA2b9\
85GNP1bkC3fK1ZPpFTB0A76lLn11CfhAf/gV1iz3ELlUHo5J8nx\
Pu6XfsGJm3HsXJOuvOog8Aean4ODo4KInuAsnbLzpGl0d+Jqa5u\
TZUxsyg4QOBwYEU92H"
Conditions: app_domain == "IPsec policy" && doi == "ipsec"
&& pfs == "yes"
&& esp_present == "yes" && ah_present == "no"
&& ( ( esp_enc_alg == "des" && esp_auth_alg == "hmac-md5"
&& remote_filter_proto == "tcp"
&& local_filter_proto == "tcp"
&& ( remote_filter_port == "25"
|| remote_filter_port == "110" ) )
|| ( esp_enc_alg == "3des" && esp_aut_alg == "hmac-sha" ) ) ;
Signature: "sig-rsa-sha1-base64:KhKUeJ6m1zF7kehwHb7W0xAQ8EkPNKbUqNhf/i+f\
ymBqjbzMy13OmH1itijbFLQJ"
Figure 6. Mobile host credential.