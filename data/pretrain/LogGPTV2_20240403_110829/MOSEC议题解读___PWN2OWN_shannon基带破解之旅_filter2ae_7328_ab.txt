## 七、漏洞挖掘及利用
### 7.1 环境搭建
对基带漏洞进行利用，需要满足可以从OTA(即通信中的空中接口)发送特定数据给手机基带的目的，这就要搭建一个自己完全控制的蜂窝网络，可以通过软件无线电实现，网络端的协议栈可以运行在电脑上，SDR硬件则工作在相应频率作为收发器使用。
关于基站的搭建过程，Amat也没有详细阐述，不过可以参考独角兽安全团队的著作《无线电安全攻防大揭秘》。
### 7.2 调试基带
由于每一次modem
crash都可以得到一个ramdump文件，并且dump文件中包含有每一crash时的寄存器状态上下文，这会对逆向分析很有用。可以写一个脚本去分析这些dump文件获取一些有效信息，包括寄存器状态，内存信息等等。这些不同场景的dump文件，其实可以达到类似于调试器的效果。
### 7.3 深入分析
Layer 3的信令按照一种称为Information Elements的风格组织，具体有三种，V,LV,TLV,分别代表value, length +
value, tag + length + value. 每条信令都可能包含一个或者多个V, LV, TLV
的区段，3GPP标准中有这些区段的定义，阅读相关的定义，并通过对task代码进行逆向分析，找到处理这些区段的代码。一些漏洞在这个过程中会被发现。
这里举一个例子, CC task 看起来是处理 呼叫控制( call control)的代码，呼叫控制（Call control）负责 GSM
协议中呼叫连接管理。
下面这个表格中是Call control的不同的信令消息。
下面是Call control各区段的定义。
如果想熟悉一下call
control信令，也可以搭个osmocomBB，将mobile功能跑起来，用wireshark抓一下信令，具体请参阅《无线电安全攻防大揭秘》，下图是我抓的一个电话呼叫信令。
通过逆向分析CC
task发现了一些漏洞，但是根据Amat参加几次pwn2own的经验历，这类漏洞对于pwn2own而言，基本毫无用处。而且简单漏洞，在比赛中撞洞的风险很大，因此需要更深入的分析以便找到更复杂的漏洞。
### 7.4 Pwn2own漏洞
Amat决定分析更为复杂的GPRS，开始阅读GPRS标准并分析GPRS的会话管理相关信令。下图是GPRS信令协议分层。
通过对标准的阅读，发现‘ACTIVATE PDP CONTEXT ACCEPT‘这条信令比较复杂，看起来很适合深入分析，下图是该信令各区段的详细定义
Amat通过对SM task的逆向，找到了处理这些信令的代码，其中也包括‘ACTIVATE PDP CONTEXT ACCEPT ‘信令。
在这里PDP 指的是‘Packet Data Protocol‘， GPRS 建立连接时，终端会发送’ ACTIVATE PDP CONTEXT
’信令，如果基站允许，则会回复’ACTIVATE PDP CONTEXT ACCEPT’。
下面代码片断是处理’Protocol configuration options’的，后面后详细说明（不要吃惊，这是从IDA
中逆向分析而来，F5反编译转化为C代码，其中有Amat做的注释和函数名还原）。
’Protocol configuration options’的功能包括：
发送与PDP上下文激活关联的外部网络协议选项，以及发送与外部协议或应用程序相关联的附加（协议）数据（例如配置参数，错误代码或消息/事件等）。
代码片段处理的是 IPCP (Internet Protocol Control Protocol)， 具体内容如下
下面从前面逆向分析的代码中截取的片段
### 7.5 漏洞利用
设计的利用场景如下图，基站发送ACTIVE PDP CONTEXT ACCEPT给手机，从而触发漏洞，并利用漏洞。
然而理想很丰满，现实却很骨感，遇到的问题是手机仅仅在特定的状态下，即手机向基站发送’ ACTIVATE PDP CONTEXT
REQUEST’之后，才接收‘ACTIVE PDP CONTEXT ACCEPT’信令。
所以现在问题变为怎么让手机发送‘ACTIVATE PDP CONTEXT
REQUEST‘信令。当手机的APN设置中包含伪基站网络配置的信息时，手机会发送’ACTIVATE PDP CONTEXT
REQUEST‘信令，但这在pwn2own规则中是个问题，不允许人工介入操作。
阅读3GPP标准更多的内容之后，发现通过给手机发送‘REQUEST PDP CONTEXT ACTIVATION ‘信令可以之后，可以强制手机发送’
ACTIVATE PDP CONTEXT REQUEST ‘。
于是攻击流程变为下图所示。
为了实施攻击，需要修改YateBTS的代码，添加实现发送‘REQUEST PDP CONTEXT ACTIVATION‘的代码。需要改动的是
mbts/SGSNGGSN/Ggsn.cpp文件。
由于arm cache-fu的限制，在payload的一阶段需要ROP，之后将相应的shellcode拷贝到特定的可读写执行(RWX)内存区域，然后做一次cache刷新，包括i-cache(指令cache)，d-cache(数据cache)。后面的事情就是跳转去执行shellcode了。
Shellcode可以做任何事情，但为了更好的演示效果，Amat挑选的是通过在RFS（Remote file system， 用于给基带存储NV
信息，在Android上可以访问）写入一个文件。
当然payload也可以做别的事情，比如插入一个调试器，以便更好的分析其他漏洞。
### 7.6 漏洞演示
通过空口远程攻击基带，实现在RFS中写入一个文件，并在Android端查看文件，下面的图片显示漏洞利用成功。
## 八、总结
基带漏洞挖掘虽然对安全研究员的基本功要求很高，需要熟练掌握处理器原理，操作系统原理相关知识，以及熟练的二进制分析及漏洞利用技巧，但是并不需要过多的通信专业知识。如果阅读此文的小伙伴们，有坚实的二进制分析功底，也对基带漏洞挖掘有浓厚兴趣，可以发简历至PI:EMAIL。
## 九、参考文献
[1] Yuwei Zheng , Lin Huang, Ghost telephonist’ link hijack exploitations in
4g lte cs fallback 
[2] Nico Golde ,Breaking Band–reverse engineering and exploiting the shannon
baseband 
[3] Lin Huang, Forcing Targeted _LTE_ Cellphone into Unsafe Network,
审核人：Atoo 编辑：少爷