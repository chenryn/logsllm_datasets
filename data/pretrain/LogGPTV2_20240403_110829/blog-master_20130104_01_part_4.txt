echo -e "Please check your parameter."  
echo -e "$0 HOST PORT ROLE \n"  
exit 1  
fi  
TODAY=`date +%Y%m%d`  
EMAIL="PI:EMAIL"  
MON_HOST=172.16.3.150  
MON_PORT=1921  
MON_ROLE=digoal  
MON_DBNAME=digoal  
MON_COPY_SQL="copy mon_inherits(server_ip,server_port,dbname,inhrelid,inhparent,inhseqno,name_inhrelid,name_inhparent,acl_inhrelid,acl_inhparent,crt_time) from stdin"  
TARGET_COPY_SQL="copy (select inet_server_addr(),inet_server_port(),current_database(),inhrelid,inhparent,inhseqno,(inhrelid::regclass)::text,(inhparent::regclass)::text,mon_part_get_acl(inhrelid),mon_part_get_acl(inhparent),now() from pg_inherits) to stdout"  
HOST=$1  
PORT=$2  
ROLE=$3  
echo -e "-h $HOST -p $PORT -U $ROLE :\n"  
for DB in `psql -q -t -h $HOST -p $PORT -U $ROLE postgres -c "select datname from pg_database where datname not in ('postgres','template0','template1')"`  
do  
echo -e "psql -q -t -h $HOST -p $PORT -U $ROLE $DB :\n"  
# ----创建获取acl的函数  
psql -h $HOST -p $PORT -U $ROLE $DB  ./t.sh 172.16.3.150 9201 postgres  
CREATE FUNCTION  
DELETE 74  
CREATE FUNCTION  
DELETE 0  
```  
信息收集如下 :   
```  
ocz@db-172-16-3-150-> psql -h 127.0.0.1 -p 9201 postgres  
psql (9.2.1)  
Type "help" for help.  
postgres=# \c digoal digoal  
You are now connected to database "digoal" as user "digoal".  
digoal=> select * from mon_inherits ;  
  server_ip   | server_port | dbname | inhrelid | inhparent | inhseqno |    name_inhrelid    | name_inhparent | acl_inhrelid |        
        acl_inhparent              |          crt_time            
--------------+-------------+--------+----------+-----------+----------+---------------------+----------------+--------------+------  
-----------------------------------+----------------------------  
 172.16.3.150 |        9201 | digoal |    98010 |     98007 |        1 | digoal.tbl_201201   | digoal.tbl     | {}           | {digo  
al=arwdDxt/digoal,skycac=r/digoal} | 2013-01-05 09:37:53.100495  
 172.16.3.150 |        9201 | digoal |    98013 |     98007 |        1 | digoal.tbl_201202   | digoal.tbl     | {}           | {digo  
al=arwdDxt/digoal,skycac=r/digoal} | 2013-01-05 09:37:53.100495  
....略(74 rows)  
```  
采集服务器, 编辑定期执行脚本 :   
```  
vi /home/postgres/script/exec_coll_inherit_info.sh  
#!/bin/bash  
/home/postgres/script/coll_inherit_info.sh 172.16.3.150 9201 postgres  
```  
采集服务器, 编辑采集错误监控脚本 :   
```  
vi /home/postgres/script/mutt_err_coll_inherit_info.sh   
#!/bin/bash  
. /home/postgres/.bash_profile  
FATAL=1  
ERROR=1  
FATAL=`grep -c FATAL /tmp/exec_coll_inherit_info.log`  
ERROR=`grep -c ERROR /tmp/exec_coll_inherit_info.log`  
if [ $FATAL -ne 0 ] || [ $ERROR -ne 0 ]; then  
  echo -e "`date +%F%T`exec_coll_inherit_info error\n"|mutt -s "exec_coll_inherit_info error" -a /tmp/exec_coll_inherit_info.log PI:EMAIL PI:EMAIL  
fi  
```  
定时任务 :   
```  
crontab -l  
1 5 * * * /home/postgres/script/exec_coll_inherit_info.sh >/tmp/exec_coll_inherit_info.log 2>&1  
1 6 * * * /home/postgres/script/mutt_err_coll_inherit_info.sh  
```  
修改权限 :   
```  
chmod -R 500 /home/postgres/script/*  
```  
在监控集中库中创建表名转日期的函数 :   
```  
create or replace function mon_part_conv_to_date(i_relname text) returns date as $$  
declare  
  arr text[] := ARRAY[0];  
  v_date text := '';  
  i text := '';  
  v_len int := 0;  
begin  
  arr := regexp_split_to_array( regexp_replace( rtrim( ltrim( regexp_replace(i_relname,'[^[:digit:]]','_','g') ,'_') ,'_') ,'_+','_','g') ,'_');  
  FOREACH i IN ARRAY arr  
  loop  
    if (length(v_date) = 8) then  
      exit;  
    end if;  
    if (length(i) = 4 and length(v_date)=0 and (substr(i,1,2) >= '18' and substr(i,1,2) = '18' and substr(i,1,2) ='01' and substr(i,5,2)= '18' and substr(i,1,2) ='01' and substr(i,5,2)='01' and substr(i,7,2)='01' and substr(i,1,2)='01' and substr(i,3,2)='01' and substr(i,1,2)='01' and substr(i,1,2)=365 then  
    pdate - date_trunc('year', (pdate - interval '1 year'))::date  
  when pdate-lag_pdate >=28 then  
    pdate - date_trunc('month', (pdate - interval '1 month'))::date  
  when pdate-lag_pdate >=7 then  
    pdate-lag_pdate  
  when pdate-lag_pdate >=1 then  
    pdate - date_trunc('day', (pdate - interval '1 day'))::date  
  else   
    0.9  
  end AS predict_gap  
from   
(  
select   
  row_number() over (partition by server_ip,server_port,dbname,inhparent order by mon_part_conv_to_date(name_inhrelid)) AS rn,  
  server_ip,  
  server_port,  
  dbname,   
  name_inhparent,   
  name_inhrelid,   
  acl_inhparent,   
  acl_inhrelid,   
  mon_part_conv_to_date(name_inhrelid) AS pdate,   
  lag(mon_part_conv_to_date(name_inhrelid), 1) over (partition by server_ip,server_port,dbname,inhparent order by mon_part_conv_to_date(name_inhrelid)) AS lag_pdate,  
  max(mon_part_conv_to_date(name_inhrelid)) over (partition by server_ip,server_port,dbname,inhparent) AS max_pdate  
from mon_inherits   
) t   
) t;  
```  
视图结构 :   
```  
View "inherit_mon.v_mon_partition_tables"  
      Column       |  Type   | Modifiers   
-------------------+---------+-----------  
 rn                | bigint  |   
 server_ip         | inet    |   
 server_port       | integer |   
 dbname            | name    |   
 name_inhparent    | text    |   
 name_inhrelid     | text    |   
 acl_inhparent     | text[]  |   
 acl_inhrelid      | text[]  |   
 pdate             | date    |   
 lag_pdate         | date    |   
 max_pdate         | date    |   
 gap               | integer |   
 predict_gap       | numeric |   
 future_tables_cnt | numeric |   
```  
监控脚本示例 :   
每天自动监控 :   
```  
vi ~/inherit_day_monitor.sh  
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql9.1.2  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export PATH=$PGHOME/bin:$PATH:.  
TODAY=`date +%Y%m%d`  
EMAIL="PI:EMAIL"  
HOST=127.0.0.1  
PORT=1921  
ROLE=digoal  
DBNAME=digoal  
psql -t -A -h $HOST -p $PORT -U $ROLE $DBNAME /tmp/inherit_day_monitor.log  
select '-- 监控继承表的权限和父表是否一致,输出不一致项:' as monitor;  
select server_ip,server_port,dbname,name_inhparent,name_inhrelid,mon_array_sort(acl_inhparent),mon_array_sort(acl_inhrelid)  
  from mon_inherits  
  where mon_array_sort(acl_inhparent)<>mon_array_sort(acl_inhrelid);  
select '-- 监控日期继承表气泡:' as monitor;  
select server_ip,server_port,dbname,name_inhparent,name_inhrelid,pdate,lag_pdate,gap,predict_gap   
  from v_mon_partition_tables  
  where   
  gap <> predict_gap   
  and pdate <> '22220101'::date   
  and lag_pdate is not null;  
select '-- 监控日期继承表过期(需满足大于未来10个表,且大于未来半年(185day)):' as monitor;  
select * from  
(  
select server_ip,server_port,dbname,name_inhparent,name_inhrelid,max_pdate,predict_gap,future_tables_cnt,row_number() over (partition by server_ip,server_port,dbname,name_inhparent order by pdate desc) AS rn  
from v_mon_partition_tables  
  where   
  (future_tables_cnt<=10 or max_pdate - current_date <185)   