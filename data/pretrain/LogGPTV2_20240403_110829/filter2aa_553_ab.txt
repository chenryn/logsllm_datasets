9.3.3 尾递归
9.3.4 递归和倒序计算
9.3.5 递归的优缺点
9.4 编译多源代码文件的程序
9.4.1 UNIX
9.4.2 Linux
9.4.3 DOS命令行编译器
9.4.4 Windows和苹果的IDE编译器
9.4.5 使用头文件
9.5 查找地址：&运算符
9.6 更改主调函数中的变量
9.7 指针简介
9.7.1 间接运算符：*
9.7.2 声明指针
9.7.3 使用指针在函数间通信
9.8 关键概念
9
9.9 本章小结
9.10 复习题
9.11 编程练习
第10章 数组和指针
10.1 数组
10.1.1 初始化数组
10.1.2 指定初始化器（C99）
10.1.3 给数组元素赋值
10.1.4 数组边界
10.1.5 指定数组的大小
10.2 多维数组
10.2.1 初始化二维数组
10.2.2 其他多维数组
10.3 指针和数组
10.4 函数、数组和指针
10.4.1 使用指针形参
10.4.2 指针表示法和数组表示法
10.5 指针操作
10.6 保护数组中的数据
10.6.1 对形式参数使用const
10.6.2 const的其他内容
10.7 指针和多维数组
10.7.1 指向多维数组的指针
10.7.2 指针的兼容性
10.7.3 函数和多维数组
10.8 变长数组（VLA）
10.9 复合字面量
10.10 关键概念
10.11 本章小结
10.12 复习题
10.13 编程练习
第11章 字符串和字符串函数
11.1 表示字符串和字符串I/O
10
11.1.1 在程序中定义字符串
11.1.2 指针和字符串
11.2 字符串输入
11.2.1 分配空间
11.2.2 不幸的gets()函数
11.2.3 gets()的替代品
11.2.4 scanf()函数
11.3 字符串输出
11.3.1 puts()函数
11.3.2 fputs()函数
11.3.3 printf()函数
11.4 自定义输入/输出函数
11.5 字符串函数
11.5.1 strlen()函数
11.5.2 strcat()函数
11.5.3 strncat()函数
11.5.4 strcmp()函数
11.5.5 strcpy()和strncpy()函数
11.5.6 sprintf()函数
11.5.7 其他字符串函数
11.6 字符串示例：字符串排序
11.6.1 排序指针而非字符串
11.6.2 选择排序算法
11.7 ctype.h字符函数和字符串
11.8 命令行参数
11.8.1 集成环境中的命令行参数
11.8.2 Macintosh中的命令行参数
11.9 把字符串转换为数字
11.10 关键概念
11.11 本章小结
11.12 复习题
11.13 编程练习
第12章 存储类别、链接和内存管理
11
12.1 存储类别
12.1.1 作用域
12.1.2 链接
12.1.3 存储期
12.1.4 自动变量
12.1.5 寄存器变量
12.1.6 块作用域的静态变量
12.1.7 外部链接的静态变量
12.1.8 内部链接的静态变量
12.1.9 多文件
12.1.10 存储类别说明符
12.1.11 存储类别和函数
12.1.12 存储类别的选择
12.2 随机数函数和静态变量
12.3 掷骰子
12.4 分配内存：malloc()和free()
12.4.1 free()的重要性
12.4.2 calloc()函数
12.4.3 动态内存分配和变长数组
12.4.4 存储类别和动态内存分配
12.5 ANSI C类型限定符
12.5.1 const类型限定符
12.5.2 volatile类型限定符
12.5.3 restrict类型限定符
12.5.4 _Atomic类型限定符（C11）
12.5.5 旧关键字的新位置
12.6 关键概念
12.7 本章小结
12.8 复习题
12.9 编程练习
第13章 文件输入/输出
13.1 与文件进行通信
13.1.1 文件是什么
12
13.1.2 文本模式和二进制模式
13.1.3 I/O的级别
13.1.4 标准文件
13.2 标准I/O
13.2.1 检查命令行参数
13.2.2 fopen()函数
13.2.3 getc()和putc()函数
13.2.4 文件结尾
13.2.5 fclose()函数
13.2.6 指向标准文件的指针
13.3 一个简单的文件压缩程序
13.4 文件I/O：fprintf()、fscanf()、fgets()和fputs()
13.4.1 fprintf()和fscanf()函数
13.4.2 fgets()和fputs()函数
13.5 随机访问：fseek()和ftell()
13.5.1 fseek()和ftell()的工作原理
13.5.2 二进制模式和文本模式
13.5.3 可移植性
13.5.4 fgetpos()和fsetpos()函数
13.6 标准I/O的机理
13.7 其他标准I/O函数
13.7.1 int ungetc(int c, FILE *fp)函数
13.7.2 int fflush()函数
13.7.3 int setvbuf()函数
13.7.4 二进制I/O：fread()和fwrite()
13.7.5 size_t fwrite()函数
13.7.6 size_t fread()函数
13.7.7 int feof(FILE *fp)和int ferror(FILE *fp)函数
13.7.8 一个程序示例
13.7.9 用二进制I/O进行随机访问
13.8 关键概念
13.9 本章小结
13.10 复习题
13
13.11 编程练习
第14章 结构和其他数据形式
14.1 示例问题：创建图书目录
14.2 建立结构声明
14.3 定义结构变量
14.3.1 初始化结构
14.3.2 访问结构成员
14.3.3 结构的初始化器
14.4 结构数组
14.4.1 声明结构数组
14.4.2 标识结构数组的成员
14.4.3 程序讨论
14.5 嵌套结构
14.6 指向结构的指针
14.6.1 声明和初始化结构指针
14.6.2 用指针访问成员
14.7 向函数传递结构的信息
14.7.1 传递结构成员
14.7.2 传递结构的地址
14.7.3 传递结构
14.7.4 其他结构特性
14.7.5 结构和结构指针的选择
14.7.6 结构中的字符数组和字符指针
14.7.7 结构、指针和malloc()
14.7.8 复合字面量和结构（C99）
14.7.9 伸缩型数组成员（C99）
14.7.10 匿名结构（C11）
14.7.11 使用结构数组的函数
14.8 把结构内容保存到文件中
14.8.1 保存结构的程序示例
14.8.2 程序要点
14.9 链式结构
14.10 联合简介
14
14.10.1 使用联合
14.10.2 匿名联合（C11）
14.11 枚举类型
14.11.1 enum常量
14.11.2 默认值
14.11.3 赋值
14.11.4 enum的用法
14.11.5 共享名称空间
14.12 typedef简介
14.13 其他复杂的声明
14.14 函数和指针
14.15 关键概念
14.16 本章小结
14.17 复习题
14.18 编程练习
第15章 位操作
15.1 二进制数、位和字节
15.1.1 二进制整数
15.1.2 有符号整数
15.1.3 二进制浮点数
15.2 其他进制数
15.2.1 八进制
15.2.2 十六进制
15.3 C按位运算符
15.3.1 按位逻辑运算符
15.3.2 用法：掩码
15.3.3 用法：打开位（设置位）
15.3.4 用法：关闭位（清空位）
15.3.5 用法：切换位
15.3.6 用法：检查位的值
15.3.7 移位运算符
15.3.8 编程示例
15.3.9 另一个例子
15
15.4 位字段
15.4.1 位字段示例
15.4.2 位字段和按位运算符
15.5 对齐特性（C11）
15.6 关键概念
15.7 本章小结
15.8 复习题
15.9 编程练习
第16章 C预处理器和C库
16.1 翻译程序的第一步
16.2 明示常量：#define
16.2.1 记号
16.2.2 重定义常量
16.3 在#define中使用参数
16.3.1 用宏参数创建字符串：#运算符
16.3.2 预处理器黏合剂：##运算符
16.3.3 变参宏：...和_ _VA_ARGS_ _
16.4 宏和函数的选择
16.5 文件包含：#include
16.5.1 头文件示例
16.5.2 使用头文件
16.6 其他指令
16.6.1 #undef指令
16.6.2 从C预处理器角度看已定义
16.6.3 条件编译
16.6.4 预定义宏
16.6.5 #line和#error
16.6.6 #pragma
16.6.7 泛型选择（C11）
16.7 内联函数（C99）
16.8 _Noreturn函数（C11）
16.9 C库
16.9.1 访问C库
16