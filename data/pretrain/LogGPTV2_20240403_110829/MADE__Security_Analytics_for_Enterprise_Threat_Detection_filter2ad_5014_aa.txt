title:MADE: Security Analytics for Enterprise Threat Detection
author:Alina Oprea and
Zhou Li and
Robin Norris and
Kevin D. Bowers
MADE: Security Analytics for Enterprise Threat Detection
Alina Oprea
Northeastern University
PI:EMAIL
Robin Norris
EMC/Dell CIRC
PI:EMAIL
ABSTRACT
Enterprises are targeted by various malware activities at a staggering
rate. To counteract the increased sophistication of cyber attacks,
most enterprises deploy within their perimeter a number of secu-
rity technologies, including firewalls, anti-virus software, and web
proxies, as well as specialized teams of security analysts forming
Security Operations Centers (SOCs).
In this paper we address the problem of detecting malicious ac-
tivity in enterprise networks and prioritizing the detected activities
according to their risk. We design a system called MADE using ma-
chine learning applied to data extracted from security logs. MADE
leverages an extensive set of features for enterprise malicious com-
munication and uses supervised learning in a novel way for prior-
itization, rather than detection, of enterprise malicious activities.
MADE has been deployed in a large enterprise and used by SOC
analysts. Over one month, MADE successfully prioritizes the most
risky domains contacted by enterprise hosts, achieving a precision of
97% in 100 detected domains, at a very small false positive rate. We
also demonstrate MADE’s ability to identify new malicious activities
(18 out of 100) overlooked by state-of-the-art security technologies.
ACM Reference Format:
Alina Oprea, Zhou Li, Robin Norris, and Kevin Bowers. 2018. MADE:
Security Analytics for Enterprise Threat Detection. In 2018 Annual Computer
Security Applications Conference (ACSAC ’18), December 3–7, 2018, San
Juan, PR, USA. ACM, New York, NY, USA, 13 pages. https://doi.org/10.
1145/3274694.3274710
INTRODUCTION
1
Criminal activity on the Internet is expanding at nearly exponential
rates. With new monetization capabilities and increased access to
sophisticated malware through toolkits, the gap between attackers
and defenders continues to widen. As highlighted in a recent Ver-
izon Data Breach Investigations Report (DBIR) [3], the detection
deficit (difference between an attacker’s time to compromise and a
defender’s time to detect) is growing. This is compounded by the
ever-growing attack surface as new platforms (mobile, cloud, and
IoT) are adopted and social engineering gets easier.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-6569-7/18/12. . . $15.00
https://doi.org/10.1145/3274694.3274710
Zhou Li
University of California, Irvine
PI:EMAIL
Kevin Bowers
RSA
PI:EMAIL
These concerns affect not only individuals, but enterprises as well.
The enterprise perimeter is only as strong as its weakest link and
that boundary is becoming increasingly fuzzy with the prevalence
of remote workers using company-issued computers on networks
outside of the enterprise control. Enterprises attempt to combat cyber
attacks by deploying firewalls, anti-virus agents, web proxies and
other security technologies, but these solutions cannot detect or
respond to all malware. Large organizations employ “hunters” or
tier 3 analysts (part of the enterprise Security Operations Center –
SOC) [44] to search for malicious behavior that has evaded their
automated tools. Unfortunately, this solution is not scalable, both due
to the lack of qualified people and the rate at which such malware is
invading the enterprise.
In this paper we address the problem of detecting new malicious
activity in enterprise networks and prioritizing the detected activities
for operational use in the enterprise SOC. We focus on a funda-
mental component of most cyber attacks – malware command-and-
control communication (C&C). Command-and-control (also called
beaconing [30]) is the main communication channel between victim
machines and attacker’s control center and is usually initiated by
victim machines upon their compromise. We design a system MADE
(Malicious Activity Detection in Enterprises) that uses supervised
learning techniques applied to a large set of features extracted from
web proxy logs to proactively detect network connections resulting
from malware communication. Enterprise malware is increasingly
relying on HTTP to evade detection by firewalls and other security
controls, and thus it is natural for MADE to start from the web proxy
logs collected at the enterprise border. However, extracting intelli-
gence from this data is challenging due to well-recognized issues
including: large data volumes; inherent lack of ground truth as data
is unlabeled; strict limits on the amount of alerts generated (e.g., 50
per week) and their accuracy (false positive rates on the order of
10−4) for systems deployed in operational settings. An important
requirement for tools such as MADE is to provide interpretability of
their decisions, as their results are validated by SOC through manual
analysis. This precludes the use of models known to provide low
interpretability of their results, such as deep neural networks.
In collaboration with tier 3 security analysts at a large enterprise,
we designed MADE to overcome these challenges and meet the
SOC requirements. To address the large data issue, we filter network
communications that are most likely not malicious, for instance
connections to CDNs and advertisement sites, as well as popular
communications to well-established external destinations. To ad-
dress the ground truth issue, we label the external domains using
several threat intelligence services the enterprise subscribed to. Fi-
nally, to obtain the accuracy needed in operational settings, MADE
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Alina Oprea, Zhou Li, Robin Norris, and Kevin Bowers
leverages interpretable classification models in a novel way, by train-
ing only on malicious and unknown domains, and predicting the
probability that an unknown domain is malicious. Domains with
highest predicted probabilities can then be prioritized in the testing
stage for investigation by the SOC. In designing MADE, we defined
an extensive set of features to capture various behaviors of malicious
HTTP enterprise communication. In addition to generic, well-known
malware features, MADE proposes a set of enterprise-specific fea-
tures with the property of adapting to the traffic patterns of each
individual organization. MADE performs careful feature and model
selection to determine the best-performing model in this context.
MADE has been used in operational setting in a large enterprise
with successful results. In our evaluation, we demonstrate that over
one month MADE achieves 97% precision in the set of 100 detected
domains of highest risk, at the false positive rate of 6 · 10−5 (3 in
50,000 domains in testing set). MADE detects well-known malicious
domains (similar to those used in training), but also has the ability
to identify entirely new malicious activities that were unknown to
state-of-the-art security technologies (18 domains in the top 100 are
new detections by MADE).
2 BACKGROUND AND OVERVIEW
2.1 Enterprise Perimeter Defenses
Enterprises deploy network-level defenses (e.g., firewalls, web prox-
ies, VPNs) and endpoint technologies to protect their perimeter
against a wide range of cyber threats. These security controls gen-
erate large amounts of security logs that are typically stored in a
centralized security information and event management (SIEM) sys-
tem. Large enterprises recognize that these protections are necessary,
but not sufficient to protect themselves against continuously evolv-
ing cyber attacks. To augment their cyber defense capabilities, they
employ incident response teams including security analysts tasked to
analyze alerts and detect additional suspicious activities. Most of the
time, security analysts use the collected security logs for forensic in-
vestigation. Once an attack is detected by some external mechanism,
they consult the logs to detect the root cause of the attack.
We are fortunate to collaborate with the Security Operations
Center (SOC) of a large, geographically-distributed enterprise and
obtain access to their security logs. The tier 3 security analysts of the
SOC utilize a variety of advanced tools (host scanning, sandboxes
for malware analysis, threat intelligence services), but they rely
quite extensively on manual analysis and their domain expertise for
identifying new malicious activities in the enterprise. In the broadest
sense, the goal of our research is to design intelligent algorithms and
tools for the SOC analysts that automatically detect and prioritize
most suspicious enterprise activities.
2.2 Problem definition and adversarial model
More concretely, our goal is to use machine learning (ML) to proac-
tively identify and prioritize external network communications re-
lated to a fundamental component of most enterprise cyber attacks.
Our focus is on malware command-and-control (C&C) communica-
tion over HTTP or HTTPs, also called beaconing [30]. As enterprise
firewalls and proxies typically block incoming network connections,
establishing an outbound malware C&C channel is the main com-
munication mechanism between victims and attackers. This allows
malware operators to remotely control the victim machines, but also
to manually connect back into the enterprise network by using, for
instance Remote Access Tools [21]. C&C is used extensively in
fully automated campaigns (e.g., botnets or ransomware such as
Wannacry [34]), as well as in APT campaigns (e.g., [42]).
C&C increasingly relies on HTTP/HTTPs channels to maintain
communication stealthiness by hiding among large volumes of legit-
imate web traffic. Thus, it is natural for our purposes to leverage the
web proxy logs intercepting all HTTP and HTTPs communication
at the border of the enterprise network. This data source is very
rich, as each log event includes fields like the connection timestamp,
IP addresses of the source and destination, source and destination
port, full URL visited, HTTP method, bytes sent and received, status
code, user-agent string, web referer, and content type. We design a
system MADE (Malicious Activity Detection in Enterprises) that
uses supervised learning techniques applied to a large set of features
extracted from web proxy logs to proactively detect external network
connections resulting from malware communication.
In terms of adversarial model, we assume that remote attackers
have obtained at least one footprint (e,g, victim machine) into the
enterprise network. Once it is compromised, the victim initiates
HTTP or HTTPS communication from the enterprise network to the
remote attacker. The communication from the victim and response
from the attacker is logged by the web proxies and stored in the
SIEM system. We assume that attackers did not get full control of the
SIEM system and cannot manipulate the stored security logs. That
will result in a much more serious breach that is outside our scope. If
enterprise proxies decrypt HTTPS traffic (a common practice), our
system can also handle encrypted web connections.
Designing and deploying in operation a system like MADE is
extremely challenging from multiple perspectives. Security logs are
large in volume and more importantly, there is an inherent lack of
ground truth as data is unlabeled. Existing tools (such as VirusTo-
tal [2] and Alexa [6]) can be used to partially label a small fraction
of data, while the large majority of connections are to unknown
domains (they are not flagged as malicious, but cannot be considered
benign either). Our goal is to prioritize among the unknown domains
the most suspicious ones and provide meaningful context to SOC
analysts for investigation. Finally, MADE is intended for use in pro-
duction by tier 3 SOC analysts. This imposes choice of interpretable
ML models, as well as strict limits on the amount of alerts generated
(at most 50 per week). Achieving high accuracy and low false pos-
itive rates when most of the data has unknown labels is inherently
difficult in machine learning applications to cyber security [57].
2.3 System Overview
The MADE system architecture is in Figure 1 and consists of the
following components:
Training (Section 3). For training MADE, historical web proxy logs
over three months are collected from the enterprise SIEM. (1) In
the Data Filtering and Labeling phase, connections that are unlikely
C&C traffic (e.g., CDN, adware, popular domains) are excluded
from the dataset and the malicious domains in the collected data
are labeled using Threat Intelligence services such as VirusTotal.
(2) In Feature Extraction, a large number of features (89) are ex-
tracted using the domain expertise of SOC, measurement on our
MADE: Security Analytics for Enterprise Threat Detection
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Figure 1: System architecture.
Features
URL, UA, Header values
Method
Clustering
Dataset size
Accuracy
Detect new malware
158 million events per day
660GB per day
Two months
15 million flows
30 billion events
66 TP / 13 FP (Dataset 1)
32 TP / 26 FP (Dataset 2)
2 TP / 23 FP (Dataset 3)
289 TP / 86 FP
90% precision
67% recall
48 TP / 2 FP
97 TP / 3 FP
No
Yes
No
No
Yes
Classification
Prioritization (top 100)
300 million events per day
15 billion events total
System
ExecScent [45]
Oprea et al. [47]
Bartos et al. [11]
Malware Type
Known malware
communication
Periodic malware
communication
Malware delivery
Known malicious
Inter-arrival time
Communication, UA
WHOIS
Inter-arrival time
URL, Communication, Lexical
Scaling and shifting feature transformation
Belief propagation
Prioritization (top 375)
Classification
on sequences of flows
Time-series auto-correlation
Classification
Prioritization (top 50)
BAYWATCH [30]
Periodic malware
communication
Inter-arrival time
Lexical
MADE
Our approach
Generic malware
communication
Communication, Domain
URL, UA, Result code
Referer, Content type
WHOIS, Geolocation
Table 1: Comparison with previous systems for enterprise malware detection using web proxy logs. Legend: TP (True Positives), FP
(False Positives).
dataset, public reports on malware operations, and previous research
on malware analysis in the academic literature. We complement fea-
tures extracted from HTTP logs with additional attributes available
from external data sources, e.g., domain registration information
from WHOIS data and ASN information from MaxMind [1]. (3)
In Feature Selection, we rank the set of features and select a subset
with highest information gain. (4) Finally, Model Selection analyzes
various metrics of interest for four classes of supervised learning
models (Logistic Regression, Decision Trees, Random Forest, and
SVM) and selects the best performing ML model for our system.
Testing (Section 4). In testing, new real-time data collected during
another month is used into the ML model learned in the training
phase. In (5) Data Representation the selected features are extracted
from the new testing data, while (6) Model Prediction outputs do-
main risk scores using the trained ML model. (7) Ranking High-Risk
Communications prioritizes the most suspicious connections accord-
ing to the SOC budget (10 per business day or 50 per week).
Evaluation (Section 4). In (8) Evaluation, Analysis, and Feedback
the list of most suspicious domains is manually investigated by tier
3 SOC analysts and feedback is provided on MADE’s detections.
2.4 Comparison with previous work
As malware communication has been one of the most extensively
studied topic in cyber security for many years, the reader might
wonder what MADE contributes new to this area. We would like to
mention upfront the new features of MADE and how it compares
to previous work. MADE is designed to detect enterprise malware
communication and is the result of close collaboration over several
years with the enterprise SOC in all aspects of the project from
problem definition, to algorithm design, evaluation, and integration
into operational settings. A number of relatively recent papers are
also specifically designed to detect malicious communication in
enterprise settings from web proxy log analysis. These are the closest
systems related to MADE and they are surveyed in Table 1.
One of the first systems in this space is ExecScent [45], which
executes malware samples in a sandbox and constructs communica-
tion templates. ExecScent has the benefit of detecting new malware