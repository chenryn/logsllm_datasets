### Title: Black Hat US-19 - Zombie Ant Farming: Practical Tips for Playing Hide and Seek with Linux EDRs

**Abstract:**

Endpoint Detection and Response (EDR) solutions have made their way into the Linux ecosystem. As the number of Linux machines in data centers continues to grow, offensive security operators must adapt to this new landscape. This talk is divided into two parts, each focusing on different aspects of evading and leveraging EDRs in a Linux environment.

**Part One: Evasion Techniques and Post-Exploitation Capabilities**

In the first part, we will share practical tips and code techniques that can help offensive operators evade EDR detection and enhance their post-exploitation capabilities. We will cover:

- **Decoy Executables:** How to use approved executables as decoys to execute foreign code without raising suspicion.
- **Linux Malware Primitives:** An overview of the building blocks of Linux malware, including how to leverage the dynamic ELF loader and process bootstrap routines.
- **Actionable Evasion Tips:** Battle-tested and actionable strategies for Red Teams to avoid detection by EDRs.

**Part Two: Expanding and Weaponizing Capabilities**

The second part will focus on expanding and weaponizing the capabilities of your toolkit. We will discuss:

- **Chained Preloaders:** How to create feature-rich chained preloaders to hide modular malware during execution.
- **Mimicry Techniques:** Using mimicry to conceal malicious activities from EDRs.
- **Memory-Assisted "Preloader-as-a-Service":** A demonstration of a memory-assisted preloading service that abstracts the storage of malware from its execution environment.
- **Linux Memory-Based Implants:** Strategies for operationalizing memory-based implants in a Linux environment.
- **Cross-Memory Attach Injection:** Techniques for evading EDRs using cross-memory attach injection in deliberately ASLR-weakened executables.

**Toolkit and Reusability:**

We believe that the ability to retool in the field is more important than having standalone tools. Therefore, we have packaged the techniques discussed into reusable code patterns. These patterns are available in a toolkit that you can use or draw inspiration from after the talk.

**Defense Mitigation:**

The talk will conclude with pointers for defensive teams to mitigate the techniques we have demonstrated. Additionally, we will reveal the intriguing connection between "Zombies" and "Ants" in the context of our discussion.

Join us to gain valuable insights and practical skills for navigating the evolving landscape of Linux EDRs.