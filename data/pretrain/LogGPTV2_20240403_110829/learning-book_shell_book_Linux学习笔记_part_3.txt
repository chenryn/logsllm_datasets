drvx----- 4 lanhaitun lanhaitun 4096 11 月5 14:50/home/lanhaitun 注: 存在;
[root0localhost ]#userdel-rlanhaitun注：删除用户 lanhaitun，其家目录及文件一并删除；
[rootolocalhost]#1s-1d/home/lanhaitun注：查看是否在删除 lanhaitun 用户的同时，也一并把其家目录和文件
同删除：
1s:/home/lanhaitun：没有那个文件或目录注：已经删除：
警告：请不要轻易用-r参数：他会删除用户的同时删除用户所有的文件和目录，切记：如果用户目录下有重要的文件，在删
除前请备份：
其实也有最简单的办法，但这种办法有点不安全，也就是直接在/etc/passwd中删除您想要删除用户的记录：但最好不要这样
做，letc/passwd 是极为重要的文件，可能您一不小心会操作失误；
Groupadd
groupmod
groupdel是用来删除用户组的；
语法格式：groupdel用户组
比如：
u[ [apnos =[ rsou[eooen0]
---
## Page 13
passwd
passwd 作为普通用户和超级权限用户都可以运行，但作为普通用户只能更改自已的用户密码，但前提是没有被root用户锁
定：如果root用户运行passwd，可以设置或修改任何用户的密码：
passwd命令后面不接任何参数或用户名，则表示修改当前用户的密码：请看下面的例子：
[root0localhost ~]#passvd注：没有加任何用户，我是用root 用户来执行的passwd表示修改root 用户的密码：下面
也有提示：
Changing password for user root.
Nev UNIX password:注：请输入新密码；
Retype new UNIX passvord:注：验证新密码;
passed: all authentication tokens updated successfully.注:修改 root 密码成功:
如果是普通用户执行passwd只能修改自己的密码：
如果新建用户后，要为新用户创建密码，则用passwd用户名，注意要以root用户的权限来创建：
[rootelocalhost ~]# passed beinan 注：更改或创建 beinan用户的密码;
Changing password for user beinan.
Nev UNIX password:注：请输入新密码：
Retype new UNIX passvord:注：再输入—次;
passed: all authentication tokens updated successfully. 注: 成功:
普通用户如果想更改自己的密码，直接运行passwd 即可：比如当前操作的用户是beinan;
[beinan@localhost ~]$ passvd
Changing password for user beinan. 注： 更改 beinan 用户的密码;
(current） UNIX password：注：请输入当前密码：
Nev LNIX password:注：请输入新密码：
Retype new UNIX password:注：确认新密码;
passed: all authentication tokens updated successfully. 注: 更改成功;
passwd几个比较重要的参数：
[root0localhost beinan]# passwd -help
Usage: passd [OPTION. .. ]<accountNane)
k, —keep-tokens
keep non-expired authentication tokens
注：保留即将过期的用户在期满后能仍能使用：
-d, -delete
delete the password for the named account (root only)
注：删除用户密码，仅能以root权限操作：
1, -1ock
lock the named account (root only)
注：锁住用户无权更改其密码，仅能通过root权限操作：
"u,-unlock
unlock the named account (root only)
注：解除锁定：
-f, —force
force operation
注：强制操作：仅root权限才能操作：
, maximun=DAYS
maximun passvord lifetime（root only）注：两次密码修正的最大天数，后面接数字：仅能
root权限操作：
-n, —nininun=DAYS
mininum password lifetime （root only）注：两次密码修改的最小天数，后面接数字，仅能
root 权限操作：
---
## Page 14
, -varning=DAYS
nunber of days warning users receives before注：在距多少天提醒用户修改密码：仅能
root 权限操作：
passvord expiration (root only)
i, —inactive=DAYS
nunber of days after password expiration when an注：在密码过期后多少天，用户被禁
掉，仅能以root 操作：
account becomes disabled (root only)
S, status
report password status on the named account （root注：查询用户的密码状态，仅能 root
用户操作：
(4uo
--stdin
read new tokens from stdin (root only)
比如我们让某个用户不能修改密码，可以用-参数来锁定：
[rootelocalhost ~]#passed -1 beinan注：锁定用户beinan不能更改密码：
Locking passvord for user beinan.
passsd: Success
注：锁定成功：
[beinan@localhost ]#su beinan注：通过 su 切换到 beinan 用户;
[beinan@localhost ~]$ passvd注：beinan 来更改密码；
Changing password for user beinan.
Changing password for beinan
(current) UNIX password：注：输入 beinan 的当前密码：
passed:Authentication token manipulation error 注：失败，不能更改密码;
再来一例：
 uq  uu ppassd #[1soueooeno.]
Renoving password for user beinan.
passvd: Success
注：清除成功
[rootelocalhost ~]# passvd -S beinan 注：查询 beinan 用户密码状态：
Enpty passvord.
注：空密码，也就是没有密码：
注意：当我们清除一个用户的密码时，登录时就无需密码：这一点要加以注意：
chage修改用户密码有效期限的命令；
chage 用语法格式：
chage[-1][m最小天数][-M最大天数][-W警告][-I失效日][-E过期日][-d最后日]用户
前面已经说的好多了，这个只是一笔带过吧，知道有这个命令就行，自已实践实践再说，大体和psswd有些参数的用法差不
多：
id工具：查询用户所对应的UID和GID及GID所对应的用户组：
id工具是用来查询用户信息，比如用户所归属的用户组，UID和GID等：id用法极为简单：我们举个例子说明一下：
语法格式：id[参数][用户名]
至于有哪些参数，自己查一下id--help 或manid：如果id后面不接任何参数和任何用户，默认显示当前操作用户的用户名、
所归属的用户组、UID 和GID 等：
实例一：不加任何参数和用户名：
[beinan@localhost ~]$ id
---
## Page 15
uid=500 (beinan) gid=500 (beinan)groups=500 (beinan)
注解：在没有加任何参数的情况下，查询的是当前操作用户的用户名、UID、GID和所处的主用户组和附属用户组：在本例
中，用户名是 beinan，UID 是 500,所归属的主用户组是 beinan，GID 是 500：
实例二：id后面接用户名：
如果我们想查询系统中用户的UID 和GID 相应的内容，可以直接接用户名，但用户名必须是真实的，能在/etc/passwd 中查
到的：
[beinan0localhost ~]$ id linuxsir
uid=505 (1inuxsir) gid=502(1inuxsir) groups=502(1inuxsir) , 0 (root) , 500 (beinan)
注解：查询用户Inuxsir 的信息，用户 linuxsir，UID 为505，所归属的主用户组是 linuxsir，主用户组的 GID是502：同时
linuxsir用户也是GID为0的root用户组成员，也是 GID为 500用户组 beinan 的成员；
这个例子和实例一在用户组方面有所不同，我们在Linux用户（user）和用户组（group）管理概述》中有提到：用户和
用户组的对应关系，可以是一对一、一对多、多对一、或多对多的交叉关系，请参考之：另外您还需要掌握用户（user）
和用户组（group）配置文件详解》一文：
2、finger工具：用来查询用户信息，侧重用户家目录、登录SHELL等：
finger工具侧重于用户信息的查询：查询的内容包括用户名（也被称为登录名Login），家目录，用户真实的名字（Name）……
办公地址、办公电话：也包括登录终端、写状态、空闭时间等：
我们最常用finger 来查询用户家目录、用户真实名、所用SHELL类型、以及办公地址和电话，这是以参数-长格式输出的；
而修改用户的家目录、真实名字、办公地址及办公电话，我们一般要能过chfn命令进行：
语法格式：
finger[参数选项][用户名]
采用长格式（默认），显示由-s选项所包含的所有信息，以及主目录、办公地址、办公电话、登录SHELL、邮件状
态、-plan、 project 和.forward;
-m禁止对用户真实名字进行匹配；
-p 把.plan 和.project 文件中的内容省略：
-S显示短格式，用户名（也被称为登录名Login）、真实名字（NAME）、在哪个终端登录（Tty）、写状态、空闲时间（ldle）、
登录时间（LoginTime）、办公地点、办公电话等：
至于finger有哪些参数，您可以通过 finger--help 或man finger来获取，我们在本文中以实例讲述最常用的参数：
实例一：不接任何参数，也不指定查询用户名：默认为加了-s参数：
[beinan@localhost ~]$ finger
Login
Nane
Tty
Idle Login Tine office
Office Phone
beinan  beinan sun 
1tty11:39Nov 2 08:27
linuxsir linuxsir open tty2
2 Nov  2 10:03 1inuxsir o +1389866771
等价命令
[beinan@localhost ~]s finger -8
注解：不加任何参数，也没有指定查询哪个用户，finger会以数认以短格-s来输出登录本机的所有用户的用户名（也被称为
登录名Login）、真实名字（NAME）、在哪个终端登录（Tty）、写状态、空闲时间（Idle）、登录时间（Login Time）、办公地
点、办公电话等：
在这个例子中，有beinan用户登录，真实名字是beinan sun（这个名字是用户的真实名字，如果在添加用户时没有设置，
是不会显示的），在ty1终端登录，空闭时间是1分39秒，登录时间是Nov/2/08:27，没有办公室名称，没有办公电话；
请对照本例中beinan用户记录的解说，我们来看看本例中的linuxsir用户信息：应该不难
关于写状态，如果在Tty 后面没有任何输出，表示正在写入，如果有*出现，表示没有写入或被禁止，比如下面的例子，t
用户没有通过终端登录系统，因为Tty是*，同时Tty后面还有一个”，表示禁止写入或没有写入状态（当用户没有登录时）：
---
## Page 16
Login
Nane
Tty
Id1eLogin Tine
office
Office Phone
ftp
FTP User *
*No logins
我们可以以短格式的来查询某个用户信息以短格式输出，比如下面的例子：
  r]
实例二：关于长格式的用户信息的输出-1参数的实例：
finger-如果不加用户名的情况下，可以列出所有通过ty登录的用户信息：如果您想查询某个用户，就直接指定用户，可以
指定一个或多个：什么是ty登录？如果您在全屏文本界面操作的话，您可以通过按CTRL+F2或CTRL+F3或CTRL+F4等，
以几个不同的用户登录到主机上，您就会看到，每个用户都有不同的ty；
[beinan0localhost ~]$ finger 1
[beinan0localhost ]sfinger -1beinan linuxsir注：可以同时查询儿个用户信息，以长格式输出：
[beinan@localhost ~]$ finger beinan
Login: beinan
Nane: beinan sun
Directory : /home/beinan
She11: /bin/bash
On since Wed Nov 2 08:27 (CST) on tty1
 2 hours 29 minutes idle
On since Wed Nov 2 10:50 (CST) on pts/0 from :0. 0
No mai1.
No Plan.
在本例中，所查询的用户是beinan，真实名字是beinan sun，家目录位于/home/beinan，所用 SHELL 类型是bash：然
后就是通过哪个终端登录的，登录时间，是不是有mail，有Plan等：
实例三：参数组合的例子：
Login: beinan
Name: beinan sun
Directory : /home/beinan
She11: /bin/bash
On since Wed Nov 2 08:27 (CST) on tty1
2 hours 36 minutes idle
On since Wed Nov 2 10:50 (CST) on pts/0 from :0. 0
No mei1.
注解：查询beinan用户信息，以长格式输出，并且不输出.Plan和.Project 的内容：
实例四：finger-s 和w及who 的比较；
对于finger 就说这么多吧，极为简单的工具，当用到-s 参数时，您最好和 w和 who 工具对照，看看finger-s 和 w 及 who
的输出有什么异同，w和 who是查询哪些用户登录主机的：而finger-s呢，无论是登录还是不登录的用户都可以查：但所查
到的内容侧重有所不同：自己看看例子：
Login
Name
Tty
Idle Login Time office
office Phone
beinan
beinan sun
tty1
3:03
beinan
beinan sun
pts/0
Nov 2 10:50 (:0. 0)
linuxsir
 1inuxsir open
tty2
1:26
Nov 2 10:03 1inuxsir 0 +1389866771
[beinan@localhost ~]$ 
11:30:36 up
3:04,
'sosn g
1oad average: 0. 30, 0. 15, 0. 10
USER
TTY
FROM
L0GINe
IDLE
beinan
tty1
08:27
3:03n 2:52
0. 00s /bin/sh /usr/X11R6/bin/startx
linuxsir tty2
10: 03
1:26m 0. 01s 0. 01s -bash
beinan
pts/0
:0. 0
10: 50
0. 00s 0. 16s 0. 00s 
[beinan@localhost ~]$ vho
beinan tty1
Nov 2 08:27
---
## Page 17
1inuxsir tty2
Nov 2 10:03
beinan
pts/0
Nov  2 10:50 (:0. 0)
3、查询登录主机的用户工具：w、who、users
W、who 和 users工具，是查询已登录当前主机的用户：另外finger-s 也同样能查询：侧重点不一样：请自已对比着看；毕
竞简单，这里只是介绍：
[beinan0localhost ~]$ 
12:09:56 up 3:43,  7 users,  1oad average: 0. 16, 0. 10, 0. 04
USER
TTY
FROM
L0GINe
beinan
tty1
-
08: 27
3:42m 3:09 0. 00s /bin/sh /usr/X11R6/bin/startx
linuxsir tty2
10: 03
2:06m 0. 01s 0. 01s bash
beinan pts/0
:0. 0
11 :36