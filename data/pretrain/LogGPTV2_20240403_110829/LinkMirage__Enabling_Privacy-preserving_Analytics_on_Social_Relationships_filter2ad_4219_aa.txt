title:LinkMirage: Enabling Privacy-preserving Analytics on Social Relationships
author:Changchang Liu and
Prateek Mittal
LinkMirage: Enabling Privacy-preserving Analytics
on Social Relationships
Changchang Liu, Prateek Mittal
Email: PI:EMAIL, PI:EMAIL
Department of Electrical Engineering, Princeton University
Abstract—Social relationships present a critical
foundation
for many real-world applications. However, both users and
online social network (OSN) providers are hesitant to share
social relationships with untrusted external applications due to
privacy concerns. In this work, we design LinkMirage, a system
that mediates privacy-preserving access to social relationships.
LinkMirage takes users’ social relationship graph as an input,
obfuscates the social graph topology, and provides untrusted
external applications with an obfuscated view of
the social
relationship graph while preserving graph utility.
Our key contributions are (1) a novel algorithm for obfus-
cating social relationship graph while preserving graph utility,
(2) theoretical and experimental analysis of privacy and utility
using real-world social network topologies, including a large-scale
Google+ dataset with 940 million links. Our experimental results
demonstrate that LinkMirage provides up to 10x improvement in
privacy guarantees compared to the state-of-the-art approaches.
Overall, LinkMirage enables the design of real-world applications
such as recommendation systems, graph analytics, anonymous
communications, and Sybil defenses while protecting the privacy
of social relationships.
I.
INTRODUCTION
Online social networks (OSNs) have revolutionized the way
our society interacts and communicates with each other. Under
the hood, OSNs can be viewed as a special graph structure
composed of individuals (or organizations) and connections
between these entities. These social relationships represent
sensitive relationships between entities, for example, trusted
friendships or important interactions in Facebook, Twitter, or
Google+, which users want to preserve the security and privacy
of.
At the same time, an increasing number of third party appli-
cations rely on users’ social relationships (these applications
can be external to the OSN). E-commerce applications can
leverage social relationships for improving sales [21], and data-
mining researchers also rely on the social relationships for
functional analysis [31], [33]. Social relationships can be used
to mitigate spam [26]. Anonymous communication systems
can improve client anonymity by leveraging users’ social
relationships [11], [28], [29]. State-of-the-art Sybil defenses
Permission to freely reproduce all or part of this paper for noncommercial
purposes is granted provided that copies bear this notice and the full citation
on the ﬁrst page. Reproduction for commercial purposes is strictly prohibited
without the prior written consent of the Internet Society, the ﬁrst-named author
(for reproduction of an entire paper only), and the author’s employer if the
paper was prepared within the scope of employment.
NDSS ’16, 21-24 February 2016, San Diego, CA, USA
Copyright 2016 Internet Society, ISBN 1-891562-41-X
http://dx.doi.org/10.14722/ndss.2016.23277
rely on social trust relationships to detect attackers [8], [43].
However, both users and the OSN providers are hesitant to
share social relationships/graphs with these applications due
to privacy concerns. For instance, a majority of users are
exercising privacy controls provided by popular OSNs such
as Facebook, Google+ and LinkedIn to limit access to their
social relationships [9]. Privacy concerns arise because external
applications that rely on users’ social relationships can either
explicitly reveal this information to an adversary, or allow
the adversary to perform inference attacks [14], [20], [24],
[30], [32], [37]. These concerns hinder the deployment of
many real-world applications. Thus, there exist fundamentally
conﬂicting requirements for any link obfuscation mechanism:
protecting privacy for the sensitive links in social networks and
preserving utility of the obfuscated graph for use in real-world
applications.
In this work, we design LinkMirage, a system that mediates
privacy-preserving access to social relationships. LinkMirage
takes users’ social relationship graph as an input, either via
an OSN operator or via individual user subscriptions. Next,
LinkMirage obfuscates the social graph topology to protect the
privacy of users’ social contacts (edge/link privacy, not vertex
privacy). LinkMirage then provides external applications such
as graph analytics and anonymity systems [11], [28], [29]
with an obfuscated view of the social relationship graph.
Thus, LinkMirage provides a trade-off between securing the
conﬁdentiality of social relationships, and enabling the design
of social relationship based applications.
We present a novel obfuscation algorithm that ﬁrst clusters
social graphs, and then anonymizes intra-cluster links and
inter-cluster links, respectively. We obfuscate links in a manner
that preserves the key structural properties of social graphs.
While our approach is of interest even for static social graphs,
we go a step further in this paper, and consider the evolutionary
dynamics of social graphs (node/link addition or deletion).
We design LinkMirage to be resilient to such evolutionary
dynamics, by consistently clustering social graphs across time
instances. Consistent clustering improves both the privacy and
utility of the obfuscated graphs. We show that LinkMirage
provides strong privacy properties. Even a strategic adversary
with full access to the obfuscated graph and prior information
about
the original social graph is limited in its ability to
infer information about users’ social relationships. LinkMirage
provides up to 3x privacy improvement in static settings, and
up to 10x privacy improvement in dynamic settings compared
to the state-of-the-art approaches.
Overall, our work makes the following contributions.
• First, we design LinkMirage to mediate privacy-preserving
access to users’ social relationships. LinkMirage obfuscates
links in the social graph (link privacy) and provides un-
trusted external applications with an obfuscated view of
the social graph. LinkMirage can achieve a good balance
between privacy and utility, under the context of both static
and dynamic social network topologies.
• Second, LinkMirage provides rigorous privacy guarantees to
defend against strategic adversaries with prior information
of the social graph. We perform link privacy analysis both
theoretically as well as using real-world social network
topologies. The experimental results for both a Facebook
dataset (with 870K links) and a large-scale Google+ dataset
(with 940M links) show up to 10x improvement in privacy
over the state-of-the-art research.
• Third, we experimentally demonstrate the applicability of
LinkMirage in real-world applications, such as privacy-
preserving graph analytics, anonymous communication and
Sybil defenses. LinkMirage enables the design of social
relationships based systems while simultaneously protecting
the privacy of users’ social relationships.
• Finally, we quantify a general utility metric for LinkMirage.
We analyze our utility measurement provided by LinkMi-
rage both theoretically and using real-world social graphs
(Facebook and Google+).
II. BACKGROUND
A. Motivating Applications
In this paper, we focus our research on protecting the
link privacy between labeled vertices in social networks [16],
[27], [42]. Mechanisms for graph analytics, anonymous com-
munication, and Sybil defenses can leverage users’ social
relationships for enhancing security, but end up revealing
users’ social relationships to adversaries. For example, in the
Tor network [11], the relays’ IP addresses (labels) are already
publicly known (vertex privacy in [25], [34], [45] is not
useful). Tor operators are hesitant to utilize social trusts to
set up the Tor circuit as recommended by [28], [29] since
the circuit construction protocol would reveal sensitive social
contact information about the users. Our proposed link-privacy
techniques can thus be utilized by the Tor relay operators to
enhance system security while preserving link privacy. Overall,
our work focuses on protecting users’ trust relationships while
enabling the design of such systems.
LinkMirage supports three categories of social relationship
based applications: 1) Global access to the obfuscated graph:
Applications such as social network based anonymity sys-
tems [11], [28], [29] and peer-to-peer networks [8] can utilize
LinkMirage (described in Section IV-B) to obtain a global
view of privacy-preserving social graph topologies; 2) Local
access to the obfuscated graph: an individual user can query
LinkMirage for his/her obfuscated social relationships (local
neighborhood information), to facilitate distributed applica-
tions such as SybilLimit [43]; 3) Mediated data analytics:
LinkMirage can enable privacy-preserving data analytics by
running desired functional queries (such as computing graph
modularity and pagerank score) on the obfuscated graph topol-
ogy and only returning the result of the query, since immediate
analytics operated on the original graph topology would leak
sensitive information about users’ social relationships. Existing
work [12], [13] demonstrated that the implementation of graph
analytics algorithms could leak certain information. Instead of
repeatedly adding perturbations to the output of each graph
analytics algorithm as in differential privacy [12], [13], which
Fig. 1. LinkMirage architecture. LinkMirage ﬁrst collects social link informa-
tion through our social link app or directly through the OSN providers, and
then applies an obfuscation algorithm to perturb the original social graph(s).
The obfuscated graph(s) would be utilized to answer the query of the untrusted
applications in a privacy-preserving manner. The third-party application (which
queries the social link information) is considered an adversary which aims to
obtain sensitive link information from the perturbed query results.
would be rather costly, LinkMirage can obtain the perturbed
graph just once to support multiple graph analytics. Such an
approach protects the privacy of users’ social relationships
from inference attacks using query results.
There exists a
plethora of attacks against vertex anonymity based mechanisms
[20], [30], [32], [37]. Ji et al. [19] recently showed that no
single vertex anonymization technique was able to resist all
the existing attacks. Note that these attacks are not applicable
to link privacy schemes. Therefore, a sound approach to vertex
anonymity must start with improvements in our understanding
of link privacy. When used as ﬁrst step in the design of vertex
privacy mechanisms, our approach can protect the privacy of
social contacts and graph links even when the vertices are de-
anonymized using state-of-the-art approaches [20], [30], [32],
[37]. Furthermore, our method can even improve the resilience
of vertex anonymity mechanisms against de-anonymization
attacks when applied to unlabelled graphs (will be shown in
Section VI-B).
B. System Architecture and Threat Model
Fig. 1 shows the overall architecture for LinkMirage. For
link privacy, we consider the third-party applications (which
can query the social link information) as adversaries, which
aim to obtain sensitive link information from the perturbed
query results. A sophisticated adversary may have access to
certain prior information such as partial link information of
the original social networks, and such prior information can
be extracted from publicly available sources, social networks
such as Facebook, or other application-related sources as stated
in [6]. The adversary may leverage Bayesian inference to infer
the probability for the existence of a link. We assume that
LinkMirage itself is trusted, in addition to the social network
providers/users who provide the input social graph.
In Section V-B, V-C, we deﬁne our Bayesian privacy metric
(called anti-inference privacy) and an information theoretic
metric (called indistinguishability) to characterize the privacy
offered by LinkMirage against adversaries with prior infor-
mation. In addition, the evolving social topologies introduce
another serious threat where sophisticated adversaries can
combine information available in multiple query results to
infer users’ social relationships. We deﬁne anti-aggregation
privacy in Section V-D, for evaluating the privacy performance
of LinkMirage against such adversaries.
C. Basic Theory
Let us denote a time series of social graphs as G0,··· , GT .
For each temporal graph Gt = (Vt, Et), the set of vertices
is Vt and the set of edges is Et. For our theoretical analysis,
we focus on undirected graphs where all the |Et| edges are
2
GG¢OriginalGraphObfuscatedGraphLinkMirageServer(Trusted)LinkMiragesociallinkappUser1User2User3(cid:258)ObfuscationAlgorithmUntrustedApplicationsPrivacy-preservinggraphanalysisAnonymouscommunicationVertexanonymitySybildefensesQ()QG¢...OSNproviderssymmetric, i.e. (i, j) ∈ Et iff (j, i) ∈ Et. Note that our ap-
proach can be generalized to directed graphs with asymmetric
edges. Pt is the transition probability matrix of the Markov
chain on the vertices of Gt. Pt measures the probability that
we follow an edge from one vertex to another vertex, where
Pt (i, j) = 1/deg(i) (deg(i) denotes the degree of vertex i) if
(i, j) ∈ Et, otherwise Pt (i, j) = 0. A random walk starting
from vertex v, selects a neighbor of v at random according to
Pt and repeats the process.
III. SYSTEM OVERVIEW AND ROADMAP
A. LinkMirage System
Our objective for LinkMirage is to obfuscate social re-
lationships to strike a balance between privacy for users’
social relationships and the usability for large-scale real-
world applications, as will be discussed in Section IV-A. We
deploy LinkMirage as a Facebook application that implements
graph construction and obfuscation, as will be discussed in
Section IV-B.
For our perturbation mechanism of LinkMirage, we take
both the static and the temporal social network topology
into consideration, as will be discussed in Section IV-C. Our
obfuscation mechanism consists of the following conceptual
steps:
• Dynamic clustering which ﬁnds community structures in
evolving graphs by simultaneously considering consecutive
graphs. Our dynamic clustering utilizes an effective back-
tracking strategy to cluster a graph based on the clustering
result of the previous graph.
• Selective perturbation which perturbs the minimal amount
of edges in the evolving graphs according to the dynamic
clustering result, where we only perturb the changed com-
munities between consecutive graphs. In this manner, it
is possible to use a very high privacy parameter in the
perturbation process, while preserving structural properties
of the social network topologies.
We further discuss the scalability of our perturbation algo-
rithm on the real world large-scale Google+ dataset in Sec-
tion IV-D and visually show the effectiveness of our algorithm
on the real world Facebook dataset in Section IV-E.
B. Privacy Evaluation
In Section V, we rigorously analyze the privacy advantage
of our LinkMirage over the state-of-the-art approaches, by
considering three adversarial scenarios where sophisticated
adversaries can combine information available in multiple
query results to infer users’ social relationships. The privacy
advantage of our LinkMirage will be demonstrated as
• LinkMirage shows signiﬁcant privacy advantages in anti-
inference privacy (will be deﬁned in Section V-B). The
difference between the posterior probability and the prior
probability of the existence of an link is smaller for LinkMi-
rage than the state-of-the-art methods.
• LinkMirage achieves higher indistinguishability from an
information theoretic perspective (will be deﬁned in Sec-
tion V-C) where the obfuscated graph of LinkMirage con-
tains less information of users’ social relationships than the
state-of-the-art methods.
• LinkMirage also shows signiﬁcant privacy advantages in
anti-aggregation privacy (will be deﬁned in Section V-D),
where the adversary’s estimation for users’ social relation-
ships is less accurate for LinkMirage than the existing
methods.
C. Utility Evaluation
In Section VI, we apply our perturbation algorithm to
various real world applications such as graph analytics, anony-
mous communications, and Sybil defenses. Compared to pre-
vious methods, LinkMirage results in signiﬁcantly lower attack
probabilities when applied to anonymous communications and
higher resilience to de-anonymization attacks when applied
to vertex anonymity systems. LinkMirage even surprisingly
improves the Sybil detection performance when applied to the
distributed SybilLimit systems. LinkMirage also outperform
existing methods in preserving the utility for multiple graph
analytics applications, such as pagerank score and modularity.
In Section VII, we further analyze LinkMirage’s ability to
preserve general graph-theoretic characteristics.
A. Design Goals
IV. LINKMIRAGE SYSTEM
We envision that applications relying on social relationships
between users can bootstrap this information from online
social network operators such as Facebook, Google+, Twit-
ter with access to the users’ social relationships. To enable
these applications in a privacy-preserving manner, a perturbed
social graph topology (by adding noise to the original graph
topology) should be available.
Social graphs evolve over time, and the third-party appli-
cations would beneﬁt from access to the most current version
of the graph. A baseline approach is to perturb each graph
snapshot independently. However, the sequence of perturbed
graphs provide signiﬁcantly more observations to an adversary