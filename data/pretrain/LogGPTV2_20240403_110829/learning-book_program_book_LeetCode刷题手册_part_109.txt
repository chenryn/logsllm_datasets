Input: n = 69
output: [1,68]
Example 5:
Input: n = 1010
output: [11, 999]
Constraints:
●2  0 && v == t[k] {
res = append(res, v)
---
## Page 1113
return res
1385.FindtheDistanceValueBetweenTwoArrays
题目
Given two integer arrays arrl and arr2 , and the integer d, return the dlistonce volue between the
two orroys.
The distance value is defined as the number of elements arr1[i] such that there is not any
element arr2[j] where arrl[i]-arr2[j]l  d=2
|49|=5 > d=2
↑41|=3 > d=2
|48|=4 > d=2
For arrl[1]=5 we have:
| 510 | =5 > d=2
|59|=4 > d=2
|51|=4 > d=2
|58|=3 > d=2
For arrl[2]=8 we have:
∣8-10|=2  d=2
∣8-8|=0 = maxl {
max2 = max1
max1 = num
---
## Page 1120
}else if num = max2 {
max2 = num
return （maxl-1)*（max2-1)
1470.ShuffletheArray
题目
Given the array nums consisting of 2n elements in the form [xl,x2, ..., xn,yl,y2,..-,yn] 
Return the array in the form [x1,y1l, x2,y2,...,xn,yn]
Example 1:
Input: nums = [2,5,1,3,4,7], n = 3
Output: [2,3,5,4,1,7]
Explanation: Since x1=2, x2=5, x3=1, yl=3, y2=4, y3=7 then the answer is
[2,3, 5,4,1,7] .
Example 2:
Input: nums = [1,2,3,4,4,3,2,1], n = 4
Output: [1,4,2,3,3,2,4,1]
Example 3:
Input: nums = [1,1,2,2], n = 2
output: [1,2,1,2]
Constraints:
●1 <= n<=500
●nums.1ength == 2n
●1 <= nums[i] <= 10^3
题目大意
给你一个数组nums，数组中有2n个元素，按[x1,x...xn,y1.y2...yn]的格式排列。请你将数组按
[x1,y1,x2.y2...,xn,yn]格式重新排列，返回重排后的数组。
---
## Page 1121
解题思路
给定一个2n的数组，把后n个元素插空放到前n个元素里面。输出最终完成的数组。
·简单题，按照题意插空即可。
代码
package leetcode
func shuffle(nums []int, n int) []int {
result := make([]int, 0)
for i := 0; i < n; i++ {
result = append(result, nums[i])
result = append(result, nums [n+i])
return result
---