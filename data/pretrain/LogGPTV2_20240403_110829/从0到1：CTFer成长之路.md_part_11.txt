return 1;
else
return 1;
pubL.ie funet:ion get_by_ie(Request Srequest)(
Snid = sthis-setderypt(Snid):
[-PS.)1a6c1sanbaag = pSus
//eche fnid;
Sthis->gaf($nid);
Squery = db_quey(*stLECT ndd, titLe, booy_value FRon node_field,data Left
30TN nsde,_body ON nsde_field_data.nid=nede__bedy .entity_.ie
return
array(*etitles> $this>t($query['title′1),
[°,cd/>. 'C[,amenApo4.]Kambs)1c-Stua$ *.ed>,”相当于正则通配符的“？”，“”，可观察到返回
包存在报错），见图1-3-31
通过相应内容中报错显示的simplexml_load_string函数，基本确认了XXE漏洞的存在，接着尝试构造
远程实体调用实现BlindXXE的利用。构造的利用数据如下：
HTTP/1.1 200 OK
Date: Mon, 26 Mar 2018 09:18:17 GMT
xPowered-By:PHP/5.5.9
Vary: Accept-Encoding
Connection: close
Warning1simplexml_load_string():Bntity: 1ino 11
parser error:Start tag expected,'slt;'not found in
1ine 54
Warning1simploxml_1oad_string(): &1t;?xm1
/var/ww/52dandan.cc/public_html/function.phpon
version=&quot;1.06quot;encoding=&quotjutf-86quot;?&gt;in
1ine 54
图1-3-31
现在config-php文件中存在着一半的flag内容。
https:/weread.qq.com/web/reader/77d32500721a485577d8eeek65132ca01b6512bd43d90e3
2512e
---
## Page 66
2021/1/16
从0到1：CTFer成长之路-Nu1L战队-微信读书
然后在本机寻找另一半flag，以失败告终。猜测另一半的flag内容在内网中，于是依次读取/etc/
、/proc/net/arp，发现存在内网IP:192.168.223.18
host
利用XXE漏洞访问192.168.223.18的80端口（也可以进行端口扫描，这里直接猜测常见端口），发现
192.168.223.18主机存在Web服务且存在SQL注入。利用盲注注入获得flag的另一半。
同。PHP十分有特色地保留了PHP协议，所以可以用Base64这个Filter编码读取到的文件内容，避免
由于“&”“
the server use
edi
#ServerNane ww.exanple.con
ServerAdnsn webnasterglocathost
DocumentRoot /Th15_1s_TAT_tiHe_PL4se_You_NSV58_KnlW/var/www/htal
Avalalelaglels:trace
-.., tracel, debug, Info, notice, warn,
#It is aiso possibte to confioure the loglevel for particular
图1-3-33
已知Web目录后，可直接通过Web目录构造flag文件的绝对路径，绕过相对路径的限制，读取flag
见图1-3-34,
图1-3-34
【总结】这是一道经典的文件读取类型的题目，主要考查参赛者对于Web配置文件信息搜集的能力
需要通过读取Apache配置文件发现Web目录，通过构造绝对路径，绕过相对路径的限制，完成flag
文件的读取。
https://weread.qq.com/web/reader/77d32500721a485577d8eeek65132ca01b6512bd43d90e3
2/128
---
## Page 68
2021/1/16
从0到1：CTFer成长之路-Nu1L战队-微信读书
小结
在CTF的Web类题目中，信息搜集、SQL注入、任意文件读取漏洞是最常见、最基础的漏洞。我们在
比赛中遇到Web类型的题目时，可以优先尝试发现题目中是否含有上述Web漏洞，并完成题目的解
答。
及的Web漏洞需要读者具备一定的基础、经验，比“入门”层次涉及的漏洞更复杂，技术点更多
拓展”层次则更多地涉及Web类题目涉及的一些特性问题，如Python的安全问题等
下一章
三
去书架查看
书城
目录
设置
https:/weread.q.com/web/reader/77d32500721a485577d8eeekc20321001cc20ad4d76f5ae
Ir1
---
## Page 69
2021/1/16
从0到1：CTFer成长之路-Nu1L战队-微信读书
第2章Web进阶
通过第1章的学习，相信读者已经对Web类题目有了基本了解。但在实际比赛中，题自往往是由多个
台密码，后台存在上传漏洞，那么，如何绕过上传Webshell掌到flag便成为了关键。
本章将向读者介绍4种利用技巧较为繁多、比赛出现频率高的Web漏洞，分别是：SSRF漏洞、命令扶
行漏洞、XSS漏洞、文件上传漏洞。希望读者能在本章的学习过程中思考，如何在发现“入门”类漏
洞后，进一步找到“进阶”类漏洞。这样的联系、组合也有助于Web类型题目解题思路的形成。只有
明白这类漏洞的前因后果，才能对这些“进阶”类漏洞有更深入的理解。
下一章
https:/weread.qq.com/web/reader/77d32500721a485577d8eeekc51323901dc51ce410c121b
---
## Page 70
2021/1/16
从0到1：CTFer成长之路-Nu1L战队-微信读书
2.1SSRF漏洞
SSRF（ServerSideRequestForgery，服务端请求伪造）是一种攻击者通过构造数据进而伪造服务
器端发起请求的漏洞。因为请求是由内部发起的，所以一般情况下，SSRF漏洞攻击的目标往往是从外
网无法访问的内部系统。
SSRF漏洞形成的原因多是服务端提供了从外部服务获取数据的功能，但没有对目标地址、协议等重要
参数进行过滤和限制，从而导致攻击者可以自由构造参数，而发起预期外的请求。
2.1.1SSRF的原理解析
URL的结构如下：
authority组件又分为以下3部分（见图2-1-1）：
图2-1-1（图片来源：维基百科）
scheme由一串大小写不敏感的字符组成，表示获取资源所需要的协议。
authority中，userinfo遇到得比较少，这是一个可选项，一般HTTP使用匿名形式来获取数据，如果
需要进行身份验证，格式为usermame：password，以@结尾。
host表示在哪个服务器上获取资源，一般所见的是以域名形式呈现的，如baidu.com，也有以IPv4
IPv6地址形式呈现的。
por为服务器端口。各协议都有默认端口，如HTTP的为80、FTP的为21。使用默认端口时，可以将
端口省略
path为指向资源的路径，一般使用“/进行分层。
query为查询字符申，用户将用户输入数据传递给服务端，以“？”作为表示。例如，向服务端传递
用户名密码为“？username=admin&password=admin123”。
理解URL构造对如何进行绕过和如何利用会很有帮助。
以PHP为例，假设有如下请求远程图片并输出的服务。
t, 0R91,6, (v
如果URL参数为一个图片的地址，将直接打印该图片，见图2-1-2
https:/weread.qq.com/web/reader/77d32500721a485577d8eeekaab325601eaab3238922e53
---
## Page 71
2021/1/16
从0到1：CTFer成长之路-Nu1L战队-微信读书
Bai
du
百度
图2-1-2
但是因为获取图片地址的URL参数未做任何过滤，所以攻击者可以通过修改该地址或协议来发起SSRF
攻击。例如，将请求的URL修改为file///etc/passwd，将使用FILE协议读取/etc/passwd的文件内
容（最常见的一种攻击方式），见图2-1-3
roote383c5dbf99ff:- cur1 http://127.8.8.1/?url=f5Le:///etc/passad
root:x:l::rot:/root:/bin/bash
x:1:1:daeson:/usr/sbin:/usr/sbin/no1ogin
:2:2:bin:/bin:/usr/sbin/nol
logir
4:65534:sync:/bin:/bin/s