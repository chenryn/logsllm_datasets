# PLEAD: The Phantom of Routers

## Who We Are
- Charles & Zha0
- APT Research @ Team T5
- Specializing in Malware Analysis and Cyber Threat Tracking

## Agenda
1. Introduction
2. PLEAD Origin
3. PLEAD Malware Analysis
4. PLEAD Lateral Movement
5. GD Rat: Hiding Behind PLEAD?
6. The Phantom of Routers
7. Conclusion

## Introduction
- **PLEAD** is a Remote Access Trojan (RAT) used by an Advanced Persistent Threat (APT) group specifically targeting Taiwan.
  - Developed purely in shellcode.
  - Employs sophisticated techniques to obfuscate itself.
- The actors use multiple RATs simultaneously and have advanced tools for post-exploitation activities.
- Routers are leveraged to hide their footprints.

## PLEAD Origin
- The first public report about PLEAD was released by TrendMicro in 2014, where it was named PLEAD.
  - RTLO tricks were used to target Taiwanese government entities.
  - This remains the only public report on PLEAD to date.
- The oldest sample we have seen dates back to 2011.
  - RTLO tricks were also used in these early samples.
- We named it "PLEAD" based on its instructions.

## PLEAD Malware Analysis
### Process Injection
- **Process**: `iexplorer.exe`

### Config Block Decoder
- **Configuration Block**: Decodes configuration data for further execution.

### Traffic Pattern
- **Command Structure**:
  - The first character of the content data is the command (XOR with 0x00).
  - Followed immediately by the encoded parameter of the command (XOR with a 1-byte key).
- **Traffic Patterns**:
  - `GET|POST /<year>/<filename>.<ext> HTTP/<version>`
  - **Content Data**:
    - **Commands**: A, C, P, G, E, L, D
    - **XOR Blocks**:
      - GET: XOR block (0...0x0D)
      - POST: XOR block (0...0x0B)

### Command Example
- **List Directory Command**:
  - **LC:\**
  - **L**: `cmd_listdir`
  - **Function**: Lists the contents of `C:\` and returns the result.

### PLEAD Downloader
- **Shellcode Encoding**:
  - Encoded in two bytes (ASCII) to one byte (binary).
  - **URL**: `http://dcns.chickenkiller.com:80/dyfwmine.jpg`

### Network Traffic
- **Encryption**:
  - RC4(Shellcode RC4(Reflective DLL))
  - **RC4 Key**: Used for encryption and decryption.

### Shift and Fill MZ Header
- **Operation**:
  - Shift 20h bytes and fill the MZ header.

### PLEAD Loader
- **Shellcode Construction**:
  - Constructs shellcode in memory.
- **RC4 Key**: Used for encryption and decryption.

### EnCOMSecurity/EnableCOMS
- **Execution**:
  - `rundll32.exe "%APPDATA%\Microsoft\pdfupd.dll",EnCOMSecurity {7288fcda-571e-4eb3-8c2e-97c2fd10ce2e}`
- **Decoding Shellcode**: Decodes the shellcode for execution.
- **Injection**: Injects into `iexplore.exe`.
- **Random URI Generation**:
  - Uses a dictionary to generate random URIs.
  - **Example URIs**:
    - `http://mail.yahoo.com/`
    - `Console Tables`
    - `GET http://%s%s?%x=%dI%d`
    - `POST http://%s%s?%x=%dI%d`
    - `GET http://%s:%d%s?%x=%dI%d`
    - `POST http://%s:%d%s?%x=%dI%d`
    - `GET %s?%x=%dI%d`
    - `POST %s?%x=%dI%d`
    - `Content-Length: %d`
    - `Content-type: application/x-www-form-urlencoded`
    - `Cookie: %xid=%s`
    - `Cookie: %xid=%s`
    - `%d-%02d-%02d %02d:%02d`

### Network Traffic
- **Data Manipulation**:
  - Change order (Base64(Encode(RC4_Variable(data))))

### Diskless PLEAD
- **Hacking Tool**:
  - Utilizes the Hacking Team tool (CVE-2015-5119).
  - 32-bit payload â€“ PLEAD.
  - Exists only in memory, making detection difficult.

## Lateral Movement
- **Post-Compromise**:
  - Leverages Anti-Virus products to deploy trojans.
  - **Example**:
    - MD5: `59fd59c0a63ccef421490c9fac0*****`
    - Date: 2011-09-02

This document provides a comprehensive overview of the PLEAD malware, its origins, analysis, and the methods used by the APT group to conduct their operations.