experiment, are found in 15 categories of the Apple App
Store. As shown in Table 3, over 77.4% of the apps are in
the categories of Music, Utilities, LifeStyle, and Entertain-
ment. These apps are often built upon existing open source
projects (see Section 4.4). Surprisingly, we found that some
crowdturﬁng apps are of high ranks: six apps, including the
wiﬁ helper app (cn.qimai2014.polarbearwiﬁ), the recorder
utility app (com.amzhushou.app), the Temple Run style app
(com.funinteract.ballgame) and several word guessing game
apps reached top 20 of the leaderboard across different coun-
tries (e.g., China, Laos), based on the ranking data available
from App Annie [6]; also, we observed that at least 14 apps
were once ranked within the top 50, and 25 apps were in the
Figure 5: Overview of modern crowdturﬁng value chain,
which consists of hidden crowdturﬁng app development (-
) and mobile crowdturﬁng operations ( a - d ).
4 Understanding iOS-based Crowdturﬁng
Based on the detected crowdturﬁng apps, we further per-
formed a measurement study to understand the iOS-based
crowdturﬁng ecosystem. In this section, we ﬁrst present as
an example a real value chain of modern crowdturﬁng (Sec-
tion 4.1), and then describe the scope and magnitude of this
malicious activity as discovered in our research (Section 4.2),
before elaborating the two key components of the value chain:
crowdturﬁng app development and promotion (Section 4.3)
and mobile crowdturﬁng operations (Section 4.4).
4.1 Mobile-Crowdturﬁng Value Chain
Before coming to the details of our measurement ﬁndings,
ﬁrst let us summarize the mobile-crowdturﬁng value chain
discovered in our research.
A cybercriminal (i.e., intermediary), who owns a modern
crowdturﬁng platform chinazmob, intends to publish a mobile
client, which is downloadable from the App Store, to publish
crowdturﬁng tasks and coordinate with small-time workers.
Hence, the intermediary seeks underground app developers
to build an app with hidden crowdturﬁng UIs (, see Sec-
tion 4.3). The hidden crowdturﬁng UI will only be triggered
when app users visit the website ioswall.chinazmob.com.
Once done, the app Pleasant Music (id115****781), which
disguises as a music player, passes the vetting of the App Store
and is published (). Then, the intermediary promotes this
app on social networks () with links to the App Store and
the triggering website ioswall.chinazmob.com. Small-time
workers, who observe the promotion () and download the
Pleasant Music app (), will access the mobile crowdturﬁng
client after triggering the hidden UI () to execute crowdturf-
ing tasks. Meanwhile, in the underground business of mobile
crowdturﬁng, a dishonest mobile app owner of Anjuke who
plans to inﬂate the app’s installation volume reported by the
App Store, pays for a crowdturﬁng platform chinazmob to
USENIX Association
28th USENIX Security Symposium    773
Table 3: Top 5 app store categories of apps with hidden crowd-
turﬁng UI.
Benign UI examples
Category
Music
Utilities
LifeStyle
Entertainment 10 (10.8%) Web Browsers, Jeopardy-style Quiz
Games
Ringtones, Piano Pieces
Recorder, File Manager
Word Guess, Fruit Cutting
# apps
32 (34.4%)
15 (16.1%)
15 (16.1%)
5 (5.4%)
Story Teller
top 100 of their corresponding categories.
Impact of hidden crowdturﬁng apps. Furthermore, our
study shows that the apps with hidden crowdturﬁng UIs have
indeed successfully inﬁltrated App Store. Figure 6 illustrates
the Version distribution of the crowdturﬁng apps. Most of
them (73%) have only few updates, with a version number
in the range from 0 to 1.5. However, still a non-negligible
portion of apps (27% apps have Version ≥ 2.0) seem to be
capable of carrying their suspicious payloads even to their
higher versions. This is interesting since apps need to go
through Apple’s inspection for every new version submitted
to the App Store.
Then, we analyzed the trend of the inﬁltration performed
by the crowdturﬁng apps. Figure 7 shows the distribution
of the number of such apps on the Apple App store over
their release date. The trend-line based on the linear forecast
regression indicates that those apps are still on the rise and
require further attention. We observed that the newly-released
apps with hidden crowdturﬁng UI have increased by 150%
from Jan. 2015 to Jun. 2017.
4.3 App Development and Promotion
App development. Apparently, the development of crowd-
turﬁng apps is in strong demand on the underground market.
Our research shows that one could get an illicit app, with
desired hidden UIs, on the App Store for $450 [25]. Speciﬁ-
cally, a quick search on Google yields dozens of recruitment
posts for such app development; e.g., freelancer [24,25], Code
Mart [17], witmart [51], dongcoder [22], Code4App [16]. As
shown in the task description [25], the illicit app to be devel-
oped should be capable of displaying a benign UI during app
vetting, and switching to an illicit UI once it is published on
the App Store.
Also illicit app developers tend to minimize the effort to
develop the benign UIs for covering the crowdturﬁng ones.
One common approach they take is to hide the crowdturﬁng
UIs to the app built upon an open source project ( [31,35,43]).
In particular, we extracted strings from the benign VCs of the
detected crowdturﬁng apps, and then searched them in leading
code repositories (e.g., Github). Interestingly, we found that
the benign UIs of six crowdturﬁng apps come from two open
source projects: ESTMusicPlayer and LittleFrog-MusicPlayer.
Note that according to Apple’s guidelines [21] (4.3 and 4.2.6),
such template apps should have been rejected. However, we
observe that Apple seems to loosen its policy, which makes
developing such illicit apps easier. To verify the observation,
we designed a hidden crowdturﬁng app by utilizing one of
the open source projects, ESTMusicPlayer [35], as the benign
template. The app successfully got into the App Store in
two days (we removed the app immediately before any user
downloaded it).
UI hiding techniques: Triggers. We found that such illicit
apps utilize a spectrum of UI hiding techniques to evade app
vetting, which are described as follows:
• Logic bomb. Apparently, the adversary tends to trigger hid-
den crowdturﬁng UI when certain conditions are met (e.g., af-
ter app vetting). Some detected hidden crowdturﬁng apps con-
tain logic bombs; e.g., the app sets off the hidden crowdturﬁng
UI when a speciﬁed time (e.g., after “2017-01-18 00:00:00”),
location (e.g., “isCN”), or device information (e.g., connected
to cellular) conditions are met. For instance, the crowdturf-
ing UI in cn.music.s3b is only activated when the device is
connected to network and has its area/language code set to
"zh".
• C2 server. Like bots, apps with hidden crowdturﬁng UI
are also found to leverage command and control servers
(C2 servers) to trigger their hidden UIs. For instance,
com.catTestPlay.app retrieves a “status” code from its
web server http://[domain]/itunes_app/sound_dog to decide
whether to switch to its hidden UI.
• Scheme. Another interesting observation is that the app de-
velopers utilize extremely sophisticated triggering conditions,
which even require the user to take certain actions. An inter-
esting example is that a hidden crowdturﬁng UI can only be
invoked by a speciﬁc scheme. Those apps promoted them-
selves on the social networks or websites; when users down-
load those hidden crowdturﬁng apps from the App Store, the
promoted sites provide the users an activation link to trigger
the hidden crowdturﬁng UIs. More speciﬁcally, when the acti-
vation link is clicked, a scheme (e.g., babyforring://[params]),
that releases the illicit UI, is sent to the app.
• Others. Several other techniques are also used to differen-
tiate normal users’ devices and vetting environment. As an
example, we observe that a UI is hidden by the combination
of scheme and logic bomb: the app com.qianying.music will
ﬁrst determine whether a user has logged into her WeChat
app on the device, and then release its illicit UI only when
receiving a scheme from a speciﬁc website.
App Clones. We observed that illicit app owners resub-
mitting clones of removed or existing illicit apps by only
changing their bundle IDs through different Apple developer
IDs; e.g., after com.cloud.NHCore was removed from App
Store, it was quickly resubmitted as com.good.jingling. De-
velopers also submitted multiple repackaged apps contain-
ing the same hidden crowdturﬁng UI; e.g., two apps, music
774    28th USENIX Security Symposium
USENIX Association
Figure 6: Version distribution of apps with hidden crowd-
turﬁng UIs.
Figure 7: Release date distribution of apps with hidden
crowdturﬁng UIs.
com.cq.diaoqianyaner.pro.bookstore app was found to be pro-
moted on eight crowdturﬁng sites: qisw123.com, ydzapp.com,
eshiwan.com, etc. Most intriguing is the discovery that all
the apps actively promoted on those gateway websites have
been detected by Cruiser from the unknown set. Since those
websites record apps’ download volume, we were able to es-
timate the number of these apps’ users. Figure 8 illustrates
the cumulative distribution of the number of downloads per
crowdturﬁng app. As shown in the ﬁgures, around 50% of the
crowdturﬁng apps were downloaded more than 18K times,
with 32.4 million downloads in total.
Another interesting promotion channel is the referral bonus
policy, which is provided through the app: the app’s owner
pays workers (users) if they invite other workers to use this
app for crowdturﬁng. We found that 23% of the crowdturﬁng
apps are using such a channel to recruit workers.
4.4 Mobile Crowdturﬁng Operations
Crowdturﬁng tasks. Table 4 illustrates the top-6 most com-
mon illicit crowdturﬁng tasks found in the apps with hidden
crowdturﬁng UIs. As we can see here, most of them are mo-
bile based crowdturﬁng tasks. According to our ﬁndings, app
ranking manipulation is supported by a signiﬁcant portion
(88.2%) of crowdturﬁng apps, followed by fraud account reg-
istration, and fake review. Figure 9 illustrates the cumulative
distribution of the task categories per app. We observe that
about 62.5% apps only provide one kind of crowdturﬁng tasks,
among which 86.7% are designed for iOS app ranking ma-
nipulation. Surprisingly, when analyzing apps seeking crowd-
turﬁng for iOS app ranking manipulation, we observe several
popular and reputable apps. Examples include a calendar app,
which ranked Top 10 in the App Store category of Utilities
across 15 countries, and a restaurant review app, which ranked
Top 10 in Lifestyle category across 49 countries.
To measure the task volume of an app (i.e., number of tasks
× number of required workers per task), we crawled ﬁve apps’
task information and the number of required workers through
their crowdturﬁng UIs. Table 5 presents the average daily task
volume for each app. For instance, the app ranking manip-
Figure 8: Cumulative distribution of crowdturﬁng app down-
loads.
player com.yueyuemusic and eBook reader com.Qingyu app,
were found to integrate the identical crowdturﬁng platform
(i.e., rehulu.com). To mitigate the threat of such persistent
inﬁltration attempts, we provided a list of words that could
help to ﬁngerprint such apps upon Apple’s request, and mean-
while are actively collecting resubmitted/repackaged hidden
crowdturﬁng apps.
App Promotion and worker recruitment. To understand
how crowdturﬁng platform owners disseminate such apps and
recruit workers, we searched for the apps’ names on the search
engine and manually analyzed top-10 results to identify their
promotion websites. In this way, we gathered 50 websites
advertising 78 (83.9%) hidden crowdturﬁng apps. We found
that the owners of these hidden crowdturﬁng apps promote
their apps through multiple channels: advertising on the online
communities (e.g., BBS, tieba), social networks (e.g., youtube,
weibo), and crowdturﬁng app gateway sites (e.g., app522.com,
i8i3.com).
Of particular interest is the crowdturﬁng app gateway
sites, which refer the visitors to multiple hidden crowdturf-
ing apps. We identiﬁed 40 such gateway sites that promoted
63 (67.7%) hidden crowdturﬁng apps. For example, the
USENIX Association
28th USENIX Security Symposium    775
Table 5: Task volume and price of ﬁve apps with hidden
crowdturﬁng UIs
App
# tasks task volume
com.zhang.samusic
com.roidmi.mifm
com.miaolaierge.iosapp
com.applyape.yycuimian
com.jialiang.weka
24
29
12
15
8
42,064
29,000
7,500
16,715
10,000
Per task
price
0.14
0.12
0.13
0.11
0.14
Table 6: Top-3 campaigns with most apps with hidden crowd-
turﬁng UI.
Campaign # apps
uxiaowei
9
apptyk
rehulu
6
6
Remote server
uxiaowei.com
apptyk.com
laizhuan.com
diaoqianyaner.com.cn
rehulu.com
iTunes Preview website [34]. Then, we checked the common
strings referenced by different apps’ hidden crowdturﬁng UIs.
If the strings from two different apps have more than 90%
in common, we link them together. To capture the network
behavior, we triggered all these apps by signing onto their
platforms. If two apps’ hidden crowdturﬁng UIs connect to