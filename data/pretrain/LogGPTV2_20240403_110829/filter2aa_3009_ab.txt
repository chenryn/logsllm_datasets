# Code Example: `netSocketSend()` (Continued)

```c
Int16 bytes;

// Get parameters
gP->pop(vErrorPtr);
gP->pop(vFlags);
gP->pop(vLength);
gP->pop(vString);
gP->pop(vSocket);

// Dereference the error pointer
errP = gP->deref(vErrorPtr.iVal);

// Lock string before modification
buf = (char *) MemHandleLock(vString.sVal);

// Send data and capture the number of bytes sent
bytes = NetLibSend(AppNetRefnum, vSocket.iVal, buf, vLength.iVal, 
                   vFlags.iVal, 0, 0, gP->timeout, &(gP->error));

// Cleanup
MemHandleUnlock(vString.sVal);
gP->cleanup(vString);

// Return the number of bytes sent and set the error pointer
gP->retVal->iVal = bytes;
errP->iVal = gP->error;
```

---

## HTTP HEAD with AUSTIN Net Lib & Net.h

### `http_head.pc`

```c
library "AUSTIN_NetLib"
#include "Net.h"

main() {
    int err, port, socket, bytes;
    string result, host, toSend = "HEAD / HTTP/1.0\r\n\r\n";

    err = initNet();
    host = getsd("Connect to?", "192.168.199.129");
    port = getsd("Port?", "80");
    socket = tcpConnect(host, 80);

    if (socket >= 0) { 
        bytes = tcpWrite(socket, toSend);
        bytes = tcpRead(socket, &result, 200);
        puts("Received " + result);
        tcpClose(socket);
    }

    clearNet();
}
```

---

## Lessons Learned about Native Libraries

- Read all the PocketC documentation on native libraries (e.g., the file in the `docs/` folder).
- Ensure your development environment is correctly set up, including all necessary include and library files.
- Visit the PocketC forums and read discussions related to native libraries (some include code samples).
- Use AUSTIN Net Lib as a basis for your own libraries and re-use the makefile.

---

## Database Access

- **Pocket Toolbox** manipulates two database formats:
  - **Pilot-DB** (GPL)
  - **HanDBase** (Commercial)
- Databases are used extensively in AUSTIN for:
  - Preferences
  - Web vulnerabilities
  - Results

---

## Graphical User Interfaces

- Two ways to create GUIs on Palm OS:
  - Dynamically (programmatically)
  - Using resource files (e.g., with PilRC)
- Example from AUSTIN’s resource file:

```c
FORM ID 4000 AT (0 0 160 160)
NOFRAME
MENUID 8000
BEGIN
    TITLE "AUSTIN"
    BUTTON "Scan!" ID 4201 AT (121 2 AUTO 9) FONT 1
    LABEL "Options:" AUTOID AT (0 78) FONT 0
    CHECKBOX "TCP Scan" ID 4301 AT (48 62 AUTO AUTO) FONT 0
END
```

---

## Scheduled Scanning

- AUSTIN can perform scans at regular intervals.
- Users can specify:
  - Number of scans
  - Minutes between scans
  - Whether to scan or sleep first

---

## Tying it All Together

- **palmos.com**
- **RCP**
- **Icons**
- **Creator ID**
- **Source**
- **PilRC**
- **PDE**
- **PAR**
- **AUSTIN**

**Note:** AUSTIN Net Lib could be embedded inside AUSTIN but is kept separate to facilitate reuse.

---

## @stake SonyEricsson P800 Development

### What is the P800?

- **Cell-phone:**
  - GSM
  - GPRS
  - HSCD
  - Tri-band
- **PDA:**
  - Symbian OS-based
  - 12MB internal flash
  - Memory Stick Duo™ support
- **Other:**
  - Bluetooth support
  - Camera

### @stake NetScan

- **What is it?**
  - TCP/UDP port scanner
- **Why develop it?**
  - To gain experience with Symbian development
- **Features:**
  - TCP/UDP
  - Ports 1 to 65535
  - Timeout configuration
  - Basic error checking

### @stake MobilePenTester

- **What is it?**
  - The first generation of cellular Swiss army knives
- **Why develop it?**
  - To enhance cellular network assessments and empower clients to perform their own tests
- **Features:**
  - NetScan
  - PDACat
  - WAPScan port
  - HTTP vulnerability scanner

### @stake PDAZap

- **What is it?**
  - The first generation forensics tool for P800
- **Why develop it?**
  - To aid in device research and incident response
- **Features:**
  - Mirror device flash to Memory Stick Duo™
  - Mini file browser

### Where Can We Get Them?

- **@stake dot com:**
  - **NetScan / MobilePenTester:**
    - [http://www.atstake.com/research/tools/vulnerability_scanning/](http://www.atstake.com/research/tools/vulnerability_scanning/)
  - **PDAZap:**
    - [http://www.atstake.com/research/tools/forensic/](http://www.atstake.com/research/tools/forensic/)
- **Developer:**
  - Ollie Whitehouse (ollie at atstake.com)
- **Other Cool Tools:**
  - **RedFang (The Bluetooth Hunter):**
    - [http://www.atstake.com/research/tools/info_gathering/](http://www.atstake.com/research/tools/info_gathering/)

### Advert for CCC / Thanks

- **Ollie is speaking at CCC** between August 7th and 10th, 2003.
- **Topics:**
  - Cellular Network Security: The New Frontier
  - GSM/GPRS/UMTS Introduction
  - GSM/GPRS/UMTS Security
  - Pragmatic GSM/GPRS/UMTS Assessments
  - Other areas of assessment/research
- **Event:**
  - Chaos Communication Camp 2003, The International Hacker Open Air Gathering, near Berlin, Germany, [http://www.ccc.de/camp/](http://www.ccc.de/camp/)

### The Future

- **Trivia Question:**
  - Who makes this Palm OS watch?

### NASL Scanning

- **Idea:**
  - How to leverage the work of the Nessus team?
- **Issues:**
  - Nearly all tests are written in NASL.
  - Nessus/NASL is not designed to run on a Palm.
  - Complexity is higher.

### Comparing NASL and PocketC

- **Similarities:**
  - Basic C syntax
  - For and while loops
  - Control flow
  - Blocks
  - No memory management
  - Ints, chars, strings, and arrays cover most (all?) NASL variable types
- **Differences in NASL:**
  - Comments (`#` vs. `//`)
  - No need to declare variables
  - Named function parameters
  - Varargs
  - The `x` operator
  - Hostname lookups, ping, traceroute, etc.
  - SSL scanning (probably wait for Palm OS 5 device)
  - VulnXML support for URL scanning
  - Download updates to URL vulnerability database

### Let’s Review Those Goals

- **Overview of Palm OS as a hacking platform**
- **Walkthrough of a Palm OS-based vulnerability scanner:**
  - Architecture
  - Features and implementation
  - Lessons learned
- **Release a new tool for Palm OS**
- **Have Fun!**

---

**Thanks for listening! Any questions?**

You can download AUSTIN here: [http://atstake.com/research/tools/vulnerability_scanning/](http://atstake.com/research/tools/vulnerability_scanning/)

---

**P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L**
© 2 0 0 3     @ S T A K E ,     I N C.