Int16 bytes;
// get parameters
gP->pop(vErrorPtr);
gP->pop(vFlags);
gP->pop(vLength);
gP->pop(vString);
gP->pop(vSocket);
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Example: netSocketSend() (continued)
// dereference the error ptr
errP = gP->deref(vErrorPtr.iVal);
// lock string before modification
buf = (char *) MemHandleLock(vString.sVal);
// send data, capture number of bytes sent
bytes = NetLibSend(AppNetRefnum, vSocket.iVal, buf, vLength.iVal, 
vFlags.iVal, 0, 0, gP->timeout, &(gP->error));
// cleanup
MemHandleUnlock(vString.sVal);
gP->cleanup(vString);
// return number of bytes sent, set error ptr
gP->retVal->iVal = bytes;
errP->iVal = gP->error;
}
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
HTTP HEAD with AUSTIN Net Lib & Net.h
//http_head.pc
library "AUSTIN_NetLib"
#include "Net.h"
main() {
int err, port, socket, bytes;
string result, host, toSend = "HEAD / HTTP/1.0\r\n\r\n";
err = initNet();
host = getsd("Connect to?", "192.168.199.129");
port = getsd("Port?", "80");
socket = tcpConnect(host, 80);
if (socket >= 0) { 
bytes = tcpWrite(socket, toSend);
bytes = tcpRead(socket, &result, 200);
puts("Received " + result);
tcpClose(socket);
}
clearNet();
}
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
More Lessons Learned about Native Libraries
 Read all the PocketC documentation on native libs
(i.e. that one file in the docs/ folder :-)
 Make sure you have your dev environment set up 
correctly, i.e. all the include files and all the lib files
 Go to the PocketC forums and read the discussions 
that have mentioned native libs (some have code 
samples)
 Use AUSTIN Net Lib as a basis for your own libs (and 
re-use the makefile too!)
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Database Access
 Pocket Toolbox manipulates two DB formats
– Pilot-DB (GPL)
– HanDBase (Commercial)
 Databases are used throughout AUSTIN
– Preferences
– Web vulnerabilities
– Results
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Graphical User Interfaces
 Two ways to create GUIs on Palm OS
–
Dynamically (i.e. programmatically)
–
Resource files (i.e. using PilRC to create a resource file)
 Part of AUSTIN’s resource file
FORM ID 4000 AT (0 0 160 160)
NOFRAME
MENUID 8000
BEGIN
TITLE "AUSTIN"
BUTTON "Scan!" ID 4201 AT (121 2 AUTO 9) FONT 1
LABEL "Options:" AUTOID AT (0 78) FONT 0
CHECKBOX "TCP Scan" ID 4301 AT (48 62 AUTO AUTO) FONT 0
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Scheduled Scanning
 AUSTIN can scan at regular intervals
 Users can specify
– Number of scans
– Minutes between scans
– Whether to scan or sleep first
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Tying it all Together
palmos.com
RCP
Icons
Creator ID
Source
PilRC
PDE
PAR
AUSTIN
Note: AUSTIN Net Lib could also be embedded
inside AUSTIN but is kept separate to facilitate reuse
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
But wait! There’s more!!!
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
@stake SonyEricsson P800 Development
 What is the P800?
 @stake NetScan
 @stake MobilePenTester
 @stake PDAZap
 Where can we get them?
 Advert for CCC / Thanks
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
What is the P800?
 Cell-phone
–
GSM
–
GPRS
–
HSCD
–
Tri-band
 PDA
–
Symbian OS Based
–
12mb Internal Flash
–
Memory Stick Duo ™ Support
 Other
–
Bluetooth Support
–
Camera
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
@stake NetScan
 What is it?
–
TCP/UDP port scanner
 Why did you develop it?
–
Cutting our teeth on Symbian
development
 Features?
–
TCP/UDP
–
Ports 1 to 65535
–
Timeout configuration
–
Basic error checking
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
@stake MobilePenTester
 What is it?
–
The first generation
of cellular Swiss army
knives
 Why did you develop it?
–
To allow us to enhance our cellular 
network assessments and also 
empower our operator clients 
to DIT (Do It Themselves)
 Features?
–
NetScan
–
PDACat
–
WAPScan port
–
HTTP vulnerability scanner
Ollie’s Hand
(oh and the main
menu)
PDACat
in action
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
@stake PDAZap
 What is it?
–
The first generation
forensics tool for P800
 Why did you develop it?
–
Help us research the device,
help people involved in IR
(incident response)
 Features?
–
Mirror devices flash
to Memory Stick Duo ™
–
Mini file browser
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Where can we get them?
 @stake dot com
–
NetScan / MobilePenTester:
http://www.atstake.com/research/tools/vulnerability_scanning/
–
PDAZap
http://www.atstake.com/research/tools/forensic/
 Who developed them?
–
Ollie Whitehouse (ollie at atstake.com)
 Anything else cool?
–
RedFang (The Bluetooth Hunter)
http://www.atstake.com/research/tools/info_gathering/
P800
Ollie 
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Advert for CCC / Thanks
 So?
–
Ollie is speaking at CCC between 7th and 10th
of August 2003
 On what?
–
Cellular Network Security: The New Frontier
GSM/GPRS/UMTS Introduction
GSM/GPRS/UMTS Security
Pragmatic GSM/GPRS/UMTS Assessments
Other areas of assessment/research
 Other info?
–
Chaos Communication Camp 2003, 
The International Hacker Open Air Gathering 
7/8/9/10th August 2003 
near Berlin, Germany (Old Europe), 
http://www.ccc.de/camp/
Ollie’s current cutting 
edge development 
platform!
Thanks for listening, sorry I can’t be here!
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
The Future
Trivia Question:
Who makes this 
Palm OS watch?
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
NASL Scanning
 Idea
– How to leverage the work that the Nessus team has done?
 Issues
– (Nearly) All tests written in NASL
– Nessus/NASL not made to run on a Palm
– Complexity is higher
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Comparing NASL and PocketC
 Similarities
–
Basic C syntax
for and while loops
Control flow
Blocks
–
No memory management
–
Ints, chars, strings, and  arrays 
should cover most (all?) NASL 
var types
 Differences in NASL
–
Comments (# vs. //)
–
No need to declare variables
–
Named function parameters
–
Varargs
–
The “x” operator
–
The “>Hostname lookups, ping, 
traceroute, etc.)
 SSL scanning (probably wait for Palm OS 5 device)
 VulnXML support for URL scanning
 Download updates to URL vuln database
 Other suggestions?
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Let’s Review Those Goals
 Overview of Palm OS as a hacking platform
 Walkthrough of a Palm OS-based vulnerability scanner
–
Architecture 
–
Features & how they’re implemented
–
Lessons learned
 Release a new tool for Palm OS
 Have Fun!
P R O P R I E T A R Y     B U T     N O T     C O N F I D E N T I A L
© 2 0 0 3     @ S T A K E ,     I N C .
Thanks
for listening!
Any questions?
You can download AUSTIN here:
http://atstake.com/research/tools/vulnerability_scanning/