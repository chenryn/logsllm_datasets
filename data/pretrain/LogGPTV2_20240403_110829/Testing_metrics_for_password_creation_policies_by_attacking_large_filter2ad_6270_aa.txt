title:Testing metrics for password creation policies by attacking large
sets of revealed passwords
author:Matt Weir and
Sudhir Aggarwal and
Michael P. Collins and
Henry Stern
Testing Metrics for Password Creation Policies  
by Attacking Large Sets of Revealed Passwords
Matt Weir, Sudhir Aggarwal, Michael Collins, Henry Stern  
Florida State University, Redjack LLC, and Cisco IronPort Systems  
PI:EMAIL, PI:EMAIL, PI:EMAIL, PI:EMAIL  
[Operating  Systems]:  Security  and  Protection  –
ABSTRACT 
In this paper we attempt to determine the effectiveness of using 
entropy, as defined in NIST SP800-63, as a measurement of the 
security  provided  by  various  password  creation  policies.  This  is 
accomplished  by  modeling  the  success  rate  of  current  password 
cracking techniques against real user passwords. These data sets 
were  collected  from  several  different  websites,  the  largest  one 
containing over 32 million passwords. This focus on actual attack 
methodologies and real user passwords quite possibly makes this 
one of the largest studies on password security to date. In addition 
we  examine  what  these  results  mean  for  standard  password 
creation  policies,  such  as  minimum  password  length,  and 
character set requirements. 
Categories and Subject Descriptors 
D.4.6 
Authentication   
General Terms 
Security, Human Factors, Measurement 
Keywords 
Password Cracking, Cybercrime, Password Policies 
1. 
Secure  password  generation  is  complicated  by  the  tradeoff 
between  developing  passwords  which  are  both  challenging  to 
crack and usable. Truly random passwords are difficult for users 
to  memorize,  and  user-chosen  passwords  may  be  highly 
predictable.  Password policies attempt to mediate between these 
two  goals  by  forcing  users  to  incorporate  additional  complexity 
into  a  password,  such  as  by  mandating  the  user  include  an  odd 
character  or  use  passwords  of  some  minimal  length.  However, 
these  policy  mechanisms  are  hampered  by  an 
ill-defined 
understanding  of  their  actual  effectiveness  against  real  attack 
techniques,  and  by  circumvention  strategies  employed  by  the 
users.  For example, a policy mandating that a user include at least 
three  digits  in  a  password  will  often  result  in  the  user  simply 
appending  “123”  on  the  end  of  an  insecure  password.    A 
sufficiently sophisticated password cracker will be aware of these 
strategies  and  incorporate  mechanisms  for  breaking  them  into 
their tools.  
Introduction 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies  bear  this  notice  and  the  full  citation  on  the  first  page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
CCS’10, October 4–8, 2010, Chicago, Illinois, USA. 
Copyright 2010 ACM  978-1-4503-0244-9/10/10...$10.00. 
It  is  unlikely  any  other  document  has  been  as  influential  in 
shaping password creation and use policies as the NIST Electronic 
Authentication  Guideline  SP-800-63  [1].  The  findings  and 
recommendations published in it have proven the basis for many 
government and private industry password policies [2, 3]. Central 
to  this  document  is  the  notion  of  measuring  password  entropy. 
The  idea  of  information  entropy  was  first  formalized  by  Claude 
Shannon [4] as an approach to measure the amount of information 
that is unknown due to random variables. In a way, it attempts to 
determine  the  randomness  of  a  variable  based  upon  knowledge 
contained in the rest of the message. Most often this randomness 
or information is expressed using the following equation: 
(cid:1782)(cid:4666)(cid:1824)(cid:4667)(cid:3404)(cid:3398)∑ (cid:1790)(cid:4666)(cid:1824)(cid:1809)(cid:4667)
(cid:1786)(cid:1815)(cid:1807)(cid:2779)(cid:1790)(cid:4666)(cid:1824)(cid:1809)(cid:4667)                              1 
(cid:2196)(cid:2191)(cid:2880)(cid:2777)
then  be (cid:3398)∑ (cid:1790)(cid:4666).(cid:2782)(cid:4667)
(cid:1786)(cid:1815)(cid:1807)(cid:2779)(cid:1790)(cid:4666).(cid:2782)(cid:4667) which  is  equal  to  1  bit  of 
(cid:2778)(cid:2191)(cid:2880)(cid:2777)
For example, a fair coin flip would land as heads 50% of the time. 
The resulting entropy of modeling a single fair coin flips would 
entropy. Each successive flip of the coin would add an additional 
bit  of  entropy  as  the  result  is  a  summation  across  all  of  the 
variables xi. The context for Shannon’s research was to determine 
the amount of lossless compression that can be performed to store 
or transmit a message. In the previous case, the smallest message 
on  average  that  could  be  sent  describing  the  results  of  a  run  of 
completely fair coin flips would require at least one bit of data per 
coin toss. 
What  the  NIST  standard  did  was  attempt  to  use  the  concept  of 
Shannon’s  entropy  for  estimating  the  strength  of  password 
creation  policies  against  online  password  cracking  attacks.  As 
we’ll  show  in  the  following  sections,  this  unfortunately  is  not  a 
valid approach. While the Shannon entropy value would be useful 
to determine on average the minimum amount of space required to 
store or transmit a human generated password, it has no relation to 
the guessing entropy of a password. To put it another way, even 
with  an  accurate  Shannon  entropy  value,  it  would  not  tell  the 
defender anything about how vulnerable a system would be to an 
online password cracking attack. 
If the Shannon entropy value is not useful when determining the 
strength of a password creation policy, then the question remains, 
what  is  the  benefit  of  different  password  creation  rules?    Is  an 
eight  character  password  on  average  stronger  than  a  seven 
character password, and if so, by how much? Even in the NIST 
SP800-63  publication  when  attempting  to  gauge  how  much 
entropy is added to a system due to various creation policies, the 
authors  themselves  state,  “Unfortunately,  we  do  not  have  much 
data  on  the  passwords  users  choose  under  particular  rules.”  A 
related  paper  authored  by  a  Microsoft  researcher  [5],  which 
attempted  to  gauge  the  security  provided  by  strong  passwords, 
raised much the same point: “As far as we are aware, there is no 
data available on strength related attacks on passwords of web-
sites that maintain lockout policies.” 
162Our approach then in this paper is twofold. First, we demonstrate 
that the use of Shannon’s entropy as defined in NIST SP800-63 is 
not an effective metric for password security. Second we attempt 
to gauge the security provided by conventional password creation 
rules. We accomplish both of these tasks by performing standard 
password  cracking  attacks  against  multiple  sets  of  real  life 
passwords.  These  passwords,  which  will  be  described  in  more 
detail in Section 4, and Appendix 1 and 2, were all obtained from 
publicly  disclosed  hacking  attacks.  This  is  where  an  attacker 
collected  the  passwords,  either  through  a  phishing  attack,  or 
compromising  a  website,  and  for  whatever  reason  posted  the 
password lists online. These lists in some cases can be quite large, 
as  in  the  RockYou  set  [6]  which  contained  over  32  million 
passwords.  Admittedly  these  datasets  can  be  problematic,  since 
none of them represent corporate logins. A counter-example can 
easily be made that people on average choose stronger passwords 
for  more  sensitive  sites.  That  being  said,  these  datasets  still 
represent a significant number of user password creation strategies 
and  can  be  applied  to  evaluate  the  expected  success  rate  of 
different types of attacks. We hope this focus on real passwords 
and real attack methodologies can provide a better understanding 
of the effectiveness of different password creation policies.  
The  remainder  of  this  paper  is  structured  as  follows:  Section  2 
details  some  of  the  previous  work  done  in  this  area.  Section  3 
covers the NIST SP800-63 model of password entropy. Section 4 
illustrates why that the NIST notion of password entropy does not 
provide an accurate view of password security. Section 4 further 
goes  on  to  demonstrate  the  effectiveness  of  password  cracking 
strategies  against  traditional  password  creation  rules.  Finally 
Section 5 discusses password creation policies that might be more 
applicable when defending against online attacks. 
2. 
There have been several previous attempts to measure password 
security by analyzing real life passwords. One of the first papers 
to  take  this  approach  was  written  in  1978  by  R.  Morris  and  K. 
Thompson [19]. They found that in a group of around 3,000 users, 
1/3rd  of  the  passwords  were  vulnerable  to  a  dictionary  attack 
containing  250,000  words.  When  combined  with  a  limited  brute 
force attack, they estimated over 86% of the passwords could be 
cracked.  Since  then  several  other  studies  have  found  similar 
results. In [20], A. Narayanan, and V. Shmatikov ran experiments 
against 142 real user passwords and were able to break 67.6% of 
them  using  a  Markov  based  brute  force  attack.  In  [21],  Yan, 
Blackwell,  and  Anderson  found  when  testing  a  group  of  300 
student  passwords,  32%  of  the  control  group  was  cracked  via  a 
limited  dictionary  based  attack.  In  [22],  Wu  collected  over  25 
thousand  Kerberos  v4  tickets  and  attempted  to  crack  the 
corresponding  user  passwords.  In  that  experiment,  only  8.1%  of 
the  passwords  were  cracked  over  a  two  week  period  due  to  the 
computational  complexity  of  making  a  password  guess.  Perhaps 
the  largest  previous  study  on  password  security  was  done  by 
Stone-Gross et al when his team temporarily took over the torpig 
botnet  [23].  During  the  ten  day  period  they  had  control  of  the 
botnet, 
thousand  unique 
username/password  pairs  from  52  thousand  infected  computers. 
To  test  the  strength  of  the  plaintext  passwords  collected,  they 
hashed  173  thousand  unique  passwords  with  the  MD5  hashing 
algorithm  and  then  proceeded  to  use  the  popular  password 
cracking tool John the Ripper to try and crack the hashes using an 
offline attack. During the course of a 75 minute cracking session, 
the  team  managed  to  break  over  40%  of  the  passwords.  What’s 
their  group  collected  over  297 
Previous Work 
more,  they  found  that  28%  of  users  re-used  the  same  password 
across  multiple  sites.  This  closely  matches  an  earlier  study  by 
Sophos  [24],  where  33%  of  users  polled  admitted  to  using  the 
same password  for all of their internet logins. If this holds true, 
that  means  passwords  gathered  from  low  value  targets,  such  as 
social  networking  websites,  might  successfully  be  used  by  an 
attacker to target higher value targets such as webmail and bank 
accounts.  It  also  means  that  the  results  of  studying  these  “low 
value” passwords may provide us insight into the effectiveness of 
password creation policies for higher value sites. 
That being said, none of the above studies focused specifically on 
the security that password creation policies actually provide, such 
as the effect password length has on password strength. There has 
been  some  research  into  how  effective  the  notion  of  Shannon 
entropy is for measuring password strength, (and by extension the 
recommendations put forward by NIST 800-63). The most notable 
papers  covering  the  subject  have  been  [7,  8],  but  those  studies 
focused exclusively on the theoretical underpinnings of trying to 
convert the Shannon entropy to the Guessing entropy of a system, 
and did not verify their findings using real user passwords. In the 
pessimistically titled paper, “Password Exhaustion: Predicting the 
End  of  Password  Usefulness”  [25],  Clair  et  al,  attempted  to 
evaluate  the  search  spaces  produced  by  different  password 
creation policies along with their resistance to attack. They found 
that  certain  password  policies  might  actually  weaken  systems 
against brute force attacks due to the reduction in key space. They 
then  collected  3,500  student  passwords  and  attempted  to  crack 
them using a 20 node cluster of computers. This resulted in their 
team  breaking  34%  of  the  passwords  in  five  days,  with  a  vast 
majority  of  these  passwords,  (almost  90%  of  the  cracked 
passwords),  falling  to  brute  force  attacks.  Unfortunately,  their 
tests did not attempt to measure security provided, (or reduced), 
by the application of different password creation policies beyond 
their resistance to brute force attacks.  Therefore, we feel that the 
results and strategies detailed in this paper are fairly novel as we 
attempt  to  gauge  the  security  of  password  creation  policies  by 
examining  real user  passwords  and  their  resistance to  dictionary 
based attacks. 
One  other  paper  that  bears  mentioning  is  a  survey  of  password 
creation and storage policies among several popular websites by J. 
Bonneau  and  S.  Preibusch  [26].  There  are  too  many  interesting 
findings from that paper to list here, and it is highly recommended 
reading  to  help  put  the  results  detailed  later  in  this  paper  into 
context  with  how  password  policies  are  currently  implemented. 
For  example,  a  vast  majority  of  the  websites  Bonneau  and 
Preibusch examined, including sites such as eBay, Amazon.com, 
and  Wordpress,  did  not  support  rate  limiting  the  number  of 
guesses allowed to an attacker. 
3. 
Password Entropy per NIST SP800-63 
As  mentioned  previously, 
recommendations 
provided  in  the  NIST  document  are  based  on  the  idea  of 
information entropy. Building on the notion of entropy detailed in 
Equation #1, it can further be expanded by noting that the entropy 
of several random variables can be modeled as: 
the  password 
(cid:1782)(cid:4666)(cid:1824),(cid:1825)(cid:4667)(cid:3409)(cid:1782)(cid:4666)(cid:1824)(cid:4667)(cid:3397) (cid:1782)(cid:4666)(cid:1825)(cid:4667) 
                          2 
In  the  NIST  document,  they  attempt  to  define  these  random 
variables  by  specifying  how they are created  through  the  use  of 
common password creation policies. These random variables can 
be  viewed  as  representing  an  unknown  value  that  an  attacker 
163would have to guess when attempting to crack a password. Each 
variable  is  assigned  an  entropy  score,  and  the  sum  of  all  the 
entropy scores is added up to create a final entropy total for the 
entire  system  using  Equation  2.  The  entropy  score  for  each 
variable is assigned using the following criteria which is quoted 
directly from the original NIST paper: 
1.  The entropy of the first character is taken to be 4 bits; 
2.  The  entropy  of  the  next  7  characters  are  2  bits  per 
character;  this  is  roughly  consistent  with  Shannon’s 
estimate that “when statistical effects extending over not 
more than 8 letters are considered the entropy is roughly 
2.3 bits per character;” 
3.  For the 9th through the 20th character the entropy is taken 
to be 1.5 bits per character; 
4.  For characters 21 and above the entropy is taken to be 1 
bit per character; 
5.  A  “bonus”  of  6  bits  of  entropy  is  assigned  for  a 
composition  rule  that  requires  both  upper  case  and  non-