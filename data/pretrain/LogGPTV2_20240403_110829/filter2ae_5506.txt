> Author： vspiders  
>  Blog： 
**前言**  
还是要从bugku上的一道实战题目说起，其实事后才发现，自己在错误的道路上越走越远，故有此文。
* * *
**0x01 官方思路**  
题目地址：  
一波目录扫描，发现`1.zip`文件，果断下载解压，是网站源码。其中有包含`flag`的文件名`flag-asd.txt`,访问之即得答案。
**0x02 漏洞搜集**  
事实上大多数人都会从这里开始，首先搜集科威盒子相关漏洞信息，主要有以下两个：
  1. [SQL注入漏洞](http://0day5.com/archives/139/)
  2. [任意文件下载漏洞][4]  
通过注入漏洞可以顺利得到后台账号密码，这里就不多说了，`admin/a1234567`直接登录后台。
**0x03 审计之旅**
因为代码就功能层逻辑结构比较简单，先是通篇扫了一下，主要发现几个鸡肋漏洞。
  1. 任意tpl文件上传覆盖  
漏洞发生在`admin/skin_edit.php`页面。
    assign("msg","修改模板成功！");
            $templates->display( templates ( 'msg.tpl' ) );
        }
        ?>
`type、name`和`aa`变量均可控，因此可以修改任意模版文件。  
这里存在一个小tips，由于路径可控，可以利用windows下的命名规则绕过上传，比如上传`aa=1.php:`,windows下会生成`1.php`但是却无法写入文件，但是P牛写过在IIS下，可以利用`等敏感字符，就js加载php也被过滤掉了，这里尝试后未解。
**0x03 峰回路转**  
在审计的过程中，`include/smarty/Smarty_Compiler.class.php`编译文件中的模版tags处理函数引起了我的兴趣，主要代码如下：
    function _compile_tag($template_tag)
        {
         ....
            switch ($tag_command) {
                case 'include':
                    return $this->_compile_include_tag($tag_args);
                case 'include_php':
                    return $this->_compile_include_php_tag($tag_args);
         ...
主要意思是如果模板文件中出现`include_php`标签，则会调用文件包含函数。后面就不做过多分析，就是将任意文件进行`include()`包含，从而引发文件包含漏洞。
**0x04 漏洞利用**  
首先上传一个`test.tpl`文件，注意文件路径，这里以`/admin/`为例，内容为php执行代码：
再修改`/admin/templates/index.tpl`文件为,构造`include_php`标签为：
访问`/admin/index.php`，即加载恶意执行代码  
**0x05 后记**  
也没有必要提供什么修复方案了，反正科威好像早就关门了。主要是学习下审计，锻炼下能力吧。
[4]: