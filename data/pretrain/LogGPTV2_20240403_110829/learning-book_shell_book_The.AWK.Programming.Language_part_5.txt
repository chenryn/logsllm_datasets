matches a C at the beginning of a string
Cs
matches a C at the end of a string
*Cs
matches the string consisting of the single character C
~.s
*...$
matches any string containing exactly one character
matches any string containing exactly three characters
matches a period at the end of a string
matches any three consecutive characters
A regular expression consisting of a group of characters enclosed in brackets
is called a character class; it matches any one of the enclosed characters.For
example, [AEIOu] matches any of the characters A, E, I, O, or U.
Ranges of characters can be abbreviated in a character class by using a
hyphen. The character immediately to the left of the hyphen defines the begin-
ning of the range; the character immediately to the right defines the end. Thus,
[0-9] matches any digit, and [a-zA-z][0-9] matches a letter followed by a
denotes itself, so the character classes [+-] and [-+] match either a + or a =.
The character class [A-Za-z-]+ matches words that include hyphens.
A complemented character class is one in which the first character after the
[ is a ^. Such a class matches any character nor in the group following the
caret. Thus, [^0-9] matches any character except a digit; [^a-zA-z]
matches any character except an upper or lower-case letter.
^[ABC】
matches an A, B or C at the beginning of a string
^[*ABC]
matches any character at the beginning of a string, except A, B or C
^[*a-z]$ matches any single-character string, except a lower-case letter
[^ABC]
matches any character other than an A, B or C
Inside a character class, all characters have their literal meaning, except for
the quoting character \,^at the beginning.and -between two characters.
Thus, [. ] matches a period and ^[^^] matches any character except a caret
at the beginning of a string.
Parentheses are used in regular expressions to specify how components are
concatenation. The alternation operator 1 is used to specify alternatives: if 1
and r2 are regular expressions, then r, ir2 matches any string matched by ↓
or by r2-
There is no explicit concatenation operator. If r; and r are regular expres-
sions, then ()(r)（with no blank between （r)and (r)) matches any
string of the form xy where  matches x and r matches y. The parentheses
around r or r2 can be omitted, if the contained regular expression does not
contain the alternation operator. The regular expression
(AsianiEuropeaniNorth Anerican) (malelfemale) (blackiblue)bird
matches twelve strings ranging from
---
## Page 40
THE AWK LANGUAGE
CHAPTER 2
Asian sale blackbird
to
North American female bluebird
The symbols , +, and ? are unary operators used to specify repetitions in
consisting of zero or more consecutive substrings matched by r, (r)+ matches
 sq  s    p s e o s  s s 2()
expression, then the parentheses can be omitted.
B+
matches the null string or B or BB, and so on
ABC
AB+C
matches AC or ABC or ABBC, and so on
also matches ABC or ABBC or ABBBC, and so on
matches ABC or ABBC or ABBBC, and so on
ABB+C
AB?C
[A-2]+
matches AC or ABC
(AB)+C
matches ABC, ABABC, ABABABC, and so on 
In regular cxpressions, the alternation operator 1 has the lowest precedence,
then concatenation, and finally the repetition operators *, +, and ?. As in arith-
metic expressions, operators of higher precedence are done before lower ones.
These conventions often allow parentheses to be omitted: abicd is the same as
(ab) i (cd), and ~abicd+e$ is the same as (^ab) I (c(d+)e$).
To finish our discussion of regular expressionshere are some examples of
useful string-matching patterns containing regular expressions with unary and
binary operators, along with a description of the kinds of input lines they match.
Recall that a string-matching pattern /r/ matches the current input line if the
line contains at least one substring matched by r.
/[0-9]+$/
matches any input line that consists of only digits
/[0-9][0-9][0-9]s/
/(\+1-)?[0-9]+\.?[0-9]s/
exactly three digits
a decimal number with an optional sign and optional fraction
/[+-]?[0-9]+[.]?[0-9]s/
also a decimal number with an optional sign and optional fraction
/"[+-]?（[0-9]+[.]?[0-9]1[.][0-9]+}（[eE][+-]?[0-9]+)7s/
a floating point number with optional sign and optional exponent
/[A-Za-z][A-Za-z0-9]+s/
a letter followed by any letters or digits (e.g., awk variable name)
/[A-Za-z]s1[A-Za-z](0-9]s/
/[A-Za-z][0-9]?s/
a letter or a letter followed by a digit (e.g., variable name in Basic)
also a letter or a letter followed by a digit
Since + and . are metacharacters, they have to be preceded by backslashes in
the third example to match literal occurrences.These backslashes are not
---
## Page 41
SECTION 2.1
PATTERNS
IE
needed within character classes, so the fourth example shows an alternate way
to describe the same numbers.
Any regular expression enclosed in slashes can be used as the right-hand
operand of a matching operator: the program
$21~/~[0-9]+s/
prints all lines in which the second field is not a string of digits.
Within regular expressions and strings, awk uses certain character sequences,
notation. For example, \n stands for a newline character, which cannot other-
wise appear in a string or regular expression; Vb stands for backspace; \t
stands for tab; \o07 represents the ASCl1 bell character; and √/ represents a
slash. Escape sequences have special meaning only within an awk program;
they are just characters in data. The complete list of escape sequences is shown
in Table 2-2.
TABLE 2-2. ESCAPE SEQUENCES
SEQUENCE
MEANING
b
backspace
\f
formfeed
n
newline (line feed)
\r
carriage return
\t
tab
ddd
octal value ddd, where ddd is 1 to 3 digits between 0 and 7
any other character c literally (e.g., \\ for backslash, \ for ")
Table 2-3 summarizes regular expressions and the strings they match. The
operators are listed in order of increasing precedence.
Compound Patterns
A compound pattern is an expression that combines other patterns, using
parentheses and the logical operators 11 (OR), && (AND), and 1 (NOT). A
true. The following program uses the AND operator to select all lines in which
compound pattern matches the current input line if the expression evaluates to
the fourth field is Asia and the third field exceeds 500:
005 >s
concatenation (no explicit operator)
arithmetic operators +-·/%^
unary + and -
increment and decrement operators ++ and -- (prefix and postfix)
parentheses for grouping
operators are =, and >. The regular
expression matching operators are - (is matched by) and 1- (is not matched
by).The value of a comparison expression is 1 if it is true and 0 otherwise.
Similarly, the value of a matching expression is 1 if true, O if false, so
$4 - /Asia/
is 1 if the fourth field of the current line contains Asia as a substring, or O if it
does not.
Logical Operators. The logical operators && (AND), 1 1 (OR), and 1 (NOT)
are used to create logical expressions by combining other expressions. A logical
expression has the value 1 if it is true and 0 if false. In the evaluation of a logi-
other values are treated as false.The operands of expressions separated by &&
cal operator, an operand with a nonzero or nonnull value is treated as true;
or 11 are evaluated from left to right, and evaluation ceases as soon as the
value of the complete expression can be determined. This means that in
expr;&5 expr
expr  is not evaluated if expr is false, while in
expr,11expr4
expr is not evaluated if expry is true.
Newlines may be inserted after the && and 1 1 operators.
Conditional Expressions. A conditional expression has the form