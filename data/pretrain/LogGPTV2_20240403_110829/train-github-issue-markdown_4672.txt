## Environment info
  * OS: Linux 4.13.0-31-generic #34~16.04.1-Ubuntu
  * PyTorch version: 0.3
  * How you installed PyTorch (conda, pip, source): pip
  * Python version: 3.5
  * CUDA/cuDNN version: 8/7
  * GPU models and configuration: 1080Ti
## Issue
Snippet:
    print("============================================================")
    if DEBUG_LOG1 : print("type(decoder_output) = {}".format(type(decoder_output)))
    if DEBUG_LOG1 : print("decoder_output.size() = {}".format(decoder_output.size()))
    print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
    if DEBUG_LOG1 : print("decoder_output.data.topk(1) = ".format(decoder_output.data.topk(1)))
    if DEBUG_LOG1 : print("decoder_output.data.topk(1) = ".format(decoder_output.data.topk(1)))
    if DEBUG_LOG1 : print("decoder_output.data.topk(1) = ".format(decoder_output.data.topk(1)))
    if DEBUG_LOG1 : print("decoder_output.data.topk(1) = ".format(decoder_output.data.topk(1)))
    print("////////////////////////////////////////////////////////////")
    topv, topi = decoder_output.data.topk(1)
    if DEBUG_LOG1 : print("topi,topv = {}{}".format(topi,topv))
    topv, topi = decoder_output.data.topk(1)
    if DEBUG_LOG1 : print("topi,topv = {}{}".format(topi,topv))
    topv, topi = decoder_output.data.topk(1)
    if DEBUG_LOG1 : print("topi,topv = {}{}".format(topi,topv))
    topv, topi = decoder_output.data.topk(1)
    if DEBUG_LOG1 : print("topi,topv = {}{}".format(topi,topv))
    print("------------------------------------------------------------")
Out:
    ============================================================
    type(decoder_output) = 
    decoder_output.size() = torch.Size([1, 29419])
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    decoder_output.data.topk(1) = (
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    , 
     0
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    )
    decoder_output.data.topk(1) = (
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    , 
     0
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    )
    decoder_output.data.topk(1) = (
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    , 
     0
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    )
    decoder_output.data.topk(1) = (
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    , 
     0
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    )
    ////////////////////////////////////////////////////////////
    topi,topv = 
     0
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    topi,topv = 
     9.2234e+18
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    topi,topv = 
     9.2234e+18
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    topi,topv = 
     2.1475e+09
    [torch.cuda.LongTensor of size 1x1 (GPU 0)]
    nan
    [torch.cuda.FloatTensor of size 1x1 (GPU 0)]
    ------------------------------------------------------------