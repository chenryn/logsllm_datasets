不过了。可以用它来输入你在面对数据库提示时所做的各种选择。下面的例子并不是数据库
中的一个练习，而是为了用来介绍如何使用
3 S I G Q U I T 从键盘退出
9 S I G K I L L 无条件终止
11 S I G S E G V 段（内存）冲突
1 5 S I G T E R M 软件终止（缺省杀进程信号）
还有信号0，我们前面在创建. l o g o u t文件时已经遇到过。该信号为“退出 s h e l l”信号。为
了发出信号0，只要从命令行键入e x i t，或在一个进程或命令行中使用即可。
发送信号可以使用如下的格式：
kill [-signal no:| signal name] process ID
使用k i l l命令时不带任何信号或名字意味着使用缺省的信号 1 5。
可以使用如下的命令列出所有的信号：
加入java编程群：524621833
292
第五部分 高级s h e l l编程技巧
下载
26.2.1 杀死一个进程
发送信号1将使一个进程重新读入配置文件。例如，你在运行域名服务（ D N S）守护进程
n a m e d，现在你对域名数据库文件做了某些修改，这时不需要杀死该守护进程再重新启动，只
需使用kill -1命令向其发送信号1。N a m e d进程将重新读入它的配置文件。
下面的例子向系统中一个名为m o n _ w e b的进程发送信号9（无条件终止）来杀死它。首先
使用p s命令得到相应的进程号。
如果系统不支持ps -ef命令，那么可以使用ps xa。为了杀死该进程，我可以使用下面的两
种方法之一：
kill -9 157
或
kill -s SIGKILL 157
在有些系统中，不必使用- s，例如：kill SIGKILL 157。
下面的脚本将根据进程名来杀死一个进程，拟被杀死的进程名作为该脚本的一个参数。
在执行相应的命令之前，将会首先检查是否存在这样的进程。在这里使用 g r e p命令来匹配相
应的进程名。如果匹配成功，则向用户提示进程已经找到，并询问用户是否杀死该进程。最
后使用kill -9命令杀死相应的进程。
下面就是该脚本。
加入java编程群：524621833
293
第2 6章 shell 工 具
下载
运行该脚本将会产生如下的输出：
在使用该脚本时，要确信存在相应的进程：
26.2.2 检测信号
有些信号可以被应用程序或脚本捕获，并依据该信号采取相应的行动。另外一些信号不
能被捕获。例如，如果一个命令收到了信号9，就无法再捕捉其他信号。
在编写s h e l l脚本时，只需关心信号1、2、3和1 5。当脚本捕捉到一个信号后，它可能会采
取下面三种操作之一：
1) 不采取任何行动，由系统来进行处理。
2) 捕获该信号，但忽略它。
加入java编程群：524621833
294
第五部分 高级s h e l l编程技巧
下载
3) 捕获该信号，并采取相应的行动。
大多数的脚本都使用第一种处理方法，这也是到目前为止本书中所有脚本所采取的处理
方法。
如果想要采取另外两种处理方法，必须使用t r a p命令。
26.3 trap
t r a p可以使你在脚本中捕捉信号。该命令的一般形式为：
trap name signal(s)
其中，n a m e是捕捉到信号以后所采取的一系列操作。实际生活中， n a m e一般是一个专门
用来处理所捕捉信号的函数。N a m e需要用双引号（“ ”）引起来。S i g n a l就是待捕捉的信号。
脚本在捕捉到一个信号以后，通常会采取某些行动。最常见的行动包括：
1) 清除临时文件。
2) 忽略该信号。
3) 询问用户是否终止该脚本的运行。
下表列出了一些最常见的t r a p命令用法：
trap "" 2 3 忽略信号2和信号3，用户不能终止该脚本
trap"commands" 2 3 如果捕捉到信号2或3，就执行相应的c o m m a n d s命令
trap 2 3 复位信号2和3，用户可以终止该脚本
也可以使用单引号（‘’）来代替双引号（“”）；其结果是一样的。
26.3.1 捕获信号并采取相应的行动
下面的例子一经运行就开始计数直至用户按（信号2）。这时该脚本将会显示出当
前的循环数字，然后退出。
在本例中t r a p命令的格式为：
trap "do_something" signal no:(s)
下面就是该脚本：
现在让我们来仔细分析一下该脚本。
加入java编程群：524621833
295
第2 6章 shell 工 具
下载
trap "my_exit" 2
在本例中，由于设置了t r a p命令，所以在捕捉到信号2以后，双引号内的m y _ e x i t函数将被
执行。
函数m y _ e x i t将在脚本捕捉到信号2后被调用；用户将会看到$ L O O P变量的内容，即用户
按时的计数值。在实际中，通常捕捉到信号 2后所调用的函数是用来完成清除临时文
件等任务的。
下面是该脚本的运行结果：
26.3.2 捕获信号并采取行动的另一个例子
下面就是一个捕获信号后清除临时文件的例子。
下面的脚本在运行时不断使用 d f和p s命令向临时文件H O L D 1 . $ $和H O L D 2 . $ $中写入相应
的信息。你应该还记得$ $表示当前的进程号。当用户按 时，这些临时文件将被清
除。
加入java编程群：524621833
296
第五部分 高级s h e l l编程技巧
下载
上面的脚本在运行时会产生如下的结果：
当收到信号2或3时，尽管一般情况下这都不是误操作，但是为了安全起见，不妨给用户
一个选择的机会，这样用户在不小心按下后，仍然可以撤消刚才的动作。
在下面的例子中，在脚本捕捉到信号2后将会向用户提供一个选择，询问用户是否真的要