Attack Times. Our last table compares the times to
crack one password in GnuPG, TrueCrypt, and various
HKDF use cases, in function of the password strentgh
(40 and 60 bits of entropy, or ∼ 9 and ∼ 13 random low-
ercase letters, respectively), against a spectrum of oppo-
nents: cf. Table 4.
Even with “instantaneous” user delays (∼ 1 s), the se-
curity gains are substantial and may sufﬁce to turn a suc-
cessful attack into a successful defense. Larger delays
(> 1 min.–1 hr.) are surprisingly secure with the inher-
ent beneﬁts of HKDFs; they are justiﬁed for last-resort
disaster-recovery backups, which must remain secure,
and their passwords not forgotten, over long cryptope-
riods.
References
[1] AESpipe - AES encrypting or decrypting pipe.
http://loop-aes.sourceforge.net/.
[2] BACK, A.
1997.
hashcash/.
Hashcash.
report,
http://www.cypherspace.org/
Technical
[3] BARKAN, E., BIHAM, E., AND SHAMIR, A. Rig-
orous bounds on cryptanalytic time/memory trade-
offs. In Advances in Cryptology—CRYPTO 2006.
[4] BELLARE, M., POINTCHEVAL, D., AND RO-
Authenticated key exchange se-
GAWAY, P.
cure against dictionary attacks.
Cryptology—EUROCRYPT 2000.
In Advances in
[5] BELLOVIN, S. M., AND MERRITT, M. Encrypted
key exchange: Password-based protocols secure
against dictionary attacks. In IEEE Symposium on
Security and Privacy—SP 1992.
[6] BROWN, D. R. L. Prompted user retrieval of se-
cret entropy: The passmaze protocol. Cryptology
ePrint Archive, Report 2005/434, 2005. http:
//eprint.iacr.org/.
[7] CALLAS, J., DONNERHACKE, L., FINNEY, H.,
AND THAYER, R. OpenPGP message format. RFC
2440, November 1998. http://www.ietf.
org/rfc/rfc2440.txt.
[8] CANETTI, R., HALEVI, S., KATZ, J., LINDELL,
Y., AND MACKENZIE, P. Universally compos-
able password-based key exchange.
In Advances
in Cryptology—EUROCRYPT 2005.
dictionary
[9] CANETTI, R., HALEVI, S., AND STEINER, M.
password-
Mitigating
protected local
in
Cryptology—CRYPTO 2006.
Full version:
Cryptology ePrint Archive, Report 2006/276.
http://eprint.iacr.org/.
In Advances
storage.
attacks
on
[10] CryptoCard.
com/.
http://www.cryptocard.
[11] DEAN, D., AND STUBBLEFIELD, A.
client puzzles to protect TLS.
Security
http://www.usenix.org/events/
sec01/full papers/dean/dean.pdf.
Symposium—SECURITY
Using
In USENIX
2001.
[12] DigiPass. http://www.vasco.com/.
[13] DWORK, C., GOLDBERG, A., AND NAOR, M. On
memory-bound functions for ﬁghting spam. In Ad-
vances in Cryptology—CRYPTO 2003.
[14] DWORK, C., AND NAOR, M. Pricing via pro-
In Advances in
cessing or combating junk mail.
Cryptology—CRYPTO 1992.
[15] GnuPG - the GNU privacy guard. http://www.
gnupg.org/.
[16] HALDERMAN, J. A., WATERS, B., AND FELTEN,
E. W. A convenient method for securely managing
passwords. In Proceedings of WWW 2005.
[17] HALEVI, S., AND KRAWCZYK, H. Public-key
In ACM
cryptography and password protocols.
CCS 1998.
132
16th USENIX Security Symposium
USENIX Association
[18] HELLMAN, M. E. A cryptanalytic time-memory
IEEE Trans. Information Theory 26, 4
trade-off.
(1980), 401–6.
[31] PERLINE, R. Zipf’s law, the central limit theorem,
and the random division of the unit interval. Physi-
cal Review E 54, 1 (1996), 220–3.
[19] IEEE P1363.2: Password-based public-key cryp-
http://grouper.ieee.org/
tography.
groups/1363/.
[20] JABLON, D. Strong password-only authenticated
key exchange. Computer Communication Review
(1996).
[21] JUELS, A., AND BRAINARD, J. Client puzzles: A
cryptographic defense against connection depletion
attacks. In Proceedings of NDSS 1999.
[22] KALISKI, B. PKCS #5: Password-based cryp-
tography speciﬁcation, version 2.0. RFC 2898,
September 2000.
http://www.ietf.org/
rfc/rfc2898.txt.
[23] KAO, M.-Y., REIF, J. H., AND TATE, S. R.
Searching in an unknown environment: An optimal
randomized algorithm for the cow-path problem. In
ACM-SIAM Symposium on Discrete Algorithms—
SODA 1993.
[24] KRAWCZYK, H., BELLARE, M., AND CANETTI,
R. HMAC: Keyed-hashing for message authentica-
tion. RFC 2104, February 1997. http://www.
ietf.org/rfc/rfc2104.txt.
[25] LAHERRERE, J., AND SORNETTE, D. Stretched
exponential distributions in nature and economy:
’fat tails’ with characteristic scales.
European
Physical Journals B2 (1998), 525–39. http://
xxx.lanl.gov/abs/cond-mat/9801293.
[26] LENSTRA, A. K., AND VERHEUL, E. R. Selecting
cryptographic key sizes. Journal of Cryptology 14,
4 (2001), 255–93.
[27] MACKENZIE, P., SHRIMPTON, T., AND JAKOB-
SSON, M. Threshold password-authenticated key
exchange. Journal of Cryptology 19, 1 (2006), 27–
66.
[28] MAO, W. Send message into a deﬁnite future. In
Proceedings of ICICS 1999.
[29] NAOR, M., AND PINKAS, B. Visual authentication
In Advances in Cryptology—
and identiﬁcation.
CRYPTO 1997.
[30] OECHSLIN, P. Making a faster cryptanalyt-
In Advances in
ical
time-memory trade-off.
Cryptology—CRYPTO 2003.
[32] PINKAS, B., AND SANDER, T. Securing pass-
words against dictionary attacks. In ACM Confer-
ence on Computer and Communications Security—
CCS 2002.
[33] PROVOS, N., AND MAZI `ERES, D. A future-
adaptable password scheme.
In USENIX
Technical Conference—FREENIX Track 1999.
http://www.usenix.org/events/
usenix99/provos/provos.pdf.
[34] REED, W. J. The Pareto, Zipf and other power
laws. Economics Letters 74, 1 (2001), 15–9.
[35] RIVEST, R. L., SHAMIR, A., AND WAG-
and
report
http:
NER, D. A.
timed-release
MIT-LCS-TR-684, MIT,
//www.lcs.mit.edu/publications/
pubs/pdf/MIT-LCS-TR-684.pdf.
Technical
Time-lock
puzzles
crypto.
1985.
[36] ROSS, B., JACKSON, C., MIYAKE, N., BONEH,
D., AND MITCHELL, J. C. Stronger password au-
thentication using browser extensions. In USENIX
Security Symposium—SECURITY 2005.
[37] RSA-LABORATORIES. PKCS #5: Password-based
encryption standard, version 1.5, November 1993.
See also [22].
[38] SecurID. http://www.rsasecurity.com/.
[39] STUBBLEFIELD, A., AND SIMON, D. Inkblot au-
thentication. Tech. report MSR-TR-2004-85, Mi-
crosoft Research, 1985.
[40] TrueCrypt - free open-source on-the-ﬂy disk en-
cryption software. http://www.truecrypt.
org/.
[41] VIEGA, J., KOHNO, T., AND HOUSLEY, R.
Patent-free, parallelizable MACing. Crypto Fo-
rum Research Group, December 2002. http:
//www1.ietf.org/mail-archive/web/
cfrg/current/msg00126.html.
[42] VON AHN, L., BLUM, M., HOPPER, N., AND
LANGFORD, J. CAPTCHA: Using hard AI prob-
lems for security.
In Advances in Cryptology—
CRYPTO 2003.
[43] YAN, J., BLACKWELL, A., ANDERSON, R., AND
GRANT, A. The memorability and security of pass-
words - some empirical results. IEEE Security and
Privacy 2, 5 (2004), 25–31.
USENIX Association
16th USENIX Security Symposium
133
Table 1: Baseline measurements.
Software
Digest function
truecrypt
gpg
HMAC-SHA1
HMAC-RIPEMD160
HMAC-WHIRLPOOL
MD5
SHA1
SHA256
SHA512
(default)
Normalized
speed
25200 #/s
20400 #/s
9700 #/s
30.0 MB/S
28.0 MB/s
15.2 MB/s
9.9 MB/s
Fixed
multiplier
2000 #
2000 #
1000 #
65536 B
65536 B
65536 B
65536 B
Time per password
(as measured)
79 ms
98 ms
101 ms
2.2 ms
2.3 ms
4.3 ms
6.6 ms
Table 2: HKDF performance.
H algorithm
for HKDFH
SHA1
WHIRLPOOL
`
160
512
Hash width HKDF throughput
Time resolution and Memory rate (@1 CPU)
(q = 57600)
25.1 MB/s
19.7 MB/s
11.0 Hz
2.7 Hz
220 B/s
173 B/s
Table 3: Attainable security gains.
(q = 230400)
56 B/s
2.8 Hz
0.7 Hz
45 B/s
Program
H for HKDFH
hkdf-tc WHIRLPOOL
(vs. truecrypt)
hkdf/gpg
(vs. gpg)
SHA1
Time & Memory (per password) :
Programmed
Adversarial
3 sec.
4 min.
45 min.
1 sec.
10 min.
2 hours
11 sec.
14 min.
3 hours
4 sec.
36 min.
7 hours
< 1 kB
41 kB
0.5 MB
< 1 kB
131 kB
1.6 MB
2 kB
147 kB
1.7 MB
1 kB
469 kB
5.5 MB
Security gain
vs. built-in KDF
102× (∼ 7 bits)
104× (∼ 13 bits)
105× (∼ 17 bits)
103× (∼ 10 bits)
106× (∼ 20 bits)
107× (∼ 23 bits)
Table 4: Attack times.
Opponent
# CPUs
GnuPG
TrueCrypt
40-bit secret
Individual
Corporation
Huge botnet
“The World”
101
104
107
1010
60-bit secret
Government
“The World”
106
1010
7.7 y
67 h
242 s
242 ms
275 y
101 d
2.4 h
8.6 s
1-core
1 s
HKDF
32-core
1 h
1 s
10 m
7.5 M y
7.5 k y
7.5 y
(18 h)†
12.5 k y
13 y
(31 h)†
(110 s)†
1.4 G y
1.4 M y
1.4 k y
(147 d)†
†The ﬂagged ﬁgures relate to a persistent attack, feasible for these pa-
rameters if the opponent has 1 GiB per CPU.
401 k y
401 y
(41 d)†
(59 m)†
80 y
70 h
2.9 k y
105 d
131 k y
13 y
79 M y
7.9 k y
4.2 M y
420 y
15 G y
1.5 M y
134
16th USENIX Security Symposium
USENIX Association