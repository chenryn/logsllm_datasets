### Attack Times

Our final table (Table 4) compares the time required to crack a single password in GnuPG, TrueCrypt, and various HKDF use cases. The comparison is based on the password strength (40 and 60 bits of entropy, which correspond to approximately 9 and 13 random lowercase letters, respectively) and the computational power of different adversaries.

Even with a user delay of approximately 1 second, the security gains are significant and can transform a successful attack into a successful defense. Longer delays (greater than 1 minute to 1 hour) provide surprisingly robust security, especially when using HKDF. These extended delays are justified for last-resort disaster-recovery backups, where long-term security and password retention are critical.

### References

1. **AESpipe - AES encrypting or decrypting pipe.**
   - URL: <http://loop-aes.sourceforge.net/>

2. **BACK, A. (1997).** Hashcash.
   - Technical Report: <http://www.cypherspace.org/Technical/hashcash/>

3. **BARKAN, E., BIHAM, E., AND SHAMIR, A. (2006).** Rigorous bounds on cryptanalytic time/memory trade-offs.
   - In *Advances in Cryptology—CRYPTO 2006*.

4. **BELLARE, M., POINTCHEVAL, D., AND ROGAWAY, P. (2000).** Authenticated key exchange secure against dictionary attacks.
   - In *Advances in Cryptology—EUROCRYPT 2000*.

5. **BELLOVIN, S. M., AND MERRITT, M. (1992).** Encrypted key exchange: Password-based protocols secure against dictionary attacks.
   - In *IEEE Symposium on Security and Privacy—SP 1992*.

6. **BROWN, D. R. L. (2005).** Prompted user retrieval of secret entropy: The passmaze protocol.
   - *Cryptology ePrint Archive, Report 2005/434*: <http://eprint.iacr.org/>

7. **CALLAS, J., DONNERHACKE, L., FINNEY, H., AND THAYER, R. (1998).** OpenPGP message format.
   - RFC 2440: <http://www.ietf.org/rfc/rfc2440.txt>

8. **CANETTI, R., HALEVI, S., KATZ, J., LINDELL, Y., AND MACKENZIE, P. (2005).** Universally composable password-based key exchange.
   - In *Advances in Cryptology—EUROCRYPT 2005*.

9. **CANETTI, R., HALEVI, S., AND STEINER, M. (2006).** Mitigating dictionary attacks on password-protected local storage.
   - In *Advances in Cryptology—CRYPTO 2006*.
   - Full version: *Cryptology ePrint Archive, Report 2006/276*: <http://eprint.iacr.org/>

10. **CryptoCard.**
    - URL: <http://www.cryptocard.com/>

11. **DEAN, D., AND STUBBLEFIELD, A. (2001).** Using client puzzles to protect TLS.
    - In *USENIX Security Symposium—SECURITY 2001*: <http://www.usenix.org/events/sec01/full_papers/dean/dean.pdf>

12. **DigiPass.**
    - URL: <http://www.vasco.com/>

13. **DWORK, C., GOLDBERG, A., AND NAOR, M. (2003).** On memory-bound functions for fighting spam.
    - In *Advances in Cryptology—CRYPTO 2003*.

14. **DWORK, C., AND NAOR, M. (1992).** Pricing via processing or combating junk mail.
    - In *Advances in Cryptology—CRYPTO 1992*.

15. **GnuPG - the GNU privacy guard.**
    - URL: <http://www.gnupg.org/>

16. **HALDERMAN, J. A., WATERS, B., AND FELTEN, E. W. (2005).** A convenient method for securely managing passwords.
    - In *Proceedings of WWW 2005*.

17. **HALEVI, S., AND KRAWCZYK, H. (1998).** Public-key cryptography and password protocols.
    - In *ACM CCS 1998*.

18. **HELLMAN, M. E. (1980).** A cryptanalytic time-memory trade-off.
    - *IEEE Trans. Information Theory 26, 4*: 401–406.

19. **IEEE P1363.2: Password-based public-key cryptography.**
    - URL: <http://grouper.ieee.org/groups/1363/>

20. **JABLON, D. (1996).** Strong password-only authenticated key exchange.
    - *Computer Communication Review*.

21. **JUELS, A., AND BRAINARD, J. (1999).** Client puzzles: A cryptographic defense against connection depletion attacks.
    - In *Proceedings of NDSS 1999*.

22. **KALISKI, B. (2000).** PKCS #5: Password-based cryptography specification, version 2.0.
    - RFC 2898: <http://www.ietf.org/rfc/rfc2898.txt>

23. **KAO, M.-Y., REIF, J. H., AND TATE, S. R. (1993).** Searching in an unknown environment: An optimal randomized algorithm for the cow-path problem.
    - In *ACM-SIAM Symposium on Discrete Algorithms—SODA 1993*.

24. **KRAWCZYK, H., BELLARE, M., AND CANETTI, R. (1997).** HMAC: Keyed-hashing for message authentication.
    - RFC 2104: <http://www.ietf.org/rfc/rfc2104.txt>

25. **LAHERRERE, J., AND SORNETTE, D. (1998).** Stretched exponential distributions in nature and economy: 'fat tails' with characteristic scales.
    - *European Physical Journals B2*: 525–539. <http://xxx.lanl.gov/abs/cond-mat/9801293>

26. **LENSTRA, A. K., AND VERHEUL, E. R. (2001).** Selecting cryptographic key sizes.
    - *Journal of Cryptology 14, 4*: 255–293.

27. **MACKENZIE, P., SHRIMPTON, T., AND JAKOBSSON, M. (2006).** Threshold password-authenticated key exchange.
    - *Journal of Cryptology 19, 1*: 27–66.

28. **MAO, W. (1999).** Send message into a definite future.
    - In *Proceedings of ICICS 1999*.

29. **NAOR, M., AND PINKAS, B. (1997).** Visual authentication and identification.
    - In *Advances in Cryptology—CRYPTO 1997*.

30. **OECHSLIN, P. (2003).** Making a faster cryptanalytical time-memory trade-off.
    - In *Advances in Cryptology—CRYPTO 2003*.

31. **PERLINE, R. (1996).** Zipf's law, the central limit theorem, and the random division of the unit interval.
    - *Physical Review E 54, 1*: 220–223.

32. **PINKAS, B., AND SANDER, T. (2002).** Securing passwords against dictionary attacks.
    - In *ACM Conference on Computer and Communications Security—CCS 2002*.

33. **PROVOS, N., AND MAZIÈRES, D. (1999).** A future-adaptable password scheme.
    - In *USENIX Technical Conference—FREENIX Track 1999*: <http://www.usenix.org/events/usenix99/provos/provos.pdf>

34. **REED, W. J. (2001).** The Pareto, Zipf and other power laws.
    - *Economics Letters 74, 1*: 15–19.

35. **RIVEST, R. L., SHAMIR, A., AND ADLEMAN, L. (1985).** A method for obtaining digital signatures and public-key cryptosystems.
    - MIT-LCS-TR-684, MIT: <http://www.lcs.mit.edu/publications/pubs/pdf/MIT-LCS-TR-684.pdf>

36. **ROSS, B., JACKSON, C., MIYAKE, N., BONEH, D., AND MITCHELL, J. C. (2005).** Stronger password authentication using browser extensions.
    - In *USENIX Security Symposium—SECURITY 2005*.

37. **RSA-LABORATORIES. (1993).** PKCS #5: Password-based encryption standard, version 1.5.
    - See also [22].

38. **SecurID.**
    - URL: <http://www.rsasecurity.com/>

39. **STUBBLEFIELD, A., AND SIMON, D. (1985).** Inkblot authentication.
    - Tech. report MSR-TR-2004-85, Microsoft Research.

40. **TrueCrypt - free open-source on-the-fly disk encryption software.**
    - URL: <http://www.truecrypt.org/>

41. **VIEGA, J., KOHNO, T., AND HOUSLEY, R. (2002).** Patent-free, parallelizable MACing.
    - Crypto Forum Research Group: <http://www1.ietf.org/mail-archive/web/cfrg/current/msg00126.html>

42. **VON AHN, L., BLUM, M., HOPPER, N., AND LANGFORD, J. (2003).** CAPTCHA: Using hard AI problems for security.
    - In *Advances in Cryptology—CRYPTO 2003*.

43. **YAN, J., BLACKWELL, A., ANDERSON, R., AND GRANT, A. (2004).** The memorability and security of passwords - some empirical results.
    - *IEEE Security and Privacy 2, 5*: 25–31.

### Table 1: Baseline Measurements

| Software | Digest Function | Normalized Speed | Fixed Multiplier | Time per Password (as measured) |
|----------|-----------------|------------------|------------------|---------------------------------|
| truecrypt | HMAC-SHA1       | 25200 #/s        | 2000 #           | 79 ms                           |
| gpg      | HMAC-RIPEMD160  | 20400 #/s        | 2000 #           | 98 ms                           |
|          | HMAC-WHIRLPOOL  | 9700 #/s         | 1000 #           | 101 ms                          |
|          | MD5             | 30.0 MB/s        | 65536 B          | 2.2 ms                          |
|          | SHA1            | 28.0 MB/s        | 65536 B          | 2.3 ms                          |
|          | SHA256          | 15.2 MB/s        | 65536 B          | 4.3 ms                          |
|          | SHA512          | 9.9 MB/s         | 65536 B          | 6.6 ms                          |

### Table 2: HKDF Performance

| H Algorithm for HKDFH | Hash Width | HKDF Throughput | Time Resolution and Memory Rate (@1 CPU) |
|-----------------------|------------|-----------------|-----------------------------------------|
| SHA1                  | 160        | 25.1 MB/s       | 11.0 Hz, 220 B/s                        |
| WHIRLPOOL             | 512        | 19.7 MB/s       | 2.7 Hz, 173 B/s                         |

### Table 3: Attainable Security Gains

| Program | H for HKDFH | Time & Memory (per password) | Security Gain vs. Built-in KDF |
|---------|-------------|------------------------------|--------------------------------|
| hkdf-tc | WHIRLPOOL   | 3 sec, 4 min, 45 min         | 102× (∼ 7 bits), 104× (∼ 13 bits), 105× (∼ 17 bits) |
| hkdf/gpg| SHA1        | 1 sec, 10 min, 2 hours       | 103× (∼ 10 bits), 106× (∼ 20 bits), 107× (∼ 23 bits) |

### Table 4: Attack Times

| Opponent | # CPUs | GnuPG | TrueCrypt | HKDF (1-core) | HKDF (32-core) |
|----------|--------|-------|-----------|---------------|----------------|
| 40-bit secret | Individual | 10^1 | 7.7 y | 1 s | 1 h |
|             | Corporation | 10^4 | 67 h | 10 m | 1 s |
|             | Huge botnet | 10^7 | 242 s | 7.5 M y | 7.5 k y |
|             | "The World" | 10^10 | 242 ms | 7.5 y (18 h)† | 12.5 k y (31 h)† |
| 60-bit secret | Government | 10^6 | 275 y | 1.4 G y | 1.4 M y |
|             | "The World" | 10^10 | 101 d | 1.4 k y (147 d)† | 13 y (110 s)† |

†The flagged figures relate to a persistent attack, feasible for these parameters if the opponent has 1 GiB per CPU.