**其他资源**
-   [测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 44 章 测试基本网络设置"){.link}.
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#proc_configuring-vlan-tagging-using-nmstatectl_configuring-vlan-tagging}使用 nmstatectl 配置 VLAN 标记 {.title}
:::
这部分论述了如何使用 `nmstatectl`{.literal} 工具配置使用以太网连接 ID 10
的 VLAN。作为子设备，VLAN 连接包含 IP、默认网关和 DNS 配置。
根据您的环境，相应地调整 YAML 文件。例如，要使用 VLAN
中的网桥或绑定设备，请调整您在 VLAN 中使用的端口的
`base-iface`{.literal} 属性 `和类型`{.literal} 属性。
::: itemizedlist
**先决条件**
-   要将以太网设备用作 VLAN
    中的端口，必须在服务器中安装物理或者虚拟以太网设备。
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  创建包含以下内容的 YAML 文件，如 `~/create-vlan.yml`{.literal} ：
    ``` literallayout
    ---
    interfaces:
    - name: vlan10
      type: vlan
      state: up
      ipv4:
        enabled: true
        address:
        - ip: 192.0.2.1
          prefix-length: 24
        dhcp: false
      ipv6:
        enabled: true
        address:
        - ip: 2001:db8:1::1
          prefix-length: 64
        autoconf: false
        dhcp: false
      vlan:
        base-iface: enp1s0
        id: 10
    - name: enp1s0
      type: ethernet
      state: up
    routes:
      config:
      - destination: 0.0.0.0/0
        next-hop-address: 192.0.2.254
        next-hop-interface: vlan10
      - destination: ::/0
        next-hop-address: 2001:db8:1::fffe
        next-hop-interface: vlan10
    dns-resolver:
      config:
        search:
        - example.com
        server:
        - 192.0.2.200
        - 2001:db8:1::ffbb
    ```
2.  将设置应用到系统：
    ``` literallayout
    # nmstatectl apply ~/create-vlan.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    vlan10      vlan      connected  vlan10
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show vlan10
    connection.id:              vlan10
    connection.uuid:            1722970f-788e-4f81-bd7d-a86bf21c9df5
    connection.stable-id:       --
    connection.type:            vlan
    connection.interface-name:  vlan10
    ...
    ```
3.  以 YAML 格式显示连接设置：
    ``` literallayout
    # nmstatectl show vlan0
    ```
:::
::: itemizedlist
**其他资源**
-   `nmstatectl(8)`{.literal} man page
-   `/usr/share/doc/nmstate/examples/`{.literal}
:::
:::
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#proc_configuring-vlan-tagging-using-system-roles_configuring-vlan-tagging}使用 RHEL 系统角色配置 VLAN 标记 {.title}
:::
您可以使用网络 RHEL 系统角色配置 VLAN
标记。这个流程描述了如何在这个以太网连接之上添加以太网连接和 ID 为
`10`{.literal} 的 VLAN。作为子设备，VLAN 连接包含 IP、默认网关和 DNS
配置。
根据您的环境，相应地进行调整。例如：
::: itemizedlist
-   若要将 VLAN 用作其他连接中的端口（如绑定），请省略 `ip`{.literal}
    属性，并在子配置中设置 IP 配置。
-   若要在 VLAN 中使用 team、bridge 或 bond 设备，请调整您在 VLAN
    中使用的端口的 `interface_name`{.literal} 和 `类型`{.literal} 属性。
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/vlan-ethernet.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure a VLAN that uses an Ethernet connection
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            # Add an Ethernet profile for the underlying device of the VLAN
            - name: enp1s0
              type: ethernet
              interface_name: enp1s0
              autoconnect: yes
              state: up
              ip:
                dhcp4: no
                auto6: no
            # Define the VLAN profile
            - name: enp1s0.10
              type: vlan
              ip:
                address:
                  - "192.0.2.1/24"
                  - "2001:db8:1::1/64"
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              vlan_id: 10
              parent: enp1s0
              state: up
    ```
    VLAN 配置文件中的 `parent`{.literal} 属性将 VLAN 配置为在
    `enp1s0`{.literal} 设备之上运行。
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/vlan-ethernet.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/vlan-ethernet.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
:::
[]{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking}第 9 章 使用 VXLAN 为虚拟机创建虚拟层-2 域 {.title}
:::
虚拟可扩展 LAN(VXLAN)是一种网络协议，通过 UDP 协议通过 IP 网络隧道连接第
2 层流量。例如，在不同主机上运行的某些虚拟机可通过 VXLAN
隧道进行通信。主机可以位于不同的子网中，甚至位于世界各地的不同数据中心。从虚拟机的角度来看，同一
VXLAN 中的其他虚拟机在同一第 2 层域中。
本文档论述了如何在 RHEL 主机上配置 VXLAN，对于虚拟机这是不可避免的：
::: informalfigure
::: mediaobject
![VXLAN 隧道](images/vxlan-tunnel.png)
:::
:::
在本例中，RHEL-host-A 和 RHEL-host-B 使用网桥
`br0`{.literal}，将每台主机上虚拟机的虚拟网络与名为 `vxlan10`{.literal}
的 VXLAN 连接。由于此配置，VXLAN
对虚拟机不可见，而且虚拟机不需要任何特殊的配置。如果您稍后将更多虚拟机连接到同一虚拟网络，则虚拟机将自动是同一虚拟层
2 域的成员。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
与普通的 L-2 流量一样，VXLAN 中的数据不会被加密。出于安全考虑，通过 VPN
或其他类型的加密连接使用 VXLAN。
:::
::: section
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#con_benefits-of-vxlans_assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms}VXLAN 的优点 {.title}
:::
虚拟可扩展 LAN(VXLAN)具有以下主要优点：
::: itemizedlist
-   VXLAN 使用 24 位 ID。因此，您可以最多创建 16,777,216
    隔离的网络。例如，虚拟 LAN(VLAN)只支持 4,096 隔离的网络。
-   VXLAN 使用 IP 协议。这可让您在同一层-2
    域中路由流量和虚拟运行在不同网络和位置中的系统。
-   与大多数隧道协议不同，VXLAN 不仅仅是点对点网络。VXLAN
    可以动态了解其他端点的 IP 地址，也可以使用静态配置的转发条目。
-   某些网卡支持 UDP 隧道相关卸载功能。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/doc/kernel-doc-/Documentation/networking/vxlan.rst`{.literal}
    由 `kernel-doc`{.literal} 软件包提供
:::
:::
::: section
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#proc_configuring-the-ethernet-interface-on-the-hosts_assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms}在主机上配置以太网接口 {.title}
:::
要将 RHEL 虚拟机主机连接到以太网，请创建一个网络连接配置集，配置 IP
设置并激活配置集。
在 RHEL 主机上运行这个步骤，并相应地调整 IP 地址配置。
::: itemizedlist
**先决条件**
-   主机连接到以太网主机。
:::
::: orderedlist
**步骤**
1.  在 NetworkManager 中添加新的以太网连接配置集：
    ``` literallayout
    # nmcli connection add con-name Example ifname enp1s0 type ethernet
    ```
2.  配置 IPv4 设置：
    ``` literallayout
    # nmcli connection modify Example ipv4.addresses 198.51.100.2/24 ipv4.method manual ipv4.gateway 198.51.100.254 ipv4.dns 198.51.100.200 ipv4.dns-search example.com
    ```
    如果网络使用 DHCP，请跳过这一步。
3.  激活 `Example`{.literal} 连接：
    ``` literallayout
    # nmcli connection up Example
    ```
:::
::: orderedlist
**验证**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp1s0      ethernet  connected  Example
    ```
2.  在远程网络中 ping 主机以验证 IP 设置：
    ``` literallayout
    # ping RHEL-host-B.example.com
    ```
    请注意，在已在该主机上配置网络前，您无法对其他虚拟机主机进行 ping
    操作。
:::
::: itemizedlist