### User-Guided Recovery for Cloud Web Service Applications

The method employs a user-guided approach, which is applied during the runtime of cloud web service applications. The recovery strategy is designed during the design phase of these applications (J. Simmonds et al., 2010). A key challenge in this recovery strategy is enhancing the efficiency of the methodology used to generate recovery plans, enabling operators to make the final selection (M. Fu et al., 2014).

#### Limitations:
1. **Normal vs. Sporadic Activities**: User-guided recovery is typically designed for the normal activities of cloud applications rather than sporadic operations (J. Simmonds et al., 2010). It is more beneficial when applied to large-scale systems with complex recovery configurations. However, the focus of this research is on sporadic operations on cloud-hosted applications (M. Fu et al., 2013). Despite this, user-guided recovery can still be applicable to sporadic operations, as automated scripts are also considered special software applications.
2. **Manual Selection of Recovery Plans**: The execution of generated recovery plans is not fully automated and relies on operators to manually select the optimal plan. If operators accidentally choose a suboptimal plan or lack the necessary expertise, the recovery may fail (M. Fu et al., 2014). Although such occurrences are rare, they should be avoided. Full automation of the recovery plan selection process could mitigate this issue. Additionally, manual selection can become a scalability problem, especially in large systems where operators may spend excessive time choosing the best recovery action.
3. **Selection Criteria**: Operators often base their selection on the estimated Mean Time to Recover (MTTR) without considering other factors like the risk of recovery and associated costs. Our proposed recovery method, POD-Recovery, addresses these criteria (M. Fu et al., 2015; M. Fu et al., 2016).

### BPEL (Business Process Execution Language) Recovery in Cloud Computing

BPEL is a protocol for specifying business process logic, such as shipping goods from a local store to an overseas location (J. Simmonds and M. Chechik, 2010). BPEL scripts require a BPEL engine for execution, and error recovery mechanisms are specified as recovery blocks within these scripts (E. Juhnke et al., 2009; J. Simmonds and M. Chechik, 2010). Recovery blocks are typically defined using Compensation nodes, which provide the recovery flow in case of errors (E. Juhnke et al., 2009; J. Simmonds and M. Chechik, 2010). These blocks are usually manually specified and installed by engineers or operators, making BPEL recovery a form of user-guided recovery.

#### Limitations:
1. **Applicability to Sporadic Operations**: While BPEL recovery is generally designed for normal activities of cloud systems, it can be adapted for sporadic operations. However, the need for a BPEL engine makes it impractical for sporadic operations (E. Juhnke et al., 2009; J. Simmonds and M. Chechik, 2010).
2. **Limited Recovery Patterns**: BPEL recovery has limited patterns, primarily compensation, which makes it difficult to handle various failure scenarios in sporadic operations (M. Fu et al., 2014; M. Fu et al., 2016).
3. **Static Recovery Plans**: BPEL recovery specifications are static and defined before the recovery logic is executed at runtime (E. Juhnke et al., 2009; J. Simmonds and M. Chechik, 2010). In contrast, our proposed recovery service focuses on sporadic operations and is intended for runtime recovery.

### Taxonomy of Existing Cloud Recovery Methods

A comprehensive recovery mechanism for cloud sporadic operations may need to integrate a wide range of cloud recovery strategies (M. Fu et al., 2014). To propose a fine-grained recovery methodology for sporadic operations and to clarify the relevance of existing methods, we present a taxonomy of cloud recovery strategies. This taxonomy helps identify which existing strategies are directly applicable to sporadic operations and provides useful insights for other researchers (M. Fu et al., 2014).

#### Methodology of Establishing the Taxonomy

We establish the taxonomy through a systematic approach consisting of three steps:

1. **Defining Issues to Address**:
   - What are the existing cloud recovery strategies?
   - What types of activities are these methods applicable to?
   - What phases in the life cycle of these activities are the methods applicable to?

2. **Literature Review and Data Extraction**:
   - We reviewed existing cloud recovery strategies and extracted data on several methods, including rollback recovery, disaster recovery, virtual machine replication, fault-tolerance, and others.

3. **Data Analysis and Taxonomy Creation**:
   - We analyzed the activity types (normal vs. sporadic) and the life cycle phases (design vs. runtime) to categorize the recovery strategies.

#### Classification of Cloud Recovery Strategies

The taxonomy classifies cloud recovery strategies into eight groups based on the following dimensions:
- **Activity Type**: Normal (e.g., application workflow) vs. Sporadic (e.g., deployment, upgrade)
- **Life Cycle Phase**: Design vs. Runtime

These dimensions form a two-dimensional coordinate chart, allowing us to place each recovery strategy into one of four categories:
1. **Recovery for Normal Activities in Design Phase**
2. **Recovery for Normal Activities in Runtime Phase**
3. **Recovery for Sporadic Activities in Design Phase**
4. **Recovery for Sporadic Activities in Runtime Phase**

### Research Problem Definition

#### Motivating Example: Asgard Rolling Upgrade

Asgard rolling upgrade is a motivating example for our research. It is a frequently performed sporadic operation that spans multiple cloud resources and requires multiple cloud APIs. This operation is representative of typical sporadic operations and forms the basis of our research scope.

#### Differences Between Non-Intrusive and Intrusive Recovery

Non-intrusive recovery minimizes disruption to the system, while intrusive recovery may involve significant changes or interruptions. Understanding these differences is crucial for designing effective recovery strategies.

#### Research Goals and Questions

Our research aims to define recovery requirements and address the challenges in developing a robust recovery methodology for sporadic operations on cloud. The specific research questions and goals will guide our investigation and development efforts.

#### Recovery Requirements

We define the recovery requirements for our proposed methodology, ensuring that it addresses the limitations and challenges identified in existing recovery strategies.

#### Research Challenges

Addressing the complexities and challenges in implementing a comprehensive and effective recovery mechanism for sporadic operations on cloud is a key focus of our research.