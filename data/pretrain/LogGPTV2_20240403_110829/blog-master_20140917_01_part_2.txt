```  
要解决这个问题, 需要重建触发器 :   
例如 :   
```  
((old.info<>new.info or (old.info is null and new.info is not null) or (old.info is not null and new.info is null)) and old.id=1)  
```  
这里使用id=1来定位一条记录, 并且判断info字段是否被变更.  
```  
postgres=# drop trigger tg1 on tgtest;  
DROP TRIGGER  
postgres=# create trigger tg1 after update on tgtest for each row when ((old.info<>new.info or (old.info is null and new.info is not null) or (old.info is not null and new.info is null)) and old.id=1) execute procedure undo_tgtest_trace();  
CREATE TRIGGER  
```  
从null更新到not null, 被记录 :   
```  
postgres=# update tgtest set info='ab' where id=1;  
UPDATE 1  
postgres=# select * from undo_tgtest;  
 id |   xid    | relid | table_schema | table_name | when_tg | level |   op   | encoding |               old_rec                |     
             new_rec                |          crt_time          | username | client_addr | client_port   
----+----------+-------+--------------+------------+---------+-------+--------+----------+--------------------------------------+---  
------------------------------------+----------------------------+----------+-------------+-------------  
  1 | 17572725 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,abc,"2014-09-17 08:38:54.622664") | (1  
,abcd,"2014-09-17 08:38:54.622664") | 2014-09-17 08:40:25.268737 | postgres |             |              
  2 | 17573021 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,,"2014-09-17 08:38:54.622664")    | (1  
,ab,"2014-09-17 08:38:54.622664")   | 2014-09-17 08:46:10.78577  | postgres |             |              
(2 rows)  
```  
从not null更新到null, 被记录 :   
```  
postgres=# update tgtest set info=null where id=1;  
UPDATE 1  
postgres=# select * from undo_tgtest;  
 id |   xid    | relid | table_schema | table_name | when_tg | level |   op   | encoding |               old_rec                |     
             new_rec                |          crt_time          | username | client_addr | client_port   
----+----------+-------+--------------+------------+---------+-------+--------+----------+--------------------------------------+---  
------------------------------------+----------------------------+----------+-------------+-------------  
  1 | 17572725 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,abc,"2014-09-17 08:38:54.622664") | (1  
,abcd,"2014-09-17 08:38:54.622664") | 2014-09-17 08:40:25.268737 | postgres |             |              
  2 | 17573021 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,,"2014-09-17 08:38:54.622664")    | (1  
,ab,"2014-09-17 08:38:54.622664")   | 2014-09-17 08:46:10.78577  | postgres |             |              
  3 | 17573033 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,ab,"2014-09-17 08:38:54.622664")  | (1  
,,"2014-09-17 08:38:54.622664")     | 2014-09-17 08:46:22.820805 | postgres |             |              
(3 rows)  
```  
从null更新到null, 不被记录 :   
```  
postgres=# update tgtest set info=null where id=1;  
UPDATE 1  
postgres=# select * from undo_tgtest;  
 id |   xid    | relid | table_schema | table_name | when_tg | level |   op   | encoding |               old_rec                |     
             new_rec                |          crt_time          | username | client_addr | client_port   
----+----------+-------+--------------+------------+---------+-------+--------+----------+--------------------------------------+---  
------------------------------------+----------------------------+----------+-------------+-------------  
  1 | 17572725 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,abc,"2014-09-17 08:38:54.622664") | (1  
,abcd,"2014-09-17 08:38:54.622664") | 2014-09-17 08:40:25.268737 | postgres |             |              
  2 | 17573021 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,,"2014-09-17 08:38:54.622664")    | (1  
,ab,"2014-09-17 08:38:54.622664")   | 2014-09-17 08:46:10.78577  | postgres |             |              
  3 | 17573033 | 31051 | public       | tgtest     | AFTER   | ROW   | UPDATE | UTF8     | (1,ab,"2014-09-17 08:38:54.622664")  | (1  
,,"2014-09-17 08:38:54.622664")     | 2014-09-17 08:46:22.820805 | postgres |             |              
(3 rows)  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/1638770402013283547959/  
2\. http://blog.163.com/digoal@126/blog/static/1638770402013211102130526/  
3\. http://blog.163.com/digoal@126/blog/static/1638770402014728105442434/  
4\. http://www.postgresql.org/docs/9.3/static/sql-createtrigger.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")