### Improved Text

Let \( f_{q-1} = \frac{1}{R_q} \). Assume we compute an LLL-reduced basis \( B \) of the ideal \( (f_{q-1}) \) in polynomial time with respect to \( m \), \( q \), and the bit-length of \( f \). This will yield a shortest element \( w = f_{q-1} \cdot a \) for some \( a \). If \( \|a\|_\infty < 1 \), proceed as follows:

1. **Splitting in \( \mathbb{Z}[i] \)**:
   - Split \( (p_i) \) in \( \mathbb{Z}[i] \) as \( (a + ib) \) and \( (a - ib) \).

2. **Lifting to \( \mathbb{Z}[\zeta] \)**:
   - Lift \( (a + ib) \) and \( (a - ib) \) to \( \mathbb{Z}[\zeta] \).
   - Define \( a_+ = (a + ib) + (f \cdot \bar{f}) \).
   - Define \( a_- = (a - ib) + (f \cdot \bar{f}) \).
   - Set \( C_{p_i} = \{a_+, a_-\} \).

3. **Factorization**:
   - Factor \( (f \cdot \bar{f}) + (p_i^{\alpha_i}) \).
   - For each pair \( (p_j, \bar{p_j}) \) in the decomposition, update \( C_{p_i}, (p_j, \bar{p_j}) \) to include products of the form \( p_j^{t_j}, \ldots, \bar{p_j}^{t_j-k}, \ldots, \bar{p_j}^{t_j} \).

4. **Constructing \( I \)**:
   - Construct \( I \) as \( R_D \cdot \prod_{j} C_{p_i}, (p_j, \bar{p_j}) \).
   - If the Gentry-Szydlo algorithm on \( I \) and \( f \cdot \bar{f} \) outputs \( \alpha \in \mathbb{Z}[\zeta] \), return \( \alpha \).

### Prime Ideal Factorization
The factorization of prime ideals in a given prime \( p \) reduces to factoring the defining polynomial of the field \( \Phi_m \) modulo \( p \). This can be efficiently performed using the Cantor-Zassenhaus algorithm or the Berlekamp algorithm [52].

### Gentry-Szydlo Algorithm
As noted in [24], the Gentry-Szydlo algorithm runs in polynomial time with respect to the dimension of the field.

### Estimation of the Algebraic Norm of Secrets
Let \( s \) be one of the secret elements \( s_1, s_2 \). The norm \( N(s) \) is equal to the resultant of \( s \) (the lift of \( s \) in \( \mathbb{Z}[X] \) from its representation in \( \mathbb{Z}[\zeta] \cong \mathbb{Z}[X]/(\Phi_n(X)) \)) and \( \Phi_n(X) = X^n + 1 \), the 2n-th cyclotomic polynomial. A classical bound on the univariate resultant (see [7]) derived from Hadamard inequalities on the Sylvester matrix ensures that:
\[ | \text{res}(A, B) | \leq \|A\|_b^2 \|B\|_a^2, \]
where \( \deg(A) = a \), \( \deg(B) = b \), and \( \|\cdot\| \) denotes the L2 norm of the coefficients. Consequently,
\[ |N(s)| \leq 2^{n^2/2} \left( \sqrt{1 + 4\delta^2} \right)^n, \]
yielding directly that
\[ \log |N(f)| \leq n \log(n \sqrt{1 + 4\delta^2}) + \frac{1}{\delta}. \]

### Further Details on BLISS
This appendix includes a description of the BLISS key generation and verification algorithms, provided in Figure 15, and for reference also includes the list of proposed BLISS parameters in Table 5.

### Code of the strongSwan Attacks
This appendix presents the source code of our implementation of the branch tracing attacks of §3.4 and §4 against strongSwan. The target program is shown in Figure 16. The Perl script that parses the output of the `perf` command for the rejection sampling attack is shown in Figure 17, and the shell script that runs the corresponding full attack is shown in Figure 18. As for the attack on the discrete Gaussian sampling, the corresponding Perl parser is described in Figures 20–21.

### BLISS Parameters
| n    | BLISS-0 | BLISS-I | BLISS-II | BLISS-III | BLISS-IV |
|------|---------|---------|----------|-----------|----------|
| 256  | 512     | 512     | 512      | 512       | 512      |
| q    | 7681    | 12289   | 12289    | 12289     | 12289    |
| (δ1, δ2) | (0.55, 0.15) | (0.3, 0) | (0.3, 0) | (0.42, 0.03) | (0.45, 0.06) |
| σ    | 100     | 215     | 107      | 250       | 271      |
| κ    | 12      | 23      | 23       | 30        | 39       |

**Table 5:** Parameter sets for BLISS proposed by the authors of [14]. The claimed security levels are 60, 128, 128, 160, and 192 bits, respectively.

### Generator Recovery
**Case \( p \equiv 1 \mod 4 \):**
1. **Norm Computation**:
   - Compute the norm \( N_{\mathbb{Q}[\zeta_m]/\mathbb{Q}}(f) = p \).
2. **Split of Prime in Quadratic Field**:
   - Split \( (p_i) \) in \( \mathbb{Q}[i] \) as \( (a + ib) \) and \( (a - ib) \).
3. **Lift of Ideal and Composition with the Relative Norm**:
   - Lift \( (a + ib) \) and \( (a - ib) \) to \( \mathbb{Z}[\zeta_m] \).
   - Compute the square root of \( (f \cdot \bar{f}) \) in \( \mathbb{Z}[\zeta_m] \).
4. **Generator Recovery**:
   - Find a candidate \( I \) such that \( I \cdot \bar{I} = (f \cdot \bar{f}) \).

**Figure 13:** Recovery of the generator \( f \) from its relative norm: Case \( p \equiv 1 \mod 4 \).

**Figure 14:** Recovery of the generator \( f \) from its relative norm: General case.