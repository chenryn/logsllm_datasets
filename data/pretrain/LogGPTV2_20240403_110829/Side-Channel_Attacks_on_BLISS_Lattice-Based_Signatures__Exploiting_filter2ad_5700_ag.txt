have f q−1 = 1 over Rq. Assume we compute a LLL-reduced basis
B of the ideal ( f q−1
) in polynomial time in m, q and the bit-length
of f , we will find a shortest element w = f q−1 · a for some a. If
∥a∥∞  1 do
(17)
(18)
(19)
(20)
(21)
(22) end for
Split (pi ) in Z[i] as (a + ib ), (a − ib )
Lift (a + ib ), (a − ib )in Z[ζ ]
a+ ← (a + ib ) + (f · ¯f )
a− ← (a − ib ) + (f · ¯f )
Cpi ← {a+, a−}
Factor (f · ¯f ) + (pαi
for each (pj, ¯pj ) of the decomposition do
Cpi , (pj , ¯pj ) ← {p
) as(cid:81)
j p
j , · · · , pk
| B ∈(cid:81)
b∈B b
pi≡1[4] Cpi do
b∈A b
end for
Cpi ← {(cid:81)
(23) for each A ∈(cid:81)
I ← RD ·(cid:81)
j Cpi , (pj , ¯pj ) }
· ¯pj
tj
j
tj
.
i
j
tj−k, · · · , ¯pj
tj }
if Gentry-Szydlo (I, f · ¯f ) outputs α ∈ Z[ζ ] then
(24)
(25)
(26)
(27)
(28) end for
return α
end if
in prime ideals of a given prime7 boils down to factor the defin-
ing polynomial of the field Φm modulo p, which can be efficiently
performed by the Cantor-Zassenhaus algorithm or Berlekamp al-
gorithm [52].
As pointed out in [24] the Gentry-Szydlo algorithm runs in poly-
nomial time in the dimension of the field.
A.5 Estimation of the algebraic norm of secrets
Let s be one of the secret elements s1, s2. Note that N (s) is equal
to the resultant of s (explicitly, the lift of s in Z[X] from its repre-
sentation in Z[ζ ] ≃ Z[X]/(Φn (X ))) and Φn (X ) = X n + 1 the 2n-th
cyclotomic polynomial. A classical bound on univariate resultant
(see [7] for instance) coming from Hadamard inequalities on the
Sylvester matrix, ensures that:
|res(A, B)| ≤ ∥A∥b2 ∥B∥a2 ,
7In full generality, this is the case only when p does not divide the index [OK : Z[α]]
for OK the ring of integers of K and α a primitive element of the number field K. Since
this index is always 1 for cyclotomic fields, the factorization can always be carried by
the above-mentioned technique.
17
where deg(A) = a, deg(B) = b and ∥.∥ denotes classically the L2
norm of the coefficients. Consequently, |N (s)| ≤ 2 n2
2
2n
yielding directly that
2
1 + 4δ
δ
(cid:19)n,
(cid:18)(cid:113)
(cid:19)
.
(cid:18)
(cid:113)
log |N ( f )| ≤ n
2
log(n
2
1 + 4δ
2
2 ) + 1
δ
B FURTHER DETAILS ON BLISS
This appendix includes a description of the BLISS key generation
and verification algorithms, provided in Figure 15, and for reference
also includes the list of proposed BLISS parameters in Table 5
C CODE OF THE STRONGSWAN ATTACKS
This appendix presents the source code of our implementation of
the branch tracing attacks of §3.4 and §4 against strongSwan. The
target program is shown in Figure 16. The perl script that parses the
output of the perf command for the rejection sampling attack is
shown in Figure 17, and the shell script that runs the corresponding
full attack is shown in Figure 18. As for the attack on the discrete
Gaussian sampling, we describe the corresponding perl parser in
Figure 20–21.
n
256
BLISS-0
512
BLISS-I
512
BLISS-II
BLISS-III
512
BLISS-IV 512
q
7681
12289
12289
12289
12289
(δ1, δ2)
(0.55, 0.15)
(0.3, 0)
(0.3, 0)
(0.42, 0.03)
(0.45, 0.06)
σ
100
215
107
250
271
κ
12
23
23
30
39
Table 5: Parameter sets for BLISS proposed by the authors
of [14]. The claimed security levels are of 60, 128, 128, 160
and 192 bits respectively.
18
Gentry-Szydlo(I, ( f · ¯f ))
(III) Generator recovery
candidate such that I · ¯I = ( f · ¯f )
I
Q[ζm]
( f · ¯f ) ⊂
Q[ζm + ζ −1
m ]
(I) Norm computation
(II-2) Lift of ideal and composition with the relative norm
Q[i] ⊃ a+; a−
(II-1) Split of prime in quadratic field
Q
NQ[ζm]/Q( f ) = p
Figure 13: Recovery of the generator f from its relative norm: Case p ≡ 1 mod 4.
Gentry-Szydlo(I, ( f · ¯f ))
(III) Generator recovery
candidate such that I · ¯I = ( f · ¯f )
I
Q[ζm]
( f · ¯f ) ⊂
Q[ζm + ζ −1
m ]
(I) Norm computation
(II) Computing square root of ( f · ¯f ) in Z[ζm]