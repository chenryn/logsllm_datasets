RDFS by providing additional vocabulary along with
OWL 2 QL contains the intersection of RDFS
formal semantics.
and OWL 2 DL. It is designed so that data that is
stored in a standard relational database system can be
queried through an ontology via a simple rewriting
mechanism, i.e., by rewriting the query into an SQL
Since 2009 there is a second version of OWL, dubbed query that is then answered by the RDBMS system,
“OWL 2,” which supersedes the previous “OWL 1” — in without any changes to the data. OWL 2 QL is based
2012 OWL 2 became the official recommendation by on the DL-Lite family of description logics and it was
W3C. OWL 1 exists in different sublanguages: OWL designed so that sound and complete query answering
Lite, OWL 1 DL, and OWL Full. An important feature is computationally efficient.
Figure 3. OWL sublanguages
OWL 2 RL is aimed at applications that require OWL 2 EL/QL/RL are sufficient. The choice between
scalable reasoning without sacrificing too much expres- OWL 2 DL and OWL Full depends on how important
sive power. It is designed to accommodate both OWL it is to be able to carry out automated reasoning on the
2 DL applications that can trade the full expressivity of ontology versus to use highly expressive and powerful
the language for efficiency, and RDF(S) applications modeling facilities.
that need some added expressivity from OWL 2. The
design of OWL 2 RL was inspired by Description Logic 
Programs and its expressiveness was achieved by defin-
ing a syntactic subset of OWL 2 which is amenable to In this section we describe the syntax and semantics of
implementation using rule-based technologies. the main constructs of OWL. We illustrate step-by-step
OWL 1 Lite is the simplest sublanguage, intended how to build an ontology using OWL. We also explain
to be used in situations where only a simple class how to define the header of an ontology, its classes,
hierarchy and constraints are needed. properties, and relationships. After reading this section
Every OWL 1 Lite, OWL 2 EL/QL/RL ontology the reader should be able to recognize an ontology
or conclusion is a legal OWL 2 DL ontology or con- written in OWL and identify some of its components.
clusion, but not the inverse, and so on for OWL 2 DL The semantics of ontologies written in OWL is
and OWL Full, as showed in Figure 3: grounded in First Order Logic (FOL). Indeed, the
The choice between OWL 2 EL/QL/RL and OWL various flavors of OWL, and most Description Log-
2 DL depends on whether the simple constructs of ics, are but syntactic variations over fragments of FOL
where objects, sets (or classes) of objects and their other ontologies that are considered to be part
relationships can be formally described along with the of the current ontology.
corresponding constraints.
A simple example:
The first element in an OWL document is an rdf:RDF 
element which specifies a set of XML namespace’s that 
provide a means to unambiguously interpret identifiers 
and make the rest of the ontology presentation more 
readable. E.g., 
Classes are collections of individuals. They are defined
in an OWL document with the owl:Class element. The
formal semantics of an OWL class is a set in FOL and