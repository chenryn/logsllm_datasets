apache overview 
0x00  
twf.soapache
0x01 helloworld 
demo
apacheapache
apachehookexample
1 handler 
httpd.conf
AddHandler example-handler .sum
apache.sumr->handler“example-handler”
handlerexample-handler
2  
module AP_MODULE_DECLARE_DATA   example_module =
{
    STANDARD20_MODULE_STUFF,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    register_hooks   /* Our hook registering function */
};
example_moduleregister_hooks
register_hooks:
static void register_hooks(apr_pool_t *pool)
{
    /* Create a hook in the request handler, so we get called when a request arrives */
    ap_hook_handler(example_handler, NULL, NULL, APR_HOOK_LAST);
}
register_hooks ap_hook_handler(example_handler, NULL, NULL, APR_HOOK_LAST); ap_hook_handler
apacheapiap_*handlerexample_handler
example—handler
example_handler
static int example_handler(request_rec *r)
{
    /* First off, we need to check if this is a call for the "example-handler" handler.
     * If it is, we accept it and do our things, if not, we simply return DECLINED,
     * and the server will try somewhere else.
     */
    if (!r->handler || strcmp(r->handler, "example-handler")) return (DECLINED);  //r->handlerexample
    /* Now that we are handling this request, we'll write out "Hello, world!" to the client.
     * To do so, we must first set the appropriate content type, followed by our output.
     */
example_handler AddHandler example-handler .sum example-handler
3 example 
1. AddHandler example-handler .sum handler
2. register_hooks
3. register_hooksap_hook_handlerhandler
4. ap_hook_handlerexample_handler
5. example_handlerhandler
0x02 apache 
apache
1. httpd
2. 
3. MPM
    ap_set_content_type(r, "text/html");
    ap_rprintf(r, "Hello, world!");
    /* Lastly, we must tell the server that we took care of this request and everything went fine.
     * We do so by simply returning the value OK to the server.
     */
    return OK;
}
4. apacheapachewritemd5apr
5. apr
apache
1. 
2. 
3. apr
0x03  
url
demoap_hook_handlerapache
0x04 hook 
ap_hook
1. 
2. insert_filterap_hook_handler
3. logger
filter
0x05 filter 
filterfilter
static void filter_echo_post_register_hooks(apr_pool_t *p) 
{ 
    ap_register_output_filter(filter_name, case_filter, NULL, AP_FTYPE_RESOURCE); 
}
ap_register_output_filter
 httpd.conf  LoadModule  SetOutputFilter 
LoadModule filter_echo_post_module modules/mod_filter_echo_post.so 
AddOutputFilter CaseFilter .cf
//CaseFilter  .cf  URL 
AP_FTYPE_RESOURCE
apache2.x⸺mod_filter
mod_filter
0x06  
1. 
2. 
3. 
4. 
5. 
6. log