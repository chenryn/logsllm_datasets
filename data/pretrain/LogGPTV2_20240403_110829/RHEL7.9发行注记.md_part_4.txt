    文件中的吞吐量。
    使用以下选项可以禁用 microcode 缓解方案：
    ::: itemizedlist
    -   `off`{.literal} - 禁用缓解方案并消除对 `RDRAND 和`{.literal}
        `RDSEED`{.literal} 的性能影响。
    :::
:::
:::
::: section
::: titlepage
# []{#kernel_parameters_changes.html#new_proc_sys_kernel_parameters}新的 /proc/sys/kernel/ 参数 {.title}
:::
::: variablelist
[hyperv_record_panic_msg]{.term}
:   这个参数控制是否将 panic 内核（kmsg）数据报告到 Hyper-V。
    值是：
    ::: itemizedlist
    -   `0`{.literal} - 不报告 panic kmsg 数据。
    -   `1`{.literal} - 报告 panic kmsg 数据.这是默认的行为。
    :::
:::
:::
:::
[]{#device_drivers.html}
::: chapter
::: titlepage
# []{#device_drivers.html#device_drivers}第 5 章 设备驱动程序 {.title}
:::
本章全面列出了所有新的或者在 Red Hat Enterprise Linux 7.9
中更新的设备驱动程序。
::: section
::: titlepage
# []{#device_drivers.html#new_drivers}新驱动程序 {.title}
:::
### []{#device_drivers.html#_graphics_drivers_and_miscellaneous_drivers}图形驱动程序和各种驱动程序
::: itemizedlist
-   MC Driver for Intel 10nm server processors (i10nm_edac.ko.xz)
:::
:::
::: section
::: titlepage
# []{#device_drivers.html#updated_drivers}更新的驱动程序 {.title}
:::
### []{#device_drivers.html#_network_driver_updates}网络驱动程序更新
::: itemizedlist
-   Netronome Flow Processor (NFP) driver (nfp.ko.xz) 已更新到版本
    3.10.0-1150.el7.x86_64。
-   VMware vmxnet3 virtual NIC driver(vmxnet3.ko.xz)已更新至 1.4.17.0-k
    版本。
:::
### []{#device_drivers.html#_storage_driver_updates}存储驱动程序更新
::: itemizedlist
-   QLogic FCoE Driver(bnx2fc.ko.xz)更新至 2.12.13 版本。
-   HP Smart Array Controller(hpsa.ko.xz)的 driver 已更新至
    3.4.20-170-RH5 版本。
-   Broadcom MegaRAID SAS Driver(megaraid_sas.ko.xz)已更新至版本
    07.714.04.00-rh1。
-   QLogic Fibre Channel HBA Driver(qla2xxx.ko.xz)更新至
    10.01.00.22.07.9-k 版本。
-   Microsemi Smart Family Controller
    版本的驱动程序(smartpqi.ko.xz)更新至 1.2.10-099 版本。
:::
:::
:::
[]{#bug_fixes.html}
::: chapter
::: titlepage
# []{#bug_fixes.html#bug_fixes}第 6 章 显著的程序漏洞修复 {.title}
:::
本章论述了 Red Hat Enterprise Linux 7.9 中修复的对用户有严重影响的漏洞。
::: section
::: titlepage
# []{#bug_fixes.html#bug-fix_authentication-and-interoperability}认证和互操作性 {.title}
:::
[]{#bug_fixes.html#BZ-1801327}
::: title
**当使用 SASL 绑定到 Directory Server 时，不再会出现死锁**
:::
在以前的版本中，SASL 绑定到 Directory
服务器可能会尝试使用在连接过程中修改的回调。因此，会出现死锁，Directory
Server
可能会意外终止。在这个版本中，服务器使用连接锁定来防止在使用时修改 IO
层和回调。因此，在使用 SASL 绑定时死锁不再发生。
([BZ#1801327](https://bugzilla.redhat.com/show_bug.cgi?id=1801327){.link})
[]{#bug_fixes.html#BZ-1700987}
::: title
**`389-ds-base`{.literal} 软件包现在对 Directory Server
用户拥有的目录设置所需的权限**
:::
如果 Directory Server
用户拥有的文件系统中的目录没有正确的权限，Directory
服务器实用程序会相应地调整它们。但是，如果这些权限与 RPM
安装期间设置的权限不同，请使用 `rpm -V 389-ds-base`{.literal} 命令验证
RPM 失败。在这个版本中，RPM 中的权限已被修复。因此，验证
`389-ds-base`{.literal} 软件包不再提示权限不正确。
([BZ#1700987)](https://bugzilla.redhat.com/show_bug.cgi?id=1700987){.link}
[]{#bug_fixes.html#BZ-1796558}
::: title
**在带有 IPv6 的 ACI 中使用 `ip`{.literal} binding
规则时，目录服务器中的内存泄漏已被修复**
:::
目录服务器（Directory Server）中的 Access Control
Instruction(ACI)上下文附加到连接中,其中包含 IPv4 和 IPv6
协议的结构。在以前的版本中，当客户端关闭连接时，目录服务器会删除唯一的
IPv4 结构和上下文。因此，如果管理员使用 `ip`{.literal} binding
规则配置了 ACI，Directory 服务器会泄漏 IPv6
结构的内存。在这个版本中，服务器会在连接结束时释放 IPv4 和 IPv6
结构。因此，Directory 服务器不再会泄漏上述场景中的内存。
([BZ#1796558)](https://bugzilla.redhat.com/show_bug.cgi?id=1796558){.link}
[]{#bug_fixes.html#BZ-1769418}
::: title
**当使用带有 `ip`{.literal} bind 规则的 ACI 时，目录服务器不再泄漏内存**
:::
当 Directory Server Access Control Instruction(ACI)包含 `ip`{.literal}
bind 规则时，服务器会在评估 ACI 时存储 `ip`{.literal}
关键字的值作为参考。在以前的版本中，当评估完成时，目录服务器没有释放
`ip`{.literal} 值。因此，当服务器每次使用 `ip`{.literal} bind 规则评估
ACI 时，服务器都会泄漏大约 100 字节的内存。在这个版本中，Directory
服务器会跟踪每个连接结构中的 `ip`{.literal}
值，并在连接关闭时释放结构。因此，Directory
服务器不再泄漏上述场景中的内存数据。
([BZ#1769418](https://bugzilla.redhat.com/show_bug.cgi?id=1769418){.link})
[]{#bug_fixes.html#BZ-1807537}
::: title
**目录服务器不再拒绝 `rootdn-allow-ip 和 rootdn-`{.literal} deny-ip
参数``{=html} 中的通配符**
:::
在以前的版本中，当管理员试图在 `rootdn-allow-ip 或 rootdn-`{.literal}
`deny-ip`{.literal} 参数中设置通配符时，c
`n=RootDN 访问控制插件,cn=plugins,cn=config`{.literal}
条目会拒绝这个值。在这个版本中，您可以在上述参数中指定允许或拒绝 IP
地址时，使用通配符。
([BZ#1807537)](https://bugzilla.redhat.com/show_bug.cgi?id=1807537){.link}
[]{#bug_fixes.html#BZ-1837105}
::: title
**如果检索系统时间失败或者时间差太大，则目录服务器会拒绝更新操作**
:::
在以前的版本中，当调用系统 time()
失败或者返回一个意外值时，目录服务器中的更改顺序号（CSN）可能会被破坏。因此，管理员需要重新初始化环境中的所有副本。在这个版本中，如果
time()
函数失败，目录服务器会拒绝更新操作，且目录服务器不会在上述场景中破坏
CSN。
请注意，如果时间差异大于一天，服务器
`会记录 INFO - csngen_new_csn - /var/log/dirsrv/slapd-/error`{.literal}
文件中的 CSN
时间消息中检测到大型跳过``{=html}。但是，目录服务器仍然创建
CSN，且不会拒绝更新操作。
([BZ#1837105)](https://bugzilla.redhat.com/show_bug.cgi?id=1837105){.link}
[]{#bug_fixes.html#BZ-1824930}
::: title
**更新 schema 时目录服务器不再挂起**
:::
在以前的版本中，当混合存在搜索和修改负载时，更新目录服务器的 schema
会阻断所有搜索和修改操作，服务器会出现挂起的情况。在这个版本中，会在
schema 更新过程中调整 mutex 锁定。因此，服务器在更新 schema 时不会挂起。
([BZ#1824930](https://bugzilla.redhat.com/show_bug.cgi?id=1824930){.link})
[]{#bug_fixes.html#BZ-1827284}
::: title
**使用间接 COS 定义时目录服务器不再泄漏内存**
:::
在以前的版本中,在处理一个间接 Class Of Service (COS) 定义后， Directory
Server 会在每个使用间接 COS 定义的搜索操作中泄漏内存。在这个版本中,
Directory 服务器会在处理后释放所有与数据库条目关联的内部 COS
结构。因此，当使用间接 COS 定义时，服务器不会再泄漏内存。
([BZ#1827284)](https://bugzilla.redhat.com/show_bug.cgi?id=1827284){.link}
[]{#bug_fixes.html#BZ-1733289}
::: title
**使用 SSSD 发送到 AD 客户端的密码过期通知**
:::
在以前的版本中，使用 SSSD 的 Active Directory 客户端（非
IdM）不会发送密码过期通知，因为 SSSD 界面最近更改了获取 Kerberos 凭证。
Kerberos 界面已更新,现在正确发送过期通知。
（[BZ#1733289](https://bugzilla.redhat.com/show_bug.cgi?id=1733289){.link}）
[]{#bug_fixes.html#BZ-1782492}
::: title
**KDC 现在从 LDAP 后端正确强制使用密码生命周期策略**
:::
在以前的版本中，非 IPA Kerberos
分发中心(KDC)无法确保最大密码生命周期，因为 Kerberos LDAP
后端强制的密码策略不正确。在这个版本中，Kerberos LDAP
后端已被修复，密码生命周期可以正常工作。
([BZ#1782492)](https://bugzilla.redhat.com/show_bug.cgi?id=1782492){.link}
[]{#bug_fixes.html#BZ-1487418}
::: title
**现在，`pkidaemon`{.literal} 工具会在启用 `nuxwdog`{.literal} 时报告
PKI 实例的正确状态**
:::
在以前的版本中，`pkidaemon status`{.literal} 命令无法报告启用了
`nuxwdog`{.literal} watchdog watchdog 的 PKI
服务器实例的正确状态。在这个版本中，`pkidaemon`{.literal}
会检测是否启用了 `nuxwdog`{.literal}，并报告 PKI 服务器的正确状态。
([BZ#1487418](https://bugzilla.redhat.com/show_bug.cgi?id=1487418){.link})
:::
::: section
::: titlepage
# []{#bug_fixes.html#bug-fix_compiler-and-tools}编译器和工具 {.title}
:::
[]{#bug_fixes.html#BZ-1751381}
::: title
**`Time::Piece`{.literal} Perl 模块的 `strptime（）方法`{.literal}
现在可以正确地解析 Julian 日期**
:::
`Time::Piece`{.literal} Perl 模块没有使用 `strptime（）方法`{.literal}
正确解析一年的某一天(`%j`{.literal})。因此，Julian
日期被错误解析。这个程序错误已被解决，`Time::Piece`{.literal} 模块提供的
`strptime（）方法`{.literal} 现在可以正确处理 Julian 日期。
([BZ#1751381)](https://bugzilla.redhat.com/show_bug.cgi?id=1751381){.link}
[]{#bug_fixes.html#BZ-1806523}
::: title
**`perl-devel`{.literal} 中的文档文件不再对组具有写入权限**
:::
在以前的版本中，perl `-devel`{.literal}
软件包中的某些文档文件为组设置了写入权限。因此，root
组中的用户可能会写入这些文件，这代表了一个安全隐患。在这个版本中，受影响文件的对于一个组的写操作位已被删除。因此，`perl-devel`{.literal}
中的文档文件不会为组设置写入权限。