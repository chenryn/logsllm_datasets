The end-to-end effects of internet path selection. In
Proceedings of the SIGCOMM ’99 Symposium on
Communications Architectures and Protocols, pages
289–299, 1999.
[33] L. Subramanian, S. Agarwal, J. Rexford, and R. H. Katz.
Characterizing the Internet hierarchy from multiple vantage
points. In Proceedings of IEEE INFOCOM, June 2002.
[34] Traceroute.org. http://www.traceroute.org.
[35] Y. Zhang, L. Breslau, V. Paxson, and S. Shenker. On the
characteristics and origins of Internet ﬂow rates. In
Proceedings of ACM SIGCOMM, Pittsburgh, PA, August
2002.
[36] Y. Zhang, N. Dufﬁeld, V. Paxson, and S. Shenker. On the
constancy of Internet path properties. In Proceedings of ACM
SIGCOMM Internet Measurement Workshop (IMW),
November 2001.
[37] Y. Zhang, V. Paxson, and S. Shenker. The stationarity of
internet path properties: Routing, loss, and throughput.
Technical report, ICSI Center for Internet Research, May
2000.
APPENDIX
BFind Validation: Simulation Results
In Section 2.3.3, we presented a small set of results from wide-area
experiments that compare the performance of BFind against similar
tools. Our results showed that the output of BFind is consistent
with other tools on the paths probed.
In this section, we extend
"Setting 1"
"Setting 2"
100M
100M
100M
1ms
22M/45M
100M
100M
100M
100M
100M
155M
155M
155M
155M
22M/45M
155M
100M
100M
100M
100M
100M
100M
155M
155M
155M
155M
155M
100M
100M
"Close"
"Middle"
22M/45M
100M
"Far"
1ms
Hop 2
1ms
5ms
10ms
Hop 5
5ms
1ms
1ms
20ms
Hop 9
5ms
"Setting 1"
"Setting 2"
(a) Single bottleneck
100M
100M
100M
1ms
22M/45M 22M/45M
22M/45M
100M
22M/45M
100M
155M
155M
155M
155M
22M/45M
155M
100M
100M
100M
100M
100M
100M
155M
155M
155M
155M
155M
100M
100M
"Close"
"Middle"
22M/45M
100M
"Far"
1ms
Hop 2
1ms
5ms
10ms
Hop 5
5ms
1ms
1ms
20ms
Hop 9
5ms
(b) Two bottlenecks
Figure 8: Topology used in our NS simulations. The topologies are explained in detail below. “M” stands for Mbps. The ﬁrst row
corresponds to location of the bottleneck link being “close”, the second corresponds to “middle” and the third to “far”.
Location
Close (2nd hop)
Middle (5th hop)
Far (9th hop)
BFind Output
2
5
9
Available BW (BFind)
Capacity = 22Mbps (“Setting 1”)
Time
17.1
20.6
19.6
5.8
6.2
6.2
Capacity of bottleneck link
TCP Throughput
BFind Output
4.6
5.12
4.5
2
5
9
Available BW (BFind)
Capacity = 45Mbps (“Setting 2”)
Time
26.1
51.1
57.1
8.2
15.8
20.2
TCP Throughput
20.53
23.1
24.09
Table 5: The bandwidth-probing performance of BFind. The table shows, for each of the six conﬁgurations of the topology in
Figure 8(a), the output obtained from BFind and its comparison with a TCP ﬂow on the bottleneck hop.
the validation results with simulation experiments in NS-2 [22] to
address the following issues about BFind:
1. How accurately, and quickly, can BFind estimate the location
of bottlenecks? Does the capacity of the bottleneck links or
their location on the path impact the speed or accuracy? How
does the presence of multiple bottlenecks affect the detection?
2. How does the bandwidth probing behavior of BFind compare
with that of a TCP ﬂow across the bottleneck link? Is BFind
more or less aggressive than TCP?
3. How does BFind compete with long-lived TCP cross trafﬁc
while probing for available bandwidth at a bottleneck link
(given that the bottleneck faced by the competing TCP ﬂows
is different from that faced by BFind)?
Our simulations in this section are meant to validate the sound-
ness of the methodology used by BFind and show that BFind does
not yield incorrect results. However, this is not a substitute for ad-
ditional wide-area experimental validation.
To address the above issues, we ported BFind to NS-2. We setup
path topologies shown in Figure 8(a) and (b).6 In either ﬁgure, the
path contains 10 hops (the delays used are those observed on tracer-
outes from a machine in CMU and www.amazon.com, where the
hop-by-hop delays are computed as mentioned in Section 2.3.1).
The capacity of the non-bottleneck links in the path is shown in
normal-faced font. For example, in either topology, the capacity of
link 1 is 100Mbps. In Figure 8(a), there is exactly one bottleneck in
the path. To test the probing behavior of BFind we vary the location
of this bottleneck link along the path (between “close”, “middle”
6We chose not to experiment with more complicated topologies
since BFind probes only along a single path. As a result, all other
nodes and links in the topology become auxiliary.
and “far”, as explained below), as well as its raw capacity (between
22Mbps - referred to as “Setting 1” - and, 45Mbps - referred to as
“Setting 2” shown in italicized bold font). In Figure 8(a), when
the location of the bottleneck link is “close”, hop 2 is the bottle-
neck link; when the location is “middle”, hop 5 is the bottleneck;
and when the location is “far”, hop 9 is the bottleneck. Therefore,
Figure 8(a) pictorially summarizes 6 different experiments with a
single bottleneck link on the path – 3 different bottleneck “Loca-
tions”, each with 2 different bandwidth “Settings”.
The topology in Figure 8(b), on the other hand, has two similar
bottleneck links. In “Setting 1”, both links have an identical capac-
ity of 22Mbps; in “Setting 2”, they have an identical capacity of
45Mbps. When the “Location” of the bottlenecks is “close”, hops
2 and 3 are chosen to be the identical bottleneck links; when it is
“middle”, hops 2 and 5 are the bottlenecks; and when it is “far”,
hops 2 and 9 are the bottlenecks.
In either topology, unless otherwise speciﬁed, there is cross traf-
ﬁc between neighboring routers. The cross trafﬁc consists of 25
HTTP sessions in NS-2, each conﬁgured with 25 maximum con-
nections. In addition, the cross trafﬁc also includes 25 constant rate
UDP ﬂows with default parameters as set in NS-2. Cross trafﬁc on
the reverse path between neighboring routers is also similar. Notice
that the cross trafﬁc on all hops is similar, in the average sense.
In Table 5, we show the performance of BFind on the topology
in Figure 8(a). In this Figure, for each of the six experiments sum-
marized in Figure 8(a), we show if BFind correctly identiﬁes the
appropriate bottleneck (for example, the bottleneck corresponding
to location “close” should be hop 2), the time taken until detec-
tion, and the available bandwidth reported by BFind. In addition,
we also report the average throughput of a TCP connection whose
end-points are routers at either end of the bottleneck link. For ex-
ample, when location is “middle”, the TCP ﬂow runs from router-4
Location
Capacity = 22Mbps (“Setting 1”)
BFind Output
Capacity = 45Mbps (“Setting 2”)
BFind Output
Capacity of bottleneck link
Close (2nd and 3rd hops)
Middle (2nd and 5th hops)
Far (2nd and 9th hops)
2
5
9
Table 6: Performance of BFind in the presence of two similar bottlenecks. The table shows the hops identiﬁed by BFind as being the
bottleneck in each of the six conﬁgurations in Figure 8(b), and the time taken to reach the conclusion.
Time
17.1
22.1
17.1
Time
20.6
17.1
17.1
2
2
2
2
2
2
Time
17.1
29.6
38.6
Time
46.6
20.1
27.6
Location
Capacity = 22Mbps (“Setting 1”)
BFind Output
Capacity = 45Mbps (“Setting 2”)
BFind Output
Capacity of bottleneck link
Close (2nd and 3rd hops)
Middle (2nd and 5th hops)
Far (2nd and 9th hops)
3
2
2
Table 7: Performance of BFind in the presence of two slightly different bottlenecks. The table shows the hops identiﬁed by BFind as
being the bottleneck in each of the six conﬁgurations in Figure 8(b) when the bandwidth of one of the hops on the path is chosen to
be slightly higher than that of the other.
d
n
i
F
B
y
b
d
e
t
r
o
p
e
r
h
t
d
i
w
d
n
a
b
e
l
b
a
l
i
a
v
A
40
35
30
25
20
15
10
5
0
Setting 1: BFind Output
Setting 2: BFind Output
5
10
15
Number of Flows
20
25
Figure 9: BFind interaction with competing long-lived TCP
ﬂows. The ﬁgures plots the available bandwidth reported by
BFind for the topology in Settings 1 and 2, when competing
long-lived TCP ﬂows on the bottleneck hops are constrained to
at most 10Mbps.
indicating that BFind does not have undesirable interactions with
competing TCP trafﬁc. In “Setting 1”, the bandwidth from BFind
is almost exactly 12Mbps as long as N ≥ 5, again, reinforcing the
fact that BFind competes fairly with long-lived TCP trafﬁc (though
in the RTT-proportional fairness sense, BFind is unfair).
to router-5, where the underlying path has a base-RTT of 20ms.
Also, the TCP connection runs under the exact same conditions of
cross trafﬁc as BFind. When running the TCP connection, obvi-
ously, BFind is not run in parallel.
The results presented in Table 5 show that: (1) BFind accurately
determines bottleneck links for both capacity values. When the
capacity of the bottleneck link is higher, the time taken by BFind
is not necessarily worse. (2) The throughput probed by BFind is
roughly similar to that achieved by the TCP connection. When
the capacity of the bottleneck link is low, BFind probes somewhat
more aggressively than TCP; however, when the capacity is higher,
BFind does not probe as aggressively.
In Table 6, we show the results for the performance of BFind
in the presence of two, very similar, bottlenecks along a path (the
topology in Figure 8(b)). The results show that BFind identiﬁes
one of the two links as being a bottleneck. However, the output is
non-deterministic. For example, BFind identiﬁes, hops 2, 5 and 9
as being the bottlenecks in “Setting 1” across different “location”s.
To further investigate BFind’s ability to detect bottlenecks where
multiples may exist along a path, we slightly modiﬁed the topology
in Figure 8(b) as follows: instead of having two identical bottle-
necks along the path, we deliberately set one of them to a slightly
higher capacity. In “Setting 1”, the second bottleneck link in each
case – hop 3 (location being “close”), 5 (location being “middle”)
and 9 (location being “far”) – had a capacity of 25Mbps (instead
of 22Mbps previously). In “Setting 2”, the capacity of the second
link was chosen to be 50Mbps. The results for these experiments
are shown in Table 7. In almost all cases, BFind correctly identiﬁes
hop 2 as the bottleneck link, despite almost similar capacity of the
second potential bottleneck along the hop. Also, the time taken for
detection is not necessarily worse.
We also show results demonstrating the interaction of BFind with
competing long-lived TCP trafﬁc. For these simulations, we use the
single bottleneck topology in Figure 8(a), with a location of “mid”
(i.e., bottleneck is hop 5). We eliminated cross trafﬁc along hop 5
and, instead, started N long-lived TCP ﬂows between router-4 and
router-5 such that the total bandwidth achieved by the TCP ﬂows
is at most 10Mbps at any point of time. We then started BFind on
router 0 to probe for the available capacity on the bottleneck link,
hop 5. Notice that in “Setting 1”, BFind should report an available
capacity of at most 12Mbps (since the raw capacity is 22Mbps),
while in “Setting 2”, it should report at most 35Mbps. In Figure 9,
we plot the available bandwidth reported by BFind in either set-
ting, as a function of the number of TCP ﬂows, N.
In “Setting
2”, the bandwidth reported by BFind is always lower than 35Mbps,