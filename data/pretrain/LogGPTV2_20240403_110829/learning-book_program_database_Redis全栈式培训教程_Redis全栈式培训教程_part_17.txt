acl setuser longge on >123456 &* ~* +@all
增加用户longge，并且拥有所有命令权限
acl setuser longge on >123456 &* ~ +@all @string
增加用户longge，并且拥有所有命令权限（除开@string类命令)
acl setuser longge on >123456 &* ~* +@all -@hash -@write
增加用户longge，并且拥有所有命令权限（除开@hash和@write类命令）
acl setuser longge on >123456 &* ~* -@all +get +set
增加用户longge，并且无任何命令权限（除命令get、set外）
acl setuser longge
增加用户longge，没有密码，被禁止，没有任何命令权限
注意：
setuser命令是叠加的，并不是重置，也就是说，每次调用 setuser是在前一次的基础上进行，这里大家一定要注意
春风阁讲堂出品
201
---
## Page 202
12.3.6.键值权限规则
配置说明：
配置项
说明
所有键值，等同allkeys
allkeys
所有键值，等同~*
resetkeys
重置为默认值，相当于为空
~h?llo
匹配hello,hallo and hxllo
~h*1lo
匹配 hllo and heeeello
~h[ae]llo
匹配hello and hallo, but not hillo
~h[^e]llo
匹配hallo, hbllo, .. but not hello
~h[a-b]llo
匹配 hallo and hbllo
样例配置：
样例配置
业务说明
acl setuser longge on >123456 &* ~k* +@all
增加用户longge，匹配k开头的键
acl setuser longge on >123456 &* ~k* ~a* +@all1
增加用户longge，匹配k或者a开头的键
acl setuser longge on >123456 &* ~* +@all
增加用户匹配所有键权限
注意：
setuser命令是叠加的，并不是重置，也就是说，每次调用setuser是在前一次的基础上进行，这里大家一定要注意
春风阁讲堂出品
202
---
## Page 203
12.3.7.订阅&发布规则
配置说明：
配置项
说明
&*
允许用户访问所有Pub/Sub频道的别名
allchannels
所有频道，等同&*
&ch1_*
以chl_开头的频道
resetchannels
重置频道规则
样例配置：
样例配置
业务说明
acl setuser longge on >123456 &* ~* +@all
增加用户longge，匹配所有频道
acl setuser longge on >123456 &ch1_ ~* +@all
增加用户longge，匹配chl_开头的频道
注意：
setuser命令是叠加的，并不是重置，也就是说，每次调用 setuser是在前一次的基础上进行，这里大家一定要注意
春风阁讲堂出品
203
---
## Page 204
12.3.8.
常用命令命令
序号
命令说明
1
ACL HELP
输出ACL命令列表
2
ACL CAT
输出所有命令分类
6
ACL LIST
输出所有ACL用户列表
7
ACL L0AD
从ACL文件中加载用户
8
ACL SAVE
将当前信息保存到ACL文件中去
6
ACL USERS
列出所有ACL用户名称
10
ACL WHOAMI
列出当前登录用户名称
3
ACL DELUSER
删除用户
4
ACL SETUSER
设定用户，该规则最为复杂，参考前面几个章节进行理解
5
ACL GETUSER
获取指定用户信息
春风阁讲堂出品
204
---
## Page 205
12.4.安全认证之TLS
12.4.1.带TLS编译Redis
1、编译的时间采用命令make BUILD_TLS=yes-j2
2、其它与普通的编译没有任何区别，具体参考Redis编译章节
最终形成的文件如下：
[xiangsl@crml67 ssl-redis]$ pwd
/home/xiangsl/ssl-redis
[xiangsl@crml67 ssl-redis]$ tree
bin
redis-benchmark
redis-check-aof
->redis-server
redis-check-rdb -> redis-server
redis-cli
redis-sentinel-> redis-server
redis-server
conf
data
log
run
directories，
6files
[xiangsl@crml67ssl-redis]s
春风阁讲堂出品
205
---
## Page 206
12.4.2.创建TLS证书
1.创建证书(进入ssl-redis根目录)
mkdir -p tls
openss1 genrsa -out tls/ca.key 2048
openssl req
-x509 -new -nodes -sha256 
key tls/ca.key 
-days 3650 
-subj O=Redis Test/CN=Certificate Authority”
out tls/ca.crt
openssl genrsa -out tls/redis.key 2048
openssl req
-new -sha256 
key tls/redis.key 
-subj /O=Redis Test/CN=Server′ |\
605x ssuodo
-req -sha256 
-CA tls/ca.crt 
-CAkey tls/ca.key 
-CAserial tls/ca.txt 
-CAcreateserial
-days 365 
-out tls/redis.crt
openss1 dhparam -out tls/redis.dh 2048
春风阁讲堂出品
206
---
## Page 207
2.生成的文件如下：
[xiangsl@crml67 ssl-redis]$ tree
bin
redis-benchmark
redis-check-aof
redis-server
redis-check-rdb
redis-server
redis-cli
redis-sentinel
redis-server
redis-server
conf
redis_6900.conf
data
log
run
tls
ca.crt
ca.key
ca.txt
redis.crt
redis.dh
redis.key
6directories,13 files
[xiangsl@crml67 ssl-redis]$
春风阁讲堂出品
207
---
## Page 208
12.4.3.配置redis.conf
主要修改配置如下：
0 uod
tls-port 6377
tls-cert-file /home/xiangsl/ssl-redis/tls/redis.crt
tls-key-file /home/xiangsl/ssl-redis/tls/redis.key
tls-dh-params-file /home/xiangsl/ssl-redis/tls/redis.dh
tls-ca-cert-file /home/xiangsl/ssl-redis/tls/ca.crt
tls-ca-cert-dir /home/xiangsl/ssl-redis/tls
注意：
1.
证书相关的目录最好采用绝对路径，避免启动的时候证书路径不对
2.其它的配置参考环境安装中进行修改
春风阁讲堂出品
208
---
## Page 209
12.4.4.Redis服务启动
1.如果前一章节没有配置的话，那么在启动的时候就要指定证书相关路径，如下：
/home/xiangsl/ssl-redis/bin/redis-server --tls-port 6377 --port 0 ^
-tls-cert-file /home/xiangsl/ssl-redis/tls/redis.crt 
-tls-key-file /home/xiangsl/ssl-redis/tls/redis.key 
-tls-ca-cert-file /home/xiangsl/ssl-redis/tls/ca.crt 
--tls-dh-params-file /home/xiangsl/ssl-redis/tls/redis.dh
2.如果有在redis.conf中配置的话，那么直接启动即可
/home/xiangsl/ssl-redis/bin/redis-server /home/xiangsl/ssl-redis/conf/redis_6377.conf
春风阁讲堂出品
209
---
## Page 210
12.4.5.Redis客户端连接
/home/xiangsl/ssl-redis/bin/redis-cli -p 6377 --tls 
-cert /home/xiangsl/ssl-redis/tls/redis.crt
key /home/xiangsl/ssl-redis/tls/redis.key 
-cacert /home/xiangsl/ssl-redis/tls/ca.crt
这里，大家最好写成脚本的方式
12.4.6.关于TLS生产建议
2.Redis在启动TLS后，对系统资源也会增加消耗
3.所以如果是在内网部署，一般不建议启用TLS
春风阁讲堂出品
210
---
## Page 211
12.5.数据备份与恢复
12.5.1.通过RDB方式
备份方式
1.可以通过Redis配置进行自动备份
2.可以通过bgsave、save命令进行手工备份
3.可以用 redis-cli-h 192.168.128.167-p 6379 --rdb test.dump 进行远程备份(建议)
4.按数据重要程度，dump.rdb可以进行本机备份、跨主机备份、跨机房备份、异地备份
恢复过程
1.Redis配置只开启RDB模式，注意：AOF和混合模式不能开启
2.采用shutdown nosave停止redis节点
3.将dump.rdb导入，重启即可
4.如果是集群模式，需要根据异常主节点的数量，进行重复多次
Redis只是提供了一种技术机制，真正生产上，可能要复杂的多
线上环境一定要进行多次演练，并且配合一些外部工具，达到故障快速
春风阁讲堂出品
11Z
---
## Page 212
12.5.2.通过AOF方式
备份方式
1.可以通过Redis配置进行自动写入
2.可以通过bgrewriteaof命令进行手工写入
3.按数据重要程度，appendonly.aof可以进行本机备份、跨主机备份、跨机房备份、异地备份
恢复过程
1.Redis配置开启AOF模式
2.将appendonly.aof导入，重启即可
3.如果是集群模式，需要根据异常主节点的数量，进行重复多次
Redis只是提供了一种技术机制，真正生产上，可能要复杂的多
线上环境一定要进行多次演练，并且配合一些外部工具，达到故障快速
春风阁讲堂出品
212
---
## Page 213
12.5.3.通过混合模式
混合模式下生成的文件也是AOF，所以它和AOF模式几乎一样，除了配置上aof-use-rdb-preamble不一样外
大家注意：采用何种备份模式，就采用何种恢复模式，这个绝对不能混用
春风阁讲堂出品
213
---
## Page 214
12.5.4.其它方式恢复
这里主要从业务上考虑，比如我们可以将数据归类
数据分类
恢复方式
其它处理
纯热点数据
不恢复
应用程序慢热加载
可从外部加载(少量)
启动后快速写入
外部程序加载
可从外部加载(大量)
启动后快速写入，时间稍长
外部程序加载+应用程序慢热加载
不可从外部加载的生产数据
必须恢复
其它机制
1.
一般在第1、2、3场景中，应用会做熔断性考虑，即在Redis出现问题的情况下，程序仍然可用，并且可自行慢热加载
2.
第4种场景对Redis要求相对比较高，所以通常我们是针对性的部署独立集群、1主多从、备份等方面来考虑更高的容灾性
3.关于外部程序进行数据恢复，我们在第13章里面，会介绍到数据的导入和导出
春风阁讲堂出品
214
---
## Page 215
12.6.Redis中的扩缩容
12.6.1.线上扩容子集群
现有集群扩容
序号
端口号
说明
1
6381(主)
2
6382(主)
3
6383(主)
6384(从)
Redis Cluster集群环境(3主3从)
4
5
6385(从)
6
6386(从)
7
6387(主)
扩容节点1
8
()889
扩容节点1
1.
增加主节点：
redis-c1i a 123456
-c1uster addnode 192. 168. 128. 167 :6387 192. 168. 128. 167:6381
增加从节点：
redis-c1i a 123456
c1uster addnode 192. 168. 128. 167 :6388 192. 168. 128. 167 :6381
1 --cluster-slave
--clustermasterid
0d77af6e29a5d11ecb9cadbd6ceb282cceaca2c4
3.slot 平衡：
redisc1i a 123456 -cluster rebalance 192. 168. 128. 167:6381 clusteruseemptymasters -clusterreplace
春风阁讲堂出品
215
---
## Page 216
12.6.2.线上缩容子集群
序号
端口号
说明
1
6381(主)
2
6382(主)
3
6383(主)
4
6384(从)
Redis Cluster集群环境(4主4从)
5
6385(从)
本次缩容是将6387和6388从中摘除
6
6386(从)
7
6387(主）
8
6388(从)
1.
迁移数据
redisc1i -a 123456 cluster reshard 192. 168. 128. 167:6381 -clusterfrom b6946d79013976f8128d1af8d80f4e9aa944511a clusterto
删除从节点
redisc1i a 123456 c1uster de1node 192. 168. 128. 167:6388 b2dfff10ab023e207481271d789361ac6aab4b5e
3.
删除主节点
redisc1i a 123456 c1uster de1node 192. 168. 128. 167:6387 b6946d79013976f8128d1af8d80f4e9aa944511a
4.slot平衡：
redisc1i a 123456 cluster rebalance 192. 168. 128. 167:6381 --clusteruse-emptymasters -clusterreplace
春风阁讲堂出品
216