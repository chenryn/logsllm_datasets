title:Analysis of Location Data Leakage in the Internet Traffic of Android-based
Mobile Devices
author:Nir Sivan and
Ron Bitton and
Asaf Shabtai
Analysis of Location Data Leakage in the
Internet Trafﬁc of Android-based Mobile Devices
Nir Sivan, Ron Bitton, Asaf Shabtai
Department of Software and Information Systems Engineering
Ben Gurion University of the Negev
Abstract
In recent years we have witnessed a shift towards personal-
ized, context-based services for mobile devices. A key com-
ponent of many of these services is the ability to infer the
current location and predict the future location of users based
on location sensors embedded in the devices. Such knowledge
enables service providers to present relevant and timely offers
to their users and better manage trafﬁc congestion control,
thus increasing customer satisfaction and engagement. How-
ever, such services suffer from location data leakage which
has become one of today’s most concerning privacy issues for
smartphone users. In this paper we focus speciﬁcally on loca-
tion data that is exposed by Android applications via Internet
network trafﬁc in plaintext without the user’s awareness. We
present an empirical evaluation involving the network traf-
ﬁc of real mobile device users, aimed at: (1) measuring the
extent of relevant location data leakage in the Internet traf-
ﬁc of Android-based smartphone devices; (2) understanding
the value of this data and the ability to infer users’ points
of interests (POIs); and (3) deriving a step-by-step attack
aimed at inferring the user’s POIs under realistic, real-world
assumptions. This was achieved by analyzing the Internet
trafﬁc recorded from the smartphones of a group of 71 par-
ticipants for an average period of 37 days. We also propose
a procedure for mining and ﬁltering location data from raw
network trafﬁc and utilize geolocation clustering methods to
infer users’ POIs. The key ﬁndings of this research center on
the extent of this phenomenon in terms of both ubiquity and
severity; we found that over 85% of the users’ devices leaked
location data, and the exposure rate of users’ POIs, derived
from the relatively sparse leakage indicators, is around 61%.
1
Introduction
In recent years, there has been a trend towards the person-
alization of services in many areas. This is particularly true
for services provided on mobile devices, where a plethora of
context-based applications (e.g., Yelp, Uber, Google Maps)
are used daily by millions of people. These devices possess
a tremendous amount of private information, ranging from
users’ personal and ﬁnancial data to their location data, mak-
ing such devices the target of personalized advertisements (by
commercial entities) and intelligence gathering. A key prop-
erty of many of these services is the ability to understand the
users’ current location, infer points of interest, and predict the
future location of users based on location sensors embedded
in the devices. Such knowledge enables service providers to
present relevant and timely services (such as navigation rec-
ommendations, weather forecasts, advertisements, and social
networks) to their users, thus increasing customer satisfac-
tion and engagement. Methods for deriving the location of
a mobile device can be categorized into the following two
approaches.
In the host-based approach, an installed application can infer
the location of the device by probing built-in sensors or evalu-
ating data provided when a user checks in to a place on social
media. Local sensors that can provide location data include
hotspot (Wi-Fi) information such as the SSID and BSSID [1],
connected cell tower, as well as GPS [2]. The location can
also be inferred by using various side-channel attacks such as
power supply variance analysis [3].
In the network-based approach, the location of the mobile
device can be derived by using cell tower triangulation [4]
(i.e., using radio location by analyzing signals received by
the cell towers the device is connected to) or by analyzing
the CDRs [5]. This requires high privileged access to the
data which is usually available to service providers and law
enforcement agencies.
In order to utilize location traces as a meaningful informa-
tion source, it is imperative to analyze the data and aggregate
it to location clusters that are important to the user, such as
home, shopping, or work [2]. These locations are also known
as the users’ points of interest (POIs). The most common
approach for inferring a user’s POIs is by clustering the lo-
cation traces by distance and time thresholds; eventually, a
cluster will be produced if the user stays in the same place
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 243for a sufﬁcient amount of time. POIs are identiﬁed by under-
standing which clusters are important to the user and omitting
less important data such as transit data [6, 7].
Location data collected on the mobile device may be pro-
vided to third party services by applications or leaked by a
malicious application [8]. Recent research has reported a high
rate of personal data leakage by popular applications over
insecure communication channels without users’ awareness.
These studies also showed that location data is one of the most
"popular" leaked personally identiﬁable information (PII), as
10% of the most popular applications leak location data in
plain text [8]. In fact, according to Trend Micro, the location
permission was identiﬁed as the most abused Android applica-
tion permission.1 This privacy breach was also acknowledged
during the 2018 DEFCON workshops, when applications of
both iOS and Android-based devices were detected sending
accurate location data in unencrypted formats.2
Recent research investigated the privacy risks to mobile
device users emanating from legitimate or malicious applica-
tions granted permission to access the user’s location. Most
of these works however, focused on analyzing and quantify-
ing the exposure of private data to the speciﬁc application (or
location-based service provider) granted access to the location
data [9–12]. However, in practice, multiple applications with
access to location data are installed on each mobile device.
Hence, there is a need to explore the implications of location
data leakage by multiple applications on the user’s privacy.
One main challenge in conducting research that focuses
on understanding the privacy risks to mobile device users is
the collection of location data accessed and/or sent by appli-
cations, which might require root access. Recent researches
collected data either by running applications in a controlled
environment (e.g., sandboxes) [11, 12] or provided subjects
with alternative (rooted) devices that were not necessarily
used as their primary devices [9]. Previous studies also ana-
lyzed the privacy risk associated with an adversary that can
eavesdrop on the communication of the mobile device. These
works focused mainly on automatically identifying PII.
In this research, we investigate the phenomenon of location
data leakage in the Internet trafﬁc of Android-based smart-
phones, by multiple applications. The main goals of this re-
search are as follows. First, to understand the amount and
quality (relevancy) of location leakage detected in plain text
in the device’s network trafﬁc. Second, to analyze the location
leaks in order to infer the user’s POIs. This task is not trivial
due to the fact that the vast majority of existing POI detec-
tion methods assume a consistent and high rate of location
sampling (e.g., via GPS); therefore, they cannot be directly
applied on noisy and sparse location data, like the data we
focus on in this study (i.e., location data leaked over mobile
1http://about-threats.trendmicro.com/us/library/image-gallery/12-most-
abused-android-app-permissions
2https://arstechnica.com/information-technology/2018/09/dozens-of-
ios-apps-surreptitiously-share-user-location-data-with-tracking-ﬁrms/
device network trafﬁc). Third, to understand the privacy expo-
sure level of users in terms of the number of identiﬁed POIs,
amount of data required for identifying the POIs, accuracy of
the detected POIs, and time spent in the POIs.
In order to achieve these goals, we collected and analyzed
the Internet trafﬁc of 71 smartphone users for an average of 37
days, while the devices were being used routinely. In addition,
we collected the location of the mobile devices by using a
dedicated Android agent (application) that was installed on
the devices and sampled the location sensor. The data col-
lected by the agent was used as the ground truth for the actual
location of the mobile device. The results of our experiment
showed that over 85% of the users’ devices leaked location
data. Furthermore, the exposure rate of users’ POIs, derived
from the relatively sparse leakage indicators, is around 61%.
Even cases of low location leakage rates (once in six hours)
and coverage of only 20% (i.e., 20% of the time during which
location data was accessed by the applications it was leaked)
can expose approximately 70% of the weighted POIs.
In summary, the contributions of this paper are as follows.
First, we explore and discuss the scope, volume and qual-
ity of location-based data leaked via insecure, unencrypted
network trafﬁc of smart mobile devices. We are speciﬁcally in-
terested in exploring the implication of location data leakage
by multiple applications on the user’s privacy, a case which
has not been investigated before. Second, we conduct an em-
pirical evaluation based on real data from mobile devices. The
evaluation involves a unique dataset that was collected simul-
taneously from the device itself and the network trafﬁc sent
from the device; such a dataset from real users’ devices is very
difﬁcult to obtain. Third, we present a methodological process
for collecting, processing, and ﬁltering location-based data
from the network trafﬁc of mobile devices in order to infer the
users’ POIs. We use POI clustering on a sparse, inconsistent
data stream by modifying available clustering algorithms, and
discuss the experimental results and the effectiveness of the
applied process. Finally, to the best of our knowledge, we are
the ﬁrst to present a step-by-step attack aimed at leaking loca-
tion data and inferring users’ POIs from a device’s network
trafﬁc under realistic assumptions.
2 Related Work
2.1 Privacy in location based services
According to the GDPR deﬁnition [13], personal data or per-
sonally identiﬁable information (PII) is any data that can be
used to identify a person, including name, ID, social media
identity, and location. PII leaks are a major privacy concern
for mobile device users. Along with device and user identi-
ﬁers, location leakage is among the private data most com-
monly and extensively leaked from mobile devices [8]. As
a case in point, recent studies showed that it is possible to
de-anonymize users using location traces [14]. Furthermore,
244          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Associationlocation permission is commonly requested by most mobile
apps (25% of apps use precise location, and an even greater
number of apps use coarse location) [15]. Without accurate
knowledge about how each application uses and handles the
location data, access of applications to location API pose a
real threat to users’ privacy.
A summary of related works in this domain is provided in
Table 8. The research can be broadly categorized by the threat
actor that abuses network trafﬁc access in order to disclose
users’ personal information.
The ﬁrst type of threat actor considered in related studies in-
cludes applications that are installed by the user on the mobile
device [1, 9–12, 16–20]. These studies focus on analyzing the
private data that is available to the installed application or the
location-based service provider with which the application is
communicating, and consequently understanding the privacy
risks to which the user is exposed. This can be attempting
to de-anonymize the user by using location traces [9], in-
ferring the user’s POIs [9, 10, 19], or identifying other PII
leaks [11, 12, 16–18, 20]. In most cases, the assumption is
that the user has granted permission to access the private
data [1,9,10,16,17,20]. Razaghpanah et al. [18] and Song et
al. [19] analyzed the potential exposure of private data to
third party services, such as advertisement and tracking ser-
vices, usually in the form of libraries that are added to the
applications. In these cases, the user grants the permission to
an installed application without being aware of the third party
library that is included within the application and without
knowing that the data is available and used by these third-
party services.
In order to perform the analysis, the abovementioned stud-
ies collected data from mobile devices provided to users for
the purpose of the experiment [9, 10] or executed the mon-
itored applications on a dedicated mobile device or emula-
tor [11, 12, 19, 20].
Another threat actor considered in previous research is an
adversary that can analyze publicly available location data in
online social networks. Such data includes tweets metadata in
Twitter, check-in information in Facebook, and proximity ser-
vices. The adversary in these cases analyzes the data in order
to identify users’ POIs [21–24], mobility patterns [25–27],
and location [28]. Like in our case, the spatial-temporal loca-
tion data analyzed in these studies is also sparse and incon-
sistent. Nevertheless, in our research we consider a different
adversary model, namely an eavesdropper that can monitor
and analyze the network trafﬁc sent from the mobile device
(to the LBSs).
In our research we focus on a different adversary (threat
actor), such as an ISP, VPN service provider, or proxies (i.e.,
an eavesdropper on network trafﬁc) that is able to intercept all
of the mobile device’s network communication. We assume
that this threat actor is exposed to all data leaks by all of
the applications and services installed on the mobile device
(as opposed to leaks of data that is available to individual
applications or a location-based service provider). In addition,
unlike the works mentioned above in which the user actively
installed the applications and granted access to the private
data, in our case, the user is unaware that an the adversary
may be observing the network trafﬁc.
Several previous studies also focused on a network eaves-
dropper adversary [8, 20, 29]. Taylor et al. [29], for example,
showed that by snifﬁng the network trafﬁc of well-known and
heavily downloaded apps, an attacker can obtain a broad spec-
trum of personal and device identifying information without
the user’s awareness. They searched for predeﬁned strings
of PIIs (e.g., phone identiﬁers such as the IMEI and MAC
address) and conducted a controlled experiment by running
applications on a dedicated mobile phone and collecting the
network trafﬁc using a dedicated setup. They did not, however,
analyze location data leakage. In contrast, in this research,
our focus is on analyzing the extent of location data leakage
from devices that are owned and used by real users and by
all applications that are installed on the users’ phones. Ren et
al. [8] presented Recon, a system which is based on machine
learning technique used to automatically identify PIIs sent
in plain text network trafﬁc; the authors tested the proposed
approach in a controlled lab environment (i.e., running appli-
cations in a sandbox), using devices owned by real users who
were required to manually tag potential PII leaks, including
location data. The authors, however, didn’t focus on estimat-
ing the extent and value of the location data leaked by all of
the applications running on the device, which is a focus of
our study. In addition, we present a step-by-step process that
can be applied by the adversary in order to derive valuable
information about the user from the raw network trafﬁc.
The protocol used to transfer PIIs may be vulnerable to cy-
ber attacks and thus creating an additional privacy breach
regardless of user awareness. As a case in point, Ren et al.
[20] presented a review on data leakage in mobile apps by
an unsecured HTTP protocol which can be used to identify
the user. As part of this process, the adversary can use the
PII detector presented by the authors in order to improve the
detection of location data within network trafﬁc.
To summarize, in this study we focus speciﬁcally on an
adversary that can monitor network trafﬁc. While in previ-
ous studies the adversary did not consider any noise in the
observed data, in this study we discuss a realistic case where
the attacker collects and analyzes raw network trafﬁc in a
completely unsupervised approach.
2.2 POI Identiﬁcation Methods
Inferring meaningful locations from aggregated location
traces is a ﬁeld of research that has rapidly evolved since
the appearance of cheap mobile GPS devices for civilian use.
These devices, as well as smartphones (in the proper navi-
gation and sampling mode) which have become ubiquitous,
have a high and constant sampling rate. The availability of a
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 245constant data stream is a common assumption for most studies
in location analytics.
Inferring meaningful locations relies upon several major
algorithm families: Ester et al. introduced DBSCAN [30],
a density-based algorithm for spatial data, which provides
the ability to determine clusters with undeﬁned shapes and is
not bound to a speciﬁc number of clusters and does not use
temporal data as a parameter. Birant et al. extended DBSCAN
into ST-DBSCAN [31], which not only uses the spatial data
of the database points but also uses its temporal data which is
more suitable for spatio-temporal data sets. Another approach
introduced by Kang et al. [6] clustered places based on time
and distance thresholds to differentiate stay points from tran-
sit to improve analysis of trajectories. In the current research
we refer to this method as the "incremental method." Kang et
al. [6] used predeﬁned constraints in order to prevent incor-
rect clustering due to missing information between traces.
Montoliu et al. [32] also deal with inconsistency and missing
data by adding maximum time constraints between traces’
constraints. Alvares et al. [33] proposed the use of semantic
data to better understand the meaning of the collected data,
and their method can be used to determine whether a place
could be important to the user.
3 Threat Model
The threat model serving as the focus of this research is an
adversary that is able to eavesdrop on the mobile device’s net-
work trafﬁc and is exposed to personal, sensitive information
that is transmitted in plaintext.
Previous research has discussed personal information dis-
closure and inference from network trafﬁc leakage. However,
those studies mainly dealt with inferring static information,
such as demographic attributes or other PII which can be
observed when the user is connected to a single malicious
hotspot. In our case, since we are analyzing location data
over time in order to obtain contextual information, capturing
network trafﬁc from a single hotspot is insufﬁcient. Thus, in
this paper it is assumed that a threat actor can continuously
capture the network trafﬁc of the user’s mobile device. This
special capability is granted to the following threat actors:
Internet service providers and mobile network operators
(MNOs) who are exposed to a vast amount of the users’ net-
work trafﬁc. The ISP threat model is strong, however we
believe that location data leakage is a signiﬁcant problem in
and of itself and therefore should be explored. In addition,
although ISP’s can derive location information from the cell
ID, the derived location is very coarse. On the other hand,
the location that can be derived from the leaked data is much
more accurate.
VPN and proxy servers, which relay mobile device network
trafﬁc to a third party server, can also misuse the unencrypted
data sent in the network trafﬁc; these solutions are increas-
ingly being used by mobile users to protect their privacy or
consume restricted entertainment content [34].3 4
Tor-like solutions, are commonly used to protect pri-
vacy [35]; in this case, the location leakage data can be used
by the exit node to expose the real user location (and possibly