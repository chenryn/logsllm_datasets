起米与GET一样容易，但通常要用到其他程序，比如流量管理工具、Web浏览器插件或内联
代理程序。
下面将尝试向该查询注入我们自已的SQL命令，并将其追加在输入参数val之后。可通过
向URL 添加字符串'OR‘11米实现该目的：http:/www.victim.com/products.php?val100“OR
'1′='1。
这次，PHP脚本构造并执行的SQL语句将忽略价格面返回数据库中的所有商品，这是因
为我们修改了查询逻辑。在查询的OR操作数中添加的语句永远返回真，即1永远等于1，从
而出现这样的结果。下面是注入之后构造并执行的查询语句：
FROM ProductsTb1
WHERE Price < '100.00′ OR '1' = '1*
ORDER BY ProductDescription/
可通过多种方法来利用SQL注入漏洞以便实现各种目的。攻击成功与否通常高度依赖于
基础数据库和所攻击的互联系统。有时，完全挖掘一个漏洞需要有大量的技巧和坚强的毅力。
---
## Page 20
SQL注入攻击与防御（第2版）
前面的例子展示了攻击者操纵动态创建的SQL语句的过程，该语句是用未经验证或编码
的输入构造面成的，并能够执行应用开发人员未预见或未曾打算执行的操作。不过，上述示
例并未说明这种漏洞的有效性，我们只是利用它查看了数据库中的所有商品。我们本可以
使用应用最初提供的功能来合法地实现该目的。但如果该应用可以使用CMS(Content
Management System，内容管理系统）进行远程管理，会出现什么情形呢？CMS是一种Web应用，
用于为Web站点创建、编辑、管理及发布内容。它并不要求使用者对HTML有深入的了解或
者能够进行编码。可使用下面的URL访问 CMS应用：http:/www:victim.com/cms/login.php？usemame
foo&password bar.
在访问该CMS应用的功能之前，需要提供有效的用户名和口令。访问上述URL时会产生
如下错误：“Incorrect usermame or password, please try again”。下面是 login.php 脚本的代码：
//连接到数据库
(pzonssedaweuresn,*asouteoot) oeuuootbsAu - uuoos
//使用输入动态创建SQL语句
. [resn,13Ds, = 1esn 383Hx sxosnSKO wo8a PTzosn O373S = Axonb§
. Ipxonssed_)aos. = pzonssed anv
//对数据库执行查询
$result = mysql_query($query) :
//检查从数据库返回了多少条记录
$rowcount = mysq]_num_rows ($result);
//如果返回一条记录，那么验证必定是有效的。因此将用户导航到admin页面
if ($rowcount !=0){ header (*Location: admin,php);
//如果没有返回记录，那么验证必定是无效的
else ( die(*Incorrect username or passvord, please try again.*))
login.php脚本动态地创建了一条SQL语句。如果输入匹配的用户名和口令，就将返回一
个记录集。下列代码更加清楚地说明了PHP脚本构造并执行的 SQL语句。如果输入的user和
password的值与CMSUsers表中存储的值相匹配，该查询将返回与该用户对应的userid：
FROM CMSUsers
,xeq, = pzonssed an ,oog, = xesn ga
这段代码的问题在于应用开发人员相信执行脚本时返回的记录数始终是0或1。在前面的
对CMS应用使用相同的技术，那么将导致程序逻辑失败。向下面的URL添加字符串"OR1-1，
这次，由PHP脚本构造并执行的 SQL语句将返回 CMSUsers表中所有用户的userid。新的URL
° 11. O, qpossegooaueasndqdulosoyuowmmm//:dq 6
我们通过修改查询逻辑，返回了所有的userid。添加的语句导致查询中的OR操作数永远
返回真，即1永远等于1，从而出现了这样的结果。下面是注入之后构造并执行的查询语句：
SELECT userid
FROM CMSUsers
.T. -.T. dO,pIonssed,= pzoxeeed aNY ,oog, = xosn 3aHM
6
---
## Page 21
第1章什么是SQL注入
应用逻辑是指要想返回数据库记录，就必须输入正确的验证证书，并在返回记录后转而访
问受保护的admin-php脚本。我们通常是作为CMSUsers表中的第一个用户登录的。SQL注入
漏润可以操纵并被坏应用逻辑。
是书面形式）。在美国，该行为会因违反1986年《计算机欺诈与滥用法》（Computer Fraudand
Abuse Act of 1986, www.cio.cnergy-gov/documents/ComputerFraud-AbuseAct.pdf)u或 2001 年 《美
国爱国者法案》（USAPATRIOTACTof2001）面遭到起诉。在英国，则会因违反1990年的《计
算机澄川法》(Computer Misuse Act of 1990, www.opsi.gov.uk/acts/acts1990/Ukpga_19900018_en _1)
和修订过的 2006年的《警察与司法法案》(Police and Justice Act of2006，www.opsi.gov.uk/Acts
acts2006/ukpga_20060048_en_1)而遭到起诉。如果控告并起诉成功，那么你将会面临罚款或浸
长的监禁
著名事例
很多国家的法律并没有要求公司在经历严重的安全破坏时对外透露该信息（这一点与美国
不同），所以很难正确且精准地收集到有多少组织曾因SQL注入漏洞而遭受攻击或已受到危害。
不过，由恶意攻击者发动的安全破坏和成功攻击是当今新闻媒体中一个喜闻乐见的话题。即便
是最小的破坏（可能之前一直被公众所忽视），现在通常也会被大力宣传。
一些公共可用的资源可以帮助理解SQL注入问题的严重性。例如，2011年度CWE（常见弱
点列表, Common Weakness Enumeration)/SANS Top 25 Most Dangerous Software Errors 是个
漏洞列表，它列出了软件中可能导致危险漏洞的最普遍和最严重的错误。在该列表中，前25
个漏洞是根据20多个不同组织的数据按照重要性进行排序的，它根据漏洞的普遍性、重要程
度和利用漏润的可能性进行了评估。它使用常见弱点评分系统（Common Weakness Scoring System，
CWSS)进行打分并对最终结果进行分级。2011年度CWE/SANS Top 25 Most Dangerous Software
Errors列表将 SQL注入放在了个非常靠前的位置（请参考 http://cwe.mitre.org/top25/index.html)
此外，开放式Web应用程序安全项目(Open Web Application Security Project，OWASP)在
其2010年度10大安全漏润列表中，将注入缺陷（包括SQL注入）作为影响Web应用程序最严
重的安全漏洞。OWASP列出10大安全漏洞的主要目的是让开发人员、设计人员、架构师和组
织了解最常见的Web应用程序安全漏洞所产生的后果。在2007年发布的10大安全漏洞列表
中，SQL注入曾经是第二大漏润。2010年OWASP修改了评估风险的分级方法，不再唯一地
依赖相关漏润的频繁程度。之前，OWASP的10大漏洞列表是从常见漏洞披露组织（Common
Vulnerabilities and Exposures，CVE)中 MITRE公司(http://cve.mitre.org/发布的公开知名信息安
全漏润曝光的数据中提取和汇编而成的，使用CVE数据来表示有多少网站容易受到SQL注入
攻击，其问题是该数据没有包括自定义站点中的漏洞。CVE代表的是商业和开源应用中已发现
的漏洞数量，它们无法反映现实中这些漏洞的存在情况。现实中的情况要比这糟糕得多。虽然
如此，2007年发布的趋势报告还是值得一读(http://cve.mitre.org/docs/vuln-trends/vuln-trends.
pdf).
我们还可以参考由其他专门整理受损Web 站点信息的站点提供的资源。例如，Zone-H是
一个流行的专门记录Web站点毁损的Web站点。该站点展示了近几年来因为出现可利用的
SQL注入漏洞而被黑客攻击的大量著名的Web 站点和 Web应用。自2001年以来，Microsof
领域的Web站点已被破坏过46次（甚至更多）.可以在Zone-H上在线查看受到攻击的Microsoft
7
---
## Page 22
SQL注入攻击与防御（第2版）
站点的完整列表(www.zone-h.org/content/view/14980/1/)。
传统媒体同样喜欢大力宣传因数据安全所带来的破坏，尤其是那些影响到著名的重量级公
司的攻击。下面是已报道的一些新闻的列表：
●2002年2月，Jeremiah Jacks 发现 Guess.com(www.securityfocus.com/news/346)存在 SQL
注入漏洞。他因此至少获取了200000个用户信用卡信息的访间权。
●2003年6月，Jeremiah Jacks 再次发动攻击，这次攻击了PetCo.com（www.securityfocus
com/mews/6194)，他通过SQL注入缺陷获取了500000个用户信用卡信息的访间权。
·2005年6月17日，MasterCard为保证信用卡系统方案的安全，变更了部分受到破坏
的顾客信息。这是当时已知的此种破坏中最严重的一次。黑客利用SQL注入缺陷获取
了 4 千万张信用卡信息的访间权(www.ftc.gov/os/caselist/0523148/0523148complaint.pdf)。
●2005年12月，GuidanceSoftware(EnCase的开发者）发现一名黑客通过SQL注入缺陷
破坏了其数据库服务器（www.ftc.gov/os/caselist/0623057/0623057complaint.pdf)，导致
3800位用户的财务信息被泄露。
●大约2006年12月，美国折扣零售商TJX被黑客攻击，黑客从TJX数据库中盗取了上
百万条支付卡信息。
●2007年8月，联合国网站（www.un.org）受到SQL注入攻击，攻击者的目的是显示一些
反对联合国的信息。
·2008年，僵尸网络充分利用SQL注入漏洞，通过malware病毒感染大量电脑以扩大僵
x
·2009年2月，一组罗马尼亚黑客在各自的行动中声称利用SQL注入攻击，侵入了
Kaspersky、F-Secure 和 Bit-Defender 的网站。这些罗马尼亚黑客还声称入侵了其他一
些知名网站，比如 RBS WorldPay、CNET.com、BT.com、Tiscali.co.uk 和 national-
lottery.co.uk 。
●2009 年8月17日，美国司法部(US JusticeDepartment)起诉了一名美国公民Albert
Gonzalez和两个未透露姓名的俄罗斯人，控诉他们利用SQL注入攻击窃取了13亿个
信用卡号码。受到侵害的公司包括使用了信用卡刷卡机的Heartland Payment Systems、
连锁便利店 7-Eleven 和 Hannaford Brothers 连锁超市。
·2011年2月，黑客团体Anonymous发现hbgaryfederal.com的CMS系统很容易受到SQL
注入攻击。
●2011年4月，Barracuda Networks 公司的网站(barracudanetworks.com)被发现容易受到
SQL注入攻击。攻击者为BarracudaNetworks公司遭受的损失承担了责任—在线公布
了Barracuda Networks 公司数据库的转储（dump)，包括 CMS用户的验证凭据和散列处
理过的密码。
●2011年5月，黑客组织LulzSec入侵了数个 Sony网站（sonypictures.com、SonyMusic.gr
和SonyMusic.co.jp)，并且作为消遣还进一步在线转储了网站的数据库内容。LulzSec
声称访间了 Sony网站中一百万用户的密码、电子邮件地址、家庭住址和出生日期。该
黑客组织还声称窃取了SonyPictures的所有管理细节，包括密码。根据报道，他们还
访向了7方5千首乐曲和3.5亿张音乐礼券。
8
---
## Page 23
第1章什么是SQL注入
·2011年5月，黑客组织LulzSec入侵了美国公共电视网(Public BroadcastService，PBS)
的网站。除了通过SQL注入攻击转健了大量SQL数据库之外，LulzSec还在PBS的网
站上注入了一个新的页面。LulzSec公布了数据库管理员和用户的用户名和经过散列处
理的密码。该黑客组织还公布了PBS所有本地分支机构的登录信息，包括他们的纯文
本密码。
·2011年6月，LadyGaga的粉丝网站遭到黑客攻击，根据当时的申明，“黑客从www
ladygaga.co.uk获取了内容数据库的转储，并访间了一部分电子邮件和姓名记录，但并
未获取到密码和财务信息—http://www.mirror.co.uk/celcbs/news/2011/07/16/lady-
gaga-website-hacked-andfans-details-stolen-115875-23274356。
以前黑客破坏Web站点或Web应用是为了与其他黑客组织进行竞赛（以此来传播特定的政
治观点和信息），炫罐他们疯狂的技术或者只是报复受到的侮等或不公。但现在黑客攻击Web
应用更大程度上是为了从经济上获利。当今Intermet上潜伏的大量黑客组织均带有不同的动机
（笔者相信本书的每一个读者所知道的，不仅仅是黑客组织LulzSec和Anonymous！）。其中包
增值的犯罪组织，受个人或组织信仰驱动的政治活动积极分子以及心怀不满、滥用职权和机会
就定以使黑客实现其目标
您的网站被攻击了么？
这种事不会发生在我身上，是吧？
多年来我评估过很多Web应用，在所测试的应用中我发现有三分之一易通受SQL
注入攻击，该漏润所带来的影响因应用而异，但现在很多面向Intermet的应用中均存在
该漏洞。很多应用基露在不友善的环境中，比如未经过漏洞评估的Intermet，毁坏Web
站点是一种非常曾杂、显眼的行为，“脚本小子”通常为赢得其他黑客组织的比分和
尊重而从事该活动，而那些非常严肃且目的明确的黑客则不希望自己的行为引起注意。
对于老练的攻击者来说，使用SQL注入漏洞获取内联系统的访问权并进行破坏是个完
美可行的方案，我曾不止一次告诉过客户他们的系统已遗受攻击，目前黑客正利用它们
来从事各种非法活动。有些组织和Web站点的所有者可能从未了解他们的系统之前是
否被利用过或者当前系统中是否已被累客植入了后门程序。
2008年年初至今，数十万Web站点遭到一种自动SQL注入攻击（Asprox)的破坏。该攻击
使用一种工具在Intermet上搜索存在潜在漏洞的应用。如果发现了存在漏洞的站点，该工具将
自动利用该漏洞，传递完可利用的有效载荷（payload)之后，它执行一个选代的SQL循环来定位
远程数据库中用户创建的每一张表，然后将恶意的客户端脚本添加到表的每个文本列中。由于
大多数数据库驱动的Web应用使用数据库中的数据来动态构造Web内容，因面该脚本最终会
展现给受危害的Web站点或应用的用户。标签（tag）会指示浏览器加载受感染的Web页面，从
而执行远程服务器上的恶意脚本。这种行为的目的是让该恶意程序感染更多主机。这是一种非
1.真正的黑客对那些只会模伤且水平低下的年青人的请称。
---
## Page 24
SQL注入攻击与防御（第2版）
常高效的攻击方式。重要的站点（比如由政府部门维护的站点、联合国和较大公司的站点）均遭
受过大量这种攻击的破坏和感染。很难准确地弄清在连接到这些站点的客户端电脑和访问者中
有多少受到了感染或破坏，尤其是当传递的可利用有效载荷是由攻击的发动者自行定义时。
1.4理解SQL注入的产生过程
SQL是访间 Microsoft SQL Server、Oracle、MySQL、Sybase 和 Informix(以及其他)数据库
服务器的标准语言。大多数Web应用都需要与数据库进行交互，并且大多数Web应用编程语
言(如ASP、C#、.NET、Java和PHP)均提供了可编程的方法来与数据库连接并进行交互。如果
Web应用开发人员无法确保在将从Web表单、cookie及输入参数等收到的值传递给SQL查询（该
查询在数据库服务器上执行）之前已经对其进行过验证，那么通常会出现SQL注入漏润。如果
攻击者能够控制发送给SQL查询的输入，并且能够操纵该输入将其解析为代码而非数据，那
么攻击者就很可能有能力在后台数据库执行该代码。
每种编程语言均提供了很多不同的方法来构造和执行SQL语句，开发人员通常综合应用
这些方法来实现不同的目标。很多Web站点提供了教程和代码示例来帮助应用程序开发人员
解决常见的编码问题，但这些示例讲述的内容通常都是一些不安全的编码实践，而且示例代码
也容易受到攻击，如果应用程序开发人员未彻底理解与之交互的基础数据库，或者未完全理解
并意识到所开发代码潜在的安全问题，那么他们编写的应用通常是不安全的，易受到SQL注
入攻击。随着时间的推移，这一情况已经得到了改善。现在，针对你所采用的技术和编程语言，
只须在Google上搜索一下如何防止SQL注入，通常就可以列出大量有价值和有用的资源，这
些资源为正确编写代码以防止SQL注入提供了非常好的建议。在一些教程网站上还可以看到
一些不安全的代码，但通常只要查看评论，就可以看到来自于一些安全知识社区贡献者的警告。
Apple和Android为开发人员迁移到其平台提供了良好的建议，这些建议包括如何安全地开发
代码以及如何避免SQL注入攻击。与之类似，HTML5社区为较早采用HTML5进行开发的程
序员提供了很多警告和一些良好的安全建议。
1.4.1构造动态字符串
构造动态字符串是一种编程技术，它允许开发人员在运行过程中动态构造SQL语句。开
发人员可以使用动态SQL来创建通用、灵活的应用。动态SQL语句是在执行过程中构造的，
来决定提取什么字段（如SELECT语句)，或者根据不同的条件来选择不同的查询表时，动态构
造SQL语句会非常有用。
不过，如果使用参数化查询的话，开发人员可以以更安全的方式得到相同的结来。参数化
查询是指SQL语句中包含一个或多个嵌入参数的查询。可以在运行过程中将参数传递给这些
查询。包含的嵌入到用户输入中的参数不会被解析成命令而执行，而且代码不存在被注入的机
会。这种将参数嵌入到SQL语句中的方法比起使用字符串构造技术来动态构造并执行SQL语
句来说拥有更高的效率且更加安全。
下列PHP代码展示了某些开发人员如何根据用户输入来动态构造SQL字符串语句。该语
句从数据库的表中选择数据。如果field字段中出现了用户输入的值，该查询将返回这些满足
10