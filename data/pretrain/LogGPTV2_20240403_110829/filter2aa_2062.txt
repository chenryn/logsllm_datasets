### Who We Are

- **bughardy (Matteo Beccaro)**
  - **Email:** [PI:EMAIL]
  - **Background:** Italian student with a passion for IT, networking, and penetration testing. Completed high school in 2013 and applied to the Politecnico di Torino for a degree in Computer Engineering.

- **Eagle1753 (Matteo Collura)**
  - **Email:** [PI:EMAIL]
  - **Background:** Italian student who applied to the Politecnico di Torino for a degree in Electronic Engineering. Has a strong interest in Physics and is collaborating with bughardy on WiFi networks and security. Enjoys solving challenges.

### History of NFC Hacks

- **2008:** MIFARE Classic exploit, with further developments in subsequent years.
- **2011:** First hack of the NFC ULTRALIGHT transport system by U.S. researchers using the RESET ATTACK.
- **2013:** A new hack of the NFC ULTRALIGHT transport system, called the LOCK ATTACK, was developed by us.

### What is a MIFARE Chip?

The MIFARE chip is an RFID chip designed to operate at 13.56 MHz. There are millions of MIFARE chip cards worldwide, and they come in several variants:
- MIFARE Classic
- MIFARE ULTRALIGHT
- MIFARE ULTRALIGHT C
- MIFARE DESFIRE
- and others

### The History of the Hack

- **Initial Tests:** Conducted without understanding how OTP (One-Time Programmable) worked.
- **Discovery:** OTP contains the number of rides left.
- **Attempt:** Tried to write data over the OTP.
- **Further Testing:**
  - "On the bus" test!
  - Stamping multiple tickets and comparing their dumps.
  - Empirical results on how data is stored on tickets.

### Seize the Day

- **Assumption:** Assume you know where the time (of the last stamp) is stored and how it works.
- **Action:** Use an NFC phone or NFC reader to change that field (it is in the data field, so there are no issues).
- **Reliability:** This method is not very reliable, and we are currently unable to handle it effectively.

### Mission Completed

- **Objective:** Preventing the machine from writing the number of rides left would turn the ticket into an unlimited one.
- **Solution:** Use LOCK BYTES to achieve this.

### MIFARE ULTRALIGHT Overview

- **Composition:**
  - **Page Address** | **Byte Number** | **Decimal** | **Hex**
  - 0 | 1 | 2 | 3 | 0 | 0x00
  - UID | 1 | 0x01
  - UID | 2 | 0x02
  - UID | 3 | 0x03
  - OTP | OTP | OTP | OTP
  - 4 to 15 | 0x04 to 0x0F | DATA

### What is OTP?

- **Function:** Only security function in MIFARE ULTRALIGHT tickets.
- **Size:** 4 bytes, all 00 by default.
- **Operation:** OR operation prevents turning a bit from 1 to 0 again.
- **Usage:** Used for storing rides (turns a bit from 0 to 1). The stamping machine checks the number of "0" left.

### What is the DATA Sector?

- **Size:** 48 bytes, the largest sector.
- **Content:** Stores details like time (of the last stamp), date, station ID, etc.
- **Reset Attack:** Used to store the number of rides left.
- **Ongoing Work:**
  - Decoding how and which data are encoded on the ticket.
  - Dumps and information will be provided in the Q&A session for those who want to help.

### Regarding the DATA Sector

- **Empirical Results:**
  - **BYTES** | **DESCRIPTION** | **EXAMPLE**
  - 0-24 bytes | Locked DATA | 01 04 00 00 02 01 02 BE 40 05 AF 00 00 AE 10 A0 61 03 1C 1C B2 2B 61 8E
  - 25-28 | Stamping progressive number | 43 3B (7B 00)
  - 29-32 | Validator ID (guessed) / Ticket type | 04 F8 00 00
  - 33-36 | Stamping progressive number | 43 3B (7B 00)
  - 37-38 | Not guessed | 00 3B 00 04
  - 39-40 | Ticket type (guessed) / Data | F8 AE
  - 41-48 | Time data (guessed) | 10 7B B3 02 E6 56

### What is the LOCK Sector?

- **Size:** 2 bytes.
- **Function:** Each bit can turn 1 page (4 bytes) into read-only mode.
- **Special Feature:** The last 3 bits of the first lock byte freeze the bits of the lock bytes themselves.

### The LOCK ATTACK

- **Method:** Using the features of MIFARE ULTRALIGHT, specifically the LOCK sector.
- **Action:** Lock the OTP sector to get infinite rides.

### Why the LOCK ATTACK Works

- **Mechanism:** Locking the OTP sector prevents the stamping machine from removing rides stored on the ticket.
- **Validation:** Each time the ticket is stamped, the validator checks if there are rides left. If so, it writes data (time, etc.) to the DATA sector and tries, unsuccessfully, to turn a bit from 0 to 1 in the OTP sector.

### Oops...

- **Issue:** It is not ideal to always have 5 rides on a 5-ride ticket.
- **Resolution:**
  - **LOCK ATTACK Fix:**
    - Firmware update: Check if the OTP sector is locked; if so, refuse to validate the ticket.
    - Firmware update: Try to unlock the sector, but only if block bits are not enabled.
  - **TIME ATTACK Fix:**
    - Communication between the validator and ticket is not encrypted, making it easy to sniff.
    - Solution: Implement encrypted communication.

### Future Works

- **Current Projects:**
  - Rewrite the tool in C/C++ without using external tools.
  - Continue decoding the DATA sector; dumps and information are available in the Q&A section for anyone who wants to help.
  - Acquire an NFC-enabled phone or a Proxmark for further study.

### Questions?

Feel free to ask any questions!