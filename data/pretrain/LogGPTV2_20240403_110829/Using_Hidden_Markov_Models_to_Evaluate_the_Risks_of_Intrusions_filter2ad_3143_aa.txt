title:Using Hidden Markov Models to Evaluate the Risks of Intrusions
author:Andr&apos;e Årnes and
Fredrik Valeur and
Giovanni Vigna and
Richard A. Kemmerer
Using Hidden Markov Models to Evaluate the
Risks of Intrusions
System Architecture and Model Validation
Andr´e ˚Arnes1, Fredrik Valeur2, Giovanni Vigna2, and Richard A. Kemmerer2
1 Centre for Quantiﬁable Quality of Service in Communication Systems
Norwegian University of Science and Technology
O.S. Bragstads plass 2E, N-7491 Trondheim, Norway
PI:EMAIL
http://www.q2s.ntnu.no/
2 Department of Computer Science,
University of California Santa Barbara,
Santa Barbara, CA 93106-5110, USA
{fredrik, vigna, kemm}@cs.ucsb.edu
http://www.cs.ucsb.edu/∼rsg/
Abstract. Security-oriented risk assessment tools are used to determine
the impact of certain events on the security status of a network. Most
existing approaches are generally limited to manual risk evaluations that
are not suitable for real-time use. In this paper, we introduce an approach
to network risk assessment that is novel in a number of ways. First of all,
the risk level of a network is determined as the composition of the risks
of individual hosts, providing a more precise, ﬁne-grained model. Second,
we use Hidden Markov models to represent the likelihood of transitions
between security states. Third, we tightly integrate our risk assessment
tool with an existing framework for distributed, large-scale intrusion de-
tection, and we apply the results of the risk assessment to prioritize the
alerts produced by the intrusion detection sensors. We also evaluate our
approach on both simulated and real-world data.
Keywords: Risk assessment,
modeling.
Intrusion detection, Hidden Markov
1 Introduction
The complexity of today’s networks and distributed systems makes the process of
risk management, network monitoring, and intrusion detection increasingly dif-
ﬁcult. The amount of data produced by a distributed intrusion detection system
can be overwhelming, and prioritization and selection of appropriate responses
is generally diﬃcult. On the other hand, risk assessment methodologies are be-
ing used to model and evaluate network and system risk. These approaches are
generally limited to manual processes, and are not suitable for real-time use.
The approach presented in this paper provides both a high-level overview of
network risk based on individual risk evaluations for each host and a quantitative
D. Zamboni and C. Kruegel (Eds.): RAID 2006, LNCS 4219, pp. 145–164, 2006.
c(cid:2) Springer-Verlag Berlin Heidelberg 2006
146
A. ˚Arnes et al.
metric for performing alert prioritization. Alerts are prioritized according to the
risk associated with the hosts referenced in the alert. Preliminary work on the
risk-assessment method used in this paper was presented in [1], but it was not
tested as part of an intrusion detection system. The implementation presented in
this paper processes the alerts produced by a set of sensors monitoring a number
of hosts. We use training data from Lincoln Laboratory [11] and real network
traﬃc from the Technical University of Vienna [8] to test the performance of the
model.
The main contribution of this paper is a novel approach to network risk as-
sessment. The approach considers the risk level of a network as the composition
of the risks of individual hosts. It is probabilistic and uses Hidden Markov mod-
els (HMMs) to represent the likelihood of transitions between security states.
We tightly integrate the risk assessment tool with an existing framework for
distributed, large-scale intrusion detection, and we apply the results of the risk
analysis to prioritize the alerts generated by the intrusion detection sensors.
Finally, the approach is evaluated using both simulated and real-world data.
The remainder of this paper is structured as follows. In Section 2 we present
the theoretical model and the necessary terminology for the paper. In Section 3
we present the system architecture, and in Section 4 we discuss how the method
can be used for real-time risk assessment for two example data sets. We provide
a discussion of the method in Section 5 and an overview of related work in
Section 6. Conclusions and some open research issues are discussed in Section 7.
2 Model and Terminology
This section presents our risk-assessment model and discusses some aspects of
parameter estimation and learning.
2.1 Security State Estimation
The use of Hidden-Markov Models (HMMs) as a method for estimating the risk
of a network was proposed in [1]. An HMM enables the estimation of a hidden
state based on observations that are not necessarily accurate. An important
feature of this model is that it is able to model the probability of false positives
and false negatives associated with the observations. The method is based on
Rabiner’s work on HMMs [13].
Assume that each host h can be modeled by N diﬀerent states, i.e., S =
{s1, . . . , sN}. The security state of a host changes over time, and the sequence
of states visited by a host is denoted X = x1, . . . , xT , where xt ∈ S. Each host
is monitored by a number of sensors k ∈ K h
L, where L is the number of
sensors for host h. A sensor generates observation messages from the observation
symbol set V k = {vk
}, where M is the number of messages for sensor
k. The sequence of observed messages is denoted Y = y1, . . . , yT , where yt ∈ V
is the observation message received at time t. The HMM for each host consists
of a state transition probability matrix P, an observation probability matrix Q,
and an initial state distribution π. The HMM is denoted λ = (P, Q, π).
1 , . . . , K h
1 , . . . , vk
M
Using Hidden Markov Models to Evaluate the Risks of Intrusions
147
The hosts modeled in this paper are assumed to have four possible security
states S = {G, P, A, C}, which are deﬁned as follows:
– Good (G): The host is not subject to any attacks.
– Probed (P): The host is subject to probing or mapping activity. This state
can lead to a reduction in availability, and it increases the probability of an
attack.
– Attacked (A): The host is being attacked by one or more parties. This state
can lead to a reduction in availability, and it increases the probability of a
compromise.
– Compromised (C): The host has been compromised. This state may result
in loss of conﬁdentiality, integrity, and availability.
Figure 1 shows the Markov model for the security states of the hosts. The
edge from one node to another represents the fact that when a host is in the
state indicated by the source node it can transition to the state indicated by the
destination node. Note that the graph is fully connected, which indicates that it
is possible to transition from any security state to any other security state.
The state transition probability matrix P describes the probabilities of transi-
tions between the states of the model. Each entry, pij, describes the probability
that the model will transfer to state sj at time t + 1 given that it is in state si
at time t, i.e., pij = P (xt+1 = sj|xt = si), 1 ≤ i, j ≤ N.
The observation probability matrix Q describes the probabilities of receiving
diﬀerent observations given that the host is in a certain state. Each entry, qn(m),
represents the probability of receiving the observation symbol vk
m at time t, given
|xt = sn), 1 ≤ n ≤
that the host is in state sn at time t, i.e., qn(m) = P (yk
N, 1 ≤ k ≤ K, 1 ≤ m ≤ M.
t = vk
m
G
P
A
C
Fig. 1. Markov model for hosts
Consider examples of a university network and a military network to see how
values are assigned to the model parameters.
Example 1. In a university network, we can assume that there are high volumes
of probing and a fair amount of attack attempts. The security level for hosts is
also varying, and a system compromise is a likely scenario for some hosts. Con-
sequently, the transitions to state P , A, and C are relatively likely. In addition,
because the traﬃc in university networks is heterogeneous and changing over
time, we assume that it is hard to conﬁgure and maintain accurate IDS sen-
sors. Therefore, we have to assume that there is a high number of false positives
148
A. ˚Arnes et al.
and negatives. This is modeled by increasing the probabilities of receiving an
observation that indicates a false positive or a false negative and decreasing the
probability of receiving an accurate observation in the matrix Q. For example,
qG(4), which represents the probability of receiving an observation indicating
a compromised alert when the system is actually in the good state, has to be
increased to represent the false positive probability. P and Q can for example
be set as follows:
⎛
⎜⎜⎝
⎛
⎜⎜⎝
P =
Q =
⎞
⎟⎟⎠ =
pGG pGP pGA pGC
pP G pP P pP A pP C
pAG pAP pAA pAC
pCG pCP pCA pCC
qG(1) qG(2) qG(3) qG(4)
qP (1) qP (2) qP (3) qP (4)
qA(1) qA(2) qA(3) qA(4)
qC(1) qC(2) qC(3) qC(4)
⎛
0.95 0.02 0.02 0.01
⎜⎜⎝
0.02 0.95 0.02 0.01
0.02 0.02 0.94 0.02
0.01 0.01 0.01 0.97
⎞
0.7 0.1 0.1 0.1
⎟⎟⎠ =
0.1 0.7 0.1 0.1
0.1 0.1 0.7 0.1
0.1 0.1 0.1 0.7
⎛
⎜⎜⎝
⎞
⎟⎟⎠ ,
⎞
⎟⎟⎠ .
In this simple example, the values in the bottom left corner of the Q matrix
represent false negatives, whereas the values in the top right represent false
positives. The diagonal represents the probability of accurate detections. Also,
in such a network, the initial state distribution π has to take into consideration
the probability that a system is already under attack or even compromised:
π = {0.65, 0.2, 0.1, 0.05}.
Example 2. In a military grade system, we can assume that the security level
is very high, and the probability of attacks is low, as the system is not known
to the public. This implies that the probability of transition to P and A should
be low, but P should still take into account the possibility of random scanning.
Due to the high level of security, the probabilities of transition to state C should
be extremely low. The observation probabilities should represent the fact that
the traﬃc is regulated, and that the IDSs and logging systems are conﬁgured to
be highly accurate. The initial state can be assumed to be π = {1, 0, 0, 0}. The
following are example transition and observation probability matrices:
⎛
⎜⎝
P =
0.995 0.002 0.002 0.001
0.02 0.959 0.02 0.001
0.02 0.02 0.958 0.002
0.01 0.01 0.01 0.97
⎞
⎟⎠ , Q =
⎛
0.97 0.01 0.01 0.01
⎜⎝
0.01 0.97 0.01 0.01
0.01 0.01 0.97 0.01
0.01 0.01 0.01 0.97
⎞
⎟⎠ .
2.2 Risk Assessment
Each of the states for a host is associated with a cost vector C, indicating the
potential consequences of the state in question. The total risk Rh,t for host h at
time t is
N(cid:8)
Rh,t =
γt(i)C(i)
(1)
where γt(i) is the probability that the host is in security state si at time t, N is
the number of security states, and C(i) is the cost value associated with state si.
i=1
Using Hidden Markov Models to Evaluate the Risks of Intrusions
149
Example 3. A university network usually consists of a large number of hosts,
including student laptops, workstations, web servers, student record databases,
and staﬀ ﬁle servers. For the purpose of network management, the servers are
the most valuable assets, and a compromise of staﬀ data or student records
could have very negative consequences. Example cost vectors could be: Claptop =
{0, 1, 2, 5}, Cworkstation = {0, 2, 5, 10}, Cwebserver = {0, 2, 5, 20}, CstudentDB =
{0, 5, 20, 50}, and Cf ileserver = {0, 5, 10, 25}. If the current security state distri-
bution for the student record database is {0.8, 0.15, 0.05, 0}, then the risk for
that asset at time t is RstudentDB,t = 0.8 ∗ 0 + 0.15 ∗ 5 + 0.05 ∗ 20 = 1.75. The
same security state distribution for a student laptop would result in the risk
Rlaptop,t = 0.25.
The total risk for an entire network at time t can be expressed as
Rnw,t =
H(cid:8)
h=1
Rh,t
(2)
where H is the number of hosts in the network. By using the sum of the risk
of all hosts, it is possible to see aggregate peaks of risk activity where the risk
of several hosts are simultaneously increased. A property of this deﬁnition of
network risk is that security incidents that only involve a few hosts may not
impact the total risk of a large network to a noticeable degree. Also, the risk can
only be interpreted by using knowledge of the normal risk level of the system,
as well as the maximum risk of the system. A limitation of this deﬁnition of
network risk is that it does not consider dependencies between hosts. This is not
covered in this paper, but left for further work.
The average risk for a network can be expressed as
Rnw,t =
Rnw,t
H
.
(3)
As opposed to (2), the average risk for a network is a normalized value for a given
network. If a high percentage of the hosts in a network are subject to security
incidents, the average risk for the network can be expected to vary signiﬁcantly
over time. Note that Rnw,t is system-dependent, as the HMMs and cost vectors
of diﬀerent hosts vary.
In a traditional risk assessment context, one would expect risk to stay at the
most critical security state once that state has been reached. This paper focuses
on real-time risk assessment, and the model proposed in this paper is intended
to be used as a real-time tool for risk management. That is, we are interested in
representing the level of risk activity; therefore, the HMMs used in the examples
allow the risk to gradually decrease, even if the host in question has been assessed
to be in state C. The arrival of new alerts indicating a less critical state also
decreases the risk of a host. This is done in order to avoid a situation where
an increasing number of hosts are assessed to have the maximum risk possible.
Another possible approach is outlined in Section 5.
150
A. ˚Arnes et al.
2.3 Alert Prioritization
Each processed alert is assigned a priority according to the risk of the involved
hosts. If a host is assessed to have a high risk, all alerts involving that host will
receive a high priority, whereas a low risk host will receive a low priority. The
alert receives a prioritization number according to the host with the highest risk
number. The priority Pa for an alert a at time t can be determined as follows
(4)
where h1 is the source IP address and h2 is the destination IP address of the
alert a.
Example 4. In a network with both high and low value hosts, the priority of an
alert is decided by the current risk of the aﬀected host, which is in turn a function
of the cost vector and the estimated security state. An alert a1 at time t for the
student database in Example 3 would receive a priority Pa1 = 1.75, whereas an
alert a2 for the student laptop would receive priority Pa2 = 0.25. If both the
source and destination address of an alert are monitored by the risk assessment