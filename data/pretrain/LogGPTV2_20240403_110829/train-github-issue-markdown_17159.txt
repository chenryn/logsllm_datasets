  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.4.1
  * Operating System version:Linux version 4.15.0-88-generic 16.04.1-Ubuntu
  * Java version: java version "1.8.0_201"
### Steps to reproduce this issue
  1. invoke the remote method in consumer side.
  2. always throw a exception in the method implementation of server side.
  3. catch the exception in consumer side, and print stacktrace of the exception.
### Expected Result
stacktrace of consumer side can not be obtained.
### Actual Result
only stacktrace of server side was printed, we can not find where we invoked
the remote method.
I have read related the code, it's in
`org.apache.dubbo.rpc.AppResponse#recreate`
    @Override
        public Object recreate() throws Throwable {
            if (exception != null) {
                // fix issue#619
                try {
                    // get Throwable class
                    Class clazz = exception.getClass();
                    while (!clazz.getName().equals(Throwable.class.getName())) {
                        clazz = clazz.getSuperclass();
                    }
                    // get stackTrace value
                    Field stackTraceField = clazz.getDeclaredField("stackTrace");
                    stackTraceField.setAccessible(true);
                    Object stackTrace = stackTraceField.get(exception);
                    if (stackTrace == null) {
                        exception.setStackTrace(new StackTraceElement[0]);
                    }
                } catch (Exception e) {
                    // ignore
                }
                throw exception;
            }
            return result;
        }
while recreating the result, `AppResponse` only deserialize the exception of
server side, so stacktrace of consumer side is ignored.  
maybe we can modify `throw exception` to `new RpcException(exception)`.