Available online at: www.sciencedirect.com

ScienceDirect
CAAI Transactions on Intelligence Technology 1 (2016) 61–71
http://www.journals.elsevier.com/caai-transactions-on-intelligence-technology/

Original Article

Exploiting Structural Similarity of Log Files in Fault Diagnosis for Web Service Composition

Xu Han, Binyang Li, Kam-Fai Wong, Zhongzhi Shi

- Beijing Key Laboratory of Electronic System Reliability Technology, Capital Normal University, Beijing, China
- University of International Relations, Beijing, China
- Department of Systems Engineering & Engineering Management, The Chinese University of Hong Kong, Hong Kong, China
- The Key Laboratory of Intelligent Information Processing, Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China

Available online 7 June 2016

Abstract

With the increasing deployment of web services, research on the dependability and availability of web service composition has become more active. Unexpected faults in web service compositions can occur at different levels during runtime. Log analysis, as a typical data-driven approach for fault diagnosis, is more applicable and scalable across various architectures. Given the trend that more and more service logs are represented using XML or JSON formats, which offer good flexibility and interoperability, the fault classification problem of semi-structured logs is a challenging issue. However, most existing approaches focus on log content analysis and ignore structural information, leading to poor performance. To improve the accuracy of fault classification, we exploit the structural similarity of log files and propose a similarity-based Bayesian learning approach for semi-structured logs. Our solution estimates the degrees of similarity among structural elements from heterogeneous log data, constructs a combined Bayesian network (CBN), uses a similarity-based learning algorithm to compute probabilities in the CBN, and classifies test log data into the most probable fault categories based on the generated CBN. Experimental results show that our approach outperforms other learning approaches on structural log datasets.

Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

Keywords: Web services composition; Fault diagnosis; Combined Bayesian network (CBN); Similarity; Probability

1. Introduction

In recent years, service-oriented computing (SOC) has changed the way software applications are designed, delivered, and consumed. Web services technology, aimed at implementing service-oriented architecture, has been widely applied in various areas for research and business purposes. As a result, more and more business functions are being published as web services by various organizations and companies. There are two main approaches to developing web services: SOAP-based and RESTful web services. When a user request cannot be fulfilled by atomic web services, composite web services play a crucial role in providing complex collaboration and interaction between multiple web services.

Over the past decade, numerous standards for web service composition have been defined. One such standard is the Web Services Business Process Execution Language (BPEL), an executable orchestration language for modeling business processes with web services. Based on OASIS standards, business processes can be executed with the support of a BPEL engine from a third party. Recent research has focused on extending BPEL engines to enable the composition of SOAP-based, RESTful, and OSGi services. As the complexity of web service composition increases, ensuring dependability and availability becomes essential. To enhance the dependability of service flow execution, fault-tolerant web service orchestration has been proposed. Fault diagnosis, a critical aspect of fault tolerance, aims to identify or locate the causes of process exceptions and failures based on runtime information. Since most detailed running information is recorded in log files, fault diagnosis by learning from log data is becoming an important issue.

Currently, semi-structured data formats, such as XML and JSON, are used as the standards for information representation on the Internet. Due to their flexibility and interoperability, more and more log files are represented in these formats, especially for web services. Thus, analyzing semi-structured and XML/JSON-like logs has become a key topic in fault diagnosis research. Generally, semi-structured documents contain richer structural information than flat ones, which can significantly impact classification accuracy. Most classification methods for log analysis, however, ignore this structural information, leading to low accuracy. Therefore, learning structural information from logs is crucial for improving fault classification accuracy.

In this paper, we propose a similarity-based Bayesian learning approach for fault classification of semi-structured logs. Our method first estimates the similarity degrees of structural elements from heterogeneous log data. Then, it constructs the basic structure of a combined Bayesian network (CBN) and uses a similarity-based learning algorithm to compute probabilities in the CBN. Finally, test log data can be classified into the most probable fault categories based on the generated CBN.

The rest of the paper is organized as follows: Section 2 introduces related work on fault diagnosis of web service composition and existing classification methods for (semi-)structured documents. Section 3 provides an overview of the similarity-based structural classification approach and the CBN model. Section 4 presents the details of CBN generation, including how to compute probabilities using a similarity-based learning algorithm. Section 5 shows experimental results comparing our approach to other learning approaches. Finally, Section 6 concludes the paper.

2. Related Work

Over the past years, some research in the web services area has concentrated on enhancing the dependability and availability of web services. Fault-tolerant web services have been proposed to enhance the reliability of service flow execution. Fault diagnosis, a critical aspect of fault tolerance, aims to identify or locate the causes of process exceptions and failures based on runtime information. Since most detailed running information is recorded in log files, fault diagnosis by learning from log data is becoming an important issue.

Currently, semi-structured data formats, such as XML and JSON, are used as the standards for information representation on the Internet. Due to their flexibility and interoperability, more and more log files are represented in these formats, especially for web services. Thus, analyzing semi-structured and XML/JSON-like logs has become a key topic in fault diagnosis research. Generally, semi-structured documents contain richer structural information than flat ones, which can significantly impact classification accuracy. Most classification methods for log analysis, however, ignore this structural information, leading to low accuracy. Therefore, learning structural information from logs is crucial for improving fault classification accuracy.

In this paper, we propose a similarity-based Bayesian learning approach for fault classification of semi-structured logs. Our method first estimates the similarity degrees of structural elements from heterogeneous log data. Then, it constructs the basic structure of a combined Bayesian network (CBN) and uses a similarity-based learning algorithm to compute probabilities in the CBN. Finally, test log data can be classified into the most probable fault categories based on the generated CBN.

3. A Bayesian Network Approach to Fault Diagnosis

As a data-driven approach, the task of fault diagnosis is to construct a generative model based on training data from semi-structured log files and then classify test log data into possible fault categories using this model. Given the heterogeneity of log file sources in practice, it is a new challenge to develop methods for learning from semi-structured log data, which are similar in content but not identical in structure. For this reason, it is important to exploit the structural information contained in XML/JSON documents for the learning task. For simplicity, we use XML log files as an example in this paper. According to the classical representation, an XML document can be considered as a tree where each node represents a structural element. Given two XML log files generated by different service execution engines, the corresponding schema trees can be extracted, which often have similar content but slightly different structures.

Our main idea is to find the similarity between the nodes of these two trees and then construct the generative model by learning from the training log data based on similarity degrees. We propose a combined Bayesian network (CBN) as a generative model for semi-structured log data, where the probabilities depend on the distribution of both corresponding elements and their counterparts with high similarity degrees.

3.1. Overview of the Approach

In this approach, the learning problem is simplified by limiting the number of XML log files to two, which constitute the training dataset. If the number of log files is more than two, the learning problem can be transformed into several two-file problems. For example, suppose there are two log files, F0 and F1, as shown in Fig. 1. We can see that F0 and F1 have similar content but slightly different structures. In view of their structural differences, the following steps are taken:

1. Estimate the normalized similarity degrees of the nodes of T0 and T1, and then find the similar node pairs by ignoring those pairs whose degrees are below a threshold value.
2. Create the basic structure of the combined Bayesian network, which includes a combination part and a private part.
3. For each schema tree, calculate the combination similarity degrees between its nodes and the corresponding ones in the CBN, and normalize the values of the combination similarity degrees.
4. Compute the probabilities of the constructed CBN on all relevant data in the training dataset using the similarity degrees obtained from steps 1 and 3.
5. Given a runtime log record in XML format, use the generative CBN model to classify the test log data and diagnose possible faults according to the category it falls into.

Steps 1, 3, and 4 play important roles in this approach, responsible for the computation of similarity degrees. The detailed discussion of these steps will be given in Section 4.

3.2. Modeling Semi-Structured Log Files with Combined Bayesian Networks

The Bayesian network is a suitable model for representing the dependencies and relations between different elements of semi-structured data. Given the structural differences in the training data, we propose a combined Bayesian network (CBN), which is modeled by learning from heterogeneous training data based on quantified similarity. As a generative model, CBN can handle both structure and content information and can be used to classify test log data.

Generally, each log file consists of a set of log data records, which are labeled with related fault categories. These labeled log records constitute the training dataset. We associate a CBN model with each category of the training dataset. Since data records in the same category may have different logical structures, a CBN is constructed by combining the structural and content information of all data records in the corresponding category. The network parameters are learned from all training data records in this category. To realize fault diagnosis, we classify test log data records into possible fault categories by performing inference in the constructed CBNs.

Consider the sample XML log files F0 and F1 in Fig. 1. For the training data in a given category c, the schema information of each log record can be represented by T0 or T1. According to this, we can construct the basic structure of the CBN by combining T0 and T1, which contains a set of structural nodes denoted by Ns. Additionally, there are also a set of content nodes (as leaf nodes in the CBN) denoted by Nt for representing textual information of the log data. For simplicity, the discussion below will mainly focus on the structural nodes.

Fig. 2 shows the basic structure of the CBN, which is a directed graph with T0 and T1 as its subgraphs. Each node in this CBN has a node c for the corresponding category as its father (which is omitted for simplicity). According to the quantified similarity results, the structural nodes can be divided into two groups: the combination group and the private group. The combination group contains the nodes that have corresponding nodes or their similar counterparts in both T0 and T1. In comparison, the private group is composed of the nodes that only have corresponding nodes in T0 (or T1).

4. Similarity-Based Bayesian Learning for Fault Diagnosis

In this section, we propose a similarity-based Bayesian learning approach for fault diagnosis. Firstly, we introduce how to estimate similarity degrees of schema elements for constructing combined Bayesian networks. Then, we present how to learn probabilities of CBNs in detail. Finally, we give the method of classifying log data records using CBNs for fault diagnosis in Subsection 4.3. To illustrate this learning approach, we will continue to use the example given in Section 3.

4.1. Estimating Similarity Degrees for Constructing CBNs

Since the probabilities of CBNs depend on the distribution of both corresponding data and their similar counterparts in the training dataset, we need to find the correspondences between the nodes of the extracted schema trees. Consider the schema trees T0 and T1 in the previous example. There are many nodes in T0 and T1 that have similar meanings but different names. To discover the correspondences between these nodes, we will exploit both textual and structural information of T0 and T1.

The task of finding consistency between similar elements of two schemas is often regarded as matching. In this subsection, we will estimate element similarity degrees by schema matching. For the matching method, we refer to the similarity flooding algorithm [26]. This algorithm takes two graphs (schemas, catalogs, or other data structures) as input and produces a mapping between corresponding nodes of the graphs as output. Based on the similarity flooding algorithm, our method tries to find a mapping between corresponding nodes of the schema trees. Moreover, we utilize graded structural information in different stages, which can improve both initial mapping accuracy and computational efficiency.