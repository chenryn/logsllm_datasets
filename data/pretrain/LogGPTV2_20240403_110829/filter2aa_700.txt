1
IceRiver⾼版本Q.V简单说明
前⾔
⼀些功能使⽤介绍
Self Inject模式
由于CS 4.6版本之后，官⽅对ts和client端做了代码分离，ts端⼜由java to native技术做了编译，因此后
续版本对ts端的修改，将不再那么容易，所以⽬前所做的⼆开主要集中在client端。IceRiver今后的计划
是：保持CS的稳定性、规避内存和⾏为查杀、添加实⽤性插件、结合其他开源项⽬更⾼效的应⽤于实
战。
这个插件是⾃从4.4版本的IceRiver就已经存在的，在4.7版本实现⽅式有了变动，但对于⽤户侧使⽤⽅法
不变。默认情况下，可以看到beacon的inject配置显示为"default". 
这个时候执⾏⼀些后渗透的模块，⽐如screenshot，将会采⽤spawn模式，在beacon侧将会采⽤fork & 
inject & resume，也就是注⼊傀儡进程执⾏RDI。 
前⾔
⼀些功能使⽤介绍
Self Inject模式 
2
由于注⼊傀儡进程的操作太敏感，已经被各⼤杀软加⼊⾏为⿊名单，这⾥为了在不改beacon端代码的前
提下，通过修改client发送到ts端的指令（由spawn改成inject），来实现绕过⾏为查杀。 
选择其中⼀条session，右键可以看到IceRiver⼦菜单，点击SelfInject，界⾯上的inject显示由default变
成less。 
这个时候再次使⽤screenshot模块，可以看到由spawn模式改成了inject到beacon所在进程的模式。 
3
点击DisableSelfInject模式，将会再次回到default。 
这时再次使⽤screenshot验证beacon⾏为，可以看到再次回到了默认的spawn模式。 
4
SelfInjectFull插件是计划⽀持第三⽅⾃定义native dll、.net assembly注⼊beacon⾃身，⽬前还在实现
和测试验证当中。