# 【技术分享】物联网设备安全分析之网络摄像头篇
|
##### 译文声明
本文是翻译文章，文章来源：insinuator.net
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
翻译：[shan66](http://bobao.360.cn/member/contribute?uid=2522399780)
预估稿费：200RMB（不服你也来投稿啊！）
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**  
**
**传送门**
[【技术分享】智能家居设备安全分析手记 ](http://bobao.360.cn/learning/detail/3270.html)
**前言**
当前，嵌入式设备已逐渐成为私人或公司网络的攻击入口点。例如，针对HackingTeam的攻击正是沿着这条路径进行的。所以，为了安全起见，一定要保护好您的嵌入式设备。在这篇文章中，我要跟大家分享自己在分析嵌入式设备（即ADIMAX的IC-3116W网络摄像头）方面的经验。
虽然这篇文章主要介绍如何分析网络摄像头，但是涉及的技术和工具也同样适用于其他设备。特别是，我将分步进行介绍，包括1.）如何获取固件并利用它收集信息，2.）如何获得系统访问权限，和3.）如何在设备上安装gdbserver
。此外，我不会在这篇文章中披露任何“复杂”的漏洞，而是只关注有助于分析该设备的那些漏洞，例如管理界面中的远程代码执行漏洞。
**  
**
**一步一步分析设备**
在下面，我将一步一步地讲解如何正确搭建网络摄像头的安全测试环境。就这里来说，最初的步骤与普通的Web应用程序渗透测试没有多大的区别。也就是说，第一阶段是信息收集阶段，需要从供应商的网站、谷歌等地方收集摄像头的有关信息，或通过用合适的工具（Burp
Suite、nmap等）来扫描摄像头提供的各种服务（特别是管理接口）。然后是漏洞利用阶段，取得对摄像头的永久性访问权限。最后是漏洞利用的后期阶段，建立正确的调试/分析工具，并部署到摄像头上面。  
**  
**
**第一步：搜集信息**
在分析设备的过程中，关键的一步是收集尽可能多的信息。幸运的是，Edimax在其网站上提供了这款摄像头的大量信息，例如数据表、手册、固件和工具链（以及用来构建映像的文件等），但是，仍然没有我们感兴趣的那些二进制文件的源代码。
不过，固件能够为我们提供该摄像头的大量内部秘密。通过在固件上使用binwalk，我们可以提取该相机的文件系统。
    $ binwalk -e IC3116W_v2.10.bin
    DECIMAL         HEX             DESCRIPTION
    -------------------------------------------------------------------------------------------------------    605             0x25D           LZMA compressed data, properties: 0x88, dictionary size: 1048576 bytes, uncompressed size: 65535 bytes
    10392           0x2898          LZMA compressed data, properties: 0x5D, dictionary size: 8388608 bytes, uncompressed size: 3735204 bytes
    1245312         0x130080        Squashfs filesystem, little endian, version 4.0, compression: lzma, size: 4072088 bytes,  907 inodes, blocksize: 131072 bytes, created: Mon Feb 22 11:50:40 2038
可以看出，开发人员使用了SquashFS文件系统。为了探索这个文件系统，我们可以使用unsquashfs（支持LZMA）：
    $ unsquashfs -d filesystem 130080.squashf
这样就得到了未压缩的文件系统（它被保存在filesystem文件夹中）。
    $ ls -a filesystem
    .  ..  bin  dev  etc  home  init  lib  mnt  proc  sys  test  tmp  usr  var  web  www
提取文件系统后，我们就可以探索该摄像机上的文件了。文件系统包含一些我们感兴趣的二进制文件，如telnetd，wget，ftp等等。然而，nmap的扫描（默认IP地址印在该设备的背面）结果显示，在默认情况下是不会行运telnet守护程序的。
    $ nmap -sS -p0- --reason -v -T3 -Pn 192.168.2.3
    [...]
    Nmap scan report for 192.168.2.3
    Host is up, received arp-response (0.00065s latency).
    Not shown: 65534 closed ports
    Reason: 65534 resets
    PORT     STATE     SERVICE     REASON
    80/tcp   open      http        syn-ack
    554/tcp  open      rtsp        syn-ack
    MAC Address: 74:DA:38:34:AA:75 (Unknown)
    [...]
Web服务器的根目录位于www。通过考察这个文件夹，我们发现了一些无需身份验证即可访问的cgi文件，这些文件有：
    l  /www/camera-cgi/public/anonymous.cgi
    l  /www/camera-cgi/public/getSysteminfo.cgi
    l  /www/camera-cgi/public/supportiPhoneAppVersion.cgi
特别地，anonymous.cgi和getSysteminfo.cgi暴露了该网络摄像头的大量配置信息（例如内部IP地址，固件版本等）。
通过访问文件系统，我们可以了解该摄像头上面有哪些文件，并通过这些文件来收集信息。在下一步，我们将使用自动扫描和手动测试来窥探该摄像头的内部工作机制。因此，这里不妨先熟悉一下该摄像头上所运行的应用程序。如上图所示，通过nmap扫描结果可以获悉，在端口80上运行了一个Web服务器（用于管理的Web界面）。让人高兴的是，默认登陆凭证已经打印在相机背面了，用户名是admin，密码为1234。
有了这些，我们就获得了系统的部分访问权限。
**  
**
**第二步：获得系统访问权限**
通过对Web界面的自动扫描和手动测试，我们发现系统日志允许远程代码执行。借助于telnetd的路径，我们可以通过以下方式启动telnet服务：
现在可以通过telnet连接到摄像机：
    $ telnet 192.168.2.3
    Trying 192.168.2.3...
    Connected to 192.168.2.3.
    Escape character is '^]'.
    IC-34AA75 login: admin
    Password: 
    RLX Linux version 2.0
             _           _  _
            | |         | ||_|                 
       _  _ | | _  _    | | _ ____  _   _  _  _ 
      | |/ || | / /   | || |  _ | | | | / /
      | |_/ | |/       | || | | | | |_| |/    
      |_|   |_|_/_/   |_||_|_| |_|____|_/_/
    For further information check:
    http://processor.realtek.com/