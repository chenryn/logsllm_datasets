 800
 900
 1000
 0
 100
 200
 300
 400
 700
Number of query passwords (k)
 500
 600
1st letter
2nd letter
3rd letter
best coverage
 800
 900
 1000
 400
 700
Number of query passwords (k)
 500
 600
Figure 3. Coverage plots for six and seven character passwords.
space is important because otherwise a cracker could
brute-force through all the possible passwords generated
by such a tool.
5.2.1. Mnemonic Generators
Research by Raskin et. al. [3] and the mnemonic-password
generator from [31] are the closest to our work. As far as
we are aware, those are the only two attempts, other than
our work, at generating mnemonics by leveraging Natural
Language Processing algorithms. Raskin et. al. [3] try to
automatically generate “humorous” verse to help remem-
ber passwords. While humorous verse is a potentially ef-
fective way to remember passwords, automatic generation
of humorous verse is a daunting challenge. Existing tools
for automatic humor generation do not scale well enough to
encode a large password space. For example, Raskin’s sys-
tem can generate mnemonics for passwords that consist of
eight characters chosen from a Latin character set (a-z). Our
system can be easily extended to handle arbitrary password
length and is capable of handling passwords with characters
from an arbitrarily large character-set.
Very little public documentation is available for
[31]. Their system automatically generates a series of
 tuples some of which could be ap-
pealing to an user. Similar to our system, they maintain a set
of sentence templates internally. e.g., “’s 
,  ’s  ”. For each to-
ken in the set of templates, a set of words are maintained
internally as possible mnemonics. For example, 
could be associated with Mark, Dan, Gene, Snake etc., Ev-
ery time a user requests a password to be generated, the
system randomly picks a sentence template and for each
token in the template, randomly chooses a word associ-
ated with the token. Each word acts as a mnemonic for a
character in the generated password. For example, the tem-
plate “’s  s ’s 
” could be used to generate the sentence “Mark’s
canary illustrates Dylan’s ninth haddock” which encodes a
password “MciD9h” [25]. The following differences high-
light the advantages of our system over [31]:
• Sentence templates: Our system automatically gen-
erates the sentence templates from an existing text
corpus whereas [31] depends on a manually created
template corpus. Using an existing corpus has the
following advantage: The generated mnemonics look
more “real” and have a greater variety as opposed to
the “manufactured” feel of the sentences generated by
[31].
• Semantics of the generated mnemonics: By virtue of
using a text-corpus, the mnemonics generated by our
system have richer semantic content than those gener-
ated by [31].
• Extensibility: Because of the ability to generate syn-
tactic and semantic variants of the sentences from the
text-corpus, our system can be easily extended to gen-
erate memorable mnemonics for a larger set of pass-
words and for passwords of arbitrary length.
5.3. Automatic Story Generation Systems
Automatic story and prose generation are classical prob-
lems studied in the ﬁelds of Artiﬁcial Intelligence and nat-
ural language generation respectively. Stories generated by
automatic story telling machines could be potentially used
as mnemonics. However, existing automatic story genera-
tion tools [15, 14, 8], were not designed with our needs in
mind and hence are not directly applicable in our context
because of the following reasons:
• Interactivity: Most of the story generation systems
are interactive and are not completely automatic. We
need to be able to automatically generate stories.
7
• Lack of semantic variability: The story generation
systems do not generate plot-lines for the stories by
themselves from scratch. The plot-lines and most of
the information needed for narrating a story is avail-
able to the generation systems in the form of a knowl-
edge base. Unfortunately, all the systems we know of
are research prototypes that were built to demonstrate
the effectiveness of the story generation procedure it-
self. Hence their knowledge bases are often extremely
limited. Because of this limitation, the stories gener-
ated are often repetitive and “mechanical” in nature.
This not only severely affects the memorability of the
generated stories, but also limits the number of unique
stories generated and hence the number of passwords
covered.
6. Future Work
The most appealing feature of our core-corpus is that
the sentences contain appealing semantic information that
make them highly memorable. Semantic variants of a sen-
tence might be less memorable than the original sentence.
However, syntactic variants are very attractive since they re-
tain the semantic content and hence the same level of mem-
orability. Similar to the generation of semantic variants, it is
possible to generate syntactic variants of every sentence us-
ing Natural Language Generation (NLG) techniques. Once
a sentence is parsed and is represented using an abstract text
representation, the ﬂexibility of the abstract representation
allows us to generate many syntactic variants of the same
semantic content using natural language generation tools
such as RealPro [27].
While generating semantic variants of sentences in our
core-corpus, we rely on part of speech information as indi-
cators of senses of the words. We would like to incorporate
the ability to perform word sense disambiguation at a ﬁner
granularity than part of speech. We plan to leverage existing
tools such as [28].
The headlines used in the core-corpus are short in nature.
Hence, the length of the passwords that can be encoded us-
ing the headlines is limited. In the future, we would like to
explore ways to generate memorable natural language text
that can encode longer passwords.
The most critical issue we would like to investigate is the
memorability of the mnemonics generated by our system.
Unlike coverage, there are no objective measures for mem-
orability. Hence, we plan to conduct an elaborate usability
study to answer the following questions:
• How much longer does a user remember a random
password with the aid of the mnemonics generated by
our system?
• How many such passwords can a user remember si-
multaneously using our mnemonics?
• What is the impact of encoding techniques (the nth let-
ter encoding, overloading special characters) on the ef-
fectiveness of the mnemonics?
7. Conclusion
In this paper, we propose an automatic mnemonic gen-
erating system to make text-password systems more usable.
Our system helps users remember crack-resistant passwords
by automatically generating mnemonics. We discuss the
issues that arise while trying to encode passwords using
mnemonics. We evaluate our system and discuss potential
future improvements. Our initial results indicate that auto-
matic mnemonic generation is a very promising approach
for infusing usability into text-password systems.
Acknowledgments
We thank Prof. Mike Atallah, Mercan Topkara and all
the anonymous reviewers. Their feedback helped us im-
prove the quality of this paper.
References
[1] A. Addams and M. A. Sasse. “Users are not the en-
emy,” In Communications of the ACM, Volume 42 ,
Issue 12, 1999, pages 40-46.
[2] John R. Anderson and Christian Lebiere. The Atomic
Components of Thought
[3] Mikhail J. Atallah, Craig J. McDonough, Victor
Raskin, Sergei Nirenburg. “Natural language pro-
cessing for information assurance and security: an
overview and implementations,” Proceedings of the
2000 workshop on New security paradigms, 2000.
[4] G. E. Blonder. “Graphical password.” US Patent
5559961, Lucent Technologies, Inc., Murray Hill, NJ,
August 30, 1995.
[5] G. H. Bower, “Analysis of a mnemonic device,” In
American Scientist, 58, 496-510.
[6] G. H. Bower, M. B. Karlin, and A. Dueck. “Compre-
hension and memory for pictures.” Memory and Cog-
nition, 2:216-220, 1975.
[7] G. H. Bower and J. S. Reitman, “Mnemonic elabora-
tion in multilist learning,” In Journal of Verbal Learn-
ing and Verbal Behavior, 11, 478-485.
8
[8] S. Bringsjord D. Ferrucci, “Artiﬁcial Intelligence and
Literary Creativity:
Inside the Mind of Brutus, a
Storytelling Machine.” Lawrence Erlbaum Associates,
1999.
[9] H. Davies. “Physiognomic Access Control,” Informa-
tion Security Monitor, vol. 10m no. 3, 1995m pp 5-8.
[10] D. Davis, F. Monrose and M. K. Reiter, “On User
Choice in Graphical Password Schemes,” In Proceed-
ings of the 13th UNIX Security Symposium, August
2004.
[11] R. Dhamija and A. Perrig. “Deja Vu – A User Study:
Using Images for Authentication,” In Proceedings of
the 9th UNIX Security Symposium, August 2000.
[12] I. Jermyn, A. Mayer, F. Monrose, M. Reiter and A.
Rubin. “The Design and Analysis of Graphical Pass-
words,” In Proceedings of the 8th UNIX Security Sym-
posium, August 1999.
[13] D. Klein. “Foiling the cracker: A survey of, and im-
provements to, password security,” In Proceedings of
the 2nd USENIX Security Workshop, August 1990.
[14] H. Liu and P. Singh, “MAKEBELIEVE: Using com-
monsense knowledge to generate stories.” In Proceed-
ings of the Eighteenth National Conference on Artiﬁ-
cial Intelligence and Fourteenth Conference on Inno-
vative Applications of Artiﬁcial Intelligence, (pp. 957-
958).
[15] J. Meehan. “TALE-SPIN and Micro TALE-SPIN.” In
Roger C. Schank and Christopher K. Riesbeck (Eds.),
Inside computer understanding. Hillsdale, NJ: Erl-
baum, 1981.
[16] G.A. Miller. “The Magical Number Seven, Plus or Mi-
nus Two.” Psychological Review, vol. 63, 1956, pages
81-87.
[17] R. Morris and K. Thompson. “Password security:
the ACM,
A case history,” Communications of
22(11):594 597, November 1979.
[18] D. L. Nelson, U. S. Reed, and J. R. Walling. “Picture
superiority effect,” Journal of Experimental Psychol-
ogy: Human Learning and Memory, 3:485 497, 1977.
[19] J. Nielsen. Usability Engineering. Academic Press.
1993.
[20] A. Paivio, T. B. Rogers, and P. C. Smythe. “Why are
pictures easier to recall than words?” Psychonomic
Science, 11:137-138, 1968.
[21] Password
Generator.
Available
http://www.alphalink.com.au/˜sergeb/easy-to-
remember-passwords.html
at:
[22] Password
Generator
at:
http://www.diplodock.com/Products/PasswordGenera
tor/default.aspx
Available
2005.
[23] PC KIMMO - A morphological parser. Available at:
http://www.sil.org/pckimmo/
[24] A. Perrig and D. Song. “Hash visualization: A new
technique to improve real-world security.” In Proceed-
ings of the 1999 International Workshop on Crypto-
graphic Techniques and E-Commerce (CryTEC ’99),
1999.
[25] Personal Communication.
[26] Project
Gutenberg.
http://www.gutenberg.org/
Available
at:
[27] RealPro.
at:
http://www.cogentex.com/technology/realpro/index.sh
tml
Available
[28] Senseclusters.
Available
at:
http://www.d.umn.edu/ tpederse/code.html
[29] E. Spafford. “Observing Reusable Password Choices,”
In Proceedings of the 3rd UNIX Security Sympo-
sium, pages 299–312, Berkeley, CA, September 1992.
Usenix Association.
[30] Stanford Log-linear Tagger. Available at: http://www-
nlp.stanford.edu/software/tagger.shtml
[31] The
password
mnemonic
generator.
http://www.aber.ac.uk/cgi-
Available
bin/user/syswww/gw/mnemonic
at:
Science Behind Passfaces. Revision
2,
[32] The
Real
2001.
http://www.realuser.com/published/ScienceBehindPa
ssfaces.pdf.
Corporation,
September
User
[33] J. Thorpe and P. C. van Oorschoti. “Graphical Dictio-
naries and the Memorable Space of Graphical Pass-
words,” In Proceedings of the 13th USENIX Security
Symposium, 2004.
[34] J. Thorpe and P. C. van Oorschoti. “Towards Secure
Design Choices for Implementing Graphical Pass-
words,” In Proceedings of the 20th Annual Computer
Security Applications Conference (ACSAC), 2004.
[35] US Dept. of Defense, “Password Management Guide-
line,” CSC-STD-002-85, 1985.
9
[36] Wikipedia
entry
for
‘mnemonic’,
http://en.wikipedia.org/wiki/Mnemonic
[37] Wordnet. Available at: http://wordnet.princeton.edu/
[38] Jeff Yan, Alan Blackwell, Ross Anderson and Alas-
dair Grant. “Password memorability and security: em-
pirical results,” Security & Privacy Magazine, IEEE,
Volume 2, Issue 5, 2004, pages 25-31.
10