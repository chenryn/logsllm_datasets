### 优化后的文本

#### IP 地址
192.168.1.196  
状态：完成

#### 图 4-17 - 我们的 Nessus 扫描报告摘要
提示：请注意，由于本次扫描使用了 Windows 登录凭据进行授权扫描，因此 Nessus 在本次扫描中发现的漏洞数量将比非授权扫描多得多。

#### 4.3.5 将扫描结果导入 Metasploit 框架
接下来，我们将把扫描结果导入到 Metasploit 框架中。

1. **下载报告**：
   - 在“Reports”页面中点击“Download Report”（下载报告）按钮，将扫描结果保存到硬盘。Nessus 默认的报告文件格式为 `.nessus`，可以被 Metasploit 解析。选择默认格式即可。

2. **创建数据库并导入数据**：
   - 打开 MSF 终端，使用 `db_connect` 创建一个新的数据库，然后使用 `db_import` 命令，并在命令后面加上导出的报告文件名，将扫描结果导入到数据库中。
   ```bash
   msf> db_connect postgres:toor@127.0.0.1/msf3
   msf> db_import /tmp/nessus_report_Host_195.nessus
   [*] Importing 'Nessus XML (v2)' data
   [*] Importing host 192.168.1.195
   ```

3. **验证导入数据**：
   - 使用 `db_hosts` 命令验证扫描的主机和漏洞数据是否正确导入。该命令会输出一个简要列表，包含目标的 IP 地址、探测到的服务数量以及 Nessus 在目标上发现的漏洞数量。
   ```bash
   msf> db_hosts -c address,svcs,vulns
   Hosts
   address  svcs  vulns
   192.168.1.195  18  345
   ```

4. **显示详细漏洞列表**：
   - 如果需要显示详细的漏洞列表，可以输入不带任何参数的 `db_vulns` 命令。
   ```bash
   msf> db_vulns
   [*] Time: Wed Mar 09 03:40:10 UTC 2011 Vuln: host=192.168.1.195 name=NSS-10916 refs=0SVDB-755
   [*] Time: Wed Mar 09 03:40:10 UTC 2011 Vuln: host=192.168.1.195 name=NSS-10915 refs=0SVDB-754
   ...
   ```
   这些参考数据在撰写渗透测试报告时非常有价值。

#### 4.3.6 在 Metasploit 内部使用 Nessus 进行扫描
如果你希望在命令行环境中使用 Nessus，可以使用 Zate 编写的 Nessus 桥插件（[NessusBridge 插件](http://blog.zate.org/nessus-plugin-dev/)）。该插件允许你通过 Metasploit 框架完全控制 Nessus，包括运行扫描、分析结果，甚至利用发现的漏洞发起攻击。

1. **删除现有数据库并创建新数据库**：
   ```bash
   msf> db_destroy postgres:toor@127.0.0.1/msf3
   [*] warning: You will need to enter the password at the prompts below
   Password:
   msf> db_connect postgres:toor@127.0.0.1/msf3
   ```

2. **加载 Nessus 插件**：
   ```bash
   msf> load nessus
   [*] Nessus Bridge for Metasploit 1.1
   [+] Type nessus_help for a command listing
   [+] Exploit Index - (/root/.msf3/nessus_index) - is valid.
   [*] Successfully loaded plugin: Nessus
   ```

3. **查看支持的命令**：
   - 使用 `nessus_help` 查看 Nessus 桥插件支持的所有命令。定期检查以了解是否有新的功能更新。

4. **连接到 Nessus 服务器**：
   ```bash
   msf> nessus_connect dookie:PI:EMAIL:8834ok
   [*] Connecting to https://192.168.1.101:8834/ as dookie
   [*] Authenticated
   ```

5. **列出扫描策略**：
   ```bash
   msf> nessus_policy_list
   [+] Nessus Policy List
   ID  Name  Comments
   -4  Internal Network Scan
   -3  Web App Tests
   -2  Prepare for PCI DSS audits
   -1  External Network Scan
   The_works
   ```

6. **启动扫描**：
   ```bash
   msf> nessus_scan_new 2 bridge_scan 192.168.1.195
   [*] Creating scan from policy number 2, called "bridge_scan" and scanning 192.168.1.195
   [*] Scan started. uid is d2f1fc02-3b50-4e4e-ab8f-38b0813dd96abaeab61f312aa81e
   ```

7. **查看扫描状态**：
   ```bash
   msf> nessus_scan_status
   [*] No Scans Running.
   ```

8. **获取扫描报告**：
   ```bash
   msf> nessus_report_list
   [+] Nessus Report List
   ID  Name  Status  Date
   074dc984-05f1-57b1-foc9-2bb80ada82fd3758887a05631c1d  Host_195  completed  19:43 Mar 08 2011
   d2f1fc02-3b50-4e4e-ab8f-38b0813dd96abaeab61f312aa81e  bridge_scan  completed  09:37 Mar 09 2011
   msf> nessus_report_get d2f1fc02-3b50-4e4e-ab8f-38b0813dd96abaeab61f312aa81e
   [*] importing d2f1fc02-3b50-4e4e-ab8f-38b0813dd96abaeab61f312aa81e
   [*] 192.168.1.195 Microsoft Windows XP Professional (English) Done!
   [+] Done
   ```

9. **确认数据导入**：
   ```bash
   msf> db_hosts -c address,svcs,vulns
   Hosts
   address  svcs  vulns
   192.168.1.195  18  345
   ```

现在你已经看到两种不同漏洞扫描产品得到的结果差异，理解了综合使用多个工具进行扫描的优点。然而，对这些自动化工具的扫描结果进行分析，并将其转化为可操作的数据，仍然是渗透测试者的重要任务。

#### 4.4 专用漏洞扫描器
虽然市面上有许多商业漏洞扫描产品，但你的选择并不限于它们。Metasploit 自带的许多辅助模块可以帮助你在网络上查找特定漏洞。下面介绍的几个 Metasploit 模块只是众多实用辅助模块中的一小部分。

##### 4.4.1 验证 SMB 登录
这种扫描动静较大，容易被察觉，每次登录尝试都会在被扫描的 Windows 主机系统日志中留下痕迹。

1. **选择并配置模块**：
   ```bash
   msf> use auxiliary/scanner/smb/smb_login
   msf auxiliary(smb_login)> show options
   Module options:
   Name  Current Setting  Required  Description
   PASS_FILE  no  File containing passwords, one per line
   RHOSTS  yes  The target address range or CIDR identifier
   RPORT  445  yes  Set the SMB service port
   SMBDomain  WORKGROUP  no  SMB Domain
   SMBPass  pIoMssed  no  SMB Password
   SMBUser  Administrator  no  SMB Username
   THREADS  50  yes  The number of concurrent threads
   USERPASS_FILE  no  File containing users and passwords separated by space, one pair per line
   USER_FILE  no  File containing usernames, one per line
   msf auxiliary(smb_login)> set RHOSTS 192.168.1.150-155
   RHOSTS => 192.168.1.150-155
   msf auxiliary(smb_login)> set SMBUser Administrator
   SMBUser => Administrator
   msf auxiliary(smb_login)> set SMBPass s3cr3t
   SMBPass => s3cr3t
   msf auxiliary(smb_login)> run
   [*] Starting host 192.168.1.154
   [*] Starting host 192.168.1.150
   ...
   [+] 192.168.1.155 - SUCCESSFUL LOGIN (Windows 5.1) 'Administrator':'s3cr3t'
   [*] Scanned 6 of 6 hosts (100% complete)
   [*] Auxiliary module execution completed
   ```

在很多公司中，工作站计算机的操作系统通常由同一个镜像克隆安装，在这些克隆系统上，管理员口令可能相同。获取了一个口令后，你可能拥有对所有工作站计算机的访问权限。

##### 4.4.2 扫描开放的 VNC 空口令
VNC 提供了图形化的远程系统访问方式，类似于微软的远程桌面。很多时候 VNC 是为了解决某些问题临时安装的，但使用完后管理员经常忘记删除它，从而留下未打补丁的 VNC 服务，成为一个严重的潜在漏洞。

1. **选择并配置模块**：
   ```bash
   msf> use auxiliary/scanner/vnc/vnc_none_auth
   msf auxiliary(vnc_none_auth)> show options
   Module options:
   Name  Current Setting  Required  Description
   RHOSTS  yes  The target address range or CIDR identifier
   RPORT  5900  yes  The target port
   THREADS  1  yes  The number of concurrent threads
   msf auxiliary(vnc_none_auth)> set RHOSTS 192.168.1.155
   RHOSTS => 192.168.1.155
   msf auxiliary(vnc_none_auth)> run
   [*] 192.168.1.155:5900, VNC server protocol version: RFB 003.008
   [*] 192.168.1.155:5900, VNC server security types supported: None
   [*] 192.168.1.155:5900, VNC server security types includes None, free access!
   [*] Scanned 1 of 1 hosts (100% complete)
   [*] Auxiliary module execution completed
   ```

如果你足够幸运，Metasploit 可能会为你找到一台没有口令的 VNC 服务器。你可以使用 BackTrack 的 vncviewer 连接到目标主机上的未设置口令的 VNC 服务器。

```bash
# vncviewer 192.168.1.155
```

希望这些步骤和示例对你有所帮助！