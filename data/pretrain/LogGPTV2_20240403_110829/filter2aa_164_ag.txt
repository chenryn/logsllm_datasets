### After the Image Flash Completes
Once the image flashing process is complete, you will see a confirmation message, and your command prompt will return. Congratulations, you have successfully completed the task!

### Task: Creating a Raspbian SD Card in Linux

Apple's OS X is based on Unix, which also forms the foundation for all Linux distributions. This means we can use the `dd` command to flash the Raspbian image onto an SD card in Linux. Here are the steps (note: I use Ubuntu 12.10 as my reference desktop Linux distribution throughout this guide):

1. **Download the Raspbian OS Image:**
   - Download the latest Raspbian OS image from the Raspberry Pi Foundation website.
   - Extract the `.img` file from the downloaded ZIP file and note its location.

2. **Open Terminal:**
   - In Ubuntu, open Terminal by clicking the Dash icon, typing "terminal," and pressing Enter (see Figure 4.9).

   **Figure 4.9:** The Dash in Ubuntu 12.10 functions similarly to Spotlight in OS X. When you click the Dash icon, a search window appears where you can type to find programs, documents, or settings. Typing "terminal" will bring up the built-in Terminal application as the first result.

3. **Plug in the SD Card:**
   - Insert your SD card into the computer and wait a few minutes for Linux to detect it.
   - Run the command `fdisk -l` from the Terminal to identify the device path of the SD card. Note the device path (e.g., `/dev/sdb`).

**Caution: Be Careful!**
The `dd` command is extremely powerful. If you specify the wrong drive path, you could accidentally erase your boot drive and lose valuable data.

4. **Flash the Raspbian Image:**
   - Use the following command to flash the Raspbian image:
     ```sh
     sudo dd if=image_file_name.img of=/dev/sdX bs=2M
     ```
   - Breakdown of the command:
     - `sudo`: Run the `dd` command with administrative privileges.
     - `dd`: The command that performs the image flashing.
     - `if`: Specifies the input file (the Raspbian image file).
     - `of`: Specifies the output file (the SD card, e.g., `/dev/sdX`).
     - `bs=2M`: Sets the block size to 2 megabytes, balancing speed and accuracy.

5. **Verify the Partitions:**
   - Run `fdisk -l` again to verify the partitions on the SD card. You should see two partitions: a FAT partition (Windows-compatible) and a larger Linux partition.

### An All-in-One Solution: NOOBS

For those new to computing, installing an operating system on the Raspberry Pi can be daunting. The New Out Of Box Software (NOOBS) project simplifies this process. NOOBS is a tiny boot loader that makes it easy to install various operating systems on your Raspberry Pi.

**Task: Installing an OS on Your Raspberry Pi Using NOOBS**

1. **Format the SD Card:**
   - Download and install the SD Association’s formatting tool, SD Formatter, from [here](http://is.gd/IFMlmc).
   - Format your SD card using the tool. Ensure the SD card has at least 4GB capacity.

2. **Prepare the SD Card:**
   - Download NOOBS from [here](http://is.gd/6EJlou).
   - Extract the contents of the NOOBS archive to the root level of your newly formatted SD card.

3. **Boot the Raspberry Pi:**
   - Insert the prepared SD card into the Raspberry Pi and power it on.
   - When the Pi Recovery window appears, select your desired operating system and click "Install OS."

4. **Complete Installation:**
   - Once the installation is complete, the Raspberry Pi will reboot and automatically load the chosen OS.

**Figure 4.11:** The NOOBS utility provides a simple menu for installing various Pi-tailored operating systems, including Arch Linux, OpenELEC, Pidora, RaspBMC, Raspbian, and RiscOS.

### Testing Your New Raspbian Image

To verify that your newly created Raspbian image works correctly:

1. **Insert the SD Card:**
   - Carefully insert the SD card into the Raspberry Pi's SD slot and connect the power supply.
   - Connect a keyboard, mouse, and monitor/TV as discussed in Chapter 2, "Hardware Components Quick Start."

2. **Check the Raspi-Config Interface:**
   - If everything is set up correctly, you should see the Raspi-Config interface (see Figure 4.12). If not, you can manually start it by running `sudo raspi-config` from the Terminal.

**Figure 4.12:** The Raspi-Config script is used for first-time setup of the Raspberry Pi.

### Chapter 5: Debian Linux Fundamentals—Terminal

Many people find the Linux operating system intimidating, especially the command line. However, modern distributions like Ubuntu and Raspbian are designed to be more user-friendly. Here are some common concerns and how to address them:

- **Command Line Intimidation:**
  - While Linux does use a command-line interface, it is powerful and efficient once you get the hang of it.
- **Strange Commands and Syntax:**
  - Yes, Linux commands can seem unusual, but they are logical and consistent.
- **Graphical Environments:**
  - Even though Linux graphical environments differ from Windows or OS X, they are still intuitive and functional.

### Baby Steps

Before diving into the command line, you need to log in to your Raspberry Pi. The default username is `pi`, and the default password is `raspberry`. Press Enter after entering each part of your login.

**Note on Case Sensitivity:**
Raspbian, like all Linux distributions, is case-sensitive. For example, `File.txt` and `file.txt` are considered different files.

If you connect to your Pi remotely using SSH or VNC (covered in Chapter 7, "Networking Raspberry Pi"), you must establish the remote connection before accessing the command prompt.

If you are using the LXDE graphical environment, you can open a Terminal session by double-clicking the LXTerminal icon on the Desktop (see Figure 5.1).

**Figure 5.1:** Starting a Terminal session from within the LXDE desktop environment.

### Essential Terminal Commands

Here are some essential Terminal commands for Raspbian (Debian) Linux:

- **startx:**
  - To switch from the command line to the GUI, type `startx` and press Enter.
  - To return to the command line from the GUI, click the Logout button in the bottom-right corner of the LXDE Desktop and select "Logout" (see Figure 5.2).

**Figure 5.2:** Returning to a full-screen Bash prompt from the LXDE desktop.

- **pwd:**
  - The `pwd` (present working directory) command shows your current location in the file system.
  - The Linux file system is hierarchical, with directories such as `/bin`, `/boot`, `/dev`, `/etc`, `/home`, `/lib`, `/media`, `/mnt`, `/opt`, `/proc`, `/root`, `/run`, `/sbin`, `/selinux`, `/srv`, `/sys`, `/tmp`, `/usr`, and `/var`.

- **ls:**
  - The `ls` command lists the contents of the current directory.
  - Use `ls -la` to list all files, including hidden and system files, in a detailed format (see Figure 5.3).

**Figure 5.3:** The `ls` command is one of the most frequently used commands in the Linux Terminal.

- **cd:**
  - The `cd` (change directory) command is used to navigate the file system.
  - Use `cd /path/to/directory` to change to a specific directory.
  - Use `cd ..` to move up one directory level.
  - Use `cd ~` to return to your home directory.

- **sudo:**
  - The `sudo` command allows you to run commands with administrative privileges.
  - Example: `sudo nano /etc/hosts` opens the hosts file in the nano editor with root permissions.

- **passwd:**
  - The `passwd` command changes the password for a user account.
  - Example: `sudo passwd pi` changes the password for the `pi` user.

- **nano:**
  - Nano is a simple text editor included in most Linux distributions.
  - Example: `nano filename.txt` opens or creates a file named `filename.txt` in the nano editor.

By mastering these commands, you will be well-equipped to navigate and manage your Raspberry Pi effectively. For further learning, consider picking up a book on Linux fundamentals, such as "A Practical Guide to Linux Commands, Editors, and Shell Programming" by Mark Sobell.