### SRTP Decryption and Analysis

#### Defined SRTP Key
- **Key**: `uK RfjSi9/fUFr8zoJu6zdqPw6MGtONhgX4yqwRj in this case`

#### Input and Output Files
- **Input File**: `Normal_Call_two_parties.pcap`
- **Output File**: `decoded.raw`

#### SRTP Decrypt Process
1. **Importing Decrypted Content**
2. **Imported Decrypted UDP Packets**
3. **Decode As RTP**
4. **Decoded Packets**
5. **Checking RTP Streams**
6. **Analyzing RTP Streams**
7. **Playing Decrypted Call**

#### Libsrtp
- **Description**: Implementation of the Secure Real-time Transport Protocol (SRTP)
- **Functionality**: Can decipher SRTP packets
- **GitHub Repository**: [github.com/cisco/libsrtp](https://github.com/cisco/libsrtp)

##### Installation Steps
1. **Cloning**
2. **Configure**
3. **Make**
4. **Ready**

##### Usage
- **SRTP Key**: Copy and use the defined key
- **Filtering for One Sender**: Filter a single RTP stream
- **Exporting Filtered Traffic**: Save the exported traffic

##### Command Example
```sh
./rtp_decoder -a -t 10 -e 128 -b 2stvabBcXXf3HtaHCSsB8WACeRBst9f7lwLqlzqE ./Normal_Call_two_parties_Decrypted.pcap
```
- **Options**:
  - `-t`: Treat the text before the packet as a date/time code
  - `%M:%S`: Time format
  - `-u`: Prepend dummy UDP header with specified source and destination ports

#### Other Important Parts
- **DTMF**
- **Messages (SMS)**
- **Exporting Call**

#### RTP DTMF and SIP Message
- **PCAP to WAV Conversion**:
  - **Online Service**: PCAP2WAV
  - **Offline Script**:
    - **Description**: Bash script to extract audio from VoIP calls
    - **Output**: `.wav` file
    - **Tools Used**: tshark and sox
    - **GitHub Repository**: [gist.github.com/avimar/d2e9d05e082ce273962d742eb9acac16](https://gist.github.com/avimar/d2e9d05e082ce273962d742eb9acac16)

#### VoIPShark
- **Description**: Collection of Wireshark plugins for:
  - Decrypting VoIP calls
  - Exporting call audio
  - Overview of traffic (Extensions, SMS, DTMF)
  - Common VoIP attacks
- **License**: GPL like Wireshark
- **GitHub Repository**: [github.com/pentesteracademy/voipshark](https://github.com/pentesteracademy/voipshark)

##### Limitations of Current Tools
- **Cumbersome and Complex Process**
- **Multiple Tools Required**
  - Compilation needed, time-consuming setup
  - Not user-friendly
  - Prone to user errors
- **Inability to Retain Timestamps, IP Addresses, etc.**
- **No Support for Live Traffic**

#### Why Wireshark Plugins?
- **Plug and Play**
- **Types**:
  - Lua scripts
  - Compiled C/C++ code
- **Advantages**:
  - Harnesses the power of Wireshark
  - OS independent
  - Large user base

#### Dissector and Chained Dissector
- **Dissector**:
  - Interprets payload data
  - Decodes its part of the protocol and passes the payload to the next dissector
- **Chained Dissector**:
  - Processes data from the previous dissector and passes the payload to the next dissector

#### VoIPShark Architecture
- **Hook in Dissector Chain**
- **Overall Architecture**
- **Decryption Routines**

#### Plugin Locations
- **Check**: Help > About Wireshark > Folders
- **Windows and Ubuntu Paths Provided**

#### Decrypting SRTP
- **Enabling Auto Decryption**
- **Decrypted SRTP (RTP)**

#### Exporting Call Audio
- **Specifying Location and File Name**
- **Exported Streams**

#### SIP Information Gathering
- **DTMF**
- **Extensions**
- **RTP Packet Transfers**
- **SIP Auth Export**
- **Servers and Proxy**
- **Unique Messages**

#### VoIP Attack Detection
- **Bruteforce**
- **Invite Flooding**
- **Message Flooding**
- **MiTM Attempts**
- **Unauthenticated Users**

#### Demo and Q&A
- **GitHub Repository**: [github.com/pentesteracademy/voipshark](https://github.com/pentesteracademy/voipshark)
- **Contact**: PI:EMAIL

---

This optimized version organizes the information into clear sections, making it easier to follow and understand.