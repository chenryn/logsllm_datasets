a combined entry weight of ∼1.2% and a combined exit weight
of ∼2.1%, compared to previous results that were collected with
7 relays providing 0.13% entry weight and 0.94% exit weight [26].
Additionally, we ensure that our exit relays will observe a represen-
tative sample of the types of traffic that Tor is used to transport by
configuring a custom exit policy that is more permissive than the
default exit policy. The policy we use throughout all of our mea-
surements7 allows traffic to ports that are commonly associated
with file sharing and blocked by the default policy.
5A modified Tor that exports events, such as stream ended or circuit ended, to PrivCount
using the Tor control protocol.
6Both tools are available at https://github.com/privcount.
7Reject *:25,*:119,*:135-139,*:445,*:563; Accept *:*
√
2.2.3 Privacy Settings. We configured our deployment to use
the privacy budget allocation techniques set out by Jansen and
Johnson [26], but we deviated slightly in setting the privacy pa-
rameters. We use an operator-based privacy model, wherein each
operator adds enough noise across the relays they operate to fulfill
the differential privacy requirements. Therefore, only one operator
must remain honest (and their relays uncompromised) in order
for our deployment to add the full amount of noise necessary to
provide differential privacy. If there are no compromises during
our measurements, then the protections on our counters will be
greater since our final counters will contain
3 times as much noise
as necessary. Each operator configured the privacy parameter δ =
10−3, which provides an upper bound on DCs choosing noise value
that violates ϵ-differential privacy. For entry-based statistics, we
used ϵ = 0.3, and for exit-based statistics we relaxed this parameter
somewhat to ϵ = 1.0 in order to provide better relative accuracy for
histogram-based counters while still providing adequate privacy.
Our deployment provides privacy according to the daily action
bounds in Table 1, from which privacy sensitivities can be com-
puted. For our general measurements (Section 3), we protect one
simultaneously-open entry connection for the entire measurement
period (the default behavior of a Tor client is to maintain a single en-
try connection). We protect 144 circuits of any type per day, which
is enough to create one circuit every 10 minutes (the default circuit
lifetime) over the length of the measurement period. According
to httparchive.org, 95% of pages result in 90 or fewer connections;
therefore, we protect 9,000 web streams (to port 80 or 443) which
could be used to browse 100 pages. We protect 80 streams to ports
officially associated with file sharing traffic8 in order to allow for
twice as many connections as peers that a new BitTorrent client
typically attempts to establish [7]. Further, we observed a maxi-
mum of 74 opened connections while downloading each torrent
for our BitTorrent traffic model (see Section 5.2.2). Therefore, we
expect that 80 streams will protect at least one torrent download.
We provide the same protections for traffic on other ports that are
not categorized as web or file sharing, since past work has found
that the vast majority of non-web traffic corresponds to file sharing
traffic [8, 26, 39]. Finally, we protect 10 MiB of data transferred on
streams, which covers 95% of pages according to httparchive.org.
Note that histogram-based counters are sensitive to the change in
81214, [4661,4666], [6346,6429], 6699, [6881,6999], 45682, 51413
ClientsTorServersDataCollectorsDC1PrivCountTSSK1DC2SK2SK3ShareKeepersTally ServerOur deployment:11 entry relays, 11 DCs6 exit relays, 6 DCs3 SKs1 TSSession 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1946Table 2: Mean Combined Consensus Bandwidth Weights of
all Relays in PrivCount Deployment during Measurements
Circuits per client
r
t
n
E
t
i
x
E
Purpose of Measurement
Total clients and circuits
#
y 1
2
3
4
Streams per circuit, bytes per stream (All)
5
6
Streams per circuit, bytes per stream (Web)
7 Streams per circuit, bytes per stream (Other)
8
9
Hidden Markov packet model
Hidden Markov stream model
Total circuits and streams
Total bytes on streams
Weight*
1.26%
1.13%
2.13%
2.14%
2.27%
2.29%
2.54%
1.49%
1.33%
* Weights correspond to the relay measurement position.
the number of inputs and not to the change in their values, and so
we use twice the number of inputs that can change as sensitivities
for histogram-based counters. (For example, we use 288 as the sen-
sitivity for the histogram of streams per circuit, since each circuit
would cause an increment to a histogram bin counter and a drop in
the count of one bin would raise the count in another.)
During our hidden Markov model (HMM) measurements (Sec-
tion 4), we adjust our actions bounds under the assumption that
circuits in Tor are unlinkable with one another (one of Tor’s design
goals [11]). We protect 1 circuit during the HMM measurements,
which we believe will allow for reasonable accuracy across the
HMM counters. We protect 31 streams and 2 MiB which covers
over 90% of circuits according to our general measurement results
(see Section 3).
2.3 Measurement Process
We conducted measurements in order to update and improve the
accuracy of previously-reported Tor entry and exit statistics [26]
and to learn hidden Markov models of Tor traffic. Accordingly,
we conducted our measurements in two main thrusts: a general
measurement phase and a traffic model measurement phase. During
each phase we ran several measurement periods of 24 hours each.
The purpose of each measurement and the mean combined entry or
exit consensus weight of our deployment during each measurement
is summarized in Table 2.
During our general measurement phase, we focused most mea-
surement periods on a collection of just a few statistics in order
to avoid distributing the privacy budget too widely and to ensure
we achieved the highest accuracy possible. In our earlier measure-
ments we focused on overall totals of the number of clients, cir-
cuits, streams, and bytes and their breakdown into traffic classes.
This was done to get a sense for the most important traffic classes,
the distributions of which we then further investigated by collect-
ing histogram-type counters. Histogram counters consume twice
as much privacy budget as regular counters and the count is dis-
tributed among multiple bins. Therefore, we ensure that the traffic
classes for which we collect histograms constitute a significant
portion of Tor traffic in order to maintain reasonable accuracy.
Our general measurements were conducted between 2017-10-
22 and 2017-12-01, and between 2018-01-10 and 2018-01-21. We
initially used previously-published statistics as traffic estimates
for the purposes of allocating our privacy budget [26], and then
updated these estimates in later measurement periods using results
from our earlier periods. We present in Section 3 the results from
7 general measurement periods, 2 of which were used to collect
entry-based statistics (rows 1 and 2 in Table 2) and 5 of which were
used to collect exit-based statistics (rows 3 through 7 in Table 2).
During our traffic model measurement phase, we focused on
measuring stream and packet hidden Markov traffic models. We
measure counters for each model for 14 sequential 24 hour periods.
At the end of each of these periods, the counter results are fed
back into the model in order to transform it to one that better fits
the observed traffic. Traffic model measurements were conducted
between 2018-03-19 and 2018-04-25; these measurements use only
exit-based observations (rows 8 and 9 in Table 2) because we model
individual TCP streams which can only be observed at Tor exit re-
lays (due to Tor’s multiplexing of streams over circuits). We present
in Section 4 the results from our 28 traffic model measurement
periods while also providing additional details about our model
learning techniques.
2.4 Ethical Considerations and User Safety
User safety was a primary goal during the measurement process.
Where applicable, we follow the techniques set out by recent privacy-
preserving Tor measurement research [13, 14, 26, 38], and we utilize
the state-of-the-art tool for measuring Tor in order to maintaining
user privacy and security of the measurement process [26]. Addi-
tionally, we considered the safety guidelines published by the Tor
research safety board1 and discussed our plans with several board
members before starting our measurements. Our tools and tech-
niques follow many safety guidelines, including data minimization,
collecting only what is safe to publish, taking reasonable security
precautions (each operator had exclusive access to their machines),
and limiting the granularity of data by adding noise. We believe
that the benefits from our measurements outweigh the risks to user
safety given our privacy and security guarantees and given that
the results of this work can benefit Tor experimentation across a
wide range of research areas.
3 MEASURING TRAFFIC STATISTICS
We focus our measurements on the number of clients, circuits,
streams, and bytes, as well as their distributions. PrivCount counts
the number of unique clients at the end of every 10 minute period
in order to limit the amount of time that client IP addresses are
stored in RAM. For consistency, we report all measurements as 10
minute means by dividing the daily count total by 144 (the number
of 10 minute periods during each 24 hour measurement period).
3.1 Entry Statistics
Entry relays have a limited view of Tor traffic types since they do
not directly observe stream information. However, they can observe
clients and circuits, and hence, the distribution of circuits per client.
This information is helpful in producing accurate Tor client models.
The results from our measurement of the total number of unique
clients and circuits in a 10 minute interval are shown in Table 3,
as well as the breakdown into active and inactive classes. From the
Session 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1947Table 3: The 10 minute mean entry statistics collected during
period 1 (see Table 2). The error associated with the addition
of privacy-preserving noise is shown with 95% confidence.
Table 4: The 10 minute mean exit circuit statistics collected
during period 3 (see Table 2). The error associated with the
addition of noise is shown with 95% confidence.
Statistic
Unique Clients
Active
Inactive
Circuits
Active
Inactive
Count (×103)
14.01 ± 0.513 (3.66%)
9.978 ± 0.347 (3.48%)
3.395 ± 0.185 (5.45%)
679.3 ± 3.64 (0.535%)
287.8 ± 2.94 (1.02 %)
391.5 ± 2.15 (0.548%)
% of Total
—
71.2% ± 3.60%
24.2% ± 1.59%
—
42.4% ± 0.488%
57.6% ± 0.441%
Circuit Stat.
Total
l
a
t
o
T
e
v
i
t
c
A
Active
Inactive
Web
FileSharing
Other
Count (×103)
61.34 ± 2.20 (3.59%)
31.78 ± 1.06 (3.35%)
28.28 ± 1.14 (4.02%)
28.15 ± 0.93 (3.29%)
0.850 ± 0.02 (2.66%)
4.76 ± 0.12 (2.44%)
% of Total
—
51.8% ± 2.54%
46.1% ± 2.48%
88.6% ± 4.16%
2.68% ± 0.114%
15.0% ± 0.621%
Table 5: The 10 minute mean exit stream statistics collected
during period 3 (see Table 2). The error associated with the
addition of noise is shown with 95% confidence.
Stream Stat.
Total
Web
FileSharing
Other
l
a
t
o
T
Count (×103)
263.5 ± 11.6 (4.39%)
238.4 ± 10.4 (4.38%)
1.374 ± 0.066 (4.80%)
19.91 ± 1.06 (5.34%)
% of Total
—
90.4% ± 5.61 %
0.52% ± 0.034%
7.56% ± 0.523%
Tor users only use a handful of circuits in an average 10 minutes,
suggesting that many Tor Browser users are only lightly browse the
web. Note that about 34 and about 47 percent of clients build zero