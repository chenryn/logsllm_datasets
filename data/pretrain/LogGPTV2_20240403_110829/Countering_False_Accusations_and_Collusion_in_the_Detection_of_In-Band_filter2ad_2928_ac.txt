V1
V2
D
C
G
E
B
V1
V2
F
D
A2
C
C) Votes: 2 anomalous, 2 normal
D) Votes: 2 anomalous, 3 normal
Figure 6. Vote tally examples 
In a previous section, we stated that only by having 
disjoint  endpoints  can  measurements  be  treated  as 
coming from independent pairs of observers.  This is a 
248248
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:40:04 UTC from IEEE Xplore.  Restrictions apply. 
slight  oversimplification.    In  actuality,  we  apply  this 
vote tallying rule only if the measurements in question 
are in agreement.  If two measurements from the same 
source  disagree  (if  one  is  normal  and  the  other 
anomalous),  we  make  an  exception  and  treat  them  as 
coming from independent pairs.  This rule is necessary 
to  prevent  attackers  from  disqualifying  honest  nodes 
from voting with other honest nodes. 
In  Figure  6,  consider  example  6A.    Two  pairs  of 
independent  observers  can  falsely  report  anomalous 
votes,  namely  (A1,C)  and  (A2,B).    The  pair  (B,  C) 
should  be  able  to  report  a  single  normal  vote.    B 
however,  is  also  participating  in  measurements  with 
A2.  Similarly, C is also participating in measurements 
with A1.  So without this exception, all normal votes 
might be disqualified; this gives the attackers an unfair 
and  unnecessary  advantage  because  the  pair  (B,C) 
should be entitled to register one normal vote. 
In  example  6B,  an  additional  honest  node  D  is 
added, but this does not increase the number of honest 
votes because D requires an additional honest node to 
pair up with.  In example 6C, honest node E is added, 
which  makes  another  independent  pair  of  observers 
possible.  Note that D could be paired with either B or 
E,  as  may  C.    Regardless,  two  independent  pairs  of 
honest  observers  are  now  possible,  which  brings  the 
tally to a 2-2 tie.  As example 6D shows, to reach a 2-3 
tally  in  favor  of  the  honest  nodes,  at  least  6  honest 
nodes  are  needed,  with  at  least  3  on  each  side  of  the 
accused link.  
4.4.  Self-contained wormhole detection 
prototype  
The  strategies  presented  above  are  intended  to 
support accurate wormhole detection despite injection 
of  bogus 
intrusion  detection  data  by  colluding 
attackers.    This  means  being  able  to  tolerate  false 
accusations  while  ensuring 
that  false  claims  of 
innocence  do  not  undermine  correct  detection  and 
localization of attacking nodes.  To assess the utility of 
these strategies, we constructed a prototype distributed 
detection  system  and  subjected  it  to  a  variety  of  test 
conditions  in  a  48-node  network  testbed  running  the 
OLSR protocol. 
the  network  periodically  measures 
As  in  our  prior  work  [14],  the  prototype  is  a 
distributed cooperative detection system in which each 
node 
the 
roundtrip delay to each of the nodes that OLSR states 
are 3 hops away.  These measurements are obtained by 
using  ping  –R.    Each  node  measures  these  roundtrip 
delays  using  2  ping  packets  every  5  seconds  plus 
random jitter between 0 and 5 seconds.  The –R option 
records  the  roundtrip  path  taken  by  the  probes.    If  a 
in 
than 
Nodes 
returning, 
ping packet ends up taking a different path toward the 
destination 
the  associated  delay 
measurements are discarded.  As stated in Section 4.1, 
we assume that probe packets, unlike ping packets, can 
be made stealthy.  Consequently, we use ping simply 
as a placeholder for a more-sophisticated future probe 
mechanism. 
anomalous 
and  normal  delay 
measurements  and  path  descriptions  to  a  correlation 
node that is the root of a dynamic hierarchy [23].  The 
correlation  node  attempts  to  determine  whether  a 
wormhole  is  present,  and  if  so,  the  location  of  the 
wormhole link.  Paths whose minimum delay times are 
greater  than  a  specified  threshold  are  classified  as 
anomalous.    To  designate  a  link  as  a  wormhole  link, 
the correlator requires the following evidence: 
send 
anomalous  measurements  from  at  least  two 
independent pairs of observers; and 
fewer  normal  measurements  from  independent 
paths  through  the  same  (accused)  middle  link 
than anomalous measurements.   
In  case  of  a  tie  between  anomalous  and  normal 
votes, the benefit of the doubt goes to the accused link, 
which will not be identified as a wormhole. 
• 
• 
Below we describe our testbeds, attack tools, and 
5.  Testing 
test scenario. 
5.1.  Network testbeds 
Our test environment consists of two testbeds based 
on NRL’s Mobile Ad-Hoc Network Emulator (MANE) 
[19].  One testbed is at ARL; the other is at SPARTA. 
Both  contain  48  test  nodes;  one  or  more  MANE 
servers,  which  emulate  node  positions,  mobility,  and 
radio connectivity; and a single experiment control and 
monitoring  node.  Each  test  node  is  connected  to  a 
single MANE server.  Using geographic position data 
periodically  advertised  by  the  controller  node,  each 
MANE 
the  current  MANET 
connectivity,  and  selectively  forwards,  corrupts,  or 
drops  packets  traveling  between  test  nodes.    MANE 
servers  share  a  separate  server-to-server  data  channel 
over which packets are forwarded between test nodes 
residing  on  different  servers.  Test  nodes  are  also 
connected  to  the  experiment  control  node  via  a 
separate channel used for control, monitoring, and data 
collection.    Each  test  node  runs  the  Fedora  Core  3 
operating system and the OLSR daemon developed at 
the University of Oslo’s UniK organization [22].   
server  computes 
ARL’s  testbed  includes  four  MANE  servers,  each 
connected to twelve test nodes.  Each test node in the 
249249
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:40:04 UTC from IEEE Xplore.  Restrictions apply. 
ARL testbed contains a Pentium 4 3GHz processor, 1 
GB  of  RAM,  and  two  gigabit  Ethernet  interfaces, 
which  are  used  to  connect  the  node  to  its  assigned 
MANE server and to the control channel. 
SPARTA’s testbed includes a single MANE server, 
which  is  connected  to  all  48  test  nodes  via  VLAN-
configured  Ethernet  switches.    The  test  nodes  are  a 
heterogeneous  collection  of  older  Pentium-family 
systems  having  CPU  speeds  from  approximately  400 
MHz to 2 GHz, and memory capacities from 128MB to 
1GB.  The  test  nodes  are  connected  to  the  MANE 
server  and  control  channel  via  100  mbps  Ethernet 
links. 
5.2.  Attack tools 
We  used  two  types  of attack  tools.    The  first, 
described  in  more  detail  previously  [14],  creates  in-
band  wormholes.    This  requires  creating  multiple 
tunnels, capturing OLSR control messages, forwarding 
them  through  the  tunnels,  and,  for  some  forms  of 
wormholes,  broadcasting  the  messages  after  they 
emerge from the tunnels.  After the wormhole begins 
attracting data packets, these too are forwarded through 
the  tunnels.  In  addition,  the  routes  on  each  attacking 
node  must  be  specially  configured  according  to  the 
surrounding network topology to ensure that tunneled 
data packets are correctly forwarded. 
The second type of tool causes bogus information to 
be inserted into the intrusion detection system, directly 
or  indirectly.    It  includes  two  components.  One  is 
modified  version  of  the  data  collector,  an  element  of 
the  intrusion  detection  system  that  runs  on  all  nodes.  
The  benign  version  of  the  data  collector  sends 
roundtrip  probes  to  3-hop  neighbors.    When  a  probe 
returns, the data collector reports the measured loss and 
delay  to  the  intrusion  detection  system.    Attacking 
nodes  use  a  malicious  version  of  this  component  to 
report false values to the intrusion detection system to 
implicate  other  nodes  or  evade  detection.    The  other 
component  uses  the  Linux ipqueue  subsystem  [18]  to 
delay  roundtrip  probes  it  receives  and  returns.  This 
corrupts  the  measurements  observed  by  an  honest 
probe  initiator,  causing  the  initiator  to  report  the 
associated link as anomalous.  These false accusations 
and  measurement  delays  are  activated  by 
these 
components  only  when  two  attackers  are  three  hops 
apart  and  are  potentially  able  to  create  corroborating 
false accusations. 
5.3.  Test scenario 
An  attacker’s  ability  to  attract  traffic  and  consume 
bandwidth  during  a  wormhole  attack  depends  on  the 
positioning of the attacking nodes within the MANET 
topology.  For example, if the attacking nodes are all 
relatively  close  together,  the  wormhole  link  may  not 
appear  to  be  a  significant  shortcut  for  any  traffic 
sources and destinations.  We developed a specialized 
mobility scenario that is conducive to usable wormhole 
attacks yet provides sufficient topological randomness 
to  test  the  prototype  detector  under  a  variety  of 
conditions. 
  In  particular,  the  test  scenario  was 
designed to maximize the opportunity for attackers to 
generate  corroborating  false  accusations  to  test  our 
opportunistic voting algorithm. 
In this scenario, benign nodes are assigned random 
positions in a two-dimensional field that is 500 meters 
in  width  and  350  meters  in  “height”.    These  nodes 
travel at a speed of 1 meter per second along randomly 
assigned  headings.    When  a  node  reaches  the  field 
boundary,  it  is  reflected  and  continues  onward.    The 
mobility  scenario  includes  four  colluding  attackers.  
The attacking nodes are initially placed at the corners 
of  a  450  meter  by  250  meter  inner  rectangle  that  is 
centered within the field.  Attacking nodes also travel 
at  1  meter  per  second  along  random  headings; 
however,  each  attacker  is  additionally  confined  to  a 
small rectangular region 15 meters by 15 meters.  This 
allows  some  attacker  movement,  but  maintains  the 
approximate initial positioning near the corners of the 
inner rectangle.  Figure 7 shows an example topology. 
Wormhole Link (Illusion)
Potential Victim of 
False Accusations
Figure 7.  Example 48-node topology
This  attacker  positioning  satisfies  two  objectives.  
First, the wide horizontal spacing allows the upper (or 
lower) pair of attackers to create a wormhole link that 
appears  to  be  substantially  shorter  than  any  real  path 
from  one  side  of  the  topology  to  the  other.    Such  a 
wormhole  link  will  exhibit  a  strong  “gravitational” 
force [11], attracting traffic from large regions around 
the  wormhole  endpoints.  Second, 
the  vertical 
positioning  was  chosen  so  that  the  pair  of  attacking 
nodes on each side of the inner rectangle would often 
be  3  hops  apart,  given  the  120-meter  emulated 
250250
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:40:04 UTC from IEEE Xplore.  Restrictions apply. 
times that pass through wormhole link (e.g., as the first 
hop),  the  attacker  will  falsely  report  that  roundtrip 
times  are  normal.    The  intent  of  this  lie  is  to  evade 
detection.    In  reality,  because  the  detector  does  not 
consider “self-reports”, this form of lying should have 
no  impact  on  the  detector.    Second,  whenever  an 
attacker is three hops from its counterpart on the same 
side of the topology, it will report that roundtrip times 
to each of its 3-hop neighbors are anomalous.  Third, 
under  the  same  conditions,  the  attacker  will  delay  3-
hop  probes  for  which  it  is  the  roundtrip  turnaround 
point. If such a probe was generated by an honest node, 
the  node  will  be  tricked  into  reporting  the  path  as 
anomalous.    If  3-hop  probes  to  or  from  a  pair  of 
attackers  traverse  a  common  middle  hop,  the  two 
attackers  will  then  be  able  to  generate  (or  stimulate) 
corroborating false accusations. If a sufficient number 
of  honest  nodes  are  not  topologically  positioned  to 
probe  this  victim  link  and  refute  the  accusation,  the 
attackers will then be able to trick the detector.   
6.  Test results 
We conducted two sets of tests.  The objective of the 
first set was to verify that the prototype detector is able 
to  detect  self-contained  in-band  wormholes,  despite 
attempts at evasion by the attacker.  These tests were 
run on ARL’s testbed because its faster, more reliable 
hardware  improved  the  stability  and  duration  of  the 
wormholes,  providing  more  usable  detection  testing 
opportunities per run.  The objective of the second set 
was  to  assess  the  resilience  of  the  detector  to 
corroborating  false  accusations  by  colluding  attacker 
pairs.  Since these tests do not require persistent stable 
wormholes,  we  were  able  to  run  them  on  SPARTA’s 
testbed. 
transmission  range  we  chose.  This  enables  each  such 
pair  to  generate  corroborating  false  accusations,  as 
described in Section 4.2 above.   
As shown in Figure 7, we configured the wormhole 
tool to create a self-contained wormhole link (shortcut) 
between the top left and top right attackers, nodes 102 
and  105.    The  covert  tunnel  used  to  carry  OLSR 
control  packets  and  data  packets  from  102  to  105  
traverses the other three sides of the attacker rectangle, 
traveling via attacker waypoints 101 (bottom left) and 
103  (bottom  right).    Since  the  attacker  nodes  are  not 
immediate  neighbors,  the  tunnel  is  necessarily  routed 
through  benign  intermediary  nodes,  who  serve  as 
unwitting  accomplices. 
  Although  affected  by 
geographic positioning, the number of hops between a 
pair  of  attackers  also  depends  on  the  positioning  of 
these benign intermediaries. 
This  wormhole  configuration  results  in  a  long 
tunnel,  often  9  or  more  hops  in  length.    From  the 
attacker’s perspective, a long tunnel may be desirable 
because  it  consumes  more  bandwidth  and  does  so 
across  more  neighborhoods.    Hence  this  attack  is 
relatively severe.  On the other hand, a wormhole with 
a  long  tunnel  should  be  easier  to  detect  because  the 
tunnel  path’s  loss  and  delay  characteristics  should  be 
clearly distinguishable from the characteristics of a true 
single  hop,  which  the  tunnel  purports  to  be.    In  fact, 
this  configuration  was  chosen  to  facilitate  sensor 
accuracy so that our testing could focus on the problem 
of  interest:  countering  deliberate  lying  by  malicious 
sensors rather than mitigating honest errors by benign 
sensors.    Figure  7  also  shows  that  the  link  between 
nodes  109  and  111 
is  a  potential  victim  of 
corroborating  false  accusations,  because  it  lies  in  the 
middle  of  a 3-hop path  between  two  attacking nodes, 
105 and 103.   
In order for OSLR to conclude that nodes 102 and 
105  are  immediate  neighbors  and  can  be  used  to 
improve routes, OLSR control packets (e.g., HELLOs) 
need to travel reliably from one end of the tunnel to the 
other.    In  the  presence  of  probabilistic  packet  loss  of 
even a few percent, a UDP-based tunnel of this length 
will not deliver HELLOs with sufficient consistency to 
satisfy  OLSR,  and  the  wormhole  link  will  not  be 
persistent.  To avoid this problem, the wormhole tunnel 
was configured to provide a reliable transport based on 
TCP.    Consequently,  we  configured  the  prototype  to 
use measurements of roundtrip delay rather than loss.  
This 
the 
acknowledgement  timeouts  and  packet  retransmits 
triggered  by  probabilistic 
loss  will  exaggerate 
roundtrip times through the tunnel. 
the  expectation 
is  based  on 
The  attacker  software  is  configured  to  inject  three 
kinds of bogus information into the intrusion detection 
system.    First,  when  reporting  3-hop  roundtrip  delay 
that 
6.1.  Wormhole detection test results 
The first test consisted of 60 cycles, each containing 
10  seconds  of  topology  changes  generated  by  the 
random  heading  mobility  scenario  described  above, 
followed  by  a  wormhole  attack  lasting  90  seconds.  
The topology was held constant during the wormhole 
attack.  Each cycle included time for OLSR routes to 
settle  –  20  seconds  before  and  30  seconds  after  the 
attack.  The  testbed  was  also  configured  to  emulate 
packet  loss  based  on  a  free-space  path  loss  model.   
Although  the  network  carried  OLSR  control  traffic, 
wormhole tunnel control traffic, and intrusion detection 
infrastructure  traffic,  no  application  traffic  load  was 
present.    The  detector’s  path  delay  threshold  for 
designating a 3-hop path as anomalous was set to 6 ms.  
This value was determined via experimentation.   
251251
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:40:04 UTC from IEEE Xplore.  Restrictions apply. 
To  constitute  a  valid  wormhole  detection  test  case, 
we  require  a  wormhole  to  have  a  total  lifetime 
exceeding  15  seconds.  Of  the  60  test  cycles,  47 
resulted in wormholes that met this criterion, including 
several 
that  existed  over 
multiple time intervals, each shorter than 15 seconds. 
intermittent  wormholes 
Despite the attackers’ attempts to evade detection by 
reporting  normal  roundtrip  times  for  paths  traversing 
each wormhole, the prototype successfully detected all 
47 valid wormholes.  In addition, it detected four other 
wormholes  having  total  lifetimes  shorter  than  15 
seconds.  The detector also generated one false alarm, 
in  which  it  erroneously  identified  a  normal  link  as  a 
wormhole.    This  test  was  not  intended  to  assess  the 
prototype’s  accuracy with  any  depth or  precision,  but 
simply to demonstrate that detection of wormholes by 
measuring  and  analyzing  roundtrip  delays  is  feasible 
under certain circumstances. 
6.2.  False accusation test results  
The  second  set  of  tests  consisted  of  twelve,  hour-
long test runs.   Each run used 48, 43, 38, or 33 nodes, 
resulting in four different network densities.  The 43-
node configuration was created by discarding 5 random 