title:Who's In Control? On Security Risks of Disjointed IoT Device Management
Channels
author:Yan Jia and
Bin Yuan and
Luyi Xing and
Dongfang Zhao and
Yifan Zhang and
XiaoFeng Wang and
Yijing Liu and
Kaimin Zheng and
Peyton Crnjak and
Yuqing Zhang and
Deqing Zou and
Hai Jin
Who’s In Control? On Security Risks of Disjointed IoT Device
Management Channels
Yan Jia1,3,2,†, Bin Yuan4,5,2,†,∗, Luyi Xing2,∗,
Dongfang Zhao2, Yifan Zhang2, XiaoFeng Wang2, Yijing Liu1,
Kaimin Zheng4,5, Peyton Crnjak2, Yuqing Zhang7,3,8,∗, Deqing Zou4,5, Hai Jin6,5
1College of Cyber Science, Nankai University, China, 2Indiana University Bloomington, 3School of Cyber Engineering,
Xidian University, China, 4School of Cyber Science and Engineering, Huazhong Univ. of Sci. & Tech., China, 5{National
Engineering Research Center for Big Data Technology and System, Services Computing Technology and System Lab,
Hubei Engineering Research Center on Big Data Security, Cluster and Grid Computing Lab, Huazhong Univ. of Sci. &
Tech., China}, 6 School of Computer Science and Technology, Huazhong Univ. of Sci. & Tech., China, 7National
Computer Network Intrusion Protection Center, University of Chinese Academy of Sciences, China, 8School of
Computer Science and Cyberspace Security, Hainan University, China
ABSTRACT
An IoT device today can be managed through different channels,
e.g., by its device manufacturer’s app, or third-party channels such
as Apple’s Home app, or a smart speaker. Supporting each channel
is a management framework integrated in the device and provided
by different parties. For example, a device that integrates Apple
HomeKit framework can be managed by Apple Home app. We call
the management framework of this kind, including all its device-
and cloud-side components, a device management channel (DMC). 4
third-party DMCs are widely integrated in today’s IoT devices along
with the device manufacturer’s own DMC: HomeKit, Zigbee/Z-
Wave compatible DMC, and smart-speaker Seamless DMC. Each
of these DMCs is a standalone system that has full mandate on
the device; however, if their security policies and control are not
aligned, consequences can be serious, allowing a malicious user
to utilize one DMC to bypass the security control imposed by the
device owner on another DMC. We call such a problem Chaotic
Device Management (Codema).
This paper presents the first systematic study on Codema, based
on a new model-guided approach. We purchased and analyzed 14
top-rated IoT devices and their integration and management of mul-
tiple DMCs. We found that Codema is both general and fundamental:
these DMCs are generally not designed to coordinate with each
other for security policies and control. The Codema problems enable
the adversary to practically gain unauthorized access to sensitive
devices (e.g., locks, garage doors, etc.). We reported our findings
to affected parties (e.g., Apple, August, Philips Hue, ismartgate,
Abode), which all acknowledged their importance. To mitigate this
†Most work was done when the first two authors were at Indiana University Bloom-
ington.
∗Corresponding authors: Luyi Xing, Bin Yuan, Yuqing Zhang.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484592
new threat, we designed and implemented CGuard, a new access
control framework that device manufacturers can easily integrate
into their IoT devices to protect end users. Our evaluation shows
that CGuard is highly usable and acceptable to users, easy to adopt
by manufacturers, and efficient and effective in security control.
CCS CONCEPTS
• Security and privacy → Embedded systems security; Access
control; • General and reference → Empirical studies.
KEYWORDS
IoT, smart home, attack, device management channel, access control
ACM Reference Format:
Yan Jia, Bin Yuan, Luyi Xing, Dongfang Zhao, XiaoFeng Wang, Yifan Zhang,
Yijing Liu, Kaimin Zheng, Peyton Crnjak, Yuqing Zhang, Deqing Zou, Hai
Jin. 2021. Who’s In Control? On Security Risks of Disjointed IoT Device
Management Channels. In Proceedings of the 2021 ACM SIGSAC Conference
on Computer and Communications Security (CCS ’21), November 15–19, 2021,
Virtual Event, Republic of Korea. ACM, New York, NY, USA, 17 pages.
https://doi.org/10.1145/3460120.3484592
1 INTRODUCTION
Today’s Internet of Things (IoT) are managed by different frame-
works that allow users to utilize mobile apps to configure and
control devices through local connections (e.g., Bluetooth) or cloud
services. Some of these frameworks are provided by device manu-
facturers: e.g., a house owner can use the August app to lock/unlock
her door [12], the Philips Hue app to turn on/off her light bulbs [30],
and the ismartgate app to open/close her garage door [23].
In the meantime, the increasing diversity of IoT also gives rise
to third-party solutions, which handle different devices regardless
of their manufacturers. Prominent examples include Apple’s Home-
Kit [11], Zigbee [39] and Z-Wave [37] compatible frameworks. In
our research, we call such a framework, including all its device-
and cloud-side components, a device management channel (DMC),
or simply a channel. Today’s IoT devices tend to support multiple
DMCs, both the ones from manufacturers and those offered by third
parties. For example, the August smart lock can be controlled by
HomeKit, SmartThings hub (a Z-Wave compatible DMC), as well as
August’s own app. Each channel is a standalone system and their
Session 5A: Control System SecurityCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1289integration on a device, if not done right, can have serious security
implications, exposing the device to unauthorized access. With its
importance, this problem, however, has never been studied before.
Risks of disjointed DMCs. Indeed our research shows that to-
day’s DMC integration is fundamentally flawed, leaving different
channels on the same device completely disjointed or inadequately
coordinated in their security controls. More specifically, with the
heterogeneous architectures of different DMCs, whose security
policies and enforcement components scattered across device and
cloud ends, they all have a full mandate on the device, capable of in-
dependently determining whether a specific functionality (e.g., door
opening) should be granted. However, such access decisions are of-
ten uncoordinated, with one channel operating in a way completely
oblivious to other channels. As a result, any security policies con-
figured and enforced through one channel could be circumvented
through another channel. We call this risk chaotic device manage-
ment or Codema.
Exploiting Codema: analysis and discoveries. To understand
the real-world impacts of Codema, we focus on four major third-
party DMCs (Apple HomeKit, Zigbee or Z-Wave compatible channel
and BLE-based smart speaker channels) and their integration into
IoT devices besides device manufacturer DMCs (Section 3). Using a
model-guided approach , we systematically analyzed the security
management and policy coordination among different DMCs in a
set of highly popular devices, which shows that all these channels
integrated in popular devices contain Codema vulnerabilities and
can be easily exploited.
Since the Codema risk is related to human behaviors (e.g., whether
the owner of an IoT device leaves certain DMCs unused/open,
Particularly, third-party channels are typically disjointed from
manufacturer channels and between themselves. So for a device
owner who solely relies on her favorite channel, such as HomeKit, to
manage her device, other channels supported on the device become
unprotected and thus exposed to the malicious actor, a risk unaware
to the device owner. For example, an Airbnb homeowner could
manage her ismartgate garage controller through Apple HomeKit,
which however leaves the manufacturer DMC “dangling”: whoever
only temporarily given the access to her home Wi-Fi (e.g., her Airbnb
guest) becomes able to stealthily configure this channel to gain a
permanent remote control on the garage door (Section 3.1).
Further, although some manufacturer DMCs include the mecha-
nisms to control third-party DMCs by managing their individual
policies and internal states (e.g., allowing the user using the manu-
facturer app to open/close a third-party channel such as HomeKit
or control its network provision), we found that such mechanisms
are all flawed in the absence of a proper cross-DMC management
protocol enabling policy interoperability. This problem turns out to
be fundamental to the design of IoT access control, as discovered in
our study. For example, although the Abode smart hub is designed
to manage access to its HomeKit channel through the manufac-
turer channel (by generating HomeKit setup code), any user with
temporary access to the hub (e.g., an Airbnb guest) can acquire the
setup code to stealthily take over the HomeKit channel, even after
the temporary right has been revoked through the manufacturer
channel. This allows the user to later disarm the home security
system of the hub (Section 3.2).
whether she tends to temporarily grant the access to the device to
the party not fully trusted), we performed a user study to answer
such questions and better understand the attack feasibility. We
further performed a survey to understand whether the users have
been informed of the risks by device vendors in user manuals. Our
results indicate that Codema attacks are highly practical against
real-world users (Section 4).
Further, we discovered that the Codema risk is pervasive. We
looked into 14 high-profile devices, which all turn out to be vulnera-
ble. Examples include the Philips Hue bulb (dubbed “the Best Seller
of Smart Bulb in Amazon” [31]) and the August Lock (“the most
Advanced Smart Lock in Amazon” [26] ). Note that these confirmed
or potentially vulnerable devices cover almost all types of IoT de-
vices, including bridges, cameras, garage door controllers, lights,
locks, outlets, security systems (Section 3.3). Once such security-,
privacy- or safety-sensitive devices are stealthily controlled by an
unauthorized party, the consequences can be dire.
These findings provide strong evidence that the access control on
today’s IoT systems in the presence of multiple DMCs has not been
well thought-out. We reported the results of our study to the man-
ufacturers of all the devices we analyzed. They all acknowledged
that our findings are real and significant. We have been formally
recognized by HomeKit, Philips, August, ismartgate, and Abode,
and are helping them fix these problems. Video demos of our attacks
and parts of manufacturer responses are posted online [49].
Mitigating Codema. Given the significant impact of Codema, find-
ing effective protections that can work with today’s IoT systems is
imperative. For this purpose, we introduce Channel Guard (CGuard),
a new, light-weight access control framework for cross-DMC se-
curity management. The core idea is to have a centralized access
control framework in the device to oversee and govern the acces-
sibility of all DMCs on a device. Device manufacturers can easily
integrate CGuard into their firmware to help ensure that no DMC
is left in an unexpected accessibility status, such as dangling or
being enabled/accessed stealthily by the attacker.
We implemented CGuard and deployed it on a proof-of-concept
smart LED light we built on Raspberry Pi 3b, which supports multi-
ple DMCs. Our evaluation shows that the prototype eliminates the
Codema risk, and works properly with mainstream DMCs including
Apple HomeKit and Amazon Alexa. To evaluate the usability and
practicality of CGuard, we conducted another user study, which
shows our approach is highly acceptable by users to enhance the
security and privacy of smart homes. We make all the code publicly
available on Github [15] and further discuss a clean-slate design of
multiple-DMC IoT to fully solve Codema, through joint-effort across
multiple DMC providers and device manufacturers (Section 6).
Contribution. The contributions are outlined as follows:
• New understanding. Our research reveals a new category of un-
expected and security-critical weaknesses in today’s IoT designs,
which integrate multiple disjointed DMCs on the same device with-
out proper coordination in place to manage their policy configura-
tion and enforcement. We demonstrate that such weaknesses could
expose many IoT devices today to realistic security risks with seri-
ous consequences. Our study brings attention to this new problem,
sheds light on its fundamental causes and offers insights that can
lead to its solution.
Session 5A: Control System SecurityCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1290• New technical solutions. Based upon the understanding, we de-
signed a new access-control framework to mitigate the Codema
risks. Our approach can be easily adopted by a device manufacturer,
without changing third-party DMC designs and thus working well
with existing systems such as HomeKit. We implemented our de-
sign and demonstrated its efficacy and usability and open-sourced
our prototype. This new technique will enhance the security quality
of IoT devices, not only those already on the market but also those
to be built in the years to come.
2 DEVICE MANAGEMENT CHANNELS
On an IoT device, the user console, the IoT cloud, hub, and the on-
device software stack together form the DMC to allow the user to
manage the device. In this section, we explain the operations of the
popular DMCs integrated into mainstream IoT devices and security
policies they support (Section 2.1 and 2.2). Then we summarize
an abstracted state-machine model to generally describe a DMC’s
operations in IoT devices (Section 2.3).
2.1 Manufacture DMCs
Each manufacturer provides its own DMC(s), which we call m-DMC,
to control its products. m-DMC typically has one of the following
architectures:
• Cloud-based architecture. Many device manufacturers run a back-
end cloud service to support their mobile apps and enable remote
control. In this architecture (see Figure 1), one can issue commands
through the manufacturer app, which forwards the commands
to the cloud; after proper authentication and authorization, the
commands are delivered to the devices connected to the cloud
through the Internet. The cloud maintains a set of security policies
about users’ access rights on devices, which are used to mediate
the delivery of commands to the devices.
• Local-control architecture. Another common DMC is for local
control (also see Figure 1): the device can be paired with the manu-
facturer app through BLE or home Wi-Fi, to establish a connection
for receiving commands from the user.
• Hub-based DMC. Another common architecture is the hub-based
m-DMC: the device is directly connected to a hub through local
communication protocols (e.g., BLE, Z-Wave, Zigbee, etc.); the hub
connects to the manufacturer cloud through the Internet and relays
the messages between the device and the cloud.
2.2 Third-party DMCs
HomeKit DMC. HomeKit is Apple’s framework for configuring
and controlling smart-home devices, which has been widely sup-