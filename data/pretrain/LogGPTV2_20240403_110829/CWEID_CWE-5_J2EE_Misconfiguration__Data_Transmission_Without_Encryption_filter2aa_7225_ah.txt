### CWEID:CWE-514 Covert Channel
title_zh:间谍软件
A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.
### CWEID:CWE-515 Covert Storage Channel
title_zh:.NET误配置：使用伪装
A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.
### CWEID:CWE-516 DEPRECATED: Covert Timing Channel
title_zh:隐蔽通道
This weakness can be found at :CWE-385:.
### CWEID:CWE-520 .NET Misconfiguration: Use of Impersonation
title_zh:隐蔽存储通道
Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.
### CWEID:CWE-524 Use of Cache Containing Sensitive Information
title_zh:不充分的凭证保护机制
The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.
### CWEID:CWE-525 Use of Web Browser Cache Containing Sensitive Information
title_zh:弱口令要求
The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.
### CWEID:CWE-522 Insufficiently Protected Credentials
title_zh:凭证传输未经安全保护
The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.
### CWEID:CWE-523 Unprotected Transport of Credentials
title_zh:通过缓存导致的信息暴露
Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.
### CWEID:CWE-527 Exposure of Version-Control Repository to an Unauthorized Control Sphere
title_zh:通过浏览器缓存导致的信息暴露
The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.
### CWEID:CWE-521 Weak Password Requirements
title_zh:通过环境变量导致的信息暴露
The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.
### CWEID:CWE-529 Exposure of Access Control List Files to an Unauthorized Control Sphere
title_zh:将CVS仓库暴露给非授权控制范围
The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.
### CWEID:CWE-526 Cleartext Storage of Sensitive Information in an Environment Variable
title_zh:将CoreDump文件暴露给非授权控制范围
The product uses an environment variable to store unencrypted sensitive information.
### CWEID:CWE-528 Exposure of Core Dump File to an Unauthorized Control Sphere
title_zh:将访问控制列表文件暴露给非授权控制范围
The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.
### CWEID:CWE-530 Exposure of Backup File to an Unauthorized Control Sphere
title_zh:将备份文件暴露给非授权控制范围
A backup file is stored in a directory or archive that is made accessible to unauthorized actors.
### CWEID:CWE-531 Inclusion of Sensitive Information in Test Code
title_zh:通过日志文件的信息暴露
Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions.
### CWEID:CWE-533 DEPRECATED: Information Exposure Through Server Log Files
title_zh:通过测试代码导致的信息暴露
This entry has been deprecated because its abstraction was too low-level. See :CWE-532:.
### CWEID:CWE-534 DEPRECATED: Information Exposure Through Debug Log Files
This entry has been deprecated because its abstraction was too low-level. See :CWE-532:.
### CWEID:CWE-532 Insertion of Sensitive Information into Log File
Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.
### CWEID:CWE-535 Exposure of Information Through Shell Error Message
title_zh:通过Shell错误消息导致的信息暴露
A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.
### CWEID:CWE-536 Servlet Runtime Error Message Containing Sensitive Information
title_zh:通过Servlet运行时错误消息导致的信息暴露
A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.
### CWEID:CWE-537 Java Runtime Error Message Containing Sensitive Information
title_zh:通过Java运行时错误消息导致的信息暴露
In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.
### CWEID:CWE-539 Use of Persistent Cookies Containing Sensitive Information
title_zh:通过源代码导致的信息暴露
The web application uses persistent cookies, but the cookies contain sensitive information.
### CWEID:CWE-538 Insertion of Sensitive Information into Externally-Accessible File or Directory
title_zh:文件和路径信息暴露
The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.
### CWEID:CWE-540 Inclusion of Sensitive Information in Source Code
title_zh:通过持久性Cookie导致的信息暴露
Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.
### CWEID:CWE-541 Inclusion of Sensitive Information in an Include File
If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.
### CWEID:CWE-542 DEPRECATED: Information Exposure Through Cleanup Log Files
title_zh:通过包含源代码导致的信息暴露
This entry has been deprecated because its abstraction was too low-level. See :CWE-532:.
### CWEID:CWE-543 Use of Singleton Pattern Without Synchronization in a Multithreaded Context
title_zh:在多线程上下文中使用缺失同步机制的Singleton设计模式
The product uses the singleton pattern when creating a resource within a multithreaded environment.
### CWEID:CWE-545 DEPRECATED: Use of Dynamic Class Loading
This weakness has been deprecated because it partially overlaps :CWE-470:, it describes legitimate programmer behavior, and other portions will need to be integrated into other entries.
### CWEID:CWE-544 Missing Standardized Error Handling Mechanism
title_zh:可疑注释
The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.
### CWEID:CWE-546 Suspicious Comment
title_zh:标准化错误处理机制缺失
The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.
### CWEID:CWE-547 Use of Hard-coded, Security-relevant Constants
title_zh:口令域未进行输入隐藏
The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.
### CWEID:CWE-548 Exposure of Information Through Directory Listing
title_zh:使用硬编码、安全相关的常数
A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.
### CWEID:CWE-549 Missing Password Field Masking
title_zh:通过服务器错误消息导致的信息暴露
The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.
### CWEID:CWE-550 Server-generated Error Message Containing Sensitive Information
title_zh:通过目录枚举导致的信息暴露
Certain conditions, such as network failure, will cause a server error message to be displayed.
### CWEID:CWE-551 Incorrect Behavior Order: Authorization Before Parsing and Canonicalization
title_zh:不正确的行为次序：在解析与净化处理之前进行授权
If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.
### CWEID:CWE-553 Command Shell in Externally Accessible Directory
title_zh:J2EE误配置：在配置文件中明文存储口令
A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.
### CWEID:CWE-555 J2EE Misconfiguration: Plaintext Password in Configuration File
title_zh:外部可访问目录中的命令行Shell
The J2EE application stores a plaintext password in a configuration file.
### CWEID:CWE-554 ASP.NET Misconfiguration: Not Using Input Validation Framework
title_zh:ASP.NET误配置：没有使用输入验证框架
The ASP.NET application does not use an input validation framework.
### CWEID:CWE-556 ASP.NET Misconfiguration: Use of Identity Impersonation
title_zh:ASP.NET误配置：使用身份伪装
Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.
### CWEID:CWE-552 Files or Directories Accessible to External Parties
title_zh:对外部实体的文件或目录可访问
The product makes files or directories accessible to unauthorized actors, even though they should not be.
### CWEID:CWE-558 Use of getlogin() in Multithreaded Application
title_zh:在多线程应用程序中使用getlogin()
The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.
### CWEID:CWE-560 Use of umask() with chmod-style Argument
title_zh:在chmod类型参数中使用umask()
The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().
### CWEID:CWE-561 Dead Code
title_zh:返回栈上的变量地址
The product contains dead code, which can never be executed.
### CWEID:CWE-564 SQL Injection: Hibernate
title_zh:死代码
Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.
### CWEID:CWE-563 Assignment to Variable without Use
title_zh:SQL注入：Hibernate
The variable's value is assigned but never used, making it a dead store.
### CWEID:CWE-566 Authorization Bypass Through User-Controlled SQL Primary Key
title_zh:未使用的变量
The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.
### CWEID:CWE-562 Return of Stack Variable Address
title_zh:通过用户控制SQL主密钥绕过授权机制
A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.
### CWEID:CWE-568 finalize() Method Without super.finalize()
title_zh:在信任Cookie未进行验证与完整性检查
The product contains a finalize() method that does not call super.finalize().
### CWEID:CWE-565 Reliance on Cookies without Validation and Integrity Checking
title_zh:在多现场上下文中未能对共享数据进行同步访问
The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.
### CWEID:CWE-572 Call to Thread run() instead of start()
title_zh:表达式永假
The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.
### CWEID:CWE-570 Expression is Always False
title_zh:没有super.finalize()的finalize()方法
The product contains an expression that will always evaluate to false.
### CWEID:CWE-567 Unsynchronized Access to Shared Data in a Multithreaded Context
title_zh:表达式永真
The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.
### CWEID:CWE-571 Expression is Always True
title_zh:调用线程的run()方法而非start()方法
The product contains an expression that will always evaluate to true.
### CWEID:CWE-574 EJB Bad Practices: Use of Synchronization Primitives
title_zh:调用者对规范的不恰当使用
The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.
### CWEID:CWE-575 EJB Bad Practices: Use of AWT Swing
title_zh:EJB不安全实践：使用同步原语
The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.
### CWEID:CWE-576 EJB Bad Practices: Use of Java I/O
title_zh:EJB不安全实践：使用AWTSwing
The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.
### CWEID:CWE-573 Improper Following of Specification by Caller
title_zh:EJB不安全实践：使用套接字
The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.
### CWEID:CWE-577 EJB Bad Practices: Use of Sockets
title_zh:EJB不安全实践：使用JavaI/O
The product violates the Enterprise JavaBeans (EJB) specification by using sockets.
### CWEID:CWE-578 EJB Bad Practices: Use of Class Loader
title_zh:EJB不安全实践：使用类加载器
The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.
### CWEID:CWE-579 J2EE Bad Practices: Non-serializable Object Stored in Session
title_zh:J2EE不安全实践：将不可序列化的对象存储在会话中
The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.
### CWEID:CWE-580 clone() Method Without super.clone()
title_zh:未定义super.clone()的clone()方法
The product contains a clone() method that does not call super.clone() to obtain the new object.
### CWEID:CWE-581 Object Model Violation: Just One of Equals and Hashcode Defined
title_zh:对象模型违背：仅定义了一个等式与散列码
The product does not maintain equal hashcodes for equal objects.
### CWEID:CWE-583 finalize() Method Declared Public
title_zh:公开、最终、静态声明的数组
The product violates secure coding principles for mobile code by declaring a finalize() method public.
### CWEID:CWE-582 Array Declared Public, Final, and Static
title_zh:在最后的代码块中返回
The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.
### CWEID:CWE-585 Empty Synchronized Block
title_zh:公开声明的finalize()方法
The product contains an empty synchronized block.
### CWEID:CWE-584 Return Inside Finally Block