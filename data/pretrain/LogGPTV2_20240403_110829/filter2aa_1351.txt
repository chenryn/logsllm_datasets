### 365-Day: HTTPS Cookie Stealing
**Mike Perry**  
**Defcon 2007**

#### About Me
- **Volunteer Tor Developer**: I contribute to projects like Torbutton and TorFlow.
- **Privacy Advocate and Censorship Opponent**: I am committed to protecting user privacy and fighting against internet censorship.
- **Forward and Reverse Engineer at Riverbed**: I work on advanced network technologies.
- **Flexitarian**: I follow a flexible, mostly plant-based diet.
- **Random Hacker**: I have developed a page-based malloc debugger and an IRC bot that was once quoted in a major magazine as if it were a human.

#### Why This Topic?
While the exploit I will discuss is not new or particularly complex, it has significant implications:
- **Broad Attack Vector**: It is not limited to Wi-Fi networks. Sophisticated attackers can use custom cable/DSL modems to drain bank accounts.
- **Threat to Safe Tor Usage**: This attack can undermine the security of Tor, which is a major concern for me.
- **Widespread Vulnerability**: Many websites are vulnerable, and they often do not take adequate measures to protect themselves.
- **Response Strategy**: By releasing a tool, we can lower the bar for attackers, thereby encouraging more sites to adopt proper SSL/TLS practices.

#### Cookie Basics
Cookies are variables set by websites in your browser, used for authentication, tracking, and storage. They have several properties that determine when and how they are transmitted:
- **Domain**: The domain that the cookie is valid for.
- **Path**: The path within the domain where the cookie is valid.
- **Expiration**: The time until the cookie expires.
- **SSL Bit**: This flag indicates whether the cookie should only be transmitted over secure (HTTPS) connections. Unfortunately, this flag is seldom used, leading to potential vulnerabilities.

#### The 'SideJacking' Attack
- **Sniffer-Based Approach**: This attack involves sniffing cookies transmitted via plaintext HTTP.
- **Proxy-Based Method**: A janky proxy approach can be used to control and save the intercepted cookies.
- **Passive Nature**: The user must visit the target site for the attack to work.
- **Domain and Path Information**: The attacker can save domain and path information, but overly specific paths can cause issues.
- **Publicity**: Despite its simplicity, this attack has garnered significant media attention, far beyond my own PR capabilities.

#### Active HTTP Cookie Hijacking
This attack is similar to Cross-Site Request Forgery (CSRF), but the goal is to intercept the data transmitted rather than achieve a specific result. Even if the server rejects the request, the attacker can still capture the data.
- **Scenario**:
  - **Yesterday**: The user logs into `mail.yahoo.com` and checks "Remember me."
  - **Today**: The user visits `www.cnn.com` via an open Wi-Fi network.
  - **Today**: The attacker injects a malicious script.
  - **Today**: The browser transmits Yahoo cookies for an image request.
  - **Today**: The attacker sniffs the cookies and writes them to `cookies.txt`.
  - **Tomorrow**: The attacker uses `cookies.txt` to read the user's email.

#### Active HTTPS Cookie Hijacking
- **Scenario**:
  - **Yesterday**: The user logs into `https://mail.google.com`.
  - **Today**: The user visits `www.cnn.com` via an open Wi-Fi network.
  - **Today**: The attacker injects a malicious script.
  - **Today**: The browser transmits an unprotected Gmail GX cookie for an HTTP image fetch.
  - **Today**: The attacker sniffs the cookies and writes them to `cookies.txt`.
  - **Tomorrow**: The attacker uses `cookies.txt` to read the user's email.
- **Key Point**: The user does not even need to check their Gmail on the hostile network for the attack to succeed.

#### Attack Vectors
- **Open Wi-Fi Networks**
- **ARP Poisoning**
- **DHCP Spoofing**
- **Cable and DSL Modem Networks**: It is possible to sniff and inject on these networks, though some use DOCSIS authentication and encryption, which may require two modems with switched TX/RX frequencies.

#### Manual Attack
- **Process**:
  - Start Wireshark to capture network traffic.
  - Use tools like Airpwn or Netsed with custom rules.
  - Extract cookies from Wireshark.
  - This method, while effective, is cumbersome and inefficient.

#### Introducing CookieChaos
CookieChaos is a fully automated Pylorcon tool designed for cookie gathering:
- **DNS Response Caching**: It caches DNS responses.
- **443 Connections Monitoring**: It listens for connections on port 443 and uses the cache to map IP addresses to domain names.
- **Injection Queue**: It stores IP and host information for injection.
- **Automatic Injection**: When the IP connects to any website, it injects the malicious script.
- **Cookie Collection**: It gathers any resulting cookies and writes them to a `cookies.txt` file, which can be used in Firefox.

#### Configuration
- **Cookie Path for Injection**: Some sites require a specific cookie path. A list of paths for popular sites is provided.
- **Non-SSL Sites**: You can also target non-SSL sites. An additional target list can be provided.

#### Demo
[Demo]

---

This revised version aims to provide a clearer, more structured, and professional presentation of the topic.