    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**dnszone-all-params.yml**]{.strong} Ansible playbook
    文件的副本。例如：
    ``` literallayout
    $ cp dnszone-all-params.yml dnszone-all-params-copy.yml
    ```
4.  打开 [**dnszone-all-params-copy.yml**]{.strong} 文件进行编辑。
5.  通过在 `ipadnszone`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `zone_name`{.literal} 变量设置为
        [**zone.idm.example.com**]{.strong}。
    -   如果要允许正向和反向记录同步，这是 A 和 AAAA 记录与 PTR
        记录的同步，请将 `allow_sync_ptr`{.literal} 变量设置为 true。
    -   将 `dynamic_update`{.literal} 变量设置为 true，以启用 IdM
        客户端计算机添加或更新其 IP 地址。
    -   将 `dnssec`{.literal} 变量设置为 true，以允许区域中的记录内联
        DNSSEC 签名。
    -   将 `allow_transfer`{.literal} 变量设置为区域中次要名称服务器的
        IP 地址。
    -   将 `allow_query`{.literal} 变量设置为允许发出查询的 IP
        地址或网络。
    -   将 `forwarders`{.literal} 变量设置为全局转发器的 IP 地址。
    -   将 `serial`{.literal} 变量设置为 SOA 记录序列号。
    -   为区域中的 DNS 记录定义
        `刷新`{.literal}、`重试`{.literal}、`过期`{.literal}
        `、`{.literal} `最小`{.literal}、`ttl 和 default_ttl`{.literal}
        值。
    -   使用 `nsec3param_rec 变量，为区域定义 NSEC3`{.literal} PARAM
        记录。
    -   将 `skip_overlap_check`{.literal} 变量设置为 true，从而强制创建
        DNS，即使它与现有区域重叠。
    -   将 `skip_nameserver_check`{.literal} 设置为 true，从而强制 DNS
        区域创建，即使名称服务器不可解析。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure dnszone present
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure zone is present.
        ipadnszone:
          ipaadmin_password: Secret123
          zone_name: zone.idm.example.com
          allow_sync_ptr: true
          dynamic_update: true
          dnssec: true
          allow_transfer:
            - 1.1.1.1
            - 2.2.2.2
          allow_query:
            - 1.1.1.1
            - 2.2.2.2
          forwarders:
            - ip_address: 8.8.8.8
            - ip_address: 8.8.4.4
              port: 52
          serial: 1234
          refresh: 3600
          retry: 900
          expire: 1209600
          minimum: 3600
          ttl: 60
          default_ttl: 90
          name_server: server.idm.example.com.
          admin_email: PI:EMAIL
          nsec3param_rec: "1 7 100 0123456789abcdef"
          skip_overlap_check: true
          skip_nameserver_check: true
          state: present
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file dnszone-all-params-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   如需有关 DNS 区的更多信息，请参阅 [支持的 DNS
    区类型](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#supported-dns-zone-types_managing-dns-zones-in-idm){.link}。
-   有关您可以在 IdM 中配置的 DNS [区域属性的更多信息，请参阅主 IdM DNS
    区的配置属性](#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones "主要 IdM DNS 区的配置属性"){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnszone.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnszone 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnszone`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnszone 目录中看到 ipadnszone`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_using-ansible-to-install-and-manage-idm.html#using-an-ansible-playbook-to-ensure-the-presence-of-a-zone-for-reverse-dns-lookup-when-an-ip-address-is-given_using-ansible-playbooks-to-manage-idm-dns-zones}在给定 IP 地址时，使用 Ansible playbook 确保存在用于反向 DNS 查找的区域 {.title}
:::
本节演示身份管理(IdM)管理员如何使用 Ansible playbook 确保存在反向 DNS
区域。在以下步骤中使用的示例中，IdM 管理员使用 IdM 主机的 IP
地址和前缀长度确保存在反向 DNS 查找区域。
使用 `name_from_ip`{.literal} 变量提供 DNS 服务器的 IP
地址前缀长度，允许您控制区域名称。如果您不声明前缀长度，系统会查询 DNS
服务器以获取区，并根据 [**192.168.1.2**]{.strong}
`的 name_from_ip`{.literal} 值，查询可以返回以下 DNS 区域中的任何一个：
::: itemizedlist
-   [**1.168.192.in-addr.arpa.**]{.strong}
-   [**168.192.in-addr.arpa.**]{.strong}
-   [**192.in-addr.arpa.**]{.strong}
:::
由于查询返回的区域可能不是您预期的区域，`name_from_ip`{.literal} 只能与
`state`{.literal} 选项设置为 [**present**]{.strong}
一起使用，以防止意外删除区域。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/dnszone`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnszone
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**dnszone-reverse-from-ip.yml**]{.strong} Ansible playbook
    文件的副本。例如：
    ``` literallayout
    $ cp dnszone-reverse-from-ip.yml dnszone-reverse-from-ip-copy.yml
    ```
4.  打开 [**dnszone-reverse-from-ip-copy.yml**]{.strong} 文件进行编辑。
5.  通过在 `ipadnszone`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name_from_ip`{.literal} 变量设置为 IdM 名称服务器的
        IP，并提供其前缀长度。
        这是当前示例修改的 Ansible playbook 文件：
        ``` literallayout
        ---
        - name: Ensure dnszone present
          hosts: ipaserver
          become: true
          tasks:
          - name: Ensure zone for reverse DNS lookup is present.
            ipadnszone:
              ipaadmin_password: Secret123
              name_from_ip: 192.168.1.2/24
              state: present
            register: result
          - name: Display inferred zone name.
            debug:
              msg: "Zone name: {{ result.dnszone.name }}"
        ```
    :::
    playbook 创建一个区，用于从 [**192.168.1.2**]{.strong} IP
    地址及其前缀长度 24 中反向 DNS 查找。接下来，playbook
    显示生成的区域名称。
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file dnszone-reverse-from-ip-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   如需有关 DNS 区的更多信息，请参阅 [支持的 DNS
    区类型](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#supported-dns-zone-types_managing-dns-zones-in-idm){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnszone.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnszone 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnszone`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnszone 目录中看到 ipadnszone`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
:::
[]{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm}第 26 章 使用 Ansible 管理 IdM 中的 DNS 位置 {.title}
:::
作为身份管理(IdM)管理员，您可以使用 `ansible-freeipa`{.literal}
软件包中提供
`的位置模块管理 IdM DNS 位置`{.literal}。本章描述了以下主题和程序：
::: itemizedlist
-   [基于 DNS
    的服务发现](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#dns-based-service-discovery_using-ansible-to-manage-dns-locations-in-idm "基于 DNS 的服务发现"){.link}
-   [DNS
    位置的部署注意事项](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm "DNS 位置的部署注意事项"){.link}
-   [DNS
    生存时间(TTL)](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#dns-time-to-live-ttl_using-ansible-to-manage-dns-locations-in-idm "DNS 生存时间(TTL)"){.link}
-   [使用 Ansible 确保存在 IdM
    位置](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-idm-location-is-present_using-ansible-to-manage-dns-locations-in-idm "使用 Ansible 确保存在 IdM 位置"){.link}
-   [使用 Ansible 确保缺少 IdM
    位置](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-idm-location-is-absent_using-ansible-to-manage-dns-locations-in-idm "使用 Ansible 确保缺少 IdM 位置"){.link}
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#dns-based-service-discovery_using-ansible-to-manage-dns-locations-in-idm}基于 DNS 的服务发现 {.title}
:::
在基于 DNS 的服务发现中，客户端使用 DNS
协议在提供特定服务的网络中查找服务器，如 `LDAP 或`{.literal}
`Kerberos`{.literal}。种典型的操作类型是允许客户端在最接近的网络基础架构中查找身份验证服务器，因为它们提供更高的吞吐量和较低的网络延迟，从而降低总体成本。
服务发现的主要优点是：
::: itemizedlist
-   无需使用附近服务器的名称明确配置客户端。
-   DNS 服务器用作策略的中央提供程序。使用同一 DNS
    服务器的客户端有权访问关于服务提供商及其首选顺序的相同策略。
:::
在 Identity Management(IdM)域中，存在适用于
`LDAP`{.literal}、K`erber`{.literal} os 和其他服务的 DNS 服务记录（SRV
记录）。例如，以下命令在 IdM DNS 域中查询 DNS 服务器以获取提供基于 TCP
的 `Kerberos`{.literal} 服务的主机：
::: example
[]{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#idm139880128568352}
**例 26.1. 独立于 DNS 位置的结果**
::: example-contents
``` literallayout
$ dig -t SRV +short _kerberos._tcp.idm.example.com
0 100 88 idmserver-01.idm.example.com.
0 100 88 idmserver-02.idm.example.com.
```
输出包含以下信息：
::: itemizedlist
-   `0`{.literal} （优先级）：目标主机的优先级.首选使用较低值。
-   `100`{.literal}
    (weight).为优先级相同的条目指定相对权重。如需更多信息，请参阅 [RFC
    2782 第 3](https://tools.ietf.org/html/rfc2782#page-3){.link} 节。
-   `88`{.literal} （端口号）：服务的端口号。
-   提供服务的主机的规范名称。
:::
:::
:::
在示例中，返回的两个主机名具有相同的优先级和权重。在本例中，客户端使用来自结果列表中的随机条目。
相反，当客户端配置为查询在 DNS 位置配置的 DNS
服务器时，输出会有所不同。对于分配到某个位置的 IdM
服务器，会返回定制值。在以下示例中，客户端被配置为在位置
`germany`{.literal} 中查询 DNS 服务器：
::: example
[]{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#idm139880152908272}
**例 26.2. 基于 DNS 位置的结果**
::: example-contents
``` literallayout
$ dig -t SRV +short _kerberos._tcp.idm.example.com
_kerberos._tcp.germany._locations.idm.example.com.
0 100 88 idmserver-01.idm.example.com.
50 100 88 idmserver-02.idm.example.com.
```
:::
:::
IdM DNS 服务器自动返回一个 DNS 别名(CNAME)，指向一个 DNS 位置特定的 SRV
记录（首选本地服务器）。此 CNAME
记录显示在输出的第一行中。在示例中，主机
[**idmserver-01.idm.example.com**]{.strong}
具有最低的优先级值，因此是首选的。[**idmserver-02.idm.example.com**]{.strong}
具有更高的优先级，因此仅在首选主机不可用的情况下用作备份。