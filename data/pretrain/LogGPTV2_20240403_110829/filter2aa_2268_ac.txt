LOADER
OS
SPI Flash
Ring 0 malwares like rootkits
SPI malwares
Bootkit malwares
UEFI: Bootx64.efi 
and Bootmgfw.efi
(Kernel Code Signing Policies)
UEFI 
Services
SMM
SMM malwares
UEFI/BIOS malwares
(Flash Write Protection)
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
51
SEC  PEI  DXE  BDS  TSL  RT  AL
• SEC  Security (Caches, TPM and MTRR initialization)
• PEI  Pre EFI Initialization (SMM/Memory )
• DXE  Driver Execution Environment (platform + devices 
initialization , Dispatch Drivers, FV enumumeration)
• BDS  Boot Dev Select (EFI Shell + OS Boot Loader)
• TSL  Transient System Load
• RT  Run Time
IBB – Initial Boot Block
After Life
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
52
SEC
PEI
DXE
BDS
TSL
HARDWARE
Boot Guard 
OS Secure 
Boot
UEFI Secure 
Boot
UEFI Secure 
Boot
IBB
malwares
and 
exploits 
attack 
here 
Hypervisor
Windows Boot Loader
Kernel drivers
Windows
ELAM
3rd party drivers
Apps
The Windows uses the 
UEFI to load the Hypervisor 
and Secure Kernel. 
Acts on drivers
that are executed 
before Windows 
being loaded and 
initialized. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
53
• Remember: the SPI Flash is composed by many regions 
such as Flash Descriptors, BIOS, ME (Management Engine), 
GbE and ACPI EC. Access Control table defines who can 
have READ/WRITE access to other regions. 
Descriptors
GbE
ME
ACPI
BIOS
ME: has full access to the DRAM, invisible at same time, is always working 
(even then the system is shutdown) and has access to network interface. 
Conclusion: a nightmare. 
ROM + FW (Manifest+ Modules)
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
54
• Intel Boot Guard (controlled by ME), introduced by Intel, is 
used to validate the boot process through flashing a public 
key associated to BIOS signature into FPFs (Field 
Programmable Fuses) from Intel ME. 
• Obviously, few vendors have been leaving closemnt fuse 
unset, so it could be lethal. 
• Of course, for a perfect Boot Guard working, the SPI region 
must be locked and the Boot Guard configuration must be 
set against a SMM driver rootkit. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
55
CPU boot ROM
BG startup Authenticated 
Code Module
Loaded into Authenticated Code RAM
SEC + PEI (IBB)
Verifies the IBB (Initial Boot Block)
BIOS
•
Public key’s hash, used for verifying the signature of 
the code with the ACM, is hard-coded within the CPU. 
•
It almost impossible to modify the BIOS without 
knowing the private key.
•
At end, it works as a certificate chain. 
SPI 
Flash
Memory
IBB verifies the 
BIOS content
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
56
 Another protection feature named BIOS Guard is also running in the 
SMM, which protects the platform against not-authorized:
• SPI Flash Access (through BIOS Guard Authenticated Code 
Module)  prevents an attacker to escalate privileges to SMM 
by writting a new image to SPI.  
• BIOS update  attacker (through a DXE driver) could update the 
BIOS to a flawed BIOS version. 
• Boot infection/corruption.
 BIOS Guard allows that only trusted modules (by ACM) be able to 
modify the SPI flash memory and protect us against rookit implants. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
57
• Secure Boot:
• Protects the entire path shown previously against 
bootkit infection.
• Protects key components during kernel loading, key 
drivers and important system files, requesting a valid 
digital signature. 
• Prevents loading of any code that are not associated a 
valid digital signature.  
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
58
•
Two essential items on Secure Boot are: 
• Platform Key (PK – must be valid), which establishes a trust 
relationship between the platform owner and the platform 
firmware, verifies the Key Exchange Key (KEK). 
• KEK, which establishes a trust relationship between the OS 
and the platform firmware, verifies:
• Authorized Database (db)  contains authorized signing 
certificates and digital signatures
• Forbidden Database (dbx)  contains forbidden 
certificates and digital signatures. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
59
• Obviously, if the Platform Key is corrupted, everything is 
not valid anymore because the SecureBoot turns out 
disabled when this fact happens. 
• Unfortunately, few vendors continue storing important
Secure Boot settings in UEFI variables. However, if these 
UEFI variables are exploited through ring 0/-2 malware or 
bootkit, so the SecureBoot can be disabled.  
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
60
•
Without ensuring the UEFI image integrity, a rookit could load 
another UEFI image without being noticed. 
•
UEFI BIOS supports TE (Terse Executable) format (signature 
0x5A56 - VZ).
•
As TE format doesn’t support signatures, BIOS shouldn’t load 
this kind of image because Signature checking would be skipped.
•
Therefore, a rootkit could try to replace the typical PE/COFF 
loader by a TE EFI executable, so skipping the signature 
checking and disabling the Secure Boot.
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
61
 Fortunately, new releases of Windows 10 (version 1607 and 
later) has introduced an interesting SMM protection known 
as Windows SMM Security Mitigation Table (WSMT). 
 In Windows 10, the firmware executing SMM must be 
“authorized and trusted” by VBS (Virtualized Based 
Security). 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
62
•
These SMM Protections flags that can be used to enable or 
disable any WSMT feature.
• FIXED_COMM_BUFFERS: it guarantees that any input/output 
buffers be filled by value within the expected memory 
regions. 
• SYSTEM_RESOURCE_PROTECTION: it works as an indication 
that the system won’t allow out-of-band reconfiguration of 
system resources. 
• COMM_BUFFER_NESTED_PTR_PROTECTION: it is a 
validation method that try to ensure that any pointer whith the 
fixed communication buffer only refer to address ranges that 
are within a pre-defined memory region. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
63
•
chipsec_util.py spi dump spi.bin
•
chipsec_uti.py decode spi.bin
Is the customer Safe? 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
64
chipsec_main --module common.bios_wp 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
65
chipsec_main.py -m common.bios_smi
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
66
•
The BIOS_CNTL register contains:
• BIOS Write Enable(BWE)  if it is set to 1, an attacker could 
write to SPI flash. 
• BIOS Lock Enable (BLE)  if it is set to 1, it generates an SMI 
routine to run just in case the BWE goes from 0 to 1. 
•
Of course, there should be a SMM handler in order to prevent 
setting the BWE to 1. 
•
What could happen if SMI events were blocked? 
•
The SMM BIOS write protection (SMM_BWP) , which protects 
the entire BIOS area, is not enabled. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
67
chipsec_main.py -m common.spi_lock
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
68
•
SPI Protect Range registers protect the flash chip against writes. 
•
They control Protected Range Base and Protected Range Limit 
fields, which set regions for Write Protect Enable bit and Read 
Protect Enable bit. 
•
If the Write Protect Enable bit is set, so regions from flash chip 
that are defined by Protected Range Base and Protected Range 
Limit fields are protected. 
•
However, SPI Protect Range registers DO NOT protect the entire 
BIOS and NVRAM. 
•
In a similar way to BLE, the HSFSS.FLOCKDN bit (from HSFSTS 
SPI MMIO Register) prevents any change  to Write Protect Enable 
bit. Therefore, malware can’t disable the SPI protected ranges for 
enabling access to the SPI flash memory. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
69
python chipsec_main.py --module common.bios_ts
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
70
•
Top Swap Mode, which is enabled by BUC.TS in Root Complex 
range,  is a feature that allows fault-tolerant update of the BIOS 
boot-block. 
•
Therefore, when Top Swap Configuration and swap boot-block 
range in SPI are not protected or even locked, any malware could
force an execution redirect of the reset vector to backup 
bootblock because CPU will fetch the reset vector at 0xFFFEFFF0 
instead of 0xFFFFFFF0 address. 
•
SMRR (System Management Range Registers) blocks the access 
to SMRAM (range of DRAM that is reserved by BIOS SMI 
handlers) while CPU is not in SMM mode, preventing it to execute 
any SMI exploit on cache. 
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
ADVANCED MALWARES
DEFCON 2018 - USA
71
chipsec_main.py -m common.smrr
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
CONCLUSION
DEFCON 2018 - USA
72
• Most security professionals have been facing problems to 
understand how to analyze malicious drivers because the 
theory is huge and not easy.
• Real customers are not aware about ring -2 threats and they 
don’t know how to update systems’ firmwares. 
• All protections against implants are based on integrity 
(digital certificate and signature). However, what would it 
happen whether algorithms were broken (QC - quantum 
computation)?
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
THANK YOU FOR ATTENDING MY TALK!
LinkedIn: 
http://www.linkedin.com/in/aleborges
Twitter: @ale_sp_brazil
Website: 
http://blackstormsecurity.com
E-mail: 
alexandreborges@blackstormsecurity.
com
DEFCON 2018 - USA
73
ALEXANDRE BORGES - MALWARE AND SECURITY RESEARCHER
• Malware  and Security Researcher. 
• Consultant, Instructor  and Speaker on 
Malware Analysis, Memory Analysis, Digital 
Forensics, Rootkits and Software Exploitation. 
• Member of Digital Law and Compliance 
Committee (CDDC/ SP)
• Reviewer member of the The Journal of Digital 
Forensics, Security and Law.
• Refereer on Digital Investigation:The 
International Journal of Digital Forensics & 
Incident Response
• Instructor at Oracle, (ISC)2 and Ex-instructor 
at Symantec.