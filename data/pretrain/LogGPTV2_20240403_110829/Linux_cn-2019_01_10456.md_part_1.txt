---
author: Abhishek Prakash
category: 技术
comments_data:
- date: '2019-01-21 09:31:47'
  message: 写的非常好，赞一个。
  postip: 117.89.132.164
  username: 来自江苏南京的 Chrome 71.0|GNU/Linux 用户
- date: '2019-06-22 12:51:17'
  message: 内容全面
  postip: 61.141.249.39
  username: 来自广东深圳的 Chrome 74.0|Mac 10.13 用户
- date: '2020-03-16 19:53:40'
  message: is nice
  postip: 36.63.37.136
  username: 来自安徽合肥的 Firefox 72.0|Ubuntu 用户
- date: '2020-04-23 12:15:16'
  message: very good
  postip: 116.247.114.102
  username: 来自上海的 Firefox 75.0|Ubuntu 用户
- date: '2020-12-27 14:44:22'
  message: 非常不错~！！！
  postip: 183.11.39.172
  username: 来自广东深圳的 Chrome 87.0|Windows 10 用户
- date: '2021-05-19 17:24:52'
  message: 很赞的文章，爱了爱了，原来学习Linux这个网站比CSDN好用啊
  postip: 183.236.19.167
  username: 来自广东东莞的 Chrome 90.0|Windows 10 用户
- date: '2021-11-17 19:55:58'
  message: 写得非常好
  postip: 112.91.68.31
  username: 来自广东惠州的 Chrome 96.0|GNU/Linux 用户
- date: '2022-07-30 01:54:55'
  message: 太感谢您的讲解了
  postip: 221.4.34.106
  username: 来自广东广州的 Firefox 90.0|Android 11 用户
- date: '2022-08-09 13:11:39'
  message: 如果说这篇文章翻译腔能再小一点儿，那就完美了
  postip: 183.210.84.92
  username: 来自江苏扬州的 Chrome 104.0|Windows 10 用户
count:
  commentnum: 9
  favtimes: 2
  likes: 0
  sharetimes: 2
  viewnum: 19163
date: '2019-01-19 11:02:47'
editorchoice: false
excerpt: 一篇涵盖了在 Ubuntu 和其他 Linux 发行版中使用 PPA 的几乎所有问题的深入的文章。
fromurl: https://itsfoss.com/ppa-guide/
id: 10456
islctt: true
largepic: /data/attachment/album/201901/19/110250dii8pypjzqyhz3j3.png
permalink: /article-10456-1.html
pic: /data/attachment/album/201901/19/110250dii8pypjzqyhz3j3.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 一篇涵盖了在 Ubuntu 和其他 Linux 发行版中使用 PPA 的几乎所有问题的深入的文章。
tags:
- PPA
- Ubuntu
thumb: false
title: Ubuntu PPA 使用指南
titlepic: true
translator: jlztan
updated: '2019-01-19 11:02:47'
---
> 
> 一篇涵盖了在 Ubuntu 和其他 Linux 发行版中使用 PPA 的几乎所有问题的深入的文章。
> 
> 
> 
如果你一直在使用 Ubuntu 或基于 Ubuntu 的其他 Linux 发行版，例如 Linux Mint、Linux Lite、Zorin OS 等，你可能会遇到以下三种神奇的命令：
```
sudo add-apt-repository ppa:dr-akulavich/lighttable
sudo apt-get update
sudo apt-get install lighttable-installer
```
许多网站推荐使用类似于以上几行的形式 [在 Ubuntu 中安装应用程序](https://itsfoss.com/remove-install-software-ubuntu/)。这就是所谓的使用 PPA 安装应用程序。
但什么是 PPA？为什么要用它？使用 PPA 安全吗？如何正确使用 PPA？如何删除 PPA？
我将在这个详细的指南中回答上述所有问题。即使你已经了解了一些关于 PPA 的事情，我相信这篇文章仍然会让你了解这方面的更多知识。
请注意我正在使用 Ubuntu 撰写本文。因此，我几乎在各个地方都使用了 Ubuntu 这个术语，但文中的说明和步骤也适用于其他基于 Debian/Ubuntu 的发行版。
### 什么是 PPA？为什么要使用 PPA？
![Everything you need to know about PPA in Ubuntu Linux](/data/attachment/album/201901/19/110250dii8pypjzqyhz3j3.png)
PPA 表示 个人软件包存档   Personal Package Archive 。
这样说容易理解吗？可能不是很容易。
在了解 PPA 之前，你应该了解 Linux 中软件仓库的概念。关于软件仓库，在这里我不会详述。
#### 软件仓库和包管理的概念
软件仓库是一组文件，其中包含各种软件及其版本的信息，以及校验和等其他一些详细信息。每个版本的 Ubuntu 都有自己的四个官方软件仓库：
* Main - Canonical 支持的自由开源软件。
* Universe - 社区维护的自由开源软件。
* Restricted - 设备的专有驱动程序。
* Multiverse - 受版权或法律问题限制的软件。
你可以在 [这里](http://archive.ubuntu.com/ubuntu/dists/) 看到所有版本的 Ubuntu 的软件仓库。你可以浏览并转到各个仓库。例如，可以在 [这里](http://archive.ubuntu.com/ubuntu/dists/xenial/main/) 找到 Ubuntu 16.04 的主存储库（Main）。
所以，PPA 基本上是一个包含软件信息的网址。那你的系统又是如何知道这些仓库的位置的呢？
这些信息存储在 `/etc/apt` 目录中的 `sources.list` 文件中。如果查看此文件的内容，你就会看到里面有软件仓库的网址。`#` 开头的行将被忽略。
这样的话，当你运行 `sudo apt update` 命令时，你的系统将使用 [APT 工具](https://wiki.debian.org/Apt) 来检查软件仓库并将软件及其版本信息存储在缓存中。当你使用 `sudo apt install package_name` 命令时，它通过该信息从实际存储软件的网址获取该软件包。
如果软件仓库中没有关于某个包的信息，你将看到如下错误：
```
E: Unable to locate package
```
此时，建议阅读我的 [apt 命令使用指南](https://itsfoss.com/apt-command-guide/) 一文，这将帮你更好地理解 `apt`、`update` 等命令。
以上是关于软件仓库的内容。但什么是 PPA？PPA 和软件仓库又有什么关联呢？
#### 为什么要用 PPA？
如你所见，Ubuntu 对系统中的软件进行管理，更重要的是控制你在系统上获得哪个版本的软件。但想象一下开发人员发布了软件的新版本的情况。
Ubuntu 不会立即提供该新版本的软件。需要一个步骤来检查此新版本的软件是否与系统兼容，从而可以确保系统的稳定性。
但这也意味着它需要经过几周才能在 Ubuntu 上可用，在某些情况下，这可能需要几个月的时间。不是每个人都想等待那么长时间才能获得他们最喜欢的软件的新版本。
类似地，假设有人开发了一款软件，并希望 Ubuntu 将该软件包含在官方软件仓库中。在 Ubuntu 做出决定并将其包含在官方存软件仓库之前，还需要几个月的时间。
另一种情况是在 beta 测试阶段。即使官方软件仓库中提供了稳定版本的软件，软件开发人员也可能希望某些终端用户测试他们即将发布的版本。他们是如何使终端用户对即将发布的版本进行 beta 测试的呢？
通过 PPA！
### 如何使用 PPA？PPA 是怎样工作的？
正如我已经告诉过你的那样，[PPA](https://launchpad.net/ubuntu/+ppas) 代表 个人软件包存档   Personal Package Archive 。在这里注意 “个人” 这个词，它暗示了这是开发人员独有的东西，并没有得到分发的正式许可。
Ubuntu 提供了一个名为 Launchpad 的平台，使软件开发人员能够创建自己的软件仓库。终端用户，也就是你，可以将 PPA 仓库添加到 `sources.list` 文件中，当你更新系统时，你的系统会知道这个新软件的可用性，然后你可以使用标准的 `sudo apt install` 命令安装它。
```
sudo add-apt-repository ppa:dr-akulavich/lighttable
sudo apt-get update
sudo apt-get install lighttable-installer
```
概括一下上面三个命令：
* `sudo add-apt-repository ` ` <- 此命令安装软件包。
你会发现使用 `sudo apt update` 命令非常重要，否则你的系统将无法知道新软件包何时可用。
现在让我们更详细地看一下第一个命令。
```
sudo add-apt-repository ppa:dr-akulavich/lighttable
```
你会注意到此命令没有软件仓库的 URL。这是因为该工具被设计成将 URL 信息抽象之后再展示给你。
小小注意一下：如果你添加的是 `ppa:dr-akulavich/lighttable`，你会得到 Light Table。但是如果你添加 `ppa:dr-akulavich`，你将得到 “上层软件仓库” 中的所有仓库或软件包。它是按层级划分的。
基本上，当您使用 `add-apt-repository` 添加 PPA 时，它将执行与手动运行这些命令相同的操作：
```
deb http://ppa.launchpad.net/dr-akulavich/lighttable/ubuntu YOUR_UBUNTU_VERSION_HERE main
deb-src http://ppa.launchpad.net/dr-akulavich/lighttable/ubuntu YOUR_UBUNTU_VERSION_HERE main
```
以上两行是将任何软件仓库添加到你系统的 `sources.list` 文件的传统方法。但 PPA 会自动为你完成这些工作，无需考虑确切的软件仓库 URL 和操作系统版本。
此处不那么重要的一点是，当你使用 PPA 时，它不会更改原始的 `sources.list` 文件。相反，它在 `/etc/apt/sources.d` 目录中创建了两个文件，一个 `.list` 文件和一个带有 `.save` 后缀的备份文件。
![Using a PPA in Ubuntu](/data/attachment/album/201901/19/110253pmncmnrz324kgmge.png)
*PPA 创建了单独的 `sources.list` 文件*
带有后缀 `.list` 的文件含有添加软件仓库的信息的命令。
![PPA add repository information](/data/attachment/album/201901/19/110253rjoukwfwo57zueof.png)