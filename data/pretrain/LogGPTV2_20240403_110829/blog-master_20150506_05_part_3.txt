/* probe smgr__md__read__done(ForkNumber, BlockNumber, Oid, Oid, Oid, int, int, int); */  
probe process("/opt/pgsql/bin/postgres").mark("smgr__md__read__done") {  
  e_var[pid(),1] = gettimeofday_us()  
  if ( s_var[pid(),1] > 0 )  
    stat_var[pid(),1]  0 )  
    stat_var[pid(),2] 0 ) {  
      printf("pid: %d, what: %d, min: %d, max: %d, avg: %d, sum: %d, count: %d\n", v1, v2, @min(stat_var[v1,v2]), @max(stat_var[v1,v2]), @avg(stat_var[v1,v2]), @sum(stat_var[v1,v2]), @count(stat_var[v1,v2]))  
    }  
  }  
  printf("----------------------------------end-----------------------------\n")  
  delete s_var  
  delete e_var  
  delete stat_var  
}'  
```
开启压力测试：  
```
$ pgbench -M prepared -n -r -f ./test.sql -P 1 -c 26 -j 26 -T 10000000  
......  
progress: 56.0 s, 60813.0 tps, lat 0.426 ms stddev 0.271  
progress: 57.0 s, 59748.9 tps, lat 0.433 ms stddev 0.390  
progress: 58.0 s, 61135.6 tps, lat 0.423 ms stddev 0.398  
progress: 59.0 s, 64174.6 tps, lat 0.403 ms stddev 0.333  
progress: 60.0 s, 59503.6 tps, lat 0.435 ms stddev 0.282  
progress: 61.0 s, 60662.4 tps, lat 0.427 ms stddev 0.271  
progress: 62.0 s, 60582.2 tps, lat 0.427 ms stddev 0.274  
progress: 63.0 s, 61523.6 tps, lat 0.421 ms stddev 0.258  
progress: 64.0 s, 62394.7 tps, lat 0.415 ms stddev 0.251  
progress: 65.0 s, 60892.6 tps, lat 0.425 ms stddev 0.277  
progress: 66.0 s, 60703.2 tps, lat 0.426 ms stddev 0.280  
progress: 67.0 s, 61629.9 tps, lat 0.420 ms stddev 0.261  
progress: 68.0 s, 61231.5 tps, lat 0.423 ms stddev 0.270  
```
当tps进入顶峰，现在所有的热块都在内存中，可以看到现在没有物理读了。  
```
----------------------------------end-----------------------------  
----------------------------------end-----------------------------  
----------------------------------end-----------------------------  
----------------------------------end-----------------------------  
----------------------------------end-----------------------------  
----------------------------------end-----------------------------  
```
执行检查点：  
```
progress: 20.0 s, 60582.5 tps, lat 0.427 ms stddev 0.265  
progress: 21.0 s, 40974.3 tps, lat 0.624 ms stddev 1.782  
progress: 22.0 s, 14963.3 tps, lat 1.754 ms stddev 4.243  
progress: 23.0 s, 16382.7 tps, lat 1.577 ms stddev 4.138  
progress: 24.0 s, 20179.2 tps, lat 1.286 ms stddev 2.839  
progress: 25.0 s, 23749.2 tps, lat 1.101 ms stddev 2.816  
progress: 26.0 s, 27464.7 tps, lat 0.945 ms stddev 2.581  
progress: 27.0 s, 33850.6 tps, lat 0.764 ms stddev 2.011  
progress: 28.0 s, 43315.9 tps, lat 0.600 ms stddev 1.134  
progress: 29.0 s, 50216.6 tps, lat 0.516 ms stddev 0.492  
progress: 30.0 s, 52857.0 tps, lat 0.490 ms stddev 0.323  
progress: 31.0 s, 53428.6 tps, lat 0.485 ms stddev 0.322  
progress: 32.0 s, 54710.5 tps, lat 0.473 ms stddev 0.303  
progress: 33.0 s, 57824.2 tps, lat 0.448 ms stddev 0.289  
progress: 34.0 s, 59573.5 tps, lat 0.435 ms stddev 0.273  
progress: 35.0 s, 58162.8 tps, lat 0.445 ms stddev 0.413  
progress: 36.0 s, 57951.4 tps, lat 0.447 ms stddev 0.435  
```
跟踪结果，我们只看到checkpointer在write buffer，并没有看到pgbench的连接产生物理读(md read)：  
```
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 42, max: 101, avg: 49, sum: 57592, count: 1154  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 42, max: 124, avg: 51, sum: 520545, count: 10079  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 44, max: 191, avg: 65, sum: 464196, count: 7139  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 42, max: 145, avg: 53, sum: 467482, count: 8799  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 42, max: 131, avg: 53, sum: 447230, count: 8366  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 37, max: 175, avg: 57, sum: 429778, count: 7465  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 42, max: 10551, avg: 65, sum: 331686, count: 5065  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 41, max: 158, avg: 61, sum: 397299, count: 6429  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 29, max: 1173, avg: 61, sum: 672717, count: 10976  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 26, max: 11093, avg: 58, sum: 933458, count: 16027  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 27, max: 448, avg: 56, sum: 937812, count: 16633  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 27, max: 112, avg: 55, sum: 937420, count: 16996  
----------------------------------end-----------------------------  
pid: 18027, what: 2, min: 27, max: 98, avg: 54, sum: 431355, count: 7901  
----------------------------------end-----------------------------  
```
到目前为止，只能说，LWLOCK，WRITE BUFFER都没有对性能造成影响，我们并没有找到执行checkpoint时，带来的性能下降的真正原因。  
下一篇将揭晓答案。  
## 参考
1\. http://blog.163.com/digoal@126/blog/static/16387704020154653422892/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")