title:Efficient CCA Timed Commitments in Class Groups
author:Sri Aravinda Krishnan Thyagarajan and
Guilhem Castagnos and
Fabien Laguillaumie and
Giulio Malavolta
Efficient CCA Timed Commitments in Class Groups
Sri Aravinda Krishnan Thyagarajan
Guilhem Castagnos
Friedrich Alexander Universität Erlangen-Nürnberg
Université de Bordeaux, INRIA, CNRS
Talence, France
PI:EMAIL
Nürnberg, Germany
PI:EMAIL
Fabien Laguillaumie
LIRMM, Univ Montpellier, CNRS
Montpellier, France
PI:EMAIL
Giulio Malavolta
Max Planck Institute for Security and Privacy
Bochum, Germany
PI:EMAIL
ABSTRACT
Timed commitments [Boneh and Naor, CRYPTO 2000] are the timed
analogue of standard commitments, where the commitment can
be non-interactively opened after a pre-specified amount of time
passes. Timed commitments have a large spectrum of applications,
such as sealed bid auctions, fair contract signing, fair multi-party
computation, and cryptocurrency payments. Unfortunately, all prac-
tical constructions rely on a (private-coin) trusted setup and do not
scale well with the number of participants. These are two severe
limiting factors that have hindered the widespread adoption of this
primitive.
In this work, we set out to resolve these two issues and propose
an efficient timed commitment scheme that also satisfies the strong
notion of CCA-security. Specifically, our scheme has a transparent
(i.e. public-coin) one-time setup and the amount of sequential com-
putation is essentially independent of the number of participants.
As a key technical ingredient, we propose the first (linearly) ho-
momorphic time-lock puzzle with a transparent setup, from class
groups of imaginary quadratic order. To demonstrate the appli-
cability of our scheme, we use it to construct a new distributed
randomness generation protocol, where 𝑛 parties jointly sample a
random string. Our protocol is the first to simultaneously achieve
(1) high scalability in the number of participants, (2) transparent
one-time setup, (3) lightning speed in the optimistic case where all
parties are honest, and (4) ensure that the output random string is
unpredictable and unbiased, even when the adversary corrupts 𝑛 − 1
parties. To substantiate the practicality of our approach, we imple-
mented our protocol and our experimental evaluation shows that it
is fast enough to be used in practice. We also evaluated a heuristic
version of the protocol that is at least 3 orders of magnitude more
efficient both in terms of communication size and computation
time. This makes the protocol suitable for supporting hundreds of
participants.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484773
CCS CONCEPTS
• Security and privacy → Cryptography.
KEYWORDS
Timed commitments; Distributed randomness generation
ACM Reference Format:
Sri Aravinda Krishnan Thyagarajan, Guilhem Castagnos, Fabien Laguil-
laumie, and Giulio Malavolta. 2021. Efficient CCA Timed Commitments
in Class Groups. In Proceedings of the 2021 ACM SIGSAC Conference on
Computer and Communications Security (CCS ’21), November 15–19, 2021,
Virtual Event, Republic of Korea. ACM, New York, NY, USA, 22 pages. https:
//doi.org/10.1145/3460120.3484773
1 INTRODUCTION
Timed commitments [13, 66] allow one to hide a message 𝑚 into
a commitment 𝑐, for a pre-specified amount of time T. Anyone
can recover the committed message 𝑚 by performing a long se-
quential computation, which terminates (approximately) after time
T. The security property of interest is that no amount of parallel
computation can give a significant advantage in opening the com-
mitment earlier than scheduled. Specifically, we are interested in
the strong notion of chosen commitment attack (CCA) security [47]:
The message 𝑚 inside the commitment 𝑐 must be kept hidden until
time T, even if the adversary has access to an oracle that instantly
force-opens all commitments (except for the challenge commitment
𝑐).
Timed commitments [3, 15, 21, 43, 47, 55] and timed-based cryp-
tography [11, 38, 62, 74] have seen a recent surge of popularity in the
research community, due to their wide array of applications. Exam-
ples of interest include protocols for distributed randomness genera-
tion [68], contract signing [13], e-voting [55], multi-signature trans-
actions in cryptocurrencies [72], zero-knowledge arguments [42],
and non-malleable commitments [52], among many others.
Yet, there are pertinent questions about this time-based crypto-
graphic primitive that have remain unanswered, and consequently
affected its large scale adoption. We identify two such questions
that have been the major obstacles for the usage of timed com-
mitments (and more in general timed cryptography) in real-life
applications.
(1) Scalability of Sequential Computation. The major limiting
factor of the timed commitment construction is the computational
cost of forcefully opening the commitments. This mechanism is
inherited from solving the underlying time-lock puzzles [66]. This
Session 10C: Foundations CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2663drawback is significantly amplified in protocols where many users
participate, each with their own commitment. In these situations,
the computational effort needed to learn the output and terminate
the protocol might also grow with the total number of commitments.
We stress that this is not only an environmental concern, but also
constitutes an attack vector for denial-of-service: An attacker can
prolong or even prevent the termination of a protocol by flooding
the network with a massive amount of commitments, that all users
need to forcefully open.
This issue has motivated the development of homomorphic time-
lock puzzles [55] and delay encryption [21], which use additional
structural properties to solve this problem: At any point in time,
only one puzzle/ciphertext needs to be solved, regardless on the
number of participants. However, all of these works consider only
a weak notion of security (analogous to the CPA-security of en-
cryption schemes) and thus are not sufficient for many applications
where the stronger notion of CCA-security is required (more on
this later).
(2) Necessity of Trusted Setup. Virtually all efficient timed com-
mitment schemes rely on the sequentiality of computing squarings
over RSA groups. I.e. they assume that given a group element 𝐺,
the fastest algorithm to compute
−−−−−−−→ 𝐺2T mod 𝑁
Squaring
𝐺
takes (approximately) T steps given only 𝐺 and 𝑁 , where 𝑁 =
𝑝𝑞 is the product of two large primes. However note that if the
factorization of 𝑁 is known, then this assumption is simply false.
Thus many of these schemes [13, 55] are forced to rely on a trusted
party to sample the RSA modulus 𝑁 and not reveal its trapdoor (i.e.
the prime factors 𝑝 and 𝑞) to anyone. In practice, such trusted party
can be substituted by an execution of a multi-party computation
(MPC) protocol where a set of mutually distrustful jointly generate
the RSA modulus. Efficient protocols for this task exist [30, 39], but
their adoption is cumbersome and error prone. Furthermore, one
needs to assume that at least one of the parties involved in this
MPC protocol is behaving honestly.
A more elegant solution is to design schemes where the setup
is transparent (a.k.a. public-coin): The random coins of the setup
algorithm are not required to be kept hidden. This prevents cata-
strophic failures of the system, since no one knows the trapdoor
and it is hard to compute a trapdoor even given the random coins.
This is not a concern unique to the timed commitment settings:
A large body of literature on succinct non-interactive arguments
(SNARGs) aims at designing efficient protocols with the same guar-
antees [4, 18, 73] and there has been a strong push especially from
the cryptocurrency community advocating for the usage of trans-
parent protocols [76, 77]. Surprisingly, for the case of timed commit-
ments, constructing an efficient scheme with a transparent setup
is a largely unexplored territory, even given their wide range of
applications.
In summary, the large applicability of timed commitment schemes
calls for a scalable solution that satisfies strong security definitions
under minimal trust assumptions.
1.1 Our Contribution
Our main result is a new efficient construction of CCA timed com-
mitments with transparent setup, where the amount of sequential
computation does not scale with the number of users. We then
show how this scheme immediately implies an efficient and scal-
able distributed randomness generation protocol. We discuss our
contributions in more details below.
Efficient CCA Timed Commitments. We present a concretely
efficient construction of CCA timed commitments with a transpar-
ent setup algorithm. The scheme is equipped with a homomorphic
evaluation algorithm that allows us to avoid the computational
blowup in the number of users (the relation between CCA security
and homomorphic evaluation is discussed in details in Section 1.2).
Our construction can be conceptually broken down into three main
steps:
(1) Homomorphic Time-Lock Puzzle: We build a linearly homomor-
phic time-lock puzzle scheme over Z𝑞, for some prime 𝑞, with
transparent (public-coin) setup from class groups of imaginary
quadratic order [16].
(2) Efficient Simulation-Extractable NIZKs: To make the scheme
CCA secure, we follow the Naor-Yung paradigm [58] and equip
the time-lock puzzle with a non-interactive zero-knowledge
(NIZK) proof 𝜋 certifying the well-formedness of the puzzle.
We then show how to build this proof 𝜋 that is concretely
efficient, has a transparent setup, and satisfies the strong notion
of straight-line simulation extractability.
(3) Cross-Group DLog Equality: In the process of instantiating the
efficient NIZK scheme we develop new techniques to efficiently
prove the equality of discrete logarithm between class groups
(of unknown order) and standard prime order groups, which
might be of independent interest.
One caveat of relying on class groups, as opposed to RSA groups,
is that the time needed to compute the setup is proportional to the
time parameter T (although the size of the public parameters is
independent of T). This seems inevitable since, as opposed to RSA
group, a trapdoor for the scheme is hard to compute even given
the random coins of the setup. This means that one needs to run a
one-time pre-processing phase (that lasts approximately T steps)
to compute the public parameters. As we will discuss later, this is
perfectly acceptable in many applications of interest.
The security of our time-lock puzzle (and consequently of our
CCA timed commitment) relies on the sequential squaring prob-
lem over class groups. Although somewhat less studied than the
sequential squaring over RSA groups, this problem has recently
received a lot of attention [31, 74] and even implemented for usage
in the Chia network [32].
Distributed Randomness Generation. We demonstrate the util-