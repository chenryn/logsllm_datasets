# Simulatable Security and Polynomially Bounded Concurrent Composability

**Authors:**
- Dennis Hofheinz
- Dominique Unruh

**Affiliations:**
- **Dennis Hofheinz:** CWI, Cryptology and Information Security Group, Amsterdam, The Netherlands
- **Dominique Unruh:** IAKS, Arbeitsgruppe Systemsicherheit, Universit√§t Karlsruhe, Germany

**Contact:**
- PI:EMAIL (for both authors)

## Abstract

Simulatable security is a robust security notion for multi-party protocols that ensures strong composability features. The primary flavors of simulatable security include standard simulatability, universal simulatability, and black-box simulatability. Each of these flavors can be further categorized into "computational," "statistical," and "perfect" sub-flavors, reflecting the adversarial power considered.

Universal and black-box simulatability, in all their sub-flavors, are known to guarantee secure concurrent composition even when a polynomial number of protocols are involved. In this paper, we demonstrate that computational standard simulatability does not allow for secure concurrent composition of a polynomial number of protocols. However, we also show that statistical standard simulatability does permit such composition. Our first result relies on the existence of a specific cryptographic tool, namely time-lock puzzles, and its proof employs a novel and unconventional approach to cryptographic multi-party computation.

**Keywords:** Reactive Simulatability, Universal Composability, Concurrent Composition

## 1. Introduction

There are several ways to define the security of a multi-party protocol. One elegant and general approach is the concept of simulatable security. This notion involves specifying an idealized trusted host that performs the protocol task ideally and securely by construction. For example, a trusted host for a common coin toss would uniformly and randomly sample a bit \( b \) and send it to each party. A simulatably secure protocol for coin toss must be indistinguishable from this ideal setting, meaning no environment should be able to detect differences between executions with the real protocol and those with the trusted host within feasible time.

Simulatable security establishes a security relation where a protocol is considered secure relative to a suitable idealization. When the idealization is obvious, a protocol is simply called secure, implying security relative to that idealization. This concept is useful for showing that a cryptographic implementation of a symbolic protocol is secure against cryptanalytic attacks. It also helps in analyzing information-theoretic security guarantees, such as those of a one-time pad.

For large protocols, a divide-and-conquer approach is often beneficial. To enable modular protocol analysis, it is crucial that the composition of secure protocols remains secure. However, secure composition is not always straightforward. For instance, some notions of non-interference are not preserved under composition, and most definitions of Zero-Knowledge proof systems do not allow for secure composition even of two systems. Proving composability properties for each security property can be laborious, so demonstrating that a protocol is simulatably secure can be advantageous, as it implies many different security properties.

All flavors of simulatable security provide certain composition guarantees. They ensure that a constant number of secure protocols can be composed concurrently without losing security. This has been used to analyze various protocol constructions, including the Needham-Schroeder-Lowe protocol, electronic payment systems, and cryptographic constructions for a wide range of tasks.

In some scenarios, it may be desirable to compose more than a constant number of protocols. Many cryptographic protocol constructions use a polynomial number of primitive instances, and their security analysis often reduces to analyzing one instance at a time. For the overall security, secure composability of a polynomial number of instances is needed.

In this paper, we investigate how simulatable security behaves under the composition of a polynomial number of secure protocols. While universal and black-box simulatability allow for this type of composition, whether standard simulatability (the default security notion in the Reactive Simulatability framework) also allows it was an open question. We show that computational standard simulatability does not allow for secure composition of a polynomial number of protocols, but statistical and perfect standard simulatability do. We provide a detailed explanation and a general composition theorem for the latter case.

## 2. Related Work and Technical Overview

The concept of simulatability has a rich history, with frameworks like Reactive Simulatability and Universal Composability proving useful for analyzing security properties in distributed systems. In these frameworks, a protocol \(\hat{M}_1\) is considered as secure as another protocol \(\hat{M}_2\) (an idealization of the protocol task) if \(\hat{M}_1\) is indistinguishable from \(\hat{M}_2\) in every context, even in the presence of attacks.

Formally, for every adversary \(A\) attacking \(\hat{M}_1\), there exists an adversary \(S\) (the simulator) attacking \(\hat{M}_2\) such that the views of an honest user \(H\) (representing the protocol context) are indistinguishable in both scenarios. The honest user interacts with the protocol participants and the adversary, and for security, every possible \(H\) must experience indistinguishable views with \(\hat{M}_1\) and \(\hat{M}_2\).

Standard simulatability allows the simulator \(S\) to depend on \(H\), while universal simulatability allows \(H\) to depend on \(S\). Both variants support some form of secure composition, including simple composability and polynomially bounded concurrent composability. Simple composability ensures that if \(\hat{M}_1\) is as secure as \(\hat{M}_2\), then a protocol \(\hat{N} \hat{M}_1\) using a single instance of \(\hat{M}_1\) is as secure as \(\hat{N} \hat{M}_2\) using \(\hat{M}_2\). Polynomially bounded concurrent composability ensures that for any polynomial \(p\), the concurrent execution of \(p\) instances of \(\hat{M}_1\) is as secure as the concurrent execution of \(p\) instances of \(\hat{M}_2\).

It is known that standard simulatability implies simple composability, and universal and black-box simulatability additionally allow for polynomially bounded concurrent composability. However, whether standard simulatability implies polynomially bounded concurrent composability and whether simple and polynomially bounded concurrent composability together imply universal simulatability were open questions.

Recent work has made progress on these questions. For a modified definition of standard simulatability, it was shown that standard, universal, and black-box simulatability coincide. However, this modification breaks the equivalence between standard simulatability and simple composability. Further, it was shown that computational standard simulatability does not imply computational universal simulatability, and that in the case of perfect security, standard and universal simulatability coincide.

## 3. Our Work

In this work, we address the remaining open questions and provide the missing implications and separations among standard/universal simulatability and the different notions of composability. Specifically, we show that computational standard simulatability does not imply polynomially bounded concurrent composability, while statistical standard simulatability does. An overview of the implications and separations is provided in Figure 1.

Our results hold in both the Reactive Simulatability and Universal Composability frameworks. The main difference is that Reactive Simulatability considers uniform machines, while Universal Composability allows the honest user access to a non-uniform input chosen after the honest user and simulator. We prove our results using the Reactive Simulatability formalism, but also cover the case where the honest user receives a non-uniform input, making it easy to reformulate the proof using Universal Composability.

We also discuss the impact of recent developments in simulatability-based security definitions on our work. Specifically, alternative definitions of polynomial-time adversarial entities have been introduced, and we explain why our separating example does not work with these definitions.

## 4. Organization

- **Section 2:** Reviews the Reactive Simulatability framework.
- **Section 3:** Shows that computational standard simulatability does not imply polynomially bounded concurrent composability.
- **Section 4:** Proves polynomially bounded concurrent composability for the statistical and perfect cases.
- **Section 5:** Concludes the work.

## 5. Reactive Simulatability

Reactive simulatability (in the "standard" flavor) defines a protocol \(\hat{M}_1\) (the real protocol) to be as secure as another protocol \(\hat{M}_2\) (the ideal protocol) if, for any adversary \(A\) and any honest user \(H\), there exists an adversary \(S\) (simulator) such that the view of \(H\) is indistinguishable in the following two scenarios:
- The honest user \(H\) runs with the real adversary \(A\) and the real protocol \(\hat{M}_1\).
- The honest user \(H\) runs with the simulator \(S\) and the ideal protocol \(\hat{M}_2\).

This definition allows specifying a trusted host as the ideal protocol and considering whether a real protocol is as secure as the trusted host. To understand this in detail, we need to specify what it means for machines to "run together." Consider a set of machines that can send messages to each other.