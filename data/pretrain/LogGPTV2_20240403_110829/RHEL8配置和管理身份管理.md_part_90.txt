    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  显示 Apache HTTP 服务器支持的密码列表：
    ::: orderedlist
    1.  安装`nmap`{.literal}软件包：
        ``` literallayout
        # yum install nmap
        ```
    2.  使用`nmap`{.literal}工具来显示支持的加密：
        ``` literallayout
        # nmap --script ssl-enum-ciphers -p 443 example.com
        ...
        PORT    STATE SERVICE
        443/tcp open  https
        | ssl-enum-ciphers:
        |   TLSv1.2:
        |     ciphers:
        |       TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (ecdh_x25519) - A
        |       TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (dh 2048) - A
        |       TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (ecdh_x25519) - A
        ...
        ```
    :::
:::
::: itemizedlist
**其它资源**
-   有关系统范围的加密策略的详情，请查看`update-crypto-policies(8)`{.literal}手册页和[使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
-   如需有关 `SSLCipherSuite`{.literal}参数的详情，请参阅 Apache
    手册中的`mod_ssl`{.literal}文档。有关安装手动的详情，请参阅 [安装
    Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#configuring-tls-client-certificate-authentication_restricting-an-application-to-trust-a-subset-of-certs}配置 TLS 客户端证书身份验证 {.title}
:::
客户端证书身份验证仅允许使用证书进行身份验证的用户访问
[**my_company.idm.example.com**]{.strong} Web
服务器上的资源。这部分论述了如何为`/var/www/html/Example/`{.literal}目录配置客户端证书身份验证。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果 [**my_company.idm.example.com**]{.strong} Apache 服务器使用 TLS 1.3
协议，则某些客户端需要额外的配置。例如，在 Firefox
中，将`about:config`{.literal}菜单中的`security.tls.enable_post_handshake_auth`{.literal}参数设置为`true`{.literal}。详情请查看
[Red Hat Enterprise Linux
8中的传输层安全版本1.3](https://www.redhat.com/en/blog/transport-layer-security-version-13-red-hat-enterprise-linux-8){.link}。
:::
::: itemizedlist
**先决条件**
-   在 [**my_company.idm.example.com**]{.strong} 服务器上启用了 TLS
    加密，如 ["在 Apache HTTP 服务器中添加 TLS
    加密"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.xref}
    所述。
:::
::: orderedlist
**流程**
1.  编辑`/etc/httpd/conf/httpd.conf`{.literal}文件，并将以下设置添加到你要为其配置客户端验证的``{.literal}指令中：
    ``` literallayout
      SSLVerifyClient require
    ```
    `SSLVerifyClient require`{.literal}设置定义了服务器必须成功验证客户端证书，然后客户端才能访问`/var/www/html/Example/`{.literal}目录中的内容。
2.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  使用 `curl`{.literal} 工具在没有客户端身份验证的情况下访问
    `https://my_company.idm.example.com/Example/`{.literal} URL：
    ``` literallayout
    $ curl https://my_company.idm.example.com/Example/
    curl: (56) OpenSSL SSL_read: error:1409445C:SSL routines:ssl3_read_bytes:tlsv13 alert certificate required, errno 0
    ```
    此错误表示 [**my_company.idm.example.com**]{.strong} Web
    服务器需要客户端证书身份验证。
2.  将客户端私钥和证书以及 CA
    证书传递给`curl`{.literal}以便使用客户端身份验证来访问相同的URL：
    ``` literallayout
    $ curl --cacert ca.crt --key client.key --cert client.crt https://my_company.idm.example.com/Example/
    ```
    如果请求成功，`curl`{.literal}会显示存储在`/var/www/html/Example/`{.literal}目录中的`index.html`{.literal}文件。
:::
::: itemizedlist
**其它资源**
-   有关客户端身份验证的详情，请查看 Apache 手册中的
    `mod_ssl Configuration How-To`{.literal}文档。有关安装手动的详情，请参阅
    [安装 Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#requesting-and-exporting-a-user-certificate_restricting-an-application-to-trust-a-subset-of-certs}请求新的用户证书并将其导出到客户端 {.title}
:::
作为身份管理(IdM)管理员，您可以配置在 IdM 客户端上运行的 Web
服务器，以请求使用 Web 浏览器访问服务器的用户对特定 IdM 子 CA
发布的证书进行身份验证。完成此部分，从特定的 IdM 子 CA
请求用户证书，并将 上的证书和对应的私钥导出到用户希望使用 Web 浏览器访问
Web 服务器的主机。之后
[，将证书和私钥导入到浏览器中](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#configuring-browser-for-cert-auth_restricting-an-application-to-trust-a-subset-of-certs "配置浏览器以启用证书身份验证"){.link}。
::: orderedlist
**流程**
1.  （可选）创建新目录，如
    `~/certdb/`{.literal}，并使其成为临时证书数据库。当系统提示时，创建一个
    NSS 证书数据库密码来加密后续步骤中生成的证书的密钥：
    ``` literallayout
    # mkdir ~/certdb/
    # certutil -N -d ~/certdb/
    Enter a password which will be used to encrypt your keys.
    The password should be at least 8 characters long,
    and should contain at least one non-alphabetic character.
    Enter new password:
    Re-enter password:
    ```
2.  创建证书签名请求(CSR)，并将输出重定向到文件。例如，要为
    `IDM.EXAMPLE.COM`{.literal} 域中的 `idm_user`{.literal}
    用户创建一个名称为 `certificate_request.csr`{.literal} 的
    `4096`{.literal} 位 CSR，请将证书私钥的昵称设为 `idm_user`{.literal}
    以便于查找，并将主题设为 `CN=idm_user,O=IDM.EXAMPLE.COM`{.literal}
    ：
    ``` literallayout
    # certutil -R -d ~/certdb/ -a -g 4096 -n idm_user -s "CN=idm_user,O=IDM.EXAMPLE.COM" > certificate_request.csr
    ```
3.  出现提示时，输入您在使用 `certutil`{.literal}
    创建临时数据库时输入的相同密码。然后继续键入 rundlomly
    直到通知停止：
    ``` literallayout
    Enter Password or Pin for "NSS Certificate DB":
    A random seed must be generated that will be used in the
    creation of your key.  One of the easiest ways to create a
    random seed is to use the timing of keystrokes on a keyboard.
    To begin, type keys on the keyboard until this progress meter
    is full.  DO NOT USE THE AUTOREPEAT FUNCTION ON YOUR KEYBOARD!
    Continue typing until the progress meter is full:
    ```
4.  将证书请求文件提交到服务器。指定要与新发布的证书关联的 Kerberos
    主体、存储证书的输出文件，以及可选的证书配置集。指定您要签发证书的
    IdM 子 CA。例如，要获取 `IECUserRoles`{.literal}
    配置集的证书，带有添加的用户角色扩展的配置文件，`idm_user`{.literal}@`IDM.EXAMPLE.COM`{.literal}
    主体来自 `webclient-ca`{.literal}，并将证书保存到
    `~/idm_user.pem`{.literal} 文件中：
    ``` literallayout
    # ipa cert-request certificate_request.csr --principal=PI:EMAIL --profile-id=IECUserRoles --ca=webclient-ca --certificate-out=~/idm_user.pem
    ```
5.  将证书添加到 NSS 数据库。使用 `-n`{.literal} 选项设置之前创建 CSR
    时所用的相同 nickname，以便该证书与 NSS
    数据库中的私钥相匹配。`t`{.literal} 选项设置信任级别。详情请查看
    certutil(1)man page。`i 选项指定`{.literal} 输入证书文件。例如，要将
    添加到 NSS 数据库中的一个带有 `idm_user`{.literal} nickname
    的证书，该证书存储在 `~/ certdb/ 数据库的 ~/`{.literal}
    idm_user.pem``{=html} 文件中：
    ``` literallayout
    # certutil -A -d ~/certdb/ -n idm_user -t "P,," -i ~/idm_user.pem
    ```
6.  验证 NSS 数据库中的密钥是否未显示 `（或称为）`{.literal} 作为其
    nickname。例如，验证存储在 `~/certdb/ 数据库中`{.literal}
    的证书没有被孤立：
    ``` literallayout
    # certutil -K -d ~/certdb/
     rsa      5ad14d41463b87a095b1896cf0068ccc467df395   NSS Certificate DB:idm_user
    ```
7.  使用 `pk12util`{.literal} 命令将证书从 NSS 数据库导出到 PKCS12
    格式。例如，将 `/root/certdb`{.literal} NSS 数据库中的
    `idm_user`{.literal} nickname 的证书导出到
    `~/idm_user.p12`{.literal} 文件：
    ``` literallayout
    # pk12util -d ~/certdb -o ~/idm_user.p12 -n idm_user
    Enter Password or Pin for "NSS Certificate DB":
    Enter password for PKCS12 file:
    Re-enter password:
    pk12util: PKCS12 EXPORT SUCCESSFUL
    ```
8.  将证书传输到您要启用 `idm_user`{.literal} 的证书身份验证的主机：
    ``` literallayout
    # scp ~/idm_user.p12 PI:EMAIL:/home/idm_user/
    ```
9.  在传输了证书的主机上，出于安全原因使 \'pkcs12 文件被 \'other\'
    组无法访问的目录：
    ``` literallayout
    # chmod o-rwx /home/idm_user/
    ```
10. 出于安全考虑，请从服务器中删除临时 NSS 数据库和 .pkcs12 文件：
    ``` literallayout
    # rm ~/certdb/
    # rm ~/idm_user.p12
    ```
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#configuring-browser-for-cert-auth_restricting-an-application-to-trust-a-subset-of-certs}配置浏览器以启用证书身份验证 {.title}
:::
若要在使用 Web UI
登录身份管理(IdM)时通过证书进行身份验证，您需要将用户和相关证书颁发机构(CA)证书导入到
Mozilla Firefox 或 Google Chrome 浏览器。浏览器运行的主机本身不必是 IdM
域的一部分。
IdM 支持以下浏览器来连接到 WebUI：
::: itemizedlist
-   Mozilla Firefox 38 及更新的版本
-   Google Chrome 46 及更新的版本
:::
以下流程演示了如何配置 Mozilla Firefox 57.0.1 浏览器。
::: itemizedlist
**先决条件**
-   您可以使用 PKCS#12 格式在浏览器中导入
    [用户证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#requesting-and-exporting-a-user-certificate_restricting-an-application-to-trust-a-subset-of-certs "请求新的用户证书并将其导出到客户端"){.link}。
-   您已 [下载子 CA
    证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#downloading-the-sub-CA-certificate-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 下载子 CA 证书"){.link}，并以
    PEM 格式随时可用。
:::
::: orderedlist
**流程**
1.  打开 Firefox，然后导航到 `Preferences`{.literal} →
    `Privacy & Security`{.literal}。
    ::: figure
    []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#privacy-security_restricting-an-application-to-trust-a-subset-of-certs}
    **图 60.7. Preferences 中的隐私和安全部分**
    ::: figure-contents
    ::: mediaobject
    ![Firefox 设置页面的截图以及\"Privacy &
    Security\"选项被突出显示。](images/privacy_and_security.png)
    :::
    :::
    :::
2.  单击 [查看证书]{.guibutton}。
    ::: figure
    []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#view-certificates_restricting-an-application-to-trust-a-subset-of-certs}
    **图 60.8. 查看隐私和安全性中的证书**
    ::: figure-contents
    ::: mediaobject
    ![系统将突出显示底部\"证书\"部分和\"查看证书\"按钮的屏幕截图。](images/view_certificates.png)
    :::
    :::
    :::
3.  在您的 `证书`{.literal} 选项卡中，单击 [Import]{.guibutton}。以
    PKCS12 格式查找并打开用户证书，然后点 [OK]{.guibutton} 和
    [OK]{.guibutton}。
4.  要确保您的 IdM 子 CA 被 Firefox 识别为可信颁发机构，请导入您在 ["从
    IdM WebUI 下载子 CA
    证书"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#downloading-the-sub-CA-certificate-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 下载子 CA 证书"){.xref}
    中保存的 IdM 子 CA 证书作为可信证书颁发机构证书：
    ::: orderedlist
    1.  打开 Firefox，导航到 Preferences 并点击 [Privacy &
        Security]{.guibutton}。
        ::: figure
        []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#privacy-security-2_restricting-an-application-to-trust-a-subset-of-certs}
        **图 60.9. Preferences 中的隐私和安全部分**
        ::: figure-contents
        ::: mediaobject
        ![隐私和安全](images/privacy_and_security.png)
        :::
        :::
        :::
    2.  单击 [查看证书]{.guibutton}。
        ::: figure
        []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#view-certificates-2_restricting-an-application-to-trust-a-subset-of-certs}
        **图 60.10. 查看隐私和安全性中的证书**
        ::: figure-contents
        ::: mediaobject
        ![\"证书\"部分的屏幕截图.系统突出显示了右下角的\"查看证书\"按钮。](images/view_certificates.png)
        :::
        :::
        :::