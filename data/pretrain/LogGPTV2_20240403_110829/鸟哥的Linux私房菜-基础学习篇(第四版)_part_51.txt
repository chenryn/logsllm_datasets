# 使用 [tab] 与空白键的效果差不多，都是一堆空白啊！我们无法知道两者的差别。
# 此时使用 cat -A 就能够发现那些空白的地方是啥鬼东西了！[tab]会以 ^I 表示，
# 断行字符则是以 $ 表示，所以你可以发现每一行后面都是 $ 啊！不过断行字符
# 在Windows/Linux则不太相同，Windows的断行字符是 ^M$ 啰。
# 这部分我们会在第九章 vim 软件的介绍时，再次的说明到喔！
嘿嘿！Linux 里面有“猫”指令？喔！不是的， cat 是 Concatenate （连续） 的简写， 主要的功能是将一个文件的内容连续的印出在屏幕
上面！例如上面的例子中，我们将 /etc/issue 印出来！如果加上 -n 或 -b 的话，则每一行前面还会加上行号呦！
鸟哥个人是比较少用 cat 啦！毕竟当你的文件内容的行数超过 40 行以上，嘿嘿！根本来不及在屏幕上看到结果！ 所以，配合等一下要
介绍的 more 或者是 less 来执行比较好！此外，如果是一般的 DOS 文件时，就需要特别留意一些奇奇怪怪的符号了， 例如断行与 [tab] 等，要
显示出来，就得加入 -A 之类的选项了！
tac （（反反向向列列示示））
[root@study ~]# tac /etc/issue
Kernel \r on an \m
\S
# 嘿嘿！与刚刚上面的范例一比较，是由最后一行先显示喔！
tac 这个好玩了！怎么说呢？详细的看一下， cat 与 tac ，有没有发现呀！对啦！ tac 刚好是将 cat 反写过来，所以他的功能就跟 cat 相
反啦， cat 是由“第一行到最后一行连续显示在屏幕上”，而 tac 则是“ 由最后一行到第一行反向在屏幕上显示出来 ”，很好玩吧！
nl （（添添加加行行号号打打印印））
[root@study ~]# nl [-bnw] 文文件件
选项与参数：
-b ：指定行号指定的方式，主要有两种：
-b a ：表示不论是否为空行，也同样列出行号（类似 cat -n）；
-b t ：如果有空行，空的那一行不要列出行号（默认值）；
-n ：列出行号表示的方法，主要有三种：
-n ln ：行号在屏幕的最左方显示；
-n rn ：行号在自己字段的最右方显示，且不加 0 ；
-n rz ：行号在自己字段的最右方显示，且加 0 ；
-w ：行号字段的占用的字符数。
范例一：用 nl 列出 /etc/issue 的内容
[root@study ~]# nl /etc/issue
1 \S
2 Kernel \r on an \m
# 注意看，这个文件其实有三行，第三行为空白（没有任何字符），
# 因为他是空白行，所以 nl 不会加上行号喔！如果确定要加上行号，可以这样做：
[root@study ~]# nl -b a /etc/issue
1 \S
2 Kernel \r on an \m
3
# 呵呵！行号加上来啰～那么如果要让行号前面自动补上 0 呢？可这样
[root@study ~]# nl -b a -n rz /etc/issue
000001 \S
000002 Kernel \r on an \m
000003
# 嘿嘿！自动在自己字段的地方补上 0 了～默认字段是六位数，如果想要改成 3 位数？
[root@study ~]# nl -b a -n rz -w 3 /etc/issue
001 \S
002 Kernel \r on an \m
003
# 变成仅有 3 位数啰～
nl 可以将输出的文件内容自动的加上行号！其默认的结果与 cat -n 有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否
自动补齐 0 等等的功能呢。
前面提到的 nl 与 cat, tac 等等，都是一次性的将数据一口气显示到屏幕上面，那有没有可以进行一页一页翻动的指令啊？ 让我们可以一
页一页的观察，才不会前面的数据看不到啊～呵呵！有的！那就是 more 与 less 啰～
more （（一一页页一一页页翻翻动动））
[root@study ~]# more /etc/man_db.conf
#
#
# This file is used by the man-db package to configure the man and cat paths.
# It is also used to provide a manpath for those without one by examining
# their PATH environment variable. For details see the manpath（5） man page.
#
.....（中间省略）.....
--More--（（28%）） <== 重点在这一行喔！你的光标也会在这里等待你的指令
仔细的给他看到上面的范例，如果 more 后面接的文件内容行数大于屏幕输出的行数时， 就会出现类似上面的图示。重点在最后一行，
最后一行会显示出目前显示的百分比， 而且还可以在最后一行输入一些有用的指令喔！在 more 这个程序的运行过程中，你有几个按键可以按
的：
空白键 （space）：代表向下翻一页；
Enter ：代表向下翻“一行”；
/字串 ：代表在这个显示的内容当中，向下搜寻“字串”这个关键字；
:f ：立刻显示出文件名以及目前显示的行数；
q ：代表立刻离开 more ，不再显示该文件内容。
b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。
要离开 more 这个指令的显示工作，可以按下 q 就能够离开了。而要向下翻页，就使用空白键即可。 比较有用的是搜寻字串的功能，举
例来说，我们使用“ more /etc/man_db.conf ”来观察该文件， 若想要在该文件内搜寻 MANPATH 这个字串时，可以这样做：
[root@study ~]# more /etc/man_db.conf
#
#
# This file is used by the man-db package to configure the man and cat paths.
# It is also used to provide a manpath for those without one by examining
# their PATH environment variable. For details see the manpath（5） man page.
#
....（中间省略）....
/MANPATH <== 输入了 / 之后，光标就会自动跑到最下面一行等待输入！
如同上面的说明，输入了 / 之后，光标就会跑到最下面一行，并且等待你的输入， 你输入了字串并按下[enter]之后，嘿嘿！ more 就会
开始向下搜寻该字串啰～而重复搜寻同一个字串， 可以直接按下 n 即可啊！最后，不想要看了，就按下 q 即可离开 more 啦！
less （（一一页页一一页页翻翻动动））
[root@study ~]# less /etc/man_db.conf
#
#
# This file is used by the man-db package to configure the man and cat paths.
# It is also used to provide a manpath for those without one by examining
# their PATH environment variable. For details see the manpath（5） man page.
#
.....（中间省略）.....
: <== 这里可以等待你输入指令！
less 的用法比起 more 又更加的有弹性，怎么说呢？在 more 的时候，我们并没有办法向前面翻， 只能往后面看，但若使用了 less 时，
呵呵！就可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件，你瞧，是不是更容易使用来观看一个文件的内容了呢！
除此之外，在 less 里头可以拥有更多的“搜寻”功能喔！不止可以向下搜寻，也可以向上搜寻～ 实在是很不错用～基本上，可以输入的指
令有：
空白键 ：向下翻动一页；
[pagedown]：向下翻动一页；
[pageup] ：向上翻动一页；
/字串 ：向下搜寻“字串”的功能；
?字串 ：向上搜寻“字串”的功能；
n ：重复前一个搜寻 （与 / 或 ? 有关！）
N ：反向的重复前一个搜寻 （与 / 或 ? 有关！）
g ：前进到这个数据的第一行去；
G ：前进到这个数据的最后一行去 （注意大小写）；
q ：离开 less 这个程序；
查阅文件内容还可以进行搜寻的动作～瞧～ less 是否很不错用啊！ 其实 less 还有很多的功能喔！详细的使用方式请使用 man less 查询
一下啊！ ^_^
你是否会觉得 less 使用的画面与环境与 man page 非常的类似呢？没错啦！因为man这个指令就是调用 less 来显示说明文档的内容的！
现在你是否觉得 less 很重要呢？ ^_^
我们可以将输出的数据作一个最简单的撷取，那就是取出文件前面几行 （head） 或取出后面几行 （tail） 文字的功能。 不过，要注意
的是， head 与 tail 都是以“行”为单位来进行数据撷取的喔！
head （（取取出出前前面面几几行行））
[root@study ~]# head [-n number] 文文件件
选项与参数：
-n ：后面接数字，代表显示几行的意思
[root@study ~]# head /etc/man_db.conf
# 默认的情况中，显示前面十行！若要显示前 20 行，就得要这样：
[root@study ~]# head -n 20 /etc/man_db.conf
范例：如果后面100行的数据都不打印，只打印/etc/man_db.conf的前面几行，该如何是好？
[root@study ~]# head -n -100 /etc/man_db.conf
head 的英文意思就是“头”啦，那么这个东西的用法自然就是显示出一个文件的前几行啰！ 没错！就是这样！若没有加上 -n 这个选项
时，默认只显示十行，若只要一行呢？那就加入“ head -n 1 filename ”即可！
另外那个 -n 选项后面的参数较有趣，如果接的是负数，例如上面范例的-n -100时，代表列前的所有行数， 但不包括后面100行。举例
来说 CentOS 7.1 的 /etc/man_db.conf 共有131行，则上述的指令“head -n -100 /etc/man_db.conf” 就会列出前面31行，后面100行不会打印出来
了。这样说，比较容易懂了吧？ ^_^
tail （（取取出出后后面面几几行行））
[root@study ~]# tail [-n number] 文文件件