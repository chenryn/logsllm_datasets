title:Enabling Hierarchical and Bulk-Distribution for Watermarked Content
author:Germano Caronni and
Christoph L. Schuba
Enabling Hierarchical and Bulk-Distribution for Watermarked Content
Germano Caronni and Christoph Schuba
Sun Microsystems, Inc.
901 San Antonio Road
Palo Alto, CA 94303, USA
PI:EMAIL, PI:EMAIL
Abstract
One of the solutions to deter copyright violations consists
of embedding hard to detect watermarks in digital media.
Current developments have focused on how to embed wa-
termarks, and on one-to-one exchanges on how to securely
convey tagged data to the end consumer. Assuming a large
customer base or predistributed media, it may become pro-
hibitively expensive or time consuming to tag each separate
copy of data individually before it is delivered to the cus-
tomer.
We present two mechanisms that allow the preparation
and distribution of tagged data in a more scalable way
than existing approaches. The ﬁrst one, called hierarchi-
cal tagging, is preferable for on-line multi-level distribu-
tion, where producer and consumer are not in direct con-
tact, but intermediate agents provide distribution channels
and sales platforms. The second method is well suited
to pre-produced bulk-media distribution (such as through
CDROMs or DVDs), with only small amounts of on-line in-
formation being transferred to each consumer. We call it
bulk-tagging.
1 Introduction
The science of inserting hidden marks in digital data has
advanced from steganographic uses [Kah96] and ﬁrst prim-
itive watermarking approaches [TNM90], [Car95] to a ﬁeld
of much research interest. Many ways have been proposed
on how to insert tags (aka watermarks) into digital media
such as audio and video streams, digital images, text of vari-
ous formats, source code [ST98], and even program binaries
[SHKQ99]. Distribution channels were usually limited to
the one-to-one scenario, with few notable exceptions such
as Watercasting [BPC99]), where watermarking becomes a
feature of multicast communications. Delivery and dispute
resolution protocols with different security properties were
designed, such as described in [PW97].
There exists, however, a fundamental problem. If each
individual copy needs to be tagged separately and with a
unique watermark, the distribution of tagged media is lim-
ited by the computational capacity of the watermark creator.
Watermarks can either be pre-computed (and stored at the
distributor-side) or done on the ﬂy, right before data is to be
distributed. Both approaches do not scale well to larger cus-
tomer bases because a different watermark has to be com-
puted and inserted into the data for each new deliverable
copy. Because the insertion of watermarks is not an inher-
ently sequential process, a solution to this problem is to al-
low a set of distributors to insert watermarks independently
from each other. In this approach, all distributors are trusted
to correctly report their sales proceedings to the owner of
the data. Similarly, pre-produced bulk-media could be cre-
ated in a parallel fashion, but in both cases the trust model is
hard to accept. The former DivX product pursued a differ-
ent approach, where devices were inserting watermarks into
the video stream during actual playback. Relying on trusted
hardware on the consumer side, this approach does not work
in a software-only environment. There, programs executing
the tagging algorithm are under control of the end-user on
whose computer the operation is being performed.
In the next few sections, the paper describes two schemes
that allow the process of creating and distributing tagged
media to scale to large quantities.
In the ﬁrst approach,
named hierarchical tagging, the online distribution scenario
is extended by allowing a hierarchy of distributors to pro-
vide media to end customers. Here, the media is tagged at
each level in the hierarchy, introducing multiple layers of
tags in the same data.
The second approach (bulk tagging) targets both the
off-line distribution of tagged media (such as via CDs or
DVDs) and the online bulk distribution (e.g., via mirror FTP
servers). In this second approach, the same set of prepro-
cessed media is distributed to every customer and the re-
ceiver subsequently needs to acquire a set of cryptographic
keys (online, or packaged together with the media) to access
the uniquely tagged data.
Figure 1. Image with all potential tags superimposed, tag size is 16x16.
Figure 2. Tagged image (with exaggerated markings).
2 Background Material
Before pursuing the two approaches to scale tagging to
larger distributions, we need to shortly revisit an actual wa-
termarking mechanism, and mention other fundamentals.
While more sophisticated tagging approaches exist, we will
use an old scheme of image tagging [Car95] for our exam-
ples. It is easy to understand and to implement, and thus
facilitated the creation of a prototype to test and validate
our ideas.
The tagging scheme consists of choosing a series of rect-
angular areas in an image, and then changing the brightness
of some of those areas. The choice whether a given loca-
tion is selected to carry a tag depends on the variance of
the brightness around that location, and on some pseudo-
random factors. Effectively, a different random bit string of
a few hundred bits in length is encoded in each image. Each
bit string is speciﬁc to one consumer. Figure 1 shows poten-
tial tagging locations, and Figure 2 an exaggeratedly tagged
image. By making the location and nature of the individ-
ual tags depend on keying information, the scheme tries to
avoid the problems of achieving security through obscurity.
Interestingly enough, this scheme is quite resistant to
contemporary attacks such as the use of StirMark [PAK98],
where a geometric, color space, and dithering distortion still
yields acceptable tag recovery. The following Table 1 out-
lines1 this for the sample image depicted above.
It does
1Tag Mode indicates both tag size in pixels and the marking inten-
sity; PSNR is the signal to noise ratio (in dB) of the luminance. Cor-
relation is done the same way as in [Car95]. StirMark #1 used the fol-
lowing parameters:
-i2 -o.7 -d3 -n6 -r1, and StirMark #2 used -i1.5 -
o.5 -d3 -n6 -r1, resulting in about 20% less geometrical distortion, see
http://www.cl.cam.ac.uk/˜mgk25/stirmark for code.
however succumb to other attacks, and should thus not be
considered secure.
The exemplary scheme can be used for hierarchical and
bulk-tagging applications. For hierarchical tagging, it is
necessary that different layers of watermarks do not (or
only minimally) interfere with each other. This is usually
a basic property of watermarking for copyright protection
purposes because watermarks are by design supposed to be
hard to detect and hard to interfere with. For a watermark-
ing scheme that is to be used in a bulk-tagging environment,
the tags or customer-dependent distinct markings must be
separable into building blocks such that the whole can be
composed of independent parts. The sections below will
provide more details for both these requirements.
3 Hierarchical Tagging
Watermarks for digital media are supposed to be hard
to detect and resilient to modiﬁcation. Their modiﬁcation
may originate from random reproduction errors (e.g., sub-
sampling of the color space or reshaping and resizing of
the picture). Alterations may also be caused by malicious
users who try to erase the watermarks by introducing noise
or by performing any of a number of geometric or content
transformations on the data. As seen in the previous section,
an excellent example for this is StirMark [PAK98], a tool to
modify images with the purpose of making the recovery of
tags difﬁcult.
As a direct consequence of abovementioned desirable
properties, one may contemplate mixing multiple layers of
watermarks into the same document. Not too surprisingly,
this works quite well, mainly because of the redundancy and
non-interference that are some of the design goals of good
watermarking schemes. One can draw a direct analogy to
direct sequence spread spectrum radios where the same fre-
quency range is used for multiple transmissions (potentially
below the ambient noise level) at the same time. As long
as watermarks are placed in sufﬁciently randomized data
portions and as long as the interference of multiple layers
of watermarks in the same data portion does not overly re-
duce the media quality, one can use this approach to enable
a hierarchy for data distribution. See also [CKLS96] for an
application of spread spectrum techniques to watermarking.
In hierarchical tagging, the situation is not quite the same
as when independent tags are introduced into media. For
one, the upper-level distributors need to store less informa-
tion in the data than the sub-distributors, because there usu-
ally exist markedly fewer distributors than end customers.
Secondly, the upper layer distributor can take into account
the expected tagging behavior of lower layer distributors,
and use this knowledge to make his watermark even more
resistant to modiﬁcation. He may also advise the sub-
distributors on how they should place their marks, to op-
timize recoverability.
Image X
T(X,ID) =: X’
Purchase of X’
by customer
Delivery of tagged
image to customer
Customer CID
T(x,t): apply tag t to im age x
Maintain m apping for each X:
      CID ↔↔ ID   
Figure 3. Traditional approach to watermark-
Image X is tagged with mark (cid:2). The
ing.
tagged image (cid:3) (cid:1)
is acquired by customer
(cid:4)(cid:2).
As an example, consider an artist who produces high-
quality digital artwork in the form of pictures. Figure 3
illustrates the traditional approach to watermarking the pic-
ture. The artwork (Image (cid:3)) is tagged with a watermark
that encodes an identiﬁer (cid:2): (cid:5) (cid:3)(cid:6) (cid:2). We call the re-
sulting image (cid:3) (cid:1). When a customer (identiﬁed by cus-
tomer id (cid:4)(cid:2)) acquires the rights to the image, he receives
the tagged image (cid:3) (cid:1). The distributor records the mapping
between (cid:4)(cid:2) and (cid:2).
If bootlegged copies of (cid:3) (cid:1) are
found, the watermark (cid:2) can be retrieved. The mapping
(cid:4)(cid:2)   (cid:2) then reveals whose copy was bootlegged.
In hierarchical tagging, however, the artist may choose to
offer his creations to customers through several distributors,
but not until after inserting a different watermark in each
of his pictures. The distributors could in turn insert water-
marks for each sub-distributor they have. Sub-distributors
could tag the image before delivery to individual customers
or further distributors. The process is illustrated in Figure 4.
Image (cid:3) is tagged with the identiﬁers of three distributors
(cid:2)(cid:1), (cid:2)(cid:2), and (cid:2)(cid:3). Distributor (cid:2)(cid:1) uses three sub-distributors
((cid:2)(cid:4), (cid:2)(cid:5), and (cid:2)(cid:6).) Eventually, one of the distributors, say
(cid:2) interacts with the ﬁnal customer. The ﬁnal distributor
again maintains the mapping (cid:2)   (cid:4)(cid:2). The image
(cid:3) (cid:1)(cid:1)(cid:1) that the customer receives contains all watermarks that
were added for the distributors on the path from the cre-
ator of the image (cid:3) to the customer himself. If bootlegged
copies of (cid:3) (cid:1)(cid:1)(cid:1) are found, all of the watermarks pertaining
to (cid:2)(cid:1), (cid:2)(cid:5), ..., (cid:2), (cid:2) can be retrieved. This data reveals
whose copy was bootlegged.
Tag
16x16
16x16
12x12
12x12
10x10
10x10
8x8
8x8
6x6
6x6
4x4
4x4
Mode
1.4%
1.0%
1.4%
1.0%
1.4%
1.0%
1.4%
1.0%
1.4%
1.0%
1.4%
1.0%
#Tags
63
63
106
106
152
152
209
209
324
324
537
537
Tagged Only
PSNR Correl.
.9989
47.38
.9992
49.09
47.32
.9989
.9992
49.05
.9990
47.73
.9993
49.93
.9991
48.50
50.00
.9994
.9992
49.00
.9994
50.39
.9993
49.63
50.88
.9995
StirMark #1
StirMark #2
PSNR Correl.
.9605
31.15
.9608
31.18
31.14
.9604
.9608
31.17
.9606
31.16
.9609
31.19
.9608
31.17
31.20
.9610
.9608
31.17
.9610
31.19
.9609
31.18
31.20
.9610
loss(%)
4
7
14
19
28
34
52
60
74
87
175
192
6.3% 32.88
11.1% 32.94
13.2% 32.87
17.9% 32.93
18.4% 32.90
22.3% 32.95
24.8% 32.92
28.7% 32.96
22.8% 32.93
26.8% 32.96
32.5% 32.94
35.7% 32.97
PSNR Correl.
.9736
.9741
.9737
.9741
.9739
.9741
.9740
.9743
.9740
.9742
.9741
.9743
loss(%)
2
6
13
15
19
28
39
52
58
71
155
167
3.1%
9.5%
12.2%
14.1%
12.5%
18.4%
18.6%
24.8%
17.9%
21.9%
28.8%
31.0%
Table 1. Resilience of chosen watermark algorithm to image modiﬁcation via StirMark
Figure 5. Image with three layers of tags in different sizes.
Figure 5 contains a picture that has been (exaggeratedly)
marked three times. Even when normal markings are intro-
duced, the quality of the image is reduced. Table 2 identiﬁes
how much tagging information is lost through subsequent
taggings and other transforms.
Figure 6 (left half) shows an enlarged spot in the image,
where the placement of all three layers of tags is visible.
One can clearly make out that different sizes of tags have
been applied (16x16 for the ﬁrst layer, 12x12 for the second
layer, and 8x8 for the third layer). The intensity of the mark-
ings also increases from layer to layer, with 1.0% on the
ﬁrst, 1.2% on the second, and 1.4% on the third layer. Each
layer also adds 0.5% of noise. Subjective measurement of
the quality degradation is hard to express: The images be-
come progressively more grainy, and the jpeg images appear
slightly blocky. The quality of all images appears to be very
good, or at least good. The right side of Figure 6 shows the
same spot (in the normally marked image) as a difference
from the original image.
While in principle this hierarchical process can be re-
peated many times, in practice more than a few layers of
watermarks tend to reduce the data quality to a state that
their presence can interfere with the purported use of the
data. Experiments similar to the example above show that
more than a few layers of watermarks tend to make digital
images grainy. Some experiments assuming the knowledge
of the algorithm and all its parameters except, e.g., their lo-
cation, have shown a quality degradation of about 0.0003 to
0.0009 per tagging iteration. The degradation is measured
as the difference of the correlation coefﬁcient of the image
tagged once versus the image tagged twice, as compared to
the original image. A loss of about 3-4% of the original tags
is observed per iteration. After about the ﬁfth iteration, an
observer’s subjective image quality begins to suffer.
Figure 6. Extract of exaggerated marked image, and difference of normally marked image against the
original.
JPG-compressed original (Q=45)
L1: Level 1 tags introduced