Timing Attacks in Low-Latency Mix Systems
(Extended Abstract)
Brian N. Levine1, Michael K. Reiter2, Chenxi Wang2, and Matthew Wright1
1 University of Massachusetts, Amherst, MA, USA; {brian,mwright}@cs.umass.edu
2 Carnegie Mellon University, Pittsburgh, PA, USA; {reiter,chenxi}@cmu.edu
Abstract. A mix is a communication proxy that attempts to hide the
correspondence between its incoming and outgoing messages. Timing
attacks are a signiﬁcant challenge for mix-based systems that wish to
support interactive, low-latency applications. However, the potency of
these attacks has not been studied carefully. In this paper, we investigate
timing analysis attacks on low-latency mix systems and clarify the threat
they pose. We propose a novel technique, defensive dropping, to thwart
timing attacks. Through simulations and analysis, we show that defensive
dropping can be eﬀective against attackers who employ timing analysis.
1
Introduction
A mix [6] is a communication proxy that attempts to hide the correspondence
between its incoming and outgoing messages. Routing communication through
a chain of mixes is a powerful tool for providing unlinkability of senders and
receivers despite observation of the network by a global eavesdropper and the
corruption of many mix servers on the path. A mix can use a variety of tech-
niques for hiding the relationships between its incoming and outgoing messages.
In particular, it will typically transform them cryptographically, delay them,
reorder them, and emit additional “dummy” messages in its output. The eﬀec-
tiveness of these techniques have been carefully studied (e.g., [4, 12, 18, 15,13]),
but mainly for high-latency systems, e.g., anonymous email or voting applica-
tions that do not require eﬃcient processing. In practice, such systems may take
hours to deliver a message to its intended destination.
Users desire anonymity for more interactive applications, such as web brows-
ing, online chat, and ﬁle-sharing, all of which require a low-latency connection. A
number of low-latency mix-based protocols for unlinkable communications have
been proposed, including ISDN-Mixes [14], Onion Routing [16], Tarzan [10], Web
Mixes [3], and Freedom [2]. Unfortunately, there are a number of known attacks
on these systems that take advantage of weaknesses in mix-based protocols when
they are used for low-latency applications [19, 2, 20].
The work of Levine and Wright was supported in part by National Science Founda-
tion awards ANI-0087482 and EIA-0080199. The work of Reiter, Wang, and Wright
was supported in part by National Science Foundation award CCR-0208853 and a
grant from the Air Force F49620-01-1-0340.
2
Levine, Reiter, Wang, and Wright
The attack we consider here is timing analysis, where an attacker studies the
timings of messages moving through the system to ﬁnd correlations. This kind
of analysis might make it possible for two attacker mixes (i.e., mixes owned or
compromised by the attacker) to determine that they are on the same communi-
cation path. In some systems, this allows these two attacker mixes to match the
sender with her destination. Unfortunately, it is not known precisely how vul-
nerable these systems are in practice and whether an attacker can successfully
use timing analysis for these types of attacks. For example, some research has
assumed that timing analysis is possible when dummy messages are not used [20,
21, 19], though this has not been carefully examined.
In this paper, we signiﬁcantly clarify the threat posed to low-latency mix
systems by timing attacks through detailed simulations and analysis. We show
that timing attacks are a serious threat and are easy to exploit by a well-placed
attacker. We also measure the eﬀectiveness of previously proposed defenses such
as cover traﬃc and the impact of path length on the attack. Finally, we intro-
duce a new variation of cover traﬃc that better defends against the attacks we
consider, and demonstrate this through our analysis. Our results are based pri-
marily on simulations of a set of attacking mixes that attempt to perform timing
attacks in a realistic network setting.
We begin by providing background on low-latency mix-based systems and
known attacks against them in Section 2. We present our system and attacker
model in Section 3. In Section 4, we discuss the possible timing attacks against
such systems and possible defenses. We present a simulation study in Section 5
in which we test the eﬀectiveness of attacks and defenses. Section 6 gives the
results of this study. We discuss the meaning of these results in light of diﬀerent
types of systems in Section 7 and we conclude in Section 8.
2
Background
A number of low-latency mix-based systems have been proposed, but systems
vary widely in their attention to timing attacks of the form we consider here.
Some systems, notably Onion Routing [19] and the second version of the Free-
dom [2] system, oﬀer no special provisions to prevent timing analysis. In such
systems, if the ﬁrst and last mixes on a path are compromised, eﬀective timing
analysis may allow the attacker to link the sender and receiver identities [19].
When both the ﬁrst and last mixes are chosen randomly with replacement from
the set of all mixes, the probability of attacker success is given as c2
n2 , where c is
the number of attacker-owned mixes and n is the total number of mixes.
Both Tarzan [10] and the original Freedom system [2] use constant-rate cover
traﬃc between pairs of mixes, sending traﬃc only between covered links. This
defense makes it very diﬃcult for an eavesdropper to perform timing analysis,
since the ﬂows on each link are independent. In Freedom, however, the attack
is still possible for an eavesdropper, since there is no cover traﬃc between the
initiator and the ﬁrst mix on the path, and between the last mix and the re-
sponder, the ﬁnal destination of the initator’s messages. This exposed traﬃc,
Timing Attacks in Low-Latency Mix Systems
3
M I
1
M I
2
M I
h
I
Responder
Initiator
Proxies
...
Fig. 1. A path P I with an initiator I (leftmost) communicating with a responder
(rightmost). M I
1 and M I
h, the ﬁrst and last mixes on the path originating at I, are
controlled by attackers.
along with the exposed traﬃc leaving the path, can be linked via timing anal-
ysis. Additionally, both systems are still vulnerable to timing analysis between
attacker-controlled mixes. The mixes can distinguish between cover traﬃc and
real traﬃc and will only consider the latter for timing analysis. This nulliﬁes the
eﬀect of this form of cover traﬃc when attacker mixes are considered.
Web-Mixes [3], ISDN-Mixes [14], and Pipenet [7] all use a constant-rate cover
traﬃc along the length of the path, i.e., by sending messages at a constant rate
through each path. In these systems, it is unclear whether timing analysis is
possible, since each initiator appears to send a constant rate of traﬃc at all
times. An Onion Routing proposal for partial-path cover traﬃc is an extension
of this idea [19]. In this case, the cover traﬃc only extends over a preﬁx of the
path. Mixes that appear later in the path do not receive the cover traﬃc and
only see the initiator traﬃc. Thus, an attacker mix in the covered preﬁx sees a
very diﬀerent traﬃc pattern than an attacker mix in the uncovered suﬃx. It is
thus conceivable that the two mixes should ﬁnd timing analysis more diﬃcult.
3
System Model
Recall that our goal is to understand the threat posed by timing analysis attacks.
In this section, we develop a framework for studying diﬀerent analysis methods
and defenses against them. We begin by presenting a system and attacker model.
In the next section, we use this model to analyze attacks and defenses.
Figure 1 illustrates an initiator’s path in a mix system. We focus on a particu-
lar initiator I, who uses a path, P I, of mixes in the system. The path P I consists
of a sequence of h mixes that starts with M I
1 and ends with M I
h. Although in
many protocols the paths of each initiator can vary, to avoid cumbersome nota-
tion and without loss of generality, we let h denote the last mix in that particular
path; our results do not assume a ﬁxed or known path length. M I
1 receives pack-
ets from the initiator I, and M I
h sends packets to the appropriate responders. We
assume that each link between two mixes typically carries packets from multiple
initiators, and that for each packet received, a mix can identify the path P I
to which the packet corresponds. This is common among low-latency mix sys-
tems, where when a path P I is ﬁrst established, every mix server on P I is given
a symmetric encryption key that it shares with I, and with which it decrypts
(encrypts) packets traversing P I in the forward (respectively, reverse) direction.
We assume that M I
h recognizes that it is the last mix on the path P I. We also
4
Levine, Reiter, Wang, and Wright
assume that mix M I
1 recognizes that it is the ﬁrst mix on the path P I and thus
that I is, in fact, the initiator.
Though not shown in Figure 1, in our model we assume there are many paths
through the system We are interested in the case where an attacker controls M I
1
and M J
h on two paths P I and P J that are not necessarily distinct. The attacker’s
goal is to determine whether I = J. If I = J and the attacker ascertains this,
then it learns the responders to which I is communicating.
For these scenarios, we focus on the adversary’s use of timing analysis to
determine whether I = J. Packets that I sends along P I run on a general-
purpose network between the initiator I and M I
1 , and between each pair M I
k
and M I
k+1. On this stretch of network there are dropped packets and variable
transmission delays. Since these drops and delays aﬀect packet behavior as seen
further along the path, they can form a basis on which the attacker at M I
1 and
M J
h , for example, can infer that I = J. Indeed, the attacker may employ active
attacks that modify the timings of packets emitted from M I
1 or intentionally drop
packets at M I
1 , to see if these perturbations are reﬂected at M J
h . For simplicity,
we generally assume that the attacker has no additional information to guide his
analysis, i.e., that there is no a priori information as to whether I = J.
4
Timing Attacks and Defenses
In this section, we describe the kinds of methods that an attacker in our model
can use to successfully perform timing analysis. Additionally, we discuss defenses
that can be used in the face of these kinds of attacks. In particular, we introduce
a new type of cover traﬃc to guard against timing attacks.
4.1
Timing Analysis Attacks
The essence of a timing attack is to ﬁnd a correlation between the timings of
packets seen by M I
1 and those seen by an end point M J
h . The stronger this
correlation, the more likely I = J and M J
h is actually M I
h. Attacker success
also depends on the relative correlations between the timings at which distinct
initiators I and J emit packets. That is, if M I
1 and M J
1 happen to see exactly
the same timings of packets, then it is not be possible to determine whether the
packet stream seen at M J
h is a match for M I
1 or M J
1 .
To study the timing correlations, the most intuitive random variable for the
attacker is the diﬀerence, δi, between the arrival time of a packet i and the arrival
time of its successor packet. If the two attacker mixes are on the same path P I,
there should be a correlation between the δi values seen at the two mixes; for
example, if δi is relatively large at M I
1 , then the δi at M I
h is more likely to be
larger than average. The correlation does not need to be strong, as long as it is
stronger than the correlations that would occur between M I
1 and M J
h , for two
diﬀerent initiators I and J.
Unfortunately, this random variable is highly sensitive to dropped packets. A
dropped packet that occurs between M I
1 and M I
h will cause later timings to be
Timing Attacks in Low-Latency Mix Systems
5
oﬀ by one. As a result, the correlation will be calculated between packets that
are not matched—an otherwise perfect correlation will appear to be a mismatch.
Therefore, we extract a new random variable from the data that is less sensi-
tive to packet drops. We use nonoverlapping and adjacent windows of time with
a ﬁxed duration W. Within instance k of this window, mix M maintains a count
XI
k of the number of packet arrivals on each path, P I, in which M participates.
Our analysis then works by cross correlating X I
k and XJ
k at the two diﬀerent
mixes.
To enhance the timing analysis, the attacker can employ a more active ap-
proach. Speciﬁcally, the attacker can drop packets at M I
1 intentionally. These
drops and the gaps they create will propagate to M I
h and should enhance the
correlation between the two mixes. Additionally, a careful placement of packet
drops can eﬀectively reduce the correlation between M I
1 and M J
1 for I ̸= J.
4.2
The Defenses
A known defense against timing attacks is to use a constant rate of cover traﬃc
along the length of the entire path [14, 7]. This defense is useful, since it dra-
matically lowers the correlations between M I
1 and M I
h. The lowered correlations
may seem unexpected, since both nodes will now see approximately the same
number of packets at all times. The diﬀerence is that the variations in packet
delays must now be correlated: a long delay between two packets at M I
1 must
match a longer-than-average delay between the same two packets at M I
h for the
correlation to increase. If the magnitude of variation between M I
1 and M I
h dom-
inates the magnitude of variation between I and M I
1 , this matching will often
fail, reducing the correlation between the two streams.
This approach faces serious problems, however, when there are dropped pack-
ets before or at M I
1 . Dropped packets provide holes in the traﬃc, i.e., gaps where
there should have been a packet, but none appeared. With only a few such holes,
the correlation should increase for M I
1 and M I
h, while the correlation between
M J
1 and M I
h should decrease. Packet drops can happen due to network events
on the link between the initiator and M I
1 , or the attacker can have M I
1 drop
these packets intentionally.
We now introduce a new defense against timing analysis, called defensive
dropping. With defensive dropping, the initiator constructs some of the dummy
packets such that an intermediate mix M I
m, 1 ≤ m ≤ h, is instructed to drop
the packet. To achieve this, we only need one bit inside the encryption layer for
M I
m. If M I
m is an honest participant, it will drop the dummy packet rather than
sending it to the next mix (there will only be a random string to pass on anyway,
but an attacker might try to resend an older packet). If these defensive drops
are randomly placed with a suﬃciently large frequency, the correlation between
the ﬁrst attacker and the last attacker will be reduced.
Defensive dropping is a generalization of “partial-path cover traﬃc,” in which
all of the cover traﬃc is dropped at a designated intermediate mix [19]. To
further generalize, we note that the dropping need not be entrusted to a single
6
Levine, Reiter, Wang, and Wright
mix. Rather, multiple intermediate mixes can collectively drop a set of packets.
We discuss and analyze defensive dropping in depth in Section 7.
5
Simulation Methodology
We determined the eﬀectiveness of timing analysis and various defenses using a
simulation of network scenarios. We isolated timing analysis from path selection,
a priori information, and any other aspects of a real attack on the anonymity and
unlinkability of initiators in a system. To achieve this, the simulations modeled
only the case when an attacker controls both the ﬁrst and the last mix in the
path — this is the key position in a timing attack.
We simulated two basic scenarios of mixes: one based on high-resource servers;
and a second based on low-resource peers. In the server scenario, each mix is a
dedicated server for the system, with a reliable low-latency link to the Inter-
net. This means that the links between each mix are more reliable with low to
moderate latencies, as described below. In the peer-based scenario, each mix is
also a general purpose computer that may have an unreliable or slow link to the