sages, we can focus on bounding the probabilities that an at-
tacker distinguishes independent encryptions of the (cid:96) pairs
of blocks, which is arguably easier, and derive the desired
bound from it. Furthermore, the security degradation is
moderate, being proportional to the number of blocks.
1043.6 From eavesdropper to CPA security
The ENC(cid:96) scheme is obviously insecure under chosen plain-
text attack. However, the PrivKlmcpa,b
AL,ENC security of the ENC
scheme can now be derived from Theorem 3.
Theorem 4. Let AL be an (s − sr, t − tr)-bounded
AL,ENC adversary against the ENC scheme based on a
PrivKlmcpa,b
(s, t, prf )-secure PRF. Then:
AL,ENC = 1] − Pr[PrivKlmcpa,1
(LEnc(cid:96)k(m0)) = 1] − Pr[AL(cid:48)
AL,ENC = 1]
(LEnc(cid:96)k(m1)) = 1]
(cid:12)(cid:12)(cid:12)Pr[PrivKlmcpa,0
(cid:12)(cid:12)(cid:12)Pr[AL(cid:48)
(cid:12)(cid:12)(cid:12) ≤
(cid:12)(cid:12)(cid:12) +
2prf + q/2n,
where AL(cid:48) is (s − 2sr, t − 2tr)-bounded, m0 and m1 are the
messages chosen by AL for the test query, sr := 3q where q
is the number of encryption queries made by AL, and tr is
the time needed to evaluate LEnc(cid:96) on q messages of at most
(cid:96) blocks and sample 2(cid:96) random values.
Proof. We proceed in two steps. First, we modify the
PrivKlmcpa,b
AL,ENC game by replacing the leak-free PRF with a ran-
dom function. Since the cost of the reduction of this change
to the PRF security is less than the (sr, tr) bounds, the
probability that AL detects the change is bounded by prf .
Next, we rely on the perfectly random distribution of the
ephemeral keys (k(cid:48)) used by Enc to emulate the leak-free
PRF and (consistently) answer all encryption queries with
random IV ’s and random ephemeral key k0’s. For the test
query, we generate a random IV , but use the LEnc(cid:96) oracle to
produce the ciphertext. This strategy will only fail when the
random IV selected here is equal to one of the IV’s gener-
ated during one of the at most q previous encryption queries,
bounding the probability of this event by q/2n. Again, the
cost of answering these queries is bounded by (sr, tr).
4. LEAK-FREE COMPONENT INSTANTI-
ATION AND IMPERFECTIONS
Our constructions make use of a component modeled as leak-
free used as part of the initialization of every MAC and en-
cryption computation. Of course, it is unlikely that such a
thing exists in reality. A simple work-around to this situa-
tion would be to require this component to be polynomially
simulatable instead, i.e., require that it would satisfy the
simulatability deﬁnition (Def. 3) for a number of observa-
tions q that would be high enough to not be reached within
the life-time of the circuit. This would add a degradation
factor corresponding to the one of the q-sim bound into all
our reductions (which we did not do for clarity).
This requirement is of course much more demanding than
the bound q = 2 that appears in the rest of our proofs,
and would then require a highly protected implementation
of this speciﬁc primitive, which might be considerably slower
and demanding in energy. Concretely, we expect it to be a
dozen to a few hundred times less eﬃcient than the weakly
protected one used in the leakage-resilient parts of our con-
structions (i.e. all the light grey blocks in Figures 2, 3 and 4).
This is the typical gap between a standard implementation
of the AES and a heavily protected implementation using
masking and other countermeasures. For illustration, Ta-
ble 4 reports some performance ﬁgures for unprotected and
masked AES in software and hardware that are in these
ranges.4 We believe that this gap amply motivates our min-
imal use of the strongly protected component:
it makes it
possible to amortize its cost as soon as messages contain a
few kilobits (the longer the better, of course), resulting in
an eﬃciency gain of a factor comparable to the gap between
the two implementations when comparing with a situation
where a strongly-protected implementation would be used
everywhere. Besides, and as previously mentioned, the ran-
dom inputs of the highly protected component are indepen-
dent of the messages that are manipulated, which makes it
possible to run these (pre)computations in advance, there-
fore avoiding any delay when the messages are available.
As for the practical security of the proposed schemes, we
anticipate that it will also follow the analyses in [3]. That
is, the leakage-resilient parts of our constructions are ex-
pected to lower-bound the time complexity of the best side-
channel attacks independently of the number of adversarial
measurements (e.g. up to >80 bits depending of the im-
plementations). As for the strongly protected (intialization)
component, and as previously mentioned, the side-channel
attacks’ complexity cannot be bounded independently of the
number of adversarial measurements. So the security level
highly depends on the choice of q in this case. For example,
Table 5 (for software implementations) and 18 (for hardware
implementations) in [3] estimate the cost to maintain secu-
rity levels of > 80 bits with up to q measurements. In gen-
eral, masking increases security exponentially in the number
of masks for a quadratic performance overheads. So we can
theoretically have q arbitrarily large in the leak-free com-
ponent, but for much larger overheads than in the leakage-
resilient parts of our constructions – which again motivates
our approach. Of course and as usual, further evaluations
(on various devices) by third-parties remain welcome to im-
prove the understanding of the concrete implementation se-
curity of our encryption and authentication schemes.
5. ACKNOWLEDGEMENTS
Olivier Pereira’s work has been partly supported by the
GreenTIC TrueDev Walloon region project 1317971.
Fran¸cois-Xavier Standaert is a research associate of the Bel-
gian Fund for Scientiﬁc Research (F.R.S.-FNRS). His work
has been funded in part by the European Commission
through the ERC project 280141 (acronym CRASH).
Srinivas Vivek has been supported in part by the European
Union’s H2020 programme under grant agreement number
ICT-644209.
6. REFERENCES
[1] CHES 2013, volume 8086 of Lecture Notes in
Computer Science. Springer, 2013.
[2] M. Abdalla, S. Bela¨ıd, and P. Fouque.
Leakage-resilient symmetric encryption via re-keying.
In CHES 2013 [1], pages 471–488.
[3] S. Bela¨ıd, V. Grosso, and F. Standaert. Masking and
leakage-resilient primitives: One, the other(s) or both?
Cryptography and Communications, 7(1):163–184,
2015.
4 The cost functions are code size × cycle count for software
implementations, and area / throughput for hardware ones.
The physical assumptions are additional properties that jus-
tify the higher implementation cost of certain solutions (e.g.
regarding the independent leakage assumption).
105Software (8-bit)
Implementations
Unprotected [8]
1-mask Boolean [34]
1-mask polynomial [13, 32]
2-mask Boolean [34]
FPGA (Virtex-5)
Implementations
Unprotected (128-bit) [33]
1-mask Boolean (128-bit) [33]
Threshold (8-bit) [26]
code size
(bytes)
1659
3153
20 682
3845
area
(slices)
478
1462
958
cycle
count
4557
129 · 103
1064 · 103
271 · 103
throughput
(enc/sec)
11
245·106
100·106
170·106
11
266
cost
function
physical
assumptions
7.560
406.7
22 000
1042
cost
-
glitch-sensitive
glitch-resistant
glitch-sensitive
physical
function
assumptions
21.46
160.8
1499
-
glitch-sensitive
glitch-resistant
Table 4: Performance of some illustrative AES implementations (borrowed from [3]).
[4] M. Bellare, J. Kilian, and P. Rogaway. The security of
[14] V. Grosso, F. Standaert, and S. Faust. Masking vs.
the cipher block chaining message authentication
code. J. Comput. Syst. Sci., 61(3):362–399, 2000.
[5] S. Chari, C. S. Jutla, J. R. Rao, and P. Rohatgi.
Towards sound approaches to counteract
power-analysis attacks. In CRYPTO ’99, volume 1666
of Lecture Notes in Computer Science, pages 398–412.
Springer, 1999.
multiparty computation: how large is the gap for
AES? J. Cryptographic Engineering, 4(1):47–57, 2014.
[15] C. Hazay, A. L´opez-Alt, H. Wee, and D. Wichs.
Leakage-resilient cryptography from minimal
assumptions. In EUROCRYPT 2013, volume 7881 of
Lecture Notes in Computer Science, pages 160–176.
Springer, 2013.
[6] Y. Dodis and K. Pietrzak. Leakage-resilient
[16] Y. Ishai, A. Sahai, and D. Wagner. Private circuits:
pseudorandom functions and side-channel attacks on
feistel networks. In CRYPTO 2010, volume 6223 of
Lecture Notes in Computer Science, pages 21–40.
Springer, 2010.
[7] S. Dziembowski and K. Pietrzak. Leakage-resilient
cryptography. In FOCS 2008, pages 293–302. IEEE
Computer Society, 2008.
[8] T. Eisenbarth, Z. Gong, T. G¨uneysu, S. Heyse,
S. Indesteege, S. Kerckhof, F. Koeune, T. Nad,
T. Plos, F. Regazzoni, F. Standaert, and L. van
Oldeneel tot Oldenzeel. Compact implementation and
performance evaluation of block ciphers in attiny
devices. In A. Mitrokotsa and S. Vaudenay, editors,
AFRICACRYPT 2012, volume 7374 of Lecture Notes
in Computer Science, pages 172–187. Springer, 2012.
[9] S. Faust, K. Pietrzak, and J. Schipper. Practical
leakage-resilient symmetric cryptography. In CHES
2012, volume 7428 of Lecture Notes in Computer
Science, pages 213–232. Springer, 2012.
[10] B. Fuller and A. Hamlin. Unifying leakage classes:
Simulatable leakage and pseudoentropy. In ICITS
2015, volume 9063 of Lecture Notes in Computer
Science, pages 69–86. Springer, 2015.
[11] J. L. Galea, D. P. Martin, E. Oswald, D. Page,
M. Stam, and M. Tunstall. Simulatable leakage:
Analysis, pitfalls, and new constructions. In
ASIACRYPT 2014, volume 8873 of Lecture Notes in
Computer Science, pages 223–242. Springer, 2014.
[12] D. Galindo and S. Vivek. A leakage-resilient
pairing-based variant of the Schnorr signature scheme.
In IMA International Conference, IMACC 2013,
volume 8308 of Lecture Notes in Computer Science,
pages 173–192. Springer, 2013.
[13] V. Grosso, F. Standaert, and S. Faust. Masking vs.
multiparty computation: How large is the gap for aes?
In CHES 2013 [1], pages 400–416.
Securing hardware against probing attacks. In
CRYPTO 2003, volume 2729 of Lecture Notes in
Computer Science, pages 463–481. Springer, 2003.
[17] M. Joye and M. Tunstall, editors. Fault Analysis in
Cryptography. Information Security and Cryptography.
Springer, 2012.
[18] E. Kiltz and K. Pietrzak. Leakage resilient ElGamal
encryption. In ASIACRYPT 2010, volume 6477 of
Lecture Notes in Computer Science, pages 595–612.
Springer, 2010.
[19] L. R. Knudsen and M. Robshaw. The Block Cipher
Companion. Information Security and Cryptography.
Springer, 2011.
[20] M. Liskov, R. L. Rivest, and D. Wagner. Tweakable
block ciphers. In CRYPTO 2002, volume 2442 of
Lecture Notes in Computer Science, pages 31–46.
Springer, 2002.
[21] S. Mangard, E. Oswald, and T. Popp. Power analysis
attacks - revealing the secrets of smart cards. Springer,
2007.
[22] S. Mangard, T. Popp, and B. M. Gammel.
Side-channel leakage of masked CMOS gates. In
CT-RSA 2005, volume 3376 of Lecture Notes in
Computer Science, pages 351–365. Springer, 2005.
[23] D. P. Martin, E. Oswald, and M. Stam. A leakage
resilient MAC. IACR Cryptology ePrint Archive,
2013:292, 2013.
[24] M. Medwed, F. Standaert, J. Großsch¨adl, and
F. Regazzoni. Fresh re-keying: Security against
side-channel and fault attacks for low-cost devices. In
AFRICACRYPT 2010, volume 6055 of Lecture Notes
in Computer Science, pages 279–296. Springer, 2010.
[25] S. Micali and L. Reyzin. Physically observable
cryptography (extended abstract). In TCC 2004,
volume 2951 of Lecture Notes in Computer Science,