### 3.6 From Eavesdropper to CPA Security

The ENC\(_{\ell}\) scheme is clearly insecure under a chosen-plaintext attack (CPA). However, the security of the ENC scheme in the CPA model, denoted as \(\text{PrivK}^{\text{cpa}}_{\mathcal{A},\text{ENC}}\), can be derived from Theorem 3.

**Theorem 4.** Let \(\mathcal{A}\) be an \((s - s_r, t - t_r)\)-bounded adversary against the ENC scheme based on a \(\text{PRF}\) that is \((s, t, \epsilon_{\text{prf}})\)-secure. Then:
\[
\left| \Pr[\text{PrivK}^{\text{cpa},0}_{\mathcal{A},\text{ENC}} = 1] - \Pr[\text{PrivK}^{\text{cpa},1}_{\mathcal{A},\text{ENC}} = 1] \right| \leq 2\epsilon_{\text{prf}} + \frac{q}{2^n},
\]
where \(\mathcal{A}'\) is \((s - 2s_r, t - 2t_r)\)-bounded, \(m_0\) and \(m_1\) are the messages chosen by \(\mathcal{A}\) for the test query, \(s_r := 3q\) (with \(q\) being the number of encryption queries made by \(\mathcal{A}\)), and \(t_r\) is the time needed to evaluate \(\text{LEnc}_{\ell}\) on \(q\) messages of at most \(\ell\) blocks and sample \(2\ell\) random values.

**Proof.** We proceed in two steps:

1. **Modification of the Game:**
   We modify the \(\text{PrivK}^{\text{cpa},b}_{\mathcal{A},\text{ENC}}\) game by replacing the leak-free PRF with a random function. The cost of this reduction to the PRF security is less than the \((s_r, t_r)\) bounds, so the probability that \(\mathcal{A}\) detects the change is bounded by \(\epsilon_{\text{prf}}\).

2. **Emulation with Random IVs:**
   We rely on the perfectly random distribution of the ephemeral keys \((k')\) used by \(\text{Enc}\) to emulate the leak-free PRF and consistently answer all encryption queries with random IVs and random ephemeral keys \(k_0\). For the test query, we generate a random IV but use the \(\text{LEnc}_{\ell}\) oracle to produce the ciphertext. This strategy will only fail if the random IV selected here is equal to one of the IVs generated during one of the at most \(q\) previous encryption queries, which has a probability of \(\frac{q}{2^n}\). The cost of answering these queries is bounded by \((s_r, t_r)\).

### 4. Leak-Free Component Instantiation and Imperfections

Our constructions assume the use of a component modeled as leak-free, which is part of the initialization of every MAC and encryption computation. In reality, such a perfectly leak-free component is unlikely to exist. A practical workaround would be to require this component to be polynomially simulatable, meaning it satisfies the simulatability definition (Def. 3) for a number of observations \(q\) that is high enough to not be reached within the lifetime of the circuit. This would add a degradation factor corresponding to the \(q\)-sim bound into all our reductions (which we did not do for clarity).

This requirement is much more demanding than the bound \(q = 2\) used in the rest of our proofs and would necessitate a highly protected implementation of this specific primitive. Such an implementation might be considerably slower and more energy-intensive. Specifically, we expect it to be a dozen to a few hundred times less efficient than the weakly protected implementations used in the leakage-resilient parts of our constructions (i.e., all the light grey blocks in Figures 2, 3, and 4). This gap is typical between a standard implementation of AES and a heavily protected implementation using masking and other countermeasures. Table 4 provides some performance figures for unprotected and masked AES in software and hardware.

We believe that this gap amply justifies our minimal use of the strongly protected component. It allows us to amortize its cost when messages contain a few kilobits, resulting in an efficiency gain comparable to the gap between the two implementations. Additionally, the random inputs of the highly protected component are independent of the messages, allowing these (pre)computations to be run in advance, thus avoiding any delay when the messages are available.

As for the practical security of the proposed schemes, we anticipate that it will follow the analyses in [3]. The leakage-resilient parts of our constructions are expected to lower-bound the time complexity of the best side-channel attacks independently of the number of adversarial measurements (e.g., up to >80 bits depending on the implementation). For the strongly protected (initialization) component, the side-channel attack complexity cannot be bounded independently of the number of adversarial measurements. Therefore, the security level highly depends on the choice of \(q\). Tables 5 (for software implementations) and 18 (for hardware implementations) in [3] estimate the cost to maintain security levels of >80 bits with up to \(q\) measurements. Generally, masking increases security exponentially in the number of masks for a quadratic performance overhead. Thus, we can theoretically have \(q\) arbitrarily large in the leak-free component, but with much larger overheads than in the leakage-resilient parts of our constructions, which again motivates our approach.

Further evaluations (on various devices) by third parties are welcome to improve the understanding of the concrete implementation security of our encryption and authentication schemes.

### 5. Acknowledgements

Olivier Pereira's work has been partly supported by the GreenTIC TrueDev Walloon region project 1317971. François-Xavier Standaert is a research associate of the Belgian Fund for Scientific Research (F.R.S.-FNRS) and his work has been funded in part by the European Commission through the ERC project 280141 (acronym CRASH). Srinivas Vivek has been supported in part by the European Union’s H2020 programme under grant agreement number ICT-644209.

### 6. References

[1] CHES 2013, volume 8086 of Lecture Notes in Computer Science. Springer, 2013.
[2] M. Abdalla, S. Belaïd, and P. Fouque. Leakage-resilient symmetric encryption via re-keying. In CHES 2013 [1], pages 471–488.
[3] S. Belaïd, V. Grosso, and F. Standaert. Masking and leakage-resilient primitives: One, the other(s) or both? Cryptography and Communications, 7(1):163–184, 2015.
[4] M. Bellare, J. Kilian, and P. Rogaway. The security of the cipher block chaining message authentication code. J. Comput. Syst. Sci., 61(3):362–399, 2000.
[5] S. Chari, C. S. Jutla, J. R. Rao, and P. Rohatgi. Towards sound approaches to counteract power-analysis attacks. In CRYPTO ’99, volume 1666 of Lecture Notes in Computer Science, pages 398–412. Springer, 1999.
[6] Y. Dodis and K. Pietrzak. Leakage-resilient pseudorandom functions and side-channel attacks on Feistel networks. In CRYPTO 2010, volume 6223 of Lecture Notes in Computer Science, pages 21–40. Springer, 2010.
[7] S. Dziembowski and K. Pietrzak. Leakage-resilient cryptography. In FOCS 2008, pages 293–302. IEEE Computer Society, 2008.
[8] T. Eisenbarth, Z. Gong, T. Güneysu, S. Heyse, S. Indesteege, S. Kerckhof, F. Koeune, T. Nad, T. Plos, F. Regazzoni, F. Standaert, and L. van Oldeneel tot Oldenzeel. Compact implementation and performance evaluation of block ciphers in ATtiny devices. In A. Mitrokotsa and S. Vaudenay, editors, AFRICACRYPT 2012, volume 7374 of Lecture Notes in Computer Science, pages 172–187. Springer, 2012.
[9] S. Faust, K. Pietrzak, and J. Schipper. Practical leakage-resilient symmetric cryptography. In CHES 2012, volume 7428 of Lecture Notes in Computer Science, pages 213–232. Springer, 2012.
[10] B. Fuller and A. Hamlin. Unifying leakage classes: Simulatable leakage and pseudoentropy. In ICITS 2015, volume 9063 of Lecture Notes in Computer Science, pages 69–86. Springer, 2015.
[11] J. L. Galea, D. P. Martin, E. Oswald, D. Page, M. Stam, and M. Tunstall. Simulatable leakage: Analysis, pitfalls, and new constructions. In ASIACRYPT 2014, volume 8873 of Lecture Notes in Computer Science, pages 223–242. Springer, 2014.
[12] D. Galindo and S. Vivek. A leakage-resilient pairing-based variant of the Schnorr signature scheme. In IMA International Conference, IMACC 2013, volume 8308 of Lecture Notes in Computer Science, pages 173–192. Springer, 2013.
[13] V. Grosso, F. Standaert, and S. Faust. Masking vs. multiparty computation: How large is the gap for AES? In CHES 2013 [1], pages 400–416.
[14] V. Grosso, F. Standaert, and S. Faust. Securing hardware against probing attacks. In CRYPTO 2003, volume 2729 of Lecture Notes in Computer Science, pages 463–481. Springer, 2003.
[15] M. Joye and M. Tunstall, editors. Fault Analysis in Cryptography. Information Security and Cryptography. Springer, 2012.
[16] E. Kiltz and K. Pietrzak. Leakage resilient ElGamal encryption. In ASIACRYPT 2010, volume 6477 of Lecture Notes in Computer Science, pages 595–612. Springer, 2010.
[17] L. R. Knudsen and M. Robshaw. The Block Cipher Companion. Information Security and Cryptography. Springer, 2011.
[18] M. Liskov, R. L. Rivest, and D. Wagner. Tweakable block ciphers. In CRYPTO 2002, volume 2442 of Lecture Notes in Computer Science, pages 31–46. Springer, 2002.
[19] S. Mangard, E. Oswald, and T. Popp. Power analysis attacks - revealing the secrets of smart cards. Springer, 2007.
[20] S. Mangard, T. Popp, and B. M. Gammel. Side-channel leakage of masked CMOS gates. In CT-RSA 2005, volume 3376 of Lecture Notes in Computer Science, pages 351–365. Springer, 2005.
[21] D. P. Martin, E. Oswald, and M. Stam. A leakage resilient MAC. IACR Cryptology ePrint Archive, 2013:292, 2013.
[22] M. Medwed, F. Standaert, J. Großschädl, and F. Regazzoni. Fresh re-keying: Security against side-channel and fault attacks for low-cost devices. In AFRICACRYPT 2010, volume 6055 of Lecture Notes in Computer Science, pages 279–296. Springer, 2010.
[23] S. Micali and L. Reyzin. Physically observable cryptography (extended abstract). In TCC 2004, volume 2951 of Lecture Notes in Computer Science,