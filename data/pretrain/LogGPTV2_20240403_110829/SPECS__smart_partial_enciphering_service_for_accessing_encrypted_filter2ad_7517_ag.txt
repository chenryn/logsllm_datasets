advantage in the security parameter λ.
To simplify the notation (and the proofs), hereinafter we omit the security parameter. As we mostly consider
deterministic functions f, we can simplify the distributions we want to show being indistinguishable (see [Gol04]):
when f is deterministic, to prove the security of Π that computes f, we only have to show that
Unless written explicitly, we will always prove security using this simpliﬁed deﬁnition.
SA(a, fA(a, b)) ≡c VA(a, b)
SB(b, fB(a, b)) ≡c VB(a, b)
25
B.2 Modular Sequential Composition
In order to ease the proofs of security, we use sequential modular composition, as deﬁned in [Can98]. The idea is
that the parties run a protocol Π and use calls to an ideal functionality f in Π (e.g. A and B compute f privately by
sending their inputs to a trusted third party and receiving the result). If we can show that Π respects privacy in the
honest-but-curious model and if we have a protocol ρ that privately computes f in the same model, then we can replace
the ideal calls for f by the execution of ρ in Π; the new protocol, denoted Πρ is then secure in the honest-but-curious
model.
We call hybrid model with ideal access to f1, . . . , fm or (f1, . . . , fm)-hybrid model the semi-honest model
augmented with an incorruptible trusted party T for evaluating functionalities f1, . . . , fm. The parties run a protocol Π
that contain calls to T for the evaluation of one of f1, . . . , fm. For each call, each party sends its input and wait until
the trusted party sends the output back. We emphasize on the fact that the parties must not communicate until receiving
T ’s output (we consider only sequential composition). Ideal calls to the trusted party can be done several times, even
for the same function, but each call is independent: T does not maintain state between two calls.
Let Π be a two-party protocol in the (f1, . . . , fm)-hybrid model. Let ρ1, . . . , ρm be real protocols (i.e. protocols in
the semi-honest model) computing f1, . . . , fm and deﬁne Πρ1,...,ρm as follows. All ideals calls of Π to the trusted party
for fi is replaced by a real execution of ρi: if party Pj has to compute fi with input xj, Pj halts, starts an execution of
ρi with the other parties, gets the result βj when ρi concludes, and continues as if βj was received from T .
Theorem B.2. [Can98] (Theorem 5) restated as in [LP08] (Theorem 3) – Let f1, . . . , fm be two-party probabilistic
polynomial time functionalities and ρ1, . . . , ρm protocols that compute respectively f1, . . . , fm in the presence of
semi-honest adversaries.
Let g be a two-party probabilistic polynomial time functionality and Π a protocol that securely computes g in the
(f1, . . . , fm)-hybrid model in the presence of semi-honest adversaries.
Then Πρ1,...,ρm securely computes g in the presence of semi-honest adversaries.
N be the set of quadratic residues modulo N and QNR
N if x is not a square modulo N and its Jacobi symbol is 1).
N ) : |N| = λ} and {(N, QNR
B.3 Cryptographic assumptions
Assumption 1. (Quadratic Residuosity Assumption – from [GM82]) Let N = p × q be the product of two distinct odd
primes p and q. Let QR
N be the set of quadratic non residues
(i.e. x ∈ QNR
{(N, QR
probabilistic polynomial time algorithms.
Assumption 2. (Decisional Composite Residuosity Assumption – from [Pai99]) Let N = p × q,|N| = λ be the
product of two distinct odd primes p and q. A number z is said to be a N-th residue modulo N 2 if there exists a number
y ∈ ZN 2
N-th residues are computationally indistinguishable from non N-th residues with respect to probabilistic polynomial
time algorithms.
N ) : |N| = λ} are computationally indistinguishable with respect to
z = yN mod N 2
For further explanations about the last assumption, used for the FHE scheme, we refer the reader to [BGV12].
Assumption 3. (RLWE) For security parameter λ, let f (x) = xd + 1 where d is a power of 2. Let q ≥ 2 be an integer.
Let R = Z[x]/(f (x)) and let Rq = R/qR. Let χ be a distribution over R. The RLWEd,q,χ problem is to distinguish
between two distributions: In the ﬁrst distribution, one samples (ai, bi) uniformly from R2
q. In the second distribution,
q by sampling ai ← Rq uniformly, ei ← χ, and setting
one ﬁrst draws s ← Rq uniformly and then samples (ai, bi) ∈ R2
bi = ai.s + ei.
The RLWEd,q,χ assumption is that the RLWEd,q,χ problem is infeasible.
26
C Proofs
C.1 Comparison protocols
Proof of Proposition A.1 . Correctness As a and b are l bits integers, x = 2l + b− a is a l + 1 bits integer and its most
signiﬁcant bit (the l + 1-th bit) is 1 iff a ≤ b. What protocol 7 actually does is computing this bit. The computations are
done over encrypted data, using Paillier’s encryption scheme. In the rest of the proof, we will do as if the data were not
encrypted under Paillier. The correctness will hold as long as we do not experience carry-overs modulo N. In particular,
this implies that l + 1 + λ  aπ(i)), max{aπ(j)}1≤j≤i−1 > aπ(i) and max{aπ(j)}1≤j≤i = max{aπ(j)}1≤j≤i−1 = m.
Then i0 is not changed, vi is set to m(cid:48)
i and bi = 0. As a consequence,
(cid:48)
vi + (bi − 1).ri − bi.si = m
i − ri = m
m is unchanged. As both m and i0 stayed the same and max{aπ(j)}1≤j≤i = max{aπ(j)}1≤j≤i−1, the invariant
holds at the end of the i-th iteration in this case.
T to compute the function f ((cid:74)x(cid:75),(cid:74)y(cid:75), l, SKQR, PKQR, SKP , PKP ) in the f-hybrid model where
Security We prove security in the hybrid model where line 5 of the protocol is ideally executed: we ask a trusted party
f ((cid:74)x(cid:75),(cid:74)y(cid:75), l, SKQR, PKQR, SKP , PKP )
=
(fA(x, y, l, SKQR, PKQR, SKP , PKP );
fB((cid:74)x(cid:75),(cid:74)y(cid:75), l, SKQR, PKQR, SKP , PKP ))
and f computes the function of Protocol 8, i.e. fA returns nothing and fB returns the bit x ≤ y.
We will conclude using Theorem B.2.
A’s view is
VA =({(cid:74)ai(cid:75)}k
π,{ri}k
{(cid:74)vi(cid:75)}k
i=1, l, PKQR, PKP ;
i=2,{si}k
i=2,{(cid:74)bi(cid:75)}k
i=2, coins;