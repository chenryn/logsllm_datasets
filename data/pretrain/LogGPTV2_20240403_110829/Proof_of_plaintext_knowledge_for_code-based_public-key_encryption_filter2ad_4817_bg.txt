orth(A), and b⊥ ←R orth(B) (see Deﬁnition 9). Therefore, one can enumerate all possible
v ∈ Z and check if v · [(b⊥)⊤a⊥]T = D. This can be done in time |Z| = nmKXY + 1, which
is of polynomial size in the security parameter.
144
Chapter 7. Functional Encryption for Quadratic Functions
):
quad
GSetup(1λ, F K,X,Y
PG := (G1, G2, GT , p, P1, P2, e) ←R PGGen(1λ)
Return gpk := PG
Setup(1λ, gpk, F ):
A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R orth(B). For i ∈ [n], j ∈ [m], ri, sj ←R Zk
p.
ek := ([A]1, [b⊥]1, [B]2, [a⊥]2), msk :=(cid:16)A, a⊥, B, b⊥,{ri, sj}i∈[n],j∈[m](cid:17)
Enc(gpk, ek, (x, y) ∈ X ):
For i ∈ [n]: ci := Ari + b⊥xi,
2
1
For j ∈ [m]: bcj := Bsj + a⊥yj,
ct(x,y) := {[ci]1, [bcj]2}i∈[n],j∈[m]
Return ct(x,y) ∈ Gn(k+1)
× Gm(k+1)
KeyGen(gpk, msk, α ∈ K):
u ←R Zp, K := [Pi∈[n],j∈[m] αi,jr⊤
Return dkα := (K, bK) ∈ G1 × G2
D :=Pi∈[n],j∈[m] αi,j · e([ci]⊤
Return v ∈ Zp such that [v · (b⊥)⊤a⊥]T = D.
i A⊤Bsj]1 − [u]1, bK := [u]2
1 , [bcj]2) − e(K, [1]2) − e([1]1, bK).
Dec(gpk, ct(x,y), dkα):
Figure 7.2: FEone, a private-key FE for inner product, selectively secure under the Dk(p)-MDDH
assumption in asymmetric pairing groups.
Theorem 19: one-SEL-IND security
The FE from Figure 7.2 is one-SEL-IND secure under the Dk(p)-MDDH assumption in
G1 and G2.
Remark 14: one-SEL-SIM security
WE note that the FE from Figure 7.2 is in fact one-SEL-SIM secure, which implies one-
SEL-IND security. This is clear from the fact that in the last hybrid game in the proof of
Theorem 19, the simulator is only required to know the value αi,jxiyj. Since we only need
one-SEL-IND for our public-key FE, which is the main focus of this chapter, we omit the
one-SEL-SIM security proof of the private-key FE.
Proof of Theorem 19. We use a sequence of hybrid games deﬁned in Figure 7.3. Let A be
a PPT adversary. For any game G, we denote by AdvG(A) the probability that the game G
returns 1 when interacting with A.
Note that we have: Advone-SEL-IND
(A) = 2 × |AdvG0(A) − 1/2|. This follows from the fact
that for all i ∈ [n], j ∈ [m], we have:
ibcj = r⊤
i A⊤Bsj + x(β)
(b⊥)⊤a⊥.
i y(β)
FEone
c⊤
j
7.1 Private-key FE with one-SEL-IND security
145
G0, G1, G2 :
(x(0), y(0)), (x(1), y(1))(cid:1) ← A(1λ)
PG := (G1, G2, GT , p, P1, P2, e) ←R GGen(1λ), gpk := PG, A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R
orth(B), pk := [(a⊥)⊤b⊥]T , β ←R {0, 1}. For i ∈ [n], j ∈ [m]: ri ←R Zk
ci := Ari + x(β)
i b⊥, ci ←R Gk+1
p, sj ←R Zk
p
1
bcj := Bsj + y(β)
ct := {[ci]1, [bcj]1}i∈[n],j∈[m]
β′ ← AOKeygen(·)(gpk, pk, ct)
Return 1 if β′ = β, 0 otherwise.
j a⊥, bcj ←R Gk+1
2
OKeygen(α ∈ K):
u ←R Zp, K := [Pi,j αi,jc⊤
Return dkα := (K, bK)
ibcj]1 − [Pi,j αi,jx(β)
i y(β)
j
· (b⊥)⊤a⊥]1 − [u]1, bK := [u]2
Figure 7.3: Games for the proof of Theorem 19. In each procedure, the components inside a solid
(dotted) frame are only present in the games marked by a solid (dotted) frame.
Thus, in game G0, for all α ∈ Zn×m
αi,j[c⊤
p
, OKeygen(α) computes:
K :=Xi,j
=Xi,j
ibcj]1 − [Xi,j
αi,j[r⊤
i A⊤Bsj]1 − [u]1.
αi,jx(β)
i y(β)
j
· (b⊥)⊤a⊥]1 − [u]1
is the same as game G0 except that the vectors [ci] from the challenge cipher-
In Lemma 43 we show that G0 is computationally
Game G1:
text are uniformly random over Gk+1
indistinguishable from G1 under the Dk(p)-MDDH assumption in G1.
.
1
is the same as game G1 except that the vectors bcj from the challenge ciphertext
Game G2:
are uniformly random over Gk+1
. In Lemma 44 we show that G1 is computationally indis-
tinguishable from G2 under the Dk(p)-MDDH assumption. Finally, we show in Lemma 45
that the adversary’s view in this game is independent of the bit β, and thus the adversary’s
advantage in this game is zero, which concludes the proof.
2
Lemma 43: From game G0 to G1
There exists a PPT adversary B0 such that
|AdvG0(A) − AdvG1(A)| ≤ 2 · AdvDk(p)-mddh
G1,B0
(λ) + 2−Ω(λ).
Proof of Lemma 43. Here, we use the Dk(p)-MDDH assumption on [A]1 to change the dis-
tribution of the challenge ciphertext, after arguing that one can simulate the game without
knowing a⊥ or [A]2.
that |AdvG0(A)− AdvG1(A)| ≤ 2· Advn-Dk(p)-mddh
the existence of a PPT adversary B0 such that |AdvG0(A)− AdvG1(A)| ≤ 2· AdvDk(p)-mddh
0 against the n-fold Dk-MDDH assumption in G1 such
(λ) + 2−Ω(λ). Then, by Lemma 1, this implies
(λ) +
Namely, we build a PPT adversary B′
G1,B0
G1,B0
2−Ω(λ).
146
Chapter 7. Functional Encryption for Quadratic Functions
0(cid:0)PG, [A]1, [h1|···|hn]1(cid:1):
B′
(cid:0)(x(0), y(0)), (x(1), y(1))(cid:1) ← A(1λ)
gpk := PG, B ←R Dk, b⊥ ←R orth(B), z ←R Zk+1
p,bcj := Bsj + y(β)
sj ←R Zk
β′ ← A(gpk, pk, ct)
Return 1 if β′ = β, 0 otherwise.
p
j z. For all i ∈ [n]: ci := hi + x(β)
, pk := [(b⊥)⊤z]T , β ←R {0, 1}. For all j ∈ [m]:
i b⊥, ct := {[ci]1, [bcj]2}i∈[n],j∈[m]
p
):
OKeygen(α ∈ Zn×m
u ←R Zp, K :=Pi,j αi,j[c⊤
Return dkα := (K, bK)
Figure 7.4: Adversary B′
ibcj]1 − [u]1 −Pi,j αi,jx(β)
i y(β)
j
· [(b⊥)⊤z]1, bK := [u]2
0 against the n-fold Dk(p)-MDDH assumption, for the proof of Lemma 43.
Adversary B′
0 simulates the game to A as described in Figure 7.4. We show that when B′
0 is
given a real MDDH challenge, that is, [h1|···|hn]1 := [AR] for R ←R Zk×n
, then it simulates
the game G0, whereas it simulates the game G1 when given a fully random challenge, i.e. when
[h1|···|hn]1 ←R G(k+1)×n
, which implies the lemma.
p
1
We use the following facts.
1. For all s ∈ Zk
p, B ∈ Z(k+1)×k
p
2. For all y(β)
j ∈ Zp, s ∈ Zk
p:
, b⊥ ∈ orth(B), and a⊥ ∈ Zk+1
(b⊥)⊤a⊥ = (b⊥)⊤(Bs + a⊥).
p
, we have:
(cid:16){sj}j∈[m](cid:17)sj←RZk
p ≡(cid:16){sj + y(β)
(cid:16)Bs + a⊥(cid:17)A,B←RDk,a⊥←Rorth(A),s←RZk
, with probability 1 − 1
j s}j∈[m](cid:17)sj←RZk
p ≈ 1
Ω(p) over the choices of A, B, and
(z)z←RZk+1
Ω(p)
.
,
p
p
3.
since (B|a⊥) is a basis of Zk+1
a⊥ (see Deﬁnition 9).
p
Recall that we use ≡ to denote equality of distribution, and ≈ε to indicate that two distributions
are statistically ε-close.
Therefore, we have for all y(β) ∈ Zm
p :
j a⊥}j∈[m], (b⊥)⊤a⊥(cid:17)
(cid:16)A, b⊥,{Bsj + y(β)
where A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R orth(B), sj ←R Zk
j a⊥}j∈[m], (b⊥)⊤( Bs + a⊥ )(cid:17)
≡(cid:16)A, b⊥,{Bsj + y(β)
where A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R orth(B), s ←R Zk
( Bs + a⊥ )}j∈[m], (b⊥)⊤(Bs + a⊥)(cid:17)
≡(cid:16)A, b⊥,{Bsj + y(β)
where A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R orth(B), s, sj ←R Zk
Ω(p) (cid:16)A, b⊥,{Bsj + y(β)
≈ 1
where A, B ←R Dk, a⊥ ←R orth(A), b⊥ ←R orth(B), z ←R Zk+1
z }j∈[m], (b⊥)⊤ z(cid:17)
p
p
j
j
p , sj ←R Zk
p (by 1.)
p (by 2.)
, sj ←R Zk
p (by 3.)
7.1 Private-key FE with one-SEL-IND security
147
B1(cid:0)PG, [B]2, [h1|···|hm]2(cid:1):
(cid:0)(x(0), y(0)), (x(1), y(1))(cid:1) ← A(1λ)
gpk := PG, A ←R Dk, β ←R {0, 1}, a⊥ ←R orth(A), v ←R Zp, pk := [v]T . For all i ∈ [n]:
ci ←R Zk+1
β′ ← AOKeygen(·)(gpk, pk, ct)
Return 1 if β′ = β, 0 otherwise.
j a⊥, ct := {[ci]1, [bcj]2}i∈[n],j∈[m]
. For all j ∈ [m]: bcj := hj + y(β)
p
p
):
OKeygen(α ∈ Zn×m
u ←R Zp, bK :=Pi,j αi,j[c⊤
Return dkα := (K, bK)
Figure 7.5: Adversary B1 against the Dk(p)-MDDH assumption, for the proof of Lemma 44.
ibcj]2 − [u]2 −Pi,j αi,jx(β)
· [v]1, K := [u]1
i y(β)
j
Lemma 44: From game G1 to game G2
There exists a PPT adversary B1 such that
|AdvG1(A) − AdvG2(A)| ≤ 2 · AdvDk(p)-mddh
G2,B2
(λ) +
2
p − 1
.
Namely, we build a PPT adversary B′
Proof of Lemma 44. Here, we use the Dk(p)-MDDH assumption on [B]2 to change the dis-
tribution of the challenge ciphertext, after arguing that one can simulate the game without
knowing b⊥ or [B]1.
1 against the m-fold Dk(p)-MDDH assumption in G2
such that |AdvG1(A)− AdvG2(A)| ≤ 2· Advm-Dk(p)-mddh
(λ). Then, by Lemma 1, this implies the
existence of a PPT adversary B1 such that |AdvG1(A)− AdvG2(A)| ≤ 2· AdvDk(p)-mddh
p−1.
1 is
given a real MDDH challenge, that is, [h1|···|hm]2 := [BS]2 for S ←R Zk×m
, then it simulates
the game G1, whereas it simulates the game G2 when given a uniformly random challenge, i.e.
when [h1|···|hm]2 ←R G(k+1)×m
(λ)+ 2
1 simulates the game to A as described in Figure 7.5. We show that when B′
, which implies the lemma.
Adversary B′
G2,B′
2
G2,B2
p
2
We use the fact that for all A, B ∈ Z(k+1)×k
p
,
(B, a⊥, (b⊥)⊤a⊥)a⊥←Rorth(A),b⊥←Rorth(B) ≡ (B, a⊥, v)v←RZp).
Note that the leftmost distribution corresponds to gpk, pk, {ci}i∈[n], and OKeygen distributed
as in games G1 or G2 (these are identically distributed in these two games), while the last
distribution corresponds to gpk, pk, {ci}i∈[n], and OKeygen simulated by B′
1.
sj ←R Zk
over Zk+1
game G2.
1 is given a real MDDH challenge, i.e., when for all j ∈ [m], hj := Bsj, for
j a⊥, exactly as in game G1, whereasbcj is uniformly random
1 is given a random challenge, i.e., when for all j ∈ [m], hj ←R Zk+1
p, we havebcj := Bsj + y(β)
p when B′
Finally, when B′
, as in
p
Lemma 45: Game G2
AdvG2(A) = 0.
Pi,j αi,jx(β)