这里就要说到一个概念“VulnDriver”，也就是 **带有漏洞的驱动程序** ，比较常见的VulnDriver还有GDRV.sys
（CVE-2018-19320），Novell (CVE-2013-3956), CPU-Z (CVE-2017-15302), ASUS
(CVE-2018-18537)。
挖矿木马常用的矿机所使用的WinRing0.sys也是一个非常常见的VulnDriver，这个驱动是一个名为NZXT
CAM的计算机硬件性能监控产品内的一个便于程序访问Windows内核的组件。
这个看起来不大的驱动程序上存在着 **多达11个CVE漏洞**
，其中CVE-2020-13516可以越权直接从USB和PCI设备查询信息；CVE-2020-13515可以越权将数据写入I/O总线，可能会更改PCI配置信息或特定于供应商的数据寄存器，帮助其他程序完成提权；CVE-2020-13518可以越权直接访问rdmsr，任意读取MSR内数据；CVE-2020-13519可以越权直接访问writemsr，向MSR内写入数据。
因此，利用这个驱动程序做很多事情，其利用成本低，很受以营利为目的网络攻击者欢迎。
在前段时间Log4j 曝出存在RCE漏洞的时候，该漏洞被大量的黑产攻击者利用，这个驱动程序也连带着出现在了大众的视野之中。  
这些VulnDriver **带着官方的签名** ，而且本身没有什么恶意行为，因此很多安全厂商都不会告警。
在不久前被曝光的方程式组织的后渗透框架DanderSpritz中，也存在VulnDriver的利用，在其名为DoubleFeature的插件中，存在名为hidsvc.sys的驱动程序，该驱动程序存在
CVE-2017-0005 漏洞，能够让攻击者 **通过用户层代码指定名称和参数来调用内核功能。**
说到这，我们来简单了解一些方程式这个组织吧。
**方程式组织被称为世界上最尖端的网络攻击组织之一** ，和恶名昭彰的震网（Stuxnet）和火焰（Flame）有着很深的联系。
震网是一个全球性质的工业病毒，是世界上首个网络“超级破坏性武器”，曾被用来攻击伊朗核设施，手法极其阴险。
同时，我国的工业设施也受到了一定的影响。
因此他们的存在，是国家机密和关键基础设施巨大的威胁。
在这次被曝光的项目中存在一个远程访问工具，其下有一个名为MSNDSRV.sys的驱动程序。
该驱动程序曾在2015年的EquationDrug
组件中被提到，可以隐藏用户侧组件，另外可以在注册表遍历所有网卡，调用NdisRegisterProtocol函数注册一个NDIS流量监听器，可以接收到受害主机所有流量，实现通讯流量监控。
在两个庞大的项目中，这个驱动程序显得微不足道，和之前提到的Rootkit程序相比，方程式组织的Rootkit技术没有核心组件的地位，只是整个项目下某一个插件下的一个组件，是一个
**“随取随用”** 的地位。
但就是这样一个看起来不值一提的组件，在两个程序中都出现了。
足以说明，Rookit是方程式组织在攻击组件开发的过程中非常常用的技术，而对于这类常用的组件，攻击者也不会花太多心思进行二次开发。
然而就算是这样，安全厂商仍旧鲜有捕获到方程式组织的活动痕迹，该组织的高隐匿技术之强，可想而知。
## 检测-这是一场与攻击者的军备竞赛
业界对反Rootkit软件使用的技术进行了分类。 **签名的检测** （Signature-based detection）、 **文件完整性监测**
（File integrity monitoring）、 **Rootkit Hook检测** （Rootkit hooking detection）、
**交叉视图分析** （Cross-view analysis）以及 **基于网络的检测** （Network-based detection）。
基于签名的检测就是 **匹配rootkit软件字节特征**
，缺点是无法匹配新的rootkit，而且特征容易更改，对于已安装rootkit的系统再实施检测不理想。
文件完整性监测，该方法 **计算关键的、不变的操作系统文件的哈希，并将其与存储在数据库中的已知值进行比较。**
这项技术对于在磁盘上修改系统二进制文件的rootkit很有效，但rootkit的作者很快使用hooking或DKOM技术，以此篡改执行结果，使得检测效果不理想。
Rootkit Hook检测， **SSDT、IAT和IDT都有一组用于每个服务或中断的函数指针，它们都在内存中的特定范围内。**
当rootkit修改Hook指向恶意服务或中断例程时，函数指针所指向的位置几乎总是位于特定内存地址范围之外。在这期间还发展了Inline
Hook形式，来规避这些关键表的检测，后来发展了FSD Hook、FSD Inline Hook。
交叉视图分析， **交叉视图分析涉及从“用户”或“API”视图查看系统，并将其与低级视图进行比较**
，交叉视图方法可以检测基于DKOM和系统例程补丁的Rootkit，不能检测基于HOOK的Rootkit。
基于网络的检测，理论上，rootkit可能会试图隐藏其网络通信，以逃避操作系统或用户的检测，但是 **从系统外部还是能看到流量的**
，这方面成了C2隐藏通信和网络检测的较量。
Windows也引进了一些防御技术，PatchGuard和DSE。PatchGuard用于内核完整性检测，守护容易被HOOK的地方。DSE用于检测驱动签名，限制未签名驱动加载。上文提到的Turla则绕过了这种限制，通过引入VulnDriver间接绕过。通过修改内存中的特殊变量就能关闭DSE功能，此时，加载第二个未签名的恶意驱动，直接
**HOOK PatchGuard告警的关键函数** ，在下一个内核完整性校验过程中不让异常表现出来，从而完成了PatchGuard功能的绕过。
## 总结
说了这么多，其实只想说明一个问题，那就是Rootkit技术一直都没有过时，它一直都是攻击者青睐的攻击技术。
**虽然他的热度被各式各样的新型网络威胁所掩盖，但在那些网络攻击的事件中，我们又常常能见到它的影子。**
在我们忙于研究处理其他网络威胁技术的时候，它也在以某种的方式存在，并不断成长着。在安全厂商不断提升己方检测能力的同时，攻击者也在不断提升对抗能力，传统的检测方式不断的承受着一轮又一轮的攻击。
对于高对抗的Rookit技术的检测，对于传统的检测技术是一个很大的挑战，安全厂商还有很多的工作要去完成。
## 参考链接
1 . 
2.
3.
4.
5.
6.《Eset-Turla-Outlook-Backdoor》
7.
8.
* * *