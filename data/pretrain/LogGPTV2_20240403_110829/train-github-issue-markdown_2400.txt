##### Issue Type:
Bug Report
##### Ansible Version:
ansible 1.5.4
##### Environment:
RHEL 5/6
##### Summary:
When copying files to NFS, they fail with the following error:
failed: [myhost] => {"cur_context": ["system_u", "object_r", "nfs_t", "s0"],
"failed": true, "gid": 0, "group": "root", "input_was": ["system_u",
"object_r", "usr_t", "s0"], "md5sum": "mymd5sum", "mode": "0644",
"new_context": ["system_u", "object_r", "usr_t", "s0"], "owner": "root",
"path": "/my/nfs/mount", "secontext": "system_u:object_r:nfs_t:s0", "size":
1234, "state": "file", "uid": 0}  
msg: invalid selinux context
##### Steps To Reproduce:
Use copy module to copy a file to an nfs mount.
##### Expected Results:
The file is copied to the nfs mount.
##### Actual Results:
Error message from above:
failed: [myhost] => {"cur_context": ["system_u", "object_r", "nfs_t", "s0"],
"failed": true, "gid": 0, "group": "root", "input_was": ["system_u",
"object_r", "usr_t", "s0"], "md5sum": "mymd5sum", "mode": "0644",
"new_context": ["system_u", "object_r", "usr_t", "s0"], "owner": "root",
"path": "/my/nfs/mount", "secontext": "system_u:object_r:nfs_t:s0", "size":
1234, "state": "file", "uid": 0}  
msg: invalid selinux context
I just ran into issue #5632 \- "invalid selinux context" with template over
ZFS and NFS. The "fix" there was to add better debugging output, but that
wasn't really a fix because it's still failing. the core of the issue seems to
be that one cannot change context on NFS mounts (for the most part). Ansible
should check for contexts of “nfs_t”, and not bother trying to change context
if that's the case. I worked around this by forcing the context of the entire
mount to the context ansible was trying to set, but that's not a great
workaround because if ansible decides to set different contexts based on the
files I'm copying over, one or the other will fail. Note I have selinux set to
permissive, so the problem is not with selinux (per se).
There are a few potential fixes:
  * have some way of allowing users to control the selinux context in the playbook/copy module. this would then let me override ansible and force the "nfs_t" context when copying to nfs. Not great as a user experience because I have to track when/if I'm copying to nfs, but better than nothing. Worth noting this use case in the docs if this is indeed the appropriate fix as it wouldn't be obvious from the error message.
  * detecting if a file is destined for a nfs mount, and if so, skip the attempt to change selinux context. this seems to be the approach that puppet took, from my googling: http://projects.puppetlabs.com/issues/1681