### Broadcast Protocol with n Parties for C over G

#### Circuit Transformation (T1)
- **Circuit Construction:**
  - The new circuit \(\tilde{C}\) is constructed such that:
    - The depth of \(\tilde{C}\) in the evaluation model, \(depth_E(\tilde{C})\), is \(n \cdot depth_S(C)\).
    - The size of \(\tilde{C}\) is \(O(n \cdot size(C))\).
    - The size of \(\tilde{C}\) for each party \(i\) (where \(i = 1, \ldots, n\)) is \(O(size(C))\).

- **Protocol Complexity:**
  - The transformation \(T2\) increases the protocol's round complexity by 1.
  - All time complexities are preserved up to \(O_\lambda(1)\) factors.

### Lemma IV.3 (Evaluation Protocol)
**Assumptions:**
- Existence of commitment schemes and NIZKs.
- \(r\) is a prime, and \(G\) is a group of order \(r\).

**Statement:**
There exists a secure evaluation broadcast protocol \(\Pi_E = (\Pi, V, S)\) for \(C_E\) over \(G\) such that, for every positive integer \(n\) and circuit \(C\) in \(C_E\):
- The number of rounds, \(ROUND(\Pi_{n,C})\), is \(depth_E(C) + 2\).
- The time complexity for each party \(i\), \(TIME(\Pi_{n,C}, i)\), is \(O_\lambda(size(C, i))\) for \(i = 1, \ldots, n\).
- The verifier \(V_{n,C}\) and simulator \(S_{n,C}\) run in time \(O_\lambda(size(C))\).

### A. Sketch of the Sampling-to-Evaluation Reduction

We provide a sketch of the proof for Lemma IV.2, focusing on the two transformations \(T1\) and \(T2\).

- **Circuit Transformation \(T1\):**
  - Given the number of parties \(n\) and a circuit \(C\) in \(C_S\), \(T1\) outputs a circuit \(\tilde{C} \in C_E\) that computes \(C\)'s output along with auxiliary values by combining \(n\) multiplicative shares of \(C\)'s input.

- **Protocol Transformation \(T2\):**
  - Given a secure evaluation protocol \(\Pi_E\) for \(\tilce{C}\), \(T2\) outputs a secure sampling protocol \(\Pi_S\) for \(C\) by:
    1. Generating random shares for all inputs to ensure uniform sampling.
    2. Extending the protocol by one last round to obtain a correctly formatted output.
    3. Extending the verifier to account for the additional round in the transcript.
    4. Extending the simulator to account for the different ideal functionality, whose output excludes the auxiliary values (which must be simulated).

**Construction of \(\tilde{C}\):**
- \(\tilde{C}\) must compute \(C\)'s output from \(n\) multiplicative shares of \(C\)'s input.
- If \(C\) has only multiplication gates, \(\tilde{C}\) can be constructed by creating \(n\) copies of \(C\) and multiplying corresponding outputs.
- For circuits with addition gates, \(\tilde{C}\) combines shares "on the fly" as the circuit is computed, ensuring that the E-depth of \(\tilde{C}\) is bounded by \(n \cdot depth_S(C)\).

**Simulator in \(\Pi_S\):**
- The construction of \(\tilde{C}\) must ensure security, meaning the ideal functionality implemented by \(\Pi_E\) for \(\tilde{C}\) should give rise to a sampling protocol \(\Pi_S\) for \(C\).
- The simulator must be able to reproduce the view of the adversary when only having access to \(C\)'s output, ensuring that partial computations do not leak additional information.

### B. Sketch of the Evaluation Protocol

We provide a sketch of the proof for Lemma IV.3, describing the evaluation protocol \(\Pi_E = (\Pi, V, S)\) for \(C \in C_E\).

- **First Round (t = 1):**
  - Each party \(i\) commits to their private inputs and proves knowledge of the committed values using zero-knowledge proofs (relation \(R_A\)).

- **Subsequent Rounds (t = 2, \ldots, depth_E(C) + 1):**
  - In each round, parties evaluate and broadcast the results of gates whose outputs have an E-depth equal to the round number minus 1, along with zero-knowledge proofs of correct evaluation (relation \(R_B\)).

- **Final Round (t = depth_E(C) + 2):**
  - Party 1 gathers and broadcasts the encoding of the value of every output of \(C\).

- **Verification and Simulation:**
  - The verifier checks the transcript to ensure input commitments and gate evaluations are valid.
  - The simulator generates the transcript using the encoding of the circuit's output and simulates the proofs of correct evaluation.

### V. Optimizations for Duplex-Pairing Groups

The use of NIZKs in Theorem IV.1 is optimized for duplex-pairing groups of order \(r\). We focus on optimizing the evaluation protocol by instantiating the commitment scheme and NIZKs for relations \(R_A\) and \(R_B\).

- **Commitment Scheme:**
  - Pedersen commitments are used, where \(P\) and \(Q\) are generators of \(G\) with no known linear relation.

- **NIZK for Relation \(R_A\):**
  - An adapted version of Schnorr’s protocol is used, made non-interactive using the Fiat–Shamir heuristic.

- **NIZK for Relation \(R_B\):**
  - Special cases of the relation \(R_B\) are used to prove multiplicative relationships and correctness of gate evaluations.