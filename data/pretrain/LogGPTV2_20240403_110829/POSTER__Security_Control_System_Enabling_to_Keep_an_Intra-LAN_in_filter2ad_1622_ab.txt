sensor nodes with diverse functionalities so that the role of multi-level sensor network can be signified. This helps 
reduce the control messages and improves the throughput performance. Our network is logically  divided into three-
level network. The level-1 covers the event-monitoring  for cluster nodes. Level-2 comprises of cluster nodes, data 
Page 4 of 21aggregator nodes, and cluster head nodes whereas level-3 involves the cluster head node and the BS. Each node is 
assigned  a  specific  task(s)  at  different  network  level  to  prolong  the  lifetime  of  a  network.  We  include  typical 
aggregation  functions  such  as  AVERAGE,  SUM,  MAX,  MIN,  and  COUNT  along  with  the  access  control  and 
authentication  model.  We  particularly  focus  on  using  additive  aggregation  functions  because  many  standard 
aggregation  functions  such  as  standard  deviation,  variance  and  grouping,  can  easily  be  reduced  into  an  additive 
SUM function. 
Algorithm 1: The secure data fragmentation process 
For the purposes of Algorithm 1, the following terms are defined as: 
 (  : Data-blocks;   : Each variable block size;   : Number of the blocks need to be fragmented;    : 
Event-driven sensor node; ka: one-hop neighboring node;    : Base station;   : Cluster head-node; 
   : Data aggregator node;  : Set of aggregation functions;  : Authentication) 
Whereas: 
1. 
2. 
3. 
4. 
5. 
6. 
7. 
8. 
9. 
10. 
11. 
12. 
13. 
14. 
15. 
 Input: (  ,     ) 
Output: (  ,    ) 
If     collects the     then  
    fragments    into    , and 
    searches for ka. 
If      finds ka then 
               until forwarded all      
ka assembles    into    , and 
ka repeats steps 5-8 until  
    collects all      
    sends    
    forwards     ||     
endif 
endif  
In  Algorithm  1,  the  fragmentation  process  for  secure  data  aggregation  is  presented.  From  steps  1-3,  the  complete 
initialization process is described. In step 4, data-block collection process is given, whereby event-driven node       
collects the data-blocks while monitoring the events. It then decides to apply data fragmentation process. In step 5, 
this  process  fragments  the  expected  data-blocks  into  variable  size  blocks.  This  feature  avoids  the  expected  threats 
(e.g., Sybil node attack). The event-driven node makes variable block sizes. It then starts searching for the one-hop 
neighboring node     
, as shown in step 6. Once the one-hop neighboring node search process is completed as the 
method  defined  in  [28],  an  event-driven  node  forwards  the  fragmented  data  to  a  one-hop  neighboring  node.  This 
process keeps going until the total fragmented blocks are forwarded as shown in step 8. Once the fragmented blocks 
are received to the one-hop neighboring node, it then initiates the assembling process into the data-blocks as shown 
in step 9. The one-hop node is responsible to repeat steps 5-8 as explained in step-10 of Algorithm 1. Finally, these 
blocks are forwarded to the data aggregator node      , which is mainly responsible to collect all the data-blocks. It 
applies  aggregation  functions  and  initiates  the  authentication  process  as  shown  in  steps  11-12.  The  details  of  the 
authentication process are provided in the subsequent sections. The data aggregator node sends the aggregated data 
to  the  cluster-head  node  after  applying  the  aggregation  functions     ,  and  authentication       process  in  step-13. 
Finally, in step-14, cluster head-node forwards the aggregated data to the BS. 
A robust access control scheme with secure authentication and accuracy is highly demanding with the emergence of 
extensive  WSN  applications.  The  adversary  could  launch  a  variety  of  attacks  (e.g.,  sinkhole  and  Sybil  attacks)  to 
breach  the  data  privacy  and  security.  Data  privacy  becomes  a  serious  concern  when  WSNs  are  deployed  under 
sensitive  circumstances.  Therefore,  we  focus  on  the  protection  of  data  in  a  WSN  from  sinkhole  and  Sybil  attacks 
Page 5 of 21that can be expected in an oil-refinery plant. A sinkhole attack is an insider attack that compromises a single node 
inside the network. When a sinkhole attack occurs, the compromised node attempts to attract all the network traffic 
from  the  neighboring  sensor  nodes  advertising  the  fake  routing  metrics.  The  sinkhole  attack  also  provides  the 
platform  for  other  forms  of  attacks  such  as  acknowledge  spoofing,  selective  forwarding  attack  and  mitigating  the 
routing information. It can also send fake data to a BS, leading to several problems within the network. On the other 
hand,  a  Sybil  attack  sabotages  the  reputation  of  the  system,  especially  in  the  hop-to-hop  communication  via  mass 
fake  identity  generation. Typically, the Sybil attack  occurs  after  a sinkhole attack since  both attacks are reliant on 
each other. We assume the attacker may know the deployed security mechanism in a WSN and may be capable of 
compromising the node by applying a radio communication channel at the MAC level. In this situation, the private 
data is released to adversaries,  bullying the data privacy held by the individual sensor node. One major reason for 
vulnerabilities  within  a  WSN  is  due  to  resource  constraints.  Resource  constraints  render  the  public  key 
cryptographic schemes unavailable to WSNs while operating on ad hoc networks [28-32]. 
In Figure 1, static and mobile nodes are positioned in different locations to monitor the oil-refinery plant. We placed 
the static nodes on the offices, machinery, and main entry points (e.g., oil expellers, oil extraction, oil processing), 
whereas the  mobile sensor nodes are attached  to moving  objects (e.g., workers and vehicles). The static nodes are 
responsible  for  measuring  and  monitoring  the  entire  working  process  of  the  plant  and  interact  with  mobile  sensor 
nodes  to  update  the  current  situation  of  the  plant.  Both  mobile  and  static  nodes  can  be  event-monitoring  nodes. 
Aggregator nodes are static  nodes that are  fixed on  main entry points to perform aggregation processes, including 
access control and authentication to secure the data aggregation process. The aggregator nodes are  more powerful 
with  heterogeneous  capabilities  (e.g.,  energy,  processing  power,  external  memory).  The  BS  is  equipped  with  the 
proposed SDAACA protocol to guarantee the energy efficiency, accuracy, and secure data communication process. 
The aggregator nodes are responsible for forwarding the data to the BS. The event-monitoring nodes cannot send the 
calculated  data  directly  to  the  BS  because  of  the  possibility  of  data  redundancy  and  malicious  traffic.  Therefore, 
event-monitoring  nodes  forward  the  data  to  the  aggregator  nodes,  so  that  there  is  only  a  marginal  possibility  of 
redundant data being sent to the BS. 
The  design  goal  of  our  proposed  approach  is  to  attain  accurate  and  secure  data  aggregation  with  minimal 
communication overhead while preserving the data privacy. Hence, our secure data aggregation approach fulfills a 
specific  set  of  criterion.  In  our  approach,  the  secure  data  aggregation  is  based  on  an  energy-efficient  model  by 
applying  in-network  processing  to  decrease  the  number  of  transmitted  messages.  To  attain  the  objective  of 
authentication and freshness, overhead is inevitable. However, our proposed approach exchanges minimum number 
of control messages to accomplish the desired tasks. Maintaining the accuracy, the final aggregation outcomes are of 
high  significance  for  data  aggregation.  We  also  take  accuracy  as  criteria  for  measuring  the  performance  of 
authentication  and  maintaining  the  freshness  of  secure  data  aggregation  approach.  Therefore,  authentication, 
integrity, and  freshness should be ensured to create a platform for  several WSN applications  that can operate in a 
more critical and sensitive areas. Hence, it is desirable to design and develop secure data aggregation using access 
control  to  fight  against  those  attacks.  Even  though  the  wireless  channels  and  links  are  highly  susceptible  to  both 
types of attacks, secure data aggregation can avert attackers from determining the sensory information gathered by 
any sensor node. 
3.  Secure Data Aggregation Using Access Control and Authorization in WSN  
The  secure  data  aggregation  is  one  of  the  greatest  challenges  in  WSNs.  The  goal  of  the  data  aggregation  is  to 
prolong  network  lifetime  by  reducing  the  energy  consumption  (i.e.,  bandwidth  and  battery  energy)  of  the  sensor 
nodes.  However,  data  aggregation  may  highly  affect  the  QoS  provisioning.  For  example,  the  accuracy,  fault 
tolerance and end-to-end delay can all affect the QoS as data aggregation adds more exposure to different security 
threats. For instance, the compromised sensor node may illicitly expose the collected data from other sensor nodes 
and could report false values as aggregated data. In this situation,  the attacker could damage the integrity, privacy, 
and confidentiality [33-36] of the data, as the attacker could impersonate several aggregator nodes near to the  BS. 
Therefore, designing a secure data aggregation scheme could be highly challenging because of the tradeoff between 
energy  efficiency,  QoS  metrics,  accuracy,  and  most  importantly  security.  In  addition,  the  security  is  a  basic 
requirement for the WSN, especially for sensitive applications. Hence, the wireless medium is open and accessible 
to  everyone  including  any  potential  adversaries  such  that  the  adversary  might  gain  easy  access  to  the  transmitted 
data by just turning on the radio using specific frequency ranges [37]. Therefore, it is highly desirable to implement 
a robust secure scheme that can maintain the tradeoff between performance-efficiency and security requirements.  
Page 6 of 213.1. Access Control  
Most of the existing schemes only focus on authentication and completely ignore the authorization process in WSNs 
[38]. Thus, new node deployment should be handled carefully. Any newly deployed node could be a malicious node 
directly  installed  by  adversaries.  Those  newly  installed  malicious  nodes  may  be  ambiguous  or  hidden  from 
legitimate nodes of a WSN. Therefore, the adversaries must be prohibited from directly deploying malicious nodes. 
The adversaries could operate and compromise the existing legitimate nodes in order to introduce malicious nodes. 
The  old  deployed  nodes  possess  the  authenticated/authorized  certificates  and  newly  added  malicious  nodes  would 
then possess the legitimate identities. Therefore, there is a need to distinguish between old and new nodes to defend 
the  network  from  possible  attacks.  For  handling  this  issue,  timestamps  should  be  introduced  in  the  authentication 
process to  maintain the  freshness. Our  secure authentication based access control provides not only authentication 
but authorization and freshness. In our proposed SDAACA approach, Node Authorization Process (NAP) algorithm 
is introduced to handle the authorization process (see Algorithm 2). 
Algorithm 2: Node joining authorization process to avoid possible sinkhole and Sybil attacks 
1. 
Initialization: (   : Base station;   : Valid Sensor node;   : Sensor node;  : Possible action performed by 
base station;   : Authorization;   : Approval,   : Legitimate sensor node;   : Illegitimate sensor node; M: 
Message;     :  Entry  in  network;   :  Certificate  issued  for  sensor  node  for  authorization  purpose,    : 
Sensor network) 
Input: (                     
2. 
3.  Output: {(  ),      } 
4. 
If              then 
5.      invokes   for   
6.      issues     for    //                          
7.  Set          //                                             
8.      initiates A process 
9.      broadcasts A (M) in    
10.               then 
11.     reads A(M) 
12.                          
13.  Set           
14.                    then 
15.                   
16.                       
17.  endif 
18.  endif  
19. end else 
In Algorithm 2, the node authorization process is explained. Steps 1-3 outline the input and output parameters. Step 
4 joins the sensor nodes in the network. Steps 5-6 outline the base station       and initiates the certificate issuance 
process                            for  the  valid  sensor  node    .  In  Steps  7-9,  the         initiates  the  authorization 
process  to  determine  the  valid  sensor  nodes  in  the  network.  A  message  will  be  broadcasted  in  the  sensor  network 
     for authorization purpose if                                            . In Steps 10-11, if sensor node is valid, 
it reads the contents of the broadcasted message. The BS will then issue an approval tag      to join the network if a 
successful authorization process occurs, as shown in Step 12. In Step 13, the BS opens the network entry point for 
valid sensor nodes that have the approval tags. The valid sensor node can participate in the network activities. If the 
sensor node is illegitimate, the BS closes     the network entry point and a non-approval tag will be issued (Steps 14-
16). This algorithm helps prevent possible sinkhole node and Sybil node hackers or attacks. 
3.2.  Formalization of Access Control Model  
This section shows the performance of access control features of the proposed model. This model assists the BS in 
identifying  the  falsely  calculated  aggregated  data.  Let  us  assume  that  node  ‘A’  is  the  compromised  node  that 
Page 7 of 21launches the false sub-aggregate data by inserting few false bits in the collected data.  To handle this situation, the 
BS broadcasts the data aggregation query message  with the random     . value. In response, the node ‘A’ sends its 
Medium Access Control (MAC) to the BS for authenticating the sensed value     . The node ‘A’ uses the      and its 
own identity      to compute its MAC as follows: 
Based  on  the  computed  MAC  address,  the  BS  generates  the  random  value  which  is  also  capable  to determine  the 
falsely inserted bits in the aggregated data. Equation (2) shows the use of random generator to generate values based 
on the sensor nodes.  
Where  G:  Random  Generator,   :  Number  of  generated  values  based  on  the  number  of  sensor  nodes,  and    :  The 
number of sensor nodes. Extending Equation (2) for aggregated data yields: 
Where     : Aggregated data 
The BS’s randomly generated value helped to determine the inserted false bits in aggregated data. 
Lemma 1: The attacker is not capable to generate the MAC associated false data aggregation bits      that BS will 
not be able to determine as false 
Proof: Let us assume if node     contributes the bits                          in its local summation     , then it 
generates the MAC such as:              , where     : Secret key generated by node       and       : Key length. 
The node     shares this key with the BS with length      . Thus, the characteristics of the key’     can be written as: 
Each legitimate node      in network      appends      with         
                           . It can be simplified as: 
   which can be expressed as:         
Where     : Extended key. Let us assume that node          is compromised and      reaches to the BS. Another 
node cannot inject the key of node     without detection. In addition, we observe that      cannot include false bits 
in the aggregated data. 
3.2.1.  Authentication and Freshness   
Secure  data  packet  transmission  can  increase  the  complexity  of  authentication  and  authorization  process. 