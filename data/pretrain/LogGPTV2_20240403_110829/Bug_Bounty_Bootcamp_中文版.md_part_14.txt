I recommend that you learn to program. Programming skills are helpful,
because hunting for bugs involves many repetitive tasks, and by learning
a programming language such as Python or shell scripting, you can
automate these tasks to save yourself a lot of time.
现在，您应该具备扎实的背景知识，能帮助您理解我们将要涵盖的大部分漏洞。在您设置黑客工具之前，我建议您先学习编程。编程技能非常有帮助，因为寻找漏洞涉及到许多重复性的任务，通过学习
Python 或 shell 脚本等编程语言，您可以自动化这些任务，节省大量时间。
You should also learn to read JavaScript, the language with which most
sites are written. Reading the JavaScript of a site can teach you about
how it works, giving you a fast track to finding bugs. Many top hackers
say that their secret sauce is that they read JavaScript and search for
hidden endpoints, insecure programming logic, and secret keys. I've also
found many vulnerabilities by reading JavaScript source code.
你也应当学习阅读
JavaScript，因为大多数网站都是用它编写的。阅读一个网站的 JavaScript
可以让你了解它的工作方式，从而帮助你更快地发现漏洞。许多顶尖的黑客表示，他们的秘密武器就是阅读
JavaScript 并搜索隐藏的端点、不安全的编程逻辑和秘密密钥。我也通过阅读
JavaScript 源代码发现了许多漏洞。
Codecademy is a good resource for learning how to program. If you prefer
to read a book instead, *Learn Python the Hard Way* by Zed Shaw
(Addison-Wesley Professional, 2013) is a great way to learn Python. And
reading *Eloquent JavaScript* , Third Edition, by Marijn Haverbeke (No
Starch Press, 2019) is one of the best ways to master JavaScript.
Codecademy是学习编程的好资源。如果你更喜欢阅读书籍，Zed
Shaw的《笨办法学Python》(Addison-Wesley
Professional，2013)是学习Python的绝佳方式。而阅读Marijn
Haverbeke的《JavaScript精解》第三版(No Starch
Press，2019)是掌握JavaScript的最佳方式之一。
:::
[]{#c04.xhtml}
::: section
# [ [ ]{#c04.xhtml#Page_45 .pagebreak title="45"} 4 ]{.ChapterNumber} [ Environmental Setup and Traffic Interception ]{.ChapterTitle} {.chapter}
![](image_fi/book_art/chapterart.png)
You'll save yourself a lot of time and headache if you hunt for bugs
within a well-oiled lab. In this chapter, I'll guide you, step-by-step,
through setting up your hacking environment. You'll configure your
browser to work with Burp Suite, a web proxy that lets you view and
alter HTTP requests and responses sent between your browser and web
servers. You'll learn to use Burp's features to intercept web traffic,
send automated and repeated requests, decode encoded content, and
compare requests. I will also talk about how to take good bug bounty
notes.
如果你在一个井然有序的实验室里寻找漏洞，你将会节省很多时间和烦恼。在这一章节中，我将一步一步地为你设置黑客环境。你将会配置你的浏览器与Burp
Suite一同工作，Burp
Suite是一个网络代理，让你可以查看和更改你的浏览器和网页服务器之间发送的HTTP请求和响应。你将会学习使用Burp的功能来截获网络流量，发送自动化和重复请求，解码编码内容和比较请求。我也会讲解如何记录好的漏洞赏金笔记。
This chapter focuses on setting up an environment for web hacking only.
If your goal is to attack mobile apps, you'll need additional setup and
tools. We'll cover these in [ Chapter 23 ]{.xref
itemid="xref_target_Chapter 23"} , which discusses mobile hacking.
本章重点介绍建立网络黑客环境的步骤。如果你的目标是攻击移动应用程序，你需要额外的设置和工具。我们将在第23章介绍移动黑客，讨论这些内容。
## [ ]{#c04.xhtml#Page_46 .pagebreak title="46"} Choosing an Operating System {#c04.xhtml#h1-123456c01-0001}
Before we go on, the first thing you need to do is to choose an
operating system. Your operating system will limit the hacking tools
available to you. I recommend using a Unix-based system, like Kali Linux
or macOS, because many open source hacking tools are written for these
systems. *Kali Linux* is a Linux distribution designed for digital
forensics and hacking. It includes many useful bug bounty tools, such as
Burp Suite, recon tools like DirBuster and Gobuster, and fuzzers like
Wfuzz. You can download Kali Linux from
[https://www.kali.org/downloads/](https://www.kali.org/downloads/){.LinkURL}
.
在我们继续之前，首先要做的就是选择一个操作系统。你的操作系统将限制可用的黑客工具。我建议使用基于Unix的系统，如Kali
Linux或macOS，因为许多开源黑客工具都是为这些系统编写的。Kali
Linux是一种专为数字取证和黑客设计的Linux发行版。它包括许多有用的漏洞赏金工具，例如Burp
Suite、类似DirBuster和Gobuster的recon工具以及类似Wfuzz的模糊器。可以从https://www.kali.org/downloads/下载Kali
Linux。
If these options are not available to you, feel free to use other
operating systems for hacking. Just keep in mind that you might have to
learn to use different tools than the ones mentioned in this book.
如果这些选项对您不可用，可以自由地使用其他操作系统进行黑客攻击。只需记住，您可能需要学习使用不同于本书中提到的工具。
## Setting Up the Essentials: A Browser and a Proxy {#c04.xhtml#h1-123456c01-0002}
Next, you need a web browser and a web proxy. You'll use the browser to
examine the features of a target application. I recommend using Firefox,
since it's the simplest to set up with a proxy. You can also use two
different browsers when hacking: one for browsing the target, and one
for researching vulnerabilities on the internet. This way, you can
easily isolate the traffic of your target application for further
examination.
接下来，您需要一个网络浏览器和一个网络代理。使用浏览器来检查目标应用程序的功能。建议使用Firefox，因为它是最容易与代理配对的。黑客时，也可以使用两个不同的浏览器：一个用于浏览目标，一个用于在网上研究漏洞。这样，您可以轻松地隔离目标应用程序的流量以进一步检查。
A *proxy* is software that sits between a client and a server; in this
case, it sits between your browser and the web servers you interact
with. It intercepts your requests before passing them to the server, and
intercepts the server's responses before passing them to you, like this:
代理是一种软件，它位于客户端和服务器之间；在这种情况下，它位于您的浏览器和您交互的web服务器之间。它在将您的请求传递给服务器之前截获它们，并在将服务器的响应传递给您之前截获它们，就像这样：
1.  Browser \ Proxy
    \ Server
Using a proxy is essential in bug bounty hunting. Proxies enable you to
view and modify the requests going out to the server and the responses
coming into your browser, as I'll explain later in this chapter. Without
a proxy, the browser and the server would exchange messages
automatically, without your knowledge, and the only thing you would see
is the final resulting web page. A proxy will instead capture all
messages before they travel to their intended recipient.
在漏洞赏金猎人的活动中，使用代理是必不可少的。如本章节所述，代理能够让你查看和修改发往服务器和从服务器返回到浏览器的请求和响应。如果没有代理，浏览器和服务器将自动交换信息，你将一无所知，只能看到最终显示的网页。代理将拦截所有信息，而不是让它们直接发送到其预定的接收者那里。
Proxies therefore allow you to perform recon by examining and analyzing
the traffic going to and from the server. They also let you examine
interesting requests to look for potential vulnerabilities and exploit
these vulnerabilities by tampering with requests.
代理服务器因此允许您通过检查和分析发送到服务器和从服务器返回的流量来执行侦察。他们还允许您检查有趣的请求，以寻找潜在的漏洞，并通过篡改请求来利用这些漏洞。
For example, let's say that you visit your email inbox and intercept the
request that will return your email with a proxy. It's a GET request to
a URL that contains your user ID. You also notice that a cookie with
your user ID is included in the request:
例如，假设您访问电子邮件收件箱并使用代理拦截将返回您的电子邮件的请求。这是一个GET请求，包含您的用户ID的URL。您还注意到请求中包含具有您的用户ID的cookie。
    GET /emails/USER_ID HTTP/1.1
    Host: example.com
    Cookie: user_id=USER_ID
[ ]{#c04.xhtml#Page_47 .pagebreak title="47"} In this case, you can try
to change the `      USER_ID     ` in the URL and the
`      Cookie     ` header to another user's ID and see if you can
access another user's email.
在这种情况下，您可以尝试在URL和Cookie头中更改USER_ID以使用另一个用户的ID，以查看您是否可以访问另一个用户的电子邮件。
Two proxies are particularly popular with bug bounty hunters: Burp Suite
and the Zed Attack Proxy (ZAP). This section will show you how to set up
Burp, but you're free to use ZAP instead.
两个代理服务器特别受到漏洞赏金猎人的欢迎：Burp Suite和Zed Attack
Proxy（ZAP）。本节将向您展示如何设置Burp，但您也可以自由选择使用ZAP。
### Opening the Embedded Browser {#c04.xhtml#h2-123456c01-0001}
Both Burp Suite and ZAP come with embedded browsers. If you choose to
use these embedded browsers for testing, you can skip the next two
steps. To use Burp Suite's embedded browser, click **Open browser** in
Burp's Proxy tab after it's launched ( [Figure
4-1](#c04.xhtml#figure4-1){#c04.xhtml#figureanchor4-1} ). This embedded
browser's traffic will be automatically routed through Burp without any
additional setup.
Both Burp Suite and ZAP are equipped with embedded browsers. If you
choose to use these embedded browsers for testing, you can skip the next
two steps. To use Burp Suite's embedded browser, click
"在Burp的代理选项卡中打开浏览器"(图4-1)。这个内置浏览器的流量将自动通过Burp进行路由，无需进行任何其他设置。
![[Figure 4-1]{#c04.xhtml#figure4-1} : You can use Burp's embedded
browser instead of your own external browser for testing. ¶
图4-1：您可以使用Burp的内置浏览器而不是您自己的外部浏览器进行测试。](image_fi/501546c04/f04001.png){.keyline}
### Setting Up Firefox {#c04.xhtml#h2-123456c01-0002}
Burp's embedded browser offers a convenient way to start bug hunting
with minimal setup. However, if you are like me and prefer to test with
a browser you are used to, you can set up Burp to work with your
browser. Let's set up Burp to work with Firefox.
Burp嵌入式浏览器提供了一种方便的方法来开始进行最小化设置的漏洞狩猎。然而，如果你像我一样偏爱使用你已经习惯的浏览器进行测试，那么你可以设定Burp与你的浏览器一起工作。让我们来设定Burp可以和Firefox一起工作。
Start by downloading and installing your browser and proxy. You can
download the Firefox browser from
[https://www.mozilla.org/firefox/new/](https://www.mozilla.org/firefox/new/){.LinkURL}
and Burp Suite from
[https://portswigger.net/burp/](https://portswigger.net/burp/){.LinkURL}
.
从以下网址下载并安装你的浏览器和代理。你可以从
https://www.mozilla.org/firefox/new/ 下载Firefox 浏览器，并从
https://portswigger.net/burp/ 下载Burp Suite。
Bug bounty hunters use one of two versions of Burp Suite: Professional
or Community. You have to purchase a license to use Burp Suite
Professional, while the Community version is free of charge. Burp Suite
Pro includes a vulnerability scanner and other convenient features like
the option to save a work session to resume later. It also offers a full
version of the Burp intruder, while the Community version includes only
a limited version. In this book, I cover how to use the Community
version to hunt for bugs.
漏洞赏金猎人使用Burp Suite的两个版本之一：专业版或社区版。使用Burp
Suite专业版需要购买许可证，而社区版免费。Burp Suite
Pro包括漏洞扫描仪和其他方便的功能，例如保存工作会话以便稍后继续。它还提供了一个完整版的Burp
intruder，而社区版仅包含有限的版本。在这本书中，我介绍了如何使用社区版来寻找漏洞。
Now you have to configure your browser to route traffic through your
proxy. This section teaches you how to configure Firefox to work with
Burp Suite. If you're using another browser-proxy combination, please
look up their official documentation for tutorials instead.
现在您需要配置您的浏览器以通过代理路由流量。本部分将教您如何将Firefox配置为与Burp
Suite一起使用。如果您使用其他浏览器-代理组合，请查阅其官方文档以获取教程。
[ ]{#c04.xhtml#Page_48 .pagebreak title="48"} Launch Firefox. Then open
the Connections Settings page by choosing **Preferences** [ ▶
]{.MenuArrow} **General** [ ▶ ]{.MenuArrow} **Network Settings** . You
can access the Preferences tab from the menu at Firefox's top-right
corner ( [Figure 4-2](#c04.xhtml#figure4-2){#c04.xhtml#figureanchor4-2}
).
启动Firefox。然后通过选择Preferences▶General▶Network
Settings打开连接设置页面。您可以从Firefox右上角的菜单访问Preferences选项卡（见图4-2）。
![[Figure 4-2]{#c04.xhtml#figure4-2} : You can find the Preferences
option at the top-right corner of Firefox. ¶
图4-2：您可以在Firefox的右上角找到"偏好设置"选项。](image_fi/501546c04/f04002.png){.keyline}
The Connection Settings page should look like the one in [Figure
4-3](#c04.xhtml#figure4-3){#c04.xhtml#figureanchor4-3} .
连接设置页面应该像图4-3所示。
Select **Manual proxy configuration** and enter the IP address
**127.0.0.1** and port **8080** for all the protocol types. This will
tell Firefox to use the service running on port 8080 on your machine as
a proxy for all of its traffic. 127.0.0.1 is the localhost IP address.
It identifies your current computer, so you can use it to access the
network services running on your machine. Since Burp runs on port 8080
by default, this setting tells Firefox to route all traffic through
Burp. Click **OK** to finalize the setting. Now Firefox will route all
traffic through Burp.
选择手动代理配置，并输入 IP 地址 127.0.0.1 和端口号
8080，适用于所有协议类型。这将告诉 Firefox 使用运行在您机器上 8080
端口的服务作为其所有流量的代理。127.0.0.1
是本地主机IP地址，它识别您当前的计算机，因此您可以使用它来访问在您机器上运行的网络服务。由于
Burp 默认运行在 8080 端口上，这个设置告诉 Firefox 将所有流量通过 Burp
路由。点击 OK 完成设置。现在 Firefox 将通过 Burp 路由所有流量。
[ ]{#c04.xhtml#Page_49 .pagebreak title="49"}
![[Figure 4-3]{#c04.xhtml#figure4-3} : Configure Firefox's proxy
settings on the Connection Settings page. ¶
图4-3：在连接设置页面上配置Firefox的代理设置。](image_fi/501546c04/f04003.png){.keyline}
### Setting Up Burp {#c04.xhtml#h2-123456c01-0003}
After downloading Burp Suite, open it and click **Next** , then **Start
Burp** . You should see a window like [Figure
4-4](#c04.xhtml#figure4-4){#c04.xhtml#figureanchor4-4} .
下载Burp
Suite后，打开它并点击下一步，然后启动Burp。您应该看到一个类似于图4-4的窗口。