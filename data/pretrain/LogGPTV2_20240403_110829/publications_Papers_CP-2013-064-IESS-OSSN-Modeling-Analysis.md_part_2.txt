### Preference [8] to Certain Nodes

#### 5. Modeling Service Networks and Its Limitations
In our second activity, we conducted a literature review to investigate whether existing work could be used to model service systems and service networks.

##### 5.1 Service Modeling with USDL
Our research reviewed existing work from software-based service description languages (e.g., OWL-S, WSMO, SoaML, SML, SaaS-DL), business-oriented service descriptions (e.g., ITIL and CMMI for Services), and conceptual and ontology-based service descriptions (e.g., e3service [12], General Service Model [19], and Alter [20]). Our analysis revealed that, compared to previous developments, USDL provides a comprehensive model and a basis to represent service networks for the following reasons (see Section 3 for a deeper comparison):
- It models the business, operational, and technical perspectives of service systems, enabling reasoning about the influence of pricing models, legal constraints, quality levels, business processes, and agents on the dynamism of service networks.
- A version of the model based on Semantic Web principles, called Linked-USDL, was developed to provide the means for publishing and interlinking distributed services for automatic and computer-based processing.

However, requirement R1 identified in Section 4 is not supported. In other words, internal cause-effect relationships are not currently modeled with USDL. We propose to model these relationships using Key Performance Indicators (KPIs) as often recommended by ITIL and COBIT best practices, and suggested by Spohrer et al. in [21]. For example, two services, \( s_a \) and \( s_b \), may establish a cause-effect relationship at the process level between the KPI error rate of a process in \( s_a \) and the KPI redo cost of a process in \( s_b \). When a positive variation in the KPI of \( s_a \) occurs, it can be inferred that it will provoke an effect on the KPI of \( s_b \). In other words, an increase in the number of errors in \( s_a \) results in an increase in cost in \( s_b \). This is an important aspect since a service network is more than the sum of its parts only if the internal and external 'wiring' of services are established.

To support requirement R3, and since time-bounds are a central variable in system theory and provide a referent for the very idea of dynamics, we propose an extension to USDL by using the formal time ontology proposed by Pan and Hobbs [22]. Additionally, to address requirement R3, we model the concept of attractiveness [18] of a service by allowing service systems to state their attractiveness, which serves as the selecting rule (explained in Section 6).

##### 5.2 Relationship Modeling with OSSR
As with the Web and the Semantic Web, the power of service systems is enhanced through the network effect produced as service systems create relationships with other service systems, with the value determined by Metcalfe's law [23]: the value of a network is proportional to the square of the number of connected service systems (\( n^2 \)). Our research also reviewed various proposals, including value chains/nets/networks [17] and the service network notation [14], to evaluate their suitability for modeling service networks. Most work focuses on the business aspects of industries and does not closely examine relationships, which are simply viewed as connecting elements representing offerings and transactions. Furthermore, the modeling approaches are informal and often used as communication tools.

What is needed is the ability to represent and identify richer relationships between services. This requirement goes well beyond what is offered by current approaches. While other types of relationships are also important, e.g., between services and actors, we follow the service-dominant logic [11] principle and consider that any other type of relationship is always mediated by services. This simplifies the construction and analysis of a network since all the nodes are homogeneous, i.e., they are services. Therefore, relations can occur between the actors that operate inside two service systems connected by a relationship.

We adopted the OSSR model, a multi-layer relationship specification composed of five layers: 1) role, 2) level, 3) involvement, 4) comparison, and 5) association. The model enables the interconnection of services and indicates the properties of the connection. For example, it enables the indication that two services maintain a relationship, with one service being the consumer and the other the provider. It also enables the indication of whether a relationship represents high or low involvement from its actors, or if a service is functionally dependent on another service.

While rich and comprehensive, a limitation of OSSR is that it does not model cause-effect relationships between services (requirement R2). To resolve this limitation and to be consistent with how we addressed requirement R1, we rely on KPIs. For example, if a provider is competing by providing an efficient service, then internal KPIs related to activities' duration should be linked to KPIs of the same type present in other services within the same network. In other words, internal KPIs must be related to the KPIs of other service systems when forming service networks. Requirement R3 will also be addressed by including the modeling of time in relationships, indicating that they are often time-bounded.

### 6. Modeling Dynamic Behavior
Based on the limitations identified in Section 5, we present three extensions to USDL and OSSR to model dynamic OSSN: 1) attractiveness, 2) cause-effect relationships, and 3) time bounding.

The attractiveness or preferential attachment is expressed by adding to USDL the concept `usdl-core:ValueProposition`. It allows service systems to state their value proposition using a single KPI or a mathematical expression involving several KPIs. While more complex structures have been proposed to model a value proposition (see [24]), in our work, we are particularly concerned with showing that value propositions are a cornerstone to simulate service systems dynamics rather than demonstrating the completeness of the value proposition. Therefore, we opt to explore the utility of measurable value propositions.

Although USDL does not foresee the definition of KPIs, its model is organized into several clusters (e.g., service level and pricing) which provide a wealth of variables that can be used as KPIs. For example, service level and quality of service variables such as availability, reliability, and response time. The value proposition can refer to existing USDL concepts such as `usdl-price:Variable`, `usdl-sla:Variable`, `usdl-core:Parameter`, or to construct complex expressions using `usdl-sla:ServiceLevelExpression`. The calculation of the expression yields the value proposition. While the addition of a single concept to USDL seems simple, its implications are enormous. Preferential attachments [8] have been shown to be the main distinguishing feature leading random networks to evolve into scale-free networks in particular domains such as the Web or social networks [10]. Thus, we can hypothesize that it can potentially be a key factor influencing and determining the topological evolution of service networks.

**Figure 2: The Structure of the OSSR Model**
```
has_level 0..3
Level
Relation- 1 has_involvement 0..1 Involve-
ship ment
1 has_comparison 0..1 Compari-
son
has_source has_target has_association 0..1 Associa-
tion
1 1 has_causality 0..n
Service Causality
subClassOf 1 1 1
has_cause has_link has_effect
Source Target Cause Link Effect
has_role 1
0..1 0..1
Role Category
has_category has_category
0..1 0..1
KPI
has_KPI has_KPI
```

To model cause-effect relationships, we use the concept of causality from the area of System Dynamics (SD) [9] to express and quantify the impact that one service has on other services. Internal and external relationships of an OSSN are specified using the concept `ossr:Relationship` of the OSSR model (Figure 2). This concept involves the definition of two endpoints: the source service and the target service (for readability, the prefix `ossr:` will be omitted from now on). When modeling an internal relationship, both the source and target refer to the same service. A `Relationship` can capture several relations by using the concept `Causality` more than once. The concept can be thought of as a 'wire' connecting two internal or external service system KPIs described with USDL. The concept `Causality` describes how a `Cause` event occurring in a service has an `Effect` in the same or in another service. The concept `Link` connects two KPIs and sets the sign of the link: Positive or Negative. A positive link indicates that a change in a service KPI (increase or decrease) results in the same type of change in another service KPI (increase or decrease). A negative link indicates that a change in a service KPI results in the opposite change in another service KPI. KPIs are described within the concepts `Cause` and `Effect`. For example, if a service provider uses Invoice Reliability as a KPI to control the quality of a service, it can be connected to the Response Time Delivery KPI of a service customer. An increase in the first KPI originates an increase in the second KPI since errors in the invoice require time to be resolved.

Since KPIs are often domain-dependent and their semantics may not always be clear to analysts, individual measures of performance in a cause-effect relation are classified by the concept `Category` into one of five elements (c.f. [25]): quality, time, cost, flexibility, and other. The category 'other' was added to make the classification complete.

Time, one of the aspects identified by requirement R3, was modeled by using the time ontology `http://www.w3.org/2006/time` by adding the class `time:Interval`. This class contains the properties `time:hasBeginning` and `time:hasEnd` to define the beginning and end of an interval in which a service specification is valid. While it is a simple concept, the time ontology provides a powerful mechanism to reason about the dynamics of service networks.

### 7. Evaluation of Dynamic OSSN
In this section, we evaluate the applicability of the extensions proposed to USDL and OSSR to model dynamic OSSN using evolutionary and analytical approaches. The evaluation addresses the following two competency questions:
1. For a current service market share, what is the service market share forecast?
2. What is the effect that an increase in KPI \( a \) in service \( s_a \) has on KPI \( b \) of service \( s_b \)?

#### 7.1 Evolutionary Analysis of OSSN
In many scenarios, a service network contains two different types of service nodes: service consumers and services provided. Note that in our work, customers are also seen as service systems. The network is bipartite and is represented by \( SN \), such as \( SN(t) = \{S(t), C(t), R(t), f(t)\} \), where \( S(t) \) is the set of services provided, \( C(t) \) is the set of service consumers, \( S(t) \) and \( C(t) \) are modeled with USDL, \( R(t) \) is the set of relationships modeled with OSSR connecting consumers and services provided, and \( f(t) \) is the mapping function \( f : C \rightarrow S \). Network \( SN \) is directed, such that a relationship from consumer node \( c_i \) to service node \( s_j \); \( r : c_i \rightarrow s_j \), means that \( c_i \) has adopted service \( s_j \). Time is represented by parameter \( t \). Customers alter the topology of a service network by diffusion when they adopt or abandon a service by adding or deleting an OSSR relationship to it.

To construct a service network \( SN \), USDL and OSSR models are remotely accessed and retrieved (an overview description of the infrastructure to access and retrieve USDL and OSSR instances is described in [2]). OSSR models are mapped to relationship \( R(t) \) and functions \( f(t) \). By retrieving the `ossr:Role` concept of a relationship \( r : c_i \rightarrow s_j \), the concepts `ossr:Source` and `ossr:Target` point to the respective service nodes.