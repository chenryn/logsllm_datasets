you can choose to specify a custom count, normally equal to the CPU/core count, to fully
utilize the system resources.
dataSyncThreadCount=n
The default value is 0.
targetDBQueryTimeout
The targetDBQueryTimeout option controls the timeout interval (in milliseconds)
before an attempt by the publication server to apply a transaction set on a target database
is aborted by the database server (typically due to a lock acquired by another application
on one or more of the target tables).
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 243
EDB Postgres Replication Server User’s Guide
The targetDBQueryTimeout option sets the default lock timeout value to 10 minutes.
Change the 10 minute default value to a higher value if you want to allow a longer wait
time before the transaction is aborted. Change the value to 0 if you want to turn off usage
of the targetDBQueryTimeout option in which case the timeout interval is controlled
by the setting of the Postgres database server statement_timeout configuration
parameter.
A higher value of targetDBQueryTimeout delays processing of subsequent
transaction sets on other target databases because if a transaction set is blocked, the next
transaction set cannot be loaded until: 1) the lock is released and the blocked transaction
set can then be applied to completion, or 2) the targetDBQueryTimeout interval is
exceeded.
If a timeout occurs, the waiting transaction set is marked as aborted for the particular
blocked target database. The remaining pending transaction sets in this synchronization
session are skipped for this target database, but are applied to all other target databases
once the timeout interval has been exceeded. The aborted and skipped transaction sets are
tried again when the next synchronization replication event occurs.
So for example, in a 3-node cluster with ten pending transaction sets, assume transaction
set 1 is loaded and begins replicating to nodes 2 and node 3. Now, another application
acquires a lock on one or more tables in node 2, putting the updates to these tables in a
wait state. Replication of transaction set 1 can run to completion on node 3, but if the
wait time exceeds the targetDBQueryTimeout interval, the database server cancels
transaction set 1 on node 2. Replication of this transaction set to node 2 is marked as
aborted in the xDB Replication Server metadata.
Transaction set 2 can now be loaded and run against node 3. Execution of transaction set
2 against node 2 is skipped since transaction sets must be applied in order and transaction
set 1 was not successfully applied to node 2. Transaction sets 3 thru 10 are loaded and
applied in order against node 3, but skipped for node 2.
In the next synchronization replication, transaction set 2 is tried again on node 2. If the
lock has been released and the transaction set is applied successfully, the remaining
transaction sets 3 thru 10 are applied to node 2.
Finally, synchronization replication continues with any new transaction sets.
targetDBQueryTimeout=n
The default value is 600000.
5.8.2.3 Other Synchronization Configuration Options
The following are other configuration options affecting synchronization replication.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 244
EDB Postgres Replication Server User’s Guide
syncBatchSize
The syncBatchSize option controls the number of statements in a synchronization
replication JDBC batch.
syncBatchSize=n
The default value for n is 100.
syncFetchSize
The syncFetchSize option controls how many rows are fetched from the publication
database in one network round-trip. For example, if there are 1000 pending row changes,
the default fetch size requires 5 database round-trips. Using a fetch size of 500 retrieves
all changes in 2 round trips.
Fine tune the performance by using a fetch size that conforms to the average data volume
consumed by rows fetched in one round trip.
syncFetchSize=n
The default value for n is 200.
txSetMaxSize
The txSetMaxSize option defines the maximum number of transactional rows that can
be grouped in a single transaction set. The publication server loads and processes the
changes by fetching as many rows in memory as grouped in a single transaction set.
A higher value is expected to boost performance. However a very large value might
result in an out of memory error. Increase/decrease the value in accordance with the
average row size (low/high).
txSetMaxSize=n
The default value for n is 10000.
enablePerformanceStats
Set enablePerformanceStats option to true only if you need to conduct
performance testing and analyze the replication statistics. When enabled, the publication
server creates additional triggers on the publication tables in each master node. The
triggers produce transaction statistics that are recorded in the
mmr_transaction_history table in the control schema. This option should be
disabled in a production environment to avoid performance overhead.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 245
EDB Postgres Replication Server User’s Guide
enablePerformanceStats={true | false}
The default value is false.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 246
EDB Postgres Replication Server User’s Guide
6 Multi-Master Replication Operation
This chapter describes how to configure and run xDB Replication Server for multi-master
replication systems.
For configuration and management of your replication system, the xDB Replication
Console graphical user interface is used to illustrate the steps and examples in this
chapter. The same steps can be performed from the operating system command line using
the xDB Replication Server Command Line Interface (CLI). The commands of the xDB
Replication Server CLI utility are described in Chapter 8.
6.1 Prerequisite Steps
Certain steps must be taken to prepare the host environments as well as the database
servers used as master nodes before beginning the process of building a multi-master
replication system. This section describes these steps.
6.1.1 Setting Heap Memory Size for the Publication Server
Replication speed and efficiency can be affected by the heap memory size set for the
publication server. The xDB Startup Configuration file sets a parameter controlling the
minimum and maximum heap size allocated for the publication server. See Section 5.1.1
for guidelines and information on setting this parameter.
6.1.2 Enabling Synchronization Replication with the Log-Based
Method
This section applies only to Postgres database servers of version 9.4 and later.
If you plan to use the log-based method of synchronization replication with any master
node running under a given Postgres database server, the following configuration
parameter settings are required in the configuration file, postgresql.conf, of each
such Postgres database server:
 wal_level. Set to logical.
 max_wal_senders. Specifies the maximum number of concurrent connections
(that is, the maximum number of simultaneously running WAL sender processes).
Set at minimum, to the number of MMR master nodes on this database server that
will use the log-based method. In addition, if SMR publication databases are to
run on this database server, also add the number of SMR publication databases
that will use the log-based method.
 max_replication_slots. Specifies the maximum number of replication slots. For
support of MMR systems, the minimum is the total number of master nodes in the
multi-master replication system multiplied by the number of master nodes
residing on this database server. For information, see Section 2.2.10.4. In
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 247
EDB Postgres Replication Server User’s Guide
addition, if SMR publication databases are to run on this database server, also add
the number of SMR publication databases that will use the log-based method.
 track_commit_timestamp. Set to on. This configuration parameter applies only
to Postgres database servers of version 9.5. See Section 6.6.1 for additional
information.
See Section 2.2.10 for information on the log-based method of synchronization
replication.
The Postgres database server must be restarted after altering any of these configuration
parameters.
In addition, the pg_hba.conf file requires an entry for each publication database user of
master nodes that are to use the log-based method. Such database users must be included
as a replication database user in the pg_hba.conf file. See Section 6.1.5 for additional
information.
6.1.3 Preparing the Master Definition Node
This section discusses the preparation of a database to be used as the master definition
node.
When creating the publication database definition for the master definition node, a
database user name must be specified that has the following characteristics:
 The database user can connect to the master definition node.
 The database user has superuser privileges. Superuser privileges are required
because the database configuration parameter session_replication_role is
altered by the database user when the master definition node receives updates
from other master nodes during a synchronization replication. The database user
temporarily changes session_replication_role to replica to prevent the
triggers on the publication tables from firing. This session change also occurs for
snapshot operations involving replication of the control schema from one
publication database to another.
 The database user must have the ability to modify the system catalog tables in
order to disable foreign key constraints on the publication tables for snapshots
targeted to the publication, as well as for the control schema tables for snapshot
operations involving the replication of the control schema from one publication
database to another. (See appendix Section 10.4.4 for more information on this
requirement.)
The examples used throughout the rest of this user’s guide are based on the following
master definition node:
 The database user name for the master definition node is pubuser.
 The tables used in the publication reside in a schema named edb.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 248
EDB Postgres Replication Server User’s Guide
 Three tables named dept, emp, and jobhist are members of schema edb.
 The database name of the master definition node is edb.
The following steps illustrate the preparation of the master definition node database user.
Step 1: Create a user name with login and superuser privileges for the master definition
node. This user becomes the owner of xDB Replication Server metadata database objects
that will be created in the master definition node to track, control, and record the
replication process and history. The xDB Replication Server metadata database objects
are created in a schema named _edb_replicator_pub.
When creating the publication database definition, the database user name is entered in
the Publication Service – Add Database dialog box (see Section 6.2.2).
CREATE ROLE pubuser WITH LOGIN SUPERUSER PASSWORD 'password';
Step 2 (Optional): If users are to access the data in the publication tables residing on this
master node, it is convenient to have one or more “group” roles containing the required
privileges to access these tables. Privileges must also be granted on the control schema
objects to users who are to perform inserts, updates, or deletions on the publication
tables.
When adding new users, granting these users membership in these roles gives them the
privileges to access the publication tables. This eliminates the need to grant these
privileges individually to each new user.
See Step 2 of Section 5.1.4.3 for information on creating such roles.
6.1.4 Preparing Additional Master Nodes
The following steps illustrate the creation of a database user and a database for an
additional master node.
When creating the publication database definition for an additional master node, a
database user name must be specified that has the following characteristics:
 The database user can connect to the master node.
 The database user has superuser privileges. Superuser privileges are required
because the database configuration parameter session_replication_role is
altered by the database user when the master node receives updates from other
master nodes during a synchronization replication. The database user temporarily
changes session_replication_role to replica to prevent the triggers on
the publication tables from firing. This session change also occurs for snapshot
operations involving replication of the control schema from one publication
database to another.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 249
EDB Postgres Replication Server User’s Guide
 The database user must have the ability to modify the system catalog tables in
order to disable foreign key constraints on the publication tables for snapshots
targeted to the publication, as well as for the control schema tables for snapshot
operations involving the replication of the control schema from one publication
database to another. (See appendix Section 10.4.4 for more information on this
requirement.)
 If the additional master node is to reside on a different database server instance
(that is, on a different host or port number) than the master definition node, then
the same database user name should be used for this additional master node as
used for the master definition node unless the publication server configuration
option skipTablePrivileges is changed from its default value of false to
true. See Section 10.4.1.13 for information on skipTablePrivileges.
There are also two possible options available with respect to how the publication tables
are to be created in the master node:
 Allow the publication server to create the publication table definitions in the
master node by copying the definitions from the master definition node at the time
you add the publication database definition for the master node.
 Define the publication tables in the master node beforehand by running SQL DDL
statements in the PSQL command line utility program or by using Postgres
Enterprise Manager Client to create the tables.
If you create the table definitions “manually” as described in the second bullet point, be
sure the publication tables are defined identically to the tables in the master definition
node including schema names, table names, number of columns, column names, column
data types, column lengths, primary key definitions, unique constraints, foreign key
constraints, etc.
The examples used throughout the rest of this user’s guide are based on the following:
 The database user name of the second master node is mmruser.
 The database name of the second master node is mmrnode.
Step 1: Create a database user name for the master node. This user becomes the owner of
xDB Replication Server metadata database objects that will be created in the master node
to track, control, and record the replication process and history. The xDB Replication
Server metadata database objects are created in a schema named
_edb_replicator_pub.
When creating the publication database definition for the master node, the database user
name is entered in the Publication Service – Add Database dialog box (see Section 6.3).
CREATE ROLE mmruser WITH LOGIN SUPERUSER PASSWORD 'password';
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 250
EDB Postgres Replication Server User’s Guide
Step 2: Create a database that will be used as the master node if such a database does not
already exist.
CREATE DATABASE mmrnode;
6.1.5 Verifying Host Accessibility
If more than one computer is used to host the components of the replication system, each
computer must be able to communicate with the others on a network.
There are a number of different aspects to this topic.
 For a discussion of firewalls and access to ports see Section 5.1.6.1.
 For a discussion of network IP addresses see Section 5.1.6.2.
A Postgres database server uses the host-based authentication file, pg_hba.conf, to
control access to the databases in the database server.
You need to modify the pg_hba.conf file on each Postgres database server that
contains a master node.
In a default Postgres installation, this file is located in the directory
POSTGRES_INSTALL_HOME/data.
The modification needed to the pg_hba.conf file is discussed in the following section.
Master Nodes
On each database server running a master node, the following is needed to allow access
to the database:
host masternode_db masternode_user pub_ipaddr/32 md5
The value you substitute for masternode_db is the name of the database you intend to
use as the master node. The value you substitute for masternode_user is the database
user name you created in Step 1 of Section 6.1.3 or Step 1 of Section 6.1.4.
For two master nodes using databases named edb and mmrnode running on the same
database server, the resulting pg_hba.conf file appears as follows:
# TYPE DATABASE USER ADDRESS METHOD
# "local" is for Unix domain socket connections only
local all all md5
# IPv4 local connections:
host edb pubuser 192.168.2.22/32 md5
host mmrnode mmruser 192.168.2.22/32 md5
host all all 127.0.0.1/32 md5
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 251
EDB Postgres Replication Server User’s Guide
# IPv6 local connections:
host all all ::1/128 md5
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local replication enterprisedb md5
#host replication enterprisedb 127.0.0.1/32 md5
#host replication enterprisedb ::1/128 md5
If the master node using database mmrnode with database user name mmruser is running
on a separate host than where database edb is running, the pg_hba.conf file on the
database server with database mmrnode would look like the following:
# TYPE DATABASE USER ADDRESS METHOD
# "local" is for Unix domain socket connections only
local all all md5
# IPv4 local connections:
host mmrnode mmruser 192.168.2.22/32 md5
host all all 127.0.0.1/32 md5
# IPv6 local connections:
host all all ::1/128 md5
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local replication enterprisedb md5
#host replication enterprisedb 127.0.0.1/32 md5
#host replication enterprisedb ::1/128 md5
The preceding examples assume databases edb and mmrnode are using the trigger-based
method of synchronization replication. If the log-based method is used, the
pg_hba.conf file must contain additional entries with the DATABASE field set to
replication for masternode_user and pub_ipaddr to allow replication
connections from the publication server on the host on which it is running.
The following shows a modification of the first example with these additional entries as
the last two lines in the file:
# TYPE DATABASE USER ADDRESS METHOD
# "local" is for Unix domain socket connections only
local all all md5
# IPv4 local connections:
host edb pubuser 192.168.2.22/32 md5
host mmrnode mmruser 192.168.2.22/32 md5
host all all 127.0.0.1/32 md5
# IPv6 local connections:
host all all ::1/128 md5
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local replication enterprisedb md5
#host replication enterprisedb 127.0.0.1/32 md5
#host replication enterprisedb ::1/128 md5
host replication pubuser 192.168.2.22/32 md5
host replication mmruser 192.168.2.22/32 md5
See sections 2.2.10 and 6.1.2 for additional information on synchronization replication
with the log-based method.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 252