# Autonomic Response to Distributed Denial of Service Attacks

## Authors
- Daniel F. Sterne
- Kelly Djahandari
- Brett Wilson
- Bill Babson
- Dan Schnackenberg
- Harley Holliday
- Travis Reid

### Affiliations
- **NAI Labs**
  - 3060 Washington Road, Glenwood, MD 21738
  - {Dan Sterne, Kelly Djahandari, Brett Wilson}@nai.com, PI:EMAIL
- **Boeing Phantom Works**
  - MS 88-12, PO Box 3999, Seattle, WA 98124-2499
  - {daniel.d.schnackenberg, travis.s.reid, harley.s.holiday}@boeing.com

### Abstract
The Cooperative Intrusion Traceback and Response Architecture (CITRA) and the Intruder Detection and Isolation Protocol (IDIP) provide an infrastructure that enables intrusion detection systems, firewalls, routers, and other components to cooperatively trace and block network intrusions as close to their sources as possible. This paper presents the results of recent testbed experiments using CITRA and IDIP to defend streaming multimedia sessions against the Stacheldraht DDoS toolkit. Experimental data suggests that these technologies represent a promising approach for autonomic DDoS defense.

## 1. Introduction
Distributed Denial of Service (DDoS) attacks pose a critical threat to the Internet. Powerful DDoS toolkits are readily available to potential attackers, and many essential systems are inadequately prepared to defend themselves. For example, in January 2001, Microsoft's web sites hosting Hotmail, MSN, Expedia, and other major services were largely inaccessible for 22 hours due to a DDoS attack. Although the security community has long been aware of the possibility of DDoS attacks, such attacks have only recently become easy to launch and popular among hackers.

While some technological advances for DDoS defense are emerging, current practices rely heavily on manual procedures by network administrators. These procedures primarily involve:
1. "Input debugging," where administrators use network traffic probes and statistics to identify the physical interfaces through which DDoS flooding traffic enters their network.
2. Mitigation of network traffic flow through those interfaces by inserting packet filtering or rate limiting rules into the associated router.

Once the offending input interfaces are identified, administrators contact their counterparts at upstream organizations (e.g., Internet service providers - ISPs) to carry out similar procedures. This process continues upstream until either the flood sources are identified and extinguished, or no further cooperation can be obtained.

These manual procedures have several significant drawbacks:
- They require the immediate availability of highly skilled network administrators, who are in short supply.
- They are time-consuming, even for experienced network gurus, allowing downtime and associated costs to mount.
- They do not scale well, especially for attacks involving hundreds of networks or repetitive "whack-a-mole" attacks.

The Cooperative Intrusion Traceback and Response Architecture (CITRA) and the Intruder Detection and Isolation Protocol (IDIP) provide an infrastructure enabling intrusion detection systems (IDS), firewalls, routers, and other components to cooperatively trace and block network intrusions as close to their sources as possible. By automating the manual attack traceback and mitigation procedures, this infrastructure allows networks to respond autonomically, addressing the drawbacks mentioned above.

CITRA and IDIP were initially developed before the advent of DDoS toolkits but were intended to protect networks against a broad spectrum of attacks. We have recently adapted CITRA and IDIP for DDoS protection and conducted experimental evaluations in a testbed environment. This paper describes the results of tests using these technologies to defend streaming multimedia sessions against the Stacheldraht DDoS toolkit.

## 2. Background
CITRA is based on IDIP, a protocol for reporting intrusion-related events and coordinating attack traceback and automated response actions. CITRA components are organized at two fundamental levels:
1. **CITRA Communities**: Administrative domains controlled by a management component called a Discovery Coordinator (DC).
2. **Neighborhoods**: Connected via boundary controllers (routers and firewalls). A CITRA neighborhood is the collection of CITRA-enabled devices that are adjacent, with no other CITRA nodes interposed between them.

CITRA utilizes the neighborhood structure to trace and respond to intrusions, with the DC monitoring and directing activities throughout the community. We are also developing features to support cooperation among multiple CITRA communities according to business relationships, including policy-based restrictions on the exchange of traceback and blocking services and the release and propagation of sensitive information.

CITRA-enabled devices collect network audit data used in traceback. If a CITRA-enabled detector detects an attack, it sends a traceback request to each CITRA neighbor. Each boundary controller and host along the potential path of an attack uses its network audit trail to determine if the packets associated with the attack passed through it. If so, the device sends a traceback request to its neighbors. This continues until the attack is traced back to the source or the edge of the CITRA system. This technique is immune to address spoofing because it relies on empirical (audit) data rather than IP source address fields.

At each CITRA component along the attack path, responses are taken in accordance with CITRA policy mechanisms. For example, at a CITRA-enabled firewall or router, the policy may specify that the service (port) being attacked should be blocked for all requests originating from the attacker’s address or network for a specified time. For CITRA-enabled hosts, the policy may specify that the offending process should be killed or the offending user’s account disabled. The current implementation attempts to use the "narrowest" network response that stops the current attack, minimizing the negative impact on legitimate system users.

Autonomous responses by individual components along the attack path are temporary, e.g., for two minutes, to stop damage immediately and buy time for the DC to formulate a more reasoned response. As detectors and CITRA devices respond to traceback requests, each device sends a report to the DC describing the responses it has taken. This enables the DC to gain a global view of how the attack and autonomic responses moved through the community. By combining this view with system topology information, the DC can determine an optimal community response, which it orchestrates by sending directives to each relevant CITRA platform in the community.

In addition, by collecting intrusion detection and response information at the DC, CITRA supports community-wide and cross-community aggregation and correlation of attacks.

CITRA and IDIP are supported by software libraries that facilitate the integration of existing components. Over the past several years, a variety of IDSs, boundary controllers, host-based responders, and other components have been integrated together, including commercial products and research prototypes.

## 3. Experiment: Autonomic Response to DDoS
Given the emergence of DDoS attacks as a critical risk, we sought to:
1. Investigate the capability of a CITRA-enabled network to defend itself against DDoS attacks.
2. Further explore the premise that these technologies are applicable to a wide range of network intrusions.

Although some DDoS traffic can be easily distinguished from legitimate traffic, this is not true in the general case. More sophisticated DDoS toolkits generate traffic that blends in with legitimate traffic and cannot be blocked by router packet filters without simultaneously blocking legitimate traffic. For such attacks, traffic rate limiting may be more useful than packet filtering. Rate limiting is an approximate mitigation strategy because it allows some DDoS traffic through and may inadvertently discard some legitimate traffic. However, if rate limiting parameters are chosen appropriately, it can often ensure that enough useful bandwidth is available for legitimate traffic to allow the continuation of critical business activities, albeit at reduced speeds.

With this in mind, we integrated a simple rate limiter function on CITRA-enabled Linux routers. The rate limiter utilized token bucket rate limiting services provided by the netfilter subsystem included in a recent release of the Linux kernel (2.4.0-test2).

### 3.1 Objective
The overall objective of the experiment was to provide evidence to support or refute the premise that CITRA and IDIP, as manifested in recent prototypes, can defend against DDoS attacks. Specifically, we sought to determine whether CITRA’s autonomic activation and upstream propagation of rate limiting could provide sufficient protection during a Stacheldraht v4 [7] attack to allow resumption of a representative, bandwidth-intensive network application. We chose Stacheldraht because it is representative of the DDoS hacker toolkits that emerged in early 2000. Stacheldraht can generate ICMP and UDP floods, TCP Syn floods, and Smurf attacks. It provides one or more master servers that issue commands to multiple distributed agents that serve as flooding sources. Master servers can target floods at arbitrary machines and ports, allowing us to configure a DDoS attack that is highly disruptive of streaming media sessions.

### 3.2 Test Application
We chose streaming audio/video as our representative application, using the RealNetworks’ RealSystem server and RealPlayer client. This application is one of the most widely used streaming media applications on the Internet. It provides several configuration parameters, including the choice of transport protocol (TCP, HTTP, or UDP) and audio/video encoding rates, which can be selected according to the available bandwidth between each client and the server. The RealPlayer client also provides real-time read-outs of targeted versus actual bandwidth in the form of line graphs or histograms, which we used to monitor the impact of DDoS attacks.

### 3.3 Experiment Topology and Scenario
The experiment topology is shown in Figure 2. The 100 Mbps hub in the center represents the Internet or the backbone of a large network, providing connectivity among five other subnets, each representing a different organization’s network. Each subnet is connected to the "Internet" via a CITRA-enabled Linux router. The network at the bottom center represents a server farm and network operations center, with the RealSystem server attached to this network and used as the DDoS attack's target. This configuration models highly-publicized recent DDoS attacks targeting internet-accessible web servers and their surrounding infrastructure. Figure 2 also shows the primary flow of traffic from the server to each client, with control channels flowing in the opposite direction. A CITRA-enabled network IDS, based on the public domain utility iplog, also resides on this network, along with the server community’s DC.

**Figure 2: Experiment Topology**

[Insert Figure 2 here]

This setup allowed us to conduct a comprehensive evaluation of CITRA and IDIP's effectiveness in defending against DDoS attacks, particularly in the context of streaming multimedia sessions.