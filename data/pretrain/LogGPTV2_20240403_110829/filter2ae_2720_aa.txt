**作者：whoam1  
本文为作者投稿，Seebug Paper 期待你的分享，凡经采用即有礼品相送！ 投稿邮箱：PI:EMAIL**
本文以`server08`为例，示例脚本以`powershell`为主
适用人群：运维、安全
`RDP`登录方式
  * 爆破登录：`多次登录失败`&`登录成功`
  * 管理员登录：账户密码、凭据
  * console模式登录
使用工具：
  * `wevtutil`
  * `LogParser`
  * `powershell`
  * `regedit`
## 一：取证
取证关键点：
  * `登录ip`
  * `登录ip端口`
  * `登录时间`
  * `登录客户端主机名`
  * `登录后操作日志`
  * `服务端敏感文件`
  * `服务端登录的服务器ip`
  * `服务端浏览器记录`
### 1.1 登录成功
`EventID=4624`，从安全日志中获取登录成功的客户端`登录ip`、`登录源端口`、`登录时间`等信息
#### 1.1.1 Security 线上分析
  * `LogParser`
    LogParser.exe -stats:OFF -i:EVT "SELECT TimeGenerated AS Date, EXTRACT_TOKEN(Strings, 8, '|') as LogonType, EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP, EXTRACT_TOKEN(Strings, 19, '|') AS Sport INTO RdpLoginSuccess.csv FROM Security WHERE EventID = '4624' AND SourceIP NOT IN ('';'-') AND LogonType = '10' ORDER BY timegenerated DESC" -o:CSV
  * `wevtutil`
    wevtutil qe Security /q:"*[System[Provider[@Name='Microsoft-Windows-Security-Auditing'] and (EventID=4624)] and EventData[(Data[@Name='LogonType']='10')]]"
  * `wevtutil + powershell`
`wevtutil epl Security ./Sec.evtx`
    function WinSuccEvent
    {
        [CmdletBinding()]
        Param (
            [string]$csv,
            [string]$evtx = $pwd.Path+"\Sec.evtx"
        )
        $time=Get-Date -Format h:mm:ss
        $evtx=(Get-Item $evtx).fullname
        $outfile=(Get-Item $evtx).BaseName+".csv"
        $logsize=[int]((Get-Item $evtx).length/1MB)
        write-host [+] $time Load $evtx "("Size: $logsize MB")" ... -ForegroundColor Green
        [xml]$xmldoc=WEVTUtil qe  $evtx /q:"*[System[Provider[@Name='Microsoft-Windows-Security-Auditing']  and (EventID=4624)] and EventData[Data[@Name='LogonType']='10']]" /e:root /f:Xml  /lf
        $xmlEvent=$xmldoc.root.Event
        function OneEventToDict {
            Param (
                $event
            )
            $ret = @{
                "SystemTime" = $event.System.TimeCreated.SystemTime | Convert-DateTimeFormat -OutputFormat 'yyyy"/"MM"/"dd HH:mm:ss';
                "EventRecordID" = $event.System.EventRecordID
                "EventID" = $event.System.EventID
            }
            $data=$event.EventData.Data
            for ($i=0; $i -lt $data.Count; $i++){
                $ret.Add($data[$i].name, $data[$i].'#text')
            }
            return $ret
        }
        filter Convert-DateTimeFormat
        {
          Param($OutputFormat='yyyy-MM-dd HH:mm:ss fff')
          try {
            ([DateTime]$_).ToString($OutputFormat)
          } catch {}
        }
        $time=Get-Date -Format h:mm:ss
        write-host [+] $time Extract XML ... -ForegroundColor Green
        [System.Collections.ArrayList]$results = New-Object System.Collections.ArrayList($null)
        for ($i=0; $i -lt $xmlEvent.Count; $i++){
            $event = $xmlEvent[$i]
            $datas = OneEventToDict $event
            $results.Add((New-Object PSObject -Property $datas))|out-null
        }
        $time=Get-Date -Format h:mm:ss
        $results | Select-Object SystemTime,IpAddress,IpPort,TargetDomainName,TargetUserName,EventRecordID
        if($csv){
            write-host [+] $time Dump into CSV: $outfile ... -ForegroundColor Green
            $results | Select-Object SystemTime,IpAddress,IpPort,TargetDomainName,TargetUserName,EventID,LogonType,EventRecordID | Export-Csv $outfile -NoTypeInformation -UseCulture  -Encoding Default -Force
        }
    }
#### 1.1.2 Security 离线分析
导出安全日志为：`Security.evtx`
  * `LogParser`
    LogParser.exe -stats:OFF -i:EVT "SELECT TimeGenerated AS Date, EXTRACT_TOKEN(Strings, 8, '|') as LogonType, EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP ,EXTRACT_TOKEN(Strings, 19, '|') AS Sport INTO RdpLoginSuccess.csv FROM Security.evtx WHERE EventID = '4624' AND SourceIP NOT IN ('';'-') AND LogonType = '10' ORDER BY timegenerated DESC" -o:CSV
  * `wevtutil`
    wevtutil qe ./Security.evtx /q:"*[System[(EventRecordID=1024)]]"  /e:root /f:xml
#### 1.1.3 `TerminalServices/Operational`
  * `RemoteConnectionManager` \- `EventID=1149`
    wevtutil qe Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational "/q:*[TerminalServices-LocalSessionManager[(EventID=1149)]]" /f:text /rd:true /c:1
过滤`id：1149`且仅显示存在`Param2`数据
    wevtutil epl Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational ./TerminalServices.evtx
    function TerminalServices {
        [CmdletBinding()]
        Param (
            [string]$csv,
            [string]$evtx = $pwd.Path+"./TerminalServices.evtx" 
        )
        $time=Get-Date -Format h:mm:ss
        $evtx=(Get-Item $evtx).fullname
        $outfile=(Get-Item $evtx).BaseName+".csv"
        $logsize=[int]((Get-Item $evtx).length/1MB)
        write-host [+] $time Load $evtx "("Size: $logsize MB")" ... -ForegroundColor Green
        [xml]$xmldoc=WEVTUtil qe $evtx /q:"*[System[Provider[@Name='Microsoft-Windows-TerminalServices-RemoteConnectionManager'] and (EventID=1149)]]" /e:root /f:Xml  /lf
        $xmlEvent=$xmldoc.root.Event
        write-host $xmlEvent.Count
        function OneEventToDict {
            Param (
                $event
            )
            Try {
                $CheckLoginStatus = $event.UserData.EventXML.Param2
                if ($CheckLoginStatus) {
                    $ret = @{
                        "SystemTime" = $event.System.TimeCreated.SystemTime | Convert-DateTimeFormat -OutputFormat 'yyyy"/"MM"/"dd HH:mm:ss';
                        "EventRecordID" = $event.System.EventRecordID
                        "EventID" = $event.System.EventID
                        "Param1" = $event.UserData.EventXML.Param1
                        "Param2" = $event.UserData.EventXML.Param2
                        "Param3" = $event.UserData.EventXML.Param3
                    }
                }
            }
            Catch {
                continue
            }
            return $ret
        }
        filter Convert-DateTimeFormat
        {
          Param($OutputFormat='yyyy-MM-dd HH:mm:ss fff')
          try {
            ([DateTime]$_).ToString($OutputFormat)
          } catch {}
        }
        $time=Get-Date -Format h:mm:ss
        write-host [+] $time Extract XML ... -ForegroundColor Green
        [System.Collections.ArrayList]$results = New-Object System.Collections.ArrayList($null)
        for ($i=0; $i -lt $xmlEvent.Count; $i++){
            $event = $xmlEvent[$i]
            $datas = OneEventToDict $event
            try {
                $results.Add((New-Object PSObject -Property $datas))|out-null
            }
            catch {
                continue
            }
        }
        $time=Get-Date -Format h:mm:ss
        $results | Select-Object SystemTime,Param1,Param2,Param3,EventRecordID
        if($csv){
            write-host [+] $time Dump into CSV: $outfile ... #-ForegroundColor Green
            $results | Select-Object SystemTime,Param1,Param2,Param3,EventRecordID | Export-Csv $outfile -NoTypeInformation -UseCulture  -Encoding Default -Force
        }
    }
同理：
  * `LocalSessionManager` \- `EventID:24/25`
    wevtutil epl Microsoft-Windows-TerminalServices-LocalSessionManager/Operational ./LocalSessionManager.evtx
  * `ClientActiveXCore` \- `EventID:1024`