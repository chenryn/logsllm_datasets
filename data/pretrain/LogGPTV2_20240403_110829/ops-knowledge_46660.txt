User: I have code
proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
stdout, stderr = proc.communicate()
I tried invalid commands assigning to cmd, but stderr always is Null
An invalid command like 'ls fds' returns 'ls: cannot access fds: No such file or directory'
But the message doesn't appear in neither stdout nor stderr.
Assistant: It sounds like you might be confusing stderr and the process's return code (available in proc.returncode after you've called proc.communicate()). stderr is the second output stream available to the process. It's generally used for printing error messages that shouldn't be mixed with the process's normal ("standard") output, but there's no rule that says it MUST be used for that purpose, or indeed that it MUST be used at all. And if you pass invalid commands to the cmd argument of Popen(), then stderr will never be used since no command actually gets run. If you're trying to get the error code (a numeric value) from the process, then proc.returncode is what you want.