### Describe your issue.
In the `cp310-macosx_arm64` test on cirrus-ci there are 14 failing tests in
scipy.stats.  
https://cirrus-ci.com/task/6051468460425216
### Reproducing Code Example
    Running the test suite
### Error message
    =================================== FAILURES ===================================
    _________________ test_stats_boost_ufunc[_beta_ppf-args1-0.5] __________________
    scipy/stats/tests/test_boost_ufuncs.py:41: in test_stats_boost_ufunc
        value = func(*args)
    E   RuntimeWarning: overflow encountered in _beta_ppf
            args       = [0.6875, 2.0, 3.0]
            expected   = 0.5
            func       = 
            rtol       = 3.814697265625e-06
            typ        = 
            type_char  = 'f'
            type_chars = ['f', 'd', 'g']
            type_sigs  = ['fff->f', 'ddd->d', 'ggg->g']
    ______________________ test_cont_basic[500-200-ncf-arg74] ______________________
    scipy/stats/tests/test_continuous_basic.py:162: in test_cont_basic
        check_cdf_ppf(distfn, arg, distname)
            arg        = (27, 27, 0.41578441799226107)
            distfn     = 
            distname   = 'ncf'
            m          = 1.0966313767196902
            n_fit_samples = 200
            rng        = RandomState(MT19937) at 0x14A668E40
            rvs        = array([0.90888841, 0.87523216, 0.73228753, 1.33584017, 0.93548576,
           1.09504212, 1.15670442, 0.36786914, 0.791225...03, 1.73540023, 0.87035866, 0.73702581, 0.81477748,
           0.87362182, 1.58673099, 1.88455316, 0.61564337, 1.09912842])
            sn         = 500
            v          = 0.2013794025952613
    scipy/stats/tests/test_continuous_basic.py:516: in check_cdf_ppf
        npt.assert_almost_equal(distfn.cdf(distfn.ppf(values, *arg), *arg),
            arg        = (27, 27, 0.41578441799226107)
            distfn     = 
            msg        = 'ncf'
            values     = [0.001, 0.5, 0.999]
    scipy/stats/_distn_infrastructure.py:2333: in ppf
        place(output, cond, self._ppf(*goodargs) * scale + loc)
            _a         = 0.0
            _b         = inf
            args       = (array(27), array(27), array(0.41578442))
            cond       = array([ True,  True,  True])
            cond0      = True
            cond1      = array([ True,  True,  True])
            cond2      = array([False, False, False])
            cond3      = array([False, False, False])
            goodargs   = [array([0.001, 0.5  , 0.999]), array([27, 27, 27]), array([27, 27, 27]), array([0.41578442, 0.41578442, 0.41578442])]
            kwds       = {}
            loc        = array([0, 0, 0])
            lower_bound = 0.0
            output     = array([nan, nan, nan])
            q          = array([0.001, 0.5  , 0.999])
            scale      = array([1, 1, 1])
            self       = 
            upper_bound = inf
    scipy/stats/_continuous_distns.py:6604: in _ppf
        return _boost._ncf_ppf(q, dfn, dfd, nc)
    E   RuntimeWarning: overflow encountered in _ncf_ppf
            dfd        = array([27, 27, 27])
            dfn        = array([27, 27, 27])
            nc         = array([0.41578442, 0.41578442, 0.41578442])
            q          = array([0.001, 0.5  , 0.999])
            self       = 
    ______________________ test_cont_basic[500-200-nct-arg75] ______________________
    scipy/stats/tests/test_continuous_basic.py:162: in test_cont_basic
        check_cdf_ppf(distfn, arg, distname)
            arg        = (14, 0.24045031331198066)
            distfn     = 
            distname   = 'nct'
            m          = 0.2543673273832776
            n_fit_samples = 200
            rng        = RandomState(MT19937) at 0x17F91B140
            rvs        = array([ 8.73534081e-01, -1.04204572e+00,  8.32185889e-01,  1.83689614e+00,
           -1.81244028e-01,  7.69549733e-01,  8...9293e+00,  8.20972491e-01, -7.63240067e-01,
            1.27150283e+00,  1.30239072e-01,  1.64179170e+00,  1.18497579e+00])
            sn         = 500
            v          = 1.1694163414603564
    scipy/stats/tests/test_continuous_basic.py:516: in check_cdf_ppf
        npt.assert_almost_equal(distfn.cdf(distfn.ppf(values, *arg), *arg),
            arg        = (14, 0.24045031331198066)
            distfn     = 
            msg        = 'nct'
            values     = [0.001, 0.5, 0.999]
    scipy/stats/_distn_infrastructure.py:2333: in ppf
        place(output, cond, self._ppf(*goodargs) * scale + loc)
            _a         = -inf
            _b         = inf
            args       = (array(14), array(0.24045031))
            cond       = array([ True,  True,  True])
            cond0      = True
            cond1      = array([ True,  True,  True])
            cond2      = array([False, False, False])
            cond3      = array([False, False, False])
            goodargs   = [array([0.001, 0.5  , 0.999]), array([14, 14, 14]), array([0.24045031, 0.24045031, 0.24045031])]
            kwds       = {}
            loc        = array([0, 0, 0])
            lower_bound = -inf
            output     = array([nan, nan, nan])
            q          = array([0.001, 0.5  , 0.999])
            scale      = array([1, 1, 1])
            self       = 
            upper_bound = inf
    scipy/stats/_continuous_distns.py:6800: in _ppf
        return _boost._nct_ppf(q, df, nc)
    E   RuntimeWarning: overflow encountered in _nct_ppf
            df         = array([14, 14, 14])
            nc         = array([0.24045031, 0.24045031, 0.24045031])
            q          = array([0.001, 0.5  , 0.999])
            self       = 
    _____________________ test_cont_basic[500-200-ncx2-arg76] ______________________
    scipy/stats/tests/test_continuous_basic.py:162: in test_cont_basic
        check_cdf_ppf(distfn, arg, distname)
            arg        = (21, 1.0560465975116415)
            distfn     = 
            distname   = 'ncx2'
            m          = 22.056046597511642
            n_fit_samples = 200
            rng        = RandomState(MT19937) at 0x17F91B240
            rvs        = array([24.18228087, 28.6893038 , 24.17456852, 14.84747842, 18.70623905,
           16.16763421,  9.29241683, 14.62038405, ...716689, 25.11697161, 27.96343751, 35.36238425,
           17.36403196, 25.81839268, 23.01798747, 22.53534591, 20.49078605])
            sn         = 500
            v          = 46.22418639004657
    scipy/stats/tests/test_continuous_basic.py:516: in check_cdf_ppf
        npt.assert_almost_equal(distfn.cdf(distfn.ppf(values, *arg), *arg),
            arg        = (21, 1.0560465975116415)
            distfn     = 
            msg        = 'ncx2'
            values     = [0.001, 0.5, 0.999]
    scipy/stats/_distn_infrastructure.py:2160: in cdf
        place(output, cond, self._cdf(*goodargs))
            _a         = 0.0
            _b         = inf
            args       = (array(21), array(1.0560466))
            cond       = array([ True,  True,  True])
            cond0      = True
            cond1      = array([ True,  True,  True])
            cond2      = array([False, False, False])
            dtyp       = dtype('float64')
            goodargs   = [array([ 6.77671634, 21.36270226, 49.09451392]), array([21, 21, 21]), array([1.0560466, 1.0560466, 1.0560466])]
            kwds       = {}
            loc        = array(0)
            output     = array([0., 0., 0.])
            scale      = array(1)
            self       = 
            x          = array([ 6.77671634, 21.36270226, 49.09451392])
    scipy/stats/_continuous_distns.py:6502: in _cdf
        return _lazywhere(cond, (x, df, nc), f=_boost._ncx2_cdf,
            cond       = array([ True,  True,  True])
            df         = array([21, 21, 21])
            nc         = array([1.0560466, 1.0560466, 1.0560466])
            self       = 
            x          = array([ 6.77671634, 21.36270226, 49.09451392])
    scipy/_lib/_util.py:69: in _lazywhere
        np.place(out, cond, f(*temp))
    E   RuntimeWarning: overflow encountered in _ncx2_cdf
            args       = [array([ True,  True,  True]), array([ 6.77671634, 21.36270226, 49.09451392]), array([21, 21, 21]), array([1.0560466, 1.0560466, 1.0560466])]
            arrays     = [array([ 6.77671634, 21.36270226, 49.09451392]), array([21, 21, 21]), array([1.0560466, 1.0560466, 1.0560466])]
            cond       = array([ True,  True,  True])
            f          = 
            f2         = . at 0x17f9825f0>
            fillvalue  = nan
            out        = array([nan, nan, nan])
            tcode      = 'd'
            temp       = (array([ 6.77671634, 21.36270226, 49.09451392]), array([21, 21, 21]), array([1.0560466, 1.0560466, 1.0560466]))
    ___________________ test_methods_with_lists[ncf-args75-ppf] ____________________
    scipy/stats/tests/test_continuous_basic.py:714: in test_methods_with_lists
        result = f(x, *shape2, loc=loc, scale=scale)
            args       = (27, 27, 0.41578441799226107)
            dist       = 
            distname   = 'ncf'
            f          = >
            loc        = [0, 0.1]
            method     = 'ppf'
            scale      = [1, 1.01]
            shape2     = [[27, 27], [27, 27], [0.41578441799226107, 0.41578441799226107]]
            x          = [0.1, 0.2]
    scipy/stats/_distn_infrastructure.py:2333: in ppf