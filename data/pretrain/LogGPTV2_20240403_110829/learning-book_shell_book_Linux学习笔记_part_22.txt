udpsck
rawsck
ip-frag
16:01:01
11
11
8
16:01:06
411
11
16:01:11
117
11
8
0
Average:
117
11
8
0
sar可以产生许多其他报告。我们有必要仔细阅读sar（1）手册页，查看是否有自己需要的其他报告
例二：使用命行sar -v t n
例如，每30秒采样一次，连续采样5次，观察核心表的状态，需键入如下命令：
# sar -v 30 5
屏幕显示：
SC0_SV scosysv 3. 2v5. 0.5 i80386 10/01/2001
10:33:23 proc-sz ov inod-sz ov filesz ov locksz
(v)
10:33:53 305/32101337/2764
01561/1706040/128
10:34:23 308/32101340/2764
01587/1706037/128
10:34:53 305/ 32101332/2764
01565/1706036/128
10:35:23 308/ 32101338/2764
01592/1706037/128
10:35:53 308/32101335/2764
01591/1706037/128
显示内容包括：
proc-Sz：目前核心中正在使用或分配的进程表的表项数，由核心参数MAX-PROC控制。
inod-sz：目前核心中正在使用或分配的i节点表的表项数，由核心参数MAX-INODE控制。
file-Sz：目前核心中正在使用或分配的文件表的表项数，由核心参数MAX-FILE控制。
ov：溢出出现的次数。
Lock-Sz：目前核心中正在使用或分配的记录加锁的表项数，由核心参数MAX-FLCKRE控制。
显示格式为
实际使用表项/可以使用的表项数
显示内容表示，核心使用完全正常，三个表没有出现溢出现象，核心参数不需调整，如果出现溢出
时，要调整相应的核心参数，将对应的表项数加大。
---
## Page 90
例三：使用命行sar-dtn
例如，每30秒采样一次，连续采样5次，报告设备使用情况，需键入如下命令：
# sar -d 30 5
屏幕显示：
SC0_SV scosysv 3. 2v5. 0. 5 i80386 10/01/2001
11:06:43 device
%busy
avque
r+u/s
b1ks/s
avwait avserv (d)
11:07 : 13 wd0
1. 47
2. 75
4. 67
14. 73
5. 50 3. 14
11:07 :43 wd0
0. 43
18. 77
3. 07
8. 66
25. 11 1. 41
11:08:13 wd0
0. 77
2. 78
2. 77
7. 26
4. 94 2. 77
11:08:43 wd0
1. 10
11. 18
4. 10
11. 26
27. 32 2.68
11:09:13 wd0
1. 97
21. 78
5. 86
34. 06
69. 66 3. 35
Average wd0
1. 15
12. 11
4. 09
15. 19
31. 12 2. 80
显示内容包括：
device：sar命令正在监视的块设备的名字。
%busy:
设备忙时，传送请求所占时间的百分比。
avque:
队列站满时，未完成请求数量的平均值。
r+w/s:
每秒传送到设备或从设备传出的数据量。
b1ks/s:
每秒传送的块数，每块512字节。
avwait:
队列占满时传送请求等待队列空闲的平均时间。
avserv:
完成传送请求所需平均时间（毫秒）。
在显示的内容中，wd-0是硬盘的名字，%busy的值比较小，说明用于处理传送请求的有效时间太少，
文件系统效率不高，
一般来讲，%busy值高些，avque值低些，文件系统的效率比较高，如果%busy和
avque值相对比较高，说明硬盘传输速度太慢，需调整。
例四：使用命行 sar -b t n
例如，每30秒采样一次，连续采样5次，报告缓冲区的使用情况，需键入如下命令：
S oC q res #
屏幕显示：
SO0_SV scosysv 3. 2v5. 0. 5 i80386 10/01/2001
14:54:59 bread/s lread/s %rcache bwrit/s 1writ/s %wcache pread/s pwrit/s (b)
14: 55:29
147
001
5
21
78
0
0
14: 55 : 59
0
186
100
5
25
79
0
---
## Page 91
14: 56: 29
4
232
98
8
89
86
0
14: 56 :59
0
125
100
5
23
76
0
0
14: 57 :29
0
68
100
4
12
66
0
0
Average
1
156
99
5
28
80
0
0
显示内容包括：
bread/s:
每秒从硬盘读入系统缓冲区buffer的物理块数。
lread/s:
平均每秒从系统buffer读出的逻辑块数。
%rcache:
在buffer cache 中进行逻辑读的百分比。
bwrit/s:
平均每秒从系统buffer向磁盘所写的物理块数。
1writ/s:
平均每秒写到系统buffer逻辑块数。
%wcache:
在buffer cache中进行逻辑读的百分比。
pread/s:
平均每秒请求物理读的次数。
purit/s:
平均每秒请求物理写的次数。
在显示的内容中，最重要的是%cache和%wcache两列，它们的值体现着buffer的使用效率，%rcache
的值小于90或者%rcache的值低于65，应适当增加系统buffer的数量，buffer数量由核心参数NBUF
控制，使%rcache达到90左右，%wcache 达到80左右。但buffer参数值的多少影响I/0效率，增加
buffer，应在较大内存的情况下，否则系统效率反而得不到提高。
例五：使用命行 sar-gtn
例如，每30秒采样一次，连续采样5次，报告串口1/0的操作情况，需键入如下命令：
S oc ares #
屏幕显示：
SC0_SV scosysv 3. 2v5. 0. 5 i80386
11/22/2001
17:07:03
ovsiohw/s
ovsiodma/s
ovc1ist/s (g)
17: 07:33
0. 00
0. 00
0. 00
17 : 08 : 03
0. 00
0. 00
0. 00
17 : 08 : 33
0. 00
00 °0
0. 00
17: 09:03
0. 00
0. 00
0. 00
17:09 :33
0. 00
0. 00
0. 00
Average
0. 00
0. 00
0. 00
显示内容包括：
ovsiohw/s：每秒在串口I/0硬件出现的溢出。
ovsiodma/s：每秒在串口I/0的直接输入输出通道高速缓存出现的溢出。
---
## Page 92
ovclist/s：每秒字符队列出现的溢出。
在显示的内容中，每一列的值都是零，表明在采样时间内，系统中没有发生串口1/0溢出现象。
sar命令的用法很多，有时判断一个间题，需要几个sar命令结合起来使用，比如，怀疑CPU存在
瓶颈，可用 sar -u 和 sar -q来看，怀疑 I/0存在瓶颈，可用 sar -b、sar -u和 sar-d来看。
Sar
-A 所有的报告总和
-a文件读，写报告
-B 报告附加的 buffer cache 使用情况
-b buffer cache 使用情况
-c系统调用使用报告
-d硬盘使用报告
-g 有关串口1/0情况
-h关于buffer使用统计数字
-mIPC 消息和信号灯活动
-n 命名 cache
-p调页活动
-q运行队列和交换队列的平均长度
-R报告进程的活动
-r没有使用的内存页面和硬盘块
-u CPU 利用率
-v进程，i节点，文件和锁表状态
-系统交换活动
-y TTY 设备活动
-a报告文件读，写报告
sar -a 5 5
SC0_SV scosvr 3. 2v5. 0. 5 PentII (D) ISA 06/07/2002
11 : 45: 40 iget/s namei /s dirbk/s (a)
11:45:45 6 2 2
11:45:50 91 20 28
11:45:55 159 20 18
11:46:00 157 21 19
11:46:05 177 30 35
Average 118 18 20
iget/s每秒由i节点项定位的文件数量
namei/s每秒文件系统路径查询的数量
dirbk/s每秒所读目录块的数量
---
## Page 93
*这些值越大，表明核心花在存取用户文件上的时间越多，它反映着一些程序和应用文件系统产生
的负荷。一般地，如果iget/s与namei/s的比值大于5，并且namei/s的值大于30，则说明文件系统
是低效的。这时需要检查文件系统的自由空间，看看是否自由空间过少。
-b 报告缓冲区（buffer cache）的使用情况
sar -b 2 3
SCO_SV scosvr 3. 2v5. 0. 5 PentII (D) ISA 06/07/2002
13:51:28 bread/s 1read/s %rcache bwrit/s 1writ/s %wcache pread/s pwrit/s (b)
13:51:32 378 516 27 6 22 72 0 0
13:51:34 172 323 47 39 57 32 0 0
Average 310 739 58 58 117 50 0 0
bread/s平均每秒从硬盘（或其它块设备）读入系统buffer的物理块数
lread/s平均每秒从系统buffer读出的逻辑块数