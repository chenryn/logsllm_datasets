s
r
e
t
s
u
l
C
r
a
l
u
p
o
P
t
s
o
M
5
f
o
e
z
i
S
70
60
50
40
30
20
10
0
Figure 1: The ﬁve most popular clusters (in terms of size,
i.e., # of times selected), and # of popular clusters (size ≥ 5).
Results are from 32-40 users, depending on the image, for the
ﬁnal passwords created on each image. For pcb, which shows
only 6 clusters of size ≥ 5, the size of clusters 2-5 become 5,
5, 4, and 3 when counting at most one click from each user.
“probability” pj (based on our user data set) of the clus-
ter j being clicked, as cluster size divided by total clicks
observed. When the probability pj of a certain cluster
is sufﬁciently high, we can place a conﬁdence interval
around it for future populations (of users who are similar
in background to those in our study) using (1) as dis-
cussed below.
Each probability pj estimates the probability of a
cluster being clicked for a single click. For 5-click
passwords, we approximate the probability that a user
chooses cluster j in a password by Pj = 5×pj. Note that
the probability for a cluster j increases slightly as other
clicks occur (due to the constraint of 5 distinct clusters
in a password); we ignore this in our present estimate of
Pj.
Our results in Figure 1 indicate a signiﬁcant number of
hot-spots for our sample of the full population (32 − 40
users per image). Previous “conservative” assumptions
[47] were that half of the available alphabet of T-regions
would be used in practice – or 207 in our case. If this
were the case, and all T-regions in the alphabet were
equi-probable, we would expect to see some clusters of
size 2, but none of size 3 after 40 participants; we ob-
served signiﬁcantly more on all 17 images. Figure 1
shows that some images were clearly worse than others.
There were many clusters of size at least 5, and some
as large as 16 (see tea image).
If a cluster in our lab
study received 5 or more clicks – in which case we call it
a popular or high-probability cluster – then statistically,
r pq
this allows determination of a conﬁdence interval, using
Equation (1) which provides the 100(1−α)% conﬁdence
interval for a population proportion [9, page 288].
p ± zα/2
n
(1)
Here n is the total number of clicks (i.e., ﬁve times the
number of users), p takes the role of pj, q = 1 − p,
and zα/2 is from a z-table. A conﬁdence interval can be
placed around pj (and thus Pj) using (1) when np ≥ 5
and nq ≥ 5. For clusters of size k ≥ 5, p = k
n, then
np = k and nq = n − k. In our case, n ≥ 32 · 5 and
n − k ≥ 5, as statistically required to use (1).
Table 1 shows these conﬁdence intervals for four im-
ages, predicting that in future similar populations many
of these points would be clicked by between 10-50% of
users, and some points would be clicked by 20-60% of
users with 95% conﬁdence (α = .05). For example,
in Table 1(a), the ﬁrst row shows the highest frequency
cluster (of size 13); as our sample for this image was only
35 users, we observed 37.1% of our participants choos-
ing this cluster. Using (1), between 17.7% and 56.6% of
users from future populations are expected to choose this
same cluster (with 95% conﬁdence).
Figure 1 and Table 1 show the popularity of the hottest
clusters; Figure 1’s line also shows the number of pop-
ular clusters. The clustering effect evident in Figures 1,
2, and Table 1 clearly establishes that hot-spots are very
prominent on a wide range of images. We further pursue
how these hot-spots impact the practical security of full
5-click passwords in Section 4.2. As a partial summary,
our results suggest that many images have signiﬁcantly
more hot-spots than would be expected if all T-regions
were equi-probable. The paperclips, cars, faces, and tea
images are not as susceptible to hot-spotting as others
(e.g., mural, truck, and philadelphia). For example, the
cars image had only 4 clusters of size at least 5, and only
one with frequency at least 10. The mural image had 15
clusters of size at least 5, and 3 of the top 5 frequency
clusters had frequency at least 10. Given our sample size
for the mural image was only 36 users, these clusters are
quite popular. This demonstrates the range of effect the
background image can have (for the images studied).
Although previous work [46] suggests using intuition
for choosing more secure background images (no further
detail was provided), our results apparently show that in-
tuition is not a good indicator. Of the four images used
in other click-based graphical passwords studies, three
showed a large degree of clustering (pool, mural, and
philadelphia). Furthermore, two other images that we
“intuitively” believed would be more secure background
images were among the worst (truck and citymap-nl).
The truck image had 10 clusters of size at least 5, and the
top 5 clusters had frequency at least 13. Finding reliable
automated predictors of more secure background images
106
16th USENIX Security Symposium
USENIX Association
(a) pool (originally from [46, 47]; see Appendix A).
(b) mural (originally from [46]; see Appendix A).
(c) philadelphia (originally from [46]; see Figure 5).
(d) truck (originally from [12]).
Figure 2: Observed click-points. Halo diameters are 10 times the size of the underlying cluster, illustrating its popularity.
(a) pool image
Pj
0.371
0.343
0.343
0.314
0.314
95% CI (Pj)
(0.177; 0.566)
(0.156; 0.530)
(0.156; 0.530)
(0.134; 0.494)
(0.134; 0.494)
Cluster
size
13
12
12
11
11
(c) philadelphia image
Cluster
size
10
10
9
9
7
Pj
0.286
0.286
0.257
0.257
0.200
95% CI (Pj)
(0.114; 0.458)
(0.114; 0.458)
(0.094; 0.421)
(0.094; 0.421)
(0.055; 0.345)
(b) mural image
Pj
0.400
0.371
0.286
0.229
0.200
95% CI (Pj)
(0.199; 0.601)
(0.177; 0.566)
(0.114; 0.458)
(0.074; 0.383)
(0.055; 0.345)
(d) truck image
Pj
0.429
0.400
0.371
0.371
0.371
95% CI (Pj)
(0.221; 0.636)
(0.199; 0.601)
(0.177; 0.566)
(0.177; 0.566)
(0.177; 0.566)
Cluster
size
14
13
10
8
7
Cluster
size
15
14
13
13
13
Table 1: 95% conﬁdence intervals for the top 5 clusters found in each of four images. The conﬁdence intervals are for the
percentage of users expected to choose this cluster in future populations.
USENIX Association
16th USENIX Security Symposium
107
remains an open problem. Our preliminary work with
simple measures (image segmentation, corner detection,
and image contrast measurement) does not appear to of-
fer reliable indicators. Thus, we next explore the impact
of hot-spotting across images to help choose two images
for further analysis.
3.2 Measurement and Comparison of Hot-
Spotting for Different Images
To compare the relative impact of hot-spotting on each
image studied, we calculated two formal measures of
password security for each image: entropy H(X), in
equation (2), and in equation (3), the expected number
of guesses E(f (X)) to correctly guess a password as-
suming the attacker knows the probabilities wi > 0 for
each password i. The relationship between H(X) and
E(f (X)) for password guessing is discussed by Massey
[26]. Of course in general, the wi are unknown, and our
study gives only very coarse estimates; nonetheless, we
ﬁnd it helpful to use this to develop an estimate of which
images will have the least impact from hot-spotting. For
(2) and (3), n is the number of passwords (of probability
> 0), random variable X ranges over the passwords, and
wi = P rob(X = xi) is calculated as described below.
H(X) = −
wi · log(wi)
nX
(2)
(3)
E(f (X)) =
nX
i=1
i=1
i · wi
, where wi ≥ wi+1, and
We deﬁne C V
f (X) is the number of guesses before success. We calcu-
late these measures based on our observed user data. For
this purpose, we assume that users will choose from a set
of click-points (following the associated probabilities),
and combine 5 of them randomly. This assumption al-
most certainly over-estimates both E(f (X)) and H(X)
relative to actual practice, as it does not consider click-
order patterns or dependencies. Thus, popular clusters
likely reduce security by more than we estimate here.
to be the set of all 5-permutations
derivable from the clusters observed in our user study
(as computed in Section 3.1). Using the probabilities
pj of each cluster, the probabilities wi of each pass-
word in C V
are computed as follows. Pick a combi-
nation of 5 observed clusters j1, . . .
, j5 with respec-
tive probabilities pj1, . . . , pj5. For each permutation of
these clusters, calculate the probability of that permuta-
tion occurring as a password. Due to our instructions
that no two click-points in a password can fall in the
same T-region, these probabilities change as each point
is clicked. Thus, for password i = (j1, j2, j3, j4, j5),
wi = pj1·[pj2/(1−pj1)]·[pj3/((1−pj1)·(1−pj2))]·. . .).
is a set of click-based graphical
passwords (with associated probabilities) that coarsely
The resulting set C V
approximates the effective password space if the clusters
observed in our user study are representative of those in
larger similar populations. We can order the elements of
C V
using the probabilities wi based on our user study.
An ordered C V
could be used as the basis of an attack
dictionary; this ordering could be much improved, for
example, by exploiting expected patterns in click-order.
See Section 4.2 for more details.
For comparison to previous “conservative” estimates
that simply half of the available click-points (our T-
regions) would be used in practice [47], we calculate C U
.
We compare to C U
as it is a baseline that approximates
what we would expect to see after running 32 users (the
lowest number of users we have for any image), if pre-
vious estimates were accurate, and T-regions were equi-
probable. C U
is the set of all permutations of clusters
we expect to ﬁnd after observing 32 users, assuming a
uniformly random alphabet of size 207.
Fig. 3 depicts the entropy and expected number of
guesses for C V
. Notice the range between images, and
the drop in E(f (X)) from C U
. Com-
parison to the marked C U
values for (1) H(X) and (2)
E(f (X)) indicates that previous rough estimates are a
security overestimate for practical security in all images,
some much more so than others. This is at least partially
due to click-points not being equi-probable in practice
(as illustrated by hot-spots), and apparently also due to
the previously suggested effective alphabet size (half of
the full alphabet) being an overestimate. Indeed, a large
alphabet is precisely the theoretical security advantage
that these graphical passwords have over text passwords.
If the effective alphabet size is not as large as previously
expected, or is not well-distributed, then we should re-
duce our expectations of the security.
to values of C V
These results appear to provide fair approximation
of the entropy and expected number of guesses for the
larger set of users in the ﬁeld study; we performed
these same calculations again using the ﬁeld study data.
For both of the two images, the entropy measures were
within one bit of values measured here (less than a bit
higher for pool, and about one bit lower for cars). The
number of expected guesses increased for both images
(by 1.3 bits for cars, and 2.5 bits for pool).
The variation across all images shows how much of an
impact the background image can be, even when using
images that are “intuitively” good. For example, the im-
age that showed the most impact from hot-spotting was
the mural image, chosen for an earlier PassPoints usabil-
ity study [46]. We note that the paperclips image scores
best in the charted security measures (its H(X) mea-
sure is within a standard deviation of C U
); however, 8
of 36 users who created a password on this image could
not perform the subsequent login (and skipped it – as
noted earlier), so the data for this image represents some
108
16th USENIX Security Symposium
USENIX Association
45
40
35
30
25
20
15
10
5
0
H(X) for CV
E(f(X)) for CV
(1)
(2)
m
tru
p
ural
c
k
hila
erclips
p
city
city
c
orinthia
o
ol
m
d
a
elp
p-nl
hia