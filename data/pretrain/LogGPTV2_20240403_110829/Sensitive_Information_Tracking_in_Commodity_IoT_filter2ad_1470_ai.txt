E
e
e
b
g
i
Z
t
e
g
)
(
d
I
e
e
b
g
i
Z
t
e
g
)
(
s
t
n
e
v
e
)
(
n
e
e
w
t
e
B
s
t
n
e
v
e
)
(
s
e
i
t
i
l
i
b
a
p
a
C
t
e
g
)
(
e
c
n
i
S
s
t
n
e
v
e
)
(
d
I
k
r
o
w
t
e
N
e
c
i
v
e
D
t
e
g
)
(
e
m
a
N
y
a
l
p
s
i
D
t
e
g
)
(
l
e
b
a
L
t
e
g
)
(
b
u
H
t
e
g
)
(
e
m
a
N
r
e
r
u
t
c
a
f
u
n
a
M
t
e
g
)
(
e
m
a
N
l
e
d
o
M
t
e
g
s
e
i
t
i
l
i
b
a
p
a
c
.
e
m
a
N
e
c
i
v
e
d
)
(
y
t
i
v
i
t
c
A
t
s
a
L
t
e
g
)
(
e
m
a
N
e
p
y
T
t
e
g
)
(
d
e
l
b
a
n
E
k
o
o
B
t
c
a
t
n
o
C
t
e
g
)
(
e
d
o
M
t
n
e
r
r
u
C
t
e
g
)
(
e
d
u
t
i
g
n
o
L
t
e
g
)
(
e
d
u
t
i
t
a
L
t
e
g
)
(
e
d
o
M
t
e
g
)
(
e
d
o
M
t
e
s
)
(
e
n
o
Z
e
m
T
t
e
g
i
)
(
e
d
o
C
p
i
Z
t
e
g
)
(
d
I
n
o
i
t
a
c
o
L
t
e
g
)
(
n
o
i
t
a
c
o
L
t
e
g
)
(
s
b
u
H
t
e
g
)
(
d
I
t
e
g
n
o
i
t
a
m
r
o
f
n
I
e
c
i
v
e
D
s
e
i
t
i
l
i
b
a
p
a
c
g
n
i
y
l
r
e
d
n
u
r
i
e
h
t
o
t
n
i
s
e
c
i
v
e
d
t
c
a
r
t
s
b
a
o
t
s
w
o
l
l
A
>
e
t
u
b
i
r
t
t
a
r
o
e
p
y
t
.
e
c
i
v
e
d
<
y
i
t
i
l
i
b
a
p
a
c
n
o
i
t
i
n
ﬁ
e
D
e
c
a
f
r
e
t
n
i
e
h
t
f
o
e
m
a
N
n
o
i
t
i
n
ﬁ
e
D
e
c
a
f
r
e
t
n
i
e
h
t
f
o
e
m
a
N
.
]
0
2
[
e
g
a
p
t
c
e
j
o
r
p
r
u
o
n
i
d
e
s
s
e
c
c
a
e
b
n
a
c
t
s
i
l
e
t
e
l
p
m
o
c
e
h
T
.
s
I
P
A
e
c
r
u
o
s
-
t
n
i
a
t
s
g
n
i
h
T
t
r
a
m
S
:
2
e
l
b
a
T
USENIX Association
27th USENIX Security Symposium    1703
App Category
Lifecycle
ID/App Name
1- Multiple Entry Points 1
2- Multiple Entry Points 2
Field Sensitivity
3- State Variable 1
Closure
4- Leaking via Closure
Reﬂection
Device Objects
Permissions
Multiple Leaks
Side Channel
5- Call by Reﬂection 1
6- Call by Reﬂection 2
7- Call by Reﬂection 3
8- Multiple Devices 1
9- Multiple Devices 2
10- Multiple Devices 3
11- Implicit 1
12- Implicit 2
13- Explicit
14- Explicit-Implicit
15- Multiple Leaks 1
16- Multiple Leaks 2
17- Multiple Leaks 3
18- Side Channel 1
19- Side Channel 2
App Description‡
The app stores different sensitive data under the same vari-
able name in different functions and only one of them is
leaked.
The app stores different sensitive data under the same vari-
able name in different functions and more than one piece
of data is leaked.
A state variable in the state object’s ﬁeld stores sensitive
data. It is used in different functions and leaked through
various sinks.
A variable is tainted with the use of closures. The sensitive
data is then leaked via different sinks.
A string is requested via Http Get interface and the string
is used to invoke a method. One of the app methods leaks
device information.
A string is used to invoke a method via call by reﬂection.
A method leaks the state of a door.
A string is used to invoke a method via call by reﬂection.
A method leaks the mode of a user.
Various sensitive data is obtained from different devices
and leaked via different sinks.
Sensitive data from various devices is tainted and leaked
via different sinks.
A taint source is obtained from device state and device
information and they are leaked via messaging services.
A malicious URL is hard-coded, and device states (implicit
permission) are leaked to the hard-coded URL.
A hard-coded phone number leaks the user inputs (implicit
permission).
The hub ID (explicit permission) and state variables are
leaked to a hard-coded phone number.
A phone number is hard-coded to leak device information
(implicit permission) and hub id (explicit permission).
Various sensitive data obtained from the state of the devices
and user inputs are leaked via same sink interface.
Various sensitive data is obtained from device states and
user inputs, and they are leaked via the Internet and mes-
saging sinks.
Various sensitive data is obtained from state variables and
devices, and they are leaked via more than one hard-coded
contact information.
A device is misused to leak information (e.g., turning on/-
turning off a light to signal adversary).
A device operating in a speciﬁc pattern causes other con-
nected devices to trigger malicious activities.
Results†
"
"
"
"
O
X
X
"
"
"
"
"
"
"
"
"
"
!
!
Table 3: Description of IOTBENCH test suite apps and SAINT’s results.
‡ 19 apps leak 27 sensitive data. We provide a comment block in the source code of each app that gives a detailed description
of the leaks including the line number of the leaks and the ground truths.
† "= True Positive, X = False Positive, O = Dynamic analysis required, ! = Not considered in attacker model
1704    27th USENIX Security Symposium
USENIX Association