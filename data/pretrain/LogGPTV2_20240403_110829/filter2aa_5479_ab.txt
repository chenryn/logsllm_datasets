| Shortcut       | Description                       |
|----------------|-----------------------------------|
| `:tabe [file]` | Edit file in a new tab |
| `:tabf [file]` | Open if exists in new tab         |
| `:tabc`        | Close current tab      |
| `:tabo`        | Close other tabs       |
| `:tabs`        | List all tabs          |
| `:tabr`        | Go to first tab        |
| `:tabl`        | Go to last tab         |
| `:tabm 0`      | Move to position `0`   |
| `:tabn`        | Go to next tab         |
| `:tabp`        | Go to previous tab     |
#### Normal mode
| Shortcut | Description                   |
|----------|-------------------------------|
| `gt`     | Go to next tab     |
| `gT`     | Go to previous tab |
| `2gt`    | Go to tab number `2`          |
{.shortcuts}
Vim Search and Replace
------------------
### Search
| -        | -                                   |
|----------|-------------------------------------|
| `/foo`   | Search forward                      |
| `/foo\c` | Search forward _(case insensitive)_ |
| `?foo`   | Search backward                     |
| `/\v\d+` | Search with [regex](/regex)         |
| `n`      | Next matching search pattern        |
| `N`      | Previous match                      |
| `*`      | Search for current word forward     |
| `#`      | Search for current word backward    |
{.shortcuts}
### Replace LINE
```vim
:[range]s/{pattern}/{str}/[flags]
```
---
|                   |                                  |
|-------------------|----------------------------------|
| `:s/old/new`      | Replace first                    |
| `:s/old/new/g`    | Replace all                      |
| `:s/\vold/new/g`  | Replace all with [regex](/regex) |
| `:s/old/new/gc`   | replace all _(Confirm)_          |
| `:s/old/new/i`    | Ignore case replace first        |
| `:2,6s/old/new/g` | Replace between lines `2`-`6`    |
### Replace FILE
```vim
:%s/{pattern}/{str}/[flags]
```
---
|                   |                                  |
|-------------------|----------------------------------|
| `:%s/old/new`     | Replace first                    |
| `:%s/old/new/g`   | Replace all                      |
| `:%s/old/new/gc`  | Replace all _(Confirm)_          |
| `:%s/old/new/gi`  | Replace all _(ignore case)_      |
| `:%s/\vold/new/g` | Replace all with [regex](/regex) |
### Ranges {.row-span-2}
| -       | -                 |
|---------|-------------------|
| `%`     | Entire file       |
| `â€™` | Current selection |
| `5`     | Line `5`          |
| `5,10`  | Lines `5` to `10` |
| `$`     | Last line         |
| `2,$`   | Lines `2` to Last |
| `.`     | Current line      |
| `,3`    | Next `3` lines    |
| `-3,`   | Forward `3` lines |
### Global command {.row-span-2}
```vim
:[range]g/{pattern}/[command]
```
---
|              |                                    |
|--------------|------------------------------------|
| `:g/foo/d`   | Delete lines containing `foo`      |
| `:g!/foo/d`  | Delete lines not containing `foo`  |
| `:g/^\s*$/d` | Delete all blank lines             |
| `:g/foo/t$`  | Copy lines containing `foo` to EOF |
| `:g/foo/m$`  | Move lines containing `foo` to EOF |
| `:g/^/m0`    | Reverse a file                     |
| `:g/^/t.`    | Duplicate every line               |
### Inverse :g
```vim
:[range]v/{pattern}/[command]
```
---
|            |                                                            |
|------------|------------------------------------------------------------|
| `:v/foo/d` | Delete lines not containing `foo`_(also `:g!/foo/d`)_ |
### Flags
| -   | -                         |
|-----|---------------------------|
| `g` | Replace all occurrences   |
| `i` | Ignore case               |
| `I` | Don't ignore case         |
| `c` | Confirm each substitution |
### Substitute expression (magic)
| -             | -                                |
|---------------|----------------------------------|
| `&` _\|_ `\0` | Replace with the whole matched   |
| `\1`...`\9`   | Replace with the group 0-9       |
| `\u`          | Uppercase next letter            |
| `\U`          | Uppercase following characters   |
| `\l`          | Lowercase next letter            |
| `\L`          | Lowercase following characters   |
| `\e`          | End of `\u`, `\U`, `\l` and `\L` |
| `\E`          | End of `\u`, `\U`, `\l` and `\L` |
### Examples {.col-span-2}
```c {.wrap}
:s/a\|b/xxx\0xxx/g		         # Modifies "a b"      to "xxxaxxx xxxbxxx"
:s/test/\U& file/                # Modifies "test"     to "TEST FILE"
:s/\(test\)/\U\1\e file/         # Modifies "test"     to "TEST file"
:s/\v([abc])([efg])/\2\1/g	     # Modifies "af fa bg" to "fa fa gb"
:s/\v\w+/\u\0/g		             # Modifies "bla bla"  to "Bla Bla"
:s/\v([ab])|([cd])/\1x/g         # Modifies "a b c d"  to "ax bx x x"
:%s/.*/\L&/                      # Modifies "HTML"     to "html"
:s/\v/\U&/g        # Convert HTML-Tags to uppercase
:g/^pattern/s/$/mytext           # Find and append text to the end
:g/pattern/norm! @i              # Run a macro on matching lines
/^\(.*\)\(\r\?\n\1\)\+$          # View the duplicates lines
/\v^(.*)(\r?\n\1)+$              # View the duplicates lines (very magic)
:v/./,/./-j                      # Compress blank lines into a blank line
:g//,//d                 # Delete inclusively from  to 
```
Vimdiff
-------
### Usage {.secondary}
```shell script
$ vimdiff file1 file2 [file3]
$ vim -d file1 file2 [file3]
```
### Editing {.row-span-2}
```
:[range]diffget [bufspec]
:[range]diffput [bufspec]
```
---
| Shortcut            | Description             |
|---------------------|-------------------------|
| `do` _/_ `:diffget` | Obtain (get) difference |
| `dp` _/_ `:diffput` | Put difference          |
| `:dif`              | Re-scan differences     |
| `:diffo`            | Switch off diff mode    |
| `:1,$+1diffget`     | Get all differences     |
| `ZQ`                | Quit without changes    |
{.shortcuts}
See: [Ranges](#ranges)
### Folds {.row-span-2}
| Shortcut      | Description                  |
|---------------|------------------------------|
| `zo` _/_ `zO` | Open                         |
| `zc` _/_ `zC` | Close                        |
| `za` _/_ `zA` | Toggle                       |
| `zv`          | Open folds for this line     |
| `zM`          | Close all                    |
| `zR`          | Open all                     |
| `zm`          | Fold more _(foldlevel += 1)_ |
| `zr`          | Fold less _(foldlevel -= 1)_ |
| `zx`          | Update folds                 |
{.shortcuts}
### Jumping
| Shortcut | Description         |
|----------|---------------------|
| `]c`     | Next difference     |
| `[c`     | Previous difference |
{.shortcuts}
Miscellaneous
-------------
### Case {.row-span-2}
| Shortcut       | Description             |
|----------------|-------------------------|
| `vU`           | _Uppercase_ character   |
| `vu`           | _Lowercase_ character   |
| `~`            | _Toggle case_ character |
| `viw` `U`      | _Uppercase_ word        |
| `viw` `u`      | _Lowercase_ word        |
| `viw` `~`      | _Toggle case_ word      |
| `VU` _/_ `gUU` | _Uppercase_ line        |
| `Vu` _/_ `guu` | _Lowercase_ line        |
| `V~` _/_ `g~~` | _Toggle case_ line      |
| `gggUG`        | _Uppercase_ all text    |
| `ggguG`        | _Lowercase_ all text    |
| `ggg~G`        | _Toggle case_  all text |
{.shortcuts}
### Jumping
| Shortcut | Description              |
|----------|--------------------------|
| ``  | Go back to previous      |
| ``  | Go forward               |
| `gf`     | Go to file in cursor     |
| `ga`     | Display hex, ascii value |
{.shortcuts}
### Misc command-lines {.row-span-2}
| -              | -                                          |
|----------------|--------------------------------------------|
| `:h`           | Help open help view                        |
| `:edit!`       | Reload current file                        |
| `:2,8m0`       | Move lines `2`-`8` to `0`                  |
| `:noh`         | Clear search highlights                    |
| `:sort`        | Sort lines                                 |
| `:ter`         | Open a terminal window                     |
| `:set paste`   | Enable Insert Paste sub-mode               |
| `:set nopaste` | disable Insert Paste sub-mode              |
| `:cq`          | Exiting with an error_(aborting Git)_ |
### Navigating
| Shortcut                 | Description               |
|--------------------------|---------------------------|
| `%`                      | Nearest/matching `{[()]}` |
| `[(` _\|_ `[{`           | Previous `(` or `{`       |
| `])` _\|_ `]{`           | Next `)` or `}`           |
| `[m`                     | Previous method start     |
| `[M`                     | Previous method end       |
{.shortcuts}
### Counters
| Shortcut | Description     |
|----------|-----------------|
| ``  | Increase number |
| ``  | Decrease number |
{.shortcuts}
### Tags {.row-span-2 .col-span-2}
| Shortcut             | Description                                     |
|----------------------|-------------------------------------------------|
| `:tag Classname`     | Jump to first definition of Classname           |
| ``              | Jump to definition                              |
| `g]`                 | See all definitions                             |
| ``              | Go back to last tag                             |
| ` `        | Back/forward                                    |
| `:tselect Classname` | Find definitions of Classname                   |
| `:tjump Classname`   | Find definitions of Classname (auto-select 1st) |
{.shortcuts}
### Formatting
| -       | -                                |
|---------|----------------------------------|
| `:ce 8` | Center lines between `8` columns |
| `:ri 4` | Right-align lines at `4` columns |
| `:le`   | Left-align lines                 |
See `:help formatting`
### Marks {.col-span-2 .row-span-4}
| Shortcut           | Description                                          |
| ---                | ---                                                  |
| \`^                | Last position of cursor in insert mode               |
| \`.    | Last change in current buffer                        |
| \`"    | Last exited current buffer                           |
| \`0    | In last file edited                                  |
| ''    | Back to line in current buffer where jumped from     |
| \`\`    | Back to position in current buffer where jumped from |
| \`[    | To beginning of previously changed or yanked text    |
| \`]    | To end of previously changed or yanked text          |
| \`&lt; | To beginning of last visual selection                |
| \`&gt; | To end of last visual selection                      |
| `ma`               | Mark this cursor position as `a`                     |
| \`a    | Jump to the cursor position `a`                      |
| `'a`               | Jump to the beginning of the line with position `a`  |
| d'a   | Delete from current line to line of mark `a`         |
| d\`a   | Delete from current position to position of mark `a` |
| c'a   | Change text from current line to line of `a`         |
| y\`a   | Yank text from current position to position of `a`   |
| `:marks`           | List all current marks                               |
| `:delm a`          | Delete mark `a`                                      |
| `:delm a-d`        | Delete marks `a`, `b`, `c`, `d`                      |
| `:delm abc`        | Delete marks `a`, `b`, `c`                           |
{.shortcuts}
### Calculator
| Shortcut         | Description      |
|------------------|------------------|
| `` `=` 7*7  | Shows the result |
| `` `=` 10/2 | Shows the result |
{.shortcuts}
Do this in INSERT mode
### Shell
| -            | -                              |
|--------------|--------------------------------|
| `:!`  | Interpret Shell Command        |
| `:r!` | Read in output of shell        |
| `:r!date`    | Insert date                    |
| `:!!date`    | Replace current line with date |
### Command line
| Shortcut     | Description                               |
|--------------|-------------------------------------------|
| `` | Insert current word into the command line |
| `"`     | Paste from " register                     |
| `` | Auto-completion of path in insert mode    |
{.shortcuts}
### Tricks
Remove duplicate lines
```shell script
:sort | %!uniq -u
```
To number the lines in the file
```shell script
:%!cat -n
```
Copy whole doc to clipboard
```shell script
:%w !pbcopy            # Mac OS X
:%w !xclip -i -sel c   # GNU/Linux
:%w !xsel -i -b        # GNU/Linux
```
Also see
--------
- [Devhints](https://devhints.io/vim) _(devhints.io)_
- [Vim cheatsheet](https://vim.rtorr.com/) _(vim.rotrr.com)_
- [Vim documentation](http://vimdoc.sourceforge.net/htmldoc/) _(vimdoc.sourceforge.net)_
- [Interactive Vim tutorial](http://openvim.com/) _(openvim.com)_