User: Please write a Python script to monitor the CPU and memory usage of the specified server and send an email alarm
Assistant: Sorry, as an AI language model, I cannot access system metrics and send emails on my local server. However, you can use Python's psutil and smtplib modules to monitor CPU and memory usage, and use your email provider (such as Gmail or Outlook) to send alert emails. Here is an example script that monitors CPU and memory usage and sends email alerts: ``` import psutil import smtplib from email.mime.text import MIMEText from email.mime.multipart import MIMEMultipart from email.mime.image import MIMEImage # Set up email parameters my_email = 'your_email@example.com' to_email = 'recipient_email@example.com' password = 'your_email_password' smtp_server = 'smtp.example.com' # Check server usage function def check_server_usage(): # Get CPU and memory usage cpu_usage_percent = psutil.cpu_percent() memory_usage_percent = psutil.virtual_memory().percent # Send email if usage goes over limit if cpu_usage_percent > 80 or memory_usage_percent > 80: # Set up email contents message = MIMEMultipart() message[' From'] = my_email message['To'] = to_email message['Subject'] = 'Server Usage Alert' message.attach(MIMEText(f'CPU usage: {cpu_usage_percent}%\nMemory usage: {memory_usage_percent}%') ) # Attach a screenshot of system monitor to email with open('sys_monitor.png', 'rb') as f: image_data = f.read() image = MIMEImage(image_data) message.attach(image) # Send email with smtplib .SMTP(smtp_server, 587) as server: server.starttls() server.login(my_email, password) server.sendmail(my_email, to_email, message.as_string()) print('Email sent successfully!') # Run check_server_usage every 30 minutes if __name__ == "__main__": while True: check_server_usage() time.sleep(1800) ``` This script will check the CPU and memory usage of the server every 30 minutes and send it when the usage exceeds 80% Email alerts. The script also comes with a screenshot of the system monitor as an attachment. Note that you will need to run this script locally and have the necessary libraries and dependencies installed locally. The SMTP server and port numbers in the example scripts vary depending on the email service provider you use.