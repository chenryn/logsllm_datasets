**作者：启明星辰ADLab  
公众号：**
### 一 概述
近期，启明星辰ADLab发现大量使用高危漏洞CVE-2017-11882进行网络攻击的事件，其中一批攻击载荷引起了我们的注意，他们均以类似“付款收据”、“银行确认”等字样作为攻击载荷名称。该批攻击载荷大部分通过邮件附件的方式进行钓鱼攻击，在分析过程中，我们发现了黑客的窝点并找到了受害人相关信息，此批黑客已经成功渗透进了德国和印度尼西亚的多家制药企业，以及西班牙的政府、企事业单位等机构，并且偷取了大量的敏感情报。我们通过溯源分析确定此次攻击来自于尼日利亚，并且由当前攻击关联出了更多黑恶意域名和样本。通过对该批样本的分析发现此次攻击活动最早可追溯到2019年7月，截至目前，相关的设施依然在使用中并持续在收集情报信息。该黑客组织还攻陷了西班牙一家大型船舶管理公司的官方网站作为情报窃取的秘密回传点，试图隐藏自身身份。
在本次攻击中，黑客组织通过邮件将精心构造的Office文件（针对CVE-2017-11882漏洞制作的）作为附件发送给目标邮箱，并诱使受害者点击以侵入目标系统（虽然这种以社工形式找到目标邮箱并通过邮件的方式进行攻击的手法老套，但却是黑客最常用的攻击手法之一，并且结合社工信息伪造的邮件也具有很高的成功率,
部分行业和企事业单位由于未进行相关漏洞补丁更新而易受到攻击）。攻击载荷会根据地理位置的不同而在受害者电脑上下载并安装Agent Tesla、HawEye
Keylogger、NanoCore RAT或NetWire RAT等多款间谍木马，以对攻击目标实施长期的监控控制、敏感信息窃取等恶意行为。
本文将对黑客组织所实施的攻击过程进行详细地分析和溯源，并对其所使用的间谍软件和基础设施进行透彻地分析。
### 二 攻击过程分析
此次攻击始于一个携带CVE-2017-11882漏洞的EXCEL文档，黑客使用伪装成“银行确认”的钓鱼邮件发送给攻击目标，当用户打开文档后便会执行shellcode代码，并从指定的服务器上下载Payload并执行。该Payload会在内存中解密出新的PE并注入到系统进程RegAsm.exe中，成功注入后便开始进行实时监控、窃密等行为，最终将窃取到的用户信息回传到托管服务器。
#### 2.1 攻击流程
下图展示了此次攻击活动完整的流程：
![
](https://images.seebug.org/content/images/2019/11/5e890ec8-6625-4e85-a93b-abe0bf5d0ba1.png-w331s)
图1 攻击流程图
#### 2.2 攻击目标
被攻击公司信息及相关邮件1：
钓鱼邮件是分发到德国的一家家族企业公司。该公司是专门研究动植物原料的提取，其主要业务是研究制药、化妆品和生物等技术。
![
](https://images.seebug.org/content/images/2019/11/36e6d92f-6635-4893-b346-765d6a3bf90e.png-w331s)
图2 目标公司1
通过图2可以看到，攻击者可以从该公司的主页上获取邮箱地址，并将自身伪装成“付款确认”等通知邮件，诱使受害者打开附件文档。
![
](https://images.seebug.org/content/images/2019/11/dd447e21-9cf7-40e2-a3d7-c15c50d3ca0d.png-w331s)
图3 钓鱼邮件1
被攻击公司信息及相关邮件2：
另一名受害者是德国的一家医疗药品器械公司。该收件邮箱地址同样可在其官网上获取。
![
](https://images.seebug.org/content/images/2019/11/12b449e9-281a-409d-8560-040f028b6a66.png-w331s)
图4 目标公司2
发送给目标公司的钓鱼邮件示例如下图：
![
](https://images.seebug.org/content/images/2019/11/39d3ab66-e3a2-40bd-b5ee-9e89d7416e6d.png-w331s)
图5 钓鱼邮件2
两起钓鱼邮件的附件均是名为“bank
cconfirmation”的XLSX文档，而该附件文件是我们捕获的众多使用CVE-2017-11882漏洞的恶意文档之一。
#### 2.3 诱饵邮件
两封邮件的内容、发件人以及恶意文档的名称，均保持着高度的一致性。随后，我们将对邮件信息做进一步的分析，以便挖掘出更多的关联线索。
![
](https://images.seebug.org/content/images/2019/11/6f92d7c9-9e71-4af1-aeb1-b87ecc6014d7.png-w331s)
图6 邮件头部信息
通过对邮件信息进行解析可以看到如图6所示，发件地址里列出的实际电子邮件地址为”mana00.balaempre.com”。根据邮箱后缀名进行查询，发现其所对应的是一款名为“AutoPMTA”的自动化电子邮件分发服务器，并在国外的网站中根据具体功能收取不同的费用。由此我们推测黑客组织就是利用此款软件来进行邮箱地址的收集和邮件的批量分发。
![
](https://images.seebug.org/content/images/2019/11/2dfc420f-44d1-4122-b17f-4c882b2d27ba.png-w331s)
图7 AutoPMTA邮件分发器
而在另一封邮件中，我们首次发现了一个属于尼日利亚的远程IP地址，该线索的出现在后续的关联溯源中起着重要的作用，在这里先将其记录下来。
![
](https://images.seebug.org/content/images/2019/11/b21a0abd-08a9-4cbc-8287-40b1ca65df35.png-w331s)
图8 IP地址查询信息
### 三 样本分析
#### 3.1 恶意文档
在未修复CVE-2017-11882漏洞的计算机上，当用户打开恶意EXCEL文件时，Office文档中的公式编辑器会启动EQNDT32.EXE进程。当Equation对象中存在标记为字体名称的超长字节流，则程序在处理该字符串的过程中，会触发栈溢出漏洞。而此恶意文档便是利用该漏洞将指向shellcode的栈地址覆盖了原始返回地址，从而执行远程payload的下载。
查看ole对象的目录结构，可以看到ole对象已被识别为CVE-2017-11882：
 图9 OLE对象的目录结构
由于该缓冲区溢出函数处于EQNDT32进程中，所以我们提前将EQNDT32.EXE加载起来并找到漏洞溢出处下断点，重新打开诱饵文档后，发现栈中返回地址0x004115D8被覆盖，从而转向shellcode执行。
![
](https://images.seebug.org/content/images/2019/11/d5f51ab2-a18b-4c0e-8f7a-fa4375c03494.png-w331s)
图10 栈中保存的原始函数返回地址
![
](https://images.seebug.org/content/images/2019/11/d461c49f-7554-41a1-9585-89c5199264c5.png-w331s)
图11 被覆盖后的函数返回地址
#### 3.2 shellcode
Retn执行后程序会转到0x0012F350处，这里存放的就是FONT[name]数据，也就是shellcode代码位置。
![
](https://images.seebug.org/content/images/2019/11/0cafb571-6dad-4927-8e28-e637746463ae.png-w331s)
图12 shellcode代码执行处
该段shellcode的功能是，将远程服务器“http[:]//34.87.19.73/pqis/11a.exe”上的Payload下载到本地，并保存为“%AppData%Roaming\powerpoint.exe”，最后运行该程序。
 图13 联网下载Payload
#### 3.3 Payload
名为11a.exe的Payload是使用MS Visual
Basic语言编写的。当恶意程序运行时，会在系统临时目录下先创建“subfolder”子目录并生成两个文件（explorer.exe和explorer.vbs），接着运行explorer.vbs脚本并结束自身进程。explorer.vbs脚本的具体内容如下图：
![
](https://images.seebug.org/content/images/2019/11/1819848d-949f-46e6-a256-9c3627971ee9.png-w331s)
图14 explorer.vbs脚本内容
从图14的VBS文件内容可以看出，脚本中使用了wscript
shell命令做了两件事。首先将自身添加到注册表开机自启动项中，以便每次在系统启动时都能自动运行explorer.vbs文件，用以实现其持久性；其次，运行可执行文件explorer.exe。
![
](https://images.seebug.org/content/images/2019/11/488d52d7-a7d3-4b8e-b113-0ae98ea5db28.png-w331s)
图15 添加注册表项
#### 3.4 Agent Tesla
通过分析，可以确定explorer.exe程序是臭名昭著的间谍软件“Agent
Tesla”。该木马运行后会立即重新创建一个挂起的自身子进程。子进程的相关属性如下图：
![
](https://images.seebug.org/content/images/2019/11/6afac230-a57c-4b81-b3b6-ef4c01c33445.png-w331s)
图16 子进程属性信息
然后子进程会从资源数据中解密出另一个由.NET编写的PE文件，其将会在内存中直接运行。下图是在分析工具中显示的该.NET程序的主要功能：