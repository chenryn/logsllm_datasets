### Plugin Family and Ubuntu Local Security Checks

1. **Selecting Plugin Filters:**
   - On the left dropdown, select the "Plugin Family."
   - On the right dropdown, select "Ubuntu Local Security Checks."

2. **Applying Filters:**
   - Click on "Preview Plugins" to list the plugins determined by your filters.
   - Once the list is generated, click on the dropdown and choose "Ubuntu Local Security Checks."

3. **Viewing Plugin Information:**
   - Nessus will display information about the plugin, including affected Ubuntu versions, a short description, patch number, and the Plugin ID.
   - For example, Figure 76 shows the details for the CVE-2021-3156 plugin.

4. **Detailed Plugin Information:**
   - Click on the plugin to get more detailed information, as shown in Figure 77.

5. **Launching the Scan:**
   - After reviewing the plugin details, close the window and launch the vulnerability scan.
   - Once the scan is complete, review the results by clicking on the "Vulnerabilities" tab.

6. **Reviewing Scan Results:**
   - The output will list any findings, such as a HIGH severity finding detected by the specified plugin, as shown in Figure 78.
   - Detailed information about the finding, confirming the target's vulnerability to CVE-2021-3156, is displayed in Figure 79.
   - Note that Nessus only uses the reported version number of the affected application and does not attempt to exploit the vulnerability. It is essential to verify these results manually to confirm if the vulnerability is exploitable.

---

### Vulnerability Scanning with Nmap

#### 7.3 Learning Objectives:
- Understand the basics of the Nmap Scripting Engine (NSE).
- Perform a lightweight vulnerability scan with Nmap.
- Work with custom NSE scripts.

#### 7.3.1 NSE Vulnerability Scripts

**Introduction:**
- Nmap can be used as an alternative to Nessus for automated vulnerability scans using the NSE.
- NSE scripts extend Nmap's functionality for various networking tasks, including vulnerability detection, brute forcing, and network discovery.

**Script Categories:**
- NSE scripts are categorized based on their potential impact, such as "safe" and "intrusive."
- "Safe" scripts have no potential impact on stability, while "intrusive" scripts may crash a target service or system.
- To avoid stability issues, always check the script categories before running them. You can find this information in the NSE Documentation or the local NSE scripts directory.

**Using NSE Scripts:**
- On Kali Linux, NSE scripts are located in `/usr/share/nmap/scripts/` with the `.nse` filetype.
- Use the `script.db` file to list scripts in the "vuln" category.

**Example Command:**
```bash
kali@kali:~$ cd /usr/share/nmap/scripts/
kali@kali:/usr/share/nmap/scripts$ cat script.db | grep "\"vuln\""
```

**Outdated Scripts and Vulners:**
- Some standard NSE scripts are outdated, but the `vulners` script provides current vulnerability information from the Vulners Vulnerability Database.
- The `vulners` script has the categories "safe," "vuln," and "external."

**Performing a Scan:**
- Use the `--script` parameter to specify which NSE scripts to execute.
- Example command to scan port 443 for vulnerabilities:
```bash
kali@kali:~$ sudo nmap -sV -p 443 --script "vuln" 192.168.50.124
```

**Output Analysis:**
- Nmap will detect the service and version, and the `vulners` script will provide related vulnerability data, including CVEs, CVSS scores, and links for additional information.

#### 7.3.2 Working with NSE Scripts

**Finding Specific NSE Scripts:**
- For specific vulnerabilities, use a search engine to find the CVE number plus NSE (e.g., "CVE-2021-41773 nse").
- Download the script and save it in the NSE directory, then update the `script.db` file.

**Example:**
```bash
kali@kali:~$ sudo cp /home/kali/Downloads/http-vuln-cve-2021-41773.nse /usr/share/nmap/scripts/http-vuln-cve2021-41773.nse
kali@kali:~$ sudo nmap --script-updatedb
```

**Running the Custom Script:**
- Use the custom script in a scan, specifying the target and port.
```bash
kali@kali:~$ sudo nmap -sV -p 443 --script "http-vuln-cve2021-41773" 192.168.50.124
```

**Output:**
- The output will indicate if the target is vulnerable and provide additional background information.

**Considerations:**
- While Nmap is not a traditional vulnerability scanner, the NSE feature allows for lightweight vulnerability scanning.
- Always verify that NSE scripts are safe and provide the needed functionality.

---

### Wrapping Up

This module provided an overview of vulnerability scanning with Nessus and Nmap, covering different types and considerations of vulnerability scans. Configured correctly, vulnerability scanning tools provide valuable data, but manual review of results is still necessary. Be cautious when using these tools, as they can perform actions detrimental to some networks or targets.

---

### Introduction to Web Application Attacks

#### 8.1 Web Application Assessment Methodology

**Learning Objectives:**
- Understand web application security testing requirements.
- Learn different types and methodologies of web application testing.
- Learn about the OWASP Top 10 and most common web vulnerabilities.

**Testing Methodologies:**
- **White-box Testing:** Access to source code, infrastructure, and design documentation.
- **Black-box Testing:** No prior information about the target application.
- **Grey-box Testing:** Limited information on the target’s scope, including authentication methods and credentials.

**Focus:**
- This module focuses on black-box testing to develop web application skills.

**OWASP Top 10:**
- The OWASP Foundation compiles the OWASP Top 10, a list of the most critical security risks to web applications.
- Understanding these attack vectors is essential for constructing more advanced attacks.

---

### 8.2 Web Application Assessment Tools

**Learning Objectives:**
- [To be continued]

---

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.**

**Made in Morocco**

**Penetration Testing with Kali Linux**