                                # e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'  
#archive_timeout = 0            # force a logfile segment switch after this  
                                # number of seconds; 0 disables  
#------------------------------------------------------------------------------  
# REPLICATION  
#------------------------------------------------------------------------------  
# - Sending Server(s) -  
# Set these on the master and on any standby that will send replication data.  
# 同时需要几个流复制连接，根据实际需求设定  
max_wal_senders = 8             # max number of walsender processes    
                                # (change requires restart)  
# 根据实际情况设置保留WAL的数量，主要是防止过早的清除WAL，导致备库因为主库的WAL清除而中断。根据实际情况设定。  
wal_keep_segments = 0           # in logfile segments, 16MB each; 0 disables   
#wal_sender_timeout = 60s       # in milliseconds; 0 disables  
# 根据实际情况设置需要创建多少replication slot  
# 建议大于等于max_wal_senders  
#max_replication_slots = 10     # max number of replication slots     
                                # (change requires restart)  
#track_commit_timestamp = off   # collect timestamp of transaction commit  
                                # (change requires restart)  
# - Master Server -  
# These settings are ignored on a standby server.  
# 如果有2个或2个以上的备库，可以考虑使用同步多副本模式。 根据实际情况设置  
[《PostgreSQL 一主多从(多副本,强同步)简明手册 - 配置、压测、监控、切换、防脑裂、修复、0丢失 - 珍藏级》](201803/20180326_01.md)    
#synchronous_standby_names = '' # standby servers that provide sync rep     
                                # method to choose sync standbys, number of sync standbys,  
                                # and comma-separated list of application_name  
                                # from standby(s); '*' = all  
#vacuum_defer_cleanup_age = 0   # number of xacts by which cleanup is delayed  
# - Standby Servers -  
# These settings are ignored on a master server.  
#hot_standby = on                       # "off" disallows queries during recovery  
                                        # (change requires restart)  
max_standby_archive_delay = 300s        # max delay before canceling queries  
                                        # when reading WAL from archive;  
                                        # -1 allows indefinite delay  
max_standby_streaming_delay = 300s      # max delay before canceling queries  
                                        # when reading streaming WAL;  
                                        # -1 allows indefinite delay  
wal_receiver_status_interval = 1s       # send replies at least this often  
                                        # 0 disables  
# 建议关闭，以免备库长事务导致 主库无法回收垃圾而膨胀。  
hot_standby_feedback = off             # send info from standby to prevent     
                                        # query conflicts  
#wal_receiver_timeout = 60s             # time that receiver waits for  
                                        # communication from master  
                                        # in milliseconds; 0 disables  
wal_retrieve_retry_interval = 5s       # time to wait before retrying to  
                                        # retrieve WAL after a failed attempt  
# - Subscribers -  
# [《PostgreSQL 10.0 preview 逻辑订阅 - 原理与最佳实践》](201702/20170227_01.md)    
# These settings are ignored on a publisher.   
# 必须小于  max_worker_processes  
#max_logical_replication_workers = 4    # taken from max_worker_processes  
                                        # (change requires restart)  
#max_sync_workers_per_subscription = 2  # taken from max_logical_replication_workers  
#------------------------------------------------------------------------------  
# QUERY TUNING  
#------------------------------------------------------------------------------  
# - Planner Method Configuration -  
#enable_bitmapscan = on  
#enable_hashagg = on  
#enable_hashjoin = on  
#enable_indexscan = on  
#enable_indexonlyscan = on  
#enable_material = on  
#enable_mergejoin = on  
#enable_nestloop = on  
#enable_seqscan = on  
#enable_sort = on  
#enable_tidscan = on  
# - Planner Cost Constants -  
#seq_page_cost = 1.0                    # measured on an arbitrary scale  
# 离散IO很好的机器（例如ssd, nvme ssd），不需要考虑离散和顺序扫描的成本差异   
random_page_cost = 1.1                  # same scale as above       
#cpu_tuple_cost = 0.01                  # same scale as above  
#cpu_index_tuple_cost = 0.005           # same scale as above  
#cpu_operator_cost = 0.0025             # same scale as above  
#parallel_tuple_cost = 0.1              # same scale as above  
#parallel_setup_cost = 1000.0   # same scale as above  
#min_parallel_table_scan_size = 8MB  
#min_parallel_index_scan_size = 512kB  
# 扣掉会话连接RSS，shared buffer, autovacuum worker, 剩下的都是OS可用的CACHE。  
effective_cache_size = 400GB      
# - Genetic Query Optimizer -  
#geqo = on  
#geqo_threshold = 12  
#geqo_effort = 5                        # range 1-10  
#geqo_pool_size = 0                     # selects default based on effort  
#geqo_generations = 0                   # selects default based on effort  
#geqo_selection_bias = 2.0              # range 1.5-2.0  
#geqo_seed = 0.0                        # range 0.0-1.0  
# - Other Planner Options -  
#default_statistics_target = 100        # range 1-10000  
#constraint_exclusion = partition       # on, off, or partition  
#cursor_tuple_fraction = 0.1            # range 0.0-1.0  
#from_collapse_limit = 8  
#join_collapse_limit = 8                # 1 disables collapsing of explicit  
                                        # JOIN clauses  
#force_parallel_mode = off  
#------------------------------------------------------------------------------  
# ERROR REPORTING AND LOGGING  
#------------------------------------------------------------------------------  
# - Where to Log -  
log_destination = 'csvlog'              # Valid values are combinations of  
                                        # stderr, csvlog, syslog, and eventlog,  
                                        # depending on platform.  csvlog  
                                        # requires logging_collector to be on.  
# This is used when logging to stderr:  
logging_collector = on          # Enable capturing of stderr and csvlog  
                                        # into log files. Required to be on for  
                                        # csvlogs.  
                                        # (change requires restart)  
# These are only used if logging_collector is on:  
#log_directory = 'log'                  # directory where log files are written,  
                                        # can be absolute or relative to PGDATA  
#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'        # log file name pattern,  
log_filename = 'postgresql-%H.log'
                                        # can include strftime() escapes  
#log_file_mode = 0600                   # creation mode for log files,  
                                        # begin with 0 to use octal notation  
log_truncate_on_rotation = on           # If on, an existing log file with the  
                                        # same name as the new log file will be  
                                        # truncated rather than appended to.  
                                        # But such truncation only occurs on  
                                        # time-driven rotation, not on restarts  
                                        # or size-driven rotation.  Default is  
                                        # off, meaning append to existing files  
                                        # in all cases.  
log_rotation_age = 1h                  # Automatic rotation of logfiles will  
                                        # happen after that time.  0 disables.  
log_rotation_size = 100MB               # Automatic rotation of logfiles will  
                                        # happen after that much log output.  
                                        # 0 disables.  
# These are relevant when logging to syslog:  
#syslog_facility = 'LOCAL0'  
#syslog_ident = 'postgres'  
#syslog_sequence_numbers = on  
#syslog_split_messages = on  
# This is only relevant when logging to eventlog (win32):  
# (change requires restart)  
#event_source = 'PostgreSQL'  
# - When to Log -  
#client_min_messages = notice           # values in order of decreasing detail:  
                                        #   debug5  
                                        #   debug4  
                                        #   debug3  
                                        #   debug2  
                                        #   debug1  
                                        #   log  
                                        #   notice  
                                        #   warning  
                                        #   error  
#log_min_messages = warning             # values in order of decreasing detail:  
                                        #   debug5  
                                        #   debug4  
                                        #   debug3  
                                        #   debug2  
                                        #   debug1  
                                        #   info  
                                        #   notice  
                                        #   warning  
                                        #   error  
                                        #   log  
                                        #   fatal  
                                        #   panic  
#log_min_error_statement = error        # values in order of decreasing detail:  
                                        #   debug5  
                                        #   debug4  
                                        #   debug3  
                                        #   debug2  
                                        #   debug1  
                                        #   info  
                                        #   notice  
                                        #   warning  
                                        #   error  
                                        #   log  
                                        #   fatal  
                                        #   panic (effectively off)  
# 根据实际情况设定，例如业务上认为5秒以上是慢SQL，那么就设置为5秒。  
log_min_duration_statement = 5s        # -1 is disabled, 0 logs all statements     
                                        # and their durations, > 0 logs only  
                                        # statements running at least this number  
                                        # of milliseconds  
# - What to Log -  
#debug_print_parse = off  
#debug_print_rewritten = off  
#debug_print_plan = off  
#debug_pretty_print = on  
log_checkpoints = on  
# 如果业务是短连接，建议设置为OFF，否则建议设置为ON  
log_connections = off     
# 如果业务是短连接，建议设置为OFF，否则建议设置为ON  
log_disconnections = off     
#log_duration = off  
log_error_verbosity = verbose  # terse, default, or verbose messages  
#log_hostname = off  
#log_line_prefix = '%m [%p] '           # special values:  
                                        #   %a = application name  
                                        #   %u = user name  
                                        #   %d = database name  
                                        #   %r = remote host and port  
                                        #   %h = remote host  
                                        #   %p = process ID  
                                        #   %t = timestamp without milliseconds  
                                        #   %m = timestamp with milliseconds  
                                        #   %n = timestamp with milliseconds (as a Unix epoch)  
                                        #   %i = command tag  
                                        #   %e = SQL state  
                                        #   %c = session ID  
                                        #   %l = session line number  
                                        #   %s = session start timestamp  
                                        #   %v = virtual transaction ID  
                                        #   %x = transaction ID (0 if none)  
                                        #   %q = stop here in non-session  
                                        #        processes  
                                        #   %% = '%'  
                                        # e.g. ' '  
log_lock_waits = on                    # log lock waits >= deadlock_timeout  
# 如果需要审计SQL，则可以设置为all  
log_statement = 'ddl'                 # none, ddl, mod, all  
#log_replication_commands = off  
log_temp_files = 1GB                    # log temporary files equal or larger  
                                        # than the specified size in kilobytes;  
                                        # -1 disables, 0 logs all temp files  
log_timezone = 'PRC'  
# - Process Title -  
#cluster_name = ''                      # added to process titles if nonempty  
                                        # (change requires restart)  
#update_process_title = on  
#------------------------------------------------------------------------------  
# RUNTIME STATISTICS  
#------------------------------------------------------------------------------  
# - Query/Index Statistics Collector -  
#track_activities = on  
#track_counts = on  
# 跟踪IO耗时会带来一定的性能影响，默认是关闭的  
# 如果需要统计IO的时间开销，设置为ON  
track_io_timing = off      
#track_functions = none                 # none, pl, all  
#track_activity_query_size = 1024       # (change requires restart)  
#stats_temp_directory = 'pg_stat_tmp'     
# - Statistics Monitoring -  
#log_parser_stats = off  
#log_planner_stats = off  
#log_executor_stats = off  
#log_statement_stats = off  
#------------------------------------------------------------------------------  
# AUTOVACUUM PARAMETERS  
#------------------------------------------------------------------------------  
#autovacuum = on                        # Enable autovacuum subprocess?  'on'  
                                        # requires track_counts to also be on.  
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and  
                                        # their durations, > 0 logs only  
                                        # actions running at least this number  
                                        # of milliseconds.  
# CPU核多，并且IO好的情况下，可多点，但是注意最多可能消耗这么多内存：   
# autovacuum_max_workers * autovacuum mem(autovacuum_work_mem)，  