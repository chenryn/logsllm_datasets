### Hyper-Geometric Distribution and Robust Fingerprinting Codes

The hyper-geometric distribution analyzed in [5, Lemma 5.2] demonstrates that:
\[ \Pr[x_{i+1} - x_i > \Delta] \leq \frac{4n^2}{(1 - \delta)^2} \]

This leads to a code of length:
\[ \mathcal{L} = d_{\min} \cdot (n + 1) = O\left(\frac{n^3}{(1 - \delta)^2} \cdot \log\left(\frac{2n}{\epsilon}\right)\right) \]

We derive a \(\delta\)-robust fingerprinting code for any \(\delta \in [0, 1)\). This, in turn, results in a fully collusion-resistant traitor-tracing system with constant-size ciphertexts and private keys of size \(\mathcal{L}\). The tracing algorithm operates by constructing \(\bar{w}^*\) using experiments RobustTRj and then applying the robust fingerprint tracing algorithm on \(\bar{w}^*\).

### Extending Î´-Robust Codes

Sirvent [32, Section 4.3] shows that the method in [5] can be used to extend a \(\delta\)-robust, fully collusion-resistant code to a \(\delta'\)-robust, t-collusion-resistant code (for some \(\delta' < \delta\)). For all polynomial-time adversaries \(A\), the advantages \( \text{MH Adv}[A, \text{TT}(n)](\lambda) \) and \( \text{TR Adv}[A, \text{TT}(n, t)](\lambda) \) are negligible functions of \(\lambda\).

### Game 2: Perfect Pirate Decoders

In Game 2, we require the pirate decoder (PD) to be perfect, decrypting all well-formed ciphertexts. Imperfect pirate decoders are discussed in Section 4. Definition 3 generalizes to handle non-perfect decoders as in [4] by changing the condition to:
\[ \Pr[\text{PD}(\text{Encrypt}(b_k, m)) = m] \geq 1 - \delta \]
for some pre-agreed \(\delta \in [0, 1)\) known to both the challenger and the adversary.

Additionally, we model a stateless (resettable) pirate decoder, which is an oracle maintaining no state between activations. Non-stateless decoders were studied in [18].

### Minimal Access Decoders

The black-box tracing model described above is often referred to as the full access model, where the tracer receives the decryptions output by PD. When PD is a tamper-resistant device, such as a music player, the tracer does not have direct access to decryptions; it only observes whether a given ciphertext results in the content being played or not.

To address this, we define a more restricted black-box tracing model called minimal access tracing. In this model, the challenger presents the tracing algorithm with a more restricted oracle \(P(m, c)\), which outputs:
\[ P(m, c) = \begin{cases} 
1 & \text{if } \text{PD}(c) = m \\
0 & \text{otherwise}
\end{cases} \]

We modify Step 4 of Game 2 so that the challenger runs \(\text{Trace}(tk, \mathcal{L})\) to obtain a set \(S \subseteq \{1, \ldots, n\}\). Consequently, in the minimal access game, the tracing algorithm has much more restricted access to PD. It is argued in [3] that this model accurately captures the problem of tracing a stateless, tamper-resistant decoder.

It is evident that our tracing algorithm is effective in the minimal access model.