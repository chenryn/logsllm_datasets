earlycopiesofanymaliciousbinariesorprocessesareanalysedandcomparedtogether
frommultipleinternalandexternalsources.Thisisconsideredtobebeneficialindetect-
ing malicious software propagation in the internal systems. Finally, the logs obtained
from several security controls can collectively support the insights extracted from the
proposedmethodology,whichinturn,makestheextractedevidencemuchstrongeras
wellasensuresthevalidityofathreattotheinternalsystems.
In this research, a threat hunting methodology is suggested to explicitly extract
significantinformationrelatedtoanybinariesunderinvestigationusingmultipleutilities
thatimplementvarioustechniques.Thismethodologyhasbeendesignedtobecarriedon
windows systems. The presented methodology will help investigators to easily follow
a proactive approach for threat hunting tasks. Any suspicious binaries from different
windowssystemsarecollectedandanalysedusingourproposedmethodologytorestrain
anyprobablerisksofdatabreachesorsystemsoutages.Duringtheanalysisphasesof
the threat hunting process, any beneficial patterns can easily be found, which can be
preservedtofacilitatetheclassificationprocessrelatedtoemergingthreats.Thispaper
hasbeenorganizedasfollows,InSect.2,relevantworksweresummarized.InSect.3the
proposedthreathuntingmethodologyenvisionedinwindowssystemsisoutlinedalong
with the study of selected utilities and techniques. Discussions on static and dynamic
huntingtoolsandtechniqueswerepresentedinSects.4and5respectively.Finally,the
conclusionsandfuturedirectionsweregiveninSect.6.
2 RelatedWorks
Presently,digitalinvestigationsarepotenttechnicalapproachesusedbynearlyalllarge
companies.Thedigitalinvestigations’processesareusuallyconductedonlyafteraviola-
tionhasoccurred.Recently,thefocusofthisdomainisshiftingfromreactiveapproaches
towards more proactive ones, where defense strategies would identify risks and flaws
in the internal system to deter violations from emerging. An Earlier detection of any
maliciousactionsorpossibleweaknesses,agreaterchanceoflimitingorpreventingany
losses that could arise. This strategy can be defined as threat hunting, and has grown
rapidlyasahottrendinthecontextofcyber-forensics.However,thereisanoticeable
lackofresearchstudiesonthismodernapproach.Eachcyberdefenseproviderappears
tosupportitsowninterpretationofthreathuntinginordertodistinguishitsownoffering
asathreathuntingsystem.Thisinessence,tendstoincreasetheuncertaintyregarding
itsdefinition.Thereareseveralcommonmeaningsthatdescribethisconceptestablished
onthebasisofitsinterpretationwithinthecyber-securitycontext.Forexample,threat
huntingcanbedescribedastheoperationoffindingadversariesinlocalsystemsbefore
successfullycarryingoutattacks[4].Sqrrldescribesthreathuntingasasystematicand
630 A.M.Elmiseryetal.
iterativescanningacrossnetworksanddatabasestoidentifypotentialthreatsthatcanulti-
matelybypasscurrentsecuritycontrols[5].Forthecontextofthisstudy,threathunting
canbebrieflydescribedaspreventivepracticesthatfindsevidenceofmisconductinlocal
systems.Theresearchin[6],aframeworkwasproposedtomodelsmulti-stageattacksin
amannerthatdefinestheattackmethodsandthepredictedconsensusesofeachattacks.
Thebasicaimoftheirstudyistosimulatemisconductusingthecyberkill-chainandintel-
ligencedrivendefensepatterns.TheirsuggestedapproachwasimplementedonApache
Hadoop.In[7],theauthorsintroducedamethodthatusestextminingtechniquestosys-
tematicallycomparethecollectedevidenceofsecurity-relatedincidentswithadatabase
of attack patterns. The goal of their work is to reduce the hunting time and improve
theefficiencyofattackdetection.In[8]anapproachwaspresentedtoincorporatesthe
identificationofsystemicabnormalitiesfromcommunicationnetworkswiththepsycho-
logical profiling of users. Systematic anomaly recognition utilizes graph analysis and
learningtechniquestorecognizesystemicabnormalitiesindiverseknowledgenetworks,
whilepsychologicalprofilingdynamicallyblendshumanpsychologicalcharacteristics
with their behavioural trends. The authors continue to classify threats by connecting
andratingthevariedfindingsofsystematicanomalyrecognitionandpsychologicalpro-
filing of the systems’ users. The authors in [9], a component of threat identification
hasbeenincorporatedintheirresearch,whichdependsontherecognitionofirregular
variationsintheweightoftheedgesovertime.Waveletdecompositiontechniquewas
used to separate the transient behaviour from the stationary behaviour in these edges.
The research in [10] Introduced the use of data mining techniques with visualization
techniquestoaddressvariousthreats.Intheirstudy,twonewsimulationmethodshave
beensuggestedtovisualizethreats.Theauthorsin[11],abotnetdiscoverymethodology
hasbeendesigned,whichusesclusteranalysistoclassifythecorrelationtrendsofC&C
communication and behaviour flows. The methodology proposed in this work begins
with sniffing the network traffic, then conducting two kinds of parallel investigations,
one investigation is conducted to identify a group of hosts with identical traffic pat-
terns,whiletheotherexaminespacketpayloadstoidentifyanomalousbehaviours.The
behavioursarelaterpooledtogethertodetectaswarmofhostswithsimilarmalignant
activity.Thecross-correlationmethodisusedtocombinethefindingsofprioranalyses
intocoherentclassesofhostilehoststhatmayconstituteaBotnet.In[12]introduceda
threathuntingapproachtoimplicitlyelicittherelevantthreatreputationgroupsfromthe
multiplefeedsofeventlogs.Theproposedapproachhasbeendesignedtobecarriedat
thesmarthomeownerside,italsoattainssecurity,privacyforeventlogswhichcanhelp
smarthomeownerstoeasilyadoptaproactiveapproachforthreathuntinginaprivacy-
preservingmanner.Two-stageconcealmentprotocols,whichwaspreviouslypresented
in[13–17],usedformaskingtheeventlogsofsmarthomeownerswhenbeingreleased
forthreathunting.Adetailedsurveyin[18],presentedasetofdetectiontechniquesfor
cryptographic ransomware. However, the authors have not centered their research on
producingapracticalmethodologythatlinksthesedetectionalgorithmstotoolsthatcan
assisttheinvestigatorsinthethreathuntingprocess.Finally,theresearchworkin[19]
employedstaticanddynamicanalysistostudyWannaCryransomware.Thegoalofthis
researchistouncovercrucialinformationregardingencryptionfunctionality,dynamic
link libraries, and Windows API used by WannaCry. This can assist in implementing
EfficientThreatHuntingMethodology 631
effectivemitigationmechanisms todetectWannaCry andotherstrainsofransomware
thathaveasimilarprofile.Mostoftherelatedworkinthisfieldhasthesamedirection.
The main aim of this work is to propose a general threat hunting methodology that
is not tailored to a particular strain. Our proposed methodology provides the building
blocks and popular methods that can assist the investigator in identifying evidence of
misconductrelatedtothemaliciousbinariesquicklyandefficiently.
3 ProposedThreatHuntingMethodology
Maliciousbinariesservethedisruptiveaimsofthethreatactors,andtheseaimsrange
broadlyfromeachpayloadtothenext,fromransomwareattacksonsmalltomedium-
sized businesses to large state-funded operations. Malicious payloads can also be dis-
tributedinarangeofmanners,suchasmanipulatingbrowservulnerabilities,insecure
networkingservices,andsocialengineering.Cyberdefenseproviderstypicallysupply
signaturestotheirsecuritycontrolsthattrytoalignsignaturesagainstdatalocatedon
the user’s device. In order to build these signatures, malignant artifacts must first be
detectedandthenassessedforpatternsofmisconduct,usingtwoseparateexamination
methods,staticanalysis,anddynamicanalysis[20].
Thestaticanalysismainlyreliesondecompilerswhereareverseengineeringprocess
isconductedtoconvertthemaliciousbinaryintoassemblyorCcode.Subsequently,the
generatedcodecanberigorouslyexaminedtogaindeeperinsightsintothesepatternsand
artifactsthatcanbeconsideredmalicious.Themaliciousbinarywillneverbeexecuted
duringthevariousstaticanalysistools.Althoughstaticanalysisalonegeneratesuseful
insightsregardingvariousfunctionsofthebinaryunderinvestigation,itcanbeusedasan
entrypointfordynamicanalysis,forexample,itcanbeusedtoidentifymainfunctions
thatneedfurtherinvestigationusingdynamicanalysistools[21].Analyzingmalicious
binaries using static analysis is a complicated process that requires certain skill sets.
Malicioussoftwareprogrammersuseconcealingstrategiesthatcanmakeitincredibly
difficultforstaticanalysistoolstoreadgeneratedcodeandassessthecontrolflowofits
functionality,aswellasresolveAPIcallsattherun-timetomakeithardertoidentify
themainonesthatcanattributeanybinaryasmalicious.
Dynamic analysis is conducted by executing the malicious binary in a restrained
environment. It offers useful information about the binary under investigation, as the
conducted examination can intercept API calls, and evaluate the memory contents
assignedtothebinary.Othervaluableinsightscanalsobegainedwhenexaminingthe
requested URLs, files generated/updated during/after the execution, and registry keys
inserted/editedduring/aftertheexecution.Currently,therearenumerousresearchefforts
underway to integrate artificial Intelligence with conventional dynamic analysis tools.
This is achieved by using sandbox environments to construct detailed activity reports
that could be used to detect harmful payloads that are not commonly identified with
signature-basedmonitoring[22].Performingdynamicanalysishasmultiplebenefits,it
especiallyaidsindetectinganyconcealmentprocesssupportedinthemaliciousbinary,
asitisnotsusceptibletoevasiontechniques.However,itdoeshaveasignificantdown-
side,asitrequiresthemalignantbinarytorunonthesystem,andthisisanessentialstep
to ensuring that the malicious payload is fully implemented and the occurrence of all
632 A.M.Elmiseryetal.
thatallmodificationsintothesystemorchangestothefilesystemarepresent.Dueto
that,itishighlyrecommendedtocarryoutthedynamicanalysisinaprotectedandiso-
latedenvironment,suchascontainersorvirtualsystems,whichcanalwaysbereverted
toitsoriginalstate.TheworkflowoftheproposedmethodologyispresentedinFig.1
depictedbelow.Althoughtherearenumeroustoolsthatcanbeallocatedtoeachstage
of the proposed methodology, we have decided to select a setof tools,that have been
foundefficientandeasytohandleinmostofthescenariosencountered.Thepresented
methodologycombinesasetofstaticanddynamichuntingtoolstohelpinvestigatorsto
easilyfollowaproactiveapproachforanalyzinganysuspiciousbinariesfromdifferent
Windowssystems.Beneficialpatternscaneasilybepreserved,whichcanbeutilizedto
facilitatethefutureclassificationofemergingthreats.
Static Hunting
Dynamic Hunting
Fig.1. Workflowoftheproposedmethodology
EfficientThreatHuntingMethodology 633
3.1 SelectedStaticHuntingTools
Aselectedsetofstatichuntingtoolswasemployedtoretrieveuniqueinformationfrom
thebinariesunderinvestigation.Althoughtherearemultipletoolsthatcanbeutilized
inthedifferentstagesofstatichunting,onlyefficienttoolsandutilitiesthatoperateina
similarmannerhavebeenselected,andwhichcanalsoextractusefuldatatocomplement
other data generated by other selected tools as well. PE header extractors were used
to collect header information of the portable executable samples, these tools are also
capable of recognizing signatures of packers used to obscure the binary sample. The
PEiD utility was used to identify the used packers, and compilers. The latest version
ofPEiDisequippedwithdetectionalgorithmsthatarecapableofdetectingmorethan
600uniquesignaturesofpopularpackersandcompliersinbinaries[23].PEToolsisa
lightweightexecutablecontrolutility.Itappearedforthefirsttimein2002andcontains
a small set of tools such as process viewer and manager, HEX editor, EXE rebuilder
andsoon[24].ThePEviewutilitywasutilizedtoretrievealistofimportedWindows
APIsrequiredtoimplementthebinary.Thiswillprovideinsightsregardingthevarious
functionsinsidethebinary.forexample,itcanrevealifsomefunctionswithinthebinary
wereemployedtomanipulatethesystem’sregistryandfilesystem.PEviewcanbeused
toinspectWindows32-bitand64-bitbinariestoretrievealistofimportsrequiredbyits
functions.Italsopresentstheessentialdependenciesrequiredtoimplementthebinary
aswellasitsdebugginginformationandpaths[25].
3.2 SelectedDynamicHuntingTools
Aselectedsetofdynamichuntingtoolswasemployedtoauditthebehavioursofvarious
processes and modules operating in the system environment. The process monitoring
utilitywasutilizedtocheckthebehaviourofthecurrentoperatingsystem.Itcanalso
trackthebehavioursofeverymainandchildprocessesrunninginthesystem.Itisalso
attainablefortheprocessmonitoringutilitytodocumentinreal-time,filesystemmanip-
ulations,aswellaschangestotheregistry.Processmonitoringisaveryusefulutilityin
dynamichunting.itwouldbebeneficialtoimplementitinanisolatedenvironmentprior
toexecutingthemaliciousbinary,asitcanbeusedtorecordsystemchangesmadebythe
maliciousbinarysuchasthefilesystemorregistrymanipulation[26].ProcessExploreris
anotherutilitythathasbeenutilizedindynamichunting.Itdisplaysthecurrentlyactive
processes along with their profiles, called API and loaded DLLs. It is a valuable tool
fordetectingthetypeofAPIsandDLLsareassignedtothebinaryunderinvestigation
to implement particular tasks [27]. ProcDOT utility [28] is used to take the output of
ProcessMonitorandWireshark,thenvisualizehowaspecificprocessisexecutedinthe
formofaflowchart.Thispresentandinterpretthecollectedpiecesofdatainorder.This
aidstheinvestigatortoknowwhathashappedandinwhichorder.Registrymonitoring
isanopen-sourceutilitythatcanbeutilizedtorecordasnapshotoftheregistryentries
tobeevaluatedatafuturestagewithasecondsnapshottohighlightthemodifications
madetotheregistryentriesduetocertainevents.Itcanbeusedtodetectwhichupdates
intheregistryentrieshavematerializedwhenthemaliciousbinaryimplemented[29].
FakeNetisanetworkemulationutilitythathasbeenusedtomimicthecommunication
infrastructurefortrackingDNSrequestsandoutboundIPconnections.Itisavaluable
634 A.M.Elmiseryetal.
toolinassessingthenetworkactivityofbinariesunderinvestigation.Itwasemployed
indynamichuntingtomonitorandtrackDNSrequests,detectanydropperURIs,and
classifymalignantexternalIPconnectionstoC&Cservices[30].Wiresharkisanetwork
packet sniffing that has been employed to record the IP traffic of various modules. It
has a broad variety of functions, such as live logging and off-line examination. It is
a valuable tool for recording traffic information from binaries under investigation for
futureevaluationorforusewithothertoolsaswell[31].
3.3 SelectedDatasetforThreatHunting
It is important to assess the effectiveness of the proposed methodology in detecting
malignantartifactsofmisconductinanybinaryfileunderinvestigation,theseartifacts
canbepreservedlatertofacilitatetheclassificationprocessrelatedtoemergingthreats.
It is imperative to make use of a dataset made up of different malware families that
are known to have many variants. Since there are no common data sets for malware
families, VirusTotal [32] was employed to gather our own sample set. Few malwares
and their reports can be obtained using the VirusTotal API. Hence, a selected sample
set was gathered and analysed for the suitability of the inclusion on a weekly basis
for the period of 3 months. We believe that this is a fair amount of time to gather a
sampleofmalicioussoftwarethatreflectsthedifferentWindowsmalwarefamiliesthat
are known to have many variants. The following malware families were selected for
oursampleset,whichincludesOnlineGames,Bifrose,Delf,Lmir,Zbot,Zlob,Banload,
Vundo,Yimfoca,Farfli,Banker,Vapsup,Swizzor,PcClient,andNSAnti.Someofthese
malware families have mechanisms to evade specific analysis techniques, which have
beendeterminedtobeanadvantagefortestingtheaccuracyoftheproposedmethodology
inreal-worldsituations.
4 DiscussiononStaticHuntingTools
Theanalysisplatformcomprisedanopen-sourcehostedhypervisorforx86virtualization
entitled Oracle VM VirtualBox with a virtual network in host-only network setting.
Two virtual machines were created, one is a Windows 8.1 machine, and the other is
Windows7machine.Windows8.1wasselectedtopermittheproperexecutionofvarious
analysistoolsrequiredfortheproposedresearch.Moreover,minimalconfigurationsin
the selected tools will successfully modify them to report the results properly. The
following programs will be employed for the path of the required analyses: sigcheck,
7zip,strings,PEview,ultimatepackerforeXcutables,fakenet,regshot,autoruns,process
monitor, and process explorer. The previously mentioned programs have been copied
onspecifiedvirtualmachinetheninstalled.Thesamplefileswereinstalledinthepair
of Windows machines. In addition, these Windows machines were fully backed up
andisolatedfromtheinternettoassuretheirdigitalhygiene.Finally,thenetworkwas
configuredtoconnecttotheinternetthroughanintermediaryVMrunningParrotOS.
Ononesamplefile,thesignaturecanbeextractedwithautilitynamed‘sigcheck’.
Extractingthefilesignaturefromanexecutablefileisaquickandeasywayofdetermin-
ingwhetherthefileismalicious.Ifthefileisnotdigitallysigned,itisaclearindication
EfficientThreatHuntingMethodology 635
that the executable has been modified. Running sigcheck against any benign file, will
show legitimate information related to the digital signature of the file. However, run-
ningsigcheckagainstthesamplefileappearingtobealegitimatefileindicatesthatthe
executable has not been digitally signed and is a strong indicator that the file may be
malicious.
Malicious executables are usually packed by obfuscating their malicious payload,
thencombinesthepackedexecutablewithdeobfuscationcodetocreateaself-extracting
archive.Whentheobfuscatedexecutableisexecuted,thedeobfuscationcoderecreates
theoriginalcodebeforeexecutingit.Mostobfuscationpackersdeobfuscatetheoriginal
code into memory. As the obfuscated payload is not readable, packed executables are
commonly used by malware to evade detection by security controls and to make it
hardertobeanalysed.PEiDutilitycanbeusedtodetermineifobfuscationpackerwas
usedtoobfuscatetheexecutable,applyingthePEiDutilityononeofthesamplefiles,
obfuscationusing‘ultimatepackerforexecutables’utilitywasdetected.PEiDalsoshows
otherinformationsuchastheentrypointandfileoffsetoftheoriginalexecutable.The
samplefilecanbedeobfuscatedusing‘ultimatepackerforexcutables’utility.
Toextractthesamplefile,anarchivingprogramsuchas7zipwasusedtodisplaythe
filestructureoftheexecutable.Manyarchivingprogramshavetheabilitytoextractthe
resourcesofanexecutablefile.Usingthistechniqueonlegitimateexecutablesdisplays
itsstructure.However,applyingthesametechniqueagainstoneofthesamplefiles,dis-
playsitscontents.Continuingtoextracttheseexecutablestoaseparatefolder,facilitates
displayingtheirresources.Theextractedresourcescanfurtherbeanalysed.
‘Strings’iscommand-lineutilityusedtoextracttheASCIIrepresentationofthehex
values within the sample file. Only ASCII strings that are found to be 3 consecutive
ASCII characters or longer are displayed. While this technique does extract a lot of
false-positive information, it is a simple way of quickly extracting information from
an executable. Running the strings command on the sample file extracted previously