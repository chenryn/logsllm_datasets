title:Resolving inter-domain policy disputes
author:Cheng Tien Ee and
Vijay Ramachandran and
Byung-Gon Chun and
Kaushik Lakshminarayanan and
Scott Shenker
Resolving Inter-Domain Policy Disputes
Cheng Tien Ee, Byung-Gon Chun
Department of Computer Science
University of California, Berkeley
Berkeley, CA 94720, USA
{ct-ee, bgchun}@cs.berkeley.edu
Vijay Ramachandran
Department of Computer Science
Colgate University
Hamilton, NY 13346
PI:EMAIL
Kaushik Lakshminarayanan
Department of Computer Science and
Engineering
Indian Institute of Technology Madras
Chennai 600036, India
PI:EMAIL
Scott Shenker
International Computer Science Institute (ICSI) &
University of California, Berkeley
Berkeley, CA 94704
PI:EMAIL
ABSTRACT
The Border Gateway Protocol (BGP) allows each autonomous
system (AS) to select routes to destinations based on se-
mantically rich and locally determined policies. This au-
tonomously exercised policy freedom can cause instability,
where unresolvable policy-based disputes in the network re-
sult in interdomain route oscillations. Several recent works
have established that such instabilities can only be elimi-
nated by enforcing a globally accepted preference ordering
on routes (such as shortest path). To resolve this conﬂict
between policy autonomy and system stability, we propose
a distributed mechanism that enforces a preference ordering
only when disputes resulting in oscillations exist. This pre-
serves policy freedom when possible, and imposes stability
when required.
Categories and Subject Descriptors
C.2.6 [Communication Networks]: Internetworking
General Terms
Algorithms, Design, Theory
Keywords
Inter-domain routing, BGP, convergence, policy disputes
1.
INTRODUCTION
The Border Gateway Protocol (BGP) [12] establishes con-
nectivity between the independent networks, called autonomous
systems (ASes), that together form the Internet. BGP com-
putes routes by a series of local decisions based on each
ASes’ individual routing policies. These policies are seman-
tically rich in order to accommodate the complex rules that
govern route choices in today’s commercial Internet, such as
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’07, August 27–31, 2007, Kyoto, Japan.
Copyright 2007 ACM 978-1-59593-713-1/07/0008 ...$5.00.
business relationships and traﬃc engineering. However, this
expressiveness in routing-policy conﬁguration, coupled with
ASes’ freedom in implementing their policies autonomously,
can cause instability in interdomain routing manifesting in
the form of persistent route oscillations [17].
The problem of understanding and preventing policy-induced
routing anomalies has been the subject of much recent study.
While some work characterized these anomalies using global
models [7, 8, 14], other research proved that global and lo-
cal constraints on policies could guarantee routing stability.
The good and bad news from this literature can be summa-
rized as follows:
Good news: If the AS graph has an underlying business
hierarchy and local policies obey sensible constraints arising
from this hierarchy, then routing converges [5, 10].
Bad news: If ASes have complete freedom to ﬁlter routes
(that is, exclude routes from consideration) then the only
policies that are a priori guaranteed to converge are gener-
alizations of shortest-path routing [2].
Thus, there are two choices: we can hope that natural
business arrangements provide a stabilizing hierarchy, or we
can remove all policy autonomy (but not ﬁltering autonomy)
by imposing some generalized form of shortest-path routing.
This paper advocates a “third way”. Rather than rely
on the vagaries of the marketplace to deﬁne a suitable hi-
erarchy, or eliminate policy autonomy because of its poten-
tial to induce route oscillations, we propose a simple ex-
tension to BGP that constrains policy choices only after an
oscillation is detected. Oscillations can be characterized by
the presence of dispute wheels in the network [8], and our
method provably ﬁnds and breaks dispute wheels, including
those involving non-strict preferences. We tag each route
advertisement with a precedence value, where a lower value
corresponds to higher precedence. This goes at the top of
the BGP decision process: available routes are chosen ﬁrst
based on their advertised precedence, with ties broken using
the usual BGP decision process. The precedence attribute
changes only in the presence of a persistent oscillation; if
there is no oscillation, we eﬀectively use only the normal
BGP decision process. Since conﬁguration is not constrained
unless absolutely necessary, ASes’ freedom to decide on local
policies is preserved.
We ﬁrst review related work in §2 and then deﬁne and
discuss dispute wheels in §3. The precedence metric is de-
scribed next and its ability to prevent dispute wheels proven
in §4. §5 and 6 describe how this theoretical result can be
put into practice. We evaluate the resulting algorithm in §7
and discuss several issues in §8 before concluding in §9.
2. RELATED WORK
Varadhan et.al. [17] were the ﬁrst to discuss the possibil-
ity of persistent route oscillations in BGP. The cause was
not the policy conﬁguration of one AS alone; they occurred
because of interaction between the policies of several ASes.
These anomalies occurred without any misconﬁguration and
were diﬃcult to diagnose and resolve since ASes tend to keep
routing policies private.
Griﬃn et.al. [8] introduced the Stable Paths Problem (SPP)
as a formal model for BGP (and policy routing with path-
vector protocols, in general). Using their framework, they
were able to give a suﬃcient condition for protocol conver-
gence, namely, the absence of dispute wheels. These struc-
tures characterize the conﬂicting policies of the nodes in-
volved in a route oscillation (see the formal deﬁnition in
§4). Unfortunately, the only known method to check for
dispute wheels requires examining all the routing policies in
a network, which is presently an impractical task.
In ad-
dition, Griﬃn et.al. showed that the problem of detecting
whether stable routing exists, given all the policies in the
network, is NP-complete. Worse yet, they showed that the
existence of a stable solution does not automatically imply
that a routing protocol can ﬁnd it.
Gao and Rexford [5] showed that Internet economics could
naturally guarantee route stability. A hierarchical business
structure underlying the AS graph, along with policies that
matched the various business agreements between ASes, is
suﬃcient for protocol convergence. In this structure, it is as-
sumed that relationships between ASes are either customer-
provider, i.e., one AS purchases connectivity from another,
or peer-peer, i.e., two ASes mutually agree to transit traf-
ﬁc. No customer-provider cycles are allowed (i.e., no AS,
through a chain of providers, is an indirect customer of it-
self), and additional rules exist on how to set route pref-
erences and when routes can be shared with other ASes.
These assumptions capture the structure and economics of
today’s commercial Internet, although violations of these as-
sumptions due to complex agreements, business mergers, or
misconﬁgurations can still induce route oscillation. These
positive results were later conﬁrmed by Gao et.al. in [4], in
which the combination of an underlying business structure
and economically sensible policies was shown to prevent oc-
currences of dispute wheels, even when backup routing is al-
lowed. Jaggard and Ramachandran [10] generalized this re-
sult but still required some assumption about the AS graph
to prevent oscillations.
Dispute-wheel freeness and an AS business hierarchy are
examples of global constraints, because they require that
some condition is enforced involving the policies of many
ASes at once.
However, policy autonomy is at the heart of
the philosophy that led to BGP, and ISPs will be loathe to
relinquish it. Accordingly, later research attempted to ﬁnd
local constraints—conditions that could be checked individ-
1
1
In this paper, as is standard for BGP discussions, the term
global really means “not purely local”. A global value, for
instance, is not one that necessarily all ASes share, but that
applies to more than one AS.
ually for each AS—that are suﬃcient for route stability. Un-
fortunately, results here were mostly negative. Sobrinho [14]
and Griﬃn et.al. [7] proved that any dispute-wheel-free rout-
ing conﬁguration is equivalent to a generalization of lowest-
cost routing. This means that many seemingly sensible poli-
cies — in fact, all purely local policies not driven by some
shared metric — could lead to oscillations. For example, it
was shown that ASes risk oscillations if they use policies that
always prefer routes through one neighbor over another—a
type of policy commonly used today. Feamster et.al. [2] fur-
ther strengthened this result by showing that only general-
izations of lowest-cost routing can guarantee stability while
preserving the ability of ASes to ﬁlter routes (that is, to re-
move them from consideration). Overall, the theme of these
results is that the only way to a priori guarantee stability is
to essentially eliminate policy-conﬁguration autonomy.
Most of these results exclude policies with any possibility
of inducing routing anomalies, whether or not they actually
do in a particular network.
(This is because determining
whether the network policies will result in oscillations is too
diﬃcult.) In this paper, we present an extension to BGP
that detects oscillations and responds by breaking the corre-
sponding dispute wheel. Griﬃn and Wilfong also presented
such an algorithm, called SPVP, in [9]. Our protocol diﬀers
in several ways. First, SPVP records the changes in route
choices due to the propagation of a route; this reveals more
private policy information than necessary. Second, our pro-
tocol answers an open question left by [9], in that we present
a minimal-impact solution to resolving disputes: our reso-
lution algorithm is engaged only when an oscillation is de-
tected, and BGP is allowed to function normally otherwise.
Third, SPVP’s update-message size grows with the number
of nodes in an oscillation, while additional ﬁelds used by
our protocol scales with the number of resolved disputes en-
countered along a path. This is similar to that in [4, 10];
however, those solutions still required a global constraint
and preemptively excluded some oscillation-free policy con-
ﬁgurations that our solution does not exclude. Finally, our
protocol eases network troubleshooting by pinpointing the
routers at which policy conﬂicts occur, carrying the infor-
mation together with routes propagated upstream.
Another class of runtime solution involves diﬀused com-
putation [1], which uses the observation that, as long as a
change in path results in reception of another with a local
preference value at least as high as that of its current path,
then stability is guaranteed. In this case, an AS is required
to ask any other AS whose path currently traverses it if a
change in path is acceptable. Such a solution would restrict
a provider’s route choices based on inputs from customers,
which is typically not the case in practice.
Finally, we allow ASes to exercise full autonomy unless the
particular set of policies and topology results in an oscilla-
tion, and in that case, and only in that case, AS autonomy is
revoked. What distinguishes this from much of the previous
literature is that it does not place a priori restrictions on
ASes, only post hoc restrictions. This enables a far greater
degree of freedom, and we believe that ASes might be willing
to accept the limitations as the price to pay for stability.
3. DISPUTE WHEELS
We begin by describing the notation used in this paper.
The network is represented as the AS graph G = (V, E),
where each node v ∈ V corresponds to one AS, and each
edge {u, v} ∈ E corresponds to a BGP session between ASes
u and v, meaning that these ASes are physically connected
and share route advertisements. We assume that links be-
tween ASes are reliable FIFO message queues with arbitrary
delays; this accounts for network asynchrony. At most one
link is assumed to exist between ASes, and all the internal
and border routers of an AS are condensed into one node (or
one point of routing-policy control). A path P is a sequence
of nodes v1v2 ··· vk such that {vi, vi+1} ∈ E; we write v ∈ P
if path P traverses node v. Paths can be concatenated with
other nodes or paths; e.g., if P = u··· v, Q = v ··· w, and
{w, d} ∈ E, we may write P Qd to represent the path start-
ing at node u, following P to node v, then following Q to
node w, and ﬁnally traversing the edge (w, d). We assume
that paths are directed from source to destination.
BGP, at a schematic level, computes routes using the fol-
lowing iterative process: (1) Nodes receive route advertise-
ments from their neighbors, indicating which destinations
are reachable and by what routes; (2) for each destination,
a node chooses the best route from those available, based on
local policy; (3) if the current route to a given destination
has changed, an advertisement is sent to neighboring nodes.
The content of advertisements, or update messages, is also
governed by routing policy; nodes are not required to share
or consider all available routes, i.e. routes may be ﬁltered.
The process begins when a destination advertises itself to its
neighboring ASes; routes to that destination then propagate
through the network as transit nodes choose routes and send
updates. Because route choices are computed independently
for each destination, we will focus our attention on, without
loss of generality, on a single destination node d ∈ V .
We say the network has converged when each AS v ∈ V is
assigned a path π(v) to the destination, such that the assign-
ment is stable, consistent and safe. By consistent, we mean
that the paths form a forwarding tree to the destination; if
π(v) = vuP , then π(u) = uP . By stable, we mean that
π(v) is the “best” available route for each node v, given the
other nodes’ path assignments, where “best” is determined
by node v’s routing policy; that is, if π(v) = vπ(u), there is
no other node w such that the path vπ(w) is more preferred
at v than π(v).
Safety is slightly more subtle. By unsafe, we meant that
there is some sequence of route updates that does not con-
verge, in which every node gets a chance to update inﬁnitely
often. Because there are only a ﬁnite set of route choices,
such a sequence must be a route oscillation. The sequence
may or may not be dependent on particular delays in receiv-
ing route updates. A conﬁguration is safe if any sequence of
route updates, in which no node is shut out, converges.
Griﬃn et.al. [8] showed that any such oscillation can be
characterized by a dispute wheel in the network, shown in
Figure 1. The dispute wheel captures the interaction amongst
the routing policies of a set of nodes that are involved in a
route oscillation. Formally, we have the following.
Definition 3.1. A dispute wheel is a set of nodes p0, p1,
. . . , pk−1 (assume all subscripts are modulo k) called pivots,
such that
1. at each pivot pi, there exists a spoke path Qi from pi to
the destination;
2. at each pivot pi, there exists a rim path Ri+1 to the next
pivot pi+1;
3. each pivot prefers the path piRi+1pi+1Qi+1d over the path
piQid.
pivot nodes
destination
rim nodes
spoke paths
direction of available route to destination
Figure 1: A dispute wheel example: elements of the
wheel include spoke paths, and pivot and rim nodes.
(BD)
(D)
A
D
(CD)
(D)
B
C
(AD)
(D)
Figure 2: A simple dispute wheel: node D is the des-
tination. Shaded boxes show route choices in order
of preference.
Note that the rim and spoke paths are not necessarily dis-
joint. We refer to non-pivot nodes along the rim paths Ri
as rim nodes.
Since dispute wheels lie at the heart of BGP policy insta-
bilities, we now walk through an example of BGP dynamics
in the presence of a dispute wheel. Consider the four-node
network shown in Figure 2. In the ﬁgure, paths considered
by a node are listed in the shaded box next to that node in
decreasing order of preference. The oscillation is shown in
Figure 3. (i) Assume that the destination node D sends an
initial advertisement to nodes A, B, and C. (ii) Nodes A,
B, and C then choose the direct paths to D and advertise
their choices to nodes C, A, and B, respectively.(iii) Upon
receiving this advertisement, each node prefers the route
through its neighbor, rather than the direct path to D, and
chooses it. Doing so requires advertisement of these new
paths; with the longer paths selected, the direct paths to
D are no longer advertised. (iv) When node A learns that
node B has selected BCD, its preferred choice of ABD is no
longer available; so node A reverts to choosing the direct
path to D. By symmetry, this occurs at nodes B and C as
well. This state is identical to (ii); therefore, the sequence
of route updates repeats, and nodes A, B, and C oscillate
forever between their two route choices.
Any policy-induced oscillation can be characterized by a
dispute wheel; thus, the absence of dispute wheels is suﬃ-
cient to guarantee that BGP is always safe. However, the
presence of a dispute wheel does not necessarily guarantee an
oscillation; even if there are some initial conditions that will
lead to an oscillation, BGP could non-deterministically con-
verge.Rather than exclude all potentially troublesome policy
A
A
(D)
D
(BD)
A
A
(D)
D
(AD)
(D)
(D)
(D)
(D)
B
C
B
C
(BD)
A
A