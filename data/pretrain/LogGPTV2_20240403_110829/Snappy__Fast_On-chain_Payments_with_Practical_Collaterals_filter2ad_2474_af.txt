on the last column of Table V. In both of our example cases,
the combined deposit is smaller than in payment hubs.
12
Designing a payment hub where the operator collateral is
proportional to only active customers (and not all registered
customers) is a non-trivial task, because the deposited collat-
eral cannot be freely moved from one customer to another [30].
Some commit-chains variants [31] manage to reduce operator
collaterals compared to hubs, but such systems cannot provide
secure and fast payments. Other commit-chain variants [31]
enable fast and safe payments, but require online monitoring
that is not feasible for all retail customers. Thus, we do not
consider commit chains directly comparable and omit them
here (see Section VIII for more details).
Cost of operation. The amount of locked-in funds by system
operators allows us to approximate the cost of operating
Snappy system with respect to other solutions. For exam-
ple, in our retail example case, each merchant that runs a
statekeeper needs to deposit $150k. Assuming 7% annual
return of investment, the loss of opportunity for the locked-in
money is $10,500 per year which, together with operational
expenses like electricity and Internet, gives the operational
cost of Snappy. We consider this an acceptable cost for large
retailers. In comparison, a payment hub operator needs to
deposit $250M which means that running such a hub would
cost $17.5M plus operational expenses which is three orders
of magnitude more.
VII. DISCUSSION
A. Governance
Snappy has, by design, a majority-based governance model.
This means that any majority of statekeeping nodes can decide
to ostracize merchants or statekeepers that are no longer
deemed ﬁt to participate. For example, a majority can stop
processing requests from a merchant who has equivocated
(signed conﬂicting transactions). If more complex governance
processes are needed (e.g., ﬁrst-past-the-post voting) the Ar-
biter’s smart contract can be extended accordingly.
B. Censorship Mitigation
A direct implication of Snappy’s governance model is that
a majority of statekeeping nodes can discriminate against a
particular victim merchant by not responding to its payment
approval requests or by delaying the processing of its requests.
Such censorship can be addressed in two ways.
The ﬁrst approach is technical. Targeted discrimination
against a speciﬁc victim merchant could be prevented by
hiding the recipient merchant’s identity during the payment
approval process. In particular, by replacing all
the ﬁelds
that could be used to identify the merchant (e.g., “recipient”,
“amount”) from the payment Intent with a cryptographic
commitment. Commitments conceal the merchant’s identity
from other merchants (statekeepers) during payment approval,
but allow the merchant
to claim any lost funds from the
Arbiter later by opening the commitment. Moreover, if IP
address ﬁngerprinting is a concern, merchants can send their
approval requests through an anonymity network (e.g., Tor
would increase latency by ∼500ms [46]) or through the
customer’s device so as to eliminate direct communication
between competing merchants.
The second mitigation approach is non-technical. In case
of known merchant identities and a mutually-trusted authority
(e.g., a merchants’ association), the victim merchant can ﬁle a
complaint against constantly misbehaving merchants. In cases
of widespread attacks, the victim merchant can reclaim their
collaterals in full, deregister from this consortium and join
another consortium.
C. Transaction Privacy
For on-chain transaction privacy, Snappy inherits the
privacy level of the underlying blockchain. For example,
Ethereum provides transaction pseudonymity, and thus every
transaction that is processed with Snappy is pseudonymous
once it recorded on the chain.
During payment approval,
the identity of the recipient
merchant can be concealed from all the statekeepers using
cryptographic commitments, as explained above (see Sec-
tion VII-B). However, the pseudonym of the customer remains
visible to the statekeepers.
Well-known privacy-enhancing practices like multiple ad-
dresses and mixing services [47], [48] can be used to enhance
customer privacy. For example, a Snappy customer could
generate several Ethereum accounts, register them with the
Arbiter and use each one of them only for a single payment.
Once all accounts have been used, the customer can de-register
them, generate a new set of accounts, move the money to
the new accounts through a mixing service, and register new
accounts. The main drawback of this approach is that the
user needs to have more collateral locked-in and will pay the
registration fee multiple times.
In
the
future,
blockchains
privacy-preserving
like
ZCash [49] combined with private smart contracts based
on Non-Interactive Zero-Knowledge proofs (NIZKs) could
address the on-chain conﬁdentiality problem more efﬁciently
and protect the privacy of both the users and the merchants.
However,
realizing such a secure, efﬁcient and private
smartcontract language while achieving decent expressiveness,
remains an open research problem [50].
D. Limitations
The main drawbacks of using Snappy are as follows. First,
customers and merchants need to place small collaterals, and
thus keep a percentage of their funds locked-in for extended
periods of time. Second, Snappy can scale up to a moderate
number of statekeeping merchants but cannot support hundreds
of thousands or millions statekeeping nodes. In such cases,
alternative deployment options can be used (see Appendix B).
Third, Snappy does not move the payment transactions off the
chain and thus customers still need to cover the transaction
processing fees charged by the blockchain’s miners.
VIII. RELATED WORK
Payment channels enable two parties to send funds to each
other off the chain, while adding only an opening and a
closing transaction on the chain [8], [9], [12]. With the opening
transaction the two parties lock funds in the channel, which
are then used throughout the lifetime of the channel. In cases
where the two parties send approximately the same amount
13
of funds to each other over time, a payment channel can
enable almost
indeﬁnite number of near-instant payments.
However, in the retail setting customers send funds unilaterally
towards merchants. Moreover, customers transact with several
merchants and thus each customer will need to maintain several
channels and keep enough funds in them.
Payment networks utilize the payment channels established
between pairs of users to build longer paths [10], [11]. While
this is a straightforward idea, in practice, ﬁnding routes reliably
is not a trivial task [28]. This is because the state of the
individual channels changes arbitrarily over time and thus the
capacity of the graph’s edges ﬂuctuate. Moreover, the unilateral
nature of retail payments (customer → merchant) quickly
depletes the available funds in the individual channels, pre-
venting them from serving as intermediaries to route payments
by other customers [29]. Miller et. al [8] showed that even
under favorable conditions (2.000 nodes, customers replenish
their accounts every 10 seconds, maximum expenditure of
$20, no attacks), approximately 2% of the payments will fail.
At peak hours the ability of the network to route payments
from customers to merchants is expected to degrade further.
Rebalancing methods [51] have only a meager effect, primarily
because credit cycles are rarely formed in real life [8].
Payment hubs introducing a single central point connecting
all customers to all merchants. This eliminates the need of
ﬁnding routing paths and in theory require a smaller total
amount of locked funds for the customers [30]. However, this
approach comes with two main drawbacks. First, it introduces
a single point of failure for payment availability. And second,
the hub operator needs to deposit very large amount of funds to
match the total expenditure of all customers [12], [13] and thus
will likely charge service fees. For instance, a hub that serves
n = 1M customers having in total of $250M in their channels,
must also lock-in that amount in channels with merchants to
be able to accommodate payments, in particular during peak
hours. Hub operators would charge signiﬁcant fees to cover
the opportunity cost of the large locked-in funds.
Commit-chains are parallel
(and not yet peer-reviewed)
work [30], [31], [52] that may either reduce or eliminate the
operator collaterals compared to payment hubs. The main idea
of commit-chains is to maintain a second-layer ledger and
make periodic commitments (called checkpoints) of its state
transitions to the main chain. In one proposed variant [31],
the central operator does not have to place any collateral,
but such scheme does not enable fast and safe payments,
because users need to wait for the next checkpoint which
may take hours or days. Another proposed variant [31] allows
safe and fast payment, but has other problems. First,
the
users need to monitor the blockchain (hourly or daily) and
dispute checkpoints if their balance is inaccurately represented.
Such monitoring assumption is problematic, especially in use
cases like retail with large number of customers using various
client devices. Second, although the operator’s collateral is
slightly lower than those of payment hubs, it still remains
very large (e.g., $200M in our “large retailers” use case) [14].
Snappy enables fast and safe payments with smaller merchants
collaterals for customers that remain mostly ofﬂine.
Side-chains use a permissioned set of validators to track
pending transactions, typically using a BFT consensus pro-
tocol [16], [17]. Such solutions change the trust assumptions
of permissionless blockchains signiﬁcantly, as BFT consensus
requires that 2/3 of the validators must be trusted. Side chains
also require multiple rounds of communication and have high
message complexity.
Probabilistic payments such as MICROPAY1/2/3 can in cer-
tain scenarios enable efﬁcient and fast payment approval [53],
[54]. However, such solutions require that the service provided
is continuous and granular so that the payments’ probabilistic
variance becomes negligible. In retail payments, this provides
no guarantee that the merchant will be paid the right amount.
IX. CONCLUSION
In this paper we have presented Snappy, a novel system
that enables merchants to safely accept fast on-chain payments
on slow blockchains. We have tailored our solution for settings
such retail payments, where currently popular cryptocurrencies
are not usable due to their high latency and previous solutions
such as payment channels, networks and hubs have signiﬁcant
limitations that prevent their adoption in practice.
ACKNOWLEDGMENTS
The authors would like to thank the anonymous reviewers,
the shepherd Stefanie Roos, Mary Maller and George Danezis.
This research has been partially supported by the Zurich
Information Security and Privacy Center (ZISC).
REFERENCES
[1] G. Wood, “Ethereum: A secure decentralised generalised transaction
ledger,” Ethereum project yellow paper, vol. 151, pp. 1–32, 2014.
[2] G. O. Karame, E. Androulaki, M. Roeschlin, A. Gervais, and S. ˇCapkun,
“Misbehavior in bitcoin: A study of double-spending and accountabil-
ity,” ACM Transactions on Information and System Security (TISSEC),
vol. 18, no. 1, 2015.
[3] M. Lei, “Exploiting bitcoin’s topology for double-spend attacks,” 2015.
[4] M. Freed-Finnegan and J. Koenig, “Visa quick chip,” https://usa.visa.
com/visa-everywhere/security/quick-chip-interview.html, 2017.
[5] Visa, “Visa quick chip for emv,” https://vimeo.com/163309180, 2017.
[6] Capgemini, “The quick emv solution,” https://www.capgemini.com/
wp-content/uploads/2017/07/the quick emv card processing 2016
web.pdf, 2016.
[7] S. Bano, A. Sonnino, M. Al-Bassam, S. Azouvi, P. McCorry, S. Meik-
lejohn, and G. Danezis, “Consensus in the age of blockchains,” in ACM
Advances in Financial Technologies (AFT), 2019.
[9]
[8] A. Miller, I. Bentov, S. Bakshi, R. Kumaresan, and P. McCorry, “Sprites
and state channels: Payment networks that go faster than lightning,” in
International Conference on Financial Cryptography and Data Security.
Springer, 2019, pp. 508–526.
J. Lind, O. Naor, I. Eyal, F. Kelbert, P. R. Pietzuch, and E. G. Sirer,
“Teechain: Reducing storage costs on the blockchain with ofﬂine pay-
ment channels,” in ACM International Systems and Storage Conference
(SYSTOR), 2018.
J. Poon and T. Dryja, “The bitcoin lightning network: Scalable off-chain
instant payments,” draft version 0.5, vol. 9, p. 14, 2016.
[10]
[11] R. Network, “Raiden: Cheap, scalable token transfers for ethereum,”
https://raiden.network/, 2018.
[12] S. Dziembowski, L. Eckey, S. Faust, and D. Malinowski, “Perun: Virtual
payment hubs over cryptocurrencies,” in IEEE Symposium on Security
and Privacy (SP), 2019.
[13] E. Heilman, L. Alshenibr, F. Baldimtsi, A. Scafuro, and S. Goldberg,
“Tumblebit: An untrusted bitcoin-compatible anonymous payment hub,”
in Network and Distributed System Security Symposium (NDSS), 2017.
14
[14] L. Gudgeon, P. McCorry, P. Moreno-Sanchez, A. Gervais, and S. Roos,
“Sok: Off the chain transactions,” 2019.
[15] P. McCorry, S. Bakshi, I. Bentov, A. Miller, and S. Meiklejohn, “Pisa:
Arbitration outsourcing for state channels,” IACR Cryptology ePrint
Archive, 2018. [Online]. Available: https://eprint.iacr.org/2018/582
J. Dilley, A. Poelstra, J. Wilkins, M. Piekarska, B. Gorlick, and
M. Friedenbach, “Strong federations: An interoperable blockchain solu-
tion to centralized third-party risks,” arXiv preprint arXiv:1612.05491,
2016.
[16]
[17] A. Back, M. Corallo, L. Dashjr, M. Friedenbach, G. Maxwell, A. Miller,
A. Poelstra, J. Tim´on, and P. Wuille, “Enabling blockchain innovations
with pegged sidechains,” https://blockstream.com/sidechains.pdf, 2014.
index,”
consumption
https://digiconomist.net/bitcoin-energy-consumption, 2019.
[18] Digiconomist,
“Bitcoin
energy
[19] E. Kokoris-Kogias, P. Jovanovic, L. Gasser, N. Gailly, E. Syta, and
B. Ford, “Omniledger: A secure, scale-out, decentralized ledger via
sharding,” in IEEE Symposium on Security and Privacy (SP), 2018.
[20] M. Zamani, M. Movahedi, and M. Raykova, “Rapidchain: Scaling
blockchain via full sharding,” in ACM Conference on Computer and
Communications Security (CCS), 2018.
[21] T. PLC, “Tesco’s christmas in numbers,” https://se-report.tescoplc.com/
news/news-releases/2016/tesco-christmas-in-numbers/, 2016.
[22] Tesco, “Tesco annual report,” https://www.tescoplc.com/media/474793/
tesco ar 2018.pdf, 2018.
[23] G. O. Karame, E. Androulaki, and S. Capkun, “Double-spending fast
payments in bitcoin,” in ACM conference on Computer and communi-
cations security (CCS), 2012.
[24] T. Hanke, M. Movahedi, and D. Williams, “DFINITY Technology
Overview Series, Consensus System,” arXiv preprint arXiv:1805.04548,
2018.
[25] The Wanchain
paper,”
https://github.com/wanchain/crypto/raw/master/Wanchain%20yellow%
20paper%20English%20version.pdf, 2018.
Community,
“Wanchain
yellow
[26] T. N. Community, “NXT Blockchain,” https://www.dropbox.com/s/
cbuwrorf672c0yy/NxtWhitepaper v122 rev4.pdf, 2014.
[28] P.
[27] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse attacks on
bitcoin’s peer-to-peer network.” in USENIX Security Symposium, 2015.
and
O. Osuntokun, “Flare: An approach to routing in lightning network,”
http://bitfury.com/content/5-white-papers-research/whitepaper ﬂare
an approach to routing in lightning network 7 7 2016.pdf, 2016.
Sahno, A. Ostrovskiy,
S. Zhigulin, M.
Prihodko,
[29] F. Engelmann, H. Kopp, F. Kargl, F. Glaser, and C. Weinhardt, “Towards
an economic analysis of routing in payment channel networks,” in ACM
Workshop on Scalable and Resilient Infrastructures for Distributed
Ledgers, 2017.
[30] R. Khalil and A. Gervais, “Nocust – a non-custodial 2nd-layer ﬁnancial
intermediary,” Gas, vol. 200, 2018.
[31] R. Khalil, A. Gervais, and G. Felley, “Nocust–a securely scalable
commit-chain,” 2019.
[32] M. Castro and B. Liskov, “Practical byzantine fault
tolerance and
proactive recovery,” ACM Transactions on Computer Systems (TOCS),
vol. 20, no. 4, 2002.
[33] D. Boneh, B. Lynn, and H. Shacham, “Short signatures from the weil
pairing,” J. Cryptology, vol. 17, no. 4, 2004.
[34] D. Boneh, C. Gentry, B. Lynn, and H. Shacham, “Aggregate and
veriﬁably encrypted signatures from bilinear maps,” in International