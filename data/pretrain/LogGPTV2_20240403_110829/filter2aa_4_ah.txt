Domain Name System
Phonebook of the Internet; translates names of websites to IP addresses
80
HTTP
Hypertext Transfer Protocol
Foundation of the World Wide Web
110
POP3
Post Office Protocol
Receiving email by downloading to your host
123
NTP
Network Time Protocol
Synchronizes the clocks on computers on your network
143
IMAP
Internet Message Access Protocol
View email messages from any device; does not download to a host
161
SNMP
Simple Network Management Protocol
Collects information and configures different network devices
443
HTTPS
Hypertext Transfer Protocol Secure
The secure version of HTTP; information between a browser and website is encrypted
445
Microsoft DS
Microsoft‐Directory Services
SMB over IP; preferred port for Windows file sharing
465
SMTPS
Secure SMTP
Authenticated SMTP over SSL
1433
MSSQL
Microsoft SQL
Microsoft SQL database management system
3389
RDP
Remote Desktop Protocol
Application sharing protocol
If you want to run a services scan against the machines in your ecosystem, Nmap will tell you which of the hundreds of thousands of ports might be open on a host. If a port is open, communication can occur. Sometimes that communication is unwanted and is what you are trying to protect against. For example, in Figure 3.3 you see the Nmap scan report showing the ports that are open, the service, the state, and the version.
Figure 3.3: Nmap scan report
To launch a services scan on a network segment, use the following command:
>nmap -sV 
When you do a service scan with Nmap, it will tell you which ports are open and will use a database that lists more than 2,000 well‐known services that are typically running on those ports. It has been my experience that network administrators are opinionated and will have their own ideas of how services in their enterprise environment should be configured, so sometimes that database and reality do not match up. If you are doing inventory or vulnerability management, you want to be as accurate as possible and know the version and patch level of systems whenever available.
Version detection investigates those ports to figure out what is actually running. The nmap‐services‐probes database contains certain probe packets for discovering services and matching them to responses. Nmap will attempt to determine the service, application, version number, hostname, device type, and operating system.
Operating Systems
Nmap is often used to detect the operating system of a machine. Being able to correctly identify the operating system is key for many reasons, including doing inventory and finding vulnerabilities and specific exploits. Nmap is known for having the most robust and comprehensive OS fingerprint database.
When you are identifying specific operating systems, the key is how the operating system responds to Nmap probe packets. Windows XP and Windows Server 2003 are nearly identical, while Windows Vista and Ubuntu Linux 16 are completely different in the way they respond. In Figure 3.4, you see the response of an nmap ‐O command. To enable operating system detection, use the following command:
Figure 3.4:  nmap ‐O 
>nmap -O 
Zenmap
Everything in this chapter thus far has been done through the command line or terminal interface. As Nmap has matured, so has the interface. Zenmap is the GUI of Nmap. It is a multiplatform, free, and open source application. There are some benefits to Zenmap that the good old command‐line Nmap cannot do, such as building topology, creating interactive maps, showing comparisons between two scans, keeping and tracking the results of a scan, and making the scan duplicable. Zenmap's goal is to make scanning easy and free for beginners and experts alike. You only have to identify your target and hit the Scan button, as you see in Figure 3.5.
Figure 3.5: Zenmap GUI scan
As you can see, this scan is the exact previous scan, just done in a GUI. If you clicked the tabs across the middle, you would see a list of all ports open, the network topology, the host details, and the history of scans of this asset, as you see in Figure 3.6.
Figure 3.6: Zenmap host details
To save an individual scan to a file, choose the Scan menu and select Save Scan from the drop‐down. If there is more than one scan, you will be asked which one to save. You have a choice of saving in .xml or .txt format. The .xml format can only be opened and used again by Zenmap. By default, all scans are saved automatically, but only for 60 days.
Before you install Nmap or Zenmap, you will want to make sure it isn't already installed. There are several operating systems (including most Linux systems) that have Nmap packages embedded but not installed. Type the following at a command prompt:
nmap --version
This will display the version of Nmap that is installed. If you get an error message such as nmap: command not found, then Nmap is not installed on your system.
Zenmap is found in the executable Windows installer. The latest stable release will be on the www.nmap.org/download page. To download the executable file, click the link shown in Figure 3.7.
Figure 3.7: Downloading nmap‐7.70‐setup.exe
As with most executable files for Windows, the file is saved by default in the Downloads folder. Double‐click the executable to start the install process. Click Next through the windows, keeping all the defaults, until you get to Finish. Once the install has completed, open the Start menu on your taskbar and begin typing Nmap. At the top of your menu, you should see Nmap‐Zenmap GUI. Click the application, define the target assets, and click Scan to launch.
The white paper “CIS Controls Implementation Guide for Small‐ and Medium‐Sized Enterprises (SMEs)” published at www.cisecurity.org breaks down into these three phases:
Know your environment.
Protect your assets.
Prepare your organization.
In phase 1, Nmap is described as a famous multipurpose network scanner, and Zenmap is described as an easy‐to‐use graphic user interface for Nmap. You must know your environment better than an attacker and use that attacker's mind‐set in key controls to develop your security program.
CHAPTER 4Vulnerability Management
WHAT YOU WILL LEARN IN THIS CHAPTER:
Managing vulnerabilities
OpenVAS
Continuous assessment
Remediation
Nexpose Community
I have years of vulnerability management experience. At first, it was theoretical when I was teaching at Louisiana State University. It became a more hands‐on role when I worked as an IT director for a small private school and then again when I worked for the U.S. Department of Defense (DoD) as a contractor. If you are planning to take any security certification exams—whether it's ISACA, ISC2, or CompTIA—you need to be aware that the management of the vulnerability lifecycle and risk is a key component on those exams.
Some ships are titanic, and some boats are small. Some boats, like a kayak, could represent your home network, while a Fortune 50 company would be more like the Queen Elizabeth II. The goal of both vessels is the same: Don't sink. If you have been tasked with vulnerability management, your task is the same: Don't sink.
Managing Vulnerabilities
As I mentioned earlier, you must know your environment better than an attacker and use that attacker's mind‐set in key controls to develop your security program. Now that you have all the open‐source tools to troubleshoot your network and you know what assets you have to protect, you have to be able to assess those assets for vulnerabilities. It is a cyclic endeavor, as shown in Figure 4.1.
Figure 4.1: The vulnerability management lifecycle
In the discovery phase, you have to figure out what is on your network communicating to other devices. You cannot protect what you don't know you have. Once you're able to map out the assets, hosts, nodes, and intermediary devices on your network, then you're able to move to the next step.
Not all devices are created equal. A domain is a group of computers and other devices on a network that are accessed and administered with a common set of rules. A Windows domain controller (DC) is a Microsoft server that responds to login authentication requests within a network. In an enterprise environment, if a DC fails, your help desk will explode with calls because of the inability for users to log in to the domain. However, if you have a marketing department with a small file server that it backs up to once a month, if this machine fails, then it might warrant a phone call or two. After you know what machines exist on your network, you must prioritize which assets are mission critical.
Once you have identified which assets have a heartbeat and you know which assets would cause chaos through failure or compromise, the next step is to determine the assets' vulnerabilities. This is usually accomplished by analyzing the operating system, ports that are open, services running on those ports, and applications you have installed on those assets.
Now you're ready to build a report. Some reports will bubble up to upper management and require information such as trending analysis and vulnerability remediation plans. The decisions that upper management will make based on these reports could be budgetary or based on head count. The more technical reports will usually trickle down to the asset owner and contain what needs to be fixed on that device.
With the report in hand, you now have a list of vulnerabilities in your environment and on what device they reside. Some software with advanced capabilities will generate instructions on how to remediate those vulnerabilities. Most of these technical reports will give you a severity rating typically based on the Common Vulnerability Scoring System (CVSS), as listed in Table 4.1. The National Institute of Standards and Technology (NIST) maintains the National Vulnerability Database (NVD). In this database, you can see a quantitative analysis of every vulnerability based on access vector, complexity, and authentication as well as the impact to confidentiality, integrity, and availability. Basically, this means every vulnerability will have a score of 0 to 10, with 0 being good and 10 being horrendously awful.
   Table 4.1: CVSS v3.0 Ratings Source: National Institute of Standards and Technology 
SEVERITY
BASE SCORE RANGE
None
0
Low
0.1–3.9
Medium
4.0–6.9
High
7.0–8.9
Critical
9.0–10.0
In the vulnerability management lifecycle, building your remediation attack plan is a critical step. After completing the asset classification and vulnerability assessment, you correlate the findings to compile your plan of action. There are some organizations I have worked with that have the goal of becoming 100 percent free of vulnerabilities, and that just isn't a realistic goal to have in our modern digital infrastructure. If you have devices connected and communicating to the world, there is a way into your network and a way out. On mission‐critical devices, prioritize the repair of critical and high‐severity vulnerabilities. Save the less critical devices to be remediated later.
There is nothing more frustrating than taking apart a PC, fixing what you think is the problem, putting that PC completely back together, and then realizing you didn't fix it and having to start over. Verification is vital to this process. If you do not rescan assets looking for the same vulnerability and you assume that your fix worked but it didn't, you will have a false sense of confidence in that item and leave yourself open to attack.
It has been my experience that the IT industry is one of the most dynamic, with constant change and evolution. There will be times in an enterprise environment that risky behavior will happen when change management processes and procedures are not followed. Our networks are constantly changing and evolving. The networking infrastructure staff throws a new server with no patches on the domain because the people who requested it have the authority to bypass security controls. There are people in the DoD with enough brass on their shoulders to ask for something like this without understanding the repercussions. Those assets still need to be scanned, and if they're not scanned before being added to your network, you get to scan them after.
Some organizations I have worked with have compliance needs that require they scan monthly. Some organizations have a robust security policy where they require assets to be scanned at least once a week. Either way, you vulnerability scanning is not just a one‐time action. It is something that needs to be maintained to ensure your network/infrastructure is secure.
OpenVAS
The Open Vulnerability Assessment System (OpenVAS) is an open‐source framework of several tools and services that offers powerful vulnerability scanning and management systems. It was designed to search for networked devices, accessible ports, and services and then test for vulnerabilities. It is a competitor to the well‐known Nexpose or Nessus vulnerability scanning tool. Analyzing the results from tools like these is an excellent first step for an IT security team working to create a robust, fully developed picture of their network. These tools can also be used as part of a more mature IT platform that regularly assesses a corporate network for vulnerabilities and alerts IT professionals when a major change or new vulnerability has been introduced.
At the center of this modular service‐oriented product is the OpenVAS scanner, sometimes called an engine. The scanner uses the Network Vulnerability Tests (NVT) maintained by Greenbone Networks based in Germany. Greenbone Networks was founded by experts for network security and free software in 2008 and provides an open‐source solution for analyzing and managing vulnerabilities, assessing risk, and recommending an action plan. According to the OpenVAS website, there are more than 50,000 NVTs, and this number is growing weekly.
The OpenVAS Manager is the actual manager of the processes, controlling the scanner using OpenVAS Transfer Protocol (OTP) and OpenVAS Management Protocols (OMP). The Manager component schedules scans and manages the generation of reports. The Manager runs on a SQL database where all the scan results are stored. The Greenbone Security Manager (GSM) web application interface is the easiest alternative to the command‐line client to control the scanner, schedule scans, and view reports. Once you have OpenVAS installed, you will log in through the Greenbone Security Assistant, as shown in Figure 4.2.
Figure 4.2: The Greenbone Security Assistant login for OpenVAS
An ISO file is a replication of an entire CD or DVD that you use to install operating systems or software. Sometimes called an ISO image, you will need this file to deploy the OpenVAS image. Once you have the OpenVAS .iso file from the website, you can install on bare metal or in a virtual environment. If you want to install this on a Linux system, I suggest 16.04. You will need a newly deployed Ubuntu server, a nonroot user with sudo privileges, and a static IP address. You also need to know how to use the following commands:
sudo apt‐get update ‐y
sudo apt‐get upgrade ‐y
sudo reboot
The sudo command is used on Linux systems and means “superuser do.” If you are more familiar with the Windows environment, sudo is similar to right‐clicking a program and choosing Run As Administrator. When you add the ‐y option, it will bypass any yes/no prompt with an affirmative answer.
The apt‐get update command will update the list of available packages and versions. The apt‐get upgrade command will install the newer versions.
A little like plug‐and‐play in the old days, you need to install the required dependencies using the following commands:
sudo apt‐get install python‐software‐properties
sudo apt‐get install sqlite3
OpenVAS is not a default in the Ubuntu repository, so to use the personal package archive (PPA), you must add it, update it, and install it using the following commands:
sudo add‐apt‐repository ppa: mrazavi/openvas
sudo apt‐get update
sudo apt‐get install openvas
By default, OpenVAS runs on port 443, so you need to allow this through your firewalls to enable the update of the vulnerability database. The NVT database contains more than 50,000 NVTs, and this is always growing. For online synchronization, use the following command:
sudo openvas‐nvt‐sync
If you skip this step, you will most likely have critical errors later. If you prefer, you can wait until you launch the program and go to the Administration feature inside the software to update the vulnerability database feed. Either way, it must be done.
Once the database is synced, use your browser (preferably Mozilla Firefox) to log into https://your static IP address with the default credentials admin/admin. You should then see the OpenVAS Security Assistant welcome page displayed on your screen, as shown in Figure 4.3.
Figure 4.3: Greenbone Security Assistant welcome screen for OpenVAS
The blue star icon is one of the most important buttons on the home page. It will allow you to add a new object such as the configuration of a scan or host list. If you are looking to scan just one IP address, you can use the super‐quick Scan Now button on the home page. To get familiar with the software, start with one such as in Figure 4.4 and then branch out to many.
Figure 4.4: The default Localhost setup for launching a scan
As you may have noticed, there are multiple star icons. If you use the star icon on the right side of the program, you will create a new filter. To add a list of subnets, use the star icon in the top header of the Targets page. The process from start to finish will look like what's shown in Figure 4.5.
Figure 4.5: Workflow for a scan of assets for vulnerabilities
To configure a list of hosts after you're done with the one, navigate to the Configuration tab. Look for Targets in the header portion of the page. This is where you can add a new list of subnets of IP address ranges. Please be aware that, depending on the size of your subnets of IP address ranges, CIDR notation can occasionally error out. You may just need to itemize the list of individual IP addresses. Your local host will be listed on the home page by default.
Name the scan appropriately. I usually try to name the scan in a way that allows me to refer to the name and know what I scanned rather than some type of numerical name where I have to actually open the scan to know what I was thinking at the time. The scanning configuration can be left at the default of Full And Fast Ultimate. Select your targets and click Create Task. The new task will show up with a green bar next to the status of New.
When you're ready, click the green arrow under Actions to run this new task and start your scan.
This is the part I love—watching in the task details page. To watch the scan live, set the No AutoRefresh option to Refresh Every 30 Sec. It's better than television. Depending on how many targets you listed, the scan should be done within a few minutes.
Reporting is vital to your vulnerability management lifecycle. After the scan has completed, check the summary of scan results. They will be classified into High, Medium, and Low and will also contain logs. Each issue that has been discovered will be detailed into vulnerabilities, impact, affected software, and (my favorite if it's available) how to fix what is broken. You can download and export this file as a .pdf, .txt, .xml, or .html file.
Figure 4.6 is an example of filtered results to include in a report. You have the IP address of the host, what operating system is on the host, and the security issues and threat level below.
Figure 4.6: Summary results of an asset
Nexpose Community
A lot of organizations offer free or community editions of their software. These editions are usually a lighter version of the paid copy with limited features. Once such community vulnerability management software is Nexpose by Rapid7. There are several versions of Nexpose but the community version is an excellent place to start learning because it's free. If you search in a browser for “Nexpose Community,” one of the first options should be the community software directly from Rapid7. You could download from other third parties but I find it safer to download and verify software directly from the vendor whenever possible.
After you complete the form to receive your community license, you will end up on a page to download either the Windows or Linux version with its MD5 sum hash. The hash will verify that your download is not corrupt. Once the download is finished, run the installer. You will notice the community version of Nexpose will only work on 64‐bit architecture. To scan an enterprise for vulnerabilities takes a lot of resources including CPU and RAM. Historically, 32‐bit architecture can only recognize 4GB of RAM. Nexpose Community cannot do a proper scan with only 4GB of RAM.