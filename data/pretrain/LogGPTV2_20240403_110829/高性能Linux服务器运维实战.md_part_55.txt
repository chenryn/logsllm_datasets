timestamp=ZZZ&sign=DDD"
现在的问题是如何获取时间戳和签名值。这需要用到一个密钥，此密钥就是机器人安
其中，XXXXXX为access_token值，ZZZ为时间戳，DDD 为签名值。
接着，
这里通过Python定义了一个告警脚本，这个脚本中用到了requests，requests是Python
3.获取钉钉告警脚本
https://oapi.dingtalk.com/robot/send?access_token=xxxxxx&timestamp=
[root@zabbixserver
if
def msg(text):
#-*-coding:utf-8-*-
#!/usr/bin/python
#vim /usr/local/zabbix/alertscripts/dingding.py
[root@zabbixserver ~]#pip install requests
import
import
import json
import requests
介绍脚本中Webhook地址中的时间戳和签名值如何获取。钉钉开放平台将
msg(text)
text=sys.argv[1]
json_text=
name
"msgtype":"text",
"text":
OS
sys
"content": text
#这个是Webhook地址加上时间戳和签名值，如何获取时间戳和签名
~]#yum install python-pip
运维监控利器Zabbix第6章
305
---
## Page 317
306
所示。
择“报警媒介”，单击下面的“添加”按钮，添加一个报警类型为“钉钉告警”，如图6-86
就是上面给出的那个脚本，已重命名为 dingding.py，那么这里就填入dingding.py 即可。
zabbix/alertscripts，接着做一些可执行权限修改：
签名值写入dingding.py脚本对应的 Webhook 地址上即可。
编辑，也可以新建用户。这里以管理员用户Admin为例，单击用户进入编辑页面，选
着单击右上角“创建媒体类型”，如图6-85所示。
sha256).digest()
钥即可获得时间戳和签名值：
全设置页面“加签”一栏下面显示的以 SEC开头的字符串。通过如下Python 代码加上密
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战素例
这里需要注意，alert.message 仅仅是获取告警内容，报警类型选择“脚本”，脚本名称
接着，选择导航栏上面的“管理”菜单，然后选择“用户”，可以在现有的用户下
最后，将此脚本放到Zabbix server的alertscripts目录下，这里是/usr/local/zabbix/share/
4.ZabbixWeb上配置钉钉告警
这样设置后，Zabbixweb端就可以自动获取到脚本。
最后，修改Zabbix server配置文件zabbix_server.conf，添加如下内容：
此Python代码输出结果，第1个是时间戳，第2个是签名值。将获取到的时间戳和
AlertScriptsPath=/usr/local/Zabbix/share/zabbix/alertscripts
[root@zabbixserver alertscripts]# chmod 755 dingding.py
print(sign)
print(timestamp)
sign = urllib.quote_plus (base64.b64encode (hmac_code))
string_to_sign_enc = bytes(string_to_sign).encode('utf-8)
string_to_sign =*()\n()'.format(timestamp
secret_enc = bytes(secret).encode('utf-8')
secret='SEC开头的字符串密钥
timestamp
import urllib
import
import
import
importtime
#python 2.7
#-*-Coding:UTF-8-*-
#!/usr/bin/envpython
base64
hashlib
hmac
---
## Page 318
容模板可配置如下：
员都能收到告警信息了。
最后一步是配置一
默认标题：
在这个界面下，
这里需要注意“收件人”的设置，
用户
ZABBIX监测中资产记录报表配量理
报警媒介类型
一般agen代理程序 认证用户群组用户 报简媒介类型脚本 队列
故障【TRIGGER.STATUS），服务器：{HOST.NAME}发生：[TRIGGER.NAME}故障！
ZABBIX
报警媒介类型
选项
监测中资产记录报表配置管理
一个报警动作，
0
脚本参数
脚本名称
已启用
397824
名称
图6-86设置钉钉告警通知人和时段
dingdingpy告警脚本的名称，此文件要事先放到zabbix server上]
钉钉告警
报警媒介
(ALERT.MESSAGE)
脚本类型选择脚本
添加
图6-85添加钉钉报警媒介
性则使用
单击导航栏上面的“配置”菜单，
已息用
收件人
英型打告胃
这个收件人输入all即可，这样，钉钉群下面的成
<
1-7.00:00-24:00
来分类
如图6-87所示。
运维监控利器Zabbix第6章
添加联游
选择“动作”，单
307
---
## Page 319
308
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
最后的“操作”细节就按照图6-88的配置即可。这样，
消息内容：
告警时间：{EVENT.DATE}
监控项目：{ITEM.NAME}
告警地址：{HOST.IP)
告警主机：（HOST.NAME}
主机群组模板主机维护动作关联项事件
ZABBIX监测中资产记业报衷配置管理
主机群组
ZABBIX监测中资产记录报表配置I管理
事件ID：{EVENT.ID】
告
动作
动作
警信息：{TRIGGER.NAME}
前状态：{TRIGGER.STATUS}
警等级：(TRIGGER.SEVERITY}
控取值：{ITEM.LASTVALUE}
操作恢复损作
操作
新的触发条件
恢复操作
主机
已启用
名称钉钉苦警自定义动作名称
条件
维护动作关联项事件
鑫
Update ope
添加
航发器名称
标签
消息内容
默认标题
操作
图6-88
erations
信息
图6-87
状态
[EVENT.TIME}
{TRIGGER
contains
设置钉钉告警故障通知内容
E
自动发现
NAME
服务
创建钉钉告警动作
名称
exist
故障时发生告警信息配置完
移
Suopo
---
## Page 320
所示。
里模拟一个MySQL故障的恢复，检查告警信息是否能通过Zabbix发送给钉钉群。可单击
完成。
可以模拟一个监控项故障，然后测试告警信息是否能通过Zabbix发送给钉钉群。这
最后的“操作”细节按照如图6-89的配置即可。至此，钉钉告警整合Zabbix配置
接着配置故障恢复后的信息发送格式，
5.
消息内容：
默认标题：
在这个界面下，
测试钉钉告警功能
事件ID：{EVENT.ID}
持续时间：{EVENT.AGE}
恢复时间：{EVENT.RECOVERY.DATE）【EVENT.RECOVERY.TIME}
告警时间：{EVENT.DATE}【EVENT.TIME}
告警信息：（TRIGGER.NAME】
告警等级：{TRIGGER.SEVERITY）
监控取值：（ITEM.LASTVALUE}
监控项目：（ITEM.NAME）
告警主机：（HOST.NAME}
恢复{TRIGGER.STATUS），服务器：[HOSTNAME1}：[TRIGGER.NAME}已恢复！
当前状态：{TRIGGER.STATUS）
动作
主机科租模板主机维护动作关联项事件自动发现服务
ZABBIX监测中资产记录报表配置管理
警地址：{HOST.IP）
动作操作恢复操作
，默认标题和消息内容模板可配置如下：
消息内容
默认标题
操作
Update operations
图6-89设置钉钉告警故障恢复内容
TEN
GER
ME)
STATUS
ALUE
rators通过钉钉告警
，单击“恢复操作”标签，如图6-89所示：
运维监控利器Zabbix第6章
Support
309
---
## Page 321
310
图6-91所示。
息，然后根据错误信息排查即可。如果显示发送成功，
高性能Linux服务器运维实战：shell编程、
这样，钉钉整合Zabbix告警功能，成功实现。
这个界面显示了告警日志是否发送成功，如果没有发送成功，可以看到具体的错误信
201-1-19
钉钉告餐
图6-91
®
<钉钉
中国电信4G
图6-90钉钉告警信息发送日志
手机上收到的钉钉告警信息截图
172.16.213.236
钉钉告警机器人机人
告
告
事件ID：585
8
叶
显
叶
status
172.16.213.236
告警地址：
172.16.213.236
告警主机：
警主机：
警时间：2018.11.19
09:45
前警
控
地址：
等级：Warning
取值：Down（0）
运维团队全员
事件ID:585
监控告警、性能优化与实战案例
18:37
目
心
G
19%
，那么钉钉就能收到告警信息了，
#
+
如
---
## Page 322
Prometheus 的研发工作上，并且有超过120项的第三方集成。
版本，能更好地与容器平台、云平台配合。
项目，成为受欢迎度仅次于Kubernetes的项目。2017年底发布了基于全新存储层的2.0
并于2015年正式发布。
统，由工作在SoundCloud的前Google员工于2012年创建，作为社区开源项目进行开发，
7.1.1Prometheus简介
最后还介绍了如何通过Grafana+Zabbix+Prometheus打造全方位立体监控系统。
是一个开源的指标监测和可视化工具，它的出图非常炫酷，非常适合运维监控大屏展示。
控系统，它既可以构建以主机为中心的监控，也可以构建以服务为导向的动态架构。Grafana