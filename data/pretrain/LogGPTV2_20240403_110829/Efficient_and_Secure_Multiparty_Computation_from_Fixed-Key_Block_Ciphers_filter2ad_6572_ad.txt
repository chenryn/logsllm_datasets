security of the half-gates garbling scheme. (Everything we say
here applies to the privacy-free version of the scheme as well.)
We weaken the deﬁnition of circular correlation robustness to
match exactly what is needed for the security proof of Zahur
et al., and then show how to achieve the deﬁnition based on
the notions introduced in Section III.
, i, b), where i1 < i.
The notion of “circular correlation robustness for naturally
derived keys” can be viewed as a form of tweakable circular
correlation robustness where the attacker does not have full
control over the queries made to the oracle Otccr
R (cf. Def. 3).
We proceed to give the details. Let H : {0, 1}2k → {0, 1}k
be a function, and let R be a distribution on {0, 1}k. We say
a sequence of operations Q = (Q1, . . . , Qq) is natural if each
Qi is one of the following:
1) xi ← {0, 1}k.
2) xi := xi1 ⊕ xi2, where i1 < i2 < i.
3) xi := H(xi1 , i), where i1 < i.
4) xi := O(xi1
Fix some natural sequence Q of length q. In the real-world
experiment, denoted RealH,Q,R, a key R is sampled from R
and then the oracle O in step 4, above, is set to Otccr
R . In
the ideal-world experiment, denoted IdealQ, the oracle O is
instead a function chosen uniformly from F2k+1,k. Either
experiment deﬁnes a distribution (determined by executing the
operations in Q in order) over values x1, . . . , xq, which are
output by the experiment.
Deﬁnition 4. For H,Q,R as above and a distinguisher D,
(cid:3)(cid:3)(cid:3)
(cid:5)(cid:3)(cid:3)(cid:3).
deﬁne Advccrnd
D({xi}) = 1
{xi}←RealH,Q,R
We say H is (t, q, ρ, ε)-circular correlation robust for natu-
rally derived keys if for all D running in time at most t, all
Q of length q, and all R with min-entropy at least ρ, it holds
that Advccrnd
H,Q,R(D) ≤ ε.
D({xi}) = 1
H,Q,R(D) as
{xi}←IdealQ
(cid:5) −
Pr
Pr
(cid:4)
(cid:4)
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:34 UTC from IEEE Xplore.  Restrictions apply. 
831
It is immediate that a tccr hash function satisﬁes the above
deﬁnition. But this is overkill, and we show now that a family
of hash functions satisfying the notion can be constructed
from any H that is ccr. Speciﬁcally, we show that the keyed
S(x, i) = H(S⊕x⊕i) satisﬁes the above deﬁnition
function H(cid:3)
when S is uniform. (We stress, however, that S is public and
so is also given to D.) Note that in the context of the half-
gates scheme, the circuit garbler would choose S and send it
(along with the garbled circuit) to the evaluator.
Theorem 3. Let H be (t, q, ρ, ε)-ccr, and deﬁne H(cid:3)
S(x, i) =
H(S ⊕ x ⊕ i). Then H(cid:3)
)-circular correlation
robust
for naturally derived keys (where the probabilities
are also taken over uniform choice of S ∈ {0, 1}κ) with
ε(cid:3)
Proof. Deﬁne HS(x) = H(S ⊕ x), so that H(cid:3)
S(x, i) =
HS(x ⊕ i). Fix some sequence Q = {Q1, . . . , Qq}. Consider
the random variables x1, . . . , xq that are deﬁned during the
course of experiment RealH(cid:2),Q,R, and let Coll denote the event
that there exist distinct i1, i2 with xi1 ⊕ i1 = xi2 ⊕ i2.
S is (t, q, ρ, ε(cid:3)
= 2ε + q2/2k+1.
To bound the probability of Coll, note that all queries to
HS throughout the course of the experiment (which can occur
either as “type 3” or “type 4” operations) are determined
independently of S. Consider a modiﬁed experiment Real∗
Q,R
in which HS is replaced with a function f chosen uniformly
from Fk. Viewing S as the key, and using the fact that H is
correlation robust, we must have
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)
Pr
RealH(cid:2) ,Q,R
[Coll] − Pr
Real
∗
Q,R
[Coll]
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3) ≤ ε.
Q,R is one of the following:
Each operation Qi in Real∗
1) xi ← {0, 1}k.
2) xi := xi1 ⊕ xi2, where i1 < i2 < i.
3) xi := f (xi1
4) xi := f (R ⊕ xi1
Fix some distinct i1, i2. We have
⊕ i), where i1 < i.
⊕ i) ⊕ bR, where i1 < i.
(cid:6)
⊕ xi2
xi1
=
i∈I
xi ⊕
(cid:6)
j∈J
f (xj ⊕ ij) ⊕
(cid:6)
k∈K
f (R ⊕ xk ⊕ ik) ⊕ bR,
for some sets I,J ,K ⊂ [q] and b ∈ {0, 1}. Note that Coll
⊕ xi2 = i1 ⊕ i2. If the above expression is
occurs iff xi1
syntactically 0 (i.e., I = J = K = ∅ and b = 0), then Coll
cannot occur. If that is not the case, then at least one of I,J ,K
must be nonempty (note that b = 1 implies that K (cid:10)= ∅). But
−k.
then the probability that xi1
So, by a union bound, we ﬁnd that the probability of Coll in
Real∗
Q,R is at most q2/2k+1. Hence the probability of Coll in
RealH(cid:2),Q,R is at most q2/2k+1 + ε.
that Coll does not occur in
RealH(cid:2),Q,R, no two queries to H(R⊕·) as part of evaluating a
“type 4” operation O(xi, i, b) = H(R⊕(S⊕xi⊕i))⊕bR ever
repeat, and thus we can construct from D a legal distinguisher
against H in the sense of circular correlation robustness.
⊕ xi2 = i1 ⊕ i2 is at most 2
Conditioned on that event
Viewing R as the key, this implies that the distinguishing
advantage of D is at most
Pr
RealH(cid:2) ,Q,R
[Coll] + ε.
This completes the proof.
VI. OTHER APPLICATIONS OF CORRELATION
ROBUSTNESS
Here we describe two other applications of correlation
robust hash functions to secure distributed computing. Our
discussion here is brief only because the improvements, once
described, are immediate. We defer discussion about concrete
performance improvements to Section VIII, where we show a
3× improvement for both applications.
A. Length Extension for OT
A well-known technique for performing OT of long mes-
sages is to ﬁrst carry out OT for (short) keys, and then to
encrypt each message with the corresponding key. Thus, at a
high level, we need to encrypt each of (cid:5) messages m1, . . . , m(cid:2)
with the corresponding key from among k1, . . . , k(cid:2). While
this can of course be done using a block cipher, the natural
approach to doing so would involve keying the cipher with
each of the (cid:5) keys, thus imposing the cost of (cid:5) key-scheduling
operations. We observe that it is possible to do better using a
correlation robust hash function H.
Let mi = m1
i , . . . , mt
Then the encryption c1
done by setting
i, where each block mj
i , . . . , ct
i is k bits long.
i of each message mi can be
i = H(j ⊕ ki) ⊕ mj
cj
i .
(We do not need randomized encryption here since each key
is used to encrypt just one message.) Security follows directly
from correlation robustness of H.
B. The GGM Tree and Distributed Point Functions
The GGM tree construction [23] involves a binary tree
in which the label of a node is used to derive the label of
its children using a length-double pseudorandom generator
(PRG) G. If G is instantiated using AES in counter mode, then
deriving the labels for a leaf of the tree will require multiple
key-scheduling operations. We observe that G can instead be
instantiated using a correlation robust hash via
G(k) = H(1 ⊕ k)(cid:3) H(2 ⊕ k).
The GGM tree has recently been used in the construction
of distributed point functions [11], which in turn have found
several applications including secure computation [19], private
queries on public data [48], and anonymous messaging [15].
VII. INSTANTIATING HASH FUNCTIONS IN THE RPM
In this section, we show constructions of hash functions
based on a random permutation π that satisfy the deﬁnitions
from Section III. Our proofs all rely on the H-coefﬁcient
technique, which we review in Section VII-A.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:34 UTC from IEEE Xplore.  Restrictions apply. 
832
A. The H-Coefﬁcient Technique
We brieﬂy recall the H-coefﬁcient technique [42, 13], spe-
cialized for our proofs in the following three sections. In all
cases we consider a deterministic distinguisher D given access
to two oracles. The ﬁrst oracle is always a random permutation
π on {0, 1}k (and its inverse). The second oracle O can take
two forms: in the real world it is a function that depends on a
key R sampled from a distribution R, while in the ideal world
it is a random function with range {0, 1}k. We are interested
in bounding the maximum difference between the probabilities
that D outputs 1 in the real world vs. the ideal world, where
the maximum is taken over all D making p queries to its ﬁrst
oracle and q queries to its second oracle.
We deﬁne a transcript of D’s interaction by
Q = (Qπ,QO, R),
where Qπ = {(x1, y1), . . .} records D’s queries/answers
to/from π or π−1 (with (x, y) ∈ Qπ meaning π(x) = y,
regardless of whether the query was to π or π−1) and
QO = {(w1, z1), . . .} records D’s queries/answers to/from the
second oracle. A key R is appended to the transcript as well
(even though it is not part of the view of D) to facilitate the
analysis: in the real world, this is the key used by the second
oracle, whereas in the ideal world it is simply an independent
key sampled from R. A transcript Q is attainable for some
ﬁxed D if there exist some oracles such that the interaction
of D with those oracles would lead to transcript Q.
Fix some D. Let T denote the set of attainable transcripts,
and let Prreal[·] and Prideal[·] denote the probabilities of events
in the real and ideal worlds, respectively. The H-coefﬁcient
technique involves deﬁning a partition of T into a “bad” set
Tbad and a “good” set Tgood = T \Tbad, and then showing that
Prideal[Q ∈ Tbad] ≤ ε1
and
∀Q ∈ Tgood :
Prreal[Q]
Prideal[Q]
≥ 1 − ε2.
It is then possible to show that the distinguishing advantage
of D is at most ε1 + ε2.
One key insight of the H-coefﬁcient technique is that the
ratio Prreal[Q]/ Prideal[Q] is equal to the ratio between the
probability that the real-world oracles are consistent with Q
and the probability that the ideal-world oracles are consistent
with Q. Now, for any attainable transcript Q = (Qπ,QO, R),
the probability that the ideal world is consistent with Q is
always exactly
PrR[R]
(2k)p · 2kq
,
(1)
where for integers 1 ≤ b ≤ a, we set
(a)b = a · (a − 1)··· (a − b + 1)
with (a)0 = 1 by convention. This is so since the probability
that a random permutation on {0, 1}k is consistent with the p
queries in Qπ is exactly 1/(2k)p; the probability that a random
function with range {0, 1}k is consistent with the q queries to
QO is exactly 1/2kq; and the probability that the key is R is
exactly PrR[R]. Bounding the distinguishing advantage of D
thus reduces to bounding the probability that the real world is
consistent with transcripts Q ∈ Tgood.
Let π (cid:13) Qπ denote the event that permutation π is consistent
with the queries/answers in Qπ, i.e., that π(x) = y for all
(x, y) ∈ Qπ. Since, in the real world, the behavior of the
second oracle is completely determined by π and R, we can
also write (π, R) (cid:13) QO to denote the event that permutation π
and key R are consistent with the queries/answers in QO. For
a (good) transcript Q = (Qπ,QO, R), the probability that the
real world is consistent with Q is exactly
Pr[(π, R) (cid:13) QO | π (cid:13) Qπ] · Pr[π (cid:13) Qπ] · PrR[R]
(using independence of R and π). We have Pr[π (cid:13) Qπ] =
1/(2k)p exactly as before. The crux of the proof thus reduces
to bounding Pr[(π, R) (cid:13) QO | π (cid:13) Qπ]. We can equivalently
write this as Pr[∀(w, z) ∈ QO : Oπ
R(w) = z | π (cid:13) Qπ]. Note
that since the proof mainly uses the randomness in the RPM,
we only need a non-programmable random permutation.
B. Correlation Robustness
We begin by showing a construction that achieves corre-
lation robustness. We refer to the resulting hash function as
MMO since it is reminiscent of (though not identical to) the
Matyas-Meyer-Oseas construction. Namely, we deﬁne
MMOπ(x)
def
= π(x) ⊕ x.
Theorem 4. If π is modeled as a random permutation then
MMOπ is (p, q, ρ, ε)-correlation robust, where
ε =
2pq
2ρ +
q2
2k+1
.
Proof. We consider a deterministic distinguisher D making
queries to two oracles. The ﬁrst is a random permutation π
on {0, 1}k (and its inverse); in the real world, the second oracle
R(·) = MMOπ(R ⊕ ·) (for R sampled from a distribu-
is Ocr
tion R), and in the ideal world it is an independent random
function from {0, 1}k to {0, 1}k. As in Section VII-A, we
denote the transcript of D’s interaction by Q = (Qπ,QO, R).
We only consider attainable transcripts from now on.
We say a transcript Q = (Qπ,QO, R) is bad if either:
• (B-1) There is a query (w, z) ∈ QO and a query of the
form (R ⊕ w, (cid:6)) or of the form ((cid:6), R ⊕ w ⊕ z) in Qπ.
• (B-2) There exist distinct queries (wi, zi), (wj, zj) ∈ QO
such that wi ⊕ zi = wj ⊕ zj.
In the ideal world, for some ﬁxed queries (w, z) ∈ QO and
(x, y) ∈ Qπ, we have
Pr[R ⊕ w = x] = Pr[R = w ⊕ x] ≤ 1
2ρ
as R has min-entropy ρ. Thus the probability of (B-1) is at
most 2pq · 2
−ρ. Similarly, the probability of (B-2) is
(cid:7)
(cid:8)
Pr[∃i (cid:10)= j : wi ⊕ zi = wj ⊕ zj] =