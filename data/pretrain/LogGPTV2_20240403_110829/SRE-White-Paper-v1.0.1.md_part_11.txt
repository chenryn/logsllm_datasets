（含压力测试）、安装部署（与环境相关）、应用 /业务监控、首笔功
能监控及保障、重要功能清单、重要配置与参数、运行效能评估等
文档。
知识库是否就绪。建立完善的知识库是保证系统可运维性的重
⽹址：SRE-Elite.com 72 微信：SRE精英联盟
SRE实践白皮书（2023年）
要基础，需要对系统的各项功能和操作进行详细的描述，并建立知
识库，以便在需要时能够快速查找相关信息。
3.3.7.4 新系统或新业务上线保障评估
新系统或新业务上线是从 0到1的过程，具体的工作通常包括：
上线准备工作、制定技术方案、评估测试管控、上线文档准备、风
险评估、安全保障措施、运维监控准备、上线过程协同、上线发
布、系统验收、上线试运行等。
新系统或新业务上线给企业带来机会与挑战。一方面，作为项
目重要里程碑，新系统将为企业业务发展或运营管理助力，通常业
务需求方会投入大量精力在上线后的运营推广工作，以期望更好地
给业务及客户带来价值；另一方面，新系统上线带来众多的不确定
性因素，需要对不确性因素进行管理。
不确定性包括：新业务流程的合规性、数据安全、隐私安全等
问题；新业务对现有上下游系统在业务及性能层面的影响；新系统
在设计上是否满足业务活动的性能、容量要求；配套的稳定性相关
的监控、日志、应急、数据备份等非功能性需求是否就绪；功能已
知缺陷的影响是否评估；发布上线、环境部署、下线方案是否就
绪；对系统业务运行情况的观测能力等
新系统或新业务自身的业务风险可能会对存量业务流程产生影
响。在加强风险评估工作上，SRE应加强以下风险的评估：
 新系统业务带来的风险防范、监管合规、数据安全、隐私
安全等问题；
⽹址：SRE-Elite.com 73 微信：SRE精英联盟
SRE实践白皮书（2023年）
 新系统业务流程可用性、终端体验、数据准确性等风险；
 新系统业务对现有上下游系统在容量、性能方面的影响，
以及上下游配合改造对原有业务带来的影响；
 新系统资源、架构、重要功能是否满足业务期望，以及接
下来业务活动的性能、容量要求；
 系统压力测试、容量评估方案、功能遗留缺陷等是否评估
到位等；
另外，SRE 还应主动推动以下工作：
 标准化先行，建立业务与技术层面的合规、风险、隐私、
安全等方面的管理要求，并辅助相关技术检测手段。
 业务系统非功能性需求的建设，比如系统回退、版本切
换、灰度发布、终端体验感知等配套功能的实现。
 业务系统技术运营需求的建设，比如对首笔业务感知、业
务流水监测、关联系统的技术运营监测等。
 系统性能与容量管理，包括相关评估指标、基线容量设
计、指标数据加工、容量评估分析报告、压力测试等工具建
设。
同时，针对可能突增的业务模式，SRE 需要建立限流、削峰机
制。架构优化上，需要前端系统做交易并发控制开关，必要时进行
前端限流、削峰，以及后端服务降级，通过一些前端交互设计减少
客户的体验影响，重点保障系统的核心服务。
SRE 通过聚焦新系统或新业务上线阶段，做好运维工作左移，
⽹址：SRE-Elite.com 74 微信：SRE精英联盟
SRE实践白皮书（2023年）
提前做好资源交付能力建设提高系统上线速度，利用运维平台能力
建设帮助业务研发专注业务逻辑，提前参与到架构及非功能性需求
的研发与验收，能够让系统上线后融入平台化管理模式。
3.4 发布管理
发布（Release）， 指将 经过 测 试 的、验 证 正确 的软件版本 （ 包括
但不限于客户端、服务端程序，相关配置文件、数据等）导入到目
的变更地点的行为。通过规范有效的发布管理流程，可以使发布实
施更快，成本更优，风险更小，保障业务的稳定性和可用性。
发布管理（Release Management）的目标是确保所有线上生产环
境的版本发布行为具备可控性和可追溯性，具体包括但不限于以下
几个方面：
（1）合理定义发布计划，以确保对业务影响最小化，并降低风
险。
（2）确保发布到生产环境的版本统一，并经过必要的版本质量
保证过程。
（3）确保包含安装、测试、验证和回退等发布过程中的各个环
节操作的规范性。
（4）确保发布相关的利益干系人（如 SRE/研发/测试/产品/运营
团队和用户等）的行动一致性。
3.4.1 发布准备
由于发布涉及到产品、开发、测试和运营等多个职能团队的参
与，因此在正式实施发布操作之前，必须进行一系列充分的事前准
⽹址：SRE-Elite.com 75 微信：SRE精英联盟
SRE实践白皮书（2023年）
备工作。作为线上环境的第一责任人，SRE 在整个发布过程中担负
着“发布总协调”的角色。在发布前， SRE 需要进行以下关键任
务：
 审核发布产品功能和服务的可靠性。
 评估发布的风险，并制定相应的应对策略。
 选择合适的发布方式和方案，以最大程度降低影响。
 协调各职能团队完成相应的准备工作，确保协同合作。
 主导制定具有可操作性的发布流程清单，确保流程的顺畅
执行。
 预先制定针对各种可能的发布异常的快速执行应急预案，
以确保对突发情况的迅速响应。
3.4.1.1 发布风险评估
发布风险评估是指在进行软件或系统发布前，对可能存在的风
险进行评估和分析，以便在发布过程中及时采取措施来降低风险，
确保发布的稳定性和可靠性。在业务全生命周期中，产品希望在用
户侧得到快速验证和反馈，这就要求每次的功能迭代都能快速发布
到线上环境，而 SRE 围绕业务的性能和稳定性，更加关注线上环境
的持续稳定运行，发布带来改变，改变带来风险，【发布】与【稳
定】在某种程度上存在冲突，因此，针对线上环境的每一次发布
（包括常规发布和紧急发布），引入风险评估环节变得尤为重要。
1．发布容量风险评估
通常情况下，新功能的发布往往会带来临时用户访问量的急剧
⽹址：SRE-Elite.com 76 微信：SRE精英联盟
SRE实践白皮书（2023年）
增长。因此，SRE 在执行发布之前需要做好容量风险的评估工作。
为了做到这一点，一方面可以依据发布前压力测试的数据，结合运
营数据模型（包括发布过程中和之后的流量及增速预测），提前准备
足够的发布容量冗余，并尽量避开在业务高峰期进行发布；另一方
面，可以选择将首次发布限制在某一单独区域的用户，通过该区域
的容量增长数据的分析，建立后续大规模发布时的信心和预期。
2．发布依赖风险评估
发布依赖风险评估主要包括基础设施、程序引用、下游依赖以
及上游调用几个关键方面。在基础设施方面，涵盖计算、存储、网
络等要素，需要确保相关基础设施负责人积极参与发布过程，进行
全面的风险评估和制定相应预案。在程序引用方面，包含第三方类
库、代码、数据等，必须避免偶发性故障、程序 Bug、系统错误或
安全问题对发布正确执行造成影响。对于下游依赖，应设定合理的
超时时间，提前有效预估和沟通下游流量，防止对下游系统造成过
度负担，确保强依赖变成弱依赖，同时高优先级应用不得依赖低优
先级应用。至于上游调用，需要明确各调用方的身份，根据不同优
先级制定合适的分配、限流和熔断策略，以确保整体系统的稳定性
和可用性。
3．发布异常风险评估
并非每次发布都能按计划如期完成，作为 SRE，我们需在发布
前进行细致的异常风险评估，主要涉及发布延时、发布故障以及发
布回退（包括程序、配置、数据回退）这三个方面，以应对潜在的
⽹址：SRE-Elite.com 77 微信：SRE精英联盟
SRE实践白皮书（2023年）
不确定性。发布延时指的是由于停机发布实际所造成的停机时长超
出原计划时长，或者由于热更新不停机发布新功能用户无法使用，
从而对业务可用性产生不利影响。发布故障指的是在发布过程中人
为操作不当或不可预知原因而引发的故障，例如文件、配置发布出
错，主机、网络设备故障等。至于发布回退，指的是在发布过程中
发生无法正常推进的情况，导致线上环境的用户数据受到污染，必
须将业务的程序、配置和数据回退到发布前的某一时刻。为确保系
统的稳定性，我们必须在发布前充分评估这些异常风险，以准备好
应对可能的挑战。
4．其它风险
在新功能上线初期，面临着业务竞争、无法控制的用户行为等
因素引发的诸多风险，其中包括大量的 DDoS 攻击、客户端滥用行
为等。这种情况可能导致服务过载，甚至新功能的崩溃等问题。因
此，SRE 在新功能发布上线之前需要通过有效的压力测试来规划业
务应对这些挑战。最佳的做法是为新服务设计具备 “功能开关”的
机制，并灵活运用灰度和阶段性发布的方法。
通过详尽的压力测试，可以模拟和评估在真实环境中可能发生
的各种情景，从而有效预测系统在高负载和攻击情况下的表现。同
时，引入“功能开关”机制使得在遇到问题时可以迅速关闭或切换
功能，以减轻系统负担。此外，采用灰度发布和阶段性发布的策
略，可以逐步将新功能引入生产环境，降低潜在问题对整个系统的
冲击，使问题的范围得到有效控制。
⽹址：SRE-Elite.com 78 微信：SRE精英联盟
SRE实践白皮书（2023年）
通过这些规划和策略，SRE 能够更好地保障新功能的上线稳定
性，降低因各类风险而导致的服务中断和性能问题的风险。
效果评估：
SRE 理念倡导拥抱风险，对于发布服务来讲，不可能做到 0 风
险，发布的可靠性并不是一味的追求越高越好，因为极高的可靠性
需要付出巨大的成本，与实际的回报不成正比。在错误预算
（Error Budget）的允许范围内，根据当次发布服务的具体情况，评
估风险容忍度，并预留处理风险突发情况的时间。此外，在尽可能
减少计划外停机时间（unplanned downtime）的基础上，寻找质量、
效率、成本和安全之间的平衡点，是一种有效的发布风险评估方
法。
3.4.1.2 发布方式确定
发布方式是软件开发和维护过程中采用的一系列策略和方法，
旨在确保应用程序的性能、可靠性和可用性。SRE（Site Reliability
Engineering）发布方式的核心目标是最小化应用程序停机时间和风
险，并确保新版本应用程序经过充分测试和验证，具备良好的性能
和可靠性。
典型的 SRE 发布方式涵盖蓝绿部署、金丝雀发布、滚动发布和
灰度发布。此外，在发布过程中，还存在着多种具体的部署方式，