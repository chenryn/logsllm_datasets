sidered. Although more intelligent, smarter attack behaviors
have been extensively studied in IoT environments, IoT-based
MTD techniques dealing with APT attacks have been rarely
studied [107].
Key Methodologies: Casola et al. [26] identiﬁed recon-
ﬁgurable architectural
layers to develop shufﬂing-based or
diversity-based MTD in terms of security and physical layers.
IP shufﬂing-based MTD has been developed based on IPv6 for
IoT devices [140, 162, 163]. Mahmood and Shila [101] used
minimal trusted code in an IoT device, which can be erased
after it was used in order to ensure security in a resource-
constrained IoT environment.
Evaluation Methods: As observed in other domains, simu-
lation testeds are the most popular validation method. A real
IoT testbed with end devices (e.g., laptops), called ‘6LoWPAN
testbed’ [140], is developed to validate IP shufﬂing MTD.
Some recent studies developed the testbeds for IP mutation-
based MTD using IPv6 [162, 163].
Fig. 11 shows an implementation of MTD in IoT devices
where context-aware coding and diversiﬁcation is used as
an MTD technique where a minimal device code is used to
ensure system security in a resource-constrained IoT environ-
ment [101].
Pros and Cons: The conventional security standard following
the concept of defense-in-depth may not protect IoT devices
because you cannot install those mechanisms into the IoT
devices and difﬁcult to view and monitor the activities hap-
pening inside the device. An effective deployment of MTD
technique in IoT that confuses an attacker at the very ﬁrst
phase of the cyber kill chain by APT attackers can make a
25
target invisible, and invalidate their intelligence obtained from
reconnaissance. Therefore, MTD makes the attackers harder
to map the devices, exploit their vulnerabilities and launch
the attacks. However, the constraints on IoT devices (e.g.,
CPU, energy consumption, memory) and network (e.g., low-
bandwidth, high packet-loss) limit the effectiveness of MTD
in IoT environments.
C. Cyber-Physical Systems (CPS)
CPS is a system with cyber capabilities in physical worlds
embracing humans, infrastructure or platforms that allow to
communicate to each other [122]. The advance of CPS has
been made along with increased cyber capabilities in terms of
communications, networking, sensing, and computing as well
as enhanced capabilities of physical systems with materials,
hardware, and/or sensors/actuators. The unique aspect of CPS
is from the coexistence and coordinations between cyber
capabilities and physical resources [122]. In this section, we
discuss what key MTD techniques, attacks, methodologies,
and evaluation methods are considered in existing MTD tech-
niques developed for CPS.
MTD Techniques: MTD techniques have been developed
to protect CPS environments. Li et al. [95] developed a
lightweight, adaptive packet morphing technique; Potteiger
et al. [124] used an instruction set randomization to protect
a vehicular network. Some MTD works are proposed to
protect supervisory control and data acquisition (SCADA)
system, such as IP hopping mutating the IP addresses of
the gateway router in a power grid SCADA [116], Dynamic
Generated Containment System (DGCS) [28], or IP hopping
at an SCADA [150].
Main Attacks: The attack behaviors considered in developing
MTD techniques for CPS include code injection attacks in a
vehicular network [124], eavesdropping and/or trafﬁc analysis
attacks [95, 116], IP scanning attacks [116], brute-force login,
zero-day exploit, a malicious binary upload, and DDoS [28],
IP spooﬁng, relay attack, vulnerability scanning, OS detec-
tion [150].
Key Methodologies: Li et al. [95] formulated a trafﬁc morph-
ing problem as an optimization problem aiming to minimize
the number of redundant packets in the trafﬁc morphing
process. Pappa et al. [116] developed an MTD architecture
on Iowa State’s PowerCyber testbed for targeted cyberattacks
with a real world SCADA software and physical relays. Chin
and Xiong [28] also developed the Dynamic Generated Con-
tainment System (DGCS) based on a virtualized Docker [106]
to protect
the host service and to detect a threat. Ulrich
et al. [150] developed an IP hopping MTD based on four
transformations of IP changes, two translations of the data-
gram’s source address (SNAT) and the destination (DNAT),
respectively.
Evaluation Methods: Li et al. [95] conducted a simulation
study to validate the proposed trafﬁc morphing algorithm using
a synthetic CPS network trafﬁc and real-world network traces,
including TCP and UDP packet-headers,
to obtain target
sessions. Pappa et al. [116] validated an IP-hopping technique
26
at
the switch. Network topology shufﬂing is also a well-
known MTD technique [2, 13] that has been applied in SDN
environments in order to minimize security vulnerabilities in
attack paths [69] by the SDN controller identifying an optimal
network reconﬁguration. Scalability issue in SDN environ-
ments is also managed by the SDN controller which creates
scalable attack graphs [31]. An SDN-based packet header
randomization is proposed to realize unlinkability anonymity
in communications where the SDN controller and OF switches
take care of routing based on nonce information [143, 156].
Main Attacks: Common attacks considered in SDN-based
MTD approaches include reconnaissance (or scanning) at-
tacks [31, 66, 69, 78, 79, 85, 138] and DDoS attacks [13, 145],
which can be countermeasured by using random IP mutation
and/or network topology shufﬂing.
Key Methodologies: The key idea of deploying MTD tech-
niques in SDN environments is to highly leverage its cen-
tralized structure with an SDN controller to optimize the
conﬁguration of the deployed MTD techniques, such as IP ran-
domization / shufﬂing [78, 79, 100, 138, 145], network routing
paths [68], attack graphs / paths [31], port hopping [85], packet
header randomization / obfuscation [143, 156], or virtual
topology generation [1]. The key concerns in developing SDN-
based MTD are resolving a scalability issue in an attack
graph [31] or IP shufﬂing [100] and optimizing both security
and performance in terms of minimizing security vulnerabil-
ities while minimizing defense cost and service interruptions
to users.
Evaluation Methods: Like other domains, simulation-based
validation methods are popular; but some emulation-based
testbeds are also developed for validating SDN-based MTD
(e.g., a Mininet emulator with an NOX SDN controller [79]).
Sharma et al. [138] used both probability-based and simulation
models to validate the proposed IP multiplexing / demultiplex-
ing MTD. Hong et al. [68] conducted security and performance
analysis of their proposed network topology shufﬂing-based
MTD in a real SDN testbed consisting of SDN-enabled
hardware switches and an SDN controller. Kampanakis et al.
[85] showed the performance of the proposed SDN-based port
hopping MTD based on Cisco’s One Platform Kit.
Fig. 13 shows an example deployment of an SDN-based
IP multiplexing / demultiplexing in which the SDN-controller
implements the IP shufﬂing-based MTD mechanism. This is
a centralized implementation of the SDN-based MTD at an
SDN-controller in which the DNS response is intercepted by
the controller which maps IP addresses and updates the ﬂow
tables at OF switches.
Pros and Cons: SDN is a promising technology that can
provide ﬂexibility, robustness, and programmability. This ﬂex-
ibility and programmability features of the SDN technology
can be applied to several cybersecurity applications. The
programmable interface afforded by the SDN environments
can be comforted to implement proactive, adaptive defensive
mechanisms, such as MTD techniques. The highly effective,
scalable deployment of MTD can enhance system security and
resiliency with multiple SDN controllers organizing centrally
and hierarchically. The caveat is that introducing a hierarchical
Fig. 12. An example architecture of IP hopping MTD in an smart grid
SCADA [116].
for a SCADA system on Iowa State’s PowerCyber testbed.
Chin and Xiong [28] used Global Environment for Network
Innovation (GENI), a virtual lab to conduct experiments in
a large-scale network with multiple containers for validat-
ing the proposed MTD technique (i.e., Dynamic Generated
Containment System, DGCS) based on the emulated system.
Ulrich et al. [150] simulated a SCADA environment in terms
of network trafﬁcs and delays to validate the performance of
the IP hopping MTD in terms of throughput and delay.
Fig. 12 shows an example deployment of IP hopping based
MTD in a smart grid SCADA network based on [116].
Pros and Cons: SCADA-based systems are generally used for
monitoring and controlling physical devices span in large geo-
graphic distances which are the part of national infrastructures
(e.g., water distribution, oil and natural gas pipelines, power
grids, and transportation systems) and are critical to a nation’s
economy and safety. MTD mechanisms to SCADA systems
can protect the CPS system by adding an additional layer of
defenses in addition to enhancing the effectiveness of MTD.
However, an effective deployment of the MTD mechanisms
should not adversely impact the core performance of a system,
including safety, reliability, availability, and predictability in
running operations of the CPS.
D. Software Deﬁned Networks (SDNs)
An SDN has emerged as a promising technology to decou-
ple the network control plane from the data-forwarding plane
for providing ﬂexibility, robustness, and programmability to
a networked system. In conventional networks, a routing
algorithm in each switch makes packet forwarding decisions.
By contrast, a controller on an SDN is designed to control
the forwarding operations of the switches in a centralized
manner. Thanks to this ﬂexibility and programmability, the
SDN technology has been leveraged by various cybersecurity
network applications. In this section, we discuss the types of
MTD techniques, attack behaviors considered, key methodolo-
gies, and evaluation methods considered and/or used for MTD
technologies developed for SDN environments.
MTD Techniques: IP shufﬂing / mutation based MTD is pop-
ularly used in SDN environments by leveraging OF switches
and a centralized SDN controller [78, 79, 100, 138] where the
SDN controller makes packet forwarding decisions at each
OF switch and decisions on the updates of the ﬂow tables
27
rather than varying network topologies which are mainly
concerned in distributed environments.
Main Attacks: The common attacks considered in the existing
cloud-based MTD approaches are DDoS [82], VM colocation
attacks based on side channel attacks that can leak out private
information of users [165], eavesdropping and message forgery
/ modiﬁcation / dropping [41], VM probing attacks [120],
database / script / mainstream hackers [132], or exploitation /
data exﬁltration attacks [25]. Since cloud-based web services
may deal with a large volume of users’ private information, it
is noticeable that attacks leaking out the private information
is also one of key concerns MTD needs to counteract.
Key Methodologies: Bangalore and Sood [16] proposed the
Self Cleansing Intrusion Tolerance (SCIT), which is a new
concept for securing servers based on a virtualization tech-
nology to rotate the servers aiming to increase complexity for
attackers and reduce the possible losses due to detection and
prevention errors. Bangalore and Sood [16] further extended
their to design a Cloud-based SCIT [110] scheme for security
enhancement of the applications and the services deployed
in the Cloud. This approach is for a recovery-based intrusion
tolerance system (ITS) designed to leverage the characteristics
of the cloud computing and inter-cloud services. Nguyen
and Sood [111] also proposed an MTD-based self cleansing
intrusion tolerance (SCIT-MTD) for securing a scalable web
application services deployed in the cloud-based environments.
Jia et al. [82] proposed a replication method to make
potential targeted servers as moving targets that can be isolated
from adversaries. Further, the authors developed a client-server
reassignment algorithm to mitigate interruptions of the service
availability and quality. Zhang et al. [165] aimed to identify
an optimal interval of VM migration in order to maximize
security with minimum cost based on a game theory called
Vickrey-Clarke-Groves (VCG) mechanism. Danev et al. [41]
proposed a key structure to allow secure migration of virtual
Trusted Platform Modules (vTPMs) in private clouds. Peng
et al. [120] formulated a service security model in clouds that
can allow optimal conﬁgurations of VM migration / snapshot-
ting and diversity / compatibility of migration. Sengupta et al.
[132] adopted a repeated Bayesian Stackelberg game to model
a web-application stack shufﬂing MTD. Carter et al. [25] used
a leader-follower game to identify an optimal use of strategies
in choosing the right platform where their goal is to show that
deterministic strategies developed based on statistical analysis
outperforms simple random strategies.
Evaluation Methods: Like the validation trends observed in
other domains, most cloud-based MTD approaches are also
evaluated based on simulation and analytical models [82,
120, 165], concerning the effectiveness of MTD in terms of
security and cost. Jia et al. [82] used both simulation-based
and prototype-based evaluations (i.e., using Amazon EC) to
validate server shufﬂing-based MTD on clouds. Danev et al.
[41] integrated their proposed VM-vTPM migration MTD into
a Xen hypervisor for the performance and security analysis.
Peng et al. [120] conducted simulation-based performance
analysis under various conditions of attack surface and service
deployments. Carter et al. [24, 25] conducted a simulation
Fig. 13. An example deployment of IP multiplexing / demultiplexing in an
SDN environment [138].
structure to maintain multiple SDN controllers may introduce
extra overhead while it makes the SDN network highly scal-
able and can maximize the effectiveness of MTD. Therefore,
ﬁnetuning the critical tradeoff between performance (e.g., de-
fense cost and QoS) and security (e.g., security vulnerability)
is a must.
E. Cloud-based Web Services
Cloud computing embraces both Internet-based applications
provided as services such as hardware and system software in
the data centers delivering those services [11]. Could-based
web services have been developed with the motivation of
providing services based on centralized service management
that enables providing professional, consistent, and uniformed
quality services for all business unit services [57]. However,
the downside of the cloud-based centralized computing re-
sources exposes a single point of risk and/or failure, such as
‘putting all your eggs in one basket’ in which adversaries can
easily target to attack. Further, maintaining a homogeneous
computing infrastructure for uniform management of com-
puting resources can also lead to a single vulnerability [57].
MTD techniques have been explored to mitigate those security
vulnerabilities and/or failure.
Bardas et al. [18] proposed an MTD platform for cloud-
based IT system and analyzed security beneﬁts to verify
its performance with an e-commerce scenario. The authors
studied how the MTD approach can be applied to the entire IT
system and demonstrated its practicality in cloud-based envi-
ronment using Automated eNterprise network COmpileR (AN-
COR) [151]. ANCOR is a framework for creating and manag-
ing the cloud-based IT systems. Their experimental evaluation
showed that MTD systems managed and deployed using the
proposed MTD approach increases attack effort/complexity.
MTD Techniques: The key MTD techniques addressed in the
cloud computing domain include shufﬂing server replicas [82],
VM migration [41, 120, 165], VM snapshotting [120], web-
application stack shufﬂing [132], or platform diversity /
migration [24, 25]. Since cloud-based web services take a
centralized management, we can observe the MTD strategies
are limited in changing conﬁgurations of system components,
28
which dynamically changes the placement of the IDS. How-
ever, their scope is limited to the placement of the detectors
in the network. The MTD can help deploy other security
defense mechanisms (i.e., IDS, IPS, deception, ﬁrewall) by
cooperating with them as another layer of defense. However,
few prior works have investigated how MTD assists in
enhancing security and/or reducing the defense cost.
• Few studies investigating the effect of MTD on reducing
attacks beyond the reconnaissance stage: Most attack be-
haviors considered in the existing MTD works occur during
the reconnaissance stage. This implies that MTD mainly
deals with outside attackers as its primary goal is to protect a
system before they break into the system. This signiﬁcantly
limits the applicability of MTD techniques although MTD
can enhance system security and performance by dealing
with attackers beyond the reconnaissance stage (e.g., inside
attackers).
• Lack of investigating the optimal deployment of mul-
tiple, hybrid MTD techniques: Hybrid MTD approaches
combining more than one technique among shufﬂing, di-
versity, and redundancy [4, 5, 6, 59] have been proposed
to maximize security. However, how to optimally deploy
multiple techniques in terms of minimizing defense cost and
maximizing system security and service availability has not
been investigated.
• Metrics used in the existing MTD approaches have
limitations in measuring multiple dimensions of a sys-
tem’s quality. The state-of-the-art MTD metrics mostly only
measure the effectiveness in terms of system security. A