----------  
  30000002  
SQL>  alter sequence benchmarksql.hist_id_seq increment by 1;  
Sequence altered.  
SQL> select benchmarksql.hist_id_seq.nextval from dual;  
   NEXTVAL  
----------  
  30000003  
```  
benchmark 测试  
修改runBenchmark.sh  
```  
$   vi runBenchmark.sh  
java -cp .:$CLASSPATH:../lib/postgresql-9.3-1101.jdbc41.jar:../lib/log4j-1.2.17.jar:../lib/apache-log4j-extras-1.1.jar:../dist/BenchmarkSQL-4.1.jar -Dprop=$1 jTPCC  
```  
修改props.ora，设置比例。  
```  
$ vi props.ora  
driver=oracle.jdbc.driver.OracleDriver  
conn=jdbc:oracle:thin:@localhost:1521:orcl12c  
user=benchmarksql  
password=benchmarksql  
warehouses=1000  
terminals=96  
//To run specified transactions per terminal- runMins must equal zero  
runTxnsPerTerminal=0  
//To run for specified minutes- runTxnsPerTerminal must equal zero  
runMins=10  
//Number of total transactions per minute  
limitTxnsPerMin=0  
//The following five values must add up to 100  
newOrderWeight=40  
paymentWeight=36  
orderStatusWeight=8  
deliveryWeight=8  
stockLevelWeight=8  
```  
修改log4j，减少日志打印量。priority改成info，只输出最终结果，不输出产生订单的日志。  
```  
$ vi log4j.xml  
```  
压测  
```  
nohup ./runBenchmark.sh props.ora >/dev/null 2>./errrun.log &  
```  
TPM，低于 PostgreSQL 9.5.0 。  
主机信息，截取压测第9分钟的数据。  
```  
TOP  
top - 10:34:25 up 4 days,  1:27,  3 users,  load average: 19.52, 18.53, 13.60  
Tasks: 775 total,  13 running, 762 sleeping,   0 stopped,   0 zombie  
Cpu(s): 34.7%us, 12.1%sy,  0.0%ni, 50.5%id,  0.2%wa,  0.0%hi,  2.4%si,  0.0%st  
Mem:  264643396k total, 161935616k used, 102707780k free,    52096k buffers  
Swap: 18825200k total,        0k used, 18825200k free, 101708384k cached  
iostat -x  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          35.27    0.00   15.13    0.26    0.00   49.34  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
dfa               0.00     0.00  406.60 5993.40  4667.20 54110.60     9.18     2.49    0.39   0.04  22.78  
dfb               0.00     0.00  401.60 5990.20  4561.60 54016.00     9.16     2.06    0.32   0.03  19.82  
dfc               0.00     0.00  406.40 5961.40  4624.00 53787.40     9.17     2.52    0.39   0.03  21.78  
dm-0              0.00     0.00 1212.60 14448.40 13849.60 161914.00    11.22     5.66    0.36   0.02  31.28  
```  
测试Oracle时，遇到大量(约13万)超出最大打开游标数错误。  
```  
ERROR   [2016-01-10 10:35:00.349]       Thread-20       delivGetCustId() not found! O_ID=3235 O_D_ID=2 O_W_ID=184  
ERROR   [2016-01-10 10:35:00.349]       Thread-20       Term-20, TERMINAL=Term-20  TYPE=DELIVERY  COUNT=23819  
ERROR   [2016-01-10 10:35:00.351]       Thread-5        Term-05, TERMINAL=Term-05  TYPE=ORDER-STATUS  COUNT=23820  
ERROR   [2016-01-09 10:14:31.185]       Thread-3        Term-03, TERMINAL=Term-03  TYPE=ORDER-STATUS  COUNT=2946  
ERROR   [2016-01-09 10:14:31.190]       Thread-3        java.sql.SQLException: ORA-01000: maximum open cursors exceeded  
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:450)  
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:399)  
        at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1059)  
        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:522)  
        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:257)  
        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:587)  
        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:225)  
        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:53)  
        at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:774)  
        at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:925)  
        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1111)  
        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:4798)  
        at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:4845)  
        at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1501)  
        at jTPCCTerminal.orderStatusTransaction(Unknown Source)  
        at jTPCCTerminal.executeTransaction(Unknown Source)  
        at jTPCCTerminal.executeTransactions(Unknown Source)  
        at jTPCCTerminal.run(Unknown Source)  
        at java.lang.Thread.run(Thread.java:745)  
```  
数据库没有做过多优化，测试数据仅供参考。  
并且使用benchmarksql测试，系统还有大量空闲CPU，IO资源，所以性能应该不止于此。  
有兴趣的童鞋可以使用load runner或者sysbench或其他工具再测试一下。  
生成AWR：  
压测开始前  
```  
BEGIN  
  DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT ();  
END;  
/  
```  
压测结束后  
```  
BEGIN  
  DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT ();  
END;  
/  
```  
生成报告：  
```  
@$ORACLE_HOME/rdbms/admin/awrrpt.sql  
```  
取压测两端的snapshot。  
最新AWR截图，（持续更新）   
![pic](20151223_02_pic_001.png)   
![pic](20151223_02_pic_002.png)  
------------------------------------------------------------------------------------------------------------  
特别感谢给Oracle优化支招的Oracle圈子的兄弟姐妹们。  
优化中，期待Oracle更好的表现。  
------------------------------------------------------------------------------------------------------------  
阶段2，  
benchmarksql放到另一台主机，主机间万兆网同一交换机下互联。  
参考  
[《BenchmarkSQL 支持多个 schema》](../201601/20160110_01.md)   
------------------------------------------------------------------------------------------------------------  
为了突破测试程序的极限，开4个schema，每个schema负责1000个仓库，数据量总共20亿左右。  
每个测试程序对付一个schema。  
终端数保持一致，每个测试程序开32个终端，一共128个终端。  
```  
$ ll  
drwxr-xr-x 7 digoal users 4.0K Jan 10 13:24 benchmarksql-4.1.0_oracle01  
drwxr-xr-x 7 digoal users 4.0K Jan 10 13:11 benchmarksql-4.1.0_oracle02  
drwxr-xr-x 7 digoal users 4.0K Jan 10 13:24 benchmarksql-4.1.0_oracle03  
drwxr-xr-x 7 digoal users 4.0K Jan 10 13:24 benchmarksql-4.1.0_oracle04  
```  
测试  
```  
cd benchmarksql-4.1.0_oracle01/run  
nohup ./runBenchmark.sh props.ora >/dev/null 2>./errrun.log &  
cd ../../benchmarksql-4.1.0_oracle02/run  
nohup ./runBenchmark.sh props.ora >/dev/null 2>./errrun.log &  
cd ../../benchmarksql-4.1.0_oracle03/run  
nohup ./runBenchmark.sh props.ora >/dev/null 2>./errrun.log &  
cd ../../benchmarksql-4.1.0_oracle04/run  
nohup ./runBenchmark.sh props.ora >/dev/null 2>./errrun.log &  
cd ../..  
```  
测试结果  
```  
$ tail -n 5 benchmarksql-4.1.0_oracle01/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle02/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle03/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle04/run/log/benchmarksql.log   
```  
TPM，低于 PostgreSQL 9.5.0 。  
第9分钟操作系统统计信息  
```  
TOP  
top - 19:00:11 up 4 days,  9:53,  4 users,  load average: 81.90, 65.33, 38.22  
Tasks: 865 total,  70 running, 795 sleeping,   0 stopped,   0 zombie  
Cpu(s): 71.7%us, 18.5%sy,  0.0%ni,  1.8%id,  2.5%wa,  0.0%hi,  5.6%si,  0.0%st  
Mem:  264643396k total, 253849120k used, 10794276k free,    52464k buffers  
Swap: 18825200k total,        0k used, 18825200k free, 202431316k cached  
iostat -x  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          71.43    0.00   24.09    2.71    0.00    1.77  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
dfa               0.00     0.00 6228.00 13424.80 74062.40 131863.00    10.48    22.67    1.15   0.04  88.04  
dfb               0.00     0.00 6304.00 13426.20 75308.80 132180.80    10.52    20.56    1.04   0.04  88.06  
dfc               0.00     0.00 6193.20 13436.80 73580.80 132116.80    10.48    24.18    1.23   0.05  89.12  
dm-0              0.00     0.00 18721.40 34599.40 222953.60 396163.80    11.61    59.40    1.11   0.02  99.10  
```  
测试过程AWR报告截图：  
![pic](20151223_02_pic_003.png)  