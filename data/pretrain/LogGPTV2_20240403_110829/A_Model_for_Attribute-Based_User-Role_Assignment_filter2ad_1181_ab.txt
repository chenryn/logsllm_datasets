(cid:131)  A user with Attribute_Expressioni is entitled to 
whose 
by 
rules 
dominated 
roles 
(Attribute_Expression)s 
Attribute_Expressioni.  
specified 
(cid:131)  Rulei (with Attribute_Expressioni) is said to be 
senior to Rulej (with Attribute_Expressionj) only 
if Attribute_Expressioni ≥ Attribute_Expressionj.   
are 
(cid:131)  A senior rule inherits all the roles produced by 
any  of  its  junior  rules.  This  approach,  though 
intuitive, 
issues,  which  we 
describe here informally: 
introduces 
two 
Case 1
Rule 1
Rule 2
Role 1 is senior to Role 2
Role 1 
Role 2 
Case 3 
Rule 1 
Rule 2 
Case 2
Rule 1 
Rule 2 
Role 1
Role 1 
Role 1 & Role 2
Figure 4 Examples for Redundancy Among 
Rules 
2. 
1.  Redundancy: This occurs when a senior rule yields a 
role or group of roles, which are yielded by a junior 
rule. Figure 4 shows examples of redundant rules. 
In the figure, the vertical arrows indicate the direction 
of seniority. In case 1, for example, Rule 1, which is 
senior to Rule 2, produces Role 2. However, Rule 2 
produces Role 1, which is senior to Role 2. In other 
words,  a  user  whose  attributes  satisfy  Rule  1  can 
obtain Role 1 either directly via Rule 2 or indirectly 
by  invoking  Rule  1,  which  inherits  it  from  Rule  2. 
Deleting a senior rule eliminates redundancy without 
diminishing  the  roles,  and  hence  the  privileges  a 
client  is  supposed  to  obtain.  The  same  solution 
applies to cases 2 and 3.  
Inconsistency: Several scenarios could render a set of 
rules  inconsistent,  as  illustrated  in  Figure  5.  One 
reason  for  inconsistency  is  the  mutually  exclusive 
roles. We distinguish between 2 types of these roles:  
a.  Mutual  exclusion 
that  must  be  observed 
throughout  all  the  assignment  rules  or  among 
rules  that  have  no  seniority  relationship  among 
them. Enforcing mutual exclusion of roles in this 
case requires using constraints. Assume that the 
security policy of the enterprise considers Role 1 
and Role 2 mutually exclusive roles. A user may 
try to activate them simultaneously by providing 
attributes  that  satisfy  Rule  1  and,  immediately 
after that, providing attributes that satisfy Rule 2. 
To prevent this, the rules in case 1, shown in the 
figure, could be expressed as follows: 
(cid:131) Attribute Expression for Rule 1 SUBJECT TO 
user not currently enrolled in Role 2 (cid:198) Role 1 
(cid:131) Attribute  Expression  for  Rule  2  SUBJECT  TO 
user not currently enrolled in Role 1 (cid:198) Role 2 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
In case 2, Rule 2 explicitly violates the security 
policy so to remove the inconsistency we delete 
the  senior  rule  and  rewrite  the  junior  rule  as 
follows:  
Rule 2 (cid:198) Role 1 XOR Role 2. 
b.  Mutual  exclusion 
that  must  be  observed 
throughout  assignment  rules  that  are  related  via 
seniority.  The  inconsistency  in  case  3  was 
introduced  via  an  explicit  violation  of  the 
security  policy  and  can  be  eliminated  in  a  way 
similar to the one used in case 2. In case 4, a user 
who successfully triggers Rule 1 will be directly 
forbidden  from  assuming  Role  1,  but  he  can 
assume that role indirectly via inheriting Rule 2, 
which is junior to Rule 1. There are 2 approaches 
to deal with this inconsistency: 
the 
•  Eliminating 
junior 
rule,  which 
results in fewer permissions available to 
users.  
•  Eliminating  the  senior  rule  and  thus 
of 
current 
sum 
the 
retaining 
permissions. 
Role 1 XOR  Role 2 
Role 1 AND  Role 2 
Rule 1
Role 2
Rule 2
In cases 1 and 2, Role 1 and 2 are globally mutually 
exclusive 
Rule 2
Role 1
Rule 1
Case 2 
Case 1 
Case 3 
Rule 1
Rule 2
Rule 1
Rule 2
Figure 5 Examples for Inconsistency 
Role 1 and 2 are mutually exclusive within rules 
that are related via seniority relationship 
Role 1 XOR Role 2  
Role 1 AND Role 2 
NOT Role 1
Case 4 
Role 1
4. Case I: Online Entertainment Store  
An online entertainment store provides movies, games, 
documentary  films,  etc.  The  content  of  the  material 
provided  is  rated  according  to  a  hypothetical  rating 
system  as  shown 
in  Table  1.  Using  RBAC 
terminology, levels correspond to roles, which, in turn, 
correspond to permissions. Roles are totally ordered in 
this  example.  When  users  logon,  the  attributes  they 
provide  determine  the  highest  level  they  can  obtain. 
For  the  sake  of  the  discussion,  we  will  consider  2 
attributes:  the  age  of  the  users  and  the  country  from 
which they initiate the service request. 
Table 1 New Visual Material Rating System 
Corresponding 
Role 
Child  
Juvenile 
Adolescent 
Adult 
Rating 
Level 
L1: 
Strict 
L2:  Less 
Strict 
L3: 
Liberal 
L4: 
Graphic 
Content of Material 
Displayed: 
“Permissions” 
No violation of ethics 
No foul language 
No sexual language 
/ scenes 
No scary scenes 
Normal social 
behavioral patterns 
No foul language 
No sexual language      
/scenes 
• 
• 
No scary scenes 
Normal social 
behavioral patterns 
•  Moderate foul 
language 
•  Moderate sexual 
language/scenes 
•  Moderate scary 
scenes 
Extreme 
social 
behavioral patterns 
Foul language 
Explicit 
language/scenes 
Scary scenes  
sexual 
• 
• 
• 
• 
• 
• 
• 
• 
• 
• 
• 
4.1. Attributes’ Representation 
4.1.1.  Age 
Table 2 shows how users who belong to different age 
groups are assigned to roles described in Table 1.Using 
the language, the Web site administration can  specify 
the following non-terminal items: 
i)  Attribute ::= age 
ii)  Attribute_Value ::= 3, 11, 16, 18  
iii)  Role ::= Child | Juvenile| Adolescent| Adult 
Since  no  constraints  or  conditions  were  specified,  the 
following rules are produced: 
•  Rule 1:: (Age ≥ 3) (cid:198) Child 
•  Rule 2:: (Age ≥ 11) (cid:198) Juvenile 
•  Rule 3:: (Age ≥ 16) (cid:198) Adolescent 
•  Rule 4:: (Age ≥ 18) (cid:198) Adult 
4.1.2. Country 
Different  countries  have  various  laws  regarding  the 
access  they  permit  their  citizens  to  visual  material. 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Countries including China, India, Saudi Arabia, Egypt 
and Singapore do not allow materials that have explicit 
sexual content. Also, some countries outlaw materials 
containing  symbols  that  represent  certain  ideologies, 
religious  values,  etc.  Failing  to  abide  by  these  laws 
may  subject  the  enterprise  to  litigation.  In  November 
2000, a French court ordered Yahoo! to devise a way 
to  block  Nazi  paraphernalia  from  being  auctioned 
through its site in France. The court also said Yahoo! 
would  be  charged  a  fine  equivalent  to  $13,905  each 
day  for  supporting  the  Nazi  items  on  its  auction  site 
[9]. 
Table 2 Attribute-Role Table for Attribute “Age” 
Age 
≥ 3 
≥11 
≥16 
≥18  
Role 
Child 
Juvenile 
Adolescent 
Adult 
Based  on  our  rating  system  defined  above,  we 
construct Table 3, which shows a hypothetical situation 
linking  countries  to  roles.  Set  {A..Z}  contains  all 
countries of the world. 
Table 3 Attribute-Role Table for Attribute 
“Country” 
Country 
Country in {A..Z} 
Country in  {{A..Z} – {Saudi, Sudan}} 
Country in {{A..Z} – {China, India, Saudi, 
Sudan, Egypt, Indonesia, Malaysia, Singapore}} 
Role 
Juvenile 
Adolescent 
Adult 
Note  that  if  a  country  is  in  {A..Z},  then  by  RBAC 
definition,  users  in  that  country  can  assume  the  role 
Child since it is junior to Juvenile. Using the language, 
the Web site administration can specify the  following 
non-terminal items: 
i)  Attribute ::= country 
ii)  Set ::= {A..Z} 
| {{A..Z} – {Saudi, Sudan}} 
| {{A..Z} – {China, India, Saudi, Sudan, 
Egypt, Indonesia, Malaysia, 
Singapore}} 
iii)  Role ::= Juvenile | Adolescent | Adult 
Based on the above, the following rules are produced: 
•  Rule 1:: (Country IN {A..Z}) (cid:198) Juvenile 
•  Rule  2:: 
(Country 
Sudan}}) (cid:198) Adolescent 
•  Rule 3:: (Country IN {{A..Z} – {China, India, 
Saudi, Sudan, Egypt, Indonesia, Malaysia, 
Singapore}}) (cid:198) Adult 
IN  {{A..Z}  –  {Saudi, 
Assuming  that  the  security  policy  of  the  online  store 
calls  for  considering  age  and  geographical  location 
simultaneously, then we can use the language provided 
by the model to specify the following rules: 
•  Rule 1:: (Age ≥ 3) AND (country IN {A..Z}) 
(cid:198) Child  
(cid:198) Juvenile 
•  Rule 2:: (Age ≥ 11) AND (country IN {A..Z})  
•  Rule 3:: (Age ≥ 16) AND (country IN {{A..Z} 
–  {Saudi, Sudan}})  
(cid:198) Adolescent 
•  Rule 4:: (Age ≥ 18) AND (Country IN {{A..Z}  
–  {China,  India,  Saudi,  Sudan,  Egypt, 
Indonesia, Malaysia, Singapore }})  
(cid:198) Adult 
4.2.  Implementing Seniority Levels 
Assume  that  the  security  officer  in  the  entertainment 
store assigned seniority levels to attribute values as in 
Table 4. Based on the above, if a client owns attribute 
expression (Age ≥ 16) AND (country IN {A..Z}), then 
Rule  2  is  triggered  and  the  client  gets  role  Juvenile 
because: 
(cid:131)  Age value (16) dominates Age value (11) 
(cid:131)  The client’s attribute  “country” has a  value that 
is identical to the one required by Rule 2 
Table 4 Attributes and Seniority Levels 
Attribute Value 
Attribute = Age 
Seniority Level 
Follows the regular 
order of numeric 
is senior to 3. 
values: a value of 16 
1 
2 
3 
in 
  {{A..Z}  –  {Saudi, 
Attribute = Country 
Country in {A..Z} 
Country 
Sudan}} 
Country in {{A..Z} – {China, India, 
Saudi, Sudan, Egypt, Indonesia, 
Malaysia, Singapore}} 
4.3.  Implementing MAC Using the Language 
The  language  we  introduced  above  can  be  used  to 
implement  MAC.  In  the  visual  entertainment  store 
case, we can assume having a security lattice similar to 
the one in Figure 6. In our example, (Simple Security 
Property)  is  enforced  so  that  a  client  (“subject”  in 
MAC terminology) can view (read) materials (objects) 
that  have  security  labels  that  are  not  superior  to  his 
clearance. The client can also make comments or post 
queries about materials provided by the store. A client 
at Adult level, for example, can write comments about 
materials  at  his  level.  If  he  wants  to  write  about 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
materials at Child level, he has to login as a subject at 
Child  level.  A  client  at  Child  level  can  not  write  a 
comment  that  at  Adult  level  and  hence,  (Strict  *-
Property) is enforced.  
Adult 
Adolescent 
Juvenile 
Child 
Figure 6 Security Lattice 
Osborn et al showed in [10] that the lattice in Figure 6 
can be converted to two role hierarchies as shown in 
Figure 7. In this case, we have the following 
construction:  
(cid:131)  Roles  =  {Adult  Read,  Adolescent  Read,  Juvenile 
Read, Child Read, Adult Write, Adolescent Write, 
Juvenile Write, Child Write}. 
Adult Read 
Adolescent Read 
Juvenile Read 
Child Read 
Juvenile Write 
Adolescent Write 
Adult Write 
Child Write 
Figure 7 Role Hierarchies for the Lattice in 
Figure 6 
(cid:131)  Role  hierarchy  consists  of  two  disjointed  parts. 
The  first  is  a  role  hierarchy  for  the  “read”  roles: 
{Adult  Read,  Adolescent  Read,  Juvenile  Read, 
Child  Read}.  This  hierarchy  has  the  same  partial 
order  as  dominance  relation  (≥  as  in  MAC).  The 
second part is composed of incomparable “write” 
roles:  {Adult  Write,  Adolescent  Write,  Juvenile 
Write, Child Write}. 
(cid:131)  Constraint on User assignment: Each user is 
assigned to exactly two roles: xR and xW where x 
is the label assigned to the user. 
Using the language we defined, we can specify: 
Role ::= Adult Read | Adolescent Read | Juvenile  
Read | Child Read | Adult Write  
| Adolescent Write | Juvenile Write  
| Child Write 
Each read role has a companion write role and a 
user  must  be 
roles 
simultaneously  in  order  for  the  user  to  function 