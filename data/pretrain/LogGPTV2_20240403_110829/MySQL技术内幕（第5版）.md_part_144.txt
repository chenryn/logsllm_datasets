auto_increment_offset（启动：直接设置；作用范围：全局、会话；动态）
下面列出的是一些比较通用的系统变量。与 InnoDB存储引擎有关的变量将单独用一节来描述。
此处描述的一些变量只在一些特定的配置里或者一些特定的平台上才有。例如，在编译服务器
口
与运行时设置系统变量和查看其具体值有关的更多信息请参考12.3.1节。
系统变量的名字不区分大小写。
通过 SHOW VARIABLES 语句或mysqladminvariables 命令，可以查看这些系统变量。也可
口对于那些在服务器运行时可以进行修改的变量，则会看到“动态”一词。
（即监听所有的IPv4和IPv6接口）；那以前的版本，默认值为0.0.0.0（即监听所有的IPv4
常情况下，不需要设置此变量，因为服务器会根据需要自动将结果保存到磁盘里。
SELECT语句不会产生“表已满”的错误。其默认值为〇（即把临时表保存在内存里）。
将此变量设置为1，可以使得在处理大型的结果集时，将所有临时结果保存到磁盘，而不是
big_tables（启动：直接设置；作用范围：全局、会话；动态）
径名会相对于此目录进行解析。
MySQL安装根目录的路径名。
basedir（启动：直接设置；作用范围：全局）
当前连接正在处理时，排队中的最大等待连接请求数量。
back_log（启动：直接设置；作用范围：全局）
权限的自动授予和回收机制将不起作用。
时，MySQL服务器会收回那些权限。如果 automatic_sp_privileges 的值为O，则上述
EXECUTE 和ALTER ROUTINE 权限，让你随后可以执行、修改或删除该例程。当删除例程
如果此变量为1（默认值），
挂起的事务）。
事务里的语句。将autocommit 设置为1，可以重新启用自动提交（并且会隐式提交所有
autocommit（启动：直接设置；作用范围：全局、会话；动态）
如此一来，后续语句便只有等到提交完成（可以使用cOMMIT语句，或者将autocommit
效。本质上，每条语句都是其自身的事务。将这个值设置为0，可以禁用自动提交功能，
事务处理的自动提交模式。默认值为1，因此自动提交功能是启用的，并且语句会立即生
默认值为1。
在服务器每次生成一个新序列值时，AUTO_INCREMENT值的递增量。取值范围是1~65535；
auto_increment_increment（启动：直接设置；作用范围：全局、会话；动态）
设置为1来完成提交）之后才能生效。如果提交还未发生，则可以通过ROLLBACK来取消
是否同时拥有这两种形式）。运行时只读的变量通常只有一个全局值。
“会话”（或者两者皆有），用以表明该变量是否拥有GLOBAL形式或SESSION形式（或者
各它们保留在内存里。虽然这样做会使性能变得慢一点，但是那些要求大型临时表的
。如果其他路径名是以相对路径名的形式给出的，那么这些路
，那么在你创建存储例程时，MySQL服务器将自动授予你
D.1系统变量
609
通
---
## Page 630
610
口character_set_database（作用范围：全局、会话；动态）
口character_set_connection（作用范围：全局、会话；动态）
口bulk_insert_buffer_size（启动：直接设置；作用范围：全局、会话；动态）
口
口binlog_stmt_cache_size（启动：直接设置；作用范围：全局；动态）
口k
口k
口binlog_direct_non_transactional_updates（启动：直接设置；作用范围：全局、会
口binlog_checksum（启动：直接设置；作用范围：全局；动态）
口binlog_cache_size（启动：直接设置；作用范围：全局；动态）
在内），以及那些“从数字转换到字符串”而得到的那些字符串的字符集。
客户端向服务器发送的那些SQL语句的字符集。
服务器时没有指定默认数据库），此变量将被设置为系统变量character_set_server 的
默认数据库（如果有的话）的字符集。如果没有默认的数据库（例如，如果客户在连接MySQL
5.5.9里引入的。
在事务内执行非事务语句所需要使用的缓存的大小。默认大小为32K。此变量是在 MySQL
MINIMAL 只会记录那些需要确定行的那些列和被更改过的列。NOBLOB与 FULL 很像，它去
换。默认格式为 STATEMENT。在运行时，如果要更改此变量或者会话值，客户端必须拥有
接口）。更多信息请参考12.2.4节。此变量是在MySQL5.6.1里引入的。
“客户端-服务器”连接的字符集。它主要用于解释字符串常量（带有前导符的字符串不包括
character_set_client（作用范围：全局、会话；动态）
用于帮助优化往MyISAM表里批量插入语句的缓存的大小。这里包括LOADDATA语句、多
日志里。此变量是在MySQL5.6.2里引入的。
在启用基于行的二进制日志记录之后，启用此变量可以让有助于调试的信息包含在二进制
binlog_rows_query_log_events（启动：直接设置；作用范围：全局、会话；动态）
掉了无关紧要的 BLOB和TEXT 列。此变量是在 MySQL5.6.2里引I入的。
binlog_row_image 控制着这些图像将包含多少列。FULL（默认值）表示记录所有列。
基于行的二进制日志记录会使用之前和之后的“图像”
binlog_row_image（启动：直接设置；作用范围：全局、会话；动态）
SUPER 权限。
式
语句的日志记录格式、基于行的日志记录格式和混合型日志记录格式。如果使用混合格
二进制的日志记录格式。其可取值包括：STATEMENT、ROW 或MIXED，分别代表的是基于
binlog_format（启动：直接设置；作用范围：全局、会话；动态）
语句的日志记录进行复制的语句才有效。
里，而不是被缓存起来，一直到事务提交之后才写入。启用此变量，仅对于那些使用基于
话来讲是可见的。启用此变量（默认是禁用的）会导致非事务型更新被立即写到二进制日志
的
可以同时更新事务型表和非事务型表的事务，可能会导致主服务器里的更新与从服务器里
默认值为CRC32。
CRC32。此变量是在MySQL5.6.2里引I入的。在MySQL5.6.6之前，默认值为NONE；之后，
是否在往二进制日志写入的事件里包含校验和。可取值包括：NONE（不写入校验和）和
才会被刷新。如果只回滚某个更新事务型表的事务，那么这些语句将被丢弃。）
大小。（只有当事务被提交，或者事物里包括有对非事务型表进行更新的语句时，这些语句
用于存储SQL语句（在将它们刷新到二进制日志之前，它们是事务的一部分）的那个缓存的
话；动态）
附录D系统变量、状态变量和用户变量参考
，则MySQL服务器将根据具体情况在基于语句的和基于行的日志记录格式之间自动切
更新不一致，因为对非事务型语句的更新，在它们出现在二进制日志之前，对于其他会
来描述原始行和更改行
志
会
---
## Page 631
口
口connect_timeout（启动：直接设置；作用范围：全局；动态）
口
口
口collation_connection（作用范围：全局、会话；动态）
口character_set_dir（启动：直接设置；作用范围：全局）
口
口character_set_server（启动：直接设置；作用范围：全局、会话；动态）
口
口
口
口
当发生致命错误时，服务器在退出前是否需要生成一个核心文件。此变量是在MySQL 5.6.2
core_file（启动：直接设置；作用范围：全局）
mysqld 在开始建立连接时等待数据包的秒数。默认值为10。
里引入的。
空洞；此时，新行将被添加到正被使用的那个表的末尾，或者插到空洞处。默认值为1。
NEVER）时，会禁用此功能。此变量的值为1（或AUTO）时，会启用此功能。此变量的值为
同时在该表的末尾插入新行。此变量控制着服务器是否允许并发插入。此变量的值为〇（或
对于在数据文件的中间没有空洞的MyISAM表，MySQL服务器允许在对已有行进行检索的
concurrent_insert（启动：直接设置；作用范围：全局；动态）
结束时，服务器将以同样的隔离级别自动开始一个新的事务。AND RELEASE的含义是，
ANDCHAIN和ROLLBACKANDCHAIN语句。此变量的值为2或者RELEASE时，将使它们
ROLLBACK。此变量的值为1或CHAIN时，将导致COMMIT和ROLLBACK分别等价于COMMIT
事务的完成类型。此变量的值为O（默认值）或NO_CHAIN时，不会影响COMMIT和
completion_type（启动：直接设置；作用范围：全局、会话；动态）
服务器默认字符集所对应的默认排序方式。
collation_server（启动：直接设置；作用范围：全局、会话；动态）
值。每当用户选择一个不同的数据库，MySQL服务器便会自动设置collation_database
MySQL服务器时没有指定默认数据库），此变量将被设置为系统变量collation_server的
数据库的字符集排序规则，如果有的话。如果没有默认的数据库（例如，如果客户在连接
collation_database（作用范围：全局、会话；动态）
连接的字符集排序规则。
存放字符集文件的那个目录。
字符集。
集。像 DATABASE（）、CURRENT_USER（）、USER（）和VERSION（)这样的函数也是使用这个
系统字符集。其值总是utf8。这是各种元数据（如数据库名、表名和列名）所使用的字符
character_set_system（作用范围：全局）
2
一个事务结束时，服务器将终止会话。
分
的值。
服务器的默认字符集。
服务器发送给客户端的那些查询结果的字符集。
character_set_results（作用范围：全局、会话；动态）
binary（即不会进行转换）
变量指定的字符集转换为character_set_filesystem 变量指定的那个字符集。默认为
里的数据文件的名字。服务器在访问文件之前，会先把文件名从character_set_client
文件系统的字符集。这个字符集用来解释SQL语句里的文件名字符串，如LOAD DATA语句
character_set_filesystem（启动：直接设置；作用范围：全局、会话；动态）
2（或ALWAYS）时，会对所有的MyISAM表启用并发插入，不管它们的数据文件里是否有
的值。
值。
分别等价于COMMIT RELEASE和ROLLBACK RELEASE。AND CHAIN的含义是，当一个事务
，每当用户选择一个不同的数据库，MySQL服务器便会自动设置character_set_database
D.1系统变量
611
---
## Page 632
612
口div_precision_increment（启动：直接设置；作用范围：全局、会话；动态）
口delayed_queue_size（启动：直接设置；作用范围：全局；动态）
8
口
口
口
口
口date_format（作用范围：全局）
口datadir（启动：直接设置；作用范围：全局)
口
对该表的INSERT DELAYED 语句被阻塞，一直到队列拥有足够的空间为止。
MySQL数据目录的路径名。
0.1428571。此变量的取值范围是0~30，默认为4。
如，当div_precision_increment 的值为4或6时，1/.7的结果分别为.14286
在使用操作符/对两个精确数值做除法运算时，此变量表示的是需要增加的精度位数。
每个表针对INSERT DELAYED 语句可以排入队列的行数量。当队列排满时，则会有更多针
入；否则，终止插入操作。
timeout 秒，检查一下是否有新的 INSERT DELAYED 行到达。如果有行到达，则继续插
当 INSERT DELAYED 操作的处理器插入完排队的各个行时，它会等待 delayed_insert_
delayed_insert_timeout（启动：直接设置；作用范围：全局；动态）
得到执行。
INSERT DELAYED语句的行数量。如果有语句到达，则将插入操作挂起，以便检索操作能够
它指的是该表的延迟行处理器在检查表是否有新的SELECT语句到来之前插入的源自
delayed_insert_limit（启动：直接设置；作用范围：全局；动态）
MyISAM表的性能（不管这些表最初是如何被创建的，都延迟其键写人）。
比较常见的做法是，在运行复制从服务器时将 delay_key_write 设置为 ALL，以提高
对于使用 DELAY_KEY_WRITE 选项创建的 MyISAM表，服务器是否需要延迟键写人。此变
delay_key_write（启动：直接设置；作用范围：全局；动态）
的那个模式值。
当调用WEEK（）或YEARWEEK（）函数时，如果不带可选的mode 参数，则默认为此变量设置
default_week_format（启动：直接设置：
建的表。此变量是在MySQL5.6.3里引入的。
default_tmp_storage_engine（启动：直接设置；作用范围：全局、会话；动态）
口
小写。默认为InnoDB。
engine_name 值，就使用此变量指定的引擎作为默认存储引擎。存储引擎的名字不区分大
在创建表时，如果没有带上 ENGINE=engine_name 选项或使用了一个不被支持的
default_storage_engine（启动：直接设置；作用范围：全局、会话；动态）
支持时才存在。
调试输出的类型。请参考 F.2.1里对--debug 的描述。此变量只有在服务器编译时带有调试
雷
与
debug（作用范围：
此变量未被使用。
datetime_format
此变量未被使用。
附录 D系统变量、状态变量和用户变量参考
ALL。它表示的是，对任何表都总是延迟键写入，不管它们是如何定义的。
OFF。它表示的是，对任何表都不延迟键写人，
项创建的，则不延迟。
DELAY_KEY_WRITE=1选项创建的，则延迟键写入；如果表是用DELAY_KEY_WRITE=O选
ON (默认值)。此时，
有以下3种可取值。
全局、会话；动态)
（作用范围：全局）
，服务器会根据 DELAY_KEY_WRITE选项的值进行操作：如果表是用
量；作用范围：全局、会话；动态）
，不管它们是如何定义的。
或
例
---
## Page 633
口
口
口
口
口
口
口
口
D
口
D
口
用于FULLTEXT索引的停用词文件。默认使用内建的停用词列表。如果要禁用停用词，可以
ft_stopword_file（启动：直接设置；作用范围：全
的第二阶段所能使用的“最佳匹配”的数量。
此变量用于那些使用WITHQUERYEXPANSION子句完成的全文检索。
ft_query_expansion_limit（启动：直接设置；作用范围：全局）
量的值，应该重建所有拥有这些FULLTEXT 索引的 MyISAM表的索引。默认值为4。
包括在FULLTEXT索引里的单词所允许的最小长度。更短的单词会被忽略掉。在你更改此变
ft_min_word_len（启动：直接设置；作用范围：全局）
量的值时，应该重建所有拥有这些FULLTEXT索引I的MyISAM表的索引。
包括在FULLTEXT索引里的单词所允许的最大长度。更长的单词会被忽略掉。在你更改此变
ft_max_word_len（启动：直接设置；作用范围：全局）
支持使用IN BOOLEAN MODE模式的进行FULLTEXT 搜索的操作符列表。
ft_boolean_syntax（启动：直接设置；作用范围：全局；动态）
检
其默认值为0；不
flush_time（启动：直接设置；作用范围：全局；动态）
才会有用处。默认值是OFF。