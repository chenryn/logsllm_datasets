User: 请回答以下运维开发问题如何每次都创建最小的工作docker镜像？目标：每次创建最小的工作docker镜像
Current

REPOSITORY          TAG       IMAGE ID            CREATED             SIZE
a-docker-image      latest    x                   42 minutes ago       1.92 GB
企图
在Dockerfile的末尾添加一个清理步骤：
#clean
RUN apt-get purge -y wget
RUN rm -r a-build-dir
RUN apt-get purge -y a-package
将镜像大小缩小了一点：
REPOSITORY          TAG       IMAGE ID            CREATED             SIZE
a-docker-image      latest    y                   2 minutes ago       1.86 GB
讨论
我已经建立了各种docker镜像。每次我试图缩小创建的镜像的大小，但我总是觉得它太大了。我正在寻找一个已经由github上的人创建的脚本，该脚本可以从镜像中删除所有多余的包，从而使创建的镜像的大小尽可能小。
正如我所说，我总是试图缩小镜像的大小，但我想应用这种一致性，以便从现在起我创建的每个镜像都尽可能小。
问题
如何每次都创建最小的工作docker镜像？

Assistant: Dockerfile为文件中的每个命令创建一个新层。由于层很好，一个层一个层地层叠，所以无法删除上一个层添加的文件。这就是为什么当您在一个单独的命令中安装程序包、下载文件或创建构建时，即使在将来的层中删除了它们，它们仍然存在于映像中。
所以，如果你只是改变这一点：
RUN apt-get update -y
RUN apt-get install -y wget a-package
# ...
RUN apt-get purge -y wget
RUN rm -r a-build-dir
RUN apt-get purge -y a-package
变成：
RUN apt-get update -y \
    &amp;&amp; apt-get install -y wget a-package \
    &amp;&amp; mkdir a-build-dir \
    &amp;&amp; wget http://some-site/very-big-source-code.tar.gz \
    &amp;&amp; tar xzvf very-big-source-code.tar.gz \
    &amp;&amp; do-some-compilation \
    &amp;&amp; apt-get purge -y wget \
    &amp;&amp; cd .. \
    &amp;&amp; rm -rf a-build-dir \
    &amp;&amp; apt-get purge -y a-package

你会得到一个小得多的镜像。
另一种选择是在构建镜像后对其进行压缩。
Q： 新来的docker worker是怎么工作的？
另一种选择，是选择一个苗条的基础镜像。例如，使用Alpine Linux而不是Debian作为基础的镜像只需要10-15mb，而不是180-250mb。这是在添加您自己的应用和数据之前。Docker Hub上的许多官方基础镜像都有alpine版本。