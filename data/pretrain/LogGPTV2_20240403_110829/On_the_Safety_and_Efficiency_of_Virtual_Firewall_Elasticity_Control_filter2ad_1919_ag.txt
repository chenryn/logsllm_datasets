states. Split/Merge achieves load-balanced elasticity of virtual
middleboxes, via splitting internal states of NFs among virtual
middlebox replicas and re-routing ﬂows. However, both Pico
Replication and Split/Merge cannot achieve loss-free during
NF state migration. OpenNF provides ﬁne-grained control over
the move of internal NF states from one NF instance to another,
and enables loss-free and order-preserving state migration.
While those control systems attempted to accommodate a wide
range of virtualized network functions, semantic consistency is
speciﬁc to virtual ﬁrewalls and remains unsolved by those sys-
tems. Besides, neither do existing control systems address the
challenge of correct ﬂow update, nor do they support optimal
scaling. In addition, most of existing control systems, such
as OpenNF, use centralized buffers at the controller to buffer
in-ﬂight trafﬁc. Such a solution has signiﬁcant drawbacks,
since it consumes valuable bandwidth between the controller
and virtualized functions, and lacks an effective mechanism
to avoid buffer overﬂow. In comparison with those exiting
systems, VFW Controller is speciﬁcally designed as a
controller to address challenges in virtual ﬁrewall scaling with
respect to semantic consistency, correct ﬂow update, buffer
overﬂow avoidance, and optimal scaling.
NFV and SDN techniques have been recently used to
solve the inﬂexibility and inelasticity limitations of hardware-
based DDoS defense appliances. Particularly, Fayaz et al. [25]
proposed Bohatei, a ﬂexible and elastic virtual DDoS defense
system, for effectively defending DDoS attacks. In contrast,
we address the unique challenges presented by hardware-based
ﬁrewalls, leveraging the features provided by NFV and SDN
as well.
Hu et al. [30] proposed FlowGuard, a framework for
building SDN ﬁrewalls, to protect OpenFlow-based networks.
FlowGuard-based ﬁrewalls are actually SDN applications run-
ning on top of SDN controllers. Challenges in designing SDN
ﬁrewall applications were addressed in FlowGuard. However,
the work presented in this paper investigates solutions for the
safe and efﬁcient management of a new type of ﬁrewalls,
virtual ﬁrewalls, in the context of both NFV and SDN.
Zhang et al. [50] demonstrated that careless policy updates
may result in security violations. They presented safe and
efﬁcient policy update algorithms for ﬁrewall policy updates.
However, the proposed algorithms are only able to deal with
policy updates on a single ﬁrewall, while the rule migration
mechanism introduced in VFW Controller coordinates
ﬁrewall rules across multiple ﬁrewalls.
X. CONCLUSION AND FUTURE WORK
The hardware-based ﬁrewall is limited by its inﬂexible
nature with regard to ﬁxed capacity and ﬁxed deployment
location. We observed two emerging networking paradigms,
NFV and SDN, offer the opportunity to address the limitations
by implementing ﬁrewall functions as virtual ﬁrewalls. In
this paper, we have proposed VFW Controller, a virtual
ﬁrewall controller, which enables safe, efﬁcient and optimal
virtual ﬁrewall scaling. To demonstrate the feasibility of our
approach, we have implemented the core components of VFW
Controller on top of ClickOS. In the future, we plan to
implement VFW Controller in other popular open-source
NFV platforms, such as OPNFV [7] and CORD [1]. We
also plan to generalize the buffer cost analysis and optimal
scaling approaches introduced in this paper and integrate them
with other exiting NF control systems, such OpenNF. Besides,
we will investigate solutions to address speciﬁc challenges
in the elastic scaling of other network security functions.
For example, data and control dependencies [21] need to be
addressed in building virtual intrusion detection systems.
ACKNOWLEDGMENT
This work was partially supported by grants from National
Science Foundation (NSF-ACI-1642143, NSF-ACI-1642031,
NSF-IIS-1527421, and NSF-CNS-1537924).
REFERENCES
[1] Central Ofﬁce Re-architected as a Datacenter (CORD). http://opencord.
org/.
[2] Check Point virtual appliance for AWS.
marketplace/pp/B00CWNBJOY.
https://aws.amazon.com/
[3] CloudLab. http://www.cloudlab.us/.
[4] Header Space Library (Hassel). http://stanford.edu/∼kazemian/hassel.
tar.gz.
[5] LBNL/ICSI Enterprise Tracing Project.
enterprise-tracing/.
http://www.icir.org/
[6] Network Function Virtualisation - Introductory White Paper. https://
portal.etsi.org/nfv/nfv white paper.pdf.
[7] OPENFV. https://www.opnfv.org/.
[8] Project Floodlight. http://www.projectﬂoodlight.org/projects/.
[9] Scalable Firewall Services with Virtual Systems.
paloaltonetworks.com/products/features/virtual-systems.html.
https://www.
[10] Xen Toolstack. http://wiki.xen.org/wiki/XL.
[11] Overview of virtual ﬁrewalls on VBLOCKTM infrastructure platforms.
http://www.vce.com/asset/documents/virtual-ﬁrewall-whitepaper.pdf,
2012.
[12] AT&T Vision Alignment Challenge Technology Survey. http://www.
att.com/Common/about us/pdf/AT&TDomain2.0VisionWhitePaper.pdf,
2013.
[13] How SDN enabled innovations will impact AT&T’s plans to transform
https://www.youtube.com/watch?v=tLshR-BkIas,
it’s infrastructure.
2014.
[14] http://www.prweb.com/releases/opennetsummit/20150217/
prweb12592239.htm, 2015.
[15] OpenFlow Switch
Speciﬁcation Version
1.5.1.
https:
//www.opennetworking.org/images/stories/downloads/sdn-resources/
onf-speciﬁcations/openﬂow/openﬂow-switch-v1.5.1.pdf, 2015.
[16] The CAIDA UCSD Anonymized Internet Traces 2016-0406. http://
www.caida.org/data/passive/passive 2016 dataset.xml, 2016.
[17] T. Benson, A. Akella, and D. A. Maltz. Network trafﬁc characteristics
of data centers in the wild. In Proceedings of the 10th ACM SIGCOMM
conference on Internet measurement, pages 267–280. ACM, 2010.
14
[18] T. Benson, A. Anand, A. Akella, and M. Zhang. Understanding data
center trafﬁc characteristics. In Proceeding of SIGCOMM Workshop on
Research on Enterprise Networking, Barcelona, Spain, 2009.
[19] P. Bernier.
Google implements NFV, SDN as part of
its
http://www.nfvzone.com/topics/nfv/articles/
Andromeda Effort.
376827-google-implements-nfv-sdn-as-part-its-+andromeda.htm,
2014.
[20] P. Busschbach. Network functions virtualization: challenges and solu-
tions. http://www.tmcnet.com/tmc/whitepapers/documents/whitepapers/
2013/9377-network-functions-virtualization-challenges-+solutions.pdf,
2013.
[21] L. D. Carli, R. Sommer, and S. Jha. Beyond pattern matching: A
concurrency model for stateful deep packet inspection. In Proceeding of
the 2014 ACM SIGSAC Conference on Computer and Communications
Security, Scottsdale, AZ, 2014.
[22] M. Chapel.
broken.
ﬁrewall-rule-management-key-network-security, 2012.
Firewall
rules are meant
to be managed, not
http://www.biztechmagazine.com/article/2012/08/
[23] A. R. Curtis, J. C. Mogul, J. Tourrilhes, P. Yalagandula, P. Sharma, and
S. Banerjee. DevoFlow: scaling ﬂow management for high-performance
In ACM SIGCOMM Computer Communication Review,
networks.
volume 41, pages 254–265. ACM, 2011.
[24] Q. Duan and E. S. Al-Shaer. Trafﬁc-aware dynamic ﬁrewall policy
IEEE Communications
techniques and applications.
management:
Magazine, 51:73–79, 2013.
[25] S. Fayaz, Y. Tobioka, and V. Sekar. Bohatei: ﬂexible and elastic DDoS
defense. In Proceedings of the 24th USENIX Conference on Security
Symposium, 2015.
[26] O. N. Foundation. OpenFlow-enabled SDN and network functions vir-
tualisation. https://www.opennetworking.org/images/stories/downloads/
sdn-resources/solution-briefs/sb-sdn-nvf-solution.pdf, 2014.
[27] A. Gember-Jacobson and A. Akella. Improving the safety, scalability,
and efﬁciency of network function state transfers. In ACM SIGCOMM
Workshop on Hot Topics in Middleboxes and Network Function Virtu-
alization, 2015.
[28] A. Gember-Jacobson, R. Viswanathan, C. Prakash, R. Grandl, J. Khalid,
S. Das, and A. Akella. OpenNF: Enabling innovation in network
In Proceedings of the 2014 ACM Conference on
function control.
SIGCOMM, pages 163–174, 2014.
[29] H. Hu, G.-J. Ahn, and K. Kulkarni. Detecting and Resolving Firewall
IEEE Transactions on Dependable & Secure
Policy Anomalies.
Computing, 9(3):318–331, 2012.
[30] H. Hu, W. Han, G.-J. Ahn, and Z. Zhao. FlowGuard: building robust
ﬁrewalls for software-deﬁned networks. In Proceedings of the 3rd ACM
SIGCOMM workshop on Hot Topics in Software Deﬁned Networking
(HotSDN’14), pages 97–102. ACM, 2014.
[31] P. Kazemian, G. Varghese, and N. Mckeown. Header Space Analysis:
In Proceedings of the 9th USENIX
Static Checking For Networks.
conference on Networked Systems Design and Implementation, 2012.
[32] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey. Veri-
In Proceedings
ﬂow: Verifying network-wide invariants in real time.
of the 10th USENIX Symposium on Networked Systems Design and
Implementation (NSDI’13), pages 15–27, 2013.
[33] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F. Kaashoek. The
click modular router. ACM Trans. Comput. Syst., 18(3):263–297, 2000.
[34] D. Kreutz, F. M. V. Ramos, P. Verissimo, C. E. Rothenberg, S. Azodol-
molky, and S. Uhlig. Software-deﬁned networking: a comprehensive
survey. Proceedings of the IEEE, 13:14–76, 2015.
[35] A. X. Liu and M. G. Gouda. Complete Redundancy Removal for Packet
IEEE Transactions on Parallel & Distributed
Classiﬁers in TCAMs.
Systems, 21(4):424–437, 2010.
[36] A. X. Liu, E. Torng, and C. R. Meiners. Firewall Compressor: An
In Proceedings of the
Algorithm for Minimizing Firewall Policies.
27th Conference on Computer Communications (INFOCOM’08), pages
176–180, 2008.
[37] R. Maddipudi.
ﬁrewall.
5.1
app
http://blogs.vmware.com/vsphere/2013/04/
vcloud-networking-and-security-5-1-+app-ﬁrewall-part-1.html, 2013.
J. Martins, M. Ahmed, C. Raiciu, V. Olteanu, M. Honda, R. Bifulco,
and F. Huici. ClickOS and the art of network function virtualization.
networking
security
vCloud
[38]
and
In Proceedings of the 11th USENIX Conference on Networked Systems
Design and Implementation (NSDI’15), pages 459–473, 2014.
[39] N. Mckeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson,
J. Rexford, S. Shenker, and J. Turner. OpenFlow: enabling innovation in
campus networks. ACM SIGCOMM Computer Communication Review,
38(2):69–74, 2010.
[40] G. Misherghi, L. Yuan, Z. Su, C.-N. Chuah, and H. Chen. A general
IEEE
framework for benchmarking ﬁrewall optimization techniques.
Transactions on Network & Service Management, 5(4):227–238, 2008.
[41] A. Nunes, M. Mendonca, X. Nguyen, and K. Obraczka. A survey of
software-deﬁned networking: past, present, and future of programmable
IEEE Communications Surveys & Tutorials, 16(3):1617–
networks.
1634, 2014.
[42] R. Ozdag.
hardware-
deﬁned
http://www.cyaninc.com/blog/2013/11/26/
the-day-amazon-ended-the-hardware-deﬁned-network#.VbehsxNViko,
2013.
day Amazon
network.
ended
The
the
[43] S. Rajagopalan, D. Williams, and H. Jamjoom. Pico Replication: A
high availability framework for middleboxes. In Proceedings of the 4th
annual Symposium on Cloud Computing, page 1. ACM, 2013.
[44] S. Rajagopalan, D. Williams, H. Jamjoom, and A. Warﬁeld. Split/merge:
System support for elastic execution in virtual middleboxes.
In
Proceedings of the 10th USENIX Symposium on Networked Systems
Design and Implementation (NSDI’13), pages 227–240, 2013.
[45] S. K. N. Rao. SDN and its Use-Cases-NV and NFV. http://www.
[46]
[47]
[48]
2015.
Survey
indicates
NFV/SDN
Scales.
in
deploy-
http://www.telecomtv.com/articles/sdn/
nectechnologies.in/en TI/pdf/NTI whitepaper SDN NFV.pdf, 2014.
I.
ments
survey-indicates-nfv-sdn-deployments-in-2015-11062/, 2015.
J. Sherry, S. Hasan, C. Scott, A. Krishnamurthy, S. Ratnasamy, and
V. Sekar. Making middleboxes someone else’s problem: network pro-
cessing as a cloud service. ACM SIGCOMM Computer Communication
Review, 42(4):13–24, 2012.
J. Sherry and S. Ratnasamy. A survey of enterprise middlebox deploy-
In Technical Report UCB/EECS-2012-24. EECS Department,
ment.
University of California, Berkeley, 2012.
[49] L. Yuan, H. Chen, J. Mai, C.-N. Chuah, Z. Su, and P. Mohapatra.
Fireman: A toolkit for ﬁrewall modeling and analysis. In 2006 IEEE
Symposium on Security and Privacy (S&P’06), pages 15–pp. IEEE,
2006.
[50] C. C. Zhang, M. Winslett, and C. A. Gunter. On the safety and efﬁciency
of ﬁrewall policy deployment. In 2007 IEEE Symposium on Security
and Privacy (S&P’07), pages 33–50. IEEE, 2007.
15