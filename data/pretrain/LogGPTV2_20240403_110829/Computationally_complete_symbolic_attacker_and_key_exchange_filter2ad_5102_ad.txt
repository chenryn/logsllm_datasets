1 )η∈N and S2 = (Sη
We recall the interpretations of = and  from [7]: Let σ be a
sequence of PPT machines (e.g. one for each free variable xi of θ):
Ax1 , ...,Axn ∈ D. For example, and Ax can be the evaluation of
any name (in which case Ax(η, ωη) = n(ωη), or any value for a
handle computed by the adversary, or some more complex object.
Let σ(ωη) denote the assignments x1 (cid:55)→ Ax1 (η, ωη), ..., xn (cid:55)→
Axn (η, ωη). If st(η, ωη) is a statement, then for any ﬁxed S =
(Sη)η∈N, instead of “for all η ∈ N and all ωη ∈ Sη, st(η, ωη)”,
we simply write “for all ω ∈ S, st(ω)”.
τ (ω) = [[t2]]σ(ω)
τ (ω).
• For the equality predicate, Mc, Π, S, σ |c= t1 = t2 iff there
is a subset S(cid:48) ⊆ S such that S \ S(cid:48) is negligible, and for all
ω ∈ S(cid:48), [[t1]]σ(ω)
τ (ω), [[t1]]σ(ω)
τ (ω), ..., [[tn]]σ(ω)
• For the derivability predicate, Mc, Π, S, σ |c= ˆφ, t1, ..., tn t
if for all non-negligible S(cid:48) ⊆ S, there is a non-negligible
S(cid:48)(cid:48) ⊆ S(cid:48) and a PPT Turing machine A such that for all ω ∈
S(cid:48)(cid:48), A([[φm(ω)]]σ(ω)
τ (ω), a(ω), r(ω)) =
τ (ω) where m(ω) is the step at which Mc reached the
[[t]]σ(ω)
challenge state, a(ω) stands for the protocol adversary’s out-
put and r(ω) is some fresh input from the random tape.
• If P is a constraint, (cid:126)t are closed terms then Mc, Π, S, σ |=
P ((cid:126)t) iff there is S(cid:48) ⊆ S such that, S\S(cid:48) is negligible, and for
all ω ∈ S(cid:48), the unique valid computation of Π with respect
to Mc, τ (ω) yields a state (((q, n), h, φ, Θ), b, b(cid:48), γ) in the
control state qch such that n, φ|s= P ((cid:126)t).
About the fresh r(ω), note we assumed for any non-negligible set
S that Sη ⊆ Ση
0, so there can always be fresh
random bits generated inside S.
f and not Sη ⊆ Ση
Satisfaction of compound formulas are deﬁned the following way.
• Mc, Π, S, σ |c= θ1 ∧ θ2
• Mc, Π, S, σ |c= θ1 ∨ θ2 iff for any S(cid:48) ⊆ S non-negligible,
iff Mc, Π, S, σ |c= θ1 and Mc, Π, S, σ |c= θ2.
there is a S(cid:48)(cid:48) ⊆ S(cid:48) non-negligible such that
either Mc, Π, S(cid:48)(cid:48), σ |c= θ1 or Mc, Π, S(cid:48)(cid:48), σ |c= θ2.
Mc, Π, S(cid:48), σ |c= θ1 implies Mc, Π, S(cid:48), σ |c= θ2
• Mc, Π, S, σ |c= θ1 → θ2 iff for all S(cid:48) ⊆ S non-negligible,
• Mc, Π, S, σ |c= ¬θ iff for all S(cid:48) ⊆ S non-negligible,
1236Mc, Π, S(cid:48), σ |(cid:54) c= θ
• Mc, Π, S, σ |c= ∃x.θ iff for any S(cid:48) ⊆ S non-negligible, there
is a S(cid:48)(cid:48) ⊆ S(cid:48) non-negligible and a PT machine Ax such that
Mc, Π, S(cid:48)(cid:48), σ,Ax |c= θ
• Mc, Π, S, σ |c= ∀x.θ iff for any probabilistic polynomial time
machine Ax, Mc, Π, S, σ,Ax |c= θ
• If x is a constrained variable, the interpretation of ∃x.θ is
analogous to the symbolic case: M, Π, S, σ |c= ∃x.θ if and
only if for every non-negligible S(cid:48) ⊆ S there is a non-
negligible S(cid:48)(cid:48) ⊆ S(cid:48) and a ground term t, such that the satis-
faction M, Π, S(cid:48)(cid:48), σ |c= θ{x (cid:55)→ t} holds.
• If x is a constrained variable, the interpretation of ∀x.θ is
analogous to the symbolic case: M, Π, S, σ |c= ∀x.θ if and
only if for every ground term t, the satisfaction M, Π, S, σ |c=
θ{x (cid:55)→ t} holds.
Mc, Π|c= θ iff Mc, Π, Ω|c= θ and Π|c= θ if Mc, Π|c= θ for every
Mc and qch.
Given a protocol Π, we say that there is a successful computa-
tional attack against the security property θ (a ﬁrst-order formula)
of the protocol if there is a an attacker Mc and a non-negligible set
of coins S such that Mc, Π, S |c= ¬θ (which is the same as Π|(cid:54) c= θ).
Despite that semantics of the compound formulas is not as usual
in ﬁrst-order logic, we prove in Section 6 that as a consequence of
Fitting’s embedding [23] of classical logic into S4, the following
theorems hold.
THEOREM 5.1
(FITTING’S EMBEDDING). With the above se-
mantics, ﬁrst-order deduction rules are sound.
THEOREM 5.2
(TRACE MAPPING). Let Π be a protocol, s1 →
... → sm be a symbolic transition sequence of Π and Mc be a
probabilistic polynomial time interactive Turing machine. If there
is a non-negligible set of coins S such that, for any ω ∈ S, there is a
sequence of transitions (s0, (cid:126)b0, (cid:126)b(cid:48)
m, γm)
that is computationally valid w.r.t. Mc, τ (ω) and γm is in the chal-
lenge state qch, then for any set of FOL formulas Φ, Mc, Π, S |c= Φ
implies there is a symbolic model M such that s0 → ··· → sm is
a valid symbolic execution w.r.t. M and M, sm |s= Φ.
0, γ0) → ··· → (sm, (cid:126)bm, (cid:126)b(cid:48)
THEOREM 5.3
(GENERAL SOUNDNESS). If there is a suc-
cessful computational attack such that the number of sessions of
honest agents are bounded in the security parameter, then there is
also a successful symbolic attack.
5.3 Axioms for Equality and Derivability
We recall the core axioms presented in [5]. As usual, unquan-
tiﬁed variables are universally quantiﬁed. Unless noted otherwise,
they are always sound.
Equality is a Congruence:
• x = x, and the substitutability (congruence) property of
equal terms holds for = and .
Core Axioms for the Derivability Predicate:
• Self derivability: ˆφ, (cid:126)x, x  x
• Increasing capabilities: ˆφ, (cid:126)x  y −→ ˆφ, (cid:126)x, x  y
• Commutativity: If (cid:126)x(cid:48) is a permutation of (cid:126)x, then
ˆφ, (cid:126)x  y −→ ˆφ, (cid:126)x(cid:48)  y
• Transitivity of derivability:
ˆφ, (cid:126)x  (cid:126)y ∧ ˆφ, (cid:126)x, (cid:126)y  (cid:126)z −→ ˆφ, (cid:126)x  (cid:126)z
• Functions are derivable: ˆφ, (cid:126)x  f ((cid:126)x)
This axiom is sound as long as functions are interpreted as
PT computable algorithms.
Axioms for Freshly Generated Items:
• No telepathy: fresh(x; ˆφ) −→ ˆφ (cid:54) x
• Fresh items do not help to compute:
This axiom is sound as long as RanGen() items are generated
so that they can only be guessed with negligible probability.
A more general version is also possible as
fresh(x; ˆφ, (cid:126)x) ∧ (cid:126)x (cid:52) ˆφ −→ ˆφ, (cid:126)x (cid:54) x
fresh(x; ˆφ, (cid:126)x, y) ∧ (cid:126)x, y (cid:52) ˆφ ∧ ˆφ, (cid:126)x, x  y −→ ˆφ, (cid:126)x  y
Equations for the ﬁxed function symbols: For example, for
symmetric encryption sdec({|x|}R
K , K) = x, and for pairing,
π1 ((cid:104)x, y(cid:105)) = x; π2 ((cid:104)x, y(cid:105)) = y. Function of error is error
f (...,⊥, ...) = ⊥, etc.
6. THE FITTING CONNECTION
The trace mapping and the general soundness theorems for ar-
bitrary ﬁrst-order formulas were proven directly from their deﬁni-
tions by an elaborate argument in [6]. We have realized however,
that they are rather easy consequences of Fitting’s embedding of
ﬁrst-order logic into ﬁrst-order S4 [23]. The non-Tarskian compu-
tational semantics of ﬁrst-order formulas that naturally arouse in
the BC technique turns out to be a special kind of Kripke seman-
tics of ﬁrst-order S4 composed with Fitting’s embedding of FOL
into ﬁrst-order S4. We detail this connection here, and show how
trace mapping and general soundness follow from Fitting’s theo-
rem. This section assumes basic familiarity with S4 modal logic
and its ﬁrst-order extension as well as Kripke semantics.
For any ﬁrst-order formula θ, consider the Fitting transformation
θ (cid:55)→ θ∗, where θ∗ is a formula of ﬁrst-order S4, and is deﬁned
recursively as follows:
• For any atomic formula θ, let θ∗ ≡ 23θ.
• (¬θ)∗ ≡ 2¬θ∗
1 → θ∗
• (θ1 → θ2)∗ ≡ 2(θ∗
2 )
• (θ1 ∧ θ2)∗ ≡ (θ∗
1 ∧ θ∗
2 )
• (θ1 ∨ θ2)∗ ≡ 23(θ∗
1 ∨ θ∗
2 )
• (∀xθ)∗ ≡ ∀xθ∗
• (∃xθ)∗ ≡ 23∃xθ∗
Fitting in [23] put 23 everywhere and noted that it is redundant in
front of the conjunction. It is also easy to check that if the Barcan
formula and its converse (∀x2θ ↔ 2∀xθ) are assumed (that is,
when the domain does not change from possible world to possible
world in the Kripke structure), then 23 is also redundant in front of
the universal quantiﬁcation (as θ∗ ↔ 23θ∗ holds in our deﬁnitions
for all θ). In our computational situation the domain is unchanged
as we show below. So in this paper we assume the Barcan formula
and its converse.
Fitting’s theorem says that any formula θ is derivable in ﬁrst-
order logic if and only if θ∗ it is derivable in S4 with the Barcan
formulas. (Without the Barcan formulas, (∀xθ)∗ ≡ 23∀xθ∗ has
to be written above).
Observe that if we think of non-negligible sets as possible worlds,
and the subset relation as accessibility (that is, if S(cid:48) is accessible
from S iff S(cid:48) ⊆ S), then we can deﬁne a computational Kripke
semantics: For our predicates, consider the S4 satisfaction relation
Mc, Π, S, σ |s4= that we deﬁne almost the same way as the BC com-
putational satisfaction |c= of Section 5.2 is deﬁned, except that we
drop the "for all non-negligible S(cid:48) ⊆ S, there is a non-negligible
S(cid:48)(cid:48) ⊆ S(cid:48)" phrase, and replace S(cid:48)(cid:48) with S in the remaining of the
deﬁnition. For example, the satisfaction of derivability becomes:
• For the derivability predicate, Mc, Π, S, σ |s4= ˆφ, t1, ..., tn t
if there is a PPT Turing machine A such that for all ω ∈ S,
1237τ (ω), [[t1]]σ(ω)
τ (ω), ..., [[tn]]σ(ω)
A([[φm(ω)]]σ(ω)
τ (ω), a(ω), r(ω))=[[t]]σ(ω)
where m(ω) is the step at which Mc reached the challenge
state, a(ω) stands for the protocol adversary’s output and
r(ω) is some fresh input from the random string.
τ (ω)
For an arbitrary θ ﬁrst-order S4 formula, Mc, Π, S, σ |s4= 2θ is de-
ﬁned to hold if and only if Mc, Π, S(cid:48), σ |s4= θ holds for all non-
negligible S(cid:48) ⊆ S, and Mc, Π, S, σ |s4= 3θ is deﬁned to hold if and
only if Mc, Π, S(cid:48), σ |s4= θ holds for some non-negligible S(cid:48) ⊆ S.
Taking θ to be ˆφ, t1, ..., tn  t, and applying 23 to the above deﬁ-
nition of S4 satisfaction, we receive the computational satisfaction
of Bana and Comon-Lundh. That is, Mc, Π, S, σ |c= ˆφ, t1, ..., tn t
if and only if Mc, Π, S, σ |s4= 23 ˆφ, t1, ..., tn  t.
Note also that for the equality predicate and for the constraints,
"for all non-negligible S(cid:48) ⊆ S, there is a non-negligible S(cid:48)(cid:48) ⊆ S(cid:48)"
can be freely inserted in the deﬁnition, as the resulting deﬁnition is
equivalent with the original: for example, if for all non-negligible
S(cid:48) ⊆ S, there is a non-negligible S(cid:48)(cid:48) ⊆ S(cid:48) such that [[t1]]σ(ω)
τ (ω) =
τ (ω) holds on S(cid:48)(cid:48), then it also holds up to negligible probabil-
[[t2]]σ(ω)
ity on S, because if there were a non-negligible subset S(cid:48) ⊆ S on
τ (ω) were true, then this S(cid:48) would not have
which [[t1]]σ(ω)
some non-negligible subset S(cid:48)(cid:48) on which they are equal, a contra-
diction. So BC could have deﬁned satisfaction of equality as
τ (ω) (cid:54)= [[t2]]σ(ω)
• For the equality predicate, Mc, Π, S, σ |c= t1 = t2 iff for
all non-negligible S(cid:48) ⊆ S, there is a non-negligible subset
S(cid:48)(cid:48) ⊆ S(cid:48) such that for all ω ∈ S(cid:48)(cid:48), [[t1]]σ(ω)
τ (ω) = [[t2]]σ(ω)
τ (ω).
That is, Mc, Π, S, σ |c= t1 = t2 iff Mc, Π, S, σ |s4= 23t1 = t2.
The same is true for constraints. Hence we have this for all atomic
formulas. |s4= for compound formulas is deﬁned as usual in Kripke
semantics. For example, Mc, Π, S, σ |s4= θ1 ∨ θ2 if and only if
Mc, Π, S, σ |s4= θ1 or Mc, Π, S, σ |s4= θ2.
Comparing the deﬁnition of |c= in Section 5.2 for compound
formulas with Fitting’s embedding, for any ﬁrst-order formula θ,
Mc, Π, S, σ |c= θ ⇐⇒ Mc, Π, S, σ |s4= θ
∗
.
For a set of ﬁrst-order formulas Φ, let Φ∗ mean the set that we get
by applying the Fitting transformation to all formulas in Φ. Since
with |s4= , our computational semantics is a special kind of Kripke
semantics, Fitting’s theorem implies that if Mc, Π, S, σ |s4= Φ∗ holds
and if Φ (cid:96)FOL θ, then Mc, Π, S, σ |s4= θ∗. So we also have that if
Mc, Π, S, σ |c= Φ holds and if Φ (cid:96)FOL θ, then Mc, Π, S, σ |c= θ.
This is exactly Theorem 5.1.
The Barcan formula and its converse hold, as the domain D does
not depend on the non-negligible sets.
For Theorem 5.2, note that it is assumed in the theorem that for
all ω ∈ S the computational execution has the same length m and