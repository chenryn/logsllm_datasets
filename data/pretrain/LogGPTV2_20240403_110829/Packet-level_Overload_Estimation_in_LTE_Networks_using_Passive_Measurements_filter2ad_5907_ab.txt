### 3. Overload Management and Admission Control

When a cell experiences overload, the system must remove a subset of the connected bearers until the load is reduced to an acceptable level. Admission Control [25] is employed to restrict the number of UEs (User Equipment) that are granted access to the system, ensuring that the Quality of Service (QoS) for admitted users remains acceptable.

### 4. Implementation

#### 4.1 Experimental Setup

Our experimental setup consists of an Ettus Research USRP B210 [33] Software-Defined Radio (SDR) attached to an MPantenna SUPER-M ULTRA Mobile Antenna, which has a frequency range from 25 MHz to 6 GHz [13]. The USRP is connected to a Lenovo ThinkPad W550s laptop for data collection and post-processing. We use the srsUE mode in the open-source srsLTE software suite [23] to scan all frequency bands and locate available cells in the vicinity.

#### 4.2 LTE Packet Decoding

The process begins with converting binary I/Q samples to hexdumps. To investigate the extent of overload on eNodeBs, we then transform the hexdump into network traces using Wireshark’s `text2pcap` command [1]. Next, we use `lte_rrc` Lua dissectors to decode LTE RRC messages using `tshark` [16]. Specifically, we employ the `lte-rrc.dl.ccch` and `lte-rrc.ul.ccch` protocols to decode RRC messages on the downlink and uplink common control channels, respectively. Additionally, we use the `lte-rrc.bcch.dl.sch` protocol to decode downlink messages on the broadcast control channel.

**Listing 1: Snapshot of a Decoded DL-CCCH Message Showing RRCConnectionReject**

```json
{
  "user_dlt": "147",
  "payload": "lte-rrc.dl.ccch",
  "message": {
    "choice_index": "0",
    "message_tree": {
      "choice_index": "2",
      "c1": {
        "c1_tree": {
          "choice_index": "0",
          "lte-rrc.rrcConnectionReject_element": {
            "criticalExtensions": {
              "choice_index": "0",
              "c1": {
                "c1_tree": {
                  "rrcConnectionReject_r8_element": {
                    "waitTime": "6"
                  }
                }
              }
            },
            "nonCriticalExtension_element": {
              "optional_field_bit": "1",
              "lateNonCriticalExtension": "34:07:79:f0:2c:e7:90:00:28:07:63:48:31:b7:90:00:38:07:04:f0:22:67:81:08:30:87:9e:40:3f:37:60:70:20:27:82:00:21:17:4c:88:36:47:80:00:20:07:15:00:2a:97:90:00:28:17:95:30:2a:97:99:30:2c:87:82:00:21:07:4c:f0:36:77:85:b0:22:d7:82:30:21:07:82:40:21:27:9f:80:2f:d7:68:18:33:f7:84:00:32:07:23:80:21:d7:76:f0:2b:77:91:40:28:a7:81:00:30:97:42:00:21:17:88:70:24:27:96:00:2b:07:48:00:24:17:66:00:23:d7:93:c0:29:f7:94:00:3a:07:50:f0:38:77:68:80:"
            }
          }
        }
      }
    }
  }
}
```

In Listing 1, we see a snapshot of the decoded RRC message on the downlink CCCH. The `RRCConnectionReject` message tree includes the `waitTime` parameter, which indicates the severity of the overload. The `waitTime` value, an integer between 1 and 16, specifies how many seconds the UE should wait before attempting a new connection after receiving an `RRCConnectionReject`. According to 3GPP TS 23.401 [3], the eNodeB sets this timer value based on the severity of the overload; the more severe the overload, the greater the `waitTime`. Upon receiving the `RRCConnectionReject`, the UE starts the T302 timer [10] with the value set to `waitTime`.

### 4.3 Datasets

To test our proposed solution, we identified times and locations where cellular overload was anticipated, captured traces, and compared network performance with baselines captured in the same location during normal operating conditions. We selected areas expected to have large gatherings but unlikely to be provisioned for such crowds (e.g., city streets rather than stadiums).

**St. Patrick’s Day (SPD):**
- **Location:** Adjacent to Balboa Park, San Diego, CA
- **Date and Time:** March 16th, 2019, 10:00 AM to 3:30 PM
- **Duration:** 76 minutes
- **Frames Collected:** Over 1.1 million
- **UniqueUeIDs:** 27,349

**St. Patrick’s Day Baseline (SPD_base):**
- **Location:** Same as SPD
- **Date and Time:** March 26th, 2019, 8:00 PM to 9:00 PM
- **Duration:** 60 minutes
- **Frames Collected:** Over 1.1 million
- **UniqueUeIDs:** 27,349

**ShamROCK Concert (CSR):**
- **Location:** Downtown San Diego, CA
- **Date and Time:** March 16th, 2019, 7:00 PM to midnight
- **Duration:** 113 minutes
- **Frames Collected:** ~1.7 million
- **UniqueUeIDs:** 42,433

**ShamROCK Concert Baseline (CSR_base):**
- **Location:** Same as CSR
- **Date and Time:** March 26th, 2019, 9:30 PM to 10:30 PM
- **Duration:** 60 minutes
- **Frames Collected:** ~135K
- **UniqueUeIDs:** 3,338

### 5. Evaluation

We analyzed five RRC elements: (a) `RRCConnectionReject`, (b) `waitTime`, (c) `RRCConnectionRequest`, (d) `cellBarred` signal, and (e) number of SIB1s transmitted (`#SIB1`). Collectively, we refer to this data as "RRC metrics." We plotted the values of these RRC metrics over thirty-second bins, which provided the most appropriate granularity for our analysis.

**5.1 Rejects**

According to [8], an eNodeB may send an `RRCConnectionReject` in response to a UE’s `RRCConnectionRequest` for one of the following reasons:
1. The eNodeB is overloaded (e.g., a severe increase in requesting UEs that the eNodeB cannot accommodate).
2. The necessary radio resources for the connection setup cannot be provided (e.g., damaged equipment on the eNodeB).
3. The Mobility Management Entity (MME) is overloaded. The MME is the key control node for the LTE access network, managing several eNodeBs and handling control plane functions related to subscriber and session management. When the MME detects overload, it transmits an overload start message to the affected eNodeBs, signaling them to reject non-emergency and non-high-priority mobile-originated services.

Analyzing the reject messages sent over a fixed time interval can quantify the level of overload in the network. Figure 3 illustrates the average number of reject messages transmitted in thirty-second bins. As predicted, we observed significantly more reject messages in the SPD and CSR datasets. Figure 3(a) shows that there are, on average, eight times more reject messages during the SPD parade compared to the SPD baseline (Figure 3(b)). Similarly, we observed a similar trend in the CSR dataset.

**Figure 2: Google Aerial Map of Experimental Datasets**
- **(a) SPD Dataset:** Balboa Park, San Diego, CA
- **(b) CSR Dataset:** Downtown San Diego, CA

**Figure 3: Number of RRCConnectionReject Messages Transmitted in Thirty-Second Bins**
- **(a) SPD**
- **(b) SPD_base**
- **(c) CSR**
- **(d) CSR_base**

This analysis confirms our hypothesis that during large events, the number of `RRCConnectionReject` messages increases, indicating higher levels of network overload.