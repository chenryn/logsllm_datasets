```
当硬件工作时，我们需要告诉Arduino在它的14根不同的输入/输出引脚中哪儿会有信号。在这种情况下，我们固定13引脚的LED。这是我们的如何命名固定在引脚13的LED，其中“LED”只是我给的变量名：
```
int LED = 13;
```
每一个Arduino程序由两部分组成：void setup() 和 void loop()。这是能够运行的[最小的](http://arduino.cc/en/Tutorial/BareMinimum)Arduino程序。
在 **void setup()**中, 我们告诉Arduino初始化引脚为输出:
```
void setup() { 
  pinMode(LED, OUTPUT);
} 
```
在**void loop()**中，我们告诉Arduino“写”一个值到引脚13中。因为我想让它闪烁，在每个循环中我们要使它写一个序列的四个不同命令。如“loop”一词的意思，直到把Arduino关掉前，我们希望它不断执行。
在下面的代码中，LED代表了我们之前分配的那个变量。”HIGH”告诉Arduino给LED提供五伏的电源，而“LOW”提供零伏。在闪烁时，使得它延迟“1000”毫秒每一整秒：
```
void loop() {
  digitalWrite(LED, HIGH);  
  delay(1000);              
  digitalWrite(LED, LOW);    
  delay(1000);  
} 
```
当把它们放在一起时，整个程序如下（再次声明，Arduino忽略行内双斜杠后边的内容，所以那只是你自己的注释）：
```
// 程序 1: 使一个LED闪烁开和关
int led = 13; // name the LED in pin 13
void setup() {
  pinMode(LED, OUTPUT); // tell Arduino the pin in question is an output
}
void loop() {
  digitalWrite(LED, HIGH);     // deliver 5V to LED
  delay(1000);                     // wait a second
  digitalWrite(LED, LOW);      // deliver 0V to LED 
  delay(1000);                     // wait a second
}
```
点击checkmark来验证你的代码是没有错误的，然后按play键。如果你的Arduino已经连接，它应该开始运行你的闪烁程序了。
### Arduino 软件程序: 打印到电脑上
现在让我们来做一个控制开关并试着演示Arduino是如何产生数字输出的最基本项目。
我们将要设置Arduino “打印”，或是在您的计算机屏幕上显示信息。这个程序基于Paul Bianchi的[Arduino printing tutorial](http://quarkstream.wordpress.com/2009/12/09/arduino-1-writing-and-uploading-sketches/)。
在这个实例中没有硬件，这样我们就可以直接跳到程序部分。再说一次，程序分为两个部分： **void setup()** 和 **void loop()**。
在**void setup()**中，我们要打开一个Arduino和计算机之间通信的线路，指定速率是9600b/s。如果你使用另一个速率，你可能会在计算机上得到乱码而不是文字。
```
void setup() { 
  Serial.begin(9600); 
}
```
在**void loop()** 中，这部分很像我们的一个LED程序。我们要给它两条独立的指令，告诉它在他们之间每一整秒中断。[Println](http://arduino.cc/en/Serial/Println)是Arduino输出到你的电脑显示的命令。**注意"Println"中的"l"的是小写的"L"，而不是大写的"i"!**
```
void loop() { 
  Serial.println(“hello”);
  delay(1000);
  Serial.println(“world.”);
  delay(1000);
}
```
将标题和注释等放到一起，如下：
```
// 程序 2: 使Arduino打印 “Hello World”到电脑上
void setup() {
  Serial.begin(9600); // open a 9600 baud communication line to computer
}
void loop() {
  Serial.println(“Hello”);        // write the word “Hello”
  delay(1000);                    // wait a second
  Serial.println(“World”);      // write the word “World”
  delay(1000);                   // wait a second
}
```
验证你的代码并运行。什么都不会显示，直到你点击Arduino IDE窗口右上角的“Serial Monitor”。你应该看到一个不停输出的“Hello World”，一遍又一遍，直到你拔掉Arduino。你会看到它并不完美：我总是得到一些乱码，但很快它自己就好了。
![](/data/attachment/album/201405/15/222234jvt563rtjfjkd96s.png)
这两个Arduino项目都非常基本，但是通过执行他们你已经开始看到，可以与传感器通信并写结果到您的计算机的Arduino的潜力所在。如果你把这两个项目整合——例如，你可以连接一个温度计到你的Arduino，并告诉它将温度写到你的笔记本电脑，你会很快实现Arduino的可能性几乎是无止境的。
---
via: 
译者：[tenght](https://github.com/tenght) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出