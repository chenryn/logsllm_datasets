# Forensic Analysis Overview

## Introduction
- **Rapper**: @dualcoremusic
- **Other Interests**: Various, including but not limited to, forensic analysis.

## Memory Forensics vs. SMC
- **Windows**
- **Linux**

## Android (An#$) Forensics
- **Fun with SD Cards**

### Disclaimers
- **Not Professional Advice**
- **TROLOLOLOL**
- **Not an Expert / Your Mileage May Vary (YMMV)**
- **Do Not Engage in Illegal Activities**

## Memory Forensics
### Focus on Software Protection (Malware)
- **Persistence and Detection Thwarting**
- **Inhibiting Acquisition and Analysis**

### Key Points
- **All the Cool Stuff Happens in Memory**
  - **Loading from Disk**
  - **Memory Limitations: Why Canâ€™t I Hold All These Sections?**
- **No Longer Referenced, No Longer Needed**
  - **Analysis Tools**
  - **Lots of Fun to Be Had**

### Demo
- **Executable: `thekeysarelikerightnexZoeachother.exe`**
  - **Rekall (winpmem)**

### Common Typos
- **"the keys are like right next to each other."**

### PE Header
- **PE Header Not Needed After Loading**
  - **Zero the Header (RtlZeroMemory)**
  - **Process Continues to Run**
  - **Analysis Tools Fail**
  - **Windows Versions: XP, ..., 10**

### Command Examples
```sh
winpmem92.1.post4.exe$9o$lol.aff4$
"C:\Program Files\Rekall\rekal.exe"$9f$lol.aff4$
procdump proc_regex="thekeys" dump_dir="C:/Users/int0x80/Desktop/"
```

### Linux Memory Forensics
- **Demo: `thekeysarelikerightnexZoeachother linux`**
  - **LiME (Linux Memory Extractor)**
  - **Volatility**

### ELF Header
- **ELF Header Not Needed After Loading**
  - **Zero the Header (memset)**
  - **Process Continues to Run**
  - **Analysis Tools Fail**

### Command Examples
```sh
git clone https://github.com/504ensicsLabs/LiME
cd LiME/src/
make
sudo insmod ./lime9$(uname -r).ko path=/tmp/lol.lime format=lime

git clone https://github.com/volatilityfoundation/volatility
cd volatility/
sudo python setup.py install

cd tools/linux/
make
head module.dwarf
.debug_info
...

sudo zip $volatility/plugins/overlays/linux/Ubuntu1604.zip tools/linux/module.dwarf /boot/System.map-$(uname -r)
python vol.py -info | grep ^Linux
python vol.py -f /tmp/lol.lime --profile=LinuxUbuntu1604x64 linux_pslist
python vol.py -f /tmp/lol.lime --profile=LinuxUbuntu1604x64 linux_procdump -D /tmp
```

## Android (An#$) Forensics
### Encryption
- **Use Encryption**
- **Also, "Use Tor, Use Signal"**

### Acquisiton/Imaging
- **Not the Easiest**
  - **Numerous Caveats**
  - **CONFIG_MODULES=y**
  - **Cross-compile nc**
  - **Different Interfaces**

### Acquisiton/Imaging Caveats
- **Power**
- **Decrypted**
- **Unlocked**
- **Rooted**
- **USB Debugging**
- **CONFIG_MODULES=y**

### NAND Acquisiton
- **Using `nc`**
  ```sh
  adb devices
  adb push ./nc /sdcard/nc
  adb forward tcp:4444 tcp:4444
  adb shell
  su
  cp /sdcard/nc /dev/nc
  chmod 777 /dev/nc
  ```

- **Command Example**
  ```sh
  dd if=/dev/block/mmcblk0 bs=65535 | /dev/nc -nvlp 4444
  nc -nv 127.0.0.1 4444 > image.nand
  sha256sum image.nand
  cp -a image.nand image.nand.copy
  sha256sum image.nand*
  ```

### NAND Exposed via Different Interfaces
- **Check `/proc/partitions`**
  - **/dev/block/mmcblk***
  - **/dev/mtd/mtd***
  - **/dev/mtdblock***
  - **/dev/emmc***
  - **/*/*/*/* (no comment)**

### Logical Acquisiton
- **Easier Methods**
  - **`adb pull / .dump`**
  - **`adb shell dumpsys &> ./dumpsys.log`**
  - **`adb backup -apk -obb -shared -all -system`**
  - **`java -jar abe.jar unpack [pin]`**
  - **`adb shell dumpstate &> ./dumpstate.log`**
  - **`adb bugreport &> ./bugreport.log`**
  - **`aflogical-ose`**

### Complete Forensic Acquisiton/Analysis
- **Sucks**
- **Likely Violates Traditional Methodology**
- **Easy to Disrupt**

### Scenarios
- **Raided by Law Enforcement (LE)**
- **Deploying Hardware Implant**
- **e_()_/e**

### Solutions
- **Power Down Device**
- **Everything Encrypted**
- **Lawyer Up**

### Power Down if Tampering Detected
- **Leverage Device Sensors**
  - **Bluetooth**
  - **Cellular**
  - **GPS**
  - **Motion**
  - **Power**
  - **WiFi**

### Android App: Duck The Police
- **Device Assertions**
  - **Encrypted**
  - **Rooted**
  - **Magnets**
  - **Sensors**

### DEMO

## SD Cards
- **CTF Time!**
- **[SPOILER PREVENTION INTENSIFIES]**

### sdtool
- **Lock/Unlock Device**
- **Physical Lock Disengaged**
- **Writes Happen in Memory**
- **Nothing Written to Device**
- **NO LOGS, NO CRIME**

### sdtool Caveats
- **Direct Access to MMC Device Required**
- **Some USB Hubs Only Expose Mass Storage**
- **WON'T WORK**

### Example Scenarios
- **Hardware Implant**
- **PORTAL of Pi (@thegrugq)**
  - **GitHub: [Linux: PORTAL of Pi](https://github.com/int0x80/notes/wiki/Linux:$PORTAL$of$Pi)**
- **ATACK VM**

### sdtool
- **Link: [http://www.bertold.org/sdtool/](http://www.bertold.org/sdtool/)**
- **Edit Makefile to Use Clang Instead of GCC**

### Commands
```sh
sudo ./sdtool /dev/mmcblk0 status
sudo ./sdtool /dev/mmcblk0 lock
sudo ./sdtool /dev/mmcblk0 unlock
```

### Questions?
- **Contact: @dualcoremusic**
- **Email: PI:EMAIL**