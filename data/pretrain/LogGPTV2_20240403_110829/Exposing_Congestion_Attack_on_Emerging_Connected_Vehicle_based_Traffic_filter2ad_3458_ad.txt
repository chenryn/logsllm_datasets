35.4% 61.2%
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
119.8
9.3%
13.3
3.8
3.8
3.8
23.9
96.6%
591.7
35.1%
3.6
99.8%
1008.98
60.6%
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
28.8
91.5%
609.6
33.9%
TABLE I: Vulnerability analysis results and practical exploit effectiveness for congestion attacks. PR is short for penetration
rate. Two-stage planning and ﬁve-stage planning in the COP algorithm conﬁguration are denoted as 2-S and 5-S respectively,
with the former being the default choice. N/A means that practical exploit construction is not performed.
Stage 1
Stage 2
Ring 1
Ring 2
1
5
2
3
6
7
4
8
Phase 2 :
time
Add a spoofed late 
arriving vehicle
Stage 1
Stage 2
Ring 1
Ring 2
1
5
2
6
3
7
4
8
Phase 2 :
time
Fig. 6: Illustration of the last vehicle advantage. By exploiting
it, even the spoofed data from a single attack vehicle can
signiﬁcantly inﬂuence the signal planning.
the infrastructure-side devices have more computation power.
Thus, we are also interested in exploring whether the I-SIG
system is still vulnerable after the last vehicle advantage is
largely mitigated, i.e., with more planning stages conﬁgured.
Thus, next we perform analysis for the I-SIG system with ﬁve-
stage planning, with which exploiting last vehicle advantage
is no longer the most successful trial (shown in Fig. 7).
2) Five-stage Planning Results: Column 3 in Table I shows
the results after we conﬁgure the COP algorithm to use ﬁve-
stage planning. As shown, even though the success rate is still
high, the attack is much less effective: both the increased total
delay time and percentage are nearly 7× less. Thus, without
the last vehicle advantage, the I-SIG system becomes much
less vulnerable to the data spooﬁng from one attack vehicle.
Nevertheless, the attacks can still cause a 11.5% total delay
increase on average. Considering that the beneﬁt of using the
I-SIG system is around 26.2% total delay reduction [6], the
attack result still shows moderate effectiveness. We analyze
the causes and ﬁnd two types of effective spooﬁng trials:
• Open a skipped phase. If there are skipped phases, the
attacker can add the spoofed vehicle to one of them to force
the signal planning to open it. Since an open phase needs at
least tgmin green light time, which is 7 seconds in our generic
9
s
t
o
h
s
p
a
n
s
f
o
%
 100
 80
 60
 40
 20
Last vehicle advantage
Est. COP solving time
 0
 2
 3
 5
 4
 6
Planning stage #
 7
 8
 5
 4
 3
 2
 1
 0
)
s
(
e
m
i
t
i
l
g
n
v
o
s
P
O
C
Fig. 7: Percentage of snapshots vulnerable to the last vehicle
advantage and the estimated COP solving time with two to
eight planning stages.
intersection settings [37], this causes the signal plan under
attack to waste the time in serving an empty phase at the cost
of the vehicle delay in other phases. If only trying this category
of data spooﬁng options, the total delay increase percentage
is 8.9%, which is already very close to that (11.5%) with all
data spooﬁng options enumerated.
•
Extend the green light end time. Besides opening a
skipped phase, the most successful data spooﬁng options are
to set the spoofed vehicle arrival time to a few seconds after the
original green light end time for a phase. This vehicle needs
to wait for a whole planning stage if its serving is delayed
to the next serving opportunity, which increases its delay and
also the total delay by 20-50 seconds depending on the length
of the next planning stage. Thus, in COP it is sometimes more
cost effective by just extending the original green light end
time for a few seconds to serve this vehicle. However, such
extension is usually at most 4 seconds since it is no longer
cost effective if the total delay added to the vehicles waiting
in the subsequent phases is too much.
The data spooﬁng options for these two categories in
total has around 10.1% in the total delay increase percentage.
For the remaining 1.4% difference to that with all options
enumerated, we ﬁnd that the left-out successful trials are highly
dependent on the trafﬁc pattern and do not have a clear pattern.
C. The Transition Period
In this section, we analyze the vulnerability status of the
I-SIG system in the transition period. The analysis results
are shown in Column 4 to 15 in Table I. In the transition
period, strategy S2 can now be used in addition to S1. Thus,
in this section we analyze both strategies for each PR and
planning stage conﬁguration. As described in §V-B, S2 can add
a number of non-existing unequipped vehicles by exploiting
the queue length estimation in the EVLS algorithm. Since
there are around 100 vehicles in each snapshot, these non-
existing vehicles constitute a substantial share of total vehicles
in the signal planning. This should trick the COP algorithm
into giving more priorities to this big group of non-existing
vehicles at the cost of other vehicles’ delay.
Overall effectiveness. As shown in the table, for a combi-
nation of a PR, a planning stage conﬁguration, and a data
spooﬁng strategy, the attack success rates and the average
total delay increase percentages are 94.0% and 38.2% on
average. This show that both strategy S1 and S2 are effective
in creating congestion and can completely reverse the mobility
beneﬁt of using the I-SIG system. Also, we ﬁnd that for
each combination, the three attack effectiveness metrics are
relatively the same, with less than 6% absolute differences in
the average total delay increase percentages. This shows that
the attack effectiveness is not signiﬁcantly affected by PR.
Next, we perform more in-depth analysis for the attacks on the
two-stage and ﬁve-stage planning conﬁgurations respectively.
1) Two-stage Planning Results: Column 4-5, 8-9, and 12-
13 in Table I shows the attack results for the two-stage
planning. As shown, strategy S1 can still achieve over 99.1%
success rate, and increase over 60.6% in the total delay. We
ﬁnd that the underlying cause is the same as that for the full
deployment period: the last vehicle advantage (§VI-B1). Since
the arrival time to maximally extend the green light time of the
phases is not affected by the trafﬁc conditions, the last vehicle
advantage can always be reliably exploited for the two-stage
planning scenarios regardless of the PR.
Strategy S2, which is newly enabled in the transition
period, also shows high effectiveness. For all three PRs, the
attack success rates are over 98.3%, and the average total delay
increase percentages are over 32.4%. However, the increased
percentages are still around 50% less than those using S1. We
compare the most successful data spooﬁng options from S1 and
S2, and ﬁnd that for 99.0% of the snapshots, the best trial from
S1 is no less than that from S2. We ﬁnd that this is because
even though adding the non-existing vehicles can indeed cause
the signal planning to extend the tg of a target phase to tgmax
like S1, last vehicle advantage is able to further cause the tg
of the preceding phases to extend so that the vehicles in the
subsequent phases can be further delayed.
2) Five-stage Planning Results: Column 6-7, 10-11, and
14-15 in Table I shows the results for ﬁve-stage planning. As
shown, since the last vehicle advantage is much less effective
for ﬁve-stage planning, the success rates and average delay
increase percentages for S1 reduce to at most 83.2% and 17%
respectively, as opposed to at least 99.1% and 60.2% for two-
stage planning. Very similar to the full deployment period, we
ﬁnd that the most successful data spooﬁng trials are opening
a skipped phase and extending green light end time.
Thus, with the last vehicle advantage becoming much less
effective, S2 is now the dominating strategy. We compare the
results between these two strategies for each snapshot, and ﬁnd
that for 93.5% of the snapshots, the best trial from S2 is no
less than that from S1. We then analyze which data spooﬁng
trials in S2 are the most successful. We ﬁnd that for a certain
phase, the best trial is to add the most non-existing unequipped
vehicles, i.e., adding a farthest stopped vehicle using S2. If
we only try these 8 options (one for each phase), the best
trials among them and those among all possible data spooﬁng
options only have 0.009% differences in the average total delay
increase percentage. This is expected since adding more non-
existing vehicles should gain more priority in signal planning
and thus cost more delay to the other vehicles. For very few
cases these 8 options fail to hit the most successful data
spooﬁng trial. This is caused by the differences between the
estimated and actual arrival time of the unequipped vehicles;
if we calculate the attack effectiveness based on the estimated
arrival time from the EVLS algorithm, these 8 options are
always the best. Thus, in our exploit construction later, we
only need to consider these 8 options, which is much less
than trying all (usually over 250) possible options.
VII. EXPLOIT CONSTRUCTION
Real-time attack requirement. In the last section,
to
understand the upper bound of the attack effectiveness, we
enumerate all data spooﬁng options, which takes around 24.5
minutes on average on a single core computer. Since we
only assume the attacker to have a consumer laptop that has
four processors with usually around 3× speedup, this full
enumeration takes 8 minutes on average. However, in practice
the attack decision needs to be made fast enough so that
the trafﬁc condition does not change so much that the attack
decision no longer applies.
Thus, to explore the end-to-end exploitability of the iden-
tiﬁed congestion creation vulnerabilities, in this section we
take the real-time attack requirement into consideration and
leverage the insights from our analysis in the last section to
perform practical exploit construction.
A. Attack Decision Process
To meet the real-time attack requirement, our exploit con-
struction uses a budget-based attack decision process. In this
process, the attacker ﬁrst passively tracks the phase changes.
Once the phase in the current stage turns yellow, the attacker
waits for 1 second and then triggers the decision process. This
is based on our observation that after one second of yellow
light all moving vehicles slow down and their trajectories start
to stabilize. Since typically ty + tr is 6 seconds [37], this gives
the attacker up to 5 seconds of decision time.
In the decision period, the attacker ﬁrst predicts the vehicle
trajectory data at the next signal planning time. Like in the
trajectory awareness component in the I-SIG system (§II-B2),
the attacker maintains a vehicle trajectory database to store
data like location, speed, and acceleration for the equipped
vehicles based on the received broadcast BSM messages. In
the prediction, the attacker assumes that the vehicles maintain
their accelerations and thus predicts their speeds and locations
after 5 seconds. In this step, the attacker needs to use the
intersection map obtained from the reconnaissance step (§III)
to determine whether a vehicle passes the stop bar of that
lane after 5 seconds. If so and the current acceleration value
is negative, we predict that it plans to have a hard stop at the
stop bar and set the stop bar location as the predicted location.
Next, the attacker needs to make decisions about whether to
attack, and if so, what data spooﬁng option to use. According
to our vulnerability analysis, some of the most successful data
10
spooﬁng trials are related to the signal plan without attack, e.g.,
the green light end time. Thus, the attacker ﬁrst runs the I-SIG
system for the predicted vehicle trajectory data without trying
any data spooﬁng option. Using the output signal plan and total
vehicle delay without attack, the attacker then tries several data
spooﬁng options just like in the vulnerability analysis, and pick
the most successful one to use in the actual attack.
Since running the I-SIG system is time consuming, a trial
budget is used to ensure that the whole decision process can
ﬁnish in 5 seconds. Assuming the other parts, e.g., the BSM
transition time and other local computation time, take less than
1 second (which typically take much less), we spare 4 seconds
in total for (1) running the I-SIG system without attack, and
(2) trying the data spooﬁng options. Since these trials are
independent to each other, we use parallel computation to
accelerate this part. We ﬁrst measure the running time for the
signal planning without attack, tnormal, and then calculate the
trial budget as 3 × 4−tnormal
, as the personal laptop with four
tnormal
processors in our lab is measured to have around 3× speedup.
With this, the attacker can plan their trials under this budget.
The detailed budget-based trial strategies for different attack
scenarios are described in the next section.
Based on the trial results,
the attacker ﬁnds the data
spooﬁng option with the highest total delay increases. If such
increase is larger than zero, the attacker uses the corresponding
data spooﬁng option to construct
the BSM message and
broadcast it out. Otherwise, the attacker does not attack.
B. Exploitation Strategy
In this section, we describe the exploitation strategies, i.e.,
the budget-based data spooﬁng trial strategies, for different
combinations of PRs and planning stage conﬁgurations. The
bottom half in Table VII summarizes the attack effectiveness
for the constructed exploits in this section.
E1: Congestion attack for two-stage planning:
(1) In the ﬁrst stage, if there are no skipped phases, try the
data spooﬁng option with the latest arrival time for any of the
two latter phases in stage 1, and then jump to (3). Trying the
latter phases is because their latest vehicles are able to further
extend the tg of the two former phases to tgmax .
(2) In the ﬁrst stage, if there is a skipped phase, try the
data spooﬁng option with the latest arrival time for this phase,