If all
paths with less than advertised cost are found unavailable,
sensorij will generate nadvertised messages to verify that at
least one path with the advertised cost is available where na
≤ nadvertised ≤ na
3 + ··· . In this case, the total
1
overhead is 2 ∗ n<advertised + 2 ∗ nadvertised.
2 + ··· + ns2
2+ ··· + ns1
2 + ··· .
1 + ns1
1 + ns2
1 + na
2 + na
For a sub-optimal-cost advertisement, sensorij might ﬁnd
an available path to subnet sab from router vi with a cost
that is less than the advertised cost. Let the available path
1, pa
1+ no
1 , na
sensor
12
v
1
e
12
sensor
34
sensor
45
v
2
e
23
v
3
e
34
v
4
s
45
e
45
Figure 5: Message Overhead Example
1+ no
2+ ··· + ns1
be ns1
2 . Now, the number of messages generated by sensorij
is n<advertised = no
2 . nadvertised = 0
since no messages are generated to verify paths with the
advertised cost unless it is determined that all paths with
costs lesser than the advertised cost are unavailable. In this
case, the total overhead is 2 ∗ n<advertised.
1 + ns1
Path veriﬁcation is done for every routing update that
advertises an optimal or sub-optimal cost. Every sensor that
detects a routing advertisement will generate an overhead of
2 ∗ noptimal for every optimal route and 2 ∗ n<advertised +
2 ∗ nadvertised for every sub-optimal route in the routing
advertisement. However, the overheads 2 ∗ noptimal and 2 ∗
n<advertised + 2 ∗ nadvertised decrease as the proximity of a
sensor with the advertised destination increases.
Routing updates are generated every 30 seconds.
If we
assume the veriﬁcation packet size to be 48 bytes (including
the headers), then every 30 seconds, the veriﬁcation of one
destination will result in an overhead of 48 ∗ 2 ∗ noptimal or
48∗ 2∗ n<advertised + 48∗ 2∗ nadvertised bytes depending on
whether the advertised cost is optimal or sub-optimal.
For example, consider Figure 5. The cost of all links is
equal to 1. When router v4 advertises a route for subnet s45
at cost 1 on link e34, sensor34 searches its conﬁguration and
determines that an advertisement from v4 for s45 at cost 1
is an optimal-cost advertisement. Since there is only one
path {(v4)} from v4 to s45, and sensor45 is the available
sensor on that path, sensor34 sends a veriﬁcation request
to sensor45. sensor45 replies with a veriﬁcation reply to
sensor34. Since each veriﬁcation message has a size of 48
bytes, this veriﬁcation by sensor34 requires 96 bytes.
Next, v3 advertises a route for subnet s45 at cost 2 on link
e23. Since e23 does not have any sensor on it, no veriﬁcation
messages are generated. Next, when v2 advertises a route
for s45 at cost 3 on e12, sensor12 searches its conﬁguration
and determines that an advertisement from v2 for s45 at cost
3 is an optimal-cost advertisement. There is only one path
{(v2, v3, v4)} from v2 to s45, and two sensors (sensor34 and
sensor45) are available on that path. Therefore, sensor12
sends one message to sensor34 and one message to sensor45.
Both sensor34 and sensor45 reply back. Therefore, the ver-
iﬁcation by sensor12 requires 48∗ 4 = 192 bytes. The entire
veriﬁcation process requires 96 + 192 = 288 bytes. This
is the amount of overhead that will be generated every 30
seconds.
The overhead due to path-veriﬁcation might be tolerable
under normal circumstances. Under attack conditions, the
overhead will be the same as discussed above depending on
whether the advertised cost is impossible, optimal or sub-
optimal. A malicious entity might try to use the sensors to
do a denial-of-service attack by sending an excessive amount
of routing updates. However, this will result in the gener-
ation of more routing updates than the sensor’s threshold.
Under such a condition, the sensor will appropriately scale
back its path veriﬁcation mechanism and raise an alert.
However, the overhead due to path-veriﬁcation may be
135unacceptable under conditions where a major part of the
network fails. If a link breaks, then every router that is using
a path that contains the broken link will send a routing up-
date to its neighbors. Every routing update will generate an
overhead as discussed above. Moreover, a link breakage will
result in sub-optimal cost advertisements or unreachability
advertisements, which are also treated as sub-optimal cost
advertisements. The overhead to verify a sub-optimal-cost
advertisement is more than that of verifying an optimal-cost
advertisement.
If a number of links fail, then routes to many destina-
tions will change or become unavailable, leading to many
routing updates. Consequently, there will be an increase in
the number of sensor veriﬁcation messages. When links get
reconnected 8, better paths might be advertised and as a
consequence, again, increase the number of sensor veriﬁca-
tion messages.
The message overhead due to the path-veriﬁcation proto-
col can be reduced by reducing the number of sensors in the
network, reducing the frequency of path veriﬁcation, or ver-
ifying the advertisement selectively. However, all of these
approaches will lead to weaker security guarantees. Our
present work is focused on reducing the overhead due to path
veriﬁcation without reducing the eﬀectiveness of detection.
A possible way of reducing the overhead is by modifying the
path veriﬁcation algorithm so that it does not try to verify
every path that corresponds to the advertised cost. Instead
of sending a veriﬁcation message to every sensor on every
path having the advertised cost, the verifying sensor sends
just one message to an IP address in the destination subnet.
This message will traverse a certain path to reach the des-
tination. All sensors present on this path will send back a
reply to the verifying sensor. Based on the replies that are
sent back, the sensor decides whether there exists a path
with the advertised cost that has all the replying sensors on
it or not. This approach should reduce the path veriﬁcation
overhead signiﬁcantly.
7.3 Other Limitations
Our approach is not capable of detecting attacks under
certain conditions. Random dropping or modiﬁcation of
data packets and unauthorized access to routers cannot be
detected. The verifying sensor uses probe packets to ver-
ify that a path with a cost less than the advertised cost is
not available. Since, a malicious router present on the path
between the verifying sensor and the destination can drop
the probe packets, it is not possible to reliably determine
that. Consider there is a malicious router on every avail-
able path, with a cost less than the advertised cost, from
the verifying sensor to the destination. If all these routers
drop probe packets, then the verifying sensor can be made
to believe that all paths with a cost less than the advertised
cost are unavailable. The verifying sensor will then consider
a sub-optimal path to be valid even though better paths are
present.
Attacks cannot be detected on links where sensors are not
present. A malicious entity can advertise false routing in-
formation on links where there are no sensors without being
detected. The false routing information will be accepted
by the routers connected to the link and will be advertised
further. The eﬀects of the false routing information will
propagate undetected until it reaches a link where a sensor
is present.
8
Again, we consider only those links that were a part of the topol-
ogy that was used to generate the sensor conﬁgurations.
The detection scheme might also generate false positives.
Sensors that do not have conﬁgurations based on the cor-
rect network topology might generate false alarms. Incorrect
threshold values and timers also may cause false alarms. For
example, when a sensor sends a veriﬁcation message, it sets
a timer within which it expects to receive a reply from the
other sensor. If the reply gets delayed due to some network
condition, then false alarms may be generated.
False alarms may also be generated when verifying sub-
optimal-cost advertisements. To verify a sub-optimal-cost
advertisement, a sensor ﬁrst veriﬁes that all optimal-cost
paths are unavailable. If the verifying sensor receives replies
from all the sensors associated with an optimal path, it will
infer that the optimal path is available. However, if sensors
are not placed on every link, there might be a broken link
after the last sensor used for the veriﬁcation of the optimal
path. As a consequence, the verifying sensor will assume
that the optimal path is available and will generate a false
alarm indicating that the sub-optimal path is malicious.
8. CONCLUSION
This paper presented a novel approach to detect attacks
against the routing infrastructure. The approach uses a set
of sensors that analyze routing traﬃc in diﬀerent locations
within a network. An algorithm to automatically generate
both the detection signatures and the inter-sensor messages
needed to verify the state of the routing infrastructure has
been devised for the case of the RIP distance-vector routing
protocol.
The approach described here has a number of advantages.
First, the implementation of our approach does not require
any modiﬁcation to routers and routing protocols. Most
current approaches require routers and routing protocols be
changed. The high cost of replacing routers and the risk of
large-scale service disruption due to possible routing proto-
col incompatibility has resulted in some inertia in the de-
ployment of these approaches. Our approach, on the other
hand, is deployable and provides a preliminary solution to
detecting attacks against the routing infrastructure.
Second, the detection process does not use the computa-
tional resources of routers. There might be additional load
on the routers from having to forward the traﬃc generated
by sensors. However, this additional load should not be as
much as it would be if a router had to perform public-key
decryption of every routing update that it received, which
is what most current schemes require.
Third, the approach supports the automatic generation of
intrusion detection signatures, which is a human-intensive
and error-prone task.
However, the approach has some drawbacks. First, the
complexity of the oﬄine computation that generates sen-
sor conﬁgurations increases as the density of the network
graph increases. Our experience suggests that this will not
be a problem in the case of real-life topologies, but it could
become unmanageable for densely interconnected infrastruc-
tures. In addition, sensors generate additional traﬃc to vali-
date routing advertisements. The amount of additional traf-
ﬁc generated increases as the required security guarantees
become more stringent. Finally, attacks where subverted
routers modify the contents of data packets or drop packets
selectively, cannot be detected using this approach.
Our future work will be focused on extending the ap-
proach described here to intra-domain link-state protocols
(e.g., OSPF) and inter-domain protocols (e.g., BGP). The
vulnerabilities associated with these protocols have already
136Information Survivability Conference and Exposition,
January 2000.
[11] S. Kent, C. Lynn, J. Mikkelson, and K. Seo. Secure
Border Gateway Protocol (Secure-BGP) - Real World
Performance and Deployment Issues. In Proceedings of
the Symposium on Network and Distributed System
Security, February 2000.
[12] S. Kent, C. Lynn, and K. Seo. Secure Border Gateway
Protocol (Secure-BGP). IEEE Journal on Selected
Areas in Communications, 18(4):582–592, April 2000.
[13] G. Malkin. Rip version 2. IETF RFC 2453, Nov 1998.
[14] S.L. Murphy. Presentation on Security Architecture of
the Internet Infrastructure. In Proceedings of the
Symposium on Network and Distributed System
Security, April 1995.
[15] S.L. Murphy and M.R. Badger. Digital Signature
Protection of the OSPF Routing Protocol. In
Proceedings of the Symposium on Network and
Distributed System Security, February 1996.
[16] R. Perlman. Network Layer Protocols with Byzantine
Robustness. PhD thesis, Department of EECS, MIT,
August 1988.
[17] D. Qu, B.M. Vetter, F. Wang, R. Narayan, F. Wu,
F. Jou, F. Gong, and C. Sargor. Statistical Anomaly
Detection for Link-State Routing Protocols. In In
Proceedings of the 1998 International Conference on
Network Protocols, October 1998.
[18] Y. Rekhter and T. Li. A border gateway protocol 4
(bgp-4). IETF RFC 1654, Mar 1995.
[19] B.R. Smith and J.J. Garcia-Luna-Aceves. Securing the
Border Gateway Routing Protocol. In Proceedings of
Global Internet ’96, London, UK, November 1996.
[20] B.R. Smith, S. Murthy, and J.J. Garcia-Luna-Aceves.
Securing Distance-Vector Routing Protocols. In
Proceedings of the Symposium on Network and
Distributed System Security, February 1997.
[21] F. Wang and F. Wu. On the Vulnerablity and
Protection of OSPF Routing Protocol. In IEEE
Seventh International Conference on Computer
Communications and Networks, October 1998.
[22] F. Wu, H.C. Chang, F. Jou, F. Wang, F. Gong,
C. Sargor, D. Qu, and R. Cleaveland. Jinao: Design
and implementation of a scalable intrusion detection
system for the ospf routing protocol, February 1999.
[23] F. Wu, F. Wang, B.M. Vetter, W.R. Cleaveland,
F. Jou, F. Gong, and C. Sargor. Intrusion Detection
for Link-State Routing Protocols, December 1996.
[24] K. Zhang. Eﬃcient Protocols for Signing Routing
Messages. In Proceedings of the Symposium on
Network and Distributed System Security, February
1998.
been analyzed in our testbed network and a preliminary ver-
sion of the algorithm for both the OSPF and BGP protocols
has been devised. To address large-scale networks where
knowledge of the complete topology cannot be assured, we
are working on a model where intelligent decisions can be
made based on partial topology information.
Acknowledgments
We want to thank Prof. Richard Kemmerer for his invalu-
able comments.
This research was supported by the Army Research Of-
ﬁce, under agreement DAAD19-01-1-0484 and by the De-
fense Advanced Research Projects Agency (DARPA) and
Rome Laboratory, Air Force Materiel Command, USAF,
under agreement number F30602-97-1-0207. The U.S. Gov-
ernment is authorized to reproduce and distribute reprints
for Governmental purposes notwithstanding any copyright
annotation thereon.
The views and conclusions contained herein are those of
the authors and should not be interpreted as necessarily
representing the oﬃcial policies or endorsements, either ex-
pressed or implied, of the Army Research Oﬃce, the Defense
Advanced Research Projects Agency (DARPA), Rome Lab-
oratory, or the U.S. Government.
9. REFERENCES
[1] S. Axelsson. Intrusion Detection Systems: A
Taxomomy and Survey. Technical Report 99-15, Dept.
of Computer Engineering, Chalmers University of
Technology, Sweden, March 2000.
[2] K.A. Bradley, S. Cheung, N. Puketza, B. Mukherjee,
and R.A. Olsson. Detecting Disruptive Routers: A
Distributed Network Monitoring Approach. In
Proceedings of the IEEE Symposium on Security and
Privacy, May 1998.
[3] S. Cheung. An Eﬃcient Message Authentication
Scheme for Link State Routing. In 13th Annual
Computer Security Applications Conference,
December 1997.
[4] S. Cheung and K. Levitt. Protecting Routing
Infrastructures from Denial of Service Using
Cooperative Intrusion Detection. In Proceedings of the
New Security Paradigms Workshop, September 1997.
[5] S. Cheung, K.N. Levitt, and C. Ko. Intrusion
Detection for Network Infrastructures. In Proceedings
of the 1995 IEEE Symposium on Security and
Privacy, Oakland, CA, May 1995.
[6] M.T. Goodrich. Eﬃcient and Secure Network Routing
Algorithms. Provisional patent ﬁling, January 2001.
[7] R. Hauser, A. Przygienda, and G. Tsudik. Reducing
the Cost of Security in Link-State Routing. In
Proceedings of the Symposium on Network and
Distributed System Security, February 1997.
[8] L.T. Heberlein, K. Levitt, and B. Mukherjee. An
intrusion-detection system for large-scale networks. In
Proceedings of the 15th National Computer Security
Conference, Baltimore, MD, October 1992.
[9] Christian Huitema. Routing in the Internet. Prentice
Hall PTR, 1995.
[10] Y.F. Jou, F. Gong, C. Sargor, X. Wu, F. Wu, H.C.
Chang, and F. Wang. Design and Implementation of a
Scalable Intrusion Detection System for the
Protection of Network Infrastructure. In DARPA
137