### Training Data and Accuracy
With 20 hours of training data, the average accuracy of PLC-Sleuth reaches 98.11%, accurately identifying almost all 45 edges in the TE process. Construction errors primarily occur at transfer variables due to the similarities between transfer nodes and transmit nodes, such as mismatching \( r_2 \) to \( y_{40} \) in Figure 14. Figure 15 illustrates the results of control graph construction using different metrics, demonstrating that PLC-Sleuth achieves the highest construction accuracy.

### Intrusion Detection and Localization with TE
We evaluated PLC-Sleuth's intrusion detection and localization capabilities under two attack scenarios in the TE process. Each of the 17 control loops was attacked 10 times in both scenarios. PLC-Sleuth detected attacks with a 100% true positive (TP) alarm rate and no false positives (FP). For the 340 alarms, PLC-Sleuth localized the forged command with a positive predictive value (PPV) of 96.76% (i.e., 329 out of 340). Detailed detection and localization results for the 340 attacks are listed in Table 3 of the Appendix.

#### Attack-1
The first attack scenario involved injecting forged time series into each of the 17 control loops. These time series were generated by:
1. Adding random noise to normal output commands.
2. Mixing constant values with random white noise to hide the attack.

Figure 16 shows the weight \( w_{uky_j} \) under four example attacks. The weights of all edges \( e_{uky_j} \) corresponding to the compromised control loops changed due to the attack, making them detectable by PLC-Sleuth. Figures 23(a) and 23(b) in the Appendix provide a visualization of the weight changes. We further evaluated the impact of the detection window and threshold on the reactor level control in TE, as shown in Figure 17. The detection window and threshold have limited effects on the TP/FP rates but significantly influence the detection latency, which is inversely proportional to the window size. This is because longer detection periods capture better the normal command weight, thereby identifying anomalies more effectively.

#### Attack-2
The second attack scenario involved injecting a forged command \( u_a \) into each control loop and replacing sensor measurements with their historical normal records. Another 170 attacks were performed, resulting in similar impacts on the TE process as in Attack-1. The monitored weight \( w_{uky_j} \) changed significantly, regardless of the replayed sensor measurements, as shown in Figure 16 and visualized in Figures 23(a) and 23(c) in the Appendix. PLC-Sleuth detected Attack-2 against the reactor pressure control loop with 100% TP and 0% FP, as long as the deviation from normal commands (defined as \( \sum|u_a(k) - u(k)| / \sum u(k) \times 100\% \)) was greater than 0.12%, as illustrated in Figure 18(a). Figure 18(b) visualizes the weight change with a 0.16% deviation.

### Tolerance to Inaccurate Control Graph
We examined PLC-Sleuth's tolerance to inaccurately constructed control graphs. With PLC-Sleuth, falsely matched edges mainly occur at control loops containing transfer variables, known as inner-loop faults, such as the edge connecting node \( y_{40} \) to \( r_2 \) in Figure 14. For control graphs constructed using other learning metrics, falsely matched edges also include pairs of nodes from different control loops, known as inter-loop faults, such as the edge connecting node \( y_{11} \) to \( u_8 \) in Figure 14. Figure 19 shows detection results under the two attack scenarios using control graphs with different construction errors. The control graph with inner-loop construction faults still detects the attack, although with a higher FP rate; the one with inter-loop faults, however, is not applicable.

### Discussion
#### Stealthy Sensor Attacks
PLC-Sleuth's targeted cooperative stealthy attacks are orthogonal to the extensively studied stealthy sensor attacks [34–36]. These can be effectively detected using process invariants defined by the correlations among sensors [28, 37–39].

#### Sophisticated Evasive Attacks
Sophisticated attackers might forge sensor logs to make them consistent with expected correlations with the forged commands. However, this is challenging in practice. First, the attacker needs deep knowledge of correlated variables and the control algorithms. Second, control loops are interdependent, making it hard to mimic sensors' behavior. These limitations make the characterization of evasive cooperative stealthy attacks an interesting topic for future research.

### Related Work
#### PLC Attacks
Systematic attacks against PLCs have been reported, including attacks on PLC firmware [8, 11, 40] and user programs [41, 42, 6]. These attacks separate legitimate control rules from the physical process or activate malicious behavior under predefined conditions.

#### Detecting PLC Attacks
Many detection methods have been proposed based on program analysis and system modeling. Program analysis methods monitor control flow integrity (CFI) [43–46], but CFI checking is time-consuming and unsuitable for real-time detection [47]. System modeling methods characterize variables' static invariants [37, 48–52] and dynamic models/invariants [39, 53–55]. PLC-Sleuth mines dynamic invariants with significantly less a priori knowledge.

### Conclusion
We proposed PLC-Sleuth, a novel attack detection and localization scheme grounded on a PLC's control graph \( G \). The control graph describes a control invariant of the PLC, capturing essential characteristics of control loops. Using the constructed control graph, PLC-Sleuth flags and localizes attacks when weights in \( G \) deviate from the norm. Evaluation results using SEDS and TE processes show that PLC-Sleuth can construct control graphs with high accuracy (100% with a log of 0.5 hours for SEDS and 98.11% with a log of 20 hours for TE). PLC-Sleuth achieves detection TP/FP rates of {98.33%, 0.85‰} for SEDS and {100%, 0%} for TE. In terms of attack localization, PLC-Sleuth localizes the forged command with {93.22, 96.76}% accuracy for SEDS and TE, respectively.