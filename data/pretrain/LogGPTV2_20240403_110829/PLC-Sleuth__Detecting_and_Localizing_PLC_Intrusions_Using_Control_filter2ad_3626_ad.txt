training data. The average accuracy reaches 98.11% with a
20h training data, i.e., PLC-Sleuth accurately identiﬁes al-
most all of TE’s 45 edges. Note that the construction errors
mainly occur at transfer variables, because of the similarities
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    341
5090Temp. °C)attackdepartureAttack1Attack201weightAttack1Attack20.511.52Time (0.5s)104010erroralarmAttack1Attack204.5Flow(L/min)attackdangerAttack1Attack201weightAttack1Attack25001000150020002500Time (0.5s)010erroralarmAttack1Attack20.31Level (m)attackdangerAttack1Attack201weightAttack1Attack225002600270028002900Time (0.5s)010erroralarmAttack1Attack2102030Threshold01TP rateT=500T=700T=1000102030Threshold0510FP rate10-4T=500T=700T=1000102030Threshold050100Latency (s)T=500T=700T=1000Figure 14: Control graph of the TE process.
Figure 16: Command weights W uky j of four control loops under
two attacks: (a) reactor temperature; (b) reactor level; (c)
reactor pressure; (d) product quality.
Figure 15: Constructing the TE process’s control graph.
between transfer nodes and transmit nodes (e.g., mismatching
r2 to y40 in Fig. 14). Fig. 15 also plots the results of con-
trol graph construction when using different metrics as wuky j ,
showing that PLC-Sleuth achieves the highest construction
accuracy.
next
examine
PLC-Sleuth’s
5.3.2 Intrusion Detection/Localization with TE
We
detec-
intrusion
tion/localization with two attack scenarios in TE. Each
of the 17 loops is attacked for 10 times in both scenarios.
PLC-Sleuth detects attacks with 100% TP alarm rate,
without any FP alarms. For the 340 alarms, PLC-Sleuth
localizes the forged command with a PPV of 96.76% (i.e.,
329 out of 340). Detailed detecting/localizing results of the
17× 10× 2 = 340 attacks are listed in Table 3 of Appendix.
• Attack-1. The forged time series, which are generated by
(i) adding random noise to normal output commands, and
(ii) mixing constant values with random white noises to
hide the attack, are injected to each of the 17 control loops.
Fig. 16 plots the weight wuky j under the four example attacks.
We can see that the weights of all the edges euky j correspond-
ing to the compromised control loops change due to the
attack, making them detectable by PLC-Sleuth. Figs. 23(a)
and 23(b) in Appendix present a visualization of the weight
change. We further evaluate the impacts of detection win-
Figure 17: Impact of the detection window (T ) and threshold
(µ) on PLC-Sleuth’s attack detection for the reactor level
control in TE.
dow and threshold using the 10 attacks against the TE’s
reactor level control, as plotted in Fig. 17, showing that de-
tection window and threshold have limited impacts on the
TP/FP rate, but have signiﬁcant inﬂuence on the detection
latency — the detection latency is inversely proportional
to the window size. This is because the detection data with
a long period of logs is able to capture better the normal
command weight and thus identify the anomalies.
• Attack-2. By injecting the forged command ua into each
control loop and replacing the sensor measurements with
their historical normal records, another 17× 10 = 170 at-
tacks are performed. These attacks have similar impacts on
the TE process as with Attack-1. The monitored weight wuky j
changes signiﬁcantly regardless of the replayed sensor mea-
surements, as plotted in Fig. 16 and visualized in Figs. 23(a)
and 23(c) in Appendix. Note PLC-Sleuth detects Attack-2
against the reactor pressure control loop with {100%,0%}
true/false positives, as long as the deviation from normal
342    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
s1y17r8s2s3s4s5s9y15y12y17u8y14u7y8r10y11u11y7y10u6u10y9r7·r8r6·r8r5·r8s6y40r12y2u1y3u2s7r13y1u3s8y4u4y23,y25y23,y25r2·r8r3·r8r1·r8r4·r8r13,r1405101520Training length (hour)406080100Accuracy (%)K2MILLPLC-SleuthMDL0.511.52Time (step)10500.51weight(a)Attack1Attack224681012Time (step)10400.51weight(b)Attack1Attack20.511.52Time (step)10500.51weight(c)Attack1Attack20.511.52Time (step)10500.51weight(d)Attack1Attack250200350Window (step)01Alarm rateTP and FP v.s. windowTP =5FP =550200350Window (step)5001500Latency (step)Latency v.s. window=5=10=2001020Threshold01Alarm rateTP and FP v.s. thresholdTP T=50FP T=5001020Threshold50015002500Latency (step)Latency v.s. thresholdT=50T=200T=350(a) TP and FP v.s. deviation
(b) wr5y7 under a stealthy attack with
a 0.16% deviation.
Figure 18: PLC-Sleuth’s sensitivity to deviations from the
normal commands for the reactor pressure control in TE.
commands (deﬁned as ∑|ua(k)− u(k)|/∑u(k)× 100%) is
larger than 0.12%, as shown in Fig. 18(a). Fig. 18(b) visu-
alizes the weight change with a 0.16% deviation.
5.3.3 Tolerance to Inaccurate Control Graph
We examine PLC-Sleuth’s tolerance to the few cases of inac-
curately constructed control graph. With PLC-Sleuth, falsely
matched edges mainly occur at control loops containing trans-
fer variables, which we call inner-loop fault, such as the edge
connecting node y40 to r2 in Fig. 14. For the control graph
constructed by other learning metrics, falsely matched edges
also include the pairs of nodes from different control loops,
which we call the inter-loop fault, such as edge connecting
node y11 to u8 in Fig. 14. Fig. 19 shows detection results
under the two attack scenarios, by using the control graph
with two different construction errors. The control graph with
inner-loop construction faults still detects the attack, although
with a higher FP rate; the one with inter-loop faults, however,
is not applicable anymore.
6 Discussion
Stealthy sensor attack. Orthogonal to the targeted cooper-
ative stealthy attacks of PLC-Sleuth, the stealthy sensor at-
tacks have been investigated extensively [34–36], which can
be detected effectively using process invariants deﬁned using
the correlations among sensors [28, 37–39].
Sophisticated Evasive Attacks. To evade PLC-Sleuth, so-
phisticated attackers may carefully forge sensor logs to make
them consistent with expected correlations with the forged
commands. However, it can be challenging to launch such an
attack in practice. First, the attacker would need deep knowl-
edge of not only pairs of correlated variables in the same
control loop but also the control algorithm that governs their
detailed relationships. Second, control loops are interdepen-
dent by the laws of physics, thus it is hard for the attacker
to mimic sensors’ behavior, as he needs to jointly model all
the relevant control loops. These limitations make the further
characterization of evasive cooperative stealthy attacks an
interesting topic for future research.
(a) inner-loop fault
(b) inter-loop fault
Figure 19: Weights of the two types of the false matched
edges under the two attacks scenarios.
7 Related work
PLC attacks. Systematic attacks against PLC have been re-
ported. PLC ﬁrmware, providing an interface between user
program and PLC input/output modules, has been attacked
in [8, 11, 40]. The compromised ﬁrmware separates legiti-
mate control rules from the physical process. A “ladder logic
bombs”, instantiated in IEC 61131-3 languages, was designed
against a PLC user program to activate malicious behaviour
under pre-deﬁned conditions [41]. Besides, a dynamic pay-
load generation against the target physical process has been
proposed in [42] and enhanced by [6]. They generated the
malicious payloads automatically.
Detecting PLC attacks. Against PLCs’ attacks, many de-
tection methods have been proposed based on the following
methodologies: program analysis and system modeling. Pro-
gram analysis based detections [43–46] monitor the control
ﬂow integrity (CFI) when controller is processing. However,
the CFI checking is time-consuming, which renders it unsuit-
able for real-time detection in many situations [47]. System
modeling methods that characterize variables’ static invariants
have been investigated [37, 48–52]. Further efforts have also
been made to build dynamic models/invariants [39, 53–55].
In comparison, PLC-Sleuth also mines dynamic invariants
but does so using signiﬁcantly less a priori knowledge.
8 Conclusion
We have proposed PLC-Sleuth, a novel attack detec-
tion/localization scheme grounded on a PLC’s control graph
G. The control graph describes a control invariant of PLC,
with the inherent and essential characteristics of control loops.
Using the constructed control graph, PLC-Sleuth ﬂags and
localizes attacks when weights in G deviates from the norm.
Evaluation results using SEDS and TE process show that
PLC-Sleuth can construct control graph with high accu-
racy (100% with a log of 0.5h for SEDS and 98.11% with a
log of 20h for TE process). PLC-Sleuth achieves detection
true/false positives of {98.33%, 0.85‰} for SEDS, and of
{100%, 0%} for TE process. In terms of attack localization,
PLC-Sleuth localizes the forged command with a {93.22,
96.76}% accuracy for SEDS and TE process, respectively.
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    343
00.511.52Deviation10-301Alarm rateTPFP0.20.25command(%)0.711.3Time (step)1050.851weightAttack2681012Time (step)10400.51weightattackFPsAttack 1Attack 2681012Time (step)1040.9weightattackAttack 1Attack 2Acknowledgments
This work was supported in part by the National Key Re-
search and Development Program of China under Grant
2018YFB0803501, the National Natural Science Foundation
of China under Grant 61833015, U1911401, the SUTD-ZJU
IDEA grant number SUTD-ZJU (VP) 201805, the Singapore
MOE T1 grant number SUTDT12017004, and a startup grant
of University of Colorado Denver.
References
[1] Keith Stouffer, Joe Falco, and Karen Scarfone. Guide to
industrial control systems (ICS) security. NIST special
publication, 800(82):16–16, 2011.
[2] Amy Babay, John Schultz, Thomas Tantillo, Samuel
Beckley, Eamon Jordan, Kevin Ruddell, Kevin Jordan,
and Yair Amir. Deploying Intrusion-Tolerant SCADA
for the Power Grid. In 49th Annual IEEE/IFIP Interna-
tional Conference on Dependable Systems and Networks
(DSN), pages 328–335, 2019.
[3] Ariana Mirian, Zane Ma, David Adrian, Matthew
Tischer, Thasphon Chuenchujit, Tim Yardley, Robin
Berthier, Joshua Mason, Zakir Durumeric, J. Alex Hal-
derman, and Michael Bailey. An Internet-wide view of
ICS devices. In 14th Annual Conference on Privacy,
Security and Trust (PST), pages 96–103, 2016.
[4] Qiang Li, Xuan Feng, Haining Wang, and Limin Sun.
Understanding the usage of industrial control system
devices on the internet. IEEE Internet of Things Journal,
5(3):2178–2189, 2018.
[5] Symantec Security Response. Dragonﬂy: Western
energy sector targeted by sophisticated attack group.
https://www.symantec.com/blogs/threat-inte
lligence/dragonfly-energy-sector-cyber-att
acks, 2017.
[6] Anastasis Keliris and Michail Maniatakos. ICSREF: A
framework for automated reverse engineering of indus-
trial control systems binaries. In Symposium on Network
and Distributed System Security (NDSS), 2019.
[7] Stephen McLaughlin and Patrick McDaniel. SABOT:
speciﬁcation-based payload generation
for pro-
In Proceedings of the
grammable logic controllers.
2012 ACM Conference on Computer and Communica-
tions Security, pages 439–449, 2012.
[9] Symantec Security Response.
After Triton, Will
the Industrial Threat Landscape Ever be the Same?
https://www.symantec.com/blogs/feature-sto
ries/after-triton-will-industrial-threat-l
andscape-ever-be-same, 2018.
[10] Nicolas Falliere, Liam O Murchu, and Eric Chien. W32.
stuxnet dossier. White paper, Symantec Corp., Security
Response., 5(6):29, 2011.
[11] Luis Garcia, Ferdinand Brasser, Mehmet Hazar Cin-
tuglu, Ahmad-Reza Sadeghi, Osama A Mohammed, and
Saman A Zonouz. Hey, My Malware Knows Physics!
Attacking PLCs with Physical Model Aware Rootkit.
In Network and Distributed Systems Security (NDSS)
Symposium, 2017.
[12] Gene F Franklin, J David Powell, and Abbas Emami-
Naeini. Feedback control of dynamic systems. Pearson
London, 2015.
[13] Gary A Dunning. Introduction to programmable logic
controllers. Cengage Learning, 2005.
[14] Henry Z Kister. What caused tower malfunctions in
the last 50 years? Chemical Engineering Research and
Design, 81(1):5–26, 2003.
[15] Richard Bellman, Irving Glicksberg, and Oliver Gross.
On the “bang-bang” control problem. Quarterly of Ap-
plied Mathematics, 14(1):11–18, 1956.
[16] Karl Johan Åström, Tore Hägglund, and Karl J Astrom.
Advanced PID control. ISA-The Instrumentation, Sys-
tems, and Automation Society, 2006.
[17] Hans Berger. Automating with STEP7 in STL and SCL:
programmable controllers Simatic S7-300/400. Publicis
Publishing, 2012.
[18] Pedro Albertos and Sala Antonio. Multivariable control
systems: an engineering approach. Springer Science &
Business Media, 2003.
[19] Yilin Mo and Bruno Sinopoli. Secure control against
replay attacks. In 2009 47th Annual Allerton Conference
on Communication, Control, and Computing (Allerton),
pages 911–918, 2009.
[20] Xue-Wen Chen, Gopalakrishna Anantha, and Xiaotong
Lin. Improving Bayesian network structure learning
with mutual information-based node ordering in the K2
algorithm. IEEE Transactions on Knowledge and Data
Engineering, 20(5):628–640, 2008.
[8] Zachry Basnight, Jonathan Butts, Juan Lopez, and
Thomas Dube. Firmware modiﬁcation attacks on pro-
grammable logic controllers. International Journal of
Critical Infrastructure Protection, 6(2):76 – 84, 2013.
[21] Xiannian Fan and Changhe Yuan. An improved lower
bound for bayesian network structure learning. In Pro-
ceedings of the Twenty-Ninth AAAI Conference on Arti-
ﬁcial Intelligence, pages 3526–3532, 2015.
344    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
[22] Pengfei Sun, Luis Garcia, and Saman Zonouz. Tell Me
More Than Just Assembly! Reversing Cyber-physical
Execution Semantics of Embedded IoT Controller Soft-
In 49th Annual IEEE/IFIP Interna-
ware Binaries.
tional Conference on Dependable Systems and Networks
(DSN), pages 349–361, 2019.
[23] Ralf Steuer, Jürgen Kurths, Carsten O Daub, Janko
Weise, and Joachim Selbig. The mutual information: de-
tecting and evaluating dependencies between variables.
Bioinformatics, 18(suppl_2):S231–S240, 2002.
[24] Thomas McAvinew and Raymond Mulley. Control Sys-
tem Documentation: Applying Symbols and Identiﬁca-
tion. ISA, 2004.
[25] Sigurd Skogestad and Ian Postlethwaite. Multivariable
feedback control: analysis and design. Wiley New York,
2007.
[26] Emerson report. Fisher 4320 Wireless Position Mon-
itor. https://www.emerson.com/en-us/catalog/
fisher-4320, 2009.
[27] SIEMENS
report.
SIEMENS
(6DR5...)
Electropneumatic
PS2
http://www.lesman.com/unleashd/catalog/
accessor/Siemens_SIPART-PS2/Siemens-SIPART
-PS2-man-A5E03436620-AB-2017-01.pdf, 2017.
SIPART
positioners.
[28] David I Urbina, Jairo A Giraldo, Alvaro A Cardenas,
Nils Ole Tippenhauer, Junia Valente, Mustafa Faisal,
Justin Ruths, Richard Candell, and Henrik Sandberg.
Limiting the impact of stealthy attacks on industrial con-
trol systems. In Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security,
pages 1092–1105, 2016.
[29] J.J. Downs and E.F. Vogel. A plant-wide industrial
process control problem. Computers & Chemical Engi-
neering, 17(3):245–255, 1993.
[30] Gregory F Cooper and Edward Herskovits. A Bayesian
method for the induction of probabilistic networks from
data. Machine learning, 9(4):309–347, 1992.
[31] Remco Ronaldus Bouckaert. Bayesian belief networks:
from construction to inference. PhD thesis, 1995.
[32] Wai Lam and Fahiem Bacchus. Learning Bayesian be-
lief networks: An approach based on the MDL principle.
Computational intelligence, 10(3):269–293, 1994.
[34] Yao Liu, Peng Ning, and Michael K. Reiter. False Data
Injection Attacks against State Estimation in Electric
Power Grids. In Proceedings of the 16th ACM Confer-
ence on Computer and Communications Security, page
21–32, 2009.
[35] Saurabh Amin, Xavier Litrico, Shankar Sastry, and
Alexandre M Bayen. Cyber security of water SCADA
systems—Part I: Analysis and experimentation of
stealthy deception attacks. IEEE Transactions on Con-
trol Systems Technology, 21(5):1963–1970, 2012.
[36] Pritam Dash, Mehdi Karimibiuki, and Karthik Pattabi-
raman. Out of control: stealthy attacks against robotic
vehicles protected by control-based techniques. In Pro-
ceedings of the 35th Annual Computer Security Appli-
cations Conference, pages 660–672, 2019.
[37] Yong Wang, Zhaoyan Xu, Jialong Zhang, Lei Xu,
Haopei Wang, and Guofei Gu. Srid: State relation based
intrusion detection for false data injection attacks in
scada. In European Symposium on Research in Com-
puter Security, pages 401–418, 2014.
[38] Wissam Aoudi, Mikel Iturbe, and Magnus Almgren.
Truth Will Out: Departure-Based Process-Level Detec-
tion of Stealthy Attacks on Control Systems. In Proceed-
ings of the 2018 ACM SIGSAC Conference on Computer
and Communications Security, pages 817–831, 2018.
[39] Raul Quinonez, Jairo Giraldo, Luis Salazar, Erick Bau-
man, Alvaro Cardenas, and Lin Zhiqiang. SAVIOR:
Securing Autonomous Vehicles with Robust Physical In-
variants. In 29th USENIX Security Symposium (USENIX