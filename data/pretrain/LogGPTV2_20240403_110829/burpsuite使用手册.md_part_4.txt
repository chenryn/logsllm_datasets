### 第五章 如何使用Burp Target

#### 概述
Burp Target 组件由站点地图（Site Map）、目标域（Target Scope）和Target工具三部分组成。这些组件帮助渗透测试人员更好地了解目标应用的整体状况、当前工作涉及的目标域以及分析可能存在的攻击面。本章将详细介绍这三个组成部分的使用方法。

#### 本章主要内容
1. 目标域设置 (Target Scope)
2. 站点地图 (Site Map)
3. Target 工具的使用

### 目标域设置 (Target Scope)

**作用域定义**
Target Scope 的作用域定义较为宽泛，通常通过域名或主机名来限制拦截内容。例如，在进行渗透测试时，可以通过域名或主机名来限制拦截范围。如果需要更细粒度的控制，如仅拦截某个目录下的所有请求，也可以在Target Scope中设置。

**应用场景**
- 限制站点地图和Proxy历史中的显示结果
- 告诉Burp Proxy拦截哪些请求
- 控制Burp Spider抓取的内容
- 指定Burp Scanner自动扫描的安全漏洞范围
- 在Burp Intruder和Burp Repeater中指定URL

**规则设置**
Target Scope的设置包括允许规则和去除规则：
- **允许规则**：包含在此规则列表中的请求视为有效。如果用于拦截，则匹配该规则的请求将被拦截。
- **去除规则**：匹配此规则的请求不会被拦截。

规则主要由协议、域名/IP地址、端口和文件名四部分组成，可以灵活地控制哪些消息出现在允许或去除规则列表中。

### 站点地图 (Site Map)

**功能概述**
站点地图记录了通过浏览器代理浏览应用时的所有请求和应答详细信息。它以树形结构展示整个应用系统的结构和关联URL。

**界面介绍**
- **左侧**：显示访问的URL，按照网站层级和深度展示。
- **右侧**：显示某个URL的明细列表，包括请求和应答内容。

通过站点地图，可以方便地选择某个分支进行扫描和抓取，并且可以将某个域直接加入Target Scope中。

### Target 工具的使用

**主要功能**
- 手工获取站点地图
- 站点比较
- 攻击面分析

**手工获取站点地图**
1. 设置浏览器代理和Burp Proxy代理，并确保其正常工作。
2. 关闭Burp Proxy的拦截功能。
3. 手动浏览网页，Target会自动记录站点地图信息。

**站点比较**
站点比较是动态分析站点的有效工具，主要用于比较不同账号权限下的请求结果差异。主要有以下场景：
1. 同一个账号，具有不同的权限，比较两次请求结果的差异。
2. 两个不同的账号，具有不同的权限，比较两次请求结果的差异。
3. 两个不同的账号，具有相同的权限，比较两次请求结果的差异。

**操作步骤**
1. 右击需要比较的功能链接，选择站点比较菜单。
2. 分别指定Site Map 1 和Site Map 2。
3. 配置Site Map 1 和Site Map 2的设置。
4. 设置请求消息匹配条件。
5. 进入应答比较设置界面，选择需要比较的内容。
6. 查看比较结果，筛选过滤器可以帮助快速定位差异。

**攻击面分析**
攻击面分析是Burp Suite的一个交互工具，主要用于分析站点地图中的请求URL。主要包括以下几个视图：
- **概况**：展示动态URL数量、静态URL数量、参数总数等。
- **动态URL**：展示所有动态URL的请求和应答消息。
- **静态URL**：展示所有静态URL的请求和应答消息。
- **参数**：统计参数使用情况，显示每次使用的详细信息。

### 第六章 如何使用Burp Spider

#### 概述
通过前一章的学习，我们了解到存在于Burp Target中的站点信息可以直接传送到Burp Spider中进行爬取。本章将重点学习Burp Spider的使用，主要包含两个方面：
1. Spider控制
2. Spider可选项设置

#### Spider控制
**功能组成**
- **Spider状态**：显示当前进度、传输情况、请求队列等统计信息，并提供运行/暂停按钮和清空队列按钮。
- **Spider作用域**：控制Spider的抓取范围，可以使用Target Scope或用户自定义。

#### Spider可选项设置
**设置项**
- **抓取设置**：控制蜘蛛抓取网页内容的方式。
- **抓取代理设置**：控制是否通过Burp Proxy进行抓取及代理的链接深度。
- **表单提交设置**：控制form表单的处理方式。
- **应用登陆设置**：控制登录过程中的处理方式。
- **蜘蛛引擎设置**：配置蜘蛛引擎的行为。
- **请求消息头设置**：自定义请求消息头。

通过这些设置，可以灵活地控制Burp Spider的行为，从而更有效地进行应用系统的测试。