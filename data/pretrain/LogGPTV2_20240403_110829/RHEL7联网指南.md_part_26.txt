::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Bridging.html#sec-Network_Bridging_Using_the_NetworkManager_Command_Line_Tool_nmcli}6.2. 使用 NetworkManager 命令行工具 nmcli {.title}
:::
::: para
请作为 `root`{.systemitem} 运行以下命令创建名为 [bridge-br0]{.interface}
的桥接：
``` screen
~]# nmcli con add type bridge ifname br0
Connection 'bridge-br0' (6ad5bba6-98a0-4f20-839d-c997ba7668ad) successfully added.
```
如果未指定任何接口名称，则默认使用
[bridge]{.interface}、[bridge-1]{.interface}、[bridge-2]{.interface}，以此类推。
:::
::: para
运行以下命令查看连接：
``` screen
~]$ nmcli con show
NAME        UUID                                  TYPE            DEVICE
bridge-br0  79cf6a3e-0310-4a78-b759-bda1cc3eef8d  bridge          br0
eth0        4d5c449a-a6c5-451c-8206-3c9a4ec88bca  802-3-ethernet  eth0
```
:::
::: para
默认启用*跨树协议*（``{=html}STP``{=html}）。使用
IEEE 802.1D-1998 标准中的数值。要为这个桥接禁用
`STP`{.systemitem}，请作为 `root`{.systemitem} 运行以下命令：
``` screen
~]# nmcli con modify bridge-br0 bridge.stp no
```
要为这个桥接重新启用 `802.1D STP`{.systemitem}，请作为
`root`{.systemitem} 用户运行以下命令：
``` screen
~]# nmcli con modify bridge-br0 bridge.stp yes
```
:::
::: para
`802.1D STP`{.systemitem} 的默认桥接优先级为
`32768`{.literal}。数字越小越倾向于作为 root
桥接使用。例如：使用优先级为 `28672`{.literal} 的桥接要先于优先级为
`32768`{.literal} 的桥接（默认）作为 root
桥接使用。要创建使用非默认值的桥接，请运行以下命令：
``` screen
~]$ nmcli con add type bridge ifname br5 stp yes priority 28672
Connection 'bridge-br5' (86b83ad3-b466-4795-aeb6-4a66eb1856c7) successfully added.
```
允许值范围为 `0`{.literal} 到 `65535`{.literal}。
:::
::: para
要将现有桥接的桥接优先级改为非默认值，请运行以下格式的命令：
``` screen
~]$ nmcli connection modify bridge-br5 bridge.priority 36864
```
允许值范围为 `0`{.literal} 到 `65535`{.literal}。
:::
::: para
运行以下命令查看桥接设置：
``` screen
~]$ nmcli -f bridge con show bridge-br0
```
:::
::: para
`802.1D STP`{.systemitem} 的更多选项请查看 `nmcli(1)`{.filename}。
:::
::: para
运行以下命令在桥接 [bridge-br0]{.interface} 中添加或支配接口，例如
[eth1]{.interface}：
``` screen
~]$ nmcli con add type bridge-slave ifname eth1 master bridge-br0
Connection 'bridge-slave-eth1' (70ffae80-7428-4d9c-8cbd-2e35de72476e) successfully added.
```
写入时，[**nmcli**]{.application} 只支持以太网从属接口。
:::
::: para
运行以下命令，使用互动模式更改数值：
``` screen
~]$ nmcli connection edit bridge-br0
```
此时会为您显示 [**nmcli**]{.application} 提示符。
``` screen
nmcli> set bridge.priority 4096
nmcli> save
Connection 'bridge-br0' (79cf6a3e-0310-4a78-b759-bda1cc3eef8d) successfully saved.
nmcli> quit
```
:::
::: para
有关 [**nmcli**]{.application} 的介绍请查看 [第 2.3 节 "使用
NetworkManager 命令行工具
nmcli"](#ch-Configure_IP_Networking.html#sec-Using_the_NetworkManager_Command_Line_Tool_nmcli){.xref}。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Bridging.html#sec-Network_Bridging_Using_the_Command_Line_Interface}6.3. 使用命令行界面（CLI） {.title}
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bridging.html#sec-Check_if_Bridging_Kernel_Module_is_Installed}6.3.1. 检查是否安装 Bridging 内核模块 {.title}
:::
::: para
在 Red Hat Enterprise Linux 7 中会默认载入 bridging
模块。如有必要，可作为 `root`{.systemitem}
运行以下命令确定已载入该模块：
``` screen
~]# modprobe --first-time bridge
modprobe: ERROR: could not insert 'bridge': Module already in kernel
```
运行以下命令显示有关该模块的信息：
``` screen
~]$ modinfo bridge
```
更多命令选项请查看 `modprobe(8)`{.filename} man page。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bridging.html#sec-Create_a_Network_Bridge}6.3.2. 创建网络桥接 {.title}
:::
::: para
要创建网络桥接，请在 `/etc/sysconfig/network-scripts/`{.filename}
目录中创建名为 `ifcfg-brN`{.filename} 的文件，使用该接口号替换 *N*，比如
`0`{.filename}。
:::
::: para
该文件的内容和与之建立桥接的接口类型相似，比如以太网接口。本示例的不同之处在于：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    为 `DEVICE`{.option} 指令分配一个接口名称作为参数，格式为
    `brN`{.option}，其中使用接口号替换 *N*。
    :::
-   ::: para
    为 `TYPE`{.option} 指令分配参数
    `Bridge`{.option}。这个指令决定设备类型及参数，区分大小写。
    :::
-   ::: para
    为桥接接口配置文件分配 `IP`{.systemitem}
    地址，其物理接口配置文件必须只含有 MAC 地址（如下）。
    :::
-   ::: para
    在桥接中添加额外指令
    `DELAY=0`{.option}，防止桥接在监控流量、了解主机位置及构建用来决定主机过滤的
    MAC 地址表时等待。如果不可能有任何路由循环，则不需要默认的 15
    秒延迟。
    :::
:::
:::
::: example
[⁠]{#ch-Configure_Network_Bridging.html#ex-Example_ifcfg-br0_Interface_Configuration_File}
**例 6.1. ifcfg-br0 接口配置文件示例**
::: example-contents
::: para
以下桥接接口配置文件示例使用静态 `IP`{.systemitem} 地址：
:::
``` programlisting
DEVICE=br0
TYPE=Bridge
IPADDR=192.168.1.1
PREFIX=24
BOOTPROTO=none
ONBOOT=yes
DELAY=0
```
:::
:::
::: para
要完成桥接，需创建另一个接口，或修改现有接口，并将其指向桥接接口。
:::
::: example
[⁠]{#ch-Configure_Network_Bridging.html#ex-Example_ifcfg-eth0_Interface_Configuration_File}
**例 6.2. ifcfg-ethX 接口配置文件示例**
::: example-contents
::: para
以下是指向桥接接口的以太网接口配置文件示例。在
`/etc/sysconfig/network-scripts/ifcfg-ethX`{.filename}
中配置您的物理接口，其中 *X* 是与具体接口对应的独有数字，如下：
:::
``` programlisting
DEVICE=ethX
TYPE=Ethernet
HWADDR=AA:BB:CC:DD:EE:FF
BOOTPROTO=none
ONBOOT=yes
BRIDGE=br0
```
:::
:::
::: para
使用 NAME 指令自选指定名称。如果未指定名称，则
[**NetworkManager**]{.application} 插件 `ifcfg-rh`{.filename}
会为该连接配置文件生成格式为["[类型接口]{.quote}"]{.quote}的名称。在这个示例中意味着桥接名为
`Bridge br0`{.literal}。另外，如果在 `ifcfg-br0`{.filename} 文件中添加
`NAME=bridge-br0`{.command}，则该连接的配置文件名称应为
`bridge-br0`{.literal}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在 `DEVICE`{.option}
指令中，可使用大多数接口名称，因为它不决定设备类型。不一定需要
`TYPE=Ethernet`{.option}。如果未设置
`TYPE`{.option}，则需将该设备视为以太网设备（除非其名称与不同的接口配置文件完全匹配）。
:::
::: para
指令区分大小写。
:::
:::
:::
::: para
使用 `HWADDR`{.command} 指令指定硬件或 MAC 地址会影响设备命名过程，如
[第 8 章
*一致网络设备命名*](#ch-Consistent_Network_Device_Naming.html){.xref}
所述。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
如果在远程主机中配置桥接，同时通过要配置的物理网卡连接到那个主机，请在执行前考虑可能丢失连接的情况。重启该服务可能会丢失连接，同时如果出现任何错误，可能会很难重获连接。建议使用控制台或带外访问。
:::
:::
:::
::: para
要启动新或最新配置的接口，请作为
`root`{.systemitem}，采用以下格式运行以下命令：
``` synopsis
ifup device
```
这个命令将探测 [**NetworkManager**]{.application} 是否正在运行，并调用
`nmcli con load UUID`{.command}，然后调用
`nmcli con up UUID`{.command}。
:::
::: para
另外，可作为 `root`{.systemitem} 运行以下命令重启所有接口：
``` screen
~]# systemctl restart network
```
这个命令将停止网络服务，启动该网络服务，然后为所有使用
`ONBOOT=yes`{.command} 的 ifcfg 调用 `ifup`{.command}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
[**NetworkManager**]{.application} 默认不会意识到 ifcfg
文件更改，并在该接口下次启动前继续使用旧的配置数据。这是由
`NetworkManager.conf`{.filename} 文件中的
`monitor-connection-files`{.option} 选项设定。详情请查看
`NetworkManager.conf(5)`{.filename} manual page。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bridging.html#sec-Network_Bridge_with_Bond}6.3.3. 附带绑定的网络桥接 {.title}
:::
::: para
在此给出由两个或更多绑定的以太网接口组成的网络桥接示例，因为这是虚拟化环境中的常见应用程序。如果不熟悉绑定接口的配置文件，请参考
[第 4.4.2 节
"创建频道绑定接口"](#ch-Configure_Network_Bonding.html#sec-Create_a_Channel_Bonding_Interface){.xref}。
:::
::: para
创建或编辑两个或更多绑定的以太网接口配置文件，如下：
``` programlisting
DEVICE=ethX
TYPE=Ethernet
SLAVE=yes
MASTER=bond0
BOOTPROTO=none
HWADDR=AA:BB:CC:DD:EE:FF
```
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
最常用的接口名称为 `ethX`{.systemitem}，但通常可以使用任何名称。
:::
:::
:::
::: para
创建或编辑接口配置文件
`/etc/sysconfig/network-scripts/ifcfg-bond0`{.filename}，如下：