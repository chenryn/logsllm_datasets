### Bypassing Firewalls, Application Whitelists, and Secure Remote Desktops in 20 Seconds

**Speaker: Zoltan Balazs**
**Event: DEF CON 22, 2014**
**Location: Hungary**

#### Introduction
```bash
root@bt:~# whoami
Zoltán Balázs
```

**Certifications (Humorous)**
- OSCP: Occasional Satire Captain Punk
- CISSP: Certified Interspecie-ial Sheep Shearing Professional
- CPTS: Certified Pajama Toaster Specialist
- MCP: Microsoft Certified Psychopath
- OSWP: Official Sexiest Weasel Popstar
- CHFI: Chronic Hopeless Flux Incompetent

**Note:** I am not a CEH (Certified Ethical Hacker).

**Achievements:**
- CyberLympics 2012 CTF: 2nd Runners Up – gula.sh
- Creator of the Zombie Browser Toolkit
  - [GitHub Repository](https://github.com/Z6543/ZombieBrowserPack)

**Passion:**
- I love hacking.

### The Mission
**Scenario:**
- **Role:** A spy.
- **Objective:** Gain persistent Command and Control (C&C) access to a hardened secure RDP (Remote Desktop) server containing confidential documents.
- **Requirements:**
  - Upload/Download files.
  - Interactive remote code execution.

### The Ideal Solution
1. Infect the client's desktop.
2. Steal the RDP password.
3. Connect to the RDP.
4. Drop malware.
5. Establish Command and Control.
6. Profit.

### Challenges
- **RDP Server Accessibility:**
  - Not reachable from the Internet.
  - Two-factor authentication is used.
  - No access to token seeds.
  - Drive mapping disabled (no direct file copy).
  - Restricted hardware firewall (allows only TCP port 3389 IPv4).
  - Application whitelist (e.g., M$ Applocker with default policy).

**Realistic Environment:**
- Similar setup at a client.
- Limited time to hack it.

### Network Diagram
```
+-------------------+        +-------------------------+
| Infected Workstation | ----> | Secure RDP Server       |
|                     |        |                         |
| Target Company     |        |                         |
+-------------------+        +-------------------------+
          |                             |
          |                             |
          |                             |
+-------------------+        +-------------------------+
| The Internet      | <----> | Attacker                |
+-------------------+        +-------------------------+
```

**Quote:**
"In hacking, there is no such thing as impossible. Only things that are more challenging."

### Achieved So Far
- Remote code execution with C&C on a user's workstation.
- Access to a test RDP server, knowing the files and installed services.

### Why This Matters
- **Red Team/Pentester:**
  - New tools for post-exploitation.
- **Blue Team:**
  - New things to look for during log analysis and incident response.

### Divide et Impera
Divide the problem into smaller pieces and tackle them one by one:
1. Drop malware into the RDP server.
2. Execute any code on the RDP server.
3. Elevate to admin privileges.
4. Bypass the hardware firewall.

### Step-by-Step Breakdown
1. **Drop Malware into RDP Server:**
   - Malware waits for the user to connect to the RDP server.
   - Creates a screenshot or new animation.
   - Optionally blocks user keyboard and mouse for ~20 seconds.
   - Simulates user actions:
     - Starts M$ Word.
     - Drops an encoded ASCII payload.
     - Creates macro code.
     - Macro writes binary.
     - Macro starts binaries.

   **Alternative Usage:**
   - Add a directory to be excluded from AV scans using the AV GUI (if the user has the necessary privileges and no UAC).
   - Install a new trusted root certification authority and accept warnings to MiTM SSL connections (CA pinning does not stop this attack).

2. **Execute Any Code, Bypass AppLocker:**
   - AppLocker controls VBScript, JScript, .bat, .cmd files, and Windows PowerShell scripts but not all interpreted code (e.g., Perl scripts and macros).
   - Load DLL with Word Macro (even shellcode execution is possible).

   **Code Example:**
   ```vb
   Private Declare PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As Long) As Long
   Private Declare PtrSafe Function LoadLibrary Lib "kernel32" Alias "LoadLibraryA" (ByVal lpLibFileName As String) As Long
   hLibrary = LoadLibrary(outputdir + "\hack_service.dll")
   ```

3. **Elevate to Admin:**
   - Needed for the last phase (hardware firewall bypass).
   - Possibilities:
     - Local privilege escalation zero-day for Win 2012.
     - Exploit unpatched vulnerability.
     - Exploit vulnerable third-party program service.
   - Processes started with admin (or higher) privileges are not restricted by AppLocker.

   **Service Exploit:**
   ```bash
   C:\> accesschk.exe –l mvulnservice.exe
   C:\> sc sdshow myvulnservice
   ```

4. **Bypass Hardware Firewall:**
   - **First Idea:**
     - Mark every packet with magic bytes and let the kernel network filter driver select the packets.
     - Problem: Every application must be rewritten or rerouted through a custom wrapper proxy.
   - **Second Idea:**
     - Use TCP source port (e.g., port 1337) to mark special packets.
     - Limitations: NAT from the attacker side, but it can be managed.

   **Linux:**
   ```bash
   iptables -t nat -A PREROUTING -p tcp --dport 22 --sport 1337 -j REDIRECT --to-ports 31337
   ```

   **Windows x64:**
   - Installing a kernel driver in Windows x64 is challenging.
   - Thanks to Basil for the WinDivert project (Nemea Software Development), which includes a trusted signed kernel driver.
   - Alternatively, PatchGuard bypass can be used.

   **Uroburos Rootkit:**
   - Install a root CA first with a user simulator.

   **Setting TCP Source Port for Meterpreter Bind Shell:**
   - Use Netcat:
     ```bash
     ncat -kl 4444 -c "ncat -p 1337 RDP.SER.VER.IP 3389"
     ```

### Demo
- **Demo 1:**
  - Create a screenshot from the user's desktop.
  - Put the screenshot on the screen.
  - Disable keyboard/mouse.
  - Drop malware by simulating user keyboard events and clipboard for large (ASCII) data transfer.
  - Start WORD, create new macro code.
  - Bypass application whitelist using DLL loading from Word macro code.
  - Escalate privileges to admin (vulnerable service).
  - Install `hwfwbypass.exe` with a kernel driver.
  - Drop meterpreter.
  - Profit!

- **Demo 2:**
  - As seen by the user.

### Lessons Learned
- **Red Team:**
  - Two new tools for post-exploitation:
    - Tool to drop malware into the remote desktop.
    - Driver to bypass/fool hardware firewalls if you have admin on a server.

- **Blue Team:**
  - Additional layers of security can still be bypassed.
  - Restricted remote desktop is a real interface for malware infection.
  - Use application/protocol-aware (NG) firewalls instead of port-based ones.
  - Don't trust your firewall logs.

### References
- [WinDivert Project](http://reqrypt.org/windivert.html)
- [InputSimulator (modified)](http://inputsimulator.codeplex.com/)
- [Black Hat USA 2006 Presentation](http://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Tereshkin.pdf)
- [Circumventing SRP and AppLocker by Design](http://blog.didierstevens.com/2011/01/24/circumventing-srp-and-applocker-by-design/)
- [Application Whitelist Bypass Using IEExec.exe](http://www.room362.com/blog/2014/01/16/application-whitelist-bypass-using-ieexec-dot-exe)
- [Bypass AppLocker by Loading DLLs from Trusted Locations](http://leastprivilege.blogspot.fr/2013/04/bypass-applocker-by-loading-dlls-from.html?m=1)
- [Hikit Rootkit: Advanced Persistent Attack Techniques Part 2](https://www.mandiant.com/blog/hikit-rootkit-advanced-persistent-attack-techniques-part-2/)

### Additional Notes
- User simulator available as a Metasploit post module.
- HW FW bypass available as a Metasploit post module.
- Code released under GPL.
- [GitHub Repository](https://github.com/Z6543/.......)
- Contact: PI:EMAIL
- LinkedIn: [Zoltan Balazs](https://hu.linkedin.com/in/zbalazs)
- Twitter: @zh4ck
- Slideshare: [bz98](www.slideshare.net/bz98)
- Greetz to @hekkcamp
- Blog: [JumpESPJump](JumpESPJump.blogspot.com)

**Final Note: Hack The Planet!!!**