### 2.3 Fiddler 主菜单

Fiddler 的主菜单设计为能够启动几乎所有 Fiddler 功能。该菜单系统可以通过 FiddlerScript 或扩展进行增强。本节将探讨 Fiddler 默认的菜单命令。

#### 2.3.1 文件菜单

文件菜单中的命令主要用于通过 Fiddler 启动和停止 Web 流量捕获，以及加载或存储捕获的流量。

- **Capture Traffic**：此开关控制是否将 Fiddler 注册为系统代理。当 Fiddler 被注册为系统代理时，所有依赖于 WinINET 代理的应用（如 IE 浏览器和其他浏览器）会将 Web 请求发送给 Fiddler。Firefox 的 FiddlerHook 插件也可以识别该菜单选项。即使 Fiddler 没有被注册为系统代理，它仍然可以显示和处理接收到的任何请求。
- **Load Archive**：用于重新加载之前以 SAZ 文件格式保存的捕获流量。
- **Save 子菜单**：支持以多种方式将流量保存到文件中。这些选项与 WebSession 列表中的上下文菜单选项相同。
- **Import Sessions...**：支持导入从其他工具捕获的流量，也支持导入以其他格式存储的流量。
- **Export Sessions**：支持将 Fiddler 捕捉到的 Session 以多种文件格式保存。子菜单中可以选择导出所有 Session 或选中的 Session。
- **Exit**：取消将 Fiddler 注册为系统代理，并关闭工具栏。

#### 2.3.2 编辑菜单

编辑菜单中的大多数命令都需要作用于 WebSession 中当前选中的 Session。因此，除非选中一个或多个 Session，否则大多数命令都不可用。

- **Copy 子菜单**：
  - **Terse Summary**：复制选中 Session 的简要说明，包括请求方法、URL、响应状态码及状态信息。如果响应是 HTTP/3xx 重定向，文本中也会包括响应头中的 `Location` 字段内容。当光标位于 WebSession 列表时，按下 `CTRL+SHIFT+T` 键执行该命令。
  - **Headers Only**：将 Session 的请求头复制到剪贴板。可以以纯文本或 HTML 格式复制。双击子菜单中的 Copy 命令会复制请求头。当光标定位在 WebSession 列表中，按下 `CTRL+SHIFT+C` 键也会执行该命令。
  - **Session**：将整个 Session 列表复制到剪贴板，支持纯文本和 HTML 格式。当粘贴到仅支持纯文本的编辑器和支持富文本的编辑器中时，显示结果会有所不同。当光标定位在 WebSession 列表时，按下 `CTRL+SHIFT+S` 键执行该命令。
  - **Full Summary**：将 WebSession 列表中显示的信息复制到剪贴板，各列通过 Tab 分隔，便于粘贴到 Excel 或其他编辑器中。当光标定位在 WebSession 列表时，按下 `CTRL+C` 键执行该命令。

- **Remove 子菜单**：用于从 WebSession 列表中删除全部、选中的或未选中的 Session。当光标定位在 WebSession 列表时，按下 `CTRL+X`、`Delete` 或 `Shift+Delete` 键分别激活这几个命令。
- **Comment...**：支持为一个或多个选中的 WebSession 添加或修改注释。
- **Mark 子菜单**：选择一种颜色来标记 WebSession 列表中的 Session。Session 的字体根据选项相应加粗和着色。Unmark 选项会取消对选中的 Session 进行加粗，并恢复默认颜色。
- **Replay 子菜单**：提供命令支持播放当前选中的请求，如表 2-6 所示。

#### 2.3.3 规则菜单

规则菜单很容易扩展，其中的大多数命令是通过 FiddlerScript 文件生成的。

- **Hide Image Requests**：控制是否在 WebSession 列表中显示图像类 Session。
- **Hide CONNECTs**：控制是否在 WebSession 列表中显示使用 CONNECT 请求方法的 Session。客户端通过 CONNECT 方法构建到服务器的“原始”连接，发送 HTTPS 或 WebSocket 流量请求。
- **Automatic Breakpoints 子菜单**：控制 Fiddler 是否自动在 BeforeRequests 或 AfterResponses 处断点。Ignore Image 触发器控制这些断点是否作用于图片请求。
- **Customize Rules...**：使用配置的脚本编辑器打开当前的 FiddlerScript 文件。
- **Require Proxy Authentication**：所有未提交 Proxy-Authorization 请求头的请求会返回 HTTP/407 响应，要求客户端安装证书。该规则可用于测试 HTTP 客户端，确保这些规则在有证书的客户端服务器上正常工作。
- **Apply GZIP Encoding**：只要请求包含具有 gzip 标识的 Accept-Encoding 请求头，就会对除了图片以外的所有响应使用 GZIP HTTP 进行压缩。该规则用于测试使用 GZIP 选项支持的客户端是否真正对内容进行压缩。该选项还支持性能调优，并计算传输的压缩后的数据流的字节数。
- **Remove All Encodings**：删除所有请求和响应的 HTTP 内容编码和传输编码。该功能也可以通过 Fiddler 工具栏中的 Decode 按钮来调用。
- **Hide 304s**：隐藏包含 HTTP/304 Not Modified 状态的响应的所有 Session。
- **Request Japanese Content**：将所有请求的 Accept-Encoding 请求头设置或替换成 ja 标识，表示客户端希望响应以日语形式发送。
- **User-Agents 子菜单**：支持将所有请求的 User-Agent 请求头设置或替换成指定值。可以在提供的值中进行选择，也可以使用菜单底部的 Custom... 选项指定想要的选项值。
- **Performance 子菜单**：提供影响 Web 性能的简单选项。
  - **Simulate Modem Speeds**：设置所有后续 Session 的 Flag，将 request-trickle-delay 标志位设置成 300，所有上传数据将延迟 300 毫秒/KB。同理，将 response-trickle-delay 标志位设置成 150，会使所有下载数据延迟 150 毫秒/KB。
  - **Disable Caching**：删除所有 If-None-Match 和 If-Modified-Since 请求头，并添加 Pragma: no-cache 请求头。选中该选项还会删除响应中的所有 Expires 头，并将 Cache-Control 响应头设置成 no-cache。该选项无法阻止浏览器重用在选用该选项之前所缓存的响应。为了获得最佳结果，最好清空浏览器中的缓存（`CTRL+SHIFT+DELETE`）。
  - **Show Time-to-Last-Byte**：在 WebSession 列表的 Custom 列中显示 Fiddler 接收所有响应所花费的时间，以微秒表示。
  - **Show Response Timestamp**：在 WebSession 列表的 Custom 列中显示 Fiddler 接收服务器所有响应的时间戳。
  - **Cache Always Fresh**：自动响应所有包含 HTTP/304 响应的有条件 HTTP 请求，表示客户端缓存是最新的。当访问的站点无法正确设置缓存失效日期时，该选项可以显著提高性能。尽管有该选项，但在浏览器中按下 `CTRL+F5` 键仍可以保证重新从服务器加载数据，因为浏览器会对要求强制更新的请求忽略 If-Modified-Since 和 If-None-Match 头。

#### 2.3.4 工具菜单

- **WinINET Options...**：打开 IE 的 Internet Options 窗口。
- **Clear WinINET Cache**：清空 IE 和许多其他应用中使用的 WinINET 缓存中的所有文件。
- **Clear WinINET Cookies**：清空 IE 和许多其他应用发送的 WinINET cookies。Session 的 Cookies 保持不变。