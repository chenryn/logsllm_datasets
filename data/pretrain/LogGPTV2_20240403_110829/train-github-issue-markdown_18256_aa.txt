I have a Rails project hosted on a local "server" in my office. The "server"
happens to be a laptop, so if/when it goes to sleep, the file share disappears
from my development machine. When I remount the share, the tree-view sidebar
in Atom shows only the top project folder, but not the sub files/folders. When
I click the disclosure button to collapse the tree, and then click it again to
expand, the file structure reappears for a split second, then the main Atom
window turns blank white and I get this error panel:
![screen shot 2015-06-27 at 10 21 23
pm](https://cloud.githubusercontent.com/assets/747085/8395008/0cab4b74-1d1b-11e5-8c1b-6171f8faed0a.png)
Clicking on `Reload`, or `Keep It Open` usually results in the editor being
unstable, or crashing completely.
The following log is generated in `~/Library/Logs/DiagnosticReports/Atom
Helper...`
    Process:               Atom Helper [48309]
    Path:                  /Applications/Atom.app/Contents/Frameworks/Atom Helper.app/Contents/MacOS/Atom Helper
    Identifier:            com.github.atom.helper
    Version:               1.0.0 (1.0.0)
    Code Type:             X86-64 (Native)
    Parent Process:        Atom [47533]
    Responsible:           Atom [47533]
    User ID:               501
    Date/Time:             2015-06-27 22:20:44.207 -0500
    OS Version:            Mac OS X 10.10.3 (14D136)
    Report Version:        11
    Anonymous UUID:        DFB824F2-E26D-0DB0-1AF9-AF40A4FB7491
    Sleep/Wake UUID:       F38D8DE6-103F-48E6-8BC4-101FD490D457
    Time Awake Since Boot: 670000 seconds
    Time Since Wake:       460000 seconds
    Crashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread
    Exception Type:        EXC_BAD_ACCESS (SIGBUS)
    Exception Codes:       0x000000000000000a, 0x00000001117f1340
    VM Regions Near 0x1117f1340:
        mapped file            00000001117ef000-00000001117f1000 [    8K] r--/r-x SM=ALI  Object_id=c8eebe09
    --> mapped file            00000001117f1000-00000001117f8000 [   28K] r--/r-x SM=ALI  Object_id=c96f5949
        mapped file            00000001117f8000-0000000111820000 [  160K] r--/r-x SM=ALI  Object_id=a9855a39
    Thread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread
    0   git.node                        0x0000000111359957 pack_entry_find_offset + 126
    1   git.node                        0x000000011135a426 git_pack_entry_find + 135
    2   git.node                        0x0000000111354bcf pack_entry_find + 54
    3   git.node                        0x0000000111354e30 pack_backend__read_internal + 54
    4   git.node                        0x0000000111354570 pack_backend__read + 34
    5   git.node                        0x0000000111351d52 git_odb_read + 169
    6   git.node                        0x0000000111350393 git_object_lookup_prefix + 326
    7   git.node                        0x000000011131b757 Repository::GetBlob(v8::FunctionCallbackInfo const&, git_repository*, git_blob*&) + 419
    8   git.node                        0x000000011131a492 Repository::GetLineDiffs(v8::FunctionCallbackInfo const&) + 142
    9   ???                             0x0000048f4bbb4c02 0 + 5013497400322
    10  ???                             0x0000048f4c0ca426 0 + 5013502731302
    11  ???                             0x0000048f4ca4e1ec 0 + 5013512708588
    12  ???                             0x0000048f4b23a806 0 + 5013487462406
    13  ???                             0x0000048f4b66acd9 0 + 5013491854553
    14  ???                             0x0000048f4c7f927a 0 + 5013510263418
    15  ???                             0x0000048f4b2377c0 0 + 5013487450048
    16  ???                             0x0000048f4b232271 0 + 5013487428209
    17  libchromiumcontent.dylib        0x0000000104f85c51 v8::Testing::DeoptimizeAll() + 1177505
    18  libchromiumcontent.dylib        0x0000000104e5e701 v8::Function::Call(v8::Handle, int, v8::Handle*) + 193
    19  com.github.AtomFramework        0x0000000103080019 node::MakeCallback(node::Environment*, v8::Handle, v8::Handle, int, v8::Handle*) + 639
    20  com.github.AtomFramework        0x0000000103086d79 node::CheckImmediate(uv_check_s*) + 98
    21  com.github.AtomFramework        0x00000001031bb719 uv__run_check + 33
    22  com.github.AtomFramework        0x00000001031b7895 uv_run + 293
    23  com.github.AtomFramework        0x000000010304c7a7 atom::NodeBindings::UvRunOnce() + 87
    24  libchromiumcontent.dylib        0x00000001038aa7f8 base::debug::TaskAnnotator::RunTask(char const*, char const*, base::PendingTask const&) + 248
    25  libchromiumcontent.dylib        0x00000001038e80f8 base::MessageLoop::RunTask(base::PendingTask const&) + 552
    26  libchromiumcontent.dylib        0x00000001038e866c base::MessageLoop::DoWork() + 668
    27  libchromiumcontent.dylib        0x0000000103894501 base::MessagePumpLibevent::OnWakeup(int, short, void*) + 2881
    28  com.apple.CoreFoundation        0x00007fff915a6a01 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
    29  com.apple.CoreFoundation        0x00007fff91598b8d __CFRunLoopDoSources0 + 269
    30  com.apple.CoreFoundation        0x00007fff915981bf __CFRunLoopRun + 927
    31  com.apple.CoreFoundation        0x00007fff91597bd8 CFRunLoopRunSpecific + 296
    32  com.apple.Foundation            0x00007fff9053ea59 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 278
    33  libchromiumcontent.dylib        0x0000000103894a14 base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 100
    34  libchromiumcontent.dylib        0x000000010389436c base::MessagePumpLibevent::OnWakeup(int, short, void*) + 2476
    35  libchromiumcontent.dylib        0x00000001038fe103 base::RunLoop::Run() + 99
    36  libchromiumcontent.dylib        0x00000001038e78dd base::MessageLoop::Run() + 29
    37  libchromiumcontent.dylib        0x0000000106277937 content::RendererBlinkPlatformImpl::MockBatteryStatusChangedForTesting(blink::WebBatteryStatus const&) + 6183
    38  libchromiumcontent.dylib        0x0000000103889779 content::ContentMainRunner::Create() + 1849
    39  libchromiumcontent.dylib        0x0000000103888d56 content::ContentMain(content::ContentMainParams const&) + 54
    40  com.github.AtomFramework        0x0000000102ffe792 AtomMain + 82