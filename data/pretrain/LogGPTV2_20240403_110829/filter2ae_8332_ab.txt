下载链接：
    GitHub项目地址：https://github.com/dafthack/DomainPasswordSpray
在这里作者进行了脚本修改
    优化后的地址：http://payloads.online/scripts/Invoke-DomainPasswordSpray.txt
### 0x02 参数说明
描述：该模块主要用于从域中收集用户列表
参数 | 功能  
---|---  
Domain | 指定要测试的域名  
RemoveDisabled | 尝试从用户列表删除禁用的账户  
RemovePotentialLockouts | 删除锁定账户  
UserList | 自定义用户列表(字典)。如果未指定，将从域中获取  
Password | 指定单个密码进行口令测试  
PasswordList | 指定一个密码字典  
OutFile | 将结果保存到某个文件  
Force | 当枚举出第一个后继续枚举，不询问  
### 0x03 使用说明
从域中收集用户列表
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\HTWO\Desktop\DomainPasswordSpray.ps1;Get-DomainUserList}"
从域中收集用户列表,包括任何未禁用且未接近锁定状态的账户。它会将结果写入"userlist.txt"文件中
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\HTWO\Desktop\DomainPasswordSpray.ps1; Get-DomainUserList -Domain hacke.testlab -RemoveDisabled -RemovePotentialLockouts | Out-File -Encoding ascii userlist.txt }"
从域环境中获取用户名，然后使用密码QWE123!@#进行认证枚举
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\HTWO\Desktop\DomainPasswordSpray.ps1;Invoke-DomainPasswordSpray -Password QWE123!@#}"
从user.txt中提取用户名，与passlist.txt中的密码对照成一对口令，进行域认证枚举，登录成功后会输出到sprayed-creds.txt
    powershell.exe -exec bypass -Command "& {Import-Module C:\Users\HTWO\Desktop\DomainPasswordSpray.ps1;Invoke-DomainPasswordSpray -Domain hacke.testlab -Password QWE123!@# -OutFile sprayed-creds.txt}"
参考链接：
    https://www.cnblogs.com/mrhonest/p/13372203.html
    https://www.chabug.org/tools/411.html
    https://www.freebuf.com/news/173366.html
    https://mp.weixin.qq.com/s/vYeR9FDRUfN2ZczmF68vZQ
## KB22871997补丁与PTH攻击
在这里大部分引用此文章
> 
### 0x00 前言
看了多篇文章，在文章说了有些人认为PTH无法使用sid
500以外的用户登录，是因为打了KB22871997补丁所导致的。但是经过其他师傅的研究，发现并不是。
### 0x01 KB2871997安装前后测试
首先看一下未安装补丁的情况，其中本地管理员组有三个帐户，主机名为TESTWIN7，所在域为TEST.LOCAL：
    administrator是RID为500的本地管理员账号
    testpth是RID非500的本地账号
    TEST\xxm为加入了本地Administrators组的域帐户
首先使用本地账户administrator:  
使用本地管理组账户testpth:  
使用域用户xxm:  
这里可以看到：  
本地账户administrator成功，本地管理员账户testpth失败，域用户xxm成功。
再来看一下安装补丁之后：  
使用本地账户administrator:  
使用本地账户testpth:  
使用域账户xxm:  
在这里可以看到安装KB2871997前后的对比发现并没有任何区别。而之前非administrator的本地管理员Pass The
Hash失败被一些观点认为KB2871997的作用，但这实际上因为远程访问和UAC的限制！
### 0x02 远程访问和UAC
UAC是window Vista的新安全组件，2003版本是没有的。所以2003管理组内的用户还是可以网络登录的，而03之后的win7 win8 win10
2008 2012 2012R2 2016 2019 本地都是只能sid为500的允许网络远程访问！
windows历史
    * Windows NT 3.1、3.5、3.51
    * Windows NT 4.0
    * Windows 2000（Windows NT 5.0）
    * Windows XP（Windows NT 5.1）
    * Windows Server 2003（Windows NT 5.2）
    * Windows Vista（Windows NT 6.0）
    * Windows Server 2008（Windows NT 6.0）
    * Windows 7（Windows NT 6.1）
    * Windows Server 2008 R2（Windows NT 6.1）
    * Windows Home Server
    * Windows 8（Windows NT 6.2）
    * Windows Server 2012（Windows NT 6.2）
    * Windows 8.1（Windows NT 6.3）
    * Windows Server 2012 R2（Windows NT 6.3）
    * Windows 10（开发初期：Windows NT 6.4，现NT 10.0）
    * Windows Server 2016 (Windows NT 10)
    * Windows Server 2019 (Windows NT 10)
可以在途中看到Windows中administrator的RID为500，并且是唯一的。同样为管理员组的本地账户的testpth的RID的值为1000.  
而域账号xxm使用的是域内的SID号  
根据微软官方关于远程访问和用户账户控制的相关文档可以了解到，UAC为了更好的保护Administrators组的账户，会在网络上进行限制。
    https://support.microsoft.com/en-us/help/951016/description-of-user-account-control-and-remote-restrictions-in-windows
在使用本地用户进行远程登录时不会使用完全管理员权限，但是在域用户被加入到本地管理组员组后，域用户可以使用完全管理员的AccessToken运行。并且UAC不会生效，简而言之就是除了sid
500的用户之外可以PTH登录之外就是加入本地管理员组的域用户！
(1)完全禁止PTH登录
在注册表中的 FilterAdministratorToken设置为1，路径为：
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
修改之后策略会立即生效，administrator的远程连接也被拒绝了  
(2)禁用UAC让管理组本地成员登录
这一点可以当作后门，当我们拿下机器后可以把guest加入管理员组并禁用UAC！  
官方文档如下:
    https://support.microsoft.com/en-us/help/951016/description-of-user-account-control-and-remote-restrictions-in-windows
可以通过修改注册表中的 LocalAccountTokenFilterPolicy 选项的键值来进行更改。注册表路径为
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
但是这一条一般没有，需要我们去自己设置！将起值修改为1  
这样就可以使用本地组管理员登录网络登录了！也就可以PTH了  
### 0x03 KB2871997
此补丁具体更改点如下
  * 支持“ProtectedUsers”组
  * Restricted Admin RDP模式的远程桌面客户端支持
  * 注销后删除LSASS中的凭据
  * 添加两个新的SID
  * LSASS中删除明文凭证
#### 支持“ProtectedUsers”组
对这个组其实挺陌生的，"ProtectedUsers"组是WindowsServer 2012
R2域中的安全组，"ProtectedUsers"组的成员会被强制使用Kerberos身份验证，并且对Kerberos强制执行AES加密！
想要使用mimikatz抓取这个组的hash，需要使用sekurlsa:ekeys
#### Restricted Admin RDP模式的远程桌面客户端支持
这个模式在打了补丁后才有，是一种变种的PTH能够通过Hash登录3389。在另一篇笔记中做了介绍  
#### 注销后删除LSASS中的凭据
在这个更新之前，08什么的只要登陆过lsass内存中就会缓存明文密码、登陆凭证等。但是在打了补丁或者2012 win8 这种机器上只要用户注销就都没了。
#### 添加两个新的SID
在更新后多了两个新的SID:
    1、本地账户，LOCAL_ACCOUNT(s-1-5-113)，所有本地账户继承此SID
    2、本地管理员组，LOCAL_ACCOUNT_AND_MEMBER_OF_ADMINISTRATORS_GROUP(S-1-5-114)，所有本地管理员组继承此SID
本来2中的114 id不是这样的介绍，但是在其他文章中写的是管理员组账户。但是在他们实验中在管理员组中的域账号不会继承此SID。
当然了之所以有这两个SID，也是为了方便策略。一下子就可以对本地账户进行区分管理！
如这样拒绝通过远程桌面服务登录  
这样设置以后本地管理员组和本地账户都不可以登录了，而域管账户可以登录！
#### LSASS中删除明文凭证
这里涉及到了Wdigest SSP，在此补丁出世之前。lsass中由各种SSP保存明文密码！但是在补丁出现之后，就只有Wdigest
SSP能保存密码了。一开始在这里我还不懂，知道搜索关键字找了以前的笔记！  
可以看到之前我所记录的lsass记录明文，修改的就是Wdigest
SSP的注册表！当然了，在这里还可以插入其他的SSP去记录明文。在这里只是表达Wdigest SSP的作用！
### 0x04 防御PTH
  * 将 FilterAdministratorToken的值设置为1，限制administrator账户也不能登录
  * 可以使用脚本或人工定期查看 LocalAccountTokenFilterPolicy 是否有被攻击者修改过
  * 在组策略中的"拒绝从网络访问这台计算机"将需要限制的组、用户加入到列表中！
**摘抄链接**
> 
## Pass the Hash with Remote Desktop
### 0x00 前言
在一般的渗透测试中，当我们拿到了某个用户的NTLM
Hash的时候。我们一般就直接去PTH了，但是除了PTH还有另外一种额外的方法能够让我们PTH登录对方机器的3389服务。但是此条件有些苛刻！
### 0x01 简介
本文主要介绍以下内容：
  * Restricted Admin mode介绍
  * Pass the Hash with Remote Desktop的适用条件
  * Pass the Hash with Remote Desktop的实现方法
### 0x02 Restricted Admin mode介绍
官方说明：
    https://blogs.technet.microsoft.com/kfalde/2013/08/14/restricted-admin-mode-for-rdp-in-windows-8-1-2012-r2/
适用系统：
  * 高版本只支持 Windows 8.1和Windows Server 2012 R2
  * 低版本需要打补丁 Windows 7 和Windows Server 2008 R2 默认不支持，需要安装补丁2871997、2973351
在这里形成这个漏洞的主要原因还是因为微软为了避免PTH攻击，开发了2871997补丁导致的！win8 2012
默认包含了这个补丁，所以不需要额外安装。而以前的版本则需要安装下补丁！
相关资料可参考：