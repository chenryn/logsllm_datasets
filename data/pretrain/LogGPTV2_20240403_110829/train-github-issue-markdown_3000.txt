`scipy.linalg.eigvalsh()` give a message
> Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.
and return wrong eigenvalues. When the input matrix is a **real Hermitian**
matrix or a **complex Hermitian with dimension less than 200** 0, this
function always give the right answer as `np.linalg.eigvalsh` does, but if the
matrix is a **complex matrix with dimension larger than 2000** , this function
always give the above message and wrong eigenvalues. The returned eigenvalues
are all zeros but the last one.
### Reproducing code example:
    import scipy.linalg as la
    import numpy as np
    #row = col = 1999
    row = col = 2000
    shape = (row, col)
    # A real matrix
    #M = np.random.random(size=shape)
    # A complex matrix
    M = np.random.random(size=shape) + np.random.random(size=shape) * 1j
    # Construct an Hermitian matrix
    M += M.T.conj()
    vals_numpy = np.linalg.eigvalsh(M)
    vals_scipy = la.eigvalsh(M)
    print(vals_scipy)
    assert np.allclose(vals_numpy, vals_scipy)
### Error message:
    Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.
    [    0.     0.     0. ...     0.     0. 48000.]
    Traceback (most recent call last):
      File ".\test.py", line 20, in 
        assert np.allclose(vals_numpy, vals_scipy)
    AssertionError
### Scipy/Numpy/Python version information:
    scipy.__version__: '1.0.0'
    numpy.__version: '1.14.2'
    sys.version_info: sys.version_info(major=3, minor=6, micro=4, releaselevel='final', serial=0)
    Python 3.6.4 :: Anaconda custom (64-bit)