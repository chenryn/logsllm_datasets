title:Tactical Provenance Analysis for Endpoint Detection and Response Systems
author:Wajih Ul Hassan and
Adam Bates and
Daniel Marino
2020 IEEE Symposium on Security and Privacy
Tactical Provenance Analysis for
Endpoint Detection and Response Systems
Wajih Ul Hassan
University of Illinois at
Urbana-Champaign
PI:EMAIL
Adam Bates
University of Illinois at
Urbana-Champaign
PI:EMAIL
Daniel Marino
NortonLifeLock
Research Group
PI:EMAIL
Abstract—Endpoint Detection and Response (EDR) tools pro-
vide visibility into sophisticated intrusions by matching system
events against known adversarial behaviors. However, current so-
lutions suffer from three challenges: 1) EDR tools generate a high
volume of false alarms, creating backlogs of investigation tasks
for analysts; 2) determining the veracity of these threat alerts re-
quires tedious manual labor due to the overwhelming amount of
low-level system logs, creating a “needle-in-a-haystack” problem;
and 3) due to the tremendous resource burden of log retention, in
practice the system logs describing long-lived attack campaigns
are often deleted before an investigation is ever initiated.
This paper describes an effort to bring the beneﬁts of data
provenance to commercial EDR tools. We introduce the no-
tion of Tactical Provenance Graphs (TPGs) that, rather than
encoding low-level system event dependencies, reason about
causal dependencies between EDR-generated threat alerts. TPGs
provide compact visualization of multi-stage attacks to analysts,
accelerating investigation. To address EDR’s false alarm problem,
we introduce a threat scoring methodology that assesses risk
based on the temporal ordering between individual threat alerts
present in the TPG. In contrast to the retention of unwieldy
system logs, we maintain a minimally-sufﬁcient skeleton graph
that can provide linkability between existing and future threat
alerts. We evaluate our system, RapSheet, using the Symantec
EDR tool in an enterprise environment. Results show that our
approach can rank truly malicious TPGs higher than false
alarm TPGs. Moreover, our skeleton graph reduces the long-
term burden of log retention by up to 87%.
I. INTRODUCTION
Today’s system intrusions are remarkably subtle and so-
phisticated. Exempliﬁed by the “living-off-the-land” attack
strategies of Advanced Persistent Threats (APTs), adversaries
now lurk in the enterprise network for longer periods to extend
their reach before initiating a devastating attack. By avoiding
actions that would immediately arouse suspicion, the dwell
time for such attackers can range from weeks to months, as
was the case in numerous data breaches including Target [1],
Equifax [2], and the Ofﬁce of Personnel Management [3].
The canonical enterprise solution for combatting APTs is
known as Endpoint Detection and Response (EDR). EDR tools
constantly monitor activities on end hosts and raise threat
alerts if potentially-malicious behaviors are observed. In con-
trast to signature scanning or anomaly detection techniques,
EDR tools hunt threats by matching system events against a
knowledge base of adversarial Tactics, Techniques, and Proce-
dures (TTPs) [4], which are manually-crafted expert rules that
describe low-level attack patterns. TTPs are hierarchical, with
tactics describing “why” an attacker performs a given action
while techniques and procedures describe “how” the action is
performed. According to a recent survey, 61% of organizations
deploy EDR tools primarily to provide deep visibility into
attacker TTPs and facilitate threat investigation [5]. MITRE’s
ATT&CK [6] is a publicly-available TTP knowledge base
which is curated by domain experts based on the analysis of
real-world APT attacks, and is one of the most widely used
collections of TTPs [7], [8], [9]. In fact, all 10 of the top
EDR tools surveyed by Gartner leverage the MITRE ATT&CK
knowledge base to detect adversary behavior [10].
While EDR tools are vital for enterprise security, three
challenges undermine their usefulness in practice. The ﬁrst
challenge is that TTP knowledge bases are optimized for
recall, not precision; that is, TTP curators attempt to describe
all procedures that have any possibility of being attack re-
lated, even if the same procedures are widely employed for
innocuous purposes. An obvious example of this problem can
be found in the “File Deletion” Technique [11] in MITRE
ATT&CK – while ﬁle deletion may indicate the presence of
evasive APT tactics, it is also a necessary part of benign user
activities. As a result, EDR tools are prone to high volumes of
false alarms [12], [13], [14], [15]. In fact, EDR tools are one
of the key perpetrators of the “threat alert fatigue” problem1
that is currently plaguing the industry. A recent study found
that the biggest challenge for 35% of security teams is keeping
up with the sheer volume of alerts [16]. Consequently, the true
attacks detected by EDR tools are at risk of being lost in the
noise of false alerts.
The second challenge comes from the dubious nature of
EDR-generated threat alerts. After receiving an alert, the ﬁrst
job of a cyber analyst is to determine the alert’s veracity.
For validation, cyber analysts review the context around the
triggered alert by querying the EDR for system logs. Although
EDR tools collect a variety of useful contextual information,
such as running processes and network connections, the onus
is on the cyber analyst to manually piece together the chain of
system events. If the alert is deemed truly suspicious, the cyber
analyst then attempts to recover and correlate various stages
1A phenomenon in which cyber analysts do not respond, or respond
inadequately, to threat alerts because they receive so many each day.
© 2020, Wajih Ul Hassan. Under license to IEEE.
DOI 10.1109/SP40000.2020.00096
1172
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:41:13 UTC from IEEE Xplore.  Restrictions apply. 
of the attack through further review of enormous system logs.
Security Indicator & Event Management (SIEM) products are
often the interface through which this task is performed (e.g.,
Splunk [17]), allowing analysts to write long ad-hoc queries
to join attack stages, provided that they have the experience
and expertise to do so.
Long-term log retention is the third challenge for existing
EDR tools. It is still commonplace for EDR tools to delete sys-
tem logs soon after their capture. Logs are commonly stored
in a small FIFO queue that buffers just a few days of audit
data [18], [19], such that system events are commonly unavail-
able when investigating a long-lived attack. Even worse, unless
an organization staffs a 24/7 security team, the audit data for an
alert that ﬁres over the weekend may be destroyed by Monday.
This indicates that despite advancements in the efﬁciency of
causal analysis, long-term retention of system log simply does
not scale in large enterprises. Not only does this mean that
EDR tools cannot reap the beneﬁts of causal analysis during
threat investigation, but it also means that current EDR tools
lack the necessary context to understand the interdependencies
between related threat alerts.
To aid alert validation and investigation, it would seem that
the research community has already arrived at a solution –
data provenance. Data provenance analysis can be applied
to system logs to parse host events into provenance graphs
that describe the totality of system execution and facilitate
causal analysis of system activities. In recent years, signiﬁcant
advancements have been made that improve the ﬁdelity [20],
[21], [22], [23], [24], [25], [26], [27], [28] and efﬁciency [29],
[30], [31], [32], [33], [34], [35], [36], [37] of causal analysis,
and recent results indicate that causal analysis can even be
leveraged to improve alert triage [38], to detect intrusions [39],
[40], [41], and to derive alert correlations [42], [43]. Better yet,
most causal analysis engines are based on commodity auditing
frameworks (e.g., Windows ETW), which analyze the same
information stream that is already being used by EDR tools.
Based on data provenance, we introduce a new concept in
this paper which we call Tactical Provenance that can reason
about the causal dependencies between EDR-generated threat
alerts. Those causal dependencies are then encoded into a
tactical provenance graph (TPG). The key beneﬁt of TPG is
that a TPG is more succinct than a classical whole-system
provenance graph because it abstracts away the low-level
system events for cyber analysts. Moreover, TPGs provide
higher-level visualizations of multi-stage APT attacks to the
analysts, which help to accelerate the investigation process.
To tackle the threat alert fatigue problem, we present meth-
ods of triaging threat alerts based on analysis of the associated
TPGs. APT attacks usually conform to a “kill chain” where
attackers perform sequential actions to achieve their goals [44],
[45]. For instance, if the attacker wants to exﬁltrate data, they
must ﬁrst establish a foothold on a host in the enterprise,
locate the data of interest (i.e., reconnaissance), collect it, and
ﬁnally transmit the data out of the enterprise. Our key idea
is that these sequential attack stages seen in APT campaigns
can be leveraged to perform risk assessment. We instantiate
this idea in a threat score assignment algorithm that inspects
the temporal and causal ordering of threat alerts within the
TPG to identify sequences of APT attack actions. Afterward,
we assign threat score to that TPG based on the identiﬁed
sequences and use that threat score to triage TPGs.
To better utilize the limited space available on hosts for
log reduction
long-term log storage, we present a novel
technique that, instead of storing all the system events present
in the logs, maintains a minimally-sufﬁcient skeleton graph.
This skeleton graph retains just enough context (system events)
to not only identify causal links between the existing alerts but
also any alerts that may be triggered in the future. Even though
skeleton graphs reduce the ﬁdelity of system logs, they still
preserve all the information necessary to generate TPGs for
threat score assignment, risk assessment, and high-level attack
visualization.
In summary, we make the following contributions:
• We propose tactical provenance graphs (TPGs), a new
representation of system events that brings the beneﬁts of
data provenance into the EDR ecosystem.
• We present a threat scoring algorithm based on TPGs to
rank threat alerts.
• We present a novel log reduction scheme that can reduce
the storage overhead of system logs while preserving causal
links between existing and future threat alerts.
• We integrate our prototype system, RapSheet,
into the
Symantec EDR tool. We evaluated RapSheet with an enter-
prise dataset to show that RapSheet can rank truly malicious
TPGs higher than false alarm TPGs. Moreover, our skeleton
graph reduces the storage overhead of system logs by up to
87% during our experiments.
II. BACKGROUND & MOTIVATION
A. Data Provenance
Data provenance is a promising approach to investigate
cyber attacks [46]. In the context of operating systems, data
provenance techniques parse logs generated by system-level
auditing frameworks, such as Windows ETW [47] and Linux
Audit [48] into a provenance graph. Provenance graphs encode
causal dependence relations between system subjects (e.g.,
processes) and system objects (e.g., ﬁles, network sockets).
Given a symptom event of an attack, cyber analysts can ﬁnd
the root cause of the attack by issuing a backward tracing
query on the provenance graph. After identifying the root
cause, cyber analysts can also issue a forward tracing query
to understand the ramiﬁcations of the same attack. Thus, data
provenance is a powerful technique for attack attribution.
B. MITRE ATT&CK and EDR tools
MITRE ATT&CK is a publicly-available knowledge base
of adversary tactics and techniques based on real-world ob-
servations of cyber attacks. Each tactic contains an array of
techniques that have been observed in the wild by malware or
threat actor groups. Tactics explain what an attacker is trying
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:41:13 UTC from IEEE Xplore.  Restrictions apply. 
1173
to accomplish, while techniques2 and procedures3 represent
how an adversary achieves these tactical objectives (e.g., How
are attackers escalating privileges? or How are adversaries
exﬁltrating data?) The MITRE ATT&CK Matrix [49] visually
arranges all known tactics and techniques into an easy-to-
understand format. Attack tactics are shown at the top of the
matrix. Individual techniques are listed down each column. A
completed attack sequence would be built by moving through
the tactic columns from left (Initial Access) to right (Impact)
and performing one or more techniques from those columns.
Multiple techniques can be used for one tactic. For example,
an attacker might try both an attachment (T1193) and a link
(T1192) in a spearphishing exploit to achieve the Initial Access
tactic. Also, some techniques are listed under multiple tactics
since they can be used to achieve different goals.
One common use of MITRE ATT&CK tactics and tech-
niques is in malicious behavior detection by Endpoint De-
tection and Response (EDR) tools. EDR tools serve four
main purposes in enterprises: 1) detection of potential se-
curity incidents, 2) scalable log ingestion and management,
3) investigation of security incidents, and 4) providing re-
mediation guidance. To implement those capabilities, EDR
tools record detailed, low-level events on each host including
process launches and network connections. Typically, this data
is stored locally on end hosts. Events that are of potential
interest may be pushed to a central database for alerting and
further analysis, during which additional events may be pulled
from the endpoint to provide forensic context. EDR tools
provide a rule matching system that processes the event stream
and identiﬁes events that should generate alerts. Major EDR
vendors [7], [8], [9] already provide matching rules to detect
MITRE ATT&CK TTPs; however, cyber analysts can also add
new rules to detect additional TTPs at an enterprise where the
EDR tool is deployed.
C. Motivating Example
We now consider a live attack exercise that was conducted
by the Symantec’s red team over a period of several days; this
exercise was designed to replicate the tactics and techniques
of the APT29 threat group. APT29 is one of the most
sophisticated APT groups documented in the cyber security
community [50]. Thought to be a Russian state-sponsored
group, APT29 has conducted numerous campaigns with differ-
ent tactics that distribute advanced, custom malware to targets
located around the globe. Discovered attacks attributed to
APT29 have been carefully analyzed by MITRE, yielding a
known set of tactics and techniques that APT29 commonly use
to achieve their goals [51]. In this exercise, different techniques
were performed from that known set, ranging from Reg-
istry Run Keys (T1060) to Process Injection (T1055). These
techniques allowed us to observe different MITRE tactics
2 Techniques are referenced in ATT&CK as Txxxx such as Spearphishing
link is T1192 and Remote Access Tools is T1219. Description of these
techniques is available at https://attack.mitre.org/techniques/enterprise/
3 A procedure is a speciﬁc instantiation of a technique; in this paper we
use the term “technique” to describe both techniques and procedures.
t
n
u
o
C
42
40
38
36
34
32
30
28
26
0
6
0
1
T
i
y
r
t
s
g
e
R
s
y
e
K
n
u
R

1
7
0
1
T
l
p
p
A
d
S
t
o
c
o
o
r
P
t


r
e
y
a
L
5
0
1
1
T
y
p
o
C
e
t
e
o
m
e
R
l
i

F
9
5
0
1
T
e
c
a
f
r
e
n
t
I
e
n
i
l
d
n
a
m
m
o
C
3
9
1
1
T
t