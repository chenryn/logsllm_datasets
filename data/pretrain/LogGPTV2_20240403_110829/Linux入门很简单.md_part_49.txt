懒蜗牛很快又试了试"g++"命令的使用。要使用g++，首先得有段C++语言的程序啊，其实"g++"是完全可以编译C程序的，不过为了让程序更C++一些，懒蜗牛同学还是把程序改了改，写出了C++版本的HelloWorld：
![alt](images/00372.jpeg){.calibre3}
修改之后，懒蜗牛将程序另存为hello.cpp文件并运行：
![alt](images/00373.jpeg){.calibre3}
同样也编译出了a.out文件，运行效果和刚才那段C语言的程序没啥区别。
![alt](images/00011.jpeg){.tpzz}**提示：**[编译输出的文件如果有同名文件在目录下，编译器将直接覆盖原有文件，不做任何提示或询问。]{.kai1}
7.1.4 C/C++语言集成开发环境
咱们已经说明白了，这个GCC只是个编译器，不是集成开发环境。但是并不是说我们Ubuntu系统里就没有C/C++语言的集成开发环境。毕竟有时候，有的用户，还是用集成开发环境更顺手一些。那我就介绍几个常见的吧。
【Anjuta】
![alt](images/00002.jpeg){.tpzz} 姓名：Anjuta
![alt](images/00002.jpeg){.tpzz} 性别：无
![alt](images/00002.jpeg){.tpzz} 毕业院校：开源社区
![alt](images/00002.jpeg){.tpzz} 源码面貌：由C语言编写
![alt](images/00002.jpeg){.tpzz} 主要工作技能：C语言开发，C++语言开发
![alt](images/00002.jpeg){.tpzz} 次要工作技能：Java语言、Python语言项目开发
![alt](images/00002.jpeg){.tpzz} 联系地址：http://www.anjuta.org/index.html
这位Anjuta是一个专门用来开发C\\C++程序的集成开发环境，也可以用来开发Java和Python。他主要用于Gnome桌面环境中，尤其开发Gnome程序或基于GTK+库的程序，较为方便灵活。并且这个软件身材小巧，节约资源，属于经济实惠型的软件，如图7.10所示。
![alt](images/00374.jpeg){.calibre3}
图7.10 Anjuta集成开发环境
【Geany】
![alt](images/00002.jpeg){.tpzz} 姓名：Geany
![alt](images/00002.jpeg){.tpzz} 性别：未知
![alt](images/00002.jpeg){.tpzz} 毕业院校：开源社区
![alt](images/00002.jpeg){.tpzz} 源码面貌：由C语言编写
![alt](images/00002.jpeg){.tpzz} 主要工作技能：C语言开发、Java语言开发、PHP语言开发
![alt](images/00002.jpeg){.tpzz} 次要工作技能：HTML、Python、Perl、Pascal、Haskell、LaTex等语言开发
![alt](images/00002.jpeg){.tpzz} 联系地址：http://www.geany.org/
Geany是一个使用gtk+工具包编写的软件。他的功能介于文本编辑器（比如gedit）和集成开发环境（也就是IDE，比如Anjuta）之间，可以算是一个"有集成开发环境基本特性的文本编辑器"。他的体积同样小巧，并且依赖的软件包比较少。同时，Geany还支持许多种程序设计语言，是一个全功能的编辑器，图7.11所示是Geany的工作界面。
![alt](images/00375.jpeg){.calibre3}
图7.11 Geany集成开发环境
【KDevelop】
![alt](images/00002.jpeg){.tpzz} 姓名：KDevelop
![alt](images/00002.jpeg){.tpzz} 性别：中
![alt](images/00002.jpeg){.tpzz} 毕业院校：开源社区，KDE项目
![alt](images/00002.jpeg){.tpzz} 源码面貌：由C、C++语言编写
![alt](images/00002.jpeg){.tpzz} 主要工作技能：C、C++、Perl、Python、PHP、Java、Fortran、Ruby、Ada、Pascal、SQL，以及Bash脚本程序的编写
![alt](images/00002.jpeg){.tpzz} 次要工作技能：主要技能里的那些还不够你用的吗
![alt](images/00002.jpeg){.tpzz} 联系地址：http://kdevelop.org/
KDevelop是KDE环境下的集成开发环境，功能比较强大，从图7.12中可以看出一些。如果你用KDE桌面环境，或者要开发基于KDE环境，基于Qt库的程序，那么向你强烈推荐这个集成开发环境。他还能够支持CVS、Subversion、ClearCase和Perforce这些版本控制系统，为多人共同开发提供了便利。
![alt](images/00376.jpeg){.calibre3}
图7.12 KDevelop集成开发环境
![alt](images/00011.jpeg){.tpzz}**提示：**[KDevelop不在Ubuntu的软件源中。如果要求安装，需要添加ppa源。运行以下命令：]{.kai1}
![alt](images/00377.jpeg){.calibre3}
之后即可通过apt安装kdevelop。
![alt](images/00378.jpeg){.calibre3}
【Eclipse】
![alt](images/00002.jpeg){.tpzz} 姓名：Eclipse
![alt](images/00002.jpeg){.tpzz} 性别：为啥老有这项
![alt](images/00002.jpeg){.tpzz} 毕业院校：IBM公司、Eclipse基金会
![alt](images/00002.jpeg){.tpzz} 源码面貌：由Java语言编写
![alt](images/00002.jpeg){.tpzz} 主要工作技能：Java语言开发
![alt](images/00002.jpeg){.tpzz} 次要工作技能：C\\C++语言项目开发，PHP语言项目开发
![alt](images/00002.jpeg){.tpzz} 联系地址：http://www.eclipse.org/
这个Eclipse大概对于很多开发Java的同志们来说已经非常熟悉。不过既然它已经落在了开源社区手里，就跑不掉被热心的开发者插满插件的命运。其中就有支持C\\C++语言的插件CDT。图7.13所示是Eclipse的启动界面。
![alt](images/00379.jpeg){.calibre3}
图7.13 Eclipse启动界面
![alt](images/00011.jpeg){.tpzz}**提示：**[2001年11月IBM公司将Eclipse贡献给开源社区。]{.kai1}
相比上面两个集成开发环境，Eclipse更加商业化，更加专业一点，毕竟有IBM公司雄厚的技术底蕴做基础，写出来的东西确实相对好用些。不过由于是用Java写出来的这么大一个程序，所以运行起来的速度可能就不那么理想了。
[7.2 PHP开发环境的搭建]{.kai}
搭建好了C语言开发环境后，懒蜗牛同学又开始着手试着研究PHP语言了。这主要是因为他觉得C语言还是有点难度，好像PHP更容易入门些。于是他就开始了搭建PHP开发环境的工作。
7.2.1 PHP是个神马
PHP（Hypertext
Preprocessor）是一种脚本语言，主要用于处理动态网页。不过它也包含了命令行运行接口，甚至还能产生拥有图形用户界面（GUI）的程序。PHP最早由拉斯姆斯·勒多夫（Rasmus
Lerdorf）在1995年发明，就是图7.14中所示的这位仁兄。要说起PHP的作用和意义，那就得从很久以前说起了......
![alt](images/00380.jpeg){.calibre3}
图7.14 拉斯姆斯·勒多夫
【静态的HTML】
话说很久很久以前，互联网才刚刚兴起。那时候网页上使用的是HTML语言，也就是超文本标记语言------HyperText
Markup
Language来实现排版。似乎是带"超"字的东西都比较强大而流行，比如超人、超市、超女之类的，于是网页这种形式的媒介很快流行起来（这都挨得着么......）。用户的浏览器下载下来用HTML语言写的网页，然后按照HTML语言的规则解释为一张调整好各种版式、字体、图片等内容的网页，如图7.15所示。
![alt](images/00381.jpeg){.calibre3}