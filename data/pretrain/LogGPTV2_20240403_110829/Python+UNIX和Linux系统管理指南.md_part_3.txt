前言丨7
---
## Page 22
Rock。我错过了许多，但是你们都没有抱怨过，感谢你们对我的耐心。当你们听到我马
我却不能像从前那样在床前哄他们安然人睡。我错过了几周前那个星期三晚上的Kid s
许多与他们去Stone Mountain旅行的机会。虽然大多数晚上我仍把他们抱上床，但是
我也要感谢我的孩子Zane和Justus。在我写书的过程中，他们能够如此耐心。我错过了
助时，她鼓励我，给我许多空间，这是我最需要的。感谢你，我的爱人。没有你，我无
扰我。她一次次地向孩子们重复规定：“在爸爸写书的时候，不要烦他”。当我需要帮
最先要感谢的人是我的爱人Debra。在我写这本书时，她让孩子们做别的活动而不来打
首先，我必须感谢上帝，是他让我成就了所有的事情，没有他我将一无所成。
长，而好的方面是，Noah的名单已经涵盖了几乎所有我想要感谢的人。
在读了Noab的致谢名单之后，我感到有得有失。糟糕的方面是我的名单没有Noah的这么
来自Jeremy的致谢
Twisted所做的工作。这是一个非常好的框架，我希望更多地使用它。
感谢Duncan McGreggor帮助我完成了Twisted代码。他的注释非常有帮助。感谢他在
感谢FernandoPerez和VilleVainio的积极反馈。
感谢我们的编辑，Tatiana Apandi和Julie Steele。你们处理了其他事务，消减了我们的负
予指导最多的是Jennifer。系统管理中的文字处理一章，要尤其感谢你）。感谢你们所
的想法，或者从全新的视角审视这本书，帮助我能够从另外的角度进行思考（其中给
Leerseen。你们是可敬的。好多次，我认为已经做得恰到好处了，但你们再次调整了我
Hellman、Jennifer Davis、Shannon JJ Behrens、Chris McDowell、Titus Brownl及 Scott
我还要感谢评审组。我想Noah已经感谢过你们所有人，但是我仍要再次感谢：Doug
就不会开始。
生中曾经做过的最为艰辛的事情之一。感谢Noah，我的朋友。如果没有他，这本书根本
感谢NoahGift，我的合著者。完成这本书所遇到的困难超出了我的想象，可以说是我一
力工作来改变生活和经济条件。我希望Zane和Justus也能够继承这些好的传统。
我更要感谢的是他们为我树立了榜样，让我有了强烈的工作观念，学会了努力争取，努
我需要感谢我的父母，Charles和Lynda Jones。在我写这本书时，他们一直支持我。但是
上要完成这本书时，是如此兴奋，这让我很感动。我爱你们。
法完成此书。
担，让我们能够专心完成这本书。感谢你们。
有人。
前言
www.TopSage.com
---
## Page 23
许多快乐。感谢你们。Python对我来说一直是非常棒的工具。
Python。我大约从2001年到2002年开始使用Python，Pyhon语言和Python社区给我带来了
Python的朋友。我从你们的工作中获得了许多经验。我前两次被雇用都是因为熟悉
最后要感谢的绝不是分量最轻的人，我要感谢Guidovan Rossum和每一个曾经使用过
的环境，测试不同的事务变得非常简便。感谢你们。
Linux平台的人。我键入的每一个单词都是在Linux下完成的。你们将工作过程中构建新
我也要感谢Linus Torvalds、Debian的开发人员、Ubuntu的开发人员，以及所有工作在
标签都是通过Vim写的。
感谢Bram Moolenar和所有对Vim编辑器做出贡献的人。几平每一个我写的单词和XML
www.TopSage.com
前言1 9
---
## Page 24
Solaris/OpenSolaris 电子书、视频等精华资料下载索引
FreeBSD/OpenBSD/NetBSD 精品学习资源索引含书籍+视频
UNIX操作系统精品学习资料分类总汇
Linux shell、内核及系统编程精品资料下载汇总
Linux 系统管理员必备参考资料下载汇总
天罗地网：精品Linux 学习资料大收集(电子书+视频教程)Linux参考资源大系
经典 LinuxCBT 视频教程系列Linux 快速学习视频教程一帖通
UML 学习电子资下载汇总 软件设计与开发人员必备
网络最强 PHP 开发工具+电子书+视频教程等资料下载汇总
最新JavaScript、Ajax 典藏级学习资料下载分类汇总
最强HTML/xHTML、CSS 精品学习资料下载汇总
数据库精品学习资源汇总：MySQL 篇丨SQL Server 篇丨Oracle 篇
最新最全 Ruby、Ruby on Rails 精品电子书等学习资料下载
Python 语言编程学习资料(电子书+视频教程)下载汇总
Perl/CGI 脚本语言编程学习资源下载地址大全
VisualC++(Vc/MFC)学习电子书及开发工具下载
撼世出击：C/C++编程语言学习资料尽收眼底 电子书+视频教程
Java一览无余：Java 视频教程丨Java SE丨Java EE
软考视频”考试机构”考试时间安排
软考官方指定教材及同步辅导书下载”软考历年真是解析与答案
.Net技术精品资料下载汇总：VB.NET篇
Net 技术精品资料下载汇总：C#语言篇
Net技术精品资料下载汇总：ASP.NET篇
计算机精品学习资料大放送
www.TopSage.com
---
## Page 25
然而，如果一门语言过于简单，不具备完成复杂工作的能力，它同样也没有太高的价
要了。
握它，并很快地学会编写该语言的代码，那么就应该问一问是否有学习这门语言的必
全不用花上几天或是几周时间。的确如此，对于一门语言，如果人们不能很容易就掌
直难以想象。而使用Python则不同，在几个小时内，你就可以写出规范的脚本程序，完
是一位系统管理员，就会感觉到总有处理不完的工作，花费大量时间学习一门语言，简
间去学习这门语言，值得吗？答案恐怕是否定的，对于系统管理员尤其如此。如果你
失了。想一想在使用一种程序语言去完成一些工作之前，需要花费几周甚至儿个月的时
门语言无法在很短的时间内帮助人们迅速提高工作效率，那么它作为语言的魅力也就消
Python之所以是一门优秀的编程语言，第一个原因就在于Python十分容易学习。如果一
理任务。
出理由说明为什么Python是个不错的选择，也将说明为什么Python尤其适合完成系统管
合于使用它的人。因此，在这里我们不会争论Python是否比其他语言更好，但我们将给
系。编程是一种主观性很强的活动，与程序员直接相关。一-门优秀的编程语言，必须适
编程语言的优劣进行排序，因为这些工具与使用它们的程序员的思维习惯有着紧密联
选择Python是因为它比Perl、Bash、Ruby或其他语言更好么？事实上，我们很难对各种
具，它会帮助你更为高效地完成工作。
现在它们能够帮助人们把工作做得更好。我们有理由相信Python是一个非常有价值的工
所有的语言都是工具，它们为完成工作提供了便捷的手段，而这些工具的价值也正是体
的工作，使用后，工作完成的速度和准确性都远远高于不使用它们时的情况。实际上，
解，甚至已经使用了其中的一种或几种。我们通常利用脚本语言来完成一些重复、乏味
如果你是一位系统管理员，那么可能已对Perl、Bash、ksh或其他一些脚本语言有所了
为什么要选Python
Python简介
第1章
---
## Page 26
对比下面使用Perl完成的代码：
一个简单的Bash示例程序，显示数字1、2与字母a、b的所有组合，代码如下所示：
Python之所以是一门非常优秀的编程语言的另一个原因是其可读性非常好。Python使用
甚至当我们使用之前从未见过的陌生Python代码时：也同样简单方便。由于其语法和通
的因素，因为简化的代码能够使后续的代码维护工作变得简单、轻松。Python在代码简
简单的语法结构来实现复杂的编程思想。在编写代码过程中，代码简化是一个极为重要
筋，这同样不是一件好事。尽管Python也有代码维护问题，但是Python能够帮助我们用
的代码示例进行对比分析。通过对比，我们将可以更清楚地看到Python的优势。以下是
以上，我们总结了Python的一些优点，接下来，我们将分别对Python、Perl和Bash编写
调词而不是强调特殊字符，使得Python代码具有很好的可读性，并且十分易于理解。
空格（whitespace）来分隔代码块的开始和结尾。代码的缩进格式帮助人们很容易理解
用词汇十分简洁、精练，Python语言很容易让人一经学习就能够长时间使用。
此外，虽然你能够使用一门语言编写一些复杂的代码，但这些代码的维护却让你伤透脑
是一件好事情。
工作任务，但是当我们需要去完成一些比较复杂的任务时，有Python这门语言相助终归
序列分析、多线程Web服务和繁重的统计分析任务。也许你并不会遇到上述那样复杂的
时，Python同样也可以处理。实际上，Python正用于处理一些非常复杂的问题，如基因
较（这些日志文件都存储在关系数据库中），然后将比较的结果存储在关系数据库中
件，提取出其中的信息，将其中的IP地址与过去三个月中每个日志文件里的IP地址相比
志文件，然后输出其中一些基本信息时，Python可以胜任。或是当需要解析一个日志文
简单易学，
值。因此，Python之所以被称为一门非常优秀的编程语言，第二个原因就在于Python既
Python语言在使用一些特殊字符的同时，特征经常是以关键词或词库的形式实现的。强
程序的流程。此外，Python可以说是“基于词”（word-based）的语言，也就意味着，
化方面做得非常出色，即使我们需要维护几个月都没再看过的那些代码，也并非难事。
foreach$a（'1','2'）[
#1/usr/bin/perl
done
forain12;do
#!/bin/bash
第1章
foreach $b('a'
done
forb in a b;do
，又可以完成你能够想象到的任何复杂任务。当需要一行一行地读取某个日
print"sa $b\n";
www.TopSage.com
X
---
## Page 27
完全支持。下面的代码是采用Perl语言定义的一个类：
功能模块组成独立的“事物”或“对象”
OOP编程是相当容易的。利用OOP技术，可以简单、清晰地将问题进行分解，将一系列
用OOP来编写程序，完全可以不用，而如果你想使用OOP，就会发现，在Python中使用
Python语言的另一个优势是它对面向对象编程（OOP）的支持。事实上，如果你不想使
最后是使用Python编写的代码，实现相同的检测功能：
下面是使用Perl编写的具有相同功能的代码：
一个简单的if/else条件结构，用于检测指定的文件路径是否为一个目录。
接下来，我们再对Bash、Perl和Python中条件语句的使用进行对比。以下代码是Bash中
循环嵌套机制的代码：
我们可以看到，这是一个非常简单的嵌套循环。以下是使用Python中的for循环完成同样
if os.path.isdir("/tmp"):
#!/usr/bin/env python
if (-d "/tmp") {
#!/usr/bin/perl
#!/bin/bash
else:
import os
else{
for a in [1, 2]:.
#1/usr/bin/env python
fi
else
print "/tmp is not a directory"
urosarp e st dua/, zutad
ru>Axo1oarsp e pou st du/,. suid 
"rotoarp e pou st dus/α oua
for b in
print a,b
'b']:
www.TopSage.com
。Bash不支持面向对象技术，Perl和Python则
Python简介丨13
阁
PDG
---
## Page 28
在下面的Perl代码中，使用了上述定义的类：
接下来，我们看看在Python中定义并使用类的代码：
程不太熟悉，那么你仍需要花费一些工夫来弄清Perl是如何处理OOP问题的。
14
上述代码直接使用了00模块，看起来十分简单。
subnew{
use strict;
package Server;
sub
$server->ping('192.168.1.20');
$server = Server->new('192.168.1.15', 'grumbly');
use Server;
#!/usr/bin/perl
sub
sub
class Server(object):
#!/usr/bin/env python
1；
set_hostname {
return $self->{IP];
$self->{IP} =- shift;
my $self
return $self;
bless($self);
$self->{HOSTNAME} = shift;
$self->{IP}
my $class = shift;
return $self->{HOSTNAME};
set_ip{
第1章
return o;
ping{
$self
$external_ip = shift;,
$self_ip:
 shift;
= shift;
$self->{IP};
www.TopSage.com
但如果对Perl如何使用OOP技术进行编
DG
---
## Page 29
能将在使用Python完成工作的过程中，为你提供有力的帮助。
的所有功能，而这些功能都是来自Python自身的，无须再从其他地方获取。所有这些功
安装完毕，支持所有这些功能的模块就可以根据需要加载到脚本中。你将获得以上列出
性、单元测试功能，还包括http、ftp、smpt和nntp客户端库文件等。因此，一旦Python
接字、线程、日期/时间功能，XML解析、配置文件解析，文件和目录功能、数据持久
在语言中的，但并不影响其提供各种各样丰富的功能支持，例如正则表达式功能、套
的工作，无须再到别的地方去寻找支持模块。Python标准库并不是直接内置（built-in）
included”）。之所以这样评价Python，正是因为Python标准库可以帮助你完成几乎所有
可能曾经听说过有人在形容Python时，说它是“连电池都包括在内的”（“batteries
Python标准库（Python Standard Library）是Python另一个非常值得称道的方面。你
一件非常值得重视的事情。
护。在编写代码时遵循这些公共约定，会使你在编程过程中少走许多弯路。应该说这是
社区中这些特殊的约定会帮助你写出更为清晰的代码，有助于其他人对你的代码进行维
块是如何工作的、调用了什么函数和从哪里获得这些函数时，问题就会变得十分复杂。
的全部内容导人到另一个模块的命名空间，有时会引起很多麻烦。例如当你试图了解模
端使用“from moduleimport *”是有效的，但是在社区中并不赞同这种写法，而是建
能，但在社区中已形成的共识会帮助你远离一些不好的句式。例如，在Python模块的顶
用的）的语言特性。Python语言自身支持的一些句式（phrasing）虽然能够实现某些功
你可以找到许多完成各类工作的成功经验，还可以学到许多能够选择使用（或是不应使
Python的另外一个优势并不是来自语言本身，而是来自Python社区。在Python社区中，
供了对OOP的支持，可以简单方便地将OOP技术应用到你所编写的程序中。，
同样的工作，但完成的方式各不相同。因此，如果你希望使用oOP，那么Python正好提
两个示例程序说明，这两种语言在实现各自的目标时具有不一样的优势。它们可以完成
在上述Perl与Python的示例中，分别演示了两种语言实现面向对象设计的基本方法。这
if_
server.ping('192.168.1.15')
def
print
set_hostname(self, hostname):
self.ip = ip
set _ip(self, ip):
self.hostname = hostname
oing(self
_init_(self, ip, hostname):
.hostname=hostname
"Pinging %s from %s (%s)" % (ip_addr, self.ip, self.hostname)
main_
,ip_addr):
www.TopSage.com
”。因为，将一个模块
Python简介丨15
---
## Page 30
我们所看到Python的许多优点，都是源于Python的中心哲学。当我们在Python提示符下
旦开始使用PyPI，你会发现它是查找和安装有用软件包几乎不可或缺的途径。
Twisted（一个网络框架，将在第5章中讲述），这仅仅是3800多个包中的其中三个。
下来的几章中讲述的IPython，Storm（一个对象-关系映射器，将在第12章中讲述）和
用。在我们写这本书的时候，已经有超过3800个包文件可供下载使用。其中包括将在接
pypi.python.org）上，任何人都可以将编写的Python包上传到该网站，分享给其他人使
的Shell命令行就可以进行安装。在Python包索引（Python Package Index，PyPI，http://
准库中提供的大量库文件外，在互联网上也有大量的库和实用工具可以使用，通过简单
16
Readability counts.
Sparse is better than dense.
Flatisbetterthannested.
Complex isbetter than complicated
Simple is better than complex.
Explicitis better thanimplicit.
Beautiful is better than ugly.
Python的禅宗，
宽
美
译文如下：
H
窗
复
鲜