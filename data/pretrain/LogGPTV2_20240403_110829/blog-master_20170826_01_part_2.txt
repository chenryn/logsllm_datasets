  3,      -- 月初读数，业务提供，翻转时提供  
  4,      -- 年初读数，业务提供，翻转时提供  
  null,   -- 上次读数  
  6       -- 当前读数  
)   
  on conflict (uid) do   
  update set   
    last_time=tbl_real_data.curr_time,  
    curr_time=excluded.curr_time,  
    d1=coalesce(excluded.d1,tbl_real_data.d1),  
    d2=coalesce(excluded.d2,tbl_real_data.d2),  
    d3=coalesce(excluded.d3,tbl_real_data.d3),  
    d4=tbl_real_data.d5,  
    d5=excluded.d5  
  returning *;  
 uid | last_time |         curr_time          | d1 | d2 | d3 | d4 | d5   
-----+-----------+----------------------------+----+----+----+----+----  
   1 |           | 2017-08-26 12:19:54.486801 |  2 |  3 |  4 |    |  6  
(1 row)  
insert into tbl_real_data values (  
  1,      -- 电表ID  
  null,   -- 上次的更新时间  
  now(),  -- 当前时间  
  null,   -- 日初读数，业务提供，翻转时提供  
  null,   -- 月初读数，业务提供，翻转时提供  
  null,   -- 年初读数，业务提供，翻转时提供  
  null,   -- 上次读数  
  8       -- 当前读数  
)   
  on conflict (uid) do   
  update set   
    last_time=tbl_real_data.curr_time,  
    curr_time=excluded.curr_time,  
    d1=coalesce(excluded.d1,tbl_real_data.d1),  
    d2=coalesce(excluded.d2,tbl_real_data.d2),  
    d3=coalesce(excluded.d3,tbl_real_data.d3),  
    d4=tbl_real_data.d5,  
    d5=excluded.d5  
  returning *;  
 uid |         last_time          |         curr_time          | d1 | d2 | d3 | d4 | d5   
-----+----------------------------+----------------------------+----+----+----+----+----  
   1 | 2017-08-26 12:19:54.486801 | 2017-08-26 12:20:01.452364 |  2 |  3 |  4 |  6 |  8  
(1 row)  
返回了上一个状态，业务根据这些信息、以及配置的规则，进行实时预警。  
```  
### 压测  
压测脚本如下，1000户，随机upsert，返回最终状态和上一个状态。  
```  
vi test.sql  
\set uid random(1,10000000)  
\set d5 random(1,100000)  
insert into tbl_real_data (uid,curr_time,d5) values (:uid, now(), :d5)   on conflict (uid) do   update set     last_time=tbl_real_data.curr_time,    curr_time=excluded.curr_time,    d1=coalesce(excluded.d1,tbl_real_data.d1),    d2=coalesce(excluded.d2,tbl_real_data.d2),    d3=coalesce(excluded.d3,tbl_real_data.d3),    d4=tbl_real_data.d5,    d5=excluded.d5  returning *;  
```  
结果  
```  
pgbench -M prepared -n -r -P 1 -f ./test.sql -c 64 -j 64 -T 120  
tps = 291094.784574 (including connections establishing)  
tps = 291123.921221 (excluding connections establishing)  
```  
## 性能指标  
1、明细业务（单库性能指标）  
173万行/s，全天插入1500亿明细。可以满足4.7亿户的大地市需求。   
（5分钟上传一次电表读数，需要防止风暴，例如采用随机开始时间。）    
2、分析业务  
PB级。  
3、实时监测业务（单库性能指标）  
29万行/s，全天监测次数250亿次。可以满足8000万户的大地市需求。    
（5分钟上传一次电表读数，需要防止风暴，例如采用随机开始时间。）    
城市人口规模统计数据（截取自互联网）：   
重庆3000万规模，北京2300万规模，东京3700万规模。电表户数按3:1算，也在1000万出头。PostgreSQL单机能力远超全球最大人口城市的需求。        
## 云端产品  
[阿里云 RDS PostgreSQL](https://www.aliyun.com/product/rds/postgresql)    
[阿里云 HybridDB for PostgreSQL](https://www.aliyun.com/product/gpdb)    
[阿里云 海量对象存储OSS](https://www.aliyun.com/product/oss)  
[阿里云 RDS redis](https://www.aliyun.com/product/kvstore)  
## 小结  
电网系统是关系到民生的系统，以往我们电费基本上都是按月结算，将来水电都有可能会像手机话费、天然气一样套餐的形式。  
计费实际上也不是特别简单，涉及到峰谷电、阶梯价、商业、工业电等，将来如果有套餐出现，会更加复杂。  
不过不用担心，阿里云RDS PG, HDB PG, OSS, redis等云端产品，从“用电明细、实时监测、全网海量OLAP分析、套餐类OLTP管理”等方面着手，可以很好的解决电网系统的需求。  
## 参考  
[《PostgreSQL物理"备库"的哪些操作或配置，可能影响"主库"的性能、垃圾回收、IO波动》](../201704/20170410_03.md)    
[《PostgreSQL 老湿机图解平安科技遇到的垃圾回收"坑"》](../201607/20160715_01.md)    
[《PostgreSQL 9.6 快照过旧 - 源码浅析》](../201610/20161005_02.md)    
[《PostgreSQL on Linux 最佳部署手册》](../201611/20161121_01.md)    
[《PostgreSQL on ECS多云盘的部署、快照备份和恢复》](../201708/20170812_01.md)    
实时监测业务注意，垃圾回收相关参数设置：  
[《垃圾回收设置避免IO波动》](../201704/20170410_03.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")