# DNSSECTION @ DEF CON 28 SAFE MODE
**Date:** August 6, 2020

## Presentation Overview
**Presenters:**
- Hadrien Barral (Ecole Normale Supérieure / PSL University)
- Rémi Géraud-Stewart, Ph.D. (ENS/PSL, QPSI @ Qualcomm)
- Amaury Barral
- David Naccache

**Affiliations:**
- Ecole Normale Supérieure @ PSL University
- QPSI @ Qualcomm Technologies Inc.

### Introduction
This presentation covers:
- An e-mail privacy breach in the largest French cloud provider.
- The first practical attack based on DNSSEC zone walking.
- A cautionary tale about hash functions.

### Why This Matters
- **DNS is ubiquitous and contains a vast amount of potentially interesting data.**
- **Zone walking has never been demonstrated in the wild before.**

## Who We Are
- **Hadrien Barral**: Ecole Normale Supérieure / PSL University
- **Rémi Géraud-Stewart, Ph.D.**: ENS/PSL, QPSI @ Qualcomm
- **Amaury Barral** and **David Naccache** collaborated on this research.
- This is our second Defcon talk.

## 1. Behind skytalks-vidz.com

### DNS 101
- **DNS (Domain Name System)**: 
  - A naming system for remote resources.
  - A distributed database system (not a blockchain).
  - Contains Resource Records (RR) and domain names.
  - **Resolver**: Translates domain names into IP addresses.
  - **Zones**: Subtrees maintained by different entities.

### Registrars and Domain Services 101
- **Scenario: Creating a New Website**
  1. Buy a computer.
  2. Pay for Internet access.
  3. Design a website running on your server.
  4. Register a domain name with a registrar.
  5. Set up DNS servers to connect the domain name to your server’s IP.
  6. Maintain all these components.
  - **All-in-one Solution**: Cloud hosting.

### OVHcloud 101
- **OVHcloud**:
  - Largest French cloud provider (2nd in Europe).
  - Sells domains and offers e-mail redirects.
  - Hosts Wikileaks since 2010.

### E-mail Redirects at OVHcloud
- **From**: PI:EMAIL →
- **To**: PI:EMAIL →

### Potential Harm
- **Assume Access to Redirection Database:**
  - Loads of client information: names, e-mails, billing, etc.
  - Possible misuse:
    - Spam
    - Password dumps
    - Targeted attacks
    - Finding weak hosts/email providers
    - Social engineering
    - Blackmail
    - Phishing
    - Lawsuits
    - Business reconnaissance

## Sudo Brute Force
- **Step 1**: Get a list of OVHcloud-handled domains.
- **Step 2**: Query DNS for a sublist of interesting domains.
  - Works well for .fr, .ovh, but less so for .com.
- **Step 3**: Retrieve redirection records for public emails.
  - Emails found on webpages.
- **Step 4**: Bruteforce associated DNS queries for common e-mail addresses.
  - Examples: {abuse, admin, contact}@example.com

### Practical Implementation
- **Avoid Getting Banned by DNS Server:**
  - Use rate limiting with multiple IPs.
- **Low-tech Version**:
  - Bash + dig + filesystem.
  - Example script:
    ```bash
    while read DOMAIN; do
      dig mx "${DOMAIN}" > "./save/mx/${DOMAIN}"
      dig "at.${DOMAIN}" > "./save/at/${DOMAIN}"
    done < "domain_list.txt"

    while read DOMAIN; do
      for NAME in "abuse" "admin" "contact" ...; do
        EMAIL="${NAME}.at.${DOMAIN}"
        dig TXT "${EMAIL}" +noall +answer | grep "${EMAIL}.*IN.TXT"
      done
    done < "interesting_domain_list.txt"
    ```

### Demo
- **Results**:
  - Considered 14,000 potentially vulnerable domains (mostly .fr TLD).
  - Found about 15,000 email redirects.
  - Identified about 10,000 unique target emails.
  - Using public emails, we found private redirection emails.

### What We Are Not Seeing
- Additional insights and potential vulnerabilities not yet explored.

## 2. Stepping Up: DNSSEC

### DNSSEC 101
- **DNSSEC**:
  - Could be an entire talk topic.
  - Key points:
    - DNS is famously insecure and needed a fix.
    - DNSSEC is supported by most modern devices.
    - Root of trust + tree derivation scheme.
    - Ensures authenticity, not privacy.
    - Sometimes requires lockpicking skills.

### Recent DNSSEC Key Rollover Session
- **Demo**: DNSViz

### Issue with Negative Responses
- **Challenge**:
  - Authenticating "example.com is at 1.2.3.4" is easy.
  - Authenticating the absence of "bad.example.com" is trickier.
  - NSEC to the rescue.

### Authenticated Denial of Existence
- **Principle**:
  - NSEC signs "there is no domain between apple.example.com and carrot.example.com."
  - Therefore, bad.example.com does not exist.

### Zonewalking with NSEC
- **Process**:
  - Pick a random name (e.g., "fgfrd.example.com").
  - Query the DNS server.
  - Answer: nothing between "carrot.example.com" and "good.example.com".
  - Repeat with "gooda.example.com" until you loop.

### NSEC Obsolescence
- **NSEC is almost obsolete**:
  - NSEC zone walking no longer works in the real world.
  - NSEC is rarely used anymore.

### Zone Walking with NSEC3
- **NSEC3** (RFC6781, RFC5155):
  - Motivation: Prevent zone enumeration.
  - NSEC3 in a nutshell: SHA1k(domain).
  - Intuition: Same as NSEC but with hashed values.
  - Should hide contents, assuming you can't reverse hash values.
  - Deployed in the real world currently.

### Assumption and Reality
- **Assumption**: Reversing even partially the hash is difficult.
- **Reality**: Multiple off-the-shelf tools can crack NSEC3 hashes.
  - To the best of our knowledge, never used to dig valuable data.

### Demo
- **nsec3walker**
- **hashcat**

### Sudo GPU Brute Force
- **Bringing out the GPU rig!**
  - Just kidding, we have a more modest setup.

### Results
- **Demo and Findings**:
  - Detailed results and findings from the brute force and cracking attempts.

---

This optimized version aims to make the content more structured, clear, and professional.