作者：安天  
来源：[《安天发布针对工控恶意代码TRISIS的技术分析》](https://www.antiy.cn/research/notice&report/research_report/20180911.html
"《安天发布针对工控恶意代码TRISIS的技术分析》")
### 1、概述
2017年8月，安天安全研究与应急处理中心（安天CERT）基于综合情报研判，将针对工业控制系统的恶意代码TRISIS（又名TRITON、HATMAN）列为需要重点分析关注的威胁，并将其命名为“海渊”。该恶意代码在中东某石油天然气厂的工业控制系统中被国外安全研究人员发现，根据各方信息判断，由于攻击者准备不充分，尚未对人员及财产造成重大损失。“海渊”（TRISIS）的目标为施耐德电气公司的安全仪表系统，通过植入固件更改最终控制元件的逻辑以达到攻击目的。其通过Tricon安全仪表系统所使用的TriStation通信协议进行攻击，因此运行此协议的所有安全控制器都可能受到影响。
“海渊”（TRISIS）所攻击的目标是工业控制系统（ICS）中的安全仪表系统（SIS）控制器，其主要瞄准施耐德电气的Tricon安全仪表系统，从而达到在最终控制元件中替换逻辑的目的。安全仪表系统（Safety
Instrumented System），简称SIS，又称为安全联锁系统（Safety Interlocking
System），主要为工厂控制系统中报警和联锁部分，对控制系统中检测的结果实施报警动作或调节或停机控制，是工厂企业自动控制中的重要组成部分。其包括传感器、逻辑运算器和最终执行元件，即检测单元、控制单元和执行单元。SIS系统可以监测生产过程中出现的或者潜伏的危险，发出告警信息或直接执行预定程序，立即进入操作，以防止事故的发生，同时降低事故带来的危害及影响。
安天CERT针对该恶意代码的攻击原理及样本展开了技术分析。发现该恶意代码的攻击流程为利用社工技巧伪装成安全仪表系统的日志软件进入目标网络，之后通过特殊ping包发现安全仪表系统，在确定安全仪表系统可被入侵后，会上传组合后的二进制代码，以改变安全仪表系统的梯形图（即安全仪表系统逻辑），一旦攻击成功，将有可能对工业生产设备、工厂人身安全造成巨大危害，对关键信息基础设施安全、社会安全造成巨大影响。
### 2、“海渊”（TRISIS）攻击原理
#### 2.1 攻击原理简述
“海渊”（TRISIS）和“震网”（Stuxnet）、“Industroyer/CrashOverride”等恶意代码一样具备从工业控制系统中发现特定目标装置的能力。但同时，其更进一步具有直接交互、远程控制和危害安全系统的能力。
“海渊”（TRISIS）采用Python脚本进行编写，并使用Py2EXE伪编译为PE可执行程序，以便于在未安装Python的系统环境下执行。攻击者充分了解安全仪表系统处理过程及环境的具体细节，才能构造有效载荷利用“海渊”（TRISIS）进行攻击，其主要通过修改和部署新的PLC（可编程逻辑控制器）梯形图，以对目标产生预期的影响。
“海渊”（TRISIS）可以改变目标安全仪表的基本逻辑，通过可执行文件将其目标作为在执行时传递给它的命令行参数，其核心功能是通过将四个二进制文件组合到目标上进行工作，其中植入Python脚本中的两个二进制载荷，主要用于准备和加载包含替换逻辑的外部模块（参见图2-1、图2-2）；附加的两个外部的二进制文件，由脚本中的名称专门引用，但位于单独的文件中，其中imain.bin为主要功能载荷（参见图2-3）。
图2-1 植入脚本中的二进制载荷
图2-2 脚本中用于覆盖核心载荷的傀儡程序
图2-3 获取外部独立二进制文件
#### 2.2 攻击流程分析
trilog.exe是“海渊”（TRISIS）的主程序，其原本是Tricon安全仪表系统中的一个模块程序，攻击者利用其进行实施攻击的主要流程参见图2-4：
![
](https://images.seebug.org/content/images/2018/09/201bdb29-28ca-4990-b509-0177eda3e656.png-w331s)
图2-4 TRISIS攻击流程
攻击流程说明：
  1. trilog.exe通过TSAA协议链接TCM（Tricon通信模块），识别并获得一个能够与安全仪表系统通信的系统，并判断是否满足入侵的条件；
  2. 确认可入侵后，识别目标安全仪表系统类型，并用替换逻辑和加载器开发“海渊”（TRISIS）功能代码，构建漏洞利用程序PresentStatus。
  3. 上载PresentStatus到Tricon安全仪表系统中，并执行确保“海渊”（TRISIS）在预期环境下工作；
  4. 构建加载器和核心载荷inject.bin、imain.bin，将“海渊”（TRISIS）传输到包含装载器模块的目标上；
  5. “海渊”（TRISIS）可执行文件运行时，伪装成用于分析日志的软件，利用嵌入的二进制文件来识别控制器上存储器中的适当位置以进行逻辑替换，并上传“初始化代码”（4字节序列）；
图2-5 上传初始化代码
  1. 验证前一步是否成功，然后上传新的PLC梯形图到安全仪表系统；
  2. 上传傀儡程序覆盖核心载荷。
![
](https://images.seebug.org/content/images/2018/09/22074b18-4ca3-4e75-ae0a-789c4eda2955.png-w331s)
图2-6 上传傀儡程序
### 3、“海渊”（TRISIS）样本分析
#### 3.1 “海渊”（TRISIS）与Triconex的通信过程分析
“海渊”（TRISIS）与Triconex的通信主要依赖于TsHi、TsBase、TsLow、TS_cnames等模块，这些模块提供了极为强大的远程连接控制Triconex的代码。
##### 3.1.1 请求连接
“海渊”（TRISIS）通过在Script_test.py中调用TsLow中的connect函数进行连接，我们以此作为入口点，对其协议进行简单分析。
图3-1 connect函数
在connect函数中detect_ip和tcm_connect为关键函数。
图3-2 detect_ip函数
图3-3 tcm_connect函数
在detect_ip函数中使用1502端口，用变量TS_PORT定义；另外，对ping数据包和close数据包定义，分别采用0x06和0x04为两者标识码，如下图3-4。
图3-4 数据包类型标识码定义
在tcm_connect函数中connect_result同样为数据包类型标识码，具体定义见上图3-4，其中关键函数为tcm_exec（type参数的值为1）。
![
](https://images.seebug.org/content/images/2018/09/696bf7d2-1070-47d6-8ba2-63f64cbd7b4a.png-w331s)
图3-5 tcm_exec函数
Struct.pack函数作用为按照给定的格式(fmt)，把数据转换成字符串(字节流)，并将该字符串返回，即packet是把type和data长度按照16进制解释，再加上data和crc16校验的数据包。Struct.pack数据包结构如下：
表1 ![
](https://images.seebug.org/content/images/2018/09/4f084d8d-0241-4a85-b3bc-4fe03fa7b105.png-w331s)
##### 3.1.2 上传PresetStatus
“海渊”（TRISIS）通过使用SafeAppendProgramMod函数上传PresetStatus。
图3-6 PresetStatusField函数
script_code为需要上传的执行代码。该函数为对AppendProgramMin函数的封装，AppendProgramMin函数调用WriteProgram函数（对WriteFunctionOrProgram的封装）。
![
](https://images.seebug.org/content/images/2018/09/f920e4dd-8cf4-4a60-96c2-a082b5563d8d.png-w331s)
图3-7 AppendProgramMin函数（部分）
![
](https://images.seebug.org/content/images/2018/09/5926aa56-eb23-4f34-b1f4-1ab59580446c.png-w331s)
图3-8 WriteFunctionOrProgram函数
AppendProgramMin函数在代码尾部加上CRC校验：
![
](https://images.seebug.org/content/images/2018/09/7efae31b-374c-4817-b7f5-517e2235f820.png-w331s)
图3-9 MyCodeSign函数
在WriteFunctionOrProgram函数中调用AllocateProgram函数向仪表写入程序：
![
](https://images.seebug.org/content/images/2018/09/fa0721c2-12b4-4170-8cf3-5560a1c2136e.png-w331s)
图3-10 AllocateProgram函数
此时对数据包进行一次封装，现在数据包为：
表2 ![