100
80
60
40
20
0
1
10
20
23
68
100
1
10
20
23
68
100
1
10
20
23
68
100
Host
Host
Host
Figure 18: Median latency for all
ﬁles fetched
Figure 19: Median latency for ﬁles
smaller than 1KB
Figure 20: Median latency for ﬁles
larger than 8KB
In Figure 18, we plot the median latencies experienced
by each client. It can be seen that ETX reduces the laten-
cies observed by clients that are further away from the web
server. This is consistent with our earlier ﬁnding ETX tends
to perform better than HOP on longer paths. For host 23,
100 and 20, the median latency under ETX is almost 20%
lower than the median latency under HOP. These hosts are
relatively further away from the webserver running on host
128. On the other hand, for host 1, the median latency un-
der HOP is lower by 20%. Host 1 is just one hop away from
the web server. These results are consistent with the results
in Section 5.4: on longer paths, ETX performs better than
HOP, but on one-hop paths, the HOP metric sometimes
performs better.
To study whether the impact of ETX is limited to large
transfers we studied the median response times for small ob-
jects, i.e. ﬁles that are less than 1KB in size and large ob-
jects, i.e., those over 8KB in size. These medians are shown
in Figures 19 and 20, respectively. The beneﬁt of ETX is
indeed more evident in case of larger transfers. However,
ETX also reduces the latency of small transfers by signiﬁ-
cant proportion. This is particularly interesting as the data
sent from the server to client in such small transfers ﬁts in-
side a single TCP packet. It is clear that even for such short
transfers, the paths selected by ETX are better.
5.8 Discussion
We conclude from our results that load-sensitivity is the
primary factor determining the relative performance of the
three metrics. The RTT metric is the most sensitive to
load; it suﬀers from self-interference even on one-hop paths
and has the worst performance. The PktPair metric is not
aﬀected by load generated by the probing node, but it is
sensitive to other load on the channel. This causes self-
interference on multi-hop paths and degrades performance.
The ETX metric has the least sensitivity to load and it per-
forms the best.
Our experience with HOP leads us to believe that its per-
formance is very sensitive to competing factors controlling
the presence of poor links in the link cache. Consider the
evolution of a route during a long data transfer. When
the transfer starts, the link cache contains a fairly com-
plete topology, including many poor links. The shortest-
path Dijkstra computation picks a route that probably in-
cludes poor (lossy or slow) links. Then as the data transfer
proceeds, Route Maintenance detects link failures and sends
Route Error messages, causing the failed link to be removed
from link caches. Since poor links suﬀer link failures more
frequently than good links, over time the route tends to im-
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
P
C
T
n
a
d
e
M
i
600
500
400
300
200
100
0
HOP
ETX
Metric
Figure 21: Median Throughput of 45 1-minute TCP
transfers with mobile sender using HOP and ETX.
prove. However this process can go too far:
if too many
links are removed, the route can get longer and longer until
ﬁnally there is no route left and the node performs Route
Discovery again. On the other hand, a background load of
unrelated traﬃc in the network tends to repopulate the link
cache with good and bad links, because of the caching of link
existence from overheard or forwarded packets. The compe-
tition between these two factors, one removing links from the
link cache and the other adding links, controls the quality
of the HOP metric’s routes. For example, originally LQSR
sent Link Info messages when using HOP. When we changed
that, to make LQSR with HOP behave more like DSR, we
saw a signiﬁcant improvement in median TCP throughput.
This is because the background load of Link Info messages
was repopulating the link caches too quickly, reducing the
eﬀectiveness of the Route Error messages.
Our study has several limitations that we would like to
correct in future work. First, our data traﬃc is entirely
artiﬁcial. We would prefer to measure the performance of
real network traﬃc generated by real users. Second, we do
not investigate packet loss and jitter with constant-bit-rate
datagram traﬃc. This would be relevant to the performance
of multimedia traﬃc. We would also like to investigate per-
formance of other wireless link quality metrics such as signal
strength.
6. A MOBILE SCENARIO
In the traﬃc scenarios that we have considered so far,
all the nodes have been stationary. In community networks
like [6, 27, 26] most nodes are indeed likely to be station-
ary. However, in most other ad hoc wireless networks, at
least some of the nodes are mobile. Here, we consider a sce-
nario that involves a single mobile node, and compare the
performance of ETX and HOP metrics.
The layout of our testbed is shown in Figure 2. We set up
a TCP receiver on node 100. We slowly and steadily walked
around the periphery of the network with a Dell Latitude
Laptop, equipped with a NetGear card. A process running
on this laptop repeatedly established a TCP connection to
the receiver running on node 100, and transferred as much
data as it could in 1 minute. We did 15 such transfers in
each walk-about. We did 3 such walk-abouts each for ETX
and HOP. Thus, for each metric we did 45 TCP transfers.
The median throughput of these 45 transfers, along with
SIQR is shown in Figure 21. We choose median over mean
since the distribution of throughputs is highly skewed. The
median throughput under HOP metric is 36% higher than
the median throughput under the ETX metric. Note also
that the SIQR for ETX is 173, which is comparable to the
SIQR of 188 for HOP. Since the median throughput under
ETX is lower, the higher SIQR indicates greater variability
in throughput under ETX.
As the sender moves around the network, the ETX met-
ric does not react suﬃciently quickly to track the changes in
link quality. As a result, the node tries to route its packets
using stale, and sometimes incorrect information. The sal-
vaging mechanisms built into LQSR do help to some extent,
but not well enough to overcome the problem completely.
Our results with PktPair (not included here) indicate that
that this problem is not limited to just the ETX metric.
Any approach that tries to measure link quality will need
some time to come up with a stable measure of link quality.
If during this time the mobile user moves suﬃciently, the
link quality measurements would not be correct. Note that
we do have penalty mechanisms built into our link qual-
ity measurements.
If a data packet is dropped on a link,
we penalize the metric as described in Section 2. We are
investigating the possibility that by penalizing the metric
more aggressively on data packet drops we can improve the
performance of ETX.
The HOP metric, on the other hand, faces no such prob-
It uses new links as quickly as the node discovers
lems.
them. The eﬃcacy of various DSR mechanisms to improve
performance in a mobile environment has been well docu-
mented [15]. The metric also removes from link cache any
link on which a node suﬀers even one packet loss. This mech-
anism, which hurts the performance of HOP metric under
heavy load, beneﬁts it in the mobile scenario.
We stress that this experiment is not an attempt to draw
general conclusions about the suitability of any metric for
routing in mobile wireless networks.
Indeed, such conclu-
sions can not be drawn from results of a single experiment.
This experiment only serves to underscore the fact that
static and mobile wireless networks can present two very
diﬀerent sets of challenges, and solutions that work well in
one setting are not guaranteed to work just as well in an-
other.
7. RELATED WORK
There is a large body literature comparing the perfor-
mance of various ad hoc routing protocols. Most of this
work is simulation-based and the ad hoc routing protocols
studied all minimize hop-count. Furthermore, many of these
studies focus on scenarios that involve signiﬁcant node mo-
bility. For example, Broch et al. [7] compared the perfor-
mance of DSDV [23], TORA [22], DSR [15], and AODV [24]
via simulations.
The problem of devising a link-quality metric for static
80.211 ad hoc networks has been studied previously. Most
notably, De Couto et al. [9] propose ETX and compare its
performance to HOP using DSDV and DSR with a small-
datagram workload. Their study diﬀers from ours in many
aspects. They conclude that ETX outperforms HOP with
DSDV, but ﬁnd little beneﬁt with DSR. They only study
the throughput of single, short (30 second) data transfers
using small datagrams. Their experiments include no mo-
bility.
In contrast, we study TCP transfers. We examine
the impact of multiple simultaneous data transfers. We
study variable-length data transfers and in particular, look
at web-like workloads where latency is more important than
throughput. Finally, our work includes a scenario with some
mobility. Their implementation of DSR diﬀers from ours in
several ways, which may partly explain our diﬀerent results.
They do not have Metric Maintenance mechanisms. In their
testbed (as in ours), the availability of multiple paths means
after the initial route discovery the nodes rarely send Route
Requests. Hence during their experiments, the sender eﬀec-
tively routes using a snapshot of the ETX metrics discovered
at the start of the experiment. Their implementation takes
advantage of 802.11 link-layer acknowledgments for failure
detection. This means their link-failure detection is not vul-
nerable to loss, or perceived loss due to delay. Their imple-
mentation does not support salvaging. They mitigate this
in their experiments by sending ﬁve “priming” packets be-
fore starting each data transfer. Their implementation uses
a “blacklist” mechanism to cope with asymmetric links. Fi-
nally, their implementation has no security support and does
not use cryptography so it has much less CPU overhead.
Woo et al. [28] examines the interaction of link quality and
ad hoc routing for sensor networks. Their scheme is based
on passive observation of packet reception probability. Using
this probability, they compare several routing protocols in-
cluding shortest-path routing with thresholding to eliminate
links with poor quality and ETX-based distance-vector rout-
ing. Their study uses rate-limited datagram traﬃc. They
conclude that ETX-based routing is more robust.
Signal-to-noise ratio (SNR), has been used as a link qual-
ity metric in several routing schemes for mobile ad hoc net-
works. For example, in [12] the authors use an SNR thresh-
old value to ﬁlter links discovered by DSR Route Discovery.
The main problem with these schemes is that they may end
up excluding links that are necessary to maintain connec-
tivity. Another approach is used in [11], where links are still
classiﬁed as good and bad based on a threshold value, but
a path is permitted to use poor-quality links to maintain
connectivity. Punnoose et. al. [25] also use signal strength
as a link quality metric. They convert the predicted sig-
nal strength into a link quality factor, which is used as-
sign weights to the links. Zhao and Govindan [29]. studied
packet delivery performance in sensor networks, and discov-
ered that high signal strength implies low packet loss, but
low signal strength does not imply high packet loss. We plan
to study the SNR metric in our testbed as part of our future
work. Our existing hardware and software setup does not
provide adequate support to study this metric.
Awerbuch et. al. [4] study impact of automatic rate se-
lection on performance of ad hoc networks. They propose a
routing algorithm that selects a path with minimum trans-
mission time. Their metric does not take packet loss into
account. It is possible to combine this metric with the ETX
metric, and study performance of the combined metric. This
is also part of our future work.
An implementation of AODV that uses the link-ﬁltering
[12] Y.-C. Hu and D. B. Johnson. Design and
demonstration of live audio and video over multi-hop
wireless networks. In MILCOM, 2002.
[13] P. Huang and J. Heidemann. Capturing tcp burstiness
for lightweight simulation. In SCS Multiconference on
Distributed Simulation, Jan. 2001.
[14] R. Jain. The Art of Computer Systems Performance
Analysis. John Wiley and Sons, Inc., 1991.
[15] D. B. Johnson and D. A. Maltz. Dynamic source
routing in ad-hoc wireless networks. In T. Imielinski
and H. Korth, editors, Mobile Computing. Kluwer
Academic Publishers, 1996.
[16] R. Karrer, A. Sabharwal, and E. Knightly. Enabling
Large-scale Wireless Broadband: The Case for TAPs.
In HotNets, Nov 2003.
[17] S. Keshav. A Control-theoretic approach to ﬂow
control. In SIGCOMM, Sep 1991.
[18] A. Khanna and J. Zinky. The Revised ARPANET
Routing Metric. In SIGCOMM, 1989.
[19] L. Krishnamurthy. Personal communication, Dec.
2003.
[20] J. Moy. OSPF Version 2. RFC2328, April 1998.
[21] K. Park, G. Kim, and M. Crovella. On the
relationship between ﬁle sizes, transport protocols and
self-similar network tarﬃc. In ICNP, 1996.
[22] V. D. Park and M. S. Corson. A highly adaptive
distributed routing algorithm for mobile wireless
networks. In INFOCOM, Apr 1997.
[23] C. E. Perkins and P. Bhagwat. Highly dynamic
destination-sequenced distance vector routing (dsdv)
for mobile computeres. In SIGCOMM, Sep. 1994.
[24] C. E. Perkins and E. M. Royer. Ad-hoc on-demand
distance vector routing. In WMCSA, Feb 1999.
[25] R. Punnose, P. Nitkin, J. Borch, and D. Stancil.
Optimizing wireless network protocols using real time
predictive propagation modeling. In RAWCON, Aug
1999.
[26] MIT roofnet. http://www.pdos.lcs.mit.edu/roofnet/.
[27] Seattle wireless. http://www.seattlewireless.net/.
[28] A. Woo, T. Tong, and D. Culler. Taming the
underlying challenges of reliable multihop routing in
sensor networks. In SenSys, Nov 2003.
[29] J. Zhao and R. Govindan. Understanding packet
delivery performance in dense wireless sensor
networks. In SenSys, Nov. 2003.
approach, based on measurement of loss rate of unicast probes,
was demonstrated in a recent IETF meeting [3, 19]. We plan
to test this implementation in our testbed.
8. CONCLUSIONS
We have examined the performance of three candidate
link-quality metrics for ad hoc routing and compared them
to minimum hop-count routing. Our results are based on
several months of experiments using a 23-node static ad hoc
network in an oﬃce environment. The results show that
with stationary nodes the ETX metric signiﬁcantly outper-
forms hop-count. The RTT and PktPair metrics perform
poorly because they are load-sensitive and hence suﬀer from
self-interference. However, in a mobile scenario hop-count
performs better because it reacts more quickly to fast topol-
ogy change.
Acknowledgments
Yih-Chun Hu implemented DSR within the MCL framework
as part of his internship project. This was our starting point
for developing LQSR. We would like to thank Atul Adya,
Victor Bahl and Alec Wolman for several helpful discussions
and suggestions. We would also like to thank the anonymous
reviewers for their feedback. Finally, we would like to thank
the support staﬀ at Microsoft Research for their help with
various system administration issues.
9. REFERENCES
[1] A. Adya, P. Bahl, J. Padhye, A. Wolman, and
L. Zhou. A multi-radio uniﬁcation protocol for IEEE
802.11 wireless networks. In BroadNets, 2004.
[2] D. G. Andersen, H. Balakrishnan, M. F. Kaashoek,
and R. Morris. Resilient overlay networks. In SOSP,
2001.
[3] AODV@IETF. http://moment.cs.ucsb.edu/aodv-ietf/.
[4] B. Awerbuch, D. Holmer, and H. Rubens. High
throughput route selection in mult-rate ad hoc
wireless networks. Technical report, Johns Hopkins CS
Dept, March 2003. v 2.
[5] P. Bardford and M. Crovella. Generating
representative web workloads for network and server
performance evaluation. In SIGMERICS, Nov. 1998.
[6] Bay area wireless users group.
http://www.bawug.org/.
[7] J. Broch, D. Maltz, D. Johnson, Y.-C. Hu, and
J. Jetcheva. A performance comparison of multi-hop
wireless ad hoc network routing protocols. In
MOBICOM, Oct. 1998.
[8] D. De Couto. Personal communication, Nov. 2003.
[9] D. De Couto, D. Aguayo, J. Bicket, and R. Morris.
High-throughput path metric for multi-hop wireless
routing. In MOBICOM, Sep 2003.
[10] R. Draves, J. Padhye, and B. Zill. The architecture of
the Link Quality Source Routing Protocol. Technical
Report MSR-TR-2004-57, Microsoft Research, 2004.
[11] T. Goﬀ, N. Abu-Aahazaleh, D. Phatak, and
R. Kahvecioglu. Preemptive routing in ad hoc
networks. In MOBICOM, 2001.