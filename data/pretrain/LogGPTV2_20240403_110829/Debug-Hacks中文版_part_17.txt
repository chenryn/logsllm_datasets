59
59
HACK#21  crash 命令的使用方法I1 119 
TOTAL SLABS SSIZE
1
4
一
73295 14659
为
4k
2
---
## Page 138
124
可见 list_head结构的偏移量为 Ox30，下面用-o选项指定。
偏移量，可以用同样的方式遍历链表。
下面是结构中包含 list_head 结构成员的例子。这种情况下，可以用-o 选项指定
可以从中看出 modules 链表连接着 38 项。
list 命令可以遍历list_head结构，按照顺序显示地址。
list 命令
释放了。
访问某段内存产生kernel panic 的话，用这种方法就能看出，那段内存实际上已被
120 1   第 3章  内核调试的准备
crash>
SIZE: 0x40
struct packet_type ip_packet_type;
crash> whatis ip_packet_type 
crash>
38
crash> list modules | wc -l
ffffffff88009a88
ffffffff88302c08
crash> list modules 
struct list_head modules;
 Crash> whatis modules
net_device *);
struct packet_type {
ffffffff88017d88
ffffffff812cd420
[0x30] struct list_head list;
[0x28] void *af_packet_priv;
[0x10] int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct
[0x8] struct net_device *dev;
[0x0] _be16 type;
struct sk_buff *(*gso_segment)(struct sk buff *, int);
www.TopSage.com
/*出现了 list_head */
---
## Page 139
一步调查。
net 命令可以列出网络设备。它能显示 net_device 结构的地址，据此可以进行进
net 命令
汇编语言查找相应的源代码"、“HACK#33kernel panic（空指针引用篇》”等。
mod 命令可以加载模块信息、符号信息和调试信息等。详情参见“HACK#14从
mod 命令
各项的 func 成员。
加上-s选项，可以同时显示链表项的成员。下面的例子遍历链表，并进一步显示
可见 ip_packet_type的list 成员中连接着 4 项。
struct net_device {
crash> struct net_device ffff81087ea24000
ffff81007d50a000 sit0
ffff81007f7b8000
ffff81007ea24000
ffffffff8030f680
crash> net
func = 0xffff812275f3 ,
ffffffff81327730
func = 0xfffffff813052b0 ,
ffffffff814188d0
func = oxffff813052fo ,
ffffffff814188a0
func = oxfffffff810353e5 ,
ffffffff813288a0
sunt'adA tayped s- adsiayoed dr eexe o- istl  list -o Bx30 ip_packet_type
fff81007elff000ethl
fff81007ebbd000
NET_DEVICE
etho
eth3
eth2
lo
NAME
172.16.0.153
192.168.0.156
192.168.0.155
127.0.0.1
IP ADDRESS(ES)
www.TopSage.com
HACK#21 crash 命令的使用方法’121
---
## Page 140
126
rd命令可以直接读取内存地址。使用范例请参见本hack的bt、wr命令。
rd命令
时间。详情参见“HACK#40实时进程停止响应”。
-a选项可以显示命令行参数和环境变量。
ps命令显示进程信息。
ps命令
122|第3章内核调试的准备
rung命令显示进程调度的运行队列。
runq 命令
-t选项可以显示进程的运行时间、开始时间，以及在用户空间和内核空间的运行
ENV:CONSOLE=/dev/console
ARG:syslogd-m0
PID:2157TASK:ffff81007e095040CPU:0COMMAND:"syslogd
crash>ps -a syslogd
pprev=0xffff804bae90
namehlist={
next=0x0,
_=/sbin/syslogd
HOME=/
SHLVL=3
PREVLEVEL=N
previous=N
LANG=en_US.UTF-8
PWD=/
RUNLEVEL=3
runlevel=3
PATH=/sbin:/usr/sbin:/bin:/usr/bin
INIT_VERSION=sysvinit-2.86
TERM=Linux
SELINUX INIT=YES
www.TopSage.com
---
## Page 141
置列表。内容同 zcat/proc/config.gz。
如果在内核配置中启用了 CONFIG_IKCONFIG，那么执行 sys config 即可显示内核配
等。同crash启动时显示的信息。
sys 命令显示系统信息，如时间、CPU 的平均负载、表示 kernel panic 原因的消息
sys 命令
sym命令用于解析符号（symbol）。sym -l等同于 Systemp.map。
sym 命令
swap 命令显示各个交换设备的大小等信息。基本上等同于 swapon-S。
swap 命令
其他示例请参见[HACK#14]。
struct命令可以显示结构的定义，并结合显示实际地址中的数据。
struct 命令
的信息。-l选项等同于 kill-l，显示已定义的信号编号。
sig 命令显示进程的信号处理程序（signal handler），以及等待（pending）的信号
sig 命令
CONFIG_X86=y
CONFIG_64BIT=y
CONFIG_X86_64=y
# Tue Dec 16 22:33:31 2008
# Linux kernel version: 2.6.18
# Automatically generated make config: don't edit
crash> sys config
struct timespec {
crash> struct timespec xtime
tc_nsec = 0x25218473
tv_sec = 0x492ae39c,
www.TopSage.com
HACK#21 crash 命令的使用方法I 123 
127
---
## Page 142
128
123
变量 jiffies。修改后，表示系统启动后运行时间的 UPTIME 增加了 3天多。
wr 命令可以更改内存的内容。下面的例子用crash更改了运行系统中表示时间的
wr 命令
它是list_head 结构的变量。
whatis 命令显示符号等结构的定义。下面是全局变量 modules 的显示范例，可见
whatis 命令
timer命令显示定时器队列中的项目。
timer命令
task命令可以显示task_struct结构，详情参见[HACK#40]等。
task命令
使用 sys -panic 可以故意发生 kernel panic,其效果同echo c>/proc/sysrq- trigger。
124 |第3章内核调试的准备
crash> sys
ffffff81457200: 000000010ffc88c0
crash> rd jiffies_64
crash> rd jiffies_64
crash> sys
struct list_head modules;
crash> whatis modules
+++
CONFIG_MMU=y
CONFIG_SEMAPHORE_SLEEPERS=y
CONFIG_STACKTRACE_SUPPORT=y
CONFIG_LOCKDEP_ SUPPORT=y
crash> wr jiffies_64 10ffc7651
fffffff8145720o: 00000000fffc6751
DUMPFILE:/dev/mem
CPUS:2
KERNEL: /boot/vmlinux-2.6.18
UPTIME: 00:00:45
 DATE:
：F
Fri Dec 19 20:26:07 2008
www.TopSage.com
.......
---
## Page 143
exit 命令退出 crash 的例子。
入 crash。利用该选项可以让 crash 自动化。下面是执行 help 命令，然后再执行
把要输入crash的命令写到文件中，并用-i选项指定该文件，即可将命令自动输
-i选项
下面介绍crash启动时的一些很方便的选项。
crash 的启动选项
[bash]#
For help on output options, enter "help output"
For help on input options, enter "help input".
For help on any command above, enter "help "
crash version: 4.0-7.4 gdb version: 6.1
extend
exit
eval
20
btop
ascii
alias
[bash]# crash -s -i crash_cmd.txt
exit
help
[bash]# cat crash_cmd.txt
#*
DUMPFILE: /dev/mem
UPTIME: 3 days, 02:35:10
KERNEL: /boot/vmlinux-2.6.18
DATE:F
CPUS:2
Fri Dec 19 20:26:56 2008
mach
6
6
kmen
5
fuser
foreach
files
/*显示帮助之后返回bash */
net
 mount
repeat
a
ptov
ptob
mod
www.TopSage.com
timer
task
%
sym
Swap
struct
sig
set
search
rung 
HACK#21 crash 命令的使用方法 1 125
/*UPTIME增加了3天多*/
/*仅仅执行了命令50秒*/
whatis
waitq
vtop
union
---
## Page 144
130>-s选项
中可用的 NMI watchdog（参见[HACK#23]）相比，其可靠性更高。但是，该功能
可以说，watchdog timer 与其他不需要特殊硬件的 softdog、如 Intel 等部分处理器
些规格也包含在本 hack 讲述的 watchdog timer（下文简写为 WDT）中。IPMI WDT
watchdog timer。IPMI 是 Intel 等几家计算机相关生产商创立的规格，规定了计算
IPMI watchdog timer 是个遵循 Intelligent Platform Management Interface 规格的
Z乙#
MACM
参考文献
本 hack 介绍了crash 命令。熟悉该命令可以进行有效的分析。
在.crashrc 文件中写好命令，crash 启动时就会执行这些命令。.crashrc 应当放在
crash 的初始化文件
如上例所示，指定-s 选项可进入安静模式，crash 启动时不再显示多余的信息。
并非所有 PC 和服务器都有。一般而言，中高端服务器安装该功能的较多。
独立于CPU,采用了专用硬件，因此系统死机时基本上可以保证执行重启等处理。
机各个部件的温度、电压、风扇等状态的获取方法，以及控制电源的接口等。这
什么是IPMI watchdog timer
主目录或者当前目录下，可用来写一些默认设置，十分方便，如 set命令、alias
126 1 第 3章内核调试的准备
总结
命令等。
 White Paper: Red Hat Crash Utility
 http://people.redhat.com/anderson/crash_whitepaper/
讲述中高端服务器安装的IPMl watchdog timer 的配置方法，以备死机
溃转储
死机时利用IPMIwatchdogtimer获取崩
时进行调试。
www.TopSage.com
一大岩尚宏
---
## Page 145
表3-8
表3-7ipmi_watchdog模块的主要参数
timeout、pretimeout、action、preaction的关系如图3-4所示。
该模块的主要参数如表3-7所示，各个参数的含义如表3-8至表3-10所示。另外，
下面介绍一下当IPMI的内核功能作为模块提供的情况。模块名为ipmi_watchdog.ko。
ipmi_watchdog模块
→IPMI top-level message handler里面的 IPMI Watchdog Timer 项。
式改为内嵌方式，可以执行makemenuconfig，启用DeviceDrivers→Characterdevices
的，并以模块的方式提供。如果使用的发行版的默认值为禁用，或者希望由模块方
等客户端程序。关于内核配置，在RHEL等的大多数发行版中，IPMI是默认启用
要在Linux中使用IPMI，需要在内核配置中启用IPMI，还要用到ipmitools、FreeIPMI
power_off
在 Linux中使用 IPMI
止响应”介绍了利用IPMIWDT获取崩溃转储进行调试的例子。
只有在内核的转储获取功能仍然能正常工作的情况下才有用，但即使如此也非常
WDT的功能，可以在系统死机后、重启之前获得崩溃转储（crashdump）。当然
障，但不论如何，我们需要某些信息才能寻找故障原因。在Linux中，利用IPMI
一旦WDT执行了重启，就说明系统死机了。死机原因有软件bug，也有硬件故
power_cycle