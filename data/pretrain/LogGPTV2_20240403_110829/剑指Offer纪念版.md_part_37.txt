不使用新的变量，交换两个变量的值。比如有两个变量 a、b，我们希
相关问题：
本题考点：
输入正数、
测试用例：
本题完整的源代码详见47_AddTwoNumbers项目。
源代码：
return numl;
while(num2!=0);
把这个过程想清楚之后，
考查发散思维能力。当十、一、×、÷运算符都不能使用时，应聘
num2
numl = sum;
考查对二进制和位运算的理解。
carry=（num1&num2）的友元类型，因此不能调用它的私有构造函数。
MakeSealed的构造函数。非常遗憾的是，Try不是
在调用Try的构造函数的时候，会跳过SealedClass2而直接调用
oublic:
class Try:public SealedClass2
不能通过编译。比如我们从 SealedClass2中继承出类型Try：
会引起编译错误。
SealedClass2中调用MakeSealed的构造函数和析构函数都不
构函数都是私有的，但由于类SealedClass2是它的友元类型，因此在
也可以在堆上创建实例。尽管类MakeSealed的构造函数和析
public:
private:
template class MakeSealed
样的类型呢？办法还是有的，不过需要一定的技巧。请看如下代码：
新奇的解法：利用虚拟继承，能给面试官留下很好的印象
class
注：第二种方法的可移植性不好。虽然SealedClass2在Visual Studio中
通过上面的分析，我们发现从SealedClass2继承的类，一旦实例化就会
但当我们试图从SealedClass2中继承一个类并创建它的实例的时候，却
由于类SealedClass2是从类MakeSealed虚继承过来的，
Try(）
这个SealedClass2使用起来和一般的类型没有区别，我们可以在栈上、
~MakeSealed(){}
MakeSealed()
friend T;
能不能实现一个与一般的类型相比除了不能被继承之外其他用法都一
SealedClass2:virtual public MakeSealed
一名企面试官精讲典型编程题（纪念版）
---
## Page 255
图6.3应聘者的综合能力的组成
和发散思维能力等方面的综合实力（如图6.3所示）。
需要表现自已的沟通能力和学习能力，以及知识迁移能力、抽象建模能力
本章小结
新的GCC中还不支持模板参数类型作为友元类型。
模能力
抽象建
面试是我们展示自己综合素质的时候。除了扎实的编程能力，我们还
本题考点：
本题完整的源代码详见48_SealedClass项目。
维能力
源代码：
发散思
考查对C++多个概念的理解，比如构造函数、模板、友元等。
马上从把构造函数定义为私有函数出发去寻找解题方法。
考查发散思维能力。当要求设计一个不能被继承的类时，应聘者要
移能力
知识迁
的综合
素质
应聘者
编程能
力
沟通能
学习能
力
力
第6章
面试中的各项能力241
---
## Page 256
242剑指Offer—
试新的办法。
我们充分发挥发散思维的能力，跳出常规思路的束缚，从不同的角度去尝
先用适当的数据结构表述模型，并分析模型中的内在规律确定计算方法。
类型的问题来考查我们抽象建模的能力。为了解决这种类型的问题，我们
结解题方法。
的方法。这要求我们平时要有一定的积累，并且每做完一道题之后都要总
之前可以做一些练习。如果面试的时候碰到类似的题目，就可以应用之前
单问题的过程中受到启发，最终解决较为复杂的问题。另外，我们在面试
道难题之前，会问一道相关但比较简单的题目，他希望我们能够从解决简
学习能力。
从而提出有针对性的问题。通常面试官认为善于提问的人有较好的沟通和
会留意我们回答问题时的言语谈吐，还会关注我们是否能抓住问题的本质
有些面试官喜欢在面试的时候限制使用常规的思路。这个时候就需要
有一类很有意思的面试题是从日常生活中提炼出来的，面试官用这种
知识迁移能力能帮助我们轻松地解决很多问题。有些面试官在提问一
面试官对沟通能力、学习能力的考查贯穿着面试的始终。面试官不仅
一名企面试官精讲典型编程题（纪念版）
---
## Page 257
也衷心祝愿每个应聘者都能拿到自己心仪的Offer。
望应聘者能够少犯甚至不犯错误，在面试过程中充分表现出自己的综合素质，同时
误；而在第二个案例（详见7.2节）中，我们将看到面试官所认可的表现。我们希
在第一个案例（详见7.1节）中，我们将看到面试过程中很多应聘者都曾犯过的错
的时候向面试官询问薪资情况，或者立即打听面试结果。
者可以从当前招聘的项目及其团队等方面提出几个问题。不建议应聘者在技术面试
力（详见第6章）。
力和学习能力，并有可能考查应聘者的知识迁移能力、抽象建模能力和发散思维能
在面试过程中，面试官除了关注应聘者的编程能力外，他还会关注应聘者的沟通能
晰的思路，从而解决复杂的难题（详见第4章）。很多面试题都不止一种解决方案
解成两个或者多个小问题再递归地解决小问题。这3种方法能够帮助应聘者形成清
象化，也可以尝试举几个具体的例子去分析隐含的规律，还可以尝试把大的问题分
（详见第3章）。如果碰到的题目很难，应聘者可以尝试画图让抽象的问题变得形
轻心，一定要从基本功能、边界条件和错误处理等方面确保代码的完整性和鲁棒性
会要求应聘者编程实现一两个函数。如果碰到的面试题很简单，应聘者也不能掉以
和算法等方面考查应聘者的基础知识是否扎实全面（详见第2章），并且很有可能
实现了哪些算法等），以及最终对项目组的贡献。
参照STAR模型，着重介绍自己完成的工作（包括基于什么平台、用了哪些技术、
解应聘者的项目经历及掌握的技能开始的。在介绍自己的项目经历时，应聘者可以
接下来是两个典型的面试案例，我们从中可以直观地感受到面试的整个过程。
在面试结束前的几分钟，面试官会给应聘者机会问几个最感兴趣的问题。应聘
接着进入重头戏技术面试环节。在这一环节中面试官会从编程语言、数据结构
在第一章中，我们讨论了面试的流程。通常一轮面试是从面试官对照着简历了
两个面试案例
第7章
---
## Page 258
244
剑指Offer-
0了。接下来再用n2+2初始化nl，所以nl的值就是2。
案例一：（面试题49）把字符串转换成整数
int
publi
private:
class A
能分析一下这段代码的输出？
（递给应聘者一张A4纸，上面有一段打印的代码，如下面所示）。你能不
年了？
[注：应聘者这个问题的回答是错误的，详见后面的“面试官点评”]
应聘者：在构造函数的初始化列表中，n2先被初始化为0，n2的值就是
return0;
a.Print();
Aa;
_tmain(int argC,_TCHAR*argv[])
void Print()
A():n2(0）， n1(n2 + 2)
int nl;
应聘者：（一脸困惑）不是这样吗？我不太清楚。
面试官：C++是按照在初始化列表中的顺序初始化成员变量的吗？
面试官：
应聘者：（看了一下代码，略作思考）nl是2，而n2是0。
int
面试官：也是C/C++的老程序员了嘛（微笑），那先问一个C++的问题
应聘者：
面试官：看你简历上写的是精通C/C++语言，这两门语言你用了几
std::cout <<"n1:"<< n1<<", n2: "<<n2<< std::endl;
n2;
一名企面试官精讲典型编程题（纪念版）
为什么？
：从大一算起的话，快六、七年了。
---
## Page 259
如下：
的情况。
细检查一下看看。
int.StrToInt(char* string)
问题？
整数这个功能。
"123"，它的输出是数字123。
中atoi的作用？
言过其实了。算了，C++就不接着问了，看看你的编程能力。
应聘者：（从头开始读代码）哦，不好意思，忘了检查字符串是空指针
应聘者拿起笔，在原来代码上添加两行新的代码。修改之后的代码
面试官：这么快？（稍微看了看代码）你觉得这代码有没有问题？仔
我出的题目有这么简单吗？你也太小看我了。
return number;
应聘者：（放下笔）我已经写好了。
while(*string != 0)
intnumber
应聘者：
面试官：对的。现在就请你写一个函数StrToInt，实现把字符串转换成
应聘者：atoi 用来把一个字符串转换成一个整数。比如输入字符串
面试官心理：
应聘者马上开始在白纸上写出了如下代码：
面试官：
对成员变量的初始化顺序完全没有概念就号称自己“精通”C++，也太
面试官心理：
++string;
number