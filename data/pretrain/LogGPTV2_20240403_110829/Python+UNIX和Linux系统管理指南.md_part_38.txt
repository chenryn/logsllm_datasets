unning install_lib
riting
eating
touch hello-egg·py
第9章
cd /tmp
packages = find_packages(),
version = "o.1",
'name = "Helloworld",
manifest
g top-level names toHelloworld.egg-info/top_level.txt
dist
/9801-s°ot-xsoew4spq/pTrnq. 8utppe pue 38a·s'zAd-t'0-PrxomoTroH/4s1p.
build/bdist.macosx-10.5-i386
build
file
www.TopSage.com
8
---
## Page 283
setup.py文件：
以下是一个简单的Python脚本，显示目录中的符号链接文件，其相应的实际文件位置，
来，我们更详细地介绍如何创建一个Python脚本并且构建一个egg。
正如你所看到的，创建一个egg非常简单。因为这里的egg实际上是一个空文件，接下
安装egg:
以及实际文件是否存在：
def main():
def get_links(directory):
#!/usr/bin/env python
import sys
import os
Finished processing dependencies for Helloworld==0.1
Processing dependencies for HelloWorld==0.1
Installed /Library/Python/2.5/site-packages/HelloWorld-0.1-py2.5.egg
Processing Helloworld-0.1-py2.5.egg
Password:
sudo easy_install HelloWorld-0.1-py2.5.egg
6 sudo easy_install Helloworld-0.1-py2.5.egg
--I--I-MI-
-rw-r--r--
X-IX-IXMIP
drwxr-xr-x
print get_links(directory)
if not len(sys.argv)
return file_list
exists
abspath
sys.exit(1)
(3 ngift wheel 102 Mar 10 06:53 build
1 ngift
1 ngift
3ngift
wheel
wheel
==2:
102 Mar 10 06:53 dist
 0 Mar 10 06:50 hello-egg.py
www.TopSage.com
filename)
包管理丨269
君
---
## Page 284
现在安装egg：
验证egg内容。
进行包含。这里暂时忽略entry_points部分。
这里声明的包名为symlinkator，版本是0.1，并且setuptols会尽力查询适合的Python文件
270
$ easy_install dist/symlinkator-0.1-py2.5.egg
$ ls-l dist
writing
$ python setup.py bdist_egg
setup(
from setuptools import setup,find_packages
total4
removing
creating
copying
8
creating
writing manifest file
····
H
writing
writing
writing
8
opying
reating
opying
reating
eating
rning:
name ="symlinkator"
第9章
version=
g symlinkator.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INF0
dist
'dist/symlinkator-0.1-py2.5.egg'
build/bdist.linux-x86_64
'console_scripts': [
'build/bdist.1inux-x86_64/egg'
build
，进入创建的dist目录，验证其中包含了一个egg：
'linkator = symlinkator.symlinkator:main',
"0.1",
'build/lib'
www.TopSage.com
does not exist --no Python modules to install
 and adding 'build/bdist.linux-x86_64/egg' to it
---
## Page 285
望它调用symlinkator.symlinkator模块中的main()函数。当安装了egg之后，这个
在这个示例中，我们希望有一个名为linkator的脚本，并且当脚本被执行时，我们希
setup.py中的相关内容：
自动创建一个控制台脚本，指定的信息可以放在setup-Py文件中。以下是来自之前一示例
进入点及控制台脚本
以下是运行get_links()函数的目录，这或许是你感兴趣的地方：
linkator脚本及python二进制文件都被放置到相同目录下：
在这本书中介绍的进入点类型，是控制台脚本变量。仅需要给定一些信息，setuptools会
接下来，启动IPython，加载并使用我们的模块：
以下是setuptools的文档页：
#1/home/jmjones/local/python/scratch/bin/python
$ ls -1~/logs/
 In [1]: from symlinkator.symlinkator import get_links
from pkg_resources import load_entry_point
#EASY-INSTALL-ENTRY-SCRIPT:
Out[2]:
Finished processing dependencies for symlinkator==0.1
lrwxrwxrwx
Processing dependencies for symlinkator==0.1
importsys
例。此外，这个关键字还用来支持Automatic ScriptCreation（自动脚本创建）。
进入点用来支持服务的动态发现或是项目提供的插件。查看Dynamic Discovery of 
rw-r--r--
totalo
Services andPlugins（动态服务发现和插件）可以获得详细说明及参数格式的示
'console_scripts':[
'symlinkator==0.1','console_scripts','linkator'
0 2008-05-03 15:09 fetchmail.1og.1
0 2008-05-03 15:09 fetchmai1.1og.0
www.TopSage.com
'/home/jmjones/logs/fetchmail.log.3', False),
包管理丨271
---
## Page 286
#1/usr/bin/envpython
# liten 0.1.4.2 -- deduplication command-line tool
参阅例9-2，查看为命令行工具使用的setup·py以及由Noah创建的库：
描述，第二件是指定download_url的值。我们在第4章已经对ReST格式进行了介绍。
这个过程仅与创建egg稍有不同。有两件事情需要引起注意，第一件是记住在
Index（Python包索引l）是非常简单的过程。
果。这是开源软件开发的一个最吸引人的地方。庆幸的是，上传包到Python Package
使用Python包索引注册一个包
循上面列出的语法，并且定义一个可以运行命令行工具的函数。
理解进人点会有一些复杂，但站在更高的层次上来看，唯一需要知道的是，可以使用进
到指定的地方。对比模式调用前一示例中的脚本时，结果如下：
一个console_scripts进入点时，setuptools会创建一个脚本，该脚本可以调用你的代码
实际上，理解脚本中的任何代码可能都不重要，重要的是要知道当你在setup·py中定义
except ImportError:
例9-2：用于上传到Python Package Index的简单的setup.Py
有正确地格式化成ReST，当你上传文档的时候，文本将显示成纯文本，而不是HTML。
工具ReSTless来预览格式化文本，以确保当你预览时文档能被正确地格式化。如果你没
法，因为在上传到cheeseshop时，它可以转化为HTML。可以使用Aaron Hillegass创建的
尽管之前讨论了ReST格式，在这里应该再强调一下，以ReST来格式化文档是一个好想
如果你编写了一个非常好的工具或是模块，很自然地，你会希望与其他人共享你的成
入点来安装脚本，它可以作为用户路径上的命令行工具来使用。为了这样做，仅需要遵
你看到的所有结果都是由setuptools产生。理解该脚本中的所有代码的含义并不重要
try:
#Author:Noah Gift
 from setuptools import setup, find_packages
from ez_setup import use_setuptools
sys.exit(
[('fetchmail.log.old',
$linkator~/logs/
load_entry_point('symlinkator==0.1', 'console_scripts', 'linkator')()
第9章
www.TopSage.com
X
DG
---
## Page 287
介绍的，进入点允许从命令行运行工具并且安装到默认的脚本目录。download_url非常
与symlinkator示例相比，setup.py中添加了一些额外的字段。这些额外字段包括
通过setup.Py文件，现在可以通过使用下面的命令自动在Python Package Index中注册一
个包：
setup(
f.close()
f = open(os.path.join(os.path.dirname(_file_), 'docs', 'index.txt'))
version = '0.1.4.2'
import os,sys
Serverresponse(2oo):0k
$ python setup.py register
writing manifest file‘
writing
writing
writing
from setuptools import setup, find_packages
running register
use_setuptools()
license='MIT'
author='Noah Gift',
classifiers=[
long_description=long_description,
name='liten',
top-level
'Intended Audience :: Developers'
'Development Status::4-Beta'
www.TopSage.com
包管理丨273
PDG
---
## Page 288
我们可以从哪里学到更多东西..
将其放到在Python Package Index注册的字段中。
index.txr文件中指定。index.txt文件是按ReST进行格式化的，setup.py脚本读入信息，
到你创建的egg的链接。long_description复用保存在/doc相对目录下的文档，该目录在
时，典型安装包的方法是这样的：
何工作，setuptools在哪里得到了增强，仍是很重要的事情。当distutils用来创建发布包
来部分setuptools库被加人到标准库中是迟早的事情。这也就是说，知道distutils包是如
在写这一小节的时候，setuptools是创建包和向多个人进行发布的首选方法，并且看起
不要忘记，还有Python邮件列表http://mail.python.org/pipermailldistutilssig/。
Architectural overview of pkg_resources and Python eggs in general
包资源模块
setuptools模块
Pythoneggs
Easy install
274丨第9章
考虑到创建发布包，我们介绍以下四个主题：
Distutils
以下是一些重要的资源：
Architectural Overview of pkg_resources and Python Eggs in General
http://peak.telecommunity.com/DevCenter/PkgResources
http://peak.telecommunity.com/DevCenter/setuptoolsThe package resources module
http://peak.telecommunity.com/DevCenter/PythonEggsThe setuptools module
http://peak.telecommunity.com/DevCenter/EasyInstall
如何写一个安装脚本，这里是文件setup.Py；
创建二进制文件，例如，rpms,Solaris,pkgtool,和HP-UX swinstall.
如何创建一个源码发布包；
setup.py文件中的基本配置选项；
www.TopSage.com
XC
DG
---
## Page 289
你会看到下面的输出：
和setup-py文件在相同的目录中），可以比较容易地创建一个源码发布包：
现在我们有了一个基本的setup·py脚本，通过运行这个命令（该命令与脚本、README
第三步：创建一个发布版。
重依赖等）。这里不会进一步介绍高级配置，但是建议在官方的Python在线文档中阅读
对包进行识别。请注意，这是一个非常简单的示例，其中使用了许多选项（例如处理多
值得注意的是，
第二步：在相同的目录下创建setup.py作为你的脚本。
更多内容。
第一步：创建一些代码。让我们使用以下这个简单的脚本作为一个发布示例：
演示distutils是如何工作的最好方式如下所示：
running sdist
python setup.py sdist
setup(name="distutils_example",
from distutils.core import setup
#Installer for distutils example script
if_
#Distutils Example.Version 0.1
#1/usr/bin/env python
warning: sdist:.manifest template 'MANIFEST.in' does not exist
making hard links in distutils_example-o.1...
creating distutils_example-0.1
author_email
def
(using default file list)
init
我们传递给setup()的多个关键参数，这些参数在之后可以通过元数据
"All I do is print this message."
(self):
 script we will package
:"PI:EMAIL",
I am a distutils distributed script."\
www.TopSage.com
包管理丨275
PDG
---
## Page 290
建和安装过程是一次性完成的，但是你或许会希望选择一个自定义的创建方式，就像下
构建HP-UX swinstall:
构建Solaris pkgtool:
此这对你来说不应该是个问题。将一些虚拟机保持在你可以随时激活的状态，这样在你
来完成重要工作，因此不能在OS X这样的系统上创建rpm包。由于有许多虚拟产品，因
如果你喜欢创建二进制包，这里有一些示例。需要注意的是，他们依赖底层的操作系统
可以从输出结果中看出，现在只需要解包，然后安装，如下所示：
那之后，他意识到使用Buildout部署Plone3.x站点仅仅是冰山的一角。
以创建可复用的跨平台程序。JimFulton使用Buildout的经历来自部署Plone 3.x站点。在
应用程序可以是Python程序或是其他程序，例如Apache。Buildout的一个主要目标是可
Buildout是由Zope公司的JimFulton开发的一个工具，可以管理创建的新应用程序。这些
Buildout