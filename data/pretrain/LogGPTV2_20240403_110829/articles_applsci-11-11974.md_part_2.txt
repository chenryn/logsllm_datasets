theheaderinformation(e.g.,timestamp,loglevel,andloggername)[15]. Sincetheheader
informationoftenfollowsafixedformatinthesamesoftwaresystem,itisconvenientto
extractitdirectly. Therefore,thelogcontentiswhatweareconcernedaboutduringthe
logparsing.
Aftergettingthelogcontent,somesimpleuser-definedregularexpressionsreplace
commonvariables(e.g.,IPaddress,URL,andfilepath)withaspecialtoken“”. More-
over,theLogPaibenchmark(cf. Section4.1)hasalreadydefinedsuchregularexpressions.
To avoid biased comparison, we apply these regular expressions to all log parsers in
ourexperiments.
Finally, we split the log content with delimiters. Instead of using spaces as delim-
iters in prior works, we use more delimiters, such as commas (“,”), semicolons (“;”),
colons (“:”) and equal signs (“=”). Because variable and constant parts are not always
Appl.Sci.2021,11,11974 5of15
separatedbyspaces. Inaddition, wekeepallthedelimitersinthetokenlistaftersplit-
ting. Take log message log1 in Figure 2 for example, the token list of “getRecentTasks:
num=20,flags=0x1,totalTasks=46”is[’getRecentTasks’,’:’,’,’’,’num’,’=’,’20’,’,’,’flags’,’=’,
’0x1’,’,’,’totalTasks’,’=’,’46’].
3.2. Step2GenerateLogSignature
Inthisstep,wegeneratealogsignatureforeachlogmessage(Algorithm1). Toassign
thesamesignatureforlogmessageswiththesametemplates,wemustfindtheircommon
points. Log messages with the same event type have words in common. Many prior
studieshaveemergedbasedonthisobservation[17,26]. Asmentionedabove,wefindthat
logmessageswiththesameeventtypehavethesamepunctuationmarks. Weusesuch
punctuationinformationtogeneratethelogsignature.
Algorithm1:Logsignature
Input: Thelogcontenttoken_listaftersplitting.
Output: Anumberrepresentingthelogsignature.
1 initPUNCTUATION_TABLE={’|’, ’"’, ’(’, ’*’, ’;’, ’,’, ’=’, ’:’,
’ ’};
2 init freq_dict=dictionarywithdefaultvalueof0;
3 init first_non_digital_token=None;
4 initsignature=0;
5 fortokenintoken_listdo
// count punctuation characters
6 forcharintokendo
7 ifcharinPUNCTUATION_TABLEthen
freq_dict[ch]+ =1;
8
9 end
10 end
// find the first non digital token
11 iffirst_non_digital_tokenisNoneandtokencontainsnodigitalcharacterthen
12 first_non_digital_token = token;
13 end
14 end
15 forchar,freqinfreq_dictdo
// assume the maximum punctuation count is less than 100
16 signature = signature∗100+ freq;
17 end
// assume the maximum token length is less than 100
18 signature = signature∗100+len(first_non_digital_token);
19 returnsignature
Specifically,weputallpunctuationsusedtocalculatethesignatureinatablecalledthe
punctuationtable. Foreachcharacterinthesplittokenlist,wecountitinafrequencytableif
itappearsinthepunctuationtable. Fortheconvenienceofthesubsequentcalculation,we
convertthefrequencytableintoanumberlikearadixconversion. Foreachpunctuation
anditsfrequency,wemultiplybytheradixandaddthecurrentfrequency. Forexample,
in Figure 2, there is zero vertical bar (“|”), one colon (“:”), two semicolons (“,”), and
threeequalsigns(“=”)inthelogmessagelog1. So,thesignaturecalculatedis00010203
if we take ten as the radix. In the implementation, we take 100 as the radix, assuming
that the frequency of any punctuation will not exceed 100. We can quickly locate the
signature group according to the number in the subsequent step by converting. This
numberisreturnedasthesignature. Algorithm1showsthedetailofhowtocalculatethe
logsignature.
Inpractice,notallpunctuationscanbeusedtocalculatethesignature. Forexample,
aloggingstatementmaygeneratevariableslike“+1”and“−1”simultaneously. Inthis
Appl.Sci.2021,11,11974 6of15
case, “+” and “−” should not be used to calculate the signature. By eliminating the
punctuationsappearinginvariables,wegetastablepunctuationtable,anditperforms
wellon16datasetsevaluated. Thepunctuationsweselectedareverticalbar(“|”),double
quotation(“””),parenthesis(“(”),asterisk(“*”),semicolon(“;”),comma(“,”),equalsign
(“=”),colon(“:”),andspace(“”).
Ideally,alogsignatureshouldcorrespondtoonlyoneeventtype. Inthiscase,the
log signature can be used to identify the event type uniquely. However, log messages
fromdifferenteventtypesmaygetthesamelogsignature,calledsignaturecollisions. For
example,logmessagelog1andlog2getthesamesignature(00010203),buttheyarefrom
thedifferenttemplatesinFigure2. Theaveragenumberoftemplatescorrespondingto
thesamesignatureiscalledthecollisionindex. Bycalculatingthecollisionindex,wecan
measuretheseverityofthecollision. Ifweonlyusethepunctuationtabletocalculatethe
signature,thecollisionindexonevaluateddatasetsis1.76. Tooptimizethecollisionindex,
inspiredbypreviouswork[17],weusethelengthinformationofthefirstnon-digitaltoken
(tokenswithoutdigitalcharacters). Finally,wegetanaveragecollisionindexof1.25onall
the2000logmessagessubsets(cf. Section4.1)fromthe16evaluateddatasets.
3.3. Step3SearchSignatureGroup
Inthisstep,wesearchthesignaturegrouptofindthemostsuitabletemplate. The
signaturegroupmaintainstemplateswiththesamesignatureinalist.Thecollisionindexis
alsotheaveragenumberoftemplatesineachsignaturegroup. Eachsignaturecorresponds
toasignaturegroup,andthecorrespondingrelationshipisrecordedinahashtable. By
lookingatthehashtable,wecanquicklyfindthesignaturegroup.Duetothesmallnumber
oftemplatesineachsignaturegroup,wefindthemostsuitabletemplatebycalculatingthe
logsimilarityonebyone.
Inpractice,wetraversethetemplatelistinthesignaturegrouptofindthetemplate
with the largest similarity compared with the current log message. If the similarity is
greaterthanagivensimilaritythreshold, thetemplateindexwillbereturned. Likeprior
work,weconsiderthatlogmessageswiththesameeventtypehavethesamelength(cf.
Section 2). So, if the length is not the same, the similarity value is zero. The similarity
betweenthelogmessageandthelogtemplateisdefinedasthenumberofidenticaltokens
dividedbythetotalnumber.
Inaddition,wefoundthatsomelogtemplatesareverysimilarbecausetheyhavethe
sameprefixtokens,andonlythelastfewtokensaredifferent. Forexample,BGLE99“pro-
graminterrupt: fpcrfield.............”andE100“programinterrupt: fpcrupdate.............”.
Weapplyasoftprefixtokensmatchingmethodbeforecalculatingthelogsimilaritytodeal
withthiscase. Tobespecific,wecomparethefirstNnon-punctuationtokensbetweenthe
templateandthemessage. Iftokensinthesamepositiondonotcontaindigitalcharacters
andarenotthesame,wethinkthetemplatedoesnotmatch. Theuserspecifiesthevari-
ableNasahyperparametercalledprefixthreshold. Thecompleteprocessoflogsimilarity
calculationisshowninAlgorithm2.
As each signature group contains an independent subset of the whole messages,
existingonlinelogparsingmethodscanalsobeappliedtosearchtemplatesinsideeach
signaturegroup. TakeDrainforexample,thecoredatastructureofDrainisafixed-depth
tree. IfwewanttoutilizeDraintosearchsignaturegroups,webuildsuchatreestructure
andadoptallDrainstepsinsideeachsignaturegroup. Inourexperiment,weintroduce
ourlogsignaturemethodtoSpellandDraininthisway.
Appl.Sci.2021,11,11974 7of15
Algorithm2:Logsimilarity
Input: Thesplittemplate_token_list;thesplitcontent_token_list;prefixthreshold
pt.
Output: Anumberranges[0,1]representingthelogsimilarity.
1 m,n = len(template_token_list),len(content_token_list);
// the length of token list should be the same
2 ifm!=nthen
3 return0
4 end
5 count,total =0,0;
6 fort1,t2inzip(template_token_list,content_token_list)do
7 ift1inPUNCTUATION_TABLEort2inPUNCTUATION_TABLEthen
// punctuations should be the same
8 ift1!=t2then
9 return0
10 end
11 else
12 ift1==t2then
count+ =1;
13
14 end
// soft prefix tokens matching
15 ifnot(t1containsdigitalcharacterort2containsdigitalcharacter)then
16 ifpt>0then
17 return0
18 end
19 end
total+ =1;
20
pt− =1;
21
22 end
23 end
24 returncount/total
3.4. Step4UpdateSignatureGroup
In the previous step, the most suitable template index is returned. If the index is
valid,wewillupdatethetemplatebyreplacingdifferenttokensinthesamepositionwith
aspecialtoken“”. Iftheindexis−1,itmeansthatnosuitabletemplateisfound. We
willappendthislogmessagetothetemplatelistasanewtemplateandreturnitsindex.
Finally,thelogeventidiscalculatedasa(logsignature,templateindex)tuple.
4. Evaluation
Inthissection,weevaluateLogPunkon16benchmarkdatasetsfromtheLogHub[28]
fromthreeaspects: accuracy,robustness,andefficiency.
Accuracy. Accuratelogparserscancorrectlyidentifythestatictemplateanddynamic
variablesinthelogcontent;
Robustness. Robustlogparsersshouldperformconsistentlyacrossdifferentdatasets,
sotheycanbeappliedtomoreenvironments;
Efficiency. Aslogparsingisthefirststepofloganalysis,inefficientlogparsingcannot
meetthereal-timerequirements.
WecompareLogPunkwithfivepreviousstate-of-the-artlogparsers,includingDrain[17],
Spell[26],AEL[29],LenMa[25],andIPLoM[23].AllofthemhavebeenincludedintheLogPai
benchmark[15].Asmentionedabove,wealsointroduceourlogsignaturemethodtoSpelland
Drain(denoteasSpell+andDrain+,respectively),whichmeansthatweutilizeSpellandDrain
tosearchsignaturegroups.AllexperimentswereconductedonaLinuxmachinewithan8-core
Intel(R)Core(TM)PI:EMAIL,16GBRAM,running64-bitUbuntu18.04.5LTS.
Appl.Sci.2021,11,11974 8of15
4.1. LogHubDatasetandAccuracyMetrics
OurbenchmarkdatasetscomefromtheLogHubdatarepository[28]. LogHubmain-
tainsacollectionoflogsfrom16differentsystemsspanningdistributedsystems,supercom-
puters,operatingsystems,mobilesystems,serverapplications,andstand-alonesoftware.
Manypriorlogparsingresearch[15–18,26]evaluatedtheirapproachesontheselogs.
AsillustratedinTable1,LogHubcontains440millionlogmessageswhichamountto
77GB.Wecanseethattherearegreatdifferencesinthenumberoftemplatesindifferent
datasets. TheAndroiddatasethasamaximumof76,923templates,whiletheProxifierhas
aminimumof9templates. Theaveragelengthoflogmessagesisbasicallyinthetensor
twenties,butthemaximumlogmessagelengthofsomedatasetscanreachhundreds. In
termsofthelogcontent,thereislittledifferenceamongdatasets,whichismostlyreadable
freetext.
BenefitingfromthelargesizeanddiversityofLogHubdatasets,wecanmeasurethe
accuracyoflogparsersandtesttheirrobustnessandefficiency. LogHubpickedupasubset