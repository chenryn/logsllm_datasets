要调用函数并测试结果，可以使用：
5. 提示Y或N
许多脚本在继续处理前会发出提示。大约可以提示以下动作：
• 创建一个目录。
• 是否删除文件。
• 是否后台运行。
• 确认保存记录。
等等
以下函数是一个真正的提示函数，提供了显示信息及缺省回答方式。缺省回答即用户按
下回车键时采取的动作。c a s e语句用于捕获回答。
加入java编程群：524621833
212
第四部分 基础s h e l l编程
下载
要调用上述函数，须给出显示信息或参数 $ 1，或字符串变量。缺省回答Y或N方式也必须
指定。
以下是几种函数c o n t i n u e _ p r o m p t的调用格式。
在脚本中加入上述语句，给出下列输入：
现在可以看出为什么函数要有指定的缺省回答。
以下是函数调用的另一种方式：
加入java编程群：524621833
213
第19章 shell 函 数
下载
也可以使用字符串变量$ 1调用此函数：
6. 从登录I D号中抽取信息
当所在系统很庞大，要和一登录用户通信时，如果忘了用户的全名，这是很讨厌的事。
比如有时你看到用户锁住了一个进程，但是它们的用户 I D号对你来说没有意义，因此必须要
用grep passwd文件以取得用户全名，然后从中抽取可用信息，向其发信号，让其他用户开锁。
以下函数用于从grep /etc/passwd命令抽取用户全名。
本系统用户全名位于p a s s w d文件域5中，用户的系统可能不是这样，这时必须改变其域号
以匹配p a s s w d文件。
这个函数需要一个或多个用户I D号作为参数。它对密码文件进行g r e p操作。
函数脚本如下：
以下为w h o i s函数调用方式：
7. 列出文本文件行号
在v i编辑器中，可以列出行号来进行调试，但是如果打印几个带有行号的文件，必须使用
n l命令。以下函数用n l命令列出文件行号。原始文件中并不带有行号。
加入java编程群：524621833
214
第四部分 基础s h e l l编程
下载
要调用n u m b e r _ f i l e函数，可用一个文件名做参数，或在s h e l l中提供一文件名，例如：
$ number_file myfile
也可以在脚本中这样写或用：
number_file $1
输出如下：
8. 字符串大写
有时需要在文件中将字符串转为大写，例如在文件系统中只用大写字符创建目录或在有
效的文本域中将输入转换为大写数据。
以下是相应功能函数，可以想像要用到t r命令：
变量u p p e r保存返回的大写字符串，注意这里用到特定参数 $ @来传递所有参数。
s t r _ t o _ u p p e r可以以两种方式调用。在脚本中可以这样指定字符串。
或者以函数输入参数$ 1的形式调用它。
加入java编程群：524621833
215
第19章 shell 函 数
下载
两种方法均可用替换操作以取得函数返回值。
9. is_upper
虽然函数s t r _ t o _ u p p e r做字符串转换，但有时在进一步处理前只需知道字符串是否为大写。
i s _ u p p e r实现此功能。在脚本中使用i f语句决定传递的字符串是否为大写。
函数如下：
要调用i s _ u p p e r，只需给出字符串参数。以下为其调用方式：
要测试字符串是否为小写，只需在函数 i s _ u p p e r中替换相应的 a w k语句即可。此为
i s _ l o w e r。
10. 字符串小写
现在实现此功能，因为已经给出了s t r _ t o _ u p p e r，最好相应给出s t r _ t o _ l o w e r。函数工作方
式与前面一样。
函数如下：
加入java编程群：524621833
216
第四部分 基础s h e l l编程
下载
变量L O W E R保存最近返回的小写字符串。注意用到特定参数 $ @传递所有参数。
s t r _ t o _ l o w e r调用方式也分为两种。可以在脚本中给出字符串：
或在函数中用参数代替字符串：
11. 字符串长度
在脚本中确认域输入有效是常见的任务之一。确认有效包括许多方式，如输入是否为数
字或字符；域的格式与长度是否为确定形式或值。
假定脚本要求用户交互输入数据到名称域，你会想控制此域包含字符数目，比如人名最
多为2 0个字符。有可能用户输入超过 5 0个字符。以下函数实施控制功能。需要向函数传递两
个参数，实际字符串和字符串最大长度。
函数如下：
调用函数c h e c k _ l e n g t h：
加入java编程群：524621833
217
第19章 shell 函 数
下载
循环持续直到输入到变量N A M E的数据小于最大字符长度，这里指定为 1 0，b r e a k命令然
后跳出循环。
使用上述脚本段，输出结果如下：
可以使用w c命令取得字符串长度。但是要注意，使用 w c命令接受键盘输入时有一个误操
作。如果用户输入了一个名字后，点击了几次空格键， w c会将这些空格也作为字符串的一部
分，因而给出其错误长度。a w k在读取键盘时缺省截去字符串末尾处空格。
以下是w c命令的缺点举例（也可以称为特征之一）
运行上述脚本（其中□为空格）
12. chop
c h o p函数删除字符串前面字符。可以指定从第一个字符起删去的字符数。假定有字符串
M Y D O C U M E N T. D O C，要删去M Y D U C U M E N T部分，以便函数只返回. D O C，需要把下述命
令传给c h o p函数：
M Y D O C U M E N T . D O C 1 0
Chop 函数如下：
加入java编程群：524621833
218
第四部分 基础s h e l l编程
下载
删除后字符串保存于变量C H O P P E D中，使用下面方法调用c h o p函数：
或者：
13. MONTHS
产生报表或创建屏幕显示时，为方便起见有时要快速显示完整月份。函数 m o n t h s，接受
月份数字或月份缩写作为参数，返回完整月份。
例如，传递3或者0 3可返回M a r c h。函数如下：
加入java编程群：524621833
219
第19章 shell 函 数
下载
用下面方法调用函数m o n t h s
months 04
上面例子显示A p r i l，脚本中使用：
返回月份J u n e。
19.10.4 将函数集中在一起
本章目前讲到的函数没有一定的顺序。这些例子只表明函数不一定很长或不一定为一些
复杂的脚本。
本书许多函数脚本简单实用，并不需要任何新的后备知识。这些函数只是防止重复输入
脚本，实际上这就是函数的基本功能。
本章开始部分，讲到怎样在 s h e l l中使用函数。第一次使用函数时，也许要花一段时间才
能理解其返回值的用法。
本章讲到了几种不同的调用函数及其返回值的方法。如果遇到问题，查看一下实例返回
值及其测试方法即可。
以下是一些小技巧。测试函数时，首先将其作为代码测试，当结果满意时，再将其转换
为函数，这样做可以节省大量的时间。
19.11 函数调用
本章最后讲述使用函数的两种不同方法：从原文件中调用函数和使用脚本中的函数。
19.11.1 在脚本中调用函数
要在脚本中调用函数，首先创建函数，并确保它位于调用之前。以下脚本使用了两个函
数。此脚本前面提到过，它用于测试目录是否存在。
加入java编程群：524621833
220
第四部分 基础s h e l l编程
下载
上述脚本中，两个函数定义于脚本开始部分，并在脚本主体中调用。所有函数都应该在
任何脚本主体前定义。注意错误信息语句，这里使用函数 e r r o r _ m s g显示错误，反馈所有传递
到该函数的参数，并加两声警报。
19.11.2 从函数文件中调用函数
前面讲述了怎样在命令行中调用函数，这类函数通常用于系统报表功能。
现在再次使用上面的函数，但是这次将之放入函数文件 f u n c t i o n s . s h里。s h意即s h e l l脚本。
加入java编程群：524621833
221
第19章 shell 函 数
下载
现在编写脚本就可以调用f u n c t i o n s . s h中的函数了。注意函数文件在脚本中以下述命令格
式定位：
.\
使用这种方法不会创建另一个s h e l l，所有函数均在当前s h e l l下执行。
运行上述脚本，可得同样输出结果，好像函数在脚本中一样。
加入java编程群：524621833
222
第四部分 基础s h e l l编程
下载
19.12 定位文件不只用于函数
定位文件不只针对于函数，也包含组成配置文件的全局变量。
假定有两个备份文件备份同一系统的不同部分。最好让它们共享一个配置文件。为此需
要在一个文件里创建用户变量，然后将一个备份脚本删除后，可以载入这些变量以获知用户
在备份开始前是否要改变其缺省值。有时也许要备份到不同的媒体中。
当然这种方法可用于共享配置以执行某一过程的任何脚本。下面的例子中，配置文件
b a c k f u n c包含一些备份脚本所共享的缺省环境。文件如下：
缺省文件很清楚，第1域_ C O D E包含一个脚本关键字。要查看并且改变缺省值，用户必须
首先输入匹配_ C O D E取值的脚本，即“c o m e t”。
以下脚本要求输入密码，成功后显示缺省配置。
脚本运行时，首先要求输入脚本。脚本匹配后，可以查看缺省值。然后就可以编写脚本
让用户改变缺省值。
加入java编程群：524621833
223
第19章 shell 函 数
下载
19.13 小结
使用函数可以节省大量的脚本编写时间。创建可用和可重用的脚本很有意义，可以使主
脚本变短，结构更加清晰。
当创建了许多函数后，将之放入函数文件里，然后其他脚本就可以使用这些函数了。
加入java编程群：524621833
下载
第20章 向脚本传递参数
前面已经讲到如何使用特定变量$ 1 . . $ 9向脚本传递参数。$ #用于统计传递参数的个数。可
以创建一个u s a g e语句，需要时可通知用户怎样以适当的调用参数调用脚本或函数。