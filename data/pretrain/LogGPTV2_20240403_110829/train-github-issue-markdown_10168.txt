Electron `1.7.9`  
OS - `macOS 10.12.6` `Windows 10`
* * *
Calling `fs.readdirSync` in recursive manner from renderer process freezes the
application.
**STR:**
  * Run following function from devtools and try to click via electron application  
_change`dir` with some large directory which contains many files, so function
run for some time_
    var fs = require('fs')
    var path = require('path')
    var dir = '/Users'
    var totalFiles = [0]
    var filesArray = []
    var sizesArray = []
    function getFilesRecursively(dir, totalFiles, filesArray, sizesArray){
      try { var files = fs.readdirSync(dir); }
      catch(err) { } // 'fs.readdirSync(dir) -', console.warn(err.message)  }
      for(var i in files){
        var name = path.join(dir, files[i])
        try {  
            let stats = fs.lstatSync(name)  // track symlink as link, but not as file
            if (stats.isDirectory())
                getFilesRecursively(name, totalFiles, filesArray, sizesArray) 
            // filtering out symlinks, sockets etc    
            else if (stats.isFile()) {
                // we can't use regular counter, since incrementing a primitive value doesn't change the value back in the caller function's scope.
                // https://stackoverflow.com/a/48378462/4537590
                totalFiles[0]++  
                // filtering out 0 size files
                if (stats.size > 0) {   
                    sizesArray.push(stats.size)
                    filesArray.push(name) 
                }
            } 
            } catch(err) { } // console.warn('fs.lstatSync(name) -', err.message) }   
        }
        console.log(filesArray.length) // console logging to see function progress
        return { "files" : filesArray, "sizes" : sizesArray, "total_files" : totalFiles }
    }
    getFilesRecursively(dir, totalFiles, filesArray, sizesArray)
I've tested this on Electron API Demos app as well which uses `"electron":
"~1.6.2"` It also freezes.
Kindly help