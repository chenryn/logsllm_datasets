表1-4列出了一些适用于Unix系统的按键组合。
mysql
口利用批处理运行mysql程序。
口利用mysql的输入行编辑功能。
从对数据库进行交互式查询的角度讲，mysql是一个极其有用的程序，但其操作界面却主
口
利用复制和粘贴。
第1章MySQL入门
Esc Backspace
Delete
Ctrl+E
Ctrl+A
程序支持输入行编辑。你可以编辑当前正在输入的那一行，也可以把以前的输入行
Ctrl+向右键
Ctl+向左键
向左键
向下键
向上键
Ctrl+K
EscD
Ctrl+D
Escf
Escb
向右键或Ctl+F
向左键或Ctrl+B
向下键或Ctrl+N
向上键或Ctrl+P
Home
向右键
按键组合
按键组合
合
表1-5Windows的输入编辑命令
表1-4mysq1程序的输入编辑命令
光标移动到行首
光标右移一个单词
光标左移一个单词
光标右移一个字符
光标左移一个字符（后退）
调出后一行
调出前一行
删除从光标位置到输入行末尾的所有内容
删除光标前面（左侧）的那个单词
删除单词
删除光标前面（左侧）的那个字符
删除光标位置上的那个字符
把光标移到输入行的末尾
把光标移到输入行的开头
把光标向前移动一个单词
把光标向后移动一个单词
向右移动光标
向左移动光标
调出后一个输入行
调出前一个输入行
含
（前进）
义
义
然
---
## Page 81
件里读取输入。如果你有一些需要定期运行的语句，那么此方法会特别有用，因为你不用每次
1.5.2.3利用mysql执行脚本文件
将.mysql_history 里的语句复制粘贴到你的那个语句存档文件里。
用，那么可以这样做：先退出mysql，再用一个编辑器打开.mysql_history，然
在 Unix 系统上，当在 mysql里输入语句时，这些语句会被保存到位于主目录下的一个名
输入命令的方式。稍加练习，即可熟练掌握。
复制的那条语句粘贴到mysql程序里。
系统上用gvim。）
其后通过复制和粘贴操作再次调用它们。
1.5.2.2利用复制和粘贴来执行语句
按向上键调出刚才输入的那条查询命令，
样修改这条查询命令。
在按Enter键之前，你突然发现自己把president 错拼成了persident，那么可以像下面这
的查询命令：
mysql程序并非只能在交互模式下运行，它也可以在非交互模式（即批处理）下从某个文
你也可以将复制和粘贴的顺序反过来使用 (把终端窗口里的语句复制粘贴到你的文件里)。
这一过程看起来比较繁琐，但在掌握之后却相当快捷。它提供了一种无需打字，即可快速
（3）在这个文件里找到你想要执行的语句，选取并复制它。然后切换到终端窗口，把刚才
(2)在文档窗口里打开那个用来存放语句的文件。（例如,我在Unix系统上用vi,在Windows
如果你使用的是窗口化操作环境，那么可以把你认为有用的那些语句保存到某个文件里，
mysql> SHOW COLUMNS FROM persident;
（1）在某个终端或控制台窗口里启动mysql程序。
如果在按Enter键之后才发现打错了字，那么也不要紧。等到 mysql显示出错信息之后，
（1）先按几次向左银
下面的示例演示了一个输入行编辑功能的简单用法。假设你在mysql程序里输入了如下所示
（4）然后按下Enter键来执行该查询命令。
（3）
再重新输入re，修正错误。
按两次Delete键或Backspace键（这两个键都可以删除光标左侧的字符），删除er。
F8,F5
B
Page Down
Page Up
Backspace
Delete
End
按键组合
键，把光标左移到字符s 的位置上。
。如果你手工输人了一条语句之后，想把它保存起来以供今后
然后像刚才描述的那样将其修改好即可。
循环显示命令列表
弹出命令菜单，用命令编号选择
弹出命令菜单，用向上键/向下键选择
调出最后输入的命令
调出最后输人的命令
调出最早输入的命令
删除整行
删除光标左边的字符
删除光标处的字符
光标移动到行尾
含
1.5mysql交互技巧
义
续表
61
后
---
## Page 82
找什么东西即可：
命令行的参数将成为这条查询命令中的检索关键字。
shell程序里，变量$1、$2、··-依次对应于命令行里的各个参数）。这样，在运行这个脚本时，
的输入。shell程序会把这段查询命令文本里的脚本变量$1替换为源自命令行的那个参数（在
后退出执行。
这种参数化查询命令的方式，让你可以在运行脚本时指定interests 值。通过下面这个 shell
个可以接受脚本命令行参数的shell脚本；然后，用这些命令行参数来更改查询命令的文本内容。
那么需要另谋出路。在Unix系统上，有一种让查询命令变得更加灵活的方法：先把它保存为一
只有在你不会频繁地使用这条查询命令时才会显现出优势来。如果要频繁地运行某条查询命令，
个文件，把其中的 depression 改为 Jefferson，然后再次运行 mysql 即可。不过，这个方法
果想得到交互方式运行mysql时输出的格式效果，可以加上一个-t 选项：
执行：
20世纪30年代的那个大萧条时期）感兴趣的成员找出来，那么可以编写出类似下面这样的查
期的美国历史感兴趣的“美史联盟”成员找出来。例如，想要将那些对GreatDepression（美国
行它们。
都来重新输入它们。只要在一个文件中保存一次这些语句，就可以根据需要反复地让mysql执
9
假设你有一条查询命令，它可以通过 member 表里的interests 列，将那些对某个特定时
现在，你不用在每次运行这个脚本时都去编辑它了。只需通过命令行参数，告诉它你想查
其中的第3行用于确保命令行参数只有一个；否则，它就会输出一条简短的出错信息，然
默认情况下，当以批处理模式运行时，mysq1程序产生的输出内容是以制表符分隔的。如
把这条查询命令保存在 interests.sql 文件里，然后像下面这样将它提供给 mysql 程序
chmod +x interests.sh
在运行该脚本之前，还必须把它设置为可执行的：
QUERY_INPUT
mysql-t Sampdb source interests.sql
如果已经运行了mysql，那么可以通过source命令来执行指定文件里的内容：
%mysgl -t sampdb interests.out
如果想把输出结果保存起来，那么可以将它重定向至一个文件：
mysql-tsampdb<interests.sql
mysql
SELECT last_name,
第1章MySQL入门
。在<<QUERY_INPUT和最后那个QUERY_INPUT之间的所有内容，都会成为mysql
sampdb< interests.sql
first_name,email, interests FROM member
first_name,
first_name;
'%S1%
'%depression%'
email;
interests FROM member
---
## Page 83
这些内容总会有收获。
你是想要运行 mysql，想要自己编写这样的程序，还是想要成为一名数据库管理员，牢牢掌握
SQL语句的语法和用法，弄清MySQL是如何处理数据的，怎样才能让查询执行得更快。无论
读完第一部分，多积累一些
跳转到本书的第三部分，那里会对数据库的管理工作进行探讨。不过，建议大家先按部就班地
讲到如何编写MySQL应用程序。如果你打算成为网站的MySQL数据库管理员，那么可以直
“美史联盟”和“成绩考评项目”里的各项任务，那么可以直接跳转到本书的第二部分，那里
我们去完成。例如，到目前为止，
还编写了一些查询命令，用于回答那些与数据库信息有关的问题。不过，还有很多事情在等表
它和它的表创建好了，并且还使用了一些初始数据来填充其中的各个表。在这个过程中，我们
蜓点水”，还有很多内容并未讲到。
插入行，用各种方式检索这些行，修改它们，或者删除它们。但本章的这个教程只能算是“蜻
1.6
说明强烈建议大家不要把这类脚本安装在公共区域里，因为它们在执行时不会对参数进行安
供了一个与之等效的 Windows 批处理文件 interests.bat。
接下来你想要跳转到本书的哪一章节呢？这要取决于你的兴趣。如果你只想知道如何完月
是第8章和第9章）中，我们将继续完成这些任务。
且，我们还不能以打印版和在线版两种形式生成“美史联盟”的成员名录。在后面的章节（尤
的分数行，或者为“美史联盟”添加新的成员。我们还没有可以方便地修改已有行的方式。
通过本章的学习，相信你对MySQL的使用已有所了解。你可以创建数据库和表，向表中
何去何从
你可以在 sampdb 发行版的 misc 目录里找到这个 interests.sh 脚本。另外，在那里还提
./interests.sh depression
./interests.sh Jefferson
内容。如此一来，这条命令会真的被执行，其后果可想而知。
此脚本的后果是会有一条DROP DATABASE语句被注入脚本语句中，成为mySql的输入
全检查，因而很容易遭遇SQL注入攻击。假设有人调用类似下面的脚本发起攻击：
些MySQL在使用方面的背景知识。这些内容将帮助大家进一步了
，我们还没有一种简便的交互方式，用于为成绩考评项目输
。请仔细想想，sampdb数据库当前到什么状态了呢？我们把
1.6何去何从
3
解
接
会
成
着
---
## Page 84
SQL相关的信息。
上深入介绍更多与SQL语言有关的内容，主要涉及以下几个方面。
编写程序，那么这些接口能让你通过调用SQL语句来与服务器进行交流。
某种带有MySQL接口（如PerI语言的DBI模块，或者PHP语言的PDO扩展）的编程语言来
序（如mysql客户端）时，它本质上就是一种把SQL语句发送到服务器执行的工具。如果使用
使用SQL管理数据
第1章介绍了MySQL的许多功能，以及SQL的某些基本用法。现在，我们将在那个基础
口第4章将讨论如何创建和使用视图（这是种虚表，它提供了另一种查看数据的方式）
如果想要了解更多相关信息，尤其想要了解MySQL的最新版本所做的那些更改，则可以
口附录E列出了通过MySQL实现的各条SQL语句的语法，以及使用它们所要求的权限。
口第12章将会讲述如何使用各种管理语句（如GRANT和REVOKE）去管理用户账户。还会
上面列出的这些条目覆盖了SQL语言的众多应用领域。其他章节也提供了一些附加的与
使用FULLTEXT搜索引擎。
口使用多种字符集。
口引用数据库的各种元素。
口
口
口调整SQL模式以影响服务器的行为。
它还介绍了在SQL语句里使用注释的语法。
讨论到权限控制系统，此系统控制着各个账户都被允许执行什么样的操作。
以及如何创建和使用存储程序（包括函数、过程、触发器和事件）。
口
口
口
口
第2章
建立外键关系。
利用事务一次性执行或撤销多条语句。
多表删除和更新。
使用连接、子查询和联合来检索数据。
获得关于数据库及其内容的信息。
创建和销毁数据库、表和索引。
---
## Page 85
的更多信息请参考12.3.1节。
问题”的处理。附录 D对 sql_mode 变量所支持的所有模式值进行了描述。关于使用系统变量
任何模式，则返回一个空值。
其返回值由当前设置为启用的所有模式构成，在两个模式之间以逗号隔开。如果当前没有启用
认SQL模式。
任何客户端都可以为其自己设置一个本次会话特定的SQL模式：