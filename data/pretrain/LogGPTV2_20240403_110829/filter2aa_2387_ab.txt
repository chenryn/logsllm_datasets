•
Concept is to embed a secret message in the Least Significant Bits (LSB’s)
of images
•
Works because the human visual system isn’t acute enough to pick out
changes in color
•
Basic algorithm for LSB substitution would be to take the first M cover
pixels (where M is the length of the secret message to be hidden in bits),
then replace every pixel's last bit with one of the message bits
•
Problem with approach is one ends up with the first region of the image
having different statistics than the rest of the image
•
Amongst possible improvements an effective/common one is to seed a
pseudo-random number generator then use the numbers output
LSB Substitution Example
• “LSB substitution” overwrites the least significant bit of
target bytes
• Example: Hide "G" (01000111) in 3 pixels
– Original Data
• 10010101 00001101 11001001
• 10010110 00001111 11001011
• 10011111 00010000 11001011
– Stego Data
• 10010100 00001101 11001000
• 10010110 00001110 11001011
• 10011111 00010001 11001011
Overview of 
Overview of ““some
some””  Stego 
Stego Tools
Tools
S-Tools
•
Designed for lossless compression - hides information inside BMP,
GIF, or WAV files using LSB overwriting
•
Password used for LSB randomization and encryption
•
S-Tools allows conversion of 8-bit “cover” images to 24-bit, as well
as attempted color reduction in any 24-bit images one wishes to
embed within a 8-bit “cover”
•
Can hide multiple files within a single image or sound file
•
Multiple algorithm support
JPHS
•
Designed for lossy compression - hides information inside JPG files
using LSB overwriting of DCT coefficients
•
No installation required - two programs, JPHIDE and JPSEEK -
JPHIDE hides data in JPG file, JPSEEK recovers file hidden with
JPHIDE, and JPHSWin.exe performs both/either function(s)
•
Linux version also available
•
Distributes the hidden file in the JPG image so that both the visual
and statistical effects are minimized
•
Uses LSB overwriting of the discrete cosine transform coefficients
used by the JPG algorithm (difference in file statistics minimized,
decreasing risk of unauthorized recovery)
•
Uses Blowfish crypto algorithm for LSB randomization and
encryption (to determine where to store the bits of the hidden file)
MP3 Stego
•
Compresses, encrypts, then hides data in MP3 bit stream
•
Linux version also available
•
Written with stego applications in mind, but could be used as
copyright marking system for MP3 files (weak but still much better
than the MPEG copyright flag defined by the standard)
•
Opponent can uncompress the bit stream and recompress it, which
will delete the hidden information (only attack known) – but at the
expense of severe quality loss
•
The hiding process takes place at the heart of the Layer III
encoding process…namely in the inner_loop
•
Requires text file and wav file - converts combined output to MP3
file
Camouflage
• Camouflage allows one to hide files by first scrambling
them and then attaching them to file of choice
• Appends hidden file to carrier file
• Camouflaged file looks and behaves like normal file
(can be stored, used, or emailed without attracting
attention)
• Can password-protect camouflaged file
• Can camouflage files within camouflaged files
Stego (for Mac)
•
Embed data in and retrieve data from Macintosh PICT format files,
without changing the appearance or size of the PICT file
•
Works by slightly altering pixel values
•
Rasterizes image, then stegs data into the LSB of each of the RGB
color values
•
In the case of indexed color, Stego stegs data into the LSB of the
index values
•
File length of data file to be stegged is hidden in the LSB's of the
first 32 steggable bytes
•
To disguise value somewhat, it takes the 2nd-least significant bits of
the 2nd 32 steggable bytes, XOR’s them with the 32 bit file length,
then stegs the XOR'd file length into LSB's of the first 32 steggable
bytes
NCovert
• NCovert designed to function as a TCP covert channel
• Runs on Linux
• Based in part on Chris Rouland's covert_tcp program
• Program functions as both client and server, depending
options used
• Data transferred using the IP ID field and TCP
sequence number – loose form of stego
Hydan
• Hides data in a Windows or Linux binary (executable) file
• Takes advantage of redundancies in i386 assembler
– i.e., A+B vs A-(-B)
• Can hide one byte in ~110 instruction bytes
• Maintains size of carrier file
http://www.crazyboy.com/hydan/
StegFS
•
Hidden file system for Linux
•
Does not require the use of a separate partition of a hard disk
•
Instead places hidden files into unused blocks of a partition that
also contains normal files, managed under a standard file system
•
Uses a separate block allocation table
•
Fulfills a similar function as the block allocation bitmap in traditional
file systems, but instead of a single bit for each block it contains an
entire 128-bit encrypted entry
•
Encrypted entry indistinguishable from random bits unless the key
for accessing a security level is available
•
Steganographic file system driver isn’t well hidden, but doesn’t
need to be
Detecting Steganography Use
•
WetStone Technologies (commercial)
– Gargoyle (formerly StegoDetect)
• finds remnants of stego (or other malware) software using file hashes
– Stego Suite (Stego Analyst, Stego Break, Stego Watch)
• applies statistical methods on suspect files to determine probability that
stego was employed, guesses which algorithm was employed, and attempts
to break the password
•
Neils Provo (outguess.org) - FREE
– Stegdetect
• detects stego in JPG images using several algorithms
– Stegbreak
• launches brute-force dictionary attacks on JPG image
– Runs on Windows or Unix
Online Tools / Examples / Demos
• http://www.well.com/~sthomas/.Secret-Page.html
• GifItUp (jpg in gif example)
• S-Tools (jpg in bmp example)
• JPHS (jpg in jpg example)
• MP3Stego (txt in mp3 example)
• Camouflage (jpg in jpg example)
• Camouflage (jpg in xls example)
Steganography Uses*
• Hiding/sharing codes or other sensitive information
• Hiding images of former girlfriend/boyfriend or current
mistress/master from current partner
• Hiding embarrassing images of one’s self
• Hiding/sharing illegal pr0n
• Hiding/sharing illegal plans and terrorist plots
• Hiding/sharing “evil” source code
• Hiding/sharing cracks/serials/passwords/netcat
backdoors, etc.
* Not necessarily endorsed/condoned by presentation
author
Hiding / Sharing Secrets
Hiding / Sharing Secrets
Physically
Physically
Spy Tactics/Practices
• Don’t steal secrets – make surreptitious copies
• Establish creative two-way communication
• Use “dead drops” – parties “never” meet
• Employ creative “envelopes” for secrets to be
exchanged
• Use common/open/public areas for communication
and dead drop sites
Spy Tactics/Practices  (cont.)
• Must keep secrets hidden until time of transfer
• Caching
• Accessibility weighed against secrecy
• Booby-trapped containers
• 30 unique forms/categories of concealment for spies
• Destroy obsolete records, receipts, tools, maps, passwords,
etc.
Two-Way Communication
• Two-way communication may be needed for
secret(s) delivery, payment, etc.
• Must have signals to note that drop has been
made at dead-drop location
• May need separate signal that money or other
trade item has also been left in return
• Strategically placed drink can, broken tree
branch, Christmas lights, chalk marks, obscure
signal flags, etc., etc., etc.
Secret “Envelopes”
•
Only limited by imagination
–
* Inside smoke detector (airplane bathroom, stairwell, etc.)
–
* Inside books/magazines (library, bookstore)
–
* Taped to underside of desk or chair
–
* Fake (or real) electrical outlet
–
* Box of tissues
–
* Velcro-ed patches on clothes, backpacks
–
Inside electronic devices
–
Behind back plate/battery of cell phone
–
Hole in wall covered with flier or poster
–
Taped to top of door
–
Diaper genie, cat litter box, sharps medical waste disposal
–
False bottom containers
–
Laptop/PC drives
–
Inside dog food bag, cereal box, detergent box, etc.
–
Car steering wheel, door panel, under back seat, etc.
–
Junk mail envelopes
–
Gutted VHS tape
–
Buried
–
Stack of paper plates
–
Band-aid tin, bandages
–
Inside shower curtain rod
–
(continued)
Secret “Envelopes”  (cont.)
•
Only limited by imagination
–
* Inside walnuts
–
* Inside currency
–
* Calculator
–
* Video of secret docs
–
* Drop item attached to string and washer inside wall from ceiling/attic, retrieve when
needed using strong/small magnet on string
–
* Hollow glass eyeball
–
HVAC unit filter
–
Dog's collar
–
Molding covering hollowed area
–
Hollowed out planter stand (reverse-thread so opening isn’t obvious)
–
False bottom drawer
–
Hollow shoe heel
–
Plant container
–
Children’s toys
–
Hide important humans in city ghetto, hospital, etc.
–
Create hollow chocolate bar mold, insert secret, pour other bar side sealing secret in,
wrap
–
Inside cigarette
–
Tattoo to scalp, shave head to read
–
Inside body (swallow, up anus or vagina, under tongue, under skin)
–
etc., etc., etc.
Dead Drop Uses*
• Drug deals
• Illegal classified information exchange
• Corporate espionage information exchange
• Bio/nuclear weapons exchange
• Stolen goods exchange
• Exchange diskette with “Leonardo da Vinci” virus, culled
from the hacked “garbage” file on the Gibson
• Use your imagination…..
* Not necessarily endorsed/condoned by presentation author
A Few 
A Few ““Live
Live”” Containers
 Containers
References / Additional Reading
• Gary Kessler stego links:
• (www.garykessler.net/library/securityurl.html#crypto)
• • Gary Kessler’s awesome overview of Stego:
• (http://www.garykessler.net/library/fsc_stego.html)
• • Ron Rivest paper on Chaffing and Winnowing:
• (http://theory.lcs.mit.edu/~rivest/chaffing.txt)
• • Notre Dame student paper on Secret Splitting:
• (http://www.nd.edu/~cseprog/proj02/cryptogrophy/final.pdf)
• • Scott Guthery paper on Secret Splitting:
• (http://arxiv.org/ftp/cs/papers/0307/0307059.pdf)