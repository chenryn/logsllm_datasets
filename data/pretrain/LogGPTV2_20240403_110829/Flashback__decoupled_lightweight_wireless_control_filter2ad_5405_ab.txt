main samples, which are then sent over the channel. The typical
OFDM symbol length is 4µs. OFDM symbols are sent one after the
other. The symbols can therefore be pictured as a two-dimensional
time-frequency grid, where each frequency index represents a sin-
gle subcarrier, and each time index represents a period of 4µs, as
depicted by Fig. 1. Packets can be visualized as constellations be-
ing mapped to different points on this grid. This abstraction applies
to any OFDM based system, including Wi-Fi, LTE and WiMAX.
The Wi-Fi OFDM transmitter sets the constellation modulation
and channel coding rate according to the channel conditions, in or-
der to protect against channel distortions such as noise and interfer-
ence. For example, a dense constellation such as 64-QAM is less
robust to errors than a sparser one like 16-QAM. Similarly, Wi-Fi
transmitters can increase the data redundancy, by controlling the
channel code rate. Wi-Fi has three different coding rates (1/2, 2/3,
3/4), where the rate is deﬁned as the ratio of data bits to actual en-
coded bits that are sent. Thus, the lower the coding rate, the higher
the redundancy.
To maximize throughput, Wi-Fi transmitters perform rate adap-
tation, i.e. they estimate the channel SNR to the receiver, and for
that SNR, pick the densest constellation and highest coding rate
that still ensure that the receiver can decode. Table 2.2 shows dif-
ferent combinations of Wi-Fi constellations and coding rates and
their corresponding SNR thresholds, as we measured on our Wi-Fi
receiver. SNR measurement in current networks is based on packet
loss estimates, i.e. if a packet sent at a particular rate is lost, then
the sender assumes that the channel SNR is lower than the thresh-
old for that rate, and consequently the sender switches to a lower
rate. There are more sophisticated techniques to measure SNR that
tradeoff increased measurement overhead for better accuracy.
2.3 Link Margin
The previous discussion raises two observations. First, since
SNR ﬂuctuates over time on the order of milliseconds, SNR mea-
surement is inherently error-prone. Consequently, even the most
accurate SNR estimation techniques cannot adapt to instantaneous
SNR variations, and therefore bitrate adaptation algorithms prefer
to err on the conservative side. Algorithms minimize the risk of
packet loss by using a lower bitrate than the threshold permits, since
packet loss is expensive. Second, to simplify the implementation of
Wi-Fi hardware, the bitrates available for transmission are discrete.
Therefore, in order to protect against the uncertainty in measuring
SNR, and due to the discreteness of bitrates, for every successful
Figure 2: The CDF of the link margin between the actual SNR
measured by the channel sounder, and the SNR threshold chosen
by SoftRate’s rate adaptation algorithm.
Wi-Fi transmission there is some link margin. Link margin is the
difference between the instantaneous channel SNR and the mini-
mal SNR required to decode the packet. The link margin’s value is
dependent on the accuracy of the SNR measurement, how conser-
vative the rate adaptation protocol is, the available discrete bitrates
and the amount of external interference.
To measure the link margin in a realistic setting, with varying
channel SNRs and a practical rate adaptation algorithm, we per-
form the following experiment. We use RUSK Stanford Channel
Sounders [19] to measure a 20M Hz channel on the 2.4GHz ISM
band. One sounder is ﬁxed, while the second one is moved at walk-
ing speed. Next, we simulate the rate adaptation decisions a state-
of-the-art rate adaptation algorithm, SoftRate [20], would make if
it were making decisions for the transmitter based on the channel
trace. For each bitrate SoftRate picks for transmitting a packet, we
measure the difference between the actual channel SNR (from the
trace) and the SNR threshold required for the packet to be decoded.
We collected a trace of about 70, 000 packets from our sounders.
Fig. 2 plots the CDF of these margins, measured over the packets
that were transmitted successfully.
The measured median link margin is 1.63dB and the average is
1.94dB. In other words, typically there is a considerable amount
of slack between the data rate used by the transmission and the data
rate the channel could actually support. Furthermore, the estimate
that we measured is most likely conservative. In commercial sys-
tems, Wi-Fi transmitters are conﬁgured to use higher link margins,
due to interference from legacy radios (e.g. microwave ovens) or
neighboring APs. Note that the link margin is negative for about
7% of the packets. For these packets, even though SoftRate chose a
bitrate that was too high for the SNR of the transmitted packet, the
algorithm ’got lucky’, and the packet was decoded successfully.
2.4 Flashes: Flashback’s Control Signals
The goal of Flashback is to provide a control plane for asyn-
chronous wireless networks with negligible overhead. To this end,
Flashback requires a messaging technique, which would allow nodes
to concurrently send control messages without harming the ongoing
data transmission, and without requiring any synchronization.
Flashback exploits the link margin to create the desired control
messaging mechanism. The basic idea is that since typical trans-
missions have some link margin, any node could send a control
packet even while a concurrent data transmission is taking place, as
long as the interference from the packet is smaller than the tolerable
margin.
However, simply sending regular Wi-Fi packets as control mes-
sages on top of concurrent data packets is doomed to fail for two
reasons. First, the receiver needs to have a way to detect and de-
code the control packet. Since the power of the data packet would
−1012345600.10.20.30.40.50.60.70.80.91Link Margin SNR [dB]Link Margin CDFtypically be much stronger than the control packet, it would be dif-
ﬁcult to reliably determine whether a control packet has actually
been sent, if it is limited to a signal that is weaker than 1.94dB on
average. Second, the amount of interference that the control packet
would cause is a function of both the power at which it is trans-
mitted, as well as the channel between the ﬂash transmitter and the
receiver. To ensure that the interference stays within the required
tight SNR margin, the control transmitter would have to precisely
estimate the channel and set its transmission power to meet the link
margin requirements. Given that the uncertainty involved in link
SNR estimation is the raison d’être of link margins, it would be
risky to rely on high precision SNR estimation to ensure that the
margin is met.
Flashback’s insight is to utilize the fundamental properties of
OFDM modulation to concurrently send easily decodable control
messages, while limiting the interference of the control messages
to a level below the link margin. Flashback leverages the time-
frequency abstraction of OFDM to localize the interference the con-
trol messages cause to the data packets. Instead of sending a regular
OFDM packets over the entire band, the control message transmit-
ter sends ﬂashes. Flashes are simple sinusoids that have a frequency
equal to the frequency of a speciﬁc subcarrier, and duration equal
to the OFDM symbol time. The ﬂash appears as a power spike,
localized to a speciﬁc point in the time-frequency OFDM grid, cor-
responding to the frequency of the ﬂash sinusoid and the time slot
in which the ﬂash was transmitted. Since the ﬂash transmitter fo-
cuses all its power on a single subcarrier, in most cases the ﬂash has
much higher power relative to the data transmission symbols. Con-
sequently, the ﬂash’s position on the time-frequency OFDM grid is
easy to detect using a simple peak detection algorithm. Note that
Flashback doesn’t synchronize the ﬂashes to the data symbols, so
there might be time and frequency offsets between the grids of the
transmitter and the receiver. We address these later in our design.
In order to decode the data transmission, the receiver ﬁrst detects
the ﬂashes, and then instead of reading the erroneous bits from the
symbols that were ﬂashed, the receiver erases them. In other words,
instead of causing bit errors due to concurrent control messaging,
Flashback exploits the fact that ﬂashes are easily detectable to con-
vert them to bit erasures. Channel codes can correct twice as many
bit erasures as bit errors [16, 18]. An additional advantage of ﬂash-
ing is that it causes bit erasures in short bursts, and wireless channel
codes are designed to handle bursty interference. Due to all these
factors, as long as the number of ﬂashes is limited, a receiver can
use simple algorithms to decode both the data and ﬂash transmis-
sions concurrently.
How can nodes leverage ﬂashes to send control messages? The
basic idea is to use the relative subcarrier position of the ﬂashes as
a way to signal a small set of bits. For example, a transmitter can
send two consecutive ﬂashes at subcarriers 2 and 27 and use the dif-
ference (25) as the means to encode information. Using the relative
distance between subcarriers has the advantage of being robust to
frequency offset errors. In Sec. 3.2 we describe a simple and robust
modulation scheme that uses the relative subcarrier distance idea to
design a control messaging algorithm. We also describe a protocol
that mediates which node can send a control message at any point.
While this discussion provides the basic intuition behind Flash-
back, several practical questions remain.
• How many ﬂashes can a Wi-Fi data transmission tolerate?
How does the link margin relate to the number of allowed
ﬂashes?
• How does the receiver reliably detect ﬂashes and decode con-
trol messages? How do we prevent the high powered ﬂashes
from saturating the ADC?
• How do we ensure that the number of ﬂashes is under the tol-
erable limit when multiple nodes want to send control pack-
ets? What is the protocol for accessing the shared control
plane?
• How can the MAC layer leverage this new decoupled control
channel?
In the next section, we describe the design of Flashback that ad-
dresses these questions.
3. DESIGN
In this section we describe the control plane’s three components:
the basic ﬂashing transmission and detection mechanisms, the tech-
nique that transforms ﬂashes into short binary control messages,
and the protocol for nodes to asynchronously access the control
plane. We also describe the minor changes the data plane receiver
has to implement to decode concurrently transmitted data packets.
Before we proceed, we deﬁne several notations for the rest of
the paper. We assume that nodes use Wi-Fi OFDM for data packet
transmission with 64 subcarriers spread over a 20M Hz channel,
where each OFDM symbol lasts 4µs. As discussed before, OFDM
can be abstracted as a time-frequency coordinate system (i, j), where
0 ≤ i ≤ 63 identiﬁes the subcarrier and j is the time slot. To send
a data packet, a node ﬁlls these coordinates with different constel-
lation samples. The magnitude of the constellations is a function of
the transmit power P with the following constraint:
(cid:80)63
i=0
(cid:80)L
j=1 |xij|2
L
≤ P
(1)
Where xij is the complex symbol transmitted on the (i, j) coordi-
nate, and L is the number of symbols in the packet.
We deﬁne R, as the maximum number of ﬂashes that all the
nodes can send per second over the network, without harming the
performance of the data transmission (i.e., without introducing more
than 1% of errors). The value of R is a function of the link margin,
which depends on the PHY’s rate adaptation algorithm, as well as
the accuracy of the ﬂash detection algorithm. In our experimental
evaluation we found that for Wi-Fi, even a conservative approach
that minimizes ﬂash interference with a state-of-the-art rate adap-
tation algorithm, allows Flashback to use a ﬂash rate R of 50,000
ﬂashes per second.
3.1 Flashing
Flash transmission is simple to implement. Using the OFDM co-
ordinate abstraction, a ﬂash transmission amounts to transmitting a
complex constellation f on a speciﬁc co-orindate (i, j), and zero-
ing all other coordinates on the same time slot (an entire column
in the grid). In practice, this requires the node to send a single si-
nusoid that lasts for 4µs with frequency corresponding to the i’th
subcarrier. The actual time domain message is generated using the
standard OFDM modulator (i.e.
it is passed through an FFT and
the rest of the transmission chain). Flash transmission therefore
requires no extra transmit hardware or signal processing logic.
The magnitude of the ﬂash f is larger than the magnitudes used
for sending data symbols. To see why, consider the power constraint
in Eq. 1. Since for a given j, the node sends zeros on all of the i
coordinates except one, the power constraint will be satisﬁed even
if the magnitude of the ﬂash is much higher than the one used for
data symbols. The higher magnitude aids detection, as explained in
the next subsection. In our current implementation, ﬂashes trans-
mit at 64× greater power than the power used for individual data
symbols. Prior work has made a similar observation on how using
higher magnitude signals with narrower width Wi-Fi channels helps
improve range [5].
nel SNRs might need to delay their ﬂashes until the data channel is
not occupied by data packets with high SNRs (e.g. packets with a
high bitrate).
3.1.2 Data Packet Decoding
Flashback requires minimal changes to data packet decoding in
the presence of concurrent ﬂashes. As discussed before, the receiver
erases the data symbols that are present at the same coordinates as
the ﬂashes. Practically, the data decoding PHY is instructed to ig-
nore the demodulated bits for those symbols, and inform the de-
coder that these bits have been erased. It is known that erasures are
easier to handle than bit errors, and require half the redundancy to
correct [16, 18].
An important beneﬁt of this scheme is that we do not have to
change the existing OFDM PHY decoding hardware for decoding
data in the presence of ﬂashes, since soft Viterbi decoders support
erasures.
3.2 Messaging with Flashes
The goal of the modulation algorithm described below is to com-
municate a series of bits that represent the control message, and
communicate it to the receiver using a sequence of ﬂashes. Note
that Flashback offers a generic short messaging system that we can
use for implementing any form of control functionality. In this sec-
tion, we will describe a technique that provides control messag-
ing rates of 175Kbps assuming that the maximum ﬂashing rate is
50, 000 per second. However, as well see in Sec. 5 depending on
interference conditions, nodes can ﬂash at rates as high as 100, 000
per second, and the scheme below can be appropriately modiﬁed to
provide a messaging rate of 400Kbps.
We make three assumptions for the ﬂash modulation algorithm:
• Flashback cannot assume any synchronization between nodes.
Speciﬁcally, we cannot assume that the time-frequency grids
of the data transmitter and the ﬂash transmitter are tightly
aligned.
• At any point, only one node can send a ﬂash-based control
message on the control plane. This assumption simpliﬁes the
messaging design as we show below.
• Nodes have the ability to sense whether the AP is currently
transmitting a data packet. The reason for this requirement
is that we assume the AP is half-duplex, and therefore any
ﬂashes that would be sent while the AP is transmitting cannot
be decoded by the AP.