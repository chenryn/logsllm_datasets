## Bug Report
**Current Behavior**
babel is confused about a duplicate declaration when a type is imported and a
value with the same name is declared locally. See code below.
**Input Code**
The following code results in a "Duplicate declaration" error, but is accepted
by TypeScript (the compiler). It's because the `SomeThing` import is a type
(for example `export interface SomeThing{}`), whereas the local const
declaration is a value, so the two are not actually in any conflict.
    import { SomeThing } from './module';
    const SomeThing = 1;
**Expected behavior/code**
The babel typescript transform should accept the same code as the typescript
compiler.
**Babel Configuration (.babelrc, package.json, cli command)**
    module.exports = {
      presets: [
        "next/babel",
        "@zeit/next-typescript/babel"
      ],
      plugins: [
        ["react-intl", { messagesDir: "./locale/en/messages/" }],
        ["emotion", { inline: true, autoLabel: true }],
        ["transform-define", require("./env.js")]
      ]
    };
**Environment**
  * Babel version(s): @babel/PI:EMAIL