1.200000
0.206000
Time
一旦设置好连接两端的 ISN，接下来传输
第9章让网络不再卡189
---
## Page 205
190Wireshark数据包分析实战（第2版）
注意
TCPACK数据包：
数据包序号。图9-6中可以看到一个这样的例子。
号时，如遇到不合顺序的序号，它就知道数据包丢失了。
的数据进行确认。
录中的第一
发送主机
个数据包如图9-8所示。
图9-6TCP序号和确认号
SEQ#:6000 Data Size:500
SEQ#:5000Data Size:500
SEQ#:5000DataSize:500
ACK#:6000
ACK#:5500
ACK#:6500
接收主机
---
## Page 206
Str
Dx10
复选框
功能，选择Edit->Preferences，在 Preferences 窗口中选择Protocols，然后选
号，
发送主机
如图9-9所示。
bytes
[validation disabled]
60（38760
D
图9-7来自接收方的重复ACK导致快速重传
图9-8ACK显示了下一个期待的序号
COO
78
快速重传SEQ：5500数据大小：500
yTSGHPE
SEQ#：6000数据大小
SEQ#：5000数据大小
重复ACK（3）#：5500
重复ACK（2）#：5500
重复ACK（1）
ACK#:6000
AOK#5500
8
500
0195
第9章让网络不再卡191
接收主机
---
## Page 207
2000001972
ags:
21
日
192Wireshark数据包分析实战（第2版）
str
数据包中发送一个重复的ACK。
图9-10所示，接收主机注意到这个数据包的序号不符，就在捕获记录的第3个
并非是我们所期待的。这表明期待的数据包在传输中莫名其妙地丢失了。如
ate
(e5]
[vadatfon dtsaled]
11109511300
38760(38760)
对我们和接收方而言都是一种不幸，下一个数据包的序号是13109841300
据包
[valtdation dfsabTed]
图9-9此数据包的序号与预料的不同
MTTF
图9-10第一个重复ACK数据包
8
P
---
## Page 208
00012.172.16
11.
(3
Dryte
传输，并重新发送丢失的数据包。图9-12显示了丢失数据包的快速重传。
据包。这导致它传输第三个、也是最后一个重复ACK。
因此，接收主机发送第二个重复ACK。接收方又收到一个包含错误序号的数
速重传的ACK数据包
发送方收到来自接收方的第三个重复ACK之后，就强制停止所有的数据包
0
SEQ/ACKAnalysis标题下的Packet Details面板。若展开此标题，你会发现
tes
[val1datton dtsatlsd]
捕获文件的第4个数据包是发送主机以错误序号发送的另一
如图9-11所示，接下来的几个数据包继续这个过程，
这个数据包被列为数据包1的重复ACK.
在Packet List面板的Info列中再次出现了重传数据包，正如前面的例子，
In11ght:15048]
图9-11由于乱序数据包的影响，生成了额外的重复ACK
图9-12重复ACK引发了去失数据包的快连重传
195
第9章让网络不再卡193
一个数据区块0
---
## Page 209
9.2
注意
TCP流控制
次握手过程中协商开启了选择性ACK
现代TCP/IP协议栈的实现都支持选择性ACK，因此你会发现这个功能通常
的每一个数据包
都会被启用。
一个糟糕的协议，但幸好它做到了。
何工作的
据
重传和重复ACK都是TCP反应性的功能，被设计用来从数据包丢失中恢
再次确认这些数据，并处理缓冲区的内容。
---
## Page 210
9.2.1
客户端
调整窗口大小
处理数据时，它可以调整接收窗口的大小。它通过减小向发送方返回ACK数据
包丢失和数据损坏。幸好，当服务器太繁忙，以致不能以接收窗口宣告的速率
地清空缓冲区，腾不出空间来接收新数据。如果没有流量控制，这将导致数据
理缓冲区的数据。
时，TCP栈就生成并发送一个确认作为响应，但是接收方不可能总是迅速地处
当一台繁忙的服务器处理来自多个客户端的数据包时，服务器可能会缓慢
调整窗口大小的过程相当明确，但有时候它也不尽人意。每当接收到数据
3000字节
1000字节
2000字节
2500字节
图9-13接收窗口使得接收方不被数据淹没
ACK
ACK
服务器
5000字节
可用的领存空间
2500字节
5000字节
2000字节
1000字节
500字节
第9章：让网络不再卡195
5000字节
5000字节
5000字节
5000字节
5000字节
5000字节
窗口大小
---
## Page 211
客户端
9.2.2
用零窗口通知停止数据流
但接收窗口能够将负面影响最小化。
一个ACK数据包，
收窗口的状态。一旦服务器能再次处理数据，
客户端收到这个数据包时，它会停止所有数据传输，
恢复通信。图9-15显示了零窗口通知的例子。
当出现这种情况时，服务器可以发送一个数据包，
ACK-窗口更新：1000字节
2000字节
2000字节
800字节
150字节
图9-14服务器变繁忙时，可以调整窗口大小
ACK
，指明更大的窗口大小
服务器
可用的缓存空间
5000字节
1000字节
3000字节
200字节
1000字节
50字节
但仍通过传输“保活
指明窗口大小是零
5000字节
1000字节
5000字节
窗口大小
1000字节
1000字节
1000字节
以检查服务器
萌
---
## Page 212
9.2.3TCP滑动窗口实战
客户端
Tne②
端继续发送数据。
通知客户端它现在可以接收数据了，而且它现在的窗口大小是1000字节。客户
传输，并发送一个保活数据包。收到保活数据包之后，服务器响应一个数据包，
面的3个数据包中，这个域的值不断减小。
中探究它。
92
在这个文件中，我们从192.168.0.20发送给192.168.0.30的几个TCPACK
ACK-窗口更新：1000字节
ACK-窗口更新：0字节
图9-15当窗口大小设为0字节时，数据传输就停止了
2000字节
2000字节
900字节
保活
图9-16这些数据包的窗口大小在递减
168
服务器
可用的缓存空间
3000字节
1000字节
1000字节
100字节
0字节
第9章让网络不再卡197
5000学节
5000字节
1000字节
1000字节
0字节
窗口大小
0字节
---
## Page 213
198
3Wireshark数据包分析实战（第2版）
的情形。
型指标。
分，告诉我们这是一个零窗口数据包。
validation disaiTee]
一个数据包就是窗口更新。
引起网络“打”
图9-17零窗口数据包说明了主机不能再接收任何数据
2
2211
windoul
导致数据传输变慢或失败。
---
## Page 214
0000291721136351951208TP
30
1
[stream
Ttse
x10
Index:
如图9-19所示，紧接着就是一个从172.31.136.85返回的零窗口数据包。
是看到一个保活数据包。
CACK)
这看起来与图9-17里的零窗口数据包非常相似，但结果却很不相同。
图9-18TCP窗口更新数据包告诉其他主机它又可以传输数据了
idation gisabled]
CART
图9-19零窗口数据包使数据传输暂件
66bytes
21
13708005704329A10977W
capt
V-22471
第9章让网络不再卡199
而
在
---
## Page 215
123
9.3从TCP错误控制和流量控制中学到的
200Wireshark数据包分析实战（第2版）
(12
主机发送零窗口数据包，另一台则发送保活数据包。
TCP
[vadatfon disabTed]
36760(38760)
重传数据包
问题的一些注意事项。
Keep-
图9-20保活数据包保证零窗口主机仍然在线
LGS
图9-21零窗口和保活数据包不断出现
(528b12s)
70438729W108en0V-133433810R2205
因此
---
## Page 216
9.4
4定位高延迟的原因
重复ACK数据包
失的影响，（可能的话）你应该考虑到在客户端那边捕获流量以观察是否有
鼓里，因为你看不到重传的数据包。如果你怀疑服务器端受到了数据包丢
数据，并且它确实没有接收到客户端发送、重传的数据包，那你将被蒙在
你能否看到重传取决于你在分析的通信的哪一端。如果你从服务器端捕获
零窗口和保活数据包
那不管什么情况导致第二个数据包丢失都可能只是暂时的，因此在大部分情况
以引发第二个数据包的快速重传。由于你已经接收到第一个和第三个数据包，
例如，如果服务器只接收到了第一个和第三个数据包，就会发送一个重复ACK
信两端捕获到重复ACK的流量。记住当接收到乱序数据包时才触发重复ACK
务器检测到来自客户端的数据包丢失时就发送它。在多数情况下，你可以在通
重传数据包。
数据包。
的情况，就应该集中调查那里。通常你会在网络通信的两端看见窗口更新
题可以直接导致窗口大小减少或达到零窗口状态，因此，
在通信的客户端捕获数据包。
此，当你在服务器端怀疑有数据包丢失却没有看到任何重复ACK时，可以考惠
需要采用其他技术来定位高延迟的原因。
下，你可以成功发送并接收重复ACK。当然，有时候这个情况也未必成立，因
一个数据包。
滑动窗口与服务器接收、处理数据的故障直接相关。
我倾向于把重复ACK看作重传的表面对立词（pseudo-opposite），因为当服
在这里，最有效的办法之一是查看初始连接握手以及接下来的两个数据包。
有时候，
数据包丢失并不是延退的原因
也许你会发现，当两台主机间通
第9章让网络不再卡201
如果你发现这样
服务器的某些问
---
## Page 217