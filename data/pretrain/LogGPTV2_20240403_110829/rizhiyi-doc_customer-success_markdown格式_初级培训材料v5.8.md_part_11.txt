_es.X.sum_of_squares _es.resp_len.sum
_es.X.variance _es.resp_len.sum_of_squares
_es.X.std_deviation _es.resp_len.variance
_es.resp_len.std_deviation
top(field, count) top(apache.status, 10000)
field: 待统计的字段
top count：返回个数
统计field内最多出现的若干
个值
hg(field, interval) hg(apache.status, 200)
field: 待统计字段，必须为数
histogram or hg 值型
interval: 直方图间隔
直方图统计
dhg(field, interval) dhg(timestamp, 1h)
field: 待统计字段，数值当做
以毫秒为单位的时间戳
interval: 时间间隔，描述方式
date_histogram
如1m, 1d... 后缀有以下几
or dhg
种：y|M|w|d|h|m|s
时间直方图统计，可以认为是
直方图统计的一种特殊形式
113
日志学院
rb(field, (start, end), rb(apache.status,(100,200) , (200,300), (300,400))
(start,end), ....)
field: 待统计字段，数值型
rb(range_bucket) (start,end): 待统计区间，可
以设置多个统计区间
区间统计
此函数接收两个参数，第一个 以下示例返回每一小时一个时间桶，按照tag分
参数为上述stats的统计函 类后的平均apache.resp_len对应的面积图
sparkline(agg(X), 数，共支持avg, min, max,
span) sum, count, distinct_count， stats sparkline(avg(apache.resp_len), 1h) by tag
其中X为数值型字段；第二
个参数为时间间隔
提示：
由于stats函数特殊性，这里给出完整的参数说明。本文会对其他命令给出实例，详细说明
请参考《日志易检索参考》手册。
至此您也许可以大致了解日志易SPL基本语法构成：
“ query1 AND query2 | 命令1 | 命令2 …”
SPL：bucket分时统计
appname:nginx
| bucket timestamp span=10m as ts
| stats count() by ts
结果如图：
114
日志学院
SPL说明：
l 为了统计当日每10分钟交易情况。我们引入了数据分桶命令bucket，bucket 通过
timestamp（时间戳）按照每10分钟分割，然后通过stats命令统计每10分钟内发生
事件数量。
l 命令中为stats命令增加的by 关键字，该关键字后面为字段。主要对数据进行分组统
计。用法同sql 中group by。
思考：
1. 您在 stats count() by 后面更换相关分组字段会形成什么样的效果？
2. 是否可以通过饼图反应网页访问状态？
3. 对访问页面进行流量统计会得到什么样的结论？
SPL：rename 优化字段名称
appname:nginx
| bucket timestamp span=10m as ts
| stats count() by ts
|rename ‘count()’ as “事件量”, ts as “时间”
结果如图：
115
日志学院
SPL说明：
l 通过上面的实例可以看出rename命令可以调整字段名称，在使用的时候需要使用as
来连接别名。如果被调整后的字段名称为中文需要用双引号扩起来。
画龙点睛
数据分析行业有句老话，“字不如表，表不如图”。相信您通过“小试牛刀”后已经开始
跃跃欲试期待让别人更直观的读懂数据。日志易平台自带实时图表功能可以满足您对数据
可视化要求，无需二次开发。
案例2：透过数据看态势
可视化：体现数据趋势的图表
在搜索栏输入：
appname:nginx
| bucket timestamp span=10m as ts
| stats count() by ts
|rename 'count()' as "事件量", ts as "时间"
然后选择“类型”如图：
116
日志学院
趋势效果如图：
系统会自动识别数据分组字段以适应图表。如果图表显示有误，可以通过“设置”按钮进
行调整。与此同时可以通过“保存为”将图表保存为“趋势图”在仪表盘展示，或存成图
片作为汇报素材。
117
日志学院
SPL：top 快速获取排名
如果您想快速获得客户端访问IP地域分布信息，或者快速提取某属性数量靠前的信息我们
建议您使用top命令，如：
appname:nginx AND nginx.request_time:*
| top 5 nginx.client_ip.geo.province
目前日志易平台提供动态图表有19种之多，根据数据的特性选择相应的图表。在图表的
选择方面我们推荐您阅读本材料《数据展示》章节。未来在生成图表的过程中经常需要对
现有数据进行处理，那么接下来需要您进入下一小节的学习。
爬梳剔抉
爬梳剔抉，有认真整理选择之意，在做数据分析的时候时常需要对数据进行整理，日志易
SPL 提供了一些常用数据整理命令，您可以通过下面几个案例来了解。
案例3：赋值与计算
在数据整理过程中经常需要对数据单位进行换算、时间格式调整或根据条件判断并对变量
进行赋值等计算。
118
日志学院
如：您比较关注网站的访问状态趋势，想要查看客户端连接状态为200（正常访问）和非
200（不正常访问）状态的对比情况。
SPL：eval 为变量带来无限可能
普通的统计方法：
appname:nginx | stats count() by nginx.status
对于看不懂Nginx日志的人来说并不知道状态为200和400有什么区别。是否可以优化一
下统计结果呢？当然可以。
appname:nginx
| eval new_status=if(nginx.status=="200","正常","异常")
| stats count() by new_status
注：如果nginx.status做了数值型转换，则”200”不应该再加引号，否则会被当成字符型
计算，以至于得到的结果全是异常。
结果如图：
119
日志学院
通过上面的实例您可能已经发现了，通过eval 命令结合if判断函数可以新生成字段
new_status然后对这个值进行分组统计即可形成上述效果。另外eval 本身也支持运算符，
如：
按照优先级自低到高排序：
1）|| （逻辑或）二元操作符，操作数必须是布尔类型
2）&&（逻辑与）二元操作符，操作数必须是布尔类型
3）!=（不等于）==（等于）
4）>=，>，<=, <
5) +，- 算术加减，支持数值类型，+另支持字符串
6）*，/，% 算术乘，除，余，乘除支持数值类型
Eval表达式与计算支持的函数：
函数 描述 示例
此函数获取一个数字 以下示例返回absv，该变量的值为数值字段value的
abs(X) X，并返回其绝对值 绝对值：
… | eval absv = abs(value)
empty(field)
empty(x) 判断某个field是否为空 如果存在返回false，否则返回true
比如：empty(apache.status)
此函数会获取X, Y的参 以下示例返回http状态代码的描述
数对，X参数必须为布 … | eval desc = case(error == 200, "OK", error ==
尔表达式，如果结果为 500, "Internal Server Error ", default, "Unexpected
case(X, "Y", …，
true，则返回响应的Y error")
[default, Z])
的值，如果计算结果均
为false, 则返回default
对应的值，default部分
120
日志学院
为可选，不指定
default，则default的返
回为空值
函数返回X向上取整的 以下示例返回n = 5
ceil(X)
整数值 … | eval n = ceil(4.1)
此函数接受任意数量的 假设有一部分日志，用户名字段放在user_name或
并返回第一个不为空值 者user字段里，以下示例定义名为username的字
coalesce(X, …) 的值，如果所有参数都 段，该字段值为user_name和user字段不是空值的
是空值，则返回空值 那一个：
… | eval username = coalesce(user_name, user)
函数向下取整为最接近 以下示例返回 n = 4
floor(X)
的整数 … | eval n = floor(4.1)
函数接受3个参数，第 以下示例将检查status的值，如果status==200，则
一个X为布尔表达式， 返回”OK”，否则返回Error
如果X的计算结果为 … | eval desc = if (status == 200, "OK", "Error")
if(X, Y, Z)
true，则结果为第二个
参数Y的值，否则返回
第三个参数Z值
函数接收一个字符串类 如果method的字段值为GET，以下示例n的值为3
len(X) 型的参数，返回字符串 … | eval n = len(method)
的长度
此函数接受一个字符串 假设method的值为GET，以下示例将返回”get”
lower(X) 类型的参数，返回其小 … | eval lowerstr = lower(method)
写形式
此函数接受一个数值类 以下示例将返回length的自然对数
log(X) 型的值，返回X的自然 … | eval loglength = log(length)
对数
此函数接受两个数值类 以下示例将返回101
max(X, Y) 型的参数，返回值较大 … | eval maxv = max(101, 100.0)
的那个值
此函数接受两个数值类 以下示例将返回 100.0
min(X, Y) 型的参数，返回较小的 … | eval minv = min(101, 100.0)
那个值
121
日志学院
此函数将使用正则表达 当且仅当字段于IP地址的基本形式匹配时，则返回
式Y对X进行匹配，返 true，否则返回false，这里使用了^和$表示执行完
match(X, Y) 回是否匹配成功 全匹配
… | eval matched = match(ip,
"^\\d{1,3}\.\\d{1,3}\.\\d{1,3}\.\\d{1,3}$")
此函数接收三个参数， 以下示例返回"bce"
其中X必须为字符串，Y … | eval subs = substring("abcedfg", 1, 4)
和Z是数字（Y和Z从
0开始），返回X的子
substring(X, Y[, Z]) 字符串，返回X的第Y
个字符到第Z个（不包
括）字符之间的字符 ，
如果不指定Z则返回Y
位置开始的剩余字符串
该函数接受一个参数， 以下示例返回123.1
可以是字符串或者数值 … | eval value = todouble("123.1")
todouble(X)
型，返回对应的双浮点
数的值
该函数接受一个参数， 以下示例返回123
tolong(X) 字符串或者数值类型， … | eval value=todouble("123")
返回对应的long值
该函数接收一个参数， 以下示例返回”123.1”
可以是字符串或者数值 … | eval strv = tostring(123.1)
tostring(X)
类型，返回对应的字符