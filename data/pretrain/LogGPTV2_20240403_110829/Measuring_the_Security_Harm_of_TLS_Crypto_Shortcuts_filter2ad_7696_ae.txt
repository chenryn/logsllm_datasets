a single TLS connection. This results in the time-to-ﬁrst
byte on the ﬁrst request being identical to standard HTTP
over TLS, but all follow-on requests are signiﬁcantly faster
without expanding the PFS vulnerability window.
12
Rotate STEKs frequently Reducing the time period that
a STEK is used to encrypt session tickets is the simplest way
to reduce the vulnerability window when using session ticket
resumption. While Figure 3 shows that many domains are
already doing this, it also shows that many are not. Twitter,
CloudFlare, and Google have all created their own custom
key rotation solutions [27, 33, 34], but, to our knowledge, no
popular server software does this, with the exception of the
most recent release of Caddy [28].
Use different STEKs for different regions Rather than
sharing a single session ticket key globally, large sites should
seek geographical diversity by using different keys in dif-
ferent regions. In addition to limiting exposure if a single
server is compromised or physically attacked, this practice
would help constrain the effects of legally mandated STEK
disclosure to connections within a particular jurisdiction.
Reduce session cache lifetimes
Speciﬁc to session ID re-
sumption, quickly expiring cached session state is also useful.
The number of connections that are at risk of decryption at
any time grows proportionally with the lifetime of the server-
side state. By measuring the duration of a typical user visit,
operators can use that to ensure that a user only has to conduct
one full handshake per visit but also refrain from retaining
the session state longer than necessary.
Store, distribute, and erase secrets securely
TLS imple-
mentations need to ensure that TLS secrets handled securely
before, during, and after their use. For a small site, these de-
tails should be handled by the TLS implementation. But for
more complicated deployments that involve synchronizing
caches or STEKs across multiple servers, operators need to
be more directly involved. Whatever mechanism they design
to synchronize STEKs needs to ensure that these keys are
transmitted securely and maintained only in memory (rather
than persistent storage), so that they can be reliably discarded.
9. RELATED WORK
The HTTPS ecosystem has been widely studied. Previ-
ous work has tracked the conﬁguration and deployment of
HTTPS [18, 29] and community projects exist to provide
up-to-date Internet-wide measurements of HTTPS servers
and certiﬁcates [16, 17]. However, none of these works has
directly measured support for TLS session resumption, and
none has attempted to quantify the lifetimes of cached ses-
sions, STEKs, or repeated Difﬁe-Hellman values. We build
upon this prior research in a focused effort to understand and
quantify the impact of these performance enhancements on
forward secrecy and their effect on the overall attack surface
of the HTTPS ecosystem.
Previous work has shown that some TLS implementa-
tions generate a single DHE value and reuse it for period
of time. In May 2015, Adrian et al. [1] found that 17% of
randomly sampled IPv4 hosts that had browser-trusted certiﬁ-
cates reused a DHE ga value at least once over 20 connections,
and they noted that server-side DHE reuse was the default
behavior in OpenSSL and Microsoft SChannel. In January
2016, OpenSSL entirely removed support for DHE reuse fol-
lowing CVE-2016-0701 [44]. Our work expands on the prior
44measurements by providing updated metrics following the
OpenSSL change, by characterizing the lengths over which
Difﬁe-Hellman values are repeated, and by also measuring
reuse for ECDHE (now the most popular key exchange).
We are not the ﬁrst to recognize the impact of TLS session
resumption techniques on forward security. Representatives
from Mozilla, Google, Twitter, and CloudFlare have all writ-
ten about aspects of this issue [27, 33, 34, 54]. Instead, our
work seeks to provide an empirical foundation for future dis-
cussions, system designs, and operator conﬁguration choices
by providing the ﬁrst detailed global measurements about
the use and impacts of session resumption and related TLS
crypto shortcuts. To our knowledge, we are also the ﬁrst to
examine the effect of widespread inter-domain sharing of
session secrets.
10. CONCLUSION
We conducted a 9-week study of HTTPS within the Alexa
Top Million with a focus on understanding both the preva-
lence and characteristics of TLS performance enhancements
such as (EC)DHE value reuse, session ID resumption, and
session ticket resumption. Through this study, we were able
to characterize the effects of cryptographic shortcuts on the
promises associated with the use of forward-secret ciphers.
Our ﬁndings show that the TLS ecosystem achieves much
weaker protection from forward secrecy than statistics about
support for forward-secret handshakes would suggest. They
also emphasize the need for the security community to clearly
communicate the relevant tradeoffs between security and per-
formance to server operators.
Acknowledgments
The authors thank Adam Langley, Vern Paxson, Nick Sulli-
van, and our shepherd, Christo Wilson, for insightful discus-
sions and feedback. We also thank the exceptional sysadmins
at the University of Michigan for their ongoing help and sup-
port. This material is based upon work supported by the U.S.
National Science Foundation under grants CNS-1345254,
CNS-1409505, CNS-1518888, and CNS-1530915, by the
NSF Graduate Research Fellowship Program under grant
DGE-1256260, by the Post-9/11 GI Bill, by the Google Ph.D.
Fellowship in Computer Security, and by an Alfred P. Sloan
Foundation Research Fellowship.
11. REFERENCES
[1] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry,
M. Green, J. A. Halderman, N. Heninger, D. Springall,
E. Thomé, L. Valenta, B. VanderSloot, E. Wustrow,
S. Zanella-Béguelin, and P. Zimmermann. Imperfect
forward secrecy: How Difﬁe-Hellman fails in practice.
In 22nd ACM Conference on Computer and
Communications Security, Oct. 2015.
[2] Alexa Internet, Inc. Alexa Top 1,000,000 Sites.
http://s3.amazonaws.com/alexa-static/top-1m.csv.zip.
[3] J. Angwin, C. Savage, J. Larson, H. Moltke, L. Poitras,
and J. Risen. AT&T helped U.S. spy on Internet on a
vast scale. The New York Times, Aug. 16, 2015.
http://www.nytimes.com/2015/08/16/us/politics/att-
helped-nsa-spy-on-an-array-of-internet-trafﬁc.html.
[4] N. Aviram, S. Schinzel, J. Somorovsky, N. Heninger,
M. Dankel, J. Steube, L. Valenta, D. Adrian, J. A.
Halderman, V. Dukhovni, E. Käsper, S. Cohney,
S. Engels, C. Paar, and Y. Shavitt. DROWN: Breaking
TLS with SSLv2. In 25th USENIX Security Symposium,
Aug. 2016. https://drownattack.com.
[5] M. Belshe, R. Peon, and M.Thomson. Hypertext
Transfer Protocol Version 2 (HTTP/2). RFC 7540
(Proposed Standard), May 2015.
[6] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud,
C. Fournet, M. Kohlweiss, A. Pironti, P.-Y. Strub, and
J. K. Zinzindohoue. A messy state of the union:
Taming the composite state machines of TLS. In 36th
IEEE Symposium on Security and Privacy, May 2015.
[7] E. Burzstein and J. M. Picod. Recovering Windows
secrets and EFS certiﬁcates ofﬂine. In 4th USENIX
Workshop on Offensive Technologies, Aug. 2010.
[8] Cavium. Intelligent network adapters.
http://www.cavium.com/
Intelligent_Network_Adapters_NIC4E.html.
[9] S. Checkoway, J. Maskiewicz, C. Garman, J. Fried,
S. Cohney, M. Green, N. Heninger, R.-P. Weinmann,
E. Rescorla, and H. Shacham. A systematic analysis of
the Juniper Dual EC incident. In 23rd ACM Conference
on Computer and Communications Security, Oct. 2016.
[10] CNE access to core mobile networks. Media leak.
https://theintercept.com/document/2015/02/19/
cne-access-core-mobile-networks-2/.
[11] Codenomicon. The Heartbleed bug.
http://heartbleed.com/.
[12] D. Cooper, S. Santesson, S. Farrell, S. Boeyen,
R. Housley, and W. Polk. Internet X.509 public key
infrastructure certiﬁcate and certiﬁcate revocation list
(CRL) proﬁle. RFC 5280 (Proposed Standard), May
2008.
[13] T. Dierks and C. Allen. The TLS protocol version 1.0.
RFC 2246 (Proposed Standard), Jan. 1999.
[14] T. Dierks and E. Rescorla. The transport layer security
(TLS) protocol version 1.2. RFC 5246 (Proposed
Standard), Aug. 2008.
http://www.ietf.org/rfc/rfc5246.txt.
[15] W. Difﬁe, P. C. Van Oorschot, and M. J. Wiener.
Authentication and authenticated key exchanges.
Designs, Codes and cryptography, 2(2):107–125, 1992.
[16] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and
J. A. Halderman. Censys: A search engine backed by
Internet-wide scanning. In 22nd ACM Conference on
Computer and Communications Security, Oct. 2015.
[17] Z. Durumeric, J. A. Halderman, et al. Internet-wide
scan data repository. https://scans.io.
[18] Z. Durumeric, J. Kasten, M. Bailey, and J. A.
Halderman. Analysis of the HTTPS certiﬁcate
ecosystem. In 13th ACM Internet Measurement
Conference, IMC ’13, pages 291–304, 2013.
13
45[19] Z. Durumeric, F. Li, J. Kasten, J. Amann, J. Beekman,
M. Payer, N. Weaver, D. Adrian, V. Paxson, M. Bailey,
and J. A. Halderman. The matter of Heartbleed. In 14th
ACM Internet Measurement Conference, IMC ’14,
pages 475–488, 2014.
[20] Z. Durumeric, E. Wustrow, and J. A. Halderman.
ZMap: Fast Internet-wide scanning and its security
applications. In 22nd USENIX Security Symposium,
Aug. 2013.
[21] R. Gallagher. Operation Socialist. The Intercept, Dec.
13, 2014. https://theintercept.com/2014/12/13/
belgacom-hack-gchq-inside-story/.
[22] S. Gallagher. Googlers say “f*** you” to NSA,
company encrypts internal network. Ars Technica, Nov.
2013. http://arstechnica.com/information-technology/
2013/11/googlers-say-f-you-to-nsa-company-
encrypts-internal-network/.
[23] B. Gellman and A. Soltani. NSA inﬁltrates links to
Yahoo, Google data centers worldwide, Snowden
documents say. The Washington Post, Oct. 30, 2013.
https://www.washingtonpost.com/world/national-
security/nsa-inﬁltrates-links-to-yahoo-google-data-
centers-worldwide-snowden-documents-say/2013/10/
30/e51d661e-4166-11e3-8b74-d89d714ca4dd_story.
html.
[24] Google. Google for work: Enterprise solutions to work
the way you live. https://www.google.com/work/.
[25] N. Heninger, Z. Durumeric, E. Wustrow, and J. A.
Halderman. Mining your Ps and Qs: Detection of
widespread weak keys in network devices. In
Proceedings of the 21st USENIX Security Symposium,
Aug. 2012.
[26] K. E. Hickman. The SSL protocol, Apr. 1995. https://
tools.ietf.org/html/draft-hickman-netscape-ssl-00.
[27] J. Hoffman-Andrews. Forward secrecy at Twitter, Nov.
2013. https://blog.twitter.com/2013/
forward-secrecy-at-twitter.
[28] M. Holt. Caddy 0.8.3 released, Apr. 2016.
https://caddyserver.com/blog/caddy-0_8_3-released.
[29] R. Holz, L. Braun, N. Kammenhuber, and G. Carle.
The SSL landscape: a thorough analysis of the X.509
PKI using active and passive measurements. In 11th
ACM Internet Measurement Conference, IMC ’11,
pages 427–444, 2011.
[30] Internet Security Research Group. Let’s Encrypt
certiﬁcate authority. https://letsencrypt.org/.
[31] Jimdo. Website builder: Create a free website.
http://www.jimdo.com/.
[32] D. Korobov. Yandex worker stole search engine source
code, tried selling for just $28k. Ars Technica, Dec.
2015. http://arstechnica.com/business/2015/12/
yandex-employee-stole-search-engine-source-code-
tried-to-sell-it-for-just-27000-2/.
[33] A. Langley. How to botch TLS forward secrecy, June
2013. https://www.imperialviolet.org/2013/06/27/
botchingpfs.html.
[34] Z. Lin. TLS session resumption: Full-speed and secure,
Feb. 2015. https://blog.cloudﬂare.com/
tls-session-resumption-full-speed-and-secure/.
[35] I. Lovecruft. Twitter, Dec. 2015. https://twitter.com/
isislovecruft/status/681590393385914368.
[36] M. Marquis-Boire, G. Greenwald, and M. Lee.
XKEYSCORE: NSA’s Google for the world’s private
communications. The Intercept, July 2015.
https://theintercept.com/2015/07/01/
nsas-google-worlds-private-communications/.
[37] J. McLaughlin. Spy chief complains that Edward
Snowden sped up spread of encryption by 7 years, Apr.
2016. https://theintercept.com/2016/04/25/
spy-chief-complains-that-edward-snowden-sped-up-
spread-of-encryption-by-7-years/.
[38] media-34103. Media leak.
http://www.spiegel.de/media/media-34103.pdf.
[39] P. Membrey, D. Hows, and E. Plugge. SSL load
balancing. In Practical Load Balancing, pages
175–192. Springer, 2012.
[40] Microsoft. TLS/SSL settings, Nov. 2015. https://
technet.microsoft.com/en-us/library/dn786418.aspx.
[41] mod_ssl: Apache HTTP server version 2.4.
https://httpd.apache.org/docs/2.4/mod/mod_ssl.html.
[42] Module ngx_http_ssl_module. http://nginx.org/en/docs/
http/ngx_http_ssl_module.html.
[43] Mozilla Telemetry. https://telemetry.mozilla.org/.
[44] OpenSSL security advisory, Jan. 2016.
https://www.openssl.org/news/secadv/20160128.txt.
[45] PCS harvesting at scale. Media leak.
https://theintercept.com/document/2015/02/19/
pcs-harvesting-scale/.
[46] K. Poulsen. Snowden’s email provider loses appeal
over encryption keys. Wired, Apr. 2014.
https://www.wired.com/2014/04/lavabit-ruling/.
[47] QUIC, a multiplexed stream transport over UDP.
https://www.chromium.org/quic.
[48] E. Rescorla. The Transport Layer Security (TLS)
protocol version 1.3 draft-ietf-tls-tls13-15, Aug. 2016.
https://tools.ietf.org/html/draft-ietf-tls-tls13-15.
[49] I. Ristic. Twitter, Apr. 2014. https://twitter.com/
ivanristic/status/453280081897467905.
[50] I. Ristic. SSL/TLS deployment best practices, Dec.
2014. https://www.ssllabs.com/downloads/
SSL_TLS_Deployment_Best_Practices.pdf.
[51] J. Salowey, H. Zhou, P. Eronen, and H. Tschofenig.
Transport layer security (TLS) session resumption
without server-side state. RFC 4507 (Proposed
Standard), May 2006. Obsoleted by RFC 5077.
[52] J. Salowey, H. Zhou, P. Eronen, and H. Tschofenig.
Transport layer security (TLS) session resumption
without server-side state. RFC 5077 (Proposed
Standard), Jan. 2008.
[53] J. Schahill and J. Begley. The great SIM heist. The
Intercept, Feb. 19, 2015.
https://theintercept.com/2015/02/19/great-sim-heist/.
14
46[56] K. Zetter. Google hack attack was ultra sophisticated,
new details show. Wired, Jan. 2010.
https://www.wired.com/2010/01/operation-aurora/.
[57] Y. Zhu. Why the web needs perfect forward secrecy
more than ever. EFF Deeplinks Blog, Apr. 2014.
https://www.eff.org/deeplinks/2014/04/
why-web-needs-perfect-forward-secrecy.
[54] T. Taubert. Botching forward secrecy: The sad state of
server-side TLS session resumption implementations,
Nov. 2014.
https://timtaubert.de/blog/2014/11/the-sad-state-of-
server-side-tls-session-resumption-implementations/.
[55] N. Weaver. In defense of bulk surveillance: It works,
Sept. 2015. https://www.lawfareblog.com/
defense-bulk-surveillance-it-works.
15
47