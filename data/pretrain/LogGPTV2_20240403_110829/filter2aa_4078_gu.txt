甚至是些情况下单独的单元来限制用户访 问 。
数据库范式
数据库开发人员 致力 于创建组织有序的、 有效的数据库。 为 了 帮助完成这个 目 标， 开发人员 定
义 了 若干被称 为 范式的数据库组织级别 。 使数据库表遵从范式的过程被称为 规范化。
607
608
CISSP 官方学 习指南(第 7 版)
尽管存在许多 范式， 但是其中 最常见的三种形式是: 第 一范式(lNF)、 第二范式(2NF)以及第三
范式。NF)。 这三种形式都添加 了 下面 的需求: 减少表中 的 冗余， 消除告都吴放直的数据， t丸行其他许
多 内 直处理任务。 范式是渐进的 ， 换句话说， 要采用 2NF 格式， 首先必须遵从 lNF 格式; 要采用
3NF 格式， 首先必须采用 2NF 格式。
数据库表的范式细节超出 了 CISSP 考试的范围 ， 但是某些 Web 资源、 能够帮助更详细地理解范式
范式需求。 例如， 读者可以参考站点 h即:lldatabases.about.∞m/odIspeci:fi叩roducts/a/ normalization.htm
上 "Database Normalization Basics" 的相关 内 容。
SQL 为管理员 、 开发人员和终端用户与数据库交互提供了必需的完整功能。 事实上， 目 前流行
的图形数据库界面只不过是对 DBMS 的标准 SQL 接 口进行了修饰。 SQL 本身被分为两个截然不同
的组件: 数据定义语言(DDL)， 允许创建和更改数据库的结构(数据库的结构被称为模式); 数据操纵
语言(DML)， 允许用户 与模式 内 包含 的数据交互。
20.2.2 数据库事务
关系数据库支持事务的显式和隐式使用 ， 从而确保数据的完整性。 每个事务都是 SQL 指令的离
散集， 作为一个组的这些 SQL 指令要么成功 ， 要么失败。 事务的一部分成功而另一部分失败的情况
不可能出现。 以银行内两个账户之间 的转账为例 。 使用 下面 的 SQL 代码， 可 以先在账户 100 1 中增
加 250 美元， 然后在账户 2002 中 减少 250 美元:
BEGIN TRANSACTION
UPDATE accounts
SET ba1ance = ba1ance + 250
WHERE a ccount number = 1001;
UPDATE accounts
SET ba1ance = ba1ance - 250
WHERE a ccount number = 2002
END TRANSACTION
设想一下这两条语句未作为事务的部分被执行而是被分别执行的情况。 如果数据库在第一个事
务完成和在第二个事务完成之间的某个时间点出现失败， 那么账户 100 1 中增加了 250 美元， 但是
账户 2002 中 的资金没有被相应减少。 这 250 美元就是凭空多 出的! 这个简单的示例强调了面向事务
的操作的重要性。
一个事务成功完成时， 这个事务己被提交给数据库， 并且不能取消。 事务的提交可以是显式的 ，
也就是使用 SQL 的 CO岛也但T 命令; 可 以是隐式的， 也就是成功到达事务结束进行提交。 如果必须
中止事务， 那么可以显式地使用 ROLLBACK 命令进行回被操作， 也可 以是硬件或软件故障引 起的
隐式回滚。 当一个事务被回滚时， 数据库会将 自 身还原至这个事务开始前的状态。
所有的数据库事务都具有 4 个必需的特征: 原子性、 一致性、 隔离性以及持久性。 这些属性合
称为 ACID 模型 ， 这是数据库管理系统开发中 的一个关键概念。 下面简要介绍 了 这 4 种需求:
原子性 数据库事务必须是原子的， 也就是说， 必须是 "要么全有， 要么全无" 的事务。 如果
事务的任何部分失败 ， 那么整个事务都会被回攘， 就像什么 也 没发生一样 。
一致性 所有事务都必须在与数据库所有规则(例如所有记录都具有唯一的主键)一致的环境中
第 20 章 软件开发安全
开始操作。 事务结束时， 无论事务本身操作期间是否违反了数据库的规则， 数据库都必须再次与这
些规则一致。 其他任何事务都不能利用某个事务执行期间 可能产生的任何不一致数据 。
隔离性 隔离性原则要求事务彼此之间独立操作。 如果数据库接收到两个更改相同数据的 SQL
事务， 那么在一个事务被允许更改相同数据之前 ， 另一个事务必须完全结束。 隔离性能够防止一个
事务处理 另一个事务中途生成的无效数据。
持久性 数据库事务必须是持久的 ， 也就是说一旦被提交给数据库， 就会被保留下来。 数据库
通过使用 备份机制(例如事务 日 志)确保持久性。
接下来将对数据库开发人员 和管理员所关 心的 多种具体安全问题进行讨论。
20.2.3 多级数据库的安全性
你曾经在第 1 章学习过， 基于分配给数据客体和单独用户 的安全性标签， 很多组织使用数据分
类方案强制实施访问控制限制。 当得到组织安全策略的委托授权时， 这种分类概念还必须被延伸至
组织的数据库。
多级安全性数据库包含大量不同分类级别的信息， 它们必须对分配给用户 的标签进行验证， 并
且根据用户 的请求只提供适当的信息 。 然而， 考虑到数据库的安全性， 这种概念显得稍微复杂了
一-止二匕
。
要求多级安全性时， 管理员和开发人员致力于使数据满足各种不同安全需求是必不可少的。 将
分类级别和刀或 " 知其所需 " 需求不同的数据混合在一起被称为数据库污染， 这是一个重大的安全风
险 。 通常 ， 管理员会通过部署可信前端为旧式的或不安全的 DBMS 添加多级安全性。
⑤ 真实场景
使用视图限制访问
在数据库中 实现多级安全性的另 一种途径是使用数据库视图 。 视图只不过是将数据库表提供给
用户的 SQL 语句 。 视图 能够被用 于整理来 自 多 个表的数据、 聚合单独的记录或限制用 户 访问数据库
属性和/或记录的有限子集。
在数据库 中 ， 视图被存储为 SQL 语句 而不是被存储为数据表。 这样可以显著减少所需的数据库
空 间 ， 并且九许视图违反应用 于数据表的规才制也规则。 另一方面， 因 为 DBMS 可能需要通过执，11计
算来确定每条记录特定属性的值， 所以从复杂的视图 中 检索数据的时间要明显长于从表中检索数据
的时间。
因 为视图 非 常灵活， 所以许多 数据库管理员 将视图作为一种安全工具使用 ， 就是九许用 户只与
受 限的视图 文王 ， 而 非 与作为视图基础的原始数据表文互。
1 井发性
并发性或编辑控制是一种预防性的安全机制， 这种机制试图使数据库中存储的数据始终是正确
的， 或者至少使其完整性和可用性受到保护 。 不论数据库是多级的还是单级的， 我们都可以使用这
个特性。 并发性使用 "锁定" 功能允许己授权用 户更改数据， 但是同时拒绝其他用户访问 以查看或
更改数据元素 。 更改完成后， " 解锁" 功能就允许其他用户执行 自 己所需的访问操作。 在某些实例中，
609
61 0
CISSP 官方学习指南(第 7 版)
管理员会使用具有审计的并发性机制来跟踪文档和/或宇段的变化。 检查己记录的数据时， 并发性就
成为一种检测性控制。
2. 其他安全机制
使用 DBMS 时 ， 管理员可以部署其他一些安全机制 。 这些特性的实现相对简单， 并且在业内是
常见的。 例如， 与语义完整性相关的机制就是 DBMS 的一种常见安全特性。 语义完整性确保用户 的
动作不会违反任何结构上的规则 。 此外， 还检查存储的所有数据类型都位于有效的域范围内， 确保
只 存在逻辑值， 并且确认系统遵守任何和所有的 唯一性约束 。
管理员可能通过时间和 日 期标记来维护数据的完整性和可用性。 时间和 日 期标记常常出现在分
布式数据库系统中。 在所有更改事务上添加时间标记， 然后将这些更改分发或复制至其他数据库成
员时， 所有变化会应用于所有成员 ， 但是需要按照正确的时间顺序实现变化。
DBMS 的另一个常见安全特性是在数据库内能够细粒度地控制对象， 这也改善了安全控制。 内
容相关的访问控制就是细粒度对象控制的一个示例。 内容相关的访问控制重点基于要访 问对象的 内
容或有效载荷进行控制。 因为必须在逐个访问对象的基础上做出 决定， 所以内容相关的访问控制增
加了处理开销。 细粒度控制的另一种形式是单元抑制。 单元抑制的概念是对单独的数据库字段或单
元隐藏或强加更安全的约束。
因为名字类似， 所以上下文相关的访问控制与内容相关的访问控制经常被放在一起讨论。 上下
文相关的访问控制通过宏观评估来制定访问控制决策。 上下文相关的访问控制 的重要因素是每个对
象、 数据包或宇段如何与总体的活动或通信相联系。 任何单个元素本身看上去无关紧要， 但是在较
大的上下文环境中就会表露出 是有益的还是有害的 。
管理员 可以使用数据库分区技术来防止聚合、 推理和污染漏洞。 数据库分区是将单个数据库分
解为多个部分的过程， 其中 每个部分都具有唯一的和不 同 的安全级别 或内 容类型 。
在 同一个关系数据库表中 ， 两行或更多行具有相同的主键元素， 但是包含在不同分类级别使用
的不同数据时， 就会出现多实伊U(polyinstantiation)。 多实例常常被用作针对某些推理攻击类型的防范
措施(稍后将讨论推理攻击)。
以一个数据库表中包含巡逻的不同海军舰艇的位置为例。 正常情况下， 这个数据库包含每艘舰
艇的准确位置， 这属于秘密级信息。 然而， 一艘特殊的舰艇 UpToNoGood 正在暗中执行到达绝密位
置的任务。 海军指挥官不希望任何人知道这艘舰艇未处于正常的巡逻状态。 如果数据库管理员简单
地将 UpToNoGood 的位置分类更改为绝密， 那么属于秘密级的用户在不能查询这艘舰艇的位置时就
会知道发生了 一些不正常的事情。 然而， 如果应用 了 多实例方法， 那么表中可能会插入两个记录。
第一条属于绝密级分类， 将反映这艘自见艇的实际位置， 并且只对属于绝密安全级的用户 可用 。 第二
条记录属于秘密级， 将指出舰艇正在进行例行巡逻， 并且向属于秘密安全级的用户 显示这一内容。
最后， 管理员可 以利用噪声和干扰在 DBMS 中插入错误的或欺骗的数据， 从而重定向或阻挠信
息机密性攻击。 这是一个被称为噪声和扰动的概念。 在使用此技术时 ， 必须非常小心， 确保插入数
据库 中 的噪声不会影响业务操作 。
20.2.4 ODBC
开放数据库互连(ODBC)是一种数据库特性， 也就是在不必分别针对交互的每种数据库类型直接
进行编程的情况下， 允许应用程序与不同数据库类型通信。 ODBC 扮演了应用程序和后端数据库驱
动程序之间代理的角色， 使应用程序编程人员能够 自 由创建解决方案， 而不必考虑后端的数据库系
统 。 图 20.9 说 明 了 ODBC 与 DBMS 之 间 的关系 。
口
口
20.3 存储数据和信息
第 20 章 软件开发安全
数据库管理系统己经帮助加强了数据的力量， 并且获得了对可以访问数据的人和可以对数据执
行的操作所进行的少量控制。 然而， 安全专家必须记住的是， DBMS 安全性只适用于通过传统的 "前