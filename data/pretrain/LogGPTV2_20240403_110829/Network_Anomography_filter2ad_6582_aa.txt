# Network Anomography

**Authors:**
- Yin Zhang†
- Zihui Ge‡
- Albert G. Greenberg‡
- Matthew Roughan§

**Affiliations:**
- †Department of Computer Sciences, University of Texas at Austin, Austin, TX 78712, USA
- ‡AT&T Labs – Research, Florham Park, NJ 07932, USA
- §School of Mathematical Sciences, University of Adelaide, SA 5005, Australia

## Abstract

Anomaly detection is a critical first step in responding to unexpected problems and ensuring high performance and security in IP networks. This paper introduces a framework and a powerful set of algorithms for network anomography, the problem of inferring network-level anomalies from widely available data aggregates. The framework includes novel algorithms as well as a recently published approach based on Principal Component Analysis (PCA). By clearly separating inference and anomaly detection, the framework facilitates the development of new algorithms. We present several such algorithms based on ARIMA modeling, the Fourier transform, Wavelets, and PCA. Additionally, we introduce a new dynamic anomography algorithm that effectively tracks routing and traffic changes, providing high-fidelity alerts on intrinsic changes in network-level traffic while ignoring internal routing changes. This algorithm is also robust to missing data, an important operational reality. To our knowledge, this is the first anomography algorithm capable of handling routing changes and missing data. We evaluate these algorithms using several months of traffic data from the Abilene network and a large Tier-1 ISP network, employing the methodology previously established for the Abilene dataset. Our findings are encouraging, with the new algorithms demonstrating high accuracy in detection, few false positives and negatives, and high robustness to measurement noise, missing data, and routing changes.

## 1. Introduction

The first step in addressing a problem is recognizing its existence. This principle applies equally to networking, where timely and accurate detection is essential for effective problem resolution. Networking vendors typically integrate alarms into network equipment to facilitate rapid and precise detection and diagnosis. However, many issues lack explicit alarms, either because they are new or uncommon, or because generating such alarms is inherently challenging. In these cases, we must infer the problem from other data sources. For example, various network problems, including security threats like Distributed Denial of Service (DDoS) attacks and network worms, unusual traffic events like flash crowds, vendor implementation bugs, and network misconfigurations, can cause abnormal traffic patterns. We refer to the problem of inferring anomalies from indirect measurements as network anomography, combining "anomalous" with "tomography," a general approach to such inference problems.

Network tomography, which involves solving a linear inverse problem, shares some similarities with network anomography. Examples include inferring individual link performance characteristics from path performance characteristics and inferring traffic matrices from individual link load measurements. The traffic matrix estimation problem arises because obtaining flow-level data network-wide is often difficult [5, 14, 22, 23, 28, 31, 34, 35]. However, Simple Network Management Protocol (SNMP) data on individual link loads is widely available. The relationship between link loads and traffic matrices can be described by the linear equation:

\[ b = Ax \]

where \( b \) contains the link measurements, \( A \) is the routing matrix, and \( x \) contains the unknown traffic matrix elements written as a vector. Tomographic inference techniques aim to invert this relationship to find \( x \).

The anomography problem is more complex. Anomaly detection is performed over a series of measurements rather than a single snapshot, and it must account for changes in both traffic and routing. The anomalies we wish to infer may have different properties from a traffic matrix, necessitating different methods. We find that simple extensions to network tomography methods perform poorly here. Techniques that transform the measurements before solving the inverse problem are preferable.

As an example, consider detecting an anomalous traffic pattern caused by a flash crowd or DDoS attack on a website. This event will cause increases in traffic flows towards specific destinations. Identifying the primary ingress links responsible for large surges at egress links can be challenging. We must infer the change in the traffic pattern to the particular site from the complete set of link data, rather than individual time series. This highlights an important feature of anomography: it extends anomaly detection to network-level problems, automatically building in correlation across the network, where link-level anomaly detection might be inadequate or unreliable.

Many approaches to anomography are possible. Lakhina et al. introduced a novel approach based on Principal Component Analysis (PCA) [19]. Our paper makes three major contributions to understanding and solving anomography problems:

1. **Framework:** We present a simple and powerful framework that encompasses a wide class of methods for network anomography. This framework decouples the inference and anomaly detection steps, opening the door to the development of new algorithms. We introduce several new algorithms based on ARIMA modeling, the Fourier transform, Wavelets, and PCA. The framework is not limited to link traffic data and also applies to inferring performance anomalies from end-to-end performance measurements.
   
2. **Dynamic Anomography Algorithm:** We introduce a new algorithm for dynamic anomography that identifies network-level traffic anomalies and works in the presence of routing changes. This algorithm tracks routing and traffic changes, signaling traffic anomalies but not internal network routing changes. It is also robust to missing link load measurements, an important operational reality. To our knowledge, this is the first anomography algorithm that can handle routing changes and missing data.
   
3. **Evaluation:** Using datasets from a large Tier-1 ISP and the Abilene network, we report on an extensive evaluation of a set of anomography methods. We apply the methodology introduced in [19] to compare different methods. Our findings show that the new temporal anomography methods exhibit consistently high fidelity. The most successful method, a variation of dynamic anomography combining Box-Jenkins modeling (ARIMA) with \( \ell_1 \) norm minimization, performs well with measurement noise and degrades gracefully in the presence of missing or corrupted data.

The paper is organized as follows: Section 2 summarizes background and related work. Section 3 describes our framework and the anomography algorithms examined, assuming fixed routing. Section 4 extends the Box-Jenkins anomography to the case where routing may change over time. Section 5 outlines our evaluation methodology, and Section 6 presents the results. Section 7 provides final remarks.

## 2. Background

### 2.1 Network Tomography

Network tomography involves several problems, such as inferring link performance from end-to-end measurements or inferring Origin-Destination (OD) traffic demands from link load measurements. These problems can be formulated as linear inverse problems, where one seeks to find unknowns \( x \) from measurements \( b \) given a linear relationship \( b = Ax \), where \( A \) is the routing matrix. For a network with \( n \) links and \( m \) OD flows, the routing matrix \( A \) is an \( n \times m \) matrix where \( a_{ij} \) indicates the fraction of traffic from flow \( j \) appearing on link \( i \).

SNMP provides link measurements of traffic volumes (bytes and packets) typically at 5-minute intervals. We assume this type of data as input to our algorithms, aiming to infer anomalous traffic matrix elements. Anomography is not limited to this problem and can also be applied to inferring anomalous link performance from end-to-end measurements. Additional data comes from routing protocols used to build forwarding tables within each router. We use routing data (e.g., from a route monitor) and a route simulator to predict the results of these distributed computations and determine the network routing.

The problem of inferring the OD traffic matrix has been extensively studied (e.g., [5, 14, 22, 23, 28, 31, 34, 35]). The key characteristic is that it is massively underconstrained, with approximately \( N^2 \) OD flows to estimate and only \( O(N) \) link measurements. Tomography methods introduce additional information, often in the form of traffic models (e.g., Poisson, Gaussian, or gravity models). Anomography problems are also highly underconstrained, but the models used to describe traffic are inappropriate for anomalies, which are generated by different processes. Moreover, in anomography, we combine detection with inference, whereas in standard network tomography, we seek only to infer a set of traffic matrix elements. Thus, there are important differences between this paper and network tomography.

It is also important to note that routing matrices change over time. In much previous work, routing matrices are assumed to be constant, but it is crucial to allow for variable routing. We index not just the traffic measurements over time but also the routing matrix. Given these, we can write the relationship between the link traffic and OD traffic matrix as:

\[ b_j = A_j x_j \]

where \( A_j \) is an \( n \times m \) routing matrix, \( x_j \) is a length-\( n \) vector of unknown OD flow traffic volumes, and \( b_j \) is a length-\( m \) vector of link loads at time interval \( j \).

### 2.2 Related Work

Lakhina et al. conducted pioneering work in inferring anomalies at the network level, adapting Principal Components Analysis (PCA) to this setting [19, 18, 20]. Donoho [8, 9] introduced a mathematical treatment for tomography-like problems, seeking solutions that maximize sparsity. These papers inspired our development of new methods and a framework encompassing a wide class of methods.

Anomaly detection is a growing field. Much research in network anomaly detection relies on some type of inference step, taking a set of alarms as input [13, 15, 16, 25, 30]. While anomography includes methods of this type, our results indicate that delaying alarm generation until after the inference step is better, generating a single constructive alarm rather than a storm of redundant alarms. This approach can also improve detection sensitivity, as demonstrated in [19].

We approach the network anomaly detection problem from the perspective of detecting unknown anomalous behavior, rather than looking for specific signatures, the focus of much work in the security community. Many machine learning, signal processing, and time-series analysis methods have been applied to networks (e.g., [1, 4, 15, 17, 30, 32]). These methods range from using the standard Holt-Winters forecasting technique [4] to sophisticated wavelet-based methods [1]. Most earlier work ignores noise or provides weak tests of robustness to noise, a strength of our work is that we provide tests of effectiveness in the presence of noise, always a factor in practice.

## 3. Network Anomography

In this section, we assume that the routing matrices \( A_j \) are time-invariant and denoted by \( A \). (We will extend our work to time-varying \( A_j \) in Section 4.) Under this assumption, we can combine all \( t \) linear systems (2) into a single equation using matrix notation:

\[ B = AX \]

where \( B = [b_1, b_2, \ldots, b_t] \) is the matrix formed by having \( b_j \) as its column vectors, and similarly \( X = [x_1, x_2, \ldots, x_t] \).

### 3.1 A General Anomography Framework

We identify two basic solution strategies for network anomography: (i) early inverse and (ii) late inverse. Early-inverse approaches may appear more intuitive. The early-inverse approach tackles the problem in two steps. The first is the network tomography step, where OD flow data at each interval \( j \) are inferred from the link load measurements by solving the ill-posed linear inverse problem (2). Given the estimated OD flow data \( x_j \) at different time points \( j \), in the second step, anomaly detection can then be applied to the \( x_j \). There are many widely used spatial and temporal analysis techniques for this step, which we will describe later in this section.

Early-inverse methods, although conceptually simple, have an obvious drawback: errors in the first step, which are unavoidable due to the ill-posed nature of the inference problem, can contaminate the second step, sabotaging overall performance. Another disadvantage is that early-inverse methods apply a potentially computationally expensive anomaly detection step to high-dimensional data: on a network of \( N \) nodes, one must perform this step on all \( N^2 \) OD pairs. As we will see, late-inverse methods perform anomaly detection on only \( O(N) \) dimensional data. We focus on late-inverse methods in this paper for these reasons, though we shall provide some comparisons between early- and late-inverse methods.

The idea of the late-inverse method is to defer "lossy" inference to the last step. Specifically, late-inverse approaches extract the anomalous traffic from the link load observations, then form and solve a new set of inference problems:

\[ \tilde{B} = A \tilde{X} \]

where \( \tilde{B} = [\tilde{b}_1, \tilde{b}_2, \ldots, \tilde{b}_t] \) is the matrix of anomalous traffic in the observables, and \( \tilde{X} = [\tilde{x}_1, \tilde{x}_2, \ldots, \tilde{x}_t] \) is the matrix of OD flow anomalies to be diagnosed, over \( t \) time intervals.

While the new inference problems (4) share the same linear-inverse structure as in network tomography (3), the characteristics of the unknowns are very different, and so is the solution strategy, which we will explore in Section 3.4.

We now introduce a simple framework for late-inverse anomography methods. In this framework, \( \tilde{B} \) is formed by multiplying \( B \) with a transformation matrix \( T \). Depending on whether we use a left or right multiplying transformation matrix, we can further divide the framework into the following two classes:

- **Spatial Anomography:** where a left multiplying transformation matrix \( T \) is used to form \( \tilde{B} \), i.e., \( \tilde{B} = TB \).
- **Temporal Anomography:** where a right multiplying transformation matrix \( T \) is used to form \( \tilde{B} \), i.e., \( \tilde{B} = BT \).

Our framework encompasses a number of analysis techniques for extracting anomalous traffic \( \tilde{B} \) from link load observations \( B \), as we next illustrate.