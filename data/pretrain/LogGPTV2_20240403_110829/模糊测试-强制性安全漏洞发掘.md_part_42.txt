于字符串的模糊测试而言，模糊变量则通过将字节包围在尖括号中（）来表达。当发送包时，
代码简单地读取原始包并寻找成对的括号。当遇到这些模糊变量时，在发送包之前模糊数据将
替代原始数据。
---
## Page 196
第16章网络协议模糊测试：Windows平台上的自动化测试181
十六进制编码和解码
最后一个关心的问题是对被用于显示捕获数据包内容的字节表示进行编码和解码。NET框
架提供了ToString（“X"）函数将一个字节数组转换为一个十六进制字符串，但是它并没有提
供类似的函数将一个字符串转换为一个字节数组.因为这个原因，所以添加了HexEncoding
类，该类的大部分内容借鉴自www.codeproject.com站点中的“ConvertingHexadecimal String
to/fromByteArrayinC#（用C#将十六进制字符串转换为字节数组，或者从字节数组转换为十
六进制字符串）。
16.4实例研究
现在我们已经构建了一个网络模糊器，下面应该确保它能够正常工作。ProtoFuzz是一个一
次执行单个任务的工具，它获取一个包井在将它发送给目标之前重复对它进行变异。例如，在
发送导致崩渍的包之前，它不能发送一系列被设计的初始包以使目标进人到一个漏洞状态。例
如，考虑在一个SMTP服务器中发生在RCPTTO命令中的一个缓冲区溢出，如下所示：
220 smtp.example.com ESMTP
HELO ma11.heaven.org
250 sntp.example.con He1lo smtp.example.com
MAIL FROM:godeheaven.org
250 2.1.0 godsheaven.org...Sender ok
RCPT T0:[Ax1000]
在这个例于中，我们需要向SMTP服务器发送一些请水。我们需要建立起初始的TCP连接，
并且为粗体所示的每个HELO，MAILFROM和RCPTTO命令发送一个请求，初始请求必须要将服务
器设置到准备接收RCPTTO命令，并且长字符串最终将导致溢出的状态。类似于此的一个漏洞
更加适合于采用如SPIKE这样的工具，允许创建脚本来定义包结构，并且允许发送多个请求。
ProtoFuzz更加适用于这样的情形，即你只想在传输中捕获一个包，选择数据的一个特定部
分，然后立即开始模糊测试。可能你正在处理一个私有协议，无法获得充足的信息以生成详细
描述协议结构的脚本。另外一种情况是，你可能只想执行一次快速测试，而不是花费时间来描
述针对模翻器的协议。
TippingPoint的Zero Day Initiative（ZDI）发现了在HP的Mercury LoadRunner性能测试工具
中的一个栈溢出，该漏洞适合于我们的需求?。该溢出发生在一个代理中，该代理绑定到TCP
端口54345并监听引入的连接。该代理在接收包之前不需要任何形式的验证，因此我们就得到
所寻找的单一漏洞。另外，该代理所适用的协议是私有协议，井且在安全建议中没有提供足够
的详细信息以允许我们从头创建一个对概念的证明，建议所告诉我们的全部信息就是溢出是由
server_ip_name字段中的一个超长值触发的。因此，我们将使用ProtoFuzz来捕获合理的通信、
识别server_1p_name字段，井据此来变异包。
PD
 http:/www.zerodayinitiative.com/advisorie/ZDI-07-007.html
---
## Page 197
/82
第二部分目标和自动化
一旦我们安装了MercuryLoadRunner，并正确地进行配置之后，我们就可以开始搜索一个
可能包含漏洞的事务。当对通信进行噢探时，我们识别了下面的包，该包包含二进制和ASCII
可读文本的组合，并且明显地包含我们所寻找的erver_ip_name字段。
P9 ZT00000020000000295000009995920200
0080657263 757279 323b 3133 30 343b 3133 30
+..............
ercury2:1304;130
00903000000000058828
82d 73 65 72 76 65 72 5f
....(-server_
00a0 69 70 5f 6e 61 6d 65 3d
ip_nane"
A8
在包被捕获之后，下面将强调包含在server_ip_name字段中的值，点击鼠标右键，然后选
择模糊一字符串。这将所选择的字节包含在一个尖括号中（<）。当ProtoFuzz解析被捕获的
包时，它将用Strings.txt文件中所提供的每个值来替换所识别的字节。因此，为了触发溢出，
我们需要向文件中添加连续的更大的字符串。单独的模糊包将会为String.txt文件中的每一行面
发送。
阳个单姓
当模期数据被发送到我们的目标时，我们监视异常的发生是非常重要的。Magentproc.exe
是绑定到TCP端口54345的应用程序，因此我们需要将一个调试器关联到该进程并开始进行模
糊测试。一且崩溃被触发，那么可以在下面的代码片段中看到来自于OllyDbg的输出：
Registers
18v6gel -1han 0J3H
05
EAX 00000000
ECX 41414141
1vg:ROR AN
025
EBX 00E263BC
[OD01xA]:OTTO
EBP
ESPO0DF7F0
41414141
ESI 00E2549C
EIP 41414141
T93
Stack
0DCE7F4
00DCE7F0
00000000
41414141
00DCE7F8
41414141
国
00DCE7FC
41414141
OODCE800
41414141
00DCE804
41414141
OODCE808
41414141
41414141
00DCE810
41414141
00DCE814
41414141
类似于上一章中所提到的NetMail示例，这也是一个远程可利用的栈溢出的典型例子，由
于服务不需要进行任何验证，因此也就增加了由该漏洞引起的在一个流行的质量保证测试工具
中的风险。
16.5益处和改进的余地
目前，ProtoFuzz还不能处理一系列字节前面带有数据大小的数据块。这种情况下，对数据
---
## Page 198
第16章网络协议模糊测试：Windows平台上的自动化测试183
字节进行模糊测试需要对数据块的大小进行并行的更新，以使包能够保持有效性。这种能力将
会极大地扩展ProtoFuzz的功能，并且实现起来相当简便。
ProtoFuzz目前还没有提供探查功能，以来确定在模糊测试过程中，目标主机是否一直可用。
正如本章前面所提到的，探针包可以在一个模期包之前发送，以确定目标应用程序的状态。如
果目标应用没有响应，那么模期测试就会停止，因为后续的测试用例将没有任何用处。当试图
将导致在目标应用中发生异常行为的模包进行关联时，这个特性也可以对终端用户提供帮助。
ProtoFuzz也可以通过进行扩展来受益，即允许它处理复杂的请求一响应对。除了能够简单地
发送模糊包之外，ProtoFuzz还可以在模糊测试之前将目标应用置于一个特殊的状态，方法是通
过首先发送已知的好包，然后等待适当的响应，并解析和解释其内容。
可以通过设计一个位于目标机器上的远程代理来监视目标应用的状态，从面进一步提高错
误检测功能。该代理可以和ProtoFuzz进行通信，并且在发现一个错误时停止模糊测试。这有助
于直接确定是哪个包导致了错误的发生。
16.6小结
在ProtoFuzz成为一个健壮的模糊器之前，还需要进行长期的开发完善过程，然而，它起到
了说明网络协议模糊测试的基础框架的作用，并且易于被扩展到特定的目标应用。创建这个网
络模糊器的关键因素是发现一个可以处理原始包的捕获，解析以及传输的库。避免使用那些不
充许原始包被组装的库，除非你正在为一个特定的、不需要访问任何包的头的网络协议创建一
个模棚器。出于我们的考虑，Metro库为ProtoFuzz提供丁一个强大的基础库，并且.NE1框架元
许我们使用一个直观的GUI前端来创建它们。我们鼓励你来创建ProtoFuzz，并且将它应用于不
同的方面。
---
## Page 199
第17章Web浏览器模糊测试
我经常发现的一个分母是期望值比期望的还要大”
日双
George W.Bush，LosAngeles，2000年9月27日
客户端漏洞很快成为了关注的焦点，因为它们被攻击者广泛利用以进行钓鱼式攻击、身份
的窃取并且创建大量的被恶意代码感染并控制的计算机网络（botnets）。Web浏览器中的漏洞
为这样的攻击提供了丰富的目标环境，因为在主流浏览器中的一个漏洞将导致数百万人受其影
响。客户端攻击通常要求运用某种形式的社会科学，因为攻击者必须首先要强制一个潜在的被
攻击者去访问一个恶意的Web页。通常可以通过垃圾邮件或利用主流Web站点中的一个额外漏
洞来帮助实施该过程。再加上Intermet上的单个用户通常具有很少的计算机安全方面的知识，因
此许多攻击者将关注的重点转向客户端漏洞也就不足为奇了。
在许多方面，浏览器错误成为最引人注目的漏洞是在2006年。所发现的漏洞影响了所有主
流的Web浏览器，包括微软InternetExplorer和MozillaFirefox，缺陷在解析病态的HTML标签、
JavaScript、本地图像文件如JrG、GIr和rNG、CSS以及ActivcX控件时被发现。许多被发现的
严重的ActiveX漏洞既影响了微软Windows操作系统的默认安装，也影响了第三方的应用程序。
另外，人们还发现了成百个不严重的ActiveX漏洞。尽管安全研究者在过去对ActiveX和COM的
审核表现出了一定的兴趣，但在2006年这一兴趣达到了最高程度。存在于大量ActiveX控件中
的漏洞的一个重要因素是新的、用户友好的ActiveX控件审核工具的公共可用性。本章中，我
们将讨论如何使用模糊测试来发现Web浏览器漏洞。如果将历史结论作为指导的话，那么还将
有大量的浏览器错误被发现。
17.1什么是Web浏览器模糊测试
Web浏览器最初只是被设计为浏览Web页以及解析HTML页，现在Web浏览器已经发展成为
和瑞士军刀的多功能性相等价的计算机设备。现代的Web浏览器可以处理动态HTML页、类型
表单、多种脚本语言、Javaapplet、在线共享内容的一种简易方式（RSS）以及FTP连接等多种
目标。可以进行许多扩展以及插件的安装，以将Web浏览器转换为一个更加灵活的应用程序。
这种灵活性允许像Google这样的公司再次将一些通用的桌面应用程序转向Web应用。但对于终
端用户来说，不幸的是，在增加功能的同时也增加了攻击的范围。母庸置疑，随着越来越多的
功能被增加到Web浏览器中，将会有越来越多的漏洞被发现。
浏览器错误的发布月
---
## Page 200
第17章Web测览器模糊测试185
MoBB）。在整个7月当中，H.D.每天发布一个新的基于测览器的漏润，直到该月结来他一共
发布了31个漏洞的详细信息，尽管这些漏洞的绝大部分都影响微软的lnternetExplorer，但所有
主流的浏览器都被提出，包括Safari、Mozilla、Opera和Konqurer，由于存在像空指针解除引
用这祥的问题，园此大多数的漏洞只是通过使Web浏览器崩潢来导致一个DoS攻去，尽管这些
漏洞的严重性不是很高，而就在MoBB之前不久，Skywing和skape（与H.D.Moore一道为
Metasploit项目做出了贡献）发现了在InternetExplorer中未处理异常过滤器中的一个设计缺陷，
该缺陷可以利用未开发的温洞以导致在特定的条件下发生代码执行，这就潜在地增加了在
MoBB过程中发现某些漏洞的风险，尽管某些人不同意在发布补丁之前揭露漏洞详细信息的方
法，但它使人们看到了Web测览器漏洞的盛行，以及由这些漏洞所带来的风险。
17.2目标
每当一项研究指出Firefox是一个比lnternetExplorer更加安全的浏览器，那么就会有一个新
的带有偏见的报告被发布并提出相反的结论。从一个研究者的视角来看，它是一个尚处于争论
中的观点，所有的Web浏览器都有严重的漏洞，而模糊测试则是识别这些漏洞的一个有效方法。
对于任何类型的软件来说，该应用程序的应用越广泛，就会有越多的人直接受到漏洞的影响。
尽管统计数据一直在发生变化，也不论你使用的数据来源是什么，你可能将会发现Internet
Explorer的使用占据了终端用户的最大份额，而Firefox仍然是强有力的第二位的竞争者。自然
的，InternetExplorer的流行源自于它被默认包含在一个操作系统中，而该操作系统居于全世界
PC操作系统的统治地位。尽管如此，Firefox继续让IntermetExplorer运行。其他的Web浏览器如
Netscape，Opera,Safari和Konqueror，通常占据终端用户的很小一部分份额，并且联合起来处于
第三的位置。