0, 0xDB94-0xD5C0, STACK_ALL_LEVEL_RANGE},
{{"_shim_io_connect_method_scalarI_structureI",STACK_ANY_INTEGER},STACK_ANY_INTEGER,0, 
0xEA97-0xE490, STACK_ALL_LEVEL_RANGE},
{{"_shim_io_connect_method_structureI_structureO",STACK_ANY_INTEGER},STACK_ANY_INTEGE
R,0, 0xF588-0xF270, STACK_ALL_LEVEL_RANGE},
{{"_is_io_connect_method",STACK_ANY_INTEGER},STACK_ANY_INTEGER,0, 0xb2a9-
0xaf10,STACK_ALL_LEVEL_RANGE},
}
2013 Trend Micro 
25th Anniversary
UserClient Condition Sample
detail_control_entry_t g_white_listing_detail_control[] ={
// procName,uid,driverBundleName, driverClassName, selFunctionNO
//{"*",PROCESS_UID_ANY_INTEGER,"*","AGPMClient",7312},,
{"*",PROCESS_UID_ANY_INTEGER,"*","IGAccelSharedUserClient",1},//crash-24
{"*",PROCESS_UID_ANY_INTEGER,"*","AccelSurface",16},//crash-23
{"*",PROCESS_UID_ANY_INTEGER,"*",OBJECT_CLASS_NAME_NO_FOUND,16},
{"*",PROCESS_UID_ANY_INTEGER,"*","HD",2},//crash-21
{"*",PROCESS_UID_ANY_INTEGER,"*","IX",2},//crash-21
"*",PROCESS_UID_ANY_INTEGER,"*","AGPM",7312,//crash-11
"*",PROCESS_UID_ANY_INTEGER,"*","IGAccelGLContext",2,//crash-28
2013 Trend Micro 
25th Anniversary
Mach-msg Condition Sample
#define KMSG_IOKIT_SUBSYSTEM_RANGE  0xAF0, 0x0B47
detail_control_entry_for_ipc_kmsg_send_t g_black_listing_detail_control_foripc_kmsg_send[] ={
//procName,uid,msg_id_from, msg_id_to, routineName, addr, addr_offset_from, addr_offset_to
"chrome",PROCESS_UID_ANY_INTEGER, 
KMSG_IOKIT_SUBSYSTEM_RANGE,"__Xio_connect_method",KMSG_ADDR_OFFSET_ANY_RANGE,KM
SG_LEAVING,};
•
#define KMSG_IOKIT_SUBSYSTEM_RANGE  0xAF0, 0x0B47
•
#define KMSG_MACH_VM_SUBSYSTEM_RANGE  0x12C0, 0x12D4
•
#define KMSG_MACH_PORT_SUBSYSTEM_RANGE  0xC80, 0x0CA4
•
#define KMSG_MACH_HOST_SUBSYSTEM_RANGE  0xC8, 0xE4
•
#define KMSG_HOST_PRIV_SUBSYSTEM_RANGE  0x190, 0x1AA
•
……
2013 Trend Micro 
25th Anniversary
What’s Context
• Pattern accumulated in bug hunting 
experience 
• Shedding more enlighten for code review
– Buggy module, interface for RE.
• Not vulnerability but indicating suspicious 
vulnerability
• Implemented through condition checker
2013 Trend Micro 
25th Anniversary
Context Sample
• Some IOKit related memory corruption 
vulnerabilities would happen in the following 
context:
– Call IOMemoryDescriptor :: createMappingInTask to 
mapping user mode buffer space to kernel mode.
– Read a value from the buffer and use it as a size to 
read or write a buffer.
• Some kernel information leak vulnerability would 
happen in the following context:
– The output buffer’s content has 0xFFFFFF prefix.
2013 Trend Micro 
25th Anniversary
Best Practice 1/3
• Fuzzing Source:
– Multiple application
•
AppStore (MMORPG games, FaceTime,USB hardisk, BlueTooth, Wifi, VM,DirectX…)
• Virus Total, Apple OpenSource UT, github sample code
– Combination of  rich kind of fuzzing source
• Active fuzzing, Python watchdog, browsing WebGL
• Fuzzing Stability:
– Bypass active hang, black screen, reproduced cases using 
condition checker(nvTestlaSurfaceTesla, IGAccelGLContext, IGAccelSurface…)
2013 Trend Micro 
25th Anniversary
Best Practice 2/3
• Reproduction:
– Log through network
– Log to NVRAM? Log to memory and kdp_panic_dump callback?
– Core dump server
•
sh-3.2# nvram boot-args=”pmuflags=1 debug=0xd44 kext-dev-mode=1 kcsuffix=development –v 
_panicd_ip=10.64.80.106”
– Thunderbolt+fwkdp+lldb
• Automation
– kdp_panic_dump callback+dump+reboot
– VM(Vmware fusion…) revert
2013 Trend Micro 
25th Anniversary
Best Practice 3/3
• Misc:
– Keep fuzzing not SO busy(random maybe)
– Hot run and fuzz on demand
– Keep OS update with KDK
2013 Trend Micro 
25th Anniversary
Phase x: Exploit to root
2013 Trend Micro 
25th Anniversary
Obstacle
• SIP (System Integrity Protection)
• KALSR (Kean Team method)
• SMAP
• SMEP
https://speakerdeck.com/marcograss/dont-trust-your-eye-apple-
graphics-is-compromised
2013 Trend Micro 
25th Anniversary
• A trick to do OSX kernel Heap Feng Shui
• Exploit to root with founded bugs  
2013 Trend Micro 
25th Anniversary
OSUnserializeXML
• The OSX/iOS hacking guru Stefan Esser
(@i0n1c)  propose OSUnserializeXML is a good 
way in SyScan 2012
https://reverse.put.as/wp-
content/uploads/2011/06/SyScan2012_StefanEsser_iOS_Kernel_Heap_Armageddon.pdf
2013 Trend Micro 
25th Anniversary
OSUnserializeXML cont.
• But in the most case, the OSDictionary is 
allocated by OSUnserializeXML will be freed by 
OSObject::release in one system call
。。。
2013 Trend Micro 
25th Anniversary
OSUnserializeXML cont.
• If the allocated object is referenced by  other 
component, it will not be released even if call 
object::release on it.
• IORegistry is good choice. 
• So we find OSUnserializeXML invoking nearby 
IORegistry method calling …
2013 Trend Micro 
25th Anniversary
OSUnserializeXML cont.
• In IOKIT service  IOMProotDomain , slector 7 
(kPMSleepSystemOptions)
RootDomainUserClient::secureSleepSystemOptions
。。。
2013 Trend Micro 
25th Anniversary
Exploit to root by founded 
bugs and this trick 
2013 Trend Micro 
25th Anniversary
Bugs
• CVE-2016-1820 : In disk image module, it will 
take an object address and use a QWORD 
value in the object as function pointer to call. 
• CVE-2016-xxxx: In disk image module, it will 
leak a object address, which exists in kernel 
heap.
2013 Trend Micro 
25th Anniversary
Exploit Process 
payload
Ring3
Ring0
kernel
SMAP
SMEP
KASLR
kslide
Driver
Driver
Memory address – Disk Address
Call current_proc
Call proc_ucred
Call posix_cred_get
Call thread_exception_return
ROP Gadgets
HDIX
IOPMrootDomain
mov cr4 rax; ret
Call payload
1. Leak kslide
2. Leak
 heap 
address
IOCommand-K
3. Spray
4. Tigger
App
0xffff1234
Call [rax+0xA]
IOCommand-U
ROP Gadgets
mov cr4 rax; ret
Call payload
0xffff1234
1. Use KEEN team’s method to 
calculate KSLIDE. 
2. Call user client 
IOHIDIXControllerUserClient ‘s 
selector 1. From the output , we 
can get a kernel heap address of 
object IOHDIXCommand. Then 
call IOHIDIXControllerUserClient
‘s selector 2. It will release the 
object. 
3. Call RootDomainUserClient
user client ‘s selector 7 with a 
carefully prepared XML as 
parameter , which include ROP 
gadget in  part. 
4. Call 
IOHIDIXControllerUserClient
Selector 2 to get RIP execution
1. Use KEEN team’s method to 
calculate KSLIDE. 
2. Call user client 
IOHIDIXControllerUserClient ‘s 
selector 1. From the output , we 
can get a kernel heap address of 
object IOHDIXCommand. Then 
call IOHIDIXControllerUserClient
‘s selector 2. It will release the 
object. 
3. Call RootDomainUserClient
user client ‘s selector 7 with a 
carefully prepared XML as 
parameter , which include ROP 
gadget in  part. 
4. Call 
IOHIDIXControllerUserClient
Selector 2 to get RIP execution
2013 Trend Micro 
25th Anniversary
Exploit Process Detail
User mode
Kernel mode
IOHIDIXControllerUserClient
Selector 1
IOHIDIXContr
ollerUserClien
t
IOHDIXCommand
IOHDIXCommand address
IOHIDIXControllerUserClient
Selector 2
IOHIDIXContrt
RootDomainUserClient
Selector 7
IOHIDIXContr
ollerUserClien
t
OSData
IOHIDIXControllerUserClient
Selector 2
IOHIDIXControl
lerUserClient
Control RIP to run 
ROP gadget
2013 Trend Micro 
25th Anniversary
Demo
2013 Trend Micro 
25th Anniversary
Thanks very much