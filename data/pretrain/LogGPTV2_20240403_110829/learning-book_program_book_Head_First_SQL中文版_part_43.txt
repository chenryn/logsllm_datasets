为全外联接（FULLOUTERJOIN）。不可以做
用交换两个表名与其别名的位置。
到的系统包括MySQL、SQLServer、Access。
不过，一般来说，固定使用某一种联接的习
惯会让事情更简单，例如固定只使用左外联
接、需要时则搬动左右表的位置。这样较不
容易搞混。
当前位置
427
---
## Page 460
联接表本身
不能使用外联接来实际联接某个表本
身吗？这一定会很有用的。
同一个表可以同时作为外联接的左右表。
虽然听起来很奇怪，不过却很好用。让我们一起看
看你或许需要将表外联接它自己的情况吧。
不过，首要的问题是Dataville的小丑。
428
第10章
---
## Page 461
外联接、自联接与联合
利用外联接…·
我们又回到了Dataville，小丑被组织起来，由小丑头领负
责管理他们的行动。事态的发展越来越严重，我们需要追
踪这些小丑头领的行踪，还要找出向他们汇报的小丑。
右图是小丑的组织图。每个小丑都有一个上
Mister Sniffles
级头领，只有大头领MisterSniffles例外。
Clarabelle
Snuggles
Elsie
Zippo
Pickles
Scooter
Mr.Hobo
Babe
Bonzo
先看一下当前的数据库模式（schema），想
出最适用于当前情况的方式：
description
info_activities
activities
id
id
activity_id O
gender
clown_info
activity_id
idow
activity
description
when
name
info_location
location
id
location_id
location_id
location
动购
when
该如何重新组织数据库模式
你问我哪儿好玩？问我
（schmea），以便存储小丑头领们
像个小丑好玩吗？你觉得
的信息？
我好玩吗？
Snifles，他是Claabelle与
Snussles的头领。
当前位置
429
---
## Page 462
添加小丑头领表
可以创建新表
我们可以创建一张表，列出每个小丑与他的
头领的ID。下图是小丑组织图并带有每个
小丑的ID。
10 MisterSniffles
象
5Clarabelle
3Snuggles
1Elsie
2Pickles
8Babe
6Scooter
4Mr.Hobo
9Bonzo
下表列出了每个小丑的ID以及从c1own
info表中得知的头领ID。
clown
_boss
我们的clown_boss表与clown。
P!
boss_id
info表具有一对一关系。
1
3
2
5
3
10
4
3
5
10
6
3
7
3
8
5
9
5
10
10
MisterSnisles没有头领，不过他也需要一
个id.所以我们把他的id填入boss_id列
以避免NULL的出现。
430
第10章
---
## Page 463
外联接、自联接与联合
新表的位置
再看一下现在的数据库模式（schema），并
研究新表如何放入模式（schema）中：
description
info_activities
activities
id
id
activity_id O
gender
clown_info
activity_id
activity
when
ido
name
info_location
location
clown_boss
d
location_id
id O
location_id
bossid
location
when
有点奇怪。新表具有一对一关系——主键id列，同
时还有一对多关系—一boss_id列。这张表的主
键与外键都来自clown_info表。
看起来是可以采用一对一表，但是表中没
有敏感信息，为什么不直接存入主要表呢？
D
动财
有能追踪小丑头领且不需创建新表的办法吗？
当前位置
431
---
## Page 464
自引用外键
自引围外键
其实，我们只需在clown_info表中加上新列来记录每个小丑头
领的ID。这一列就称为boss_id，与clown_boss 表中的设计
一样。
在clown_boss表中boss_id是外键。当我们把这一列加
人clown_info时，它仍然是外键，虽然它也在同一张表中。这
称为自引用外键（self-referencingforeignkey）。“自引l用”表示
它是引用同一张表内另一列的键。
我们假设MisterSniffles是他自己的头领，所以他的boss_id与
他的id一样。这表示我们可以使用自引用外键作为boss_id.
自引用外键是出于其他目的而用于同一张表的主键。
自引用外键是个出于其
他目的而用于同一张表
这是新设立的boss_id列，我们
直接把它加入clown_into表。这
的主键。
部分存储了自引用外键。
clown_info
P!
name
bossd
这里引用同一张表中的id字段
Elsie
3
所以能找出谁是Elsie的头领。
Pickles
5
3
Snuggles
10
4
Mr.Hobo
3
5
Clarabelle
10
6
Scooter
3
7
Zippo
3
8
Babe
5
6
Bonzo
5
10
Mister Sniffles
10
又出现了.Mister Sniles的
6oss_id就是他自己的id。
432
第10章
---
## Page 465
外联接、自联接与联合
联接表与它自己
假设需要列出每个小丑及他们的头领。用下面这段SELECT可以轻易地列
出每个小丑的姓名及他们头领的id：
SELECT name, boss_id FROM clown_info;
name
boss
但我们其实需要小丑的姓名与他们头领的姓名：
Elsie
Snuggles
Pickles
Clarabelle
Snuggles
Mister Sriffles
Mr.Hobo
Snuggles
Clarabelle
Mister Sniffles
Scooter
Snuggles
Zippo
Snuggles
Babe
Clarabelle
Bonzo
Clarabelle
Mister Sniffles
MisterSniffles
磨笋
假设有两个完全相同的表clown_info1与clown_info2。请
设计一个联接，以取得包含每个小丑的姓名与他们头领的
姓名的结果集。
clown_info1
clown_info2
id
name
boss_id
name
boss_id
1
Elsie
Pickles
1
Elsie
3
2
5
2
Pickles
5
3
Snuggles
10
3
Snuggles
10
4
Mr.Hobo
3
4
Mr.Hobo
3
5
Clarabelle
10
5
Clarabelle
10
6
Scooter
3
6
Scooter
3
7
Zippo
3
7
Zippo
3
8
Babe
5
8
Babe
5
9
Bonzo
5
6
Bonzo
5
10
Mister Sniffles
10
10
Mister Sniffles
10
当前位置
433
---
## Page 466
磨笔上阵解答
磨笔上
解答
假设有两个完全相同的表clown_infol与clown_info2。请
设计一个联接，以取得包含每个小丑的姓名与他们头领的
姓名的结果集。
clown_info1
clown_info2
P!
name
boss_id
id
name
boss_id
1
Elsie
3
1
Elsie
3
2
Pickles
5
2
Pickles
5
3
Snuggles
10
3
Snuggles
10
4
Mr.Hobo
3
4
Mr. Hobo
3
5
Clarabelle
10
5
Clarabelle
10
6
Scooter
3
6
Scooter
3
7
Zippo
3
7
Zippo
3
8
Babe
5
8
Babe
5
9
Bonzo
5
9
Bonzo
5
10
MisterSniffles
10
10
Mister Sniffles
10
我们给第二列取别名为“boss"
这样就不全因为有两列都名
SELECT cf,name, c2.name AS 6oss
为“name”而携混了。
FROM clown_infol c1
JNNER 3OJN clown_info2 c2
ONcl.6oss_id=c2.id
这是用于匹配来自clown_intoi的
boss_id列与clown_into2的id列。
434
第10章
---
## Page 467
外联接、自联接与联合
我们需要自联接
表以供联接。但在规范的数据库中，相同的表不会出现
clown _info
两次。于是，我们可以改用自联接（self-join）以模拟
P!
name
boss_id
联接两张表的效果。
1
Elsie
3
2
Pickles
5
3
Snuggles
10
Mr.Hobo
3
5
Clarabelle
10
6
Scooter
3
SELECT c1.name,c2.name AS boss
7
Zippo
3
8
Babe
5
FROM clown_infoc1
6
Bonzo
5
N
10
Mister Sniffles
INNER JOIN ClOWn
info
10
C2
7
ONc1.boss_id=c2.id;
clown_into表金被使用两次。它
的别名分别是“c1”（由此取
得6oss_id）与“c2（由此取
得小丑头领的姓名：mame）。
不需要两张相同的表，而是使用clown_info表两次，
第一次设定它的别名为c1，第二次则设定别名为c2。然
后利用内联接来连接boss_id（来自c1）与头领的姓名
(name，来自c2）。
这一列由INNER3ON得到，联接的两方
分别是clown_inlo表的第一个实例（c1）
的6oss_id列和它的第二个实例（c2）的
name
boss
头领姓名列。
Elsie
Snuggles
Pickles
Clarabelle
Snuggles
MisterSniffles
Mr.Hobo
Snuggles
自联接能把单一表当
Clarabelle
Mister Sniffles
Scooter
Snuggles
成两张具有完全相同
Zippo
Snuggles
Babe
Clarabelle
的信息的表来进行查
Bonzo
Clarabelle
Mister Sniffles
Mister Sniffles
询。
当前位置
435
---
## Page 468