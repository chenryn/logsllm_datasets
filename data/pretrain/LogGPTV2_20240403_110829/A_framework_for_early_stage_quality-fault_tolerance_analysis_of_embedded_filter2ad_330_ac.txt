computes the fuel Ô¨Çow rate for the engine, dependent on
various inputs. The fuel controller (Figure 6) gets inputs via
appropriate sensors, for the rate of oxygen Ô¨Çow (EGO), and
1http://www.mathworks.com/products/simulink/demos.html?Ô¨Åle=
/products/demos/shipping/simulink/sldemo‚àñ fuelsys.html
Figure 6. The control part of the ‚Äúfault-tolerant fuel controller‚Äù example
showing major sub-components.
the manifold pressure (MAP) (connected via a feedback loop
from the plant, not shown in Ô¨Ågure), and two external inputs
namely, the throttle, and the engine speed. The control part
consists of four main components as shown in the Ô¨Ågure, the
control logic, the sensor fault correction unit, the air-Ô¨Çow
calculation unit, and the fuel calculation unit. A Ô¨Åxed-step
solver with a time-step of 0.01ùë† is employed for simulations.
We considered a fault scenario where only the four input
signals of the controller can be afÔ¨Çicted by quality-faults,
and all of them can be afÔ¨Çicted simultaneously by all types
of quality-faults. Each input signal can be afÔ¨Çicted by, noise
of magnitude 0 to 5% of the range of that signal, shift of
magnitude ‚àí5% to 5%, and up-to two spikes. The fault-
tolerance requirement
the output (fuel Ô¨Çow rate)
should not shift by more than 10% on either side, from its
fault-free value. Note that, the size of the quality-fault space
to be examined is (6‚àó 11‚àó 3)4 ‚àí 1 = 1, 536, 953, 615 (noise
value can be one of 0%, 1%, 2%, 3%, 4%, 5%, and similarly
shift value can be one of the 11 values (‚àí5% to 5%), and
spike value can be 0 or 1 or 2) making it nearly impossible to
cover by exhaustively performing simulations on the quality-
fault space.
is that
To apply the proposed method for this analysis, we Ô¨Årst
obtained the fault-free traces of the control system at various
points needed, with a given set of inputs (the functional
testcase). For the characterization step, we have identiÔ¨Åed
twenty basic operations in the system, which compound to
form the fuel controller. Among these twenty components,
Ô¨Åfteen have two Ô¨Çoating-point inputs, four have one Ô¨Çoating-
point and one boolean input, while one has one-Ô¨Çoating
point input. Each Ô¨Çoating-point input signal is allowed to
be afÔ¨Çicted with shifts ‚àí5%, ‚àí2.5%, 0%, 2.5%, 5%, noises
0%, 2.5%, 5%, and spikes 0, 1, 2. Each boolean input signal
is allowed to be afÔ¨Çicted with spikes only (0, 1, and 2). For
each component, output shift, noise, and spikes values are
stored for all possible combinations of the input error afÔ¨Çic-
tions, which completes the characterization of the control
system. Note that, once a component is characterized, the
information can be used across designs, and hence all this
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:30:28 UTC from IEEE Xplore.  Restrictions apply. 
320is treated as an off-line step.
Fault Tolerance Requirement
-6% < output shift < 6%
-7% < output shift < 7%
-8% < output shift < 8%
-9% < output shift < 9%
-10% < output shift < 10%
Method I
Method II
81
27
22
15
13
98
98
98
91
73
NUMBER OF COUNTEREXAMPLES FOUND OUT OF FIRST 100 HOT-SPOTS
GENERATED BY THE SMT SOLVER WHEN DIFFERENT INTERPOLATION
METHODS ARE USED FOR LUT MAPPING.
Table I
Now the network of LUTs is described as a set of
constraints in Yices, and the SMT solver Ô¨Ånds a solution as
guided by the fault-tolerance requirements. A SAT instance
denotes a hot-spot which must now be counter-veriÔ¨Åed in
the fault-injection and simulation setup. The LUTs can
be mapped on to an SMT instance using different inter-
polation techniques as discussed in the previous section.
Table I presents the number of counterexamples found out
of Ô¨Årst 100 hot-spots generated by the SMT solver for
different fault-tolerance requirements. Method I is the over-
approximating technique, and Method II is the closeness-
based technique. As expected, the over-approximating tech-
nique shows that it has more false-positives (100 - value in
the table) than the closeness-based method. Both the meth-
ods took around 50 minutes for generating and evaluating
the Ô¨Årst 100 hot-spots. However, the Ô¨Årst counterexample is
reported as quickly as in 40 seconds, and the rest at regular
intervals, maintaining a good anytime performance. This can
be of great aid to a designer who would like a quick feedback
while exploring several design choices.
Sl.
No.
1
2
3
4
5
6
7
throttle
sh%,no%,sp
engine speed
sh%,no%,sp
EGO
MAP
sh%,no%,sp
sh%,no%,sp
-5,0,2
4,1,1
5,5,2
4,4,2
5,4,2
5,4,2
5,4,2
3,4,2
5,4,2
0,3,1
0,2,1
0,2,1
0,2,1
0,2,1
Table II
1,2,0
0,0,0
-1,1,0
-4,5,0
-2,5,0
1,5,0
-4,0,0
4,4,0
-2,5,0
4,4,0
5,4,0
5,4,0
5,4,0
4,4,0
SOME OF THE QUALITY-FAULTS FOUND TO BE VIOLATING THE GIVEN
FAULT-TOLERANCE REQUIREMENT (-10% < OUTPUT SHIFT < 10%) BY
THE PROPOSED METHOD.
Table II presents some of the quality-faults found to
be violating the given fault-tolerance requirement (-10%
< output shift < 10%) by the proposed method. Row 1
means that a (-5% shift, 2 spikes) at throttle input and a
(3% shift, 4% noise, 2 spikes) at engine speed input and
a (1% shift, 2% noise) at EGO input and a (4% shift, 4%
noise) at MAP input cause the output (fuel Ô¨Çow rate) to
shift (decrease/increase) by at-least 10% for a pre-deÔ¨Åned
duration of time. Meanings of other rows follow similarly.
We have also conducted experiments where the internal
signals of the control system can also be afÔ¨Çicted by the
quality-faults, which led to the discovery of several non-
intuitive counterexamples such as, a single spike on the
ùëì ùë¢ùëíùëô ùëöùëúùëëùëí signal shifts the output by at-least 10%, etc.
The above experimental results show that counterexam-
ples can be found quickly using the proposed framework
which can be used to improve the design(s) and explore the
design-space quickly.
V. DISCUSSION
In this section, we discuss some of the merits and limita-
tions of the proposed framework.
To begin with, we once again note that, early stage
analysis of the control models with respect to quality faults
is beneÔ¨Åcial as it helps the designer to get an idea of the
impact of different seemingly small faults on the system.
The analysis can also be looked as testing the sensitivity
of different signals in combination with one another. Such
an analysis is crucial for highly safety critical systems
especially those built with modern miniature technologies
and/or used in sensitive environments such as nuclear, space,
laser ray (medical), etc. where there is a high probability of
soft errors. Proposed analysis can help in decreasing the
effect of various such faults by providing feedback during
the earliest stages of design and hence reduce the design-
iteration time and cost.
Some of the highlights of the proposed framework for the
quality-fault tolerance analysis are:
‚àô Modeling various low level faults to test at the operation
level. For example,
transient stuck-at faults can be
looked as spikes, bit-Ô¨Çip faults may be looked upon
as shift in signal values at operation level, etc.
‚àô Characterizing individual operations/components at the
quality-fault abstraction to minimize the number of
costly simulations.
‚àô SMT modeling of the LUT network to explore the
whole of given search space quickly to Ô¨Ånd counterex-
amples.
Some of the limitations are:
‚àô Complete characterization of some of the components
may be expensive in terms of time as well as space. In
which case, the corresponding LUT may be restricted
to work for a speciÔ¨Åc underlying functional testcase at
a time, and some good approximation schemes may be
employed.
‚àô As the size of the model grows or the size of an LUT
grows, size of the SMT instance also grows which may
drive the SMT solver to take long durations to solve
or crash. Minimization/pre-processing of LUTs may be
considered to handle this.
The experimental results presented consist of fault injec-
tion of all types (shift, noise, and spikes) on all the four input
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:30:28 UTC from IEEE Xplore.  Restrictions apply. 
321[4] F. Corno, P. Gabrielli, and S. Tosato. Relating vehicle-
level and network-level reliability through high-level fault
injection.
In HLDVT ‚Äô03: Proceedings of the Eighth IEEE
International Workshop on High-Level Design Validation and
Test Workshop, page 71, Washington, DC, USA, 2003. IEEE
Computer Society.
[5] J.C. Cunha, R. Maia, M.Z. Rela, and J.G. Silva. A study of
failure models in feedback control systems. In Proceedings
of the International Conference on Dependable Systems and
Networks (DSN), pages 314‚Äì323, 2001.
[6] Dipankar Das, P. P. Chakrabarti, and Purnendu Sinha. Robust
embedded software design through early analysis of quality
faults. In Proceedings of the 4th India Software Engineering
Conference, ISEC ‚Äô11, pages 31‚Äì40. ACM, 2011.
[7] B. Dutertre and L. Moura.
http://yices.csl.sri.com/, 2008.
Yices: An SMT solver.
[8] G. Fainekos, S. Sankaranarayanan, F. Ivancic, and A. Gupta.
Robustness of model-based simulations. In 30th IEEE Inter-
national Real-Time Systems Symposium (RTSS), pages 345‚Äì
354, 2009.
[9] Jon Friedman. MATLAB/Simulink for automotive systems
design.
In DATE ‚Äô06: Proceedings of the conference on
Design, automation and test in Europe, pages 87‚Äì88, 3001
Leuven, Belgium, Belgium, 2006. European Design and Au-
tomation Association.
[10] Jr. Allen M. Johnson and Miroslaw Malek. Survey of software
tools for evaluating reliability, availability, and serviceability.
ACM Comput. Surv., 20(4):227‚Äì269, 1988.
[11] Rupak Majumdar and Indranil Saha. Symbolic robustness
analysis. 30th IEEE International Real-Time Systems Sympo-
sium (RTSS), 0:355‚Äì363, 2009.
[12] Natarajan Shankar. Automated deduction for veriÔ¨Åcation.
ACM Comput. Surv., 41(4):1‚Äì56, 2009.
[13] J. G. Silva, P. Prata, M. Rela, and H. Madeira. Practical issues
in the use of ABFT and a new failure model. In Proceedings
of the The Twenty-Eighth Annual International Symposium on
Fault-Tolerant Computing, FTCS ‚Äô98, pages 26‚Äì, Washington,
DC, USA, 1998. IEEE Computer Society.
[14] Jonny Vinter, Olof Hannius, Torbjorn Norlander, Peter
Folkesson, and Johan Karlsson. Experimental dependabil-
ity evaluation of a fail-bounded jet engine control system
for unmanned aerial vehicles.
International Conference on
Dependable Systems and Networks (DSN), pages 666‚Äì671,
2005.
signals simultaneously. One can restrict the simultaneous
fault afÔ¨Çictions to at-most
two or three at a time, and
choose the types of fault afÔ¨Çictions on different signals based
on the knowledge about the system. For example, internal
signals may be less likely to be afÔ¨Çicted by noise. It is
important that quality-fault afÔ¨Çictions on internal signals be
also considered, as the kind of faults under consideration
can occur on almost any signal. Another interesting aspect
is to know whether a lesser quality-fault afÔ¨Çiction of the
reported counterexamples also results in the violation of
fault-tolerance requirements. This can help in getting greater
insight and pin-pointing the origin of faulty behaviour, which
we plan to pursue in future.
We expect that design-Ô¨Çows employing quality-fault tol-
erance will lead to better designs with fewer crashes/resets
during the run-time. And that highly safety-critical/important
systems expected to function in volatile environments can
beneÔ¨Åt from the proposed analysis.
VI. CONCLUSION
Exhaustive analysis of quality-fault tolerance is a compu-
tationally intensive problem. We have proposed a method
which suitably abstracts the behavior of operation-level
models, to discrete lookup tables, and then performs static-
analysis to identify hot-spots in the design. These hot-spots
are then simulated in the operation-level model for checking
their validity. Strategies to reduce the probability of false-
negatives are presented. Early stage modeling and analysis of
quality-faults helps in converging to better designs quickly.
In future, we would like to focus on Ô¨Ånding the mini-
mal counterexamples that violate the given fault-tolerance
requirements. This can help in pin-pointing the origin of
faulty behaviour and gaining better insight.
ACKNOWLEDGMENT
This work is partially supported by the General Motors-
Indian Institute of Technology Kharagpur collaborative re-
search lab on electronics, controls, and software.
REFERENCES
[1] Krishnendu Chatterjee, Arkadeb Ghosal, Thomas A. Hen-
zinger, Daniel Iercan, Christoph M. Kirsch, Claudio Pinello,
and Alberto Sangiovanni-Vincentelli. Logical reliability of
interacting real-time tasks. In DATE ‚Äô08: Proceedings of the
conference on Design, automation and test in Europe, pages
909‚Äì914, 2008.
[2] International Electrotechnical Commision.
Functional
safety of electrical/electronic/programmable electronic safety-
related systems. Technical Report IEC-61508, International
Electrotechnical Commision, 2005.
[3] C. Constantinescu. Impact of deep submicron technology on
dependability of VLSI circuits. In Proceedings of the Inter-
national Conference on Dependable Systems and Networks
(DSN), 2002.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:30:28 UTC from IEEE Xplore.  Restrictions apply. 
322