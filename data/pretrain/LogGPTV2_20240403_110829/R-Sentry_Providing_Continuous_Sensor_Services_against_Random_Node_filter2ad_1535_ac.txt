(shown in Figure 3(d)). At this time, A will still send
a reply message to E that includes a reasonably long
sleep time, like 2(cid:1).
4. A will schedule the remaining two gangs as usual, with
the only exception that the round duration now be-
comes 600 seconds. As a result, gang fB, Cg will wake
up at times 3000, 3600, 4200, etc, while gang fF, Gg
will wake up at times 2700, 3300, 3900, etc. There-
fore, A will still receives probes every 300 seconds.
5. Performance Evaluation
In this section, we (cid:2)rst de(cid:2)ne a simpli(cid:2)ed sensor failure
model, then give the simulation model and simulation se-
tups. After that we examine R-Sentry’s performance against
PEAS, in terms of scalability, energy ef(cid:2)ciency, service
availability, coverage recoverability and fault tolerance.
5.1. Sensor Failure Model
We purposely introduce sensor failures into our simula-
tions to model the fact that random node failures are norms
instead of exceptions in sensor network. The catastrophic
failure model used in our simulation is a coarse-grained
model, in which a percentage of sensor nodes that are alive
(but not necessarily active) (cid:147)die(cid:148) due to external catas-
trophic events, like natural disasters. By (cid:147)die(cid:148), we mean the
node stops functioning completely as an electronic device,
even though it’s possible in reality that not all components
in the node are affected by the external events.
This failure model has two parameters: (i) failure pe-
riod fp, the mean time between consecutive external catas-
trophic events (the intervals between two events are random
numbers that follow an exponential distribution), and (ii)
failure percentage f%, the mean percentage of the live nodes
that are affected by a particular event. Upon a catastrophic
event, the actual percentage of affected nodes is a random
number between 0 and 2f%.
5.2. Overview of PEAS
In this study, we compare R-Sentry’s performance
with PEAS [16], a well-recognized fault-tolerant energy-
conserving protocol for sensor networks. Before we present
the detailed simulation results, we would like to (cid:2)rst give a
brief description of PEAS. Like R-Sentry, PEAS also as-
sumes that at any moment, only a subset of nodes stay ac-
tive, while the others go to sleep and wake up periodically
to probe the health of the active node(s). PEAS, however,
allows the redundant nodes to independently wake up, with-
out coordinating the schedules among them, and as a result,
it only provides a coarse granularity of fault-tolerance.
PEAS guarantees there is at least one active node within
every redundant node’s probing range. An active node con-
trols the wake up frequencies of the redundant nodes using
the parameter (cid:21)d, the desired probing rate. Every time an
active node receives a probing message, it replies with (cid:21)d
and the actual probing rate b(cid:21) that it has observed, based on
which the probing node calculates its new probing rate as
. Then the probing node generates its new
(cid:21)new = (cid:21)old (cid:21)d
b(cid:21)
sleep interval ts following the probability density function
f (ts) = (cid:21)newe(cid:0)(cid:21)newts. We note that, in PEAS, the param-
eter 1=(cid:21)d is similar to (cid:1) in R-Sentry, both denoting the de-
sired recovery time from the applications, and we use these
two notations interchangeably when presenting the results.
5.3. Simulation Model and Settings
We have implemented both R-Sentry and PEAS on our
own simulator USenSim. USenSim is a discrete event-driven
simulator that is intended to model large-scale sensor net-
works. In order to realize the network scale we envision, i.e.
with thousands of nodes, which was impossible with more
detailed network simulators such as NS-2, USenSim as-
sumes a constant transmission delay between nodes and se-
rialized transmissions among nodes that compete the chan-
nel, similar as the one adopted in [11]. We believe the sim-
Routing protocol
Communication range
Receiving power
Sleeping power
Bandwidth
Shortest path
15m
0.012w
0.00003w
20Kbps
Sensing range
Transmission power
Idle power
Sensing power
Packet size
10m
0.06w
0.012w
0.001w
25Bytes
Table 4. Simulation Platform Parameters
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:33:13 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007)
%
(
e
g
a
t
n
e
c
r
e
p
100
80
60
40
20
0
0
R−Sentry
Coverage
# of Active Nodes
1
2
3
time (seconds)
(a)
4
x 104
)
%
(
e
g
a
t
n
e
c
r
e
p
100
80
60
40
20
0
0
PEAS
Coverage
# of Active Nodes
1
2
3
time (seconds)
(b)
4
x 104
)
s
d
n
o
c
e
s
(
e
m
i
t
s
s
o
l
e
g
a
r
e
v
o
c
e
g
a
r
e
v
a
600
500
400
300
200
100
0
0
100
200
400
delta (seconds)
300
(c)
6x 104
)
s
d
n
o
c
e
s
(
e
m
i
t
e
f
i
l
%
0
9
5
4
3
2
1
0
0
R−Sentry
PEAS
500
600
R−Sentry
PEAS
100
200
300
400
delta (seconds)
500
600
(d)
Figure 4. Network coverage statistics throughout the lifetime of a WSN: (a) R-Sentry, and (b) PEAS.
The average coverage loss time and the 90% network life time with (cid:1) are shown in (c) and (d).
pli(cid:2)ed network model does not prevent us proving the valid-
ity and effectiveness of our algorithm, given that our work
is orthogonal to the works in the underlying layers.
Unless speci(cid:2)ed, the simulation setup has 600 sensor
nodes uniformly randomly deployed in a 50(cid:2)50m2 square.
Each grid is a 1 (cid:2) 1m2 square. The initial energy of a sen-
sor node is uniformly distributed between 50 and 60 Joules,
which allows the node to function around 4000 (cid:24) 5000 sec-
onds if the radio is in idle listening mode. Every 50 sec-
onds, each active node transmits a packet containing col-
lected data to the sink, which is located at the center of the
(cid:2)eld and has persistent power supply. The neighbor nodes
that are located within the distance of 15m constitute SRS.
Due to the high redundancy, a gang size of 1 is suf(cid:2)cient in
the simulations.
For those parameters that are speci(cid:2)c to PEAS, we have
tried various parameter values, and chosen the following
settings because they produced the best results: probing
range Rp = 3m, desired probing rate (cid:21)d = 0:02, ini-
tial probing rate (cid:21)s = 0:02, and k = 32. We would like
to emphasize that we chose a rather small probing range
for PEAS to guarantee all the grid points are covered since
PEAS does not explicitly require every grid point to be cov-
ered. The network/energy parameters used in our simula-
tions are summarized in Table 4, and we took these values
from PEAS [16].
5.4. Performance Metrics
Coverage ratio is the percentage of the grid points that
are covered at a time. Both R-Sentry and PEAS attempt
to achieve a high coverage ratio throughout their lifetimes.
(cid:12) network lifetime is the duration the network lasts un-
til the coverage ratio drops below (cid:12) and never comes back
again. We use (cid:12) lifetime to measure the protocol’s capabil-
ities of preserving coverage and recovering coverage loss
from node failures.
Coverage loss time is the duration from when a grid point
loses coverage to when the coverage recovers. The average
coverage loss time re(cid:3)ects how quickly a failed active node
can be replaced by the redundant nodes.
Packet delivery ratio is the ratio of number of packets re-
ceived by the sink to the number of packets sent out by the
active nodes in a speci(cid:2)c length of time window. The packet
delivery ratio indicates the connectivity of the network.
5.5. Performance Results
Service Availability: The motivation behind this study is
the need to provide uninterrupted services throughout a sen-
sor network’s lifetime. Figures 4 (a) and (b) shows how the
coverage ratio evolves with time for the two schemes. In
this experiment, we have (cid:1) = 50 seconds in both schemes.
We observe that R-Sentry can offer a 95% coverage ratio
until 2:5 (cid:2) 103 seconds, while PEAS’s coverage ratio drops
below 90% from 2:5 (cid:2) 103 seconds. This is because in R-
Sentry, once an active node fails, it can be quickly replaced
by a gang, while in PEAS, there is not a guarantee that the
awake redundant node can fully replace the active node.
We can also con(cid:2)rm our hypothesis by looking at the
time series of the percentage of active nodes in both cases.
R-Sentry can maintain a steady number of active nodes,
which can in turn guarantee a high coverage ratio, but in
PEAS, the number of active nodes decreases with time due
to oversleeping. We note that the drop of the number of ac-
tive nodes in PEAS around 5000 second is due to the fact
that most of the initial active nodes failed at that time. We
did not observe a drop in R-Sentry because it can quickly
recover from failures.
Algorithm Controllability: Controllability is a valuable
feature for an algorithm, in that the performance of an al-
gorithm with controllability can be easily tuned up to match
application requirements. In this set of experiments, we var-
ied (cid:1), and collected the corresponding average coverage
loss time , which is shown in Figure 4(c). We can observe
that R-Sentry demonstrates good controllability: for any
given (cid:1) value, the resulting average coverage loss time is
always below (cid:1), and often slightly higher than (cid:1)=2. PEAS,
however, fails to do so (cid:150) we cannot correlate the delivered
coverage loss time and the desirable coverage loss time.
Thanks to the capability of maintaining high coverage ra-
tio and low coverage loss time, R-Sentry can make the sen-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:33:13 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007)
s
d
n
o
c
e
s
(
e
m
i
t
s
s
o
l
e
g
a
r
e
v
o
c
e
g
a
r
e
v
a
500
450
400
350
300
250
200
150
100
50
0
1000
2000
)
s
d
n
o
c
e
s
(
e
m
i
t
e
f
i