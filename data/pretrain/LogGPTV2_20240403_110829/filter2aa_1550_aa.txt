# Takahiro Haruyama: Reverse Engineer at Symantec

**Takahiro Haruyama (@cci_forensics)**
- **Role**: Reverse Engineer at Symantec
- **Responsibilities**: Managed Adversary and Threat Intelligence (MATI)
- **Website**: [Symantec Cyber Security Services](https://www.symantec.com/services/cyber-security-services/deepsight-intelligence/adversary)
- **Speaker**: BlackHat Briefings (USA, EU, Asia), SANS DFIR Summit, CEIC, DFRWS EU, SECURE, FIRST, RSA Conference JP, etc.

## Motivation

- **Winnti**: Malware used by Chinese threat actors for cybercrime and cyber espionage since 2009.
- **Previous Research**: Kaspersky and Novetta have published comprehensive white papers on Winnti [1][2].
- **Current Status**: Winnti remains active and is continuously evolving.
  - **Behavioral Changes**: Variants with different behaviors compared to past reports.
  - **New Targets**: Industries beyond gaming and pharmaceuticals.
- **Objective**: To fill the gaps in the current understanding of Winnti.

## Agenda

1. Winnti Components and Binaries
2. Extracting Target Information from Winnti Samples
3. Wrap-up

## Winnti Components and Binaries

### Winnti Execution Flow

1. **Dropper**
   - Drops other components from an inline DES-protected blob.
   - Components include:
     - Service and worker
     - Engine with other malware family (rare)
   - Password passed via command line argument.
   - Some samples add dropper’s configuration into the overlays of the components.
   - Runs service component using `rundll32.exe` with varying export function names.

2. **Service Component**
   - Loads engine component from an inline blob.
   - PE header values are eliminated (e.g., MZ/PE signatures, machine architecture, NumberOfRvaAndSizes).
   - Calls engine’s export functions, sometimes using API hashes.

3. **Engine Component**
   - Memory-resident, some samples saved as files with the same encryption as the worker component.
   - Export function names: `Install`, `DeleteF`, `Workmain`.
   - Attempts to bypass UAC dialog and create a service.
   - Decrypts and runs the worker component with PE header values eliminated and 1-byte XOR & nibble swap.

4. **Worker Component**
   - Export function names: `work_start`, `work_end`.
   - Manages plugins, which can be cached on disk or memory-resident.
   - Supported C2 protocols: TCP, HTTP, HTTPS, SMTP.

### New Findings

- **SMTP Worker Component**
  - Supports SMTP; config contains email addresses and more obfuscated (incremental XOR + dword XOR).
  - Reuses public code, old code looks copied from PRC-based Mandarin-language programming and code sharing forums.
  - Hard-coded sender email and password: "PI:EMAIL" and "test123456".
  - New code similar to that distributed in Code Project, with STARTTLS support for encrypted SMTP traffic.
  - Uses QQMail account for sending, recipient email addresses included.

- **VSEC Variant**
  - Differences from Novetta variant:
    - No engine component; service component directly calls worker component.
    - Worker’s export function name: `DllUnregisterServer`.
    - Takes immediate values according to functions (e.g., 0x201401 = delete file, 0x201402 = DLL/code injection, 0x201404 = run inline main DLL).
  - Unique persistence: Modifies IAT of legitimate Windows DLLs to load service component, target DLL name included in configuration.

- **Winnti as a Loader**
  - Some engine components embed other malware families like Gh0st and PlugX.
  - Configuration encrypted by Winnti and the malware algorithm, with members specific to the malware and Winnti strings.

### Related Kernel Drivers

- **Kernel Rootkit Drivers** included in worker components:
  - Hides TCP connections.
  - Same driver used by Derusbi, making covert channels with other client machines.
  - Behavior similar to WFP callout driver of Derusbi server variant but with different implementation.
  - Hooks TCPIP Network Device Interface Specification (NDIS) protocol handlers.

---

[1] Kaspersky White Paper on Winnti  
[2] Novetta White Paper on Winnti  
[3] Mandarin-language Programming and Code Sharing Forum  
[4] Code Project  
[5] QQMail  
[6] VSEC Variant  
[7] Derusbi  
[8] Derusbi Server Variant