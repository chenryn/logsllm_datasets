# Achieving Flexibility for ABE with Outsourcing via Proxy Re-Encryption

**Authors:**
- Zuoxia Yu
- Man Ho Au
- Rupeng Yang
- Junzuo Lai
- Qiuliang Xu

**Affiliations:**
- **Zuoxia Yu, Man Ho Au, Rupeng Yang:**
  - Department of Computing, The Hong Kong Polytechnic University, Hong Kong, China
  - Email: [EMAIL]

- **Rupeng Yang:**
  - School of Computer Science and Technology, Shandong University, Jinan, China
  - Department of Computing, The Hong Kong Polytechnic University, Hong Kong, China
  - Email: [EMAIL]

- **Junzuo Lai:**
  - College of Information Science and Technology, Jinan University, Guangzhou, China
  - State Key Laboratory of Cryptology, Beijing, China
  - Email: [EMAIL]

- **Qiuliang Xu:**
  - School of Computer Science and Technology, Shandong University, Jinan, China
  - Email: [EMAIL]

## Abstract

Outsourcing the decryption of attribute-based encryption (ABE) ciphertext is a promising approach to enable efficient decryption for users. However, existing solutions require the type of target ciphertext to be determined at the setup phase of the outsourcing scheme. This limitation hinders the versatility of the target cryptosystems or clients. In this paper, we address the problem of transforming an ABE ciphertext to any client using the same or a different public-key encryption (PKE) system as the sender. This is particularly relevant in scenarios involving remote and cross-system data sharing, where it is impractical to enforce a single PKE across all clients.

We also explore the feasibility of adopting a robust client-side decryption scheme, which is not supported in current ABE with outsourcing solutions. To achieve this, we introduce cross-system proxy re-encryption (CS-PRE), a new re-encryption paradigm. In CS-PRE, a semi-trusted proxy converts a ciphertext from a source cryptosystem (Π0) to a ciphertext for a target cryptosystem (Π). We formalize CS-PRE and present a construction that excels in the following aspects:
1. **Versatility:** Π0 can be any ABE within Attrapadung’s pair encoding framework, and Π can be any PKE. Keys and public parameters can be generated independently.
2. **Compatibility:** CS-PRE does not modify the public parameters and keys of Π0 and Π. The input for conversion is an ordinary ciphertext of Π0.
3. **Efficiency:** The computational cost for re-encryption and decryption of the re-encrypted ciphertext is comparable to a decryption in Π0 and Π, respectively.

We prove that our construction is fully secure, assuming Π0 is secure in Attrapadung’s framework and Π is IND-CPA secure. Our construction remains secure even when there are multiple target cryptosystems. CS-PRE enables flexible sharing of cloud data, allowing the owner to instruct the cloud server to re-encrypt ciphertexts for intended recipients. It also allows lightweight devices to access remotely encrypted data by converting the ciphertext to a simpler encryption, such as RSA-OAEP. Finally, instances of CS-PRE can be viewed as new proxy re-encryption schemes, supporting transformations from ABE for regular languages to hierarchical IBE or doubly spatial encryption to lattice-based encryptions (e.g., NTRUCCA).

**Keywords:** proxy re-encryption, cross-system, attribute-based encryption, public-key encryption, pair encoding

**ACM Reference Format:**
Zuoxia Yu, Man Ho Au, Rupeng Yang, Junzuo Lai, and Qiuliang Xu. 2018. Achieving Flexibility for ABE with Outsourcing via Proxy Re-Encryption. In ASIA CCS '18: 2018 ACM Asia Conference on Computer and Communications Security, June 4–8, 2018, Incheon, Republic of Korea. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3196494.3196557

## 1 Introduction

With the rise of cloud computing, online data storage and sharing have become increasingly popular. Users are gradually shifting their primary storage from local hard drives to the cloud. When sharing data, they often transfer it directly from their cloud to the recipient's cloud. For shared or delivered data, they typically leave it in the cloud and access it as needed. This allows them to access their data anytime, anywhere, on any device. However, data stored in the cloud, which may contain sensitive information, is vulnerable to snooping by the cloud provider. Therefore, encrypting data before transferring it is preferable. Attribute-Based Encryption (ABE) is widely used because it provides fine-grained access control over encrypted data. However, the convenience of the cloud decreases significantly since performing useful operations on encrypted data is challenging. In practice, decryption operations in ABE schemes are computationally expensive, making it difficult for users to access data on resource-constrained portable devices like smartphones and tablets.

For example, Alice, a staff member at a university, uses an ABE scheme to ensure secure and fine-grained information transmission. Sometimes, she needs to read university messages on her mobile phone, whose computational capabilities may be insufficient for decrypting ABE ciphertext. As a result, she has to wait a long time to read the messages, and her phone's battery drains quickly.

Outsourcing the decryption of ABE ciphertext appears to be a feasible solution to this issue. Green et al. [21] first introduced this idea, proposing a mechanism that allows a proxy to transform ABE ciphertext into a short Elgamal ciphertext, which supports efficient decryption. However, in these ABE with outsourcing schemes, the type of target ciphertext is determined at the setup phase, leading to several problems.

To illustrate, consider Alice again. After using a server to partially decrypt the ABE ciphertext, she can read the message instantly without waiting. However, two issues remain:
1. **Data Sharing:** The mechanism is not friendly for data sharing. For instance, the university often provides daily information, such as notifications about the Christmas party. Alice wants to forward these to her friend but does not want to complete the encryption operation on her mobile phone. She hopes to outsource this task to her server using the original encrypted email. Current outsourcing schemes cannot transform ciphertext into one encrypted under another user's public key.
2. **Security:** The mobile phone may be infected with malware or suffer from side-channel attacks, potentially compromising part of the secret key embedded in the phone. To ensure data confidentiality, a robust client-side decryption scheme should be used. Ideally, the target cryptosystem should offer resistance against side-channel and related-key attacks. Current outsourcing schemes do not support this.

To address these issues, we revisit the task of ABE with outsourcing and observe that proxy re-encryption (PRE) may provide a solution. PRE, introduced by Blaze et al. [6], supports the delegation of decryption rights from one party to another with the help of a semi-trusted proxy holding a re-encryption key. Ciphertexts of the delegator can be transformed into ciphertexts of the delegatee by the proxy without the involvement of the former. The security of PRE schemes requires that neither the proxy nor the delegatee alone can learn any information from the delegator's ciphertexts. This primitive has extensive applications, especially for efficient data storing and sharing in cloud computing and social networks. For example, AtCipher deployed PRE in their product to enable secure cloud storage and data sharing.

With the help of PRE schemes, we can transform ciphertext into a specific type of encryption scheme and encrypt it under another public key. For example, to access data encrypted under ABE schemes, Alice could send a re-encryption key to the cloud, which can transform the ABE ciphertext into a lightweight one, such as RSA ciphertext, or into one encrypted under Bob's public key. Unfortunately, existing PRE schemes do not meet our requirements, particularly in terms of flexibility. We discuss this in more detail in Section 1.2.

### 1.1 Our Contributions

In this paper, we introduce and formalize the notion of cross-system proxy re-encryption (CS-PRE), which allows a semi-trusted proxy to convert ciphertext from a source cryptosystem to a target cryptosystem. Our CS-PRE construction is versatile, supporting a wide range of ABE schemes for the source cryptosystem and any IND-CPA secure PKE for the target cryptosystem. We prove that our proposal is fully secure in the standard model under static assumptions. The architecture of our system is illustrated in Figure 1.

**Techniques:**
Our construction is similar to those in [20, 30]. However, to support the cross-system property and avoid chain collusion attacks, we encrypt the randomness used for hiding the secret key of the original encryption scheme with another CPA-secure encryption scheme. To prove the security of the scheme, we devise an alternative proof sequence for re-encryption key queries for attributes matching the challenge ciphertext. We use subgroup decision assumptions and the IND-CPA security of the target encryption scheme to hide those keys computationally.

**Application Scenarios:**
We propose two applications of our CS-PRE schemes:
1. **Efficiency:** Our CS-PRE can transform ABE ciphertext into ciphertexts of lightweight PKE schemes suitable for portable devices, similar to outsourcing the decryption of ABE ciphertext. The architecture for this case is illustrated in Figure 2, where a cloud user may ask the cloud to transform ABE ciphertext into a lightweight PKE ciphertext.
2. **Enhanced Functionality:** Our constructed scheme can also transform ABE ciphertext into many different ciphertexts. The targeted ciphertexts can be of the same PKE scheme but encrypted under different public keys, or of different PKE schemes. This transformation is done via different re-encryption keys. The architecture for this case is illustrated in Figure 3.

### 1.2 Related Works

**Proxy Re-Encryption Schemes:**
Early PRE schemes [6, 11, 34] considered bidirectional delegation, allowing the proxy to transform ciphertexts of the delegator to the delegatee and vice versa. However, this property is undesirable in many scenarios, including cloud storage, as the delegatee may not want to delegate decryption rights back to the delegator. Thus, unidirectional delegation schemes [1, 20, 32, 40] have gained more attention.

A PRE scheme is multi-hop if the proxy can perform multiple consecutive re-encryptions on a ciphertext. Examples include [11, 20, 34]. Otherwise, it is a single-hop PRE [1, 20, 23, 32, 40]. While multi-hop PRE schemes appear more powerful, the chain collusion attack presented by Shao and Cao [40] showed that a secure multi-hop PRE scheme may not remain secure in the single-hop setting. Both types of PRE are being studied.

Despite the variety of PRE schemes proposed, they fail to meet our requirements. Some even have security issues preventing practical deployment. Specifically, they face one or more of the following problems:
- **Not Supporting Cross-System:** Few works attempt to construct PRE schemes supporting cross-system, and none support "arbitrary target systems."
- **Poor Functionality:** Many works focus on ABE schemes with simple functionality, such as identity-based encryption (IBE) schemes, and do not consider more advanced ABE schemes.
- **Low Security Level:** Some works only achieve weak security levels, such as selective security.
- **Insecurity:** Some schemes are broken by particular attacks, such as the chain collusion attack [40].
- **Strong Assumptions:** Some schemes rely on strong assumptions, such as the random oracle model, or require a trusted central party to generate re-encryption keys.

**Adaptively Secure ABE:**
The difficulty of constructing adaptively secure ABEs in the standard model was overcome by the dual system methodology [47]. Based on this, various adaptively secure ABEs, such as IBE [26, 27], ABE [25, 28], inner-product encryption (IPE) [4, 37], and spatial encryption (SE) [4, 22], have been constructed. Two general frameworks [2, 49] were presented, enabling some general results regarding dual system-based constructions [7, 51]. However, these frameworks only work in composite-order bilinear groups, making implementation difficult. Prime-order group instantiations [3, 12] have been proposed, but they only realize the essential properties of the framework, limiting flexibility and making enhancements challenging.

### 1.3 Organization of the Paper

The rest of the paper is organized as follows:
- **Section 2:** Basic notations and definitions.
- **Section 3:** Syntax and security notions of CS-PRE.
- **Section 4:** Construction of CS-PRE.
- **Section 5:** Discussion on the construction of CS-PRE in prime-order groups.

## 2 Preliminaries

### Notation

- **Random Selection:** \( r \xleftarrow{R} R \) denotes that \( r \) is picked randomly and uniformly from the finite set \( R \).
- **Set Notation:** \([n]\) denotes the set \(\{1, 2, \ldots, n\}\).
- **Vectors and Matrices:** Lowercase (resp. uppercase) letters in boldface denote vectors (resp. matrices). All vectors in this paper are treated as row vectors.
- **Group Operations:** Let \( G \) be a group, and \( g \in G \) be a group element. For \( g \in G \) and \( \vec{k} = (k_1, k_2, \ldots, k_n) \in \mathbb{Z}^n \), \( g^{\vec{k}} \) denotes \((g^{k_1}, g^{k_2}, \ldots, g^{k_n})\). We use \(\cdot\) to denote the dot product operation of vectors and \(\times\) to denote component-wise multiplication of vectors.

### 2.1 Composite-Order Bilinear Groups and Assumptions

We review the definition of composite-order groups [8]. Let \((G, G_T)\) denote bilinear groups of composite order \( N = p_1 p_2 p_3 \), where \( p_1, p_2, \) and \( p_3 \) are distinct primes, with an efficiently computable bilinear map \( e : G \times G \to G_T \) satisfying the following properties:

- **Bilinearity:** For all \( g, h \in G \) and \( a, b \in \mathbb{Z}_N \), \( e(g^a, h^b) = e(g, h)^{ab} \).
- **Non-degeneracy:** There exist \( g, h \in G \) such that \( e(g, h) \neq 1_{G_T} \).
- **Computability:** There exists an efficient algorithm to compute \( e(g, h) \) for all \( g, h \in G \).

These properties are essential for the security and efficiency of our CS-PRE construction.