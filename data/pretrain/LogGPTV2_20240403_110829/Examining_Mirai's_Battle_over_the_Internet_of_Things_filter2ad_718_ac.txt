them Hajime, Persirai and Brickerbot, show how these variants are
used and how they have changed their infection behavior from the
original Mirai botnet. Furthermore, [17] found there to be many
different password combinations in use by various IoT malwares,
[19] showed a link between password lists and used tooling during
brute forcing. Similar to the other related work, these papers have
also not identified the differences in success between botnets.
Other IoT botnets have also been examined by the security
community, with [25] analyzing the Hajime botnet in-depth, [40]
surveying the BlackIoT botnet and many reports from industry
[20, 33, 37, 39]. Similar to the works on the original Mirai botnet,
these papers focus on one botnet and do not analyze the effect of
multiple botnets competing for the same IoT devices.
In this work, we go beyond the state of the art by answering
two major questions that were put up but remained unanswered
in previous work. First, what is the interaction and competitive
behavior of the plethora of IoT and specifically Mirai malware
strains in the wild? And second, which factors determine how
successful a particular malware can spread? We extend the work of
Antonakakis et al. [8] and in this paper additionally investigate the
evolution of Mirai-based botnets and how these adaptations relate
to the regions they infect. We do this by introducing a novel way to
identify the exact moment a device was compromized, a technique
that we also use to track the lifetime of an infection, which allows
us to accurately trace the infection characteristics of Mirai and its
descendants.
4 DATASET
The analysis in this paper is made possible through the combination
of three datasets listed in table 1, each capturing a different aspect
of the world-wide phenomenon of an IoT botnet. First, we use a
large network telescope to capture the scanning behavior at scale of
infected Mirai instances looking for other vulnerable hosts. Second,
we operate an installation of 7,500 honeypots to determine which
particular strain an IoT device is infected with. And third, we use
operator netflows to assess the behavior of the botnet at large. We
will describe each of these datasets in more detail in the following.
Telescope. As soon as a device is infected by a Mirai variant, it
immediately starts scanning the Internet for other vulnerable hosts.
This scanning routine is based on specifically crafted and injected
packets, and thus displays some implementation particularities.
For instance, the TCP sequence number will always be set to the
Dataset
Telescope
Honeypots
Size
(Jan-Mar 18)
1.2 TB
213 GB
Netflows
569 GB
Purpose
Infected devices, RNG analysis
Variant+behavior identification, credentials,
staging servers
Verification and coverage analysis,
blacklisting analysis
Table 1: Datasets used in this study.
Figure 4: The Honeytrack system routes compromization re-
quests into a separate, virtualized environment.
destination IP, and on startup a Mirai instance picks random values
for window size and source port it will use for every packet until
the infection is removed. This allows us to link incoming packets
to those potentially sent by Mirai.
In order to confidently arrive at an estimate how many and which
devices are potentially infected by Mirai, we use a large network
telescope consisting of three partially populated /16 networks with
∼65,000 IP addresses. As dark IP addresses, these addresses will
only receive scans and Internet backscatter, which can be easily
separated based on the TCP SYN or SYN+ACK flags [12]. As Mirai’s
target selection is random, the large size of the telescope – we
monitor about one in 65,000 IP addresses on the Internet – will
allow us to quantify and track how long infections are active.
The Honeytrack IoT system. While the telescope provides
a basis for counting and tracking a particular infection based on
header values, it does not reveal which malware strain has currently
infected a device. For this, we developed a distributed honeypot
system, consisting of an endpoint agent and a backend environ-
ment visualized in figure 4. The agent listens on TCP port 23 and
transparently tunnels incoming packets to an environment where
IoT devices are emulated. Incoming requests are randomly allocated
to one of eight system images (based on the most common ban-
ners in a Censys telnet survey), exposing a fully functional (high
engagement) but virtualized IoT device. Once a connection is made,
the same IP will always be be connected to the same device again,
which is subsequently serialized to preserve state if the attacker
would be coming back.
Over a period of 6 weeks, 7,500 honeypots were deployed in 3
home ISP networks, 2 network ranges of a public cloud, as well as
three network ranges of an enterprise network where they were
InternetHoneytrackUser agentin home / DCnetworksNetworktelescopeof unusedIP addressesinterleaved on unused IPs between active systems, so that the hon-
eypots would blend in. For this permission of the network owners
was sought via the established approval mechanisms. The instal-
lation recorded a total of 300,000,000 login attempts from 203,920
unique sources, which during the brute forcing would reveal their
hard-coded password list as well as the malware strain. This is pos-
sible as the Mirai botnet does not immediately test whether it has
successfully logged in with one of the passwords it has sent. Instead,
the malware sends a username/password combination followed by
a set of commands, the last one being /bin/busybox MIRAI to the
tested device. This has two purposes. If the username/password
combination was correct, the command string gets executed. If
none of the credentials worked, the busybox command is just an-
other username. If the credentials were correct and the command
executed, a router running busybox would respond with “MIRAI:
applet not found”, while a host without would throw an error. Mirai
thus knows from the response whether a credential was correct and
the system runs busybox. When later botmasters recycled Mirai’s
source code to change their own IoT variants, they changed the
busybox string. By providing a login and a working shell environ-
ment, we can thus track with Honeytrack which variant attacks,
and whether it was modified to contain different or new credentials.
To assess the role of Mirai and its variants in the entire spectrum
of actors targeting telnet and the IoT, we tracked all source IPs
that scanned or attempted login over the entire observation period.
87% of all source IPs exhibited Mirai’s special way of crafting pack-
ets, thus making this particular IoT malware family the dominant
player and most relevant phenomena in the IoT malware arena. For
this reason, we have made Mirai and its variants the focus of the
discussion in this paper.
Netflows. The above two datasets provide a view which mal-
ware strains are currently deployed at which IoT device around the
world. To also understand what these devices are actually doing and
how the support infrastructure works we also make use of netflows
from a Tier 1 network operator. To preserve the privacy of the end
users, the source and destination IP addresses are masked using the
prefix-preserving anonymization scheme presented in [43], proven
to be semantically secure. This AES masking key is only known to
the operator, which does provide us with a mapping of IP addresses
that attacked us to their anonymized counterparts. The data access
procedure was cleared with the corresponding protection authority
of the operator. This setup protects the identity of particular clients,
but at the same time does allow us to understand in which networks