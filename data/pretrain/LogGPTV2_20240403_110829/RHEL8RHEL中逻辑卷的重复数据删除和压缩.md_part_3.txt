:::
这个过程在 VDO 池 LV 中创建 VDO 逻辑卷（LV）。
::: itemizedlist
**先决条件**
-   安装 VDO 软件。请查看 ["安装
    VDO"一节](#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#proc_installing-vdo-creating-a-deduplicated-and-compressed-logical-volume "安装 VDO"){.xref}。
-   在您的系统中有一个有可用存储容量的 LVM 卷组。
:::
::: orderedlist
**流程**
1.  为您的 VDO LV 选择一个名称，如
    `vdo1`{.literal}。您必须为系统中的每个 VDO LV 使用不同的名称和设备。
    在以下步骤中，将 [*[vdo-name]{.replaceable}*]{.emphasis}
    替换为实际名称。
2.  创建 VDO LV：
    ``` screen
    # lvcreate --type vdo \
               --name vdo-name
               --size physical-size
               --virtualsize logical-size \
               vg-name
    ```
    ::: itemizedlist
    -   使用您要放置 VDO LV 的现有 LVM 卷组的名称替换
        [*[vg-name]{.replaceable}*]{.emphasis}。
    -   用 VDO LV 使用的逻辑存储数量替换
        [*[logical-size]{.replaceable}*]{.emphasis}。
    -   如果物理大小大于 16TiB，请添加以下选项以将卷的 slab 大小增加到
        32GiB：
        ``` screen
        --config 'allocation/vdo_slab_size_mb=32768'
        ```
        如果您在大于 16TiB 的物理大小中使用 2GiB 的默认 slab
        大小，`lvcreate`{.literal} 命令会失败并显示以下错误：
        ``` screen
        ERROR - vdoformat: formatVDO failed on '/dev/device': VDO Status: Exceeds maximum number of slabs supported
        ```
    :::
    ::: example
    []{#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#idm140610628051424}
    **例 3.1. 为容器存储创建 VDO LV**
    ::: example-contents
    例如，要为 1TB VDO 池中的容器存储创建 VDO LV，您可以使用：
    ``` screen
    # lvcreate --type vdo \
               --name vdo1
               --size 1T
               --virtualsize 10T \
               vg-name
    ```
    :::
    :::
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果在创建 VDO 卷时发生故障，请删除要清理的卷。
    :::
3.  在 VDO LV 上创建文件系统：
    ::: itemizedlist
    -   对于 XFS 文件系统：
        ``` screen
        # mkfs.xfs -K /dev/vg-name/vdo-name
        ```
    -   对于 ext4 文件系统：
        ``` screen
        # mkfs.ext4 -E nodiscard /dev/vg-name/vdo-name
        ```
    :::
:::
::: itemizedlist
**其它资源**
-   `lvmvdo(7)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#mounting-an-lvm-vdo-volume_creating-a-deduplicated-and-compressed-logical-volume}挂载 LVM-VDO 卷 {.title}
:::
这个过程会在 LVM-VDO 卷中手动挂载文件系统，也可以永久挂载文件系统。
::: itemizedlist
**先决条件**
-   您的系统中有 LVM-VDO 卷。如需更多信息,请参阅 ["创建 LVM-VDO
    卷"一节](#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#creating-an-lvm-vdo-volume_creating-a-deduplicated-and-compressed-logical-volume "创建 LVM-VDO 卷"){.xref}。
:::
::: itemizedlist
**流程**
-   要手动将文件系统挂载到 LVM-VDO 卷中，请使用：
    ``` screen
    # mount /dev/vg/vdo-name mount-point
    ```
-   要将文件系统配置为在引导时自动挂载，请在 `/etc/fstab`{.literal}
    文件中添加一行：
    ::: itemizedlist
    -   对于 XFS 文件系统：
        ``` screen
        /dev/vg/vdo-name mount-point xfs defaults,x-systemd.device-timeout=0,x-systemd.requires=vdo.service 0 0
        ```
    -   对于 ext4 文件系统：
        ``` screen
        /dev/vg/vdo-name mount-point ext4 defaults,x-systemd.device-timeout=0,x-systemd.requires=vdo.service 0 0
        ```
    :::
    如果 LVM-VDO 卷位于需要网络的块设备中,如 iSCSI,请添加
    `_netdev`{.literal} 挂载选项。
:::
::: itemizedlist
**其它资源**
-   有关 iSCSI 挂载选项的详情请参考 `systemd.mount(5)`{.literal} man
    page。`_netdev`{.literal}
:::
:::
::: section
::: titlepage
# []{#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#proc_changing-the-compression-and-deduplication-settings-on-an-lvm-vdo-volume_creating-a-deduplicated-and-compressed-logical-volume}更改 LVM-VDO 卷中的压缩和重复数据删除设置 {.title}
:::
此流程启用或禁用 VDO 池逻辑卷(LV)的压缩和重复数据删除。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认启用压缩和重复数据删除。
:::
::: itemizedlist
**先决条件**
-   您的系统中有 LVM-VDO 卷。
:::
::: orderedlist
**流程**
1.  要找出在逻辑卷中是否启用或禁用压缩和重复数据删除：
    ``` screen
    # lvs -o+vdo_compression,vdo_deduplication
    ```
2.  查找正在运行的活跃 VDOPoolLV 的 deduplication 索引的压缩和状态：
    ``` screen
    # lvs -o+vdo_compression_state,vdo_index_state
    ```
    `vdo_index_state`{.literal} 可以显示为
    `error`{.literal}、`close`{.literal}、`opening`{.literal}、`closing`{.literal}、`online`{.literal}
    和 `offline`{.literal}。
3.  启用或禁用 VDOPoolLV 的压缩：
    ``` screen
    # lvchange --compression y|n  vgname/vdopoolname
    ```
4.  为 VDOPoolLV 启用或禁用 deduplication:
    ``` screen
    # lvchange --deduplication y|n vgname/vdopoolname
    ```
:::
::: itemizedlist
**其它资源**
-   详情请查看 `lvmvdo(7)`{.literal} man page。
:::
:::
:::
[]{#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes.html}
::: chapter
::: titlepage
# []{#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes.html#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes}第 4 章 LVM-VDO 卷中的 TRIM 选项 {.title}
:::
您可以使用 VDO 卷中的 `discard`{.literal}
选项让块设备重新声明未使用的空间。另一个选项是使用 `fstrim`{.literal}
应用程序（按需丢弃）,或使用 `mount -o discard`{.literal}
命令进行立即丢弃。当使用 `fstrim`{.literal}
应用程序时,管理员需要调度并监控额外进程,同时使用
`mount -o discard`{.literal} 命令可尽可能立即恢复空间。
请注意,目前建议使用 `fstrim`{.literal} 应用程序丢弃未使用的块,而不是
`discard`{.literal} 挂载选项,因为这个选项对性能的影响可能非常严重。因此,
`nodiscard`{.literal} 是默认设置。
::: section
::: titlepage
# []{#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes.html#proc_enabling-discard-mount-option-on-vdo_assembly_trim-options-on-an-lvm-vdo-volume}在 VDO 上启用丢弃挂载选项 {.title}
:::
此流程在 VDO 卷中启用 `discard`{.literal} 选项。
::: itemizedlist
**先决条件**
-   您的系统中有 LVM-VDO 卷。
:::
::: itemizedlist
**流程**
-   在您的卷中启用 `discard`{.literal}:
    ``` screen
    # mount -o discard /dev/vgname/vdoname mount-point
    ```
:::
::: itemizedlist
**其它资源**
-   `xfs(5)`{.literal} man page
-   `mount(8)`{.literal} man page
-   `lvmvdo(7)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes.html#proc_setting-up-periodic-trim-operation_assembly_trim-options-on-an-lvm-vdo-volume}设置定期 TRIM 操作 {.title}
:::
这个过程在您的系统中启用调度的 TRIM 操作。
::: itemizedlist
**先决条件**
-   您的系统中有 LVM-VDO 卷。
:::
::: itemizedlist
**流程**
-   启用并启动计时器：
    ``` screen
    # systemctl enable --now fstrim.timer
    ```
:::
::: itemizedlist
**验证**
-   验证是否启用了计时器：
    ``` screen
    # systemctl list-timers fstrim.timer
    ```
    ::: example
    []{#assembly_trim-options-on-an-lvm-vdo-volume_deduplicating-and-compressing-logical-volumes.html#idm140610662278304}
    **例 4.1. 验证过程的可能输出**
    ::: example-contents
    ``` screen
    # systemctl list-timers fstrim.timer
    NEXT                         LEFT         LAST  PASSED  UNIT         ACTIVATES
    Mon 2021-05-10 00:00:00 EDT  5 days left  n/a   n/a     fstrim.timer fstrim.service
    ```
    :::
    :::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您将不会看到对 VDO 卷的任何引用,因为 `fstrim.timer`{.literal}
在所有挂载的文件系统中运行。
:::
::: itemizedlist
**其它资源**
-   `fstrim(8)`{.literal} man page
:::
:::
:::