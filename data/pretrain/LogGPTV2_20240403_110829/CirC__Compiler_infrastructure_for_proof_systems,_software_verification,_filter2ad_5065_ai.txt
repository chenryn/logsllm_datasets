### 文件内容优化

#### 图23. CirC 与 Circom 编译器在 Circom 测试套件上的对比

| 文件名 | CirC 约束数 | CirC 时间 (s) | Circom 约束数 | Circom 时间 (s) |
| --- | --- | --- | --- | --- |
| aliascheck_test | 261 | 0.10 | 261 | 0.30 |
| babyadd_tester | 6 | 0.08 | 6 | 0.30 |
| babycheck_test | 3 | 0.09 | 3 | 0.27 |
| babypbk_test | 776 | 0.42 | 776 | 4.96 |
| binsub_test | 49 | 0.07 | 49 | 0.22 |
| constants_test | 1 | 0.08 | 1 | 0.13 |
| eddsamimc_test | 5712 | 0.83 | 5712 | 19.05 |
| eddsaposeidon_test | 4208 | 1.07 | 4208 | 18.44 |
| edwards2montgomery | 2 | 0.08 | 2 | 0.15 |
| escalarmulany_test | 2554 | 0.36 | 2554 | 1.18 |
| escalarmulﬁx_test | 776 | 0.44 | 776 | 5.00 |
| greatereqthan | 65 | 0.11 | 65 | 0.18 |
| greaterthan | 65 | 0.10 | 65 | 0.17 |
| isequal | 2 | 0.08 | 2 | 0.17 |
| iszero | 2 | 0.07 | 2 | 0.18 |
| lesseqthan | 65 | 0.07 | 65 | 0.17 |
| lessthan | 65 | 0.07 | 65 | 0.17 |
| mimc_sponge_hash_test | 2640 | 0.09 | 2640 | 0.71 |
| mimc_sponge_test | 660 | 0.24 | 660 | 0.31 |
| mimc_test | 364 | 0.14 | 364 | 0.20 |
| montgomery2edwards | 2 | 0.08 | 2 | 0.18 |
| montgomeryadd | 3 | 0.06 | 3 | 0.13 |
| montgomerydouble | 4 | 0.05 | 4 | 0.13 |
| mux1_1 | 1 | 0.07 | 1 | 0.15 |
| mux2_1 | 3 | 0.07 | 3 | 0.20 |
| mux3_1 | 5 | 0.07 | 5 | 0.21 |
| mux4_1 | 9 | 0.07 | 9 | 0.22 |
| pedersen2_test | 701 | 0.40 | 701 | 3.91 |
| sha256_2_test | 30134 | 53.77 | 30134 | 80.88 |
| sign_test | 262 | 0.13 | 262 | 0.33 |
| smtprocessor10_test | 7895 | 5.07 | 7895 | 158.39 |
| smtveriﬁer10_test | 4783 | 2.72 | 4783 | 50.12 |
| sum_test | 97 | 0.07 | 97 | 0.20 |

#### 图24. CirC 与 Pequin 编译器在 C 语言基准测试上的对比

| 基准测试 | CirC 约束数 | CirC 时间 (s) | Pequin 约束数 | Pequin 时间 (s) |
| --- | --- | --- | --- | --- |
| sparse_matvec | 5806 | 1.47 | 23466 | 7.63 |
| mm | 27000 | 577.97 | 27001 | 17.44 |
| rle_decode | 4560 | 1.10 | 9847 | 6.23 |
| mergesort | 10400 | 3.32 | 19781 | 5.45 |
| kmp_search | 75650 | 23.13 | 163664 | 30.56 |
| ptrchase | 168 | 0.11 | 1993 | 1.43 |
| boyer_moore | 2016 | 0.91 | 5612 | 2.06 |

对于使用 Buffet 循环扁平化指令的基准测试，我们手动应用了 Buffet 的 C 到 C 扁平化传递。这与 Pequin 使用循环扁平化的方式相同，只是 Pequin 在编译过程中自动调用源到源的转换。

图24显示了结果。总体而言，CirC 生成的约束数要少得多。这是因为这些基准测试（类似于我们主评估中的 ptrs-8）受限于对小数组的访问。回顾第5.1节，CirC 在编译小数组时比 Pequin 更高效。

由于小数组访问是瓶颈，我们认为这个基准测试集对 CirC 的表现过于有利。尽管如此，为了与[11]保持一致，我们仍然包括了这些基准测试；请参阅第5.1节以获得更公平的比较（根据我们的观点）。

### 附录 B. ZKlog 抽象语法

图25展示了我们的 Datalog 方言 ZKlog 的抽象语法。类型可以是布尔值、字段元素、无符号整数或固定大小的数组。规则对于某些输入变量成立，如果任何情况下都成立。每个情况可以量化存在变量，并且如果所有原子项对于某个变量赋值都成立，则该情况成立。每个原子项是一个规则应用或一个术语：字面量、变量、数组或应用于其他术语的操作符。程序由规则组成，包括一个特殊的入口规则：main。

类型可以被限定为公共的。对于零知识证明，入口规则的输入如果是限定为公共的则为公共输入，否则为私有输入。所有由情况量化的变量都是私有的。

### 附录 C. OpenSSL 漏洞详情

图26说明了 OpenSSL 宏 mul_add_c2（图19）中的漏洞。双倍和加操作可能会溢出一位；这些溢出通过条件增量处理 c2 和 t1。然而，条件增量本身也可能溢出。在某些情况下，这不会引入漏洞。c2 的溢出可以忽略，因为此宏实现了三字节算术。第一个条件增量 t1 不会溢出，因为 t1 在增量之前必须是偶数。然而，如果第二个条件增量 t1（用虚红线圈出）溢出，c2 应该但没有再次递增。

授权许可限于清华大学。从 IEEE Xplore 下载于2022年8月7日12:58:36 UTC。使用受限制。