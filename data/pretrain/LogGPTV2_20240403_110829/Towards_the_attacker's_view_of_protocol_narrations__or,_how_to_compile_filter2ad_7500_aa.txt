title:Towards the attacker's view of protocol narrations (or, how to compile
security protocols)
author:Zhiwei Li and
Weichao Wang
Towards the Attacker’s View of Protocol Narrations
(or, How to Compile Security Protocols)
Zhiwei Li
Department of SIS
UNC Charlotte
Charlotte, NC 28223
PI:EMAIL
Weichao Wang
Department of SIS and CyberDNA
UNC Charlotte
Charlotte, NC 28223
PI:EMAIL
ABSTRACT
As protocol narrations are widely used to describe security
protocols, eﬀorts have been made to formalize or devise
semantics for them. An important, but largely neglected,
question is whether or not the formalism faithfully accounts
for the attacker’s view. Several attempts have been made
in the literature to recover the attacker’s view. They, how-
ever, are rather restricted in scope and quite complex. This
greatly impedes the ability of protocol veriﬁcation tools to
detect intricate attacks.
In this paper, we establish a faithful view of the attacker
based on rigorous, yet intuitive, interpretations of exchanged
messages. This gives us a new way to look at attacks and
protocol implementations. Speciﬁcally, we identify two types
of attacks that can be thawed through adjusting the protocol
implementation; and show that such an ideal implementa-
tion does not always exist. Overall, the obtained attacker’s
view provides a path to more secure protocol designs and
implementations.
Categories and Subject Descriptors
C.2.2 [Computer-Communication Networks]: Network
Protocols—Protocol veriﬁcation; D.2.4 [Software]: Soft-
ware/Program Veriﬁcation—Formal methods
General Terms
Security
1.
INTRODUCTION
Although protocol narrations are widely used in security
literature to describe security protocols, diﬀerent groups of
people view the informal description rather diﬀerently. Such
a discrepancy among them makes it extremely diﬃcult to
evaluate security properties of a protocol.
First, the designer’s view of protocol narrations is often
“optimistic”, because the expected protocol execution natu-
rally leads designers to ignore other possible protocol execu-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’12, May 2–4, 2012, Seoul, Korea.
Copyright 2012 ACM 978-1-4503-1303-2/12/05 ...$10.00.
tions. As an example, let us consider the following Otway-
Rees protocol [32].
1. A → B : M, A, B,{Na, M, A, B}Kas
2. B → S : M, A, B,{Na, M, A, B}Kas ,{Nb, M, A, B}Kbs
3. S → B : M,{Na, Kab}Kas ,{Nb, Kab}Kbs
4. B → A : M,{Na, Kab}Kas
Here, A, B, and S denote diﬀerent roles of the protocol, and
the sequence of message exchanges illustrates the intended
execution trace of the protocol. It is expected that at the
last step A would receive a symmetric key Kab, whereas A
could be cheated to accept (M, A, B) as the symmetric key
in a well-known type ﬂaw attack [14].
Second, the implementor’s view of protocol narrations can
be “pessimistic”, because how principals check incoming mes-
sages is often neglected in protocol narrations [1]. That is
to say, implementors may unnecessarily treat some incom-
ing messages as “black-boxes” and thus allow protocol exe-
cutions that are not in compliance with the protocol narra-
tions [13]. For example, Ceelen et al. [12] show that Lowe’s
modiﬁed KSL protocol [27] is subject to the selected-name
attack. This attack arises because the implementation fails
to check an agent’s name, which could have been implied by
the protocol narration.
There is little point in pretending that a protocol will only
execute in accordance with the designer’s view. If we adopt
the optimistic view in our analysis, attacks that are not in
accordance with this view will never be found, such as the
type ﬂaw attack on the Otway-Rees protocol. On the con-
trary, if we adopt the pessimistic view, spurious attacks may
be detected due to the absence of some necessary condition
checks.
In this paper, we address this discrepancy by establishing
a faithful attacker’s view of protocol narrations. The view
is “faithful” in a sense that all, and only, protocol executions
in compliance with a given protocol narration are identiﬁed,
as shown in Figure 1. Unlike most previous work which
has focused on formalization or compilation [11, 10, 9, 30],
we aim at a semantics that accounts for the most minute
aspects of the protocol in the same manner of an attacker.
Such a view coincides with a realistic designer’s view and a
proactive implementor’s view.
Overview.
The main challenge of recovering the attacker’s view is to
determine exactly to what extent an incoming message can
be interpreted by a protocol participant. This task relates
closely to specifying a participant’s internal action(s) (i.e.,
condition check), which is an essential but largely neglected
(deﬁned in Section 5.3). As the new implementation
cannot be achieved either by the protocol designers or
by the protocol veriﬁers alone, we motivate the inter-
play between protocol design and veriﬁcation via the
semi-automated reﬁnement process.
Organization.
The remainder of this paper is organized as follows: Sec-
tion 2 introduces background materials. Section 3 is dedi-
cated to the interpretations of exchanged messages in pro-
tocol narrations. Section 4 gives the ideal semantics of pro-
tocol narrations based on interpretations of the exchanged
messages. In light of this semantics, Section 5 presents our
classiﬁcation of protocol implementations and attacks. Sec-
tion 6 discusses related work. Section 7 concludes the paper
and outlines the future work.
2. PRELIMINARIES
In this section, we brieﬂy review the basic deﬁnitions of
term algebra, equational theory, and deducibility.
A signature is a ﬁnite set of function symbols F and a
possibly inﬁnite set of constants A. Each function symbol
has an associated arity. We discriminate public and pri-
vate function symbols, respectively denoted by F + and F−.
We deﬁne the term algebra T (F,A,X ) as the smallest set
containing X and A such that f (t1,··· , tn) ∈ T (F,A,X )
whenever f ∈ F with arity n, and t1,··· , tn ∈ T (F,A,X ).
Elements of the set T (F,A,X ) are called terms. To avoid
confusion, syntactic equality of two terms t1 and t2 will be
denoted by t1 =s t2. As usual, f v(t) is deﬁned as the set of
variables that occur in term t. A term is ground if f v(t) = ∅.
We tend to use the words “term” and “message” interchange-
ably in the rest of this paper.
An equation is a pair of terms, written s = t and an equa-
tional theory E is presented by a ﬁnite set of equations. We
write t1 =E t2 when equation t1 = t2 is a logical consequence
of E. A substitution is a ﬁnite tuple [t1/x1, ..., tn/xn] map-
ping from variables xi to terms ti. The domain and range of
= {x|xσ (cid:54)=s x} and
a substitution σ are deﬁned by Dom(σ)
x∈Dom(σ){xσ}, respectively. We write σ = θ if
Ran(σ)
Dom(σ) = Dom(θ) and xσ =s xθ for all x. We deﬁne the
composition of substitutions σ and θ as a new substitution
σ ◦ θ such that tσ ◦ θ =s (tσ)θ. We use  to denote an empty
substitution, that is Dom() = ∅.
= (cid:83)
def
def
Let E be an equational theory and X a set of variables.
We say that substitution σ is more general modulo E on X
than the substitution θ, and write σ •≤X
E θ, if there exists a
substitution λ such that xθ =E xσλ for all x ∈ X.
The most straightforward way to model a principal’s knowl-
edge is in terms of message deducibility [18, 26]. That is,
given an equational system E and some messages T one
might be able to compute another message t from T under
equational theory E. Formally,
(cid:96)
(cid:96)E
(R1)
(R2)
(R3)
t ∈ T
T (cid:96) t
T (cid:96) t1 ··· T (cid:96) tk
T (cid:96) f (t1,··· , tk)
T (cid:96) s
s =E t
T (cid:96)E t
f ∈ F +
Figure 1: Sets of possible protocol execution traces
under diﬀerent views of a protocol narration
part of protocol speciﬁcation [1]. Although eﬀorts have been
devoted to make such checks explicit, it is far from clear that
all necessary checks are found. Besides, most of the ap-
proaches are specialized for the Dolev-Yao style primitives,
and rely on exhaustive case-by-case analysis, without intu-
itive justiﬁcations. To identify all necessary internal actions,
we provide an intuitive, yet rigorous, justiﬁcation for checks
performed by a principal. Speciﬁcally, we extend the notion
of recognizability [23] to ascertain the extent to which mes-
sage(s) could be understood. Consequently, we reduce the
problem of extraction of semantics from a protocol narration
to that of deciding recognizability, of which the decision pro-
cedure under Dolev-Yao model is implemented in [24].
We then use this ideal semantics to guide protocol imple-
mentation by deriving all necessary equality checks. Similar
to [13], such implementations are said to be prudent. Re-
markably, an attack scenario may be useful to reﬁne a proto-
col implementation; we include additional inequality checks
in a reﬁned implementation to prevent the attack. For ex-
ample, the type ﬂaw attack on the Otway-Reese protocol
is infeasible if A checks whether or not the last incoming
message is the same as M,{Na, M, A, B}Kas .
Contributions.
The main contributions of this paper are the following:
• We establish a faithful view of the attacker by rig-
orously examining each participant’s ability or inabil-
ity to cope with potentially ambiguous incoming mes-
sages.
• Independent of the attacker model, we present a pro-
cedure to extract from a given protocol narration its
ideal semantics. This procedure boils down to decid-
ing recognizability, for which decidability results are
known under the standard Dolev-Yao model [24].
• We propose a novel classiﬁcation of protocol implemen-
tations and attacks according to the attacker’s view.
Speciﬁcally, we prove that an ideal implementation
does not always exist, and thereby design a proce-
dure to derive a prudent implementation to approach
it, which performs all necessary equality checks.
• In light of the new classiﬁcation, we propose a semi-
automated implementation reﬁnement paradigm that
highlights inequality checks to thwart type-II attacks
We use the following equational theory Edy to model the
Upon completion of the protocol, the knowledge of each
standard Dolev-Yao intruder [18].
dy
F +
F−
dy
Edy
pair, senc, penc, hash
fst, snd, sdec, pdec
pk, sk
fst(pair(x, y)) = x
snd(pair(x, y)) = y
sdec(senc(x, y), y) = x
pdec(penc(x, pk(y)), sk(y)) = x
pdec(penc(x, sk(y)), pk(y)) = x
a , and s · t as
To reduce notational clutter, we use K +
shorthands for pk(A), sk(A), and pair(s, t), respectively.
Besides, we use t1 · t2 · t3 · ··· · tn to denote (((t1 · t2) · t3) ·
··· · tn). Additionally, {s}t denotes penc(s, t) if t is either a
public/private key, and senc(s, t) otherwise.
a , K−
Proposition 2.1. Let T be a term set and σ be a substitu-
tion. Then, T σ (cid:96)E t if and only if T (cid:96) t(cid:48) for some t(cid:48) such
that t(cid:48)σ =E t. Such a term t(cid:48) is called a recipe of t.
3.
INTERPRETING INCOMING MESSAGES
In this section we show how to interpret exchanged mes-
sages in protocol narrations. The presentation proceeds in
three steps. First, we introduce a new knowledge represen-
tation markup term set to account for uncertainty. Then, we
present an operational equivalence relation to capture one’s
inability to distinguish two interpretations of a message. Fi-
nally, we use recognizability to precisely characterize one’s
ability to interpret an incoming message.
3.1 Accounting For Uncertainty
In a hostile protocol execution environment, an incoming
message almost always has some part(s) being ambiguous.
For example, in the Otway-Rees protocol after exchanging
the ﬁrst three messages, principal A is expecting KAB from
the trusted third party S. However, since KAB is dynami-
cally generated, A is uncertain about its value, and thus will
accept any bit string of the same length.
To account for uncertainty, we introduce the following no-
tion to encapsulate one’s epistemic state.
Deﬁnition 3.1 (Markup Term Set). A markup term set,
notated as (cid:126)T , is a pair (cid:104)T, σ(cid:105), where σ is a substitution such
that Dom(σ) ⊆ f v(T ).
Here, a variable stands for an ambiguous (part of) message,
and a ground substitution corresponds to one possible inter-
pretation. This deﬁnition accords with the possible worlds
semantics for knowledge [21], in which the principal’s actual
epistemic state resides in one of many possible states, and
all possible states are indistinguishable to the principal. We
will write (cid:126)T ↓ts and (cid:126)T ↓subs for the term set and substitution