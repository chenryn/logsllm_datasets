MultinomialNB inherits coef_, intercept_ from BaseDiscreteNB defined by
        def _get_coef(self):
            return (self.feature_log_prob_[1:]
                    if len(self.classes_) == 2 else self.feature_log_prob_)
        def _get_intercept(self):
            return (self.class_log_prior_[1:]
                    if len(self.classes_) == 2 else self.class_log_prior_)
        coef_ = property(_get_coef)
        intercept_ = property(_get_intercept)
For binary classification, in order to be consistent with
LinearClassifierMixin, the coef_(intercept_) should be the difference between
second and first rows(elements)