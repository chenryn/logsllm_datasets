5.自定义适配器开发
5.1 简介
SODBASE实时数据分析平台要连接新的数据源，新的输出
方式，就是通过编写新的适配器来实现。方式，就是通过编写新的适配器来实现。
5.2学习自定义适配器制作(20分钟)
（1）将SODBASE-CEP-SDK-Adaptor-2.0.**.zip解压。
（2）在Eclipse中导入，File->Import点击确定
选择General->Existing Projects into Workspace
选择刚解压的目录，点击“Finish”
（3）新建Class，手工取名TestInputAdaptor,superclass手工填写
“com.sodbase.inputadaptor.OptimizedInputAdaptorI”
点击“Finish”
（4）编写代码
run
()函数就是输入适配器要实现的功能，可参见示例Externa
lEventGeneratorInputAdaptor。第一次写适配器可以将ExternalEventGeneratorInputAdaptor run() setUp()
stopInputStream()代码粘贴到TestInputAdaptor类中。
往引擎加入数据使用this.putEventToStreamDuplicatePrevention(prim
itiveEvent)方法。
（5）编写完代码后，将工程导出为jar包
（6）将导出的“adaptorA.jar”和依赖的jar包放到CEP
Sever的webapps/sodbase-cep-server-webservice-1.0.1/WEB-INF/lib下，就
可以在CEP Server上使用此适配器了。
（7）要在Studio中使用该适配器，请配置/configuration/adapt
or.properties文件增加该适配器的描述，这样在界面中就
可以选择该适配器了。
5.3 接口定义可以选择该适配器了。
5.3 接口定义
5.3.1 输入适配器
接口类为OptimizedInputAdapatorI
接口类中的方法如下，在实现类中可以重写。
方法摘要
 java.lang.String[]	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l
"getParamerNames()"  getParamerNames () 
          参数名称，与参数数组的元素一一对应
 java.lang.String[]	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l "getParams()" 
getParams () 
          InputAdaptor的参数列表。实现新的输入适
配器扩展时请将
params[0]保留，表示输入适配器对应的流数据名称stream
name。
 java.lang.String	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l "getShareMode()" 
getShareMode () 
          共享InputAdaptor,可以节约系统资源共享InputAdaptor,可以节约系统资源
“inquery”:在同一个查询内共享
”interquery”:在同一个modelspace不同的查询间共享
”intermodelspace”:在不同的modelspace之间共享inputAdaptor。
默认为"inquery",即同一个查询内查询模型内共享 *
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l
"setParamerNames(java.lang.String[])"  setParamerNames
(java.lang.String[] paramerNames)(java.lang.String[] paramerNames) 
          参数名称，与参数数组的元素一一对应
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l
"setParams(java.lang.String[])"  setParams
(java.lang.String[] params) 
          InputAdaptor的参数值，用于实现新的输入
适配器扩展时使用。目前有1个保留参数，即
params[0]用来表示输入适配器对应的数据源名称。其余参
数自定义。
abstract  void	  HYPERLINK数自定义。
abstract  void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\inputadaptor\\InputAdaptorI.html" \l
"stopInputStream()"  stopInputStream () 
          停止输入源数据传输 stop the input stream
5.3.2 输出适配器
接口类为OptimizedOutputAdaptorI。
接口类中的方法如下，在实现类中可以重写。
方法摘要
 java.lang.String[]	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"getParamerNames()"  getParamerNames () 
 java.lang.String[]	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l "getParams()" 
getParams () 
          参数值列表，目前无保留参数，全部供
自定义。
 boolean	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"isOutputAsSelectClause()"  isOutputAsSelectClause () 
abstract  void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"processdata(stream.queryexecutor.QueryExecutorI)"  processdata
(stream.queryexecutor.QueryExecutorI queryExcecutor)对数据进行处理，引擎每次输出数据时
就会调用次函数。Output处理之前会先进行select语句的执
行。
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"setOutputAsSelectClause(boolean)"  setOutputAsSelectClause
(boolean outputAsSelectClause) 
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"setParamerNames(java.lang.String[])"  setParamerNames
(java.lang.String[] paramerNames) 
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l
"setParams(java.lang.String[])"  setParams
(java.lang.String[] params)abstract  void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l "stopOutput()" 
stopOutput () 
          停止输出，有的输出适配器是占用系统
资源的，如socket 实现时请在此方法中释放资源
字段摘要
protected  boolean	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l"outputAsSelectClause"  outputAsSelectClause  
          是否按SELECT规定的格式输出，允许值为"
true","false"
protected  java.lang.String[]	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l "paramerNames" 
paramerNames  
          参数名称，与params的元素一一对应
protected  java.lang.String[]	  HYPERLINK"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
stream\\adaptor\\outputadaptor\\OutputAdaptorI.html" \l "params"  params
          参数值列表,无保留值，用户自定义
5.4示例
5.4.1 输入适配器
参见sodbase-external-dataadaptor工程下的ExternalEventGeneratorInpu
tAdaptor.java
5.4.2输出适配器
参见sodbase-external-dataadaptor工程下的ExerternalPrintEventOutput
Adaptor.java
5.5 参考类
5.5.1 PrimitiveEvent类
方法摘要5.5 参考类
5.5.1 PrimitiveEvent类
方法摘要
 java.util.Map	 
HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l "getAttributeMap()" 
getAttributeMap () 
          to all attributes(name and value) as a hash map
 zstreamplus.eventbuffer.ValueType	  HYPERLINK"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l
"getAttributeValueType(java.lang.String)"  getAttributeValueType
(java.lang.String value) 
          to get attribute's valueType, for example
getAttributeValueType("price") get the attribute "price"'s valuetype by
default, "_start_time_","_end_time_" attributes stand for the timestampof a event
 java.lang.String	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l "getEventClassName()" 
getEventClassName () 
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l
"output(java.io.PrintStream)"  output (java.io.PrintStream out)to print event in a PrintStream
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\
zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l
"setAttributeMap(java.util.Map)"  setAttributeMap
(java.util.Map attr
ibuteMap) 
 void	  HYPERLINK
"file:///E:\\Workspaces\\EclipseWorkspaceSodbase\\event-framework\\doc\\zstreamplus\\eventbuffer\\PrimitiveEvent.html" \l
"setEventClassName(java.lang.String)"  setEventClassName
(java.lang.String eventClassName) 
5.6使用RESTful接口插入事件
	在测试或系统集成中，也建模时将输入设置为“级联
输入”，然后通过调用REST接口插入事件。
URL： / sodbase-cep-server-webservice-1.0.1/insertevent
参数列表	 
username 登录CEP服务器的用户名
	    password  登录CEP服务器的密码
	    modelspacename
事件要输入到的模型空间（即输入到哪个用户的数据空
间去）事件要输入到的模型空间（即输入到哪个用户的数据空
间去）
	    streamname：事件插入到的数据流名称
	 	 data：事件数据,格式为 字段名:值，字段名:值…
datatypes：字段的数据类型(string,boolean,double),如果不给出
，默认为string
例子：
http://localhost:16111/sodbase-cep-server-webservice-1.0.1/insertevent?u
sername=admin&password=cep&modelspacename=firstuser&streamname=filter3.i
nsert&data=price:20.0,name:Google,volumn:100&datatypes=double,string,dou
ble
6. 流数据项目开发
6.1 模型XML文件ble
6. 流数据项目开发
6.1 模型XML文件
6.1.1inputAdaptors配置
参数，第一个参数为流名称保留。
设置为false，表示不使用全局共享数据流，此
设置建议由管理员修改。
6.1.2outputAadaptors配置
设置为true，则按SELECT语句输出基本事
件。如果设置为false，则SELECT语句不起作用，按照模式
输出复合事件。
参数
设置为false，表示不使用全局共享数据流，此
设置建议由管理员修改。
6.1.3SODSQL语句
为SODSQL语句，大于小于号在XML文件中用&lt;和&gt;
表示
6.2程序编制
程序编制有两种场景：表示
6.2程序编制
程序编制有两种场景：
（1）将CEP引擎嵌入用户程序中使用，用户可以JavaAPI来
定义SODSQL以及CEP模型，也可以将CEP模型按XML文件来编写
。
GraphModelExecutorUtil类中有3个基本方法：启动XML编写的模
型：
public void runXML(String path)//
启动XML编写的模型，path为CEP模型(epl)XML文件路径
public void runXMLString(String
XMLString)／／启动XML编写的模型(epl)，XMLString为CEP模型XML
String字符串
public void stopModelEmbeded(String modelname,String
modelversion)//停止某模型(epl)运行
（2）通过接口来操作CEP服务器。（2）通过接口来操作CEP服务器。
开发人员请参考开发手册和示例代码，内容包括：Web
service接口、底层API开发、规则Web管理界面开发、动态
图表SODBASE
View对接和配置、各类适配器的使用。同时，流数据项
目实施，请参考SODBASE流数据项目实施方法论。
6.3在线修改规则
在线修改规则，即修改在线运行中的SODSQL语句，而且数
据不丢失。应用场景如在线修改策略阈值，由于窗口数
据已经在旧的执行计划中，简单的停止SODSQL运行、修改
、再启动，会丢失窗口中的数据，也会丢失重新启动过
程中传来的数据。SODBASE
CEP引擎的GraphModelExecutorImpl类提供了在线修改规则的接
口。
public String executeGraphModelHotSwap(GraphModelData
graphModelData,String modelSpaceName);graphModelData,String modelSpaceName);
public void stopGraphModelHotSwap();
public String restartGraphModelHotSwap(GraphModelData
graphModelData,String modelSpaceName);
需要在线修改规则的CEP模型启动时需要使用executeGraphMod
elHotSwap方法启动，停止时使用stopGraphModelHotSwap方法，修
改规则后再启动需要使用restartGraphModelHotSwap方法。
7. 配置文件
本节介绍常用配置文件和配置参数含义。
7.1 configuration/global.properties	
maxqueuelength:
最大的缓冲队列长度，起到资源调度限制作用、系统自最大的缓冲队列长度，起到资源调度限制作用、系统自
保护作用。
warnqueuelength:
缓冲队列长度的报警长度，可针对报警采取一些运维管
理措施。
localserveraddress：CEP
Server时需配置，本实例运行管理的IP端口地址。
longsequenceoptimization：true/false
是否开启长模式深度优化。如果是sequence超过4路流，而
且WHERE语句中没有复杂的嵌套函数，建议开启此选项。
7.2 configuration/adaptor.properties
使用Studio时需要此配置文件，配置输入、输出适配器。
用于绘图时Input，Output节点配置下拉列表中的适配器。
汉字是unicode编码。
inputadaptor.num 输入适配器个数
inputadaptor.name.n：第n个输入适配器在下拉列表中显示的inputadaptor.name.n：第n个输入适配器在下拉列表中显示的
名字，n从1开始
inputadaptor.class.n: 第n个输入适配器实现类
inputadaptor.paramsNum.n：第n个输入适配器参数个数
inputadaptor.paramsName.n.i:
第n个输入适配器的第i个参数在对话框中显示的名称。i
也从1开始。
inputadaptor.paramsValue.n.i：第n个输入适配器的第i个参数在
对话框中显示的名称。i也从1开始。输入适配器必须有
第一个参数，即默认为数据传入引擎后对应的数据流名
。
输出适配器配置与输入适配器配置相仿。输出适配器可
以没有参数。
7.3 configuration/db.properties
只在SODBASE CEP Server中用到，用于配置State只在SODBASE CEP Server中用到，用于配置State
Server数据库，嵌入式CEP或其它CEP部署方式用不到。State
server存储模型信息和一些元数据。若配置CEP
Server分布式集群，将Server实例的db.properties作相同配置
，即共享State Server。参数含义如下
db.type=数据库类型，默认使用本机的嵌入式derby数据库
。可选oracle,mssql, postgresql,mysql等
db.driverclass=JDBC 类
db.url=数据库URL地址
db.username=数据库用户名
db.password=数据库密码
实际配置请参考软件发行版本给出的模板，再模板基础
上修改。
               SODBASE产品使用手册
北京速德贝斯科技有限公司 www.sodbase.com