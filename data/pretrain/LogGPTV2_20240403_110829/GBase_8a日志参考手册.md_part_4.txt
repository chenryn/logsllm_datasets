    decompressed:
    0B, 0s.--总共解
    压了 0B数据，用时0s
    2012-12-27 18:34:43.359
    temp
    space IO stats:--查询过程中临时表空间使用情
    2012-12-27 18:34:43.359
    CB
    write( 0B, 0time, 0sec),
    read( 0B,
    0time, 0sec）--物化中间结果
    （读写大小，读写请求次数，读写花费时间）
    2012-12-27  18:34:43. 359   SRT write ( 0B, 0time, 0sec),   read (  0B,
    0time, 0sec)—   -排序中间结果                 
    2012-12-27  18:34:43.359    GDC write(  0B, 0time, 0sec),   read (  0B,
    0time, 0sec)—   -groupby distinct   中间结果            
    2012-12-27  18:34:43.359    MAT write(  57K,    12time, 0sec),  read(   432K,
    84time, 0sec)-  -join中间结果               
    2012-12-27  18:34:43.359                    
    登录后复制
## 资源监控部分介绍
    [M: 1. 45G,  27虬D: 633K] [DC: 19006, 3899]
    [M: 1. 45G, 41M,D:  633K]   [DC: 19500, 3901]
    [M: 1. 45G, 41M,D:  633K]   [DC: 19500, 3901]
    [M:1. 50G,  54M,D:  633K]   [DC: 19500, 4110]
    [M:1. 50G,  48M,D:  633K]   [DC: 19500, 4110]
    [M:1. 50G,  48M,D:  633K]   [DC: 19500, 4110]
    [M:1. 50G,  41M,D:  633K]   [DC: 19500, 4111]
    ［内存：数据堆，large堆，磁盘：临时表空间］［访问DC数：内存命中，磁盘访问］
    (1).数据堆：data heap的使用状况，全局状态
    (2). Large堆:算子buffer的使用情况，全局状态
    (3).临时表空间：session级，语句执行过程中占用的临时磁盘空间
    (4).内存中访问DC总数：session级，可以看出查询中处理的数据量语句 执行过程中，从内存中访问的DC总数
    (5).磁盘中访问DC总数：session级，可以看到在什么步聚引起的IO语 句执行过程中，从磁盘中访问的DC总数
    1.2 express. log(执行日志)
    默认情况下，只有执行过程中出现警告和错误才会输出到express. log文 件中。
    显示类似如下日志信息:
    2013-12-26 10:26:07. 478 Express Engine Started.
    2013-12-26 10:26:50. 976 Express Engine Shutdown.
    [RemoteLoad] Table :    . /ssbm/metadata/customer
    Commited.   一 gbloader 加载数据表 customer
    Commited.
    aborted: Process killed
    2013-12-27
    13:21:08.779
    Error: Process killed
    2014-01-02 17:30:31.531 Express Engine Started.
    2014-01-03 10:29:02.708 Query syntax not implemented in Express and it contains OLAP FUNC, but OLAP FUNC only supported by express engine. //express 引擎不支持 执行的sql
    2014-01-03 15:05:48.332 Express Engine Started.
    2014-01-03 15:18:47.109 Express Engine Started.
    1.3 system.log
    端口号5810被占用时日志信息如下:
    131226 10:26:07 [Note] ==================================
    131226 10:26:07
    [Note] Retrying bind on TCP/IP port 5810
    131226 10:26:08
    [Note] Retrying bind on TCP/IP port 5810
    131226 10:26:10 [Note]
    Retrying bind on TCP/IP port 5810
    131226 10:26:14 [Note]
    Retrying bind on TCP/IP port 5810
    131226 10:26:41
    [Note] Retrying bind on TCP/IP port 5810
    131226 10:26:50 [ERROR] Can't start server: Bind on TCP/IP port: Address already
    in use
    131226 10:26:50 [ERROR] Do you already have another gbased server running on port: 5810 ?
    131226 10:26:50 [ERROR] Aborting
    系统正常启动/关闭时的日志信息如下:
    140129 15:34:54
    [Note]
    140129 15:34:54
    [Note]
    Event Scheduler: Loaded 6 events
    140129 15:34:54
    [Note]
    Express is ready for connections.
    socket:
    '/home/davies/Gbase8a_exe_debug/opt_trunk_server_debug/gbase8a_IB/install/tmp/5
    810. sock' port: 5810 28679
    --gbased 正常启动
    140129
    15:35:08
    [Note]
    Got signal 15 to shutdown gbased
    140129
    15:35:08
    [Note]
    bin/gbased: Normal shutdown
    140129
    15:35:08
    [Note]
    Event Scheduler: Purging the queue. 6 events
    140129
    15:35:08
    [Note]
    bin/ gbased: Shutdown complete 一 gbased 正常关闭
    登录后复制
# 附录
示例：完整的trace日志信息。
    2012-12-27 18:34:20. 961    [M: 142M,   0B,D:   0B] [DC:    0,  0] Execution
    Plan:
    T:-1 = TABLE_ALIAS(T:0, "supplier:tpch/supplier")
    T:-2 = TMP_TABLE(T:-1, "supplier:tpch/supplier")
    T:-3 = TABLE_ALIAS(T:1, "lineitem:tpch/l1")
    T:-2.JOIN(T:-3,"lineitem:tpch/l1")
    T:-4 = TABLE_ALIAS(T:2,"orders:tpch/orders")
    T:-2.JOIN(T:-4,"orders:tpch/orders")
    T:-5 = TABLE_ALIAS(T:3, "nation:tpch/nation")
    T:-2. JOIN (T:-5, "nation:tpch/nation")
    LA:-2. 0 = CREATE_LA(T：-2,PHYS_COL(T：-1,A:1))
    A:-1 = T:-2.ADD_COLUMN(LA:-2.0,GROUP_BY,"s_name","ALL")
    A:-2 = T:-2.ADD_COLUMN(,COUNT,"numwait","ALL")
    LA:-2. 1 = CREATE_LA(T:-2, PHYS_COL (T: -2,A:-2))
    T:-2. ADD_ORDER(LA:-2. 1, DESC)
    LA:-2. 2 = CREATE_LA(T：-2,PHYS_COL(T：-2,A：-1))
    T:-2.ADD_ORDER(LA:-2.2,ASC)
    LA:-2.3 = CREATE_LA(T:-2,PHYS_COL(T:-1,A:0))
    LA:-2.4 = CREATE_LA(T:-2,PHYS_COL(T:-3,A:2))
    F:0 = CREATE_FILTER(T:-2,LA:-2.3,=,LA:-2.4,,WHERE)
    LA:-2.5 = CREATE_LA(T:-2,PHYS_COL(T:-4,A:0))
    LA:-2.6 = CREATE_LA(T:-2,PHYS_COL(T:-3,A:0))
    F:0 = AND(F:0,LA:-2.5,=,LA:-2.6,)
    LA:-2.7 = CREATE_LA(T:-2,PHYS_COL(T:-4,A:2))
    LA:-2.8 = CREATE_LA(T:-2,EXPR("F"))
    F:0 = AND(F:0,LA:-2.7,=,LA:-2.8,)
    LA:-2.9 = CREATE_LA(T:-2,PHYS_COL(T:-3,A:12))
    LA:-2.10 = CREATE_LA(T:-2,PHYS_COL(T:-3,A:11))
    F:0 = AND(F:0,LA:-2.9,>,LA:-2.10,)
    T:-6 = TABLE_ALIAS(T:1,"lineitem:tpch/l2")
    T:-7 = TMP_TABLE(T:-6,"lineitem:tpch/l2")
    LA：-7. 0 = CREATE_LA(T: -7, EXPR ("1"))
    A：-1 = T：-7.ADD_COLUMN(LA：-7. 0, LIST, "Not_used", "ALL")
    LA：-7. 1 = CREATE_LA(T：-7,PHYS_COL(T：-6,A:0))
    LA:-7. 2 = CREATE_LA(T:-7, EXPR("EXPRESS_FIELD(T：-3,A:0)"))
    F:1 = CREATE_FILTER(T：-7,LA：-7. 1, =,LA：-7. 2, ,WHERE)
    LA：-7. 3 = CREATE_LA(T: -7, PHYS_COL (T ：-6,A:2))
    LA：-7.4 = CREATE_LA(T：-7,EXPR("EXPRESS_FIELD(T：-3,A:2)"))
    F:1 = AND(F:1,LA：-7. 3,<>,LA：-7. 4, )
    T：-7.FILTER(F：1)
    T：-7.MODE (LIMIT, 0, 1)
    LA：-2. 11 = CREATE_LA(T：-2,SUBQUERY(T：-7))
    F:0 = AND(F:0,LA:-2. 11, EXISTS, , )
    T：-8 = TABLE_ALIAS(T:1, "lineitem:tpch/l3")
    T：-9 = TMP_TABLE(T：-8, "lineitem:tpch/l3")
    LA：-9. 0 = CREATE_LA (T: -9, EXPR (" 1"))
    A：-1 = T：-9.ADD_COLUMN(LA：-9. 0, LIST, "Not_used", "ALL")
    LA：-9. 1 = CREATE_LA(T: -9, PHYS_COL (T ：-8,A:0))
    LA：-9. 2 = CREATE_LA(T:-9, EXPR("EXPRESS_FIELD(T：-3,A:0)"))
    F:2 = CREATE_FILTER(T:-9, LA：-9. 1,=,LA：-9. 2, ,WHERE)
    LA：-9. 3 = CREATE_LA(T: -9, PHYS_COL (T：-8,A:2))
    LA：-9.4 = CREATE_LA(T: -9, EXPR ("EXPRESS_FIELD (T：-3,A:2)"))
    F:2 = AND(F:2,LA：-9. 3,<>,LA：-9. 4, )