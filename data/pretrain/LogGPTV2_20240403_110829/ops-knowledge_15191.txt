User: 用Ansible自动化工具编写一个Playbook来安装和配置MySQL数据库，并在多台主机上部署相同的配置。
Assistant: 以下是一个示例MySQL Playbook，用于安装和配置MySQL数据库，并在多个主机上部署相同的配置。

首先，需要在Inventory文件中定义所有MySQL主机。在这个例子中，我们使用了三台主机：mysql1、mysql2、mysql3。

```
[mysql]
mysql1
mysql2
mysql3
```

接下来，编写Playbook文件：

```
---
- name: Install and configure MySQL
  hosts: mysql
  become: true
  
  vars:
    mysql_root_password: YOUR_ROOT_PASSWORD_HERE

  tasks:
    # Install MySQL
    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present
    
    # Set the root password
    - name: Set MySQL root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        host: localhost
        login_user: root
        login_password: ''
    
    # Create a new user and database
    - name: Create MySQL user and database
      mysql_db:
        name: mydb
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
    
    # Configure MySQL
    - name: Configure MySQL
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: "^bind-address\s*=\s*127.0.0.1$"
        line: "bind-address = 0.0.0.0"
      notify: Restart MySQL
    
  handlers:
    # Restart MySQL after configuration changes
    - name: Restart MySQL
      systemd:
        name: mysql
        state: restarted
```

这个MySQL Playbook做了以下事情：

* 安装MySQL服务器。
* 设置MySQL root密码。
* 创建一个名为mydb的新用户和数据库。
* 将MySQL配置更改为允许远程连接。
* 重启MySQL服务以应用更改。

您可以编辑hosts文件并用你自己的服务器代替mysql1、mysql2、mysql3。然后，你可以使用以下命令运行这个Playbook：

```
ansible-playbook -i inventory.ini mysql.yml
```

运行该命令后，Ansible会在所有MySQL主机上安装MySQL并进行配置。您现在可以登录MySQL客户端并查看该服务器上是否创建了mydb数据库。