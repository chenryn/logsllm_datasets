## Page 438
### 避免匹配特定标签
只有当这些标签包含上述列出的属性时，才需要避免匹配到它们。例如：
- `[a-z]`：标签名称首字母必须是 a 到 z。
- `(?:[^>"']*)`：除了 `>`、`"` 或 `'` 之外的任意字符。
- `"[^"]*"`：双引号引起来的属性值。
- `'[']* '`：单引号引起来的属性值。
- `)*>`：结束标签。

**正则选项**：不区分大小写、宽松排列  
**正则流派**：.NET、Java、PCRE、Perl、Python、Ruby

使用如此复杂的正则表达式来解决问题可能已经接近极限。如果规则更加复杂，建议参考实例 3.11 或 3.16 中的方法，根据标签名称、所包含的属性或其他所需信息进行处理。

**参见**
- 实例 8.1 讲解了如何匹配所有 XML 风格的标签，并讨论了权衡方法，包括容忍非法标记。
- 实例 8.2 与本实例相反，讲解如何匹配指定标签列表中的所有标签。

## 8.4 匹配 XML 名称
### 问题描述
你希望检查一个字符串是否是一个合法的 XML 名称。XML 提供了精确的命名规则，适用于元素、属性和实体名称、处理指令目标等。合法名称的组成规则如下：
- 必须以字母、下划线或冒号开头。
- 后续字符可以是字母、数字、下划线、冒号、连字符和点号。

实际上，允许出现的字符取决于所使用的 XML 版本。如果需要更精确的匹配，可以将合法名称的模式插入到其他处理 XML 的正则表达式中。

**合法名称示例**：
- `thing`
- `_thing_2_`
- `:PoccnicKne-Bemb`
- `fantastic4:the.thing`
- `日本の物`

**非法名称示例**：
- `thing!`
- `thing with spaces`
- `.thing.with.a.dot.in.front`
- `-thingamajig`
- `2nd_thing`

### 解决方案
XML 名称中的字符集合分为两部分：一部分用于第一个字符，另一部分用于后续字符。XML 1.0 第 4 版（及更高版本）和 XML 1.1 及 1.0 第 5 版在允许的字符列表上有很大差异。为了简洁起见，本实例中提到的 XML 1.0 指的是第 1 至 4 版，而 XML 1.1 包括了 XML 1.0 第 5 版的规则。

**提示**：本实例中的正则表达式使用了字符串开始和结束定位符（`\A` 和 `\z`）。如果要在更长的正则表达式中嵌入这些模式，请记得去掉定位符。关于定位符的详细信息，请参考实例 2.5。

**XML 1.0 名称（近似方案）**：
```regex
\A[:_\pL\p{Lu}\p{Lt}\p{Lo}\p{Nl}][:_\-.\p{L}\p{M}\p{Nd}\p{Nl}]*\z
```
**正则选项**：无  
**正则流派**：.NET、Java、PCRE、Perl、Ruby 1.9

**注意**：PCRE 必须使用 UTF-8 支持编译才能正确执行。在 PHP 中，需要使用模式修饰符 `/u` 打开 UTF-8 支持。JavaScript、Python 和 Ruby 1.8 不支持 Unicode 属性。

**XML 1.1 名称（精确方案）**：
```regex
\A[\p{IsXMLNameStart}-\p{Cf}][\p{IsXMLNameChar}-\p{Cf}]*\z
```
**正则选项**：无  
**正则流派**：.NET、Java、PCRE、Perl、Ruby 1.9

### 讨论
本实例的目标是提供关于标签和属性名称匹配规则的详细讨论。在书中其他地方，我们通常使用更简单且不太精确的模式，主要是为了可读性和效率。

#### XML 1.0 名称
XML 1.0 规范明确列出了允许使用的字符。名称首字符可以是冒号、下划线或以下 Unicode 类别中的字符：
- 小写字母 (Ll)
- 大写字母 (Lu)
- 标题大写 (Lt)
- 不区分大小写的字母 (Lo)
- 字母数字 (Nl)

后续字符除了上述字符外，还可以包括连字符、点号和以下类别的字符：
- 标记 (M)
- 修饰符字母 (Lm)
- 十进制数字 (Nd)

**简化版本**：
- **Perl 和 PCRE**:
  ```regex
  \A[:_\p{L&}\p{Lo}\p{Nl}][:_\.\p{L}\p{M}\p{Nd}\p{Nl}]*\z
  ```
- **.NET**:
  ```regex
  \A[:_\p{L}\p{Nl}[\p{Lm}]] [ :_\- .\p{L}\p{M}\p{Nd}\p{Nl}]*\z
  ```
- **Java**:
  ```regex
  \A[:_\p{L}\p{Nl}&&[\p{Lm}]] [ :_\- .\p{L}\p{M}\p{Nd}\p{Nl}]*\z
  ```

#### XML 1.1 名称
XML 1.1 和 1.0 第 5 版采用了黑名单策略，允许未明确禁止的内容，提高了未来兼容性。因此，XML 1.1 名称的正则表达式被标记为精确方案，而 XML 1.0 的正则表达式是近似方案。

### 变体
在某些实例中（如实例 8.1），处理 XML 名称的模式片段要么几乎不做修改，要么仅做少量调整以适应具体需求。