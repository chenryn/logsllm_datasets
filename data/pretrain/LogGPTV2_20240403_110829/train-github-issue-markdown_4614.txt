For the VS Code API tests I have a clean up function that signals that it is
done when all editors are closed. Currently the solution is hacky, it needs to
install a setInterval to periodically check on the
`vscode.window.visibleTextEditors` property to eventually become 0 (see
https://github.com/Microsoft/vscode/blob/master/extensions/vscode-api-
tests/src/utils.ts#L52).
The issue is that the `window.onDidChangeActiveTextEditor` event is not good
enough for testing on the visible text editors as shown by the following test:
    test('visibleTextEditors', () => {
        return workspace.openTextDocument(join(workspace.rootPath, './far.js')).then(doc => {
            return window.showTextDocument(doc).then((editor) => {
                return new Promise((c, e) => {
                    const listener = window.onDidChangeActiveTextEditor(d => {
                        console.log('editor is null?: ' + !d);
                        if (window.visibleTextEditors.length > 0) {
                            console.log('visibleTextEditors count is: ' + window.visibleTextEditors.length);
                            return;
                        }
                        listener.dispose();
                        c();
                    });
                    commands.executeCommand('workbench.action.closeAllEditors').then(null, e);
                });
            });
        });
    });
The value passed in from the event is null as expected because I am running
the close all editors action. However, `window.visibleTextEditors.length` is
still 1 at that point.