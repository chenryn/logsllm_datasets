4.2 Data Plane Packet Encapsulation
Although a variety of tunneling techniques exist, we focus our
discussion on IP-in-IP encapsulation. In this approach, the response
from the downstream AS includes an IP address corresponding to
the egress point of the tunnel. To divert a packet into the tunnel, the
upstream AS encapsulates the IP packet destined to this IP address.
MIRO must ensure that the upstream AS knows how to reach this
IP address, even if the downstream AS is several AS hops away.
In addition, we need to determine which IP address MIRO should
use, and ensure that the egress router is equipped to decapsulate the
packets and direct them to the next AS in the path. We have iden-
tiﬁed two main options for which IP address the downstream AS
should provide, with different advantages and disadvantages:
IP Address of the Egress Links or Egress Routers: When the IP
address of egress links are used, the downstream AS ﬁrst labels
each egress link with a different reserved IP address, then adver-
tises these addresses to the upstream AS. For example, in Figure 4,
the links R2→provider 1, R2→provider 2, and R3→provider 2 are
given IP addresses 12.34.56.101, 12.34.56.102, and 12.34.56.103,
respectively, then 12.34.56.102 and 12.34.56.103 are advertised to
the upstream if provider 2 is the selected next-hop AS. Since the
IP address uniquely identiﬁes the egress link, the packet does not
need to carry any separate identiﬁer for the tunnel. Alternatively,
the downstream AS can advertise the IP addresses of egress routers.
Because there are fewer egress routers than egress links, this would
consume fewer IP addresses, but requires the data packets to carry
a separate tunnel identiﬁer so the egress router knows which egress
2This functionality, known as “penultimate hop popping,” is imple-
mented in Multi-Protocol Label Switching (MPLS) [17], a tunnel-
ing technology deployed in many backbone networks.
link to use. For example, AS X in Figure 4 could advertise 12.34.56.2
and 12.34.56.3 if provider 2 is the next hop AS, and advertise
12.34.56.3 if provider 1 is selected instead. R2 would check tunnel
id to see if link to provider 1 or that to provider 2 should be picked.
One Reserved IP Address for All Tunnels: The downstream AS
reserves one special IP address for all routing tunnels. At each
ingress router, the packet destined to this special IP address is re-
placed with the correct egress router IP. For example, AS X in Fig-
ure 4 chooses 12.34.56.100 as the special IP and that IP is the desti-
nation for any packet belonging to a tunnel in X. Also, each ingress
router grabs a mapping table of (tunnel id, set of egress router IP),
for example, (tunnel 7, {12.34.56.2, 12.34.56.3}) will be installed
on R1 if tunnel 7 uses the AS X→provider 2→destination route.
Then R1 learns from the intradomain routing protocol that R2 is
the closest one in the set, therefore R1 sets 12.34.56.2 as the cho-
sen IP. When R1 sees a packet destined to 12.34.56.100, it checks
the tunnel id in the packet, ﬁnds that the id is 7, then retrieves
12.34.56.2 from its lookup table. Finally R1 replaces 12.34.56.100
with 12.34.56.2 and forwards the packet to R2.
By using one IP address for all tunnels, the downstream AS
does not reveal any internal topology information to the upstream.
Therefore the ingress routers in the downstream AS could freely
adjust which egress router or link they use. However, this method
requires packet rewriting and therefore data-plane modiﬁcations at
all ingress routers.
In contrast, by exposing IP addresses corre-
sponding to egress routers or egress links, the internal topology
is partially exposed to the upstream, so changes in internal topol-
ogy might lead to tunnel destruction or ineffective packet delivery.
Moreover, it poses security challenges as anyone could send pack-
ets to these addresses. Advanced packet ﬁlters or network capabil-
ities [19] could be used to prevent this problem.
4.3 Control Plane Tunnel Management
The control plane manages the creation and destruction of tun-
nels, based on negotiations between pairs of ASes. Figure 3 in
Section 3 presents an example where AS A launches a request to
AS B, specifying the destination preﬁx and (optionally) the desired
properties of the alternate routes. Upon receiving the request, AS
B advertises the subset of candidate routes that are consistent with
its own local policy. Then, AS A selects a candidate route and per-
forms a handshake with AS B to trigger creation of the tunnel. AS
B replies with a tunnel identiﬁer (represented by the number “7” in
the ﬁgure), or the IP address of the tunnel end-point, and the ASes
update tunnel tables accordingly.
A tunnel remains active until one AS tears it down, either ac-
tively or passively. AS A will tear down the tunnel if the path AB
changes (e.g., to traverse an intermediate AS) or fails, and AS B
will tear down the tunnel if the path BCF to the destination preﬁx
fails. The ASes can observe these changes in the BGP update mes-
sages or session failures. However, when A can no longer reach
B at all, the “active tunnel tear-down” message itself may not be
able to reach AS B any longer. To avoid leaving idle tunnels in the
downstream ASes, AS A and B should adopt a soft-state protocol,
where they exchange “keep-alive” messages in the MIRO control
plane, and destroy tunnels when the heartbeat timer expires. These
“keep-alive” messages could be directed to a specialized central
server (such as the RCP) in each AS; that server will monitor the
health for all routing tunnels and actively tear down unused ones.
5. PERFORMANCE EVALUATION
In this section, we evaluate the effectiveness of MIRO based on
an AS-level topology, annotated with the business relationships be-
tween neighboring ASes. After describing our evaluation method-
2000
2003
2005
1.0000
0.1000
0.0100
0.0010
0.0001
 1
 10
 100
Node Degree
 1000
 10000
 1000
 100
 10
r
i
a
P
r
e
P
s
h
t
a
P
f
o
r
e
b
m
u
N
t
s
e
g
r
a
L
 1
 0
2005 1 hop respecting strict
2005 1 hop respecting export
2005 1 hop violating export
2005 path respecting strict
2005 path respecting export
2005 path violating export
 20
 40
 60
 80
 100
Percentage of Node Pairs
Figure 5: Node distribution
Figure 6: Number of available routes
ology, we show that MIRO could expose much of the path diversity
in the AS-level topology. However, demonstrating whether MIRO
provides enough ﬂexibility requires evaluating the protocol with a
particular policy objective in mind. We focus most of our evalu-
ation on the scenario where the source AS wishes to avoid a par-
ticular intermediate AS for security or performance reasons. We
use these experiments to demonstrate that MIRO is ﬂexible and ef-
ﬁcient, and offers substantial beneﬁts to early adopters. We also
brieﬂy consider a second application where a multi-homed stub AS
needs to negotiate with upstream ASes to balance load across mul-
tiple incoming links.
5.1 Evaluation Methodology
Ideally, we would evaluate MIRO by deploying the new protocol
in the Internet and measuring the results. Since this is not possi-
ble, we simulate MIRO operating in an environment as close to the
current Internet as possible. Evaluating on streams of BGP update
messages is not sufﬁcient, both because of the limited number of
data feeds available and the need to know what routing policies to
model. Instead, we evaluate MIRO on the AS-level topology, as-
suming that each AS selects and exports routes based on the busi-
ness relationships with its neighbors [20]. The local preferences of
the routes are decided solely based on AS relationships, and each
AS is treated as one node.
We draw on the results of previous work on inferring AS rela-
tionships [11, 12], applied to the BGP tables provided by Route-
Views [8].
Invariably, RouteViews does not provide a complete
view of the AS-level topology, and even the best inference algo-
rithms are imperfect, but we believe this is the most appropriate
way to evaluate the effectiveness of MIRO under realistic conﬁg-
urations. Our main results depend primarily on the typical AS-
path lengths and the small number of high-degree nodes, which
are viewed as fundamental properties of the AS-level topology. As
such, we believe our main conclusions still hold, despite the imper-
fections in the measurement data.
We evaluate MIRO under three instances of the AS-level topol-
ogy, from 2000, 2003, and 2005, to study the effects of the increas-
ing size and connectivity of the Internet on multi-path routing. To
infer the relationships between ASes, we apply the algorithms pre-
sented by Gao [11] and Agarwal [12], but only present results for
the algorithm in [11] due to space limitation; a previous study sug-
gested that the Gao algorithm produces more accurate inference
results [21]. Our experiments with the Agarwal inferences show
similar trends. The key characteristics of the AS topology and
business relationships are summarized in Table 1. Figure 5 plots
the distribution of node degrees for the three years for the Gao al-
gorithm. The graph is consistent with previous studies that show
a wide variance in node degrees, where a small number of nodes
have a large number of neighbors; these nodes correspond to the
tier-1 ASes that form the core of the Internet.
After inferring AS relationships, we apply conventional policies
for selecting and exporting routes to construct routing tables, where
each AS originates a single preﬁx. This represents the base scenario
of single-path routing based on the existing BGP protocol. To eval-
uate MIRO, we consider three variations on how a responding AS
decides which alternate routes to announce upon request:
• Strict Policy (/s): The responding AS only announces alter-
nate routes with the same local preference as the original
default route. For example, if an AS originally advertises
a peer-learned route to its neighbors, the AS would not an-
nounce any alternate routes learned from a provider. We as-
sume that the AS follows conventional export policies. For
example, an AS would not announce a route learned from
one peer to another peer.
• Respect Export Policy (/e): The responding AS announces
all alternate routes that are consistent with the export policy.
For example, an AS would announce all alternate routes to
its customers, and all customer-learned routes to its peers and
providers.
• Most Flexible Policy (/a): The responding AS announces all
alternate routes to any neighbor, independent of the business
relationships.
The last scenario, though arguably unreasonable in practice, pro-
vides a basis for evaluating how well MIRO is able to expose the
underlying path diversity in the Internet.
5.2 Exposing the Underlying Path Diversity
In our ﬁrst experiment, we measure the path diversity under the
three scenarios, and compare with conventional BGP and source
routing. We ﬁrst compute the number of candidate routes between
each (source, destination) AS pair, and then sort the totals and plot
the distribution in Figure 6. The graph shows results for two sce-
narios: (i) each source AS negotiates with any of its immediate
neighbors (i.e., the “1-hop” set) and (ii) each source AS negoti-
ates with any ASes on the default BGP path to destination (i.e., the
“path” set).
Of the 300 million (source, destination) AS pairs we analyzed,
only 5% have no alternate paths in the worst case (i.e., the (5%,
1) point on the “1-hop strict policy” curve). The number of paths
Name
Gao 2000
Gao 2003
Gao 2005
Date
# of Nodes
# of Edges
P/C links
Peering links
Sibling links
10/1/2000
10/8/2003
10/8/2005
8829
16130
20930
17793
34231
44998
16531
30649
40558
1031
3062
3753
231
520
687
Single Multi/s Multi/e Multi/a
27.8% 65.4% 72.9% 75.3%
31.2% 67.0% 74.6% 76.6%
29.5% 67.8% 73.7% 76.0%
Table 1: Attributes of the data sets
Policy
strict/s
export/e
ﬂexible/a
Source
89.5%
90.4%
91.1%
Name
2000
2003
2005
Table 2: Comparing the routing policies
grows exponentially in the “path” curves, and it increases pretty
quickly and stays relatively ﬂat in the “1-hop” curves. For both
sets of data, more than half of the AS pairs can ﬁnd at least tens
of alternate paths, and a quarter of the AS pairs have at least one
hundred alternate paths. Moreover, the “respect export policy” and
the “most ﬂexible policy” curves are similar for both sets of data,
meaning that we can reap most of the beneﬁts of multipath routing
without violating the export policy. The “strict policy” line is a bit
more restrictive but still performs quite well.
5.3 Avoiding an AS in Default Path
Counting the number of paths is not sufﬁcient to evaluate the
effectiveness of MIRO, since many of the paths may share some
nodes or edges in common. Next, we evaluate the ability of MIRO
to satisfy a speciﬁc policy objective: avoiding an intermediate AS
known to have security or performance problems. We calculate the
success rate for every (source AS, destination AS, and AS-to-avoid)
triple. We deliberately exclude cases where the AS-to-avoid is an
immediate neighbor of the source AS. In these cases, avoiding the
AS would require the source to select a path from another immedi-
ate AS anyway. In addition, an AS is not likely to distrust one of
its own immediate neighbors.
5.3.1 Success rate of different policies
Table 2 presents the cumulative percentage of the success rate for
each policy. As expected, the table shows that single-path, multi-
path, and source routing policies provide increasing degrees of ﬂex-
ibility. In the single-path case, the source AS can only satisfy its
policy objective by selecting a route announced by another imme-
diate neighbor.
In the multi-path case, we allow the source AS
to use the routes announced by BGP or establish a routing tunnel
with another AS. Although source routing can select any path, the