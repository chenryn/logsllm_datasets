Certainly! Here is a more polished and professional version of your text:

---

We have an in-house developed network-based application that is built using Python. This application provides a command-line environment similar to the standard Python interpreter. Additionally, I have a local Python installation on my machine. For simple Python tasks, I sometimes prefer to use my local Python installation.

Is it possible to set a different `PYSTARTUP` environment variable for each Python installation?

**Solution:**

Yes, you can set a different `PYSTARTUP` environment variable for each Python installation. Here are two methods to achieve this:

1. **Export the `PYSTARTUP` Variable in the Shell:**
   You can set the `PYSTARTUP` environment variable in your shell session before running your script. For example:
   ```sh
   export PYSTARTUP="path/to/your/startup_script.py"
   python your_script.py
   ```

2. **Set the `PYSTARTUP` Variable Inline with the Command:**
   You can also set the `PYSTARTUP` environment variable directly in front of the command you want to run. For example:
   ```sh
   PYSTARTUP="path/to/your/startup_script.py" python your_script.py
   ```

By using either of these methods, you can ensure that each Python installation uses a different `PYSTARTUP` file as needed.

---