## 其他方法  
1\. hook, 用在执行utility命令时，目前已经有插件实现了这个功能，很好用的。  
图例  
![pic](20150429_01_pic_001.png)    
钩子代码：  
src/backend/tcop/utility.c  
```  
  70 /* Hook for plugins to get control in ProcessUtility() */  
  71 ProcessUtility_hook_type ProcessUtility_hook = NULL;  
 273 /*  
 274  * ProcessUtility  
 275  *      general utility function invoker  
 276  *  
 277  *  parsetree: the parse tree for the utility statement  
 278  *  queryString: original source text of command  
 279  *  context: identifies source of statement (toplevel client command,  
 280  *      non-toplevel client command, subcommand of a larger utility command)  
 281  *  params: parameters to use during execution  
 282  *  dest: where to send results  
 283  *  completionTag: points to a buffer of size COMPLETION_TAG_BUFSIZE  
 284  *      in which to store a command completion status string.  
 285  *  
 286  * Notes: as of PG 8.4, caller MUST supply a queryString; it is not  
 287  * allowed anymore to pass NULL.  (If you really don't have source text,  
 288  * you can pass a constant string, perhaps "(query not available)".)  
 289  *  
 290  * completionTag is only set nonempty if we want to return a nondefault status.  
 291  *  
 292  * completionTag may be NULL if caller doesn't want a status string.  
 293  */  
 294 void  
 295 ProcessUtility(Node *parsetree,  
 296                const char *queryString,  
 297                ProcessUtilityContext context,  
 298                ParamListInfo params,  
 299                DestReceiver *dest,  
 300                char *completionTag)  
 301 {  
 302     Assert(queryString != NULL);    /* required as of 8.4 */  
 303   
 304     /*  
 305      * We provide a function hook variable that lets loadable plugins get  
 306      * control when ProcessUtility is called.  Such a plugin would normally  
 307      * call standard_ProcessUtility().  
 308      */  
 309     if (ProcessUtility_hook)  
 310         (*ProcessUtility_hook) (parsetree, queryString,  
 311                                 context, params,  
 312                                 dest, completionTag);  
 313     else  
 314         standard_ProcessUtility(parsetree, queryString,  
 315                                 context, params,  
 316                                 dest, completionTag);  
 317 }  
```  
利用这个钩子的例子：  
https://github.com/petere/pgtrashcan  
[PostgreSQL pgtrashcan use hook _PG_init catch feature like Oracle's recycle bin](20140403_01.md)    
钩子例子截取自pgtrashcan：  
```  
#if PG_VERSION_NUM >= 90300  
static void  
pgtrashcan_ProcessUtility(Node *parsetree,  
						  const char *queryString,  
						  ProcessUtilityContext context,  
						  ParamListInfo params,  
						  DestReceiver *dest,  
						  char *completionTag)  
#else  
static void  
pgtrashcan_ProcessUtility(Node *parsetree,  
						  const char *queryString,  
						  ParamListInfo params,  
						  bool isTopLevel,  
						  DestReceiver *dest,  
						  char *completionTag)  
#endif  
{  
	if (nodeTag(parsetree) == T_DropStmt)  
	{  
		DropStmt *stmt = (DropStmt *) parsetree;  
		if (stmt->removeType == OBJECT_TABLE)  
		{  
			RangeVar *r;  
			AlterObjectSchemaStmt *newstmt = makeNode(AlterObjectSchemaStmt);  
			newstmt->objectType = stmt->removeType;  
			newstmt->newschema = pstrdup(trashcan_nspname);   // 重设SCHEMA  
#if PG_VERSION_NUM >= 90200  
			newstmt->missing_ok = stmt->missing_ok;  
#endif  
			if (stmt->behavior != DROP_RESTRICT)  
			ereport(ERROR,  
					(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),  
					 errmsg("trash can does not support DROP CASCADE")));  
			r = makeRangeVarFromAnyName(linitial(stmt->objects));  
			r->inhOpt = INH_YES;  
			r->alias = NULL;  
			newstmt->relation = r;  
			if (!r->schemaname || strcmp(r->schemaname, trashcan_nspname) != 0)  
			{  
				parsetree = (Node *) newstmt;  
				create_trashcan_schema();  
			}  
		}  
	}  
#if PG_VERSION_NUM >= 90300  
	(*prev_ProcessUtility) (parsetree, queryString,	context, params, dest, completionTag);   
        // 传送至PG ProcessUtility@src/backend/tcop/utility.c  
#else  
	(*prev_ProcessUtility) (parsetree, queryString,	params, isTopLevel, dest, completionTag);  
#endif  
}  
```  
## 参考  
1\. http://www.postgresql.org/docs/devel/static/functions-event-triggers.html  
2\. [《PostgreSQL 回收站功能 - 基于HOOK的recycle bin pgtrashcan》](../201404/20140403_01.md)     
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")