(cid:2)
(cid:2)
Fig. 9: View change for Marlin.
thus additionally track ranks of these blocks to trivially handle
the "forking" issue in the following prepare phase.
Happy path in view change. So far we have described the
protocol where the pre-prepare phase is needed for a three-
phase view change. There is, however, a happy path such that
the pre-prepare phase can be skipped: if the new leader lv
receives n − f VIEW-CHANGE messages with the same lb,
lv can combine the partial signatures into a prepareQC and
directly switch to the prepare phase. Hence, the view change
in Marlin may have two or three phases.
Chained Marlin. As in HotStuff and all its descendants,
Marlin fully supports the chaining (pipelining) mode. Note that
no new block is proposed in the prepare phase immediately
after the pre-prepare phase in an unhappy view change. The
feature happens to be similar to Wendy.
D. Proof of Correctness
We provide a proof of correctness for Marlin assuming the
optimal resilience of n = 3f +1. For safety, We ﬁrst prove that
Marlin is safe within a view and across views. For liveness,
we prove that Marlin achieves liveness after GST.
Lemma 1. Let b1 and b2 be two blocks proposed in view v
(cid:2)
such that the view of the parent block of b1 (denoted b
1) and
(cid:2)
2) are lower than
the view of the parent block of b2 (denoted b
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)(cid:2) is lower than v and b
). As theprepareQCs for b1, b2, and b
v. If theprepareQCs for b1 and b2 are both formed in view
v, then b1 = b2 and prepareQC for b1 is the prepareQC
with lowest height formed in view v.
(cid:2)(cid:2) be the block with the lowest height for which a
Proof. Let b
(cid:2)(cid:2) is
prepareQC was formed in view v. If the parent block of b
proposed in view v, b
.justif y should be a prepareQC for its
(cid:2)(cid:2). Thus, the view
parent block, contradicting the deﬁnition of b
.justif y is
of the parent block of b
formed in a view lower than v. Hence, rank(b1) = rank(b2) =
(cid:2)(cid:2) are all formed
rank(b
in view v, at least a correct replica has voted for b1, b2, and
(cid:2)(cid:2) in the prepare phase. As a correct replica never votes for
b
more than one blocks with the same rank in the prepare phase
within a view, it must hold that b1 = b2 = b. (cid:3)
Lemma 2. For any two prepareQCs qc1, qc2, let b1 and b2
be block(qc1) and block(qc2), respectively. If b1 is conﬂicting
with b2, then qc1.view (cid:6)= qc2.view.
Proof. Assume,
that qc1.view =
qc2.view = v. As a valid QC consists of 2f + 1 matching
votes, at least a correct replica must have voted for both
block(qc1) and block(qc2) in view v. We consider two cases:
1) b1.height = b2.height. At least one correct replica must
have voted for prepareQC for both blocks with the same
rank, contradicting our protocol speciﬁcation.
towards a contradiction,
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:24:47 UTC from IEEE Xplore.  Restrictions apply. 
61
(cid:6)= b2.height. We
(cid:2)
(cid:2)
2)
(v1  b2.height. Let b
(cid:2)
lowest height on the branch led by b1 such that b
1.view =
(cid:2)
2 for b2. Clearly,
v. Similarly, we deﬁne such a block b
2.height ≤ b2.height. Then the prepareQCs for b
(cid:2)
(cid:2)
1 and
b
(cid:2)
(cid:2)
2 are formed in view v and the parent blocks of b
1 and
b
(cid:2)
(cid:2)
(cid:2)
2 are proposed before view v. By Lemma 1, b
2.
1 = b
b
∗
Hence, b
1 be the block on the
∗
1.height = b2.height. Thus,
branch led by b1 such that b
1.height ≥ b
1 (cid:6)= b2. So b
∗
(cid:2)
∗
∗
1.view = v and
1.height and b
b
∗
1 and b2 in the
at least one correct replica has voted both b
∗
1 and b2 have the same rank, it
prepare phase in view v. Asb
must hold b
Theorem 1. (Safety) If b1 and b2 are conﬂicting blocks, then
they cannot be both committed, each by a correct replica.
that both b1 and b2 are
Proof. Assume, on the contrary,
committed,
i.e., a commitQC has been formed for each
block. Let v1 and v2 be b1.view and b2.view, respectively.
By Lemma 2, v1 (cid:6)= v2. W.l.o.g., we assume v1  v) is an
or prepareQC formed in view v
extension of block(qc).
a
Proof. Let
(cid:2) for
pre-prepareQC or prepareQC qc
(cid:2)(cid:2) denote the parent
block b
(cid:2). Since f +1 correct replicas has set their lockedQC
block of b
to qc in view v, one of these correct replicas, say, pi, must
(cid:2). Let qcl be the lockedQC of
have sent a message for qc
(cid:2) in the pre-prepare or the prepare phase.
pi when pi voted for b
Note qcl is a prepareQC. Since pi only updates its lockedQC
with a QC with a higher rank, rank(qcl) ≥ rank(qc).
(cid:2), starting
We prove the lemma by induction over the view v
from view v + 1.
(cid:2) is a valid pre-prepareQC formed in
Base case: Suppose qc
view v + 1. It holds that b
.view < v + 1, qcl.view = v, and
qcl.height ≥ qc.height. From Lemma 2, block(qcl) does not
conﬂict with b, soblock( qcl) is b or an extension of b. We
(cid:2) is a virtual block.
consider two cases: b
(cid:2)
(cid:2) is a normal block, then b
.justif y contains a QC
(cid:2)(cid:2). Since pi has voted for b
(cid:2), one of the following two
) ≥ rank(qcl) (Case
.view = v,
block(qc). Assume
b
(cid:2) is conﬂicting with b. Let b
(cid:2) and b
qc
conditions must be satisﬁed:
exists
(cid:2) formed in view v
(cid:2) is a normal block; b
.view < v + 1 and rank(qc
R1). In this situation, type(qc
1) If b
(cid:2)(cid:2) for b
• qc
(cid:2)(cid:2)
(cid:2) (such that v
) = PREPARE, qc
(cid:2) for b
(v1 < v
there
be
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)(cid:2)
and qc
extension of b. Thus, b
• b
(cid:2)(cid:2)
.height ≥ qcl.height. From Lemma 2, b
(cid:2) must be an extension of b.
= block(qcl) (Case R3). In this situation, b
(cid:2)(cid:2) is b or an
(cid:2) must be
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)(cid:2)
• b
(cid:2)(cid:2)
). Since qc
Either way, b
2) If b
(cid:2)(cid:2), such that vc
an extension of b, asblock( qcl) is b or an extension of b.
(cid:2) cannot conﬂict with b, a contradiction.
.height ≥ qc
.view < v + 1 and rank(vc
Either way, b
2) If b
.view < v + k and rank(qc
1) If b
(cid:2)(cid:2) for b
• qc
(cid:2)(cid:2)
(cid:2) must be an extension of b.
= block(qcl) (Case R3). In this situation, b
for b
By Lemma 2, b
Suppose qc
qc
conditions must be satisﬁed:
(cid:2) cannot conﬂict with b, a contradiction.
By Lemma 2 and the inductive hypothesis, b
extension of b. Therefore, b
(cid:2) is a virtual block, then there exists a prepareQC vc
(cid:2)
) ≥ rank(qcl).
(cid:2)(cid:2) must be b or an extension of b, contradiction.
(cid:2)(cid:2)
(cid:2) a prepareQC formed in view v + 1. Let qc
denote the prepareQC with the lowest height formed in view
) is broadcast in PREPARE message,
v+1. Then when block(qc
(cid:2)(cid:2)
a valid pre-prepareQC is provided. Therefore, block(qc
)
(cid:2)
) cannot be
is an extension of b. By Lemma 2, block(qc
(cid:2)(cid:2)
.height,
conﬂicting with block(qc
(cid:2) must be an extension of b, a contradiction.
b
(cid:2) from
Inductive case: Assume this property holds for view v
v to v + k− 1 for some k ≥ 1. We prove that it holds for v
=
(cid:2) is a valid pre-prepareQC formed in view
v + k. Suppose qc
v + k. According to Lemma 2 and the inductive hypothesis,
block(qcl) is b or an extension of b. We distinguish two cases:
(cid:2)
(cid:2) is a normal block, then b
.justif y contains a QC
(cid:2), one of the following two
(cid:2)(cid:2). Since pi has voted for b
) ≥ rank(qcl) (Case R1)
(cid:2)(cid:2)
is b or an
(cid:2) must be
an extension of b, because block(qcl) is b or extension of b.
(cid:2) is a virtual block, then there exists a prepareQC vc
(cid:2)
) ≥ rank(qcl).
(cid:2)(cid:2) must be
(cid:2) is a prepareQC formed in view v + k.
(cid:2)(cid:2) be the prepareQC with the lowest height formed in
Let qc
) must
view v +k. Then a valid pre-prepareQC for block(qc
have been formed. Thus, block(qc
) is an extension of b. From
(cid:2) must be an extension of b, contradiction. (cid:3) (cid:4)
Lemma 2, b
Lemma 4. In view change, one of the following must hold
for highQCv received by the leader: 1) highQCv is a
prepareQC; 2)highQC v contains one pre-prepareQC; 3)
highQCv contains two pre-prepareQCs with the same rank.
Proof. First note that highQCv contains at least one QC that
is either a pre-prepareQC or a prepareQC. If a prepareQC
qc is included in highQCv, then due to Lemma 2, highQCv
contains qc only. Hence, highQCv is a prepareQC (Case 1).
then
highQCv contains one pre-prepareQC (Case 2), or more
pre-prepareQCs, in which case these pre-prepareQCs are
QCs formed in the same view. Since correct replicas vote
for at most two blocks in the pre-prepare phase, at most
two pre-prepareQCs with the same rank can be formed
within a view. In this case, highQCv contains at most two
pre-prepareQCs of the same rank (Case 3). (cid:3)
for b
Again, by Lemma 2 and the inductive hypothesis, b
b or an extension of b, contradiction.
(cid:2)
.view < v + k and rank(vc
included in highQCv,
If no prepareQC is
(cid:2)(cid:2) such that vc
Now we assume qc
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:24:47 UTC from IEEE Xplore.  Restrictions apply. 
62