（1）算法定义：通过对大量现网各类场景真实数据特征的分析，并参考开源算法，自研了OCDT（Outlier
Change Discordant on
Timeseries）算法，在满足准确率的同时，可以很好的保障时效性。
（2）应用场景：通过分析历史数据特征，自动划分周期型、阶梯型和波动型等不同数据类型，根据数据的周期、趋势等特征，定义为三种异常点检测方法：离群点、波动点和不一致点，不同数据波形可以根据场景需要对多种异常点检测方法任意组合，进行综合检测。
（3）对应场景：Timesten故障预测。
## 3.3 时序分析 
### 3.3.1 ARMA 预测模型算法
（1）算法定义： ARMA 模型是经典的预测模型，有着成熟的理论基础。
（2）应用场景：条件也比较严格，就是要求时间序列是平稳的。自回归模型描述当前值与历史值之间的关系，用变量自身的历史时间数据对自身进行预测。自回归模型必须满足平稳性的要求。例如：主板温度、机器震动曲线趋势预测等。
（3）对应场景：数据库异常 sql 的检测、REDIS 异常检测。
### 3.3.2 时序预测算法------岭回归 
（1）算法定义：岭回归算法用于共线性数据分析的有偏估计回归方法，
实质上是一种改良的最小二乘估计法。
（2）应用场景：适用于时间序列中缺失部分时间段信息的案例情况，往往用于流量检测分析，或接口异常检测等场景。
（3）对应场景：服务接口异常检测、智能策略匹配自愈、服务器硬盘风险监测、云上应用瓶颈分析、故障处理全流程联动。
### 3.3.3 S-H-ESD 算法 
（1）算法定义：时间序列异常检测算法，将时间序列数据分解为趋势分量、周期分量和余项分量，将
ESD 运用于 STL 分解后的余项分量中，即可得到时间序列上的异常点，S-H-ESD
采用了更具鲁棒性的中位数与绝对中位差，能很好地捕获到部分异常点。
（2）应用场景：一般可用于时序性指标数据的检测分析，常用于时序指标异常检测分析的场景。
（3）对应场景：MQ 异常检测。
### 3.3.4 Prophet 算法 
（1）算法定义：时间序列预测算法，通过节点间的历史相遇信息来估计传输概率。
（2）应用场景：Prophet
常用于解决时序性指标的分析，一般可用于指标预测分析，业务量风险预测分析等场景应用。
（3）对应场景：业务量风险预测、容器故障预测、容器性能预测、微服务性能预测、系统性能预测、中间件性能预测、数据库性能预测、系统资源预测、人力资源预测、容器规格评估、网络流量预测。
### 3.3.5 STL 分解时间序列 
（1）算法定义：以鲁棒局部加权回归作为平滑方法的时间序列分解方
法，对异常点具有健壮性，仅能处理加法模式的分解，对于乘法模式
需要先转换为加法模式处理最后在逆变换回去。
（2）应用场景：常适用于分析时序性指标数据，适合分析趋势性周期
性指标数据。适用于指标周期性、关联性等场景。
（3）对应场景：集群负载异常检测。
### 3.3.6 Holt-winter 时间序列检测算法
（1）算法定义：三次指数平滑法，在二次指数平滑的基础上保留了季节性的信息，使得其可以预测带有季节性的时间序列。
（2）应用场景：常适用于分析时序性指标数据，带有周期性，季节性的数据场景很适合利用此算法进行预测。适用于指标周期性、关联性等场景。
（3）对应场景：集群负载异常检测、主机故障预测、客户端体验评分、变更质量评估、分布式存储性能预测、应用性能预测、WEB中间件容量预测、存储容量预测、大数据PaaS平台容量预测、云平台容量预测、数据库资源预测、低效系统识别、上云资源评估、性能优化全流程联动、成本优化全流程联动。
### 3.3.7 ARIMA 算法 
（1）算法定义：整合移动平均自回归模型，此算法是时间序列预测分析方法之一。ARIMA（p，d，q）中，AR
是\"自回归\"，p 为自回归项数；MA 为\"滑动平均\"，q 为滑动平均项数，d
为使之成为平稳序列所做的差分次数（阶数）。
（2）应用场景：ARIMA
模型能够用于齐次非平稳时间序列的分析，一般应用于股市预测，时序性指标趋势分析和日志异常检测分析等。
（3）对应场景：应用程序数据库连接异常检测、Redis
异常检测、应用类指标异常检测、微服务故障诊断、客户端体验评分、变更质量评估、分布式存储性能预测、应用性能预测、WEB中间件容量预测、存储容量预测、大数据PaaS平台容量预测、云平台容量预测、数据库资源预测、低效系统识别、数据库存储空间成本优化、上云资源评估、性能优化全流程联动、成本优化全流程联动。
### 3.3.8 DTW 距离计算算法 
（1）算法定义：DTW（Dynamic Time Warping，动态时间归整）算法。
（2） 应用场景： DTW 主要解决的是两个模板之间的距离。一般情况下，
在维数或者序列数量相同的状况下使用欧式距离或者马氏距离均可以得到两个模板之间的相似度。但当维数或者序列数量不同，不能一一对应的时候，则需要使用
DTW 算法来进行扩充或缩减到相同序列数，再进行距离计算。DTW
主要是解决这个问题。如语音识别等。
（3）对应场景：前台界面检测。
### 3.3.9 LTSM 
（1）算法定义：长短期记忆模型算法，是一种时间循环神经网络，是为了解决一般的
RNN（循环神经网络）存在的长期依赖问题而专门设计出来的，所有的 RNN
都具有一种重复神经网络模块的链式形式。
（2）应用场景：适合于处理和预测时间序列中间隔和延迟相对较长的重要事件，例如：容量预测、流量预测、疾病预测、点击率预测等等。
（3）对应场景：资源池容量预测、应用服务自愈、应用类指标异常检测、多指标异动检测、容器性能预测、微服务性能预测、系统性能预测、中间件性能预测、系统资源预测、人力资源预测、容器规格评估、网络流量预测。
### 3.3.10 EWMA指数加权移动平均算法 （新）
（1）算法定义：EWMA（Exponentially Weighted Moving
Average指数加权移动平均）算法，属于时间序列移动平均法的一种，即距离当前时刻越久远的数据点所拥有的权重越低，即距离当前时刻越近的数据点拥有的权重越高。
（2）应用场景：ewma算法是一种经典的时间序列算法，是对观察值分别给予不同的权数，按不同权数求得移动平均值，并以最后的移动平均值为基础，确定预测值的方法。采用加权移动平均法，是因为观察期的近期观察值对预测值有较大影响，它更能反映近期变化的趋势。指数移动加权平均较传统的平均法来说，一是不需要保存过去所有的数值；二是计算量显著减小。ewma算法主要用于时间序列相关的预测场景或者基于ewma算法的预测做异常检测的场景。
（3）对应场景：容器云服务故障自愈、智能策略匹配自愈、服务器硬盘风险监测、中间件配置优化、云上应用瓶颈分析、微服务架构熵值评估、故障处理全流程联动。
### 3.3.11 MAD平均绝对偏差算法 （新）
（1）算法定义：MAD（Mean Absolute
Deviation平均绝对偏差算法）算法，是一种基于统计学的时序异常检测算法。先通过计算所有观察点的中位数median(X)然后计算每一个观察点与中位数的绝对偏差abs(X-
median(X))，最后取绝对偏差的中位数得到MAD,即MAD=median(abs(X-
median(X)))
（2）应用场景：MAD异常检测算法适用于常规的智能运维时序指标的异常检测场景，MAD算法具有较好的稳定性，对异常值较敏感，对异常点的识别度较高。
（3）对应场景：故障处理全流程联动，云上应用瓶颈分析，智能策略匹配自愈，服务器硬盘风险监测。
## 3.4关联挖掘 
[]{#_Toc14566 .anchor}**3.4.1 欧氏距离算法**
（1）算法定义：欧几里得距离(Euclidean Distance)。
（2）应用场景：欧氏距离距离度量（Distance）用于衡量个体在空间上存在的距离，距离越远说明个体间的差异越大。广泛应用在两个长度一样的时间序列的相似度计算中。
（3）对应场景：日志审计
[]{#_Toc29480 .anchor}**3.4.2 DM-ARM 数据挖掘算法**
（1）算法定义：DM-ARM 算法，关联规则的挖掘算法。
（2）应用场景：基于海量数据挖掘数据间潜在的关联关系。