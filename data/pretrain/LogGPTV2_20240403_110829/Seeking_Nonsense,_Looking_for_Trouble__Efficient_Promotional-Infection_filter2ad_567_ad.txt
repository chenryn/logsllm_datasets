### Directory and Exploitation of Contaminated FQDNs

By following the same directory path under a compromised Fully Qualified Domain Name (FQDN), we can exploit the URL included in a contaminated search result item (as detected by SEISE) to find promotional materials unrelated to the context of the In-Browser Threat (IBT) in use.

Specifically, from each flagged FQDN, the IBT Collector first identifies all URLs leading to malicious content. It then determines the most commonly shared path under the FQDN. For example, given the URLs `www.lgma.ca.gov/play/popular/1*.html`, `www.lgma.ca.gov/play/home/2*.html`, and `www.lgma.ca.gov/play/club/3*.html` (detected using the IBT 'casino'), the shared path is `www.lgma.ca.gov/play`.

Using this shared path, our approach queries Google with `site:FQDN+path`, e.g., `site:www.lgma.ca.gov/play`. From the results page, critical terms are extracted by analyzing snippets under individual result items. These terms are compared with the semantics of the current second-level domain (sTLD). Terms that are highly irrelevant (with a cosine distance above the threshold of 0.9) are retained. Finally, these terms are clustered using the k-Nearest-Neighbor (k-NN) algorithm (with \( k = 10 \)) along with existing IBTs. Once a new cluster is formed, it is manually labeled with its semantics (e.g., gambling, drug selling, academic cheating).

In the example illustrated in Figure 4, the query `site:www.lgma.ca.gov/play` leads to a search results page. The IBT Collector automatically recovers a set of critical terms, including 'goldslot', 'payday loan', 'cheap essay', and others. Clustering these terms, some are classified into existing categories such as gambling and drugs, while the rest form a new cluster containing 'cheap essay', 'free term paper', and 15 other terms. This new cluster is identified as a new attack category and labeled as 'academic cheating'. Our research extended the IBT set from 30 terms to 597 effective terms, and from 3 categories (gambling, drugs, etc.) to 10 large categories (financial, cheating, politics, etc.). Manual validation shows that the results are mostly correct.

### Implementation and Evaluation

#### A. Implementing SEISE

The design of SEISE was implemented into a prototype system, built upon three key functional components: term extractor, static crawler, and semantic comparator. These components are extensively reused across the system and were implemented as follows:

- **Term Extractor**: Accepts text input and automatically identifies critical terms. Implemented in Python using the open-source tool `topia.termextract`.
- **Static Crawler**: Accepts query terms, searches through engines like Google and Bing, and returns a predetermined number of results. Developed in Python using the Google Web Search API and Bing Search API.
- **Semantic Comparator**: Compares a set of terms with the keywords of an input sTLD. Returns the average distance of each term with those keywords or terms whose distances exceed a given threshold. Implemented in Python, integrating the open-source tool `word2vec` trained on the entire Wikipedia dataset.

**System Building**:
- **Semantic Finder**: Runs the static crawler to gather content under an sTLD and calls the term extractor to identify keywords for the domain.
- **Inconsistency Searcher**: Uses the semantic comparator to determine the most irrelevant IBTs and then uses the crawler to search for these terms.
- **Context Analyzer**: Calls the crawler to query the search engine twice, once under an IBT and once for generic content, to report compromised domains.
- **IBT Collector**: Searches for the selected URL path under the detected domain, extracts critical terms from the search results, and uses the semantic comparator to find new IBTs. The k-NN module from the scikit-learn library is used to cluster these terms and discover new bad-term categories.

#### B. Experiment Setting

**Data Collection**:
- **Bad Set**: Collected FQDNs confirmed to have promotional infections from CleanMX. Manually inspected and classified 300 FQDNs (with 15 IBTs in three categories).
- **Good Set**: Used IBTs from the bad set to search for non-compromised FQDNs, resulting in a good set of 300 FQDNs related to 15 IBTs and three categories.
- **Unknown Set**: Gathered 403 sTLDs and 30 IBTs, crawled Google and Bing over three months, collecting 100K FQDNs.

**Resources and Validation**:
- Prototype system run on Amazon EC2 C4.8xlarge instances.
- Deployed 20 crawlers within virtual machines with different IP settings.
- Validated findings using VirusTotal, CleanMX, and manual analysis.

#### C. Evaluation Results

**Accuracy and Coverage**:
- Achieved near-zero False Detection Rate (FDR) and over 90% coverage on the labeled sets.
- On the unknown set, SEISE reported 11,473 compromised sites with an FDR of 1.5% and coverage over 90%. Over 75% of these infections had never been reported before.

**IBT Expansion**:
- Expanded the IBT set from 30 terms to 597 terms and from 3 categories to 10 categories after 20 iterations.

**Performance**:
- Low overhead for analyzing search results and detecting compromised sites.
- Main delay caused by the search engine, with Google ranging from 5ms to 8ms per 1,000 queries.
- On average, a compromised FQDN was detected after 2.3 term queries.

### Measurement

Our study revealed the pervasiveness of promotional infections on sTLDs, affecting leading academic institutions and government agencies worldwide. We found that sTLDs are soft targets for these attacks, easier to compromise than gTLDs of similar ranks. By mitigating threats to sTLDs, we raise the bar for adversaries, depriving them of valuable resources. Additionally, semantic inconsistency is also observed in gTLDs, indicating potential for extending our approach to protect gTLD sites.

#### A. Landscape

**Scope and Magnitude**:
- Promotional infections are widespread, compromising websites globally.
- Top 10 sTLDs with the most injected domains include `gov.cn`, `edu.vn`, and `edu`.

This comprehensive approach not only detects and categorizes promotional infections but also provides insights into the nature and scope of these attacks, enabling more effective mitigation strategies.