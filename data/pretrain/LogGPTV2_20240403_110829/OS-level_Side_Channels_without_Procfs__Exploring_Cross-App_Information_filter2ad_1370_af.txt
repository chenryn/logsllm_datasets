user behavior through the Android apps of IP cameras. Most
recently, Diao et al. [36] studied the use of global interrupt
counters in procfs to infer the user’s unlock patterns and
foreground apps.
Some other research has explored the use of mobile sen-
sors for constructing side channels. Besides location leakage
through GPS [44], [55], accelerometers [23], [41], [47], [53],
[59], magnetometer [57], gyroscope [50], [52], [59], and
orientation sensor [29], [63] have also been exploited to infer
the user’s location, movement, and even keystrokes (thus PIN
and passwords). These papers all studied sensor-based side
channels on Android. Unlike Android which allows a third-
party app to stealthily use these sensors, iOS requires special
entitlements to use these sensors. For instance, to acquire GPS
information, an iOS app needs to ask the user to authorize GPS
uses explicitly [7]; to use motion sensors, such as accelerom-
eters, magnetometers, and gyroscopes, starting from iOS 10,
developers must place NSMotionUsageDescription into
Info.plist [19]. However, once the permission is granted,
similar side-channel attacks may be conducted on iOS devices.
There were only a few past work exploring iOS side
channels. But their threat models were very different from
(a) Rate limiting.
(b) Coarse-grained return values.
Fig. 10: Countermeasure experiments on app classiﬁcation.
ours. For example, Marquardt et al. utilized accelerometers on
iPhone 4 to perform inference attack against a keyboard placed
next to the device [48], while our work targets at other apps
on the same device. Genkin et al. [39] demonstrated that using
magnetic probes placed close to the iPhone or power probes
connected to the iPhone’s USB cable, ECDSA keys used in
OpenSSL and CoreBitcoin on iPhones can be extracted. Our
attacks do not assume physical possession of the device by the
attacker. Therefore, magnetic or power attacks are out of the
scope of our threat model.
Some existing studies focus on iOS security, but not on
side-channel leakage. For example, Wang et al. [60] proposed
a method to inject exploitable vulnerabilities in iOS app to
bypass the app vetting. Xing et al. [62] discovered a series
of ﬂaws in iOS and OS X, which allow the attacker to gain
unauthorized access to other apps’ sensitive data. Deshotels
et al. [35] examined the ﬂaws in iOS sandbox proﬁles and
showed how an app can utilize them to learn sensitive infor-
mation about the user.
X. CONCLUSION
In this paper, we presented the ﬁrst exploration of OS-
level side channels on iOS. Our study suggests that although
iOS does not have procfs or permit querying per-app
statistic information, there are still APIs that allow a third-
party app to query global statistics of the memory and network
resources, or to construct timing channels to break ﬁlesystem
sandboxes. We show three categories of side-channel attacks
that exploit these APIs to extract private user information,
which include inferring foreground apps, ﬁngerprinting visited
websites, identifying map searches, de-anonymizing users of
Bitcoin Wallet, detecting installed apps, etc. These demon-
strated attacks showed that similar to Android, cross-app side-
channel attacks on iOS are also feasible. Our study has helped
Apple mitigate these security threats in iOS/MacOS.
ACKNOWLEDGEMENTS
We thank the Apple engineers who diligently worked on adjusting
iOS/MacOS to address the security issues we discovered in this paper.
We also thank the anonymous reviewers for their valuable comments.
The project is supported in part by NSF grant 1718084, 1566444,
1527141, 1618493, ARO W911NF1610127 and a Samsung gift fund.
REFERENCES
[1]
“Adopting
touch.”
UserExperience/Conceptual/Adopting3DTouchOniPhone/.
3d
3d
https://developer.apple.com/library/content/documentation/
iphone: Getting
started with
touch
on
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]
[18]
[19]
[20]
in
depth,”
sandbox
reference,”
https://developer.apple.com/
information - venmo.” https://venmo.com/legal/us-helpful-
“Api reference: canopenurl(:),” https://developer.apple.com/reference/
uikit/uiapplication/1622952-canopenurl.
“App
https://developer.apple.com/library/
content/documentation/Security/Conceptual/AppSandboxDesignGuide/
AppSandboxInDepth/AppSandboxInDepth.html.
“As venmo’s popularity explodes, its customer service team scrambles
to keep up - forbes.” https://www.forbes.com/sites/laurengensler/2017/
02/14/venmo-customer-service/\#5e00fd081cfd.
“Background execution,” https://developer.apple.com/library/content/
documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/
BackgroundExecution/BackgroundExecution.html.
“Capstone,” http://www.capstone-engine.org.
“Cllocationmanager-api
reference/corelocation/cllocationmanager.
“Cycript - jay freeman(saurik).” http://www.cycript.org.
“Helpful
information/.
“Home screen actions - extensions - ios human interface guidelines.”
https://developer.apple.com/ios/human-interface-guidelines/extensions/
home-screen-actions/.
“ios-runtime-headers,”
Headers/blob/master/Frameworks/MobileCoreServices.framework/
LSApplicationWorkspace.h.
“Libsvm - faq.” http://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html.
“NSTimer,” https://developer.apple.com/reference/foundation/nstimer.
“Piecewise
sax-vsm.” https://
jmotif.github.io/sax-vsm_site/morea/algorithm/PAA.html.
“/proc on mac os x - mac os x internals.” http://osxbook.com/book/
bonus/ancient/procfs.
“Security and privacy changes in ios 9 | in security.” https://nabla-
c0d3.github.io/blog/2015/06/16/ios9-security-privacy/.
“Technical q&a qa1398: Mach absolute time units - apple developer.”
https://developer.apple.com/library/content/qa/qa1398/_index.html.
“Twitter by the numbers (2017): Stats, demographics & fun facts.” https:
//www.omnicoreagency.com/twitter-statistics.
“Working with security and privacy,” https://developer.xamarin.com/
guides/ios/application_fundamentals/security-privacy-enhancements/
ofﬂine.pdf.
“Z-normalization |
morea/algorithm/znorm.html.
sax-vsm.” https://jmotif.github.io/sax-vsm_site/
https://github.com/nst/iOS-Runtime-
aggregate
approximation (paa)
|
[21] Apple, “App store review guidelines,” https://developer.apple.com/app-
store/review/guidelines/.
[22] ——, “Mach overview,” https://developer.apple.com/library/content/
documentation/Darwin/Conceptual/KernelProgramming/Mach/
Mach.html.
[23] A. J. Aviv, B. Sapp, M. Blaze, and J. M. Smith, “Practicality of
accelerometer side channels on smartphones,” in the 28th Annual
Computer Security Applications Conference. ACM, 2012.
14
Top 1Top 2Top 3020406080100Accuracy(%)5/s10/s100/s500/s1000/sTop 1Top 2Top 3020406080100Accuracy(%)Mask 3 digitsMask 2 digitsMask 1 digitOriginal[24] P. Belgarric, P.-A. Fouque, G. Macario-Rat, and M. Tibouchi, “Side-
channel analysis of weierstrass and koblitz curve ecdsa on android
smartphones,” in Cryptographers’ Track at
the RSA Conference.
Springer, 2016.
[25] D. J. Berndt and J. Clifford, “Using dynamic time warping to ﬁnd
[26]
[27]
[28]
patterns in time series.” in KDD workshop. Seattle, WA, 1994.
blockchain.info, “Average number of transactions per block,” https://
blockchain.info/charts/n-transactions-per-block.
J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W.
Felten, “Sok: Research perspectives and challenges for bitcoin and
cryptocurrencies,” in IEEE Symposium on Security and Privacy, 2015.
J. Brownlee, “Apple app store now rejecting app code for private api
calls,” http://www.geek.com/apple/apple-app-store-now-rejecting-app-
code-for-private-api-calls-983411/.
[29] L. Cai and H. Chen, “Touchlogger: Inferring keystrokes on touch screen
from smartphone motion.” HotSec, 2011.
[30] C.-C. Chang and C.-J. Lin, “LIBSVM: A library for support vector
machines,” ACM Transactions on Intelligent Systems and Technology,
2011, software available at http://www.csie.ntu.edu.tw/~cjlin/libsvm.
[31] Q. A. Chen, Z. Qian, and Z. M. Mao, “Peeking into your app without
actually seeing it: UI state inference and novel Android attacks,” in 23th
USENIX Security Symposium, 2014.
[32] S. Chen, R. Wang, X. Wang, and K. Zhang, “Side-channel leaks in
web applications: A reality today, a challenge tomorrow,” in 2010 IEEE
Symposium on Security and Privacy.
IEEE, 2010.
[33] T. Cover and P. Hart, “Nearest neighbor pattern classiﬁcation,” IEEE
transactions on information theory, 1967.
[34] Z. Deng, B. Saltaformaggio, X. Zhang, and D. Xu, “iris: Vetting private
api abuse in ios applications,” in the 22nd ACM SIGSAC Conference
on Computer and Communications Security. ACM, 2015.
[35] L. Deshotels, R. Deaconescu, M. Chiroiu, L. Davi, W. Enck, and A.-
R. Sadeghi, “Sandscout: Automatic detection of ﬂaws in ios sandbox
proﬁles,” in Proceedings of the 2016 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 2016.
[36] W. Diao, X. Liu, Z. Li, and K. Zhang, “No pardon for the interruption:
New inference attacks on android through interrupt timing analysis,” in
37th IEEE Symposium on Security and Privacy, 2016.
[37] M. Egele, C. Kruegel, E. Kirda, and G. Vigna, “Pios: Detecting privacy
leaks in ios applications.” in Network and Distributed System Security
Symposium, 2011.
[38] T. F. Foundatio, “The freebsd project,” https://www.freebsd.org.
[39] D. Genkin, L. Pachmanov, I. Pipman, E. Tromer, and Y. Yarom, “Ecdsa
key extraction from mobile devices via nonintrusive physical side chan-
nels,” in ACM SIGSAC Conference on Computer and Communications
Security. ACM, 2016.
[40] G. Goller and G. Sigl, “Side channel attacks on smartphones and
embedded devices using standard radio equipment,” in International
Workshop on Constructive Side-Channel Analysis and Secure Design.
Springer, 2015.
J. Han, E. Owusu, L. T. Nguyen, A. Perrig, and J. Zhang, “Accom-
plice: Location inference using accelerometers on smartphones,” in
2012 Fourth International Conference on Communication Systems and
Networks.
IEEE, 2012.
[41]
[42] S. Jana and V. Shmatikov, “Memento: Learning secrets from process
footprints,” in 2012 IEEE Symposium on Security and Privacy, 2012.
[43] B. Kraft, E. Mannes, and J. Moldow, “Security research of a social
payment app,” 2014.
[44] M. Li, H. Zhu, Z. Gao, S. Chen, L. Yu, S. Hu, and K. Ren, “All
your location are belong to us: Breaking mobile social networks for
automated user location tracking,” in the 15th ACM international
symposium on Mobile ad hoc networking and computing. ACM, 2014.
[45] C.-C. Lin, H. Li, X. Zhou, and X. Wang, “Screenmilker: How to milk
your Android screen for secrets,” in 21st ISOC Network and Distributed
System Security Symposium, 2014.
J. Lin and Y. Li, “Finding structural similarity in time series data
using bag-of-patterns representation,” in International Conference on
Scientiﬁc and Statistical Database Management. Springer, 2009.
[46]
[47] X. Liu, Z. Zhou, W. Diao, Z. Li, and K. Zhang, “When good becomes
15
evil: Keystroke inference with smartwatch,” in the 22nd ACM SIGSAC
Conference on Computer and Communications Security. ACM, 2015.
[48] P. Marquardt, A. Verma, H. Carter, and P. Traynor, “(sp) iphone: decod-
ing vibrations from nearby keyboards using mobile phone accelerom-
eters,” in the 18th ACM conference on Computer and communications
security. ACM, 2011.
[49] S. Meiklejohn, M. Pomarole, G. Jordan, K. Levchenko, D. McCoy,
G. M. Voelker, and S. Savage, “A ﬁstful of bitcoins: Characterizing
payments among men with no names,” in Internet Measurement Con-
ference. ACM, 2013.
[50] Y. Michalevsky, D. Boneh, and G. Nakibly, “Gyrophone: Recognizing
speech from gyroscope signals,” in 23rd USENIX Security Symposium,
2014.
[51] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” https:
//bitcoin.org/bitcoin.pdf.
[52] S. Nawaz and C. Mascolo, “Mining users’ signiﬁcant driving routes
with low-power sensors,” in the 12th ACM Conference on Embedded
Network Sensor Systems. ACM, 2014.
[53] E. Owusu, J. Han, S. Das, A. Perrig, and J. Zhang, “Accessory:
password inference using accelerometers on smartphones,” in the 12th
Workshop on Mobile Computing Systems & Applications. ACM, 2012.
[54] P. Patel, E. Keogh, J. Lin, and S. Lonardi, “Mining motifs in massive
time series databases,” in 2002 IEEE International Conference on Data
Mining.
I. Polakis, G. Argyros, T. Petsios, S. Sivakorn, and A. D. Keromytis,
“Where’s wally?: Precise user discovery attacks in location proximity
services,” in the 22nd ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2015.
IEEE, 2002.
[55]
[56] Z. Qian, Z. M. Mao, and Y. Xie, “Collaborative TCP sequence number
inference attack: How to crack sequence number under a second,” in
19th ACM Conference on Computer and Communications Security,
2012.
[57] C. Shen, S. Pei, T. Yu, and X. Guan, “On motion sensors as source for
user input inference in smartphones,” in IEEE International Conference
on Identity, Security and Behavior Analysis.
IEEE, 2015.
[58] M. Shokoohi-Yekta, J. Wang, and E. Keogh, “On the non-trivial
generalization of dynamic time warping to the multi-dimensional case,”
in the 2015 SIAM International Conference on Data Mining. SIAM,
2015.
[59] H. Wang, T. T.-T. Lai, and R. Roy Choudhury, “Mole: Motion leaks
through smartwatch sensors,” in the 21st Annual International Confer-
ence on Mobile Computing and Networking. ACM, 2015.
[60] T. Wang, K. Lu, L. Lu, S. P. Chung, and W. Lee, “Jekyll on ios: When
benign apps become evil.” in USENIX Security Symposium, 2013.
[61] Q. Xiao, M. K. Reiter, and Y. Zhang, “Mitigating storage side channels
using statistical privacy mechanisms,” in 22nd ACM Conference on
Computer and Communications Security, 2015.
[62] L. Xing, X. Bai, T. Li, X. Wang, K. Chen, X. Liao, S.-M. Hu, and
X. Han, “Cracking app isolation on apple: Unauthorized cross-app
resource access on mac os,” in the 22nd ACM SIGSAC Conference
on Computer and Communications Security. ACM, 2015.
[63] Z. Xu, K. Bai, and S. Zhu, “Taplogger: Inferring user inputs on
smartphone touchscreens using on-board motion sensors,” in the 5th
ACM conference on Security and Privacy in Wireless and Mobile
Networks. ACM, 2012.
[64] K. Zhang and X. Wang, “Peeping Tom in the neighborhood: Keystroke
eavesdropping on multi-user systems,” in 18th USENIX Security Sym-
posium, 2009.
[65] N. Zhang, K. Yuan, M. Naveed, X. Zhou, and X. Wang, “Leave me
alone: App-level protection against runtime information gathering on
android,” in 36th IEEE Symposium on Security and Privacy, 2015.
[66] X. Zhang, Y. Xiao, and Y. Zhang, “Return-oriented ﬂush-reload
side channels on ARM and their implications for android devices,”
in SIGSAC Conference on Computer and Communications Security.
ACM, 2016.
[67] X. Zhou, S. Demetriou, D. He, M. Naveed, X. Pan, X. Wang, C. A.
Gunter, and K. Nahrstedt, “Identity, location, disease and more: In-
ferring your secrets from Android public resources,” in 20th ACM
Conference on Computer and Communications Security, 2013.