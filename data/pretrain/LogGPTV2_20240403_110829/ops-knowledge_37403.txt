I am currently using Kafka 0.8.1 and the Python client, kafka-python-0.9.0. My setup includes two Kafka brokers. When I run my Kafka consumer, it successfully retrieves messages from the queue and keeps track of offsets for both brokers. Everything seems to be working well.

However, I have encountered an issue where, upon restarting the consumer, it begins consuming messages from the beginning of the queue. My expectation was that, after a restart, the consumer would resume from where it left off before it was stopped.

To address this, I attempted to manually track message offsets in Redis and then use `consumer.seek` to ensure that only unseen messages were being consumed. This approach worked, but before deploying this solution, I wanted to check if there might be something I am missing about Kafka or the kafka-python client. It seems like the ability for a consumer to resume from its last position is a fundamental feature.

Thank you for your help!

---

**Response:**

The `kafka-python` library stores offsets on the Kafka server itself, rather than using a separate Zookeeper connection. Unfortunately, the Kafka server APIs for committing and fetching offsets were not fully functional until Apache Kafka version 0.8.1.1. 

To resolve your issue, I recommend upgrading your Kafka server to at least version 0.8.1.1. Additionally, it would be beneficial to upgrade the `kafka-python` client to version 0.9.4, as it includes several improvements and bug fixes.

By making these upgrades, your consumer should be able to resume from the last committed offset, providing the expected behavior.

[Response from the `kafka-python` maintainer]