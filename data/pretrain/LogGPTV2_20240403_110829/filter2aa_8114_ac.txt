00000020: 65 2e 74 78 74 00 00 2b 00 50 4b 03 04 0a 00 00  e.txt..+.PK.....
00000030: 00 00 00 00 00 00 00 c5 b2 dd af 07 00 00 00 07  ................
00000040: 00 00 00 09 00 47 00 68 65 6c 6c 6f 2e 74 78 74  .....G.hello.txt
00000050: 00 00 43 00 63 61 74 20 66 6c 61 67 2e 74 78 74  ..C.cat flag.txt
00000060: 0a 50 4b 01 02 00 00 0a 00 00 00 00 00 00 00 00  .PK.............
00000070: 00 17 0d d9 f5 0d 00 00 00 0d 00 00 00 07 00 00  ................
00000080: 00 ea 00 00 00 00 00 00 00 00 00 00 00 00 00 62  ...............b
00000090: 79 65 2e 74 78 74 00 6c 73 20 2d 61 6c 0a 50 4b  ye.txt.ls -al.PK
000000a0: 01 02 00 00 0a 00 00 00 00 00 00 00 00 00 c5 b2  ................
000000b0: dd af 07 00 00 00 07 00 00 00 09 00 00 00 2b 00  ..............+.
000000c0: 00 00 00 00 00 00 00 00 29 00 00 00 68 65 6c 6c  ........)...hell
000000d0: 6f 2e 74 78 74 00 00 00 00 00 00 00 00 00 00 00  o.txt...........
000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000100: 50 4b 05 06 00 00 00 00 01 00 01 00 62 00 00 00  PK..........b...
00000110: 9e 00 00 00 ea 00 00 4d 00 00 00 00 00 00 00 00  .......M........
00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000180: 50 4b 05 06 00 00 00 00 01 00 01 00 1f 01 00 00  PK..............
00000190: 61 00 00 00 6a 00 00 4d                          a...j..M
```
This is what we feed into `unicoll`:
```console
┌──(user@kali)-[~/utils/crypto/hashclash]
└─$ mkdir workspace_zip_clash
┌──(user@kali)-[~/utils/crypto/hashclash]
└─$ cd workspace_zip_clash
┌──(user@kali)-[~/utils/crypto/hashclash/workspace_zip_clash]
└─$ cp /media/sf_CTFs/checkpoint/ls/workspace/prefix.bin .
┌──(user@kali)-[~/utils/crypto/hashclash/workspace_zip_clash]
└─$ ../scripts/poc_no.sh prefix.bin
# ...
Block 1: ./data/coll1_3795903542
e2 25 3a 3c 1a 29 47 08 5f c2 c7 48 7c 46 5e 1c
e3 f1 b0 27 2c e5 22 bc 5a 91 1e 7f 89 f5 e0 e8
81 4c 50 b0 3d ab 4e ab 64 7b a6 22 f3 4f 23 bc
53 4a 3c 7d c0 29 7a a3 9b 3b 53 e4 03 b8 3b f1
Block 2: ./data/coll2_3795903542
e2 25 3a bc 1a 29 47 08 5f c2 c7 48 7c 46 5e 1c
e3 f1 b0 27 2c e5 22 bc 5a 91 1e ff 89 f5 e0 e8
81 4c 50 b0 3d ab 4e ab 64 7b a6 22 f3 4f 23 bc
53 4a 3c 7d c0 29 7a ab 9b 3b 53 e4 03 b8 3b f1
Found collision!
61141afe3fee5057f5dc8a3d678060d0  collision1.bin
61141afe3fee5057f5dc8a3d678060d0  collision2.bin
9b56f26715754e51fc7968dcedf1c09b8445c174  collision1.bin
436971b1051e988f1807a789ab1992ad57204506  collision2.bin
4 -rw-r--r-- 1 user user 512 Sep 11 20:53 collision1.bin
4 -rw-r--r-- 1 user user 512 Sep 11 20:53 collision2.bin
```
Let's inspect the files we got:
```console
┌──(user@kali)-[~/utils/crypto/hashclash/workspace_zip_clash]
└─$ cp collision*.bin /media/sf_CTFs/checkpoint/ls/workspace
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ md5sum collision*.bin
61141afe3fee5057f5dc8a3d678060d0  collision1.bin
61141afe3fee5057f5dc8a3d678060d0  collision2.bin
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ file collision*.bin
collision1.bin: Zip archive data, at least v1.0 to extract
collision2.bin: Zip archive data, at least v1.0 to extract
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ unzip collision1.bin
Archive:  collision1.bin
 extracting: bye.txt
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ cat bye.txt
cat flag.txt
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ mv collision1.bin zip_cat_flag.zip
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ unzip collision2.bin
Archive:  collision2.bin
 extracting: hello.txt
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ cat hello.txt
ls -al
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ mv collision2.bin zip_ls.zip
```
The magic happens at offset `0x183`:
```console
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ diff -y <(xxd -g 1 zip_ls.zip) <(xxd -g 1 zip_cat_flag.zip)
00000000: 50 4b 03 04 0a 00 00 00 00 00 00 00 00 00 17 0d  PK   00000000: 50 4b 03 04 0a 00 00 00 00 00 00 00 00 00 17 0d  PK
00000010: d9 f5 0d 00 00 00 0d 00 00 00 07 00 2f 00 62 79  ..   00000010: d9 f5 0d 00 00 00 0d 00 00 00 07 00 2f 00 62 79  ..
00000020: 65 2e 74 78 74 00 00 2b 00 50 4b 03 04 0a 00 00  e.   00000020: 65 2e 74 78 74 00 00 2b 00 50 4b 03 04 0a 00 00  e.
000000b0: dd af 07 00 00 00 07 00 00 00 09 00 00 00 2b 00  ..   000000b0: dd af 07 00 00 00 07 00 00 00 09 00 00 00 2b 00  ..
000000c0: 00 00 00 00 00 00 00 00 29 00 00 00 68 65 6c 6c  ..   000000c0: 00 00 00 00 00 00 00 00 29 00 00 00 68 65 6c 6c  ..
000000d0: 6f 2e 74 78 74 00 00 00 00 00 00 00 00 00 00 00  o.   000000d0: 6f 2e 74 78 74 00 00 00 00 00 00 00 00 00 00 00  o.
000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000100: 50 4b 05 06 00 00 00 00 01 00 01 00 62 00 00 00  PK   00000100: 50 4b 05 06 00 00 00 00 01 00 01 00 62 00 00 00  PK
00000110: 9e 00 00 00 ea 00 00 4d 00 00 00 00 00 00 00 00  ..   00000110: 9e 00 00 00 ea 00 00 4d 00 00 00 00 00 00 00 00  ..
00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..   00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..
00000180: 50 4b 05 86 00 00 00 00 01 00 01 00 1f 01 00 00  PK | 00000180: 50 4b 05 06 00 00 00 00 01 00 01 00 1f 01 00 00  PK
00000190: 61 00 00 00 6a 00 00 4d 8c a2 7a c7 fc 21 4c 26  a. | 00000190: 61 00 00 00 6a 00 00 4d 8c a2 7a 47 fc 21 4c 26  a.
000001a0: 25 10 d6 ce a3 d3 e7 fb a5 88 67 35 41 b9 4f 2c  %.   000001a0: 25 10 d6 ce a3 d3 e7 fb a5 88 67 35 41 b9 4f 2c  %.
000001b0: 83 7a c6 9a ba d7 75 75 c4 a6 87 21 2b 5c a2 c2  .z | 000001b0: 83 7a c6 9a ba d7 75 6d c4 a6 87 21 2b 5c a2 c2  .z
000001c0: e2 25 3a 3c 1a 29 47 08 5f c2 c7 48 7c 46 5e 1c  .% | 000001c0: e2 25 3a bc 1a 29 47 08 5f c2 c7 48 7c 46 5e 1c  .%
000001d0: e3 f1 b0 27 2c e5 22 bc 5a 91 1e 7f 89 f5 e0 e8  .. | 000001d0: e3 f1 b0 27 2c e5 22 bc 5a 91 1e ff 89 f5 e0 e8  ..
000001e0: 81 4c 50 b0 3d ab 4e ab 64 7b a6 22 f3 4f 23 bc  .L   000001e0: 81 4c 50 b0 3d ab 4e ab 64 7b a6 22 f3 4f 23 bc  .L
000001f0: 53 4a 3c 7d c0 29 7a a3 9b 3b 53 e4 03 b8 3b f1  SJ | 000001f0: 53 4a 3c 7d c0 29 7a ab 9b 3b 53 e4 03 b8 3b f1  SJ
```
The right-hand side has a valid `End of Central Directory` signature starting at `0x180` (`.P .K 05 06`), so when the zip parser scans the file (from bottom up) it meets the valid signature and uses it to jump to the file it points to: `bye.txt`. However, on the left-hand side the offset at `0x180` contains an invalid signature (`.P .K 05 86`). So, the parser skips the entry that points to `bye.txt` and instead arrives to the valid entry at `0x100` - the one that points to `hello.txt`. 
All that's left is to send the files:
```python
import requests
import json
for file in ["zip_ls.zip", "zip_cat_flag.zip"]:
    print(f"Sending {file}\n")
    with open(file,'rb') as payload:
        headers = {'content-type': 'application/zip'}
        r = requests.post('https://ls.csa-challenge.com/upload-zip',
                          data=payload, headers=headers)
        j = r.json()
        print(json.loads(j["body"])[0])
```
Output:
```console
┌──(user@kali)-[/media/sf_CTFs/checkpoint/ls/workspace]
└─$ python3 post.py
Sending zip_ls.zip
total 5
drwxr-xr-x 2 root  root    57 Aug 19 06:30 .
drwxr-xr-x 1 12569 users 4096 Aug 12 09:59 ..
-rwxr-xr-x 1 root  root    25 Aug  4 18:56 flag.txt
-rwxr-xr-x 1 root  root   504 Aug 19 06:30 lambda_function.py
Sending zip_cat_flag.zip
CSA{K1LL_MD5_A1r34dy_p1z}
```