Usage: ip tunnel { add \| change \| del \| show \| prl \| 6rd } \[ NAME
\]
\[ mode { ipip \| gre \| sit \| isatap \| vti } \] \[ remote ADDR \] \[
local ADDR \]
\[ \[i\|o\]seq \] \[ \[i\|o\]key KEY \] \[ \[i\|o\]csum \]
\[ prl-default ADDR \] \[ prl-nodefault ADDR \] \[ prl-delete ADDR \]
\[ 6rd-prefix ADDR \] \[ 6rd-relay_prefix ADDR \] \[ 6rd-reset \]
\[ ttl TTL \] \[ tos TOS \] \[ \[no\]pmtudisc \] \[ dev PHYS_DEV \]
Where: NAME := STRING
ADDR := { IP_ADDRESS \| any }
TOS := { STRING \| 00..ff \| inherit \| inherit/STRING \| inherit/00..ff
}
TTL := { 1..255 \| inherit }
KEY := { DOTTED_QUAD \| NUMBER }
## 步骤二：Client主机创建VPN隧道
### 1）创建隧道
\[root@client \~\]# ip tunnel add tun0 mode gre remote 201.1.2.5 local
201.1.2.10
//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//remote 后面跟对方的IP地址与其他主机建立隧道
//local后面跟本机的IP地址
### 2）启用该隧道（类似与设置网卡up）
\[root@client \~\]# ip link show #查看
10: tun0@NONE: \ mtu 1476 qdisc noop state DOWN mode
DEFAULT qlen 1
link/gre 201.1.2.10 peer 201.1.2.5
\[root@client \~\]# ip link set tun0 up //设置UP
\[root@client \~\]# ip link show
10: tun0@NONE: \ mtu 1476 qdisc noqueue
state UNKNOWN mode DEFAULT qlen 1
link/gre 201.1.2.10 peer 201.1.2.5
### 3）为VPN配置隧道IP地址
\[root@client \~\]# ip addr add 10.10.10.10/24 peer 10.10.10.5/24 dev
tun0
//为隧道tun0设置本地IP地址（10.10.10.10.10/24）
//隧道对面的主机IP的隧道IP为10.10.10.5/24
\[root@client \~\]# ip a s //查看IP地址
10: tun0@NONE: \ mtu 1476 qdisc noqueue
state UNKNOWN qlen 1
link/gre 201.1.2.10 peer 201.1.2.5
inet 10.10.10.10 peer 10.10.10.5/24 scope global tun0
valid_lft forever preferred_lft forever
inet6 fe80::200:5efe:c901:20a/64 scope link
valid_lft forever preferred_lft forever
### 4）关闭防火墙
\[root@client \~\]# firewall-cmd \--set-default-zone=trusted
## 步骤三：Proxy主机创建VPN隧道
### 1）查看计算机当前加载的模块
\[root@client \~\]# lsmod //显示模块列表
\[root@client \~\]# lsmod \| grep ip_gre //确定是否加载了gre模块
### 2) 加载模块ip_gre
\[root@client \~\]# modprobe ip_gre
### 3）创建隧道
\[root@proxy \~\]# \~\]# ip tunnel add tun0 mode gre \\
\> remote 201.1.2.10 local 201.1.2.5
//ip tunnel add创建隧道（隧道名称为tun0），ip tunnel help可以查看帮助
//mode设置隧道使用gre模式
//local后面跟本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址
### 4）启用该隧道（类似与设置网卡up）
\[root@proxy \~\]# ip a s #启用之前用ip a s查看
10: tun0@NONE: \ mtu 1476 qdisc noop state DOWN qlen
1
link/gre 201.1.2.5 peer 201.1.2.10
\[root@proxy \~\]# ip link set tun0 up
\[root@proxy \~\]# ip a s #启用之后用ip a s 查看
10: tun0@NONE: \ mtu 1476 qdisc noqueue
state UNKNOWN qlen 1
link/gre 201.1.2.5 peer 201.1.2.10
inet6 fe80::200:5efe:c901:205/64 scope link
valid_lft forever preferred_lft forever
### 5）为VPN配置隧道IP地址
\[root@proxy \~\]# ip addr add 10.10.10.5/24 peer 10.10.10.10/24 dev
tun0
//为隧道tun0设置本地IP地址（10.10.10.10.5/24）
//隧道对面的主机IP的隧道IP为10.10.10.10/24
\[root@proxy \~\]# ip a s //查看IP地址
10: tun0@NONE: \ mtu 1476 qdisc noqueue
state UNKNOWN qlen 1
link/gre 201.1.2.5 peer 201.1.2.10
inet 10.10.10.5 peer 10.10.10.10/24 scope global tun0
valid_lft forever preferred_lft forever
inet6 fe80::200:5efe:c901:205/64 scope link
valid_lft forever preferred_lft forever
### 6）开启路由转发、关闭防火墙
\[root@proxy \~\]# echo \"1\" \> /proc/sys/net/ipv4/ip_forward
\[root@proxy \~\]# firewall-cmd \--set-default-zone=trusted
### 7)测试连通性
\[root@client \~\]# ping 10.10.10.5
\[root@proxy \~\]# ping 10.10.10.10
# 2 案例2：创建PPTP VPN(windows-linux)
支持windows
支持密码身份验证
支持MPPE加密
2.1 问题
本案例要求搭建一个PPTP
VPN环境，并测试该VPN网络是否能够正常通讯，要求如下:
使用PPTP协议创建一个支持身份验证的隧道连接
使用MPPE对数据进行加密
为客户端分配192.168.3.0/24的地址池
客户端连接的用户名为jacob，密码为123456
2.2 方案
准备实验所需的虚拟机环境，实验环境所需要的主机及对应的IP设置列表如表-2所示，正确配置IP地址、主机名称，并且为每台主机配置YUM源。
![table002](media/image32.png){width="4.977777777777778in"
height="0.7881944444444444in"}![image002](media/image33.png){width="4.617361111111111in"
height="1.7666666666666666in"}
## 步骤一：部署VPN服务器
### 1）安装软件包（软件包参考lnmp_soft）
\[root@proxy \~\]# yum localinstall pptpd-1.4.0-2.el7.x86_64.rpm
#本地安装
\[root@proxy \~\]# rpm -qc pptpd #查看这个软件有没有配置文件
/etc/ppp/options.pptpd
/etc/pptpd.conf
/etc/sysconfig/pptpd
### 2) 修改（三个）配置文件
\[root@proxy \~\]# vim /etc/pptpd.conf
.. ..#
(Recommended)
#localip 192.168.0.1 #模板:本机IP
#remoteip 192.168.0.234-238,192.168.0.245
> #remoteip 分配给客户端的IP地址池,连续的用 - 单个的用 ,
\# or
#localip 192.168.0.234-238,192.168.0.245
#remoteip 192.168.1.234-238,192.168.1.245
localip 201.1.2.5 //实际修改服务器本地IP
remoteip 192.168.3.1-50 //实际修改分配给客户端的IP池
\[root@proxy \~\]# vim /etc/ppp/options.pptpd
name pptpd //vpn给自己取的名字默认为:pptpd
require-mppe-128 //使用MPPE加密数据,将用户认证加密
ms-dns 8.8.8.8 //DNS服务器
\[root@proxy \~\]# vim /etc/ppp/chap-secrets //修改账户配置文件
zdd \* 123456 \*
//用户名 服务器标记 密码 客户端
#服务器标记可以不写,要写,一定要写前面/etc/ppp/options.pptpd文件里面的name参数相同,本实验为
pptpd
#客户端:是IP地址.\*代表所有IP可用,如果指定单个IP连接,这里填个IP.
### 3) 服务器开启路由转发(Linux软路由)
\[root@proxy \~\]# echo \"1\" \> /proc/sys/net/ipv4/ip_forward
//开启路由转发
#配置文件ip_forward 值为1开启路由转发.值为0关闭路由转发
### 4）启动服务
\[root@proxy \~\]# systemctl start pptpd
\[root@proxy \~\]# systemctl enable pptpd
\[root@proxy \~\]# firewall-cmd \--set-default-zone=trusted
### 5）翻墙设置（非必需操作）
\[root@proxy \~\]# iptables -t nat -A POSTROUTING -s 192.168.3.0/24 \\
\> -j SNAT \--to-source 201.1.2.5
#做nat转换的
## 步骤二：客户端设置
启动一台Windows虚拟机，将虚拟机网卡桥接到public2，配置IP地址为201.1.2.20。
新建网络连接（具体操作如图-3所示），输入VPN服务器账户与密码（具体操作如图-4所示），连接VPN并测试网络连通性（如图-5所示）。
![image003](media/image34.png){width="5.195833333333334in"
height="3.036111111111111in"}![image004](media/image35.png){width="4.941666666666666in"
height="1.9513888888888888in"}
![](media/image36.png){width="2.7131944444444445in"
height="2.0409722222222224in"}![](media/image37.png){width="2.7506944444444446in"
height="2.05in"}
![](media/image38.png){width="2.7104166666666667in"
height="1.9243055555555555in"}![](media/image39.png){width="2.6902777777777778in"
height="2.004861111111111in"}
设置中:域可以
Windows ping vpn的服务器:通了实验成功
Ping 192.168.4.5
Ping 192.168.2.5
# 3 案例3：创建L2TP+IPSec VPN
-   L2TP建立主机之间的vpn隧道，压缩、验证
-   IPSec提供数据加密，数据校验，访问控制的功能
3.1 问题
本案例要求搭建一个L2TP+IPSec
VPN环境，并测试该VPN网络是否能够正常通讯，具体要求如下：
-   使用L2TP协议创建一个支持身份验证与加密的隧道连接（与pptp类似）
-   使用IPSec对数据进行加密
-   为客户端分配192.168.3.0/24的地址池
-   客户端连接的用户名为：jacob，密码为：123456
-   预共享密钥为：randpass
3.2 方案
准备实验所需的虚拟机环境，实验环境所需要的主机及对应的IP设置列表如表-3所示，正确配置IP地址、主机名称，并且为每台主机配置YUM源。
![image001](media/image40.png){width="4.759027777777778in"
height="0.875in"}
![image002](media/image41.png){width="4.475694444444445in"
height="1.7583333333333333in"}
## 步骤一：部署IPSec服务
### 1）安装软件包
\[root@client \~\]# yum -y install libreswan (光盘自带的)
### 2)新建IPSec密钥验证配置文件
\[root@client \~\]# cat /etc/ipsec.conf //仅查看一下该主配置文件
.. ..
include /etc/ipsec.d/\*.conf //加载该目录下的所有配置文件
\[root@client \~\]# vim /etc/ipsec.d/myipsec.conf
//新建myipsec.conf 文件，参考lnmp_soft/vpn/myipsec.conf
conn IDC-PSK-NAT
rightsubnet=vhost:%priv //允许建立的VPN虚拟网络
also=IDC-PSK-noNAT
conn IDC-PSK-noNAT
authby=secret //加密认证
ike=3des-sha1;modp1024 //算法
phase2alg=aes256-sha1;modp2048 //算法
pfs=no
auto=add
keyingtries=3
rekey=no
ikelifetime=8h
keylife=3h
type=transport
left=201.1.2.10 //重要，服务器本机的外网IP
leftprotoport=17/1701
right=%any //允许任何客户端连接
rightprotoport=17/%any
### 3)创建IPSec预定义共享密钥(PSK)
\[root@client \~\]# cat /etc/ipsec.secrets //仅查看，不要修改该文件
include /etc/ipsec.d/\*.secrets
\[root@client \~\]# vim /etc/ipsec.d/mypass.secrets //需新建该文件
201.1.2.10 %any: PSK \"randpass\" //randpass为预共享密钥
//201.1.2.10是VPN服务器的IP
### 4)启动IPSec服务
\[root@client \~\]# systemctl start ipsec
\[root@client \~\]# netstat -ntulp \|grep pluto
udp 0 0 127.0.0.1:4500 0.0.0.0:\* 3148/pluto
udp 0 0 192.168.4.10:4500 0.0.0.0:\* 3148/pluto
udp 0 0 201.1.2.10:4500 0.0.0.0:\* 3148/pluto
udp 0 0 127.0.0.1:500 0.0.0.0:\* 3148/pluto
udp 0 0 192.168.4.10:500 0.0.0.0:\* 3148/pluto
udp 0 0 201.1.2.10:500 0.0.0.0:\* 3148/pluto
udp6 0 0 ::1:500 :::\* 3148/pluto
## 步骤二：部署XL2TP服务
### 1）安装软件包（软件包参考lnmp_soft）
\[root@client \~\]# yum localinstall xl2tpd-1.3.8-2.el7.x86_64.rpm
### 2) 修改xl2tp配置文件（修改3个配置文件的内容）
\[root@client \~\]# vim /etc/xl2tpd/xl2tpd.conf //修改主配置文件
\[global\]
.. ..
\[lns default\]
.. ..
ip range = 192.168.3.128-192.168.3.254 //分配给客户端的IP池