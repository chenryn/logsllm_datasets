title:Lattice-Based Group Signatures and Zero-Knowledge Proofs of Automorphism
Stability
author:Rafa&quot;el del Pino and
Vadim Lyubashevsky and
Gregor Seiler
Lattice-Based Group Signatures and
Zero-Knowledge Proofs of Automorphism Stability(cid:63)
Rafael del Pino1(cid:63)(cid:63), Vadim Lyubashevsky2, and Gregor Seiler2,3
1 ENS Paris
2 IBM Research – Zurich
3 ETH Zurich
Abstract. We present a group signature scheme, based on the hardness of lattice problems, whose
outputs are more than an order of magnitude smaller than the currently most eﬃcient schemes in the
literature. Since lattice-based schemes are also usually non-trivial to eﬃciently implement, we addi-
tionally provide the ﬁrst experimental implementation of lattice-based group signatures demonstrating
that our construction is indeed practical – all operations take less than half a second on a standard
laptop.
A key component of our construction is a new zero-knowledge proof system for proving that a com-
mitted value belongs to a particular set of small size. The sets for which our proofs are applicable are
exactly those that contain elements that remain stable under Galois automorphisms of the underlying
cyclotomic number ﬁeld of our lattice-based protocol. We believe that these proofs will ﬁnd applications
in other settings as well.
The motivation of the new zero-knowledge proof in our construction is to allow the eﬃcient use of the
selectively-secure signature scheme (i.e. a signature scheme in which the adversary declares the forgery
message before seeing the public key) of Agrawal et al. (Eurocrypt 2010) in constructions of lattice-
based group signatures and other privacy protocols. For selectively-secure schemes to be meaningfully
converted to standard signature schemes, it is crucial that the size of the message space is not too large.
Using our zero-knowledge proofs, we can strategically pick small sets for which we can provide eﬃcient
zero-knowledge proofs of membership.
1 Introduction
Commitments and zero-knowledge proofs of knowledge (ZKPoK) of committed values are a key
ingredient in many privacy-based protocols. It is also often useful to prove various relations among
the committed values, or that the committed values themselves have some particular characteristics.
An example of the latter is proving that the commitment is to an element that belongs to a
particular, possibly small, subset. Even if the subset stays ﬁxed, this is not a trivial problem to
solve eﬃciently for lattice-based commitments, and we are not aware of any previous practical
solutions to this problem.
In this paper, we use the lattice-based commitment scheme [BDL+18] over cyclotomic rings (e.g.
over Rq = Zq [X] /(X d + 1)) and consider sets that contain elements that remain stable under a
(cid:63) Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without
fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this
notice and the full citation on the ﬁrst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior speciﬁc permission and/or a fee. Request permissions from permissions@acm.org.
CCS 18, October 1519, 2018, Toronto, ON, Canada c(cid:13)2018 Association for Computing Machinery. ACM ISBN
978-1-4503-5693-0/18/10
(cid:63)(cid:63) Work done while at IBM Research – Zurich
certain subgroup of automorphisms of the cyclotomic number ﬁeld (in our example Q[X]/(X d +1)).
For the particular example of Zq [X] /(X d + 1), this allows us to construct sets of size q, q2, q4, . . .
for which we can build a ZKPoK showing that the commitment is to an element in this set.1
An application of our new proof system is towards constructing more practical lattice-based
group signatures [CvH91,BMW03]. A group signature scheme consists of three parties – a trusted
setup authority, a group manager (sometimes also called the opener), and group members. The
setup authority generates a group public key and secret keys for all the group members. Using their
secret keys, the group members can sign messages in a way that anyone can verify that a message
was signed by a member of the group, but the identity of the signer remains secret (one should not
even be able to tell that two messages were signed by the same member) to everyone except for the
opener. The opener should be able to recover the identity of any signer.
Public key
123 KB
Secret key
146 KB
Signature
581 KB
Key Generation
429 ms
Signing
405 ms
Veriﬁcation
169 ms
Table 1. User key, signature size, and running time of our C implementation on an Intel Skylake i7-6600U processor.
The instantiation is of a CPA-anonymous version of our scheme with maximum group of 280. The CCA-anonymous
version would have signatures approximately 20% longer.
Prior Work. A common way of constructing group signatures is via the sign-and-encrypt approach.
The group public key that the setup authority creates is the public key to some signature scheme,
and the secret key of a user with identity i is a signature of i. To sign a message, the group
member produces a non-interactive ZKPoK that he has the authority’s signature of some identity
i.2 Furthermore, the group member encrypts his identity i using the opener’s public key, and gives
another ZKPoK of the fact that the encryption is of the same identity as was used in the proof.
To create a practical scheme using the above approach, one typically needs to have a very eﬃcient
standard model signature scheme that is used by the setup authority to sign user identities.3 While
there exist eﬃcient standard model signature schemes based on classical assumptions (e.g. [CL02])
which can be used for constructions of fairly compact group signatures, the non-existence of such
signatures based on lattice assumptions, or any other post-quantum hard problem, is the main
culprit in the fact that the only “eﬃciency” lattice-based group signatures have is asymptotic ( c.f.
[GKV10,LLNW16,LNWX18]).
Lattice-based signature schemes in the standard model are built based on Boyen’s framework
[Boy10]. There have been eﬃciency improvements to this scheme (e.g. [DM15,KY16]) that used
polynomial lattices, but they still appear to be unsuitable for producing practical (group) signatures.
The only group signature appearing prior to our work that proposes concrete parameters uses
diﬀerent techniques, and the signatures in it are on the order of 50MB [LLNW16].
1 More precisely, because the ZKPoK of the commitment scheme in [BDL+18] is “approximate”, we are able to
prove that a small multiple of the commitment opens to the same small multiple of a member of the set. For our
application, this is good enough.
2 The ZKPoK is a Fiat-Shamir transformation of a Σ-protocol, and so the message that the group member signs is
simply added into the random oracle input.
3 The reason that signature schemes using cryptographic hash functions are not suitable is that their lack of algebraic
structure makes it very diﬃcult to construct eﬃcient proofs of knowledge that prove something about the identity
i when it is an input to the random oracle.
2
While lattice-based signatures in the standard model are ineﬃcient, there is a much more
eﬃcient selectively-secure lattice-based digital signature scheme that is implicit from the works of
[ABB10,Boy10]. A selectively-secure signature scheme is one in which the adversary declares the
message that he will forge on prior to seeing the public key. A scheme like this can be converted to
a regular signature scheme with a reduction loss of 1/|S|, where S is the message space simply by
guessing the message that the Adversary will forge on. Thus for small message spaces, this becomes
a signature scheme with a meaningful reduction from hard lattice problems.
There have been several previous papers that utilized the above-mentioned selectively secure
scheme for group signatures and related applications [NZZ15,BCN17,BCN18]. In those papers, the
techniques for proving that the identity i is in a particular set resulted in either a signiﬁcant increase
in the proof size and/or a very noticeable loss in the tightness of the proof.
Roughly-speaking, the reason that the construction in [BCN17,BCN18] is less eﬃcient than
ours is that in order to prove that the message is in a small set, the space of the messages and the
challenges is restricted to a small-dimensional sub-ring. In order to have negligible soundness error,
it is thus necessary to either increase the size of the coeﬃcients of the challenge or to repeat the
protocol several times – both of these solutions end up increasing the size of the signatures. Our
technique, on the other hand, does not require to reduce the degree of the challenge. Additionally,
the construction in [BCN17,BCN18] requires the identity to have small coeﬃcients, whereas the
proof of knowledge has “slack” and proves that the identity has somewhat larger coeﬃcients –
this further decreases the tightness of the reduction. The construction in the current paper uses a
commitment scheme in which the messages need not have small coeﬃcients [BDL+18] and so the
slack in the zero-knowledge proof (which aﬀects the randomness used in the commitment) does not
aﬀect the size of the message coeﬃcients.
Concurrently with our paper, Katz et al. [KKW18] presented a construction of a group signature
scheme based only on the assumption that AES-256 and SHA-256 behave as random oracles. For
small group sizes (approximately 213), the sizes of the signatures are in fact smaller than ours (while
the signing time is still around 8 times longer). For larger group sizes, however, our signatures are
smaller. Additionally the opening procedure of [KKW18] may be prohibitive for large groups as it
is linear in the group size.
Our Contribution. In the present work we show how our new proofs for stability under automor-
phisms allow for a fairly natural, at a high level, group signature construction based on the hardnes
of lattice problems. In particular, the set of identities will be exactly those elements in Rq that
are preserved under some set of automorphisms. The size of these sets can be small (as small as
q), and so we will only lose a factor of the group size in the reduction. The idea for the ZKPoK
will then be to do the proof of knowledge with the commitments of i rather than with i (thus not
revealing the identity) and prove that our commitments are to elements in the appropriate set of
identities – for this we will use the module-homomorphic properties of our commitment scheme –
i.e. if i · s = u, for small s, then Com(i; r) · s =
+ Com(0; r(cid:48)). The encryption to the opener
can be done using the main idea from the veriﬁable encryption scheme from [LN17]. A point of
note is that the selectively-secure signature scheme requires that the messages come from a set S
such that the diﬀerence of any two elements from the set is invertible. This is compatible with our
deﬁnition of sets because they turn out to be subﬁelds of the original ring Rq.
(cid:20)0
(cid:21)
u
Instantiating our scheme with concrete parameters gives group signatures of around 580 KB,
which is almost a 2 order of magnitude reduction from [LLNW16] and about an order of magnitude
3
reduction over the concurrent construction in [BCN18].4 Our main technique should also applicable
to a variety of other privacy applications that require similar proofs of knowledge. For example,
one should be able to apply these techniques in a very similar manner to the constructions of
anonymous credentials as in [BCN17].
To demonstrate the practicality of our group signature scheme, we have implemented it in C. On
a laptop with an Intel Skylake i7 processor, the implementation needs 428.7 ms to generate a group
public key and one member secret key. Signing a message takes 404.5 ms and the signature can
be veriﬁed in 169.1 ms. For the signing keys of the group members one needs to sample preimages
of a linear map from a discrete Gaussian distribution. This can, in theory, be done with the GPV
sampling algorithm from [GPV08], but it requires computing the Gram-Schmidt decomposition
of a basis which is a prohibitively expensive operation in the high dimensions required for our
scheme. We have therefore implemented the Fast Fourier Orthogonalization algorithm from [DP16]
adapted to cyclotomic ﬁelds which computes a compact LDL∗ decomposition of the basis that is
used in a Fast Fourier Nearest Plane algorithm, also from [DP16], to sample preimages. This was
done before in the Falcon signature scheme [PFH+18], but contrary to that implementation, ours
supports arbitrary precision complex arithmetic since double precision is not enough for our larger
moduli.
In Sections 1.1 and 1.2, we give high-level sketches of our main results – the proof of stability
under automorphisms (the full details of which are in Sections 3 and 4) and the construction of the
group signature scheme (the full details of which are in Section 5).
1.1 Commitments and Proofs of Automorphism Stability
We will use a particular instantiation of the commitment scheme from [BDL+18] where the common
reference string public key is
and the commitment to a polynomial µ ∈ Rq requires us to pick a random polynomial r ∈ R3
small coeﬃcients and output the commitment
q with
∈ R2×3
q
(1)
(cid:20)a1
(cid:21)
a2
(cid:20)1 a1 a2
(cid:21)
0 1 a3
=
(cid:21)
(cid:20)t1
t2
(cid:20)a1
(cid:21)
a2
(cid:21)
(cid:20)0
µ
· r +
Com(µ; r) =
=
.
(2)
Using the “Fiat-Shamir with Aborts” zero-knowledge proof technique [Lyu09,Lyu12], one can prove
the knowledge of a polynomial vector ¯r with coeﬃcients somewhat larger than those in r, and a
4 Table 1 of the conference version of [BCN18] gives a signature size of 1.72MB for 80-bits of security. This security,
however, has only been calculated for the traceability part of the security of group signatures (i.e. it’s not possible
to produce a signature that cannot be traced by the opener to a particular user) which is based on the Ring-SIS
problem. The anonymity security notion (i.e. the identity of the signing group member should remain secret) is
based on the hardness of the Ring-LWE problem, and it does not appear that this has been accounted for in the
parameter setting. In particular, the Ring-LWE instance with −1/0/1 secret/noise coeﬃcients in [BCN18] is over
the ring Zq[X]/(X d + 1) where q ≈ 2115, d = 2048 (for comparison, our ring has q ≈ 280 and d = 4096, both of
which signiﬁcantly increase the complexity of the problem). By our calculation, d would need to be increased from
2048 to 8192 for the claimed security in [BCN18], and this would increase the signature size by approximately a
factor of 4, making it a little more than an order of magnitude larger than in the current work.
4
polynomial c with −1/0/1 coeﬃcients such that
(cid:21)
(cid:20)t1
c ·
(cid:20)a1
(cid:21)
· ¯r +
(cid:20) 0
(cid:21)
.
=
t2
cµ
a2
(3)
Even though (cid:107)¯r(cid:107) > (cid:107)r(cid:107) and there is an extra term c present, opening the commitment with ¯r and
c can still be binding if the parameters are appropriately set.
In our work, we will additionally show how for certain sets S ⊂ Rq, we can prove (3) and
additionally show that µ ∈ S. The sets for which we are able to show this are those that are
preserved under the automorphisms of the cyclotomic number ﬁeld Km = Q[X]/(Φm(X)). For
example, if Φm(X) = X d + 1 (where m = 2d is a power of 2), then the φ(m) = d automorphisms
are σj : X → X j for all odd integers 0 < j < 2d.
We give a protocol for a proof of knowledge as for (3) which additionally allows us to prove
that σj(µ) ≡ µ(mod q). Our proof is derived from a generalization of a zero-knowledge proof of
linear relations of commitments in (2) from [BDL+18]. In particular, we can show how to prove
linear relations for messages µi for commitments under distinct public keys
. For proving
(cid:35)
(cid:34)
(cid:20)σ(a1)
σ(a2)
a(i)
1
a(i)
2
(cid:21)
(cid:20)a1
(cid:21)
a2
(cid:21)
(cid:20)t1
t2
(cid:20)σ(t1)
(cid:21)
σ(t2)
that a commitment in (2) is closed under an automorphism σ then requires proving that the two
commitments
and
, under the respective public keys
and
, are both to the
same message – which implies that µ = σ(µ). The communication complexity of this protocol (of
the non-interactive version) involves sending essentially one extra vector of the same size as ¯r for
every automorphism. It is therefore beneﬁcial to not have to prove stability under too many σj.
Galois Theory gives us the exact group structure of the automorphisms and speciﬁes which
subsets of Km are preserved under them. It furthermore allows us to determine the minimum set of
automorphisms that are needed to generate the group. For example, an element v ∈ Q[X]/(X d + 1)
is a constant if and only if σ5(v) = σm−1(v) = v. Thus, proving stability under σ5 and σm−1 would
prove that we have committed to a constant µ. As another example, v ∈ Q[X]/(X d + 1) is of the
form α + βX d/2 for α, β ∈ Q if and only if σ5(v) = v. Thus for this set of size q2, it is only necessary
to prove stability under one automorphism.
The situation in our case is made more complicated due to the fact that we give proofs that
σj(v) ≡ v(mod q), while Galois Theory only tells us about stability of sets with coeﬃcients over Q
(i.e. without reduction modulo q). So one could fathom that σj(v) = v modulo q but σj(v) (cid:54)= v.
We show, however, that one can ﬁnd primes q such that subsets of Zq[X]/(Φm(X)) have the same
properties under automorphisms as subsets of Z[X]/(Φm(X)). In particular, we can build subsets of
size qi for all i | φ(m). For the particular case of rings of the form Zq[X]/(X d + 1), this implies that
one can have a generating set of 1 or 2 automorphisms for particular sets of size q, q2, q4, . . . , qd/2.