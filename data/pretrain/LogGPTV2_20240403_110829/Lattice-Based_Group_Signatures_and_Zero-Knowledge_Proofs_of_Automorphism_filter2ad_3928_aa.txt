# Lattice-Based Group Signatures and Zero-Knowledge Proofs of Automorphism Stability

## Authors
Rafael del Pino<sup>1,†</sup>, Vadim Lyubashevsky<sup>2</sup>, and Gregor Seiler<sup>2,3</sup>

1. ENS Paris  
2. IBM Research – Zurich  
3. ETH Zurich  
<sup>†</sup> Work done while at IBM Research – Zurich

## Abstract
We present a lattice-based group signature scheme whose outputs are more than an order of magnitude smaller than the most efficient schemes currently available in the literature. Given that lattice-based schemes can be challenging to implement efficiently, we also provide the first experimental implementation of our lattice-based group signatures, demonstrating that our construction is practical, with all operations taking less than half a second on a standard laptop.

A key component of our construction is a new zero-knowledge proof system for proving that a committed value belongs to a particular small set. The sets for which our proofs are applicable are those that contain elements that remain stable under Galois automorphisms of the underlying cyclotomic number field used in our lattice-based protocol. We believe these proofs will find applications in other settings as well.

The motivation for the new zero-knowledge proof in our construction is to allow the efficient use of the selectively-secure signature scheme (i.e., a signature scheme where the adversary declares the forgery message before seeing the public key) of Agrawal et al. (Eurocrypt 2010) in constructions of lattice-based group signatures and other privacy protocols. For selectively-secure schemes to be meaningfully converted to standard signature schemes, it is crucial that the size of the message space is not too large. Using our zero-knowledge proofs, we can strategically pick small sets for which we can provide efficient zero-knowledge proofs of membership.

## 1 Introduction
Commitments and zero-knowledge proofs of knowledge (ZKPoK) of committed values are essential components in many privacy-based protocols. It is often useful to prove various relations among the committed values or that the committed values themselves have specific characteristics. One such characteristic is proving that the commitment is to an element that belongs to a particular, possibly small, subset. Even if the subset remains fixed, this is not a trivial problem to solve efficiently for lattice-based commitments, and we are not aware of any previous practical solutions to this problem.

In this paper, we use the lattice-based commitment scheme [BDL+18] over cyclotomic rings (e.g., over \( R_q = \mathbb{Z}_q[X] / (X^d + 1) \)) and consider sets that contain elements that remain stable under a certain subgroup of automorphisms of the cyclotomic number field (in our example, \( \mathbb{Q}[X]/(X^d + 1) \)). This allows us to construct sets of size \( q, q^2, q^4, \ldots \) for which we can build a ZKPoK showing that the commitment is to an element in this set.

An application of our new proof system is towards constructing more practical lattice-based group signatures [CvH91, BMW03]. A group signature scheme consists of three parties: a trusted setup authority, a group manager (sometimes also called the opener), and group members. The setup authority generates a group public key and secret keys for all the group members. Using their secret keys, the group members can sign messages in a way that anyone can verify that a message was signed by a member of the group, but the identity of the signer remains secret (one should not even be able to tell that two messages were signed by the same member) to everyone except for the opener. The opener should be able to recover the identity of any signer.

### Performance Metrics
- **Public Key Size:** 123 KB
- **Secret Key Size:** 146 KB
- **Signature Size:** 581 KB
- **Key Generation Time:** 429 ms
- **Signing Time:** 405 ms
- **Verification Time:** 169 ms

Table 1. User key, signature size, and running time of our C implementation on an Intel Skylake i7-6600U processor. The instantiation is of a CPA-anonymous version of our scheme with a maximum group size of \( 2^{80} \). The CCA-anonymous version would have signatures approximately 20% longer.

### Prior Work
A common approach to constructing group signatures is via the sign-and-encrypt method. The group public key that the setup authority creates is the public key to some signature scheme, and the secret key of a user with identity \( i \) is a signature of \( i \). To sign a message, the group member produces a non-interactive ZKPoK that he has the authority’s signature of some identity \( i \). Furthermore, the group member encrypts his identity \( i \) using the opener’s public key and provides another ZKPoK that the encryption is of the same identity as used in the proof.

To create a practical scheme using this approach, one typically needs a very efficient standard model signature scheme that the setup authority uses to sign user identities. While there exist efficient standard model signature schemes based on classical assumptions (e.g., [CL02]), which can be used for constructing fairly compact group signatures, the lack of such signatures based on lattice assumptions, or any other post-quantum hard problem, is the main reason that the only "efficiency" lattice-based group signatures have is asymptotic (c.f. [GKV10, LLNW16, LNWX18]).

Lattice-based signature schemes in the standard model are built based on Boyen’s framework [Boy10]. There have been efficiency improvements to this scheme (e.g., [DM15, KY16]) that used polynomial lattices, but they still appear to be unsuitable for producing practical (group) signatures. The only group signature appearing prior to our work that proposes concrete parameters uses different techniques, and the signatures in it are on the order of 50MB [LLNW16].

While lattice-based signatures in the standard model are inefficient, there is a much more efficient selectively-secure lattice-based digital signature scheme that is implicit from the works of [ABB10, Boy10]. A selectively-secure signature scheme is one in which the adversary declares the message that he will forge on prior to seeing the public key. A scheme like this can be converted to a regular signature scheme with a reduction loss of \( \frac{1}{|S|} \), where \( S \) is the message space, simply by guessing the message that the Adversary will forge on. Thus, for small message spaces, this becomes a signature scheme with a meaningful reduction from hard lattice problems.

There have been several previous papers that utilized the above-mentioned selectively secure scheme for group signatures and related applications [NZZ15, BCN17, BCN18]. In those papers, the techniques for proving that the identity \( i \) is in a particular set resulted in either a significant increase in the proof size and/or a very noticeable loss in the tightness of the proof.

Roughly speaking, the reason that the construction in [BCN17, BCN18] is less efficient than ours is that, in order to prove that the message is in a small set, the space of the messages and the challenges is restricted to a small-dimensional sub-ring. To have negligible soundness error, it is thus necessary to either increase the size of the coefficients of the challenge or to repeat the protocol several times—both of these solutions end up increasing the size of the signatures. Our technique, on the other hand, does not require reducing the degree of the challenge. Additionally, the construction in [BCN17, BCN18] requires the identity to have small coefficients, whereas the proof of knowledge has "slack" and proves that the identity has somewhat larger coefficients—this further decreases the tightness of the reduction. The construction in the current paper uses a commitment scheme in which the messages need not have small coefficients [BDL+18], and so the slack in the zero-knowledge proof (which affects the randomness used in the commitment) does not affect the size of the message coefficients.

Concurrently with our paper, Katz et al. [KKW18] presented a construction of a group signature scheme based only on the assumption that AES-256 and SHA-256 behave as random oracles. For small group sizes (approximately \( 2^{13} \)), the sizes of the signatures are, in fact, smaller than ours (while the signing time is still around 8 times longer). For larger group sizes, however, our signatures are smaller. Additionally, the opening procedure of [KKW18] may be prohibitive for large groups as it is linear in the group size.

### Our Contribution
In the present work, we show how our new proofs for stability under automorphisms allow for a fairly natural, high-level group signature construction based on the hardness of lattice problems. Specifically, the set of identities will be exactly those elements in \( R_q \) that are preserved under some set of automorphisms. The size of these sets can be small (as small as \( q \)), and so we will only lose a factor of the group size in the reduction. The idea for the ZKPoK will then be to do the proof of knowledge with the commitments of \( i \) rather than with \( i \) (thus not revealing the identity) and prove that our commitments are to elements in the appropriate set of identities. For this, we will use the module-homomorphic properties of our commitment scheme—i.e., if \( i \cdot s = u \) for small \( s \), then \( \text{Com}(i; r) \cdot s = \text{Com}(u; r') \). The encryption to the opener can be done using the main idea from the verifiable encryption scheme from [LN17]. A point of note is that the selectively-secure signature scheme requires that the messages come from a set \( S \) such that the difference of any two elements from the set is invertible. This is compatible with our definition of sets because they turn out to be subfields of the original ring \( R_q \).

Instantiating our scheme with concrete parameters gives group signatures of around 580 KB, which is almost a two-order-of-magnitude reduction from [LLNW16] and about an order-of-magnitude reduction over the concurrent construction in [BCN18]. Our main technique should also be applicable to a variety of other privacy applications that require similar proofs of knowledge. For example, one should be able to apply these techniques in a very similar manner to the constructions of anonymous credentials as in [BCN17].

To demonstrate the practicality of our group signature scheme, we have implemented it in C. On a laptop with an Intel Skylake i7 processor, the implementation needs 428.7 ms to generate a group public key and one member secret key. Signing a message takes 404.5 ms, and the signature can be verified in 169.1 ms. For the signing keys of the group members, one needs to sample preimages of a linear map from a discrete Gaussian distribution. This can, in theory, be done with the GPV sampling algorithm from [GPV08], but it requires computing the Gram-Schmidt decomposition of a basis, which is a prohibitively expensive operation in the high dimensions required for our scheme. We have therefore implemented the Fast Fourier Orthogonalization algorithm from [DP16] adapted to cyclotomic fields, which computes a compact LDL* decomposition of the basis that is used in a Fast Fourier Nearest Plane algorithm, also from [DP16], to sample preimages. This was done before in the Falcon signature scheme [PFH+18], but contrary to that implementation, ours supports arbitrary precision complex arithmetic since double precision is not enough for our larger moduli.

In Sections 1.1 and 1.2, we give high-level sketches of our main results—the proof of stability under automorphisms (the full details of which are in Sections 3 and 4) and the construction of the group signature scheme (the full details of which are in Section 5).

### 1.1 Commitments and Proofs of Automorphism Stability
We will use a particular instantiation of the commitment scheme from [BDL+18] where the common reference string public key is:

\[
\begin{pmatrix}
a_1 & a_2 \\
1 & a_3
\end{pmatrix}
\]

and the commitment to a polynomial \( \mu \in R_q \) requires us to pick a random polynomial \( r \in R_q \) with small coefficients and output the commitment:

\[
\text{Com}(\mu; r) = 
\begin{pmatrix}
t_1 \\
t_2
\end{pmatrix}
=
\begin{pmatrix}
a_1 & a_2 \\
1 & a_3
\end{pmatrix}
\begin{pmatrix}
\mu \\
r
\end{pmatrix}
+
\begin{pmatrix}
0 \\
\mu
\end{pmatrix}
\]

Using the "Fiat-Shamir with Aborts" zero-knowledge proof technique [Lyu09, Lyu12], one can prove the knowledge of a polynomial vector \( \bar{r} \) with coefficients somewhat larger than those in \( r \), and a polynomial \( c \) with \(-1/0/1\) coefficients such that:

\[
\begin{pmatrix}
t_1 \\
t_2
\end{pmatrix}
= c \cdot
\begin{pmatrix}
a_1 & a_2 \\
1 & a_3
\end{pmatrix}
\begin{pmatrix}
\bar{r} \\
\mu
\end{pmatrix}
+
\begin{pmatrix}
0 \\
c \mu
\end{pmatrix}
\]

Even though \( \|\bar{r}\| > \|r\| \) and there is an extra term \( c \) present, opening the commitment with \( \bar{r} \) and \( c \) can still be binding if the parameters are appropriately set.

In our work, we will additionally show how, for certain sets \( S \subset R_q \), we can prove (3) and additionally show that \( \mu \in S \). The sets for which we are able to show this are those that are preserved under the automorphisms of the cyclotomic number field \( K_m = \mathbb{Q}[X]/(\Phi_m(X)) \). For example, if \( \Phi_m(X) = X^d + 1 \) (where \( m = 2d \) is a power of 2), then the \( \varphi(m) = d \) automorphisms are \( \sigma_j: X \to X^j \) for all odd integers \( 0 < j < 2d \).

We give a protocol for a proof of knowledge as for (3) which additionally allows us to prove that \( \sigma_j(\mu) \equiv \mu \pmod{q} \). Our proof is derived from a generalization of a zero-knowledge proof of linear relations of commitments in (2) from [BDL+18]. In particular, we can show how to prove linear relations for messages \( \mu_i \) for commitments under distinct public keys. For proving that a commitment in (2) is closed under an automorphism \( \sigma \), it then requires proving that the two commitments under the respective public keys are both to the same message—which implies that \( \mu = \sigma(\mu) \). The communication complexity of this protocol (of the non-interactive version) involves sending essentially one extra vector of the same size as \( \bar{r} \) for every automorphism. It is therefore beneficial to not have to prove stability under too many \( \sigma_j \).

Galois Theory gives us the exact group structure of the automorphisms and specifies which subsets of \( K_m \) are preserved under them. It furthermore allows us to determine the minimum set of automorphisms that are needed to generate the group. For example, an element \( v \in \mathbb{Q}[X]/(X^d + 1) \) is a constant if and only if \( \sigma_5(v) = \sigma_{m-1}(v) = v \). Thus, proving stability under \( \sigma_5 \) and \( \sigma_{m-1} \) would prove that we have committed to a constant \( \mu \). As another example, \( v \in \mathbb{Q}[X]/(X^d + 1) \) is of the form \( \alpha + \beta X^{d/2} \) for \( \alpha, \beta \in \mathbb{Q} \) if and only if \( \sigma_5(v) = v \). Thus, for this set of size \( q^2 \), it is only necessary to prove stability under one automorphism.

The situation in our case is made more complicated due to the fact that we give proofs that \( \sigma_j(v) \equiv v \pmod{q} \), while Galois Theory only tells us about stability of sets with coefficients over \( \mathbb{Q} \) (i.e., without reduction modulo \( q \)). So one could fathom that \( \sigma_j(v) = v \pmod{q} \) but \( \sigma_j(v) \neq v \). We show, however, that one can find primes \( q \) such that subsets of \( \mathbb{Z}_q[X]/(\Phi_m(X)) \) have the same properties under automorphisms as subsets of \( \mathbb{Z}[X]/(\Phi_m(X)) \). In particular, we can build subsets of size \( q^i \) for all \( i | \varphi(m) \). For the particular case of rings of the form \( \mathbb{Z}_q[X]/(X^d + 1) \), this implies that one can have a generating set of 1 or 2 automorphisms for particular sets of size \( q, q^2, q^4, \ldots, q^{d/2} \).