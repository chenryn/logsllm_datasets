Module 1
A journey from high level languages, through 
assembly, to the running process
https://github.com/hasherezade/malware_training_vol1
Introduction
PE injections in malware
• At various stages of execution, malware may inject its implants to other processes
• Typical goals: process impersonation, API hooking
• Every malware author wants to avoid dropping the malicious file on the disk, so various 
flavors of manual loading are deployed
• The official Win API does not support loading file from a memory buffer (only from a file)
• Almost every malware crypter uses some technique of PE injection
PE injections in malware
• Crypters
https://blog.malwarebytes.com/threat-analysis/2015/12/malware-crypters-the-deceptive-first-layer/
Techniques of PE injection
Manual loading of EXE file
1.
Map from Raw Format into Virtual Format
2.
Apply relocations
3.
Fill imports
4.
Connect to PEB
5.
Execute the code (create a new thread of redirect execution of an existing thread)
Process Hollowing
1.
Map from Raw Format into Virtual Format
2.
Apply relocations
3.
Fill imports
4.
Connect to PEB
5.
Execute the code: redirect the Entry Point
Manual PE loading
• Process Hollowing
https://github.com/hasherezade/libpeconv/tree/master/run_pe
Process Doppelganging
• Map from Raw Format into Virtual Format (create a Section)
• Apply relocations
• Fill imports
• Execute the code: create the process out of the Section
Process Doppelganging
• Overview
https://github.com/hasherezade/process_doppelganging
Transacted Hollowing
• Overview
Module Overloading
• An idea of @TheRealWover
• PoC implemented by me
• https://github.com/hasherezade/module_overloading
• Similar to DLL hollowing, but the implant is not connected to the list of modules (may 
deceive some tools that search for the artefacts typical for hollowing)
Module Overloading
1.
Load a target DLL as MEM_IMAGE
2.
Load the implant DLL manually (with filling imports)
3.
Relocate the implant to the target base
4.
Overwrite the target image with the implant
5.
Fetch implant’s Entry Point
6.
Execute the implant
Module Overloading
In action:
https://github.com/hasherezade/module_overloading
Exercise 1
• Let’s take a look at the implementation
• Process Hollowing (aka Run PE):
• https://github.com/hasherezade/libpeconv/blob/master/run_pe
• Process Doppelganging:
• https://github.com/hasherezade/process_doppelganging
• Module Overloading:
• https://github.com/hasherezade/module_overloading