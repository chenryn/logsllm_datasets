duration.
SNSNSNSNclientclientclientclientclientclientclientclientclientclientclient142223561.client sends “ICQ”query to its parent SN2.If parent SN can not find file, then forward query to connected SNs3.SN that knows client which has “ICQ.exe”answers to query4.Parent SN relays answer to the client5.Connect to the client which has “ICQ.exe”6.Download “ICQ.exe”Have “ICQ.exe”Want to get “ICQ.exe”Over the past few years, more than 200 viruses and worms have
been reported to employ a peer-to-peer network as one of their
spreading platforms [2]. Unlike self-propagating network worms
such as Code Red [19] and Slammer [20], most malicious pro-
grams in a P2P ﬁle-sharing network do not send their copies in the
network by themselves. Instead, these viruses4 propagate to other
client hosts as these clients engage in ﬁle exchanges.
One characteristic of P2P viruses is that they tend to generate
a large number of viral ﬁles in the user’s sharing folder upon in-
fection. Each viral ﬁle has a different ﬁlename that is likely to be
popular and thus have a high chance of getting downloaded by other
clients. Examples of the ﬁlenames often chosen by P2P viruses in-
clude “Adobe Photoshop 10 full.exe”, “WinZip 8.1.exe”, and “ICQ
Lite (new).exe”, all of which may appear legitimate to an unwary
user.
3. DATA COLLECTION
We used three machines to run Krawler: one machine (2.1 GHz
dual-core CPU and 1 GByte RAM) was dedicated for a fetcher.
The other two machines (2.1 GHz CPU and 1.5 GBbyte RAM and
1.42 GHz CPU and 1 GByte RAM) ran 20 and 10 fetchers, respec-
tively.5 Although using more fetchers could speed up crawling, the
CPU and bandwidth constraints kept us from running more than 30
fetchers at a time. With the above conﬁguration, Krawler was capa-
ble of investigating more than 60,000 ﬁles in an hour on average. In
this section, we describe two measurement methods that enable us
to (1) collect a large number of popular executable ﬁles distributed
in the KaZaA network and (2) identify malicious programs in the
set of collected ﬁles.
3.1 Query Strings
Ideally, an extensive analysis would be possible if we could
look up the complete information about ﬁles stored in each client’s
KaZaA sharing folder. However, to our knowledge, there is no way
to extract such information from a supernode6. When queried, a
supernode returns only the information about ﬁles whose name (or
metadata information) contains the query string. We observe that
this query process often takes long (several seconds and longer)
when more than 10 query strings are sent at once. As a result,
many studies rely on a small set of ﬁles that match a particular set
of query strings [11, 7].
As discussed in §2.3, many viruses propagate in a P2P network
by tricking users into downloading an infected ﬁle and executing
it. To increase the chances of being queried, some viruses generate
multiple copies of a viral program, giving each copy a different
name (e.g., ICQ Lite .exe, ICQ Pro 2003b.exe, MSN Messenger
5.2.exe), and placing them in the user’s sharing folder. Therefore,
in this study, we investigate only .exe ﬁles and not .mp3 and
other media ﬁles that are rarely exploited by known viruses.
Table 1 shows a set of 24 keywords that we compiled from the
ﬁlenames of the 30 most popular ﬁles listed at www.download.com.
The Web site offers reviews and free downloads of shareware and
freeware and attracts a large number of users: a popular ﬁle some-
times exceeds a million downloads per week. The ﬁles that were
listed in February 23, 2006, include spyware and adware detection
software (e.g., Spyware Doctor) , Windows utilities (e.g., WinZip),
4We use the term, “virus”, as opposed to “worm”, to refer to a
malicious program spreading in a P2P network since it requires
human intervention.
5In crawling in February, 2006, we used only one machine for 20
fetchers, but we add another machine later.
6Recall that each client periodically uploads the information about
the ﬁles in the sharing folder to the parent supernode.
Ad, Spyware, LimeWire, ICQ, Registry, SpyBot, WinZip, Mor-
pheus, All, iMesh, IrfanView, WinRar, DivX, BitComet, RealPlayer,
PC, Adobe, Trillian, Camfrog, SmartFTP, Nero, MSN, Quick,
Knight
Table 1: Query strings used for data collection
and P2P clients (e.g., Morpheus and BitComet). Since there are no
statistics available about ﬁle popularity in the KaZaA network, we
use these ﬁles as proxies for popular ﬁles.
3.2 Virus Signatures
We compiled a list of malicious programs that use P2P a prop-
agation vector from many security vendor Web sites (F-secure,
McAfee, Sophos). Since 2002, more than 200 such programs have
been that were identiﬁed by those vendors [2, 23]. Among these,
we have the content hashes of 71 distinct malicious programs.7
We used the Sig2Dat [24] tool to get the content hash of each
malicious program. The KaZaA content hash is 20 bytes in size:
the ﬁrst 16 bytes are the MD5 [15] of the ﬁrst 300 Kbyte of the ﬁle.
The last 4 bytes are the value of the custom made hash function of
the length of the ﬁle. In our study, only the ﬁrst 16 bytes are used
for identifying a known virus because many viruses change their
size by appending an arbitrary number of bytes. Table 2 shows a
break-down of these malicious programs by the propagation vector.
Propagation
P2P only
P2P + email
P2P + mes-
senger
P2P + back-
door
P2P + email
+ IRC
Mail only
Etc
Virus List
Apsiv, Darker, Doep, Duload, HLLP.Hantaner, Logpole,
PMX, SdDrop and variants (2), Sndc, Steph, Tanked and
variants (4), Theug, Kwbot and variant, Archar.a, Bare.a,
Benjamin.a, Wif, Gotorm, Harex.a, Harex.b, Harex.c,
Kazmor.a, Lolol.a, Spear.a, Parite, Togod
Bagle variants (9), Darby, Kindal, Mapson-A, Ronoper
Bropia, SdBot, Supova and variants (4)
SpyBot and variant
Swen
Bagle, MyDoom, NetSky, Yosenio, Stator
IRCBot and variant
(IRC), Tenga (RPC), Hidrag,
HLLP.19920, Agent.Gen, Cryptexe, Delf and variant,
Dropper (Human)
Table 2: Malware breakdown by the propagation vector
4. RESULTS
This section presents the analysis results of two datasets,
feb-06 and may-06, each of which contains crawling logs for
three days in February and May 2006, respectively.8 Table 3 sum-
marizes each dataset in terms of the number of responses that match
the query strings, the number of unique supernodes these responses
came from, and the number of unique KaZaA client hosts that re-
sponses are associated with.
There can be duplicate responses included in the dataset because
(1) Krawler may have contacted the same supernode multiple times
7Actually, we have content hashes of 364 malicious programs, but
71 programs are totally different types of viruses and remaining
293 programs are variants of them.
8We have more datasets that are collected in April and other dates
in May 2006, but do not present their results here as in general they
agree with the results presented in this section.
date
responses
supernodes
client hosts
feb-06
may-06
February 23, 2006 May 4, 2006
532,610
15,522
28,601
654,254
10,267
19,919
Table 3: Summary of the datasets: both datasets used the set of
query strings in Table 1 for crawling. Krawler issues 24 queries
to each supernode (in series) and gathers responses that may
come from any peering supernodes. One query may generate
multiple responses from a given supernode.
during the crawling9 and (2) the way a query is propagated among
peering supernodes (see §2.1) makes it possible that Krawler re-
ceives the same response multiple times. However, we note that
174,971 (32.9%) responses from may-06 (15.3% from feb-06)
correspond to unique content hashes, suggesting that our crawling
covered a large number of distinct ﬁles in the KaZaA network.
We observe that many responses associate with client hosts be-
hind a network address translation (NAT) box (68% in feb-06
and 52% in may-06). To differentiate between hosts behind two
different NATs, we gave a client host a unique ID based on the IP
address and the download port number. Because a download port
number is often randomly assigned, the chance of two machines
having the same ID is low: in fact, we see more than 3,000 dif-
ferent download ports are used in both datasets. We refer to an IP
address and a download port pair as a client host unless otherwise
stated.
4.1 Malware Distribution
Among the 71 malicious programs for which we have con-
tent hashes, we ﬁnd instances of 45 viruses in feb-06 and 52
viruses in may-06. Only one out 45 viruses (MyDoom) was seen
in feb-06 but not in may-06. New viruses that appeared in
may-06 include Darby, SdBot, and Duload. However, given the
small number of clients infected by these viruses (less than 4) in the
datasets, we believe that these new additions or deletions of viruses
are due to host churn (the arrival and departure of client hosts).
Figure 2 compares the percentages of infected clients by the set of
top 10 viruses seen in each dataset. Interestingly, the percentages
remain almost unchanged between the two datasets. The Tanked
virus had infected more client hosts by 0.4% (1.7% in feb-06
vs. 2.1% in may-06), but the difference is still small. Overall,
the percentage of infected hosts is 12.6% in feb-06 and 13.0% in
may-06.
The number viral ﬁles that these infected client hosts bring into
the KaZaA P2P network is signiﬁcant. Among the responses,
22.9% in feb-06 and 15.2% in may-06 appear infected. More
importantly, we ﬁnd that 22 out of 24 query strings that we used for
crawling returned at least one viral ﬁle: the responses associated
with the “DivX” query string account for 23% of the entire viral
ﬁles collected in feb-06 (17.6% in may-06). The percentage of
viral ﬁles is over 20% for the half of the query strings. Depending
on the size of the pool of legitimate ﬁles that are already placed in a
ﬁle sharing network, the probability of downloading an infected ﬁle
varies for each query string (or keyword). As shown in Figure 3,
9We see that the number of new supernodes that Krawler visited
sharply increases in the ﬁrst three hours, but as new hosts arrive,
previously unseen supernodes constantly appear (more than 100 an
hour) over the entire collection period.
Figure 2: Top 10 viruses: This graph compares the percent-
ages of infected client hosts to the union of top 10 viruses found
in feb-06 and may-06. The X-axis is virus names sorted
by the percentage of the infected clients in feb-06. Netsky,
which ranked 11th in feb-06, is included as it ranked 8th in
may-06.
for certain or keywords such as “ICQ” and “Trillian”, the chances
of hitting an infected ﬁle is over 70%!
We ﬁnd that both keywords (“ICQ” and “Trillian”) are exploited
by over 10 different viruses. Clearly, viruses favor popular ﬁle
names to disguise themselves. For instance, about 20 different
viruses are found from the crawled ﬁles in response to “DivX”,