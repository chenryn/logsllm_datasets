新的代码
你现在的位置
237
---
## Page 274
火鸡转接器
如果它走起路来像只鸭子，叫起来像
只鸭子，那么他必定可能是一只鸭子
包装了鸭子适配器的火鸡······
让我们来看看使用中的适配器。还记得第1章的鸭子吧？让我们
看看鸭子接口和类的一个稍微简化的版本：
public interface Duck {
这一次，鸭子实现了
public void quack();
public void fly();
Duck接口，具备呱呱叫和
飞行的能力。
绿头鸭是鸭子的子类。
public class MallardDuck implements Duck {
public void quack()(
System.out.println("Quack") ;
K
很简单的实现：只是打印
出鸭子在做些什么。
public void fly(){
System.out.println("I'm flying");
为您介绍最新的“街头顽禽”：
火鸡不会呱呱叫，只会咯
public interface Turkey {
咯（so66le)9。
public void gobble() ;
public void fly() ;
7
PDG
火鸡金飞，虽然飞不远。
238
第7章
---
## Page 275
适配器模式
public class WildTurkey implements Turkey (
这是火鸡的一个具体实现。
public void gobble()(
就和喘子一样，只是打印
System.out.println("Gobble gobble");
出火鸡的动作说明。
public void fly(){
System.out.println("I'm flying a short distance");
现在，假设你缺鸭子对象，想用一些火鸡对象来冒充。
显而易见，因为火鸡的接口不同，所以我们不能公然拿来用。
那么，就写个适配器吧：
再靠近一点
首先，你需要实现想转换成的类型接口
也就是你的客户所期望看到的接口。
public class TurkeyAdapter implements Duck {
Turkey turkey;
接着，需要取得要适配的对象引用，
public TurkeyAdapter (Turkey turkey)(4
这里我们利用构造器取得这个引用。
this.turkey = turkey;
现在我们需要实现提口中所有的方法。
public void quack()
turkey.gobble () ;
guack(）在类之间的转换很筒单，只要调用
so66le（）就可以了。
public void fly(){
for（int i=0;i>
连配器实现目标
request)
摇口。
客户只看到目标接口。
Adapter
Adaptee
request)
specifcRequest)
送配器与被途
所有的请求都造托
配老组合。
给被递配者。
这个适配器模式充满着良好的0O设计原则：使用对象组合，以修改的接口包装
被适配者：这种做法还有额外的优点，那就是，被适配者的任何子类，都可以
搭配着适配器使用。
也请留意，这个模式是如何把客户和接口绑定起来，而不是和实现绑定起来的。
我们可以使用数个适配器，每一个都负责转换不同组的后台类。或者，也可以
加上新的实现，只要它们遵守目标接口就可以。
你现在的位置
243
---
## Page 280
对象和类的适配器
对象和类的适配器
现在，尽管已经定义了这个模式，但其实我们还没有告诉你有关的一切。实
适配器和类适配器。前一页是对象适配器的图。
重继承才能够实现它，这在Java中是不可能的。但是当你在使用多重继承语言
的时候，还是可能遇到这样的需求。让我们看看多重继承的类图。
Client
Target
Adaptee
request()
specificRequest0
Adapter
request()
类遥配器不是使用迎合来
连配被连配者，而是继承
被遥配者和目标类。
看起来很熟悉吗？没错，唯一的差别就在于适配器继承了Target和
Adaptee。而对象适配器利用组合的方式将请求传送给被适配者。
RAIN
POWER
对象适配器和类适配器使用两种不同的适配方法（分别是组合与继
PDG
承）。这两种实现的差异如何影响适配器的弹性？
244
---
## Page 281
适配器模式
鸭子”帖
你的任务是把鸭子和火鸡的帖，放置到下图中它们
在前面例子里所扮演的角色上。（试着不要翻页
看）。然后加上你自己的批注来描述如何工作。
类适配器
Client
Target
Adaptee
request()
specificRequest()
Adapter
equest()
对象适配器
>
Target
request()
Adapter
Adaptee
request()
speciicRequest)
把这些拖到类图上，表示图中的哪
一部分代表等子，哪一部分代表火
鸡。
PDG
你现在的位置
245
---
## Page 282
习题解答
注意一：类适配器使用多重
“鸭子”帖
继承，所以你不能在ava中这
样做。
解答
火鸡类
鸭子类
类适配器
Client
arger
Adaptee
equest()
speciffcRequest)
客户认为他正在和等
火鸡类没有鸭子的方法，但
子沟通。
目标是醇子类，是客户
是遥配器可以将对聘子方法
在算上调用方法的类。
Adapter
的调用，转接到调用火难方
request()
法。
通过扩展两个类（鸭子和火鸡）
遥配器使得火鸡可以响应对鸭子的
请求。
鸭子接口
对象适配器
Clien
nterface:
火鸡类没有和膀子一样的接口，捕句话说
Target
火难没有4uack（）方法…..
st()
客户认为他正在和鸭
子沟通。
就如同类遥配器，国标是
火对象
鸭子类，这是客户所调用