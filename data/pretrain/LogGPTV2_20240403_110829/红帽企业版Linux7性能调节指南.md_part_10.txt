能。通过最小化多节点间共享的文件系统区域，您可将缓存失效的风险最小化。
41
红红帽帽企企业业版版 Linux 7 性性能能调调节节指指南南
第第 6 章章 网网络络
网络子系统由很多敏感连接的不同部分构成。红帽企业版 Linux 7 网络因此旨在为大多数工作负载提供最佳性
能，并且自动优化其性能。因此，不需要时常手动调节网络性能。本章探讨了可以对功能网络系统做的进一步
优化。
网络性能问题有时是硬件故障或基础结构层故障造成的。解决这些问题超出了本文的范畴。
6.1. 注注意意事事项项
要决定调优，用户需要对红帽企业版 Linux 包的接收有充分的认识。本章节解释了如何接收和处理网络数据
包，以及潜在瓶颈会出现的地方。
发送至红帽企业版 Linux 系统的数据包是由 NIC（网络接口卡）接收的，数据包置于内核硬件缓冲区或是循环
缓冲区中。NIC 之后会发送一个硬件中断请求，促使生成一个软件中断操作来处理该中断请求。
作为软件中断操作的一部分，数据包会由缓冲区转移到网络堆栈。根据数据包及用户的网络配置，数据包之后
会被转发、删除或转移到一个应用程序的 socket接收队列，并将从网络堆栈中删除。这一进程会持续进行，
直到 NIC 硬件缓冲区中没有数据包或一定数量的数据包（在 /proc/sys/net/core/dev_weight 中指
定）被转移。
6.1.1. 调调节节前前
网络性能问题最常见的是由硬件故障或基础结构层故障造成的。红帽极力推荐在开始调节网络堆栈前核实硬件
及基础结构层是否在按预期运行。
6.1.2. 数数据据包包接接收收瓶瓶颈颈
虽然网络堆栈基本上是自我优化的，但是在网络堆栈处理过程中有很多导致瓶颈且降低性能的问题。
⁠NIC 硬硬件件缓缓冲冲区区或或循循环环缓缓冲冲区区
如果大量的数据包被弃置，硬件缓冲区就会成为瓶颈。要监控系统传送的数据包，请见
＜第 6.2.4 节 “ethtool”＞。
硬⁠硬件件或或软软件件中中断断队队列列
中断会增加延迟，争用处理器。处理器如何处理中断，请见 ＜第 3.1.3 节 “中断请求管理”＞。如何
监控系统中断处理，请见 ＜第 3.2.3 节 “/proc/ 中断”＞。影响中断处理的配置选项，请见
＜第 3.3.7 节 “设置中断关联”＞。
应⁠应用用程程序序的的 socket接接收收队队列列
应用程序接收队列的瓶颈是大量的数据包没有复制到请求应用程序中，或是 UDP 输入错误
（InErrors）增加，此错误在 /proc/net/snmp 中。监控系统中的这些错误，请见
＜第 6.2.1 节 “ss”＞ 和 ＜第 6.2.5 节 “/proc/net/snmp”＞。
6.2. 监监控控和和诊诊断断性性能能问问题题
红帽企业版 Linux 7 提供大量有用的工具来监控系统性能和诊断与网络子系统有关的性能问题。本章对可用工
具进行了概述并举例说明如何使用它们来监控和诊断与网络相关的性能问题。
6.2.1. ss
42
第⁠第 6 章章 网网络络
ss 是一个命令行实用程序，显示关于 socket的数据信息，允许管理员随时评估设备性能。ss 列表会默认打
开没有注意到但已建立了连接的 TCP socket，但是会提供大量有用的选项来给管理员筛选特定的 socket数
据。
红帽推荐在红帽企业版 Linux 7 中使用 ss 来替代 netstat。
ss 由 iproute 数据包提供。更多信息请见手册页：
$ man ss
6.2.2. ip
ip 实用程序允许管理员管理和监控线路、设备、路由策略及通道。ip monitor 指令可以持续监控设备、地
址和线路的状况。
ip 由 iproute 数据包提供。使用 ip 详情请见手册页：
$ man ip
6.2.3. dropwatch
Dropwatch 是一个交互工具，用来监控和记录内核弃置的数据包。
更多信息，请见 dropwatch 手册页：
$ man dropwatch
6.2.4. ethtool
ethtool 实用程序允许管理员查看和编辑网络接口卡的设置。它有助于观察特定设备的数据，例如该设备弃
置的数据包数量。
用户可以使用 ethtool -S 查看特定设备的计数状态和想要监控的设备名称。
$ ethtool -S devname
更多信息，请见手册页：
$ man ethtool
6.2.5. /proc/net/snmp
/proc/net/snmp 文件显示的数据是 snmp 用来代理监控和管理 IP、ICMP、TCP和 UDP 的。定期检查此
文件可以协助管理员识别异常值，从而识别潜在的性能问题。例如，UDP 输入错误（InErrors）增加，且
错误在/proc/net/snmp 中，就意味着 socket接收队列中出现了瓶颈。
6.2.6. 使使用用 SystemTap 监监控控网网络络
《红帽企业版 Linux 7 SystemTap 初学者指南》包含很多有用的示例脚本以分析和监控网络性能。
以下 SystemTap 示例脚本与网络有关，可能有助于诊断网络性能问题。默认安装在
/usr/share/doc/systemtap-client/examples/network 目录下。
43
红红帽帽企企业业版版 Linux 7 性性能能调调节节指指南南
⁠nettop.stp
每 5 秒显示进程列表（进程标识符和指令），包括发送和接收的数据包，以及间隔时间里进程发送
和接收的数据量。
⁠socket-trace.stp
在 Linux 内核 net/socket.c 文件中检测每个功能，并显示跟踪数据。
⁠tcp_connections.stp
显示每个系统接受的新传入的 TCP 连接信息。信息包括 UID 、接受该连接的指令、指令的进程标
识符、连接端口和发起请求的 IP 地址。
⁠dropwatch.stp
每 5 秒显示内核释放的 socket缓冲区数量。
《红帽企业版 Linux 7 SystemTap 初学者指南》可从
http://access.redhat.com/site/documentation/Red_Hat_Enterprise_Linux/ 中获取。
6.3. 配配置置工工具具
红帽企业版 Linux 提供大量工具来协助管理员配置系统。本章概述了可用的工具并举例说明如何使用它们来解
决在红帽企业版 Linux 7 中与网络相关的性能问题。
但要记住的重要的一点是，网络性能问题有时是硬件故障或基础结构层故障造成的。红帽极力推荐在开始调节
网络堆栈前先核实硬件及基础结构层在按预期运作。
此外，比起重新配置网络子系统来说，通过改变应用程序来解决一些网络性能问题显得较为容易。通常，配置
应用程序来运行频繁的 posix 调用是个好办法，即使这意味着在应用程序空间排列数据，但这使得数据存储灵
活且能按要求换入或换出内存。
6.3.1. 网网络络性性能能 Tuned-adm 配配置置文文件件
tuned-adm 对很多特定用例提供大量不同的配置文件以提高性能。以下配置文件有助于提高网络性能。
延迟性能
网络延迟
网络吞吐量
关于这些配置文件的更多信息，请见 ＜第 A.6 节 “tuned-adm”＞。
6.3.2. 配配置置硬硬件件缓缓冲冲区区
如果硬件缓冲区弃置了大量的数据包，那么有很多可能的解决方法。
减⁠减缓缓输输入入流流量量
筛选传入的流量，减少加入的多播组数量或减少广播流量，以降低队列填充率。筛选传入流量的方
法，详情请见 Red Hat Enterprise Linux 7 Security Guide。关于多播组详情，请见红帽企业版
Linux 7 聚类分析文档。关于广播流量详情，请见 《红帽企业版 Linux 7 系统管理员参考指南》，或
用户想要配置的设备相关文档。所有红帽企业版 Linux 7 的文档可从
http://access.redhat.com/site/documentation/Red_Hat_Enterprise_Linux/ 中获取。
调⁠调整整硬硬件件缓缓冲冲队队列列
44
第⁠第 6 章章 网网络络
通过增加队列的大小以减少传送的数据包数量，使其不易过剩。用户可以使用 ethtool 指令来更改
网络设备的 rx/tx 参数：
# ethtool --set-ring devname value
改⁠改变变队队列列的的排排出出率率
设备重量是指设备一次可以接收的数据包数量（单个预定处理器访问）。用户可以通过提高设备重
量以增加队列的排出比率，这由 dev_weight 参数控制。此参数可以通过改变
/proc/sys/net/core/dev_weight 文件的内容来做临时更改，或使用 sysctl 进行永久更
改，这由 procps-ng 数据包提供。
改变队列排出率通常是缓解不良网络性能最简单的方法。但是，增加设备一次可以接收的数据包数量会消耗处
理器额外的时间，在此期间不可调度其他进程，因此可能会导致其他性能问题。
6.3.3. 配配置置中中断断队队列列
如果分析显示高延迟，系统可能受益于基于轮询的包接收，而不是基于中断的包接收。
6.3.3.1. 配配置置繁繁忙忙轮轮询询
繁忙轮询有助于减少网络接收路径中的延迟， 使 socket 层代码查询网络设备的接收队列并禁用网络中断，这
可以消除由于中断和由此产生的环境切换所造成的延误。但是，它会增加 CPU 的使用率。繁忙轮询可以防止
CPU 进入睡眠状态，睡眠状态会造成额外的功耗。
繁忙轮询是默认禁用的。要在特定 socket 中启用繁忙轮询，请按以下指示：
将 sysctl.net.core.busy_poll 设置为除 0 以外的值。这一参数控制的是 socket 轮询和选择位于
等待设备队列中数据包的微秒数。红帽推荐值为 50。
添加 SO_BUSY_POLL socket 选项至 socket。
要全局启用繁忙轮询， 须将 sysctl.net.core.busy_read 设置为除了 0 以外的值。这一参数控制了
socket 读取位于等待设备队列中数据包的微秒数，且设置了 SO_BUSY_POLL 选项的默认值。红帽推荐在
socket 数量少时将值设置为 50 ， socket 数量多时将值设置为 100。对于 socket 数量极大时（超过几
百），请使用 epoll。
繁忙轮询由以下驱动程序支持。红帽企业版 Linux 7 支持这些驱动程序。
bnx2x
be2net
ixgbe
mlx4
myri10ge
6.3.4. 配配置置 socket 接接收收队队列列
如果分析数据显示，数据包由于 socket 队列排出率太慢而被弃置，有几种方法来解决由此产生的性能问题。
减⁠减少少传传入入流流量量的的速速度度
减少队列填充速率可以通过筛选或弃置进入队列前的数据包，或是减少设备重量。
增⁠增加加应应用用程程序序的的 socket 队队列列深深度度
45
红红帽帽企企业业版版 Linux 7 性性能能调调节节指指南南
如果一个 socket 队列接收数量有限的涌入流量，增加 socket 的队列深度以便与涌入的流量大小相
配，从而防止数据包被弃置。
6.3.4.1. 减减少少传传入入流流量量的的速速度度
筛选传入流量或降低网络接口卡的设备重量来减少传入的流量。关于筛选传入流量的方法，详情请见 《红帽企
业版 Linux 7 安全指南》，可从 http://access.redhat.com/site/documentation/Red_Hat_Enterprise_Linux/
中获取。
设备重量是指设备一次可以接收的数据包数量（单个预定处理器访问）。设备重量由 dev_weight 参数控
制。此参数可以通过改变 /proc/sys/net/core/dev_weight 文件的内容来做临时更改，或是使用
sysctl 来做永久更改，这由 procps-ng 数据包提供。
6.3.4.2. 增增加加队队列列深深度度
增加应用程序的 socket 队列深度往往是提高 socket 队列排出率最简单的方法，但不可能是一个长期的解决方
法。
要增加队列深度就要增加 socket 接收缓冲区的大小，可以做如下变化：
增⁠增加加 /proc/sys/net/core/rmem_default 值值
这一参数控制 socket 使用的接收缓冲区的默认大小，这个值必须小于
/proc/sys/net/core/rmem_max 的值。