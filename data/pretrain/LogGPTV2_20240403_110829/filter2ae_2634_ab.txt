### AES 256实现与攻击概述

本文讨论了基于SmartFusion2 SoC FPGA的AES 256实现。尽管SoC是混合芯片，但此次攻击仅使用了其ARM部分，特别是经典的Cortex-M3核心。软件方面则采用了OpenSSL的标准实现，这使得该攻击具有代表性。

### SmartFusion2 SoC FPGA 结构

SmartFusion2 SoC FPGA是一种集成了微处理器和可编程逻辑的混合芯片。本次攻击主要针对其ARM Cortex-M3核心，并采用标准的OpenSSL实现。

### 信号链部分

#### 天线设计

天线设计是一个复杂且严谨的过程，涉及多个因素。然而，在实际攻击中，使用的天线非常简单：一根电缆外加胶带制成的环状天线。这种简易天线虽然粗糙，但在特定条件下依然有效。

#### 攻击场景

- **目标板**：绿色PCB为目标板。
- **天线位置**：环状天线悬空固定在芯片上方。
- **信号处理**：信号通过外部放大器和带通滤波器进行处理，这些设备均为标准工业器件，价格适中。

### 采集设备

- **专用数据记录仪**：体积较大，价格昂贵。
- **USRP板子**：性能足够，价格相对合理，适合研究机构和个人使用。
- **RTL-SDR**：小巧便携，价格低廉（几十到上百人民币），足以完成攻击任务。

### 数据分析

#### 观测结果

通过上述硬件，可以清晰地观测到AES模式下的I/O操作、密钥调度过程以及14轮加密操作。

#### 分析过程

文献[1]未详细介绍分析过程，但DPA（差分功耗分析）是一种标准方法。使用Riscure's Inspector软件进行信号预处理和对齐，然后进行相关性分析以验证泄露模型的有效性。接下来，通过猜测密钥并计算相关性来确定正确密钥。

### 攻击条件与局限性

1. **完全控制目标设备**：能够输入不同的明文并控制其完成加密操作。
2. **接近目标设备**：需要测量设备的物理属性（电磁特征），距离取决于现场电磁环境。
3. **熟悉算法和实现细节**：算法通常有标准实现，实现细节可能不公开。

### 硬件成本

整个攻击过程的硬件成本低于200欧元（约1500人民币）。在国内购买，成本可能更低。

### 软件成本

Inspector是商业软件，需支付授权费用。然而，核心算法已公开，可以自行编写或使用便宜的解决方案。

### 天线改进

- **手工环状天线**：工作距离仅为几厘米。
- **PCB天线**：性能更好，但工作频率较高（400MHz），适用于Xilinx Pynq board等高频设备。
- **盘锥天线**：在理想条件下（如微波暗室），可以在1米的距离内完成攻击，但需要大量traces（240万条）。

### 防御措施

密码设备泄露的旁路信息与操作数据之间的关联性可以通过掩码或隐藏技术消除。建议使用带有保护的实现，例如Microsemi官方提供的FPGA实现。电路级别的功耗平衡技术也能一定程度上防止这类泄露。

### 参考文献

[1]  
[2]  
[3]  
[4]  
[5] Pub N F. 197: Advanced encryption standard (AES)[J]. Federal information processing standards publication, 2001, 197(441): 0311.  
[6]  
[7]  
[8] Mangard S, Oswald E, Popp T. Power analysis attacks: Revealing the secrets of smart cards[M]. Springer Science & Business Media, 2008.

* 作者：cyxu，更多安全类知识分享及热点资讯，请关注阿里聚安全的官方博客。