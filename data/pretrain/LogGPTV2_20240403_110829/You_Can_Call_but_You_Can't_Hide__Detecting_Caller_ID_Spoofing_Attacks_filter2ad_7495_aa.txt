title:You Can Call but You Can't Hide: Detecting Caller ID Spoofing Attacks
author:Hossen A. Mustafa and
Wenyuan Xu and
Ahmad-Reza Sadeghi and
Steffen Schulz
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
You Can Call But You Can‚Äôt Hide:
Detecting Caller ID SpooÔ¨Ång Attacks
Hossen Mustafa, Wenyuan Xu‚àó
Department of Computer Science and Engineering
University of South Carolina, USA
Email: {mustafah, wyxu}@cse.sc.edu
Ahmad-Reza Sadeghi, Steffen Schulz
Center for Advance Security Research Darmstadt (CASED)
Technische Universit√§t Darmstadt, Germany
Email: {ahmad.sadeghi, steffen.schulz}@trust.cased.de
Abstract‚ÄîCaller ID (caller identiÔ¨Åcation) is a service pro-
vided by telephone carriers to transmit the phone number
and/or the name of a caller to a callee. Today, most people
trust the caller ID information, and it is increasingly used to
authenticate customers (e.g., by banks or credit card compa-
nies). However, with the proliferation of smartphones and VoIP,
it is easy to spoof caller ID by installing corresponding Apps
on smartphones or by using fake ID providers. As telephone
networks are fragmented between enterprises and countries,
no mechanism is available today to easily detect such spooÔ¨Ång
attacks. This vulnerability has already been exploited with
crucial consequences such as faking caller IDs to emergency
services (e.g., 9-1-1) or to commit fraud.
In this paper, we propose an end-to-end caller ID veriÔ¨Åcation
mechanism CallerDec that works with existing combinations
of landlines, cellular and VoIP networks. CallerDec can be
deployed at the liberty of users, without any modiÔ¨Åcation to the
existing infrastructures. We implemented our scheme as an App
for Android-based phones and validated the effectiveness of our
solution in detecting spooÔ¨Ång attacks in various scenarios.
Keywords-End-user Security; Caller ID SpooÔ¨Ång;
I. INTRODUCTION
‚ÄúWhat‚Äôs worse than a bad authentication system?
A bad authentication system that people have
learned to trust‚Äù [1].
Caller ID services transmit
the phone number and/or
the name of a caller to the recipient (callee) as caller ID
intending to provide informed consent to the callee before
answering calls. However, Caller ID has been increasingly
used to authenticate the identities of callers, or to verify their
physical locations in several systems, ranging from 9-1-1
emergency services, automatic telephone banking systems,
credit card activation systems, to voicemail services. Un-
fortunately, existing caller ID protocols do not provide real
authentication and hence are untrustworthy for authenticat-
ing callers‚Äô locations or identities, because caller IDs are
vulnerable to spooÔ¨Ång attacks; i.e., an attacker can easily
send a fake caller ID to a callee. This vulnerability has
already been exploited in a variety of misuse and fraud
incidents: In the US, thousands of people were victimized
by credit card fraud with the help of caller ID spooÔ¨Ång [2],
* This author is the corresponding author.
causing a loss of more than $15 million dollars annually;
caller ID spooÔ¨Ång is also a common technique used for
swatting, which is an attempt to trick an emergency service
with false reporting of an incident ‚Äî for instance, police
ofÔ¨Åcers were tied-up in responding to a non-existent robbery
reported by pranksters [3]; drugs were misused as a result
of spoofed pharmacists‚Äô phone numbers [4]; other incidents
include identity theft, purchase scams [1], etc. Due to the
proliferation of detrimental incidents caused by caller ID
spooÔ¨Ång, the US government passed the legislation Truth
in Caller ID Act of 2009 [5] making it illegal to transmit
misleading or inaccurate caller ID information with the
intent to defraud.
However,
the legislation does not stop the misuse or
fraud, and today spooÔ¨Ång caller IDs has become much
easier, because many VoIP providers allow anyone to claim
arbitrary caller IDs through VoIP client software (e.g., x-
lite [6]), and fake ID providers allow their customers to claim
any caller ID by simply dialing a special phone number or by
utilizing readily available Apps on smartphones (e.g., Caller
ID Faker [7]). Thus, in this paper, we focus on detecting
caller ID spooÔ¨Ång attacks.
Caller ID spooÔ¨Ång is possible because caller IDs are
transmitted in plaintext with no authentication mechanisms
in place. When a call is routed between different carriers,
the callee‚Äôs carrier will simply accept the caller ID claimed
by a caller‚Äôs carrier. Given the lack of authentication be-
tween carriers, caller IDs could be trustworthy if (a) the
telephone service providers do not manipulate caller IDs,
(b) the telephone infrastructure is tightly controlled, and
no intruders could tap into the infrastructure to create an
arbitrary caller ID. These conditions were true in the early
days as the telephone network used dedicated lines operated
by a monopoly. Today, with current converging phone/data
networks and diversity of telephone service carriers, neither
holds any more. Moreover, telephone carriers may not be
able to solve the problem even if they can redesign the
protocols. This is because the entire telephone infrastructure
comprises several telephone carriers with their own trusteds
domains, and a carrier can at most verify calls originated in
its own network but not from other networks. To the best of
978-1-4799-2233-8/14 $31.00 ¬© 2014 IEEE
978-1-4799-2233-8/14 $31.00 ¬© 2014 IEEE
978-1-4799-2233-8/14 $31.00 ¬© 2014 IEEE
DOI 10.1109/DSN.2014.102
DOI 10.1109/DSN.2014.102
DOI 10.1109/DSN.2014.102
168
168
168
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
our knowledge, no mechanism is currently available to users
for detecting caller ID spooÔ¨Ång without answering the call
Ô¨Årst or without a special interface (and agreement) provided
by the carrier, as used by commercial solution TrustID [8].
Challenges and contributions. We propose to design an
end-to-end solution to detect caller ID spooÔ¨Ång. Designing
such a practical mechanism is challenging: First, only lim-
ited information and resources are available at end users. The
route of call signalling is unknown. Second, compatibility
to different protocols (GSM, VoIP, PSTN) limits the design
space. Third, a large deviation from the regular calling
procedure is unlikely to be accepted by most people. Thus,
naive solutions such as rejecting an incoming call and then
calling back, are not an option. The detection mechanisms
should be mostly automated and require little user input.
Fourth, a few legitimate services provided by telephone
companies allow the caller IDs to be different from the
calling numbers, making those caller IDs appear to be
spoofed. However, those scenarios should not be classiÔ¨Åed as
caller ID spooÔ¨Ång attacks. We address all these requirements
and design an end-to-end caller ID veriÔ¨Åcation scheme that
we call CallerDec. Essentially, CallerDec utilizes a
covert timing channel between end users to verify the caller.
The timing channel in telephone networks is feasible because
delays in circuit-switched telephone networks are stable due
to their quality of service (QoS) requirements [9] [10], unlike
the ones in Internet. We summarize our contributions as
follows:
‚Ä¢ We propose CallerDec, an end-to-end caller ID
veriÔ¨Åcation scheme that requires no modiÔ¨Åcation to
the existing telephone infrastructure and is applica-
ble to calling parties using any telephone services.
CallerDec can detect spooÔ¨Ång even if a caller ID
is not in the contact list or is unreachable.
‚Ä¢ We present two use cases of CallerDec, one for an
emergency call scenario (e.g., 9-1-1 call) and the other
for a regular call scenario. In both cases, the end users,
(e.g., a 9-1-1 service or an individual customer) can
utilize CallerDec to verify caller IDs.
‚Ä¢ We implement CallerDec as an App for Android-based
smartphones where we tackle several technical chal-
lenges caused by the limited API support for controlling
calls. We examine the CallerDec performance in
various scenarios, and show that it can detect spoofed
caller ID effectively and efÔ¨Åciently (i.e. incurring al-
most no extra energy overhead).
We stress that, while we implemented CallerDec on
Android smartphones as a case study, our solution can also
be integrated in any other telephone devices.
II. CALLER ID SPOOFING ATTACKS
Caller ID spooÔ¨Ång is deÔ¨Åned in the US legislation act [5]
as: A caller ID spooÔ¨Ång attack is a malicious action that

	


	

















	




  
 


 
 
  





Figure 1.
leveraging the loophole in network interconnection protocols.
An illustration of how a fake ID provider spoofs a caller ID
causes any caller identiÔ¨Åcation service to knowingly transmit
misleading or inaccurate caller identiÔ¨Åcation information
with the intent to defraud, cause harm, or wrongfully obtain
anything of value. This deÔ¨Ånition makes it difÔ¨Åcult
to
detect caller ID spooÔ¨Ång, since there are a few standard,
non-malicious telecommunication services that result in a
mismatch of the displayed number and should not be
classiÔ¨Åed as caller ID spooÔ¨Ång. In this section, we Ô¨Årst
discuss spooÔ¨Ång attacks that can be carried out in different
telephone setups, and then discuss scenarios that should not
be identiÔ¨Åed as spooÔ¨Ång attacks.
A. SpooÔ¨Ång via Fake ID Providers
Fake ID providers offer caller ID spooÔ¨Ång services. They
establish SS7/VoIP connections with various telephone car-
riers (e.g., AVOICS [11]), and act as intermediary between
attackers and victims to relay caller IDs speciÔ¨Åed by its cus-
tomers (attackers in this case). Fig. 1 illustrates an example,
where an attacker (Eve) tries to call the victim (Bob) faking
Alice‚Äôs caller ID. First, Eve calls the fake ID provider, and
supplies Bob‚Äôs phone number as the destination number and
Alice‚Äôs phone number as the desired spoofed caller ID. Then,
the fake ID provider establishes a call to Bob with Alice‚Äôs
caller ID, and Ô¨Ånally connects Eve with Bob once the call
is answered. Eve can subscribe to a fake ID provider and
carry out spooÔ¨Ång attacks towards any victim from any type
of phone, provided that the fake ID provider is connected to
the victim‚Äôs network.
B. SpooÔ¨Ång via VoIP Services
Many VoIP carriers allow their customers to specify their
own caller ID, and will forward the caller ID to the callee‚Äôs
carrier without modiÔ¨Åcations. An adversary can subscribe
to a VoIP carrier that allows caller ID manipulation and can
either use VoIP client software or a VoIP phone to claim
arbitrary caller IDs.
C. SpooÔ¨Ång via Automated Phone Systems
Automated phone systems provide Interactive Voice Re-
sponse (IVR) services for purposes of marketing, survey
collection, etc. Some service providers (e.g., Voxeo [12],
Nuance Cafe [13]) allow their subscribers to select their
own caller IDs and will deliver the selected caller IDs for
their subscribers regardless of their intention. Because these
169169169
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
providers connect to major telephone carriers via SS7 or
VoIP protocols [14], the downstream telephone carriers will
simply accept any caller IDs, including the spoofed ones.
D. A Mismatched Caller ID but not SpooÔ¨Ång
The caller ID blocking services and Primary Rate In-
terface (PRI) lines generate a mismatched caller ID, but
should not be classiÔ¨Åed as caller ID spooÔ¨Ång. For caller ID
blocking service, a carrier will transmit the text BLOCKED
or UNAVAILABLE instead of the real caller ID to the callee.
PRI lines are designed for business organizations that
want to support multiple simultaneous calls (i.e., 32 channels
for an E1 line [15]) while sharing one single caller ID for all
their phone lines. In a PRI system, each phone line inside an
organization is connected to the PRI line through a Private
Branch Exchange (PBX), which assigns the same caller ID
to all outgoing calls. The mismatched caller IDs in PRI lines
are different from caller ID spooÔ¨Ång because the caller ID
associated with a PRI line is ofÔ¨Åcially owned by the business
organization and once assigned, and the caller ID cannot be
changed without the permission from telephone carriers. Our
CallerDec will recognize both blocking services and PRI
lines as non-spooÔ¨Ång cases.
E. Summary
In this paper, we only evaluate our caller ID spooÔ¨Ång
detection schemes utilizing a fake ID provider. We believe
that our proposed solution is capable of detecting all afore-
mentioned spooÔ¨Ång attacks since our detection scheme is
independent of how caller ID spooÔ¨Ång attacks are launched.
III. ASSUMPTIONS AND REQUIREMENTS
A. System Model
For the rest of the paper, we will refer to Alice as the
caller, Bob as the callee, and Eve as the attacker who tries
to spoof Alice‚Äôs caller ID while calling Bob. We note that,
Alice may not be in Bob‚Äôs contact
list (unknown), and
Alice‚Äôs number could be invalid (unreachable). Since the
veriÔ¨Åcation operation is preformed automatically, we expand
our deÔ¨Ånition of the names and refer Alice, Bob, and Eve
to their devices as well. We envision that Alice, Bob, and
Eve can be a smartphone, a mobile phone, a PSTN phone,
a VoIP phone, or an automated system (e.g., bank), etc.
Regardless of the type, we assume that Bob has a strong
incentive to verify the caller ID of a caller, e.g., he can be a
bank that needs to verify the caller ID of a customer. Thus,
Bob integrates CallerDec in his device (e.g., by installing
an app in a smartphone, or by upgrading the Ô¨Årmware of a
PSTN phone, or by updating the software of a Private Branch
Exchange (PBX)1, etc). In comparison, Alice may or may
not integrate CallerDec.
1Business organizations use PBX as phone exchanges which offer internal phones
service, multiple simultaneous calls with the same caller ID, etc.
We consider that callee‚Äôs telephone carriers are trusted;
they route outgoing calls to dialed numbers and do not
collude with Eve in any way. Thus, Eve cannot capture
or inject any type of packets into the telephone networks.
Neither can she answer or reject a call unless she is the
callee. Additionally, we assume that Alice does not collude
with Eve and will not help Eve with caller ID validation.
Otherwise, we consider that Eve is authorized to use Alice‚Äôs
caller ID.
B. Requirements
1) Security: The detection scheme should guarantee that
an honest caller can prove the validity of his/her caller
ID, and an adversary cannot pretend to be calling from an
arbitrary number.
2) Compatibility: The detection solution should only
change telephone terminals but not the existing telephone
infrastructure, because adding any extra hardware to the
existing infrastructure or introducing new protocols to the
core telephone networks would be a great expense to all
telephone carriers. Additionally it should be compatible to
various telephone networks (e.g., GSM, VoIP, PSTN).
i.e.,
3) Usability: The detection strategies should be user-
friendly,
they should be mostly automated, require
almost no effort from either a caller or a callee, and should
not change common procedures of phone calls. Otherwise,
the callee could just dial the displayed caller ID and verify
verbally.
4) EfÔ¨Åciency: The detection scheme should have low
computational overhead so that it can be integrated into
telephone terminals that have limited resources, e.g., PSTN
phones, mobile phones, etc.
IV. CALLERDEC: VERIFYING CALLER IDS
A. Overview
The basic idea of CallerDec is to create a trusted
covert channel between Alice and Bob, i.e., the channel
allows Alice and Bob to perform a challenge-response but
it is inaccessible to Eve. Forming such an end-to-end covert
channel
is tricky as CallerDec considers a telephone
network as a black box and the covert channel has to
be compatible with all types of telephone networks. Thus,
we utilize the end-to-end service ‚Äîtraditional phone call
service‚Äî to form an end-to-end covert channel between
Alice and Bob.
Essentially,
the covert channel
is built on top of the
control channel that is used for call signaling in a traditional
telephone network where no users can manipulate control
channels directly. Nevertheless, the calling parties can ac-
quire the status of the phone call (e.g., answered/rejected).
Since Eve cannot control or access the calls between Alice
and Bob, they form a trusted covert channel by initializing,
answering, or rejecting phone calls between them.
170170170
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
Figure 2. Call establishment and veriÔ¨Åcation process: Alice is calling Bob who starts veriÔ¨Åcation call after œÑsv interval, and Alice rejects the call after œÑv
interval to prove her caller ID. We use the solid rectangles to indicate the original call operations conducted by a user or her phones, and use the dotted
rectangles to represent the operations performed by CallerDec. We note that the messages exchanged between Alice, Bob, and carriers are triggered by
the operations and generated by the underlying telephone protocols.
When Bob receives a call from Alice, he will initiate a
new call to Alice after a ‚Äústarting veriÔ¨Åcation‚Äù interval and
Alice will respond to the new call according to whether
she is indeed calling Bob. We refer to the Ô¨Årst call from
Alice to Bob as the original call denoted by C o
A‚ÜíB and
the second call from Bob to Alice as the veriÔ¨Åcation call
denoted by C v
B‚ÜíA. Bob determines whether the original call
C o
A‚ÜíB is indeed from Alice by examining the following