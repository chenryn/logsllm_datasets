feature
edge
feature
edge
4.40E-4
1.83E-4
3.61E-3
1.82E-4
1.83E-4
1.82E-4
1.83E-4
1.83E-4
2.46E-4
1.83E-4
4.40E-4
8.90E-2
1.62E-2 7.69E-4
1.82E-4 1.83E-4
1.31E-3 1.83E-4
1.83E-4 1.83E-4
1.82E-4 1.83E-4
1.68E-4 1.81E-4
1.82E-4 1.83E-4
2.19E-3 1.83E-4
3.28E-4 1.71E-3
1.83E-4 1.83E-4
7.69E-4 2.46E-4
6.72E-2 1.31E-3
1.71E-3
1.83E-4
1.83E-4
1.82E-4
1.82E-4
1.67E-4
1.82E-4
1.83E-4
2.47E-3
1.73E-2
2.46E-4
6.13E-2
TABLE XVI: Mann-Whitney U test results over the fuzzer
and edge coverage of Libfuzzer-based seed schedulers on 12
FuzzBench programs for 24 hours over 10 runs (corresponding
to Table III).
Programs
freetype
libxml2
lcms
harfbuzz
libjpeg
libpng
openssl
openthread
re2
sqlite
vorbis
zlib
Entropic
Default
feature
edge
feature
edge
1.70E-3
1.83E-4
3.61E-3
1.83E-4
1.83E-4
1.31E-3
1.82E-4
1.83E-4
3.30E-4
1.83E-4
1.83E-4
2.19E-3
7.56E-2 2.12E-1
1.83E-4 1.83E-4
9.11E-3 2.20E-3
1.82E-4 1.83E-4
2.45E-4 1.83E-4
2.89E-4 7.58E-4
1.82E-4 1.83E-4
1.83E-4 1.83E-4
3.17E-3 7.65E-4
1.01E-3 1.31E-3
2.40E-4 1.83E-4
5.65E-3 1.82E-4
3.12E-2
1.83E-4
3.61E-3
1.82E-4
1.82E-4
2.74E-4
1.80E-4
1.83E-4
3.60E-3
3.76E-2
4.33E-4
3.84E-3
TABLE XVII: Mann-Whitney U test results over the fuzzer and
edge coverage of AFL-based seed schedulers on 12 FuzzBench
programs for 1 hour over 10 runs (corresponding to Table IV).
Default RarePath RareEdge NewPath
SecCov
Fuzzer
AFL
AﬂFast
FairFuzz
EcoFuzz TortoiseFuzz
freetype
libxml2
lcms
harfbuzz
libjpeg
libpng
openssl
openthread
re2
sqlite
vorbis
zlib
2.16E-3
2.16E-3
8.18E-2
2.16E-3
5.75E-2
8.86E-2
1.14E-2
2.00E-2
8.67E-3
5.89E-2
2.45E-2
8.82E-2
2.16E-3
2.16E-3
1.99E-2
2.47E-2
6.87E-2
8.85E-2
2.86E-3
1.14E-2
9.31E-2
1.01E-1
8.14E-3
4.65E-2
2.16E-3
2.16E-3
1.52E-3
2.60E-2
6.46E-3
1.71E-2
9.52E-4
1.14E-2
2.16E-3
3.10E-2
6.63E-3
1.99E-2
2.16E-3
2.16E-3
4.33E-4
2.16E-3
4.99E-4
1.71E-2
9.52E-4
3.81E-3
2.16E-3
3.10E-2
9.52E-4
2.58E-3
2.16E-3
2.16E-3
9.31E-3
8.13E-3
2.01E-3
6.10E-2
9.52E-4
6.63E-3
2.16E-3
3.94E-2
1.14E-2
3.34E-2
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:25 UTC from IEEE Xplore.  Restrictions apply. 
162209
TABLE XVIII: Mann-Whitney U test results over the fuzzer and
edge coverage of AFL-based seed schedulers on 12 FuzzBench
programs for 24 hours over 10 runs (corresponding to Table V).
Default RarePath RareEdge NewPath
SecCov
Fuzzer
AFL
AﬂFast
FairFuzz
EcoFuzz TortoiseFuzz
freetype
libxml2
lcms
harfbuzz
libjpeg
libpng
openssl
openthread
re2
sqlite
vorbis
zlib
5.89E-2
2.16E-3
3.10E-2
1.32E-2
3.91E-2
7.70E-2
3.43E-2
4.86E-2
3.94E-2
6.99E-2
2.01E-2
9.35E-2
8.18E-2
2.16E-3
2.41E-2
5.89E-2
8.20E-2
1.12E-1
1.14E-2
2.87E-3
1.09E-2
8.18E-2
2.85E-3
2.40E-2
4.85E-2
1.80E-2
6.49E-3
2.16E-4
6.51E-3
5.35E-3
1.14E-2
2.57E-2
2.60E-3
1.51E-3
1.87E-3
1.34E-2
2.16E-4
2.16E-3
2.16E-4
6.49E-3
2.16E-4
2.39E-3
9.52E-4
9.52E-4
1.29E-3
9.37E-2
1.65E-2
5.79E-2
6.49E-3
2.16E-3
2.41E-2
1.52E-3
2.01E-3
1.30E-2
9.52E-4
1.14E-2
8.65E-4
3.94E-2
3.92E-2
1.93E-2
B. Further-away Edges Are Harder to Reach by Mutations
We run an experiment verifying our observation that further
away edges in programs are harder to reach by mutations. In
Section IV, we claimed that further away edges are harder
to reach by mutations. This program property justiﬁed Katz
centrality, which decays the contribution from further out
edges. To validate this claim, we measure the likelihood that
a seed mutation will reach further-away edges on 3 real-world
programs. For each program, we choose 10 seeds and mutate
each seed 10,000 times. We repeat this process 10 times to
minimize variance. Figure 7 shows the result, where n-hop
indicates distance n from the original seed’s execution path.
This experimentally shows that fewer mutations will reach
farther away edges and hence further-away edges are harder
to reach by mutations.
Fig. 7: The transition probability on 3 real-world programs using
10 seeds with 10,000 mutations per seed. The 1-hop transition
probability indicates the normalized amount of mutations that
reached an edge of distance 1 from the current execution path,
and similarly for 2-hop and 3-hop.
C. K-Scheduler’s Approximation Accuracy
In this section, we run an experiment to show the accuracy
of Katz centrality in approximating the count of reachable
TABLE XIX: Using the Kendall tau independence test to mea-
sure the agreement between K-Scheduler’s per node rankings
with the ideal seed scheduling ranking (i.e., the count of all
reachable and feasible edges from a node). The correlation score
ranges between [−1, 1], with higher values indicating stronger
agreement. Given the the absolute value of the correlation is
small due to the large size of the ranking list (i.e., thousands
of nodes), we also report the p-value and statistical signiﬁcance
under a 0.05 signiﬁcance level.
Programs
Correlation
p-value
Statistical
Signiﬁcance
freetype
libxml2
lcms
harfbuzz
libjpeg
libpng
openssl
openthread
re2
sqlite
vorbis
zlib
0.01
0.03
0.06
0.09
-0.03
0.05
0.01
-0.01
0.01
0.06
0.04
0.07
8.9E-1
1.33E-58
4.10E-24
4.58E-80
4.72E-9
2.24E-9
3.4E-1
1.12E-5
2.01E-2
4.24E-107
3.47E-6
1.92E-5
×
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
×
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
and feasible edges. In Section IV, we claimed that an ideal
seed scheduling strategy would prioritize seeds based on the
count of all reachable and feasible edges from a seed by
mutations. To better support this claim, we measure how much
agreement exists between K-Scheduler’s centrality-based
ranking with this ideal seed scheduler’s ranking. We simulate
the ideal seed scheduler’s ranking by computing each CFG
node’s count of reachable and feasible edges based on graph
traversal and covered edges (i.e., feasible) from 24 hour runs
of Libfuzzer with K-Scheduler over all 12 FuzzBench
programs, repeated 10 times. We then use the Kendall tau
to measure the agreement between two
independence test
rankings with a value between [-1, 1] and report
if the
measured agreement is statistically signiﬁcant. We note this
Kendall tau independence test and its p-values are entirely
separate from the Mann Whitney U test and its p-values from
our edge coverage experiments.
Table XIX shows the results from the Kendall
tau in-
dependence test. The absolute values of the correlation are
expectedly small given the large size of the ranking lists
(on the order of thousands). K-Scheduler’s centrality-based
rankings and the ideal strategy’s ranking strongly agree on 10
of the 12 programs (i.e., positive correlation values). On 8 of
these 10 programs, this agreement is statistically signiﬁcant
with a signiﬁcance level of 0.05. This agreement suggests
that K-Scheduler’s increased performance in our edge
coverage experiments derives from approximating this ideal
seed scheduling strategy and that improved approximations
would lead to better seed scheduling strategies.
D. Limitations
K-Scheduler does not currently handle indirect function
calls. We plan to handle them with static analysis techniques
(e.g., Andersen’s points-to analysis) similar to prior work [17].
Such a static analysis may produce imprecise CFGs which
can affect the utility of a seed’s centrality score for seed
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:25 UTC from IEEE Xplore.  Restrictions apply. 
172210
readelflibjpeglibxml01020304050Transition Probablity38.1343.1815.822.6116.218.619.4812.36.781-hop nodes2-hop nodes3-hop nodesselection. However, K-Scheduler can mitigate the effects
of imprecise CFGs on centrality by reducing the contributions
from further away nodes (i.e. nodes in callee functions).
Therefore, we believe K-Scheduler will still provide useful
guidance despite the imprecision of the CFG. We also envision
using β for speciﬁc CFG nodes (i.e., nodes with indirect
function calls) to further mitigate the effects of imprecise
CFGs on centrality. We leave this to future work.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:25 UTC from IEEE Xplore.  Restrictions apply. 
182211