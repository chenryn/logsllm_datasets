### ICMP: TCP- and UDP-related ICMP Forwarding
Many Network Address Translations (NATs) attempt to translate ICMP messages related to TCP and UDP bindings, as this can improve application performance. The most critical ICMP messages to translate are Destination Unreachable messages, which indicate that fragmentation is required. These messages are essential for TCP's Path MTU (PMTU) discovery [22]. If these messages are not translated correctly, PMTU "black hole" issues can occur [17]. For UDP, even the detection of port reachability depends on ICMP messages.

To test whether ICMP messages are correctly translated, we intercept packets coming from the NAT, generate the desired ICMP messages, and send them back to the NAT. We then inspect packet traces to determine the NAT's actual behavior.

### SCTP and DCCP: Support for SCTP and DCCP
The deployment of SCTP and DCCP transport protocols is often hindered by middleboxes that do not support them. To assess the level of support for SCTP [30] and DCCP [15,16] among home gateways in our testbed, we attempt to create a single connection and exchange data using each protocol. If this succeeds, the home gateway is considered to support the respective transport protocol.

### DNS: DNS over TCP
We test the DNS proxy on each NAT for support of DNS-over-TCP by querying it using `dig` from the Berkeley Internet Name Daemon (BIND) suite.

## 4. Experimental Results
This section presents the measurement results for the experiments described in Section 3. All plots show the measured results across the entire population of studied home gateways, arranged on the x-axis by increasing value. Each data point shown is the median of many repetitions of a measurement, as indicated in the plot legend. Quartiles for each data point are plotted as error bars, but the inter-quartile gap is usually too narrow to be visible.

### 4.1 UDP Timeout Results
Section 3.2.1 described a method for determining UDP binding timeouts and several binding usage scenarios. This section presents the experimental results obtained from applying this method in different scenarios. From Figure 2, it is evident that home gateways do not behave consistently across the different UDP tests. While many devices do not vary their timeout behavior between tests UDP-2 and UDP-3, the timeouts do vary with manufacturers and firmware versions. Most devices retain UDP bindings for the 120 seconds required in [3], at least while there is inbound traffic over the binding. UDP-1 presents a more unusual case, where the binding is often removed much sooner. The following paragraphs discuss the detailed results.

#### UDP-1
Figure 3 plots the medians of measured binding timeouts for the UDP-1 case, where the client sends only a single packet to the server. The inter-quartile range is too narrow to be visible, indicating stable results for all devices. One obvious result is that UDP binding timeouts vary by an order of magnitude across the measured set of home gateways. The device `je` has one of the shortest timeouts (30 seconds), whereas `ls1` has a timeout more than twenty times longer (691 seconds). The median timeout across the entire set is 90 seconds, and the mean is 160 seconds. Note that more than half of the tested devices do not conform to the IETF specification [3] that requires timeouts of more than 120 seconds; only one device (`ls1`) complies with the longer 600-second timeout recommended by the IETF.

#### UDP-2
Figure 4 shows the measurements for the case where the server sends a stream of response packets to the client. The intent was to determine whether inbound traffic affects the binding timeout, and for many devices, it does. Most devices tend to use longer timeouts; the minimum is now 54 seconds, the median is 180 seconds, and the mean is 175 seconds. For example, `ed`, `owrt`, `to`, and `te`, which shared the shortest timeout (30 seconds) in the UDP-1 case, now use a median timeout of 180 seconds. Other devices, however, shorten their timeouts, e.g., `be2`, which had a timeout of approximately 450 seconds previously, now reduces its timeout to approximately 202 seconds. The inter-quartile range for `we` and `al`, as well as, to a lesser degree, `je` and `ng5`, is substantial, indicating that these boxes use very coarse-grained binding timers.

#### UDP-3
Figure 5 plots the measurements for the case where a received server response triggers the client to send another packet. The intent of this test is to check whether outbound traffic on a binding affects the timeout. The difference compared to UDP-2 is less pronounced; the median timeout remains almost unchanged, although the mean increases to 226 seconds. This is mostly due to a few devices (`be1`, `dl10`, `ng3`, `ng4`, and especially `be2` and `ng5`) lengthening their timeouts as outbound packets are now also present, reaching the same level as in the UDP-1 test; no devices shorten them.

#### UDP-4
The results show that different behaviors exist for how NATs choose external port numbers and how they reuse port pairs. Most devices (27 out of 34) prefer to use the original source port as the external port for a binding. Twenty-three of these devices seem to also reuse an expired binding, while four devices create a new binding. Seven devices do not attempt to use the original source port and always create a new binding after an old one expires.

#### UDP-5
Figure 6 shows the median measured binding timeouts for different well-known server ports. The results indicate that most devices use a timeout scheme independent of the server port. A notable exception is `dl8`, which uses a shorter timeout for the DNS port.

### 4.2 TCP Results
This section discusses the results of the TCP tests described in Section 3.2.2.

#### TCP-1
Figure 7 shows the measured TCP binding timeouts. Because the measured timeouts are highly variable, the plot uses a log scale to highlight the differences. `be1` has the shortest timeout, consistently timing out TCP bindings after 239 seconds—less than 4 minutes. More than half the devices fail to meet the IETF-recommended timeout of 124 minutes [11]. Some NATs retain TCP bindings for considerably longer—the seven devices on the right in Figure 7 still had not timed out their bindings after 24 hours (1,440 minutes), which was the cutoff for this test.

### 4.3 Other Results
Table 2 shows pass/fail results for the tests described in Section 3.2.3 related to SCTP and DCCP support, DNS-over-TCP support, and ICMP handling.

#### ICMP
The "TCP" and "UDP" columns in Table 2 indicate which home gateways correctly translate various ICMP messages related to flows of the respective transport protocol. `nw1` does not translate any transport-related ICMP messages; all others translate at least "Port Unreachable" and "TTL Exceeded." `ls2` translates all TCP-related ICMP messages into (invalid) TCP resets. About half of the devices (16 out of 34) do not correctly translate transport headers contained in ICMP payloads, and `zy1` and `ls1` do not correctly translate IP checksums in ICMP payloads.

#### SCTP and DCCP
It is possible to establish an SCTP connection through 18 of the 34 devices—an astounding result, given the general belief that even single-homed SCTP connections do not usually work across NATs. None of the devices allowed establishing a DCCP connection. `dl4`, `dl9`, `dl10`, and `ls1` pass SCTP and DCCP packets entirely untranslated, while 20 others attempt to simply translate the IP source address. Among those 20 devices are all those that work with SCTP, raising the question of whether they actually fully support SCTP or if a single SCTP connection is sufficient.

### Figures
- **Figure 2**: Median timeout results for UDP-1, 2, and 3. (Devices ordered by UDP-1 result.)
- **Figure 6**: UDP-5: Binding timeout variations for different services.
- **Figure 8**: TCP-2: Medians of measured throughputs.
- **Figure 9**: TCP-3: Median of measured delays.
- **Figure 10**: TCP-4: Maximum bindings to a single server port.