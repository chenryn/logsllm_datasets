## Steps to Reproduce
Ubuntu 16.04 Flutter Beta 2.0.0-dev27
The following unit test:
    import 'dart:collection';
    import 'package:flutter_test/flutter_test.dart';
    class MyList1 extends Object with ListMixin> {
      final List _list;
      MyList1.from(this._list);
      @override
      Map operator [](int index) {
        Map value = _list[index];
        return value.cast();
      }
      @override
      void operator []=(int index, Map value) {
        throw "read-only";
      }
      @override
      set length(int newLength) {
        throw "read-only";
      }
      @override
      int get length => _list.length;
    }
    class MyList2 extends ListBase> {
      final List _list;
      MyList2.from(this._list);
      @override
      Map operator [](int index) {
        Map value = _list[index];
        return value.cast();
      }
      @override
      void operator []=(int index, Map value) {
        throw "read-only";
      }
      @override
      set length(int newLength) {
        throw "read-only";
      }
      @override
      int get length => _list.length;
    }
    main() {
      group("mixin", () {
        // This currently fails...
        test('ListMixin', () {
          var raw = [
            {'col': 1}
          ];
          var rows = new MyList1.from(raw);
          expect(rows, raw);
        }); //, skip: true);
        test('ListBase', () {
          var raw = [
            {'col': 1}
          ];
          var rows = new MyList2.from(raw);
          expect(rows, raw);
        });
      });
    }
works when using
    flutter test
but fails for ListMixin (not ListBase) using
    flutter test --preview-dart-2 
    00:04 +0 -1: mixin ListMixin [E]                                                                                                                                                            
      NoSuchMethodError: The method 'toList' was called on null.
      Receiver: null
      Tried calling: toList()
      dart:core                                           Object.noSuchMethod
      package:matcher/src/pretty_print.dart 37:36         prettyPrint._prettyPrint
      package:matcher/src/pretty_print.dart 116:22        prettyPrint
      package:matcher/src/description.dart 44:11          StringDescription.addDescriptionOf
      package:test                                        expect
      package:flutter_test/src/widget_tester.dart 141:16  expect
      test/list_mixin_test.dart 63:7                      main..
Basically using `extends ListBase` and `extends Object with ListMixin` has a
different behavior (on dart2 only) and I cannot figure out why...
## Flutter Doctor
Paste the output of running `flutter doctor -v` here.
    [✓] Flutter (on Linux, locale en_US.UTF-8, channel beta)
        • Flutter version 0.1.4 at /media/ssd/dev_tool/flutter
        • Framework revision f914e701c5 (9 days ago), 2018-02-19 21:12:17 +0000
        • Engine revision 13cf22c284
        • Dart version 2.0.0-dev.27.0-flutter-0d5cf900b0
    [✓] Android toolchain - develop for Android devices (Android SDK 27.0.2)
        • Android SDK at /opt/apps/android-sdk-linux
        • Android NDK location not configured (optional; useful for native profiling support)
        • Platform android-27, build-tools 27.0.2
        • ANDROID_HOME = /opt/apps/android-sdk-linux
        • Java binary at: /opt/app/android-studio-3/jre/bin/java
        • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-915-b01)
    [✓] Android Studio (version 3.0)
        • Android Studio at /opt/app/android-studio-3
        • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-915-b01)
    [✓] Android Studio (version 2.3)
        • Android Studio at /opt/apps2/android-studio
        • Java version OpenJDK Runtime Environment (build 1.8.0_112-release-b06)
    [✓] IntelliJ IDEA Community Edition (version 2017.2)
        • Flutter plugin version 19.1
        • Dart plugin version 172.4343.25
    [!] IntelliJ IDEA Ultimate Edition (version 2016.2)
        ✗ Flutter plugin not installed; this adds Flutter specific functionality.
        ✗ Dart plugin not installed; this adds Dart specific functionality.
        • For information about installing plugins, see
          https://flutter.io/intellij-setup/#installing-the-plugins
        ✗ This install is older than the minimum recommended version of 2017.1.0.
    [✓] IntelliJ IDEA Community Edition (version 2017.3)
        • Flutter plugin version 22.1.2
        • Dart plugin version 173.4548.30
    [!] IntelliJ IDEA Community Edition (version 2016.3)
        ✗ Flutter plugin not installed; this adds Flutter specific functionality.
        • Dart plugin version 163.13137
        • For information about installing plugins, see
          https://flutter.io/intellij-setup/#installing-the-plugins
        ✗ This install is older than the minimum recommended version of 2017.1.0.
    [!] IntelliJ IDEA Community Edition (version 2016.2)
        ✗ Flutter plugin not installed; this adds Flutter specific functionality.
        • Dart plugin version 162.2485
        • For information about installing plugins, see
          https://flutter.io/intellij-setup/#installing-the-plugins
        ✗ This install is older than the minimum recommended version of 2017.1.0.
    [!] VS Code (version 1.20.1)
        • VS Code at /usr/share/code
        • Dart Code extension not installed; install from
          https://marketplace.visualstudio.com/items?itemName=Dart-Code.dart-code
    [✓] Connected devices