path choices. A non-negligible fraction of path choices however do
not correspond to simple per-neighbor preferences, but hot-potato
routing and tie-breaking within the BGP decision process, which
are very detailed aspects of Internet routing.
The work carried out in this paper provides another step towards
a model that may allow prediction of AS paths under “what-if”
scenarios. In future work we will validate the policies we derived
by testing their predictive capabilities and also by comparing them
to actual policies conﬁgured by ASs as in [26].
8. ACKNOWLEDGMENTS
We thank Anja Feldmann, our shepherd Dmitri Krioukov and
the anonymous reviewers for their comments and suggestions. This
work was partially supported by the EU FP6 project DELIS. Bingjie
Fu is supported by STW project DTC.6421 and Olaf Maennel by
the Australian Research Council (ARC) grant DP0557066. We
would also like to thank Belinda Chiera for improvements in the
writing and TU München for providing computational infrastruc-
ture for our simulations.
9. REFERENCES
[1] M. Caesar and J. Rexford, “BGP Routing Policies in ISP
Networks,” IEEE Network Magazine, 2005.
[2] F. Wang and L. Gao, “Inferring and Characterizing Internet
Routing Policies,” in Proc. ACM IMC, 2003.
[3] H. Chang, R. Govindan, S. Jamin, S. Shenker, and
W. Willinger, “Towards Capturing Representative AS-Level
Internet Topologies,” Computer Networks, vol. 44, no. 6,
April 2004.
[4] T. Grifﬁn, F. Bruce Shepherd, and G. Wilfong, “The Stable
Paths Problem and Interdomain Routing,” IEEE/ACM Trans.
Networking, 2002.
[5] L. Gao, “On Inferring Autonomous System Relationships in
the Internet,” Proc. IEEE Global Internet, 2000.
[6] Z.M. Mao, J. Rexford, J. Wang, and R.H. Katz, “Towards an
Accurate AS-level Traceroute Tool,” in Proc. ACM
SIGCOMM, 2003.
[7] Z.M. Mao, L. Qiu, J. Wang, and Y. Zhang, “On AS-level
Path Inference,” in Proc. ACM SIGMETRICS, 2005.
[8] R. Teixeira, A. Shaikh, T. Grifﬁn, and J. Rexford, “Dynamics
of Hot-Potato Routing in IP Networks,” in Proc. ACM
SIGMETRICS, 2004.
[9] R. Teixeira, N. Dufﬁeld, J. Rexford, and M. Roughan,
“Trafﬁc Matrix Reloaded: Impact of Routing Changes,” in
Proc. PAM, 2005.
[10] R. Teixeira, K. Marzullo, S. Savage, and G. Voelker, “In
Search of Path Diversity in ISP Networks,” in Proc. ACM
IMC, 2003.
[11] N. Feamster, Z. Mao, and J. Rexford, “BorderGuard:
Detecting Cold Potatoes from Peers,” in Proc. ACM IMC,
2004.
[12] L. Subramanian, S. Agarwal, J. Rexford, and R. Katz,
“Characterizing the Internet Hierarchy from Multiple
Vantage Points,” in Proc. IEEE INFOCOM, 2002.
[13] G. Battista, M. Patrignani, and M. Pizzonia, “Computing the
Types of the Relationships between Autonomous Systems,”
in Proc. IEEE INFOCOM, 2003.
[14] W. Mühlbauer, A. Feldmann, O. Maennel, M. Roughan, and
S. Uhlig, “Building an AS-Topology Model that Captures
Route Diversity,” in ACM SIGCOMM, 2006.
[15] “RIPE’s Routing Information Service,”
http://www.ripe.net/ris/.
[16] “University of Oregon RouteViews Project,”
http://www.routeviews.org/.
[17] Intel-DANTE, “Intel-DANTE Monitoring Project,”
http://www.cambridge.intel-research.net/monitoring/dante/.
[18] Abilene, “The Abilene Observatory: Abilene routing data,”
http://abilene.internet2.edu/observatory/.
[19] S. Uhlig and S. Tandel, “Quantifying the Impact of
Route-Reﬂection on BGP Routes Diversity inside a Tier-1
Network,” in Proc. of IFIP Networking, Coimbra, Portugal,
May 2006.
[20] Y. Afek, O. Ben-Shalom, and A. Bremler-Barr, “On the
Structure and Application of BGP Policy Atoms,” in IMW
’02: Proceedings of the 2nd ACM SIGCOMM Workshop on
Internet measurement, 2002.
[21] A. Broido and KC. Claffy, “Analysis of RouteViews BGP
Data: Policy Atoms,” in Proceedings of the Network-Related
Data Management workshop, Santa Barbara, May 2001.
[22] X. Zhao, D. Pei, L. Wang, D. Massey, A. Mankin, S. Felix
Wu, and L. Zhang, “An Analysis of BGP Multiple Origin AS
(MOAS) Conﬂicts,” in Proc. ACM IMW, 2001.
[23] J. Hao M. Meulle, Q. Nguyen, “Formulation CSP et
Approches Heuristiques pour l’Inférence des Accords
d’Interconnexion dans l’Internet,” in ROADEF’06, Lille,
France, 2006.
[24] B. Quoitin and S. Uhlig, “Modeling the Routing of an
Autonomous System with C-BGP,” IEEE Network
Magazine, 2005.
[25] B. Quoitin, “C-BGP, an Efﬁcient BGP Simulator,”
http://cbgp.info.ucl.ac.be/, 2003.
[26] X. Dimitropoulos, D. Krioukov, M. Fomenkov, B. Huffaker,
Y. Hyun, kc claffy, and G. Riley, “AS Relationships:
Inference and Validation,” ACM Comput. Commun. Rev., vol.
37, no. 1, 2007.
[27] G. Di Battista, T. Erlebach, A. Hall, M. Patrignani,
M. Pizzonia, and T. Schank, “Computing the Types of the
Relationships between Autonomous Systems,” To appear in
IEEE/ACM Transactions on Networking, 2007.
APPENDIX
A. RELATIONSHIP INFERENCE
Previous work on inference of AS business relationships (e.g.,
[5]) relies on two main assumptions. First, there is a unique busi-
ness contract negotiated between any two ASs. The relationship
associated with any directed link of the AS topology is one of the
following: peer-peer, customer-to-provider (C2P) or provider-to-
customer (P2C)4. Second, routes of an AS received from any of its
provider or peer-peer neighbor cannot be propagated to any other
provider or peer-peer neighbor. In the literature, this is called the
“valley-free” property.
Inferring business relationships can be formulated as the Max-
TOR problem [12]. Given a set of AS paths, assign a unique label
to each link in the AS topology such that the number of valley-free
paths is maximum. MaxTOR is a NP-complete problem that was
tackled in the past by many heuristics because of its size. More-
over, as reported in [27], if a solution to MaxTOR with n business
relationships exists (optimal or not), then there are at least 3n dif-
4two ASs may also establish a mutual-transit relationship (sibling
or SIB)
ferent solutions leading to the same number of valley-free paths.
This means that any given solution has a very small probability of
being realistic, even if it produces the exact maximum number of
valley-free paths.
As inferred relationships can produce up to 99% of observed
valley-free paths, the propagation of observed paths remains pos-
sible in an AS topology model when relationship ﬁlters are incor-
porated. However, as there is an exponential number of solutions
with the same number of valley-free paths, a large freedom remains
in the choice of relationship ﬁlters. Many approaches tackled the
MaxTOR problem by splitting each path into AS triples. From the
several approaches, we selected four:
• gao [5]: The greedy approach recognizes valley-free AS paths
by using sequences of AS degrees in paths. When valleys oc-
cur in AS paths, some conﬂicting relationships are supposed
to support a mutual-transit relationship (label "SIB").
• sark [12]: This algorithm uses topology leaf-pruning as seen
from each observation point to infer per-vantage-point AS
rankings. Then a relationship for each link is inferred. When
ranking of ASs is not decisive enough, some links are labeled
with the "Unknown" relation.
• csp [23]: This approach takes advantage of the Constraint
Satisfaction framework. A Max2CSP problem is derived from
MaxTOR where each relation is a variable and each sub-path
of length 2 (AS triples) introduces a constraint between two
relations. A tabu-search algorithm runs on a restricted space
of feasible solutions (unlikely relations and customer cycles
are forbidden).
• caida [26]: Another recent algorithm claims to ﬁnd more
realistic solutions with a partial validation of the results. The
objective function to maximize in the MaxTOR problem is
modiﬁed to incorporate information on degree of ASs. This
mathematical program is solved by using Semi-Deﬁnite Pro-
gramming and then uses a post-processing heuristic that tries
to maximize the number of peering links.
Paths
all
AS graph
vertices
4 681 770
21 169
1 972 727
21 016
links
triples
Full dataset ( 1 )
58 911
965 859
RIPE subset ( 2 )
48 162
415 523
CSP models
variables
no-cons
54 193
4 718
46 489
1 673
1 682 568
21 060
47 170
476 668
45 197
1 973
Route-views subset ( 3 )
Table 6: Datasets used to infer business relationships.
ASs and only 20% more AS relationships. Altogether, it contains
roughly twice as many sub-paths of length 2 (AS triples) as the two
subsets. Additional input paths increase the difﬁculty of MaxTOR
and make it more restrictive on potential solutions. Still, many so-
lutions maximizing the same number of valley-free paths exist. We
now evaluate the solutions produced by the different algorithms.
relations
PEER
C2P
25688
13786
15630
12971
5200
5361
sark heuristic
1
2
3
gao heuristic
1
2
3
caida heuristic
1
2
3
csp heuristic
1
2
3
18326
9219
8050
3367
3367
3367
32703
34006
31188
44252
41453
40333
38128
38128
38128
40585
38943
39120
valley-free
match
triples
paths
CAIDA
Tier-1
match
81.5
84.6
85.5
88.3
90.6
90.5
70.5
73.0
85.4
99.9
99.9
99.9
27.3
29.9
32.8
100.0
100.0
100.0
96.1
96.3
97.4
99.3
99.3
99.3
54.8
66.3
61.3
92.6
93.5
94.2
100.0
100.0
100.0
95.0
95.5
94.5
84.2
82.7
85.7
65.4
66.9
69.2
80.0
80.0
80.0
94.7
94.0
94.7
SIB/
UNK
520
370
352
1688
1509
1476
229
229
229
0
0
0
To compare the four algorithms gao, sark, csp and caida, we use
as input our full dataset (labeled (1)) and subsets of AS paths gath-
ered at Route-views and RIPE (labeled (2) and (3)). For each data-
set, we report in Table 6 the size of the AS topology, the number of
distinct AS paths of length 2 (triples) and the size of the MAX2CSP
models solved by the csp algorithm. Note that AS paths of length 1
(2 AS hops) are always valley-free. In particular, relationships sup-
ported by links observed only in paths of length 1 can be treated
separately and removed from the input data (indicated as no-cons
in the table).
We evaluate the number of valley-free paths and the number of
valley-free AS triples for each of the 4 inference algorithms and for
the 3 input datasets in Table 7. Note that we were not able to run the
caida algorithm on our data and therefore downloaded an existing
solution from CAIDA for November 7th, 2005 (solution only based
on traditional RIPE and Route-Views data). For each solution, we
report the number of peer-peer links and customer-provider links
inferred, as well as the number of Unknown or mutual-transit links.
Also, to obtain an understanding of the correctness of the solutions,
we validate the inference with two indicators: Caida-match and
Tier-1-match. Caida-match is the percentage of relationships that
are inferred as being of the same type by both the considered heu-
ristic on our data and the downloaded caida solution. Tier-1-match
is the percentage of relationships that are of the same type by both
the considered heuristic on our data and those we know to be the
real relationships for a tier-1 in November 2005.
Our full dataset has twice as many unique AS paths as the RIPE
or Route-views subsets, but approximately the same number of
Table 7: Evaluation of solutions provided by algorithms.
The sark algorithm produces a small number of valley-free paths
(see Table 7). However, the solutions match well the relationships
from the tier-1 (about 80%). The gao heuristic has 100% of valley-
free paths. Some relationships are set to mutual-transit, having as
effect to cancel valleys next to this kind of links. This algorithm
determines an unrealistically large number of mutual-transit rela-
tionships. Note that solutions match well the relationships of the
tier-1 (about 65%). The caida solution was not produced using our
datasets. Its evaluation on each dataset produces a large number of
valley-free paths (more than 96% of our paths are valley-free) and
a good match with the relationships of the tier-1 (80%). Finally, the
csp heuristic produces solutions with the largest number of valley-
free paths (up to 99%) and the best match with the relationships of
our tier-1 (about 94%). Even if solutions produced by any algo-
rithm have a large number of valley-free AS triples, the remaining
freedom in the choice of relationships does not favor all algorithms.
Only few paths are valley-free or the values of our match indicators
(of realism) are not high enough. Indeed, for the three datasets,
only solutions provided by the csp and gao algorithms are close to
the caida one. Since some solutions of the caida algorithm have
been validated using information about business relationships of
many ASs, we consider those produced by csp as realistic enough
for our goal. We thus rely on the csp algorithm to run our model
of path propagation, because of its potential accuracy and its large
number of valley-free paths.