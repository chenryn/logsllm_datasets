"PostRegKey": ...,
"ProductID": 10001,
"CommandLine": "-defaultsearch=true",
"RunInAggressiveInstaller": "1",
PPI Network
Outbrowse
Amonetize
InstallMonetizer
OpenCandy
Sample Domain
srv.desk-top-app.info
www.download-way.com
www.stsunsetwest.com
api.opencandy.com
Table 2: Sample of PPI server domains contacted by our milk-
ers. In total, we identify 31 domains servicing offer requests
for the four PPI networks we study.
PPI Network
Outbrowse
Amonetize
InstallMonetizer
OpenCandy
Total
Milking Period
1/08/15–1/07/16
1/08/15–1/07/16
1/11/15–1/07/16
1/09/15–1/07/16
1/08/15–1/07/16
Offers Unique
107,595
584
356
231,327
137
30,349
134
77,581
446,852
1,211
Figure 5: Example PPI network response for Outbrowse con-
taining an offer and associated metadata.
Table 3: Breakdown of PPI networks, milking periods, and the
unique offers appearing in our dataset.
3.2 Developing Longitudinal Milkers
In order to track bundled offers, we develop milkers that
replay the first stage of each PPI network’s offer pro-
tocol and decode the response. This is largely a time-
intensive manual process of blackbox testing each PPI
downloader, determining the PPI server’s domain (or
those it cycles through), and re-implementing the pro-
tocol into a standalone module that generates a network
request with the expected downloader User-Agent and
custom headers. We provide a sample of the PPI server
domains contacted by downloaders in Table 2.
For all requests, we present a device fingerprint associ-
ated with a Windows 7 system with Chrome and Internet
Explorer installed while randomizing unique identifiers
such as the device’s MAC address and machine ID. Upon
receiving a response, we decode the list of offers and ex-
tract the associated URL of the offer binary. We reiter-
ate that the PPI programs we monitor provide anywhere
from 5–50 potential offers along with their installation
requirements. For each offer, we detect whether we pre-
viously observed the URL of the associated binary.
If
the URL is fresh, we download the URL’s content; if the
URL is redundant, we rely on a cached copy in order to
reduce network load on the PPI servers. We note that this
caching methodology may reduce the number of unique
digests we obtain if advertisers were to cycle binaries ref-
erenced by a fixed URL.
We finally store each binary, the offer metadata (e.g.,
registry requirements, advertiser ids), and the timestamp
of execution. We ran our milkers every hour from a col-
lection of cloud instances hosted in the United States
over a year long period from January 8, 2015–January 7,
2016. During this time, we updated our milker protocols
at most once per PPI network, a reflection of the lack
of external pressure on commercial PPI practices com-
pared to malware. In total, we collected 446,852 offers.
These offers contained 2,841 unique URLs, 1,809 unique
digests, and 1,211 unique product identifiers (as deter-
mined by the ProductID field shown in Figure 5, or
its equivalent for other PPI networks, which are consis-
tent across versions.) We provide a detailed breakdown
of the offers per PPI network in Table 3.
We faced a separate challenge for tracking regional
pricing. In particular, the exact daily prices that advertis-
ers pay per install are available only to publishers deliv-
ering successful installs. Unlike previous investigations
into blackmarket PPI [4], we elected not to register as
commercial PPI affiliates due to potential Terms of Ser-
vice violations. As such, we lack access to per-advertiser
pricing data. Instead, we track the average price per in-
stall across the PPI ecosystem as publicly advertised by
PPI networks and resellers to attract affiliates.
In to-
tal, we identify five PPI-related websites that provide a
breakdown of the current price per install paid across 219
regions, with rates varying between $0.01–$2.09. These
sites include cinstaller.com, installmania.
com, cashmylinks.com, perinstallbucks.
com, and truemediaparnter.com. We crawled
and parsed these pages (as allowed by robots.txt) on a
weekly basis from January 8, 2015–January 7, 2016 to
monitor any fluctuations.
USENIX Association  
25th USENIX Security Symposium  725
5
3.3 Executing and Annotating Offers
this.bCompExist = g.ami.CheckRegKey(
We execute all downloaded binaries in a sandboxed en-
vironment similar in flavor to Anubis [2], CWSand-
box [38], and GQ [22], the details of which are covered
in previous work [17, 29, 34]. During execution, we log
all network requests and responses, file system changes,
modified registry keys, and spawned processes. We also
monitor whether the executable changes any preferences
related to Chrome or Internet Explorer such as altering
the default browser, dropping an extension, or modifying
the startup page.
Independent of our dynamic execution environment,
we annotate each binary with third-party intelligence
gathered through VirusTotal at the end of our collection
period. Mechanically, we submit the hash of each binary
to determine which of 61 anti-virus engines report the
binary as malicious or unwanted. We also collect any la-
bels, though the value of these is highly variable: some
reflect generic ‘Adware’ while others contain a family
name potentially unique to an anti-virus engine.
3.4 Clustering and Classifying Offers
At the conclusion of our collection period we classi-
fied all of the advertiser binaries in our dataset into
distinct families. This canonicalization step is neces-
sary to de-duplicate instances where the same advertiser
works with multiple PPI networks or where advertisers
introduce polymorphism due to software updates, sub-
affiliate programs, or to evade detection by anti-virus en-
gines. Classification is a semi-automated process where
we first cluster all binaries based on overlapping registry
key modifications, domains contacted during execution,
process names, or digital certificates used to sign the
advertiser’s software (only 58% of offers were signed).
This approach follows similar strategies for clustering
malware delivered via drive-by downloads [14] and un-
wanted software using code-signing [21]. We also clus-
ter offers based on the registry keys present in the instal-
lation pre-conditions provided by PPI networks during
offer selection. These pre-conditions unambiguously re-
veal all of the registry paths controlled by a single family,
such as Vitruvian which goes by 19 other names includ-
ing LessTabs, SearchSnacks, Linksicle; or Wajam which
installs under 418 unique registry keys. We present a
sample of these pre-conditions in Figure 6. Through
all these clustering techniques, we generate 873 non-
overlapping clusters (of 1,809 possible).
We manually review all clusters active for more than
150 days (e.g., we examine the timestamp of all milked
binaries in a cluster and count the number of distinct
dates) totaling 58 distinct clusters. We derive family
labels based on the most common naming convention
"Software\\Wajam",
"Software\\WInternetEnhance",
"Software\\WajNEnhance",
"Software\\WWebEnhance",
"Software\\WaWebEnhance",
"Software\\WajIntEnhancer",
"Software\\WajaIntEnhancer",
"Software\\WNEnhancer",
"Software\\WajaInternetEnhance",
"Software\\WInterEnhance",
"Software\\WajNetworkEnhance",
"Software\\WajaNetworkEnhance",
"Software\\WWebEnhancer",
"Software\\WaWebEnhancer",
"Software\\WajWebEnhancer",
"Software\\WajaWebEnhancer",
.....
"Software\\Wajam\\affiliate_id")
Figure 6: Example offer requirements for Wajam via Amon-
etize. It contains 418 registry key checks for Wajam variants.
We cluster offers that contain the same registry checks.
found in VirusTotal for a cluster. If no public name ex-
ists, we fall back to the advertiser name listed in the offer
metadata provided by PPI networks. For all clusters last-
ing less than 150 days, we rely exclusively on the adver-
tiser name. These names serve only to communicate the
major software families commonly found in commercial
PPI and whether they overlap with the largest unwanted
families impacting end users (discussed in Section 5).
3.5 Limitations
Our investigation of the PPI ecosystem faces a number
of limitations. First, our pipeline runs exclusively from
United States IP addresses. This potentially biases our
perspective of PPI offers in the event advertisers dis-
tribute exclusively to non-US territories. As we demon-
strate later in Section 4, the US is the highest paid region
for installs, which makes it one of the most interesting
to analyze. Next, because we do not participate directly
in the PPI ecosystem, we lack exact pricing details per
install. We attempt to extrapolate these values based on
public pricing used to attract affiliates, but we cannot ver-
ify the accuracy of this data other than to corroborate
similar rates cited within the underground. Third, our
family classification faces the same challenges of mal-
ware phylogeny where there is frequent disagreement be-
tween anti-virus naming conventions. We reconcile these
discrepancies for the longest running PPI campaigns at
the expense of overlooking the long tail of brief cam-
paigns. Finally, our perspective of the PPI ecosystem is
restricted to four PPI networks due to the time-intensive
726  25th USENIX Security Symposium 
USENIX Association
6
process of building milkers. While there is a risk our
findings are not representative of the entire ecosystem,
we show in Section 4 there is substantial overlap between
the advertisers of each PPI network. This leads us to be-
lieve our sample of PPI networks extends to other unex-
plored commercial PPI operators.
4 Exploring Commercial PPI Offers
We provide a bird’s-eye-view of the business relation-
ships underpinning the commercial PPI ecosystem be-
fore diving into the unwanted software families reliant
on PPI distribution. We find that ad injectors, browser
settings hijackers, and system “clean-up” utilities dom-
inate the advertisers paying for installs. With anti-virus
engines flagging 59% of the weekly software families we
milk per PPI network, we observe at least 20% of PPI ad-
vertisers take advantage of anti-virus and VM detection
provided by PPI downloaders to avoid installing in hos-
tile environments.
4.1 High-Level Metrics
Using the 1,211 product identifiers embedded by PPI net-
works in each offer for accounting purposes, we calcu-
late the total distinct simultaneous offers per PPI network
and the duration that advertisers run each offer. On av-
erage, we observe 25–60 active offers per PPI network
each week, with a fine grained breakdown shown in Fig-
ure 7. The spike around July 2015 for Amonetize rep-
resents a temporary 2x increase in offers distributed by
the PPI network; it is unrelated to any change in our in-
frastructure. The majority of advertisers for Amonetize
and Outbrowse maintain their offers for less than a week
before cycling to a new product as shown in Figure 8. In
contrast, OpenCandy and InstallMonetizer attract adver-
tisers who run the same product for over 15 days.
4.2 Longest Running Campaigns
With over 873 software families classified by our analy-
sis pipeline, we examine which families consistently ap-
pear in the PPI ecosystem and thus sink the most money
into installs. Table 4 provides a detailed breakdown of
the software families with the longest running distribu-
tion campaigns and the PPI networks involved. The
families fall into five categories: ad injectors, browser
settings hijackers, system utilities, anti-virus, and major
brands. We provide sample screenshots of the resulting
user experience after installation in the Appendix.
Ad Injectors: Ad injectors modify a user’s browsing
experience to replace or insert additional advertisements
that otherwise would not appear on a website. Every PPI
network we monitor participates in the distribution of ad
injectors. Of the top eight programs listed by Thomas
200
150
k
e
e
w
r
e
p
100
s
r
e
f
f
G Amonetize
InstallMonetizer
OpenCandy
Outbrowse
G
G
O
50
G
G
G G G
G G G G
G
G
G
G
G
G
G
G G
G G
G
G G G
G
0
Jan 2015 Apr 2015
Jul 2015 Oct 2015
Jan 2016
Figure 7: Unique PPI offers operating each week. Amonetize
and Outbrowse cultivate a large number of offers compared to
OpenCandy and InstallMonetizer.
100%
s
r
e
f
f
o
f
o
n
o
i
t
c
a
r
F
75%
50%
25%
0%
G
G
G
G
G
1
G
G
G
G
G
G
G
G
G
G Amonetize
InstallMonetizer
OpenCandy
Outbrowse
G
G
G
G
G
100
Offer duration in days (log scale)
10
Figure 8: Lifetime of PPI offers. Advertisers run the same
offer on OpenCandy and InstallMonetizer for a median of 15
days, while Amonetize and Outbrowse offers quickly churn out
of existence to be replaced by new binaries.
et al. as the largest contributors to ad injection in 2014
for Chrome, Firefox, and Internet Explorer [34], we ob-
serve six currently in the PPI ecosystem. The companies
behind these software products are commercial entities
that span the globe: Wajam is located in Canada, Eorezo
is from France, while Crossrider originates from Israel.
These ad injectors recuperate the initial sunk cost of in-
stalls by monetizing users via display ads and shopping
helpers until a victim finally uninstalls the injector.
Browser Settings Hijackers: Settings hijackers modify
a victim’s default browser behavior, typically to change
the default tab or search engine to a property controlled
by the hijacker. These companies subsequently mone-
tize victims by selling their traffic to search engines and
potentially tracking user behavior. Examples include
Conduit Search (e.g., Search Protect) which came pre-
installed on Lenovo machines in 2014 [3]. We note that
some hijackers also profit by doubling as ad injectors.
USENIX Association  
25th USENIX Security Symposium  727
7
System Utilities: System utilities attempt to upsell users
using potentially deceptive practices, with some meet-
ing anti-virus definitions of scareware. This category in-
cludes “speedup” utilities like Speedchecker and Uniblue
that present nebulous claims such as “Attention! 2203
items are slowing down your PC” or “your system reg-
istry health status is dangerous.” These families repeat-
edly generate pop-up warnings until a victim either pays
a subscription fee of $30–40 or uninstalls the software.
This scheme is nearly identical to fake anti-virus, but
speedup utilities operate under a veil of legitimacy be-
cause they remove files from a client’s machine, thus
satisfying some notion of system improvement. Conse-
quently, anti-virus engines do not consider these families
to be malicious, only unwanted. Our categorization also
includes cloud backup utilities that repeatedly prompt
victims to upload their files to the cloud. Adhering to
the dialogue requires victims pay a recurring $120 sub-
scription fee.
All five of the top system utility families are them-
selves affiliate programs. Speedchecker promises affil-
iates a 30% commission on subscriptions. Uniblue ad-
vertises a commission of 70%. What emerges is a three-
tiered distribution network where system utility affiliates
register as advertisers on PPI networks and pay an up-
front distribution cost, but reap the commissions on suc-
cessful subscription conversions. It is also possible that
the system utility companies maintain a direct relation-
ship with PPI networks.
Anti-Virus: We observe four anti-virus products dis-
tributed via the PPI ecosystem: AVG, LavaSoft, Co-
modo, and Qihoo. We cannot determine whether these
companies directly purchase installs from commercial
PPI affiliate networks. We note that all four operate af-
filiate programs to outsource installs [1, 7, 24, 37]. As-