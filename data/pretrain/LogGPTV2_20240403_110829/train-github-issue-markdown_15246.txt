It appears that the boot path is using Unix-specific platform functions to implement the UID 0 check, without first verifying whether it is actually running on a Unix-based system. This results in an `AttributeError` when attempting to run the Celery worker on a Windows machine.

### Error Details

**Traceback:**
```
Traceback (most recent call last):
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\Scripts\celery-script.py", line 9, in <module>
    load_entry_point('celery==3.1.5', 'console_scripts', 'celery')()
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\__main__.py", line 29, in main
    main()
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\celery.py", line 80, in main
    cmd.execute_from_commandline(argv)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\celery.py", line 725, in execute_from_commandline
    super(CeleryCommand, self).execute_from_commandline(argv)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\base.py", line 300, in execute_from_commandline
    return self.handle_argv(self.prog_name, argv[1:])
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\celery.py", line 717, in handle_argv
    return self.execute(command, argv)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\celery.py", line 671, in execute
    ).run_from_argv(self.prog_name, argv[1:], command=argv[0])
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\worker.py", line 174, in run_from_argv
    return self(*args, **options)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\base.py", line 263, in __call__
    ret = self.run(*args, **kwargs)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\bin\worker.py", line 185, in run
    maybe_drop_privileges(uid=uid, gid=gid)
  File "C:\Users\John Krukoff\Documents\Pearson\nibiru\api\virtualenv\lib\site-packages\celery\platforms.py", line 496, in maybe_drop_privileges
    if os.geteuid():
AttributeError: 'module' object has no attribute 'geteuid'
```

**Command Executed:**
```
celery worker -A nibiru.tasks -b amqp://celery:celery@localhost:5672/nibiru --loglevel=Debug -c 2
```

**Environment:**
- Python 2.7.5
- Windows 8.1

### Analysis
The error occurs because the `os.geteuid()` function is specific to Unix-like systems and does not exist in the `os` module on Windows. The code should include a platform check to ensure that Unix-specific functions are only called on compatible operating systems.

### Suggested Solution
To resolve this issue, you can modify the `maybe_drop_privileges` function in `celery.platforms.py` to include a platform check. Here is an example of how you might do this:

```python
import os
import sys

def maybe_drop_privileges(uid=None, gid=None):
    if sys.platform.startswith('win'):
        # Skip privilege dropping on Windows
        return

    if os.geteuid() == 0:
        # Drop privileges
        if uid is not None:
            os.seteuid(uid)
        if gid is not None:
            os.setegid(gid)
```

By adding this check, the function will only attempt to drop privileges if it is running on a Unix-like system, thus avoiding the `AttributeError` on Windows.