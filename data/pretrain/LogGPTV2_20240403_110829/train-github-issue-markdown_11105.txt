Not sure if Bug or question, but at least unexpected behavior.
**Describe the bug**  
When querying duplicated results of the type `(User, int, datetime)`, an
attempted deduplication using `.unique()` did not have any effect, and
returned multiple rows containing the exact same values.
The reason is that the default identification strategy amounts to an element-
wise projection using `id`, and not `hash`.  
This causes the `int` and the `datetime` columns of two rows – even though
having the same value – to be recognized as different.
This is in contradiction to the “comparison by value“ assumption that I
personally have of such a deduplication, and also in contradiction to what the
docs state:
> The algorithm used to determine this uniqueness is by default the Python
> hashing identity of the whole tuple.
In particular, this issue is “resolved” by using an identity strategy, i.e.
`.unique(lambda row: row)` .  
This works because the result of the strategy is collected in a set, whose
notion of equality is based on `hash`.
If this is not considered a bug, it should be a warning explicitly stated in
the aforelinked section in the docs.
**To Reproduce**  
_(I'm really sorry, but it's a bit late in the night, I can create an MCVE
later if required.)_
I can provide context from a debugging session. I'm breaking in
`ResultInternal._allrows` in this line.
    >>> type(self)
    >>> self._metadata._unique_filters
    [, , ]
    >>> [tuple(id(el) for el in r) for r in made_rows[:4]]
    [(140281848273408, 140281848246224, 140281848184384),
    (140281848273408, 140281848267056, 140281848184480),
    (140281848273552, 140281848267344, 140281848184672),
    (140281848273552, 140281848267632, 140281848270896)]
    >>> [tuple(hash(el) for el in r) for r in made_rows[:4]]
    [(8767615517088, 13812, -7323339362369131990),
    (8767615517088, 13812, -7323339362369131990),
    (8767615517097, 13815, -4473479583634129130),
    (8767615517097, 13815, -4473479583634129130)]
    >>> [tuple(type(el) for el in r) for r in made_rows[:4]]
    [(, , ),
    (, , ),
     (, , ), 
    (, , )]
Feel free to ask for other details.
**Versions.**
  * OS:
  * Python: 3.9.1
  * SQLAlchemy:1.4.18
  * Database: Postgres
**Have a nice ~~day~~ night!**