User: 如何利用Shell脚本自动化系统运维任务？请提供一个实际案例。
Assistant: Shell脚本是系统运维过程中最常用的自动化工具之一，可以通过编写脚本文件实现快速自动化管理、监控、维护、备份、恢复等多种任务。以下是一个简单的实际案例。

场景描述：假设你有一个基于Linux系统的Web服务器，需要定期对服务器上的Nginx服务进行检查，并在服务停止后自动重启。这时候可以编写一个Shell脚本来自动化执行这个任务。

步骤如下：

1. 首先创建一个名为monitor-nginx.sh的脚本文件，将以下代码添加到文件中：

```
#!/bin/bash

#定义服务名称
SERVICE='nginx'

#检测服务状态
if pgrep $SERVICE > /dev/null
then
    echo "$SERVICE is running"
else
    echo "$SERVICE is not running - starting..."
    systemctl start $SERVICE
fi
```

2. 通过chmod命令将monitor-nginx.sh脚本文件赋予可执行权限：

```
$ chmod +x monitor-nginx.sh 
```

3. 执行脚本文件进行服务检查并自动重启：

```
$ ./monitor-nginx.sh
```

4. 可以将脚本文件添加到系统定时任务中，实现自动定时检查和重启服务：

```
$ crontab -e
# 例如每5分钟检查一次服务并重启
*/5 * * * * /path/to/monitor-nginx.sh
```

通过Shell脚本自动化执行系统运维任务可以提高效率、避免重复工作，同时也使得运维过程更为可靠和可控。