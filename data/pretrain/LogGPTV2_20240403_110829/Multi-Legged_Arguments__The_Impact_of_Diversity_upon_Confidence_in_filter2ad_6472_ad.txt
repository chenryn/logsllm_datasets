# Diverse Argument Legs in Dependability Claims

## Introduction
This paper explores the use of diverse argument legs to enhance the confidence in dependability claims. We present a probabilistic model and discuss its implications, drawing parallels with design diversity in system engineering.

## Probabilistic Model
We start by defining the probability of incorrectly deciding that a claim \( G \) is true, given evidence and assumptions from two different argument legs, \( A \) and \( B \). The probability can be expressed as:

\[
P(G | E_A, E_B, \text{ass}_A, \text{ass}_B) = P(G | E_A, \text{ass}_A) + P(G | E_B, \text{ass}_B) - P(G | E_A, E_B, \text{ass}_A, \text{ass}_B)
\]

The first and third terms on the right-hand side are zero if \( G \) is true with certainty from leg \( B \), given valid assumptions. Therefore, the probability simplifies to:

\[
P(G | E_A, E_B, \text{ass}_A, \text{ass}_B) = P(G | E_A, \text{ass}_A)
\]

If we assume, conservatively, that \( G \) is false if both sets of assumptions are false, and if only \(\text{ass}_B\) is false, then the confidence in \( G \) depends only on leg \( A \). This gives us the bound:

\[
P(G | E_A, E_B, \text{ass}_A, \text{ass}_B) \leq P(G | E_A, \text{ass}_A) + P(\text{ass}_A, \text{ass}_B)
\]

Assuming independence, the bound for the two-legged argument becomes:

\[
\alpha (1 - p_A p_B) + p_A p_B
\]

For \( p_A = p_B = 0.1 \), the confidence in the claim \( G \) is 98.1%, which is an increase from 81% using leg \( A \) alone or 90% using leg \( B \) alone. However, this 98.1% falls short of the 100% confidence when \(\text{ass}_B\) is known to be true with certainty.

## Discussion and Conclusion
### Benefits of Diverse Argument Legs
The examples show that using a two-legged argument increases confidence in a dependability claim compared to using either leg alone. Quantifying this increase requires simplifying assumptions, such as independence between different argument assumptions. Assigning numerical values to the parameters in these expressions is another significant challenge.

### Trade-offs Between Evidence and Assumptions
There is a trade-off between evidence and assumptions in arguments. For example, in a statistical argument like \( A \), the level of confidence depends on the nature and extent of the evidence. In contrast, a deterministic argument like \( B \) relies on a proof that either completely supports or refutes the claim.

### Dependence and Independence
Dependence (or independence) plays a crucial role in determining the levels of confidence from multi-legged arguments. Naively assuming independence in the confidence placed in the truth of the different sets of argument assumptions is often unreasonable. If one set of assumptions is found to be false, it may decrease confidence in the other set.

### Forced Diversity
In certain circumstances, forced diversity can be deployed, where the assumptions are designed such that:

\[
P(\text{ass}_A, \text{ass}_B) < P(\text{ass}_A) P(\text{ass}_B)
\]

While this approach is treated with suspicion in design diversity, it might be more feasible in diverse argument legs, as we may have a better understanding of potential weaknesses.

### Special Cases
Example 3 illustrates an interesting aspect of dependence between legs. If the testing leg \( A \) includes at least one failure, it completely refutes the proof leg \( B \). This reduces the multi-legged argument to the single testing leg, which may or may not have sufficient evidence to support the claim at the required confidence.

### Future Work
Further research is needed to explore other aspects of dependability arguments, such as their application to softer attributes like maintainability, competency, and trust. Different stakeholders may have varying confidence in the evidence provided, so diverse arguments may help build a consensus. Additionally, the different legs may need to be robust to changes in the environment and system.

### Broader Context
Diversity is ubiquitous in various contexts, including informal ones like different forms of testing and human judgment. It would be interesting to draw lessons from the use of diversity in these broader human endeavors. Ultimately, diversity in system design and dependability arguments is used to mask human failings, and there is little formal quantitative study in this area.

### Acknowledgements
This work was partially supported by the DISPO-2 Project, funded by British Energy Generation Ltd and BNFL Magnox Generation, and by the DIRC project, funded by the UK Engineering and Physical Sciences Research Council (EPSRC).

### References
[1] B. Littlewood, P. Popov, and L. Strigini, “Modelling software design diversity - a review,” ACM Computing Surveys, vol. 33, pp. 177-208, 2002.
[2] D. M. Hunns and N. Wainwright, “Software-based protection for Sizewell B: the regulator's perspective,” Nuclear Engineering International, vol. September, pp. 38-40, 1991.
[3] HSE, “Safety Assessment Principles for Nuclear Plants,” Health and Safety Executive ISBN 011 882043 5, 1992.
[4] MoD, “The Procurement of Safety Critical Software in Defence Equipment,” Ministry of Defence Def-Stan 00-55, Issue 2, August, 1997.
[5] CAA, “Regulatory Objective for Software Safety Assurance in Air Traffic Service Equipment,” Civil Aviation Authority SW01, 2001.
[6] M. Henrion and B. Fischhoff, “Assessing uncertainty in physical constants,” American J. of Physics, vol. 54, pp. 791-798, 1986.
[7] J. C. Knight and N. G. Leveson, “A reply to the criticisms of the Knight and Leveson experiment,” ACM Software Engineering Notes, vol. 15, 1990.
[8] G. Guiho and C. Hennebert, “SACEM software validation,” presented at 12th International Conference on Software Engineering, 1990.
[9] B. Littlewood, “The use of proofs in diversity arguments,” IEEE Trans Software Engineering, vol. 26, pp. 1022-1023, 2000.
[10] E. W. Dijkstra, “Notes on structured programming,” in Structured Programming, O.-J. Dahl, E. W. Dijkstra, and C. A. R. Hoare, Eds. London and New York: Academic, 1972, pp. 1-82.
[11] B. Littlewood and D. R. Miller, “Conceptual Modelling of Coincident Failures in Multi-Version Software,” IEEE Trans on Software Engineering, vol. 15, pp. 1596-1614, 1989.
[12] B. Littlewood and D. Wright, “Some conservative stopping rules for the operational testing of safety-critical software,” IEEE Trans Software Engineering, vol. 23, pp. 673-683, 1997.
[13] D. E. Eckhardt and L. D. Lee, “A Theoretical Basis of Multiversion Software Subject to Coincident Errors,” IEEE Trans. on Software Engineering, vol. 11, pp. 1511-1517, 1985.
[14] J. C. Knight and N. G. Leveson, “Experimental evaluation of the assumption of independence in multiversion software,” IEEE Trans Software Engineering, vol. 12, pp. 96-109, 1986.