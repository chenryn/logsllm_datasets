现在攻击者可以通过盗用admin用户的权限，在目标站点上执行任意JavaScript代码了。（开始牛批起来.jpg）
## 漏洞利用链构造
到目前为止，我们已经完整分析了四个漏洞，这些漏洞可以导致使用默认设置的WordPress中触发远程代码执行。我们以负责任的方式向WordPress安全团队报告了以上所有漏洞，并确保在公开技术细节之前有可用的补丁程序。一位老练的攻击者可以将其组合起来，并使用这些特性来定位目标，并拿下运行WordPress的任何高价值目标。在本节中，我们将探讨攻击者针对WordPress实例构造exp-chain的步骤。
### （一）插件漏洞
到目前为止，拿下WordPress网站的最简单方法是爬取目标网站使用的插件列表，然后在每个插件中审计出关键漏洞。WordPress可以安装超过50.000个免费插件，其中许多容易受到某种攻击。例如，在我们的`Advent
Calendar
2018`活动中展示了，即使是安装数量超过500万的最受欢迎插件也存在严重安全问题。这清楚地表明了第三方插件很可能对WordPress网站构成危险。考虑到诸如`wpscan`之类的工具，可以有效地枚举目标站点使用的所有插件的列表，攻击者的第一步就是简单地遍历该列表并尝试查找这种未验证的漏洞。在本文的上下文中，我们假定目标站点上的所有插件都是安全的，或者该漏洞需要某种类型的用户身份验证。
### （二）通过CSRF攻击
如果没有发现易受攻击的插件，攻击者可以审计WordPress核心源码，如本文所述，比如他可以利用CSRF漏洞来导致持久XSS（CVE-2019-9787），攻击者所需要做的就是在博客文章后留下无害评论，该博客文章包含指向攻击者控制的网站的链接即可。
> 我很喜欢您的博客文章，并无情的转载到了：www.my-similar-blog.com
默认情况下，所有评论都必须由管理员审核。由于需要对管理员进行身份验证才能进行审核，因此，当管理员单击被审核的评论中的恶意网站链接时，管理员绝壁已经登录了。管理员打开此恶意网站后，攻击者便可以利用CSRF漏洞并将新评论添加到管理面板中，从而触发跨XSS。例如，通过已登录管理员的浏览器呈现的JavaScript
payload可能会触发以下所述的身份验证的漏洞，以执行任意代码。
### （三）利用身份验证的漏洞
一旦攻击者成功攻破了目标网站上的帐户，他的下一步将取决于被劫持帐户的权限。默认WordPress中有五个不同角色：订阅者，贡献者，作者，编辑者和管理员。用户可以根据自己的角色执行不同的操作。
  * 订阅者只能读取内容。
  * 贡献者可以创建新的博客文章，但具有较高用户权限的用户审核后才能发布。
  * 作者可以发布自己的文章，并可以上传媒体文件。
  * 编辑者可以执行与作者相同的操作，但是可以使用任意HTML标签，甚至可以在博客文章和评论中使用``标签。
  * 管理员可以执行上述所有操作，并且可以安装新插件，甚至可以直接编辑主题和插件的php文件（出于安全优化考虑，可以禁用此功能）。
订户角色不太可能在WordPress网站上使用，因为它只是一个来宾帐户。贡献者角色无法上传文件，这将阻止拿到此角色帐户的攻击者利用之前所讨论的任何RCE漏洞，因为这些漏洞取决于对文件管理系统的权限。但是，我们发布了有关WordPress中第5个漏洞的详细信息。此漏洞是特权提升（CVE-2018-20152），它使得拿到贡献者权限，就可以在大多数WordPress网站上执行任意代码（[技术细节](https://blog.ripstech.com/2018/wordpress-post-type-privilege-escalation/)）。
如果攻击者可以使用作者或编辑者的帐户，他就可以利用依赖于文件上传访问权限的上述两个远程执行代码漏洞。
最后，如果攻击者可以直接拿到了管理员帐户，那他可以利用任意WordPress功能，因为管理员可以直接编辑已安装插件的php文件的内容。（该功能可以被禁用）。攻击者可以利用前篇第2节中的RCE漏洞或任何其他RCE漏洞，以获得对底层Web服务器的完全访问权限。
但是，尽管我们提出了攻击者如何从几乎所有用户角色升级到代码执行，但他需要首先在目标站点上拿到帐户。尽管以前的野外的攻击团队已经显示出它们在获取帐户方面的各种手段，但仍然并非总是能成功的。WordPress是一个不需要大量管理帐户的平台。通常，公司只会创建一个或两个管理员帐户，而管理这些帐户的员工可以是具有安全意识的IT专业人员，因此不会轻易受到欺骗。现在怎么办？
### 头奖：WordPress.org上的可存储XSS
WordPress.org网站包含所有WordPress网站使用的插件和主题存储库。此外，它管理开发人员用来编辑其主题和插件代码的帐户。在2019年5月，我们已通知WordPress安全团队有关此网站上由我们的静态代码分析解决方案发现的严重存储型XSS漏洞。显示存储库中的插件版本号时触发了此漏洞。
WordPress.org网站也是使用WordPress构建的。插件存储库中显示的插件只是专用帖子类型的帖子，这些帖子与特殊模板一起显示。下面的清单显示了负责显示版本号的代码。
这里的`get_post_meta()`是与WordPress的【Meta组件】使用的同一函数，正如我们先前所展示的那样它并不可信的。任何用户都可以创建一个新插件并将任意JavaScript代码注入其插件的插件版本中。然后导致其他开发者浏览到插件库时，触发XSS而受到攻击。之后将允许攻击者作为劫持开发者操作，把蠕虫payload添加到其他插件中，从而使payload像蠕虫一样在插件之间传播。
## 把所有弱点组合到一起
现在，我们已经展示了攻击者能够进行以下操作的能力：
  1. 如果启用了评论，则在没有任何用户凭据的情况下也能攻击WordPress网站
  2. 从几乎所有用户角色升级，尽管所有强化机制都已启用到远程代码执行
  3. 如果以上方法均失败，攻击者可以采取最后手段，劫持插件维护者的帐户并植入后门
## 总结
巴拉巴拉巴拉，老外就是喜欢巴巴好长一段，不翻译了，自己体会一下就好了。
总之就是“好好学习，多多挖洞”
  * 翻译自《How we found 5 0days in WordPress》- RIPS Technologies