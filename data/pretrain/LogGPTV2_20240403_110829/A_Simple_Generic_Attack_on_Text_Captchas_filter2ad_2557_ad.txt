sures as follows.
We chose Baidu, Taobao and Amazon as the representative
schemes respectively. For each experiment, 500 randomly
collected Captchas were used as a sample set, and another
500 randomly chosen samples as a test set.
1) Overlapping. Overlapping removes space between char-
acters and makes them overlapped, and it is considered by far
the most secure anti-segmentation technique [5].
We use the Baidu scheme as a case study to evaluate the
effectiveness of overlapping. We modify the original Captchas
by increasing character overlapping by 1, 2 and 3 pixels,
respectively, and then run our attack on them. Our new success
rates are 21.2%, 15.2% and 8.4%, respectively, while the
original is 44.2%. The more overlapped the characters, the
less successful our attack became.
2) Rotating. To evaluate the effectiveness of rotating as
a defence, we chose the Taobao scheme for an experiment.
We rotated one or more characters to make adjacent strokes
of different characters connected or overlapping, but kept the
Captcha length and characters unchanged. The success rate our
attack achieved on the hardened test set is 7.8the original set.
This indicates rotating does have a positive effect in enhancing
security.
3) Warping. Warping has two forms: global warping
that transforms the whole Captcha string globally, and local
warping that acts on some of the characters.
We tested both forms of warping on the Amazon scheme
(see Figure 9). With global and local warping applied, respec-
tively, the success rate of our attack dropped from the original
25.8% to 5.4% and 8.8%, respectively.
(a) Original
(b) Global warping
(c) Local warping
Fig. 9. Warping defense on Amazon Captcha.
10
4) Combining countermeasures. We also perform a new
set of experiments to test various combinations of the coun-
termeasures, and evaluate each combination’s resistance to our
attack, in the aim of making a further insight into the strength
of combining these mechanisms. There are four different
combinations of these countermeasures and we test all of them.
To achieve consistent and rigorous results, our experiments test
all the countermeasure combinations on a single scheme. We
choose Amazon for our experiments, and the size of both our
sample set and test set is 500.
Table XI summarises our experiment results, listing each
countermeasure and combination along with its inﬂuence on
the Captcha’s resistance to our attack.
The results clearly suggest the following. First, the com-
bination of two countermeasures is indeed more secure than
each single countermeasure alone. The combination of three
countermeasures achieves the best defence. Among all single
countermeasure, warping is the most secure one. However,
warping is a double-edged sword; it indeed enhances security,
but too much warping will signiﬁcantly decrease usability.
What a level of warping is good to strike the right balance be-
tween security and usability is an important issue for Captcha
designers to consider.
Although all the above countermeasures achieve a reduc-
tion of our success rates, our attack still has broken all the
hardened schemes, since it has achieved a success rate of
higher than 1% for each of them. Therefore, these mechanisms
are at most partial defences. On the other hand, in performing
our empirical studies, we did not consider and evaluate the
impact of these defence mechanisms on usability. However, it
is important to strike the right balance between security and
usability in Captcha design [26]. It remains an open problem
what design will be simultaneously usable and robust to our
attack.
VIII. SUMMARY AND CONCLUSION
We have proposed a simple attack on text Captchas. Tested
on real-world Captchas deployed by top 20 most popular web-
sites, and on several Captchas that were generally considered
hard, our attack has broken them all, mostly with a good
success. Although our success rates on a few schemes are
relatively low, we believe that our attack’s general applicability
trumps very high performance. It is more important to be able
to break any novel scheme to some extent, than to break a
single scheme very well.
If an attacker aims to break a particular scheme, ad hoc
attacks might indeed achieve a better success rate than our
generic attack. But when the attacker aims to break multi-
ple schemes, our generic attack means a much better cost-
effectiveness.
In contrast to the common practice of Captcha robustness
analysis, which is based on a toolbox approach, our attack
uses a single segmentation method, and a single recognition
strategy. Our attack is simple, fast and generic, and because
of these characteristics, it is probably the best attack so far.
Our attack is based on a novel application of 2D Log-Gabor
ﬁlters. The key insight and innovation that differentiates our
attack from prior art is the following. No matter Captcha texts
TABLE XI.
COUNTERMEASURE COMBINATIONS.
Experiments
Sample Image
Reconstruction Image
Overlapping
Rotating Warping
Attack Success
1
2
3
4
5
6
7
X
11.6%
X
13%
X
8.8%
X
X
7.6%
X
X
7.4%
X
X
6.8%
X
X
X
1.4%
are connected or not, and no matter they use hollow fonts
or not, Log Gabor provides a uniform and effective method
for breaking the images into a small number of meaningful
pieces, i.e. character strokes, in a structured way. These pieces
then can be assembled to reconstruct correct characters with
an intelligent algorithm.
It is known for long that simple cells in the visual cortex
of mammalian brains can be modeled by Gabor functions
[10, 11]. That is to say, perception in the human visual system
is more or less similar to image analysis with Gabor ﬁlters.
These profound insights help to explain the power of our
attack, and the failure of common text Captchas that we have
analysed: our humans’ Captcha-solving process can be compu-
tationally approximated by our Gabor ﬁlter based recognition
approach. When computers can reliably approximate via an
automated algorithm humans’ solving process, certainly such
Captcha designs are doomed. However, to reach this simple
observation, it takes many years of hard work.
Since the invention of Captcha technology in early 2000,
an open problem that is important for security has been out-
standing in the research communities and intrigued researchers
for 15 years: is there an effective but general attack that breaks
all (representative) text schemes? The implication of resolving
this open problem is apparent: are we on the wrong direction in
text Captcha design? Characters are distorted harder everyday,
but is this really necessary, or just making a legitimate user’s
life harder? Our attack is a step forward towards resolving this
long-standing problem, and contributes to debates around its
implications.
A full defence against our attack is an interesting but
challenging open problem, which we share with the whole
community. We expect our work to inspire novel attacks and
defences, as well as innovative designs in this interesting
interdisciplinary area.
Given the practical relevance and intellectual interest of the
Captcha technology, it is important to ask: Are text Captchas
dead? Our answer is both yes and no. On the one hand, as
illustrated by our attack, the common practice of text Captcha
designs is certainly dubious and shaking. On the other hand,
we believe innovations will be able to bring out next generation
of text Captchas that are more usable and more secure than
its predecessors. We encourage both the research community
and the industry to ponder and discuss: what is the next step
for text Captchas? Or, is it now the time to take alternative
solutions such as image recognition Captchas more seriously?
ACKNOWLEDGEMENTS
We thank Ross Anderson, John Daugman, Jussi Palom¨aki
and Will Ng for helpful conversations, and thank Venkat
Venkatakrishnan and anonymous reviewers for constructive
comments. Xidian authors are supported by the National
Natural Science Foundation of China (61472311) and the
Fundamental Research Funds for the Central Universities.
REFERENCES
[1] A S El Ahmad, J Yan, and L Marshall. The robustness
of a new captcha. In Proceedings of the Third European
Workshop on System Security, pages 36–41. ACM, 2010.
[2] A S El Ahmad, J Yan, and M Tayara. The robustness
of Google CAPTCHAs. Computing Science, Newcastle
University, 2011.
[3] Alexa. Alexa top 500 global sites. https://www.alexa.
com/topsites.
[4] E Bursztein, J Aigrain, A Moscicki, and J C Mitchell. The
end is nigh: generic solving of text-based captchas.
In
8th USENIX Workshop on Offensive Technologies(WOOT
14), San Diego, CA, August 2014. USENIX Association.
[5] E Bursztein, M Martin, and J Mitchell. Text-based
In CCS’11, pages
captcha strengths and weaknesses.
125–138. ACM, 2011.
[6] E Bursztein, A Moscicki, C Fabry, S Bethard, J C
Mitchell, and D Jurafsky. Easy does it: more usable
captchas. In CHI’14, pages 2637–2646. ACM, 2014.
11
[7] K Chellapilla, K Larson, P Y Simard, and M Czerwin-
ski. Building segmentation based human-friendly human
interaction proofs, 2005.
[8] Z Dang, J Lei, and J Lan. A method of constructive
captcha based on gabor sub-space. Journal of Computa-
tional Information Systems, 9(8):3093–3099, 2013.
[9] J Daugman. Uncertainty relation for resolution in space,
spatial frequency, and orientation optimized by two-
dimensional visual cortical ﬁlters. JOSA A, 2(7):1160–
1169, 1985.
[10] J Daugman. Probing the uniqueness and randomness of
iriscodes: Results from 200 billion iris pair comparisons.
Proceedings of the IEEE, 94(11):1927–1935, 2006.
[11] D J Field. Relations between the statistics of natural
images and the response properties of cortical cells. JOSA
A, 4(12):2379–2394, 1987.
[12] W T Freeman and E H Adelson. The design and use of
steerable ﬁlters. IEEE Transactions on PAMI, 13(9):891–
906, 1991.
[13] H Gao, W Wang, J Qi, X Wang, X Liu, and J Yan. The
robustness of hollow captchas. In CCS’13, pages 1075–
1086. ACM, 2013.
[14] P Golle. Machine learning attacks against the asirra
captcha. In Proceedings of the 15th ACM conference on
Computer and communications security, pages 535–542.
ACM, 2008.
[15] I J Goodfellow, Y Bulatov, J Ibarz, S Arnoud, and V Shet.
Multi-digit number recognition from street view imagery
using deep convolutional neural networks. arXiv preprint
arXiv:1312.6082, 2013.
[16] Y Lecun. The mnist database of handwritten digits
algorithm results. http://yann.lecun.com/exdb/mnist/.
[17] M Mohamed, N Sachdeva, M Georgescu, S Gao, N Sax-
ena, C Zhang, P Kumaraguru, P C van Oorschot, and
W B Chen. A three-way investigation of a game-
captcha: automated attacks, relay attacks and usability. In
Proceedings of the 9th ACM symposium on Information,
computer and communications security, pages 195–206.
ACM, 2014.
[18] G Mori and J Malik. Recognizing objects in adversarial
In CVPR’03, vol-
clutter: Breaking a visual captcha.
ume 1, pages I–134. IEEE, 2003.
[19] P Y Simard. Using machine learning to break visual
human interaction proofs (hips). In NIPS’04, 2004.
[20] J Tam, J Simsa, S Hyde, and L V Ahn. Breaking audio
captchas. In Advances in Neural Information Processing
Systems, pages 1625–1632, 2008.
[21] K Thomas, D McCoy, C Grier, A Kolcz, and V Paxson.
Trafﬁcking fraudulent accounts: the role of the under-
ground market in twitter spam and abuse.
In USENIX
Security Symposium, 2013.
[22] Vicarious. Vicaricous. http://vimeo.com/77431982.
[23] Y Xu, G Reynaga, S Chiasson, J M Frahm, F Monrose,
and P C van Oorschot. Security and usability challenges
of moving-object captchas: Decoding codewords in mo-
tion. In USENIX Security Symposium, pages 49–64, 2012.
[24] J Yan and A S El Ahmad. Breaking visual captchas with
naive pattern recognition algorithms. In ACSAC’07, pages
279–291. IEEE, 2007.
[25] J Yan and A S El Ahmad. A low-cost attack on a
In CCS’08, pages 543–554. ACM,
microsoft captcha.
2008.
[26] J Yan and A S El Ahmad. Usability of captchas or
usability issues in captcha design. In SOUPS’08, pages
44–52. ACM, 2008.
[27] B B Zhu, J Yan, Q Li, C Yang, J Liu, N Xu, M Yi,
and K Cai. Attacks and design of image recognition
captchas. In Proceedings of the 17th ACM conference on
Computer and communications security, pages 187–200.
ACM, 2010.
APPENDIX
Here we present the details of key steps like graph building,
pruning and searching for the QQ and Microsoft schemes.
Figure 10 shows QQ and Microsoft challenges with all com-
ponents rank ordered.
(a) QQ Sample
(b) Microsoft Sample
Fig. 10. All components rank ordered.
TABLE XII.
THE INITIAL n × n TABLE FOR QQ CAPTCHA.
1
2
3
4
5
6
7
8
9 10 11 12 13 14
• • • • • •
• • • • • •
• •
• • • • •
• • •
• •
15 16 17 18 19 20 21 22 23 24 25 26
• •
• •
• •
• •
• • • • •
•
•
•
1
2
3
4
5
6
7
8...12
13
14
15
16
17
18
19
20
21
22...26
12
Fig. 11. The search graph for QQ sample.
Tables XII show the corresponding initial tables for the
QQ sample, and Figure 11 is its search graph. Only one
path survives pruning for the QQ sample, which simpliﬁes
the search process to an extreme.
TABLE XIII.
THE INITIAL n × n TABLE FOR MICROSOFT CAPTCHA.
1
2
•
3
•
•
4
•
•
5
•
•
•
•
6
•
•
•
•
7
8
9
10 11 12
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
1
2
3
4
5
6
7
8
9