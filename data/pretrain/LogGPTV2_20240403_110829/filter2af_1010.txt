# 从JS接口的泄露到拿下通用型eduGetshell漏洞
好兄弟给了一个后台，让我试试看，常规的看到后台界面 又没有验证码 果断直接Burp暴力破解看看有没有弱口令 熟悉的味道 还是想的太天真 果然是没有
也没有抓到什么有用的信息 目录也没有(页面中的未进行爆破),也没有跳转的的一些网站
没办法 开启F12大法 network查看加载的js的文件 找找有没有关键的js文件 找到了login.js和xxx_xx.js
打开js文件一步一步的进行代码审计
简单了解一下 有跳转页面 而且注释也写明白了 当登录的是admin登录失败会跳转到xxx.aspx 直接打开这个页面，应该也算一个未授权的界面
一个数据库设置界面 可惜了没有可以直接修改的地方 不过也获取到了 数据库的一些信息(不过是假的....)  
密码的type是password 直接f12修改为type 就可以看到明文了
继续观察下一个地方 这个地方就有意思了 参数翻译一下就是获取当前的配置
不多说 直接拼接函数 成功获取到了真实的数据库信息 拿到一个敏感信息泄露漏洞 但是经过测试发现是内网连接的 只能放弃
接着继续看 有一个跳转页面 是下载excel模板的地方 推测应该是上传点 然后有模板可供下载 先试试看能不能任意文件下载
直接下载当前页面的aspx脚本的源码 下载成功 又拿下一个任意文件下载漏洞
还有一个上传的接口 可惜没有给出敏感的数据 尝试构造和文件下载相同格式的路径也无果
本来以为就此结束了,过了两天发现危害太低了，又回来重新看了一眼，好家伙发现一个网站在html中写了一串代码，峰回路转 直接发现了好多个跳转的界面
一个个的尝试下来，基本都有验证，不过还是遗留了一个未授权的界面，直接访问此界面  
不错直接登录到后台了
常规的寻找一下文件上传点 尝试Getshell
只有一个前端限制，修改一下后缀格式，成功绕过
拿出组传的菜刀一连
至此 审计结束 拿下来了一个高危和两个低危漏洞  
最后通用全部提交到src上
# 总结
思路就是从js代码去入手审计,没有什么难点,主要还是能够找到一些脆弱点进行测试，扩大测试的范围从而拿下站点