I created a self-signed certificate with OpenSSL and started a TLS server with
Deno. I was able to start the server without problems, but when sending a
request from the browser the server crashed. I received two different error
messages from Firefox and Chrome. It is clear that a self-signed certificate
is not suitable for production systems, but usually it can be temporarily
bypassed in the browser by setting "Advanced" and "I'll take the risk".
I created the certificates with the following command:
    openssl req  -nodes -new -x509 -keyout server.key -out server.cert
Then created a minimal working example:
    import { serveTLS } from "https://deno.land/x/std@0.52.0/http/server.ts";
    const options = {
      port: 3000,
      hostname: "0.0.0.0",
      certFile: "./server.cert",
      keyFile: "./server.key"
    };
    const s = serveTLS(options);
    for await (const req of s) {
      req.respond({body: "Hello World"});
    }
And ran it with the following command:
    $ deno run --allow-all https://gist.githubusercontent.com/Caesar2011/eba3b46e944ef221100f6be79c0e3e7d/raw/15bd52963d6a27787ed9261f1b78d8a05bf5058e/deno_bad_certificate.ts
My version of Deno:
    $ deno --version
    deno 1.0.1
    v8 8.4.300
    typescript 3.9.2
In a browser, the server is then accessible at:
    https://0.0.0.0:3000/
Server crash/shutdown after a call in Firefox (76.0.1, Ubuntu):
    ERROR RS - rustls::session:514 - TLS alert received: Message {
        typ: Alert,
        version: TLSv1_3,
        payload: Alert(
            AlertMessagePayload {
                level: Fatal,
                description: BadCertificate,
            },
        ),
    }
    error: Uncaught InvalidData: received fatal alert: BadCertificate
        at unwrapResponse ($deno$/ops/dispatch_json.ts:43:11)
        at Object.sendAsync ($deno$/ops/dispatch_json.ts:98:10)
        at async TLSListenerImpl.accept ($deno$/tls.ts:31:17)
        at async Server.acceptConnAndIterateHttpRequests (https://deno.land/x/std@0.52.0/http/server.ts:221:14)
        at async MuxAsyncIterator.callIteratorNext (https://deno.land/x/std@0.52.0/async/mux_async_iterator.ts:28:29)
Server crash/shutdown after a call in Chromium (81.0.4044.138, Ubuntu):
    ERROR RS - rustls::session:514 - TLS alert received: Message {
        typ: Alert,
        version: TLSv1_3,
        payload: Alert(
            AlertMessagePayload {
                level: Fatal,
                description: CertificateUnknown,
            },
        ),
    }
    error: Uncaught InvalidData: received fatal alert: CertificateUnknown
        at unwrapResponse ($deno$/ops/dispatch_json.ts:43:11)
        at Object.sendAsync ($deno$/ops/dispatch_json.ts:98:10)
        at async TLSListenerImpl.accept ($deno$/tls.ts:31:17)
        at async Server.acceptConnAndIterateHttpRequests (https://deno.land/x/std@0.52.0/http/server.ts:221:14)
        at async MuxAsyncIterator.callIteratorNext (https://deno.land/x/std@0.52.0/async/mux_async_iterator.ts:28:29)