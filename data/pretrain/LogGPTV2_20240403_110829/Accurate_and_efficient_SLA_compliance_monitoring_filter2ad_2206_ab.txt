stream as a marker ﬂow, viz., that the loss rate observed by this ﬂow
has a meaningful relationship to other ﬂows along the path. We
note again that the probes in [35] consist of multiple packets (3 by
default), which has some similarity to a TCP stream where delayed
ACKs cause a sender to release two closely-spaced packets. While
we do not claim that the probe stream is, in general, the same as a
TCP stream, our results below demonstrate that such an assumption
may be reasonable in this context.
3.4 Multi-Objective Probing
We use the term multi-objective probing to refer to simultaneous
estimation of multiple performance metrics using a single probe
stream. The individual discrete-time algorithms described above
operating at the same time may schedule probes to be sent at the
same time slot. Such requests can be accommodated by tagging
probes according to the relevant estimator. Thus, a single probe
stream can be used for concurrent estimation of packet loss, delay,
delay variation, and other quantities, thereby reducing the impact
of measurement trafﬁc on the network.
The basic architecture of our multi-objective probe scheduler is
depicted in Figure 1. The main component of the architecture is a
discrete-time scheduler that provides callback and probe schedul-
ing mechanisms. Probe modules implement the various path-oriented
estimation methods described above. This design allows for logical
separation among multiple, simultaneously operating measurement
methods and for optimizations of network bandwidth.
probe modules
delay
delay var.
loss
scheduler
discrete time probe scheduler
network interface
probe stream
time
1: Multi-objective probe scheduler architecture. Algorithmic
modules interact with a discrete-time probe scheduler to perform
estimation of delay, delay variation, and loss characteristics.
4. TOWARD NETWORK-WIDE SLA
COMPLIANCE MONITORING
The previous section described a set of methodologies for efﬁ-
cient per-path monitoring. SLA compliance monitoring, however,
requires accurate and efﬁcient measurement on a network-wide ba-
sis. However, the measurement overhead of sending probes over a
full n2 mesh of paths is highly undesirable. In this section, we de-
scribe the mathematical foundation that enables economical moni-
toring over a subset of network paths. This new methodology en-
ables greater ﬂexibility for specifying performance assurances in
terms of quantiles of a distribution, while attaining a high level of
measurement efﬁciency.
4.1 Routing Matrices, Measurement,
and Linear Dependence
Let G = (V, E) be a directed graph comprising vertices (nodes)
V and directed edges (links) (v1, v2) ∈ E ⊂ V × V . Let R be a set
of paths (routes) i.e., each r ∈ R is an ordered set of n > 0 con-
tiguous links (v0, v1), (v1, v2), . . . , (vn−1, vn). The routing matrix A
associated with R is the incidence matrix of the links in the routes,
namely, Are = 1 if link e occurs in route r and zero otherwise.
We now describe what we term the scalar additive network per-
formance model. Let x : E → R be a function on the links. This
naturally gives rise to the path function y : R → R deﬁned as yr =
∑e∈r xe = ∑e∈E Arexe. This relation is a prototype for additive net-
work performance models. Two examples are:
Network Delay: The latency of packet traversing the path r is
the sum of the latencies incurred on each link
of the path. This may be understood either as
the xe being individual measurements, or as xe
being mean latencies. This is the example on
which we focus in this paper.
In this model, xe is the log transmission proba-
bility of traversing link e; if there is no spatial
correlation between link losses we can write yr
as the log transmission probability along the
path r.
Network Loss:
Performance Tomography.
Two classes of inference problems arising from the framework
above have been studied recently. In link performance tomography
the aim is to infer the distribution of the link variable xe given only
path measurements yr. Variants of this problem have been studied,
mostly depending on exploiting correlations between measurement
on different paths, e.g., either at the packet level, e.g., by using
multicast probes [12, 25] or groups of unicast probes [23, 39], or
more generally of distinct packet streams that experience common
performance impairments [9, 22].
A second class of problem has more recently attracted attention
[14, 15, 17]: given a set of path performance measures across inter-
secting paths, is it possible to infer the whole set of measures if only
a subset is known? Clearly there is some relation between the two
problems in the sense that if all link performance measures could
be inferred from a subset of path measures, then the remaining path
measures could be determined simply.
For scalar additive performance measures, the second problem
has a simple expression in terms of the routing matrix A. Suppose
that the matrix A is not of full (row) rank, i.e., the set of row vectors
is not linearly independent. Consequently there exists a minimal set
of paths S ( R which span in the sense that such that every row of
ar = {Are : e ∈ E} of A can be expressed as a linear combination
of the {ar : r ∈ S} . For the scalar additive performance model, this
translates to saying that all {yr : r ∈ R} can be determined from the
subset {yr : r ∈ S}. Recent work on this problem has focused on
understanding how the dimension of the set S depends on network
topology. Chen et al. [15] concluded that the number of paths in S
grows as O(#V ) (i.e., linear in the number of network nodes #V ) in
a real router-level topology, or at worst like O(#v log #V ) in some
simulated topologies.
Distributional Path Performance Measures.
In this work we extend the computational approach described
above to infer distributions of a set of path performance measures
from a subset. We assume in a given network setting the existence
of the set S ( R with the properties detailed above has been estab-
lished. This means in particular that for every network path in R,
every link in this path is traversed by some path in the subset R,
and below we show how the distributions of delay in path in R can
be inferred from only those in S. This inference depends on the as-
sumption that any packet traversing a given link will experience the
same delay distribution, even if the actual delays differ. The proofs
of the results are relatively straightforward but have been omitted
due to space limitations and will appear in a future technical report.
There are two challenges in trying to extend the scalar approach
to distributions. The ﬁrst is dependence among link measurements.
Dependence is not an issue in the linear algebra of mean quantities
since the average of a linear combination of random variables is
equal to same linear combination of respective averages even when
the variables are dependent. Working with distributions is more
complex, for example the distribution of a sum of random variables
is not equal to the convolution of their distributions unless the ran-
dom variables are independent. A second complexity is algebraic:
there is no simple subtraction operation for distributions. For ex-
ample, if X and Y are independent random variables and X = Y in
distribution, it is not the case that X −Y is identically zero.
4.2 Delay Distributional Inference
We suppose routing (and hence the matrix A) is static over a
measurement interval. On each path r a stream of measurement
packets labeled i = 1, 2, . . . , nr is launched along the path. Packet i
incurs a latency X i
re on traversing the link e ∈ r. The latency of the
packet on the path is Y i
r = ∑e∈r X i
re.
To motivate the following, consider the star topology network
in Figure 3b in which source nodes v1, v2 and destination nodes
v3, v4 are linked through a central node vc. Denote the edges by
e1 = (v1, vc), e2 = (v2, vc), e3 = (vc, v3) and e4 = (vc, v4). We
consider the 4 paths r1 = (e1, e3), r2 = (e1, e4), r3 = (e2, e3) and
r4 = (e2, e4). Let Xn be the delay on link en, and Yn the delay on
path rn. Clearly, Y1 + Y4 =d Y2 + Y3. Assume that the distributions
of Y2,Y3 and Y4 are known; we focus on inferring that of Y1.
Our major statistical assumption is that all X i
re are independent.
We remark that the opposite type of assumption, i.e., the iden-
tity of certain link variables, has been employed for multicast per-
formance tomography (and some unicast variants) to describe the
propagation of multicast packets. The identity assumption is natu-
ral in that case, since it reﬂects either the delay encountered by a
single multicast packet or a train of closely spaced unicast packets
prior to branching to distinct endpoints.
In the present case, we can consider two types of dependence. In
the ﬁrst case we consider dependence between different measure-
ments. Provided probe packets are dispatched at intervals longer
than the duration of a network congestion event, then probes on
the same path or on intersecting paths are unlikely to exhibit delay
dependence, even if individual packets experience the distribution
of congestion events similarly on the same link. Thus, is seems
reasonable to model the Y i
re as independent. The second case to
consider is dependence among the individual link delays X i
re on
a given path r. Violation of this property might occur in packet
streams traversing a set of links congested by the same background
trafﬁc. As far as we are aware, there are no live network or testbed
studies that have investigated this property. Dependence was found
in a network simulation study, but was pronounced only in a small
network conﬁguration with few trafﬁc streams [25]. For this rea-
son we believe that link delay correlation need not be signiﬁcant in
a large network with a diverse trafﬁc.
For r ∈ R let {brr′ : r′ ∈ S} be the coefﬁcients of the spanning set
{ar′ : r′ ∈ S} in the expression of ar, i.e.,
ar = ∑
r′∈S
r = {r′ ∈ S : brr′ > 0} and S−
Let S+
brr′ ar′
(1)
r = {r′ ∈ S : brr′ < 0}.
LEMMA 1. Assume {ar′ : r′ ∈ S ( R} is a minimal spanning set.
For each r ∈ R there exist positive integers dr and {drr′ : r′ ∈ S}
such that
drar + ∑
r′∈S−
r
drr′ ar′ = ∑
r′∈S+
r
drr′ ar′
(2)
For each r ∈ R, e ∈ E let X
independent copies of a single delay on link e, e.g., X 1
(i)
let Y
r
=d will denote equality in distribution.
denote the sum of i independent copies of Y i
(i)
re , i = 1, 2, . . . denote the sum of i
re; likewise
r . The symbol
THEOREM 1.
(dr)
r + ∑
Y
r′∈S−
r
(drr′ )
Y
r′
=d ∑
r′∈S+
r
(drr′ )
Y
r′
(3)
r and S+
One can already see in Theorem 1 a basic feature of our results
that follows merely from the partition of S into S−
r . Suppose
we are primarily interested in determining whether Yr often takes
some large value. Suppose measurements tell us that some of the
{Yr′ : r′ ∈ S+
r } tend to take large values, but that none of the {Yr′ :
r′ ∈ S−
r } do. Then we know from the equality (3) that Yr must
also tend to take large values. If none of the {Yr′ : r′ ∈ S} tend to
take large values, then neither does Yr. But when some Yr′ for r′ in
both S+
tend to take large values, then it is difﬁcult to draw
conclusions about Yr. These observations preﬁgure our later results
on distributional bounds for Yr.
r and S−
r
Distributions and Inversion.
Let Yr denote the common distribution of the Y i
Laplace transform, i.e., fYr(s) = R ∞
volution. In terms of distributions, (3) becomes
0
r , and fYr its
Yr(dy)e−sy. Let ∗ denote con-
Y ∗dr
r
∗
r′∈S−
r
Y ∗drr′
r′
= ∗
r′∈S+
r
Y ∗drr′
r′
(4)
To what extent can we solve these convolution equations? In Laplace
transform space we obtain from (4):
fY dr
r ∏
r′∈S−
r fY
drr′
r′ = ∏
r′∈S+
r fY
drr′
r′
(5)
Given empirical estimates of {Yr′ : r′ ∈ S} one can in principle use
numerical Laplace transform inversion to recover all Yr. This is an
approach we intend to pursue in a subsequent work. In this paper,
we use (4) directly in order to obtain bounds on the distributions
Yr.
Convolution Bounds.
Let Vi, i = 1, 2, . . . , n be independent random variables and set
i=1 Vi be their sum. Let Qp(Vi) denote the p-quantile of Vi,
V = ∑n
i.e.,
Pr[V ≤ x] ≥ p ⇔ Qp(V ) ≤ x
(6)
The following result formalizes the perhaps obvious statement that
if you know that V1 ≤ x a fraction p of the time, and V2 ≤ y a
fraction q of the time, then you can conclude that V1 + V2 is less
than x + y no less than a fraction pq of the time.
THEOREM 2. Let Vi, i = 1, 2, . . . , n be independent random vari-
ables with sum V = ∑n
i=1 Vi, and let pi ∈ (0, 1] with p = ∏n
i=1 pi.
that Xi are exponentially distributed with distinct means µi. Then
Y +
1 has a mixed exponential distribution with PDF
Qp(V ) ≤
n
∑
i=1
Qpi (Vi)
(7)
y+
1 (x) =
4
∑
i=1
e−x/µi µ2
i
∏ j∈{1,2,3,4}, j6=i(µi − µj)
Network Quantile Bounds.
THEOREM 3. Denote Y ±
r = ∑r′∈S+
r
(drr′ )
Y
r′
(dr)
(i) Qp(Yr) ≥ (dr)−1Qpdr (Y
r
).
(dr)
(ii) Qp(Y
r
) ≥ Qpq(Y +
r ) − Qq(Y −
r )
(iii) Qp(Yr) ≥ (dr)−1 supq∈(0,1](Qpdr q(Y +
r ) − Qq(Y −
r ))
Theorem 3 provides a lower bound on the quantiles, or, equiv-
alently, an upper bound on the cumulative distribution. Thus, it
underestimates the frequency with which a given level is exceeded.
This may or may not be desirable if the measured quantiles are to be
used for detecting SLA violations (i.e., raising alarms). On the one
hand false positives will be reduced, while at the same time some
high quantiles may be underestimated. Following a network exam-
ple below, we describe how knowledge of the topology of measured
paths may be used to adjust alarm thresholds in order to mitigate
the effects of quantile underestimation.
Computation of Quantiles.
We use the measured end-to-end latencies on the paths r ∈ S,
the Ωr = {Y i
r : i = 1, 2, . . . , nr}, to estimate the required quantiles
on the RHS of Theorem 3(iii). To compute the distribution of Y ±
r
drr′
i=1 yrr′ : yrr′ ∈ Ωr}.
we might construct the sets of values {∑r′∈S±
r ∑
drr′
However, this gives rise to n±
r′ member of each set,
n
which may require prohibitively large amounts of memory. Instead,
memory can be controlled by discretizing the distributions before
convolution.
r = ∏r′∈S±
r
Discrete Mass Distributions and Their Convolution.
A positive discrete mass distribution is speciﬁed by a tuple (ε, n, m =
{mi : i = 0, . . . , n}) where ε is the bin width, with a mass mi in bin
[iε, (i + 1)ε) for i = 0, 1, . . . , n − 1, and mass mn in [nε, ∞). Two
such distributions (ε, n, m) and (ε′, n′, m′) the have convolution
(ε, n, m) ∗ (ε′, n′, m′) = (ε+ε′, 1 + (n − 1)(n′ − 1), m′′)
(8)
j
r : Y i
r : Y i
j = ∑
i=0 mim′
r ≥ nε}. The distribution of each {∑r′∈S±
where m′′
j−i. Given ε, n, an set of measurements {Y i
r :
i = 1, 2, . . . , nr} gives rise to a empirical discrete mass distribution
(ε, n, m) with mi = #{Y i
r ∈ [iε, (i + 1)ε)} for i = 0, 1, . . . , n − 1
drr′
and mn = #{Y i
i=1 yrr′ :
yrr′ ∈ Ωr} is then estimated by taking the grand convolution over
r′ ∈ S±
r of the drr′ -fold convolutions of the empirical mass distri-
bution generated from each #{Y i
r′ ∈ [iε, (i + 1)ε)}. A target
resolution ε in the ﬁnal distribution is achieved by choosing resolu-
tions ε′ for the constituent distribution that sum to ε, for example,
ε′ = ε/ ∑r′∈S±
drr′ . Finally, we normalize to a probability distribu-
tion by dividing each mass element by n±
r . We call the resulting
variables bY ±
r , and use them in place of the Y ±
r
in Theorem 3.
r′ : Y i
r ∑
r
Network Example.
In the above formalism, we have S+
d12 = d13 = d14 = 1 and Y +
1 = Y2 +Y3 and Y −
1 = {2, 3}, S−
1 = {4} with
1 = Y4. Suppose now
(9)
(10)
while Y −
1 has a mixed exponential distribution with PDF
y−
1 (x) =
e−x/µ2 − e−x/µ4
µ2 − µ4
For the optimization of Theorem 3, elementary calculus shows that
when Y ±
r , the stationary points of q 7→ Qpdr q(Y +
Qq(Y −