ply, as it makes no changes to the TLS message ﬂow or
key derivation algorithm, and only requires small modiﬁca-
tions to two existing TLS messages, which already come in
algorithm-speciﬁc variants.
4TLS’s PRF combines its arguments using SHA-1, MD5 and both
HMACSHA−1 and HMACMD5; details can be found in [16].
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
6.2. Implementation Choices
We implemented the pairing-based handshake protocol
described in Figure 1. We also implemented a secure trans-
port layer protocol following the TLS speciﬁcation (i.e., we
generate MAC and cipher keys from the master secret the
same way TLS does, etc.).
The security parameters we use are the lengths of two
primes, p and q. Typical parameters would be 1024 bits for
the length of p and 160 bits for the length of q. We generate
the primes such that p = 12qr− 1 (for some r large enough
to make p be the correct size)5.
The curve E we use is y2 = x3 + 1. See [6] for a discus-
sion of the properties of this curve. To implement the hash
function H that maps random strings to points in E(Fp)[q],6
we simply seed a pseudorandom number generator with the
string we want to map, and then generate a pseudorandom
point in E(Fp)[q].
The bilinear map ˆe we used is the Tate pairing, with
some of the modiﬁcations and performance improvements
described in [3, 6].
6.3. Measurements
We ran our 100% Java implementation on a 1.8GHz Pen-
tium 4. The table below shows the handshake times for var-
ious parameter values, alongside RSA key sizes that are be-
lieved to deliver comparable security.
size of q
size of p
120 bits
160 bits
200 bits
512 bits
1024 bits
2048 bits
handshake
time
0.8sec
2.2sec
11.8sec
comparable RSA
key size
512 bits
1024 bits
2048 bits
These times can be cut in half by a slight alteration to
the secret handshake protocol. The protocol as presented in
Section 4.2 is designed to minimize the number of rounds.
As a result, the parties must compute the results Vi of their
respective Tate pairings in series. This may be optimized
by rearranging the protocol so that these computations can
instead be performed in parallel. This results in one addi-
tional message, but approximately halves the running time
of the protocol.
We believe that these running times can be substantially
improved. The running time of the protocol is dominated
by the computation of the Tate pairing, and we have not
yet implemented some of the performance enhancements
suggested in [3]. Furthermore, our current implementation
5Choosing q to be a Solinas prime (i.e., q = 2α ± 2β ± 1 for some α >
β > 1) could further improve the performance of our scheme.
6E(Fp)[q] is the set of solutions of E over Fp of order dividing q.
Administrator
(s)
Alice
idA = “x54321da”,
privA = sH1(“x54321da.air-marshal-03/14/2003”)
id
priv
B= “k82931lf”,
B= sH
1(“k82931lf.air-m
Alice
Bob
idA, nA
idB, nB, V0
V1
…
Bob
arshal-service-03/14/2003”)
Figure 4. Short-lived credentials: The role manager only issues credentials that are good for a certain,
short, period of time.
is purely written in Java. We expect future optimized im-
plementations to be comparable to RSA-based TLS hand-
shakes.
7. Practical Issues
7.1. User and Role Authorization
When a new user wants to assume a certain role in a
group, she gets a pseudonym and a secret point for that role
from the administrator. The new user may have to be au-
thorized to assume the role, in which case the administrator
has to perform user authorization. How this is done is or-
thogonal to the schemes presented in, and outside the scope
of, this paper.
SHORT-LIVED CREDENTIALS. To address this consistency
problem, we could address revocation using short-lived cre-
dentials (borrowing an idea from [6]). In addition to fold-
ing the user’s role into her secret point (see Section 4.3),
the administrator could also fold in the date at which the se-
cret point is valid, as shown in Figure 4 (compare with Fig-
ure 2). With a slight modiﬁcation in the secret-handshake
protocol (again, following the suggestions in [6]) users can
then make sure that their peers in the handshake protocol
use fresh keys.
Although users obtain new secret points in regular inter-
vals from the administrator, it turns out that they do not have
to re-authenticate themselves to the administrator. Using
identity-based encryption, or some other suitable scheme,
the administrator could just publish fresh credentials for un-
revoked users, encrypted under their current pseudonym.
7.2. Revocation
7.3. Protocol Deployment
If a user of a system gets compromised and his secret
point stolen, then the thief of the secret point can imper-
sonate the compromised user, as well as authenticate other
users in the system (and learn their roles). To address this
problem, we need a revocation system.
PUBLIC-KEY REVOCATION LISTS. In Section 4.2 we ex-
plain how the administrator can publish public-key revoca-
tion lists that show which public keys should no longer be
trusted. This scales relatively well with the number of users
(it only requires work in the order of number of revoked
users) but introduces the well-known consistency problem
for Certiﬁcate Revocation Lists – we need to make sure that
all users have an up-to-date and correct view of the current
public-key revocation lists.
While we have proven that an observer of a secret hand-
shake between users U1 and U2 cannot learn whether they
belong to the same group at the end of the protocol, the
observer can certainly learn one thing – that U1 and U2 ex-
ecuted our protocol. In fact, if our scheme (as proposed)
is implemented as a TLS cipher suite, then the two parties
will exchange a cipher suite designator that clearly shows
that they wish to engage in a secret handshake. If a govern-
ment makes it illegal to perform our protocol, with penal-
ties similar to those of belonging to certain illegal groups,
then using our secret handshake protocol may actually bring
more problems than not using it.
Also, even though the observer would not be able to tell
whether U1 and U2 belong to the same group at the end of
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
the protocol, he or she may actually learn more information
by monitoring U1’s and U2’s communications after the exe-
cution of the protocol. If they continue talking with each
other, then they were probably able to authenticate each
other as members of the same group. Furthermore, if it is
known that there exists only one group G that uses our se-
cret handshake scheme, then both U1 and U2 must belong to
that group.
These and other practical deployment issues can be mit-
igated by using some form of anonymous communication,
which makes it hard to ﬁnd out exactly who is engaging in
a secret handshake. However, anonymizers can be subject
to the same caveats (everybody has to use them, they must
not be illegal, etc.) as secret handshake protocols.
In summary, our secret handshake schemes provide the
best protection if the number of groups that are using it is
large. For example, if it were to become a TLS cipher suite
that was routinely used for secure discovery, then the above
concerns would be alleviated.
8. Conclusion
A secret-handshake mechanism is a mechanism that
would allow members of a group to authenticate each other
secretly. Because members of a group often play different
roles, a handshake scheme that allows members of a group
to authenticate not only the fact that they belong to the same
group, but also each other’s roles would be very desirable.
In this paper, we proposed a secret handshake scheme
that can be used by members of a group to authenticate each
other, as well as the roles they play in the group. Our proto-
col uses Weil or Tate pairings on elliptic curves, and takes
advantage of their bilinearity to compute unique shared se-
cret keys when two members perform a handshake.
We also proposed a formal deﬁnition of secure secret
handshakes, and outlined a proof that our scheme is secure
under this deﬁnition.
We are implementing our protocol as a new cipher suite
for TLS. Preliminary measurements show promising per-
formance, with security parameters comparable to 1024-bit
RSA yielding quite practical handshake timings.
References
vances in Cryptology - CRYPTO 2002. Springer Verlag, Au-
gust 2002.
[4] M. Bellare and P. Rogaway. Random oracles are practi-
cal: A paradigm for designing efﬁcient protocols. In First
ACM Conference on Computer and Communications Secu-
rity, pages 62–73, Fairfax, 1993. ACM.
[5] J. Benaloh and M. de Mare. One-way accumulators: A de-
centralized alternative to digital signatures. In T. Helleseth,
editor, Advances in Cryptology – EUROCRYPT ’ 93, vol-
ume 765 of Lecture Notes in Computer Science, pages 274–
285. International Association for Cryptologic Research,
Springer-Verlag, Berlin Germany, 1994. Extended abstract.
[6] D. Boneh and M. Franklin. Identity-based encryption from
In Proc. CRYPTO 01, pages 213–229.
the Weil pairing.
Springer-Verlag, 2001. LNCS 2139.
[7] D. Boneh, B. Lynn, and H. Shacham. Short signatures from
the weil pairing. In ASIACRYPT01: Advances in Cryptology
– ASIACRYPT: International Conference on the Theory and
Application of Cryptology. LNCS, Springer-Verlag, 2001.
[8] S. Brands. Restrictive binding of secret-key certiﬁcates.
In L. C. Guillou and J.-J. Quisquater, editors, Advances
in Cryptology—EUROCRYPT 95, volume 921 of Lecture
Notes in Computer Science, pages 231–247. Springer-
Verlag, 21–25 May 1995.
[9] J. Camenisch and A. Lysyanskaya.
Efﬁcient non-
transferable anonymous multishow credential system with
optional anonymity revocation. In Proc. EUROCRYPT 00,
pages 93–118. Springer-Verlag, 2001. LNCS 2045.
[10] J. Camenisch and A. Lysyanskaya. Dynamic accumulators
and application to efﬁcient revocation of anonymous creden-
tials. In Advances in Cryptology Crypto 2002, pages 61–76,
2002.
[11] J. Camenisch and M. Stadler. Efﬁcient group signatures for
large groups. In Advances in Cryptology Crypto ‘97, pages
410–424, 1997.
[12] J. C. Cha and J. H. Cheon. An identity-based signature from
gap Difﬁe-Hellman groups. In Proceedings of the Interna-
tional Workshop on Practice and Theory in Public Key Cryp-
tography (PKC 2003), Miami, FL, 2003.
[13] D. Chaum. Security without identiﬁcation: Transaction sys-
tems to make big brother obsolete. Communications of the
ACM, 28(10):1030–1044, Oct 1985.
[14] D. Chaum and E. van Heijst. Group signatures.
In Proc.
EUROCRYPT 91, pages 257–265. Springer-Verlag, 1991.
LNCS 547.
[15] B. Chor, A. Fiat, and M. Naor.
In
Y. G. Desmedt, editor, Proc. CRYPTO 94, pages 257–270.
Springer, 1994. Lecture Notes in Computer Science No.
839.
Tracing traitors.
[1] M. Abadi. Private authentication.
In Proceedings of the
Workshop on Privacy Enhancing Technologies (PET 2002),
San Francisco, CA, April 2002.
[2] N. Baric and B. Pﬁtzmann. Collision-free accumulators and
fail-stop signature schemes without trees. In Proc. Interna-
tional Advances in Cryptology Conference – EUROCRYPT
’97, pages 480–494, 1997.
[3] P. S. L. M. Barreto, H. Y. Kim, B. Lynn, and M. Scott. Ef-
ﬁcient algorithms for pairing-based cryptosystems. In Ad-
[16] T. Dierks and C. Allen. The TLS Protocol Version 1.0. IETF
- Network Working Group, The Internet Society, January
1999. RFC 2246.
[17] W. Difﬁe and M. E. Hellman. Multiuser cryptographic tech-
In Proc. AFIPS 1976 National Computer Confer-
niques.
ence, pages 109–112, Montvale, N.J., 1976. AFIPS.
[18] M. J. G. Ateniese, J. Camenisch and G. Tsudik. A practi-
cal and provable secure coalition-resistant group signature
scheme.
In Advances in Cryptology Crypto 2000, pages
255–270, 2000.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
[19] M. Goodrich, A. Schwerin, and R. Tamassia. An efﬁcient
dynamic and distributed cryptographic accumulator, 2000.
[20] D. Harkins and D. Carrel.
The Internet Key Exchange
IETF - Network Working Group, The Internet So-
(IKE).
ciety, November 1998. RFC 2409.
[21] F. Hess. Exponent group signature schemes and efﬁcient
identity based signature schemes based on pairings. Cryp-
tology ePrint Archive, Report 2002/012, 2002. http:
//eprint.iacr.org/.
[22] M. Jakobsson, K. Sako, and R. Impagliazzo. Designated
veriﬁer proofs and their applications.
In U. Maurer, ed-
itor, Advances in Cryptology—EUROCRYPT 96, volume
1070 of Lecture Notes in Computer Science, pages 143–154.
Springer-Verlag, 12–16 May 1996.
[23] J. Kilian and E. Petrank. Identity escrow. In Advances in
Cryptology Crypto ‘98, pages 169–185, 1998.
[24] B. Lynn. Authenticated identity-based encryption. http:
//eprint.iacr.org/2002/072.
[25] A. Lysyanskaya, R. Rivest, A. Sahai, and S. Wolf.
In Selected Areas of Cryptography
Pseudonym systems.
1999, pages 184–199, 1999.
[26] R. Rivest, A. Shamir, and Y. Tauman. How to leak a secret.
In Advances in Cryptology Asiacrypt 2001, pages 552–565,
2001.
[27] R. Sakai, K. Ohgishi, and M. Kasahara. Cryptosystems
based on pairing. In Proceedings of the Symposium on Cryp-
tography and Information Security (SCIS 2000), Okinawa,
Japan, January 2000.
[28] A. Shamir.
Identity-based cryptosystems and signature
schemes. In G. R. Blakley and D. C. Chaum, editors, Proc.
CRYPTO 84, pages 47–53. Springer, 1985. Lecture Notes in
Computer Science No. 196.
[29] E. Verheul. Self-blindable credential certiﬁcates from the
In Advances in Cryptology Asiacrypt 2001,
weil pairing.
pages 533–551, 2001.
[30] K. Zhang and R. Needham.
A private matchmaking
protocol. http://citeseer.nj.nec.com/71955.
html.
A. Security Analysis
In this section we outline proof sketches for the secu-
rity claims made in Section 5.2. We make use of only stan-
dard cryptographic assumptions: we work in the random or-
acle model [4], and assume that the Bilinear Difﬁe-Hellman
Problem is difﬁcult for the elliptic curves we are using. We
recall the deﬁnition of the latter.
Hardness of BDH Problem: We say that the Bilinear
Difﬁe-Hellman Problem BDH is hard if, for all probabilis-
tic, polynomial-time algorithms B,
AdvBDHB := Pr[B(P, aP, bP, cP) = ˆe(P, P)abc]
is negligible in the security parameter. This probability is
taken over random choice of P ∈ G1 and a, b, c ∈ {1, . . . ,q}