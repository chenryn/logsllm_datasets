以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

[75] OLTROGGE, M., DERR, E., STRANSKY, C., ACAR, Y., FAHL, S., ROSSOW, C., PELLEGRINO, G., BUGIEL, S., AND BACKES, M. 《在线应用生成器的安全影响评估：公民开发者的崛起》。2018 IEEE 安全与隐私研讨会 (SP)，第 00 卷，第 102-115 页。

[76] O’NEILL, M., HEIDBRINK, S., RUOTI, S., WHITEHEAD, J., BUNKER, D., DICKINSON, L., HENDERSHOT, T., REYNOLDS, J., SEAMONS, K., AND ZAPPALA, D. 《Trustbase: 修复和加强基于证书的身份验证架构》。USENIX 安全研讨会 (2017)。

[77] ONWUZURIKE, L., AND DE CRISTOFARO, E. 《危险是我的中间名：实验 Android 应用中的 SSL 漏洞》。ACM 无线和移动网络的安全与隐私会议 (WiSec) (2015)，ACM，第 1-6 页。

[78] POEPLAU, S., FRATANTONIO, Y., BIANCHI, A., KRUEGEL, C., AND VIGNA, G. 《执行这个！分析 Android 应用中的不安全和恶意动态代码加载》。第 21 届年度网络和分布式系统安全研讨会 (NDSS'14) (2014)，互联网协会。

[79] POSSEMATO, A., AND FRATANTONIO, Y. 《迈向 Android 中的 HTTPS 全覆盖：我们尚未达到目标》。第 29 届 USENIX 安全研讨会 (USENIX Security 20) (2020 年 8 月)，USENIX 协会，第 343-360 页。

[80] RAHAMAN, S., XIAO, Y., AFROSE, S., SHAON, F., TIAN, K., FRANTZ, M., KANTARCIOGLU, M., AND YAO, D. D. 《CryptoGuard：大规模 Java 项目中高精度检测加密漏洞》。CCS'19，计算机械协会，第 2455-2472 页。

[81] RAZAGHPANAH, A., NIAKI, A. A., VALLINA-RODRIGUEZ, N., SUNDARESAN, S., AMANN, J., AND GILL, P. 《研究 Android 应用中的 TLS 使用情况》。第 13 届新兴网络实验和技术国际会议 (CoNEXT'17)，纽约，NY，美国 (2017)，计算机械协会，第 350-362 页。

---

### 表格

**表 9：使用固定域的前 10 个域名**

| 应用数量 | 域名值                    | 证书类型 |
|---------|---------------------------|----------|
| 29      | ayers.com.hk              | Leaf     |
| 36      | subaio.com                | CA       |
| 24      | finopaymentbank.in        | CA       |
| 23      | webmobi.com               | CA       |
| 12      | api.app.olbisoft.de        | CA       |
| 12      | cmtelematics.com          | CA       |
| 12      | info.app.olbisoft.de       | CA       |
| 11      | demo.pay2india.com        | CA       |
| 11      | gmail.com                 | CA       |
| 9       | app.sociabble.com         | CA       |

*注：我们无法找到给定固定值的证书。*

**表 10：HTTPS 升级的前 10 个域名**

| 应用数量 | 域名值                            | 是否支持 HTTPS |
|---------|-----------------------------------|----------------|
| 76      | cdn.example2.com                  | 是             |
| 76      | example.com                       | 是             |
| 8       | horaires-aeroports.appspot.com    | 是             |
| 7       | ayers.com.hk                      | 是             |
| 4       | apis.appnxt.net                   | 是             |
| 4       | 10.0.2.2                          | 是             |
| 4       | 10.0.3.2                          | 是             |
| 4       | http://credu.com                  | 否             |
| 4       | http://el.multicampus.com          | 否             |
| 4       | http://www.credu.com              | 否             |

**表 7：固定域中检测到的前 10 个根 CA**

| 应用数量 | 根 CA 名称                                    |
|---------|----------------------------------------------|
| 44      | CN=Amazon Root CA 1                           |
| 39      | CN=Go Daddy Root Certificate Authority - G2   |
| 24      | CN=Starfield Services Root Certificate Authority - G2 |
| 22      | CN=DigiCert High Assurance EV Root CA         |
| 22      | CN=DigiCert Global Root CA                    |
| 19      | CN=DigiCert Global Root G2                    |
| 17      | CN=Entrust Root Certification Authority - G2  |
| 16      | CN=GlobalSign Root CA                         |
| 16      | CN=Baltimore CyberTrust Root                  |
| 16      | CN=COMODO RSA Certification Authority         |

*注：这里为了简洁，我们使用了 CA 的 CommonName 属性。*

**表 8：HTTPS 降级的前 10 个域名**

| 应用数量 | HTTPS 域名值                     | 是否支持 HTTPS |
|---------|----------------------------------|----------------|
| 11,689  | 127.0.0.1                        | 是             |
| 4,290   | localhost                        | 是             |
| 740     | 10.0.2.2                         | 是             |
| 449     | localdev.cc                      | 是             |
| 392     | amazon-adsystem.com              | 是             |
| 376     | virenter.com                     | 是             |
| 366     | 10.0.3.2                         | 是             |
| 366     | securenetsystems.net             | 是             |
| 293     | renweb.com                       | 是             |
| 290     | getfitivity.com                  | 是             |

**表 11：用于调试的前 10 个自定义证书**

| 应用数量 | 证书名称                                             |
|---------|------------------------------------------------------|
| 170     | /CN=CharlesProxyCustomRootCertificate                |
| 65      | /C=RU/L=Novosibirsk/O=CFT/CN=dev-new.bankplus.ru     |
| 12      | /C=DE/O=aktivkonzepte/CN=aktiv-konzepte              |
| 9       | /C=SI/ST=Slovenija/L=Ljubljana/O=Omsoftd.o.o./OU=Primoz/CN=OmsoftCA/emailAddress=PI:EMAIL |
| 9       | /CN=ng_test_ca_2/C=SI/O=Halcom/OU=NG                |
| 9       | /C=SI/L=Ljubljana/O=Halcomd.d./OU=Corporate/CN=ljvfep3.halcom.local/emailAddress=PI:EMAIL |
| 8       | /C=SI/O=Halcomd.d./OU=servercertificates/CN=fep-r3.halcom.local/SN=halcom.local/GN=fep-r3 |
| 8       | /C=US/O=GeoTrustInc./CN=RapidSSLSHA256CA            |
| 6       | /OU=Createdbyhttp://www.fiddler2.com/O=DO_NOT_TRUST/CN=DO_NOT_TRUST_FiddlerRoot |
| 4       | /C=CA/ST=PrinceEdwardIsland/L=Charlottetown/O=silverorangeInc./CN=roble/emailAddress=PI:EMAIL |

*注：Charles Proxy 生成的证书在设置过程中包含个别用户和设备名称。因此，我们仅使用前缀进行聚合。*

**表 12：用于生产的前 10 个自定义证书**

| 应用数量 | 证书名称                                                                                               |
|---------|--------------------------------------------------------------------------------------------------------|
| 647     | /C=US/ST=NY/L=NY/O=NarviiInc./OU=Aminoapps/CN=https://aminoapps.com//emailAddress=PI:EMAIL           |
| 379     | /CN=console-forum.net                                                                                  |
| 174     | /C=US/ST=CO/L=Denver/O=Zerista/CN=*.zerista.d.dm7.me/emailAddress=PI:EMAIL                           |
| 174     | /C=US/ST=CO/L=Denver/O=Zerista/CN=*.zerista.k.dm7.me/emailAddress=PI:EMAIL                           |
| 89      | /CN=*.zerista.io                                                                                       |
| 21      | /C=AU/ST=Some-State/O=InternetWidgitsPtyLtd/CN=*.zerista.d.dm7.me                                     |
| 21      | /C=US/ST=Colorado/L=Denver/O=Zerista,Inc./OU=Dushyanth/CN=*.zerista.k.dm7.me/emailAddress=PI:EMAIL   |
| 16      | /C=US/O=DigiCertInc/OU=www.digicert.com/CN=RapidSSLRSACA2018                                         |
| 16      | /CN=CharlesProxyCA(1Jul2019,MacBook-Pro-de-Toni.local)/OU=https://charlesproxy.com/ssl/O=XK72Ltd/L=Auckland/ST=Auckland/C=NZ |
| 16      | /CN=CharlesProxyCA(20Nov2019,Marc.local)/OU=https://charlesproxy.com/ssl/O=XK72Ltd/L=Auckland/ST=Auckland/C=NZ |

### 代码示例

**示例 1：空的信任管理器 - 接受所有证书**

```java
@Override
public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
}
```

**示例 2：空的主机名验证器 - 接受所有主机名**

```java
@Override
public boolean verify(String host, SSLSession session) {
    return true;
}
```

**示例 3：NSC 再次允许 HTTP 流量**

```java
...
...
...
```

**示例 4：重新激活用户安装的 CA 信任**

```java
...
...
...
```

**示例 5：Mopub 库中的不安全 NSC 片段**

```java
...
/ >
example . com 
cdn . example2 . com 
```

---

这样处理后，文档结构更清晰，内容也更具条理性。希望这对你有帮助！