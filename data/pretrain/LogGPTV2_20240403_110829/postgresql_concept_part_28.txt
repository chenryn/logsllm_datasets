ThiscommandisaPostgresextensionpresentforhistoricalreasons. ROLLBACKistheSQL92
equivalentcommand.
D.2 ALTER GROUP
Name
ALTERGROUP—Adduserstoagroup,removeusersfromagroup
ALTERGROUPnameADDUSERusername[,... ]
ALTERGROUPnameDROPUSERusername[,... ]
Inputs
name Thenameofthegrouptomodify.
username Userswhicharetobeaddedorremovedfromthegroup. Theusernamesmustexist.
Outputs
ALTERGROUP Messagereturnedifthealterationwassuccessful.
D.3. ALTERTABLE 261
Description
ALTERGROUPisusedtoaddorremoveusersfromagroup. Onlydatabasesuperuserscanuse
thiscommand. Addingausertoagroupdoesnotcreatetheuser. Similarly,removingauserfrom
agroupdoesnotdroptheuseritself.
UseCREATEGROUPtocreateanewgroupandDROPGROUPtoremoveagroup.
Usage
Adduserstoagroup:
ALTER GROUP staff ADD USER karl, john
Removeauserfromagroup:
ALTER GROUP workers DROP USER beth
Compatibility
SQL92
ThereisnoALTERGROUPstatementinSQL92. Theconceptofrolesissimilar.
D.3 ALTER TABLE
Name
ALTERTABLE—Modifiestableproperties
ALTERTABLEtable[*]ADD[COLUMN]columntype
ALTER TABLE table [ * ] ALTER [ COLUMN ] column { SET DEFAULT value | DROP
DEFAULT}
ALTERTABLEtable[*]RENAME[COLUMN]columnTOnewcolumn
ALTERTABLEtableRENAMETOnewtable
ALTERTABLEtableADDtableconstraintdefinition
Inputs
table Thenameofanexistingtabletoalter.
column Nameofaneworexistingcolumn.
type Typeofthenewcolumn.
newcolumn Newnameforanexistingcolumn.
262 APPENDIXD. REFERENCEMANUAL
newtable Newnameforthetable.
tableconstraintdefinition Newtableconstraintforthetable
Outputs
ALTER Messagereturnedfromcolumnortablerenaming.
ERROR Messagereturnediftableorcolumnisnotavailable.
Description
ALTER TABLE changes the definition of an existing table. The ADD COLUMN form adds a
newcolumntothetableusingthesamesyntaxasCREATETABLE.TheALTERCOLUMNform
allows you to set or remove the default for the column. Note that defaults only apply to newly
inserted rows. The RENAME clause causes the name of a table or column to change without
changinganyofthedatacontainedintheaffectedtable. Thus,thetableorcolumnwillremainof
thesametypeandsizeafterthiscommandisexecuted. TheADDtableconstraintdefinitionclause
addsanewconstrainttothetableusingthesamesyntaxasCREATETABLE.
Youmustownthetableinordertochangeitsschema.
Notes
ThekeywordCOLUMNisnoiseandcanbeomitted.
Anasterisk(*)followinganameofatableindicatesthatthestatementshouldberunoverthat
tableandalltablesbelowitintheinheritancehierarchy;bydefault,theattributewillnotbeadded
toorrenamedinanyofthesubclasses. Thisshouldalwaysbedonewhenaddingormodifyingan
attributeinasuperclass. Ifitisnot,queriesontheinheritancehierarchysuchasSELECTNewColumn
FROM SuperClass * will not work becausethe subclasseswill be missingan attribute found in the
superclass.
In the current implementation, default and constraint clauses for the new column will be
ignored. You can usetheSET DEFAULT form of ALTER TABLE to setthedefaultlater. (You
willalsohavetoupdatethealreadyexistingrowstothenewdefaultvalue,usingUPDATE.)
In the current implementation, only FOREIGN KEY constraints can be added to a table. To
createorremoveauniqueconstraint,createauniqueindex(seeCREATEINDEX).Toaddcheck
constraints you need to recreate and reload the table, using other parameters to the CREATE
TABLEcommand.
You must own the class in order to change its schema. Renaming any part of the schema
of a system catalog is not permitted. The PostgreSQL User’s Guide has further information on
inheritance.
RefertoCREATETABLEforafurtherdescriptionofvalidarguments.
D.3. ALTERTABLE 263
Usage
ToaddacolumnoftypeVARCHARtoatable:
ALTER TABLE distributors ADD COLUMN address VARCHAR(30);
Torenameanexistingcolumn:
ALTER TABLE distributors RENAME COLUMN address TO city;
Torenameanexistingtable:
ALTER TABLE distributors RENAME TO suppliers;
Toaddaforeignkeyconstrainttoatable:
ALTER TABLE distributors ADD CONSTRAINT distfk FOREIGN KEY (address) REFER-
ENCES addresses(address) MATCH FULL;
Compatibility
SQL92
The ADD COLUMN form is compliant with the exception that it does not support defaults and
constraints,asexplainedabove. TheALTERCOLUMNformisinfullcompliance.
SQL92specifiessomeadditionalcapabilitiesforALTERTABLEstatementwhicharenotyet
directlysupportedbyPostgres:
ALTERTABLEtableDROPCONSTRAINTconstraint{RESTRICT |CASCADE}
Removes a table constraint (such as a check constraint, unique constraint, or foreign key
constraint). To removeaunique constraint,dropauniqueindex. To removeotherkindsof
constraintsyouneedtorecreateandreloadthetable,usingotherparameterstotheCREATE
TABLEcommand.
Forexample,todropanyconstraintsonatabledistributors:
CREATE TABLE temp AS
SELECT * FROM distributors;
DROP TABLE distributors;
CREATE TABLE distributors AS
SELECT * FROM temp;
DROP TABLE temp;
ALTERTABLEtableDROP[COLUMNcolumn{RESTRICT |CASCADE}] Removesa
column from a table. Currently, to remove an existingcolumn the tablemust be recreated
andreloaded:
264 APPENDIXD. REFERENCEMANUAL
CREATE TABLE temp AS
SELECT did, city
FROM distributors;
DROP TABLE distributors;
CREATE TABLE distributors (
did DECIMAL(3) DEFAULT 1,
name VARCHAR(40) NOT NULL
);
INSERT INTO distributors
SELECT *
FROM temp;
DROP TABLE temp;
TheclausestorenamecolumnsandtablesarePostgresextensionsfromSQL92.
D.4 ALTER USER
Name
ALTERUSER—Modifiesuseraccountinformation
ALTERUSERusername
[WITHPASSWORD’password’]
[CREATEDB|NOCREATEDB]
[CREATEUSER|NOCREATEUSER]
[VALIDUNTIL’abstime’]
Inputs
username Thenameoftheuserwhosedetailsaretobealtered.
password Thenewpasswordtobeusedforthisaccount.
CREATEDB,NOCREATEDB These clauses define a user’s ability to create databases. If
CREATEDBisspecified,theuserbeingdefinedwillbeallowedtocreatehisowndatabases.
UsingNOCREATEDBwilldenyausertheabilitytocreatedatabases.
CREATEUSER, NOCREATEUSER Theseclausesdeterminewhetherauserwillbepermitted
tocreatenewusershimself. Thisoptionwillalsomaketheuserasuperuserwhocanoverride
allaccessrestrictions.
abstime Thedate(and,optionally,thetime)atwhichthisuser’spasswordistoexpire.
D.5. BEGIN 265
Outputs
ALTERUSER Messagereturnedifthealterationwassuccessful.
ERROR: ALTERUSER:user"username"doesnotexist Errormessagereturnedifthespec-
ifieduserisnotknowntothedatabase.
Description
ALTER USER is used to change the attributes of a user’s Postgres account. Only a database
superusercanchangeprivilegesandpasswordexpirationwiththiscommand. Ordinaryuserscan
onlychangetheirownpassword.
UseCREATEUSERtocreateanewuserandDROPUSERtoremoveauser.
Usage
Changeauserpassword:
ALTER USER davide WITH PASSWORD ’hu8jmn3’;
Changeauser’svaliduntildate:
ALTER USER manuel VALID UNTIL ’Jan 31 2030’;
Changeauser’svaliduntildate,specifyingthathisauthorization shouldexpireatmiddayon4th
May1998usingthetimezonewhichisonehouraheadofUTC:
ALTER USER chris VALID UNTIL ’May 4 12:00:00 1998 +1’;
Giveausertheabilitytocreateotherusersandnewdatabases:
ALTER USER miriam CREATEUSER CREATEDB;
Compatibility
SQL92
Thereis no ALTER USER statementin SQL92. The standardleavesthe definition of usersto
theimplementation.
D.5 BEGIN
Name
BEGIN—Beginsatransactioninchainedmode
BEGIN[WORK|TRANSACTION]
266 APPENDIXD. REFERENCEMANUAL
Inputs
WORK,TRANSACTION Optionalkeywords. Theyhavenoeffect.
Outputs
BEGIN Thissignifiesthatanewtransactionhasbeenstarted.
NOTICE:BEGIN:alreadyatransactioninprogress Thisindicatesthatatransactionwasal-
readyinprogress. Thecurrenttransactionisnotaffected.
Description
Bydefault,Postgresexecutestransactionsinunchainedmode(alsoknownasautocommitinother
databasesystems). Inotherwords,eachuserstatementisexecutedinitsowntransactionanda
commitisimplicitlyperformedattheendofthestatement(ifexecutionwassuccessful,otherwisea
rollbackisdone). BEGINinitiatesausertransactioninchainedmode,i.e.,alluserstatementsafter
BEGINcommandwillbeexecutedinasingletransactionuntilanexplicitCOMMIT,ROLLBACK,
or execution abort. Statements in chained mode are executed much faster, because transaction
start/commitrequiressignificantCPUanddiskactivity. Executionofmultiplestatementsinsidea
transactionisalsorequiredforconsistencywhenchangingseveralrelatedtables.
ThedefaulttransactionisolationlevelinPostgresisREADCOMMITTED,wherequeriesinside
the transaction see only changes committed before query execution. So, you have to use SET
TRANSACTION ISOLATION LEVEL SERIALIZABLE justafterBEGINifyou needmore
rigoroustransactionisolation. InSERIALIZABLEmodequerieswillseeonlychangescommitted
before the entire transaction began (actually, before execution of the first DML statement in a
serializabletransaction).
If the transaction is committed, Postgres will ensure either that all updates are done or else
thatnoneofthemaredone. TransactionshavethestandardACID(atomic,consistent,isolatable,
anddurable)property.
Notes
RefertoLOCK forfurtherinformationaboutlockingtablesinsideatransaction.
UseCOMMITorROLLBACK toterminateatransaction.
Usage
Tobeginausertransaction:
BEGIN WORK;
D.6. CLOSE 267
Compatibility
SQL92
BEGIN is a Postgres language extension. There is no explicit BEGIN command in SQL92;
transactioninitiationisalwaysimplicitanditterminateseitherwithaCOMMITorROLLBACK
statement. Note: Manyrelationaldatabasesystemsofferanautocommitfeatureasaconvenience.
Incidentally, the BEGIN keyword is used for a different purpose in embedded SQL. You are
advisedtobecarefulaboutthetransactionsemanticswhenportingdatabaseapplications.
SQL92alsorequiresSERIALIZABLEtobethedefaulttransactionisolationlevel.
D.6 CLOSE
Name
CLOSE—Closeacursor
CLOSEcursor
Inputs
cursor Thenameofanopencursortoclose.
Outputs
CLOSE Messagereturnedifthecursorissuccessfullyclosed.
NOTICEPerformPortalClose:portal"cursor"notfound Thiswarningisgivenifcursorisnot
declaredorhasalreadybeenclosed.
Description
CLOSE frees the resources associated with an open cursor. After the cursor is closed, no
subsequentoperationsareallowedonit. Acursorshouldbeclosedwhenitisnolongerneeded.
An implicit close is executed for every open cursor when a transaction is terminated by
COMMITorROLLBACK.
Notes
PostgresdoesnothaveanexplicitOPENcursorstatement;acursorisconsideredopenwhenit
isdeclared. UsetheDECLAREstatementtodeclareacursor.
268 APPENDIXD. REFERENCEMANUAL
Usage
Closethecursorliahona:
CLOSE liahona;
Compatibility
SQL92
CLOSEisfullycompatiblewithSQL92.
D.7 CLUSTER
Name
CLUSTER—Givesstorageclusteringadvicetotheserver
CLUSTERindexnameONtable
Inputs
indexname Thenameofanindex.
table Thenameofatable.
Outputs
CLUSTER Theclusteringwasdonesuccessfully.
ERROR: relationinherits"table"
ERROR: Relationtabledoesnotexist!
Description
CLUSTER instructs Postgres to cluster the classspecifiedby table approximately basedon the
indexspecifiedbyindexname. Theindexmustalreadyhavebeendefinedonclassname.
When a class is clustered, it is physically reordered based on the index information. The
clustering is static. In other words, as the class is updated, the changes are not clustered. No
attempt is made to keep new instances or updated tuples clustered. If one wishes, one can
re-clustermanuallybyissuingthecommandagain.
D.7. CLUSTER 269
Notes
Thetableisactuallycopiedtoatemporarytableinindexorder,thenrenamedbacktotheoriginal
name. For this reason, all grant permissions and other indexes are lost when clustering is
performed.
Incaseswhereyouareaccessingsinglerows randomlywithinatable, theactualorderof the
dataintheheaptableisunimportant. However,ifyoutendtoaccesssomedatamorethanothers,
andthereisanindexthatgroupsthemtogether,youwillbenefitfromusingCLUSTER.
AnotherplacewhereCLUSTERishelpfulisincaseswhereyouuseanindextopulloutseveral
rowsfromatable. Ifyouarerequestingarangeofindexedvaluesfromatable,orasingleindexed
value that has multiple rows that match, CLUSTER will help becauseonce the index identifies
theheappageforthefirstrowthatmatches,allotherrowsthatmatchareprobablyalreadyonthe
sameheappage,savingdiskaccessesandspeedingupthequery.
Therearetwowaystoclusterdata. ThefirstiswiththeCLUSTERcommand,whichreorders
the original table with the ordering of the index you specify. This can be slow on large tables
becausetherowsarefetchedfromtheheapinindexorder,andiftheheaptableisunordered,the
entriesareonrandompages,sothereisonediskpageretrievedfor everyrowmoved. Postgres
hasacache,butthemajorityofabigtablewillnotfitinthecache.
Anotherwaytoclusterdataistouse:
SELECT columnlist INTO TABLE newtable
FROM table ORDER BY columnlist
whichusesthePostgressortingcodeintheORDERBY clausetomatchtheindex,andwhichis
muchfasterforunordered data. You thendroptheoldtable, useALTER TABLE/RENAMEto
rename temp to the old name, and recreateanyindexes. The only problem is that OIDswill not
bepreserved. Fromthenon,CLUSTERshouldbefastbecausemostoftheheapdatahasalready
beenordered,andtheexistingindexisused.
Usage
Clustertheemployeesrelationonthebasisofitssalaryattribute:
CLUSTER emp_ind ON emp;
Compatibility
SQL92
ThereisnoCLUSTERstatementinSQL92.
270 APPENDIXD. REFERENCEMANUAL
D.8 COMMENT
Name
COMMENT—Addcommenttoanobject
COMMENTON[[DATABASE|INDEX|RULE|SEQUENCE|TABLE|TYPE|VIEW
]object_name|
COLUMNtable_name.column_name|
AGGREGATEagg_nameagg_type|
FUNCTIONfunc_name(arg1,arg2,...)|
OPERATORop(leftoperand_typerightoperand_type)|
TRIGGERtrigger_nameONtable_name]
IS’text’
Inputs
object_name,table_name,column_name,agg_name,func_name,op,trigger_name Thename
oftheobjecttobebecommented.
text Thecommenttoadd.
Outputs
COMMENT Messagereturnedifthetableissuccessfullycommented.
Description
COMMENTaddsacommenttoanobjectthatcanbeeasilyretrievedwithpsql’s\ddcommand. To