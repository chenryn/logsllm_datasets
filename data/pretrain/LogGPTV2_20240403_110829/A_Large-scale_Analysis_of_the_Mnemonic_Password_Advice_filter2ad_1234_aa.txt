title:A Large-scale Analysis of the Mnemonic Password Advice
author:Johannes Kiesel and
Benno Stein and
Stefan Lucks
A Large-scale Analysis of the
Mnemonic Password Advice
Johannes Kiesel
Benno Stein
Stefan Lucks
Bauhaus-Universität Weimar
PI:EMAIL
Abstract—How to choose a strong but still easily memorable
password? An often recommended advice is to memorize a
random sentence (the mnemonic) and to concatenate the words’
initials: a so-called mnemonic password. The paper in hand
analyzes the effectiveness of this advice—in terms of the obtained
password strength—and sheds light on various related aspects.
While it is infeasible to obtain a sufﬁciently large sample of
human-chosen mnemonics, the password strength depends only
on the distribution of certain character probabilities. We provide
several pieces of evidence that
these character probabilities
are approximately the same for human-chosen mnemonics and
sentences from a web crawl and exploit this connection for our
analyses. The presented analyses are independent of cracking
software, avoid privacy concerns, and allow full control over
the details of how passwords are generated from sentences. In
particular, the paper introduces the following original research
contributions: (1) construction of one of the largest corpora of
human-chosen mnemonics, (2) construction of two web sentence
corpora from the 27.3 TB ClueWeb12 web crawl, (3) demon-
stration of the suitability of web sentences as substitutes for
mnemonics in password strength analyses, (4) improved estima-
tion of password probabilities by position-dependent language
models, and (5) analysis of the obtained password strength using
web sentence samples of different sentence complexity and using
18 generation rules for mnemonic password construction.
Our ﬁndings include both expected and less expected results,
among others: mnemonic passwords from lowercase letters only
provide comparable strength to mnemonic passwords that exploit
the 7-bit visible ASCII character set, less complex mnemonics
reduce password strength in ofﬂine scenarios by less than ex-
pected, and longer mnemonic passwords provide more security
in an ofﬂine but not necessarily in an online scenario. When
compared to passwords generated by uniform sampling from a
dictionary, distributions of mnemonic passwords can reach the
same strength against ofﬂine attacks with less characters.
I.
INTRODUCTION
Password authentication is widely accepted, has low tech-
nical requirements, and hence is expected to stay as a part of
authentication systems [4], [16]. Irrespective their popularity,
password authentication has always been criticised for the fact
that users tend to choose weak passwords—simply to avoid the
Permission  to  freely  reproduce  all  or  part  of  this  paper  for  noncommercial 
purposes is granted provided that copies bear this notice and the full citation 
on the ﬁrst page. Reproduction for commercial purposes is strictly prohibited 
without the prior written consent of the Internet Society, the ﬁrst-named author 
(for  reproduction  of  an  entire  paper  only),  and  the  author’s  employer  if  the 
paper  was  prepared  within  the  scope  of  employment.
NDSS  ’17,  26  February  -  1  March  2017,  San  Diego,  CA,  USA
Copyright  2017  Internet  Society,  ISBN  1-891562-46-0
http://dx.doi.org/10.14722/ndss.2017.23077
extra effort of memorizing strong passwords. To animate users
to devise stronger passwords, so-called mnemonic passwords
are often recommended, which shall provide both strength and
memorability [14], [31], [41]. Such advice boils down to the
following:
Create a sentence. Memorize it. Concatenate the ﬁrst
characters of each word. Use the string as password.
The strength of mnemonic passwords is based on three as-
sumptions. First, humans can easily remember their mnemon-
ics, a fact that has been shown within several studies [26],
[41]. Second, it is infeasible to guess a mnemonic, even if an
adversary was able to generate and test millions of guesses per
second. This can be assumed, if the user in fact follows the
advice and creates the mnemonic himself instead of picking
a famous sentence [26]. Third, and most
the
derived passwords inherit most of the guessing difﬁculty of the
mnemonic, so that guessing the password remains infeasible
as well. To the best of our knowledge, regarding the last point
no results have been published in the relevant literature.
importantly,
This paper contributes various new and interesting results
in this regard. Our approach is to generate passwords from a
huge sample of human-generated sentences using a generation
rule (a variant of “concatenate the ﬁrst characters of each
word”), estimate the resulting password distribution with lan-
guage models, and calculate common strength estimates from
the distribution. The contributions in detail:
• We collect one of the largest available corpora of
human-chosen mnemonics (Section III-A).
• We extract a total of 3.1 billion web sentences from
the ClueWeb12 crawl [36] with a specialized ﬁlter
algorithm (Section III-B), show that these sentences
are more complex than mnemonics using a standard
readability score, and take a sample with appropriate
sentence complexity (Section III-C).
• We use the corpus of mnemonics to provide evidence
that
the distributions of the character probabilities
which are used by common password strength mea-
sures are approximately the same for mnemonics
and web sentences (both all and the less complex
sample). This allows us to substitute web sentences
for mnemonics (Section III-D).
To model mnemonic password distributions we opti-
mize language models. For this, we introduce position-
dependent language models to password modeling, for
which we show that they improve the estimation over
regular language models (Section IV-B).
•
•
Using common password strength measures that cover
both online and ofﬂine attack scenarios (Section IV-C),
we compare the strengths of password distributions
from all and only the simpler sentences under 18 dif-
ferent password-generation rules (Section V).
Our approach comes along with a number of important
advantages. It is fully reproducible since it uses a static web
crawl. It exploits the knowledge of the password generation
to its full effect, which makes the strength estimates more
reliable compared to estimates obtained from dictionary-based
cracking attempts. It causes no privacy concerns since no
private authentication data is involved. It allows to precisely
compare password generation rules, such as concatenating the
words’ last characters instead of the ﬁrst.
II. RELATED WORK
Different to existing studies we do not analyze a password
corpus, but put a well-known1 generation principle for pass-
words to the test.
Mnemonic password strength analyses have previously
focused on cracking them by using dictionary or brute-force
attacks [41] or a collection of quotes,
lyrics, and similar
known phrases [26]. However, these analyses are based on very
small sample sizes (see Table I), the results depend largely
on the employed cracking dictionaries, and they leave the
exact generation process to the participants. Also, the used
mnemonics are not available. It is interesting to note that
Kuo et al. ﬁnd that, if not explicitly forbidden, users tend to
choose famous sentences as mnemonics, with the—expected—
negative impact on security.
Very recently, Yang et al. [42] published a strength analysis
on what they call mnemonic-based strategy variants, which are
variations of the “create a sentence” part of the mnemonic
password advice. They ﬁnd that the security against online
attacks can be increased when suggesting to the users to
use personalized mnemonics and providing them an example
mnemonic and password. In contrast, we analyze the security
for different variants of generating the password from the
sentence. Furthermore, since we use a much larger sample of
passwords, we can also estimate the strength of mnemonic
passwords against ofﬂine attacks and our estimates against
online attacks are more robust.
Password strength analysis in general used way larger
password samples (up to 70 million [3]), but do not distinguish
between mnemonic passwords and others. Especially inter-
esting is the analysis by Bonneau, who found differences in
password strength between different user groups (determined
by account settings) [3]. Our current data does not provide this
kind of meta information.
An overview of the cracking methods used in these anal-
yses is presented by Dell’Amico et al. [9]. Language models,
which we use for our analysis, are also used in password
cracking [9], [27], [30], [34]. Presumably,
these password
crackers would also beneﬁt from our contribution of position-
dependent language models.
1For example in a 2011 survey of 195 university people, about 40% had
already used a mnemonic password [25].
2
Table I.
NUMBER OF MNEMONICS AND PASSWORDS IN THE CORPORA
OF THIS AND OTHER STUDIES. FOR THE CORPORA OF THIS STUDY, THE
NUMBER OF PASSWORDS IS AVERAGED OVER GENERATION RULES.
Corpus
Webis-Sentences-17
Webis-Simple-Sentences-17
Webis-Mnemonics-17
Obfuscated Yahoo! passwords [3]
Leaked from RockYou (e.g., [39])
University passwords [28]
Phished from MySpace (e.g., [9])
Survey by Kelley et al. [21]
Survey by Yang et al. [42]
Survey by Kuo et al. [26]
Creation advised by Yan et al. [41]
Received from Passware [30]
Survey by Vu et al. [38]
#Mnemonics
#Passwords
3 369 618 811 1 381 862 722
234 106 405
1 035
70 000 000
32 000 000
44 000
34 000
12 000
6 236
290
290
140
40
471 085 690
1 048
-
-
-
-
-
5 334
140
97
-
40
Extending the usual mnemonic password advice, Top-
kara et al. [37] suggest complex generation rules to create
passwords very different to the mnemonic. This allows to
produce from the same mnemonic somewhat independent pass-
words with different generation rules, which aims at reducing
password-reuse between services. Our estimates could also be
calculated for such rules.
The good memorability of human-chosen mnemonics has
been shown by previous studies. For example, Yan et al.
found that mnemonic passwords are about as memorable as
passwords selected freely but with at least one non-letter [41].
As memorability measure, they used the time needed until the
passwords—which the 290 participants had to use frequently—
are memorized. Random passwords, on the other hand, took
about 8 times as long to remember.
A different approach to mnemonic passwords is to generate
the mnemonics for the users using either sentence templates
and dictionaries [1], [20], linguistic transformations [19], or
language models [13]. While this removes the problem of hu-
mans choosing weak mnemonics, it is unclear how this changes
the memorability compared to human-chosen mnemonics.
III. SENTENCE CORPORA ACQUISITION
that advice.
the random element of
The analysis of a password advice requires a huge sam-
ple of
In the case
of the mnemonic password advice, the random element is
the mnemonic. Section III-A introduces the new Webis-
Mnemonics-17 corpus, which now is the largest corpus of
human-chosen password mnemonics, but which is still far
too small for a well-founded statistical analysis. Hence this
section introduces also two new corpora of web sentences: the
Webis-Sentences-17 corpus (Section III-B), as well as a subset
called the Webis-Simple-Sentences-17 corpus whose overall
sentence complexity better ﬁts that of password mnemonics
(Section III-C). Section III-D demonstrates that mnemonics
and web sentences, though different, are very similar in the
distributions of character probabilities which are relevant for
estimating the password strength. With this knowledge, we can
then estimate the strength of mnemonic passwords using the
web sentence corpora.
(b)
(a)
(c)
(d)
(e)
Figure 1. The HTML interface used to collect the Webis-Mnemonics-17 corpus (Section III-A). (a) Complete interface at the survey start. Participants have to
read a security guidance. After that, the steps (b-e) are shown one at a time. (b) Participants have to enter a sentence that fulﬁlls our requirements (automatically
checked, Section III-A). (c) Participants see their sentence and the corresponding password and are told to memorize both. They have to type in the password.
Should they try to paste the password, the pasting fails and they are told not to do so. They can go back to step 1 to choose another sentence. (d) Participants
have to select one option for each question. (e) Participants are asked to recall sentence and password.
Instead of trying to reproduce the memorability results of
previous research (cf. Section II), we opted for a shorter study
with more participants.
In detail, the workers were asked to “create a new, mean-
ingful, and easily memorable English sentence that no one
can guess.” To resemble the advice of choosing the mnemonic
related to the web page for which it is used (e.g., [14]), we
randomly showed one topic suggestion (money, shopping, mail,
talking with friends, or no suggestion) to the workers. The
survey interface automatically enforced certain constraints to
mirror plausible password requirements: The mnemonic must
contain (1) only 7-bit ASCII characters; (2) at least 12 words;
(3) at least 9 different words from an English dictionary (to
ensure English mnemonics); and (4) no sequence of 6 or more
words that also occurs in the Webis-Sentences-17 (detailed
below, like a blacklist of known phrases).
After manual cleaning, 1 048 mnemonics remain. In detail,
we rejected 17 workers that submitted grammatically incor-
rect mnemonics, and ﬁltered mnemonics that were inherently
meaningless (10), contained several phrases (40) or a known
phrase missed by our ﬁlter (1 mnemonic), and where the
interface did not record correctly (1 mnemonic). As Figure 2
shows,
the length of the remaining mnemonics follows a
geometric distribution, which is similar to password length
distributions in general [27]. Table III gives a few examples
from the corpus for each suggested topic.
Figure 2. Distribution of sentence lengths in the Mnemonics Survey corpus
and ﬁtted geometric model.
A. The Webis-Mnemonics-17 Corpus
With the aid of the crowd-sourcing platform Amazon
Mechanical Turk, 1 117 mnemonics were collected in a short
survey, each from a different worker. Figure 1 shows the study
interface. The workers are told to chose a mnemonic and
remember it (without writing or copying) while answering
password-related multiple-choice questions. The study has
been designed to fulﬁll best practices for Mechanical Turk
user studies [23]. For example, encouraging a participation in
good faith by disabling copy-and-paste. The workers took on
average 3 minutes and 35 seconds to complete the study.2
2The corpus with detailed interaction logs of the workers is available at
www.uni-weimar.de/en/media/chairs/webis/corpora/webis-mnemonics-17
3
llllllllllllllllll1214161820Words per sentence0.00.10.20.30.4DensityllObserved distributionGeometric modelDespite being one of the largest available corpora of
human-chosen mnemonics for password generation, the Webis-
Mnemonics-17 corpus is still too small for the calculation of
theoretical password strength estimates. Such strength esti-
mates rely on the probability distribution of the passwords,
which can not be estimated for corpora of such a small size:
Every sentence from the Webis-Mnemonics-17 corpus leads to
a different password, which makes it impossible to infer the
probability distribution from the data. Because of this, most
previous work on strength estimates for mnemonic password
strengths [26], [41] were restricted to reporting the percentage
of cracked passwords when using cracking software, with
the usual drawbacks [3]: results are hard to compare, hard
to repeat, and rely on the speciﬁc cracking method. For
example, because they use different cracking methods, Yan
et al. and Kuo et al. come to different conclusions regarding
the password strengths. In order to resolve these problems,
we use a web crawl to collect a huge amount of sentences
that are sufﬁciently similar to human-chosen mnemonics like
those in the Webis-Mnemonics-17 corpus. We then use these
web sentences in place of the mnemonics (see below).
B. The Webis-Sentences-17 Corpus
To analyze natural language sentences at huge scale we
speciﬁcally designed the new Webis-Sentences-17 corpus,3
which is based on the ClueWeb12 web page crawl (ver-
sion 1.1) [36]. The ClueWeb12 is a 27.3 TB collection of
733 million English web pages crawled in 2012. It covers
authors from a wide range of age, education, and English-
speaking countries. The ClueWeb12 is distributed as HTML,
making an automatic sentence extraction method necessary.
Since we are interested in content sentences only, we
design an automatic extraction algorithm and test it by com-
paring it to human extraction capabilities. For this purpose,
924 sentences were manually extracted by copy-and-pasting
all ﬁtting sentences from 100 random ClueWeb12 web pages.
Out of the passwords from automatic sentence extraction, 81%
match those from the human extraction.4 As Section III-D
shows, this quality is sufﬁcient for the purposes of this paper.
We use an own open source extraction method with opti-
mized parameters:5 The method renders the web page text6
and removes non-English paragraphs [15], paragraphs with
less than 400 characters, sentences with less than 50% letter-
only tokens,7 and sentences without English function word.
We found that some domains use the same sentence frequently