of phishing.com to
say
ns1.phishing.com,
the victim
resolver for the A record of ns1.phishing.com.
Based on the cached, non-expired delegation data
of phishing.com, the victim resolver learns and
contacts the authoritative server of phishing.com,
and receives a response, such as:
then queries
;; ANSWER SECTION
ns1.phishing.com. 86400
IN
A
10.0.0.1
;; AUTHORITY SECTION
phishing.com.
86400
IN
NS
ns1.phishing.com.
;; ADDITIONAL SECTION
ns1.phishing.com. 86400
IN
A
10.0.0.1
• What would be the cost for an attacker to maintain
Both the answer section and the authority section con-
form to the bailiwick rule. Also, according to the cred-
ibility rule, the new NS record in the authority sec-
tion has the same trust level as the old NS record of
phishing.com in the cache. The victim resolver
will therefore overwrite the old NS record with the new
one, and the A record in the answer section and the new
NS record will form the complete delegation data of
phishing.com, i.e.:
phishing.com.
86400
ns1.phishing.com. 86400
IN
IN
NS ns1.phishing.com.
A
10.0.0.1
importantly,
Most
the new delegation data has a
fresh TTL value of 86, 400, meaning the lifetime of
phishing.com in the victim resolver starts over
now for a new round of 86, 400 seconds.
In fact,
the attacker can refresh the delegation data later
again and again before the data expires, thus making
phishing.com accessible from the victim resolver
for a very long time. In another words, the resolver will
be continuously haunted by this ghost domain name,
so we also call this resolver a haunted resolver.
The attacker can target many other DNS resolvers and re-
peat the same cache-and-refresh manipulation operations as
described above with these victims. As a result, the attacker
can use phishing.com to host their malicious sites for
a long time, and users throughout the Internet would con-
tinue to be able to resolve phishing.com to attacker-
controlled IP addresses.
The success of the ghost domain name attack assumes
the attacker is able to send regular DNS queries to DNS
resolvers. This assumption is practical when the attacks tar-
get open resolvers; previous research [11] has shown that
there are still a large number of open resolvers around the
world. The assumption is also practical if the attacker is in
the service range of a DNS resolver, or he can control a bot
machine in that range thus can initiate DNS queries from
the bot machine.
4. Experiments, Results, and Analysis
While theoretically feasible according to our discussion
in Section 3, it is unclear if an attacker can indeed launch a
large-scale exploitation in the real world based on the ghost
domain vulnerability of DNS, and if so, to what extent and
at what cost. We investigate this matter in this section, fo-
cusing on the following questions:
• How many deployed DNS resolvers and DNS imple-
mentations are vulnerable?
ghost domain names?
• For those vulnerable DNS resolvers, how long can an
attacker keep their ghost domain names in these re-
solvers?
4.1. Experimental Setup
We collected 19,045 open DNS resolvers from the query
log of a busy authoritative server, also with the help of the
authors of [28]. Table 1 shows how these resolvers are dis-
tributed around different geographic regions and different
autonomous systems (AS).
Region
Count
Percentage
Japan
USA
Russian
China
Taiwan
Germany
Poland
Britain
Italy
HK
2479
2471
1987
1742
1093
1020
547
546
512
348
13.01
12.97
10.43
9.15
5.74
5.36
2.87
2.87
2.69
1.93
Total 161 regions
(a) Regions
AS number
Count
Percentage
3462
538
4713
4134
1659
4837
4732
17506
9600
2907
628
455
384
351
261
257
200
164
115
106
3.29
2.52
2.38
2.01
1.84
1.37
1.34
1.05
0.86
0.60
Total 5474 ASes
(b) Autonomous Systems (ASes)
Table 1. Statistics of DNS resolvers used in
our experiments.
conducted
several
We
resolvers.
experiments
using
We
registered a domain name
these
and created ten sub-domains
ghostdomain.info,
([1-10].ghostdomain.info).
then con-
ducted the Phase-1 operations (as described in Sec-
tion 3) with every resolver we collected,
so that
they all have a cached entry for every sub-domain of
ghostdomain.info. After four hours, we simulta-
neously remove all sub-domains from the authoritative
server of ghostdomain.info, except for one of the
ten sub-domains, 1.ghostdomain.info. We then
We
periodically conduct the Phase-2 operations (as described
in Section 3) for one week on every resolver for the rest
nine sub-domains, i.e., [2-10].ghostdomain.info.
Each of these nine sub-domains has a different parameter
setting for their domain names with regard to the original
TTL value (1800, 3600, and 14400 seconds)2 and the
refreshing interval for Phase-2 operations (TTL/2, TTL/4,
and TTL/8).
During the entire week, every ten minutes we probe ev-
ery resolver to see if the cached entry of a sub-domain
is still alive at every resolver, in order to learn the nor-
mal behavior after a domain name is revoked by testing
1.ghostdomain.info, and how long a ghost domain
name ([2-10].ghostdomain.info) can survive in
every resolver. Every ten minutes we also check if every
resolver can resolve www.google.com to make sure ev-
ery resolver is still reachable and functioning.
4.2. Vulnerable Public DNS Servers and Popular
DNS Implementations
Using ghostdomain.info under our control, we
tested how public DNS servers and popular DNS imple-
mentations may be susceptible to the ghost domain name
vulnerability. We discover that the distribution of the vul-
nerability is wide.
First, as shown in Table 2, we tested ten well-known
public DNS servers from ﬁve service providers. Among
tested servers, only the two from Google were not vulner-
able. Since Google’s DNS implementation was not open
source, we could not know exactly how it avoided this vul-
nerability.
As shown in Table 3, we also chose six popular DNS
vendors based on a recent DNS survey [30] and tested
if they were vulnerable: BIND, DJB dnscache, Unbound,
PowerDNS, MaraDNS and Microsoft DNS. For each ven-
dor, we ﬁrst tested its latest version. For those which were
not vulnerable, we then tested their previous versions to see
at which version the vulnerability got addressed. Five out
of nine implementations, including the latest version from
the leading vendor BIND, were vulnerable. We also found
that three vendors had non-vulnerable versions, and we will
discuss their defense strategies in Section 5.
2An attacker can set a very large TTL value for the delegation data of
a malicious domain so that they can stay in cache for a very long time,
even without launching the ghost domain name attack. But most DNS
implementations have a maximum TTL limitation; they might force a DNS
resolver to reset the TTL value of a cached entry, or even simply discard
the entry if the original TTL exceeds the maximum TTL value allowed. We
have made sure the TTL values we used here are less than the maximum
TTL value allowed in DNS resolvers that we experiment with.
Service Provider
IP Address
Vulnerable?
Google
DNS Advantage
OpenDNS
Norton
GTEI DNS
8.8.8.8
8.8.4.4
156.154.70.1
156.154.71.1
208.67.222.222
208.67.220.220
198.153.192.1
198.153.194.1
4.2.2.1
4.2.2.2
No
No
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Table 2. Vulnerability testing of public DNS
servers.
DNS Vendor
BIND
DJB dnscache
Unbound
Version
9.8.0-P4
1.05
1.4.11
1.4.7
PowerDNS
Recursor 3.3
MaraDNS
Deadwood-3.0.03
Deadwood-2.3.05
Microsoft DNS
Windows Server 2008 R2
Windows Server 2008
Vulnerable?
Yes
Yes
No
Yes
Yes
No
No
No
Yes
Table 3. Vulnerability testing of popular DNS
implementations.
4.3. Efﬁcacy of Maintaining Ghost Domain Names
We measured how the 19,045 open DNS re-
solvers may continue to resolve a ghost domain name
(2.ghostdomain.info).
For comparison, we also
measured (1) how every resolver may continue to resolve a
continuously existent, legitimate domain name, for which
we use www.google.com; and (2) how every resolver
may continue to resolve a legitimate domain name that
gets revoked without the ghost domain operations; we use
1.ghostdomain.info for this purpose. We therefore
have three types of domain names: ghost domain name, live
legitimate domain name, and revoked legitimate domain
name.
Figure 3a shows how the DNS resolvers in our experi-
ments may continue to resolve the three different types of
domain names. By probing a resolver for a particular type
of domain name, we can identify whether it is resolvable or
not. From Figure 3a, it is clear that the three different types
of domain names present different behaviors. As expected,
a live legitimate domain name (www.google.com) can
be resolved by almost all resolvers continuously. The num-
e
h
c
a
c
t
a
h
t
s
r
e
v
o
s
e
r
l
S
N
D
f
o
r
e
b
m
u
N
 20000
 18000
 15000
 10000
live legitimate domain name
revoked legitimate domain name
ghost domain name
e
m
a
n
n