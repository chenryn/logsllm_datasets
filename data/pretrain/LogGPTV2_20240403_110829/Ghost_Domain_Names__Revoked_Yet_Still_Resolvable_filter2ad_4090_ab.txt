### Phishing Attack via DNS Cache Poisoning

In a phishing attack, the attacker may manipulate the DNS records for `phishing.com` to redirect queries to a malicious server. The process involves the following steps:

1. **Initial Query and Delegation:**
   - The victim's resolver queries for the A record of `ns1.phishing.com`.
   - Based on the cached, non-expired delegation data for `phishing.com`, the resolver contacts the authoritative server for `phishing.com`.
   - The response from the authoritative server might look like this:
     ```
     ;; ANSWER SECTION
     ns1.phishing.com. 86400 IN A 10.0.0.1
     ;; AUTHORITY SECTION
     phishing.com. 86400 IN NS ns1.phishing.com.
     ;; ADDITIONAL SECTION
     ns1.phishing.com. 86400 IN A 10.0.0.1
     ```

2. **Bailiwick and Credibility Rules:**
   - Both the answer section and the authority section conform to the bailiwick rule.
   - According to the credibility rule, the new NS record in the authority section has the same trust level as the old NS record of `phishing.com` in the cache.
   - The resolver will overwrite the old NS record with the new one, and the A record in the answer section and the new NS record will form the complete delegation data for `phishing.com`:
     ```
     phishing.com. 86400 IN NS ns1.phishing.com.
     ns1.phishing.com. 86400 IN A 10.0.0.1
     ```

3. **TTL and Continuous Refresh:**
   - The new delegation data has a fresh TTL value of 86,400 seconds, meaning the lifetime of `phishing.com` in the victim resolver starts over for a new round of 86,400 seconds.
   - The attacker can refresh the delegation data repeatedly before it expires, making `phishing.com` accessible from the victim resolver for a very long time.
   - This continuous haunting of the resolver by the ghost domain name is why we call it a "haunted resolver."

4. **Attack Scalability:**
   - The attacker can target many other DNS resolvers and repeat the same cache-and-refresh manipulation operations, allowing them to host their malicious sites for a long time.
   - Users throughout the Internet would continue to resolve `phishing.com` to attacker-controlled IP addresses.

### Assumptions and Practicality

- **Assumption:** The attacker must be able to send regular DNS queries to DNS resolvers.
- **Practicality:** This assumption is practical when targeting open resolvers, as previous research [11] has shown that there are still a large number of open resolvers worldwide.
- **Alternative Scenarios:** The assumption is also practical if the attacker is within the service range of a DNS resolver or can control a bot machine in that range to initiate DNS queries.

### Experiments, Results, and Analysis

#### 4.1. Experimental Setup

- **Data Collection:** We collected 19,045 open DNS resolvers from the query log of a busy authoritative server, with help from the authors of [28].
- **Geographic and AS Distribution:**
  - **Regions:**
    | Region      | Count | Percentage |
    |-------------|-------|------------|
    | Japan       | 2479  | 13.01%     |
    | USA         | 2471  | 12.97%     |
    | Russia      | 1987  | 10.43%     |
    | China       | 1742  | 9.15%      |
    | Taiwan      | 1093  | 5.74%      |
    | Germany     | 1020  | 5.36%      |
    | Poland      | 547   | 2.87%      |
    | Britain     | 546   | 2.87%      |
    | Italy       | 512   | 2.69%      |
    | Hong Kong   | 348   | 1.93%      |
    | Total 161 regions | |

  - **Autonomous Systems (ASes):**
    | AS Number | Count | Percentage |
    |-----------|-------|------------|
    | 3462      | 538   | 3.29%      |
    | 538       | 4713  | 2.52%      |
    | 4713      | 4134  | 2.38%      |
    | 4134      | 1659  | 2.01%      |
    | 1659      | 4837  | 1.84%      |
    | 4837      | 4732  | 1.37%      |
    | 4732      | 17506 | 1.34%      |
    | 17506     | 9600  | 1.05%      |
    | 9600      | 2907  | 0.86%      |
    | 2907      | 628   | 0.60%      |
    | Total 5474 ASes | |

#### 4.2. Vulnerable Public DNS Servers and Popular DNS Implementations

- **Public DNS Servers:**
  | Service Provider | IP Address | Vulnerable? |
  |------------------|------------|-------------|
  | Google           | 8.8.8.8    | No          |
  | Google           | 8.8.4.4    | No          |
  | DNS Advantage    | 156.154.70.1 | Yes        |
  | DNS Advantage    | 156.154.71.1 | Yes        |
  | OpenDNS          | 208.67.222.222 | Yes      |
  | OpenDNS          | 208.67.220.220 | Yes      |
  | Norton           | 198.153.192.1 | Yes      |
  | Norton           | 198.153.194.1 | Yes      |
  | GTEI DNS         | 4.2.2.1    | Yes        |
  | GTEI DNS         | 4.2.2.2    | Yes        |

- **Popular DNS Implementations:**
  | DNS Vendor        | Version         | Vulnerable? |
  |-------------------|-----------------|-------------|
  | BIND              | 9.8.0-P4        | Yes         |
  | DJB dnscache      | 1.05            | Yes         |
  | Unbound           | 1.4.11          | No          |
  | Unbound           | 1.4.7           | Yes         |
  | PowerDNS Recursor | 3.3             | Yes         |
  | MaraDNS           | Deadwood-3.0.03 | No          |
  | MaraDNS           | Deadwood-2.3.05 | No          |
  | Microsoft DNS     | Windows Server 2008 R2 | Yes  |
  | Microsoft DNS     | Windows Server 2008    | Yes  |

#### 4.3. Efficacy of Maintaining Ghost Domain Names

- **Measurement:**
  - We measured how 19,045 open DNS resolvers continued to resolve a ghost domain name (`2.ghostdomain.info`).
  - For comparison, we also measured the resolution of a continuously existent, legitimate domain name (`www.google.com`) and a revoked legitimate domain name (`1.ghostdomain.info`).

- **Results:**
  - **Figure 3a** shows the behavior of DNS resolvers in resolving the three different types of domain names.
  - As expected, a live legitimate domain name (`www.google.com`) can be resolved by almost all resolvers continuously.
  - The revoked legitimate domain name (`1.ghostdomain.info`) and the ghost domain name (`2.ghostdomain.info`) show different behaviors, with the ghost domain name being resolvable for a longer period due to the continuous refreshing mechanism.

This comprehensive analysis helps in understanding the vulnerability and the potential impact of such attacks, guiding the development of more robust DNS security measures.