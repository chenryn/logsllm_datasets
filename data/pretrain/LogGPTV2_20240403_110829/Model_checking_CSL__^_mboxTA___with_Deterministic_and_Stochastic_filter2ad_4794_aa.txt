title:Model checking CSL\(^\mboxTA\) with Deterministic and Stochastic
Petri Nets
author:Elvio Gilberto Amparore and
Susanna Donatelli
201O IEEEIIFIP 
International 
Conference 
on Dependable 
Systems 
& Networks 
(DSN) 
Model Checking CSLTA with Deterministic 
and Stochastic 
Petri Nets 
Elvio Gilberto 
Amparore and Susanna Donatelli 
Dipartimento 
di Informatica, 
UniversiHt 
di Torino, Italy 
{amparore.elvio, 
susi} @di.unito.it 
Abstract 
temporal 
that can verify the probability 
of 
by a Deterministic 
model checkers 
sient solutions 
termine 
logic for continuous-time 
ified CTMC, but the main advantage 
checkers 
can focus hislher 
attention 
more than on how to compute it. 
are built on classical 
of CTMCs. Indeed it is also possible 
to de­
if  is true or not for M by using a manually 
mod­
of a stochastic 
model 
and the user 
is fully automatic, 
on the semantics 
both logic and time constraints 
is that the process 
steady state and tran­
Timed Automa­
way of de­
of the property 
CSLTA is a stochastic 
(CTMC), 
paths specified 
Markov chains 
following 
ton (DTA). A DTA expresses 
over a CTMC path, yielding 
scribing 
paper explores 
on the translation 
Net (DSPN). 
ple Model Checker 
solvers 
The algorithm 
prototype, 
performance 
to do the actual 
a model checking 
to a very flexible 
and dependability 
algorithm
properties. 
This 
for CSLTA based 
Petri 
into a Deterministic 
and Stochastic 
has been implemented 
on existing 
in a sim­
DSPN 
that relies 
numerical 
computations. 
Keywords: 
Stochastic 
Model Checking, 
DSPN. 
1. Introduction 
Continuous 
time Markov chains (CTMC) are used in 
and steady state probabilities, 
stochastic 
systems, 
ranging 
processes. 
CTMCs 
and state rewards. 
In or­
for example to con­
some 
CTMC behaviours, 
is required, 
of the CTMC (for example creating 
of new transitions 
results 
in ad-hoc mod­
to biochemical 
enriched 
that consider 
for transient 
or in the definition 
of all possible 
that usually 
many applications 
from queuing networks 
are analyzed 
possibly 
with transitions 
der to verify more complex measures, 
sider only a subsets 
ingenuity 
ifications 
states) 
rewards correspond 
years, stochastic 
language 
an effective 
in particular 
to describe 
as user-defined 
arise when considering 
ample of a formula ¢ is: does the system 
greater 
initial 
than a of reaching 
for user-defined 
properties 
So, without 
temporal 
passing 
state 
dependability 
for non-ergodic 
systems with failures. 
to the measure of interest. 
In the last 
stochastic 
properties 
properties, 
[8] as well 
CTMCs, as often 
A typical 
ex­
logics have been established 
as 
have a probability 
whose average 
absorbing 
a goal state in t seconds 
through any repair 
tem­
from the 
state? 
as a stochastic 
answers 
model checker 
Given a system property 
expressed 
porallogic formula , a stochastic 
the question: 
is property 
 true for CTMC M? Stochastic 
as CSL[6], 
The CSL formula 
Many stochastic 
logics have been proposed, 
of reaching 
CSLTA[1] and other variants. 
asCSL[5], 
P>0.95(ok U[0,50l goal) is true for a CTMC if there is at 
least a 95% probability 
in the next 
50 seconds, 
or ok are attached 
tors to describe 
(x[a,.8l 
not very combinable: 
CSL has two opera­
paths, namely Until ( u[a,.8hl1) and Next 
going through ok-states 
to CTMC states. 
a goal-state 
only. Labels like goal 
0.95(1 u[a,.8l2 U[-Y,ol3) 
in  u[a,.8lw both  and W have to be state formu­
because 
las. See the work in [ 1] for a throughout 
CSL limitation 
intervals 
and for the relevance 
in path formulas. 
discussion 
of this 
of concatenated 
timed 
of CSL is that path-formulas 
are 
To lift these limitations, 
variations 
paths with regular-expressions, 
posed: asCSL [5] describes 
CSLTA [ 1] uses single-clock 
timed automata 
work in [9] uses multiple-clocks 
of CSL have been pro­
[ 12], while the 
timed automata. 
in terms of actions 
and 
along each path [5, Sec. 
In asCSL paths can be specified 
with a single time interval 
states, 
3]. Path formulas 
regular 
are specified 
over state properties 
as p>.(1][a,.8l), 
where 1] is a 
espression 
and action names. 
CSL TA allows for state and action specification 
of paths, 
are spec­
and for concatenated 
timed interval. 
ified as Pa (A), where A is a single 
an arbitrary 
nesting 
number of clocks, 
of timed intervals. 
In [9] properties 
are specified 
Path formulas 
clock timed automata. 
using an automata 
with 
which allows for arbitrary 
These extended 
greater 
expressivity 
ity of the model checking 
checkers 
logics have different 
of the logic carries 
algorithm. 
a greater 
complex­
CSL and asCSL model 
expressivity: 
a 
are built on the transient/stationary 
evaluation 
of a 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
605 
DSN 2010: Amparore 
& Donatelli 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:55:53 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP 
International 
Conference 
on Dependable 
Systems 
& Networks 
(DSN) 
Pro­
process 
process 
the solution 
is a Piece-wise 
called Markov Regenerative 
that it is not a CTMC, but a more 
If more than one clock is allowed, 
process 
stochastic 
(set of) modified CTMC(s). CSLTA requires 
of a stochastic 
general 
cess[3]. 
ing stochastic 
of a property 
(PDP), and the verification 
eration 
of a set of ordinary 
tions in the size of the PDP locations 
of the CTMC). There are some good CSL model checkers 
available 
currently 
of multiple 
the underly­
Deterministic 
Process 
the gen­
equa­
(as PRISM [10] and MRMC [11]), 
available 
requires 
differential 
(and not in the size 
for asCSL, for CSL TA and for the case 
and solution 
while none is 
clocks. 
the 
for CSL TA. 
no such implementation 
on CSL TA, and describes 
of a model-checker 
al­
to 
of an intermediate 
DSPN (a 
This paper concentrates 
definition 
and implemention 
To the best of our knowledge, 
This paper proposes 
ready exists. 
this hurdle: 
the construction 
class of Stochastic 
stochastic 
process), 
Three DSPN solvers 
DSPNexpress 
have been linked in our implementation. 
Petri Nets with a MRP as the underlying 
solvable 
have been considered: 
DSPN solver. 
TimeNET [7], 
[2], and SPNica [3], but only the last two 
a very simple solution 
with an existing 
Section 2 summarizes 
CSL TA and its model checking 
the points 
to enlight 
is based. Section 3 explains 
4 describes 
as described 
in [8], revisited 
procedure, 
on which our model-checker 
the procedure 
to model-check 
the implementation, 
Section 
on a cyclic polling 
example, 
weak points of the proposed 
solvers 
cussion 
and discusses 
solution 
used). Section 
of future work. 
the strong and 
(and of the DSPN 
the paper with a dis­
5 concludes 
CSL TA using DSPN, while 
which is illustrated 
2. CSLTA syntax and semantics 
The stochastic 
model verified 
by CSL TA is a CTMC with 
action names and state propositions, 
and State-labeled 
An ASMC is a tuple M =, where: 
Markov Chain). 
called ASMC (Action 
• S is a finite set of states, 
• Act is a finite set of action labels, 
• AP is a finite set of atomic propositions, 
• lab: S ---+ 2AP is a state labeling 
• R: S x Act x S ---+ lR;::.:o is a rate matrix. 
function, 
and elapsed 
times, such that R(Si' ai, Si+l) > 0, 
actions 
So ao,To)s1 a1,Tl) 
Vi?: 0. Afinite path u is a finite sequence 
. . .  an-1,Tn-l)Sn such that R(Si' ai, Si+l) > 0, Vi E [0, n). 
PathM (s) denotes 
in 
s. If P is a set of paths, then the notation 
to the overall 
paths of M starting 
Pr:;"-(P), refers 
the set of infinite 
probability 
a path u E P .  
of following 
of logic expressions 
with two kinds 
CSL TA is a language 
and path-formulas. 
CSLTA 
state-formulas 
of formulas: 
is based on CSL, with the single significant 
A 
that path-formulas 
rather than with specific 
are specified 
with a timed automaton 
sition and I>,?:} a comparison  operator. 
(like Until or Next). 
P E AP an atomic propo­
Let A E [0,1] be a probability, 
operators 
difference 
A 
CSL TA state formula  is defined by: 
 ::=P I-, 1  1\  1 SD 
M , S F 1 1\ 2 
The semantics 
M, SFP 
M , s F-, 
M , S  F SD ) 
M , S  F PD1 1\ M, S  F 2 
LS'Es 1\ M,S'F in a state s E S (writ­
parser tree order. 
boolean 
SD = P is true in a state s iff s 
with the atomic proposition 
ten as M, s 1=  and  1\  are the standard 
Sf F \II) is I>I) V -,cI>2. This allows the definition 