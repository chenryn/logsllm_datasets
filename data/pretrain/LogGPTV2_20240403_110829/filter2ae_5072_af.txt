      3244: ['Q'],
      3254: ['Q'],
      3266: ['G'],
      3291: ['S'],
      3308: ['B'],
      3414: ['8'],
      3423: ['g'],
      3514: ['Q'],
      3538: ['G'],
      3663: ['m'],
      3667: ['m'],
      3698: ['8'],
      3878: ['3'],
      3968: ['m'],
      4201: ['3'] }
只要对相同长度的字符进行再次区分就可以了。例如：`N` 和`X`，生成如下的图片时：
此时获取到的对应长度均为1598：
​
此时就需要对其进行区分：
    def getMinXY(data):
        xs = []
        ys = []
        i = 0
        for f in re.findall('\d+\.\d+', data):
            if i%2 :
                ys.append(float(f))
            else:
                xs.append(float(f))
            i = i+1
        xs.sort()
        ys.sort()
        return [xs[0], ys[0]]
通过获取绘制过程中最小的x轴y轴的坐标，进而加以判断即可区分两者。
#### 其他
以上的分析结果仅对于使用svg-captcha默认配置的有效， 由于svg-captcha可以对显示的字符进行字体的设置，这样就改变了绘制的不同，进而导致``属性`d`
的值长度不同，这时候就需要重新分析，获取对应的长度，重新构造字典了。
在[svg-captcha](https://github.com/produck/svg-captcha)项目的Issues中，[haua](https://github.com/haua)大佬提出了这个100%识别的问题，本文也是参考[haua](https://github.com/haua)大佬的[svg-captcha-recognize](https://github.com/haua/svg-captcha-recognize/)作出的简单分析。[svg-captcha](https://github.com/produck/svg-captcha)的作者也回复了这个问题，提出在[svg-captcha](https://github.com/produck/svg-captcha)3.0版本的时候修复这个问题。
**小白首贴，感谢阅读**
#### 参考
......