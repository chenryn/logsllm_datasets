tape position would be out of alignment by one position too far
to the left. Similarly, reading “10” would signify one position
too far to the right. Reading “11” would indicate misalignment
by two, but not whether it was too far left or right.
The main difference between the two HIFI techniques is
the location where the auxiliary information is stored in the
racetrack. In Figure 3(a), p-ECC adds dedicated domains
to store the auxiliary information along with two additional
read-only ports to access the information. The number of
domains added depends on the maximum movement required
to reach each data domain. This allows the shifting operation
to occur more freely, shifting potentially multiple positions
377
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:28 UTC from IEEE Xplore.  Restrictions apply. 
(cid:8)(cid:6)(cid:9)
(cid:8)(cid:7)(cid:9)
(cid:5)(cid:12)
(cid:5)(cid:13)
(cid:5)(cid:14)
(cid:5)(cid:15)
(cid:4)
(cid:3)
(cid:1)
(cid:2)
(cid:5)(cid:16)
(cid:5)(cid:16)
(cid:5)(cid:17)
(cid:5)(cid:18)
(cid:5)(cid:19)
(cid:5)(cid:20)
Figure 4: Shows a transverse read (a) from the right to the access
port and (b) from the left to the access port.
in one operation. However, the added cost is a signiﬁcant
area overhead by adding considerable additional domains and
access points to each tape.
In contrast, p-ECC-O, shown in Figure 3(b), uses the extra
padding domains that are already necessary for the racetrack
to shift without data loss to store the auxiliary information.
Unfortunately, this potential density advantage comes at a
signiﬁcant performance cost with area and energy implica-
tions. The auxiliary bit pattern must now be written into the
nanowire extremities as shifting occurs. Thus, in addition to
the read heads required to access the auxiliary information,
two read/write heads are required at each end of the device.
However, the biggest downside of p-ECC-O is the limitation
on shift performance. p-ECC-O must shift by only one position
at a time and then check the position prior to continuing. If
shift faults are not immediately corrected, the auxiliary pattern
will be corrupted and fault tolerance will be unsuccessful.
While shown for SECDED, HIFI may be scaled to detect
bit misalignment by two or more steps by modifying the code
and the number of read heads for the auxiliary information.
N-domain misalignment correction with N+1-domain mis-
alignment detection requires a total of N +1 read ports.
In contrast, we propose TECC, a solution coupling DWM
with a small amount of STT-MRAM to minimize the space
overhead while enabling the correction of an arbitrary shift
error. We then expand the correction to a group of nanowires
(e.g., a sub-array) using DECC. To accomplish TECC and
DECC requires the use of a new novel transverse read that we
discuss in detail in the next section.
III. TRANSVERSE READ
While the traditional DWM read of single domain provides
distinct resolution of the state (‘1’ or ‘0’) of that domain,
accessing the nanowire lengthwise, in the same direction as
current is applied for shifting, enables new possibilities. Such
an access is akin to the access of a multi-level cell (MLC)
STT-MRAM where multiple free layers are stacked on top of
a single ﬁxed layer [18, 19]. Stacked-layer MLC STT-MRAMs
have been validated for both process variation and access using
low switching currents [20–22]. Our device-level evaluations
demonstrate that this alternative method of reading along the
racetrack is equally feasible. We call this alternative mode of
reading a transverse read (TR).
A. Transverse read behavior
Similar to an MLC STT-MRAM,
the TR provides the
number of ones between an extremity and the head without
knowing their exact position. To discover this result, a current
is sent from one extremity to the access port. Figure 4 shows
conceptually what happens during a TR for a nanowire with
nine total domains labeled X0...X8. As described by the arrow
in the ﬁgure, the domain under the access port is included
in the transverse read. In Figure 4(a) the transverse read
i=4 Xi. Similarly in
to the right, TRR, produces TRR =
i=0 Xi. Note that X4 is included in
Figure 4(b) TRL =
both TRL and TRR, so to distinguish it requires direct access
of X4 in the traditional access method. In the next section we
demonstrate our device modeling approach to validate TR.
B. Modeling the Transverse Read
(cid:2)4
(cid:2)8
The existence of a domain wall in a ferromagnetic nanowire
can increase its resistance signiﬁcantly when the difference
between the spin-up and spin-down density of states is large.
Therefore, a portion of the spin polarized electrons from one
domain trying to pass through the next domain get reﬂected
from the domain wall. Consequently, the resistance increases
even though the reﬂection by the wall is minimal. Cabrera
and Falicov [23] calculated the effect of back scattering due
to a domain wall on the resistance by measuring the reﬂection
coefﬁcient. However, the transmitted electrons will experience
two different phenomena from the resistivity perspective: (i) in
the wall region, the direction of the electron ﬂow bends; and
(ii) in the next domain, spin transfer torque (STT) evolves due
to magnetization mismatch.
To determine the feasibility of one’s counting in the TR as
shown in Figure 4, we read the different bit patterns stored in
magnetic nanostrip by considering the fact that the walls are
static. Berger demonstrated that when a current passes through
the wall, it exerts a force on the wall to move [24]. However,
due to the presence of local strains, inhomogeneities and shape
anisotropy, there exists a pining force (Fp) on the wall that can
be calculated from Eq. 1:
| F p
(1)
for a static wall, where, Hc, Ms and A are the coercive ﬁeld,
saturation magnetization, and area of the wall, respectively. To
ensure that the walls are in zero velocity, the current passing
through it should be less than the critical current (Jc) necessary
to move the wall from Eq. 2.
x |≤ 2HcMsA
Jc =
2Hc
aβ where β =
MsR1
ρ
(2)
where a and β are the wall spacing and the tangent of the Hall
angle of the material, respectively. Assuming that the current
ﬂow is in +x direction while the magnetic domains are out of
plane (+z or -z), the resistivity tensor can be expressed as [24]
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)
ρ
βρ Mz1
Ms
0
ρ
−βρ Mz2
Ms
0
ρ1 =
ρ2 =
378
0
0
ρ
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)
(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)
−βρ Mz1
Ms
ρ
0
βρ Mz2
Ms
ρ
0
0
0
ρ
(3)
(4)
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:28 UTC from IEEE Xplore.  Restrictions apply. 
Table II: Resistance depending on the number of ones.
Avg resistance (kΩ) Min (kΩ) Max (kΩ)
Number of ones
0
1
2
3
4
5.30
5.86
6.43
7.15
7.55
5.30
5.80
6.25
7.05
7.55
5.30
6.00
6.60
7.20
7.55
Figure 5: (a) Structure of the strip containing 7 bits; (b) half of the
strips used for simulation; (c) “1100” bit patterns stored in the strip.
where ρ, Mz1, Mz2 are the resistivity of the material and the
magnetization of domains next to the wall, respectively. The
resistance of the nanostrip due to the presence of domain walls
is calculated as
R = R0 + ΔR = R0(1 +
KcNwtβ2
L
)
(5)
where Kc is material dependent, L,t, and Nw are the length,
thickness of the strip, and the number of walls, respectively.
C. Simulation Framework
We considered a nanowire with perpendicular magnetic
anisotropy (PMA) [25, 12] for high density and faster opera-
tion. The structure of the nanowire is depicted in Figure 5(a).
This strip is symmetric in a sense that the read port is in the
middle of the nanostrip and it can store seven bits.
The reading process starts by turning the rightmost transistor
off while turning the leftmost transistor and the transistor
connected to the read port on to ensure that the current ﬂows
from the leftmost domain to the read port. Figure 5(b) shows
the half of the strip used in the simulation for measuring
resistances. We applied a read current IR, less than the critical
current for domain wall motion, Jc (see Eq. 2), and collected
the current in the ﬁxed layer of the read port. We calculated
the resistance of the nanostrip for bit patterns by measuring
the voltage difference between the leftmost domain and the
ﬁxed layer of the read port. Due to the symmetry, we achieved
similar results while reading from the right. We carried out the
simulations by using the LLG micromagnetic simulator [26]
and used the parameters from [27] for a nanostrip with PMA.
The average, minimum, and maximum resistance values are
listed in Table II. Assuming n number of ones, the maxi-
mum resistance for any permutation at ni were less than the
minimum value for any permutation at ni+1. Moreover the
minimum gap (250Ω) is readily distinguishable [28].
We conducted simulations for transverse reads for up to
four domains in each direction. Due to the complexity of
these device level simulations, simulating longer nanowires
was intractable from a computational perspective. However,
the trends scaling up to four domain reads indicated that these
transverse accesses are likely to scale to longer nanowires.
However, should these transverse reads reach a practical
maximum it is still possible to leverage this technique to read
the entire nanowire by placing additional intermediate access
points along the nanowire spaced to ensure the transverse reads
can distinguish the number of ‘1’s. Should this be necessary,
these partial transverse reads can be conducted in parallel
adding only one additional TR latency for any number of read-
heads HR above one. For a ﬁxed-length nanowire, HR is a
function of the maximum TR length L and the racetrack data
length D such that HR =(cid:4)D/(L−1)(cid:5)+1. The energy overhead
will increase linearly with TRs needed, where number of TRs
is HR − 1, and each TR energy is nominally larger than a
standard single-domain read.
D. TR reliability
As we are using TR for maintaining DWM alignment, it
is necessary to consider how the system behaves when a TR
fault occurs. For example, we can extrapolate TR fault rate to
be similar to the average 0.8% read fault rate of two-bit/three-
level MLC STT-MRAM based on data from the literature [29].
When a TR fault occurs, a second, more reliable TR (e.g.,
slower [30]), can be conducted to verify the read conformity,
as has been shown for STT-MRAM [31]. Alternatively, if a
fault correction is improperly undertaken due to a TR read
fault, it may also be detected using a post-realignment TR. To
increase the fault rate above the resulting 6· 10
−5 the post-
realignment read can leverage the higher-accuracy read [30].
In the next section we discuss how TR can be combined
with encoding to discover and correct misalignment through
transverse error correction.
IV. TRANSVERSE ERROR CORRECTION CODING
The ultimate goal of using the transverse read is to enable
efﬁcient correction of domain-wall memory alignment faults.
To accomplish this, we propose to utilize values stored in the
padding bits to determine the position of the nanowire during
the transverse read. We can build the nanowire with a ﬁxed
domain representing a ‘1’ on the right end of the tape and a
ﬁxed domain representing a ‘0’ on the left end of the tape.
Thus, during left and right shifts we will shift ‘1’s and ‘0’s
into the padding bits on the right and left sides of the tape,
respectively. The number of ‘1’s actually indicates the position
Number of 
ones on 
the sides
(a)
(b)
(c)
1
2
3
Figure 6: Number of ones on the sides for different positions
379
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:37:28 UTC from IEEE Xplore.  Restrictions apply. 
of the data within the nanowire1. As a result, if an under-
or over-shift fault occurs, the calculated number of ones will
differ from the expected value. Using the difference from the
expected value, we can then correct the error, and ultimately
the position fault.
We show this in Figure 6 where the data bits di are
shown in blue and the data bit aligned with the access port
is shown in navy (dark blue). The padding bits on the left
side (purple domains) contain ‘0’s and the right side (beige
domains) contain ‘1’s. This pattern has two key beneﬁts:
(1) every possible alignment has a unique number of ones
in the padding domains allowing fault correction to handle
misalignment by any number of domains and (2) misaligned
tapes (either over- or under-shifted) do not disrupt a pattern,
allowing fault checking to be applied after an arbitrary number
of shifts, unlike p-ECC-O. If we consider the position of the
tape as position i, the data stored in the tape can be referenced
as di. Using this encoding of the padding bits, the position of
the tape i corresponds to the number of ‘1’s in the padding
bits. For example, in Figure 6(a), the tape is in position to
access d3 and there are three ‘1’s in the padding bits. Similarly,
there are two ‘1’s for i = 2 [Figure 6(b)] and one ‘1’ for i = 1
[Figure 6(c)]. Thus, the number of ones in the padding directly
corresponds to the position of the racetrack. We refer to this
as “auxiliary information.”
To ensure alignment after the shift we can use the auxiliary
information to ensure that the position is correct. Using TRs
we can determine the total number of ones inside a racetrack.
After shifting, if an under-shift or over-shift fault occurs, the
calculated number of ones will differ from the expected value.
Using the difference from the expected value, we can correct
the fault. We illustrate this through an example.
Consider the case where the racetrack begins in position
1 [Figure 6(a)] and attempts to shift to the right by one
position to match position 2 [Figure 6(b)]. Prior to the
read, we can calculate the total number of ones in the
nanowire using two transverse reads and a standard read. After