domly launching probes. The purpose here is twofold: the ﬁrst objective is to
start by probing the targets that will lead to the greatest discovery, and to put
the less successful targets (i.e., those that discover only a few elements, or no
elements at all) at the end of the queue. This can be useful in the context of a
low probing budget, where it is necessary to stop probing as soon as possible.
The second more general objective is to ﬁnd an ordering or a grouping of the
probes that exhibits some patterns to be exploited in order to reduce the probing
budget when some explored portions becomes marginal in term of discovery.
7 It is believed network operators do this as a messy attempt to mitigate, to some
extent, the risks of a more speciﬁc routing attack [18].
8 More precisely, the OR can only be applied on a per-VP basis. Indeed, let us imagine
we have two overlays. If those two overlays are taken by two diﬀerent VPs, we are
susceptible to ﬁnd diﬀerent addresses and links because of the entry point that will
be diﬀerent for the two VPs.
454
E. Marechal et al.
Fig. 2. Anaximander simulation with targets scheduling. (i) /24 internal preﬁxes in
green, (ii) direct neighbors in red, (iii) one-hop neighbors in violet, and (iv) others
in yellow. Separation between the ASes is shown with vertical red lines in the direct
neighbors group. In the one-hop neighbors and others groups, probes are also grouped
by AS, but the separation is not shown for readability purpose. (Color ﬁgure online)
To reach these goals, we organize the target list into four main groups: (i)
ﬁrst the targets belonging to the /24 internal preﬁxes of the AS, (ii) those
belonging to the direct neighbors, (iii) those belonging to the one-hop neighbors,
and ﬁnally, (iv) the targets belonging to other ASes. Within each of the main
groups, probes are gathered together by AS, with no particular order between
the probes of an AS. The direct neighbors group is further sub-divided into
three categories: the AS’s customers, the peers, and the providers, probed in
this particular order.9 Finally, ASes within a group or category are ordered by
increasing size of their customer cone, as deﬁned by Caida [3,24]. We will review
in the next sections the beneﬁts and reasons for this scheduling.
Results are depicted in Fig. 2, with the X-axis representing the number of
traceroutes that were launched, and the Y-axis depicting the corresponding
levels of discovery during the time progression. Each of the four main groups is
represented by a color: green for the internal preﬁxes, red for the direct neighbors,
violet for the one-hop neighbors, and yellow for the others. In the direct neighbors
section, the separation between the ASes is shown with vertical red lines. In the
9 To be able to establish such a classiﬁcation of ASes, we use the Caida AS Relation-
ships Dataset [4].
Anaximander
455
addresses
links
routers
200000
400000
# Traceroutes
600000
800000
y
r
e
v
o
c
s
i
d
n
o
i
t
r
o
p
o
r
P
1.0
0.8
0.6
0.4
0.2
0.0
0
Fig. 3. Simulation with no scheduling of the probes (AS174).
violet and yellow group, probes are also grouped by AS, although the separation
is not shown with vertical lines for readability purpose. A router is considered
as discovered if we managed to discover at least two of its addresses.10 Due to
space constraints, we present the detailed results only for six ASes (2 Stubs, 2
Transits, and 2 Tier 1) among the 25 we studied, as they are representative of
the typical behaviors for their type.
This representation eases the visualization of the probing evolution: one can
analyze which group of preﬁxes is the most important for the discovery of an AS
map as traceroutes are launched. In the next sections, we will review the con-
tributions of each group successively. For the interested reader, the contributions
of each group individually from each others are given in Appendix B.
/24 Internal Preﬁxes (Green Group). Targets in this group are launched
in no particular order. As can be seen in Fig. 2a (AS9198) and Fig. 2d (AS5400),
this group represents almost all discovery for Stub ASes. This is expected given
the leaf nature of Stubs, which is not to provide transit and carry traﬃc for
others. As such, only probes directed towards the internal preﬁxes will hit the
AS of interest. For larger ASes, internal preﬁxes also play a major role in the
discovery (especially for addresses), with values ranging from 35% (Fig. 2f –
AS1299) to 80% (Fig. 2e – AS4637). The eﬀect for links follows the same lead,
although it is less impressive. It is not surprising either that internal preﬁxes lead
to high discovery levels for large ASes. Indeed, probes launched directly into the
core of the AS naturally discover a lot of internal elements. However, probing
only the internal preﬁxes is not suﬃcient in this case to discover the complete
AS map.
We also notice that starting to probe with the /24 internal preﬁxes is bene-
ﬁcial, as it allows us to shift the discovery curve to the left, meaning that most
of the discovery of an AS happens at the beginning of the probing campaign.
To convince ourselves of this eﬀect, let us have a look at Fig. 3, which presents
a probing campaign with no scheduling for AS174. With this campaign, we can
observe that the discovery curve is, in fact, already shifted to the left, with a
steep increase in discovery at the beginning, followed by a slower rise. This has
10 Two addresses are enough to perform alias resolution with Midar and Apple.
456
E. Marechal et al.
to do with the properties of traceroute exploration, which is naturally very
redundant [10]. Indeed, the ﬁrst traceroutes that are launched arrive in un-
chartered territory, meaning that all addresses and links discovered are new to
the observer. The discovery rate at that time is thus very high. However, as time
passes, new elements are discovered for sure, but the probes nevertheless go
through the same routers again and again. At this time, only a few elements per
traceroute are thus valuable, instead of the whole traceroute, as previously.
Even though it is naturally shaped to the left, we managed to increase the
trend by starting to probe the /24 preﬁxes. Indeed, we see that for AS174 for
example (Fig. 2c), we have already managed to discover 70% of the addresses
after having spent only 10% of the probing budget. Compared to the campaign
with no scheduling (Fig. 3), we had only discovered 40% of the addresses with
10% of the probing budget. Starting to probe with the /24 preﬁxes is thus an
obvious ﬁrst step in the right direction to get the most discovery the soonest.
Direct Neighbors (Red Group). The ﬁrst thing we can notice is that the
direct neighbors also represent a substantial part of the AS discovery (for larger
ASes), with values ranging from 15% to 40% for addresses, from 25% to 40% for
links, and from 10% to 35% for routers (see Fig. 2c, 2b, 2e, and 2f).
With the direct neighbors, we work on both our objectives, i.e., to group
targets in some way as to ﬁnd a discovery pattern that could be further exploited
for reduction, and to shift the discovery curve to the left.
We meet our ﬁrst objective thanks to the grouping of probes by AS. At ﬁrst,
when Anaximander starts to probe the preﬁxes of a neighbor, new IP interfaces
and links are discovered. After some time though, all routes carrying traﬃc to
the neighbor have been discovered, and it becomes useless to continue probing
the neighbor’s address space, because paths taken will be redundant with paths
already explored. This is reﬂected in the simulation plots (see Fig. 2e and Fig. 2b
for example) by the apparition of plateaux in the discovery curve. Indeed, we see
that the curve presents small bursts of discovery followed by ﬂat sections, which
correspond each time with the beginning of a new neighbor probing. These ﬂat
sections correspond to traceroutes that were launched but that did not yield
any discovery, and present thus the opportunity to be pruned from the list of
targets. Some neighbors also do not present any discovery at all. The pattern is
exactly the same for other ASes, but is less visible due to the scale of the plots,
and the successive reductions applied to the pool of targets, which have already
pruned a large number of useless traceroutes. In the next section (Sect. 5.5),
we will see how this pattern can be exploited for probing reduction.
We meet our second objective by grouping the neighbor ASes into three
categories: ﬁrst the AS’s customers, then the peers, then the providers, probed
in this particular order. ASes within each category are ordered by increasing size
of their customer cone [3,24]. An AS’s customer cone is deﬁned as the ASes and
IPv4 preﬁxes that can be reached through this AS by following only customer
links. In other words, an AS’s customer cone contains its direct customers, plus
its customers’ customers, and so on. The size of an AS’s customer cone actually
Anaximander
457
Fig. 4. Alternative scheduling for direct neighbors (AS 174). (cid:2) stands for ASes ordered
by increasing order of their customer cone size, while (cid:3) stands for the decreasing order.
(i) /24 internal preﬁxes in green, (ii) direct neighbors in red, (iii) one-hop neighbors
in violet, and (iv) others in yellow. (Color ﬁgure online)
reﬂects the size or the inﬂuence of an AS in the routing system. After testing
several combinations for the categories and ordering in both the increasing and
the decreasing customer cone size, we found the optimal scheduling is indeed the
one presented above. The various attempted scheduling for the direct neighbors
are presented in Fig. 4 for the particular case of AS 174 (results are similar for
all other ASes, but are not presented due to space constraints).
The ﬁrst thing we notice is that it is more advantageous to start probing the
customers rather than the peers (note that the position of the providers does
not have much of an impact and has been left at the end of the scheduling).
We explain this phenomenon with the no-valley and prefer customer routing
policy [12], which is a current practice in today’s Internet. BGP routing decisions
are mostly based on business relationships and guidelines between ASes. For
economical reasons, peer ASes should exchange traﬃc only between each other
and each other’s customers, as this traﬃc generates money for them (either the
cost is null or they are paid by their customers). However, an AS should avoid
forwarding traﬃc coming from a peer to a provider (creating so a “valley”), as
it can only generate costs for the AS (no gain). For this reason, traceroute
exploration tends to discover customer-provider links more easily than peer-to-
peer links, which are subject to more constraints for the traﬃc they are allowed to
carry. As such, launching traceroutes towards a peer of the AS of interest will
most likely follow a route without passing through said AS of interest, because
the AS_PATH containing the peering link is also likely to be longer (compared
to a direct customer-to-provider one, if any). Links between the AS of interest
and its peer will thus be harder to spot, explaining the lower discovery it brings
during Anaximander’s probing campaign (as can be seen in Fig. 4).
Furthermore, the increasing customer cone size order presents the advanta-
geous burst we are looking for, followed by a decrease in the discovery rate). On
the contrary, we see the decreasing order yielded the opposite trend of a slow
increase followed by a speed up in the discovery. This phenomenon is due to the
458
E. Marechal et al.
traceroute exploration process of the neighbors. More precisely, when Anaxi-
mander starts to probe the preﬁxes of a neighbor, new IP interfaces and links
are discovered, but the discovery rate ultimately decreases as all routes carrying
traﬃc to the neighbor have been discovered. Therefore, it is beneﬁcial to start
probing the small ASes in the AS of interest’s cone (i.e., ASes with a low AS
rank) because their address space is smaller; it will thus be explored faster, and
the next neighbor (with its associated discovery burst) will be tackled sooner.
One-Hop Neighbors and Others (Violet and Yellow Group). Following
the direct neighbors come the one-hop neighbors (violet group) and other ASes
even further away (yellow group). Within each group, ASes are also ordered by
increasing order of their customer cone [3,24]. Separating the two groups has no
eﬀect whatsoever on the eﬃciency of the probing, but we present it this way to
realize what is the contribution of each group to the AS discovery. The global
contribution of next-hop neighbors and other ASes is much lower than the two
previous groups, with values ranging from a few percents to a small 5%. Although
not very visible in the plots, plateaux are also present in those two groups.
Alternative Scheduling. The existence of plateaux may suggest that our
scheduling is suboptimal. We have tried several alternative probing scheduling
to understand to which extent we can improve the current scheduling. However,
our results showed that none of those alternatives have positive eﬀects on the
results (see Appendix A). As it happens, grouping together redundant probes
to create those plateaux will prove to be a useful characteristic in order to
take decisions on marginal beneﬁt while probing. We thus choose to keep the
current scheduling, and to work on exploiting this pattern by reducing as much
as possible the plateaux, in which no new discovery is made (see Sect. 5.5).
5.5 Discovery Phase with Plateau Reduction
The Strategy phase ends with an ordered list of target, for each ISP of interest.
This list, obtained without any probing eﬀort, serves as input for Anaximander
second phase, the Discovery step.
In the Discovery step, Anaximander may rely on any probing mechanism.
In our implementation, we use TNT [25], so that we can also reveal the MPLS
usage [46] in the targeted AS. Then, from TNT IP level data, we run alias reso-
lution (such as Midar [22] and Apple [28]) for providing a router level map.
For its probing, Anaximander will take advantage of the plateaux that
appeared in the discovery curve due to the grouping of the probes by AS (see
Sect. 5.4). When we reach a plateau during the probing of a particular AS,