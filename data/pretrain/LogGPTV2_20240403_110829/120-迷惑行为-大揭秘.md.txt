迷惑⾏为 ⼤揭秘 酒仙桥
“ ” _
六号部队
- MdEditor
“ “迷惑⾏为” ⼤揭秘
这是 酒仙桥六号部队 的第 120 篇⽂章。
全⽂共计 2289 个字，预计阅读时⻓ 7 分钟 。
前⾔
这是⼀个挖掘客户端逻辑漏洞的进阶技巧分享。对于客户
端实现了 OTP 加密的情况下。如何进⾏漏洞挖掘以及利
⽤。
背景
受某银⾏的委托，我们对其企业版⼿机银⾏进⾏了安全测
试。其实 APP 渗透测试相对于 WEB 的渗透测试来说，
APP 更具有挑战性，尤其⾦融类 APP 挑战更⼤。⾸先要
绕过证书校验，其次在有壳的情况下⾸先要进⾏砸壳，砸
壳还不⼀定成功，最后要突破加密算法。然后才能正常进
⾏测试。如果其中任何⼀个环节没有突破，测试过程将会
带来巨⼤的挑战。
由于⾦融监管机构对⾦融 APP 的强监管，制定了⼀系列
针对⾦融 APP 的安全规范。如：双向证书校验、XXX ⽅
式加壳，OTP ⽅式加密，这些都是规范⾥必须要做的。
⽬前⾏业⾥使⽤双向证书校验的 APP 还⽐较少。OTP 加
密虽然越来越规范，但还是存在⼀定的问题。
渗透⽬标
⾸先我们在测试⼿机上安装需要渗透的某⾏ APP, 使⽤抓
包⼯具进⾏抓包，结果发现存在证书校验，但是这也难不
倒我们，在⽹上现在⼜很多的证书校验绕过插件，这⾥尝
试使⽤ justTrustMe 进⾏绕过，发现能够成功绕过。
说明他们的证书校验机制并不安全，⾄于绕过的具体的细
节这⾥就不细说了。
我们继续往下看，当打算测试转账、查询余额等功能时，
发现数据包为加密状态，没有办法进⾏功能测试。
到了这⾥可能会难住⼀批⼈，但是，再硬的⻣头也要试着
啃⼀⼝，看我逆向⼤法破解加密算法，完成渗透测试。
⾸先我们可以使⽤ jadx、jeb、gda 等逆向分析⼯具，对
apk ⽂件进⾏反编译，这⾥以 jdax 为例：
下⾯我们根据加密的数据包中的特殊字段，在代码中进⾏
定位，很幸运的发现了如下 14 处，⽤到特殊字符串的位
置，猜测是不同业务对应不同函数。
这其中肯定存在着我们所需要的函数，如果⼀个⼀个进⾏
分析的话也能够发现最终调⽤的是哪个函数，但是为了⽅
便，这⾥使⽤另⼀种⽅式进⾏定位，method profiling ⼯
具 (位于 AndroidSDK 中，需要⾃⾏下载配置 SDK 环
境)，下⾯实际操作下，⾸先选中我们要操作的 app 的进
程，然后选择 start method profiling 后操作⼿机中的功
能。
出现如下界⾯，选择 OK。
然后开始在⼿机上操作要测试的功能，完成后点击 stop
method profiling 即可。
最终会在右侧展示出调⽤的所有函数，可以在其中对调⽤
过的函数进⾏搜索，这⾥以上⾯从代码中定位到的函数进
⾏搜索，结果如下：
在这⾥⾯可以看出来，函数内部还调⽤了⼀个 CrpytSM
类中的函数，对数据进⾏加密，然后才会调⽤ okhttp 对
数据进⾏发送。下⾯我们回到反编译后的代码中，直接定
位函数进⾏分析，根据调⽤栈发现，函数是⾛的如下代
码。
我们跟进去继续分析，可以发现使⽤的是 SM2 算法对本
次请求过程使⽤的密钥进⾏加密后，传输到服务端。
⽽在转账、查询等操作时都是使⽤的 SM2 加密传输的
key 和 SM4 进⾏加密传输，最终调⽤如下函数进⾏加
密。
⾄此，我们梳理清楚了客户端加密的关键逻辑，其实对于
加密，开发⼈员为了降低耦合度，每⼀个客户端都有统⼀
的加密接⼝，也就是所有的⼊参都会经过这个加密接⼝，
加密之后会再次输出，所以⼤家在梳理逻辑的时候⼀定要
找准位置，单独分析⽤⼀个点（⽐如登录），摸透之后就
会得到想要的结果。接下来，我们直接通过 hook 这个加
密函数，就可以控制整个程序的所有⼊参及加密后的出
参。
Frida Hook ⼤法
Frida 在之前的⽂章中有过详细的介绍，这⼉就不详细讲
他的⽤法了，如果不是很了解的可以看看之前发布的⽂
章，或者在通过其他渠道学习学习。这⾥主要是基于前⾯
的理论，在这⾥加⼊实战演练。下⾯开始使⽤ frida
hook 并修改加密的内容。⾸先我们看下 key 是怎么⽣成
的，经过分析后 hook 调⽤ createKey 函数就可以知
道，app 这⼀次运⾏阶段使⽤的 key，具体 hook 代码如
下：
返回值即这⼀次使⽤的 key，下⾯看下加密。
这⾥可以将 from 进⾏替换，实现参数修改，后⾯的越权
转账、越权查询等都是基于此函数进⾏操作的，从这⾥可
以发现 打印的 4 k 和上⾯⽣成的 k 是相同的
以发现 打印的 sm4 key 和上⾯⽣成的 key 是相同的。
测试过程中，我们发现了该 APP 可以越权操作。⽔平越
权查询，越权转账。越权在⾦融⾏业是⼀个⾮常严重的漏
洞，直接影响着资⾦安全及客户信息安全。
下⾯我们⽤⼀个越权查询交易明细来验证我们的整个渗透
思路的正确性。
启动 Frida，点击 APP 需要测试的功能, 我们直接 hook
上⽂中梳理出的程序统⼀⼊参接⼝ xxx.xxx.SM4EcbUtil
加密算法。如下图：
上图中，Param 参数即加密前的参数，我们直接⽤ strs
替换该参数，将其中的账号修改为另外的⼀个账号，修改
后为 from data 参数。其实经过分析，第⼀个加密过程
得出的结果（encode result）也传到了后端，数据包响
应 200，个⼈觉得是⼀个签名校验的过程。第⼆个 SM4
加密的数据包才是真正业务逻辑处理的过程。此处的架构
设计没有将解密和验签放在同⼀个数据包，也具有⼀定的
⻛险。
返回结果如下：
总结
客户端安全其实是作⽤在客户端每⼀个环节，如加壳、加
密、签名、证书认证等，每⼀个点也可能是形成⽊桶原理
的那个点。渗透过程中，应该层层分析，不放过任何可能
出现问题的点。⼀旦⼀个点沦陷，即可造成其他点的沦
陷。各位师傅在测试过程中遇到⽆法抓包、数据包加密、
程序加壳、签名校验等问题时，不要慌，可以先搜⼀波，
相信⼤部分问题都会解决，关于客户端的渗透，逆向⼤法
是必不可少的，只要细⼼都能够分析出来的。如果还不会
逆向、frida 的那就得抓紧学习了，要跟上时代得步伐。
全⽂完
本⽂由 简悦 SimpRead (http://ksria.com/simpread) 优化，⽤以
提升阅读体验
使⽤了 全新的简悦词法分析引擎 beta，点击查看
(http://ksria.com/simpread/docs/#/词法分析引擎)详细说明