### Figure 5: Graphical Projection of Feature Vectors
**Description:**
- **Graphical projection** of feature vectors from the baseline flow-based representation into two dimensions using t-SNE transformation.
- **Feature vectors** from 32 different malware categories are displayed.
- **Observation:** Due to the high variability of flow-based feature values, both legitimate and malicious samples are scattered without clear separation.
- **Conclusion:** The flow-based representation is suitable for training classifiers specialized on a single malware category, often resulting in classifiers with high precision but low recall.

### Figure 6: Graphical Projection of Feature Vectors (Proposed Representation)
**Description:**
- **Graphical projection** of feature vectors from the proposed representation into two dimensions using t-SNE transformation.
- **Invariant properties** group malicious bags from various categories together, as they have similar dynamics modeled by the representation.
- **Legitimate bags** are concentrated on the left-hand side, far from the malicious bags.
- **Conclusion:** Training a classifier with the proposed representation will achieve higher recall with comparable precision.

### Table 3: List of Selected Flow-Based Features
**Features Applied On:**
- URL, path, query, filename length
- Digit ratio
- Lower/upper case ratio
- Ratio of digits
- Vowel changes ratio
- Ratio of a character with max occurrence
- Presence of special characters
- Max length of consonant/vowel/digit stream
- Number of non-base64 characters
- Repetition of parameters

**Other Features:**
- Number of bytes from client to server
- Number of bytes from server to client
- Length of referer/file extension
- Number of parameters in query
- Number of '/' in path/query/referer

**Note:**
- These features are considered as the baseline, as some were used in previously published work.
- Table 4 from Appendix A highlights that URLs within each malicious bag are similar to each other, unlike most legitimate bags.
- The small non-zero variability of flow-based feature values is captured by the proposed representation using both types of histograms, increasing robustness to further malware changes and variants.

### 8.2 Evaluation on Real Network Traffic
**Introduction:**
- This section demonstrates the benefits of the proposed approach for learning an invariant representation for a two-class classification problem in network security.
- **Feature Vectors:** Correspond to input feature vectors {x1, ..., xm} as defined in Section 3.
- **Transformation:** These vectors are transformed into the proposed representation of histograms φ(˜X; θ) as described in Section 4.
- **Evaluation:** Two types of invariant representations were evaluated:
  - One with a predefined number of equidistant bins (e.g., 16, 32, etc.).
  - One where the representation is learned together with the classifier to maximize the separability between malicious and legitimate traffic.
- **Bins:** For the representation learning, 256 bins were used initially, and during the learning phase, bins were merged, resulting in an average of 12.7 bins per histogram.

**Comparison:**
- Both approaches are compared with the baseline flow-based representation used in previously published work.
- Results from a widely used signature-based security device (Table 2) show that the positive samples included in the evaluation pose a real security risk, as the majority were not detected.
- **Maximum Flows:** Each bag had a maximum of 100 flows to control computational cost.

**Visualization:**
- Figures 5 and 6 illustrate the two-dimensional projection of feature vectors for the flow-based and proposed representations.
- **Flow-Based Representation:** Suitable for training classifiers specialized on a single malware category.
- **Proposed Representation:** Malicious bags from various categories are grouped together and far from legitimate traffic, leading to higher recall and comparable precision.

**Optimization Method:**
- Figure 7 visualizes the proposed method of learning the invariant representation on 2-dimensional synthetic data.
- **Input Data:** 2D point (x, y) ∈ R² represented by a 4-dimensional feature vector (x², y², x + y, x - y).
- **Histograms:** Each feature is represented by a histogram with 100 bins.
- **Decision Boundaries:** Shown for two different values of parameter λ (0.0001, 0.01), which controls the number of emerging bins.
- **Smoothing Effect:** With increasing λ, the data are represented with fewer bins, and the boundary becomes smoother and less over-fitted to the training data.

**Weight and Bin Visualization:**
- Figures 8 and 9 show the weights and derived bins learned from the training set of real network traffic.
- **Standard SVM (Figure 8):** Weights and derived bins reduce the number of bins from 256 to 130, leading to a complex boundary.
- **Proposed Method (Figure 9):** Weights exhibit a clear structure, and the derived histogram has only 18 bins, resulting in a smoother decision boundary and a more robust classifier.

### ROC Curves
**Figure 10: ROC Curves of SVM Classifier on Test Data**
- **Representations Compared:**
  - Flow-based
  - Bag mean
  - Bag variance
  - Bag combined
  - Optimized bag combined
- **Results:**
  - Flow-based representation shows unsatisfactory results, indicating it cannot be applied in practice to detect unseen malware variants.
  - The combination of feature values with feature differences histogram (bag combined) led to significantly better efficacy.
  - These results were further improved when the parameters of the invariant representation were learned automatically from the training data (optimized bag combined).