较高。
基于业务环境webserver功能的不同，还出现了一些非典型不知名的简易WAF类产品，
这些相对小众，也可能是企业安全团队自身开发和运营的。例如基于Nginx的LUA脚本开
发的WAF，基于IIS筛选器开发的WAF。理论上成熟的webserver均有module等二次开发
接口，均可以按需开发建设相应WAF类功能产品。
Module WAF在应对HTTPS类业务时非常适用，缺点是产品开发与运营成本非常高。
部署过程需要业务中断且运营人员工作量较大，需逐台Server部署，对于规则的运营也需
要投入大量人力。所以适合有一定开发和运营能力，且业务规模较小的公司。
3.网络层部署
此类WAF产品是最易部署的方式，它可部署在机房或某被防护的网络入口位置。这
不同于其他几类，它的部署和运营可以算是真正的透明。不需要对业务有太多侵入与变更，
特别适合互联网公司变更多、架构复杂的环境。
它的缺点明显，对于HTTPS协议无能为力。优势也明显，无侵人性，易部署。不影响
业务性能，可旁路接入，通过RESET包阻断HTTP会话
4.混合型WAF架构
为满足业务的多样性架构的灵活性，很多大型互联网公司还建立了混合型的WAF集
群。可以通过前述几类WAF的组合，实现相互补防覆盖不到的地方，真正实现无死角防
守。如图7-20所示。
7.4.2WAF安全策略建设
通常一个WAF产品起码会有两类规则：1）通用型主流漏润检测与防护；2）最近出现
高危1day0day漏润检测与防护。有运营能力和重要资产的公司会针对业务特点制定出第三
类业务风险类型的检测与防护。
---
## Page 131
第7章网络安全119
检测分析
Cna
网络层 WAF
图7-20混合型WAF产品架构
1.主流Web漏洞检测规则
为了确认是否覆盖“主流高危Web漏洞”这个标准，我们需要选择参照物。通常推荐
使用以下平台：
(LO/oofoud-dsemo/u1odsemommm/:dq)  dsemo 
各主流 Web 漏洞扫描器 ( WVS https:/www.acunetix.com/vulnerability-scanner/\APPS-
CAN http://www-03.ibm.com/software/products/zh/appscan )
漏润测试演示平台 bWAPP(http:/www.itsecgames.com/)
借用以上平台，在规则建设中对于自研和部署的WAF产品的实际能力做出客观的评
判。同时注意，此测试与选代优化过程需要周期性进行，如图7-21所示，安全工作有一个
重要的特点：需要及时更新。
2.最新高危漏洞检测规则
安全系统运营最重要的工作内容之一，除了部署覆盖就是检测能力的选代更新。每当
爆出最新漏洞的时候，运营人员必须第一时间跟进，分析POC和漏洞原理，提取相应的检
测规则，及时部署新规则到WAF系统。WAF系统对最新漏润攻击的阻断也称为“虚拟补
丁”、意为非真正的安全补丁，只是临时封堵攻击行为，为业务方真正更新补丁赢得宝贵的
---
## Page 132
120技术篇
响应时间。
在0day1day爆发的时候，赢得时间是第一目标，而第一步也是最重要的一步就是及时
获取威胁情报（threat information），如图7-22所示。在获取到情报之后，组织运营人员测
试分析，提取规则上线，到这里与之前的规则建设流程相同
漏洞平台
扫描测试
规则提取
-BWAPP
-WVs
-Wireshark
测试验收
-tcpdump
-OWASP
-WebGoat
-APPSCAN
图7-21WAF规则建设流程
威胁情报
POC测试
规则提取
SAM.
-Wireshark
部署更新
.TI
-update WAF
metasploit
-APPSCAN
-tcpdump
图7-22WAF新增规则建设流程
威胁情报的获取通常可以通过情报渠道、订阅安全工具开发社区RSS、关注相应APP
---
## Page 133
第7章网络安全121
官方安全信息等方式
3.业务风险监测规则
在有足够的运营能力前提下，业务方可提出某类规则借用WAF等安全系统帮助监控某
些业务异常行为。这里的规则多数分两类：1）已发现的业务漏洞，需临时封堵攻击行为，
为漏洞修补赢得时间：2）某些高危或异常行为的监控，主要目的生产数据，为业务异常行
为分析提供数据基础
7.4.3WAF性能优化
在中小型网络中购买一个商业WAF产品基本能满足需求，且根据流量大小还可以选择
适配的型号。但在大型和超大型网络中，性能的优劣变成关系到项目和系统生死存亡的关
键性问题。下面就介绍WAF的性能优化方式。
1.架构优化
在WAF项目评估与预研初期，架构的选择是评估重点，也同样影响最终产品的性能
选择考量的因素包括团队能掌控与选择的资源，业务方对性能的敏感度，最后才是安全运
营与检测能力效果的考量：
口资源一如果拥有整个机房的网络建设管理权限，则可以考虑在机房核心交换机处
流量镜像到我们的WAF设备，此时无论WAF的性能如何，均不会影响业务的正常
运营，是较为理想的以检测为目的的WAF架构
口业务性能一安全产品对性能的影响通常是业务方最为敏感的问题，往往业务方耗
费大量资源投入优化为提升业务性能毫秒级的响应，可能因安全产品的接入立马消
耗殆尽。如果不能解决业务方挑战的问题，那么你的产品基本没有被接纳的机会。
所以核心业务基本不会接受类似ModSecurity那种侵人性的安全产品，所以更应该
优先选择Cname或接人层moduleWAF方式
2.规则优化
在实际检测能力中，规则计算应该是WAF性能最大的开销，既可能影响业务性能指标
QPS，在大型网络中对计算集群的资源耗用也较大。比如ModSecurity历史上就出现过多次
---
## Page 134
122技术篇
DOS攻击漏润，并且未经优化的规则也会导致WAF因资源消耗的问题主动阉割掉部分检
测能力。
口算法优化—WAF的流量匹配不能粗暴地直接丢给正则引擎，那会带来大量的不必
要的开销。首先对流量进人WAF到最终遍历各种规则的整个流程要考虑清楚，层层
筛选直至剩下真正需要进入正则匹配的流量，如图7-23所示。
放弃无风险的
优先匹配关键字符串，
不匹配不进入
按hoader头各字段分仅需字符申匹配的零规
纯静态资源请求
后续计算
别定义匹配条件
则，不走正则引
图7-23算法优化原则
口正则优化—Google出品的正则引擎RE2是目前公认的较好引擎，相比传统古老的
PCRE引擎更快速高效，可以作为引擎的首选。但在实际使用过程中RE2存在一个
明显的问题（至少笔者写书的时候还存在），那就是对二进制数据流匹配存在问题，
持规则配置不同的正则引擎，当评估某类规则可能碰到二进制数据流时，可配置为
PCRE引擎，默认则用RE2。
---
## Page 135
0.m #  
第8章C
入侵感知体系
人侵感知是目前安全防御体系建设中最重要的一环，是大型互联网生产网络的核心需
求。本章从系统、应用、后端架构等维度讲述人侵感知体系的实现方法。
8.1主机入侵检测
主机入侵检测系统（Host-based Intrusion Detcction System，HIDS）顾名思义是基于主
机的入侵检测系统，是部署在需要防护的主机服务器上的一种软件。由于其开发部署需要
考虑业务环境，其架构对业务系统侵人性的部署也带来了版本适配等开发难题，同时部署
过程也需要耗费大量运维成本。商用产品较少，以至于现在市面上知名的商用HIDS几乎
没有。在开源产品方面有者名的OSSEC，被各中小型互联网公司选用。各大互联网公司则
因为生产网络的海量IDC环境不得不自研HIDS产品，这些自研的HDS在人侵对抗的
线不断的选代更新，其能力和效果甚至会比商业产品更好，至少非常适合自身的生产网环
境，同时根据自身安全需求它们往往已经不再是传统的标准HIDS架构。下面分别介绍这
两类产品。
8.1.1开源产品OSSEC
OSSEC是著名的开源HIDS产品（http://www.ossec.net/），且长期维护更新。它的版本
---
## Page 136
124技术篇
覆盖了主流操作系统，支持Linux\BSDiWindows，以及Linux的多个发行版的不同版本，
并提供源码安装，RPM和DEB安装方式。非常适合中小型网络，服务器规模小于10000
台的生产网环境。同时在最近还出现了VirtualAppliance版，那些使用云服务的小企业也可
以选择此类部署方式。OSSEC开源发行版本如图8-1所示。
Downloads
Source Code Packages
ServeriAgent
In qeM
Documentation
https://github.com/ossec/osec-docs
LatstStalRle (2.8.2）
ServeriAgent 2.8.2  Linux/BSD
pssec-hids-2.8.2.tar gz  Release Notes
Checksum
Agent:2.8  Windows
ossec-agent-win32-2.8.exb
Checksum
Web UI10.8
ossec-wui-0.8.tar.gz
Checksum
Server Virtual Appliance 2.8.2
ossec-vm-2.8.2.ova  README
Checksum
ossec-vm-2.8.2.ova  README (miror)
2.8.1Rolease
ServetiAgent 2.8.1  Linuxv/BSD
ossec-hids-2.8.1.tar.gz  Release Notes
Server Virtual Appliance 2.8.1
08sec-vm-2.8.1.ova  README
Checksum
图8-1OSSEC开源发行版本
OSSEC是典型的BS架构，Agent端会通过各种模块，分析并采集数据上报到Server，
如图8-2所示。在Server端接受数据，并分析数据存储到DB或通过WUI展现。其Agent
和Server端都可以通过二次开发，规则变更等方式，增强其检测能力，所以你也可以把
OSSEC当成一个数据采集处理框架。
根据处理数据量和机房布置的需求，整个大的公司生产网可以划分成多个处理集群。
Server端可以有不同的配置方式。通常一个Server集群（数据收集&分析&存储）最多配
置2000台agent接人。
---
## Page 137
第8章入侵感知体系125
 oSSEC AGENTS
Windows agent
数据接收
数据分析
存储\展现
图8-2OSSEC典型架构
OSSEC的管理运营如下：
Agent 部署—OSSEC的人侵检测能力基于各Agent从主机上采集到的数据的分析，
在整套入侵检测系统建设第一步就是部署Agent，同一套人侵检测系统中可以有众
多不同版本的Agent存在，包括 Windows、Linux。OSSEC Agent 在部署的时候会生
成一个keys，用于与服务器的通信协议认证。所有操作系统的OSSECAgent均以后
台服务模式被安装。Agent端默认会采集某些系统数据，比如Linux系统的/var/log/
message、/var/log/authlog、/var/www/logs/access_log等常见的入侵过程可能遗留