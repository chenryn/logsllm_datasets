### NFS配置参数说明

- **ro (read-only)**: 对共享目录具有只读权限。
- **sync**: 同步写入，数据在写入内存的同时也写入磁盘。
- **async**: 异步写入，数据先写入内存，然后周期性地写入磁盘。
- **root_squash**: 将root用户及所属组映射为匿名用户或用户组（默认设置）。
- **no_root_squash**: 与`root_squash`参数功能相反。
- **all_squash**: 将远程访问的所有普通用户及所属组映射为匿名用户或用户组。
- **no_all_squash**: 与`all_squash`参数功能相反（默认设置）。
- **anonuid**: 指定将远程访问的所有用户映射为本地的匿名用户的UID。
- **anongid**: 指定将远程访问的所有用户组映射为本地的匿名用户组的GID。
- **secure**: 限制客户端只能从小于1024的TCP/IP端口连接NFS服务器（默认设置）。
- **insecure**: 允许客户端从大于1024的TCP/IP端口连接服务器。
- **subtree_check**: 若输出目录是子目录，NFS服务器会检查其父目录的权限。
- **no_subtree_check**: 若输出目录是子目录，NFS服务器不会检查其父目录的权限。

---

### 任务4：工作组内的网络共享存储服务

**步骤:**

1. 规划网络共享存储服务的方案
2. 部署NFS
3. 配置NFS服务器的安全
4. 在Windows上使用网络共享存储服务
5. 在Linux上使用网络共享存储服务

**任务目标:**

- 规划网络共享存储服务的方案
- 部署实现网络共享存储服务
- 在Windows上访问网络共享存储服务
- 在Linux上访问网络共享存储服务

---

### 案例分析：设计工作室的网络存储需求

**背景:**

某设计工作室拥有大量的数字资源，如果存储在本地会占用主机大量存储空间，并且不利于资源共享。因此，需要构建一个公共网络存储系统，以实现灵活的资源读取和共享。

**基本需求:**

1. 建设大容量、高可靠的网络共享存储服务，在存储服务器上安装大量磁盘并通过RAID技术实现存储容灾。
2. 提供超过20TB的存储容量，实现高容量网络存储服务。
3. 支持MacOS、Linux、Windows等多种操作系统。

**解决思路:**

1. 通过NFS建设网络存储服务。
2. 仅允许工作室内部网络的设备访问。
3. 支持多种操作系统进行磁盘挂载。

**网络拓扑:**

- 业务服务器
- 移动工作站
- 无线接入点
- 工作室交换机
- 文件服务器（NFS + RAID + 磁盘）
- 设计工作站

---

### 部署NFS服务器

**创建用于共享的目录:**

```bash
[root@Project-07-Task-02 ~]# mkdir /opt/WorkGroupShare
[root@Project-07-Task-02 ~]# chmod 777 /opt/WorkGroupShare
```

**安装NFS服务:**

```bash
[root@Project-07-Task-02 ~]# yum install -y nfs-utils rpcbind
```

**启动并启用NFS服务:**

```bash
[root@Project-07-Task-02 ~]# systemctl start rpcbind
[root@Project-07-Task-02 ~]# systemctl enable rpcbind
[root@Project-07-Task-02 ~]# systemctl start nfs-server
[root@Project-07-Task-02 ~]# systemctl enable nfs-server
```

**配置NFS共享:**

```bash
[root@Project-07-Task-02 ~]# echo "/opt/WorkGroupShare 10.10.2.0/24(rw,root_squash,no_all_squash,sync,insecure)" >> /etc/exports 
[root@Project-07-Task-02 ~]# systemctl reload nfs-server
[root@Project-07-Task-02 ~]# exportfs -rv
[root@Project-07-Task-02 ~]# showmount -e
```

**配置防火墙和SELinux:**

```bash
[root@Project-07-Task-02 ~]# rpcinfo -p
[root@Project-07-Task-02 ~]# firewall-cmd --permanent --zone=public --add-service=nfs
[root@Project-07-Task-02 ~]# firewall-cmd --permanent --add-port=111/tcp
[root@Project-07-Task-02 ~]# firewall-cmd --permanent --add-port=2049/udp
[root@Project-07-Task-02 ~]# firewall-cmd --permanent --add-port=20048/udp
[root@Project-07-Task-02 ~]# firewall-cmd --reload
[root@Project-07-Task-02 ~]# setsebool -P nfs_export_all_rw on
[root@Project-07-Task-02 ~]# setsebool -P nfs_export_all_ro on
[root@Project-07-Task-02 ~]# getsebool -a | grep nfs
```

**测试NFS共享:**

```bash
[root@Project-07-Task-02 ~]# mkdir /mnt/sharedisk
[root@Project-07-Task-02 ~]# mount -t nfs 10.10.2.126:/opt/WorkGroupShare /mnt/sharedisk
[root@Project-07-Task-02 ~]# cd /mnt/sharedisk
[root@Project-07-Task-02 sharedisk]# touch a.txt
[root@Project-07-Task-02 sharedisk]# ls -l
[root@Project-07-Task-02 sharedisk]# cd ~
[root@Project-07-Task-02 ~]# nfsstat
```

---

### Samba服务器

**Samba的工作原理:**

- **历史渊源:**
  - 早期类UNIX系统中可以通过NFS实现资源共享，而微软为了使Windows系统之间也能实现资源共享，提出了SMB（Server Message Block）通信协议。
  - 由于微软没有公开SMB协议，使得UNIX与Windows之间的资源共享变得困难，通常只能通过FTP实现。
  - 1991年，大学生Andrew Tridgwell编写了Samba自由软件，解决了这一问题。Samba是开放源代码的GPL自由软件，实现了类UNIX与Windows之间通过SMB协议进行资源共享。

- **Samba的主要进程:**
  - **nmbd**: 进行NetBIOS名称解析，并提供浏览服务显示网络上的共享资源列表。
  - **smbd**: 管理Samba服务器上的共享目录、打印机等资源。

- **Samba的安全模式:**
  - **share安全级别模式**: 客户端不需要输入用户名和密码就可以浏览Samba服务器的资源，适用于公共的共享资源，安全性较差。
  - **user安全级别模式**: 客户端需要提交合法的账号和密码才能访问共享资源，这是服务器的默认模式。
  - **server安全级别模式**: 客户端将用户名和密码提交到指定的一台Samba服务器上进行验证，如果验证失败，客户端会用user级别访问，实现集中式的认证管理。
  - **domain安全级别模式**: 加入Windows域环境中，验证工作由Windows域控制器负责。
  - **ads安全级别模式**: 具备domain安全级别模式的所有功能，并可以具备域控制器的功能。

**Samba的配置文件:**

- **/etc/samba/smb.conf**: Samba软件的主配置文件。
- **/etc/init.d/smb**: 控制Samba服务的smbd服务。
- **/etc/init.d/nmb**: 控制Samba服务的nmbd服务。
- **/usr/bin/smbclient**: Samba服务的客户端工具。
- **/usr/bin/rpcclient**: 执行客户端的MS-RPC功能的工具。
- **/usr/bin/smbpasswd**: 修改SMB用户的密码。
- **/usr/bin/smbusers**: 用户名称映射文件。
- **/usr/bin/findsmb**: 列出SMB名称查询的相关信息。
- **/usr/sbin/smbd**: 提供SMB/CIFS服务。
- **/usr/sbin/nmbd**: 提供IP命名服务上的NetBIOS客户端。
- **/etc/pam.d/samba**: PAM认证文件。
- **/usr/bin/eventlogadm**: 存储Samba事件日志记录。
- **/usr/bin/testparm**: 检查smb.conf配置文件的内部正确性。

河南中医药大学信息技术学院互联网技术教学团队  
[官方网站](https://internet.hactcm.edu.cn)  
[教学网站](http://www.51xueweb.cn)