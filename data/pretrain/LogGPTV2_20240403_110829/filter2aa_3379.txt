C0RE  Team       
Challenge  Impossible  
-- Multiple  Exploit  On  Android
Hanxiang  Wen,  Xiaodong  Wang
About  us  &  C0RE  Team
–
Hanxiang  Wen,  温瀚翔
•
Security  researcher  @  C0RE  Team
•
Focus  on  Android  vulnerability  research  and  exploit  development
–
Xiaodong  Wang,  王晓东
•
Security  researcher  @  C0RE  Team
•
Focus  on  Kernel  vulnerability  research  and  exploit  development
–
C0RE  Team        
•
A  security-focused  group  started  in  mid-2015,  with  a  recent  focus  on  the  
Android/Linux  platform
•
The  team  aims  to  discover  zero-day  vulnerabilities,  develop  proof-of-
concept  and  exploit        
•
131  public  CVEs  for  AOSP  and  Linux  Kernel  currently
•
Android top researcher team for  submitting  high  quality  reports  
to  Google  VRP.  
Agenda
- AOSP  Exploit
-
CVE-2016-6707
-
Looking  Into  Exploit
-
Improvement  &  Limitation
- Kernel  Exploit
-
CVE-2017-0437
-
Vulnerability  Analysis
-
How  to  Exploit
- Combination
CVE-2016-6707
Background:
–
“BitUnmap”  in  system_server
–
Open  source  exploit  with  some  defects
Thanks  to  Gal  Beniamini,  blog  link:  
https://googleprojectzero.blogspot.com/2016/12/bitunmap-
attacking-android-ashmem.html
Mismatch  in  Ashmem
Set/Get  size  in  Ashmem:
Mismatch  in  Ashmem
Map  memory  with  Ashmem:
Region  size  in  ashmem may  not  equal  to its  mmaped size  !!!
False  assumption  in  Bitmap
Create  Bitmap
False  assumption  in  Bitmap
Free  Bitmap
mPixelStorage.ashmem.size(using   in  munmap)
size  (using  in  mmap)  
Bitmap  OOB  unmap
Time
len ==  asma-­>size
Mapped  Memory
Bitmap
asma-­>size
Mapped  Memory
Bitmap
asma-­>size
Unallocated    Memory
Bitmap::doFreePixels()
SET_SIZE
len
Preparation
Target  structure  --- Thread
Bypass  SELinux rules  (Embedded  Shellcode in  APK):
//  system_server.te,  updated  in  Android-­N
#  system_server should  never  execute  anything  from  /data  except  for  /data/dalvik-­cache  files.
neverallow system_server {
data_file_type
-­dalvikcache_data_file #mapping  with  PROT_EXEC
}:file  no_x_file_perms;;      
Exploit
Shaping  memory  space  (IPC  with  Notification  Service):  
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
SoundPool
Thread
SoundPool
Bitmap
Bitmap
Bitmap
Bitmap
Allocated
Bitmap
Allocated
Bitmap
Bitmap
Allocated
Low
High
Time
Bitmap
Bitmap
SoundPool
Thread
SoundPool
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Evil
Bitmap
SoundPool
Thread
SoundPool
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
Unmaped Memory
SoundPool
Bitmap
Bitmap
Bitmap
Bitmap
Bitmap
SoundPool
Bitmap
Bitmap
Bitmap
Faked
Thread
Thread  size
Improvement
Accuray“NOP”before“ADRP”in embedded  shellcode
Patch  for  fake  thread  attributes  assembly
- Enable  dlopen()  dlsym().
Limitation
SELinux mitigation
//  system_server.te,  updated  in  Android-­N
#  Do  not  allow  opening  files  from  external  storage  as  unsafe  ejection
#  could  cause  the  kernel  to  kill  the  system_server.
neverallow system_server sdcard_type:dir {  open  read  write  };;
neverallow system_server sdcard_type:file rw_file_perms;;
#  system  server  should  never  be  opening  zygote  spawned  app  data
#  files  directly.  Rather,  they  should  always  be  passed  via  a
#  file  descriptor.
#  Types  extracted  from  seapp_contexts type=  fields,  excluding
#  those  types  that  system_server needs  to  open  directly.
neverallow system_server {  bluetooth_data_file nfc_data_file shell_data_file app_data_file }:file  open;;
CVE-2017-0437  Introduction
Ø
Impacted  Phones:  Nexus  5X/Pixel…
Ø
Vulnerability  Type:  stack  buffer  overflow
Ø
Qualcomm  driver  vulnerability  of  wlan_hdd_cfg80211.c
Ø
Exploitation： Using  the  stack  overflow,  we  could  rewrite  the  return  
address  of  the  call  function,  then  we  could  control  the  PC  register  to  
the  gadget,  and  then  remove  the  process’s  address_limit
Ø
Chen  Hao  of  Qihoo  360  Technology  Co.  Ltd.  reported  to  Google  in  
February  this  year  
Ø
We  have  been  validated  on  the  MTC19V  version  of  the  Nexus  5X
1.  The  times  of  loop  could  be  set  by  the  PoC/PWN
2.  The  contents  of  memcpy could  also  be  set  by  the  PoC/PWN  
,  and  then  we  could  control  the  contents  of  the  stack
Ø
Qualcomm  Wi-Fi  driver’s  vulnerability
CVE-2017-0437Analysis
CVE-2017-0437Analysis
Ø
The  definition  of  the  struct  roam_ext_params
Ø
The  netlink  commands  of  PoC/PWN  in  the  user  space
Ø
ARMv8’s  LR(X30)   on  the  stack,  Push  down  stack  pointer  and  store  FP  and  LR
CVE-2017-0437Analysis
call  trace:
PoC/PWN  workflow
CVE-2017-0437 Exploit
1.
The  roam_params.bssid_favored_fator[]  overflow  the  caller  function’s  
return  address  when  the  loop  more  then  16  times.
2.      using  some  gadgets,  we  could  remove  the  address_limit  of  the  process.
stack  frame  layout
CVE-2017-0437’s patch
Ø
The  patch
AOSP  and  Kernel  Combination  Exploits
AOSP  and  Kernel  Exploit  Workflow  
Demonstration
C0RE  Team     