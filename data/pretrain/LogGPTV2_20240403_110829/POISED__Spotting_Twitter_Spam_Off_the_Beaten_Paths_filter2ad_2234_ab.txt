However, they cannot be exactly the same. Indeed, we expect
that in the social network universe there may be several different
groups of users that are interested in the same things, but that are
not in direct contact with each other. In other words, there may
exist several networked communities that share the same interest,
but that are not connected. In that case, the overall community
of interest would consist of a set of disconnected networked com-
munities, and would thus not constitute a networked community
per se. Thus, modulo this caveat, one can postulate that networked
communities do constitute communities of interest, albeit not a
complete community of interest regrouping all users interested in
those topics. This is indeed our first hypothesis.
In fact, this hypothesis has been implicitly employed in previous
work on communities of interest. Indeed, in modern Internet-based
social networks it is much easier to determine who is connected to
whom than it is to determine a priori what are the topics of interest
of users, let alone of groups of users. Thus, a proxy method for
reconstructing these communities of interest has been to extract
networked communities from the information on connections be-
tween users [79]. This can be done by using graph algorithms to
identify dense subgraphs within the graph of user nodes and con-
nections. We explore the validity of this hypothesis on our Twitter
dataset.
In Figure 1, we provide an example of three such Twitter net-
worked communities. The edges represent the “following” relation-
ships between users. The size of nodes is scaled according to their
Figure 1: An example of three Twitter communities, where
each is talking about a specific set of topics.
degree. We detected these three communities in a subgraph of 2000
users and extracted the topics of their members’ discussions. We
found that each community talks about a specific set of main topics.
Users in Comm1 post news about Hollywood celebrities and dis-
cuss topics about friends and family. Users in Comm2 share videos
of some specific reputable Youtube users and bloggers. Users in
Comm3 are interested in soccer, post inspirational quotes, and talk
about a specific TV show.
Homophily [54] as well as the topology of social networks [59,
90] highly impact the dissemination of information in social net-
works. For example, by analyzing the tweets of communities, it is
possible to predict viral memes [90]. On social networks, however,
not all messages become viral [48] and many just travel through
some networked communities interested in similar topics. The
probability that a certain message is propagated through a set of
networked communities is different from another set of communi-
ties in the network. We call these sets of communities, who care
more or less about a message, the Parties of Interest. We hypothesize
that the propagation probability of malicious messages throughout
the network distinguishes them from the normal messages.
Based on this intuition, we propose a method for detecting mali-
cious content on Twitter, called POISED (Parties Of Interest Seman-
tic Extraction and Discovery). POISED computes and learns the
propagation probability of messages in the networked communities
and extracts the parties of interest. It then detects malicious mes-
sages by distinguishing their propagation probabilities and parties
of interest from those of normal messages.
(cid:1)(cid:2)(cid:4)(cid:13)(cid:1)(cid:2)(cid:1)(cid:2)(cid:2)(cid:1)(cid:3)(cid:1)(cid:2)(cid:6)(cid:11)(cid:5)(cid:7)(cid:8)(cid:2)(cid:11)(cid:9)(cid:11)(cid:3)(cid:4)(cid:11)(cid:1)(cid:10)(cid:11)(cid:3)(cid:1)(cid:6)(cid:5)(cid:2)(cid:4)(cid:7)(cid:4)(cid:2)(cid:1)(cid:2)(cid:8)(cid:12)(cid:13)(cid:3)(cid:6)(cid:11)(cid:9)(cid:7)(cid:10)(cid:15)(cid:4)(cid:14)(cid:5)(cid:3)(cid:1)(cid:5)(cid:5)(cid:6)(cid:7)(cid:8)(cid:13)(cid:2)(cid:3)(cid:2)(cid:13)(cid:12)(cid:1)(cid:9)(cid:10)(cid:9)(cid:11)(cid:13)Comm3:Topic	
  1:	
  SoccerTopic	
  2:	
  Inspirational	
  messagesTopic	
  3:	
  Specific	
  TV	
  showsComm1:Topic	
  1:	
  CelebritiesTopic	
  2:	
  Friends	
  and	
  FamilyTopic	
  3:	
  LoveComm2:Topic	
  1:	
  YouTube	
  videosTopic	
  2:	
  Blog	
  posts3 METHODOLOGY
The components of our system are shown in Figure 2: 1) data ex-
traction, 2) community detection, 3) topic detection, 4) clustering
of similar messages, and 5) spam detection. In the following, we
explain each component in detail.
3.1 Data Extraction
We evaluated POISED on a large-scale dataset extracted from Twit-
ter. Twitter is one of the most popular microblogging platforms
with over 320 million active users [84]. This platform enables users
to broadcast and share information. A user’s timeline includes all
tweet messages posted by that user. On Twitter, users follow others
or are followed. Followers of a user receive all the tweet messages
posted by this user. Twitter also provides a “retweet” mechanism
that permits users to spread information of their choice beyond the
reach of the original tweet’s followers. Throughout this paper, we
use the terms messages, posts, and tweets interchangeably. POISED
utilizes user timelines and the social network. Here, we formally
define a network as:
Definition 3.1. A social graph G⟨V , E⟩ is a set of vertices V rep-
resenting the users in the network and a set of edges E ⊆ {(u, v) :
u, v ∈ V } representing the set of social connections.
Note that a social graph G can be directed or undirected. If it is
undirected, this means that (u, v) ∈ E ⇐⇒ (v, u) ∈ E; If, on the
contrary, it is directed, then (u, v) ∈ E does not necessarily mean
that (v, u) ∈ E, i.e., u might be connected with v but not vice-versa.
3.2 Community Detection
Although there is no universally agreed-upon definition of a com-
munity in a social network, in a graph, structural communities
usually refer to a group of nodes that are densely connected to each
other and loosely connected to the rest of the graph. The nodes in-
side such a community might also share common properties and/or
play similar roles within the graph. In social media, communities
might have a link with external real entities. For example, a user
might have a group of friends from the same city, a group from the
same school, and yet another group interested in information secu-
rity. Although these communities might be roughly defined and be
overlapping with each other [1, 62], the concept behind them is still
valid. In contrast, however, structural communities are normally
defined as disjoint, non-overlapping sets of nodes of the graph. In
this paper, we will favor the use of structural communities as they
are easier to reconstruct from connection information. Later, our
results suggest that detecting structural communities enables us
to detect communities and parties of interest. Here, we define a
networked community as follows:
Definition 3.2. A networked community structure C of a graph
G is a disjoint partition of nodes in V , namely C = {C1, . . . , Ch},
where Ci ⊆ V , V = C1∪· · ·∪Ch, and Ci (cid:44) , Ci ∩Cj =  if i (cid:44) j, for
all i, j ∈ {1, . . . , h}. Nodes in a community Ci are connected to each
other with higher probability than to nodes in other communities.
3.3 Topic Detection
Recently, natural language models have been used for clustering
words in order to discover the underlying topics that are combined
to form documents in a corpus. Topic detection algorithms such as
Latent Dirichlet Allocation (LDA) [6] and Topic Mapping [45] have
been successfully applied for analyzing text from user messages on
social networks. By employing a topic detection algorithm, POISED
identifies a set of topics of interest for a user and a community.
The LDA detection algorithm uses a list of documents as an input
and detects the corresponding topics. For social networks with small
message lengths, such as Twitter, topic detection is shown to be less
efficient [37]. For this reason, we aggregate a user’s messages into
larger documents and then run topic modeling on the documents.
For a user u, a set of documents Du, namely Du = {d1, d2, .., dk},
is generated by partitioning the user’s timeline into k groups with
l messages. Note that l is the number of messages in a document
and is a constant, whereas k varies based on the size of the user’s
timeline. Our evaluation with variation of l = {1, 5, 10, 20, 50, all}
shows that the length of documents do not have a significant impact
on the overall results and therefore, we chose l = 20.
Formally, a user u’s topics of interest (Tu), namely a list T =
{t1, t2, . . . , tk}, consists of topics detected by a topic detection al-
gorithm on user u’s set of documents Du.
Having extracted the topics for each user’s documents, a com-
munity’s topics of interest can be simply defined as the list of all
topics detected for members of that community:
u ∈ C, DC =
u∈C Du = {d1, d2, .., dm}, where m =
Definition 3.3. For a community C, its set of documents DC is
the union of the documents generated for each community member
u∈C |Du|.
Thus, the set of topics of interest for a community C is defined
as follows:
Definition 3.4. The topics of interest TC of a community C is a
list TC = {t1, t2, . . . , tm} of m topics detected by a topic detection
algorithm on the community’s set of documents DC, where each
document di is labeled with a topic ti.
Note that the topics in the topic lists Tu and TC of a user and
a community are not unique, and that several documents for the
same user or the same community can be labeled with the same
topic. Given Hypothesis 1, we expect that the topics found for a
user or a community will greatly overlap.
Detecting topics of interest for each community, POISED con-
structs a network of structural communities where each community
is represented by a set of topics.
3.4 Clustering Similar Messages
Similarity between messages can be measured by several metrics,
and some can be more complex than others [23, 67, 82]. Other spam
detection methods [27, 74] have effectively used an approach called
four-gram analysis to identify similar messages on Twitter. This
technique proved effective in our case : after manually inspecting
the performance of this method on 60 clusters of different sizes,
all clusters included the tweets with the same text, i.e., all tweets
were correctly grouped. As part of this approach, messages that
share four or more consecutive words are clustered together. While
in POISED, other algorithms can also be used to identify similar
messages, in our evaluation we cluster messages employing four-
gram analysis.
Figure 2: POISED constructs a probabilistic model based on the diffusion of messages throughout communities of interest.
Then, it employs supervised machine learning to classify messages as spam or benign.
If a message contains less than four words, then all its words in
their consecutive order are compared with other messages. The re-
sult of running this algorithm is a list of groups of similar messages,
д = [msд1, msд2, ..., msдj], where д includes j similar messages,
|д| = j. The messages in a group can be generated by a single user
or several users.
3.5 Parties of Interest
A specific message could have been (re-)posted in one or several
communities. Tracking the propagation of the messages in struc-
tural communities identifies parties of interest. Over time, this track-
ing makes it possible to predict the probability that a message
posted in a community is also posted/retweeted in another commu-
nity. POISED tracks the diffusion of messages over communities,
and computes a probabilistic model for every cluster of similar
messages.
First, the union set of topics of interest is constructed, which
includes all topics detected from all documents. Then, for each
group of similar messages, POISED counts the number of times that
messages in the group have been observed in a community with a
specific topic. These counts for a group are normalized by the total
number of topics identified for messages in that group. For example,
assume three communities, C1, C2 and C3 are detected in a network,
whose topics of interest are {t1, t2}, {t1, t3} and {t1, t4, t5}, respec-
tively. Assume, a group includes three similar messages posted by
users u1 and u2 in C1, and user u3 in C2. The probability distribution
for the union of topics in these three communities, (t1, t2, t3, t4, t5),
is
. All three messages in this group are posted in
communities with t1 as their topic of interest (C1 and C2), while
only one of these messages is posted in communities with t3 as
their topic of interest (C2). Therefore, the count distribution for
(t1, t2, t3, t4, t5), is (3, 2, 1, 0, 0). The distributions are normalized by
being divided by the message counts of the union of topics, i.e., six
in this example, to compute probability distribution.
(cid:16) 3
As a result, for each group of similar messages, a probabilistic
model is computed, which shows the potential parties of interest for
that group of messages. Assume T is the union of all the detected
topics in the dataset, where T = {t1, t2, ..., tk}. Each group д of
similar messages is represented with a topic probability vector
probд = [p1, p2, ..., pk], where k = |T | and pj is the likelihood that
messages in this group favor communities interested in topic tj;
this probability distribution thus represents the parties of interest
for messages in д. The overall table of probability distributions for
(cid:17)
6 , 2
6 , 1
6 , 0, 0
all groups of messages prob_table = {probsд1 , probsд2 , ..., probsдh }
thus represents the parties of interest for the social network given
the observed messages, and it is the basis for the classification model.
In other words, using this model, if a message is seen in a specific
community, it is possible to predict the probability that this (or a
similar message) are going to be observed in other communities.
Note that POISED does not need to learn about the topics of
messages, but only about their propagation through communities
of interest.
3.6 Classification
If spam messages travel through different parties of interest than
those of benign messages, then a classifier can learn these patterns
and detect spam messages. Hence, by having a ground-truth data
set, a classifier can be trained where topics found in communities
are features of that classifier, and the class is defined as a binary
variable that takes as values: spam or benign.
4 EVALUATION SETUP
4.1 Dataset
In December 2015, we used the Twitter API to crawl users’ timelines.
The API provides a stream of random users. We used a sample of
300 of them, called “seeds,” and crawled the timelines for them as
well as their friends and followers. Thus, we obtained data for 300
neighborhoods in Twitter, where a neighborhood consists of a seed
with all his friends and followers. In our random selection of seeds,
we did not collect data for users with more than 2,000 followers or
friends, so that the crawling process would be of manageable size.
We also limited the crawl to users having specified English as their
language, so the further text analysis would be performed on tweets
of a single language. To limit the bias of analysis in favor of older
accounts with many tweets, and to work with more current data,
we limited the number of tweets used per user to a maximum of 300
of their most recent English tweets. In our dataset, the average of
all users’ oldest and newest tweets are March 2015 and June 2015.
4.2 Network Construction
For each neighborhood, we constructed a directed and an undirected
network based on following relationships between all users inside
the neighborhood. The undirected network is obtained from the
directed network, where the relationship between two users must
 Data cleaning(3) Topic DetectionGenerating documentsRunning LDANetwork construction(2) Community Detectionk-coreCommunity detectionCleaning tweets and word tokenizing(4) Clustering Similar Messagesn-gram analysisBuilding the training datasetCreating the probabilistic table (parties of interest)(5) Spam Detection Classification         Twitter API(1) Data CollectionIdentifying seeds and neighborhoodsObtaining timelines(a) Neighborhood size
(b) Timeline length
(a) Number of communities
(b) Size of communities
Figure 3: While on average neighborhoods contain 270 users,
some include more than 1000.
Figure 4: Histograms for number of communities and com-
munity size.
is about 7.5. The median for community size is 6 and the mean is
about 30.
4.4 Topic Detection
We applied Latent Dirichlet allocation (LDA) to find topics of inter-
est for users and communities. We first generated text documents
from users’ timelines and then ran LDA modeling on the documents
to obtain a list of detailed topics for each document.
be reciprocal to form an edge. In our experiments we examine the