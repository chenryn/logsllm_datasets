# Hacking the Google TV
## Presented by: Amir “zenofex” Etemadieh, CJ “cj_000” Heres, Tom “tdweng” Dwenger, and Dan “bliss” Rosenberg
[Slide Deck Link](http://gtvhacker.com/pres/dc20.ppt)

### GTVHacker: The Team
**GTVHacker** is a group of six skilled hackers dedicated to unlocking Google TV devices. Our primary goal is to bypass hardware and software restrictions to enable the loading and use of unsigned kernels. To date, the team has released multiple methods for unlocking Google TV devices and won a $500 bounty for being the first to root the Google TV.

### Team Members
The GTVHacker team officially consists of:
- **AgentHH**: First human outfitted with metal legs.
- **cj_000**: Destroyer of words.
- **Gynophage**: German rockstar reverse engineer.
- **[mbm]**: Known for founding the Open-WRT project.
- **Tdweng**: Software developer turned superhero.
- **Zenofex**: ███ ███ █ ████ ██ █████ ██ ██ ██

With special guest:
- **Bliss**: A vulnerability researcher who takes pleasure in exploiting anything with a CPU.

### Google TV: What is it?
Google TV is a platform that bridges the gap between your TV and an Android device. It creates an overlay on the television stream and includes an IR transmitter for media center devices (cable box, TV, sound system). Initially released without the Android Market, it was later updated to include it. The platform receives Over-the-Air updates automatically from the OEM manufacturer and contains a forked version of Chrome with all plugins and extensions disabled except for Flash.

### Android vs. Google TV
Although Google TV runs Android, there are several key differences:
- **Chrome Browser**: Provides a reliable and safe browsing experience.
- **x86 Platform**: The Gen 1 Google TV platform is the only x86 set of Android devices.
- **Limited Apps**: The number of available applications is far fewer than in the standard Android market.
- **Native Code**: Some Android apps with native code do not run on the x86 chipset.
- **ADB Restrictions**: Unlike most Android devices, GTV devices are USB hosts, and ADB is restricted to one whitelisted IP.

### x86 vs ARM
- **Most Deployed Boxes**: x86
- **Newest Devices**: ARM-based (Sony, LG, Vizio)
- **Availability**: Still limited

### GTV vs Content Providers
From its initial release, Google TV has been in a constant battle with content providers. They feared that giving Google access to television programming advertising streams would strengthen Google's position in web advertising and convince users to drop services like cable. Websites enforced checks by verifying the browser User-Agent and the Flash version string.

### Platform: x86 Android
There are no other mainstream Android x86 devices. Architecture differences make for a limited marketplace. Code compiled for the device can usually be compiled without the need for a compiler toolchain.

### x86 / Gen 1 CPU
Current Google TV devices use an Intel CE41xx CPU:
- **Intel CE4100**: 45nm Atom core 1.2 GHz with System-on-Chip (SoC) and an "on-die" security processor for DRM.
- **Devices**: Revue (CE4100), Sony TV/Blu-Ray (CE4150).

### Bootloader (Gen1)
The bootloader for the CE41xx devices is known as the "Intel CEFDK" (Consumer Electronics Firmware Development Kit):
- **Signature Verification**: Bootloader is signed and verified by the security processor, initiating the "chain of trust."
- **Stages**: Intel supplies a stage 1 and stage 2 boot-loader in the SDK. Logitech uses both stages, while Sony uses Intel's stage 1 and its own proprietary "NBL" for stage 2.

### Chain of Trust
1. SoC decrypts and verifies the signature of stage 1 CEFDK.
2. Stage 1 CEFDK boots, checks the signature, and decrypts stage 2.
3. Stage 2 boots and checks the kernel signature.
4. Kernel takes over.
5. (Sony) Kernel SHA1 hashchecks init.
6. (Sony) Init RSA verifies init.rc / init.(eagle/asura).rc.

### Kernel Security
- **Module Signing**: Kernel requires modules to be properly signed before insertion.
- **Read-Only Partitions**: All partitions except /data & /cache are marked as read-only.
- **ADB Shell**: Only allows RW access to folders with "shell" permissions.
- **Security Features**: Functions like ptrace are left out of the kernel, and /dev/mem access is restricted.
- **Patches**: Kernel is patched from all known public Android vulnerabilities.

### Current Devices
#### Logitech Revue
- **Release Date**: October 2010
- **Features**: Full-sized keyboard with a built-in touchpad.
- **Pricing**: Originally $249, reduced to $199, and finally $99.
- **Status**: Discontinued but still favored by many GTV users.

#### Logitech Revue Motherboard
- **UART1**: Console
- **J3**: PICKIT2
- **SW1**: Unused switch
- **J20**: I2C
- **J69**: USB
- **SATA1**: SATA Header
- **J24**: Unknown
- **J13**: Power for SATA
- **XDP1**: Intel XDP Debug Header

#### Revue: Recovery
- **Recovery Mode**: Standard Android 2e recovery.
- **Options**: Reboot, Apply Update from USB (update.zip), Wipe data/factory reset, Wipe cache partition.
- **Update Verification**: All update files are RSA verified before installation.

#### UART On The Revue
- **First Root**: Required a virgin Revue and soldering to four pads.
- **Access**: Allowed for Read/Write access to the file system.
- **Manual Updates**: Created a manual update process mirroring Google's but without signature checks.

#### First "Content Provider Bypass"
- **Bypass Method**: Changing the flash version string and browser user agent to watch normally restricted content.
- **Example**: From `Flash 10.1` to `Flash 10.0`.

#### Honeycomb Surprises: Message from Logitech
- **Recovery Menu**: Removed and replaced with a message to the GTVHacker team.
- **Functionality**: Removed the ability to install manual updates, leaving only the automatic process of erasing /cache and /data.
- **Message**: Encoded in ROT13 and included the names of the GTVHacker team members.

#### Flash Sabotage: Revue
- **Cache and Chrome**: EXT3 partitions stored on NAND flash.
- **USB Controller**: Connected to the Revue, allowing for a flash drive to be used.
- **Data Lines**: Tapped to insert our own flash drive.

#### Revue Kernel Exploit
- **Details**: To be added.

#### Revue Module Signing Exploit
- **Details**: To be added.

#### Sony Devices (Gen1)
- **Hardware**: Nearly identical to the Revue, with faster processors (CE4150 @ ~1.7GHz).
- **Models**: Blu-Ray Player (NSZ-GT1), Television 24” - 46” (NSX-#GT1).

#### NSZ-GT1: Motherboard
- **Design**: Bulkier than the Revue, built like a Sony.
- **Debug Pads**: Populated for easier debugging.
- **Processor**: Faster CE4150 @ ~1.7GHz.

#### SATA Sabotage: Sony
- **Internal SSD**: Via SATA, GBDriver RS2 AES encrypts all data on NAND flash.
- **ATA Password**: Sony stored all data on SSD, except the bootloader and kernel.
- **Procedure**: Redirected the SATA bus to our own device, allowing RW access externally.
- **Downgrade**: Used to downgrade to older SW versions to look for flaws.

#### Sony GTV: Recovery
- **Features**: More interesting than the Revue, with a similar "Update from USB" feature.
- **Backend**: Mostly done through scripts, not standard Android, so no debug log is left behind.
- **Updates**: RC4 encrypted.

#### Command Execution Through Recovery
- **Problem Spotting**: 
  ```sh
  ls /tmp/mnt/diskb1/package_list_*.zip | head -1 | grep "package_list_"
  /bin/sony/check_version.sh $1
  ```

This presentation provides a comprehensive overview of the GTVHacker team's efforts to unlock and exploit Google TV devices, highlighting the technical challenges and innovative solutions they have developed.