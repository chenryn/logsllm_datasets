http://gtvhacker.com/pres/dc20.ppt
Hacking The Google TV
GTVHacker
Presented by: Amir “zenofex” Etemadieh, CJ “cj_000” Heres, 
Tom “tdweng” Dwenger, and Dan “bliss” Rosenberg
http://gtvhacker.com/pres/dc20.ppt
GTVHacker: The Team
GTVHacker
 GTVHacker is a group of 6 hackers with 
individual skill sets who work together to 
unlock Google TV devices.
 Our primary goal is to bypass hardware and 
software restrictions to allow for unsigned 
kernels to be loaded and used. 
 To date the team has released multiple 
methods for unlocking Google TV devices.
 GTVHacker team won $500 bounty for 
being the first to root the Google TV. 
http://gtvhacker.com/pres/dc20.ppt
Team Members
GTVHacker
The GTVHacker team officially consists of 6 members:
● AgentHH – First human outfitted with metal legs.
● cj_000 - Destroyer of words
● Gynophage – German rockstar reverse engineer
● [mbm] -  known for founding the Open-WRT project and tossing 
251 children down a well
● Tdweng – software developer turned super hero. 
● Zenofex – ███ ███ █ ████ ██ █████ ██ ██ ██
With special guest:
● Bliss - a vulnerability researcher who takes sick pleasure in 
exploiting anything with a CPU. He once punched an Android in 
the face.
http://gtvhacker.com/pres/dc20.ppt
Google TV: What is it?
Google TV is a platform that bridges the gap between your TV and an Android device.
Platform creates an overlay on television stream and also contains an IR transmitter to 
transmit to media center devices (cable box, TV, sound system).
Device was originally released without the Android Market available but was eventually 
updated to include it.
Platform receives Over-the-Air updates automatically from OEM manufacturer.
Platform contains forked version of Chrome with all plug-ins and extensions other than 
Flash disabled.
GTVHacker
http://gtvhacker.com/pres/dc20.ppt
Android vs. Google TV
Although Google TV runs Android there are differences:
The device has a Chrome browser out of the box which provides a 
fairly reliable and safe browsing experience
The Gen 1 Google TV platform is currently the only x86 set of Android 
devices.
Although the platform does have the Android market, the amount of 
actual applications available is far below that of the actual market.
Due to the fact that some Android applications include native code, 
some applications are not able to run on the x86 chip-set.
Unlike most Android devices, GTV devices are USB hosts requiring 
ADB to be used over the network and ADB is restricted to one white-
listed IP. 
GTVHacker
http://gtvhacker.com/pres/dc20.ppt
x86 vs ARM?
Most commonly deployed boxes are x86
Newest Google TV Devices are ARM based
Devices by Sony, LG and Vizio (Availability is still limited)
More on the ARM devices a bit later!
GTVHacker
http://gtvhacker.com/pres/dc20.ppt
GTV vs Content Providers
GTVHacker
 From the initial release of the platform, the Google TV has been in 
a constant battle with the content providers. 
 Content providers believed giving Google access to television 
programming advertising streams would strengthen Google's 
position in web advertising, as well as convince users to drop 
services like cable.
 Websites enforced checks by verifying the browser User-Agent as 
well as the Flash version string.
http://gtvhacker.com/pres/dc20.ppt
Platform: x86 Android
GTVHacker
 There are no other mainstream 
Android x86 devices.
 Architecture differences makes 
for a crippled marketplace.
 Code compiled for device can 
usually be compiled without the 
need for compiler toolchain.
http://gtvhacker.com/pres/dc20.ppt
x86 / Gen 1 CPU
GTVHacker
  Current generation of Google TV devices use an Intel CE41xx CPU. 
  45nm Atom core 1.2 Ghz with System-on-Chip (SoC).
  “On-die” security processor to handle DRM.
 Revue – CE4100
 Sony TV / Blu-Ray – CE4150
http://gtvhacker.com/pres/dc20.ppt
Bootloader (Gen1)
GTVHacker
The bootloader for the CE41xx devices is known as the “Intel CEFDK” 
(Consumer Electronics Firmware Development kit).
Bootloader is signed and signature is verified by security processor, 
beginning “chain of trust”. 
Intel supplies a stage 1 and stage 2 boot-loader in the SDK.
Logitech uses both stages of CEFDK in its device.
Sony uses Intel's stage 1 and it's own proprietary “NBL” for stage 2.
http://gtvhacker.com/pres/dc20.ppt
“Chain Of Trust”
GTVHacker
1) SoC decrypts and verifies signature of stage 1 CEFDK
2) Stage 1 CEFDK boots, checks signature, and decrypts Stage 2
3) Stage 2 boots and checks signature on Kernel
4) Kernel takes over
5) (Sony) Kernel SHA1 hashchecks init
6) (Sony) Init RSA verifies init.rc / init.(eagle/asura).rc
GTV platform utilizes a “Chain of Trust” boot
1
2
3
4
5
6
http://gtvhacker.com/pres/dc20.ppt
Kernel Security
GTVHacker
Kernel requires modules to be properly signed before being inserted.
All partitions except /data & /cache are marked as RO by the kernel.
ADB shell only allows RW access to folders with “shell” permissions. 
Functions like ptrace are left out of the kernel.
Access /dev/mem is restricted.
Kernel is patched from all known public Android vulnerabilities.
http://gtvhacker.com/pres/dc20.ppt
Current Devices
GTVHacker
http://gtvhacker.com/pres/dc20.ppt
Logitech Revue
GTVHacker
 Released October 2010
 Full sized keyboard with built in 
touchpad
 Originally priced at $249 later 
reduced to $199 and finally $99
 Discontinued but still favoured by a 
majority of GTV users
http://gtvhacker.com/pres/dc20.ppt
Logitech Revue Motherboard
GTVHacker
 UART1 - Console
 J3 - PICKIT2 
 SW1 – Unused switch
 J20 – I2C 
 J69 – USB
 SATA1 – SATA Header
 J24 – Unknown
 J13 – Power for SATA
 XDP1 – Intel XDP Debug 
Header
Image via ifixit.com
http://gtvhacker.com/pres/dc20.ppt
Revue: Recovery
GTVHacker
Recovery mode is an “Android 2e recovery” which is standard on many Android devices.
 Reboot
 Apply Update from USB (update.zip)
 Wipe data/factory reset
 Wipe cache partition
All update files provided are RSA verified before the box attempts installation.
http://gtvhacker.com/pres/dc20.ppt
UART On The Revue
GTVHacker
 First root on the 
Google TV Platform.
 Required a virgin 
Revue.
 Still works on newly 
purchased Revues.
 Soldering to four pads 
on the Revue and 
booting into recovery 
mode.
 Method allowed for 
Read/Write access to 
File System.
http://gtvhacker.com/pres/dc20.ppt
UART On The Revue
GTVHacker
 Created a manual update 
process that mirrored 
Google's but did not perform 
any of the signature checks.
 Continued to release 
modified updates which 
included an ADB running as 
root as well as our first 
attempt at a content provider 
bypass.
http://gtvhacker.com/pres/dc20.ppt
First “Content Provider Bypass”
GTVHacker
Bypassing Hulu/CBS/NBC/ABC's browser/flash checks was relatively easy 
and could be done quickly with a hex editor and RW /system access.  All 
that was required was a simple change from:
To:
Changing one letter in the flash version string as well as changing 
the browser user agent (which can be done directly from the box in 
Chrome's settings) will allow a user to watch normally restricted 
content.
http://gtvhacker.com/pres/dc20.ppt
Honeycomb Suprises:
Message from Logitech?
GTVHacker
 Logitech removed the recovery menu and replaced it with a message to 
the GTVHacker team. 
 Removed functionality to install manual updates therefore removing a 
user's ability to recover other than via the automatic process of 
erasing /cache and /data.
 The message was encoded in a ROT13 cypher.
 Each of the current GTVHacker team members' names were listed as 
no longer functioning recovery menu items.
http://gtvhacker.com/pres/dc20.ppt
Honeycomb Suprises:
Message from Logitech?
GTVHacker
“A @gtvhackers congratulations if your reading this please post 
a note on your forum to let me know ;)”
http://gtvhacker.com/pres/dc20.ppt
Flash Sabotage: Revue
GTVHacker
Getting a secret message from Logitech was awesome.
Having them remove the recovery menu functionality was not.
So we needed a way to play with the update functionality of the box...
The OTA updater writes to /cache/recovery/command, which uses the 
following syntax:
--update_package=CACHE:/somefile.zip
Now if only we had a way to write to cache...
http://gtvhacker.com/pres/dc20.ppt
Flash Sabotage: Revue
GTVHacker
● /cache and /chrome are EXT3 
partitions stored on NAND 
flash.
● Luckily, that flash is   
connected to the Revue via a 
USB Controller.
● It's a flash drive!
● We can tap the data lines and 
stick our own flash drive in line.
http://gtvhacker.com/pres/dc20.ppt
Revue Kernel Exploit
GTVHacker
Revue root kernel exploit
To be added
http://gtvhacker.com/pres/dc20.ppt
Revue Module Signing Exploit
GTVHacker
Revue RSA kernel module signing bypass
To be added
http://gtvhacker.com/pres/dc20.ppt
Sony Devices (Gen1)
GTVHacker
GTV hardware is nearly identical, other than the obvious differences.
Blu-Ray Player (NSZ-GT1)
Television 24” - 46” (NSX-#GT1)
http://gtvhacker.com/pres/dc20.ppt
NSZ-GT1: Motherboard
GTVHacker
 Bulkier than the 
Revue.
 Built like a Sony.
 Populated debug 
pads!
 Contains a faster 
processor – CE4150 
@ ~1.7GHz.
http://gtvhacker.com/pres/dc20.ppt
SATA Sabotage: Sony
GTVHacker
 Internal SSD via SATA
 GBDriver RS2 AES encrypts 
all data on NAND flash.
 ATA Password
 Sony stored all data on SSD, 
except bootloader and kernel.
 Risky procedure. Small 
points.
 Able to “redirect” SATA bus to 
our own device, which we had 
RW access to externally.
 Used this to downgrade to old 
SW versions, to look for flaws.
http://gtvhacker.com/pres/dc20.ppt
Sony GTV: Recovery
GTVHacker
 Far more interesting 
than that of the Revue.
 Like the Revue, has a 
similar “Update from 
USB” feature.
 Nearly entire backend is 
done through a series of 
scripts. Not standard 
Android, so no debug 
log is left behind. 
Though not impossible 
thanks to the UART.
 Sony updates are RC4 
encrypted.
http://gtvhacker.com/pres/dc20.ppt
Sony Google TV
Command Execution Through Recovery
Can you spot the problem here?
ls /tmp/mnt/diskb1/package_list_*.zip | head -1 | grep "package_list_"
/bin/sony/check_version.sh $1