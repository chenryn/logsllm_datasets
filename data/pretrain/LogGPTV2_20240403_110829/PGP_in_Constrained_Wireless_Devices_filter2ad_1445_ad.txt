288,236
2,392
3,510
7,973
Table 7: Timings (in milliseconds) for 1024-bit and 2048-bit RSA operations on various platforms.
512-bit modulus
768-bit modulus
1024-bit modulus
ElGamal key gen
ElGamal encrypt
ElGamal decrypt
DSA key gen
DSA signing
DSA verifying
Pager
—
7,341
8,704
—
2,955
5,531
Pilot
PII
— 51,704
19.13
22.55
— 3,431
7.53
14.31
17,338
19,060
6,329
12,389
Pager
—
16,078
26,958
—
6,031
11,594
Pilot
PII
— 219,820
35.91
59.53
— 14,735
15.55
26.13
34,904
56,708
11,875
24,277
Pager
—
26,588
57,248
—
9,529
18,566
Pilot
PII
— 1,200,157
67.78
144.73
54,674
24.28
47.23
73,978
148,059
—
25,525
52,286
Table 8: Timings (in milliseconds) for DL operations on various platforms.
Figure 2: Listing of PGP keys.
Figure 3: The main menu.
7.2 Key generation and storage
The main PGP menu (Figure 3) has an option “New
Key” for creating a key pair. Users can enter their name,
email address, pager PIN, and select a key type and
key length (see Figure 4). The key types and key sizes
presently available are ECC (random curve or Koblitz
curve; over F2163, F2233 or F2283), DH/DSS (512/512,
768/768, 1024/1024, 1536/1024 or 2048/1024 bits), and
RSA (512, 768, 1024, 1536 or 2048 bits). The DH/DSS
and RSA key sizes are the ones available in many exist-
ing PGP implementations. For the DSA, the maximum
bitsize of the prime p is 1024 bits in conformance with
the DSS [34]. For ECC, separate key pairs are generated
for public-key encryption and digital signatures.
Public keys and private keys are stored in separate
key rings. Public key attributes (see Figure 5) can be
viewed using the “View Key” function available on the
main menu. As required by OpenPGP, private keys are
encrypted under a user-selected passphrase, and the en-
crypted private key is stored. The passphrase has to be
entered whenever a private key is required to sign or de-
crypt a message.
7.3 Cryptographic services
The three basic PGP services are available: sign only,
encrypt only, or sign-and-encrypt. Users can decide to
sign an email, or to encrypt an email, after composing
the message. The user is prompted for the passphrase to
unlock the private signing key, and to select the public
encryption key of the intended recipient. In addition to
the times given in Tables 3–8 for the main operations,
there is additional overhead which can be apparent to the
CODE SIZE. No serious effort was made to minimize
the size of the programs loaded to the pager. There is
some code linked from the OpenSSL cryptographic li-
brary which could easily be removed (in fact, we were
somewhat surprised that the library with the added ellip-
tic curve routines could be used with relatively few mod-
iﬁcations for the pager). The library routines adapted
from OpenSSL and OpenPGP along with various glue
needed to adapt to the pager accounts for approximately
3=4 of the 370 KB loaded on the device (with the re-
mainder attributed to code involving the screen and user-
interface).
If some interoperability can be sacriﬁced,
then the code size can also be reduced by removing rou-
tines such as CAST or some of the hash algorithms.
MAKING THE OPENPGP CODE MORE ROBUST. The
OpenPGP reference implementation provides minimal
diagnostics and can easily break on bad data. The occa-
sional segmentation fault triggered by bad user data may
be merely unpleasant when an application is used on a
workstation; such errors on the pager are completely un-
acceptable. Our application corrects some of the most
troublesome shortcomings, but better error-handling is
needed.
KEY MANAGEMENT. We would like to implement an
X.509-based PKI or the web of trust model.
In either
case, we would implement a key server for retrieving
and storing keys in a key repository. This would involve
setting up a proxy wireless server with which the pager
would communicate directly. The proxy server in turn
would communicate with existing key servers on the In-
ternet.
9 Conclusions
IMPLEMENTING PGP ON THE RIM PAGER. The 32-
bit architecture, relatively sophisticated operating system
and development environment, and relatively large mem-
ory size means that development for the pager is closer to
that done for more traditional systems than the small size
might suggest. The user interface must be customized for
the device, but “generic code” which does not involve ﬁle
I/O moves fairly easily to the pager.
On the other hand, it appears likely that such de-
vices will continue to have processors which run much
more slowly than their desktop counterparts. Long de-
lays in handling encrypted messages or signatures will
be a considerable annoyance for users of this type of de-
vice. While we used a signiﬁcant amount of the available
memory on the pager, it would be desirable to reduce the
resource consumption in a production version of PGP.
Battery life will continue to be a major concern, and the
overhead of authentication and conﬁdentiality competes
with the need to minimize transmissions from the device.
Figure 4: Screen for creating a new key pair.
Figure 5: Screen for viewing a (portion of the) public
key’s attributes.
user. Verifying the passphrase, for example, may require
20 seconds if the default iteration count is used when
hashing the salted passphrase; our implementation used
a smaller default iteration count. A small amount of time
is added for interaction with the database ﬁlesystem for
large memory transfers.
7.4 Key management
The key management system we implemented was the
simplest one possible—the direct trust model (see §2.2).
A menu item is available (see Figure 3) for emailing
one’s public key to another user. A function is also avail-
able for extracting and storing a public key received in an
email message. If desired, a public key can be authenti-
cated by verifying its ﬁngerprint by some direct means
(e.g., communicating it over the telephone—authenticity
is provided by voice recognition).
8 Future Work
The following are some directions for future work.
RANDOM NUMBER GENERATION. Many systems im-
plement a “random gathering device” which attempts to
use environmental noise (keyboard data, system timers,
disk characteristics, etc.) to build a cryptographically se-
cure source of random bits [21]. Our pager application
used only a rather simple (and most likely not sufﬁciently
secure) seeding process involving the clock and a few
other sources. A more sophisticated solution is essential,
perhaps tapping into the radio apparatus as a source.
INTEROPERABILITY. The goal of interoperability was
met. All of the required algorithms from RFC 2440
are included, along with several listed as recommended
and the elliptic curve routines. Our PGP implementa-
tion interoperated with existing implementations for the
PalmPilot and workstations.
ELLIPTIC CURVE CRYPTOGRAPHY. Elliptic curve so-
lutions ﬁt particularly well into the constrained environ-
ment. 1024-bit and 2048-bit RSA private-key operations
are too slow for PGP applications, while the performance
of 163-bit, 233-bit and 283-bit ECC operations is tolera-
ble for PGP applications. If PGP (or other email security
solutions) is to be used for securing email communica-
tions between constrained wireless devices and desktop
machines, then our timings show that ECC is preferable
to RSA since the performance of the latter on some wire-
less devices is too slow, while both systems perform suf-
ﬁciently well on workstations.
GENERAL. This paper concentrated on PGP, although
the results are more widely applicable. Many of the ser-
vices targeted at the growing wireless market will require
security solutions involving the cryptographic mecha-
nisms used by PGP. The constraints on small wireless
devices are likely to be with us for some time, and will re-
quire a balance of usability, computational requirements,
security, and battery life.
Acknowledgements
The authors would like to thank Jonathan Callas for some
enlightening discussions about PGP, and Herb Little for
answering our numerous questions about the RIM pager.
References
[1] M. Abdalla, M. Bellare and P. Rogaway, “DHAES:
An encryption scheme based on the Difﬁe-Hellman
(cid:24)
problem”, preprint, 1999. Available from http://
www.cs.ucdavis.edu/
rogaway/papers
[2] ANSI X9.30-1, “The digital signature algorithm
(DSA) (revised)”, American Bankers Association,
working draft, July 1999.
[3] ANSI X9.52, “Triple data encryption algorithm
modes of operation”, American Bankers Associa-
tion, 1998.
[4] ANSI X9.62, “The elliptic curve digital signature
algorithm (ECDSA)”, American Bankers Associa-
tion, 1999.
[5] ANSI X9.63, “Elliptic curve key agreement and
key transport protocols”, American Bankers Asso-
ciation, working draft, August 1999.
[6] Blackberry, http://www.blackberry.net
[7] I. Blake, G. Seroussi and N. Smart, Elliptic
Curves in Cryptography, Cambridge University
Press, 1999.
[8] J. Callas, OpenPGP Speciﬁcation and Sample
Code, Printers Inc. Bookstore, Palo Alto, March
1999.
[9] J. Callas, L. Donnerhacke, H. Finney and R.
Thayer, “OpenPGP message format”, Internet RFC
2440, November 1998.
(cid:24)
http://www.eskimo.com/
[10] W. Dai,
Crypto++.
weidai/cryptlib.html
[11] N. Daswani and D. Boneh, “Experimenting with
electronic commerce on the PalmPilot”, Financial
Cryptography’99, Lecture Notes in Computer Sci-
ence, 1648 (1999), Springer-Verlag, 1-16.
[12] T. ElGamal, “A public key cryptosystem and a sig-
nature scheme based on discrete logarithms”, IEEE
Transactions on Information Theory, 31 (1985),
469-472.
[13] G. Frey and H. R¨uck, “A remark concerning m-
divisibility and the discrete logarithm in the divisor
class group of curves”, Mathematics of Computa-
tion, 62 (1994), 865-874.
[14] S. Galbraith and N. Smart, “A cryptographic appli-
cation of Weil descent”, CodesandCryptography,
Lecture Notes in Computer Science, 1746 (1999),
Springer-Verlag, 191-200.
[15] R. Gallant, R. Lambert and S. Vanstone, “Improv-
ing the parallelized Pollard lambda search on bi-
nary anomalous curves”, to appear in Mathematics
ofComputation.
[16] S. Garﬁnkel, PGP: Pretty Good Privacy, O’Reilly
& Associates, 1995.
[17] P. Gaudry, F. Hess and N. Smart,
“Con-
structive and destructive facets of Weil de-
scent on elliptic curves”, preprint, January 2000.
Available from http://www.hpl.hp.com/techreports/
2000/HPL-2000-10.html
[18] GNU Privacy Guard, http://www.gnupg.org
[19] I. Goldberg, “Pilot stuff from the ISAAC Group”,
http://www.isaac.cs.berkeley.edu/pilot/
[20] P. Gutmann, “Cryptolib”. http://www.cs.auckland.
(cid:24)
ac.nz/
pgut001/cryptlib
[21] P. Gutmann, “Software generation of practically
strong random numbers”, Proceedingsof the Sev-
enth USENIX Security Symposium, 1998, 243-
257.
[22] T. Hasegawa, J. Nakajima and M. Matsui, “A prac-
tical implementation of elliptic curve cryptosys-
tems over G F. p/ on a 16-bit microcomputer”, Pro-
ceedings of PKC ’98, Lecture Notes in Computer
Science, 1431 (1998), 182-194.
[23] D. Hankerson,
J. Lopez Hernandez and A.
Menezes, “Software implementations of elliptic
curve cryptography over ﬁelds of characteristic
two”, draft, 2000.
[24] IEEE P1363, “Standard speciﬁcations for public-
key cryptography”, ballot draft, 1999. Drafts avail-
able at http://grouper.ieee.org/groups/1363
[25] The International PGP Home Page, http://www.
pgpi.org
[26] D. Johnson and A. Menezes, “The elliptic curve
digital signature algorithm (ECDSA)”, Technical
report CORR-34, Dept. of C&O, University of Wa-
terloo, 1999. Available from http://www.cacr.math.
uwaterloo.ca
[27] N. Koblitz, “Elliptic curve cryptosystems”, Mathe-
maticsofComputation, 48 (1987), 203-209.
[28] N. Koblitz, “CM-curves with good cryptographic
properties”, AdvancesinCryptology–Crypto’91,
Lecture Notes in Computer Science, 576 (1992),
Springer-Verlag, 279-287.
[29] N. Koblitz, ACourseinNumberTheoryandCryp-
tography, 2nd edition, Springer-Verlag, 1994.
[30] H. Krawczyk, M. Bellare and R. Canetti, “HMAC:
Keyed-hashing for message authentication”, Inter-
net RFC 2104, February 1997.
[31] A. Lenstra and E. Verheul, “Selecting crypto-
graphic key sizes”, Proceedings of PKC 2000,
Lecture Notes in Computer Science, 1751 (2000),
Springer-Verlag, 446-465.
[32] A. Menezes, T. Okamoto and S. Vanstone, “Reduc-
ing elliptic curve logarithms to logarithms in a ﬁnite
ﬁeld”, IEEE Transactions on Information Theory,
39 (1993), 1639-1646.
[33] V. Miller, “Uses of elliptic curves in cryptography”,
Advances in Cryptology – CRYPTO ’85, Lecture
Notes in Computer Science, 218 (1986), Springer-
Verlag, 417-426.
[34] National Institute of Standards and Technology,
“Digital Signature Standard (DSS)”, FIPS Publica-
tion 186-2, February 2000. Available at http://csrc.
nist.gov/ﬁps
[35] National Institute of Standards and Technology,
“Secure Hash Standard (SHS)”, FIPS Publication
180-1, April 1995. Available at http://csrc.nist.gov/
ﬁps
[36] P. van Oorschot and M. Wiener, “Parallel collision
search with cryptanalytic applications”, Journalof
Cryptology, 12 (1999), 1-28.
[37] OpenSSL, http://www.openssl.org
(cid:24)
vax/
http://www.paranoia.com/
[38] PGP versions,
pgp versions.html
[39] David Poguet, PalmPilot: TheUltimateGuide, 2nd
edition, O’Reilly & Associates, 1999.
[40] B. Ramsdell, “S/MIME version 3 message speciﬁ-
cation”, Internet RFC 2633, June 1999.
[41] RIM Software Developer’s Kit
developers.rim.net/handhelds/sdk
(SDK), http://
[42] R. Schroeppel, H. Orman, S. O’Malley and O.
Spatscheck, “Fast key exchange with elliptic curve
systems”, Advances in Cryptology – Crypto ’95,
Lecture Notes in Computer Science, 963 (1995),
Springer-Verlag, 43-56.
[43] I. Semaev, “Evaluation of discrete logarithms in a
group of p-torsion points of an elliptic curve in
characteristic p”, MathematicsofComputation, 67
(1998), 353-356.
[44] J. Solinas, “An improved algorithm for arithmetic
on a family of elliptic curves”, Advancesin Cryp-
tology – Crypto ’97, Lecture Notes in Computer
Science, 1294 (1997), Springer-Verlag, 357-371.
[45] J. Solinas, “Improved algorithms for arithmetic
on anomalous binary curves”, Technical report
CORR-25, Dept. of C&O, University of Water-
loo, 1999. Available from http://www.cacr.math.
uwaterloo.ca
[46] W@P white paper, 1999, http://www.wapforum.
org/what/whitepapers.htm
[47] A. Whitten and J. Tygar, “Why Johnny can’t en-
crypt: A usability evaluation of PGP 5.0”, Proceed-
ings of the Eighth USENIX Security Symposium,
1999.
[48] M. Wiener and R. Zuccherato, “Faster attacks on
elliptic curve cryptosystems”, Selected Areas in
Cryptography, Lecture Notes in Computer Science,
1556 (1999), Springer-Verlag, 190-200.
[49] E. De Win, S. Mister, B. Preneel and M. Wiener,
“On the performance of signature schemes based
on elliptic curves”, Algorithmic Number Theory,
Proceedings Third Intern. Symp., ANTS-III, Lec-
ture Notes in Computer Science, 1423 (1998),
Springer-Verlag, 252-266.
[50] Wireless Application Protocol Forum, “Wireless
Application Protocol”, John Wiley & Sons, Inc.,
1999. See also http://www.wapforum.org/
[51] Wireless Application Protocol Forum, “Wireless
Transport Layer Security Speciﬁcation”, chapter
16 of [50], 1999. Drafts available at http://www.
wapforum.org
[52] P. Zimmermann, The Ofﬁcial PGP User’s Guide,
MIT Press, 1995.