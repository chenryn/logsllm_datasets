conn.eql(cid1, cid2) # returns TRUE
## use the example data to create a table in connection 1
delete("abalone", conn.id = cid2)
x 
SeeAlso
db.obj,db.data.frame,db.table,db.view,db.Rqueryexplainthedefinitionsoftheclasshier-
archyofthispackage.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
SeeAlso
db.arrayformsanarrayusingcolumns
Examples
## Not run:
## get the help for a method
## help("crossprod,db.obj-method")
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
SeeAlso
db.disconnectdisconnectsaconnection.
db.listlistsallactiveconnections.
connection infothefunctionsthatextractinformationabouttheconnection.
conn.eqltestswhethertwoconnectionsarethesame.
db.search.pathanddb.default.schemasdisplaysorsetsthesearchpath(i.e. defaultschemas)
intheconnecteddatabase.
Examples
## Not run:
## connect to a database
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
SeeAlso
db.objectslistsalltablesandviewsinadatabasetogetherwiththeirschema.
db.existsObjecttestswhetheratable/viewexistsinthedatabase.
as.db.data.framecreatesadb.data.framefromadata.frame,adatafileoradb.Rquery.
44 db.data.frame-class
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
SeeAlso
db.data.framecreatesadb.data.frameobject.
as.db.data.frameconvertsdb.Rqueryobject,data.frame,oradatafileintoadb.data.frame
objectandatthesametimecreatesanewtableinthedatabase.
db.objisthesuperclass.
db.tableanddb.viewarethesub-classes.
db.Rqueryisanothersub-classofdb.obj.
lkorlookatdisplayapartofthetable
Examples
## Not run:
showClass("db.data.frame")
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid <- db.connect(port = .port, dbname = .dbname, verbose = FALSE)
delete("abalone", conn.id = cid)
as.db.data.frame(abalone, "abalone", conn.id = cid, verbose = FALSE)
x <- db.data.frame("abalone", conn.id = cid, verbose = FALSE) # x points to table "abalone"
lk(x)
db.disconnect(cid, verbose = FALSE)
## End(Not run)
db.disconnect Disconnectaconnectiontoadatabase
Description
Althoughallthedatabaseconnectionswillbeautomaticallyclosedwhenthispackageisunloaded,
onecanchoosetodisconnectadatabaseconnectionhimself.
Usage
db.disconnect(conn.id = 1, verbose = TRUE, force = FALSE)
db.disconnect 47
Arguments
conn.id Aninteger,theIDoftheconnectionthatyouwanttodisconnect.