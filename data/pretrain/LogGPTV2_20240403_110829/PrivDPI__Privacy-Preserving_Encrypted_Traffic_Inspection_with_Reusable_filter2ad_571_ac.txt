C. Anti-Terror Intelligence
An interesting use case also arises in the context of
governments gathering intelligence from their own citizens
in order to ﬁght terror. This use case is highly controversial
today and subject to major ongoing debates [1] , due to the
tradeoff of preserving civil liberties (i.e., the right for privacy)
and the government duty to save lives. With the PRI system,
governments and citizens can decide and control the level
of inspection and privacy infringement applied to the private
data. The anti-terror intelligence use case may require some
adaptations to the model. For example, the PRI system can
be operated by the ISPs that (as part of the PRI software)
can correlate the trafﬁc with client information. The rules are
securely provided by the government, but some aggregated
information on them can be made accessible to the public, or
its representatives. The exact matches of user trafﬁc, cannot
be provided immediately to the user as this might prevent
the authorities to effectively react to threats, therefore the
PRI system may make use of a notiﬁcation delay which is
deﬁned a priori.
VI. DISCUSSION AND RELATED WORK
In an age where more and more resources and services
are outsourced, there is an increasing need for solutions
preserving critical security aspects. Over the last years,
this problem has been discussed particularly intensively
in the context of cloud computing: Although users of
cloud computing infrastructure may expect their data to
remain conﬁdential, today’s clouds are built using a classical
hierarchical security model that aims only to protect the
privileged code (of the cloud provider) from untrusted
code (the user’s virtual machine), and does nothing to
protect user data from access by privileged code [3]. While
for many large-scale computations today, the use of cloud
computing resources is unavoidable or at least ﬁnancially
very attractive, users may not be willing to trust their cloud
provider to keep their data conﬁdential. In fact, the cloud
user must trust not only the hardware on which her or
his data is actually analyzed, but in addition also (i) the
provider’s software, including privileged software such as a
hypervisor and ﬁrmware but also the provider’s full stack
of management software; (ii) the provider’s staff, including
system administrators but also those with physical access to
hardware such as cleaners and security guards; (iii) the law
enforcement bodies in any jurisdiction where their data may
be replicated, as the Snowden leaks have revealed [3], [10].
Recently, researchers have started investigating whether
similar approaches as proposed for cloud computing may also
be applicable in the context of computer networks, which
Privacy
Effectiveness
Overhead
user exposure
rules exposure
inspection guarantee
supports rules
computation
communication
Proxy
middlebox
middlebox
yes
any
none
en-&decryption
no
endpoint
no
any
none
none
Client-Side Firewall
BlindBox [25]
Architecture
middlebox
no
no
exact match only
tokenization & encryption
a stream of tokens
no (enclaved)
no (enclaved)
PRI
yes
any
decryption
one packet
COMPARISON OF PERFORMANCE AND SECURITY OF DIFFERENT IDS ARCHITECTURES.
Table II
come with rather different requirements. Existing systems
are based on proxies and are vulnerable to a man-in-the-
middle attack on SSL, installing fake certiﬁcates at the
middlebox [14], [23]. The middlebox can break the security
of SSL and decrypt the trafﬁc so it can perform the Deep-
Packet Inspection (DPI). The removal of the SSL end-to-
end security, results in a host of issues. Some proposals
allow users to tunnel their trafﬁc to a third party middlebox
provider [22], [24]. But these approaches allow the middlebox
owner to inspect/read all trafﬁc. An alternative today are
distributed ﬁrewalls, a client-side approach to implement
intrusion detection/prevention.
A very interesting approach is taken by BlindBox [25]:
unlike PRI, BlindBox performs the deep-packet inspection
directly on the encrypted trafﬁc. In a nutshell, in BlindBox,
the endpoint generates a tokenized version of the trafﬁc
which can be inspected in privacy preserving manner at a
special server. This tokenized trafﬁc is sent in parallel to the
origin, increasing the load in the network. However, BlindBox
requires the user to compute hashes of trafﬁc segments and
to send them to the inspection box, thereby introducing
computational overhead to the user PC, as well as trafﬁc
overhead to the network. Moreover it is dependent on the
cooperation of the user PC to perform its part of the scheme.
In addition, BlindBox only supports exact match rules and
not regular expressions, that are commonly used in security
policies.
We believe that our approach nicely complements these
works, and focuses on a relevant use case, namely trafﬁc
inspection. An SGX approach as recently suggested in the
context of cloud computing, could be used to implement
our secure server, and the decoupling of the various roles
identiﬁed in our paper.
Table II summarizes the advantages and disadvantages of
the different architectures: the man-in-the-middle proxy and
the client-side distributed ﬁrewalls used today, as well as
BlindBox and PRI. Among these solutions, only BlindBox
and PRI are providing the required privacy guarantees. The
main limitation of BlindBox is arguably its expressive power,
while the main limitation of PRI is its dependency on a SGX
hardware (although a single box is sufﬁcient).
VII. CONCLUSION
This paper studied the classic problem of trafﬁc inspection
from an interesting new, privacy preserving perspective. In
particular, while today it is commonly believed that it is
inevitable that users have to blindly trust the administrator
managing the intrusion detection or prevention system, we
in this paper, have questioned this assumption. In particular,
we have shown that it actually is possible to reduce trust
assumptions in the enterprise network, and presented an in-
trusion detection system which is not only privacy preserving
regarding the user trafﬁc but also regarding the rules used in
the IDS/IPS. Interestingly, the proposed PRI system requires
a single secured server; no modiﬁcations of the hardware at
the users is required.
In summary,
the PRI system features the following
properties:
1) It decrypts and inspects network trafﬁc in a privacy
preserving manner.
2) It accepts new security rules from administrators and
applies them to the trafﬁc in a secure and privacy-
preserving manner: the inspecting device does not leak
any unnecessary information about the user trafﬁc.
3) It can be conﬁgured with new rules from rule providers
in a secure and privacy-preserving manner: the inspect-
ing device does not leak any unnecessary information
about the user trafﬁc.
We believe that the ideas underlying PRI can be used in
several contexts and beyond the use cases discussed in this
paper. In particular, it is not limited to rule-based intrusion
detection systems, but can also be useful in the context of
more sophisticated and ofﬂine systems, as they may for
example be required to handle advanced insider threats [2],
[6], [7].
Our approach raises several interesting questions for future
research. Obviously, the performance of our architecture
needs to be evaluated in detail. Moreover, it will be interesting
to explore further the applications of trusted execution
environments in the context of computer networking and
network function virtualization.
We have started implementing a simple test version of
the PRI intrusion detection/prevention system. Due to the
delayed introduction of SGX hardware, the code is still very
simple and contains untrusted parts.
REFERENCES
[1] H. Abelson, R. Anderson, S. M. Bellovin, J. Benaloh, M. Blaze,
W. W. Difﬁe, J. Gilmore, M. Green, S. Landau, P. G. Neumann,
R. L. Rivest, J. I. Schiller, B. Schneier, M. A. Specter, and D. J.
Weitzner. Keys under doormats. Commun. ACM, 58(10):24–26,
Sept. 2015.
[2] R. Barrios. A multi-leveled approach to intrusion detection
and the insider threat. Scientiﬁc Research Publishing, 2013.
[3] A. Baumann, M. Peinado, and G. Hunt. Shielding applications
from an untrusted cloud with haven. ACM Trans. Comput.
Syst., 33(3), Aug. 2015.
[4] M. Belshe, R. Peon, and M. Thomson. Hypertext transfer
protocol version 2 (http/2). RFC 7540, RFC Editor, May 2015.
http://www.rfc-editor.org/rfc/rfc7540.txt.
[5] O. Brdiczka, J. Liu, B. Price, J. Shen, A. Patil, R. Chow,
E. Bart, and N. Ducheneaut. Proactive insider threat detection
through graph learning and psychological context. In Security
and Privacy Workshops (SPW), 2012 IEEE Symposium on,
pages 142–149, May 2012.
[6] D. Cappelli, A. Moore, R. Trzeciak, and T. Shimeall. Common
sense guide to prevention and detection of insider threat. CERT
Insider Threat Study Team, Carnegie Mellon University, 2008.
[7] N. Einwechter. Preventing and detecting insider attacks using
ids. SecurityFocus, March, 2002.
[8] F. McKeen. Innovative instructions and software model for
isolated execution. In Proc. HASP, 2013.
[9] S. Garg, C. Gentry, S. Halevi, M. Raykova, A. Sahai, and
B. Waters. Candidate indistinguishability obfuscation and
In Proc. IEEE 54th
functional encryption for all circuits.
Annual Symposium on Foundations of Computer Science
(FOCS), pages 40–49, 2013.
[10] B. Gellman and A. Soltani. Nsa inﬁltrates links to yahoo,
google data centers worldwide, snowden documents say. In
The Washington Post, 2013.
[11] C. Gentry. Fully homomorphic encryption using ideal lattices.
In Proc. 41st Annual ACM Symposium on Theory of Computing
(STOC), pages 169–178, 2009.
[12] C. Gentry, S. Halevi, and N. P. Smart. Homomorphic
evaluation of the AES circuit. In Proc. 32nd Annual Cryptology
Conference Advances in Cryptology (CRYPTO), pages 850–
867, 2012.
[13] S. Goldwasser, Y. Kalai, R. A. Popa, V. Vaikuntanathan, and
N. Zeldovich. Reusable garbled circuits and succinct functional
encryption. In Proc. 45th Annual ACM Symposium on Theory
of Computing (STOC), pages 555–564, 2013.
[14] L. S. Huang, A. Rice, E. Ellingsen, and C. Jackson. Analyzing
forged ssl certiﬁcates in the wild. In Proc. IEEE Symposium
on Security and Privacy (SP), pages 83–97, 2014.
[15] I. Anati et al. Innovative technology for cpu based attestation
and sealing. In Proc. HASP, 2013.
[16] S. Inc. Detecting insider threats: How splunk software is used
to safeguard ﬁnancial data, 2014.
[17] M. Hoekstra et al. Using innovative instructions to create
trustworthy software solutions. In Proc. HASP, 2013.
[18] A. Machanavajjhala, D. Kifer, J. Gehrke, and M. Venkitasub-
ramaniam. L-diversity: Privacy beyond k-anonymity. ACM
Trans. Knowl. Discov. Data, 1(1), Mar. 2007.
[19] F. D. McSherry. Privacy integrated queries: An extensible
platform for privacy-preserving data analysis. In Proc. ACM
SIGMOD International Conference on Management of Data
(SIGMOD), pages 19–30, 2009.
[20] A. Meyerson and R. Williams. On the complexity of optimal
k-anonymity. In Proc. 23rd ACM SIGMOD-SIGACT-SIGART
Symposium on Principles of Database Systems (PODS), pages
223–228, 2004.
[21] V. Paxson. Bro: A system for detecting network intruders in
real-time. Comput. Netw., 31(23-24), Dec. 1999.
[22] A. Rao, J. Sherry, A. Legout, A. Krishnamurthy, W. Dabbous,
and D. Choffnes. Meddle: Middleboxes for increased trans-
parency and control of mobile trafﬁc. In Proc. ACM CoNEXT,
pages 65–66, 2012.
[23] Runa. Security vulnerability found in cyberoam dpi devices
(cve-2012-3372). In Tor Project Blog, 2012.
[24] J. Sherry, S. Hasan, C. Scott, A. Krishnamurthy, S. Ratnasamy,
and V. Sekar. Making middleboxes someone else’s problem:
In Proc. ACM
Network processing as a cloud service.
SIGCOMM, pages 13–24, 2012.
[25] J. Sherry, C. Lan, R. A. Popa, and S. Ratnasamy. Blindbox:
Deep packet inspection over encrypted trafﬁc. In Proc. ACM
SIGCOMM, pages 213–226, 2015.
[26] G. Silowash, T. Lewellen, J. Burns, and D. Costa. Detecting
and preventing data exﬁltration through encrypted web sessions
via trafﬁc inspection. Technical Report CMU/SEI-2013-
TN-012, Software Engineering Institute, Carnegie Mellon
University, Pittsburgh, PA, 2013.
[27] Snort. website. https://www.snort.org/, 2016.
[28] Suricata. website. http://suricata-ids.org/, 2016.
[29] N. Vallina-Rodriguez, S. Sundaresan, C. Kreibich, N. Weaver,
and V. Paxson. Beyond the radio: Illuminating the higher
layers of mobile networks. In Proc. ACM MobiSys, pages
375–387, 2015.
[30] S. Website. https://www.sans.org/reading-room/whitepapers/
authentication/ssl-tls-whats-hood-34297. 2016.
[31] K. Zetter. The feds cut a deal with in-ﬂight wi-ﬁ providers,
and privacy groups are worried. In Wired Magazine, 2014.