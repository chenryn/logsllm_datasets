that this leakage is caused by interactions through the address bus.
Listing 6 shows the first leaky segment of the code corresponding to
samples (700, 440) in Figure 7e. We confirmed this leakage through
correlation based testing against actual share values and their com-
binations. The registers used for addressing in the ldrb instruction
at Line 4 carry one share each. Our investigation showed that sam-
ple 440 originates from this point. Additionally, the missing share
is provided by the instruction that corresponds to sample 700. Both
points show high correlation to the share values. Therefore, this
leakage becomes observable as second-order leakage. We confirmed
this leakage pattern by reproducing the same effect in a separate
fixed vs. random experiment which has only two shares that is used
in an ldrb instruction for addresses. It showed significant first
order leakage at 200,000 traces.
Because our tooling does not detect address leakage, this code
cannot be currently corrected. Moreover, we suspect that that the
leakage might be present here due to the used threshold implemen-
tation algorithm and therefore, solving it is out of the scope of this
work.
4.6 Tools for Leakage Analysis
We now present the performance of our second-order analysis tools.
We run the tools on a desktop computer, featuring an Intel Core
i9-10900K CPU and 32 GB of memory. We spawn 10 threads and
 0 2 4 6 8 0 100k200k300k400k500kLeakage pointsTrace countsTotal discoveredRemaining aer Ô¨Åxes 0 50 100 150 200 0 100k200k300k400k500kLeakage pointsTrace countsTotal discoveredRemaining aer Ô¨Åxes 0 1 2 3 4 5 0 100k200k300k400k500kLeakage pointsTrace countsTotal discoveredRemaining aer Ô¨ÅxesSession 3A: Side Channel CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea696(a) Xoodoo: before applying code fixes,
ùë°-value peak: 70.32
(b) Present: before applying code fixes,
ùë°-value peak: 55.13
(c) B-to-A: before applying code fixes, ùë°-
value peak: 9.13
(d) Xoodoo: after applying code fixes, ùë°-
value peak: 6.44
(e) Present: after applying code fixes,
ùë°-value peak: 12.38
(f) B-to-A: after applying code fixes, ùë°-
value peak: 3.91
Figure 7: Evaluation of three cryptographic primitives (B-to-A stands for Bollean to arithmetic)
perform bivariate analysis of four cryptographic implementations.
For each implementation we use our measurement setup to collect
2M traces from the real experiments, which we analyse to draw
the heatmaps shown in Figure 7. The results are shown in Table 3.
The number of threads used can be changed to fit the underlying
hardware, the thread count is dependent on the equal sized splits
that are done along the sample axis. It is given by ùëÜ(ùëÜ +1)√∑2 where
ùëÜ is the number of equal sized splits. For our runs, ùëÜ was set at 4.
Without parallelisation the run time will be 8 times slower if run
in a single thread as 4 out of 10 of the threads do half of the work.
5 CONCLUSIONS
Since the introduction of side-channel attacks, implementation
security of embedded devices has been under the immense scrutiny
and constant threat of being exploited. Even with theoretically
sound measures such as masking, the devices tend to exhibit some
leakages in practice due to unintended interactions in hardware.
Mostly manual evaluation involving a tedious decision process
and applying fixes to such ‚Äúleaky‚Äù implementations have since
been adopted. Some automatic countermeasures have also been
developed, but all of them target univariate leakage.
In this work, we set out to automate the detection and application
of fixes for high order secured implementations through multivari-
ate analysis. We have demonstrated that it is possible to fix almost
all detected leakage for three second-order masked implementa-
tions using our root cause analysis. Furthermore, we have shown
practically that our methodology also is applicable for the third
order analysis. It is a significant improvement over previous auto-
matic countermeasure application methods due to its simplicity.
ACKNOWLEDGEMENTS
We thank the anonymous reviewers for their insightful comments
and recommendations.
This work was supported by ARC Discovery Early Career Re-
searcher Award number DE200101577; ARC Discovery Projects
numbers DP200102364 and DP210102670; the Blavatnik ICRC at Tel-
Aviv University; European Commission through the ERC Starting
Grant 805031 (EPOQUE) of Peter Schwabe; and gifts from Facebook,
Google and Intel.
Parts of this work were carried out while Yuval Yarom was
affiliated with CSIRO‚Äôs Data61.
REFERENCES
[1] Jean-Philippe Aumasson, L. Henzen, W. Meier, and R. Phan. 2009. SHA-3 proposal
BLAKE.
[2] Aydin Aysu, Youssef Tobah, Mohit Tiwari, Andreas Gerstlauer, and Michael
Orshansky. 2018. Horizontal side-channel vulnerabilities of post-quantum key
exchange protocols. In HOST. 81‚Äì88.
[3] Josep Balasch, Benedikt Gierlichs, Vincent Grosso, Oscar Reparaz, and Fran√ßois-
Xavier Standaert. 2015. On the Cost of Lazy Engineering for Masked Software
Implementations. In CARDIS. 64‚Äì81.
 0 100 200 300 400 500 600 700 800 900 1000Sample Number 0 100 200 300 400 500 600 700 800 900 1000Sample Number 0 1 2 3 4 5 6 7 8 9t-test value 0 200 400 600 800 1000 1200 1400Sample Number 0 200 400 600 800 1000 1200 1400Sample Number 0 1 2 3 4 5 6 7 8 9t-test value 0 100 200 300 400 500 600 700 800 900 1000Sample Number 0 100 200 300 400 500 600 700 800 900 1000Sample Number 0 1 2 3 4 5 6 7 8 9t-test value 0 200 400 600 800 1000 1200 1400Sample Number 0 200 400 600 800 1000 1200 1400Sample Number 0 1 2 3 4 5 6 7 8 9t-test value 0 500 1000 1500 2000 2500 3000 3500Sample Number 0 500 1000 1500 2000 2500 3000 3500Sample Number 0 1 2 3 4 5 6 7 8 9t-test value 0 200 400 600 800 1000 1200Sample Number 0 200 400 600 800 1000 1200Sample Number 0 1 2 3 4 5 6 7 8 9t-test valueSession 3A: Side Channel CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea697[4] Lejla Batina, Shivam Bhasin, Dirmanto Jap, and Stjepan Picek. 2019. CSI NN:
Reverse Engineering of Neural Network Architectures Through Electromagnetic
Side Channel. In USENIX Security Symposium. 515‚Äì532.
[5] Daniel Bernstein. 2008. ChaCha, a variant of Salsa20.
[6] Daniel J Bernstein. 2005. Cache-timing attacks on AES. https://cr.yp.to/
antiforgery/cachetiming-20050414.pdf.
[7] Guido Bertoni, Joan Daemen, Seth Hoffert, Micha√´l Peeters, Gilles Van Assche,
and Ronny Van Keer. [n. d.]. The eXtended Keccak Code Package (XKCP). https:
//github.com/XKCP/XKCP
[8] Guido Bertoni, Vittorio Zaccaria, Luca Breveglieri, Matteo Monchiero, and Gi-
anluca Palermo. 2005. AES Power Attack Based on Induced Cache Miss and
Countermeasure. In ITCC. 586‚Äì591.
[9] Andrey Bogdanov, Lars R. Knudsen, Gregor Leander, Christof Paar, Axel
Poschmann, Matthew J. B. Robshaw, Yannick Seurin, and C. Vikkelsoe. 2007.
PRESENT: An Ultra-Lightweight Block Cipher. In CHES. 450‚Äì466.
[10] Eric Brier, Christophe Clavier, and Francis Olivier. 2004. Correlation Power
Analysis with a Leakage Model. In CHES. 16‚Äì29.
[11] Ileana Buhan, Lejla Batina, Yuval Yarom, and Patrick Schaumont. 2021. SoK:
Design Tools for Side-Channel-Aware Implementations. IACR Cryptol. ePrint
Arch. 2021 (2021), 497.
[12] Tony F. Chan, Gene H. Golub, and Randall J. Leveque. 1983. Algorithms for
Computing the Sample Variance: Analysis and Recommendations. The American
Statistician 37, 3 (1983), 242‚Äì247. https://doi.org/10.1080/00031305.1983.10483115
arXiv:https://www.tandfonline.com/doi/pdf/10.1080/00031305.1983.10483115
[13] Suresh Chari, Charanjit S. Jutla, Josyula R. Rao, and Pankaj Rohatgi. 1999. Towards
Sound Approaches to Counteract Power-Analysis Attacks. In CRYPTO. 398‚Äì412.
[14] Zhimin Chen, Syed Haider, and Patrick Schaumont. 2009. Side-Channel Leakage
in Masked Circuits Caused by Higher-Order Circuit Effects. In ISA. 327‚Äì336.
[15] Zhimin Chen and Yujie Zhou. 2006. Dual-Rail Random Switching Logic: A
Countermeasure to Reduce Side Channel Leakage. In CHES. 242‚Äì254.
[16] Thomas De Cnudde, Beg√ºl Bilgin, Oscar Reparaz, Ventzislav Nikov, and Svetla
Nikova. 2015. Higher-Order Threshold Implementation of the AES S-Box. In
CARDIS. 259‚Äì272.
[17] Thomas De Cnudde, Oscar Reparaz, Beg√ºl Bilgin, Svetla Nikova, Ventzislav
Nikov, and Vincent Rijmen. 2016. Masking AES With d+1 Shares in Hardware.
In TIS@CCS. 43.
[18] Yann Le Corre, Johann Gro√üsch√§dl, and Daniel Dinu. 2018. Micro-architectural
Power Simulator for Leakage Assessment of Cryptographic Software on ARM
Cortex-M3 Processors. In COSADE (Lecture Notes in Computer Science, Vol. 10815).
Springer, 82‚Äì98.
[19] Joan Daemen, Seth Hoffert, Gilles Van Assche, and Ronny Van Keer. 2018. The
design of Xoodoo and Xoofff. IACR Trans. Symmetric Cryptol. 2018, 4 (2018),
1‚Äì38.
[20] Joan Daemen, Seth Hoffert, Gilles Van Assche, and Ronny Van Keer. 2018. Xoodoo
cookbook. IACR Cryptol. ePrint Arch. 2018 (2018), 767.
[21] Jerry den Hartog, Jan Verschuren, Erik P. de Vink, Jaap de Vos, and W. Wiersma.
2003. PINPAS: A Tool for Power Analysis of Smartcards. In IFIP SEC. 453‚Äì457.
[22] A. Adam Ding, Liwei Zhang, Fran√ßois Durvaux, Fran√ßois-Xavier Standaert, and
Yunsi Fei. 2017. Towards Sound and Optimal Leakage Detection Procedure. In
CARDIS. 105‚Äì122.
[23] Niels Ferguson, Stefan Lucks, Bruce Schneier, Doug Whiting, Mihir Bellare,
Tadayoshi Kohno, Jon Callas, and Jesse Walker. 2010. The Skein Hash Function
Family. https://www.schneier.com/academic/skein/
[24] Karine Gandolfi, Christophe Mourtel, and Francis Olivier. 2001. Electromagnetic
Analysis: Concrete Results. In CHES. 251‚Äì261.
[25] Si Gao, Ben Marshall, Dan Page, and Elisabeth Oswald. 2020. Share-slicing: Friend
or Foe? IACR Trans. Cryptogr. Hardw. Embed. Syst. 2020, 1 (2020), 152‚Äì174.
[26] Si Gao, Ben Marshall, Dan Page, and Thinh Hung Pham. 2020. FENL: an ISE
to mitigate analogue micro-architectural leakage. IACR Trans. Cryptogr. Hardw.
Embed. Syst. 2020, 2 (2020), 73‚Äì98.
[27] Qian Ge, Yuval Yarom, David Cock, and Gernot Heiser. 2018. A survey of mi-
croarchitectural timing attacks and countermeasures on contemporary hardware.
J. Cryptogr. Eng. 8, 1 (2018), 1‚Äì27.
[28] Daniel Genkin, Lev Pachmanov, Itamar Pipman, Eran Tromer, and Yuval Yarom.
2016. ECDSA Key Extraction from Mobile Devices via Nonintrusive Physical
Side Channels. In CCS. 1626‚Äì1638.
[29] Daniel Genkin, Adi Shamir, and Eran Tromer. 2014. RSA Key Extraction via
Low-Bandwidth Acoustic Cryptanalysis. In CRYPTO (1). 444‚Äì461.
[30] Barbara Gigerl, Vedad Hadzic, Robert Primas, Stefan Mangard, and Roderick
Bloem. 2020. Coco: Co-Design and Co-Verification of Masked Software Imple-
mentations on CPUs. , 1294 pages.
[31] Gilbert Goodwill, Benjamin Jun, Josh Jaffe, and Pankaj Rohatgi. 2011. A Testing
Methodology for Side-Channel Resistance Validation. (2011).
[32] Louis Goubin. 2001. A Sound Method for Switching between Boolean and
Arithmetic Masking. In CHES. 3‚Äì15.
[33] Michael Hutter and Michael Tunstall. 2019. Constant-time higher-order Boolean-
to-arithmetic masking. Journal of Cryptographic Engineering 9 (06 2019). https:
//doi.org/10.1007/s13389-018-0191-z
[34] International Organization for Standardization. 2016. Testing methods for the
mitigation of non-invasive attack classes against cryptographic modules. Inter-
national Standard ISO/IEC 17825:2016(E).
[35] Yuval Ishai, Amit Sahai, and David A. Wagner. 2003. Private Circuits: Securing
Hardware against Probing Attacks. In CRYPTO. 463‚Äì481.
[36] Paul C. Kocher. 1996. Timing Attacks on Implementations of Diffie-Hellman,
RSA, DSS, and Other Systems. In CRYPTO. 104‚Äì113.
[37] Paul C. Kocher, Joshua Jaffe, and Benjamin Jun. 1999. Differential Power Analysis.
In CRYPTO. 388‚Äì397.
[38] Juliane Kr√§mer, Dmitry Nedospasov, Alexander Schl√∂sser, and Jean-Pierre Seifert.
2013. Differential Photonic Emission Analysis. In COSADE. 1‚Äì16.
[39] Xuejia Lai and James L. Massey. 1991. A Proposal for a New Block Encryption
Standard. In Eurocrypt. 389‚Äì404.
[40] Xiaoxuan Lou, Tianwei Zhang, Jun Jiang, and Yinqian Zhang. 2021. A Sur-
vey of Microarchitectural Side-channel Vulnerabilities, Attacks and Defenses in
Cryptography. CoRR abs/2103.14244 (2021).
[41] Stefan Mangard, Thomas Popp, and Berndt M. Gammel. 2005. Side-Channel
Leakage of Masked CMOS Gates. In CT-RSA. 351‚Äì365.
[42] David McCann, Elisabeth Oswald, and Carolyn Whitnall. 2017. Towards Practical
Tools for Side Channel Aware Software Engineering: ‚ÄôGrey Box‚Äô Modelling for
Instruction Leakages. In USENIX Security Symposium. 199‚Äì216.
[43] Thomas S. Messerges. 2000. Power Analysis Attacks and Countermeasures for
Cryptographic Algorithms. Ph. D. Dissertation. University of Illinois at Chicago,
USA.
[44] Thomas S. Messerges, Ezzy A. Dabbish, and Robert H. Sloan. 1999. Power Analysis
Attacks of Modular Exponentiation in Smartcards. In CHES. 144‚Äì157.
[45] Amir Moradi and Oliver Mischke. 2013. Comprehensive Evaluation of AES Dual
Ciphers as a Side-Channel Countermeasure. In ICICS. 245‚Äì258.
[46] Amir Moradi, Oliver Mischke, and Christof Paar. 2013. One Attack to Rule Them
All: Collision Timing Attack versus 42 AES ASIC Cores. IEEE Trans. Computers
62, 9 (2013), 1786‚Äì1798.
[47] National Institute of Standards and Technology. 2015. Security Requirements
for Cryptographic Modules. Technical Report Federal Information Processing
Standards Publications (FIPS PUBS) FIPS 180-4. U.S. Department of Commerce,
Washington, D.C. https://doi.org/10.6028/NIST.FIPS.180-4
[48] Svetla Nikova, Christian Rechberger, and Vincent Rijmen. 2006. Threshold
Implementations Against Side-Channel Attacks and Glitches. In ICICS. 529‚Äì545.
[49] Kostas Papagiannopoulos and Nikita Veshchikov. 2017. Mind the Gap: Towards
Secure 1st-Order Masking in Software. In COSADE. 282‚Äì297.
[50] Scott Pardo. 2013. Equivalence and Noninferiority Tests for Quality, Manufacturing
and Test Engineers (1 ed.). CRC Press LLC, Philadelphia, PA.
[51] Emmanuel Prouff, Matthieu Rivain, and R√©gis Bevan. 2009. Statistical Analysis
of Second Order Differential Power Analysis. IEEE Trans. Computers 58, 6 (2009),
799‚Äì811.
[52] Jean-Jacques Quisquater and David Samyde. 2001. ElectroMagnetic Analysis
(EMA): Measures and Counter-Measures for Smart Cards. In E-smart. 200‚Äì210.
[53] Mathieu Renauld, Fran√ßois-Xavier Standaert, Nicolas Veyrat-Charvillon, Dina
Kamel, and Denis Flandre. 2011. A Formal Study of Power Variability Issues and
Side-Channel Attacks for Nanoscale Devices. In EUROCRYPT. 109‚Äì128.
[54] Oscar Reparaz. 2016. Detecting Flawed Masking Schemes with Leakage Detection
Tests. In FSE. 204‚Äì222.
[55] Ronald L. Rivest, M. J. B. Robshaw, R. Sidney, and Y. L. Yin. 1998. The RC6 Block
Cipher. In in First Advanced Encryption Standard (AES) Conference. 16.
[56] Pascal Sasdrich, Ren√© Bock, and Amir Moradi. 2018. Threshold Implementation
in Software - Case Study of PRESENT. In COSADE. 227‚Äì244.
[57] Tobias Schneider and Amir Moradi. 2015. Leakage Assessment Methodology - A
Clear Roadmap for Side-Channel Evaluations. In CHES. 495‚Äì513.
[58] Donald J Schuirmann. 1987. A comparison of the two one-sided tests procedure
and the power approach for assessing the equivalence of average bioavailability.
Journal of pharmacokinetics and biopharmaceutics 15, 6 (1987), 657‚Äì680.
[59] Nader Sehatbakhsh, Baki Berkay Yilmaz, Alenka G. Zajic, and Milos Prvulovic.
2020. EMSim: A Microarchitecture-Level Simulation Tool for Modeling Electro-
magnetic Side-Channel Signals. In HPCA. 71‚Äì85.
[60] Aria Shahverdi, Mahammad Shirinov, and Dana Dachman-Soled. 2020. Database
Reconstruction from Noisy Volumes: A Cache Side-Channel Attack on SQLite.
CoRR abs/2006.15007 (2020).
[61] Madura A. Shelton, Niels Samwel, Lejla Batina, Francesco Regazzoni, Markus
Wagner, and Yuval Yarom. 2021. Rosita: Towards Automatic Elimination of
Power-Analysis Leakage in Ciphers. In NDSS.
[62] Anatoly Shusterman, Lachlan Kang, Yarden Haskal, Yosef Meltser, Prateek Mittal,
Yossi Oren, and Yuval Yarom. 2019. Robust Website Fingerprinting Through the
Cache Occupancy Channel. In USENIX Security Symposium. 639‚Äì656.
[63] Steven W. Smith. 1997. The Scientist and Engineer‚Äôs Guide to Digital Signal
Processing. California Technical Publishing, USA.
[64] Fran√ßois-Xavier Standaert. 2018. How (Not) to Use Welch‚Äôs T-Test in Side-Channel
Security Evaluations. In CARDIS. 65‚Äì79.
[65] Nikita Veshchikov. 2014. SILK: high level of abstraction leakage simulator for
side channel analysis. In PPREW@ACSAC. 3:1‚Äì3:11.
Session 3A: Side Channel CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea698[66] Bernard L Welch. 1947. The generalization of student‚Äôs‚Äô problem when several
different population variances are involved. Biometrika 34, 1/2 (1947), 28‚Äì35.
[67] Mengjia Yan, Christopher W. Fletcher, and Josep Torrellas. 2020. Cache Telepathy:
Leveraging Shared Resource Attacks to Learn DNN Architectures. In USENIX
Security Symposium. 2003‚Äì2020.
[68] Wentao Zhang, Zhenzhen Bao, Dongdai Lin, Vincent Rijmen, Bohan Yang, and
Ingrid Verbauwhede. 2015. RECTANGLE: a bit-slice lightweight block cipher
suitable for multiple platforms. Sci. China Inf. Sci. 58, 12 (2015), 1‚Äì15.
Session 3A: Side Channel CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea699