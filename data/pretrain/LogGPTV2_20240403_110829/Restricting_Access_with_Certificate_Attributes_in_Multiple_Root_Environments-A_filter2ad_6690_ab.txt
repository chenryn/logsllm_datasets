### SDN and Search Parameters
- **SDN:** OU, O
- **Search:** e, uid
- **CAName:** CN=BIMM CA, O=BIMM

- **SDN:** OU, O
- **Search:** e, uid
- **CAName:** CN=SRPC CA, O=SRPC

- **SDN:** OU, O
- **Search:** e
- **CAName:** CN=PPC CA, O=PPC

### 7. Test of the BIMM Certificate Mapping
Mallory knows that the web application has several options restricted to PPC users. Therefore, Mallory targets the vice president of research and development (R&D) at PPC. He creates a certificate that mimics the R&D vice president's certificate and retrieves the requested information for SRPC management. How was Mallory able to achieve this?

Victor’s CA product does not support cross-certification. Without the ability to cross-certify with PPC or SRPC CAs, Mallory realizes he can create a subordinate CA that appears like PPC’s CA. With this look-alike PPC CA, Mallory decides to create a certificate for PPC’s R&D vice president. Mallory has a copy of the authentic certificate and copies its attributes into the fraudulent one. The only difference is in the attributes.

### 8. Trent’s Analysis of Mallory’s Attack
Several months later, PPC notices that SRPC has launched a new product line similar to PPC’s prototypes. BIMM initially suspects Bob of leaking sensitive information, as the web application log files show he accessed the system from suspicious locations. Unfortunately, Victor’s log files, which are similar to the Common Logfile Format, only collect IP addresses and usernames, not certificate information. Trent is sent to BIMm Corporation to investigate. After meeting with Victor, Trent explains how Mallory may have compromised the security measures.

The main issues identified by Trent are:
1. The path validation module checks if the client certificate chains to a trusted root, but none of the root CAs impose constraints on the names in their certificate paths.
2. The certificate mapping used by the web application relies on unrestricted values in the attributes of the SDN of client certificates.
3. Although the web application attempts to bind user accounts to certificates, its design is similar to binding attribute certificates, where authentication depends on loosely coupled attributes.

Trent informs Victor that, due to the lack of cross-certification between Victor’s CA and PPC or SRPC, both could imitate each other because of the absence of name constraints. Trent demonstrates this by creating a fake subordinate SRPC CA.

### 9. Possible Solutions
To solve the problem, Trent and Victor agree that they need to bind certificates using a restricted naming convention for any given CA. There are three possible solutions: cross-certification, attribute certificates, or name constraints and other policies applied by the web application or policy engine.

#### 9.1 Cross-certification and Name Constraints
Cross-certification involves a CA issuing a cross-certificate to another CA. This cross-certificate contains the public key of a CA, associated with the private key for that CA. The purpose is to allow users in one domain to communicate securely in another. For example, BIMM could issue a cross-certificate to PPC, allowing Bob’s certificate validation path to end with the BIMM CA certificate instead of the PPC CA certificate.

The X.509 name constraint model allows a certification authority to specify, when it certifies another CA, exactly what names are allowed in subsequent certificates in the certification path. Name constraints can be applied to various attributes such as URIs, email addresses, DNS names, directory names, and IP addresses.

Victor believes that cross-certification and name constraints are a potential technical solution, but not viable in his case due to complexity and cost. Establishing trust relationships between CAs involves legal documents, risk assessments, and management costs, making it expensive and not widely interoperable between domains.

#### 9.2 Binding Identity Certificates to Attribute Certificates
Victor considered using attribute certificates, but the cost and the need to manage another authority made it impractical. A tight binding between the attribute certificate and the identity certificate would also be required, such as a hash of the public key or certificate. To make this work, Victor would need to collect certificates, which was not an acceptable solution. Instead, he decided to use the Internet mail address, organizational unit, and organization attributes to bind a certificate to a user account. He believed he could constrain these attributes using the name constraint concepts in [5]. He avoided using userids to maintain uniqueness across CAs.

#### 9.3 Application Enforced Name Constraints and Policies – A Moderate Coupling
Victor modified his web application to enforce its own form of name constraints and path length constraints for each CA. He wanted to keep the solution simple while preventing client masquerading within the scope of a CA’s own validation paths. If a given CA had concerns about intra-organizational masquerading, it could apply its own name constraint in accordance with [5]. Victor applied permittedSubtrees to organizational CAs and commercial CAs in the web application, using the Internet mail address and directoryName. He constructed a constraint table as follows:

| Root CA | Permitted Subtrees | Permitted Directory Name Subtrees |
|---------|---------------------|------------------------------------|
| PPC CA  | ppc.com             | O=PPC                             |
| SRPC CA | srpc.com            | O=SRPC                            |
| Ultra Trust Commercial CA Inc. | bigcars.com, walker@free-email.com | O=Big Cars, O=Walker Inc.         |

The application name constraint policy states that each organizational CA can only have its organization name in certificates. Ultra Trust CA can have a limited set of organizational names. Victor could have used excludedSubtrees for Ultra Trust so that PPC and SRPC do not appear in certificates, but any other name could. Additionally, Internet mail addresses are limited to respective domains, hosts, or specific mailboxes.

Victor also included the ability to apply path length constraints to limit chain lengths for CAs where subordinate CAs are not needed. For root level CAs, restrictions on names were the primary concern.

### 10. Conclusion
Many organizations are considering using certificates as authorization objects. In environments with multiple CAs, careful consideration should be given to how each CA should be trusted. If the trust is for a limited purpose, the application should enforce those limitations. Traditional path validation may not resolve all issues, so additional restrictions may be necessary. These must be weighed against the risk, as adding external policies increases cost and overhead. It may be determined that the risk is cheaper than the solution.

### References
[1] Arsenault, A., Turner, S., Internet X.509 Public Key Infrastructure, draft-ietf-pkix-roadmap-06.txt, Internet Society, November 2000.
[2] Ford, W., Baum, M.S., Secure Electronic Commerce, Prentice Hall PTR, Upper Saddle River, N.J., 1997.
[3] Financial losses due to Internet intrusions, trade secret theft, and other cyber crimes soar, http://www.gocsi.com/preleas_000321.htm, Computer Security Institute, March 12, 2001.
[4] Hayes, J.M., The Problem with Multiple Roots in Web Browsers – Certificate Masquerading. In IEEE Computer Society Proceedings of WETICE 1998, 17-19 June 1998 at Palo Alto, California.
[5] Housley, R., Ford, W., Polk, T., Solo, D., Internet X.509 Public Key Infrastructure Certificate and CRL Profile, RFC2459, Internet Society, January 1999.
[6] Housley, R., Polk, T., Planning for PKI, John Wiley & Sons, Inc., New York, 2001.
[7] Larson, E., Stephens, B., Web Servers, Security, & Maintenance, Prentice Hall PTR, Upper Saddle River, N.J., 2000.
[8] Park, J.S., Sandhu, R., Binding Identities and Attributes Using Digitally Signed Certificates. In IEEE Computer Society Proceedings of Computer Security Applications Conference, 11-15 December 2000 at New Orleans Louisiana.
[9] Prasad, V., Potakamuri, S., Ahern, M., Lerner, M., Balabine, I., Dutta, P., Scalable Policy Driven and General Purpose Public Key Infrastructure (PKI). In IEEE Computer Society Proceedings of Computer Security Applications Conference, 11-15 December 2000 at New Orleans Louisiana.