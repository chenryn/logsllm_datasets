5 Conclusion
In this work, we presented a novel method for multi-source anomaly detection
in distributed systems. It uses data from two complementary different modal-
ities describing the behaviour of the distributed system - logs and traces. We
utilize the next template prediction (NTP) task as a pseudo task for anomaly
detection. It is based on the assumption that the relevant information from the
program execution workflow can be preserved into one vector. Then it uses the
correspondingvectortopredictthemostrelevanttemplate toappear.Todetect
theanomaly,apost-processingstepthatactsonthepredictionsoftheNTPtask
is used.
The results show that the multimodal approach can improve the scores for
anomalydetectionformultiplemodalitiesincomparisontothesinglemodalities
oflogsandtraces.Theinformationthatthelogsandtracesarepreservingiscom-
plementary and the model can exploit it. Furthermore, the method can produce
vector representation for both the logs and traces. These vector embeddings are
used as a good bias for transferring and reusing the accumulated knowledge for
faster training and adaptation.
Infuturework,wewouldinvestigatehowaddingadditionalinformationfrom
themetricdatacanbeincorporatedintothemodel.Itwillallowforthecreation
of a unified model of the whole system behaviour, making the further processes
of AIOps life-cycle easier. Additionally, we would investigate transfer learning
approaches based on the generated embeddings. Specifically, we are interested
in investigating how the learned embeddings can be reused for other types of
workloads with a final aim to reduce the deploy time of the machine learning
model in production.
References
1. Du,M.,Li,F.,Zheng,G.,Srikumar,V.:DeepLog.In:Proceedingsofthe2017ACM
SIGSAC Conference on Computer and Communications Security. Association for
Computing Machinery, New York, NY, United States, pp. 1285–1298 (2017)
2. He,P.,Zhu,J.,He,S.,Li,J.,Lyu,M.R.:Towardsautomatedlogparsingforlarge-
scale log data analysis. IEEE Trans. Dependable Secure Comput. 15, 931–944
(2018)
3. He,P.,Zhu,J.,Zheng,Z.,Lyu,M.:Drain:Anonlinelogparsingapproachwithfixed
depth tree. In: IEEE International Conference on Web Services (ICWS). Curran
Associates, Red Hook, NY, USA, pp. 33–40 (2017)
4. Ikeda,Y.,Ishibashi,K.,Nakano,Y.,Watanabe,K.,Kawahara,R.:Anomalydetec-
tion and interpretation using multimodal autoencoder and sparse optimization.
arXiv preprint arXiv:1812.07136 (2018)
5. Lou, J.G., Fu, Q., Yang, S., Xu, Y., Li, J.: Mining invariants from console logs
forsystemproblemdetection.In:Proceedingsofthe2010USENIXConferenceon
USENIX Annual Technical Conference. USENIX Association, USA, p. 24 (2010)
6. Meng, W., et al.: Loganomaly: unsupervised detection of sequential and quantita-
tive anomalies in unstructured logs. In: Proceedings of the Twenty-Eighth Inter-
national Joint Conference on Artificial Intelligence, IJCAI-19. International Joint
Conferences on Artificial Intelligence Organization, pp. 4739–4745 (2019)
Multi-source Anomaly Detection in Distributed IT Systems 213
7. Nedelkoski, S., Bogatinovski, J., Acker, A., Cardoso, J., Kao, O.: Self-supervised
log parsing. arXiv preprint arXiv:2003.07905 (2020)
8. Nedelkoski, S., Bogatinovski, J., Mandapati, A.K., Becker, S., Cardoso, J., Kao,
O.: Multi-source distributed system data for AI-powered analytics. In: Brogi, A.,
Zimmermann,W.,Kritikos,K.(eds.)ESOCC2020.LNCS,vol.12054,pp.161–176.
Springer, Cham (2020). https://doi.org/10.1007/978-3-030-44769-4 13
9. Nedelkoski, S., Cardoso, J., Kao, O.: Anomaly detection and classification using
distributed tracing and deep learning. In: 19th IEEE/ACM International Sympo-
siumonCluster.CloudandGridComputing(CCGRID),IEEEComputerSociety,
Los Alamitos, CA, USA, pp. 241–250 (2019)
10. Nedelkoski,S.,Cardoso,J.,Kao,O.:Anomalydetectionfromsystemtracingdata
using multimodal deep learning. In: 2019 IEEE 12th International Conference on
Cloud Computing (CLOUD). IEEE Computer Society, Los Alamitos, CA, USA,
pp. 179–186 (2019)
11. Park,D.,Erickson,Z.,Bhattacharjee,T.,Kemp,C.C.:Multimodalexecutionmon-
itoring for anomaly detection during robot manipulation. In: IEEE International
Conference on Robotics and Automation (ICRA). Curran Associates, Red Hook,
NY, USA, pp. 407–414 (2016)
12. Sridharan, C.: Distributed Systems Observability: A Guide to Building Robust
Systems. O’Reilly Media (2018)
13. Srivastava, N., Salakhutdinov, R.: Multimodal learning with deep boltzmann
machines. J. Mach. Learn. Res. 15, 2949–2980 (2014)
14. Tang, L., Li, T., Perng, C.S.: Logsig: generating system events from raw textual
logs. In: Proceedings of the 20th ACM International Conference on Information
and Knowledge Management. Association for Computing Machinery, New York,
NY, USA, pp. 785–794 (2011)
15. Xu, W., Huang, L., Fox, A., Patterson, D., Jordan, M.I.: Detecting large-scale
system problems by mining console logs. In: Proceedings of the ACM SIGOPS
22nd Symposium on Operating Systems Principles. Association for Computing
Machinery, New York, NY, USA, p. 117–132 (2009)
16. Yang,Y.,Wang,L.,Gu,J.,Li,Y.:Transparentlycapturingrequestexecutionpath
for anomaly detection. arXiv preprint arXiv:2001.07276 (2020)
17. Zhang, Y., Sivasubramaniam, A.: Failure prediction in ibm bluegene/l event logs.
In:SeventhIEEEInternationalConferenceonDataMining(ICDM2007),pp.583–
588 (2007)
18. Zhu,J.,He,S.,Liu,J.,He,P.,Xie,Q.,Zheng,Z.,Lyu,M.R.:Toolsandbenchmarks
for automated log parsing. http://arxiv.org/abs/1811.03509 (2018)
TELESTO: A Graph Neural Network
Model for Anomaly Classification
in Cloud Services
B
Dominik Scheinert( ) and Alexander Acker
Distributed and Operating Systems Group, TU Berlin, Berlin, Germany
{Dominik.Scheinert,Alexander.Acker}@tu-berlin.de
Abstract. Deployment,operationandmaintenanceoflargeITsystems
becomes increasingly complex and puts human experts under extreme
stress when problems occur. Therefore, utilization of machine learning
(ML) and artificial intelligence (AI) is applied on IT system operation
and maintenance - summarized in the term AIOps. One specific direc-
tion aims at the recognition of re-occurring anomaly types to enable
remediation automation. However, due to IT system specific properties,
especially their frequent changes (e.g. software updates, reconfiguration
orhardwaremodernization),recognitionofreoccurringanomalytypesis
challenging. Current methods mainly assume a static dimensionality of
provideddata.Weproposeamethodthatisinvarianttodimensionality
changes of given data. Resource metric data such as CPU utilization,
allocated memory and others are modelled as multivariate time series.
Theextractionoftemporalandspatialfeaturestogetherwiththesubse-
quentanomalyclassificationisrealizedbyutilizingTELESTO,ournovel
graph convolutional neural network (GCNN) architecture. The experi-
mentalevaluationisconductedinareal-wordcloudtestbeddeployment
thatishostingtwoapplications.Classificationresultsofinjectedanoma-
lies on a cassandra database node show that TELESTO outperforms
thealternativeGCNNsandachievesanoverallclassificationaccuracyof
85.1%. Classification results for the other nodes show accuracy values
between 85% and 60%.
· ·
Keywords: Anomaly classification Cloud computing Cloud
· ·
services Time series classification Graph neural network
1 Introduction
TherapidevolutionofITsystemsenablesthedevelopmentofnovelapplications
andservicesinavarietyoffieldslikemedicine,autonomoustransportationorman-
ufacturing.Requirementsofhighavailabilityandminimallatencytogetherwith
generalgrowthindistribution,sizeandcomplexityofthesesystemsaggravatetheir
operationandmaintenance.Humanexpertsrequireadditionalsupporttomain-
taincontrolandensurecompliancewithdefinedservicelevelagreements(SLAs).
D. Scheinert and D. Acker—Equal contribution.
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.214–227,2021.
https://doi.org/10.1007/978-3-030-76352-7_23
TELESTO: A Graph Neural Network Model for Anomaly Classification 215
Therefore, monitoring systems are employed to collect key performance indica-
tors (KPIs) like network latency and throughput or system resource utilization
from relevant IT system components. They provide detailed information about
theoverallsystemstate,whichcanbeusedtoidentifyimminentSLAviolations.
One specific research direction in that area utilizes methods from machine
learning (ML) and artificial intelligence (AI) for operation and maintenance of
IT systems (AIOps) [4,9]. It includes methods for anomaly detection to identify
problemsideallybeforeSLAsareviolated,anomalylocalizationtodeterminethe
origin of an ongoing anomaly, as well as recommendation and auto-remediation
methodstoexecuteactionsandtransferanomaloussystemcomponentsbacktoa
normaloperationstate.Significantresearchworkisdoneonmethodsforanomaly
detection[17,21]androotcauseanalysis[22].However,existingsolutionsmostly
failtoproposeaholisticapproachforanautomatedremediationexecution.Thisis
essentialtoautonomouslytransferanomaloussystemcomponentsbackintoanor-
maloperationstate.Themainreasonisthefocusonunsupervisedmethodsthat
are usually trained on one class - the normal state. During the detection phase
deviationsfromthelearnednormalclassarelabeledasanomalies.Althoughthis
is important to enable the detection of previously unseen anomalies, it imposes
suboptimal implications. A generic anomaly class that summarizes all types of
anomalies either implies actions that are able to remediate all anomaly types or
pushestheresponsibilityforselectinganappropriateremediationtoasubsequent
instance-usuallyahumanexpert.Therefore,weproposeamethodtorecognize
reoccurringanomaliesbytrainingaclassificationmodel.Utilizingsystemmetric
datalikeCPUutilization,allocatedmemoryordiskI/Ostatisticsandmodelthose
asmultivariatetimeseries,ourmodelisabletoidentifyanomalytypespecificpat-
terns and to assign respective anomaly labels to those. Currently proposed time
seriesclassificationmethodsassumeastaticdimensionalityofinputdata,which
isusuallynotthecaseforITsystems,whichundergofrequentchangesduetosoft-
wareupdates,hardwaremodernization,etc.
To enable the automation of anomaly remediation, we propose a novel
anomaly type classification solution, which is utilized to detect reoccurring
anomalytypes.Tothisend,ourproposedmodelarchitectureTELESTOutilizes
a novel graph neural network architecture to exploit multivariate time series
modeled as graphs both in the spatial and temporal dimension. It is invariant
to changing dimensionality and outperforms two other commonly used graph
neural network methods.
The rest of the paper is structured as followed. In Sect.2, we describe the
preliminaries for our approach and present TELESTO in detail. A consolida-
tion of the conducted evaluation is given in Sect.3, encompassing the hyper-
parametrization and training setup, the testbed and experiment design as well
as the results of the anomaly classification and their discussion. An excerpt of
related approaches is presented in Sect.4 capturing the state of the art of time
series classification in the domain of anomalies. Lastly, Sect.5 concludes this
paper and gives an outlook for future work.
216 D. Scheinert and A. Acker
2 Anomaly Classification on Time Series Graphs
Our proposed model architecture operates on graphs and utilizes graph convo-
lution to exploit both the spatial and temporal dimension of KPIs modelled as
multivariate time series.
2.1 Preliminaries
AIOps systems require monitoring data, which is typically retrieved in form of
tracing, logging and resource monitoring metrics. Latter are usually referred
to as key performance indicators (KPIs). These can be formally expressed
as time series, i.e. a temporally ordered sequence of vectors X = (X t(·) ∈
Rd : t = 1,2,...,T), where d is the dimensionality of each vector and T
defines the last time stamp, at which a sample was observed. For Xa(·) =
b
(X a(·),X a+1(·),...,X b(·)),wedenoteindicesaandbwitha≤band0≤a,b≤T
astimeseriesboundariesinordertosliceagivenseriesX0(·)andacquireasub-
T
seriesXa(·).Additionally,weusethenotionX(i)torefertoacertaindimension
b
i, with 1≤i≤d.
Our proposed method for anomaly classification relies on modelling time
series as graphs. A Graph G = (V,E) with n nodes consists of a set of vertices
V(G) = {v 1,...,v n} and a set of edges E(G) ⊆ {{v i,v j}|v i,v j ∈ V(G)}. An
edge {v i,v j} ∈ E(G) is a connection, i.e. an unordered pair, between vertex
i and j, thus v j is called a neighbor of v i written as v i ∼ v j. The adjacency
matrix A of a graph G is an n×n matrix with entries a ij such that a ij =1 if a
connection v i ∼v j exists, otherwise 0.
To represent time series as graphs, a sliding window of size w with a config-
urable stride is moved along the temporal dimension, extracting slices of time
seriesdata.ThisisalsoillustratedinFig.1,wherebyeachredrectangleistrans-
formed into a graph with one node per series. Formally, the set of vertices for a
graph G at time t is defined as
V(t) (G(t) )={v i =F(X tt−w (i))|i=1,2,...,d}. (1)
Thereby, F is a filter, extracting features from time series Xt−w (i). Edges are
t
used to express the relationship between time series feature vectors and can be
either inferred from available data or set manually. We assume that KPIs where
collectedduringknownsystemstates,i.e.eithernormaloroneofasetofknown
anomalytypesC.Therefore,weassignalabelc∈C toeachgraphG(t),defining
them as tuples (G(t),c).
TELESTO: A Graph Neural Network Model for Anomaly Classification 217
Fig.1. A window is moved along the temporal dimension with a configurable stride
while slices of time series data are extracted. Each slice is transformed into a graph.
2.2 The Architecture of TELESTO
Anomaly classification is done based on multivariate time series modelled as
graphs, thus graph classification is required. Therefore, we employ a class of
neural networks which incorporates concepts from graph theory. Graph convo-
lutional neural networks (GCNNs) aim to generalize the convolution operation
to be applied in non Euclidean domains. We utilize this to model the spatial
domain of multivariate time series. Each node of a graph can have an arbitrary
number of neighbors, thus making the method invariant to changing dimension-
ality. The convolution operation is applied on the neighborhood of each graph
node. GCNN methods can be roughly clustered into spectral and spatial meth-
ods.Spectralmethodsareestablishingfrequencyfilteringbyleveringthefourier
domain and the graph Laplacian. Spacial methods are essentially defining the
graph convolution in the vertex domain by leveraging the graph structure and
aggregatingnodeinformationfromtheneighborhoodsinaconvolutionalfashion.
A comprehensive survey of existing methods was conducted in [25].
We propose TELESTO, a novel model architecture for graph classification
consisting of multiple spatial methods. Our architecture is illustrated in Fig.2.
Building upon the definition in Eq.1, F consists of a positional encoding and
a subsequent 1D convolution layer. As argued and evaluated in [19], positional
encoding allows for the injection of information about the relative or absolute
position of values in a sequence. The convolution layer extracts N features from
eachtimeseriesXt−w (i).Therebyaconstantfiltersizeof3isusedtogetherwith
t
a suitable zero-padding to ensure the equivalence of input and output dimen-
sions.Batchnormalizationisappliedonthefeaturestostabilizethetraining[11].
Initially,afullyconnectedgraphisusedresultinginanall-oneadjacencymatrix.
A dropout layer randomly sets adjacency matrix entries to zero in order to
achieve better generalization [18]. The dropout operation is followed by a single
linear layer, which allows the model to adjust the dimensionality of the fea-
ture vector for the graph transformation module, i.e. by mapping from the node
feature dimension to the dimensionality of the graph transformation module.
The graph transformation module is a core component of our approach and
is composed of multiple levels/blocks. On each of its levels, a sublayer (or resid-
ual) connection (SLC) is used. This eases the training of deep neural network
218 D. Scheinert and A. Acker
Fig.2. The architecture of TELESTO. Green components indicate methods for gen-
eralization and red blocks indicate activation functions. An example of a graph trans-
formation module with two blocks is depicted but can be arbitrarily increased. (Color
figure online)
architectures [10]. For the graph transformation operation, topology adap-
tive graph convolutional networks (TAGCN) [5] and graph attention networks