# Pre-Initialization and Security Threats

## Security Vulnerabilities
- **Side-Channels**: Information leakage through unintended channels.
- **Microprobing**: Physical probing of the device to extract data.
- **Injection**: Introducing malicious data or code into the system.
- **Snooping**: Unauthorized access to data during transmission.
- **Timing Attacks**: Exploiting time variations in operations to infer information.
- **Fault Injection**: Inducing faults to reveal sensitive data.
- **Bus Snooping**: Monitoring bus communications for sensitive data.
- **IC Modification**: Altering the integrated circuit to compromise security.
- **Exploit**: Taking advantage of a vulnerability to gain unauthorized access.
- **Malware**: Malicious software designed to cause harm.
- **Token**: A physical or digital device used for authentication.
- **USB**: Universal Serial Bus, a common interface for connecting devices.
- **Firmware**: Software embedded in hardware that controls its operation.

## Attack Vectors
### Tamper-Evident Packaging
- **Holographic Sticker**: A security feature to indicate tampering.
- **Single-Piece Cast**: A single, unbreakable enclosure.
- **Openable Device**: A device that can be opened for inspection.
- **Secure Element (Co-Processor)**: A dedicated processor for secure operations.
- **Secure CPU**: A central processing unit with built-in security features.
- **Local Firmware Attestation**: Verifying the integrity of firmware locally.
- **Remote Firmware Attestation**: Verifying the integrity of firmware remotely.
- **Key Attestation**: Verifying the authenticity of cryptographic keys.
- **Manual Firmware Load**: Manually loading firmware to ensure integrity.
- **Runtime Seed or Key Exfiltration (In-Band)**: Extracting secrets during runtime via the normal communication channel.
- **Delivery-Time Seed or Key Extraction**: Extracting secrets at the time of delivery.
- **Content Access/Attacks**: Gaining unauthorized access to content.
- **Secret Extraction**: Methods to extract confidential information.
- **Hardware and Software**: Components and systems that can be exploited.

## Authentication and Security Measures
- **Tamper-Evident Packaging**: Packaging that shows signs of tampering.
- **Single-Piece Cast**: A single, unbreakable enclosure.
- **Openable Device**: A device that can be opened for inspection.
- **Secure Element (Co-Processor)**: A dedicated processor for secure operations.
- **Secure CPU**: A central processing unit with built-in security features.
- **Local Firmware Attestation**: Verifying the integrity of firmware locally.
- **Remote Firmware Attestation**: Verifying the integrity of firmware remotely.
- **Key Attestation**: Verifying the authenticity of cryptographic keys.
- **Manual Firmware Load**: Manually loading firmware to ensure integrity.
- **Runtime Seed or Key Exfiltration (Out-of-Band)**: Extracting secrets during runtime via an alternative communication channel.
- **Key Fixation**: Ensuring keys are fixed and not modifiable.
- **Predictable RNG Modification**: Altering the random number generator to make it predictable.
- **USB Pivoting**: Using USB to gain unauthorized access.
- **Ransom Attack**: Modifying the token to demand a ransom for continued operation or key release.

## Market Review of Authenticity Checks
### Introduction
To address Research Question 1 (RQ1), we evaluated four different models of the U2F YubiKey and the five most recent hardware wallets from the three most popular vendors at the time of writing [73]. We chose YubiKeys as representatives of FIDO/U2F tokens based on previous research [18, 88] and Yubico’s role as the leading U2F manufacturer (see Section 2.2). To ensure that YubiKeys are representative of attestation and packaging methods used in the U2F token industry, we surveyed other U2F-certified tokens (e.g., Google Titan [35], Thetis BLE/FIDO U2F [105], Feitian ePass FIDO [30]) before the market review. We found that YubiKeys’ methods are the most comprehensive in the industry (see Appendix, Table 6).

### Methodology
To assess which authenticity checks were deployed and if they were usable, we performed a set of cognitive walkthroughs [83]. A cognitive walkthrough is a technique for expert usability inspection of a system and is commonly applied in user-centered security research [28]. Two usable security researchers walked through the actions a user has to perform when receiving an HST and initializing it, including the examination of the packaging. For each action, we asked:
- Does the user understand what they are supposed to do?
- Does the user know how to do it?
- After the action is done, does the user know whether it was successful?

We used the findings of the cognitive walkthroughs to design our quantitative survey (see Section 6). Additionally, we consulted the manufacturers' documentation to obtain a complete list of the deployed authenticity checks. We then connected these findings with the data from our cognitive walkthroughs and established three categories for authenticity checks (Inter-rater reliability: Krippendorff’s α=.91):
- **Packaging**
- **Hardware**
- **Software**

To systematically evaluate each authenticity check, we mapped them to attack vectors (see Section 4.1), thus building an evaluation framework for comparing the effectiveness of current and future authenticity checks (see Table 1).

### Results
#### Packaging
- **Trezor One** and one of the tested YubiKeys were shipped in tamper-evident packaging.
- Hardware wallets arrived in cardboard boxes or shrink-wrap plastic.
- YubiKey recently switched to hard shells (i.e., tamper-evident blister packaging), but older models were delivered in plastic sleeves.
- Many manufacturers provide pictures of the original packaging on their websites and encourage customers to report and return damaged shipments.
- Six of the assessed devices came with holographic stickers.

**Effectiveness**:
- Tamper-evident packages make attacks slightly more difficult, as an attacker would need to repackage a modified device in a genuine-looking way.
- All types of packaging can be reproduced; paper boxes and standard plastic sleeves are easy and cheap, whereas reconstructing tamper-evident plastic wraps is more expensive, requiring special-purpose machines. This only pays off if attacks are carried out on a large scale.
- Holographic stickers provide a low level of protection against distribution attacks. They can be removed with a common blow dryer [75], and new ones are easy to come by [45].

**Usability**:
- Some packages are destroyed when opened, making any tampering clearly visible.
- There are self-destructing holographic stickers that cannot be easily replaced.
- Simple paper boxes do not show obvious signs after being opened.
- Only a few manufacturers provide information on what the original package and holographic sticker(s) should look like, leaving users without a clear way to verify the packaging.

#### Hardware (Enclosure)
- **Single-Piece Cast**: Yubico uses this method and encourages users to check the integrity of tokens through visual inspection.
- **Openable Device**: Two of the assessed hardware wallets can be opened to compare the inside to reference pictures on the manufacturer’s website.

**Effectiveness**:
- Some single-piece cast devices are easy to break using household chemicals [40]. The YubiKey 5 series is made with a more chemical-resistant thermoplastic.
- Since the electronics are tightly molded, it is infeasible for an attacker to add hardware components.
- Creating token replicas or modifying ICs of a single-piece cast token requires advanced techniques and equipment.

### Table 2: Device and Feature Overview
| Feature | YubiKey | Keepkey | Ledger Nano S | Trezor One | Trezor Model T |
|---------|---------|---------|---------------|------------|----------------|
| Tamper-Evident | ✓ | ✓ | ✓ | ✓ | ✓ |
| Single-Piece Cast | ✓ | - | - | - | - |
| Openable Device | - | - | - | - | - |
| Holographic Sticker | ✓ | ✓ | ✓ | ✓ | ✓ |
| Secure Element (Co-Processor) | ✓ | ✓ | ✓ | ✓ | ✓ |
| Secure CPU | ✓ | - | - | - | - |
| Local Firmware Attestation | ✓ | - | - | - | - |
| Remote Firmware Attestation | ✓ | - | - | - | - |
| Manual Firmware Load | ✓ | - | - | - | - |
| Key Attestation | ✓ | - | - | - | - |

**Notes**:
- **✓**: Fulfilled/Implemented/Included
- **-**: Not Fulfilled
- **?**: Undisclosed

This structured approach provides a clear and comprehensive overview of the security measures and vulnerabilities associated with hardware security tokens.