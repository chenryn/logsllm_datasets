number  of  occurrences  per  command,  then  we  neither 
reward,  nor  penalize  this  mismatch,  as  it  does  not 
definitively  indicate  whether  that  command  was  entered 
by the legitimate user or from a masquerader. 
After implementing this mismatch scoring scheme, our 
results drastically improved over the previous semi-global 
algorithm  where  mismatches  were  neither rewarded, nor 
penalized. 
  Our  selective  reward  and  penalty  of 
mismatched  command  alignments  based  on  command 
frequency allows us to differentiate between a user and a 
masquerader  by  taking  into  account  concept  drift  in  our 
tested  block  sequences  and  allowing  small  variations  in 
user activity based upon their past activity. 
%
t
i
H
100%
90%
80%
70%
60%
50%
40%
30%
20%
10%
0%
0%
10%
20%
30%
40%
50%
60%
False Positive %
Semi-Global Alignment (No Mismatch)
Semi-Global Alignment (Mismatch)
Figure 9: Hit rate as a function of false positive 
rate for semi-global with mismatch scoring and 
semi-global without mismatch scoring 
5.4 Overall Results 
After  tuning  the  algorithm,  as  described  above,  we 
have  produced  a  hit  rate  and  false  positive  rate  that  are 
extremely  competitive  with  other 
top  masquerade 
detection  algorithms.    The  only  algorithms  that  perform 
comparably  with our current results are the Naïve Bayes
algorithms.  All other algorithms perform somewhat worst 
than  our  current  best  results,  and  though  they  may  fall 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:52:05 UTC from IEEE Xplore.  Restrictions apply. 
near  our  Receiver  Operator  Characteristic  (ROC)  curve, 
their detection abilities are clearly far below our 75.8% hit 
rate [13]. 
Table 1: Comparisons to other algorithms 
False 
Positive 
7.7% 
6.7% 
4.6% 
1.3% 
3.2% 
2.7% 
1.4% 
3.7% 
5.0% 
 Algorithms 
Semi-Global Alignment 
Bayes 1-Step Markov 
Naïve Bayes (no updating) 
Naïve Bayes (updating) 
Hybrid Markov 
IPAM 
Uniqueness 
Sequence Matching 
Compression 
Hit Rate 
75.8% 
69.3% 
66.2% 
61.5% 
49.3% 
41.1% 
39.4% 
36.8% 
34.2% 
%
t
i
H
100%
90%
80%
70%
60%
50%
40%
30%
20%
10%
0%
0%
2%
4%
6%
10%
8%
12%
False Positive %
14%
16%
18%
20%
Bayes 1-Step Markov
Naïve Bayes (no update)
Hybrid Markov
Sequence Matching
Semi-Global Alignment (Mismatch)
Naïve Bayes (update)
Uniqueness
IPAM
Compression
Figure 10: ROC curve with comparison points 
6. Discussion & Future Work 
Bioinformatics, as an area of study, is peculiarly suited 
to  create  algorithms  that  can  be  applied  in  a  myriad  of 
fields.    The  sequence  alignment  algorithms,  as  we 
discussed  here,  are actually  specialized  pattern matching 
algorithms, which, with some tuning, can be duly applied 
to  many  different  fields  in  which  pattern  matching  is 
applicable, intrusion detection in our case.  Our particular 
system is also equally applicable to graphic user interface 
(GUI)  interactions,  as  those  interactions  can  be  broken 
down to various system calls, which would produce a set 
of system calls.  This set of system calls could then just as 
easily  be  analyzed  by  this  algorithm  to  determine 
intrusions from GUI interactions. 
Wepsi et al. have also noticed this peculiar and novel 
use  of  bioinformatics  algorithms  in  their  use  of  the 
Teiresias  pattern  matching  algorithm  to  flag  abnormal 
Unix system calls that might indicate an attack on a Unix 
process [18].  While both our alignment algorithm and the 
in 
their  approaches 
the  domain  of 
Teiresias  algorithm  originated 
bioinformatics, 
to  detection  vary 
considerably. In particular, we use sequence alignment to 
score  similarity  between  command  sequences  whereas 
Wespi et al. use dominant patterns to classify abnormality 
in Unix processes. 
We  have  presented  a  novel  implementation  of  a 
modified sequence alignment algorithm for the detection 
of  masqueraders,  and  shown  that,  with  appropriate 
customization and tuning, it performs competitively when 
compared  to  the  top  masquerade  detection  algorithms.  
While  a  significant  amount  of  customization  has  been 
done  to  the  generic  Smith-Waterman  local  alignment 
algorithm  to  produce  a  good  masquerade  detection 
algorithm,  there  are  still  a  number  of  additional  metrics 
which we could use for improvements in our algorithm’s 
performance. 
One  great  advantage  of  using  alignments 
to 
characterize  similarity  between  command  sequences  is 
that  the  alignment  can  produce  many  different  statistics.  
These  statistics  include  the  density  of  the  alignment 
(alignment  score  divided  by  alignment  length),  the 
maximum,  minimum,  and  average  gap  length,  the  total 
number of matching and mismatched commands, and the 
total number of gaps in each of the aligned subsequences.  
These statistics measure different aspects of the similarity 
and 
to  further  distinguish  user 
subsequences from intruder subsequences. 
they  can  be  used 
Though  this  algorithm’s  initial  false  positive  rate  is 
somewhat lackluster, we much consider that this is a new 
method of intrusion detection, and as such, initial testing 
was  needed  to  determine  its  viability. 
  While  the 
alignment  score  is  effective  in  identifying  intruders,  it 
often misidentifies user subsequences as an intruder.  This 
may be the result of uncharacteristic user behavior, which 
can be identified and ignored.  Fortunately, there may be 
subtle differences between uncharacteristic user behavior 
and intruder behavior, which can be detected  by looking 
at the alignment statistics in a multidimensional space.  A 
multidimensional  approach  using 
several  different 
alignment statistics could be a more powerful and robust 
mechanism  for  decreasing  the  false  positive  rate  of  our 
algorithm.    Additionally,  the  parameters  of  the  scoring 
algorithm  itself  (gap  penalties,  mismatch  scoring,  and 
match  scoring)  can  be  tuned  even  further  to  allow  for  a 
more dynamic scoring system, similar to what has already 
been  done  with  the  mismatch  scoring,  to  better  separate 
legitimate  user 
attack.  
Furthermore,  this  method  is  significantly  different  from 
other intrusion detection technologies, and it is, therefore, 
particularly well suited to coupling with existing intrusion 
detection  technologies  in  a  hybrid  system  that  could 
provide even more impressive results. 
from  malicious 
activity 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:52:05 UTC from IEEE Xplore.  Restrictions apply. 
7. References 
[1] Ashbourn,  J.  Biometrics:  advanced  identity  identification: 
the complete guide. Springer-Verlag, London, 2000. 
[2] Carrillo,  H.,  and  Lipman,  D.  The  multiple  sequence 
alignment  problem  in  biology.  SIAM  Journal  of  Applied 
Math 48(5): 1073-1082, 1988. 
[3] Gelfand.  M.,  Mironov,  A.,  and  Pevzner,  P.  Gene 
recognition  via  splices  sequence  alignment.  Proc.  Natl. 
Acad. Sci. USA, 93: 9061-9066, 1996. 
[4] Goad, W., and Kanehisa, M. Pattern recognition in nucleic 
acid  sequences:  a  general  method  for  finding  local 
homologies  and  symmetries.  Nucleic  Acids  Research,  10: 
247-263, 1982. 
[5] Hirshberg,  D.  S.  Algorithms  for  the  longest  common 
subsequence  problem.  Journal  of  the  ACM,  24:  664-675, 
1977. 
[6] Hubbard,  T.,  Murzin,  A.,  Brenner,  S.,  and  Chothia,  C. 
Scop:  a  structural  classification  of  proteins  database. 
Nucleic Acids Research, 25: 236-239, 1997. 
[7] Jacobson,  V.,  Leres,  C.,  and  McCanne  S.  Tcpdump,  June 
1989. Available via anonymous FTP from ftp.ee.lbl.gov. 
[8] Kemmerer, R. A., and Vigna, G. Intrusion detection: a brief 
history  and  overview.  IEEE  Security  &  Privacy,  2002. 
URL http://computer.org/computer/sp/articles/kem/ 
[9] Lippmann,  R.,  Cunningham,  R.  K.,  Fried,  D.  J.,  Graf,  I., 
Kendall, K. R., Webster, S. E., and Zissman, M. A. Results 
of  the  darpa  1998  offline  intrusion  detection  evaluation. 
Recent  Advances  in  Intrusion  Detection,  1999,  Second 
International Workshop, RAID 1999. 
[10] Loshin,  P.  Intrusion  detection.  Computer  World,  April 
2001. 
URL 
http://www.computerworld.com/hardwaretopics/hard
ware/story/0,10801,59611,00.html.
[11] Marchette, D. J. Computer intrusion detection and network 
monitoring.  Springer-Verlag  New  York,  Inc.,  New  York 
NY, 2001. 
[12] Maxion, R. A. and Townsend, T. N. Masquerade detection 
using  truncated  command  lines.  Proceeedings  of  the 
International  Conference  on  Dependable  Systems  and 
Networks  (DSN-02),  219-228,  Washington,  D.C.,  June 
2002.  IEEE  Computer  Society  Press,  Los  Alamitos, 
California. 
[13] Needleman, S. and Wunch, C. A general method applicable 
to the search for similarities in the amno acid sequences of 
two  proteins.  Journal  of  Molecular  Biology,  48:  444-453, 
1970. 
[14] Schonlau, M., DuMouchel, W., Ju, W., Karr, A. F., Theus, 
M.,  and  Vardi,  Y.  Computer 
intrusion:  detecting 
masquerades.  Statistical  Science,  16(1):  58-74,  February 
2001. 
[15] S.M. Inc. Sunshield basic security module guide, solaris 7. 
Sun Part No. 8052635-10, October 1998. 
[16] Smith,  T.  F.  and  Waterman,  M.  S.    Identification  of 
common  molecular  subsequences.  Journal  of  Molecular 
Biology, 147: 195-197, 1981. 
[17] Wagner,  R.  A.  and  Fisher,  M.  J.  The  string-to-string 
correction  problem.  Journal  of  the  ACM,  21:168-173, 
1974. 
[18] Wepsi,  A.,  Dacier,  M.,  and  Debar,  H.  (1999)    ‘An 
Intrusion-Detection System Based on the Teiresias Pattern-
Discovery  Algorithm’ 
  EICAR  1999  Best  Paper 
Proceedings
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:52:05 UTC from IEEE Xplore.  Restrictions apply.