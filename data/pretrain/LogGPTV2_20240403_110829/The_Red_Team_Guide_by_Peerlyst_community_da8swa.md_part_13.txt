Linux is the following:
> [Figure
> source](https://4.bp.blogspot.com/-06Qxzn1Z2vo/V02pIlO-znI/AAAAAAAACc0/jAHkWxQ9_bAeD_4XwNLYmBheanqCqhKcACLcB/s1600/Capture.PNG)
Where:
-   **/root** : All the files and directories start from this directory
-   **/home** : Contains personal files of all users
-   **/bin** : Contains all the
    [binaries](https://www.peerlyst.com/tags/binaries) (executables)
-   **/sbin** : Like **/bin**, but it contains the system binaries
-   **/lib** : Contains required library files
-   **/usr** : Contains binaries used by a normal user
-   **/opt** : Contains optional add-on applications
-   **/etc** : Contains all the required
    [configuration](https://www.peerlyst.com/tags/configuration) files
    for the programs
-   **/dev** : Contains device files
-   **/media** : Contains files of temporarily removable
    [devices](https://www.peerlyst.com/tags/devices)
-   **/mnt** : Contains mount point for filesystems
-   **/boot** : Contains
    [bootloader](https://www.peerlyst.com/tags/bootloader) files
-   **/tmp** : Contains temporary files
-   **/var** : Contains variable files, such as
    [logs](https://www.peerlyst.com/tags/logs)
-   **/proc** : Contains information about the system processes
## ![](media/image139.png)Users and groups
Users and groups are vital in Linux while it provides multitasking and
multiuser capabilities. To manage users and groups you can use a set of
Linux commands including:
-   **Useradd**: to add a new user
-   **Passwd**: to change the [user
    password](https://www.peerlyst.com/tags/password)
-   **Userdel**: to [delete](https://www.peerlyst.com/tags/delete) a
    user and you can add '-r' option to delete the files of the user
    that you are going to delete.
> To check the Linux Groups type **cat /etc/group** (We are using
> **cat** as a display command)
![](media/image140.png)To create a group you can use:
-   ***newgrp** \*
## Permissions
To [protect](https://www.peerlyst.com/tags/protect) the users and the
group\'s permissions is used in Linux. The three main permissions used
in Linux are:
-   **Read** represented by the letter (**r**)
-   **Write** represented by the letter (**w**)
-   **Execute** represented by the letter (**x**)
To view permissions of a file you can use the ls command in addition of
the -l option
![](media/image141.png)![](media/image142.jpeg)Where :
[Figure Source](https://www.ics.uci.edu/computing/bin/img/perms1.png)
## chmod, chown and chroot commands:
To change a permission of files you can use the **chmod** command like
the following [format](https://www.peerlyst.com/tags/format):
**chmod** \ \
Or you can use octal
[representation](https://www.peerlyst.com/tags/representation) instead
of the permission letters
-   **chown** is used to change the owner of a file
-   **chroot** is a technique used for separating a non-root
    [process](https://www.peerlyst.com/tags/process) and its children
    from the other system components.
## Cronjobs and Crontabs:
[Automation](https://www.peerlyst.com/tags/automation) and scheduling
are very important aspects in [system
administration](https://www.peerlyst.com/tags/system-administration)
especially when you use Linux. Automating tasks make the
[job](https://www.peerlyst.com/tags/job) of system
[administrators](https://www.peerlyst.com/tags/administrators) easier.
Linux is giving scheduling capabilities to run commands or
[scripts](https://www.peerlyst.com/tags/scripts) in a specific time. We
call it a Cron (cron derives from *chronos*, Greek for the time).To
schedule a task you need to follow this format:
> *\ \ \ \
> \*
>
> *\*
To check the Crontab (The file that contains information about the
**cronjobs**) just type **cat**
### ![](media/image143.png)/etc/crontab
> **Linux attack vectors**
After acquiring a [fair](https://www.peerlyst.com/tags/fair)
understanding about Linux [OS](https://www.peerlyst.com/tags/os)
environment and commands. It is time to discuss Linux threats. To
[attack](https://www.peerlyst.com/tags/attack) Linux infrastructure
attackers are using many Attack vectors. Generally,
[Attacks](https://www.peerlyst.com/tags/attacks) vectors can be
categorized into three main types:
-   ### Network Threats
-   **Host Threats**
-   **Application Threats**
We are going to discuss Linux
[Threats](https://www.peerlyst.com/tags/threats) in a detailed way in
the further sections but first before attacking a Linux Machine a Phase
of enumeration is needed like any methodological attack.
## ![](media/image144.jpeg)OS Detection with Nmap
To detect if the [host](https://www.peerlyst.com/tags/host) is running
on Linux you can use the famous
[Network](https://www.peerlyst.com/tags/network)
[scanner](https://www.peerlyst.com/tags/scanner) Nmap. Just type
> *nmap -- O \*
## Linux enumeration
To [enumerate](https://www.peerlyst.com/tags/enumerate) a Linux Machine
you can use a wide range of [open
source](https://www.peerlyst.com/tags/open-source) tools. One of the
best [tools](https://www.peerlyst.com/tags/tools) is **LinEnum**.
You can [download](https://www.peerlyst.com/tags/download) it from here:
[[https://github.com/rebootuser/LinEnum]{.underline}](https://github.com/rebootuser/LinEnum)
General usage:
> *./LinEnum.sh -k keyword -r report -e /tmp/ -t*
OPTIONS:
-   **-k** Enter keyword
-   **-e** Enter export
    [location](https://www.peerlyst.com/tags/location)
-   **-t** Include thorough (lengthy)
    [tests](https://www.peerlyst.com/tags/tests)
-   **-r** Enter report name
-   **-h** Displays this help text
Running with no options = limited scans/no output file
-   **-e** Requires the user enters an output location i.e.
    **/tmp/export**. If this location does not exist, it will be
    created.
-   **-r** Requires the user to enter a report name. The report (.txt
    file) will be saved to the current working directory.
-   **-t** Performs thorough (slow) tests. Without this switch default,
    \'quick\' scans are performed.
-   **-k** An optional switch for which the user can search for a single
    keyword within many files (documented below).
![](media/image145.jpeg)This [tool](https://www.peerlyst.com/tags/tool)
helps you find information about the Linux host including:
-   ### System Information:
    -   Hostname
    -   [Networking](https://www.peerlyst.com/tags/networking) details:
    -   Current [IP](https://www.peerlyst.com/tags/ip)
    -   Default route details
    -   [DNS server](https://www.peerlyst.com/tags/dns-server)
        information
-   ### User Information:
    -   Current user details
    -   Last logged on users
    -   Shows users logged onto the host
    -   List all users including uid/gid information
    -   List [root](https://www.peerlyst.com/tags/root-1) accounts
    -   Extracts [password
        policies](https://www.peerlyst.com/tags/password-policies) and
        [hash](https://www.peerlyst.com/tags/hash)
        [storage](https://www.peerlyst.com/tags/storage) method
        information
    -   Checks umask value
    -   Checks if [password
        hashes](https://www.peerlyst.com/tags/hashes) are stored in
        /etc/passwd
    -   Extract full details for 'default' uid's such as 0, 1000, 1001
        etc
    -   Attempt to read restricted files i.e. /etc/shadow
    -   List current users history files (i.e .bash_history,
        .nano_history etc.)
    -   Basic [SSH](https://www.peerlyst.com/tags/ssh) checks
## Linux Privilege escalation
> *By definition: "A [privilege
> escalation](https://www.peerlyst.com/tags/privilege-escalation) attack
> is a type of [intrusion](https://www.peerlyst.com/tags/intrusion) that
> takes advantage of
> [programming](https://www.peerlyst.com/tags/programming) errors or
> design flaws to grant the
> [attacker](https://www.peerlyst.com/tags/attacker) elevated
> [access](https://www.peerlyst.com/tags/access) to the network and its
> associated data and applications." (Source techtarget.com) .*
The escalation can be **vertical** or **horizontal**; if we are moving
from an account to another with the same privilege it is horizontal else
it is a vertical escalation. The are many Privilege escalation
techniques used in the wild including:
-   **Linux Services Exploitations:** it is done by finding a
    [bug](https://www.peerlyst.com/tags/bug) in Linux services or
    configurations
-   **Wildcards:** wildcards can be used to inject arbitrary commands
> For More information I highly recommend you to read: **Back To The
> Future: Unix Wildcards Gone Wild**
[[https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt]{.underline}](https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt)
-   **SUID abuse:** in this technique the attackers use a legitimate
    tool that requires
    [root](https://www.peerlyst.com/tags/root-privilege)
    [privilege](https://www.peerlyst.com/tags/root-privilege) like
    **nmap** to run [malicious
    commands](https://www.peerlyst.com/tags/malicious) on the system
-   **Linux Kernel Exploitation:** This technique is highly dangerous.
    If attackers exploit the [Linux
    kernel](https://www.peerlyst.com/tags/linux-kernel) they will be
    able to take full control of the system
To check your system for privilege escalation
[weaknesses](https://www.peerlyst.com/tags/weaknesses) you can use
**"Linux privilege checker"** . You can download it from here:
[[https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py]{.underline}](https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py)
## Linux Exploit Suggester
Linux [Exploit
Suggester](https://www.peerlyst.com/tags/exploit-suggester) is a simple
[script](https://www.peerlyst.com/tags/script) developed by
**PenturaLabs** to help information [security
professionals](https://www.peerlyst.com/tags/security-professionals)
search for Linux vulnerabilities. I quote from the
[Team](https://www.peerlyst.com/tags/team) :
The tool is meant to assist the [security
analyst](https://www.peerlyst.com/tags/security-analyst) in his
[testing](https://www.peerlyst.com/tags/testing) for privilege
escalation opportunities on Linux machine, it provides following
[features](https://www.peerlyst.com/tags/features):
-   ### Remote\" mode (\--kernel or \--uname switches)
-   **\"Direct\" mode (default run)**
-   **\"CVE list\" mode (\--cvelist-file switch)**
-   **\"Check security\" mode (\--checksec switch) Usage:**
> *./linux-exploit-suggester.sh*
You can download the script from this [Github
Repository](https://www.peerlyst.com/tags/github-repository):
[[https://github.com/mzet-/linux-exploit-suggester]{.underline}](https://github.com/mzet-/linux-exploit-suggester)
![](media/image146.jpeg)Even it contains a
[Hardening](https://www.peerlyst.com/tags/hardening) checklist:
## ![](media/image146.jpeg)Linux Exploitation with Metasploit
The Metasploit [Project](https://www.peerlyst.com/tags/project) is a
[computer security](https://www.peerlyst.com/tags/computer-security)
project that provides information about
[security](https://www.peerlyst.com/tags/security-vulnerabilities)
[vulnerabilities](https://www.peerlyst.com/tags/security-vulnerabilities)
and aids in [penetration](https://www.peerlyst.com/tags/penetration)
[testing](https://www.peerlyst.com/tags/testing) and
[IDS](https://www.peerlyst.com/tags/ids)
[signature](https://www.peerlyst.com/tags/signature) development. It is
[open source](https://www.peerlyst.com/tags/open-source) exploitation
tool developed by HD moore. If you are using [Kali
Linux](https://www.peerlyst.com/tags/kali-linux)
[distribution](https://www.peerlyst.com/tags/distribution) you don't
need to install it because it is already installed on your operating
system. It is provided for [Linux](https://www.peerlyst.com/tags/linux)
[and](https://www.peerlyst.com/tags/linux)
[Windows](https://www.peerlyst.com/tags/windows) operating systems. For
more information you can visit its official website:
[[https://www.metasploit.com/get-started]{.underline}](https://www.metasploit.com/get-started)
### Metasploit architecture
Metasploit project is composed by the following components:
-   **Tools:** they are useful utilities and tools needed by Metasploit
-   **Plugins:** a set of loadable extensions at
    [runtime](https://www.peerlyst.com/tags/runtime)
-   **Libraries:** a set of [Ruby](https://www.peerlyst.com/tags/ruby)
    libraries needed by metasploit
-   **Interfaces:** provide different access means to metasploit
    [(Cli,Web](https://www.peerlyst.com/tags/web),GUI)
-   **Modules:** they are responsible of performing specific tasks
> ![](media/image147.jpeg)[Figure
> source](https://hydrasky.com/wp-content/uploads/2017/01/Architecture.png)
[Armitage](https://www.peerlyst.com/tags/armitage) is a graphical
[interface](https://www.peerlyst.com/tags/interface) edition based on
Metasploit [framework](https://www.peerlyst.com/tags/framework)
> ![](media/image148.png)[Figure
> source](http://www.fastandeasyhacking.com/images/screenshots/armitage4.png)
To fire up Metasploit on your [Kali](https://www.peerlyst.com/tags/kali)
machine just type:
[msfconsole](https://www.peerlyst.com/tags/msfconsole) (Console version
of Metasploit). The following are some basic
[MSF](https://www.peerlyst.com/tags/msf) commands:
-   ### The Help command (of course)
-   **Show payloads**
-   **Show exploits**
-   **Show options**
-   **MSFupdate**
-   **Use**
-   **Search**
-   **Exploit**