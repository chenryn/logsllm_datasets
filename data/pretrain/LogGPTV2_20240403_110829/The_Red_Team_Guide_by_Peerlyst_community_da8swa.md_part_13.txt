# Linux File System Overview

Linux uses a hierarchical file system structure, with the root directory (`/`) as the topmost directory. Below is an overview of some key directories:

- **/root**: The home directory for the root user.
- **/home**: Contains personal files and directories for all users.
- **/bin**: Stores essential command binaries (executables) used by all users.
- **/sbin**: Similar to `/bin`, but contains system administration binaries.
- **/lib**: Contains shared library files required by programs.
- **/usr**: Contains non-essential binaries, libraries, and documentation for all users.
- **/opt**: Used for optional add-on applications.
- **/etc**: Contains configuration files for the system and installed programs.
- **/dev**: Contains device files representing hardware devices.
- **/media**: Mount point for removable media devices.
- **/mnt**: Temporary mount point for filesystems.
- **/boot**: Contains files required for the boot process, including the bootloader.
- **/tmp**: Stores temporary files.
- **/var**: Contains variable data, such as logs, spool files, and other transient data.
- **/proc**: Provides an interface to kernel data structures.

## Users and Groups

Users and groups are fundamental in Linux, enabling multitasking and multiuser capabilities. Common commands for managing users and groups include:

- **useradd**: Adds a new user.
- **passwd**: Changes a user's password.
- **userdel**: Deletes a user; use the `-r` option to remove the user's home directory and mail spool.

To view the list of groups, use the `cat /etc/group` command. To create a new group, use the `groupadd` command.

## Permissions

Permissions in Linux are used to protect users and their files. The three main types of permissions are:

- **Read (r)**: Allows viewing the contents of a file or listing the contents of a directory.
- **Write (w)**: Allows modifying the contents of a file or adding/deleting files in a directory.
- **Execute (x)**: Allows running a file as a program or entering a directory.

To view the permissions of a file, use the `ls -l` command.

### Changing Permissions

- **chmod**: Changes the permissions of a file or directory. It can be used with symbolic notation (e.g., `chmod u+x filename`) or octal representation (e.g., `chmod 755 filename`).
- **chown**: Changes the owner of a file or directory.
- **chroot**: Changes the root directory for a process and its children, effectively isolating them from the rest of the system.

## Cronjobs and Crontabs

Cronjobs and crontabs are used for automation and scheduling tasks in Linux. A cronjob is a scheduled task that runs at a specified time. The format for a cronjob entry is:

```
* * * * * command_to_execute
- - - - -
| | | | |
| | | | +--- Day of the week (0 - 6) (Sunday = 0)
| | | +----- Month (1 - 12)
| | +------- Day of the month (1 - 31)
| +--------- Hour (0 - 23)
+----------- Minute (0 - 59)
```

To view the crontab entries, use the `crontab -l` command.

## Linux Attack Vectors

Understanding Linux threats is crucial for system administrators. Attack vectors can be categorized into three main types:

- **Network Threats**: Attacks targeting network infrastructure.
- **Host Threats**: Attacks targeting the host machine.
- **Application Threats**: Attacks targeting specific applications.

### OS Detection with Nmap

To detect if a host is running Linux, you can use the Nmap tool with the following command:

```
nmap --osscan-guess <target>
```

### Linux Enumeration

Tools like LinEnum can be used to enumerate a Linux machine. LinEnum can be downloaded from [GitHub](https://github.com/rebootuser/LinEnum).

General usage:

```
./LinEnum.sh -k keyword -r report -e /tmp/ -t
```

Options:
- **-k**: Enter a keyword to search.
- **-e**: Specify the export location.
- **-t**: Perform thorough tests.
- **-r**: Specify the report name.
- **-h**: Display help text.

### Linux Privilege Escalation

Privilege escalation attacks exploit programming errors or design flaws to gain elevated access. Types of privilege escalation include vertical and horizontal. Techniques include:

- **Linux Services Exploitation**: Finding bugs in services or configurations.
- **Wildcards**: Injecting arbitrary commands.
- **SUID Abuse**: Using SUID binaries to execute malicious commands.
- **Linux Kernel Exploitation**: Exploiting vulnerabilities in the kernel.

To check for privilege escalation weaknesses, you can use the "Linux Privilege Checker" script available on [GitHub](https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py).

### Linux Exploit Suggester

The Linux Exploit Suggester is a script developed by PenturaLabs to help security professionals find Linux vulnerabilities. It can be run in different modes:

- **Remote Mode**: Use the `--kernel` or `--uname` switches.
- **Direct Mode**: Default mode.
- **CVE List Mode**: Use the `--cvelist-file` switch.
- **Check Security Mode**: Use the `--checksec` switch.

Download the script from [GitHub](https://github.com/mzet-/linux-exploit-suggester).

### Linux Exploitation with Metasploit

Metasploit is an open-source exploitation tool used for penetration testing and vulnerability assessment. It is pre-installed on Kali Linux. Key components of Metasploit include:

- **Tools**: Utility tools.
- **Plugins**: Loadable extensions.
- **Libraries**: Ruby libraries.
- **Interfaces**: CLI, Web, and GUI interfaces.
- **Modules**: Task-specific modules.

To start Metasploit, use the `msfconsole` command. Basic MSF commands include:

- **help**: Show help.
- **show payloads**: List available payloads.
- **show exploits**: List available exploits.
- **show options**: Show module options.
- **msfupdate**: Update Metasploit.
- **use**: Select a module.
- **search**: Search for modules.
- **exploit**: Run the selected exploit.