A common pattern with collections is the "groupinds" pattern. The pattern
consists of collecting the indices of the entries of the collection into
subsets with common value. For example:
    v = [(1,2), (1,2), (1,3), (7,3)]
could be grouped into:
    [[1,2], [3], [4]]
because the two first indices of `v` have the same value `(1,2)`.
Could we have this pattern implemented in Base? Below is a draft
implementation by @jagot:
    function group_by(v; f=identity, by=identity)
        isempty(v) && return [[]]
        e = first(v)
        m = Dict{typeof(by(e)),Vector{typeof(f(1=>e))}}()
        for (i,e) in enumerate(v)
            push!(get!(m, by(e), []), f(i=>e))
        end
        values(m)
    end