thentication tag in the modiﬁed DPDP I scheme is an
element of Z∗
N . Thus, the size of a tag in the DSCS
protocol is larger than that in the modiﬁed DPDP I
scheme by λ + 1 bits (as e is a (λ + 1)-bit prime).
3. In our DSCS scheme, the value of (dM , m) and the
hi values in the public key must be changed for each
insertion or deletion (only change in dM is required
for modiﬁcation), whereas only the value of (d ˜M , ˜m)
needs to be changed in the modiﬁed DPDP I scheme.
However, if the server keeps a local copy of the public
key (an ordered list containing hi values for i ∈ [1, m]),
then small changes are required at the server side. The
server inserts the new h value (sent by the client) in
(i + 1)-th position in the list (for insertion) or discards
the i-th h value (for deletion).
Thus, the proposed DSCS scheme suﬀers from the limi-
tations mentioned above. We note that the existing SSCS
protocol [14] based on the same SNC protocol [11] also suf-
fers from the ﬁrst two of these limitations. However, in this
work, we explore if an eﬃcient secure cloud storage protocol
can be constructed from a secure network coding protocol.
A more eﬃcient (in terms of the size of the public key or
the size of an authentication tag) SNC protocol having the
properties mentioned in Section 3.1 can lead us to construct
a more eﬃcient DSCS protocol in future.
116Secure cloud
storage
protocols
PDP [3]
Type
of
Computation Computation Communication Publicly
veriﬁable
complexity
for veriﬁer
for server
data
Static
Scalable PDP [4] Dynamic‡
Dynamic
Dynamic
Modiﬁed DPDP I
DPDP I [18]
(in this work)
DPDP II [18]
Wang et al. [39]
Wang et al. [38]
Chen et al. [14]
Dynamic
Dynamic
Dynamic
Static
Our DSCS scheme Dynamic
(in this work)
O(1)
O(1)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(1)
O(log m)
O(1)
O(1)
O(log ˜m)
O(log ˜m)
O( ˜m log ˜m)(cid:63)
O(log ˜m)
O(log ˜m)
O(1)
O(log m)
O(1)
O(1)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(log ˜m)
O(1)
O(log m)
Yes
No
Yes§
Yes
Yes§
Yes
Yes
Yes
Yes
Privacy-
preserving
audits
No
No
No
Yes
No
No
Yes
Yes
Yes
Security
model
RO†
RO
Standard
Standard
Standard
RO
RO
Standard
Standard
Table 1: Comparison of the secure cloud storage schemes achieving PDP guarantees. For simplicity, we
exclude the security parameter λ from complexity parameters (for an audit). The value m denotes the
number of vectors in our DSCS scheme, and ˜m denotes the number of segments the data ﬁle is divided in
(such that an authentication tag is associated with each segment). The term O(˜n) is added implicitly to each
complexity parameter, where ˜n is the size of each segment. For example, ˜n = n in the last two schemes, where
a vector having n blocks is considered to be a segment. For all the schemes, the storage at the veriﬁer side
is O(1), and the storage at the server side is O(|F (cid:48)|) where F (cid:48) is the outsourced ﬁle. If l is the cardinality of
the challenge set and the server corrupts β-fraction of the ﬁle, the detection probability pdetect = 1 − (1 − β)l
for all the schemes (except, in DPDP II, pdetect = 1 − (1 − β)Ω(log ˜m)).
† RO denotes the random oracle model [6].
‡ Scalable PDP scheme supports deletion, modiﬁcation and append only for a predeﬁned number of times,
and insertion is not supported in this scheme.
§ A small change (making the latest values of d ˜M and ˜m public) is required in the original scheme (see
Section 4.1).
(cid:63)  is a constant such that 0 <  < 1.
6. CONCLUSION
In this work, we have proposed a DSCS protocol based on
an SNC protocol. To the best of our knowledge, this is the
ﬁrst SNC-based DSCS protocol that is secure in the stan-
dard model, enjoys public veriﬁability and oﬀers privacy-
preserving audits. We have also discussed about some prop-
erties an SNC protocol must have such that an eﬃcient
DSCS protocol can be constructed using this SNC proto-
col. We have modiﬁed an existing DSCS scheme (DPDP
I [18]) to make its audits privacy-preserving. We have ana-
lyzed the eﬃciency of our DSCS construction and compare it
with other existing secure cloud storage protocols achieving
the guarantees of provable data possession. Finally, we have
identiﬁed some limitations of an SNC-based secure cloud
storage protocol. However, some of these limitations follow
from the underlying SNC protocols used. A more eﬃcient
SNC protocol can give us a DSCS protocol with a better
eﬃciency.
7. REFERENCES
[1] S. Agrawal and D. Boneh. Homomorphic MACs:
MAC-based integrity for network coding. In Applied
Cryptography and Network Security - ACNS 2009,
pages 292–305, 2009.
[2] R. Ahlswede, N. Cai, S. R. Li, and R. W. Yeung.
Network information ﬂow. IEEE Transactions on
Information Theory, 46(4):1204–1216, 2000.
[3] G. Ateniese, R. C. Burns, R. Curtmola, J. Herring,
L. Kissner, Z. N. J. Peterson, and D. X. Song.
Provable data possession at untrusted stores. In ACM
Conference on Computer and Communications
Security, CCS 2007, pages 598–609, 2007.
[4] G. Ateniese, R. D. Pietro, L. V. Mancini, and
G. Tsudik. Scalable and eﬃcient provable data
possession. In International Conference on Security
and Privacy in Communication Networks,
SECURECOMM 2008, pages 9:1–9:10, 2008.
[5] N. Attrapadung and B. Libert. Homomorphic network
coding signatures in the standard model. In Public
Key Cryptography - PKC 2011, pages 17–34, 2011.
[6] M. Bellare and P. Rogaway. Random oracles are
practical: A paradigm for designing eﬃcient protocols.
In ACM Conference on Computer and
Communications Security, CCS 1993, pages 62–73,
1993.
[7] D. Boneh, D. M. Freeman, J. Katz, and B. Waters.
Signing a linear subspace: Signature schemes for
network coding. In Public Key Cryptography - PKC
2009, pages 68–87, 2009.
[8] K. D. Bowers, A. Juels, and A. Oprea. HAIL: A
high-availability and integrity layer for cloud storage.
In ACM Conference on Computer and
Communications Security, CCS 2009, pages 187–198,
2009.
[9] K. D. Bowers, A. Juels, and A. Oprea. Proofs of
retrievability: Theory and implementation. In ACM
Cloud Computing Security Workshop, CCSW 2009,
pages 43–54, 2009.
[10] D. Cash, A. K¨up¸c¨u, and D. Wichs. Dynamic proofs of
retrievability via oblivious RAM. In Advances in
Cryptology - EUROCRYPT 2013, pages 279–295,
1172013.
[26] F. J. MacWilliams and N. J. A. Sloane. The Theory of
Error-Correcting Codes. North-Holland Publishing
Company, 1977.
[27] R. C. Merkle. A digital signature based on a
conventional encryption function. In Advances in
Cryptology - CRYPTO 1987, pages 369–378, 1987.
[28] A. Miller, A. Juels, E. Shi, B. Parno, and J. Katz.
Permacoin: Repurposing Bitcoin work for data
preservation. In IEEE Symposium on Security and
Privacy - S&P 2014, pages 475–490, 2014.
[29] B. M¨oller. Algorithms for multi-exponentiation. In
Selected Areas in Cryptography - SAC 2001, pages
165–180, 2001.
[30] M. Naor and G. N. Rothblum. The complexity of
online memory checking. Journal of the ACM,
56(1):2:1–2:46, February 2009.
[31] C. Papamanthou, R. Tamassia, and N. Triandopoulos.
Authenticated hash tables. In ACM Conference on
Computer and Communications Security, CCS 2008,
pages 437–448, 2008.
[32] W. Pugh. Skip lists: A probabilistic alternative to
balanced trees. Communications of the ACM,
33(6):668–676, 1990.
[33] I. S. Reed and G. Solomon. Polynomial codes over
certain ﬁnite ﬁelds. Journal of the Society for
Industrial and Applied Mathematics, 8(2):300–304,
1960.
[34] B. Sengupta, S. Bag, S. Ruj, and K. Sakurai.
Retricoin: Bitcoin based on compact proofs of
retrievability. In International Conference on
Distributed Computing and Networking, ICDCN 2016,
pages 14:1–14:10, 2016.
[35] B. Sengupta and S. Ruj. Guide to Security Assurance
for Cloud Computing, chapter Cloud Data Auditing
Using Proofs of Retrievability, pages 193–210.
Springer International Publishing, 2015.
[36] H. Shacham and B. Waters. Compact proofs of
retrievability. Journal of Cryptology, 26(3):442–483,
2013.
[37] E. Shi, E. Stefanov, and C. Papamanthou. Practical
dynamic proofs of retrievability. In ACM Conference
on Computer and Communications Security, CCS
2013, pages 325–336, 2013.
[38] C. Wang, S. S. M. Chow, Q. Wang, K. Ren, and
W. Lou. Privacy-preserving public auditing for secure
cloud storage. IEEE Transactions on Computers,
62(2):362–375, 2013.
[39] Q. Wang, C. Wang, K. Ren, W. Lou, and J. Li.
Enabling public auditability and data dynamics for
storage security in cloud computing. IEEE
Transactions on Parallel and Distributed Systems,
22(5):847–859, 2011.
[11] D. Catalano, D. Fiore, and B. Warinschi. Eﬃcient
network coding signatures in the standard model. In
Public Key Cryptography - PKC 2012, pages 680–696,
2012.
[12] N. Chandran, B. Kanukurthi, and R. Ostrovsky.
Locally updatable and locally decodable codes. In
Theory of Cryptography Conference, TCC 2014, pages
489–514, 2014.
[13] D. X. Charles, K. Jain, and K. E. Lauter. Signatures
for network coding. International Journal of
Information and Coding Theory, 1(1):3–14, 2009.
[14] F. Chen, T. Xiang, Y. Yang, and S. S. M. Chow.
Secure cloud storage meets with secure network
coding. In IEEE Conference on Computer
Communications, INFOCOM 2014, pages 673–681,
2014.
[15] R. Curtmola, O. Khan, R. C. Burns, and G. Ateniese.
MR-PDP: multiple-replica provable data possession.
In IEEE International Conference on Distributed
Computing Systems - ICDCS 2008, pages 411–420,
2008.
[16] Y. Dodis, S. P. Vadhan, and D. Wichs. Proofs of
retrievability via hardness ampliﬁcation. In Theory of
Cryptography Conference, TCC 2009, pages 109–127,
2009.
[17] C. C. Erway, A. K¨up¸c¨u, C. Papamanthou, and
R. Tamassia. Dynamic provable data possession. In
ACM Conference on Computer and Communications
Security, CCS 2009, pages 213–222, 2009.
[18] C. C. Erway, A. K¨up¸c¨u, C. Papamanthou, and
R. Tamassia. Dynamic provable data possession. ACM
Transactions on Information and System Security,
17(4):15, 2015.
[19] R. Gennaro, J. Katz, H. Krawczyk, and T. Rabin.
Secure network coding over the integers. In Public Key
Cryptography - PKC 2010, pages 142–160, 2010.
[20] M. T. Goodrich, R. Tamassia, and A. Schwerin.
Implementation of an authenticated dictionary with
skip lists and commutative hashing. In DARPA
Information Survivability Conference and Exposition
(DISCEX) II, pages 68–82, 2001.
[21] T. Ho, R. Koetter, M. M´edard, D. R. Karger, and
M. Eﬀros. The beneﬁts of coding over routing in a
randomized setting. In IEEE International Symposium
on Information Theory - ISIT 2003, page 442, 2003.
[22] T. Ho, M. M´edard, R. Koetter, D. R. Karger,
M. Eﬀros, J. Shi, and B. Leong. A random linear
network coding approach to multicast. IEEE
Transactions on Information Theory,
52(10):4413–4430, 2006.
[23] A. Juels and B. S. Kaliski, Jr. PORs: Proofs of
retrievability for large ﬁles. In ACM Conference on
Computer and Communications Security, CCS 2007,
pages 584–597, 2007.
[24] A. K¨up¸c¨u. Oﬃcial arbitration with secure cloud
storage application. The Computer Journal,
58(4):831–852, 2015.
[25] S. R. Li, R. W. Yeung, and N. Cai. Linear network
coding. IEEE Transactions on Information Theory,
49(2):371–381, 2003.
118