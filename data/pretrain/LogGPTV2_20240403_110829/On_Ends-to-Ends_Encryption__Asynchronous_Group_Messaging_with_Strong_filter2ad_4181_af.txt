in Algebraic and Noncommutative Geometry: Proceedings in Memory of Ruth Michler. Contemporary
Mathematics. Volume 324. Caroline Grant Mellesand Jean-Paul Brasseletand Gary Kennedyand Kristin
Lauter and Lee McEwan, editors. American Mathematical Society.
[5] Dan Boneh and Mark Zhandry. 2014. Multiparty key exchange, eﬃcient traitor tracing, and more from
indistinguishability obfuscation. In CRYPTO 2014, Part I (LNCS). Juan A. Garay and Rosario Gennaro,
editors. Volume 8616. Springer, Heidelberg, (August 2014), 480–499. doi: 10.1007/978-3-662-44371-
2_27.
[6] Nikita Borisov, Ian Goldberg, and Eric Brewer. 2004. Oﬀ-the-record communication, or, why not to use
pgp. In Proceedings of the 2004 ACM Workshop on Privacy in the Electronic Society (WPES ’04). ACM.
doi: 10.1145/1029179.1029200.
[7] Timo Brecher, Emmanuel Bresson, and Mark Manulis. 2009. Fully robust tree-Diﬃe-Hellman group key
exchange. In CANS 09 (LNCS). Juan A. Garay, Atsuko Miyaji, and Akira Otsuka, editors. Volume 5888.
Springer, Heidelberg, (December 2009), 478–497.
Jacqueline Brendel, Marc Fischlin, Felix Günther, and Christian Janson. 2017. Prf-odh: relations, instan-
tiations, and impossibility results. Cryptology ePrint Archive, Report 2017/517. http://eprint.iacr.
org/2017/517. (2017).
[8]
[9] Emmanuel Bresson, Olivier Chevassut, David Pointcheval, and Jean-Jacques Quisquater. 2001. Provably
authenticated group Diﬃe-Hellman key exchange. In ACM CCS 2001. Michael K. Reiter and Pierangela
Samarati, editors. ACM Press, (November 2001), 255–264. doi: 10.1145/501983.502018.
[10] Christina Brzuska, Marc Fischlin, Bogdan Warinschi, and Stephen C. Williams. 2011. Composability of
Bellare-Rogaway key exchange protocols. In ACM CCS 2011. Yan Chen, George Danezis, and Vitaly
Shmatikov, editors. ACM Press, (October 2011), 51–62. doi: 10.1145/2046707.2046716.
[11] Christian Cachin and Reto Strobl. 2004. Asynchronous group key exchange with failures. In Proceedings
of the Twenty-third Annual ACM Symposium on Principles of Distributed Computing (PODC ’04). ACM,
357–366. doi: 10.1145/1011767.1011820.
[12] Yi-Ruei Chen and Wen-Guey Tzeng. 2017. Group key management with eﬃcient rekey mechanism: a
semi-stateful approach for out-of-synchronized members. Computer Communications, 98. doi: 10.1016/j.
comcom.2016.08.001.
25
[13] Katriel Cohn-Gordon, Cas Cremers, Benjamin Dowling, Luke Garratt, and Douglas Stebila. 2016. A
formal security analysis of the signal messaging protocol. Cryptology ePrint Archive, Report 2016/1013.
http://eprint.iacr.org/2016/1013. (2016).
[14] Katriel Cohn-Gordon, Cas Cremers, and Luke Garratt. 2016. On post-compromise security. In Computer
Security Foundations Symposium (CSF), 2016 IEEE 29th. IEEE, 164–178.
[15] Katriel Cohn-Gordon, Cas Cremers, Luke Garratt, Jon Millican, and Kevin Milner. 2018. On Ends-to-Ends
Encryption: Asynchronous Group Messaging with Strong Security Guarantees. In Proceedings of the 2018
ACM SIGSAC Conference on Computer and Communications Security, CCS 2018, Toronto, ON, Canada,
October 15-19, 2018. ACM, 1802–1819.
[16] Cas J. F. Cremers and Michele Feltz. 2012. Beyond eCK: perfect forward secrecy under actor compromise
and ephemeral-key reveal. In ESORICS 2012 (LNCS). Sara Foresti, Moti Yung, and Fabio Martinelli,
editors. Volume 7459. Springer, Heidelberg, (September 2012), 734–751. doi: 10.1007/978-3-642-33167-
1_42.
Ivan Damgård. 2007. A “proof-reading” of some issues in cryptography (invited lecture). In ICALP 2007
(LNCS). Lars Arge, Christian Cachin, Tomasz Jurdzinski, and Andrzej Tarlecki, editors. Volume 4596.
Springer, Heidelberg, (July 2007), 2–11. doi: 10.1007/978-3-540-73420-8_2.
[17]
[18] Yvo Desmedt, Tanja Lange, and Mike Burmester. 2007. Scalable authenticated tree based group key
exchange for ad-hoc groups. In FC 2007 (LNCS). Sven Dietrich and Rachna Dhamija, editors. Volume 4886.
Springer, Heidelberg, (February 2007), 104–118.
eQualit.ie. 2016. (N+1)sec. (2016). https://learn.equalit.ie/wiki/Np1sec.
[19]
[20] Facebook. 2017. Messenger Secret Conversations (Technical Whitepaper Version 2.0). Technical report.
Retrieved 05/2017 from https://fbnewsroomus.files.wordpress.com/2016/07/messenger-secret-
conversations-technical-whitepaper.pdf.
[21] Michael Farb, Yue-Hsun Lin, Tiﬀany Hyun-Jin Kim, Jonathan McCune, and Adrian Perrig. 2013. Safes-
linger: easy-to-use and secure public-key exchange. In Proceedings of the 19th Annual International
Conference on Mobile Computing and Networking (MobiCom ’13). ACM, 417–428. doi: 10.1145/2500423.
2500428.
[22] Marc Fischlin and Felix Günther. 2014. Multi-stage key exchange and the case of Google’s QUIC protocol.
In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security. ACM,
1193–1204.
Ian Goldberg, Berkant Ustaoglu, Matthew Van Gundy, and Hao Chen. 2009. Multi-party oﬀ-the-record
messaging. In ACM CCS 2009. Ehab Al-Shaer, Somesh Jha, and Angelos D. Keromytis, editors. ACM
Press, (November 2009), 358–368. doi: 10.1145/1653662.1653705.
[23]
[24] Oded Goldreich. 1997. On the foundations of modern cryptography (invited lecture). In CRYPTO’97
(LNCS). Burton S. Kaliski Jr., editor. Volume 1294. Springer, Heidelberg, (August 1997), 46–74. doi:
10.1007/BFb0052227.
[25] Matthew D. Green and Ian Miers. 2015. Forward secure asynchronous messaging from puncturable
encryption. In 2015 IEEE Symposium on Security and Privacy. IEEE Computer Society Press, (May
2015), 305–320. doi: 10.1109/SP.2015.26.
internet.org. 2016. State of connectivity 2015. Annual Report. (2016). Retrieved 05/2017 from https:
//fbnewsroomus.files.wordpress.com/2016/02/state- of- connectivity- 2015- 2016- 02- 21-
final.pdf.
[26]
[27] Antoine Joux. 2004. A one round protocol for tripartite Diﬃe-Hellman. Journal of Cryptology, 17, 4,
(September 2004), 263–276. doi: 10.1007/s00145-004-0312-y.
2001. Communication-eﬃcient group key agreement. Trusted Information: The New Decade Challenge.
Springer US. doi: 10.1007/0-306-46998-7_16.
[28]
[29] Yongdae Kim, Adrian Perrig, and Gene Tsudik. 2001. Communication-eﬃcient group key agreement. In
International Federation for Information Processing (IFIP SEC). Paris, France, (June 2001).
26
[30] Yongdae Kim, Adrian Perrig, and Gene Tsudik. 2000. Simple and fault-tolerant key agreement for dynamic
collaborative groups. In Proceedings of the 7th ACM Conference on Computer and Communications
Security (CCS ’00). ACM. doi: 10.1145/352600.352638.
[31] Yongdae Kim, Adrian Perrig, and Gene Tsudik. 2000. Simple and fault-tolerant key agreement for dynamic
collaborative groups. In Proceedings of ACM Conference on Computer and Communications Security
(CCS), 235–244.
[32] Yongdae Kim, Adrian Perrig, and Gene Tsudik. 2004. Tree-based group key agreement. ACM Trans. Inf.
Syst. Secur., (February 2004). doi: 10.1145/984334.984337.
[33] N. Kobeissi, K. Bhargavan, and B. Blanchet. 2017. Automated veriﬁcation for secure messaging protocols
and their implementations: a symbolic and computational approach. In IEEE European Symposium on
Security and Privacy (EuroS&P).
[34] Brian A. LaMacchia, Kristin Lauter, and Anton Mityagin. 2007. Stronger security of authenticated key
exchange. In ProvSec 2007 (LNCS). Willy Susilo, Joseph K. Liu, and Yi Mu, editors. Volume 4784.
Springer, Heidelberg, (November 2007), 1–16.
Sangwon Lee, Yongdae Kim, Kwangjo Kim, and Dae-Hyun Ryu. 2003. An eﬃcient tree-based group key
agreement using bilinear map. In ACNS 03 (LNCS). Jianying Zhou, Moti Yung, and Yongfei Han, editors.
Volume 2846. Springer, Heidelberg, (October 2003), 357–371. doi: 10.1007/978-3-540-45203-4_28.
[35]
[36] Fermi Ma and Mark Zhandry. 2017. Encryptor combiners: a uniﬁed approach to multiparty nike, (h)ibe, and
broadcast encryption. Cryptology ePrint Archive, Report 2017/152. http://eprint.iacr.org/2017/152.
(2017).
[37] Moxie Marlinspike. 2013. Forward secrecy for asynchronous messages. Blog. (August 22, 2013). Retrieved
05/2017 from https://whispersystems.org/blog/asynchronous-security/.
[38] Moxie Marlinspike. 2016. Signal protocol documentation. (2016). Retrieved 05/2017 from https://
whispersystems.org/docs/.
[39] Moxie Marlinspike. 2016. The x3dh key agreement protocol. Trevor Perrin, editor. (November 2016).
Retrieved 11/2017 from https://signal.org/docs/specifications/x3dh/x3dh.pdf.
[40] Ghita Mezzour, Ahren Studer, Michael Farb, Jason Lee, Jonathan McCune, Hsu-Chun Hsiao, and Adrian
Perrig. 2010. Ho-Po Key: Leveraging Physical Constraints on Human Motion to Authentically Exchange
Information in a Group. Technical report. Carnegie Mellon University, (December 2010).
Jon Millican. 2018. ART prototype implementation. (2018). https://github.com/facebookresearch/
asynchronousratchetingtree.
[41]
[42] MLS Working Group Chairs. 2018. Messaging layer security working group. https://mlswg.github.io.
[43] Open Whisper Systems. 2014. Libsignal-service-java. (2014). https://github.com/signalapp/libsignal-
service - java / blob / c8d7c3c00445a81b81e0a7305151cda4534ba299 / java / src / main / java / org /
whispersystems/signalservice/api/SignalServiceMessageSender.java#L497.
[44] Adrian Perrig. 1999. Eﬃcient collaborative key management protocols for secure autonomous group
communication. In Proceedings of International Workshop on Cryptographic Techniques and E-Commerce
(CrypTEC). (July 1999), 192–202.
[45] Adrian Perrig, Dawn Song, and Doug Tygar. 2001. ELK, a new protocol for eﬃcient large-group key
distribution. In Proceedings of IEEE Symposium on Security and Privacy. (May 2001).
[46] Paul Rösler, Christian Mainka, and Jörg Schwenk. 2018. More is less: on the end-to-end security of group
chats in signal, whatsapp, and threema. In 2018 IEEE European Symposium on Security and Privacy,
EuroS&P 2018, 415–429. doi: 10.1109/EuroSP.2018.00036.
[47] Benedikt Schmidt, Simon Meier, Cas Cremers, and David A. Basin. 2012. Automated analysis of diﬃe-
hellman protocols and advanced security properties. In 25th IEEE Computer Security Foundations
Symposium, CSF 2012, Cambridge, MA, USA, June 25-27, 2012, 78–94. doi: 10.1109/CSF.2012.25.
[48] Victor Shoup. 2004. Sequences of games: a tool for taming complexity in security proofs. IACR Cryptology
EPrint Archive, 2004, 332.
27
[49] Dmitry Skiba. 2008. Trevorbernard/curve25519-java. GitHub repository. (February 23, 2008). Retrieved
05/2017 from https://github.com/trevorbernard/curve25519-java.
[50] Mark Slee, Aditya Agarwal, and Marc Kwiatkowski. 2007. Thrift: Scalable Cross-Language Services
Implementation. Technical report. Retrieved 11/2017 from https://thrift.apache.org/static/files/
thrift-20070401.pdf.
1990. A secure audio teleconference system. Advances in Cryptology — CRYPTO’ 88: Proceedings. Springer
New York. doi: 10.1007/0-387-34799-2_37.
[51]
[52] Michael Steiner, Gene Tsudik, and Michael Waidner. 2000. Key agreement in dynamic peer groups. IEEE
Transactions on Parallel and Distributed Systems, 11, 8, (August 2000), 769–780.
[53] The Guardian. 2017. Contact the guardian securely. (2017). Retrieved 06/2017 from https://gu.com/tip-
us-off.
[54] D. Wallner, E. Harder, and R. Agee. 1999. Key management for multicast: issues and architectures. RFC.
United States, (1999).
[55] WhatsApp. 2016. WhatsApp Encryption Overview. Technical report. Retrieved 07/2016 from https:
//www.whatsapp.com/security/WhatsApp-Security-Whitepaper.pdf.
[56] Chung Kei Wong, Mohamed Gouda, and Simon S. Lam. 2000. Secure group communications using key
graphs. IEEE/ACM Transactions on Networking, 8, 1, (February 2000), 16–30.
[57] Zheng Yang, Chao Liu, Wanping Liu, Daigu Zhang, and Song Luo. 2017. A new strong security model
for stateful authenticated group key exchange. International Journal of Information Security, 1–18. doi:
10.1007/s10207-017-0373-1.
A Pseudocode Protocol Deﬁnitions
We include in Figure 8 precise pseudocode for the ART algorithms, including both “real”
state π corresponding to data which might be kept in the memory of an implementation, and
bookkeeping state σ which is used in the deﬁnition of the security game.
B Queries in the Computational Model
We give formal deﬁnitions of the adversary queries used in our computational model in Table 2.
C Computational Security Proof
Remark 4 (Conditions on ι). The property we need of ι is similar to the DDH assumption:
given randomly sampled gx and gy, it should be computationally hard to distinguish ι(gxy) from
ι(gzy) where gz is uniformly random. This is a PRF-ODH assumption without an oracle [8].
This property is commonly satisﬁed. For example, if we assume that ι() is a random oracle or
even the identity function, then this property holds under the DDH assumption.
Remark 5. Instead of encoding authentication as a restriction on the sessions against which it is
valid to issue a RevSessKey query, we have separated it out into another security experiment:
the indistinguishability experiment simply prohibits any RevSessKey query which would reveal
the key of the Tested session, and the new experiment shows that only sessions which “should”
derive the same key as the Tested session in fact do.
We call the new experiment the partnering experiment, and its deﬁnition follows.
28
)
i=1
// set up a group with n− 1 identity and ephemeral keys of peers
π.λ = λ0
$
:= DHKeyGen()
$
:= KeyExchangeKeyGen()
suk
for i := 1 . . . n− 1 do // generate leaf keys for each agent
λi := ι(cid:0)KeyExchange(π.ik , IK i, suk , EK i)(cid:1)
add (λi, sid(π, σ)) to σ.HonestKeys
Algorithm 1 Asynchronous group setup
1: procedure SetupGroup((IK i, EK i)n−1
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18:
19:
20:
21:
Tsecret := CreateTree(λ0, λ1, . . . , λnpeers)
π.T := PublicKeys(Tsecret)
π.IDs := gπ.ik(cid:107)IK 1(cid:107) . . .(cid:107)IK npeers
π.EKs := gπ.ek(cid:107)EK 1(cid:107) . . .(cid:107)EK npeers
x := π.IDs, π.EKs, SUK , π.T
m := (x, Sign(x; π.ik ))
π.tk := (Tsecret)0,0
π.idx := 0
σ.(cid:96)[π.idx] := 1
σ.(cid:96)[x] := 0 for 0 < x ≤ n
π. ¯P := Copath(T, 0)
π.sk = 0
DeriveStageKey()
return m
Algorithm 2 Helper functions
1: function LeftSubtreeSize(x)
2:
3:
// height of the left subtree if there are x elements
return 2(cid:100)log2(x)(cid:101)−1
leaves
4: function CreateTree(λ0, λ1, . . . , λn) // tree with n
5:
6:
7:
if n = 0 then return (leaf, λ0)
h := LeftSubtreeSize(n)
(L, lk) := CreateTree(λ0, . . . , λ(h−1)) // complete
(R, rk) := CreateTree(λh, . . . , λn−1) // right sub-
left subtree
k := ι(cid:0)g(lk)(rk)(cid:1)
tree
8:
9:
10:
return (node((L, lk), (R, rk)), k)
11: function PublicKeys(T := node(L, R), k)
12: