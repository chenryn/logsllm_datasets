steps to ﬁx them. For example, TCA introduces certiﬁcates and
a CA model, providing a way to build trust for USB products,
and embeds private keys into USB products to provide trust
anchors. However, as we show in the TCA weakness column,
the design ﬂaws and limitations makes TCA a vulnerable and
incomplete solution for USB security.
VI. FUTURE DIRECTIONS
Through systematization, we have demonstrated that a
complete solution requires a system that composes multiple
defensive primitives across different communication layers.
Although ﬂawed, TCA is a promising start, since authenti-
cation is a necessary prerequisite to providing further security
guarantees. We sketch several future research thrusts covering
our ﬁndings that can aid in solving the USB security problem.
• Solution Integration. Because most existing USB defense
solutions focus on a single layer, it is natural to investi-
gate how to combine different solutions covering multiple
layers. For instance, combining ProvUSB, GoodUSB, and
FirmUSB provides a comprehensive defense from Human
to Transport Layer, defeating most software-based attacks.
Similarly, USBFirewall can act in combination with USB-
FILTER to provide a powerful USB packet ﬁrewall for con-
trolling USB device behavior while defending against ex-
ploits from malformed packets. These combined approaches
will simultaneously address our ﬁndings F2 and F4.
• Type-C Authentication Products Evaluation While we
have shown design ﬂaws of TCA, it is unlikely that we
will see a new version of the specﬁcation in the near future,
given that the it has just been ﬁnalized. There is therefore an
urgent need to evaluate the security of these new products,
since real-world attacks may provide the impetus for a
speciﬁcation update. It is also possible that vendor-speciﬁc
implementations have considered those pitfalls in the spec
and have offered mitigations which, once veriﬁed, will prove
convincing. This will address our ﬁndings F1 and F5.
• Bi-directional Authentication and Mutual Authentica-
tion. While the trust anchor for USB hosts is missing in
TCA, a short-term ﬁx is to leverage the trusted hardware
available on the host, such as TPM, and implement a
host authentication protocol like Kells and ProvUSB. The
possibility of doing bidirectional authentication also opens
a door to mutual authentication, where the USB host and
peripheral authenticate each other. Together with clear key
protection and revocation requirements, this may provide a
comprehensive solution to ﬁnding F3.
• Legacy Device Authentication. To authenticate legacy de-
vices, two techniques are promising, and solve the problem
in different ways. USB host ﬁngerprinting has shown the
possibility of ﬁngerprinting host machines via the USB
interface using machine learning algorithms. The same idea
could be applied to USB device ﬁngerprinting, although with
the pitfalls of building a robust machine learning system
in an adversarial environment. FirmUSB is able to under-
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:33:49 UTC from IEEE Xplore.  Restrictions apply. 
1044
13
stand the USB device ﬁrmware behavior, and providing
a stronger security guarantee than ﬁngerprinting when the
ﬁrmware is available. This combination of ﬁngerprinting and
ﬁrmware veriﬁcation can potentially mitigate most attacks
from legacy devices. Together with TCA, this will provide
a reasonable solution addressing ﬁnding F1.
• Policy Instantiation. Although security policies have been
designed and used in existing solutions such as USBFILTER
and Cinch, we need a new policy design that is general
enough to be adopted by most vendors and expressive
enough to ease creating rich rules. The new design should
enumerate a set of subject, object, and access primitives to
provide an intuitive mediation abstraction, deﬁne a common
data marshaling format (e.g., XML, JSON) through which
policies can be shared between deployments. It should also
describe best practices for policy design, including how
policies can preserve security in the presence of legacy
devices. This will not only concretize TCA with regards
to ﬁndings F2 and F4, but also promote USB security as
part of systems security solutions, such as SELinux.
VII. CONCLUSION
USB, after three generations and a recent connector change,
remains woefully problematic. In this work, we present a
structured methodology for reasoning about the nature of USB
attacks and defenses. In so doing, we discover that these vul-
nerabilities harken back to the core trust-by-default principle
of the USB speciﬁcation, and identify design tradeoffs and
principles that inform the properties of proposed defensive
solutions. Finally, we formally verify the new USB Type-C
Authentication speciﬁcation, and uncover design ﬂaws and
implementation pitfalls. We conclude with future research
directions. It is our intent that this systematization will guide
future research efforts and ultimately improve the security of
USB ecosystem.
ACKNOWLEDGEMENT
This work is supported in part by the US National Sci-
ence Foundation under grant numbers CNS-1540217, CNS-
1564140, CNS-1657534, CNS-1505790, and CNS-1518741,
and by the Department of Energy under award DE-
OE0000780.
REFERENCES
[1] CVE-2013-1285: Windows USB Descriptor Vulnerability. http://www.
cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2013-1285.
[2] CVE-2013-1286: Windows USB Descriptor Vulnerability. http://www.
cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2013-1286.
[3] CVE-2013-1287: Windows USB Descriptor Vulnerability. http://www.
cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2013-1287.
[4] TURNIPSCHOOL - NSA playset.
http://www.nsaplayset.org/
turnipschool.
[5] COTTONMOUTH-I.
https://nsa.gov1.info/dni/nsa-ant-catalog/usb/
index.html#COTTONMOUTH-I, 2008.
[6] COTTONMOUTH-II.
https://nsa.gov1.info/dni/nsa-ant-catalog/usb/
index.html#COTTONMOUTH-II, 2008.
[7] Social Engineering a USB Drive.
https://www.cmu.edu/iso/aware/
be-aware/usb.html, 2016.
[8] AIA Vision Online.
http://www.
visiononline.org/vision-standards-details.cfm?id=167&type=11, 2008.
USB3 Vision Speciﬁcation.
[9] Alex Washburn. Snowden Smuggled Documents From NSA on a
Thumb Drive. https://www.wired.com/2013/06/snowden-thumb-drive/,
2013.
[10] Alexandru Cornea. Linux-USB: [PROBLEM] USB Hub malformed
packets causes null pointer dereference. http://marc.info/?l=linux-usb&
m=144717111312054&w=2, 2016.
[11] ALLOYSEED.
GIM Answer Monitor USB Charging
Data Cable GPS Locator.
https://www.aliexpress.com/item/
1m-GPS-Positioning-Pick-up-Line-Tracker-Remote-Tracking-Cable-\
GIM-Answer-Monitor-USB-Charging-Data/32813314360.html?trace=
msiteDetail2pcDetail, 2017.
[12] S. Angel, R. S. Wahby, M. Howald, J. B. Leners, M. Spilo, Z. Sun, A. J.
Blumberg, and M. Walﬁsh. Defending against Malicious Peripherals
with Cinch. In USENIX Security Symposium, Aug. 2016.
[13] Apple and Hewlett-Packard and Intel and Microsoft and Renesas and
STMicroelectronics and Texas Instruments. Universal Serial Bus 3.2
Speciﬁcation, Revision 1.0, September 2017.
[14] J. Bang, B. Yoo, and S. Lee. Secure USB bypassing tool. digital
[15] D. Barrall and D. Dewey. Plug and Root, the USB Key to the Kingdom.
investigation, 7:S114–S120, 2010.
In Black Hat Brieﬁngs, 2005.
[16] A. Bates, R. Leonard, H. Pruse, D. Lowd, and K. R. B. Butler.
Leveraging USB to Establish Host Identity Using Commodity Devices.
In Proceedings of the 21st ISOC Network and Distributed System
Security Symposium (NDSS’14), San Diego, CA, USA, Feb. 2014.
[17] A. Bates, D. Tian, K. R. Butler, and T. Moyer. Trustworthy Whole-
System Provenance for the Linux Kernel. In Proceedings of the 24th
USENIX Security Symposium, Aug. 2015.
[18] Benson Leung. Surjtech’s 3M USB A-to-C cable completely violates
the USB spec. Seriously damaged my laptop. https://www.amazon.
com/review/R2XDBFUD9CTN2R/ref=cm cr rdp perm, 2016.
[19] K. Bhargavan, B. Blanchet, and N. Kobeissi. Veriﬁed models and
reference implementations for the TLS 1.3 standard candidate.
In
Proceeding of the 2017 IEEE Symposium on Security and Privacy
(S&P), 2017.
[20] Binyamin Sharet.
setup requests.
delegation of
147102748419146&w=2, 2016.
Linux-USB: Gadgetfs - adding support
for
http://marc.info/?l=linux-usb&m=
[21] B. Blanchet, V. Cheval, X. Allamigeon, and B. Smyth. ProVerif: Cryp-
tographic protocol veriﬁer in the formal model. URL http://prosecco.
gforge. inria. fr/personal/bblanche/proverif, 2010.
[22] T. Bosschert. Battling Anti-Forensics: Beating the U3 Stick. Journal
of Digital Forensic Practice, 1(4):265–273, 2007.
[23] S. Bratus, T. Goodspeed, P. C. Johnson, S. W. Smith, and R. Speers.
Perimeter-crossing buses: a new attack surface for embedded systems.
In Proceedings of the 7th Workshop on Embedded Systems Security
(WESS 2012), 2012.
[24] M. Brocker and S. Checkoway.
iSeeYou: Disabling the MacBook
webcam indicator LED. In 23rd USENIX Security Symposium (USENIX
Security 14), pages 337–352, 2014.
[25] K. Butler, S. McLaughlin, and P. McDaniel. Kells: A Protection
In Proceedings of the 26th Annual
Framework for Portable Data.
Computer Security Applications Conference, 2010.
[26] C. Castelluccia, A. Francillon, D. Perito, and C. Soriente. On the
Difﬁculty of Software-based Attestation of Embedded Devices.
In
Proceedings of the 16th ACM Conference on Computer and Commu-
nications Security, CCS ’09, 2009.
[27] A. Caudill and B. Wilson. Phison 2251-03 (2303) Custom Firmware
& Existing Firmware Patches (BadUSB). GitHub, 26, Sept. 2014.
[28] CBS/AP.
BlackShades malware
FBI
says.
hijacked
a million
http://www.cbsnews.com/news/
half
computers,
blackshades-malware-hijacked-half-a-million-computers-fbi-says/,
2014. Accessed: 2016-11-10.
[29] Center for Development of Security Excellence. Security Posters. http:
//www.cdse.edu/resources/posters.html.
[30] Common Vulnerabilities and Exposures. CVE-2006-2147. https://cve.
mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2147, 2006.
[31] Common Vulnerabilities and Exposures. CVE-2010-2568. https://cve.
mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2568, 2010.
[32] Compaq and Digital Equipment Corporation and IBM PC Company
and Intel and Microsoft and NEC and Northern Telecom. Universal
Serial Bus Speciﬁcation, Revision 1.0, January 1996.
[33] Compaq and Intel and Microsoft and NEC. Universal Serial Bus
Speciﬁcation, Revision 1.1, September 1998.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:33:49 UTC from IEEE Xplore.  Restrictions apply. 
1045
14
[34] Comptia.
in
Cyber
secure:
the workplace.
habits
cyber-secure-a-look-at-employee-cybersecurity-habits-in-the-workplace,
2015.
look at
cybersecurity
https://www.comptia.org/resources/
employee
a
[35] A.
Cunningham.
https://arstechnica.com/gadgets/2014/08/
a-brief-history-of-usb-what-it-replaced-and-what-has-failed-to-replace-it/.
[36] Dan Patterson.
How to build an external GPU for 4K video
http://www.techrepublic.com/article/
editing, VR, and gaming.
how-to-build-an-external-gpu-for-4k-video-editing-vr-and-gaming/,
2016.
to
[37] Darren
foreign
http://www.itnews.com.au/news/
secret-defence-documents-lost-to-foreign-intelligence-278961, 2011.
[38] A. Davis. Lessons learned from 50 bugs: Common USB driver
vulnerabilities. Technical report, technical report, NCC Group, 2013.
[39] A. Davis. Revealing Embedded Fingerprints: Deriving Intelligence
intelligence.
documents
defence
Secret
Pauli.
lost
from USB Stack Interactions. In Blackhat USA, July 2013.
[40] S. A. Diwan, S. Perumal, and A. J. Fatah. Complete security package
for USB thumb drive. Computer Engineering and Intelligent Systems,
5(8):30–37, 2014.
[41] Dominic Spill. USBProxy. https://github.com/dominicgs/USBProxy,
2014.
[42] Elizabeth Weise.
employee.
hacker-social-engineering-defcon-black-hat/88621412/, 2016.
nice
http://www.usatoday.com/story/tech/news/2016/08/15/
A hacker’s
friend
[43] Ellisys. USB Explorer 200 USB 2.0 Protocol Analyzer. http://www.
best
is
a
ellisys.com/products/usbex200/index.php, 2013.
[44] Falliere, Nicolas and Murchu, Liam O and Chien, Eric. W32.Stuxnet
https://www.symantec.com/content/en/us/enterprise/media/
Dossier.
security response/whitepapers/w32 stuxnet dossier.pdf, 2011.
[45] N. Fitzgibbon and M. Wood. Conﬁcker. C: A technical analysis.
SophosLabs, Sophon Inc, 2009.
[46] P. Goldstein.
4 Ways
FedTech, July 2017.
4-ways-prevent-leaks-usb-devices.
to Prevent Leaks via USB Devices.
https://fedtechmagazine.com/article/2017/07/
[47] GoodFET.
Facedancer21.
http://goodfet.sourceforge.net/hardware/
facedancer21/, 2016.
[48] Google. Found Linux kernel USB bugs. https://github.com/google/
syzkaller/blob/master/docs/linux/found bugs usb.md, 2017.
[49] M. Guri, M. Monitz, and Y. Elovici. USBee: air-gap covert-channel via
In Privacy, Security and Trust
electromagnetic emission from USB.
(PST), 2016 14th Annual Conference on, pages 264–268. IEEE, 2016.
http://hak5.org/
[50] Hak5. Episode 709: USB Rubber Ducky Part 1.
episodes/episode-709, 2013.
USB-Rubber-Ducky/wiki/Payloads, 2013.
[52] G. Hernandez, F. Fowze, D. J. Tian, T. Yavuz, and K. Butler. FirmUSB:
Vetting USB Device Firmware using Domain Informed Symbolic Ex-