本章小结
MongoDB..
OracleXE...
本章小结·
11.5.4
11.5.3
11.5.2
11.5.1
LAMP...
Weblogic
Tomcat...
Nginx
在PHP程序中连接数据库·120
部署自己·的PHP..120
使用默认方式启动LAMP
....
下载.AMP·像.19
..130
...153
.1..
12.
---
## Page 13
第14章
14.4
14.3
14.2
14.1
13.9本章小结
13.8
13.6Ruby..
使用私有仓库批量上传镜像.1.86
使用私有仓库
13.8.5相关资源..
13.8.4
13.8.3
13.8.2
13.8.1Go技术
Go..
13.7.5
13.7.4
13.7.3
13.7.2
13.6.5相关资源
13.6.3
13.6.1R
13.5.3相关资源..
13.5.2
13.5.1
13.4.4.源.1.59
13.4.3
相关资源
Ruby on Rails....
Ruby技术栈.
Catalyst.....
Express...
Perl技术.
Django.....
...8
181
第18.Docker核心技术.23.
第17章Docker实践之道...
第16章在公有云上使用Docker.202
第15章.建Docker容器集群.1.97
18.2
18.1
17.1
16.3本章小结
16.2
16.1安装Dck.202
17.3
14.5本章小
17.2
15.3
15.2
15.1
基本架
个人学》之道…
阿里云Docker的特色服务..207
使用自定义网桥连接跨主机容器197
17.3.2应用Docker到生产环境.220
17.3.1开发、测试和发布中
中小业实·道.2.
技术创·道…
17.1.2
17.1.1温故而知新
16.1..U.un.4..4.统….2.07
第三部分
16.1...en..6.·.202
2众人拾柴火焰高
高级话题
.21.
.215
.200
214
---
## Page 14
第19章Docker安全
XII
19.6章.·.
19.1命名空间隔离的安全….
18.5
18.3控制组
20.6
20.5
20.4
20.3
20.2
20.1
19.5
19.4
19.3
19.2
18.6
配置容器.DNS主机名.240
网络启动与配置参数
控制组资源控制的安全
本章小·
自定义网桥·
配.do.ckro.·....
映射容器端口到宿主主机
容器·控
D.ockr...
其他安特性
的实现
Docker服务端的防护
内核能
........c..
241
.234
233
附录.D.ckr·查.9.
附录B常见仓库
附录题..
第21章.Dockr相关项.252
附录D
2.1..·即务方.25
20.9本章小·
21.2持续集.
20...项..
20.7.创建个点到点接*.24.
21.6本章小结·
21.5
21.4
21.3
D.ock源.接.9
其他项目
编程开发
管理工.
附
..253
..7.
267
5.5.11
LR
---
## Page 15
门
口
■第7章
Docker 入门
■第8章
第5
第一部分7a
第1章
章
使用Dockerfile创建镜像
网络基础配置
数据管理
仓
容
镜像
Docker的核心概念和安装
初识Docker
库
---
## Page 16
事项。
第8章介绍如何编写Dockerfile，以及使用Dockerfile配置文件来创建镜像的具体方法和注意
用数据卷来保存数据；第7章介绍如何使用容器网络，特别是使容器访问外网和其他容器；
第3章第5章通过具体的示例操作讲解Docker的常用命令；第6章剖析如何在Docker中使
系；第2章介绍Docker的三大核心概念，以及如何在常见的操作系统环境中安装Docker；
2第一部分Docker入门
第1章介绍Docker开源项目以及它与现有的虚拟化技术，特别是Linux容器技术的关
在这一部分里，笔者将介绍Docker的基础知识，本部分分为8章。
欢迎来到Docker的世界！
---
## Page 17
Docker的生态体系。dotCloud公司后来也改名为DockerInc，专注于Docker相关技术和产
公司。Docker自开源后受到广泛的关注和讨论，目前已有多个相关项目，逐渐形成了围绕
Docker开源项目
1.1什么是Docker
域中的定位。
系，以及在开发和运维中使用Docker的突出优势。最后，还将阐述Docker在整个虚拟化领
甚至有人把它称为新一代的虚拟化技术。Docker毫无疑问就是其中的者。
虚拟化方案，更是充分利用了操作系统本身已有的机制和特性，可以实现轻量级的虚拟化
富和创新。
年代IBM推出的大型主机虚拟化到后来X86平台上的虚拟化，虚拟化技术自身也在不断丰
时代，虚拟化技术无疑是整座信息技术大厦最核心的一块基石。
伴随着信息技术产业的发展，虚拟化技术已经应用到各种关键场景中。从最早上世纪60
Docker是基于Go语言实现的云开源项目，
本章在介绍Docker项目的起源和发展之后，会剖析Docker和Linux容器技术的密切联
那么，什么是Docker？它会带来什么好处？它跟现有虚拟化技术又有何关系呢？
虚拟化既可以通过硬件模拟来实现，也可以通过操作系统来实现。而近些年出现的容器
如果说个人主机时代大家比拼的关键是CPU主频的高低和内存的大小，那么在云计算
诞生于2013年初，最初发起者是dotCloud
初识Docker
第1章
Chiopte
---
## Page 18
Linux系统轻量级容器技术的事实标准。
具扩展性的虚拟化容器方案。更加关键的是，LXC 被集成到了主流Linux内核中，进而成为
就需要先给操作系统打上特定的内核补丁方可使用。
被集成到主流的Linux内核中，使用起来并不方便。例如，如果用户要使用OpenVZ技术，
）（
布），FreeBSD操作系统上的FreeBSD jail（2000年左右出现），以及GNU/Linux上的Linux
工具）。早期的容器实现技术包括SunSolaris操作系统上的SolarisContainers（2004年发
操作系统上的chroot工具（直到今天，主流的Unix、Linux操作系统仍然支持和带有该
准虚拟化（paravirtualization）和系统调用替换中的复杂性。
译。容器可以在核心CPU本地运行指令，而不需要任何专门的解释机制。此外，也避免了
间平衡有冲突的资源使用需求。与虚拟化相比，这样既不需要指令级模拟，也不需要即时编
上给出了关于容器技术的准确描述：
Linux容器技术
站式”的解决方案。
多种主流云平台（PaaS）和本地系统上部署。可以说Docker为应用的开发和部署提供了“一
应用，也可以是一套数据库服务，甚至是一个操作系统或编译器。
管理，达到应用组件级别的“一次封装，到处运行”。这里的应用组件，既可以是一个Web
封装（Packaging）、分发（Distribution）部署（Deployment）运行（Runtime）等生命周期的
出了AwSEC2Container，提供对Docker的支持。
Docker公司合作，以加强其云平台Azure 对Docker的支持。公有云提供商亚马逊近期也推
在其PaaS（Platform asa Service）平台及服务产品中广泛应用了Docker。微软公司宣布和
仅次于OpenStack的最受欢迎的云计算开源项目。
https://github.com/docker/docker上进行维护。在最近一次Linux基金会的调查中，Docker是
品的开发。
4第一部分Docker入门
上的操作系统、Ubuntu14.04操作系统，都已经默认带有Docker软件包。Google公司宣称
虽然这些技术经过多年的演化已经十分成熟，但是由于种种原因，这些容器技术并没有
后来LXC项目借鉴了前人成熟的容器设计理念，并基于一系列新的内核特性实现了更
Linux容器其实不是一个全新的概念。最早的容器技术可以追溯到1982年Unix系列
容器有效地将由单个操作系统管理的资源划分到孤立的组中，以便更好地在孤立的组之
Docker基于Linux的多项开源技术提供了高效、敏捷和轻量级的容器方案，并且支持在
Docker 引擎的基础是Linux 容器（Linux Containers，LXC）技术。IBM DeveloperWorks
现在主流的Linux操作系统都已经支持Docker。例如，RedhatRHEL6.5/CentOS6.5往
Docker项目目前已加人了Linux基金会，遵循Apache 2.0协议，全部开源代码均在
---
## Page 19
Docker在开发和运维中的优势
问题的风险。
的服务器上启动需要的容器就可以了。这无疑将节约大量的宝贵时间，并降低部署过程出现
和调试。这些琐碎而无趣的“体力活”，极大地降低了工作效率。
加难以处理。
意味着更多的时间代价和不可控的风险。可以想象，如果再加上更多的应用，事情会变得更
配置参数等）；经过大量的操作后，还需要进行功能测试，看是否工作正常；如果不正常，则
和PHP以及它们各自运行所依赖的环境；之后分别对它们进行配置（包括创建合适的用户
MySQL+PHP）组合来运维一个网站。按照传统的做法，首先，需要安装Apache、MySQL
提供的。
点”可获取的。因此，开发者们需要一种创建分布式应用程序的方式，这也是Docker所能够
云平台上的应用，也就是说应用必须能够脱离底层机器，而且同时必须是“任何时间任何地
正确的时间顺应了正确的趋势一
Docker容器虚拟化的好处
现，得到更广泛的应用。
也没有任何问题。
自身对资源的需求也十分有限，远远低于虚拟机。很多时候，甚至直接把容器当作应用本身
不同的容器相互隔离，容器之间也可以建立通信机制。容器的创建和停止都十分快速，容器
器。用户操作Docker容器就像操作一个轻量级的虚拟机那样简单。
工具（如分发、版本、移植等）让用户无需关注底层的操作，可以简单明了地管理和使用容
1.2
从Linux容器到Docker
更为可怕的是，一旦需要服务器迁移（例如从阿里云迁移到腾讯云），往往需要重新部署
举个简单的应用场景的例子。假设用户试图基于最常见的LAMP（Linux+Apache-
而Docker提供了一种更为聪明的方式，通过容器来打包应用，意味着迁移只需要在新
Docker项目的发起人和 Docker Inc.的CTO Solomon Hykes认为，Docker在正确的地点
有理由相信，随着Docker技术的进一步成熟，它将成为更受欢迎的容器虚拟化技术实
读者可以简单地将Docker容器理解为一种沙盒（Sandbox）。每个容器内运行一个应用，
在LXC的基础上，Docker进一步优化了容器的使用体验。Docker提供了各种容器管理
对开发和运维（DevOps）人员来说，
为什么要使用Docker
一即高效地构建应用。现在开发者需要能方便地创建运行在
，可能最梦寐以求的就是一次性地创建或配置，可以
第1章初识Docker
口
---
## Page 20
始，Docker引人了安全选项和镜像签名机制，极大地提高了使用Docker的安全性。
就不安全。Docker利用Linux系统上的多种防护机制实现了严格可靠的隔离。从1.3版本开
应用放到容器内即可。
拟机需要单独分配独占的内存、磁盘等资源），而Docker只需要启动N个隔离的容器，并将
时，尽量减小系统开销。传统虚拟机方式运行N个不同的应用就要启动N个虚拟机（每个虚
优势：
Docker与虚拟机比较
军刀。
在任意环境、任意时间让应用正常地运行。而 Docker恰恰是可以实现这一终极目标的瑞士
6第一部分Docker入门
当然，在隔离性方面，传统的虚拟机方式多了一层额外的隔离。但这并不意味着Docker
作为一种轻量级的虚拟化方式，Docker在运行应用上跟传统的虚拟机方式相比具有显著
下表总结了使用Docker容器技术与传统虚拟机技术的特性比较。
Docker容器除了运行其中的应用之外，基本不消耗额外的系统资源，保证应用性能的同
口Docker通过Dockerfile配置文件来支持灵活的自动化创建和部署机制，提高工作
口Docker通过类似Git的操作来方便用户获取、分发和更新应用镜像，指令简明，学习
口Docker容器对系统资源需求很少，
口Docker容器很快，启动和停止可以在秒级实现，这相比传统的虚拟机方式要快得多
口更简单的更新管理。使用Dockerfle，只需要小小的配置修改，就可以替代以往大量
口更轻松的迁移和扩展。Docker容器几乎可以在任意的平台上运行，包括物理机、虚拟
口更高效的资源利用。Docker容器的运行不需要额外的虚拟化管理程序（Virtual
口更快速的交付和部署。使用Docker，开发人员可以使用镜像来快速构建一套标准
具体说来，Docker在开发和运维过程中，具有如下几个方面的优势。
效率。
成本较低。
效的容器管理。
的更新工作。并且所有修改都以增量的方式进行分发和更新，从而实现自动化并且高
间轻松地迁移应用。
机、公有云、私有云、个人电脑、服务器等。这种兼容性让用户可以在不同平台之
更高的性能，同时对资源的额外需求很低。
MachineManager，VMM，以及Hypervisor）支持，它是内核级的虚拟化，可以实现
应用的创建和工作过程。
间。并且，各个步骤都有明确的配置和操作，整个过程全程可见，使团队更容易理解
Docker可以快速创建和删除容器，实现快速迭代，大量节约开发、测试、部署的时
的开发环境；开发完成之后，测试和运维人员可以直接使用相同环境来部署代码。
一台主机上可以同时运行数千个Docker容器。
---
## Page 21
者又可以细分为如下几个子类：
虚拟机技术即属于这个范畴)。其中，前者一般指的是一些模拟设备或Wine 这样的软件。后
Virtualization and Sharing Specification，SR-IOV）等技术，也超出了本书的讨论范畴。
意义上的基于硬件的虚拟化技术不多见，少数如网卡中的单根多IO虚拟化（Single Root I/O
或应用，从而提高系统资源的利用率，同时带来降低成本、方便管理和容错容灾等好处。
可切割的障碍，使用户可以用比原本的组态更好的方式来应用这些资源。
资源，如服务器、网络、内存及存储等，予以抽象、转换后呈现出来，打破实体结构间的不
算虚拟化（ComputingVirtualization），或通常说的服务器虚拟化。维基百科上的定义如下：
1.3
基于软件的虚拟化从对象所在的层次，又可以分为应用虚拟化和平台虚拟化（通常说的
，从大类上分，虚拟化技术可分为基于硬件的虚拟化和基于软件的虚拟化。其中，真正
可见，虚拟化的核心是对资源进行抽象，目标往往是为了在同一个主机上运行多个系统
口完全虚拟化。虚拟机模拟完整的底层硬件环境和特权指令的执行过程，客户操作系统
在计算机技术中，虚拟化（Virtualization）是一种资源管理技术，是将计算机的各种实体
虚拟化技术是一个通用的概念，在不同领域有不同的理解。在计算领域，一般指的是计
Docker虚拟化方式之所以拥有众多优势，这跟操作系统的虚拟化自身的特点是分不开
可见，Docker以及其他容器技术都属于操作系统的虚拟化这个范畴。
口操作系统级虚拟化。内核通过创建多个虚拟的操作系统实例（内核和库）来隔离不同
口超虚拟化（Paravirtualization）。部分硬件接口以软件的形式提供给客户机操作系统，