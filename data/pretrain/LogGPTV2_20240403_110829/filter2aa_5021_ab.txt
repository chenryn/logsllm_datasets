 בניסיון הראשון
ניסיתי לערוך את שדה ה-Security code, אך זה לא עבד. השלב ההגיוני הבא היה לערוך את שם המשתמש:
התוצאה:
רפרנס לקומיקס המיתולוגי של xkcd:
&nbsp;
אתגר 3 - No pain no gain (רמת קושי
קלה, 250 נקודות)
&nbsp;
הוראות האתגר:
https://www.youtube.com/watch?v=1Wh8RzcQZr4
URL: http://challenges.owaspil.ctf.today:8092/
פתרון:
ההוראות מפנות
לסרטון שנקרא &quot;Hilarious Cat Fails&quot;.
האתר עצמו הוא אתר
תדמיתי לחברת שקר כלשהי, כאשר הקלט היחיד הבולט לעין הוא מקום להכניס כתובת
אימייל:
אולם, הכיוון הזה לא
מוביל לשום מקום.
הצעד הבא היה לנסות
לסייר קצת באתר, למשל – לנסות להיכנס לכתובת שלא קיימת:
ה-Apache Tomcat הזכיר לי את ה- Cat Failsמהסרטון. איסוף מידע בגוגל אודות Tomcat גילה שקיים ממשק
ניהול בכתובת /manager (במקרה שלנו: http://challenges.owaspil.ctf.today:8092/manager/)
וכאשר ניסיתי להיכנס אליו, קיבלתי את המסך הבא:
עוד קפיצה לגוגל
מגלה שברירת המחדל היא tomcat:tomcat, ואנחנו בתוך ממשק הניהול:
שימו לב לקישור הבא:
לחיצה על הקישור
מובילה אל הדגל:
OWASP-IL{D0ntF0rg3tT0Ch4ng3D3f4ulTP455w0rds!}
&nbsp;
אתגר 4 - Curriculum Vitea (רמת קושי
קלה, 250 נקודות)
&nbsp;
הוראות האתגר:
I got client-side attack while i go to my CV landing page!
Can you catch the flag?
URL: http://challenges.owaspil.ctf.today:8091/
פתרון:
לחיצה על הקישור
מובילה לאתר תדמיתי:
בדיקה של קוד המקור
של האתר מגלה את הקוד החשוד הבא:
```html
```
את הקוד אפשר לפענח
בעזרת ה-Unpacker הזה, למשל:
```javascript
setInterval(function(){debugger},100);
"use strict";
window.onload=getExif;
function getExif(){
     var a=document.getElementById("profileImage");
     EXIF.getData(a,function(){ eval(atob(EXIF.getTag(this,"Model")
.split("").reverse().join("")))})
}
```
כלומר, הפונקציה
מריצה קוד שמופיע ב-metadata של תמונת הפרופיל של בעל האתר.
נראה שמדובר ב-base64 (הפוך), לאחר היפוך
התהליך מקבלים:
<img border=0 width=602 height=239