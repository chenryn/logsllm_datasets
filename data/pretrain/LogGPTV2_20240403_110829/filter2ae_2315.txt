作者：[phith0n@长亭科技](https://www.leavesongs.com/PENETRATION/unobfuscated-phpjiami.html "phith0n@长亭科技")
Pwnhub 公开赛出了个简单的 PHP 代码审计题目，考点有两个：
  1. 由  加密过的源码还原
  2. 上传取后缀方式不同导致的文件上传漏洞
如果说仅为了做出题目拿到 flag，这个题目太简单，后台也有数十名选手提交了答案和 writeup。但深入研究一下这两个知识点，还是很有意思的。
首先通过简单的目录扫描，找到备份文件
index.php.bak。下载后发现文件是经过了混淆加密处理的，大部分同学是直接网上找了付费解密的网站给解的，也有少数几个人说明了解密方法，我挑几种方法说一下。
#### 0x01 phpjiami 代码分析破解法
这种方法我最佩服了，作者甚至给出了解密脚本，文章如下：  。
我自己在出题目之前也进行过分析，但后面并没有耐心写一个完整的脚本出来，所以我十分佩服这个作者。
我们分析 phpjiami 后的文件，可以看到他有如下特点：
  1. 函数名、变量名全部变成“乱码”
  2. 改动任意一个地方，将导致文件不能运行
之所以函数名、变量名可以变成“乱码”，是因为PHP的函数名、变量名是支持除了特殊符号以外大部分字符的，比如汉字等。利用这一特点，phpjiami
就将所有正常的英文变量给转换了一下形式，其实没有什么特别的奥秘。
那么，为了方便分析，我们可以想办法再将其转换回英文和数字。比如，作者使用的是 
对混淆过的代码进行美化；而我是使用 
对整个代码进行了结构化的分析，并将所有变量和函数名进行了美化。
方法一的好处是我不需要写任何代码，就可以大致进行美化，但显然，美化后的代码是有错误的，原文中也提到了这一点；方法二，虽然需要自己写代码，但美化后的代码没有语法错误，看起来更加直观，并且我还能进一步的进行美化，比如将字符串中的乱码转换成\x的形式。
我美化后的代码如下：
后续的操作和上文也差不多，通过源码的分析，正如上文中所说，phpjiami 加密源码的整个流程是：
> 加密流程：源码 -> 加密处理（压缩，替换，BASE64，转义）-> 安全处理（验证文件 MD5 值，限制
> IP、限域名、限时间、防破解、防命令行调试）-> 加密程序成品，再简单的说：源码 + 加密外壳 == 加密程序 (该段出处)
所以，其实这种方法并没有对源码进行混淆，只是对“解密源码的壳”进行了混淆。所以你看到的中文变量、中文函数，其实是一个壳，去掉这层壳，我可以拿到完整的PHP源码。
所以呀，后台提交的 writeup 里，有的同学想当然地认为修改 eval 为 echo
就能输出源码了……实际上根本没实际试过，改动文件是会导致不能运行的；还有同学认为这里仅是将源码混淆为用户体验极差的代码，导致人眼无法阅读，并没有理解这里其实混淆的不是源码。
#### 0x02 HOOK EVAL 法
0x01中说到的方法固然是很美好的，但是假如加密者随意改动一点加密的逻辑，可能导致我们需要重新分析加密方法，写解密脚本。我们有没有更通用的方法？
HOOK EVAL应该是被提到过最多的方法，我也看到了 Medici.Yan
发布的一篇[文章](http://blog.evalbug.com/2017/09/21/phpdecode_01/ "文章")。
我前文说过，phpjiami 其实是只是混淆了壳，这个壳的作用是执行真正的源码。那么，执行源码必然是会经过 eval
之类的“函数”（当然也不尽然），那么，如果我们能够有办法将 eval 给替换掉，不就可以获得源码了么？
遗憾的是，如果我们仅仅简单地将 eval 替换成 echo，将导致整个脚本不能运行——因为 phpjiami 检测了文件是否被修改。
那么，我们可以寻求更底层的方法。就是很多人以前提到过的，将 PHP 底层的函数 `zend_compile_string`
给拦截下来，并输出值。Medici.Yan 的文章中说的很清楚，也给出了参考文档和源码，我就不再赘述了。
我自己简单写了一个扩展，并用 php5.6 编译：
下载之，在 php.ini 中添加 `extension=hookeval.so`，然后直接访问加密过的 php 代码即可（当时参考 tool.lu 的站长
xiaozi 的[代码](http://type.so/c/php-dump-eval.html "代码") ，所以分隔符里有关键字）：
16年 kuuki
曾分享过一个[在线解密的工具](https://xianzhi.aliyun.com/forum/read/64.html>'gif', 0=>'php']`或者`['0'=>'abc', '2'=>'gif', '100'=>'php']`。
#### 0x06 总结
最后想说一句话：不求甚解是阻碍部分人进步的一大阻力。共勉。
* * *