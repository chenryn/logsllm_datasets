### Introduction
Our work is distinct from existing studies, as it specifically targets the collection of web push notification (WPN)-based ads and measures the prevalence of malicious content within them. Previous research has not focused on recording or analyzing information related to service workers (SWs) and WPNs.

### Online Scams and Ad Blockers
Several approaches [23, 30, 59] have been proposed to evaluate the effectiveness of ad-blocking techniques and the countermeasures employed by ad providers to bypass these blockers. Other studies [27, 37, 46] have explored various online scam techniques and the prevalence of internet fraud. Although our system, PushAdMiner, does not focus on blocking malicious ads or online scams, we demonstrate that current ad-blocking methods are ineffective against malicious WPN ads.

### Discussion and Limitations

#### Blocking Malicious WPN Ads
In Section 6.4, we demonstrated that popular ad blockers and filtering rules were not effective in mitigating WPN ads due to the limited visibility that browser extensions had over SW activities. This issue was primarily due to Chromium bugs, which have since been fixed or are in the process of being fixed [7]. Even though extensions may now be able to observe and block SW requests, it remains unclear whether this will be sufficient to block WPN ads or if new evasion mechanisms can be implemented by push ad networks.

A browser extension called AdBlaster [2] claims to block WPN ads. However, it simply disables all push notifications, including benign non-ad ones, which can disrupt legitimate uses of WPN messages. While our PushAdMiner system is not currently designed to detect malicious WPN ads in a fully automated way, the results from our study provide valuable insights into the malicious use of WPN ads. These insights may help the security research community develop better defenses against the abuse of web push notifications.

#### Double Permissions
In our study, we observed that some websites do not directly request permission to send notifications to the browser. Instead, they create a dynamic JavaScript-based prompt that mimics a browser permission request, a practice known as "double permission." This mechanism is used to avoid being permanently blocked from requesting notification permissions in the future or to bypass other policy restrictions. We noted that double permission gained popularity only recently, months after our initial data collection.

To assess the impact of double permission on our dataset, we conducted an experiment on a random sample of 200 URLs that previously requested permission directly. We found that only about one-fourth (49 out of 200 URLs) had switched to using double permission. This change does not affect our analysis of WPN abuse. For example, PushAdMiner could be configured to bypass this mechanism by granting notification permission to all visited sites, regardless of whether they request it. Since double permission dialog boxes typically appear only when the website does not already have notification permission, they can be avoided altogether.

#### Evading Crawling Detection
Websites may attempt to detect browser automation to avoid being crawled. To mitigate this, we built our crawlers using Puppeteer, a tool developed by the Chromium team that leverages DevTools and is less prone to fingerprinting. During our experiments, we also observed that some ad networks use cookies or other information to track devices or web browsers across browsing sessions. To address this, we created a separate Docker container for each URL we visited, increasing our chances of receiving fresh notification permission requests from as many sources as possible.

### Conclusion
In this paper, we have studied the use of web push notifications (WPNs) for delivering ads and measured the prevalence of malicious ads among them. To facilitate this study, we developed PushAdMiner, a system that allowed us to automatically collect and analyze 21,541 WPN messages across thousands of different websites. Our system identified 572 WPN ad campaigns, comprising 5,143 WPN-based ads, of which 51% were found to be malicious. We also found that traditional ad-blockers and malicious URL filters are remarkably ineffective against WPN-based malicious ads, leaving a significant abuse vector unchecked.

### Acknowledgments
We would like to thank the anonymous reviewers for their constructive comments and suggestions on how to improve this paper, and Prof. Paul Barford for serving as our shepherd. This material is based in part upon work supported by the National Science Foundation (NSF) under grants No. 1916500 and 1909856. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF.

### References
[References are listed as provided, with no changes made.]