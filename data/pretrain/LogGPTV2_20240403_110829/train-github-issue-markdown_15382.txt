### System Information
- **OpenCV Version:** Latest pull from git (3.1.0-1483-g73a8fa8)
- **Operating System/Platform:** Ubuntu Linux 16.04, Kernel 4.7.5
- **Compiler:** Not specified

### Issue Location
The issue occurs during the `make` process. The CMake configuration step appears to complete without errors, but I am not fully confident in this assessment due to my limited understanding of CMake.

### Detailed Description
I am encountering a similar error to #6500, but it is not a duplicate because I am using CUDA 8 instead of CUDA 7.5. I have tried all the fixes mentioned in that issue, but the problem persists.

**Error Details:**
- **Building NVCC (Device) Object:**
  - File: `modules/core/CMakeFiles/cuda_compile.dir/src/cuda/cuda_compile_generated_gpu_mat.cu.o`
  - Inclusion Path: 
    - `/home/brian/opencv/opencv/modules/core/include/opencv2/core.hpp:3195`
    - `/home/brian/opencv/opencv/modules/core/include/opencv2/core/cuda.hpp:51`
    - `/home/brian/opencv/opencv/modules/core/src/cuda/gpu_mat.cu:51`
  - Warning: `"CV_XADD" redefined` at `/home/brian/anaconda2/include/opencv2/core/operations.hpp:72`
  - Errors: Multiple undefined identifier errors in `/home/brian/anaconda2/include/opencv2/core/mat.hpp`
  - Error Limit Reached: 100 errors detected in the compilation of `/tmp/tmpxft_00003ea1_00000000-11_gpu_mat.compute_37.cpp1.ii`
  - Compilation Terminated
  - CMake Error: Failed to generate file `/home/brian/opencv/opencv/build/modules/core/CMakeFiles/cuda_compile.dir/src/cuda/./cuda_compile_generated_gpu_mat.cu.o`
  - Makefile Error: Target `modules/core/CMakeFiles/opencv_core.dir/all` failed
  - Final Error: `make: *** [all] Error 2`

### Steps to Reproduce
1. Follow the instructions from the blog post: [Building a Digits Dev Machine on Ubuntu 16.04](https://blog.kickview.com/building-a-digits-dev-machine-on-ubuntu-16-04/)
2. Skip the Python environment setup.
3. Clone the OpenCV and OpenCV Contrib repositories:
   ```sh
   git clone https://github.com/opencv/opencv.git
   git clone https://github.com/opencv/opencv_contrib.git
   ```
4. Navigate to the OpenCV directory and create a build directory:
   ```sh
   cd opencv && mkdir build && cd build
   ```
5. Install dependencies and configure CMake with the following options:
   ```sh
   cmake \
   -D CMAKE_BUILD_TYPE=RELEASE \
   -D CMAKE_INSTALL_PREFIX=/usr/local \
   -D WITH_CUDA=ON \
   -D CUDA_ARCH_BIN="5.2" \
   -D CUDA_ARCH_PTX="5.2" \
   -D CUDA_GENERATION=Kepler \
   -D ENABLE_FAST_MATH=1 \
   -D CUDA_FAST_MATH=1 \
   -D WITH_CUBLAS=1 \
   -D INSTALL_PYTHON_EXAMPLES=ON \
   -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
   -D BUILD_EXAMPLES=ON ..
   ```
6. Additionally, add `-D_FORCE_INLINES` in `opencv/cmake/OpencvDetectCuda.cmake`.

This should reproduce the issue.