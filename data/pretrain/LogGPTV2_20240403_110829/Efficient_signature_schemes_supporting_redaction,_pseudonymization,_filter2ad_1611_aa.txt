title:Efficient signature schemes supporting redaction, pseudonymization,
and data deidentification
author:Stuart Haber and
Yasuo Hatano and
Yoshinori Honda and
William G. Horne and
Kunihiko Miyazaki and
Tomas Sander and
Satoru Tezoku and
Danfeng Yao
Efﬁcient signature schemes supporting redaction,
pseudonymization, and data deidentiﬁcation
∗
Stuart Haber
Hewlett-Packard
PI:EMAIL
∗
William Horne
Hewlett-Packard
†
Yasuo Hatano
Hitachi Ltd.
PI:EMAIL
†
Kunihiko Miyazaki
Hitachi Ltd.
†
Yoshinori Honda
Hitachi Ltd.
PI:EMAIL
∗
Tomas Sander
Hewlett-Packard
PI:EMAIL
PI:EMAIL
†
Satoru Tezoku
Hitachi Ltd.
PI:EMAIL
‡
Danfeng Yao
Rutgers University
PI:EMAIL
PI:EMAIL
ABSTRACT
In this paper we give a new signature algorithm that allows
for controlled changes to the signed data. The change op-
erations we study are removal of subdocuments (redaction),
pseudonymization, and gradual deidentiﬁcation of hierarchi-
cally structured data. These operations are applicable in
a number of practically relevant application scenarios, in-
cluding the release of previously classiﬁed government docu-
ments, privacy-aware management of audit-log data, and the
release of tables of health records. When applied directly to
redaction, our algorithm improves on [18] by reducing signif-
icantly the overhead of cryptographic information that has
to be stored with the original data.
Categories and Subject Descriptors
H.2.7 [Database Management]: Database Administra-
tion—Security, integrity, and protection; K.6.5 [Management
of Computing and Information Systems]: Security and
Protection
General Terms
Security, Algorithms
∗HP Labs, 5 Vaughn Drive, Suite 301, Princeton, NJ 08540,
USA†Hitachi Ltd., Systems Development Laboratory 292,
Yoshida-cho, Totsuka-ku, Yokohama-shi, Kanagawa-ken,
244-0817, Japan
‡Department of Computer Science, Rutgers University, 110
Frelinghuysen Road, Piscataway, NJ 08854-8019, USA.
Work done while at HP Labs.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS Tokyo, March 2008
Copyright 200X ACM X-XXXXX-XX-X/XX/XX ...$5.00.
Keywords
data integrity, redaction, data privacy, pseudonyms, digital
signatures, audit logs
1.
INTRODUCTION
Traditional digital signature schemes can be used to check
that the authenticity and integrity of data are maintained,
i.e. that the data has not been modiﬁed since it was signed.
However, in some instances modiﬁcation of the data is not
only allowable, but desirable. In this paper we consider three
important, practical types of modiﬁcations: redaction, pseu-
donymization and data deidentiﬁcation.
Consider the Freedom of Information Act in the US and
similar laws in other countries which enable citizens to re-
quest the disclosure of government documents. Often in
such cases sensitive information, such as names of individu-
als, are blacked out or removed prior to release. This process
of removal is called redaction.
In other applications, it is not appropriate to redact, but
rather to replace data tokens with pseudonyms consistently
throughout the document. Pseudonymization provides the
end user with the ability to make certain kinds of struc-
tural correlations among the data without having access to
sensitive information.
Finally, in other applications, such as those involving cen-
sus data and healthcare records, it may be appropriate to
gradually deidentify the data. For example, a birth date of
an individual, such as June 7, 1980 could be replaced by suc-
cessive generalizations, such as June 1980, 1980, the 1980s,
etc. A city name could be replaced by its state or province,
then by its country, etc. An income value could be replaced
by nested salary ranges. Such successive generalization has
been studied, for example, by Sweeney [23, 24]. Sweeney has
further shown that health records commonly released to the
public, and assumed to be anonymous, could be successfully
linked to individuals in a number of cases, and therefore
that deidentiﬁcation is indeed necessary to preserve medical
privacy.
In each of these cases, if the original data were signed, then
traditional digital signatures could not be used to check the
integrity of the transformed data. While one could re-sign
the modiﬁed data, establishing the integrity of the modiﬁed
dataset, this would destroy any connection to the integrity
of the original data.
In this paper, we are interested in
techniques that cryptographically link the integrity of the
two datasets.
Integrity-preserving redaction, pseudonymization, and dei-
dentiﬁcation are useful tools for other types of data besides
documents. For example, auditing and event logging are
considered to be best practices in complying with corpo-
rate governance regulations such as SOX or privacy regula-
tions such as HIPAA, to pick two examples from the United
States. Such logs may contain sensitive information. In ad-
dition, audit logs are often voluminous, so in practice it is
more practical to deal with a subset of the data than with
the entire data set. Taking a subset of the data is equivalent
to redacting all of the data that is not in the subset. As a
result, redaction can be used to link the integrity of a subset
to the integrity of the master data. We believe that a ﬂexi-
ble redaction algorithm that can ensure the integrity of the
redacted data will be a useful tool for supporting privacy-
aware management of audit logs.
It is further desirable to have a scheme that can ensure
that certain parts of the document cannot be further re-
dacted, pseudonymized or deidentiﬁed. This is important
because it serves as a safeguard to prevent certain essen-
tial meanings in a document from being changed. This
additional requirement for the redaction problem is called
“disclosure control,” and was introduced by Miyazaki et al.,
whose solution increased the size of the associated signature
by a factor linear in the number of portentially redactable
subdocuments [18].
In this paper we introduce an eﬃcient algorithm to es-
tablish and verify the integrity of signed data subject to re-
daction, pseudonymization, and deidentiﬁcation, which sup-
ports disclosure control in all three cases. Although for the
ﬁrst of the three problems, redaction, several solutions have
been described in the literature, we are not aware of previous
work on pseudonymized or deidentiﬁed data. Our algorithm
signiﬁcantly increases the eﬃciency of the previously known
algorithm of [18] for redaction with disclosure control. We
do this by adapting to our scenario the tree-building tech-
niques of Johnson et al. in [12].
For redaction and pseudonymization the size of the cryp-
tographic data overhead we have to store with the original
document increases, in the worst case, by a logarithmic fac-
tor for each sequence of consecutive subdocuments that are
redacted or marked as nonredactable.
Applying this algorithm directly to the deidentiﬁcation
problem would lead to an additional overhead which is lin-
ear in the length of the chains of generalizations. This can
be signiﬁcant in a healthcare example, where a typical ta-
ble may contain millions of records and the chain of gener-
alization for dates may be of length four. To handle this
problem, we give a variant of the algorithm for the deidenti-
ﬁcation problem which avoids this blow-up, in case the suc-
cessive generalizations follow a uniform pattern across the
document or table, as is the case for dates, for example.
1.1 Organization of the paper
The paper is organized as follows. In Section 2 we describe
related work on redaction and then a motivating example
for some of the problems arising for deindentiﬁcation; and
ﬁnally we describe our model, list cryptographic preliminar-
ies, and review a redactable signature algorithm from [12]
that we use.
In Section 3 we describe our new redaction
algorithm with disclosure control, and in Section 4 we use
this algorithm to solve the pseudonymization and deindenti-
ﬁcation problems eﬃciently. We give our security deﬁnitions
and proof in the in Section 5.
2. BACKGROUND
2.1 Related work
The redaction problem has been independently considered
by several groups of authors, under diﬀerent names: as “dig-
itally signed document sanitizing schemes” by Miyazaki et
al. [17, 18], as “content extraction signatures” by Steinfeld et
al. [21], and as “redactable signatures” by Johnson et al. [12].
Documents often contain information that should never
be modiﬁed. A legal statement that a document was pre-
pared in accordance with law would be an example of some-
thing a signer may wish to appear throughout the lifecycle
of the document. Moreover, for many applications there are
only limited parts of the document that would even make
sense to redact. For example, in a structured form it might
be acceptable to redact the data ﬁlled into the form, but
there is no reason why the form itself should ever be redac-
ted. Therefore, it is important to consider cryptographic
redaction mechanisms that can also prevent parts of a docu-
ment from being further redacted. This problem was intro-
duced in [18] as redaction with “disclosure control”. Earlier
work [21] gave a solution to the related problem of giving
the signer more control over which subsets can be redacted
and which cannot.
Recently the redaction problem has also been studied by
various other authors. Ateniese et al. proposed sanitizable
signatures that use chameleon hash functions instead of the
usual hash functions, and allow redactors having their own
secret key to modify some portions of the originally signed
document where this was designated by the signer [1, 2].
Suzuki et al. proposed another construction called “sani-
tizable signatures with secret information” [22].
In their
scheme, a signer can assign and change a condition for each
portion of the document stating whether it can be redacted
or not. Izu et al. proposed a scheme called PIATS, which ad-
dresses further redaction of the document in a diﬀerent way
[10]. In PIATS, not only the signer but also the redactor
signs the redacted document. Here veriﬁers can learn who
has redacted the document and avoid malicious additional
redaction, although additional redaction is not prohibited
directly.
Miyazaki et al. proposed “invisible sanitizable signatures”
based on the aggregate signatures derived from bilinear maps
[14, 16]. Their scheme enables a redactor to hide the num-
ber of redacted subdocuments as well as to assign disclo-
sure conditions to each portion of the document. After
their scheme was proposed, many other redactable signature
schemes based on aggregate signature have been proposed,
including that of Sano et al., who proposed a visible and
invisible redactable signature scheme called “sanitizable and
deletable signature scheme” in [11, 20].
2.2 A motivating example
In this section we describe an example using healthcare
records in which our techniques for redaction, pseudonym-
ization and deidentiﬁcation are applicable. The problem
of deidentiﬁcation of health records has been studied by
Sweeney [23, 24]. She has shown that in many cases it is
possible to link presumably anonymous health records to the
real world identity of the individuals. This linking of health
records was possible using the attributes of zip code (postal
code), birth date, and gender alone. These three attributes
are suﬃcient to uniquely identify approximately 87% of the
population of the United States, and are contained, along
with the names of the corresponding individuals, in publicly
available voter registration lists. The medical records so rei-
denitiﬁed included those of the Governor of Massachusetts.
Thus it often desirable to deidentify health records before
releasing them to the public.
The key tools for deidentifying tables of records used by
Sweeney are suppression and generalization of data ﬁelds.
Suppression corresponds to our notion of redaction. In gen-
eralization, a data ﬁeld is made successively more general.
For example, a zip code 32578 could be generalized to 3257*,
and further to 325**, etc; a date could be generalized from
June 10, 1968 to June 1968, to 1968, then to 1960-1969.
Generalization and suppression can be modeled as trees,
where a suppressed attribute corresponds to a NULL ele-
ment at the root of the tree.
Sweeney describes (heuristic) algorithms that can be used
to deidentify tables using generalization and suppression to
achieve a privacy property she calls k-anonymity. We are not
concerned with the speciﬁcs of these algorithms and deﬁni-
tions here, but note that they are fully compatible with the
integrity mechanisms we discuss in this paper.1
Consider the example healthcare data shown in Table 1a.
For this data it is plausible that we may wish to:
• pseudonymize the patient name, in order to allow cross
correlation of records,
• deidentify the race, birth dates, gender or zip code
from some of the entries in order to prevent reidentiﬁ-
cations as described above, e.g. using one of Sweeney’s
k-anonymity algorithms, and
• leave the medical diagnosis ﬁeld unchanged.
The corresponding deidentitiﬁed table might now look as
shown in Table 1b.
If we wish to establish the integrity of this kind of data
using cryptographic techniques, then traditional digital sig-
natures only establish the integrity of the data in isolation.
Such techniques cannot be used to link the integrity of the
pseudonymized and deidentiﬁed data to the original. In this
paper, we show how to use redactable signatures to eﬃ-
ciently establish the integrity of both datasets in such a way
that the integrity of the two can be linked.
2.3 Preliminaries