Information Security Partners, LLC
iSECPartners.com
Attacking Web Services
Alex Stamos
PI:EMAIL
Defcon XIII
Scott Stender
PI:EMAIL
www.isecpartners.com
Information Security Partners, LLC
2
Introduction
•
Who are we?
–
Founding Partners of Information Security Partners, LLC (iSEC Partners)
–
Application security consultants / researchers
•
Why listen to this talk?
–
As you’ll see, Web Services are being deployed all around us
–
All of this work is based upon our experiences with real enterprise web 
service applications
–
There are a lot of interesting research opportunities 
•
Find out what we don’t know
•
The latest version of these slides and tools are available here:
–
https://www.isecpartners.com/defcon.html
www.isecpartners.com
Information Security Partners, LLC
3
Introduction: What are Web Services?
•
It’s an overloaded term (and a great way to raise VC)
•
For our purposes, web services are communication 
protocols that:
– Use XML as the base meta-language to define communication
– Provide computer-computer communication
– Use standard protocols, often controlled by W3C, OASIS, and WS-I
– Designed to be platform and transport-independent
www.isecpartners.com
Information Security Partners, LLC
4
Introduction: What are Web Services?
•
Why are they so compelling?
– Web service standards are built upon well understood technologies
– Adoption by large software vendors has been extremely quick
– Web services are sometimes described as a panacea to solve 
interoperability issues
– Lots of “magic pixie dust”
– Are very easy to write:
using System.ComponentModel;
using System.Web.Services;
namespace WSTest{
public class Test : System.Web.Services.WebService
{
[WebMethod]
public string HelloWorld()
{ return "Hello World“; }
}
}
www.isecpartners.com
Information Security Partners, LLC
5
Introduction: What are Web Services?
•
Value to corporate management is easy to understand
– Fake quote: “Lets expose our Mainframe APIs through SOAP and 
use plentiful Java developers on Windows/Linux instead of rare CICS 
developers on expensive mainframes to extend our system’s 
functionality. If we change our mind about Java, no problem; C#,
Perl, Python, C++, and every other language is already compatible 
with SOAP.”
www.isecpartners.com
Information Security Partners, LLC
6
What is this talk?
•
Introduce security risks associated with Web Services
•
Many of the protocols and issues are familiar
–
Classic application issues (injection attacks, session management) are still 
relevant in the WS world
–
Plenty of new protocols and attack surfaces to research 
•
Prediction: The next couple of years will see an avalanche of vulnerabilities related 
to web service issues
•
This talk is not about WS-Security standards
–
Standards for crypto, authorization, authentication, etc… are necessary and 
important
–
Like TLS, standards like this are good building blocks, but do not eliminate 
vulnerabilities in an application 
–
Ex: SSL doesn’t protect against SQL injection
www.isecpartners.com
Information Security Partners, LLC
7
Where are Web Services being used?
•
Between Companies (B2B)
–
Web services are being deployed to replace or supplement older data 
exchange protocols, such as EDI
–
3rd party standards limit “Not Invented Here” syndrome
–
Example: Credit Card Clearer -> Bank -> Credit Bureau -> Lender
–
Lots of opportunity for savings here
•
Internal to Companies
–
All major corporate software vendors have or will offer web service interfaces 
to their applications
• IBM, Microsoft, SAP, Oracle
–
Web service standards make connecting systems easy
• This is great for IT management and productivity
• This should be scary to security people
www.isecpartners.com
Information Security Partners, LLC
8
Where are Web Services being used?
•
In front of legacy systems
–
Finding people to develop on these systems is hard
–
Reliance on old software and systems restricts growth and improvement of 
corporate IT systems
–
Solution: Web service gateway in front of legacy system 
–
IBM is a big mover in this middleware
–
Security in these situations is extremely tricky
•
Between tiers of Web Applications
–
Front end is HTML/XHTML
–
Backend of SQL is replaced by SOAP
–
WS enabled databases consume these streams
–
Makes “XML Injection” very interesting   
www.isecpartners.com
Information Security Partners, LLC
9
Where are Web Services being used?
•
On consumer facing web pages
– AJAX: Asynchronous JavaScript and XML
• maps.google.com
– As APIs to add functionality
• EBay
• Google Search
• Amazon
• Bank of America
www.isecpartners.com
Information Security Partners, LLC
10
Code Breaks Free…
•
At one point, nobody worried about providing rich 
functionality to the public Internet
•
People decided this was a bad idea and put up firewalls
–
Only HTTP, HTTPS, SMTP allowed from the outside…
•
Web Services tunnel that functionality through ports often 
deemed “safe”
•
Rich functionality once again hits the public Internet
•
Let’s propose a new slogan:
We poke holes in your firewall so you don’t have to!
www.isecpartners.com
Information Security Partners, LLC
11
Attacks on Web Services
•
Web Services have been designed to be everything-agnostic
–
Variety of technologies may be encountered at any layer
•
This talk focuses on those commonly encountered
•
We will discuss security issues at three layers:
– Application
– SOAP
– XML
www.isecpartners.com
Information Security Partners, LLC
12
Application Attacks
•
Every (most) applications accomplish something useful
– There is always something to attack
•
Application-specific flaws don’t magically go away
– Design Flaws
– Business Logic Errors
– “Bad Idea” Methods (see UDDI discovery)
•
The same issues (OWASP Top 10) that have plagued us for 
years still exist
www.isecpartners.com
Information Security Partners, LLC
13
Application Attacks
•
SQL Injection
– Most web service applications are still backed by databases
– SOAP/XML provide means to escape/obfuscate malicious characters
•
Overflows in unmanaged code
•
Mistakes is authorization/authentication
•
XSS
– Rich data representation allows charset games with browsers
– Technologies such as AJAX allow new possibilities in XSS attacks
•
Creating a well formed SOAP request can be difficult
– Attacks against other interfaces (such as internal customer support) 
more likely
www.isecpartners.com
Information Security Partners, LLC
14
Our Friend: CDATA Field
•
XML has a specific technique to include non-legal characters in 
data, the CDATA field
–
Developers assume that certain data types cannot be embedded in XML, and these 
assumptions can lead to vulnerabilities
–
When querying a standard commercial XML parser, the CDATA component will be 
stripped
•
The resulting string contains the non-escaped dangerous characters
•
Existence of CDATA tags is hidden from developer 
–
Where is your input filtering?
•
Where to use this?
–
SQL Injection
–
XML Injection
–
XSS (Against a separate web interface)
•
Example:
SCRIPT]]>
alert(‘XSS’);
/SCRIPT]]>
www.isecpartners.com
Information Security Partners, LLC
15
SOAP Attacks
•
SOAP is a standard which defines how to use XML to 
exchange data between programs
– Designed to capture RPC-style communication
– Generally over HTTP/S, but this isn’t required
• MQ, SMTP, Carrier Pigeon
•
The “magic” of Web Services begins
– Programming infrastructure turns 9-line code sample into full-fledged 
web service
– Ease of deployment sometimes masks deeper security issues
• Serialization
• Schema Validation
– Attacks against layers of the stack are often left open
www.isecpartners.com
Information Security Partners, LLC
16
SOAP Attacks
•
SOAP Interfaces are described using Web Services 
Description Language (WSDL)
– WSDLs can be quite complicated
– Generally not created or consumed by human being
• Auto-generated by WS framework
• No access controls generally enforced on WSDLs
– Requesting a WSDL can be as simple as adding a ?WSDL 
argument to the end of the URL
• http://labs.isecpartners.com/blackhat.html?WSDL
– Attack: WSDLs give away all of the sensitive information needed to 
attack a web service.  This includes “hidden” methods that 
developers might not want exposed
www.isecpartners.com
Information Security Partners, LLC
17
Example WSDL: EBay Price Watching
…
www.isecpartners.com
Information Security Partners, LLC
18
SOAP Attacks
•
SOAP Headers 
– Provide instructions on how a message should be handled
• Often not necessary in basic applications
• Still parsed/obeyed by WS frameworks 
• So many standards, so many attack surfaces
– Attack: DoS in Processing Instructions
– Attack: Source routing used to bypass security checks
•
SOAPAction Header 
– Sometimes needed, sometimes filtered to attempt to remove soap 
requests. Often not required at all.
– Attack: Bypass protections that rely on SOAPAction