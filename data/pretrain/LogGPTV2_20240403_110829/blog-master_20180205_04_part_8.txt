2、清理统计数据  
每次TRUNCATE下一个分区。例如0点时，truncate 分区01。1点时，TRUNCATE分区02。... 23点时，TRUNCATE分区00。  
例如：  
```
truncate agg1_1;
```
truncate操作直接清文件，被清除的数据不会产生WAL日志，很快很快。    
## 小结  
1、一个56 Core的RDS PG 10，可以满足256个FEED LOG的写入和统计。（每个feed log表每分钟的写入点数为600万。也就是说整库的写入和统计吞吐约： 15亿点/分钟 ）    
2、历史数据的清理可以启用的调度任务，对分区执行truncate.    
3、使用到了list分区的功能。注意PG 10的分区，当操作主表时，不管你最终查询、写入、更新的是哪个子表，会对所有子表持对应的锁，所以写入和truncate子表会有冲突，务必加LOCK_TIMEOUT来TRUNCATE子表。    
后面我会详细介绍native partition和pg_pathman在锁粒度这块的差异。   
[《分区表锁粒度差异 - pg_pathman VS native partition table》](../201802/20180206_01.md)    
4、   
[《PostgreSQL 多个数组聚合为一维数组加速(array_agg)》](../201802/20180208_02.md)  
## 参考  
[《PostgreSQL 11 分区表用法及增强 - 增加HASH分区支持 (hash, range, list)》](../201802/20180205_02.md)    
[《PostgreSQL 查询涉及分区表过多导致的性能问题 - 性能诊断与优化(大量BIND, spin lock, SLEEP进程)》](../201801/20180124_01.md)    
[《PostgreSQL aggregate function 4 : Hypothetical-Set Aggregate Functions》](../201504/20150407_02.md)    
[《PostgreSQL aggregate function 3 : Aggregate Functions for Ordered-Set》](../201504/20150407_01.md)    
[《PostgreSQL aggregate function 2 : Aggregate Functions for Statistics》](../201503/20150303_03.md)    
[《PostgreSQL aggregate function 1 : General-Purpose Aggregate Functions》](../201503/20150302_01.md)    
https://github.com/pjungwir/aggs_for_arrays/   
https://www.postgresql.org/docs/devel/static/intarray.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")