that is of theoretical interest since it circumvents the 2κ lower
bound of [ZRE15] when evaluating a single AND gate but
does not generalize to arbitrary circuits.
C. Boolean Circuit Compilers
ACKNOWLEDGMENTS
Circuit compilers abstract
the complexity of designing
Boolean circuits by compiling a high level language (such
as Java or C or Verilog) into a Boolean circuit. CBMC-
GC [HFKV12] uses a model checker to generate a Boolean
circuit from a description in C. The portable circuit for-
mat (PCF) [KSMB13] compiles high level code into an
assembler-like representation. The programming framework
ObliVM [LWN+15] introduces a special purpose language
which is compiled into a memory-trace oblivious program
based on Boolean circuits and ORAM. TinyGarble [SHS+15],
[DDK+15] presents a radically different approach of lever-
aging already established hardware synthesis tools within a
fully automated toolchain to compile a circuit description in
a hardware description language such as VHDL or Verilog
into a Boolean circuit. In our work, we go beyond the
TinyGarble approach and utilize and re-purpose LUT-based
synthesis tools which are used to map circuit implementations
on Field Programmable Gate Arrays (FPGAs) to generate LUT
representations for a wide range of functions.
IX. CONCLUSION AND FUTURE WORK
The current bottleneck in most implementations of semi-
honest secure two-party computation protocols are the network
bandwidth and latency. In this work, we show how to signif-
icantly reduce the communication as well as the round com-
plexity at the cost of increased computation. For secure com-
putation on Boolean circuits, we reduce the communication
from 2κ-bit to nearly a single κ-bit ciphertext per AND gate.
Furthermore, we outline how to signiﬁcantly improve round
complexity and the communication complexity by representing
the functionality as a network of lookup tables (LUTs). We
introduce two protocols, OP-LUT and SP-LUT, for evaluating
LUTs and a compiler that leverages a hardware synthesis tool
that we customize to automatically translate functions from
a high-level description to a LUT representation. Finally, we
show that our SP-LUT protocol achieves a remarkable 3-
4x better round complexity and reduces the communication
beyond even the one κ-bit per AND gate boundary that we
achieve by evaluating a Boolean circuit using GMW even with
our improved pre-computation for many basic operations. In
addition, our LUT protocols can be freely combined with a
Boolean circuit evaluation using GMW, incurring no additional
costs and achieving the beneﬁts of both representations.
We see multiple interesting research questions for fu-
ture work: A) Is it possible to improve the LUT compiler?
Even though the hardware synthesis tools already generated
optimized circuits with good performance, we see potential
in extracting XOR gates from LUTs, since XORs can be
evaluated for free. This would result in LUTs with less inputs
and outputs. B) Is it possible to combine the efﬁcient setup
phase of our SP-LUT approach with the efﬁcient online phase
of our OP-LUT approach and thereby obtain a protocol that
achieves both, an efﬁcient setup as well as an efﬁcient online
phase? C) Do our protocols extend to stronger adversaries?
14
This work has been partially funded by the European
Union’s 7th Framework Program (FP7/2007-2013) under grant
agreement n.609611 (PRACTICE), by the German Federal
Ministry of Education and Research (BMBF) within CRISP, by
the DFG as part of project E3 within the CRC 1119 CROSS-
ING. This work is in parts supported by NSF awards 1619261
and 1649423 and AFOSR/MURI FA9550-14-1-0351.
REFERENCES
[ALSZ13]
[Alt]
G. Asharov, Y. Lindell, T. Schneider, and M. Zohner. More
efﬁcient oblivious transfer and extensions for faster secure
computation. In CCS’13, pages 535–548. ACM, 2013.
Altera
https://www.altera.com/products/design-software/fpga-design/
quartus-prime/overview.html.
software.
Quartus
design
prime
Inc.
[BB94]
[BCD+09]
[ARS+15] M. Albrecht, C. Rechberger, T. Schneider, T. Tiessen, and
M. Zohner. Ciphers for MPC and FHE. In EUROCRYPT’15,
volume 9056 of LNCS, pages 430–454. Springer, 2015.
M. L. Bonet and S. R. Buss. Size-depth tradeoffs for Boolean
fomulae. Information Processing Letters, 49(3):151–155, 1994.
P. Bogetoft, D. L. Christensen, I. Damg˚ard, M. Geisler, T. P.
Jakobsen, M. Krøigaard, J. D. Nielsen, J. B. Nielsen, K. Nielsen,
J. Pagter, M. I. Schwartzbach, and T. Toft. Secure multiparty
computation goes live. In FC’09, volume 5628 of LNCS, pages
325–343. Springer, 2009.
ABC:
Berkeley Logic
sequential
veriﬁcation,
http://www.eecs.berkeley.edu/∼alanmi/abc/.
system for
70930.
a
release
Synthesis.
synthesis
[Ber]
and
[BMR16]
[BJSV15]
[BHKR13] M. Bellare, V. Hoang, S. Keelveedhi, and P. Rogaway. Efﬁcient
garbling from a ﬁxed-key blockcipher. In S&P’13, pages 478–
492. IEEE, 2013.
D. Bogdanov, M. J˜oemets, S. Siim, and M. Vaht. How the
Estonian tax and customs board evaluated a tax fraud detection
In FC’15,
system based on secure multi-party computation.
volume 8975 of LNCS, pages 227–234. Springer, 2015.
M. Ball, T. Malkin, and M. Rosulek. Garbling gadgets for
In CCS’16, pages 565–577.
boolean and arithmetic circuits.
ACM, 2016.
J. Boyar and R. Peralta. The exact multiplicative complexity
of the Hamming weight function. Electronic Colloquium on
Computational Complexity (ECCC’05), TR05(049), 2005.
J. Boyar and R. Peralta. A small depth-16 circuit for the
In Information Security and Privacy Research
AES S-box.
(SEC’12), volume 376 of IFIP Advances in Information and
Communication Technology, pages 287–298. Springer, 2012.
T. Chou and C. Orlandi. The simplest protocol for oblivious
transfer. In Progress in Cryptology – LATINCRYPT’15, volume
9230 of LNCS, pages 40–58. Springer, 2015.
[CO15]
[BP05]
[BP12]
[DSZ15]
[DNNR16]
[DDK+15] D. Demmler, G. Dessouky, F. Koushanfar, A.-R. Sadeghi,
T. Schneider, and S. Zeitouni. Automated synthesis of optimized
circuits for secure computation. In CCS’15, pages 1504–1517.
ACM, 2015.
I. Damg˚ard, J. B. Nielsen, M. Nielsen, and S. Ranellucci.
Gate-scrambling revisited - or: The TinyTable protocol for 2-
party secure computation. Cryptology ePrint Archive, Report
2016/695, 2016.
D. Demmler, T. Schneider, and M. Zohner. ABY - a framework
for efﬁcient mixed-protocol secure two-party computation.
In
NDSS’15. The Internet Society, 2015.
I. Damg˚ard and R. W. Zakarias.
Fast oblivious AES:
A dedicated application of
In
AFRICACRYPT’16, volume 9646 of LNCS, pages 245–264.
Springer, 2016.
T. Kasper Frederiksen, T. P. Jakobsen, Nielsen J. B, and
R. Triﬁletti. On the complexity of additively homomorphic UC
commitments. In TCC’16, volume 9562 of LNCS, pages 542–
565. Springer, 2016.
the MiniMac protocol.
[FJJBT16]
[DZ16]
IEEE/ACM International Conference on Computer-Aided De-
sign (ICCAD’07), pages 354–361. IEEE, 2007.
[MMRR10] O. Martinello, F. S. Marques, R. P. Ribas, and A. I. Reis. KL-
cuts: A new approach for logic synthesis targeting multiple
output blocks. In Design, Automation Test in Europe Conference
Exhibition (DATE’10), pages 777–782. IEEE, 2010.
[NPS99]
[MPS15]
[PSSZ15]
[SHS+15]
[RME+12]
[MNPS04] D. Malkhi, N. Nisan, B. Pinkas, and Y. Sella. Fairplay — a
secure two-party computation system. In USENIX Security’04,
pages 287–302. USENIX, 2004.
T. Malkin, V. Pastro, and A. Shelat. The whole is greater than
the sum of its parts: Linear garbling and applications. Workshop
talk at Securing Computation Workshop in Berkley, 2015. On-
line: https://simons.berkeley.edu/talks/tal-malkin-2015-06-10.
M. Naor, B. Pinkas, and R. Sumner. Privacy preserving auctions
and mechanism design. In Electronic Commerce (EC’99), pages
129–139. ACM, 1999.
B. Pinkas, T. Schneider, G. Segev, and M. Zohner. Phasing:
Private set intersection using permutation-based hashing.
In
USENIX Security’15, pages 515–530. USENIX, 2015.
S. Ray, A. Mishchenko, N. Een, R. Brayton, S. Jang, and
C. Chen. Mapping into LUT structures. In Design, Automation
Test in Europe Conference Exhibition (DATE’12), pages 1579–
1584. IEEE, 2012.
Dyadic Security.
Dyadic’s DSM web suite use-cases,
2015. Online: https://www.dyadicsec.com/wp-content/uploads/
2015/06/dyadicwhitepaper.pdf.
E. M. Songhori, S. U. Hussain, A.-R. Sadeghi, T. Schneider,
and F. Koushanfar. TinyGarble: Highly compressed and scalable
sequential garbled circuits. In S&P’15, pages 411–428. IEEE,
2015.
R. Sch¨urer and W. Schmid. Monte Carlo and Quasi-Monte
Carlo Methods 2004, chapter MinT: A Database for Optimal
Net Parameters, pages 457–469. Springer, 2006. Online: http:
//mint.sbg.ac.at.
Synopsys Inc. FPGA-based design. http://www.synopsys.com/
tools/implementation/fpgaimplementation/pages/default.aspx.
Synopsys Inc. Design compiler, 2010. http://www.synopsys.
com/Tools/Implementation/RTLSynthesis/DesignCompiler.
T. Schneider and M. Zohner. GMW vs. Yao? Efﬁcient secure
In FC’13,
two-party computation with low depth circuits.
volume 7859 of LNCS, pages 275–292. Springer, 2013.
M. S. Turan and R. Peralta. The multiplicative complexity of
In Lightweight
Boolean functions on four and ﬁve variables.
Cryptography for Security and Privacy (LightSec’14), volume
8898 of LNCS, pages 21–33. Springer, 2014.
C. Wolf. Yosys open synthesis suite. http://www.clifford.at/
yosys/.
Xilinx Inc. Vivado design suite - hlx editions. http://www.xilinx.
com/products/design-tools/vivado.html.
Xilinx
http://www.xilinx.com/support/documentation/sw manuals/
xilinx11/ise c using xst for synthesis.htm.
A. C. Yao. How to generate and exchange secrets. In FOCS’86,
pages 162–167. IEEE, 1986.
S. Zahur, M. Rosulek, and D. Evans. Two halves make a
whole: Reducing data transfer in garbled circuits using half
gates. In EUROCRYPT’15, volume 9057 of LNCS, pages 220–
250. Springer, 2015.
overview,
XST
synthesis
[Wol]
[Xil]
[ZRE15]
[Syn]
[Syn10]
[SZ13]
[Xil09]
Inc.
[Yao86]
2009.
[Sec15]
[SS06]
[TP14]
[GLNP15]
[GLMY16] A. Groce, A. Ledger, A. J. Malozemoff, and A. Yerukhimovich.
CompGC: Efﬁcient ofﬂine/online semi-honest two-party compu-
tation. Cryptology ePrint Archive, Report 2016/458, 2016.
S. Gueron, Y. Lindell, A. Nof, and B. Pinkas. Fast garbling of
circuits under standard assumptions. In CCS’15, pages 567–578.
ACM, 2015.
S. Gueron and N. Mouha. Simpira v2: A family of efﬁcient
permutations using the AES round function. Cryptology ePrint
Archive, Report 2016/122, 2016.
O. Goldreich, S. Micali, and A. Wigderson. How to play any
mental game or a completeness theorem for protocols with
honest majority. In STOC’87, pages 218–229. ACM, 1987.
[GMW87]
[GM16]
[HEKM11] Y. Huang, D. Evans, J. Katz, and L. Malka. Faster secure
In USENIX
two-party computation using garbled circuits.
Security’11, pages 539–554. USENIX, 2011.
[HFKV12] A. Holzer, M. Franz, S. Katzenbeisser, and H. Veith. Secure
In CCS’12, pages 772–
two-party computations in ANSI C.
783. ACM, 2012.
[HKS+10] W. Henecka, S. K¨ogl, A.-R. Sadeghi, T. Schneider, and
I. Wehrenberg. TASTY: Tool for Automating Secure Two-partY
computations. In CCS’10, pages 451–462. ACM, 2010.
Y. Huang. Practical secure two-party computation. Ph.D. Thesis,
2012. Online: https://yhuangpress.ﬁles.wordpress.com/2014/02/
dissertation.pdf.
[Hua12]
[IKM+13] Y.
[IKNP03]
[IR89]
[KK12]
[KK13]
[KKS16]
Ishai, E. Kushilevitz, S. Meldgaard, C. Orlandi, and
A. Paskin-Cherniavsky. On the power of correlated randomness
in secure computation. In TCC’13, volume 7785 of LNCS, pages
600–620. Springer, 2013.
Y. Ishai, J. Kilian, K. Nissim, and E. Petrank. Extending
oblivious transfers efﬁciently. In CRYPTO’03, volume 2729 of
LNCS, pages 145–161. Springer, 2003.
R. Impagliazzo and S. Rudich. Limits on the provable conse-
quences of one-way permutations. In STOC’89, pages 44–61.
ACM, 1989.
V. Kolesnikov and R. Kumaresan.
Improved secure two-
party computation via information-theoretic garbled circuits. In
SCN’12, volume 7485 of LNCS, pages 205–221. Springer, 2012.
V. Kolesnikov and R. Kumaresan. Improved OT extension for
In CRYPTO’13, volume 8043 of
transferring short secrets.
LNCS, pages 54–70. Springer, 2013.
C. Kempka, R. Kikuchi, and K. Suzuki. How to circumvent
the two-ciphertext lower bound for linear garbling schemes.
In ASIACRYPT’16, volume 10032 of LNCS, pages 967–997.
Springer, 2016.
[KKW16] W. S. Kennedy, V. Kolesnikov, and G. T. Wilfong. Overlaying
Cryptology ePrint
circuit clauses for secure computation.
Archive, Report 2016/685, 2016.
V. Kolesnikov. Gate evaluation secret sharing and secure one-
round two-party computation. In ASIACRYPT’05, volume 3788
of LNCS, pages 136–155. Springer, 2005.
V. Kolesnikov and T. Schneider. Improved garbled circuit: Free
In ICALP’08, volume 5126 of
XOR gates and applications.
LNCS, pages 486–498. Springer, 2008.
[Kol05]
[KS08]
[KSMB13] B. Kreuter, A. Shelat, B. Mood, and K. Butler. PCF: A portable
In
circuit format for scalable two-party secure computation.
USENIX Security’13, pages 321–336. USENIX, 2013.
B. Kreuter, A. Shelat, and C. Shen. Billion-gate secure com-
In USENIX Security’12,
putation with malicious adversaries.
pages 285–300. USENIX, 2012.
[KSS12]
[LWN+15] C. Liu, X. Wang, K. Nayak, Y. Huang, and E. Shi. ObliVM: A
In S&P’15,
programming framework for secure computation.
pages 359–376. IEEE, 2015.
Improve-
A. Mishchenko, S. Chatterjee, and R. K. Brayton.
IEEE
ments to technology mapping for LUT-based FPGAs.
Transactions on Computer-Aided Design of Integrated Circuits
and Systems (TCAS’07), 26(2):240–253, 2007.
[MCB07]
[MCCB07] A. Mishchenko, S. Cho, S. Chatterjee, and R. Brayton. Com-
In
binational and sequential mapping with priority cuts.
15