### Title: In Search of CurveSwap: Measuring Elliptic Curve Implementations in the Wild

#### Abstract:
This study provides a comprehensive survey of elliptic curve implementations across various protocols and platforms. We conducted extensive internet-wide scans to measure the support and behavior of elliptic curve implementations in TLS, SSH, and IPsec. Additionally, we collected passive measurements of client curve support for TLS and performed active measurements to assess server vulnerability to known attacks, such as weak curve support, invalid curve attacks, and curve twist attacks.

Our findings indicate that 0.77% of HTTPS hosts, 0.04% of SSH hosts, and 4.04% of IKEv2 hosts that support elliptic curves do not perform the necessary curve validity checks as specified by elliptic curve standards. These vulnerabilities could potentially be exploited to construct an elliptic curve parameter downgrade attack, which we term "CurveSwap." However, our analysis suggests that the combinations of weak behaviors we examined do not currently enable a feasible CurveSwap attack in the wild.

Furthermore, we analyzed the source code of several elliptic curve libraries and identified issues. Specifically, some libraries fail to perform point validation for JSON Web Encryption (JWE), and we discovered a flaw in the Java and NSS multiplication algorithms. These findings highlight the need for continued scrutiny and improvement in the implementation of elliptic curve cryptography.

#### Key Points:
- **Internet-Wide Scans**: Conducted on a large number of ports for TLS, SSH, and IPsec.
- **Vulnerability Assessment**: Active measurements to estimate server vulnerability to known attacks.
- **Curve Validity Checks**: 0.77% of HTTPS hosts, 0.04% of SSH hosts, and 4.04% of IKEv2 hosts do not perform required checks.
- **Potential Attack Vector**: Theoretical possibility of a CurveSwap attack, but no feasible combination of weak behaviors observed.
- **Source Code Analysis**: Identified issues in point validation for JWE and a flaw in Java and NSS multiplication algorithms.

#### Conclusion:
While the current state of elliptic curve implementations shows some vulnerabilities, the specific conditions required for a successful CurveSwap attack are not yet met. Nonetheless, the identified weaknesses underscore the importance of rigorous testing and adherence to cryptographic standards. Future work should focus on addressing these issues to enhance the security of elliptic curve cryptography in real-world applications.