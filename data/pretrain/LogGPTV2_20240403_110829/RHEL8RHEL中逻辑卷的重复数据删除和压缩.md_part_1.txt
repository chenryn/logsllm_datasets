[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [8]{.productnumber}
:::
# []{#index.html#idm140610669919552}RHEL 中逻辑卷的重复数据删除和压缩。 {.title}
## 使用 VDO 来提高 LVM 存储容量 {.subtitle}
::: authorgroup
[Red Hat]{.orgname} [Customer Content Services]{.orgdiv}
:::
::: legalnotice
[]{#index.html#idm140610668903072}
Copyright []{.trademark}© 2021 Red Hat, Inc.
The text of and illustrations in this document are licensed by Red Hat
under a Creative Commons Attribution--Share Alike 3.0 Unported license
(\"CC-BY-SA\"). An explanation of CC-BY-SA is available at
`http://creativecommons.org/licenses/by-sa/3.0/`{.uri}. In accordance
with CC-BY-SA, if you distribute this document or an adaptation of it,
you must provide the URL for the original version.
Red Hat, as the licensor of this document, waives the right to enforce,
and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent
permitted by applicable law.
Red Hat, Red Hat Enterprise Linux, the Shadowman logo, the Red Hat logo,
JBoss, OpenShift, Fedora, the Infinity logo, and RHCE are trademarks of
Red Hat, Inc., registered in the United States and other countries.
[Linux]{.trademark}® is the registered trademark of Linus Torvalds in
the United States and other countries.
[Java]{.trademark}® is a registered trademark of Oracle and/or its
affiliates.
[XFS]{.trademark}® is a trademark of Silicon Graphics International
Corp. or its subsidiaries in the United States and/or other countries.
[MySQL]{.trademark}® is a registered trademark of MySQL AB in the United
States, the European Union and other countries.
[Node.js]{.trademark}® is an official trademark of Joyent. Red Hat is
not formally related to or endorsed by the official Joyent Node.js open
source or commercial project.
The [OpenStack]{.trademark}® Word Mark and OpenStack logo are either
registered trademarks/service marks or trademarks/service marks of the
OpenStack Foundation, in the United States and other countries and are
used with the OpenStack Foundation\'s permission. We are not affiliated
with, endorsed or sponsored by the OpenStack Foundation, or the
OpenStack community.
All other trademarks are the property of their respective owners.
:::
::: abstract
**摘要**
本文档解释了如何在 LVM 中使用 Virtual Data Optimizer（VDO）功能来管理
RHEL 中对逻辑卷进行重复数据删除（deduplicate）和压缩。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}使开源包含更多 {.title}
:::
红帽承诺替换我们的代码、文档和网页属性中存在问题的语言。我们从这四个术语开始：
master、slave、blacklist 和
whitelist。这些更改将在即将发行的几个发行本中逐渐实施。如需了解更多详细信息，请参阅
[CTO Chris Wright
信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-logical-volumes.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-logical-volumes.html#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-logical-volumes}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。要做到这一点：
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
-   要提交更复杂的反馈，请创建一个 Bugzilla ticket：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%208){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#con_introduction-to-vdo-on-lvm_deduplicating-and-compressing-logical-volumes.html}
::: chapter
::: titlepage
# []{#con_introduction-to-vdo-on-lvm_deduplicating-and-compressing-logical-volumes.html#con_introduction-to-vdo-on-lvm_deduplicating-and-compressing-logical-volumes}第 1 章 LVM 的 VDO 介绍 {.title}
:::
Virtual Data
Optimizer（VDO）为存储提供内联块级的重复数据删除（deduplication）、压缩和精简置备。您可以将
VDO 作为一个 LVM 逻辑卷类型（LV）来管理，类似于 LVM 精简置备的卷。
LVM（LVM-VDO）中的 VDO 卷由以下 LV 组成：
::: variablelist
[VDO 池 LV]{.term}
:   这是用于 VDO LV 存储、重复数据删除和压缩的后端物理设备。VDO 池 LV
    设置 VDO 卷的物理大小，即 VDO 可保存到磁盘中的数据量。
    目前，每个 VDO 池 LV 只能有一个 VDO LV。因此，VDO 会单独压缩每个 VDO
    LV。换句话说，VDO 无法重复数据删除或压缩一些 VDO LV 共享的数据。
[VDO LV]{.term}
:   这是 VDO 池 LV 上的虚拟置备设备。VDO LV 设定 VDO
    卷的置备和逻辑大小，即应用程序在重复数据删除和压缩发生前可写入卷的数据量。
:::
::: table
[]{#con_introduction-to-vdo-on-lvm_deduplicating-and-compressing-logical-volumes.html#idm140610670125744}
**表 1.1. LVM 和 LVM 精简置备的 VDO 组件的比较**
::: table-contents
                 物理设备              置备的设备
  -------------- --------------------- -----------------------
  LVM 上的 VDO   VDO 池 LV             VDO LV
  LVM 精简配置   精简池（thin poll）   精简卷（thin volume）
:::
:::
由于 VDO
是迅速置备的，所以文件系统和应用程序只会看到使用中的逻辑空间，且不知道可用的实际物理空间。使用脚本来监控实际可用空间并在使用超过阈值时生成警报：例如,当
VDO 池 LV 满率为 80% 时。
::: itemizedlist
**其它资源**
-   有关独立 VDO
    的文档，请参阅[复制数据删除和压缩存储](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deduplicating_and_compressing_storage/index){.link}。
-   有关 LVM 精简置备的文档，请参考
    [创建和管理精简置备逻辑卷（精简卷）](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_logical_volumes/assembly_thinly-provisioned-logical-volumes_configuring-and-managing-logical-volumes){.link}。
:::
:::
[]{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html}
::: chapter
::: titlepage
# []{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#vdo-requirements_deduplicating-and-compressing-logical-volumes}第 2 章 LVM-VDO 要求 {.title}
:::
LVM 上的 VDO 对其放置和系统资源有一定要求。
::: section
::: titlepage
# []{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#vdo-memory-requirements_lvm-vdo-requirements}VDO 内存要求 {.title}
:::
每个 VDO 卷有不同的内存要求：
::: title
**VDO 模块**
:::
VDO 需要固定 38MB RAM 和几个变量数量：
::: itemizedlist
-   1.15 配置的块映射缓存大小为 1MB 的内存。块映射缓存最少需要 150MB
    RAM。
-   每 1TB 逻辑空间为 1.6 MB RAM。
-   每 1TB 物理存储由卷管理的每 1TB 物理存储的 RAM MB。
:::
::: title
**UDS 索引**
:::
通用重复数据删除服务(UDS)需要最少 250MB
RAM,也是重复数据删除使用的默认数量。您可以在格式化 VDO
卷时配置值,因为值也会影响索引需要的存储量。
UDS 索引所需的内存由索引类型和重复数据删除窗口所需大小决定：
::: informaltable
  索引类型   重复数据删除窗口       备注
  ---------- ---------------------- ----------------------------------------------
  密度       每 1 GB RAM 为 1 TB    1GB 密度索引一般足以满足 4TB 物理存储空间。
  稀疏       每 1 GB RAM 为 10 TB   1 GB 稀疏索引一般足以满足40TB 物理存储空间。
:::
UDS 稀疏索引功能是 VDO
推荐的模式。它依赖于数据的区域位置,并尝试只保留内存中最相关的索引条目。使用稀疏索引，UDS
维护一个重复数据删除窗口，它是密度的10 倍，但使用相同数量的内存。
稀疏索引提供了最高的覆盖，但密度索引提供了更多的重复数据删除建议。对于大多数工作负载，如果内存量相同，则密度和稀疏索引间的重复数据删除率的不同会微不足道。
::: itemizedlist
**其它资源**
-   有关 UDS 索引内存要求的具体示例,请参阅 ["VDO 物理大小要求示例
    "一节](#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#examples-of-vdo-requirements-by-physical-size_lvm-vdo-requirements "VDO 物理大小要求示例"){.xref}。
:::
:::
::: section
::: titlepage
# []{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#vdo-storage-space-requirements_lvm-vdo-requirements}VDO 存储空间要求 {.title}
:::
您可以将 VDO 卷配置为使用最多 256TB
物理存储。只有物理存储的某个部分可用来存储数据。本节提供了计算 VDO
管理的卷的可用空间大小的方法。
VDO 需要为两种类型的 VDO 元数据和 UDS 索引进行存储：
::: itemizedlist
-   第一类 VDO 元数据对于每 4GB [*物理贮存*]{.emphasis}使用 1
    MB，再加上每个 slab 的额外的 1 MB。
-   第二类 VDO 元数据对于每 1GB [*逻辑存储*]{.emphasis}使用 1.25
    MB，并舍入到最近的 slab。
-   UDS 索引所需的存储量取决于索引类型以及分配给索引的 RAM 量。对于每 1
    GB RAM，密度 UDS 索引使用 17GB 存储，稀疏 UDS 索引使用 170 GB 存储。
:::
::: itemizedlist
**其它资源**
-   有关 VDO 存储要求的具体示例,请参阅 ["VDO 物理大小要求示例
    "一节](#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#examples-of-vdo-requirements-by-physical-size_lvm-vdo-requirements "VDO 物理大小要求示例"){.xref}。
-   有关 slabs 的描述请查看 ["VDO 中的 Lab
    大小"一节](#creating-a-deduplicated-and-compressed-logical-volume_deduplicating-and-compressing-logical-volumes.html#slab-size-in-vdo_creating-a-deduplicated-and-compressed-logical-volume "VDO 中的 Lab 大小"){.xref}。
:::
:::
::: section
::: titlepage
# []{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#examples-of-vdo-requirements-by-physical-size_lvm-vdo-requirements}VDO 物理大小要求示例 []{#vdo-requirements_deduplicating-and-compressing-logical-volumes.html#examples-of-vdo-requirements-by-physical-volume-size_vdo-requirements} {.title}
:::
下表根据基础卷的物理大小提供 VDO
的最大系统要求。每个表都列出了适合预定部署的要求,如主存储或备份存储。
具体数量取决于您的 VDO 卷的配置。
::: title
**主存储部署**
:::
在主存储中，UDS 索引是物理大小的 0.01% 到 25%。