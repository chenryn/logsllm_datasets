13:
14:
15:
16:
17:
end for
18:
return opt
19: end procedure
u = s[idx], v = s[idx + 1], e = edдe(u, v)
probability = Cu,v
Cu
if (e .color == ‘red’) and (v reports to u) then
probability = 1
end if
p = p ∗ probability
end for
s .probability = p
if (opt == nil) or (opt .probability < s .probability) then
end if
◃ As information request is from u → v
◃ Direct request from supervisor
opt = s
◃ Path with maximum probability of data leakage
Calculating the Influence Spread. We formally define influ-
ence of a node on others as a reachability problem for an un-
directed graph G = (V , E, A). It is the set of all ordered pairs
(x, y) of vertices in V for which there exists a sequence of vertices
s(x,y) =[v0 =x, v1, v2, . . . , vh =y], such that the edge (vi−1, vi) ∈ E
for all 1 ≤ i ≤ h. Here h is the number of hops from vertex x to
y. In a graph there could be multiple paths (sequence of vertices)
from a given source (ν) and target (τ1). rProfiler uses ‘Depth First
Search’ (DFS) for finding all the paths between the source and the
target. The choice of DFS is due to the fact that |X| ≪ |G| with
an additional restriction imposed by the number of hops which ν
can take to reach τ, thus resulting in very fast path enumeration.
From an attacker’s perspective, an optimal path is that which has
the highest probability of getting the desired information from the
target, as implemented in Algorithm 1. Thus, an attacker would
opt for the following scenarios for maximizing the data exfiltration
chances:
Scenario 1. Hierarchy Exploitation. It is common in an en-
terprise that an individual will share the information requested by
their supervisor. An attacker in the supervisor position could exploit
this directly if there exist a sequence s(ν,τ1) =[v0 = ν, v1, v2, . . . , vk =
τ1], such that, individual vi reports to vi−1,∀vi ∈ X .
Scenario 2. Relationship Exploitation. The optimal path in
this scenario consists of edges with good message density. An insider
would try to exploit this interpersonal relationship between the nodes
to get the desired information.
Scenario 3. Mixed Mode. This scenario consists of a combina-
tion of previous two scenarios. In this an attacker tries to maximize
their influence over the target by first exploiting the reporting hierar-
chy, and then selecting paths with healthy communication edges.
Poster CCS '20, November 9–13, 2020, Virtual Event, USA2130Figure 2 shows the change in average probability of loss Ps with the
number hops to reach a target device or individual. It is observed
that with increase in number of hops the probability keeps on
decreasing and after 2 hops the average probability of loss Ps is
nearly 0. Further, Table 1 shows the reachability of insider BDV0168
to different enterprise assets. The total number of members in its
community are 56 (including self) and all of them are reachable
in h = 2 hops. This low hop value (h) for complete coverage of
community is due to high in-degree and out-degree of each node.
CCL0068
KPC0073
MAS0025
JTM0023
0.5
0.4
0.3
0.2
0.1
0
s
P
s
s
o
L
f
o
y
t
i
l
i
b
a
b
o
r
P
e
g
a
r
e
v
A
1
2
3
4
5
Number of Hops (h)
6
7
Figure 2: Average probability of Loss vs Number of Hops for
four suspects in CERT dataset.
Discussion & Conclusion. When employees leave an organi-
zation, they may see benefit in exfiltrating certain business critical
data for personal gain or for harming the organization. For pre-
venting such data exfiltration, organization does apply multiple
restrictions on the employee, however the employee can still exploit
the influence on others to get the desired impact. Here, our work
on influence detection can be used for identifying such suscepti-
ble individuals and then introducing corrective behavioral nudges.
Also, deployment of licensed security controls for restricting data
leakage can be prioritized according to the influence and spread of a
potential threat, thus resulting in better inventory management of
security controls. In this paper we have considered the hierarchical
relationship and good communication as a means of discovering
the most influential path to a targeted individual. The current set
of experiments are performed on synthetic CERT dataset. As a way
forward we plan to collect real data within our organization to
validate our results.
REFERENCES
[1] Chen et al. 2012. Specializing network analysis to detect anomalous insider actions.
[5] Homoliak et al. 2019.
[2] Eldardiry et al. 2014. Multi-source fusion for anomaly detection: using across-
[4] Gamachchi et al. 2018. A graph based framework for malicious insider threat
Security informatics 1, 1 (2012), 5.
domain and across-time peer-group consistency checks. JoWUA (2014), 39–58.
[3] Glasser et al. 2013. Bridging the gap: A pragmatic approach to generating insider
threat data. In 2013 IEEE Security and Privacy Workshops. IEEE, 98–104.
detection. arXiv preprint arXiv:1809.00141 (2018).
Insight into insiders and it: A survey of insider threat
taxonomies, analysis, modeling, and countermeasures. ACM CSUR 52, 2 (2019).
[6] Liu et al. 2019. Log2vec: A Heterogeneous Graph Embedding Based Approach
for Detecting Cyber Threats within Enterprise. In Proceedings of the 2019 ACM
SIGSAC CCS. ACM, 1777–1794.
[7] Naghmouchi et al. 2016. A new risk assessment framework using graph theory for
complex ICT systems. In Proceedings of the 8th ACM CCS International Workshop
on MIST. ACM, 97–100.
[8] Radicchi et al. 2004. Defining and identifying communities in networks. Proceedings
of the national academy of sciences 101, 9 (2004), 2658–2663.
(a)
(b)
Figure 1: Communication graph with 4 communities. In Fi-
gure 1a, the red node represents the insider and the green
node represents the potential target. The arrow on lines re-
present the direction of influence and the optimal path for
each red and green node pair. The Figure 1b shows the influ-
ence radius of ν for 4 hops. The color coding shows reacha-
bility from ν in: 1 hop, 2 hop, 3 hop and 4 hop.
3 RESULTS & CONCLUSION
rProfiler was implemented and tested on client machines running
on 64 bit Windows 10 enterprise edition and 64 bit Ubuntu 16.04
LTS version. The minimal hardware requirement was 500 GB HDD,
16 GB DDR3 RAM and dual core i5 vPro processor. The runtime
environment consists of a combination of Python 3.6 and Java 8. We
assessed the effectiveness of rProfiler on synthetically generated
CERT dataset version 4.2 [3]. As discussed earlier, we use the met-
hod described in [6] for identifying malicious insider. Based on the
typical communication behavior observed between team members,
we have selected the threshold as 2
, where d is the degree of a
d
given node.
Table 1: Impact of BDV0168 on enterprise assets
Hops
1
2
Affected Colleagues
39
55 = 39 + 16 (New)
Assigned
40
56
Shared
77
78
Devices
117
134
We first calculate the influence propagation as discussed in
Section 2, and then perform cost analysis of the potential paths
using Algorithm 1. Figure 1b shows the influence sphere of sus-
pect ν on her neighbors with h = 4 hops. The neighbors are co-
lor coded according to the hops required to reach them, that is,
{red : 0, oranдe : 1, maдenta : 2, blue : 3, дreen : 4}. In Figure 1a,
the path between vertices ν and τ1 shows the Scenario 1, wherein
there exists a direct reporting based hierarchy, which is used for
influencing the target node. Scenario 2 is described by the path
between vertices ν and τ2 with good communication health (ed-
ges in blue). Finally, in Figure 1a, the path from ν to τ3 represents
the Scenario 3, which primarily consist of all three type of edges
(hierarchical, strong and weak interpersonal relationship).
We calculated the probability of data exfiltration Ps as discussed
in Algorithm 1. As CERT dataset version 4.2 does not have reporting
hierarchy data, therefore we calculated the probability of data loss
from a target node by only considering the strength of relationship.
22232425262728303132τ312τ214151617181912345682021τ19ν71267811139302728ν222324142515161718191234562031213212τ1Poster CCS '20, November 9–13, 2020, Virtual Event, USA2131