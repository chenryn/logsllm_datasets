title:SoK: Exploiting Network Printers
author:Jens M&quot;uller and
Vladislav Mladenov and
Juraj Somorovsky and
J&quot;org Schwenk
2017 IEEE Symposium on Security and Privacy
SoK: Exploiting Network Printers
Jens Müller, Vladislav Mladenov, Juraj Somorovsky, Jörg Schwenk
Horst Görtz Institute for IT-Security, Ruhr University Bochum
PI:EMAIL, PI:EMAIL, PI:EMAIL, PI:EMAIL
Abstract
The idea of a paperless ofﬁce has been dreamed of for
more than three decades. However, nowadays printers are
still one of the most essential devices for daily work and
common Internet users. Instead of removing them, printers
evolved from simple devices into complex network com-
puter systems, installed directly into company networks, and
carrying considerable conﬁdential data in their print jobs.
This makes them to an attractive attack target.
In this paper we conduct a large scale analysis of printer
attacks and systematize our knowledge by providing a gen-
eral methodology for security analyses of printers. Based
on our methodology, we implemented an open-source tool
called PRinter Exploitation Toolkit (PRET). We used PRET
to evaluate 20 printer models from different vendors and
found all of them to be vulnerable to at least one of the
tested attacks. These attacks included, for example, simple
Denial-of-Service (DoS) attacks or skilled attacks, extracting
print jobs and system ﬁles.
On top of our systematic analysis we reveal novel in-
sights that enable attacks from the Internet by using ad-
vanced cross-site printing techniques, combined with printer
CORS spooﬁng. Finally, we show how to apply our attacks
to systems beyond typical printers like Google Cloud Print
or document processing websites.
1. Introduction
Printers are considered rather unspectacular devices. We
use them to print documents – which is inevitable even
in today’s digital world. Printers and multifunction printers
(MFPs) are available in every household, ofﬁce, company,
governmental, medical, and educational institutions. From a
security research point of view, these machines have been
overlooked for a long time, even though printers have direct
access to sensitive information like conﬁdential reports,
contracts, and patient recipes.
Security of printers. In recent years research into printer
security started to gain some attention. In 1996 the potential
danger of PostScript ﬁle I/O primitives was pointed out by
Silbert et al. [52]. In 2002 Phenoelit published a proof-of-
concept application for Printer Job Language (PJL) ﬁle sys-
tem access [26]. In 2005 Crenshaw published an overview
of potentially harmful PJL commands for network print-
ers [20]. In 2007 Weaver discovered the cross-site printing
© 2017, Jens Müller. Under license to IEEE.
DOI 10.1109/SP.2017.47
213
technique to force web browsers into printing arbitrary pay-
loads on a network printer [62]. A comprehensive discussion
of printer security – including a survey of malicious PJL and
PostScript commands – which comes closest to our work,
was given by Costin et al. [16], [17] and [18].
However, we are not aware of any efforts to system-
atically exploit PostScript and PJL functions, combining
existing attack techniques, and summarizing all attacks in
order to bypass the security of printers.
Existing gaps. During our research we identiﬁed that:
(1) Even though many proof-of-concept attacks and tech-
niques have been known for years, the according coun-
termeasures have not been implemented, leaving the
devices and systems vulnerable.
(2) There is no research or document summarizing all
existing attacks. More importantly, there is no general
methodology describing how to perform a security
evaluation of printers.
(3) The classiﬁcation of the existing attacker models rele-
vant for printers is missing.
(4) There are no tools capable of facilitating the security
evaluation of printers.
Considering all these issues, we decided to provide the
ﬁrst comprehensive study regarding the security of print-
ers contributing towards systematic penetration testing. We
came up with the following research questions (RQ), which
we will address: (1) What is the current state regarding the
security of printers? (2) Do security gaps exist and what are
their causes? (3) Is it possible to apply our results to new
technologies?
RQ1: Current state. Even though printers are an important
attack target, the security threats and scenarios are covered
in few research papers. In contrast, there are a huge number
of security issues when targeting these devices, described in
various CVEs or security blogs. The ﬁrst main challenge was
to analyze the known attacks and ﬁnd a generic approach
to applying them to different printers.
In Figure 1 a typical printer with its interfaces is de-
picted. One can see that a printer supports many communi-
cation protocols like IPP, LPD, and raw port 9100 printing.
During our analysis, we estimated that most of the attacks
only use these protocols as a carrier and not as a target for
the attack. The real target are the interpreters processing the
actual print jobs. Based on this knowledge, we determined
a generic way to carry out different attacks independent of
the supported communication protocols by the printer. Thus,
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:27:18 UTC from IEEE Xplore.  Restrictions apply. 
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:8)(cid:2)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:3)(cid:4)(cid:6)
(cid:7)(cid:4)(cid:3)(cid:5)
(cid:1)(cid:9)(cid:10)(cid:11)
(cid:12)(cid:4)(cid:5)(cid:8)(cid:2)(cid:13)(cid:2)(cid:8)(cid:5)(cid:8)(cid:2)
(cid:1)(cid:14)(cid:15)(cid:5)(cid:16)(cid:17)(cid:2)(cid:3)(cid:13)(cid:5)(cid:11)
(cid:12)(cid:4)(cid:5)(cid:8)(cid:2)(cid:13)(cid:2)(cid:8)(cid:5)(cid:8)(cid:2)
(cid:18)(cid:19)(cid:2)(cid:5)(cid:20)(cid:8)(cid:2)
(cid:12)(cid:4)(cid:5)(cid:8)(cid:2)(cid:13)(cid:2)(cid:8)(cid:5)(cid:8)(cid:2)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:2)(cid:7)(cid:8)(cid:5)(cid:6)(cid:9)(cid:9)(cid:10)
(cid:7)(cid:16)(cid:21)
(cid:22)(cid:23)(cid:24)
(cid:12)(cid:1)(cid:1)
(cid:10)(cid:1)(cid:25)
(cid:16)(cid:26)(cid:21)
Figure 1: Printer overview containing relevant components
used during the security analysis. Our research concentrates
on two components provided by almost every printer device:
PostScript and PJL interpreters.
in this work, all attacks concentrate on two of the most
used and implemented interpreters – PostScript and PJL. In
addition, we extended the cross-site printing techniques by
introducing our novel attack we call CORS spooﬁng. The
attack allows a web attacker to get a backchannel from the
printer and thus read the results of the attack, which was
previously not possible.
In order to facilitate our analysis, we implemented a
semi-automated tool named PRinter Exploitation Toolkit
(PRET), which we used during our evaluation. The results
of this evaluation are devastating – each of the 20 tested
printers was susceptible to multiple attacks ranging from
simple Denial-of-Service (DoS) attacks to complex cross-
site printing attacks, leading to the leakage of printed doc-
uments or stored system ﬁles.
RQ2: Existing gaps. Widespread printer languages, like
PJL and PostScript, offer security sensitive features such as
access to the ﬁle system. Even though many of the security
issues are not new, these were not taken into account by the
vendors. Moreover, our analysis revealed an existing gap
regarding the security of PostScript and PJL. There is no
survey regarding the existing risks and the according coun-
termeasures. Even if a printer vendor is aware of the existing
risks, there is no document summarizing the Best Common
Practices (BCP). Such BCP documents are important from
the security perspective since they give a good guideline
for developers. BCPs are established for technologies like
TLS [51], OAuth [23] or Web Application Security [1],
which reduces the security risks of faulty implementations
and skipped security checks.
RQ3: New research directions. Based on our ﬁndings, the
question arises whether it is possible to apply our attacks to
other systems than printers, such as: cloud printing services,
online available PostScript interpreters, and even 3D print-
ers. Our main goal is to determine which systems should
be in the scope of future security research and to document
possible attack scenarios.
To prove the applicability of our analyzing methodology
and attacks, we provide a practical analysis of Google Cloud
Print and websites converting PostScript ﬁles to PDF. The
result of our analysis reveals existing security issues leading
to information leakage. Intentionally, we do not provide
a comprehensive analysis of these systems due to their
complexity and feature diversity.
Contributions. Our contributions can be summarized as
follows:
• We provide a comprehensive research regarding attacks
applicable on printing devices. We systematize our ﬁnd-
ings, establish a generic methodology, and deﬁne attacker
models enabling the analysis of printers.
• We facilitate the security evaluation by implementing our
semi-automated open-source tool PRET, capable of car-
rying out multiple attacks in different printing languages
like PostScript and PJL.
• We provide an evaluation of the 20 different printers and
reveal serious security ﬂaws on all printers ranging from
efﬁcient DoS to attacks leaking sensitive information.
• We prove the applicability of our methodology and ﬁnd-
ings by evaluating systems beyond printers like Google
Cloud Print. We address future research directions by
summarizing different technologies where our ﬁnding can
be applied too.
Responsible disclosure. We responsibly disclosed all secu-
rity vulnerabilities to printer manufacturers and to admin-
istrators responsible for vulnerable interpreter processing
websites. Google rewarded our ﬁndings with $3133.70.
Ethical considerations. We evaluated online websites and
their PostScript processors with a carefully chosen set of
commands. These commands were used for PostScript ﬁn-
gerprinting and to execute directory traversals. We did not
attempt to execute any malicious commands which lead to
DoS attacks or endanger the server.
2. Foundations
Data can be sent to a printer by USB/parallel cable
or over a network. In this work, we focus on network
printing; however, most of the presented attacks can also
be performed against local printers.
Figure 2 depicts an overview of the encapsulation of
printer languages and protocols: The network printing pro-
tocol acts as a channel to deploy print jobs which either
contain the page description language directly or ﬁrst invoke
a job/printer control language to change settings like paper
trays. To manage the printing device as a whole, a device
control protocol can be used.
Figure 2: Encapsulation of printer languages.
214
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:27:18 UTC from IEEE Xplore.  Restrictions apply. 
2.1. Device control protocols
Device control protocols are designed to change settings
not only for a single print job but for the device as a
whole, for example TCP/IP settings. One approach to deﬁne
a common standard for printer device management was
Network Printing Alliance Protocol (NPAP). However, it
is only supported by Lexmark. Other printer manufacturers
instead use Simple Network Management Protocol (SNMP)
for device control as introduced in the following.
SNMP. SNMP is a UDP based protocol designed to manage
various network components like routers, servers and other
Internet of Things (IoT) devices. The architecture is deﬁned
in [32]. Information offered by a managed system is not sub-
ject to the standard itself but deﬁned in separate hierarchical
database ﬁles, so called Management Information Bases
(MIBs). An MIB consists of various Object Identiﬁer (OID)
entries, each identifying a variable to be monitored. An ex-
ample of retrieving the device description (hrDeviceDescr)
is shown in Listing 1.
# snmpget −v1 −c p u b l i c
[ p r i n t e r ]
1 . 3 . 6 . 1 . 2 . 1 . 2 5 . 3 . 2 . 1 . 3 . 1
" hp L a s e r J e t 4250"
1
2
Listing 1: SNMP request to read the device description.
While SNMP is not printer-speciﬁc, many printer man-
ufacturers have published MIBs for their network printer
models. A generic approach to create a vendor-independent
"Printer MIB" was discussed in [13]. As a stand-alone
language, we will make use of SNMP only to reset the
device to factory defaults; however, SNMP can also be
embedded into PJL and, therefore, included into arbitrary
print jobs.
2.2. Printing channel
The most common network printing protocols supported
by printer devices are Internet Printing Protocol (IPP), Line
Printer Daemon (LPD), Server Message Block (SMB), and
raw port 9100 printing. Each protocol has speciﬁc features
such as: print job queue management, accounting, etc. In this
work we do not attack printing protocols directly because
of their limited capabilities and attack surface. Instead, we
use them as a channel to deploy malicious PostScript and
PJL code, which can be received, and is simply forwarded
by all network printing protocols as shown in Figure 1.
Raw port 9100 printing is the default method used by
CUPS and the Microsoft Windows printing architecture to
communicate with network printers; it is considered as ‘the
simplest, fastest, and generally the most reliable network
protocol used for printers’ [55]. Raw port 9100 printing,
also referred to as JetDirect or AppSocket, is not a printing
protocol by itself. It can rather be compared to a direct
(USB/parallel cable) connection over TCP; all data sent is
simply processed by the printer language interpreter. In con-
trast to LPD, IPP, or SMB, printer language code deployed
over port 9100 can send direct feedback to the client which
215
initiated the print job. For example, when receiving @PJL
INFO ID as request to port 9100 the printer will respond
with a product name like hp LaserJet 4250. Such a bidirec-
tional channel is not only useful for debugging, but gives
us direct access to results of PostScript and PJL commands,
which is a requirement for information disclosure attacks.
Therefore, raw port 9100 printing – which is supported by
almost any network printer – is used as the primary channel
in our security analysis and the prototype implementation.
2.3. Job/printer control language
A job control language manages settings like output
trays for the current print job. While it usually sits as an
optional layer between the printing protocol and the page
description language, functions can overlap. Examples of
vendor-speciﬁc job control languages are Xerox Job Con-
trol Language (XJCL), Epson Job Language (EJL), Canon
Common Peripheral Controlling Architecture (CPCA) and
PJL – which is supported by a variety of printers and will be
discussed below. In addition, printer control languages, like
HP’s Printer Management Language (PML), are designed to
affect not only a single print job but the entire device.
Printer Job Language (PJL). PJL was originally intro-
duced by HP but soon became a de-facto standard for print
job control. PJL "resides above other printer languages" [46]
and can be used to change settings like the paper tray or
size. Furthermore, PJL is not limited to the current print job
as some settings can be made permanent. PJL can also be
used to change the printer’s display or read/write ﬁles on
the device. Interestingly, there are many dialects as vendors
tend to support only a subset of the commands listed in the
PJL reference and instead add proprietary ones. Listing 2
shows typical PJL commands. The ﬁrst two commands set
the paper size and number of copies. The last command
switches the language interpreter to PostScript mode.
1 @PJL SET PAPER=A4
2 @PJL SET COPIES=10
3 @PJL ENTER LANGUAGE=POSTSCRIPT
Listing 2: Setting paper size and copies with PJL.
In this work, PJL is used to damage the physical storage
and to gain access to the printer’s memory and ﬁle system.
Printer Management Language (PML). PML is a pro-
prietary language to control HP printers. It basically com-
bines the features of PJL and SNMP. Publicly available
documentation has not been released; however, parts of the
standard were leaked by the LPRng project. According to the