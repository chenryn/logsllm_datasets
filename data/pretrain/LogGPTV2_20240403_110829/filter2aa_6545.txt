### CHOWN(1) - 用户命令

**名称**

`chown` - 更改文件的所有者和组

**概述**

```sh
chown [选项]... [所有者][:[组]] 文件...
chown [选项]... --reference=参考文件 文件...
```

**描述**

`chown` 命令用于更改每个给定文件的用户所有权和/或组所有权。如果只指定了所有者信息（用户名或数字用户ID），则将每个给定文件的所有者设置为指定的用户，而不修改文件的组信息。如果所有者信息后紧跟冒号及一个组名（或数字组ID），则同时变更文件的组信息。如果所有者信息后紧跟冒号但没有组信息，则将文件的所有者设为指定的用户，并将其组设置为该用户的登录组。如果仅指定了冒号或整个操作符为空，则既不修改所有者也不修改组。

**选项**

- `-c, --changes`：类似于详细模式，但仅在做出修改时报告。
- `-f, --silent, --quiet`：不显示大多数错误消息。
- `-v, --verbose`：输出每个处理文件的诊断信息。
- `--dereference`：影响符号链接指向的原始文件（这是默认行为），而不是符号链接本身。
- `-h, --no-dereference`：仅影响符号链接，而不是被引用的任何文件（仅当系统支持更改符号链接的所有者时有效）。
- `--from=当前所有者:当前所属组`：只有当每个文件的所有者和组符合选项所指定时才进行更改。其中一个可以省略，这时已省略的属性就不需要匹配原有属性。
- `--no-preserve-root`：不特殊对待根目录“/”（默认行为）。
- `--preserve-root`：不允许在根目录“/”上递归操作。
- `--reference=参考文件`：使用指定参考文件的所有者和组信息，而不是手动指定所有者:组的值。
- `-R, --recursive`：递归操作文件和目录。

以下选项是在指定了 `-R` 选项时用于设置如何遍历目录结构。如果指定了多个选项，只有最后一个会生效：

- `-H`：如果命令行参数是一个指向目录的符号链接，则对其进行遍历。
- `-L`：遍历每一个遇到的指向目录的符号链接。
- `-P`：不遍历任何符号链接（默认）。
- `--help`：显示帮助信息并退出。
- `--version`：显示版本信息并退出。

如果没有指定所有者，则不会更改所有者信息。如果没有指定组，也不会更改组信息，但如果加上冒号，组会更改为指定所有者的主要组。所有者和组可以是数字或名称。

**范例**

- `chown root /u`：将 `/u` 的所有者更改为 "root"。
- `chown root:staff /u`：与上面类似，但同时也将其组更改为 "staff"。
- `chown -hR root /u`：将 `/u` 及其子目录下所有文件的所有者更改为 "root"。

**作者**

由 David MacKenzie 和 Jim Meyering 编写。

**报告错误**

GNU coreutils 在线帮助：
请向 <[翻译错误报告邮箱]> 报告翻译错误。

**版权**

版权所有 © 2022 Free Software Foundation, Inc. 许可证：GPLv3+：GNU GPL 版本 3 或更高版本。
这是一个自由软件：您可以自由地修改和重新分发它。在法律允许的范围内，没有任何担保。

**参见**

- `chown`(2)
- 完整文档请见：`info '(coreutils) chown invocation'`
- 或者在本地使用：`info (coreutils) chown invocation`