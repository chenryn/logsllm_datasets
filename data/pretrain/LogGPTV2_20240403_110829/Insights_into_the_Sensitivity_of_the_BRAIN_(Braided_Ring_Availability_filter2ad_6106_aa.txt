# Insights into the Sensitivity of the BRAIN (Braided Ring Availability Integrity Network) - On Platform Robustness in Extended Operation

**Authors:**
- Michael Paulitsch
- Brendan Hall
- Honeywell Aerospace
- PI:EMAIL; PI:EMAIL

## Abstract
The design of low-cost, fault-tolerant systems often involves a trade-off between enhancing fault tolerance and adhering to cost constraints. With limited hardware options, it is essential to formulate a fault hypothesis to bound failure assumptions. The system must be grounded in real-world relevance and the assumption that the fault hypothesis is covered.

This paper presents a study that examines the sensitivity of a BRAIN (Braided Ring Availability Integrity Network) design to different fault types and failure rates in a safety-critical application. A Markov-based model, utilizing ASSIST, SURE, and STEM analysis tools, and a series of experiments were conducted to analyze the BRAIN approach. The study evaluates mission reliability and safety in the context of a hypothetical automotive integrated x-by-wire architecture. Drawing from aerospace experience, the authors explore the possibility of continued operation for a limited period after a detected critical electronic failure, allowing a driver to reach repair facilities rather than stopping the vehicle.

## 1. Introduction
Commercial cost pressures and the maintenance and repair capabilities at remote airports have made extended operation despite faults and aircraft dispatch with faults common in the aerospace domain. For example, Extended-range Twin-engine Operation Performance Standards (ETOPS) regulate twin-engine airplane operations and define clear limits on operational duration in the event of engine failure. Similarly, Minimum Equipment Lists (MELs) provide guidelines for pilots when dispatching an aircraft despite a subsystem fault. MELs are established through detailed safety impact analyses, such as ARP5107 for engine electronics [31].

This paper extends the concept of extended operation despite faults to a hypothetical electronic x-by-wire platform in cars [1]. While extended operation may not be necessary for mission success, it provides comfort or commercial benefits, such as the ability to drive the car home or to a garage in case of a failure, avoiding towing. For safety-critical systems like fail-operational by-wire systems, the safety implications of continued operation require careful consideration.

Safety and reliability analyses of systems are well-documented, and mature industry practices for conducting safety case assessments (ARP4754 [9], ARP4761 [35]) are in place. These analyses often focus on available hardware and external effects. This paper acknowledges these analyses but extends them by considering:
1. The effect of integrity faults.
2. The impact of platform algorithms.
3. Periods of extended operation until repair.

We examine extended operation because repair may not be immediately available, and the system must remain operational for some time. During this interval, the system may be particularly vulnerable to additional faults, including hardware exhaustion and integrity violations. An example in automotive systems is the "limp home mode," where the car operates in a degraded mode but remains functional [14]. While the effects of additional failures may be reduced, safety-critical functionality and associated guarantees must be maintained.

Our goal is to assess reliability from a platform perspective. System safety can only be fully considered within a systems context, including applications, hazards, environmental factors, and user influence. However, since a platform forms the foundation of a system, its strength and dependability directly impact hosted applications.

We believe our hypothesis is especially relevant to the automotive domain, where efforts are underway to apply safety standards from other domains, such as IEC61508 [7], ARP 4754 [9], and create specialized platform and automotive safety standards, such as AUTOSAR [34] and ISO26262 [10].

While safety encompasses more than availability, integrity, and reliability, we refer readers to known literature [8] for a broader discussion. Our intent is to examine the relative strengths of different architectural policies concerning integrity and availability guarantees.

## 2. Related Work
Hammett and Babcock evaluated redundancy schemes for by-wire systems [11]. Wilwert et al. quantified external electromagnetic interference (EMI) in by-wire architectures [3]. They also provided a good overview of x-by-wire systems [1]. Navet et al. presented an overview of automotive communication systems, the basis of a by-wire platform [2]. Bertoluzzo et al. examined by-wire applications and networks [23]. Latronico and Koopman looked at automotive communication protocols and algorithms under hybrid fault scenarios [12]. Bridal performed reliability estimates for repairable fault-tolerant systems and network topologies [15][16].

There are numerous reliability evaluation tools available, with a good overview provided in [4]. Recent integrated tool approaches include Möbius [5]. Model evaluations in this paper use ASSIST/SURE/STEM [13] due to its fast model evaluation capabilities.

## 3. Overview of BRAIN
The BRAIN (Braided Ring Availability Integrity Network) is an alternative topology and guardian (fault-containment strategy) for ensuring high-integrity data propagation. A braided ring enhances the standard ring topology with increased connectivity. In addition to neighboring connections, each node is connected to its neighbor’s neighbor via a link called the braid or skip link (Figure 1).

The BRAIN is a flooding network that minimizes propagation delay. Each node propagates a message in real time, leading to minimal bit delays per hop. As described in [17][18], each node is monitored for correct data propagation by the next downstream node through bit-for-bit comparison between data received on the direct and skip links. Data corruption is signaled to downstream nodes with special integrity fields in the dataflow or indicated via truncation (stop-forwarding the message). The action depends on the ring configuration (full-duplex or half-duplex links). Since data flows in two directions, each node receives correct data despite arbitrary failures. To tolerate multiple faults, each end node compares data received from both directions and accepts the valid one.

Each node performs guardian enforcement for its topological neighbors based on synchronized global time and TDMA (Time Division Multiple Access) schedule information to ensure medium availability. The propagation comparison of each node can support high-integrity sources, such as message-based self-checking pairs [18]. Two neighboring nodes form a pair and send their version of the message simultaneously. The propagation logic performs the comparison, and each receiving node gets a high-integrity message if both sources (the pair) sent the same data.

Initial versions of the ring used this mechanism only for application data. We extended this idea to protocol and synchronization messages. Each synchronization message is sent by a pair of nodes, simplifying the synchronization algorithm and improving precision. The removal of the Byzantine error term [19] in clock synchronization algorithms further enhances the BRAIN's performance [20]. SAFEbus/ARINC659 uses a similar algorithmic approach. Self-checking-pair-based synchronization also allows scalable tolerance to multiple fault scenarios by adding master pairs.

This paper focuses on permanent faults and their impact on BRAIN dependability. We understand the need to tolerate multiple transient faults or high-intensity radiated field (HIRF) effects. Shielding and quick restart after communication loss (about two communication rounds in the BRAIN for self-checking pair startup and integration) are the first defenses. Secondly, the self-stabilizing clique aggregation algorithm [18] quickly converges if cliques (subgroups of synchronized end systems) emerge due to multiple transients or other faults.

## 4. Model Description
To produce reliable approximations efficiently using existing tools, we make several assumptions about the models and their parameters: constant failure rates of components, constant repair rates, and neglecting certain types of failure causes. Reducing less likely scenarios dramatically reduces the model state space and solution time. Some assumptions may need revisiting based on the overall deployment of the by-wire architecture and recent developments in electronics (e.g., aging silicon) [21]. Model parameters must be refined to reflect precise components, component reliability numbers, and specific algorithmic or platform configurations. For example, the reliability of the communication component depends on whether it is integrated with a complex, high-power compute core or deployed standalone.

Despite some approximations, the given models should show the sensitivity of the models to parameters and produce interesting results, providing insights into:
- The sensitivity of platform reliability and its impact on safety during extended operation after a failure.
- The sensitivity of the platform to reliability results.
- The impact of algorithmic and configuration choices.
- The impact of integrity detection mechanisms, comparing the full coverage approach of the BRAIN to inline integrity approaches in alternative architectures, such as dual star topologies with redundant active central guardians [24][25].

The model is representative of the underlying platform but does not include application-specific function assignments. Such assignments are crucial for final safety assessment. The presented model and parameters evaluate the foundation and provide insights into whether the foundation is strong enough for application assignments.

The model evaluates the platform's reliability, focusing on availability and integrity and their implications for safety. Safety from a platform perspective means that either an integrity violation or redundancy exhaustion has occurred. Integrity violation means data corruption during transmission or computation. If voting is applied, such data corruptions could be "voted out" at the application level. If high-integrity computing and communication end systems are used, data can be used immediately without voting. Thus, any data corruption by the platform can have severe consequences. High-integrity compute and communication platforms, such as AIMS (Aircraft Information Management Systems) in Boeing 777 and its communication backbone SAFEbus [20], are very enabling due to the reduction in overhead from traditional fault tolerance schemes.