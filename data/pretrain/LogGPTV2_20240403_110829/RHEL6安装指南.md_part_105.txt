    [*如果有必要，阶段 1.5 引导装载程序由阶段 1
    引导装载程序读入内存。*]{.emphasis}
    某些硬件在进入第二阶段引导装载程序之前，要求一个中间步骤。当
    `/boot/`{.filename} 分区处于硬盘的 1024 柱面之上，或者使用 LBA
    模式时，这就会出现这种情况。阶段 1.5 引导装载程序位于
    `/boot/`{.filename} 分区或者是 MBR 和 `/boot/`{.filename}
    分区的一小部分空间里。
    :::
3.  ::: para
    [*将阶段 2 或第二级的引导装载程序读入内存。*]{.emphasis}
    第二级引导安装程序显示 GRUB
    菜单和命令环境。这个界面允许用户选择引导哪个内核或操作系统、将参数传递给内核、或者查看系统参数。
    :::
4.  ::: para
    [*第二级的引导装载程序将操作系统或内核，以及
    `/boot/sysroot/`{.filename} 里的内容读入内存。*]{.emphasis} GRUB
    决定启动哪个操作系统或者内核后，它就会将其装入内存并将机器的控制权交给那个操作系统。
    :::
:::
::: para
这个引导 Linux
的方法被称为*直接载入*，因为引导装载程序直接载入操作系统。引导装载程序和内核间没有互动。
:::
::: para
其他操作系统使用的引导过程可能有所不同。例如，Microsoft Windows
操作系统，以及其他的操作系统，都使用 *chain loading*
的方式安装。在这种方式下，MBR
指向存放操作系统的分区的第一个扇区，找到所需的文件来引导操作系统。
:::
::: para
GRUB 支持 direct 和 chain
安装这两种方式，这使它几乎可以引导任何操作系统。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
在安装过程中，微软的 DOS 和 Windows 安装程序完全覆盖了
MBR（主引导分区），这会破坏所有现有的引导装载程序。如果要创建一个双重引导系统，最好先安装微软的操作系统。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-grub.html#s2-grub-whatis-booting-uefi}E.2.2. 基于 UEFI 的 x86 系统中的 GRUB 和引导过程 {.title}
:::
[]{#ch-grub.html#idm139817118738480
.indexterm}[]{#ch-grub.html#idm139817123706256
.indexterm}[]{#ch-grub.html#idm139817201315456 .indexterm}
::: para
这部分内容讨论了在引导基于 UEFI 的 x86 系统时 GRUB
扮演的特殊角色。要了解引导过程的全貌，请参考 [第 F.2 节
"引导过程的详细介绍"](#ch-boot-init-shutdown.html#s1-boot-init-shutdown-process){.xref}。
:::
::: para
GRUB 在下列阶段将自己载入内存：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    基于 UEFI 的平台从系统存储设备里读取分区表并挂载 *EFI
    系统分区（ESP）*，这是带有特定的*全局唯一标识符（Globally Unique
    Identifier，GUID）*的 VFAT 分区。ESP 包含 EFI
    应用程序，如引导装载程序和工具软件，这些程序保存在软件供应商专有的目录里。从
    Red Hat Enterprise Linux 6 文件系统内部的角度来看，ESP 是
    `/boot/efi/`{.filename}，Red Hat 提供的 EFI 软件保存在
    `/boot/efi/EFI/redhat/`{.filename} 里。
    :::
2.  ::: para
    `/boot/efi/EFI/redhat/`{.filename} 目录包含了
    [**grub.efi**]{.application}，这是为 EFI 固件架构编译的 GRUB
    版本。在最简单的情况下，EFI 引导管理者选择 `grub.efi`{.filename}
    作为缺省的引导装载程序并将其读至内存。
    :::
    ::: para
    如果 ESP 包含了其他 EFI 应用程序，EFI
    引导管理器会提示选择要运行的应用程序，而不是自动载入
    [**grub.efi**]{.application}。
    :::
3.  ::: para
    GRUB
    决定启动哪个操作系统或者内核后，它就会将其装入内存并将机器的控制权交给那个操作系统。
    :::
:::
::: para
因为每个供应商都维护着自己在 ESP 里的应用程序目录，对于基于 UEFI
的系统来说，链载入通常不是必需的。EFI 引导管理者可以载入 ESP
里出现的任何操作系统引导装载程序。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-grub.html#s2-grub-whatis-features}E.2.3. GRUB 的特征 {.title}
:::
[]{#ch-grub.html#idm139817192221040 .indexterm}
::: para
GRUB 包含几个优于 x86
结构的其他引导装载程序的特征。下面是这些重要特征的一个列表：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [*GRUB 在 x86
    机器上，提供一个真正基于命令的、先于操作系统（pre-OS）的环境。*]{.emphasis}
    这个特征给予了用户用指定选项安装操作系统或收集系统信息最大的灵活性。多年以来，很多非
    x86
    结构的系统已经采用了先于操作系统（pre-OS）的环境，且允许系统从命令行引导。
    :::
-   ::: para
    [*GRUB 支持*逻辑块寻址（Logical Block
    Addressing，LBA）*模式。*]{.emphasis}LBA
    将用来寻找文件的寻址转换模式用于硬盘固件，在很多 IDE 和所有的 SCSI
    硬盘设备中都使用它。在 LBA 出现之前，引导安装程序可能受到 BIOS 对
    1024 柱面的限制，即 BIOS 无法找到在磁盘的 1024
    柱面之后的文件。只要系统 BIOS 支持 LBA 模式，LBA 就允许 GRUB 从 1024
    柱面限制之后的分区引导操作系统。大部分新的 BIOS 半本都支持 LBA
    模式。
    :::
-   ::: para
    [*GRUB 可以读取 ext2 分区。*]{.emphasis}这个功能允许 GRUB
    访问其配置文件
    `/boot/grub/grub.conf`{.filename}，在每次系统引导时，如果配置有变化，用户就不需要将第一阶段引导装载程序的新版本写入到主引导分区（MBR）里。只有当
    `/boot/`{.filename}
    分区在磁盘中的物理位置已经改变的时候，用户才需要重新在 MBR
    中重新安装 GRUB。
    :::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-grub.html#sect-grub-installing}E.3. 安装 GRUB {.title}
:::
::: para
In a vast majority of cases, [**GRUB**]{.application} is installed and
configured by default during the installation of Red Hat Enterprise
Linux. However, if for some reason [**GRUB**]{.application} is not
installed, or if you need to install it again, it is possible to install
grub manually.
:::
::: para
On systems without UEFI firmware, a valid GRUB configuration file must
be present at `/boot/grub/grub.conf`{.filename}. You can use the
`grub-install`{.command} script (part of the [grub]{.package} package)
to install GRUB. For example:
:::
``` screen
# grub-install disk
```
::: para
使用系统 boot 驱动器的设备名称（比如 `/dev/sda`{.literal}）替换 *disk*。
:::
::: para
On systems with UEFI firmware, a valid GRUB configuration file must be
present at `/boot/efi/EFI/redhat/grub.conf`{.filename}. An image of
GRUB\'s first-stage boot loader is available on the EFI System
Partitition in the directory `EFI/redhat/`{.filename} with the filename
`grubx64.efi`{.filename}, and you can use the `efibootmgr`{.command}
command to install this image into your system\'s EFI System Partition.
For example:
:::
``` screen
# efibootmgr -c -d disk -p partition_number -l /EFI/redhat/grubx64.efi -L "grub_uefi"
```
::: para
Replace *disk* with the name of the device containing the EFI System
Partition (such as `/dev/sda`{.literal}) and *partition_number* with the
partition number of your EFI System Partition (the default value is 1,
meaning the first partition on the disk).
:::
::: para
有关安装 [**GRUB**]{.application} 的附加信息请查看 [《GNU GRUB
手册》](https://www.gnu.org/software/grub/manual/legacy/Installing-GRUB-using-grub_002dinstall.html)
及 `grub-install(8)`{.systemitem} man page。有关 EFI
系统分区的详情请查看 [第 9.18.1 节
"高级引导装载程序配置"](#ch-guimode-x86.html#x86-bootloader-adv){.xref}。有关
`efibootmgr`{.command} 工具的详情请查看 `efibootmgr(8)`{.systemitem} man
page。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-grub.html#sect-grub-troubleshooting}E.4. GRUB 故障排除 {.title}
:::
[]{#ch-grub.html#idm139817169909728 .indexterm}
::: para
在大多数情况下，会在安装过程的最初阶段安装并配置
[**GRUB**]{.application}，除非使用指定禁用这个行为的 Kickstart
文件安装。因此安装的系统可根据选择软件包安装引导至桌面环境或命令行界面。但在某些情况下可能会出现
[**GRUB**]{.application}
配置崩溃的情况，同时系统再也无法引导。本小节论述了如何修复此类问题。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
[]{#ch-grub.html#idm139817193662544 .indexterm}
::: para
[**GRUB**]{.application} cannot construct a software RAID. Therefore,
the `/boot`{.filename} directory must reside on a single, specific disk
partition. The `/boot`{.filename} directory cannot be striped across
multiple disks, as in a level 0 RAID. To use a level 0 RAID on your
system, place `/boot`{.filename} on a separate partition outside the
RAID.
:::
::: para
同样，因为 `/boot`{.filename}
目录必须位于独立特定磁盘分区中，所以如果拥有该分区的磁盘失败或者被从系统中删除，则
[**GRUB**]{.application} 将无法引导该系统。即使该磁盘在级别 1 RAID
中有镜像也是如此。下面的 Red Hat
知识库文章论述了如何从镜像中的另一个磁盘使系统可引导：
:::
::: para
请注意：这些问题只出现在是 RAID
的软件中，组成阵列的独立磁盘在系统中仍可视为独立磁盘。这些问题不适用于硬件
RAID，其中多个磁盘是作为单一设备出现。
:::
:::
:::
::: para
修复 [**GRUB**]{.application} 配置的具体步骤要视具体问题而定。 [《GNU
GRUB
手册》](https://www.gnu.org/software/grub/manual/legacy/Troubleshooting.html)中提供了
[**GRUB**]{.application}
在不同阶段的所有可能出错信息列表，以及其根本原因。请使用该手册作为参考。
:::
::: para
Once you have determined the cause of the error, you can start fixing
it. If you are encountering an error which only appears after you select
an entry from the [**GRUB**]{.application} menu, then you can use the
menu to fix the error temporarily, boot the system, and then fix the
error permanently by running the `grub-install`{.command} command to
reinstall the boot loader, or by editing the
`/boot/grub/grub.conf`{.filename} or
`/boot/efi/EFI/redhat/grub.conf`{.filename} with a plain text editor.
For information about the configuration file structure, see [第 E.8 节
"GRUB 菜单配置文件"](#ch-grub.html#s1-grub-configfile){.xref}.
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在 [**GRUB**]{.application}
配置目录中有两个完全相同的文件：`grub.conf`{.filename} 和
`menu.lst`{.filename}。首先会载入 `grub.conf`{.filename}
配置文件，因此应该修改这个文件。只有在没有找到 `grub.conf`{.filename}
文件的情况下才会载入第二个文件 `menu.lst`{.filename}。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-grub.html#s1-grub-terminology}E.5. GRUB 术语 {.title}
:::
[]{#ch-grub.html#idm139817179354064 .indexterm}
::: para
在使用 GRUB
之前，需要了解的最重要的一件事情就是它怎样引用设备，如硬盘和分区。这些信息在分配
GRUB 来引导多个操作系统时尤为重要。
:::
::: section
::: titlepage
## [⁠]{#ch-grub.html#s2-grub-terminology-devices}E.5.1. 设备名 {.title}
:::
[]{#ch-grub.html#idm139817122758224 .indexterm}
::: para
当用 GRUB
引用特定的设备时，可以使用下面的格式（注意，从语法上来讲，括号和逗号都是非常重要的）：
:::
::: para
` (,) `{.command}
:::
::: para
*\* 指定 GRUB
引导的设备的类型。最常用的两个选项是代表硬盘的 `hd`{.command} 或代表 3.5
寸磁盘的 `fd`{.command}。另外一个较少使用的设备类型是代表网络磁盘的
`nd`{.command}。有关配置 GRUB 从网络引导的说明，可以访问
。
:::
::: para
*\* 是 BIOS 设备号码。主 IDE 硬盘编号为
`0`{.command}，次 IDE 硬盘则编号为
`1`{.command}。这个规则和用于内核设备的基本一样。例如，内核所使用的
`hda`{.command} 里的 `a`{.command} 和 GRUB 所使用的 `hd0`{.command} 里的
`0`{.command} 类似，而 `hdb`{.command} 里的 `b`{.command} 和
`hd1`{.command} 里的 `1`{.command} 类似，诸如此类。
:::
::: para
*\* 指定设备上的分区的号码。如同
*\*，很多类型的分区都是从 `0`{.command}
开始编号的。然而，BSD 分区却由字母指定，如 `a`{.command} 对应
`0`{.command}，`b`{.command} 对应 `1`{.command}，等等。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
GRUB 下的设备编号总是从 `0`{.command}，而不是从 `1`{.command}
开始的。这是新用户最常犯的错误之一。
:::
:::
:::
::: para
例如，如果系统有一个以上的硬盘，GRUB 会用 `(hd0)`{.command}
来引用第一个硬盘，用 `(hd1)`{.command} 来引用第二个硬盘。GRUB 用
`(hd0,0)`{.command} 引用第一个硬盘里的第一个分区，用 `(hd1,2)`{.command}
引用第二个硬盘里的第三个分区。
:::
::: para
GRUB 通常使用下面的规则来命名设备和分区：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    不管系统的硬盘驱动器是 IDE 还是 SCSI，所有的硬盘驱动器都用字母
    `hd`{.command} 开始。而 `fd`{.command} 用来指定 3.5 寸软盘。
    :::
-   ::: para
    要指定整个设备而不是某个分区，可以将分区号码和逗号都去掉。当 GRUB
    为某个特定磁盘分配主引导分区时，这很重要。例如，`(hd0)`{.command}
    指定了第一个设备上的主引导分区，`(hd3)`{.command}
    指定第四个设备上的主引导分区。
    :::