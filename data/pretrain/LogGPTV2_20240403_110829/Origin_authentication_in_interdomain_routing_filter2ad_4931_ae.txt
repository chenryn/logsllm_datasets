there is a tradeoff between administrative and computational over-
head and reducing the period of vulnerability. Again, we omit a full
discussion of these issues due to space limitations.
4.4 Aggregation
Aggregation allows an AS to encapsulate a set received preﬁxes
in a single UPDATE message (with a superpreﬁx that completely
encompasses the received preﬁxes). This is used where the set of
common preﬁxes is advertised to the network through a single AS
path passing through the aggregating AS. In this sense, aggregation
allows an AS to assume the role of origin for a set of common pre-
ﬁxes. This greatly enhances the scalability of BGP by reducing the
state held at each router. Note that aggregation involves the conﬂu-
ence of both the preﬁx delegation graph and network topology.
Our framework naturally allows for aggregation. Consider the
following example. Organization (cid:6) delegates (cid:12)  (cid:5)(cid:9)(cid:10)  (cid:1) to (cid:6)(cid:1)
and (cid:12)  (cid:1)(cid:9)(cid:10)  (cid:1) to (cid:6) (cid:1)(cid:1). In addition it assigns (cid:12)(cid:9)(cid:10) to one of its
ASes numbered . Also suppose that the ASes of (cid:6)(cid:1) and (cid:6) (cid:1)(cid:1) are
downstream of AS  in the network topology. Of course, (cid:6)(cid:1) and
(cid:6) (cid:1)(cid:1) can make origin announcements with valid OATS for preﬁxes
or sub-preﬁxes of (cid:12)  (cid:5)(cid:9)(cid:10)  (cid:1) and (cid:12)  (cid:1)(cid:9)(cid:10)  (cid:1), respectively,
and those announcements need not go through AS  (e.g., due to
multi-homing). But those announcements that due go through 
can be aggregated by AS  who can send out an announcement for
(cid:12)(cid:9)(cid:10)(cid:3)  with a valid OAT. A slightly larger set of aggregation alter-
natives for (cid:6) are possible using the generalizations to our scheme
discussed in the appendix.
4.5 Generalizations
There are number of natural generalizations to the above scheme.
Consider the following delegation option for an organization (cid:6) for
an address preﬁx (cid:12)(cid:9)(cid:14):
(cid:1)(cid:1). (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:19)(cid:3)   where (cid:19) (cid:12)  and  (cid:12) (cid:0)(cid:1) .
All the previous options can be captured with this as follows. Op-
tion 1., the ASN assignment option, is given by (cid:11) (cid:11) (cid:0) (cid:1) and (cid:19) (cid:0)
(cid:20). Option 2., the delegation option, is given by (cid:11)(cid:19)(cid:11) (cid:0) (cid:1) and  (cid:0) (cid:20).
Option 3., the RESERVED option, is given by (cid:11)(cid:19)(cid:11) (cid:0)  (cid:0) (cid:20). Op-
tion 4., the UNAUTHENTICATED option, is given by (cid:11)(cid:19)(cid:11) (cid:0) (cid:0)(cid:1)
and  (cid:0) . The semantics of this option in terms of the delegation
graph are similar to those described for the UNAUTHENTICATED
option above except that rather than adding edges between (cid:6) and
all of the nodes of the delegation graph, edges are added between
(cid:6) and the nodes of (cid:19) and  . The option is meant to capture the
case in which an organization has not completed its audit of certain
parts of its address space but it has narrowed down the possibilities
for certain address blocks. For example, it may wish to encode in
an attestation that only some subset of its customers can legally be
the next hop in the a preﬁx delegation path. It also captures the
case in which an organization multihomes in the following non-
standard way. (cid:6) has two upstream providers, one, (cid:16), with which
it speaks BGP and one, (cid:19), which it does not. (cid:6) assigns its address
preﬁx (cid:12)(cid:9)(cid:14) to its sole AS and announces this origin announcement
through the upstream provide (cid:16). (cid:6) also delegates (cid:12)(cid:9)(cid:14) to (cid:19) and (cid:19)
assigns (cid:12)(cid:9)(cid:14) to the AS to which (cid:6) is connected. (cid:19) then announces
this latter AS as the origin of (cid:12)(cid:9)(cid:14). While this method of mulihom-
ing is nonstardard, it does in fact occur.
A more general delegation option still for (cid:6) is
(cid:1)(cid:1)(cid:1). (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) 	 where 	 is a subset of all possible paths in the
delegation graph from (cid:6).
Essentially option (cid:1)(cid:1) is a way for (cid:6) to describe and restrict all of
the possible next hops. However, (cid:6) may wish to impose further
restrictions beyond the next hop. In particular it may wish to del-
egate (cid:12)(cid:9)(cid:14) to another organization (cid:6)(cid:1) but not allow (cid:6) (cid:1) to delegate
the address preﬁx further (i.e., require (cid:6) (cid:1) to assign (cid:12)(cid:9)(cid:14) to an AS
number).
The deﬁnitions of the validity and faithfulness of a path are easily
extended to cover these more general cases. Efﬁcient encodings for
these options and other issues will be discussed further in the full
paper.
5. THE ADDRESS DELEGATION GRAPH
The cost of origin authentication systems in general, and the con-
structions deﬁned in the preceding sections in speciﬁc, are a re-
ﬂection of preﬁx reference locality and delegations of the address
space. Any evaluation of an OA must be based on a ﬁrm under-
standing of these factors. Address reference locality is easily ascer-
tained from publicly available BGP update streams. Conversely,
due to the difﬁculty of determining the exact delegation structure,
we estimate the address delegation graph of the IPv4 address space.
This graph is further used as input to our simulations of OA services
in Section 6.
5.1 Approximating IP Address Delegation
While previous studies have accurately reconstructed the routing
topology graph [33], it is exceptionally difﬁcult to approximate a
delegation graph for the Internet. To show why this is so, consider
the fragmentation of AT&T’s 12.0.0.0/8 address space. A re-
cent evaluation of BGP updates for a single day showed 571 dif-
ferent ASes announced 923 distinct preﬁxes in the 12.0.0.0/8
range.8 The delegation of these preﬁxes often occurred years ago.
Moreover, many organizations to which address space was dele-
gated no longer exist, have changed hands, or currently have no
formal relationship with AT&T. Hence, reconstructing and record-
ing these delegations would be an arduous process. Doing so for
every organization in the Internet may take years. For this reason,
any solution must be incrementally deployable: we as a community
simply cannot wait for all delegation to be discovered and recorded.
In a related work, Kent et.al. estimated the statistical properties
of the IPv4 address delegation in investigating deployment costs of
S-BGP [17]. They determined the number of delegated address, or-
ganizations, and ASes using Merit BGP statistics and other public
data as of February 1999. As was appropriate for their purposes,
this work only estimated the size of the problem, but did not con-
sider its structure. It is this latter feature which is most relevant
to the current work: we wish to understand the how and by whom
delegation occurs. We also found the statistical properties of BGP
have shifted signiﬁcantly since the original study. For example,
we identiﬁed a BGP speaker who received 300 times the number of
UPDATEs cited in the previous study (1,500 in 1999 vs. 600,000 in
2003). This differential may be partially explained by the original
study ﬁltering iBGP (we did not). Note that we seek solutions that
can sustain the worst-case load, and hence we focus on the largest
visible load on any BGP speaker. The ratio of iBGP to eBGP traf-
ﬁc is topology dependent and highly variable. However, we wish to
(cid:16)This ﬁgure includes preﬁxes delegated out of AT&T’s address
space, as well as a fraction of the preﬁxes multi-homed by AT&T.
UPDATES
Prefix
12.0.0.0/8
12.1.83.0/24
12.1.96.0/24
12.1.226.80/29
12.1.241.128/26
12.1.245.0/24
ASN
7018
14787
23306
2386
2386
11521
IANA
12.0.0.0/8
AT&T
12.0.0.0/8
12.1.83.0/24
12.1.226.80/29
12.1.245.0/24
12.1.96.0/24
AS7018
AT&T
Data
Modus
Plastipak
Guardian
12.1.226.80/29
12.1.245.0/24
12.1.96.0/24
12.1.83.0/24
AS2386
AS11521
AS23306
AS14787
Figure 2: Address Delegation graph for preﬁx 12.1.0.0/16.
measure the worst case (as it serves as the limit) and hence consider
a heavily loaded environment.
In recognition of the problems inherent of determining a perfect
representation, we approximate the delegation graph using avail-
able interdomain routing information. The following lists several
of the relevant sources and considers the quality of delegation in-
formation that they represent.
a) IANA - IANA is the origin of all delegation of IP address
address space. IANA directly delegates address space to 46
unique organizations [14]. These delegations show the broad
allocation of address space on the Internet, and must be in-
corporated into any approximation of the graph.
b) BGP announcements - One can estimate delegation by look-
ing at announcement encapsulation. Assume that all ASes
announce every preﬁx they are delegated. Any advertise-
ment encapsulated (e.g., has a longer matching preﬁx) that is
from another AS could be considered legal delegation. Note
that this may be a very good predictor of address space del-
egation; every delegation found by this method represents at
least one legal delegation (because no legal delegation will
give the same range to two different ASes).
c) AS Topology - Historically, many organizations have received
address space from their connectivity providers. This organi-
zational linkage is often reﬂected in the AS topology. Hence,
the AS topology can contain partial information about the
address space delegation.
We note that some parts of the delegation graph can only be dis-
covered by communicating with the parties involved. Some or-
ganizations, most notably IANA, own parts of the address space
but do not directly participate in BGP. Hence, the accuracy of any
approximation is partially dependent on the degree to which this
information is public. In general, approximations arrived at using
the above methods are almost certainly going to underestimate the
number of delegations (because of these unexposed organizational
relationships). Our intuition and anecdotal evidence suggests that
such relationships represent but a small percentage of total delega-
tions. However, we do consider the possible effect of underestima-
tion on our results in section 6.3.
5.2 An Approximate Graph
We have selected (a) IANA and (b) BGP announcements to ap-
proximate the delegation graph. We chose not to use the AS topol-
ogy information because it was unclear how such information could
be rationally interpreted with respect to delegation. While topol-
ogy information reﬂects current relationships, IP address assign-
ments often represent delegations that occurred long ago. More-
over, much if not all of the relations between organizations that
would be used to inform delegation are reﬂected in the BGP an-
nouncements. The RouteViews project [21] repository is our source
of BGP announcement data. The delegation graph integrates pub-
lic information published by IANA and obtained a single table up-
date from April 1st, 2003. The BGP table contained 129,731 dis-
tinct preﬁxes advertised by 14,912 ASes. Such numbers are con-
sistent with Huston’s detailed ongoing evaluations of BGP adver-
tisements [12].
One of the challenges in constructing an approximate graph was
making connections between the IANA (organizational) and BGP
announcements.
In looking at the BGP data, we found several
preﬁxes handed out by IANA had a single corresponding AS an-
nouncement. For example, we found that the AS 7018 advertised
12.0.0.0/8. Not surprisingly, 7018 is one of the ASes owned
by AT&T. This is an assignment from the AT&T organization to
its own AS. We added a assignment edge to the graph for each
such announcement using IANA supplied Organization to AS bind-
ings [13]. All other non-self delegations were handled in a similar
manner; a delegation edge was added from the parent organization
when no encompassing AS advertisement exists. In the absence of
other information, dummy organizations were added for each AS.
This graph construction process is illustrated for a small part of the
address space (12.1.0.0) in Figure 2.
Several kinds of UPDATE announcements were not useful in
generating the graph. UPDATES representing self deaggregation
were not useful. Self deaggregation occurs when an AS announces
a preﬁx completely encompassed by another preﬁx announced by
that same AS (e.g., if one of AT&T’s AS announced both 12.0.0.0/8
and 12.1.0.0/16). These longer preﬁxes were ignored.
The complete graph resulting from the graph approximation pro-