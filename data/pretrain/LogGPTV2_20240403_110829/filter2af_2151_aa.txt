本文翻译自：
Research By: Eyal Itkin and Yaniv Balmas
* * *
Fax传真，是一种传输静态图像的通信手段，是指把纸上的文字、图表、相片等静止的图像变换成电信号，经传输路线传输到接收方的通信方式。有了email、微信、手机、web服务、卫星通信等等新型通信技术之后，传真就离我们越来越远了。
然而并不是，传真仍然被广泛地使用着。根据Google调查的结果，有超过3亿传真号码仍在使用中。因此Check
Point研究人员对传真这种相对古老的通信形式进行了分析，想确认传真是否会是网络安全的主要威胁之一。
# 一个传真号码就可以接管网络
传真目前广泛应用于许多行业的多功能打印机设备中，而这些打印机大多通过以太网、WiFi、Bluetooth等接口连接到内部网络或公司网络中。更重要的是多功能打印机还连接着PSTN电话线来支持传真功能。
本研究的设定情景是攻击者在没有其他信息的情况下，通过发送恶意传真到目标传真号码攻击多功能打印机。如果攻击成功，攻击者就可以完全控制打印机，然后可能渗透到打印机连接的网络中。功夫不负有心人，研究人员研究发现，这个假设是成立的，攻击可以完成。
事实上研究人员发现了打印机的许多关键漏洞，然后攻击者通过发送伪造的恶意传真利用打印机漏洞来获取对打印机的完全控制权。获取了打印机的完全控制权后，做任何事情都是可能的了。研究人员选择使用Eternal
Blue来获取PC连接的相同网络的控制权，然后利用PC来窃取数据并通过传真发送给攻击者。研究人员将该攻击命名为Faxploit攻击。
Faxploit攻击视频：  
# 技术细节
## 逆向固件Reversing the Firmware
### 侦查阶段
加载到IDA后，逆向固件的第一步是了解执行了什么和在什么缓解下执行的。侦查后研究人员发现：
#### 架构
固件是通过ARM 32bit CPU加载和执行的，运行在Big
Endian模式（字节高位优先）。主CPU使用共享内存区域与MCU通信，而MCU负责对LCD屏幕的控制。
图1: 打印机架构
#### 操作系统
操作系统为基于ThreadX的实时操作系统（Green Hills）。操作系统使用平坦内存模型(flat memory
model)，即许多任务都在kernel-mode模式下运行，共享所有虚拟地址空间。因为是flat memory
model，所以所有任务通信都应使用消息队列（先进先出）。而且虚拟地址空间是固定的，也没有应用基于ASLR的机制。
#### DSID值
在分析T.30 state machine
task（状态机任务）时，研究人员发现许多使用唯一ID的trace。深入分析发现这些id也用于“DSID_”前缀的字符串列表。这些字符串看似是为了匹配trace的逻辑，因为研究人员建立了不同DSID列表的枚举，对任务trace进行文本描述。
图2: trace函数中使用的DSID值
图3: T.30 state machine使用的DSIS列表
图4: 使用DSID Enum和trace函数
#### 任务间的差距
在逆向T.30状态机和处理HDLC猫的任务时，研究人员发现缺少许多函数指针表。然后发现两个常见的代码模式看起来比较像allocation /
deallocation路径。每个模块中都使用了这些函数来从其他模块接收信息，也可能是用于解压到下一模块的缓存，如图5所示。
图5: 从使用函数表的任务中逆向帧
如果不定位这些函数就不了解数据在固件中的流向，也限制了对固件的理解。因为无法追踪大多数函数指针的初始化，所以需要用更加动态的方法，即需要一个调试器。
### 构建调试器
#### 串行调试接口
首先分析面板，寻找并连接串行调试接口。
图6: 连接JTAGULATOR到打印机的串行调试器
然后研究人员发现调试接口默认是限制的：
图7: 串行调试器拒绝执行命令
貌似需要提升权限，所以研究人员找了一个漏洞。
#### 寻找1-Days
在尝试利用给定固件漏洞时间，常用的方法就是检查使用了哪些开源代码并与已知的CVE进行比较。识别使用的开源代码的方法：
  1. 在固件中进行字符串搜索，从主流开源代码中找出关键字符串
  2. 从厂商网站上搜索产品的开源证书
寻找开源代码中漏洞的方法有：
  1. 寻找匹配相关库版本的CVE细节
  2. 如果对相关漏洞比较熟悉，直接检查是否相关
  3. US CERT每周会发送新公布的CVE的邮件
#### gSOAP调试漏洞– Devil’s Ivy
分析过程中研究人员发现固件使用了gSOAP库，然后twitter上也报告了关于Devil’s Ivy的漏洞，然后研究人员马上进行了检查。漏洞编号为CVE
2017-9765即“Devil’s Ivy”，如图8。
图8: “Devil’s Ivy”漏洞的反编译代码
通过TCP 53048端口发送大XML(>
2GB)文件给打印机开源触发基于栈的缓冲区溢出漏洞。利用该漏洞可以获取打印机的完全控制权限，也就是说可以将该漏洞看作调试漏洞。  
但是该方案有两个缺点：
  1. 利用该漏洞发送的恶意文件需要大量时间，经过优化，传输时间还需要7分钟左右；
  2. 需要开发基于IDA的漏洞利用。
#### 利用Devil’s Ivy
攻击者利用该漏洞可以触发基于栈的缓冲区溢出漏洞，会对字符进行限制。限制的字符有：
  * 0x00 – 0x19不能打印
  * ‘?’: 0x3F
该漏洞的一个好处是溢出是没有限制的，即攻击者可以发送整个漏洞利用链到目标设备的栈中。
漏洞利用的一个限制是嵌入式环境下CPU有许多缓存。一个接收到的包会保存在Data Cache (D-Cache)中，而执行会在Instruction
Cache (I-Cache)中执行。也就是说即使没有NX位支持，也不能直接从栈缓存中执行payload，因为CPU执行的代码要经过I-Cache。
为了绕过这些限制，研究人员必须利用含有下面及部分的bootstrapping利用：
  1. 能够复制D-Cache和I-Cache的ROP；
  2. 解码加载调试器网络加载器的shellcode；
  3. 调试器会通过网络发送给加载器。
### Scout调试器
研究人员构建的调试器是一个基于指令的网络调试器，支持基本的内存读写请求，还可以扩展到支持特定固件指令。研究人员使用调试器从打印机中提取内存副本，然后进行扩展来测试一些特征。
调试器配置为固件API函数（memcpy, sleep, send等）的地址后，调试器就可以加载任何地址了。  
Scout Debugger下载地址：
#### ITU T.30 – Fax协议
如果多功能打印机支持传真功能也就意味着支持Group 3 (G3)传真协议，并遵守ITU
T.30标准。该标准定义了发送者和接收者的基本能力，也列出了协议的不同阶段，如图9。