sC (t1, t2) − sD(t1, t2)
sD,C (t1, t2) =
1 + sD(t1, t2)
≈ sC (t1, t2) − sD(t1, t2)
(7)
Figure 3: Clock skews (NTP corrected) of the access
points in our data set
relatively stable over several days (e. g., weeks 1–2) as well as
others with multiple sudden temperature ﬂuctuations (e. g.,
week 4).
We estimated the clock skew of the twelve APs from the
four FP machines for all consecutive intervals with a dura-
tion of ten minutes each using LSF linear regression. Note
that in practice much shorter intervals are feasible to obtain
precise clock skew approximations. With the online algo-
rithm for LSF proposed in [18], 30–80 seconds of beacon
sniﬃng would be enough to obtain a suﬃciently small mar-
gin of error for the skew approximation. However, we refrain
from applying this method to achieve a very high accuracy.
The data logger measured the temperature with a speci-
ﬁed accuracy of ±0.1 ◦C once per minute and we took the
mean of the ten measurements as the room temperature for
one estimation interval.
The distribution of the APs’ clock skews in our sample is
shown in the box plots of Figure 3. Here, we eliminated the
FP’s inﬂuence on the measurement using the NTP method
(described in more detail in the following section). As we
can see, most APs belong to groups of similar clock skews
(e. g., AP9, AP2, and AP7 or AP8 and AP11). Hence, even
in such a small sample of APs, there is already signiﬁcant
confusion between the APs based on their clock skews. In
the following, we will show how to radically improve the
uniqueness of clock skew based ﬁngerprints and, hence, the
discriminability of APs by considering the dependency of
the clock skew on temperature. But before that, we describe
how to eliminate the distortion caused by the ﬁngerprinter.
The last approximation holds since sD(t1, t2) is in the range
±30 ppm and, hence, division by 1+sD(t1, t2) will maximally
be relevant in the ﬁfth signiﬁcant digit.
We can rewrite this equation again to
sC (t1, t2) ≈ sD,C (t1, t2) + sD(t1, t2)
(8)
and, thereby, have an expression of the (objective) skew of
C in terms of the subjective skew of C as seen by D and
(an approximation of) the (objective) skew of D. The lat-
ter is obtained from an NTP service running for 48 hours
on each FP. In the following, we will call all skew approx-
imations obtained according to this method NTP corrected
clock skews.
If we apply this correction of subjective skews to the exam-
ple from Figure 1, we obtain the situation shown in Figure 4.
We can see that the inﬂuence of the FPs’ clock skew is sig-
niﬁcantly reduced, while the APs’ clock skew still diverges
substantially at diﬀerent measuring times. The remaining
inaccuracies of the ﬁngerprinter skew approximations (espe-
cially visible in the slightly diﬀerent slopes at measuring time
m1) are due to the fact that the results are only corrected
by the average skew of the ﬁngerprinters. This imprecision
is enough to render the NTP method inappropriate for ex-
amining temperature dependency, as will be shown below.
Our proposal to overcome this inaccuracy is to calculate
the diﬀerence between the subjective clock skews of two ac-
cess points measured at the same time. We utilize the fact
that Wi-Fi hotspots are rarely alone in their coverage area.
By performing the 2AP method, we completely remove the
inﬂuence of the ﬁngerprinter. The diﬀerence between the
subjective skews of AP clocks C and C(cid:48) as measured by
FP clock D is equal to the diﬀerence of the corresponding
(objective) clock skews (except for practically irrelevant de-
06.Oct.10.Oct.14.Oct.18.Oct.22.Oct.26.Oct.30.Oct.16182022242628Temperature[◦C]62656871747780Temperature[◦F]AP6AP10AP5AP9AP2AP7AP3AP12AP8AP11AP1AP4−15−10−50510Clockskew[ppm]7Figure 4: Subjective oﬀsets from Figure 1 corrected
by NTP method
Figure 5: Oﬀset diﬀerences of 2AP method (between
C = AP1 and C(cid:48) = AP2) for subjective oﬀsets from
Figure 1
viations), similarly to (7):
sD,C (t1, t2) − sD,C(cid:48) (t1, t2) =
sC (t1, t2) − sC(cid:48) (t1, t2)
≈ sC (t1, t2) − sC(cid:48) (t1, t2).
1 + sD(t1, t2)
(9)
Again, the last approximation holds since sD is in the range
±30 ppm and, hence, changes due to multiplication or divi-
sion by 1 + sD can be neglected.8 In the following, we call
all data obtained according to this method 2AP clock skew
diﬀerences, where we will without loss of generality always
subtract the subjective skew of the AP with the lexicograph-
ically greater MAC address from that of the other.
In Figure 5, the oﬀset diﬀerences of the clocks from Fig-
ure 1 are shown. We observe that taking these diﬀerences
completely removes the inﬂuence of the ﬁngerprinters’ cur-
rent skews and, hence, leads to values that are—in contrast
to the NTP corrected skew approximations—fully compara-
ble between diﬀerent ﬁngerprinters. The diﬀerence between
the diﬀerent measuring times is still visible and our main
claim is that it is, to a large extent, due to the temperature
dependency of the access points’ clocks.
Using the 2AP method, we get meaningful values only
for pairs of access points. Hence, it is at ﬁrst ambiguous
which of the two APs is responsible for a possible mismatch.
Still, the information provided is essential. If more than two
access points are visible then several or all possible pairs
can be examined and a faked access point should lead to
mismatches in signiﬁcantly more of its pairs than the others.
Moreover, the sole presence of a faked access point might be
enough to render a whole environment untrustworthy or at
least suspicious.
In Figure 6, we show samples of clock skew measurements
as a function of temperature for two APs with the NTP
method and the corresponding pair for the 2AP method,
i. e., the approximate skews and skew diﬀerences in parts
per million (ppm) of our ten minute measuring intervals
are plotted over the average temperatures in these inter-
vals. Apparently, the FPs have very distinct dependencies
8Observe that this is, by equation (7), also approximately
equal to the subjective skew sC(cid:48),C (t1, t2) of access point C
as seen by access point C(cid:48). Similar observations concerning
clock skew arithmetic have been already made by Aracka-
parambil et al. [1], but not applied to eliminate ﬁngerprinter
inﬂuence.
on temperature leading to diﬀerent distributions of the data
for the NTP method. These dependencies are intrinsic and
cannot be modeled independently of the ﬁngerprinter. Be-
sides the variations caused by the FPs, the intrinsic temper-
ature dependency characteristics of the APs are also clearly
visible. As described above, for the 2AP method, only the
APs’ dependency on temperature remains, while the FPs’
dependency is completely eliminated. Therefore, the 2AP
method yields a fully ﬁngerprinter-independent estimation
of the clock skew diﬀerences and can be used to further ex-
amine the temperature dependency of the APs’ clocks.
Accordingly,
in the following section, we show how to
model the temperature dependency for the 2AP method in
order to drastically increase the ﬁngerprinting accuracy. Fi-
nally, we will analyze the fake AP detection eﬃciency of our
methods.
6. TEMPERATURE DEPENDENCY
Theoretically, common crystal oscillators should exhibit a
cubic dependency on temperature (see Section 3.1). How-
ever, our practical observations do not conﬁrm this assump-
tion. There are several possible reasons: Firstly, the cubic
dependency is to be expected for crystal oscillators against
the temperature of the crystal, while we measure the depen-
dency of TSF clock skews on room temperatures. The de-
pendency between room temperature and crystal tempera-
ture may be non-trivial, e. g., due to diﬀerent (passive) cool-
ing behavior of the AP. Besides, the regarded temperatures
might cover only a small section of that cubic function. Sec-
ondly, there might be other physical inﬂuences that correlate
with temperature and change the frequency and, hence, the
skew. Thirdly, the crystals used in certain APs might not be
AT-cut crystals that exhibit this cubic dependency (or sub-
optimal quality of the cuts might lead to a deviation from
the theoretical properties).
Therefore, we use Gaussian process regression (GPR) [22],
a method that does not make any assumptions about the
underlying function and thus is suitable as a generic ap-
proach for modeling the dependency. The goal of our model
is to predict values f (x∗) of the clock skew diﬀerence of two
APs that is to be expected at a given room temperature
x∗. In general, a Gaussian process can represent f (x) indi-
rectly by considering the observed data. Each observation
050100150200250300350400D(t)−D(t0)[s]−4−3−2−101234NTPcorrectedoﬀsetD,C(t0,t)[ms]FP1AP1m0&FP2AP1m0FP1AP1m1&FP2AP1m1FP1AP2m0&FP2AP2m0FP1AP2m1&FP2AP2m1050100150200250300350400D(t)−D(t0)[s]−4−3−2−101234oﬀsetD,C(t0,t)−oﬀsetD,C(cid:48)(t0,t)[ms]FP1m0&FP2m0FP1m1&FP2m18V[f (x∗)], which only depends on the training inputs. GPR
is designed to interpolate predictions for unobserved inputs.
In practice, we have precomputed and stored the predictive
mean and predictive variance for all temperatures needed in
our evaluation with a granularity of 0.1 ◦C.
In our model, we use the squared-exponential covariance
function
k(xp, xq) = σ2
f exp
(cid:18)
(cid:19)
2(cid:96)2 (xp − xq)2
− 1
+ σ2
nδpq
as it meets our requirements well: values whose inputs are
close get a higher inﬂuence on the prediction, while distant
observations have negligible eﬀect; it is also inﬁnitely diﬀer-
entiable, leading to smoothness of the generated predictions.
It is parameterized by hyperparameters θ = (σ2
n), where
σ2
f is the variance of the signal itself, (cid:96) is the length-scale
and σ2
n is the expected variance of measurement noise. We
estimate these hyperparameters by optimizing the marginal
likelihood on our training data. For a detailed description
we refer to Rasmussen and Williams [22].
f , (cid:96), σ2
Figure 7 shows examples for GPR applied to our data.
We can see that the predicted mean functions perfectly ﬁt
our observed data. We veriﬁed that comparable predictions
can be obtained using much smaller samples of about 100
observations.
When using clock skews (or clock skew diﬀerences) as ﬁn-
gerprints, suitable intervals for recognition (as shown in Fig-
ure 7) have to be deﬁned due to the volatile nature of these
measures. In the following section, we provide a formal def-
inition of such recognition intervals.
7. EVALUATION OF PREDICTION
In this section, we ﬁrst deﬁne recognition methods based
on the results described above. We then evaluate the accu-
racy of these methods regarding fake AP detection. Finally,
we provide an information theoretical perspective on tem-
perature dependency as a feature for ﬁngerprinting.
7.1 Recognition Intervals
In order to provide recognition methods for APs, we spec-
ify appropriate acceptance intervals of observed data for all
considered methods. Regardless of the method, we classify
5% of our training data as outliers.
Therefore, we deﬁne this interval for the corrected skews
of the NTP method and for the skew diﬀerences of the 2AP
method as µ ± 2σ, where µ is the mean and σ the standard
deviation of a normal distribution ﬁtted to the training data.
The NTP method directly allows the recognition of an AP,
while the 2AP method needs at least one additional AP for
comparison (as described in Section 5).
To apply temperature dependent skew diﬀerence predic-
tions, we derive a new method, called 2AP-T, that em-
ploys Gaussian process regression (as described in the pre-
vious section). Here, the recognition interval is speciﬁed by
f (x∗)± 2(cid:112)V[f (x∗)], where f (x∗) is the predicted mean and
V[f (x∗)] the predicted variance of the corresponding GPR,
given the current room temperature x∗.
The properties of normal distribution and GPR ensure
that the recognition intervals comprise about 95% of the
training data.
To evaluate the discriminability of ﬁngerprints generated
by these three methods, we calculated their average recog-
Figure 6: NTP-corrected clock skews and 2AP clock
skew diﬀerences in relation to room temperature
measured by four FPs (diﬀerent colors)
yi ∈ {y1, ..., yn} for an input xi is assumed to be a single
point sampled from a multivariate Gaussian distribution,
given by yi = f (xi) + ε, where ε ∼ N(0, σ2
n) is the additive
noise term. A Gaussian process, speciﬁed by its mean func-
tion m(x) (usually assumed to be zero) and the covariance
function k(xp, xq) can be used to deﬁne a prior over possi-
ble functions, f ∼ GP(m(x), k(xp, xq)). For the posterior
distribution, the prior is restricted to contain only functions
that meet the observed data. This is done by computing for
each test input x∗ a predictive mean f (x∗), which is a linear
combination of all training inputs and outputs built accord-
ing to the covariance function, and a predictive variance