符中的任意一个：
hold 命令将当前索引条目的备份放入保持空间。随后的替换命令寻找下面元字
的结构，
metacharacter"/
/^\.XX /s/"asterisk (\*) metacharacter"/"asterisk (*)
V/~11. xx ↓/s//\1///
"asterisk (*) metacharacter"/ 
s/^\n/ /'
s/~111. xx 1(. *1)$/\/~11. xx 1/s\/\1///
s/$/\//
s/~\. xx // 
s/[\&]&/g
s/[][\*.]/\\&/g 
/^\.Xx /s/"asterisk (\*) metacharacter"/
K
这是不可能的。转义元字符之后，交换命令交换模式空间和保持空
QQ群：
，替换命令为替换字符串添加反斜杠来转义反斜杠或“与”
““”
50192241
“”
135 -
并且把它追加到模式空间。因为
“*”
只有反斜杠在字符类中有特殊含
和“$”，因为仅当它们分别
或
第六章高级 sed 命令
“”
那么它照字面意义解
。这一正则表达
---
## Page 136
这个脚本有两个基本部分，
在样本文件上运行这个脚本会产生：
事
下面是脚本：
行收集到保持空间。检索保持空间的内容并且用段落标签包围这些内容。
的
到在纯文本文件中放置HTML风格的段落标签。例如，输入文件包含由可变长度
“”和“”分别用于开始和结束一个段落。在下一个示例中，
的代码用禁用格式。HTML编码的文档还包含许多面向块的结构。例如，
保持空间可用于在输出行块之前收集它们。
构建文本块 
，如果它是空行则做另一件事。如果输入行不是空行，它就被追加到保持空
行组成的段落。段落之间都有一个空行。因此，脚本必须将空行之前的所有
命令中必须包围文件块。通常在块开始处的代码用启用格式，
work in achieving the same result.
Most of the things that you can do with these programs 
would be essential to being productive.
bui lding shelves.
My wife won' t let me buy a power saw. She is afraid of an
s/$//
s/~\n//
using these programs can save many hours of repetitive
can be done interactively with a text editor. However,
sed and awk are power tools for editing.
For people who create and modify text files,
saw.
have to use a power
However,
accident if l use one.
/~$/!{
~$/{
 The speed and efficiency provided by power tools
QQ群：
，相应有各自的地址。
50192241
- 136 -
，一些troff请求和宏是面向块的
如果输入行不是空行则做一件
第六章高级 sed 命令
而大块结尾处
我们将看
---
## Page 137
止。注意脚本中的流控制是很重要的。脚本中的第一个过程并没有到达底部，
该脚本说明了如何收集输入并将它保存到保持空间中，直到匹配另一个模式为
式空间中编码的段落。
注意，嵌入的换行符保存在模式空间中。最后一个命令G将保持空间的空行追
换行符而只匹配末端换行符）。
行的开始位置
接下来进行两个替换：在模式空间的开始位置放“”，
我们可以在过程结束时检索它（也可以用其它方式插入换行符）。
模式空间的空行表示为“~$”，即匹配它的正则表达式。保持空间的嵌入的换行
间和保持空间包含下列内容：
如果输入行是空行，
而将它们收集到保持空间。
“”
交
行
到
符
T
间
口到模式空间。一旦到达脚本的底部，sed就输出在保持空间中收集，并在模
换命令（x）交换保持空间和模式空间的内容。
保持空间。即使保持空间为空，Hold 命令也将在模式空间的内容之前放置换
一个样本文件的第二段并显示所发生的事情。在读怪一个空行之后，模式空
间。控制转移回脚本的顶端并读取一个新行。总的思想是不输出任何文本行,
符。
表示为“\n”.注意，Hold命令在保持空间插入换行符，然后将当前行追加
Hold Space:
Pattern Space:
Pattern Space:
editing.
awk are power tools for 
modify text files,
Hold Space: 
Pattern Space:
Hold Space:
第一个替换命令匹配“^\n”，因为以上的Hold命令使用换行符位于
置
第二个替换命令匹配模式空间的结尾（“$”不匹配任何嵌入的
QQ群：
则处理保持空间的内容。
editing.For people who create and
\nFor people who create and
\nFor people who create and
awk are power tools for 
modify text files, \nsed and
S
modify text files, \nsed and 
S
awk are power tools for
nsed and
50192241
- 137-
，为了说明第二个过程，我们使用
空行被保存在保持空间，所以
第六章
并且在结束位置放置
 高级 sed 命令
---
## Page 138
在冒号和标签之间不允许有空格。行结尾处的空格将被认为是标签的一部分。
标签是任意不多于7个字符的序列(注1)。标签本身占据一行并以冒号开始:
移，它们只有当替换命令改变当前行时才会执行。
控制转移到脚本的结尾处。分支命令用于无条件转移，测式命令用于有条件转
两个用于控制执行脚本的哪一部分以及何时执行的命令。分支（b）和测式
我们已经看过了几个改变 sed 的正常流控制的示例。在本书中，我们将会看到
HTML分段标签，同时输出段落。
一旦退出这个过程，在模式空间中会有一个空行。它匹配后续过程中空行并添
中匹配非空行所做的事情。然后使用替换命令在模式空间创建一个空行。
处理。如果当前行不为空，
配文件中的最后一行。这个过程测式不为空的行。如果行为空，那么不做任何
这个过程必须旋转在脚本中并在前面给出的两个过程之前。寻址符号“$”只匹
配用来输出已经收集在保持空间中的内容的过程。
乐
高级的流控制命令
会出现什么情况？从最后一个空行以来收集到的行都不会被输出。处理这种情
改善脚本的可靠性。例如，在上一个脚本中，如果输入文件的最后一行不为
这个脚本还说明了如何使用寻址来建立互斥的地址，
之前清除模式空间和保持空间。
因为我们还不想要任何输出。第二个过程到达底部，在开始收集下一段落的行
（t）命令将脚本中的控制转移到包含特殊标签的行。如果没有指定标签，则将
制
其
况
中
在分支命令或测试命令中指定标签时，在命令和标签之间允许有空格：
到保持空间并用替换令清除模式空间的内容。将当前行替换成空行，
进行匹配处理。换句话说，
有多种方式，
的一个或另一个地址。还可以设置地址来处理输入中的各种例外，并且因
b mylabel 
 : my labe l
}i/$、/
s/.*// 
工
，但是较聪明的方式是构造一个空行，随后处理空行的过程会对
QQ群：
那么就把它追加到保持空间。这就是在另一个过程
50192241
如果最后一行包含一行文件，
- 138 -
下面就是处理过程：
即行必须匹配互斥的地址
第六章高级 sed 命令
那么我们将把它
使
复
空
此
匹
---
## Page 139
例如，如果我们使用了多个宏包，那么除了.ES和.E之外，还有可能有其他宏
赋予了你几乎不受限制的脚本跳转控制能力。
令，或者应用于紧随其后的包围在大括号中的一组命令。另一方面，
的优点是，
通过使用！并组合一组命令可以实现类似的效果。在应用中对分支命令使用！
匹配的过程。
分支命令可用于将一组命令作为一个过程来执行，这个过程可以从这个脚本的
因为没有提供标签，
改变。因此，
成对应的排版脚本。
在第四章“编写 shelI脚本”中，
Labe”是可选的，
Branch 命令用于在脚本中将控制友转移到另一行。
分支
注意：不要在标签后面插入空格。
主
本
label就继续执行标签后面的行。
注签
体中重复调用。和上面的情况一样，它也可用于避免执行某个基于一个模式
这一部分。例如，
为任意长度
1:
s/@DQ@/" /g
s/\l(em"/\l(em
s/\\(em\\~"/\\(em‘‘/g 
s/ "$/’′
s/~"/‘‘/
/^\. ES/, /^\. EE/b
[address]b[label]
POSIX 标准表明具体实现工具允许有其较长的标签，GNUsed 允许标
可以更容易地指定要避免的多个情况。
我们将以前的脚本改写成：
如果没有给出label,控制就被转到脚本的结尾处。如果有
QQ群：
，所以分支命令跳过后面所有的命令转到脚本的结尾。
’\\(em/g
，计算机生成的由.ES 和.EE 宏标记的示例中的文本不应该被
如果想要避免改变某些行，那和可以使用分支命令跳过脚
50192241
，介绍了将引号和连字符自身的排版形式转换
139-
！符号可以应用于单个命
第六章高级 sed 命令
分支命令
---
## Page 140
行 command2。跟在 command2后面的分支命令将控制转移支脚本的结尾处，绕
第一个分支命令在模式匹配时将控制转移到command3。如果模式不匹配，则执
都执行。在下一个脚本中，有两个分支命令。
在所有的情况下，
在下一个例子中，首先执行command1。如果模式匹配、控制权就会转移支跟在
命令可以多次执行。
只有当模式不匹配时才执行command3。所以这3个命令都会执行，尽管前两个
command1 和 command2 将再次执行。
指定的模式匹配，那么控制就被转移到跟在标签“top”后面的行、这意味着
的示例。第一个例子表明了如何使用分支命令创建循环。
为了得到 sed 脚本中更好的流控制类型的想法，
可以写出下例：
所定义的范围与我们所定义的相重合，这就是我们需要全力避免的。因此我们
现
标
在，我们来看看如何指定执行 command2或 command3中的一个，但不是两都
command3
:dothree
command2
/pattern/b dothree
command1 
command3
:end   
/pattern/b end
command3
/pattern/b top
command2
command1
/~\. G1/,/~\. G2/b 
:top
/^\. PS/, /^\. PE/b 
/~\. ES/, /~\. EE/b 
都会执行 command1和 command3。
QQ群：
50192241
，我们来看看一些既简单又抽象
第六章高级 sed 命令
一旦读取一个输入
---
## Page 141
如果上面的脚本是一个更大的脚本中的一部分，我们可以使用标签（可以形象
语句的功能。即测试每种情况并且当一种情况为真时，
Test 命令提供的功能类似于C程序设计语言,
试着执行下一个替换命令。这个过程将一直重复到所有的可能性都用完为止。
下一个输入行。
行上有3个参数，那么第一个替换命令之后的test 的命令为真，sed 继续进行
一旦一个替换被执行、
面是Tim的脚本：
2、1）匹配每一种情况并且当成功地进行替换时、避免进行进一步的替换。
我们看看来自Tim O’Reilly的一个示例。他试图在计算产生命令参考页顶端
那么就会继续执行标签后面的行。
如果没有给出标签label，
如果在当前匹配地址的行上进行了成功的替换，那么test命令就会转到标签
地
需
的
（或者脚本的结尾）处。因此，它隐含了一个条件分支。Test 命令语法如下：
测式命令
有
过
命名为“break”）直接转移到分组命令的末尾，然后继续执行其他一些命
要做一些与只有两个或一个引用参数不同的事情。这个任务尝试连续地（3、
宏中的参数的基本上，生成自动的索引条目。
条件。我们在看过test命令之后就会看到一个“真实的世界”的示例。
了command3。第一个分支命令来执行的条件是匹配模式，第二个命令执行没
t break 
/nε\\L\/(\*)\(\*）\(\*)\/S
八\. Rh 0/ { 
s/ "\(.*\)"/"\1"/
/n\L\/(\*)\(\*）\/S
S
八\. Rh 0/ { 
[address]t[label]
/u\\uL\…/(）\(*)\(*）\
。如果少于3个参数，就不会进行替换，test命令为假，并且将
QQ群：
其中的test 命令就使控制到达脚本的末尾。如果在.Rh
：控制被转移支脚本的结尾处。如果提供了标签“abel，
50192241
-141
或 shell程序设计语言中的 case
如果有3个引用的参数、
退出结构。
第六章
 高级 sed 命令
那么
---
## Page 142
执行这个功能：
第一个请求是将一系列空行缩减为一个，这已经在本章介绍过了。下面的4行
two
他使用这个脚本后回复了如下邮件：
的脚本：
还记得Lenny 吗？他提出了将 Scribe 文档转换成troff。我们向他发送了下面
working
be
另一种情况
下一节给出了test命令和标签的用法的一个完整的示例。
at all—maybe it' s hopeless and I should be content with what' s 
 optimal it should do two more things that l can’ t seem to get
/~$/{
Thanks again.
conversion script so that it works with what you’ ve done, but to
s/@f1(\(.*\n[)]*\))/\\fB\1\\fR/g
/@f1(. */ { 
s/@f1(\([~)]*\))/\fB\1\\fR/g
Lenny
(say, even only three) lines.
First,
there.
where I was confused about the way it works.
# 改变 Scribe字体的脚本.
mor e commands
:break
QQ群：
50192241