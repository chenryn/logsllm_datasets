# Meticulous Modern Mobile Manipulations
## DEF CON 27, Las Vegas
### Speaker: Leon Jacobs

**About the Speaker:**
- **Name:** Leon Jacobs
- **Twitter Handle:** @leonjza
- **Role:** Security Researcher at SensePost
- **Experience:** Over 10 years of experience in hacking various systems
- **Background:** Initially had a strong dislike for mobile application security, which has since evolved.

---

### Introduction to Mobile Application Hacking

Let's be honest about mobile application hacking. The landscape is constantly evolving, and understanding the intricacies is crucial.

- **Days Since Last Public Jailbreak:** This metric is important for understanding the current state of mobile security.
- **Server Mode vs. Gadget Mode:** Different modes can provide different levels of access and control.

#### Example Code Snippet:
```javascript
pinning.checkPin.implementation = function () {
    // Custom implementation here
}
```

This is useful, but we can do more with the available tools and techniques.

#### File Handling in Java and Objective-C:
- **Java:**
  ```java
  const file = Java.use("java.io.File").$new("/");
  ```
- **Objective-C:**
  ```objc
  const file = ObjC.classes.SIFiles.alloc().init();
  ```

---

### Understanding the Application Heaps and Components

- **Application Heaps:** Memory management and data storage.
- **Crypto Handlers:** Encryption and decryption mechanisms.
- **Class Loaders:** Dynamic loading of classes.
- **Sockets:** Network communication.
- **Config Classes:** Configuration settings.
- **State Classes:**
  - **Methods:** Get and set properties.
  - **Property Values:** Data stored in properties.
  - **Calling Methods:** Alter the state of the application.

#### Using Frida for Analysis:
- **Java:**
  ```javascript
  Java.choose(className, callbacks);
  ```
- **Objective-C:**
  ```javascript
  ObjC.choose(specifier, callbacks);
  ```

---

### Demonstrations

- **Heap Analysis on iOS (TikTok):**
  - **Demo Video:** [heap-ios-tiktok.mov]
- **Dalvik System Class Loader:**
  - **Demo Video:** [reflection.mov]

---

### Existing Tools for Mobile Application Analysis

- **FLEX by Flipboard:**
  - **GitHub:** [https://github.com/Flipboard/FLEX]
- **Stetho by Facebook:**
  - **GitHub:** [https://github.com/facebook/stetho]

#### Integration with Frida
- **iOS FLEX Plugin:**
  - **Demo Video:** [ios-flex-plugin.mov]
- **Android Stetho:**
  - **Demo Video:** [android-stetho.mov]

---

### Advanced Integration Techniques

- **HTTP API Server:**
  - **Client Communication:** Using HTTP and JSON.
- **Jenkins Binary Protections:**
  - **Demo Video:** [jenkins-binary-protections.mov]

---

### Conclusions

- **Runtime Analysis:** More than just hooking; it involves deep inspection and manipulation.
- **Root Access:** Not always necessary for effective analysis.
- **Accessibility:** These techniques are accessible to everyone.
- **Future Exploration:** Let's continue to explore and push the boundaries.

---

### Thank You!

- **Twitter:** @leonjza
- **Company:** @sensepost
- **GitHub Repository:** [https://git.io/objection]

---

This optimized version aims to make the content more structured, clear, and professional. It also ensures that the key points and demonstrations are highlighted effectively.