::: itemizedlist
**其它资源**
-   [支持的 kdump
    配置和目标](#supported-kdump-configurations-and-targets_managing-monitoring-and-updating-the-kernel.html#supported-kdump-targets_supported-kdump-configurations-and-targets "支持的 kdump 目标"){.link}
-   在 Red Hat Enterprise Linux
    中[配置基本系统设置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#sec-SSH){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-the-core-collector_configuring-kdump-on-the-command-line}配置内核收集器 {.title}
:::
`kdump`{.literal} 服务使用 `core_collector`{.literal} 程序捕获
`vmcore`{.literal} 镜像。在 RHEL 中，`makedumpfile`{.literal}
实用程序是默认的内核收集器。
`makedumpfile`{.literal}
是一个转储程序，可帮助压缩转储文件的大小，并使用各种转储级别复制所需的页面。
`makedumpfile`{.literal}
通过压缩转储数据或者排除不必要的页面或同时排除其中的小转储文件来创建小转储文件。它需要第一个内核调试信息来了解第一个内核如何使用内存。这有助于检测所需页面。
::: title
**语法**
:::
``` screen
core_collector makedumpfile -l --message-level 1 -d 31
```
::: itemizedlist
**选项**
-   `-c`{.literal}、`-l`{.literal} 或 `-p`{.literal} ：指定每个页的压缩
    dump 文件的格式，使用 `zlib`{.literal} 用于 `-c`{.literal}
    选项、使用 `lzo`{.literal} 用于 `-l`{.literal} 新选项，或
    `snappy`{.literal} 用于 `-p`{.literal} 选项。
-   `-d`{.literal} `(dump_level)`{.literal}
    ：排除页面，它们不会复制到转储文件中。
-   `--message-level`{.literal}
    ：指定消息类型。您可以通过使用这个选项指定 `message_level`{.literal}
    来限制打印的输出。例如，把 `message_level`{.literal} 设置为 7
    可打印常见消息和错误消息。`message_level`{.literal} 的最大值为 31
:::
::: itemizedlist
**先决条件**
-   实现了配置和目标的 `kdump`{.literal} 要求。
:::
::: orderedlist
**流程**
1.  以 `root`{.literal} 用户身份，编辑 `/etc/kdump.conf`{.literal}
    配置文件并从
    `#core_collector makedumpfile -l --message-level 1 -d 31`{.literal}
    的开头删除 hash 符号(\"#\")。
2.  要启用转储文件压缩，请执行：
:::
``` screen
core_collector makedumpfile -l --message-level 1 -d 31
```
其中,
::: itemizedlist
-   `-l`{.literal} 指定 `dump`{.literal} 压缩文件格式。
-   `-d`{.literal} 将转储级别指定为 31。
-   `--message-level`{.literal} 将消息级别指定为 1。
:::
另外，请考虑使用选项 `-c`{.literal} 和 `-p`{.literal} 的以下示例：
::: itemizedlist
-   使用 `-c`{.literal} 压缩转储文件：
:::
``` screen
core_collector makedumpfile -c -d 31 --message-level 1
```
::: itemizedlist
-   使用 `-p`{.literal} 压缩转储文件：
:::
``` screen
core_collector makedumpfile -p -d 31 --message-level 1
```
::: itemizedlist
**其它资源**
-   `makedumpfile(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-the-kdump-default-failure-responses_configuring-kdump-on-the-command-line}配置 kdump 默认失败响应 {.title}
:::
默认情况下，当 `kdump`{.literal} 在配置的目标位置创建 vmcore
文件失败时，系统会重启，且转储会丢失。要更改此行为，请遵循以下步骤。
::: itemizedlist
**先决条件**
-   实现了配置和目标的 `kdump`{.literal} 要求。
:::
::: orderedlist
**流程**
1.  以 `root`{.literal} 用户身份，从 `/etc/kdump.conf`{.literal}
    配置文件的 `#failure_action`{.literal} 行的开头删除 hash
    符号(\"#\")。
2.  将值替换为所需操作。
    ``` screen
    failure_action poweroff
    ```
:::
::: itemizedlist
**其它资源**
-   [配置 kdump
    目标](#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-the-kdump-target_configuring-kdump-on-the-command-line "配置 kdump 目标"){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuration-file-for-kdump_configuring-kdump-on-the-command-line}kdump 的配置文件 {.title}
:::
`kdump`{.literal} 内核的配置文件是
`/etc/sysconfig/kdump`{.literal}。此文件控制 `kdump`{.literal}
内核命令行参数。
对于大多数配置，请使用默认选项。然而，在某些情况下，您可能需要修改某些参数来控制
`kdump`{.literal} 内核行为。例如：附加 `kdump`{.literal}
内核命令行来获取详细的调试输出。
本节介绍为 `kdump`{.literal} 修改 `KDUMP_COMMANDLINE_REMOVE`{.literal}
和 `KDUMP_COMMANDLINE_REMOVE`{.literal}
选项。有关附加配置选项的详情请参考
`Documentation/admin-guide/kernel-parameters.txt`{.literal} 或
`/etc/sysconfig/kdump`{.literal} 文件。
::: itemizedlist
-   `KDUMP_COMMANDLINE_REMOVE`{.literal}
    这个选项从当前 `kdump`{.literal} 命令行中删除参数。它删除可能导致
    `kdump`{.literal} 错误或 `kdump`{.literal}
    内核引导失败的参数。这些参数可以从之前的
    `KDUMP_COMMANDLINE`{.literal} 进程解析，或者继承自
    `/proc/cmdline`{.literal} 文件。如果未配置此变量，它将继承
    `/proc/cmdline`{.literal}
    文件中的所有值。配置此选项还提供了有助于调试问题的信息。
    [**示例**]{.strong}
    要删除某些参数，请将其添加到 `KDUMP_COMMANDLINE_REMOVE`{.literal}
    中，如下所示：
    ``` screen
    KDUMP_COMMANDLINE_REMOVE="hugepages hugepagesz slub_debug quiet log_buf_len swiotlb"
    ```
-   `KDUMP_COMMANDLINE_APPEND`{.literal}
    此选项将参数附加到当前命令行。这些参数可能已被前面的
    `KDUMP_COMMANDLINE_REMOVE`{.literal} 变量解析。
    对于 `kdump`{.literal} 内核，禁用某些模块，如
    `mce`{.literal}、`cgroup`{.literal}、`numa`{.literal}，`hest_disable`{.literal}
    有助于防止内核错误。这些模块可能会消耗为 `kdump`{.literal}
    保留的大量内核内存，或导致 `kdump`{.literal} 内核引导失败。
    [**示例**]{.strong}
    要在 `kdump`{.literal} 内核命令行中禁用内存
    `cgroups`{.literal}，请运行以下命令：
    ``` screen
    KDUMP_COMMANDLINE_APPEND="cgroup_disable=memory"
    ```
:::
::: itemizedlist
**其它资源**
-   `Documentation/admin-guide/kernel-parameters.txt`{.literal} 文件
-   `/etc/sysconfig/kdump`{.literal} 文件
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#enabling-and-disabling-the-kdump-service_configuring-kdump-on-the-command-line}启用和禁用 kdump 服务 {.title}
:::
要在引导时启动 `kdump`{.literal} 服务，请按照以下步骤操作。
::: itemizedlist
**先决条件**
-   实现了配置和目标的 `kdump`{.literal} 要求。
-   安装 `kdump`{.literal} 的所有配置都是根据您的需要设置的。
:::
::: orderedlist
**流程**
1.  要启用 `kdump`{.literal} 服务，请使用以下命令：
    ``` screen
    # systemctl enable kdump.service
    ```
    这为 `multi-user.target`{.literal} 启用服务。
2.  要在当前会话中启动该服务，请使用以下命令：
    ``` screen
    # systemctl start kdump.service
    ```
3.  要停止 `kdump`{.literal} 服务，请输入以下命令：
    ``` screen
    # systemctl stop kdump.service
    ```
4.  要禁用 `kdump`{.literal} 服务，请执行以下命令：
    ``` screen
    # systemctl disable kdump.service
    ```
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
建议将 `kptr_restrict=1`{.literal} 设置为默认值。当将
`kptr_restrict`{.literal} 设置为 (1) 作为默认时，`kdumpctl`{.literal}
服务会加载崩溃内核，即使启用了内核地址空间布局 (KASLR)。
:::
::: title
**故障排除步骤**
:::
当 `kptr_restrict`{.literal} 没有设置为 (1) 时，如果启用了 KASLR，则
`/proc/kore`{.literal}
文件的内容都会生成为零。因此，`kdumpctl`{.literal} 服务无法访问
`/proc/kcore`{.literal} 并载入崩溃内核。
要临时解决这个问题，`kexec-kdump-howto.txt`{.literal}
文件会显示警告信息，指定将推荐的设置保留为 `kptr_restrict=1`{.literal}。
要确定 `kdumpctl`{.literal} 服务载入崩溃内核，请验证：
::: itemizedlist
-   `sysctl.conf`{.literal} 文件中的内核 `kptr_restrict=1`{.literal}。
:::
::: itemizedlist
**其它资源**
-   在 Red Hat Enterprise Linux
    中[配置基本系统设置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#managing-services-with-systemd++){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#testing-the-kdump-configuration_configuring-kdump-on-the-command-line}测试 kdump 配置 {.title}
:::
下面的步骤描述了如何在机器进入生产环境前测试内核转储过程是否正常工作。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
以下命令会导致内核崩溃。在按照这些步骤操作时要小心，且不要在活跃的生产环境中使用它们。
:::
::: orderedlist
**流程**
1.  在启用了 `kdump`{.literal} 的情况下重启系统。
2.  确保 `kdump`{.literal} 正在运行：
    ``` screen
    ~]# systemctl is-active kdump
    active
    ```
3.  强制 Linux 内核崩溃：
    ``` screen
    echo 1 > /proc/sys/kernel/sysrq
    echo c > /proc/sysrq-trigger
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    以上命令使内核崩溃，需要重新启动。
    :::
    再次引导后，`address-YYYY-MM-DD-HH:MM:SS/vmcore`{.literal} 文件会在
    `/etc/kdump.conf`{.literal} 中指定的位置（默认为
    `/var/crash/`{.literal}）被创建。