# 【系列分享】安卓Hacking Part 23：基于AndBug的Android应用调试技术

## 译文声明
本文为翻译文章，原文来源：infosecinstitute.com。具体内容表达及含义以原文为准。

**翻译者**: [shan66](http://bobao.360.cn/member/contribute?uid=2522399780)  
**预估稿费**: 130 RMB  
**投稿方式**: 发送邮件至linwei#360.cn 或 登录网页版在线投稿

## 概述
在本系列的前一篇文章中，我们探讨了如何将Cydia底层扩展写入Android应用程序。本文将继续介绍如何利用AndBug工具来分析Android应用程序。根据官方文档描述，“AndBug是一款用于Android Dalvik虚拟机的逆向工程调试器，它通过Java调试线协议（JDWP）与Android应用进行交互，且无需源代码。” AndBug功能强大，能够深入观察应用运行时加载特定类/方法的情况。其最大的优势在于操作简便。

## 环境搭建
AndBug可以从[这里](https://github.com/andbug/andbug)下载。下载完成后，请确保已安装Python环境，并执行以下命令解压和安装AndBug：

```bash
$ unzip AndBug-master.zip
$ cd AndBug-master
$ ls
CONTRIBUTORS  Makefile  andbug  info  pylint.rc  tests
LICENSE      README.rst  build  lib  setup.py
$ sudo python setup.py install
```

安装完毕后，可以通过运行`./andbug`来验证安装是否成功。如果看到如下输出，则说明安装正确无误：

```bash
$ ./andbug
## AndBug (C) 2011 Scott W. Dunlop 
...
```

接下来启动一个模拟器，并使用`adb devices`命令检查是否可以访问该模拟器：

```bash
$ adb devices
List of devices attached
emulator-5554    device
```

现在，我们需要一个测试应用来进行调试。为此，我特意编写了一个简单的应用，您可以从附件中下载。该应用使用公开的AESCrypt库对用户输入的卡号进行加密。请注意，生成密钥所需的密码是硬编码在程序中的。应用安装命令如下：

```bash
$ adb install andbug.apk
```

## 目标应用分析
完成上述准备工作后，我们现在开始使用AndBug对目标应用进行分析。首先启动该应用并确认其外观符合预期。接着，使用`adb shell ps | grep -i 'andbug'`命令查找目标应用的进程ID。假设得到的结果显示PID为1090，那么接下来就可以通过AndBug连接到此进程并获取交互式Shell界面了：

```bash
$ andbug shell -p 1090
## AndBug (C) 2011 Scott W. Dunlop 
>>
```

此时，您便可以通过这个Shell执行各种操作。例如，列出所有已加载的类名，只需输入`classes andbug`即可查看相关信息。