Content-Length header is duplicated if specified on Python3, leading to 400
responses:
    Python 3.3.0 (default, Apr 30 2013, 06:45:58)
    [GCC 4.2.1 Compatible Apple Clang 4.0 ((tags/Apple/clang-421.0.60))] on darwin
    Type "help", "copyright", "credits" or "license" for more information.
    >>> import requests
    >>> requests.post("http://httpbin.org/post", headers={"Content-Length": 0})
We need to go deeper:
    >>> import six
    >>> six.moves.http_client.HTTPConnection.debuglevel = 1
    >>> requests.post("http://httpbin.org/post", headers={"Content-Length": 0})
    send: b'POST /post HTTP/1.1\r\nHost: httpbin.org\r\nAccept-Encoding: identity\r\nContent-Length: 0\r\nUser-Agent: python-requests/1.2.0 CPython/3.3.0 Darwin/12.3.0\r\nContent-Length: 0\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, compress\r\n\r\n'
    reply: 'HTTP/1.1 400 BAD_REQUEST\r\n'
    header: Content-Length header: Connection 
That's what happens:
    POST /post HTTP/1.1
    Host: httpbin.org
    Accept-Encoding: identity
    Content-Length: 0
    User-Agent: python-requests/1.2.0 CPython/3.3.0 Darwin/12.3.0
    Content-Length: 0
    Accept: */*
    Accept-Encoding: gzip, deflate, compress
Two content-lengths, one 400 response :-(  
On Python2 everything's OK.