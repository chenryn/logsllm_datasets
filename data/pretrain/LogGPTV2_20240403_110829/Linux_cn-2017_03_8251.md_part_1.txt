---
author: Steve Emms
category: 分享
comments_data:
- date: '2017-03-03 10:38:50'
  message: 没有code complete?
  postip: 202.0.86.4
  username: 来自澳大利亚的 Chrome 56.0|Windows 10 用户
- date: '2017-03-03 21:13:28'
  message: 这里其实只是列出了“开源”的——也就是你不用花钱，当然盗版不在此列。
  postip: 114.253.19.244
  username: linux [Chrome 56.0|Mac 10.11]
- date: '2017-03-04 16:43:05'
  message: 开源的书，质量都不错的！
  postip: 113.56.202.40
  username: POCMON [QQ Browser 9.5|Windows 10]
- date: '2017-08-03 12:08:34'
  message: BUILS YOUR OWN LISP,这个真的很不错，可惜我没看完就看不懂了。。。
  postip: 61.133.215.190
  username: 来自宁夏银川的 Chrome 59.0|Windows 7 用户
count:
  commentnum: 4
  favtimes: 9
  likes: 0
  sharetimes: 0
  viewnum: 17334
date: '2017-03-02 10:30:00'
editorchoice: false
excerpt: 我仔细考察了一些我最喜爱的 C 语言书籍，并从其中选出了对我意义最大的九本。
fromurl: https://www.ossblog.org/learn-c-programming-with-9-excellent-open-source-books/
id: 8251
islctt: true
largepic: /data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg
permalink: /article-8251-1.html
pic: /data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我仔细考察了一些我最喜爱的 C 语言书籍，并从其中选出了对我意义最大的九本。
tags:
- 编程
- 书籍
thumb: false
title: 通过这九本开源好书学习 C 语言
titlepic: true
translator: 艾凌风
updated: '2017-03-02 10:30:00'
---
书是非常私人的东西，编程类书籍也不例外。我们都是通过阅读书籍来帮助掌握某种语言的基本知识。随后又通过阅读书籍来全面探索这门语言的灵活性。我仔细考察了一些我最喜爱的 C 语言书籍，并从其中选出了对我意义最大的九本。
![](/data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg)
C 语言是一种通用的、面向过程的高级编程语言。也是最具流行度和影响力的编程语言之一。该语言在设计时就被设计为可以通过编译器进行编译，以此来对内存进行底层操作、高效地执行机器指令以及在运行时仅需要最小的支持。很多很多编程语言都得益于 C 语言， C 语言就像是编程界的通用语言一样。
C 语言非常易懂。它允许程序员能够以一种清晰、简单、符合逻辑的方式来组织程序。这是一种非常灵活、实用并且简洁的语言，同时它还具有非常容易读懂的语法。使用 C 语言编写的代码运行非常快。可以非常简单地操作计算机的底层设施。通过编译器的指令可以允许我们为不同体系结构的设备生成同一个版本的程序。
C 语言是自由的。因此学习 C 语言的书籍也是体现了其自由性。快来看看我挑选的开源书籍，有没有哪一本能够吸引你？好好享受它吧！
### 《  C 语言   （    The C Book 》
![The C Book](/data/attachment/album/201703/01/120757rc0d7zxcccecgxyr.png)
《   C 语言    The C Book 》这本书是为那些已经具备使用现代高级面向过程编程语言的程序员设计的。这本书专注于那些 C 语言的特有之处。尤其是使用 C 语言的方式是这本书所重点关注的。作者： Mike Banahan, Declan Brady 和 Mark Doran ，350 页
包含以下章节：
* 变量及运算法则介绍 – 介绍了 C 语言的基础知识, 包括关键字和标识符，变量声明，实数类型，整型，表达式和运算法则以及常量
* 控制流及逻辑表达式 – 这一章介绍了在 C 语言中可以用于控制程序流程的几种方法，包括一些尚未介绍的语句。 控制流，逻辑表达式以及奇怪的运算符。
* 函数 – 函数的类型, 递归，传参数以及链接
* 数组和指针 – 数组, 指针, 字符处理, sizeof 以及储存空间分配, 函数指针，包含指针的表达式，数组，`&`运算符以及函数声明
* 结构体数据类型 – 结构体, 联合体, 位字段, 枚举类型, 限定符、派生类型以及初始化
* 预处理器 – 预处理器是如何工作的及其相关指令
* C 语言中的一些特定内容 – 声明， 定义，`typedef`, `const` 和 `volatile`以及序列点
* 库 – 诊断, 字符处理, 本地化, 与具体实现相关的限制, 数学函数, 非局部跳转, 信号处理, 可变参数, 输入输出, 格式化 I/O, 字符 I/O, 无格式 I/O, 随机访问函数, 通用函数, 字符串处理, 日期和时间
* C 语言编写的完整程序 – 综合以上内容, main函数的参数, 解析程序参数, 模式匹配程序以及一个难度更大的程序
作者允许读者利用此书做任何他们想做的事情，只需说明作者和版权。经 Mike Banahan 确认，本书通过知识共享协议发布。
### 《 风格的要素—— C 语言版   （    C Elements of Style    ）  》
![C Elements of Style](/data/attachment/album/201703/01/120757ugl8jikm1s8e1qbs.jpg)
作者 Steve Oualline ，265页
《   风格的要素—— C 语言版    （    C Elements of Style    ） 》是一本十分有用的编程风格指南，指导 C 和 C++ 程序员如何去编写可读性良好的，易懂的，易于维护的程序。不论你是一个学生还是专业程序员，你都能从这本书中提供的技巧和技术中获益，构建优雅可靠的代码。
这本书意在向读者们展示如何在你的程序中融入风格良好的代码。机器仅处理代码，而人类关注于注释。良好的编程风格与这两部分都有关。
我们的最终目标是构建设计良好，编写良好的代码，这种代码对于计算机来说是高效的，同时包含了精心编写的注释用于帮助人类理解程序。这样一来，调试，维护和增强程序，都变得更加容易了。最终还提升了代码的可读性，简洁性，可靠性和可维护性。
在本书中，你可以找到有关编写注释，程序头，变量命名，语句格式化，语句细节，编写预处理器命令，组织目录和创建makefile的指南。
本书通过知识共享协议发布。
### 《 编写你自己的 Lisp 语言   （    Build Your Own Lisp    ） 》
![Build Your Own Lisp](/data/attachment/album/201703/01/120758nyoj1gwfo18w8j8m.jpg)
作者 Daniel Holden ，212页
在学习 C 语言的同时学习如何创造你自己的编程语言——一个最简的 Lisp 语言（仅用不到1000行代码）。
《   编写你自己的 Lisp 语言    （    Build Your Own Lisp    ） 》这本书是为两种人写的，一种是想要学习 C 语言的人，另一种是想要知道如何创建一门语言的人。本书并不适合作为第一本入门书籍，因为你需要一些编程经验才能读懂它的内容。
本书基于[知识共享署名-非商业性使用-3.0 未本地化版本](https://creativecommons.org/licenses/by-nc/3.0/)协议发布
纸质版可以在 Amazon 上购买。
### 《 GNU C 语言参考手册   （    The GNU C Reference Manual    ） 》
![The GNU C Reference Manual](/data/attachment/album/201703/01/120758ftil8ik66td936ot.png)
作者 Trevis Rothwell, James Youngman ，91页
《   GNU C 语言参考手册    （    The GNU C Reference Manual    ） 》是一本 C 语言参考手册，意在写明 C89，C99 标准以及当前 GNU 对标准 C 语言的扩展情况。本书并不适合新手阅读。
包含以下章节：
* 词法元素——这部分内容描述了预编译之后，组成 C 语言代码的词法元素。包括 5 种：关键字，标识符，常量，操作符和分隔符
* 数据类型——研究基础的数据类型，枚举，联合体，结构体，数组，指针，不完全类型，类型修饰词，储存类型修饰词以及重命名类型
* 表达式和操作符 —— 还介绍了自增/自减，算数操作符，复共轭性，比较操作符，逻辑运算符，位移，位运算符，指针运算符，`sizeof`，类型转换等等。
* 语句 —— 标签，表达式，`if` 语句，`switch` 语句，`while` 语句，`do` 语句，`for` 语句，代码块，`null` 语句，`goto` 语句，`break` 语句，`continue` 语句，`return` 语句以及 `typedef` 语句
* 函数 —— 学习函数声明，函数定义，函数调用，参数，变长参数列表，通过指针调用函数，`main` 函数，递归函数等等。
* 程序结构和定义域 —— 从宏观上来看程序
* 一个例程 —— 一个用 C 语言编写的完整程序，包含 C 语言源文件和头文件。这个程序是一个典型“hello world”程序的扩展版，它向我们展示了在 GNU FSF 项目中 C 语言是如何工作的。