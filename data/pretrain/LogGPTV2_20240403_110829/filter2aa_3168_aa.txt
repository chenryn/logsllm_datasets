DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Fighting 
Fighting malware
malware on your own
on your own
Vitaliy Kamlyuk
Senior Virus Analyst
Kaspersky Lab
PI:EMAIL
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Why fight malware on your own?
Why fight malware on your own?
5 reasons:
1. Touch 100% of protection yourself
2. Be prepared for attacks
3. Maintain confidentiality
4. Restore system here and now
5. Time matters
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
What is available in 
What is available in W
Windows
indows XP?
XP?
System tools:
Explorer, Task manager, Regedit, SigVerif,…
Console utils: netstat,tasklist,reg,expand…
Interpreters: Batch, JS/VBS
Text editors: notepad,wordpad,edit,edlin,…
Binary editing tool: debug
Symbolic debugger: ntsd
OLE repository
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Email
Email--Worm.Win32.Warezov 
Worm.Win32.Warezov 
Detected on 15th August, 2006
430 modifications (~25000 of files)
All application data is encrypted
Code mutates very often (server-side 
polymorphic engine)
Downloads additional modules from the 
Internet
Hides its modules from Task Manager
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Infecting the system
Warezov: Infecting the system
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Installing KAV 6.0
Warezov: Installing KAV 6.0
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: What really happened?
Warezov: What really happened?
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Inspecting the system
Warezov: Inspecting the system
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Manual removal
Warezov: Manual removal
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Resistance 
Warezov: Resistance to
to manual 
manual 
removal
removal
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Analysis
Analysis
1. Malware restores registry values when the 
application terminates (seems to be when 
malicious dll is unloaded)
2. There is a set of processes running/closing 
from time to time. So the routine is called 
several times.
3. The value is restored only if it doesn’t exist.
4. Looks like the malware uses one of the 
following functions: strstr/wcsstr/CString::Find, 
strtok or its own substring find routine
We can hack the 
malware removal 
resistance 
mechanism! 
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Warezov: Hacking the resistance to 
Warezov: Hacking the resistance to 
manual removal
manual removal
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Trojan.Win32.Agent.ach
Trojan.Win32.Agent.ach
Detected on 12th December, 2006
Made in Japan
Silently removes itself after being run
Suspends running destructive functionality until 
the following Friday, and after that:
 Disables pressing Ctrl-Alt-Delete
 Disables running any executable file from shell
 Disables system shutdown/reboot
 If you try hard-reboot, it disables loading the system in any 
available mode
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Agent.ach
Agent.ach: Infecting the system
: Infecting the system
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Agent.ach
Agent.ach: Infection symptoms
: Infection symptoms
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Hard reset result 
Hard reset result -- time matters!
time matters!
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Agent.ach
Agent.ach: Inspecting the system
: Inspecting the system
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Agent.ach
Agent.ach: Removing the malware
: Removing the malware
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Agent.ach
Agent.ach: Control check
: Control check
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Virus.Win32.Saburex.a
Virus.Win32.Saburex.a
Detected on 10th December, 2006
The virus infects executable files located on a 
hard disk partition which is selected at random
Injects own DLL into every process that has 
visible window
Injected DLL makes screenshots of active 
windows on the victim machine, encrypts them, 
and publishes them on a website
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Saburex
Saburex: Getting the code
: Getting the code
DefCon 15 , August 3-5, 2007, Las Vegas, NV, USA
Saburex
Saburex: Code listing
: Code listing
push    ebp                                                     
mov     ebp,esp                                             
sub     esp,0x318                                           
push    ebx                                                 
push    esi                                                 
push    edi                                                 
push    0x100                                               
lea     eax,[ebp-0x204]                                                  
push    eax                                                 
push    0x0                                                 
call 
dword ptr [kernel32!GetModuleFileNameA 
(7c80b357)]
push    0x0                                                 
push    0x0                                                 
push    0x3                                                 
push    0x0                                                 
push    0x3                                                 
push    0x80000000                                          
lea     ecx,[ebp-0x204]                                                  
push    ecx                                                 
call    dword ptr [kernel32!CreateFileA (7c801a24)]
mov     [ebp-0x318],eax                                                  
push    0x2                                                 
push    0x0                                                 
push    0xf8                                                
mov     edx,[ebp-0x318]                                                  
push    edx                                                 
call 
dword ptr [kernel32!SetFilePointer (7c810da6)]
push    0x0                                                 
lea     eax,[ebp-0x314]                                                  
push    eax                                                 
push    0x8                                                 
lea     ecx,[ebp-0x310]                                                  
push    ecx                                                     
mov     edx,[ebp-0x318]                                                  
push    edx                                                 
call    dword ptr [kernel32!ReadFile (7c80180e)] 
push    0x2                                                 
push    0x0                                                 
mov     eax,0xfffffff8                                      
sub     eax,[ebp-0x310]                                                  
push    eax                                                 
mov     ecx,[ebp-0x318]                                                  
push    ecx                                                 
call 
dword ptr [kernel32!SetFilePointer (7c810da6)]                      
mov     edx,[ebp-0x310]                                                  
push    edx                                                 
push    0x0                                                 
call    dword ptr [kernel32!LocalAlloc (7c8099bd)]                       
mov     [ebp-0x4],eax                                                    
mov     eax,[ebp-0x30c]                                                  
push    eax                                                 
push    0x0                                                 
call 
dword ptr [kernel32!LocalAlloc (7c8099bd)]                       
mov     [ebp-0x308],eax                                                  
push    0x0                                                 
lea     ecx,[ebp-0x314]                                                  
push    ecx                                                 
mov     edx,[ebp-0x310]                                                  
push    edx                                                 
mov     eax,[ebp-0x4]                                                    
push    eax                                                 
mov     ecx,[ebp-0x318]                                                  
push    ecx                                                 
call 
dword ptr [kernel32!SetFilePointer (7c810da6)]                      
mov     edx,[ebp-0x4]                                                    
mov     dword ptr [edx],0x4643534d                              
mov     eax,[ebp-0x310]                                                  
push    eax                                                 
mov     edx,[ebp-0x308]                                                  
mov     ecx,[ebp-0x4]                                                    
call    KODAKIMG+0x1060 (00401060) Subroutine_1                         
lea     ecx,[ebp-0x104]                                                  
push    ecx                                                 
push    0x100                                               
call   dword ptr [kernel32!GetTempPathA (7c8221cf)]                      
lea     edx,[ebp-0x304]                                                  
push    edx                                                 
push    0x0                                                 
push    0x401434                                            
lea     eax,[ebp-0x104]                                                  
push    eax                                                 
call 
dword ptr [kernel32!GetTempFileNameA (7c8606df)]                      
push    0x0                                                 
push    0x0                                                 
push    0x2                                                 
push    0x0                                                 
push    0x2                                                 
push    0x40000000                                          
lea     ecx,[ebp-0x304]                                                  
push    ecx                                                 
call    dword ptr [kernel32!CreateFileA (7c801a24)]                      
mov     [ebp-0x318],eax                                                  
push    0x0                                                 
lea     edx,[ebp-0x314]                                                  
push    edx                                                 
mov     eax,[ebp-0x30c]                                                  
push    eax                                                 
mov     ecx,[ebp-0x308]                                                  
push    ecx                                                 
mov     edx,[ebp-0x318]                                                  
push    edx                                                    
call    dword ptr [kernel32!WriteFile (7c810f9f)]                        