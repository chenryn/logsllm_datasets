{"created": "2021-06-07T13:20:23.767Z", "created_by_ref": "", "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the New-InboxRule or Set-InboxRule [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as malware, suspicious, phish, and hack) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).", "external_references": [{"external_id": "T1564.008", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1564/008"}, {"description": "Apple. (n.d.). Use rules to manage emails you receive in Mail on Mac. Retrieved June 14, 2021.", "source_name": "MacOS Email Rules", "url": "https://support.apple.com/guide/mail/use-rules-to-manage-emails-you-receive-mlhlp1017/mac"}, {"description": "Carr, N., Sellmer, S. (2021, June 14). Behind the scenes of business email compromise: Using cross-domain threat data to disrupt a large BEC campaign. Retrieved June 15, 2021.", "source_name": "Microsoft BEC Campaign", "url": "https://www.microsoft.com/security/blog/2021/06/14/behind-the-scenes-of-business-email-compromise-using-cross-domain-threat-data-to-disrupt-a-large-bec-infrastructure/"}, {"description": "Microsoft. (2023, February 22). Mail flow rules (transport rules) in Exchange Online. Retrieved March 13, 2023.", "source_name": "Microsoft Mail Flow Rules 2023", "url": "https://learn.microsoft.com/en-us/exchange/security-and-compliance/mail-flow-rules/mail-flow-rules"}, {"description": "Microsoft. (n.d.). Manage email messages by using rules. Retrieved June 11, 2021.", "source_name": "Microsoft Inbox Rules", "url": "https://support.microsoft.com/en-us/office/manage-email-messages-by-using-rules-c24f5dea-9465-4df4-ad17-a50704d66c59"}, {"description": "Microsoft. (n.d.). New-InboxRule. Retrieved June 7, 2021.", "source_name": "Microsoft New-InboxRule", "url": "https://docs.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps"}, {"description": "Microsoft. (n.d.). Set-InboxRule. Retrieved June 7, 2021.", "source_name": "Microsoft Set-InboxRule", "url": "https://docs.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps"}, {"description": "Niv Goldenberg. (2018, December 12). Rule your inbox with Microsoft Cloud App Security. Retrieved June 7, 2021.", "source_name": "Microsoft Cloud App Security", "url": "https://techcommunity.microsoft.com/t5/security-compliance-and-identity/rule-your-inbox-with-microsoft-cloud-app-security/ba-p/299154"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-04-12T20:42:20.079Z", "name": "Email Hiding Rules", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Dor Edry, Microsoft", "Liran Ravich, CardinalOps"], "x_mitre_data_sources": ["Command: Command Execution", "Application Log: Application Log Content", "File: File Modification"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.\n\nOn Windows systems, monitor for creation of suspicious inbox rules through the use of the New-InboxRule and Set-InboxRule PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the RulesActiveState.plist, SyncedRules.plist, UnsyncedRules.plist, and MessageRules.plist files.(Citation: MacOS Email Rules)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Office 365", "Linux", "macOS", "Google Workspace"], "x_mitre_version": "1.2"}, {"created": "2020-02-20T14:34:08.496Z", "created_by_ref": "", "description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)", "external_references": [{"external_id": "T1491.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1491/002"}, {"description": "FireEye. (n.d.). Retrieved April 19, 2019.", "source_name": "FireEye Cyber Threats to Media Industries", "url": "https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/ib-entertainment.pdf"}, {"description": "Kevin Mandia. (2017, March 30). Prepared Statement of Kevin Mandia, CEO of FireEye, Inc. before the United States Senate Select Committee on Intelligence. Retrieved April 19, 2019.", "source_name": "Kevin Mandia Statement to US Senate Committee on Intelligence", "url": "https://www.intelligence.senate.gov/sites/default/files/documents/os-kmandia-033017.pdf"}, {"description": "Andy. (2018, May 12). \u2018Anonymous\u2019 Hackers Deface Russian Govt. Site to Protest Web-Blocking (NSFW). Retrieved April 19, 2019.", "source_name": "Anonymous Hackers Deface Russian Govt Site", "url": "https://torrentfreak.com/anonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512/"}, {"description": "Marco Balduzzi, Ryan Flores, Lion Gu, Federico Maggi, Vincenzo Ciancaglini, Roel Reyes, Akira Urano. (n.d.). A Deep Dive into Defacement: How Geopolitical Events Trigger Web Attacks. Retrieved April 19, 2019.", "source_name": "Trend Micro Deep Dive Into Defacement", "url": "https://documents.trendmicro.com/assets/white_papers/wp-a-deep-dive-into-defacement.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "impact"}], "modified": "2022-03-25T19:34:37.539Z", "name": "External Defacement", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Network Traffic: Network Traffic Content", "File: File Creation", "Application Log: Application Log Content", "File: File Modification"], "x_mitre_detection": "Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_impact_type": ["Integrity"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "IaaS", "Linux", "macOS"], "x_mitre_version": "1.2"}, {"created": "2018-01-16T16:13:52.465Z", "created_by_ref": "", "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)", "external_references": [{"external_id": "T1171", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1171"}, {"description": "Wikipedia. (2016, July 7). Link-Local Multicast Name Resolution. Retrieved November 17, 2017.", "source_name": "Wikipedia LLMNR", "url": "https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution"}, {"description": "Microsoft. (n.d.). NetBIOS Name Resolution. Retrieved November 17, 2017.", "source_name": "TechNet NetBIOS", "url": "https://technet.microsoft.com/library/cc958811.aspx"}, {"description": "Salvati, M. (2017, June 2). Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes). Retrieved February 7, 2019.", "source_name": "byt3bl33d3r NTLM Relaying", "url": "https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html"}, {"description": "Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019.", "source_name": "Secure Ideas SMB Relay", "url": "https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html"}, {"description": "Nomex. (2014, February 7). NBNSpoof. Retrieved November 17, 2017.", "source_name": "GitHub NBNSpoof", "url": "https://github.com/nomex/nbnspoof"}, {"description": "Francois, R. (n.d.). LLMNR Spoofer. Retrieved November 17, 2017.", "source_name": "Rapid7 LLMNR Spoofer", "url": "https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response"}, {"description": "Gaffie, L. (2016, August 25). Responder. Retrieved November 17, 2017.", "source_name": "GitHub Responder", "url": "https://github.com/SpiderLabs/Responder"}, {"description": "Sternstein, J. (2013, November). Local Network Attacks: LLMNR and NBT-NS Poisoning. Retrieved November 17, 2017.", "source_name": "Sternsecurity LLMNR-NBTNS", "url": "https://www.sternsecurity.com/blog/local-network-attacks-llmnr-and-nbt-ns-poisoning"}, {"description": "Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017.", "source_name": "GitHub Conveigh", "url": "https://github.com/Kevin-Robertson/Conveigh"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2020-02-11T19:09:48.452Z", "name": "LLMNR/NBT-NS Poisoning and Relay", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Eric Kuehn, Secure Ideas", "Matthew Demaske, Adaptforward"], "x_mitre_detection": "Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \u201c0\u201d indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\n\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\n\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "2.0"}, {"created": "2020-10-02T15:59:11.695Z", "created_by_ref": "", "description": "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).", "external_references": [{"external_id": "T1590.005", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1590/005"}, {"description": "NTT America. (n.d.). Whois Lookup. Retrieved October 20, 2020.", "source_name": "WHOIS", "url": "https://www.whois.net/"}, {"description": "Hacker Target. (n.d.). DNS Dumpster. Retrieved October 20, 2020.", "source_name": "DNS Dumpster", "url": "https://dnsdumpster.com/"}, {"description": "CIRCL Computer Incident Response Center. (n.d.). Passive DNS. Retrieved October 20, 2020.", "source_name": "Circl Passive DNS", "url": "https://www.circl.lu/services/passive-dns/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-04-15T03:31:05.302Z", "name": "IP Addresses", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}
{"created": "2020-02-20T15:27:18.581Z", "created_by_ref": "", "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)", "external_references": [{"external_id": "T1499.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1499/001"}, {"description": "Cisco. (n.d.). Detecting and Analyzing Network Threats With NetFlow. Retrieved April 25, 2019.", "source_name": "Cisco DoSdetectNetflow", "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf"}, {"description": "Cloudflare. (n.d.). What is a SYN flood attack?. Retrieved April 22, 2019.", "source_name": "Cloudflare SynFlood", "url": "https://www.cloudflare.com/learning/ddos/syn-flood-ddos-attack/"}, {"description": "Corero. (n.d.). What is a SYN-ACK Flood Attack?. Retrieved April 22, 2019.", "source_name": "Corero SYN-ACKflood", "url": "https://www.corero.com/resources/ddos-attack-types/syn-flood-ack.html"}, {"description": "Philippe Alcoy, Steinthor Bjarnason, Paul Bowen, C.F. Chui, Kirill Kasavchnko, and Gary Sockrider of Netscout Arbor. (2018, January). Insight into the Global Threat Landscape - Netscout Arbor's 13th Annual Worldwide Infrastructure Security Report. Retrieved April 22, 2019.", "source_name": "Arbor AnnualDoSreport Jan 2018", "url": "https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "impact"}], "modified": "2023-03-30T21:01:51.289Z", "name": "OS Exhaustion Flood", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["Sensor Health: Host Status", "Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow"], "x_mitre_deprecated": false, "x_mitre_detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_impact_type": ["Availability"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.2"}, {"created": "2017-05-31T21:30:26.496Z", "created_by_ref": "", "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)", "external_references": [{"external_id": "T1014", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1014"}, {"description": "Kurtz, G. (2012, November 19). HTTP iframe Injecting Linux Rootkit. Retrieved December 21, 2017.", "source_name": "CrowdStrike Linux Rootkit", "url": "https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/"}, {"description": "Pan, M., Tsai, S. (2014). You can\u2019t see me: A Mac OS X Rootkit uses the tricks you haven't known yet. Retrieved December 21, 2017.", "source_name": "BlackHat Mac OSX Rootkit", "url": "http://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf"}, {"description": "Symantec. (n.d.). Windows Rootkit Overview. Retrieved December 21, 2017.", "source_name": "Symantec Windows Rootkits", "url": "https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf"}, {"description": "Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016.", "source_name": "Wikipedia Rootkit", "url": "https://en.wikipedia.org/wiki/Rootkit"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-03-30T21:01:50.568Z", "name": "Rootkit", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["File: File Modification", "Drive: Drive Modification", "Firmware: Firmware Modification"], "x_mitre_defense_bypassed": ["Anti-virus", "File Monitoring", "Host Intrusion Prevention Systems", "Application Control", "Signature-based Detection", "System Access Controls"], "x_mitre_deprecated": false, "x_mitre_detection": "Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.1"}
{"created": "2020-01-24T15:11:02.758Z", "created_by_ref": "", "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (profile.ps1) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the -NoProfile flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)", "external_references": [{"external_id": "T1546.013", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1546/013"}, {"description": "Microsoft. (2017, November 29). About Profiles. Retrieved June 14, 2019.", "source_name": "Microsoft About Profiles", "url": "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-6"}, {"description": "Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.", "source_name": "ESET Turla PowerShell May 2019", "url": "https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/"}, {"description": "DeRyke, A.. (2019, June 7). Lab Notes: Persistence and Privilege Elevation using the Powershell Profile. Retrieved July 8, 2019.", "source_name": "Wits End and Shady PowerShell Profiles", "url": "https://witsendandshady.blogspot.com/2019/06/lab-notes-persistence-and-privilege.html"}, {"description": "Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.", "source_name": "Malware Archaeology PowerShell Cheat Sheet", "url": "http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf"}, {"description": "Microsoft. (2021, September 27). about_Profiles. Retrieved February 4, 2022.", "source_name": "Microsoft Profiles", "url": "https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_profiles"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2022-02-08T16:39:08.851Z", "name": "PowerShell Profile", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Matthew Green", "Allen DeRyke, ICE"], "x_mitre_data_sources": ["File: File Creation", "Command: Command Execution", "File: File Modification", "Process: Process Creation"], "x_mitre_detection": "Locations where profile.ps1 can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet)(Citation: Microsoft Profiles) Example profile locations (user defaults as well as program-specific) include:\n\n* $PsHome\\Profile.ps1\n* $PsHome\\Microsoft.{HostProgram}_profile.ps1\n* $Home\\\\\\[My ]Documents\\PowerShell\\Profile.ps1\n* $Home\\\\\\[My ]Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1\n\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.1"}
{"created": "2020-06-23T19:12:24.924Z", "created_by_ref": "", "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility osascript, they can be compiled into applications or script files via osacompile, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).", "external_references": [{"external_id": "T1059.007", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1059/007"}, {"description": "OpenJS Foundation. (n.d.). Node.js. Retrieved June 23, 2020.", "source_name": "NodeJS", "url": "https://nodejs.org/"}, {"description": "Microsoft. (2018, May 31). Translating to JScript. Retrieved June 23, 2020.", "source_name": "JScrip May 2018", "url": "https://docs.microsoft.com/windows/win32/com/translating-to-jscript"}, {"description": "Microsoft. (2007, August 15). The World of JScript, JavaScript, ECMAScript \u2026. Retrieved June 23, 2020.", "source_name": "Microsoft JScript 2007", "url": "https://docs.microsoft.com/archive/blogs/gauravseth/the-world-of-jscript-javascript-ecmascript"}, {"description": "Microsoft. (2017, January 18). Windows Script Interfaces. Retrieved June 23, 2020.", "source_name": "Microsoft Windows Scripts", "url": "https://docs.microsoft.com/scripting/winscript/windows-script-interfaces"}, {"description": "Apple. (2016, June 13). About Mac Scripting. Retrieved April 14, 2021.", "source_name": "Apple About Mac Scripting 2016", "url": "https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html"}, {"description": "Pitt, L. (2020, August 6). Persistent JXA. Retrieved April 14, 2021.", "source_name": "SpecterOps JXA 2020", "url": "https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5"}, {"description": "Phil Stokes. (2019, December 5). macOS Red Team: Calling Apple APIs Without Building Binaries. Retrieved July 17, 2020.", "source_name": "SentinelOne macOS Red Team", "url": "https://www.sentinelone.com/blog/macos-red-team-calling-apple-apis-without-building-binaries/"}, {"description": "Tony Lambert. (2021, February 18). Clipping Silver Sparrow\u2019s wings: Outing macOS malware before it takes flight. Retrieved April 20, 2021.", "source_name": "Red Canary Silver Sparrow Feb2021", "url": "https://redcanary.com/blog/clipping-silver-sparrows-wings/"}, {"description": "Dominic Chell. (2021, January 1). macOS Post-Exploitation Shenanigans with VSCode Extensions. Retrieved April 20, 2021.", "source_name": "MDSec macOS JXA and VSCode", "url": "https://www.mdsec.co.uk/2021/01/macos-post-exploitation-shenanigans-with-vscode-extensions/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "modified": "2021-08-16T21:02:05.142Z", "name": "JavaScript", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Cody Thomas, SpecterOps"], "x_mitre_data_sources": ["Module: Module Load", "Script: Script Execution", "Command: Command Execution", "Process: Process Creation"], "x_mitre_detection": "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through osascript and usage of OSAScript API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator", "SYSTEM"], "x_mitre_platforms": ["Windows", "macOS", "Linux"], "x_mitre_version": "2.1"}, {"created": "2020-10-02T15:47:10.102Z", "created_by_ref": "", "description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).", "external_references": [{"external_id": "T1590.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1590/002"}, {"description": "CIRCL Computer Incident Response Center. (n.d.). Passive DNS. Retrieved October 20, 2020.", "source_name": "Circl Passive DNS", "url": "https://www.circl.lu/services/passive-dns/"}, {"description": "Hacker Target. (n.d.). DNS Dumpster. Retrieved October 20, 2020.", "source_name": "DNS Dumpster", "url": "https://dnsdumpster.com/"}, {"description": "Sean Metcalf. (2019, May 9). Sean Metcalf Twitter. Retrieved May 27, 2022.", "source_name": "Sean Metcalf Twitter DNS Records", "url": "https://twitter.com/PyroTek3/status/1126487227712921600/photo/1"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2022-10-21T14:32:48.393Z", "name": "DNS", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Jannie Li, Microsoft Threat Intelligence\u202fCenter\u202f(MSTIC)"], "x_mitre_deprecated": false, "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.1"}
{"created": "2019-04-23T15:34:30.008Z", "created_by_ref": "", "description": "Systemd services can be used to establish persistence on a Linux system. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the /etc/systemd/system and /usr/lib/systemd/system directories and have the file extension .service. Each service unit file may contain numerous directives that can execute system commands. \n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.(Citation: Anomali Rocke March 2019)(Citation: gist Arch package compromise 10JUL2018)(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018)\n\nWhile adversaries typically require root privileges to create/modify service unit files in the /etc/systemd/system and /usr/lib/systemd/system directories, low privilege users can create/modify service unit files in directories such as ~/.config/systemd/user/ to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)", "external_references": [{"external_id": "T1501", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1501"}, {"description": "Linux man-pages. (2014, January). systemd(1) - Linux manual page. Retrieved April 23, 2019.", "source_name": "Linux man-pages: systemd January 2014", "url": "http://man7.org/linux/man-pages/man1/systemd.1.html"}, {"description": "Freedesktop.org. (2018, September 29). systemd System and Service Manager. Retrieved April 23, 2019.", "source_name": "Freedesktop.org Linux systemd 29SEP2018", "url": "https://www.freedesktop.org/wiki/Software/systemd/"}, {"description": "Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.", "source_name": "Anomali Rocke March 2019", "url": "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang"}, {"description": "Catalin Cimpanu. (2018, July 10). ~x file downloaded in public Arch package compromise. Retrieved April 23, 2019.", "source_name": "gist Arch package compromise 10JUL2018", "url": "https://gist.github.com/campuscodi/74d0d2e35d8fd9499c76333ce027345a"}, {"description": "Catalin Cimpanu. (2018, July 10). Malware Found in Arch Linux AUR Package Repository. Retrieved April 23, 2019.", "source_name": "Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018", "url": "https://www.bleepingcomputer.com/news/security/malware-found-in-arch-linux-aur-package-repository/"}, {"description": "Eli Schwartz. (2018, June 8). acroread package compromised. Retrieved April 23, 2019.", "source_name": "acroread package compromised Arch Linux Mail 8JUL2018", "url": "https://lists.archlinux.org/pipermail/aur-general/2018-July/034153.html"}, {"description": "Rapid7. (2016, June 22). Service Persistence. Retrieved April 23, 2019.", "source_name": "Rapid7 Service Persistence 22JUNE2016", "url": "https://www.rapid7.com/db/modules/exploit/linux/local/service_persistence"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2020-01-17T16:51:52.027Z", "name": "Systemd Service", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Tony Lambert, Red Canary"], "x_mitre_detection": "Systemd service unit files may be detected by auditing file creation and modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and /home//.config/systemd/user/ directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user.\n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: systemctl list-units -\u2013type=service \u2013all. Analyze the contents of .service files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAuditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as /usr/sbin/service may reveal malicious systemd service execution.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["root", "User"], "x_mitre_platforms": ["Linux"], "x_mitre_version": "1.0"}
{"created": "2019-08-08T14:29:37.108Z", "created_by_ref": "", "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)", "external_references": [{"external_id": "T1514", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1514"}, {"description": "Apple. (n.d.). Apple Developer Documentation - AuthorizationExecuteWithPrivileges. Retrieved August 8, 2019.", "source_name": "AppleDocs AuthorizationExecuteWithPrivileges", "url": "https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg"}, {"description": "Patrick Wardle. (2017). Death by 1000 installers; it's all broken!. Retrieved August 8, 2019.", "source_name": "Death by 1000 installers; it's all broken!", "url": "https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8"}, {"description": "Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019.", "source_name": "Carbon Black Shlayer Feb 2019", "url": "https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"}, {"description": "Patrick Wardle. (2018, February 17). Tearing Apart the Undetected (OSX)Coldroot RAT. Retrieved August 8, 2019.", "source_name": "OSX Coldroot RAT", "url": "https://objective-see.com/blog/blog_0x2A.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2020-02-05T20:13:51.857Z", "name": "Elevated Execution with Prompt", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Erika Noerenberg, @gutterchurl, Carbon Black", "Jimmy Astle, @AstleJimmy, Carbon Black"], "x_mitre_detection": "Consider monitoring for /usr/libexec/security_authtrampoline executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["root"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "User"], "x_mitre_platforms": ["macOS"], "x_mitre_version": "1.0"}
{"created": "2017-05-31T21:31:34.528Z", "created_by_ref": "", "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.", "external_references": [{"external_id": "T1123", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1123"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "collection"}], "modified": "2023-03-30T21:01:36.503Z", "name": "Audio Capture", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_data_sources": ["Command: Command Execution", "Process: OS API Execution"], "x_mitre_detection": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2020-01-10T16:03:18.865Z", "created_by_ref": "", "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ", "external_references": [{"external_id": "T1543", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1543"}, {"description": "Apple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.", "source_name": "AppleDocs Launch Agent Daemons", "url": "https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html"}, {"description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.", "source_name": "TechNet Services", "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx"}, {"description": "Patrick Wardle. (2016, February 29). Let's Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.", "source_name": "OSX Malware Detection", "url": "https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2022-04-20T16:52:58.415Z", "name": "Create or Modify System Process", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["Windows Registry: Windows Registry Key Modification", "File: File Modification", "Service: Service Creation", "Windows Registry: Windows Registry Key Creation", "Process: OS API Execution", "Process: Process Creation", "Driver: Driver Load", "Command: Command Execution", "File: File Creation", "Service: Service Modification"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "macOS", "Linux"], "x_mitre_version": "1.1"}
{"created": "2017-05-31T21:31:44.421Z", "created_by_ref": "", "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)", "external_references": [{"external_id": "T1133", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1133"}, {"description": "Adair, S. (2015, October 7). Virtual Private Keylogging: Cisco Web VPNs Leveraged for Access and Persistence. Retrieved March 20, 2017.", "source_name": "Volexity Virtual Private Keylogging", "url": "https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/"}, {"description": "Apple Support. (n.d.). Set up a computer running VNC software for Remote Desktop. Retrieved August 18, 2021.", "source_name": "MacOS VNC software for Remote Desktop", "url": "https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac"}, {"description": "Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.", "source_name": "Unit 42 Hildegard Malware", "url": "https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/"}, {"description": "Remillano II, A., et al. (2020, June 20). XORDDoS, Kaiji Variants Target Exposed Docker Servers. Retrieved April 5, 2021.", "source_name": "Trend Micro Exposed Docker Server", "url": "https://www.trendmicro.com/en_us/research/20/f/xorddos-kaiji-botnet-malware-variants-target-exposed-docker-servers.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "initial-access"}], "modified": "2023-03-30T21:01:36.318Z", "name": "External Remote Services", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["ExtraHop", "David Fiser, @anu4is, Trend Micro", "Alfredo Oliveira, Trend Micro", "Idan Frimark, Cisco", "Rory McCune, Aqua Security", "Yuval Avrahami, Palo Alto Networks", "Jay Chen, Palo Alto Networks", "Brad Geesaman, @bradgeesaman", "Magno Logan, @magnologan, Trend Micro", "Ariel Shuper, Cisco", "Yossi Weizman, Azure Defender Research Team", "Vishwas Manral, McAfee", "Daniel Oakley", "Travis Smith, Tripwire", "David Tayouri"], "x_mitre_data_sources": ["Logon Session: Logon Session Metadata", "Application Log: Application Log Content", "Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow", "Network Traffic: Network Connection Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\n\nWhen authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Linux", "Containers", "macOS"], "x_mitre_version": "2.4"}, {"created": "2017-05-31T21:31:22.374Z", "created_by_ref": "", "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.", "external_references": [{"external_id": "T1109", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1109"}, {"description": "SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018.", "source_name": "SanDisk SMART"}, {"description": "smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018.", "source_name": "SmartMontools", "url": "https://www.smartmontools.org/"}, {"description": "Pinola, M. (2014, December 14). 3 tools to check your hard drive's health and make sure it's not already dying on you. Retrieved October 2, 2018.", "source_name": "ITWorld Hard Disk Health Dec 2014", "url": "https://www.itworld.com/article/2853992/3-tools-to-check-your-hard-drives-health-and-make-sure-its-not-already-dying-on-you.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2020-10-23T15:04:14.614Z", "name": "Component Firmware", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_defense_bypassed": ["File monitoring", "Host intrusion prevention systems", "Anti-virus"], "x_mitre_detection": "Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.\n\nDisk check and forensic utilities (Citation: ITWorld Hard Disk Health Dec 2014) may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation. Also consider comparing components, including hashes of component firmware and behavior, against known good images.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["SYSTEM"], "x_mitre_platforms": ["Windows"], "x_mitre_system_requirements": ["Ability to update component device firmware from the host operating system."], "x_mitre_version": "1.0"}
{"created": "2020-01-24T14:21:52.750Z", "created_by_ref": "", "description": "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time.(Citation: Malware Persistence on OS X)", "external_references": [{"external_id": "T1546.006", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1546/006"}, {"description": "Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.", "source_name": "Malware Persistence on OS X", "url": "https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf"}, {"description": "Patrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.", "source_name": "Writing Bad Malware for OSX", "url": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2022-04-20T17:08:21.101Z", "name": "LC_LOAD_DYLIB Addition", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["File: File Metadata", "Process: Process Creation", "Module: Module Load", "Command: Command Execution", "File: File Modification"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["macOS"], "x_mitre_version": "1.0"}
{"created": "2019-10-08T20:04:35.508Z", "created_by_ref": "", "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.", "external_references": [{"external_id": "T1539", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1539"}, {"description": "Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.", "source_name": "Pass The Cookie", "url": "https://wunderwuzzi23.github.io/blog/passthecookie.html"}, {"description": "GReAT. (2019, April 10). Project TajMahal \u2013 a sophisticated new APT framework. Retrieved October 14, 2019.", "source_name": "Kaspersky TajMahal April 2019", "url": "https://securelist.com/project-tajmahal/90240/"}, {"description": "Chen, Y., Hu, W., Xu, Z., et. al. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges\u2019 Cookies. Retrieved October 14, 2019.", "source_name": "Unit 42 Mac Crypto Cookies January 2019", "url": "https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/"}, {"description": "Gretzky, Kuba. (2019, April 10). Retrieved October 8, 2019.", "source_name": "Github evilginx2", "url": "https://github.com/kgretzky/evilginx2"}, {"description": "Orr\u00f9, M., Trotta, G.. (2019, September 11). Muraena. Retrieved October 14, 2019.", "source_name": "GitHub Mauraena", "url": "https://github.com/muraenateam/muraena"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2021-07-28T01:26:51.971Z", "name": "Steal Web Session Cookie", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Microsoft Threat Intelligence Center (MSTIC)", "Johann Rehberger"], "x_mitre_data_sources": ["Process: Process Access", "File: File Access"], "x_mitre_detection": "Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Linux", "macOS", "Windows", "Office 365", "SaaS", "Google Workspace"], "x_mitre_version": "1.2"}, {"created": "2021-03-29T17:06:22.247Z", "created_by_ref": "", "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)", "external_references": [{"external_id": "T1053.007", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1053/007"}, {"description": "The Kubernetes Authors. (n.d.). Kubernetes CronJob. Retrieved March 29, 2021.", "source_name": "Kubernetes CronJob", "url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/"}, {"description": "The Kubernetes Authors. (n.d.). Kubernetes Jobs. Retrieved March 30, 2021.", "source_name": "Kubernetes Jobs", "url": "https://kubernetes.io/docs/concepts/workloads/controllers/job/"}, {"description": "Weizman, Y. (2020, April 2). Threat Matrix for Kubernetes. Retrieved March 30, 2021.", "source_name": "Threat Matrix for Kubernetes", "url": "https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2023-04-15T16:23:05.392Z", "name": "Container Orchestration Job", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Center for Threat-Informed Defense (CTID)", "Vishwas Manral, McAfee", "Yossi Weizman, Azure Defender Research Team"], "x_mitre_data_sources": ["Container: Container Creation", "Scheduled Job: Scheduled Job Creation", "File: File Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. ", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Containers"], "x_mitre_remote_support": true, "x_mitre_version": "1.3"}, {"created": "2020-03-10T17:44:59.787Z", "created_by_ref": "", "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)", "external_references": [{"external_id": "T1568.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1568/002"}, {"description": "Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019.", "source_name": "Cybereason Dissecting DGAs", "url": "http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf"}, {"description": "Scarfo, A. (2016, October 10). Domain Generation Algorithms \u2013 Why so effective?. Retrieved February 18, 2019.", "source_name": "Cisco Umbrella DGA", "url": "https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/"}, {"description": "Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019.", "source_name": "Unit 42 DGA Feb 2019", "url": "https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/"}, {"description": "Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.", "source_name": "Talos CCleanup 2017", "url": "http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html"}, {"description": "Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019.", "source_name": "Akamai DGA Mitigation", "url": "https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html"}, {"description": "Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.", "source_name": "FireEye POSHSPY April 2017", "url": "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html"}, {"description": "ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.", "source_name": "ESET Sednit 2017 Activity", "url": "https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/"}, {"description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.", "source_name": "Data Driven Security DGA", "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"}, {"description": "Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019.", "source_name": "Pace University Detecting DGA May 2017", "url": "http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf"}, {"description": "Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019.", "source_name": "Elastic Predicting DGA", "url": "https://arxiv.org/pdf/1611.00791.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2022-03-11T18:26:23.432Z", "name": "Domain Generation Algorithms", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Ryan Benson, Exabeam", "Barry Shteiman, Exabeam", "Sylvain Gil, Exabeam"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Flow"], "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2021-08-04T20:54:03.066Z", "created_by_ref": "", "description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: File.txt.exe may render in some views as just File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user\u2019s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named Evil.txt.exe may display as Evil.txt to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.", "external_references": [{"external_id": "T1036.007", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1036/007"}, {"description": "PCMag. (n.d.). Encyclopedia: double extension. Retrieved August 4, 2021.", "source_name": "PCMag DoubleExtension", "url": "https://www.pcmag.com/encyclopedia/term/double-extension"}, {"description": "Eugene Tkachenko. (2020, May 1). Rule of the Week: Possible Malicious File Double Extension. Retrieved July 27, 2021.", "source_name": "SOCPrime DoubleExtension", "url": "https://socprime.com/blog/rule-of-the-week-possible-malicious-file-double-extension/"}, {"description": "Seqrite. (n.d.). How to avoid dual attack and vulnerable files with double extension?. Retrieved July 27, 2021.", "source_name": "Seqrite DoubleExtension", "url": "https://www.seqrite.com/blog/how-to-avoid-dual-attack-and-vulnerable-files-with-double-extension/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2021-10-14T21:09:59.588Z", "name": "Double File Extension", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["File: File Creation", "File: File Metadata"], "x_mitre_detection": "Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}