# Title: Operating System Framed in Case of Mistaken Identity: Measuring the Success of Web-Based Spoofing Attacks on OS Password-Entry Dialogs

## Authors:
- Cristian Bravo-Lillo
- Lorrie Faith Cranor
- Julie S. Downs
- Saranga Komanduri
- Stuart E. Schechter
- Manya Sleeper

### Affiliations:
- Carnegie Mellon University: 
  - Engineering and Public Policy (1)
  - Computer Science (2)
  - Social and Decision Science (3)
- Microsoft Research (4)

## Abstract
Modern desktop operating systems often use windows for credential entry that provide limited evidence of a trusted path, making it difficult for users to verify the authenticity of the request. This study measures the effectiveness of web-based attacks that spoof these operating system credential-entry windows to steal users' device-login passwords. We recruited 504 participants from Amazon's Mechanical Turk to evaluate a series of games on third-party websites. One of these websites prompted the installation of software (Microsoft Silverlight for Windows Vista/7 users and Apple QuickTime for Mac OS users) and displayed a spoofed replica of the participant's operating system's credential-entry window. In our most effective attacks, over 20% of participants entered their genuine device-login credentials. Even among those who declined to enter their credentials, many were unaware of the spoofing attack. Participants were more concerned about the consequences of installing software from a legitimate source than about the potential for the credential-entry window to be a phishing attempt.

## Categories and Subject Descriptors
- H.5.2 [User Interfaces]: Evaluation/methodology, Interaction styles
- I.3.6 [Computing Methodologies]: Methodologies and Techniques, Interaction Techniques

## Keywords
- Trusted path, user interface, spoofing attack, usable security

## Introduction
When a user interacts with a computing device, they may communicate with various principals, including the operating system (OS), installed applications, or websites. The security of many interactions relies on the assumption of a trusted path between the user and the principal, ensuring the user can correctly authenticate the principal. This trust is critical when entering shared secrets like passwords or authorizing access to system capabilities.

In this paper, we measure the effectiveness of web-based attacks that spoof OS windows to trick users of Mac OS X (Mac OS) and Windows Vista/7 (Windows) into entering their device login credentials. These attacks exploit the fact that these operating systems often request credentials by overlaying windows on top of other applications.

Credential theft via spoofing requires two forms of social engineering:
1. Motivating the user to enter their credentials.
2. Spoofing the credential-entry interface with sufficient fidelity to gain the user's trust.

In our attacks, we motivated users by convincing them that they needed to install software, which required their credentials. On Mac OS, installing software requires a privilege elevation, displaying a credential-entry window. On Windows, User Account Control (UAC) controls privilege elevation, using a window to verify user intent. UAC attempts to differentiate its windows by dimming the screen, but CredUI, another Windows credential-entry experience, does not.

We used an Amazon Mechanical Turk task to create a realistic scenario where participants evaluated online games and encountered a spoofed credential-entry window. Our results showed that in over 20% of trials, participants entered their genuine device login passwords. When asked why they refrained from entering their credentials, only 35.3% suspected the interface might be a phishing attempt. Many others were simply not motivated to install new software.

The consequences of an attacker obtaining device credentials can be severe, potentially allowing complete control of the device, installation of backdoors, and keyloggers. Even if remote access is restricted, compromised credentials can still be used to access web- and smartphone-based email clients.

## Related Attacks
Spoofable credential-entry windows are one instance of a trusted path vulnerability. Other examples include phishing, where emails and websites are spoofed, and scareware, where attackers mimic infection alerts to trick users into installing malware.

Felten demonstrated an early web spoofing attack, creating a "shadow copy" of the web to observe and capture user information. Phishing attacks, which involve spoofing communications to lure victims to fake websites, succeed because many users do not properly authenticate websites. Scareware attacks similarly spoof trusted client software to motivate users to install fake antivirus software.

Scareware statistics show that 7.7% of users who received a simulated antivirus scan initiated a download, with only 5% of machines reporting successful installation. The increasing sophistication of these attacks highlights the need for better user education and interface design.

## Experimental Design
Our experiment aimed to determine the fraction of users who would enter their passwords into a spoofed OS window, detect the spoofing, and identify the clues they used to detect it.

### Experimental Procedure
We designed a deception study where participants believed they were evaluating third-party gaming websites. We received Institutional Review Board (IRB) approval to conduct this study, ensuring that participants' trust in our institution did not influence their behavior. The simulated attacks took place on a confederate website, which we controlled, to create a realistic scenario.

By mimicking the experience of visiting a new website and encountering a spoofed installation window, we were able to gather data on how users respond to such attacks. Our results provide insights into the effectiveness of spoofing attacks and the need for improved user interfaces and security education.