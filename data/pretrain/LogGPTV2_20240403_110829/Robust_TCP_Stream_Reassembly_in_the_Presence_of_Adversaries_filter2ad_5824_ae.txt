ments of all of the adversary’s connections. Thus, the ad-
versary ﬁlls the buffer but still there is enough space to
keep all benign buffer pages, and no eviction is needed.
Case 2: C > P−Pl
T
. In this case, the adversary has
more connections at their disposal than we can support,
and thus they can drive the system into eviction. On av-
erage, the adversary needs to evict P/Pl pages in order to
evict a page occupied by legitimate buffers. Let b evic-
tions/second be the aggregate rate at which the adver-
sary’s connections evict pages.
If we denote the rate of eviction of legitimate pages by
e then we have the following expression:
e = Pl
P
b
(1)
We now express the eviction rate, b, as a function of
other parameters. Recall that if the number of packets ac-
cumulated by a hole is fewer than three, then upon evic-
tion of a page containing these packets, we do not need
to terminate the connection. If we have buffered three or
more packets following a hole, then evicting any of them
will cause the eviction of all of them due to our policy
of terminating the corresponding connection in this case.
Thus the adversary, in order to protect their own connec-
tions and avoid having all of their pages reclaimed due to
the allocation of a single new page, would like to ﬁt in the
ﬁrst of these two cases, by having fewer than three pack-
ets in the buffer. However, the adversary would also like
to occupy as much buffer as possible. Assuming pages
are big enough to hold a single full-sized packet, then to
remain in the ﬁrst case the best they can do is to send two
packets that occupy two pages, leading to the following
sub-case:
Case 2a: C ≥ P−Pl
2
. In this case, if adversary evicts
one of their own pages, then this will not cause termina-
tion of the connection; only a single page is affected, and
replaced by another of the adversary’s pages: such evic-
tions do not cost the adversary in terms of resources they
have locked up.
We now consider r, the rate at which a single adversary
connection can send data. The adversary’s corresponding
aggregate page creation rate is (r/g)C, leading to:
b ≤ rC
g
which becomes an equality when the buffer is full. (Recall
that b is the page eviction rate.) Thus, when the buffer is
full, Eqn. 1 then gives us:
e = PlrC
P g
76
14th USENIX Security Symposium
USENIX Association
Which can be expressed as our ﬁrst Zombie Equation:
C = P
Pl
eg
r
(2)
As this expression shows, the adversary needs a large
number of connections if the proportion of “spare” pages
is large.
2
of connections, then we have the following case:
On the other hand, if the adversary uses a lesser number
Case 2b: C < P−Pl
. In this case, to cause evictions the
adversary’s connections must all consume three or more
pages. However, as discussed above, if one of the con-
nection’s pages is evicted then the connection will be ter-
minated and all of its pages evicted. Thus, eviction im-
mediately frees up a set of pages, and adding more pages
is not going to cause eviction until the buffer is full again.
Providing that in steady-state most evictions are of the ad-
versary’s pages (which we can achieve using P (cid:29) Pl), in
this case they are ﬁghting a losing battle: each new page
they claim costs them a multiple of existing pages. Thus,
it is to the adversary’s detriment to be greedy and create a
lot of pages.
We can make this argument more precise, as follows.
Suppose every time the adversary evicts one of their own
existing connections, it releases Pc pages (the number of
pages that each of their connections occupies). For the
next Pc − 1 page additions, no page needs to be evicted,
since the buffer is not yet full. After the buffer is again
full, the same process of eviction and repletion repeats.
Thus, the rate of attempts to evict a buffer is simply once
every Pc page additions.
The time required for Pc additions is Pcg/rC (total size
in bytes of the amount of buffer that must be consumed,
divided by the aggregate rate at which the adversary can
send data). Furthermore, since the number of pages the
adversary must consume is P − Pl, if each connection
consumes Pc pages, then we have Pc = (P − Pl)/C.
Putting these two together, we have:
b =
1
Pcg/rC
= rC
Pcg
=
rC2
(P − Pl)g
(3)
Holding the other parameters ﬁxed, this equation says that
the rate of eviction varies quadratically with the number
of connections available to the adversary. Intuitively, the
quadratic factor comes from the fact that by increasing
the number of connections, the adversary not only can in-
crease their rate of page addition but also reduce their own
page eviction rate, since now each individual connection
needs to contribute fewer pages.
Substituting Eqn. 3 for b in Eqn. 1 and assuming P (cid:29)
Pl, we get:
e =
rC2Pl
(P − Pl)gP
≈ rC2Pl
gP 2 = rC2Ml
M 2
(4)
This gives us our second Zombie Equation:
C = Mr e
rMl
(5)
Due to our policy of one-hole-per-host, the required
connections in Eqns. 2 and 5 must originate from different
hosts. Hence, the value of C essentially tells us how many
total hosts (“Zombies”) an adversary must command in
order to launch this attack.
Finally, it is important to note that e is just the rate of
eviction of benign buffer pages. As can been seen from
Table 1, 85% or more of the time an evicted page hosts
an un-forwarded packet (< 3 packets in the buffer), and
hence its eviction causes only minor collateral damage
(degraded TCP performance due to retransmission). If we
denote the benign connection termination rate by E, then:
E ≤ (1 − 0.85)e = 0.15e
(6)
expresses the rate of serious collateral damage.
We now evaluate these equations with parameters re-
ﬂecting current technologies. We assume the availabil-
ity of 128 MB and 512 MB DDR-SDRAM modules for
buffering packets. Figure 3 shows that the maximum
amount of buffer accumulated by a hole was observed
to be around 100 KB. However, it can also be seen that
for almost 95% of the cases it was below 25 KB. There-
fore, it is reasonable to limit the per connection buffer to
a 25 KB threshold, which translates into approximately
T < 13 pages with a page size of 2 KB. ¿From Table 1,
we see that there is a notable difference between the av-
erage buffer occupancy of the Munich trace compared to
other traces. While for other traces, the average buffer
requirement of legitimate connections is Ml ≤ 30KB,
the same jumps to about 180 KB for the Munich. We will
consider both these values of Ml. Finally, to get an idea of
the degree of damage in a real life scenario, we pick three
different zombie data-rates: 56 Kbps for dial-up zombies,
384 Kbps for the zombies with DSL, and 10 Mbps for
high-speed zombies. With all these parameters ﬁxed, the
rate of collateral damage, E, can be plotted as a function
of the number of zombies and their data rate r, as shown
in Figure 7.
Each curve has three distinct regions: the ﬁrst region
when the eviction rate of benign connections is zero, cor-
responding to Case 1 analyzed above; the second region
where the eviction rate increases quadratically with the
number of zombies, reﬂecting Case 2b (it’s in the ad-
versary’s interest to create large holes); and the third re-
gion where the eviction rate increases linearly, reﬂecting
Case 2a (the adversary is better off creating small holes).
Note that the Y-axis is log-scaled. The abrupt change in
eviction rate from region 2 to region 3 arises due to the as-
sumption that all the connections of an adversary occupy
USENIX Association
14th USENIX Security Symposium
77
d
n
o
c
e
s
r
e
p
d
e
t
i
c
t
v
e
s
n
o
i
t
c
e
n
n
o
c
i
n
g
n
e
B
d
n
o
c
e
s
r
e
p
d
e
t
i
c
t
v
e
s
n
o
i
t
c
e
n
n
o
c
n
g
n
e
B
i
10000
1000
100
10
1
0.1
0.01
0.001
0
10000
1000
100
10
1
0.1
0.01
0.001
0
d
n
o
c
e
s
r
e
p
d
e
t
i
c
t
v
e
s
n
o
i
t
c
e
n
n
o
c
i
n
g
n
e
B
d
n
o
c
e
s
r
e
p
d
e
t
i
c
t
v
e
s
n
o
i
t
c
e
n
n
o
c
n
g
n
e
B
i
50000
100000
150000
200000
250000
r = 10Mbps
r = 384Kbps
r = 56Kbps
# Zombies
(a)
50000
100000
150000
200000
250000
r = 10Mbps
r = 384Kbps
r = 56Kbps
# Zombies
(c)
10000
1000
100
10
1
0.1
0.01
0.001
0
10000
20000
10000
1000
100
10
1
0.1
0.01
0.001
0
10000
20000
r = 10Mbps
r = 384Kbps
r = 56Kbps
40000
50000
60000
30000
# Zombies
(b)
r = 10Mbps
r = 384Kbps
r = 56Kbps
40000
50000
60000
30000
# Zombies
(d)
Figure 7: Benign connection eviction rate as a function of different memory sizes and zombie data rates: dialup zombies
(56 Kbps), DSL zombies (384 Kbps) and high-speed zombies (10 Mbps). (a) Total available memory, M=512 MB and average
legitimate buffer occupancy Ml=30 KB (b) M=128 MB, Ml=30 KB (c) M=512 KB, Ml=180 KB (d) M=128 MB, Ml=180 KB.
For all cases, we assume a 2 KB page size and a per-connection buffer threshold of 25 KB (T < 13 pages).
the same number of pages in the buffer. This assumption
results in each connection in region 2 having more than
two pages and thus all pages are evicted upon eviction of
any one of these pages; while each connection in region 3
has at most two pages, which are thus not evicted in en-
semble. In practice, this change will not be so abrupt since
each region will have a mix of connections with different
page occupancy, the analysis of which requires more so-
phisticated mathematical tools beyond the scope of this
paper.
As the ﬁgure shows,
in the most favorable case
(512 MB of buffer, and average buffer requirement of
30KB) for the adversary to cause collateral damage of
more than 100 benign connection evictions per second,
they need to control more than 100,000 machines, with
each of them sending data at a rate of 10 Mbps. Moreover,
for the same conﬁguration, if these zombies number less