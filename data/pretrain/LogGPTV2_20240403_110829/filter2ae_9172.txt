# 引言
通过将一条条指令组合成原始的数据类型完成汇编指令到高级语言结构
# 目标
掌握数组、链表、结构体等数据类型的汇编指令。
# 流程
  1. 编写源代码，生成对应程序
  2. 返汇编程序
  3. 分析汇编代码，总结数据类型的特点
  4. 小结
# 实践过程
## 数组类型
  * 源代码
    #include 
    void main()
    {
        int arr[5];
        arr[0] = 1;
        arr[1] = 2;
        for(int i=2; i
    #include 
    struct mystruct
    {
        int x[5];
        char y;
    };
    struct mystruct *test;
    void main()
    {
        test = (struct mystruct *)malloc(sizeof(struct mystruct));
        for(int i=0; ix[i]= i;
        }
        test->y = 'a';
    }
  * 汇编代码
  * 特点
malloc出一块内存，然后给这块内存赋不同类型的数据
  1. 一个内存上每个元素不全一致
  2. 小结
    mov     ecx, ?test@@3PAUmystruct@@A ;
    mov     edx, [ebp+var_2C]
    mov     [ecx+eax*4], edx
    ...
    mov     eax, ?test@@3PAUmystruct@@A ; mystruct * test
    mov     byte ptr [eax+14h], 'a'
malloc得到一块内存后，给其赋不同长度或不同类型的数据
## 链表
  * 源代码
    #include 
    #include 
    struct node
    {
        int x;
        struct node * next;
    };
    typedef node pnode;
    void main()
    {
        pnode * curr, * head;
        int i;
        head = NULL;
        for(i = 1; ix = i;
            curr->next = head;
            head = curr;
        }
    }
  * 汇编代码
  * 特点
malloc一块内存，给这块内存内赋任意元素数据和`一个内存地址`，这个内存地址指向另一块相同类型的内存。
  1. 一个内存块里必须存在一个元素指向另一个相同类型的内存块