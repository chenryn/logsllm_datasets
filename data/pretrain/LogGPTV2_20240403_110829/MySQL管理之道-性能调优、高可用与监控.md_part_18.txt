sqi show variable likeslave_exee_mode
row in set (0.15 zec)
lave_esec_mode
nOW
0ros
variables
（0.04sec)
IDEMPOTENT
SIRICT
Value
Value
ete
like
---
## Page 135
否一致的。而 mk-table-sync 则是在主从数据不一致时，用来修复的。
公司收购并维护。其中 mk-table-checksum 是用来检测 master 和 slave上的表结构和数据是
4.6
用slaveip.txt:
Maatkit是一个开源的工具包，为MySQL日常管理提供了帮助。目前，已被Percona
slaveip.txt文件填写你的 slave 机器的IP，如下面这样一行一行添加，上面的脚本会调
参考手册：
这样可以尽可能地减少业务影响的范围扩大，等你到家时再做下一步处理。
*/10****bash/home/hechunyang/skip_slave_error.sh
然后将脚本 skip_slave_error.sh 加人到crontab里，每十分钟检查一次。
192.168.8.26
192.168.8.23
192.168.8.22
#cat slaveip.txt
192.168.8.25
192.168.8.24
done
如何验证主从数据一致
if["$result”!="Yes"];then
-e"showslave status\G"|awk-F":"/slave_SQL_Running/(print $2})
result=S($MySQLpath/MySQL-uSuser-pSpasswd-hShostip-PSport\
#发送一封邮件并短信通知你同步报错已经跳过了。
---fnagiosadmin@139.com-Fnagiosadmin
echo“replication is error and skip"|mail-s"replcation Alert"PI:EMAIL\
-e"start slave;"
SMySQLpath/MysQL-uSuser-pSpasswd-hShostip-PSport\
-e"stop slave;"
SMySQLpath/MySQL-uSuser-p$passwd-h$hostip-P$port
SMySQLpath/MySQL-uSuser-pSpasswd-hShostip-PSport\
slave
othatthem
xe
ENT
longer sync
第4章
同步复制报错故障处理·121
sthat it ispos
---
## Page 136
122·第二部分故障诊断与性能优化篇
加个管道符就行了。示例如下：
可选择凌晨。
注意
这两个perl脚本在运行时都会锁表，表的大小取决于执行的快慢，勿在高峰期间运行，
[root@vm02~]#mk-table-checksum h=vm01,u=admin,p=123456\
如果你想过滤出不相等的表，
口LAG：slave的延时时间
口DATABASE：数据库名
这里提示缺少 perl-DBI模块，那么直接运行 yum install perl-DBI。再次执行这一条命令:
TABLE：表名
下面，解释一下输出的意思：
如果表数据不一致，CHECKSUM的值是不相等的。
searchesforDBl.IfDBIisnotnstalledtry:
其使用方法如下：
口
口
口
口
口
L
[root@vm02bin]#
NULLNULL
ncyt1
ONULLNULL
ncy
NAITSTATLAG
DATABASETABLECHUNKHOSTENGINE
root@vm02bin]#mk-table-checksumh=vm01,u=admin,p=123456\
CannotconnecttoMySQLbecausethePerlDBlmoduleisnotinstalled
=vm02,u=admin,p=123456-dhcy-tt1
[root@vm02]#mk-table-checksumh=vm01,u=admin,p=123456\
root@vm02]#
STAT：master_POS_WAITO返回值
COUNT：表的行数
ENGINE：表引擎
1HOST：MySQL的地址
CHUNK：checksum时的近似数值
OpenSolarispgk install pkg:/SUNWpmdbi
Debian/Ubuntuapt-getinstallibdbi-perl
WAIT：等待时间
TIME：所用时间
CHECKSUM：校验值
RHEL/CentOS
t1
0vm02InnoDB
0vm01InnoDB
yum install perl-DBI
NULL
NULL
，可以用mk-checksum-filter这个工具。只要在-d hcy后面
1957752020
19577520200
COUNT
CHECKSUMTIME
0
---
## Page 137
配置，binlog格式为row模式，跟他要了当时的语句，如下：
怪，详细询问当时的情况，原来是在进行主从复制时，有一个库不复制，查了他的my.cnf
个库以后，使用 MySQL-e 执行的所有语句就不写binlog了。听他这样说，我也觉得很奇
4.7
就执行删除、更新、插入等操作，使其达到一致。表的大小决定着执行速度的快慢。
这是我一个同事提供的案例，在MySQL master上使用 binlog_ignore_db 命令忽略了一
它的工作原理是：先一行一行地检查主从库的表是否一样，如果发现有哪里不一样，
查看手册，了解到是因为忽略某个库的复制有两个参数，一个是binlog_ignore_db，另
MySQL-e"createtable db.tblikedb.tb1"
dst_dsn:h=vm02,p=..,u=admin lock:0transaction:1changing_src:0replicate:0
该工具的使用方法如下：
在知道有哪些表不一致后，可以用mk-table-sync这个工具来处理（如图4-3所示)。
bidirectional:0pid:3246user:roothost:vm02*/;
src_tbl:t2src_dsn:h=vm01,p=.,u=admindst_db:hcydst_tbl:t2
[root@vm02~]#mk-table-sync--execute--print--no-check-slave--transaction\
ONULLNULL
ONULLNULL
h=vm02,u=admin,p=123456-dhcy|mk-checksum-filter
ncy
binlog_ignore_db 引引起的同步复制故障
0vm02InnoDB
0vm01InnoDB
id | 
NULL
19577520200
10686891140
图4-3主从数据不一致
id | ao
LAVF上的2表数影：
Maatkit工具包
第4章
同步复制报错故障处理·123
---
## Page 138
124·第二部分故障诊断与性能优化篇
组反馈MySQL反复重启，后来，在错误日志里发现了一个Bug信息，如图4-6所示。
使用replicate-ignore-db=yourdb取代之。
用use库名，如果使用了，就可以记录binlog了，如图4-5所示。
4.8
全上，可以保证master和 slave数据的一致性。
样不仅仅增加了网络 I/O量，也给 slave 端的I/O线程增加了 RelayLog 的写人量)，但在安
binlog_ignore_db好（不管是否需要，复制的 binlog 都被会被 I/O线程读取到 slave 端，这
幅度地优化复制性能。但也存在了一个隐患，对于这个隐患，在后面的演示中会提到。
就会减少，这样做的好处是可以减少网络I/O，减少slave端I/O线程的I/O量，从而最大
库下的所有操作（增、删、改）都不会记录下来，这样 slave在接收主库的binlog时文件量
test库下的所有操作（增、删、改）都不会被SQL线程执行，从性能上来说，它虽然没有
binlog_ignore_db参数是设置在主库上的，例如，binlog_ignore_db=test，那么针对 test
当我们在用低版本MySQL5.1.43（slave）向高版本5.5.19（master）同步复制时，运维
结果新创建的表在 slave上一个都没有。到底是什么原因引起的呢？那就是因为没有使
replicate-ignore-db参数是设置在从库上的，例如，replicate-ignore-db=test，那么针对
所以，如果想在 slave上忽略一个库的复制，最好不要用binlog_ignore_db这个参数，
下面就来演示一下，创建表为什么没有记录在binlog日志里，如图4-4所示。
MySQL5.5.19/20 同步—个 Bug
图4-4binlog未发生变化
Li
图4-6Bug信息
图4-5binlog发生变化
---
## Page 139
那么slave 向 master同步复制时是兼容的，没有问题)。
但不推荐低版本向高版本同步，手册上解释：
downloads.MySQL.com/archives.php，目前MySQL5.5.25a之后的版本已经修复了此BUG。
服务也不会循环重启。
发生此问题。如果点指对，即使同步复制因为某种原因导致报错，主机master的MySQL
的MySQL服务就会循环重启，MySQL和Percona版本均是如此，但版本一致的，就不会
16.4.2.ReplicationCompatibilityBetweenMySQLVersions
ReplicatinfmewermastertdavemaysblbuseneralytupportedThiisduberffatr
意思为：MySQL支持从高版本向低版本同步（即master是低版本，slave是高版本，
就会触发那个BUG。有兴趣的朋友可以用那两个版本试试。官方下载地址：http://
比如master上的binlog和POS点是：
后来经过排查，得知低版本向高版本同步复制，只要同步复制的点指错，主机master
再来看下高版本V5.5.19的表现，如图4-9所示。
在低版本V5.1.43里，是不识别高版本这种字符集的，如图4-8所示。
但反过来，就会存在问题。尤其是字符集设置这块，如图4-7所示。
CHANGEmasterTOmaster_LOG_FILE='MySQL-bin.000001',master_LOG_POS=106;
那么你在slave上执行如下操作：
MySQL-bin.000001，107
图4-8低版本字符集未识别
图4-7字符集未识别报错
第4章
AT
同步复制报错故障处理·125
---
## Page 140
126·第二部分故障诊断与性能优化篇
cl表的数据在之前的导出已经生成了一份快照，只需要导入后开启同步即可。
注意
master上的不一致，操作方法如下：
对整个库不是很大的情况的，那如果是较大呢？全部导出再导入耗时就很长。
没有解决，通常的方法就是在master上重新导出一份，然后在 slave上恢复。这个方法是针
4.9
在日常操作中格外注意。
问题，可以兼容。但反过来，master 的版本高，slave的版本低，就会出现文中这种情形，
这一步是为了保障其他表的数据不丢失，一直同步，直到同步到那个点为止，al、bl、
这时，就要通过特殊的方法恢复某几张表，例如，有al、bl、cl这三张表的数据跟
在日常工作中，同步报错是数据库管理员遇到最多的一个问题，如果你修复后发现还
所以在这里提醒大家一下，如果 master 的版本低，slave 的版本高，做主从复制是没有
直到 sql_thread线程为NO，这期间的同步报错一律跳过即可，可用如下命令跳过：
4）把a1_b1_c1.sql复制到 slave 机器上，并做Change master to 指向：
3）查看a1_b1_c1.sql文件，找出记录的binlog和POS点：
2）在主库上导出这三张表，并记录下同步的binlog和POS点：
1）停止slave复制，命令如下：
这条语句是可以识别的。
stop slave;setglobalsql_slave_skip_counter=1;start slave;
MySQL>start slave until master_LOG_FILE='MySQL-bin.002974',master_LOG_POS=55056952;
例如master_LOG_FILE=MySQL-bin.002974',master_LOG_POS=55056952;
#MySQLdump-uroot-p123456-q-single-transaction--master-data=2yourdb a1b1c1>./a1_b1_c1.sql
#more a1_b1_c1.sql
MySQL>stopslave;
恢复slave从机上的某几张表的简要方法
row ia set (0.41 ser)
.5.13-1ng
rsiont
SET
图4-9高版本字符集识别
---
## Page 141
show slave status\G里面的同步信息，但当你再次执行时，发现并不是我们想要的结果，如
4.10如何干净地清除slave同步信息
下所示：
比如，在某些应用场景，我们要下线一台slave从机，
5）在 slave机器上导人al_b1_cl.sql，命令如下：
Query OK,0rows affected (0.17sec)
MySQL>resetslave;
Query OK,0 rows affected (0.19 sec)
MySQL>stop slave;
这样我们就恢复了3张表，并且同步也修复了。
6）导人完毕后，开启同步即可。
Cor
MySQL>showslavestatus\G;
MySQL>startslave;
#MySQL-uroot-p123456yourdbresetslaveall;
Until_Log_Pos:0
ERROR:
MySQL>showslavestatus\G;
QueryOK,0rowsaffected(0.04sec)
Noqueryspecified
ERROR:
Last_l0_Errno:0
master_SSL_Verify_Server_Cert:No
Seconds_Behind_master:NULL
ast_lO_Error:
B
row in set(0.02 sec)
master_Server_Id:22
Replicate_Ignore_Server_Ids:
master_SSL_Key:
master_SSL_Cert:
Last_SQL_Error:
Last_SQL_Errno:0
master_SSL_CA_Path:
master_SSL_CA_File:
master_SSL_Allowed:No
---
## Page 143
的一列再分成二列或多列。因此，你想在现有的DBMS中设计出不符合第一范式的数据库
（DBMS）中，不可能做出不符合第一范式的数据库，因为这些DBMS不允许你把数据库表
本类型构成，包括整型、字符型、逻辑型、日期型等。在当前的任何关系数据库管理系统
式（2NF），其余范式依次类推。一般说来，数据库只需满足第三范式（3NF）就行了。
求的范式是第一范式（1NF)。在第一范式的基础上进一步满足更多规范要求的称为第二范
巴德斯科范式（BCNF）、第四范式（4NF）和第五范式（5NF，又称完美范式）。满足最低要
同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。
5.1
将进行逐个阐明。
引、配置文件参数、操作系统、文件系统、MySQL版本、体系架构这几大部分。下面本章
实力，这里不多介绍。软件再细分为表设计（范式、字段类型、存储引擎）、SQL语句与索
DBA、运维人员才需要担心的事，更是所有广大开发人员需要重点关注的。
成为整个应用的性能瓶颈，对于Web应用来说尤为明显。关于数据库的性能，并不只是
部暴露出来了，所以前期的设计阶段尤为重要。如今，数据库的大并发查询、写人操作已
数据少，并发小，隐藏的问题是发现不了的，只要达到一定规模后，所有的问题就会全
在宏观上来说，调优分为3个部分：硬件、网络、软件，前两个取决于你公司的经济
目前关系数据库有6种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）
在设计关系数据库时，要遵从不同的规范要求来设计出合理的关系型数据库，这些不
第一范式（1NF)：数据库表中的字段都是单一属性的，不可再分。这个单一属性由基
调优，就好比盖楼打地基，地基打得不稳，楼层一高，就会塌方。数据库也是如此，
1.第一范式（1NF）
表设计
性能调优
第5章
---
## Page 144
130
·第二部分故障诊断与性能优化篇
都是不可能的。
2003003
2003002
病人编号
2003008
2003007
2003006
2003005
2003004
2003003
2003002
2003001