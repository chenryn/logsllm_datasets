### Bug Report

**Webpack Version:**
2.1.0-beta.13

**Environment:**
- Operating System: macOS 10.11.5

**Current Behavior:**
When defining loaders with the `-loader` suffix (e.g., `babel-loader`), and given that the default value of `moduleExtensions` is also `-loader`, the module resolution process attempts to find a file named `babel-loader-loader`. This leads to an erroneous `npm install` when using the following plugin:
- [npm-install-webpack-plugin](https://github.com/ericclemmons/npm-install-webpack-plugin)

**Expected Behavior:**
The expected behavior is that the `-loader` extension should be enforced, meaning that if a loader is specified as `babel`, it should automatically become `babel-loader`. If the loader name already ends with `-loader`, no additional suffix should be added (i.e., it should be a no-op).

**Steps to Reproduce:**
1. Set up a Webpack project with the specified version.
2. Define a loader in the Webpack configuration with the `-loader` suffix.
3. Use the `npm-install-webpack-plugin` in your configuration.
4. Run the build process and observe the error.

**Minimal Demo:**
Please refer to the following Webpack configuration for a minimal reproduction of the issue:
```javascript
// webpack.config.js
const NpmInstallPlugin = require('npm-install-webpack-plugin');

module.exports = {
  // ... other configurations
  module: {
    rules: [
      {
        test: /\.js$/,
        use: 'babel-loader', // Example loader with -loader suffix
      },
    ],
  },
  plugins: [
    new NpmInstallPlugin(),
  ],
};
```

**Additional Information:**
I believe this issue is related to the following files in the `enhanced-resolve` library:
- [ResolverFactory.js (Lines 164-169)](https://github.com/webpack/enhanced-resolve/blob/d154f01b6f74b90f3ac3c5ea6cca89abead5236c/lib/ResolverFactory.js#L164-L169)
- [ModuleAppendPlugin.js](https://github.com/webpack/enhanced-resolve/blob/master/lib/ModuleAppendPlugin.js)

Thank you for your attention to this matter.