### Comparison of Anonymity Set Sizes

**Figure 6.** Comparison of anonymity set sizes on the user-agent between Chrome and Firefox on mobile devices.

**Figure 7.** Comparison of anonymity set sizes between devices with and without Flash.

In the previous section, we observed that user-agents can provide highly discriminating information about a user's device. Some Android smartphones, for example, reveal the exact model and firmware version. As shown in Figure 6, user-agents from the Chrome mobile browser are ten times more unique than those from the Firefox browser (40% vs. less than 4%). This disparity can be attributed to the fact that Chrome is the default browser on Android and is automatically installed on every device. When a phone manufacturer customizes its firmware, the embedded Chrome browser includes a user-agent string that contains detailed information about the phone model and Android version. In contrast, Firefox, which is downloaded from the Google Play Store, does not include such specific information because the store offers a generic version for all Android devices. Consequently, Firefox provides better protection against fingerprint tracking by not disclosing device-related information.

Here are two fingerprints collected from the same device but with different browsers:
- **Chrome:**
  ```
  Mozilla/5.0 (Linux; Android 4.4.4; D5803 Build/23.0.1.A.5.77) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.93 Mobile Safari/537.36
  ```
- **Firefox:**
  ```
  Mozilla/5.0 (Android; Mobile; rv:34.0) Gecko/34.0 Firefox/34.0
  ```

### Assessing the Robustness of Fingerprinting Against Possible Technical Evolutions

Web technologies evolve rapidly, and as seen in previous sections, some recent changes have limited fingerprint-based identification (e.g., the absence of Flash on mobile devices), while others have enhanced it (e.g., WebGL, which reveals fine-grained information about the GPU).

In this section, we explore six potential evolutions in web technology and their impact on browser fingerprinting. The first two scenarios are based on current trends, while the others are more speculative. We do not estimate the impact of scenarios 4 and 5 due to the difficulty in predicting affected attributes. Scenario 6 is treated separately due to its extreme nature.

#### Scenario 1: The Definitive Disappearance of Flash

Flash is being phased out on all mobile devices and is becoming less trusted on desktops due to security flaws. Click-to-play is becoming standard on most browsers, and many web applications are replacing Flash with JavaScript and HTML5. 

**Impact of Scenario 1:**
- **Figure 7** shows the impact of the Flash plugin on fingerprint uniqueness.
- For our complete dataset, 60,617 fingerprints have Flash. Removing Flash attributes reduces the uniqueness from 95% to 88%.
- The sizes of the anonymity sets are notably small, with less than 0.6% of fingerprints in a set of size 50 or greater.
- These numbers confirm that browser fingerprinting is still possible without Flash, as the wealth of other fingerprintable attributes compensates for the lack of Flash-specific data.

#### Scenario 2: The End of Browser Plugins

Google decided to stop supporting NPAPI plugins in Chrome, relying instead on modern browser technologies and HTML5. This has forced developers to migrate old plugins to newer alternatives or drop support entirely.

**Impact of Scenario 2:**
- **Figure 8** shows the evolution of the normalized entropy of plugins for different browsers on desktop computers.
- Up to Chrome version 42, the normalized entropy of the list of plugins was above 0.8. Since version 42, the entropy has dropped below 0.5, and with the release of version 45, where NPAPI support was permanently removed, the entropy is even lower.
- Removing plugin support significantly impacts desktop fingerprints, limiting their use in browser fingerprinting.

#### Scenario 3: Adherence to Standard HTTP Headers

A major source of information for browser fingerprinting comes from application and system developers who add arbitrary information to headers. The IETF has standardized a list of fields for HTTP headers, and this scenario explores the possibility of technology providers adhering to these standards.

**Impact of Scenario 3:**
- Simulating adherence to standard HTTP headers, the overall uniqueness decreases by 8% on desktops (from 90% to 82%) and by 21% on mobile devices (from 81% to 60%).
- This highlights the importance of headers, especially the user-agent, for mobile fingerprinting and the need for generic user-agents to enhance privacy.

#### Combining Scenarios 1, 2, and 3

- For mobile devices, the combined effect is significant but not overwhelming, with a 22% drop in unique fingerprints.
- For desktop devices, the percentage of unique fingerprints drops by 36% (from 90% to 54%).
- This means that if plugins disappear and user-agents become generic, only half of the fingerprints would be uniquely identifiable, significantly improving privacy.

#### Scenario 4: Reduce the Surface of HTML APIs

The disappearance of Flash and plugins will only occur if developers find suitable replacements with rich HTML and JavaScript features. As a result, HTML APIs are growing, providing access to an increasing amount of information about the browser and its environment.

**Impact of Scenario 4:**
- Future API developments, combined with informed studies about privacy, could lead to reduced APIs that still provide rich features.

#### Scenario 5: Increase Common Default Content

This scenario explores the possibility that browser or platform developers increase the amount of default elements, which would be the only ones exposed publicly. For example, a whitelist of fonts authorized by the browser could be implemented.

**Impact of Scenario 5:**
- This evolution aims to reduce the amount of information disclosed to external servers without preventing users from adding new fonts or emoji renderings.

#### Scenario 6: The End of JavaScript

This scenario explores the unlikely event of returning to a more static web without JavaScript. While this would drastically reduce the dynamicity and comfort of browsing, it is currently used by millions of NoScript extension users.

**Impact of Scenario 6:**
- **Figure 9** shows the impact of removing JavaScript. With JavaScript, 89.4% of browsers are uniquely identifiable, while removing it reduces the rate to 29%.
- If user-agents also become generic, only 7% of fingerprints would be unique.
- The privacy benefits are significant, but the cost to developers and user comfort would be very high.

### Conclusion

We have quantified the impact of possible technological evolutions on browser fingerprinting. While some scenarios are more plausible than others, they demonstrate that privacy can be significantly improved with a limited impact on the current web experience. Tools like ad and script blockers, NoScript, and the Tor browser already provide similar protections.

### Related Work

- **Client-side Diversity:** Our work builds on Peter Eckersley's Panopticlick study, which showed that 83% of visitors had instantly recognizable fingerprints. Our study includes more recent web technologies and a detailed analysis of mobile fingerprints.
- **Adoption of Fingerprinting on the Web and Server-side Scripts:** Studies by Nikiforakis et al. and Acar et al. have shown the wide adoption of fingerprinting scripts on the web.
- **New Techniques for Richer Fingerprints:** Various works have explored new ways to fingerprint devices, such as canvas and WebGL, benchmarking JavaScript performance, and using the Battery Status API.

### Final Insights

- Modern web technologies improve user experience but often at the expense of privacy.
- Our observations confirm the ease of fingerprinting in today's ecosystem and provide novel insights into the impact of recent browser APIs.
- HTTP headers and HTML5 canvas fingerprinting play essential roles in identifying mobile browsers.
- Reducing fingerprint uniqueness through generic HTTP headers and removing browser plugins could significantly enhance privacy.

### Acknowledgment

We thank Nick Nikiforakis, Gildas Avoine, Adrienne Porter Felt, and the anonymous reviewers for their valuable feedback. This work is partially supported by the EU FP7-ICT-2011-9 No. 600654 DIVERSIFY and the CNRS INS2I JCJC 2016 FPDefendor projects.

### References

[1] N. Nikiforakis, A. Kapravelos, W. Joosen, C. Kruegel, F. Piessens, and G. Vigna, “Cookieless monster: Exploring the ecosystem of web-based device fingerprinting,” in Proc. of the Symp. on Security and Privacy, 2013, pp. 541–555.

[2] G. Acar, M. Juarez, N. Nikiforakis, C. Diaz, S. Gürses, F. Piessens, and B. Preneel, “Fpdetective: dusting the web for fingerprinters,” in Proc. of the Conf. on Computer & Communications Security (CCS). ACM, 2013, pp. 1129–1140.

[3] “Google Privacy Policy,” https://www.google.com/policies/privacy/.

[4] K. Mowery and H. Shacham, “Pixel perfect: Fingerprinting canvas in HTML5,” in Proceedings of W2SP 2012, M. Fredrikson, Ed. IEEE Computer Society, May 2012.

[5] “Mobile internet usage soars by 67%,” http://gs.statcounter.com/press/mobile-internet-usage-soars-by-67-perc.

[6] G. Acar, C. Eubank, S. Englehardt, M. Juarez, A. Narayanan, and C. Diaz, “The web never forgets: Persistent tracking mechanisms in the wild,” in Proceedings of the 21st ACM Conference on Computer and Communications Security (CCS 2014). ACM, 2014.

[7] P. Eckersley, “How unique is your web browser?” in Proceedings of the 10th International Conference on Privacy Enhancing Technologies.