### P2P Application and Botnet Traffic Analysis

#### Table IX: Bot Traces Overlaid with P2P Application Traces

| **Bot** | **# of Flows (Before Overlaying)** | **# of DstIPs (Before Overlaying)** | **Avg Flow Size (Before Overlaying)** | **# of Flows (After Overlaying)** | **# of DstIPs (After Overlaying)** | **Avg Flow Size (After Overlaying)** |
|---------|-----------------------------------|------------------------------------|--------------------------------------|-----------------------------------|------------------------------------|--------------------------------------|
| Waledac1 | 341,784 | 850 | 12,829 | 452,645 | 15,338 | 55,688 |
| Waledac2 | 319,119 | 760 | 11,372 | 361,135 | 1,359 | 348,708 |
| Storm1 | 200,237 | 6,390 | 1,342 | 429,458 | 16,635 | 1,714 |
| Storm2 | 275,451 | 7,319 | 1,337 | 310,667 | 8,307 | 3,381 |
| Storm3 | 133,955 | 5,584 | 1,344 | 432,464 | 23,261 | 172,945 |
| Storm4 | 171,471 | 7,277 | 1,280 | 199,101 | 7,520 | 1,266 |
| Storm5 | 164,917 | 6,686 | 1,328 | 214,548 | 13,137 | 1,307 |
| Storm6 | 220,459 | 6,618 | 1,307 | 238,063 | 8,543 | 6,244 |

#### Table X: Experimental Results

| **Description** | **FP** | **TP** | **Data** |
|-----------------|--------|--------|----------|
| Bots overlaid with host | 100% | 0.2% | 𝐷1 |
| Bots overlaid with P2P host | 100% | 0.2% | 𝐷2 |
| Only two bots | 100% | 0.2% | 𝐷′ |
| A "clean" network | 0.2% | - | 𝐷′ |

#### Figure 4: Performance Evaluation

- **(a) Number of hosts identified by each step (on 𝐷1)**
- **(b) System Performance for Different 𝐶𝑛𝑡𝑏𝑖𝑟𝑐ℎ**

#### C. Experimental Results

Table X summarizes the experimental results from Section IV-C2, IV-C3, and IV-C4, with parameters set as Θ𝑏𝑜𝑡 = 0.95 and 𝐶𝑛𝑡𝑏𝑖𝑟𝑐ℎ = 4000. The effects of varying Θ𝑏𝑜𝑡 and 𝐶𝑛𝑡𝑏𝑖𝑟𝑐ℎ are discussed in Section IV-C5.

##### 1. Identifying and Profiling P2P Applications

We applied our detection system to data set 𝐷1. The number of hosts remaining after each step is shown in Figure 4(a). DNS traffic reduction significantly reduced the number of hosts and flows, thereby reducing the workload for subsequent steps. For example, as illustrated in Figure 4(a), only one-third of the hosts (316 out of 953) needed to be processed after traffic reduction.

Our system identified 34 hosts as P2P clients. These 34 hosts include:
- All 16 P2P bots
- All 10 hosts with 5 popular P2.P applications tested
- 8 other hosts in the college networks

For the 8 additional hosts, 3 were verified as Bittorrent-related (BT1@C, BT2@C, and BT3@C) using content-based signatures. The remaining 5 hosts did not match any content-based signature. Their fingerprint cluster summaries (𝑃𝑘𝑡𝑠, 𝑃𝑘𝑡𝑟, 𝐵𝑦𝑡𝑒𝑠, 𝐵𝑦𝑡𝑒𝑟, proto) are presented in Tables XI and XII.

**Table XI: Fingerprint Cluster Summaries for 3 Bittorrent Clients**

| **Trace** | **Fingerprints** |
|-----------|------------------|
| BT1@C | 1 1 109 100, UDP<br>1 1 109 91, UDP<br>1 1 104 178, UDP<br>1 1 319 145, UDP<br>1 1 145 319, UDP<br>1 1 75 75, UDP<br>1 1 65 65, UDP |
| BT2@C | 1 1 145 319, UDP |
| BT3@C | 7 6 1118 1767, TCP |

**Table XII: Fingerprint Cluster Summaries for 5 Potential Skype Clients**

| **Trace** | **Fingerprints** |
|-----------|------------------|
| Skype1@C | 1 1 73 60, UDP<br>1 1 76 60, UDP<br>1 1 75 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP<br>1 1 74 60, UDP<br>1 1 76 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 79 60, UDP<br>1 1 76 60, UDP<br>1 1 73 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP |
| Skype2@C | 1 1 73 60, UDP<br>1 1 76 60, UDP<br>1 1 75 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP<br>1 1 74 60, UDP<br>1 1 76 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 79 60, UDP<br>1 1 76 60, UDP<br>1 1 73 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP |
| Skype3@C | 1 1 73 60, UDP<br>1 1 76 60, UDP<br>1 1 75 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP<br>1 1 74 60, UDP<br>1 1 76 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 79 60, UDP<br>1 1 76 60, UDP<br>1 1 73 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP |
| Skype4@C | 1 1 73 60, UDP<br>1 1 76 60, UDP<br>1 1 75 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP<br>1 1 74 60, UDP<br>1 1 76 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 79 60, UDP<br>1 1 76 60, UDP<br>1 1 73 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP |
| Skype5@C | 1 1 73 60, UDP<br>1 1 76 60, UDP<br>1 1 75 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP<br>1 1 74 60, UDP<br>1 1 76 60, UDP<br>1 1 72 60, UDP<br>1 1 74 60, UDP<br>1 1 79 60, UDP<br>1 1 76 60, UDP<br>1 1 73 60, UDP<br>1 1 74 60, UDP<br>1 1 75 60, UDP |

**Table XIII: Fingerprint Cluster Summaries for P2P Bots**

| **Trace** | **Fingerprints** |
|-----------|------------------|
| Storm1 | 2 2 94 554, UDP<br>2 2 94 1014, UDP<br>2 2 94 278, UDP<br>...<br>4 3 224 170, TCP<br>3 3 186 162, TCP<br>5 4 286 224, TCP<br>... |
| Storm2 | 2 2 94 554, UDP<br>2 2 94 1014, UDP<br>2 2 94 278, UDP<br>...<br>4 3 224 170, TCP<br>3 3 186 162, TCP<br>5 4 285 224, TCP<br>... |
| Waledac1 | 2 2 94 554, UDP<br>2 2 94 1014, UDP<br>2 2 94 278, UDP<br>...<br>4 3 224 170, TCP<br>3 3 186 162, TCP<br>5 4 286 224, TCP<br>... |
| Waledac2 | 2 2 94 554, UDP<br>2 2 94 1014, UDP<br>2 2 94 278, UDP<br>...<br>4 3 224 170, TCP<br>3 3 186 162, TCP<br>5 4 285 224, TCP<br>... |

**Table XIV: Fingerprints for Storm and Waledac**

| **Trace** | **Fingerprints** |
|-----------|------------------|
| Waledac2+BT2@C | 1 1 145 319, UDP (Bittorrent)<br>4 3 224 170, TCP (Waledac)<br>3 3 185 162, TCP (Waledac)<br>1 1 75 75, UDP (Bittorrent)<br>... |
| Storm4+Skype4@C | 2 2 94 554, UDP (Storm)<br>2 2 94 1014, UDP (Storm)<br>1 1 73 60, UDP (Skype)<br>... |

These experimental results demonstrate that our system can effectively identify hosts engaging in P2P communications and profile P2P applications.

##### 2. Detecting P2P Bots

We applied our system to data set 𝐷1 to detect P2P bots. The system identified 34 P2P hosts. By estimating the active time of the P2P application for each of the 34 hosts, our system identified 31 hosts exhibiting persistent P2P communications.

For these 31 hosts, we constructed a hierarchical tree (Figure 5(a)) by evaluating the distance (𝑑𝑖𝑠𝑡(ℎ𝑎, ℎ𝑏) defined in Section III-D) between P2P hosts. P2P bots share the same P2P protocol and have a large overlap of peer IP addresses in fingerprint clusters, resulting in small distances and dense clusters. As shown in Figure 5(a), both Storm and Waledac bots have small distances to each other and form dense clusters.

We cut the tree at Θ𝑏𝑜𝑡 ∗ ℎ𝑒𝑖𝑔ℎ𝑡𝑚𝑎𝑥 = 0.475 (Θ𝑏𝑜𝑡 = 0.95) to identify dense clusters. Consequently, three clusters were identified, and a total of 18 hosts were labeled as suspicious. All 16 P2P bots were detected, resulting in a high detection rate of 100% and a low false positive rate of 0.2% (2/953). The false positives were two Skype clients, likely due to the conservatively configured value of Θ𝑏𝑜𝑡, which is close to 1.

##### 3. Detecting P2P Bots Overlaid with P2P Applications

We applied our detection system to data set 𝐷2 to evaluate the detection accuracy when a bot-compromised host runs a legitimate P2P application. Table IX presents some statistics of the bot traces before and after overlaying legitimate P2P application traces. Some bot-compromised hosts' traffic profiles were significantly distorted after traffic overlaying. For example, after overlaying BT2@C (a real P2P client identified in the college network) traffic to the Waledac2 traffic, the average flow size increased from 11,372 to 348,708, and the number of destination IP addresses increased from 760 to 1,359.

This analysis demonstrates that our system can effectively detect P2P bots even when they are overlaid with legitimate P2P applications.