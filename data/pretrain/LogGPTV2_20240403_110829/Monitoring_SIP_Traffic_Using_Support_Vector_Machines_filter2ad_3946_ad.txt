### Full SPIT Experiment
In the full SPIT (Spam over Internet Telephony) experiment, we instructed 100 bots to register with the proxy. The Spitter then targeted all the bots in four successive campaigns, each with increasing intensity. The results from this full SPIT experiment were slightly better than those from the partial SPIT experiment (as shown in Table 9). Both full and partial SPIT generated similar levels of abnormal traffic.

### Related Works
VoIP (Voice over Internet Protocol) security is a relatively new research domain that has gained prominence over the past few years due to the increasing adoption of VoIP technology by both enterprises and individuals. Research on combating SPIT and DoS (Denial of Service) attacks has been extensive. 

Quittek et al. [10] employed hidden Turing tests and compared the resulting patterns with typical human communication patterns. Passing these tests required significant resource consumption on the SPIT generation side. In [11], the authors proposed a call rank mechanism based on call duration, social networks, and global reputation to filter SPIT calls. Other approaches include a progressive and multi-level grey level algorithm [12] and incorporating active stack fingerprinting [13].

The authors of [14] designed application and transport sensors to protect enterprise networks from VoIP DoS attacks, building on previous work on TCP DoS protection and studying various recovery algorithms. In [15], the original state machine of SIP transactions was modified to detect transaction anomalies and apply different thresholds to identify flooding attacks. Sengar et al. [16] used the Hellinger distance between learning and testing periods to detect TCP SYN, SIP INVITE, and RTP floods, demonstrating good performance. Many papers in the community have focused on generic intrusion detection methods [17,18,19] without delving into the fine-tuned session, dialog, and transaction-related parameters found in SIP. Machine learning techniques have been widely leveraged in security applications, and readers are referred to [20] and [21] for an overview.

The closest work to ours is the study by [22], where the authors presented a traffic behavior profiling methodology and demonstrated its applications in problem diagnosis and anomaly detection. Our work, however, is more oriented towards attack detection and classification rather than proposing a global and multi-level profiling methodology. We have previously addressed VoIP-specific event correlation and honeypots in [23] and [24], but these works did not cover SIP-level monitoring.

### Conclusion and Future Work
As VoIP attacks continue to evolve and increase in impact on both users and infrastructure, there is a growing need for enhanced monitoring and security management. In this paper, we propose an online monitoring methodology based on support vector machines (SVMs). Our approach involves segmenting ongoing SIP (Session Initiation Protocol) traffic into small slices and extracting a vector of defined features characterizing each slice. These vectors are then fed into an SVM for classification based on a learning model. A deterministic event correlator is used to raise alarms when suspicious or abnormal situations are detected.

We validated our approach through offline tests using real-world traces and attacks generated in our customized testbed and inserted into normal traffic. The results showed real-time performance and high accuracy in detecting flooding and SPIT attacks, especially when combined with efficient event correlation rules. Detection of other types of attacks is part of our future work.

Unsupervised learning techniques are appealing because they do not require a priori knowledge of the traffic and can detect new and previously unknown attacks. We are currently considering redefining and reordering our set of features based on different feature selection algorithms. Additionally, we plan to extend our current event correlation and filtering algorithm to reveal attack strategies and improve intrusion prevention and detection accuracy.

### Acknowledgment
We would like to thank Mr. Dorgham Sisalem and Mr. Sven Ehlert from the Fraunhofer Institute in Berlin for their valuable comments and feedback on the analysis of SIP traces.

### References
1. VoIPSA: VoIP Security and Privacy Threat Taxonomy. Public Release 1.0 (October 2005), <http://www.voipsa.org/Activities/VOIPSA_Threat_Taxonomy_0.1.pdf>
2. Endler, D., Collier, M.: Hacking Exposed VoIP: Voice Over IP Security Secrets and Solutions. McGraw-Hill Professional Publishing, New York (2007)
3. Vapnik, V.N.: The Nature of Statistical Learning Theory. Springer, New York (1995)
4. Vapnik, V.: Statistical Learning Theory, New York (1998)
5. Guyon, I., Weston, J., Barnhill, S., Vapnik, V.: Gene Selection for Cancer Classification Using Support Vector Machines. Mach. Learn. 46(1-3), 389–422 (2002)
6. Romano, R.A., Aragon, C.R., Ding, C.: Supernova Recognition Using Support Vector Machines. In: ICMLA 2006: Proceedings of the 5th International Conference on Machine Learning and Applications, Washington, DC, USA, pp. 77–82. IEEE Computer Society, Los Alamitos (2006)
7. Mukkamala, S., Janoski, G., Sung, A.: Intrusion Detection: Support Vector Machines and Neural Networks. The IEEE Computer Society Student Magazine 10(2) (2002)
8. Chang, C.C., Lin, C.J.: LIBSVM: A Library for Support Vector Machines (2001), <http://www.csie.ntu.edu.tw/~cjlin/libsvm>
9. Abdelnur, H.J., State, R., Festor, O.: KiF: A Stateful SIP Fuzzer. In: IPTComm 2007: Proceedings of the 1st International Conference on Principles, Systems, and Applications of IP Telecommunications, pp. 47–56. ACM, New York (2007)
10. Quittek, J., Niccolini, S., Tartarelli, S., Stiemerling, M., Brunner, M., Ewald, T.: Detecting SPIT Calls by Checking Communication Patterns. In: IEEE International Conference on Communications (ICC 2007) (June 2007)
11. Balasubramaniyan, V.A., Ahamad, M., Park, H.: CallRank: Combating SPIT Using Call Duration, Social Networks, and Global Reputation. In: Fourth Conference on Email and Anti-Spam (CEAS 2007). Mountain View, California (2007)
12. Shin, D., Shim, C.: Progressive Multi Gray-Leveling: A Voice Spam Protection Algorithm. IEEE Network 20
13. Yan, H., Sripanidkulchai, K., Zhang, H., Shae, Z.Y., Saha, D.: Incorporating Active Fingerprinting into SPIT Prevention Systems. In: Third Annual Security Workshop (VSW 2006), June 2006, ACM Press, New York (2006)
14. Reynolds, B., Ghosal, D.: Secure IP Telephony Using Multi-layered Protection. In: Proceedings of The 10th Annual Network and Distributed System Security Symposium, San Diego, CA, USA (February 2003)
15. Chen, E.: Detecting DoS Attacks on SIP Systems. In: Proceedings of 1st IEEE Workshop on VoIP Management and Security, San Diego, CA, USA, April 2006, pp. 53–58 (2006)
16. Sengar, H., Wang, H., Wijesekera, D., Jajodia, S.: Detecting VoIP Floods Using the Hellinger Distance. Transactions on Parallel and Distributed Systems (accepted for future publication, September 2007)
17. Valdes, A., Skinner, K.: Adaptive, Model-Based Monitoring for Cyber Attack Detection. In: Debar, H., Mé, L., Wu, S.F. (eds.) RAID 2000. LNCS, vol. 1907, pp. 80–92. Springer, Heidelberg (2000)
18. Denning, D.E.: An Intrusion-Detection Model. In: IEEE Symposium on Security and Privacy, April 1986, pp. 118–133. IEEE Computer Society Press, Los Alamitos (1986)
19. Krügel, C., Toth, T., Kirda, E.: Service-Specific Anomaly Detection for Network Intrusion Detection. In: SAC 2002: Proceedings of the 2002 ACM Symposium on Applied Computing, pp. 201–208. ACM Press, New York (2002)
20. Ning, P., Jajodia, S.: Intrusion Detection in Distributed Systems: An Abstraction-Based Approach. Springer, Heidelberg (2003)
21. Maloof, M.: Machine Learning and Data Mining for Computer Security: Methods and Applications. Springer, Heidelberg (2005)
22. Kang, H.J., Zhang, Z.L., Ranjan, S., Nucci, A.: SIP-Based VoIP Traffic Behavior Profiling and Its Applications. In: MineNet 2007: Proceedings of the 3rd Annual ACM Workshop on Mining Network Data, pp. 39–44. ACM, New York (2007)
23. Nassar, M., State, R., Festor, O.: Intrusion Detection Mechanisms for VoIP Applications. In: Third Annual Security Workshop (VSW 2006), June 2006. ACM Press, New York (2006)
24. Nassar, M., State, R., Festor, O.: VoIP Honeypot Architecture. In: Proc. of 10th IEEE/IFIP Symposium on Integrated Management. (June 2007)

### Appendix: List of Features

| Number | Name | Description |
|--------|------|-------------|
| 1 | Duration | Total time of the slice |
| 2 | NbReq | # of requests / Total # of messages |
| 3 | NbResp | # of responses / Total # of messages |
| 4 | NbSdp | # of messages carrying SDP / Total # of messages |
| 5 | AvInterReq | Average inter-arrival of requests |
| 6 | AvInterResp | Average inter-arrival of responses |
| 7 | AvInterSdp | Average inter-arrival of messages carrying SDP bodies |
| 8 | NbSess | # of different Call-IDs |
| 9 | AvDuration | Average duration of a Call-ID |
| 10 | NbSenders | # of different senders / Total # of Call-IDs |
| 11 | NbReceivers | # of different receivers / Total # of Call-IDs |
| 12 | AvMsg | Average # of messages per Call-ID |
| 13 | NbNOTACALL | # of NOTACALL / Total # of Call-IDs |
| 14 | NbCALLSET | # of CALLSET / Total # of Call-IDs |
| 15 | NbCANCELED | # of CANCELED / Total # of Call-IDs |
| 16 | NbREJECTED | # of REJECTED / Total # of Call-IDs |
| 17 | NbINCALL | # of INCALL / Total # of Call-IDs |
| 18 | NbCOMPLETED | # of COMPLETED / Total # of Call-IDs |
| 19 | NbRESIDUE | # of RESIDUE / Total # of Call-IDs |
| 20 | NbInv | # of INVITE / Total # of requests |
| 21 | NbReg | # of REGISTER / Total # of requests |
| 22 | NbBye | # of BYE / Total # of requests |
| 23 | NbAck | # of ACK / Total # of requests |
| 24 | NbCan | # of CANCEL / Total # of requests |
| 25 | NbOpt | # of OPTIONS / Total # of requests |
| 26 | NbRef | # of REFER / Total # of requests |
| 27 | NbSub | # of SUBSCRIBE / Total # of requests |
| 28 | NbNot | # of NOTIFY / Total # of requests |
| 29 | NbMes | # of MESSAGE / Total # of requests |
| 30 | NbInf | # of INFO / Total # of requests |
| 31 | NbPra | # of PRACK / Total # of requests |
| 32 | NbUpd | # of UPDATE / Total # of requests |
| 33 | Nb1xx | # of Informational responses / Total # of responses |
| 34 | Nb2xx | # of Success responses / Total # of responses |
| 35 | Nb3xx | # of Redirection responses / Total # of responses |
| 36 | Nb4xx | # of Client error responses / Total # of responses |
| 37 | Nb5xx | # of Server error responses / Total # of responses |
| 38 | Nb6xx | # of Global error responses / Total # of responses |

This revised version aims to provide a clear, coherent, and professional presentation of the text.