[20] J. Huang, N. Borges, S. Bugiel, and M. Backes. 2019. Up-To-Crash: Evaluating
Third-Party Library Updatability on Android. In Proc. of EuroS&P’19. 15–30.
[21] Brittany Johnson, Yoonki Song, Emerson Murphy-Hill, and Robert Bowdidge.
2013. Why don’t software developers use static analysis tools to find bugs?. In
Proc. of ICSE’13. IEEE Press, 672–681.
[22] Riivo Kikas, Georgios Gousios, Marlon Dumas, and Dietmar Pfahl. 2017. Structure
and evolution of package dependency networks. In Proc. of MSR’17. IEEE, 102–
112.
[23] Andrew J Ko, Robert DeLine, and Gina Venolia. 2007.
Information needs in
collocated software development teams. In Proc. of ICSE’07. IEEE Press, 344–353.
[24] Paul R Kroeger. 2005. Analyzing grammar: An introduction. Cambridge University
[25] Raula Gaikovina Kula, Daniel M. German, Ali Ouni, Takashi Ishio, and Katsuro
Inoue. 2017. Do developers update their library dependencies? Emp. Soft. Eng.
Journ. (11 May 2017). https://doi.org/10.1007/s10664-017-9521-5
[26] Tobias Lauinger, Abdelberi Chaabane, Sajjad Arshad, William Robertson, Christo
Wilson, and Engin Kirda. 2017. Thou Shalt Not Depend on Me: Analysing the
Use of Outdated JavaScript Libraries on the Web. In Proc. of NDSS’17.
[27] Lucas Layman, Madeline Diep, Meiyappan Nagappan, Janice Singer, Robert
Deline, and Gina Venolia. 2013. Debugging revisited: Toward understanding the
debugging needs of contemporary software developers. In Proc. of ESEM’13. IEEE,
383–392.
[28] SS Jeremy Long. 2015. Owasp dependency check.
Press.
[29] Wanwangying Ma, Lin Chen, Xiangyu Zhang, Yuming Zhou, and Baowen Xu.
2017. How do developers fix cross-project correlated bugs? A case study on the
GitHub scientific Python ecosystem. In Proc. of ICSE’17. IEEE, 381–392.
[30] Mark Mason. 2010. Sample size and saturation in PhD studies using qualitative
interviews. In Forum qualitative Sozialforschung/Forum: qualitative social research,
Vol. 11.
[31] Samim Mirhosseini and Chris Parnin. 2017. Can automated pull requests encour-
age software developers to upgrade out-of-date dependencies?. In Proc. of ASE’17.
IEEE Press, 84–94.
[32] Amantia Pano, Daniel Graziotin, and Pekka Abrahamsson. 2018. Factors and
actors leading to the adoption of a JavaScript framework. Empirical Software
Engineering (2018), 1–32.
[33] Ivan Pashchenko, Henrik Plate, Serena Elisa Ponta, Antonino Sabetta, and Fabio
Massacci. 2018. Vulnerable Open Source Dependencies: Counting Those That
Matter. In Proc. of ESEM’18.
[34] Shaun Phillips, Guenther Ruhe, and Jonathan Sillito. 2012. Information needs for
integration decisions in the release process of large-scale parallel development.
In Proc. of CSCW’12. ACM, 1371–1380.
[35] Henrik Plate, Serena Elisa Ponta, and Antonino Sabetta. 2015. Impact assessment
for vulnerabilities in open-source software libraries. In Proc. of ICSME’15. IEEE,
411–420.
[36] Serena Elisa Ponta, Henrik Plate, and Antonino Sabetta. 2018. Beyond Metadata:
Code-centric and Usage-based Analysis of Known Vulnerabilities in Open-source
Software. In Proc. of ICSME’18.
[37] Johnny Saldaña. 2015. The coding manual for qualitative researchers. Sage.
[38] Khaironi Y Sharif, Michael English, Nour Ali, Chris Exton, JJ Collins, and Jim
Buckley. 2015. An empirically-based characterization and quantification of infor-
mation seeking through mailing lists during open source developers’ software
evolution. Information and Software Technology 57 (2015), 77–94.
[39] Jonathan Sillito, Gail C Murphy, and Kris De Volder. 2008. Asking and answering
questions during a programming change task. IEEE Transactions on Software
Engineering 34, 4 (2008), 434–451.
[40] Anselm Strauss and Juliet Corbin. 1990. Basics of qualitative research. Sage.
[41] Hataichanok Unphon and Yvonne Dittrich. 2010. Software architecture awareness
in long-term software product evolution. Journal of Systems and Software 83, 11
(2010), 2211–2226.
[42] Dirk van der Linden, Mark Levine, and John Towse. 2020. Schrödinger’s Security:
Opening the Box on App Developers’ Security Rationale. In Proc. of ICSE’20.
IEEE.
[43] Carmine Vassallo, Sebastiano Panichella, Fabio Palomba, Sebastian Proksch, Andy
Zaidman, and Harald C Gall. 2018. Context is king: The developer perspective
on the usage of static analysis tools. In Proc. of SANER’18. IEEE, 38–49.
[44] Erik Wittern, Philippe Suter, and Shriram Rajagopalan. 2016. A look at the
dynamics of the JavaScript package ecosystem. In Proc. of MSR’16. IEEE, 351–
361.
[45] Aiko Yamashita and Leon Moonen. 2012. Do code smells reflect important
maintainability aspects?. In Proc. of ICSME’12. IEEE, 306–315.
[46] Robert K Yin. 2015. Qualitative research from start to finish. Guilford Publications.
A APPENDIX – STATE OF THE ART
COMPARISON
Table 7 presents a summary of qualitative studies of developers’
attitudes and practices. We identify the following sources of infor-
mation used by the selected studies: interviews, surveys, mailing
lists, observations of developers’ work process. For each study we
report the number of participants and whether the study provided
the insights for the code groups identified in Section 2.
B APPENDIX – FAILED ATTEMPT OF THE
INTERVIEWEE SELECTION
Interviewee selection – failed attempt. First, to invite develop-
ers for the interviews, we decided to reach developers of the most
popular open-source Java projects. For this purpose, we created
a search on Github by the keyword “Java” and selected the top
20 most starred projects (Table 8). Then we used our tool for the
dependency study (See §4.1 for details) to generate dependency
analysis reports for those projects. We sent these reports to the
main contributors (or owners) of the selected projects and asked
them to provide their feedback on the reports as well as to dedicate
Session 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1525Tool/Technique validation studies
[21]
I
20
[15]
I
14
[43]
S+I
42+11
[18]
I
6
[4]
I
6
[11]
Type
S
#Partic.
203
Deps
✓
Lang
✓
Attitude
✓
Context
Function. ✓
Context
✓
Security
Issues
Operation ✓
Process
✓
[16]
S
14
✓
✓
✓
✓
✓
[10]
O+I
6,8+15
Dependency studies
[7]
I
28
✓
✓
✓
[29]
S
116
✓
✓
✓
[6]
I
7
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
[9]
I
5
✓
✓
✓
✓
✓
[25]
M
16
✓
✓
✓
✓
✓
[31]
S
62
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
[32]
I
18
✓
✓
✓
✓
Information needs and decision making
[45]
[38]
[41]
M
I
O+I
ND 15
6+6
✓
[39]
O
25
[27]
I
15
[34]
I
7
[23]
O
17
[5]
I
15
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
[42] Ours
S
274
[3]
S
123
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
I
25
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Table 7: Summary of qualitative studies about developers’ attitudes and practice
The table presents a summary of qualitative studies of developers’ attitudes and practices by interviews (I), surveys (S), mailing lists (M), observations of developers’ work process (O). For
.
each study we report the number of participants and whether the study provided the insights for the code groups used in this study
✓
✓
✓
Table 8: Top 20 most starred projects from Github
✓
url
https://github.com/square/retrofit
https://github.com/square/okhttp
https://github.com/google/guava