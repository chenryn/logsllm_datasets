### References

1. **J. Huang, N. Borges, S. Bugiel, and M. Backes (2019).** Up-To-Crash: Evaluating Third-Party Library Updatability on Android. *In Proc. of EuroS&P’19*, 15–30.
   
2. **Brittany Johnson, Yoonki Song, Emerson Murphy-Hill, and Robert Bowdidge (2013).** Why Don’t Software Developers Use Static Analysis Tools to Find Bugs? *In Proc. of ICSE’13*. IEEE Press, 672–681.

3. **Riivo Kikas, Georgios Gousios, Marlon Dumas, and Dietmar Pfahl (2017).** Structure and Evolution of Package Dependency Networks. *In Proc. of MSR’17*. IEEE, 102–112.

4. **Andrew J. Ko, Robert DeLine, and Gina Venolia (2007).** Information Needs in Collocated Software Development Teams. *In Proc. of ICSE’07*. IEEE Press, 344–353.

5. **Paul R. Kroeger (2005).** Analyzing Grammar: An Introduction. Cambridge University Press.

6. **Raula Gaikovina Kula, Daniel M. German, Ali Ouni, Takashi Ishio, and Katsuro Inoue (2017).** Do Developers Update Their Library Dependencies? *Empirical Software Engineering Journal* (11 May 2017). https://doi.org/10.1007/s10664-017-9521-5

7. **Tobias Lauinger, Abdelberi Chaabane, Sajjad Arshad, William Robertson, Christo Wilson, and Engin Kirda (2017).** Thou Shalt Not Depend on Me: Analysing the Use of Outdated JavaScript Libraries on the Web. *In Proc. of NDSS’17*.

8. **Lucas Layman, Madeline Diep, Meiyappan Nagappan, Janice Singer, Robert DeLine, and Gina Venolia (2013).** Debugging Revisited: Toward Understanding the Debugging Needs of Contemporary Software Developers. *In Proc. of ESEM’13*. IEEE, 383–392.

9. **Jeremy Long (2015).** OWASP Dependency Check. 

10. **Wanwangying Ma, Lin Chen, Xiangyu Zhang, Yuming Zhou, and Baowen Xu (2017).** How Do Developers Fix Cross-Project Correlated Bugs? A Case Study on the GitHub Scientific Python Ecosystem. *In Proc. of ICSE’17*. IEEE, 381–392.

11. **Mark Mason (2010).** Sample Size and Saturation in PhD Studies Using Qualitative Interviews. *Forum qualitative Sozialforschung/Forum: qualitative social research*, Vol. 11.

12. **Samim Mirhosseini and Chris Parnin (2017).** Can Automated Pull Requests Encourage Software Developers to Upgrade Out-of-Date Dependencies? *In Proc. of ASE’17*. IEEE Press, 84–94.

13. **Amantia Pano, Daniel Graziotin, and Pekka Abrahamsson (2018).** Factors and Actors Leading to the Adoption of a JavaScript Framework. *Empirical Software Engineering (2018)*, 1–32.

14. **Ivan Pashchenko, Henrik Plate, Serena Elisa Ponta, Antonino Sabetta, and Fabio Massacci (2018).** Vulnerable Open Source Dependencies: Counting Those That Matter. *In Proc. of ESEM’18*.

15. **Shaun Phillips, Guenther Ruhe, and Jonathan Sillito (2012).** Information Needs for Integration Decisions in the Release Process of Large-Scale Parallel Development. *In Proc. of CSCW’12*. ACM, 1371–1380.

16. **Henrik Plate, Serena Elisa Ponta, and Antonino Sabetta (2015).** Impact Assessment for Vulnerabilities in Open-Source Software Libraries. *In Proc. of ICSME’15*. IEEE, 411–420.

17. **Serena Elisa Ponta, Henrik Plate, and Antonino Sabetta (2018).** Beyond Metadata: Code-Centric and Usage-Based Analysis of Known Vulnerabilities in Open-Source Software. *In Proc. of ICSME’18*.

18. **Johnny Saldaña (2015).** The Coding Manual for Qualitative Researchers. Sage.

19. **Khaironi Y. Sharif, Michael English, Nour Ali, Chris Exton, JJ Collins, and Jim Buckley (2015).** An Empirically-Based Characterization and Quantification of Information Seeking Through Mailing Lists During Open Source Developers’ Software Evolution. *Information and Software Technology 57 (2015)*, 77–94.

20. **Jonathan Sillito, Gail C. Murphy, and Kris De Volder (2008).** Asking and Answering Questions During a Programming Change Task. *IEEE Transactions on Software Engineering 34, 4 (2008)*, 434–451.

21. **Anselm Strauss and Juliet Corbin (1990).** Basics of Qualitative Research. Sage.

22. **Hataichanok Unphon and Yvonne Dittrich (2010).** Software Architecture Awareness in Long-Term Software Product Evolution. *Journal of Systems and Software 83, 11 (2010)*, 2211–2226.

23. **Dirk van der Linden, Mark Levine, and John Towse (2020).** Schrödinger’s Security: Opening the Box on App Developers’ Security Rationale. *In Proc. of ICSE’20*. IEEE.

24. **Carmine Vassallo, Sebastiano Panichella, Fabio Palomba, Sebastian Proksch, Andy Zaidman, and Harald C. Gall (2018).** Context is King: The Developer Perspective on the Usage of Static Analysis Tools. *In Proc. of SANER’18*. IEEE, 38–49.

25. **Erik Wittern, Philippe Suter, and Shriram Rajagopalan (2016).** A Look at the Dynamics of the JavaScript Package Ecosystem. *In Proc. of MSR’16*. IEEE, 351–361.

26. **Aiko Yamashita and Leon Moonen (2012).** Do Code Smells Reflect Important Maintainability Aspects? *In Proc. of ICSME’12*. IEEE, 306–315.

27. **Robert K. Yin (2015).** Qualitative Research from Start to Finish. Guilford Publications.

### Appendix – State of the Art Comparison

Table 7 summarizes qualitative studies of developers’ attitudes and practices. We identify the following sources of information used by the selected studies: interviews (I), surveys (S), mailing lists (M), and observations of developers’ work processes (O). For each study, we report the number of participants and whether the study provided insights for the code groups identified in Section 2.

| Reference | Type | #Participants | Insights Provided |
|-----------|------|---------------|-------------------|
| [21]      | I    | 20            | ✓                 |
| [15]      | I    | 14            | ✓                 |
| [43]      | S+I  | 42+11         | ✓                 |
| [18]      | I    | 6             | ✓                 |
| [4]       | I    | 6             | ✓                 |
| [11]      | S    | 203           | ✓                 |
| [16]      | S    | 14            | ✓                 |
| [10]      | O+I  | 6,8+15        | ✓                 |
| [7]       | I    | 28            | ✓                 |
| [29]      | S    | 116           | ✓                 |
| [6]       | I    | 7             | ✓                 |
| [9]       | I    | 5             | ✓                 |
| [25]      | M    | 16            | ✓                 |
| [31]      | S    | 62            | ✓                 |
| [32]      | I    | 18            | ✓                 |
| [45]      | M    | 15            | ✓                 |
| [38]      | I    | 6+6           | ✓                 |
| [41]      | O+I  | 6+6           | ✓                 |
| [39]      | O    | 25            | ✓                 |
| [27]      | I    | 15            | ✓                 |
| [34]      | I    | 7             | ✓                 |
| [23]      | O    | 17            | ✓                 |
| [5]       | I    | 15            | ✓                 |
| [42]      | Ours | S             | 274               |
| [3]       | S    | 123           | ✓                 |
| [25]      | I    | 25            | ✓                 |

### Appendix – Failed Attempt of the Interviewee Selection

**Interviewee Selection – Failed Attempt:**

To invite developers for the interviews, we initially decided to reach out to the developers of the most popular open-source Java projects. For this purpose, we conducted a search on GitHub using the keyword "Java" and selected the top 20 most starred projects (see Table 8). We then used our tool for dependency analysis (See §4.1 for details) to generate dependency reports for these projects. These reports were sent to the main contributors or owners of the selected projects, asking them to provide feedback on the reports and to dedicate time for an interview.

| Project URL | Stars |
|-------------|-------|
| https://github.com/square/retrofit | 35,000+ |
| https://github.com/square/okhttp   | 30,000+ |
| https://github.com/google/guava   | 25,000+ |

This approach did not yield the desired number of responses, leading us to reconsider our selection strategy.