# Investigative Reversing 4
Forensics, 400 points
## Description:
> We have recovered a binary and 5 images: image01, image02, image03, image04, image05. See what you can make of it. There should be a flag somewhere.
## Solution: 
This is the follow-up for [Investigative Reversing 3](Investigative_Reversing_3.md).
Again, let's check the binary with Ghidra:
```c
undefined8 main(void)
{
  size_t sVar1;
  undefined4 local_4c;
  undefined local_48 [52];
  int local_14;
  FILE *flag_file;
  flag = local_48;
  local_4c = 0;
  flag_index = &local_4c;
  flag_file = fopen("flag.txt","r");
  if (flag_file == (FILE *)0x0) {
    puts("No flag found, please make sure this is run on the server");
  }
  sVar1 = fread(flag,0x32,1,flag_file);
  local_14 = (int)sVar1;
  if (local_14 > ((byte)param_1 & 0x1f));
  }
  return (ulong)(param_3 & 0xfe | local_20 & 1);
}
```
In this case the data is encoded in 5 files: `Item05_cp.bmp` to `Item01_cp.bmp`. In each case, the program jumps to offset `2019` and LSB-encodes a byte from the flag in 8 bytes from the original file, then copies another 4 bytes from the original file. Every file contains 10 bytes from the flag.
For example:
```console
root@kali:/media/sf_CTFs/pico/Investigative_Reversing_4# xxd -g 1 -s $((2019 - 32)) -l $((10*8 + 48 + 64)) Item05_cp.bmp
000007c3: e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8  ................
000007d3: e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8  ................
000007e3: e8 e8 e8 e8 e9 e9 e9 e8 e8 e8 e8 e8 e9 e8 e8 e9  ................
000007f3: e8 e9 e9 e8 e8 e8 e8 e8 e9 e9 e8 e8 e8 e9 e9 4e  ...............N
00000803: 4f 4f 4f 4f e9 e9 e9 e9 e8 e9 e9 e8 e8 e8 e8 e8  OOOO............
00000813: e9 e9 e8 e8 e8 e8 e9 e8 e8 e8 e8 e8 e8 e8 e9 e8  ................
00000823: e9 e8 e9 e8 e8 e8 e8 e8 e8 e9 e9 e8 e8 e8 e9 e8  ................
00000833: e8 e8 e8 e8 e9 e9 e8 e9 e9 e9 e9 e8 e8 e8 e8 e8  ................
00000843: e8 e9 e9 e9 e8 e8 e9 e8 e8 e8 e8 e8 e9 e8 e8 e8  ................
00000853: e9 e9 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8  ................
00000863: e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8  ................
00000873: e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8 e8  ................
```
Therefore, to extract the flag, we use the following script:
```python
from pwn import *
bin_str = ""
for i in range(5, 0, -1):
    with open("Item0{}_cp.bmp".format(i), "rb") as b:
        b.seek(2019)
        for j in range(50):
            if ((j % 5) == 0):
                for k in range(8):
                    bin_str += str(ord(b.read(1)) & 1)
            else:
                b.read(1)
char_str = unbits(bin_str, endian = 'little')
print char_str
```
Output:
```console
root@kali:/media/sf_CTFs/pico/Investigative_Reversing_4# python solve.py
picoCTF{N1c3_R3ver51ng_5k1115_0000000000023ef6902}
```