User: I am running a custom Python 2.7.3 application on CherryPy in Linux. When I used a service script in /etc/init.d/ to start or stop the service, I encountered a Segmentation Fault (SIGSEGV). Strangely, I did not receive a SIGSEGV if I ran the start or stop command manually from the shell, using "python /path/to/file.py --stop". The service script executes the same command.
After some debugging, by chance, I discovered that my /tmp was mounted with a "noexec" option. I removed the "noexec" option and the application was able to start and stop via the service scripts without any segmentation faults.
When I first encountered the issue, I ran strace and generated a core dump. Nothing from either tool gave me any indication that /tmp was the culprit. My question is this: How could I have used strace or gdb to help me identify that "noexec" on /tmp was causing the segmentation faults?
Here is some output from gdb when analyzing the core dump:


    (gdb) bt full
    #0  PyObject_Malloc (nbytes=4) at Objects/obmalloc.c:788
            bp = 0x7f6b0fd1c6e800 \Address 0x7f6b0fd1c6e800 out of bounds\
            pool = 0x7f6b0fd1c000
            next = \value optimized out\
            size = 0
    #1  0x00007f6b0f7fd8e6 in _PyUnicode_New (length=1) at Objects/unicodeobject.c:345
            new_size = 4
            unicode = 0x3873480
    #2  0x00007f6b0f7fdd4e in PyUnicodeUCS2_FromUnicode (u=0x38367cc, size=)
        at Objects/unicodeobject.c:461
            unicode = \value optimized out\


(There is a lot more output, this is just the first few lines)
Here is some output from strace on the failure:


    3046  open("/usr/local/python2.7/lib/python2.7/site-packages/oauthlib/common.py", O_RDONLY) = 9
    3046  fstat(9, {st_mode=S_IFREG|0644, st_size=13310, ...}) = 0
    3046  open("/usr/local/python2.7/lib/python2.7/site-packages/oauthlib/common.pyc", O_RDONLY) = 10
    3046  fstat(10, {st_mode=S_IFREG|0644, st_size=16043, ...}) = 0
    3046  mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fbc9ff9d000
    3046  read(10, "\3\363\r\n}\321\322Tc\0\0\0\0\0\0\0\0\5\0\0\0@@\2\0sd\2\0\0d\0"..., 4096) = 4096
    3046  fstat(10, {st_mode=S_IFREG|0644, st_size=16043, ...}) = 0
    3046  read(10, "\0\0\0C@\2\0s\330\0\0\0t\0\0|\0\0t\1\0\203\2\0s\36\0t\0\0|\0"..., 8192) = 8192
    3046  read(10, "thon2.7/site-packages/oauthlib/c"..., 4096) = 3755
    3046  read(10, "", 4096)                = 0
    3046  close(10)                         = 0
    3046  munmap(0x7fbc9ff9d000, 4096)      = 0
    3046  --- SIGSEGV (Segmentation fault) @ 0 (0) ---


After fixing the problem, here's a snippet from strace, from the same point where it tries to load oauthlib/common.pyc - notice that the only difference appears to be a brk() before munmap():

    3416  open("/usr/local/python2.7/lib/python2.7/site-packages/oauthlib/common.pyc", O_RDONLY) = 10
    3416  fstat(10, {st_mode=S_IFREG|0644, st_size=16043, ...}) = 0
    3416  mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f5791f2c000
    3416  read(10, "\3\363\r\n}\321\322Tc\0\0\0\0\0\0\0\0\5\0\0\0@@\2\0sd\2\0\0d\0"..., 4096) = 4096
    3416  fstat(10, {st_mode=S_IFREG|0644, st_size=16043, ...}) = 0
    3416  read(10, "\0\0\0C@\2\0s\330\0\0\0t\0\0|\0\0t\1\0\203\2\0s\36\0t\0\0|\0"..., 8192) = 8192
    3416  read(10, "thon2.7/site-packages/oauthlib/c"..., 4096) = 3755
    3416  read(10, "", 4096)                = 0
    3416  brk(0x372f000)                    = 0x372f000
    3416  close(10)                         = 0
    3416  munmap(0x7f5791f2c000, 4096)      = 0
    3416  close(9)                          = 0


What information can help me point the blame at /tmp's mount options?
Assistant: For those who would have the same problem as I had and find this page:
My CherryPy server.py ran fine on my Win10 system on python3.8 but failed with segmentation fault on my Linux system which had python3.6.1.
Switching to python3.8 on Linux solved my problem.