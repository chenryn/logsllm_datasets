:::
RHEL 系统角色是 Ansible 角色和模块的集合,可为远程管理多个 RHEL
系统提供一致的配置界面。指标系统角色为本地系统配置性能分析服务，并选择性地包含要由本地系统监控的远程系统列表。借助
metrics 系统角色，您可以使用 `pcp`{.literal}
来监控系统性能，而无需单独配置`pcp`{.literal}，因为 playbook 处理
`pcp`{.literal} 设置和部署。
::: table
[]{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#idm140139422919280}
**表 15.1. 指标系统角色变量**
::: table-contents
  角色变量                  描述                                                                                                                           用法示例
  ------------------------- ------------------------------------------------------------------------------------------------------------------------------ ----------------------------------------------------------------------------------------
  metrics_monitored_hosts   目标主机要分析的远程主机列表。这些主机将在目标主机上记录指标，以确保每个主机的 `/var/log`{.literal} 中有足够的磁盘空间。       `metrics_monitored_hosts: ["webserver.example.com", "database.example.com"]`{.literal}
  metrics_retention_days    在删除前配置性能数据保留的天数。                                                                                               `metrics_retention_days: 14`{.literal}
  metrics_graph_service     一个布尔值标记，允许主机设置有服务通过 `pcp`{.literal} 和 `grafana`{.literal} 进行性能数据视觉化。默认设置为 false。           `metrics_graph_service: false`{.literal}
  metrics_query_service     一个布尔值标记，允许主机设置时间序列查询服务，以便通过 `redis`{.literal} 查询记录的 `pcp`{.literal} 指标。默认设置为 false。   `metrics_query_service: false`{.literal}
  metrics_provider          指定要用于提供指标的指标收集器。目前, `pcp`{.literal} 是唯一支持的指标提供程序。                                               `metrics_provider: "pcp"`{.literal}
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
有关使用的参数 `metrics_connections`{.literal} 以及有关 metrics
系统角色的额外信息，请查看
`/usr/share/ansible/roles/rhel-system-roles.metrics/README.md`{.literal}
文件。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-metrics-role-to-monitor-your-local-system-with-visualization_monitoring-performance-using-rhel-system-roles}使用指标系统角色以可视化方式监控本地系统 {.title}
:::
此流程描述了如何在同时置备数据视觉化时使用 metrics RHEL
系统角色监控您的本地系统 `grafana`{.literal}。
::: itemizedlist
**先决条件**
-   您已在要监控的机器上安装了 Red Hat Ansible Engine。
-   您需要在要监控的机器中安装 `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  通过 `localhost`{.literal} 将以下内容添加到清单中，在
    `/etc/ansible/hosts`{.literal} Ansible 清单中配置：
    ``` screen
    localhost ansible_connection=local
    ```
2.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: localhost
      vars:
        metrics_graph_service: yes
      roles:
        - rhel-system-roles.metrics
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    因为 `metrics_graph_service`{.literal} 布尔值被设置为 value=\"yes\",
    `grafana`{.literal} 它会被自动安装并置备并将 `pcp`{.literal}
    添加为数据源。
    :::
4.  要查看您机器上收集的指标的视觉化，请访问 [Grafana
    `grafana`{.literal} Web UI 中的
    Web](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#accessing-the-grafana-web-UI_setting-up-graphical-representation-of-pcp-metrics){.link}
    界面。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-metrics-role-to-monitor-a-fleet-of-machines-remotely_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色设置监控其自身的独立系统 {.title}
:::
此流程描述了如何使用 metrics 系统角色设置一组机器来监控其自身。
::: itemizedlist
**先决条件**
-   您已在要用来运行 playbook 的机器上安装了 Red Hat Ansible Engine。
-   已安装要用来运行 playbook 的机器上的 `rhel-system-roles`{.literal}
    软件包。
:::
::: orderedlist
**流程**
1.  将您要通过 playbook 监控的机器的名称或 IP 添加到
    `/etc/ansible/hosts`{.literal} Ansible
    清单文件中，并使用括号括起的标识组名称：
    ``` screen
    [remotes]
    webserver.example.com
    database.example.com
    ```
2.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: remotes
      vars:
        metrics_retention_days: 0
      roles:
        - rhel-system-roles.metrics
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-metrics-role-to-monitor-a-fleet-of-machines-centrally-via-your-local-machine_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色通过本地机器集中监控机器的数量 {.title}
:::
此流程描述了如何使用 metrics
系统角色设置本地机器来集中监控机器数量，同时通过 `grafana`{.literal}
进行数据视觉化，通过 `redis`{.literal} 查询数据。
::: itemizedlist
**先决条件**
-   您已在要用来运行 playbook 的机器上安装了 Red Hat Ansible Engine。
-   已安装要用来运行 playbook 的机器上的 `rhel-system-roles`{.literal}
    软件包。
:::
::: orderedlist
**流程**
1.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: localhost
      vars:
        metrics_graph_service: yes
        metrics_query_service: yes
        metrics_retention_days: 10
        metrics_monitored_hosts: ["database.example.com", "webserver.example.com"]
      roles:
        - rhel-system-roles.metrics
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    因为 `metrics_graph_service`{.literal}
    和`metrics_query_service`{.literal} 被设置为
    value=\"yes\"，`grafana`{.literal} 会被自动安装，被置备为带有
    `pcp`{.literal} 作为 `pcp`{.literal} 数据源索引到
    `redis`{.literal}，从而可以使用 `pcp`{.literal}
    查询语言对数据进行复杂的查询。
    :::
3.  要查看机器集中收集的指标的图形表示，并查询数据，请访问
    `grafana`{.literal} Web [界面，如访问 Grafana web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#accessing-the-grafana-web-UI_setting-up-graphical-representation-of-pcp-metrics){.link}
    所述。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#setting-up-authentication-while-monitoring-a-system-using-the-metrics-system-role_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色监控系统时设置身份验证 {.title}
:::
PCP 通过 Simple Authentication Security Layer(SASL)框架支持
`scram-sha-256`{.literal} 验证机制。metrics RHEL 系统角色使用
`scram-sha-256`{.literal}
身份验证机制自动执行设置身份验证的步骤。这个步骤描述了如何使用 metrics
RHEL 系统角色设置身份验证。
::: itemizedlist
**先决条件**
-   您已在要用来运行 playbook 的机器上安装了 Red Hat Ansible Engine。
-   已安装要用来运行 playbook 的机器上的 `rhel-system-roles`{.literal}
    软件包。
:::
::: orderedlist
**流程**
1.  在您要为其设置身份验证的 Ansible playbook 中包含以下变量：
    ``` screen
    ---
      vars:
        metrics_username: your_username
        metrics_password: your_password
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 `sasl`{.literal} 配置：
    ``` screen
    # pminfo -f -h "pcp://127.0.0.1?username=your_username" disk.dev.read
    Password:
    disk.dev.read
    inst [0 or "sda"] value 19540
    ```
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-metrics-system-role-to-configure-and-enable-metrics-collection-for-sql-server_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色为 SQL Server 配置和启用指标集合 {.title}
:::
这个步骤描述了如何使用 metrics RHEL 系统角色通过本地系统中的
`pcp`{.literal} 为 Microsoft SQL Server 自动配置和启用指标集合。
::: itemizedlist
**先决条件**
-   您已在要监控的机器上安装了 Red Hat Ansible Engine。
-   您需要在要监控的机器中安装 `rhel-system-roles`{.literal} 软件包。
-   您已安装了用于红帽企业 Linux 的 Microsoft SQL Server 并建立了与 SQL
    服务器的\"可信\"连接。
-   您已安装了适用于红帽企业 Linux 的 SQL Server 的 Microsoft ODBC
    驱动程序。
:::
::: orderedlist
**流程**
1.  通过 `localhost`{.literal} 将以下内容添加到清单中，在
    `/etc/ansible/hosts`{.literal} Ansible 清单中配置：
    ``` screen
    localhost ansible_connection=local
    ```
2.  创建一个包含以下内容的 Ansible playbook：
    ``` screen
    ---
    - hosts: localhost
      roles:
        - role: rhel-system-roles.metrics
          vars:
            metrics_from_sql: yes
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   使用 `pcp`{.literal} 命令验证 SQL Server PMDA
    代理(mssql)是否已加载并正在运行：
    ``` screen
    # pcp
    platform: Linux rhel82-2.local 4.18.0-167.el8.x86_64 #1 SMP Sun Dec 15 01:24:23 UTC 2019 x86_64
     hardware: 2 cpus, 1 disk, 1 node, 2770MB RAM
     timezone: PDT+7
     services: pmcd pmproxy
         pmcd: Version 5.0.2-1, 12 agents, 4 clients
         pmda: root pmcd proc pmproxy xfs linux nfsclient mmv kvm mssql
               jbd2 dm
     pmlogger: primary logger: /var/log/pcp/pmlogger/rhel82-2.local/20200326.16.31
         pmie: primary engine: /var/log/pcp/pmie/rhel82-2.local/pmie.log
    ```
:::
::: itemizedlist
**其它资源**
-   [有关将 Performance Co-Pilot 用于 Microsoft SQL Server
    的更多信息，请参阅此 Red Hat Developers Blog
    post。](https://www.redhat.com/en/blog/performance-co-pilot-microsoft-sql-server-rhel-82){.link}
:::
:::
:::
[]{#configuring-a-system-for-session-recording-using-the-tlog-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#configuring-a-system-for-session-recording-using-the-tlog-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-a-system-for-session-recording-using-the-tlog-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 16 章 配置系统以使用 tlog RHEL 系统角色记录会话记录 {.title}
:::
使用 `tlog`{.literal} RHEL 系统角色，您可以使用 Red Hat Ansible
Automation Platform 为 RHEL 上的终端会话记录配置系统。
::: section
::: titlepage
# []{#configuring-a-system-for-session-recording-using-the-tlog-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-tlog-system-role_configuring-a-system-for-session-recording-using-the-tlog-rhel-system-roles}tlog 系统角色 {.title}
:::
您可以使用 `tlog`{.literal} RHEL 系统角色在 RHEL 上为终端会话记录配置
RHEL 系统。`tlog`{.literal} 软件包及其关联的 Web
控制台会话播放器可让您记录和回放用户终端会话。
您可以将记录配置为通过 `SSSD`{.literal}
服务为每个用户或用户组进行。所有终端输入和输出都会捕获并保存在系统日志中基于文本的格式。
::: itemizedlist
**其它资源**
-   有关 RHEL 中会话记录的详情，请参阅
    [记录会话](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/recording_sessions/index){.link}
:::
:::
::: section
::: titlepage