{"process.group_leader.working_directory": {"dashed_name": "process-group-leader-working-directory", "description": "The working directory of the process.", "example": "/home/alice", "flat_name": "process.group_leader.working_directory", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.group_leader.working_directory.text", "name": "text", "type": "match_only_text"}], "name": "working_directory", "normalize": [], "original_fieldset": "process", "short": "The working directory of the process."}}
{"process.hash.md5": {"dashed_name": "process-hash-md5", "description": "MD5 hash.", "flat_name": "process.hash.md5", "ignore_above": 1024, "level": "extended", "name": "md5", "normalize": [], "original_fieldset": "hash", "short": "MD5 hash."}}
{"process.hash.sha1": {"dashed_name": "process-hash-sha1", "description": "SHA1 hash.", "flat_name": "process.hash.sha1", "ignore_above": 1024, "level": "extended", "name": "sha1", "normalize": [], "original_fieldset": "hash", "short": "SHA1 hash."}}
{"process.hash.sha256": {"dashed_name": "process-hash-sha256", "description": "SHA256 hash.", "flat_name": "process.hash.sha256", "ignore_above": 1024, "level": "extended", "name": "sha256", "normalize": [], "original_fieldset": "hash", "short": "SHA256 hash."}}
{"process.hash.sha384": {"dashed_name": "process-hash-sha384", "description": "SHA384 hash.", "flat_name": "process.hash.sha384", "ignore_above": 1024, "level": "extended", "name": "sha384", "normalize": [], "original_fieldset": "hash", "short": "SHA384 hash."}}
{"process.hash.sha512": {"dashed_name": "process-hash-sha512", "description": "SHA512 hash.", "flat_name": "process.hash.sha512", "ignore_above": 1024, "level": "extended", "name": "sha512", "normalize": [], "original_fieldset": "hash", "short": "SHA512 hash."}}
{"process.hash.ssdeep": {"dashed_name": "process-hash-ssdeep", "description": "SSDEEP hash.", "flat_name": "process.hash.ssdeep", "ignore_above": 1024, "level": "extended", "name": "ssdeep", "normalize": [], "original_fieldset": "hash", "short": "SSDEEP hash."}}
{"process.hash.tlsh": {"dashed_name": "process-hash-tlsh", "description": "TLSH hash.", "flat_name": "process.hash.tlsh", "ignore_above": 1024, "level": "extended", "name": "tlsh", "normalize": [], "original_fieldset": "hash", "short": "TLSH hash."}}
{"process.interactive": {"dashed_name": "process-interactive", "description": "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.", "example": true, "flat_name": "process.interactive", "level": "extended", "name": "interactive", "normalize": [], "short": "Whether the process is connected to an interactive shell.", "type": "boolean"}}
{"process.io": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io", "description": "A chunk of input or output (IO) from a single process.\nThis field only appears on the top level process object, which is the process that wrote the output or read the input.", "flat_name": "process.io", "level": "extended", "name": "io", "normalize": [], "short": "A chunk of input or output (IO) from a single process.", "type": "object"}}
{"process.io.bytes_skipped": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-bytes-skipped", "description": "An array of byte offsets and lengths denoting where IO data has been skipped.", "flat_name": "process.io.bytes_skipped", "level": "extended", "name": "io.bytes_skipped", "normalize": ["array"], "short": "An array of byte offsets and lengths denoting where IO data has been skipped.", "type": "object"}}
{"process.io.bytes_skipped.length": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-bytes-skipped-length", "description": "The length of bytes skipped.", "flat_name": "process.io.bytes_skipped.length", "level": "extended", "name": "io.bytes_skipped.length", "normalize": [], "short": "The length of bytes skipped.", "type": "long"}}
{"process.io.bytes_skipped.offset": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-bytes-skipped-offset", "description": "The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped.", "flat_name": "process.io.bytes_skipped.offset", "level": "extended", "name": "io.bytes_skipped.offset", "normalize": [], "short": "The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped.", "type": "long"}}
{"process.io.max_bytes_per_process_exceeded": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-max-bytes-per-process-exceeded", "description": "If true, the process producing the output has exceeded the max_kilobytes_per_process configuration setting.", "flat_name": "process.io.max_bytes_per_process_exceeded", "level": "extended", "name": "io.max_bytes_per_process_exceeded", "normalize": [], "short": "If true, the process producing the output has exceeded the max_kilobytes_per_process configuration setting.", "type": "boolean"}}
{"process.io.text": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-text", "description": "A chunk of output or input sanitized to UTF-8.\nBest efforts are made to ensure complete lines are captured in these events. Assumptions should NOT be made that multiple lines will appear in the same event. TTY output may contain terminal control codes such as for cursor movement, so some string queries may not match due to terminal codes inserted between characters of a word.", "flat_name": "process.io.text", "level": "extended", "name": "io.text", "normalize": [], "short": "A chunk of output or input sanitized to UTF-8.", "type": "wildcard"}}
{"process.io.total_bytes_captured": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-total-bytes-captured", "description": "The total number of bytes captured in this event.", "flat_name": "process.io.total_bytes_captured", "level": "extended", "name": "io.total_bytes_captured", "normalize": [], "short": "The total number of bytes captured in this event.", "type": "long"}}
{"process.io.total_bytes_skipped": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-total-bytes-skipped", "description": "The total number of bytes that were not captured due to implementation restrictions such as buffer size limits. Implementors should strive to ensure this value is always zero", "flat_name": "process.io.total_bytes_skipped", "level": "extended", "name": "io.total_bytes_skipped", "normalize": [], "short": "The total number of bytes that were not captured due to implementation restrictions such as buffer size limits.", "type": "long"}}
{"process.io.type": {"beta": "This field is beta and subject to change.", "dashed_name": "process-io-type", "description": "The type of object on which the IO action (read or write) was taken.\nCurrently only 'tty' is supported. Other types may be added in the future for 'file' and 'socket' support.", "flat_name": "process.io.type", "ignore_above": 1024, "level": "extended", "name": "io.type", "normalize": [], "short": "The type of object on which the IO action (read or write) was taken."}}
{"process.macho.go_import_hash": {"dashed_name": "process-macho-go-import-hash", "description": "A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).", "example": "10bddcb4cee42080f76c88d9ff964491", "flat_name": "process.macho.go_import_hash", "ignore_above": 1024, "level": "extended", "name": "go_import_hash", "normalize": [], "original_fieldset": "macho", "short": "A hash of the Go language imports in a Mach-O file."}}
{"process.macho.go_imports": {"dashed_name": "process-macho-go-imports", "description": "List of imported Go language element names and types.", "flat_name": "process.macho.go_imports", "level": "extended", "name": "go_imports", "normalize": [], "original_fieldset": "macho", "short": "List of imported Go language element names and types.", "type": "flattened"}}
{"process.macho.go_imports_names_entropy": {"dashed_name": "process-macho-go-imports-names-entropy", "description": "Shannon entropy calculation from the list of Go imports.", "flat_name": "process.macho.go_imports_names_entropy", "format": "number", "level": "extended", "name": "go_imports_names_entropy", "normalize": [], "original_fieldset": "macho", "short": "Shannon entropy calculation from the list of Go imports.", "type": "long"}}
{"process.macho.go_imports_names_var_entropy": {"dashed_name": "process-macho-go-imports-names-var-entropy", "description": "Variance for Shannon entropy calculation from the list of Go imports.", "flat_name": "process.macho.go_imports_names_var_entropy", "format": "number", "level": "extended", "name": "go_imports_names_var_entropy", "normalize": [], "original_fieldset": "macho", "short": "Variance for Shannon entropy calculation from the list of Go imports.", "type": "long"}}
{"process.macho.go_stripped": {"dashed_name": "process-macho-go-stripped", "description": "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.", "flat_name": "process.macho.go_stripped", "level": "extended", "name": "go_stripped", "normalize": [], "original_fieldset": "macho", "short": "Whether the file is a stripped or obfuscated Go executable.", "type": "boolean"}}
{"process.macho.import_hash": {"dashed_name": "process-macho-import-hash", "description": "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash.", "example": "d41d8cd98f00b204e9800998ecf8427e", "flat_name": "process.macho.import_hash", "ignore_above": 1024, "level": "extended", "name": "import_hash", "normalize": [], "original_fieldset": "macho", "short": "A hash of the imports in a Mach-O file."}}
{"process.macho.imports": {"dashed_name": "process-macho-imports", "description": "List of imported element names and types.", "flat_name": "process.macho.imports", "level": "extended", "name": "imports", "normalize": ["array"], "original_fieldset": "macho", "short": "List of imported element names and types.", "type": "flattened"}}
{"process.macho.imports_names_entropy": {"dashed_name": "process-macho-imports-names-entropy", "description": "Shannon entropy calculation from the list of imported element names and types.", "flat_name": "process.macho.imports_names_entropy", "format": "number", "level": "extended", "name": "imports_names_entropy", "normalize": [], "original_fieldset": "macho", "short": "Shannon entropy calculation from the list of imported element names and types.", "type": "long"}}
{"process.macho.imports_names_var_entropy": {"dashed_name": "process-macho-imports-names-var-entropy", "description": "Variance for Shannon entropy calculation from the list of imported element names and types.", "flat_name": "process.macho.imports_names_var_entropy", "format": "number", "level": "extended", "name": "imports_names_var_entropy", "normalize": [], "original_fieldset": "macho", "short": "Variance for Shannon entropy calculation from the list of imported element names and types.", "type": "long"}}
{"process.macho.sections": {"dashed_name": "process-macho-sections", "description": "An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`.", "flat_name": "process.macho.sections", "level": "extended", "name": "sections", "normalize": ["array"], "original_fieldset": "macho", "short": "Section information of the Mach-O file.", "type": "nested"}}
{"process.macho.sections.entropy": {"dashed_name": "process-macho-sections-entropy", "description": "Shannon entropy calculation from the section.", "flat_name": "process.macho.sections.entropy", "format": "number", "level": "extended", "name": "sections.entropy", "normalize": [], "original_fieldset": "macho", "short": "Shannon entropy calculation from the section.", "type": "long"}}
{"process.macho.sections.name": {"dashed_name": "process-macho-sections-name", "description": "Mach-O Section List name.", "flat_name": "process.macho.sections.name", "ignore_above": 1024, "level": "extended", "name": "sections.name", "normalize": [], "original_fieldset": "macho", "short": "Mach-O Section List name."}}
{"process.macho.sections.physical_size": {"dashed_name": "process-macho-sections-physical-size", "description": "Mach-O Section List physical size.", "flat_name": "process.macho.sections.physical_size", "format": "bytes", "level": "extended", "name": "sections.physical_size", "normalize": [], "original_fieldset": "macho", "short": "Mach-O Section List physical size.", "type": "long"}}
{"process.macho.sections.var_entropy": {"dashed_name": "process-macho-sections-var-entropy", "description": "Variance for Shannon entropy calculation from the section.", "flat_name": "process.macho.sections.var_entropy", "format": "number", "level": "extended", "name": "sections.var_entropy", "normalize": [], "original_fieldset": "macho", "short": "Variance for Shannon entropy calculation from the section.", "type": "long"}}
{"process.macho.sections.virtual_size": {"dashed_name": "process-macho-sections-virtual-size", "description": "Mach-O Section List virtual size. This is always the same as `physical_size`.", "flat_name": "process.macho.sections.virtual_size", "format": "string", "level": "extended", "name": "sections.virtual_size", "normalize": [], "original_fieldset": "macho", "short": "Mach-O Section List virtual size. This is always the same as `physical_size`.", "type": "long"}}
{"process.macho.symhash": {"dashed_name": "process-macho-symhash", "description": "A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash", "example": "d3ccf195b62a9279c3c19af1080497ec", "flat_name": "process.macho.symhash", "ignore_above": 1024, "level": "extended", "name": "symhash", "normalize": [], "original_fieldset": "macho", "short": "A hash of the imports in a Mach-O file."}}
{"process.name": {"dashed_name": "process-name", "description": "Process name.\nSometimes called program name or similar.", "example": "ssh", "flat_name": "process.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "short": "Process name."}}
{"process.parent.args": {"dashed_name": "process-parent-args", "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.", "example": "[\"/usr/bin/ssh\", \"-l\", \"user\", \"10.0.0.16\"]", "flat_name": "process.parent.args", "ignore_above": 1024, "level": "extended", "name": "args", "normalize": ["array"], "original_fieldset": "process", "short": "Array of process arguments."}}