I am trying to solve a linear system as effeciently as possible, and one of
the methods I have been trying is by reordering the matrix beforehand with
reverse_cuthill_mckee.  
This works well for small matrices, but when I move to a large size this
breaks. (60000x60000)
The code to reproduce this is really simple:
    perm = scipy.sparse.csgraph.reverse_cuthill_mckee(H, symmetric_mode=True)
    I,J = np.ix_(perm,perm)
    H_reordered = H[I,J]
Where H is a symmetric 60000x60000 sparse csc matrix with some nonzero
elements. In my case it has about 7 million nonzero elements
When I run the above I get:
    Traceback (most recent call last):
      File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.1\plugins\python-ce\helpers\pydev\pydevd.py", line 1438, in _exec
        pydev_imports.execfile(file, globals, locals)  # execute the script
      File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.1\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
        exec(compile(contents+"\n", file, 'exec'), glob, loc)
      File "D:/Dropbox/ActiveLearning/Pytorch/Active-Learning/pcg.py", line 37, in 
        H_ref = H[I,J]
      File "D:\Dropbox\ActiveLearning\Pytorch\Active-Learning\venv\lib\site-packages\scipy\sparse\_index.py", line 75, in __getitem__
        return self._get_arrayXarray(row, col)
      File "D:\Dropbox\ActiveLearning\Pytorch\Active-Learning\venv\lib\site-packages\scipy\sparse\compressed.py", line 664, in _get_arrayXarray
        csr_sample_values(M, N, self.indptr, self.indices, self.data,
    ValueError: could not convert integer scalar
And the reason as far as I can see is that the reordering involves making a
60000x60000 ndarray, which has about 3.6*10^9 elements and hence is too big
int32.
Does anyone know of a workaround for this problem? or a fix?