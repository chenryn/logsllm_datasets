## Bug Report
### Which version of ShardingSphere did you use?
4.0.0-RC2
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
sharding-jdbc-core
### Expected behavior
    dsl.select(f1.Id)
                    .from(f1)
                    .where(f1.Id.le(id))
                    .limit(1)
    //                .getSQL()
                    .fetchOne().into(Long::class.java)
### Actual behavior
    java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer
    	at org.jooq_3.13.0-SNAPSHOT.MYSQL.debug(Unknown Source)
    	at org.apache.shardingsphere.core.optimize.sharding.segment.select.pagination.Pagination.getValue(Pagination.java:60)
    	at org.apache.shardingsphere.core.optimize.sharding.segment.select.pagination.Pagination.(Pagination.java:55)
### Reason analyze (If you can)
org.apache.shardingsphere.core.optimize.sharding.segment.select.pagination.Pagination  
line 60
        private int getValue(final PaginationValueSegment paginationValueSegment, final List parameters) {
            return paginationValueSegment instanceof ParameterMarkerPaginationValueSegment
                    ? (int) parameters.get(((ParameterMarkerPaginationValueSegment) paginationValueSegment).getParameterIndex())
                    : ((NumberLiteralPaginationValueSegment) paginationValueSegment).getValue();
        }
    // ? (int) parameters.get(((ParameterMarkerPaginationValueSegment) paginationValueSegment).getParameterIndex())
    // -> parameters.get(((ParameterMarkerPaginationValueSegment) paginationValueSegment).getParameterIndex()).intValue
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule
configuration, when exception occur etc.
### Example codes for reproduce this issue (such as a github link).
JOOQ use `Number` as limit() parameter, and past `Long` to preparedstatement
    dsl.select(f1.Id)
                    .from(f1)
                    .where(f1.Id.le(id))
                    .limit(1)
    //                .getSQL()
                    .fetchOne().into(Long::class.java)