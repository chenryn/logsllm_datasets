3.  [**在客户端上：**]{.strong} 保存并关闭 `sssd.conf`{.literal} 文件。
4.  [**在客户端上：**]{.strong}重启 SSSD 服务以加载配置更改。
    ``` literallayout
    [root@client ~]# systemctl restart sssd
    ```
5.  [**在服务器和客户端上：**]{.strong}启用详细的 SSSD 调试日志。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
    ``` literallayout
    [root@client ~]# sssctl debug-level 6
    ```
6.  [**在服务器和客户端中：**]{.strong}为遇到身份验证问题的用户验证 SSSD
    缓存中的对象，因此您不用绕过 LDAP 数据库，并检索 SSSD 信息已经缓存。
    ``` literallayout
    [root@server ~]# sssctl cache-expire -u idmuser
    ```
    ``` literallayout
    [root@client ~]# sssctl cache-expire -u idmuser
    ```
7.  [**在服务器和客户端上：**]{.strong}通过删除旧的 SSSD 日志来最小化
    dataset 故障排除。
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
8.  [**在客户端上：**]{.strong}尝试切换至遇到身份验证问题的用户，同时在尝试前后收集时间戳。这些时间戳进一步缩小了数据集的范围。
    ``` literallayout
    [root@client sssd]# date; su idmuser; date
    Mon Mar 29 16:20:13 EDT 2021
    su: user idmuser does not exist
    Mon Mar 29 16:20:14 EDT 2021
    ```
9.  [*（可选）*]{.emphasis}[**在服务器和客户端上：**]{.strong}如果您不想继续收集详细的
    SSSD 日志，请降低 debug 级别。
    ``` literallayout
    [root@server ~]# sssctl debug-level 0
    ```
    ``` literallayout
    [root@client ~]# sssctl debug-level 0
    ```
10. [**服务器和客户端：**]{.strong}查看 SSSD
    日志以获取有关失败请求的信息。
    ::: orderedlist
    1.  在客户端日志中查看来自客户端的请求。
    2.  在服务器日志中查看来自客户端的请求。
    3.  在服务器日志中检查请求的结果。
    4.  查看客户端收到来自服务器的请求结果的结果。
    :::
11. 如果您无法确定导致身份验证问题的原因：
    ::: orderedlist
    1.  收集您最近在 IdM 服务器和 IdM 客户端中生成的 SSSD
        日志。根据主机名或角色标记它们。
        ``` literallayout
        [root@server ~]# sssctl logs-fetch sssd-logs-server-Mar29.tar
        ```
        ``` literallayout
        [root@client ~]# sssctl logs-fetch sssd-logs-client-Mar29.tar
        ```
    2.  创建一个红帽技术支持问题单并提供：
        ::: orderedlist
        1.  SSSD 调试日志：
            ::: orderedlist
            1.  来自服务器的 `sssd-logs-server-Mar29.tar`{.literal}。
            2.  来自客户端的 `sssd-logs-client-Mar29.tar`{.literal}
            :::
        2.  与日志对应的请求的控制台输出，包括时间戳和用户名：
            ``` literallayout
            [root@client sssd]# date; su idmuser; date
            Mon Mar 29 16:20:13 EDT 2021
            su: user idmuser does not exist
            Mon Mar 29 16:20:14 EDT 2021
            ```
        :::
    :::
:::
:::
:::
[]{#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm}第 9 章 使用 Ansible playbook 配置全局 IdM 设置 {.title}
:::
使用 Ansible `config`{.literal} 模块，您可以检索和设置 Identity
Management (IdM) 的全局配置参数。
本章包括以下部分：
::: itemizedlist
-   [使用 Ansible playbook 检索 IdM
    配置](#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#retrieving-IdM-configuration-using-an-Ansible-playbook_configuring-global-idm-settings-using-ansible-playbooks "使用 Ansible playbook 检索 IdM 配置"){.link}
-   [使用 Ansible playbook 配置 IdM CA
    续订服务器](#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#configuring-the-IdM-ca-renewal-server-using-an-Ansible-playbook_configuring-global-idm-settings-using-ansible-playbooks "使用 Ansible playbook 配置 IdM CA 续订服务器"){.link}
-   [使用 Ansible playbook 为 IdM 用户配置默认
    shell](#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#configuring-the-default-shell-for-IdM-users-using-an-Ansible-playbook_configuring-global-idm-settings-using-ansible-playbooks "使用 Ansible playbook 为 IdM 用户配置默认 shell"){.link}
:::
::: section
::: titlepage
# []{#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#retrieving-IdM-configuration-using-an-Ansible-playbook_configuring-global-idm-settings-using-ansible-playbooks}使用 Ansible playbook 检索 IdM 配置 {.title}
:::
以下流程描述了如何使用 Ansible playbook 来检索有关当前全局 IdM
配置的信息。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在
    `[ipaserver]`{.literal} 部分中定义要从中检索 IdM 配置的 IdM
    服务器。例如，要指示 Ansible 从
    [**server.idm.example.com**]{.strong} 检索数据，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/config/retrieve-config.yml`{.literal}
    Ansible playbook 文件进行编辑：
    ``` literallayout
    ---
    - name: Playbook to handle global IdM configuration
      hosts: ipaserver
      become: no
      gather_facts: no
      tasks:
      - name: Query IPA global configuration
        ipaconfig:
          ipaadmin_password: Secret123
        register: serverconfig
      - debug:
          msg: "{{ serverconfig }}"
    ```
3.  通过更改以下内容来调整文件：
    ::: itemizedlist
    -   IdM 管理员的密码。
    -   其他值（如有必要）。
    :::
4.  保存该文件。
5.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/config/retrieve-config.yml
    [...]
    TASK [debug]
    ok: [server.idm.example.com] => {
        "msg": {
            "ansible_facts": {
                "discovered_interpreter_
            },
            "changed": false,
            "config": {
                "ca_renewal_master_server": "server.idm.example.com",
                "configstring": [
                    "AllowNThash",
                    "KDC:Disable Last Success"
                ],
                "defaultgroup": "ipausers",
                "defaultshell": "/bin/bash",
                "emaildomain": "idm.example.com",
                "enable_migration": false,
                "groupsearch": [
                    "cn",
                    "description"
                ],
                "homedirectory": "/home",
                "maxhostname": "64",
                "maxusername": "64",
                "pac_type": [
                    "MS-PAC",
                    "nfs:NONE"
                ],
                "pwdexpnotify": "4",
                "searchrecordslimit": "100",
                "searchtimelimit": "2",
                "selinuxusermapdefault": "unconfined_u:s0-s0:c0.c1023",
                "selinuxusermaporder": [
                    "guest_u:s0$xguest_u:s0$user_
                ],
                "usersearch": [
                    "uid",
                    "givenname",
                    "sn",
                    "telephonenumber",
                    "ou",
                    "title"
                ]
            },
            "failed": false
        }
    }
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-global-IdM-settings-using-Ansible-playbooks_configuring-and-managing-idm.html#configuring-the-IdM-ca-renewal-server-using-an-Ansible-playbook_configuring-global-idm-settings-using-ansible-playbooks}使用 Ansible playbook 配置 IdM CA 续订服务器 {.title}
:::
在使用嵌入式证书颁发机构 (CA) 的 Identity Management (IdM) 部署中，CA
续订服务器维护并更新 IdM 系统证书。它确保了强大的 IdM 部署。
有关 IdM CA 续订服务器角色的详情，请参阅 [使用 IdM CA
续订服务器](#ipa-ca-renewal_configuring-and-managing-idm.html "第 55 章 使用 IdM CA 续订服务器"){.link}。
以下流程描述了如何使用 Ansible playbook 配置 IdM CA 续订服务器。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  可选：识别当前 IdM CA 续订服务器：
    ``` literallayout
    $ ipa config-show | grep 'CA renewal'
      IPA CA renewal master: server.idm.example.com
    ```
2.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/config/set-ca-renewal-master-server.yml`{.literal}
    Ansible playbook 文件进行编辑：
    ``` literallayout
    ---
    - name: Playbook to handle global DNS configuration
      hosts: ipaserver
      become: no
      gather_facts: no
      tasks:
      - name: set ca_renewal_master_server
        ipaconfig:
          ipaadmin_password: SomeADMINpassword
          ca_renewal_master_server: carenewal.idm.example.com
    ```
4.  通过更改调整文件：
    ::: itemizedlist
    -   `ipaadmin_password`{.literal} 变量设置的 IdM 管理员密码。
    -   `ca_renewal_master_server`{.literal} 变量所设置的 CA
        续订服务器的名称。
    :::
5.  保存该文件。
6.  运行 Ansible playbook。指定 playbook 文件和清单文件：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/config/set-ca-renewal-master-server.yml
    ```
:::
::: title
**验证步骤**
:::
您可以验证 CA 续订服务器是否已更改：
::: orderedlist
1.  以 IdM 管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  请求 IdM CA 续订服务器的身份：
    ``` literallayout
    $ ipa config-show | grep ‘CA renewal’
    IPA CA renewal master:  carenewal.idm.example.com
    ```
    输出显示 [**watchnewal.idm.example.com**]{.strong} 服务器是新的 CA
    续订服务器。
:::
:::
::: section
::: titlepage