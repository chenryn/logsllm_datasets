1 “ pg
In this example the prover sends L, R and a
1 “ L
1qa1¨x`a2¨x´1. Now,
A simple calculation shows that P
it can be shown that the prover can prove knowledge of
´1 P Zp to the
a1, a2 by simply sending a
1 is half
. This a
veriﬁer. The veriﬁer accepts if P
the size of pa1, a2q.
1 to the
veriﬁer, so this proof of knowledge is no better then send-
ing a1, a2. However,
this technique generalizes to more
dimensions. When the two dimensional vector pa1, a2q is
replaced by an n dimensional vector a P Zn
p , the prover
can prove knowledge of a by only sending L, R P G and
a vector of dimension n{2. This is a signiﬁcant savings
over sending all of a to the veriﬁer. We can then use the
same communication efﬁcient method to recursively prove
knowledge of the vector of dimension n{2. The resulting
pnq round protocol generates only Oplog2
pnqq trafﬁc.
log2
Moreover, we show in Protocol 2 that this can be done
for two vectors in parallel such that the inner product of
the two vectors only changes by a correction factor that the
veriﬁer can compute itself from the challenge. This lets the
prover convince the veriﬁer that the inner-product of two
committed vectors a, b is a value c.
The inner-product argument. The input to the inner prod-
uct argument are independent generators g, h P Gn, a scalar
c P Zp, and the binding vector commitment P P G such that
a2
1 and L “ g
1 “ g
px´1q
1
x
2
g
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:29:05 UTC from IEEE Xplore.  Restrictions apply. 
VIP : x $ÐÝ Z
VIP Ñ PIP : x
‹
p
1 “ P ¨ u
Run Protocol 2 on Input pg, h, u
P
x
x¨c
, P
(3)
(4)
(5)
(6)
1
; a, bq
Protocol 1: Proof system for Relation (1) using Protocol 2.
u P G is a ﬁxed group element with an unknown discrete-
log relative to g, h P Gn.
P “ gahb. The argument demonstrates that xa, by “ c
given pairwise hardness of computing discrete logarithm
relations between each pair of two distinct group elements
from g, h. We assume that n is a power of 2. When using
the argument we can easily pad the circuit/range proof
construction to ensure that this holds.
With this setup, the inner product protocol, described in
Protocol 1, is an efﬁcient proof system for the following
relation:(cid:5)pg, h P Gn, P P G, c P Zp ; a, b P Zn
P “ gahb ^ c “ xa, by(
pq :
(1)
Protocol 1 uses internally a ﬁxed group element u P G that
has an unknown discrete-log relative to g, h. The protocol’s
pnqs elements in G plus 2
total communication is 2 ¨ rlog2
elements in Zp. The prover’s work is dominated by 4n
group exponentiations and the veriﬁer’s work by 2n expo-
nentiations. For more details on our implementation and its
optimizations see Section 6.
We describe the protocol in two parts. Protocol 2 is a
proof system for the following relation:
a
b
n
, u, P P G; a, b P Z
pq : P “ g
n
u
h
(2)
Then Protocol 1 uses the proof system for Relation (2) to
build a new proof system for Relation (1).
Theorem 1 (Inner-Product Argument). The argument pre-
sented in Protocol 1 has perfect completeness and sta-
tistical witness-extended-emulation for either extracting a
non-trivial discrete logarithm relation between g, h, u or
extracting a valid witness a, b.
(cid:5)pg, h P G
xa,by(
Input: pg, h P G
n
, u, P P G ; a, b P Z
pq
n
PIP’s input: pg, h, u, P, a, bq
VIP’s input: pg, h, u, Pq
Output:tVIP accepts or VIP rejectsu
if n “ 1 :
PIP Ñ VIP : a, b
c “ a ¨ b
VIP checks if P “ g
h
if yes, VIP accepts
otherwise, VIP rejects
u
a
c
b
:
n
else: pn ą 1q
PIP computes:
1 “ n
:sy P Zp
cL “ xar:n1s, brn1
2
:s, br:n1sy P Zp
cR “ xarn1
cL P G
L “ g
brn1:s
ar:n1s
r:n1s u
rn1
:s h
R “ g
cR P G
arn1:s
br:n1s
:s u
rn1
r:n1s h
PIP Ñ VIP : L, R
VIP : x $ÐÝ Z
‹
p
VIP Ñ PIP : x
PIP and VIP compute:
r:n1s ˝ g
:s P G
x´1
n1
xrn1
xr:n1s ˝ h
:s P G
x´1
n1
rn1
x´2 P G
1 “ g
1 “ h
1 “ L
PIP computes:
:s ¨ x
1 “ ar:n1s ¨ x ` arn1
´1 ` brn1
1 “ br:n1s ¨ x
1q
P R
P
h
x2
g
1
1
a
´1 P Z
n1
p
:s ¨ x P Z
n1
p
recursively run Protocol 2 on input
pg
, u, P
, h
, b
; a
b
1
1
(7)
(8)
(9)
(10)
(11)
(12)
(13)
(14)
(15)
(16)
(17)
(18)
(19)
(20)
(21)
(22)
(23)
(24)
(25)
(26)
(27)
(28)
(29)
(30)
(31)
(32)
(33)
(34)
(35)
The proofs for all theorems are given in the appendix.
Protocol 2: Improved Inner-Product Argument
4. Range Proof Protocol with Logarithmic Size
We now present a novel protocol for conducting short
and aggregatable range proofs. The protocol uses the im-
proved inner product argument from Protocol 1. First, in
Section 4.1, we describe how to construct a range proof
that requires the veriﬁer to check an inner product between
two vectors. Then, in Section 4.2, we show that this check
can be replaced with an efﬁcient inner-product argument. In
Section 4.3, we show how to efﬁciently aggregate m range
proofs into one short proof. In Section 4.4, we discuss how
interactive public coin protocols can be made non-interactive
by using the Fiat-Shamir heuristic, in the random oracle
model. In Section 4.5 we present an efﬁcient MPC protocol
that allows multiple parties to construct a single aggregate
range proof. In the full version [1], we discuss an extension
that enables a switch to quantum-secure range proofs in the
future.
321
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:29:05 UTC from IEEE Xplore.  Restrictions apply. 
4.1. Inner-Product Range Proof
We present a protocol which uses the improved inner-
product argument to construct a range proof. The proof con-
vinces the veriﬁer that a commitment V contains a number
v that is in a certain range, without revealing v. Bootle et al.
[7] presents a proof system for arbitrary arithmetic circuits,
and in Section 5, we demonstrate that our improvements to
the inner product argument also transfer to this proof system.
It is of course possible to prove that a commitment is in a
given range using an arithmetic circuit and asymptotically
[7] could be used to construct logarithmically (in the length
of v) sized range proofs.
However, the circuit would need to implement the com-
mitment function, e.g. a multi-exponentiation for Pedersen
commitments, leading to a large and complex circuit.
We, therefore, demonstrate that we can construct a range
proof more directly. The range proof takes advantage of the
fact that if V is a Pedersen commitment, then it is an element
in the same group that is used to perform the inner product
argument. We extend this idea in Section 5 to show that
our circuit can take an arbitrary number of commitments as
input.
The proof system uses the homomorphic property of Vector
Pedersen commitments to construct commitments to two
polynomials lpXq and rpXq in Zn
prXs, i.e. the coefﬁcients
of lpXq and rpXq are vectors in Zn
p . Using these vector-
polynomial commitments, the prover and veriﬁer engage in
an inner product argument to veriﬁably compute the inner
product of lpXq and rpXq. These polynomials are carefully
constructed such that the zero-coefﬁcient of xlpXq, rpXqy P
ZprXs has a special form if and only if v is in the range.
This can be viewed as encoding the range proof circuit
in the zero-coefﬁcient of xlpxq, rpxqy. For simplicity, we
describe the product as an interactive protocol where all the
veriﬁers messages are random elements in Zp. As discussed
in Section 4.4, this protocol can be turned into a non-
interactive range proof using the Fiat-Shamir heuristic. In
Section 4.2 we show how to use the inner product argument
to turn the range proof into a highly efﬁcient proof whose
size only grows logarithmically in the bits of the range
proven.
Formally, let v be a number in r0, 2n ´ 1s with n “ Opλq,
and V be a commitment to v using randomness γ. Let
a “ pa1, . . . , anq be the vector containing the bits of v,
so that xa, 2ny “ v. The prover P commits to a as well as
blinding vectors sL, sR using constant sized vector commit-
ments. P then constructs the polynomial tpXq P ZprXs as a
function of a, sL, sR whose zero coefﬁcient is independent
of a if and only if a indeed contains only bits. tpXq is
exactly the inner product of lpXq, rpXq P Zn
prXs. lpXq and
rpXq are such that the Veriﬁer V can himself construct a
commitment to them.
Concretely the proof system proves the following relation
which is equivalent to a range proof relation by Deﬁnition 12
using a Pedersen commitment scheme and range r0, 2n´1s:
(cid:5)pV, g, h P G, g, h P Gn; v, γ P Zpq :
V “ hγgv ^ v P r0, 2n ´ 1s(
To prove the statement, P and V engage in the following
zero knowledge protocol.
aL P t0, 1un s.t. xaL, 2
P Z
n
p
(36)
(37)
(38)
P G (39)
(40)
(41)
P G (42)
(43)
(44)
(45)
aR
aL h
n
α
g
n
p
sL, sR
ny “ v
aR “ aL ´ 1
α $ÐÝ Zp
A “ h
$ÐÝ Z
ρ $ÐÝ Zp
S “ h
P Ñ V : A, S
V : y, z $ÐÝ Z
‹
p
V Ñ P : y, z
g
ρ
sR
sL h
The prover now constructs the two degree 1 polynomials
lpXq and rpXq in Zn
prXs and computes
tpXq “ xlpXq, rpXqy P ZprXs
V can construct commitments to lpXq, rpXq from V, A, and
S, as well as y and z.
lpXq “ aL ´ z ¨ 1
n ` sL ¨ X
rpXq “ y
n ˝ paR ` z ¨ 1
tpXq “ xlpXq, rpXqy “ 2ÿ
ny ` z ¨ xaL ´ aR, y
t0 “ xaL, aR ˝ y
` z2 ¨ x2
, aLy ` kpy, zq
kpy, zq “ ´z2 ¨ x1
ny ´ z3 ¨ x1
ny
P ZprXs
n P ZprXs
P ZprXs
n ` sR ¨ Xq ` z2 ¨ 2