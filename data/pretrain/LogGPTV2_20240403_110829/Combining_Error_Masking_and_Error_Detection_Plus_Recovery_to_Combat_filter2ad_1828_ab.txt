2 − t(cid:1)
t(cid:1)
1, then a correct value is latched in D2. The error de-
tect signal (ED) which is the XOR of D1 and D2 changes to
one which leads to the majority voter output being fed back
into D1 and D2. Once ED goes high, the error detect sig-
nal for the complete pipeline stage goes to one and hence
CLK stays at zero during the next cycle. This prevents the
CLB output generated in the next clock cycle from conﬂict-
ing the output of multiplexor (fb) into D1.
The generation of the clock gating signal needs to be
done before the next clock cycle begins. This can be done
due to the following reasons: (1) As the error detect signals
are generated using D1 and D2, approximately half-a-clock
period ( T
2 ) is available for generating the pipeline stall and
clock gating signals. (2) High-speed logic such as domino
logic could be used to generate the clock gating signal, as
soft errors in these circuits do not lead to a functional fail-
ure (explained later). (3) Moreover, since EDAC is applied
to only the most critical paths in a circuit, the number of
ED signals to be ORed are expected to be few (Sec. 5.).
The pipeline stall is generated by ORing all the ED sig-
nals generated from the corresponding pipeline stage. The
different pipeline stall signals can be combined to generate
the global clock gating signal. In case generation and distri-
bution of PS exceeds half clock period, we suggest use of
counter-ﬂow pipelining techniques as done in [8]. The cor-
rect value is fed back into D2 too, so that ED selects the new
circuit output latched in future clock cycles.
VDD
E.C.
1
0
ED
E.C.
1
0
ED
VDD
CLK
D
CLK’
C
1
D1
C’
1
C
2
D2
C’
2
CLK’
D3
D1
CLK
Q
SSV
D1
D2
D1
D2
D3
ED
Majority
Voter
E.C.
SSV
Figure 1. Flip-ﬂop used for EDAC in a path. XOR
is used for error detection and a majority voter
generates the correct output which is then fed-
back in case of an error.
We assume that once a particle strike has occurred in
the logic circuit, the chances of a new particle strike oc-
I/p
VDD
P1
C2
P
pull−up
N
pull−dn
F
C2
N1
VSS
(a)
D1
D2
D3
Majority
Voter
F1
D
VDD
P1
P2
F
(E.C.)
N1
N2
SSV
(b)
Figure 2.
(a) PO gate modiﬁed to prevent con-
tamination delay from affecting sampled values.
(b) The majority voter output ANDed with D input
to prevent SEMUs from changing the output.
curring in the latch and majority voter in the same clock
cycle are negligible. Hence, a transient pulse without sufﬁ-
cient width to overlap two sampling points can always be
masked. However, the chance of a particle strike occurring
on the extra circuitry and causing an error is analyzed sepa-
rately. There are three different cases which need to be con-
sidered for particle strikes.
• Single event multiple upsets (SEMUs) refers to a sin-
gle particle strike causing logic upset at more than one
node. The latch nodes D1, D2, and D3 are susceptible
to SEMU as: (1) They are driven by weak feedback in-
verters which are also susceptible. (2) The nodes are
part of the same latch. By spacing apart the nodes
D1, D2, and D3 while laying out the latch, the risk of
SEMU can be reduced. However, if spacing apart the
latch nodes does not yield the desired SER reduction
then the majority voter connection shown in Fig. 2(b)
can be used. After the output F settles to the correct
value, and a SEMU occurs changing the value stored
at any two of the three latched values D1, D2, or D3,
the output F still retains its original value. For exam-
ple, if D2 and D3 change due to SEMU then output
F1 changes, however D’ remains unchanged and hence
the signal F maintains its previous value. The output F
is equal to E.C. and hence needs to be inverted, be-
fore being fed back into the pipeline, when using this
conﬁguration.
We now show that the modiﬁed arrangement of
Fig. 2(b) does not lower the SER reduction provided
by the ﬂip-ﬂop in Figure 1. The output F once set-
tled to the correct value does not change state un-
less D and the majority voter output both contain the
wrong value. Output F can be prevented from settling
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:53:26 UTC from IEEE Xplore.  Restrictions apply. 
to the correct value only when both D1 and D2 have
latched the wrong value. Also the value stored at F
can be changed when both D2 and D3 have latched
the wrong value and D contains a wrong value at
T − (tD−F + tmux + tsetup). As can be seen, in both
cases F is driven to a wrong value only when the tran-
sient pulse has a width of t(cid:1)
2. Hence,
using this conﬁguration does not lower the SER reduc-
tion of the logic circuit, while protecting the latch from
SEMU.
2 − t(cid:1)
1 or t(cid:1)
3 − t(cid:1)
• Output of error detector: If a particle strike changes the
output of the XOR gate when there has been no tran-
sient pulse generation in the CLB block, the circuit still
functions correctly. This is because the output of the
majority voter still remains same and the correct value
is put into the pipeline in the next clock cycle. How-
ever, there is a one-cycle penalty due to wrong case of
error detection. Since particle strikes on the error de-
tection and pipeline stall circuits do not affect the cir-
cuit output, fast circuits such as domino logic could be
used to generate pipeline stall and global clock gating
signals.
• Output of majority voter: In the case of combined error
detection and error correction in a single path, if a par-
ticle strike ﬂips the output of a majority voter the cir-
cuit still functions correctly. This is because there is no
error detected and hence there is no pipeline stall and
the correct value passes through the pipeline ﬂip-ﬂop.
In the case of error masking alone, particle strike at the
output of majority voter can be corrected in the next
stage, assuming all pipeline stages implement soft er-
ror protection schemes.
2.4. Error recovery
Error recovery can be done by clock gating and pipeline
stalling. All the error detect (ED) signals from a pipeline
stage are combined to generate a single error detect signal
for the stage. The error detect signals from different stages
are combined to generate a global pipeline stall (PS) sig-
nal. The PS signal can be used to gate the clock signal be-
ing fed to pipeline latches.
2.6. Effect of process variation on SER reduction
Process variation introduces uncertainty in the delay of
control and data signals. In the case of EDAC paths, uncer-
tainty in data signal alone does not cause an error, while un-
certainty in both data and control signals can cause an er-
ror. If a wrong logic value is stored at D1, it is detected and
corrected by the circuit. This is because both D2 and D3
are sampled well after the PO settles and hence the major-
ity value, which is fed back into the pipeline, remains cor-
rect.
In the case of error masking, the PO is sampled at t1, t2,
and t3 using signals C1, C2, and CLK. We present an anal-
ysis for SER reduction (when using error masking alone)
in the presence of process variation. Similar analysis can
be done for EDAC paths too. This can lead to wrong val-
ues being latched at D1, due to C1 transitioning before t1 or
data D settling later than t1. The second sample D2 is as-
sumed to be sampled well within the slack, such that pro-
cess variation does not cause the PO signal to settle after
t2 or the control signal C2 to go high before t1. The effec-
tive SER of a path where error masking is used, taking into
account the process variation:
SERnew = P (C1 = t1) × P (C2 = t2) ×
(SER(w ≥ Smax/2)) +
(P (C1 < t1) + P (D ≥ t1)) ×
SER(w ≥ tlw)
(3)
where P(C1=t1) and P(C2=t2) are the probabilities that
C1 and C2 go high at time t1 and t2, respectively, after the
current clock cycle starts, while P(C1 ≤ t1) is equal to the
probability that C1 becomes high before t1 and P (D ≥ t1)
is the probability that PO settles later than t1. The SER of
the modiﬁed (with protection) and original circuit (without
protection) are SER(w ≥ Smax/2) and SER(w ≥ tlw),
where Smax is the slack from eqn. 2 and tlw is the latch-
ing window width. Equation 3 is based on the fact that, if
D1 has a wrong value latched, an error in D2 or D3 effec-
tively makes the SER of the modiﬁed circuit equal to origi-
nal circuit.
2.7. Calculating probability
2.5. Delay chain construction
The control signals C and C are generated using the
same methodology described in [9]. We now analyze the
uncertainty of the control signal arrival time due to process
variation and its effect on the SER reduction capability of
this technique.
In case of uncorrelated process and environmental varia-
tions, the probability of control signal arrival can be calcu-
lated either using Monte Carlo simulation or using the root-
sum-square method (RSS). The RSS method can be used
when the mean (µj) and standard deviation (σj) of the indi-
vidual delay elements (along with the wire delay) in the de-
lay chain are known. In the case of RSS, the mean and stan-
dard deviation of each delay tap is given by:
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:53:26 UTC from IEEE Xplore.  Restrictions apply. 
j=i−1(cid:1)
µj
j=1
j=i−1(cid:1)
σj2)
µi =
(cid:2)
(
σi =
(4)
(5)
j=1
(6)
The delay mean and standard deviation of the ith delay
tap depends on the taps before. In case of Monte Carlo sim-
ulations, delay chain should be ﬁrst constructed and the cor-
responding HSPICE netlist generated. The supply voltage
Vdd, threshold voltage Vth, and gate length L are modeled
as normal random variables and the delay chain can be sim-
ulated using HSPICE. The mean and standard deviation of
the different delay taps can be recorded from the simulation
results. The probability can be calculated from the probabil-
ity density function (PDF) of the delay distribution shown
below (assuming normal distribution):
2 ( t1−µ
−1
σ )2
P (C1 = t1) =
1√
2πσ
e
2.8. Reducing power overhead
chain, the following techniques can be applied.
To reduce the power overhead consumed by the delay
• The SER contribution of PO gates differ by orders of
magnitude. This is due to the number of combinational
logic gates in the fanin cone of the PO gate and also
the different QCRIT required to cause an error in these
gates. Thus by not triggering PO gates which do not of-
fer signiﬁcant SER reduction, the power consumption
required for generating and routing control signals to
these PO gates can be saved.
• The delay chain can be shared between multiple mod-
ules. The control signals generated by the delay chain
can be used to sample PO values of other blocks too.
This may lead to reduced SER reduction but can re-
sult in reduced power overheads.
• It has been noted in [16] that vulnerability of a sys-
tem to soft errors can vary based on the application
software running on the system. The proposed error
masking system can be selectively used only when the
system has a very high vulnerability. The system soft-
ware can generate a signal which can be used to gate
the clock signal which is used as input to the delay
chain. Clock gating prevents any transitions in the de-
lay chain when no error masking is needed and thus
saves power consumed by the delay chain. Since only
the clock being fed into the delay chain is affected, nor-
mal system operation remains unchanged. We now an-
alyze the SER reduction offered by the error masking
system with clock gating. Supposing, the initial SER
of a system corresponds to 230 FIT, lets assume by ap-
plying the error masking technique the system is com-
pletely protected, but the overall power budget of the
system is exceeded. This means by enabling the error
masking technique only 50% of the time the system
is operating, the reduced SER of the system would be
115 FIT, which approximately corresponds to MTBF