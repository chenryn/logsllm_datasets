title:Flexible multimedia content retrieval using InfoNames
author:Arun Kumar and
Ashok Anand and
Aditya Akella and
Athula Balachandran and
Vyas Sekar and
Srinivasan Seshan
Flexible Multimedia Content Retrieval Using InfoNames
Arun Kumar, Ashok Anand,
University of Wisconsin-Madison
Aditya Akella
{arun, ashok, akella}@cs.wisc.edu
ABSTRACT
Multimedia content is a dominant fraction of Internet usage today.
At the same time, there is signiﬁcant heterogeneity in video presen-
tation modes and operating conditions of Internet-enabled devices
that access such content. Users are often interested in the content,
rather than the speciﬁc sources or the formats. The host-centric
format of the current Internet does not support these requirements
naturally. Neither do the recent data-centric naming proposals,
since they rely on naming content based on raw byte-level hash-
ing schemes. We argue that to meet these requirements, enabling
content retrieval mechanisms to name and query directly for the un-
derlying information is a good way forward. In addition to decou-
pling content from available sources and transfer protocols, these
“information-aware names” or InfoNames explicitly decouple the
information from content presentation factors as well. We envision
an InfoName Resolution System (IRS) to resolve location based on
InfoNames, while taking into account the operating conditions of
devices. In this demo, we present an application to show how In-
foNames can serve as presentation-invariant and portable names to
fetch video content independent of device capabilities and resource
constraints.
Categories and Subject Descriptors
C.2 [Computer Communication Networks]: Miscellaneous; H.4
[Information Systems Applications]: Miscellaneous
General Terms
Design, Algorithms
1.
INTRODUCTION
Multimedia content constitutes a dominant and increasing frac-
tion of Internet usage. Their use today is characterized by two key
trends. First, any particular media item is available from multiple
hosting locations, and in many formats and resolutions. Second,
users’ devices are capable of playing multiple media formats and
resolutions, and have different operating conditions (bandwidth,
power, etc.). From a user perspective, we are often interested in the
content itself, rather than the source or formats, and furthermore,
in dynamically adapting these aspects to match our operating con-
straints. The host-centric model of the Internet does not support
these requirements naturally. Data-centric architectures [8, 7, 9]
decouple content from location, but do not provide the capability
to ﬂexibly select from alternate presentations, since the differences
Copyright is held by the author/owner(s).
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
ACM 978-1-4503-0201-2/10/08.
Athula Balachandran, Vyas Sekar,
Srinivasan Seshan
Carnegie Mellon University
{abalacha, vyass, srini}@cs.cmu.edu
in format, resolution, etc. lead to different names based on byte-
level hashing. Using keywords from content metadata (e.g., name
of movie) to bind content (e.g., via Google) may not work that
well either, since metadata is usually non-unique and incomplete
for many media ﬁles.
Our position is that such ﬂexible multimedia retrieval requires
mechanisms that allow users to directly name, and query for, the
underlying information. Here, we use the term information to rep-
resent the perceptual entity that captures the content’s deﬁning or
most signiﬁcant features. Using information-aware naming and
querying schemes, users can also retrieve different portions of me-
dia from multiple sources, in different presentation formats if needed,
thereby increasing both availability and ﬂexibility.
While these ideas are appealing, they pose key design and im-
plementation challenges. First, generating such information aware
names or InfoNames is more complex than traditional hash-based
naming (e.g., [5]). The key challenge lies in ensuring that InfoN-
ames are presentation invariant and bound to the information. In-
foNames must be unique across dissimilar content and compact
relative to content size. We leverage ideas from the multimedia
literature (e.g., [4, 6, 1, 2]) to design InfoNames with these proper-
ties. We envision that the InfoNames can be tied to human readable
identiﬁers (e.g., keywords) through out-of-band mechanisms such
as search engines, social networks etc., similar to mechanisms for
binding “ﬂat” names to human understandable identiﬁers [7].
Second, we need an appropriate InfoName Resolution System or
IRS (analogous to today’s DNS). Content providers can register
their InfoNames, and consumers can lookup and retrieve content
based on InfoNames. The IRS must also support suitable APIs for
content providers and consumers to specify their capabilities in the
query. E.g., ﬂash is unsupported on an iPhone, and lower resolution
is desired in battery or bandwidth-constrained settings.
In this demo, we present a proof-of-concept design and imple-
mentation of mechanisms that enable such ﬂexible retrieval of mul-
timedia content. We present a suitable API for the IRS, extending
the conventional ﬁnd()/register() API [7] to use InfoDescriptors, in
addition to InfoNames. These InfoDescriptors carry meta-data to
qualify key attributes of the content (e.g., format, resolution) and
the InfoName (e.g., the algorithm used). Information providers and
consumers specify their preferences or capabilities using InfoDe-
scriptors. Table 1 describes the API for Information Resolution
System.
We demonstrate one application using this framework, which
shows how InfoNames serve as presentation-invariant and portable
names to fetch video content independent of device capabilities
(e.g., ability to play particular format of video) and resource con-
straints (e.g., bandwidth). Users can “bookmark” the InfoNames to
refer to some human understandable context (e.g., a movie name)
455Command
Register(URI,
InfoName, InfoDe-
scriptor)
DeRegister(URI)
Description
Registers the video at the given URI
to contain the speciﬁed InfoName and
InfoDescriptors
Unregisters the video at the speciﬁed
URI
GetInfoName(URI) Given the URI to the video, it returns
the globally accessible InfoName cor-
responding to the video
Given the InfoName for a particular
video and the constraints, it selects
the best ﬁt video and returns its cor-
responding URI
Find(InfoName,
Constraints)
Table 1: The API of the InfoName Resolution System.
Figure 1: Snapshots of the different steps in the InfoName-
aware video streaming application: 1. The URL is used to get
the InfoName of that video. 2. The InfoName is obtained. Note
that it is not meant to be human-readable, but rather serves
as a portable and persistent binding to the information. It is
used along with implicit metadata constraints to retrieve best
matching video URLs. 3. The best matched result is played.
Optionally, other matched results can be viewed.
and share these persistent identiﬁers with other users. This enables
late binding to particular content sources and presentation formats,
thereby allowing users and applications to best adapt to their capa-
bilities and operating constraints.
2. DEMONSTRATION
We demonstrate the application of portable InfoName identiﬁers
as follows. For the purpose of this demo, we have implemented
the underlying resolution system as a centralized store-and-lookup
server that maintains a database of InfoNames and their mappings
with the InfoDescriptors. We use a relational schema for InfoN-
ames and use MySQL to insert/retrieve them.
Obtaining InfoNames:
The user obtains the InfoName given a URI. This involves in-
voking the GetInfoName() call which returns the InfoName for the
video URI. For the demo, the IRS is pre-populated with InfoN-
ames and InfoDescriptors. We do so only for the purposes of the
demonstration. In practice, the IRS can obtain InfoNames and their
mappings on-the-ﬂy from different content sources (e.g., transcod-
ing proxies or InfoName-aware caches) or alternatively obtain this
data by crawling several potential sources. This is the ﬁrst step in
Figure 1.
Identifying potential sources:
When a user on a laptop clicks on Get Video for the InfoName,
the laptop constraints (e.g., capability to play some set of formats,
preferred resolutions based on available network bandwidth etc.)
are passed along with the InfoName in Find(). The IRS looks up
the set of video URIs that have the same (or similar) InfoName
and returns a ranked list of URIs matching the users’ criteria. The
user then gets the corresponding video and it is played on laptop.
We show how this results in getting a different video format for
another laptop with different capabilities. This is the second step in
Figure 1 which shows the best ﬁt video, after the user clicks on Get
Video. The 3rd step shows that by clicking Other Matches, we ﬁnd
URIs of the other results that also match the same InfoName.
Dynamic adaptation:
We vary the bandwidth between video server laptop and client
laptop, and show how different resolutions of videos are selected
accordingly. Today’s streaming solutions (e.g., Microsoft SmoothHD
and Adobe Zeri) provide capabilities for bandwidth-aware adaptive
video streaming. However, Infonames generalizes this to all media,
and not only to those where such systems are deployed.
3. REFERENCES
[1] The LibFooID Audio Fingerprinting Library.
http://code.google.com/p/libfooid.
[2] The Open Source Perceptual Hash Library.
http://phash.org.
[3] J. S. Boreczky and L. A. Rowe. Comparison of Video Shot
Boundary Detection Techniques. In Proc. SPIE, Storage and
Retrieval for Media Databases, pages 170–179, 1996.
[4] B. Coskun and B. Sankur. Robust video hash extraction. In In
Proceedings of the European Signal Processing Conference,
EUSIPCO, 2004.
[5] M. Rabin. Fingerprinting by Random Polynomials. Technical
report, Harvard University, 1981. Technical Report, TR-15-81.
[6] S.-C. Cheung and A. Zakhor. Estimation of Web Video
Multiplicity. In Proc. SPIE, Internet Imaging, 2000.
[7] T. Koponen et al. A Data-Oriented (and Beyond) Network
Architecture. In Proc. SIGCOMM, 2007.
[8] N. Tolia, M. Kaminsky, D. G. Andersen, and S. Patil. An
Architecture for Internet Data Transfer. In Proc. NSDI, 2006.
[9] V. Jacobson, D. Smetters, J. Thornton, M. Plass, N. Briggs,
and R. Braynard. Networking Named Content. In Proc.
CoNEXT, 2009.
456