User: Will google Go use less resources than Python and Java on Appengine? Are the instance startup times for go faster than Java's and Python's startup times? 
Is the go program uploaded as binaries or source code and if it is uploaded as source code is it then compiled once or at each instance startup?
In other words: Will I benefit from using Go in app engine from a cost perspective? (only taking to account the cost of the appengine resources not development time)
Assistant: The question is mostly irrelevant.
The minimum memory footprint for a Go app is less than a Python app which is less than a Java app.  They all cost the same per-instance, so unless your application performs better with extra heap space, this issue is irrelevant.
Go startup time is less than Python startup time which is less than Java startup time.  Unless your application has a particular reason to churn through lots of instance startup/shutdown cycles, this is irrelevant from a cost perspective.  On the other hand, if you have an app that is exceptionally bursty in very short time periods, the startup time may be an advantage.
As mentioned by other answers, many costs are identical among all platforms - in particular, datastore operations.  To the extent that Go vs Python vs Java will have an effect on the instance-hours bill, it is related to:

Does your app generate a lot of garbage?  For many applications, the biggest computational cost is the garbage collector.  Java has by far the most mature GC and basic operations like serialization are dramatically faster than with Python.  Go's garbage collector seems to be an ongoing subject of development, but from cursory web searches, doesn't seem to be a matter of pride (yet).
Is your app computationally intensive?  Java (JIT-compiled) and Go are probably better than Python for mathematical operations.

All three languages have their virtues and curses.  For the most part, you're better off letting other issues dominate - which language do you enjoy working with most?