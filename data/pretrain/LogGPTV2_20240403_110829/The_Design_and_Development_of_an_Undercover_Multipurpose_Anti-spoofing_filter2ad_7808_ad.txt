the 
corresponding  Unix  tools.  Discrepancies  discovered 
during the analysis of the “Received:” fields can easily 
be noted by an investigator. 
that  we  collect,  by 
launching 
domain 
The following snippet is an example “Received:” 
field from an email message that we received, which 
contains 
names 
(walking14.legessermon.com,  mx.google.com)  and 
one  IP  address  (64.192.31.14).  For  each  of  them, 
UnMask  collects  proper  forensic  information  by 
launching  the  corresponding  tools.  The  information 
shown was collected within one day after we received 
the message.  
two 
walking14.legessermon.com 
from 
Received: 
(walking14.legessermon.com [64.192.31.14]) 
     by 
e18si15752160qbe.2007.05.30.10.46.13; 
     Wed, 30 May 2007 10:46:24 -0700 (PDT) 
mx.google.com 
ESMTP 
with 
id 
to 
the 
domain 
Figure  6  shows  a  snapshot  of  the  report  section 
related 
name 
walking14.legessermon.com  found  in  the  example 
“Received:”  field  (the  snapshot  only  captured  a 
segment of it). In this section of the report, UnMask 
displays  location  and  contact  information  of  the 
organization that is responsible for the domain name 
(partially  shown  in  the  figure),  the  MX  and  DNS 
records for the corresponding domain, the route to the 
domain name, and the IP address of the domain name, 
among  other  things.  The  corresponding  IP  address 
returned  by  the  dig  tool  for  this  domain  was 
64.192.31.2, which is different from the one listed in 
the  “Received:”  field  for  the aforementioned  domain 
name. Note however that no strong conclusion can be 
drawn  from 
the  two  IP 
addresses are on the same subnet. 
this  discrepancy  since 
UnMask  collected  similar  information  about  the 
IP  address  64.192.31.14  and  the  domain  name 
mx.google.com.  We  do  not  discuss  these  results 
further due to space limitation. Note however that the 
location  and  contact 
information  returned  from 
probing the  IP  addresses  tend  to  be  more  long-lived 
and  reliable  than  the  ones  from  probing  the  domain 
148148
Figure 6: Part of header field report 
5.4 Extending UnMask capabilities 
While  our  current  reports  only  present 
the 
information  in  the  email  analyzed  and the  additional 
information  gathered  by  the  UNIX  tools,  logical 
analysis of the data could be further incorporated into 
the report.  Since PostgreSQL is a relational database, 
we  can  apply  predicate  logic  to  the  relations  in  our 
database.   
In  our  current  use  of  the  database  we  generate 
reports  simply  by  collating  the  information  gathered 
and present it in a meaningful format to the user, but 
we could do much more by applying formal logic and 
data  mining.    For  example,  we  could  data  mine  to 
identify  companies  which  are  enablers  for  phishers.  
These companies intentionally facilitate the misuse of 
resources (such as DNS registrations, site hosting, etc) 
by not enforcing policies and standard procedures, or 
worse. We  could potentially gather vital statistics on 
phishing  scams  identified  with  these  companies.  We 
could  then  query  the  database  using  predicate  logic 
statements  to  cluster  emails  which are  part  of  larger 
crimes.  A  more  concrete  example  would  be  to 
structure  a  query  that  counts  the  number  of  unique 
URLs found in the bodies of all emails in the database 
of UnMask. Then we could count the number of URLs 
in  this  set  registered  at  each  Registrar  (Go  Daddy, 
eNom,  Network  Solutions,  Tucows,  etc.)  in  order  to 
determine  if  any  Registrar  is  associated  with  a 
significantly  higher-level  phishing  activity.  This 
information  could  be  used  to  persuade  Internet 
Corporation  for  Assigned  Names  and  Numbers 
(ICANN)  to  investigate  to  see  if  there  is  cause  for 
concern. As the system is used, the techniques used by 
investigators  to  interpret  the  data  will  evolve.  The 
logic used can be folded  back into the report, so the 
system  will  not  only  automate  the  task  of  human 
gathering of data, but also automate deductions about 
the data.  
6. Conclusion 
the 
internet 
This  paper  has  described 
the  design  and 
development  of  the  UnMask  system  for  supporting 
law  enforcement  in  investigating  phishing  email 
crimes.    The  system  allows  a  law  enforcement 
investigator  to  upload  a  suspect  email  via  a  secure 
user  interface  and  then  get  a  report  with  detailed 
information  about  the  email  including  data  obtained 
from 
through  automated  searches 
launched  during  the  deconstruction  (parsing)  of  the 
email.    A  novel  aspect  of  UnMask  is  its  use  of  a 
database  to  not  only  store  information related  to  the 
email and its constituent parts (such as IP addresses, 
links, domain names), but also to organize a workflow 
to  automatically 
to  collect 
additional information from the Internet. The retrieved 
information  is  in  turn added  to  the  database.  To  the 
best  of  our  knowledge,  UnMask 
first 
comprehensive system that can automatically analyze 
emails and generate forensic reports that can be used 
for subsequent investigation and prosecution. 
launch  UNIX 
tools 
The  version  1  of  the  UnMask  is  a  working 
system,  completed  except  for  bullet  proofing  and 
hardening of the code.  The functionality is completed 
and is as described in this paper.  We next intend to 
have 
law  enforcement  use  our  system  on  an 
experimental  basis. 
the 
investigators  provide,  we  intend  to  add  additional 
features and search tools, and increase the facility of 
investigators  in  determining  the  exact  information 
they wish to gather.   
feedback 
  Using 
For example, we plan to incorporate checking for 
black-listed  sites  to  see  if  the  sending  host  or  MX 
the 
is 
the 
149149
server  is  listed  as  a  rogue  machine  and  to  inspect 
websites  with  automated  crawlers  to  search  for 
investigative  clues.    Such  searching  for  websites, 
however,  is  often  not  desired  by  law  enforcement 
because they do not want to “tip off” possible rogue 
sites  before  having  the  necessary  authority  to  shut 
them  down.  We  also  plan  to  incorporate  a  logic 
analysis module that will provide intelligent filtering 
and probability assessment of the retrieved data from 
the  UNIX  tools  to  make  the  investigator’s  job  of 
detecting 
information  (such  as  a 
suspected spoofed source address) easier. 
important 
the 
7. Acknowledgements 
This work was supported in part by the National 
Institute  of  Justice  under  grant  2005-MU-MU-K007 
and  grant  2006-DN-BX-K007.    We  wish  to  thank 
NW3C  (Bob  Hopper  and  Nick  Newman) and  FDLE 
(Mike Phillips and his group in the Computer Crime 
Center) for their invaluable feedback, help and support 
on this project.  
8. References 
[1] Anti-Phishing Working Group. 
http://www.antiphishing.org/  
[2] Phishing and Federal Law Enforcement. Referenced 
5/29/07, 
http://www.abanet.org/adminlaw/annual2004/Phishing/Phis
hingABAAug2004Rusch.ppt.  
[3] President’s Information Technology Advisory 
Committee (PITAC) (2005). Cybersecurity: A Crisis of 
Prioritization, Report to the President. Posted 2/28/2005, 
http://www.nitrd.gov/pitac/reports/20050301_cybersecurity/
cybersecurity.pdf. 
[4] Law Enforcement Battles with Botnets. Referenced 
5/29/07, http://government.zdnet.com/?p=2373. 
[5] Daubert v. Merrell Dow Pharmaceuticals, Inc. 509 U.S. 
579 (1993). 
[6] The Anti-Phishing group at Indiana University.  
http://www.indiana.edu/~phishing/. 
[7] Bob Breeden, Mike Cantey, Brett Cureton, Clifford 
Stokes, Peter Henry, Judie Mulholland, Wayne Sprague, and 
Jim Watson. The Phlorida Autopsy Report. Digital Forensic 
Practice, Journal of, 1(3):203-222, 2006. 
[8] Y. Teraguchi N. Chou, R. Ledesma and J.C. Mitchell. 
Client-side defense against web-based identity theft. In 11th 
Annual Network and Distributed System Security 
Symposium (NDSS '04), San Diego, CA, USA, February 
2004. 
[19] Joshua Goodman, Gordon V. Cormack, and David 
Heckerman, Spam and the ongoing battle for the inbox. 
Commun. ACM, 50(2), February, 2007. 
[20] Aleksander Kolcz, Abdur Chowdhury, and Joshua 
Alspector. The Impact of Feature Selection on Signature-
Driven Spam Detection. In CEAS 2004 - First Conference 
on Email and Anti-Spam, Mountain View, CA, USA, July 
2004. 
[21] William W. Cohen. Learning rules that classify email. 
In Proceedings of 1996 AAAI Spring Symposium on 
Machine Learning in Information Access (MLIA '96), 1996.  
[22] Isidore Rigoutsos and Tien Huynh. Chung-Kwei: a 
Pattern-discovery-based System for the Automatic 
Identification of Unsolicited Email Messages (SPAM). In 
CEAS 2004 - First Conference on Email and Anti-Spam, 
Mountain View, CA, USA, July 2004. 
[23] Paul Graham. A Plan for Spam. 
http://www.paulgraham.com/spam.html, 2002. 
[24] Sam Spade. 
http://www.pcworld.com/downloads/file/fid,4709-
page,1/description.html 
[25] DomainTools. http://www.domaintools.com. 
[26] Phisherman, SPARTA, Inc. 
http://www.isso.sparta.com/documents/phisherman.pdf. 
[27] Sudhir Aggarwal,  Daniel Beech, Rajarshi Das, Breno 
de Medeiros, Eric Thompson. X-Online: An Online 
Interface for Digital Decryption Tools. Proceedings of the 
2nd Int. Workshop on Systematic Approaches to Digital 
Forensics Engineering (SADFE 2007), April 2007.  
[28] PostgrelSQL, http://www.postgresql.org. 
[29] P. Rensnick, “Internet Message Format”, RFC 2822. 
April 2001. 
[30] Comprehensive Perl Archive Network. 
http://www.cpan.org/. 
[31] SQL Injection. 
http://en.wikipedia.org/wiki/SQL_Injection. 
[32] IPGEO Tools. http://www.ipgeo.com. 
[9] SpoofStick. http://www.spoofstick.com. 
[10] TrustBar. 
http://www.cs.biu.ac.il/~herzbea/Papers/ecommerce/spoofin
g.htm. 
[11] Min Wu, Robert C. Miller, and Simson L. Garfinkel. 
Do security toolbars actually prevent phishing attacks? In 
CHI '06: Proceedings of the SIGCHI conference on Human 
Factors in computing systems, pages 601-610, New York, 
NY, USA, 2006. ACM Press. 
[12] Rachna Dhamija and J. D. Tygar. The battle against 
phishing: Dynamic security skins. In SOUPS '05: 
Proceedings of the 2005 symposium on Usable privacy and 
security, pages 77-88, New York, NY, USA, 2005. ACM 
Press. 
[13] PassMark. http://www.passmarksecurity.com. 
[14] Min Wu, Robert C. Miller, and Greg Little. Web wallet: 
preventing phishing attacks by revealing user intentions. In 
SOUPS '06: Proceedings of the second symposium on 
Usable privacy and security, pages 102-113, New York, 
NY, USA, 2006. ACM Press. 
[15] Wenyin Liu, Xiaotie Deng, Guanglin Huang, and A.Y. 
Fu. An antiphishing strategy based on visual similarity 
assessment. Internet Computing, IEEE, 10(2):58-65, March-
April 2006. 
[16] Madhusudhanan Chandrasekaran, Ramkumar 
Chinchani, and Shambhu Upadhyaya. PHONEY: 
Mimicking User Response to Detect Phishing Attacks. In 
2006 International Symposium on a World of Wireless, 
Mobile and Multimedia Networks (WoWMoM'06), pages 
668-672, 2006. 
[17] Yi-Min Wang, Doug Beck, Xuxian Jiang, Roussi 
Roussev, Chad Verbowski, Shuo Chen, and Samuel T. King. 
Automated web patrol with Strider HoneyMonkeys: Finding 
web sites that exploit browser vulnerabilities. In 
Proceedings of the Network and Distributed System Security 
Symposium, NDSS 2006, San Diego, CA, USA, 2006. The 
Internet Society. 
 [18] Aaron E. Kornblum. Searching For John Doe: Finding 
Spammers and Phishers. In CEAS 2005 - Second Conference 
on Email and Anti-Spam, July 2005. 
150150