### 问题描述

我正在使用CentOS 7和Nginx服务器，之前安装的是PHP 5.4，并且一切运行正常。最近我卸载了PHP 5.4并安装了PHP 7，同时更新了相关配置文件如下：

```ini
listen = /var/run/php-fpm/php-fpm.sock
listen.owner = nginx 
listen.group = nginx
user = nginx 
group = nginx
```

为了使PHP-FPM正常工作，我将SELinux设置为宽松模式（`setenforce 0`）。在安装PHP 5.4时，我参考了以下教程以解决SELinux相关的权限问题：[Troubleshooting PHP 7 TCP Sockets with SELinux on CentOS 7/RHEL/Fedora](https://www.cloudinsidr.com/content/troubleshooting-php-7-tcp-sockets-with-selinux-on-centos-7-rhelfedora/)。

然而，在安装完PHP 7并更新所有必要的配置后，我遇到了以下错误：

```bash
sudo cat /var/log/nginx/error.log
2016/08/10 13:15:54 [alert] 2118#2118: setrlimit(RLIMIT_NOFILE, 100000) failed (1: Operation not permitted)
```

前端页面显示“502 Bad Gateway”错误。我认为这可能是与PHP 5.4类似的问题，于是我再次按照上述教程操作，但问题仍然存在。

需要注意的是，我没有更改任何文件或文件夹的权限。请问问题出在哪里？

### 解决方案建议

**不推荐完全禁用SELinux**

除非你非常清楚自己在做什么，否则不建议长时间禁用SELinux或将其设置为非强制模式。

#### 步骤一：重新标记文件系统

1. 创建一个文件 `.autorelabel`：
   ```bash
   touch /.autorelabel
   ```
2. 重启服务器：
   ```bash
   reboot
   ```

#### 步骤二：临时设置SELinux为非强制模式

1. 设置SELinux为非强制模式：
   ```bash
   setenforce 0
   ```

#### 步骤三：回归测试

1. 尝试全面测试系统的各项功能，确保没有其他问题。

#### 步骤四：创建自定义策略

1. 使用 `audit2allow` 工具生成自定义策略：
   ```bash
   sudo ausearch -m avc -ts recent > /tmp/avc.log
   sudo audit2allow -M mypol < /tmp/avc.log
   sudo semodule -i mypol.pp
   ```

#### 步骤五：恢复SELinux强制模式

1. 重新启用SELinux强制模式：
   ```bash
   setenforce 1
   ```

#### 步骤六：定期检查和维护

1. 定期重复上述步骤，确保系统安全性和稳定性。

#### 替代方案

如果你觉得SELinux过于复杂，可以考虑使用其他发行版如OpenSUSE或Ubuntu，并使用AppArmor作为替代的安全模块。

希望这些步骤能帮助你解决问题。如果有进一步的问题，请随时联系我。