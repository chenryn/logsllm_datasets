for i, j = 1, ..., n.
f AiPjP
i=1 Pi
n
P
(1 − f )AjPi
i=1 Pi
n
+
The next aspect of the model to consider is stability of
parameters in time. In the most general case, all parameters
may vary at each time step. We term this version of the
model the time-varying IC model:
P
f (t)Ai(t)Pj(t)
i=1 Pi(t)
n
(1 − f (t))Aj(t)Pi(t)
P
i=1 Pi(t)
n
+
(3)
Xij (t) =
for i, j = 1, ..., n and t = 1, ..., T .
We consider two other variants of the model which incor-
porate increasingly restrictive assumptions about the tem-
poral stability of the parameters. At high levels of aggrega-
tion, one might expect f to show stability in time (shown in
Sec. 4). This assumption results in the stable-f IC model:
Xij (t) =
P
f Ai(t)Pj(t)
i=1 Pi(t)
n
(1 − f )Aj(t)Pi(t)
P
i=1 Pi(t)
n
+
(4)
for i, j = 1, ..., n and t = 1, ..., T .
Finally, we consider the case in which connection prefer-
ences are stable in time as well. This assumption may be
justiﬁed if connection preferences reﬂect a relatively stable
underlying ‘popularity’ of services available via each node.
This assumption yields the stable-f P IC model:
Xij (t) =
P
f Ai(t)Pj
i=1 Pi
n
(1 − f )Aj (t)Pi
P
i=1 Pi
n
+
(5)
for i, j = 1, ..., n and t = 1, ..., T .
There are a number of practical reasons for considering
these diﬀerent model variants. First, consider the problem
of constructing synthetic TMs. Using the gravity model,
one must somehow synthetically generate 2n values at each
timestep t, namely {Xi∗(t)} and {X∗i(t), i = 1, ..., n}. The
stable-f IC model requires the same number of input param-
eters at each timestep: {Ai(t)} and {Pi(t), i = 1, ..., n} and
hence presumably presents roughly the same level of mod-
eling diﬃculty. However, the IC model can do signiﬁcantly
better: the stable-f P model requires only n inputs {Ai(t)}
at each timestep.
The second reason for considering diﬀerent model vari-
ants relates to the TM estimation problem. These variants
reﬂect diﬀerent amounts of outside information that must
be brought into the estimation process. When the stable-
f P model as used for TM estimation, one assumes that the
stable values of f and P have previously been measured;
then only n inputs (namely {Ai(t)}) need to estimated from
data. In the case of the stable-f model, we assume that f
has been measured previously and can be reused; here both
{Ai(t)} and {Pi(t)} are estimated from data.
3. MEASUREMENT DATA
To explore the validity and utility of the IC model, we
used three data sets.
G´eant Data: G´eant [1] is a network of 22 PoPs connect-
ing research institutions and universities across continental
Europe. The sampling rate is 1 packet out of every 1000.
The methodology used to construct OD ﬂows from netﬂow
data is detailed in [7]. We use a time bin size of 5 minutes to
construct OD ﬂows, giving us 2016 sample points for each
week’s worth of data.
Totem Data: The publicly available Totem [14] data set
comes from the same G´eant network. The data set con-
sists of 4 months of TMs, constructed from sampled netﬂow
data using the method described in [14]. Our results for the
Totem TM are very similar to those obtained with the G´eant
data above, and are often omitted due to lack of space. We
do however present this data when we want to illustrate
multi-week long behavior.
Full Packet Header traces from Abilene Backbone:
We used two hour contiguous bidirectional packet header
traces collected at the Indianapolis router node (IPLS), in
the Abilene network[2]. The links instrumented are the ones
eastbound and westbound, towards Cleveland (CLEV) and
Kansas City (KSCY).
4. MODEL EVALAUTION
We now examine how well our model can ﬁt empirical
datasets. We expect the time-varying model to ﬁt the data
best, followed by the stable-f model, with the poorest ﬁt
coming from the stable-f P model. This is based on the
number of time-varying model parameters: 3n for the time-
varying model, 2n for the stable-f model, and n for the
stable-f P model. More precisely, if we are trying to ﬁt a
dataset of OD ﬂows from a network with n nodes over t
timesteps, the gravity model has 2nt − 1 degrees of freedom
(i.e., inputs), the time-varying IC model has 3nt degrees of
% Improvement
Mean
we can do is to measure f for two large OD ﬂows in the
Abilene network since in our packet trace data the packets
in the pairs (KSCY,IPLS) and (IPLS,KSCY) ﬂow over the
IPLS-KSCY link. Due to space limitations, we refer the
reader to [5] for a complete description of our procedure for
measuring f .
t
n
e
m
e
v
o
r
p
m
I
r
o
r
r
E
l
a
r
o
p
m
e
T
%
30
25
20
15
10
5
0
0
250
500
750
1000 1250 1500 1750 2000
Time
Figure 2: Temporal % Improvements of IC-Model over
Gravity; Geant data
freedom, the stable-f model has 2nt + 1 degrees of freedom,
and the stable-f P model has nt + n + 1 degrees of freedom.
To be most conservative in our conclusions, we focus on
our weakest model, the stable-f P model. The metric we
use for measuring accuracy of model prediction here and
throughout the paper is relative l2 temporal error (as in
[12]):
qP
P
j=1(Xij (t) − ˆXij (t))2
qP
P
j=1 Xij (t)2
n
i=1
n
n
i=1
n
RelL2T (t) =
(6)
We estimate the values of f , Pi, and Ai(t) via optimiza-
tion, using the following nonlinear program:
TX
minimize
RelL2T (t)
where ˆXij (t) = f Ai(t)Pj + (1 − f )Aj (t)Pi
t=1
subject to:
Ai(t) ≥ 0 ∀i, t
Pi ≥ 0 ∀i
X
Pi = 1
i
If we assume that errors have a Gaussian distribution, this
is equivalent to a maximum-likelihood estimation of model
parameters. We use the optimization toolbox provided by
Matlab [3] to ﬁnd the solution numerically.
We ﬁt both our model and the gravity model and compare
their accuracy in Fig. 2. We plot the improvement of the
IC model over the gravity using the RelL2T (t) metric. The
improvement typically lies between 18 to 24%. The absolute
improvements lie between 0.10 - 0.12. It is both surprising
and encouraging that our model can ﬁt the data well with
a single constant f for the entire network. This implies
that our simpler IC models may be suﬃcient for the TM
applications we consider.
Characterizing f . Since the stable-f P model can in-
deed ﬁt real traﬃc data quite well, we now examine which
values for f are reasonable and whether such a parameter
setting is stable in time.
Ideally, to perform a thorough
study of observed values of f , one would need unsampled
netﬂow traces, or unsampled (to properly determine the ini-
tiator) packet header traces of all traﬃc in the network. To
the best of our knowledge no such data sets exist. What
f:IPLS−>CLEV
f:CLEV−>IPLS
0.5
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
d
e
r
u
s
a
e
M
f
0
0
20
40
80
Time (5 Min Bins)
60
100
120
Figure 3: f values over time
In Fig. 3 we plot our measured values of f . We draw
three conclusions: (1) f lies consistently in the range 0.2 to
0.3; (2) f is quite stable across time; and (3) the values of
f
(CLEV,IPLS) and f(IPLS,CLEV) are similar - which pro-
vides preliminary support for assuming spatial stability of
fij over diﬀerent (i, j) pairs.
We extracted the values of f computed from our ﬁtting
procedure in Sec. 4. We found that over a seven week period
(Totem data) f did not vary outside the narrow range of
[0.17,0.21]. The stability of f is encouraging as it means that
if f could be measured once in a while, the obtained value for
f could subsequently be used in modeling tasks for possibly
multiple weeks. We believe that the particular values for
f we observe are reﬂective of the application mix in highly
aggregated traﬃc. While applications like Web browsing
would have values of f lower than 0.2, other applications
such as P2P could have higher f values.
Characterizing Preferences. Using our ﬁtted data, we
observed the values for {Pi} over seven weeks in the Totem
data. We make two observations from Fig. 4 (the values of
{Pi} for nodes i are in arbitrary order, and the {Pi} sum to
1). First, values of Pi for any given node i are remarkably
stable over time, even over seven weeks. Combining this
observation with that of the stable f behavior, lends support
for the use of the stable-f P model. Second, the {Pi} values
are highly variable across diﬀerent node (with some nodes
as much as ten times greater than the typical value). The
high variability of {Pi} values prompts us to examine their
distributional tail. We found that a long-tailed lognormal
distribution does a better job in ﬁtting the tail.[5]. However
the distributional ﬁts should not be relied on too heavily;
we have far too few data points (22 or 23) to reliably choose
a distributional model for this data.
Characterizing Activity Levels. Finally we examine
the nature of the timeseries of activity levels, {Ai(t)}, in
our data. The variation in these values is the source of all
time-variation in the stable-f P model. Intuitively, if {Ai(t)}
represents the rate at which traﬃc is being ‘initiated’ at node
i, we expect to see familiar patterns of daily variation.
In [5] we provide the details of our ﬁndings on activity
0.35
0.3
0.25
0.2