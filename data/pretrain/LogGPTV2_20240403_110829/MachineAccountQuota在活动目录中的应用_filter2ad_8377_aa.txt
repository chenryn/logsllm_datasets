# MachineAccountQuota在活动目录中的应用
|
##### 译文声明
本文是翻译文章，文章原作者 netspi，文章来源：blog.netspi.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 一、前言
`MachineAccountQuota`（MAQ）是一个域级别的属性，默认情况下可以允许非特权用户将主机连接到活动目录（AD）域，能连接的主机数最多不超过10台。我与MAQ的缘分可以追溯到很早以前，当时我还是一名网络管理员，我的任务是将某个远程系统加入AD中。添加10台主机后，当我想再新加入一台主机时看到了如下错误信息：
我发现这个错误信息与[ms-DS-MachineAccountQuota](https://docs.microsoft.com/en-us/windows/desktop/adschema/a-ms-ds-machineaccountquota)有关，错误信息表明我当前使用的AD访问权限并不满足要求。我联系了某个管理员解释当前遇到的情况，虽然他并不知道如何为我的账户增加配额，但却提供了一个域管账户，以便我继续工作。
## 二、Powermad
2017年年末我发布了[Powermad](https://github.com/Kevin-Robertson/Powermad)工具，这款工具集合了许多PowerShell函数，参考了[加入LDAP域](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adod/87edaa57-425e-479d-b98c-a40116032463)过程中涉及到的许多数据包。深入分析这些数据包后，我找到了一段经过加密的LDAP
add数据，可以用来创建主机账户对象（machine account object）。未经加密的LDAP add数据如下所示：
在开发Powermad时，我最主要的目的是想在测试过程中更加方便地使用MAQ。之前我看到过测试人员利用MAQ将完整的Windows系统加入域。我不希望MAQ只限于这种使用场景，而是希望能够将某个主机账户加入域中。
## 三、MachineAccountQuota的作用
在开发Powermad的过程中，除了知道默认情况下有10个系统数量限制外，我还学到了关于MAQ的许多知识。最近一段时间，[Elad
Shamir](https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html)、[Harmj0y](https://posts.specterops.io/a-case-study-in-wagging-the-dog-computer-takeover-2bcb7f94c783)以及[Dirk-jan](https://dirkjanm.io/worst-of-both-worlds-ntlm-relaying-and-kerberos-delegation/)公布了一些非常好的研究文章，其中也涉及到MAQ相关内容，我从中汲取了更多信息。
总而言之，我得出一个结论：在某些情况下，`MachineAccountQuota`的确非常有用。
在本文中，我将与大家分享作为攻击者在使用MAQ的过程中我们要遵循的10条规则。我们的应用场景是将某个主机账户加入AD中，而不是添加完整的Windows操作系统。随后，我会将其中某些规则应用到MAQ
+ Kerberos无约束委派使用场景中。最后，我会介绍如何防御与MAQ有关的攻击方法。
## 四、具体规则
我将自己掌握的MAQ知识总结成10条规则，希望大家可以使用这些规则来判断能否在实际环境中使用MAQ。
**1、MAQ可以让非特权用户将主机账户对象加入域中**
默认情况下，非特权用户可以创建10个主机账户。
在调用MAQ时，我们并不需要做太多特别的操作，只需要使用尚未被直接授予域加入权限的账户即可。
**2、创建者账户的SID存储在主机账户的`ms-DS-CreatorSID`属性中**
只有当创建者不是管理员，或者尚未被委派添加主机账户的权限时，AD才会设置该属性。
AD同样会使用`ms-DS-CreatorSID`来计算MAQ的当前数值。从测试角度来看，要记住该属性是指向创建者账户的一个指针，即使使用嵌套的MAQ也是如此。因此，使用MAQ创建主机账户并不能完全保护创建者账户。
如果目标防护机制对`ms-DS-CreatorSID`属性比较敏感，那么很有可能已经禁用了MAQ。
**3、通过MAQ创建的主机账户位于Domain Computers（域主机）组中**
如果Domain Computers组被授予了额外权限，那么这些权限也会通过MAQ扩展到未授权的用户。比如，我们有可能在本地管理员组中找到Domain
Computers:
或者如果运气更好，我们有可能在Domain Administrators（域管理员）组成员中找到这个组。
稍微扩展一下，如果我们发现目标环境会根据主机账户名特征，自动化将主机归入特定OU或者组中，此时我们可以通过MAQ来利用这种自动化策略。
**4、创建者账户会被授予某些主机账户对象属性的写入权限**
通常情况下包含如下属性：
    AccountDisabled
    description
    displayName
    DnsHostName
    ServicePrincipalName
    userParameters
    userAccountControl
    msDS-AdditionalDnsHostName
    msDS-AllowedToActOnBehalfOfOtherIdentity
    samAccountName
我们可以根据实际情况修改这些属性。
然而，某些属性的取值仍被限定在一定范围内。
**5、主机账户具备自身某些属性的写入权限**
其中就包含[msDS-SupportedEncryptionTypes](https://www.harmj0y.net/blog/redteaming/kerberoasting-revisited/)属性，该属性可以影响Kerberos协商加密方法。现代Windows系统会在加入域的过程中将该属性值设置为28.
**6、添加主机账户时对属性验证非常严格**
属性值需要匹配系统要求，如果不匹配，添加过程就会失败，如下图所示，其中`samAccountName`属性值不正确。
奇怪的是，添加主机账户后系统会放宽某些验证规则。
**7、我们可以将`samAccountName`修改为与域内已有`samAccountName`属性不同的值**
修改这个属性可以帮我们在合法流量中隐藏攻击行为，比如我们可以删除其中的`$`字符，或者将其改成满足现有账户命名规范的值。有趣的是，`samAccountName`末尾甚至可以是空格符，这样就能仿冒现有的域账户。