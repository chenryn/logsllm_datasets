The Jenkins ShiningPanda plugin offers a "Manage Jenkins - Configure System" setting for Python installations, which includes an option to install Python automatically. This feature is intended to simplify the process of setting up Python on your build agents. However, you may be experiencing some difficulty in understanding how to use this functionality.

When using the "Add Installer" dropdown, you are presented with the following options:

- Extract .zip/.tar.gz
- Run Batch Command
- Run Shell Command

These options can be used to download and extract a Python distribution or run commands to install Python. However, it might not be immediately clear how to use these options to install Python on different operating systems, such as Windows, macOS, and Linux.

### Installing Python on Different Operating Systems

#### 1. **Windows:**
   - **Option:** Run Batch Command
   - **Example:**
     ```batch
     @echo off
     curl -o python-installer.exe https://www.python.org/ftp/python/3.9.7/python-3.9.7-amd64.exe
     start /wait python-installer.exe /quiet InstallAllUsers=1 PrependPath=1
     ```

#### 2. **macOS:**
   - **Option:** Run Shell Command
   - **Example:**
     ```sh
     curl -O https://www.python.org/ftp/python/3.9.7/python-3.9.7-macosx10.9.pkg
     sudo installer -pkg python-3.9.7-macosx10.9.pkg -target /
     ```

#### 3. **Linux:**
   - **Option:** Run Shell Command
   - **Example (for Debian-based systems):**
     ```sh
     sudo apt-get update
     sudo apt-get install -y python3.9
     ```

### Using Virtual Environments

While the ShiningPanda plugin does not directly install Python on the build agents, it can utilize existing Python installations to create and manage virtual environments. This approach is often more flexible and ensures that your builds are isolated from the system's global Python environment.

To set up a virtual environment using ShiningPanda:

1. **Configure Python Installation:**
   - In the "Manage Jenkins - Configure System" section, add a new Python installation by specifying the path to the Python executable on each build agent.

2. **Create and Use Virtual Environments:**
   - In your Jenkins job configuration, use the ShiningPanda plugin to create a virtual environment and run your build commands within it.
   - **Example:**
     ```sh
     # Create a virtual environment
     virtualenv venv --python=python3.9
     # Activate the virtual environment
     source venv/bin/activate
     # Install dependencies
     pip install -r requirements.txt
     # Run your build commands
     python setup.py test
     # Deactivate the virtual environment
     deactivate
     ```

### Conclusion

While the ShiningPanda plugin does not provide a direct, automated way to install Python on your build agents like some other plugins do for tools like Ant, you can still achieve this by using the provided installation options. Additionally, leveraging virtual environments can help you manage Python dependencies more effectively across different operating systems.