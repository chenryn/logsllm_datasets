有关。代理类可能是我们想代理的那个类的一个子类，在这种情况
下，它会继承被代理类的所有方法，而不仅是我们想代理的那些方
法。或者，我们可以利用潜在类型，并在代理类中只定义那些被代
理的方法；但问题是，由于所有东西都是对象，代理类会继承
Object类的所有方法。理想情况下，我们希望代理两个方法的类就
只有两个方法，但我们不清楚如何才能做到这一点。这个类会带有
从它的祖先那里继承来的所有方法。我们可以求助于一些技巧来减
少继承的方法的数量，例如，在一些Smalltalk的方言实现中，可以
让某个类成为nil的子类，而不是Object的子类。这样就不会继承任
何东西，但我们需要从Object那里复制和粘贴一些必要的方法
（Alpert等1998）。在Squeak中，我们可以让它成为ProtoObject的子
类，而不是Object的子类。
当我们并始寻找从哪里继承了什么时，事情就变得复杂了。因为在
Smalltalk中所有东西都是对象，包括类也是对象，所以我们可能会
想知道类是哪一种实例。我们发现是元类（metaclass）的实例，某
个类的元类的名称就是该类的名称加上"class”。例如，Object的元
类就是Objectclass。这是合情合理的惯例，但这并没有真正回答这
个问题，因为我们会想知道元类是哪一种实例。我们发现元类是
Metaclass类的实例（这里没有class后缀）。Metaclass是另一个类的
实例，名为Metaclassclass（包含class后缀），而它又必须是某个类
的实例，所以它被作为Metaclass的实例。（如果读者认为正在阅读
TerryGilliam的"TwelveMonkeys”的手稿，那是很自然的想法，不必
受到责怪。）如果我们同时考虑到继承关系，事情就会变得更复杂
（到目前为止，我们还没有提到继承）。我们发现Object类是Class
的子类，它又是Class类的一个实例，Class类是ClassDescription的子
类，Class类是Behavior的子类，Behavior是Object的子类，在Squeak
中，ProtoObject是继承层次结构的最顶端。图14-2展示了这种情
形。请注意，我们没有包含Object之下的类。读者可以尝试合并图
14-1和图14-2（不要忘记添加元类，从SmallInteger开始向上画）。
可能是我们不能够拥有太多的好东西，让所有东西都是对象是很好
的，但顺着这个公理走下去，不一定导致容易处理的结构。幸运的
是，大多数Smalltallk程序员不需要关注这些事情。
“所有东西都是对象”和“所有事情都由消息完成”的规定还有其他一
些后果，这些后果是程序员的日常工作需要关心的。所有稍具编程
经验的程序员都会预期：
1294
---
## Page 1296
3 + 5 * 7 = = 3 8
结果为真，但不巧的是，在Smalltalk中，下面的表达式为真：
3 + 5 * 7 == 5 6
原因是二元算术运算符只是数字类的选择器。所以它们像其他消息
一样传递，没有什么规定一个二元消息一定要在另一个二元消息之
前。确实，当你熟悉了这个游戏规则后，这样的结果是有意义的。
但是这还是让人想不明白。在Smalltallk环境中，很容易在工作空间
里检查算术运算，但也许最好是程序员永远无需考虑这样的问题。
Smalltalk环境本身是Smalltalk的一项了不起的发明。回到20世纪80
年代，那时候图形显示器还很少，大多数编程都在单色文本终端上
进行，Smalltalk为基于虚拟机上的一门语言实现了一个图形用户界
面。这可能超越了它的时代。虚拟机要再等10年，才由Java带给主
流编程社区。GUI赢得了胜利，但只是在硬件价格降下来之后。同
时，具备这些要求的环境在当时被认为（也许被认为）不适合大多
数的目的。但是还有一些微妙的东西在继续。
Smalltallk环境实际上是多个类构成的生态系统，你可以利用它来工
作，也不得不利用它来工作。在Smalltalk中创建一个新类的唯一合
理方式，就是利用合适的浏览器找到你想要的类，并从它继承。你
可以使用自己喜欢的编辑器和磨练得很好的技能，以及用各种语言
创建的命令行工具，但Smalltalk不同。你可能会喜欢Smalltallk设计
者精心提供的类库，但当你换个角度想想时，你可做的事情并不
多。在它里面时你感觉很好，但你必须在它里面做所有事情。这可
能不是程序员愿意接受的。有可能你在读了本章的前面几页之后，
就会冲过去下载并安装Smalltalk，亲自体验一下，然后当你意识到
所有东西都不一样、不熟悉时，就会举手投降。
1295
---
## Page 1297
Objectclass
Class
ClassDescription
Behavior
Classclass
Object
Behaviorclass
Metaclass
Metaclassclass
ClassDescriptionclass
图14-2：Smalltalk中的“意大利面条”
这一点暗示了Smalltalk为什么从未变成主流语言。Smalltalk是一种
坚定不移的语言，它不做折中。它定义了一种新的编程模型，它使
用的概念后来被许多其他语言所采用，它在很多方面是一个范例，
被大家模仿。这一点与建筑界区别不大。
1296
---
## Page 1298
14.4砖块和灰浆建筑架构
在所有的建筑奇迹中，在美国最受推崇的房子一定是Fallingwater，
由FrankLloydWright在1935年设计，“可能是20世纪最赖繁出现在举
例说明中的房子”（Nuttgens，1997）。Fallingwater建在名为Bear
Run的深谷中的一处瀑布之上。这座房子是为EdgarKaufmann,Sr.建
造的，他是匹兹堡的一名百万富商。在1937年—1963年间，它被用
作Kaufimann一家周末度假的屋子，之后它被捐赠给了Western
PennsylvaniaConservancy，在1964作为博物馆向公众开放。
即使是这所房子的照片（参见图14-3）也能让人感觉平静，分享房
子与其周围环境的美。Wright努力追求的是让自然与建筑成为一个
整体，让艺术和自然交相辉映。在Fallingwater的设计中，自然进入
了建筑内部，建筑成为了自然的一部分。这是现代建筑的杰作，仍
然吸引我们思考建筑师希望在他的作品中注入的含义。
但房子不只是用来看的，它需要让人居住。我们不能住在
Fallingwater中（我们最多只能参观它），但也许我们可以想象住在
里面是什么感觉。
很有可能我们是错的。在StewardBrands的《HowBuildingsLearn》
（1995）中我们得知：
Wright有生之年的最后一件杰作，即宾夕法尼业的Fallingwater，被
AIA投票推举为“有史以来最好的美国建筑”，饱受渗漏的烦恼。渗
漏破坏了窗户、石墙，并使水泥结构退化。对于它最初的拥有者来
说，Fallingwater被称为"很快发霉"和"七桶之屋”。它确实是一座漂
亮而有影响力的房子，但无法居住。（引自Judith Donahue，“Fixing
Fallingwater's Flaws,"Architecture,Nov.1989)
这种评判可能过于苛刻。曾在Fallingwater中住过的Edgar
Kaufimann,Jr.所说的话有些不同：
一些错误困扰着Fallingwater，但房子特殊的美和它因其建造环境而
给居住者带来的喜悦也应该正确评价。住在当中确实有些缺点，需
要花些力气来克服。（Kaufimann1986）
这种评判仍然不能全信。EdgarKaufimann,Jr.不是利益无关方。他在
1934年加入了Wright的TaliesinFellowship。（23名学徒在1932年来
1297
---
## Page 1299
到SpringGreen,Wisconsin，开始生活和学习，从此开始了“TheFrank
LloydWrightSchoolofArchitecture”，现在这所学校还在。）他向他
的父母介绍这所房子，在这所房子设计和建造时，他通常是Wright
和他父母之间的中间人。
另一个建筑奇迹可能是20世纪最有影响力的房子（影响力在于它的
风格确定了这个世界的现代城市的形态结构），是巴黎之外位于
Poissy的萨瓦别墅（VillaSavoye），它由瑞士建筑师Charles-édouard
Jeanneret-Gris，即LeCorbusier设计（参见图14-4）。VillaSavoye和
Fallingwater一样，设计时是作为周末度假小屋。它是在1928一1931
年之间建造的。Wright对于建筑的职责有着强列的观点，Le
Corbusier也有很强烈的想法，但思想却相当不同。Wright探索艺术
与自然的关系：
LeCorbusier发明了一种按比例的系统，即"模度（Modulor）”，它
结合了黄金分割、六英尺的人形和和协的比例，形成了一个精巧的
科布森法则，通过设想重新考虑了机械化和“自然秩序”。（Curtis
1996）
1298
---
## Page 1300
图
14-3:Fallingwater
1299
---
## Page 1301
图14-4：萨瓦别墅
萨瓦别墅激起了人们对建筑师的敬畏：
像所有高度有序的工作一样，萨瓦别墅不容易归为哪个类别。它既
简单又复杂、既睿智又感性。它充满了思想，同时又把这些思想直
接通过形体、容积和空间的"特定关系"表达出来。这是现代建筑的
一个“经典"时刻，同时又与过去的建筑有着密切的关系。这是Le
Corbusier哲学的核心关注点，即对现代生活的观点通过建筑形式的
持久价值而表达出来，在萨瓦别墅中人们会意识到它对古老经典主
题的回应：静谧、均衡、通透以及简单的横梁结构。（Curtis
1996)
人们可能不同意这样的陈述，对于有些人来说，萨瓦别墅可能看起
来就像一个白盒子，已准备吊走，毕竟，讨论品味是没有意义的。
从另外一些不同的角度来考虑，除了它作为房子的实用价值之外，
我们可能会传递更多明白的评判。下面是LeCorbusier的客户采取的
相当不同的观点：
尽管萨瓦家一开始就不同意，LeCorbusier还是坚持平顶比斜顶更好
（根据技术和经济上的理由来推测）。他向他的客户保证建造的费
用更低，更容易维护，在夏天更凉快，而且萨瓦夫人可以在上面跳
健身操，不会受到底楼的潮气困扰。但在一家人入住后刚一个星
1300
---
## Page 1302
期，屋顶在Roger（萨瓦夫妇的儿子）卧室的位置就并始漏了，进
了很多水，导致孩子患上了胸部感染，后来转成了肺炎，最后导致
他花了一年的时间在Chamonix的疗养院进行康复。（DeBotton
2006）
这听起来就像是建筑师与客户间的一个真实的笑话，但建筑师似乎
还有一条窄路逃走：
在1936年，别墅正式完工的6年之后，萨瓦夫人在一封（雨水飞溅
过的）信中表达了她对平顶的看法：客厅在下雨，弯道在下雨，车
库的墙完全湿透了。更有甚者，我的卫生间仍在下雨，不好的天气
里简直是洪水，水从顶灯上掉下来。LeCorbusier保证问题马上就会
解决，然后寻找机会提醒他的客户，他的平顶设计在世界各地的建
筑评论家那里受到多么热烈的追捧：“你应该在楼的大顶的桌子上
放一个签名本，请你的客人在上签下名字和地址。你会发现收集到
了许多的漂亮签名”。但这种签名收集的建议对萨瓦一家没带来什
么安慰。“在我无数次的申请之后，你终于同意这所你在1929年建
造的房子是不能住人的”，萨瓦女士在1937年秋天告诫说。“你的可
信度正受危害，而我没有必要为此买单。请马上将它修复得可以居
住。我真诚地希望我不必将此事诉诸法律。”只到第二次世界大战