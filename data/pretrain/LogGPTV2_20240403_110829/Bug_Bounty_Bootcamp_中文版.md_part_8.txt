Now, here is an example from a better report:
现在，这里有一个来自更好的报告的例子：
1.  Make two accounts on *example.com* : account A and account B.
2.  Log in to *example.com* as account A, and visit
    *https://example.com/change_password* .
3.  Fill in the desired new password in the **New password** field,
    located at the top left of the page.
4.  Click the **Change Password** button located at the top right of the
    page.
5.  Intercept the POST request to *https://example.com/change_password*
    and change the `       user_id      ` POST parameter to the user ID
    of account B.
6.  You can now log in to account B by using the new password you've
    chosen.
Although the security team will probably still understand the first
report, the second report is a lot more specific. By providing many
relevant details, you can avoid any misunderstanding and speed up the
mitigation process.
虽然安全团队可能仍然能够理解第一个报告，但第二个报告更加具体。提供许多相关细节，可以避免任何误解并加快缓解过程。
### Step 5: Provide a Proof of Concept {#c02.xhtml#h2-123456c01-0005}
For simple vulnerabilities, the steps you provide might be all that the
security team needs to reproduce the issue. But for more complex
vulnerabilities, it's helpful to include a video, screenshots, or photos
documenting your exploit, called a *proof-of-concept (* *POC* *)* file.
对于简单漏洞来说，您提供的步骤可能就足够让安全团队能够再现这个问题了。但对于更复杂的漏洞而言，包含一段视频、屏幕截图或照片来记录你的攻击过程便有助于我们理解，这些被称作概念证明（Proof-of-concept,
POC）文件。
[ ]{#c02.xhtml#Page_19 .pagebreak title="19"} For example, for a CSRF
vulnerability, you could include an HTML file with the CSRF payload
embedded. This way, all the security team needs to do to reproduce the
issue is to open the HTML file in their browser. For an XML external
entity attack, include the crafted XML file that you used to execute the
attack. And for vulnerabilities that require multiple complicated steps
to reproduce, you could film a screen-capture video of you walking
through the process.
例如，针对CSRF漏洞，您可以包含一个带有嵌入的CSRF负载的HTML文件。这样，安全团队只需要在浏览器中打开HTML文件即可复现问题。对于XML外部实体攻击，包含您用于执行攻击的精心制作的XML文件。对于需要多个复杂步骤才能重现的漏洞，您可以拍摄屏幕录像，让观众跟着您的步骤。
POC files like these save the security team time because they won't have
to prepare the attack payload themselves. You can also include any
crafted URLs, scripts, or upload files you used to attack the
application.
这些POC文件将为安全团队节省时间，因为他们无需自己准备攻击载荷。您还可以包括任何定制的URL、脚本或上传文件，用于攻击应用程序。
### Step 6: Describe the Impact and Attack Scenarios {#c02.xhtml#h2-123456c01-0006}
To help the security team fully understand the potential impact of the
vulnerability, you can also illustrate a plausible scenario in which the
vulnerability could be exploited. Note that this section is not the same
as the severity assessment I mentioned earlier. The severity assessment
describes the severity of the consequences of an attacker exploiting the
vulnerability, whereas the attack scenario explains what those
consequences would actually look like.
为了帮助安全团队充分了解漏洞可能产生的影响，您还可以举出漏洞可能被利用的合理场景。请注意，这一部分与之前提到的严重性评估不同。严重性评估描述的是攻击者利用漏洞所造成后果的严重程度，而攻击场景则解释了这些后果实际上会是什么样的。
If hackers exploited this bug, could they take over user accounts? Or
could they steal user information and cause large-scale data leaks? Put
yourself in a malicious hacker's shoes and try to escalate the impact of
the vulnerability as much as possible. Give the client company a
realistic sense of the worst-case scenario. This will help the company
prioritize the fix internally and determine if any additional steps or
internal investigations are necessary.
如果黑客利用了这个漏洞，他们能够接管用户帐户吗？或者他们能够窃取用户信息并造成大规模的数据泄露吗？请将自己置身于一个恶意黑客的角度，并尝试最大限度地升级漏洞的影响。给客户公司一个最坏情况的现实感。这将有助于公司确定内部优先修复，并确定是否需要任何额外的步骤或内部调查。
Here is an example of an impact section:
以下是一个影响部分的示例：
> Using this vulnerability, all that an attacker needs in order to
> change a user's password is their `       user_id      ` . Since each
> user's public profile page lists the account's `       user_id      `
> , anyone can visit any user's profile, find out their
> `       user_id      ` , and change their password. And because
> `       user_id      ` s are simply sequential numbers, a hacker can
> even enumerate all the `       user_id      ` s and change the
> passwords of all users! This bug will let attackers take over anyone's
> account with minimal effort.
>
> 利用这个漏洞，攻击者只需要知道用户的 user_id
> 就能够更改他们的密码。由于每个用户的公共个人资料页面都列出了帐户的
> user_id，任何人都可以访问任何用户的个人资料页面，找到他们的 user_id
> 并修改他们的密码。而且，由于 user_id
> 仅仅是顺序数字，黑客甚至可以枚举所有的 user_id
> 并更改所有用户的密码！这个漏洞会让攻击者用最小的努力就能接管任何人的帐户。
A good impact section illustrates how an attacker can realistically
exploit a bug. It takes into account any mitigating factors as well as
the maximum impact that can be achieved. It should never overstate a
bug's impact or include any hypotheticals.
一个好的影响部分应该说明攻击者如何现实地利用一个漏洞。它考虑任何缓解因素以及可能达到的最大影响。它不应夸大漏洞的影响力或包含任何假设。
### Step 7: Recommend Possible Mitigations {#c02.xhtml#h2-123456c01-0007}
You can also recommend possible steps the security team can take to
mitigate the vulnerability. This will save the team time when it begins
researching mitigations. Often, since you're the security researcher who
discovered the vulnerability, you'll be familiar with the particular
behavior of that application feature, and thus in a good position to
come up with a comprehensive fix.
您也可以向安全团队推荐可能采取的措施来减轻其漏洞。当安全团队开始研究减轻措施时，这将节省时间。通常，作为发现漏洞的安全研究员，您将熟悉该应用程序功能的特定行为，因此处于提出综合解决方案的良好位置。
[ ]{#c02.xhtml#Page_20 .pagebreak title="20"} However, don't propose
fixes unless you have a good understanding of the root cause of the
issue. Internal teams may have much more context and expertise to
provide appropriate mitigation strategies applicable to their
environment. If you're not sure what caused the vulnerability or what a
possible fix might be, avoid giving any recommendations so you don't
confuse your reader.
但是，除非你对问题的根本原因有很好的理解，否则不要提出修复建议。内部团队可能拥有更多的背景和专业知识，可以提供适用于他们的环境的适当减轻策略。如果你不确定漏洞的原因或可能的修复方法，最好不要提供任何建议，这样你就不会让你的读者感到困惑。
Here is a possible mitigation you could propose:
这里是你可以提出的可能的缓解措施：
> The application should validate the user's `       user_id      `
> parameter within the change password request to ensure that the user
> is authorized to make account modifications. Unauthorized requests
> should be rejected and logged by the application.
>
> 应用程序应在更改密码请求中验证用户的user_id参数，以确保用户有权进行帐户修改。未经授权的请求应被拒绝并由应用程序记录。
You don't have to go into the technical details of the fix, since you
don't have knowledge of the application's underlying codebase. But as
someone who understands the vulnerability class, you can provide a
direction for mitigation.
作为一个理解漏洞类别的人，你无需深入修复的技术细节，因为你并不了解应用程序底层代码。但是，你可以为缓解提供一个方向。
### Step 8: Validate the Report {#c02.xhtml#h2-123456c01-0008}
Finally, always validate your report. Go through your report one last
time to make sure that there are no technical errors, or anything that
might prevent the security team from understanding it. Follow your own
Steps to Reproduce to ensure that they contain enough details. Examine
all of your POC files and code to make sure they work. By validating
your reports, you can minimize the possibility of submitting an invalid
report.
最后，一定要验证您的报告。仔细检查一遍您的报告，确保没有技术错误或任何可能阻止安全团队理解的内容。按照您自己的重现步骤确保其包含足够的细节。检查所有的POC文件和代码以确保其可用。通过验证您的报告，您可以最大程度地减少提交无效报告的可能性。
### Additional Tips for Writing Better Reports {#c02.xhtml#h2-123456c01-0009}
Here are additional tips to help you deliver the best reports possible.
以下是一些建议，帮助您提供最佳报告。
#### Don't Assume Anything {#c02.xhtml#h3-123456c01-0001}
First, don't assume that the security team will be able to understand
everything in your report. Remember that you might have been working
with this vulnerability for a week, but to the security team receiving
the report, it's all new information. They have a whole host of other
responsibilities on their plates and often aren't as familiar with the
feature as you. Additionally, reports are not always assigned to
security teams. Newer programs, open source projects, and startups may
depend on developers or technical support personnel to handle bug
reports instead of having a dedicated security team. Help them
understand what you've discovered.
首先，不要假定安全团队能够理解您报告中的所有内容。请记住，您可能已经研究这个漏洞一周了，但对于接收报告的安全团队而言，这都是新信息。他们可能有很多其他的责任，并且通常不像你那么熟悉这个功能。此外，报告并不总是分配给安全团队。新的程序、开源项目和创业公司可能依赖开发人员或技术支持人员来处理漏洞报告，而不是有专门的安全团队。帮助他们理解您发现了什么。
Be as verbose as possible, and include all the relevant details you can
think of. It's also good to include links to references explaining
obscure security knowledge that the security team might not be familiar
with. Think about the potential consequences of being verbose versus the
consequences of leaving out essential details. The worst thing that can
happen if you're too wordy is that your report will take two extra
minutes to read. But if you leave out important details, the remediation
of the vulnerability might get delayed, and a malicious hacker might
exploit the bug.
尽可能详细地描述，包括所有相关细节。最好还要提供链接，以便解释安全团队可能不熟悉的晦涩安全知识。请考虑冗长报告的潜在后果和省略关键细节的后果。过分详细的最坏结果就是你的报告需要多花两分钟来阅读。但是如果你遗漏了重要细节，漏洞的修复工作可能会延迟，造成恶意黑客利用漏洞的后果。
#### [ ]{#c02.xhtml#Page_21 .pagebreak title="21"} Be Clear and Concise {#c02.xhtml#h3-123456c01-0002}
On the other hand, don't include any unnecessary information, such as
wordy greetings, jokes, or memes. A security report is a business
document, not a letter to your friend. It should be straightforward and
to the point. Make your report as short as possible without omitting the
key details. You should always be trying to save the security team's
time so they can get to remediating the vulnerability right away.
另一方面，不要包含任何不必要的信息，比如冗长的问候、笑话或表情包。一份安全报告是一份业务文件，而不是给朋友的信。它应该简单明了，直截了当。在不遗漏关键细节的情况下，尽量让报告尽可能简短。你应该一直在努力节省安全团队的时间，这样他们就可以立即开始修复漏洞。
#### Write What You Want to Read {#c02.xhtml#h3-123456c01-0003}
Always put your reader in mind when writing, and try to build a good
reading experience for them. Write in a conversational tone and don't
use leetspeak, slang, or abbreviations. These make the text harder to
read and will add to your reader's annoyance.
写作时要时刻考虑读者，尝试为他们创造良好的阅读体验。使用谈话式的语气，不要使用网络语言、俚语或缩写。这些会让文章更难读，会让读者更加恼怒。
#### Be Professional {#c02.xhtml#h3-123456c01-0004}
Finally, always communicate with the security team with respect and
professionalism. Provide clarifications regarding the report patiently
and promptly.
最后，始终以尊重和专业的态度与安全团队沟通。耐心并及时地提供有关报告的澄清。
You'll probably make mistakes when writing reports, and miscommunication
will inevitably happen. But remember that as the security researcher,
you have the power to minimize that possibility by putting time and care
into your writing. By honing your reporting skills in addition to your
hacking skills, you can save everyone's time and maximize your value as
a hacker.
写报告时可能会犯错，不可避免地会有误传情况发生。但要记住，作为安全研究人员，通过投入时间和精力来撰写报告，您有能力最小化这种可能性。通过磨练报告技巧和黑客技能，您可以为大家节省时间，最大化您作为黑客的价值。
## Building a Relationship with the Development Team {#c02.xhtml#h1-123456c01-0002}
Your job as a hacker doesn't stop the moment you submit the report. As
the person who discovered the vulnerability, you should help the company
fix the issue and make sure the vulnerability is fully patched.
作为一名黑客，你的工作不会在提交报告的那一刻结束。作为发现漏洞的人，你应该帮助公司修复问题，并确保漏洞得到充分修补。
Let's talk about how to handle your interactions with the security team
after the report submission, and how to build strong relationships with
them. Building a strong relationship with the security team will help
get your reports resolved more quickly and smoothly. It might even lead
to bigger bug bounty payouts if you can consistently contribute to the
security of the organization. Some bug bounty hunters have even gotten
interviews or job offers from top tech firms because of their bug bounty
findings! We'll go over the different states of your report, what you
should do during each stage of the mitigation process, and how to handle
conflicts when communicating with the security team.
让我们谈谈如何处理提交报告后与安全团队的互动，并与他们建立牢固的关系。与安全团队建立良好的关系将有助于更快、更顺利地解决报告问题。如果您可以持续为组织的安全做出贡献，这甚至可能导致更高的漏洞赏金支付。一些漏洞赏金猎人甚至因他们的漏洞发现而得到了顶级科技公司的面试或工作机会！我们将探讨报告的不同状态，在缓解过程的每个阶段中应该做些什么，以及在与安全团队沟通时如何处理冲突。
### Understanding Report States {#c02.xhtml#h2-123456c01-0010}
Once you've submitted your report, the security team will classify it
into a *report state* , which describes the current status of your
report. The report state will change as the process of mitigation moves
forward. You can find the report state listed on the bug bounty
platform's interface, or in the messages you receive from security
teams.
一旦您提交了您的报告，安全团队将对其进行分类，以描述您的报告的当前状态。随着减轻过程的推进，报告状态将发生变化。您可以在漏洞赏金平台的界面上找到报告状态，或在您从安全团队收到的消息中找到报告状态。
#### [ ]{#c02.xhtml#Page_22 .pagebreak title="22"} Need More Information {#c02.xhtml#h3-123456c01-0005}
One of the most common report states you'll see is *need more
information* . This means the security team didn't fully understand your
report, or couldn't reproduce the issue by using the information you've
provided. The security team will usually follow up with questions or
requests for additional information about the vulnerability.
你最常见到的报告之一是需要更多信息。这意味着安全团队没有完全理解你的报告，或者无法通过你提供的信息复现问题。安全团队通常会跟进问题或请求有关漏洞的其他信息。