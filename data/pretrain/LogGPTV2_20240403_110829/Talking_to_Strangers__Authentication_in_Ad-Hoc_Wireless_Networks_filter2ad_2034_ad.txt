group : A
PKA
1
2


1
A b
B b
A
B
B :
C :
Participants exchange authenticated DifÔ¨Åe-Hellman public values over the wireless channel:
PKB
group : B
Participants continue with their chosen protocol to derive a shared secret key K:
2


1
1


Figure 7. Group key exchange protocol with no designated group manager.
PROTOCOL MSG 1A
PROTOCOL MSG 1B
B
C
The various symbols are as in Figure 6; the public keys PKA, etc. are DifÔ¨Åe-Hellman public values.
cols discussed in Section 3.1 with the group manager to
authenticate itself, and then receive the group key over a
secured wireless channel. When a member leaves a group,
the group manager can distribute a new group key to all re-
maining members over the wireless link. This is possible
because the group manager has established shared secrets
with all of the group members.
4.2. Unmanaged Groups
There are at least three problems with centrally man-
aged groups. First, the group manager presents a single
point of attack. Not only does it know the group key, it
also knows shared secrets with every group member. Sec-
ond, the group manager is trusted to generate and distribute
all group keys; many applications are not compatible with
such a distinguished trusted party. Third, the group man-
ager cannot easily leave the group, since then there would
be no one left to manage it. As a result, there is a large
family of group key exchange protocols (e.g., [12, 11]) de-
signed to allow all members to equally participate in key
generation, and hence all to be equally trusted. We would
like to use our framework to authenticate this class of pro-
tocols as well.
Most group key-exchange protocols employ some sort of
modiÔ¨Åed DifÔ¨Åe-Hellman key exchange among group mem-
bers [12, 11]. However, just like two-party DifÔ¨Åe-Hellman,
we know that we can establish a shared secret with some-
one, but we do not know necessarily who that someone is.
As in the two-party case, these protocols assume that all
group members participate in a shared public key infras-
tructure, or have previously exchanged public keys [12].
If we use pre-authentication over location-limited chan-
nels, these assumptions no longer have to be made. We can
use a broadcast location-limited channel to allow all group
participants to commit to their public keys publically to one
or more group members. Group members can then proceed
with their chosen group key exchange protocol over the
wireless link using these authenticated keys. In Figure 7,
we show an example of such an exchange.
Group members who join asynchronously can broadcast
their key commitments over the location-limited channel to
the rest of the group as they arrive, and a randomly selected
current group member can respond, thus ensuring mutual
authentication. The chosen group key exchange protocol is
used to handle the details of updating the shared group key
for these new group members, or revoking keys of depart-
ing members.
5. Implementation
We have begun experimenting with these protocols as
part of a larger project investigating new paradigms for us-
able security. We have implemented the basic protocols in
JavaTM, built to provide a Ô¨Çexible substrate for exploring
many of the pre-authentication methods discussed in this
paper.
We have built a software framework for using pre-
authentication data to authenticate arbitrary key exchange
protocols. This framework allows dynamic choice of the
medium used for the location-limited channel, the public
key algorithm used for the key commitments, and the Ô¨Ånal
authenticated key exchange protocol used over the wire-
less link (and in fact, this stage assumes only a TCP/IP
socket, allowing pre-authentication data to be used to au-
thenticate secure connections made over a wired network as
well). Extending the framework to provide a new location-
limited channel type, or a new key exchange protocol,


























is only a matter of implementing a JavaTM interface to
provide a small amount of syntactic ‚Äúglue‚Äù. The frame-
work provides both client and server components, and al-
lows developers to choose from either low-level, step-by-
step control over data exchange, or to use simpler, higher-
level interfaces. Such interfaces, for instance, provide
server threads that can manage pre-authentication of multi-
ple clients over the location-limited channel, and offer con-
trol over how such pre-authentication data is used to au-
thenticate those clients over the wireless link (e.g., serially,
where only the most recent client to pre-authenticate is al-
lowed to connect wirelessly, or in a multicast conÔ¨Åguration
where all pre-authenticated clients are allowed to connect
at once). Framework components maintain state tracking
who has currently pre-authenticated, what keying informa-
tion is currently in use by this endpoint, etc.
An example scenario implemented using this framework
consists of a client (such as our email gizmo from the exam-
ple above), which is the initiator of the authenticated chan-
nel, and a responding server. The server component listens
for a connection on both the location-limited channel and
the primary link, but only admits primary-link connections
from clients who have performed pre-authentication on the
location-limited channel.
We currently use IrDA [9] as the medium for the
location-limited channel. We are in the process of con-
structing a contact-mediated interface, and plan to expand
shortly to group authentication using audio. The client
opens an IrDA connection to the server (generating an er-
ror if it discovers more than one potential IrDA endpoint).
Across this connection client and server exchange XML-
encoded pre-authentication data containing a commitment
to an ephemeral DSA public key, a ‚Äúfriendly name‚Äù, and
an IP address and a port on which the server will be lis-
tening. This yields a payload of the order of 300 bytes in
each direction. With such a small payload size, the pre-
authentication step incurs very little time overhead even on
low-bandwidth location-limited channels.
With the pre-authentication complete, the IR channel is
closed, and the client extracts the server‚Äôs IP address and
port number from the data it received. The client then
opens a normal SSL/TLS connection to the server on the
primary link. Each side uses the information gained in
the pre-authentication step (namely the commitments to the
public keys) to authenticate the newly opened channel. The
client and server are now free to securely exchange any in-
formation they choose over the primary (wireless) link.
6. Related Work
Our work addresses the problem of bootstrapping trust
in networked environments. Traditional solutions to this
problem (e.g., X.509 [7]) link a target to some crypto-
graphic information (e.g., a key pair) through some out-
of-band mechanism, and then use that cryptographic infor-
mation to securely identify the target. Trusted web server
certiÔ¨Åcates that link domain names to key pairs are an ex-
ample of such a mechanism. Approaches that rely on cer-
tiÔ¨Åcates for bootstrapping trust require heavy setup and on-
line servers, and are therefore inappropriate for wireless ad-
hoc networks.
A number of approaches to trust and key management
have used out-of-band channels to authenticate key ex-
changes.
In the simplest version of PGP‚Äôs web of trust
[21], users obtain public keys from a variety of insecure
sources (e.g., web sites, key servers, etc.). To make sure
the key that they receive is authentic, users then engage in
some out-of-band communication (e.g., phone, US mail,
face-to-face conversation or exchange of business cards)
with the party they believe to be the key‚Äôs owner to ob-
tain the Ô¨Ångerprint, or digest, of the key, which they can
then use to judge the authenticity of the key they obtained
insecurely. They trust the Ô¨Ångerprint because it was ob-
tained over a secure channel. The act of getting the Ô¨Ånger-
print of a public key over the phone in PGP is, in essence,
a pre-authentication step. What distinguishes PGP‚Äôs pre-
authentication approach from ours are: the types of out-of-
band channels used; the type of entity (device or human)
verifying the pre-authentication data; and whether the ver-
iÔ¨Åcation of pre-authentication data is a separate, optional
(and frequently skipped) step in key exchange, or is built
in as a seamless part of the key exchange itself. In our ap-
proach we use the exchange of pre-authentication data in
part for demonstrative identiÔ¨Åcation, to select our desired
communication partner at the same time as we automati-
cally authenticate them. PGP attempts instead to link keys
to email addresses (names), and adds on manual key au-
thentication (Ô¨Ångerprint comparison) as a separate step.
A few proposals have been put forth recently to address
the issue of bootstrapping trust in the speciÔ¨Åc context of
ad-hoc wireless networks. Bluetooth [3], in its most se-
cure conÔ¨Åguration, requires the user to enter a (preferably
long and random) PIN into both devices to bootstrap their
Ô¨Årst communication. This PIN serves as the out-of-band
information, but puts a burden on users. Aside from usabil-
ity issues, Bluetooth is plagued by a wide variety of other
security Ô¨Çaws [10]. WEP, the link-layer security protocol
for 802.11 [8], has the same usability issues. It requires a
group of communicating devices to be initialized with the
same key, usually derived from a password. WEP too has
been broken [5, 19]. Our proposal is more appealing than
Bluetooth and WEP from both usability and security points
of view. Our pre-authentication step is intuitive and user-
friendly, and we rely on well-known and tested protocols
for key exchange.
Stajano and Anderson [18] suggested the use of an out-
of-band mechanism for establishing trust when they pro-
posed the Resurrecting Duckling security model to regu-
late secure transient association between devices in ad-hoc
wireless networks where authentication servers may not be
available. In their model, a master-slave relationship be-
tween two devices is set up when the master (or the mother,
in their terminology) establishes a shared secret with the
slave (the duckling) through a contact channel. This shared
secret will enable the duckling to recognize the mother and
be controlled by her in future interactions. Stajano later ex-
tended this model to address peer-to-peer interactions [17].
In the extended model, the mother can upload an access-
control policy into the duckling. This policy then deter-
mines the type of relationships that the slave can have with
other devices (other than the mother). Our work extends
theirs in a number of ways: while Anderson and Stajano
suggest the use of contact channels to exchange secret au-
thentication data, they don‚Äôt provide any details of what
that data should be or how to combine it appropriately with
data sent on the wireless link. We have provided those con-
crete details here. We separate the very general idea of
pre-authentication for bootstrapping security in ad-hoc net-
works from their very speciÔ¨Åc notion of mother-duckling
‚Äúimprinting‚Äù, and show that it can in fact be used to secure a
wide variety of protocols and applications. We extend their
work through the use of public key cryptography, allowing
us to take advantage of a much wider range of privileged
channel types, and to make use of well-established key ex-
change protocols. And Ô¨Ånally, for those situations where
the computational load of public key cryptography is un-
acceptable, we provide cheaper, hybrid options that share
many of the advantages of the public key schemes.
Outside the security domain, location-limited channels
have been used as a means for accessing devices and
services demonstratively. Satchel/MobileDoc [15] from
XRCE allows users to use a PDA to retrieve documents
located in their home ofÔ¨Åces, and ‚Äúbeam‚Äù them to a
printer, a PC, or another wireless PDA. In HP‚Äôs Cooltown
project [13], entities in a user‚Äôs surroundings have web
presences, as well as physical tags that send out their corre-
sponding URL‚Äôs through infrared. To interact with such an
entity, the user Ô¨Årst point her wireless device to the entity‚Äôs
tag, receiving its URL, and then proceed with a (wired or
wireless) interaction with the entity using the URL. There
have even been attempts to standardize these approaches.
The IrDA [9] has been creating and promoting interopera-
ble, infrared connection standards that support a walk-up,
point-to-point user model. These efforts all recognize the
usability advantages of demonstrative identiÔ¨Åcation, but
make no provision for security. Our proposal provides a
way to simply and seamlessly add security to these efforts
without increasing the demand on the user.
7. Conclusions
In this paper we presented new schemes for peer-to-peer
authentication in ad-hoc wireless networks. Building on
previous work by Stajano, Anderson, and others, we ex-
plained how to use demonstrative identiÔ¨Åcation to perform
pre-authentication over location-limited channels. Demon-
strative identiÔ¨Åcation provides the user with an extremely
intuitive way to identify ‚Äì and authenticate ‚Äì parties to a
communication. Our schemes do not require a public key
infrastructure, and do away with the naming problem that
plagues traditional authentication systems. Below we sum-
marize the novel aspects of our work:
Use of location-limited channels. We propose the use of
location-limited channels to bootstrap a wide range
key-exchange protocols. In particular, we do not limit
ourselves to imprinting a duckling device with its
mother‚Äôs secret key.
Novel location-limited channels. Because our location-
limited channels do not have to provide secrecy, we
open the door to new media.
In our prototype we
are currently experimenting with audio, infrared, and
contact-based channels, but other media are certainly
imaginable.
Concrete pre-authentication protocols. We provide a
concrete recipe for augmenting existing key exchange
protocols with a pre-authentication step. For the case
that both communicating parties are incapable of pub-
lic key operations, we also introduce a new, interac-
tive, version of the Guy Fawkes protocol. We note
that none of the protocols presented exchange any se-
cret information. Therefore, a passive attacker can-
not gain anything by eavesdropping on the location-
limited channel. We raise the security bar by requiring
the attacker to become active in the location-limited
channel, and we explained how active attacks can be
detected by human operators or by the system.
Group communication. Because we use location-limited
channels that are not necessarily secret, we can em-
ploy broadcast characteristics of some media (such as
audio) to pre-authenticate group communication over
location-limited channels.
No reliance on Public Key Infrastructure.
Key ex-
change and key agreement protocols depend on an au-
thentication step to verify who we are exchanging a
key with. Public Key Infrastructures (PKI) have been
commonly suggested as a way of solving this authen-
tication problem. PKIs use a trusted authority to bind
public keys to names or other identiÔ¨Åers; those names
are used in turn to identify the party with whom you
wish to communicate (e.g., SSL/TLS implementations
[15] M. Lamming, M. Eldridge, M. Flynn, C. Jones, and
D. Pendlebury. Satchel: Providing access to any document,
any time, anywhere. ACM Transactions on Computer-
Human Interaction, 7(3):322‚Äì352, 2000.
[16] C. Lopes and P. Aguiar. Aerial acoustic communications. In
Proceedings of the 2001 IEEE Workshop on Applications of
Signal Processing to Audio and Acoustics, New Paltz, NY,
October 2001.
[17] F. Stajano. The resurrecting duckling - what next? In Secu-
rity Protocols‚Äî8th International Workshop, Lecture Notes
in Computer Science, Cambridge, United Kingdom, Apr.
2001. Springer-Verlag, Berlin Germany.
[18] F. Stajano and R. J. Anderson. The resurrecting duckling:
Security issues for ad-hoc wireless networks.
In 7th Se-
curity Protocols Workshop, volume 1796 of Lecture Notes
in Computer Science, pages 172‚Äì194, Cambridge, United
Kingdom, 1999. Springer-Verlag, Berlin Germany.
[19] A. StubbleÔ¨Åeld, J. Ioannidis, and A. D. Rubin. Using the
Fluhrer, Mantin, and Shamir Attack to Break WEP.
In
Proceedings of the 2002 Network and Distributed Systems
Security Symposium (NDSS‚Äô02), San Diego, CA, February
2002. The Internet Society.
[20] T. G. Zimmerman.
Ô¨Åeld intrabody communication.
35(3&4):609‚Äì617, 1996.
Personal Area Networks: Near-
IBM Systems Journal,
[21] P. R. Zimmermann. The OfÔ¨Åcial PGP User‚Äôs Guide. MIT
Press, Cambridge, MA, USA, 1995. ISBN 0-262-74017-6.
require X.509 certiÔ¨Åcates that certify a web server‚Äôs
DNS name and are signed by a certiÔ¨Åcation authority
trusted by the web client). We have shown that such
a reliance on pre-existing third party naming and trust
infrastructures is unnecessary if one can brieÔ¨Çy bring
communicating parties within close physical proxim-
ity. In such a case, our pre-authentication protocols
can be used in place of a PKI.
References
[1] Anderson, Bergadano, Crispo, Lee, Manifavas, and Need-
ham. A new family of authentication protocols. ACMOSR:
ACM Operating Systems Review, 32, 1998.
[2] S. M. Bellovin and M. Merrit. An attack on the interlock
protocol when used for authentication. ACM Transactions
on Information Theory, 40(1), January 1994.
[3] The ofÔ¨Åcial bluetooth SIG website. www.bluetooth.
com.
[4] T. Dierks and C. Allen. The TLS Protocol Version 1.0. IETF
- Network Working Group, The Internet Society, January
1999. RFC 2246.
[5] S. Fluhrer, I. Mantin, and A. Shamir. Weaknesses in the key
scheduling algorithm of RC4. In Eight Annual Workshop on
Selected Areas in Cryptography, August 2001.
[6] D. Harkins and D. Carrel. The Internet Key Exchange
(IKE). IETF - Network Working Group, The Internet Soci-
ety, November 1998. RFC 2409.
[7] R. Housley, W. Ford, W. Polk, and D. Solo. Internet X.509
Public Key Infrastructure CertiÔ¨Åcate and CRL ProÔ¨Åle. IETF
- Network Working Group, The Internet Society, January
1999. RFC 2459.
[8] IEEE. ANSI/IEEE. 802.11: Wireless LAN medium ac-
cess control (MAC) and physical layer (PHY) speciÔ¨Åca-
tions, 1999.
[9] IrDA Association. Technical summary of IrDA DATA and
IrDA CONTROL, 1999.
[10] M. Jakobsson and S. Wetzel. Security weaknesses in blue-
tooth.
In Topics in Cryptology - CT-RSA 2001, volume
2020, pages 176‚Äì191, San Francisco, April 2001. Springer.
[11] M. Just and S. Vaudenay. Authenticated multi-party key
agreement. In Advances in Cryptology ‚Äì ASIACRYPT ‚Äô96,
Lecture Notes in Computer Science, Berlin, 1996. Springer-
Verlag.
[12] Y. Kim, A. Perrig, and G. Tsudik. Simple and fault-tolerant
key agreement for dynamic collaborative groups. In S. Ja-
jodin and P. Samarati, editors, 7th ACM Conference on
Computer and Communications Security, pages 235‚Äì241,
2000.
[13] T. Kindberg, J. Barton, J. Morgan, G. Becker, D. Caswell,
P. Debaty, G. Gopal, M. Frid, V. Krishnan, H. Morris,
J. Schettino, B. Serra, and M. Spasojevic. Places and things:
Web presence for the real world. Technical Report HPL-
2000-16, HP Labs, 2000.
[14] H. Krawczyk.
SKEME: A versatile secure key ex-
change mechanism for internet.
In Proceedings of the
1996 Network and Distributed Systems Security Sympo-
sium (NDSS‚Äô96), pages 172‚Äì194, San Diego, CA, February
1996. The Internet Society.