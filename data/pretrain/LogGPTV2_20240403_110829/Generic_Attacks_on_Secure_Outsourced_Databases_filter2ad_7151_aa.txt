title:Generic Attacks on Secure Outsourced Databases
author:Georgios Kellaris and
George Kollios and
Kobbi Nissim and
Adam O'Neill
Generic Attacks on Secure Outsourced Databases
∗
Georgios Kellaris
Boston University and
Harvard University
PI:EMAIL
†
George Kollios
Boston University
PI:EMAIL
Adam O’Neill
Georgetown University
PI:EMAIL
‡
Kobbi Nissim
Ben-Gurion University
and Harvard University
PI:EMAIL
ABSTRACT
Recently, various protocols have been proposed for securely
outsourcing database storage to a third party server, rang-
ing from systems with “full-ﬂedged” security based on strong
cryptographic primitives such as fully homomorphic encryp-
tion or oblivious RAM, to more practical implementations
based on searchable symmetric encryption or even on deter-
ministic and order-preserving encryption. On the ﬂip side,
various attacks have emerged that show that for some of
these protocols conﬁdentiality of the data can be compro-
mised, usually given certain auxiliary information.
We take a step back and identify a need for a formal un-
derstanding of the inherent eﬃciency/privacy trade-oﬀ in
outsourced database systems, independent of the details of
the system. We propose abstract models that capture se-
cure outsourced storage systems in suﬃcient generality, and
identify two basic sources of leakage, namely access pattern
and communication volume. We use our models to distin-
guish certain classes of outsourced database systems that
have been proposed, and deduce that all of them exhibit at
least one of these leakage sources.
We then develop generic reconstruction attacks on any
system supporting range queries where either access pattern
or communication volume is leaked. These attacks are in a
rather weak passive adversarial model, where the untrusted
server knows only the underlying query distribution. In par-
ticular, to perform our attack the server need not have any
prior knowledge about the data, and need not know any of
the issued queries nor their results. Yet, the server can re-
construct the secret attribute of every record in the database
after about N 4 queries, where N is the domain size. We pro-
vide a matching lower bound showing that our attacks are
∗Work supported by NSF Grants no. CNS-1414119 and
†Work partially supported by the NSF CNS-1414119 grant.
‡Work supported by NSF Grant no. NSF CNS-1565387 and
CNS-1565387.
grants from the Sloan Foundation.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24 - 28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978386
essentially optimal. Our reconstruction attacks using com-
munication volume apply even to systems based on homo-
morphic encryption or oblivious RAM in the natural way.
Finally, we provide experimental results demonstrating
the eﬃcacy of our attacks on real datasets with a variety of
diﬀerent features. On all these datasets, after the required
number of queries our attacks successfully recovered the se-
cret attributes of every record in at most a few seconds.
Keywords: Secure outsourced databases, generic attacks
1.
INTRODUCTION
As organizations struggle with the accumulation of large
amounts of data, a popular practice is to outsource them
to third party servers. Because their data may be sensi-
tive (e.g., medical or ﬁnancial), a natural idea is to employ
cryptographic techniques to ensure conﬁdentiality while still
allowing eﬃcient query processing.
Many cryptographic techniques exist that can be applied
to this problem, ranging from solutions based on tools such
as fully homomorphic encryption (FHE) [20, 46] or oblivious
RAM (ORAM) [23, 25] to more practical solutions based
on weaker primitives such as structural encryption [33] or
deterministic and order-preserving encryption [42, 2]. How-
ever, the privacy provided by the resulting secure outsourced
database systems is poorly understood. For example, recent
works focusing on some practical solutions [28, 3, 31, 11, 38],
have shown that conﬁdentiality can be compromised given
auxiliary information on the data.
Here, we take a step back and identify a need for a formal
understanding of the inherent eﬃciency/privacy trade-oﬀ in
outsourced database systems, independent of the details of
the system. In particular, we develop the ﬁrst attack against
systems leaking only communication volume. This attack
applies even to systems based on FHE or ORAM.
1.1 Our Results
Abstract Models. We present abstract models that capture
secure outsourced database systems in suﬃcient generality
to reason about their security in a generic and implemen-
tation independent way. In particular, we consider two ba-
sic sources of leakage for such systems: access pattern and
communication volume. Access pattern refers to the server
learning which “encrypted” records are returned as the re-
sult of a query. On the other hand, communication volume
refers to the server learning how many encrypted records are
returned as a result of a query.
A Taxonomy. In order to reason about which protocols
have which leakage channels (and how to design new pro-
tocols without them), it is useful to distinguish some classes
of outsourced database systems.
In particular, we deﬁne
atomic outsourced database systems, where the server stores
a collection of ciphertexts such that each record in the dataset
(or rather the search key for each record) is encrypted as one
of these ciphertexts, but there may be additional cipher-
texts encrypting a dummy record; further, communication
from the server on a query includes some subset of these
ciphertexts. It is useful to also deﬁne static atomic systems,
where the encrypted records are not changed as a result of
a query, and non-storage-inﬂating atomic systems, where
the number of encrypted records is equal to the number
of records in the database. We observe that static atomic
systems that are non-storage-inﬂating must leak the access
pattern, i.e., which of the encrypted records are returned on
a query. This covers most systems based on searchable sym-
metric encryption or on deterministic and order-preserving
encryption [42, 2, 4]. In the more general (not necessarily
atomic) setting, we also deﬁne ﬁxed communication overhead
protocols, where the length of communication sent from the
server as a result of a query is proportional to the number of
records matching the query. Systems simply based on FHE
or ORAM have ﬁxed communication overhead. We observe
that such systems leak the communication volume.
Reconstruction Attacks. We develop reconstruction attacks
on outsourced database systems where either access pattern
or communication volume is leaked, and thus our attacks
apply to most solutions proposed in prior work.
In a re-
construction attack an adversary exploits leakage to recover
the search keys. A successful reconstruction attack should
recover a signiﬁcant fraction of the search keys with good
probability, preferably in polynomial-time and with a poly-
nomial number of queries in the database size. Here we
consider a rather weak adversarial model (hence making our
attacks stronger) in which the untrusted server only knows
the underlying query distribution (i.e., does not have prior
knowledge about the stored data and does not get to di-
rectly learn the issued queries or their results). Thus, unlike
prior work [28, 3, 31, 11, 38] our adversary is passive (does
not choose the queries) and does not get any auxiliary in-
formation about the data. Our attacks speciﬁcally apply
to outsourced database systems for range queries. Further-
more, we will assume queries are uniform. Clearly, these
are limiting assumptions but they are an important natural
basic case to start with; see discussion below.
Attacks using Access Pattern. Our reconstruction attack
using the access pattern proceeds in two phases: ﬁrst, the
adversary identiﬁes a record with the minimal (or maximal)
value. Then, it uses the frequency in which this record is
returned on random queries to determine its index. Finally
it uses statistics on the occurrence of other records with the
minimal record to determine their index. A simple analysis,
based on Chernoﬀ bounds, shows that the adversary can ex-
actly reconstruct the entire index set after observing O(N 4)
queries, where N is the domain size, assuming queries are
uniform. For dense databases ˜O(N 2) queries suﬃce.
Attacks Using Communication Volume. Our reconstruc-
tion attacks using communication volume proceed as follows.
Let n be the number of records in the dataset. The attacker
ﬁrst observes O(N 4) queries and determines for every value
of 0 ≤ i ≤ n the number ui of range queries (out of all possi-
ble queries) which return exactly i records. Next, the adver-
sary derives a polynomial F (x) whose positive integer coef-
ﬁcients are computable from u1, . . . , un. It turns out that if
F (x) uniquely factors into two polynomials d(x), dR(x) then
each of these polynomials can be used to recover the entire
index set. That was true for all datasets in our experiments.
A Matching Lowerbound. We complement our attacks
with a lowerbound showing the existence of datasets that
cannot be distinguished by attackers that observe signiﬁ-
cantly less than N 4 uniformly chosen range queries. This
lowerbound holds both for attacks using access pattern and
for attacks using communication volume.
Experiments. In order to demonstrate our attacks, we have
built the following prototype. The server is instantiated as
a mySQL server, and the users upload their data and query
them through a CryptDB proxy. A packet sniﬀer residing
on the server side monitors the query answers, and executes
our attacks. We attacked several real datasets with diﬀerent
indexed domains, number of records, and record distribu-
tions. The average size of each dataset was a few thousands
of records. After collecting the required number of queries,
our attacks ran in a few seconds for the worst case. Both
attacks (i.e., using the access pattern and using the commu-
nication volume) managed to reconstruct all datasets.
1.2 Discussion
In reality queries are not uniform. However, we believe
that our attacks represent a signiﬁcant weakness that needs
to be addressed, because (1) good systems should provide
protection regardless of query distribution (2) uniform or
almost uniform queries on a small subset of the domain
are realistic, and when that happens our attacks apply, and
(3) other than the assumption on the query distribution, our
attack model is very weak. Our attacks show that secure
outsourced databases should avoid being static non-storage-
inﬂating, as well as with ﬁxed communication overhead.
Open Questions. We leave open the question on which
datasets our reconstruction attack using communication vol-
ume succeeds. Additionally, it’s open to extend our attacks
to other query distributions and also to use only “short”
range queries, as they are typically observed in practice. Fi-
nally, our attacks require N 4 queries in general and an open
question is which privacy guarantees can be made when N is
large. We note that in the case of order-preserving encryp-
tion, security on very large domains was studied by [8], who
showed that OPE hides half of the bits of each plaintext for
a dataset of uniformly chosen points (where the adversary
gets the OPE encryptions of these points).
1.3 Related Work
Work in Cryptographic Community. For an overview of
cryptographic techniques for search on encrypted data, we
recommend the talk of Kamara [32]. Broadly, the tech-
niques include multi-party computation [47, 24], oblivious
RAM [25, 25], searchable symmetric and structural encryp-
tion [45, 22, 13, 15, 14, 12, 40, 19, 33], functional encryp-
tion [9, 43], property-preserving encryption [5, 1, 7, 39] and
homomorphic encryption [10, 21]. These techniques provide
diﬀerent levels of security based on their leakage.
In par-
ticular, [32] distinguishes between L1 and L2 leakage where
access pattern corresponds to L2 leakage, but neither one
considers communication volume.
[37] identiﬁes the basic
leakages of schemes that combine searchable encryption and
ORAM. It refers to access pattern leakage as LC3, and com-
munication volume as LC2.
Work in Database Community. In the database commu-
nity, the problem of querying an encrypted database was
introduced by [26]. Depending on the query type, diﬀer-
ent methods have been proposed. In this work, we focus on
range queries over arithmetic valued attributes. Existing so-
lutions for range queries can be divided into three categories;
(i) bucketization techniques that partition the domain space
and group data records before indexing (e.g.
[27, 29, 28]),
(ii) order-preserving encryption schemes that use determin-
istic encryption which ensures that the order of the cypher-
texts is the same as the order of the plaintexts (e.g.
[1, 7,
41]), and (iii) solutions that use specialized data structures
(e.g. [35, 44, 17]). Finally, notable examples of outsourced
database systems that support range queries are CryptDB
[42], Cipherbase [2], and TrustedDB [4].
Attacks. Several works (e.g., [28, 3, 31]) have shown that
all the current methods allowing range queries on encrypted
data can reveal information about the distribution of the
plaintext values on the search domain.
Islam, Kuzu, and
Kantarcioglu [30] studied attacks exploiting access pattern
based on auxiliary information. Liu, Zhu, Wang and Tan [36]
developed such attacks based on the query pattern (i.e., in-
formation about which queries repeat). Recently, attacks on
existing systems have been introduced ([11, 38]), but these
attacks are application dependent as they make assumptions
about the data distribution and exploit weaknesses of spe-
ciﬁc encryption protocols (e.g., OPE). Finally, [16] is the
closest to our work. It is similarly general, assuming only
access pattern is leaked. However, the presented attack
only recovers (partial) order of the records depending on
the retrieved range queries. Applied to our setting where
the queries are uniformly drawn, it can reconstruct the full
order after observing enough answers. Speciﬁcally, the algo-
rithm ﬁrst considers all possible orders of records, and then
prunes some of them by observing answers of queries.
2. THE MODEL
We describe our abstract models of secure outsourced data-
base systems. While the focus of our work is on attacks, our
models are general enough to prove positive results as well.
2.1 Outsourced database systems
We abstract a database as a collection of records associ-
ated with search keys
D = {(r1, sk1), . . . , (rn, skn)}.
We will assume that all records have ﬁxed length κ, and that
search keys are elements of domain X (essentially, the search
keys can be viewed as the database indexing information).
A query is a predicate
q : X → {0, 1}.
Applying a query q to a database D results in all records
whose search keys satisfy q, i.e.,
q(D) = {ri : q(ski) = 1}.
Example 2.1. Throughout this article X will be an or-
dered domain of N ∈ N elements {1, . . . , N}. We will con-
sider the family of interval or range queries
(cid:26) 1 a ≤ c ≤ b
(cid:9)
Q =(cid:8)q[a,b]
Overall, there are(cid:0)N
1≤a≤b≤N
;
q[a,b](c) =
(cid:1) + N queries in Q. Applying q[a,b] on
0 otherwise
a database D results in all records with search keys in the
range [a, b], i.e.,
2
q[a,b](D) = {ri : a ≤ ski ≤ b}.
Let Q be a collection of queries. An outsourced database
system for queries in Q consists of two protocols between a
user U and a server S:
Setup protocol Πsetup: U has as input a database D =
{(r1, sk1), . . . , (rn, skn)}; S has no input. The output
for U is a query key K and the output for S is a data