tising interval of the target BLE-equipped device will al-
ways be less than 1. This applies when BLE-Guardian
protects a single BLE-equipped device. Our evaluation
in Section 6 conﬁrms this observation.
5.4 Access control
So far, BLE-Guardian has hidden the target BLE device,
so neither authorized nor unauthorized entities have ac-
cess to the device. It is the access control module that
authorizes client devices and enables their access to the
target BLE device.
5.4.1 Device Authorization
BLE-Guardian utilizes Bluetooth classic (BR/EDR) as
an out-of-band (OOB) channel to authorize end-user de-
vices intending to scan and access the target BLE de-
vice. BLE-Guardian runs in server mode on the gate-
way waiting for incoming connections, while the “au-
thenticating” device will have BLE-Guardian running in
client mode to initiate connections and ask for authoriza-
tion. The choice of Bluetooth Classic as an OOB channel
is natural; most end-user devices (such as smartphones)
are dual-mode, supporting both BLE and Bluetooth clas-
sic. Moreover, Bluetooth classic already contains pairing
and authentication procedures, eliminating the need for a
dedicated authentication protocol. Last but not least, a
Client
BLE-
Guardian
Target BLE
Device
Attacker
connection request
n
o
i
t
a
z
i
r
o
h
t
u
A
g
n
i
l
b
a
n
E
n
o
i
t
c
e
n
n
o
C
bt_addr, UUID
attempt connection
Client authorized by user
send pairing request
users complete pairing
connection parameters
reduced-info Ad
connection request
Legitimate connection established
data
data
Connection dropped
k
c
a
t
t
A
n
o
i
t
c
e
t
e
D
missed advertisements --> alert user
connection request
Unauthorized 
connection established
Figure 6: The sequence diagram of the access con-
trol module. Thin green lines from the target device
designate the advertisements. Thick green lines from
BLE-Guardian designate the jamming signal.
Bluetooth-equipped end-user device will be able to com-
municate simultaneously over Bluetooth classic and BLE
so that it can communicate with both BLE-Guardian and
the target BLE device.
Fig. 6 depicts the interactions between BLE-Guardian
and a client device when they connect for the ﬁrst time.
BLE-Guardian will be listening on the gateway over
a secure RFCOMM channel with a speciﬁed UUID.
The gateway, however, won’t be running in discoverable
mode so as to prevent others from tracking the user. It is
up to the party interested in authenticating itself to obtain
the Bluetooth address of the user’s gateway as well as the
UUID of the authentication service.
Once the client end-user device obtains the Blue-
tooth address and UUID, it can initiate a secure con-
nection to the gateway. This will trigger a pairing pro-
cess to take place if both devices are not already paired.
BLE-Guardian relies on Bluetooth pairing process to se-
cure the connections between the gateway and the client
device. For future sessions, an already paired client de-
vice can connect to BLE-Guardian without the need for
any user involvement. The owner can also revoke the
privileges of any client device by simply un-pairing it.
5.4.2 Connection Enabling
The device hiding module of BLE-Guardian jams the
entire advertising sequence of the target BLE device, in-
cluding the period it listens for incoming scan or connec-
tion requests so that it cannot decode them. Therefore,
both unauthorized and authorized clients cannot access
the target BLE device (the case of an adversary using
1214  25th USENIX Security Symposium 
USENIX Association
10
high transmission power will be discussed later). Fig. 6
shows the procedure that BLE-Guardian follows to en-
able only the authorized clients access to the target BLE
device.
Immediately after the last advertisement of a single ad-
vertisement session, when the target device is the only
one expected to be advertising, the access control mod-
ule lifts the jamming. This ensures that the BLE device
will not be advertising until the next adverting session,
and it is currently listening for scan and connection re-
quests. Then, BLE-Guardian advertises on behalf of the
target BLE device on the same channel. The advertise-
ment message contains only the headers and the address
of the previously hidden device. It is stripped of explicit
identiﬁers, hence leaking only limited information about
the BLE device for a brief period.
At the same time, BLE-Guardian will communicate
to the authenticated client app the address of the BLE
device and a secret set of connection parameters over
the OOB channel. BLE-Guardian’s app running on the
client device will use the address and the parameters to
initiate a connection to the BLE device. The connection
initiation procedure is handled by the Bluetooth radio of
the client device, which scans for the advertisement with
the provided address. After receiving such an advertise-
ment, it sends a connection request after which both de-
vices will be connected.
The above procedure will not break the way BLE
scans and connections take place. It doesn’t matter from
which radio the actual advertisement was coming. From
the perspective of the BLE device, it will receive a scan
or connection request while waiting for one. On the
other hand, the client device will receive an advertise-
ment message while also expecting one.
5.5 Security and Privacy Features
BLE-Guardian addresses the tracking and proﬁling
threats discussed in Section 5.1.2.
It hides the adver-
tisements, which are used as the main means to track
users. It only exposes the advertisement for a very short
period when enabling others to connect. Furthermore,
BLE-Guardian greatly reduces the proﬁling threat by
hiding the contents of the advertisement which leak the
device name, type, and other attributes.
A strong passive attacker [38] can still detect the “hid-
den” peripheral by recovering the real advertisement, so
that it can connect to the BLE-equipped device. Dis-
tinguishing legitimate connection requests based on the
Bluetooth address of the initiator is not effective; an at-
tacker could easily spoof its Bluetooth address to imper-
sonate the authorized client. Therefore, BLE-Guardian
uses the connection parameters of the connection request
to distinguish fraudulent connection requests from legit-
Table 4: The protections offered by BLE-Guardian.
User
Alert
Tracking
Protect.
Access
Control
Adversary
Proﬁling
Protect.
Passive & Active
Strong Passive &
Active
Passive & Strong
Active
Strong Passive &
Strong Active

–

–






–
–




imate ones. Legitimate connection requests contain the
set of “secret” connection parameters communicated ear-
lier to the client.
The probability of the attacker matching a particular
set of connection parameters is very low. According to
the speciﬁcation, there are more than 3 million possi-
ble combinations of values for the connection, slave, and
timeout intervals. If the connection is established based
on a fraudulent connection request, then BLE-Guardian
prevents the connection from taking place. The connec-
tion request already contains the hopping sequence ini-
tiation. BLE-Guardian hops to the next channel and
jams it so as to prevent the BLE device from receiving
any message from the connected unauthorized device.
The BLE device drops the connection since it receives
no message on the channel.
An attacker might abuse this connection process by
constantly attempting to connect to the BLE device, thus
depriving the authorized client of access. This will al-
ways be possible, even when BLE-Guardian is not de-
ployed. BLE-Guardian observes such a situation from
a high frequency of fraudulent connection requests and
alerts the user of this threat. As it will be evident
in Section 6, an active attacker injecting messages to
the advertising channel can’t affect the operations of
BLE-Guardian.
A strong active adversary, however, can override
BLE-Guardian’s jamming and issue connection requests
that the BLE-equipped device will decode. While jam-
ming, BLE-Guardian runs in transmit mode and can
not monitor the channel for incoming requests. Nev-
ertheless, it detects that the BLE device is missing its
advertising intervals, signifying that it was connected
without BLE-Guardian’s approval.
In such a case,
BLE-Guardian alerts the user of the existence of a
strong adversary nearby.
Finally, Table 4 summarizes BLE-Guardian’s capa-
bilities when faced with the various adversaries de-
scribed in Section 5.1.2.
USENIX Association  
25th USENIX Security Symposium  1215
11
Galaxy S5
clear
covered
)
m
(
f
f
o
t
u
c
2
1.5
1
0.5
0
 TI CC2540
clear
covered
2
1.5
1
0.5
0
0 0.5 1 1.5 2 2.5 3
0 0.5 1 1.5 2 2.5 3
Distance (m)
Distance (m)
Figure 8: The cutoff distance as a function of the distance
between BLE-Guardian and the target device.
Maintaining BLE-Guardian is easy; it only requires
updating the application running on the gateway which
usually takes place without the user’s intervention (e.g.,
mobile app updates). This application interacts with the
hardware component and applies updates, if necessary,
through pushing ﬁrmware updates, a process which is
also transparent to the users.
6.2 Evaluation
To evaluate BLE-Guardian, we utilize Broadcom
BCM20702A0 and Nordic nRF51822 chips as the tar-
get BLE devices (both transmitting at 4dBm) and the TI
CC2540 dongle as the sniffer node. CC2540 is able to
decode the messages on the three advertisement chan-
nels, even on those that fail the CRC check. We evalu-
ate using Nordic and Broadcom chips instead of actual
BLE products, because these products (such as Fitbits)
are mostly powered by the same (Nordic and Broadcom)
BLE chips.
6.2.1
Impact of Distance
Due to transmission power limitations (battery or regula-
tory bodies’ constraints), there would always be a small
area around the target BLE device where BLE-Guardian
won’t be able to enact the privacy protection. The trans-
mission from the target BLE device covers the jamming
signal of BLE-Guardian. Nevertheless, as the sniffer
moves farther away from the target BLE device (in any
direction), the jamming signal will cover the advertise-
ments, provided that the BLE device and BLE-Guardian
are not very far apart. So, there is a cutoff distance be-
yond which the adversary can’t scan, and connect to the
target BLE device.
We study the cutoff distance of a target BLE device
(advertising at 20ms) at different distances separating it
from BLE-Guardian (between 0 and 3m). At each po-
sition, we move the sniffer node (either a CC2540 don-
gle or Samsung Galaxy S5) around the BLE device, and
Figure 7: The deployment scenario for BLE-Guardian
for a mobile user (left) and the main UI (right).
6
Implementation and Evaluation
We now present a prototype of BLE-Guardian along
with its evaluation.
Implementation
6.1
We implement BLE-Guardian using Ubertooth One ra-
dio which is an open platform for Bluetooth research
and development. It can connect to any host that sup-
ports USB such as Raspberry Pi, Samsung’s Artik-10,
PC, smartphone (Fig. 7 (left)), etc. Since communica-
tion over USB incurs latency in the order of a few mil-
liseconds, we implement most of BLE-Guardian’s func-
tionalities inside Ubertooth One’s ﬁrmware to maintain
real-time operation.
We also implement
the software component of
BLE-Guardian on Linux and Android. Fig. 7 (right)
shows a screenshot of the BLE-Guardian app while run-
ning on Android in server mode where the user can
choose the device to protect and control its authorized
client list. The app communicates the Bluetooth address
of the chosen device to the Ubertooth One radio.
BLE-Guardian requires running in privileged mode
on the client device in order to be able to connect with
modiﬁed connection parameters. This is easily achiev-
able on Linux-based clients, but might not be the case for
mobile devices. In other words, BLE-Guardian, while
running in client mode on Android, requires root access
to be able to issue connection requests with a set of spec-
iﬁed connection requests. Also, BLE-Guardian (if run-
ning in privileged mode on the client device) can mod-
ify content of the advertisement message from the BLE
scanner to the user-level application to reconstruct the
original hidden advertisement. As such, user-level ap-
plications (on the trusted client) will receive the original
advertisement, which does not break their functionality.
1216  25th USENIX Security Symposium 
USENIX Association
12
record the farthest distance at which it received any ad-
vertisement from the BLE device as to study the hidden
terminal effect. Furthermore, we repeat each experiment
twice, the ﬁrst with BLE-Guardian clear of any obsta-
cles and the second with it inside a backpack.
It is evident from Fig. 8 that the cutoff distance in-