### 5.4 Access Control

So far, BLE-Guardian has hidden the target BLE device, making it inaccessible to both authorized and unauthorized entities. The access control module is responsible for authorizing client devices and enabling their access to the target BLE device.

#### 5.4.1 Device Authorization

BLE-Guardian uses Bluetooth Classic (BR/EDR) as an out-of-band (OOB) channel to authorize end-user devices that intend to scan and access the target BLE device. BLE-Guardian operates in server mode on the gateway, waiting for incoming connections, while the authenticating device runs BLE-Guardian in client mode to initiate connections and request authorization.

The choice of Bluetooth Classic as an OOB channel is natural because most end-user devices, such as smartphones, support both BLE and Bluetooth Classic. Additionally, Bluetooth Classic already includes pairing and authentication procedures, eliminating the need for a dedicated authentication protocol. Furthermore, a Bluetooth-equipped end-user device can communicate simultaneously over Bluetooth Classic and BLE, allowing it to interact with both BLE-Guardian and the target BLE device.

**Figure 6: Sequence Diagram of the Access Control Module**

- **Client**: Initiates the connection request.
- **BLE-Guardian**: Listens for incoming connections and handles the authorization process.
- **Target BLE Device**: Advertises and listens for connection requests.
- **Attacker**: Attempts to establish unauthorized connections.

**Sequence of Events:**
1. **Connection Request**: The client initiates a connection request to BLE-Guardian.
2. **Authorization**: BLE-Guardian authorizes the client based on user input.
3. **Pairing Request**: The client sends a pairing request to BLE-Guardian.
4. **Pairing Completion**: Users complete the pairing process.
5. **Reduced-Info Advertisement**: BLE-Guardian sends a reduced-info advertisement.
6. **Legitimate Connection Established**: The client establishes a legitimate connection with the target BLE device.
7. **Data Exchange**: Data is exchanged between the client and the target BLE device.
8. **Connection Dropped**: The connection is dropped if the client is unauthorized.
9. **Alert User**: If advertisements are missed, the user is alerted.
10. **Unauthorized Connection Established**: An attacker establishes an unauthorized connection.

**Bluetooth Address and UUID**: The client must obtain the Bluetooth address of the user's gateway and the UUID of the authentication service to initiate a secure connection. Once paired, the client can connect to BLE-Guardian without further user involvement. The owner can revoke the privileges of any client device by un-pairing it.

#### 5.4.2 Connection Enabling

The device hiding module of BLE-Guardian jams the entire advertising sequence of the target BLE device, including the period when it listens for incoming scan or connection requests. This prevents both unauthorized and authorized clients from accessing the target BLE device. 

**Procedure for Enabling Authorized Clients:**
1. **Lifting Jamming**: Immediately after the last advertisement of a single advertisement session, the access control module lifts the jamming.
2. **Limited Advertisement**: BLE-Guardian advertises on behalf of the target BLE device, using only the headers and the address of the previously hidden device. This message is stripped of explicit identifiers, leaking limited information about the BLE device for a brief period.
3. **Communication of Parameters**: BLE-Guardian communicates the address of the BLE device and a secret set of connection parameters to the authenticated client app over the OOB channel.
4. **Connection Initiation**: The client app uses the address and parameters to initiate a connection to the BLE device. The Bluetooth radio of the client device scans for the advertisement with the provided address and sends a connection request.
5. **Connection Establishment**: Both devices are connected after the connection request is received.

This procedure ensures that the BLE device receives a scan or connection request while waiting for one, and the client device receives an advertisement message while also expecting one, maintaining the standard BLE connection process.

### 5.5 Security and Privacy Features

BLE-Guardian addresses the tracking and profiling threats discussed in Section 5.1.2 by hiding the advertisements used for tracking and reducing the profiling threat by concealing the contents of the advertisement, which leak the device name, type, and other attributes.

**Threat Mitigation:**
- **Strong Passive Attacker**: A strong passive attacker can still detect the "hidden" peripheral by recovering the real advertisement. However, BLE-Guardian uses the connection parameters of the connection request to distinguish fraudulent connection requests from legitimate ones.
- **Spoofing**: Distinguishing legitimate connection requests based on the Bluetooth address of the initiator is not effective, as an attacker could spoof the address. Therefore, BLE-Guardian relies on the "secret" connection parameters communicated earlier to the client.
- **Low Probability of Attack**: The probability of an attacker matching a particular set of connection parameters is very low, with more than 3 million possible combinations of values for the connection, slave, and timeout intervals.
- **Fraudulent Connection Prevention**: If a connection is established based on a fraudulent connection request, BLE-Guardian prevents the connection by hopping to the next channel and jamming it, causing the BLE device to drop the connection.

**Table 4: Protections Offered by BLE-Guardian**

| Threat Type | Tracking Protection | Access Control | Profiling Protection |
|-------------|---------------------|----------------|----------------------|
| Passive & Active | ✔️ | ✔️ | ✔️ |
| Strong Passive & Active | ✔️ | ✔️ | ✔️ |
| Strong Passive & Strong Active | ✔️ | ✔️ | ✔️ |

**User Alerts**: BLE-Guardian alerts the user if there is a high frequency of fraudulent connection requests, indicating the presence of an active attacker. It also detects if the BLE device is missing its advertising intervals, signifying an unauthorized connection.

### 6. Implementation and Evaluation

#### 6.1 Implementation

We implemented BLE-Guardian using Ubertooth One, an open platform for Bluetooth research and development. Ubertooth One can connect to any host that supports USB, such as Raspberry Pi, Samsung’s Artik-10, PC, or smartphone. To maintain real-time operation, most of BLE-Guardian's functionalities are implemented inside Ubertooth One's firmware.

**Software Component**:
- **Linux and Android**: We implemented the software component of BLE-Guardian on Linux and Android. The BLE-Guardian app allows the user to choose the device to protect and manage the authorized client list.
- **Privileged Mode**: BLE-Guardian requires running in privileged mode on the client device to connect with modified connection parameters. On Linux-based clients, this is easily achievable, but on mobile devices, root access may be required.

**User Interface**:
- **Screenshot**: Figure 7 (right) shows the BLE-Guardian app running on Android in server mode, where the user can manage the protected device and authorized client list.

#### 6.2 Evaluation

To evaluate BLE-Guardian, we used Broadcom BCM20702A0 and Nordic nRF51822 chips as the target BLE devices (both transmitting at 4dBm) and the TI CC2540 dongle as the sniffer node. CC2540 can decode messages on the three advertisement channels, even those that fail the CRC check. We chose these chips because they power many actual BLE products, such as Fitbits.

**Impact of Distance**:
- **Cutoff Distance**: Due to transmission power limitations, there is a small area around the target BLE device where BLE-Guardian cannot provide privacy protection. As the sniffer moves farther away, the jamming signal will cover the advertisements, provided that the BLE device and BLE-Guardian are not too far apart.
- **Experiment Setup**: We studied the cutoff distance of a target BLE device (advertising at 20ms) at different distances separating it from BLE-Guardian (between 0 and 3m). At each position, we moved the sniffer node (either a CC2540 dongle or Samsung Galaxy S5) around the BLE device and recorded the farthest distance at which it received any advertisement.
- **Results**: The experiments were repeated twice, once with BLE-Guardian clear of any obstacles and once with it inside a backpack. Figure 8 shows the cutoff distance as a function of the distance between BLE-Guardian and the target device.

**Figure 8: Cutoff Distance as a Function of Distance Between BLE-Guardian and Target Device**

- **Clear of Obstacles**: The cutoff distance is higher when BLE-Guardian is clear of any obstacles.
- **Inside Backpack**: The cutoff distance is lower when BLE-Guardian is inside a backpack, indicating the impact of physical obstructions on the jamming signal.

**Conclusion**:
- **Ease of Maintenance**: Maintaining BLE-Guardian is straightforward, requiring only updates to the application running on the gateway, which usually occur without user intervention.
- **Security and Privacy**: BLE-Guardian effectively mitigates tracking and profiling threats, providing robust security and privacy features for BLE devices.