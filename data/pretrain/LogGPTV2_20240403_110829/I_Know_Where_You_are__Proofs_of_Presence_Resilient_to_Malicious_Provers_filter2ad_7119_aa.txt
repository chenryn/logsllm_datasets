title:I Know Where You are: Proofs of Presence Resilient to Malicious Provers
author:Markus Miettinen and
N. Asokan and
Farinaz Koushanfar and
Thien Duc Nguyen and
Jon Rios and
Ahmad-Reza Sadeghi and
Majid Sobhani and
Sudha Yellapantula
I Know Where You are: Proofs of Presence Resilient to
Malicious Provers
Markus Miettinen
Technische Universität
markus.miettinen@
Darmstadt
trust.cased.de
Thien Duc Nguyen
Technische Universität
ducthien.nguyen@
Darmstadt
trust.cased.de
N. Asokan
Aalto University and University
of Helsinki
PI:EMAIL
Technische Universität
Jon Rios
Darmstadt
PI:EMAIL
Farinaz Koushanfar
Rice University
PI:EMAIL
Ahmad-Reza Sadeghi
Technische Universität
ahmad.sadeghi@
Darmstadt
trust.cased.de
Majid Sobhani
Technische Universität
Darmstadt
PI:EMAIL
Sudha Yellapantula
Rice University
PI:EMAIL
ABSTRACT
In the recent years, new services and businesses leveraging
location-based services (LBS) are rapidly emerging. On the
other hand this has raised the incentive of users to cheat
about their locations to the service providers for personal
beneﬁts. Context-based proofs-of-presence (PoPs) have been
proposed as a means to enable veriﬁcation of users’ loca-
tion claims. However, as we show in this paper, they are
vulnerable to context guessing attacks. To make PoPs re-
silient to malicious provers we propose two complementary
approaches for making context-based PoPs: one approach
focuses on surprisal ﬁltering based on estimating the entropy
of particular PoPs in order to detect context measurements
vulnerable to such attacks. The other approach is based
on utilizing longitudinal observations of ambient modalities
like noise level and ambient luminosity. It is capable of ex-
tracting more entropy from the context to construct PoPs
that are hard to guess by an attacker even in situations in
which other context sensor modalities fail to provide reliable
PoPs.
Categories and Subject Descriptors
K.6.5 [Management of computing and information
systems]: Security and Protection—Authentication; D.4.6
[Operating Systems]: Security and Protection—Access
controls
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’15, April 14–17, 2015, Singapore..
Copyright c(cid:13) 2015 ACM 978-1-4503-3245-3/15/04 ...$15.00.
http://dx.doi.org/10.1145/2714576.2714634.
Keywords
co-presence proofs; context-awareness; context guessing at-
tacks
1.
INTRODUCTION
Contemporary mobile devices are capable of utilizing a
range of positioning technologies such as GPS or network
triangulation to ﬁnd their locations. Therefore, new ap-
plications and services leveraging the mobile device’s loca-
tioning abilities are rapidly emerging. For instance, Face-
book and other online social networks (OSNs) extensively
utilize location “check-ins” of users to enhance their services;
Foursquare [8] uses the location information to connect users
to local businesses like shops or restaurants; a number of
business owners oﬀer concrete beneﬁts such as free vouch-
ers, special discount, and even cash value to the most active
registrants visiting their shops or restaurants.
The LBS business model is built upon the premise of trust-
worthiness of mobile users. However, as the LBS and busi-
nesses are on the rise, so are the clients’ incentives to engage
in location cheating for their personal beneﬁt. Misbehaving
users may obtain unjustiﬁed beneﬁts at particular venues
by repeatedly making false location check-ins. “Fake loca-
tion” applications that aid the cheating clients are already
available for popular smartphone platforms.
A drawback of currently deployed positioning technolo-
gies is that they rely on the mobile client to perform the
positioning operation. It is diﬃcult for external entities to
determine whether the location claimed by a client device is
in fact correct. Therefore, there is a need for location proofs:
methods for verifying the correctness of location claims that
clients present to the LBS. In peer-to-peer scenarios, mobile
devices may require proofs of co-presence from other devices
such that they can control their visibility. For example, a
device might want to reveal its presence in a particular loca-
tion only to those peer devices that are present in the same
567location [10]. Therefore, the devices need to be able to ver-
ify that a location claim made by a peer device indicating
proximity is indeed genuine. The peer device is required
to present a proof of co-presence to establish the validity of
their claim.
In both cases, we model the situation as fol-
lows: a prover aims to provide a proof-of-presence (PoP) to
a veriﬁer that they are in the same context, i.e., present in
the same proximate environment.
Prior work has suggested two main classes of solutions
for constructing PoPs: beaconing and context-based PoPs.
The former class of proofs is based on active beaconing of
information by the veriﬁer into its immediate vicinity. The
potential provers are then required to capture this informa-
tion using their on-board sensors (e.g., WiFi or Bluetooth).
The beaconed information is utilized by the prover either di-
rectly as the proof or in a proof-of-knowledge protocol with
the veriﬁer. The underlying presumption of this approach is
that only a device actually co-present with the veriﬁer is able
to accurately capture the information beaconed by the ver-
iﬁer. In peer-to-peer scenarios, beaconing information into
the context has the drawback that the veriﬁer has to reveal
its presence in the context. However, revealing presence may
be undesirable because of its adverse impact on the veriﬁer’s
privacy. For example, if beaconing is realized using a WiFi
or Bluetooth channel, the verifying device needs to actively
emit the beacon information and thus expose its own MAC
address.
In this paper, we focus on context-based PoPs. These are
based on simultaneous sensing of contextual data by both
the veriﬁer and the prover. A number of such methodologies
have been proposed [5, 10, 14–16]. In this setting the prover
and veriﬁer concurrently sample their incident context via
sensors. The supposition is that the transient contextual
ﬂuctuations cannot be exactly sensed or predicted by an
attacker outside the context. These measurements are ei-
ther directly used to generate a common key (e.g., [16]), or
the prover sends its measurements to the veriﬁer who com-
pares them to its own measurements. Because of the sensing
and synchronization jitters, the measurements often contain
noise. If the (noisy) measurements are similar enough, this
constitutes a PoP. In the following, we denote such proofs
as context-based proofs of presence.
Earlier work on context-based PoPs do not consider the
possibility of context-guessing attacks, either because these
are out of scope [15, 16], or, they assume that the used con-
text modalities provide suﬃcient entropy so that attackers
are not able to fabricate context-based proofs [10].
Our goal and conttributions: In this paper, we empir-
ically analyze such attacks against commonly used context
sensor modalities such as Bluetooth and WiFi, thus demon-
strating that for reliable PoPs, the entropy of individual
context observations needs to be taken into account also.
We address context guessing attacks by proposing two
complementary approaches: First we show how by using
surprisal ﬁltering we can make sure that only PoPs with
suﬃcient entropy are admitted as valid PoPs. The approach
is based on applying data mining methods for proﬁling the
context and estimating the occurrence probability of partic-
ular context parameter combinations in them. Second we
make use of longitudinal ambient context observations to
extract inherent randomness from the context that contains
suﬃcient entropy to make context guessing attacks in most
cases impractical. Earlier approaches utilize ambient con-
Attacker A
Veriﬁer V
Prover P
Charlie
Alice
Bob
Figure 1: Scenario 1: Peer co-presence
text data (e.g., [5, 15]), in which only momentary snapshots
of the context are considered. In contrast, we monitor the
context and short-term changes in the context’s physical pa-
rameters over a longer time period and utilize these changes
in the context as a means to extract suﬃcient entropy to
construct a reliable PoP.
We make the following contributions:
• We empirically analyze the feasibility of context-guess-
ing attacks on context modalities that have earlier been
used for co-location veriﬁcation (Bluetooth and WiFi)
and show that these modalities are in fact vulnera-
ble to attacks in which a malicious prover fabricates
context-based PoPs to cheat about its location.
• We propose two countermeasures to mitigate context-
guessing attacks: surprisal ﬁltering which is based on
proﬁling and estimating the entropy associated with
individual PoPs, and, the use of longitudinal obser-
vations of ambient physical properties of the context.
We show based on empirical data that surprisal ﬁl-
tering provides an eﬃcient method for identifying po-
tentially too weak PoPs and demonstrate how to use
longitudinal context data in such cases to extract suf-
ﬁcient entropy from the context to construct a reliable
context-based proof-of-presence.
2. PROBLEM SETTING
Context-based proofs-of-presence play a role in proofs of
(co-)presence between peers and proofs of presence at a
venue with regard to a Location-Based Service (LBS). Unlike
some earlier works that consider the comparison of context
information for creating a pairing between the principals
(e.g., [16]), we assume that there already exists a security
association between the parties. Therefore, we are not con-
sidering the threat of man-in-the-middle or eavesdropping
attacks in this discussion. We focus on the problem of one
party lying about its own context to the other party.
The ﬁrst scenario is depicted in Fig. 1: Alice, Bob and
Charlie are friends in an Online Social Network (OSN). Alice
is willing to automatically share her status information or
engage in communications, like instant chat with her OSN
friends who are present in the same context as she is (i.e.,
Bob), but not with others (e.g., Charlie). Therefore, Bob
needs to prove co-presence to Alice in order to get connected
to her.
In the other scenario depicted in Fig. 2, a client of an
LBS wants to prove to the LBS its presence at a venue (e.g.,
a restaurant or a shop) in order to obtain beneﬁts like re-
bates or gift cards given out to loyal customers of the venue.
The LBS cannot rely on unilateral presence claims of the
client, since the client has an incentive to cheat in order
to obtain the above-mentioned beneﬁts. Independent proof
5681. PoP request
2. PoP
Client
(Prover)
Venue
(Veriﬁer)
Veriﬁer V
scan CV (t)
PoP_REQ(cid:107)t
CP (t)
Prover P
scan CP (t)
verify: dist(CV (t), CP (t)) < ∆thr
PoP_ACCEPT
3. PoP
LBS
Figure 2: Scenario 2: Presence at a venue
of the client’s presence provided by the venue is therefore
required.
2.1 Threat model and Assumptions
In both scenarios, the attacker A is a malicious prover,
who fabricates a PoP in order to cheat the veriﬁer V into
believing that A is in the same context as V .
In Scenario 1 A is a malicious user, e.g., Charlie in Fig. 1,
who engages in a cyberstalking attack and wants to reveal a
target user’s (e.g., Alice in Fig. 1) location without actually
being co-located with her. To do this, Charlie fabricates
location claims for places which he knows Alice is known
to visit, and waits for which location Alice responds to his
location claim, thereby learning Alice’s whereabouts. Alice
acts as the veriﬁer V and Charlie as the malicious prover A.
For Scenario 2, A is a malicious client of the LBS, who
wants to do fake location check-ins at a venue for obtaining
beneﬁts even though he has not visited the venue in reality.
The venue acts as the veriﬁer V . The malicious client A
If V
fabricates PoPs and presents them to the venue V .
falsely accepts A’s PoP as genuine, it will issue a PoP to A,
which A can then use to falsely convince the LBS to believe
that A has visited the venue in question.
In particular, A is likely to target such contexts that it can
monitor over an extended period of time in order to obtain
infromation that is useful for fabricating PoPs. Therefore
we have to assume that for any context X, the attacker
A has acquired a rich context proﬁle that it can utilize in
maximizing its chances of fabricating a PoP that would be
accepted by V .
2.2 Problem Deﬁnition
The basic mechanism for providing context-based PoPs
which is applicable in the above scenarios is shown in Fig. 3.
Both the veriﬁer V and prover P record a context measure-
ment CV (t) and CP (t) at time point t. The prover P then
sends its context measurement CP (t) to the veriﬁer V , who
compares it with its own context measurement CV (t) and
determines, whether CP (t) is similar enough to accept it as
a proof-of-presence of P . The rationale behind such PoPs
is that devices in the same context will observe roughly the
same contextual events and environmental conditions and
therefore their context measurements will be more similar
than context measurements of devices that are not in the
same context.
To mitigate the risk of V erroneously accepting PoPs that
the attacker A has fabricated, V needs to be able to eval-
uate the risk that a particular PoP could be fabricated in
Figure 3: Context-based proof-of-presence
Context X
Veriﬁer V
CV (t)
CA(t − k)
CA(t − k)
malicious Prover A
Figure 4: Overview of the context guessing attack
A(t)) < ∆thr.
that context. We therefore need a way to determine the
entropy of V ’s context measurements CV , i.e., how diﬃ-
cult it would be for A to fabricate a valid C∗
A such that
dist(CV (t), C∗
In addition, to address such
cases in which the context measurement of V would be too
easily guessed by A, we need to augment the context mea-
surements used in the PoPs with appropriate context modal-
ities that contain suﬃcient entropy against this guessing at-
tack.
3. CONTEXT GUESSING
A malicious prover A may try to make the veriﬁer V be-
lieve that he is in the V ’s context X, even though he is
located somewhere else, for example to make false location
chek-ins at a venue so that he will obtain unjustiﬁed beneﬁts
from the venue. One way for A to achieve this is to launch a
context guessing attack. A fabricates a context measurement
C∗
A and presents it as a context-based PoP to V . If the fab-
ricated measurement is similar enough to V ’s measurement
CV , i.e., if dist(CV (t), C∗
A(t)) < ∆thr, V will falsely accept
it as a valid PoP.
For example, when executing the attack at timepoint t,
as shown in Fig. 4, A can replay an old context measure-
ment CA(t − k) it obtained while visiting context X at an
earlier timepoint t − k, claiming it to be his current con-
text measurement. The attack will succeed, if CA(t − k)
is similar enough to the veriﬁer’s measurement CV (t). Al-