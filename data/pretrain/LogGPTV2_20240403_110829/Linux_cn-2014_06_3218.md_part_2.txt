```
# umount /lvm-mount/
# lvremove /dev/volume-group1/lv1 
```
### 扩展一个LVM卷
调整逻辑卷大小的功能是LVM最有用的功能。这个部分会讨论我们怎么样扩展一个存在的逻辑卷。下面，我们将会扩展先前创建的逻辑卷‘lv1’扩大到200MB。
注意，调整逻辑卷大小之后，也需要对文件系统调整大小进行匹配。这个额外的步骤各不相同，取决于创建文件系统的类型。在本文中，我们使用'lv1'创建了ext4类型的文件系统，所以这里的操作是针对ext4文件系统的。（ext2/3文件系统也类同）。命令的执行顺序是很重要的。
首先，我们卸载掉lv1卷
```
# umount /lvm-mount/ 
```
然后，设置卷的大小为200M
```
# lvresize -L 200M /dev/volume-group1/lv1 
```
接下来，检查磁盘错误
```
# e2fsck -f /dev/volume-group1/lv1 
```
运行以下命令扩展文件系统以后，ext4信息就更新了。
```
# resize2fs /dev/volume-group1/lv1 
```
现在，这个逻辑卷应该已经扩展到200MB了。我们检查LV的状态来验证。
```
# lvdisplay 
```
---
```
  --- Logical volume ---
  LV Name                /dev/volume-group1/lv1
  VG Name                volume-group1
  LV UUID                9RtmMY-0RIZ-Dq40-ySjU-vmrj-f1es-7rXBwa
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                200.00 MiB
  Current LE             50
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:2
```
现在，这个逻辑卷可以再次挂载，同样这个方法也可用于其他分区。
### 缩减一个LVM卷
这章节介绍缩减LVM卷大小的方法。命令的顺序同样重要。并且，下列命令对ext2/3/4文件系统同样有效。
注意减少逻辑卷的大小值若小于储存的数据大小，存储在后面的数据会丢失。
首先，卸载掉卷。
```
# umount /dev/volume-group1/lv1
```
然后，检测磁盘错误。
```
# e2fsck -f /dev/volume-group1/lv1 
```
接下来缩小文件系统，更新ext4信息。
```
# resize2fs /dev/volume-group1/lv1 100M 
```
完成以后，减少逻辑卷大小
```
# lvresize -L 100M /dev/volume-group1/lv1 
```
> 
> WARNING: Reducing active logical volume to 100.00 MiB THIS MAY DESTROY YOUR DATA (filesystem etc.) Do you really want to reduce lv1? [y/n]: y Reducing logical volume lv1 to 100.00 MiB Logical volume lv1 successfully resized
> 
> 
> 
最后，验证调整后的逻辑卷大小。
```
# lvdisplay 
```
---
```
--- Logical volume ---
  LV Name                /dev/volume-group1/lv1
  VG Name                volume-group1
  LV UUID                9RtmMY-0RIZ-Dq40-ySjU-vmrj-f1es-7rXBwa
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                100.00 MiB
  Current LE             25
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:2
```
### 扩展一个卷组
本节将讨论扩展卷组的方法，将一个物理卷添加到卷组。让我们假设我们的卷组'volume-group1'已经满了，需要扩大。手上的硬盘（sdb）已经没有其他空闲分区，我们添加了另外一个硬盘（sdc）。我们将看到如何把sdc的分区添加到卷组以扩展。
检测现在卷组状态
```
# vgdisplay volume-group1 
```
---
```
 --- Volume group ---
  VG Name               volume-group1
  System ID
  Format                lvm2
  Metadata Areas        3
  Metadata Sequence No  8
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                3
  Act PV                3
  VG Size               3.02 GiB
  PE Size               4.00 MiB
  Total PE              774
  Alloc PE / Size       25 / 100.00 MiB
  Free  PE / Size       749 / 2.93 GiB
  VG UUID               bwd2pS-fkAz-lGVZ-qc7C-TaKv-fFUC-IzGNBK
```
首先，我们创建一个2GB分区sdc1，类型为LVM（8e），如教程前所述。
```
# fdisk /dev/sdc 
```
---
```
Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-1044, default 1):
Using default value 1
Last cylinder, +cylinders or +size{K,M,G} (1-1044, default 1044): +2G
Command (m for help): t
Selected partition 1
Hex code (type L to list codes): 8e
Changed system type of partition 1 to 8e (Linux LVM)
Command (m for help): w
The partition table has been altered!
```
然后，我们创建一个物理卷 /dev/sdc1
```
# pvcreate /dev/sdc1 
```
现在，物理卷已经准备好了，我们可以简单地将它增加到已存在的卷组'volume-group1'上。
```
# vgextend volume-group1 /dev/sdc1 
```
使用vgdisplay来验证（可以看到卷组大小已经增大）。
```
# vgdisplay 
```
---
```
  --- Volume group ---
  VG Name               volume-group1
  System ID
  Format                lvm2
  Metadata Areas        4
  Metadata Sequence No  9
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                4
  Act PV                4
  VG Size               5.03 GiB
  PE Size               4.00 MiB
  Total PE              1287
  Alloc PE / Size       25 / 100.00 MiB
  Free  PE / Size       1262 / 4.93 GiB
  VG UUID               bwd2pS-fkAz-lGVZ-qc7C-TaKv-fFUC-IzGNBK
```
注意，尽管我们使用一个单独的磁盘做示范，其实只要是‘8e’类型的磁盘分区都可以用来扩展卷组。
总结一下，LVM是一个非常给力的工具，用来创建和管理可变大小的分区。本文中，我们已经介绍了动态分区如何在LVM中创建和使用。我们也介绍了扩展/缩小逻辑卷和卷组的方法，和如何增加一个新的磁盘到LVM。
希望对你有帮助。
---
via: 
译者：[Vic\_\_\_](http://www.vicyu.net) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出