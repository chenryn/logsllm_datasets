# HITCON 2013: CYBERWAR, IN HACK WE TRUST
## July 19-20, 2013
### How can I find 100 0-day vulnerabilities in just 1 day?
**Version:** Draft  
**Speaker:** R3d4l3rt

---

## Introduction
### Speaker Introduction
- **Louis Hur** is the President and CEO of NSHC Corporation. He co-founded NSHC with four hackers in 2003 while studying at the university and has been the CEO since then.
- Mr. Louis brings over 15 years of experience in security and bug hunting, helping clients reduce their IT security risks.
- Prior to starting NSHC, he was a frequent speaker on Internet security issues and has appeared as an expert on various media outlets, including HK TV, MBC, and KBS.
- **Experience (2010-2013):**
  - 2013: Vulnerability Analysis for NSHC’s R3d4l3rt Team (discovered multiple 0-day vulnerabilities).
  - 2011: Black Hat Abu Dhabi Speaker.
  - 2010: CSO Conference Speaker.
  - 2012: CSO Conference Speaker in Korea.
  - 2011: Served as an instructor for the Army Investigation Division.

---

## Outline
1. **Introduction of Speaker**
2. **Objective: Finding Many Vulnerabilities**
   - **Think Easier and Change One’s Way of Thinking**
   - **How to Find Vulnerabilities**
   - **About ActiveX**
   - **APT Attacks via ActiveX (Case Studies)**
3. **Project Overview**
   - **Automatic Sample Collection Tool (Demo)**
   - **Auto Install Sample Tool (Demo)**
   - **Introduction to Fuzzer**
   - **Introduction to Exploit**
4. **Results and Examples**
   - **Tested Results**
   - **Examples (ActiveX Vulnerability)**

---

## Project Overview
### Objective: Finding Many Vulnerabilities
- **Finding many vulnerabilities in a short time is challenging.**
- **Vulnerability Definition:** A weakness or flaw in hardware or software that can be exploited by attackers.
- **Key to Red Alert Project:** Focus on identifying weaknesses and flaws.

### Think Easier and Change One’s Way of Thinking
- **Finding many vulnerabilities in one application in a short time is difficult.**
- **Solution:** Target multiple applications simultaneously. This approach increases the likelihood of discovering vulnerabilities.
- **Fuzzing:** A robust testing mechanism that involves throwing random data at a program to see how it handles it.
  - **Advantages:**
    - Fast and effective.
    - Easy to implement.
    - Best solution for finding many vulnerabilities in a short time.

### Why Fuzz ActiveX?
- **ActiveX controls** are based on COM and OLE technologies, introduced by Microsoft in 1996.
- **Security Issues:** ActiveX controls run native code in the browser, making them a prime target for exploitation.
- **APT Attacks via ActiveX:** In March 2013, a large-scale cyber attack occurred in South Korea, targeting financial institutions and media. North Korea used ActiveX vulnerabilities in these attacks.

---

## How to Find Bugs Easily
### Step 1: Automatic Sample Collection
1. **Proxy Grabber:**
   - Collects proxy IP addresses to evade detection.
   - Uses Hidemyass and Python script.
2. **ActiveX_Parser.py:**
   - Gathers information about ActiveX controls from web search engines.
   - Outputs download links, CLSID, and installation scripts.

### Step 2: Automatic Installation
1. **ActiveX_List_Div.py:**
   - Separates the installation script into individual scripts for quick and easy installation.
2. **ActiveX_Option_Setting.bat:**
   - Changes Internet Explorer options to allow ActiveX execution without warnings.
3. **AxInstallRun.bat:**
   - Runs individual scripts for automatic installation.

### Step 3: Fuzzing
1. **Red_Alert_AxFuzzer.py:**
   - Tests installed applications for vulnerabilities.
   - Collects Proof of Concept (PoC) lists.

### Step 4: Exploitation
1. **Exploitable PoC:**
   - Identifies vulnerable values in PoC data.
   - Overwrites the EIP register address, making it easier to exploit.

---

## Results and Examples
### Tested Results
- **Zero-Day Vulnerabilities Found:** 24 confirmed ActiveX vulnerabilities.
- **APT Attacks:** North Korea has frequently used ActiveX vulnerabilities in large-scale cyber attacks.

### Example: ActiveX Vulnerability
- **Scenario:**
  1. Victim accesses a malicious web page.
  2. Malicious ActiveX control installs.
  3. Important information is sent to the attacker.
  4. Attacker gains control of the EIP register, facilitating further exploitation.

---

This presentation aims to provide a comprehensive overview of the methods and tools used to discover and exploit vulnerabilities, particularly focusing on ActiveX controls.