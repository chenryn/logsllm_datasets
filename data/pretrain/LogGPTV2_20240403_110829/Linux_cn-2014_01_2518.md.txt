---
author: ''
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 64666
date: '2014-01-26 16:06:00'
editorchoice: false
excerpt: "用户账户管理是系统管理员的重要职责之一，而密码安全又是系统安全的关键部分。本教程将指导您如何在 Linux 系统上配置密码策略。\r\n\r\n假设您的 Linux 系统已经启用了 PAM (Pluggable Authentication Modules)..."
fromurl: ''
id: 2518
islctt: true
largepic: /data/attachment/album/201401/26/150643ik7nnnpvtjzm9jnv.png
permalink: /article-2518-1.html
pic: /data/attachment/album/201401/26/150643ik7nnnpvtjzm9jnv.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: "用户账户管理是系统管理员的重要职责之一，而密码安全又是系统安全的关键部分。本教程将指导您如何在 Linux 系统上配置密码策略。\r\n\r\n假设您的 Linux 系统已经启用了 PAM (Pluggable Authentication Modules)..."
tags:
- Linux
- 密码
- 策略
- 安全
- cracklib
- Debian
- Ubuntu
- Mint
- CentOS
- Fedora
thumb: false
title: 如何在 Linux 上设置密码策略
titlepic: false
translator: bazz2
updated: '2014-01-26 16:06:00'
---

## 如何在 Linux 上设置密码策略

用户账户管理是系统管理员的重要职责之一，而密码安全又是系统安全的关键部分。本教程将指导您如何在 Linux 系统上配置密码策略。

![](/data/attachment/album/201401/26/150643ik7nnnpvtjzm9jnv.png)

假设您的 Linux 系统已经启用了 [PAM (Pluggable Authentication Modules)](http://www.linux-pam.org/)，因为大多数现代 Linux 发行版都默认使用 PAM。

### 准备工作

安装 PAM 的 `cracklib` 模块，该模块提供额外的密码检查功能。

对于 Debian、Ubuntu 或 Linux Mint 系统：
```sh
$ sudo apt-get install libpam-cracklib
```

CentOS、Fedora 和 RHEL 系统已经默认安装了 `cracklib` PAM 模块，因此无需执行上述操作。

为了实施密码策略，我们需要修改 `/etc/pam.d` 目录下的 PAM 配置文件。一旦修改完成，策略会立即生效。

**注意：此教程中的密码策略对非 root 用户有效，但不适用于 root 用户。**

### 禁止使用旧密码

找到包含 `password` 和 `pam_unix.so` 字段，并附加 `remember=5` 参数的那一行。这表示禁止使用最近用过的 5 个密码（已使用的密码会被保存在 `/etc/security/opasswd` 文件中）。

对于 Debian、Ubuntu 或 Linux Mint 系统：
```sh
$ sudo vi /etc/pam.d/common-password
```
添加或修改以下行：
```sh
password [success=1 default=ignore] pam_unix.so obscure sha512 remember=5
```

对于 CentOS、Fedora 和 RHEL 系统：
```sh
$ sudo vi /etc/pam.d/system-auth
```
添加或修改以下行：
```sh
password sufficient pam_unix.so sha512 shadow nullok try_first_pass use_authtok remember=5
```

### 设置最短密码长度

找到包含 `password` 和 `pam_cracklib.so` 字段，并附加 `minlen=10` 参数的那一行。这表示最小密码长度为（10 - 类型数量）。这里的“类型数量”指的是不同的字符类型数量（大写字母、小写字母、数字和标点符号）。如果您的密码同时使用了这四种类型的字符，并且 `minlen` 设为 10，则最短密码长度允许为 6 个字符。

对于 Debian、Ubuntu 或 Linux Mint 系统：
```sh
$ sudo vi /etc/pam.d/common-password
```
添加或修改以下行：
```sh
password requisite pam_cracklib.so retry=3 minlen=10 difok=3
```

对于 CentOS、Fedora 和 RHEL 系统：
```sh
$ sudo vi /etc/pam.d/system-auth
```
添加或修改以下行：
```sh
password requisite pam_cracklib.so retry=3 difok=3 minlen=10
```

### 设置密码复杂度

找到包含 `password` 和 `pam_cracklib.so` 字段，并附加 `ucredit=-1 lcredit=-2 dcredit=-1 ocredit=-1` 参数的那一行。这表示密码必须至少包含一个大写字母（`ucredit`）、两个小写字母（`lcredit`）、一个数字（`dcredit`）和一个标点符号（`ocredit`）。

对于 Debian、Ubuntu 或 Linux Mint 系统：
```sh
$ sudo vi /etc/pam.d/common-password
```
添加或修改以下行：
```sh
password requisite pam_cracklib.so retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-2 dcredit=-1 ocredit=-1
```

对于 CentOS、Fedora 和 RHEL 系统：
```sh
$ sudo vi /etc/pam.d/system-auth
```
添加或修改以下行：
```sh
password requisite pam_cracklib.so retry=3 difok=3 minlen=10 ucredit=-1 lcredit=-2 dcredit=-1 ocredit=-1
```

### 设置密码过期期限

编辑 `/etc/login.defs` 文件，可以设置当前密码的有效期限。具体变量如下所示：
```sh
$ sudo vi /etc/login.defs
```
添加或修改以下行：
```sh
PASS_MAX_DAYS 150
PASS_MIN_DAYS 0
PASS_WARN_AGE 7
```

这些设置要求用户每 6 个月更改一次密码，并且会在密码到期前 7 天提醒用户。

如果您想为每个用户设置不同的密码期限，可以使用 `chage` 命令。以下命令可以查看某个用户的密码限期：
```sh
$ sudo chage -l xmodulo
```

输出示例：
```sh
Last password change : Dec 30, 2013
Password expires : never
Password inactive : never
Account expires : never
Minimum number of days between password change : 0
Maximum number of days between password change : 99999
Number of days of warning before password expires : 7
```

默认情况下，用户的密码永不过期。

以下命令用于修改 `xmodulo` 用户的密码期限：
```sh
$ sudo chage -E 6/30/2014 -m 5 -M 90 -I 30 -W 14 xmodulo
```

该命令将密码期限设为 2014 年 6 月 30 日。此外，密码更改的最短周期为 5 天，最长周期为 90 天。密码过期前 14 天会发送消息提醒用户，过期后账户会被锁定 30 天。

[![](/data/attachment/album/201401/26/150820tiit1t0w2xlbbxc0.jpg)](http://www.flickr.com/photos/xmodulo/11640903324/)

---
via: 
译者：[bazz2](https://github.com/bazz2) 校对：[Caroline](https://github.com/carolinewuyan)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出
---