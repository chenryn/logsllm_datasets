/usr/lib/x86_64-linux-gnu/libnvcuvid.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-eglcore.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-glcore.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-tls.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-glsi.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-fbc.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-rtcore.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvoptix.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libEGL_nvidia.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libGLESv2_nvidia.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libGLESv1_CM_nvidia.so.525.89.02      
/usr/lib/x86_64-linux-gnu/libnvidia-glvkspirv.so.525.89.02      
/lib/firmware/nvidia/525.89.02/gsp_ad10x.bin      
/lib/firmware/nvidia/525.89.02/gsp_tu10x.bin      
```      
cuda容器分为3种, 根据需要取用, 我们部署postgresql + pg_strom可能需要devel cuda.  
https://hub.docker.com/r/nvidia/cuda/#!  
Three flavors of images are provided:  
- base: Includes the CUDA runtime (cudart)  
- runtime: Builds on the base and includes the CUDA math libraries, and NCCL. A runtime image that also includes cuDNN is available.  
- devel: Builds on the runtime and includes headers, development tools for building CUDA images. These images are particularly useful for multi-stage builds.  
拉取devel cuda容器:  
```  
docker pull nvidia/cuda:12.1.0-devel-ubuntu22.04  
```  
启动cuda容器, 指定加载nvidia card:      
```      
docker run -d -it --cap-add=SYS_PTRACE --privileged=true -e "NVIDIA_VISIBLE_DEVICES=all" -e "NVIDIA_DRIVER_CAPABILITIES=all" --name cuda --runtime=nvidia --gpus all nvidia/cuda:12.1.0-devel-ubuntu22.04      
```      
```      
root@haier-5000a:~# docker ps -a      
CONTAINER ID   IMAGE                                  COMMAND                  CREATED         STATUS                     PORTS     NAMES  
7d89f9042288   nvidia/cuda:12.1.0-devel-ubuntu22.04   "/opt/nvidia/nvidia_…"   7 seconds ago   Up 5 seconds                         cuda  
docker exec -it -u root --privileged -w /root cuda /bin/bash        
root@f7d6b9e160a3:~# nvidia-debugdump -l         
Found 1 NVIDIA devices      
	Device ID:              0      
	Device name:            NVIDIA GeForce MX150      
	GPU internal ID:        GPU-75749e0b-cef2-0711-eee6-23dbc542302d      
```      
按这篇信息配置一下上述容器, 方便我们部署postgresql+pg_strom    
- [《记录下 在 debian 宿主机中部署和使用 docker (常用docker命令、debian容器常用配置; debian容器部署duckdb和PostgreSQL例子)》](../202303/20230318_01.md)    
配置 ubuntu 22.04 apt 国内源:      
```      
apt update    
apt install -y vim    
cp /etc/apt/sources.list /etc/apt/sources.list.bak    
vi /etc/apt/sources.list    
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse  
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse  
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse  
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse  
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse  
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse  
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse  
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse  
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse  
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse  
apt update     
```   
安装常用包:    
```    
apt install -y locales wget glibc-source zlib1g-dev pkg-config libicu-dev icu-devtools libbison-dev libfl-dev git libreadline-dev libedit-dev g++ make cmake man-db vim dnsutils clang libssl-dev default-jdk unixodbc unixodbc-dev bash-completion     
```    
配置 bashrc:     
```    
vi ~/.bashrc
#  add by digoal      
alias rm='rm -i'      
alias cp='cp -i'      
alias ll='ls -larth'      
alias mv='mv -i'
export LC_ALL=en_US.UTF-8
```    
配置 bash 补齐: 在`/etc/bash.bashrc`中编辑`enable bash completion in interactive shells`这一项配置，将其注释全部去掉.     
配置locale:   
```
locale-gen en_US.UTF-8
```
创建用户:      
```    
useradd -s /bin/bash -d /home/postgres -m postgres      
```    
duckdb 测试:     
```      
git clone --depth 1 -b v0.7.1 https://github.com/duckdb/duckdb      
cd duckdb      
env CC=clang CXX=clang++ CMAKE_BUILD_PARALLEL_LEVEL=4 EXTENSION_STATIC_BUILD=1 BUILD_ICU=1 BUILD_TPCH=1 BUILD_TPCDS=1 BUILD_FTS=1 BUILD_VISUALIZER=1 BUILD_HTTPFS=1 BUILD_JSON=1 BUILD_JEMALLOC=1 BUILD_EXCEL=1 BUILD_INET=1 STATIC_OPENSSL=1 BUILD_SQLSMITH=1 BUILD_TPCE=1 make benchmark -j 4      
```     
这些基本配置弄好后, 这个容器装东西测试基本上该有的依赖都有, 比较省心.    
在这个cuda容器中可以测试postgresqsl + pg_strom插件使用cuda能力.        
[《PostgreSQL GPU 加速(HeteroDB pg_strom) (GPU计算, GPU-DIO-Nvme SSD, 列存, GPU内存缓存)》](../201806/20180602_02.md)      
## 参考      
https://hub.docker.com/r/nvidia/cuda/      
https://github.com/NVIDIA/nvidia-docker      
https://developer.nvidia.com/blog/updating-the-cuda-linux-gpg-repository-key/      
https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html      
更多docker用法参考:      
[《如何用 PolarDB 证明巴菲特的投资理念 - 包括PolarDB on Docker简单部署》](../202209/20220908_02.md)        
[《记录下 在 debian 宿主机中部署和使用 docker (常用docker命令、debian容器常用配置; debian容器部署duckdb和PostgreSQL例子)》](../202303/20230318_01.md)    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")  
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")  
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")  
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")  
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")  
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")  
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")