常用基础命令
===
[已放入 linux-command 仓库中维护](https://github.com/jaywcjlove/linux-command)
# 其它命令
`sudo chmod 755 -R node` 修改目录权限  
`sudo lsof -nP -iTCP -sTCP:LISTEN` 查看本地服务  
`ps -ef | grep websocket` 查看websocket进程  
`ps aux | grep mysql` 查看mysql进程  
`sudo kill 443` 杀掉进程  
# 给目录权限
`sudo chmod -R 777 目录`
# 搜索 
`find path -option [-print] [-exec -ok command] { }\;`  
- pathname: find命令所查找的目录路径。例如用`.`来表示当前目录，用`/`来表示系统根目录。
- `-print`: find命令将匹配的文件输出到标准输出。
- `-exec`: find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为`'command' { } \;`，注意`{ }`和`\;`之间的空格。
- `-ok`： 和`-exec`的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。
```bash
$ find ~ -name "*.txt"  -print   #在$HOME中查.txt文件并显示
$ find . -name "*.txt"  -print
$ find . -name "[A-Z]*" -print   #查以大写字母开头的文件
$ find /etc -name "host*"  -print  #查以host开头的文件
# 查以两个小写字母和两个数字开头的txt文件
$ find .   -name   "[a-z][a-z][0–9][0–9].txt" -print   
$ ind . -perm   755   -print
$ ind . -perm -007   -exec ls -l {} \;   #查所有用户都可读写执行的文件同-perm 777
$ ind . -type d   -print
$ ind . !  -type d   -print 
$ ind . -type l   -print
```
# ls
> 类似于dos下的dir命令
ls最常用的参数有三个： -a -l -F。
ls –a
Linux上的文件以.开头的文件被系统视为隐藏文件，仅用ls命令是看不到他们的，而用ls -
a除了显示一般文件名外，连隐藏文件也会显示出来。
ls –l
该参数显示更详细的文件信息。
ls –F
使用这个参数表示在文件的后面多添加表示文件类型的符号，例如*表示可执行，/表示目录，@表示连结文件，这都是因为使用了-F这个参数。但是现在基本上所有的Linux发行版本的ls都已经内建了-F参数，也就是说，不用输入这个参数，我们也能看到各种分辨符号。
# cd
> 用于切换用户当前工作目录
cd aaa 进入aaa目录
cd    命令后不指定目录，会切换到当前用户的home 目录
cd ~   作用同cd后不指定目录，切换到当前用户的home 目录
cd -   命令后跟一个减号，则会退回到切换前的目录
cd ..   返回到当前目录下的上一级目录
# pwd
> 用于显示用户当前工作目录
# mkdir 和 rmdir
> midir:创建目录 / rmdir:删除目录
两个命令都支持-p参数，对于mkdir命令若指定路径的父目录不存在则一并创建，对于rmdir命令则删除指定路径的所有层次目录，如果文件夹里有内容，则不能用rmdir命令
如下：
```bash
mkdir -p 1/2/3
rmdir -p 1/2/3 
```
## mkdir循环创建目录
[How do I make multiple directories at once in a directory?](http://unix.stackexchange.com/questions/636/how-do-i-make-multiple-directories-at-once-in-a-directory)
```bash
for char in {A..Z}; do
    mkdir $char
done
for num in {1..100}; do
    mkdir $num
done
```
# cp
> 复制命令
- 复制一个文件到另一目录：`cp 1.txt ../test2`
- 复制一个文件到本目录并改名：`cp 1.txt 2.txt`
- 复制一个文件夹a并改名为b，-r或-R 选项表明递归操作：`cp -r a b`
- 同时拷贝多个文件，我们只需要将多个文件用空格隔开。`cp file_1.txt file_2.txt file_3.txt /home/pungki/office`
# mv
> 移动命令
将一个文件移动到另一个目录：mv 1.txt ../test1
将一个文件在本目录改名：mv 1.txt 2.txt
将一个文件一定到另一个目录并改名：mv 1.txt ../test1/2.txt
# rm命令
> 命令用于删除文件，与dos下的del/erase命令相似，rm命令常用的参数有三个：-i，-r，-f。
1. –i ：系统在删除文件之前会先询问确认，用户回车之后，文件才会真的被删除。需要注意，linux下删除的文件是不能恢复的，删除之前一定要谨慎确认。
2. –r：该参数支持目录删除，功能和rmdir命令相似。
3. –f：和-i参数相反，-f表示强制删除
# find
> find 查找目录和文件
```bash
-name   filename   #查找名为filename的文件
-perm              #按执行权限来查找
-user    username  #按文件属主来查找
-group groupname   #按组来查找
-mtime   -n +n     #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
-atime    -n +n    #按文件访问时间来查GIN: 0px">
-ctime    -n +n    #按文件创建时间来查找文件，-n指n天以内，+n指n天以前
-nogroup           #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser            #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer   f1 !f2    #找文件，-n指n天以内，+n指n天以前 
-ctime    -n +n    #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 
-nogroup           #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser            #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer   f1 !f2    #查更改时间比f1新但比f2旧的文件
-type    b/d/c/p   #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size      n[c]    #查长度为n块[或n字节]的文件
-depth             #使查找在进入子目录前先行查找完本目录
-fstype            #查更改时间比f1新但比f2旧的文件
-type    b/d/c/p   #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size      n[c]    #查长度为n块[或n字节]的文件
-depth             #使查找在进入子目录前先行查找完本目录
-fstype            #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
-mount             #查文件时不跨越文件系统mount点
-follow            #如果遇到符号链接文件，就跟踪链接所指的文件
-cpio %;           #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
-mount             #查文件时不跨越文件系统mount点
-follow            #如果遇到符号链接文件，就跟踪链接所指的文件
-cpio              #对匹配的文件使用cpio命令，将他们备份到磁带设备中
-prune             #忽略某个目录
```
例子： 
- ~ 代表的是$home目录，
```bash
$ find . -name '*.DS_Store' -type f -delete # 删除所有.DS_Store文件
$ find ~ -name "*.txt" -print       # 在$HOME中查.txt文件并显示
$ find . -size +1000000c -print     # 查长度大于1Mb的文件
$ find . -size 100c -print          # 查长度为100c的文件
$ find . -size +10 -print           # 查长度超过期作废10块的文件（1块=512字节）
$ find -name april*                 # 在当前目录下查找以april开始的文件
$ find -name april* fprint file     # 在当前目录下查找以april开始的文件，并把结果输出到file中
$ find -name ap* -o -name may*          # 查找以ap或may开头的文件
$ find /mnt -name tom.txt -ftype vfat   # 在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件
$ find /mnt -name t.txt ! -ftype vfat   # 在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件
$ find /tmp -name wa* -type l           # 在/tmp下查找名为wa开头且类型为符号链接的文件
$ find ~ -mtime -2                  # 在/home下查最近两天内改动过的文件
$ find ~ -atime -1                  # 查1天之内被存取过的文件
$ find ~ -mmin +60                  # 在/home下查60分钟前改动过的文件
$ find ~ -amin +30                  # 查最近30分钟前被存取过的文件
$ find ~ -newer tmp.txt             # 在/home下查更新时间比tmp.txt近的文件或目录
$ find ~ -anewer tmp.txt            # 在/home下查存取时间比tmp.txt近的文件或目录
$ find ~ -used -2                   # 列出文件或目录被改动过之后，在2日内被存取过的文件或目录
$ find ~ -user cnscn                # 列出/home目录内属于用户cnscn的文件或目录
$ find ~ -uid +501                  # 列出/home目录内用户的识别码大于501的文件或目录
$ find ~ -group cnscn               # 列出/home内组为cnscn的文件或目录
$ find ~ -gid 501                   # 列出/home内组id为501的文件或目录
$ find ~ -nouser                    # 列出/home内不属于本地用户的文件或目录
$ find ~ -nogroup                   # 列出/home内不属于本地组的文件或目录
$ find ~ -name tmp.txt -maxdepth 4  # 列出/home内的tmp.txt 查时深度最多为3层
$ find ~ -name tmp.txt -mindepth 3  # 从第2层开始查
$ find ~ -empty                     # 查找大小为0的文件或空目录
$ find ~ -size   +512k              # 查大于512k的文件
$ find ~ -size   -512k              # 查小于512k的文件
$ find ~ -links   +2                # 查硬连接数大于2的文件或目录
$ find ~ -perm 0700                 # 查权限为700的文件或目录
$ find ~ -perm 755 -print | more    # 查找权限为755的文件
$ find /tmp -name tmp.txt -exec cat {} \;
$ find /tmp -name tmp.txt ok rm {} \;
$ find / -amin    -10      # 查找在系统中最后10分钟访问的文件
$ find / -atime   -2       # 查找在系统中最后48小时访问的文件
$ find / -empty            # 查找在系统中为空的文件或者文件夹
$ find / -group   cat      # 查找在系统中属于 groupcat的文件
$ find / -mmin   -5        # 查找在系统中最后5分钟里修改过的文件
$ find / -mtime   -1       # 查找在系统中最后24小时里修改过的文件
$ find / -nouser           # 查找在系统中属于作废用户的文件
$ find / -user    fred     # 查找在系统中属于FRED这个用户的文件
```