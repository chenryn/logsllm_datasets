 My commitment to you regarding this book is simple. If someone tasks you with
performing a real network penetration test targeting a real network with hundreds or
even thousands of computer systems, and if that engagement is scoped more or less in
alignment with what I’ll later describe as a “typical” INPT, you can satisfy the require-
ments of that engagement by following the steps laid out in this book—even if you’ve
never done a penetration test before. 
 Now, if you’re a hacker dude/dudette and you’re reading this out of pure enjoy-
ment for the subject matter, you’ll definitely ask questions like, “What about wireless
attacks?” and “How come you don’t cover anti-virus bypass?” and “Where is the section
on buffer overflows?” and more. My message to you is that in the professional world of
adversarial emulation services, companies hire individuals to perform scoped engage-
ments. The no-holds-barred, anything-goes approach, as exciting as it sounds, rarely
(if ever) happens. 
 This book, rather than touching briefly on every topic related to ethical hacking, is
a complete start-to-finish manual for conducting an entire INPT. It has everything you
need to be successful in conducting the most common type of engagement you’ll be
asked to perform should you enter a career in professional penetration testing. 
PREFACE
xi
 When you’re finished reading this book and working through the lab exercises,
you’ll possess a competency in a skill that companies pay entry-level employees six-
figure salaries to perform. It is my personal opinion that other titles in this space aim
to cover too broad a spectrum, and as a result, they can devote only a single chapter to
each topic. In this book, you’ll be laser-focused on a single task: taking over an
enterprise network. I hope you’re ready, because you’re going to learn a lot, and I think
you’ll be surprised by what you can do once you’ve reached the end of the last chapter.
Good luck!
xii
acknowledgments
To my wife Emily and my daughters Lily and Nora: Thank you sincerely, from the bot-
tom of my heart, for putting up with me while I was writing this book. It has been a
long journey of discovery with numerous ups and downs. Thank you for believing in
me and for never making me feel like my ambitions were a burden to you.
 To my editor, Toni: Thank you for your patience and your guidance throughout
the writing process. Thank you for always challenging me and for helping me to think
of my readers instead my ego.
 In no particular order, thank you to Brandon McCann, Tom Wabiszczewicz, Josh
Lemos, Randy Romes, Chris Knight, and Ivan Desilva. You’ve taught me more than
you know throughout various stages of my career, and I look up to you as friends and
mentors to this day.
 To all the reviewers: Andrew Courter, Ben McNamara, Bill LeBorgne, Chad Davis,
Chris Heneghan, Daniel C. Daugherty, Dejan Pantic, Elia Mazzuoli, Emanuele Picci-
nelli, Eric Williams, Flavio Diez, Giampiero Granatella, Hilde Van Gysel, Imanol Vali-
ente Martín, Jim Amrhein, Leonardo Taccari, Lev Andelman, Luis Moux, Marcel van
den Brink, Michael Jensen, Omayr Zanata, Sithum Nissanka, Steve Grey-Wilson, Steve
Love, Sven Stumpf, Víctor Durán, and Vishal Singh, your suggestions helped make
this a better book.
xiii
about this book
The Art of Network Penetration Testing is a complete walkthrough of a typical internal
network penetration test (INPT). The book covers a step-by-step methodology that
the author has used to conduct hundreds of INPTs for companies of all sizes. It serves
less as a conceptual introduction to theories and ideas and more as a manual that
readers with little or no experience can use to guide them throughout an entire
engagement.
Who should read this book
This book is written primarily for would-be penetration testers and ethical hackers.
That said, anyone working within the design, development, or implementation of sys-
tems, applications, and infrastructure should read this book.
How this book is organized: A roadmap
This book is divided into four parts, each one correlated to one of four phases used to
conduct a typical INPT. The book should be read in order from start to finish, as each
phase of the INPT workflow builds off of the outputs from the previous phase.
 Phase 1 explains the information-gathering phase of an INPT, which provides you
with a detailed understanding of your target’s attack surface:
■
Chapter 2 introduces you to the process of discovering network hosts within a
given IP address range.
■
Chapter 3 explains how to further enumerate the network services listening on
hosts that you discovered in the previous chapter.
ABOUT THIS BOOK
xiv
■
Chapter 4 covers several techniques for identifying authentication, configura-
tion, and patching vulnerabilities in network services.
Phase 2 goes into the next phase, focused penetration, where your goal is to gain
unauthorized access to compromised targets by using security weaknesses or “vulnera-
bilities” identified in the previous phase:
■
Chapter 5 shows how to compromise multiple vulnerable web applications, spe-
cifically Jenkins and Apache Tomcat.
■
Chapter 6 describes how to attack and penetrate a vulnerable database server
and retrieve sensitive files from non-interactive shells.
■
Chapter 7 explores the coveted topic of exploiting a missing Microsoft Security
Update and using the open-source Metasploit meterpreter payload.
Phase 3 deals with post-exploitation, which is what an attacker does after they’ve com-
promised a vulnerable target. It introduces the three main concepts—maintaining
reliable re-entry, harvesting credentials, and moving laterally to newly accessible
(level-2) systems:
■
Chapter 8 covers post-exploitation in Windows-based systems.
■
Chapter 9 talks about various post-exploitation techniques for Linux/UNIX
targets.
■
Chapter 10 walks through the process of elevating to domain admin privileges
and safely extracting the “crown jewels” from a Windows Domain controller.
Phase 4 wraps up the engagement with the cleanup and documentation portions of
an INPT:
■
Chapter 11 shows you how to go back and remove unnecessary, potentially
harmful artifacts from your engagement testing activities.
■
Chapter 12 talks about the eight components of a solid pentest deliverable.
Experienced penetration testers might prefer to jump around to particular sections of
interest to them, such as Linux/UNIX post-exploitation or attacking vulnerable data-
base servers. If you’re new to network penetration testing, though, you should abso-
lutely read the chapters sequentially from start to finish.
About the code 
This book contains a great deal of command line output, both in numbered listings
and in line with normal text. In both cases, source code is formatted in a fixed-width
font like this to separate it from ordinary text.
 The code for the examples in this book is available for download from the Manning
website at https://www.manning.com/books/the-art-of-network-penetration-testing
and from GitHub at https://github.com/R3dy/capsulecorp-pentest.
ABOUT THIS BOOK
xv
liveBook discussion forum
Purchase of The Art of Network Pentration includes free access to a private web forum run
by Manning Publications where you can make comments about the book, ask technical
questions, and receive help from the author and from other users. To access the forum,
go to https://livebook.manning.com/#!/book/the-art-of-network-penetration-testing/
discussion. You can also learn more about Manning’s forums and the rules of conduct at
https://livebook.manning.com/#!/discussion.
 Manning’s commitment to our readers is to provide a venue where a meaningful
dialogue between individual readers and between readers and the author can take
place. It is not a commitment to any specific amount of participation on the part of
the author, whose contribution to the forum remains voluntary (and unpaid). We sug-
gest you try asking the author some challenging questions lest his interest stray! The
forum and the archives of previous discussions will be accessible from the publisher’s
website as long as the book is in print.
xvi
about the author
ROYCE DAVIS is a professional hacker specializing in network penetration testing and
enterprise adversarial attack emulation. He has been helping clients secure their net-
work environments for more than a decade and has presented research, techniques,
and tools at security conferences all over the United States. He has contributed to open
source security testing tools and frameworks and is the co-founder of PentestGeek.com,
an ethical hacking training and education online resource.
xvii
about the cover illustration
The figure on the cover of The Art of Network Penetration Testing is captioned “Habit
d’un Morlaque d’Uglin en Croatie,” or “Clothing of a Morlaque man from the island
of Ugljan, in Croatia.” The illustration is taken from a collection of dress costumes
from various countries by Jacques Grasset de Saint-Sauveur (1757–1810), titled Cos-
tumes de Différents Pays, published in France in 1797. Each illustration is finely drawn
and colored by hand. The rich variety of Grasset de Saint-Sauveur’s collection reminds
us vividly of how culturally apart the world’s towns and regions were just 200 years ago.
Isolated from each other, people spoke different dialects and languages. In the streets
or in the countryside, it was easy to identify where they lived and what their trade or
station in life was just by their dress.
 The way we dress has changed since then and the diversity by region, so rich at the
time, has faded away. It is now hard to tell apart the inhabitants of different conti-
nents, let alone different towns, regions, or countries. Perhaps we have traded cultural
diversity for a more varied personal life—certainly for a more varied and fast-paced
technological life.
 At a time when it is hard to tell one computer book from another, Manning cele-
brates the inventiveness and initiative of the computer business with book covers
based on the rich diversity of regional life of two centuries ago, brought back to life by
Grasset de Saint-Sauveur’s pictures.
1
Network
 penetration testing
Everything today exists digitally within networked computer systems in the cloud.
Your tax returns; pictures of your kids that you take with a cellphone; the locations,
dates, and times of all the places you’ve navigated to using your GPS—they’re all
there, ripe for the picking by an attacker who is dedicated and skilled enough.
 The average enterprise corporation has 10 times (at least) as many connected
devices running on its network as it does employees who use those devices to con-
duct normal business operations. This probably doesn’t seem alarming to you at
first, considering how deeply integrated computer systems have become in our soci-
ety, our existence, and our survival.
This chapter covers
 Corporate data breaches
 Adversarial attack simulations
 When organizations don’t need a penetration test
 The four phases of an internal network 
penetration test
2
CHAPTER 1
Network penetration testing
 Assuming that you live on planet Earth—and I have it on good authority that you
do—there’s a better than average chance you have the following:
 An email account (or four)
 A social media account (or seven)
 At least two dozen username/password combinations you’re required to man-
age and securely keep track of so that you can log in and out of the various web-
sites, mobile apps, and cloud services that are essential in order for you to
function productively every day. 
Whether you’re paying bills, shopping for groceries, booking a hotel room, or doing
just about anything online, you’re required to create a user account profile contain-
ing at the very least a username, a legal name, and an email address. Often, you’re
asked to provide additional personal information, such as the following:
 Mailing address 
 Phone number
 Mother’s maiden name
 Bank account and routing number
 Credit card details 
We’ve all become jaded about this reality. We don’t even bother to read the legal
notices that pop up, telling us precisely what companies plan to do with the informa-
tion we’re giving them. We simply click “I Agree” and move on to the page we’re trying
to reach—the one with the viral cat video or the order form to purchase an adorable
coffee mug with a sarcastic joke on the side about how tired you feel all the time. 
 Nobody has time to read all that legal mumbo jumbo, especially when the free
shipping offer expires in just 10 minutes. (Wait—what’s that? They’re offering a
rewards program! I just have to create a new account really fast.) Perhaps even more
alarming than the frequency with which we give random internet companies our pri-
vate information is the fact that most of us naively assume that the corporations we’re
interacting with are taking the proper precautions to house and keep track of our sen-
sitive information securely and reliably. We couldn’t be more wrong.
1.1
Corporate data breaches
If you haven’t been hiding under a rock, then I’m guessing you’ve heard a great deal
about corporate data breaches. There were 943 disclosed breaches in the first half of 2018
alone, according to Breach Level Index, a report from Gemalto (http://mng.bz/YxRz).
 From a media-coverage perspective, most breaches tend to go something like this:
Global Conglomerate XYZ has just disclosed that an unknown number of confidential
customer records have been stolen by an unknown group of malicious hackers who
managed to penetrate the company’s restricted network perimeter using an unknown
vulnerability or attack vector. The full extent of the breach, including everything the
hackers made off with, is—you guessed it—unknown. Cue the tumbling stock price, a
3
How hackers break in
flood of angry tweets, doomsday headlines in the newspapers, and a letter of resigna-
tion from the CEO as well as several advisory board members. The CEO assures us this
has nothing to do with the breach; they’ve been planning to step down for months now.
Of course, somebody has to take the official blame, which means the Chief Information
Security Officer (CISO) who’s given many years to the company doesn’t get to resign;
instead, they’re fired and publicly stoned to death on social media, ensuring that—as
movie directors used to say in Hollywood—they’ll never work in this town again.
1.2
How hackers break in
Why does this happen so often? Are companies just that bad at doing the right things
when it comes to information security and protecting our data? Well, yes and no.
 The inconvenient truth of the matter is that the proverbial deck happens to be
stacked disproportionally in favor of cyber-attackers. Remember my earlier remark
about the number of networked devices that enterprises have connected to their
infrastructure at all times? This significantly increases a company’s attack surface or
threat landscape.
1.2.1
The defender role
Allow me to elaborate. Suppose it’s your job to defend an organization from cyber-
threats. You need to identify every single laptop, desktop, smartphone, physical server,
virtual server, router, switch, and Keurig or fancy coffee machine that’s connected to
your network. 
 Then you have to make sure every application running on those devices is properly
restricted using strong passwords (preferably with two-factor authentication) and
hardened to conform to the current standards and best practices for each respective
device. Also, you need to make sure you apply every security patch and hotfix issued
by the individual software vendors as soon as they become available. Before you can
do any of that, though, you have to triple-check that the patches don’t break any of
your business’s day-to-day operations, or people will get mad at you for trying to pro-
tect the company from hackers. 
 You need to do all of this all of the time for every single computer system with an
IP address on your network. Sounds easy, right?
1.2.2
The attacker role
Now for the flip side of the coin. Suppose your job is to break into the company—to
compromise the network in some way and gain unauthorized access to restricted sys-
tems or information. You need to find only a single system that has slipped through
the cracks; just one device that missed a patch or contains a default or easily guessable
password; a single nonstandard deployment that was spun up in a hurry to meet an
impossible business deadline driven by profit targets, so an insecure configuration set-
ting (which shipped that way by default from the vendor) was left on. That’s all it takes
to get in, even if the target did an impeccable job of keeping track of every node on
4
CHAPTER 1
Network penetration testing
the network. New systems are stood up daily by teams who need to get something
done fast. 
 If you’re thinking to yourself that this isn’t fair, or that it’s too hard for defenders and
too easy for attackers, then you get the point: that’s exactly how it is. So, what should
organizations do to avoid being hacked? This is where penetration testing comes in.
1.3
Adversarial attack simulation: Penetration testing
One of the most effective ways for a company to identify security weaknesses before they
lead to a breach is to hire a professional adversary or penetration tester to simulate an
attack on the company’s infrastructure. The adversary should take every available
action at their disposal to mimic a real attacker, in some cases acting almost entirely in
secret, undetected by the organization’s IT and internal security departments until it’s
time to issue their final report. Throughout this book, I’ll refer to this type of offensive-
security exercise simply as a penetration test.
 The specific scope and execution of a penetration test can vary quite a bit depend-
ing on the motivations of the organization purchasing the assessment (the client) as
well as the capabilities and service offerings of the consulting firm performing the
test. Engagements can focus on web and mobile applications, network infrastructure,
wireless implementations, physical offices, and anything else you can think of to
attack. Emphasis can be placed on stealth while trying to remain undetected or on
gathering vulnerability information about as many hosts as possible in a short time.
Attackers can use human hacking (social engineering), custom-exploit code, or even
dig through the client’s dumpster looking for passwords to gain access. It all depends
on the scope of the engagement. The most common type of engagement, however, is
one that I have performed for hundreds of companies over the past decade. I call it an
internal network penetration test (INPT). This type of engagement simulates the most
dangerous type of threat actor for any organization: a malicious or otherwise compro-
mised insider.
DEFINITION
Threat actor is a fancy way of saying attacker. It refers to anyone
attempting to harm an organization’s information technology assets. 
During an INPT, you assume that the attacker was able to successfully gain physical
entry into a corporate office or perhaps was able to obtain remote access to an
employee’s workstation through email phishing. It is also possible that the attacker vis-
ited an office after hours, posing as a custodial worker, or during the day, posing as a
vendor or flower delivery person. Maybe the attacker is an actual employee and used a
badge to walk in the front door. 
 There are countless ways to gain physical entry to a business, which can be easily
demonstrated. For many businesses, an attacker simply needs to walk through the main
entrance and wander around while smiling politely at anyone who passes, appearing to
have a purpose or talking on a cell phone until they identify an unused area where they
can plug into a data port. Professional companies offering high-caliber penetration
5
Adversarial attack simulation: Penetration testing
testing (pentest) services typically bill anywhere from $150 to $500 per hour. As a result,
it’s often cheaper for the client purchasing the penetration test to skip this part and
place the attacker on the internal subnet from the beginning. 
 Either way, the attacker has managed to get access to the internal network. Now,
what can they do? What can they see? A typical engagement assumes that the attacker
knows nothing about the internal network and has no special access or credentials. All
they have is access to the network—and coincidentally, that’s usually all they need.
1.3.1
Typical INPT workflow
A typical INPT consists of four phases executed in order, as depicted in figure 1.1. The
individual names of each phase are not written in stone, nor should they be. One
pentest company might use the term reconnaissance in place of information gathering.
Another company might use the term delivery in place of documentation. Regardless of
what each phase is called, most people in the industry agree on what the penetration
tester should do during each phase.
 Phase 1—Information gathering
a
Map out the network.
b
Identify possible targets.