User: I'm using Python's subprocess.communicate() to read stdout from a process that runs for about a minute. 
How can I print out each line of that process's stdout in a streaming fashion, so that I can see the output as it's generated, but still block on the process terminating before continuing? 
subprocess.communicate() appears to give all the output at once.
Assistant: If you want a non-blocking approach, don't use process.communicate(). If you set the subprocess.Popen() argument stdout to PIPE, you can read from process.stdout and check if the process still runs using process.poll().