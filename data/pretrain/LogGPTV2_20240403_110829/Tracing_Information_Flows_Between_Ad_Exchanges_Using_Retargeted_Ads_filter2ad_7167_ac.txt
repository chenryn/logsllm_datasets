lisher URLs, i.e., it does not browse e-commerce sites,
and therefore should never be served retargeted ads. The
crawlers are executed in tandem, so they visit the pub-
lishers URLs in the same order at the same times. We
hard-coded a 1 minute delay between subsequent page
loads to avoid overloading any servers, and to allow time
for the crawler to automatically scroll to the bottom of
each page. Each round takes 40 hours to complete.
We conducted nine rounds of crawling between De-
cember 4 to 19, 2015. We stopped after 9 rounds be-
cause we observed that we only gathered 4% new images
during the ninth round. The crawlers recorded inclusion
s
e
g
a
m
I
e
g
a
r
e
v
A
a
n
o
s
r
e
P
r
e
p
106
105
104
103
102
101
100
O
v
I
m
erall
a
g
e
s
E
a
s
y
Filter
List
Siz
eFilter
Min
u
sC
o
ntrol A
d
s
Min
u
sFre
q
u
e
nt
Figure 5: Average number of images per persona, with
standard deviation error bars.
trees, HTTP request and response headers, cookies, and
images from all pages. At no point did our crawlers click
on ads, since this can be construed as click-fraud (i.e., ad-
vertisers often have to pay each time their ads are clicked,
and thus automated clicks drain their advertising budget).
All crawls were done from Northeastern University’s IP
addresses in Boston.
5
Image Labeling
Using the methodology in § 4.4, we collected 571,636
unique images in total. However, only a small subset are
retargeted ads, which are our focus. In this section, we
discuss the steps we used to filter down our image set
and isolate retargeted ads, beginning with standard fil-
ters used by prior work [9, 42], and ending with crowd-
sourced image labeling.
5.1 Basic Filtering
Prior work has used a number of techniques to identify
ad images from crawled data. First, we leverage the Ea-
syList filter3 provided by AdBlockPlus to detect images
that are likely to be ads [9, 42]. In our case, we look at
the inclusion chain for each image, and filter out those
in which none of the URLs in the chain are a hit against
EasyList. This reduces the set to 93,726 unique images.
Next, we filter out all images with dimensions 1 persona may be behaviorally targeted, but it cannot
be a retarget, and is therefor filtered out4.
2We separately crawled the resources included by the Alexa Top-
5K websites in January 2015. For each website, we visited 6 pages and
recorded all the requested resources.
3https://easylist-downloads.adblockplus.org/easylist.txt
4Several of our personas have retailers in common, which we ac-
count for when filtering ads.
USENIX Association  
25th USENIX Security Symposium  487
7
Figure 5 shows the average number of images remain-
ing per persona after applying each filter. After applying
all four filters, we are left with 31,850 ad images.
5.2
Identifying Targeted & Retargeted Ads
At this point, we do not know which of the ad images
are retargets. Prior work has identified retargets by look-
ing for specific URL parameters associated with them,
however this technique is only able to identify a subset
of retargets served by DoubleClick [43]. Since our goal
is to be mechanism and ad exchange agnostic, we must
use a more generalizable method to identify retargets.
Crowdsourcing.
Given the large number of ads in
our corpus, we decided to crowdsource labels from work-
ers on Amazon Mechanical Turk (AMT). We constructed
Human Intelligence Tasks (HITs) that ask workers to la-
bel 30 ads, 27 of which are unlabeled, and 3 of which
are known to be retargeted ads and serve as controls (we
manually identified 1,016 retargets from our corpus of
31,850 to serve as these controls).
Figure 6(a) shows a screenshot of our HIT. On the
right is an ad image, and on the left we ask the worker
two questions:
1. Does the image belong to one of the following cate-
gories (with “None of the above” being one option)?
2. Does the image say it came from one of the follow-
ing websites (with “No” being one option)?
The purpose of question (1) is to isolate behavioral and
retargeted ads from contextual and untargeted ads (e.g.,
Figure 6(c), which was served to our Music persona).
The list for question (1) is populated with the shopping
categories associated with the persona that crawled the
ad. For example, as shown in Figure 6(a), the cate-
gory list includes “shopping_jewelry_diamonds” for ads
shown to our Diamond Jewelry persona. In most cases,
this list contains exactly one entry, although there are rare
cases where up to 3 categories are in the list.
If the worker does not select “None” for question (1),
then they are shown question (2). Question (2) is de-
signed to separate retargets from behavioral targeted ads.
The list of websites for question (2) is populated with
the e-commerce sites visited by the persona that crawled
the ad. For example, in Figure 6(a), the ad clearly says
“Adiamor”, and one of the sites visited by the persona is
adiamor.com; thus, this image is likely to be a retarget.
Quality Control.
We apply four widely used tech-
niques to maintain and validate the quality of our crowd-
sourced image labels [63, 29, 56]. First, we restrict our
HITs to workers that have completed ≥50 HITs and have
an approval rating ≥95%. Second, we restrict our HITs
to workers living in the US, since our ads were collected
Figure 6: Screenshot of our AMT HIT, and examples of
different types of ads.
from US websites. Third, we reject a HIT if the worker
mislabels ≥2 of the control images (i.e., known retar-
geted ads); this prevents workers from being able to sim-
ply answer “None” to all questions. We resubmitted re-
jected HITs for completion by another worker. Overall,
the workers correctly labeled 87% of the control images.
Fourth and finally, we obtain two labels on each unla-
beled image by different workers. For 92.4% of images
both labels match, so we accept them. We manually la-
beled the divergent images ourselves to break the tie.
Finding More Retargets.
The workers from AMT
successfully identified 1,359 retargeted ads. However, it
is possible that they failed to identify some retargets, i.e.,
there are false negatives. This may occur in cases like
Figure 6(b): it is not clear if this ad was served as a be-
havioral target based on the persona’s interest in jewelry,
or as a retarget for a specific jeweler.
To mitigate this issue, we manually examined all 7,563
images that were labeled as behavioral ads by the work-
ers. In addition to the images themselves, we also looked
at the inclusion chains for each image. In many cases,
the URLs reveal that specific e-commerce sites visited
by our personas hosted the images, indicating that the
ads are retargets. For example, Figure 6(b) is actually
part of a retargeted ad from fossil.com. Our manual
analysis uncovered an additional 3,743 retargeted ads.
These results suggest that the number of false nega-
tives from our crowdsourcing task could be dramatically
reduced by showing the URLs associated with each ad
image to the workers. However, note that adding this
information to the HIT will change the dynamics of the
488  25th USENIX Security Symposium 
USENIX Association
8
task: false negatives may go down but the effort (and
therefore the cost) of each HIT will go up. This stems
from the additional time it will take each worker to re-
view the ad URLs for relevent keywords.
In § 6.2, we compare the datasets labeled by the work-
ers and by the authors. Interestingly, although our dataset
contains a greater magnitude of retargeted ads versus the
worker’s dataset, it does not improve diversity, i.e., the
smaller dataset identifies 96% of the top 25 most fre-
quent ad networks in the larger dataset. These networks
are responsible for the vast majority of retargeted ads and
inclusion chains in our dataset.
Final Results.
Overall, we submitted 1,142 HITs to
AMT. We paid $0.18 per HIT, for a total of $415. We did
not collect any personal information from workers. In
total, we and workers from AMT labeled 31,850 images,
of which 7,563 are behavioral targeted ads and 5,102 are
retargeted ads. These retargets advertise 281 distinct e-
commerce websites (38% of all e-commerce sites).
5.3 Limitations
With any labeling task of this size and complexity, it is
possible that there are false positives and negatives. Un-
fortunately, we cannot bound these quantities, since we
do not have ground-truth information about known retar-
geted ad campaigns, nor is there a reliable mechanism
to automatically detect retargets (e.g., based on special
URL parameters, etc.).
In practice, the effect of false positives is that we will
erroneously classify pairs of ad exchanges as sharing in-
formation. We take measures to mitigate false positives
by running a control crawl and removing images which
appear in multiple personas (see § 5.1), but false posi-
tives can still occur. However, as we show in § 6, the
results of our classifier are extremely consistent, suggest-
ing that there are few false positives in our dataset.
False negatives have the opposite effect: we may miss
pairs of ad exchanges that are sharing information. For-
tunately, the practical impact of false negatives is low,
since we only need to correctly identify a single retar-
geted ad to infer that a given pair of ad exchanges are
sharing information.
6 Analysis
In this section, we use the 5,102 retargeted ads uncovered
in § 5, coupled with their associated inclusion chains (see
§ 4.2), to analyze the information flows between ad ex-
changes. Specifically, we seek to answer two fundamen-
tal questions: who is sharing user data, and how does the
sharing take place (e.g., client-side via cookie matching,
or server-side)?
Publisher-side
Shopper-side
^pub
d$
^shop
.*
d
.*$
Case 1: Direct (Trivial) Matching
^pub
.*
s
d$
^shop
^*
.*
.*
and
d
s
Case 2a: Forward Cookie Matching
^pub
.*
s
d$
^shop
^*
.*
.*
and
d
d
Case 2b: Backward Cookie Matching
.*$
d
.*$
s
.*$
.*$
^pub
^pub
.*
.*
s
s
d$
^shop
[^d]*
s
[^d]*$
Case 3: Indirect Matching
d$
^shop
[^sd]*$
Case 4: Latent Matching
Figure 7: Regex-like rules we use to identify different
types of ad exchange interactions. shop and pub refer
to chains that begin at an e-commerce site or publisher,
respectively. d is the DSP that serves a retarget; s is the
predecessor to d in the publisher-side chain, and is most
likely an SSP holding an auction. Dot star (.∗) matches
any domains zero or more times.
We begin by categorizing all of the retargeted ads and
their associated inclusion chains into one of four classes,
which correspond to different mechanisms for sharing
user data. Next, we examine specific pairs of ad ex-
changes that share data, and compare our detection ap-
proach to those used in prior work to identify cookie
matching [43, 2, 54, 21]. We find that prior work may
be missing 31% of collaborating exchanges. Finally, we
construct a graph that captures ad exchanges and the re-
lationships between them, and use it to reveal nuanced
characteristics about the roles that different exchanges
play in the ad ecosystem.
Information Flow Categorization
6.1
We begin our analysis by answering two basic questions:
for a given retargeted ad, was user information shared
between ad exchanges, and if so, how? To answer these
questions, we categorize the 35,448 publisher-side inclu-
sion chains corresponding to the 5,102 retargeted ads in
our data. Note that 1) we observe some retargeted ads
multiple times, resulting in multiple chains, and 2) the
chains for a given unique ad may not be identical.
We place publisher-side chains into one of four cate-
gories, each of which corresponds to a specific informa-
tion sharing mechanism (or lack thereof). To determine
USENIX Association  
25th USENIX Security Symposium  489
9
the category of a given chain, we match it against care-
fully designed, regular expression-like rules. Figure 7
shows the pattern matching rules that we use to identify
chains in each category. These rules are mutually exclu-
sive, i.e., a chain will match one or none of them.
Terminology.
Before we explain each classification
in detail, we first introduce shared terminology that will
be used throughout this section. Each retargeted ad was
served to our persona via a publisher-side chain. pub is
the domain of the publisher at the root of the chain, while
d is the domain at the end of the chain that served the ad.
Typically, d is a DSP. If the retarget was served via an
auction, then an SSP s must immediately precede d in
the publisher-side chain.
Each retarget advertises a particular e-commerce site.
shop is the domain of the e-commerce site correspond-