### Table 6: Profile of the Data Exchanged Between an IoT Device and a Client in a Wireless Home Network

| Key Size (bits) | Latency (ms) | Memory Footprint (bytes) | EC (mJ) | Latency (ms) | Memory Footprint (bytes) | EC (mJ) |
|-----------------|--------------|--------------------------|---------|--------------|--------------------------|---------|
| 512             | 634          | 320                      | 540     | 915          | 441                      | 882     |
| 1024            | 1665         | 552                      | 828     | 2135         | 738                      | 1512    |
| 2048            | 3502         | 1006                     | 1404    | 4331         | 1206                     | 2016    |

#### IoT Device Operations
- **Total # of Captured Packets**
- **DNS RRsets**
- **TLS Handshake**
  - **Encryption**
  - **Decryption**
- **Signing**
- **Verifying**
- **Encryption**
- **Decryption**

#### RSA
- **AES 128-bit**
- **WYZE CAM V2 (camera)**
  - **Setup**: 897 packets, 68 DNS RRsets, 2 TLS Handshakes, 32 Encryption, 168 Decryption, 0 Signing, 0 Verifying, 0 Encryption, 0 Decryption
  - **Pairing**: 25 packets, 2 DNS RRsets, 32 Encryption, 9 Decryption, 0 Signing, 0 Verifying, 0 Encryption, 0 Decryption
  - **Live Streaming (2 Hrs)**: 1460282 packets, 108933 DNS RRsets, 29535 TLS Handshakes, 30191 Encryption, 0 Signing, 0 Verifying, 0 Encryption, 0 Decryption

### Introduction to Lightweight Cryptographic Schemes

**mCrypton [74]** follows the architecture of CRYPTON but with reduced key sizes [73]. The Scalable Security with Symmetric Keys (S3K) scheme [81] is a key management architecture designed for energy-efficient trust establishment in IoT environments. However, these schemes rely on pre-shared keys, which can increase the risk of key disclosure and compromise security services (unlike CSProp). Another proposal, Hummingbird [46], uses a hybrid structure of block and stream ciphers with a 16-bit block size and a 256-bit key length. An improved version by Engels et al. [47] has been developed, but Zhang et al. [99] have shown that the key can be recovered.

### Asymmetric Lightweight Cryptography

Fewer efforts focus on lightweight cryptographic algorithms based on asymmetric ciphers due to their higher computational cost. Lithe [82] integrates security between the DLTS protocol at the transport layer and the CoAP protocol at the application layer, involving expensive cryptographic processing. In contrast, CSProp optimizes TLS handshake latency and energy consumption for resource-constrained devices. Zhang et al. [100] propose a scheme to provide resilience against sensor node compromises, offering lower overhead and higher adaptability than traditional asymmetric algorithms. However, Albrecht et al. [8] show an attack that undermines the use of perturbation polynomials in secure cryptographic schemes, which does not apply to CSProp as its security is equivalent to RSA.

### Cryptographic Signature Schemes

Some works use cryptographic signature schemes where a powerful server assists a weak client. Bellare and Sandhu [22] consider two-party collaborative RSA signature computation schemes, while CSProp focuses on efficient signature verification (not generation), a public key operation. The proposed protocols partition the private key into shares, and each protocol in [22] relies on different assumptions, making them susceptible to forgery attacks. MacKenzie and Reiter [75] also address two-party signature generation, requiring a personal password and split secret key, unsuitable for automated propagation. Damgård and Mikkelsen [40] involve four players collaborating to generate a digital signature, using threshold cryptography signatures. In CSProp, we utilize the RSA public exponent instead of threshold signatures. Camenisch et al. [33] propose a scheme where a client is authenticated using a password and a shared secret key, generating the signing key at the client side after validating the password. CSProp neither requires a password nor generates keys at the client side; keys are generated by origin servers. Buldas et al. [32] propose a smart-ID scheme where a private exponent is shared between a client and a server for generating signatures, optimizing private key operations rather than public key operations as in CSProp.

### Proxy-Assisted Cryptography

Our work is similar to prior proxy-based re-signature schemes introduced by Blaze et al. [24] and revisited by Ateniese and Hohenberger [16]. A significant difference is that CSProp provides security by construction, eliminating the need for a trusted proxy. These prior works require a trusted proxy to take a signature as input and generate a new signature using the public keys of both parties, which is vulnerable to known RSA attacks [26, 91, 92].

Joye et al. [62] propose a solution to overcome hardware restrictions like Intel SGX, using a proxy. However, the application differs: in CSProp, Patty helps a weak Alice verify a signature from a more powerful Bob, whereas in Joye et al., Patty helps a weak Bob sign a message and transmit it to a powerful Alice, which is not common in IoT settings. Critically, Patty needs to know Bob’s private key, which is not required in our scheme. Thus, the warning in [62] about e' | e being problematic does not apply here, as e' is computed publicly. Additionally, the security model in [62] requires both public keys to be kept secret, which is incompatible with our target applications and threat model.

### Concluding Remarks

IoT and embedded devices are resource-constrained, forcing designers to choose between security and performance. This paper introduces CSProp, a new cryptographic primitive that uses a low public exponent to reduce the computational load on end devices. We use CSProp to optimize DNSSEC and TLS, resulting in substantial improvements in latency and energy efficiency. In Section 3.3, we present the security proof of CSProp using existential unforgeability and cryptographic game theory. Future research directions include implementing lattice-based cryptographic signature and encryption propagation schemes, integrating support for private key operations, and investigating models of propagator deployment and discovery to enable systematic leveraging of CSProp in PKC applications.

### Acknowledgements

This work is supported by Taibah University (TU) and the Saudi Ministry of Education (MOE). It is partially supported by the University of California Office of the President UC Lab Fees grant number LFR-18-548554. Any opinions, findings, and conclusions or recommendations expressed in this work are those of the authors and do not necessarily reflect the views of the funding agencies.

### References

[1] Dns amplification attacks. US-CERT, 2016. Available at https://www.us-cert.gov/ncas/alerts/TA13-088A.
[2] ebacs: Ecrypt benchmarking of cryptographic systems, 2020. Available at http://bench.cr.yp.to/results-encrypt.html.
[3] ebacs: Ecrypt benchmarking of cryptographic systems, 2020. Available at http://bench.cr.yp.to/results-stream.html.
[4] Wyze cam v2 smart home camera, Visited on 2020-03-28. Available at https://www.amazon.com/Wyze-Indoor-Wireless-Detection-Assistant/dp/B076H3SRXG/ref=sr_1_3?dchild=1&keywords=wyze+cam+v2&qid=1585439194&s=electronics&sr=1-3.
[5] Arduino mkr wifi 1010, Visited on 2020-04-01. Available at https://store.arduino.cc/usa/mkr-wifi-1010.
[6] Joe Abley, K Lindqvist, et al. Operation of anycast services. Technical report, BCP 126, RFC 4786, December, 2006.
[7] Mehmet Adalier et al. Efficient and secure elliptic curve cryptography implementation of curve p-256. In Workshop on Elliptic Curve Cryptography Standards, volume 66, 2015.
[8] Martin Albrecht, Craig Gentry, Shai Halevi, and Jonathan Katz. Attacking cryptographic schemes based on perturbation polynomials. In Proceedings of the 16th ACM conference on Computer and communications security, pages 1–10. ACM, 2009.
[9] Fatemah Alharbi, Jie Chang, Yuchen Zhou, Feng Qian, Zhiyun Qian, and Nael Abu-Ghazaleh. Collaborative client-side dns cache poisoning attack. In IEEE INFOCOM 2019-IEEE Conference on Computer Communications, pages 1153–1161. IEEE, 2019.
[10] Arwa Alrawais, Abdulrahman Alhothaily, Xiuzhen Cheng, Chunqiang Hu, and Jiguo Yu. Secureguard: A certificate validation system in public key infrastructure. IEEE Transactions on Vehicular Technology, 67(6):5399–5408, 2018.
[11] P Antonov and V Antonova. Development of the attack against rsa with low public exponent and related messages. In Proceedings of the 2007 international conference on Computer systems and technologies, page 50. ACM, 2007.
[12] Arduino. Arduino software, Visited on 2020-04-01. Available at https://www.arduino.cc/en/main/software.
[13] Roy Arends, Rob Austein, Matt Larson, Dan Massey, and Scott Rose. Rfc4033:dns security introduction and requirements. Technical report, 2005.
[14] Roy Arends, Rob Austein, Matt Larson, Dan Massey, and Scott Rose. Rfc4034:resource records for the dns security extensions. Technical report, 2005.
[15] Arris Router. Watts up pro portable power meter, Visited on 2020-03-28. Available at https://www.amazon.com/NVG468MQ-802-11ac-MoCA%C2%AE2-0-Frontier-Wireless-AC/dp/B073F17BSG/ref=sr_1_1?dchild=1&keywords=Arris+NVG468MQ&qid=1585441528&sr=8-1.
[16] Giuseppe Ateniese and Susan Hohenberger. Proxy re-signatures: new definitions, algorithms, and applications. In Proceedings of the 12th ACM conference on Computer and communications security, pages 310–319. ACM, 2005.
[17] Jean-Philippe Aumasson, Luca Henzen, Willi Meier, and María Naya-Plasencia. Quark: A lightweight hash. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 1–15. Springer, 2010.
[18] Sven Bauer. Attacking exponent blinding in rsa without crt. In International Workshop on Constructive Side-Channel Analysis and Secure Design, pages 82–88. Springer, 2012.
[19] M Bellare and P Rogaway. Optimal asymmetric encryption padding–how to encrypt with rsa. In Advances in Cryptology–EUROCRYPT’94, pages 92–111.
[20] Mihir Bellare and Phillip Rogaway. Random oracles are practical: A paradigm for designing efficient protocols. In Proceedings of the 1st ACM conference on Computer and communications security, pages 62–73. ACM, 1993.
[21] Mihir Bellare and Phillip Rogaway. The exact security of digital signatures-how to sign with rsa and rabin. In International Conference on the Theory and Applications of Cryptographic Techniques, pages 399–416. Springer, 1996.
[22] Mihir Bellare and Ravi S Sandhu. The security of practical two-party rsa signature schemes. IACR Cryptol. ePrint Arch., 2001:60, 2001.
[23] Alex Biryukov and Léo Paul Perrin. State of the art in lightweight symmetric cryptography. 2017.
[24] Matt Blaze, Gerrit Bleumer, and Martin Strauss. Divertible protocols and atomic proxy cryptography. In International Conference on the Theory and Applications of Cryptographic Techniques, pages 127–144. Springer, 1998.
[25] Andrey Bogdanov, Lars R Knudsen, Gregor Leander, Christof Paar, Axel Poschmann, Matthew JB Robshaw, Yannick Seurin, and Charlotte Vikkelsoe. Present: An ultra-lightweight block cipher. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 450–466. Springer, 2007.
[26] Dan Boneh. Twenty years of attacks on the rsa cryptosystem. Notices of the AMS, 46(2):203–213, 1999.
[27] Dan Boneh, Glenn Durfee, and Yair Frankel. An attack on RSA given a small fraction of the private key bits. In Advances in Cryptology - ASIACRYPT ’98, International Conference on the Theory and Applications of Cryptology and Information Security, Beijing, China, October 18-22, 1998, Proceedings, pages 25–34, 1998.
[28] Dan Boneh and Shay Gueron. Surnaming schemes,