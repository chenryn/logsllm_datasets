---
author: Babin Lonston
category: 系统运维
comments_data:
- date: '2014-11-02 17:03:01'
  message: 转发微博.
  postip: 60.29.248.92
  username: 微博评论
- date: '2014-11-03 10:33:01'
  message: LVM快照，看起来很深奥
  postip: 188.165.15.90
  username: 微博评论
- date: '2014-11-03 11:15:01'
  message: LVM逻辑卷的扩展知识的补充，不错！
  postip: 115.183.18.252
  username: Lyric
- date: '2016-01-29 15:16:15'
  message: 问一下，创建的快照设备是不是不能挂载啊，我挂载失败了
  postip: 124.65.93.218
  username: 来自北京的 Opera 34.0|Windows 7 用户
count:
  commentnum: 4
  favtimes: 5
  likes: 0
  sharetimes: 4
  viewnum: 22891
date: '2014-11-02 14:12:00'
editorchoice: false
excerpt: LVM快照是以空间换时间时间的方式制作的lvm卷副本。它只在lvm中工作，并只在源逻辑卷发生改变时占用快照卷的空间。如果源卷的变化达到1GB这么大，快照卷同样也会产生这样大的改变。因而，对于空间有效利用的最佳途径，就是总是进行小的修改。如果快照将存储空间消耗殆尽，我们可以使用lvextend来扩容。而如果我们需要缩减快照所占用卷的大小，可以使用lvreduce。  在LVM中录制快照
  如果我们在创建快照后意外地删除了无论什么文件，我们没有必要担心，因为快照里包含了我们所删除的文件的原始文件。创建快照时，很有可能文件已经存在了。不
fromurl: http://www.tecmint.com/take-snapshot-of-logical-volume-and-restore-in-lvm/
id: 4145
islctt: true
largepic: /data/attachment/album/201411/02/142925e6he5gehcwegc2de.jpg
permalink: /article-4145-1.html
pic: /data/attachment/album/201411/02/142925e6he5gehcwegc2de.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 3218
- displayorder: 1
  raid: 3965
- displayorder: 2
  raid: 3974
- displayorder: 0
  raid: 4288
- displayorder: 0
  raid: 4445
reviewer: ''
selector: ''
summary: LVM快照是以空间换时间时间的方式制作的lvm卷副本。它只在lvm中工作，并只在源逻辑卷发生改变时占用快照卷的空间。如果源卷的变化达到1GB这么大，快照卷同样也会产生这样大的改变。因而，对于空间有效利用的最佳途径，就是总是进行小的修改。如果快照将存储空间消耗殆尽，我们可以使用lvextend来扩容。而如果我们需要缩减快照所占用卷的大小，可以使用lvreduce。  在LVM中录制快照
  如果我们在创建快照后意外地删除了无论什么文件，我们没有必要担心，因为快照里包含了我们所删除的文件的原始文件。创建快照时，很有可能文件已经存在了。不
tags:
- LVM
thumb: false
title: 在 LVM中 录制逻辑卷快照并恢复（第三部分）
titlepic: false
translator: GOLinux
updated: '2014-11-02 14:12:00'
---
**LVM快照**是以空间换时间时间的方式制作的lvm卷副本。它只在lvm中工作，并只在源逻辑卷发生改变时占用快照卷的空间。如果源卷的变化达到1GB这么大，快照卷同样也会产生这样大的改变。因而，对于空间有效利用的最佳途径，就是总是进行小的修改。如果快照将存储空间消耗殆尽，我们可以使用lvextend来扩容。而如果我们需要缩减快照所占用卷的大小，可以使用lvreduce。
![Take Snapshot in LVM](/data/attachment/album/201411/02/142925e6he5gehcwegc2de.jpg)
*在LVM中录制快照*
如果我们在创建快照后意外地删除了无论什么文件，我们没有必要担心，因为快照里包含了我们所删除的文件的原始文件。创建快照时，很有可能文件已经存在了。不要改变快照卷，保持创建时的样子，因为它用于快速恢复。
快照不可以用于备份选项。备份是某些数据的基础副本，因此我们不能使用快照作为备份的一个选择。
#### 前置阅读
* [在Linux中使用LVM构建灵活的磁盘存储（第一部分）](http://linux.cn/article-3965-1.html)
* [在Linux中扩展/缩减LVM（第二部分）](http://linux.cn/article-3974-1.html)
### 我的服务器设置
* 操作系统 — 安装有LVM的CentOS 6.5
* 服务器IP — 192.168.0.200
#### 步骤1： 创建LVM快照
首先，使用‘**vgs**’命令检查卷组中的空闲空间以创建新的快照。
```
# vgs
# lvs
```
![Check LVM Disk Space](/data/attachment/album/201411/02/142927vmljk705olkj20w6.jpg)
*检查LVM磁盘空间*
正如你所见，在**vgs**命令输出中，我们可以看到有8GB的剩余空闲空间。所以，让我们为我的名为**tecmint\_datas**的卷创建快照。处于演示的目的，我将会使用以下命令来创建1GB的快照卷。
```
# lvcreate -L 1GB -s -n tecmint_datas_snap /dev/vg_tecmint_extra/tecmint_datas        
```
或者
```
# lvcreate --size 1G --snapshot --name tecmint_datas_snap /dev/vg_tecmint_extra/tecmint_datas
```
上面的两个命令都是干得同一件事：
* **-s** – 创建快照
* **-n** – 为快照命名
![Create LVM Snapshot](/data/attachment/album/201411/02/142928spojfhxlujxfplhl.jpg)
*创建LVM快照*
此处，是对上面高亮要点的说明。
1. 我在此创建的快照的大小。
2. 创建快照。
3. 创建快照名。
4. 新的快照名。
5. 要创建快照的卷。
如果你想要移除快照，可以使用‘**lvremove**’命令。
```
# lvremove /dev/vg_tecmint_extra/tecmint_datas_snap
```
![Remove LVM Snapshot](/data/attachment/album/201411/02/142930rrww2vdvd7vrkre1.jpg)
*移除LVM快照*
现在，使用以下命令列出新创建的快照。
```
# lvs
```
![Verify LVM Snapshot](/data/attachment/album/201411/02/142932wzwol1d3f9fh1sdh.jpg)
*验证LVM快照*
上面的你看到了吧，成功创建了一个快照。上面我用箭头标出了快照创建的源，它就是**tecmint\_datas**。是的，因为我已经为**tecmint\_datas l-volume**创建了一个快照。
![Check LVM Snapshot Space](/data/attachment/album/201411/02/142934duzrkx4uzvlvhu6l.jpg)
*检查LVM快照空间*
让我们添加一些新文件到**tecmint\_datas**里头。现在卷里大概有650MB左右的数据，而我我们的快照有1GB大。因此，有足够的空间在快照卷里备份我们的修改。这里我们可以使用下面的命令来查看到，我们的快照当前的状态。
```
# lvs
```
![Check Snapshot Status](/data/attachment/album/201411/02/142937itojit6ubbi5oa5i.jpg)
*检查快照状态*
你看到了，现在已经用掉了**51%**的快照卷，你要对你的文件作更多的修改都没有问题。使用下面的命令来查看更多详细信息。