::: section
::: titlepage
## []{#convert-cert-formats-idm_managing-certificates-in-idm.html#_prerequisites}先决条件 {.title}
:::
::: itemizedlist
-   如果您的证书是由活动目录证书认证机构签发，并使用 `PEM`{.literal}
    编码的，请确保 `PEM`{.literal} 文件已转换为 `UNIX`{.literal}
    格式。要转换文件，请使用 eponymous 软件包提供的 `dos2unix`{.literal}
    工具。
:::
:::
::: section
::: titlepage
## []{#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_converting-an-external-certificate-in-the-idm-cli-and-loading-it-into-an-idm-user-account_assembly_converting-an-external-certificate-to-load-into-an-idm-user-account}在 IdM CLI 中转换外部证书，并将其加载到 IdM 用户帐户中 {.title}
:::
`IdM CLI`{.literal} 只接受 `PEM`{.literal}
证书，从中删除了第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
\-\-\-\--END CERTIFICATE\-\-\-\--）。
按照以下步骤，将外部证书转换为 `PEM`{.literal} 格式，并使用 IdM CLI
将其添加到 IdM 用户帐户。
::: orderedlist
**步骤**
1.  将证书转换为 `PEM`{.literal} 格式：
    ::: itemizedlist
    -   如果您的证书为 `DER`{.literal} 格式：
        ``` literallayout
        $ openssl x509 -in cert.crt -inform der -outform pem -out cert.pem
        ```
    -   如果您的文件为 `PKCS #12`{.literal} 格式，其常用文件扩展名为
        `.pfx`{.literal} 和
        `.p12`{.literal}，并且包含证书、私钥和其他数据，请使用
        `openssl pkcs12`{.literal}
        工具提取证书。提示时，输入保护存储在文件中的私钥的密码：
        ``` literallayout
        $ openssl pkcs12 -in cert_and_key.p12 -clcerts -nokeys -out cert.pem
        Enter Import Password:
        ```
    :::
2.  获取管理员凭证：
    ``` literallayout
    $ kinit admin
    ```
3.  使用 `IdM CLI`{.literal} 将证书添加到用户帐户中，按照以下方法之一：
    ::: itemizedlist
    -   在将字符串添加到 `ipa user-add-cert`{.literal}前，使用
        `sed`{.literal} 工具删除 `PEM`{.literal}
        文件的第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
        \-\-\-\--END CERTIFICATE\-\-\-\--）：
        ``` literallayout
        $ ipa user-add-cert some_user --certificate="$(sed -e '/BEGIN CERTIFICATE/d;/END CERTIFICATE/d' cert.pem)"
        ```
    -   将没有第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
        \-\-\-\--END CERTIFICATE\-\-\-\--）的证书文件的内容复制并粘贴到
        `ipa user-add-cert`{.literal} 命令中：
        ``` literallayout
        $ ipa user-add-cert some_user --certificate=MIIDlzCCAn+gAwIBAgIBATANBgkqhki...
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        如果不首先删除第一行和最后一行（\-\-\-\--BEGIN
        CERTIFICATE\-\-\-\-- 和 \-\-\-\--END
        CERTIFICATE\-\-\-\--），您无法直接将包含证书的 `PEM`{.literal}
        文件作为输入传给 `ipa user-add-cert`{.literal} 命令：
        ``` literallayout
        $ ipa user-add-cert some_user --cert=some_user_cert.pem
        ```
        此命令会导致产生\"ipa: ERROR: Base64 decoding failed: Incorrect
        padding\"错误消息。
        :::
    :::
4.  （可选）检查证书是否被系统接受：
    ``` literallayout
    [idm_user@r8server]$ ipa user-show some_user
    ```
:::
:::
::: section
::: titlepage
## []{#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_converting-an-external-certificate-in-the-idm-web-ui-for-loading-into-an-idm-user-account_assembly_converting-an-external-certificate-to-load-into-an-idm-user-account}在 IdM Web UI 中转换外部证书以加载到 IdM 用户帐户 {.title}
:::
按照以下步骤将外部证书转换为 `PEM`{.literal} 格式，并将其添加到 IdM Web
UI 中的 IdM 用户帐户中。
::: orderedlist
**步骤**
1.  使用 `CLI`{.literal}，将证书转换为 `PEM`{.literal} 格式：
    ::: itemizedlist
    -   如果您的证书为 `DER`{.literal} 格式：
        ``` literallayout
        $ openssl x509 -in cert.crt -inform der -outform pem -out cert.pem
        ```
    -   如果您的文件为 `PKCS #12`{.literal} 格式，其常用文件扩展名为
        `.pfx`{.literal} 和
        `.p12`{.literal}，并且包含证书、私钥和其他数据，请使用
        `openssl pkcs12`{.literal}
        工具提取证书。提示时，输入保护存储在文件中的私钥的密码：
        ``` literallayout
        $ openssl pkcs12 -in cert_and_key.p12 -clcerts -nokeys -out cert.pem
        Enter Import Password:
        ```
    :::
2.  在编辑器中打开证书，并复制内容。您可以包含 \"\-\-\-\--BEGIN
    CERTIFICATE\-\-\-\--\" 和 \"\-\-\-\--END CERTIFICATE\-\-\-\--\"
    标头和页脚行，但您不必这样做，因为 IdM Web UI 接受 `PEM`{.literal}
    和 `base64`{.literal} 格式。
3.  在 IdM Web UI 中，以安全官身份登录。
4.  前往 `Identity`{.literal} → `Users`{.literal} →
    `some_user`{.literal}。
5.  单击 `Certificates`{.literal} 旁边的 `Add`{.literal}。
6.  将证书的 PEM 格式内容粘贴到打开的窗口中。
7.  点击 `Add`{.literal}。
:::
如果证书被系统接受，您可以在用户配置文件中看到它列在
`Certificates`{.literal} 中。
:::
:::
::: section
::: titlepage
# []{#convert-cert-formats-idm_managing-certificates-in-idm.html#assembly_preparing-to-load-a-certificate-into-the-browser_convert-cert-formats-idm}准备将证书加载到浏览器 {.title}
:::
在将用户证书导入到浏览器前，请确保证书和相应的私钥为
`PKCS #12`{.literal} 格式。通常有两种情况需要额外的准备工作：
::: itemizedlist
-   证书位于 NSS 数据库中。有关如何进入此情况的详情，请参考 [将 NSS
    数据库中的证书和私钥导出到 PKCS #12
    文件](#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_exporting-a-certificate-and-private-key-from-an-nss-database-into-a-pkcs-12-file_assembly_preparing-to-load-a-certificate-into-the-browser "将证书和私钥从 NSS 数据库导出到 PKCS #12 文件中"){.link}。
-   证书和私钥位于两个单独的 `PEM`{.literal}
    文件中。有关如何进入此情况的详情，请参考 [将证书和私钥 PEM
    文件合并到 PKCS #12
    文件中](#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_combining-certificate-and-private-key-pem-files-into-a-pkcs-12-file_assembly_preparing-to-load-a-certificate-into-the-browser "将证书和私钥 PEM 文件合并到 PKCS #12 文件中"){.link}。
:::
之后，要将 `PEM`{.literal} 格式的 CA 证书和 `PKCS #12`{.literal}
格式的用户证书导入到浏览器中，请按照
[配置浏览器来启用证书身份验证](#dc-web-ui-auth_managing-certificates-in-idm.html#configuring-browser-for-cert-auth_dc-web-ui-auth "配置浏览器以启用证书身份验证"){.link}
和 [使用证书作为身份管理用户来验证到身份管理 Web
UI](#dc-web-ui-auth_managing-certificates-in-idm.html#cert-idm-users-auth-procedure_dc-web-ui-auth "使用作为身份管理用户的证书对身份管理 Web UI 进行身份验证"){.link}
中描述的流程。
::: section
::: titlepage
## []{#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_exporting-a-certificate-and-private-key-from-an-nss-database-into-a-pkcs-12-file_assembly_preparing-to-load-a-certificate-into-the-browser}将证书和私钥从 NSS 数据库导出到 PKCS #12 文件中 {.title}
:::
::: orderedlist
**步骤**
1.  使用 `pk12util`{.literal} 命令将证书从 NSS 数据库导出为
    `PKCS12`{.literal} 格式。例如，要将昵称为 `some_user`{.literal}
    的证书从存储在 `~/certdb`{.literal} 目录中的 NSS 数据库导出到
    `~/some_user.p12`{.literal} 文件中：
    ``` literallayout
    $ pk12util -d ~/certdb -o ~/some_user.p12 -n some_user
    Enter Password or Pin for "NSS Certificate DB":
    Enter password for PKCS12 file:
    Re-enter password:
    pk12util: PKCS12 EXPORT SUCCESSFUL
    ```
2.  为 `.p12`{.literal} 文件设置合适的权限：
    ``` literallayout
    # chmod 600 ~/some_user.p12
    ```
    由于 `PKCS #12`{.literal}
    文件也包含私钥，因此必须对其进行保护，以防止其他用户使用该文件。否则，他们可以模拟用户。
:::
:::
::: section
::: titlepage
## []{#convert-cert-formats-idm_managing-certificates-in-idm.html#proc_combining-certificate-and-private-key-pem-files-into-a-pkcs-12-file_assembly_preparing-to-load-a-certificate-into-the-browser}将证书和私钥 PEM 文件合并到 PKCS #12 文件中 {.title}
:::
这部分描述了如何将存储在单独的 `PEM`{.literal}
文件中的证书和对应的密钥合并到 `PKCS #12`{.literal} 文件中。
::: itemizedlist
**步骤**
-   将存储在 `certfile.cer`{.literal} 中的证书和存储在
    `certfile.key`{.literal} 中的密钥合并到包含证书和密钥的
    `certfile.p12`{.literal} 文件中：
    ``` literallayout
    $ openssl pkcs12 -export -in certfile.cer -inkey certfile.key -out certfile.p12
    ```
:::
:::
:::
::: section
::: titlepage
# []{#convert-cert-formats-idm_managing-certificates-in-idm.html#other-cert-commands_convert-cert-formats-idm}IdM 中与证书相关的命令和格式 {.title}
:::
表 [IdM
证书命令和格式](tab.cert-commands-formats_convert-cert-formats-idm){.link}
显示了 IdM 中与证书相关的命令及可接受的格式。
::: table
[]{#convert-cert-formats-idm_managing-certificates-in-idm.html#tab.cert-commands-formats_convert-cert-formats-idm}
**表 4.2. IdM 证书命令和格式**
::: table-contents
  命令                                                                          可接受的格式                                                            备注
  ----------------------------------------------------------------------------- ----------------------------------------------------------------------- -----------------------------------------------------------------------------------------------------------------------------------------------------------
  `ipa user-add-cert some_user --certificate`{.literal}                         base64 PEM 证书                                                          
  `ipa-server-certinstall`{.literal}                                            PEM 和 DER 证书；PKCS#7 证书链；PKCS#8 和原始私钥；PKCS#12 证书和私钥    
  `ipa-cacert-manage install`{.literal}                                         DER; PEM; PKCS#7                                                         
  `ipa-cacert-manage renewal --external-cert-file`{.literal}                    PEM 和 DER 证书; PKCS#7 证书链                                           
  `ipa-ca-install --external-cert-file`{.literal}                               PEM 和 DER 证书; PKCS#7 证书链                                           
  `ipa cert-show  --certificate-out /path/to/file.pem`{.literal}   N/A                                                                     创建具有 ``{.literal} 序列号证书的 PEM 编码的 `file.pem`{.literal} 文件。
  `ipa cert-show  --certificate-out /path/to/file.pem`{.literal}   N/A                                                                     创建具有 ``{.literal} 序列号证书的 PEM 编码的 `file.pem`{.literal} 文件。如果使用 `--chain`{.literal} 选项，PEM 文件将含有包含证书链的证书。
  `ipa cert-request --certificate-out=FILE /path/to/req.csr`{.literal}          N/A                                                                     使用新证书创建 PEM 格式的 `req.csr`{.literal} 文件。
  `ipa cert-request --certificate-out=FILE /path/to/req.csr`{.literal}          N/A                                                                     使用新证书创建 PEM 格式的 `req.csr`{.literal} 文件。如果使用 `--chain`{.literal} 选项，PEM 文件将含有包含证书链的证书。
:::
:::
:::
:::
[]{#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm}第 5 章 在身份管理中创建和管理证书配置文件 {.title}
:::
证书授权机构(CA)在签名证书时使用证书配置文件，来确定证书签名请求(CSR)是否可以接受，如果可以接受，证书上有哪些功能和扩展。证书配置文件与发布特定类型的证书相关联。通过组合证书配置文件和
CA 访问控制列表(ACL)，您可以定义和控制对自定义证书配置文件的访问。
在描述如何创建证书配置集时，流程使用 S/MIME
证书作为示例。某些电子邮件程序支持使用安全多用途互联网邮件扩展(S/MIME)协议进行数字签名和加密的电子邮件。使用
S/MIME 签名或加密电子邮件消息，要求消息的发送方具有 S/MIME 证书。
::: itemizedlist
-   [什么是证书配置文件](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#what-is-a-certificate-profile_creating-and-managing-certificate-profiles-in-identity-management "什么是证书配置文件？"){.link}
-   [创建证书配置文件](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#creating-a-certificate-profile_creating-and-managing-certificate-profiles-in-identity-management "创建证书配置文件"){.link}
-   [什么是 CA
    访问控制列表](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#what-is-a-ca-access-control-list_creating-and-managing-certificate-profiles-in-identity-management "什么是 CA 访问控制列表？"){.link}
-   [定义 CA ACL
    来控制对证书配置文件的访问](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#defining-a-ca-acl-to-control-access-to-certificate-profiles_creating-and-managing-certificate-profiles-in-identity-management "定义 CA ACL 来控制对证书配置文件的访问"){.link}
-   [使用证书配置文件和 CA ACL
    来发布证书](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#using-certificate-profiles-and-ca-acls-to-issue-certificates_creating-and-managing-certificate-profiles-in-identity-management "使用证书配置文件和 CA ACL 来发布证书"){.link}
-   [修改证书配置文件](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#modifying-a-certificate-profile_creating-and-managing-certificate-profiles-in-identity-management "修改证书配置文件"){.link}
-   [证书配置文件配置参数](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#certificate-profile-configuration-parameters_creating-and-managing-certificate-profiles-in-identity-management "证书配置文件配置参数"){.link}
:::
::: section
::: titlepage