t
s
o
c
k
r
o
w
t
e
N
10000
1000
100
10
1
T
T
A
E
N
O
B
E
s
u
d
o
x
E
l
3
e
v
e
L
t
n
i
r
p
S
a
r
t
s
e
T
l
i
l
a
c
s
T
i
o
i
r
e
V
t
e
n
e
v
o
b
A
2
D
r
e
w
o
P
5
D
r
e
w
o
P
0
1
D
r
e
w
o
P
Load scale factor=1
source
optimal
compliant
(a) Maximum link utilization (%)
T
T
A
E
N
O
B
E
s
u
d
o
x
E
l
3
e
v
e
L
t
n
i
r
p
S
a
r
t
s
e
T
l
i
l
a
c
s
T
i
o
i
r
e
V
t
e
n
e
v
o
b
A
2
D
r
e
w
o
P
5
D
r
e
w
o
P
0
1
D
r
e
w
o
P
Load scale factor=1
source
optimal
compliant
(b) Network cost
Figure 6: Selﬁsh source routing: comparison of maximum link
utilization and network cost using M/M/1 link latency across dif-
ferent network topologies.
6.3 Summary
To summarize, in this section we compare the performance of dif-
ferent routing schemes using realistic network topologies and trafﬁc
demands. Our results show that unlike the theoretical worst cases,
of the four curves overlap, namely source routing, overlay source
routing when the network-level routing uses optimized-compliant
OSPF weights, and overlay source routing when the network-level
routing uses hop count. This suggests that routing constraints, whether
based on hop-count or optimized-compliant weights, have little ef-
fect on user latency or system-wide cost. This result came as quite
a surprise since our initial conjecture was that routing constraints
would degrade performance.
In contrast, when the network-level
routing uses random weights, we observe much higher delay and
link utilization. To understand this result, below we introduce a no-
tion called direct link shortest (DLS).
MM1 MD1 BPR PD1 PM1 MM1 MD1 BPR PD1 PM1
Load scale factor=0.6
Load scale factor=1
source
compliant
(a) Maximum link utilization
optimal
12000
10000
8000
6000
4000
2000
)
s
u
(
y
c
n
e
t
a
l
e
g
a
r
e
v
A
source routing
overlay-src: opt-weight
overlay-src: hop-count
overlay-src: rand-weight
0
0.2 0.4 0.6 0.8
1
1.2 1.4 1.6 1.8
2
)
%
(
n
o
i
t
a
z
i
l
i
t
u
k
n
i
l
m
u
m
i
x
a
M
180
160
140
120
100
80
60
40
20
0
0.2 0.4 0.6 0.8
source routing
overlay-src: opt-weight
overlay-src: hop-count
overlay-src: rand-weight
1
1.2 1.4 1.6 1.8
2
)
%
(
n
o
i
t
a
z
i
l
i
t
u
k
n
i
l
m
u
m
x
a
M
i
500
450
400
350
300
250
200
150
100
50
0
t
s
o
c
k
r
o
w
t
e
N
100000
10000
1000
100
10
1
1
M
M
1
D
M
R
P
B
1
D
P
1
M
P
1
M
M
1
D
M
R
P
B
1
D
P
1
M
P
Load scale factor=0.6
Load scale factor=1
source
optimal
compliant
(b) Network cost
Figure 7: Selﬁsh source routing: comparison of maximum link
utilization and network cost across different latency functions.
selﬁsh source routing in Internet-like environments is very effective
in choosing shortest paths, and yields close to optimal average la-
tency. On the other hand, this often comes at the cost of overloading
links on the shortest paths. This suggests that selﬁsh routing may
potentially have a negative impact on trafﬁc engineering. We will
further investigate the issue in Section 9.
7. SELFISH OVERLAY ROUTING
The previous evaluations consider selﬁsh source routing. How-
ever, as we discussed in Section 1, in practice, end users often do not
have complete routing control. We initially expected that reducing
routing ﬂexibility would increase both latency and link utilization,
since users lose ﬁne-grained control over routing. However, as we
will see, this is often not the case.
7.1 Does selﬁsh overlay routing perform well
when every node is in the overlay?
We ﬁrst consider an overlay that consists of all network nodes.
Note that even if the overlay includes all network nodes, routing on
an overlay is still different from routing on the physical network in
that the latter has access to all network resources, but this may not
be the case for the former. For example, the network-level routing
can easily prevent any overlay trafﬁc from using a particular link
by setting its corresponding column in the routing matrix to 0 (in
OSPF this can be achieved by assigning a large weight to the link).
As a result, certain physical routes cannot be implemented by any
overlay routing schemes.
In our evaluation, we use the same network setting as before, ex-
cept that the routes between any pair of overlay nodes are no longer
determined by end users, but by the network-level routing. We adopt
OSPF for network-level routing and use the three OSPF weight as-
signments as described in Section 3.
Figure 8 shows the performance of overlay source routing for the
ISP T opo network, as we vary network load. In both ﬁgures, three
Load scale factor
(a) Latency
(b) Maximum link utilization
Load scale factor
Figure 8: Selﬁsh overlay routing: comparison of user latency
and maximum link utilization for the ISP T opo topology.
DEFINITION 1
(DIRECT LINK SHORTEST). We consider a
network-level routing scheme to be direct link shortest (DLS), if for
any physically adjacent nodes A and B, all the trafﬁc from A to B is
routed through the direct link AB without involving any other links.
As an example, hop-count-based OSPF is a DLS routing scheme.
Our key observation about DLS routing schemes is as follows. In
an overlay that covers all network nodes and satisﬁes DLS, routing
on the overlay has as much routing ﬂexibility as directly routing on
the underlying physical network. This is because, by deﬁnition of
DLS, the overlay can force trafﬁc to follow any given physical path
N1N2...Nk by specifying an overlay path with the same node se-
quence: N1 → ... → Nk, where nodes Ni and Ni+1 are physically
adjacent. Given this observation, since hop-count-based OSPF sat-
isﬁes DLS, it performs as well as source routing. As for optimized-
compliant OSPF weights, our veriﬁcation shows that such weights
satisfy DLS to a large extent, thus it also performs well.
One implication of the above observation is that the only way
in which a network-level routing scheme can affect the amount of
selﬁsh overlay trafﬁc on a given link AB is by violating DLS. In the
context of OSPF, this can only be achieved by choosing the weights
so that an alternative path from node A to B has a total weight that
is either lower than or equal to the OSPF weight of AB. When the
alternative path has a lower total weight, AB is effectively pruned
from the network, since no overlay trafﬁc can ever use it. When
there is a tie, some load balancing can be achieved. However, such
ties are very rare in our experiments. Therefore, such violations of
DLS effectively reduce the network resources available to the selﬁsh
overlay and can lead to higher latency and link utilization.
With random OSPF weights, violations of DLS are common and
therefore the network resources available to the overlay are signif-
icantly reduced. This explains why we see substantially higher la-
tency and maximum link utilization with random OSPF weights.
We will show later in Section 9 that selﬁsh overlay routing interacts
poorly with OSPF optimizer for exactly the same reason.
We further verify the above observations by using different net-
work topologies; the results are shown in Figure 9. As before, ran-
dom OSPF weights continue to yield substantially higher delay and
maximum link utilization, while the performance of the other three
is close to each other. This conﬁrms our previous ﬁndings. When
comparing the performance across different routing schemes, we
observe that selﬁsh routing continues to result in close to optimal
average latency. Moreover, it yields noticeably lower latency than
compliant routing in most cases. However, this lower latency often
comes at the cost of higher maximum link utilization.
load scale factor = 1
)
s
u
(
y
c
n
e
t
a
l
e
g
a
r
e
v
A
1.E+06
1.E+05
1.E+04
1.E+03
1.E+02
1.E+01
1.E+00
e
c
r
u
o
s
e
c
r
u
o
s
t
W
t
p
o
:
y
a
l
r
e
v
o
t
n
C
t
p
o
h
:
y
a
l
r
e
v
o
t
W
d
n
a
r
:
y
a
l
r
e
v
o
t
W
t
p
o
:
y
a
l
r
e
v
o
t
n
C
t
p
o
h
:
y
a
l
r
e
v
o
t
W
d
n
a
r
:
y
a
l
r
e
v
o
e
c
r
u
o
s
t
W
t
p
o
:
y
a
l
r
e
v
o
t
n