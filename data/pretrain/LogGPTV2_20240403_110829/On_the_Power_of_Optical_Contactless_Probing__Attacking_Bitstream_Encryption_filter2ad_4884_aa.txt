title:On the Power of Optical Contactless Probing: Attacking Bitstream Encryption
of FPGAs
author:Shahin Tajik and
Heiko Lohrke and
Jean-Pierre Seifert and
Christian Boit
On the Power of Optical Contactless Probing:
Attacking Bitstream Encryption of FPGAs
Shahin Tajik∗,1, Heiko Lohrke∗,2, Jean-Pierre Seifert1, and Christian Boit2
1Security in Telecommunications, 2Semiconductor Devices
Technische Universität Berlin, Germany
{stajik,jpseifert}@sec.t-labs.tu-berlin.de
PI:EMAIL, PI:EMAIL
∗ These authors contributed equally to this work
1 INTRODUCTION
ABSTRACT
Modern Integrated Circuits (ICs) employ several classes of counter-
measures to mitigate physical attacks. Recently, a powerful semi-
invasive attack relying on optical contactless probing has been
introduced, which can assist the attacker in circumventing the in-
tegrated countermeasures and probe the secret data on a chip. This
attack can be mounted using IC debug tools from the backside of
the chip. The first published attack based on this technique was
conducted against a proof-of-concept hardware implementation
on a Field Programmable Gate Array (FPGA). Therefore, the suc-
cess of optical probing techniques against a real commercial device
without any knowledge of the hardware implementation is still
questionable. The aim of this work is to assess the threat of opti-
cal contactless probing in a real attack scenario. To this end, we
conduct an optical probing attack against the bitstream encryption
feature of a common FPGA. We demonstrate that the adversary is
able to extract the plaintext data containing sensitive design infor-
mation and intellectual property (IP). In contrast to previous optical
attacks from the IC backside, our attack does not require any device
preparation or silicon polishing, which makes it a non-invasive
attack. Additionally, we debunk the myth that small technology
sizes are unsusceptible to optical attacks, as we use an optical reso-
lution of about 1 µm to successfully attack a 28 nm device. Based
on our time measurements, an attacker needs less than 10 work-
ing days to conduct the optical analysis and reverse-engineer the
security-related parts of the hardware. Finally, we propose and
discuss potential countermeasures, which could make the attack
more challenging.
KEYWORDS
Bitstream Encryption; FPGA Security; Electro-Optical Probing;
Laser Voltage Probing
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’17, October 30-November 3, 2017, Dallas, TX,USA
© 2017 Association for Computing Machinery.
ACM ISBN 978-1-4503-4946-8/17/10...$15.00
https://doi.org/10.1145/3133956.3134039
Several countermeasures have been integrated into modern Inte-
grated Circuits (ICs) to protect the secrets and Intellectual Property
(IP) from physical attacks, such as side-channel analysis and fault
attacks. Counterfeiting and overbuilding of target products are the
primary motivation behind these attacks [23, 25]. Recently, a new
class of physical attack, relying on a known Failure Analysis (FA)
technique, has been introduced [7], which is capable of circum-
venting the protections to get access to the secrets and IPs on the
chip. This attack, which is called optical contactless probing, en-
ables an adversary to probe volatile and on-die-only secret data
from the backside of a chip without making any physical contact
with transistors. It has been demonstrated that with the help of
this technique, an attacker can localize and probe secret keys on
a Field Programmable Gate Array (FPGA), which are required to
decode the encrypted configuration binary data, called bitstream.
However, the effectiveness of this attack has been evaluated against
a proof-of-concept FPGA implementation, where the details of tar-
get implementation were known to the attackers. Furthermore, the
technology of the chip selected as the target was 60 nm, which is
larger than the technology of the latest generations of ICs. This
raises the question if this technique can still be applied in a real
attack scenario, where little or no knowledge about the underlying
hardware implementation is available to the attacker. Moreover,
it is unclear, whether optical probing can be applied to recent IC
technologies as well.
The primary aim of this work is therefore to assess the threat of op-
tical contactless probing against a real modern commercial device,
where an adversary has only access to the publicly available docu-
mentation. In other words, it would be interesting to evaluate the
feasibility of extracting sensitive information by an attacker, who
possesses the target platform and is capable of renting the necessary
equipment from a failure analysis lab for a limited time to launch
an attack. To this end, an appropriate target device with strong se-
curity features has to be chosen. FPGAs seem to be suitable targets
as they have become indispensable parts of embedded electronic
devices in several applications such as cryptography, digital signal
processing and Software Defined Radios (SDRs). Moreover, they are
deployed in the switches of Software Defined Networks (SDNs) and
considered as the primary components of the Centralized Radio
Access Network (C-RAN) concept in 5G cellular networks. Besides,
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1661internet giants have already integrated FPGAs into their cloud com-
puting platforms to provide customers with more flexible and faster
services [1, 10]. Therefore, a great deal of attention has to be paid to
protect the secrets and IPs on these platforms from cloning.
Since SRAM-based FPGAs do not contain any internal Non-Volatile
Memory (NVM) to store the bitstream, the bitstream is loaded in
an untrusted field from an external NVM to the device upon each
power-on. Even flash-based FPGAs capable of storing the config-
uration inside their packages might be reconfigured by a remote
server, which leads to the transmission of updated bitstreams in
an adversarial environment. If an unauthorized person can obtain
the bitstream, she might be able to create a counterfeit product
by cloning and reverse-engineering the design. Bitstream encryp-
tion is a conventional solution used by several FPGA vendors to
assure the confidentiality of the bitstream. To implement this fea-
ture, FPGAs contain state of the art decryption cores in the form
of Application-Specific Integrated Circuits (ASIC) to protect the
bitstream data.
We have chosen a device from Xilinx’s 7-Series FPGAs manufac-
tured with 28 nm technology to present our attack. Selection of this
device allows for responsible disclosure and prevents additional
harm to device security, as 7-Series bitstream encryption has al-
ready been broken by performing side-channel analysis [5, 15]. It
should be noted that the divulged information from the published
attack in [5, 15] only considers the innermost AES workings, and
therefore, offers no helpful information for the attack that will be
evaluated in this work. Needless to say that during our experiments,
we did not possess any additional knowledge other than publicly
available information about the device and the ASICs contained
therein. Additionally, the technology of this FPGA is representative
for several modern ICs, and it is small enough to reveal the strength
of our approach.
Our Contribution. We present how an attacker can in a non-
invasive manner and without any device preparation localize the
bus, which is connected to the output of the decryption core and
responsible for carrying and distributing the plaintext bitstream
on the chip. We further demonstrate that after finding the bus,
the attacker can probe the passing bitstream information on it
directly and reconstruct the bitstream data offline. Based on the
achieved results, it becomes apparent that if no proper protection
is provided by vendors, the same attack can also be applied to
the latest generation of FPGAs, which are thought to be secure.
Additionally, we reveal the time that was needed to mount our
attack successfully. The required time and effort are shown to be
much less than what was expected, i.e., less than 10 working days
use of failure analysis equipment. Finally, we discuss potential
countermeasures, which can be implemented by vendors as well as
users to protect the secrets and IPs on their chips against optical
contactless probing.
Figure 1: Simplified illustration of contactless optical prob-
ing signal acquisition.
2 BACKGROUND
2.1 Optical Contactless Probing
Optical techniques have been developed in the field of failure anal-
ysis to debug ICs in a contactless way. Contactless interaction with
the transistors requires less effort in comparison to other debugging
tools, such as Focused Ion Beam (FIB) circuit editing. While the op-
tical path from the transistors to the surface of the IC is obstructed
by multiple interconnected layers, the analysis can be carried out
from the IC backside through the silicon substrate. However, silicon
is only transparent to photons in the near infrared (NIR) spectrum.
Hence, the necessary equipment for the analysis of the IC, including
the light sources and detectors, have to be designed for functioning
in the NIR region.
Electro-Optical Probing (EOP) and Electro-Optical Frequency Map-
ping (EOFM) are examples of optical contactless techniques, which
enable us to debug nanoscale transistors from the backside of the
chip. Instead of the lasers used in Laser Voltage Probing (LVP) and
Laser Voltage Imaging (LVI) techniques they use incoherent light
sources. Apart from this difference, both techniques provide the
same functions, and LVP/LVI and EOP/EOFM can be seen as equiv-
alent tools. While EOP can be used to probe electrical signals on
the transistors directly, EOFM can be employed to create an activity
map of active circuits. In both cases, the photons with NIR wave-
lengths pass through the silicon substrate from the IC backside
to reach the transistors, which leads to a partial absorption and a
partial reflection of the light. In the case of EOP, the reflected light
is modulated based on the electrical signal on a node, and it can
be fed to an optical detector to measure its intensity, see Fig. 1. In
this way, the data passing through a node can be probed. Since the
light modulation is small, the signal needs to be measured several
times and averaged by running the device in a triggered loop. In
this case, a sufficient signal to noise ratio can be achieved.
For performing EOFM, on the other hand, the detector signal is
fed into a spectrum analyzer acting as a narrow band frequency
filter while the light beam scans the device. In this case, the signal
is not averaged. The beam is scanned across the Device Under Test
(DUT) using galvanometric x/y mirrors, and the filter output of the
spectrum analyzer is sampled for every scanned pixel. Subsequently,
a control PC is used to assemble the sampled frequency filter values
into a 2D image using a grayscale or false color representation.
If an electrical node operates at the frequency of interest, it will
modulate the light reflected with the same frequency, which will be
able to pass through the frequency filtering spectrum analyzer. As a
result, the nodes with a switching frequency equal to the frequency
LaserBeam SplitterObjectiveLensDUTFrontsideBacksideActive AreaDetectorLight Source Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1662filter show up as bright spots in the EOFM image leading to their
localization on the chip.
2.2 FPGA Security during Configuration
FPGAs are programmed and configured by binary data called the
bitstream, which is generated by an application designer. While
flash-based FPGAs have internal Non-Volatile Memory (NVM) to
store configuration data in the same package, SRAM-based FPGAs
do not contain any NVM, and hence, are not capable of storing the
bitstream [24]. Therefore, the bitstream has to be kept in an external
NVM and loaded into the SRAM-based FPGAs upon each power-on
in an untrusted field. Similarly, if the firmware of flash-based FP-
GAs requires configuration updates, their upgraded bitstream has
to be transferred remotely to the device in a potentially adversarial
environment. Transmitting bitstreams in plaintext can divulge the
designs and IPs to an adversary. Consequently, bitstreams have
to be kept confidential. Bitstream encryption is a common feature
of modern FPGAs to prevent IP piracy during FPGA configura-
tion.
2.2.1 Bitstream Encryption. To enable bitstream encryption, a
secret key k is used to encrypt the application design in the In-
tegrated Development Environment (IDE) software. While recent
generations of FPGAs from Xilinx, Intel/Altera, and Microsemi
deploy AES-256 to encrypt the bitstream, the mode of operation
might differ on them. Xilinx 7-Series FPGAs are using AES in Cipher
Block Chaining (CBC) mode to encrypt the bitstream [27]. In this
case, the bitstream is divided into n 128-bit blocks pi∈{1,··· ,n} and
the resulting encrypted bitstream in n 128-bit blocks is generated
by
ci = AESEN C
k
(pi ⊕ ci−1
),
0 = IV (i.e., initialization vector). The key k is transferred to
with c
the FPGA via JTAG in a safe environment and the encrypted bit-
stream is stored in an external NVM, see Fig. 2. The transferred key
on the FPGA is stored either in the Battery Backed RAM (BBRAM)
or eFuses inside the FPGA. Each time the FPGA is powered up
in the untrusted field, the encrypted bitstream is transmitted to
the chip, and it is decoded by a decryption core using the stored
key k inside the chip. In this case, the plaintext (i.e., unencrypted
bitstream) is generated by
pi = AESDEC
k
(ci ) ⊕ ci−1
,
with c
0 = IV .
2.2.2 Bitstream Authentication. Xilinx’s 7-Series FPGAs employ
authenticated encryption schemes to assure confidentiality, in-
tegrity and authenticity of the bitstream [27]. To authenticate the
bitstream, Hash Message Authentication Code (HMAC) is used. In
this scheme, HMAC is performed with an authentication key Ka
(not to be confused with the encryption key k) on the unencrypted
bitstream. However, in contrast to the encryption key, there is no
storage on the FPGA for the HMAC key. Therefore, the key and the
MAC itself is encrypted with the bitstream using the encryption