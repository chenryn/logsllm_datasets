某运维审计系统任意⽂件写⼊漏洞挖掘过程
分享下最近挖掘漏洞的⼀些⼿段。
临近实习，有⽊有⼤佬收实习⼩弟，端茶倒⽔样样精通。
⽬标系统如下:
是⼀个安全审计系统，根据主⻚的关键词在⽹络安全产品⼤全中进⾏查询，得知⽬标系统开发商为⼴州某科。
`⽹络安全产品⼤全`:https://t.wangan.com/c/products.html
同时，通过搜索引擎查到了⼀些历史漏洞。
本以为可以直接拉出payload出来打呢。但是看了下，⽬前所遇到的系统版本为3.*最新版，⽽乌云所存储的时间居然是2011年？
这明显对不上了，且新版使⽤的mvc模式。直接略过
既然没有可利⽤的公开漏洞，那么只有⾃⼰挖掘漏洞了。还是⽼⽅法，通过fofa采集了⼀波相同程序的站点，准备探测⼀下弱⼝令，
进去挖⼀些未授权的漏洞。
测了⼗⼏个站点，都没有⼀个成功的。。。卒！
因为这类系统⼀般都是采⽤的iso镜像⽂件或者安装包。既然知晓了开发⼚商以及产品版本号。那么可以直接去找⼀下镜像或者安装
包，脱取源码进⾏审计。
百度云⽂件搜索引擎:https://www.lingfengyun.com/
根据筛选，发现了某⽤户在19年分享过这类系统的操作⽂档。将其下载下来。发现⽂档中包含了openstack以及docker的安装⽅法。
由于openstack需要环境，本机没有配置。所以这⾥我简单看了看docker的安装⽅法。
docker  pull 的是⼀个私有仓库。但是，这⾥可以注意下。docker在push的时候⼀般是以⽤户名/镜像名。⼀般在知道⽤户名的情况下
可以尝试去搜索⼀些镜像。在安装⽂档中，pull的地址为*nsec.com。
尝试使⽤docker search xxxnsec 搜索。
这⾥有两个镜像，⼀个是geteway,⼀个是web firewall。但是，当我尝试下载的时候。
去dockerhub上看了⼀下
并没有内容。应该是被清空了。可惜啊。
既然分享过操作⽂档，肯定会有安装包。
直接切⼊该⽤户的详细信息，并且筛选zip,rar等压缩⽂件。最终以⼤⼩确定⼀个结尾为V3.7的zip压缩包。
将其下载到本地。解压出来为iso镜像⽂件。
开始⽤Vmware搭建环境，
根据相关提示,开始安装程序
安装完过后,提示输⼊账户和密码
由于解压出来的⽂件⾥并没有安装⽂档，在历史分享中也并没有找到类似⽂件。盲测了⼏个弱⼝令发现都不⾏。
这⾥想到了忍者师傅前段时间发过⼀篇⽂章，也是在不知道⽬标主机账户密码的情况下读取系统⽂件。
在本地新建了⼀个centos7系统，添加⼀块现有虚拟磁盘。磁盘⽂件选择运维审计系统的vmdk⽂件
开启centos7系统，查看硬盘以及分区信息
1
sudo fdisk -l
可以看到这⾥多了⼀个sdb2，这就是刚刚添加的现有虚拟磁盘，也就是运维审计系统的磁盘
将其挂载。
因为⽬标程序是使⽤php开发的，这⾥直接find查找⼀下
找到对应路径 直接tar 打包整个⽂件夹，拖出来。源码到⼿～！
开始审计。
由于是MVC模式，直接找Controller
在indexController下发现某⽅法存在调⽤file_put_centents()函数
且参数可控。并且在第三⾏，调⽤了file_put_centents。可造成任意⽂件写⼊。
cert为内容，username由于是在末尾拼接，可以直接../跨⽬录
准备写个phpinfo进去，测试下可执⾏性
发现写⼊的⽂件内容被替换了，经过⼀系列测试，发现只要出现<>; '"就会在该字符前⾯加⼀个\
由于\的写⼊导致php代码语法错误，不能被执⾏。这⾥想到了php的特性
链接https://blog.csdn.net/chengjianghao/article/details/100078052
加结尾的：之后的内容视为 纯⽂本直接输出，直到再次碰到 <? 或 <?php
不加的：之后的内容视为 PHP 代码，除⾮没有代码了。
不加结尾并不影响php代码的执⾏。如果传⼊<?php phpinfo(); 那么最终格式为 \<?php phpinfo()\;
⻜
这⾥的;最终也被替换了。导致语句还是⽆法正常执⾏。这⾥请教了群⾥的师傅
在1师傅的指导下获得了最终的payload: <?php if(expr) 在php中 if是以{}作为结尾。
同理，使⽤while也是可以的。