### Optimized Text

#### 5.2. SER Reduction for Combined Error Detection and Masking

To estimate the slack \( S_{\text{max}} \) available at each flip-flop for sampling primary output (PO) values, we constructed both the original and modified C2MOS flip-flops, as shown in Figure 1. The circuits were simulated using TSMC 0.18-micron models. The setup and hold times for both flip-flops were measured by connecting them to a FO4 inverter load. The values for \( t_{D-\text{clk}} \), \( t_{D-C2} \), and \( t_{\text{clk}-Q} \) in the modified design were found to be 125 ps, 115 ps, and 50 ps, respectively.

A delay chain capable of generating phase-shifted clock signals every 200 ps was constructed, and the sampling times \( t_1 \) and \( t_2 \) were determined based on the availability of control signals. The width of the transient pulse that can be tolerated in the modified circuit, \( t_w \), is then calculated as \( \min(t_3 - t_2, t_2 - t_1) \).

The charge required to cause a transient pulse of width \( t_w \) and \( t_w = 100 \) ps was obtained from the lookup table. If \( t_w \leq 100 \) ps, error detection and correction (EDAC) is used in the path. The results for ISCAS85 circuits are provided in Table 1.

| Circuit | Ntrig | E.M. | EDAC | SER Redn. % (E.M.) | SER Redn. % (Both) | Area Ovhd. % | Power Ovhd. % |
|---------|-------|------|------|---------------------|--------------------|---------------|----------------|
| c432    | 3     | 3    | 4    | 55.66               | 89.66              | 30.8          | 72             |
| c1908   | 16    | 16   | 4    | 66.74               | 85.2               | 19.4          | 65             |
| c2670   | 44    | 44   | 4    | 99.58               | 99.81              | 30.8          | 52             |
| c3540   | 18    | 18   | 8    | 81.14               | 98.73              | 18.9          | 34             |
| c7552   | 58    | 58   | 8    | 97.12               | 90.14              | 22.63         | 27             |
| c5315   | 102   | 102  | 4    | 95.8                | 99.14              | 27.75         | 45             |
| Avg.    | 5.6   | 82.67| 93.78| 25.05               | 49.17              |               |                |

In Table 1, the column "Ntrig" represents the number of flip-flops (FFs) modified. The sub-column "E.M." gives the number of FFs where error masking was used, while "EDAC" provides the number of POs connected to the flip-flops shown in Figure 1. The average number of paths on which EDAC is applied corresponds to 5.6, allowing domino logic to generate ED signals without significant delay. The average SER reduction using error masking alone is 82.67%, and combining error masking with EDAC raises it to 93.78%.

The original area of the ISCAS85 circuits was obtained from Synopsys Design Compiler, and the area overhead is the sum of the area occupied by the delay lines and associated buffers, the modified FFs, the circuit required to generate ED signals, and a five percent wiring overhead. The overhead for generating phase-shifted (PS) signals is not included, as the ISCAS85 circuits considered are not pipelined.

The area overhead depends on the number of modified FFs, the number of distinct sampling times, and the maximum sampling time, which contribute to the delay element overhead. If multiple sampling times are close together, the delay element overhead can be reduced (by clustering) without significant loss of SER reduction. The delay lines can be shared across multiple modules, further reducing their area and power overheads.

The power consumed by the original ISCAS85 circuits was estimated in Primepower using a zero-delay model (i.e., delays and switching activity have not been back-annotated). The power overhead was estimated by constructing the delay chain required to generate the control signals and performing SPICE simulations. The output load on each delay tap was approximately estimated as the sum of the input capacitances of the control transistors switched by the delay taps. In practice, the average power overhead would be lower due to:
1. The original power estimation using a zero-delay model, which does not account for glitchy or partial transitions.
2. The lower leakage energy consumed by the overhead circuit due to fewer components.

Compared to the overhead of 200% from existing techniques, the overheads incurred by the technique presented here are significantly lower.

#### 5.3. SER Reduction for Slack Redistribution

To simulate the effect of time borrowing on SER reduction when using error masking alone, we increased the slack available across all paths and recalculated the SER reduction. The slack available in all paths was increased up to 0.2×T, where T is the clock period. The results are plotted in Figure 5. As shown, SER reduces with a small increase in slack time. For example, in C432, the SER reduction increases from 52% to 82% as the time borrowed increases from 0.05×T to 0.1×T. This is because the number of latches triggered and used for sampling doubles from three to six when the time borrowed increases to 0.1×T.

#### 6. Conclusions

We presented an efficient time-redundancy-based design technique for error masking and recovery. This technique can improve the reliability of a circuit by reducing transient faults caused by crosstalk or soft errors due to particle strikes, without any performance overhead. The power and area overheads can be traded off based on the application's SER requirements. A technique for preventing single-event multi-bit upsets (SEMU) from affecting the latched value and hence the CLB output was also presented. Results show an average SER reduction of 93.78%, with reasonable area and power overheads and zero performance overhead, which is significantly better than current techniques.

#### References

[1] S. Mitra et al., “Robust system design with built-in soft-error resilience,” IEEE Computer, Feb. 2005.

[2] B.W. Johnson, J.H. Aylor, and H.H. Hana, “Efficient use of time and hardware redundancy for concurrent error detection in a 32-bit adder,” IEEE Journal of Solid-State Circuits, Feb. 1988.

[3] Y.M. Hsu, Concurrent error correcting arithmetic processors, Ph.D. thesis, The University of Texas at Austin, 1995.

[4] M. Nicolaidis, “Time redundancy based soft-error tolerance to rescue nanometer technologies,” in Proc. International VLSI Test Symposium, 1999.

[5] L. Anghel and M. Nicolaidis, “Cost reduction and evaluation of a temporary faults detecting technique,” in Proc. Design Automation and Test Europe, 2000.

[6] D.K. Pradhan, Fault-tolerant computer system design, Prentice Hall, first edition, 1996.

[7] S. Mitra and E.J. McCluskey, “Which concurrent error detection scheme to choose?,” in Proc. International Test Conference, Oct. 2000.

[8] Dan Ernst et al., “Razor: A low-power pipeline based on circuit-level timing speculation,” in Micro Conference, December 2003.

[9] S. Krishnamohan and N.R. Mahapatra, “A highly-efficient technique for reducing soft errors in static CMOS circuits,” in Proc. ACM International Conf. Computer Design (ICCD), Oct. 2004.

[10] Whitney J. Townsend and Jacob A. Abraham, “Quadruple time redundancy adders,” in Proc. International VLSI Test Symposium, Nov. 2003.

---

This optimized text aims to enhance clarity, coherence, and professionalism while maintaining the technical details and structure of the original content.