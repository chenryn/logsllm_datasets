the other one runs Ubuntu 16.04 with an AMD EPYC 7251
CPU and 256G memory that is in charge of extracting the pre-
installed apps from Samsung ﬁrmware images, downloading
apps from the alternative market, and executing INPUTSCOPE
to analyze these apps.
B. Evaluation Results
In total, INPUTSCOPE took around 24 days to discover mo-
bile apps containing backdoors or blacklist secrets from these
150,000 mobile apps. Speciﬁcally, as presented in Table III, we
ﬁrst identiﬁed 114,797 mobile apps that contain equivalence
checking. Note that an app can detect whether a user input is
empty by simply checking whether the input is equivalent to an
empty string. There are 34,958 mobile apps that perform these
empty-only checks, and we thus exclude them from further
analysis. In the remaining 79,839 mobile apps, INPUTSCOPE
identiﬁed 4,028 apps containing blacklist secrets and 12,706
apps containing backdoor secrets. There are 7,584 apps with
secret access keys, 501 apps that embed master passwords, and
6,013 apps with secret commands. Moreover, these security
risks hold generally across all of our data sources. Speciﬁcally,
the prevalence of backdoor secrets in apps is 6.86%, 5.32%,
and 15.96% on the Google Play store, the alternative market,
and pre-installed apps, respectively, and the percentage of apps
containing blacklist secrets in these three data sources are
1.98%, 4.46%, and 3.87%.
Next, we examine these results in greater detail to under-
stand two key questions. First, what kind of advantage could
be taken by using the uncovered hidden behaviors such as
backdoors? Second, what are the detailed items in a blacklist,
and why they are blocked? To this end, we have manually
inspected the top apps in each category, and we present here a
detailed security analysis. Note that the top apps from Google
Play and Baidu Market can be easily identiﬁed based on
the download numbers from their app stores, but we cannot
8
Usage
Description
Hidden
Admin Interface
Login
Arbitrary
User Password
Recovery
Advanced
Service Payment
Bypassing
# Installs
Category
5,000,000 - 10,000,000
5,000,000 - 10,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
10,000,000 - 50,000,000
5,000,000 - 10,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
Sports
Dating
Social
Travel
News
Health
Personal.
Games
Product.
Lifestyle
Product.
Books
Books
Books
Product.
Package
Name
air.**.l****
e**.o****
co.**.g****
com.**.j****
com.**.a****
org.**.p****
com.l*.k****
com.**.c****
com.**.cu***
com.**.p****
com.**.n****
com.g*.d****
com.g*.d****
com.g*.t****
vo*.**.tr***
Access
Keys
U***S
i***g
$***n
J***!#
w***#
8***8
0**9*
q***3
h****
*6**0
#***+
q***d
q***d
q***d
q***d
TABLE IV: Detailed results of top inspected mobile apps
containing secret access keys.
identify the top apps from the pre-installed dataset since all of
them are installed when users purchased the phone and likely
have the same distribution. We therefore only focus on the
apps from the app stores in our case studies below, though we
have also observed similar patterns in pre-installed apps.
1) Hidden Backdoor Behaviors: Since INPUTSCOPE has
discovered three types of input-triggered hidden behaviors
using (i) secret access keys, (ii) master passwords, and (iii)
secret commands, we present detailed analysis for each of
these categories in the following.
(I). Hidden Behaviors Triggered by Secret Access Keys.
To better understand why such hidden behaviors exist, we
have manually inspected a set of 30 apps that are randomly
selected from the apps with more than one million installs and
summarized the three most common types of usage that we can
recognize. In addition, we present the detailed results of the top
ﬁve apps for each usage, 15 apps in total, in Table IV, where
the ﬁrst column describes the type of usage, the next three
columns provide the number of downloads, its category, and
its package name, respectively, and the last column shows the
identiﬁed secret access key for each app. We have summarized
the following three types of usages with our best effort as also
listed in Table IV:
• Logging into administrator interfaces. We have iden-
tiﬁed access keys that can be used to log into an app’s
administrator interface, which is invisible to normal users
and allows users to change the conﬁguration of the app.
An example in this case is a very popular sports live
streaming app with more than 5 million installs. In partic-
ular, it allows anyone to login as an administrator with the
access key “U***S” from the hidden administrator inter-
face in its “Setting” menu. After the successful login,
the administrator interface allows an attacker to perform
privileged actions such as changing conﬁguration URLs,
changing network IDs, or resetting a “temporary pass”.
• Resetting arbitrary user passwords. We have also dis-
covered access keys to trigger the hidden behaviors of re-
covering or resetting normal users’ passwords. We take a
popular app providing screen-locking services with more
than 5 million installs as an example. To launch this at-
tack, ﬁrst, attackers can simply trigger a hidden button af-
9
# Installs
Category
Package Name
Master Pwd
10,000,000 - 50,000,000
5,000,000 - 10,000,000
5,000,000 - 10,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
500,000 - 1,000,000
500,000 - 1,000,000
500,000 - 1,000,000
Tools
Tools
Health
Tools
Entert.
Finance
Tools
Parenting
Product.
Tools
com.a****
s**.c*.g****
in.p*.l****
com.m*.p****
com.kiddoware.kidsplace
com.v*.p****
it.v*.d****
com.*s.m****
com.movinapp.quicknote
com.s*.h***s
9***8
1*6**
*9**2
4***2
5493
o*f*s
1v**3
****1
1349100416
b*r*1
TABLE V: Detailed results of top inspected mobile apps
containing master passwords.
ter multiple trials with a wrong password. Then, attackers
can click the hidden button to get a new interface where a
special code is requested. After providing the code 0**9*,
attackers can reset the password to unlock the screen.
• Bypassing
free. For
advanced service payment. We
also
have veriﬁed there are access keys that can purchase
in-app advanced services for
instance, we
have extracted an access key, q***d, from a popular
translation app with more than one million installs.
Similar to the motivating example, by simply typing
this code in the EditText which accepts text for
translation and clicking the translate button, one can
remove the advertisement displayed in the app for free.
However, removing advertisements is a service available
for purchase with a fee of $12.99.
From these detailed case studies, we can notice that the
user input validations in apps can expose their secret access
keys and can be used to launch various attacks against both
the users of the mobile app (e.g., resetting their passwords)
and also the service providers of the app (e.g., bypassing their
service payment). Also, surprisingly, these types of mistakes
can even occur in popular apps with millions of installs. In
addition, we observed that the same group of developers could
make the same mistake across all of their apps.
(II). Hidden Behaviors Triggered by Master Passwords.
INPUTSCOPE has identiﬁed 501 master passwords among the
tested apps. We also randomly selected 10 popular apps to
understand the hidden behaviors triggered by these master
passwords, and the result for these apps is presented in Ta-
ble V. Since a master password can be used to hijack/override
another compared target, it is extremely dangerous. During
our manual investigation with these apps, we found a security
related app with more than 10 million installs, which is
designed to help a user lock their smartphone when it is lost
by allowing legitimate users to control the phone remotely.
While this app provides many different security mechanisms
to protect its users, e.g., remotely wiping the phone via SMS,
it contains a master password 9***8 to bypass its protection
on the privacy apps that are set to be locked when the phone
is lost. Another interesting case is a diary app where users can
lock the diary with their passwords. However, an attacker can
use the password lv**3 to unlock the secret diary, although
the app will display a text at the bottom of the screen saying
“wrong password”.
(III). Hidden Behaviors Triggered by Secret Commands.
INPUTSCOPE identiﬁed 6, 013 mobile apps containing secret
# Installs
Category
Package Name
Commands
Tools
10,000,000 - 50,000,000
10,000,000 - 50,000,000 Music&Audio
10,000,000 - 50,000,000
5,000,000 - 10,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
1,000,000 - 5,000,000
Games
Education
Shopping
Education
Games
Social
Games
Productivity
com.*.whe*d
com.th.ringtone.maker
ru.c*.s****
w*.*n.****g
com.b*.a***y
com.*a.b**n*
com.c*.f***s
com.c*.s****
com.h*.e****
com.lfantasia.android.outworld
w***l, d***n, B***u, w***k ...
enableartistalbum, disableartistalbum ...
8***4, 82***, 6***9 ...
t***e on, b***l, f***e, b****1, d***g ...
p***f, d***p, c***f, p***n, d***s ...
S***D#, M****, G***S, G***I, D***P, C***R ...
c***h, e***t ...
*#0*#, *#*1#, *#*3#, *#*5#, *#*2# ...
un**s, lo**l, lo**s, un*** ...
(maroonAuth), (amberAuth), (darkCyanAuth) ...
TABLE VI: Detailed results of top identiﬁed mobile apps containing secret commands.
commands. As before, we manually inspected the commands