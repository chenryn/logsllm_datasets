t
i=1(x + xi) =
(cid:20)
(cid:20)
(cid:5)
(cid:5)
t
assume that there exist two coeﬃcients a, b to satisfy
h(x, y, u, v) = a(yxf
2
(x))(uv g(x)
(cid:2)
x+x
i
)+b(uyf (x)g(x))( vf (x)
x+xi
).
ax
x+x
(cid:2)
i
+ b
x+xi
= 1. To solve this equa-
So that, we have
tion, we have (a − 1)x2 + (axi + b − xi − x
xix
b = xi = x
xi (cid:5)= x
i −
(cid:3)
(cid:3)
i) = 0. It is easy ﬁnd that our solution is a = 1 and
(cid:3)
i, but it contradicts with the assumption of
(cid:3)
i in f (x) and g(x).
(cid:3)
i for all xi and x
(cid:3)
i)x + (bx
Hence, no linear combination among the polynomials from
P, Q loads to h. This also means that h is independen-
t of (P, Q). Therefore, we obtain the advantage of adver-
sary AdvIND
according to Theorem
(4).
GDHE2,A(n, t) ≤ (q+2s+2)3·d
2p
D. PROOF OF THEOREM 3
IND,mode
SBE,A
Proof. Suppose there exists an adversary A can break
our SBE scheme with the advantage Adv
(n, t) for
either Select-mode or Cut-mode. Our objective is to build a
PPT algorithm B to solve the above (n, t)-GDHE1 or (n, t)-
GDHE2 problem by using the advantage of A. Since there
merely exists a slight diﬀerent between GDHE1 and GDHE2:
2(γ) in GDHE2 (see Table
ˆH ςf (γ) lies in GDHE1 but ˆGςγf
1), such that we merge them into one proof, as follows:
Initial. According to the assumption that B is given as in-
put an (n, t)-GDHE1 or (n, t)-GDHE2 instance. From
this instance, B does not know γ, ς,  but knows 2n ran-
i, ai, bi ∈ Z
(cid:3)
∗
dom integers xi, x
p in f (x) and g(x), where
(cid:3)
any pairwise (xi, x
i) are not equal to each other. First-
ly, B deﬁnes a set of identities U, and then require A
to choose randomly a challenge subset S from U such
201that R = U \ S, where |U| = n and R = t. Secondly,
B formally sets G = ˆGf (γ) (but he can by no means
compute the value of G) and H = ˆH f (γ)g(γ). In order
(cid:5)
to compute H, we ﬁrst need to compute the polyno-
mial coeﬃcients ci of f (X) · g(X) =
i=1(X + xi) ·
n−t
(cid:3)
i=1 (X + x
i are
)ci is computed from
known, and then H =
ˆH , ˆH γ,··· , ˆH γn. Based on them, it computes easily
the public parameter:
(cid:5)
i=0 ci · X i, where allx i and x
i=0( ˆH γi
(cid:3)
i) =
(cid:20)
(cid:5)
n
n
t
⎧⎪⎨
⎪⎩ H = ˆH f (γ)g(γ) =
i=0( ˆH γi
R = e(G, H) = e( ˆG, ˆH)f
Gk = Gγk
= ˆGγk f (γ)
(cid:5)
n
mpk =
)ci ,
2(γ)g(γ),
for k = [1, m].
=
k=1,k(cid:5)=i
(X+xi) =
(cid:4)t
f (X)
X + xi
(cid:15)t−1
Learning. In this phase, the adversary A can issue up to n
times secret-key queries {IDi} to gain the information
of this cryptosystem. For each query IDi, we consider
two following cases: ID ∈ S and IDi ∈ R:
Case IDi ∈ R : B chooses randomly an element xi and
let xi = hash(IDi). Then B deﬁnes the polynomial
(cid:3)
kX k
fi(X) =
of degree t − 1 for i ∈ [1, t]. Based on the known
), B generates the secret
values ( ˆG, ˆGγ ,··· , ˆGγt−1
key of the corrupted users
(cid:14)
(cid:13)(cid:4)t−1
(cid:10)
(cid:20)
Similarly, B computes the coeﬃcients b
nomial fi(X)g(X) =
( ˆH , ˆH γ,· ·· , ˆH γn
(cid:4)n−1
j=0
(cid:3)
k of the poly-
(cid:3)
kX k and then uses
xi 
γ+xi = ˆG
(cid:2)
j γj
xif (γ)
γ+xi = ˆGxifi(γ)
) to compute
n−1
k=1 b
t−1
j=0 a
ˆGγj
= G
(cid:9)
(cid:9)
(cid:10)
ˆG
k=0
sk
=
=
(i)
xi
xi
a
(cid:3)
(cid:2)
j
a

.
Hi = H
γ+xi = ˆH fi(γ)g(γ)
=
(cid:2)
( ˆH γk)b
k ,
k=0
k is a known integer for all k = [0, n − 1].
(cid:3)
where b
Finally, B sends sk(i) and ppi = (IDi, Hi) to A.
Note that, all these keys {sk(i)}IDi∈R are available
for the ciphertext which is encrypted by the public
encryption key.
Case IDi ∈ S : B chooses randomly an element x
(cid:3)
i and
i = hash(IDi). B is merely required to use the
(cid:3)
let x
above-mentioned approach to generate (IDi, Hi),
for i ∈ [1, n− t] and
that is, B deﬁne gi(X) = g(X)
computes Hi = ˆH f (γ)gi(γ) in terms of ( ˆH , ˆH γ ,··· ,
ˆH γn
). Finally, B sends ppi = (IDi, Hi) to A.
X+x
(cid:2)
i
Note that the total number of attribute values is n. Hi
can be computed easily because the polynomials fig
and f gi are of degree n − 1. In addition, A can query
the hash value xi = h(IDi) at any time if IDi ∈ R.
Otherwise, B returns the hash value x
(cid:3)
i = h(IDi).
Challenge. B deﬁnes ς = s, but ς is unknown for B. Next,
, B chooses one
according to the given challenge mode
of two modes, u ∈ S and u (cid:5)∈ S to compute the chal-
lenge ciphertext from two given instances, GDHE1 or
GDHE2, respectively. The ciphertext is generated as
follows:
∗
(cid:30)
• u ∈ S: B constructs a ciphertext as follows:
= ˆH ςf (γ)g(γ),
C1 = H s
C2 = H
s
g(γ) = ˆH ςf (γ),
(cid:30)
where B get these two values from GDHE1 instance.
• u (cid:5)∈ S: B constructs a ciphertext as follows:
= ˆH ςf (γ)g(γ),
C1 = H s
C2 = Gsγf (γ) = ˆGςγf
2(γ),
∗
∗
, C1, C2).
= (S, mode
where B get these two values from GDHE2 instance.
For both cases, B deﬁnes the session key ek as T . B
now selects a random bit b ← {0, 1}, sets ekb = T
and sets ek1−b to a random element of GT . Finally,
B sends the challenge C = (C
, ek0, ek1) to A, where
∗
C
Note that, as seen from Section 4.1, there exists a slight
diﬀerent between GDHE1 and GDHE2: ˆH ςf (γ) lies in
2(γ) in GDHE2, which is responsible
GDHE1 but ˆGςγf
for the diﬀerent of the above ciphertexts.
, B
(cid:3) ∈ {0, 1} to B.
We now analyze the validate of B as follows: if the given
2(γ)g(γ), the challenge
∗
Guess. A returns a guess b
outputs 1, otherwise 0.
value T is valid, i.e., T = e( ˆG, ˆH)ςf
C
and ek will be valid because
If b = b
(cid:3)
ek = e(G, H)s = e( ˆGf (γ)
, ˆH f (γ)g(γ)
)ς
= e( ˆG, ˆH)ςf
2(γ)g(γ)
= T.
In this case, we have the success probability of B is
Pr[b = A(C)|T = ek] = P r[b = b
(cid:3)|T = ek]
= Pr[b
Pr[b
= Pr[b
Pr[b
(cid:3)
(cid:3)
(cid:3)
(cid:3)
= 1|b = 1 ∧ T = ek] · Pr[b = 1] +
= 0|b = 0 ∧ T = ek] · Pr[b = 0]
= 1|b = 1 ∧ T = ek] · 1
= 0|b = 0 ∧ T = ek] · 1
2 +
2
(cid:3)
Otherwise, the adversary A randomly guesses and picks an
(cid:3)|T R←−
answer b
(cid:3)|T R←− GT ] = 1/2,. Based on them, we have
GT ] = Pr[b (cid:5)= b
AdvIND
with 1/2 possibility, such that Pr[b = b
GDHE1,2,B(n, t)
= | Pr[b = b
= | Pr[b
(cid:3)
Pr[b
(cid:3)|T R←− GT ]|
(cid:3)|T = ek] − Pr[b = b
= 1|b = 1 ∧ T = ek] · 1
(cid:3)
2 +
= 0|b = 0 ∧ T = ek] · 1
− 1
= 1|b = 1 ∧ T = ek]−
= 1|b = 0 ∧ T = ek]
(cid:3)
(cid:23)(cid:23)(cid:23)(cid:23) Pr[b
Pr[b
(cid:23)(cid:23)(cid:23)(cid:23)
|
(cid:3)
2
2
=
1
2
= 1
2
= 1
2
Adv
IND,mode
SBE,A
Based on AdvIND
equation under the precondition of T = ek:
SBE,A(n, t) in Section 2, we have the following
(n, t) = | Pr[b
(cid:3)
| Pr[b
| Pr[b
= b] − 1/2|
= b] − Pr[b
(cid:3) (cid:5)= b]|
(cid:3)
= 1|b = 1] − Pr[b
(cid:3)
= 1|b = 0]|.
GDHE1,2,B(n, t) =
(n, t) for two modes. According to Theorem 1
GDHE1,2,B(n, t) ≤ (q+2s+2)2·d
Summing up, we get that the equation AdvIND
Adv
and 2, we have proved that AdvIND
2p
IND,mode
SBE,A
where s = n+t+m+4 and d = 2n. Thus, Adv
also satisﬁes the same negligible success probability.
IND,mode
SBE,A
(n, t)
,
(cid:3)
202