packets that are forwarded to that AS are then correctly relayed to the actual
target. In such a case, however, the actual owner is not supposed to announce
the address block itself. For an external observer, it appears as if the address
block is owned by the AS that announces it.
Unfortunately, there are situations when the owner of an IP block cannot
be identiﬁed easily. The most common reason is the aggregation of IP address
ranges. As previously stated, when an AS performs aggregation it claims that
28
C. Kruegel et al.
it is the origin of the aggregated address space, eﬀectively masking the true
owners of the aggregated IP subranges. An autonomous system that performs
this step is required to tag this announcement with a special ﬂag. This enables an
external observer to identify aggregated update messages as such. A mechanism
similar to aggregation is used with communities. The COMMUNITIES attribute
was introduced in RFC 1997 [3] and is used to describe a group of autonomous
systems with common properties. It is used to control the propagation of routing
information based on communities instead of IP preﬁxes and AS paths alone in
an attempt to simplify routing policies. When routes from diﬀerent ASes that
belong to the same community are aggregated, the aggregation tag is not set.
Nevertheless, the original source of an update can no longer be determined with
certainty.
The straightforward solution to the problem of aggregated routes2 is to sim-
ply exclude them from the analysis. Unfortunately, a malicious AS could then
evade detection by marking a route update as aggregated. Therefore, update
messages that announce aggregated routes cannot be discarded immediately. In-
stead, we only discard these updates when the originating AS is a core node.
In this case, it is very probable that the NLRI ﬁeld contains IP ranges of many
diﬀerent destinations and the information cannot be reliably utilized. In the case
of a periphery node, however, a mapping between the aggregated IP block and
the corresponding AS is installed. When a periphery AS aggregates routes, we
assume that the aggregated IP blocks are unlikely to be announced indepen-
dently by the actual owner (that is a periphery AS as well). This assumption
is conﬁrmed by the low false alert rate that our system produces (as shown in
Section 6).
The knowledge of IP address ownership helps to detect attacks or misconﬁg-
urations where an AS announces an address block that is not under its author-
ity. UPDATE messages that contain addresses in their NLRI ﬁeld that are already
owned by someone else are classiﬁed as malicious. For similar reasons as outlined
above, we discard all aggregated routes that originate at core nodes.
In general, the ownership of an address is relatively stable. Although ﬂapping
connections or broken links may cause a speciﬁc route to certain target addresses
to be withdrawn, we cannot delete the address binding from our database as the
ownership of the respective block has not changed. The problem of changes in
the ownership of IP blocks can be solved in two ways. One approach involves a
human operator that notices the increase of alleged attacks caused by clashing
IP blocks and removes the old binding after making sure that the alerts are
incorrect. Then, the new owner of the now vacant address can be entered into
the model and normal operation continues. A more sophisticated automated
mechanism determines whether the previous owner has recently announced the
disputed IP blocks. When a suﬃcient amount of time has elapsed since the last
announcement, the new owner is considered to be legitimate and ownership is
transferred.
2 In the following discussion, the term aggregated routes applies to update messages
with community attributes as well.
Topology-Based Detection of Anomalous BGP Messages
29
6 Experiments
We have developed several criteria that help to assess the validity of routing
data using an underlying model of the global routing infrastructure. Our model,
consisting of the mapping of IP preﬁxes to ASes and the AS connectivity graph,
is built by processing routing updates collected at Looking Glass sites such as the
one run by the University of Oregon [32]. Looking Glass sites are passive BGP
peers that maintain connections to a number of major BGP routers throughout
the Internet and obtain the routers’ forwarding tables as well as any UPDATE
messages the routers receive. This allows one to get BGP data from multiple
vantage points in diﬀerent locations. The data is archived and made publicly
available.
The techniques described in the previous sections have been implemented
to detect potentially invalid route messages sent by BGP peers. Note that the
detection system does not have to be installed at the actual BGP routers. In-
stead, in a setup that is similar to the one used by Looking Glass sites, UPDATE
messages can be forwarded by routers to a regular desktop machine where the
analysis can be performed.
The empirical evaluation of our approach uses BGP data collected during four
diﬀerent weeks over the last two years. The ﬁrst data set contains BGP update
messages collected during the week starting from April 5th, 2001, the second
set starting from January 10th, 2002, the third set starting from September
15th, 2002, and the fourth starting from March 3rd, 2003. The ﬁrst day of each
week was used to build the IP address to AS mapping and the AS connectivity
graph. The subsequent six days were then used as an input for the detection
process. We assume that the day utilized for the model creation phase is free
of any major incidents. However, minor misconﬁgurations are likely to occur.
This results in a slightly imprecise topology graph, and thereby, might result in
incorrect detections. We claim that the eﬀect of these misconﬁgurations is small;
a claim that is supported by the evaluation of the quality of the model and the
detection process in the following two sections.
6.1 Model Validation
Our detection mechanisms depend upon both reliable classiﬁcation of core and
periphery ASes, as well as the validity of the assumption that ASes making up
each cluster in the periphery are geographically close. Prior to investigating the
detection performance of the system, this section explores these requirements in
more detail.
Table 1 provides statistical data for each AS connectivity graph constructed
from the BGP update messages of the ﬁrst day of the respective four data sets.
The iterative algorithm for partitioning the AS connectivity graph into core
and periphery nodes (described in Section 4.1) performs well. Upon removing
the core, the remaining nodes in the graph fall into disjoint clusters. The total
number of core AS nodes represent, on average, 12.6% of the total number of
30
C. Kruegel et al.
Table 1. AS Connectivity Graph Statistics
Date
Core
Periphery
5831 (89.5%)
Apr. 5th, 2001
686 (10.5%)
Jan. 10th, 2002 10592 (85.1%) 1860 (14.9%)
Sep. 15th, 2002 12006 (87.1%) 1773 (12.9%)
Mar. 3rd, 2003
8422 (87.9%) 1162 (12.1%)
Clusters Max. Size Avg. Size
1.31
1.20
1.23
1.31
4437
8692
9762
6418
64
72
63
68
nodes in the graph. This is in close agreement with [10] and [33], which ﬁnd about
10% of ASes that constitute the core of the Internet. The number of nodes in
each cluster is small, usually one, but there are also large clusters with a few
tens of nodes. Table 1 shows, for each data set, the number of clusters (Clusters)
as well as the maximum (Max. Size) and average number of nodes per cluster
(Avg. Size).
For each cluster, we calculate the cluster diameter as deﬁned in Section 4.1.
This requires determining the maximum geographical distance between any two
of its ASes. To obtain the distance between two autonomous systems, it is nec-
essary to determine the locations for both ASes and to calculate the great circle
geographic distance between them. The location for an AS is extracted from
the whois database entry of the appropriate local registry (ARIN [2] for the US
and Canada, RIPE for Europe, LACNIC [17] for Latin America and APNIC
[1] for Asia and the Paciﬁc). The whois entries in the ARIN database list the
city, state and country for the autonomous system location in explicitly marked
ﬁelds. This makes it straightforward to extract the required data. The other three
databases, however, do not follow a standardized method of specifying locations.
Therefore, we have developed a parser that retrieves the provided organizational
description and contact information for each AS and attempts to determine a
probable geographical position. Manual inspection of a few hundred locations
indicate that the extraction of geographical data is successful. Additionally, our
results show that connected periphery ASes are in close proximity (see Figure 2
below). Note, however, that the location information is only useful for periphery
nodes. Although core nodes have a speciﬁc geographic location as well, their
corresponding networks usually span a large geographical area and, thus, this
information has less value. Only for peripheral ASes, the location information is
meaningful.
Figure 2 is a log-scale histogram plot that shows the distribution of cluster
diameters for the four datasets considered in this evaluation. In all cases, the
fraction of clusters whose diameter is greater than 300 kilometers is less than
2.4%. There is a relatively small number of high-diameter (i.e., ≥ 4000 km)
outliers in each plot. These are due to obviously incorrect or stale entries in the
whois database or are caused by special purpose links operated by ASes that
are not classiﬁed as core nodes. For example, NASA operates a branch oﬃce
in Moscow with its own AS number and this AS has a direct connection to a
location in the US. However, the special links are expected to be stable and the
Topology-Based Detection of Anomalous BGP Messages
31
s
r
e
t
s
u
c
#
l
s
r
e
t
s
u
c
#
l
16384
4096
1024
256
64
16
4
1
16384
4096
1024
256
64
16
4
1
04/05/2001
100
500
1000
1500
2000
2500
3000
3500
4000
Cluster diameter
April 5th, 2001
09/15/2002
100
500
1000
1500
2000
2500
3000
3500
4000
Cluster diameter
September 15th, 2002
s
r
e
t
s
u
c
#
l
s
r
e
t
s
u
c
#
l
16384
4096
1024
256
64
16
4
1
16384
4096
1024
256
64
16