Y Yes
N No ^C Cancel
Enter Y to save the file. Now we’ll edit the file with the vi editor.
Editing a File with vi
Add the text in Listing 2-5 to testfile.txt. In addition to the contents of the
file, at the bottom of the vi screen you see some information including the
filename, number of lines, and the current cursor position (see Listing 2-5).
root@kali:~/mydirectory# vi testfile.txt
hi
georgia
we
are
teaching
pentesting
today
~
"testfile.txt" 7L, 46C 1,1
All
Listing 2-5: Editing files with vi
Using Kali Linux 63
Unlike nano, you can’t just start editing the file once it is opened in vi.
To edit a file, enter I to put vi into insert mode. You should see the word
INSERT displayed at the bottom of your terminal. Once you’ve finished
making changes, press esc to exit insert mode and return to command
mode. Once in command mode, you can use commands to edit your text.
For example, position the cursor at the line we and enter dd to delete the
word we from the file.
To exit vi, enter :wq to tell vi to write the changes to the file and quit,
as shown in Listing 2-6.
hi
georgia
are
teaching
pentesting
today
:wq
Listing 2-6: Saving changes in vi
note To learn more about available commands for vi and nano, read the corresponding
man pages.
Which editor you use daily is up to you. Throughout this book we’ll use
nano to edit files, but feel free to substitute your editor of choice.
data manipulation
Now for a bit of data manipulation. Enter the text in Listing 2-7 in myfile
using your desired text editor. The file lists some of my favorite security
conferences and the months when they typically happen.
root@kali:~/mydirectory# cat myfile
1 Derbycon September
2 Shmoocon January
3 Brucon September
4 Blackhat July
5 Bsides *
6 HackerHalted October
7 Hackcon April
Listing 2-7: Example list for data manipulation
64 Chapter 2
Using grep
The command grep looks for instances of a text string in a file. For example,
to search for all instances of the string September in our file, enter grep
September myfile as follows.
root@kali:~/mydirectory# grep September myfile
1 Derbycon September
3 Brucon September
As you can see, grep tells us that Derbycon and Brucon are in September.
Now suppose you want only the names of the conferences in Septem-
ber but not the number or the month. You can send the output of grep to
another command for additional processing using a pipe (|). The cut com-
mand allows you to take each line of input, choose a delimiter, and print
specific fields. For example, to get just the names of conferences that run in
September you can grep for the word September as you did previously. Next,
you pipe (|) the output to cut, where you specify a space as the delimiter
with the -d option and say you want the second field with the field (-f)
option, as shown here.
root@kali:~/mydirectory# grep September myfile | cut -d " " -f 2
Derbycon
Brucon
The result, as you can see, is that by piping the two commands together
you get just the conferences Derbycon and Brucon.
Using sed
Another command for manipulating data is sed. Entire books have been
written about using sed, but we’ll cover just the basics here with a simple
example of finding a specific word and replacing it.
The sed command is ideal for editing files automatically based on cer-
tain patterns or expressions. Say, for instance, you have a very long file,
and you need to replace every instance of a certain word. You can do this
quickly and automatically with the sed command.
In the language of sed, a slash (/) is the delimiter character. For
example, to replace all instances of the word Blackhat with Defcon in myfile,
enter sed 's/Blackhat/Defcon/' myfile, as shown in Listing 2-8.
root@kali:~/mydirectory# sed 's/Blackhat/Defcon/' myfile
1 Derbycon September
2 Shmoocon January
3 Brucon September
4 Defcon July
5 Bsides *
6 HackerHalted October
7 Hackcon April
Listing 2-8: Replacing words with sed
Using Kali Linux 65
Pattern Matching with awk
Another command line utility for pattern matching is the awk command.
For example, if you want to find conferences numbered 6 or greater, you
can use awk to search the first field for entries greater than 5, as shown here.
root@kali:~/mydirectory# awk '$1 >5' myfile
6 HackerHalted October
7 Hackcon April
Or, if you want only the first and third words in every line, you can
enter awk '{print $1,$3;}' myfile, as shown in Listing 2-9.
root@kali:~/mydirectory# awk '{print $1,$3;}' myfile
1 September
2 January
3 September
4 July
5 *
6 October
7 April
Listing 2-9: Selecting certain columns with awk
note We’ve looked at only simple examples of using these data manipulation utilities in
this section. To get more information, consult the man pages. These utilities can be
powerful time-savers.
managing installed Packages
On Debian-based Linux distributions such as Kali Linux, you can use the
Advanced Packaging Tool (apt) to manage packages. To install a package,
enter apt-get install package. For example, to install Raphael Mudge’s front-
end for Metasploit, Armitage, in Kali Linux, enter the following:
root@kali:~# apt-get install armitage
It’s that easy: apt installs and configures Armitage for you.
Updates are regularly released for the tools installed on Kali Linux. To
get the latest versions of the packages already installed, enter apt-get upgrade.
The repositories Kali uses for packages are listed in the file /etc/apt/sources
.list. To add additional repositories, you can edit this file and then run
the command apt-get update to refresh the database to include the new
repositories.
66 Chapter 2
note This book is built off the base install of Kali 1.0.6 unless otherwise noted in
Chapter 1, so in order to follow along with the book as is, don’t update Kali.
Processes and services
In Kali Linux you can start, stop, or restart services using the service com-
mand. For example, to start the Apache web server, enter service apache2
start as shown next.
root@kali:~/mydirectory# service apache2 start
[....] Starting web server: apache2: Could not reliably determine the server's
fully qualified domain name, using 127.0.1.1 for ServerName
. ok
Likewise, to stop the MySQL database server, enter service mysql stop.
managing networking
When setting up the Kali Linux virtual machines in Chapter 1, you
used the ifconfig command to view network information as shown in
Listing 2-10.
root@kali:~# ifconfig
eth0u Link encap:Ethernet HWaddr 00:0c:29:df:7e:4d
inet addr:192.168.20.9v Bcast:192.168.20.255 Mask:255.255.255.0w
inet6 addr: fe80::20c:29ff:fedf:7e4d/64 Scope:Link
UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
RX packets:1756332 errors:930193 dropped:17 overruns:0 frame:0
TX packets:1115419 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:1048617759 (1000.0 MiB) TX bytes:115091335 (109.7 MiB)
Interrupt:19 Base address:0x2024
--snip--
Listing 2-10: Viewing networking information with ifconfig
From the output of ifconfig you can glean a lot of information about
your system’s network state. For one, the network interface is called eth0 u.
The IPv4 address (inet addr) that my Kali box uses to talk to the network
is 192.168.20.9 v (yours will probably differ). An IP address is a 32-bit label
assigned to devices in a network. The IP address is named up of 4 octets,
or 8-bit parts.
Using Kali Linux 67
The address’s network mask, or netmask (Mask), at w identifies which parts
of the IP address are part of the network and which parts belong to the
host. In this case the netmask 255.255.255.0 tells you that the network is the
first three octets, 192.168.20.
The default gateway is where your host routes traffic to other networks.
Any traffic destined outside the local network will be sent to the default
gateway for it to figure out where it needs to go.
root@kali:~# route
Kernel IP routing table
Destination Gateway Genmask Flags Metric Ref Use Iface
default 192.168.20.1u 0.0.0.0 UG 0 0 0 eth0
192.168.20.0 * 255.255.255.0 U 0 0 0 eth0
The route command output tells us that the default gateway is
192.168.20.1 u. This makes sense because the system with the IP
address 192.168.20.1 is the wireless router in my home network. Take
note of your own default gateway for use in the following section.
Setting a Static IP Address
By default, your network connection uses dynamic host configuration
protocol (DHCP) to pull an IP address from the network. To set a static
address, so that your IP address won’t change, you need to edit the file
/etc/network/interfaces. Use your preferred editor to open this file. The
default configuration file is shown in Listing 2-11.
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# The loopback network interface
auto lo
iface lo inet loopback
Listing 2-11: The default /etc/network/interfaces file
To give your system a static IP address you need to add an entry for the
eth0 interface. Add the text shown in Listing 2-12 to /etc/network/interfaces
with the IP addresses changed to match your environment.
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# The loopback network interface
auto lo
iface lo inet loopback
auto eth0
iface eth0 inet static u
address 192.168.20.9
68 Chapter 2
netmask 255.255.255.0 v
gateway 192.168.20.1 w
Listing 2-12: Adding a static IP address
You set the IP address for eth0 as static at u. Use the IP address, net-
mask , and gateway  you found in the previous section to fill in the
information in your file.
Once you’ve made these changes, restart networking with service
networking restart so that the newly added static networking information
will be used.
Viewing Network Connections
To view network connections, listening ports, and so on, use the netstat
command. For example, you can see the programs listening on TCP ports
by issuing the command netstat -antp, as shown in Listing 2-13. Ports are
simply software-based network sockets that listen on the network to allow
remote systems to interact with programs on a system.
root@kali:~/mydirectory# netstat -antp
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address Foreign Address State
PID/Program name
tcp6 0 0 :::80 :::* LISTEN
15090/apache2
Listing 2-13: Using netstat to view listening ports
You see that the Apache web server you started earlier in the chapter is
listening on TCP port 80. (See the man page for other netstat options.)
netcat: the swiss army knife of tCP/iP Connections
As the man page notes, the Netcat tool is known as the Swiss Army knife
for TCP/IP connections. It’s a versatile tool that we’ll utilize throughout
this book.
To see Netcat’s various options enter nc -h, as shown in Listing 2-14.
root@kali:~# nc -h
[v1.10-40]
connect to somewhere: nc [-options] hostname port[s] [ports] ...
listen for inbound: nc -l -p port [-options] [hostname] [port]
options:
-c shell commands as `-e'; use /bin/sh to exec [dangerous!!]
-e filename program to exec after connect [dangerous!!]
-b allow broadcasts
--snip--
Listing 2-14: Netcat help information
Using Kali Linux 69
Check to See If a Port Is Listening
Let’s have Netcat connect to a port to see if that port is listening for connec-
tions. You saw previously that the Apache web server is listening on port 80
on your Kali Linux system. Tell Netcat to attach to port 80 verbosely, or out-
put rich, with the -v option as shown next. If you started Apache correctly,
you should see the following when attempting to connect the service.
root@kali:~# nc -v 192.168.20.9 80
(UNKNOWN) [192.168.20.10] 80 (http) open
As you can see, Netcat reports that port 80 is indeed listening (open) on
the network. (We’ll look more at open ports and why they are interesting in
Chapter 5’s discussion of port scanning.)
You can also listen on a port for an incoming connection using Netcat,
as shown next.
root@kali:~# nc -lvp 1234
listening on [any] 1234 ...
You use the options l for listen, v for verbose, and p to specify the port
to listen on.
Next, open a second terminal window and use Netcat to connect to the
Netcat listener.
root@kali:~# nc 192.168.20.9 1234
hi georgia
Once you connect, enter the text hi georgia, and when you return to the
listener’s terminal window, you see that a connection was received and your
text was printed.
listening on [any] 1234 ...
connect to [192.168.20.9] from (UNKNOWN) [192.168.20.9] 51917
hi georgia
Close down both Netcat processes by pressing ctrl-C.
Opening a Command Shell Listener
Now for something a bit more interesting. When you set up your Netcat
listener, use the -e flag to tell Netcat to execute /bin/bash (or start a Bash
command prompt) when a connection is received. This allows anyone who
connects to the listener to execute commands on your system, as shown next.
root@kali:~# nc -lvp 1234 -e /bin/bash
listening on [any] 1234 ...
Again, use a second terminal window to connect to the Netcat listener.
70 Chapter 2