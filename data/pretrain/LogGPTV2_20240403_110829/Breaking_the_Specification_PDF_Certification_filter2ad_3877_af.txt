annotations, they pose a great risk of tricking normal users.
Therefore, these three annotation types should be classiﬁed as
prohibited within the PDF speciﬁcation for use within certiﬁed
documents. The remaining annotations can be used to hide
existing text or images and should be limited in their attributes.
For example, a line of type Underline or StrikeOut
should never be larger than the underlying text part. This could
be achieved by calculating the amount of collision between
two rectangles using the /BBox coordinates, when taking into
account the line thickness. In case of overlap, the integrated
editing tool should reject the drawing with a corresponding
message. To capture manually created incremental updates,
collision calculations should also be performed during cer-
tiﬁcation validation. An empty or undeﬁned value for the
/Subtype element must also be penalized with an invalid
certiﬁcation status.
Preventing Sneaky Signatures.
In practice, annotations
within a certiﬁed document can often be omitted. Therefore,
a lower permission level can be chosen as a precaution.
Unfortunately, this does not apply to signatures to the same
extent. In many situations, it may be useful and necessary
to allow the addition of signatures after certiﬁcation. For
example, the certiﬁed document can be signed by multiple
contract partners. However, to prevent attacks of the SSA
class, signature ﬁelds must be set up at deﬁned locations in the
PDF document before the document is certiﬁed. A subsequent
addition of signature ﬁelds must be penalized with an invalid
certiﬁcation status. Otherwise, it can always be used to add
text or images included in the signature at any position. Within
our analysis, the contained ﬁeldtype /FT with the value /Sig
was decisive for whether an object was identiﬁed as a signature
and thus classiﬁed as a permitted change. Nevertheless, it was
possible to redirect or omit the reference to the signature data
/V, and resulted in the signature not being validated and thus
not being listed in UI-Layer 2. Therefore the speciﬁcation
should show the parameter /V as mandatory and not optional.
Suppose the signature cannot be validated due to missing or
incomplete signature data. In that case, it should be listed as
an invalid signature in UI-Layer 1 and UI-Layer 2.
B. Short-term Countermeasures
PDF-Detector. We analyzed the possibilities to provide a
short-term countermeasure which is standard compliant. The
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
111495
main cause for the vulnerabilities described in this paper is
the overlay over the original content by using annotations
or signatures. We determined that we can detect such an
overlay by analyzing the position of annotations and signatures
within the document and estimating if these intersect with
some content. If such an intersection is found, a warning
can be thrown. We implemented a tool called PDF-Detector
which is capable of detecting EAAs and SSAs. PDF-Detector
is available as an online service at http://pdf-demos.de and
as an open-source library. The PDF-Detector is a python
based tool which takes certiﬁed documents as an input and
produces a report whether dangerous elements were found
in the PDF document, see Listing 2. As a ﬁrst step, PDF-
Detector analyzes if the submitted PDF is digitally signed
and if the signature is a certiﬁcation or approval signature.
The PDF-Detector evaluates the document’s permission level
and estimates if any Incremental Updates are applied. If true,
PDF-Detector determines if the appended elements within
the Incremental Update are allowed according to the per-
mission level. If they are denied, an error is thrown, and
the report’s status is set to error. Otherwise, PDF-Detector
determines the type of the appended elements, for example,
a FreeText annotation or a signature. Independent of the
element’s type, the changes-danger-level is deﬁned.
The values corresponds to the values depicted in Table II
and Table III. Finally, PDF-Detector analyzes each annotation
or signature position and estimates the intersection with the
content of the page. If such an intersection is found, the
changes-danger-level is raised to very high. PDF-
Detector does not provide any cryptographic signature valida-
tion. The reason for this decision was that the management
of trusted or revoked certiﬁcates and the support of standards
like PAdES [43] and CAdES [44] are considered out of scope
and irrelevant for the attacks described in this paper.
Visible Panel for Annotation and Signatures. To reduce the
attacks’ stealthiness, we also recommend making annotations
and additional signatures visible on UI-Layer 1. Currently,
none of the tested PDF applications do this. Thus, the attacks
can only be detected if the user pro-actively looks into the
PDF application’s corresponding panels.
IX. HIGH PRIVILEGED JAVASCRIPT CODE EXECUTION
A dedicated feature of certiﬁed documents is executing high
privileged JavaScript code within Adobe Acrobat Pro and
Reader (Windows and macOS). This section describes how
the attack classes EAA and SSA can be used to inject and
execute JavaScript code into certiﬁed documents.
Overview. JavaScript code can be embedded in PDF doc-
uments to provide various interactive features. The code
execution is started by several
triggers, such as opening
a page within the PDF document. In the past, researchers
used the JavaScript functionality to execute malicious code
[45, 46, 47, 48]. Adobe requires that potentially dangerous
functions can only be executed as high privileged JavaScript
code to address these issues. An example of such a function
it
is calling a website without asking or warning the user.
Suppose a certiﬁed document contains JavaScript code and
the certiﬁcate used is fully trusted. In that case, the execution
of high privileged JavaScript code occurs without asking the
user [49, 50].
Using EAA and SSA to inject JavaScript. For annotations
and signature ﬁelds,
is possible to pass a reference to
an object containing JavaScript. For this purpose, a trigger
is chosen within an additional-actions dictionary /AA. To
execute the JavaScript code directly upon opening the doc-
ument,
the value /PO is suitable and which triggers the
code execution when opening the page. Suppose the EAA
or SSA is placed on the ﬁrst page of the PDF document.
In that case, the code execution starts immediately after the
document is opened. The object referenced by /PO contains
the JavaScript code. The following example opens the website
https://www.malicious.org/ using the system’s default browser.
The victim is unable to prevent this call. The attack is not
limited to calling up a website but can execute any high
privileged JavaScript code. The only requirement is that the
victim fully trusts the certiﬁcate used to certify the PDF
document. We were able to identify a total of 117 JavaScript
methods that are protected by special security restrictions and,
for this reason, can be executed only in a privileged context
[49].
X. FUTURE RESEARCH DIRECTIONS
Page Templates. In addition to the permitted modiﬁcations
described in this paper, certiﬁed documents of permission
levels P2 and P3 offer the possibility to instantiate page tem-
plates. However, the page templates must already be included
in the document before certiﬁcation. This restriction results in
a completely different attacker model which was introduced
in 2021 by Mainka et al. [51]. In this case the attacker must
manipulate the document before it is certiﬁed. For this paper,
an analysis of page templates is, thus, out of scope, but offers
an interesting research aspect for future work.
Design of the update mechanism. Incremental Updates intro-
duce a desired feature to ﬂexibly extend PDF documents. From
a security perspective, however, Incremental Updates enable
a great attack surface allowing the stealthy manipulation of
digitally signed documents. The current countermeasures are
only a patchwork and do not introduce a systematic approach
to address the existing security issues. Future research should
concentrate on new design concepts which allow the extend-
ability of PDF documents without weakening the integrity
protection.
Editing Restrictions. Microsoft Ofﬁce provides restrictions
such as: only allowing to ﬁll-in forms, add comments, track
changes, or open a document as read-only [52]. This restriction
is similar to the P2 restrictions in PDFs. Microsoft Ofﬁce also
allows applying multiple signatures with different permission
levels. The question if similar attacks like EAA and SSA
can be applied is obvious. Future research projects should
analyze the Open Document Format (ODF), Ofﬁce Open XML
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
121496
(OOXML) format, and all previously used but still supported
versions like ECMA-376 Ofﬁce Open XML.
Privilege Escalation. Similar to PDFs, other documents like
*.docx or *.odf can contain macros. Due to previously
discovered security issues leading to remote code execution,
the processing of macros is restricted. It leads to warnings by
opening the document. Such a warning can be skipped if the
document is digitally signed and the validation is successful.
If attacks can bypass the signature validation, they can inject
arbitrary macro code, which is stealthily processed after the
victim opens the document. We adapted the attack described in
section IX on LibreOfﬁce as a proof-of-concept and reported
it. The responsible disclosure process is not yet ﬁnalized.
Usability of Validation Warnings. During our evaluation,
we estimated a large number of confusing warnings during
the validation process. Such warnings include a wide range
of different messages and symbols independent of the used
application. Even for experts who know how PDFs work
and what behavior is expected from the application, it was
challenging to recognize the validation result and classify the
attack’s success. We strongly recommend a usability study
that addresses the following questions: 1) How users handle
signed and certiﬁed documents and raised warnings? 2) How
the usability problems with respect to warnings can be sys-
tematically analyzed? 3) What are best current practices that
can be used by developers to improve the validation results
presentation? Such a study could be broaden by extending the
scope to different formats like MS Ofﬁce, Open Document
Format, AutoCAD, and DWFx Drawings.
XI. RELATED WORK
PDF Signatures. In 2008 and 2012, I. Grigg [54] and
[53] described attacks on electronic signatures. Their attacks
highlighted the abuse of missing cryptographic protection.
In 2010, Raynal et al. [55] concentrated on the security
of the applied certiﬁcate chain and criticized the design of
the trust establishment. In 2015, Lax et al. [56] considered
signed documents containing dynamic content like macros or
JavaScript. The authors highlighted the possibility of changing
the dynamic content without invalidating the signature. 2017
presented the ﬁrst attacks bypassing the cryptographic pro-
tection in PDFs [57]. They successfully created two different
PDF ﬁles resulting in the same SHA-1 digest value. The
scope of their research was the collision resistance of SHA-
1 and the PDF ﬁles were used as a proof-of-concept. In
2018, Domingues and Frade [58] studied the occurrence of
digitally signed and permission-protected PDFs. The authors
found multiple problems related to digitally signed PDFs
like expired or revoked certiﬁcates. No attacks bypassing the
integrity protection of PDFs or the evaluation of previously
discovered attack vectors was made. In 2019, Mladenov et al.
[26] published a comprehensive study regarding the security
of PDF signatures and they discovered three novel attacks and
revealed all current applications vulnerable. In 2021, Mainka
et al. [51] revealed Shadow Attacks on signed PDFs. Their
attack embedded hidden content into a PDF. Once a victim
signs that PDF, they could uncover the hidden content while
keeping the signature valid. In both works [26, 51], the authors
concentrated only on approval signatures and left certiﬁed
documents out of scope.
Polyglot Attacks. In 2005, Buccafurri [59] described a novel
ﬁle format attack where the attacker forces two different views
of the same signed document by switching the ﬁle format
between BMP and HTML [59]. PDF ﬁles are mentioned as a
possible target for such an attacker, but no concrete ideas are
described. Other research combines ﬁle formats of PDF and
image format [60, 61, 62]. Depending on the viewer in use,
different content is shown. He combined a PDF and a JPEG
into a single polyglot ﬁle.
Security Apart from PDF Signatures. In 2005, McIntosh and
Austel [63] described issues in partially signed documents with
the XML rewriting attack. Somorovsky et al. [64] adapted the
attack in 2012 to SAML-based single sign-on.
XII. CONCLUSION
Certiﬁed documents enable complex and highly desired use-
cases. In contrast to approval signatures on PDFs, certiﬁed
documents allow certain changes to the PDF after its certi-
ﬁcation, such as ﬁlling out forms or adding annotations and
further signatures. However, the devil is in the speciﬁcation
details. This 994-page speciﬁcation grants great ﬂexibility
in using these changes. In this paper, we shed light on
the abuse of annotation, forms, and signatures. We misused
their speciﬁed features to change the visible content of a
certiﬁed document and, thereby, introduced two speciﬁcation
ﬂaws:
the Evil Annotation Attack (EAA) and the Sneaky
Signature Attack (SSA). Although neither EAA nor SSA can
change the content itself – it always remains in the PDF –
annotations and signature ﬁelds can be used as an overlay
to add new content. Victims opening the PDF are unable to
distinguish these additions from regular content. And even
worse: annotations can embed high privileged JavaScript code
that is allowed to be added to certain certiﬁed documents.
We proposed countermeasures to prevent the vulnerabilities.
However, the underlying problem remains: the ﬂexibility to
protect the integrity of parts of documents, while allowing to
change other parts, is manifold. The research community has
struggled with similar problems on other data formats, such as
XML or Email, without ﬁnding a satisfying solution so far. In
the case of PDF, the speciﬁcation must be updated to address
these issues.
ACKNOWLEDGMENT
Simon Rohlmann was supported by the German Federal
Ministry of Economics and Technology (BMWi) project “In-
dustrie 4.0 Recht-Testbed” (13I40V002C). This work was sup-
ported by the German Research Foundation (DFG) within the
framework of the Excellence Strategy of the Federal Govern-
ment and the States – EXC 2092 CASA. We acknowledge the
University of Konstanz for supporting Vladislav Mladenov.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
131497
REFERENCES
[1] Adobe
Inc.
(2020,
[Online]. Available:
dam/cc/en/fast-facts/pdfs/fast-facts.pdf
Jun.) Adobe
Facts.
https://www.adobe.com/content/
Fast
[2] European Parliament and Council of
the European Parliament and of
the European
(2014, Jul.) Regulation (EU) No 910/2014
Union.
of
the Council
of 23 July 2014 on electronic identiﬁcation and
trust
the
internal market and repealing Directive 1999/93/EC.
https://eur-lex.europa.eu/legal-
[Online].
content/DE/TXT/?uri=CELEX:32014R0910
transactions
Available:
electronic
services
for
in
[3] United States Government Printing Ofﬁce, “Electronic
signatures in global and national commerce act,” 2000.
[Online]. Available: https://www.govinfo.gov/content/
pkg/PLAW-106publ229/pdf/PLAW-106publ229.pdf
[4] Uniform
Law
Commission.
[Online].
Electronic
Available:
Act.
[5] Adobe
Inc. What
Transactions
https://www.uniformlaws.org/committees/community-
home/librarydocuments?communitykey=2c04b76c-
2b7d-4399-977e-d5876ba7e034&tab=librarydocuments
a Certiﬁed Document
and when should you use
[Online]. Avail-
able: https://blogs.adobe.com/security/2012/03/what-is-
a-certiﬁed-document-and-when-should-you-use-it.html
Approval
https:
[6] Lakehead
Standards.
//www.lakeheadu.ca/sites/default/ﬁles/proﬁle-data/
dcataldo/ElectronicApprovalStandards.pdf
University.
[Online].
Electronic
Available:
it?
is
[7] Bank
(Banca
Italy
SOFTWARE
DOCUMENTS.
of
MANUAL
ENCRYPT
able:
Software manual.pdf?language id=1
USER’S
AND
Avail-
https://www.bancaditalia.it/footer/ﬁrmadigitale/
SIGN
[Online].
d’Italia).
TO
[8] Certipost. Deﬁnitions
[Online].
Available: http://www.certipost.org/wp-content/uploads/
2015/06/DaA CTP TSP V1 0.pdf
and Acronyms.
[9] United
States
(GPO). Authentication.
//www.govinfo.gov/about/authentication
Government
Ofﬁce
[Online]. Available: https:
Publishing
[10] ——. Congressional Bills. [Online]. Available: https:
//www.govinfo.gov/app/collection/bills/
[11] ——. Collection of Certiﬁed Documents by the United
States Government Publishing Ofﬁce (GPO). [Online].
Available: https://www.govinfo.gov/app/
[12] Legislative Assembly of British Columbia. Digitally
Signed PDFs. [Online]. Available: https://www.leg.bc.ca/
content-hansard/Pages/Digital-Signatures.aspx
Standards
and
signature
[13] European Telecommunications
signatures
electronic
(ETSI),
(esi);
part
https://www.etsi.org/deliver/etsi ts/102700 102799/
10277804/01.01.01 60/ts 10277804v010101p.pdf
Institute
infrastructures
proﬁles;
[Online]. Available:
pdf
4,” Tech. Rep.,
“Electronic
advanced
2009.
[14] I. DocuSign. (2018, oct) Docusign validation service.
[Online]. Available: https://validator.docusign.com/
[15] Adobe
Inc. Adobe Acrobat Online
Service.
https://www.adobe.com/acrobat/
[Online]. Available:
online.html?promoid=85665T9B&mv=other
(2018,
[16] E. Commission.
demonstration
webapp v5.3.1. [Online]. Available: https://ec.europa.eu/
cefdigital/wiki/display/CEFDIGITAL/DSS
[17] R. U. T. REGULIERUNGS-GMBH.
oct) Dss
(2018,
oct)
[Online]. Available: https:
-
signatur-pr¨ufung.
Rtr
//www.signatur.rtr.at/de/vd/Pruefung.html
[18] A. Group. (2018, Oct.) Ellis digital signature. [Online].
Available: https://ellis.arhs-spikeseed.com/
[19] E. doo. (2018, Oct.) Vep e-obrazci. [Online]. Available:
[20] A.
https://www.vep.si/validator/forms/document-verify