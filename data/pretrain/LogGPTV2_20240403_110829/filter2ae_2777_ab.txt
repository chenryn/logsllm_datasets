### SAML消息编辑与撤消
在编辑SAML消息时，如果出现错误，使用Ctrl+Z无法撤销更改。此时，可以利用“重置消息”按钮将SAML消息恢复到其原始状态。

### SAML中继器
值得注意的是，SAML Raider插件在Burp Suite的Repeater选项卡中添加了一个新的选项卡。这对于反复修改同一SAML消息非常有用。

## XML签名包装攻击
我们首先讨论XML签名包装（XSW）攻击。这篇[白皮书](https://www.usenix.org/system/files/conference/usenixsecurity12/sec12-final91.pdf)详细介绍了这种攻击，并且也系统地介绍了SAML Raider插件。对于想要深入了解该主题的人来说，这是一份宝贵的资源。

### XSW基本原理
XSW的基本前提是：包含XML签名的文档可以通过两个步骤处理：签名验证和实际应用。通常，这两个步骤应该定位相同的XML元素。然而，在XSW的情况下，攻击者会移动签名内容并替换为受控的XML元素，从而使解析器找到受控元素而不是经过验证的元素。

### XSW攻击类型
接下来，我们将介绍8种不同的XSW攻击方法，这些方法都对应于SAML Raider中的具体攻击选项。了解每种攻击的工作原理以及如何使用SAML Raider执行它们是非常重要的。

#### 简要回顾
在开始之前，让我们回顾一下正常的SAML响应结构。关键组件包括响应及其ID、签名及其引用的URL属性以及断言的主题。

```xml
<samlp:Response ID="_response_id" ...>
  <saml:Assertion ID="_assertion_id" ...>
    ...
  </saml:Assertion>
  <ds:Signature ...>
    <ds:SignedInfo ...>
      <ds:Reference URI="#_assertion_id" .../>
    </ds:SignedInfo>
    ...
  </ds:Signature>
</samlp:Response>
```

当身份提供者（IdP）返回服务提供者（SP）时，我们会收到SAML响应。

### XSW-1
XSW-1针对SAML响应。它复制SAML响应和断言，然后将原始签名作为复制响应的子元素插入。假设XML解析器在签名验证后使用复制的响应而不是原始签名响应。

### XSW-2
XSW-2类似于XSW-1，但使用的签名类型是分离签名，而XSW-1使用封装签名。恶意响应的位置保持不变。

### XSW-3
XSW-3是第一个包装断言元素的例子。SAML Raider将复制的断言作为根响应元素的第一个子元素插入，原始断言成为复制断言的兄弟节点。

### XSW-4
XSW-4类似于XSW-3，但在此情况下，原始断言成为复制断言的子节点。

### XSW-5
XSW-5是第一个断言包装实例，其中签名和原始断言不在三种标准配置中的任何一个。复制的断言封装签名。

### XSW-6
XSW-6将其复制的断言插入与XSW-4和XSW-5相同的位置。复制的断言封装签名，签名又封装原始断言。

### XSW-7
XSW-7插入一个扩展元素，并将复制的断言作为子元素添加。扩展是具有较少限制的架构定义的有效XML元素。这种方法是针对OpenSAML库开发的，用于绕过某些特定对策。

### XSW-8
XSW-8使用另一个限制性较小的XML元素来执行类似XSW-7的攻击模式。这一次，原始断言是限制较少的元素的子元素。

### 使用SAML Raider进行XSW攻击
1. **拦截规则**：转到`Proxy`选项卡，创建或编辑拦截规则以捕获包含SAMLResponse参数的HTTP请求。
2. **拦截SAML响应**：拦截SAML响应后，通过按Ctrl+R或右键单击请求并选择“Send to Repeater”，将请求发送到Burp的Repeater。
3. **保留原始请求**：为了确保每次攻击的一致性，需要保留原始请求并在每次尝试新攻击前重新发送。
4. **执行XSW攻击**：在Repeater中打开SAML Raider选项卡，选择并实现一种XSW攻击，然后点击“Go”发送更改后的SAML响应。
5. **重复过程**：如果需要尝试其他XSW攻击，重新发送原始请求并应用新的攻击方法。

如果在尝试XSW过程中成功访问了服务提供商，请立即注销并重复上述过程。尝试篡改任何可能表示用户标识的参数（例如，将user1更改为admin等）。