User: How to use Docker Compose to configure and manage multiple containers, such as building web applications with Nginx, PHP-FPM and MySQL?
Assistant: Here are the steps to configure and manage multiple containers with Docker Compose: 1. Install Docker and Docker Compose, and create a project directory on the host machine. 2. Create a docker-compose.yml file in that directory that defines the configuration for each container that needs to be started. 3. Use the "services" section in the docker-compose.yml file to define per-container configuration. In this example we will use Nginx, PHP-FPM and MySQL as services: ``` version: '3' services: nginx: image: nginx ports: - "80:80" volumes: - ./nginx:/etc /nginx/conf.d php: image: php:fpm volumes: - ./php:/usr/local/etc/php/conf.d - ./www:/var/www/html mysql: image: mysql:5.7 environment: MYSQL_ROOT_PASSWORD: example volumes: - db_data:/var/lib/mysql volumes: db_data: ``` 4. Create a folder "nginx" in this directory, and create a file named "default.conf" in it Nginx configuration file, which allows Nginx to communicate with PHP-FPM and proxy requests to the PHP container: ``` server { listen 80; server_name localhost; root /var/www/html; index index.php; location / {Try_files $ Uri $ Uri / /Index.php? $in;} local ~ \ .php $ {Fastcgi_PASS PHP: 9000; FastCgi_INDEX INDEX.PHP; FastCgi_PARAM SCRILIPT_FILENAA Me $ document_root $ fastcgi_script_name; include fastcgi_params;} `` `` 5. Create a folder "php" in that directory and inside it create a PHP configuration file called "zzz_custom.ini" that provides custom settings for the PHP container, such as setting the time zone and setting include paths. ``` date.timezone = Asia/Shanghai include_path = ".:/usr/local/lib/php" ``` 6. Create a folder "www" in this directory, and create a file named "index .php", which can be used to test that the web application is running correctly: ``` <?php phpinfo(); ?> ``` 7. Finally, use the docker-compose command to start and manage the composition. Run in the project directory: ``` docker-compose up -d ``` to start all services. Use the -d option to make Docker Compose run containers in the background. You can check that the individual containers started successfully with the following command: ``` docker-compose ps ``` If everything is successful, you can access the web application by visiting http://localhost in your web browser.