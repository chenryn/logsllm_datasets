Test is simple to wait for an element to be visible and then click on it.
During the debugging of the test, I found out that after the #1 retry, the
click action is successful, but during a normal run, this click is very flaky
and only happens like 1-2 times in 5 executions, and the next step fails.
### System info
  * Playwright Version: [v1.30]
  * Operating System: [All, Windows 11, Ubuntu 20, macOS 13.2, etc.]
  * Browser: [All, Chromium, Firefox, WebKit]
  * Other info:
### Source code
  * [ await this.next.waitFor({ state: 'visible' });  
await Promise.all([this.next.click(), this.page.waitForNavigation(),
this.page.waitForResponse(testReg)]);] I provided exact source code that
allows reproducing the issue locally.
**Config file**
    // playwright.config.ts
    const config: PlaywrightTestConfig = {
      fullyParallel: true,
      use: {
        actionTimeout: ACTION_TIMEOUT,
        navigationTimeout: NAVIGATION_TIMEOUT,
        screenshot: 'only-on-failure',
        ignoreHTTPSErrors: true,
      },
    };
**Test file (self-contained)**
    await this.next.waitFor({ state: 'visible' });
        await Promise.all([this.next.click(), this.page.waitForNavigation(), this.page.waitForResponse(testReg)]);
**Expected**
locator.click() action should happen each time without flakiness.
**Actual**
locator.click() action is not happening each time and showing flaky.