192
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:03 UTC from IEEE Xplore.  Restrictions apply. 
Processorpipelinesoccupyonlyaspeciﬁcportionofchiparea.Localclockmanagers(LCMs)asshowninFig-ure6areplacedonlyinthesegmentsofthechipwheretheprocessorpipelineispresent.EmployingCPS,delayvaluesD1andD2aresettoconstantvaluestosatisfythetimingconstraintexplainedearlierinSection4.Thiskindofap-proachsavestheamountofclockingresourcesrequiredforSEMandSTEMschemes,andalsoincreasethenumberofpossbileoperatingfrequenciesavailableforagivensystem.WithCPSscheme,theclocksignalsrequiredarederivedfromasingleclockdistributionnetwork.Figure6showshowCLK1,CLK2andCLK3aregeneratedwithaH-treeclockdistributionnetwork.PROCESSOR PIPELINECLK1Local Clock Manager(LCM)Delay(D2)Delay(D1)CLK3CLK2CLKLCMLCMLCMLCMLCMLCMLCMLCMFigure6:LocalclockgenerationwithsingleclockroutingCASESTUDY:LocalClockGenerationusingbuffers.ForgeneratingclocksignalsrequiredbySEMandSTEMschemeslocally,wepresentapossibleimplementationus-ingbuffers.Weperformthisstudyusing45nmspicemod-elsdistributedbyNangateTechnologies[12].Postlay-outspicemodelscontainingparasiticinformationareused.Areaoverhead,incurredforgeneratingconstantphaseshiftclocks,isanalyzedbyapplyingaloadof128STEMcells.Fromthisstudy,weobservethat,evenfora2.5nsphaseshift,only14clockbuffersareneeded.Thisoverheadismuchlowerthanahavingasecondandthirdclocktreenet-works.StudyresultsaresummarizedinTable3.Table3:NumberofbuffersvsDelayDELAY(ns)BUFFERSDELAY(ns)BUFFERS1.061.582112.5146.Experiments&ResultsInthissection,wepresentourresultsbasedontheex-perimentsconductedonatwostagearithmeticpipelineandaﬁvestageDLXin-orderpipelineprocessor,whereinpipelineregistersareaugmentedwithourfaultdetectionandcorrectioncircuitry.EXPERIMENTALMETHODOLOGY:ToestimatetheperformancegainsandfaulttolerantcapabilitiesofferedbySEMandSTEMtechniques,simulationsarecarriedoutonatwostagearithmeticpipeline.Thiscircuitperformsa64-bitadditionintheﬁrststageanda32-bitmultiplicationinthesecondstage.Adderoutputisfedtothemultiplierasmultiplicandandmultiplier.RTLlevelmodelsaredevel-opedforboththecircuits,andaresynthesizedusingthe45nmOSUstandardcelllibrary[15].Timing-annotatedgatelevelsimulationsarethencarriedoutbyextractingtim-inginformationinstandarddelayformat(SDF),andbackannotatingthemonthedesign.SEEDLFSRN:2NDecoderUnit Under Test(UUT)--Fault Inject LocationInject[1:2N]A~AInjectiFigure7:FaultInjectorFrameworkFigure7illustratesourfaultinjectionmethodology.Theworkingofourfaultinjectorisasfollows:Atotalof2N(Nbeing7inourexperiments)faultinjectiontestnodesthatarespreaduniformlyacrosstheareaofthelogiccir-cuitareselected.TomakesurethatourinjectedfaulthasindeedproducedaSET,wemodiﬁedthecircuitnetlisttoinsertXORgatesatallselectednodes,asshowninFig-ure7.Ifalocationiischosenforfaultinjection,InjectiismadehightoinvertthesignalAdrivenbythefaultin-jectionnodei.Outof2Nlocations,onelocationischosenrandomlyforfaultinjectionatatime,byusingtheoutputofaN-bitrandonnumbergenerator.Forourexperiments,weusedalinearfeedbackshiftregister(LFSR)forgener-atingtheN-bitrandomnumber.FinalfaultlocationisthenselectedwiththehelpofaN:2Ndecoder.RESULTSFORARITHMETICPIPELINE:Forthearith-meticpipeline,fromstatictiminganalysisreports,wees-timatedthevalueofTMAXtobe9ns.Foraggressivelyclockingthedesign,weincreasedthecontaminationdelayto3ns.Areaofthecircuitisincreasedby38%,forﬁxingthecontaminationdelayto3ns.Pulsesofvaryingwidthsrangingfrom500psto900psareinjectedintheunitun-dertest(UUT).Eachcycle,resultsarecheckedforcorrect-nessafterthecomputationisovertoensurethattherecov-erymechanismworks.Wheneverrecoveryistriggered,weloggedtheoccurrenceofanerror.ForevaluatingSTEMtechnique,weperformedourex-perimentsforaseterrorratetargetof1%over10000cycles.Duringruntime,thenumberoferrorsthathappenedduringasamplingintervaliscommunicatedtotheclockcontrol-lingunitattheendofeachinterval.Theclockcontrollingunitmakesadecisionbasedontheerrorrate,duringtheprevioussamplinginterval,andthesettargeterrorrate.Weconsideredalinearcontrolschemeforswitchingclockfre-quencybetweentheworst-caseclockfrequency,FMINandtheoverclockedfrequency,FMAX.Forourdesign,TMINissetat7ns.Thisrangeisdividedinto32steps,andifthe978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
193
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:03 UTC from IEEE Xplore.  Restrictions apply. 
Table4:FaultInjectionResultsforArithmeticPipelineSTEM(MAXOC)STEM(DYNOC)STEM(NOOC)SEMTMRTETransientFaultsTETransientFaultsTransientFaultsTransientFaultsTransientFaultsInjectedDetectedInjectedDetectedInjectedDetectedInjectedDetectedInjectedDetectedRUN1142031432142033421203032520313342026256RUN2142031450122033414202531520283232026268RUN3142031449152032424202530720303112034273errorrateislessthan1%,clockfrequencyisincreasedbyonestepsize,otherwiseitisdecreased.OurfaultinjectionresultsforthearithmeticpipelinearepresentedinTable4.WeinitializedtheLFSRwithdifferentseeds,andthefaultinjectionresultsarepresentedforthreedifferentruns.020406080100120140160180TMRSEMSTEM(NOOC)STEM(DYNOC)STEM(MAXOC)Normalized PerformanceFigure8:NormalizedArithmeticPipelineExecutiontimeWeconﬁguredthearithmeticpipelinedesignedwithSTEMcellstooperateinthreedifferentmodes.Theyarenooverclocking(NOOC),whereinTMAX=TMIN=9ns,maximumoverclocking(MAXOC),whereinTMAX=TMIN=7ns,anddynamicoverclocking(DYNOC),whereinTMAX=9nsandTMIN=7ns.ForDYNOCmode,westartedwithalowfrequencysetting.ForTMRsystem,worst-casefrequency,TMAX,issetat11ns.WeevaluateSEMschemeataconstantclockperiodof9ns.PerformanceimprovementsofferedbybothSEMschemeanddifferentmodesofSTEMareshowninFigure8.Fromthis,wecanseethatDYNOCmodeoffers49%improve-mentoverTMR,whileMAXOCmodeoffers55%improve-ment.PerformanceofNOOCmodeiscomparabletothatofSEMandSEMoffers23%performanceimprovementoverTMR.FromTable4,wecanseethatfaultmaskingrateishighinTMRdesignwhencomparedwithSEMandSTEMdesigns.Thisisbecause,itsoperatingfrequencyin-cludesthephaseshiftsoftheclocksandvoterdelay.Hence,TMRoperateswithalongerclockperiodcomparedtoSEMandSTEM,resultinginmoreSETpulsesattenuatingbeforereachingthelatchingwindow.RESULTSFORDLXPROCESSOR:Wealsosimulatedthreedifferentmicrobenchmarkstoevaluatetheperfor-manceimprovementandfaultcoverageofbothSEMandSTEM(DYNOCmode)schemesonaﬁvestagein-orderpipelinedprocessor.Thisprocessor,implementedin45nmtechnology,isbasedontheDLXinstructionsetarchitec-ture.Firstapplication,RandGen,calculatesasimpleran-domnumbergenerationtogiveanumberbetween0and255.TheMatrixMultapplicationmultipliestwo50x50inte-germatricesandtheBubbleSortprogramimplementsbub-blesortalgorithmon5,000half-wordvariables.Here,wefollowedthesamefaultinjectionstrategyandclockcontrolusedfortwostagearithmeticpipeline.Foreachbenchmark,processorstateischeckedtoverifythecorrectnessofthecomputedresultsaftersimulation.Fromtimingreports,theworst-caseclockperiod,TMAX,isestimatedas6ns.Con-taminationdelayisincreasedby2nsandthesystemoper-atesatanoptimalclockperiodof4ns.Areaoverheadin-curredislessthan15%fortheprocessorbecausesigniﬁcantareaconsumptionofthesystemcomesfromthememorysystem.TheresultsforthethreedifferentbenchmarksarepresentedinFigure9,showingrelativeexecutiontimesforconventionalTMR,SEMandSTEMschemes.Fromthis,wefoundthatSEMoffers26.58%performanceimprove-mentoverTMRandSTEMoffers27.42%overSEM.020406080100120MatrixMultBubbleSortRandGenNormalized Run TimeTMRSEMSTEMFigure9:DLXExecutiontimeforvariousbenchmarks7.RelatedWorkInthepast,manyhardwarefaulttolerancearchitectureshavebeendevelopedbytheresearchcommunity.Theseschemesincurperformanceoverheadevenduringerrorfreeoperationanddonotsupportaggressiveclocking.LEON-FTprocessor[8]usesTMRapproachandtriplicateseveryﬂipﬂopintheprocessorandincursa100%areaoverhead.Redundantmulti-threadingbasedschemesexploitinstruc-tionlevelparallelismtoprovidefaulttolerance[19].Theseapproachestradeperformanceandpowerforachievingfaulttolerancecapabilities.SystemsdesignedwithSEMcellsimprovereliabilityanddoesnotincuranyperformancelossduringnormaloperation.Brute-forceoverclockingdoesnotguaranteereliableex-ecution.TEATIME[18]adjuststhesystemfrequencydy-978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
194
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:03 UTC from IEEE Xplore.  Restrictions apply. 
namically,basedonprocessandenvironmentalvariations,byemployingtimingerroravoidancetechniques.Systemperformancecanbeenhancedfurther,byallowingasys-temtooperateatafrequencythatallowstimingerrorstohappen.Atsuchoverclockedfrequencies,relevanttim-ingerrordetectionandcorrectionschemescanbeusedtoguaranteefunctionalcorrectnessandtoavoidanyabnor-malexecutioninthesystem.Priorwork,Razor[7]andSPRIT3E[16],employtimingerrortolerancetechniquestooperatebeyondworst-caselimits.WhileRazorfocusesonachievinglowerenergyconsumptionbyreducingsupplyvoltageineachpipelinestage,SPRIT3Eimprovesperfor-manceofasuperscalarprocessorbyreliablyoverclockingthepipeline.OthercloselyrelatedworksarePaceline[9]andCPipe[17].Pacelineemploysleader-checkerconﬁg-urationinachipmultiprocessorsystemandtoleratesbothtimingandsofterrors.CPipearchitectureenablesreliableoverclockingandenhancessystemreliabilitythroughcorereplicationandconjoiningthem.SystemsdesignedwithSTEMcellsimprovethereliabilityandperformanceofthesystemwithoutlogicduplication.Table5summarizeshowourschemesdiffersfrompreviouslyproposedtechniques.Table5:ComparingwithotherschemesintermsofLogicDu-plication(LD),SoftErrorProtection(SEP),AggressiveClock-ing(AC)andEnergySavings(ES)DESIGNLDSEPACESRazor×××√SPRIT3E××√×Paceline√√√×CPipe√√√×SEM×√××STEM×√√×8.ConclusionsInthiswork,wedevelopedtwoefﬁcientsofterrormit-igationschemesthatremovetheerrordetectionoverheadfromthecircuitcriticalpath.Oneofourschemes,allowoverclockingandiscapableoftoleratingtimingerrorsaswell.Thesespecializedregistercellsprovidenear100%faulttoleranceagainsttransientfaults.Ourschemestoler-atefasttransientnoisepulses,whichistheprincipalcharac-teristicofSETs.Bothourschemeshavenosigniﬁcantper-formanceoverheadduringerror-freeoperation.SEMcellsarecapableofignoringfalsepositives.Oneofthesalientfeaturesofourapproachliesinthecapabilitytotriggerre-coveryimmediatelyonerrordetection,withoutrequiringanycheckpointing.Anotherkeyfeatureisthatourschemegeneratesclockslocallywithconstantphaseshiftvalues,increasingthepossiblefrequencysettingsforaggressivelyclockeddesigns.Also,ourlocalclockgenerationanddis-tributionminimizestheclockroutingoverheadincurred.Inthefuture,wewillimplementourfaultmitigationschemesincomplexpipelinedsystems,andevaluatethefaultcover-ageandperformanceformorerepresentativebenchmarks.References[1]M.Alam.Reliability-andprocess-variationawaredesignofintegratedcircuits.MicroelectronicsReliability,2008.[2]L.AnghelandM.Nicolaidis.Costreductionandevaluationofatemporaryfaultsdetectingtechnique.InProceedingsoftheconferenceonDesign,automationandtestinEurope,pages591–598.Springer,2000.[3]T.Austin,V.Bertacco,D.Blaauw,andT.Mudge.Oppor-tunitiesandchallengesforbetterthanworst-casedesign.InASP-DAC,volume1,pages2–7,January2005.[4]S.Borkaretal.Parametervariationsandimpactoncir-cuitsandmicroarchitecture.InDAC’03:Proceedingsofthe40thconferenceonDesignautomation,pages338–342,NewYork,NY,USA,2003.ACM.[5]K.Bowmanetal.Impactofdie-to-dieandwithin-dieparam-etervariationsonthethroughputdistributionofmulti-coreprocessors.InProceedingsofthe2007internationalsym-posiumonLowpowerelectronicsanddesign,pages50–55.ACMNewYork,NY,USA,2007.[6]B.Colwell.Thezenofoverclocking.IEEECompututer,37(3):9–12,March2004.[7]D.Ernstetal.Razor:Alow-powerpipelinebasedoncircuit-leveltimingspeculation.InIEEEMicro,pages7–18,2003.[8]J.Gaisler.Aportableandfault-tolerantmicroprocessorbasedonthesparcv8architecture.pages409–415,2002.[9]B.GreskampandJ.Torrellas.Paceline:Improvingsingle-threadperformanceinnanoscalecmpsthroughcoreover-clocking.InPACT,pages213–224,September2007.[10]D.MavisandP.Eaton.Softerrorratemitigationtechniquesformodernmicrocircuits.ReliabilityPhysicsSymposiumProceedings,2002.40thAnnual,pages216–225,2002.[11]A.Meixner,M.E.Bauer,andD.Sorin.Argus:Low-cost,comprehensiveerrordetectioninsimplecores.InMICRO’07,pages210–222.IEEEComputerSociety,2007.[12]Nangate.http://www.nangate.com.[13]B.Narasimhametal.Characterizationofdigitalsingleeventtransientpulse-widthsin130-nmand90-nmcmostechnolo-gies.NuclearScience,IEEETrans.on,54(6):2506–2511,Dec.2007.[14]P.Shivakumaretal.Modelingtheeffectoftechnologytrendsonthesofterrorrateofcombinationallogic.InDSN,pages389–398,June2002.[15]J.Stineetal.FreePDK:AnOpen-SourceVariation-AwareDesignKit.InProc.ofthe2007IEEEIntlConferenceonMicroelectronicSystemsEducation,pages173–174,2007.[16]V.Subramanian,M.Bezdek,N.D.Avirneni,andA.Somani.Superscalarprocessorperformanceenhancementthroughreliabledynamicclockfrequencytuning.InDSN,pages196–205,June2007.[17]V.SubramanianandA.Somani.Conjoinedpipeline:En-hancinghardwarereliabilityandperformancethroughorga-nizedpipelineredundany.InPRDC,Dec2008.[18]A.K.Uht.Uniprocessorperformanceenhancementthroughadaptiveclockfrequencycontrol.IEEETransactionsonComputers,54(2):132–140,February2005.[19]T.Vijaykumar,I.Pomeranz,andK.Cheng.Transient-faultrecoveryusingsimultaneousmultithreading.pages87–98,2002.