of its quadratic behavior, the transistor acts as a mixer that produces
a current at the harmonic of the clock, amplitude modulated by the
data signal [34], as shown in Figure 8. The following development
demonstrates that, in general, squaring the sum of two sine waves
is indeed equivalent to mixing:
(sin(2π f1t) + sin(2π f2t))2 =
2 sin(2π f1t) sin(2π f2t) + sin2(2π f1t) + sin2(2π f2t) =
cos(2π(f1 − f2)t) − cos(2π(f1 + f2)t) + . . .
(3)
In deep-submicron technologies (i.e., gate length of the MOS
transistors smaller than 0.35 µm), the transistor is rather linear in
saturation. However, the activity itself can be seen as a modulated
carrier [34] (Figure 9). In both cases, the modulating activity is
replicated at each of the harmonics of the clock, which act as sepa-
rate carriers. Alternatively, a data signal can couple with the input
of a VCO, leading to frequency modulation of its output (e.g., the
clock) [5, 34].
It has been shown that malicious software can deliberately gen-
erate a carrier and modulate it as described above to transmit data,
thus creating a covert channel. For example, crafted memory ac-
cesses can produce a square wave modulation and broadcast mu-
sic [20], and more complex protocols can be used to furtively send
6
Generation Spectrum "spraying" Propagation Radio transmission FfFfFf64MHz64MHz2.4GHz2.336GHz2.464GHzVDDVINVOUTCLOADItVOUTIsc + IrIsc  Figure 8: Amplitude modulation of a clock harmonic.
Figure 9: Interpretation of a data line as a modulated carrier.
data from air-gapped computers over cellular frequencies [27].
While these covert channels are based on the same principles
of modulation, they invoke the modulating effects on purpose,
whereas the leak we analyze in this paper is an unintended modu-
lation.
5.4 Noise propagation and initial emission
In this part we further detail substrate coupling as the main channel
between the digital and analog domains. We also review how signals
may radiate even before reaching the radio transmitter.
Figure 10 shows a simplified schema of a mixed-signal circuit’s
silicon die. On the left, a digital gate—a CMOS inverter—is the ag-
gressor. On the right, an analog transistor (e.g., part of an amplifier)
is the victim. A few examples of parasitic capacitance, inductance
and resistance are shown as discrete elements over the image.
The main reasons for substrate coupling are impact ionization
currents at the device level, capacitive coupling (junction and in-
terconnect parasitic capacitances) at the circuit level, and induc-
tive/resistive coupling at the chip level [4]. Resistive coupling dom-
inates at low frequency, whereas capacitive and then inductive
coupling appear at higher frequencies [12].
Sharp variations of current in some components lead to direct
electromagnetic emissions, which can be measured with suitable
antennas: H-probes (magnetic field) and E-probes (electric field). In
general, direct emissions are small and localized, and measuring
them requires close proximity or even decapsulation of the chip [34].
Moreover, some of the modulated harmonics of the clock that we
previously described may excite the resonance of some components,
such as data lines, that will act as antennas and radiate. This last
case is commonly referred to in literature as indirect emissions.
Near-field emissions are the basis of EM side channels. The short
range of EM attacks is a direct consequence of the low signal inten-
sity of such emissions.
Figure 10: Schematic illustration of substrate noise cou-
pling (inspired by [4]).
Figure 11: System on Chip including radio using a direct ra-
dio transmitter architecture. Possible noise coupling is indi-
cated with red dashed lines.
5.5 Radio transmission
Screaming channels, as opposed to EM side channels, can be at-
tacked over long distances. This is because the noise propagates
to mixed-signal circuits that compose the radio, where it is mixed,
amplified and broadcast. Modern radio transmitters are typically
composed of:
(1) a digital baseband which converts the data to transmit into
digitally modulated data (I/Q signals),
(2) a digital-to-analog converter (DAC) which converts modu-
lated I/Q data to analog I/Q signals (the baseband signals),
(3) an analog transmitter which will bring baseband signals to
the right frequency and amplifies them.
The way noise couples to the radio transmitter will depend on the
transmitter architecture. There are multiple possible architectures,
and the choice will depend on several factors, such as the semi-
conductor technology used, the difficulty to create a stable high
frequency local oscillator, the acceptable noise levels or simply
the cost. For example, a superheterodyne transmitter performs the
conversion in two stages, first to an intermediate frequency then
to the final frequency, while in a direct transmitter the VCO will
be tuned to the exact frequency at which the signal needs to be
transmitted. Direct transmitters are the most compact and common
ones in modern integrated radio circuits [7]. Figure 11 shows such
a direct radio transmitter and the possible locations where noise
can couple.
7
Ids∝(Vgs-Vth)2 (Saturation) VgsFfFfFfActivityClockharmonic Amplitudemodulation + x=xData line signalCarrier ModulationSubstrate (p+)Well (n-)Tap(n+)D  (p+)S  (p+)SiO2PolySiGTap(p+)D  (n+)S  (n+)SiO2PolySiGDIGITAL VDDDIGITAL GNDOUTTap(p+)D  (n+)S  (n+)ANALOG GNDSiO2PolySiGSubstrate noise INParasitics CryptoCoreCPU CoreIDigital BasebandIBus SumDACVCO0°90°QPAOther logicblocksQDACChip(a) EM leak
(b) Radio leak
Figure 12: Leaks resulting from executing printf on a
Nordic Semiconductor nRF52840.
The noise propagation mechanics described above, a replica of
the digital noise reaches the analog domain. Here it can couple
in various ways and places, in particular with the VCO that is
part of the frequency synthesizer for the carrier [12]. As explained
before, we are mainly interested in the capacitive coupling that
leads to amplitude modulation. In this case, we have two cascaded
modulations. First, the leak modulates the clock harmonics. Second,
the resulting signal propagates to the radio and modulates the
carrier (and its harmonics). The frequencies of the resulting signals
can be predicted as follows:
fradio_leak(p,q,r) = p · fcarrier ± q · fclock ± r · fleak
(4)
where p, q, r are positive integers. Not all multiples are present,
depending on the actual shape of the signals and/or the presence
of components that act as filters. The “noise modulated” carrier
is further mixed with the legitimate baseband signal of the radio
protocol. Then it enters a power amplifier, a balun, and finally
reaches the antenna, where it is broadcast.
Figure 12 shows two measurements that illustrate the prediction
of Equation 4: “copies” of an EM leak can be observed at various
frequencies. In this example, we see an EM leak at the clock fre-
quency, and a radio leak at the third harmonic of the Bluetooth
carrier. The leaks are visible only when the power amplifier of the
transmitter is on, confirming that the digital noise flows through a
screaming channel from the digital to the analog/RF part of the cir-
cuit. Measurements were taken with an off-the-shelf WiFi antenna,
two low noise amplifiers (ZEL 1724LN), and a spectrum analyzer
(Agilent Technologies MXA N9020A) with 6 dB attenuation.
6 ADDITIONAL EXPERIMENTS
While we demonstrated the exploitability of screaming channels
in Section 4, we conducted several experiments to further evaluate
their impact. The main objective in conducting those experiments
is to understand the applicability of screaming-channel attacks in
different scenarios, including different experimental setups, crypto-
graphic implementations, and target devices.
6.1 Key Recovery in different environments
While in Section 4 the experiments are performed in optimal condi-
tions for an attacker, it is important to also evaluate such attacks
under more realistic assumptions. We therefore tested attacks over
several distances, and also in a normal office environment with a
large amount of noise, using commercial of-the-shelf antennas. The
noise in the office environment is caused by different sources, such
as phone calls, WiFi access points, or Bluetooth communications.
Table 1 highlights some cases in which we were able to successfully
recover the full encryption key with a template attack and shows
the number of traces we used for generation of the template and
for the actual attack. A single trace contains the average of 500
measurements of the same encryption. Although these numbers
are specific to our attack implementation and may be improved
by various optimizations, we believe that this data gives a first
intuition about the performance of screaming-channel attacks in
different settings.
Quite naturally, screaming-channel attacks perform very well
in a low-noise environment. The number of traces to perform an
actual attack differs by more than an order of magnitude in the dif-
ferent settings with templates of similar size. The creation of these
templates required us to conduct measurements for approximately
20 h, while the collection of an attack set with less than 1000 traces
barely took 15 min.
6.2 Attacking other AES implementations
In all our previous experiments, we attacked tinyAES , as this is a
simple, straight-forward textbook AES implementation. However,
commodity devices often use more sophisticated cryptographic
implementations, which are also likely to be vulnerable against
screaming channel attacks.
We choose to demonstrate this on mbedTLS , a widely used TLS
implementation which has some counter-measures against remote
timing side-channel attacks [48]. Since the EM attacks are consid-
ered as local attacks, and thus outside the threat model, there are
no countermeasures against them. However, this leaves this imple-
mentation vulnerable to screaming channel attacks as well, which
instead may succeed remotely. 6
To ease the creation of a proof of concept attack, we slightly
modified our attack scenario in this case. Instead of sending modu-
lated data with the device under attack, we were just transmitting
a continuous wave while encrypting, as this allows correlation at-
tacks to succeed easily. We want to stress that, while this seems
less realistic, a successful correlation attack is an important first
step to demonstrate the feasibility of the exploitation of scream-
ing channels. In fact, during the initial development of screaming
channel attacks, we used exactly this methodology and improved
on it. Using this setup, we were able to recover the full key with
less than 40000 traces over a distance of 1m, which is essentially
showing that even well maintained implementations are vulnerable
to screaming channels attacks.
6See for example this questions on the mbedTLS discussion forum and the response
by the main mbedTLS developer: https://tls.mbed.org/discussions/crypto-and-ssl/
aes-implementation-resistant-to-side-channel-analysis-attacks
Table 1: Configurations for attacks with full key recovery
Distance
1 m
3 m
10 m
8
Environment
Office
Laboratory
Laboratory
#Attack Traces
52 589
718
1428
#Template Traces
70 000
70 000
130 000
fclockbluetooth,ch17 ON -73dBm  scanf loop running -66dBm  scanf loop running bluetooth,ch17 ON 3 fbluetooth,ch17+ 3 fclockAdditionally, besides software implementations for cryptographic
primitives, a majority of chips also come with hardware implemen-
tations to enable efficient link-layer encryption of the communi-
cation. While we applied screaming channel attacks so far only
to software implementations likely to be present in application
logic, we also measured their applicability to the hardware AES
implementation of the nRF52832. While we were not able to mount
a successful attack over the air, we were able to obtain some encour-
aging results over a direct coaxial connection. While this doesn’t
effectively break link-layer encryption, we believe that the presence
of screaming channels even for hardware implementations poses a
significant threat.
6.3 Screaming Channels on other devices
We observed the same leak, in a Rigado BDM301 Bluetooth mod-
ule (which, like the RedBear BLE Nano v2 module, is based on a
nRF52832) and on a Nordic Semiconductor nRF52840 Bluetooth
device, indicating that the problem is not only due to one chip or
one module. The BDM301 is interesting because it has a connector
to an external antenna, which may perform better than the compact
antenna directly soldered on the PCB of the BLE Nano v2, leading
to stronger signal. The latter also has a stronger available power
output, and an ARM cryptocell cryptographic module. It would be
interesting to evaluate the potential leakage from this dedicated se-
curity hardware block. We leave the in-depth evaluation and attack
of these devices for future work.
We have also performed some experiments on an ExpressIF
ESP32 Bluetooth and WiFi chip. We were able to observe some
classic EM leaks at low frequency that are correlated with code
execution, and indications of a possible screaming channel leak
on Bluetooth transmissions. However, this leak was weak and not
confirmed with full AES-128 key extraction.
Though we mainly investigated Bluetooth chips, mixed-signal
designs are very common also for WiFi devices. Like Bluetooth the
most commonly used WiFi radio band is at 2.4 GHz. We conducted
some preliminary studies on a Qualcomm Atheros AR9271 WiFi
dongle. We observed the presence of what could be a variation of the
screaming channels described before for the nRF52832 chips. When
the device is on, some components appear around 3 GHz, whose
frequency depends on the receiving channel, and that are most
likely modulated by code execution. More precisely, the frequency
changes regularly when changing the channel, and it appears ampli-
tude modulated by code execution, as different loops show different
components, similarly to what we observed on the nRF52832. Inter-
estingly, this signal is impacted neither by the transmission nor by
the reception of WiFi data. As a consequence, we conjecture that
it is an harmonic of the frequency synthesizer for reception that
leaks into the transmission path (this is called LO reradiation[7]).
In general, this highlights how any carrier modulated by a leak
could be picked by the transmission chain and broadcast, leading
to different flavors of screaming channels. We leave the detailed
exploration of this effect and possibly the extraction of AES-128
traces for future work. Figure 13 summarizes the measurements.
(a) Possible Atheros leak
(b) Confirmed nRF52832 leak
Figure 13: A possible screaming channel carrier on a Qual-
comm Atheros AR9721, with spurs which change depending
on the code being executed. Besides, a confirmed leak on the
nRF52832.
7 DISCUSSION
In this section we discuss the results reported so far. In particu-