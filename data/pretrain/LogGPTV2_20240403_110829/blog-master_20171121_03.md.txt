## PostgreSQL 索引虚拟列 - 表达式索引 - JOIN提速    
### 作者                    
digoal                    
### 日期                    
2017-11-21                   
### 标签                    
PostgreSQL , join , 表达式索引 , 虚拟列索引 , 静态数据 , immutable函数      
----                    
## 背景    
### CASE： 使用虚拟索引，响应时间从2.3秒下降到0.3毫秒  
业务系统在设计时，为了减少数据冗余，提升可读性，通常需要将不同的数据放到不同的表。  
在查询时，通过多表JOIN来补齐需要查询或在过滤的内容。  
比如这样的例子：  
有两张表，分别有1千万和100万数据，当用户查询时，需要补齐那100万表中的某个字段进行过滤。  
```  
create table a (id int, bid int, c1 int, c2 int, c3 int);  
CREATE TABLE b (id int primary key, path text);  
insert into a select id, random()*1000000 , random()*10000000, random()*10000000 , random()*10000000 from generate_series(1,10000000) t(id);  
insert into b select id, md5(random()::text) from generate_series(1,1000000) t(id);  
create index idx_b_1 on b(path text_pattern_ops);  
-- 查询  
select a.* from a left join b on (a.bid=b.id and b.path like 'abc%');  
```  
那么它的性能如何呢？  
```  
postgres=# explain select a.* from a left join b on (a.bid=b.id) where b.path like 'abcde%';  
                                     QUERY PLAN                                       
------------------------------------------------------------------------------------  
 Hash Join  (cost=9.70..289954.61 rows=1000 width=20)  
   Hash Cond: (a.bid = b.id)  
   ->  Seq Scan on a  (cost=0.00..163695.00 rows=10000000 width=20)  
   ->  Hash  (cost=8.45..8.45 rows=100 width=4)  
         ->  Index Scan using idx_b_1 on b  (cost=0.42..8.45 rows=100 width=4)  
               Index Cond: ((path ~>=~ 'abcde'::text) AND (path ~=~ 'abcde'::text) AND (get_path(a.bid) ~  Hash Join  (cost=20835.25..91600.56 rows=31 width=20)  
         Hash Cond: (a.bid = b.id)  
         ->  Parallel Seq Scan on a  (cost=0.00..66820.00 rows=312500 width=20)  
         ->  Hash  (cost=20834.00..20834.00 rows=100 width=4)  
               ->  Seq Scan on b  (cost=0.00..20834.00 rows=100 width=4)  
                     Filter: (path ~~ 'abcde%'::text)  
(8 rows)  
Time: 0.685 ms  
postgres=# select a.* from a left join b on (a.bid=b.id) where b.path like 'abcde%';  
   id    |  bid   |   c1    |   c2    |   c3      
---------+--------+---------+---------+---------  
 5004634 | 633740 | 5420943 | 2448245 | 5719976  
 9751456 | 633740 | 3797867 | 1934900 | 2511398  
 3851817 | 633740 | 8764393 | 3779499 | 2830950  
 4889541 | 633740 | 3892055 | 9470525 |  611262  
 6344344 | 633740 | 5869018 | 9352883 |  636112  
 2433286 | 633740 | 9797626 | 6737349 | 5669893  
 2423577 | 633740 |  846719 | 1720744 |  416608  
 6051251 | 633740 | 8691218 | 7184625 | 5940346  
 5372019 | 633740 | 5402891 | 3441462 | 8194368  
(9 rows)  
Time: 454.405 ms  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")