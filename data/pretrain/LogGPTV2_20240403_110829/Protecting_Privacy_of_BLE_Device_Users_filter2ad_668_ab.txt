Particularly, when the device broadcasts an advertise-
ment message on some channel, it listens on the same
channel for some time (less than 10ms) before switching
to the next channel. It waits for scan requests from clients
wanting to learn more information to which it responds
with a scan response.
Devices that advertise using ADV IND messages are
scannable and connectable; they respond to scan mes-
sages and connection requests. After sending an adver-
tisement message, the device listens for connection re-
quests. The connection request contains the source and
destination addresses along with other connection pa-
rameters. These parameters contain the connection in-
terval, the timeout, and the slave interval. When con-
nected, the device starts frequency hopping according to
a schedule negotiated with the central. If the device (now
peripheral) doesn’t receive any communication from the
central over the period deﬁned by the “timeout interval”,
it drops the connection.
While connected, the device must not broadcast con-
nectable advertisement messages (the ﬁrst two types of
Table 1). It can, however, still broadcast non-connectable
advertising messages to share information (the last two
types of Table 1) with other clients in its transmission
range which still leaks information about the device’s
name, type, and address.
3.4 Privacy and Security Provisions
The BLE speciﬁcation borrows some security provisions
from classical Bluetooth to establish trust relationships
between devices, a process known as pairing. When
the device boots for the ﬁrst time, it will advertise using
ADV IND with its public Bluetooth address. The user
can then pair a smartphone (or other BLE-equipped de-
vice) so that the two devices exchange a secret key that
will enable future secure communication.
1208  25th USENIX Security Symposium 
USENIX Association
4
Once a BLE-equipped device is paired with another
device, it can invoke more privacy and security provi-
sions. The ﬁrst provision is whitelisting, and the device
will only accept connections from devices it has been
paired with before, i.e., those that are whitelisted. Also,
the device might accept connections from any client but
might require higher security levels for some of the ser-
vices it exposes so that only authorized users access sen-
sitive content.
Finally, the BLE speciﬁcation deﬁnes a privacy pro-
vision based on address randomization to prevent device
tracking. When two devices are paired, they exchange an
additional key called the Identity Resolution Key (IRK).
The device uses this key to generate a random address ac-
cording to a timer value set by the manufacturer, which
it will use to advertise. This random address will be re-
solved by the paired device using the same key. As this
random address is supposed to change regularly, curious
parties shouldn’t be able to track a BLE-equipped device.
Devices that don’t utilize address randomization can re-
sort to direct advertising (ADV DIRECT IND) to enable
fast and private reconnections.
These privacy provisions are akin to those proposed
earlier in the context of WiFi networks. Researchers have
long identiﬁed privacy leaks from the consistent identi-
ﬁers broadcasted by wireless devices. They proposed pri-
vacy enhancements that include randomizing or frequent
disposing of MAC addresses [14, 18] and hiding them
through encrypting the entire WiFi packets [13]. These
enhancements require introducing changes for the client
devices.
4 Threats from BLE Devices
While, in theory, BLE’s privacy provisions might be ef-
fective to thwart threats to the user’s privacy, whether or
not various manufacturers and developers properly im-
plement them is an entirely different story. In what fol-
lows, we investigate how the BLE privacy provisions fare
in the wild using a dataset collected in our institution and
using the PhoneLab testbed [27] of SUNY Buffalo.
We developed an Android app that collects the content
of the advertisement messages. We recruited users from
our institution and from the PhoneLab testbed. We didn’t
collect any personal information about the users and thus
obtained non-regulated status from the IRB of our insti-
tution. One could view this study as crowdsourcing the
analysis of BLE devices; instead of purchasing a limited
set of devices and analyzing them, we monitored the be-
havior of a broad range of devices in the wild. Analyzing
the advertisements we collected from 214 different types
of devices (sample of these devices shown in Tables 2
and 3), we observed:
Table 2: A sample of devices with revealing names.
Name
LG LAS751M(27:5D)
JS00002074
ihere
spacestation
Jabra PULSE Smart
DEXCOMRX
Clover Printer 0467
Frances’s Band ea:9d LE
Gear Fit (60ED)
Lyve Home-00228
Matthias-FUSE
Richelle’s Band b2:6a LE
vivosmart #3891203273
KFDNX
OTbeat
Thermos-4653
POWERDRIVER-L10C3
Type
music streaming
digital pen
key ﬁnder
battery/storage extension
smartbulb
Glucose monitor
printer
smartband
activity tracker
photo storage
headset
smartband
activity tracker
key fob
heart rate monitor
Smart Thermos
smart power inverter
Table 3: A sample of devices with consistent addresses
for more than a day.
Name
One
Flex
Zip
Surge
Charge
Forerunner 920
Basis Peak
MB Chronowing
dotti
UP MOVE
GKChain
Gear S2 (0412)
Crazyﬂie
Dropcam
Type
Days observed
activity tracker
activity tracker
activity tracker
activity tracker
activity tracker
smartwatch
sleep tracker
smartwatch
pixel light
ﬁtness tracker
laptop security
smartwatch
quadropter
camera
37
37
37
36
36
36
25
15
7
2
2
2
1
1
1. Two advertisement types (ADV NONCONN IND
and ADV SCAN IND) require a ﬁxed address
which would enable tracking of a mobile target.
2. Devices that are bonded to the users advertise us-
ing ADV IND messages instead of the more private
ADV DIRECT IND.
3. Some devices, albeit not expected to do so, use their
public Bluetooth addresses in advertisements. This
also enables tracking as well as identifying of the
device manufacturer.
4. Other devices implement poor address randomiza-
tion by ﬂipping some bits of the address render-
ing them ineffective against tracking. This has also
been identiﬁed in other studies of BLE devices [22].
5. A large number of devices advertise their names
(Table 2), revealing sensitive information about
them, the user, and the environment. Also, some
of the device names contain personal information
USENIX Association  
25th USENIX Security Symposium  1209
5
or unique identiﬁers that may enable user tracking.
6. Some devices use a consistent Bluetooth address
for long periods of time which renders address ran-
domization ineffective (Table 3). Examples include
various types of wristbands (Fitbit Flex, Forerunner
920, etc.), headsets, smartwatches (Apple Watch or
Samsung Gear), etc. This has also been identiﬁed
by Das et al. [7], where they analyzed the adver-
tisements of BLE-equipped ﬁtness trackers. Das et
al. found the ﬁtness trackers constantly advertising
with consistent (non-private) BLE addresses. In our
experiments, we observed that Flex and One kept
the same address for 37 days, so did One and Charge
for 30 days.
7. Some devices accept connections from non-bonded
devices. This allows access to the services on the
device including the unique manufacturer ID, for in-
stance, which allows for user tracking regardless of
the device’s address. For example, we were able
to connect to various devices and access data from
them without any existing trust relationship, such
as various Fitbit devices (One, Zip Flex, Charge),
Garmin Vivosmart, digital pens, etc. It is worth not-
ing that we connected to these devices under con-
trolled experimental settings, not in the wild. As a
result, an external access control mechanism is nec-
essary to protect such devices.
The above observations indicate that the address ran-
domization, part of the BLE speciﬁcations, fails to pro-
vide the promised privacy protection. Various develop-
ers and manufacturers do not implement it properly; they
rely on public Bluetooth addresses, apply weak random-
ization, or keep a consistent address for a long time. On
the other hand, even if address randomization is properly
implemented, other information in the advertisement or
in the device might contain unique information (device
name or id) that allows for its tracking.
Moreover, data accessed from an advertisement or the
device (once connected) might reveal sensitive informa-
tion about the user or the environment. Through our data
collection campaign, we were able to detect different
types of glucose monitors, wristbands, smart watches,
ﬁtness trackers, sleep monitors, laptops, smartphones,
laptop security locks, security cameras, key trackers,
headsets, etc. Knowing which type of glucose moni-
tor the user is carrying or the type of physical security
system s/he has installed could lead to serious harm to
the user. Finally, an adversary might use such advertise-
ment data as side information to infer more about the
user’s behavior. For example, a temperature sensor con-
stantly reading 60◦F in winter would indicate a vacant
property [41] which may invite in a thief.
BLE-Guardian
Authorized client
BLE-Guardian
attacker
attacker
BLE device
Authorized client
(a) Mobile
BLE device
(b) Vehicle
Figure 2: Example deployments of BLE-Guardian.
5 BLE-Guardian
BLE-Guardian addresses the aforementioned privacy
threats by allowing only authorized clients to dis-
cover, scan, and connect to the user’s BLE-equipped
device. Before delving into the inner workings of
BLE-Guardian, we ﬁrst describe the system and threat
models.
5.1 System and Threat Models
5.1.1 System Model
A typical BLE scenario involves two interacting entities:
the client and the BLE-equipped device. The BLE device
broadcasts advertisements to make other nearby clients
aware of its presence along with the services/information
it is offering. A client can then connect to the device
to access more services/information and control some of
its attributes, in which case it will be the BLE-device’s
gateway to the outside world.
The user’s mobile device (e.g., smartphone or tablet)
acts a gateway where BLE devices are wearable (e.g.,
ﬁtness trackers), or mHealth devices (e.g., Glucose mon-
itor) (Fig. 2a).
In a home environment, the user’s ac-
cess point, PC, or even mobile device, serves as a gate-
way for BLE devices that include smart appliances, we-
bcams, physical security systems, etc. Last but not least,
a smart vehicle or the driver’s mobile device operate as
gateways (Fig. 2b) for the different BLE-equipped sen-
sors in the vehicle, such as tire pressure.2 An interested
reader could consult the work of Rouf et al. [32] for a
discussion on the security and privacy risks of a wireless
tire pressure sensor.
BLE-Guardian leverages the existence of gateways
near the BLE-equipped devices to fend off unauthorized
clients scanning and connecting to them.
It comprises
both hardware and software components. The hardware
2https://my-fobo.com/Product/FOBOTIRE
1210  25th USENIX Security Symposium 
USENIX Association
6
component is an external Bluetooth radio that connects
physically to the gateway, while the software component
is an accompanying application that runs on the gate-
way. BLE-Guardian requires another software compo-
nent to run on the clients willing to discover and con-
nect to the user’s BLE devices. The user, be it an owner
of the BLE-equipped device or a client, interacts with
BLE-Guardian through its software components.
Otherwise,
is running.
5.1.2 Threat Model
BLE-Guardian only trusts the gateway on which
it
the entire operation of
BLE-Guardian will be compromised and will fail to pro-
vide the promised privacy provisions. BLE-Guardian
achieves privacy protection at the device level, so that if it
authorizes a client to access the BLE device, all applica-
tions running on that device will have same access priv-
ileges. This security/privacy dimension is orthogonal to
BLE-Guardian and has been addressed elsewhere [28].
It also requires the user’s BLE device — the one to be
protected — to comply with the BLE speciﬁcations.
BLE-Guardian protects a target BLE-equipped de-
vice against an adversary or an unauthorized/unwanted
device that sniffs the device’s advertisements, issues scan
requests and attempts to connect to the device. The ad-
versary aims to achieve three objectives based on the
BLE devices that the user is deploying:
1. Proﬁling: The adversary aims to obtain an inven-
tory of the user’s devices. Based on this inventory,
the adversary might learn the user’s health condi-
tion, preferences, habits, etc.
2. Tracking: The adversary aims to monitor the user’s
devices to track him/her over time, especially by
exploiting the consistent identiﬁers that the devices
leak as we observed in Section 4.
3. Harming: The adversary aims to access the user’s
BLE device to learn more sensitive information or
even to control it. Both will have severe conse-
quences for the user, especially if a certain device
is known to have some vulnerabilities that allow re-
mote unauthorized access [26].
This adversary can have varying passive and active ca-
pabilities, from curious individuals scanning nearby de-
vices (e.g., using a mobile app), to those with moder-
ate technical knowledge employing commercial sniffers,
all the way to sophisticated adversaries with software-
deﬁned radios.
A passive attacker is capable of snifﬁng all the com-
munications over advertisement channels including those
that fail the CRC check. This includes all commercial
Bluetooth devices and existing Bluetooth sniffers in the
market, such as the Texas Instruments CC2540 chip. The
adversary might possess further capabilities by employ-
ing MIMO receiver that could recover the original signal
from the jammed signal [38], especially in stationary sce-
narios. We refer to this adversary as the strong passive
attacker.
Furthermore, the adversary is capable of injecting traf-
ﬁc into any Bluetooth channel at any given point of time,
but will “play” within the bounds of the BLE speciﬁ-
cations when attempting communication with the BLE
device. This is a reasonable assumption, as the device
won’t otherwise respond to any communication. We
refer to such an adversary as the active attacker. On
the other hand, the attacker might be able to transmit
with higher power than allowed by regulatory bodies, in
which case we refer to as the strong active attacker.
Thus, we have four classes of attackers referring to the
combinations of their passive and active capabilities as
shown in the ﬁrst column of Table 4.
Attacks, including jamming the channel completely,
masquerading as fake devices to trick the users to con-
nect to them, or attacking the bonding process are orthog-
onal to our work. Such attacks have been addressed by
O’Connor and Reeves [29] and Ryan [33]. Finally, once
BLE-Guardian enables the authorized client to connect