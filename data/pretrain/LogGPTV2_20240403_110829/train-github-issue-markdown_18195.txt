 **Context:**
  * Playwright Version: 1.30.0
  * OS: macOS 13.0.1
  * Memory: 216.70 MB / 16.00 GB
  * Node: 18.13.0 - ~/.nix-profile/bin/node
  * Yarn: 1.22.19 - ~/.nix-profile/bin/yarn
  * npm: 8.19.3 - ~/.nix-profile/bin/npm
  * Bash: 3.2.57 - /bin/bash
**Code Snippet**
Help us help you! Put down a short code snippet that illustrates your bug and  
that we can run and debug locally. For example:
      const getPort = (await import("get-port")).default;
**Describe the bug**
I'm trying to import an ES module without converting everything to ESM. This
is possible by using a dynamic import, as TS helpfully points outs when I'm
trying to run the test. But it doesn't work, because I'm assuming the default
TS config doesn't have `module: nodenext`.
The docs tell me that adding a `tsconfig.json` won't help as Playwright only
cares about `paths` and `basePath` options. Is there a way to support
importing ES modules non-invasively, or should I consider manually compiling
the tests? (This affect a lot of packages since many npm package maintainers
switched to supporting only ESM.)