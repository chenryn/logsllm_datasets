User: 请实现一个网络监控工具，可以监控多个主机，并提供实时报警功能。
Assistant: 以下是一个简单的Python代码实现：

1. 监控单个主机的函数：

```python
import subprocess

def ping(host):
    res = subprocess.call(['ping', '-c', '3', host])
    return res == 0
```

这个函数使用了`subprocess`库来执行系统命令`ping`，并检查返回值判断主机是否在线。

2. 监控多个主机的函数：

```python
import time

def watch(hosts, interval=60):
    while True:
        for host in hosts:
            if not ping(host):
                print(f"{host} is down!")
        time.sleep(interval)
```

这个函数接受一个主机列表和监控间隔，不断循环检查每个主机的在线状态。

3. 实时报警功能：

```python
import smtplib
from email.mime.text import MIMEText

def alert(sender, receiver, subject, content):
    # 邮箱配置信息
    smtp_server = "smtp.163.com"
    smtp_port = 25
    username = "yourusername"
    password = "yourpassword"

    # 构造邮件消息
    message = MIMEText(content, "plain", "utf-8")
    message['From'] = sender
    message['To'] = receiver
    message['Subject'] = subject

    # 发送邮件
    try:
        smtp = smtplib.SMTP(smtp_server, smtp_port)
        smtp.login(username, password)
        smtp.sendmail(sender, receiver, message.as_string())
        smtp.quit()
        print("Alert sent!")
    except Exception as e:
        print(f"Failed to send alert: {e}")
```

这个函数使用了`smtplib`库来发送邮件报警。你可以根据实际需要配置邮件信息。

最后，将这三个函数组合起来就可以实现一个简单的网络监控工具了：

```python
hosts = ['192.168.0.1', '192.168.0.2', '192.168.0.3']
sender = "youremail@163.com"
receiver = "admin@example.com"
interval = 60  # 监控间隔为60秒

while True:
    for host in hosts:
        if not ping(host):
            content = f"Host {host} is down!"
            alert(sender, receiver, "Network Alert", content)
    time.sleep(interval)
```

这个代码会不断检查三个主机的在线状态，并在某个主机离线时发送一封邮件报警给管理员。