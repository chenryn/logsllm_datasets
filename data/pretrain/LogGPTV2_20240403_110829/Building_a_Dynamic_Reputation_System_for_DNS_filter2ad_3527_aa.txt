title:Building a Dynamic Reputation System for DNS
author:Manos Antonakakis and
Roberto Perdisci and
David Dagon and
Wenke Lee and
Nick Feamster
Building a Dynamic Reputation System for DNS
Manos Antonakakis, Roberto Perdisci, David Dagon, Wenke Lee, and Nick Feamster
College of Computing, Georgia Institute of Technology,
{manos,rperdisc,dagon,wenke,feamster}@cc.gatech.edu
Abstract
The Domain Name System (DNS) is an essential protocol
used by both legitimate Internet applications and cyber at-
tacks. For example, botnets rely on DNS to support agile com-
mand and control infrastructures. An effective way to disrupt
these attacks is to place malicious domains on a “blocklist”
(or “blacklist”) or to add a ﬁltering rule in a ﬁrewall or net-
work intrusion detection system. To evade such security coun-
termeasures, attackers have used DNS agility, e.g., by using
new domains daily to evade static blacklists and ﬁrewalls. In
this paper we propose Notos, a dynamic reputation system for
DNS. The premise of this system is that malicious, agile use
of DNS has unique characteristics and can be distinguished
from legitimate, professionally provisioned DNS services. No-
tos uses passive DNS query data and analyzes the network
and zone features of domains. It builds models of known legit-
imate domains and malicious domains, and uses these models
to compute a reputation score for a new domain indicative of
whether the domain is malicious or legitimate. We have eval-
uated Notos in a large ISP’s network with DNS trafﬁc from
1.4 million users. Our results show that Notos can identify
malicious domains with high accuracy (true positive rate of
96.8%) and low false positive rate (0.38%), and can identify
these domains weeks or even months before they appear in
public blacklists.
1 Introduction
The Domain Name System (DNS) [12, 13] maps domain
names to IP addresses, and provides a core service to applica-
tions on the Internet. DNS is also used in network security to
distribute IP reputation information, e.g., in the form of DNS-
based Block Lists (DNSBLs) used to ﬁlter spam [18, 5] or
block malicious web pages [26, 14].
Internet-scale attacks often use DNS as well because they
are essentially Internet-scale malicious applications. For ex-
ample, spyware uses anonymously registered domains to ex-
ﬁltrate private information to drop sites. Disposable domains
are used by adware to host malicious or false advertising
content. Botnets make agile use of short-lived domains to
evasively move their command-and-control (C&C) infrastruc-
ture. Fast-ﬂux networks rapidly change DNS records to evade
blacklists and resist take downs [25]. In an attempt to evade
domain name blacklisting, attackers now make very aggres-
sive use of DNS agility. The most common example of an ag-
ile malicious resource is a fast-ﬂux network, but DNS agility
takes many other forms including disposable domains (e.g.,
tens of thousands of randomly generated domain names used
for spam or botnet C&C), domains with dozens of A records or
NS records (in excess of levels recommended by RFCs, in or-
der to resist takedowns), or domains used for only a few hours
of a botnet’s lifetime. Perhaps the best example is the Con-
ﬁcker.C worm [15]. After Conﬁcker.C infects a machine, it
will try to contact its C&C server, chosen at random from a list
of 50,000 possible domain names created every day. Clearly,
the goal of Conﬁcker.C was to frustrate blacklist maintenance
and takedown efforts. Other malware that abuse DNS include
Sinowal (a.k.a. Torpig) [9], Kraken [20], and Srizbi [22]. The
aggressive use of newly registered domain names is seen in
other contexts, such as spam campaigns and malicious ﬂux
networks [25, 19]. This strategy delays takedowns, degrades
the effectiveness of blacklists, and pollutes the Internet’s name
space with unwanted, discarded domains.
In this paper, we study the problem of dynamically assign-
ing reputation scores to new, unknown domains. Our main
goal is to automatically assign a low reputation score to a
domain that is involved in malicious activities, such as mal-
ware spreading, phishing, and spam campaigns. Conversely,
we want to assign a high reputation score to domains that are
used for legitimate purposes. The reputation scores enable dy-
namic domain name blacklists to counter cyber attacks much
more effectively. For example, with static blacklisting, by the
time one has sufﬁcient evidence to put a domain on a black-
list, it typically has been involved in malicious activities for
a signiﬁcant period of time. With dynamic blacklisting our
goal is to decide, even for a new domain, whether it is likely
used for malicious purposes. To this end, we propose Notos,
a system that dynamically assigns reputation scores to domain
names. Our work is based on the observation that agile mali-
cious uses of DNS have unique characteristics, and can be dis-
tinguished from legitimate, professionally provisioned DNS
services. In short, network resources used for malicious and
fraudulent activities inevitably have distinct network charac-
teristics because of their need to evade security countermea-
sures. By identifying and measuring these features, Notos can
assign appropriate reputation scores.
Notos uses historical DNS information collected passively
from multiple recursive DNS resolvers distributed across the
Internet to build a model of how network resources are al-
located and operated for legitimate, professionally run Inter-
net services. Notos also uses information about malicious do-
main names and IP addresses obtained from sources such as
spam-traps, honeynets, and malware analysis services to build
a model of how network resources are typically allocated by
Internet miscreants. With these models, Notos can assign rep-
utation scores to new, previously unseen domain names, there-
fore enabling dynamic blacklisting of unknown malicious do-
main names and IP addresses.
Previous work on dynamic reputation systems mainly fo-
cused on IP reputation [24, 31, 1, 21]. To the best of our
knowledge, our system is the ﬁrst to create a comprehensive
dynamic reputation system around domain names. To summa-
rize, our main contributions are as follows:
• We designed Notos, a dynamic, comprehensive reputa-
tion system for DNS that outputs reputation scores for
domains. We constructed network and zone features that
capture the characteristics of resource provisioning, us-
ages, and management of domains. These features enable
Notos to learn models of how legitimate and malicious
domains are operated, and compute accurate reputation
scores for new domains.
• We implemented a proof-of-concept version of our sys-
tem, and deployed it in a large ISP’s DNS network in
Atlanta, GA and San Jose, CA, USA, where we ob-
served DNS trafﬁc from 1.4 million users. We also used
passive DNS data from Security Information Exchange
(SIE) project [3]. This extensive real-world evaluation
shows Notos can correctly classify new domains with
a low false positive rate (0.38%) and high true positive
rate (96.8%). Notos can detect and assign a low reputa-
tion score to malware- and spam-related domain names
several days or even weeks before they appear on public
blacklists.
Section 2 provides some background on DNS and related
works. Readers familiar with this may skip to Section 3, where
we describe our passive DNS collection strategy and other
whitelist and blacklist inputs. We also describe three fea-
ture extraction modules that measure key network, zone and
evidence-based features. Finally, we describe how these fea-
tures are clustered and incorporated into the ﬁnal reputation
engine. To evaluate the output of Notos, we gathered an ex-
tensive amount of network trace data. Section 4 describes the
data collection process, and Section 5 details the sensitivity of
each module and ﬁnal output.
2 Background and Related Work
DNS is the protocol that resolves a domain name, like
www.example.com, to its corresponding IP address, for ex-
ample 192.0.2.10. To resolve a domain, a host typically
needs to consult a local recursive DNS server (RDNS). A re-
cursive server iteratively discovers which Authoritative Name
Server (ANS) is responsible for each zone. The typical result
of this iterative process is the mapping between the requested
domain name and its current IP addresses.
By aggregating all unique, successfully resolved A-type
DNS answers at the recursive level, one can build a passive
DNS database. This passive DNS (pDNS) database is ef-
fectively the DNS ﬁngerprint of the monitored network and
typically contains unique A-type resource records (RRs)
that were part of monitored DNS answers. A typical RR
for the domain name example.com has the following for-
mat: {example.com. 78366 IN A 192.0.2.10},
which lists the domain name, TTL, class, type, and rdata. For
simplicity, we will refer to an RR in this paper as just a tuple
of the domain name and IP address.
Passive DNS data collection was ﬁrst proposed by Florian
Weimer [27]. His system was among the ﬁrst that appeared
in the DNS community with its primary purpose being the
conversion of historic DNS trafﬁc into an easily accessible
format. Zdrnja et al. [29] with their work in “Passive Mon-
itoring of DNS Anomalies” discuss how pDNS data can be
used for gathering security information from domain names.
Although they acknowledge the possibility of creating a DNS
reputation system based on passive DNS measurement, they
do not quantify a reputation function. Our work uses the idea
of building passive DNS information only as a seed for com-
puting statistical DNS properties for each successful DNS res-
olution. The analysis of these statistical properties is the basic
building block for our dynamic domain name reputation func-
tion. Plonka et al. [17] introduced Treetop, a scalable way to
manage a growing collection of passive DNS data and at the
same time correlate zone and network properties. Their clus-
ter zones are based on different classes of networks (class A,
class B and class C). Treetop differentiates DNS trafﬁc based
on whether it complies with various DNS RFCs and based on
the resolution result. Plonka’s proposed method, despite being
novel and highly efﬁcient, offers limited DNS security infor-
mation and cannot assign reputation scores to records.
Several papers, e.g., Sinha et al. [24] have studied the effec-
tiveness of IP blacklists. Zhang, et al. [31] showed that the hit
rate of highly predictable blacklists (HBLs) decreases signiﬁ-
cantly over a period of time. Our work addresses the dynamic
DNS blacklisting problem that makes it signiﬁcantly differ-
ent from the highly predictable blacklists. Importantly, Notos
does not aim to create IP blacklists. By using properties of the
DNS protocol, Notos can rank a domain name as potentially
malicious or not. Garera et al. [8] discussed “phishing” detec-
tion predominately using properties of the URL and not sta-
tistical observations about the domains or the IP address. The
statistical features used by Holz et al. [10] to detect fast ﬂux
networks are similar to the ones we used in our work, however,
Notos utilizes a more complete collection of network statisti-
cal features and is not limited to fast ﬂux networks detection.
Researchers have attempted to use unique characteristics
of malicious networks to detect sources of malicious activity.
Anderson et al. [1] proposed Spamscatter as the ﬁrst system to
identify and characterize spamming infrastructure by utilizing
layer 7 analysis (i.e., web sites and images in spam). Hao et
al. [21] proposed SNARE, a spatio-temporal reputation engine
for detecting spam messages with very high accuracy and low
false positive rates. The SNARE reputation engine is the ﬁrst
work that utilized statistical network-based features to harvest
information for spam detection. Notos is complementary to
SNARE and Spamscatter, and extends both to not only de-
tect spam, but also identify other malicious activity such as
phishing and malware hosting. Qian et al. [28] present their
work on spam detection using network-based clustering. In
this work, they show that network-based clusters can increase
the accuracy of spam-oriented blacklists. Our work is more
general, since we try to identify various kinds of malicious
domain names. Nevertheless, both works leverage network-
based clustering for identifying malicious activities.
Felegyhazi et al. [7] proposed a DNS reputation blacklist-
ing methodology based on WHOIS observations. Our system
does not use WHOIS information making our approaches com-
plementary by design. Sato et al. [23] proposed a way to ex-
tend current blacklists by observing the co-occurrence of IP
address information. Notos is a more generic approach than
the proposed system by Sato and is not limited to botnet re-
lated domain name detection. Finally, Notos builds the rep-
utation function mainly based upon passive information from
DNS trafﬁc observed in real networks — not trafﬁc observed
from honeypots.
No previous work has tried to assign a dynamic domain
name reputation score for any domain that traverses the edge
of a network. Notos harvests information from multiple
sources—the domain name, its effective zone, the IP address,
the network the IP address belongs to, the Autonomous Sys-
tem (AS) and honeypot analysis. Furthermore, Notos uses
short-lived passive DNS information. Thus, it is difﬁcult for a
malicious domain to dilute its passive DNS footprint.
3 Notos: A Dynamic Reputation System
The goal of the Notos reputation system is to dynamically
assign reputation scores to domain names. Given a domain
name d, we want to assign a low reputation score if d is in-
volved in malicious activities (e.g., if it has been involved with
botnet C&C servers, spam campaigns, malware propagation,
etc.). On the other hand, we want to assign a high reputation
score if d is associated with legitimate Internet services.
Notos’ main source of information is a passive DNS
(pDNS) database, which contains historical information about
domain names and their resolved IPs. Our pDNS database is
constantly updated using real-world DNS trafﬁc from multiple
geographically diverse locations as shown in Figure 1. We col-
lect DNS trafﬁc from two ISP recursive DNS servers (RDNS)
located in Atlanta and San Jose. The ISP nodes witness 30,000
DNS queries/second during peak hours. We also collect DNS
trafﬁc through the Security Information Exchange (SIE) [3],