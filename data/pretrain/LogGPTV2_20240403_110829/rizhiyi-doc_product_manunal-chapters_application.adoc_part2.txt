==== 字段别名
字段别名是字段的替代名称，搜索时可以使用别名来搜索包含该字段的事件。在应用内配置字段别名后，本应用内所有搜索语句，不用再显式输入诸如 | rename dst=fw.dst_ip 的指令。在您导入不同品牌网络设备日志的应用时，可以利用字段别名规则，将不同名称的字段信息归一化，并在相同的仪表盘、告警下运行。
image::images/application-fieldalias.png[]
在应用编辑页面，点击"字段配置"标签切换到字段配置页面，选中"字段别名"配置，打开字段别名列表。您可以点击"添加字段别名"按钮，在弹层中添加字段别名：
image::images/application-fieldalias-add.png[]
一个配置名称下，可以填写多个别名，比如，来自防火墙、交换机、应用防火墙等不同日志类型中的来源地址，都可以别名为一个统一的 src 字段。这样，本应用内所有涉及来源地址的查询，都可以直接写成：
 * | stats count() by src
而不用关心应用在导入新环境后，实际接入的数据到底是哪种日志类型了。从兼容性角度出发，推荐大家在制作应用时，均采用字段别名方式进行查询和统计。
一个字段别名配置如果想在其他应用中使用，可以设置为全局共享。全局共享的字段别名配置在不同应用中就可查看和使用。
==== 字段查找
字段查找会自动运行查找配置。在应用内配置字段查找后，本应用内所有搜索语句，不用再显式输入诸如 | lookup owner "cmdb.csv" on ip=ip 的指令，而可以达到和在字段提取中配置自定义字典类似的功能。
image::images/application-autolookup.png[]
在应用编辑页面，点击"字段配置"标签切换到字段配置页面，选中"字段查找"配置，打开字段查找列表。您可以点击"添加字段查找"按钮，在弹层中添加字段查找：
image::images/application-autolookup-add.png[]
CSV名称选择系统内存在的字典表。
字段查找的配置项包括：
* 事件输入字段，即日志事件详情中包括的字段名称。这里即可以是字段提取字段，也可以说应用内配置的别名、萃取字段。
* 查找输入字段，即 CSV 查找表中包括的字段名称。该字段的值应该可以和事件输入字段的值相等，最终达到关联查找的效果。
* 查找输出字段，即 CSV 查找表中包括的其他字段名称。该字段的值就是准备用来扩展日志原文的信息。
* 事件输出字段，即日志事件详情中准备扩展出的字段名称，其实就是查找输出字段的别名。
如上图所示的配置完成后，在本应用内搜索时，就可以直接对 owner、isp 字段进行过滤和统计。
 appname:apache | where isp=="yidong" | stats count() by owner
在字段过滤均为 AND 式查询的情况下，也可以直接按照 querystring 的形式书写 SPL 语句，比如：
 appname:apache isp:"yidong" | stats count() by owner
字段查找配置同样可以通过全局共享方式提供给其他应用查看和使用。
==== 字段转换
字段转换支持在应用内部相互引用、在SPL的parse指令中引用、在字段萃取中引用。其作用类似字段提取功能中的Grok 正则或片段式正则。
image::images/application-transform.png[]
在应用编辑页面，点击"字段配置"标签切换到字段配置页面，选中"字段转换"配置，打开字段转换列表。您可以点击"添加字段转换"按钮，在弹层中添加字段转换：
image::images/application-transform-add.png[]
字段转换的配置包括两种：
* 正则解析规则：指定本转换采用正则解析方式进行字段转换。以上图为例，我们可以解析得到 datetime、level、eventtype、message 四个字段。
** 来源字段：正则解析的来源字段，一般会是 raw_message。也可以是其他转换规则、别名或查找生成的字段。
** 正则解析：具体解析数据的正则表达式，此处和字段提取不同的是，应用内字段转换必须采用分组捕获的方式书写。
** 格式：对正则表达式中捕获的分组，逐一进行字段命名。其具体格式为：`fieldname::$n`。
* 分隔符规则：
** 来源字段：分割解析的来源字段，一般会是 raw_message。也可以是其他转换规则、别名或查找生成的字段。
** 分隔符：具体分割数据的分割符号。可以填写一个，也可以填写两个。当填写两个时，系统自动认为第一个分隔符是键值对的分割，第二个是键值的分割。比如常见的 KV 解析可填为：` =`，表示用空格分隔键值对，然后用等号分隔字段名称和值。
** 字段列表：分隔符只有一个时，必须填写字段列表。逗号分隔，比如：`f1,f2,f3`。
** 创建多值字段：开启后，若已 存在同名的字段，将新建为多值字段。默认不开启。
** 自动清理字段名称：开启后，将清理美化字段名称，使其只包含: a-zA-Z0-9_。默认不开启。
字段转换规则主要用于字段萃取中引用。您也可以在应用内搜索指令中直接调用。比如：
 * | parse "\[[yotta_level:level]]"
将按照转换名称为 yotta_level 的正则解析获取内容，并赋值给 level 字段。注意：在 parse 指令中调用转换规则会忽略格式定义，无法解析得到多个字段定义。
==== 字段萃取
字段萃取用于在应用内自动提取新字段。包括全局解析模式、字段转换引用等方式。
全局解析模式，即 `kv_mode`，日志易提供对一些常见的结构化日志的自动解析。为兼容日志数据通常会有独立的时间戳前缀特点，自动解析从尾部开始查找数据。自动解析支持的模式包括：
* auto：默认采用 "=" 分割符进行键值对，pair分隔符为 ';,&|\t\n\r ' 的抽取，对于json类型数据也可以实现自动抽取。 
* auto_escaped: 在auto的基础上能够在识别转义
* xml: 从xml格式数据中抽取数据，非xml不支持
* json: 从json格式数据中抽取数据，非json不支持(必须是合法的json数据)
字段萃取，即字段转换引用，可以在这里选择之前定义好的字段转换规则，同一类数据的多条转换规则在此可以同时引用。查询时可以自动得到转换规则中定义的若干字段。当一条字段萃取规则共享到全局后，其中引用的若干转换规则也会自动共享。
image::images/application-extract.png[]
==== 原文解析
如果有独立的解析需求，也可以不定义成字段转换，直接在原文解析中配置正则表达式。注意：这里的正则表达式采用命名捕获方式编写。
image::images/application-extract-list.png[]
原文解析支持通过鼠标划选方式辅助生成。
image::images/application-extract-validate.png[]
通过事件批量验证正则有效后，可以保存。默认保存的规则名称为：extract-_...，用户可以在保存时自行修改。
image::images/application-extract-save.png[]
==== 字段计算
除字段转换和解析以外，还有其他计算需求，都可以通过 eval 函数实现的，比如数值类型转换、if 条件判断、jpath 提取等，可以通过添加字段计算中 eval 新字段的方式实现。
以上几节截图的配置为例，如果没有应用内字段配置，需要输入的 SPL 语句为：
 * | parse "(?\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d,\d\d\d) (?\w+) \[(?\w+)\] (?.*)" | eval searchInitUsedTime=jpath(message,"searchInitUsedTime") | lookup isp "/data/rizhiyi/cmdb.csv" on ip=ip | stats avg(searchInitUsedTime) by isp
但配置完应用内字段配置后，在本应用内做相同的统计，只需要输入：
 * | stats avg(searchInitUsedTime) by isp
<<<