        char *p=strdup (pw); 
        strrev (p); 
        int i=0; 
        do  
        { 
                memcpy (cube, buf+i, 8*8); 
                rotate_all (p, 3); 
                memcpy (buf+i, cube, 8*8); 
                i+=64; 
        } 
        while (i::Preallocate(int) 
.text:64413F79          
call    ds:mfc90_2691 
.text:64413F7F          
mov     [ebp+DstBuf], eax 
.text:64413F82          
mov     edx, [ebp+VarName] 
.text:64413F85          
push    edx              ; VarName 
.text:64413F86         
mov     eax, [ebp+DstSize] 
.text:64413F89         
push    eax              ; DstSize 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
784 
逆向工程权威指南（下册） 
.text:64413F8A          
mov     ecx, [ebp+DstBuf] 
.text:64413F8D          
push    ecx              ; DstBuf 
.text:64413F8E          
lea     edx, [ebp+DstSize] 
.text:64413F91          
push    edx              ; ReturnSize 
.text:64413F92          
call    ds:getenv_s 
.text:64413F98          
add     esp, 10h 
.text:64413F9B          
mov     [ebp+var_8], eax 
.text:64413F9E          
push    0FFFFFFFFh 
.text:64413FA0          
mov     ecx, [ebp+arg_4] 
; demangled name: ATL::CSimpleStringT::ReleaseBuffer(int) 
.text:64413FA3          
call    ds:mfc90_5835 
.text:64413FA9          
cmp     [ebp+var_8], 0 
.text:64413FAD          
jz      short loc_64413FB3 
.text:64413FAF          
xor     eax, eax 
.text:64413FB1          
jmp     short loc_64413FBC 
.text:64413FB3 
.text:64413FB3 loc_64413FB3: 
.text:64413FB3          
mov     ecx, [ebp+arg_4] 
; demangled name: const char* ATL::CSimpleStringT::operator PCXSTR 
.text:64413FB6          
call    ds:mfc90_910 
.text:64413FBC 
.text:64413FBC loc_64413FBC: 
.text:64413FBC 
.text:64413FBC          
mov     esp, ebp 
.text:64413FBE          
mov     esp, ebp 
.text:64413FBF          
retn 
.text:64413FBF chk_env   
endp 