4.3.1策略路由的概念
据带宽和负载动态地决定数据包从哪个出口发出。
衡策略路由，这是一种出现时间较晚的方式，在这种方式下，会自动识别网络带宽及负载，根
内使用的较多。第二种是按源地址进行路由，即根据发出数据包的计算机地址决定选择哪个出
不同选择不同的出口。由于这种按目的地址进行路由的方法特别适合做双线服务器，因此在国
绍Linux系统中的路由及策略路由的使用。
较新的路由概念。策略路由可以根据多种不同的策略，决定数据包通过的路径。本节将简要介
汽车”走的“路”应该是不同的。这样策略路由就兴起了，策略路由是近些年来兴起的一个比
传统路由这种“不问来人情况”的处理策略越来越不适合现代计算机网络，举例来说“行人与
提示
式验证。
无论使用何种策略路由，都必须注意保护连接的持续性，特别是在出口上使用了NAT的
策略路由按实现的方式大体可以分为三类，第一种是按目的地址进行路由，即根据目的地
：并不是所有环境都适合策略路由，首先策略路由与传统路由相比最大的不同是，策略路由
传统的路由是一个指向目标子网的“指路牌”，任何人来“问路”，路由都会明确指向目标。
接下来就可以在子网计算机上访问外部网络了，可以通过 ping 命令、curl 访问网址等方
[root@localhost ]# iptables-t nat-I POSTROUTING-0 eno16777736-j MASQUERADE
#在eno16777736接口上开启地址伪装
[root@localhost~]# systemctl enable iptables
#启用并开启iptables
[root@localhost ~l# systemctl start iptables
资料配置。
由于本书的第3章已介绍过DNS、DHCP 等知识，此处不再费述，读者可自行参考相关
Linux的策略路由
第4章路由管理
---
## Page 104
CentoS7系统管理与运维实战
16
此处不作讨论。由于计算机的IP地址为172.16.45.13，因此表local中的路由条目为来自广播
172.16.45.13
172.16.45.13
发流程，有必要搞清这三张路由表的内容，如【示例4-11】所示。
发，
而“from all”表明所有的数据包都需要经过路由表的匹配。
local、main及default。每条规则前面的数字表示规则的优先级，数值越小表明优先级越高，
rule show”，如【示例4-10】所示。
哪个路由表路由，取决于系统设定的规则。查看系统默认的规则使用命令“ip rule list”或“ip
metric100
多功能将无法实现。数据包转发时，并不需要将所有路由表都搜索计算一次，数据包应该使用
路由器那样简单，本小节将介绍Linux系统中的路由表。
4.3.2
默认情况下Linux并非只有一个路由表，因为如果系统中只有一个路由表，策略路由的许
在Linux系统中，策略路由可以通过路由表来实现，但Linux系统中的路由表并不像普通
172.16.45.0/24 dev eno16777736proto kernel scope 1ink
broadcast 172.16.45.255 dev eno16777736 proto kernel
1ocal 172.16.45.13 dev eno16777736 proto kernel scope host
broadcast 172.16.45.0 dev eno16777736 proto kernel
broadcast 127.0.0.0 dev 1o proto kernel scope link src 127.0.0.1
，如果没有匹配的路由条目再依次使用表main和default。为了搞清Linux系统数据包的转
     #o
default via 172.16.45.1 dev eno16777736 proto static metric 100
[root@localhost
broadcast 127.255.255.255 dev 1o proto kernel
local 127.0.0.0/8 dev 1o proto kernel scope host src 127.0.0.1
#
【示例4-11】
32767:from alllookup default
[root@localhost~]#
由此可以看出【示例4-10】所示的处理过程应该是，内核转发的数据包先使用表local转
【示例4-10】展示的是没有经过修改的Linux系统规则列表，这其中输出了3个路由表
32766:
#
【示例4-10】
【示例4-11】分别输出了3张路由表中的路由条目，其中表default中的路由条目为空，
路由表管理
from all
from all lookup main
~]# ip route list table main
lookup local
scope 1ink src 127.0.0.1
scope link src
src 172.16.45.13
src172.16.45.13
src172.16.45.13
---
## Page 105
其中的相关配置，如【示例4-14】所示。
方法添加路由表，如【示例4-13】所示。
可以查看rt_tables 文件中的说明。除了以上这种编辑文件的方法外，还可使用指定 table ID 的
的别名，此值与优先级无关，优先级将自动分配），通常建议这个值小于253且不重复，具体
中介绍。
有向路由表testl中添加任何路由条目，因此此时路由表testl还为空，如何添加将在下个小节
加了一条规则，规定所有源地址为192.168.19.0/24的包通过test1路由表路由。由于我们并没
表和规则。建立一个路由表和相应的规则如【示例4-12】所示。
表。但了解Linux系统的路由表机制后，接下来我们就可以利用这些机制建立自已需要的路由
子网172.16.45.0/24）和指向默认网关的默认路由。
和目的地为本地接口IP的数据包路由。而表main中的路由条目，很明显是指向本地子网（即
添加 testl路由表时，使用了数字100 作为保留值（保留值为 table ID,test1相当于 table ID
【示例4-12】
删除路由表与以上过程相反，首先需要删除相关的规则，然后再编辑文件rt_tables，删除
[root@localhost -]# ip rule add from 192.168.18.0/24 table 2pref 1500 prohibit
【示例4-13】
在【示例4-12】中，先使用编辑rt_tables的方式添加了一个名为testl的路由表，然后添
#建立一个规则，规定所有来自192.168.19.0/24的数据包都使用路由表test1中的条目路由
#建立一个名为test1的路由表
由于环境并不复杂，系统默认的规则中并没有决定哪些数据包应该使用具体的某个路由
#reserved values
[root@localhost~]#cat/etc/iproute2/rt_tables
[root@localhost ~]#ip rule del table test1
#删除规则和rt_tables中的相关内容
【示例4-14】
以上示例将添加一个tableID为2的路由表，并指定其优先级为1500。
32767:fromall lookup default
32766:
32765:
[root@localhost -]# ip rule list
#列出规则
[root@1ocalhost ]#ip rule add from192.168.19.0/24 table testl
[root@localhost -]# echo 100 test1 >>/etc/iproute2/rt_tables
from all lookupmain
from 192.168.19.0/24
第4章路由管理
6
---
## Page 106
中路由的管理。虽然之前已经介绍过路由管理的相关概念，但与之前的路由管理相比，此处将
4.3.3
CentOS7系统管理与运维实战
6
者可阅读相关文档了解或参考ip-rule的手册页。
选项如下所示：
部分，“ACTION”表示执行的操作。其中“SELECTOR”可以选择数据包的多种选项，常见
过程。添加一条规则使用命令ip，格式如下：
要麻烦一些，
提示
在以上格式中，
从前面几个小节的介绍中不难看出，Linux策略路由管理的两个核心分别是规则与路由表
32767:fromall lookup default
在策略路由中，规则如同一个筛选器，将数据包按预先的设置“送给”路由表，完成路由
1.规则
与“SELECTOR”一样，“ACTION”执行的动作也有多种：
在以上选项中，无疑from和to是最常用的选项。除以上选项外，还有一些其他选项，
0:
[root@localhost
#验证结果
?
?
?
realms：指定数据包分类，此选项主要用于配合tc作流量整形。
table:指明使用的tableID或表名。
pref:指定优先级。
tos：数据包的TOS（TypeofService）域，用于标明数据包的用途。
to：目的地址。
from：源地址。
规则与路由管理
unreachable：丢弃包并返回“Network is unreachable”的错误消息。
nat:透明网关，同NAT相似。
dev：参与设备，具体包括两个选项if和oif，分别表示接收和发送设置匹配。
fwmark:防火墙参数。
系统重启后，规则将失效，如需继续生效可以将设置规则的相关语句写入/etc/rc.local中。
from all lookup local
，因为在策略路由中还需要细化一些参数。
inr.ruhep
“[adddel]”表示添加或删除一条规则，“SELECTOR”表示数据包选择
~]#ip rule list
读
---
## Page 107
虑以私网地址代替，其配置过程仅需将IP地址等信息替换即可，其他并无不同之处。
172.16.34.1，如图4.8所示。
两个出口：第一个是172.16.33.2，对端网关为172.16.33.1；另一个为172.16.34.2，对端网关为
绍策略路由的应用。
4.3.4策略路由应用实例
跳地址，table_name表示路由表名。
如下所示：
止通信，因此使用较少。
ip route add ipaddress via ipaddressl table table_name
需要说明的是出口及对端网关地址应为网络供应商提供的公网IP地址，此处出于安全考
在本小节的例子中，Linux主机连接了两个子网：192.168.1.0/24及192.168.2.0/24，拥有
。在前面几个小节中，介绍了Linux系统的策略路由的运作机制，本小节将通过几个实例介
ip route add 192.168.15.0/24 via 192.168.11.1 table test1
#发往192.168.15.0/24网络的包下-跳地址是192.168.11.1
其中 ipaddress 参数表示网络号，via 选项指定的参数 ipadress1表示网关ip 地址，即下一
ip route add default
#添加到testl的默认路由
【示例4-16】
一些比较常见的路由条目如【示例4-16】所示。
与之前介绍的使用route命令添加路由相比，策略路由的路由管理稍稍复杂一些，其格式
2.路由管理
ip rule add fwmark1 table1
#以防火墙标记为路由依据，需要防火墙使用选项set-mark标记
ip route add to 192.168.101.0/24 table test1
#以目标地址作为路由依据
ip rule add from 192.168.0.0/16 tos 0x10 table test1
#以源地址和tos作为路由依据
ip rule add from 192.168.17.100/32 table test1
ip rule add from 192.168.19.0/24 table test1
#以源地址作为路由依据
【示例4-15】
在【示例4-15】中列举了一些常见的示例。
“ACTION”执行的动作中，table和nat是最常用的，prohibit和unreachable主要用来禁
via 192.168.11.1 table test1
第4章路由管理
6
---
## Page 108
CentOS7系统管理与运维实战
的数据包从出口2进行转发，其配置方法如【示例4-17】所示。
章中的相关内容，此处不再赘述。
仅正确设置IP地址及子网掩码即可，无须设置默认网关。关于这些设置读者可自行参考第
为：192.168.1.52和192.168.2.54，现需要配置这两个地址的流量，使用出口2以获得更快的速
出口2比出口1速度更快，但仅供内部网络中的VIP用户使用。现假定有VIP用户的IP地址
default via 172.16.34.1 dev eno33554984
#为路由表T1添加出口2的默认路由
32766:
32764:from192.168.2.5410okup
[root@localhost-l# ip route list table
32767:
32765:
建立路由表T1
【示例4-17】
在上一步配置中已将所有子网的数据包的转发出口设置为出口1,现在需要配置VIP用户
根据以上信息先配置接口eno16777736，将IP地址，默认网关等信息一并设置，而出口2
如图4.8所示网络结构，现有两个出口，其中互联网出口1为所有内部子网的默认出口，
rootelocalhost
root@localhost
设置VIP用户的数据包使用路由表T1路由
（2）配置策略路由
1.选择出口
（1）配置默认路由
内部子网
from
Erom
内部子网接口2：eno67109432
内部子网接口1：eno50332208
om
all1
192.168,1.52
ip:192.168.1.1
  #
Lookup default
ip rule add
main
l0okup
图4.8策略路由拓扑
LS
from 192.168.2.54/32 table
T1
T1
一
T1
172
互联网出口2：eno33554984
互联网出口1：cno16777736
16
172.16.33.2
T1
互联网
3
---
## Page 109
题，剖析了Linux策略路由的运作机制，并通过实例介绍了策略路由的应用。
相关内容，通过实例介绍了传统路由的设置，数据包转发等内容。对于Linux上的策略路由问
提示
则和路由添加到文件/etc/rc.local中。
区别对待可以修改此值。与之前的设置方法相同，如果需要设置在重启后仍然生效，可以将规
2亦相同。负载均衡的配置方法如【示例4-18】所示。
问题，需要保证连接的持续性。即从互联网出口1进来的数据包返回时也从出口1返回；出口
表T1默认路由的语句写入/etc/rc.local中。
ev
路由是Linux系统中相当重要的内容，本章从实际应用出发主要介绍了Linux系统的路由
在上面的示例中，weight用于指定出口的权重，此处都设置为1表示平等对待，如果需要
eno16777736 weight1 netxthop via 172.16.34.2 dey en033554984 weight 1
16.34.2 tab1e2
#分别添加返回路由
#添加两个路由表tablel和table2
【示例4-18】
负载均衡的配置方法与选择出口的配置方法略有不同，因为负载均衡时需要考虑一个新的
以上是整个配置过程，但以上配置在系统重启后会消失，因此需要添加规则，将添加路由
root@localhost
设置负载均衡策略
root@localhost
root@localhost
[rootelocalhost
16.33.2 tablel
rootelocalhost
root@localhost
rootelocalhost
2.负载均衡
内容可参考4.2节中的相关内容。
本小节仅讨论了策略路由如何实施，并没有包含诸如NAT等问题，关于路由器转发相关
小结
1#echo 200 table2
~1#
1# ip route add default via 172.16.34.1 dev eno33554984
]#ip route add default via 172.1633.1 dev eno16777736
~1# echo 100 tablel
ip route
add default
/etc/iproute2/rttables
/etc/iproute2/rt tables
scope global
next
hop
第4章路由管理
via 172
16.33
7
---
## Page 110
mount192.168.3.101:/nfsshare/nfsshare
如下命令：
RPC服务，不论是服务端还是客户端，NFS是一个文件系统，而RPC负责信息的传输。
计算机上的文件一样。NFS本身可以认为是RPC的一个程序。只要用到NFS的地方都要启动
使用mount命令就可把远程文件系统挂接在自己的文件系统之下，操作远程文件如使用本地
可以在不同的系统间使用，此通信协议设计与主机及操作系统无关。使用NFS时用户端只需
5.1.1NFS简介
机磁盘挂载到本地，读写文件像本地磁盘一样操作。
中不同操作系统的计算机间共享文件，其通信协议定基于TCP/IP协议层，可以将远程的计算
几种网络文件共享方式。
置，最后介绍常用的 FTP 软件的安装与配置。通过本章，用户可以了解Linux系统中常见的
NFS、Samba和FTP。
例如在服务器上，要把远程服务器192.168.3.101上的/nfsshare挂载到本地目录可以执行
NFS在文件传送或信息传送过程中依赖于RPC（RemoteProcedureCall）协议。RPC协议
·本章首先介绍网络文件系统NFS的安装与配置，然后介绍文件服务器Samba的安装与设
NFS（NetworkFile System的简称，即网络文件系统）是一种分布式文件系统，允许网络
当挂载成功后，本地上/nfsshare目录下如果有数据，则原有的数据都不可见，用户看到的
本章主要涉及的知识点有：
类似Windows 中的网络共享功能，Linux系统也提供了多种网络文件共享方法，常见的有
FTP软件的安装与使用
NFS 的安装与使用
Samba的安装与使用
网络文件系统（NFS）
文件共享服务
第5章
---
## Page 111
外可以结合/etc/hosts.allow和/etc/hosts.deny做更精细的权限控制。
毕后位于/etc/init.d目录下。
件和进程。
不同而不同。
5.1.2
是远程主机192.168.3.101上面的/nfsshare目录文件列表。
（2）rpc.nfsd 是基本的 NFS 守护进程，主要功能是控制客户端是否可以登录服务器，
（1）nfs 有的发行版名字叫做nfsserver，