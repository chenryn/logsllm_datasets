### 目标代码
- **DEF CON CHINA 1.0 (2019)**
- **演讲者：Alexandre Borges - 恶意软件与安全研究员**

#### 获取IRA转换器
- 初始化并运行符号执行引擎。

#### DTrace on Windows
- **DTrace**是一个动态跟踪框架，最初在Solaris操作系统上非常高效且有名。
- **DTrace**由太阳微系统公司的Mike Shapiro、Adam Leventhal和Brian Cantrill编写。尽管从2003年开始开发，但直到Solaris 10 03/05才引入。
- 它用于在用户和内核模式下获取系统的实时概览，并理解应用程序和系统的行为。
- 几个月前，DTrace被移植到Windows: [GitHub链接](https://github.com/opendtrace/opendtrace/tree/windows)
- DTrace可以概括为一组分布在内核关键点上的探针（传感器）。每次“激活”探测时，都可以注册并理解应用程序行为。
- 使用DTrace可以更容易地跟踪进程和系统的概要文件、查找哪些系统调用被“调用”、进程写入/读取了多少字节、进程打开了多少文件、跟踪被调用的系统调用序列等。

#### DTrace脚本
- DTrace的脚本使用D语言编写（类似于awk）。
- 探测名称语法：`provider:module:function:name`
  - **provider**: 用于测量系统某一区域的探针库。在Windows上，现有的提供者有syscall、etw、profile、pid和dtrace。
  - **module**: 内核模块，我们在其中找到探针。
  - **function**: 包含探针的函数。
  - **name**: 目标探测的特定名称或描述。
- 关键概念：
  - **predicates**: 用户定义的条件。
  - **actions**: 当探测触发时运行的任务。
  - **aggregations**: 使用聚合函数合并数据。

#### 安装DTrace
- **Windows 10 x64 (build 18342 或更高版本)** 来自Windows内部程序。
- `bcdedit.exe /set dtrace on`
- 下载DTrace包: [下载链接](http://download.microsoft.com/download/B/D/4/BD4B95A5-0B61-4D8F-837C-F889AAD8DAA2/DTrace.amd64.msi)
- `_NT_SYMBOL_PATH=srv*C:\symbols*https://msdl.microsoft.com/download/symbols`
- 重启系统。
- 以管理员身份打开命令提示符。
- 如果使用fbt（函数边界跟踪），则需要附加WinDbg并在调试模式下启动窗口。

#### fbt 提供程序
- 可以使用另一种类型的提供程序“fbt”（函数边界跟踪），它跟踪通过内核中的NTFS执行的系统调用序列。
- 只有当Windows 10附加内核调试器时，才可以使用“fbt”提供程序。

#### Traceext.sys
- **Traceext.sys** 将DTrace使用的功能公开给跟踪。

#### 反虚拟化技术
- 使用反虚拟化技术编写恶意软件样本非常容易，这些技术用于检测VMWare（检查I/O端口通信）、VirtualBox、Parallels、SeaBIOS仿真器、QEMU仿真器、Bochs仿真器、Hyper-V、Innotek VirtualBox、sandbox (Cuckoo)等。
- 检查注册表（OpenSubKey()函数），以尝试找到与客户端中安装的工具相关的条目（HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VirtualMachine\Guest\Parameters）。
- 使用WMI查询Win32_BIOS管理类，以与物理机器中的属性进行交互。
- 我们已经知道了世界上每一种反虚拟化技术，并且所有这些技术都有文档。
- 目前大多数技术都使用WMI，使用WMI可以快速编写C#程序。

#### 示例代码
- 上一张幻灯片的代码没有任何新信息：
  - **ManagementClass class** 代表公共信息模型(CIM)管理类。
  - **Win32_BIOS WMI class** 代表BIOS的属性，该类的成员使您能够使用特定的WMI类路径访问WMI数据。
  - **GetInstances( )** 获取类的所有实例的集合。
  - **GetEnumerator( )** 返回集合的枚举器(IEnumerator)。
  - **IEnumerator.Current( )** 返回相同的对象。
  - **IEnumerator.MoveNext( )** 将枚举数推进到集合的下一个元素。

#### 物理主机 vs 虚拟机
- **物理主机:**
  - `C:\> Test_VM.exe`
  - 属性:
    - 版本: DELL - 6222004
    - 序列号: D5965S1
    - 操作系统: 0
    - 生产商: Dell Inc.
- **客户虚拟机:**
  - `E:\> Test_VM.exe`
  - 属性:
    - 版本: LENOVO - 6040000
    - 序列号: VMware-56 4d 8d c3 a7 c7 e5 2b-39 d6 cc 93 bf 90 28 2d
    - 操作系统: 0
    - 生产商: Phoenix Technologies LTD

#### 温度数据
- 在虚拟机中不支持获取温度数据，因此恶意软件能够知道它们是否在虚拟机上运行。
- **物理主机:**
  - `C:\> VM_Test2.exe`
  - 状态: 好的，程序在物理主机上运行!
- **虚拟机:**
  - `C:\> VM_Test2.exe`
  - 这个程序正在虚拟机中运行!

#### 几点结论
- 在尝试打开现代保护器之前，了解常用的反逆向技术是非常必要的。
- MIASM和METASM是处理和消除复杂代码混淆的出色工具。
- 仿真是理解小而复杂的代码段的一种可能的替代方法。
- DTrace在Solaris上做得很好，请继续关注它可能是Windows操作系统上的一个优秀工具。
- 尽管优秀的研究已经发现了复杂的反虚拟化技术，但仍然存在许多其他简单而智能的技术，所以请当心！

#### 致谢
- DEF CON的工作人员，对我非常友好。
- 你，预留了一些时间来听我的演讲。
- 记住: 人生最美好的是人。

#### 演讲者简介
- **Alexandre Borges**
  - 恶意软件与安全研究员
  - DEFCON USA 2018 演讲者
  - HITB 2019 Amsterdam 演讲者
  - CONFidence Conf. 2019 演讲者
  - BSIDES 2018/2017/2016 演讲者
  - H2HC 2016/2015 演讲者
  - BHACK 2018 演讲者
  - 恶意软件分析、内存分析、数字取证和Rookits领域的顾问、讲师和演讲者
  - The Journal of Digital Forensics, Security and Law 的审稿成员

#### 联系方式
- **Twitter**: @ale_sp_brazil, @blackstormsecbr
- **Website**: http://blackstormsecurity.com
- **LinkedIn**: http://www.linkedin.com/in/aleborges
- **E-mail**: [邮箱地址]

感谢您的聆听！谢谢！