### iOS Performance Benchmarking for Read-Write Operations

To evaluate the performance of read operations immediately following write operations under high load, we conducted a series of benchmarks. These tests were designed to stress the redirection mechanism and assess its impact on system performance. Our findings indicate that the read redirection mechanism does not introduce a significant overhead, contrary to our initial expectations.

In the subsequent sections, we demonstrate that Redemption, our proposed solution, incurs minimal performance overhead when executing realistic workloads for our target audience.

### 7.4 Real-World Application Testing

To measure the performance impact of Redemption, we developed micro-benchmarks that exercise the critical performance paths of the system. Developing these benchmarks and custom test cases required careful consideration of factors that could influence runtime measurements. For instance, automating the testing of desktop applications with graphical user interfaces (GUIs) was a significant challenge. To ensure consistency in testing, we used AutoIt scripts to interact with each application and monitor their performance.

The scripts called the application, waited for 5 seconds for the program window to appear, and then checked if the GUI was the active window. The script then forced the application's window to be on top and started interacting with the edit control and other parts of the programs using the handle returned by the AutoIt script. Each test was repeated 10 times, and the average runtimes are presented in Table 5.

Our experiments showed that the overhead of protecting a system from ransomware was under 6% in every test case, and, on average, running applications took only 2.6% longer to complete their tasks. These results demonstrate that Redemption is efficient and should not detract from the user experience. They also support the conclusion that Redemption can provide real-time protection against ransomware without a significant performance impact. However, if Redemption is deployed on machines with primarily I/O-bound workloads, lower performance should be expected, as indicated by the benchmark in Section 7.3.

### 7.5 Usability Experiments

We conducted a user study with 28 participants to evaluate the usability of Redemption. The study received an IRB waiver from the Office of Human Subject Research Protection (HSRP). The goal was to determine whether the system provides transparent monitoring and to evaluate how end-users respond to visual alerts. Participants were recruited from different majors at the authors' institution and were familiar with text editors and web browsers.

The experiments were conducted using two identical Windows 7 virtual machines, one enabled with Redemption, on two laptops. Controlled Internet access was provided as described in Section 7. Redemption was configured to protect the entire data space generated for the test user account. A ransomware sample was automatically started at a random time to observe user interactions during an attack. After each experiment, the virtual machines were rolled back to their default state, and no personal information was collected from the participants.

Participants were asked to perform three tasks:
1. **Microsoft Word and PowerPoint**: Participants worked with Microsoft Word and PowerPoint on the test machines and rated the difficulty of interaction on a 5-point Likert scale.
2. **AxCrypt Encryption**: Participants were asked to encrypt a folder with AxCrypt, which triggered a visual alert. They were asked to explain their decision to confirm or deny the action.
3. **Internet Search**: While performing a specific search, a ransomware sample was automatically started, triggering another visual alert. Participants were observed to see how they handled the alert.

Results showed that all 28 participants found the experience to be identical to using Microsoft Word and PowerPoint on their own machines, confirming that Redemption is transparent to users. In the second task, 26 participants confirmed the action, while 2 denied it. In the third task, all participants noticed the visual alert and did not confirm the operation, indicating that Redemption's visual alerts are effective in drawing attention and protecting user data.

### 8. Discussion and Limitations

Malware research is an ongoing arms race, and there is always a possibility that malware developers will find ways to bypass detection. We discuss potential evasion scenarios and how Redemption addresses them:

#### Attacking REDEMPTION Monitor
Since every file system access must be submitted to the Windows I/O manager, and Redemption registers callbacks to all I/O requests, bypassing the monitor is not possible in user-mode. Direct disk or volume access is prohibited by Windows, ensuring that any attempt to access files is managed by the operating system.

#### Social Engineering Attacks
Attackers may use social engineering techniques to create fake alert messages and frustrate users into disabling Redemption. While such attacks are possible, they are well-known security issues that affect all endpoint security solutions. Defending against them depends on user security awareness, which is beyond the scope of this work.

#### Attacking the Malice Score Calculation Function
An attacker might target the malice score calculation function to keep the score below the threshold. Techniques like selective content overwrite, low-entropy payloads, and periodic file destruction can lower the score but still trigger suspicion. Even if an attacker uses all these techniques, the system will still detect and report the malicious activity, significantly reducing the effectiveness of the attack.

### 9. Conclusions

In this paper, we proposed Redemption, a generic approach to defend against ransomware on end-hosts. By incorporating Redemption as an augmented service to the operating system, we demonstrated that it is possible to stop ransomware attacks with modest overhead, averaging 2.6% for realistic workloads. Redemption does not require explicit application support or preconditions to protect users against unknown ransomware attacks. We hope that the concepts we propose will be useful for endpoint protection providers.

### Acknowledgements

This work was supported by the National Science Foundation (NSF) under grant CNS-1409738 and Secure Business Austria.

### References

1. Minotaur Analysis - Malware Repository. minotauranalysis.com/
2. Malware Tips - Your Security Advisor. http://malwaretips.com/forums/virus-exchange.104/
3. MalwareBlackList - Online Repository of Malicious URLs. http://www.malwareblacklist.com
4. A brief demo on how Redemption operates (2016). https://www.youtube.com/watch?v=iuEgFVz7a7g
5. AutoIt (2016). https://www.autoitscript.com/site/autoit/
6. IOzone Filesystem Benchmark (2016). www.iozone.org
7. Ajjan, A.: Ransomware: Next-Generation Fake Antivirus (2013). http://www.sophos.com/en-us/medialibrary/PDFs/technicalpapers/SophosRansomwareFakeAntivirus.pdf
8. Hern, A.: Major sites including New York Times and BBC hit By Ransomware Malvertising (2016). https://www.theguardian.com/technology/2016/mar/16/major-sites-new-york-times-bbc-ransomware-malvertising
9. Hern, A.: Ransomware threat on the rise as almost 40 percent of businesses attacked (2016). https://www.theguardian.com/technology/2016/aug/03/ransomware-threat-on-the-rise-as-40-of-businesses-attacked
10. Dalton, A.: Hospital paid 17K ransom to hackers of its computer network (2016). http://bigstory.ap.org/article/d89e63ffea8b46d98583bfe06cf2c5af/hospital-paid-17k-ransom-hackers-its-computer-network
11. BBC News. University pays 20,000 Dollars to ransomware hackers (2016). http://www.bbc.com/news/technology-36478650
12. Osborne, C.: Researchers launch another salvo at CryptXXX ransomware (2016). http://www.zdnet.com/article/researchers-launch-another-salvo-at-cryptxxx-ransomware/
13. Francescani, C.: Ransomware Hackers Blackmail U.S. Police Departments (2016). http://www.cnbc.com/2016/04/26/ransomware-hackers-blackmail-us-police-departments.html
14. Mannion, C.: Three U.S. Hospitals Hit in String of Ransomware Attacks (2016). http://www.nbcnews.com/tech/security/three-u-s-hospitals-hit-string-ransomware-attacks-n544366
15. Continella, A., Guagnelli, A., Zingaro, G., De Pasquale, G., Barenghi, A., Zanero, S., Maggi, F.: ShieldFS: a self-healing, ransomware-aware filesystem. In: Proceedings of the 32nd Annual Conference on Computer Security Applications, pp. 336–347. ACM (2016)
16. Whitcomb, D.: California lawmakers take step toward outlawing ransomware (2016). http://www.reuters.com/article/us-california-ransomware-idUSKCN0X92PA
17. Dell SecureWorks. University of Calgary paid 20K in ransomware attack (2016). http://www.cbc.ca/news/canada/calgary/university-calgary-ransomware-cyberattack-1.3620979
18. Gazet, A.: Comparative analysis of various ransomware virii. J. Comput. Virol. 6, 77–90 (2010)
19. Wolf, G.: 8 High Profile Ransomware Attacks You May Not Have Heard Of (2016). https://www.linkedin.com/pulse/8-high-profile-ransomware-attacks-you-may-have-heard-gregory-wolf
20. Zremski, J.: New York Senator Seeks to Combat Ransomware (2016). http://www.govtech.com/security/New-York-Senator-Seeks-to-Combat-Ransomware.html
21. Kharraz, A., Arshad, S., Mulliner, C., Robertson, W., Kirda, E.: A large-scale, automated approach to detecting ransomware. In: 25th USENIX Security Symposium (2016)
22. Kharraz, A., Robertson, W., Balzarotti, D., Bilge, L., Kirda, E.: Cutting the Gordian Knot: a look under the hood of ransomware attacks. In: Almgren, M., Gulisano, V., Maggi, F. (eds.) DIMVA 2015. LNCS, vol. 9148, pp. 3–24. Springer, Cham (2015). doi:10.1007/978-3-319-20550-2 1
23. Kolodenker, E., Koch, W., Stringhini, G., Egele, M.: PayBreak: defense against cryptographic ransomware. In: Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security, ASIA CCS 2017, pp. 599–611. ACM, New York (2017)
24. Abrams, L.: TeslaCrypt Decrypted: flaw in TeslaCrypt allows Victim’s to Recover their Files (2016). http://www.bleepingcomputer.com/news/security/teslacrypt-decrypted-flaw-in-teslacrypt-allows-victims-to-recover-their-files/
25. Lin, J.: Divergence measures based on the Shannon entropy. IEEE Trans. Inform. Theory 37, 145–151 (1991)
26. Malware Don’t Need Coffee. Guess who’s back again? Cryptowall 3.0 (2015). http://malware.dontneedcoffee.com/2015/01/guess-whos-back-again-cryptowall-30.html
27. Microsoft, Inc. Blocking Direct Write Operations to Volumes and Disks. https://msdn.microsoft.com/en-us/library/windows/hardware/ff551353(v=vs.85).aspx
28. Microsoft, Inc. Protecting Anti-Malware Services (2016). https://msdn.microsoft.com/en-us/library/windows/desktop/dn313124(v=vs.85).aspx
29. Ms. Smith. Kansas Heart Hospital hit with ransomware; attackers demand two ransoms (2016). http://www.networkworld.com/article/3073495/security/kansas-heart-hospital-hit-with-ransomware-paid-but-attackers-demanded-2nd-ransom.html
30. No-More-Ransomware Project. No More Ransomware! (2016). https://www.nomoreransom.org/about-the-project.html
31. Scaife, N., Carter, H., Traynor, P., Butler, K.R.: CryptoLock (and Drop It): stopping ransomware attacks on user data. In: IEEE International Conference on Distributed Computing Systems (ICDCS) (2016)
32. O’Gorman, G., McDonald, G.: Ransomware: A Growing Menace (2012). http://www.symantec.com/connect/blogs/ransomware-growing-menace
33. Symantec, Inc. Internet Security Threat Report (2014). http://www.symantec.com/security-response/publications/threatreport.jsp
34. TrendLabs. An Onslaught of Online Banking Malware and Ransomware (2013). http://apac.trendmicro.com/cloud-content/apac/pdfs/security-intelligence/reports/rpt-cashing-in-on-digital-information.pdf
35. WIRED Magazine. Why Hospitals Are the Perfect Targets for Ransomware (2016). https://www.wired.com/2016/03/ransomware-why-hospitals-are-the-perfect-targets/