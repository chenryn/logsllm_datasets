title:Biometrics-Authenticated Key Exchange for Secure Messaging
author:Mei Wang and
Kun He and
Jing Chen and
Zengpeng Li and
Wei Zhao and
Ruiying Du
Biometrics-Authenticated Key Exchange for Secure Messaging
Mei Wang†
Wuhan University
Wuhan, China
PI:EMAIL
Zengpeng Li‡
Shandong University
Qingdao, China
PI:EMAIL
Kun He∗†
Wuhan University
Wuhan, China
PI:EMAIL
Wei Zhao
Science and Technology on
Communication Security Laboratory
Chengdu, China
PI:EMAIL
Jing Chen∗†
Wuhan University
Wuhan, China
PI:EMAIL
Ruiying Du†
Wuhan University
Wuhan, China
PI:EMAIL
ABSTRACT
Secure messaging heavily relies on a session key negotiated by an
Authenticated Key Exchange (AKE) protocol. However, existing
AKE protocols only verify the existence of a random secret key
(corresponding to a certificated public key) stored in the terminal,
rather than a legal user who uses the messaging application. In
this paper, we propose a Biometrics-Authenticated Key Exchange
(BAKE) framework, in which a secret key is derived from a user’s
biometric characteristics that are not necessary to be stored. To
protect the privacy of users’ biometric characteristics and realize
one-round key exchange, we present an Asymmetric Fuzzy Encap-
sulation Mechanism (AFEM) to encapsulate messages with a public
key derived from a biometric secret key, such that only a similar
secret key can decapsulate them. To manifest the practicality, we
present two AFEM constructions for two types of biometric secret
keys and instantiate them with irises and fingerprints, respectively.
We perform security analysis of BAKE and show its performance
through extensive experiments.
CCS CONCEPTS
• Security and privacy → Biometrics; Security protocols.
KEYWORDS
Authenticated key exchange; biometrics; secure messaging; fuzzy
extractor; verifiable secret sharing
∗Corresponding authors: PI:EMAIL and PI:EMAIL
†Key Laboratory of Aerospace Information Security and Trust Computing, Ministry
of Education, School of Cyber Science and Engineering, Wuhan University
‡School of Cyber Science and Technology, Shandong Univeristy (Qingdao Campus)
and Key Laboratory of Cryptologic Technology and Information Security of Ministry
of Education, Shandong University (Qingdao Campus)
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11. . . $15.00
https://doi.org/10.1145/3460120.3484746
ACM Reference Format:
Mei Wang, Kun He, Jing Chen, Zengpeng Li, Wei Zhao, and Ruiying Du. 2021.
Biometrics-Authenticated Key Exchange for Secure Messaging. In Proceed-
ings of the 2021 ACM SIGSAC Conference on Computer and Communications
Security (CCS ’21), November 15–19, 2021, Virtual Event, Republic of Korea.
ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3460120.3484746
1 INTRODUCTION
Social messaging applications have become a mainstream means of
daily communication due to their convenience. As of January 2021,
three messaging applications, including WhatsApp, Facebook Mes-
senger, and WeChat, have even more than 1.2 billion monthly active
users [46]. Most messaging applications follow a store-and-forward
paradigm, where a service provider passes messages between two
communicating participants [47, 48]. To keep adversaries, including
the service provider, from access to messages during storing and
forwarding, the messages need to be encrypted so that only the
communicating participants can read them. This feature is known
as end-to-end encryption [14, 43], in which participants carry out
Authenticated Key Exchange (AKE) to authenticate each other and
negotiate on a session key [19, 34, 54, 56], and then use this key to
secure messaging.
Although some messaging applications have deployed end-to-
end encryption (e.g., Signal [44], WhatsApp [51], Facebook Mes-
senger [22], and Wire [27]), they all rely on traditional public-key
technology. Roughly speaking, each participant generates a pair
of public and secret keys and publishes the public key to the other
participant. Then, the two communicating participants can execute
a (possibly asynchronous) AKE protocol based on their keys. Unfor-
tunately, those AKE protocols are not suitable for secure messaging
in practice. First, those AKE protocols actually verify the possession
of the secret key rather than the participant herself/himself. Since
the secret key is usually stored in a terminal, an adversary can
launch lunchtime attacks to impersonate that participant without
any knowledge about the secret key [20]. Second, the secret key
may be stolen if an adversary has access to the terminal [8]. More
importantly, messaging applications cannot immediately determine
whether a secret key is cloned [15]. Third, when a participant loses
or replaces the terminal, it is difficult to update the public-secret key
pair timely since every new public key needs to be authenticated
through an out-of-band fashion before enabling it [12].
Session 10B: Crypto and Protocol Security CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2618In this paper, we seek to design a Biometrics-Authenticated Key
Exchange (BAKE) framework, in which a participant generates a
secret key and a corresponding public key based on her/his biomet-
ric characteristics. A straightforward advantage of this framework
is that the session key is negotiated for authenticated users, not
authenticated random public keys. Since the secret key can be gener-
ated based on the biometric characteristics when needed, the secret
key (and biometric characteristics) is never stored in the terminal,
and there is no need to update the secret key and the corresponding
public key when replacing terminals. The main disadvantage is
that biometric characteristics are permanent, which means that the
secret key cannot be updated after it is leaked. Fortunately, stealing
biometric characteristics is not that simple, since many biometric
characteristics (e.g., iris [28] and ear canal dimension [25]) require
dedicated equipment to capture within a very short distance. Even
for stealing fingerprints, an adversary needs to have access to what
the victim has touched. Moreover, messaging applications can de-
feat biometric cloning and replay attacks with well-studied liveness
detection techniques [2, 40, 53, 55, 57].
The major challenge of our design is to protect participants’
biometric characteristics as required under regulations on data pro-
tection, such as General Data Protection Regulation (GDPR), while
tolerating noises in biometric characteristics. We note that a highly
related work, called Fuzzy Asymmetric Password-Authenticated
Key Exchange (fuzzy aPAKE), was proposed by Erwig et al. [21].
However, their solutions have two limitations. First, they require
the communicating participants to run interactive cryptographic
primitives (e.g., the oblivious transfer) many times, which intro-
duces heavy communication overhead and is not suitable for asyn-
chronous scenarios where the participants are not online at the
same time. Second, they require that the biometric representation
should be a rotation-invariant bit string, which means that a sim-
ilar string can be extracted even if the captured biometric image
is rotated. Some biometric representations (e.g., FingerCode [31],
the most common fingerprint representation) do not satisfy the
rotation-invariant property.
To tackle the asynchronous issue, we present a mechanism that
encapsulates messages with the biometric public key of a partic-
ipant, so that only the participant with similar biometric charac-
teristics can obtain them, called Asymmetric Fuzzy Encapsulation
Mechanism (AFEM). With AFEM, we propose a BAKE framework,
whose authenticated key exchange phase is a one-round proto-
col. To solve the rotation-invariant issue, we propose two AFEM
constructions for biometric vector and biometric vector set, respec-
tively. The key insight is that many biometric characteristics are
composed of discrete points, in which we can extract a rotation-
invariant biometric vector set through the relative relationship of
those points.
We conclude our main contributions as follows.
• We introduce a new notion of an asymmetric cryptographic
protocol called biometrics-authenticated key exchange, in which
secret keys are derived from biometric characteristics.
• Considering the asynchronous issue in secure messaging and dif-
ferent types of biometric secret keys, we propose an asymmetric
fuzzy encapsulation mechanism along with two constructions
for biometric vector and biometric vector set, respectively.
Init
Init
KeyGen
KeyGen
AKE
AKE
(cid:40)0
(cid:40)1
Agree on public parameters pp
Agree on public parameters pp
Publish biometric public key pk0
Publish biometric public key pk0
Publish biometric public key pk1
Publish biometric public key pk1
                Request to authenticate and 
                Request to authenticate and 
             negotiate a session key with pk1
             negotiate a session key with pk1
Repond to the request with pk0
Output k0 = k
Output k0 = k
Output k1 = k
Figure 1: System model of biometrics-authenticated key ex-
change for secure messaging.
• We instantiate two biometrics-authenticated key exchange proto-
cols for realistic biometric characteristics: irises and fingerprints.
Specifically, we employ the most common IrisCode [16] for irises
and design a rotation-invariant presentation for fingerprints.
• We conduct experiments on our two instantiations. The running
time of our protocols is less than 0.2s on a realistic iris dataset, and
is less than 0.5s on a realistic fingerprint dataset, which is at least
2000 times faster than fuzzy aPAKE [21]. The communication
cost of our two instantiations is about 12.2KB and 2.7KB, which
is at least 50 times lower than fuzzy aPAKE.
2 PROBLEM STATEMENT
This section briefly describes the system model, the threat model,
and the design goals of biometrics-authenticated key exchange.
2.1 System Model
This work aims to provide a two-party bidirectional Biometrics-
Authenticated Key Exchange (BAKE) for end-to-end secure messag-
ing. As shown in Figure 1, there are two participants in our system:
the sender P0 who initiates a session request and the receiver P1
who responds to this request. We sometimes use the terms “user”
or “terminal” instead of “participant”, where a user refers to a hu-
man who intends to participate in secure messaging and a terminal
refers to a device that is possessed by a user, e.g., a smartphone. A
BAKE protocol is an asymmetric cryptographic primitive, in which
a secret key is derived from the biometric characteristics of a user,
such as an iris or a fingerprint, and a public key is derived from the
corresponding secret key.
Specifically, a BAKE protocol consists of three phases. In the
initialization (Init) phase, two participants agree on a set of public
parameters 𝑝𝑝 to initialize the whole system. In the key generation
(KeyGen) phase, each participant P𝑖 (𝑖 ∈ {0, 1}) generates a public
key 𝑝𝑘𝑖 based on her/his biometric characteristics and sends the
public key to the other participant P1−𝑖 . In the authenticated key
exchange (AKE) phase, the sender P0 makes a request to the receiver
P1 to authenticate each other and negotiate on a session key 𝑘 that
can be used to establish a secure channel. The participant needs
her/his biometric characteristics and the public key of the other
participant as input in this phase. Note that asynchronous scenarios
require the AKE phase should be a one-round protocol.
Session 10B: Crypto and Protocol Security CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea26192.2 Threat Model
As in other AKE protocols [19, 21], we only consider active adver-
saries in the network. Note that an honest-but-curious participant
may try to learn the other participant’s biometric characteristics
from the BAKE protocol. However, this kind of attacks can be im-
plemented by an adversary that only eavesdrops on the network.
More specifically, we require that the participant’s biometric char-
acteristics and the session key are protected under the following
threat model.
• Insecure Channel. We assume that adversaries have complete
control of the channel between two participants in the AKE phase.
That means an adversary can eavesdrop on, tamper with, and
throw away any message in that phase.
• Safeguarded Terminal. We assume that a terminal processes
a user’s biometric characteristics honestly. Specifically, the ter-
minal does not store the captured biometric characteristics or
reveal the biometric characteristics to adversaries.
2.3 Design Goals
Our BAKE protocol should have the following properties.
• Mutual Authentication. Both participants authenticate each
other using biometrics before actual messaging.
• Secure Key Establishment. A consistent session key is agreed
upon between the sender and receiver and is only accessible to
these two participants.
• Biometric Privacy. An adversary, including the communicat-
ing participant, cannot obtain the biometric characteristics of a
participant from the protocol.
• High Performance. Both the computation and communication
overhead of BAKE protocols should be low, which is critical for
constrained environments, e.g., mobile networks.
Note that fuzzy aPAKE [21] also achieves the first three goals and
additionally provides the Universally Composable (UC) security, but
fuzzy aPAKE dissatisfies the last goal since it involves heavy com-
munication and computation overhead. In addition, fuzzy aPAKE
only supports fuzzy vectors (e.g., password) and is not suitable for
asynchronous scenarios.
3 ASYMMETRIC FUZZY ENCAPSULATION
MECHANISM
The core idea of our BAKE constructions is to derive a session
key from random strings that are only accessible to the participant
with correct biometric characteristics. To this end, we propose a
cryptographic primitive called Asymmetric Fuzzy Encapsulation
Mechanism (AFEM), which encapsulates a message with a public
key that is corresponding to a target secret key. Only the participant
who possesses a secret key close to the target secret key can obtain
the random string from the encapsulated message.
We first introduce the syntax of AFEM and define the security
notion for AFEM. Then, we present two constructions for two types
of biometric secret keys.
3.1 Syntax
Let SK be the set of all possible secret keys, S be the set of all
possible plain messages, and 𝑑𝑖𝑠 (·, ·) be a function that calculates
the closeness of two inputs. We assume that the set of all possible
public parameters, the set of all possible public keys, and the set
of all possible encapsulated messages are implicitly defined in the
algorithms.
Definition 3.1 (AFEM). An asymmetric fuzzy encapsulation mech-
anism AFEM is a tuple of four Probabilistic Polynomial Time (PPT)
algorithms (Setup, PubGen, Enc, Dec) that satisfies the following
syntax with the correctness property.
– Setup(1
𝜆, 𝜏) → 𝑝𝑎𝑟 : This setup algorithm takes as input a se-
curity parameter 𝜆 ∈ N and a threshold 𝜏 ∈ N. It generates a
set of public parameters 𝑝𝑎𝑟 , which is an implicit input to the
following algorithms.
– PubGen(𝑠𝑘) → 𝑝𝑘: This public key generation algorithm takes
as input a secret key 𝑠𝑘 ∈ SK. It outputs a public key 𝑝𝑘. (Notably,
this kind of secret key is derived from biometric characteristics.)
– Enc(𝑝𝑘, 𝑠) → 𝑐: This encapsulation algorithm takes as input a
public key 𝑝𝑘 and a plain message 𝑠 ∈ S. It outputs an encapsu-
lated message 𝑐.
– Dec(𝑠𝑘 (cid:4), 𝑐) → 𝑠/⊥: This deterministic decapsulation algorithm
takes as input a secret key 𝑠𝑘 (cid:4) ∈ SK and an encapsulated mes-
sage 𝑐. It returns a plain message 𝑠 if 𝑑𝑖𝑠 (𝑠𝑘, 𝑠𝑘 (cid:4)) < 𝜏 or a failure
symbol ⊥ otherwise.
Correctness. For any 𝜆 ∈ N, any 𝜏 ∈ N, any 𝑝𝑎𝑟 generated by
Setup, any secret key 𝑠𝑘, 𝑠𝑘 (cid:4) ∈ SK, and any plain message 𝑠 ∈ S,
Dec(𝑠𝑘 (cid:4), Enc(PubGen(𝑠𝑘), 𝑠)) = 𝑠 if 𝑑𝑖𝑠 (𝑠𝑘, 𝑠𝑘 (cid:4)) < 𝜏.
Security. The semantic security is defined by an attack game
between a challenger C and an adversary A. Particularly, for any
PPT adversary A, the advantage of A in the following experiment
ExpA (1