T1 = (r1 − 1)re1−1
1
= 4k1(4k1 + 1)e1−1
and
T2 = (r2 − 1)re2−1
2
= (4k2 − 2)(4k2 − 1)e2−1.
Therefore,
T1 − T2 = 2[2k1(4k1 + 1)e1−1 − (2k2 − 1)(4k2 − 1)e2−1].
The ﬁrst term inside the square brackets is even while the
second term is odd. This implies that T1 − T2 = 2m where
m is some odd integer. Therefore we must have
T1 − T2 ≡ 2
(mod 4).
(15)
We will need equation (15) in the proof of Theorem 1 which
establishes the exact period of the XOR-combination of two
-sequences.
Table 1: Truth table for the XOR function
x ⊕ y
x ⊕ y
x ⊕ y
1
0
0
1
1
0
0
1
x ⊕ y
0
1
1
0
3.1 Period of the Output Sequence
1 and q2 = re2
2
Theorem 1. Let q1 = re1
be two prime
powers where e1, e2 > 0, such that 2 is a primitive root mod-
ulo q1 and q2. Let a := (ai)i≥0 and b := (bi)i≥0 be two
strictly periodic binary sequences generated by 2-adic FC-
SRs with connection integers q1 and q2, and c := (ci)i≥0 :=
a ⊕ b := (ai ⊕ bi)i≥0 . Let T1 = (r1 − 1)re1−1
and T2 =
(r2 − 1)re2−1
be the periods of the two sequences a and b
respectively and let L = lcm(T1, T2).
2
1
If r1 ≡ r2 (mod 4), then the sequence c has period L; if
r1 ≡ r2 (mod 4), then the sequence c has period L/2.
Proof. The sequence a is an -sequence and is symmet-
rically complementary. By Fact 5 of Section 1.3 sequence a
has the following properties:
ai = ai+(2n)T1/2
and ai = ai+(2n+1)T1 /2,
i = 0, 1, 2, . . .
(16)
for any ﬁxed integer n ≥ 0. Similarly, for the sequence b we
have
bi = bi+(2n)T2/2
and bi = bi+(2n+1)T2/2,
i = 0, 1, 2, . . .
(17)
for any ﬁxed integer n ≥ 0. Let the period of the sequence
c be denoted by T .
Case 1. r1 ≡ r2 (mod 4)
L
We will prove that T = L/2 by ﬁrst showing that T |
2 and then by proving that L
2 | T . By Lemma 2 when
r1 ≡ r2 (mod 4), both L/T1 and L/T2 are odd. Putting
(2n + 1) = L/T1 and (2n + 1) = L/T2 in equations (16) and
(17) respectively, we have ai = ai+L/2 and bi = bi+L/2 for
every i ≥ 0. That is,
ci = ai ⊕ bi = ai+L/2 ⊕ bi+L/2 = ai+L/2 ⊕ bi+L/2 = ci+L/2.
(18)
Hence T , which is the smallest period of the sequence c,
must divide L/2. On the other hand, if T is the period,
ci = ci+T for every i ≥ 0. This implies that ai = ai+T and
bi = bi+T , or that ai = ai+T and bi = bi+T . In either case,
T is a common multiple of T1/2 and T2/2. Since L/2 is
the least common multiple of T1/2 and T2/2, we must have
L
2 | T . Therefore, T = L/2.
Case 2. r1 ≡ r2 (mod 4)
We will prove that T = L by ﬁrst showing that T | L and
then by showing that L | T . First, note that since L is a
multiple of both T1 as well as T2, we must have ai = ai+L
and bi = bi+L for every i ≥ 0. Hence ci
:= ai ⊕ bi =
ai+L ⊕ bi+L := ci+L for every i ≥ 0, and since T is the
(smallest) period of c, T | L. On the other hand, if T is the
period of the sequence c, then ci = ci+T for every i ≥ 0,
which implies either that ai ⊕ bi = ai+T ⊕ bi+T or that
ai⊕bi = ai+T ⊕bi+T (by Fact 2) for every i ≥ 0. This implies
0
either that ai = ai+T and bi = bi+T , or that ai = ai+T and
bi = bi+T , for all i ≥ 0. Suppose the latter holds. Then T
must be an odd multiple of T1/2 as well as of T2/2. That is,
T = (2m1 +1)T1/2 and T = (2m2 +1)T2/2 for some integers
m1 and m2. Hence, (2m1 + 1)T1/2 = (2m2 + 1)T2/2, which
implies 2m1T1 + T1 = 2m2T2 + T2. Therefore, we must have
T2 −T1 = 2(m1T1 −m2T2) = 0 (mod 4). Since T1 and T2 are
even, this contradicts the fact that if r1 ≡ r2 (mod 4), we
must have T2 −T1 ≡ 2 (mod 4) (by equation 15). Therefore,
T cannot be an odd multiple of T1/2 and T2/2. We consider
the other possibility that T is an even multiple of T1/2 and
T2/2. This implies that T = 2m1T1/2 and T = 2m2T2/2
for some integers m1 and m2. Therefore, T is a common
multiple of both T1 and T2. Since L is the least common
multiple of T1 and T2, it must divide any common multiple
of T1 and T2. Therefore, L | T . Since we have already
proved that T | L, this means that T = L.
We have established that the period T of the FCSR XOR-
combiner is
T =
T1 · T2/ gcd(T1, T2),
T1 · T2/2 · gcd(T1, T2),
if r1 ≡ r2
if r1 ≡ r2
(mod 4)
(mod 4)
(19)
We may say that combining two -sequences using the
XOR function yields a sequence whose period, is approxi-
mately the product of the the individual -sequences. To
maximise the period of the output sequence, r1 and r2 must
be chosen so that they do not belong to the same equivalence
class modulo 4. For proper choices of r1 and r2, the period
of the XOR-combiner can be made as large as T1 · T2/2.
3.2 Complementarity of the Output Sequence
In the next theorem, we prove that if r1 ≡ r2 (mod 4),
the output sequence of the combiner considered in ﬁgure 4
is symmetrically complementary.
Theorem 2. Let all assumptions be the same as in The-
orem 1. If r1 ≡ r2 (mod 4), then the sequence c is symmet-
rically complementary.
Proof. When r1 ≡ r2 (mod 4), L/T1 is odd and L/T2
is even by Lemma 2. Therefore, from Equation (16) and
Equation (17) ai = ai+L/2 and bi = bi+L/2 for every i ≥ 0,
which implies that
ci = ai ⊕ bi = ai+L/2 ⊕ bi+L/2,
(20)
for i = 0, 1, 2, . . . . By Fact 1 of the bit-wise XOR operation
we now have
ci = ai+L/2 ⊕ bi+L/2 = ai+L/2 ⊕ bi+L/2 = ci+L/2,
(21)
for i = 0, 1, 2, . . . . Since we know from Theorem 1 that the
sequence c has period L, equation (21) implies that c is
symmetrically complementary.
3.3 2-adic Complexity of the Output Sequence
Before we prove upper bounds on the 2-adic complexity
of the output sequence, we ﬁrst deﬁne the 2-adic complex-
ity of a binary sequence following Xu’s deﬁnition of N -adic
complexity [23]. Let s := s0s1s2 . . . be an inﬁnite periodic
i=0 si2i = p/q ∈ Z2 be the frac-
binary sequence and let
tion in lowest terms whose 2-adic expansion agrees with the
sequence s.
∞
P
Deﬁnition 1. The 2-adic complexity of the sequence s is
the integer φ(s) = max(log2(|p|), log2(|q|)).

If the sequence s is strictly periodic, then p/q < 0 and |p| <
|q|, so that φ(s) is simply equal to log2(|q|). We determine
an upper bound on the 2-adic complexity of the FCSR XOR-
combiner in the following theorem.
Theorem 3. Let all assumptions be the same as in The-
orem 1. If r1 ≡ r2 (mod 4), the 2-adic complexity of the
output sequence c of the FCSR combiner, denoted by φ(c)
satisﬁes φ(c) < L/2+1 = T /2+1. If r1 ≡ r2 (mod 4), the 2-
adic complexity of the sequence c satisﬁes φ(c) < L/2 = T .
Proof. Let q be the denominator of that fraction ex-
pressed in lowest terms, whose 2-adic expansion agrees with
the sequence c. Let T be the period of the sequence c.
If r1 ≡ r2 (mod 4), then by Theorem 2 and by Fact 6
about FCSR sequences, we must have q | 2T /2 + 1. We also
know by theorem 1 that T = L. Therefore, q | 2L/2 + 1. The
maximum value of q occurs when q = 2L/2 + 1 and in such
a case, φ(c) = log2(q) < L/2 + 1.
If r1 ≡ r2 (mod 4), then the period of the output sequence
c is T = L/2. We know that for any sequence of period T ,
q | 2T − 1 and the maximum value of q for a given T occurs
when q = 2T − 1. Hence, φ(c) = log2(q) < L/2.
Even though it seems to be diﬃcult to prove a lower bound
on the 2-adic complexity of the XOR combiner, numerical
experiments point to a lower bound of L/2−max(φ(a), φ(b))
when r1 ≡ r2 (mod 4). In this context, we point out that
for a ﬁxed pair of connection integers (q1, q2) of the type
considered in this paper, most of the output sequences at-
tain the upper bound on the 2-adic complexity. Numerical
experiments also show that for most such pairs of connection
integers, all output sequences attain the upper bound.
We observe from Theorem 1 and Theorem 3 that for both
cases r1 ≡ r2 (mod 4) and r1 ≡ r2 (mod 4) the period of
the output sequence grows roughly quadratically with the
periods of the input sequences. However, for the case r1 ≡
r2 (mod 4), due to the symmetric complementarity of the
output sequence, its 2-adic complexity bound is half of the
period; for the case r1 ≡ r2 (mod 4) the 2-adic complexity
bound is the period of the output sequence. This leads to
the following design principle:
if what we desire are large
period sequences without regard to 2-adic complexity, then
it is better to choose r1 ≡ r2 (mod 4); however, if we desire
sequences with 2-adic complexity that is large compared to
the period, then it is better to choose r1 ≡ r2 (mod 4).
3.4 Linear Complexity of the Output Sequence
We now turn to the problem of determining an upper
bound on the linear complexity of the FCSR combiner of
ﬁgure 4.
Theorem 4. Let all assumptions be the same as in The-
orem 1. The linear complexity of the sequence c is at most
(T1 + T2)/2 + 2.
Proof. From the result of Xu [23, Corollary 2.5.2] spe-
cialised to the 2-adic case, we know that the linear com-
plexity of the individual -sequences are upper bound by
T1/2 + 1 and T2/2 + 1, where Ti’s are the periods of the
individual -sequences. From the work of Massey [17] it is
well-known that the linear complexity of a linear combina-
tion of sequences is at most the sum of their linear complex-
ities. Applying this result we see that the linear complexity
of the FCSR XOR combiner is at most the sum of the linear
complexities of the individual FCSRs.
4. CONCLUSIONS
We have determined the period of a combiner that uses
two 2-adic -sequences and the XOR function. We have
shown that a particular sub-family of these sequences pos-
sesses the important property of symmetric complementar-
ity. We used this fact to derive upper bounds on the lin-
ear complexity and 2-adic complexity of such combiner se-
quences.
We are currently working towards extending our proofs
to the case where the number of FCSRs in the combiner is
arbitrary and when the combining function is a more gen-
eral boolean function. Several questions regarding FCSR
combiners remain unanswered. What are the lower bounds
on the period and 2-adic complexity of the sums and prod-
ucts of FCSR sequences? Which families of combining func-
tions maximise period and 2-adic complexity? Which fami-
lies of combining functions increase the resistance of FCSR
sequences to known cryptanalytic attacks?
5. ACKNOWLEDGEMENTS
The ﬁrst author wishes to gratefully acknowledge the gen-
erous support of the AU-KBC Research Centre in awarding
him a research fellowship during the period July 2002 to
June 2005.
6. REFERENCES
[1] F. Arnault and T.-P. Berger. Design of new
pseudorandom generators based on a ﬁltered fcsr
automaton. In Proceedings of the SASC Workshop,
pages 109–120, October 2004.
[2] F. Arnault and T.-P. Berger. F-FCSR: Design of a
new class of stream ciphers. In H. Gilbert and
H. Handschuh, editors, 12th. International Workshop,
Fast Software Encryption 2005, Paris, France. Lecture
Notes in Computer Science 3557, pages 83–97.
Springer, February 2005.
[3] F. Arnault, T.-P. Berger, and A. Necer. A new class of
stream ciphers combining LFSR and FCSR
architectures. In A. Menezes and P. Sarkar, editors,
Progress in Cryptology – INDOCRYPT 2002, Lecture
Notes in Computer Science, volume 2551, pages
22–33. Springer, New York, 2002.
[4] H. Beker and F. Piper. Cipher Systems. John Wiley,
1982.
[5] R. Couture and P. L’Ecuyer. Distribution properties
of multiply-with-carry random number generators.
Mathematics of Computation, 66:591–607, 1997.
[6] B. M. M. de Weger. Approximation lattices of p-adic
numbers. Journal of Number Theory, 24:70–88, 1986.
[7] C. F. Gauß. Disquisitiones Arithmeticæ. (Reprinted
English translation, Yale University Press, New
Haven, 1966), 1801.
[8] S. W. Golomb. Shift Register Sequences. Holden-Day,
San Francisco, 1967.
[9] M. Goresky and A. Klapper. Large period nearly de
Bruijn FCSR sequences. In Advances in Cryptology –
EUROCRYPT’95, Lecture Notes in Computer Science,
volume 921, pages 263–273. Springer, New York, 1995.
[10] F. Gouvˆea. p-adic Numbers: An Introduction.
Springer-Verlag, 2nd. edition, 2003.
[11] G. H. Hardy and E. M. Wright. An Introduction to the
Theory of Numbers. Oxford University Press, 5th
edition, 1979.
[12] A. Klapper and M. Goresky. 2-adic shift registers. In
Fast Software Encryption, Cambridge Security
Workshop, Lecture Notes in Computer Science,
volume 809. Springer-Verlag, December 1993.
[13] A. Klapper and M. Goresky. Feedback shift registers,
2-adic span and combiners with memory. Journal of
Cryptology, 10:111–147, 1997.
[14] N. Koblitz. p-adic Numbers, p-adic Analysis, and Zeta
Functions. Springer-Verlag, New York, GTM Vol. 58
edition, 1984.
[15] K. Mahler. Introduction to p-adic Numbers and their
Functions. Cambridge University Press, 1973.
[16] G. Marsaglia. yet another rng. Posted to the Usenet
newsgroup sci.stat.math, August 1, 1994.
[17] J. L. Massey. Shift-register synthesis and BCH
decoding. IEEE Transactions on Information Theory,
IT-15:122–127, January 1969.
[18] M. Mittelbach and A. Finger. Investigation of
FCSR-based pseudorandom sequence generators for
stream ciphers. In Proceedings of the 3rd. International
Conference on Networking, February 2004.
[19] R. A. Rueppel. Analysis and Design of Stream
Ciphers. Springer-Verlag, 1986.
[20] B. Schneier. Applied Cryptography. John Wiley &
Sons, 2nd edition, 1996.
[21] T. Siegenthaler. Correlation immunity of nonlinear
combining functions for cryptographic applications.
IEEE Transactions on Information Theory,
IT-30:776–780, 1984.
[22] Z. Tasheva, B. Bedzhev, and B. Stoyanov. N -adic
summation shrinking generator – basic properties and
empirical evidences. Submitted to the IACR e-print
archive, 2004.
[23] J. Xu. Stream Cipher Analysis Based on FCSRs.
Ph.D. dissertation, University of Kentucky, Lexington,
Kentucky, 2000.
