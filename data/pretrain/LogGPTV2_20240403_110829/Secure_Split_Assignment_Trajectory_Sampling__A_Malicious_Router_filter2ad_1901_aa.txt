title:Secure Split Assignment Trajectory Sampling: A Malicious Router
Detection System
author:Sihyung Lee and
Tina Wong and
Hyong S. Kim
Secure Split Assignment Trajectory Sampling: 
A Malicious Router Detection System 
Sihyung Lee 
Tina Wong 
ECE Department and CyLab 
Camegie Mellon University 
Hyong S. Kim 
sihyunglee @ cmu.edu, tinawong @ cmu.edu, kim @ ece.cmu.edu 
Abstract 
Routing infrastructure plays a vital mle in the Internet, and 
attacks on routers can be  damaging.  Compromised routers 
can drop, modih, mislforward or reorder valid packets. Exist- 
ing proposals for  secure forwarding  require substantial com- 
putational overhead and additional capabilities at routers. We 
propose Secure Split Assignment  Trajectory Sampling (SATS), 
a  system  that  detects  malicious  routers  on  the  data  plane. 
SATS locates a set of suspicious routers when packets do not 
follow  their predicted paths.  It works with a traffic measure- 
ment platform  using packet  sampling,  has  low  overhead on 
routers and  is applicable  to high-speed networks.  Different 
subsets ofpackets are sampled over dzyerent groups of routers 
to ensure that an attacker cannot completely evade detection. 
Our evaluation shows that SATS can signzjicantly limit a ma- 
licious router's harm to a small portion of traffic in a network. 
1. Introduction 
Routers are crucial to the Internet.  Unfortunately, attacks 
aimed directly at routers are prevalent and on the rise.  Ac- 
cording to CERT/CC, there are lists of thousands of compro- 
mised routers being traded underground [5]. There are hacker 
tools, openly available on the Web, to scan, identify and even- 
tually exploit routers  with  weak passwords and default  set- 
tings.  More recently, Lynn  [I41 presented Cisco IOS's  se- 
curity flaws,  which  allow hackers to  seize control of  Cisco 
routers.  Compromised routers are being used as platforms to 
send spam, launch Denial-of-Service (DoS) attacks, intercept 
sensitive traffic, and carry out illegal yet profitable activities. 
In  general, since routers  are considered trusted entities in  a 
network, their power  can be  easily exploited once they  are 
compromised. 
This work  was  funded in part by  KISA,  MIC, Samsung and Carnegie 
Mellon CyLab. 
In  order to secure the Internet routing  infrastructure, the 
two  main planes of  network functionality  (i.e.  control and 
data) must be protected.  The control plane runs intradomain 
and interdomain routing protocols to build forwarding tables 
at routers. The data plane forwards (or drops) packets accord- 
ing to forwarding tables built by the control plane.  Recently, 
considerable research and industrial efforts have addressed se- 
curing routing protocols, e.g.  securing Border Gateway Proto- 
col (BGP), the de facto glue for Internet interdomain connec- 
tivity  [9].  A secure version of BGP provides path and prefix 
attestations, which prevent propagation of illegitimate routes. 
Even  in  the  presence of  a  secure control plane,  however,  a 
compromised router can disregard decisions made by the con- 
trol plane and act autonomously and maliciously on the data 
plane.  It can modify, drop, delay, reorder, mis-forward valid 
packets or permit otherwise prohibited packets.  Such rnisbe- 
havior would not be prevented by any secure routing protocol. 
This  paper  presents  Secure  Split  Assignment  Trajectory 
Sampling (SATS), a system that detects packet modification, 
substitution, dropping, reordering and forwarding loop attacks 
carried out by subverted routers.  SATS detects attacks if  the 
observed paths of packets are not consistent with the predicted 
ones, and pinpoints a set of suspicious routers. As SATS is de- 
signed for high-speed networks, it relies on packet sampling, 
and so routers only need to do additional processing on a sub- 
set of  packets.  While sampling decreases monitoring over- 
head at each router, the accuracy of detection depends on how 
samples are selected.  If  the samples do not contain compro- 
mised packets, attacks would not  be detected.  Thus,  SATS 
uses Split Range Assignment that prevents attackers from bi- 
asing  sample selection.  To  sample packets  and  to  observe 
paths that  the selected packets followed, SATS can be inte- 
grated with the Trajectory Sampling traffic measurement sys- 
tem 121. Secure communication between routers and the back- 
end measurement engine is also needed.  SATS has low im- 
pact on router processing and memory usage:  it only applies 
a modular hash function on each packet and a cryptographic 
hash function on selected packets.  The rest of  the detection 
process is done externally on a backend measurement engine. 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:29:59 UTC from IEEE Xplore.  Restrictions apply. 
2. Related Work 
Related work on detecting and locating data-plane misbe- 
havior falls into two categories:  active probing  and passive 
monitoring. SATS is a passive monitoring scheme. 
Secure  Traceroute  [I31  sends  probing  packets  to  detect 
packet drop, modification and mis-forwarding attacks. Once a 
human operator notices performance degradation on a path, 
Secure  Traceroute  is  initiated  and  routers  respond  to  the 
probing packets.  Stealth Probing  [I] sends probing packets 
through an  encrypted channel with normal packets to make 
probing packets indistinguishable from  normal packets.  To 
protect  all packets, every packet has to be encrypted in this 
scheme.  In  general, in  active probing,  the  probing packets 
must be similar to the packets that are being attacked.  How- 
ever, it is not easy to determine beforehand which packets will 
be attacked.  It is also not clear when to initiate probing and 
where to probe. 
The Conservation of Flow (CF) [8] is a passive monitoring 
scheme.  CF analyzes traffic  volume at various observation 
points in a network. Discrepancies between the ingress traffic 
volume and the egress traffic volume at different points indi- 
cate potential problems. CF can discover dropping of packets 
but fails to detect modification of packets if traffic volume re- 
mains the same. Hughes et al. [8] address several ways to fool 
the CF algorithm. Fatih [I I] considers other types of  attacks 
including packet  modification, substitution,  mis-forwarding 
and  reordering.  Routers compute hashes  of  packet  content 
to validate integrity of content as well as ordering.  To reduce 
the overhead on routers, Fatih proposes a path-level detection 
algorithm while increasing the  size of  the  suspicious set of 
routers.  For both CF and Fatih, most of detection processing 
is done on routers. In SATS, only a subset of packets are sam- 
pled by  routers and the sampled packets are examined on an 
external measurement engine. 
Listen  [I51 and Feedback-based Routing  [16] detect con- 
nectivity problems between two end-hosts by monitoring TCP 
packets but  does not  aim to  localize the problems.  Finally, 
Herzberg and Kutten [7] proposes a protocol that detects de- 
laying and possibly dropping of packets by using timeouts and 
acknowledgments. 
3. Background 
In this section, we briefly describe previous works on flow- 
level  measurement and  Trajectory  Sampling  (TS). We  dis- 
cuss only material relevant to SATS. Flow-level measurement 
provides more fine-grained information about network traffic 
than the traditional link-level SNMP approach. A router peri- 
odically sends records about its flows to a collection machine 
that processes the records.  Cisco's  Netflow as well as flow- 
level measurement solutions from other  vendors are widely 
deployed in networks.  These tools are used to calculate traf- 
fic matrices to provision a network, understand traffic mix in 
terms of  application  types,  and  find reasons  behind  sudden 
traffic spikes. 
For high data rate interfaces, packet sampling is necessary 
to scale flow-level measurement. Otherwise, a router quickly 
runs out of processing cycles and memory while trying to ex- 
amine every passing packet, and its forwarding performance 
is severely degraded. Netflow uses a simple I-out-of-N  sam- 
pling method but not without problems [4].  Improved meth- 
ods have been proposed,  such as the novel Trajectory Sam- 
pling  (TS) proposed by  Duffield and Grossglauser  [2].  The 
main  idea of  TS is that  a packet  is either  sampled at  every 
router along its path, or not sampled at all. The IETF is work- 
ing on  standardizing various aspects of  flow-level measure- 
ments including TS to ensure multi-vendor compatibility and 
industry-wide acceptance. TS works as follows: 
A router applies a selection hash@ction,  hselection(), 
to compute a hash value over the invariant portion of  a 
packet.  The  source and destination IP addresses, port 
numbers,  protocol  and  payload  remain  the  same  as  a 
packet travels across the network, and thus are included 
in  the calculation.  On  the other hand,  the TTL, ECN, 
TOS and CRC checksum are not included in the calcula- 
tion as they can be changed. 
In order to achieve unbiased and uniform sampling, this 
hash function must generate values that appear statisti- 
cally independent of  its input.  Using large packet traces 
from a Tier-1 ISP network, [2] show that modular arith- 
metic with prime moduli satisfies this property. 
If  the hash value falls into the predetermined sampling 
range, the packet is sampled.  The size of this sampling 
range, N,,,ll, 
divided by the total size of the hash range, 
NtOtal, is the effective sampling rate, p,,,,. 
The actual 
sampling rates used vary by networks, and we have seen 
1/100, 1/1000 and smaller. 
For each sampled packet, a label hash function, hlabel (), 
computes another hash value over the invariant portion 
of  a  packet.  The hash  value  is called the  label  of  the 
packet since the label provides a unique ID of the packet. 
This label is then reported back to a machine for process- 
ing - this is called the backend engine in TS. A different 
hash function is used to make the label small, yet unique 
during a  measurement interval.  An  ingress router  also 
reports a key, which contains raw header information of 
a flow, for each sampled packet. 
The  backend  engine  reconstructs  the  path  a  sampled 
packet traversed in the network.  This path is called the 
packet's  trajectory.  The  backend  engine  sets  a  timer 
when it first receives a label I.  When the timer expires, 
the backend engine gathers the routers that  sent label 1 
and reconstructs the packet's trajectory.  It assumes that 
the network topology is known. A possible timeout value 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:29:59 UTC from IEEE Xplore.  Restrictions apply. 
p:  U ~ & I  
~~~~~k 
SATS Detection 
0 
P 
Figure 1. Overview of SATS. 
is the sum of the upper bounds of all possible delays: the 
delay within  the label buffer before a label is exported, 
and the propagation and queuing delay a packet experi- 
ences from a reporting router to the backend engine. The 
backend engine also provides storage, query and visual- 
ization functions. 
Itsetection(), hlabel() and  the  sampling range  must  be 
identical  at  all  routers  during  a  measurement interval. 
This ensures that a packet is sampled at all routers on its 
path or at none. If each router randomly samples a subset 
of packets as in Netflow's  1-in-N method, a packet's path 
cannot be reconstructed. To adjust the sampling rate, an 
out-of-band mechanism is used  to change the sampling 
range on all routers. 
) 
Besides  the  benefits of  fine-grained flow-level  measure- 
ments  and  reduction  of  overhead  on  router  performance 
through sampling, TS has a number of additional advantages. 
It  is a  direct observation method:  a packet's  or flow's  path 
is measured directly, without needing to know IGP and BGP 
routing state.  On €he  other hand, Netflow-style data requires 
routing state, in order to derive the original path of  a packet 
or  flow.  This  indirect method  is not  as  accurate as  the  di- 
rect observation, as there are synchronization issues during the 
computation. Another advantage is that the reconstructed tra- 
jectories can be used to passively measure link performance, 
without the injection of active probe traffic into a network. 
4. SATS 
4.1. Overview and System Model 
SATS extends upon TS to detect malicious routers.  In this 
paper, SATS is limited to routers within a single administra- 
tive domain, such as ISP, university campus or enterprise net- 
work, or multiple cooperating domains that are open to share 
measurement data with one another. We  also assume that the 
network topology  is known.  SATS can detect one  01- multi- 
ple consecutive malicious routers on a path if  there are non- 
malicious routers at both ends of the malicious routers. Thus, 
we assume that the first and the last router on a path are cor- 
rect. This assumption is necessary and also stated in all related 
work. SATS cannot detect mis-forwarding behavior that does 
not manifest itself as a forwarding loop. 
Figure 1 illustrates the SATS design, which consists of the 
following functions: 
Split Range Assignment: SATS assigns multiple overlapping 
hash ranges to routers to minimize the probability that an at- 
tacker can completely evade detection. In contrast, TS uses a 
single universal sampling range for every router in a network, 
which is vulnerable to attacks. We call our scheme Split Range 
Assignment and TS's Single Range Assignment. 
Report Collection: A router samples a subset of packets based 
on its assigned sampling range and reports the hash labels and 
keys of sampled packets to the backend engine. Report collec- 
tion in SATS is the same as TS. SATS (as in TS) is designed 
with router performance in mind, and we aim to keep router 
state and processing to a minimum.  The next three functions 
are carried out by the backend engine, not by routers. 
Reconstruction and Aggregation of Trajectories: At the end of 
each measurement interval, the backend engine reconstructs 
trajectories  of  sampled packets  using  reports  from  routers. 
Trajectories with the same ingress router and destination rout- 
ing prefix pair are in turn aggregated. SATS detects anomalies 
based on this aggregation unit instead sf a single trajectory. 
Pinpointing  Malicious  Routers:  In  each aggregation, SATS 
looks for inconsistent trajectories that are different from their 
predicted trajectories.  If  inconsistent trajectories are found, 
SATS locates a set of  suspicious routers that are responsible 
for the attack. 
4.2. Split Range Assignment 
Let  us  consider  a  malicious  router  that  not  only  misbe- 
haves,  but  also tries to avoid detection by  attacking packets 
that are not being sampled. In Single Range Assignment, the 
malicious router  knows that  the  hash range  it  has been  as- 
signed is the only sampling range being sampled throughout 
the network.  In Split Range Assignment, we vary  sampling 
ranges from router to router. Different sampling ranges are as- 
signed by the backend engine through encrypted and authen- 
ticated channels to ensure that the sampling range assigned to 
a router is unknown to other routers.  Thus, only the backend 
engine has knowledge of the entire range assignments. 
Figure 2 illustrates Split Range Assignment.  A long ver- 
tical rectangle at a node represents the entire hash range of 
the selection hash function.  Within the entire hash range, the 
small gray rectangles depict the hash values in the sampling 
range at the node. As opposed to Single Range Assignment in 
Figure 2.(a), Split Range Assignment in Figure 2.(b) has sam- 
pling ranges that varies from router to router.  However, the 
sampling rate p,,,, 
= Nsmall/Ntotal = 6/31 = 0.19  at a 
router remains the same. If a malicious router, r4, ever attacks 
packets outside of  its  sampling range  (25; 15; 28: 14: 12: 8 )  
(e.g., hash value 4) the attack will soon be noticed by {Q: r e ) .  
Note that Split Range Assignment is not random sampling (as 
in  Cisco Netflow)  since more  than one router would be  as- 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:29:59 UTC from IEEE Xplore.  Restrictions apply. 
Figure 2. Hash ranges in Single Range Assignment (a) and Split Range Assignment (b). 
Stotal: a set of all the routers in a network 