shell
回到主会话。 
Ctrl-z
与会话2交互。 
window -i 2
现在能够运行所有Shell命令（例如ls），如图1.11所示。
图1.11
虽然这不是最快的Shell，但是由于所有通信数据包都是通过DNS协议进行传输的，因此真正解决了Meterpreter或类似Shell无法回连的情况。dnscat2更大的优点是它完全支持隧道。这样的话，我们可以从本地主机发起漏洞攻击，使用浏览器来访问内部网站，甚至是通过SSH登录到设备上，这一切都是可能的。
4．使用dnscat2建立隧道
很多时候，攻击者服务器需要通过突破的主机，访问突破主机内网的其他服务器。使用dnscat2执行此操作的安全方法之一是本地端口路由我们的流量，接着通过隧道传输到网络内部主机。我们可以通过命令会话中的以下命令来完成这个例子。
listen 127.0.0.1:9999 10.100.100.1:22。
创建隧道后，在攻击者主机终端根窗口，使用SSH命令登录本地9 999端口，我们可以返回攻击者计算机上的管理员终端窗口，通过SSH命令9 999端口连接到localhost，并通过被攻击者网络上的内部系统身份验证，如图1.12所示。
图1.12
这将提供各种有用的功能，一个很好的测试是检测客户的网络是否可以检测到大量的DNS查询和数据窃取。那么，请求和响应的数据包看起来是什么样的？通过快速的Wireshark数据截获，如图1.13所示的dnscat2创建了大量不同类型的DNS请求包，发送到不同类型长子域名。
图1.13
1.4.5 p0wnedShell
正如在p0wnedShell的GitHub页面所介绍的，这个工具是用C＃编写的用于攻击目的的PowerShell主机应用程序，它不依赖于powershell.exe，而是在PowerShell运行空间环境（.NET）中运行PowerShell命令和函数。该工具包含许多攻击PowerShell模块和二进制模块，使后期漏洞利用过程更加容易。我们尝试的是建立一个“一体化”的包含所有相关工具的后漏洞利用工具，并借助它绕过所有安全防护机制（或至少绕过一些）。您可以使用p0wnedShell在活动目录环境中执行各种攻击，使防御团队产生防范意识，从而帮助他们构建正确的防御策略。
1.4.6 Pupy Shell
Pupy 是一个开源、跨平台（Windows、Linux、macOS和Android）远程管理和后漏洞利用工具，主要用Python语言编写。
Pupy 的一个非常棒的功能是，您可以在所有代理上运行Python脚本，而无须在所有主机上实际安装Python。因此，Pupy是一个很方便的工具，能够帮助用户实现在自定义框架中编写大量攻击脚本的目的。
1.4.7 PoshC2
PoshC2是一个代理，自适应命令和控制框架，完全用PowerShell编写，可以帮助渗透测试人员与红队开展团队合作，开展后漏洞利用和横向移动操作。PoshC2工具和模块是在PowerShell会话和Metasploit框架的静荷类型的基础上开发的。选择PowerShell作为基本语言，是因为它提供了所需的所有功能和丰富的特性，并且框架无须引入多种语言。
1.4.8 Merlin
Merlin基于最近开发的HTTP/2（RFC7540）协议。Per Medium解释：“HTTP/2通信是多路复用的，双向连接不会在一个请求和响应之后结束。此外，HTTP/2是一个二进制协议，具有更紧凑、易于解析等特点，不使用协议解析工具则无法理解HTTP/2内容。”
Merlin是一个用Go语言编写的工具，界面和使用方法类似于PowerShell Empire，并且允许使用轻量级代理。它不支持任何类型的后漏洞利用模块，因此必须独立完成后续工作。
1.4.9 Nishang
Nishang是一个包含大量脚本和静荷的框架，可以使用PowerShell开展攻击检测、渗透测试和红队行动。Nishang在渗透测试的所有阶段都很有用。
虽然Nishang实际上是一个令人惊叹的PowerShell脚本的集合，但是也包括一些轻量级命令和控制的脚本。
1.5 结论
现在，您终于完成了工具和服务器配置，准备开始“战斗”。为各种场景做好准备可以帮助您“规避”网络检测工具、协议禁用以及基于主机的安全防护工具。
对于本书中的实验，我创建了基于Kali Linux的完整虚拟机，包括各种工具。在黑客秘笈压缩包中，有一个名为List_of_Tools.txt的文本文件，其中包括了所有添加的工具。默认用户名/密码是root/toor。
第2章 发球前——红队侦察
在本书上一版中，这一章重点介绍如何使用不同的工具，如Recon-NG、Discover、Spiderfoot、Gitrob、Masscan、Sparta、HTTP屏幕截图、漏洞扫描和Burp Suite等工具。我们使用这些工具从外网或者内网，对被攻击者的基础网络实施侦察或扫描操作。我们将继续这一传统，从红队的角度进入侦察阶段。
2.1 监控环境
红队通常需要开展攻击。您不仅需要时刻准备好攻击基础架构，还需要不断地寻找漏洞。您可以使用各种工具扫描网络环境、查找服务和云配置错误等，完成操作。通过这些操作，您可以收集有关被攻击者基础网络的大量信息，并找到直接的攻击途径。
2.1.1 常规Nmap扫描结果比较
对于所有的客户，我们要做的第一件事就是设置不同的监控脚本。这些通常只是快速执行的bash脚本，脚本的功能是每天通过电子邮件向我们发送客户网络的变化。当然，在扫描之前，请确保您具有执行扫描的合法授权。
对于通常不是很大的客户端网络，我们设置简单的定时任务来执行外部端口差异化的比较。例如，我们可以在Linux系统中创建一个快速bash脚本，完成这项烦琐的工作（记得替换IP地址范围）。
#!/bin/bash。
mkdir/opt/nmap_diff。
d=$(date +%Y-%m-%d)。
y=$(date -d yesterday +%Y-%m-%d)。
/usr/bin/nmap -T4 -oX/opt/nmap_diff/scan_$d.xml 10.100.100.0/24 > /dev/null 2>&1。
if [ -e/opt/nmap_diff/scan_$y.xml ]; then。
/usr/bin/ndiff/opt/nmap_diff/scan_$y.xml/opt/nmap_diff/scan_$d.xml >/opt/nmap_ diff/diff.txt。
fi。
这是一个非常简单的脚本，功能是每天运行Nmap工具，扫描默认端口，然后使用ndiff工具比较结果，如图2.1所示。获得脚本输出的结果后，通知我们的团队每天发现的新端口。
在本书上一版中，我们讨论了Masscan工具的优点以及它的扫描速度。Masscan的开发人员表示，如果拥有足够的网络带宽，您可以在6 min内完成整个互联网扫描。Masscan工具存在的一个问题是，大范围扫描时可靠性无法保证。Masscan工具对于我们前期的侦察很有帮助，但通常不用于端口差异的比较。
实验
本书中的实验是完全可选的。一些章节中已经介绍了用于执行测试的附加实验或者是您可以拓展的领域。由于这完全是为了学习和发现自己的兴趣点，强烈建议您花些时间更好地使用我们的工具，并在社区中分享工具的使用方法。
图2.1
搭建更详细的网络差异扫描器。
相对于Nmap工具默认的端口列表，设置更详细的端口列表（如Nmap默认没有包括Redis 6379/6380等端口）。
增加Nmap获取旗标的功能。
保持端口的历史记录。
搭建电子邮件警报/通知系统。
检查差异Slack警报：http://bit.ly/2H1o5AW。
2.1.2 网站截图
除定期扫描开放端口/服务外，红队还需要监控不同的网站应用程序。我们可以使用两个工具监控网站应用程序的变化。
第一个常用的网页截图工具是HTTPScreenshot。HTTPScreenshot的功能非常强大，它使用Masscan工具快速扫描大型网络，并使用PhantomJS工具记录检测到的任何网站的屏幕截图，如图2.2所示。这是快速获取大型内部或外部网络架构的好方法。
请记住，本书中提到的所有工具都运行在定制的Kali虚拟机中。
cd /opt/httpscreenshot/。
编辑networks.txt文件，修改网络扫描参数。 
gedit networks.txt
./masshttp.sh。
firefox clusters.html。
图2.2
我推荐的另一个网页截图工具是Eyewitness。Eyewitness是很好的工具，它能够识别Nmap工具输出的XML文件，输出的结果包括截屏网页、RDP服务器和VNC服务器等信息，如图2.3所示。
实验
cd /opt/EyeWitness。
nmap [IP Range]/24 --open -p 80,443 -oX scan.xml。
python ./EyeWitness.py -x scan.xml -web。
图2.3
2.1.3 云扫描
随着越来越多的公司开始使用各种云基础架构，网络中出现了许多新的攻击方式。这通常是由于配置错误以及不了解他们的云基础架构到底面临什么困境造成的。无论是亚马逊EC2、Azure、谷歌云还是其他一些云服务商，都存在此类问题，这个问题已成为全球性的问题。
对于红队来说，面临的难题是如何在不同的云环境中进行搜索。由于许多用户使用动态IP，因此他们的服务器IP地址不仅快速变化，而且也没有在云服务商的固定地址范围列表中。例如，如果您使用AWS云服务（AWS云服务在全球范围内拥有巨大的IP地址范围），那么根据选择的区域，您的服务器可能被设置在/13掩码地址范围内。对于局外人来说，查找和监控这些服务器并不容易。
首先，确定不同云服务商拥有的IP范围，如Amazon、Azure和Google Cloud。
你可以看出这些地址范围很大，手动扫描非常困难。在本章中，我们将介绍如何获取有关这些云系统的信息。
2.1.4 网络/服务搜索引擎
如何找到云服务器？互联网上有大量免费的资源，我们可以基于这些资源对目标进行侦察。我们可以使用Google以及第三方扫描服务等方式。利用这些资源，我们无须主动探测，便能够深入地了解公司，查找服务器、开放服务、旗标和其他详细的信息。目标公司永远不会知道您查询过这类信息。作为红队，下面我们来了解如何利用这些资源。
1．Shodan
Shodan是一项非常棒的服务，它定期扫描互联网，抓取旗标、端口和网络等多种信息。Shodan甚至还搜索漏洞信息，例如“心脏滴血”漏洞。Shodan的一个危险的用途就是查找未设置口令的网络摄像头，查看摄像头的内容。从红队的角度来看，我们希望找到有关被攻击者的信息。
一些基本的搜索查询如下。
title：搜索HTML标记中的内容。
html：搜索返回页面的完整HTML内容。
product：搜索Banner中标识的软件或产品的名称。
net：搜索给定的网络地址段（如204.51.94.79/18）。
我们可以在Shodan上搜索cyberspacekittens。
在HTML标记中搜索。 
title:cyberspacekittens
在页面上下文中搜索。 
html:cyberspacekittens.com
我注意到Shodan的扫描速度有点慢。它需要一个多月的时间才能扫描完我的服务器信息并放入Shodan数据库。
2．Censys.io
Censys会持续监控互联网上每个可访问的服务器和设备，因此您可以实时搜索和分析它们。您将能够了解自身网络的攻击面，发现新威胁并评估其全面的影响。Censys 极具特色的功能之一是它能从SSL证书中获取信息。通常，红队的主要困难之一是找到被攻击者的服务器在云服务器上的位置。幸运的是，我们可以使用Censys.io来查找这些信息，因为Censys已经解析了这些数据。
Censys.io扫描存在的一个问题是扫描可能需要几天或几周的时间。在这种情况下，需要一天的时间来扫描标题信息。此外，在我的网站上创建SSL证书后，信息显示在Censys.io网站上需要4天的时间。在数据准确性方面，Censys.io非常可靠。
下面，我们扫描目标cyberspacekittens.com，查找有关信息。通过解析服务器的SSL证书，我们能够确定目标服务器是在AWS上托管的，如图2.4所示。
图2.4
还有一个Censys脚本工具，可以通过脚本化过程查询子域名。