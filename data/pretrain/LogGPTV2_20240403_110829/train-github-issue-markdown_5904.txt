 **Steps to reproduce and a minimal demo of the problem**
  * Create sibling components in the "component tree" (have a parent component that has multiple components within its template) and give each one of them at least one CSS class in the `styles` or `styleUrls` component metadata property.
  * Set one of those sibling components `encapsulation` component metadata property to `ViewEncapsulation.Native`
  * Make sure the other sibling components are not set to `ViewEncapsulation.Native` mode.
  * Run the code in **Chrome** since it has Shadow DOM support.
  * Inspect the DOM in the browser, expand the #shadow-root for the component that is set to `ViewEncapsulation.Native` mode.
  * Notice that the _styles_ from the other sibling components are ending up inside of the shadow dom for the component that is set to `ViewEncapsulation.Native`:  
![image](https://cloud.githubusercontent.com/assets/1243236/14227993/2595ca40-f8be-11e5-874a-f1519de4f726.png)
  * Also notice that the _styles_ from the other sibling components are still ending up in the `head` tag as expected:  
![image](https://cloud.githubusercontent.com/assets/1243236/14228026/e02d8348-f8be-11e5-8f41-798fe3fedf47.png)
Here is an example on Plunker
**Current behavior**  
Looks like the CSS shim that is getting created into a `` tag is
getting inserted into sibling components in the component tree that are in
`ViewEncapsulation.Native` mode. It also looks like they are put in there in
the same order that the custom elements are found within the parent component
template markup. So if two non-native mode sibling components are processed in
the DOM tree before the native mode one, their `` tags will come before
the native one and the native one's markup in the shadow DOM:  
![image](https://cloud.githubusercontent.com/assets/1243236/14228051/7a0a9690-f8bf-11e5-84b5-9c2982c75981.png)
**Expected/desired behavior**  
I believe that this is not the desired behavior and that those other sibling
component styles should not be ending up in the Shadow DOM of the native mode
component.