> 描述：身份认证是采集端与服务端连接时进行身份认证，实现对推拉权限控制，
> 以及对外提供服务的界面、功能、API鉴权。\
> 要求：
>
> 1.应支持SSL（通道加密）、SASL等身份认证机制。
>
> 2.应对用户进行身份标识和鉴别。
>
> 3.应具有权限控制功能，支持推拉数据权限的配置。
2.  数据加密
> 描述：通过在数据层、网络传输层提供加密功能对重要或敏感数据进行加密处理来保证metrics和logs数据传输的安全。\
> 要求：应支持传输通道加密。
应通过技术手段对所集指标数据、日志文件、告警数据等进行完整性保护。
3.  开放API供外部系统集成，如：
```{=html}
```
1.  服务网格可集成可观测平台遥测
2.  kubernetes集成可观测平台实现弹性伸缩
3.  serverless集成可观测平台实现事件触发
4.  GitOps集成可观测平台实现代码控制采集告警配置
5.  测试平台集成......
6.  技术风险平台集成......
```{=html}
```
10. []{#_Toc5195557 .anchor}性能项要求
描述不同应用场景下的性能需求，性能可参考以下指标：
1.  Agent采集器性能相关指标
    1.  资源占用比消耗
占用情况包含采集器cpu数量占用情况(百分比),内存大小(MB),磁盘占用情况(MB大小，网络带宽
2.  采集时效性
在一定的监控应用数量和度量及日志量前提下，从数据出现到数据上报的延迟,毫秒(ms)
3.  端处理能力
同时监控多少个点(个), 每秒处理多少日志
(MB)，需满足资源占用比和采集时效性
2.  服务端写入相关性能指标
    1.  指标类写入性能
-在一定的资源规模下每秒能插入多少个数据点;
2.  日志类写入性能
-在一定的资源规模下每秒能插入多少行日志;
3.  存储相关性能指标
    1.  数据压缩比
-在一定的资源规模下存储之后的数据量大小 / 数据源的数据大小
4.  查询相关性能
    1.  查询并发
-在一定的资源规模下同时进行查询的请求数Qps
2.  查询返回时间
-在一定的资源规模下单次查询的返回时间Ms
3.  查询处理范围
-在一定的资源规模下能查询多久的数据
5.  告警预警性能
    1.  告警的时效性
-在一定的资源规模下故障出现到告警的延迟
2.  告警预警有效性
-在一定的资源规模下的误报率
6.  吞吐量
> 指标：吞吐量指在指定并发数和数据量的前提下，服务端单位时间内处理的metrics和logs数据量。\
> 描述：在指定metrics和logs量和资源数前提下，测试可观测性系统在不同场景下的吞吐量，同时确保在高延迟网络状态下仍能保持较高的吞吐量。
7.  时延
> 指标：从采集端把数据发送到服务端，完成各项策略适配后，最终落库存储、发出告警、完成展示的整个过程消耗的时间。\
> 描述：在指定metrics和logs量和资源数前提下，测试可观测性系统的请求响应时延，如数据推送时延、数据处理时延、数据告警时延、数据通知时延、数据展示时延。
11. []{#_Toc535935999 .anchor}可观测性应用场景
    1.  诊断能力要求
诊断能力是在数据能力的基础上，构建数据智能应用的能力。诊断能力贯穿了故障的发现（异常检测、故障预测）、触达（告警关联收敛、告警分级、告警升级/降级、告警排班等）、故障分析（根源分析、根因分析，关联搜索分析）、故障修复的全流程，核心的应用场景包括异常的检测、告警的触达与可执行性、分析（根源分析、根因分析）、故障恢复能力。
1.  故障发现
    1.  异常检测
描述：异常检测是诊断的前提、只有准确可靠的发现异常，后续才能对异常进行分析。
要求：
\-- 检测架构能力、数据粒度能力
\-- 检测方法
\-- 检测效果
初级-支持人工规则检测的能力。
> 支持专家经验/模板在某些场景中的复用。
中级-具备一定的统计分析算法检测能力，在一部分场景下，取得很好的业务效果。
> 具备构建数据集的机制和能力，可以逐步的收集业务中各种形态的数据集，供模型使用。
高级-具备高级的智能算法检测能力，同时检测准确率召回率都已经达到90%以上。
> 适配各种不同的应用场景，比如应用运行时、发布状态等，都可以达到很好的检测效果。
>
> 同时系统可具备收集反馈的能力，支持自适应的模型迭代升级。
2.  故障触达
发现的问题，需要有效的触达到需要关注的开发/运维人员。缺少了有效的触达，往往形成监而不控的局面，
最后告警质量变差、数量变多，没人关注。
1.  告警收敛
描述：
检测不合理导致告警过多，或者发生大范围的故障，都会导致告警量过多，甚至形成高精风暴。
要求：
\-- 收敛的方式
\-- 告警的关联能力
初级- 支持针对时间、或者其他关键字，在用户设定后，进行简单合并。
中级-
在人工规则的基础上，有一些简单算法进行收敛的场景应用。专家经验逐步沉淀到告警收敛的规则库。
高级-
依托数据和算法、可以自适应的挖掘相关性进行收敛。同时收敛后，将相关/相似的收敛后，可以进一步挖掘出其中的规律和相关，给用户提供更多的告警相关信息。
2.  告警分级
描述：分级可以帮助更严重的故障得到更多的关注，
避免严重故障淹没在大量告警中，酿成大的事故。
要求：
\-- 分级方式
\-- 场景覆盖度
初级- 在配置告警策略时，支持用户配置告警的策略级别。
中级- 在1-2种特定场景下，已经支持算法自动挖掘出告警级别，
并在业务上取得比较好的效果。
高级-
基于指标、日志和链路的多数据联动和告警处理反馈，支持全部场景的自动告警分级。
同时模型支持自适应的优化升级，不断提供更好的分级效果。
3.  告警协同
描述：发现的问题，需要有效的触达到需要关注的开发/运维人员。缺少了有效的触达，往往形成监而不控的局面，
最后告警慢慢失效，没人关注。
要求：
\-- 告警的关联收敛能力
\-- 告警的排班、升级/降级、多种通知渠道等
3.  故障分析
    1.  根因分析
描述：根因分析则是整个智能诊断最核心的部分，有效的根因分析，可以快速的定位到故障原因，从而可以帮助运维人员有效的解决故障。
要求：
\-- 应用的数据类型和范围
\- 分析给出的程度：定位到应用层级，还是近一步缩小范围到代码段、中间件等
\-- 定位时长和效果
初级- 依赖简单的数据统计分析、对比分析能力结合人工经验探判断故障根因。
中级-
部分场景已经开始有算法能力的参与。基于算法辅助，人工为主进行一些简单场景的根因分析，同时，专家经验逐步沉淀，有故障库的建设机制。
高级-
根因分析技术进一步丰富，例如：支持多维时间序列分析、告警关联分析、调用链路分析等多种方式，同时算法可以在多种场景、甚至跨场景实现智能化的完成根因分析任务。不仅给出具备可解释性的根因，还需要给出解决的建议帮助。
4.  故障恢复
描述：故障的恢复则对应了诊断的最后一步---决策。
要求：
\-- 自动化能力：包括自动化脚本的能力，以及和各种平台集成的能力
\-- 决策能力
\-- 决策效果
初级-基于故障的告警事件、指标、日志等数据联动展示，运维人员根据信息的排查，可以找到故障的原因。
中级-基于对故障的诊断分析，原有的流程化排查信息已经沉淀成自动化/智能化流程，自动的给出排障链路，
运维人员可以快速的发现导致故障的原因。
同时在平台给出的建议下，便捷的进行故障恢复的操作。
高级-系统通过智能化的诊断，具备自动的故障恢复能力。
无需人工或少许人工的辅助，可以完成故障的修复工作。
同时修复经验进一步沉淀，支持系统的持续迭代升级。
2.  根因分析
3.  AB testing