O.()i=O.21«).4 0.92 
.4 
.2 
0.6 
0.8 
Fig. 5. Uncertainty 
related to attacker action. 
Fig. 7. Noisy-And example. 
Nt-·s SlId  exocCode irnpllell rue 
1.0 
It('('ess l'(IIrt:elJlliFle) 
!·(....-t'eSsFilej 
0.0 
0.8  ® 
(Qp 
.7 
0.94  O.06=0.2XO.3 
Fig. 8. Noisy-Or example. 
only when both its parents 
are True. This says that Escalation will never happen 
otherwise.  A Noisy-And however does not imply that a 
child is definitely 
false  if one  of the  parents 
NetAccess and VulnExist 
is false. 
To model the "leaky" chances 
that Escalation may 
all of  the parents 
to be 
each 
are introduced
. In particular, 
parameters 
ted (enabling) 
a probability. 
influence to the child 
For example, suppose 
does not report any findings 
day vulnerabilities in a piece of software. Let 
the likelihood of the existence of zero­
still happen without requiring 
True, "leaky" 
parent has an associa
that is represented by 
the vulnerability scanner 
(VulnExist is False). In practice, however, there could 
be  zero-
0 .2 represent 
day vulnerability in the software 
words, 0 .2 is the leaky chance for the vulnerability to 
be actually true (though 
False). Hence, the leaky 
parameter 
vulnerability scanner 
define  another 
could mean the 
the firewall to gain network 
analysis shows that there is  no network 
path. 
leaky parameter 
likelihood the attacker 
P(EI-,v) =  0.2 represents 
misses a true vulnerability. We can 
P(EI---,N) = 0 .4, which 
access, even when attack-graph 
under concern. In other 
is able to circumvent 
the likelihood that 
reported 
The second example is called "Noisy-Or" and it extends 
ministic OR logic. With deterministic OR 
from the  deter
(see Fig .  8 ) ,  node accessFile is True as long as one 
become True.  A Noisy-Or 
or more of its parents 
however 
true if 
one of the parents 
does  not  imply 
that a child is definitely 
is true. 
logic 
The rcsl or 
the Bayesian 
Network 
CPTa.llodeO 
A  0  O 
T  o. Fa\seposilivc 
F 0.150.85 
Fig. 6. Local observation 
model. 
vel reasoning. Nonethele
ss, the 
ill contain  a fair amount of  false 
directly.  Instead, we will only input relevant correlated 
alerts that can help high-le
correlated 
alerts  may  st
positives. If for some reason we  know that 
alerts come from a high-fidelity alert correlati
we may impose high confidence 
confidence 
level upon them. Lower 
the correlated 
will be  put 
on process, 
otherwise. 
to  use  a 
We propose 
local observation 
model (LOM) 
itself. 
not observable 
about alerts. As shown in 
The Observation node 
that can  be inferred from imperfect 
a pair of nodes: the ActualState 
Observation node. The ActualState 
to model such uncertainty 
Fig .  6 ,  for states 
sensors, we introduce 
node and  the 
node  is 
is a direct child of the ActualState node, and  the 
Observation node  prov
ides observations to infer the 
true state of the ActualState node. Suppose both the 
ActualState node and  the 
Observation node are 
binary, and  the 
node represents 
the Observation node. In this en, a false positive 
probability is inherently 
en  associa
how the ActualState node will affect 
ted with the Observation 
included. 
A concrete 
evidence about  node 
Observation will 
or probability of node ActualState 
change the posteri
by computing P(ActualState 
of "backward" 
models (HMM), and Bayesian networks 
execute 
can be executed 
such kind of 
computation 
. Further, 
inference
I Observation=True) .  This kind 
is routine in hidden Markov 
in some fairly efficient manner [ 1 5][22]. 
can naturally 
2.4 Modularized CPT computation 
There are well-studied 
modularize various sources 
tation 
may be directly 
of en  parameters. We provide two examples that 
applied to cyber security analysi s .  
BN modeling techniques that can 
in the compu­
of uncertainty 
The first example is called "Noisy-And", 
and i t  extends 
such computations 
As  in Noisy-And, the leaky parameters 
are introduced 
that accessFile may  not 
to model the "leaky" chances 
always be True when one or more of its parents is 
True. For 
example, in  Fig .  8 ,  let P(---,accessFileINFSShell) 
=  0.3, 
which means that NFSShell being True does  not 
nec­
essarily imply  that 
still a 
accessFile is True; there  is 
30% chance that accessFile will not happen. Similarly, 
we can define another 
leaky parameter 
P(---,accessFilelexecCode) 
(inhibiting) 
=  0.2. 
as 
from the deterministic AND logic. With deterministic 
AND (see Fig .  7), node Escalation will become True 
It is  noted 
that in "Noisy-And" 
the leaky parameter 
is defined separately 
and "Noisy-Or" logic, 
and indepen-
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
215 
DSN 2010: Xie et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:07:12 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
the speci­
and efficient 
all  other 
simplifies 
are specified; 
ion. As  shown  in 
assumption 
and enables simple 
dently. This independence 
fication of the parameters 
calculation of the probability distribut
Fig .  7 and Fig .  8 ,  the CPTs at nodes Escalation 
and accessFile have 8 entries. However, j ust two 
leaky parameters 
easily 
P(EIN =  F, V =  F) =  0.2 x 0.4 =  0.08. Further, 
independent 
intuitive 
perform relatively better  in  a 
would be an extremely daunting task for human experts 
to assess 
multiple 
parents  and 
tion alleviates the difficulty. 
entries can be 
computed from these parameters. For instance, 
the 
assessment of the leaky parameters 
is more 
for human experts, since humans are known to 
"case-by-case" 
It 
ons considering different combinations of 
with the number of 
situati
factors, which is exponential 
also non-intuitive.  The independence 
manner. 
assump­
2.5 Summary 
Fig. 9. An example Bayesian network model. 
Our  BN modeling approach 
separates 
three important 
y analysis: 
the 
on attack success, the uncertainty 
of attacker 
from imperfect IDS sensors. 
in  real
-time securit
uncertainty 
types of uncertainty 
uncertainty 
choice, and  the 
This enables computing CPT parameters 
data sources such 
modeling techniques such 
further 
Our BN modeling approach 
properti
in Section 1 .  
modularize the sources 
es described 
of uncertainty 
within 
a CPT. 
satisfies the first two desirable 
as NYD/CYSS .  The more advanced 
BN 
from existing 
as Noisy-And and Noisy-Or can 
3 Implementation 
In this section  we  describe 
how to build a Bayesian 
can extend to other attack  graphs  with 
the MulYAL 
from an attack graph tool.  We  use 
network 
attack graph toolkit [21 ]  for our implementation, but the 
similar 
approach 
semantics [8], [13], [26]. The MulYAL reasoning system 
can incorporate 
and 
CYSS metrics from NYD data sources 
output the AC metric .  We use the same example as in 
Section 1 to describe 
the attack graph. 
how we derive 
the BN structure 
from 
3.1  Adding new nodes 
Attack 
Action 
Node (AAN). As discussed 
in section 2.2, 
actively exploiti
the AAN node to model the existence 
we need to introduce 
of an attacker 
ng the system. Thus, for 
some nodes in the graph model that represent 
conse­
quences of an attack ,  we may  put 
an AAN node as its 
will become true only 
parent. The attack's 
if all its pre-conditi
true. This changes the 
happen" 
for each selected attack node, rather 
AAN node 
the attacker 
than sharing a single 
among multiple attack nodes. This is because 
may choose one of many possible 
post-condition 
ons are met and the AAN node  is 
to "what has happened". A separate 
semantics from "what could 
AAN is used 
graph's 
attack 
paths. 
used  in  cyber  se­
to monitor 
y analysi s ,  there are 
and detect potential 
Local Observation 
such as IDS . In real-time securit
Model (LOM). Section 2.3 intro­
duces the notion of local observation model that can be 
used to incorporate the various detectors 
curity, 
methods 
securit
For example ,  an IDS could be used to  detect 
of an attacker 
file-sys
can be used to  detect 
the observation or detector 
our LOM ,  a new node i s  introduced 
observation (detect
the observation state represents the fact that the observation 
is influenced by the actual 
tem modifications. However, 
be accurate
. In 
to model the inaccurate 
ors), and an arc from the actual state to 
the existence 
and a file system monitor such as  Tr
may not always 
y threats
ipwire 
state. 
. 
Fig .  9 shows the  generated 
BN structure 
for the attack 
al probabili­
Obviously, 
no attack can be accompli shed. 
shown in Fig .  1 .  Using condition
has been accomplished by the attacker. 
an AAN  node for node 22.  When an 
and sending the file server 
be detected 
scenario 
ties (and Noisy-And and Noisy-Or semantics), there is 
no distinction between 
AND/OR nodes any more. Node 
22 indicates that the NFS Shell attack against the file 
server 
if there is no attacker, 
So we introduced 
is present 
attacker 
exploit 
packet, this action could 
based IDS , such as Snort. Thus we introduced 
observation node 21 so that whenever 
suspected NFS exploit 
attacker 
node 24 
report a suspicious  file  modifi
LOM observation node Tripwire 
3.2 Determining the CPT tables 
successfully modified 
the files through the exploit, 
will be true. In this case, a Tripwire monitor could 
packet, this  node will be true. If the 
an LOM 
a 
to capture 
this event. 
the IDS reports 
cation. Thus we added  an 
an NFS  shell 
by a network­
Bayesian network 
Each node  in a 
needs to be associa
ted 
with a CPT which is the probability distribution of the 
node's possible 
For a  node with no parent (root nodes), the CPT is 
oned on the  par
conditi
ents' states. 
states 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
216 
DSN 2010: Xie et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:07:12 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
associa
ng a vulner­
can be reduced 
likelihood values 
and Noisy-And techniques  discussed 
to obtaining 
ted with individual condi­
the node's prior probability distribution. By adopting the 
Noisy-Or 
in Sec­
tion 2, the CPT computation 
certain 
tions, such as the difficulty level of exploiti
ability, the likelihood that a piece of software 
zero-day vulnerability, etc. Many  of  them 
from currentl
Vulnerability Database, which provides various metrics 
for security vulnerabilities in the  CVSS 
In our 
implementation, we  assign 
values 
to the 
use the middle values 
likelihood. For example ,  we use value 20% to reflect the 
likelihood for unlikely. 
the CPT values based on  the 
from Table 2. We use 
corresponding 
the exact values 
likelihood such as certain and impossible and 
y-available data sources ,  such as the National 
of the ranges corresponding to other 
format. 
contains a 
can be derived 
However, there are still CPT entries that would rely  on 
to fill in, such as the false positive 
human experts 
negative rates for IDS detectors, the a priori 
for attacks, etc. We can have the experts 
condition
Table 2. In this work, we assign 
nding of the 