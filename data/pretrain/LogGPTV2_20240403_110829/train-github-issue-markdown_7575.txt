I feel like this a duplicate issue, but I could not find it. A little ironic I
guess.
    julia> @code_warntype match(r"([M,G])([0-9.])+", "foo")
    Variables:
      r::Regex
      s::ASCIIString
    Body:
      begin  # regex.jl, line 134:
          GenSym(2) = box(Int32,checked_trunc_sint(Int32,0))
          GenSym(8) = (top(getfield))(s::ASCIIString,:data)::Array{UInt8,1}
          return match(r::Regex,$(Expr(:new, :((top(getfield))(Core,:UTF8String)::Type{UTF8String}), :((top(convert))(Array{UInt8,1},GenSym(8))))),1,GenSym(2))::Union(RegexMatch,Void)
      end::Union(RegexMatch,Void)
This behavior is documented, but I feel like it should not be the default for
performance reasons. This seems like a use case for `Nullable`s.