# 前言
有一段时间没有写文章了，也不知写什么，毕竟从攻击方换成防守方，乙方换到甲方，还有些许不适应。。。但还是决定把自己接触渗透所积累的东西也拿出分享，不管糟粕，还是大伙觉得我分享的有用（那阿鑫自然是很开心），希望能帮到还在学习路上的朋友，文章若有错误，请及时联系我指出，我也不想误导才学习的朋友。此外，本文为口嗨文，基本在说思路，没有实操。
# web端
**(1)信息收集**  
收集cms信息：  
1.通过云溪，wapplayzer，fofa，以及github上各位表哥写的baner等插件脚本收集  
2.网站后台，正页,power by "xxx"，以及robots.txt  
3.根据经验判断，比如网站的icon（joomla，dede），目录框架结构(wordpress,discuz!)这些有明显特征的  
4.大框架类似，二次模改过来的，比如（onethink-->thinkphp）  
5.报错关键字提取，去github找有没有相似源码以及类似函数，报错信息可以用google语法收集warning error not exist等等。  
6.一些cms可以直接通过msf打  
use exploit/unix/http/laravel_token_unserialize_exec //关于laravel RCE  
use auxiliary/admin/cisco/cisco_asa_extrabacon //关于思科的设备，CVE-2016-6366  
收集端口：  
1.这么收集端口没什么好说，方法就那么几种  
2.一些端口应该知道的，开了21，22等端口，ftp匿名访问必须尝试（如果匿名登陆成功无法下载文件，尝试加入--no-passive参数），ssh弱口令必须尝试一下（各类数据库都外联弱口令尝试一下），81，88，888常见的web端口，389是ldap的默认端口，内网里面可能为域控，445(有些站你怎么打都日不进去，开了445的公网配合msf17010扫一波)，999（phpmyadmin），1234（可能为redis）,6379，3389（guest，shift都尝试一下），6588（护卫神界面），70000到10000的基本上是java的服务，重点关注weblogic,jboss，shiro,fastjson。其他一些高端口，可能为宝塔，或者边缘业务的端口。  
收集子域名：  
1.收集的意义在于配合收集的cms和端口信息撕开口子  
2.看看有没有域传送漏洞，有的话帮你找完  
3.多去找找某些api，某些api也可以帮你找全（其所有相关资产）。  
4.某些网站有sql注入，但是找不到后台，可能就在子域名，子域名可能还有phpmyadmin  
目录扫描  
1.拿到站先不要直接开扫，先把bp打开，自己点一下网站的功能，然后在target那一栏bp会帮我们爬出大体框架  
2.如果ip被ban了，将线程调低，或者在找一个小众一点的扫描器，不行的话自己写一个，py，很快的。  
3.尽量通过目录的结构得知为什么cms，有没有上传的编辑器（fck，eweb等，很多时候比如我们通过注入找到网站后台账号密码，成功进入后台，但是后台功能单一以至于拿不下shell，这个时候最好的方法就是去找新的资源，当我们发现一个漏洞很容易被这个漏洞束缚从而思维无法发散）  
我们找到A服务器的后台：admin/adminlogin.asp（有账号密码但是拿不下）  
这个时候不是一直想突破后台，而是发现新的资源admin/ewebeditor/admin_login.asp（从编辑器入手）  
4.比如扫到了axgg.xml这个敏感文件，它确实存在却无法访问，比如  
www.axgg.com/hdx/hxd/axgg.xml 我们无法访问，可以做一下尝试  
www.axgg.com/hdx/.hxd/axgg.xml  
www.axgg.com/hdx/;abcd/hxd/axgg.xml  
www.axgg.com/hdx/abcd/../hxd/axgg.xml  
5..git svn如果觉得还原的不全，可以去kali重新试试，多下几个工具  
6.日志  
其他信息收集  
1.c段，旁站，fofa搜索icon，header。  
2.phpinfo（收集绝对路径，真实ip，绕过xss的httponly($_SERVER[“HTTP_COOKIE”])，存在oci8推测数据库可能为oracle，）,phpmyadmin，adminer，以及疑似的后门  
（同行的马1.我们可以用profile=a看看能不能溢出2.f12里面搜索font，可能会出现密码）  
3.同模版网站  
4.护网的话，学校医院的学号和工号，可以根据“奖学金&&值班表” filetype等关键字搜索  
5.扫到了401的界面，可以加入X-Custom-IP-Authorization: 127.0.0.1  
6.如果在登录框处，我们可以查看其Js文件，测试密码不大可能泄露，但是说不定能找到其他组件，比如webservices，这个存在注入。  
**(2)sql注入**  
1.不论是前后台，如果可以上传图片，但是上传绕不过，可以考虑图片名改为注入payload，看看有没有二次注入  
2.如果存在注入，好好利用bp，get/post切换，参数污染，分块，x-forward-for改为127.0.0.1，application/数据流也可以改，bp里面的一些非主流字符也可以删除掉，比如  
以及垃圾数据  
3.至于对抗waf，最重要的是要清楚waf的规则，拦截的参数，再来进一步绕过，具体可以参考我的上一篇文章。  
如果读友们觉得写的还不错，我后面有时间一定把其余的漏洞以我目前的认知基础详细的讲一遍。  
4.遇到一个cms存在盲注，数据出的很慢，我们可以自己本地搭建一个，查看账号密码放在哪个表单。  
5.比如一个登录框，登陆的时候叫你选部门，可能账号密码处没有注入，但是你从人事部选择技术部这一步抓包，就会有注入。  
6.比如用union或者报错打payload，但是没有数据回显，可以看看f12里面是不是有hidden属性  
7.sqlserver的xpcmdshell写一句话用^转义失败，可以尝试certuili的hex写入  
**(3)逻辑漏洞**  
1.存在注入拿下了账号，但是admin的账号hash解不开，可以在后台尝试修改密码，看是否存在逻辑漏洞  
2.关于爆破的后台验证码，可以更换为万能验证码（0000，8888我尝试均失败，不知哪儿听说的，哈哈哈哈），当然也可以设置空验证码，或者将验证码这个参数给删除掉。  
3.注册账号的时候可以尝试admin空格空格空格空格空格空格，看看可不可以覆盖  
**(4)上传**  
1.条件竞争其实挺多的，tp写入session也可以想到条件竞争  
2.二次渲染，不仅是要了解，而且要大环境复线。  
3.bp里面的各类参数修改，已经说的很多了。  
4.看看有没有.user.ini这个文件，有的话走大运  
5.白名单，这类没有解析漏洞或者开发商本身的漏洞，就别想着绕过了。  
**(5)xss**  
1.XSS无非是打cookie，钓鱼，像更高端的操作比如最近的chrome,xmind等xss上线cs，但是在实际项目中是可遇不可求的，真正需要注意的还是xss一些payload的拓展以及打到了cookie怎么绕过httponly。其实钓鱼的话可以配合弱口令去后台看看能不能改一些模版，虽然现在各类客服的安全意识已经很高了，但是有些时候能不能拿下项目还真的指望他们。  
**(6)ssrf**  
1.ssrf出现的位置，其实burp抓包，不管是get的参数还是post的参数，我们都可以直接fuzzing，就比如post的数据，image=admin，我们image=
都要不断尝试。不一定非要在网上说的那几个位置才能想到ssrf。  