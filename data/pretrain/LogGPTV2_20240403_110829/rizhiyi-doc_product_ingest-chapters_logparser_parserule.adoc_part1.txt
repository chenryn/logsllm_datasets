=== 领域特定解析
日志易内置了常用的日志解析规则，能够识别、解析常见的日志格式。对于日志易预置规则不支持的日志格式，用户可以在产品页面的“设置”标签下的“字段提取”标签里配置客户领域内特定的日志格式解析规则，提取特定字段。
[IMPORTANT]
====
* event（事件）: 一条日志称为一个事件
* timestamp（时间戳）: 这里的timestamp指日志本身的时间戳而不是进入系统的时间戳
* field（字段）: 即通过日志易系统抽取出来的字段，例如apache中clientip字段
* appname：appname用来标识一个日志，在上传日志的时候需要指定对应的appname
* logtype：logtype可以认为是给您的日志格式起的一个别名，您在左侧字段栏和搜索栏中可以通过logtype.field来引用
* sourcetype：当您在日志易Manager中开启logriver配置项 `switch_use_source_type` 时，日志解析完毕后没有 logtype 字段，别名记录为 sourcetype 字段，而解析出来的字段名都没有 `logtype.xx` 的前缀——取消logtype前缀可能导致覆盖内置字段、字段类型冲突等隐藏问题，请慎用。
====
##日志的解析##
日志解析的主要作用是抽取您认为重要的字段，例如这样一条日志：
 192.168.1.103 - - [01/Aug/2014:12:07:39 +0800] "GET / HTTP/1.1\" 200 3228 "-" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C)"
要抽取出如下字段：
* "ua" :  "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C)" 
**   "os" : "Windows XP"
**   "os_v" : "Windows XP" 
**   "browser" :  "IE"
**   "browser_v" : "IE 8.0"
**   "device" : "Other" 
* "clientip" :  "192.168.1.103" 
* "status" : 200
* "resp_len" : 3228
* "method" : "GET"
* "version": "1.1" 
数据需要在接入系统前即配置好解析规则，方便您后续根据日志字段来做相关的处理。 下面介绍一下如何配置解析规则。
进入“数据流-字段提取”，可以看到当前的所有字段提取规则列表，自定义规则可以进行编辑、删除等操作。页面右下角提示展开后，也可以跳转到数据流其他配置入口。
image::images/parserule-list.png[]
日志易也提供针对精确 appname/tag 的高级匹配查询，快速过滤指定数据对应的具体字段提取规则：
image::images/parserule-filter.png[]
##新建规则流程##
点击“新建”，进入空白“配置规则”页，可以手动输入日志样例或者点击"事件列表"选择已入库的日志。
image::images/parserule-main-page.png[]
在事件列表弹出层，您可以按需选择过滤时间段，输入搜索字符串进行过滤。在搜索结果中，点击某条日志“选为日志样例”，该行日志即显示在页面上端的“日志样例”文本框；
image::images/parserule-event-list.png[]
##自动生成规则##
在事件列表弹出层底部，有"尝试生成"按钮，点击后，系统可以根据当前最多 100 条事件的文本内容，尝试识别数据格式、解析方案和配置，尽力推荐合适的解析规则配置供用户直接使用。
当前支持识别的数据格式有：CSV、JSON、XML、KV、时间戳和一些规律较为明显的 Grok 正则表达式。
image::images/parserule-auto-gen.png[]
识别如果成功，系统将返回按照该规则解析后的字段名称、字段类型和字段值占比分布情况。用户可以就地调整其中的字段名称，系统会相应调整规则配置或转为字段重命名规则，用户也可以调整字段类型，系统会转为数值类型转换规则。用户还可以勾选设置对 JSON、XML、KV 格式数据的字段是否保留。KV 格式数据下，系统会转为 KV 解析规则的保留字段参数；JSON、XML 格式数据下，系统会转为删除字段规则。
image::images/parserule-auto-gen-modify.png[]
确认无误后，点击弹层右上角生成按钮，规则将自动添加到主配置区域供使用。
##手动添加规则##
当日志格式较为复杂，自动生成失败，用户可以直接在主配置区域左侧点击"添加解析规则"，按需选择并配置解析规则，然后点击"解析"，查看解析结果是否预期。
image::images/parserRule-result.png[]
如果解析结果不符合预期或者规则未匹配时，想编辑/删除已添加的规则，可以参考下图的icon进行操作。
image::images/parserRule-rule-list.png[]
 如果多个解析规则是同一类型，可能在列表上难以区分，日志易会自动将"来源字段"附加展示在规则名称后面。此外，还可以给解析规则定义展示别名：
image::images/parserule-alias.png[]
注意：日志易强制对 raw_message 字段的解析类规则(正则、JSON、XML、CSV、KV)优先执行，时间戳转换规则最后执行。所以左侧列表排序拖动时有一定限制。
单条日志样例解析成功以后，可以打开事件列表弹层，点击"使用检索日志验证"，查看其他日志是否也能解析成功。
image::images/parserRule-match-event.png[]
如果有匹配规则的日志，可在"字段"Tab页，查看这批日志中的字段值统计结果。
image::images/parserRule-match-event-fields.png[]
如果系统中保存有对应数据的字段标准集时，可以选择对应的字段标准集，验证本次解析规则的创建或编辑，是否符合标准。字段标准集的详细说明参见《日志易使用手册》相关章节。
image::images/parserule-match-field-standards.png[]
字段名中的 logtype 前缀同时受 logriver 模块配置及 metadata 规则配置的动态影响，用户需要根据自身情况勾选是否去除。系统也会根据字段标准集中名称是否包含 `.`，以及第一层名称是否全部相同等条件做辅助判断。
如果系统中还没保存对应数据的字段标准集时，也可以点击弹层右上角的"生成字段标准集"按钮，输入标准集名称，将当前数据的解析结果(字段名称和类型)保存为字段标准集。
检索出来有代表性的日志，可以点击日志最右侧的“保存”操作保留起来，在后续编辑规则时，可以跳过搜索步骤，直接从“已存日志”集合中挑选使用，包括选为日志样例和批量验证。
image::images/parserule-savedlog.png[]
此外，你也可以直接手动输入保持为样例供后续使用。已存样例可以跟随提取规则一起导入导出。
配置规则完成，点击"下一步"，页面上“规则名称”和“logtype”必须填写。一般情况下，建议分别作为本次新建字段提取规则的中英文命名。logtype会作为后续解析字段的上层对象名存在。例如logtype:apache解析出来的clientip结果，字段名为apache.clientip。
image::images/parserRule-step2.png[]
在这里一般还需要填写“appname”和“tag”，表示该appname里，带有这个tag的日志，在进入日志易系统时，会运用该解析规则进行日志解析。可以填*表示匹配全部，也可以添加多个appname/tag 对，表示这几个特定appname/tag对下的日志都使用这个解析规则。
当填写 appname 和 tag 均为 `*` 的时候，该规则将优先于同样匹配 `*` 的日志易内置规则执行。
页面下方显示该规则的概要。点击“完成”。返回查看”字段提取”列表，出现新规则和对应的 appname/tag。
日志的格式是多样化的，为了解析这些多样的日志，通常需要多种方法来处理。日志易提供数十种日志格式解析算子，用户每次配置一项算子后，解析成功即可点击“继续”，再配置下一项算子，当您确定所有配置成功后点击“提交配置”。解析算子可以上下移动解析顺序，但注意这样可能会影响解析结果。
下面，开始逐一介绍各种解析算子。
==== 正则解析
正则是处理文本解析的有力工具。需要您了解一些基本的正则表达式知识：
 \, ?, +, *, [], (?:) （?:）
例如有这样一条日志：
 2014-05-14 23:24:47 15752 [Note] InnoDB: 128 rollback segment(s) are active
我们希望提取出以下字段：timestamp，pid，loglevel和message，可以配置如下的表达式：
 (?\S+ \S+) (?\S+) \[(?\S+)] (?.*)
其中\S表示匹配非空格字符，\S+表示匹配连续的非空格字符，(?value) 表示提取名字为key的字段，其值为value，会解析出如下字段：
1. timestamp：2014-05-14 23:24:47
2. pid：15752
3. loglevel：Note
4. message：InnoDB: 128 rollback segment(s) are active
除了正常的正则表达式，我们还提供了一些常用的正则表达式，可以通过%{XXX}的方式来引用。比如可以使用%{NOTSPACE}来代替\S+，这样的正则表达式为：
 (?%{NOTSPACE} %{NOTSPACE}) %{NOTSPACE:pid} \[%{NOTSPACE:loglevel}\] %{GREEDYDATA:message}
默认的字段值是string类型的，如果您想将其转换为number类型，可以在引用中加入type类型，目前仅支持int和float类型，例如：
 %{XXX:int}
或者
 %{XXX:float}
常用的正则表达式
1. 基本：
 %{NUMBER}                (?:%{BASE10NUM})
 %{POSINT}                \b(?:[1-9][0-9]*)\b
 %{NONNEGINT}             \b(?:[0-9]+)\b
 %{WORD}                  \b\w+\b
 %{NOTSPACE}              \S+
 %{SPACE}                 \s*
 %{MORESPACE}             \s+
 %{DATA}                  .*?
 %{GREEDYDATA}            .*
 %{IP}                    略
 %{PORT}                  略
2. Apache/Nginx：
 %{ApcClientIP}
 %{ApcIdent}
 %{ApcUser}
 %{ApcTimestamp}
 %{ApcStatus}
 %{ApcRespLen}
 %{ApcReferer}
 %{ApcUa}
 %{ApcXForward}
 %{ApcRequest}
例如原始日志:
 192.168.1.139 - - [24/Jan/2015:17:03:49 +0800] "GET /api/v0/search/fields/?field=tag&filters=&order=desc&page=1&query=*&size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields HTTP/1.1" 200 363 "http://alltest.rizhiyi.com/search/?query=*&time_range=-2d%2Cnow&order=desc&size=20&page=1&sourcegroup=all&type=timeline&_t=1422088066859&title=%E9%BB%98%E8%AE%A4&index=0" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:35.0) Gecko/20100101 Firefox/35.0"
可以采用如下配置：
 %{ApcClientIP} %{ApcIdent} %{ApcUser} %{ApcTimestamp} %{ApcRequest} %{ApcStatus} %{ApcRespLen} %{ApcReferer} %{ApcUa}
抽取出如下字段：
image::images/parserule-apache.png[]
[NOTE]
====
正则库使用的是完全匹配模式，即正则表达式需要消耗掉整条日志才可以匹配：
%{IP:ip}:%{PORT:port} 不会匹配 2014-10-20 192.168.1.1:8080 和 192.168.1.1:8080 2014-10-20，只会匹配 192.168.1.1:8080
一个正则表达式中字段分组命名的字段不能重复，如果命名的字段有 `@`, `.` 或空格，它们都会被替换成下划线`_`，因此不要使用这些符号。
====
##鼠标划选辅助##
为帮助用户实现正则解析，日志易提供鼠标划选自动生成正则表达式功能：
点击划选辅助：
image::images/parserule-regex-generation.png[]
用鼠标划选字段，然后填写对应的字段名，字段命名成功后即高亮显示。重新点击高亮部分取消划选。
需要提醒的是，辅助划选功能并非十分精确，如果一条样例生成的正则不太对，可以点击添加多个日志样例，使生成的正则表达式更精准。
##多行模式与注释功能##
日志易支持多种通用的正则运行模式。常见的有(?i)忽略大小写和(?x)多行模式。在多行模式下，您可以使用#添加注释说明，在正则表达式比较复杂的时候，有助于维护可读性。
比如如下一行原文：
 /dev/vda1             485M   32M  428M   7% /boot
您可以在正则解析中填入如下正则：
[source]
(?xmi)
^(
   (?\S+) #第一段是磁盘号
   \s+ #空格或制表符分隔
   (?\S+) #总大小
   \s+ #空格或制表符分隔
   (?\S+) #已用大小
   \s+ #空格或制表符分隔
   (?\w+) #可用大小
   \s+ #空格或制表符分隔
   (?\S+) #已用百分比
   \s+ #空格或制表符分隔
   (?\S+) #目录
   \s
)$
[NOTE]
====
多行模式下会自动忽略空格和#注释符。如果表达式中确实需要使用空格和#号，请预先转义。
====