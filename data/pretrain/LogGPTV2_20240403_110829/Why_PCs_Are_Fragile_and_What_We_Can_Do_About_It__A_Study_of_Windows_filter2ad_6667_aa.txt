title:Why PCs Are Fragile and What We Can Do About It: A Study of Windows
Registry Problems
author:Archana Ganapathi and
Yi-Min Wang and
Ni Lao and
Ji-Rong Wen
Why PCs Are Fragile and What We Can Do About It: 
A Study of Windows Registry Problems 
Archana Ganapathi                 Yi-Min Wang                 Ni Lao and Ji-Rong Wen 
    University of California 
Berkeley, CA   
    Microsoft Research     
        Redmond, WA 
     Microsoft Research 
          Beijing, China 
Abstract 
framework 
Software configuration problems are a major source 
of failures in computer systems. In this paper, we present 
a  new 
for  categorizing  configuration 
problems.  We  apply  this  categorization  to  Windows 
Registry-related  problems  obtained 
from  various 
internal  as  well  as  external  sources.  Although 
infrequent,  Registry-related  problems  are  difficult  to 
diagnose  and  repair.  Consequently  they  frustrate  the 
users. We classify problems based on their manifestation 
and the scope of impact to gain useful insights into how 
problems affect users and why PCs are fragile. We then 
describe  techniques  to  identify  and  eliminate  such 
Registry 
failures.  We  propose  health  predicate 
monitoring for detecting known problems, fault injection 
for 
improving  application  robustness,  and  access 
protection mechanisms for preventing fragility problems. 
1.  Introduction 
and 
complex 
for 
interesting 
Windows-based  personal  computers  (PCs)  offer  a 
platform 
software 
interactions. However, undisciplined uses and sharing of 
persistent configuration data by Windows programs have 
made PCs more vulnerable to fragility.  In particular, the 
Windows  Registry  stores  large  quantities  of  complex, 
undocumented  and  unprotected  configuration  data, 
making  it  the  single  most  vulnerable  component  of  the 
Windows  operating system. Understanding and undoing 
Registry damage is a non-trivial task to the average user. 
The problem is as burdensome to system and application 
developers as it is to users. 
In 
this  paper,  we  characterize  how  Registry 
problems impact users and what can be done to alleviate 
and prevent future occurrences. We base our analysis on 
two  sets of real-world failure data. The first set consists 
of  100  common  Registry  problems  from  a  database  of 
Product  Support  Services  (PSS)  email  logs. The  second 
dataset  comprises  100  problems  encountered  by  our 
colleagues and problems posted on various Web forums.  
Through  analysis  of  200  cases,  we  develop  a 
categorization  framework  that  covers  two  orthogonal 
axes.  The  first  dimension  uses  problem  manifestation
and scope of impact to understand the user’s view of PC 
fragility.  The  second  dimension  suggests  monitoring 
techniques, fault injection tactics, and access protection 
mechanisms to alleviate PC fragility.  
An  extended  version  of  this  paper  including  a 
survey of related work and monitoring tools is available 
in  [1].  The  remainder  of  this  paper  is  organized  as 
follows. Section 2 provides an overview of the Registry. 
Section 3 describes two fragility data sets. Sections 4 and 
5  categorize  problems  based  on  manifestation,  impact 
and mitigation techniques. Section 6 concludes.  
2.  Registry Overview  
The  Windows  Registry  provides  a  hierarchical, 
shared  repository  for  named  and  typed  configuration 
data.  This  data  is  accessed  by  the  operating  system  as 
well as application software. The Registry is divided into 
Registry  hives  that  contain  sets  of  keys,  sub-keys  and 
items  pertaining 
to  components  such  as  System, 
Software  and  Hardware.  Registry  hives  distinguish 
between various per-user and system-wide settings. Each 
Registry key in a hive can be  viewed as a directory that 
optionally  contains  sub-keys  and  Registry  items  that 
possess  the  actual  configuration  information  as  typed 
data.  Each  Registry  item  is  accessed  by  navigating 
through a designated path of keys and sub-keys. 
3.  Fragility Data Sets 
We collected data using two methods. First, we used 
text-mining tools to extract data from PSS logs. As logs 
contain  limited  root  cause  analysis  information,  our 
second  dataset  comprised  problems  encountered  by  our 
colleagues  and  Web  forums  users.  We  used  the  Strider 
Troubleshooter 
these 
problems. 
to  diagnose/reproduce 
[3] 
3.1. Text-Mined Data Set (TMDS) from PSS 
We analyzed problems reported by emails to a PSS 
organization during several years spanning 3/20/1997 to 
5/20/2003.  PSS  is  a  technical  support  organization  that 
helps  customers  resolve  problems  by  maintaining  a 
knowledge base of known problems and solutions. Since 
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:05:36 UTC from IEEE Xplore.  Restrictions apply. 
these email case logs do not explicitly identify Registry-
related  problems,  we  used  text-mining  to  automatically 
extract  potentially  relevant  cases  and  then  manually 
eliminated cases with insufficient information.   
 A total of about 2,400,000 problems were reported 
during  this  time  period,  of  which  101,900  (4.4%) 
contained references to a total of approximately 143,157 
Registry  keys/items.  These  references  simply  meant  a 
Registry  entry  was  present  in  the  problem  report,  not 
necessarily  that  it  was  attributed  as  the  cause  for  the 
problem itself. Only 5,266 unique entries were identified 
from  these  reports  as  multiple  references  to  the  same 
Registry entry could be present across various problems. 
We  only chose problems  with sufficient information for 
analysis,  particularly 
summary 
descriptions  provided  by 
the  PSS  engineers.  We 
extracted 10,405 summary-containing problems.   
the  post-mortem 
good  state  and  post-manifestation  bad  state),  and 
intersects it with a trace of operations leading to problem 
manifestation. Finally, it provides a report that ranks the 
potential causal entries based on their likeliness of being 
the actual root cause.  
We  collected  100  problems  from  our  colleagues  as 
well as a helpdesk organization and Web forums such as 
TweakXP.com1  and  Registry  Guide  for  Windows2.  We 
specifically  focused  on  problems  relating  to  Windows 
XP  SP1.  For  problems  with  known  root  causes,  we 
reproduced the mis-configuration to study the symptoms. 
For  problems  without  known  solutions,  we  used  the 
Strider  Troubleshooter  to  identify  the  root  causes  and 
then  manually  verified  the  repairs.  As  there  was  no 
record  of  the  number  of  people  encountering  and 
resolving each problem, we cannot report frequency. 
Distribution of Reported Problems by 
Frequency
4.  Why PCs Are Fragile  
4.1. Problem Manifestation  
l
m
e
b
o
r
p
f
o
s
e
c
n
e
r
r
u
c
c
o
f
o
r
e
b
m
u
N
10000
1000
100
10
1
1
10
100
Problem popularity ranking
Figure 1: This graph presents a Zipf-like distribution 
of 100 most common problems from TMDS. Note that 
both X and Y axes follow a logarithmic scale. 
We grouped multiple repetitions of problems by root 
cause Registry entry (as identified by text-mining tools) 
and  selected  100  most  common  problems  to  analyze. 
The data approximately followed a Zipf distribution [2]. 
As  shown  by  figure  1,  most  problems  were  infrequent 
while a small number of problems impacted a significant 
number  of  users.  The  number  of  occurrences  of  each 
selected  problem  ranged  from  1,947  to  5.  The  top  100 
cases represent approximately 5,379 (more than half) of 
10,405 problems. 
3.2. Strider-Verified Data Set (SVDS) 
To  further  understand  Registry  fragility  problems 
and  experience 
their  manifestation,  we  collected, 
reproduced,  and  resolved  Registry  problems  using  the 
Strider Troubleshooter [3, 4]. This tool performs a “diff” 
operation  of  two  Registry  snapshots  (e.g.  pre-problem 
changing 
the 
data 
example, 
PC fragility manifestation on users’ machines can be 
classified  into  seven  distinct  categories,  enumerated 
below. In cases where a problem had several symptoms 
that mapped simultaneously into more than one category, 
we selected the most representative/impacting symptom.  
(1)  Unstable/unusable  system  –  Certain  Registry  mis-
configurations  cause  severe  loss  of  critical  functionality 
and/or open avenues for the system to  be compromised. 
For 
of 
HKEY_LOCAL_MACHINE\software\Microsoft\windows
NT\currentversion\Winlogon\Userinit 
from 
“C:\WINDOWS\system32\userinit.exe,” 
to 
“C:\WINDOWS\system32\userinit.exe;”  prevents  user 
login to the machine, making the system unusable. 
(2) Cannot perform a function or action – Sometimes, 
a user is unable to perform a desired task such as sending 
e-mail  or 
if 
HKEY_CLASSES_ROOT\.mp3\PerceivedType  has  data 
value  other than  “audio”  (e.g.  “text”),  “Play  All”  in  the 
“My Music” folder does not play .mp3 files.  
(3) Unanticipated response – Users are often confused 
and 
their  action  causes  a  new 
unanticipated  response.  For  example,  double  clicking  a 
folder  opens  a  search-results  window  instead  of  the 
folder 
the 
HKEY_CLASSES_ROOT\Directory\shell\(Default)
Registry item’s data is empty.  
(4)  Unanticipated  side-effect  –  Some  side-effects  are 
caused  by  bad  program  design.  Moreover,  what  is 
acceptable  within  an  application’s  specification  can  be 
an  unpleasant  side-effect  to  the  user.  For  example, 
invoking  a  program.  For  example, 
frustrated  when 
itself, 
when 
1 http://www.tweakxp.com 
2 http://www.winguides.com/forums
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:05:36 UTC from IEEE Xplore.  Restrictions apply. 
installing a new CD burner renames the “A” drive to “H” 
drive  and  produces  an  error  when  a  user  types  “A:\” 
from Start menu(cid:198)Run to open the floppy drive.    
(5)  Cannot  locate  user  interface  to  perform  a  task  – 
Sometimes,  a  user  interface  is  concealed  below  several 
levels of menus. For example, Internet Explorer asks if it 
should  save  a  user’s  password  to  a  particular  website. 
Once the user selects the “Don't offer to remember any 
more  passwords”  option  in the  pop-up  dialog  box,  it  is 
difficult  for  the  user  to  restore  Internet  Explorer’s 
settings so that it prompts to remember passwords. 
(6)  User  interface  disappears  but  functionality  is 
preserved – In some cases, the user interface for a task 
is  either  absent  or  tainted.  However,  this  task  can  be 
executed  by  other  means  such  as  command-line 
invocation. For example, a user may be unable to access 
Internet  Options  from  Internet  Explorer.  However,  the 
same  configuration  set  is  accessible  from  the  Control 
Panel.  Similarly,  Control  Panel(cid:198)Network  Connections
may reveal nothing if a UI-related key is deleted, but all 
network connections remain intact. 
(7)  Program  adaptation  or  automation  is  performed 
in  an  unexpected  manner  –  Automation  decisions 