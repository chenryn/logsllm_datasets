1 − k
C − c
C
· n,
where packets i > n(c) cannot be admitted, and packets i ≤ n(c)
will be admitted. Note that n(c) is decreasing with respect to c.
Consider the following two queue length thresholds:
(cid:5)
n∗ + 1
n
(cid:6)
(cid:6)
(cid:5)
n∗
n
c− =
1 −
(1 − k)
C,
c∗ =
1 −
(1 − k)
C.
• if c ≤ c−
Clearly 0  γ , i.e., the total incoming
rate is strictly greater than the total outcoming rate, thus the
queue length increases;
we have
j ≤n∗+1



• if c > c∗
, all packets i ≥ n∗
we have
cannot be admitted. By the choice
of n∗
λj  n∗
We discuss two cases:
– if
, all packets i ≤ n∗
will not be admitted. Note that
will be admitted, and all
j ≤n∗ λj ≥ γ .

j ≤n∗ λj = γ , then the system reaches its stationary
state at the first time when the queue length satisfies c−  γ , then the queue length keeps increases
until it becomes larger than c∗
, and falls into the previous
category hence the length decreases then. In sum the sys-
tem reaches its stationary state with queue length being
c∗
. Moreover, due to the negative feedback principle, in
the stationary state, the incoming rate/outcoming rate of
packet n∗
would be γ −

– if
In sum, at the stationary state, we have the following: for the pack-
ets i  n∗,
incoming/outcoming rate is γ −

the incoming/outcoming rate is 0. Moreover, we can also compute
j ≤n∗ λj = γ , the queue
the queue length at the stationary state: if
length at the stationary state satisfies c−  γ ,
(cid:2)
the queue length at the stationary state is c = c∗
;

i  n∗ + 1, it cannot be admitted.
For AIFO, the queue is filled with packets i ≤ n∗. The AIFO
outputs packets in the queue in a random sequence (since their
arrival time is random). The AIFO admits packets according to the
rule specified before: packets i ≤ n∗ will be admitted, and packets
i > n∗ cannot be admitted.
For FIFO, the queue is filled with all kinds of packets, and the
number of each type of packets are proportional to their sending
rate. And the packets are admitted and output at random.
Remark 3. So long as we assume the system stays in its stationary
state for sufficiently long time, its behavior would be nearly decided
by that in the stationary state.
B PROOF OF THEOREM 2
Let t0 be the maximum of the time for the AIFO and PIFO reaching
its stationary state. Suppose the sending rate of a packet is at most
M. Recall that from t0 to T , ai (t ) = pi (t ) as shown in the theorem.
Then we have the following estimation:
Note that for both the systems, at the stationary state (t > t0),
the total incoming/outcoming rate is constant γ , i.e.,
pi (t ) =
n
i =1
n
i =1
ai (t ) = γ . Then we have
n
(cid:5)∫ T
∫ T
(cid:6)
i =1
t =t0
pi (t )dt +
t =t0
ai (t )dt
= 2γ (T − t0),
192
(cid:4)
(pi (t ) − ai (t ))dt |
(cid:4)
t =t0
ai (t )dt
∫ T
∫ T
t =0
t =0
pi (t )dt −
ai (t )dt |
pi (t )dt +
ai (t )dt
(pi (t ) − ai (t ))dt | + |
(cid:3)∫ T
n
n
n
i =1
i =1
i =1
|
t =0
t =0
∫ T
(cid:3)∫ T
(cid:3)
∫ t0
n
∫ t0
t =0
|
pi (t )dt +
t =0
i =1
(pi (t ) − ai (t ))dt |
|
i =1
i =1
n
(cid:3)∫ T
n
(cid:3)∫ T
n
(cid:3)∫ T
n
i =1
t =0
t =0
i =1
t =t0
t =0
∫ T
∫ T
∫ T
t =0
t =0
pi (t )dt +
nM · t0
pi (t )dt +
nM · t0
pi (t )dt +
t =t0
ai (t )dt
ai (t )dt
(cid:4) .
ai (t )dt
(cid:4)
∫ T
∫ T
(cid:4)
(cid:4)
t =0
Δ(T ) =
≤
=
≤
≤
Programmable Packet Scheduling with a Single Queue
SIGCOMM ’21, August 23–28, 2021, Virtual Event, Netherlands
rate at its stationary state. Therefore for any small tolerance ϵ > 0,
let the running time T be
T > t0 +
nMt0
2γϵ
,
Δ(T ) < ϵ .
which implies
Δ(T ) ≤
≤
t =t0
i =1
nM · t0
2γ (T − t0)
n
(cid:3)∫ T
nM · t0
pi (t )dt +
∫ T
t =t0
(cid:4)
ai (t )dt
.
we have
Note that (1) the nominator is a constant that is independent of T ;
and (2) the denominator keeps cumulating with constant non-zero
To sum up, if the system run for sufficiently long time, the difference
between PIFO and AIFO tends to be negligible.
193