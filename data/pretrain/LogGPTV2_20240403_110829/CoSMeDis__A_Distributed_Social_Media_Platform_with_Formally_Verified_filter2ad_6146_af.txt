i
j
), (σ j, a j, o j, σ(cid:6)
j
))
i
Figure 6: Transitions of an n-component distributed system
The product is denoted by ∏match
k∈{1,. . .,n}Autk. Its states are
families (σk)k ∈ ∏k∈{1,. . .,n} Statek. The transition relation is
shown in Fig. 6, where, to avoid ambiguity, we use labeling
to indicate the components not only for separate actions or
outputs, but also for communicating actions or outputs, e.g.,
((i, ai), ( j, a j)). We write (σk)k[i := σ(cid:6)
] for the family of states
that is the same as (σk)k, except for the index i where it is
updated from σi to σ(cid:6)
, j := σ(cid:6)
].
j
Given BD Security properties (Pk) for Autk, their composi-
tion ||k∈{1,. . .,n}(Pk) is deﬁned as an immediate generalization
of the binary case. E.g., the observation domain is
Obsk × Obsk(cid:6)
i; and similarly for (σk)k[i := σ(cid:6)
Obsk + ∑
Obs = ∑
i
i
k∈{1,. . .,n}
k,k(cid:6)∈{1,. . .,n}
∗)
(cid:6) ∈ ||(sl
k → Pow(Sec
∗
|| : ∏k∈{1,. . .,n} Obs
(cid:6)) is deﬁned from the component bounds:
k)k. sl ∈ ||(slk)k ∧ sl
(cid:6)
|| : ∏k∈{1,. . .,n} Tracek → Pow(Trace)
|| : ∏k∈{1,. . .,n} Sec
∗)
k → Pow(Obs
∗
so that it contains either separate observations (k, ok) or joint
observations (k, ok, k(cid:6), ok(cid:6)). Assuming that each pair of attacker
models have compatible communication infrastructure consist-
ing of matchk,k(cid:6), matchSk,k(cid:6), and matchOk,k(cid:6), n-ary shufﬂe
operators are deﬁned:
• for traces,
• for secrets,
• for observations,
Similarly to the binary case, the composite trigger is deﬁned
as the disjunction of the component triggers and composite
bound B(sl, sl
k)k → ∀k. Bk(slk, sl
∀(slk)k, (sl
(cid:6)
(cid:6)
k)
Now a generalization of Theorem 1 can be formulated.
Most of the assumptions are those of Theorem 1 applied to
all pairs Autk and Autk(cid:6). An exception is secret polarization,
which needs strengthening. We call the n component attacker
models uniquely secret-polarized if there is a unique secret
issuer, say, Auti, in the network. Formally: for all k (cid:10)= i and
Autk-transitions trn, isSeck(trn) implies isComk,i(actOfk(trn)).
Theorem 3. Assume that the following properties hold for
the I/O automata Aut1, . . . , Autn with BD-security properties
(P1), . . ., (Pn) and communication infrastructure match:
• communication is pairwise dedicated
• the communication infrastructure between any two compo-
• any two attacker models have observable network trafﬁc
• the attacker models are uniquely secret-polarized
If each (Pk) holds for Autk, then || k∈{1,. . .,n} (Pk) holds for
∏match
k∈{1,. . .,n}Autk.
nents is compatible and strong
Thus, the generalization to the n-ary case proceeds fairly
smoothly, with the nuance that a single source of secrets is
allowed in the whole network.
739
Back to CoSMeDis, to capture our concrete (P”), matchk,k(cid:6)
is deﬁned just like in the binary case (shown in Fig. 1), but
using the identiﬁers NIDk and NIDk(cid:6) for Autk and Autk(cid:6) instead
of NID1 and NID2. Now (P”) follows from this theorem along
with the transfer theorem—the latter being used to customize
the bound, similarly to the binary case.
VII. VERIFYING COSMEDIS’S CONFIDENTIALITY
We employ the last section’s results to prove ﬁne-grained
declassiﬁcation bounds for CoSMeDis’s information sources.
A. Veriﬁed Properties
Our running example of a conﬁdentiality property had the
form: Nothing is inferable about a given secret (a post content)
unless a trigger is being ﬁred. The properties we had proved for
the original CoSMed actually made stronger claims: Nothing
is inferable about a given secret beyond the trace portions
during which a trigger is active, i.e., when the observers’
access to the secret is legitimate. This makes it possible to
consider dynamic triggers, which can be repeatedly ﬁred and
canceled. For example, a user can become a friend of the post’s
owner, but later the friendship can be canceled by either user
“unfriending” the other—only post updates performed outside
the times of friendship should be protected from that user.
Technically, in the stronger properties the trigger is “swal-
lowed” by the bound. So the price for the gained strength
in conﬁdentiality is a more complex bound, which operates on
an enriched domain of secrets that include trigger information.
For post conﬁdentiality, the domain of secrets now consists not
only of post contents, (psec, pst), but also of openness indica-
tors, (osec, b), where b is a Boolean ﬂag indicating whether
the legitimate access window is open. The secret-producing
function returns osec b only if the openness status changes,
with b indicating the new status—e.g., b becomes True when
an observer is marked as friend, and becomes False if the last
observer is unfriended (and the other legitimate access condi-
tions fail as well, e.g., the admin is not an observer). These
indicators are used to formulate the bound in an access-window
sensitive way. For example, if a trace produces the secrets
(cid:7)(osec, True), (psec, pst1), (osec, False), (psec, pst2)(cid:8), then the
bound protects pst2, but not pst1. This is because the update
pst1 occurred in a phase of the system execution where the
observers had legitimate access to the post content, whereas
the access window was closed before pst2 occurred [12, §3.3].
Fortunately, our policy-agnostic theorems smoothly accom-
modate such complex bounds as well. In fact, the instantiation
of the compositionality result works almost exactly the same.
The only difference is that we work with a notion of secret that
was already enriched with openness indicators. The amend-
ment with communicating secrets is orthogonal—we partition
the secrets of the form (psec, pst) in two categories, for update
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:28:13 UTC from IEEE Xplore.  Restrictions apply. 
Observers
Secrets
Bound
Group of users, UIDs
Content of a given post,
say, PID
Friendship status between
two given users,
say, UID1 and UID2
Friendship requests between
two given users,
say, UID1 and UID2
Updates performed while or last before one of the following holds:
Some user in UIDs is the admin, is the post owner or is friend with the post owner
PID is marked as public
Status changes performed while or last before the following holds:
Some user in UIDs is the admin or is friend with UID1 or UID2
Existence of accepted requests while or last before the following holds:
Some user in UIDs is the admin or is friend with UID1 or UID2
Figure 7: Conﬁdentiality properties for the original CoSMed
Observers
Secrets
Bound
n group of users,
UIDs1, . . . , UIDsn,
one for each node
Content of a given post,
say, PID of node NIDi
Friendship status between
two given users, say,
UID1 and UID2 of NIDi
Friendship requests between
two given users, say,
UID1 and UID2 of NIDi
Updates performed while or last before one of the following holds:
Some user in UIDsi is NIDi’s admin, is PID’s owner or is friend with PID’s owner
PID is marked as public
Some user in UIDs j for j (cid:10)= i is admin or remote friend with PID’s owner
Status changes performed while or last before the following holds:
Some user in UIDsi is NIDi’s admin or is friend with UID1 or UID2
Existence of accepted requests while or last before the following holds:
Some user in UIDsi is NIDi’s admin or is friend with UID1 or UID2
Figure 8: Conﬁdentiality properties for CoSMeDis, lifted from CoSMed
and send: (psec, (upd, pst)) and (psec, (snd, pst)). Our bound
extension (adding the correlation predicate) is also orthogonal.
The discussion leading to the compositionality theorems
yields a heuristic for concretely achieving compositionality:
Starting with a proved CoSMed instance of BD Security,
split it in two CoSMeDis properties by identifying a secret
issuer and a secret receiver; then strengthen the properties
so that communication is acknowledged by both sides and
has its non-conﬁdential part observable; ﬁnally, adjust
the
bound to account for the new correlations introduced during
strengthening. (Appendix B gives more details.)
We have used this heuristic to extend to CoSMeDis all
the properties proved for the original CoSMed, summarized in
Fig. 7—where the triggers are always vacuously false (since
they are “swallowed” by the bounds) and the observers are
always a given set of users. In Fig. 8, we summarize the end
product after lifting these to CoSMeDis via our theorems.
Besides the already discussed post conﬁdentiality, there are
conﬁdentiality properties regarding friendship status, i.e., the
information on whether two users are friends, and friendship
requests, i.e., the information on whether a user has issued a
friendship request to another user. In both cases, the legitimate
access windows are deﬁned to mean that an observer is the
admin or is currently friends with either of the involved users.
The application of our compositionality theorem to the
conﬁdentiality of friendship status and requests is easier than
for post conﬁdentiality. Unlike the latter, the former does not
involve sharing secrets between nodes. Consequently, as seen
in the corresponding entries in Figs. 7 and 8, the bound of
the distributed system is the same as that of a single node. In
addition to local friendship, we also verify conﬁdentiality of
remote friendship, as detailed in Appendix C.
B. Veriﬁcation Technology Aspects
As discussed in Section IV-C,
the functionality of
CoSMeDis nodes has been speciﬁed in Isabelle as a particular
I/O automaton, extending the previously formalized CoSMed
I/O automaton—and this formed the basis of the nodes’
implementation, via code extraction.
Our veriﬁcation focused on the network formed of copies
of this I/O automaton. First, we formalized Section VI’s
abstract theorems. The heart of Theorem 1, depicted in Fig. 5,
is the construction of the alternative composed trace from
two component traces tr1 and tr2 (whose observations and
secrets have already been composed). The construction takes
advantage of the assumed strength of communication and ob-
servations to deﬁne suitable compound-system transitions one
at a time. It is guided by a tedious series of case distinctions: on
whether the current compound-system observations and secrets
were produced individually or by matching, on whether each
of them is secret or observable, etc. Theorem 3 is proved
inductively by iterating Theorem 1, the secret-issuer being
composed with the other nodes, one at a time. The main
difﬁculty with the transport Theorem 2 was its formulation
as sufﬁciently expressive to capture our cases of interest.
Once properly formulated, it followed by a straightforward
manipulation of the quantiﬁers in the deﬁnition of BD security.
For the above theorems, we employed Isabelle’s structured
Isar proof language [63], which allowed us to document the
nontrivial parts of the proofs (e.g., crucial case distinctions) in
a mathematician’s “pen-and-paper” style, while dismissing the
trivial parts in an engineer’s style, using automatic methods (cf.
Appendix D). For example, the impossible cases in the proof
of Theorem 1 (those that would contradict our assumptions)
were discharged immediately without even spelling them out.
To facilitate the instantiation of these theorems, we proved
740
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:28:13 UTC from IEEE Xplore.  Restrictions apply. 
them within Isabelle modules called locales [37], which allow
for the development of theorems parameterized by abstract data
and assumptions. The locales automate the process of instan-
tiating the theorems: The user provides concrete instances for
the data and discharges the assumptions; in exchange, they
obtain an unconditional version of the theorems for the given
instance. For example, for Theorem 1 the data parameters were
two I/O automata, two security properties, and a communi-
cation infrastructure. To anticipate our speciﬁc instantiations,
we combined Theorems 3 (for n-ary composition) and 2 (for
massaging the bound) into a single theorem, which is informed
by a particular CoSMeDis aspect: The bound of the secret
source is stronger than that of the other components, meaning
it can be used (via Theorem 2) as the bound of the composite.
The compositionality framework took 5700 LOC and was
built on top of a previously formalized framework for BD
security (consisting of 1800 LOC). The system speciﬁcation
comprises 1500 LOC. As expected, the veriﬁcation of the
concrete instances (listed in Section VII-A) constituted the
bulk of the development, 14400 LOC. The veriﬁcation of each
instance had two components: (1) proofs for the security of
individual nodes and (2) veriﬁcations of the conditions for
compositionality (leading to the corresponding instantiation of
the locale).
For all but one case (remote friendship), we started with
properties of CoSMed and split them into secret issuer and
receiver properties for CoSMeDis, as prescribed by our heuris-
tic. The original proofs for CoSMed were elaborate interactive
proofs by unwinding [12, §4]. Their adaptation to CoSMeDis,
with strengthening the attacker power, also went according to
our heuristic. Nevertheless, this was laborious: The original
proof scripts broke in places located deep inside nested case
distinctions, hence to adapt them we needed to analyze large
proof contexts. Due to the more complex bounds, the proofs
for secret issuers were larger (and more time consuming) than
those for the receivers. The average size of a proof for the
former was 1500 LOC, about twice as large as for the latter.
In contrast to the unwinding proofs, the veriﬁcation of the
compositionality conditions was almost entirely automatic—
thanks to the conditions being local (involving only actions
and states, no traces or sequences of secrets). Indeed, a case
distinction on all the CoSMeDis actions followed by “auto”
(Isabelle’s main automatic proof method) usually did the job,
after instrumenting “auto” with the necessary simpliﬁcation
rules. The average size of an instantiation ﬁle, 150 LOC,
mainly reﬂects the boilerplate for locale instantiation.
Overall, the veriﬁcation of CoSMeDis consists of 21600
LOC, which required 4 person-months (including the for-
malization of the abstract framework, which involved trial
and error). These followed as an extension of CoSMed’s
veriﬁcation, consisting of 10000 LOC and having required 3
person-months. A large part of the CoSMeDis proofs were
not developed from scratch, but as adaptations of previous
CoSMed proofs. Together, these adapted proofs form 10000
LOC, of which roughly 8000 LOC are reused from CoSMed.
VIII. DISCUSSION
Our formalized results are comprehensive with respect to
CoSMeDis’s high-level information ﬂow, in that they cover all
the secret sources of interest and establish ﬁne-grained bounds
for their ﬂows. However, the formulation of conﬁdentiality
as BD security incurs the inherent limitations of possibilistic
notions [38, §4.3]. For example, assume that
the attacker
can learn of the existence of close-in-time updates to posts
belonging to two users. Then, also depending on other trafﬁc
information, he could infer a high probability of friendship
between those users. This kind of attack cannot be captured by
BD security, which would still proclaim that nothing is learned
about the friendship status, since, as far as the attacker knows,
both friendship and lack of friendship are possible.