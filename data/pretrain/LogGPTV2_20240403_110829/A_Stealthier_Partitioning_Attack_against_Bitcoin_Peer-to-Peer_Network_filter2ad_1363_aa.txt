title:A Stealthier Partitioning Attack against Bitcoin Peer-to-Peer Network
author:Muoi Tran and
Inho Choi and
Gi Jun Moon and
Anh V. Vu and
Min Suk Kang
2020 IEEE Symposium on Security and Privacy
A Stealthier Partitioning Attack against Bitcoin Peer-to-Peer Network
Muoi Tran
National University of Singapore, {muoitran, inhochoi, kangms}@comp.nus.edu.sg
, Gi Jun Moon
‚Ä† (cid:2), Anh V. Vu
‚Ä° (cid:2), Min Suk Kang
‚àó
‚àó
, Inho Choi
‚àó
‚àó
‚Ä°
‚Ä†
Korea University, PI:EMAIL
Japan Advanced Institute of Science and Technology, PI:EMAIL
Abstract‚ÄîNetwork adversaries, such as malicious transit au-
tonomous systems (ASes), have been shown to be capable of
partitioning the Bitcoin‚Äôs peer-to-peer network via routing-level
attacks; e.g., a network adversary exploits a BGP vulnerability
and performs a preÔ¨Åx hijacking attack (viz. Apostolaki et al. [3]).
Due to the nature of BGP operation, such a hijacking is globally
observable and thus enables immediate detection of the attack
and the identiÔ¨Åcation of the perpetrator. In this paper, we present
a stealthier attack, which we call the EREBUS attack, that
partitions the Bitcoin network without any routing manipulations,
which makes the attack undetectable to control-plane and even
to data-plane detectors. The novel aspect of EREBUS is that it
makes the adversary AS a natural man-in-the-middle network of
all the peer connections of one or more targeted Bitcoin nodes
by patiently inÔ¨Çuencing the targeted nodes‚Äô peering decision.
We show that affecting the peering decision of a Bitcoin node,
which is believed to be infeasible after a series of bug patches
against the earlier Eclipse attack [29], is possible for the network
adversary that can use abundant network address resources
(e.g., spooÔ¨Ång millions of IP addresses in many other ASes)
reliably for an extended period of time at a negligible cost. The
EREBUS attack is readily available for large ASes, such as Tier-1
and large Tier-2 ASes, against the vast majority of 10K public
Bitcoin nodes with only about 520 bit/s of attack trafÔ¨Åc rate
per targeted Bitcoin node and a modest (e.g., 5‚Äì6 weeks) attack
execution period. The EREBUS attack can be mounted by nation-
state adversaries who would be willing to execute sophisticated
attack strategies patiently to compromise cryptocurrencies (e.g.,
control
take down a cryptocurrency, censor
transactions). As the attack exploits the topological advantage
of being a network adversary but not the speciÔ¨Åc vulnerabilities
of Bitcoin core, no quick patches seem to be available. We
discuss that some naive solutions (e.g., whitelisting, rate-limiting)
are ineffective and third-party proxy solutions may worsen the
Bitcoin‚Äôs centralization problem. We provide some suggested
modiÔ¨Åcations to the Bitcoin core and show that they effectively
make the EREBUS attack signiÔ¨Åcantly harder; yet, their non-
trivial changes to the Bitcoin‚Äôs network operation (e.g., peering
dynamics, propagation delays) should be examined thoroughly
before their wide deployment.
the consensus,
I. INTRODUCTION
The robust consensus among large numbers of untrusted
nodes is undoubtedly one of the most important technical
underpinnings of cryptocurrencies and it can only be achieved
with highly dependable peer-to-peer networks. Particularly,
the peer-to-peer network of Bitcoin [35], one of the most
successful cryptocurrencies, has been an attractive target of
attacks in recent years. Notably,
the Bitcoin hijacking at-
tack [3] demonstrates that a network adversary (e.g., a Tier-1
or Tier-21 transit autonomous system (AS)) can manipulate
the inter-domain routes for a set of selected Bitcoin nodes
and ultimately partition the Bitcoin‚Äôs peer-to-peer network.
The attack exploits the well-known BGP preÔ¨Åx hijacking
vulnerability [8] to redirect all the peer connections of the
selected nodes to the adversary AS, effectively controlling all
of their peer communications.
The Bitcoin hijacking attack, however, has a serious draw-
back due to the nature of BGP operation. That is, the real iden-
tity of the perpetrator (i.e., the malicious AS) is immediately
revealed to the public.2 This can be a critical disadvantage to
large ASes with reputation.
In this paper, we present a stealthier Bitcoin attack, which
we call the EREBUS3 attack, that allows a network adversary
to control the peer connections of a targeted Bitcoin node (i.e.,
the same attack capabilities and goals as the Bitcoin hijacking
attack [3]) without any route manipulation, thus leaving no
control-plane evidence of attacks. Since the attack uses only
data-plane attack messages, it is undetected by any control-
plane monitoring systems (e.g., public [39], [47] or private
BGP monitors [9]); even if data-plane traces of the attack are
captured, the perpetrator can easily deny the execution of the
attack. The EREBUS attack is shown to be readily available
for Tier-1 or large Tier-2 ISPs to target the vast majority
of 10K Bitcoin nodes in the system that accept incoming
connections from other peers. Thus, nation-state adversaries,
who may control large transit ISPs, are able to mount the
EREBUS attack.
Figure 1 illustrates the high-level overview of the EREBUS
attack, focusing on how an adversary AS network manages
to control all (only two shown here) the peer connections of
a targeted victim Bitcoin node. Instead of manipulating the
underlying routing protocols, the adversary AS changes the
existing outgoing peering connections (see the dashed blue
arrows) of a victim node (in AS V ) to the new connections
(see the solid red arrows) with the Bitcoin nodes (in AS C
and D) whose victim-to-node inter-domain paths include the
adversary AS M . As a result, the adversary AS is eventually
placed on the paths of all the peer-to-peer connections of
the victim node. It is worth noting that inÔ¨Çuencing a remote
Bitcoin node‚Äôs peering decision is believed to be infeasible
1Note that not all networks are eligible for the Bitcoin hijacking attack
because some ASes (e.g., single-homed Tier-3 ASes) cannot launch BGP
interception attacks; viz. the analysis on BGP hijacking and interception [8].
2As an anecdotal evidence, a Canadian ISP hijacked Bitcoin preÔ¨Åxes in
(cid:2)This research was done while the authors were working as interns at
2014 and faced backlash from the media [45].
National University of Singapore.
3EREBUS is ancient Greek for ‚Äúshadow‚Äù or ‚Äúdarkness‚Äù.
¬© 2020, Muoi Tran. Under license to IEEE.
DOI 10.1109/SP40000.2020.00027
894
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:22 UTC from IEEE Xplore.  Restrictions apply. 

			


        
 
  
    
      
	






	
	


			

				
	
	
Figure 1: High-level overview of the EREBUS attack. A
malicious autonomous system (AS) M indirectly switches all
the peer connections of a targeted Bitcoin node in the AS V to
the other carefully-chosen Bitcoin nodes to locate itself in the
middle of all peer connections of the victim node. This attack
does not require any route manipulation (e.g., hijacking BGP
paths), rendering itself undetectable by control-plane anomaly
detection systems.
the EREBUS network adversary can still affect
with the up-to-date Bitcoin core (version 0.18.0) [11] because
all the related bugs have been Ô¨Åxed after the earlier Eclipse
attacks [29]. To be speciÔ¨Åc, a remote attacker with thousands
of bots can no longer force a targeted Bitcoin node to connect
to her bots exclusively. We show that, contrary to the common
the
belief,
peering decision of a Bitcoin node. Our attack is feasible
not because of any newly discovered bugs in the Bitcoin core
implementation but the fundamental topological advantage of
being a network adversary; that is, our EREBUS adversary
AS, as a stable man-in-the-middle network, can utilize a large
number of network addresses (e.g., impersonating millions or
more valid IP addresses) reliably over an extended period of
time (e.g., several weeks or more).
Our tests with four-month Bitcoin measurement data show
that any Tier-1 or large Tier-2 ASes can control a Bitcoin node
with only small bandwidth budget (e.g., 520 bit/s per targeted
node) and modest (e.g., 5‚Äì6 weeks) attack execution periods,
which can be further shortened via an adaptive attack strategy.
Note that the EREBUS adversary AS can concurrently attack
multiple, carefully-chosen Bitcoin nodes (e.g., gateways of
popular mining pools) for a strong Bitcoin partitioning attack.
As the EREBUS attack does not exploit speciÔ¨Åc vulnera-
bilities of the Bitcoin core implementation, no simple, quick
patches seem to be available. We Ô¨Årst describe naive and
ineffective solutions, such as route measurements/simulation
for attack detection, or whitelisting or rate-limiting for attack
prevention. Then, we discuss third-party proxy based solu-
tions (e.g., SABRE [2]), which may undermine the Bitcoin‚Äôs
philosophy of decentralization. Finally, we suggest several
effective countermeasures that require non-trivial changes to
the Bitcoin core. We test the effectiveness of the suggested
countermeasures and discuss the potential concerns for their
wide deployment.
This paper targets Bitcoin as it is one of the most investi-
gated blockchain systems. The EREBUS attack can potentially
have similar attack effectiveness against many other cryptocur-
rencies that have peer-to-peer network protocols similar to
Bitcoin (e.g., Litecoin, Dash, Zcash). In fact, we found 19
such cryptocurrencies out of the top 50 on the market [17]; see
Table I in Appendix A. We leave the evaluation of the EREBUS
attack on the other cryptocurrencies for future works.
II. BACKGROUND: PARTITIONING BITCOIN NODES
As a background of partitioning attacks against Bitcoin peer-
to-peer network, we review the main motivations of these
attacks (¬ßII-A). Then, we brieÔ¨Çy review the two most notable
the Bitcoin hijacking [3] (¬ßII-B) and the
existing attacks:
Eclipse attack [29] (¬ßII-C).
A. Motivations for Partitioning Bitcoin Network
We list some common objectives for partitioning Bitcoin
network:
‚Ä¢ Attacking Bitcoin consensus. An adversary who partitions
a set of miners can waste their mining efforts by stalling
the transmission of the latest blockchain state to them.
Partitioning a fraction of miners (e.g., 30%) from the rest
of the network can make an adversary, who even does
not control the majority of the mining power (e.g., 40%),
launch the 51% attack [35]. Moreover, the adversary can
hijack the computation power of the partitioned miners to
mine her blockchain in the selÔ¨Åsh mining attacks [19],
[24], [43], [36]. Also, the partitioned Bitcoin nodes (e.g.,
nodes connected to merchants, exchanges or SPV clients)
are vulnerable to double-spending attacks [30], even after
cautiously waiting for some block conÔ¨Årmations on the
blockchain [29].
‚Ä¢ Attacking Bitcoin‚Äôs off-chain protocols. Marcus et al. [31]
sketch an attack on blockchain layer-two protocols, such
as Bitcoin‚Äôs Lighting Network [38], using the capability
of partitioning Bitcoin nodes. The adversary prevents the
partitioned victim node from settling the payment channels
on the blockchain and steals the victim‚Äôs funds from her
off-chain transactions.
‚Ä¢ Taking down cryptocurrencies. A powerful adversary, such
as a nation-state attacker, may even aim to disrupt a large
portion of the underlying peer-to-peer network of a cryp-
tocurrency. At a small scale, the adversary can arbitrarily
censor the transactions from the victim.
B. Bitcoin Hijacking and Drawbacks
The Bitcoin hijacking [3] adversary hijacks the trafÔ¨Åc to-
ward the most-speciÔ¨Åc (e.g., up to /24) IP preÔ¨Åxes that include
the IP addresses of the targeted Bitcoin nodes using BGP
hijacking [8]. When the adversary AS hijacks all the inter-
domain routes of the nodes, she controls (e.g., inject, drop,
modify, delay) the Bitcoin messages of the targeted nodes.
Also, the Bitcoin hijacking attack presents several algorithms
to Ô¨Ånd the set of targeted Bitcoin nodes that have to be hijacked
together to isolate all of them from the rest of the peer-to-peer
network with high probability.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:22 UTC from IEEE Xplore.  Restrictions apply. 
895
The main drawback. One major drawback of the Bitcoin
hijacking attack is that the attacker‚Äôs identity is revealed to
the public immediately (e.g., 5‚Äì10 minutes) after the attack is
launched. It is well known that BGP hijacking messages for
Bitcoin hijacking attacks are propagated to the entire Internet
and thus eventually observed by the global route monitoring
systems (e.g., RIPE [39], RouteViews [47]); see an AS-level
BGP simulation result on this [46]. When the Bitcoin hijacking
messages are captured by the route monitoring systems, the
perpetrator of an attack is easily identiÔ¨Åed because its AS
number must be included in the hijacking messages.
This is a serious disadvantage to large network adversaries
who already have established some reputation in the transit
business. Worse yet, if launched by a nation-state attacker
(viz., the powerful routing and network capabilities of nation-
state attackers [32]), the Bitcoin hijacking attack could create
huge undesirable political controversies after the perpetrator is
disclosed.
Our BGP measurement study in Appendix B shows that
(potentially because of this main drawback) there has been no
sign of Bitcoin partitioning attacks in the four-month period
in 2018.
C. Eclipse Attacks and Countermeasures
As brieÔ¨Çy reviewed earlier, the Eclipse attack [29] directly
manipulates the victim Bitcoin node‚Äôs peer selection decision.
A Bitcoin node maintains many connections with other peers
via both incoming peer connections (i.e., connections initiated
by other peers) and outgoing peer connections (i.e., connec-
tions initiated by the node itself). When choosing the outgoing
connections, the Bitcoin node chooses the peer IP addresses
from its internal database, particularly, the new (containing IP
addresses learned from its peers) and tried (containing IP
addresses the node has ever connected to) tables.
Before the Eclipse attack was introduced, the Bitcoin pro-
tocol had several vulnerabilities in managing and utilizing the
IP addresses in the two tables. Namely, any remote adversaries
were able to Ô¨Åll both tables of a targeted node with any
arbitrary IP addresses with minimal effort, thus ultimately
controlling the peer connection decision of the targeted node.
Deployed countermeasures. The Bitcoin community quickly
patched these vulnerabilities. The most notable one among
several countermeasures is the ban on direct access to one of
the two tables (i.e., tried table) from any remote attackers.
As a result, an attacker can only directly Ô¨Åll the other table
(i.e., new table) but not both. Moreover, Ô¨Ålling the new table
has become much harder after the patches. These and several
other Ô¨Åxes make the Eclipse attacks infeasible to adversaries
with botnets. Interested readers are encouraged to refer to the
Eclipse attack paper [29].
III. OVERVIEW OF THE EREBUS ATTACK
In this section, we present an overview of the EREBUS
attack, beginning with the threat model we consider in this
paper (¬ßIII-A). We then introduce a naive version of the
EREBUS attack to introduce the main intuition of the attack
(¬ßIII-B) and then describe its full version (¬ßIII-C). Finally, we
summarize the three main attack properties that differentiate
our attack from previous attacks (¬ßIII-D).
A. Threat Model
Similar to the Bitcoin hijacking attack [3], we consider
a network adversary who has full control of a single AS
network, which we call an adversary AS. The adversary may
arbitrarily insert/modify/remove/delay any messages traversing
her network. Note that typical nation-state adversaries may
have such network capability [32]. The adversary‚Äôs goal is to
control all the peer connections of a target node in the Bitcoin
peer-to-peer network. We target around 10K Bitcoin nodes that
accept incoming connections. Bitcoin nodes that do not accept
incoming connections due to the lack of public IP interface
(e.g., nodes behind network address translations (NATs) or
connected via Tor bridges) are out of the scope of our attack.
Moreover, we consider that the targeted Bitcoin nodes have
reliable IP addresses during the entire attack execution period.
We assume that the main targets of Bitcoin partitioning attacks
would be well-known and inÔ¨Çuential nodes (e.g., gateway
nodes of popular mining pools) that would operate reliably
with stable IP addresses. Note that even when a targeted
node changes its IP address (e.g., DHCP), our adversary can
identify the same node with a different IP via the Bitcoin node
Ô¨Ångerprinting technique [10].
We assume that a Bitcoin node can be attacked by only one
adversary at any given time. When two or more adversaries
concurrently attack the same node, the attack success rates
may drop due to their competition. We leave the analysis of
such attack scenarios for future work.
B. Naive EREBUS Attack
Our network adversary, a malicious AS (e.g., AS M in
Figure 1), targets a benign Bitcoin node as a victim (e.g.,
a node in AS V in Figure 1). Since the adversary may not
be on the path of the original peer connections of the victim
node (see the dashed blue arrows), the attack goal is to force
the victim node to connect to other benign Bitcoin nodes (e.g.,
nodes in AS C or D) so that the changed peer connections (see
the solid red arrows) of the victim node traverse the adversary
AS. Note that the new Bitcoin peer nodes for the victim should
be chosen carefully so that the victim-to-node route (e.g., V -
to-D route) includes the attacker AS M as in Figure 1. The
adversary repeats this until it serves all the peer connections
of the victim node. As a natural man-in-the-middle network of
the peer connections of the victim node, the adversary AS now
can insert/modify/remove/delay any Bitcoin messages that are
delivered to the victim node from the Bitcoin peer nodes of
her choice, effectively controlling the victim node; i.e., the
attack goal is achieved!
Technical challenges. Though intuitively appealing, imple-
menting the naive EREBUS attack in practice is quite chal-
lenging due to several limited and unknown attack capabilities.
First, there may not exist a sufÔ¨Åcient number of benign Bitcoin
nodes (such as nodes in AS C or D) whose communication
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:22 UTC from IEEE Xplore.  Restrictions apply. 
896
paths to a victim node happen to include the adversary AS.
Notice that currently a Bitcoin node may have up to 125
peering connections [11] and, thus, we need 125 or more
such Bitcoin peer nodes in the right locations for a reliable
attack. Second, even if a sufÔ¨Åcient number of such Bitcoin
peer nodes exist, it is still hard to inÔ¨Çuence the peer selection
of any Bitcoin node, especially, after several countermeasures
have been deployed to thwart the Eclipse attack [29].
C. Full EREBUS Attack
From the high-level intuition of the naive version, we now