ICNAAMheaderwillbeprovidedbythepublisher
Verifying the Termination of Workflows
Glo´riaCravo∗andJorgeCardoso
DepartamentodeMatema´ticaeEngenharias,UniversidadedaMadeira,9000-390Funchal,Portugal
Received25June2006,revised25June2006,accepted25June2006
Keywords Graphs,ClassicalPropositionalLogic,Workflows,ProcessModeling,BusinessProcesses.
Subjectclassification 03B05,05C20,68R10
Inthispaperwedescribethebehaviorofworkflowsusinggraphtheoryandlogic.Aworkflowisanabstraction
of a business process that consists of one or more tasks to be executed to reach the goal or objective of the
businessprocess. Graphsareaformalnotationthatmaybeusedforrepresentingbusinessprocesses. Weuse
propositionallogictodescribeallpossiblemodelsorcasespresentinaworkflow. Weconcludethepaperby
studyingtheterminationofworkflows,averyimportantpropertythatallowsustoverifyunderwhichconditions
abusinessprocessfinishesitsexecution.
Copyrightlinewillbeprovidedbythepublisher
1 Introduction
Inthispaperweusemathematicaltools, suchasgraphtheory[10]andconceptsoflogic[16], toapproachand
solveaproblemfromcomputerscience.
Currently,systemsandinfrastructuresarebeingdevelopedtosupportWebservices,thatcanbeintegratedas
partofworkflowprocesses. Aworkflowistheformaldefinitionofaprocessusedtomanagebusinessprocesses
[3], that consists in one or more tasks to be executed. The tasks are represented with vertices and the partial
orderingoftasksismodeledwitharcs,knownastransitions.
Workflows have been successfully deployed to various domains, such as bio-informatics [7, 11], healthcare
[4],thetelecommunicationsindustry[14],themilitary[12],andschooladministration[6].
Inthelastdecade,importantadvancementshavebeenaccomplishedintheimplementationofworkflowsys-
temsandinthedevelopmentoftheoreticalfoundationstoallowworkflowmodeling, verification, andanalysis.
AnumberofformalframeworkshavebeenproposedforworkflowmodelingsuchasStateandActivityCharts
[15],Graphs,Event-Condition-Actionrules[8,9],PetriNets[1,2],TemporalLogic[5]andMarkovchains[13].
Theuseofdirectedgraphstomodelthecontrolflowofworkflowshasbeenthemainformalismusedinworkflow
systemsimplementation(e.g. METEOR-S,TIBCOWorkflow,andStaffwareProcessSuite).
In this paper we present a formal framework, based on control flow graphs theory. We also establish three
importantrulesthatallowustodescribeallmodels(i.e.,simplepartsoftheworkflow)presentintheworkflow.
Finally,westudyaveryimportantpropertyofworkflows,theirlogicaltermination. Ourmainresultdescribesa
necessaryandsufficientconditionforthelogicalterminationofaworkflow.
2 LogicalTermination
In our approach we model workflows with tri-logic acyclic directed graphs. This type of graphs has an in-
put/output logic operator associated with each vertex of the graph. We start by giving a formal definition of a
workflowstructure. Thesemanticsoftheseverticesarewell-knownandhavebeenwidelyused.
Definition 2.1 A workflow is a tri-logic acyclic direct graph WG = (T,A), where T = {t ,t ,...,t } is
1 2 n
a finite nonempty set of vertices representing workflow tasks. Each task t (i.e., a vertex) has an input logic
i
operator(representedbyt )andanoutputlogicoperator(representedbyt ≺). Aninput/outputlogicoperator
i i
canbethelogicalAND(•),theOR(⊗),ortheXOR-exclusive-or-(⊕). ThesetA={a ,a ,a ,a ,...,a }
  1 2 m
∗ Correspondingauthor:e-mail:PI:EMAIL,Phone:+351291705150,Fax:+351291705199
Copyrightlinewillbeprovidedbythepublisher
2 G.CravoandJ.Cardoso:VerifyingtheTerminationofWorkflows
isafinitenonemptysetofarcsrepresentingworkflowtransitions. Eachtransitiona ,i ∈ {1,...,m},isatuple
i
(t ,t )wheret ,t ∈ T. Thetransitiona isatupleoftheform(,t )andtransitiona isatupleoftheform
k l k l  1 
(t ,). Thesymbolsandrepresentabstracttaskswhichindicatetheentryandendingpointoftheworkflow,
n
respectively. Weusethesymbol toreferencethelabelofatransition,i.e.,a referencestransitiona ,a ∈ A.
i i i
Theelementsa arecalledBooleantermsandformthesetA.
i
Aworkflowstartsitsexecutionwhentransitiona isenabled. Thetransitioncanbeenabledexplicitlybya
userorimplicitlybyanexternalevent.
Atransitionisenabled/disablediftherespectiveBooleantermisassertedtobetrue/false. Thus,theworkflow
startsitsexecutionbyassertinga tobetrue.
Definition2.2 Theincomingtransitionsfortaskt ∈T arethetuplesoftheforma =(x,t ),x∈T,a ∈A,
i j i j
andtheoutgoingtransitionsfortaskt arethetuplesoftheforma =(t ,y),y ∈T,a ∈A.
i l i l
Definition 2.3 The incoming condition for task t ∈ T is a Boolean expression with terms a ∈ A, where
i
aisanincomingtransitionoftaskt . Thetermsa areconnectedwiththelogicaloperator t . Theoutgoing
i i
conditionfortaskt ∈T isaBooleanexpressionwithtermsa ∈A,whereaisanoutgoingtransitionoftaskt .
i i
Thetermsa areconnectedwiththelogicaloperatort ≺. Ifthetaskhasonlyoneincoming/outgoingtransition
i
thentheconditiondoesnothavealogicaloperator.
Definition 2.4 Given a workflow WG = (T,A), an Event-Action (EA) model for a task t ∈ T is an
i
implication of the form t : f  f , where f and f are the incoming and outgoing conditions of task t ,
i E C E C i
respectively. ForanyEAmodelt :f f ,f andf havealwaysthesameBooleanvalue.
i E C E C
Remark2.5 Theexpressionsf andf arelogicallyequivalent.However,weusethesymboltorepresent
E C
thisequivalence,whichissuggestivetoindicatetheflowintheworkflow.
Remark 2.6 For any EA model t : f  f , its behavior has two possible distinct modes: when f is
i E C E
evaluated to true and when f is evaluated to false. In the first case, its outgoing transitions are enabled or
E
disabledinsuchwaythattheoutgoingconditionistrue. Inthesecondsituation,taskt disablesallitsoutgoing
i
transitionsandconsequentlyf becomesfalse.
C
The symbol ↔ is used in the followingway: S ↔ S means that the compound statements S and S are
1 2 1 2
logicallyequivalent,usingsubstitutionrulesfromtheLawsofLogic.
NotethataworkflowhasasmanyEAmodelsastasks. WhenEAmodelsarecombined,newmodelscanbe
derived,basedontheirBooleanexpressions. Thecreationofnewmodelscanbeaccomplishedwiththelogical
implicationofEAmodels. Thefollowingrulesallowustocreatenewmodelsbasedonexistingones.
Theorem2.7 TransitivityRule: LetWG = (T,A)beaworkflow. SupposethattheEAmodelsf  f
Ei Ci
andf f hold. Iff ↔f ,thenthemodelf f alsoholds.
Ej Cj Ci Ej Ei Cj
Corollary2.8 LogicalImplicationofEAmodels: LetWG = (T,A)beaworkflow. SupposethattheEA
modelsf f andf f hold. Thenthemodelf f alsoholds.
A B B C A C
Theorem2.9 RightPartialTransitivityRule: LetWG=(T,A)beaworkflow.