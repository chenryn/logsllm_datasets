**容器catalina**
Tomcat是一个由一系列可配置的组件构成的WEB容器，而catalina是tomcat的servlet容器
Catalina
是servlet容器实现，包含了所有的容器组件，它通过松耦合的方式集成coyote(连接器)，以完成按照请求协议进行数据读写，同事还包括启动入口、shell程序等
![](media/image1.png){width="7.602392825896763in"
height="4.267547025371829in"}
源码结构如下：
![](media/image2.png){width="3.884931102362205in"
height="3.2391786964129485in"}
Catalina结构
![](media/image3.png){width="5.661167979002625in"
height="3.082191601049869in"}
![](media/image4.png){width="6.218261154855643in"
height="2.346963035870516in"}
Container
![](media/image5.png){width="6.0in" height="2.51875in"}
![](media/image6.png){width="6.0in" height="1.8256944444444445in"}
配置文件Server.xml
\
\
> \
>
> \
>
> \ #引擎
\ #虚拟主机或者一个站点
> \\ #表示一个web应用
>
> \
>
> \
\
\
请求处理流程：
Mapper组件：将用户请求的URL定位到一个servlet，
Mapper工作原理是：mapper组件里保存了web应用的配置信息，就是容器组件与访问路径的映射关系，好比如host容器里配置的域名、Contex容器里的web应用路径，以及wrapper容器里的servlet映射的路径，你可想象这些配置信息就是一个多层次的Map。
一个请求过来时，Mapper组件通过解析请求URL里的域名和路径，再到自己保存的Map里去查找，就能定位一个servlet，一个请求URL最后只会定位到一个Wrapper容器，也就是一个servlet。
![](media/image7.png){width="7.1982524059492565in"
height="3.3283584864391953in"}.
Tomcat配置安全：
1.  删除webapps目录下所有的文件，禁用tomcat管理界面
2.  注释或删除tomcat-users.xml文件内的所有用户权限
3.  更改关闭tomcat指令，或者禁用，
> ![](media/image8.png){width="6.0in" height="2.0319444444444446in"}
>
> 测试步骤：telnet tomcat服务器地址
> 8005端口，输入SHUTDOWN即会关闭这个tomcat服务器
4.  定义错误页面
> ![](media/image9.png){width="6.0in" height="2.6527777777777777in"}
Tomcat应用安全：
![](media/image10.png){width="6.0in" height="0.6in"}
Tomcat传输安全：
![](media/image11.png){width="6.0in" height="2.2715277777777776in"}
![](media/image12.png){width="6.0in" height="2.767361111111111in"}