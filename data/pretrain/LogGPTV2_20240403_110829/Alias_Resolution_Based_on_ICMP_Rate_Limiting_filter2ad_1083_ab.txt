1% of the interfaces. All the parameters of our probing strategy are empirically
determined. Section 5 elaborates on the ethical considerations associated with
the probing scheme.
3.2 Generating Interface Signatures
A signature based on the loss traces of individual interfaces is obtained by prob-
ing the seed interface at its target rate (rs) while simultaneously probing each
candidate interface at the low rate of Rc pps. Probing a large number of candi-
date interfaces in each round may lead to a better eﬃciency, but the aggregate
probing rate should remain low so that it does not independently trigger ICMP
rate limiting even if all those candidates are in fact aliases. To address these
two constraints, we set the number of candidate interfaces that are considered
in each round to 50 and Rc to 10 pps. In an unlikely scenario that all of these
50 candidate interfaces are aliases, this strategy leads to a 500 pps probing rate
Alias Resolution Based on ICMP Rate Limiting
237
Table 2. Selected features for a Signature.
Seed
s
Candidate
c
Control
κs
Control
κc
High probing rate
loss trace
High probing rate 
derived loss trace
x
x
Low probing rate loss 
trace
x
x
x
x
Loss rate
Change point
gap → gap transition
probability
burst → burst
transition
probability
Pearson correlation
coeﬃcient
x
x
x
x
x
1
0
0
1
1
1
1
1
0
0
1
0
2
1
4
1
1
0
Fig. 2. Mapping between loss traces with
diﬀerent length.
for the corresponding router that does not trigger ICMP rate limiting in 90% of
routers, as we showed in the left plot of Fig. 1.2
Control Interface. In order to distinguish the observed losses in the loss traces
for the target interfaces (i.e., seed s and individual candidate c) that are not
related to ICMP rate limiting, we also consider another interface along the
route to each target interface and concurrently probe them at a low rate (10
pps). These interfaces are called the controls, κs and κc. The control κi for tar-
get interface i is identiﬁed by conducting a Paris Traceroute [6] towards i and
selecting the last responsive IP address prior to i.3 The loss rate for κi also forms
part of i’s signature. In practice, the controls are identiﬁed at the beginning of
the Limited Ltd. procedure by conducting route traces to all IP addresses in
the input set S. This corresponds to controls() and K is the resulting set of
controls.
Inferring Alias Pairs. The above probing strategy produces a separate loss
trace for each interface. We have found that when losses occur simultaneously
at pairs of alias interfaces, they can do so in multiple ways, as the ﬁve examples
in Fig. 4 illustrate. The black and white strokes in each trace correspond respec-
tively to received and lost ICMP Echo Replies, and their varied patterns defy
attempts to ﬁnd simple correlations. We therefore use a machine learning clas-
siﬁer to identify pairs of aliases. It is based on the following features extracted
from loss traces that, intuitively, we believe capture the temporal pattern of the
losses in each trace. (See also Table 2.)
1. Loss rate: This is simply the number of losses in the trace divided by the total
number of probes in the trace.
2 The largest reported alias set by Midar and Speedtrap has 43 interfaces. Therefore,
the likelihood of observing 50 candidate interfaces that are all aliases is low.
3 Limited Ltd. maintains the ﬂow ID necessary to reach κs in subsequent probing of
s and κs.
238
K. Vermeulen et al.
Fig. 3. CDF of the TTL distance from
the Limited Ltd. vantage point of the
IP addresses belonging to an alias set
in our training data.
Fig. 4. Raw times series of loss traces
of pairs of aliases.
2. Change point detection: This is the point in a time series (such as our loss
traces) when the probability distribution of a time series changes [5]. We
adopt a method based on the variation of the mean and the variance [27].
3. Transition probabilities: These are obtained by using each loss trace to train
a Gilbert-Elliot two-state Markov model, in which losses occur in the burst
state and no losses occur in the gap state. The P(gap → gap) and P(burst →
burst) transition probabilities are suﬃcient to fully describe the model since
other two probabilities can be easily calculated from these. For example,
P(gap → burst) = 1− P(gap → gap).
4. Correlation coeﬃcient: The Pearson correlation coeﬃcient between the two
loss traces is used as a measure of similarity between them. Calculating this
coeﬃcient requires both time series to have the same number of values but
our loss traces do not meet this condition since we use a higher probing rate
for the seed. To address this issue, we condition the seed’s loss trace to align
it with the loss trace of other interfaces as shown in Fig. 2. In this example,
the length of the loss trace of the seed is four times longer than the ones from
the other interfaces. We consider groups of four consecutive bits in the seed
loss trace and convert it to the sum of the 1’s. The resulting loss trace has a
lower rate and can be directly correlated with other loss traces.
3.3 Classifying the Signatures
We use the random forest classiﬁer from the scikit-learn Python machine
learning library [33]. If it identiﬁes two interfaces as aliases based on their signa-
tures, classify() returns true; otherwise, false. There are several challenges
to building such a classiﬁer: (1) it must learn from training data that represents
the diversity of possible loss traces generated by pairs of aliases; (2) it should
be able to distinguish between losses triggered by ICMP rate limiting and unre-
lated losses; (3) it should have a high precision, so that Limited Ltd. minimizes
false positives; and (4) if the training data come from other alias resolution tech-
niques, such as Midar and Speedtrap, it must be able to generalize to pairs that
they cannot ﬁnd. We tackled these challenges as follows.
Alias Resolution Based on ICMP Rate Limiting
239
Training and Testing Data. We have access to ground truth router-level
topology for two networks, Internet2 and Switch, but these do not suﬃce to
capture the richness of router behaviors in the Internet as a whole. We therefore
randomly selected routable IPv4 and IPv6 preﬁxes from the RIPE registry [3],
and conducted multipath Paris Traceroute [41] from PlanetLab Europe [1] nodes
towards the ﬁrst address in each preﬁx. This procedure yielded 25,172 IPv4
addresses in 1,671 autonomous systems (ASes) and 18,346 IPv6 addresses in
1,759 ASes from 6,246 and 4,185 route traces, respectively. We use Midar and
Speedtrap to identify IPv4 and IPv6 alias sets, respectively, since both tools are
known to have low false positive rates. Pairs of interfaces from these sets are
used as labeled as true. For the false labels, we take the conservative approach
of selecting pairs of IP addresses that are more than 6 hops from each other in a
given route trace. The 6 hop value is empirically set, as 99.9% of the alias pairs
identiﬁed by Midar and Speedtrap are fewer than 6 hops apart. This labeling
process identiﬁed 70,992 unique IPv4 and 7,000 unique IPv6 addresses. 15,747
of IPv4 and 1,616 IPv6 addresses are labeled as aliases forming 2,277 IPv4
and 1,099 IPv6 alias sets, respectively. Figure 3 shows the CDF of hop count
distance between our vantage point and selected IP addresses and indicates that
these targets are 7–17 hops away from the vantage point. For each alias set, one
address is chosen at random to play the role of the seed s, and the candidate
set is composed of all of the other aliases in the set that are rounded up with
some randomly selected non-aliases to make a Cs of size between 2 (minimum
one alias and one non-alias) and 50 (our cap for the number of addresses to be
simultaneously probed at a low rate). The high rate rs at which to probe the
seed is found through find rate(s), and the signatures are generated through
signatures(s, rs, Cs, K).
Note that while our classiﬁer is trained on alias sets identiﬁed by alias reso-
lution techniques with known limitations, it is nonetheless able to identify new
alias sets. We argue that this is because the training set is suﬃciently rich due
to its size and random selection of interfaces, providing considerable diversity
and heterogeneity of loss traces across aliases. Our evaluation in Sect. 4 conﬁrms
this observation and conﬁrms the ability of our technique to generalize patterns
in the training dataset, i.e., the fourth aforementioned challenge.
Choice of Classiﬁer. We compared the performance of four classiﬁers that
scikit-learn library oﬀers, namely random forest, multilayer perceptron, k-
nearest neighbors (KNN), and support vector machines (SVM). To this end, we
evenly divided our dataset into a training and a test set, and compared these
classiﬁers based on their precision, recall, and F1 score for both IPv4 and IPv6
datasets. Since true labels are only provided from aliases identiﬁed by Midar
and Speedtrap, the recall values correspond to the portion of pairs of aliases in
our training set that are detectable by both Midar and Limited Ltd. (IPv4) or
by both Speedtrap and Limited Ltd. (IPv6). Table 3 presents the averaged result
of this comparison after performing 10 randomized splits of the training and test
sets. All classiﬁers exhibit relatively good performance. We have decided to use
240
K. Vermeulen et al.
Table 3. Classiﬁer performance on our test
set averaged over ten training/testings.
IPv4
IPv6
Precision Recall F1 score Precision Recall F1 score
0.990
0.499
0.652
0.992
0.647 0.782
0.993
0.431
0.591
0.978
0.641 0.769
Random
forest
Multilayer
perceptron
KNN
SVM
0.952
0.986
0.638
0.764
0.478
0.642
0.970
0.988
0.622 0.756
0.599 0.743
Table 4. The ﬁve most important
features of our random forest clas-
siﬁers.
Gini index
IPv4 IPv6
Feature
loss rate for the candidate c 0.169 0.192
burst → burst transition
probability for the
candidate c
burst → burst transition
probability for the seed s
0.113 0.125
0.101 0.121
Pearson correlation
coeﬃcient
loss rate for κc, the control
of the candidate c
0.091 0.109
0.077 0.104
the random forest classiﬁer, which is composed of 500 trees, as it has the highest
precision for both IPv4 and IPv6, and the best F1 score for the IPv6 dataset.
Finally, Table 4 shows the ﬁve most important features of our random forest
classiﬁers based on the Gini index [8] that describes the weight of individual
features in the classiﬁer’s decision. This table reveals a few important points.
First, no single feature dominates the classiﬁer’s decision, particularly for IPv6.
This conﬁrms the complexity of the patterns for relating loss traces of aliases,
as they cannot be accurately learned by a small number of features or simple
threshold-based rules. Second, this table also illustrates that most of our engi-
neered features are indeed very important in distinguishing loss traces of aliases.
Third, the use of κc as one of the main features suggests that the classiﬁer
distinguishes losses related to rate limiting from other losses.
3.4 Reﬁning the Alias Set
Independent network loss could accidentally result in classifying unrelated inter-
faces as aliases, i.e., generating false positives. To reduce the chance of this,
Limited Ltd. incorporates a reﬁnement step, refine(As), that involves repeat-
ing signature() and classify() on the previously-identiﬁed alias set As. If a
candidate c fails to be (re)classiﬁed as an alias of the seed s, it is removed from
the alias set. This step is repeated until the alias set remains unchanged over
two iterations. Section 4 evaluates the resulting reduction of false positives.
4 Evaluation
We evaluate Limited Ltd. with regards to its ability (i) to identify alias pairs
that state-of-the-art techniques, namely Midar and Speedtrap, are unable to
identify, and (ii) to maintain a low rate of false positives.
Alias Resolution Based on ICMP Rate Limiting
241
Table 5. Evaluation on ground truth networks.
IPv4
Midar ltd ltd Midar ∪ ltd ltd Speedtrap ltd ltd Speedtrap ∪ ltd ltd
IPv6
Internet2 Precision 1.000
1.000
1.000
Recall
0.673
0.800
0.868
Switch Precision 1.000
1.000
1.000
Recall
0.090
0.499
0.599
N/A
N/A
1.000
0.384
1.000
1.000
0.684
0.684
1.000
1.000
0.385
0.772
Dataset. We evaluate Limited Ltd. on ground truth data from the Internet2
and Switch networks. For Internet2, router conﬁguration ﬁles were obtained on
10 April, with measurements conducted on 11 and 12 April 2019. There were