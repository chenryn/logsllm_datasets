因为varchar类型长度大于255，因此这里要用3字节存储值的长度。
但超过了就失败。
（2）UTF8字符集
计算公式：（65535-2）/2=32766.5，也就是说不能大于32767。
因为varchar类型长度大于255，因此这里要用2字节存储值的长度。
(id int,usernamevarchar(20),phonebigint,addressvarchar(32766))charset=gbk;
createtableinfo
（id int,usernamevarchar(20),phonebigint,addressvarchar(N))
同样创建一张表，
ah
info{id int,username varchar(20)，
L
国
ETtorR
，表里采用utf8字符集，可以看到，字段v设置为21844可以正常创
BErBe
The
图5-21创建表字符集为utf8
富
图5-20创建表gbk字符集
图5-22建表
oho
size for the used table type, not counting BL0Bs, is 65535. You have
igi
nt.,
he
addreas
Ised
。而在这个info表中：id
et.
-gbk
BLOBs,ia 65535. You have
---
## Page 155
YEAR，表5-8列出了各种数值类型以及它们的允许范围和占用的内存空间。
5.2.3
临时表尤其不好，所以只分配真正需要的那部分空间即可。
要先在内存中分配固定的空间来保存值，这无形中就浪费了内存，而且对表的排序或使用
一些，为今后的扩展先预留出来。
varchar(20)或varchar(100)存储'abc'字节都会一样，那我干脆在设计表时就把值定义得大
char(32)，这样相比于varchar，还节省空间，因为varchar还要用1字节存储值的长度。
度是固定不变的，或者是md5加密后的32位长度的字符类型，那么可以设置为char(36)和
用varchar相对比较合适，因为它只存储字符串实际的长度。
也就是不能大于21820，0K！我们来验证一下，如图5-24所示。
依据上面的计算公式，得出address的最在长度是：（65535-4-20×3+1-8-2）/3=21820，
Datetime
Time
Date
数据类型
对于这个问题，虽然两者存储的空间是一样的，但二者的性能完全不一样，MySQL需
而对于固定长度的值，比如uuid函数，是数字和字母组成的36位长度的字符类型，
在MySQL中支持的5个时间类型是DATE、TIME、DATETIME、
我的前同事问过我这么一个问题：既然varchar只存储字符串实际的长度，那么使用
经常变化的值，如家庭住址，由于每个人地址都不同，
下面采用UTF8字符集来看看该例的情况，同样创建相同的info表，字符集为utf8,
adress varchar(32739)，顺利创建成功！
2.在什么情况下使用char和varchar
跟我们预期完全一致。
时间类型
table infol （id int.
.00-00-0000.
0000-00-0000:00:00'
'00:00:00
Row sizetor BarBe
Tle
cha
存储的字节
(20),
3字节
20
8字节
3字节
(20
表5-8
图5-24建表
图5-23建表
i2e
时间类型
timestamp
数据类型
Year
ha
有的地址很长有的很短，那么
0000
0000-00-0000:00:00'
l8l9)charset-utf8
rse
值
t=gbk
第5章性能调优·141
、TIMESTAMP和
存储的字节
4字节
1字节
长
---
## Page 156
142
·第二部分故障诊断与性能优化篇
timestamp还具有自动更新时间功能，
占用8字节，而timestamp只占用4字节，在日常建表时应优先选择timestamp类型。
首先，建立一张表，命令如下：
MySQL提供了5种时间类型，datetime和timestamp都可以精确到秒，但datetime
当更新id字段，ctime的时间也会自动更新。
此时ctime字段会自动插人当前的时间，如图5-26所示。
然后只针对id插人值，其查询结果如图5-25所示。
QueryOK,0rowsaffected(0.20sec)
mysql>createtablet1(idint,ctimetimestamp);
mysql> select * from tl;
Rows matched:1
Query OK,
mysql> select * from tl:
row in set (0.00 sec)
row in set (0.00 sec)
id
id
mysql> seleet * from tl:
Empty set (0.00 sec)
12013-06-0222:05:09
mysql> select *from tl;
row in set (0.00 sec)
N
id
图5-26ctime字段自动更新时间
ctime
2013-06-0222:08:43
ctime
2013-06-02 22:05:09
ctime
，下面来给大家演示一下。
图5-25
查询结果
---
## Page 157
都不会自动更改ctime字段为当前时间，如图5-27和图5-28所示。
当前时间，应该怎么办呢？timestamp在默认的情况下是：
那么只需更改默认值为空，这样就跟datetime类型完全一样了。插人、更新完毕后，
可能有人看到这里会有疑问，我的业务需求并不是这样的，我不想让系统自动更新为
DEFAULTCURRENT_TIMESTAMPONUPDATECURRENT_TIMESTAMP
mysql> select * from tl:
mysql> select*from tl
Records:2
mysql>alter table tl modify ctime timestampNULL
rows in set (0.00 sec)
rows
id
P!
mysql> select *from tl:
mysql>update tl set id=id+10:
3
Rowsmatched:3Changed:3
Query 0K,3rows affected(0.00 sec)
rows in set (0.00 sec)
in set (0.00 sec)
ctime
2013-06-02 22:08:43
ctime
2013-06-02
2013-06-02 22:08:43
Duplicates:0
图5-27修改timestamp默认值
ctime
2013-06-02
2013-06-02
图5-28时间未自动更新
22:40:29
22:08:43
NULL
Warnings:
NULL
：29
Warnings:0
第5章
性能调优·143
---
## Page 158
144·第二部分故障诊断与性能优化篇
插人时间和自动更新时间。
有自动插人时间和自动更新时间。
是相应的演示内容。
传统理念，以上条件均可以出现，并且 datetime类型也拥有了timestamp类型的功能。以下
一个字段既拥有自动插人时间，又拥有自动更新时间。但从MySQL5.6开始，打破了这一
图5-31和图5-32是MySQL5.6的timestamp类型，
在MySQL5.5（或更老的版本MySQL5.1）里，对于timestamp类型，一个表里只允许
1.在MySQL5.6中，时间类型timestamp和datetime有了重大改变
mysql> update time set id=id+10:
mysql> select* from time;
Rows matched:2Changed:2
mysql> select *from time
mysql> insert into time(id) values(1),(2);
Query OK,0 rows affected (0.04 sec)
mvsql> create table time （id int,t timestamp,t2 timestamp)
mysql>
1 row in set (0.00 sec)
rows in set (0.00 sec)
id
5.5.20-enterprise-commercial-advanced-log
id
version()
11
select
2012-09-26 12:23:41
2012-09-26 12:23:08
C012-09-26 12:23:08
2012-09-26 12:23:41
version)
图5-30单个字段自动更新时间
图5-29单个字段自动插人时间
0000-00-0000:00:00-
0000-00-00 00:00:00
sec)
0000-00-00 00:00:00
t2
一个表里可以有多个字段拥有自动
---
## Page 159
所示。
ql>
MySQL5.5不支持多个字段设置为timestamp类型，如果设置就会报错，如图5-33
图5-34和图5-35是MySQL5.6支持多个字段设置timestamp类型。
in3e1(0.00sec
20
293
row in set (0.01 see)
5. 6.6-m9-1og
id
enterprise
inset （0.02 sec)
OK.
mmereia1
mysql> select * from time;
Rows matched:2Changed:2
ffec
ysql>update time set id=id+10;
id
DEFAULT
rows
time
图5-33不允许多个字段设置timestamp 时间类型
ted
dvaneed-Icg
in set (0.03 sec)
（0.09
2012-09-25 22:15:28
图5-32多个字段自动更新当前时间
图5-31
2012-09-
多个字段自动插入当前时间
estan
25
can be only one
Warnings:0
TIMESTAMPol
2012-09-25 22:15:28
with CIRRENT_TIMESTAMF in DEFAILT
TAMP)
ON
UPDATE CURRENT_TIMESTAMP,
第5章性能调优·145
---
## Page 160
146
●第二部分故障诊断与性能优化篇
Juery-
vsqlselect *from
rows in set (0.02 sec)
cords:
591>
rowin set (0.01 sec)
5. 6. 6-m9-1og
version()
sql>
mysql> select * from time:
吴
sql> seleet *fron time
sql> insert into time（id) valuest1,（2)
insert into time(id） values(1),
ows matched:1
q1>
select
rows in set (0.02 sec)
ysql>
ry
d_time
id
2
OR,
图5-34允许多个字段设置timestamp 时间类型
图5-36
version()
Hme3tE
2012-09-25 23:37:50
图5-35
一
11
uu
time
datetime类型支持自动插人当前时间
Changed:
(0.06
多个字段自动更新当前时间
PDAT
0.07
d_time?
RRF
1
2012-09-25 23:38:01
id=2
NULL
---
## Page 161
人一条记录12，会自动转换为2012，下面请看演示。
功能。
DATETIME"
Thisrestric
参考手册：
图5-38和图5-39演示的是在MySQL5.6中，year(2)类型自动转换为year(4)。
在MySQL5.6里，对year(2)的类型已经不再识别了，会自动转换为year(4)，如果你插
2.在MySQL5.6中，year(2)类型会自动转换为year(4)
图5-36和图5-37展示的是在MySQL5.6中，datetime类型也拥有了timestamp类型的
mysql> show warnings;
mysql> CREATE TABLE y (y2 YEAR(2), y4 YEAR(4)).
1 row in set (0.02 sec)
nysql>
Field iType
row in set (0.01 sec)
Warning 1818 YEAR(2) colum type is deprecated. Creating YEAR(4) coluan instead.
Level
5.6.6-m9-1og
rows in set (0.09sec)
versionO)
ion has been lifted.
select
CodeMessage
and
mysql> select * from time;
mysql> update time set id=3 where id=2;
AnyTIMES
rows in set (0.02 sec)
ion（）
id
图5-37datetime类型支持自动更新当前时间
d_time
图5-38表结构信息
2012-09-25 23:41:07
d_time2
NULL
eanycombi