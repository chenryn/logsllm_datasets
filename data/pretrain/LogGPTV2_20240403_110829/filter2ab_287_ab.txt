安装和删除软件－－最简单的办法
.
最简单的，把这个软件包含的文件－－一般是一个可执行文件，复制到 “/usr” 当中就
可以了。复制到什么地方呢？FHS 对 “/usr” 目录中的子目录也有规定。“/usr/bin”
 是可执行文件，“/usr/lib” 是库文件，就是xxxxxx.so.1 之类的，“/usr/share” 是
不需要修改的数据，比如帮助手册，桌面图标等等。
要卸载软件，只要从“/usr” 当中把复制过去的文件删掉就可以了
复制用 cp 命令，删除用 rm 命令。小心不要误删除了有用的东西
和windows里面不太一样，不会在一个系统中安装四个或者五个QQ却仍然找不到QQ装在什么
地方。一般安装软件要用make，rpm 或者dpkg 等等方法，不用自己操心复制删除文件
.TP
进程间的关系，应当使用APUE 中的叙述
.
用ps 命令可以查看进程。用top命令可以动态地查看进程。当然，要搞清楚输出是什么意
思，需要仔细看看帮助
fg 和 bg 可以在一些进程中切换
kill 和killall 可以控制进程停止和退出
一边执行命令，一边可以到“/proc” 目录看一看。这个目录是整个系统的情况，包括硬
件和软件的信息。多练一练 “cd”，“ls” 还有 “cat”。看了足够多之后，对于ps 和
top 命令的输出就大概明白了。我认为“/proc” 是新手训练的最佳场合
.TP
fork exec 环境变量 守护进程(daemon)
.
.TP
shell 编程初步-shell,awk,perl
.
.TP
命令
.
cd ls ；cat less ；rm cp mv ln ；mkdir chmod chgrp ；
reboot poweroff ；mount umount df du ；tar make ；
fdisk parted ；vi ；man info ；
rpm apt-get apt-cache dpkg ；lilo grub modprobe ；
gcc g++ ；ps fg bg top ；
最常用的命令是不是poweroff 和 reboot ？
.TP
命令的通用选项
.
cd -
切换到上次所在的目录
cd ..
切换到上层目录
ls -lh
很多命令的参数中，“-h” 表示的是将文件大小转换为以 “MB” 和 “kB” 为单位
“-l” 是长格式，可以看到文件更多的信息
df -h
du -h
查看磁盘空间，已用多少，剩余多少
free
查看内存和交换空间使用情况。不过一般用top来看更好一些
less -isr
可以用这个命令来看看很多类型的文件的内容，包括文本文件，压缩包等等。加上参数就
能处理中文了
rm -rf
强制删除，包括目录和文件
cp -a
完全复制，保留原来文件的所有属性
cp -R
复制，包括目录和文件。默认不包括目录
ln -s
建立符号链接。符号链接的目标可以是目录或文件，也可以不存在。产生的新文件和链接
目标属性和作用完全一致。
tar zxf
tar zcf
tar jxf
tar jcf
创建压缩文件（c）和解压缩（x）
j 对应的是 .tar.bz2，而 z 对应的是 .tar.gz
fdisk -l
列出一个硬盘的分区情况。fdisk 命令交互执行更有意思
rpm -ivh
rpm -Uvh
安装一个软件包 或者升级一个软件包
rpm -qip
rpm -qpl
查询一个软件包的信息和内容
rpm -qf
查询一个文件属于哪个软件包
apt-get update
升级整个系统，但是不会强制升级一些不合规范的内容
apt-get install
安装一个软件。debian最吸引人的地方就在于容易地安装和删除软件
dpkg -i
dpkg -l
apt-cache search
如果软件名称更容易记就好了
.SS "实习"
.TP
安装X输入法
.
X 输入法一般需要两个环境变量，一个是 XMODIFIERS, 另外一个是 LC_CTYPE
比如要使用fcitx 输入法，XMODIFIERS 最好是 “@im=fcitx” （也可以是其他值），LC
_CTYPE 是一个locale 类型的变量，其中的国家代码必须是zh，语言代码和编码倒是无所
谓再比如要使用scim 输入法，XMODIFIERS 应当是 “@im=scim” , LC_CTYPE 在输入
中文时同上，输入其他文字时可以是其他国家代码。
当然，如果你的系统中连中文字体都没有，就不要指望有中文输入法了。
因为不同的进程有自己独特的环境变量设置，所以完全可以在同一个窗口系统的不同应用
程序中使用各种输入法，只要在启动应用程序之前先设置 XMODIFIERS 就可以了。
安装X输入法最困难的是如何使输入法可以随着X窗口系统而启动和退出。不同的发行版有
不同的运行输入法的方法，比如redhat/fedora 可以修改 “/etc/X11/xinit/xinit.d/xi
nput” 文件
.TP
安装终端的中文环境
.
.TP
遍历 /proc 目录
.
.TP
安装软件 查询软件包
.
.TP
配置文件，fstab lilo.conf grub.conf XF86Config
.
.TP
配置lilo 或者 grub, 问题修复
.
建议找一个好一点的lilo.conf 或者 grub.conf 看一看，至少是能用的配置文件看一看，
然后再着手进行修复工作。有可能需要手动从头开始写一个配置文件
确定真的弄清楚了硬盘分区情况了吗？在BBS上求助时，一定要把分区情况和配置文件，还
有导致出错的步骤都贴上来
精华区lilo 和grub 目录都各有上百篇帖子，讲述安装和修复的过程
.TP
mount
.
mount 命令用于将一个设备挂载到一个目录上，然后就可以访问其中的文件了。
mount 命令可选的参数非常多，但是要想正确挂载一个设备，必须搞清楚一些事情
例如：
	mount /dev/sda1 /mnt/u-disk/sda1 -t vfat -o defaults,users
其中，USB移动硬盘设备对应的设备文件名是 “/dev/sda1”。如果设备文件名
搞错了，那么挂载肯定会出错。很多出错都是因为 “/dev/sda1” 对应的设备
根本不存在
-o 可以指定的选项非常多，不同的文件系统都有自己特定的选项。常用的就是
users iocharset fmask dmask rw/ro 这一些。iocharset 是自己的编码，在挂载
windows 网上邻居的目录时，iocodepage 是对方的编码。
看帮助，man mount 非常长。常见的/etc/fstab中的一行是这样：
      /dev/hda1    /mnt/harddisk/C vfat defaults,users,umask=0 0 0
如果是kernel-2.6 那么还可以加上fmask=111,dmask=0 来控制权限
.TP
安装X字体
.
非常简单。字体有两个系统，一个是旧一点的X系统，一个是新一点的Xft2系统。要想在两
个系统中同时使用某个字体，需要将这个字体复制到某个“/usr/local/share/fonts” 的
子目录中去，然后在 “/etc/X11/fs/config” 中加入这个目录，最后执行 “fc-cache 
-fv” 刷新字体列表，“service xfs restart” 就可以了
不同的系统中，完成这几个步骤的具体执行的命令可能不一样。复制字体应该都一样，然
后可能需要将这个目录加入到 “/etc/X11/XF86Config” 当中去，最后也有可能需要重启
动图形系统。要灵活一点
.TP
配置latex 和 ps 系统
.
.TP
分区，重新安装系统
.
这里是实践部分。硬盘分区，常见的分区方法是一个主分区，一个扩展分区，然后在扩展
分区中可以划分很多很多逻辑分区。也有分区方法是划分两个主分区，例如IBM的系统还原
分区，还有dell也是这样。
为linux系统分区可以只分一个swap分区和一个 “/” 分区。swap分区大小三五百M就可以
了。而 “‘/’ 分区” 的说法只是为了方便，意思是将某个分区作为 “/” 目录来使用
。类似的，如果安装程序要划分 “‘/boot’ 分区”，那么也是将某个分区作为 “/boo
t” 目录来使用。
任何一个目录都可以单独划为一个分区，例如可以将 “/usr/local” 目录单独划为一个
分区，这样把数据放在里面，重装系统时不会被删除掉。
高级的lvm和lvm2 只在大硬盘上才有用
.SH "HISTORY 历史"
.IX Header "背景介绍"
版上讨论了很久是不是要提高技术性了。的确，大部分入门级问题在
从前的帖子中都有涉及，精华区中大概也有答案，重复地提问“将有价值
的论题淹没了”。
.PP
    要提高技术水平，就要找到更多的论题和提出更好的想法。但是，鲁
迅先生说得好，要有“天才的土壤”才行。所以，对于新手问题也不能封
杀。一种设想，是请几位熟练的使用者专人负责某一个方面的问题，用信
件联系，然后把有价值的讨论结果发上来。但是，这样效率不高。
.PP
    我想试行一下这样的做法，就是入门级问题以及解答就跟在这个帖子
后面，过一段时间就清理一下，总结到一篇文章中。请大家配合。暂时设
定精华区的第19个目录和第29个目录分别用作已解决/未解决问题的保存
之处。
.PP
    后续的第二篇帖子是一些快速解答，可以在firefox 的搜索栏中使用
“页面内搜索”功能来查找关心的内容。
.PP
    欢迎修改
.
.SH Copyright
Permission is granted to copy, distribute and/or modify this page 
under the terms of the GNU Free Documentation License, Version 1.2 or 
any later version published by the Free Software Foundation; with 
no Invariant Sections, no Front-Cover Texts and no Back-Cover Texts.
.SH AUTHOR
最后一次修改者：bbbush@2004年2月11日
.PP
最初的格式是txt 没有排版，没有链接
.