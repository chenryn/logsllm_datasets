### Summary of Most Severe Crashes

| Campaign | Repeatability | Injected Subsystem: Function Name | Possible Causes for Repeatable Most Severe Crash |
|----------|---------------|-----------------------------------|--------------------------------------------------|
| 1        | Yes           | fs: open_nami()                   | Error results in truncating the file size to 0. No crash is observed, but on reboot, `init` reports: "error while loading shared libraries: /lib/i686/libc.so.6 file too short." |
| 2        | No            | mm: do_wp_page()                  | Error makes the kernel reuse the page (inside the swap area), which is in use. |
| 3        | No            | fs: link_path_walk()              | Error reduces the inode size (`inode->isize`). |
| 4        | No            | fs: link_path_walk()              | Undetected error of an incomplete read of the file (data or executable) to the cache page. |
| 5        | No            | fs: sys_read()                    | - |
| 6        | No            | fs: get_hash_table()              | - |
| 7        | Yes           | mm: do_wp_page()                  | - |
| 8        | Yes           | fs: generic_commit_write()        | - |
| 9        | Yes           | mm: do_generic_file_read()        | - |

### Distribution of Crash Causes

#### Any Random Error
- **General Protection Fault:** 1.9%
- **Trap: Invalid Operand:** 4.6%
- **Unable to Handle Kernel NULL Pointer Dereference:** 34.8%
- **Unable to Handle Kernel Paging Request:** 23.3%

#### Random Branch Error
- **General Protection Fault:** 35.5%
- **Trap: Invalid Operand:** 11.1%
- **Out of Memory:** 24.2%
- **Trap: Divide Error:** 0.2%
- **Trap: Init3:** 0.2%
- **Unable to Handle Kernel NULL Pointer Dereference:** 27.3%
- **Unable to Handle Kernel Paging Request:** 36.7%

#### Valid but Incorrect Branch
- **Out of Memory:** 2.4%
- **Kernel Panic:** 0.7%
- **General Protection Fault:** 0.5%
- **Unable to Handle Kernel NULL Pointer Dereference:** 18.6%
- **Trap: Invalid Operand:** 74.7%
- **Unable to Handle Kernel Paging Request:** 3.1%

### Crash Latency in CPU Cycles

#### Any Random Error
- > 100,000 cycles
- <= 100,000 cycles
- <= 10,000 cycles
- <= 1,000 cycles
- <= 100 cycles
- <= 10 cycles

#### Random Branch Error
- > 100,000 cycles
- <= 100,000 cycles
- <= 10,000 cycles
- <= 1,000 cycles
- <= 100 cycles
- <= 10 cycles

#### Valid but Incorrect Branch
- > 100,000 cycles
- <= 100,000 cycles
- <= 10,000 cycles
- <= 1,000 cycles
- <= 100 cycles
- <= 10 cycles

### Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSNâ€™03)
- **DOI:** 0-7695-1959-8/03 $17.00 (c) 2003 IEEE
- **Authorized licensed use limited to:** Tsinghua University
- **Downloaded on:** March 19, 2021 at 07:05:58 UTC from IEEE Xplore
- **Restrictions apply.**

### Additional Information
- **Figure 6:** Distribution of Crash Causes
- **Crash Latency in CPU Cycles:** Detailed breakdown for different types of errors.

This revised version organizes the information into clear, structured tables and sections, making it more readable and professional.