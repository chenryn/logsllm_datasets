### 优化后的文本

#### 引言
Harrison等人[25]提出了一种基于NVIDIA 8800GTS的1024位RSA解密原语的GPU实现，其性能比CPU实现高出最多四倍。除了性能提升外，很少有研究关注通过GPU增强加密实现的安全性，尽管将GPU改造为最小安全计算基的想法并不新鲜。Cook等人[17]提出了一种机制，可以在GPU上仅解密一次传输加密视频。基于这一思路，我们的关键洞察是证明在GPU上执行的加密操作不仅可以提高性能，还可以通过将敏感密钥远离CPU和主机内存来提高安全性。

#### 权限分离
权限分离是一种限制以高权限执行操作数量的良好实践。应用程序应遵循最小权限原则，即每个操作都应以最低权限级别执行。Provos等人[50]展示了OpenSSH中权限分离的价值。Privman[33]提供了一个API，可用于将权限分离集成到现有应用程序中。Privtrans[15]允许通过程序员的少量注释自动集成权限分离。然而，研究表明，当分区应用程序中的受信任进程生成不受信任的子进程时，敏感数据或系统对象（如内存、环境、内存映射、文件系统信息和文件描述符）仍可能泄露[54]。

#### 受信任计算
近年来，许多研究致力于支持在敌对操作系统中进行受信任计算的系统[16, 26, 29]。这些系统旨在为任何应用程序提供通用解决方案，即使在主机被攻破的情况下也能保护计算。在这种情况下，负责加密签名消息的进程永远不会将其密钥暴露给操作系统，因此即使操作系统被攻破，加密功能仍然有效。不幸的是，这些系统要求应用程序在hypervisor中运行[16, 26]，引入了显著的性能开销，或者需要额外的硬件抽象层和操作系统的重新编译[29]。我们预计这些方法最终会整合到未来的商品操作系统中。然而，在本文中，我们寻求一种侵入性较小的方法，只需对当前商品系统进行少量修改，不支持全系统范围内的受信任计算，但可以确保敏感信息（如加密密钥）在主机被攻破时仍然保密。

#### 密钥存储
类似于我们的目的，最近的工作追求将加密密钥仅保留在CPU寄存器中，用于AES[41, 56]和RSA[21]。这样，密钥不会出现在主内存中，使冷启动攻击变得毫无意义。这些方法需要一个可信且无错误的组件，以确保对手无法攻破系统的一部分并从CPU寄存器中提取密钥。然而，具有DMA能力的对手可以通过正常DMA传输从CPU中提取密钥到目标系统的内存中[12]。

#### GPU上的数据泄漏
另一方面，许多工作讨论了在多用户或虚拟化环境中将任务卸载到GPU时的数据泄漏风险[37, 49]。Di Pietro等人[49]讨论了从特定GPU内存层次结构（共享内存和全局内存）泄漏数据的风险。他们还提到，在开发人员声明的寄存器数量超过GPU提供的数量时，寄存器内容可能会暴露；在这种情况下，GPU可以透明地使用全局内存（“寄存器溢出”[39]）。为了避免这种情况，PixelVault声明的寄存器数量与底层硬件设备提供的数量相同，并强制编译器明确通知是否发生寄存器溢出。同样，Maurice等人[37]分析了GPU全局内存的行为，表明对手可以从全局设备内存中恢复先前执行的GPGPU应用程序的数据。与这些工作不同，我们专注于提供安全存储的数据内存层次结构，防止任何泄漏。这些内存包括现代图形处理器中的硬件寄存器和指令缓存。通过仔细利用这些内存类型，并结合GPU的非抢占性执行模型（保证由于上下文切换而不会将状态存储在其他地方），我们设计了一个原型架构——PixelVault，它具有防篡改特性，并提供了安全的密钥存储环境。

#### Intel SGX
Intel最近推出了SGX（Software Guard Extensions）[27]，这是一组新的CPU指令，用于建立私有内存区域。SGX允许应用程序实例化一个受保护的容器，该容器是应用程序地址空间中的一个受保护区域，即使在存在特权恶意软件的情况下也提供机密性和完整性。SGX可以潜在地用于实现类似PixelVault的功能，使用SGX容器进行安全存储，并利用CPU的加密指令。未来，比较这两种方法的性能和特性将是有趣的。

#### 结论
我们介绍了PixelVault的设计和实现，这是一个基于GPU的系统，以一种即使在主机系统完全被攻破的情况下也能保持密钥秘密的方式实现了AES和RSA。通过利用现代图形处理单元（GPU）的能力，PixelVault安全地存储任何敏感信息，并将计算密集型的加密操作卸载到GPU上。基本思想是在GPU上完全执行加密操作，而不涉及主机或任何可由主机访问的内存（即使具有完全管理员权限）。这意味着：(a) 没有任何密钥（或密钥计划或中间状态）会进入主机可访问的内存，(b) 在执行加密操作期间，存储密钥的GPU内存不能被检查。我们的唯一要求是系统最初在一个可信环境中启动。一旦GPU存储初始化了密钥，即使在系统完全被攻破的情况下，PixelVault也能防止密钥泄漏。作为未来的工作，我们计划将我们的框架适应于其他密码和应用领域，并探索设计一个通用的GPU框架，以促进现有应用程序的权限划分。我们还计划探索如何将我们的技术应用于移动和嵌入式设备。这可能更难实现，因为我们的设计需要一个专用GPU——否则移动设备将无法正确渲染图形。

#### 致谢
我们要感谢我们的指导Roberto Di Pietro和匿名评审者的宝贵反馈。这项工作得到了希腊研究和技术总秘书处的研究卓越资助，FP7-PEOPLE-2010-IOF项目XHUNTER No. 273765，以及由欧洲委员会资助的FP7项目NECOMA和SysSec（资助协议No. 608533和No. 257007）的部分支持。

#### 参考文献
[此处省略具体参考文献列表]

---

希望这个版本更加清晰、连贯和专业。如果有任何进一步的修改需求，请告诉我！