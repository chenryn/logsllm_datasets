User: For the last several weeks, I have been making a parental controls program (just for my friend and myself), in Python (it's what I know). I used CX_Freeze to get the .exe, and it works wonderfully. Everything is great... But I need a way to make the process unkillable to standard users. (just standard users. I want admins to be able to kill this easily if need be.)
I was pursuing a method in which my .exe was turned into a windows service, thereby making it "SYSTEM" and unkillable to standard users. So far, the service cannot kill a process by using taskkill /im, and cannot create required setup .txt files.
Since that method appears to be failing, I thought I would ask if anyone knows of a way to make a process untouchable to standard users? I'm not entirely sure what professional parental controls/keyloggers/virus protection software uses to keep the user from killing the process, but perhaps something like that?
Assistant: Making it a service is probably the right way to go - because it is the best way to automatically launch a process with some admin rights.
I think the reason that your service wasn't able to kill other processes was due to the account used to run the service under. 
A service can run as system, local service, network service, or a specified account/password.
The idea here is to limit services to just be allowed to access what they need. A 'network service' service has very little access to local resources, while "local service" won't have network access. MSDN has all the details.
I don't remember offhand the details of exactly how you specify this during service registration, but I think it is pretty straightforward.
You will notice also that there is a checkbox for "Allow service to interact with the desktop".
Normally you don't want a service to directly control any UI because a UI is very hard to defend from attack - other processes could send messages which cause mischief in the service - potentially allowing them to hack the system.
I think that for your purposes, using a specific login for an admin account will suffice.
In "services.msc", it is simple enough to select your service, and enter a username/password for the service to run in.